or
out
(bad)
xor
dec
call
aas
in
cmp
sti
mov
dec
mov
and
out
cmp
(bad)
gs
rcl
mov
and
sbb
push
and
cmp
loop
js
icebp
fwait
mov
shr
js
imul
aad
retf
ffree
sbb
mov
sbb
or
loope
int3
or
retf
stos
std
jb
std
mov
ror
and
inc
and
xchg
cmp
sbb
stos
jl
ror
outs
inc
cmp
cmp
imul
dec
imul
sub
or
adc
fs
fsubr
stc
dec
xor
xchg
inc
cld
shl
mov
adc
jns
sbb
mov
icebp
or
push
or
xor
imul
dec
dec
pop
es
lds
sbb
je
ds
pop
or
xor
fist
aad
inc
arpl
not
jl
rol
mov
push
shl
call
jnp
mov
fiadd
sti
rol
fidivr
xchg
inc
mov
jle
dec
jae
inc
lea
mov
gs
cld
stc
inc
fstp
ret
data16
rol
fimul
lock
std
std
and
jo
aaa
ret
jg
adc
(bad)
lea
imul
adc
add
ja
xor
sbb
jge
jns
adc
inc
adc
pop
ret
in
and
fcom
sbb
add
or
data16
jecxz
xchg
push
(bad)
test
inc
or
int
push
ret
enter
fiadd
daa
pop
hlt
pop
or
imul
and
inc
pop
aas
cmp
add
pop
mov
pop
lock
xor
out
retf
icebp
adc
into
adc
push
test
sbb
ret
hlt
pop
pop
xchg
inc
cmps
outs
jbe
dec
in
sbb
out
movs
nop
xor
pop
inc
mov
(bad)
lock
in
aaa
hlt
mov
xor
pop
mov
mov
and
sti
xor
pop
popf
lahf
xor
cmp
call
call
or
pop
or
pop
inc
fnstenv
pop
stos
rcl
xchg
sbb
push
fwait
sub
inc
les
imul
xchg
cmp
ret
pop
push
jae
mov
ja
xor
popf
sbb
repz
cmps
jp
cli
sub
ds
mov
fwait
pop
popa
jp
(bad)
jmp
sbb
bound
clc
dec
ja
sbb
push
jno
out
pop
cmp
xchg
movs
mov
in
cmp
aas
push
dec
xchg
(bad)
aas
mov
lea
ja
pusha
pusha
lea
jb
pushf
cmp
jmp
aaa
imul
or
and
push
ja
adc
push
sahf
lods
jle
ds
push
jle
dec
je
inc
imul
push
(bad)
dec
mov
sbb
push
mov
push
lock
scas
fiadd
fmul
sbb
pop
int
iret
lods
xchg
stos
div
dec
adc
ins
popa
xchg
daa
js
adc
xor
cmp
mov
imul
(bad)
jmp
nop
xor
int
(bad)
mov
leave
pusha
call
and
out
neg
or
inc
arpl
jnp
mov
out
cmp
addr16
inc
push
popf
sub
cmps
ror
cwde
push
nop
xchg
dec
or
js
dec
sub
add
sbb
cmc
sub
mov
dec
sub
in
stc
stc
popf
cmp
rcr
pop
cmps
jg
mov
rcl
cmp
cmp
sti
dec
pushf
dec
inc
jbe
scas
mov
pop
test
xor
mov
sbb
neg
or
out
mov
mov
std
shr
int3
adc
sbb
cmps
xchg
add
xor
dec
adc
movs
fadd
inc
xor
push
enter
nop
cmp
fsub
and
and
xor
jno
mov
lods
push
sbb
xchg
mov
pop
scas
loope
call
jmp
daa
push
and
push
ret
push
je
int3
(bad)
out
sbb
mov
std
fiadd
jle
mov
mov
neg
or
cmp
xor
cmp
rol
(bad)
xchg
call
lds
(bad)
stc
sub
inc
xor
out
inc
pop
mov
push
pop
test
jecxz
xor
ret
xchg
wrmsr
cdq
xor
js
shl
repz
loope
xor
dec
int
das
test
push
addr16
aaa
cld
cmps
dec
lods
sbb
xchg
push
adc
dec
jns
fisttp
aas
outs
mov
mov
(bad)
push
pop
data16
fsubr
add
bound
sub
call
pop
out
push
(bad)
mov
mov
stc
nop
mov
cmps
dec
adc
inc
fisttp
jmp
xchg
pop
or
jno
xor
add
lods
aam
cmps
push
cmc
sub
fsub
dec
push
nop
movs
pop
cmp
fidiv
repz
pop
mov
adc
fs
int3
in
or
push
push
mov
in
mov
mov
lods
clc
sar
xor
pop
or
call
idiv
aam
mov
lods
out
dec
mov
push
aam
jno
push
add
cld
(bad)
mov
push
push
dec
ds
test
mov
call
popa
sub
cld
aad
mov
cs
add
popa
into
daa
lds
jge
adc
(bad)
jnp
add
leave
scas
dec
outs
xchg
lock
dec
cmp
mov
mov
sbb
loope
lea
pop
mov
jne
in
popa
cmp
popf
call
xor
cmc
sub
adc
or
mov
sar
icebp
movs
jne
cs
sub
retf
add
adc
mov
in
jecxz
mov
out
sub
in
push
mov
xchg
adc
xchg
popa
xor
retf
dec
xor
nop
out
shl
loop
sub
xchg
mov
shr
xchg
in
mov
dec
and
inc
shl
jmp
dec
push
je
pop
or
rdpmc
dec
cmc
adc
(bad)
sbb
cwde
fimul
cmc
pop
hlt
xor
fstp
inc
dec
aad
sbb
test
and
sub
cmp
jge
inc
jle
fwait
push
pop
sti
mov
addr16
fs
sub
xor
das
pop
mov
xor
test
pusha
push
es
fs
mov
or
rcr
add
shl
rcl
cmc
mov
bsf
rcr
bsr
mov
pushf
mov
cmp
push
pushf
call
neg
sub
cmc
mov
pop
mov
dec
rcr
add
not
not
mov
pushf
push
mov
not
mov
mov
lods
pusha
not
call
inc
pop
jge
pop
or
hlt
aam
sbb
dec
mov
movs
or
inc
sub
cmp
push
clc
mov
add
dec
fsub
add
xor
sub
mov
adc
push
sti
loop
sub
popf
data16
jno
sbb
push
rcl
xchg
std
jae
xchg
sub
sub
cs
adc
pusha
or
call
mov
add
pop
mov
adc
outs
data16
sbb
mov
xchg
iret
fidivr
pusha
ret
loope
pop
sti
pop
or
movs
push
add
enter
or
out
jb
xchg
mov
sub
adc
movs
inc
fstp
xor
popa
cmp
mov
sbb
jae
fwait
ret
std
das
push
outs
(bad)
mov
push
fdivr
bound
ja
pop
or
mov
pop
jmp
fwait
(bad)
(bad)
mov
sub
mov
mov
jl
cmp
xchg
and
xchg
push
xchg
in
stos
push
sbb
icebp
ds
shr
mov
pop
cwde
test
or
xchg
mov
(bad)
cli
cmp
mov
mul
retf
ret
ror
call
jmp
aas
mov
sbb
(bad)
adc
(bad)
out
adc
fcom
mov
mov
mov
leave
dec
adc
test
pushf
xchg
hlt
sub
dec
jns
dec
xchg
aam
pop
test
mov
mov
cmp
or
ficomp
repnz
pop
mov
mov
jb
bound
jp
imul
inc
ins
xchg
mov
aas
(bad)
pop
out
fwait
jb
aad
icebp
inc
lea
jne
pusha
jmp
push
lea
jae
call
loopne
mov
adc
in
xor
test
jb
mov
enter
mov
test
inc
ja
enter
addr16
or
push
sub
stos
xor
mov
pushf
jne
cli
test
xchg
mov
mov
shl
mov
push
rcl
arpl
outs
iret
pop
xchg
cmp
lods
retf
mov
xchg
vmovapd
repz
pop
jg
into
cs
vpsraw
sbb
std
pop
or
fwait
dec
sbb
sti
and
add
sbb
mov
sub
adc
xor
dec
adc
sub
xchg
sbb
test
sub
(bad)
xor
and
cmps
rcr
popa
fistp
mov
out
inc
cmps
retf
cli
stos
in
push
sub
inc
out
sub
sar
or
cmp
int
adc
jne
clc
rcl
aas
push
sub
outs
pop
xlat
sti
adc
cmp
jmp
mov
repnz
push
mov
stos
sbb
xlat
ss
rcl
adc
mov
hlt
or
cmps
shr
adc
push
adc
xchg
pop
(bad)
mov
sbb
test
add
cmp
pop
or
nop
mov
les
out
or
movs
mov
push
test
xchg
addr16
push
lods
movs
jmp
add
inc
loop
das
das
add
jmp
je
(bad)
push
je
or
les
nop
lock
dec
les
xchg
nop
push
scas
dec
add
sahf
mov
xor
and
push
dec
sub
adc
jp
mov
out
mov
out
test
sbb
sub
xchg
jmp
push
daa
jl
push
cmp
fiadd
leave
sub
fstp
mov
loop
jnp
push
push
repnz
or
repnz
push
rcl
sub
es
cdq
ret
push
or
test
fstp
int
cmp
and
xor
and
sbb
iret
mov
pop
pop
shl
mov
mov
aad
xor
dec
sub
mov
dec
data16
adc
nop
in
cli
inc
pop
cmp
jecxz
outs
cmp
lods
bound
pusha
mov
adc
jo
cmp
mov
les
inc
add
(bad)
icebp
pop
loop
jmp
add
jmp
aas
call
into
jg
cmps
ds
adc
fdivr
in
ss
(bad)
sub
xchg
sub
adc
cwde
in
mov
imul
cmps
fidiv
in
pop
jb
push
sti
mov
push
sub
daa
arpl
mov
outs
rcr
loope
imul
dec
or
int
or
cdq
ret
jmp
test
icebp
cmp
jmp
imul
mov
pop
or
mov
hlt
push
inc
cld
scas
sar
hlt
imul
sub
xchg
ins
loopne
popa
or
mov
mov
cli
add
adc
(bad)
ja
sub
(bad)
cmc
sbb
aad
daa
aad
mov
pop
add
fnstcw
or
jns
push
cmp
pusha
bound
inc
push
push
pop
jl
in
dec
and
leave
ror
jne
dec
add
add
sbb
mov
call
and
ds
add
pop
cmp
aaa
enter
cwde
leave
mov
rcr
rcr
jbe
or
and
push
xor
jmp
lahf
inc
aam
mov
cmp
or
icebp
push
mov
xchg
int3
or
sub
mov
dec
imul
mov
add
dec
outs
popa
fs
imul
add
test
std
sbb
push
mov
pusha
push
lea
jmp
push
mov
inc
xchg
mov
jnp
popf
and
shr
mov
pop
sbb
push
inc
mov
push
mov
sbb
mov
push
loope
mov
data16
and
scas
ret
iret
in
and
fwait
or
nop
add
ret
bt
pushf
neg
push
not
push
cmp
test
push
sub
push
jmp
mov
jmp
lea
ret
fld
aaa
add
or
repz
push
cmp
mov
arpl
xor
cdq
bound
inc
popf
arpl
sbb
jmp
(bad)
adc
mov
pop
mov
inc
sbb
sysexit
pop
mov
pushf
rcr
sbb
add
sbb
add
(bad)
call
sub
sub
mov
and
jo
not
bt
repnz
push
call
add
adc
sbb
adc
aad
rcl
pop
and
pop
and
adc
adc
shl
adc
adc
sbb
sbb
sbb
adc
adc
sub
aad
mov
adc
cmc
call
loopne
add
pushf
jmp
shl
mov
test
xchg
stos
int
dec
fadd
cmp
idiv
pushf
cmp
push
jmp
pop
outs
popf
imul
ror
jecxz
add
mov
out
xchg
(bad)
cli
fidivr
test
cmp
jbe
mov
out
or
scas
ja
adc
ja
xlat
in
add
mov
mov
sub
xchg
mov
add
or
xor
xchg
dec
jns
scas
int
aad
(bad)
jmp
dec
jl
xchg
add
push
jle
push
ror
fcom
adc
mov
mov
adc
and
in
lods
imul
popa
xor
popa
daa
pop
movs
imul
cmp
and
mov
ins
add
ss
pushf
jmp
lods
lea
jnp
pusha
rol
bt
neg
jmp
not
cmp
push
popfw
push
call
pushf
bt
pushf
rol
pushf
cmp
cmp
neg
push
stc
not
mov
cmc
mov
sub
cmp
bt
pusha
cmc
not
clc
stc
bt
mov
shr
call
jmp
cmp
push
mov
jmp
xor
mov
cmc
push
test
cmp
pusha
call
mov
add
inc
out
adc
inc
out
(bad)
jo
imul
sti
js
pop
jle
and
popf
sti
ins
aad
shl
std
fs
sbb
stos
pop
mov
sbb
or
pop
(bad)
jns
aaa
cli
xchg
jle
adc
xchg
mov
jnp
jp
inc
jns
in
push
jp
out
adc
pop
mov
xor
clc
and
pusha
add
or
outs
xor
mov
int3
imul
add
mov
or
adc
pop
adc
in
jmp
loope
(bad)
pop
pop
(bad)
push
leave
leave
adc
pop
push
jae
fnstenv
dec
and
in
mov
shl
shl
pop
cmp
xor
adc
mov
leave
push
lods
inc
std
mov
out
push
out
clc
bound
dec
ins
mov
int3
xor
shl
xchg
shl
bound
mov
xor
icebp
pusha
add
adc
adc
rcl
shl
pop
sbb
and
aad
rcl
pop
and
pop
and
adc
adc
shl
adc
adc
sbb
sbb
sbb
adc
adc
sub
aad
mov
rol
push
and
adc
push
and
in
adc
mov
data16
int3
xor
mov
sub
and
inc
pop
jp
add
pop
call
pop
inc
mov
addr16
imul
jne
add
(bad)
xor
adc
movs
pop
sbb
cli
xor
adc
(bad)
aam
out
daa
jl
sub
jecxz
xor
out
clc
cmp
cmps
test
aam
push
push
js
ret
pop
sbb
xor
mov
lods
imul
inc
sub
pusha
jp
mov
push
sbb
jbe
or
jno
cmp
pushf
lea
jne
btc
bsf
xor
clc
pusha
mov
rol
clc
add
neg
mov
mov
pusha
test
push
push
pushf
lea
je
pusha
push
mov
sub
pusha
cmc
mov
test
cmp
mov
call
mov
je
and
inc
dec
jb
sar
rol
popf
pop
enter
mov
jmp
cmp
cmc
popf
mov
mov
and
inc
pop
fyl2xp1
dec
dec
mov
das
pushf
loop
adc
daa
mov
xchg
rcr
xor
mov
aas
jo
(bad)
jmp
fisub
push
pop
and
popa
das
fisttp
xor
fwait
dec
out
lahf
retf
jmp
cmps
das
pop
adc
out
ds
(bad)
and
icebp
mov
fld
inc
scas
pop
loopne
fld
mov
enter
and
movs
jp
iret
test
mov
popf
pop
or
push
in
inc
dec
or
jb
jmp
adc
bnd
sti
mov
dec
outs
popf
int
adc
xor
push
push
fwait
mov
or
and
push
jae
inc
shr
add
(bad)
dec
or
(bad)
xchg
call
ror
shl
mov
sub
aaa
and
hlt
ficomp
sahf
jo
inc
out
or
mov
push
aad
sbb
(bad)
mov
dec
stc
loope
add
jbe
lahf
fidivr
add
dec
or
sub
push
jo
cmps
shl
or
stos
test
xor
jne
pusha
call
sub
push
xchg
fcomip
xchg
lock
dec
lods
out
jb
(bad)
sub
repz
jmp
sub
aad
ss
(bad)
sbb
jmp
ss
sbb
fwait
adc
fcomp
std
out
aaa
pop
ret
pop
mov
jne
inc
pop
adc
push
imul
or
cmp
and
dec
(bad)
pop
inc
pop
cmp
cmc
test
cmp
mov
pop
jge
std
adc
shl
adc
pop
frstor
adc
push
mov
adc
adc
test
mov
cdq
mov
and
ja
ins
das
std
push
inc
and
dec
and
bound
adc
pop
sbb
cmc
pop
daa
dec
pop
addr16
lds
daa
aaa
int3
push
mov
cmp
shl
or
or
movs
mov
out
mov
jne
adc
(bad)
jae
sar
stc
dec
scas
ret
(bad)
xor
adc
mov
or
pop
sbb
shr
into
cdq
in
jp
mov
or
or
add
inc
push
jno
stos
ret
fld
rol
loopne
push
dec
xor
xor
xchg
fdivr
inc
repnz
mov
mov
aaa
mov
in
or
rcr
ror
aaa
clc
xor
lods
sub
das
out
jecxz
into
adc
data16
push
iret
mov
pusha
sbb
push
mov
mov
in
adc
fild
xor
jnp
or
lods
adc
push
ret
je
add
dec
or
(bad)
add
xor
xchg
mov
xchg
jecxz
sbb
fcomi
push
add
push
pushf
pusha
lea
jmp
pushf
pushf
lea
jae
bt
jnp
sub
push
lea
call
pushf
lea
jae
pushf
bt
pusha
push
sub
pushf
mov
lea
call
pushf
jmp
push
mov
or
or
test
jecxz
sbb
js
xchg
inc
or
out
fwait
out
adc
mov
ins
sti
jae
push
cli
mov
xchg
and
jno
lahf
or
sub
pop
pop
and
lods
sahf
push
mov
or
lods
mov
(bad)
mov
jno
cmps
ror
std
sub
jmp
mov
aam
add
pop
jl
pop
or
or
adc
out
test
shl
adc
int3
push
sub
arpl
sbb
fs
pusha
fstp
rol
out
adc
int
xor
dec
lds
in
out
out
pop
inc
jno
mov
and
(bad)
in
xor
and
dec
jnp
inc
pop
ja
in
cmp
mov
cmp
sub
xchg
retf
jo
and
inc
in
and
dec
popa
jg
mov
or
es
inc
dec
xlat
mov
fs
loope
inc
loope
and
mov
fcmovnbe
cli
sub
jg
cmp
xlat
pop
add
pushf
fidivr
dec
enter
xor
sbb
mov
xchg
bound
and
popf
popa
stos
dec
and
sbb
ins
enter
sub
push
cdq
neg
mov
add
add
stos
shl
enter
bsr
mov
movsx
pusha
sub
shl
push
bsr
push
clc
bsf
bsf
push
bts
sbb
setns
movsx
sub
lea
bswap
bswap
cwde
lea
pusha
jmp
jnp
dec
or
or
xor
clc
stos
data16
cwde
ret
sahf
mov
sbb
mov
adc
inc
xor
dec
push
enter
mov
push
cmp
loope
cmp
jb
fnstsw
jmp
xchg
sub
(bad)
pop
cmp
push
jmp
movs
out
or
test
pop
out
pop
pop
adc
mov
and
nop
lods
rol
sub
movs
xor
adc
mov
add
add
imul
jae
pushf
call
adc
inc
or
or
out
sbb
jo
adc
in
push
dec
push
test
pop
mov
(bad)
lods
mov
shr
xor
data16
cdq
add
sub
mov
sbb
dec
add
imul
push
test
into
adc
cwde
adc
add
cmp
xchg
jmp
jge
add
jbe
movs
rcl
and
mov
ret
sub
lods
jg
fcmovb
adc
adc
ins
cmp
sti
adc
es
dec
cwde
mov
xor
and
dec
enter
dec
cs
js
retf
adc
push
sub
cmps
sub
cwde
inc
cld
and
out
enter
pop
nop
jmp
push
add
hlt
fmul
call
push
or
add
fiadd
imul
jmp
pop
stos
sbb
(bad)
cmp
mov
std
adc
inc
jae
movs
xor
dec
jns
test
aam
push
movzx
add
rol
pusha
lea
bts
pusha
btc
sub
sete
movsx
sbb
push
bswap
pushf
not
cmp
mov
adc
push
btc
cmp
das
push
cmc
rcl
mov
pusha
jmp
mov
call
push
lea
jb
clc
cmp
push
lea
ja
push
add
cmc
or
call
call
enter
and
retf
bound
sub
pusha
sub
call
adc
xchg
sub
cmp
xchg
cmps
mov
sbb
cmc
cld
ja
cmps
aas
push
hlt
inc
aam
dec
(bad)
push
xchg
sub
in
cmps
sbb
idiv
stos
mov
sbb
mov
push
push
jb
outs
popf
dec
in
aas
sti
mov
cmp
call
mov
jo
push
je
inc
loope
push
and
and
add
retf
dec
jo
aam
jb
mov
loop
cmp
je
test
arpl
in
adc
jp
mov
jne
shl
mov
sub
or
inc
ins
sbb
fist
stos
shr
cmp
stc
push
test
push
jmp
lods
dec
jle
and
mov
push
(bad)
scas
arpl
mov
in
or
add
mov
push
fcmovu
dec
adc
cmps
(bad)
adc
std
push
push
out
(bad)
repz
xor
fwait
stos
out
mov
shr
sbb
mov
ins
pop
mov
leave
aad
repz
mov
pushf
in
adc
in
bound
int
push
in
out
int3
mov
pop
mov
xor
adc
mov
pop
dec
cmp
sahf
pop
sbb
push
call
sub
outs
nop
shl
dec
jbe
mov
push
aad
in
jne
sub
mov
bound
cmp
jae
dec
jmp
or
sbb
inc
(bad)
jecxz
popf
sub
in
imul
push
mov
lahf
jg
scas
jecxz
adc
ins
popf
shr
or
push
cmp
ja
outs
ins
ins
cs
ins
add
inc
jnp
and
mov
push
push
mov
mov
or
cmps
test
retf
setne
rcl
rcr
stos
or
pop
xor
pop
inc
jecxz
out
sub
daa
jns
(bad)
pop
push
inc
jo
xor
nop
push
push
iret
lods
inc
loope
xor
xor
aam
into
jne
and
push
jle
jns
xchg
or
pop
dec
bound
into
mov
sbb
jg
fldpi
stc
or
movs
inc
mov
sub
pop
adc
or
in
lahf
jecxz
dec
nop
repnz
bound
jle
lods
outs
jle
inc
jmp
jl
mov
and
inc
push
das
fs
jne
push
movs
cmps
jbe
cs
push
cmp
fistp
int
(bad)
cld
ret
sbb
mov
mov
jns
sbb
shl
jno
pop
pop
cmps
mov
sahf
xchg
gs
(bad)
ds
mov
inc
push
push
gs
xor
fld
jo
in
xchg
mov
(bad)
xor
mov
sbb
sahf
lahf
fcom
sub
retf
push
adc
sbb
sub
xor
retf
in
xor
mov
xlat
adc
push
pop
arpl
rol
sub
inc
test
dec
test
inc
jb
or
stc
push
jg
pusha
icebp
add
iret
push
xor
in
ins
xchg
mov
pop
mov
cdq
xchg
lahf
jmp
sub
pop
mov
int3
outs
mov
jnp
rep
rcr
iret
xchg
out
sbb
push
mov
xor
rcl
sti
mov
mov
jle
into
lods
xchg
out
jnp
mov
sbb
jnp
xchg
xchg
lock
outs
lods
out
std
cmp
and
mov
scas
sbb
pop
nop
and
xchg
call
mov
push
inc
xor
das
bnd
rcl
pop
cmp
mov
mov
ret
adc
fsubr
jae
sub
jp
cwde
(bad)
test
pop
int
(bad)
ds
xchg
gs
movs
adc
sbb
imul
retf
xchg
pop
mov
pop
jle
sar
xchg
adc
xchg
and
sbb
not
not
pop
push
push
ret
push
jmp
sub
arpl
and
jo
not
int3
xor
ret
add
sbb
shl
and
into
and
out
mov
pop
pushf
(bad)
enter
adc
cwde
mov
loopne
repz
mov
fldenv
adc
xchg
imul
mov
ret
mov
sbb
mul
or
inc
jmp
sbb
mov
adc
ss
mov
outs
pop
(bad)
dec
sar
pop
push
sbb
mov
adc
jmp
xchg
mov
or
dec
fs
movs
ret
mov
jg
push
call
ret
adc
or
push
xor
bound
dec
fdivr
sahf
mov
dec
iret
dec
push
mov
push
(bad)
mov
loope
stc
xchg
or
test
adc
xchg
movs
pop
ins
fst
les
ins
dec
push
shr
pop
xor
scas
outs
ret
sub
mov
sbb
cmps
movs
push
ss
xchg
int3
lock
dec
bound
cmps
mov
lea
ja
shl
xor
sub
sar
clc
pusha
add
add
bts
cmc
rcl
mov
push
sbb
cmp
neg
mov
pusha
stc
cmc
call
jmp
add
push
push
mov
pushf
lea
jmp
sbb
adc
or
sub
rol
add
xchg
sub
cmp
das
test
mov
jmp
shl
stc
das
xchg
jno
cdq
scas
mov
push
sbb
mov
cdq
retf
in
sbb
cmp
jecxz
jg
pop
mov
mov
add
into
cdq
imul
and
cmp
ficom
pop
pop
mov
ret
ins
jg
movs
loope
xchg
repnz
mov
push
inc
retf
es
add
or
icebp
xchg
sub
aad
jg
aad
jb
(bad)
and
sbb
test
mov
cmp
jmp
shl
push
movs
rcr
(bad)
into
ins
add
js
xchg
mov
fidivr
lock
mov
xchg
cmps
jne
mov
and
pop
mov
add
push
xor
jp
mov
adc
inc
js
aaa
pop
sub
mov
mov
adc
jecxz
mov
cmp
xchg
mov
xchg
(bad)
pusha
enter
aaa
jbe
sbb
cs
retf
jecxz
adc
sbb
iret
iret
cmps
aad
unpckhps
inc
(bad)
and
cmp
push
popf
xchg
nop
cmp
ret
dec
aas
push
scas
neg
or
icebp
sbb
int
(bad)
pop
and
dec
cwde
adc
movs
or
out
or
arpl
inc
shl
mov
mov
movs
cmp
cwde
dec
xchg
in
lods
outs
or
jae
inc
pushf
test
pop
arpl
pop
jmp
cmp
scas
push
jbe
cwde
sub
jle
sbb
push
pop
pop
popa
xor
jp
jp
sti
xlat
lock
jno
out
outs
in
mov
cmp
push
mov
mov
aad
adc
xor
and
mov
jmp
je
inc
inc
sbb
stos
xchg
sti
(bad)
mov
add
jmp
xor
mov
lods
cli
(bad)
stos
jl
fild
call
out
mov
aad
dec
rcl
popa
fdivr
inc
cmp
(bad)
pop
dec
or
sbb
outs
mov
stos
cmp
repnz
lea
jl
lea
xor
dec
out
xor
(bad)
in
sub
xor
cdq
dec
ret
fcmovnbe
add
outs
xchg
mov
retf
push
stos
les
jl
and
je
add
movsx
mov
pushf
lea
movzx
mov
call
add
inc
gs
outs
fs
gs
imul
add
mov
ss
and
cwde
shl
inc
lods
dec
js
adc
mov
out
inc
xchg
mov
addr16
jns
(bad)
xchg
or
data16
(bad)
lahf
cmp
cwde
es
cmps
imul
fcomp
adc
(bad)
popa
xchg
stos
ret
jmp
mov
ret
cld
jbe
movs
xchg
pop
and
add
icebp
add
fisttp
sub
stos
in
dec
call
xchg
in
adc
mov
sub
dec
cmps
(bad)
jmp
pop
faddp
pop
xor
mov
pop
rcl
mov
mov
sub
jp
mov
aas
mov
pop
mov
mov
mov
loop
sub
adc
sbb
sub
lea
jle
pusha
push
pop
pusha
push
push
ret
shl
pop
and
pop
imul
adc
loop
adc
xor
jmp
mov
fidivr
loop
adc
jnp
add
push
(bad)
mov
jns
mov
jl
mov
xchg
jno
mov
cld
cmp
and
xchg
sub
outs
add
cmps
retf
(bad)
sub
sbb
in
addr16
push
ret
popa
xchg
sbb
or
mov
and
push
add
cmps
lds
cmp
imul
push
dec
sbb
in
adc
es
push
rcl
push
mov
ja
and
xor
sub
push
sub
pmaxsw
call
sti
xchg
aas
jl
stc
rcl
cdq
jb
adc
jmp
int3
(bad)
xor
rep
icebp
mov
xchg
add
and
fdivr
and
jmp
(bad)
xchg
iret
icebp
clc
fisubr
mov
sub
sbb
std
mov
xchg
out
cld
mov
ror
mov
int3
sub
add
in
ds
int
cmps
dec
repz
mov
sahf
in
dec
repz
jg
fsub
sbb
xor
dec
sub
shl
pusha
jp
xlat
fcomip
push
imul
inc
inc
pop
div
jg
xchg
xchg
jo
ins
mov
and
not
fs
adc
xchg
sub
mov
fcom
es
bound
test
dec
jns
jnp
cmps
cmp
jno
outs
mov
data16
pop
sub
cwde
out
pusha
cmp
rol
stos
sub
mov
lods
stc
stc
into
cdq
sub
fldenv
shl
and
push
out
ja
xchg
dec
sub
cwde
out
pusha
les
test
stos
sub
cmp
and
or
das
jecxz
or
inc
adc
sbb
ret
xchg
call
ja
call
(bad)
mov
cmps
je
ja
int3
call
js
push
cmps
cmp
push
jmp
push
inc
jmp
xchg
lods
retf
sbb
cs
in
cmp
cmps
push
push
xor
ja
sub
mov
jg
add
sbb
push
sbb
popf
movsx
mov
bswap
bswap
pop
pusha
pusha
pushf
push
lea
jmp
shr
inc
bswap
inc
mov
bt
cmp
call
call
mov
push
sbb
or
shl
or
popf
mov
mov
int3
std
call
or
adc
sbb
out
inc
push
test
rol
mov
sub
or
lods
mov
sti
test
cmp
mov
xchg
cmp
out
cs
mov
adc
mov
dec
fnsave
pop
outs
sbb
adc
mov
cmc
punpcklbw
xor
add
lods
lock
bound
arpl
je
aad
test
add
dec
ret
add
popa
xchg
test
sbb
daa
xchg
cmps
xchg
pusha
stc
jb
or
mov
add
sbb
push
pop
imul
ins
add
cmps
jbe
xchg
mov
jecxz
add
pop
out
rol
and
add
jo
sub
pop
pop
shr
fld
fisub
mov
out
pop
pop
pop
adc
hlt
inc
test
outs
in
or
dec
aad
jle
ins
inc
xor
fwait
sbb
(bad)
in
or
lods
lea
test
in
test
mov
mov
pop
adc
pop
and
inc
sbb
inc
fidivr
jmp
jge
mov
add
cmc
mov
nop
xchg
sub
out
aas
mov
repz
add
push
push
retf
into
repz
retf
add
jnp
mov
push
pop
arpl
retf
ficom
mov
sbb
or
jge
lahf
mov
jne
out
xor
ret
cwde
fisttp
fidivr
xchg
sbb
sbb
inc
cmc
sbb
mov
or
adc
(bad)
cmp
push
ins
fwait
xchg
xchg
aad
or
xlat
mov
mov
pop
sub
sahf
(bad)
and
je
enter
or
arpl
and
sahf
xor
imul
mov
ins
xchg
mov
push
scas
adc
mov
or
pop
sub
fwait
push
add
and
inc
cmps
bound
out
xor
push
cs
les
xchg
outs
ja
test
push
repnz
test
push
jecxz
(bad)
pop
aaa
pop
jo
fisttp
dec
mov
mov
cmp
add
xchg
inc
arpl
stos
int
and
adc
mov
(bad)
call
cmp
in
loop
add
pushf
arpl
xchg
xor
ja
mov
cmp
call
lods
sti
add
push
pop
push
cmc
cmp
jmp
mov
push
mov
pusha
lea
jmp
xchg
inc
sbb
loope
adc
pop
xchg
call
cmp
push
test
push
(bad)
cmp
popf
ret
in
fwait
dec
jno
imul
cmp
rol
push
push
pop
dec
clc
arpl
adc
adc
sbb
sub
dec
ins
cwde
test
jmp
cld
jbe
mov
cmp
mov
mov
test
xor
bt
repnz
mov
lea
jne
jmp
add
inc
gs
outs
fs
gs
popa
outs
fs
gs
add
loope
in
push
fsub
add
push
jnp
retf
jmp
sahf
push
push
jb
ret
mov
sub
mov
inc
mov
adc
pop
and
sub
or
aaa
mov
pushf
pop
stos
leave
sub
movs
mov
jge
xlat
and
pop
(bad)
dec
pop
pushf
call
fs
jne
mov
bt
bt
stc
mov
push
clc
cmp
add
stc
cmp
movzx
lea
bt
adc
mov
clc
add
pushf
call
inc
fimul
pop
and
sbb
xchg
mov
adc
imul
adc
inc
xchg
mov
jl
dec
enter
push
inc
hlt
test
fs
shl
and
mov
mov
jne
sbb
ds
test
or
sbb
inc
fdiv
inc
dec
mov
push
(bad)
bnd
movs
push
les
loop
call
lods
frstor
xor
push
push
(bad)
dec
pop
dec
pop
sbb
clc
xor
pop
inc
lock
xor
mov
add
jp
adc
pop
lds
xchg
jno
inc
pop
and
mov
cmp
call
lds
std
sbb
sti
xor
or
bound
push
jne
xor
xchg
add
sub
popf
or
sub
push
jmp
adc
adc
add
movs
xchg
xlat
scas
jo
mov
leave
pop
jle
movaps
adc
bnd
dec
mov
jnp
out
lods
sub
sti
cvtps2pi
xchg
mov
xor
xchg
out
fs
je
ror
mov
pusha
or
add
cmc
rcr
rcr
mov
pusha
cmp
test
call
pusha
pusha
lea
call
pusha
lea
jmp
mov
or
cmp
mov
add
mov
ins
add
add
int3
cs
adc
jge
cli
mov
push
sbb
push
xchg
movs
neg
push
cmp
lea
cmp
fimul
push
not
jge
jno
adc
push
ret
mov
cmp
std
adc
lds
and
stos
pop
cmp
mov
jg
icebp
adc
and
jo
mov
push
xor
inc
pop
cmp
test
pop
jns
pop
sahf
mov
jo
add
addr16
scas
jmp
call
xlat
push
and
or
sub
or
dec
jo
dec
ins
test
xchg
(bad)
into
push
test
dec
adc
push
fstp
xchg
leave
sbb
fxch
cmp
test
adc
fild
arpl
dec
imul
ins
lock
ja
sbb
add
pusha
sub
hlt
and
or
dec
fbstp
lds
std
lahf
inc
pop
jge
pop
sbb
xchg
scas
call
sbb
pop
mov
xchg
dec
sub
dec
mov
sub
inc
pop
icebp
pop
xor
push
sub
push
fwait
sub
aas
and
fcmovnb
aad
jnp
cmc
inc
and
in
cli
js
dec
fld
stos
xchg
push
or
iret
or
mov
pushf
pushf
jmp
cmps
add
cmp
jecxz
mov
inc
xlat
and
inc
dec
push
adc
mov
dec
adc
pop
mov
push
jmp
ja
leave
shl
(bad)
push
pop
mov
or
imul
inc
mov
movs
into
sbb
xchg
add
xchg
int3
je
adc
es
xchg
xor
mov
or
fs
jne
call
mov
mov
push
lea
jmp
lea
jne
pusha
call
mov
pusha
pushf
mov
lea
jmp
pusha
lea
je
pushf
mov
add
pusha
lea
jmp
hlt
mov
sub
and
shl
stos
mov
call
xchg
and
cmp
arpl
cs
jbe
pop
hlt
imul
cmps
ins
cmp
sbb
adc
mov
ins
fsqrt
jle
and
mov
xchg
(bad)
jge
movs
mov
adc
test
cmp
pop
pop
scas
retf
pop
je
int3
hlt
sbb
xchg
rcr
xor
cmp
or
lock
loopne
test
in
mov
lods
mov
xlat
sub
mov
and
loopne
xchg
(bad)
clc
xchg
out
aam
pusha
mov
mov
retf
cmp
aas
clc
adc
in
retf
fsub
add
movs
xlat
fs
xor
leave
mov
sti
enter
movs
fisttp
hlt
or
je
adc
clc
jecxz
arpl
mov
clc
loope
ja
mov
inc
lahf
pop
test
outs
push
cmc
cmp
shl
adc
bound
cmps
enter
sub
push
mov
scas
loopne
push
jge
and
add
cmp
clc
add
jmp
mov
lea
je
cmp
push
sub
push
cmp
pushf
pushf
lea
ja
bt
pusha
pushf
stc
imul
stc
call
add
dec
outs
arpl
inc
jb
gs
and
outs
xchg
sub
test
cmp
mov
not
push
lea
jge
push
mov
lea
pusha
movsx
push
lea
jmp
bound
sbb
dec
fadd
mov
push
jb
cs
mov
pop
daa
out
ret
push
add
repz
adc
leave
cld
data16
jnp
dec
mov
adc
inc
loop
xor
adc
jmp
cld
xlat
mov
mov
adc
xor
cmps
fbld
int
mov
mov
out
add
pop
stc
xor
push
sbb
sbb
jns
call
std
popa
(bad)
and
or
sbb
fimul
mov
mov
cwde
pushf
cli
f2xm1
cmps
inc
xchg
push
pop
mov
(bad)
cwde
mov
sub
int
dec
scas
jne
mov
loope
push
push
xor
in
daa
inc
jno
xchg
sbb
repnz
mov
mov
lea
ja
stc
push
jmp
add
pushf
mov
pushf
mov
lea
jmp
xor
jno
and
mov
stos
add
mov
ja
dec
adc
popf
pop
rcl
shr
push
lock
std
cld
adc
mov
add
push
ins
mov
hlt
and
out
or
sub
cld
movs
lods
add
cld
inc
je
jmp
out
and
das
dec
mov
add
mov
leave
push
div
ins
sub
clc
push
pop
repz
push
xor
(bad)
cmps
jb
and
sub
mov
cmp
in
cmps
jbe
(bad)
pop
movs
sti
jg
pushf
ror
cld
ficom
outs
xchg
cs
ror
mov
push
adc
mov
gs
jo
lods
dec
jno
and
cld
test
scas
retf
sbb
jle
shl
mov
add
jecxz
icebp
pusha
sub
test
not
cmc
push
popfw
call
btc
clc
xor
pushf
not
mov
push
lea
movzx
not
mov
pusha
push
mov
mov
bswap
lea
push
mov
jmp
inc
pop
pop
stc
sub
pop
and
push
pop
jb
shl
nop
outs
add
addr16
pop
loopne
cmp
call
or
data16
test
scas
push
iret
cdq
in
(bad)
sub
ret
call
jp
mov
xchg
mov
fisttp
mov
mov
mov
cwde
sbb
dec
adc
mov
sar
hlt
daa
jmp
std
xchg
pop
cmp
add
mov
xchg
rcr
aaa
inc
dec
jbe
pop
jbe
dec
jno
inc
sbb
imul
jns
push
movs
push
cmp
xchg
sub
ror
imul
addr16
mov
daa
and
jge
push
jnp
test
jg
sub
dec
sbb
movs
repnz
lods
cmp
pop
test
pusha
sbb
sbb
fucom
mov
mov
dec
mov
fdiv
dec
shr
jno
push
addr16
repz
aam
xor
imul
xchg
jg
and
xchg
sahf
adc
test
test
out
adc
nop
pop
mov
pusha
mov
scas
push
push
lea
jne
setl
mov
not
push
lea
movsx
pushf
lea
push
mov
call
lea
jb
bt
cmp
pusha
jmp
lea
je
push
jmp
outs
xchg
enter
sub
push
loop
mov
mov
pop
mov
scas
imul
scas
jne
add
jno
xchg
sub
fwait
push
inc
enter
jmp
add
(bad)
sti
dec
test
sub
dec
adc
call
in
loop
add
adc
les
jp
test
fsubr
cmp
outs
pop
mov
(bad)
js
add
out
inc
adc
push
mov
xchg
or
out
adc
es
push
lods
mov
in
ss
rcl
cli
sub
scas
(bad)
cwde
add
cs
mov
cs
cmp
shl
or
ret
enter
rcl
test
xchg
mov
call
rol
adc
aaa
and
rcl
add
adc
or
clc
jne
into
pusha
fcom
shl
mov
int
clc
rol
xchg
lea
stos
pop
loopne
es
rol
mov
jnp
jb
or
jne
or
fidiv
rol
xchg
mov
retf
push
int
xor
rcl
lods
int
or
rcl
psubusw
rol
xor
jmp
rol
adc
or
aam
rol
push
sub
inc
add
call
or
adc
rol
xor
jo
add
cmp
rcl
or
enter
rcl
clc
aaa
cmp
sub
xchg
stos
or
jecxz
jle
cmp
sub
add
imul
xchg
or
sbb
push
retf
inc
xchg
xchg
js
stos
cwde
pop
mov
inc
pushf
lea
jmp
pusha
mov
mov
push
mov
pushf
push
ret
push
movs
or
and
sbb
enter
mov
pop
ds
jmp
mov
fisttp
sbb
push
sub
fstp
mov
pop
mov
fxch
shr
and
test
push
or
push
cmp
call
mov
gs
aaa
arpl
mov
push
mov
pusha
push
ret
xor
sti
sub
or
xor
mov
dec
sub
fidivr
ins
adc
and
mov
jl
out
movs
enter
into
or
pop
cmp
jb
or
pop
mov
fdivr
sahf
shr
lds
int
and
mov
mov
stos
or
cdq
mov
bound
and
outs
mov
pop
jnp
cmp
aas
mov
(bad)
outs
mov
push
es
fisub
outs
enter
add
shl
stos
push
pop
xchg
adc
jmp
(bad)
lahf
ret
xchg
sbb
and
es
push
adc
pop
aam
out
mov
or
aad
cmc
aad
sbb
lock
(bad)
cld
push
jmp
jns
clc
dec
jbe
(bad)
cli
and
rcr
loope
push
jo
in
pusha
pusha
rep
lea
jp
pop
pusha
pushf
pushf
lea
jmp
xor
or
lock
pop
jp
es
mov
daa
or
fnstcw
mov
mov
xchg
adc
xchg
push
iret
scas
xchg
call
cmc
retf
movs
push
jg
mov
and
push
inc
daa
or
scas
ss
mov
fidiv
outs
pop
jo
test
pusha
mov
push
add
rcr
xchg
sub
mov
je
jnp
test
ja
int
sti
test
xchg
out
cs
push
loopne
pop
lds
sub
or
push
cmp
xchg
inc
cmp
addr16
inc
push
ds
or
dec
adc
mov
sbb
fldenv
rcl
(bad)
test
push
jns
xor
and
or
movs
xlat
ret
idiv
pop
inc
mov
and
clc
or
fisttp
and
push
(bad)
out
adc
dec
fs
mov
xchg
loope
add
loope
fst
pop
test
or
dec
data16
dec
hlt
or
fdivr
and
fidiv
iret
mov
dec
adc
test
retf
ds
clc
int3
jae
dec
dec
repz
int3
push
lock
inc
in
mov
jo
sbb
sti
xor
(bad)
dec
push
(bad)
mov
jne
cmps
imul
and
aaa
dec
arpl
or
dec
imul
imul
pop
mov
stc
pop
iret
outs
mov
clc
adc
jle
push
jo
push
cmps
push
jmp
cli
mov
pop
(bad)
cmp
mov
test
ja
xchg
inc
pop
push
jmp
pop
in
or
dec
stc
mov
fdiv
inc
and
mov
lods
push
xchg
inc
fidivr
pop
or
inc
add
adc
in
pop
jne
lahf
leave
(bad)
out
cmp
dec
jne
jge
enter
and
xchg
ins
daa
in
mov
inc
add
jmp
and
outs
sbb
sub
lock
mov
(bad)
in
test
lds
sar
or
aam
dec
sub
imul
mov
mov
mov
xchg
test
cmps
jp
jl
mov
clc
adc
mov
popf
inc
fadd
xchg
push
inc
int
or
mov
or
pusha
je
xchg
cmps
retf
in
outs
mov
aas
pop
pop
xor
out
retf
pusha
lea
push
xchg
mov
movzx
jmp
(bad)
shl
and
inc
test
setnp
jge
repz
popf
fnstenv
cld
call
es
pop
sub
outs
inc
rcl
cs
sbb
cmp
mov
retf
cs
sub
mov
adc
lods
push
add
(bad)
loopne
test
xor
out
sbb
xor
add
ror
xor
mov
push
std
in
cvtps2pi
scas
in
inc
imul
pop
jp
lea
je
jmp
mov
push
das
and
and
dec
hlt
adc
fiadd
xchg
mov
xor
xor
mov
outs
aad
jbe
push
stos
gs
dec
adc
mov
dec
jmp
std
or
add
sub
jnp
mov
loop
sub
movlps
mov
cmc
cmp
test
shl
ds
cs
pop
scas
je
or
xchg
pop
cli
push
fs
int3
not
dec
push
(bad)
gs
iret
mov
or
(bad)
jmp
lods
or
aad
lahf
dec
ins
xchg
mov
xlat
in
xchg
adc
jno
jmp
add
mov
sahf
or
call
inc
push
inc
mov
mov
mov
sub
call
jecxz
pop
(bad)
idiv
movs
aad
add
pop
das
and
test
pop
add
or
lods
out
loopne
addr16
push
repz
mov
dec
rcl
or
xchg
fndisi(8087
into
sub
xchg
ins
add
adc
rcr
(bad)
pop
or
cmc
jmp
in
sub
pusha
jmp
pop
jle
xor
or
pop
adc
mov
or
push
dec
ja
push
add
js
daa
jne
into
pop
je
ret
mov
xchg
out
add
les
cmps
mov
mov
jg
aam
or
or
push
push
mov
(bad)
cmp
sub
outs
pop
push
into
pop
in
mov
iret
cdq
data16
jecxz
out
and
and
test
stc
test
jne
mov
cwde
dec
int
outs
popfw
out
shr
sbb
pop
sub
sub
inc
add
loop
adc
mov
ins
int3
adc
int3
mov
xchg
mov
push
jg
outs
das
cmp
jp
test
js
jp
out
or
mov
sub
push
xor
ret
or
sub
xchg
push
shl
scas
push
mov
cmp
push
xor
imul
or
sbb
pop
mov
xchg
fs
cmp
jecxz
ror
enter
loopne
or
mov
ret
in
imul
jmp
mov
in
cmps
sti
xchg
adc
and
std
xlat
add
push
jne
ret
fild
push
outs
into
sahf
std
das
and
call
xor
jae
and
sbb
jb
inc
bound
lock
shl
mov
sub
dec
icebp
(bad)
(bad)
cdq
sbb
in
inc
mov
jmp
arpl
sbb
and
test
mov
dec
mov
cmp
fsub
popa
cmc
mov
pop
mov
rol
(bad)
fucomp
(bad)
xor
sbb
das
out
leave
sti
in
test
mov
stc
sbb
dec
pop
in
stos
addr16
out
add
fs
test
sbb
xchg
mov
enter
cmp
pushf
pop
xchg
ret
xchg
mov
sti
das
push
jns
mov
sti
pushf
and
(bad)
mov
xor
or
vpaddw
mov
mov
or
fs
xchg
movs
fstp
dec
push
dec
addr16
lea
sbb
cmp
push
fs
das
xor
inc
out
mov
mov
mov
or
popa
pusha
jle
xchg
mov
outs
cli
mov
outs
fldcw
push
add
js
or
push
push
lahf
jmp
cld
xor
aam
xchg
dec
dec
sub
jno
test
xor
or
call
add
dec
(bad)
call
scas
ret
jno
adc
jns
pop
xor
fs
fxch
xor
push
dec
out
jno
je
and
cwde
lods
mov
cmp
push
xor
out
sbb
scas
popa
cvtps2pi
(bad)
cmp
daa
in
xchg
and
in
cmp
add
mov
ds
xchg
xchg
mov
lea
inc
lea
xchg
pop
pop
test
push
cmp
je
shl
inc
in
push
pop
(bad)
xchg
(bad)
mov
and
ins
xchg
mov
add
xor
sbb
pop
out
je
jnp
xchg
aas
movs
jb
das
or
and
mov
test
cmp
jbe
mov
push
push
dec
loop
and
int3
repnz
pushf
call
outs
pop
les
aaa
inc
jo
sti
aaa
mov
cwde
scas
xor
sbb
ds
mov
jne
mov
push
inc
pop
jb
mov
push
jl
cli
inc
mov
xchg
pop
popf
imul
mov
in
sbb
cmp
call
int
or
out
pushf
mov
sub
and
add
retf
cli
adc
repz
in
rol
leave
adc
pushf
or
lods
pop
jo
(bad)
or
mov
lea
out
mov
in
rcr
(bad)
push
(bad)
sbb
xor
loope
push
xor
enter
popa
or
sar
sahf
loopne
pop
ror
mov
jmp
lea
jae
pusha
jmp
call
aaa
add
add
add
add
add
add
add
add
add
add
add
add
sbb
sbb
add
and
ret
add
add
add
call
mov
push
pushf
pusha
pushf
lea
jmp
(bad)
leave
xor
and
inc
test
cmp
out
mov
scas
iret
popf
dec
push
xor
mov
cmp
cmp
mov
pusha
mov
mov
fidivr
dec
sahf
ficomp
jne
fcomi
sbb
jg
stos
fisttp
(bad)
dec
pop
stos
push
ss
call
push
mov
mov
jmp
pusha
mov
jmp
loop
inc
xor
in
ret
out
lahf
and
add
retf
mov
cmp
es
iret
add
movs
push
mov
(bad)
xchg
dec
jo
add
push
lock
inc
mov
push
xor
bound
cmp
leave
or
mov
sbb
repnz
inc
jecxz
pop
xchg
jnp
adc
jecxz
sub
jbe
sahf
call
xchg
mov
xor
xchg
scas
int3
lock
popf
jo
push
rol
inc
js
not
mov
clc
push
popfw
push
pushf
pushf
inc
jmp
stc
stc
rol
cmp
bt
neg
cmp
cmp
push
jmp
mov
cmc
pushf
mov
rol
bt
jmp
stc
sub
push
pushf
inc
lea
push
pusha
lea
call
jmp
retf
and
sub
xchg
mov
popa
jns
call
ins
int3
push
cld
(bad)
loopne
inc
push
fild
dec
je
push
cli
xchg
inc
dec
dec
dec
adc
fcmovne
test
mov
(bad)
mov
sbb
retf
je
cld
stc
inc
lahf
data16
pop
jl
rol
(bad)
in
xor
pop
pop
iret
cdq
mov
jmp
and
mov
arpl
sub
mov
ins
cld
push
aad
outs
loopne
pop
adc
xchg
jne
mov
mov
test
xor
xor
(bad)
jns
sahf
mov
or
inc
je
rcl
xor
mov
mov
clc
stc
rol
push
mov
mov
bt
neg
cmc
bt
jmp
mov
lea
pusha
not
jmp
mov
or
jbe
sub
test
fdivrp
and
xlat
push
adc
push
sub
addr16
pop
inc
pop
push
ins
mov
dec
mov
cli
sti
popa
mov
adc
dec
rcl
mov
ins
and
test
pop
xchg
scas
jecxz
(bad)
fsubr
jmp
add
add
movs
add
movs
add
loopne
add
xor
add
add
add
call
add
add
mov
cmc
cmp
or
(bad)
mov
push
or
dec
data16
fstp
cmp
dec
out
mov
aad
cdq
lods
iret
pop
push
xlat
(bad)
cmp
outs
sti
mov
adc
hlt
push
stc
mov
test
jns
mov
xchg
movs
mov
jle
fadd
mov
int3
fisubr
push
daa
cmp
rcr
sahf
pushf
popf
hlt
adc
dec
inc
das
mov
mov
push
repnz
xchg
push
pop
loope
xor
sub
outs
fcomp
mov
or
movs
mov
xor
add
adc
call
mov
out
jno
jmp
cmps
xor
jns
mov
adc
data16
sbb
in
mov
xchg
jne
inc
ja
stos
mov
icebp
mov
mov
push
inc
test
repz
fst
pop
pop
pcmpgtd
xchg
mov
sbb
dec
jb
(bad)
jbe
out
shrd
sub
retf
or
or
xchg
xchg
pop
enter
sub
rcr
pop
imul
dec
imul
sub
sbb
jmp
call
loopne
add
and
into
(bad)
inc
shl
adc
mov
pushf
cmp
cmp
pusha
jmp
fld
cmp
and
dec
xchg
mov
dec
pop
clc
loopne
(bad)
pop
sbb
push
mov
cmp
cmps
shr
sbb
fnstenv
outs
mov
je
outs
pop
loop
dec
lods
inc
pusha
push
jb
rol
add
jmp
addr16
adc
clc
fldenv
inc
fist
cmps
push
jo
inc
xchg
xchg
ss
or
in
cmp
clc
ja
push
jp
inc
push
fisttp
cmp
add
or
xor
sub
jb
scas
dec
xor
(bad)
sbb
scas
pop
or
repz
inc
jnp
(bad)
xlat
repz
xchg
int3
xor
repz
push
lea
jmp
stc
stc
cmc
or
jmp
jmp
lea
jae
call
xlat
or
cmp
pop
jmp
fstp
inc
mov
push
push
stos
ss
and
fdiv
call
jns
ret
hlt
push
or
cld
sbb
pop
sub
pop
and
aam
(bad)
dec
stc
cli
out
inc
mov
fsub
test
inc
cld
pop
retf
hlt
loope
pop
mov
ins
pop
loopne
sti
rcr
hlt
cmp
mov
popa
aam
xchg
retf
ffree
jmp
and
mov
stc
push
mov
and
jno
jo
inc
cmp
or
lock
into
push
and
pop
lds
call
cmp
pop
jmp
mov
sahf
mov
cwde
cwde
mov
add
jno
or
ja
test
pop
pop
(bad)
(bad)
fcomp
jl
xor
jmp
cmp
lea
jmp
popf
cpuid
nop
call
push
hlt
sub
and
xor
mov
ja
mov
retf
pop
fdiv
ret
push
fstp
cmp
or
enter
mov
jmp
enter
iret
cdq
xchg
cdq
jae
jne
bt
push
mov
push
add
test
test
call
cmp
mov
and
stos
pop
(bad)
xchg
mov
mov
mov
sbb
fcom
loopne
mov
loopne
pop
jge
mov
(bad)
jge
pop
jo
inc
(bad)
ins
sub
jbe
iret
adc
inc
mov
lahf
mov
inc
jns
enter
repnz
adc
jmp
mov
jne
sti
retf
xchg
(bad)
sub
or
ret
cmps
ds
stos
cwde
mov
data16
cmp
lock
add
mov
ror
sub
mov
push
ret
push
sbb
shr
jae
leave
jmp
mov
sub
mov
data16
push
outs
mov
push
lods
pop
stos
pop
ror
ja
pop
push
mov
test
pop
inc
pop
pusha
cld
dec
ins
jecxz
int
cmp
pushf
mov
lea
jae
pushf
cmp
stc
add
call
(bad)
xchg
add
and
or
jecxz
sub
cmps
dec
cmp
or
cmp
leave
jae
dec
mov
xor
xor
retf
(bad)
maskmovq
imul
sbb
jnp
icebp
aam
cmp
mov
add
inc
rol
addr16
cmp
ret
scas
rcl
jmp
mov
xchg
push
test
push
es
pusha
mov
xor
ja
pop
push
sub
sub
push
or
pusha
mov
jmp
pushf
push
lea
ja
stc
xor
stc
sub
sub
add
shld
neg
btr
mov
call
lea
jae
call
mov
pushf
lea
jne
lea
call
aaa
nop
sti
and
int3
popa
jge
lods
iret
cmp
or
sti
nop
call
mov
cmp
pop
mov
inc
add
or
mov
fst
ficomp
mov
pop
ja
ret
sbb
mov
pushf
pushf
mov
mov
pushf
pushf
mov
push
ret
sbb
inc
and
xchg
push
inc
pusha
repnz
hlt
push
cs
pop
jbe
push
aas
cmp
leave
ret
adc
in
sbb
jl
inc
dec
push
test
frstpm(287
or
jnp
int
daa
pop
mov
movs
dec
or
jecxz
icebp
sbb
shr
add
pop
(bad)
fiadd
cmovae
and
push
sub
xchg
inc
data16
jbe
mov
movs
sub
fbld
ret
push
movs
mov
lahf
jae
inc
mov
sbb
cmp
xchg
cmp
ja
lock
sbb
stc
sbb
add
int3
call
mov
gs
daa
mov
iret
movs
push
(bad)
(bad)
sbb
pop
mov
and
jge
jg
loopne
pop
(bad)
push
fbstp
xlat
repz
imul
mov
pop
data16
mov
mov
pusha
lea
jae
push
cmp
jmp
pushf
jmp
and
cmc
aas
and
push
and
xlat
mov
cmps
dec
xchg
or
scas
and
cld
and
in
pop
fist
or
pop
std
inc
retf
lds
adc
mov
pop
movs
and
xchg
push
adc
fist
xor
adc
cmp
jle
push
xchg
cmp
xchg
stos
fist
inc
pop
ja
xor
test
mov
xor
xchg
inc
and
mov
int
jne
xor
mov
or
out
push
movs
or
mov
or
adc
xchg
fst
mov
and
sbb
cld
xor
and
or
inc
lahf
aas
adc
or
int3
popa
mov
sbb
adc
sbb
enter
in
mov
push
adc
jecxz
and
mov
sahf
(bad)
lock
jbe
pop
(bad)
sub
sub
cmps
mov
or
mov
jecxz
mov
int
dec
sbb
leave
out
jbe
rol
jg
sbb
into
cmps
movs
xchg
xlat
mov
aad
adc
test
pop
rcr
cld
adc
or
pop
dec
adc
leave
stc
data16
adc
xor
xchg
jp
rol
mov
inc
cmps
or
mov
ror
aas
xchg
adc
dec
add
sbb
push
push
ficomp
in
adc
inc
imul
call
xchg
mov
(bad)
dec
in
pushf
lea
je
push
cmp
clc
clc
cmp
lea
pushf
mov
call
test
cmp
ss
out
movs
int3
in
sahf
dec
(bad)
in
jp
xchg
and
sub
mov
fwait
jb
or
das
jmp
xchg
dec
mov
lahf
inc
fild
loopne
daa
cmp
(bad)
and
xchg
pop
enter
and
sub
in
add
ss
aam
cmp
imul
xchg
ins
sbb
or
(bad)
pop
mov
ss
xchg
mov
add
stos
loope
dec
call
or
inc
and
xor
imul
pop
cmp
pop
jno
xor
cmp
jns
das
mov
jle
or
mov
je
(bad)
outs
sbb
sbb
push
cmp
adc
lock
cmp
jnp
aad
xor
mov
mov
pop
cmp
cmp
lock
sbb
hlt
cmps
inc
xlat
xor
adc
sar
sub
jae
aad
or
sbb
fiadd
ret
sub
or
xchg
mov
std
adc
popa
adc
jmp
cmp
paddd
shr
cmp
cmp
(bad)
fsub
inc
sub
adc
leave
sub
xchg
out
(bad)
(bad)
pop
dec
sbb
push
xor
push
inc
push
ret
mov
out
pop
pop
shr
fiadd
xchg
inc
sti
mov
addr16
(bad)
stc
cmp
fnstsw
mov
or
sbb
lods
(bad)
sub
and
or
out
lahf
lds
dec
push
outs
ret
adc
mov
mov
aas
xor
inc
push
jg
jnp
lds
aas
imul
(bad)
ds
icebp
stc
adc
imul
pop
inc
sbb
fsubr
dec
inc
and
pop
xor
jo
mov
call
into
mul
(bad)
adc
retf
ficomp
sbb
imul
adc
shl
loopne
fisub
push
jmp
adc
sbb
pop
xlat
cmp
cmp
pop
inc
push
les
pop
mov
sbb
je
and
sti
mov
nop
mov
push
test
enter
data16
mov
mov
inc
mov
or
dec
mov
and
adc
jns
xor
dec
ins
and
xchg
sbb
out
daa
test
sbb
cmovge
pushf
push
fisttp
push
dec
dec
into
gs
or
cmp
mul
cdq
inc
in
adc
imul
ss
pop
sti
addr16
jle
fld
or
xor
fdivr
xchg
leave
or
jecxz
xor
cmp
mov
pop
lods
stc
int
jb
ffree
div
mov
jecxz
jno
inc
iret
repz
pop
mov
daa
cmp
imul
mov
push
xlat
shr
int3
int
fxch
mov
shl
test
cmp
mov
pop
bound
scas
fsubr
add
pop
jbe
xchg
loopne
(bad)
cld
sub
cmp
or
add
mov
mov
lea
pushf
pushf
mov
pushf
pushf
push
pop
pusha
push
ret
jne
scas
inc
and
mov
mov
(bad)
sbb
hlt
sbb
and
sbb
inc
inc
movs
and
pop
adc
mov
pop
inc
(bad)
push
sub
in
daa
jns
push
or
jle
xchg
repnz
loope
sbb
or
shr
dec
sbb
aaa
int
push
mov
mov
push
cmp
push
and
jmp
pop
out
js
enter
pop
stos
das
add
jmp
imul
xchg
dec
or
mov
push
jnp
add
ds
cmps
lock
push
pusha
mov
call
mov
or
lea
jnp
mov
jmp
jp
and
and
stos
sub
jecxz
push
adc
out
push
jns
mov
push
outs
dec
out
inc
gs
ins
aaa
jmp
xlat
inc
fsubr
shr
and
xchg
jmp
js
adc
mov
jle
aam
sbb
mov
icebp
jno
in
lock
int3
adc
mov
xchg
mov
call
jle
movs
mov
cld
fbld
mov
add
xchg
ja
dec
pop
xor
sub
fimul
add
jge
or
mov
dec
inc
cmp
mov
stos
into
call
cmp
dec
hlt
adc
(bad)
cli
nop
push
ss
ds
not
dec
ds
dec
and
sub
adc
mov
xchg
dec
add
pop
loop
pop
sbb
test
jnp
mov
call
adc
icebp
and
jp
adc
imul
cmc
scas
loopne
not
je
xor
cs
mov
mov
(bad)
adc
cmp
push
xchg
into
loope
jmp
jg
cmp
push
loope
popa
test
or
inc
pop
fmul
push
xor
jae
popf
push
pushf
push
mov
push
mov
mov
mov
mov
push
pushf
lea
jmp
push
mov
pushf
mov
mov
pushf
lea
jmp
ins
into
cmp
or
(bad)
(bad)
adc
daa
push
(bad)
aas
fcomp
fimul
and
adc
mov
stc
pop
in
into
jl
test
clc
pop
(bad)
outs
test
outs
dec
in
lar
and
sbb
or
(bad)
out
test
jbe
fiadd
in
in
test
and
add
repz
ret
sbb
hlt
sbb
jle
stos
fdiv
cli
push
sub
dec
adc
dec
mov
ret
pop
in
and
or
or
outs
mov
in
jp
add
cmc
lahf
cmp
sub
(bad)
cmp
xchg
retf
(bad)
sar
stos
sbb
test
xlat
push
mov
adc
jmp
shr
jbe
lock
pop
xor
int
sub
sub
xchg
rcr
rol
(bad)
iret
int3
sub
xor
enter
mov
out
lods
arpl
pop
mov
and
jno
pop
mov
test
icebp
rep
jge
lods
fdivr
dec
and
stos
int
push
mov
push
jecxz
sbb
or
fs
xchg
mov
jmp
mov
les
mov
lahf
js
mov
test
push
push
add
sti
into
mov
lods
push
lahf
call
add
fadd
call
je
jmp
js
mov
or
aaa
out
jmp
rcl
add
and
cwde
call
sbb
(bad)
adc
rcr
sahf
and
cli
call
movs
sub
mov
(bad)
retf
sbb
shl
sbb
or
cmps
xor
dec
daa
pushf
add
sbb
rcr
les
xchg
xchg
test
ins
xchg
into
cmp
pusha
jne
jl
rcr
inc
outs
(bad)
shr
lods
xlat
std
lods
fmul
and
inc
aad
fsub
fistp
cmps
pushf
(bad)
adc
jo
xchg
add
scas
or
mov
xchg
and
dec
dec
pop
repnz
in
dec
pop
(bad)
in
sahf
jb
sti
test
nop
jmp
scas
sbb
add
dec
lods
push
fadd
pop
adc
rcr
mov
pop
lods
scas
fisubr
push
(bad)
or
and
fmul
inc
loope
fistp
cmp
mov
push
cld
sti
adc
addr16
fcomp
aam
pusha
add
jmp
sahf
fsub
mov
out
pop
out
into
cmp
mov
in
call
mov
dec
push
push
mov
dec
ins
mov
pop
dec
(bad)
jmp
sub
pop
jle
fimul
pop
pop
je
and
cmp
mov
clc
mov
enter
fisubr
dec
mov
rcr
push
fwait
pop
loopne
das
xchg
xchg
sbb
inc
pop
mov
dec
imul
pop
aam
mov
sbb
sub
xor
js
mov
fcmovnu
fwait
jecxz
dec
pop
sub
fucomi
(bad)
xlat
mov
sub
sbb
mov
call
cld
xchg
js
push
cmp
and
xchg
xchg
in
mov
daa
sbb
xor
call
or
dec
adc
(bad)
std
sbb
push
cmps
dec
mov
popf
les
dec
rcl
and
pop
aas
sbb
sbb
shr
in
cdq
call
sbb
sub
pop
retf
sbb
pop
or
shr
or
call
mov
pop
test
outs
mov
xor
xor
(bad)
ja
cs
jecxz
push
xchg
push
lods
jmp
or
sbb
test
or
and
push
cmp
inc
rol
pop
(bad)
dec
mov
cdq
fisttp
or
pop
and
adc
push
add
dec
cld
clc
movs
call
je
push
cmp
dec
std
dec
xchg
test
(bad)
push
xchg
ficom
push
std
enter
adc
and
sbb
pop
pop
sub
dec
pop
jnp
aas
pop
dec
or
mov
mov
push
adc
dec
mov
cvtps2pd
pop
mov
in
push
inc
or
mov
inc
or
adc
test
ss
popf
(bad)
dec
orps
dec
pushf
fild
jl
pop
adc
inc
or
pop
pop
in
mov
ds
rol
fld
push
int
push
movs
sbb
push
pop
jmp
js
test
jns
and
dec
adc
rol
dec
dec
mov
adc
pop
mov
mov
add
inc
inc
and
adc
and
or
rcr
pushf
rcr
adc
sti
or
mov
fidivr
adc
outs
adc
(bad)
jmp
xlat
sbb
fcomp
int3
addr16
cmp
push
fs
cmp
pop
xchg
xchg
mov
cwde
ret
ficomp
fsubr
(bad)
push
dec
rcl
lahf
sbb
in
mov
lods
rcl
mov
lods
adc
add
data16
pop
push
(bad)
call
pop
retf
movs
sbb
push
push
pop
out
sbb
push
cmc
push
sub
pop
dec
xor
dec
enter
ficom
dec
xchg
push
inc
int3
pop
pop
fisttp
pop
leave
cmp
mov
pop
std
pushf
pop
lods
fisttp
call
retf
pop
cmp
iret
push
aam
int3
icebp
pop
rol
mov
icebp
fucomp
sub
sbb
lods
pop
push
mov
pushf
rol
or
out
push
dec
jmp
test
(bad)
int3
xor
(bad)
jp
fsub
push
jmp
push
jnp
rcl
mov
(bad)
push
leave
xchg
sbb
fwait
(bad)
neg
mov
cmc
fbstp
sbb
add
pushf
rol
push
xor
fdivr
pop
dec
mov
in
mov
(bad)
ret
cli
sti
mov
pop
mov
mov
jbe
call
or
leave
rcr
not
leave
test
push
cmp
xlat
inc
mov
(bad)
shl
aam
inc
push
pop
lea
push
into
popf
pop
xor
jbe
mov
mov
lock
jb
retf
cmp
adc
(bad)
pop
fs
cmp
fcomp
int3
xlat
rol
or
stos
adc
cmps
lods
xchg
xchg
mov
les
call
cdq
(bad)
pop
(bad)
aas
and
fst
xor
test
fadd
sbb
push
add
aad
iret
ss
or
aad
or
adc
sub
sahf
inc
arpl
mov
sbb
jmp
leave
js
test
mov
mov
addr16
aad
cwde
pop
mov
mov
fsub
mov
pop
sbb
or
or
popf
mov
add
jge
(bad)
(bad)
xchg
pop
and
jmp
shl
fisttp
mov
inc
sub
pop
test
add
push
xchg
test
sbb
fstp
add
cmp
mov
push
pop
imul
inc
leave
daa
sbb
cmp
and
cmp
loop
dec
xchg
(bad)
pop
pop
rol
pop
je
(bad)
movs
jmp
and
iret
mov
pop
mov
sar
(bad)
(bad)
repz
mov
ins
add
in
jmp
ror
ds
popf
dec
or
mov
pop
pop
addr16
ja
aam
pop
adc
aaa
retf
pop
ins
into
ins
loope
retf
cmp
jne
push
sub
in
rcl
into
or
ss
xor
add
xchg
(bad)
cld
rcl
inc
mov
lahf
int3
rol
inc
sbb
mov
and
fsubr
jmp
lds
fcmovnbe
mov
sbb
popf
ins
(bad)
pusha
inc
cmps
xor
pop
pop
mov
mov
jbe
or
fistp
inc
jae
xor
pop
cwde
neg
shr
xchg
mov
ret
cmp
pop
cdq
cld
sbb
push
inc
cmps
push
pushf
dec
imul
ret
ins
mov
adc
ins
xchg
stc
cmps
pusha
ret
sbb
outs
fcomp
xor
enter
int3
fistp
pop
aaa
or
retf
fldl2t
fs
fisubr
dec
pushf
in
inc
xor
mov
fwait
pop
icebp
sbb
push
shl
popf
(bad)
fcom
das
test
xchg
dec
inc
pop
fucomi
jecxz
pop
push
retf
fcom
enter
fcomi
mov
mov
dec
enter
xor
jo
dec
jns
repz
push
xchg
pop
iret
inc
push
fcomp
div
or
ret
xchg
(bad)
js
js
pop
xchg
inc
pop
and
pop
sub
fisttp
inc
ja
xchg
push
aam
pop
sbb
ficom
(bad)
fcmovu
rcr
das
sbb
pop
adc
xor
mov
pop
mov
mov
mov
mov
test
push
dec
fist
pop
fpatan
ret
mov
xor
mov
cwde
rcl
lea
cmp
pop
push
xor
sbb
pop
cmp
call
sar
and
push
push
pop
ror
fisttp
xchg
jbe
pop
adc
(bad)
push
pop
xor
cmp
cmp
pop
call
pop
retf
push
mov
push
stos
jmp
fist
adc
inc
fwait
cdq
test
mov
and
xchg
mov
stos
adc
aam
xchg
mov
ffree
pop
pop
push
xchg
retf
xchg
pop
xor
cwde
jl
les
pop
rcl
adc
mov
and
mov
cdq
retf
fimul
adc
ret
mov
jbe
ficom
fistp
mov
push
xchg
fcmovu
aad
ret
push
mov
inc
pop
xchg
fstp
inc
aam
ficom
xchg
mov
pop
ret
push
push
mov
ffreep
rcl
fst
pop
aad
push
cmp
mov
pop
ins
pop
dec
fiadd
imul
sbb
pop
xchg
and
add
sbb
xor
cmp
movs
cmp
jbe
ret
(bad)
popa
imul
fsubr
adc
mov
cmp
call
lea
xlat
xor
dec
lock
vmulps
jg
mov
shr
jge
sub
ins
(bad)
adc
pop
sub
mov
push
cs
mov
push
sbb
fdivr
pop
popf
dec
mov
pop
add
jae
ins
adc
fcomp
push
in
pop
enter
sbb
push
fisttp
mov
lea
repz
out
shr
test
adc
pushf
ficomp
rol
xchg
pushf
inc
pop
leave
pop
imul
mov
jns
mov
fwait
ins
mov
aam
add
call
shl
int3
cld
inc
xlat
sar
inc
fwait
aam
mov
scas
(bad)
ret
add
cmps
push
jnp
or
fcomp
jmp
outs
shr
in
imul
mov
or
shl
mov
xchg
push
pop
adc
push
pop
adc
fucomp
fnstcw
iret
ins
(bad)
adc
test
push
dec
sbb
(bad)
sbb
(bad)
pop
dec
inc
jp
jne
sar
cmps
pop
push
add
jb
and
mov
cwde
mov
dec
int3
cmp
pop
mov
fcomp
leave
rcl
push
xchg
shl
mov
call
pop
xor
mov
xor
mov
sbb
hlt
xor
push
fs
pop
pushf
(bad)
xchg
mov
xchg
sbb
movs
test
xor
mov
xchg
push
mov
mov
inc
add
ins
push
dec
sti
pushf
pop
add
push
retf
xchg
adc
ins
(bad)
jae
pop
(bad)
pop
std
cmp
mov
jle
xor
push
repnz
inc
xlat
dec
cmp
xlat
sbb
ror
aam
sbb
scas
dec
jge
fdivr
ret
jg
(bad)
cmp
nop
pushf
jmp
(bad)
or
out
mov
push
out
je
mov
or
cmp
test
mov
sbb
sbb
loope
loop
pop
add
aas
cmp
xchg
ds
cwde
test
leave
push
pop
cld
xor
pushf
push
inc
stos
or
out
sbb
adc
xor
fcomp
cdq
(bad)
mov
dec
mov
test
mov
pushf
fild
fs
xchg
adc
fcom
call
pushf
push
bound
mov
stos
and
jmp
sub
and
push
or
mov
imul
mov
popa
sar
in
and
pusha
and
adc
dec
xchg
sub
sbb
mov
sbb
mov
sahf
mov
(bad)
inc
dec
lea
call
mov
lock
cmp
mov
inc
pop
xchg
leave
add
jmp
call
lods
push
les
sub
pop
div
cmp
xchg
sub
int3
adc
mov
movs
fld
mov
adc
lods
mov
push
test
das
or
pop
lds
mov
fcmovbe
push
es
sbb
xchg
enter
call
sbb
popa
repz
jnp
xor
shl
(bad)
out
into
or
push
mov
adc
xchg
test
mov
test
mov
jecxz
ja
jnp
cmp
mov
dec
pop
push
push
xchg
pusha
(bad)
pushf
cmc
pop
adc
add
inc
xlat
enter
dec
dec
int3
mov
rol
push
dec
imul
pop
push
pop
dec
movs
shl
(bad)
(bad)
jns
shl
hlt
fwait
arpl
in
push
mov
pop
add
inc
(bad)
jo
ror
mov
jns
cmp
mov
or
cmp
test
mov
xor
lea
xchg
lods
jp
inc
pusha
jmp
and
jge
jp
mov
dec
stos
xchg
cmovs
lock
jp
mov
push
cmp
add
mov
and
push
pop
adc
(bad)
rol
js
dec
mov
dec
loop
dec
jbe
inc
mov
push
sub
xchg
jge
cmp
dec
mov
fstp
ror
scas
int3
test
adc
leave
scas
pop
sub
xor
mov
push
aam
rcl
jecxz
mov
pop
sbb
mov
cmp
dec
xor
movs
rcr
cld
mov
pop
pop
dec
xor
inc
lea
adc
stos
or
cmp
pusha
aaa
clc
push
rol
sbb
mov
pop
mov
dec
hlt
xor
(bad)
jnp
sbb
push
jno
fcomp
pop
out
jecxz
sar
xor
and
test
add
and
or
int3
sub
(bad)
shl
js
nop
inc
out
cli
mov
ja
mov
pop
and
jp
fldenv
push
jbe
es
push
adc
mov
inc
idiv
mov
jmp
jecxz
or
(bad)
mov
or
and
push
mov
call
dec
icebp
jmp
or
xchg
retf
inc
push
mov
mov
mov
mov
addr16
push
or
cs
test
outs
jle
sub
in
loope
call
scas
ficom
xchg
mov
ret
sahf
pop
sbb
sbb
xchg
dec
pop
mov
add
mov
pusha
dec
pop
pushf
(bad)
cwde
pop
mov
out
xchg
int3
mov
sbb
outs
jp
data16
pop
imul
jge
fild
cmp
imul
add
pop
pushf
cld
cli
or
sbb
les
scas
and
mov
les
cdq
stos
movs
out
cmp
inc
jo
sbb
call
xchg
sub
push
sub
mov
enter
xchg
outs
dec
sub
adc
mov
ja
outs
xchg
int3
push
out
inc
jg
clc
ja
mov
je
push
outs
call
jmp
dec
jmp
sub
and
clc
shl
shl
inc
dec
inc
je
stos
loope
std
fldenv
fiadd
dec
mov
sbb
xchg
xor
nop
sbb
dec
sbb
pop
inc
mov
pop
lods
cld
rol
push
test
add
or
jecxz
jecxz
xchg
sbb
adc
sbb
repnz
sbb
or
ins
imul
xlat
and
iret
les
jge
int3
push
sub
pop
dec
rol
popa
and
mov
pop
icebp
sahf
mov
or
mov
lahf
(bad)
mov
ds
mov
rcl
mov
xchg
mov
pusha
push
pop
ror
xor
rcl
shl
inc
fisub
mov
xchg
movs
out
mov
ficomp
ss
pop
mov
mov
clc
pop
mov
test
pushf
(bad)
fcom
aad
pop
scas
cs
mov
xchg
popa
dec
ds
fwait
shl
dec
xchg
je
stc
xchg
mov
mov
fcom
push
jecxz
das
dec
imul
daa
inc
mov
fdivr
add
and
mov
ror
movs
jo
adc
mov
inc
cld
push
pop
call
cmp
out
imul
xor
push
test
sbb
mov
mov
mov
lock
sahf
les
adc
and
mov
xchg
jb
scas
lds
inc
xchg
rcl
adc
sbb
push
aad
dec
sbb
shl
jne
mov
sub
push
clc
cdq
sbb
cwde
mov
cdq
pop
iret
retf
into
inc
(bad)
mov
inc
jmp
sub
add
jns
fisub
pop
fwait
ins
test
stos
add
popf
or
sar
int3
jbe
inc
fdivr
ror
iret
or
push
scas
aaa
retf
fild
movs
dec
fisubr
adc
sub
mov
mov
iret
ins
xor
pop
mov
mov
out
fisttp
xchg
cmp
jbe
xchg
aam
gs
test
mov
xchg
or
pop
repnz
retf
and
inc
ds
std
inc
push
adc
push
leave
fwait
mov
jmp
call
pop
inc
(bad)
jmp
add
and
mov
div
pop
pop
inc
pop
repnz
mov
mov
push
mov
pop
xchg
je
jbe
adc
retf
ficom
jecxz
pop
jmp
(bad)
and
js
stos
dec
sar
jge
sbb
pop
inc
and
arpl
pop
mov
add
fdiv
fcomp
inc
popa
(bad)
push
sbb
sbb
and
sbb
adc
jmp
cld
lahf
cmp
dec
jp
aam
data16
sti
lock
cmp
push
lods
jle
jnp
dec
cmp
dec
mov
push
xchg
lea
mov
mov
jbe
(bad)
jp
and
into
push
cmp
xor
push
mov
ins
add
call
clc
mov
cwde
xchg
and
mov
mov
ss
mov
pop
stc
add
ror
cld
fadd
jle
push
cwde
(bad)
sbb
fwait
nop
jnp
add
popf
push
sub
jg
sbb
and
xor
jae
shl
sbb
jno
pop
or
inc
cmps
xchg
jl
dec
mov
pop
lea
aam
push
stos
dec
inc
add
repnz
scas
in
mov
cmp
pop
fimul
je
pop
aam
aas
jl
adc
mov
loope
dec
arpl
jp
retf
xor
mov
cmc
mov
sbb
pop
mov
xchg
shl
(bad)
popa
push
mov
int3
dec
push
xor
les
inc
inc
ja
call
jg
call
mov
pop
jmp
ret
not
xlat
ds
pop
push
pop
add
shl
mov
dec
push
mov
retf
(bad)
or
xlat
(bad)
xchg
inc
shr
xchg
inc
dec
test
push
jnp
adc
dec
push
xor
pop
sti
ins
and
mov
in
out
jnp
dec
cmp
adc
inc
push
retf
dec
mov
ret
in
adc
movs
jmp
jmp
xchg
add
xchg
out
aad
add
inc
repnz
mov
fdiv
sbb
cmp
popf
cwde
call
pop
ins
push
loop
clc
adc
xor
icebp
sbb
cdq
mov
iret
pushf
dec
pop
in
xchg
fadd
stos
sub
shl
sub
cld
nop
mov
cmp
ja
xchg
std
das
hlt
add
sbb
and
fisubr
jg
daa
inc
lahf
(bad)
dec
imul
inc
mov
dec
nop
add
ret
mov
inc
lock
pop
xor
and
hlt
add
fistp
mov
aas
sbb
adc
mov
pop
push
jns
into
and
mov
sbb
sub
mov
inc
popf
stos
rcr
ror
sub
pushf
popf
aas
movs
mov
push
retf
loope
mov
adc
div
fld
cmp
xchg
rcr
pop
int3
hlt
mov
add
rcr
sub
cmp
mov
inc
jge
ja
ficom
add
mov
cli
inc
aaa
ss
push
movs
into
inc
adc
sbb
push
xchg
mov
stos
shr
pop
ficom
xchg
mov
jno
and
fmul
or
sbb
dec
or
xchg
pop
jp
fwait
pop
or
fisubr
adc
inc
paddusb
add
movs
sub
movs
add
dec
and
cmp
mov
fstp
rcr
push
jge
pop
xchg
nop
cmp
pushf
call
mov
clc
call
int
sbb
or
mov
push
outs
out
fild
dec
rcl
clc
add
sub
xor
nop
cwde
sar
(bad)
push
in
das
and
pop
aaa
dec
mov
mov
es
fs
mov
rcr
jmp
mov
enter
mov
sti
and
loopne
mov
xchg
ret
inc
cmp
inc
je
fwait
pop
test
pop
out
mov
in
mov
std
xor
xor
arpl
lock
adc
mov
mov
call
and
xchg
shl
add
mov
ss
push
stos
es
push
mov
mov
and
(bad)
pop
pop
fiadd
mov
pop
dec
shr
nop
dec
in
dec
pop
stc
scas
jmp
pop
mov
cld
imul
push
outs
inc
out
aas
cld
cmps
adc
dec
jmp
pop
out
or
jmp
(bad)
xor
fcomp
lock
fcmovne
inc
dec
dec
jl
cmp
popf
cwde
push
adc
xor
mov
pop
cmovle
lahf
pushf
mov
mov
sub
call
mov
cmp
pop
adc
pop
jmp
popa
adc
popf
test
xchg
ret
push
pop
mov
mov
rcl
xor
sbb
adc
or
inc
dec
lods
(bad)
jae
aaa
xchg
and
push
mov
fwait
xchg
xchg
je
leave
mov
xchg
xchg
adc
mov
js
jbe
out
pop
stos
lea
xchg
sub
sar
test
or
xor
cmp
(bad)
mov
add
add
fcmovne
pop
pop
xor
sub
and
jp
adc
call
mov
cmps
dec
test
push
adc
mov
int
mov
movs
mov
push
mov
xchg
gs
outs
sbb
ret
mov
jo
cdq
mov
loope
add
mov
cmp
out
and
jmp
jnp
ins
cmc
dec
loop
scas
push
call
pop
cmp
sbb
inc
push
cmp
or
sbb
push
das
mov
mov
mov
mov
sbb
dec
lods
mov
inc
jl
retf
ficom
imul
sbb
push
sub
sbb
mov
cdq
aam
xchg
imul
push
pop
mov
pop
mov
inc
ret
leave
pop
pop
or
push
cmps
add
pop
mov
sahf
mov
fs
retf
xlat
push
out
sub
imul
movs
das
xchg
js
enter
mov
fwait
icebp
pop
or
aam
repnz
cwde
test
pusha
pop
lods
pop
pop
push
repz
mov
pushf
cmp
push
rcr
and
mov
gs
aam
ins
cmp
aad
jg
push
retf
xchg
sbb
not
jge
pop
fist
mov
xchg
(bad)
stos
rcl
xchg
enter
movs
push
lock
jno
fstp
loope
dec
dec
push
call
jmp
inc
sub
jne
or
adc
inc
push
cmp
gs
or
(bad)
add
sub
fsub
push
movs
jp
or
pop
out
cli
and
arpl
jecxz
mov
sub
xchg
iret
fcmovb
movs
or
pop
stos
cmps
fild
pop
dec
leave
outs
ins
stc
or
mov
jle
fwait
loop
mov
popa
jmp
stos
into
jns
pushf
pop
outs
push
sti
push
bound
dec
test
out
pusha
aam
pop
clc
or
pop
mov
jae
or
mov
mov
int
les
xor
xor
sbb
mov
or
mov
mov
jmp
pop
arpl
ficomp
mov
cmp
adc
add
retf
dec
retf
aad
in
mov
pop
cmp
pop
mov
sbb
mov
xchg
mov
or
aam
push
mov
mov
cli
mov
lea
inc
dec
fldln2
adc
aam
lea
xor
rcl
push
dec
sahf
sbb
mov
scas
xchg
and
and
gs
fsub
jmp
lock
mov
jmp
pop
mov
xchg
jo
into
int3
pop
push
push
pop
xchg
rcr
rol
mov
idiv
mov
xchg
adc
shl
and
push
cmp
pop
or
xchg
mov
pop
rcr
aam
fadd
lock
or
cli
push
lea
jmp
mov
xor
leave
jl
mov
inc
adc
int3
sub
cwde
mov
pop
pcmpeqw
test
xor
lahf
fst
(bad)
aas
rcl
jne
mov
test
pop
out
dec
imul
xor
pop
sar
popf
mov
ja
(bad)
xlat
push
movs
add
sbb
pop
fwait
dec
cdq
xor
shr
aaa
ror
push
callw
inc
mov
jnp
sbb
inc
or
ins
lods
mov
add
call
and
mov
xor
jecxz
jbe
rcl
xor
dec
dec
push
push
test
sbb
shr
push
aam
push
fs
pop
xchg
or
test
pop
mov
mov
(bad)
pop
scas
push
mov
mov
not
xlat
mov
cmp
sub
cwde
call
dec
push
retf
lahf
cmc
shl
mov
push
push
mov
stos
mov
mov
mov
popf
shl
mov
addr16
mov
and
test
aaa
mov
adc
pop
or
ds
leave
aaa
push
std
xor
xchg
inc
push
jno
xchg
and
sbb
pop
sub
js
jo
fstp
inc
dec
fxch
jmp
sub
sbb
imul
push
cwde
sub
fnsave
sub
lods
pop
push
retf
mov
jae
ficomp
mov
fwait
add
pushf
dec
jne
lock
fstp
cmps
loope
retf
ror
stc
jbe
out
jmp
xchg
xchg
xchg
dec
mov
out
test
shr
arpl
mov
mov
mov
and
xchg
lds
or
and
dec
(bad)
cmps
fwait
(bad)
xchg
push
jns
cmp
sahf
or
pop
(bad)
shl
and
movs
int3
cmp
std
mov
mov
mov
cmp
or
popf
sbb
pop
mov
sti
pop
dec
aas
jmp
dec
lods
fnstsw
shl
dec
lods
sahf
std
in
sbb
jp
xchg
ins
jmp
or
pop
xchg
inc
rcr
test
xchg
xor
dec
movs
in
jl
pop
xlat
nop
stos
inc
jp
test
ins
inc
stc
cld
rcl
or
jmp
gs
mov
arpl
xor
(bad)
push
mov
dec
icebp
aad
aas
inc
sti
cwde
cmp
mov
sub
pcmpeqb
add
lahf
push
jmp
mov
mov
mov
stos
inc
std
mov
inc
adc
and
aam
std
(bad)
hlt
lahf
repnz
scas
xchg
xchg
mov
cld
pusha
mov
push
repnz
adc
sub
or
cmp
sti
movs
mov
sbb
xchg
lock
scas
pop
xor
inc
imul
or
pop
push
push
jno
call
and
cwde
arpl
cmp
adc
pop
sbb
pop
sub
sbb
(bad)
sbb
adc
or
xor
and
mov
sub
stos
push
rcr
xchg
and
push
pushf
push
out
arpl
sbb
aam
pop
dec
push
out
dec
loopne
out
mov
or
pop
lahf
mov
xor
mov
mov
adc
aam
push
adc
xchg
test
rcl
pop
mov
pop
mov
cwde
arpl
xlat
inc
cwde
xchg
mov
adc
test
(bad)
pop
and
(bad)
xor
mov
into
push
mov
mov
adc
dec
aas
loope
mov
push
xchg
and
dec
jns
or
xchg
fcomp
inc
sbb
or
ins
retf
pop
sub
(bad)
mov
sbb
xchg
fcomip
outs
clc
push
dec
pop
dec
movs
inc
mov
rol
mov
aaa
sar
jne
and
inc
cmps
in
jb
jno
(bad)
call
inc
mov
sbb
stos
popa
sbb
pusha
pop
mov
adc
lock
dec
mov
mov
xchg
xchg
out
and
sub
mov
ins
adc
aam
pop
rol
sub
lds
adc
fnstsw
pop
add
sbb
(bad)
ret
ret
fdivr
inc
loop
mov
pusha
sbb
mov
ja
addr16
daa
push
dec
sbb
inc
sbb
lds
fs
mov
sbb
adc
jnp
ja
lods
push
cmp
call
cmp
jle
push
neg
stos
or
mov
fcom
pop
int3
sahf
push
push
pop
mov
push
inc
fcom
push
xlat
push
sbb
ficom
push
lods
mov
push
push
cs
jle
cmp
ins
leave
add
push
push
and
jae
mov
xchg
or
jae
ja
ret
mov
mov
mov
inc
and
xchg
ja
test
mov
fld
xor
add
not
xchg
pop
into
inc
jnp
loopne
push
cmps
test
cmp
leave
int3
bound
dec
fistp
cdq
inc
xor
dec
add
sahf
in
mov
stos
scas
jnp
aam
fwait
push
pop
fisubr
cmp
xchg
sbb
ficomp
jno
mov
sub
mov
jmp
call
or
aad
mov
sti
sbb
fldcw
mov
push
and
sbb
ret
add
fbld
lods
xor
pop
inc
repnz
lahf
arpl
sbb
pop
pop
aad
sbb
pusha
lahf
ret
fnstenv
aad
mov
std
dec
jo
xchg
aas
in
aam
or
into
push
aam
mov
mov
outs
mov
outs
mov
mov
mov
or
lea
mov
xchg
addr16
pop
mov
jnp
jl
pop
inc
shr
mov
dec
adc
or
iret
mov
adc
popa
pop
shr
call
imul
xchg
add
aam
out
div
fst
mov
lods
cmp
jp
fbld
adc
iret
jle
das
jg
pop
add
pop
int3
inc
mov
mov
mov
das
clc
imul
lds
xchg
(bad)
rcr
mov
pop
adc
es
movd
(bad)
(bad)
(bad)
mov
xchg
call
jno
lock
jno
shl
icebp
pushf
addr16
xchg
cmp
imul
pop
shr
mov
fwait
sub
sub
mov
cmp
xor
ficom
ret
pop
pop
pushf
shr
cmp
jb
pop
lods
pop
mov
iret
mov
mov
cdq
shr
jecxz
ss
stc
aaa
stos
xchg
std
test
pop
cmps
les
and
fiadd
push
jg
jg
mov
mov
cmp
(bad)
not
jb
dec
outs
mul
sub
xchg
pop
jg
xchg
fld
and
sub
xchg
(bad)
and
icebp
sbb
sar
sbb
mov
inc
push
push
mov
xor
sub
xchg
mov
jae
dec
inc
mov
enter
in
fdivr
xchg
call
adc
push
les
call
add
sbb
push
mov
push
push
lea
inc
xchg
repz
mov
aaa
test
mov
sbb
in
xor
push
test
push
adc
bt
mov
add
popa
pop
fwait
test
or
fcom
mov
jge
xor
int
fsub
cmp
push
ret
and
sbb
les
adc
push
fisttp
mov
cmp
out
rol
ja
loopne
mov
les
jne
xchg
mov
jns
mov
arpl
mov
test
sti
lods
push
dec
aad
jnp
(bad)
xor
dec
mov
mov
pop
xchg
push
stc
jle
jmp
rcr
fwait
aad
int
ins
test
and
push
enter
fld
jns
pop
ss
ins
mov
jne
retf
repnz
sbb
mov
dec
mov
mov
mov
scas
jno
shl
mov
pop
clc
cmp
aam
call
mov
jmp
and
test
mov
les
dec
sbb
mov
sbb
push
push
fldenv
iret
ror
xlat
imul
add
mov
mov
iret
sbb
cdq
add
or
pop
clc
adc
sti
fmul
pop
scas
in
dec
in
ficomp
dec
jmp
sub
fidiv
adc
and
mov
lock
push
lods
pushf
push
sahf
sbb
sub
out
xor
push
dec
xor
pop
push
or
stos
in
test
adc
daa
dec
(bad)
loopne
aas
call
loop
dec
addr16
mov
pop
jmp
push
retf
shr
xchg
dec
mov
xor
sbb
pop
inc
cwde
dec
lods
rcl
repnz
cdq
cmps
jae
mov
jno
sbb
dec
loope
mov
sahf
xor
xlat
jae
ja
into
jae
ror
cwde
inc
dec
or
nop
hlt
lock
jp
aaa
fs
int3
lahf
push
jo
int3
gs
and
ds
sbb
mov
mov
sub
popf
push
or
bound
pop
les
xchg
rol
mov
leave
sbb
inc
pop
movs
aad
ret
cmps
xchg
dec
inc
inc
neg
mov
cli
inc
pop
fwait
mov
push
push
mov
xchg
nop
rcr
mov
mov
popa
dec
sub
sti
push
sub
lods
mov
stos
mov
or
out
setns
shr
rcl
push
pushf
mov
xchg
clc
pushf
mov
adc
sbb
add
stc
xchg
add
mov
mov
mov
sbb
loop
mov
and
fisttp
mov
loopne
adc
outs
cmp
mov
pop
and
outs
mov
xchg
rcl
arpl
sbb
cdq
jb
inc
gs
aad
push
xchg
(bad)
in
je
iret
fisttp
retf
add
(bad)
adc
(bad)
dec
sbb
inc
sbb
(bad)
cmp
cmp
sub
push
icebp
sti
cmp
jo
fdiv
mov
sti
add
mov
shl
out
mov
push
adc
fnsave
sbb
ror
(bad)
es
sbb
int3
test
mov
sbb
pop
sub
adc
xchg
fnstenv
sar
pushf
adc
cmp
(bad)
pop
xchg
into
pop
and
mov
sahf
xchg
adc
pop
jmp
pop
fnstenv
aam
mov
aaa
mov
jns
adc
pop
retf
test
cmp
loop
add
mov
adc
xchg
push
xchg
enter
jge
icebp
inc
aaa
fwait
cmp
xlat
mov
push
mov
mov
cmp
aam
(bad)
cmp
clc
stc
movs
aaa
jno
enter
stc
fidiv
adc
push
xor
cwde
in
and
outs
dec
mov
or
push
jns
add
mov
pop
mov
nop
icebp
std
jo
pop
mov
jno
call
mov
pop
xor
mov
rcl
inc
mov
sbb
dec
add
aam
rcr
repnz
aaa
aam
push
ss
(bad)
mov
(bad)
xchg
aaa
cmp
mov
pushf
inc
cmps
xor
int
addr16
aas
cmps
in
mov
mov
jo
aam
jnp
inc
lods
adc
mov
fwait
aaa
sub
sub
retf
xchg
jmp
xor
dec
jns
icebp
fldln2
push
pop
(bad)
nop
xchg
push
lods
rcl
cmc
outs
jb
vpavgb
call
je
fs
push
push
popf
test
cmp
(bad)
in
or
adc
cwde
cld
mov
push
add
dec
out
test
cmp
add
inc
and
mov
adc
jle
call
ror
cmc
pushf
mov
xor
xor
pop
add
or
push
daa
cmp
fistp
aaa
mov
ja
mov
jecxz
and
cmp
inc
pop
adc
aad
pop
jmp
inc
inc
dec
dec
add
jmp
inc
jl
push
scas
add
or
js
or
push
or
jp
jbe
dec
pop
lods
jge
pushf
jne
mov
cmp
or
xlat
pop
push
sub
mov
jl
push
jno
sub
fdiv
adc
and
into
adc
inc
xchg
mov
jle
sbb
xchg
jmp
jnp
shl
and
pop
addr16
mov
cdq
(bad)
ret
xor
mov
retf
aas
inc
ins
loop
push
cmp
jns
pop
add
rsqrtps
das
cmp
outs
js
rcl
es
popf
rcl
pop
cmp
sbb
dec
push
outs
fld
mov
dec
out
push
xor
aaa
mov
sbb
inc
xchg
(bad)
ds
mov
and
mov
mov
dec
pop
jnp
rcr
je
aaa
les
jle
jae
repz
outs
inc
dec
add
(bad)
lods
inc
push
mov
aas
cld
neg
mov
cmp
mov
xchg
sub
dec
xchg
push
mov
dec
(bad)
push
sub
ret
in
adc
idiv
mov
push
cli
fcom
arpl
cmp
xchg
add
stos
ja
jne
pop
mov
movs
push
(bad)
sbb
imul
add
test
sar
movs
test
mov
add
push
loop
xor
push
imul
fs
ds
(bad)
les
push
push
in
jg
cld
mov
mov
pop
mov
inc
aad
cmp
mov
jb
sbb
ror
push
push
dec
ins
mov
out
jmp
out
mov
sbb
push
cmp
enter
dec
pop
aas
xlat
fwait
es
mov
add
nop
or
cmps
push
and
dec
cmc
push
add
sahf
mov
(bad)
sti
mov
mov
pop
test
loopne
mov
mov
cs
imul
lds
cwde
test
popf
and
stos
in
popa
bound
les
mov
mov
inc
xchg
cdq
imul
mov
or
lods
dec
pop
jns
pop
imul
jmp
and
nop
dec
dec
je
mov
and
hlt
jecxz
pop
sub
inc
aaa
outs
sbb
xlat
and
fwait
xchg
mov
dec
lea
jge
pop
shl
fst
inc
jle
movs
popf
call
mov
daa
and
cs
add
call
lods
and
test
mov
dec
inc
lods
ja
xchg
push
popf
mov
mov
xlat
mov
in
js
loop
pop
cmp
fidivr
cmc
xchg
add
out
cmp
mov
or
fsub
pusha
popa
sub
int3
mov
sub
sbb
cmps
mov
push
cmp
fadd
loopne
cmc
cmp
ret
mov
repz
mov
mov
pop
sub
mov
pop
(bad)
addr16
mov
mov
or
mov
mov
sbb
shl
push
mov
jp
imul
mov
(bad)
mov
movs
fidivr
sub
into
push
add
icebp
push
fwait
mov
outs
jno
out
icebp
sbb
jbe
fistp
mov
xor
and
(bad)
rcl
mov
call
inc
fsub
xchg
mov
cmp
aas
jno
add
push
(bad)
add
lea
inc
pop
nop
mov
dec
aam
pop
out
push
cmp
dec
fdivr
dec
sbb
(bad)
rcl
fisttp
lods
loop
mov
aam
mov
mov
aam
push
xchg
ficomp
xchg
jo
out
jle
test
cmps
out
jle
int3
cdq
repnz
mov
sbb
mov
push
inc
cmp
sub
pop
cmps
outs
cmp
mov
stos
loope
xchg
cmp
stc
adc
push
jae
sbb
pop
test
jp
test
pop
dec
adc
add
push
loope
ins
pop
gs
push
mov
lods
adc
push
fiadd
sub
stc
mov
imul
adc
sbb
adc
and
out
mov
pop
dec
scas
xchg
ins
out
pop
mov
outs
rol
mov
pop
mov
leave
and
xor
sub
das
jl
push
mov
sbb
ins
rol
popa
movs
cmp
sub
mov
xor
aaa
push
push
mov
mov
cmp
push
inc
push
pop
mov
js
dec
jmp
enter
jbe
cmp
pop
es
dec
imul
daa
mov
lods
dec
adc
sbb
and
aam
cmps
pop
xor
push
(bad)
add
mov
xchg
loope
stos
and
push
addr16
test
jl
pop
mov
cli
div
lods
shr
int3
je
push
pop
lods
dec
mov
mov
jl
cs
fdivr
pop
ret
push
fcmovu
mov
fcomp
mov
pushf
retf
and
inc
stos
leave
nop
xor
outs
mov
mov
ins
shl
push
retf
jb
rcr
jno
call
pop
push
stos
mov
imul
ja
les
pop
jo
jnp
vshufps
add
cwde
jae
jge
pop
in
push
cmp
dec
sbb
xchg
cdq
xchg
jge
(bad)
dec
pop
push
jg
pop
ss
adc
mov
and
cmp
xor
mov
push
stos
cli
aam
xchg
js
daa
ins
scas
inc
mov
rol
ret
cli
fcmovnbe
push
xchg
lock
stos
push
dec
addr16
sbb
sbb
mov
push
xchg
jp
mov
pop
ds
mov
xchg
adc
dec
fst
cwde
sub
mov
sbb
sub
int3
mov
jmp
les
adc
fcmovnbe
push
imul
sbb
xchg
mov
enter
sbb
mov
mov
call
mov
pop
cmp
xor
dec
test
jnp
push
or
pop
mov
pop
dec
sbb
mov
jp
inc
push
jg
adc
push
mov
call
ins
mov
dec
mov
mov
jmp
rcl
pop
xor
inc
and
mov
adc
sub
loop
push
mov
aaa
ss
mov
out
mov
mov
ror
pop
aaa
dec
rcr
adc
pop
ror
push
xor
pop
dec
sbb
inc
cmc
ins
jg
dec
ins
ret
ficom
aam
ror
push
pop
(bad)
and
sbb
ins
or
in
ds
bound
mov
lahf
or
cmp
fidivr
int
cld
or
dec
data16
inc
repz
inc
dec
cwde
mov
mov
xchg
inc
and
pop
les
mov
adc
sbb
sub
inc
idiv
mov
sub
or
mov
jae
jae
xchg
mov
mov
cdq
jmp
loop
je
pop
mov
sahf
clc
shl
(bad)
jle
dec
mov
ss
(bad)
mov
pop
dec
call
push
and
sbb
push
fwait
sbb
sbb
sar
cwde
or
sub
nop
fdiv
mov
dec
iret
lock
mov
in
loop
fsubr
ja
pop
pusha
dec
rcl
aam
movs
push
push
int
lods
sbb
mov
xor
pop
clc
out
mov
lahf
mov
das
sbb
shr
mov
dec
movs
push
mov
sbb
stos
js
stos
or
dec
(bad)
adc
fist
inc
les
loop
jae
mov
(bad)
shl
lds
cwde
mov
push
fwait
push
pop
sbb
cmc
fwait
mov
jmp
out
loopne
mov
sub
fdivr
jb
pop
push
dec
js
retf
aam
in
xchg
shl
cmp
mov
xchg
mov
(bad)
cdq
jecxz
mov
mov
shl
mov
aad
mov
cwde
js
dec
pop
cli
jge
stos
push
out
(bad)
in
(bad)
sbb
imul
in
(bad)
rcr
push
jnp
pushf
jae
fdiv
xlat
int3
sahf
pusha
(bad)
pop
fistp
sbb
std
jmp
mov
outs
(bad)
int3
rol
dec
call
inc
jno
xchg
mov
stos
pop
lahf
adc
mov
in
inc
and
sub
jnp
jmp
dec
into
inc
adc
push
pop
push
adc
out
out
mov
ja
repz
xchg
sub
and
mov
and
jnp
xchg
not
cmps
mov
inc
fdecstp
dec
neg
pop
and
scas
cmp
xchg
mov
scas
xchg
inc
lods
leave
lahf
shl
mov
or
pop
push
and
xor
arpl
sub
clc
ror
(bad)
mov
sbb
jp
push
xlat
cmp
pop
xor
dec
out
adc
cmp
push
sbb
not
pop
dec
and
jbe
xchg
shr
xlat
cwde
jmp
dec
aad
imul
mov
cmp
sbb
nop
jle
pushf
add
test
xor
sub
mov
pushf
ja
jbe
xchg
inc
aam
mov
sub
jmp
xchg
or
test
shl
cmc
add
es
les
stos
xlat
int3
push
jmp
mov
in
push
je
mov
popa
inc
pushf
cmp
pop
push
mov
or
pop
sub
xlat
loopne
jg
jmp
popf
call
inc
mov
call
loop
mov
inc
xchg
out
ror
retf
jne
stos
push
xor
sub
push
sub
xor
and
push
call
hlt
xchg
test
push
retf
aas
mov
or
es
cmps
xlat
push
push
pop
ret
retf
sub
out
adc
dec
or
call
inc
in
jns
pop
in
mov
push
push
inc
inc
dec
cmp
pop
dec
adc
jmp
dec
pop
inc
pop
into
fnsave
js
call
cmp
adc
idiv
pop
in
jb
push
add
push
inc
jmp
pop
int3
or
sbb
pushf
aad
xor
jge
push
data16
push
xchg
int3
ret
xor
aad
push
xchg
or
outs
dec
mov
push
stos
in
out
mov
test
mov
adc
xchg
sbb
sub
mov
test
ror
aad
add
shl
jmp
pop
dec
imul
mov
jmp
fwait
sub
cmc
cwde
mov
je
sub
pushf
(bad)
dec
mov
retf
jns
add
jge
out
dec
aas
sub
adc
push
gs
mov
mov
test
sbb
sbb
add
mov
stos
jmp
add
out
xor
pop
pop
dec
or
inc
cmp
int3
push
xor
push
inc
leave
sbb
out
je
pop
dec
and
pop
ret
mov
shl
push
pop
push
mov
call
mov
or
es
ret
in
xlat
mov
mov
sbb
pop
loop
pop
stos
add
fimul
lahf
add
fs
mov
mov
mov
(bad)
scas
and
pop
sti
out
ins
and
push
mov
clc
cmps
pop
fmul
add
pusha
sub
or
inc
iret
jne
shl
stos
sub
int3
push
popa
cmps
shr
dec
mov
dec
loope
nop
mov
pop
out
push
adc
(bad)
ror
rcl
ret
mov
jge
push
pusha
shl
fnstcw
test
dec
mov
push
push
pop
cmp
mov
sbb
ja
jb
mov
sar
test
ror
int3
sbb
sbb
or
test
dec
dec
sahf
imul
cmps
xchg
add
mov
sub
and
sahf
shl
ins
push
enter
xlat
neg
fisttp
ja
leave
mov
push
add
xchg
sahf
dec
mov
mov
in
test
sbb
in
sub
or
lods
mov
xlat
out
(bad)
xor
aam
dec
pop
enter
pushf
call
lahf
std
(bad)
inc
inc
pop
fcmovb
push
loop
popa
inc
leave
ds
mov
pop
sub
(bad)
into
movs
inc
int3
add
test
push
dec
setbe
or
mov
ror
dec
mov
push
leave
div
std
xchg
pushf
mov
int3
fisubr
xchg
ror
hlt
xor
aam
xchg
add
add
leave
jl
and
out
mov
mov
xchg
shr
xor
cmp
push
jnp
mov
addr16
cmp
push
push
pop
inc
mov
pop
mov
pop
push
shl
dec
mov
loopne
xchg
aad
dec
jno
xchg
and
mov
mov
mov
xchg
ins
scas
jo
lods
rcl
es
cmps
fcom
loopne
out
rcr
push
call
xor
pop
les
lods
cdq
stos
hlt
enter
mov
(bad)
or
(bad)
repnz
mov
cli
or
adc
mov
unpckhps
mov
push
mov
sbb
sahf
push
cmps
sub
add
dec
arpl
movs
lahf
fwait
xchg
sbb
sub
(bad)
(bad)
mov
cdq
jge
adc
pop
test
aaa
dec
call
jl
retf
int
or
icebp
test
mov
mov
or
sub
ret
add
into
repz
xchg
movs
pushf
mov
std
je
out
and
pop
jmp
cmps
or
xchg
sub
mov
mov
pushf
adc
mov
call
stc
shl
mov
cdq
addr16
enter
into
cmp
(bad)
std
imul
push
dec
and
inc
or
push
sti
(bad)
push
jg
(bad)
xlat
pop
(bad)
mov
rol
lods
xor
ja
mov
sbb
loopne
xchg
test
adc
fmul
ror
mov
gs
push
jl
and
dec
jae
jne
retf
jne
cmp
jno
ins
pop
mov
mov
sbb
dec
data16
mov
sbb
xchg
pop
jae
add
lock
jo
nop
xor
clc
aas
jae
xchg
inc
push
in
lds
dec
adc
ret
add
and
fistp
ja
dec
fdiv
dec
mov
pop
das
nop
dec
mov
vpsllw
push
add
or
dec
mov
mov
add
(bad)
mov
sbb
pop
pop
fcom
jg
sub
mov
mov
repz
js
mov
push
mov
jl
ficom
dec
imul
xchg
push
stos
or
movs
cmp
lea
push
xchg
jnp
imul
aam
jbe
cmp
pop
out
(bad)
jns
lods
jg
pop
(bad)
rcl
call
inc
out
mov
or
mov
mov
fild
sbb
mov
(bad)
pop
push
call
xchg
push
push
int
adc
out
fwait
jbe
xor
add
jmp
aad
daa
push
stos
stos
hlt
repz
pop
lods
pop
xor
scas
cdq
hlt
adc
sbb
mov
cdq
add
ins
gs
xchg
call
cmp
jnp
dec
adc
nop
xchg
enter
outs
fcmovnbe
mov
xlat
or
jbe
enter
movs
xchg
push
fcomp
xchg
jne
or
fstp
push
mov
push
pop
inc
cmp
xchg
pop
pop
rcl
sbb
jl
xor
pop
inc
in
jae
(bad)
mov
fcomp
ret
pop
pop
jmp
xor
stos
sahf
xor
sbb
adc
fdivr
loop
push
dec
(bad)
jnp
push
adc
push
rcl
stos
sub
jae
xor
xchg
jle
mov
sub
or
dec
mov
gs
cmps
lahf
fsub
push
inc
ret
sbb
fs
fwait
dec
mov
loopne
mov
xor
jno
fsubr
xlat
enter
sbb
dec
dec
in
push
stc
pusha
or
mov
sbb
pop
ins
mov
xchg
call
push
in
jmp
jno
push
ret
ficomp
pop
mov
jno
adc
xchg
sbb
fwait
mov
ja
in
stc
sbb
mov
adc
fist
lods
mov
adc
jae
bound
aaa
xchg
jnp
dec
mov
repnz
ins
scas
mov
mov
and
pushf
(bad)
jl
mov
shr
sub
stos
loopne
fwait
es
(bad)
xor
dec
adc
and
ins
bound
in
mov
pop
je
jmp
neg
xchg
xchg
xchg
fcmovbe
jmp
jg
int3
jmp
mov
push
inc
dec
iret
aam
ret
mov
imul
fs
das
sti
aam
cmps
stc
jae
daa
out
arpl
sub
inc
sbb
(bad)
push
push
or
iret
adc
fild
repz
(bad)
sbb
jae
xlat
ds
fisubr
sbb
jno
jl
ds
pop
jb
sbb
push
ins
push
and
add
cmps
lods
mov
mov
xchg
xchg
into
xchg
jb
(bad)
sbb
add
mov
sti
imul
sbb
mov
pop
sbb
jg
and
add
rcr
jmp
(bad)
jl
add
pop
pop
jnp
ror
fadd
fstp
outs
in
jmp
xor
(bad)
(bad)
push
sub
and
call
adc
push
jl
lahf
popa
call
mov
pop
leave
hlt
ja
push
in
and
test
aad
mov
inc
mov
or
idiv
(bad)
cmp
aad
mov
call
or
pop
in
sbb
cmp
notrack
aaa
test
mov
add
lahf
cs
sbb
sbb
ja
mov
(bad)
pop
loopne
cwde
dec
imul
int3
sbb
push
mov
ins
mov
mov
repz
mov
cmp
sbb
(bad)
jmp
mul
xchg
std
dec
aam
cs
push
(bad)
fmul
(bad)
mov
add
bound
sbb
aaa
cmp
(bad)
fisttp
push
cmp
push
and
jbe
nop
or
rol
fild
into
add
mov
pop
repz
or
jmp
push
ds
popf
fs
cmp
aaa
ret
xchg
inc
popf
cmp
mov
or
sub
jmp
xchg
cs
jns
and
sbb
mov
clc
in
adc
pop
jmp
std
lock
push
lods
daa
mov
pushf
inc
dec
push
call
and
push
sbb
icebp
nop
xchg
mov
enter
push
xor
add
test
dec
(bad)
loop
repz
loopne
adc
sub
data16
loopne
push
stos
mov
out
and
(bad)
shr
mov
addr16
dec
or
adc
sub
rol
mov
mov
jg
mov
mov
daa
neg
scas
sub
aad
pusha
daa
and
retf
(bad)
dec
mov
jl
int3
inc
test
das
mov
sbb
add
pushf
dec
es
ds
or
xchg
cmp
dec
ret
mov
sbb
js
sub
stos
gs
mov
mov
jnp
jecxz
pushf
pop
xchg
nop
or
adc
push
adc
mov
int3
add
pop
xor
cmp
sti
pushf
or
sub
addr16
add
jmp
sar
pusha
mov
fdivr
aaa
sbb
shl
loope
sbb
pop
push
push
inc
or
xchg
int3
test
jno
mov
(bad)
loopne
aad
sbb
pushf
js
push
and
movs
inc
arpl
int
leave
lods
mov
mov
jae
xor
pushf
lds
push
xchg
call
xchg
(bad)
std
and
out
mov
aaa
push
sub
adc
push
push
or
pushf
aam
inc
ret
iret
sbb
cli
inc
(bad)
jb
xchg
adc
pop
mov
lahf
inc
fsubr
add
mov
call
popa
add
(bad)
mov
cmps
and
stos
mov
fadd
rcl
scas
icebp
jp
cld
sub
(bad)
adc
inc
cmp
mov
shl
xchg
jg
(bad)
mov
wrmsr
jmp
inc
dec
fcmovnu
sbb
and
imul
je
xchg
fadd
pop
mov
sbb
inc
adc
inc
pop
sahf
or
rcl
xchg
sti
nop
stos
lods
(bad)
adc
jecxz
sbb
das
(bad)
(bad)
add
ins
(bad)
shl
int
std
push
pop
mov
fldenv
mov
aaa
xchg
push
out
fpatan
dec
rcr
ins
sar
xlat
rcl
jmp
and
arpl
(bad)
rcr
mov
clc
mov
arpl
mov
or
in
jg
sub
sti
fcmovnb
fisub
es
ret
ret
mov
cmp
push
shr
out
mov
fs
pop
pop
mov
sbb
cmc
xor
enter
xchg
pop
cmp
in
jle
sbb
int3
int
xchg
inc
or
rcr
add
cmovo
test
pusha
inc
jns
mov
xchg
mov
pop
inc
popf
fwait
jb
movs
pop
pop
add
push
aas
(bad)
daa
pop
das
sbb
stc
mov
(bad)
dec
mov
push
dec
lock
jb
cmps
lods
mov
movs
test
fs
or
jecxz
jnp
jp
dec
inc
(bad)
stos
sub
adc
sub
ja
mov
das
cli
dec
scas
adc
(bad)
dec
mov
les
add
addr16
fnop
shl
out
idiv
retf
push
repnz
xor
fstp
sbb
adc
mov
mov
add
loopne
aas
dec
mov
js
or
shl
and
jp
mov
out
lahf
sti
push
out
dec
adc
ja
or
mov
gs
aam
push
cmp
mov
push
xor
lock
pop
aas
clc
pop
das
into
adc
jg
not
mov
push
lahf
repnz
xchg
call
pushf
pop
jmp
pop
inc
inc
jb
retf
popa
int
mov
enter
fnstcw
add
inc
xchg
movs
shr
push
inc
fcmovne
stc
jle
stos
(bad)
stos
pop
xor
popf
xchg
jbe
mov
repnz
fidivr
and
xchg
call
movs
push
or
ins
iret
dec
mov
jl
test
push
sti
sub
dec
ret
inc
xor
adc
and
push
xor
xor
iret
rcl
xor
stos
add
imul
movs
fst
xor
(bad)
js
mov
mov
stc
inc
stos
pop
jmp
scas
ret
inc
mov
test
xor
cmps
stc
jg
ret
hlt
loop
mov
jnp
or
and
ss
(bad)
in
sbb
sub
pop
cmp
aas
pop
pop
or
cmps
lea
add
mov
cmp
jmp
add
xor
pop
lds
mov
inc
enter
push
aam
and
push
add
jl
xchg
fsub
cmp
ss
dec
mov
mov
pop
mov
inc
jge
scas
xor
adc
jecxz
dec
mov
xor
push
dec
pushf
lock
pop
ret
xchg
mov
gs
into
sub
pop
mov
cwde
ficom
cmp
xchg
cmps
rcr
test
gs
push
dec
das
(bad)
cld
(bad)
or
jmp
cmp
(bad)
call
js
fild
cmp
push
add
pop
xlat
mov
pop
popa
mov
mov
(bad)
xor
adc
add
sbb
stos
add
jmp
mov
loop
mov
sar
sbb
jmp
mov
adc
pop
mov
test
sub
cmp
add
hlt
pop
adc
dec
or
mov
das
ins
movs
or
out
nop
repz
xchg
leave
mov
shr
jle
in
cld
mov
mov
push
inc
fsubr
jnp
bound
dec
inc
cli
dec
xor
out
(bad)
neg
and
repnz
mov
pushf
dec
icebp
sbb
sub
sub
mov
rcl
daa
icebp
adc
out
mov
fs
test
jnp
aad
fcmovb
test
push
or
ins
xchg
inc
inc
jnp
xchg
push
mov
jns
aam
mov
fcomip
mov
nop
inc
sbb
retf
mov
mov
into
push
adc
es
pop
jl
in
jo
sar
sbb
shl
dec
or
mov
mov
jmp
xchg
sar
movs
dec
lea
sbb
add
test
div
dec
mov
psubq
adc
retf
inc
sub
xor
sub
cmp
mov
and
out
repz
popf
mov
fst
sbb
fadd
pop
shr
mov
dec
mov
movs
mov
call
(bad)
mov
pop
dec
pop
mov
lods
cwde
sbb
add
test
mov
jno
out
int
xchg
or
jae
adc
test
inc
add
dec
adc
popa
cmp
ins
sub
cmp
mov
xor
xor
cdq
cld
shl
lds
fwait
movs
mov
dec
neg
fwait
not
adc
xchg
mov
jp
and
jo
arpl
adc
jl
das
sbb
cmps
shl
shl
mov
jg
clc
shl
push
(bad)
push
enter
clc
push
sbb
push
sub
cmps
inc
sub
jns
sti
mov
(bad)
lds
arpl
jno
adc
sub
push
out
fisubr
add
pop
gs
(bad)
mov
or
pushf
jno
mov
mov
jg
ss
fild
ret
es
aad
sar
pop
movs
inc
test
dec
fcomp
(bad)
in
mov
mov
mov
shl
(bad)
xlat
rcl
sbb
xchg
faddp
cmc
cmp
loope
adc
cmp
imul
aam
pop
gs
imul
repz
jno
cmp
mov
jmp
(bad)
icebp
retf
xchg
pop
clc
call
sbb
dec
daa
rcl
mov
cmp
pop
add
loop
out
pop
ja
pop
sbb
xor
aam
and
adc
dec
mov
mov
dec
jp
(bad)
cmp
cwde
dec
cmp
(bad)
pushf
cmp
jle
loop
cmp
sub
(bad)
jo
retf
jl
lds
nop
pop
sbb
and
pop
jp
adc
mov
push
jmp
push
popf
sub
rcl
imul
mov
cmp
jge
sub
outs
fwait
sbb
pop
inc
or
sub
pop
mov
dec
ja
test
push
mov
pop
adc
xchg
xor
rcl
xor
fld
cmp
sub
fucomip
outs
mov
sub
cmp
add
cli
addr16
mov
sbb
push
imul
push
popa
shr
dec
or
dec
out
cmp
daa
sbb
inc
iret
cli
cmp
push
pop
push
cwde
in
dec
icebp
repnz
daa
adc
enter
pushf
pop
mov
fldcw
push
mov
push
and
push
inc
pop
dec
xchg
xchg
sbb
xchg
cdq
add
or
cmp
(bad)
jg
adc
movs
adc
ror
or
pop
loop
add
iret
movs
loopne
(bad)
or
mov
dec
int3
mov
ins
adc
sub
pop
mov
test
pop
cmps
lahf
pop
or
fdiv
jnp
fwait
loopne
test
and
je
mov
or
aaa
(bad)
push
mov
arpl
add
sbb
add
push
shl
retf
pop
and
mov
mov
cmp
jp
mov
jg
and
cmp
inc
inc
scas
push
pop
jo
rcr
mov
lds
mov
xchg
aaa
ins
out
jno
dec
dec
cli
adc
aaa
mov
aaa
hlt
adc
es
or
(bad)
(bad)
jmp
inc
repz
cmps
dec
or
cmp
add
gs
sub
jp
mov
lds
cmp
ror
jmp
push
loopne
dec
jo
cmps
es
mov
daa
and
mov
sar
sub
mov
cs
retf
adc
int
add
mov
aaa
lahf
arpl
xor
aaa
fwait
jp
movs
int3
cdq
push
hlt
push
repz
cmp
xor
rol
pop
jns
jno
dec
cld
cdq
mov
mov
ins
clc
inc
pop
enter
cmp
sti
pop
cmp
cwde
jno
pop
jnp
das
sbb
add
push
rol
loopne
push
sar
sbb
push
aas
loope
setnp
dec
jmp
fstp
ror
pop
paddq
sar
mov
outs
mov
pusha
fdiv
push
fstp
mov
(bad)
xchg
or
fiadd
aaa
ds
add
cmp
jl
cmp
pop
std
lods
es
movs
inc
in
adc
rol
mul
xor
sub
stos
xchg
xchg
fist
loope
jae
cmp
add
rol
adc
xchg
pop
mov
or
cwde
popf
xor
fsubr
sub
jae
sbb
or
sti
xor
pusha
cld
sub
ficom
rcl
push
(bad)
push
push
and
sbb
loop
fcmovu
push
(bad)
in
mov
ss
arpl
xor
xchg
cmp
les
(bad)
repnz
mov
scas
test
pop
stos
jge
dec
inc
int3
pop
push
js
push
mov
mov
mov
jle
push
add
sbb
out
dec
cdq
pop
ja
inc
or
pop
icebp
(bad)
dec
dec
sub
cmp
mov
int3
sbb
aas
pop
and
fs
in
xor
mov
sbb
(bad)
cmp
jge
daa
bound
popf
repnz
aad
lock
sub
(bad)
fcmovnbe
cmp
dec
cmp
mov
inc
mov
dec
or
mov
and
sahf
add
jno
sub
dec
icebp
push
aam
add
in
adc
aam
xchg
push
pushf
imul
cmp
push
leave
add
adc
pusha
xor
jecxz
adc
(bad)
repnz
cmp
mov
addr16
lods
pop
mov
popf
aaa
pop
adc
adc
fstp
mov
mov
test
inc
push
loopne
pop
mov
cmp
cwde
ffree
movs
xlat
sbb
pushf
pop
retf
xor
pop
cdq
dec
push
call
shl
sbb
push
aad
pop
(bad)
pop
retf
test
cmp
out
dec
cmp
jmp
ins
mov
iret
scas
mov
dec
ins
jo
sbb
dec
or
fdiv
shr
stc
arpl
pop
aam
dec
ror
and
mov
clc
add
stc
ja
sbb
mov
movs
clc
dec
mov
mov
repz
inc
jp
adc
mov
add
in
pop
pop
scas
fidiv
cmp
out
aad
xor
push
movs
(bad)
call
sub
call
mov
dec
dec
data16
xchg
adc
push
imul
idiv
mov
sahf
aam
adc
cld
sub
outs
aam
mov
retf
and
xchg
mov
xchg
pop
(bad)
push
push
int3
cwde
sbb
mov
call
cld
jne
(bad)
and
pop
xchg
test
mov
push
loopne
push
or
cmps
xor
pop
mov
cdq
(bad)
mov
xor
xor
push
xor
fidiv
add
mov
xor
ds
aam
out
cmp
and
into
sti
sub
push
push
xchg
outs
cwde
fisub
iret
or
jl
in
fisubr
imul
jnp
fsubr
mov
cld
cmps
mov
sbb
inc
dec
add
test
jp
push
inc
push
sub
leave
jle
mov
pop
mov
pop
popa
cmp
dec
push
out
or
xor
daa
or
(bad)
aam
dec
ins
aas
xchg
xchg
mov
dec
dec
gs
push
out
data16
mov
and
nop
mov
mov
ss
out
mov
xor
movs
mov
xor
popf
and
jle
ins
lock
ja
rcl
sub
pop
pop
ds
dec
ds
jb
imul
fucomip
dec
arpl
inc
inc
arpl
sbb
push
push
aad
cld
dec
clc
enter
pushf
xchg
xchg
js
sub
dec
in
sbb
test
sub
test
fldcw
stos
data16
mov
jmp
cmp
xor
pop
hlt
dec
inc
jmp
movs
stos
(bad)
inc
call
pop
cmp
test
xchg
fisub
(bad)
retf
inc
nop
mov
(bad)
retf
mov
cmp
jge
sbb
ret
js
sub
aad
(bad)
mov
jb
fstp
sbb
mov
xlat
iret
test
adc
jae
hlt
out
div
ins
call
out
addr16
fimul
or
pushf
enter
ss
pop
mov
sti
add
mov
fcomp
adc
fidiv
pushf
dec
rcr
sub
mov
dec
inc
(bad)
xchg
dec
dec
add
shl
ficom
mov
fcmovbe
lahf
sbb
xor
mov
or
adc
pop
push
out
ficom
mov
icebp
xchg
std
inc
jbe
cld
pop
inc
sub
or
mov
jmp
idiv
(bad)
mov
sbb
jmp
jb
jl
xchg
loope
jmp
jp
out
inc
movs
mov
(bad)
push
mov
push
call
std
call
sti
sub
call
jl
mov
test
or
mov
into
jp
mov
add
repz
and
lods
jno
in
push
xchg
pop
out
rcr
xor
and
not
cmp
pop
adc
lods
ins
adc
jo
push
mov
out
fstp
movs
stos
into
stc
push
and
jmp
mov
jg
push
sbb
sub
push
(bad)
pop
fs
jmp
mov
pushf
xor
add
mov
push
mov
or
int3
in
inc
mov
lods
fistp
xchg
ret
imul
xlat
(bad)
aam
test
jle
fild
add
adc
not
fwait
mov
outs
dec
push
cs
ret
into
loope
mov
jae
xchg
xchg
dec
add
movnti
pop
pop
out
push
test
mov
mov
mov
jmp
imul
sti
push
jmp
sahf
jp
ror
retf
pusha
aam
lahf
mov
cmp
stos
aaa
xchg
(bad)
call
push
sti
push
out
fwait
jnp
xchg
add
jb
mov
push
sub
popf
(bad)
mov
(bad)
jl
pop
pusha
in
(bad)
dec
loopne
dec
mov
enter
adc
cdq
inc
add
push
movs
dec
mov
mov
gs
cli
xchg
push
addr16
mov
(bad)
ficomp
xchg
fst
inc
push
call
rcr
push
dec
loop
xchg
pop
adc
push
mov
imul
in
cmp
dec
xchg
cs
mov
ret
dec
in
push
mov
or
dec
and
pop
pop
xchg
fwait
dec
xchg
mov
add
dec
mov
xor
(bad)
inc
dec
and
sub
fsub
into
cs
loopne
mov
aam
test
call
outs
push
sub
rcl
xchg
repnz
stos
in
fmul
jmp
shr
pusha
mov
sbb
dec
dec
and
push
inc
rcl
lock
mov
xchg
inc
push
sub
or
es
inc
or
cmps
xlat
inc
xor
sbb
mov
dec
test
sub
scas
ret
sub
pop
jae
jns
and
sub
fcomp
mov
retf
add
inc
sub
out
shr
movs
shl
inc
sub
lea
(bad)
aad
(bad)
push
daa
daa
arpl
mov
sub
mov
xor
ficomp
and
jl
imul
rcl
pushf
add
mov
pop
cmp
popf
push
cmc
cwde
jl
xchg
xchg
push
stc
jge
jnp
jne
mov
mov
jno
xor
mov
xchg
xor
fistp
jnp
fcomp
and
add
(bad)
mov
push
jmp
in
mov
sub
stos
pushf
es
mov
ins
aam
or
jle
fistp
bound
mov
mov
cmp
(bad)
rol
adc
xor
mov
add
hlt
or
xchg
dec
or
adc
jo
jmp
ja
arpl
inc
inc
aas
xchg
mov
mov
sub
pop
addr16
pop
add
xor
ss
sbb
clc
fwait
or
clc
addr16
xchg
clc
mov
imul
les
enter
mov
mov
pushf
jmp
jg
and
enter
movs
es
addr16
(bad)
push
stos
and
mov
sbb
cmp
xchg
dec
cwde
cmps
cmp
xchg
push
inc
ret
vorps
outs
sbb
imul
jo
mov
ret
push
pop
push
cwde
and
repz
jo
push
xchg
push
mov
aaa
jl
lods
loop
sar
push
and
xor
push
dec
mov
dec
ror
and
repz
not
ret
dec
in
mov
aad
or
stos
in
rcr
mov
stc
push
gs
imul
mov
mov
test
inc
xchg
or
mov
mov
(bad)
mov
nop
in
add
mov
inc
ror
inc
inc
fwait
sbb
(bad)
pop
pop
mov
int3
add
fwait
in
(bad)
mov
mov
sti
jo
pop
inc
push
sti
dec
push
call
shl
vpsllq
aam
mov
in
inc
add
mov
jp
xchg
cmp
cmps
push
test
rcr
xchg
pop
push
mov
inc
dec
push
fild
call
fcomp
sti
sub
ficomp
mov
mov
fistp
inc
icebp
fnsave
xor
cld
jmp
daa
fidiv
mov
ss
std
call
ss
sbb
jge
push
jg
dec
mov
mov
pop
or
push
lods
cmp
dec
sbb
js
mov
(bad)
mov
xor
add
mov
out
jle
push
dec
xor
stos
push
fcom
push
inc
iret
dec
pop
js
shl
jnp
push
mov
test
gs
xlat
dec
cli
pop
inc
enter
sbb
ret
nop
push
(bad)
push
cmp
loop
test
test
dec
test
js
sub
rcr
xlat
mov
cmp
cdq
dec
add
cmp
inc
enter
sbb
and
inc
xlat
ror
mov
ins
lock
pop
push
imul
xchg
xor
sbb
div
xchg
dec
ins
hlt
ds
fistp
dec
fdivrp
mov
fwait
ret
or
out
call
fmul
enter
mov
sub
pop
pop
fisub
mov
dec
dec
pop
push
jnp
push
dec
mov
jns
scas
pop
daa
out
scas
bound
(bad)
(bad)
fistp
ffreep
pop
daa
outs
mov
hlt
mov
push
jmp
mov
aad
mov
sti
pop
pop
xchg
jnp
xchg
ror
mov
pop
xchg
jmp
mov
inc
mov
cwde
shl
leave
imul
retf
push
(bad)
jne
fsubr
pop
add
mov
add
in
push
xor
push
mov
fadd
jg
cmps
jne
pusha
pop
jnp
int
loopne
push
dec
cmp
xchg
adc
call
(bad)
cwde
fwait
dec
fwait
sahf
add
retf
rcr
push
dec
jno
dec
sbb
and
sbb
xchg
imul
or
je
push
rcr
ficomp
push
shl
mov
inc
xchg
mov
mov
fucomi
fcmovnbe
mov
es
jnp
aam
dec
pop
gs
xor
cmova
fdivr
mov
xchg
fiadd
aad
push
nop
lods
jmp
enter
repz
lods
pop
mov
adc
xchg
add
lds
dec
test
pushf
shl
dec
popa
jg
arpl
mov
push
and
aaa
or
jne
sbb
sar
les
xor
addr16
cmp
xchg
xchg
ds
into
pop
sbb
mov
sub
aam
xor
push
pusha
mov
pop
aad
jmp
mov
cmp
aaa
(bad)
ins
imul
push
mov
dec
inc
in
ja
test
xchg
(bad)
mov
xchg
inc
cli
add
stos
(bad)
sub
sti
mov
add
adc
cmp
into
add
(bad)
push
cmp
mov
jmp
mov
pop
inc
jae
cdq
loopne
and
mov
xchg
adc
cmp
or
sub
mov
aad
adc
es
popf
stos
pop
ror
sub
or
addr16
fadd
xor
out
rcr
sub
jnp
mov
cmps
jae
xchg
pop
add
jnp
jp
mov
icebp
jns
cwde
je
xchg
bound
fsub
mov
loope
cwde
adc
icebp
sbb
fsubr
mov
les
jb
cmp
xor
dec
addr16
push
push
jl
pop
test
inc
push
push
lds
and
mov
dec
aas
in
pop
jg
dec
push
xchg
and
outs
jmp
shr
xchg
mov
mov
(bad)
mov
push
std
rcr
rol
rcl
dec
pushf
adc
arpl
(bad)
mov
les
mov
inc
jl
xor
imul
or
sahf
mov
(bad)
cli
mov
js
ss
pop
add
adc
test
mov
sbb
stos
dec
or
push
dec
lock
mov
xchg
(bad)
mov
mov
pop
mov
mov
jmp
mov
push
jne
mov
nop
pushf
sbb
ror
mov
mov
add
repz
inc
sbb
pop
(bad)
push
inc
jge
jmp
or
push
lahf
add
inc
aaa
mov
or
inc
pop
adc
sar
mov
xchg
outs
ret
xchg
push
sahf
dec
in
sbb
or
cmp
xchg
mov
or
jb
stos
push
mov
pop
clc
cmps
mov
std
leave
mov
adc
(bad)
mov
add
movs
stc
jge
xor
rcr
ja
out
xchg
sub
xchg
pop
push
cmp
mov
int
ss
xor
test
mov
xchg
mov
push
popa
aas
jg
xor
rcr
cmps
outs
xchg
(bad)
sub
push
pop
jp
pop
dec
test
jbe
sbb
pop
mov
push
sbb
and
sub
and
pop
or
dec
iret
mov
ds
sub
pop
aam
xor
add
into
xchg
dec
xor
inc
mov
pop
dec
and
or
adc
cmp
dec
daa
pop
stc
into
stos
dec
fcmovnu
dec
pop
pop
or
mov
stc
fild
mov
(bad)
(bad)
(bad)
cmp
outs
sbb
mov
ins
xlat
jg
ss
repz
xor
mov
adc
(bad)
cmp
sbb
cdq
je
leave
test
fcomp
add
aaa
adc
jmp
mov
bound
mov
pop
lsl
(bad)
dec
mov
out
pop
mov
rol
add
inc
das
movs
push
add
jnp
call
cmp
inc
clc
jle
sbb
push
dec
jb
mov
inc
fwait
mov
leave
ja
int3
mov
push
and
nop
pop
push
push
jnp
pop
xchg
int3
jmp
outs
ror
jo
ret
xor
push
rcr
lods
mov
nop
test
and
test
fisub
jnp
adc
enter
pushf
dec
push
ret
aaa
movs
mov
mov
push
sbb
push
or
push
mov
je
cmp
cwde
pop
mov
ins
push
or
jo
out
ja
ret
es
adc
xor
les
loope
aad
fldcw
and
pop
xor
add
and
cmps
sub
xchg
loope
push
pushf
mov
mov
xor
sub
int3
in
dec
xor
add
mov
outs
xor
add
dec
rcr
(bad)
retf
mov
fidivr
mov
and
pop
push
mov
xchg
cmp
xchg
lods
ret
aaa
adc
jecxz
arpl
scas
mov
call
fwait
popa
xor
fucompp
dec
sar
fcom
(bad)
dec
push
dec
sub
mov
mov
xor
clc
retf
pop
mov
cdq
or
push
or
add
and
sahf
push
out
shl
repz
mov
aam
ins
ret
shl
ret
dec
pop
mov
jnp
pushf
xchg
and
fisub
mov
mov
inc
stos
cmp
ficomp
fsub
mov
or
repnz
push
inc
je
imul
cmp
dec
loope
test
iret
cmp
sbb
int
inc
inc
fsubr
scas
mov
clc
rcr
add
daa
ja
jne
test
sbb
repnz
inc
mov
dec
imul
adc
adc
stos
inc
dec
daa
pop
mov
pop
jbe
add
mov
shl
(bad)
sbb
cdq
push
pop
adc
outs
sub
adc
mov
mov
ret
sbb
sbb
int
push
mov
jb
inc
mov
push
push
adc
sti
sar
pop
add
jmp
rcl
push
pop
leave
mov
xlat
fsub
(bad)
cmp
jmp
outs
mov
int3
sbb
stos
xchg
fsubr
pop
sbb
mov
cwde
push
mov
mov
stos
jl
icebp
dec
cmp
pop
hlt
push
sub
add
iret
outs
mov
ret
push
call
jae
rol
fidivr
(bad)
xchg
xchg
sar
xchg
lock
jbe
pminsw
pushf
addr16
std
add
jmp
aas
clc
add
nop
mov
repnz
cmp
adc
jno
mov
test
movs
sbb
xchg
aaa
or
push
sub
sub
xor
mov
popa
pop
and
adc
pushf
fcmovbe
arpl
add
jnp
mov
xor
mov
rcl
push
xor
rcr
or
push
pop
ret
loopne
mov
mov
ret
push
in
ret
jge
loopne
scas
addr16
add
loop
and
inc
push
test
test
prefetch
or
ret
std
fild
mov
pop
lds
add
pop
and
enter
inc
push
nop
or
pop
sub
stos
mov
fdivp
jnp
mov
aas
or
or
loopne
scas
cmp
js
cdq
(bad)
sar
xor
addr16
sbb
call
scas
test
inc
es
stos
cld
rol
aaa
jne
pop
mov
inc
mov
scas
inc
push
js
push
je
loop
popf
mov
(bad)
(bad)
dec
xor
retf
cli
sbb
test
lahf
adc
(bad)
pop
add
or
and
test
mov
mov
adc
jnp
sahf
ins
into
mov
pushf
pop
inc
stc
or
and
mov
mov
jle
arpl
lea
fcom
mov
in
push
(bad)
int3
adc
out
loopne
sub
pop
int
adc
outs
enter
xlat
xor
mov
mov
adc
pop
sbb
xor
add
sahf
dec
loop
add
mov
add
mov
int3
dec
inc
popa
and
shl
and
int3
std
sbb
add
push
mov
cmovne
push
pushf
sub
xor
xor
leave
rcl
popa
push
sub
shl
inc
ret
or
ja
inc
mov
xchg
js
jmp
test
call
jmp
bound
lds
dec
xchg
je
and
xchg
xchg
adc
jae
movs
jns
cmps
sbb
add
mov
int3
push
inc
imul
or
ja
cdq
xor
fidiv
(bad)
mov
jle
mov
stos
sbb
cmc
and
pop
dec
loope
xchg
mov
neg
mov
jo
rol
push
jno
clc
outs
or
mov
enter
sub
lock
jno
cli
xchg
popf
dec
ja
xchg
sahf
retf
dec
out
push
sub
or
lahf
imul
sub
xchg
loope
inc
add
cs
add
arpl
repz
mov
test
sub
mov
mov
test
dec
and
xor
sub
mov
pop
pushf
in
xchg
ins
push
out
mov
mov
dec
cmp
jp
sub
add
(bad)
dec
sub
pop
pop
mov
rol
sub
xchg
lock
fld
xor
pop
cmp
mov
rcr
or
(bad)
push
gs
mov
cmps
out
push
pop
cdq
pop
dec
sbb
stos
push
mov
lea
stos
aas
cld
jg
pop
adc
sti
sub
pop
xor
sbb
in
int
jne
cmps
xchg
mov
fadd
loop
lahf
pushf
pushf
out
sbb
push
and
or
push
fistp
mov
push
(bad)
daa
pop
mov
mov
(bad)
lock
cwde
xchg
mov
fst
std
xchg
push
stos
inc
sbb
mov
push
cmp
xlat
loop
xor
or
inc
xchg
cmc
adc
pop
nop
or
xor
push
dec
push
xchg
retf
aaa
jns
push
add
xchg
add
rcl
jnp
jl
xchg
out
jne
lock
loope
inc
mov
mov
jle
arpl
xor
movs
loopne
movs
or
and
inc
movs
sbb
lahf
mov
fcomp
outs
push
scas
out
int3
rcr
in
leave
cdq
fs
pop
data16
cmp
cmp
adc
mov
dec
loopne
fcmovu
mov
(bad)
pop
in
cmps
in
sqrtps
mov
stos
ins
hlt
call
dec
ins
pop
lods
cmp
mov
jg
cld
xchg
shl
xchg
mov
sub
sbb
stos
jp
(bad)
pop
mov
daa
fcomp
in
pop
add
mov
jmp
ret
pushf
addr16
lock
hlt
mov
adc
jmp
jae
pop
sbb
pop
xchg
pop
js
cmp
sub
xchg
jo
stos
inc
xor
(bad)
(bad)
dec
aaa
div
or
loope
push
cdq
xor
xchg
sub
sbb
add
outs
call
(bad)
fld
fadd
sub
ja
das
dec
out
test
add
aam
sbb
fsubr
test
cdq
popa
or
popf
(bad)
push
sub
ret
mov
mov
and
push
ja
test
(bad)
cmp
and
dec
inc
(bad)
cs
pop
sub
pusha
jne
xchg
mov
aam
cmp
imul
sbb
ss
cmps
push
(bad)
add
movs
sbb
pop
pop
pop
out
inc
mov
mov
xor
mov
push
or
rol
dec
sbb
sub
in
fld
adc
(bad)
sti
pop
and
sbb
mov
push
inc
imul
and
sbb
or
cwde
stos
adc
dec
mov
in
push
push
mov
clc
lock
push
out
stos
dec
pop
cmp
sub
cmp
je
rcl
cmp
sbb
mov
mov
add
cld
stos
jp
cmp
cmps
fs
cdq
dec
xor
ds
test
ret
ins
in
out
out
test
gs
cs
sbb
pop
push
sahf
out
loope
daa
(bad)
xchg
(bad)
mov
out
sahf
(bad)
sub
imul
sub
sbb
outs
dec
movs
jbe
ss
(bad)
cld
jg
clc
mov
jle
pop
ins
fld
jl
pop
adc
push
sti
cmps
mov
(bad)
cmp
sbb
ins
mov
jmp
call
ss
push
dec
fistp
fimul
mov
repz
mov
lods
xchg
inc
jno
mov
cmp
pop
arpl
mov
fwait
mov
dec
dec
(bad)
fs
sub
pop
mov
mov
push
es
inc
push
dec
in
pushf
mov
je
scas
sub
and
and
daa
test
mov
inc
sti
xchg
jbe
repnz
fwait
leave
int3
repz
jnp
(bad)
mov
xor
cmp
xchg
push
aaa
imul
shl
mov
je
ins
cmp
mov
js
push
dec
push
mov
lds
jmp
sbb
push
mov
cwde
fld
sub
js
in
rol
xchg
mov
cmp
fld
xchg
add
call
push
fadd
push
sub
sbb
ja
and
dec
clc
dec
pop
pop
out
sub
jae
popf
mov
inc
test
jbe
mov
mov
push
cmc
pop
xchg
ret
es
push
cmps
enter
cld
out
scas
jne
add
xor
mov
jg
bound
and
cmps
fldcw
retf
(bad)
mov
push
cmps
jecxz
adc
call
pusha
es
clc
cmp
gs
les
or
pusha
mov
push
clc
out
sub
(bad)
sbb
sbb
sbb
push
stos
xchg
dec
push
jno
sbb
addr16
stc
push
mov
mov
fwait
mov
rcl
xchg
or
popf
(bad)
fcmovnbe
les
xchg
aas
and
(bad)
cmp
and
gs
cmp
cmp
adc
enter
std
sub
daa
jb
sbb
leave
je
mov
movs
ja
(bad)
imul
arpl
jo
mov
(bad)
in
mov
inc
push
inc
pop
dec
out
fnsave
ror
retf
sbb
scas
fs
pop
and
mov
mov
add
or
jbe
jae
test
jge
mov
test
sbb
xchg
fisttp
sbb
pop
push
int
add
int
int3
cwde
or
pushf
mov
popa
jl
repz
cmp
scas
pushf
sub
inc
ja
cmp
fcomp
adc
dec
mov
or
test
rcl
and
out
jmp
mov
cwde
inc
add
jp
xor
movs
pop
inc
xchg
dec
mov
sti
cmp
mov
mov
push
mul
and
shr
scas
loop
test
fwait
aaa
and
mov
push
test
push
gs
in
or
jecxz
mov
xlat
shl
mov
push
cmp
test
mov
je
xchg
outs
cmp
or
push
or
pushf
xchg
sbb
js
jno
fiadd
not
ins
jp
xchg
push
aaa
add
pop
xchg
cmc
xchg
fmul
aam
icebp
and
inc
push
data16
lea
adc
sbb
iret
pop
or
sub
xchg
out
je
fwait
sbb
pop
sti
pop
jmp
push
loop
fisttp
xchg
cmps
test
call
dec
mov
push
mov
xchg
adc
fcomip
pop
add
or
jmp
mov
cmp
jcxz
fld
vprotq
iret
inc
xlat
xchg
shl
push
out
pop
sub
and
xor
dec
pop
cmc
test
in
xor
cmp
fidiv
stc
cmp
inc
out
sub
ret
aam
pop
mov
daa
jo
cmps
imul
jg
aaa
bound
rcr
ret
sub
fstp
mov
adc
test
mov
or
or
neg
push
movs
push
and
pop
mov
mov
jb
pop
pop
out
nop
mov
loope
(bad)
inc
push
mov
push
ja
imul
rcl
jle
outs
dec
or
pop
ins
ins
and
daa
pop
loope
popa
pop
scas
ret
and
adc
pop
dec
mov
in
xor
test
push
lahf
inc
out
loopne
icebp
dec
js
jmp
mov
(bad)
mov
xchg
loopne
sbb
inc
mov
and
mov
push
mov
push
into
add
test
gs
mov
rcl
(bad)
xchg
(bad)
aas
(bad)
mov
add
dec
mov
fimul
fst
or
mov
mov
fs
xchg
push
fistp
xchg
aam
dec
cmp
adc
and
lock
not
or
les
dec
jle
xor
adc
add
adc
iret
outs
arpl
jl
test
test
push
sbb
inc
call
fidiv
call
jle
and
mov
mov
cmp
dec
push
or
aas
mov
icebp
fyl2xp1
dec
fs
sbb
xlat
sbb
xlat
fmul
rcr
call
dec
mov
lods
in
dec
pop
pop
mov
(bad)
fmul
out
daa
xchg
sar
cmp
xor
fs
fstp
push
mov
sti
aas
dec
inc
(bad)
mov
scas
cmps
jl
aam
pop
fwait
(bad)
popa
sahf
mov
test
mov
cmc
jmp
std
adc
cwde
cmp
cld
mov
xor
mov
popa
outs
popf
aaa
adc
clc
xchg
pop
sahf
pushf
jno
in
enter
lahf
mov
mov
ffreep
push
stos
xor
(bad)
mov
mov
movs
push
mov
test
enter
fisttp
rcr
inc
xor
lods
sbb
fadd
lea
fidivr
cmps
adc
ja
rcr
xchg
pushf
mov
adc
or
xchg
pop
ss
sub
adc
rep
add
push
cdq
mov
ret
mov
dec
fdivr
push
lods
mov
fimul
dec
enter
sbb
xlat
in
addr16
mov
mov
xor
popf
dec
shr
dec
and
mov
hlt
xchg
xlat
sbb
retf
fld
mov
popa
xchg
outs
mov
gs
bound
or
call
pop
retf
and
add
push
mov
sub
(bad)
out
fwait
dec
push
lock
mov
mov
shl
xor
out
jnp
add
outs
cmps
xchg
dec
push
aad
dec
dec
adc
es
xchg
jo
shr
push
sahf
cs
pop
mov
sbb
mov
ret
inc
dec
mov
lock
ret
adc
or
cs
or
cmps
or
push
mov
xor
es
cld
xchg
(bad)
jle
outs
call
dec
test
dec
dec
push
or
sti
dec
ficom
fs
fcom
xor
data16
aaa
ins
inc
(bad)
inc
push
rol
jmp
jnp
(bad)
push
lahf
fldl2t
pop
xor
jbe
fadd
pop
xchg
sub
out
add
gs
push
mov
xor
push
pop
stos
mov
iret
scas
fld
pop
stos
ins
ds
mov
inc
ret
pop
adc
cmc
bound
lock
jmp
pop
pop
leave
xor
push
push
(bad)
xchg
xor
dec
inc
ret
dec
(bad)
sub
pop
js
xlat
iret
add
push
leave
push
or
or
out
mov
push
ret
lds
pop
call
data16
int3
aaa
push
mov
nop
mov
(bad)
in
imul
push
cmp
mov
pop
les
adc
mov
sub
jge
lods
push
cli
sbb
inc
xchg
lock
xor
dec
inc
loop
test
(bad)
xchg
adc
add
adc
pop
mov
xor
dec
mov
clc
mov
out
les
stos
je
push
adc
mov
jl
inc
mov
xchg
dec
es
test
test
add
stc
cmp
int3
(bad)
mov
inc
and
pusha
ror
ror
(bad)
cmps
sbb
retf
cs
push
(bad)
cmp
mov
xor
cmp
pop
push
add
shr
mov
jmp
pop
mov
jae
cmps
cmp
aam
push
(bad)
aaa
cmp
add
adc
mov
test
(bad)
jl
mov
mov
cwde
push
and
xchg
cwde
mov
cmps
dec
xor
inc
popa
stos
mov
mov
cdq
sar
mov
xchg
rcl
inc
jmp
mov
push
mov
test
mov
add
call
xor
daa
pop
jo
or
aad
call
xchg
dec
push
(bad)
jp
jl
jg
mov
pop
add
mov
mov
stc
pop
sbb
int3
add
jae
mov
mov
xchg
dec
out
add
sti
push
adc
pop
retf
ins
int3
pop
push
pop
sti
mov
cmp
push
sub
mov
pop
out
push
and
push
inc
pop
pop
dec
cmp
sbb
je
jmp
stos
cld
aas
int3
or
or
cwde
xor
cmp
les
sbb
mov
das
xor
out
or
adc
(bad)
dec
ret
adc
pushf
lea
ja
push
iret
mov
mov
pop
outs
(bad)
sub
(bad)
mov
mov
mov
jns
or
fidiv
mov
push
je
or
retf
mov
aas
(bad)
jns
popf
dec
push
sub
stos
sub
sub
mov
jecxz
fldenv
repz
jge
adc
inc
movs
add
dec
aaa
sbb
movs
push
ds
xor
push
and
mov
mov
jp
sbb
and
out
je
mov
mov
push
jmp
pusha
mov
sub
into
call
pushf
aad
or
inc
aas
mov
jae
mov
mov
out
mov
retf
inc
jne
inc
cmps
lods
jecxz
sub
test
mov
mov
imul
xchg
sbb
retf
cmp
sti
(bad)
add
cmp
jnp
xor
push
and
sub
gs
sbb
retf
jnp
adc
sbb
in
fsubrp
push
nop
rcl
jp
pushf
xor
imul
and
or
cdq
mov
xchg
push
fcmovnu
inc
popf
add
(bad)
mov
push
dec
cmp
ret
mov
jmp
int
cmps
jns
rol
jmp
or
mov
jg
stos
cs
mov
mov
mov
dec
fsubr
and
lock
outs
inc
mov
add
mov
mov
xor
int3
push
fistp
cmc
shl
sbb
es
inc
in
clc
fyl2xp1
xchg
inc
pop
adc
pop
cmp
inc
out
movs
adc
xchg
mov
cmp
cmc
push
xor
jo
arpl
inc
pop
mov
mov
jnp
mov
jmp
inc
add
in
(bad)
dec
inc
cmp
pushf
int3
cmp
call
iret
mov
mov
push
ret
ja
ds
(bad)
mov
(bad)
push
(bad)
sub
and
jmp
repz
mov
adc
xchg
aad
push
sbb
ds
xlat
ja
jo
cmp
mov
aam
fild
adc
sbb
adc
jmp
dec
jmp
mov
or
aad
loop
bound
stos
cs
dec
mov
test
sub
and
xlat
jecxz
pop
inc
daa
pop
sub
int
push
cwde
xchg
rol
add
lods
mov
(bad)
dec
loop
and
push
xor
fidivr
mov
fsubp
ja
xchg
aad
xor
leave
jnp
mov
mov
(bad)
or
test
jge
xchg
push
pop
xchg
sub
gs
int3
and
movs
and
cld
inc
ret
jmp
cmc
xchg
into
mov
jecxz
ficom
das
and
push
push
pop
mov
shl
(bad)
add
dec
inc
test
xor
inc
fild
jmp
pop
xchg
rcr
push
in
xchg
mov
dec
sbb
mov
inc
or
rcr
mov
mov
outs
cmps
test
pop
xchg
ret
lods
cmp
std
popf
ins
jmp
hlt
and
shl
and
cmp
shr
pop
pop
retf
push
scas
pop
jnp
mov
out
pop
add
jp
mov
inc
pop
xor
scas
(bad)
jmp
xchg
and
jns
push
hlt
test
dec
not
jb
dec
loopne
push
xlat
pop
dec
jae
daa
shr
cmp
jbe
push
jmp
push
mov
aaa
jge
test
fstp
xlat
fnstsw
int3
jmp
mov
push
ret
pop
cmp
dec
jg
mov
ret
into
and
das
icebp
push
push
push
popf
adc
xchg
ret
popf
and
push
sahf
mov
ss
cmp
pop
imul
mov
xor
sub
mov
jg
mov
rcl
inc
rcr
sub
jo
push
or
jne
xchg
push
sbb
ds
and
push
xchg
mov
jae
ds
pop
nop
aad
bts
sbb
adc
test
pop
out
ins
mov
and
in
bound
adc
xor
out
adc
cmp
ins
pop
jnp
jle
test
pop
ja
mov
test
mov
dec
or
lods
push
push
adc
xor
pop
fs
or
lods
es
mov
rcl
leave
call
xchg
cmp
push
leave
xchg
std
xchg
jmp
jno
movs
sub
lock
std
pop
shl
(bad)
rcl
xchg
cmc
dec
addr16
iret
pop
fcomp
aad
movs
nop
outs
fcomp
loop
stos
int3
int
jle
xor
sub
daa
jl
dec
mov
outs
data16
and
movs
adc
sub
loopne
fwait
pop
pop
cmp
sbb
loopne
movs
fs
inc
inc
jns
sbb
xor
mov
iret
xor
test
les
cmps
sbb
sahf
and
sbb
xor
dec
rol
push
push
ins
cmps
mov
jae
(bad)
adc
fmul
xchg
dec
dec
or
shl
loopne
mov
call
mov
xchg
out
ror
xlat
mov
mov
push
dec
jnp
dec
add
int3
cs
pop
(bad)
ss
jnp
xchg
mov
int
sub
lea
retf
fs
pop
aam
inc
or
cmp
ror
cmp
nop
sub
cmp
repz
fistp
dec
jb
jp
mov
arpl
nop
es
or
fbstp
fadd
xchg
mov
sar
not
mov
fsub
fnstcw
fwait
ja
ss
hlt
cmp
addr16
test
dec
adc
movs
push
inc
ret
push
fs
adc
jmp
pop
jle
mov
std
dec
movs
cmp
outs
retf
aad
je
dec
xchg
not
push
jae
loop
sub
cmp
add
mov
push
inc
sub
push
inc
lds
out
pop
fdivr
pushf
jno
mov
rcl
sbb
cmp
movs
dec
push
mov
popa
sbb
shl
push
jae
xor
mov
mov
mov
cmps
lahf
(bad)
pop
ret
inc
mov
push
jne
pusha
out
sub
sbb
outs
jnp
or
int3
xchg
inc
test
sbb
xlat
enter
ss
push
rol
or
loopne
loop
cmps
pop
test
fs
stos
cmp
lock
ja
jp
adc
loopne
mov
ficomp
inc
dec
ja
inc
aaa
das
inc
retf
jmp
xchg
(bad)
mov
aas
jne
scas
mov
jnp
push
sub
add
out
jo
imul
or
and
cmp
(bad)
test
inc
pop
adc
pusha
pop
bound
xor
adc
int
mov
adc
mov
or
aad
lock
inc
ja
mov
xchg
sub
stc
mov
enter
arpl
xchg
(bad)
ror
lea
mov
mov
je
pop
and
mov
data16
iret
lods
pop
add
not
xor
jmp
push
aad
mov
cmp
pop
add
cmp
mov
pop
sbb
adc
sub
pop
and
jmp
cmp
mov
(bad)
jmp
fcomp
cmp
nop
xchg
pop
dec
leave
inc
aaa
mov
jmp
js
cmp
push
popa
iret
leave
mov
iret
pop
xor
stos
inc
cmp
cs
mov
scas
push
pop
les
pop
jbe
test
test
int3
(bad)
pop
leave
cdq
sbb
xchg
nop
push
jbe
loopne
popa
or
shl
adc
cmp
loope
dec
je
addr16
into
aaa
and
pop
inc
daa
leave
ja
push
add
not
mov
loopne
jmp
push
loope
pop
pop
loop
jb
sbb
(bad)
fld
out
aam
sbb
inc
mov
dec
mov
and
sbb
aaa
push
lahf
mov
xchg
clc
aam
push
sbb
xor
int
mov
inc
enter
sbb
sub
std
xor
push
dec
dec
adc
mov
inc
sahf
mov
sub
les
and
cmp
fdivr
dec
or
and
mov
icebp
mov
outs
inc
test
shr
push
mov
iret
push
loop
sar
or
(bad)
cmp
movs
lahf
dec
inc
xor
retf
push
mov
inc
xor
stos
xchg
into
int3
lahf
jle
or
push
pop
imul
jns
mov
add
mov
cmp
sbb
adc
pop
adc
aam
push
xor
int3
arpl
not
mov
cmp
fisubr
jo
sub
jp
daa
stos
adc
xchg
cmp
ins
shr
pop
mov
sub
jecxz
in
rcl
sbb
xor
add
pop
call
test
and
push
adc
les
mov
xor
sub
sbb
and
out
adc
je
mov
fwait
imul
pop
pop
dec
pop
mov
sub
retf
and
pop
dec
cmc
es
push
inc
adc
mov
and
sbb
hlt
xchg
pusha
nop
push
daa
and
jmp
adc
push
rcl
add
xlat
pop
call
cdq
dec
addr16
mov
xchg
pop
in
into
dec
lods
jp
(bad)
ss
sub
mov
dec
lods
xchg
pop
cmp
sub
dec
mov
(bad)
daa
jne
sub
jl
int3
das
cli
cld
xlat
and
das
retf
std
add
ja
hlt
pop
mov
push
mov
sti
push
cmp
loopne
mov
lock
out
imul
pop
ret
or
pop
cmc
imul
aam
pop
xlat
sbb
cmp
xlat
jno
mov
jmp
xor
int3
iret
mov
fistp
rol
jle
cmp
adc
pop
pushf
jmp
arpl
outs
dec
jmp
mov
push
jg
in
enter
cmp
loop
imul
cmp
(bad)
(bad)
iret
add
mov
outs
fistp
jb
sub
add
push
xchg
adc
movs
dec
in
adc
or
out
imul
pop
ja
(bad)
mov
das
fsubr
push
cmp
repz
mov
aaa
data16
cmps
lock
mov
xlat
jmp
sub
loopne
data16
jecxz
push
(bad)
cmps
mov
sbb
std
cmps
clc
mov
and
sub
stos
pop
in
mov
inc
int3
push
jge
inc
rcr
jmp
push
cld
int3
jge
repz
cli
scas
retf
mov
sar
or
rcr
jp
enter
test
(bad)
not
cdq
adc
cmps
xor
sbb
adc
mov
jge
arpl
fcmove
adc
repnz
unpcklps
mov
(bad)
in
test
pop
rol
add
(bad)
mov
sbb
adc
xchg
inc
or
jae
ret
(bad)
xchg
loop
mov
push
pop
(bad)
aad
push
shr
dec
jmp
nop
adc
fcmove
or
mov
pop
out
mov
jae
loop
sub
adc
lock
inc
pop
popa
pushf
mov
inc
loopne
ror
mov
and
mov
push
and
jns
cld
xor
xor
aaa
fs
sbb
ja
ins
clc
icebp
mov
adc
or
pop
dec
sub
mov
xchg
mov
mov
cmps
dec
mov
out
adc
int
aaa
adc
xchg
or
arpl
add
bound
fcmovnb
jge
dec
mov
adc
and
inc
bound
cdq
push
hlt
mov
mov
xchg
sbb
out
fdiv
scas
test
cmp
outs
loope
movs
mov
cmps
rol
cli
cmp
mov
stc
jbe
xlat
fwait
ss
fwait
pop
or
xor
jb
call
cdq
pop
(bad)
sub
dec
pushf
xor
xor
aam
push
sbb
icebp
dec
and
mov
aad
pop
sbb
lock
hlt
nop
and
pop
pop
push
mov
ret
popf
nop
or
push
xchg
push
lods
pop
and
call
cld
aas
jg
lods
adc
xchg
pop
scas
mov
fld
xor
mov
xchg
sub
aaa
mov
cmps
jg
sub
repz
mov
sbb
fadd
cmps
jae
add
jmp
mov
sub
addr16
dec
adc
test
xchg
(bad)
and
mov
push
inc
inc
int3
pop
push
pop
sub
scas
xor
inc
jno
nop
mov
inc
imul
mov
pop
mov
or
iret
ja
mov
sbb
inc
dec
mov
stos
test
pop
daa
pop
push
ror
mov
adc
inc
xchg
pop
mov
dec
pop
ins
fwait
shl
jb
neg
ret
xchg
xchg
dec
dec
dec
xlat
adc
rcr
dec
and
out
fwait
mov
mov
xor
inc
pop
xchg
mov
mov
jg
add
xchg
inc
mov
shl
sbb
cmps
pop
mov
scas
test
les
dec
mov
jmp
xchg
js
or
lods
push
loop
and
gs
or
sub
jnp
mov
dec
sbb
nop
repz
pop
outs
mov
cmp
stos
sbb
push
inc
fmul
sub
or
outs
inc
xchg
and
push
(bad)
fld
mov
retf
inc
shl
test
adc
adc
js
sbb
push
push
add
and
pop
and
call
inc
dec
mov
cwde
scas
pop
add
les
push
shl
dec
jl
sbb
jle
pop
sub
leave
sbb
mov
pop
xchg
and
(bad)
test
pop
mov
xchg
loopne
clc
shr
jae
loopne
mov
push
cmp
mov
fsub
add
pshufw
mov
push
imul
push
addr16
out
mov
daa
ficomp
cli
cmp
fldenv
and
jecxz
aad
sti
inc
xchg
xor
cmp
(bad)
xor
es
pop
xor
sbb
(bad)
lahf
fcomp
int3
fdecstp
jbe
jne
sub
mov
pop
(bad)
jno
cs
push
test
cmps
sbb
cmp
ja
pusha
fnsave
mov
mov
dec
cmp
in
push
aad
aaa
fstp
lahf
mov
(bad)
pop
cs
cdq
mov
sub
sub
fnstsw
inc
pop
cmps
inc
xchg
call
scas
shl
inc
mov
push
data16
dec
adc
fwait
loopne
in
inc
and
repnz
ja
adc
mov
inc
idiv
dec
cmp
cmp
xchg
stos
sbb
jb
daa
repnz
stc
xchg
or
aad
dec
sub
aad
adc
mov
and
sar
mov
mov
mov
(bad)
xchg
movs
adc
inc
cmps
movs
pop
ret
pushf
push
in
js
mov
fisubr
inc
hlt
shr
mov
push
mov
or
and
pop
inc
or
lods
mov
sub
mov
ret
and
mov
xor
(bad)
jg
or
aaa
inc
idiv
stos
pop
(bad)
cmp
fidivr
mov
inc
push
(bad)
pop
ds
inc
mov
xchg
dec
pop
test
dec
stos
mov
inc
inc
in
mov
dec
sbb
push
imul
dec
cmp
out
xlat
cmps
dec
out
mov
pop
adc
inc
xor
push
(bad)
div
fwait
in
mov
mov
icebp
inc
dec
icebp
push
jge
dec
inc
shl
push
pushf
(bad)
sbb
and
adc
rcr
jmp
fdiv
push
js
jmp
push
mov
jnp
cwde
xor
cmp
cmp
addr16
dec
dec
cmp
mov
xor
iret
jp
adc
mov
fiadd
xor
jo
ds
jecxz
fistp
dec
mov
bound
xchg
idiv
and
pushf
cmp
je
jns
leave
stos
div
mov
push
shr
or
and
mov
repnz
loopne
aam
inc
scas
xchg
dec
sbb
enter
add
xchg
sbb
icebp
scas
push
sub
dec
scas
sbb
call
mov
pop
xor
stos
sub
fdivp
std
retf
js
or
cmps
sbb
mov
pop
dec
neg
dec
mov
mov
xchg
xor
push
jl
sbb
jno
shl
jp
jle
inc
mov
and
sbb
push
dec
cdq
(bad)
adc
push
adc
add
sar
pusha
pushf
cmps
add
mov
int3
add
mov
scas
(bad)
cmp
push
jle
ins
push
xchg
mov
cmp
in
inc
xchg
(bad)
retf
add
sbb
jnp
jg
push
push
sub
addr16
aas
(bad)
dec
and
push
xchg
fnstcw
cmp
xchg
cmp
mov
pop
add
mov
dec
je
push
sbb
jmp
sahf
mov
jo
fwait
adc
and
mov
push
adc
xchg
fadd
retf
push
cmp
pusha
mov
ja
push
sbb
fwait
dec
inc
jae
test
inc
pop
test
dec
stc
mov
sti
mov
xchg
sbb
dec
stc
jg
icebp
xchg
xor
pop
push
xlat
dec
cmps
lods
fwait
inc
dec
inc
mov
ret
cmovl
xchg
dec
loope
clc
(bad)
inc
fst
arpl
mov
cmp
cmp
inc
je
cmp
add
mov
xchg
scas
clc
and
xlat
dec
(bad)
std
pop
movs
icebp
xchg
jl
mov
pop
or
pushf
adc
dec
lods
arpl
idiv
lahf
xchg
dec
int3
test
fsubr
sar
mov
jl
and
jo
cmc
pushf
push
test
pop
jno
jmp
inc
jmp
push
mov
sub
adc
push
in
inc
repz
sbb
mov
sbb
cmc
(bad)
dec
push
pop
fnstcw
rol
push
gs
outs
cmp
xor
lods
lock
jns
movs
push
sub
adc
add
(bad)
push
adc
cmp
mov
or
pop
xchg
setl
call
xchg
mov
push
sbb
sar
adc
sbb
mov
dec
pop
(bad)
jns
push
sbb
xor
shr
(bad)
sar
popf
jnp
mov
jb
adc
outs
sub
and
popf
mov
inc
femms
bound
jnp
jg
mov
dec
pop
sub
es
dec
add
leave
add
inc
out
test
(bad)
rcl
sub
je
inc
or
xchg
pop
aaa
jns
push
push
repnz
xchg
mov
inc
dec
dec
mov
sbb
push
mov
dec
das
mov
adc
inc
rcr
sbb
push
jne
add
pop
in
cmps
add
push
jl
mov
xchg
out
pusha
sbb
push
call
add
or
inc
push
xor
loope
mov
gs
cmp
fld
daa
in
or
(bad)
jge
xchg
je
pop
rcr
(bad)
pop
mov
fisttp
mov
sahf
adc
xchg
add
adc
push
lods
nop
lods
mov
stos
and
aam
mov
int
sbb
and
and
ja
pop
sub
rcr
add
mov
pushf
psubsb
imul
mov
rcl
shl
das
fadd
icebp
and
fstp
lahf
ficom
and
and
inc
and
loope
inc
mov
xlat
and
and
fadd
in
and
pop
mov
les
jo
pop
dec
mov
and
sbb
ret
sbb
push
mov
out
out
sbb
jmp
sbb
rcl
mov
pop
lahf
xchg
dec
mov
mov
rol
jmp
pusha
dec
sbb
mov
adc
adc
adc
sub
fdivp
nop
movhlps
test
mov
pusha
stos
dec
je
aaa
mov
pop
push
jmp
jbe
aad
sbb
sub
aam
repnz
jb
call
cmc
mov
push
(bad)
dec
and
out
push
fidiv
dec
call
sahf
nop
neg
inc
and
sub
sar
mov
(bad)
rol
and
xor
ret
push
push
ds
jne
je
aas
mov
pop
shr
mov
sbb
dec
cmc
sub
push
sub
sub
push
push
sbb
jno
jae
mov
adc
fisub
inc
dec
push
lods
or
mov
fild
mov
pop
pushf
addr16
or
outs
ret
fstp
push
xchg
pop
int
dec
jl
ss
inc
jp
xor
sub
pop
(bad)
lods
not
in
fisub
cmps
and
popa
inc
clc
mov
xor
mul
mov
loope
xor
ds
repnz
rol
xchg
sahf
call
inc
frstor
sahf
jno
stos
xchg
aad
aaa
(bad)
push
test
cwde
dec
mov
dec
lods
mov
mov
cwde
or
loopne
int
add
mov
cmp
push
push
out
adc
adc
mov
mov
stos
push
push
(bad)
mov
inc
mov
mov
adc
xor
mov
add
push
cmp
mov
loop
fwait
js
out
mov
push
push
ret
in
lock
into
(bad)
jle
sub
cmp
adc
cld
mov
mov
out
fisub
aam
cdq
jge
xor
popa
add
mov
jne
or
mov
shl
jmp
fdecstp
lea
push
or
mov
rol
cld
add
outs
nop
jmp
push
shl
xor
push
jp
or
mov
popa
stc
xor
aaa
fmul
inc
fist
jmp
rcl
pop
pop
pop
inc
in
add
dec
stos
sub
mov
cwde
jmp
sub
les
pop
shr
add
xchg
out
dec
iret
div
and
loope
pop
lahf
pop
shr
arpl
dec
scas
add
pop
push
mov
shl
dec
pop
dec
es
iret
sbb
dec
in
jecxz
pop
out
and
aad
xchg
jnp
add
add
jo
arpl
push
dec
movs
test
(bad)
xchg
mov
mov
std
test
add
leave
inc
fstp
inc
pop
jecxz
or
das
movs
icebp
addr16
xor
sbb
mov
ja
ds
or
jbe
mov
ja
add
push
jno
lods
addr16
cmps
or
inc
lahf
sub
enter
jl
push
push
jne
cmc
jge
dec
jns
xchg
mov
fidiv
ror
imul
rcr
add
xchg
mov
xchg
cs
fmul
mov
ret
sti
dec
rcr
pop
mov
enter
or
fdiv
ins
fucomip
jge
sbb
jg
add
jae
xchg
cmps
iret
pop
cmp
shr
into
inc
cmp
and
scas
pop
jnp
jne
sbb
movs
xlat
mov
in
sti
out
daa
pop
bound
and
fisttp
jno
(bad)
inc
mov
mov
xchg
inc
push
es
test
push
outs
xor
jge
sar
daa
mov
out
pop
and
cs
aas
mov
in
mov
cdq
icebp
fidivr
jmp
loop
popa
hlt
pop
xor
xchg
xor
stos
popa
add
mov
pop
cwde
popf
mov
or
push
shl
lahf
cmc
xlat
sub
mov
lock
mov
pop
(bad)
icebp
pop
out
dec
dec
iret
xlat
jb
sub
daa
mov
sub
int3
dec
cs
rcl
or
adc
sub
and
mov
xchg
iret
mov
addr16
sbb
jmp
inc
shl
and
outs
mov
add
mov
scas
lods
add
sub
or
movs
lock
mov
add
cdq
jg
xchg
bound
inc
add
fmul
lock
xor
inc
inc
(bad)
pop
movs
aaa
fcom
fucomi
(bad)
jp
cmp
jo
cwde
out
fs
sbb
xchg
and
test
cmp
retf
and
and
pop
stos
mov
mov
push
adc
push
rol
and
aad
mov
pop
and
jnp
cld
jp
(bad)
les
inc
add
xchg
xchg
jmp
xchg
mov
fnsave
mov
outs
mov
sbb
inc
call
inc
adc
cwde
test
or
sbb
pop
push
adc
gs
sbb
xchg
test
loop
pop
ja
std
stos
xchg
scas
pop
out
retf
rcr
sbb
or
or
cmp
mov
mov
inc
mov
aas
and
imul
icebp
dec
pop
subps
ret
and
and
int3
push
(bad)
in
(bad)
sbb
and
fild
xor
ficom
cmp
rcr
test
mov
or
xchg
mov
dec
ins
sbb
not
pop
popa
mov
aas
cmc
loop
sbb
test
mov
push
pusha
mov
add
out
fwait
dec
popa
pop
clc
pop
es
jae
cdq
mov
and
(bad)
pop
inc
neg
icebp
push
sahf
dec
mov
sub
or
mov
sbb
sahf
popf
mov
aas
jle
std
out
jb
stos
pop
xor
mov
test
pop
push
daa
or
inc
pop
inc
pusha
(bad)
(bad)
shr
adc
xchg
stos
outs
xor
and
inc
test
jae
sahf
push
jmp
mov
leave
cmp
pop
dec
fst
dec
mov
push
outs
sub
adc
nop
mov
(bad)
mov
jg
xchg
lods
cmp
mov
mov
pop
aad
and
mov
jge
movs
or
add
imul
adc
push
cmp
pop
mov
xchg
(bad)
leave
sbb
lods
and
xchg
mov
cmp
shl
popa
xor
push
add
rol
(bad)
sti
or
xor
dec
add
fist
add
rol
repz
(bad)
dec
bound
aaa
jmp
scas
sub
sbb
movs
sub
push
mov
adc
adc
pop
dec
cmp
mov
outs
dec
test
inc
mov
mov
addr16
mov
jne
sbb
rcl
sub
sbb
jmp
add
mov
fdiv
cmp
dec
retf
push
rcl
lahf
iret
pop
dec
mov
addr16
add
sbb
sub
clc
mov
(bad)
mov
xchg
mov
add
sti
sbb
dec
dec
out
jle
retf
pop
and
sub
fsubr
adc
inc
fst
push
mov
mov
sub
arpl
inc
xchg
daa
pop
pushf
aam
push
pushf
sub
add
lea
ja
mov
sub
ror
add
pushf
pop
inc
lods
pop
mov
aaa
xchg
xor
scas
dec
push
mov
outs
pop
mov
(bad)
jg
aam
and
xchg
mov
int3
mov
loope
cs
loope
cmps
mov
sbb
add
fdiv
test
cwde
adc
fisub
inc
jmp
fimul
dec
adc
push
ja
test
or
push
int3
shl
dec
mov
(bad)
xchg
pushf
xchg
mov
movs
inc
ja
jp
pushf
mov
pop
std
in
test
in
push
mov
sar
or
int3
push
rcr
fistp
(bad)
retf
fdiv
xor
mov
sti
call
or
jb
mov
daa
in
or
add
xchg
jb
pushf
repz
mov
ret
aam
test
mov
mov
ins
mov
fadd
scas
cmp
inc
mov
mov
shl
les
sbb
pop
fld
xlat
loope
xchg
push
ins
imul
dec
retf
jne
adc
sti
arpl
or
popa
xor
in
cwde
stos
aaa
fld
aam
add
xor
popa
call
mov
arpl
xlat
sub
mov
rcl
xor
adc
sub
nop
add
jmp
nop
inc
scas
mov
inc
mov
pop
test
cwde
sbb
shl
mov
xchg
sub
ds
and
xor
xlat
retf
popa
aas
inc
(bad)
stos
sub
mov
lahf
pop
loope
dec
add
pop
retf
addr16
inc
test
pushf
popf
xchg
rcl
lahf
push
movs
inc
mov
call
je
(bad)
push
movs
movs
jmp
xlat
movs
pop
xor
cld
mov
imul
adc
or
push
pushf
pop
shl
mov
imul
mov
scas
jbe
cmp
mov
ret
xor
cld
mov
sbb
clc
in
jmp
ret
fwait
daa
enter
jecxz
ss
jmp
push
mov
aas
push
mov
mov
jge
push
add
(bad)
cdq
lock
xchg
cmps
dec
ins
icebp
les
cld
je
pop
jmp
adc
cld
shl
cmove
nop
jmp
sub
xor
mov
mov
jg
es
mov
jmp
sar
push
int3
rcl
inc
popa
lds
retf
in
ds
popa
add
out
daa
push
jnp
push
(bad)
hlt
cdq
pop
xchg
mov
stos
push
arpl
pop
out
inc
fwait
jmp
icebp
dec
mov
and
dec
mov
pop
lds
xlat
adc
sar
pop
sbb
mov
(bad)
pop
fs
or
out
and
dec
pop
cwde
push
out
lds
jno
stos
dec
add
add
xor
loope
pop
std
mov
icebp
sbb
fild
sbb
or
popa
mov
push
sbb
shl
and
fidiv
fdiv
push
jge
out
mov
clc
mov
cmps
adc
pop
xor
cmp
mov
mov
xchg
dec
sbb
or
std
repz
sar
sti
enter
sbb
push
dec
in
cmp
mov
xor
mov
cmp
mov
mov
inc
adc
fild
test
adc
fs
popf
xchg
imul
in
pop
pop
and
imul
pusha
pop
nop
ror
mov
repnz
add
mov
sbb
add
shl
in
fisubr
cmps
add
xor
pop
pushf
std
icebp
dec
les
add
jae
xchg
and
add
mov
jb
(bad)
std
dec
add
nop
jg
sbb
pushf
add
mov
xchg
sub
mov
or
out
mov
dec
stc
mov
adc
(bad)
sti
xchg
in
jo
sub
adc
cmp
cmp
loopne
mov
retf
jle
lods
pop
cwde
or
(bad)
sub
lahf
cmp
inc
adc
repnz
push
popa
aad
cdq
add
repz
into
cmp
sub
mov
dec
(bad)
aad
fild
int3
add
(bad)
icebp
fsubr
scas
ins
clc
push
xor
fdivr
shl
push
(bad)
(bad)
mov
jle
aas
fwait
das
sub
sbb
mov
cs
xor
mov
sub
sahf
or
cmp
test
add
mov
int3
inc
gs
sub
and
cmps
xchg
jae
les
jl
rol
fsub
int3
loop
push
cwde
pop
aam
jl
dec
popa
scas
jecxz
and
sub
cmp
push
fsubr
(bad)
mov
mov
loopne
icebp
out
mov
mov
fwait
dec
es
add
pop
aam
sar
arpl
movs
dec
mov
or
hlt
push
dec
mov
or
push
jb
mov
arpl
(bad)
xor
daa
add
or
jo
inc
call
dec
ss
(bad)
retf
mov
inc
lea
ret
and
rcr
fwait
push
call
je
loop
loopne
jno
pop
div
push
sub
call
shl
dec
adc
lods
push
lds
push
outs
mov
dec
inc
js
sub
jg
icebp
cmp
sti
sub
sbb
xor
jl
test
out
pop
iret
scas
and
mov
pushf
push
sub
push
repz
add
(bad)
push
and
jmp
nop
or
(bad)
rol
or
sbb
js
jg
cmps
in
icebp
lods
xor
pop
pop
sbb
sub
mov
dec
xchg
push
cld
dec
sahf
hlt
mov
and
scas
cld
stos
int3
into
cmp
adc
pop
jnp
ss
sub
cmp
idiv
pop
cmove
rcr
jmp
adc
dec
fwait
sub
inc
cdq
cmps
(bad)
arpl
sub
xchg
imul
mov
adc
mov
sub
sub
fmul
push
xchg
sbb
popa
(bad)
pop
ds
pop
in
mov
test
jle
imul
inc
xchg
push
fs
movs
push
cmc
pop
outs
popa
xlat
test
pop
lods
vsqrtss
inc
mov
test
(bad)
mov
push
pop
cmc
les
jmp
sub
ffree
xlat
dec
pop
in
sbb
retf
repnz
in
scas
aad
jle
and
inc
push
pop
mov
mov
adc
(bad)
and
lods
sub
mov
clc
jbe
xor
xlat
inc
out
sbb
inc
or
xor
add
hlt
shl
dec
mov
dec
dec
ja
dec
xchg
mov
xor
sahf
jo
xchg
into
arpl
push
inc
fmul
dec
dec
cmp
fdivr
std
pop
xor
xor
mov
sar
bound
and
inc
adc
inc
mov
test
push
neg
pop
push
xor
mov
loopne
rcr
cmp
out
sbb
push
pop
sbb
sub
lea
xor
mov
movs
sahf
push
loope
xchg
pushf
xlat
rcr
dec
xchg
jmp
jne
xor
dec
mov
ret
dec
aad
cmps
inc
push
adc
cmp
inc
pop
nop
mov
add
dec
ins
add
xchg
dec
mov
int3
ins
jbe
pop
xchg
sbb
aam
xor
pop
jno
cmp
rol
xor
sub
adc
jne
out
dec
test
xchg
lods
ins
arpl
ja
xchg
cld
add
enter
sar
loop
aaa
fwait
iret
mov
inc
cmp
mov
int
daa
push
dec
inc
imul
mov
pop
push
(bad)
arpl
mov
jmp
mov
jbe
xchg
cmp
imul
xchg
gs
xchg
cs
js
jno
mov
dec
sub
out
push
cmp
xchg
test
ret
mov
push
and
dec
repnz
mov
ss
repnz
adc
mov
mov
dec
xor
cmp
inc
inc
movs
sub
xchg
fcmovu
cs
pushf
sbb
and
test
cmp
adc
sub
dec
push
sbb
hlt
mov
pop
cld
cdq
add
adc
movs
lahf
les
inc
xchg
or
jmp
fild
test
mov
ja
jge
addr16
cmc
rcl
mul
aas
jb
pop
fs
out
push
ret
das
mov
and
mov
jmp
jno
jecxz
lock
rcl
xor
xchg
cmc
mov
and
stos
movs
icebp
stc
push
dec
pusha
jge
pop
jo
pop
dec
repz
int3
stc
inc
push
fnstsw
mov
xchg
cdq
cmc
push
xor
xchg
retf
cld
jmp
(bad)
outs
pop
add
shl
(bad)
loop
imul
fistp
add
sti
nop
loopne
aaa
sbb
retf
retf
test
adc
lods
inc
imul
stc
inc
in
fwait
(bad)
pop
jo
sbb
jl
jne
clc
fnstsw
mov
mov
dec
in
frstor
pusha
xchg
mov
test
mov
inc
pop
xor
repnz
push
sbb
mov
loope
call
pop
mov
cli
outs
mov
fdivr
adc
in
neg
push
ds
jnp
leave
test
fsub
imul
push
xchg
shr
sub
xor
sbb
pushf
jno
mov
psubsb
(bad)
dec
not
mov
cmps
loopne
add
cmp
push
jle
xchg
jns
or
lahf
mov
xchg
fs
addr16
mov
ror
mov
out
push
add
stos
fsubr
jl
sbb
fidivr
inc
sar
inc
or
enter
jae
xchg
call
sub
into
sub
sbb
aaa
xor
cmp
lock
pushf
dec
les
aas
push
xchg
inc
cmp
mov
add
jnp
loop
sbb
loopne
neg
pop
add
add
or
pop
mov
or
pop
sub
adc
pop
fcmovnu
jmp
cmp
ret
mov
leave
test
inc
cmp
cmp
mov
lods
lea
popa
pop
cmp
mov
sub
scas
mov
xlat
shr
mov
pop
addr16
cmp
jge
mov
fisubr
fisttp
xor
mov
sbb
pop
pop
adc
in
sbb
stos
or
xchg
xchg
push
xchg
mov
ss
les
sbb
mov
dec
retf
cdq
dec
mov
inc
and
out
push
mov
push
sub
push
into
push
adc
test
push
adc
fistp
and
xor
xchg
fst
sbb
cmp
push
enter
nop
lea
and
ins
out
xchg
sahf
fisub
add
(bad)
ret
jmp
pop
mov
and
popa
iret
scas
mov
lods
out
ret
ja
cmp
out
cmc
fistp
jo
les
clc
sub
ss
push
push
xchg
ficom
aam
dec
fist
sub
fdivp
lock
arpl
in
mov
aam
mov
jmp
and
adc
int
jmp
std
xchg
pop
sub
mov
sub
je
stos
jmp
xchg
into
xor
dec
jnp
xchg
int3
push
mov
inc
int3
shl
jl
sti
retf
mov
loop
loope
and
and
pop
(bad)
mov
ins
or
cs
sub
int3
pop
sbb
inc
lods
shr
jo
pop
sti
inc
and
adc
sbb
shl
fwait
cmp
call
cwde
mov
xchg
push
lds
loope
push
adc
in
loopne
xchg
ins
fwait
pop
in
imul
cmc
push
sbb
add
mov
mov
jno
fcmovnbe
mov
sub
jns
in
dec
stos
out
and
jg
jl
xchg
out
inc
mov
mov
sub
mov
xor
sbb
mov
lea
fisub
rol
xor
hlt
mov
mov
ja
stos
fild
jo
imul
addr16
inc
add
rol
or
mov
mov
retf
sbb
cmps
adc
cdq
xchg
jmp
mov
sbb
aas
cmp
and
stos
ins
jecxz
sahf
sbb
cli
test
push
or
add
mov
movs
rol
ficom
inc
xor
(bad)
idiv
test
mov
and
ss
dec
mov
test
xor
sub
dec
stc
cmc
sti
mov
xchg
dec
ffree
cmps
mov
xor
or
mov
xchg
(bad)
sbb
xor
xor
pop
pop
dec
pop
retf
jge
and
or
xchg
frstor
ror
imul
mov
cmp
xchg
stos
dec
icebp
and
mov
mov
pop
mov
test
repz
inc
pop
ror
mov
shr
inc
dec
fcomp
outs
(bad)
cmp
test
ins
leave
add
sar
nop
(bad)
in
mov
fmul
pop
xor
mov
std
lea
call
mov
enter
stc
sbb
push
push
stos
add
in
mov
mov
sti
sbb
xlat
ss
pop
xor
sbb
mov
sahf
fadd
mov
lods
cmp
fs
fild
or
fidiv
out
arpl
es
sub
les
shl
mov
in
rdmsr
sub
pop
ja
stos
add
inc
mov
fadd
inc
or
sti
pop
iret
mov
inc
inc
rcr
and
dec
mov
nop
mov
sbb
cmc
hlt
shr
xchg
cmps
lahf
dec
fsub
xchg
addr16
cmp
push
adc
sub
scas
and
mov
or
imul
cdq
movs
jp
jns
call
dec
mov
cmps
test
xchg
cmp
arpl
in
loope
cwde
pop
movs
sub
jmp
pop
cmps
pop
push
arpl
into
xchg
cmc
add
pop
jmp
adc
or
sbb
shl
daa
fidiv
xor
and
(bad)
xor
imul
aaa
leave
jo
mov
pushf
retf
mov
inc
les
int
fadd
repnz
mov
add
mov
xchg
sti
nop
cwde
imul
mov
dec
jecxz
cmp
mov
xchg
pop
rol
pop
cmp
and
cwde
push
mov
retf
test
mov
cmp
ds
cmp
aam
inc
jae
int3
push
and
adc
push
sub
rol
jo
xchg
clc
inc
aad
arpl
mov
(bad)
dec
test
pop
xor
sbb
jmp
sbb
xchg
sub
push
sbb
inc
cwde
and
mov
out
leave
retf
pop
adc
and
stc
mov
stos
addr16
pop
imul
adc
call
sbb
lahf
(bad)
and
dec
and
mov
xor
fcomp
loope
push
sbb
or
mov
cmp
and
jbe
sbb
loope
std
mov
sub
pop
xchg
push
push
mov
loopne
mov
inc
lahf
(bad)
pmullw
inc
fwait
xor
aam
push
and
mov
jle
shl
dec
clc
into
mov
pop
repz
retf
dec
in
jo
cmp
cmp
push
adc
adc
retf
rol
aad
sub
lods
cmp
sub
std
call
mov
inc
jl
fwait
ins
mov
jg
aaa
pop
retf
loope
nop
pop
dec
xchg
bound
mov
mov
call
pop
(bad)
aad
mov
leave
popa
mov
pushf
sub
sbb
(bad)
(bad)
and
loopne
lds
jl
jmp
es
pop
xlat
jl
inc
fld
mov
mov
sbb
jmp
xchg
fnstsw
fisubr
inc
push
mov
jp
push
mov
mov
(bad)
int
or
jo
mov
cld
aam
mov
add
iret
adc
sub
scas
cmp
rol
dec
mov
popa
cwde
or
shr
ror
ror
inc
dec
inc
out
xchg
sub
je
xchg
rcl
xor
jne
pop
mov
retf
sub
jle
repz
in
mov
mov
xchg
frstor
popf
(bad)
lock
pop
inc
in
shl
pop
xlat
mov
fbstp
fcomp
and
sbb
sub
adc
lea
aam
push
fimul
call
cdq
jp
push
push
pop
pop
add
test
mul
(bad)
dec
cs
ins
test
jmp
push
int3
fldenv
ss
pop
mov
mov
daa
or
cli
push
push
xchg
or
daa
xor
mov
pop
je
mov
cli
adc
je
sub
aaa
(bad)
or
std
mov
mov
repz
jmp
rol
test
pushf
jbe
icebp
add
enter
dec
jns
out
xor
pop
push
neg
cmps
cmp
(bad)
xlat
mov
cmp
out
lods
or
clc
and
ins
cmp
fldenv
leave
ss
repnz
cmp
leave
arpl
mov
mov
iret
lods
stc
xor
out
adc
inc
inc
jmp
sbb
movs
jno
ds
xchg
leave
pop
fwait
mov
out
retf
(bad)
pop
xchg
inc
clc
out
shl
mov
mov
mov
mov
cdq
je
xlat
mov
pop
adc
mov
out
mov
lea
div
pop
out
cvttps2pi
fstp
or
sti
movs
xor
add
add
pop
iret
dec
sbb
cmp
lods
pop
stc
out
addr16
xchg
jmp
fcomp
push
pusha
call
mov
xor
jecxz
enter
or
mov
mov
(bad)
dec
mov
mov
ret
mov
sub
lahf
push
xchg
xchg
adc
rcr
jne
pop
xlat
mov
push
dec
inc
inc
mov
in
retf
push
xor
inc
ret
push
test
aaa
mov
mov
fst
push
(bad)
xchg
ins
pop
(bad)
xchg
mul
pop
bound
and
retf
cmps
sbb
cmp
stos
mov
sub
xor
xchg
jmp
mov
mov
ror
jge
sbb
xchg
fcom
jge
dec
or
int3
and
stos
sub
cmp
shufps
sbb
enter
push
mov
sub
xchg
adc
popf
cmp
gs
dec
cmps
add
scas
dec
mov
sbb
mov
dec
mov
in
sbb
add
xor
paddsb
sub
pop
ret
push
xchg
ss
push
mov
mov
sub
mov
xor
inc
xor
jns
sbb
loope
(bad)
sub
mov
dec
hlt
or
gs
xchg
xchg
adc
push
jne
mov
pusha
loop
fs
sub
mov
into
bound
jne
stos
repnz
cmp
movs
fstp
jb
idiv
cmps
pop
aaa
sbb
fs
mov
sub
into
jo
fild
fld
push
and
jle
mov
nop
adc
push
cli
shl
xchg
adc
in
add
mov
mov
daa
pushf
mov
mov
mov
arpl
push
push
and
ret
mov
pusha
sub
cmp
ret
mov
push
dec
ror
mov
jmp
stos
push
iret
jg
out
mov
and
xchg
sub
in
popa
int3
js
not
mov
aam
fisttp
sti
add
adc
int3
rep
push
call
mov
pop
adc
movs
out
xchg
adc
sbb
shl
push
push
rcl
data16
fwait
mov
mov
rcl
enter
inc
pop
enter
add
jp
adc
or
mov
loopne
mov
aam
in
push
gs
jmp
ins
push
xor
sbb
fisub
lods
fcmovnb
fs
(bad)
retf
cmp
mov
xchg
in
pushf
call
add
jge
cmps
sbb
push
pop
int
adc
inc
out
mov
pop
push
mov
pop
and
int3
out
(bad)
mov
in
rcr
clc
inc
push
xchg
jb
xlat
jmp
rcl
mov
jae
push
or
dec
hlt
jne
jg
(bad)
imul
arpl
lods
add
arpl
out
jg
mov
aam
aas
aaa
ja
xchg
inc
nop
fwait
test
sub
mov
pushf
addr16
sbb
mov
cld
or
sbb
push
xchg
push
scas
or
movs
je
pop
push
xchg
(bad)
cmp
inc
daa
mov
jge
aaa
mov
or
xor
retf
fsubr
sbb
ficomp
or
xchg
test
imul
jo
cmp
jmp
mov
cmps
dec
dec
mov
mov
cmps
mov
sbb
call
mov
inc
xchg
cmc
fdiv
push
inc
push
push
das
ds
shr
popa
xchg
or
pop
inc
pop
ror
xlat
mov
dec
iret
clc
mov
call
pop
out
mov
enter
xlat
mov
aam
dec
nop
pop
out
and
fnsave
out
retf
std
call
inc
mov
add
aam
xlat
xchg
mov
push
sbb
mov
inc
in
dec
ja
mov
aaa
nop
inc
sar
pop
mov
les
aas
aam
xlat
push
jbe
loopne
sbb
jge
sub
test
iret
or
repnz
retf
adc
nop
mov
out
and
fwait
daa
str
int3
jg
mov
test
mov
mov
mov
clc
nop
inc
(bad)
cmp
imul
loope
inc
sub
ss
mov
mov
cmp
stos
(bad)
cmp
sar
cdq
jbe
push
fisubr
and
sbb
push
dec
out
cmp
fwait
pop
int3
(bad)
test
loopne
mov
aaa
pop
sahf
dec
xor
mov
cmp
fistp
jb
mov
sbb
js
add
fistp
mov
adc
xlat
push
sbb
or
mov
inc
sbb
fisttp
mov
mov
mov
or
mov
dec
mov
or
jmp
mov
enter
xchg
call
or
call
out
stc
out
inc
cli
push
xor
out
sti
dec
cmp
cmp
(bad)
cdq
mov
pop
xchg
inc
ja
and
movs
push
inc
jmp
mov
cld
clc
ret
adc
pop
lahf
shl
ja
jge
loopne
mov
jmp
or
and
mul
mul
popf
fstp
outs
mov
test
call
cld
seto
xchg
add
mov
mov
xlat
and
mov
imul
cli
pop
xchg
jl
mov
loope
mov
or
and
or
into
xchg
test
stos
dec
dec
ror
and
mov
int3
cdq
push
pushf
mov
outs
pop
ficom
stos
jns
enter
fnsetpm(287
xor
pop
xchg
push
mov
sbb
mov
mov
xor
inc
adc
fisub
pop
mov
in
aas
or
mov
inc
add
into
ret
stos
mov
int3
cwde
inc
push
sbb
add
(bad)
icebp
sub
or
pusha
xchg
jnp
int3
dec
ret
or
not
jmp
lods
fdivrp
dec
sub
cmp
into
scas
cmp
push
inc
jo
or
(bad)
sar
or
push
inc
arpl
or
test
movs
ja
mov
sub
iret
mov
mov
pop
mov
inc
jo
push
sub
jl
dec
pop
gs
sbb
cmc
and
idiv
push
and
mov
xlat
fiadd
das
aam
add
inc
cmps
int3
xchg
sahf
jbe
call
xchg
sbb
add
shl
les
pop
dec
jmp
or
inc
push
fsub
xchg
sub
int
mov
ds
in
mov
es
movs
aam
and
adc
mov
xlat
cwde
mov
xchg
jns
(bad)
ret
ins
fisub
cld
mov
in
test
push
(bad)
cdq
pop
mov
inc
(bad)
or
int3
scas
call
xchg
shr
stc
xor
cdq
xchg
in
mov
fsubr
das
push
lahf
xlat
mov
jmp
mov
fld
jae
cmp
fsub
xor
mov
push
add
scas
mov
les
addr16
lods
ja
lods
pop
mov
and
adc
mov
mov
jmp
dec
in
dec
ficomp
push
mov
cmp
xchg
idiv
xchg
les
push
retf
data16
mov
pop
cwde
push
xchg
xchg
lods
xchg
ud1
mov
mov
pop
pushf
inc
(bad)
ret
inc
stc
push
add
or
adc
inc
stos
adc
adc
stc
retf
or
mov
sbb
clc
sub
jecxz
adc
pop
aam
adc
or
sub
sub
xor
aad
pop
jp
or
and
in
inc
dec
bound
jmp
sbb
sub
scas
outs
les
mov
push
push
or
mov
xchg
push
sub
push
out
ins
loop
cmp
pushf
(bad)
in
outs
ss
(bad)
loop
(bad)
add
test
int
mov
xor
and
mov
cmps
mov
test
push
loope
cmps
neg
pop
xchg
jbe
or
not
xchg
movs
outs
sub
push
inc
dec
loope
push
pushf
inc
arpl
gs
inc
loop
je
and
jmp
rcl
not
mov
scas
fsubr
pop
aad
jno
or
cwde
rcr
jmp
shl
inc
pop
test
fwait
xlat
rcl
cld
adc
mov
xor
cdq
dec
aad
jnp
das
ja
es
sub
enter
js
jmp
adc
xor
xor
mov
sub
shr
lea
fsubrp
rcr
das
adc
mov
jbe
loope
leave
or
mov
call
xor
push
inc
mov
(bad)
shr
push
call
pop
xchg
add
mov
mov
adc
aaa
scas
dec
pusha
pop
fisubr
shl
fstp
div
or
dec
aad
add
retf
call
adc
and
adc
daa
jb
mov
sar
pop
jge
sub
stos
(bad)
sbb
rcr
jl
mov
jp
cmps
jg
push
mov
stc
sbb
mov
jmp
add
sbb
enter
fst
fcom
push
scas
xlat
mul
or
gs
push
push
adc
ficomp
addr16
(bad)
dec
mov
adc
fcomp
jnp
ret
arpl
mov
ret
mov
xchg
inc
push
test
jmp
adc
ds
(bad)
lea
mov
mov
and
cmp
mov
dec
xchg
push
mov
push
dec
loopne
cwde
xchg
sti
in
test
stos
jae
retf
mov
lea
and
es
ss
adc
xchg
jg
inc
ror
cdq
pushf
xor
xchg
repnz
xchg
in
add
scas
pop
xlat
imul
push
popf
jns
and
ret
add
and
mov
and
cmp
lahf
mov
imul
fwait
jmp
xchg
fisubr
inc
fild
ins
popf
neg
adc
xor
pushf
push
popf
push
cmp
cdq
xchg
aas
ret
sub
mov
mov
jl
(bad)
je
xor
push
and
pmaddwd
jp
xchg
xor
sbb
xchg
(bad)
mov
sti
in
mov
mov
jge
sbb
cwde
add
hlt
arpl
pop
jnp
mov
mov
add
gs
jns
mov
add
adc
into
sar
int
add
das
add
pop
(bad)
jmp
(bad)
call
retf
hlt
add
sub
iret
jne
adc
xlat
adc
pop
push
and
dec
fcmovb
xbegin
jg
imul
(bad)
fs
lea
add
bound
cmp
fwait
aam
(bad)
sar
cmp
ds
mov
enter
cmc
in
and
sbb
dec
test
or
jnp
push
dec
push
mov
pop
add
es
dec
shl
mov
popa
aam
mov
retf
pop
inc
add
and
mov
xchg
js
fwait
pop
and
sbb
clc
loope
lds
sbb
push
adc
mov
xchg
push
jge
retf
call
xchg
ins
loopne
add
aam
push
or
rep
or
shl
dec
pop
xlat
bound
imul
xchg
add
cmp
icebp
or
jmp
test
pop
inc
pushw
aad
daa
and
add
das
aad
iret
mul
mov
stos
jge
icebp
leave
add
mov
ss
cwde
xchg
in
call
jg
mov
pushf
(bad)
push
sub
jb
pop
mov
int
retf
xchg
fwait
sbb
mov
inc
inc
(bad)
jnp
push
paddsb
and
in
call
cmp
clc
add
lds
ins
ds
push
cwde
or
xlat
and
rcl
adc
sbb
sub
push
inc
fsub
sahf
dec
or
mov
jecxz
mov
cmps
fisubr
add
mov
in
push
mov
sbb
pop
aam
fild
not
das
aas
push
push
jne
cmp
push
idiv
bound
int3
push
shld
fs
sub
pop
dec
in
xchg
sub
hlt
nop
pop
dec
mov
fistp
mov
addr16
mov
rcl
mov
pop
push
dec
or
ret
sub
xor
adc
fnstsw
dec
stc
jmp
mov
cmp
outs
pop
pop
xchg
push
add
jp
mov
rcl
ds
ror
mov
addr16
pop
(bad)
pop
push
stc
adc
pushf
cld
in
jmp
(bad)
stc
clc
popa
sahf
sub
js
iret
sahf
repnz
inc
(bad)
repz
data16
mov
repz
mov
fwait
mov
gs
outs
aaa
pop
push
inc
lea
into
mov
jmp
ds
dec
stos
push
mov
inc
nop
in
cmp
jae
jnp
cmp
test
inc
in
sbb
inc
jecxz
jg
inc
inc
sbb
fild
iret
mov
xor
jg
(bad)
adc
mov
vmwrite
out
xor
out
sbb
popa
pop
mov
push
mov
sbb
hlt
inc
cmp
out
pop
adc
xchg
fistp
cmp
pop
inc
inc
jp
test
pop
les
sbb
aaa
cmp
(bad)
jp
xchg
adc
xchg
adc
push
jnp
leave
enter
rcr
out
and
add
adc
mov
iret
out
pop
ret
or
jmp
mov
call
mov
in
adc
dec
cli
movs
(bad)
out
sub
and
pop
nop
inc
imul
dec
out
pop
test
icebp
mov
gs
(bad)
retf
pop
mov
daa
add
sub
push
xchg
xor
ret
fadd
cmp
cmp
ret
ret
sbb
test
xchg
sub
push
lods
inc
inc
dec
lock
sti
stos
lds
cmp
dec
fs
sub
push
mov
mov
cli
je
sbb
clc
or
dec
sub
pop
aas
push
sub
adc
adc
out
sub
test
xchg
or
sub
mov
mov
call
mov
addr16
adc
fwait
and
xchg
ret
push
pop
jo
mov
dec
dec
pop
cld
dec
retf
sub
mov
mov
lock
movs
sar
cli
lock
sti
dec
es
fimul
ret
inc
cmps
or
inc
ins
xchg
int3
sub
out
sti
pop
dec
stos
jb
cmp
xor
xor
adc
rol
bound
mov
inc
div
cwde
mov
jecxz
sub
sub
or
repnz
pop
lds
int
pop
cs
lock
aaa
int
mov
xchg
mov
xor
nop
out
xor
and
gs
push
movs
pop
fadd
pop
(bad)
cmp
xchg
xor
cmp
out
retf
aam
sub
es
in
ins
lahf
sbb
sub
fwait
push
inc
test
rep
push
jo
shl
arpl
mov
pop
lods
add
mov
inc
pop
mov
(bad)
cmc
ret
cmp
xchg
xchg
inc
ds
adc
mov
jne
(bad)
out
mov
outs
adc
pop
sub
push
add
or
xor
cmovle
dec
sub
ficomp
mov
sub
out
loope
test
jmp
cmp
push
sti
les
jae
imul
inc
or
add
inc
ss
iret
push
fcmovbe
cmc
mov
sub
retf
cld
test
jno
sub
dec
mov
push
add
inc
and
adc
jns
mov
leave
ja
loopne
sbb
fild
sahf
cli
adc
xor
mov
sahf
mov
mov
outs
stos
jecxz
imul
cmp
(bad)
mov
push
mov
fwait
jmp
sbb
pop
nop
jo
xor
adc
imul
cmp
jae
mov
xchg
out
leave
mov
shl
xor
push
int3
or
xchg
test
stos
dec
sbb
(bad)
push
leave
inc
inc
test
sub
inc
stos
jmp
push
mov
gs
cld
sahf
(bad)
xchg
xchg
xchg
imul
(bad)
push
je
mov
sbb
mov
mov
aaa
push
repz
adc
dec
adc
push
sub
sub
adc
fwait
in
add
push
imul
jmp
jle
or
test
sub
mov
outs
or
pop
add
aam
in
push
jne
cld
add
retf
mov
sub
mov
add
pop
mov
push
cmp
(bad)
dec
jecxz
push
loope
shufps
push
xchg
shl
adc
rcl
data16
add
aad
xchg
jcxz
cld
pusha
or
imul
loop
cmp
js
ins
pusha
mov
mov
mov
shl
dec
and
(bad)
jnp
out
pop
mov
pushf
ret
dec
pop
ins
stc
mov
cmps
cmp
repnz
xor
pushf
ins
nop
in
push
popa
push
inc
fs
sub
imul
movs
fwait
or
pop
mov
lods
xchg
push
inc
imul
adc
aad
push
pop
add
adc
loope
(bad)
mov
int3
enter
adc
(bad)
clc
(bad)
pushf
pop
neg
or
adc
cmp
(bad)
dec
add
fcomp
stos
neg
fisubr
rcr
dec
push
out
dec
mov
(bad)
xchg
pop
arpl
repz
movs
lods
adc
pop
inc
sbb
enter
mov
jmp
cli
and
pop
enter
ret
push
push
call
fstp
xchg
cmp
and
push
in
push
test
sub
push
jmp
inc
in
push
cli
loope
lahf
mov
push
dec
pop
dec
loopne
mov
push
repz
jae
shl
inc
mov
imul
sbb
fcmovu
dec
add
sbb
(bad)
xor
mov
mov
mov
push
pop
retf
push
lods
ins
lock
rol
out
xchg
cdq
adc
mov
rcr
dec
shl
inc
mov
test
push
loopne
xchg
fs
and
movs
mov
out
and
pushf
fist
mov
aam
fsubr
int3
bound
push
sub
pop
je
jmp
mov
adc
popf
jmp
int3
mov
and
mov
sti
mov
dec
cmp
adc
xchg
dec
mov
add
add
push
sbb
bound
push
stos
xor
mov
test
mov
mov
lds
out
xlat
(bad)
int3
not
push
sbb
dec
retf
call
pop
dec
stc
call
fdiv
les
push
sti
adc
in
js
pop
in
lahf
ds
ins
sbb
clc
pushf
jnp
and
xchg
sti
mov
mov
dec
into
call
and
cmc
pop
mov
sbb
xlat
xchg
int
test
mov
(bad)
call
stos
loope
push
fcomp
rol
ins
mov
test
cmp
xor
nop
ret
ss
adc
pop
movs
dec
xchg
pop
push
cdq
out
pop
push
xchg
aam
xor
stos
dec
ret
adc
jo
retf
fsub
or
ja
adc
mov
add
mov
icebp
mov
xor
call
push
pop
push
stos
and
dec
jae
pusha
cmp
(bad)
(bad)
xchg
imul
jnp
dec
mov
sbb
push
movs
std
mov
adc
or
sbb
neg
push
cmp
inc
(bad)
jns
sbb
mov
push
push
pop
or
jge
out
mov
jne
sti
dec
ret
dec
or
repnz
int
mov
test
shr
push
pop
jmp
fidiv
and
xor
div
dec
ret
inc
sub
push
mov
mov
xchg
inc
mov
dec
cmp
jle
xchg
enter
xchg
dec
fs
imul
push
js
popa
cwde
and
jg
mov
nop
and
add
fsubr
jo
addr16
inc
mov
mov
pop
div
imul
popf
add
in
pop
inc
cld
(bad)
mov
lock
adc
test
in
jo
or
daa
inc
xor
popa
(bad)
test
ins
das
mov
push
cwde
hlt
into
dec
or
(bad)
lods
push
pusha
cmp
pop
cmp
aad
jge
outs
push
imul
inc
ret
addr16
dec
jl
iret
and
stos
cs
lahf
inc
hlt
mov
jl
or
imul
adc
out
jle
inc
ja
imul
mov
or
fmul
lea
sti
dec
jle
or
xchg
pop
dec
pop
mov
push
aad
and
add
mov
cmp
xchg
out
mov
push
loopne
adc
ins
int3
ins
add
lock
rcl
js
xor
sub
mov
mov
jne
push
mov
mov
daa
cwde
fst
test
and
dec
movs
mov
leave
mov
lods
jne
mov
in
dec
rcl
fwait
retf
iret
mov
shl
cmp
mov
les
(bad)
xchg
sahf
pop
aad
or
adc
cmp
scas
cli
cli
pushf
leave
sub
sub
ficomp
xchg
adc
ret
aad
cmp
jmp
inc
mov
aad
lock
arpl
push
mov
(bad)
jmp
imul
pusha
lock
mul
xlat
das
sub
pop
in
mov
stos
inc
ds
push
in
pop
sub
pop
push
mov
dec
mov
jecxz
aad
aaa
shl
cmps
push
repnz
out
leave
rcl
stc
mov
in
sbb
mov
ret
or
fwait
sbb
cmp
jb
push
ins
and
sbb
lahf
test
je
aas
xchg
pop
push
out
ins
mov
les
add
sub
pop
test
test
or
mov
xchg
push
jo
push
scas
xchg
mov
mov
mov
loope
mov
jmp
ja
icebp
shl
ret
aas
dec
push
cdq
adc
add
push
sahf
inc
pop
jl
ret
adc
or
and
cmp
xlat
mov
jmp
out
inc
pop
imul
daa
test
movs
sti
cmp
mov
sbb
push
sub
lea
outs
xchg
pop
int3
mov
push
std
bound
push
(bad)
push
imul
test
and
sub
addr16
stos
xor
jmp
xor
xchg
push
leave
pop
adc
inc
arpl
data16
jecxz
jbe
retf
inc
or
mov
(bad)
xchg
pusha
xchg
adc
(bad)
or
data16
aas
jne
hlt
rol
aaa
loopne
inc
jmp
rcl
push
or
es
lea
cmps
sti
lahf
(bad)
(bad)
sbb
int3
icebp
push
cld
mov
jnp
dec
les
cwde
adc
out
ficomp
mov
lods
movs
nop
dec
loop
xchg
mov
adc
test
fwait
sahf
or
jbe
idiv
dec
neg
inc
sub
cmc
rcr
add
ja
or
mov
sub
and
dec
inc
push
sub
mov
inc
dec
aas
ins
loop
cld
xchg
mov
(bad)
sub
add
sub
out
aad
hlt
scas
mov
(bad)
jmp
fcomp
mov
test
push
sbb
push
pop
or
xchg
or
outs
cmp
push
mov
enter
mov
add
(bad)
xchg
dec
xchg
in
cmp
sar
xor
xchg
mov
dec
rcr
dec
mov
test
cmp
push
jne
rcl
mov
pop
fwait
pop
jno
jae
mov
rcr
dec
ins
out
fcmovnb
sbb
rcr
(bad)
lock
mov
dec
repnz
mov
or
fbld
out
sbb
jae
fwait
mov
(bad)
mov
jp
repz
data16
xchg
repz
mul
add
push
fs
imul
jne
pop
mov
inc
push
add
inc
mov
push
retf
lods
dec
cwde
add
jle
aaa
fldenv
mov
dec
mov
adc
mov
or
(bad)
fsubr
lods
retf
fisubr
in
stos
rcl
or
and
push
iret
jbe
in
(bad)
jnp
push
(bad)
dec
ja
(bad)
popa
(bad)
xchg
cmp
scas
jl
daa
and
mov
sub
(bad)
adc
push
pop
fnstenv
cwde
mov
xor
fcom
dec
bound
xchg
leave
jno
out
inc
mov
ss
sub
pop
add
cmp
movs
sub
daa
jmp
stos
inc
adc
dec
mov
lock
retf
dec
dec
sahf
das
mov
in
inc
(bad)
stos
xor
push
dec
(bad)
iret
inc
pushf
mov
or
pop
loope
test
out
xor
xchg
add
adc
mov
(bad)
mov
sub
or
sub
mov
pop
or
sub
int
dec
jnp
jmp
dec
in
xchg
fwait
ins
std
mov
mov
sbb
mov
jno
mov
pop
fiadd
mov
jge
or
cmp
add
sbb
cmp
push
mov
jo
cwde
sbb
not
add
inc
pop
int3
shl
pop
inc
in
shl
pop
(bad)
xlat
pop
rcr
int
addr16
jg
sub
sub
fist
push
into
sub
and
ins
fstp
pop
pop
jnp
sub
bound
sbb
dec
loope
nop
jp
xor
mov
test
jecxz
jnp
jno
enter
fcomp
mov
(bad)
push
mov
xor
sub
ror
sar
dec
sbb
into
fwait
add
loop
pop
and
sbb
paddsw
cwde
adc
push
les
sti
call
jne
loope
push
xchg
pop
xchg
mov
retf
ret
add
aad
dec
jns
jno
cmp
pop
repz
sbb
icebp
mov
inc
(bad)
mov
(bad)
jle
xchg
popf
pushf
aad
pop
adc
and
retf
inc
push
lahf
loopne
mov
in
or
scas
daa
pop
sti
cmp
repz
call
cmp
or
dec
dec
cmp
aaa
xchg
adc
and
cld
retf
dec
push
sub
push
fs
inc
test
xchg
jno
pop
jl
add
mov
enter
mov
jae
imul
pop
xlat
lods
pop
test
in
add
push
rol
sti
sub
hlt
push
gs
xchg
call
cmp
les
or
sbb
loopne
dec
jmp
adc
sbb
pop
jg
les
mov
(bad)
fdiv
fistp
add
scas
int3
cmps
test
and
enter
sbb
aad
mov
sbb
jns
leave
fs
push
in
cdq
repnz
add
scas
dec
sbb
cmp
std
dec
sbb
mov
push
out
inc
aam
std
setns
mov
xor
cld
pop
pop
arpl
xor
inc
gs
mov
rcl
or
stos
dec
retf
adc
mov
mov
loopne
mov
fistp
ficom
mov
test
shl
mov
add
hlt
icebp
mov
lock
cwde
inc
loopne
and
cmp
sbb
and
jmp
jle
mov
cwde
cwde
sbb
inc
nop
xlat
pop
mov
pusha
pop
mov
xor
mov
or
inc
pop
jne
popa
pop
aam
and
aas
cmp
add
movzx
mov
clc
daa
or
and
adc
mov
push
cmp
mov
add
bsr
lahf
ds
adc
add
add
add
or
push
lahf
ret
stos
push
inc
ja
fcmovbe
pop
adc
lock
dec
or
popf
mov
cdq
cmp
cld
dec
adc
and
xor
in
push
push
retf
aad
outs
xor
add
mov
add
fcom
int
cmp
nop
test
sub
xor
ins
out
pop
adc
mov
pop
xchg
cmp
es
cdq
push
mov
adc
jnp
xor
cmc
pop
retf
push
xchg
mov
jecxz
idiv
jl
jns
jns
ror
sbb
(bad)
sbb
loopne
and
fidiv
mov
jl
loop
jge
xor
and
js
ss
cs
out
stos
daa
jmp
jp
or
sbb
or
rcl
rcl
inc
fst
push
sub
adc
mov
mov
xchg
sbb
push
cmp
inc
add
loop
sub
mov
mov
pusha
xchg
in
dec
add
jo
push
push
cmp
pushf
xchg
cdq
mov
mov
xchg
pop
or
(bad)
int3
push
imul
xchg
mov
adc
enter
or
cs
test
xchg
cmp
inc
xchg
sbb
xor
ret
std
lock
add
clc
shr
mov
dec
xor
pop
jle
adc
inc
(bad)
in
mov
jg
mov
bound
or
xor
cdq
imul
mov
loopne
and
dec
xor
arpl
xchg
jae
mov
dec
scas
sub
mov
movs
inc
mov
mov
mov
push
xchg
test
xor
mov
mov
mov
adc
ins
(bad)
(bad)
fistp
aad
data16
jbe
dec
xlat
add
ret
add
pop
jle
xchg
pop
es
mov
push
push
in
xor
mov
push
pop
sbb
sbb
in
mov
push
clc
ffree
jmp
movs
js
loope
adc
jp
sahf
cwde
inc
pop
cld
(bad)
cmp
dec
mov
jge
stos
jge
mov
mov
jo
shr
sbb
aad
in
not
lds
sbb
popa
inc
cli
and
inc
push
(bad)
imul
lahf
add
shl
punpckhdq
xor
jg
js
mov
pop
iret
cs
scas
out
dec
mov
dec
adc
push
cmps
stos
pop
enter
rcl
int3
push
pop
rcr
imul
inc
push
sub
movs
push
data16
sbb
add
test
bound
retf
aas
or
xor
push
lahf
aad
xchg
xchg
xchg
xlat
inc
jmp
stos
sub
xor
pop
jne
pop
fldenv
or
int3
add
and
mov
dec
ret
push
ret
push
or
jge
pushf
xchg
mov
cmp
mov
jae
mov
sbb
jmp
sar
dec
(bad)
movs
(bad)
enter
sbb
call
mov
sub
mov
mulps
hlt
ret
or
mov
jmp
xchg
jno
mov
out
sbb
cli
int3
sbb
pushf
call
cmp
dec
es
add
xchg
push
enter
push
lahf
dec
or
(bad)
bound
mov
push
cld
hlt
inc
fcmovnu
and
push
xchg
fimul
out
pop
es
pusha
enter
mov
push
push
rcr
ja
dec
xchg
int
scas
lock
mov
(bad)
push
or
cwde
xlat
or
btc
xor
add
mov
sub
jno
stos
mov
popa
dec
ins
adc
(bad)
retf
mov
retf
jp
shr
popa
and
mov
test
pop
mov
push
mov
ins
sbb
rcl
inc
mov
aas
add
clc
push
mov
icebp
in
or
(bad)
aaa
inc
fild
push
inc
iret
jmp
cmp
or
and
mov
lods
jnp
pop
in
mov
inc
in
ss
and
call
xchg
das
rcr
pop
dec
arpl
inc
outs
mov
mov
sbb
cdq
dec
fs
push
shl
call
ja
pop
pop
lea
mov
fld
xchg
sub
add
or
jnp
or
nop
aaa
sbb
dec
sbb
mov
pushf
dec
pop
pusha
je
fbld
xchg
call
in
mov
xor
xor
mov
pop
xchg
loope
pop
pop
mov
fmul
call
mov
add
dec
sub
fist
cwde
mov
mov
pop
test
pop
sbb
popa
mov
and
sub
fadd
ss
add
or
loope
mov
adc
dec
clc
js
mov
ficom
loop
fld
notrack
dec
and
(bad)
rcr
jmp
int3
popa
mov
gs
sub
lahf
call
jnp
pop
retf
xchg
lods
mov
push
imul
outs
mov
sub
jae
mov
fimul
inc
add
xor
vpsubb
or
cdq
mov
sbb
loope
pop
adc
sub
or
inc
fnstenv
inc
push
loope
xchg
mov
gs
inc
shl
mov
mov
push
xchg
adc
jl
sbb
fcmovu
sar
out
in
cmp
pop
pop
pop
stc
add
dec
shl
xor
mov
lods
sbb
sbb
loop
movs
rcl
ins
int3
and
mov
mov
int3
add
dec
pop
inc
mov
shr
or
sub
es
in
outs
jns
clc
pop
xchg
jo
push
sub
je
loopne
das
shl
inc
int3
xor
fldcw
cmp
dec
test
push
jmp
mov
lea
jno
sub
xchg
jp
cmp
fdivr
outs
sub
enter
add
jg
mov
or
enter
cmp
push
enter
imul
aam
aaa
pop
jnp
aaa
sti
loopne
xchg
mov
mov
imul
sbb
push
daa
mov
sahf
jg
aaa
add
adc
inc
mov
cdq
push
sub
jnp
loop
jb
pop
adc
mov
mov
lea
mov
dec
fucomi
arpl
add
lods
adc
sbb
mov
and
sub
pop
dec
stc
fcom
pop
cmp
icebp
enter
jmp
and
mov
xchg
fbstp
js
jnp
popf
and
scas
sbb
inc
or
dec
(bad)
stos
push
sahf
daa
scas
inc
adc
inc
mov
lods
cld
ret
in
mov
mov
pop
jge
sub
fwait
push
into
sub
cmp
in
pop
mov
dec
mov
sub
push
not
and
loopne
ret
lea
inc
jle
ins
cdq
push
dec
outs
cld
hlt
ins
inc
push
es
mov
mov
mov
leave
jecxz
movs
and
jecxz
add
xchg
pop
push
jmp
dec
mov
popf
push
fidiv
(bad)
nop
or
mov
and
test
sub
(bad)
xchg
push
xchg
cmp
(bad)
or
cs
sub
dec
std
in
jle
mov
mov
push
inc
enter
xchg
mov
cwde
out
pop
int3
loop
and
mov
in
sbb
cmp
and
mov
mov
add
mov
daa
sbb
mov
and
xor
(bad)
mov
xlat
inc
sbb
std
and
or
mov
aaa
mov
aam
jmp
clc
inc
cmp
(bad)
fcomp
sub
mov
xlat
pushf
shl
add
fnstsw
adc
fst
pop
jecxz
(bad)
retf
imul
ds
jg
pop
sbb
push
dec
push
getsec
aam
lock
mov
push
fcmovb
adc
in
out
mov
jo
pop
(bad)
clc
xchg
pushf
xor
xor
mov
mov
popf
test
jae
and
icebp
out
jnp
test
and
mov
shr
aam
jno
lds
ror
test
mov
outs
sar
inc
sub
jl
cmp
ins
shl
xor
xchg
and
(bad)
and
push
cmp
in
call
out
pop
dec
pop
or
out
nop
push
push
(bad)
movs
pop
jmp
rcr
add
jge
push
xor
mov
out
jbe
dec
push
das
pop
mov
push
pop
jge
xor
les
idiv
push
dec
mov
mov
pop
leave
jmp
test
outs
dec
(bad)
scas
loopne
pop
sub
add
add
sub
iret
push
movs
(bad)
mov
mov
sub
mov
js
frstor
inc
imul
jbe
push
cmp
mov
or
(bad)
movs
push
rol
dec
push
(bad)
add
push
in
mov
leave
shr
lock
jns
inc
loopne
push
add
fs
xor
cmp
xchg
xor
jecxz
ja
xchg
add
stos
xlat
xchg
cld
scas
mov
pop
(bad)
in
mov
idiv
adc
(bad)
sub
mov
pop
daa
enter
or
push
sub
pcmpeqw
bsf
push
shl
jle
add
sbb
dec
xchg
pusha
ins
fadd
stc
enter
inc
pop
dec
jecxz
mov
popf
cmp
(bad)
ror
dec
or
sub
dec
mov
or
neg
(bad)
aaa
mov
push
sub
xchg
fadd
push
mov
arpl
push
dec
push
cmc
mov
ds
jb
jb
or
sub
dec
jae
out
push
xchg
sub
ins
arpl
(bad)
sbb
cwde
sbb
pop
(bad)
aaa
mov
push
sub
jmp
movs
int3
mov
popa
loopne
jno
cmps
mov
adc
pop
xor
add
pop
sti
mov
lds
ss
ret
out
or
pop
mov
fwait
xchg
sub
add
mov
jg
mov
dec
sub
aas
loopne
gs
add
(bad)
sti
pushf
icebp
cmp
add
xor
sbb
sbb
shr
sub
mov
jo
fucomi
and
adc
iret
push
sub
mov
shr
outs
leave
jmp
add
xor
int3
arpl
int3
inc
fwait
mov
pop
inc
and
and
pop
lock
out
pop
iret
clc
cwde
sbb
stos
cmp
fdivr
mov
out
pop
xor
push
jnp
sbb
pop
push
lods
pop
adc
mov
mov
mov
test
sub
push
pop
js
sbb
mov
mov
neg
add
mov
push
xchg
dec
mov
aaa
fmul
gs
jp
push
popa
adc
in
push
dec
or
hlt
jmp
and
push
sub
inc
imul
cli
push
and
and
add
add
dec
cmp
ror
push
ss
add
mov
nop
pop
sar
pop
or
adc
mov
jo
outs
nop
out
push
xlat
cld
xor
pop
aaa
fist
pop
xor
cmp
(bad)
lods
push
xchg
ja
lock
and
xchg
addr16
scas
fcomi
inc
out
jmp
pop
(bad)
mov
aam
and
mov
cmc
cmps
mov
mov
mov
sbb
add
xchg
xchg
jbe
dec
cmps
mov
and
fistp
aam
add
jae
dec
mov
push
mov
push
push
jmp
shl
stos
push
jb
mov
jle
aad
aam
cmp
push
and
push
fnsetpm(287
fstp
test
xor
xor
lahf
push
mov
xchg
inc
loope
add
add
inc
and
retf
xor
dec
mov
aas
dec
lea
cdq
push
cmp
out
nop
and
mov
stos
dec
add
fisttp
lds
addr16
ss
mov
scas
mov
jb
add
ror
das
in
mov
adc
rcr
mov
mov
xchg
mov
mov
ins
pop
jbe
fild
ja
fwait
je
adc
pushf
xor
enter
aam
xor
enter
cwde
pop
(bad)
retf
xchg
das
jg
jne
mov
aam
in
mov
lock
xor
dec
(bad)
(bad)
retf
out
inc
mov
cld
push
movs
imul
loope
mov
arpl
js
adc
ds
not
(bad)
pop
ret
out
test
daa
in
xchg
fbld
mov
mov
pop
out
lock
(bad)
leave
pop
jne
nop
pop
in
mov
stos
and
sub
scas
fs
js
sbb
push
cld
sahf
(bad)
hlt
mov
push
mov
nop
sub
test
shr
or
lahf
rcl
jo
fsubrp
pushf
and
inc
aas
enter
aad
loop
push
jl
mov
shl
adc
pushf
imul
mov
stc
dec
and
mov
rcr
xor
mov
mov
adc
fwait
add
cmc
push
pop
imul
rcl
or
sub
lahf
cli
mov
(bad)
(bad)
nop
sub
xor
pop
add
xchg
mov
lods
mov
sub
int
in
pushf
aam
in
cmp
shr
(bad)
aam
hlt
jns
out
lock
pop
dec
scas
in
fisttp
sbb
mov
test
xchg
push
push
jnp
mov
arpl
pop
dec
mov
test
pop
xchg
gs
pop
xor
pop
mov
dec
inc
ins
mov
cs
pushf
repnz
shr
add
mov
out
mov
cdq
icebp
nop
xchg
mov
cmp
mov
int3
pop
push
movs
mov
push
aad
mov
sahf
adc
push
mov
mov
test
cmp
pop
mov
mul
mov
lahf
mov
f2xm1
(bad)
mov
pop
xchg
nop
mov
add
scas
xlat
ss
or
inc
xchg
fbld
fisub
xlat
sub
jge
iret
xor
lock
stc
ja
ds
shl
xor
mov
vcvtdq2ps
sbb
stos
test
je
rol
jnp
ins
test
mov
mov
ja
imul
inc
gs
in
mov
add
scas
cmp
mov
xor
int3
pop
inc
mov
mov
adc
dec
pop
sahf
imul
fwait
lock
stc
add
adc
xchg
mov
ja
push
or
mov
adc
(bad)
add
and
pop
sbb
or
dec
inc
cwde
mov
(bad)
in
pop
or
scas
lahf
add
cs
fbld
loope
sub
adc
and
into
mov
shl
iret
jns
push
sbb
sar
pop
(bad)
fld
cmp
mov
add
mov
ss
xchg
shl
mov
xlat
xor
mov
sub
xchg
xor
popa
mov
bound
neg
push
push
dec
xor
(bad)
outs
and
pop
test
xchg
lahf
jge
shl
clc
aam
inc
mov
push
idiv
fisttp
sbb
pop
test
call
nop
cmp
mov
das
mov
add
push
call
xchg
and
dec
push
cmp
mov
mov
jmp
mov
sbb
scas
and
aaa
shl
dec
mov
dec
jno
inc
aam
push
fisubr
and
ficom
pop
sti
mov
mov
adc
aaa
nop
xor
jmp
imul
loope
lods
nop
sti
xlat
mov
mov
int
jmp
cmps
inc
loop
inc
mov
loop
(bad)
sub
jmp
add
add
jb
fidiv
xor
test
dec
dec
push
shl
jge
aam
sub
add
cmp
mov
mov
pop
frstor
daa
jne
(bad)
push
call
lods
dec
fdiv
stos
fistp
mov
mov
pop
imul
stos
lds
ja
xor
fld
lods
xchg
pop
push
sbb
mov
xchg
hlt
jb
imul
jp
mov
xchg
adc
das
inc
adc
jne
nop
or
and
dec
xor
(bad)
ret
jnp
jbe
mov
mov
or
movs
dec
out
xor
(bad)
inc
mov
fst
push
mov
int3
pushf
cmps
and
pop
push
or
sar
ins
loope
mov
mov
inc
lock
fisub
dec
popf
dec
sub
aam
sbb
retf
ins
mov
dec
push
hlt
rcr
mov
and
xchg
scas
pop
xchg
inc
push
(bad)
add
mov
xor
add
sar
nop
jno
cmp
adc
jl
fisub
sbb
pop
xor
sub
gs
xor
fcomp
add
sub
ficomp
fsubrp
xchg
and
mov
in
test
sbb
xor
jmp
cdq
push
outs
inc
pop
je
inc
scas
cdq
pop
xchg
sub
push
lock
(bad)
int
fisubr
pop
and
push
loop
jbe
push
ret
pop
(bad)
movs
pop
iret
loopne
mov
sub
xor
out
sahf
pop
adc
das
std
sar
pop
lock
scas
inc
pop
mov
retf
xchg
(bad)
dec
push
hlt
pushf
es
pop
std
sbb
scas
mov
pop
push
xchg
popa
les
inc
lods
loopne
mov
fs
movs
sbb
mov
(bad)
push
mov
stos
(bad)
mov
setbe
dec
outs
mov
sub
pop
mov
xchg
ror
dec
mov
ins
adc
push
cdq
std
mov
fbld
mov
mov
sbb
popa
adc
lods
shl
dec
adc
dec
les
xor
xor
test
iret
pusha
sbb
out
mov
scas
pop
inc
fild
test
sbb
jmp
mov
sti
dec
into
dec
in
jecxz
in
sahf
xor
dec
icebp
xchg
adc
dec
adc
(bad)
cmp
ins
aad
mov
jp
cmp
out
pop
idiv
or
pop
sub
mov
inc
or
mov
not
movs
aad
bnd
xchg
sti
hlt
popa
mov
call
jg
pop
xchg
bound
push
sbb
scas
sub
(bad)
pop
adc
je
in
popf
mov
(bad)
mov
or
sbb
pop
loopne
pop
cdq
and
xchg
test
dec
jno
jmp
loop
les
sub
jecxz
inc
int
pop
(bad)
jg
into
int3
dec
mov
out
pop
idiv
dec
into
xor
cdq
cmp
leave
pop
dec
mov
in
stos
lods
mov
inc
jae
sub
mov
in
push
push
outs
sar
test
repnz
ror
add
outs
das
mov
add
jmp
ss
call
dec
and
add
push
dec
mov
inc
and
mov
pop
fs
outs
mov
imul
lods
mov
mov
push
imul
mov
pop
gs
adc
xchg
shl
jo
cmp
xchg
sub
outs
inc
clc
test
fwait
adc
sbb
dec
stos
jmp
jge
xchg
sub
fs
pop
xchg
call
cmp
sbb
mov
push
imul
push
scas
jnp
sub
mov
cli
jmp
(bad)
dec
stos
mov
ret
lods
sub
imul
xor
add
in
mov
sbb
inc
pop
daa
and
push
mov
loop
and
outs
xlat
test
xlat
popa
fdivr
push
cmp
loopne
sbb
sbb
(bad)
fisttp
std
fcomp
imul
hlt
icebp
sub
mov
fcomi
jl
sbb
(bad)
loop
aaa
mov
push
push
dec
ins
mov
dec
fwait
sub
loop
mov
retf
jo
pop
mov
adc
call
and
movs
mov
(bad)
iret
lds
push
adc
mov
pop
sub
mov
cdq
pop
mov
and
cmp
mov
dec
dec
mov
js
addps
test
iret
add
mov
push
jecxz
or
inc
out
mov
lahf
enter
push
sbb
xchg
popa
inc
inc
jmp
sbb
push
(bad)
outs
pop
and
sbb
inc
movs
inc
pop
push
cmp
imul
das
enter
outs
out
push
stc
lahf
xchg
cmp
inc
push
mov
dec
bound
mov
xchg
mov
inc
mov
out
jle
sbb
dec
sbb
je
sbb
xor
mov
cmp
mov
dec
mov
test
out
aad
int3
mov
dec
mov
mov
pop
xchg
mov
jb
pop
out
sub
in
push
push
push
add
in
ins
pushf
sahf
stos
sbb
xor
icebp
dec
push
(bad)
xchg
test
fdiv
nop
add
xchg
inc
rcl
dec
lods
push
mov
and
in
jge
in
jae
adc
mov
enter
out
sbb
or
pop
in
xchg
dec
ficom
daa
imul
pop
aam
jg
push
sub
sub
neg
pop
mov
cmc
and
xchg
push
stos
push
icebp
add
sbb
jg
test
sub
fmul
push
and
inc
and
sbb
xor
inc
jae
scas
or
inc
and
or
or
mov
cmp
mov
out
stos
push
xor
dec
in
data16
sbb
movs
mov
mov
and
movs
arpl
icebp
dec
fldenv
repz
mov
outs
pop
push
fwait
sub
jne
jnp
scas
aam
push
das
jmp
dec
mov
jae
rcl
add
xor
xchg
adc
fistp
fwait
loop
cmps
xchg
pop
dec
call
cmp
push
mov
je
(bad)
pop
repz
inc
lds
popa
lock
aam
mov
dec
loopne
ret
sbb
addr16
aaa
cld
dec
arpl
std
pop
mov
(bad)
aam
outs
jp
mov
or
xor
cmp
push
xchg
xlat
push
stos
sahf
(bad)
pop
cld
les
sbb
cld
push
jo
inc
das
rcl
jle
adc
daa
nop
sbb
or
xchg
mov
loope
sbb
jmp
jge
inc
xlat
cwde
cdq
or
xor
(bad)
pop
leave
ins
lods
push
push
lods
stc
test
int3
jb
outs
mov
add
ins
inc
pop
jecxz
dec
mov
inc
lock
cmp
or
fiadd
out
dec
int3
repz
pop
inc
jne
mov
xchg
and
movs
outs
push
ds
nop
shr
ds
jle
push
mov
and
std
pop
(bad)
pop
pop
pop
xor
pop
inc
push
mov
mov
adc
or
in
jecxz
add
mov
popf
pop
fcmovbe
add
add
adc
mov
out
pop
inc
or
retf
fldcw
fdiv
fisttp
repz
jnp
mov
pop
icebp
test
arpl
pop
push
lock
int
mov
mov
cdq
test
pop
mov
dec
pop
dec
pop
popf
adc
aad
dec
out
mov
neg
dec
(bad)
cmp
pop
lea
sahf
or
cld
xchg
pop
cwde
push
or
pop
fsubr
mov
sbb
std
fidiv
add
cmp
push
out
lods
loopne
xor
dec
cld
inc
cli
jno
call
mov
adc
fimul
sub
adc
ins
iret
pop
fnstcw
test
adc
mov
add
sbb
or
mov
es
je
jmp
jg
xor
ins
out
or
sbb
fcomp
dec
sub
lds
nop
cmp
scas
iret
or
call
test
les
or
mov
aas
push
out
and
jecxz
stc
and
not
xchg
add
jl
mov
xchg
pop
inc
cmps
xor
jle
popa
std
pusha
add
aam
scas
(bad)
push
mov
(bad)
jne
pushf
xor
add
inc
ret
adc
mov
or
cmp
pop
and
stos
imul
jb
dec
xor
out
push
sbb
rol
jmp
push
mov
ins
out
adc
push
dec
rol
jge
jno
cmp
cmp
mov
mov
mov
adc
retf
dec
jne
push
cmpxchg
jae
lock
jge
lds
ins
push
mov
scas
jnp
jae
lds
rol
shl
push
sub
mov
cmp
mov
add
xchg
js
mov
sahf
in
clc
pop
cmp
sahf
pushf
fild
sub
mov
xchg
sbb
sbb
mov
(bad)
mov
mov
push
out
pop
out
jae
lock
outs
sub
clc
or
aam
(bad)
fdivr
xor
in
push
and
jmp
pop
add
jl
or
jns
dec
jmp
and
dec
sbb
pushf
adc
idiv
push
pop
scas
popf
mov
sbb
sbb
push
stc
sahf
dec
leave
scas
jl
jge
dec
popa
xchg
add
(bad)
sbb
jnp
out
add
add
dec
test
(bad)
neg
repnz
mov
sub
dec
jno
out
sti
and
aad
cmp
or
clc
fisubr
mov
push
dec
pop
mov
add
scas
aad
or
cs
jmp
push
jns
lods
and
sar
lahf
dec
xchg
push
cmps
xchg
xor
fwait
jmp
test
in
pop
xlat
ja
fldcw
and
rol
pushf
mov
mov
imul
lods
cli
mov
jle
dec
push
movs
test
xchg
mov
jnp
and
adc
jg
lock
(bad)
int
and
mov
sbb
mov
xlat
push
test
jmp
pop
dec
adc
jo
fmul
add
call
mov
rcr
inc
cmp
fsubr
ins
in
dec
jg
int3
xor
dec
mov
push
sub
scas
xor
mov
xchg
sub
cmp
mov
ret
inc
les
fs
aad
fst
lds
inc
push
retf
ret
xchg
or
fcomp
push
adc
mov
lds
test
sub
retf
popf
xor
out
fsub
fnstsw
add
sub
sub
hlt
mov
sar
and
sbb
or
inc
ror
in
cmc
nop
in
dec
jbe
sub
imul
xchg
int
push
cs
stos
push
cmp
fsubr
mov
jnp
pop
(bad)
out
xchg
dec
push
mov
xor
lahf
xor
in
pop
cli
aaa
and
mov
push
xchg
mul
pop
(bad)
hlt
rol
jne
jmp
push
xchg
pop
mov
mov
mov
das
lods
add
and
(bad)
push
pop
sub
mov
repnz
inc
jo
in
into
inc
int
mov
les
pushf
jmp
in
imul
mov
out
stos
inc
dec
std
mov
inc
xchg
sbb
push
mov
or
pop
je
dec
or
mov
sub
mov
outs
js
sub
xor
pop
in
dec
rcl
in
pop
mov
dec
mov
icebp
jp
mov
xor
jl
jbe
sbb
aad
push
cdq
cld
dec
mov
and
mov
pop
leave
sbb
xor
outs
call
dec
inc
inc
cs
imul
mov
daa
ret
inc
or
fst
pushf
jnp
outs
cmp
dec
fiadd
imul
rcl
mov
fcmovu
mov
stc
jmp
jae
mov
xor
mov
or
push
dec
inc
aad
out
je
adc
idiv
push
test
xor
xor
dec
gs
sti
push
mov
jg
sahf
retf
push
inc
popf
add
rol
cdq
test
ficom
daa
es
mov
xchg
shl
mov
xchg
and
push
xchg
aaa
adc
sbb
sar
dec
mov
daa
cmp
lds
sbb
stos
out
ds
sbb
call
mov
xchg
or
rol
mov
jae
rol
aad
fwait
mov
push
sbb
xchg
std
enter
or
lods
icebp
fst
popf
xor
dec
stos
in
dec
inc
aaa
in
retf
xchg
in
sbb
mov
jmp
aaa
adc
sub
test
cmp
mov
or
test
adc
jae
bound
sahf
fdivr
fldenv
int3
push
movs
adc
xor
sub
loopne
rcr
mov
aad
cmps
ins
cwde
sub
mov
mov
in
mov
push
jmp
xchg
fwait
sbb
shr
sti
and
imul
dec
pop
cmc
pop
cdq
push
inc
mov
sbb
int3
mov
cmp
in
(bad)
mov
xor
add
ret
and
sub
push
add
sub
call
(bad)
push
sub
bswap
pop
retf
mov
repnz
jo
test
pop
aad
mov
cmps
pop
in
js
ret
int
mov
sbb
bound
movs
xchg
out
ins
cmp
in
call
mov
adc
mov
add
mov
sub
scas
ficomp
aaa
pop
loopne
inc
mov
pop
imul
retf
mov
dec
sbb
xor
ror
lahf
popf
enter
loopne
test
shl
xchg
jne
rcr
jg
push
clc
fimul
xchg
pushf
jge
mov
sti
fld
(bad)
aad
xor
fldenv
scas
cmps
adc
sbb
aam
pop
call
sub
push
mov
or
int3
push
inc
dec
add
or
pop
add
movs
dec
ror
nop
iret
cld
mov
pushf
dec
call
cmp
ds
loopne
test
xchg
popf
dec
out
jo
mov
bound
jmp
add
inc
cmc
push
rcl
(bad)
pop
push
ja
and
idiv
mov
mov
(bad)
lea
sbb
push
adc
xchg
movs
inc
jmp
xchg
inc
pop
or
dec
push
inc
ins
cmp
rcr
retf
retf
idiv
mov
fisttp
push
add
int3
adc
jl
enter
das
or
popf
(bad)
jp
mov
movs
sub
cmps
fdivr
hlt
lds
push
addr16
and
(bad)
sub
inc
daa
push
pop
test
ins
and
js
sar
and
sbb
scas
and
cwde
ret
arpl
shl
jno
(bad)
jmp
xor
xor
add
mov
mov
pop
mov
xlat
adc
lock
mov
mov
leave
jmp
je
jbe
xor
pop
aaa
data16
cwde
aam
push
sbb
mov
adc
test
stos
mov
ins
fxam
xchg
xchg
or
pushf
push
add
push
sub
xchg
(bad)
icebp
dec
and
imul
(bad)
push
jnp
(bad)
adc
popf
popf
(bad)
enter
outs
dec
popa
popf
fild
aas
or
push
sub
jns
pusha
out
cmps
push
xchg
fdiv
setg
cmp
cdq
adc
neg
movs
xor
inc
cmp
mov
outs
push
mov
jge
(bad)
add
loop
jbe
sub
mov
test
mov
add
data16
jb
mov
fcomp
mov
mov
cmp
pop
jne
jp
iret
mov
mov
daa
retf
xor
add
xchg
ror
mov
add
inc
popa
int3
pop
pop
out
sub
les
sbb
int
mov
xchg
mov
test
sar
bound
mov
shl
add
rcl
xchg
sub
test
push
push
out
mov
jge
mov
mov
inc
ret
xchg
dec
lock
jp
test
or
pop
cwde
fadd
mov
cmp
pop
test
or
(bad)
addr16
rol
add
pushf
pop
das
mov
mov
or
sbb
ret
lahf
push
out
dec
cmp
xchg
pop
xchg
test
je
lods
cmp
ja
mov
sbb
sbb
ret
push
mov
cmp
xchg
pushf
mov
xchg
les
xlat
dec
aam
jmp
cmp
int3
aam
xchg
leave
into
mov
or
int
arpl
xlat
pop
cmp
add
push
inc
push
pop
imul
add
mov
rcr
jnp
jb
loope
arpl
mov
pop
imul
adc
les
pop
call
inc
jecxz
sahf
jmp
in
arpl
loop
(bad)
fdivr
sbb
push
loopne
inc
and
xor
or
out
dec
addr16
fidiv
ins
dec
daa
idiv
pop
mov
fiadd
enter
lea
ins
fidivr
sub
rcr
sbb
sub
cdq
jmp
cmp
xor
and
(bad)
cdq
in
push
cwde
mov
loopne
mov
in
push
fwait
jg
sahf
pop
sub
shl
xchg
sbb
aaa
shl
mov
cmps
fwait
mov
movs
ins
frstor
dec
clc
sub
inc
enter
stc
push
sub
xchg
pop
inc
test
mov
or
clc
(bad)
in
shl
jns
inc
jne
mov
dec
out
in
ror
jns
add
xor
shl
pop
sbb
pop
jge
mov
enter
daa
(bad)
in
cdq
push
movs
jae
out
mov
pop
lock
sub
test
mov
inc
pop
(bad)
xchg
addr16
cmp
jecxz
sbb
test
ins
iret
fwait
test
cmp
inc
push
rcl
es
mov
fcomp
lods
loop
mov
outs
mov
rol
sub
clc
inc
adc
ja
dec
outs
xchg
js
jge
stos
rcl
pop
push
push
stos
xchg
sub
mov
xchg
std
out
or
dec
dec
icebp
mov
dec
and
dec
pop
sbb
stos
adc
shr
mov
ds
jecxz
add
mov
push
mov
dec
sahf
sub
pop
nop
neg
lods
outs
or
fcmovnbe
rcr
jg
sub
mov
mov
lods
xchg
xor
fsub
adc
xchg
adc
cmp
mov
pop
push
stos
mov
or
jl
jg
inc
cld
gs
push
fs
ja
(bad)
jno
repz
or
sub
sub
xchg
(bad)
fcomp
repnz
shl
xchg
cld
fmul
push
pop
dec
dec
pop
cmp
ds
scas
or
xor
ficomp
scas
push
cdq
mov
xchg
loop
in
push
lods
fimul
push
jmp
movs
(bad)
shl
xor
and
gs
push
adc
lock
xor
int3
or
xchg
mov
mov
arpl
pop
cmp
mov
dec
into
dec
enter
sub
push
(bad)
frstor
lock
cmp
ja
jge
xchg
lods
mov
push
xchg
js
cdq
out
sbb
mov
cs
sbb
aaa
xor
(bad)
lds
mov
dec
pop
int3
xchg
nop
push
adc
add
push
or
xchg
call
loop
iret
in
pop
out
and
pop
mov
rcr
pop
inc
or
cs
cmp
jp
(bad)
sbb
ffree
push
or
mov
das
and
mov
mov
shl
mov
jmp
out
add
mov
jbe
pop
ror
out
popa
push
mov
xchg
out
hlt
sbb
pop
test
add
fldenv
sub
add
clc
jne
cwde
shl
and
movs
dec
pop
mul
iret
js
inc
pushf
inc
sub
sub
rol
rcl
adc
mov
ins
(bad)
scas
es
stos
jmp
(bad)
push
pop
pop
stos
mov
fstp
(bad)
div
jmp
leave
push
hlt
xchg
mov
pop
cmp
jge
dec
push
push
ins
div
sbb
adc
daa
arpl
push
sti
sbb
pop
pop
retf
movs
pushf
pop
ror
xor
cdq
sub
inc
ss
xchg
outs
xlat
sub
pop
xor
pushf
fadd
sbb
pop
jp
push
push
dec
inc
cmc
loope
and
clc
cmp
or
jp
push
addr16
cs
jecxz
push
or
mov
xchg
xchg
les
aaa
push
xchg
hlt
in
shr
xchg
fisub
adc
int3
and
popf
dec
inc
sub
stos
cwde
js
jbe
sub
je
push
push
fcom
jnp
jp
lods
sbb
sub
push
add
pop
adc
retf
inc
pop
mov
inc
pop
ret
and
or
(bad)
add
pop
sbb
mov
mov
xor
push
pop
mov
mov
je
ins
fndisi(8087
mov
ins
pop
jecxz
pop
mov
inc
mov
arpl
xchg
sbb
pop
pusha
scas
push
sub
fnstenv
pushf
add
(bad)
sbb
sahf
in
(bad)
mov
rcl
pop
push
iret
mov
add
scas
into
push
mov
ror
pop
adc
sub
aad
dec
cmps
dec
add
sahf
ror
push
jl
scas
mov
cmp
retf
push
and
xchg
fst
sub
popf
stc
mov
pop
push
mov
loopne
sbb
mov
enter
pop
scas
or
pop
xchg
cmp
jne
(bad)
xchg
pop
out
lods
jmp
jns
pushf
push
sbb
stos
inc
aam
ja
sbb
mov
shr
jnp
(bad)
das
dec
jae
aad
cmp
sbb
cli
test
(bad)
les
je
mov
jge
mov
inc
push
cmp
push
test
mov
jp
les
aaa
xor
xchg
pop
popa
mov
loop
sbb
pop
mov
ins
jmp
jmp
rcl
fcomi
push
fistp
cmc
sub
fdivr
sub
aam
pop
xchg
fsubrp
scas
dec
or
mov
inc
xchg
out
add
addr16
sub
or
sbb
movs
repnz
mov
mov
jo
adc
mov
sub
scas
test
push
ret
jmp
mov
(bad)
sbb
cdq
ja
pop
lods
cwde
aam
dec
cmp
mov
cli
mov
push
and
mov
lea
and
rol
mov
lods
add
xchg
std
and
push
ins
inc
sub
dec
jne
cmp
call
cmp
pop
mov
xor
fnstcw
mov
dec
and
shl
(bad)
jmp
mov
lahf
aas
mov
int3
xor
stos
aam
mov
aas
cmps
je
mov
retf
pop
cmp
adc
sar
jmp
lock
repz
out
mov
(bad)
int
mov
sbb
pop
pop
pop
test
dec
ret
ret
mov
or
add
mov
in
mov
adc
arpl
xor
fnstcw
loopne
nop
aad
push
cmp
xchg
xchg
jb
(bad)
adc
inc
in
pushf
dec
neg
sub
adc
cdq
xchg
shl
adc
aam
std
dec
int3
into
dec
call
cld
cmp
ds
ins
shl
fldl2e
mov
sub
push
lock
and
shl
cmp
add
dec
cmp
inc
(bad)
arpl
ins
sub
adc
fsub
push
sbb
aaa
push
rcr
mov
mov
jo
int3
shl
(bad)
mov
stos
pop
ds
loope
ins
std
jns
pop
cwde
pop
cmp
sbb
(bad)
push
shl
test
aaa
sbb
inc
lea
movs
scas
push
ins
popf
and
jae
int3
cmp
retf
ss
mov
sti
lea
mov
adc
sbb
cmps
(bad)
clc
pop
ret
push
mov
popa
scas
xchg
jnp
or
jle
add
cwde
fnop
mov
jae
push
into
sub
push
fadd
adc
xchg
dec
mov
popf
dec
cmps
sti
cmp
scas
aad
out
pop
fwait
imul
(bad)
mov
daa
nop
popa
add
fbstp
shl
pop
ud1
gs
(bad)
loopne
xor
pop
pop
inc
mov
adc
outs
ret
pop
gs
push
mov
xchg
xor
inc
out
mov
inc
add
push
retf
imul
(bad)
aaa
ins
clc
neg
(bad)
push
std
pusha
aam
xchg
cmp
xor
xor
xchg
fisub
punpcklbw
movs
jl
mov
xlat
fwait
pop
and
push
ja
xor
pop
enter
arpl
push
ret
ror
xchg
mov
inc
retf
shl
test
mov
gs
sub
xor
jno
cmp
mov
lods
inc
test
loopne
sbb
rol
mov
ja
xor
scas
mov
pop
(bad)
sub
loopne
xor
push
pop
movs
mov
les
das
enter
daa
shl
mov
push
cmp
push
imul
ficomp
add
pusha
cwde
fwait
mov
pop
sub
call
call
xchg
rol
xor
test
pop
push
xor
enter
adc
pushf
jb
push
cmps
push
sub
fwait
xor
and
fstp
fmul
adc
and
clc
addr16
jae
cld
(bad)
adc
mov
aad
inc
shl
repnz
mov
jmp
add
pop
pop
push
stos
dec
fnsave
or
scas
push
fsub
jmp
fimul
pop
jp
push
retf
ret
mov
nop
adc
pop
mov
mov
pinsrw
xchg
mov
fild
(bad)
icebp
or
xchg
add
adc
xlat
add
fwait
xchg
mov
push
addr16
icebp
inc
pop
icebp
mov
dec
or
xchg
adc
cli
cwde
nop
jmp
jmp
pop
out
xor
and
inc
dec
jmp
xchg
add
add
sbb
sub
fsub
rcr
test
and
inc
add
mov
xchg
push
push
out
dec
and
lds
push
push
pop
dec
popa
fisubr
jbe
test
add
aaa
cmps
mov
shl
sbb
sahf
cmp
cs
lods
push
js
mov
mov
enter
lods
pop
fwait
add
addr16
adc
aam
js
mov
lock
imul
pop
fild
fild
mov
pop
in
mov
jp
or
ja
mov
aaa
cs
aaa
and
adc
xchg
mov
sub
mov
sub
pop
inc
pusha
fisttp
jne
adc
jno
iret
(bad)
adc
xor
xor
test
aam
sbb
jne
sti
imul
test
mov
fcmove
xchg
jae
mov
sub
mov
or
xor
in
out
jge
xchg
xor
ror
xor
ret
jecxz
push
pop
sbb
or
int3
pop
repnz
fstp
jno
stos
call
cmps
xchg
jae
enter
in
push
leave
pop
pop
call
sub
push
test
pushf
inc
hlt
sbb
pusha
push
jns
fs
dec
mov
fnstsw
enter
or
xor
icebp
aad
and
jmp
sbb
xchg
or
js
stos
xlat
movs
sub
leave
mov
xchg
sub
sub
sahf
dec
and
push
fnstenv
jl
fiadd
mov
in
jmp
(bad)
sub
sbb
sub
mov
sub
shl
loop
and
push
mov
leave
pushf
xchg
cmp
jg
pop
iret
add
in
add
cmps
shr
xor
cmp
out
jl
pop
aaa
fcomp
inc
(bad)
jbe
mov
add
mov
jge
mov
not
mov
jmp
(bad)
aaa
push
stos
jns
jle
push
popa
pop
cmp
mov
mov
sbb
lods
(bad)
pop
jmp
pusha
mov
loop
push
in
xor
out
mov
add
ss
add
xchg
arpl
or
(bad)
add
cmc
add
sub
cmp
sub
push
push
div
and
repz
adc
push
test
push
jge
pop
std
jno
dec
add
popf
inc
inc
mov
stos
pop
dec
sub
cmps
cmp
sti
aad
lock
jno
cmp
stos
or
jo
pushf
push
(bad)
xchg
loopne
mov
inc
dec
mov
pop
mov
retf
xor
inc
sahf
cmp
repz
dec
fwait
std
out
xor
mov
test
aad
mov
cmps
mov
(bad)
call
xchg
pop
adc
in
pop
out
dec
jae
or
add
pop
aam
pop
int3
outs
cld
mov
jle
pop
cli
rcl
mov
paddusb
dec
mov
mov
pop
mov
jo
push
add
mov
push
out
push
call
fidiv
add
inc
ret
aam
fwait
mov
out
(bad)
push
sbb
shl
sbb
dec
lock
xor
mov
sbb
cld
pop
mov
scas
dec
mov
call
pop
mov
or
push
(bad)
adc
pusha
push
aaa
fsubr
dec
popf
and
inc
js
sub
cmps
imul
pushf
jecxz
loope
lahf
push
adc
ds
stos
fmulp
lock
adc
mov
mov
loopne
lea
in
addr16
dec
jl
mov
cld
test
mov
jmp
mov
or
nop
bound
fcomp
in
aas
mov
pop
enter
scas
inc
jmp
sub
push
loop
xor
aas
ins
push
inc
das
cmp
push
sub
dec
mov
clc
adc
popa
mov
mov
dec
scas
jne
sahf
adc
and
add
ins
fistp
sbb
les
jo
in
jg
push
mov
mov
inc
mov
(bad)
(bad)
or
ficom
imul
dec
mov
push
lock
pop
pop
dec
jne
xchg
xor
inc
inc
xlat
lea
xchg
sbb
sub
shr
sub
mov
adc
(bad)
sbb
sbb
mov
dec
outs
push
(bad)
mov
enter
shr
and
jp
in
xchg
test
cmp
push
sub
retf
mov
dec
dec
xchg
not
mov
push
sar
cmps
mov
ds
idiv
call
mov
add
mov
je
pop
std
jae
mov
sti
inc
pop
mov
inc
sahf
push
dec
fisubr
inc
sub
and
inc
jmp
mov
retf
add
addr16
mov
or
(bad)
(bad)
cli
mov
pop
sbb
and
ins
xchg
jge
pop
pop
mov
sbb
daa
test
jae
or
pushf
(bad)
jo
js
mov
movs
int3
jnp
adc
inc
inc
mov
mov
adc
pop
aas
mov
jne
out
data16
mov
inc
pop
(bad)
(bad)
adc
jle
sub
adc
test
aad
sbb
adc
mov
jnp
xor
lods
sbb
retf
mov
into
(bad)
and
cmp
and
and
sahf
jmp
mov
sub
js
mov
mov
pop
push
sar
or
popf
ja
and
enter
in
pop
add
cmp
test
lock
sbb
in
mov
xlat
test
rol
or
dec
pop
out
ss
sbb
fst
mov
sub
in
sub
ror
pop
push
nop
mov
sbb
sub
adc
mov
arpl
les
and
cmp
pop
xchg
stc
cld
ins
test
test
in
mov
add
(bad)
xchg
mov
lea
pop
inc
arpl
xor
inc
retf
cmp
add
xor
push
xchg
inc
rcr
dec
mov
addr16
and
aas
mov
or
mov
adc
or
gs
xchg
int
cvtps2pi
and
inc
nop
sbb
pushf
or
xlat
mov
inc
mov
test
in
stos
pop
cld
xor
adc
or
mov
sub
lock
ror
cdq
gs
(bad)
adc
int3
rcl
mov
lahf
hlt
pop
jmp
jmp
dec
dec
shr
cdq
aaa
out
xor
xchg
push
adc
(bad)
cmp
pop
xchg
xchg
aam
inc
push
gs
call
and
xchg
xor
cmp
mov
leave
jl
cdq
or
(bad)
fs
dec
push
push
mov
or
mov
bound
sub
loop
shr
mov
int3
shl
loopne
out
shl
test
stos
rcpps
push
push
pop
sub
addr16
std
mov
sahf
popa
xor
xchg
lods
sub
mov
mov
pop
mov
dec
inc
aad
into
add
lds
pop
rcl
adc
ret
sub
es
pop
jp
cs
daa
hlt
cmp
pop
adc
push
push
push
jno
out
les
mov
inc
add
neg
mov
xchg
imul
sub
lahf
mov
jnp
sub
jno
lods
xor
xchg
mov
retf
ins
jge
outs
int
in
sub
in
mov
mov
movs
fisubr
(bad)
pop
cs
retf
push
dec
inc
rol
sbb
adc
mov
bound
lock
(bad)
in
pop
out
ins
ins
inc
sub
daa
fmul
add
xlat
dec
sbb
dec
push
pop
xchg
adc
mov
or
fidiv
(bad)
cmps
push
add
adc
inc
shl
aam
push
add
or
les
fadd
xchg
aam
scas
sub
mov
lock
add
and
pop
cmp
xchg
sbb
fldenv
retf
enter
enter
cdq
jno
hlt
test
mov
fisubr
and
mov
dec
imul
stos
repz
mov
das
(bad)
xor
lds
xchg
rcl
ret
imul
cmp
dec
mov
add
xchg
fsub
ror
push
cmp
cmps
xchg
push
fadd
pop
or
shl
pop
jno
cmp
mov
mov
jmp
fisubr
sbb
bound
(bad)
sbb
sub
mov
sub
clc
dec
xchg
dec
sub
and
ds
dec
add
popa
sbb
enter
lea
jmp
jnp
int
pop
call
ret
lods
out
xchg
mov
add
cld
ja
data16
mov
and
inc
mov
or
sub
mov
sub
nop
pushw
stc
lods
test
sahf
add
xor
dec
push
inc
popf
push
sar
into
out
scas
int3
pushf
push
adc
pop
popa
rcr
xchg
mov
sbb
lea
aaa
ret
jns
mov
ja
and
xchg
sbb
jae
sbb
out
xor
push
mov
in
xor
inc
imul
rcl
xchg
sub
cmps
push
movs
popa
push
push
lock
call
xchg
(bad)
out
scas
push
repz
push
(bad)
sbb
or
adc
stos
inc
ins
pop
mov
aad
dec
jmp
push
inc
cmp
daa
jmp
shl
mov
dec
inc
pop
fnsetpm(287
mov
xchg
dec
mov
sbb
into
(bad)
cmps
pop
dec
sub
ins
adc
sbb
(bad)
dec
stos
fist
sbb
inc
iret
rcr
out
mov
jmp
sub
rcl
mov
pushf
mov
jg
push
scas
or
cld
push
inc
jp
cmp
add
mov
mov
push
aam
scas
mov
add
lods
les
adc
jne
(bad)
xor
mov
cmp
pop
out
aas
cmp
ss
push
fcom
mov
pop
mov
or
hlt
mov
scas
push
clc
inc
imul
inc
cli
mov
add
fcom
jl
test
push
sar
loopne
daa
shl
scas
mov
pop
nop
mov
loop
add
cdq
pop
and
xchg
mov
xchg
pop
sar
push
dec
sbb
es
retf
fstp
lods
mov
gs
dec
(bad)
mov
dec
std
test
iret
arpl
push
in
xchg
pop
mov
or
and
xchg
push
pop
std
mov
stos
jo
cwde
in
xor
xlat
push
movs
cmps
pop
(bad)
scas
add
outs
cmps
(bad)
add
js
fxch
retf
inc
fidiv
ins
scas
mov
push
icebp
jmp
(bad)
xchg
loopne
shl
add
xchg
div
div
cmp
push
(bad)
mov
dec
retf
das
sub
neg
test
cdq
rcl
add
dec
je
pop
mov
or
and
xor
not
loope
iret
ss
neg
(bad)
mov
jno
inc
jne
jl
and
int
xor
xchg
jge
pop
daa
sbb
jl
fnstenv
adc
adc
push
jp
add
hlt
(bad)
shl
push
imul
adc
xchg
out
cmc
std
sbb
adc
mov
or
pop
dec
xlat
fs
es
movs
sub
rcr
repz
cwde
and
push
cmp
cmp
and
push
pusha
pop
mov
daa
mov
sub
hlt
enter
pop
xlat
mov
sahf
jp
add
mov
xor
mov
and
fcomp
sbb
ja
es
(bad)
in
fsub
js
lds
idiv
xlat
aad
dec
cmps
adc
xchg
dec
pop
inc
add
jecxz
jae
aam
repz
icebp
sahf
hlt
fwait
sub
jge
dec
xor
mov
dec
sub
mov
mov
mov
dec
loope
sahf
mov
fcomp
pop
je
mov
mov
lahf
add
dec
out
add
mov
jmp
shr
jmp
push
mov
pop
pop
ret
fs
scas
inc
pop
add
pop
pushf
loop
jg
mov
mov
cli
jge
inc
xchg
jl
cmp
test
dec
lds
mov
(bad)
and
dec
in
mul
sbb
outs
or
pop
mov
rcl
dec
std
in
mov
push
outs
pop
jge
or
outs
jl
push
sub
adc
inc
or
sbb
int3
pop
and
jecxz
sbb
outs
and
sbb
fcom
outs
xor
xchg
adc
mov
pop
out
cmp
push
push
push
push
(bad)
mov
jno
pushf
sti
pop
sub
rol
arpl
pop
int3
aaa
stos
xor
fwait
out
fimul
lods
test
sahf
xor
adc
adc
and
mov
js
(bad)
pop
push
pop
dec
xchg
push
clc
cmp
xor
and
adc
xchg
inc
xchg
loope
sbb
xchg
jecxz
pop
cmp
mov
xor
and
sar
ja
dec
push
adc
adc
ins
mov
sbb
aad
sub
ds
mov
jmp
cs
pop
add
and
xchg
aaa
push
fmul
test
xor
(bad)
push
pop
loopne
push
sti
out
mov
sbb
dec
pop
lods
push
leave
daa
fld
mov
sub
stos
fwait
adc
outs
and
sbb
and
mov
out
pop
ficom
pop
cmp
pusha
cmp
test
push
dec
push
aam
mov
call
ss
jno
movs
jne
push
test
pop
push
addps
inc
lahf
or
cli
xor
loopne
xchg
and
out
push
je
mov
cmps
out
jl
std
mov
cmp
call
push
test
(bad)
out
fwait
add
call
mov
les
mov
jg
xchg
mov
ficom
cwde
les
xchg
xchg
loopne
push
lahf
dec
ror
dec
jp
cdq
pushf
xchg
clc
pop
sub
out
or
xlat
ficom
inc
cmp
xor
ins
jne
pop
mov
sub
sub
int3
or
scas
add
dec
add
push
fdiv
jp
ins
cs
in
mov
push
fs
fist
lahf
adc
cmp
sub
fstp
test
pop
loope
push
rol
xchg
mov
loopne
jl
xor
shr
or
and
pop
scas
pop
jl
xchg
idiv
pop
hlt
loopne
xchg
dec
push
or
fisub
fist
out
xchg
loopne
ds
pop
mov
pusha
or
call
pop
(bad)
pop
mov
cwde
mov
ficom
xchg
xor
shl
mov
adc
sbb
shl
push
sub
adc
hlt
adc
push
or
or
inc
cmp
faddp
scas
repz
inc
cld
add
jle
imul
icebp
leave
cld
push
sbb
xor
fcomp
test
int3
mov
or
in
xor
inc
(bad)
out
dec
int3
jae
xchg
mov
cmp
push
cmps
shr
xor
iret
cmp
ja
xchg
stos
arpl
aam
(bad)
sbb
ret
mov
arpl
retf
cmp
in
dec
sub
lods
inc
mov
ja
add
dec
pop
ficomp
stos
cmp
jl
fst
out
mov
mov
neg
mov
aaa
sub
push
sub
xor
and
cmps
test
fldenv
jmp
cdq
mov
scas
ss
dec
pop
in
loopne
sbb
xchg
jge
mov
call
call
and
adc
xor
jg
rol
pop
or
aam
pushf
not
test
jns
adc
push
pop
adc
out
ins
sub
sbb
mov
mov
mov
loope
outs
sub
fld
or
data16
fwait
adc
push
std
cdq
int3
stc
je
lds
mov
mov
jns
jmp
in
mov
and
add
mov
or
ss
pop
cld
cvtdq2ps
out
test
call
sti
push
adc
mov
xor
loop
add
lods
divps
fild
xlat
mov
(bad)
aam
push
sub
stos
popf
cmp
(bad)
gs
adc
mov
imul
pop
stos
jmp
bound
mov
loopne
cdq
(bad)
adc
dec
jno
fndisi(8087
cmc
jnp
xchg
mov
mov
sahf
push
dec
mov
cmp
sub
loop
out
jmp
dec
ins
es
cmp
jmp
in
pop
or
adc
adc
out
dec
outs
mov
nop
rcr
sbb
xlat
aaa
or
sub
cmc
loop
mov
or
fucomip
repz
sar
push
(bad)
mov
movs
and
xor
sbb
(bad)
ret
jg
into
mov
and
mov
add
mov
sbb
pop
fnop
je
dec
lea
repnz
mov
xor
and
sub
dec
or
dec
popf
cdq
mov
jg
mov
(bad)
fsubr
xor
mov
sahf
ins
xor
xchg
and
(bad)
in
pop
rcl
sbb
fisttp
test
(bad)
jp
mov
xlat
dec
xor
push
jns
mov
cs
iret
push
pop
jmp
stos
arpl
cmp
mov
inc
xlat
add
xchg
adc
push
lea
pop
sbb
pushf
fisub
lods
inc
xchg
push
les
outs
mov
retf
mov
ret
pop
jns
in
into
ret
shl
and
imul
adc
ins
and
jecxz
repnz
jl
movs
pushf
inc
rol
push
aaa
xchg
xchg
sub
(bad)
dec
mov
mov
pop
pop
adc
mov
push
adc
or
or
mov
repnz
out
cmp
lea
xor
jmp
scas
hlt
sub
or
push
test
cmc
not
stos
dec
add
xlat
mov
jmp
mov
lods
dec
pop
in
add
xchg
add
sbb
mov
pop
and
out
std
push
aaa
retf
dec
add
sub
arpl
mov
test
push
call
pop
arpl
jle
arpl
jb
loopne
in
cmp
dec
inc
jl
in
xchg
fsub
sahf
mov
push
mov
popf
mov
push
cld
fcmovb
pop
dec
idiv
mov
lahf
test
pop
and
mov
test
retf
shl
lods
and
cs
cmps
dec
push
adc
cmp
pop
out
xlat
pop
imul
mov
and
movs
not
and
dec
mov
push
outs
dec
push
iret
rcl
je
iret
imul
loopne
sbb
and
ss
mov
out
cmc
aam
adc
mov
jmp
fisubr
sub
(bad)
(bad)
mov
pop
loop
push
(bad)
in
int3
dec
xchg
(bad)
jmp
mov
xor
mov
jmp
and
or
out
mov
test
push
jbe
or
enter
fadd
lahf
lock
les
push
or
push
test
xchg
aaa
aas
adc
dec
add
push
xor
out
call
mov
imul
rcl
pop
mov
mov
out
adc
pop
dec
stc
mov
data16
jmp
addr16
inc
adc
enter
and
cmp
sub
fild
repnz
dec
mov
adc
in
or
mov
imul
scas
sub
mov
lods
pop
daa
sti
retf
pop
inc
(bad)
popf
xor
mov
retf
dec
lock
and
fistp
sub
and
sbb
fld
xchg
adc
shr
dec
cmp
push
enter
data16
cdq
push
xchg
fiadd
xlat
adc
cmps
shl
outs
sub
pop
clc
jnp
stos
sub
dec
and
or
sub
stos
push
pushf
sub
(bad)
dec
xchg
jg
test
inc
mov
inc
inc
pop
cmps
add
mov
aam
push
popf
sbb
add
mov
test
adc
mov
inc
jnp
inc
adc
push
out
xchg
(bad)
popf
(bad)
cld
dec
jl
stos
jg
mov
jae
repnz
pushf
je
std
xor
les
imul
pop
pop
ins
and
daa
xlat
mov
pop
pop
mov
xlat
push
mov
loop
or
dec
dec
imul
and
inc
out
inc
sahf
lock
enter
xor
push
adc
sbb
jge
mov
xchg
mov
jmp
lea
push
inc
dec
push
jnp
loopne
add
dec
push
cli
pop
lahf
adc
fwait
cdq
bound
sub
fild
and
xor
add
jmp
ins
push
fdivr
sar
ret
adc
inc
xlat
dec
cmp
and
adc
hlt
mov
in
cmp
in
adc
hlt
xchg
add
push
dec
out
sub
pusha
dec
adc
mov
dec
ins
ins
int
inc
lds
movs
(bad)
in
pop
cdq
cli
fstp
ret
fidiv
mov
rol
ror
cmp
(bad)
cmps
push
jne
arpl
xchg
sub
xchg
jge
adc
popf
(bad)
cmp
cmp
(bad)
or
pop
fisubr
jmp
pop
call
aas
imul
add
arpl
call
arpl
pop
cmp
and
stos
dec
xchg
and
mov
pushf
pop
mov
cmp
xchg
mov
pop
test
test
inc
add
std
xlat
cli
and
cmp
xor
or
loopne
dec
xor
pop
mov
in
pop
fsub
(bad)
mov
sbb
xchg
dec
cmp
adc
dec
cdq
repz
mov
push
dec
mov
(bad)
dec
pop
add
lods
lock
ja
fnsave
aad
in
cdq
adc
clc
call
shl
xchg
jmp
jmp
add
adc
bound
cmp
jne
mov
dec
xchg
pop
sbb
sbb
call
ins
xor
stos
xchg
(bad)
fcom
sbb
jge
mov
mov
in
and
imul
xlat
pop
mov
ret
jbe
sub
sbb
sub
push
jp
adc
(bad)
lock
and
les
xor
xor
add
sub
xchg
pushf
stos
sahf
cli
inc
pushf
cld
push
lock
sar
repnz
pop
jmp
cmp
das
push
or
adc
popf
imul
das
dec
lods
fnstenv
cmp
inc
retf
push
xor
test
retf
pop
mov
mov
nop
mov
cmps
mov
in
mov
sar
shr
pop
push
push
mov
js
sbb
shl
cmp
loop
fs
ds
inc
ja
lods
loopne
mov
mov
mov
or
aad
out
or
jnp
sahf
and
mov
(bad)
cmp
jle
aad
fwait
xchg
loope
push
int3
jmp
jo
leave
sahf
sbb
(bad)
jge
pop
shl
loop
jne
mov
push
and
push
dec
nop
or
and
mov
stos
sbb
test
inc
(bad)
and
inc
mov
lock
pop
(bad)
arpl
pushf
pop
fild
push
ret
inc
into
cmp
dec
jecxz
and
retf
test
pop
outs
hlt
push
add
loopne
stc
leave
jp
bound
adc
push
jmp
jg
sub
mov
mov
fstp
sbb
or
in
pmullw
dec
mov
xor
and
mov
pop
mov
call
in
ds
adc
popf
movs
or
clc
(bad)
mov
xlat
dec
dec
pop
dec
pop
push
xchg
or
sar
fadd
jmp
bound
retf
adc
mov
jmp
push
sub
xchg
aam
add
mov
adc
std
retf
or
sbb
sub
lods
add
out
popa
push
stc
rcl
sub
into
adc
bound
or
out
std
(bad)
ret
sbb
mov
and
mov
(bad)
mov
xchg
mov
add
aam
call
inc
xchg
daa
inc
int
sub
add
and
pop
pop
cmp
jl
xor
fwait
and
push
pop
mov
loop
in
(bad)
mov
pop
mov
popf
push
xor
cmp
or
out
pop
jmp
jmp
jg
or
mov
(bad)
ss
loopne
stos
imul
mov
adc
push
movs
int3
push
add
jae
bnd
ret
repnz
mov
ret
stos
fwait
jns
mov
pop
xor
out
outs
add
popa
in
(bad)
mov
sub
jmp
xor
push
sbb
and
jns
jmp
inc
ins
call
cld
push
leave
sub
stos
out
sbb
xchg
pop
mov
pusha
ins
fsubp
or
jl
shl
fst
xor
mov
cmps
mov
xor
in
inc
je
aam
aas
cmps
mov
aad
push
dec
cmp
data16
lock
sub
addr16
test
add
mov
popf
test
push
xchg
sub
ficomp
mov
mov
je
ins
inc
retf
cmp
xor
mov
mov
in
xchg
jmp
xor
fwait
xor
stos
cmp
stc
loop
cmp
loopne
lock
xchg
pop
inc
xchg
loope
fdiv
push
into
fcom
adc
cmps
fnstenv
inc
sar
test
sbb
inc
(bad)
daa
sub
xor
sub
mov
mov
mov
xchg
mov
jl
push
mov
fist
or
mov
cmp
daa
fdivr
adc
adc
inc
ins
push
sub
adc
jae
add
arpl
(bad)
inc
inc
dec
loopne
xor
outs
add
jmp
mov
outs
ins
sbb
add
stos
jmp
test
jmp
push
push
sub
repz
cs
stc
xchg
out
dec
into
pop
xor
fisttp
or
es
call
ds
adc
lods
xor
repz
pop
xchg
sub
mov
out
dec
xchg
pop
pop
xor
jne
aaa
out
mov
gs
and
call
ins
fild
mov
sbb
jecxz
mov
inc
test
nop
cmps
dec
jle
mov
sub
jbe
xchg
pop
lock
cdq
call
sbb
dec
xchg
push
mov
(bad)
mov
nop
inc
idiv
adc
data16
mov
inc
add
cli
push
nop
push
ret
lock
mov
mov
sar
into
xor
sbb
fistp
sbb
mov
cld
loopne
adc
mov
lds
popa
mov
jae
inc
mov
outs
into
add
hlt
jle
(bad)
retf
test
dec
xor
(bad)
cdq
ja
aam
std
mov
(bad)
stc
fucom
jmp
mov
pop
int3
xchg
xchg
gs
mov
retf
in
(bad)
rcl
mov
jbe
(bad)
nop
mov
fstp
inc
lahf
psadbw
jno
jmp
push
or
fs
stos
inc
pop
retf
test
mov
cdq
adc
jmp
dec
mov
das
lock
mov
sbb
pusha
pop
sub
mov
pushf
aas
and
inc
gs
mov
bound
pop
test
in
retf
mov
je
repz
shl
pop
ins
dec
(bad)
pop
push
in
inc
enter
hlt
mov
jne
ja
out
push
sar
fnstcw
dec
adc
jp
stos
push
loopne
mov
jbe
mov
in
xchg
pop
inc
xlat
cmps
or
push
inc
or
out
sbb
mov
mov
mov
jne
bound
ret
mov
cld
jg
inc
xchg
in
sub
push
sub
pop
mov
jne
test
mov
inc
fst
cs
push
test
sub
leave
mov
mov
dec
cld
fld
dec
dec
push
ins
pop
xor
(bad)
clc
jge
mov
pushf
push
push
jge
mov
adc
lahf
push
xchg
popa
std
ret
cmp
inc
xchg
mov
es
iret
stos
add
xor
cdq
jnp
or
aas
and
iret
mov
inc
pand
push
jmp
(bad)
and
dec
mov
popa
cmp
push
cmps
inc
xchg
out
cmp
pop
push
js
stos
pop
(bad)
rcl
clc
hlt
xor
es
aaa
call
add
daa
loope
jae
xor
cmp
bound
dec
pop
mov
(bad)
sbb
or
inc
sbb
xor
out
mov
mov
ins
stos
lock
aam
mov
dec
push
sbb
sahf
mov
pop
cmp
push
in
mov
mov
mov
cmp
dec
lock
lods
aaa
mov
or
cli
add
sub
push
push
mov
xor
call
xor
into
jb
fist
jae
retf
(bad)
fstp
push
ja
imul
sbb
mov
aaa
mov
imul
js
outs
mov
loop
sbb
loop
mov
pop
cdq
out
jge
loope
or
call
mov
nop
jle
popa
loop
gs
jmp
dec
les
mov
cld
jg
mov
dec
stos
repz
xor
fwait
jge
sub
push
dec
hlt
arpl
adc
push
rcr
cmp
add
mov
retf
(bad)
push
addr16
sbb
nop
ja
pop
pop
out
repnz
jmp
cmp
add
adc
push
sbb
outs
out
adc
adc
add
and
jns
mov
daa
out
int
loope
inc
dec
pop
sahf
inc
dec
(bad)
test
add
sub
cmp
test
or
cdq
movs
sar
sbb
repz
aam
loop
push
repnz
loop
stc
cld
cdq
cmp
mov
inc
sqrtps
dec
xchg
adc
xchg
ins
pop
mov
fcomp
pop
cmp
(bad)
mov
inc
or
lods
or
call
scas
jle
push
dec
mov
imul
mov
push
xor
mov
push
mov
ss
aaa
mov
cli
dec
jnp
cmp
cmp
xchg
xchg
faddp
test
aaa
lods
mov
or
imul
xchg
jmp
inc
mov
shr
mov
dec
jge
inc
pop
dec
gs
int
inc
xor
xchg
add
xor
outs
(bad)
das
stos
push
icebp
xchg
dec
push
xor
mov
dec
popf
fdiv
fidiv
stos
jge
call
inc
les
mov
dec
aad
aad
out
xchg
cmps
push
and
stc
in
cmp
sub
sbb
adc
add
cmp
adc
push
push
fsubp
xchg
or
dec
mov
dec
aaa
int
xchg
adc
add
pop
ins
dec
lods
lahf
loop
push
mov
xlat
jae
mov
test
pop
pop
xchg
add
cdq
add
les
mov
pop
mov
xchg
shr
dec
in
and
jno
dec
imul
cmp
adc
mov
dec
dec
sar
xchg
add
sbb
and
push
pop
dec
call
jmp
add
mov
pop
jmp
and
gs
repz
cdq
test
or
jle
dec
push
push
push
add
das
mov
adc
xchg
jmp
add
mov
and
nop
jg
or
loop
neg
push
shl
dec
mov
jne
int3
push
mov
xchg
test
jb
add
ds
out
inc
in
mov
out
mov
xchg
dec
cmp
and
mov
push
rol
nop
cmps
add
aaa
cmp
(bad)
xlat
mov
ret
fsub
push
ss
push
test
arpl
pop
inc
lea
and
and
(bad)
mov
dec
repnz
seta
and
loop
test
xchg
sub
test
inc
mov
add
mov
jnp
add
pop
xchg
ror
xchg
dec
rcl
fwait
loop
push
jmp
mov
push
dec
fdivr
inc
jbe
fld
mov
pop
fst
cmp
(bad)
loop
lods
bound
popa
jge
loopne
or
mov
and
mov
sbb
ret
idiv
push
fstp
pop
ret
arpl
daa
add
das
xchg
and
fcom
mov
sbb
ds
sbb
inc
(bad)
stc
add
mov
dec
adc
push
pop
dec
mov
repz
neg
pop
int
(bad)
mov
sbb
or
retf
jae
leave
jb
pop
nop
jae
dec
push
sbb
fild
rcl
enter
cmps
das
sub
ror
dec
push
dec
mov
jns
addr16
add
push
retf
scas
cwde
stos
mov
popf
cmp
jmp
inc
push
inc
and
push
lds
sbb
cmp
push
mov
sbb
sbb
retf
mov
jmp
std
xchg
dec
sub
cmp
cmc
pop
jg
dec
imul
call
adc
(bad)
rcr
test
xchg
ins
push
dec
shl
jae
cmp
add
sub
xor
jae
push
pop
arpl
aad
push
mov
jnp
mov
dec
(bad)
movs
xchg
and
cmp
ficomp
pop
mov
mov
(bad)
out
enter
popa
into
iret
and
jge
hlt
imul
fcmovne
mov
sti
dec
jnp
jnp
aas
inc
bswap
(bad)
xchg
pop
mov
imul
rcl
push
dec
lock
js
push
push
dec
add
cmp
es
jg
adc
mov
mov
push
push
dec
cmovle
pop
stos
pop
mov
fldenv
jmp
je
icebp
sub
sbb
pop
mov
cmp
inc
pop
push
jbe
push
or
inc
ja
test
out
je
fimul
or
dec
call
dec
and
cmp
xchg
int3
aad
sbb
dec
scas
inc
pusha
push
mov
xlat
mov
(bad)
xchg
ja
retf
add
rcr
xchg
inc
dec
jbe
rcr
inc
cmp
or
retf
xlat
(bad)
pop
call
shl
pop
or
xchg
cmps
sub
jmp
jp
nop
loop
xchg
xchg
pop
cmp
movs
mov
or
inc
or
mov
mov
or
xor
sbb
xchg
retf
inc
(bad)
and
test
pop
jmp
icebp
or
test
sbb
sti
xchg
ja
mov
sbb
dec
inc
nop
retf
icebp
pop
popa
pop
jmp
(bad)
add
xchg
and
pop
cld
clc
aad
xor
cmps
pop
out
lock
test
pop
adc
jmp
inc
xchg
repz
mov
(bad)
push
out
jl
mov
and
adc
pop
icebp
push
and
ds
in
inc
and
call
(bad)
ret
push
(bad)
jmp
jmp
std
fisttp
or
jge
addr16
adc
dec
test
(bad)
mov
push
jnp
jecxz
into
(bad)
push
out
fild
into
or
scas
mov
pop
(bad)
push
mov
xchg
leave
mov
inc
pop
(bad)
int
mov
adc
mov
popf
mov
retf
jp
sub
dec
cmp
or
imul
mov
mov
lods
fistp
fst
push
cmp
mov
add
xchg
ins
xchg
push
or
pop
adc
in
push
clc
out
push
jg
cmp
aad
xlat
(bad)
push
sub
fs
movs
cmps
gs
inc
mov
popf
xlat
mov
(bad)
scas
and
(bad)
in
or
sub
dec
sbb
das
jno
stos
rcl
sub
jnp
mov
stc
jle
jmp
ja
in
jnp
ins
mov
in
jmp
push
xchg
int3
and
xor
sar
aam
call
rcl
add
sub
jecxz
sti
lahf
cmp
adc
inc
dec
cmps
and
push
xor
and
mov
jmp
bound
xabort
jb
sub
pop
jge
inc
mov
xlat
push
mov
in
or
stos
sbb
(bad)
mov
in
(bad)
jnp
mov
and
repnz
scas
xlat
outs
push
cmp
cmp
dec
cmp
stos
popa
lods
jg
dec
mov
pop
sbb
push
mov
daa
sub
int
sub
(bad)
(bad)
xor
add
fisubr
sub
mov
(bad)
xchg
mov
fadd
mov
dec
pop
sub
xchg
stc
enter
nop
cmp
movs
out
fisub
and
mov
fcmovnu
bound
or
enter
call
cld
adc
push
int
mov
test
out
das
imul
pop
sbb
inc
mov
mov
mov
cmp
push
stos
xor
sbb
sub
xor
cmp
nop
mul
(bad)
mov
lahf
fimul
imul
(bad)
push
jl
jle
mov
add
ret
cdq
fwait
call
test
mov
das
xor
es
test
repz
stos
repnz
out
fwait
add
cmp
imul
and
fbstp
iret
mov
jnp
(bad)
mov
(bad)
retf
cmc
xor
mov
push
add
push
mov
rcl
push
cmps
sub
xchg
repz
mov
enter
push
loop
add
cmp
inc
into
xchg
ins
add
(bad)
cmps
les
xchg
fcomp
ret
push
into
push
xor
jne
int3
mov
sub
loopne
sbb
dec
mov
pop
add
mov
xchg
(bad)
xlat
lahf
or
sar
ret
fwait
jbe
sbb
sub
mov
add
addr16
jnp
mov
and
ficom
cmp
sbb
popa
dec
fild
mov
rol
inc
out
jae
cwde
(bad)
nop
cs
fsubr
adc
imul
pushf
push
mov
and
sbb
mov
cmp
(bad)
scas
and
inc
es
repnz
out
out
test
cmc
lock
(bad)
(bad)
leave
jl
scas
fist
dec
add
iret
addr16
jb
inc
ficomp
imul
push
jno
jb
dec
pop
int3
adc
dec
jmp
mov
sbb
pop
(bad)
sbb
mov
pop
inc
pop
fucomip
repnz
scas
add
cs
add
lods
pop
pushf
xchg
pop
fdivr
xchg
push
in
int3
mov
cmp
add
add
ret
jecxz
(bad)
cmp
mov
or
push
rcl
mov
and
retf
jmp
popa
in
lahf
mov
fiadd
fadd
dec
ins
sub
mov
sahf
pop
jns
push
mov
mov
push
fild
sbb
xor
push
jl
mov
mov
mov
bound
cdq
inc
pop
jp
aaa
out
mov
inc
out
push
sub
ins
jmp
mov
cld
aam
enter
xor
stos
add
call
sti
aaa
cdq
popa
in
scas
inc
sbb
cmps
xchg
test
mov
jno
mov
and
jmp
je
rcr
scas
idiv
aaa
popf
pop
push
dec
pop
mov
adc
std
cwde
push
pop
clc
dec
loope
dec
fist
jbe
daa
icebp
in
cmps
movs
dec
xchg
mov
mov
test
sub
movs
ret
popa
ss
gs
mov
add
jle
test
mov
cmp
pushf
push
and
sbb
ss
xchg
arpl
push
(bad)
loop
adc
or
aam
pop
cli
arpl
inc
mov
jl
arpl
pusha
je
or
xchg
jae
sbb
sbb
in
movs
xor
pusha
sbb
cmc
fcom
dec
xchg
jmp
ret
jne
daa
sub
and
pop
ins
leave
mov
aam
and
stos
sub
dec
xor
es
mov
sti
inc
sbb
pop
push
rcl
dec
cmp
xchg
fcomp
jne
loope
test
(bad)
and
xor
fmul
adc
push
outs
popf
fnclex
lahf
mov
addr16
ins
adc
cwde
xor
dec
aam
adc
les
mov
push
add
call
cmc
(bad)
adc
pop
pop
mov
mov
inc
jbe
push
push
pushf
addr16
aaa
bound
cmp
add
inc
push
jnp
adc
mov
in
push
jmp
loopne
popa
std
lds
cld
mov
push
xchg
cmp
and
mov
mov
pusha
adc
les
ret
fsub
dec
pop
imul
adc
pop
mov
loopne
retf
retf
mov
mov
leave
xchg
pop
dec
outs
xor
out
jge
adc
mov
mov
mov
mov
inc
xchg
or
mov
xchg
ins
sub
repnz
loop
bound
jecxz
mov
and
cmp
addr16
out
cs
xchg
or
and
int3
jle
sar
into
pop
fimul
sar
ret
xchg
cmp
stos
or
or
jge
test
jecxz
(bad)
aas
inc
add
cmps
cmp
push
dec
scas
xchg
rcl
pop
js
pop
lods
push
stos
xor
popa
sbb
shl
arpl
jge
into
xor
(bad)
push
pushf
pop
mov
and
mov
jecxz
mov
pop
std
data16
addr16
mov
mov
popf
add
(bad)
and
jae
dec
sahf
test
fistp
cmp
imul
mov
jnp
hlt
sbb
mov
jb
mov
xor
repz
mov
sub
jl
jne
pop
push
xchg
jns
int
dec
inc
(bad)
xor
out
shr
jp
psadbw
xchg
adc
pop
fadd
sbb
iret
repz
js
jmp
push
shr
dec
pushf
mov
rol
nop
mov
jns
xor
add
cmp
pop
or
ds
adc
ret
mov
and
inc
sub
fwait
mov
push
in
bound
mov
dec
scas
push
cmp
jae
sbb
push
pmullw
push
mov
arpl
jnp
rcr
dec
jae
(bad)
fwait
mov
pop
xchg
mov
fs
cmps
nop
xchg
push
cmp
adc
mov
sub
int
xor
jmp
mov
sbb
aam
xchg
jno
test
mov
leave
sar
mov
arpl
fcmovb
out
test
xchg
dec
xor
lds
push
add
daa
sti
pop
mov
std
jnp
dec
cmp
dec
rcr
sbb
stos
dec
fisub
cwde
ss
xchg
loope
or
fwait
mov
inc
sbb
fidiv
sbb
or
in
push
daa
sbb
mov
outs
push
fst
mov
pop
dec
xchg
jbe
ss
sub
add
pop
js
out
inc
(bad)
ja
ins
hlt
sbb
fldenv
or
rcr
or
gs
dec
push
fiadd
cmp
and
out
mov
cmp
cmp
add
sar
xchg
dec
les
pop
mov
cmps
call
or
sbb
xor
arpl
inc
add
jns
push
sub
adc
jns
pop
(bad)
xor
push
fcomi
cmp
pop
aam
inc
add
inc
jae
mov
and
xlat
pop
repnz
dec
mov
ror
fld
les
mov
mov
gs
test
xor
aam
leave
test
jbe
sbb
xlat
movs
inc
inc
stos
mov
push
xor
dec
mov
enter
test
sub
rol
idiv
and
cmp
pop
daa
sbb
cdq
pop
aaa
imul
mov
push
popa
(bad)
and
movs
es
xor
xchg
xor
daa
sbb
(bad)
mov
adc
inc
xchg
arpl
movs
pop
dec
lahf
fnstsw
sub
mov
(bad)
jle
add
push
mov
stos
(bad)
sahf
outs
cmp
dec
daa
and
xlat
mov
sbb
jle
add
sub
ins
lods
imul
shr
outs
adc
jb
mov
aaa
dec
dec
sub
fcomp
shl
pop
retf
loope
into
sub
mov
push
popf
mov
inc
idiv
ror
out
and
add
mov
pop
hlt
cmp
mov
hlt
mov
ja
lds
sub
in
enter
popf
add
stos
dec
mov
(bad)
mov
cs
pushf
pop
or
sbb
call
cmc
jl
arpl
adc
inc
ins
rcr
out
nop
mov
pushf
sub
inc
mov
pop
or
push
dec
leave
jno
in
movs
mov
stc
call
ror
dec
fwait
add
mov
push
jl
or
(bad)
adc
mov
or
inc
mov
mov
jmp
pop
stos
cmp
adc
(bad)
mov
push
lea
dec
sub
cmp
cmp
xchg
lods
jmp
push
or
sbb
mov
stos
nop
cmp
push
sub
pop
adc
cwde
push
inc
test
movs
adc
jmp
dec
inc
hlt
sbb
cld
frstor
dec
push
push
dec
iret
mov
pop
inc
mov
aas
arpl
push
push
inc
xchg
inc
or
cmc
cmps
jge
int
add
repnz
not
and
push
push
test
in
pop
cwde
pop
pushf
rcl
push
movs
pop
dec
sub
ret
data16
and
and
pusha
iret
loop
adc
cmp
push
jmp
out
mov
pextrw
mov
cmp
adc
push
or
test
sbb
(bad)
sub
push
and
aas
and
in
retf
sbb
xchg
xchg
sbb
in
mov
mov
pop
repnz
jno
mov
(bad)
fwait
inc
jl
pop
out
sbb
cmps
cwd
ins
push
in
(bad)
xlat
leave
fistp
dec
sti
lock
cmp
cmp
mov
int3
ins
push
lea
rcl
popa
loope
imul
pop
pushf
not
xchg
cmp
cs
inc
pop
leave
(bad)
fdivr
push
(bad)
lods
sub
pop
dec
xchg
lahf
pop
fmul
push
or
and
enter
ret
pop
(bad)
add
popa
sbb
jge
pushf
jnp
mov
add
sbb
in
jb
mul
iret
(bad)
(bad)
into
xchg
ficomp
or
and
popf
push
fwait
add
jl
cdq
(bad)
and
ins
ja
xchg
ror
ret
jge
sar
fldenv
dec
mov
mov
pop
addr16
sbb
dec
mov
pop
cdq
rol
inc
dec
xor
mov
ds
loop
cld
push
imul
out
push
fmul
cmp
push
fimul
xchg
fdiv
jae
pop
loope
mov
jg
mov
js
or
or
(bad)
adc
mov
adc
inc
comiss
mov
push
enter
mov
aam
xchg
call
adc
jge
adc
or
shl
add
dec
mul
pushf
stos
add
mov
xchg
pusha
data16
fcomp
out
mov
dec
out
pop
fcmovnu
adc
call
sub
pop
add
sub
cmp
and
ja
lahf
rcl
or
push
dec
call
pop
push
inc
fwait
in
rol
je
ja
cmp
repnz
sti
sub
sbb
xor
and
outs
sbb
sbb
xlat
fcmovbe
dec
and
add
xor
cmovp
and
in
ins
push
mov
xor
and
mov
pop
daa
lods
aad
sbb
fst
pop
jmp
fwait
or
xchg
or
cmps
cmp
mov
xor
and
pop
sbb
mov
hlt
ins
hlt
mov
enter
xor
adc
bound
adc
xchg
xchg
xor
mov
push
push
dec
dec
lods
add
sahf
sahf
mov
mov
add
bound
arpl
in
stos
dec
sbb
jae
or
adc
outs
stos
and
pop
mov
ficomp
dec
(bad)
inc
cld
scas
test
hlt
data16
int3
push
push
cld
stos
sbb
xor
mov
and
or
push
dec
les
mov
adc
hlt
idiv
fcomp
add
xor
adc
push
pop
jno
mov
push
pop
mov
lahf
jo
xchg
imul
in
lds
pop
sub
popa
aad
std
mov
dec
push
ficomp
mov
mov
mov
idiv
jp
mov
in
mov
xlat
or
push
inc
arpl
in
imul
aam
push
ins
lds
and
push
push
pop
or
sti
call
add
int3
add
pop
push
sbb
test
cdq
inc
cmp
mov
lock
and
jg
xchg
xor
mov
pushf
mov
push
add
ins
pop
dec
addr16
fst
ss
in
in
nop
dec
test
pop
outs
out
fnstenv
jl
xor
ret
nop
int3
mov
fwait
dec
nop
sub
cmp
or
mov
pop
dec
mov
pop
loope
or
inc
jbe
(bad)
retf
call
popf
sbb
and
bound
out
mov
push
xchg
or
inc
push
sbb
ret
mov
push
shr
fcomp
jmp
xlat
xchg
xchg
out
cdq
sbb
mov
mov
mov
push
daa
or
inc
scas
loope
pop
or
xor
test
jmp
stos
sbb
jecxz
cmc
aam
loope
inc
neg
push
cmc
fstp
(bad)
sbb
push
and
and
cmp
push
mov
arpl
lods
dec
and
stos
(bad)
mov
mov
xchg
ins
add
aad
out
sub
sbb
sbb
xor
jmp
aam
ret
inc
pop
xchg
inc
dec
fcmovnu
aam
add
loop
jl
lods
and
and
and
mov
pushf
pop
int
(bad)
mov
cmps
sti
fistp
or
lods
sar
ret
(bad)
inc
pop
or
or
rcr
xchg
sti
nop
cmps
enter
lock
push
push
mov
loopne
mov
setle
sbb
push
push
jecxz
push
mov
mov
outs
leave
jne
in
xchg
sub
mov
popa
int
es
jnp
repnz
jo
push
es
add
fisubr
call
jmp
rcl
jbe
mov
push
or
out
test
dec
or
jae
in
and
xor
nop
out
add
out
xchg
outs
xor
add
pop
sti
sbb
(bad)
aas
(bad)
sub
pop
and
sets
sti
add
mov
jge
iret
cwde
sub
sub
nop
jmp
adc
(bad)
or
xchg
pop
push
daa
sub
fsubr
das
pop
sti
cli
pop
add
pop
mov
dec
gs
in
dec
jecxz
shl
(bad)
pusha
fmul
mov
jno
xor
push
xor
push
mov
or
adc
jno
inc
push
fwait
xchg
mov
jae
cmp
inc
(bad)
jecxz
pop
xor
dec
dec
test
jg
mov
out
pop
mov
pop
xlat
(bad)
sub
sub
jo
add
and
inc
xor
mov
aad
sbb
inc
dec
lods
mov
(bad)
or
int
mov
pushf
pop
retw
retf
icebp
mov
imul
lock
mov
xchg
pop
inc
outs
fwait
adc
les
stos
mov
fcom
lods
and
or
push
jns
and
and
push
mov
pop
inc
ins
mov
shl
sub
sar
(bad)
daa
not
int3
xor
fs
cmp
sbb
and
adc
mov
pop
mov
push
pushf
add
cmp
aaa
mov
ficomp
pop
fisttp
mov
mov
loope
jmp
test
loope
pop
pop
(bad)
sbb
mov
mov
mov
outs
dec
push
ja
mov
fcmovu
pop
or
loopne
loop
in
pop
int3
fwait
retf
cdq
mov
neg
outs
in
mov
mov
mov
pop
jge
xchg
xchg
xor
mov
xlat
loop
inc
out
dec
inc
dec
je
add
and
out
dec
test
fidivr
inc
rol
fidiv
xchg
call
fist
lahf
pop
ret
stc
in
push
adc
xchg
mov
and
cmp
push
push
fbstp
cmp
(bad)
nop
push
ins
push
adc
cmpxchg
xchg
mov
shl
enter
xlat
dec
repz
mov
setle
sbb
aad
fisub
cmp
ss
xchg
in
sub
scas
mov
arpl
adc
pop
shl
jmp
rol
mov
mov
pop
pop
div
int3
pop
jmp
lahf
imul
and
adc
dec
imul
pushf
add
push
sbb
mov
jecxz
pop
or
aaa
pop
xor
xor
in
add
mov
lods
or
cmp
leave
xchg
push
stc
mov
fstp
enter
fst
mov
popf
std
dec
jmp
cmp
inc
dec
nop
mov
sbb
xchg
in
test
(bad)
push
inc
dec
fst
mov
sub
xlat
repz
sub
mov
and
retf
icebp
jge
iret
push
out
nop
push
lods
aas
hlt
stos
inc
xor
mov
or
xchg
call
pop
add
out
jp
aam
fs
call
pop
sbb
sub
(bad)
mov
iret
adc
mov
pop
sbb
mov
mov
xchg
and
adc
xchg
fwait
inc
in
add
xor
fdiv
xchg
aam
lock
xor
jne
imul
lea
sbb
mov
mov
add
clc
pushf
pop
push
adc
fcmovbe
aad
fimul
and
cwde
pop
js
int3
idiv
addr16
push
sar
push
test
fwait
and
pushf
push
cs
dec
clc
retf
cmps
push
mov
dec
sti
sub
cmp
jne
ss
imul
ror
fild
jmp
mov
idiv
stos
pop
or
in
rcr
inc
jnp
idiv
sub
pop
mov
or
fs
xchg
(bad)
in
lods
jge
cmp
push
dec
and
sbb
dec
ror
pop
cmp
xchg
lock
push
inc
dec
lods
pushf
mov
vpackuswb
dec
jnp
icebp
imul
adc
je
sub
rcr
xor
pop
adc
pop
je
pushf
pushf
sbb
ins
sahf
dec
sbb
pop
mov
icebp
mov
push
lods
pop
loope
test
push
xor
cli
and
mov
pop
les
xchg
xor
lds
test
sub
pushf
xchg
mov
mov
dec
xchg
adc
xchg
rcl
pop
je
pop
push
mov
retf
pushf
lea
xchg
xchg
lods
sbb
mov
cmp
aad
dec
push
add
mov
mov
dec
add
push
pop
xchg
jns
ins
mov
sbb
jae
push
lds
cmp
sbb
adc
cs
call
fcomp
mov
mov
addr16
fst
xor
pop
out
pop
lods
mov
pop
push
ret
(bad)
push
ret
leave
pop
retf
pop
jne
ss
mov
out
mov
mov
test
out
push
pop
mov
push
jnp
xchg
pusha
ficom
cmp
les
mov
sub
aaa
cmps
ins
loopne
push
addr16
xchg
xor
es
and
xchg
lock
mov
int
jl
lea
push
adc
push
js
sbb
adc
(bad)
pop
pop
and
pop
cmp
(bad)
in
mov
sub
cmps
pop
pushf
dec
mov
loope
iret
retf
test
mov
out
test
call
cmp
xor
pop
scas
sub
dec
cs
push
fwait
xchg
mov
mov
cmp
loope
dec
sbb
mov
popf
(bad)
cs
dec
sbb
scas
inc
iret
add
scas
sub
sub
stc
cmp
xor
pushf
adc
lods
mul
std
call
xor
and
pop
ficom
loopne
jmp
fsubrp
jl
test
call
dec
mov
jae
push
loop
out
xchg
dec
test
pop
loop
jae
xor
dec
out
xchg
fwait
cmp
lahf
mov
sub
in
push
lds
popf
ins
jbe
ret
jmp
fbld
dec
ja
jmp
dec
inc
ins
xchg
add
adc
test
adc
xchg
sbb
movs
call
mov
sbb
cli
sub
adc
mov
cmp
and
xchg
sub
pop
mov
js
cwde
cmp
int3
arpl
mov
aad
stos
ficom
lock
push
rcl
in
pushf
dec
repz
into
loopne
inc
mov
jecxz
rol
outs
in
and
xor
dec
inc
jno
cwde
mov
mov
mov
pushfw
xchg
lock
lea
lahf
mov
add
imul
pop
loopne
(bad)
fdecstp
xor
fidivr
push
enter
lea
in
mov
xor
lahf
jg
mov
fdivr
pop
xor
shr
jbe
xor
les
stc
loope
stos
sbb
jle
mov
cdq
pop
ins
add
shl
je
repnz
add
shr
jmp
frstor
imul
lds
add
dec
cmps
cwde
(bad)
imul
aad
mov
mov
in
sbb
xor
dec
mov
cmp
ds
pop
inc
cmp
and
pop
pop
mov
(bad)
push
cmp
cmp
fisub
push
sub
loop
jbe
les
iret
fwait
int
int3
mov
inc
pop
sti
cmc
fldcw
int3
inc
dec
mov
mov
push
rcl
and
adc
adc
pop
sbb
mov
cmc
aam
iret
adc
mov
mov
(bad)
(bad)
push
mov
xor
stos
jnp
clc
xchg
retf
xor
jmp
shl
push
cwde
mov
popf
mov
dec
mov
push
sar
daa
and
xchg
retf
fdiv
add
jmp
or
jp
stos
add
jbe
xor
loopne
jns
push
cmp
mov
les
dec
dec
loope
int3
add
pop
stc
cs
sar
and
or
outs
aad
loop
mov
sub
(bad)
mov
adc
sar
push
push
jg
add
jmp
test
mov
in
pop
aam
ja
stos
push
call
mov
xchg
div
ds
xchg
(bad)
loop
sbb
(bad)
dec
dec
xchg
ja
mov
xor
xor
ss
xchg
jp
inc
mov
out
dec
cld
fiadd
push
(bad)
mov
cmp
xchg
pop
loopne
in
stos
lods
test
(bad)
mov
push
dec
enter
les
in
cmp
and
test
jbe
frstor
scas
or
jae
mov
xor
sbb
mov
arpl
lahf
jl
ins
out
out
fucomp
imul
xchg
xchg
mov
push
sub
mov
iret
stc
push
pop
jb
or
xlat
outs
in
mov
mov
out
(bad)
out
call
mov
dec
sbb
push
mov
repnz
not
call
dec
or
fs
fbld
retf
loope
loopne
cdq
push
dec
mov
mov
sub
pop
pop
test
daa
in
jne
aas
mov
loope
push
shl
fcomip
cwde
(bad)
mov
push
out
sar
xchg
jmp
das
inc
mov
lahf
outs
and
pop
mov
data16
inc
xchg
inc
mov
jno
icebp
push
ficomp
int
sub
mov
cmp
icebp
fsub
sbb
dec
add
sar
mov
sbb
(bad)
mov
out
mov
sbb
mov
inc
add
jmp
cli
aas
ffree
fidivr
add
and
cmovge
(bad)
rol
dec
in
xchg
(bad)
fcomp
in
inc
push
adc
cmps
pop
jle
sub
and
iret
test
pusha
and
stos
add
int
lods
or
outs
pop
fistp
popa
int3
dec
dec
ss
in
pop
aaa
imul
push
ja
rcl
fisttp
inc
fild
addr16
mov
imul
xchg
inc
lock
or
ins
inc
xor
mov
(bad)
stos
outs
mov
aam
and
adc
dec
fcomip
fnsave
pop
enter
dec
shr
dec
xlat
sbb
in
call
or
sub
aaa
repnz
cmp
xchg
loopne
aas
aaa
or
dec
fmul
or
aam
fcmovb
jmp
push
push
or
lds
adc
or
sbb
ret
shl
and
js
pop
pop
sub
sti
out
call
xchg
punpcklbw
fsubr
xchg
fs
aad
sub
sbb
popa
loope
repz
mov
mov
lods
out
out
xchg
jecxz
xor
cld
jb
into
push
lods
pushf
mov
jmp
mov
sub
pop
jne
lods
jno
dec
xchg
cmp
lods
scas
stos
scas
fcomp
loope
inc
add
sub
(bad)
sbb
rdtsc
and
idiv
mov
adc
push
stos
loopne
and
fistp
inc
cdq
fwait
movs
pop
mov
ja
lods
icebp
stos
les
mov
in
aam
or
icebp
pop
out
test
sbb
inc
mov
add
xchg
or
rcl
lods
push
pop
jle
outs
or
test
xor
push
xor
aad
ficomp
stos
sub
dec
push
xchg
or
sub
mov
inc
or
inc
int
dec
xchg
cmp
cmp
rcr
pop
mov
inc
jmp
aaa
mov
mov
inc
stc
mov
mov
xchg
daa
fmul
sahf
or
jbe
dec
leave
adc
xchg
sbb
int3
xor
pop
leave
xchg
or
mov
cmp
movs
or
ror
aad
ftst
push
in
cmp
lea
mov
cmp
adc
cmp
loope
adc
fdiv
jecxz
sti
add
mov
popa
lock
sbb
bound
jmp
mov
push
loopne
xchg
lahf
cmp
dec
imul
push
aam
jp
ret
xchg
mov
add
test
mov
push
mov
push
pop
adc
lods
daa
sbb
fadd
cs
pop
iret
cmps
xor
jns
inc
inc
call
push
rol
add
mov
(bad)
push
hlt
retf
shl
movs
cmps
test
pop
push
mov
mov
pop
cs
dec
out
mov
neg
push
jno
leave
mov
jg
jecxz
dec
xor
pop
fidiv
sub
sti
adc
dec
mov
and
punpckhdq
mov
jmp
mov
mov
jmp
cld
sahf
outs
sub
popa
pop
neg
inc
sahf
stos
or
icebp
lds
cmps
clc
and
xchg
in
adc
fcomp
in
push
es
in
es
cmc
cmp
in
mov
xchg
vorpd
jge
fld
mov
adc
sbb
jae
inc
mov
shl
jge
hlt
scas
fwait
or
and
xchg
jb
call
lea
and
cdq
scas
test
jp
iret
inc
les
sbb
call
cmp
xchg
fs
mov
xlat
jge
ja
xchg
jno
adc
addr16
in
jge
sahf
es
out
rol
jp
pop
loop
stc
pop
ja
rcl
pop
pop
rcl
inc
pop
sub
xor
pop
mov
movs
in
xor
mov
xchg
sbb
dec
dec
loope
cmp
mov
sub
sbb
sub
xchg
fmul
push
add
add
inc
xchg
xchg
inc
xor
scas
cwde
mov
dec
int3
mov
dec
bound
inc
jl
into
xlat
neg
xchg
push
xchg
add
pop
daa
and
daa
sbb
add
(bad)
arpl
jnp
sti
push
ret
ror
jp
jne
js
jne
and
xchg
cmp
mov
push
das
mov
add
inc
sbb
test
mov
sbb
sub
sub
cmp
sbb
out
push
lods
mov
jns
rcl
rcl
jmp
retf
jmp
and
loopne
das
adc
xor
jg
pop
and
fst
pop
xchg
loop
fdivr
pop
subps
push
sub
mov
adc
and
and
mov
ins
iret
adc
lea
xor
and
sahf
daa
inc
dec
dec
pop
add
jge
js
or
pop
or
rol
in
jle
fstp
dec
xchg
fsubr
jmp
xlat
or
loop
cmp
frstor
nop
stos
xchg
jns
jl
in
jge
les
mov
call
fnstcw
fadd
jge
(bad)
inc
push
mov
cmp
mov
repz
in
and
(bad)
imul
cmp
test
ror
in
jae
jecxz
cwde
inc
or
aam
vcvtsd2si
xor
test
mov
(bad)
(bad)
fisttp
rcr
daa
(bad)
cmp
outs
sub
or
sbb
mul
shr
ins
lock
sub
cmp
mov
gs
add
cmp
fisub
icebp
push
push
dec
out
sar
cld
enter
adc
loop
push
sahf
push
or
pop
sub
std
pop
inc
mov
pop
addr16
jnp
xchg
mov
shr
mov
int
int3
sbb
push
test
rcr
cmp
add
pop
mov
shr
cs
push
es
xchg
mov
sbb
ror
arpl
jae
pop
ds
xlat
loope
xor
cmp
push
mov
mov
xchg
or
mov
inc
pop
ss
pop
fistp
mov
scas
int3
in
adc
test
mov
pusha
inc
shl
jmp
je
mov
fisub
push
or
mov
xor
add
fmul
(bad)
not
jae
inc
add
sti
dec
mov
pop
jle
xor
or
xor
pop
mov
cs
push
sub
push
retf
aaa
dec
leave
add
call
aad
mov
std
sbb
pop
jecxz
mov
inc
pop
pop
jl
ins
ja
mov
mov
das
push
inc
inc
sub
and
enter
stos
cmps
sbb
mov
xchg
ret
jnp
sbb
sbb
xchg
pop
ror
add
cmps
arpl
loopne
xor
ret
sbb
xlat
jns
aas
lds
xchg
xchg
popf
jl
jl
sbb
xchg
push
sbb
mov
or
xchg
sbb
ret
jecxz
lods
xchg
pop
ja
loopne
push
inc
add
cmp
add
pop
movs
fdivr
cld
jno
sbb
or
cmp
xlat
sar
arpl
push
xchg
(bad)
retf
cmp
test
test
push
out
add
mov
push
fs
cld
sbb
div
push
fs
pop
mov
inc
sbb
in
(bad)
cmp
push
cmp
(bad)
fs
ror
cmp
sahf
inc
aaa
xlat
sbb
int
pop
sbb
mov
psrld
scas
sbb
fisubr
cmps
inc
in
and
aaa
stos
popf
outs
int3
jmp
mov
hlt
mov
cmp
adc
add
jmp
cmp
push
sub
xor
cmp
inc
scas
xor
mov
fstp
retf
iret
aad
adc
pop
mov
and
jne
mov
add
sub
jle
retf
lock
icebp
jbe
jns
out
call
inc
pop
adc
push
shr
test
jge
imul
dec
sahf
out
loope
push
fimul
mov
pusha
lea
hlt
repnz
sbb
pop
fstp
fs
or
jbe
jo
ja
ror
mov
xchg
or
mov
dec
inc
push
xor
lods
aam
pop
cmp
push
fsubrp
arpl
shl
fwait
ins
ror
sub
dec
scas
push
inc
cli
jnp
mov
mov
fmul
and
lahf
lahf
movs
jns
cmp
dec
jmp
fwait
jl
rcr
shr
xchg
mov
xor
retf
(bad)
rcl
sub
mov
mov
shl
aas
retf
lock
mov
add
es
pop
sub
fisttp
enter
xor
data16
cmp
leave
arpl
repnz
sbb
sar
push
nop
xor
ret
adc
jle
loope
(bad)
(bad)
das
push
and
sar
popf
cdq
push
dec
rcr
cld
xchg
(bad)
xchg
aaa
pop
shl
dec
pop
sbb
aad
push
xor
xor
stos
(bad)
repnz
mov
in
(bad)
icebp
pop
mul
div
xchg
xchg
sbb
ins
clc
jge
out
inc
neg
rol
push
pop
loop
xchg
loopne
movs
test
pop
fnstsw
ret
ins
int
mov
pop
xor
push
clc
mov
mov
fcomp
or
pop
jns
mov
pop
mov
(bad)
sbb
dec
adc
mov
fxch
cdq
or
adc
rol
push
jno
in
sbb
sub
div
push
xchg
or
ja
push
lea
fldenv
(bad)
lods
and
mov
push
sub
fwait
gs
mov
mov
xchg
mov
pusha
out
cmp
jno
cmp
sub
or
mov
std
sub
mov
rcl
mov
push
imul
pop
cmp
sbb
js
sbb
jl
jns
cmc
jecxz
shl
cmps
inc
cs
ins
mov
scas
mov
sub
xchg
pop
xchg
and
stos
outs
ret
jno
stos
retf
push
jb
out
adc
mov
mov
dec
mov
mov
pop
ins
fcomp
cmp
test
xchg
psrad
adc
and
movs
retf
mov
lock
ret
inc
ror
and
xchg
out
push
jmp
mov
push
repz
mov
sbb
xchg
stos
aaa
adc
fcomp
push
ficom
cmp
pusha
xor
mov
adc
das
mov
cmp
cmp
mov
jnp
mov
push
stos
mov
or
xor
mov
not
jo
pop
fyl2xp1
daa
sbb
pop
stos
xchg
jl
push
xchg
pop
jle
fsub
cwde
inc
mov
scas
shl
jmp
(bad)
mov
scas
cs
scas
mov
push
sub
ins
mov
fwait
push
ds
mov
rol
(bad)
call
rcl
inc
mov
add
arpl
push
sbb
nop
aaa
xor
cmp
std
or
mov
xor
test
mov
jne
mov
adc
pop
mov
(bad)
push
shl
sbb
cdq
inc
mov
ss
sbb
sub
pop
mov
sub
and
mov
sbb
add
lods
sbb
(bad)
fst
scas
movs
out
pop
lahf
jae
aas
xchg
xor
jbe
out
(bad)
push
(bad)
imul
xchg
arpl
loop
dec
ins
dec
pop
xor
icebp
mov
out
push
pop
loope
pop
cmp
lods
shl
adc
sub
xor
je
scas
cdq
adc
jne
cmps
stc
into
jmp
mov
mov
mov
push
rcr
es
mov
hlt
mov
mov
scas
add
jae
test
mov
xchg
xchg
add
fldcw
mov
xor
adc
es
mov
push
ror
jle
add
and
std
lods
pop
mov
inc
pop
rcr
xor
repz
mov
fiadd
shl
mov
aam
jno
pop
scas
add
sub
out
pusha
xchg
inc
scas
retf
inc
and
sbb
sbb
popf
lds
(bad)
retf
jecxz
or
and
and
aad
das
push
test
cmp
sub
xlat
addr16
popa
push
mov
adc
ja
call
cmc
imul
leave
(bad)
mov
sub
add
mov
addr16
icebp
dec
loopne
icebp
and
fmul
rcr
inc
mov
jae
cmp
icebp
jl
xor
mov
lods
dec
cmc
test
xor
sub
popf
fist
scas
stc
lods
ins
sub
sbb
out
cli
adc
hlt
cmp
pop
cmp
push
or
jb
(bad)
pop
pop
mov
imul
outs
sbb
(bad)
and
aam
lds
int3
fcomp
imul
inc
xor
call
mov
mov
sub
lock
mov
scas
repz
xchg
ret
mov
fnstenv
cmps
sbb
sub
in
lahf
mov
mov
int3
loopne
mov
iret
sbb
push
xchg
out
stos
enter
data16
adc
and
lock
js
push
mov
dec
sub
inc
jae
lahf
inc
es
jo
(bad)
add
xchg
mov
test
dec
mov
push
fs
and
mov
mov
in
inc
ror
dec
bound
cmp
fcmovb
xchg
jo
fwait
mov
pop
fmul
test
push
sbb
outs
sbb
fisubr
call
push
and
pop
mov
or
nop
pop
scas
push
outs
inc
dec
cmp
jmp
jmp
dec
mov
aam
sbb
inc
cmp
cld
jne
jmp
test
(bad)
rcl
jns
mov
pop
push
test
sub
mov
pop
aad
add
jne
loopne
bound
dec
pop
cmp
sbb
ins
sbb
cwde
ret
sub
inc
ret
out
dec
lea
sbb
pop
(bad)
out
shr
and
cdq
sbb
cmp
adc
and
or
mov
jmp
mov
in
inc
(bad)
(bad)
ror
pop
aam
out
push
pop
push
cmp
push
movs
mov
and
jbe
inc
fwait
ror
jmp
loope
adc
add
pop
or
xchg
sub
dec
test
mov
dec
scas
pop
jmp
es
xor
in
cmp
out
push
aas
mov
enter
and
sub
add
fnstsw
mov
xchg
sub
cs
push
mov
dec
add
lods
push
aas
jmp
cmp
(bad)
cmp
(bad)
sbb
dec
iret
jle
mov
sbb
call
xchg
gs
adc
(bad)
dec
xchg
pop
or
fist
or
xor
dec
push
dec
pop
sbb
mov
not
adc
mov
xchg
int3
(bad)
addr16
enter
rol
jns
icebp
push
fwait
cmp
out
movs
cmps
push
dec
pop
mul
pop
inc
sar
adc
mov
dec
xchg
pop
or
(bad)
jmp
and
out
(bad)
fiadd
pop
lds
xor
pop
aam
mov
ins
fcomp
lods
jmp
fdiv
popa
push
or
pop
dec
ret
pop
nop
div
jl
stos
and
xchg
sahf
sbb
fcom
pop
inc
sub
and
stc
pop
leave
xchg
jnp
imul
fdivr
sbb
mov
inc
call
sub
aad
pop
in
sbb
loope
loopne
data16
add
push
sub
sar
inc
adc
xchg
pop
or
mov
btc
jae
push
(bad)
(bad)
jnp
pop
lods
les
iret
jl
fstp
ss
loopne
es
mov
add
adc
cmp
stos
shl
fidivr
out
cmp
push
inc
mov
pop
(bad)
enter
fdiv
cwde
neg
out
xchg
ins
fwait
pop
icebp
xchg
in
pop
pop
add
fdivr
add
or
xchg
pop
add
pushf
idiv
jns
xchg
adc
xchg
sar
sub
adc
jmp
fimul
push
(bad)
inc
cwde
stc
mov
sub
(bad)
dec
or
jmp
rcl
xchg
xlat
aaa
jae
shl
repnz
loop
test
test
mov
and
adc
out
mov
call
fmul
ss
sbb
lock
push
rol
sbb
rcl
xor
mov
sub
std
dec
leave
sub
cmp
adc
xlat
retf
sti
mov
or
shr
xor
cmp
pop
xor
cdq
pop
or
sbb
lea
imul
sti
mov
cli
mov
push
lock
mov
mov
in
mov
push
or
(bad)
pop
adc
jg
mov
fidivr
call
or
mov
inc
rcl
in
lock
ret
and
push
aaa
mov
mov
lock
repnz
scas
test
lea
add
popa
aam
jne
xor
inc
jmp
mov
(bad)
xchg
xor
jecxz
loopne
mov
push
mov
or
pop
pusha
in
out
in
leave
ret
xchg
mov
mov
pop
sbb
sar
pop
mov
enter
pop
and
mov
pop
inc
stc
iret
or
test
jecxz
pop
cmp
mov
mov
enter
cmp
adc
mov
fist
mov
sbb
gs
into
stos
mov
and
dec
pop
mov
sbb
push
sub
pop
cmp
adc
out
out
xor
(bad)
sahf
push
dec
mov
(bad)
les
and
pop
push
in
sub
jnp
pop
push
jmp
dec
dec
xor
aaa
push
mov
cli
mov
test
pop
inc
and
push
iret
rcl
test
xor
push
jns
jno
test
inc
cmp
gs
push
pop
ins
dec
mov
sbb
sub
aaa
or
or
jl
jge
in
and
mov
mov
mov
mov
mov
scas
ss
and
pop
jecxz
jl
mov
push
std
sub
xor
adc
fcom
lahf
cmp
pushf
sub
mov
push
icebp
or
or
xchg
fwait
cld
sub
xor
xor
xor
cs
stos
aam
and
fild
pop
out
adc
mov
pop
dec
cmp
fnstenv
cdq
or
pop
sub
mov
push
sub
arpl
cmp
fisttp
in
mov
fld
(bad)
jmp
xor
and
or
sbb
mov
jns
mov
pop
lds
jp
pop
or
cmp
in
push
cmps
test
xchg
in
into
pop
jmp
sub
xor
scas
(bad)
mov
clc
xchg
mov
mov
aam
jge
xchg
mov
push
mov
jl
pop
xchg
ins
mov
jnp
(bad)
adc
mov
pop
stos
jnp
fwait
std
inc
and
jnp
sub
pop
sbb
iret
ret
aad
test
popf
mov
jno
clc
push
xchg
int
in
pop
cwde
and
aam
push
mov
sub
(bad)
add
and
outs
stos
cmp
mov
xchg
scas
pop
mov
dec
out
sti
data16
pop
inc
push
fwait
sar
dec
sbb
cmc
jmp
aam
sbb
fist
popa
int
dec
les
jb
sub
fisttp
pop
mov
ret
push
and
mov
fdivp
sub
ins
sub
and
mov
out
les
vshufps
mov
xchg
add
xchg
lock
mov
jl
sbb
idiv
out
xchg
mov
aaa
dec
inc
mov
dec
pop
mov
leave
pushf
mov
push
jmp
dec
int3
or
cmp
inc
ins
and
popa
cmp
push
lahf
sbb
loop
pushf
xchg
sub
scas
push
cmp
push
cmp
xor
and
mov
sti
pushfw
sub
cmp
call
push
lds
push
out
ficom
mov
xchg
add
mov
mov
sbb
sti
in
dec
js
cmp
movs
mov
inc
push
pop
sub
sbb
pop
mov
push
mov
ret
ret
mov
pop
dec
rcl
mov
cli
xlat
int3
pop
mov
ins
pop
rcl
aaa
mov
stos
gs
inc
xchg
or
inc
mov
stc
int3
lock
arpl
xor
pop
pop
mov
add
sbb
adc
pushf
in
sub
je
pop
cld
jmp
sbb
and
gs
fnstcw
addr16
or
jmp
call
push
mov
jae
sub
push
loopne
je
gs
jne
jmp
or
jns
icebp
and
cs
sbb
lock
xchg
rcl
stc
div
fmul
(bad)
sub
dec
aaa
jne
push
dec
sub
imul
arpl
fnstsw
daa
sub
aas
dec
(bad)
jne
out
mov
pop
das
int
mov
(bad)
dec
iret
push
pushf
cmp
cmp
in
cdq
dec
mov
xchg
outs
cmc
fs
add
rcl
mov
mov
push
jmp
sbb
fwait
xchg
cmp
aad
test
popa
inc
mov
fist
scas
or
lds
movs
fcmovu
lods
out
aam
push
adc
jmp
adc
mov
mov
fcomip
cld
js
addr16
rep
dec
sbb
sub
add
xor
xlat
jbe
out
cmp
inc
or
mov
xlat
mov
ficomp
out
push
xor
pop
mov
dec
neg
retf
out
add
push
loope
xor
nop
dec
cs
ja
imul
push
push
mov
fs
cmp
xor
and
cmc
cmp
stos
pop
mov
cs
jbe
jne
popa
inc
jbe
ficomp
xchg
jmp
jne
push
test
movs
pop
arpl
ins
test
mov
shr
sbb
dec
mov
cmc
cmps
test
out
in
mov
rol
jl
cld
mov
fs
ja
je
repz
add
mov
out
test
outs
sub
dec
mov
mov
addr16
shr
mov
cmps
sub
call
std
inc
hlt
and
(bad)
cmps
scas
push
pop
lods
mov
xor
movs
dec
rol
cmp
leave
rcr
(bad)
sbb
ins
int
add
cmps
popf
sub
(bad)
(bad)
fstp
rcr
xor
stos
sub
lahf
mov
xchg
xchg
std
call
sub
pop
mov
pusha
and
inc
push
into
mov
lods
hlt
sbb
sbb
pop
adc
xchg
xor
loop
data16
call
mov
add
push
xor
dec
adc
mov
inc
xchg
adc
clc
bound
(bad)
ficom
pop
ds
inc
push
jmp
cmp
pop
or
add
and
shl
inc
pop
lods
adc
dec
mov
shl
add
mov
loop
push
int
cmps
data16
xchg
push
fst
push
xchg
les
adc
or
mov
cdq
push
retf
add
in
pop
cmp
xchg
mov
retf
ja
mov
mov
dec
push
call
lock
dec
mov
addr16
ja
inc
pop
push
aad
jo
dec
add
mov
js
mov
add
fst
xchg
out
dec
cmp
int
arpl
cmp
(bad)
(bad)
call
sub
scas
or
pusha
inc
sbb
pop
mov
or
mov
enter
adc
push
icebp
movs
jmp
cmp
imul
enter
inc
mov
gs
loopne
ja
rcl
mov
mov
(bad)
hlt
cdq
ror
inc
outs
ror
int3
cmp
jmp
pop
leave
jg
inc
in
pop
jno
call
adc
jbe
sub
sub
arpl
daa
lods
jle
add
rcr
lods
mov
xor
leave
sar
shl
cmc
sub
jae
dec
out
fst
cmp
scas
rol
cwde
pavgb
pushf
add
pop
or
imul
fcomp
aas
add
sub
rol
xor
jnp
popa
and
xor
xchg
push
jno
xchg
and
mov
test
sub
daa
adc
dec
sbb
xor
inc
jecxz
in
cmp
test
in
jae
or
(bad)
repnz
clc
mov
sbb
mov
cmp
sub
jae
sbb
xlat
fstp
mov
mov
push
mov
xchg
cmc
or
mov
jmp
mov
pop
xchg
pop
inc
arpl
mov
(bad)
aas
ror
inc
stos
cdq
adc
xor
clc
lods
jno
xchg
leave
stos
jno
ret
sbb
sub
imul
mov
cli
push
dec
jecxz
mov
lahf
outs
sar
add
pusha
test
xchg
into
sub
sub
or
and
(bad)
adc
pushf
push
add
cld
pop
sahf
sbb
inc
push
iret
neg
imul
mov
add
pusha
xchg
dec
adc
in
jge
inc
loop
push
add
into
(bad)
cmp
pop
add
sub
and
pop
cmp
add
pop
dec
bound
push
mov
arpl
mov
inc
jae
shl
push
adc
xchg
lods
in
mov
pop
ins
add
or
repnz
loope
sub
test
aam
xchg
nop
rcl
and
rol
dec
fsub
xchg
push
push
dec
sub
xor
sub
mov
fdivr
test
push
push
dec
into
cwde
outs
jge
cmp
or
inc
inc
test
mov
push
or
jmp
mov
psrlq
shr
mov
lock
push
div
loope
xchg
pop
not
fdivp
cmps
jnp
xor
mov
and
ja
mov
fmul
mov
fistp
mul
imul
mov
mov
push
js
in
pusha
int3
sbb
push
jbe
enter
stos
pop
rcl
outs
sub
enter
loopne
push
jo
pop
cwde
adc
inc
mul
jb
stos
xchg
adc
xchg
jb
(bad)
mov
push
cld
sbb
mov
das
test
daa
leave
jmp
xchg
or
xchg
dec
mov
das
cmpxchg
out
mov
rcl
push
sub
and
(bad)
and
test
dec
daa
push
imul
pop
mov
pushf
scas
fstp
mov
jp
test
mov
loope
cmps
mov
shl
dec
push
or
sub
sti
xchg
mov
dec
pop
bound
fst
sbb
into
cdq
sahf
xchg
sub
sbb
push
stc
dec
mov
inc
fadd
into
arpl
call
imul
inc
dec
mov
sub
addr16
push
lods
inc
test
mov
jecxz
loope
out
adc
mov
mul
adc
add
add
addr16
xor
popa
cmps
xor
fdiv
sbb
dec
mov
imul
daa
ds
movs
aam
ins
mov
in
stos
es
sahf
shl
popf
mov
jmp
cli
ret
call
pop
xchg
stos
repnz
xor
rcl
mov
pop
cmp
cdq
push
stos
adc
add
xchg
and
and
gs
in
aad
stos
imul
cmp
pusha
es
xchg
jno
dec
add
pop
aaa
jo
sbb
ins
adc
rcl
pop
sbb
xchg
(bad)
shl
xlat
mov
fstp
mov
sub
stos
(bad)
jge
arpl
outs
cwde
sbb
inc
pop
mov
rcl
mov
sti
push
ins
xor
mov
imul
(bad)
jg
cld
sub
arpl
cmc
inc
pop
gs
in
and
sbb
out
aaa
jecxz
aad
xlat
push
mov
imul
lds
inc
fidiv
jg
rol
dec
leave
enter
int3
rcl
or
sub
inc
pop
xchg
mov
sti
aam
mov
(bad)
lock
push
movs
pop
sbb
scas
stos
jo
push
dec
(bad)
imul
mov
pop
mov
mov
xchg
outs
daa
xor
xchg
jb
int
pop
pop
jno
cmp
repz
mov
std
adc
push
mov
cmp
xchg
fwait
and
xor
js
imul
iret
add
pop
dec
pop
mov
pop
out
jmp
outs
fst
cmps
mov
pop
sbb
xchg
cli
pop
dec
fild
jle
shl
pushf
ret
push
retf
mov
push
out
loopne
and
push
jp
(bad)
or
into
mov
pop
cmp
dec
sbb
adc
push
sub
test
pop
xchg
dec
(bad)
xor
(bad)
sub
mov
mov
fmul
xchg
(bad)
or
loopne
mov
cs
jae
mov
out
and
or
sahf
xchg
or
loop
mov
test
xor
cwde
mov
xor
xor
fsubr
cmps
mov
repnz
add
ficom
mov
mov
add
pop
shl
arpl
pop
xor
test
mov
and
dec
push
test
xchg
les
adc
pop
aaa
push
mov
es
int
test
shr
sbb
mov
std
add
inc
fs
inc
in
sbb
mov
dec
jmp
rcl
call
daa
imul
nop
add
pop
adc
stos
sbb
pop
mov
imul
lock
arpl
inc
xchg
xor
retf
mov
mov
sub
or
sbb
sbb
dec
add
es
pop
mov
xor
test
push
iret
leave
mov
dec
mov
(bad)
and
(bad)
push
jmp
or
mov
lock
and
adc
inc
jmp
mov
sub
mov
dec
dec
mov
dec
ds
or
or
stc
cmp
test
push
push
popa
ins
cmp
aad
dec
loop
sahf
pop
push
out
popa
shl
ds
fsub
shl
sti
mov
fadd
jb
xchg
test
mov
lods
(bad)
(bad)
nop
mov
lock
jg
out
retf
fldl2t
pop
mov
pushf
out
daa
xchg
int3
inc
rep
pop
mov
nop
shl
call
sub
ja
mov
not
inc
inc
inc
(bad)
mov
out
and
mov
fldcw
fnstsw
xchg
push
int
inc
jp
push
inc
mov
ins
dec
popa
xchg
retf
mov
cmp
stos
inc
stos
inc
jb
adc
pop
int
mov
push
jnp
cld
xchg
aad
xor
sub
mov
(bad)
xlat
xor
pop
in
adc
xchg
popa
jg
jb
jnp
icebp
mov
dec
iret
(bad)
scas
xchg
icebp
out
push
lahf
jge
adc
test
bound
xchg
mov
xchg
hlt
mov
rcl
test
add
iret
nop
mov
data16
pop
(bad)
movs
arpl
clc
jnp
out
push
push
cdq
lock
fstp
mov
icebp
push
movs
dec
imul
mov
stos
pop
out
shl
pop
das
jbe
xor
push
dec
fcomp
cli
fsubrp
cdq
push
pushf
and
call
and
mov
mov
lock
sti
jmp
mov
test
test
rcl
daa
mov
fwait
or
hlt
pushf
xor
test
aaa
(bad)
int
enter
fbstp
ja
hlt
lods
push
and
mov
pushf
arpl
push
and
pop
sbb
jmp
mov
push
in
sbb
rcl
fwait
mov
jmp
mov
or
leave
ins
xor
lea
push
shl
lahf
add
dec
add
pop
(bad)
sub
push
lods
cmp
cmp
loope
rcl
sub
mov
xchg
mov
xor
js
scas
cmps
xor
mul
and
icebp
fisub
cmp
sbb
dec
xor
fisub
mov
dec
cmp
imul
push
pushf
sbb
sqrtps
pop
dec
sti
sub
sub
dec
mov
or
mov
int3
popa
sub
jb
movs
pop
xor
push
inc
arpl
xchg
pop
sbb
mov
adc
je
fdivr
test
cmp
dec
test
xchg
pop
cmp
adc
adc
enter
fistp
push
dec
mov
sbb
fs
addr16
and
push
ret
mov
xor
dec
pop
sub
out
xchg
(bad)
xor
leave
mov
fadd
cmc
mov
jmp
fwait
push
leave
test
dec
call
sbb
repz
(bad)
adc
rcr
imul
adc
mov
mov
xor
or
cmovs
jno
mov
adc
xchg
call
adc
pop
das
imul
jo
push
hlt
and
gs
xlat
sbb
sbb
sar
and
gs
inc
adc
imul
dec
(bad)
hlt
pop
mov
jns
inc
xchg
inc
push
push
mov
and
scas
js
sub
or
pop
xchg
xor
aam
(bad)
(bad)
retf
mov
jne
mov
adc
xor
xor
and
pop
jmp
mov
mov
cmp
push
sahf
popa
popf
sbb
inc
call
scas
sti
push
in
fisubr
sti
pop
aam
xor
in
mov
in
adc
aam
(bad)
jbe
sub
xor
mov
ds
dec
mov
into
cld
je
pop
aam
std
or
test
push
out
dec
xor
loope
ss
sti
fwait
outs
xchg
mov
ds
stos
inc
or
imul
into
cmps
pop
ja
xor
clc
int3
js
xor
adc
leave
xchg
out
sub
not
adc
push
sbb
mov
push
repnz
adc
xlat
ja
cmps
dec
pop
enter
dec
scas
xor
push
push
pushf
mov
out
aam
or
mov
mov
dec
cmp
fstp
int
jl
pop
call
push
sub
push
jmp
lods
cld
add
(bad)
push
out
xchg
cs
sbb
sub
shl
jmp
mov
pop
dec
jno
adc
push
repz
popa
jne
cs
cwde
loop
dec
add
shl
mov
sbb
ret
stos
or
sub
out
stos
pop
mov
push
inc
dec
fstp
aad
out
adc
test
mov
lods
mov
fnstcw
sbb
sub
shl
cmp
mov
pushf
jl
jno
call
repz
xchg
movs
xlat
push
add
ret
test
retf
mov
xor
add
pop
pop
lock
cmps
sub
and
daa
mov
jg
push
inc
mov
mov
gs
add
mov
(bad)
sub
pop
cmc
ret
jae
jnp
ds
(bad)
(bad)
imul
fstp
sbb
pop
pushf
cmp
mov
fst
add
nop
lahf
hlt
psrld
loopne
push
sub
repnz
cli
jl
pop
mov
lahf
mov
add
outs
ja
ret
jge
loop
xchg
cmp
call
sub
push
dec
mov
push
shr
div
out
shl
sahf
xchg
xor
test
dec
cdq
rcl
pop
pop
and
add
in
or
mov
push
call
and
cmp
jmp
in
or
cmp
push
cwde
mov
sub
inc
pushf
dec
cmps
call
jne
mov
js
bswap
ficomp
int3
cmc
sub
adc
xor
cmp
in
sar
mov
mov
add
in
sbb
add
jbe
inc
jo
and
jp
cmp
and
(bad)
fistp
adc
cld
nop
jmp
mov
push
inc
push
data16
(bad)
cwde
mov
and
jge
jl
push
dec
sti
add
adc
jmp
lock
daa
adc
xlat
rol
stos
xchg
pop
stos
call
xchg
cmp
mov
push
iret
jge
sub
add
imul
xchg
mov
mov
xor
call
mov
je
ins
cwde
outs
repnz
out
push
pop
dec
dec
rcr
mov
mov
push
xor
out
imul
sub
mov
pushf
jp
sub
add
ss
sub
icebp
jl
push
add
cdq
loop
xchg
fisttp
xor
shl
ret
fwait
cdq
out
add
ficomp
xlat
lock
jnp
dec
retf
pop
or
rcr
lahf
inc
jno
rcl
call
xchg
sub
xchg
push
inc
popf
pop
loope
stc
test
xor
js
mov
ror
ret
push
imul
mov
maskmovq
neg
movs
(bad)
mov
lods
jmp
int
and
rcl
inc
xchg
fisubr
stos
mov
xor
adc
test
jmp
lods
dec
adc
push
jne
outs
aad
les
adc
aam
or
enter
fnstcw
aaa
(bad)
push
out
pop
xchg
outs
mov
imul
mov
(bad)
pop
daa
mul
loopne
(bad)
jne
sbb
out
add
jmp
or
sub
es
(bad)
cdq
xchg
push
enter
push
cmp
outs
dec
movs
and
push
addr16
push
or
stos
retf
out
xchg
cmp
xor
js
jnp
mov
div
push
pop
xor
jns
push
stos
out
add
push
jmp
jmp
add
xchg
test
mov
mov
xor
push
pushf
mov
cmp
inc
int3
fdiv
pop
cmp
stos
into
loopne
adc
push
push
enter
add
call
rol
pop
movs
mov
mov
pop
jbe
sub
inc
jp
loope
mov
int
imul
mov
out
mov
pop
add
lahf
xchg
xor
(bad)
(bad)
sub
das
xor
pop
in
fcomp
dec
dec
out
xor
es
pop
mov
clc
dec
mov
jl
dec
movs
enter
pushf
loope
cmp
shl
ror
adc
aad
imul
lea
leave
fild
or
pop
push
cs
xchg
push
cmp
loop
adc
leave
repnz
jns
or
and
cmp
lock
adc
dec
rcr
stc
fiadd
inc
xor
mov
arpl
cmps
dec
cli
stc
popa
mov
xchg
cmp
xlat
or
push
inc
inc
push
hlt
dec
es
mov
pusha
je
call
and
ins
inc
scas
test
call
cld
arpl
je
jmp
ror
mov
pop
not
xor
fmulp
pop
dec
add
in
xor
fstp
sub
dec
fs
fbld
repz
dec
cmps
inc
(bad)
pop
int3
rcl
jg
je
sbb
xchg
ss
mov
stc
xchg
inc
cmc
inc
fisub
repz
jnp
js
jmp
daa
mov
aam
sbb
fstp
mov
les
inc
sub
fisttp
push
call
(bad)
lock
dec
xor
arpl
enter
xor
pop
push
jmp
sub
fcom
test
(bad)
iret
loopne
jle
shr
pop
test
and
jp
dec
mov
shl
leave
push
sbb
or
push
cmp
or
or
(bad)
mov
das
sbb
jle
jle
stos
pop
xor
cmp
sbb
pop
push
pop
shr
hlt
mov
(bad)
dec
arpl
adc
aas
out
shl
cmps
iret
fstp
jo
add
lds
cmp
ror
mov
frstor
(bad)
pop
adc
jge
cmp
jno
dec
xlat
mov
pusha
xor
dec
add
aam
or
sbb
shl
mov
imul
mov
push
rcl
sub
out
and
cmps
mov
pop
int3
mov
or
dec
mov
test
adc
cs
in
pushf
or
and
ret
push
push
clc
outs
not
mov
addr16
hlt
jmp
inc
sbb
adc
mov
ja
or
pop
jnp
jne
xor
punpckldq
sub
mov
sbb
fcmovnbe
push
and
and
shr
clc
xchg
mov
sbb
add
xchg
rcr
loope
sbb
call
jo
xchg
sti
ja
mov
and
mov
fidivr
cmp
repz
jp
(bad)
push
mov
push
repnz
test
daa
jbe
sub
sar
aam
aaa
add
je
add
pusha
inc
push
and
adc
aam
cwde
rol
(bad)
jne
pop
or
xor
and
xchg
mov
imul
pop
outs
sub
dec
dec
xor
jae
sbb
out
(bad)
mov
fstp
add
cmps
mov
push
and
stos
dec
push
xchg
std
arpl
aam
add
out
push
shl
dec
add
cli
jno
call
push
ins
(bad)
mov
pop
mov
mov
out
add
fnstsw
mov
push
stc
bound
mov
aaa
adc
dec
(bad)
push
cli
xchg
dec
(bad)
leave
and
mov
or
xlat
sub
retf
jmp
pop
test
mov
(bad)
xchg
xor
pushf
lea
inc
fwait
std
mov
shl
fwait
in
adc
fstp
jo
aad
data16
cmp
stos
js
inc
(bad)
dec
lea
out
xchg
lds
sbb
enter
mov
mov
xor
push
pop
loope
retf
ss
cmp
clc
cmp
int3
xchg
mov
mov
aam
scas
ds
outs
and
rol
mov
ret
fisttp
fs
mov
aam
shl
retf
push
shl
aad
push
sbb
mov
fidiv
into
int3
repnz
and
ja
push
repz
push
cmps
sbb
daa
fdivr
dec
popa
mov
dec
aad
fwait
les
mov
ficom
mov
dec
mov
mov
dec
sub
jl
xchg
int3
fistp
imul
(bad)
in
sub
cmps
pop
xor
or
loopne
ror
cwde
or
mov
inc
test
movs
cdq
dec
stos
mov
sti
std
(bad)
stc
push
enter
mov
xor
jnp
sbb
(bad)
or
inc
dec
push
(bad)
les
xchg
or
jns
fild
call
rcl
add
enter
data16
mov
pop
adc
je
xor
sub
xor
xor
ficom
popa
push
dec
das
fcomp
aas
fcomp
adc
int3
xchg
sub
jb
pop
sub
(bad)
mov
xchg
loope
ficom
in
xchg
(bad)
sar
push
inc
or
cmp
ss
or
cmc
mov
nop
jecxz
fisub
(bad)
mov
(bad)
push
jmp
orps
xbegin
loopne
(bad)
jmp
ds
adc
rcr
jb
push
mov
mov
ror
fld
test
fwait
xor
adc
scas
mov
push
je
pop
pop
cmp
ins
ret
or
push
(bad)
out
mov
mov
inc
xor
(bad)
sub
dec
dec
loop
cmps
rol
test
sub
call
mov
mov
mov
sub
add
stos
mov
cmp
sbb
cmp
jmp
out
pop
inc
out
mov
retf
shr
xchg
pop
mov
lock
sti
mov
xor
fiadd
dec
sti
pop
test
fcmovne
inc
inc
jmp
jecxz
pop
adc
inc
cmp
out
js
mov
mov
dec
test
inc
adc
outs
or
push
push
hlt
test
ret
jbe
ja
sbb
xchg
xchg
lahf
push
loopne
pop
mul
mov
cs
pop
push
mov
stos
les
xchg
mov
mov
sbb
in
add
stc
(bad)
and
addr16
sbb
ins
xchg
stos
(bad)
shr
mov
not
punpckhwd
add
cdq
je
popf
mov
ins
pop
jle
jmp
fisub
dec
std
mov
add
in
fcomp
mov
sub
(bad)
pop
push
stos
add
cli
rcl
enter
inc
clc
sub
inc
aam
ret
inc
adc
jno
dec
jno
pop
(bad)
mov
stc
and
xchg
repz
ins
jnp
xor
push
test
push
jg
xlat
and
cmps
ins
(bad)
call
fiadd
retf
jmp
jbe
add
(bad)
jmp
into
push
je
push
bound
fadd
and
inc
call
(bad)
pop
pushf
push
jecxz
repz
xchg
mov
jge
push
movs
mov
jp
test
arpl
sbb
in
in
sti
cmc
mov
fs
xchg
sahf
ins
mov
jmp
aam
dec
jg
lock
cli
scas
mov
xchg
push
and
mov
(bad)
iret
retf
mov
in
leave
jmp
xchg
cmp
xor
inc
stos
add
xor
(bad)
je
in
in
or
(bad)
jnp
call
mov
xor
outs
jae
xor
xchg
fisubr
imul
pop
lock
stos
pushf
es
fistp
test
sbb
pusha
mov
xchg
aam
rcl
lods
mov
pushf
mov
jle
sbb
or
nop
rcl
lock
cmp
sbb
or
cmp
xchg
adc
cmc
call
xor
xor
jge
jo
nop
clc
add
test
mov
mov
xlat
inc
inc
mov
cmc
add
test
mov
fdiv
mov
mov
dec
xor
add
fldcw
fidiv
xlat
int
pop
push
aam
mov
dec
or
call
xchg
dec
mov
(bad)
pop
jae
push
cld
cmp
mov
fwait
in
aaa
sahf
imul
inc
pop
mov
aam
mov
cmc
or
xchg
jg
ja
lods
imul
js
daa
xchg
adc
call
test
lahf
jbe
into
jmp
xchg
test
cmc
cmps
daa
fwait
and
mov
call
adc
fabs
mov
sar
dec
loope
dec
fsub
adc
push
mov
sar
mov
dec
es
(bad)
loopne
call
xchg
movs
(bad)
mov
cmp
int
inc
or
aam
inc
nop
ror
es
shr
xchg
jae
push
xor
idiv
xor
not
aam
inc
retf
int
mov
hlt
mov
adc
iret
jbe
rcl
stos
out
mov
sar
dec
pop
add
cmc
mov
int3
inc
jge
mov
inc
jmp
inc
pop
out
pop
lock
jmp
call
loopne
push
cmps
clc
adc
out
into
lahf
or
dec
adc
pop
mov
std
lods
or
cmps
loopne
push
jg
cmp
dec
lock
out
jecxz
xor
out
mov
addr16
mov
cmp
push
sbb
xor
fs
pop
dec
mov
jl
(bad)
jo
push
inc
mov
fimul
fnstenv
dec
jmp
addr16
pop
cmp
(bad)
(bad)
mov
add
aaa
add
push
mov
shl
xchg
ds
stc
arpl
jmp
addr16
neg
xor
(bad)
stc
and
and
dec
shl
add
add
ja
(bad)
mov
inc
inc
mov
fwait
sub
xor
pop
mov
xchg
xchg
nop
mov
xor
jno
or
or
xchg
mov
lea
xor
sbb
pop
mov
dec
jmp
(bad)
mov
out
push
push
or
daa
dec
sbb
les
movs
push
lods
out
test
sub
xlat
cli
jmp
xor
mov
xor
(bad)
adc
inc
xor
not
neg
mov
aaa
(bad)
popa
fistp
push
outs
push
xchg
int
push
add
xor
adc
ins
and
mov
sub
imul
mov
scas
sub
pop
and
scas
sub
inc
mov
dec
mov
pop
fst
add
scas
sahf
adc
test
jg
lods
adc
aam
ins
jno
pop
call
int3
or
int3
cmp
lds
sub
movs
add
xchg
xlat
pop
ins
push
in
mov
inc
mov
je
test
aas
sbb
sub
jo
cmp
repnz
test
fnstcw
fwait
inc
or
out
imul
jnp
int3
jmp
(bad)
sub
pop
stc
add
sub
scas
push
gs
push
or
mov
aad
add
into
push
fwait
mov
pushf
test
dec
mov
lds
mov
pop
dec
or
push
dec
or
pop
ins
sub
jecxz
sub
fs
fidiv
out
or
outs
jnp
mov
mov
mov
stc
or
mov
push
push
arpl
jnp
imul
out
repnz
into
cmp
ds
call
iret
(bad)
sub
or
rcl
imul
inc
ficomp
outs
nop
cmc
pushf
clc
in
pop
shl
inc
fwait
ins
loopne
mov
jmp
or
push
xchg
dec
adc
push
xchg
outs
and
aaa
dec
js
movs
test
xor
in
add
addr16
sbb
sub
or
add
mov
outs
inc
pop
pushf
ja
inc
xor
mov
push
sbb
add
jo
cmp
dec
sub
pop
aas
pop
mov
addr16
int
mov
sbb
aad
dec
mov
push
(bad)
mov
jmp
cmp
xor
mov
mov
adc
jle
jnp
(bad)
lods
xor
push
pop
pop
scas
out
dec
push
outs
dec
retf
jbe
adc
(bad)
fwait
dec
loope
scas
test
xchg
adc
jno
daa
bound
fild
lahf
iret
enter
jmp
repnz
lds
aam
add
outs
push
lods
(bad)
sti
push
xchg
mov
and
int
shl
jb
mov
imul
ficomp
pusha
call
mov
and
(bad)
les
into
pop
inc
cli
or
(bad)
in
push
sub
pop
aam
aam
cs
pop
fst
pushf
mov
movs
mov
test
pop
cld
pop
out
shl
shl
xchg
mov
push
xchg
fcmovnbe
inc
(bad)
jecxz
outs
neg
sbb
outs
fst
loop
add
scas
mov
cmps
addr16
mov
cmp
sti
outs
mov
popf
dec
fdiv
(bad)
mov
push
les
retf
sbb
pop
xor
ja
stos
or
test
push
icebp
sti
fadd
mov
adc
scas
or
mov
enter
mov
dec
sbb
bound
test
dec
stc
pop
xor
in
and
mov
clc
pop
ret
adc
in
push
arpl
sbb
dec
inc
data16
mov
xchg
pop
jl
or
ds
fsub
push
(bad)
mov
fst
popf
pop
xor
push
pop
pop
test
xor
adc
unpckhps
dec
push
sub
test
xchg
sbb
xor
mov
adc
out
aas
xchg
imul
addr16
in
mov
(bad)
outs
mov
hlt
xor
mov
pusha
test
int3
lock
inc
fld
in
jno
cli
fwait
in
push
jl
adc
sub
xchg
or
sar
mov
call
into
mov
or
xchg
cmp
out
dec
int
hlt
xchg
(bad)
jg
dec
adc
mov
addr16
push
test
jmp
(bad)
outs
xlat
dec
dec
mul
sbb
vcvttsd2si
sbb
aad
loopne
shl
jb
xchg
cmp
mov
xchg
sub
ja
div
fadd
(bad)
stos
mov
jnp
pop
sub
pop
jp
mov
add
cmp
add
xor
mov
ds
xlat
pop
rol
(bad)
mov
es
iret
outs
xor
ins
es
jle
dec
(bad)
jg
pop
dec
pop
inc
mov
push
pop
cld
lea
mov
dec
fld
push
hlt
retf
outs
dec
adc
sbb
xchg
mov
(bad)
loop
mov
mov
cld
xchg
hlt
mov
fdivr
fld
xchg
ins
pushf
cmp
push
mov
mov
dec
jnp
fwait
mov
fcomp
push
or
push
sbb
adc
xchg
dec
pusha
cmp
and
shl
es
out
cmp
in
sbb
jae
lods
pop
mov
pop
push
jmp
cmp
cmp
sbb
(bad)
out
jl
inc
std
mov
repz
sub
pop
pop
fimul
fs
stos
mov
ret
shl
jp
mov
mov
mov
push
or
pushf
jmp
iret
in
and
or
test
jno
cld
mov
xchg
aam
dec
jmp
test
add
in
fincstp
push
rol
pushf
inc
jle
cmps
push
xchg
or
mov
xor
inc
out
xor
cld
inc
mov
loop
push
mov
fwait
push
dec
stos
cmp
call
jo
add
dec
sti
fcom
retf
mov
pop
xor
les
int
adc
xchg
xor
pop
add
push
jae
movs
push
and
mov
mov
mov
sbb
sub
out
in
neg
outs
inc
mov
sub
icebp
clc
adc
inc
sub
sbb
cwde
test
pop
xor
std
or
jno
adc
ret
inc
xlat
mov
dec
clc
adc
out
pop
lds
dec
iret
addr16
jo
(bad)
mov
sbb
push
xor
das
es
fsubr
jmp
sub
in
mov
mov
mov
dec
xor
pop
sar
pop
mov
mov
cmp
stos
xor
mov
dec
pop
jnp
mov
xchg
test
je
shl
pushf
adc
xchg
pushf
les
fwait
xor
xchg
(bad)
enter
push
adc
fsub
mov
xchg
xor
inc
adc
sbb
iret
pop
movs
jo
scas
daa
push
das
xor
imul
mov
jns
cs
lea
mov
test
xor
xor
into
mov
cdq
cmp
aas
fnstenv
test
mov
cmp
mov
mov
dec
push
inc
inc
or
loopne
jb
push
dec
shl
jmp
push
mov
sti
mov
(bad)
in
xlat
(bad)
pop
cmp
imul
cli
movs
adc
xor
mov
fldcw
pushf
xor
push
push
pop
xor
rcr
xor
jp
jne
dec
mov
into
adc
out
cmps
aas
aaa
xor
xchg
sti
aaa
sub
leave
mov
fld
cmp
push
pop
clc
dec
or
les
leave
mov
mov
(bad)
lock
cmps
dec
addr16
stc
jge
out
(bad)
fcomip
mov
cmp
push
out
or
or
jb
daa
mov
mov
std
and
adc
jnp
int
sub
fild
inc
popa
sbb
inc
or
(bad)
shr
call
rol
jnp
fs
push
sub
stos
outs
dec
mov
mov
dec
or
outs
mov
ins
in
aad
mov
(bad)
xchg
jp
(bad)
mul
or
addr16
mov
inc
or
fstp
pop
or
cwde
push
mov
xchg
and
add
enter
cmp
push
(bad)
stos
test
arpl
mov
xchg
addr16
mov
xor
xor
shr
xor
sbb
test
and
sti
fs
add
scas
sub
sbb
shr
movs
or
inc
retf
fnstcw
cmp
cs
loop
mov
pop
rol
sbb
loope
and
xor
pop
ret
push
xchg
add
inc
adc
mov
dec
mov
pop
fwait
xor
ins
out
jp
lock
cmc
(bad)
xchg
arpl
xchg
hlt
rcl
aam
fwait
mov
push
loopne
mov
into
xchg
out
sub
daa
cmp
or
aaa
push
mov
test
dec
loope
std
test
cmp
mov
push
int
and
ror
dec
inc
jmp
jl
ret
or
sbb
push
push
xchg
push
and
fwait
xor
and
imul
je
mov
or
mov
inc
in
push
in
add
sub
cmp
mov
out
inc
jl
rcr
imul
arpl
and
call
xchg
xchg
mov
fs
dec
or
mov
xor
xor
inc
nop
mov
add
mov
sbb
push
test
inc
and
imul
add
pushf
(bad)
scas
mov
loope
lea
push
push
nop
ror
jbe
shl
sub
xor
adc
(bad)
xor
aam
jnp
in
push
pop
sub
iret
jle
lods
(bad)
sub
popf
mov
mov
gs
adc
sti
jmp
ins
and
dec
imul
cwde
loope
jo
enter
(bad)
xlat
(bad)
sub
daa
xor
xchg
mov
arpl
leave
xchg
js
xor
jmp
fwait
sub
push
push
jne
pushf
mov
lahf
sub
out
cmps
mov
cdq
std
(bad)
int3
xchg
dec
cld
stos
fld
aad
mov
pushf
nop
ror
pop
dec
mov
jmp
dec
mov
mov
aam
(bad)
push
push
cli
pop
mov
mov
out
fisub
or
call
or
jns
pop
mov
mov
ins
mov
xor
imul
xchg
mov
xor
ror
mov
jno
test
inc
inc
test
mov
mov
pop
ror
sti
dec
sub
pop
pop
das
xor
mov
sahf
pop
cdq
and
adc
jle
fcom
(bad)
xlat
dec
adc
pinsrw
dec
cdq
pop
stos
cmp
push
test
(bad)
cmp
ins
cmovl
cmp
xor
mov
push
cmp
and
dec
outs
jecxz
xchg
adc
call
test
cmp
mov
lods
dec
pushf
pop
cmp
(bad)
cmps
test
push
mov
mov
ins
fwait
xor
fisub
pop
inc
fimul
fldcw
adc
or
push
xchg
addr16
xchg
sub
fs
dec
(bad)
cdq
xor
and
js
lods
jno
lock
aam
and
ror
pop
jg
inc
lahf
outs
jl
mov
mov
pop
add
scas
push
clc
push
enter
pop
pop
inc
dec
int3
jo
jmp
xchg
mov
cmps
sub
pop
mov
add
pop
sbb
aaa
scas
fisub
hlt
mov
sbb
aam
pusha
jns
sbb
enter
loopne
xchg
jge
nop
pop
mov
cmp
dec
mul
pop
ror
enter
retf
or
ins
nop
leave
pop
fnstsw
out
rol
xor
mov
xchg
lods
adc
leave
cmp
aad
add
xor
(bad)
in
and
(bad)
and
dec
aaa
imul
jbe
jle
dec
mov
sub
js
enter
in
xor
movs
xlat
lock
call
out
or
aas
mov
pushf
dec
outs
je
cwde
push
mov
push
sbb
pop
mov
inc
ins
retf
pop
daa
in
or
call
cmp
xor
(bad)
cmp
xchg
xor
out
pop
dec
jge
outs
inc
fs
jecxz
lahf
push
or
cmp
push
hlt
mov
or
add
add
xchg
fcmove
add
popa
js
gs
push
hlt
add
hlt
loop
sti
cmp
xchg
loope
enter
push
fcmovnbe
(bad)
(bad)
add
xchg
mov
sbb
sbb
mov
(bad)
adc
mov
int3
xchg
sbb
daa
and
fstp
fild
dec
dec
lods
mov
sub
popf
xchg
cvtps2pd
pop
dec
mov
shr
out
or
and
sbb
mov
fidivr
enter
mov
mov
out
or
stc
pop
mov
out
mov
pop
out
test
xor
loope
mov
(bad)
shl
add
fwait
sbb
ret
inc
in
pop
inc
or
mov
stc
inc
xchg
jns
int
sub
aas
movs
sbb
std
sbb
mov
fmul
jp
(bad)
imul
or
sub
dec
in
pop
mov
dec
cmps
ret
movs
pop
test
cdq
sub
mov
mov
(bad)
mov
sub
fsub
xchg
inc
xor
jg
add
pop
mov
fistp
push
ins
cmp
imul
mov
mov
mov
clc
(bad)
aas
addr16
ins
push
stc
dec
sahf
jmp
add
sub
pop
sub
jle
jmp
pushf
xor
mov
retf
int3
push
sahf
or
icebp
in
sub
pop
mov
sub
dec
push
adc
pusha
inc
fadd
or
sub
cmp
xchg
pop
imul
imul
fdivr
fcmovu
inc
xchg
mov
xor
lock
add
sub
stos
mov
mov
ins
mov
mov
mov
lods
rcl
movs
adc
xor
dec
pushf
xor
movs
pop
or
mov
push
inc
pop
xor
fmul
push
or
jns
adc
idiv
pop
cmp
sbb
fidiv
pop
pushf
pop
ins
mov
cli
mov
xchg
jmp
bnd
mov
fcmovb
inc
adc
dec
xchg
iret
(bad)
stc
pop
out
jae
out
pop
inc
or
xchg
dec
inc
les
mov
adc
shr
outs
cmp
loope
ins
mov
or
hlt
inc
ds
rcr
retf
into
xor
sbb
lods
mov
jge
and
and
pushf
loopne
add
xlat
rcl
bound
call
out
clc
pop
xchg
pop
sub
pushf
pop
jmp
imul
iret
inc
js
shr
cmc
clc
loope
add
fwait
mov
add
mov
hlt
out
jge
ins
mov
adc
inc
scas
and
mov
(bad)
mov
dec
les
stc
xchg
xor
lods
std
pop
out
dec
stos
js
sbb
and
push
jge
or
int3
adc
push
(bad)
in
sar
push
iret
es
cwde
pushf
in
inc
dec
push
push
sahf
mov
dec
dec
inc
out
add
adc
mov
(bad)
fcmovnbe
inc
sbb
ss
retf
jmp
mov
enter
push
dec
jae
je
imul
fldenv
cmps
xchg
jg
xor
mov
enter
sahf
push
rcl
in
push
pop
mov
sub
retf
sub
inc
pop
jge
or
mov
loop
hlt
or
xchg
lds
daa
adc
and
test
xchg
(bad)
and
inc
sub
mov
or
sahf
pop
inc
fidiv
xchg
sub
fnsetpm(287
ins
inc
retf
fimul
addr16
sahf
sub
mov
mov
xchg
xlat
adc
push
cmp
mov
movs
repz
xchg
lock
fidivr
iret
push
out
cmp
ins
outs
pop
xchg
mov
mov
pop
sub
jne
or
add
push
mov
lock
mov
dec
pop
pop
fsubr
pop
inc
neg
cmp
or
xor
js
lods
xor
lahf
sti
sub
push
bound
push
dec
(bad)
xor
pop
das
ss
cmp
loop
cdq
and
sbb
cld
xlat
push
fimul
cmp
adc
test
rcr
add
(bad)
jne
into
retf
sub
and
stos
test
loop
call
mov
mov
mov
mov
hlt
inc
mov
cmp
mov
movs
sub
mov
outs
loopne
dec
pop
mov
mov
jbe
cmp
dec
jp
or
retf
xchg
outs
test
daa
jp
xchg
xchg
jl
cmp
scas
sbb
std
mov
test
loope
test
cwde
xchg
mov
or
xchg
bound
mov
ja
int3
xchg
and
shl
jo
pop
mov
sbb
adc
call
mov
push
jmp
scas
into
xchg
sub
adc
ins
rcr
int3
inc
(bad)
sbb
dec
or
sbb
add
cmc
fisttp
xchg
or
adc
stos
movs
xchg
dec
adc
fcom
ins
addr16
loopne
ds
dec
mov
mov
cmp
sub
adc
aas
inc
and
mov
cmp
push
or
(bad)
and
or
jnp
or
shr
cmp
stc
loopne
ficomp
add
cmc
mov
adc
mov
xor
and
bound
lods
into
push
cmps
in
push
fidiv
int3
aam
jae
mov
shl
shl
push
mov
repnz
pushf
mov
retf
and
test
cld
sub
cmp
dec
popf
leave
adc
les
cs
(bad)
mov
dec
sub
inc
in
pushf
inc
in
loopne
lds
ja
(bad)
pusha
loopne
mov
pop
inc
rol
test
pop
dec
pop
cli
pop
out
xchg
or
push
fcomip
mov
out
fincstp
loopne
mov
(bad)
jno
lock
out
mov
pop
fcmovnb
mov
cmps
retf
adc
nop
pop
loopne
jo
aaa
test
dec
cmp
dec
stc
ja
push
(bad)
pusha
out
jb
stos
push
cmc
push
jl
pop
ficomp
lea
stos
iret
sub
loopne
or
ins
in
imul
fwait
cmp
xchg
popf
(bad)
cmp
cmp
xor
push
pop
jns
test
push
adc
adc
in
bound
jmp
sub
cwde
(bad)
xchg
daa
dec
mov
loope
mov
loope
(bad)
xor
adc
xor
movs
add
ja
imul
push
imul
jmp
inc
mov
adc
push
call
bound
or
add
push
mov
retf
int3
jae
cmp
jbe
and
cld
rol
(bad)
cmps
mov
jb
inc
sub
jg
push
loop
adc
fbld
cmp
dec
sti
out
xchg
pushf
pop
mov
icebp
popf
out
sbb
repz
jo
pop
pop
es
rol
cli
xchg
ja
rcl
ret
mov
fucomi
pop
push
fist
rcl
jle
or
(bad)
push
jmp
cmc
or
cmp
aaa
retf
dec
adc
or
mov
(bad)
addr16
or
xchg
loope
xor
mov
loope
mov
les
stos
ja
rcl
mov
jp
jo
(bad)
arpl
addr16
rcl
jns
dec
cmp
ret
daa
xchg
cmp
cwde
lds
jne
push
enter
xchg
xchg
pop
fs
add
inc
and
dec
jge
add
mov
shl
and
fcom
inc
iret
or
dec
loop
mov
pop
jbe
ret
push
dec
jne
xlat
jle
mov
dec
ss
ins
call
(bad)
sti
sbb
pop
xor
mov
jmp
mov
mov
add
mov
xchg
repz
inc
es
in
cmp
push
dec
cmps
dec
mov
fiadd
fs
mov
xchg
sbb
sbb
loopne
add
push
sbb
dec
js
sub
sti
xchg
aam
mov
add
mov
(bad)
fcmovbe
dec
dec
fsub
dec
stos
movs
out
adc
je
repz
retf
pop
lds
mov
inc
ret
cmps
push
cvtps2pi
js
ret
push
pop
dec
test
mov
imul
mov
ss
inc
jl
lods
int3
push
jmp
cmp
inc
or
mov
mov
jge
cs
mov
inc
outs
mov
out
shl
jle
call
loope
stos
pop
in
mov
in
inc
idiv
call
sub
mov
cwde
inc
sbb
hlt
push
push
ret
sbb
int3
xlat
push
movs
test
test
and
imul
fnstenv
retf
xlat
pushf
mov
cmp
pop
loop
popf
out
inc
xchg
mov
leave
dec
shl
inc
inc
sub
mul
inc
bswap
test
jmp
movs
pop
dec
sub
push
push
dec
adc
shl
mov
iret
sti
xchg
pusha
pop
mov
pop
jo
inc
inc
sub
mov
pop
cli
lock
lods
shl
fcom
or
(bad)
out
and
mov
mov
pop
add
je
mov
es
xor
jg
and
and
mov
sbb
lea
sbb
xor
aaa
stos
nop
xchg
idiv
and
or
or
fwait
pop
mov
mov
repnz
mov
dec
hlt
cmp
das
pop
jo
pop
push
or
push
outs
arpl
mov
dec
mov
loope
add
test
xchg
stc
sbb
mov
jb
out
das
sti
pushf
inc
into
ret
leave
push
pop
dec
adc
sar
call
inc
out
mov
push
sbb
and
iret
push
js
pusha
ins
push
sub
retf
clc
or
in
sbb
scas
add
inc
int3
fist
movs
jl
jmp
(bad)
and
outs
pop
jp
pop
mov
jno
cmp
test
icebp
cmp
mov
nop
adc
mov
dec
test
fs
loopne
jmp
inc
ror
mov
jle
mov
mov
and
xor
cmp
add
mov
mov
rcl
fmul
loope
sub
je
xor
xchg
in
iret
cmc
inc
xchg
mov
or
pop
mov
cmps
inc
inc
sub
or
int3
and
mov
xchg
jp
dec
iret
cmp
and
aam
loopne
cmp
call
arpl
ins
dec
push
mov
add
lock
cmp
(bad)
pop
into
out
dec
push
push
rol
push
jmp
scas
mov
mov
cmp
cmp
and
aas
xchg
sti
addr16
jne
pusha
push
lock
out
pop
cld
arpl
aas
scas
adc
fbld
pop
sub
(bad)
add
(bad)
pop
cmp
or
lods
jns
sbb
inc
sbb
rcr
movs
push
push
js
fmul
or
pushf
pop
repnz
mov
mov
ds
fnstenv
mov
js
dec
lods
xchg
and
fisub
stc
dec
xchg
mov
in
xchg
cwde
jmp
fimul
cmp
loope
inc
jmp
leave
es
xchg
push
cmp
adc
adc
dec
call
popa
cmps
and
sub
cmp
jmp
or
push
and
inc
jno
xchg
cdq
adc
sbb
pusha
stos
dec
lods
dec
cmp
popf
sub
push
inc
xchg
addr16
mov
cmp
or
clc
pop
lods
xchg
dec
jbe
adc
mov
pop
push
dec
inc
scas
xchg
lods
(bad)
jb
fistp
jge
daa
cmps
outs
xor
popa
mov
cmp
ror
mov
mov
stos
adc
and
aaa
and
mov
sbb
cdq
lods
mov
inc
lea
in
ret
ja
fwait
xor
mov
sbb
fs
xchg
sbb
cmp
ss
mov
pop
and
cmp
adc
fld
mov
loopne
fsub
(bad)
es
test
mov
in
enter
(bad)
call
test
jb
test
es
jle
push
int3
push
jl
mov
lods
pop
fst
mov
ret
ds
cli
and
xchg
ja
movs
stc
fisttp
jmp
cmps
lahf
mov
cmp
fsub
lds
adc
xor
xor
and
xor
mov
shl
sub
and
pop
fmul
out
jge
stos
xchg
xor
fimul
cmp
mov
push
add
sub
and
inc
cli
movs
xor
jo
scas
pushf
xchg
call
adc
inc
mov
(bad)
lds
mov
and
mov
xor
push
cmp
nop
push
neg
cmc
int3
dec
pop
adc
sar
xchg
push
jns
mov
je
sub
or
push
je
rcl
cmp
sbb
push
sbb
add
dec
test
xchg
int
pop
shl
mov
nop
rol
fwait
imul
xor
cli
test
jne
and
inc
(bad)
out
int3
dec
aaa
jae
(bad)
xor
adc
(bad)
xor
stos
ja
adc
sub
pushf
and
jmp
fistp
pop
arpl
lock
push
cmp
mov
inc
enter
frstor
push
mov
sti
push
arpl
shl
lock
xchg
mov
xor
addr16
and
pop
out
lds
clc
inc
iret
jge
test
jmp
test
xchg
dec
sbb
inc
or
cmps
int
mov
test
xor
ins
cld
pop
lods
shr
pop
movs
jle
adc
rol
push
cmp
push
mov
loopne
(bad)
in
mov
mov
rcr
add
out
mov
test
retf
and
jge
pop
push
stc
dec
cmp
(bad)
in
mov
xor
xor
sbb
push
jb
and
aam
cdq
pop
add
push
cmps
adc
push
pop
pop
test
fadd
mov
popa
movs
les
jp
push
pop
sub
out
push
icebp
xor
dec
adc
xchg
jo
mov
sub
mov
into
and
mov
rcr
aam
aam
or
retf
mov
xchg
cwde
dec
daa
lds
neg
rcr
(bad)
push
push
pop
lock
mov
push
mov
outs
adc
out
fldcw
pop
jmp
mov
lock
mov
add
cmp
outs
pop
inc
and
mov
sbb
stos
scas
jmp
out
lock
mov
dec
pop
sbb
rcl
(bad)
lea
call
adc
mov
pop
xor
test
xchg
xchg
stc
aaa
dec
fcomp
fs
mov
cmps
fist
and
ins
int
inc
xchg
pushf
inc
dec
stc
fcmovbe
mov
imul
xchg
add
sbb
repz
je
(bad)
add
aad
in
sbb
xor
dec
ror
out
mov
js
addr16
cmp
cmp
add
pop
jae
cld
xchg
aaa
cmps
std
stos
inc
mov
(bad)
fstp
lahf
inc
jae
les
es
retf
call
push
adc
mov
and
outs
sub
mov
leave
jp
cmp
sub
add
jge
leave
pop
aam
dec
addr16
mov
scas
pop
pushf
test
add
pop
jo
dec
jmp
and
pop
mul
cmp
icebp
dec
mov
dec
or
sahf
test
ins
fimul
cmps
inc
jne
fcomp
push
out
call
dec
scas
repnz
pop
outs
fcomip
f2xm1
push
lahf
aad
or
dec
push
dec
retf
scas
adc
cmc
dec
sbb
std
(bad)
cdq
cmp
data16
jmp
std
pop
fimul
push
sahf
mov
lock
push
jecxz
sahf
sub
iret
push
fwait
sub
push
sbb
sahf
xchg
jp
out
lods
mov
test
sbb
push
dec
adc
pop
sub
pusha
aaa
inc
mov
dec
cmp
sub
xor
cli
dec
dec
das
mov
add
int
xchg
stos
cmp
fiadd
dec
dec
sub
(bad)
sbb
stos
mov
mov
dec
shl
in
push
push
sub
sbb
bound
mov
retf
ret
leave
fistp
dec
int3
je
xor
sbb
pop
lahf
fmul
add
inc
sub
xchg
fisttp
ins
and
mov
jae
xor
ja
fld
pushf
push
cmp
jnp
jge
push
add
mov
sub
fcmovnu
push
adc
test
cwde
out
pop
xchg
outs
pop
dec
dec
pop
jno
push
push
stos
ja
loop
sbb
pop
or
mov
pop
sbb
in
in
inc
sbb
mov
push
gs
out
xchg
sbb
adc
pushf
mov
jl
dec
je
pop
mov
xchg
xor
push
outs
sub
xor
dec
and
pop
stos
(bad)
cdq
leave
dec
aad
ficomp
int3
mov
ficom
(bad)
aas
lods
jecxz
je
push
mov
nop
mov
aas
std
sbb
and
mov
mov
mov
dec
push
jmp
jb
pop
sti
jg
loopne
fimul
jecxz
mov
adc
rcr
add
lahf
mov
jge
mov
in
xchg
stos
pop
(bad)
sbb
xchg
adc
add
ds
sar
fcom
fldcw
js
div
inc
retf
test
cmp
ror
fisubr
shl
push
and
pop
(bad)
jns
sti
cmp
hlt
cdq
fwait
(bad)
sbb
aaa
push
sahf
or
out
dec
and
ja
mov
sub
nop
jb
fistp
cmp
daa
mov
cmp
jl
push
adc
lods
les
popf
push
push
cmp
xchg
xchg
sub
push
sbb
pushf
cmp
mov
test
das
mov
gs
test
jl
or
adc
mov
cmp
mov
pushf
fidiv
or
mov
mov
add
into
test
into
cmc
jb
stc
cmp
clc
add
xchg
mov
fsubr
dec
mov
mov
and
dec
add
ret
loop
ds
in
not
add
loopne
aam
data16
jecxz
xchg
sbb
add
aas
hlt
test
add
sub
sub
loopne
rcl
out
push
jno
imul
xchg
mov
out
push
lods
pop
jne
add
jnp
fisubr
xlat
pop
mov
dec
sub
js
out
ds
push
pop
mov
jg
ja
ror
clc
mov
cmp
xchg
mov
(bad)
shl
aam
jmp
nop
jo
mov
jnp
ss
xchg
xlat
sub
ds
not
sti
inc
stos
mov
mov
cmp
fisubr
in
adc
cld
(bad)
mov
pop
mov
mov
or
pop
rol
xlat
and
int3
sub
xchg
pop
jnp
xchg
js
fldenv
sbb
adc
pushf
scas
dec
lods
push
sti
pop
dec
pop
jmp
aas
sub
dec
lea
xchg
mov
loop
sti
xor
idiv
push
fnstsw
shl
repz
out
inc
lock
sbb
ss
cmp
out
pop
cwde
pop
lods
addr16
mov
int3
dec
leave
mov
add
hlt
in
lock
sbb
fist
imul
push
lods
and
aaa
mov
adc
ins
jo
xchg
mul
inc
pop
mov
pop
lock
or
pop
xchg
push
ja
fist
and
or
mov
mov
jbe
push
push
pushf
retf
mov
movs
fmul
dec
add
mov
ss
cmp
rcl
inc
fld
shl
xchg
pop
mov
push
call
jl
jns
out
in
aam
jae
push
pop
fstp
stos
xor
test
pushf
mov
int
adc
and
retf
not
pusha
mov
dec
leave
leave
mov
pop
rol
rcl
pushf
mov
test
sub
in
stos
mov
mov
aaa
daa
(bad)
cmp
and
fadd
push
dec
lods
xor
pushf
pop
cmps
xchg
dec
ins
nop
jg
ret
into
repnz
outs
inc
(bad)
call
cdq
add
xchg
pop
adc
mov
cmp
sub
in
sub
ss
test
leave
mov
push
gs
leave
dec
dec
fwait
scas
or
adc
pop
imul
jp
in
cmps
int
fwait
cmp
gs
pop
dec
ja
dec
xlat
cmp
jae
aaa
mov
sub
into
pop
and
or
ja
mov
mov
arpl
mov
mov
lods
retf
jg
outs
jne
jl
adc
xchg
loopne
sbb
test
hlt
xor
push
or
loopne
sbb
pop
mov
inc
adc
sahf
jb
sub
pop
dec
stos
pusha
fist
mov
fldenv
jl
sub
or
test
out
call
push
out
xchg
pop
adc
or
adc
cmp
mov
into
add
ror
aam
add
aaa
ins
jg
(bad)
in
xchg
lock
add
popf
add
inc
jns
cmp
adc
inc
js
cwde
lods
out
pop
sub
not
push
sbb
adc
fistp
je
or
fisttp
into
aaa
mov
dec
test
push
pushf
xchg
test
cvtdq2ps
pusha
in
out
std
pop
cld
and
shl
adc
fnstcw
pop
push
push
popf
inc
stos
pop
mov
pushf
mov
ss
mov
inc
mov
cs
test
adc
iret
mov
jge
dec
adc
adc
inc
arpl
aad
iret
scas
mov
sbb
mov
dec
mov
aad
inc
or
retf
dec
aad
mov
or
sub
pop
ins
out
sahf
xor
mov
pushf
sub
mov
add
sub
ins
push
in
ja
xor
xor
push
in
into
adc
inc
outs
loop
jmp
sbb
cdq
mov
in
(bad)
bound
mov
adc
sub
retf
stos
call
repz
cmp
push
xchg
test
sub
idiv
sbb
inc
xchg
push
add
dec
xchg
out
inc
inc
call
mov
add
enter
or
inc
shl
imul
xchg
fs
sub
ror
pop
sahf
sbb
mov
and
scas
(bad)
jnp
in
adc
mov
mov
mov
dec
mov
aas
add
xchg
mov
jle
xor
mov
push
ret
retf
enter
cli
ss
icebp
dec
mov
xchg
aas
mov
adc
fwait
lahf
sar
mov
movs
stc
xor
mov
cmp
jmp
test
sbb
or
xchg
ja
(bad)
jbe
int3
or
outs
cmp
mov
mov
sbb
cmp
(bad)
cmp
fwait
stos
push
sub
inc
push
sub
sahf
mov
ss
sub
sub
sbb
sub
dec
imul
inc
sbb
mov
mov
loop
sub
jo
sub
cdq
sar
fsub
cmp
jbe
sbb
mov
shr
adc
xor
hlt
inc
adc
pop
adc
retf
dec
push
dec
fwait
(bad)
xchg
icebp
mov
clc
sub
pop
jmp
sti
pop
jecxz
jb
test
aam
dec
mov
ins
xor
pop
fild
popf
pusha
mov
mov
cli
std
mov
fstp
mov
call
xchg
or
push
inc
(bad)
scas
xchg
les
and
fstp
lods
out
daa
pop
ds
mov
aam
push
mov
loop
ret
std
push
add
sub
jne
rcr
not
outs
and
(bad)
repz
add
std
pop
or
dec
idiv
and
adc
xchg
sahf
jnp
inc
jmp
inc
dec
call
sbb
jnp
fisub
mov
popf
xchg
adc
push
shr
retf
xchg
adc
mov
pop
int3
push
add
frstor
(bad)
scas
push
scas
mov
cmps
sub
fcom
pop
cld
fistp
inc
scas
and
int3
sbb
push
into
and
xchg
dec
adc
leave
pop
inc
std
js
or
mov
(bad)
out
mov
mov
test
imul
aad
loop
adc
mov
push
shrd
shr
mov
pop
and
sbb
sbb
xor
(bad)
scas
jbe
dec
pop
fucomip
addr16
(bad)
fild
jg
fistp
cdq
stos
add
mov
mov
ja
dec
(bad)
cmp
(bad)
rol
enter
xor
pop
retf
mov
jo
out
mov
push
jno
adc
bound
pop
sahf
pop
lds
pop
fiadd
dec
dec
dec
int3
popa
imul
scas
test
sar
test
mov
mov
sar
or
sbb
sub
dec
xchg
and
add
xchg
in
dec
cmp
stos
add
inc
and
int3
add
mov
push
cwde
xor
aam
pop
loope
add
in
mov
arpl
jecxz
sub
xor
(bad)
int
loopne
int
xor
inc
pop
mov
add
lods
call
cmp
nop
mov
push
add
cmp
ins
pop
pop
dec
scas
cwde
inc
dec
test
mov
test
jge
into
adc
mov
mov
mov
and
cmp
add
enter
js
xor
jo
jmp
jae
xlat
push
das
xor
add
sub
pop
mov
push
out
xor
add
pop
add
(bad)
out
aad
pushf
push
sub
(bad)
arpl
enter
ret
sub
mov
mov
sub
in
(bad)
popa
jne
push
iret
bound
dec
add
aas
xor
cmp
pop
cmp
call
mov
daa
jge
mov
rol
pop
fst
loop
std
(bad)
daa
pop
aam
push
outs
pop
mov
(bad)
jmp
test
jmp
das
call
adc
xor
add
pop
push
or
enter
cwde
sbb
push
in
ds
int
and
arpl
xor
mov
sbb
loopne
ja
sbb
push
pop
sbb
mov
push
jle
aad
pop
dec
not
add
and
rcl
or
push
xor
test
daa
xor
pop
ds
cmps
js
mov
test
shl
xor
les
call
jb
inc
dec
jno
add
mov
loopne
push
fistp
jnp
mov
mov
or
retf
mov
jecxz
cmp
add
loope
sub
mov
xchg
test
lock
js
in
dec
shl
sbb
inc
in
xor
and
arpl
mov
aas
imul
lock
sub
xchg
movs
cld
loopne
repz
rol
fwait
cmc
push
gs
xchg
enter
mov
or
popf
scas
push
lahf
lea
fsub
mov
cmp
sbb
daa
aaa
xor
pop
and
(bad)
fxtract
in
int
jmp
arpl
mov
sbb
add
loope
push
dec
test
mov
fs
mov
dec
rcr
aam
mov
inc
or
neg
popf
mov
pusha
or
sub
add
push
fistp
cmp
into
aaa
sbb
and
push
sbb
push
loop
out
pop
push
and
and
rol
jmp
ins
fs
ficomp
inc
aaa
pop
stos
fmulp
imul
dec
scas
or
pop
(bad)
aam
out
jo
jmp
inc
das
inc
mov
je
in
push
call
push
pop
shr
lods
and
or
fwait
(bad)
int
out
sbb
xor
pop
repnz
repnz
inc
icebp
mov
cld
add
cs
pop
mov
fcmovu
inc
ficom
xchg
jb
mov
dec
and
es
sub
out
inc
push
vmovsd
aaa
repz
add
cwde
add
mov
aad
push
(bad)
push
cmp
bound
xchg
sub
push
mov
jbe
jb
jmp
jecxz
stos
popf
pop
sbb
or
cmps
pop
lods
add
jecxz
in
jmp
push
xchg
js
push
dec
fldenv
int3
mov
mov
not
mov
in
mov
aaa
add
pop
not
ret
mov
mov
push
call
ds
dec
dec
nop
adc
push
push
(bad)
int3
ja
mov
jno
movs
icebp
mov
fild
fdiv
call
pop
(bad)
xor
ins
rol
jge
inc
pop
in
dec
sub
mov
xchg
lock
int3
(bad)
and
pop
loop
lea
aam
inc
addr16
not
dec
popa
dec
push
neg
cdq
pop
and
data16
loopne
mov
les
std
aaa
int3
dec
mov
lods
dec
cmp
ss
out
xchg
not
and
add
imul
inc
and
dec
loop
sbb
gs
push
call
adc
dec
jae
(bad)
pop
ret
xchg
int3
or
dec
sub
popa
jl
add
sub
inc
fadd
sbb
cmc
mov
dec
jo
nop
fdivr
mov
gs
jmp
inc
xchg
xchg
ds
add
cmp
pop
jle
push
jl
push
in
addr16
add
inc
dec
add
retf
mov
arpl
fidiv
push
xlat
jmp
add
mov
xor
inc
inc
adc
or
dec
inc
pop
aas
hlt
push
or
test
pop
cmp
ret
shl
bts
and
jmp
ja
cwde
les
cdq
test
fs
mov
popf
imul
add
lock
scas
sub
cs
and
inc
sar
mov
pop
(bad)
test
add
xchg
jmp
rcr
dec
ja
lods
sub
sub
cmps
fstp
mov
in
movs
aam
push
(bad)
adc
jle
mov
ret
mov
imul
pop
mov
dec
mov
retf
loopne
rcl
icebp
cmc
inc
dec
pushf
cmp
mov
and
adc
jo
dec
aad
loopne
mov
sbb
adc
xchg
pop
jmp
pop
stc
pop
std
arpl
loopne
mov
mov
mov
jle
mov
in
in
mov
cmp
xchg
xlat
push
lahf
cld
mov
pushf
cmp
jnp
jge
mov
aam
loopne
(bad)
xor
push
aam
arpl
pop
in
mov
(bad)
fmul
cwde
adc
push
sahf
dec
mov
pop
jnp
xor
lods
pop
or
pop
cmp
or
fmul
inc
repnz
mov
and
int3
sbb
test
mov
xchg
das
push
je
cmps
sbb
popa
push
cmps
xchg
cmp
out
retf
pusha
jmp
movs
pop
mov
and
push
or
sub
dec
and
push
push
int
mov
inc
inc
pop
cmp
les
add
or
mov
mov
pop
and
imul
dec
scas
enter
mov
jle
imul
pop
outs
adc
mov
dec
xchg
cmp
sub
jb
sub
push
mov
loopne
xor
popf
and
sbb
xchg
xchg
imul
mov
add
xlat
sti
sub
aam
xlat
rcr
inc
xchg
and
pushf
adc
mov
mov
mov
or
pop
clc
xor
into
sub
mov
push
mov
or
and
lahf
mov
jle
out
adc
mov
sub
push
rcr
inc
cld
adc
out
cwde
jmp
mov
xchg
aaa
mov
or
sub
in
jno
jno
(bad)
inc
cwde
(bad)
xor
mul
pop
int
add
or
aam
js
outs
je
jl
lock
fiadd
sbb
add
jno
std
or
imul
mov
aas
mov
shr
scas
sbb
fist
outs
xchg
pushf
dec
in
mov
aam
movaps
mov
dec
cmps
or
xor
stc
test
or
std
or
test
les
loope
mov
int
mov
mov
(bad)
pop
push
push
cs
repz
inc
fcom
cmp
jecxz
pop
cmps
sbb
mov
addr16
mov
loopne
in
test
ins
cmp
adc
push
inc
(bad)
in
push
xlat
xchg
and
xchg
pop
mov
in
mov
jnp
push
adc
mov
not
xor
lods
push
push
jnp
loop
sti
or
neg
push
mov
cli
mov
inc
and
ins
inc
rol
sub
cmps
xor
ins
int3
addr16
out
jmp
dec
dec
and
push
sub
inc
adc
add
xchg
or
jnp
sti
repz
jmp
xor
add
inc
mov
pmaxub
cwde
das
jmp
adc
or
test
(bad)
cwde
(bad)
pushf
add
and
shl
rol
xlat
jle
hlt
jmp
fisub
xchg
xor
and
pop
inc
inc
pop
pop
add
sub
rcr
test
push
cmp
sbb
int3
and
(bad)
pop
jo
aaa
cwde
(bad)
in
xchg
ja
xor
ret
rcl
adc
dec
xchg
jmp
mov
ror
and
and
stos
(bad)
loop
xor
lea
mov
dec
cld
cwde
mov
xlat
fistp
dec
pop
test
xchg
fs
(bad)
xor
lods
push
pop
cmp
sti
push
ss
cmovle
(bad)
xlat
inc
inc
mov
in
retf
in
push
rcl
loope
fsubr
scas
loopne
mov
mov
movs
and
or
push
add
mov
int3
out
lahf
jmp
data16
mov
out
add
iret
neg
fst
mov
not
xchg
lods
stos
aam
loopne
and
(bad)
aam
and
sub
jae
cmps
dec
popa
jl
pop
inc
inc
cmps
jno
mov
aaa
adc
jo
dec
cld
call
ds
or
inc
jbe
in
mov
inc
pop
out
bound
jnp
test
call
ja
mov
mov
mov
std
aam
push
retf
pushf
dec
dec
jbe
pop
inc
scas
fld
sbb
add
jmp
mov
add
mov
dec
mov
mov
rcl
in
movs
je
jle
add
ins
pop
inc
xchg
inc
lods
mov
loopne
pop
ror
es
lds
sub
nop
fadd
aaa
xor
aam
jae
dec
sub
sar
call
xor
xor
loopne
add
retf
iret
clc
rcr
inc
or
loope
(bad)
out
or
ins
xchg
cwde
ja
push
push
aam
test
pop
or
mov
cmp
ss
jnp
es
mov
jl
ja
cmps
mov
sub
push
test
loope
mov
push
push
pop
daa
mov
and
(bad)
fdiv
add
push
movs
lds
aad
sbb
ja
xchg
ins
mov
xor
xchg
mov
dec
jl
das
mov
and
mov
mov
pop
sub
pop
dec
mov
fdiv
dec
push
cmp
js
mov
data16
in
lds
test
mov
and
shl
xchg
jae
ds
cwde
add
cs
xchg
inc
hlt
fcom
jne
xor
cwde
push
and
mov
and
push
push
sar
jne
cmp
enter
jmp
mov
pop
rcpps
xor
pop
and
or
cmp
add
xor
adc
adc
sbb
mov
mov
mul
pop
mov
jnp
in
movs
cmps
or
jo
lea
jmp
lock
(bad)
rcr
jle
and
sub
push
mov
mov
push
push
cld
xchg
pop
ins
sti
test
lds
xchg
jmp
mov
inc
imul
les
jnp
cmp
sbb
dec
push
xor
or
mov
inc
neg
and
mov
jl
(bad)
js
mov
pop
mov
sti
mov
dec
pop
ret
seta
fstp
cli
sar
jmp
(bad)
cmp
xchg
jmp
xchg
fdiv
lock
data16
fisubr
and
cld
adc
push
sbb
adc
xor
popf
(bad)
nop
xchg
xchg
push
xor
and
shr
cwde
sub
mov
dec
jge
adc
mov
xchg
dec
mov
inc
cmp
outs
jnp
mov
cmp
jmp
fsub
js
pop
push
fbstp
xor
rol
sar
pop
shl
push
push
sub
pabsw
and
xchg
xchg
or
push
cld
inc
xchg
inc
out
sbb
add
pop
sub
or
pushf
push
mov
pushf
and
push
or
mov
setnp
fwait
mov
jge
rcl
(bad)
mov
xor
loopne
(bad)
xlat
jmp
sahf
adc
fwait
cli
enter
dec
sahf
ror
je
mov
stc
ror
jmp
push
xor
jno
pusha
pusha
pushf
mov
std
cs
outs
lea
push
hlt
int
pop
(bad)
call
sub
loopne
pop
dec
dec
retf
nop
sub
fiadd
fisttp
ret
xor
xchg
dec
lods
add
mov
jg
ja
sahf
cwde
sbb
mov
xlat
cs
call
mov
mov
dec
loop
and
neg
inc
pop
sub
fldcw
and
fwait
cs
xchg
dec
sub
jmp
fidiv
push
(bad)
sbb
mov
dec
mov
js
mov
inc
adc
sbb
loopne
movs
sti
jg
rcr
xchg
add
fwait
xchg
outs
sub
inc
ja
dec
sbb
mov
loopne
data16
mov
mov
mov
and
mov
out
push
lock
mov
gs
test
push
js
mov
neg
rcl
pop
daa
xor
or
mov
dec
scas
shl
mov
fnstenv
pop
in
repnz
mov
push
xor
adc
inc
xchg
push
loope
repnz
inc
mov
xlat
push
push
push
mov
push
or
lock
call
icebp
dec
dec
push
pop
xchg
call
(bad)
neg
jmp
add
push
xchg
sar
sbb
xor
popf
hlt
std
aad
xchg
pop
add
inc
or
sub
jl
idiv
mov
fcomp
inc
es
mul
adc
sub
mov
xchg
inc
in
cmp
daa
ds
(bad)
and
push
add
dec
daa
in
mov
fmul
cmp
out
jmp
dec
gs
and
dec
jp
xor
(bad)
fild
jmp
mov
pushf
mov
xor
test
sub
pop
xchg
ss
xchg
and
in
shl
sbb
(bad)
pop
rcl
idiv
sbb
ss
push
add
out
call
dec
and
clc
push
leave
sub
pop
sub
mov
sub
or
pop
sub
push
xor
push
call
pushf
loopne
add
pop
inc
test
sub
cwde
adc
daa
pop
add
cli
add
ja
cmp
and
fldcw
stc
sub
aas
dec
stc
ins
cli
lock
fisttp
test
outs
push
(bad)
(bad)
ja
push
jge
dec
adc
sbb
test
(bad)
xchg
push
jno
adc
ret
cmps
pop
cmp
or
pop
fld
jmp
adc
add
(bad)
fild
pop
lods
not
jmp
and
(bad)
stc
mov
push
push
xchg
pop
mul
xchg
and
sbb
pop
call
mov
fild
or
pop
fisubr
or
xor
scas
push
lock
mov
pop
xchg
movs
xchg
fiadd
loopne
or
aad
push
sbb
mov
mov
mov
loope
(bad)
xchg
xchg
mov
mov
or
loop
xchg
(bad)
dec
xchg
xor
int
inc
or
mov
cdq
sbb
popa
mov
dec
jge
div
pushf
retf
dec
inc
and
xlat
int
jmp
jl
push
cmc
and
cdq
rol
aam
dec
fcomp
inc
cld
or
mov
fiadd
imul
sub
out
fild
pop
push
mov
cs
cld
mov
adc
popa
out
push
add
dec
jo
shr
mov
fsubr
clc
jo
pushf
rcr
je
cmps
xchg
ds
xchg
push
fnstenv
push
pop
cmp
sbb
push
mov
dec
test
hlt
ret
jmp
imul
sbb
sub
push
imul
inc
adc
push
sbb
xchg
inc
aaa
shl
mov
test
(bad)
popa
js
shl
ret
cdq
sub
mov
loopne
push
pop
jecxz
js
fidivr
movs
lods
popf
mov
adc
and
in
out
push
or
(bad)
(bad)
test
mov
sub
xchg
mov
pushf
pop
mov
xchg
int3
loopne
jb
and
dec
adc
in
ja
icebp
inc
push
clc
adc
js
daa
sub
sbb
retf
or
cwde
dec
sbb
not
push
lahf
cmp
pop
xor
add
mov
sti
cmc
sub
in
or
dec
xor
pop
push
stc
(bad)
sub
lahf
inc
mov
pop
shl
fistp
sbb
aam
aas
(bad)
out
daa
and
enter
and
xchg
xchg
cmc
adc
int3
add
pop
jno
push
adc
ja
jno
repnz
stos
shl
push
sbb
imul
icebp
cwde
ret
xor
push
or
xchg
mov
repz
add
pop
xor
out
jmp
loopne
dec
inc
mov
push
xor
xor
cmp
or
or
push
jmp
out
mov
add
mov
push
rcr
cmp
xchg
fcom
retf
sbb
push
pop
mov
xor
pushf
loope
mov
cmp
push
sbb
add
push
jb
fdiv
mov
mov
pop
addr16
adc
mul
xchg
lock
shl
out
pushf
xor
xchg
imul
fild
inc
and
pop
push
xchg
jge
mov
cld
sbb
(bad)
xchg
fcomp
mov
divps
test
popf
fucomip
inc
call
dec
sar
imul
std
loop
push
add
mov
xor
push
ins
sub
mov
pop
sub
pop
cmp
pushf
mov
and
cwde
clc
rcr
aam
add
push
stos
sub
adc
rcr
pop
loop
dec
pop
fsub
push
mov
pop
es
mov
sbb
push
inc
adc
jmp
adc
lds
jo
push
jmp
retf
xchg
stc
call
aam
pop
mov
dec
mov
jmp
sub
dec
add
inc
bound
stc
mov
inc
add
mov
faddp
rcl
pop
cmps
shl
lods
jle
mov
call
push
popa
out
sbb
sub
xchg
sub
xchg
repnz
sbb
sbb
pop
lods
aad
jb
dec
mov
lds
test
dec
aaa
cli
fs
mov
pushf
ja
dec
movs
mov
jg
inc
dec
dec
pop
sbb
push
inc
repnz
(bad)
add
repnz
out
mov
cmp
imul
push
mov
or
push
inc
fld
sahf
jmp
and
(bad)
in
jle
mov
jno
into
stos
mov
ret
adc
les
cmp
push
scas
sbb
cmp
mov
add
ret
xchg
xor
dec
clc
aam
mov
sub
sbb
xchg
add
mov
sub
xor
push
out
xor
js
shr
loope
mov
sar
mov
mov
lock
sbb
lods
push
call
mov
pop
pop
arpl
and
lahf
xchg
inc
mov
jl
js
and
movs
loop
dec
rol
push
jnp
ds
fisub
push
mov
add
mov
xor
js
or
je
ins
fisubr
ret
and
cmp
fucomp
push
fwait
imul
pop
or
dec
lea
jle
imul
movs
test
imul
xor
adc
pushf
call
sbb
hlt
xchg
in
mov
imul
movaps
setl
or
xor
pop
and
jbe
and
rcl
pushf
push
or
aam
rol
mov
cmp
mov
adc
cmps
shr
lock
xor
shl
aam
pop
imul
stc
shl
cwde
and
or
cmc
dec
pop
jne
inc
dec
repnz
popf
loop
rcl
pop
in
jno
out
dec
jp
sub
les
sub
pop
sub
xchg
jl
sti
jmp
mov
in
mov
mov
fwait
adc
ja
inc
inc
mov
adc
fdivr
pop
push
out
iret
jo
fstp
sbb
lods
mov
(bad)
inc
ja
scas
dec
mov
clc
mov
push
or
not
repz
jo
push
mov
jns
mov
mov
sbb
dec
pop
cmp
push
mov
add
adc
dec
add
lds
mov
mov
mov
jg
mov
dec
in
push
imul
fidiv
pushf
inc
add
(bad)
mov
mov
push
xor
es
dec
out
pop
xor
mov
adc
mov
and
jecxz
mov
cld
stos
pop
gs
ds
mov
sbb
jg
stos
pop
popf
push
and
les
lods
mov
push
pop
mov
in
lahf
pop
mov
mov
sbb
sbb
dec
fs
add
dec
fadd
xchg
ret
ds
aas
sub
adc
ret
shr
and
push
ret
pop
(bad)
(bad)
sbb
call
les
jp
scas
in
add
sub
jno
cld
jo
stc
fild
adc
push
(bad)
mov
aad
(bad)
mov
inc
repz
push
pop
fisttp
cmp
add
adc
pop
and
stos
dec
pop
aad
(bad)
scas
push
xchg
cld
out
leave
sub
mov
movs
jmp
iret
xor
scas
mov
shl
call
(bad)
repz
rcl
(bad)
daa
add
mov
(bad)
aaa
push
mov
fucomi
inc
repz
sbb
mov
out
ror
daa
into
sub
inc
push
add
dec
lods
inc
in
mov
sbb
or
lods
fwait
mov
not
lods
inc
jl
pop
movs
std
mov
pop
ja
add
push
cwde
sahf
fcom
aas
arpl
pop
repz
in
and
sbb
cmp
mov
(bad)
sub
loope
cmp
mov
out
(bad)
addr16
jnp
push
jmp
sbb
xlat
mov
aas
push
mov
push
shl
in
sahf
imul
in
ror
jp
lea
retf
sar
mov
into
cdq
fst
pop
jge
aaa
cmps
test
push
pushf
push
xor
cwde
xor
sbb
cmp
add
xchg
mul
push
in
cdq
jge
lods
arpl
psrld
xchg
add
xchg
popf
(bad)
and
in
push
repz
xor
lods
sbb
daa
cmp
dec
in
fldcw
in
cmp
cs
jbe
jnp
push
icebp
pop
(bad)
and
pop
sub
lods
push
fisttp
movs
neg
outs
push
loop
repnz
fisubr
mov
push
les
xor
sub
(bad)
adc
clc
push
in
lock
sub
les
fscale
aaa
mov
in
nop
xchg
daa
push
inc
jmp
pop
in
or
or
or
out
loope
xlat
sub
pop
or
adc
(bad)
cld
fadd
sbb
iret
jns
adc
sub
xor
cmp
xchg
(bad)
jge
push
or
and
(bad)
mov
or
add
or
fcmovbe
or
leave
mov
push
mov
aad
arpl
leave
lock
arpl
dec
cld
push
cmp
in
sti
popf
fdiv
loopne
xchg
cdq
mov
fstp
add
xchg
das
(bad)
lock
fidiv
popa
inc
adc
push
fwait
and
mov
mov
inc
lods
shr
and
push
mov
(bad)
push
aad
mov
cs
sbb
int
xchg
jae
mov
dec
xor
mov
push
and
push
pop
sbb
jmp
into
xor
pop
ja
fsubr
add
xchg
popf
int3
fwait
sbb
fld
sti
add
fstp
leave
pop
push
adc
sub
rcr
inc
fsubr
add
sahf
in
out
icebp
inc
scas
es
addr16
mov
jnp
bound
shl
cmp
xchg
loopne
aas
into
push
mov
sbb
(bad)
fisubr
or
push
or
add
mov
push
popf
and
arpl
sub
int3
pop
push
add
adc
xor
call
lock
mul
fisub
jmp
mov
sbb
add
imul
dec
or
inc
sti
aaa
jmp
mov
mov
jnp
imul
in
inc
jns
adc
inc
sti
jle
mov
out
arpl
call
movs
mov
jg
mov
mov
jo
xchg
daa
adc
cmps
cmp
push
add
dec
dec
or
cmc
int
jnp
aad
mov
cmp
mov
scas
push
and
loop
out
xchg
inc
and
ja
xor
rcl
int3
mov
ins
je
pop
mov
xor
and
lock
mov
or
fstp
fldcw
sub
rcr
mov
or
push
add
je
adc
dec
imul
in
lahf
cmp
sub
cmps
xchg
mov
dec
std
aad
pop
push
loop
and
push
(bad)
in
xor
jnp
add
daa
push
es
int3
(bad)
and
mov
dec
into
mov
jae
shl
sbb
mov
mov
or
inc
call
dec
inc
fld
popa
pop
ret
xchg
loop
mov
ret
retf
or
mov
cmp
test
pop
cwde
arpl
int
jmp
lock
aaa
push
inc
xchg
icebp
mov
cmp
ret
shl
xchg
aaa
fwait
mov
mov
and
shl
push
loopne
je
or
mov
stos
(bad)
shr
fild
sbb
adc
retf
mov
test
add
shr
pop
aam
push
dec
adc
retf
fwait
xchg
mov
sbb
dec
mov
adc
pop
nop
ins
mov
push
and
pop
jb
std
daa
add
mov
mov
dec
mov
call
addr16
cs
or
push
jl
dec
stos
mov
addr16
mov
adc
sbb
fidivr
pop
out
div
(bad)
sub
inc
in
sub
int
(bad)
dec
aad
push
cmp
pop
mov
mov
(bad)
iret
push
mov
and
dec
mov
mov
push
sahf
imul
scas
jmp
lods
xchg
xor
cmp
leave
addr16
mov
(bad)
sub
xchg
cmp
cli
inc
adc
inc
mov
mov
fldenv
fdivr
mov
sub
lahf
inc
rcr
dec
stc
icebp
dec
icebp
xchg
loopne
clc
xlat
pop
jmp
add
xor
ins
outs
loop
pop
aaa
mov
mov
sbb
ror
movs
add
out
sbb
cmc
stos
mov
jge
into
dec
pop
ins
xchg
jg
xchg
shl
sti
sbb
push
lods
rcl
inc
mov
mov
ja
sub
mov
call
fcmovnb
mov
icebp
vandpd
int3
xchg
pop
pop
scas
mov
shr
jbe
fsub
pop
mov
pop
fwait
std
sbb
lock
je
cmp
xchg
cmp
jbe
call
xor
cmp
push
sbb
sbb
pop
into
ror
xor
mov
int3
push
fimul
pop
or
pusha
pop
das
inc
fisttp
add
pop
jmp
stc
dec
sbb
mov
pop
(bad)
repz
rcl
cmc
xor
in
cmp
sbb
test
shl
xchg
mov
pop
or
retf
sub
push
loope
hlt
jmp
test
cmp
(bad)
push
push
scas
jge
jnp
fstp
pop
mov
(bad)
fs
xor
adc
adc
sub
dec
sbb
sti
fild
test
inc
push
xor
ror
out
arpl
(bad)
sub
add
and
les
(bad)
sbb
div
push
aad
out
mov
mov
fwait
xlat
sbb
fwait
mov
cmp
cmps
xor
sub
cwde
ins
cwde
adc
pop
(bad)
push
add
mov
lahf
mov
sbb
arpl
aam
mov
push
rol
sub
cmps
pop
cmp
or
push
call
call
push
int3
xor
xchg
fs
(bad)
repz
lea
test
push
ficomp
inc
ins
push
rcl
popf
push
cmp
sub
int3
int3
iret
dec
cmps
ror
test
stos
add
inc
cmp
mov
ja
or
cmp
nop
dec
add
cdq
pop
ror
dec
sbb
stos
retf
pushf
mov
test
out
iret
(bad)
mov
rcr
(bad)
shl
cmp
ja
xor
stos
outs
sbb
jle
(bad)
adc
mov
loope
pop
cmp
sti
pop
movs
cmc
inc
in
adc
outs
dec
push
jb
adc
ins
repnz
rol
enter
gs
out
xor
fidivr
ja
mov
jb
pop
test
shl
mov
push
sahf
jmp
push
dec
fs
xchg
popa
mov
mov
out
(bad)
pusha
mov
pop
add
mov
xlat
call
pushf
arpl
cdq
repz
xchg
cmp
movs
inc
lods
jo
cmp
aas
push
dec
xchg
fcomp
aaa
add
add
adc
cmps
pop
sub
and
cmp
ins
sbb
fsubr
inc
push
sbb
dec
neg
sub
adc
jle
jne
jmp
stc
or
xlat
ja
mov
adc
nop
xlat
adc
fs
mov
sub
dec
xchg
pusha
jbe
jle
or
push
fsub
sub
aaa
int
dec
ss
loopne
xchg
push
icebp
nop/reserved
leave
sub
xor
call
imul
cmps
jge
test
lahf
push
cli
ret
push
aaa
retf
loope
scas
aam
je
mov
inc
mov
std
sbb
mov
int3
sbb
mov
cmp
mov
fistp
js
mov
in
(bad)
call
gs
push
fild
push
hlt
rol
jp
pop
mov
fadd
ins
nop
cmp
lds
xchg
mov
popf
xlat
ficom
sahf
push
pop
mov
mov
push
or
push
in
jae
adc
sub
xchg
in
mov
test
es
sbb
push
jl
push
adc
popa
jns
mov
mov
jp
jne
test
fsubr
add
sub
leave
jg
xlat
ss
fsub
push
cmp
test
pop
push
(bad)
in
lahf
(bad)
add
push
dec
(bad)
pop
inc
mov
enter
call
mov
loop
add
cld
jne
mov
(bad)
scas
sbb
or
add
aam
and
loopne
inc
scas
(bad)
es
loope
push
inc
xor
enter
cs
or
cwde
pop
lods
(bad)
push
dec
pop
shl
dec
imul
fcomp
js
arpl
dec
inc
xchg
sahf
cdq
add
mov
loop
rcl
outs
in
aad
mov
pop
cld
aam
popf
cmp
arpl
mov
addr16
sbb
dec
xchg
es
and
mov
ror
and
inc
pop
push
in
rol
stc
jmp
xchg
in
(bad)
ficomp
push
sub
rol
pop
sub
or
push
mov
daa
fnsave
ficom
xchg
xor
lahf
pop
inc
js
pop
cmp
adc
adc
jmp
cmp
inc
stos
cmc
js
xor
jae
fcom
pop
jae
pop
not
loopne
stos
xor
call
jg
fidiv
and
mov
mov
xchg
jbe
add
fld
jae
cmp
ins
imul
iret
xchg
dec
outs
int
push
call
pop
cmovle
adc
mov
dec
lods
int
adc
imul
cmps
test
push
nop
shl
inc
push
jle
push
sub
jl
jb
fcom
outs
sub
not
and
aad
push
cmp
jnp
repnz
aam
fimul
push
cs
jne
test
retf
push
or
dec
call
fcmovne
pop
popf
out
mov
pop
sbb
movs
shl
sub
add
popf
adc
out
jno
mov
cmp
sub
xchg
dec
fiadd
clc
test
neg
push
repnz
sub
xchg
daa
addr16
loop
lds
mov
out
out
inc
mov
cmp
out
jo
add
ret
fadd
cmp
imul
mov
mov
out
inc
mov
and
sub
js
xchg
jno
pop
push
(bad)
jl
adc
lds
and
mov
aaa
jecxz
mov
xchg
xchg
mov
xchg
push
pusha
xor
fld
ret
out
cs
(bad)
mov
add
xchg
cli
cmps
mov
(bad)
fcom
add
jecxz
std
retf
add
pop
cld
dec
mov
pop
clc
pusha
(bad)
fcmovne
daa
lods
jno
inc
iret
cwde
cmc
hlt
dec
out
or
inc
xor
fstp
test
and
rcr
mov
das
int3
push
pop
adc
pop
cmp
xchg
push
in
ret
pop
int
cmp
call
dec
(bad)
xor
adc
test
push
fwait
cdq
das
shl
ds
(bad)
out
push
dec
push
shl
push
sti
adc
inc
sbb
loop
pop
cmp
sub
aam
dec
xchg
fsubp
jmp
and
or
push
pop
sub
xchg
pushf
dec
pop
pop
dec
addr16
jmp
pop
sbb
cmp
jg
nop
pop
or
mov
add
in
jmp
mov
lods
es
fwait
push
cdq
inc
sub
shl
and
imul
or
xchg
out
stc
lods
imul
jmp
sbb
jmp
xchg
repz
movs
jmp
lods
push
(bad)
xor
xchg
xchg
mov
pop
cmp
test
adc
adc
repnz
inc
hlt
or
mov
jl
das
mov
add
sbb
imul
aam
lahf
or
(bad)
jge
jmp
pushf
xchg
aaa
test
rcr
in
xchg
dec
ror
rol
dec
xchg
jl
jg
xchg
jo
clc
scas
xor
out
xchg
out
mov
and
xchg
push
out
mov
dec
sub
dec
push
push
xchg
lea
cmp
sbb
push
xchg
les
xchg
sub
cmp
rcl
(bad)
push
daa
mov
cmps
xor
mov
lea
push
pop
xchg
push
dec
(bad)
(bad)
popa
nop
outs
jnp
jne
aam
mov
pushf
aad
pop
mov
popf
ret
xor
loope
jae
out
push
scas
cdq
fnstenv
adc
add
fadd
xor
imul
setb
pop
push
aaa
pop
pushf
(bad)
aam
adc
xchg
sub
mov
in
add
inc
(bad)
test
push
cwde
iret
xor
adc
xor
imul
ret
inc
jbe
and
aaa
lods
add
or
ret
mov
aam
xchg
jae
sti
push
lock
ror
sbb
ror
pop
les
inc
mov
mov
scas
lock
xlat
adc
int3
jmp
pop
jge
sti
fwait
mov
rcl
pop
cmps
xchg
rol
fist
jle
fwait
mov
jmp
int3
adc
xchg
dec
push
mov
fisubr
mov
mov
mov
xchg
xchg
pop
movs
dec
mov
shl
xor
out
jbe
mov
add
mov
out
dec
sub
iret
push
add
inc
sub
push
sbb
or
sub
gs
mov
fsub
rcr
push
mov
sub
in
sbb
pop
pop
ss
or
test
outs
je
dec
test
jle
loopne
xor
(bad)
mov
mov
xchg
inc
loope
jp
mov
shl
mov
ss
cwde
rcl
or
xchg
jmp
pop
push
jle
retf
mov
push
and
pushf
aam
cmp
cdq
push
mov
mov
in
xchg
hlt
sub
xor
dec
arpl
jl
push
or
or
loope
mov
nop
and
dec
cmps
outs
das
push
xor
ins
jne
jne
mov
ins
push
fdivr
ja
adc
mov
mov
add
mov
pop
mov
mov
mov
mov
dec
ficom
retf
lods
int3
(bad)
push
sub
es
xlat
push
cmp
mov
dec
das
shr
loope
pushf
out
pop
pusha
jo
and
mov
inc
adc
xor
or
test
sub
das
cld
fist
mov
inc
cmp
mov
push
add
loop
push
sbb
popf
loopne
sbb
ror
mov
in
mov
jp
outs
inc
inc
lea
cwde
lea
mov
jecxz
loope
mov
cmps
dec
mov
fcomp
pop
mov
jmp
push
clc
cmp
pop
mov
inc
loopne
xchg
shr
into
rcl
push
pusha
in
not
fimul
shl
mov
sar
into
sbb
repnz
rcl
fnstenv
call
mov
cdq
loop
aaa
sbb
push
push
or
sbb
out
mov
ja
enter
mul
sar
jne
dec
call
loope
pop
sbb
mov
mov
iret
call
leave
cmp
out
push
in
push
fdivr
add
aad
fnstsw
dec
jno
(bad)
dec
pop
xchg
(bad)
shr
pop
mov
inc
imul
sahf
push
fcmovnb
ds
and
sbb
and
daa
clc
loope
retf
mov
movs
pop
cmp
dec
cmp
(bad)
pop
pop
add
jmp
rol
sub
jp
jge
sbb
pop
pop
test
xchg
add
out
mov
pop
aaa
enter
inc
pop
mov
mov
sahf
fild
adc
adc
dec
inc
fcomp
pop
add
inc
dec
lea
cmp
shr
push
stos
rcl
clc
fadd
in
test
rol
int
repnz
(bad)
push
std
arpl
das
inc
ins
test
ins
sbb
xor
or
push
inc
jl
fcom
sbb
mov
fmul
das
adc
sub
arpl
out
sar
mov
dec
mov
push
in
gs
sbb
pop
or
mov
jae
popa
and
xchg
or
cmp
cld
out
mov
lock
lods
out
stos
fcom
shl
sbb
push
xchg
scas
mov
xor
scas
test
push
mov
and
xor
nop
jmp
enter
sub
fld
jb
xor
cmp
cld
mov
pop
cmp
mov
add
aad
mov
sub
xchg
clc
lock
cmp
mov
pop
bound
stos
and
add
xchg
pop
dec
mov
cmc
pop
fchs
(bad)
fcom
in
into
jae
jb
ret
sbb
sub
xchg
jnp
in
and
les
adc
pop
lfs
sbb
daa
or
jecxz
mov
mov
stos
pop
daa
div
xor
fwait
sub
mov
adc
sbb
mov
sbb
pop
into
push
cmp
dec
outs
pop
into
mov
sub
int
inc
test
ja
scas
xchg
jne
adc
mov
cmps
mul
inc
jae
dec
push
xchg
jmp
imul
dec
rcl
push
dec
dec
(bad)
jle
out
and
fwait
sbb
stos
div
les
fstp
aad
push
xchg
clc
ret
dec
mov
out
repnz
mov
hlt
inc
dec
mov
mov
inc
loopne
mov
cld
loop
es
pop
cdq
out
xchg
adc
mov
shl
or
xchg
pop
sbb
push
imul
fstp
mov
pop
xchg
ja
dec
sbb
(bad)
dec
fisttp
rcr
xchg
mov
daa
dec
pop
mov
lods
int3
(bad)
outs
shl
dec
ficomp
cmp
jl
pop
and
movs
les
cld
in
mov
mov
inc
mov
xchg
and
loop
es
shl
mov
jo
ins
das
ss
popa
enter
mov
mov
cli
cwde
in
pop
mov
mov
dec
lock
inc
loop
mov
jp
imul
jo
mov
jecxz
or
inc
les
pop
sbb
mov
jmp
popa
push
ror
mov
call
push
int3
add
(bad)
in
mov
imul
jp
test
movs
pushf
add
and
and
mov
ret
or
test
jmp
add
mov
retf
pop
nop
xchg
loopne
push
cmp
cmp
fadd
(bad)
jg
mov
and
jmp
cli
fadd
jle
arpl
ss
add
pop
mov
inc
mov
sar
dec
pop
cmp
mov
outs
mov
jmp
pop
pop
xchg
repz
sub
mov
mov
fistp
gs
dec
imul
add
mov
std
daa
xor
and
sub
push
and
sub
jle
pop
call
sbb
sahf
mov
pop
jmp
or
mov
pop
dec
mov
xchg
loop
imul
push
sti
fmul
rol
mov
dec
mov
mov
ss
cmp
add
(bad)
push
rol
test
add
and
dec
cdq
pop
ja
in
push
out
pop
adc
xchg
dec
push
test
push
xchg
es
aam
pop
out
int3
adc
das
fldenv
ins
cld
dec
mov
add
cdq
lahf
inc
cmp
add
inc
ss
pop
xchg
(bad)
sbb
jno
mov
ds
pop
outs
test
in
mov
inc
(bad)
mov
jo
mov
xor
ins
pop
and
inc
cmps
call
fisttp
sub
and
fwait
arpl
dec
enter
sub
js
in
add
loop
push
xor
mov
or
push
iret
add
pop
fistp
aad
and
mov
jbe
ja
push
adc
sar
pop
cdq
jae
push
(bad)
mov
(bad)
push
imul
jbe
mov
fucom
loopne
ds
popa
jbe
pop
sub
jge
aaa
mov
in
pop
pop
pop
popf
dec
and
iret
or
loop
outs
xchg
sub
fwait
retf
in
or
adc
out
rcr
pop
sub
outs
and
retf
retf
shl
dec
fwait
aaa
dec
mov
lea
xor
mov
jmp
mov
xlat
push
sti
rcl
rcl
sub
dec
lds
call
dec
inc
mov
sbb
mov
out
mov
cmp
shl
xchg
stc
loopne
add
sub
and
call
mul
mov
mov
and
stos
fwait
loopne
xor
je
in
fldenv
xor
xchg
aas
push
and
mov
shl
push
in
add
jno
dec
xchg
or
int
adc
pop
(bad)
xchg
lods
xchg
xchg
lea
jg
mov
imul
shl
mov
xor
pop
fwait
push
push
jns
adc
ror
fs
jbe
bound
jecxz
jge
daa
sbb
dec
xchg
xor
sub
imul
push
mov
cmps
sub
out
inc
shl
jb
push
xor
mov
sbb
shrd
sahf
shr
icebp
fnstenv
je
pop
mov
div
mov
pop
add
xor
out
mov
cs
imul
jl
int
je
sbb
in
fcomp
nop
pop
leave
push
ret
pop
sbb
mov
popf
lods
fsub
push
mov
pop
js
lea
shr
pop
je
std
out
or
scas
or
or
int
shl
mov
jl
ins
fwait
ret
mov
inc
out
cwde
jmp
arpl
pop
fnstsw
fldcw
jl
rcr
add
test
jp
or
pop
dec
xlat
mov
mov
aaa
jecxz
dec
(bad)
cli
xchg
aam
and
in
dec
in
xor
inc
mov
jp
daa
push
std
movs
mov
pop
mov
rcl
retf
arpl
pushf
pop
shr
loop
and
inc
cmp
int
inc
dec
and
mov
fistp
(bad)
clc
das
inc
gs
hlt
inc
addr16
out
xlat
pop
dec
icebp
push
sub
pop
ins
push
mov
mov
mov
test
push
push
mov
in
jg
(bad)
cmp
es
dec
test
fmul
or
(bad)
mov
ins
rcl
std
xlat
inc
jmp
call
sbb
push
adc
push
dec
mov
sti
out
and
xchg
xlat
cmp
jg
push
adc
out
in
jp
(bad)
mul
(bad)
call
jge
shl
cdq
adc
sub
jecxz
and
enter
aas
dec
or
repz
xchg
or
push
or
inc
ds
(bad)
dec
push
call
push
ds
inc
pushf
shl
push
dec
dec
sbb
js
cmp
setl
xlat
mov
pop
repnz
shl
mov
jge
push
mov
(bad)
sbb
popa
jns
stc
push
adc
mov
add
lahf
call
sbb
push
push
mov
jl
cdq
mov
sub
inc
fisub
pop
shr
and
fsub
pop
add
aas
stos
call
sbb
mov
pop
les
lods
mov
retf
dec
ja
mov
and
xchg
lods
jp
mov
sti
mov
push
lods
repnz
sbb
mov
fstp
sub
(bad)
in
mov
mov
adc
sbb
loopne
test
aam
pushf
push
aaa
sti
pushf
xchg
pop
rcl
pusha
mov
mov
iret
push
cmp
popa
mov
push
pop
inc
frstor
imul
jmp
mov
mov
shl
sbb
lahf
jmp
fcomp
pop
xor
mov
rcr
movs
mov
inc
jl
(bad)
addr16
bound
and
xchg
test
mov
repz
neg
mov
lods
sbb
jecxz
(bad)
adc
cmp
mov
mov
inc
sbb
in
lods
cmp
ret
cmp
int3
dec
xor
call
push
jo
aas
lods
xlat
rol
or
stc
mov
sbb
add
or
and
imul
xchg
les
lock
(bad)
cdq
mov
sahf
aas
sub
push
lods
and
xlat
mov
fild
jno
push
push
add
or
sbb
mov
stos
pop
out
loopne
cdq
pop
jge
ins
or
xor
shl
fdivr
fwait
jae
data16
mov
xor
(bad)
adc
xchg
jae
sar
push
cs
jmp
sar
mov
mov
jge
sbb
idiv
push
mov
rcr
mov
fxch
pushf
shl
and
data16
int3
mov
jge
inc
add
mov
add
not
cmp
outs
pop
mov
mov
cmp
push
int3
ret
jbe
jmp
lea
stos
xor
movs
push
inc
pop
scas
dec
cmc
(bad)
wbinvd
in
sub
sub
dec
repz
sbb
dec
pop
shl
aaa
sub
mov
jmp
(bad)
fcmovu
pop
xchg
sbb
ret
adc
mov
inc
push
out
test
test
push
inc
dec
add
mov
push
cmp
adc
ins
cld
ins
fst
mov
addr16
cwde
push
ds
mov
enter
ins
stos
in
(bad)
pop
sbb
and
fst
sub
sub
adc
retf
mov
jmp
mov
rcl
and
mov
in
mov
in
sahf
leave
pushf
int
and
cmp
addr16
jnp
js
out
jmp
inc
dec
inc
mov
cli
and
adc
and
cmps
adc
fdivr
sub
int3
mov
aaa
jae
cmps
lods
pop
inc
mov
test
int3
push
pop
add
dec
into
push
sub
or
lea
push
out
jns
mov
leave
ficomp
cs
out
xchg
dec
into
jmp
(bad)
sub
inc
inc
unpckhps
mov
or
aam
sub
cmps
popa
inc
adc
xor
jmp
sti
jmp
jl
outs
mov
aaa
iret
cs
xor
xlat
cmp
inc
sbb
dec
mov
jb
and
imul
sbb
cs
sub
in
jo
test
imul
mov
pop
in
js
fisubr
sub
xchg
pop
jmp
ret
adc
push
daa
rol
mov
mov
movs
aam
loopne
out
jmp
cmp
lods
mov
push
daa
aaa
fiadd
ja
inc
mov
(bad)
int3
addr16
sar
out
adc
fwait
test
call
cmc
mov
mov
cli
push
outs
jns
sahf
imul
lea
xor
fiadd
sti
push
adc
inc
pop
push
mov
or
push
cwde
arpl
jns
adc
mov
in
mov
test
mul
adc
in
sahf
rcr
into
imul
push
jp
xor
add
cdq
mov
mov
push
sbb
mov
sbb
inc
popf
int
jo
cmp
in
arpl
xlat
mov
sub
push
js
cmp
push
cmps
push
ret
pop
shl
pushf
scas
xor
daa
fcomp
(bad)
shl
adc
cmp
add
mov
pop
dec
stos
push
(bad)
cmp
test
push
jmp
int3
stos
and
mov
pop
lds
loopne
imul
lods
or
xor
pop
push
stc
mov
sub
pop
xlat
mov
repz
add
xor
xchg
ins
rcr
push
cwde
out
sub
pop
mov
(bad)
add
jns
sub
push
xchg
iret
repz
xchg
sbb
pop
and
mov
pop
(bad)
push
test
stos
ret
mov
jne
push
(bad)
hlt
je
out
pop
fadd
sbb
mov
mov
in
cdq
jge
xchg
push
dec
out
push
add
test
jmp
(bad)
out
cld
push
xchg
cmp
scas
mov
idiv
imul
mov
lods
or
adc
cmps
test
in
inc
(bad)
fld
push
fmul
cmp
or
sahf
sbb
mov
pop
push
cmps
push
enter
pop
mov
add
int
xchg
pushf
scas
pop
(bad)
push
push
sbb
cwde
lods
mov
in
outs
push
shl
scas
mov
inc
jmp
cmp
pop
xor
pop
mov
test
imul
outs
lods
push
lahf
or
inc
inc
stc
lock
out
sub
ins
cmp
sub
add
(bad)
in
push
nop
movs
adc
or
cld
mov
scas
xadd
cdq
out
pushf
cdq
and
add
(bad)
test
pop
or
add
inc
push
push
dec
xor
mov
test
aam
pop
pop
addr16
add
dec
repz
enter
fnsave
mov
fdivr
pop
pop
stos
adc
add
jo
xor
lock
add
imul
xor
xchg
ja
add
inc
pop
enter
loope
mov
push
jecxz
xchg
pop
enter
popf
sti
mov
(bad)
arpl
and
xlat
and
and
inc
inc
stc
or
retf
jge
ficomp
push
cwde
pushf
and
xchg
ins
sub
adc
rol
ins
jo
daa
cdq
ror
or
sbb
pop
jmp
imul
push
pop
hlt
ins
xlat
addr16
adc
inc
repz
std
inc
push
jb
xchg
fst
push
fistp
jno
mov
push
sub
jmp
cdq
lea
call
imul
pop
test
pushf
push
xlat
mov
push
cmp
es
sbb
cmp
cmp
imul
jecxz
cmp
jo
std
ror
aam
aaa
cdq
xchg
cmp
adc
push
mov
mov
not
jecxz
mov
push
aaa
sbb
out
cmp
out
ret
dec
lods
leave
dec
sbb
lea
lds
outs
sub
aaa
pop
inc
in
mov
iret
dec
sub
pop
call
daa
outs
xor
stos
pop
xchg
adc
jl
ja
jmp
pushf
push
test
sbb
xor
dec
sti
mov
out
push
xchg
xor
push
lock
or
in
xchg
adc
shl
inc
sti
out
xchg
clc
loop
ret
push
es
jp
mov
loope
fisub
clc
inc
test
(bad)
rcr
xor
jnp
sbb
aam
aam
out
or
sbb
bound
add
inc
test
push
push
ret
or
sbb
push
imul
icebp
mov
mov
(bad)
stc
in
ins
call
in
icebp
sbb
scas
add
jnp
(bad)
fist
sbb
pop
add
mov
(bad)
in
jmp
xchg
jmp
xchg
mov
in
pop
popa
pop
js
fldcw
xchg
adc
mov
fstp
sub
cmp
inc
adc
cdq
add
jecxz
fcom
lds
sbb
mov
iret
mov
mov
and
cmp
into
aas
js
mov
push
adc
dec
cmps
dec
je
jl
shl
retf
pop
pop
xor
xor
mov
adc
pop
fwait
stc
push
mov
mov
fidivr
out
xchg
cmp
icebp
add
jg
or
stos
data16
loopne
inc
xlat
pop
cmp
dec
add
(bad)
arpl
inc
cmc
xlat
mov
jg
pushf
rcr
repz
scas
lock
ror
lock
ja
out
dec
ds
pop
not
scas
(bad)
push
push
push
dec
xchg
dec
xor
sub
sbb
or
lahf
jp
sar
movs
mov
adc
scas
pop
fnstsw
inc
and
in
addr16
mov
not
mov
push
push
adc
xchg
and
adc
jmp
mov
mov
iret
lods
mov
inc
pop
ja
jnp
pushf
mov
xor
xchg
xor
call
xchg
push
call
movs
mov
xchg
fmulp
ss
add
sub
cwde
leave
xchg
jns
jmp
sbb
mov
push
gs
(bad)
add
les
push
inc
shl
pop
jg
cwde
data16
push
adc
jmp
mov
adc
pop
jns
es
adc
es
fadd
push
shl
aam
add
mov
aad
pop
pop
loop
mov
or
test
gs
lods
cmp
fiadd
lods
and
enter
fisttp
loope
and
cmp
(bad)
es
sub
sbb
mov
cmp
fldenv
dec
out
adc
push
out
inc
mov
scas
mov
push
jmp
fimul
sub
out
pop
sti
loope
das
dec
dec
add
mov
and
xchg
mov
fisubr
sar
push
daa
aad
pop
and
dec
ret
and
or
repz
pop
daa
and
xlat
jne
mov
pop
jns
arpl
mov
aas
sub
or
push
je
adc
jo
(bad)
fisub
imul
(bad)
repnz
stc
outs
cdq
test
sbb
aas
pop
sub
stos
mov
lds
or
push
std
mov
fstp
mov
inc
loopne
ins
mov
repnz
jle
mov
dec
xchg
inc
or
xor
pop
aam
inc
inc
in
xchg
out
push
push
jne
xor
push
(bad)
loop
add
sub
xor
dec
cli
idiv
jae
pop
adc
nop
in
push
dec
outs
stc
std
mov
pop
mov
(bad)
pop
mov
mov
mov
sub
dec
pop
xchg
mov
repnz
fcom
sub
xchg
or
push
jae
xor
inc
push
xor
inc
push
mov
imul
xor
aad
arpl
jg
push
daa
mov
dec
mov
and
push
mov
(bad)
fdiv
sbb
icebp
mov
popa
mov
shld
inc
sub
pop
aad
enter
nop
(bad)
and
pop
mov
(bad)
hlt
mov
(bad)
daa
adc
fs
ret
es
dec
out
or
xchg
fidivr
outs
sub
les
mov
adc
inc
ins
test
and
mov
div
popa
mov
les
bound
push
gs
into
cwde
push
(bad)
mov
xor
and
fnstenv
pop
sbb
daa
test
and
xor
dec
iret
fwait
push
push
into
pop
and
or
pop
ror
aam
jmp
xor
mov
les
mov
aas
mov
mov
ins
cld
xor
div
jnp
mov
xor
lock
addr16
inc
sub
ja
ins
gs
sbb
lahf
popf
xchg
jne
test
inc
fidivr
inc
int3
or
sbb
cwde
xor
mov
sbb
cmc
je
test
shl
scas
or
push
retf
icebp
out
jns
lahf
or
fstp
cmps
sub
lea
push
fcomp
xchg
fwait
inc
push
cmps
cmp
call
sti
rcl
mov
leave
or
push
fist
in
loope
test
fcom
fcomp
sub
dec
leave
hlt
push
scas
rcr
push
test
and
aaa
dec
cmp
sti
add
mov
stc
xor
fnstcw
or
movs
inc
ds
mov
pop
mov
iret
jmp
mov
lock
daa
mov
dec
aaa
sbb
pop
out
pop
xor
mov
fiadd
mov
mov
lods
scas
fidivr
pop
adc
xor
movs
xlat
ja
dec
or
jge
test
cmp
cmp
mov
push
mov
mov
fsub
js
xchg
aam
fiadd
ins
retf
jmp
leave
fldenv
dec
retf
scas
or
and
rcl
loop
cli
loop
add
iret
mov
fbld
ja
mov
dec
mov
pop
cmps
push
push
cmp
pop
test
inc
adc
and
(bad)
retf
lods
push
push
nop
test
(bad)
cmp
aaa
adc
sub
mov
inc
inc
and
cmp
shr
fnstenv
xor
cmp
xor
sbb
into
cs
dec
lahf
adc
xor
sbb
dec
pop
pop
adc
jmp
inc
jne
sub
push
jmp
leave
pushf
cmc
mov
inc
gs
clc
push
push
cmp
cli
je
nop
or
jmp
and
sub
sbb
les
shr
imul
retf
loopne
cmc
jl
imul
fcmovnb
scas
rol
adc
mov
cmps
xor
aas
sub
adc
pushf
and
sbb
sbb
adc
fs
loopne
jne
hlt
or
cdq
xchg
mov
test
repz
mov
(bad)
(bad)
dec
adc
dec
popa
jge
sahf
lods
rcl
movs
cs
cs
mov
sub
cs
lock
pop
pop
fwait
imul
xor
xor
push
sbb
lock
stc
mov
ins
aas
pop
rcl
and
dec
pop
xchg
mov
sti
lahf
sub
cwde
push
mov
mov
inc
enter
cmps
in
mov
nop
inc
jg
jle
imul
push
push
push
(bad)
lods
test
sbb
mov
sub
aam
jne
int3
sbb
add
and
fadd
fild
adc
pop
fs
xchg
outs
jbe
shr
dec
pop
dec
mov
and
pushf
push
sub
pusha
xchg
test
cmps
int3
stos
div
data16
sub
mov
pop
pop
dec
dec
jmp
mov
aaa
jmp
inc
fsubr
mov
mov
cwde
mov
pop
jmp
cld
ins
or
nop
ja
mov
test
cmp
push
jb
mov
xchg
pop
push
jle
(bad)
push
neg
popf
aaa
loop
cmp
(bad)
test
xchg
out
repnz
stos
cmp
xchg
dec
lock
mov
pushf
shl
inc
sbb
repnz
add
cmp
daa
add
jmp
aaa
adc
mov
xlat
iret
in
inc
or
or
adc
test
int
aaa
cmps
add
xchg
popf
add
cli
xchg
pop
add
and
test
push
imul
pop
out
push
rcr
xor
jecxz
shr
call
push
pmaxub
pop
(bad)
jnp
mov
stos
mov
scas
popa
sub
aas
fs
out
push
dec
movs
lahf
dec
mov
cld
in
fidivr
mov
dec
sbb
dec
gs
push
mov
pusha
shr
nop
xor
ret
fcomp
inc
out
les
inc
or
xor
in
js
popf
jge
adc
sahf
pop
dec
and
les
and
ret
in
repnz
popa
cmps
inc
or
in
mov
pop
in
mov
dec
pop
out
fisub
cmp
pushf
inc
(bad)
dec
mov
aas
push
test
je
cmp
gs
and
adc
aaa
cs
cs
repz
mov
retf
repz
jmp
inc
out
mov
jge
pushf
dec
aas
addr16
int3
(bad)
xchg
mov
fsubrp
push
in
scas
pop
jge
repnz
les
adc
scas
pop
ins
dec
loopne
sbb
pop
icebp
mov
adc
rcr
aaa
sbb
push
pop
fld
nop
clc
mov
mov
pop
aaa
mov
xlat
pop
dec
jmp
mov
sub
or
jmp
in
mov
(bad)
shr
sar
or
loope
xor
hlt
sbb
mov
icebp
enter
sahf
push
push
movs
add
(bad)
sub
icebp
jnp
call
fild
imul
cmp
inc
or
fcomp
dec
out
retf
lock
cdq
dec
ins
es
cmp
jg
ins
adc
push
mov
leave
pop
ja
mov
push
sub
fcmovb
dec
xor
lock
pop
cmps
(bad)
icebp
push
push
sahf
push
push
stos
test
mov
mov
faddp
dec
or
fsubr
push
xchg
dec
stc
xchg
pop
sbb
in
jmp
and
imul
xor
jno
xchg
mov
push
ret
xlat
jmp
dec
inc
and
push
ret
mul
lods
adc
mov
push
cmp
add
pushf
push
mov
bswap
pop
stos
and
clc
mov
mov
dec
push
daa
ret
fldcw
(bad)
std
aad
gs
cmps
mov
dec
jle
inc
and
lds
stos
ror
out
mov
pop
shl
pop
or
ja
(bad)
clc
pop
aam
sbb
pop
arpl
fcomp
cmc
js
jb
lds
mov
cld
jg
in
ja
mov
aas
fist
sar
dec
sub
aaa
pop
jne
mov
dec
loopne
ins
or
mov
mov
pop
mov
adc
lods
ins
xor
mov
pop
lds
repz
mov
out
mov
mov
cmp
sar
lahf
div
addr16
sub
addr16
inc
sub
adc
jmp
jnp
xor
xchg
inc
hlt
push
pop
enter
pop
enter
mov
xor
push
stos
out
pop
mov
inc
outs
loop
mov
fisub
xchg
loopne
pop
cmps
xchg
clc
push
mul
sbb
xor
iret
aaa
mov
or
mov
addr16
outs
mov
mov
in
dec
jmp
out
jmp
adc
adc
repnz
or
icebp
scas
fcom
push
mov
adc
xchg
(bad)
pushf
push
fwait
jmp
addr16
out
(bad)
push
mov
int
xchg
xor
jp
and
daa
pop
ins
sbb
xchg
mov
adc
imul
push
mov
imul
ror
mov
jns
mov
xchg
mov
adc
outs
mov
out
test
pop
and
imul
out
(bad)
push
mov
icebp
fstp
mov
xor
ja
call
std
pop
cdq
push
ins
pop
mov
fiadd
push
daa
pop
rcl
int3
iret
inc
stos
sbb
dec
cli
sbb
retf
add
rcr
lods
cld
dec
out
dec
popf
out
mov
or
dec
ja
push
fwait
cmps
(bad)
call
xchg
lds
push
sbb
out
jns
mov
retf
sbb
sti
cmp
movs
or
mov
mov
jle
fld
cmps
ss
dec
(bad)
pop
and
cdq
pushf
inc
pop
add
cdq
ja
sub
sub
fwait
mov
xor
idiv
in
jmp
inc
mov
cmc
mov
or
std
mov
scas
jmp
jno
dec
add
xor
out
mov
outs
fcom
mov
sti
pop
ja
js
stos
test
dec
rol
mov
rcr
cld
mov
nop
sbb
and
mov
stos
inc
icebp
scas
adc
sub
(bad)
pop
(bad)
jb
jnp
sar
in
inc
das
and
les
push
xor
mov
ss
sbb
inc
fnstcw
dec
arpl
push
retf
(bad)
adc
out
and
adc
cmps
enter
xchg
mov
or
jp
jmp
dec
push
int3
cmps
jne
cwde
dec
xchg
out
cmp
es
mov
lods
adc
repz
push
sub
lods
push
test
or
cld
sahf
pop
mov
jnp
scas
jnp
in
add
xchg
fwait
cmp
popf
fwait
sbb
jb
clc
jmp
and
cmp
test
inc
repz
pushf
addr16
inc
adc
adc
push
arpl
inc
jbe
lds
adc
(bad)
addr16
stc
dec
sub
mov
sbb
jno
inc
imul
cmps
xchg
test
pop
add
cmp
sub
outs
mov
cmp
pop
fwait
mov
jnp
jle
sahf
cmp
xchg
mov
adc
loop
pop
ins
add
push
shr
stos
std
inc
ret
retf
lods
std
enter
inc
enter
sbb
dec
in
daa
or
mov
mov
aam
push
mov
cmps
daa
or
ficomp
adc
xchg
mov
loope
test
pop
add
inc
mov
pop
add
dec
ret
add
outs
je
mov
shl
jmp
sbb
lock
push
addr16
ficom
(bad)
js
add
(bad)
ror
stos
ins
xchg
retf
clc
mov
retf
fwait
mov
mov
xchg
mov
jg
sbb
fdiv
popa
std
pop
cmp
cld
sbb
dec
arpl
mul
neg
int3
sub
fild
neg
test
inc
mov
les
inc
fidivr
cmp
pop
dec
mov
fstp
mov
test
jne
sub
dec
xlat
mov
jmp
push
out
call
adc
pop
sub
pop
aam
push
dec
jb
pop
xor
cmp
test
jae
sub
imul
cli
xor
push
mov
lock
adc
mov
fiadd
inc
pushf
imul
iret
leave
or
mov
xor
pusha
pop
add
xlat
out
fidivr
test
sbb
lahf
ret
and
stos
mov
aam
pop
xor
mov
into
dec
cmp
leave
fstp
pop
jmp
mov
and
fcom
push
dec
adc
xchg
push
cdq
nop
push
pusha
and
or
and
imul
call
sub
ds
add
(bad)
push
test
arpl
mov
outs
vpsrlw
pushf
cmps
adc
sbb
loope
mov
pusha
xlat
pop
mov
ror
and
neg
aam
(bad)
and
jnp
iret
mov
stc
mov
in
popa
pop
cmp
dec
pop
iret
or
sub
inc
sub
lods
xchg
inc
or
addr16
mov
and
cmps
dec
out
push
xor
or
push
cld
mov
sbb
mov
pushf
add
xor
xchg
pop
mov
push
push
adc
cmp
fidiv
imul
push
inc
out
ds
cmps
mov
ins
test
add
pop
inc
or
sti
mov
jge
cmp
jo
pusha
push
shr
das
and
addr16
mov
push
out
fsub
xchg
push
cmps
(bad)
xchg
inc
cmp
pop
aam
pushf
and
mov
xchg
dec
pop
out
imul
into
push
inc
lods
loop
retf
sar
mov
imul
fst
stc
sbb
jmp
ins
rcr
imul
xchg
not
jno
pop
mov
mov
adc
fisub
popf
push
outs
mov
dec
push
mov
mov
xor
addr16
xchg
mov
push
xor
cmps
fild
or
pop
cs
mov
lods
pxor
mov
xor
jbe
pop
vhaddpd
adc
pop
aam
lods
mov
sti
pop
push
mov
inc
mov
or
(bad)
dec
out
pop
rol
cwde
mov
repz
(bad)
xchg
lahf
push
inc
inc
cmp
std
push
xor
sbb
inc
aam
add
jmp
xchg
sbb
xchg
fs
retf
mov
mov
addr16
jnp
test
mov
jg
pusha
movlps
retf
xchg
adc
or
add
xor
cmp
out
mov
scas
mov
push
inc
xchg
mov
pop
ins
mov
push
pop
inc
and
push
mov
inc
mov
pcmpgtd
jmp
pop
fidiv
sub
xchg
je
mov
add
jl
dec
or
(bad)
xchg
pop
scas
dec
xchg
cmp
xor
add
dec
fsub
and
pop
pusha
dec
leave
pop
das
jo
ja
and
xor
lods
int3
mov
test
pop
ins
adc
cmp
ins
fimul
mov
adc
dec
or
cmp
rcr
es
cmp
popa
sub
jmp
aad
sub
pushf
in
scas
dec
iret
fld
popa
leave
sbb
sbb
xchg
(bad)
shl
test
in
add
mov
mov
cmc
dec
lock
sti
ror
lods
lock
inc
(bad)
push
sub
call
aam
push
icebp
mov
mov
sbb
int3
pop
sub
sbb
or
rol
pop
in
add
lods
rcr
xor
pop
or
mov
mov
jmp
mov
loope
inc
xor
adc
enter
pop
sbb
sbb
out
in
dec
mov
imul
dec
out
out
mov
cmp
push
xchg
and
cmp
test
inc
sbb
arpl
lods
out
test
pop
hlt
sub
shr
cmp
out
out
xor
std
add
call
shr
out
sar
push
pop
iret
mov
outs
sti
mov
call
test
xor
jmp
pusha
call
push
fisttp
sar
pusha
into
pop
loop
aad
mov
sar
pushf
inc
(bad)
cmp
cs
mov
pop
cmc
inc
(bad)
mov
lods
xor
adc
loope
adc
cmp
jg
aam
lock
mov
sbb
mov
push
mov
mov
jnp
lock
fisttp
sbb
and
(bad)
mov
shl
mov
push
pushf
adc
xor
je
xchg
fmul
sub
jmp
fwait
out
add
cld
inc
sub
xchg
fxch
xor
pop
jg
mov
scas
xor
enter
loop
push
cmp
stos
(bad)
aam
shr
ret
mov
out
add
les
push
ins
push
sbb
scas
cdq
jg
cld
push
outs
jecxz
pop
or
xchg
ror
std
fcomp
add
sub
sbb
rcl
xchg
test
pop
jmp
or
sbb
mov
and
xchg
enter
jl
jl
movs
mov
outs
cmc
xchg
or
push
dec
mov
jae
inc
push
and
mov
cld
ret
dec
cmp
rcl
ins
push
sub
sub
inc
les
jg
ss
dec
pop
(bad)
mov
mov
(bad)
cmp
cmp
pop
mov
xchg
dec
pop
mov
inc
pop
add
xor
jne
clc
aam
mov
test
mov
aaa
mov
xchg
leave
sbb
push
outs
push
repnz
fdiv
movs
push
add
dec
out
out
mov
jno
sub
pop
jge
inc
push
aas
aad
scas
enter
loop
fcomp
stos
push
push
enter
mov
mov
pop
jmp
dec
imul
sahf
jns
pop
stos
cmp
dec
add
mov
inc
les
daa
mov
push
sahf
inc
(bad)
cmp
or
add
adc
pmaxub
rol
cdq
pop
mov
pop
sahf
mov
and
test
aad
jno
push
leave
jg
or
adc
mov
pop
pop
mov
jl
call
inc
arpl
outs
movs
loopne
push
cmp
mov
test
imul
sar
cmp
aad
mov
dec
sbb
or
scas
std
or
mov
fadd
push
lods
in
lds
loope
xor
xchg
daa
rcr
add
lahf
loopne
dec
out
push
lds
aad
mov
out
fist
xchg
mov
mov
and
jp
out
mov
dec
pop
push
mov
xchg
pop
xor
push
mov
pop
add
push
aam
jge
(bad)
push
imul
inc
cmp
shr
test
push
jmp
mov
movs
call
shr
dec
push
in
cwde
jge
add
push
clc
jge
ja
fisttp
lock
jmp
(bad)
aam
xchg
jmp
cmps
and
js
enter
and
pusha
(bad)
addr16
inc
sbb
retf
mov
mov
xchg
xchg
(bad)
mov
ins
sbb
(bad)
sub
cwde
pop
popa
daa
xor
loope
out
movs
scas
xchg
cmp
enter
mov
sbb
in
call
add
adc
addr16
push
dec
les
push
sbb
inc
in
dec
jbe
out
out
ins
sbb
or
cmps
retf
loop
push
mov
sub
daa
xor
jle
xchg
mov
fstp
adc
retf
sub
mov
push
daa
pop
sub
push
dec
sub
add
loopne
jo
push
std
cwde
and
pushf
out
and
(bad)
fdivr
push
fwait
mov
ror
add
nop
mov
je
loopne
stos
fwait
pop
or
xor
out
ficom
dec
lods
pop
pop
fcmove
(bad)
std
outs
js
mov
daa
pop
pop
jne
into
dec
mov
push
addr16
mov
daa
movs
xchg
and
js
mov
add
cs
bnd
dec
movs
jg
inc
xlat
in
ss
jmp
pop
repz
out
inc
xor
mov
stc
push
arpl
mov
xor
or
pop
sahf
pop
inc
sbb
rcl
cmp
(bad)
pop
cmp
ficom
movups
mov
xchg
dec
adc
pop
and
xchg
imul
jp
inc
loopne
add
loopne
sub
jae
fnstenv
shr
int3
adc
add
push
sbb
stos
adc
push
enter
adc
je
inc
ret
mov
push
mov
aas
jae
inc
pop
cmp
mov
jecxz
push
loope
push
jno
sbb
in
(bad)
inc
jno
jmp
mov
int3
ss
cmp
xchg
nop
adc
icebp
outs
xchg
jp
fdiv
jmp
add
pop
sub
or
aad
and
sub
or
mov
popa
pop
cmp
cmp
cmp
aam
ret
pusha
push
jl
call
sub
(bad)
pop
dec
int3
fs
mov
or
loope
push
ja
sbb
pushf
(bad)
cld
or
jno
inc
call
xchg
jle
adc
mov
push
aad
dec
stc
test
lods
lahf
out
les
das
out
xchg
inc
cmp
loope
jmp
pop
jnp
jmp
loop
mov
shr
(bad)
push
mov
pop
jbe
ror
jne
ret
sahf
push
(bad)
cmp
clflush
aam
(bad)
sbb
mov
retf
xor
ss
or
cwde
add
adc
(bad)
or
xor
dec
xor
(bad)
fld
add
movs
aaa
les
xchg
leave
(bad)
sbb
mov
pushf
fild
mov
out
dec
mov
(bad)
cwde
dec
sbb
pop
xor
xor
inc
and
sbb
jne
test
mov
mov
mov
call
cmp
lods
adc
fimul
popf
les
add
or
fdivr
push
and
enter
mov
lock
sbb
or
shr
jo
or
jecxz
test
shr
movs
jnp
mov
mov
popf
xchg
fcom
loopne
sub
cmps
adc
push
xchg
mov
cs
fwait
inc
in
fcmovb
ins
fidivr
push
jmp
ror
sbb
in
xchg
out
(bad)
imul
mov
arpl
int3
lds
sbb
add
xor
adc
push
cmp
sbb
sub
pop
not
test
stc
in
aad
loopne
jne
cli
fiadd
sbb
push
dec
fdiv
sbb
pop
push
dec
jg
push
dec
movs
inc
pushf
pop
push
(bad)
cwde
push
in
dec
(bad)
mov
pop
js
imul
jno
sub
(bad)
daa
test
push
rcr
rcr
or
cmp
xchg
inc
stos
add
aam
sub
sar
jb
lock
cmps
leave
ins
sbb
dec
mov
mov
sub
(bad)
sahf
lds
arpl
js
(bad)
std
sbb
mov
jp
push
ja
pop
inc
out
sub
cmps
into
sub
inc
dec
scas
xchg
out
xchg
outs
jbe
aaa
sbb
out
adc
pop
test
mov
hlt
pop
inc
stos
mov
adc
xor
mov
xchg
jp
jl
push
aaa
loop
push
add
pop
adc
stc
retf
mov
fwait
test
aam
popf
xchg
inc
ds
popf
xlat
push
call
or
mov
paddsw
push
add
and
out
call
ret
dec
stos
or
sbb
ins
mov
imul
stc
xor
mov
rcr
fcom
xor
sub
sub
sbb
push
clc
stos
stos
push
in
mov
(bad)
ret
neg
xor
lsl
push
inc
pushf
cmp
daa
mov
adc
cmc
loope
xor
and
(bad)
mov
mov
xchg
stos
sbb
(bad)
dec
mov
pusha
sbb
ins
rcr
push
sbb
jbe
std
aad
ret
add
cdq
dec
mov
sbb
int3
mov
or
xor
xor
mov
fisttp
movs
(bad)
push
sbb
sub
ds
vmovshdup
movs
add
fcmove
mov
push
mov
mov
adc
or
and
div
aam
adc
xlat
(bad)
not
mov
xchg
jp
pushf
fcomp
push
mov
jmp
fstp
dec
push
sub
pop
dec
push
mov
jle
fcomp
pushf
or
and
shl
in
sbb
sub
adc
jbe
fldenv
adc
cmp
loopne
in
sbb
aad
push
inc
sub
dec
inc
sub
push
lods
pop
jmp
aaa
addr16
mov
dec
leave
inc
popa
sar
popa
jle
add
xor
jno
mov
pushf
sub
xchg
jmp
jns
cmp
or
sbb
dec
sti
lahf
push
(bad)
adc
fild
adc
test
adc
(bad)
mov
inc
lock
shl
clc
ret
rcr
outs
sub
jge
cwde
adc
push
push
mov
gs
jnp
lock
inc
or
and
ror
pop
sub
and
(bad)
adc
ins
enter
push
fisttp
(bad)
push
(bad)
sahf
es
aad
loopne
dec
(bad)
push
hlt
cwde
add
into
add
pop
inc
lods
xor
js
sub
fsub
cmps
mov
test
dec
mov
clc
fsubr
and
retf
into
stc
fiadd
mov
sbb
xor
add
inc
lods
sti
fs
pusha
das
push
inc
jl
push
loopne
mov
sti
(bad)
icebp
fs
into
test
idiv
test
mov
fidiv
sub
jp
mov
call
shl
cmp
fnstcw
adc
(bad)
fisttp
push
call
sahf
nop
pop
js
daa
or
push
das
lock
loopne
aas
lods
mov
xlat
pop
mov
add
sahf
inc
dec
mov
jmp
and
push
sbb
push
cmp
in
cwde
in
sbb
stos
pop
ds
mov
xchg
fistp
ss
dec
imul
(bad)
mov
in
fwait
jno
lds
inc
xor
shl
and
jg
in
sub
mov
ret
push
not
xor
xchg
scas
fcomp
dec
int3
pop
aaa
pushf
cmp
fsub
sub
cwde
out
xor
addr16
int
adc
aas
mov
push
seta
ss
xchg
sysret
sub
sahf
mov
test
inc
xchg
or
shl
imul
shl
mov
fdivr
push
push
(bad)
(bad)
mov
xor
in
inc
mov
lods
movs
lahf
pop
mov
cmp
cmp
inc
in
(bad)
jecxz
jbe
jnp
add
xchg
call
mov
pusha
pop
fidivr
in
scas
add
mov
xor
in
clc
and
lea
shl
mov
sbb
fs
xor
hlt
mov
js
xchg
or
mov
fs
sub
mov
aaa
ins
mov
fcom
jmp
hlt
out
lds
(bad)
mov
mov
mov
add
mov
dec
mov
push
outs
enter
or
cld
fistp
sub
mov
cwde
sub
push
shl
push
jg
push
add
cmp
rol
dec
jp
in
dec
sub
push
xor
lds
pop
push
aam
sub
inc
clc
popf
je
sub
rcr
jno
or
dec
adc
pushf
arpl
icebp
pop
lods
mov
push
xchg
aaa
icebp
dec
xor
fs
jno
test
mov
out
dec
jb
xchg
mov
or
sbb
pop
mov
mul
cs
cmps
(bad)
fwait
adc
push
stos
rcr
dec
shl
shl
call
pop
aas
in
fwait
popa
cmps
int3
mov
pop
jge
dec
pop
mov
pop
movs
addr16
sti
outs
cmp
(bad)
jnp
cwde
mov
inc
cmps
lock
jmp
loop
add
mov
inc
cmp
mov
sbb
xchg
inc
imul
xor
retf
js
mov
pusha
aas
hlt
jnp
ror
(bad)
pop
mov
pop
xchg
xchg
aas
(bad)
push
es
mov
pop
push
retf
cld
add
lahf
es
cmp
lds
addr16
sar
cmps
mov
add
jmp
repz
stos
push
sbb
adc
pop
mov
loop
push
ja
fidivr
jmp
cmps
loope
cmp
stc
xchg
hlt
push
push
mov
jmp
fstp
addr16
pop
pop
pop
sub
out
cld
(bad)
test
leave
cli
addr16
add
call
xor
jmp
add
sub
rol
pusha
dec
sub
retf
pushf
ret
pop
les
lods
cmp
mov
pop
pop
cmp
inc
arpl
mov
jge
fcomp
mov
xor
push
stos
lods
dec
loope
lods
add
jno
pop
mov
cmp
adc
(bad)
stos
pushf
push
fisubr
pop
pushf
jno
add
push
adc
mov
fwait
xchg
lds
add
out
loope
pushf
fadd
cmp
sub
sbb
add
stc
sahf
enter
and
xchg
dec
in
mov
xchg
mov
ror
ins
xor
xor
repz
jge
jl
inc
aaa
call
pop
addr16
in
and
clc
mov
mov
cmp
push
fwait
mov
cmp
inc
inc
in
dec
jl
add
lahf
mov
addr16
mov
sahf
fnstcw
out
test
or
fidivr
push
ja
and
mov
pop
test
push
daa
add
mov
daa
inc
sub
mov
loopne
cmp
adc
into
dec
loope
pop
mov
ss
lahf
test
fist
jb
inc
jns
stos
jecxz
popa
cs
out
adc
sbb
adc
(bad)
(bad)
test
adc
fisubr
pop
cld
dec
xor
pop
lock
adc
jp
xchg
lss
mov
retf
in
mov
xor
sar
add
ret
bound
fisub
and
push
rcl
pop
(bad)
mov
push
xchg
test
jno
push
jp
mov
mov
test
push
mov
loop
popa
(bad)
dec
test
adc
cld
mov
inc
xchg
inc
out
pop
imul
mov
jg
mov
shr
sbb
lahf
adc
movs
dec
into
(bad)
add
mul
stos
call
cmp
add
in
cmps
sbb
jge
mov
arpl
imul
movs
mov
add
add
repnz
iret
mov
and
adc
add
add
out
xor
add
xchg
mov
inc
xchg
fsubr
out
sbb
push
icebp
add
stc
push
bnd
pop
(bad)
push
push
daa
mov
imul
push
jge
push
(bad)
ins
je
xor
mov
or
sti
pop
xchg
les
pushf
xchg
mov
ret
pushf
ficomp
inc
mov
mov
lds
add
push
(bad)
inc
xor
inc
mov
vcvttps2dq
cmp
daa
test
sbb
and
icebp
int3
xchg
stc
retf
dec
lea
jo
fbld
(bad)
sub
jecxz
cwde
ret
fcmovne
sub
test
out
(bad)
outs
xlat
push
adc
and
mov
jmp
(bad)
movs
cmp
test
aas
in
lock
hlt
xchg
clc
in
and
out
shl
aad
aas
into
add
in
dec
pop
ins
sbb
mov
lahf
(bad)
jne
test
adc
arpl
in
rcr
dec
(bad)
sti
out
retf
pop
pop
xchg
add
je
popa
sbb
(bad)
push
sbb
pop
and
mov
jg
jmp
out
test
stos
adc
bnd
stos
std
mov
inc
(bad)
(bad)
pop
pop
and
stos
push
add
push
ins
mov
test
gs
mov
movs
not
mov
or
pop
and
jbe
hlt
pop
pop
in
fistp
mov
ret
pop
loopne
adc
fs
adc
(bad)
(bad)
jne
shr
sbb
xchg
push
jae
jnp
push
loope
and
mov
outs
xor
add
mov
call
mov
jle
inc
jmp
xchg
push
mov
xchg
leave
hlt
cmp
sti
daa
repnz
add
pop
sbb
sub
stos
cmp
xor
cmp
mov
xchg
mov
sub
push
sahf
inc
fcomp
inc
xchg
xchg
stos
(bad)
xchg
or
mov
movsx
outs
mov
xchg
pop
xlat
in
or
daa
mov
popf
cmp
adc
repz
mov
sub
outs
dec
jno
pop
aaa
dec
fcomp
mov
addr16
sbb
into
xchg
(bad)
ss
lods
jp
lods
pop
daa
dec
jge
pop
lods
push
sub
cmp
jp
cdq
mov
leave
add
fidiv
pop
cmp
xchg
inc
sbb
(bad)
mov
imul
xchg
fwait
imul
inc
movq
adc
cmps
inc
mov
sbb
popf
out
jle
push
mov
(bad)
leave
dec
cwde
pop
sete
fstp
rcl
data16
pushf
cmp
pushf
addr16
fisub
mov
or
mov
(bad)
push
aad
jp
add
arpl
sub
jmp
dec
cmp
push
mov
retf
add
or
pop
xor
stos
int3
enter
adc
mov
pop
mov
add
mov
js
mov
and
mov
and
dec
mov
push
mov
mov
js
nop
sub
dec
adc
aad
jmp
imul
add
(bad)
pop
and
add
sbb
outs
xchg
sbb
adc
aaa
jae
sub
loope
js
inc
inc
gs
aaa
xchg
ja
and
ins
cmp
inc
ja
cs
xchg
and
mov
and
dec
fwait
jo
in
and
xchg
jo
sub
lods
addr16
jbe
jo
cmp
mov
scas
mov
sub
leave
and
sbb
pushf
xchg
lea
xchg
data16
(bad)
loopne
or
pushf
(bad)
(bad)
std
push
in
test
test
sar
(bad)
into
sub
add
test
xchg
sub
cmps
adc
mov
fistp
stc
icebp
jl
sbb
ficom
mov
fmul
ss
push
outs
jge
aaa
dec
test
jle
out
mov
cmp
nop
loopne
xchg
or
mov
int3
mov
shl
mov
pop
sbb
das
push
enter
add
pusha
sbb
cmp
push
mov
jb
push
(bad)
sbb
(bad)
and
lds
sub
popf
std
adc
pop
arpl
dec
loopne
xor
fsubr
(bad)
jmp
jmp
mov
enter
popa
into
aaa
mov
rcr
mov
cli
jg
mov
call
stos
mov
imul
mov
push
mov
or
outs
test
das
and
test
daa
xor
xchg
cmp
xor
push
pop
in
scas
or
cwde
sbb
aam
jmp
repz
xor
xchg
rdmsr
sbb
adc
in
mov
fucomip
pushf
enter
sar
aaa
xchg
stos
sbb
pop
fisttp
and
(bad)
dec
loope
es
pop
xchg
adc
adc
(bad)
daa
in
loope
sbb
sub
jae
pop
test
repnz
stos
mov
stos
inc
pop
mov
xchg
cs
xchg
sub
mov
loope
mov
shl
lods
xor
jmp
ss
rol
pop
mov
idiv
xlat
dec
mov
sub
xor
into
dec
cmovb
ds
cmp
pop
dec
test
retf
adc
mov
push
cdq
in
inc
fwait
jmp
pop
ficomp
push
adc
dec
retf
mov
jo
jl
mov
aam
add
bnd
xchg
adc
or
mov
mov
out
cwde
cmp
inc
jns
rol
cld
cmp
cwde
dec
sub
and
lods
push
add
popa
dec
cmp
cmp
xor
aas
dec
push
imul
adc
fistp
adc
popa
xor
imul
popf
push
loop
sbb
cmp
sti
xor
jmp
mov
int3
int3
push
loopne
ins
clc
dec
cdq
sub
int3
xchg
in
add
push
adc
dec
arpl
inc
jecxz
sub
mov
addr16
out
loope
iret
sub
xchg
mov
cmp
call
addr16
rcr
rcl
pop
inc
hlt
push
cmp
dec
xchg
sub
sub
lods
pop
scas
ins
sub
movs
adc
sti
cmp
sub
daa
and
push
and
pop
hlt
scas
inc
or
mov
xlat
fimul
lods
daa
and
cmp
imul
out
(bad)
jnp
fsub
das
dec
fcomp
js
pop
jmp
cmp
mov
jecxz
mov
sub
pop
inc
and
dec
dec
aad
add
push
gs
mov
or
psrld
sbb
lods
leave
push
ror
(bad)
mov
lea
mov
add
mov
cmp
inc
cmp
xchg
icebp
add
xchg
lahf
sbb
jns
lods
stos
pushf
cli
adc
rcr
adc
cmp
ins
mov
or
out
int3
mov
popf
test
addr16
aam
jb
nop
lods
outs
mov
addr16
and
fld
fwait
popf
sbb
test
pop
and
dec
call
fs
xchg
lahf
loope
add
jnp
sub
lods
pop
jmp
leave
mov
hlt
adc
inc
jnp
and
pop
cmp
sub
mov
sbb
sbb
and
test
xchg
int
xchg
jnp
sub
inc
push
int3
inc
mov
test
(bad)
stc
pop
call
pop
xchg
push
ret
xchg
fidivr
jno
and
cmp
dec
leave
iret
mov
loopne
sbb
mov
pop
ficom
dec
(bad)
pop
lods
ss
inc
loope
mov
std
pop
xchg
dec
xor
push
js
dec
hlt
add
aam
lods
push
xlat
repnz
out
dec
cmps
call
mov
mov
pop
out
mov
in
jle
int3
(bad)
push
call
fldenv
and
mov
inc
mov
jecxz
das
pop
dec
cmp
hlt
sub
mov
mov
adc
loope
out
mov
push
xor
int
sbb
daa
jg
call
scas
sar
jp
push
pusha
inc
and
jmp
out
dec
xor
stc
fbld
pop
push
cmps
cmp
and
stos
sbb
sti
add
fwait
cmp
sub
jp
ror
in
adc
inc
test
data16
inc
inc
sub
jge
cmp
jbe
jmp
sub
cs
add
adc
and
fisttp
push
leave
mov
sbb
mov
(bad)
or
pop
and
xchg
nop
pop
pop
jg
xchg
clc
sbb
add
add
iret
or
arpl
jae
arpl
(bad)
test
mov
mov
adc
(bad)
clc
ins
sbb
pop
mov
jmp
pand
adc
xor
lds
rol
xchg
not
mov
push
cmp
add
sbb
sbb
cmp
mov
jo
jp
cwde
sub
xchg
xchg
push
dec
sbb
pop
movs
mov
mov
mov
push
sub
rcl
push
sbb
adc
sub
jmp
push
push
retf
sbb
test
pop
jne
(bad)
jmp
pop
pop
out
xchg
std
in
push
xor
(bad)
xchg
movs
es
(bad)
push
retf
dec
push
adc
mov
or
les
jp
loopne
stos
addr16
test
jle
fcmovnbe
movs
adc
(bad)
stos
add
pop
dec
mov
jmp
mov
retf
outs
das
cmp
and
jle
pop
stc
inc
(bad)
mov
scas
mov
cmp
dec
adc
cwde
push
push
int
pop
(bad)
rol
test
clc
or
test
imul
sbb
aas
or
push
xor
xor
out
out
jne
push
cmp
cwde
dec
inc
xchg
pop
inc
jle
in
pop
repz
jbe
fstp
mov
ins
fstp
push
out
mov
or
mov
cmps
repnz
mov
mov
popa
dec
sub
loopne
push
test
pop
and
mov
jl
arpl
mov
pop
add
and
dec
loopne
mov
call
les
popa
and
and
and
movs
jmp
les
cmp
arpl
outs
inc
xchg
mov
ds
pop
mov
dec
push
mov
pop
(bad)
(bad)
adc
push
in
push
jmp
out
into
pop
cmp
es
xchg
mov
popf
pop
mov
mov
mov
cmp
sub
rcr
jg
nop
fiadd
fmul
dec
xchg
imul
jp
cmp
idiv
and
loop
out
jle
(bad)
or
mov
jno
mov
(bad)
pop
xor
mov
mov
jle
daa
rol
call
icebp
into
rcr
imul
sbb
pop
dec
pop
xchg
stos
mov
mov
ret
or
ins
jo
jmp
push
aas
or
pop
das
cld
push
test
arpl
in
mov
ficomp
push
mov
leave
mov
cmps
jge
mov
or
fs
fldenv
scas
popf
sbb
shl
cmp
cwde
in
mov
in
rol
les
xor
cmp
xchg
aam
daa
push
dec
mov
aas
clc
cmp
shr
sub
fwait
and
dec
adc
retf
xchg
add
jnp
xrelease
dec
adc
outs
and
dec
aam
int3
add
fdivr
inc
cdq
out
dec
call
adc
xor
cmps
iret
mov
mov
in
je
dec
and
xchg
sub
js
fwait
sbb
lods
ins
fist
(bad)
xchg
test
cmp
shr
cld
mov
sbb
fcomp
mov
pop
add
push
dec
and
sbb
mov
shl
inc
inc
pop
out
dec
and
fs
dec
addr16
sbb
mov
mov
sub
add
int3
test
adc
cli
and
int
jge
les
ins
int3
pop
cmps
lgs
cwde
lock
pop
pop
jo
inc
sar
and
dec
(bad)
stos
push
dec
mov
or
repnz
pop
pop
dec
sti
pop
stos
fmul
hlt
std
pop
shl
in
sbb
mov
vmread
push
pop
jecxz
adc
cwde
push
push
sbb
mov
sub
gs
xor
and
adc
repz
test
jg
jnp
aas
loopne
out
adc
pop
es
xrelease
xor
les
or
sub
dec
sahf
cld
or
test
inc
pop
sbb
jne
shl
movs
jae
mov
adc
pop
loop
sub
es
ret
xor
sbb
mov
aam
adc
es
jae
mov
rcr
ds
pop
jmp
imul
in
dec
jae
mov
adc
cs
dec
xchg
xchg
outs
mov
test
adc
les
dec
or
sti
mov
and
test
xchg
sahf
add
in
(bad)
or
mov
repnz
js
loop
pop
dec
push
aaa
xchg
in
jbe
out
jmp
gs
in
sbb
in
mov
jl
add
arpl
xchg
fiadd
lea
push
jmp
or
inc
lock
(bad)
sbb
pop
push
or
bound
cmp
loope
sbb
mov
mov
(bad)
test
mov
std
imul
movs
push
pop
enter
xor
cmp
mov
aas
inc
out
test
xlat
ss
sbb
mov
(bad)
jb
adc
fincstp
add
inc
sbb
xor
es
or
(bad)
push
out
dec
stos
fwait
sar
sub
pop
xchg
mov
pop
mov
lds
adc
rcl
sub
cwde
fs
mov
sub
mov
xor
push
push
hlt
mov
mov
push
popa
scas
jae
mov
stos
pcmpgtb
and
mul
sbb
or
push
or
dec
cmp
fxtract
sub
push
mov
leave
fs
pushf
dec
sub
sbb
add
dec
pop
xchg
aaa
dec
jns
cmp
idiv
fidiv
and
mov
sub
xor
aad
mov
push
pop
pop
outs
retf
cmp
sbb
and
scas
and
stos
int
adc
pop
pop
mov
gs
or
dec
sbb
xchg
stos
jae
mov
ds
imul
push
dec
sbb
out
int
test
sbb
jecxz
cmp
dec
inc
inc
and
(bad)
fiadd
dec
das
pop
pop
mov
out
jo
pop
push
cli
jns
push
ins
rcl
push
stos
sti
hlt
pop
xor
idiv
pop
dec
cld
in
push
iret
imul
test
outs
int3
dec
dec
dec
sar
pop
jnp
rcr
push
push
add
sti
stos
(bad)
push
mov
in
retf
sbb
cld
retf
sub
push
adc
dec
mov
push
retf
cdq
and
mov
pop
inc
and
pop
sub
dec
shl
or
mov
xchg
lock
jb
push
aad
daa
outs
(bad)
push
rcl
mov
jmp
nop
lock
les
xor
clc
xchg
pop
rcr
push
dec
clc
mov
nop
dec
mov
sub
mov
daa
add
fsubr
push
leave
sub
add
mov
mov
inc
push
call
fnsave
lds
mov
ins
mov
inc
sbb
stos
fst
jo
pop
push
inc
sbb
push
sub
cmc
push
imul
loop
mov
xchg
lods
pop
test
mov
shl
pop
dec
in
out
and
rcr
mov
cmp
push
jmp
ret
add
jg
fld
jnp
or
push
adc
inc
sub
push
sbb
out
xchg
retf
stos
mov
mov
retf
cmp
mov
dec
sbb
sbb
outs
jnp
repz
mov
dec
ds
in
xor
je
pop
mov
(bad)
push
stc
(bad)
cmp
cmps
xchg
mov
xor
aas
push
cli
dec
das
test
ds
aad
push
dec
push
mov
je
cmp
out
adc
add
xchg
inc
add
enter
jmp
(bad)
mov
push
nop
pop
fwait
dec
rcr
sub
retf
pushf
mov
mov
(bad)
xor
jle
int
nop
sbb
cmp
ss
mov
dec
adc
fcmovne
pop
sbb
cmp
push
add
push
dec
(bad)
loop
(bad)
jge
cmp
aaa
(bad)
mov
fsub
sbb
test
mov
xchg
fnstenv
inc
inc
sub
cmp
ja
sub
arpl
or
loope
xchg
sbb
fild
gs
xor
push
mov
inc
leave
fiadd
(bad)
je
sbb
sub
or
in
adc
sti
cmp
cmp
mov
xchg
enter
push
test
jae
call
fs
sbb
xchg
sub
lods
cmp
lods
jno
sahf
mov
outs
dec
movs
aaa
mov
xchg
push
mov
idiv
adc
push
fsubrp
not
aaa
cmp
retf
xchg
mov
jmp
(bad)
std
adc
les
cmp
stos
lock
push
adc
pop
xor
push
pop
pop
xchg
call
fdiv
push
push
xor
pop
mov
adc
mov
xlat
imul
les
push
cmp
jecxz
aam
loopne
rcr
push
out
pop
xchg
bound
cmp
adc
es
aam
push
loope
adc
mov
mov
add
sbb
in
mov
xchg
dec
les
jmp
test
add
cmp
in
mov
and
loop
(bad)
pop
inc
sub
call
xchg
retf
or
mov
mov
sar
retf
int3
test
inc
inc
sub
push
out
rcl
sub
(bad)
xlat
sub
dec
sub
sbb
jl
dec
pop
pop
jns
mul
ficomp
and
outs
push
mov
add
mov
pop
movntq
out
cmp
and
stos
xchg
inc
div
inc
mov
lods
cmp
mov
sub
xchg
loopne
sub
popa
push
imul
leave
mov
les
neg
push
mov
cmps
stos
sar
inc
pop
out
mov
push
or
(bad)
loopne
mov
outs
enter
inc
out
fsubr
dec
jb
or
jb
stos
cmp
clc
sub
sub
scas
ja
stos
adc
jbe
pushf
daa
push
sbb
cmc
loopne
pop
mov
out
push
inc
xor
mov
stc
aam
rcl
push
mov
mov
or
adc
cmp
pop
pop
and
mov
mov
mov
lods
xchg
jmp
cmps
loope
mov
stos
cmp
sbb
mov
popf
dec
iret
fnstcw
(bad)
xlat
xor
lahf
mov
mov
dec
cmp
movs
fnstsw
jp
fs
call
sbb
mov
lea
ret
icebp
das
xor
out
aaa
push
das
jo
neg
(bad)
test
push
sti
or
xor
lock
jp
mov
push
dec
add
in
mov
loop
sahf
jp
outs
mov
sbb
and
por
push
stos
loop
pop
push
retf
(bad)
pop
sub
mov
ins
loop
add
add
pop
sbb
int3
rcl
stc
inc
imul
idiv
mov
popf
jmp
pop
push
sbb
jge
(bad)
dec
pop
shl
ret
fidiv
push
pop
pop
mov
cmp
out
icebp
outs
nop
rol
add
(bad)
fbstp
mov
mov
test
inc
loope
popa
enter
sbb
and
lods
or
nop
(bad)
push
jnp
adc
mov
xor
icebp
stos
sti
(bad)
adc
jl
sub
(bad)
cdq
mov
es
dec
mov
hlt
push
mov
stc
fadd
or
pop
push
mov
push
sbb
sub
rcl
adc
sbb
popf
ficomp
xchg
pop
and
test
cmp
js
jmp
sub
in
push
gs
and
jle
out
(bad)
loop
add
xor
shl
cmp
fwait
sbb
aas
inc
in
pushf
or
inc
pop
dec
xor
or
pusha
cs
int
mov
mov
mov
ss
(bad)
nop
mov
lock
push
hlt
sbb
pushf
or
sub
and
or
fstp
sbb
sub
je
mov
lods
jns
adc
jne
push
inc
and
jle
adc
out
aad
adc
cdq
(bad)
dec
dec
test
test
dec
ret
lds
aaa
out
jp
push
popa
popf
jl
sub
push
sbb
ins
pop
or
aaa
sub
mov
push
mov
fucom
fdiv
xor
or
dec
jle
shl
into
push
sti
(bad)
adc
mov
rol
in
int3
mov
mov
out
jle
dec
adc
fnsave
or
dec
loopne
fsubr
mov
in
push
mov
rol
mov
clc
aam
sub
fldcw
xor
cmps
fmul
push
(bad)
neg
loop
jmp
fnsetpm(287
mov
cmp
push
out
pop
js
sub
fmul
mov
mov
dec
loopne
mov
bound
pop
or
xor
jl
inc
daa
inc
xchg
jns
push
jns
retf
adc
nop
and
rol
fist
jnp
xchg
xchg
int3
out
sbb
repz
sbb
add
sub
xor
enter
nop
test
loopne
int3
jae
test
and
mov
jne
push
mov
pop
push
mov
(bad)
pop
add
(bad)
imul
xor
adc
loop
mov
cmp
xchg
lock
sbb
mul
xor
into
dec
ss
sbb
or
test
mov
pop
and
sub
(bad)
mov
fdiv
push
ss
fs
xchg
rcr
adc
repnz
(bad)
push
mul
loopne
mov
ret
stc
leave
or
sbb
not
inc
xchg
or
cmp
push
sbb
fld
xlat
mov
add
inc
out
(bad)
fstp
jbe
lods
adc
test
dec
(bad)
cmp
cmp
repnz
inc
add
or
bound
mov
sti
mov
xchg
push
pop
ins
outs
adc
sub
imul
(bad)
jb
push
int3
call
test
xor
mov
or
test
int
enter
xor
test
imul
or
mov
mov
pop
addr16
ret
sub
adc
sub
test
jno
xchg
mov
push
lods
addr16
dec
iret
adc
test
inc
cmp
mov
(bad)
retf
cmp
mov
push
sbb
inc
xchg
aam
test
mov
xchg
sbb
mov
lahf
in
xor
pop
pop
cmc
jl
mov
ds
fcomip
cmp
(bad)
enter
cmp
mov
outs
arpl
mov
test
pushf
inc
push
push
fimul
in
jno
(bad)
xchg
test
ins
pop
xor
xor
pop
stos
mov
mov
jg
test
scas
pop
mov
mov
loopne
jne
push
dec
js
shr
sbb
(bad)
into
icebp
stos
fcmovbe
ins
outs
ret
outs
stos
dec
cmps
jbe
(bad)
push
arpl
js
scas
pop
add
jecxz
cmps
hlt
ja
fiadd
sub
popf
mov
(bad)
sbb
push
add
aad
out
lods
sahf
jnp
sbb
add
jb
adc
lods
out
mov
push
fdivr
pusha
push
jge
enter
adc
cwde
div
repz
frstpm(287
sub
rcr
xor
jl
pop
xor
scas
mov
call
cmc
push
les
push
(bad)
add
loopne
xchg
aam
dec
ror
test
aam
xor
std
inc
shl
xor
out
aad
jb
call
out
test
mov
mov
dec
(bad)
call
data16
call
jg
inc
les
push
maskmovq
neg
push
in
sub
stos
xchg
and
dec
stos
(bad)
adc
and
pop
push
mov
cmc
test
xchg
stos
mov
cmc
mov
nop
inc
push
mov
(bad)
sub
out
push
or
cdq
ins
xchg
xchg
pop
mov
nop
sbb
push
je
loop
cdq
iret
sub
arpl
std
(bad)
mov
cdq
dec
xor
retf
cmp
xchg
cmp
in
push
pop
cmp
cdq
jl
shr
ins
leave
adc
pop
jmp
pop
mov
xor
cmp
sbb
movntq
add
and
lea
push
xor
je
cmps
sub
mov
(bad)
aad
dec
xor
(bad)
jle
dec
sbb
and
jbe
lods
into
mov
std
adc
rcl
add
adc
pop
cmc
push
call
dec
dec
aas
(bad)
call
cmp
(bad)
(bad)
dec
(bad)
or
or
(bad)
loop
xchg
cdq
pop
(bad)
ficom
dec
mov
pusha
loope
cli
int
shl
mov
push
mov
inc
rcr
mov
lahf
cdq
jg
mov
pop
stc
inc
xchg
mov
xor
push
stos
fwait
and
mov
pop
imul
push
test
inc
inc
mov
sub
addr16
(bad)
jmp
or
lods
cmc
mov
ficom
rcl
in
xchg
(bad)
cmp
or
and
test
in
push
(bad)
mov
add
mov
adc
xchg
ins
jno
fst
movs
jp
scas
imul
ss
addr16
les
push
fstp
mov
sub
lahf
sub
and
in
lock
fwait
hlt
adc
add
sub
cmp
mov
arpl
xchg
xor
inc
enter
pop
dec
dec
jnp
add
and
push
imul
out
retf
and
fld
ins
xlat
push
stos
jb
out
jo
mov
xor
test
push
imul
cmc
dec
mov
pushf
inc
xchg
or
fs
sub
add
in
xor
mov
push
dec
mov
sub
rcl
sahf
jle
jg
aam
push
iret
xor
into
out
enter
sub
xchg
in
sub
dec
dec
jg
xchg
pop
in
test
sbb
push
jnp
mov
xchg
mov
outs
fisttp
cmp
push
test
cmp
stos
pop
(bad)
loopne
pop
stc
lock
push
sbb
cmp
nop
and
push
mov
fcom
jge
lods
add
pop
(bad)
and
mov
and
add
shl
jb
pop
cmp
rcl
mov
mov
retf
shr
dec
mov
sbb
loop
sti
arpl
loope
push
leave
pop
dec
or
push
add
popa
jg
mov
idiv
or
xchg
pop
cld
(bad)
dec
push
rcl
call
sbb
leave
mov
lds
retf
inc
pop
add
jg
dec
sahf
sbb
jle
fmul
mov
dec
sbb
int3
push
push
xchg
loop
inc
push
push
xchg
fmul
jle
add
in
adc
pop
in
fstp
xor
cmp
mov
je
sub
addr16
inc
loope
mov
xchg
fcom
mov
inc
mov
bound
pop
or
inc
xchg
bound
jp
ss
push
dec
mov
sbb
mov
fcomp
loop
push
fstp
outs
scas
inc
sbb
adc
imul
cwde
push
stc
fisttp
xor
js
out
lea
mov
lahf
jp
retf
ja
inc
jmp
inc
jp
pop
in
xlat
loope
in
pop
and
mov
data16
sar
ficomp
out
mov
sub
adc
or
push
jge
and
mov
ds
pop
mov
ja
mov
clc
sbb
xchg
jmp
dec
std
ret
lea
push
sub
pop
sti
pop
dec
lods
jle
sub
add
daa
popa
pop
or
xor
jmp
cld
mov
out
outs
out
mov
hlt
sbb
jmp
jg
test
pop
in
mov
test
xor
lahf
pop
fld
addr16
pop
or
fdivr
clc
mov
jge
popf
rcr
cwde
sub
adc
repnz
lock
add
faddp
dec
stos
mov
sub
jg
jmp
ss
mov
xlat
jo
mov
sub
test
out
jne
out
aam
sub
add
loop
das
sahf
dec
push
ss
inc
std
inc
adc
sub
sub
lahf
pop
mov
jmp
jl
test
and
mov
loopne
bound
aad
adc
out
push
rcl
sbb
fs
idiv
icebp
push
mov
dec
loopne
out
push
mov
dec
div
ret
mov
xchg
cli
dec
mov
sar
hlt
jl
jo
jnp
aam
and
out
out
lahf
add
call
sub
add
push
pop
fcmovne
inc
retf
push
call
cmc
lods
lahf
xchg
rol
aad
fnstsw
lea
mov
out
loope
cwde
movhps
mov
ret
std
test
push
fstp
test
daa
mov
jnp
or
jecxz
cmc
stc
push
jmp
xor
xchg
dec
(bad)
mov
sub
jle
jmp
push
mov
js
fwait
mov
rcl
push
lahf
jmp
mov
pop
inc
imul
or
(bad)
cs
cmp
sub
mov
lock
mov
out
into
ficomp
jmp
mov
jmp
and
dec
cmp
sti
pop
pop
mov
or
and
pushf
enter
fcmovnb
add
(bad)
fdiv
mov
mov
sar
enter
and
mov
in
cmp
dec
ds
sbb
in
in
cmp
mov
lahf
fst
push
pop
and
(bad)
div
dec
cmp
imul
jmp
dec
cmp
jl
mov
xor
pop
aad
dec
aaa
and
jo
jg
div
shr
imul
int
mov
adc
nop
stos
xchg
jno
sar
xchg
daa
and
and
and
loopne
dec
pop
fs
pop
inc
jae
hlt
sar
xor
fldenv
stos
call
sti
sub
sub
add
mov
(bad)
or
adc
scas
jmp
mov
and
retf
lds
fnstcw
or
jmp
xchg
and
mov
lods
(bad)
ja
(bad)
out
xchg
dec
mov
ins
fisttp
ins
out
add
(bad)
and
fmul
(bad)
popf
je
ror
inc
fcom
cmp
aad
sbb
pop
mov
stc
mov
inc
adc
add
jle
out
adc
shr
test
add
shl
sub
jns
dec
(bad)
dec
mov
test
adc
enter
xchg
scas
push
test
xchg
xchg
mov
add
sub
cmp
ins
dec
mov
ja
and
imul
idiv
pop
sub
aad
popa
and
fstp
mov
pop
lods
cmps
dec
jecxz
cs
push
push
xchg
rcl
push
fsub
int3
push
scas
mov
add
cmps
jp
(bad)
xchg
jp
pop
lea
jg
dec
xor
push
mov
push
sub
cli
xchg
inc
dec
in
sbb
fimul
dec
xchg
and
cmp
mov
int3
sub
mov
movs
movs
lods
and
jecxz
cmp
cmp
fdiv
push
sub
inc
pop
jmp
jg
repnz
xor
sbb
jg
push
push
add
adc
pop
mov
push
push
mov
ds
out
daa
pushf
or
int
dec
dec
shl
rcl
mov
dec
gs
int3
(bad)
fstp
cmp
mov
mov
pop
mov
jno
test
jmp
dec
sbb
pop
mov
scas
mov
xchg
cmp
loopne
ror
sbb
mov
add
fsub
jmp
rol
cmc
mov
es
mov
test
xor
mov
xchg
(bad)
enter
sub
jnp
(bad)
scas
aaa
pop
cmp
mov
test
int3
xchg
pop
pop
mov
cdq
lods
jecxz
out
dec
(bad)
jns
push
popa
ja
ds
jp
mov
mov
cmp
sbb
mov
mov
rcl
mov
mov
cmp
add
mov
adc
cmp
xor
sub
lock
mov
mov
aad
adc
popf
push
push
mov
scas
inc
imul
lea
cld
pop
cwde
cdq
rol
mov
add
sti
cwde
jo
ret
xor
fist
in
fwait
arpl
jno
outs
mov
mov
stos
sti
cli
dec
in
dec
(bad)
sbb
in
push
mov
adc
xchg
(bad)
mov
addr16
loope
int3
test
mov
movs
pop
mov
outs
mov
xchg
test
gs
ja
fmul
mov
cdq
mov
mov
shl
and
add
mov
les
retf
fwait
clc
test
sub
pop
pop
movaps
pop
int
add
ss
cmp
pop
sbb
iret
movs
clc
mov
fistp
ret
dec
(bad)
ss
je
cmp
aam
aam
cmp
ret
push
mov
dec
pop
(bad)
sbb
xchg
adc
(bad)
jo
loope
test
dec
rcr
call
sti
and
sar
mov
inc
ins
pop
mov
pusha
sbb
inc
int3
mov
mov
bound
and
mov
loop
in
xor
push
mov
push
arpl
dec
dec
mov
lock
out
push
popa
pop
dec
mov
dec
push
sar
mov
mov
pop
pop
sub
mov
aad
fbstp
arpl
push
repz
or
xchg
mov
sbb
inc
push
ret
movs
xchg
mov
cmps
rcl
(bad)
dec
sub
xor
leave
pusha
int
cmps
inc
in
push
mov
(bad)
mov
mov
mov
cs
xor
cmps
aam
push
and
push
fld
mov
fwait
out
mov
sub
adc
dec
addr16
mov
mov
pop
pop
jo
mov
pop
xchg
stos
add
clc
adc
add
fmul
xor
jecxz
imul
pop
push
mov
inc
lock
(bad)
xchg
adc
or
stos
stc
sub
sub
push
lods
ret
sbb
xor
fidiv
dec
xchg
xchg
sbb
jae
loopne
xor
inc
or
mov
pop
stc
rcr
in
addr16
ja
dec
mov
pushf
mov
mov
pop
jnp
pushf
ret
cmp
jge
and
leave
(bad)
addr16
es
cmovl
mov
adc
xlat
cmp
sub
pop
cdq
adc
inc
or
xchg
mov
ins
ret
js
and
mov
mov
gs
and
xor
mov
and
and
and
adc
dec
cmp
out
ficom
lahf
loopne
das
ret
jne
in
addr16
cmps
adc
inc
xchg
dec
mov
cmp
xor
inc
xchg
scas
mov
mov
out
stc
mov
add
and
test
fwait
dec
mov
neg
sub
mov
outs
jo
test
inc
(bad)
pop
into
push
mov
fwait
aas
and
push
(bad)
inc
inc
pop
outs
int3
int3
mov
push
mov
lods
or
push
shr
stc
ret
sub
dec
xlat
mov
fldenv
retf
pop
inc
ss
ds
inc
aaa
out
scas
pop
mov
cmc
pop
cmp
mov
sub
int3
xchg
xchg
lahf
mov
xor
arpl
mul
leave
cld
jne
and
int3
(bad)
scas
fiadd
mov
ins
pop
cld
aam
mov
data16
add
mov
sub
dec
inc
push
pop
shr
gs
adc
dec
xor
(bad)
rcr
dec
fsub
push
rcr
movs
xchg
loopne
pop
call
dec
sahf
retf
push
push
fdiv
jbe
fwait
inc
jbe
pop
xlat
dec
int
mov
imul
mov
mov
xlat
cwde
xchg
xor
fwait
addr16
push
xchg
mov
sub
sub
sbb
sahf
xchg
lea
mov
ret
sbb
(bad)
or
cli
ins
(bad)
pop
push
sub
loop
outs
push
fwait
cmp
pop
imul
pop
sub
mov
sub
popa
inc
(bad)
inc
cli
fisub
js
into
xor
std
dec
scas
mov
les
pushf
cmp
scas
sbb
cdq
mov
les
lock
dec
retf
(bad)
in
movntq
out
(bad)
pop
add
loopne
inc
pushf
pop
lds
fst
mov
ja
test
jmp
lods
cmps
pushf
xor
repnz
add
fs
lods
mov
or
or
enter
cmps
les
stc
call
and
push
sub
imul
sub
hlt
sbb
jo
int3
push
mov
push
jne
dec
iret
xor
push
out
test
in
pop
(bad)
sti
sbb
gs
loopne
or
sar
fisubr
idiv
adc
mov
out
mov
inc
add
xlat
xchg
push
dec
mov
cdq
mov
add
inc
mov
enter
(bad)
js
out
and
dec
fs
fucomi
cmp
shl
ja
jecxz
nop
loope
mov
mov
call
inc
in
outs
xor
test
cmps
dec
stos
ret
dec
add
add
or
je
and
es
shl
repz
repz
adc
push
push
or
fadd
out
fist
jp
pop
mov
sub
loop
(bad)
fdivr
mov
lods
sub
sti
or
pusha
sub
mov
jmp
jg
fs
hlt
mov
stc
stos
cli
push
and
dec
push
popf
jp
jmp
dec
ret
aad
or
cmp
in
xchg
cwde
jmp
inc
dec
sub
pop
ja
out
mov
add
cmp
scas
out
pop
push
das
mov
(bad)
or
mov
dec
add
sbb
stc
cdq
loop
push
out
mov
(bad)
push
fadd
loope
mov
jno
rol
ret
lea
add
movs
pop
xlat
pop
cwde
popa
jo
imul
fistp
and
adc
mov
in
push
jl
js
(bad)
xor
dec
mov
jg
adc
pop
dec
fcmovnu
mov
jmp
pop
push
imul
dec
lea
lds
xor
enter
inc
aaa
out
push
add
push
cli
xlat
lods
lds
dec
rcr
xchg
movs
sub
pop
lods
int
inc
xor
neg
(bad)
mov
pop
mov
xor
iret
loope
sbb
push
mov
aam
pop
sub
adc
dec
mul
js
and
call
jbe
pop
fwait
icebp
sti
cmp
sbb
mov
loop
fisub
rcl
dec
lock
and
jne
pop
cmps
pop
sub
mov
jnp
(bad)
shl
pop
rol
fcomp
call
iret
nop
inc
int3
in
pop
test
cmps
ins
jnp
cwde
rcl
jnp
ins
cmp
inc
cmp
loopne
dec
scas
sub
clc
inc
mov
add
dec
inc
ins
fldpi
xor
ss
jl
dec
jmp
shl
sets
mov
lahf
mov
in
adc
pop
ja
push
cmps
and
xor
daa
mov
clc
int3
dec
xor
push
mov
sbb
xor
loop
repz
enter
sub
test
fs
in
xor
cdq
sbb
inc
cmps
daa
mov
rol
add
jg
or
cmp
add
sahf
rcr
fisttp
push
sbb
in
fld
xchg
aaa
pop
(bad)
cmp
add
or
cdq
pop
shl
mov
outs
(bad)
mov
dec
pop
push
adc
retf
xchg
icebp
(bad)
dec
push
sub
cdq
push
adc
adc
push
mov
dec
sbb
push
mov
lods
pop
imul
add
in
dec
push
mov
test
std
aam
dec
inc
iret
mov
pop
fstp
pop
cmp
pop
repz
in
adc
xchg
aaa
push
adc
xchg
push
(bad)
push
cwde
pop
outs
sbb
mov
sub
bound
sti
out
pop
(bad)
cmp
sbb
pop
and
(bad)
add
cs
retf
movs
push
mov
add
std
push
xchg
mov
push
stc
jo
rcl
lahf
cli
test
jno
outs
xor
(bad)
xor
sbb
aad
out
push
retf
or
stos
adc
cmp
sbb
mov
aaa
push
mov
pop
lods
inc
xchg
cmp
mov
sar
rcl
test
dec
dec
gs
scas
pushw
sbb
pop
rol
inc
dec
cld
out
lods
ss
fcom
jmp
(bad)
stos
and
cmp
sbb
and
jnp
aaa
cmc
sbb
or
es
add
xor
bound
shl
daa
xchg
push
loop
fistp
pop
mov
mov
xchg
icebp
mov
mov
icebp
popf
push
loop
in
(bad)
std
and
cmp
xor
push
xlat
cmovo
mov
push
daa
cmp
mov
rol
jnp
aam
xchg
dec
ja
adc
sbb
shl
mov
dec
aad
adc
or
pop
or
pop
jecxz
mov
bound
in
ss
mov
leave
sub
push
popf
xchg
xchg
add
out
add
or
clc
repz
xchg
push
inc
or
call
cs
inc
pop
lea
lock
jmp
mov
dec
mov
jl
jno
fsubp
push
xor
cmps
test
test
outs
mov
dec
std
mov
pop
push
aam
arpl
ds
mov
adc
adc
out
std
mov
inc
adc
in
mov
or
add
lock
in
(bad)
(bad)
out
stc
push
mov
(bad)
in
jns
or
and
movs
into
pop
(bad)
(bad)
cmp
inc
push
rcr
cdq
mov
push
ror
sub
jnp
jnp
pop
lock
in
pop
sub
(bad)
mov
call
out
aam
ja
(bad)
mov
jne
xor
inc
arpl
push
loopne
xchg
rcl
fisub
hlt
add
push
dec
out
ret
stc
stos
sti
rol
mov
jnp
addr16
sub
ror
pop
pop
xor
shl
jmp
loop
add
leave
jo
dec
aas
rol
add
cmp
aad
enter
and
mov
fadd
pop
out
mov
inc
mov
outs
push
inc
xor
add
pushf
aam
cwde
lock
loopne
fucomp
shl
leave
iret
into
mov
(bad)
pop
enter
sbb
pop
icebp
or
mov
xor
jp
jp
cmp
cmps
fdivr
pop
sbb
pop
sub
repnz
mov
sub
mov
or
dec
dec
mov
mov
xor
xchg
loop
mov
cmp
dec
fdivr
mov
pop
dec
imul
xor
xchg
fiadd
pop
js
loop
push
icebp
in
sub
gs
das
sbb
cdq
mov
out
cwde
inc
fdiv
jge
(bad)
stos
loopne
sbb
test
int
pop
add
sahf
jmp
les
jb
and
jnp
lea
dec
daa
sbb
adc
sbb
push
jno
pushf
mov
fwait
inc
ins
push
cmp
shl
das
shl
test
out
rcr
mov
scas
push
fcomp
push
mov
test
fimul
icebp
ja
sbb
push
aam
or
mov
or
leave
fistp
daa
pop
xchg
lock
pushf
dec
les
in
adc
pop
sbb
mov
push
or
jb
stos
dec
cdq
xor
jns
pop
dec
sub
jmp
xlat
ret
and
call
xchg
push
arpl
add
ja
or
addr16
test
push
sbb
pop
aaa
aam
call
jle
idiv
mov
inc
sbb
ja
int
cmp
dec
outs
enter
js
(bad)
int3
stos
call
push
and
test
fwait
dec
add
inc
fcmovne
pop
lods
(bad)
and
sbb
ja
(bad)
dec
jbe
repnz
sbb
xor
mov
pushf
arpl
out
pop
dec
or
int3
jle
arpl
jns
inc
cli
jnp
das
and
je
mov
ror
push
lods
imul
and
pop
xchg
pop
aaa
shl
inc
dec
fistp
adc
mov
xchg
outs
add
inc
xchg
call
in
call
inc
lock
cmps
xor
adc
(bad)
in
fadd
push
popa
mov
loop
adc
jecxz
nop
ret
dec
addr16
(bad)
mov
(bad)
std
cmps
sub
push
gs
xor
dec
add
out
cmp
nop
xchg
arpl
add
jl
xlat
pop
repnz
xlat
sub
sbb
fcom
repnz
cmp
mov
shl
jecxz
pop
sbb
cmc
mov
pushf
dec
icebp
pop
push
mov
and
mov
xchg
frstor
sbb
sbb
loope
in
aas
cmps
xchg
daa
push
mov
sub
mov
popf
dec
jp
leave
pop
cmovnp
fnstenv
js
and
xchg
sub
adc
aam
lea
xor
out
fcmovnbe
mov
jo
add
(bad)
push
pop
or
vpcomq
or
(bad)
out
xchg
rol
inc
inc
push
xchg
sahf
dec
add
adc
aad
mov
pop
sbb
or
sub
mov
scas
enter
cmp
ja
xchg
xor
adc
loop
lea
or
pop
aad
mov
test
loope
dec
shl
sub
pop
mov
mov
fst
xor
arpl
mov
pop
imul
into
jl
sbb
loopne
push
jmp
pushf
push
xor
aaa
mov
aad
aad
rcr
sub
fld
xor
iret
clc
jl
jle
rcl
jmp
rcl
adc
mov
jmp
adc
icebp
mov
sub
or
loope
jno
jmp
adc
sbb
sbb
xor
ins
es
xchg
jle
cmp
xchg
pop
aam
shl
jl
sar
xor
lds
imul
das
and
or
xchg
enter
push
out
aas
xchg
inc
pushf
pop
fdiv
rcr
mov
mov
in
leave
push
add
add
(bad)
aam
stc
pushf
add
adc
ss
arpl
sbb
les
shl
js
cmps
cmp
pop
fnstenv
add
fisubr
shl
aaa
lods
ja
and
shl
add
inc
dec
xchg
mov
loop
dec
and
push
sbb
in
arpl
fwait
pop
inc
xchg
stc
mov
stc
push
adc
push
cmps
push
ins
enter
outs
(bad)
mov
sbb
mov
out
iret
jb
les
pop
inc
rcl
stos
xchg
jge
pop
sub
cwde
or
pop
inc
out
mov
retf
pop
arpl
int3
int
push
mov
mov
rcr
xchg
fst
sbb
js
push
or
add
sub
cmp
imul
mov
jae
(bad)
fcomp
push
adc
jcxz
add
fsubp
out
cmp
pop
popa
or
(bad)
pop
add
or
int
push
jns
push
xlat
cmp
inc
jmp
cwde
fisubr
sbb
mov
fidiv
loopne
jnp
ss
loope
cmps
adc
and
add
add
scas
mov
fwait
cmps
cmps
dec
pop
fiadd
xchg
or
or
(bad)
push
add
mov
rol
add
out
outs
imul
stos
inc
ins
mov
leave
sub
xchg
es
fld
les
adc
adc
nop
inc
in
sahf
mov
pop
cmp
or
imul
loope
jmp
sbb
adc
jle
sub
pop
mov
fisub
push
lea
js
ftst
sub
nop
push
push
pushf
mov
mov
iret
cmp
mov
sahf
arpl
fisubr
push
push
xchg
or
idiv
pop
xchg
jg
pushf
and
aam
xor
add
icebp
xchg
sbb
or
rcl
bound
pop
pop
jmp
shr
jnp
xchg
cmp
lods
add
inc
sahf
push
(bad)
xchg
adc
pop
adc
call
rcl
inc
(bad)
add
fdivr
and
dec
movs
push
pop
mov
pushf
dec
ja
cmp
lds
pop
dec
cmps
add
mov
shr
dec
ret
ret
jge
jnp
or
xchg
xchg
imul
adc
push
ret
push
(bad)
or
shr
push
mov
push
sub
ret
xchg
dec
std
lods
std
int3
lock
or
out
sbb
fdivrp
inc
nop
(bad)
in
fldcw
or
cmp
clc
enter
es
pushf
pop
sub
inc
inc
pop
fwait
cmp
cwde
mov
xchg
xchg
mov
add
mov
(bad)
add
jle
sbb
pop
addr16
sahf
cmc
jmp
loopne
(bad)
mov
out
sub
sar
jge
and
popf
shl
aad
mov
ja
jno
and
loop
xchg
cwde
mov
test
mov
jae
mov
pop
loop
jp
gs
adc
mov
and
jnp
jmp
jle
fsubr
dec
and
adc
ror
cmps
jmp
mov
jmp
xchg
cld
daa
in
scas
cld
or
cmp
fs
pop
fwait
(bad)
xchg
jg
shl
or
repz
mov
mov
test
sbb
push
sar
sub
js
push
mov
outs
mov
rcl
push
cwde
mov
xchg
cmp
xor
mov
pushf
xchg
std
stos
iret
push
clc
inc
sub
xchg
rcl
imul
pop
adc
sti
cmp
les
(bad)
pop
stc
pop
movs
jmp
mov
pop
sbb
jge
cli
pusha
lods
xor
fadd
dec
sub
jo
sbb
mov
or
mov
xchg
sbb
fnstenv
sar
xor
dec
mov
mov
xchg
xor
int
iret
lea
aam
dec
ins
sar
jl
aad
sub
popa
shl
push
push
(bad)
lock
inc
sub
pop
daa
jecxz
inc
int3
out
scas
pop
xchg
inc
cmp
movs
push
push
adc
cs
add
xchg
arpl
adc
inc
inc
push
leave
movs
enter
mov
pushf
mov
imul
or
xchg
push
pusha
je
or
cmp
fs
in
jns
mov
xor
mov
sbb
mov
xchg
sbb
aas
add
xchg
cwde
int
int3
jnp
lahf
loopne
or
adc
pop
mov
sti
cmp
leave
adc
sub
int3
(bad)
lods
(bad)
clc
cmp
aad
pop
xchg
fld
(bad)
push
mov
rcl
stos
imul
je
adc
clc
xchg
inc
fcom
xor
fiadd
pop
xlat
popf
rcl
adc
dec
mov
inc
in
jl
push
mov
xchg
(bad)
scas
and
sbb
cwde
jnp
cmc
push
jbe
inc
sub
xchg
in
or
mov
fist
repnz
aam
inc
dec
ror
stc
push
xlat
imul
or
or
lahf
cli
pop
cmp
fisttp
push
in
dec
dec
push
add
pop
xchg
adc
xchg
push
dec
mov
dec
(bad)
stos
(bad)
hlt
mov
cmp
sbb
fwait
dec
sbb
adc
fcomp
lock
imul
jl
dec
sbb
or
shl
jmp
mov
ja
and
sbb
pop
inc
add
push
xchg
ret
jmp
mov
cmps
sahf
test
shr
out
out
push
ficom
push
dec
cmp
jg
adc
xchg
mov
(bad)
mov
mov
out
or
fucompp
pop
(bad)
and
lds
shl
sbb
cwde
push
call
jge
sbb
add
push
mov
(bad)
mov
test
mov
fs
sub
xor
pop
dec
dec
and
fwait
movs
cmp
jmp
or
dec
adc
add
aam
into
(bad)
jmp
push
xchg
dec
pusha
pushf
(bad)
fidiv
sub
pop
sbb
das
or
cmovle
cmp
add
or
(bad)
dec
pop
dec
mov
pop
arpl
mov
sub
jp
loope
sbb
cmp
movs
shl
push
(bad)
fld
add
xchg
sbb
iret
dec
cmp
frstor
lock
push
rcr
sar
pop
mov
lahf
mov
xchg
mov
out
and
enter
aas
push
addr16
das
mov
pusha
shl
in
mov
cs
jae
jne
push
scas
loope
push
cmp
mov
fucomi
ret
(bad)
retf
pop
cwde
mov
imul
adc
dec
dec
imul
les
daa
sub
add
mov
sub
cdq
loope
push
std
aas
(bad)
aaa
push
popa
(bad)
fs
addr16
fwait
add
sbb
(bad)
test
fmul
sahf
cmp
adc
cs
xchg
mov
sub
or
mov
cdq
mov
imul
adc
pop
cmp
cmp
xor
add
sub
inc
mov
cld
xchg
pop
mov
or
xor
jle
dec
arpl
ins
loopne
outs
mov
test
pop
adc
fisubr
cmp
sub
fild
pop
lds
push
jg
pushf
mov
sbb
dec
sbb
imul
xchg
ins
mov
inc
lods
sub
bound
pop
mov
stc
lock
mov
push
sti
and
stos
lock
mov
pop
or
test
cmps
or
fild
xchg
cmp
in
xchg
or
das
daa
repnz
aas
mov
xchg
add
or
cwde
jb
out
cmc
add
mov
int3
call
(bad)
xchg
push
mul
fstp
sti
aam
or
mov
or
fsubp
shl
test
repnz
adc
and
inc
les
out
es
inc
jmp
lds
xlat
fnstsw
inc
hlt
out
fstp
jecxz
arpl
cdq
xor
pop
dec
jb
in
test
imul
jl
imul
cld
lods
(bad)
push
pop
push
shl
xchg
sbb
js
pop
xchg
push
iret
imul
mov
jge
adc
dec
push
cdq
(bad)
jecxz
(bad)
int3
dec
stos
dec
jg
sub
stos
sub
lea
enter
jb
fcom
out
imul
dec
sub
stos
jl
cmp
(bad)
dec
and
(bad)
cld
idiv
dec
sub
pop
mov
push
(bad)
data16
fdiv
or
inc
add
sbb
arpl
xchg
aaa
mov
(bad)
ja
es
mov
pop
cmp
cmp
shr
les
pop
shl
push
loope
cmp
and
(bad)
fcomp
add
xchg
mov
sti
and
pop
push
(bad)
pop
jmp
cmp
adc
pushf
push
and
scas
shr
inc
pop
jmp
retf
mov
pusha
cmp
dec
ret
aam
mov
scas
xor
fwait
ror
push
adc
cmc
push
js
mov
push
xchg
adc
add
mov
(bad)
cmp
mov
ins
push
not
fidivr
repnz
dec
mov
and
push
and
jg
lock
add
shl
pop
push
push
or
mov
ins
jle
add
dec
test
mov
and
enter
imul
in
scas
or
cmp
and
in
shl
lahf
ret
int3
pop
aas
dec
stc
or
movs
xor
popf
into
shr
fcomp
mov
push
fcmovne
pop
mov
rcl
sub
mov
pop
dec
rcr
call
out
lock
add
mov
or
mov
loop
sbb
fistp
rcl
outs
push
in
jmp
cdq
dec
loopne
test
mov
popf
(bad)
mov
shl
pushf
cmps
in
stos
and
fcomp
pop
push
cs
push
or
(bad)
pop
ja
sub
push
adc
rcl
(bad)
dec
pop
in
xor
mov
loopne
test
and
int
sbb
inc
inc
gs
mov
outs
xor
lock
and
xchg
sahf
or
cmps
sub
nop
movs
sbb
and
push
scas
addr16
mov
and
mov
jg
lahf
in
repnz
call
sar
add
ret
scas
out
xlat
xchg
aam
(bad)
aad
or
inc
dec
fchs
lahf
cmp
ss
and
test
cmc
sub
scas
cmp
xchg
adc
jmp
sbb
add
gs
(bad)
mov
shr
pop
out
mov
push
adc
inc
inc
je
xchg
dec
std
neg
pop
mov
dec
sub
push
iret
fist
push
sub
mov
xor
xchg
xchg
jno
fdiv
mov
mul
mov
shr
sbb
dec
sbb
hlt
adc
jle
fist
pop
xchg
push
pop
sub
sub
stos
sub
stc
pop
xor
in
dec
lds
push
or
cmp
out
inc
es
cld
xchg
cmp
ins
scas
and
jp
stc
dec
inc
lods
ror
adc
mov
dec
cmp
dec
add
in
int3
and
aaa
mov
sub
les
hlt
(bad)
scas
in
xor
addr16
cmps
sbb
mov
dec
pop
and
fdivr
push
inc
sbb
push
jmp
or
es
inc
cmp
repnz
xchg
into
jns
(bad)
pop
mov
pop
and
dec
retf
sar
fcomp
xor
aam
and
or
inc
sahf
jb
cmp
mov
mov
jmp
push
push
mov
inc
(bad)
fcomp
inc
push
add
popa
jmp
sub
and
and
push
fadd
fxch
jl
and
jmp
and
jno
cmp
retf
jmp
or
(bad)
xlat
stc
dec
nop
bnd
aam
dec
push
icebp
int3
call
mov
(bad)
mov
dec
cmc
call
cmp
pop
sub
gs
enter
(bad)
mov
cwde
dec
je
fwait
add
dec
mov
pop
mov
aaa
cwde
xchg
mov
mov
leave
inc
push
aam
rcr
ret
jg
and
dec
out
sahf
pushf
loopne
mov
add
sub
ja
dec
jmp
push
call
sbb
enter
cld
(bad)
cmc
enter
cli
adc
ror
retf
out
xor
imul
adc
test
xor
and
and
aaa
mov
or
ins
into
in
jmp
cmp
dec
jg
fcomp
(bad)
dec
fld
in
iret
ins
and
inc
cmovae
jge
dec
inc
imul
arpl
or
lods
or
xchg
push
repz
dec
out
std
inc
iret
fcom
adc
fld
jnp
mov
jmp
xchg
or
or
lds
ds
mov
inc
pop
sub
icebp
ret
mov
js
adc
test
cmp
mov
stc
push
enter
popf
push
inc
fcos
xlat
cmp
pop
dec
jmp
add
fwait
neg
rcl
int3
push
dec
es
leave
push
das
test
addps
cmp
es
pop
shl
push
data16
shl
das
in
fstp
push
in
jmp
popf
cmp
inc
imul
mul
mov
inc
leave
or
xchg
stos
adc
call
fs
push
cli
test
mov
dec
popf
ja
sbb
xor
bnd
dec
loopne
icebp
aaa
je
mov
fdivrp
bound
popa
cwde
pushf
sti
fnstenv
(bad)
int
int
in
sbb
push
ja
push
jbe
pop
jl
bound
mov
jmp
push
fs
or
ror
cld
lods
push
in
xchg
out
sti
out
sbb
imul
xor
dec
test
mov
mov
movs
gs
call
lds
lods
add
test
cmp
xchg
mov
jge
xor
mov
mov
add
fiadd
lock
stc
fsub
mov
sbb
into
push
stc
xchg
addr16
lds
xchg
xor
sub
adc
pop
daa
sub
xchg
test
and
xchg
push
out
xor
mov
dec
shl
pop
dec
inc
mov
sub
sbb
sub
jb
cmp
lahf
hlt
sub
int
sub
jl
fcomip
pop
dec
dec
push
pushf
pop
mov
int3
pop
imul
push
push
stos
leave
or
scas
bound
inc
xor
mov
ss
or
xchg
jne
sub
jne
retf
jmp
cmps
sbb
push
pop
push
add
cs
sub
pop
xchg
jge
int
(bad)
dec
and
ins
loope
mov
lods
cdq
lock
sbb
ins
dec
popa
pop
xchg
fisttp
sbb
push
mov
adc
adc
jecxz
pop
pop
mov
and
retf
cmc
adc
arpl
aad
mov
arpl
dec
or
mov
xchg
push
pop
pop
mov
dec
jmp
inc
call
jmp
lds
jmp
mov
outs
cmp
cwde
xor
movs
hlt
inc
repz
pop
sti
mov
pop
jmp
or
mov
in
retf
lock
pop
das
pop
movs
ds
push
leave
imul
stos
mov
ror
push
xor
xchg
jns
add
mov
in
clc
dec
cmps
jl
xor
pushf
jo
pop
mov
sbb
pop
jno
stos
leave
adc
in
mov
push
sbb
fnstcw
and
add
push
aad
out
add
ficomp
gs
popa
ja
fs
adc
movs
adc
xchg
iret
pop
out
mov
push
(bad)
cmp
lea
jge
aas
enter
data16
inc
pop
and
push
out
dec
shr
mov
cmp
mov
fidivr
mov
inc
in
repz
std
and
pop
sub
mov
fsubrp
push
dec
stos
enter
call
cmps
div
xchg
js
inc
cli
xlat
aaa
outs
(bad)
int3
xlat
cmps
push
mov
lahf
inc
adc
ins
sbb
pop
mov
mov
lds
int3
test
adc
cmp
shl
enter
sub
xchg
fnsave
push
pop
out
loop
pushf
fcomi
out
cld
fnstenv
mov
lods
aam
jne
inc
mov
es
jbe
sub
loope
jno
mov
(bad)
pop
lahf
xchg
mov
dec
imul
dec
test
push
imul
stos
in
and
lds
nop
ret
aam
mov
pushf
cmp
pop
ret
push
in
jmp
and
add
pop
outs
dec
push
out
mov
scas
mov
ss
and
in
push
sahf
adc
add
maxps
inc
cmp
add
not
in
adc
jle
(bad)
sub
scas
ficom
push
outs
stc
push
cmp
pop
vcvttsd2si
in
neg
bound
icebp
call
adc
mov
or
mov
icebp
(bad)
fnstsw
jo
outs
repnz
loop
dec
xlat
xor
std
popa
add
xchg
mov
jne
add
adc
sub
mov
xchg
cmp
sahf
js
jno
leave
mov
pop
mov
mov
popa
loop
lahf
jbe
hlt
mov
jge
out
std
and
cli
daa
inc
mov
int3
pop
jmp
loop
ins
jmp
in
scas
(bad)
fbstp
cmp
inc
cmp
fdivr
(bad)
ins
aad
ja
(bad)
sbb
repz
mov
(bad)
sbb
(bad)
(bad)
pop
xor
mov
ret
fiadd
cmp
xor
sub
fs
pop
xchg
push
inc
pop
dec
(bad)
data16
test
mov
lods
or
inc
enter
sbb
arpl
mov
sub
pop
scas
js
add
test
(bad)
inc
cmp
adc
fimul
mov
mov
mov
sub
imul
pop
nop
fld
ins
aam
aam
mov
pop
fnstenv
mov
pop
mov
call
into
cld
and
shl
(bad)
fwait
pop
or
in
cmp
inc
not
aam
shl
dec
mov
jmp
sub
call
fld
ds
shr
aam
push
lock
div
xchg
and
adc
ror
mov
add
inc
std
sub
xchg
stos
fisttp
xchg
mov
mov
xchg
and
inc
xor
push
cmp
popa
outs
outs
inc
xchg
ret
add
sahf
es
pushf
jbe
loopne
push
sbb
pop
adc
leave
mov
fisttp
ds
dec
sub
jl
sbb
arpl
(bad)
mov
pop
jnp
push
cmps
xor
jge
lock
jne
(bad)
cdq
mov
cmp
cmp
out
cmp
pop
pop
mov
int3
(bad)
rcl
xor
cmps
and
in
sub
mov
stos
bound
retf
rol
xor
(bad)
movs
retf
jo
lods
ja
sub
imul
mov
mov
dec
sbb
ret
pusha
mov
inc
jge
arpl
adc
lock
jo
(bad)
pop
mov
sbb
(bad)
ror
arpl
and
jecxz
shr
scas
stos
pop
push
sbb
or
inc
push
or
push
pusha
sub
adc
push
xor
shr
or
xor
sbb
imul
icebp
push
sub
xor
sub
push
or
aam
test
or
mov
xor
push
sub
sub
or
mov
cdq
pop
subps
shl
jae
(bad)
and
sti
hlt
sti
pop
jge
pop
shl
cmps
call
jae
mov
loopne
pusha
adc
cmps
cli
dec
loop
lds
sub
mov
jle
jp
cli
mov
je
loope
xchg
push
sbb
xchg
push
out
pop
(bad)
jmp
sar
mov
cmps
pop
scas
jo
push
test
mov
lods
xor
loope
mov
push
ror
ror
xchg
add
ss
repnz
mov
cmp
adc
mov
test
aam
cwde
push
por
sub
ror
mov
sar
(bad)
jmp
sar
fbstp
push
jmp
jge
stos
xlat
adc
add
sahf
addr16
ja
or
aaa
(bad)
data16
or
adc
lds
rcr
lods
int3
xchg
pushf
(bad)
repz
lahf
(bad)
out
mov
(bad)
mov
xor
outs
(bad)
out
mov
les
aas
mov
push
fisub
pop
xlat
cmp
xchg
pop
mov
rol
pop
(bad)
fsubr
add
imul
or
and
jnp
sub
dec
inc
xchg
test
shr
mov
dec
inc
sbb
push
retf
repz
or
lods
push
ret
sbb
dec
ss
repnz
int
test
stos
cs
sbb
xor
fmul
mov
lods
stc
mov
mov
(bad)
adc
lds
inc
fucomp
add
ss
loop
call
repz
mov
imul
ds
push
push
pop
inc
mov
cmp
mov
dec
xor
and
xor
ja
adc
pop
xchg
mov
xor
mov
(bad)
fst
or
div
mov
mov
std
sub
call
mov
(bad)
mov
into
clc
sbb
jmp
xor
push
test
repz
xor
mov
pop
mov
adc
xchg
mov
pop
jp
outs
ss
shr
mov
xor
sbb
and
out
dec
fldcw
aad
sub
jle
pushf
pop
leave
(bad)
stos
pop
scas
shl
sub
aam
ja
jp
push
lods
mov
mov
push
push
sbb
pushf
les
fs
pop
xlat
jmp
mov
popf
lock
scas
jbe
mov
in
ret
repz
push
(bad)
icebp
jnp
dec
nop
repnz
call
out
push
shr
dec
mov
or
je
in
mov
daa
mov
rcl
scas
or
pusha
cld
cs
sbb
outs
fcom
jge
xor
js
mov
xchg
outs
js
mov
push
adc
rcl
gs
daa
pop
int3
jmp
sub
rcr
mov
ror
pop
xchg
popf
mov
mov
pop
and
add
pop
cmp
dec
xchg
pop
fcom
push
push
xchg
pushf
sub
mov
clc
add
std
xlat
(bad)
sbb
jg
cmc
loopne
pop
push
pusha
andnps
int
into
and
xor
adc
inc
cmp
xchg
lock
sub
sbb
adc
and
rcl
fs
jb
pushf
dec
daa
push
inc
or
mov
pushf
adc
mov
xor
push
lahf
xor
pop
inc
sub
cmps
pop
add
mov
mov
lods
inc
stc
test
add
ret
cmp
sub
mov
push
push
xchg
pushf
loopne
lds
xchg
sahf
add
sbb
inc
xchg
mov
push
cmp
enter
retf
push
cmps
rcl
out
iret
push
jnp
pop
shl
into
les
jp
les
daa
push
dec
stc
test
sub
pushf
jbe
push
lods
aam
dec
mov
test
dec
in
ja
mov
jae
inc
fwait
aad
or
ja
xchg
ret
jmp
jb
data16
hlt
lds
push
ja
mov
jecxz
dec
adc
dec
cld
fidivr
stos
mov
ins
push
fcom
nop
sub
aam
adc
xchg
imul
in
int3
jg
add
retf
ss
loop
sti
loopne
mulps
loop
add
(bad)
ret
push
sbb
fisttp
scas
test
jg
xchg
adc
sub
into
jl
mov
or
pop
ins
iret
inc
ret
sti
inc
ret
or
test
ficomp
mov
(bad)
les
mov
mov
dec
mov
mov
dec
push
push
dec
stc
mov
pop
jne
loop
out
mov
adc
xchg
and
add
dec
fiadd
mov
movs
mov
ja
or
and
sti
and
mov
stos
into
jmp
xor
and
jle
push
cmc
or
sbb
repnz
sub
pop
aas
add
add
lods
gs
dec
out
pop
cld
push
(bad)
cmc
sbb
xchg
push
scas
in
mov
retf
fistp
lock
lock
(bad)
jmp
push
dec
mov
sub
adc
mov
pop
jge
fimul
test
jg
loope
sbb
or
xlat
pop
sub
and
pop
mov
arpl
ret
call
cmp
inc
stc
test
xchg
imul
test
push
adc
imul
add
arpl
pop
repnz
into
clc
jge
xchg
xchg
rol
call
call
pop
pop
add
lock
pop
push
mov
dec
adc
mov
cmp
cld
and
neg
pop
int3
(bad)
and
ins
cs
and
adc
inc
icebp
mov
mov
cmp
(bad)
jp
inc
(bad)
adc
hlt
fwait
aaa
not
in
aaa
scas
test
int
xlat
movs
mov
mov
bound
or
jae
sti
scas
cs
inc
and
xor
sbb
pop
mov
pop
xchg
js
cwde
inc
sbb
mov
sahf
dec
test
xchg
pop
xlat
iret
out
or
jl
clc
or
rcr
lods
push
cli
sub
cmps
cmp
pop
dec
ds
out
jno
adc
jnp
lods
inc
arpl
ja
sub
test
dec
mov
jg
push
cli
dec
inc
sub
pop
mov
std
fmul
dec
rcl
cwde
push
xor
mov
mov
mov
outs
shl
inc
movs
aaa
fisub
iret
xchg
mov
inc
adc
fld
jns
xor
sub
cdq
mov
fcomp
jno
mov
pop
xor
jmp
ret
popf
xchg
out
fmul
cmovns
jmp
mov
mov
or
xchg
or
adc
int
rcr
adc
dec
add
mov
hlt
cmp
fwait
fwait
pop
adc
pusha
sbb
sub
sub
jmp
mov
mov
push
es
xor
xchg
repz
rol
jp
shl
dec
mov
add
out
adc
jp
fild
mov
rol
cmp
inc
bound
dec
in
xlat
jge
imul
call
sbb
cli
stc
retf
push
xlat
pop
push
sub
and
pop
(bad)
cmp
adc
int3
pop
fnsave
(bad)
and
sub
bound
push
and
sub
jno
ja
sbb
(bad)
rcl
jmp
or
dec
ins
fimul
push
cmp
add
xchg
outs
icebp
in
rcr
ds
dec
cmp
aad
dec
sti
sub
push
loop
lock
cmp
mov
jbe
dec
dec
or
xchg
xor
shr
push
movs
hlt
push
xchg
(bad)
fdiv
ja
inc
imul
mov
fsubr
ror
sahf
push
gs
fcomp
dec
lea
dec
mov
and
iret
stc
sbb
cmp
rol
inc
(bad)
xchg
rcl
mov
out
xor
out
(bad)
xor
mov
mov
sti
push
std
jmp
dec
loopne
xchg
test
push
jno
inc
int3
and
loopne
icebp
sbb
shl
test
push
test
mov
push
sti
mov
xor
scas
enter
xchg
je
sbb
imul
and
dec
or
loopne
push
push
jne
sti
sub
out
cmps
pop
inc
fadd
jo
mov
ja
jecxz
push
data16
fcomp
ins
mov
test
pop
mov
jmp
cmp
loopne
cmps
aas
jae
test
fiadd
sub
leave
xchg
(bad)
ds
add
aam
push
loop
cdq
push
(bad)
scas
cmps
hlt
arpl
mov
ret
push
push
aaa
aam
dec
mov
sub
fcomp
daa
mov
xchg
lea
scas
sub
and
ins
push
out
mov
ins
aaa
pop
in
xchg
lea
mov
push
mov
push
push
neg
and
jmp
addr16
sub
(bad)
lods
pushf
push
xchg
in
enter
aas
sti
cmps
sbb
mov
xchg
pop
gs
inc
js
call
addr16
cli
test
or
sbb
sbb
add
inc
xor
mov
lods
rcr
mov
mov
inc
ja
mov
nop
fcom
mov
aam
mov
mov
inc
aaa
jmp
ds
out
mov
fs
jle
sbb
sbb
sub
push
dec
cmp
in
ffree
mov
dec
inc
rol
mov
push
mov
pop
adc
(bad)
test
mov
sbb
dec
outs
out
ins
rcl
cmp
fcomp
div
adc
cli
push
stos
(bad)
retf
les
xor
mov
aas
fsubr
ficom
jle
cmp
lods
in
mov
popf
outs
imul
dec
pop
ds
sub
push
mov
xor
xchg
stos
jl
repz
cmp
sub
mov
loope
inc
movs
pusha
neg
adc
inc
inc
xor
mov
in
xchg
inc
inc
and
xchg
addr16
(bad)
dec
pop
ficom
or
mov
sub
mov
xchg
xchg
xchg
ror
hlt
(bad)
xchg
inc
xlat
pop
adc
ret
loopne
push
div
and
sub
sbb
sbb
mov
mov
ja
dec
mov
popf
in
dec
dec
sbb
jo
adc
(bad)
xor
add
std
rcr
aaa
xor
fwait
push
jge
pop
add
call
sbb
hlt
imul
test
(bad)
and
(bad)
dec
imul
int3
pushf
inc
cmps
and
ret
pusha
mov
sbb
in
sub
movs
pop
pop
pop
sti
cli
mov
inc
mov
sub
sbb
pop
xchg
daa
imul
xchg
rcl
xchg
ror
cmps
gs
add
ss
or
inc
adc
pop
outs
sbb
jmp
addr16
mov
daa
mov
dec
mov
xchg
mov
dec
mov
js
jp
mov
or
and
cmp
add
repnz
loopne
mov
dec
push
adc
xlat
mov
mov
mov
jnp
call
and
push
or
dec
lds
test
fucompp
pop
hlt
pop
add
test
add
dec
sub
cwde
xchg
ins
test
idiv
fs
sbb
push
mov
inc
push
pop
cmp
jns
out
bound
xlat
cmp
(bad)
pushf
aam
push
lahf
cmp
jae
add
outs
pop
pop
cmp
repz
dec
lea
push
lahf
mov
jge
push
sar
xlat
mov
fwait
pop
add
pop
push
arpl
adc
loopne
push
mov
cwde
adc
enter
es
jg
movs
jl
aam
out
xchg
stos
arpl
fisub
mov
push
test
test
cmc
out
ins
push
or
sub
and
or
aad
sbb
popf
addr16
xchg
sbb
mov
fbld
(bad)
(bad)
xor
pop
pop
xlat
fld
push
ins
les
test
add
outs
into
test
adc
shl
inc
scas
cmp
xchg
pushf
je
shr
xor
cmps
pushf
add
mov
mov
jmp
xor
(bad)
out
mov
sub
in
retf
or
pop
sub
sbb
mov
xlat
push
cmp
cmps
add
or
dec
into
daa
ins
js
(bad)
addr16
addr16
push
ss
pushf
(bad)
mov
scas
pop
push
fnstenv
push
aam
mov
adc
jge
out
lods
add
outs
cmp
or
mov
cmp
push
sar
mov
stos
pop
push
mov
xor
mov
fimul
jmp
retf
cs
repz
lods
lock
stc
dec
dec
retf
cmp
cmp
sub
dec
shl
in
movs
or
and
pop
sbb
xlat
hlt
pop
pop
mov
jno
or
inc
cwde
mov
ins
fcmovnb
sti
cmp
adc
fsub
fcomp
xor
loope
mov
mov
sbb
xchg
mov
and
mul
push
fcmovu
xor
pop
sub
lock
je
shr
daa
add
xchg
mov
jnp
dec
push
es
mov
and
mov
out
enter
(bad)
retf
mov
mov
nop
jge
cld
adc
(bad)
ja
dec
aaa
or
loope
adc
out
xor
dec
xlat
ss
xchg
mov
pop
push
test
or
inc
push
mov
pop
pusha
stc
bsf
push
pop
mov
inc
jmp
jno
sub
xor
xchg
cmp
add
sub
ret
cmc
sahf
adc
adc
adc
movs
xchg
imul
pop
jns
clc
rcr
or
clc
call
and
pop
cmps
sahf
or
mov
pop
int3
movs
push
cdq
arpl
xor
sbb
dec
mov
sbb
stos
out
xchg
sbb
aad
sbb
dec
xor
(bad)
ins
sbb
push
mov
(bad)
fdivr
add
aas
les
lods
loopne
test
dec
dec
pop
push
jg
cwde
out
add
icebp
or
push
mov
retf
mov
jb
cmp
pop
sub
ret
or
lods
lahf
mov
sub
sbb
cwde
push
or
dec
push
jns
adc
fdivr
scas
data16
arpl
sbb
sbb
and
mov
fdivr
cmp
dec
(bad)
pushf
sub
fsubr
jg
cmp
mov
(bad)
xlat
retf
push
js
(bad)
jo
add
jmp
sbb
outs
mov
xchg
dec
fnstcw
call
sbb
fstp
inc
aad
nop
jno
add
dec
stos
sbb
xchg
hlt
mov
xchg
dec
retf
lahf
out
mov
aam
jge
mov
cmp
sub
mov
sub
jns
bound
jle
pop
les
lock
pop
jmp
ins
sub
cwde
fs
fnop
push
xor
test
gs
sub
mov
inc
nop
out
cwde
cmps
fcom
pop
dec
jo
shl
push
xor
push
lods
dec
cli
mov
cmps
fst
dec
popf
(bad)
pop
or
or
enter
dec
call
mov
jle
adc
dec
inc
lds
test
fldcw
js
popf
imul
sti
sub
mov
outs
pop
jg
mov
pop
mov
dec
test
sbb
in
lea
rcr
sbb
aad
fisub
xlat
outs
rcl
mov
sar
sbb
dec
in
dec
mov
pop
repz
jne
dec
ins
out
pop
jge
outs
ins
nop
push
adc
push
jnp
scas
(bad)
fs
inc
mov
aad
in
or
dec
into
pop
mov
data16
aam
(bad)
and
xchg
pop
dec
mov
pop
mov
push
add
mov
jle
xchg
daa
mov
adc
pushf
gs
neg
test
lea
stc
inc
addps
dec
sub
out
push
push
pop
or
sti
and
scas
dec
push
xlat
mov
add
fbld
dec
cmp
sbb
dec
push
cmps
xchg
xchg
xchg
mov
dec
in
sbb
movs
adc
icebp
(bad)
pop
test
jae
xchg
push
sbb
stos
sbb
lock
xchg
aam
add
cmp
fadd
pop
fs
int3
scas
adc
lods
sub
xchg
dec
dec
loop
stos
lods
lods
inc
or
mov
push
add
mov
mov
fisub
mov
into
call
jl
dec
and
cdq
push
dec
push
mov
or
inc
outs
ins
xchg
div
(bad)
cmp
jnp
dec
mov
and
into
popa
pop
push
xor
mov
lock
push
xchg
mov
lock
mov
or
test
data16
cmps
jge
mov
sbb
fnstenv
sbb
test
and
cli
(bad)
push
in
stos
jb
pop
leave
ss
adc
xor
(bad)
jg
mov
aad
fdiv
push
adc
retf
xchg
clc
sbb
popa
mov
movs
scas
movs
pop
in
ins
mov
ficom
push
or
sbb
sar
sbb
add
ret
cmp
push
test
mov
mov
mov
sub
dec
push
mov
pop
ja
mov
fucom
dec
jmp
aam
mov
fst
jnp
jmp
mov
scas
in
retf
outs
mov
push
inc
ja
stos
data16
dec
(bad)
dec
mov
and
or
push
xor
retf
addr16
jo
pushf
push
fst
xchg
stc
jl
jnp
lock
stos
std
into
mov
fs
(bad)
adc
call
not
dec
fild
(bad)
or
fidivr
ret
sub
dec
jb
je
jecxz
adc
adc
sbb
iret
pop
or
cwde
lods
lods
jmp
loopne
shl
mov
xchg
xchg
test
les
dec
sar
xchg
or
or
int
inc
xor
test
xchg
repz
int
fstp
sbb
mov
int3
call
cdq
push
sti
retf
rcr
scas
pop
push
push
pop
cmc
je
call
clc
jb
stc
cmps
cld
retf
push
fsub
xor
sbb
leave
data16
push
out
loope
sub
sub
mov
dec
(bad)
sub
cdq
adc
xchg
add
imul
dec
jecxz
adc
mul
std
adc
cmp
mov
mov
adc
mov
cmps
jns
pop
fadd
push
popa
jb
shl
(bad)
fwait
push
loope
or
mov
or
push
dec
in
jecxz
lds
mov
cmc
sar
pop
fs
fisttp
mov
rcr
not
sbb
xlat
mov
cmp
in
retf
xchg
aam
bound
retf
push
ins
cmp
push
fcomp
dec
mov
cmp
or
mov
addr16
scas
or
test
scas
dec
mov
cwde
movs
iret
xchg
and
sbb
mov
push
xor
shr
sbb
inc
push
test
leave
mov
cmc
inc
inc
int3
push
jno
adc
mov
add
mov
pop
push
rcl
lahf
loopne
test
or
loopne
ins
cmp
xchg
idiv
in
inc
push
and
mov
pop
(bad)
pop
(bad)
mov
mul
dec
jl
movaps
test
dec
(bad)
jg
outs
jae
je
xchg
jb
(bad)
adc
push
pushf
int
sub
out
jae
cmp
pop
cmp
mov
repz
(bad)
cmc
mov
push
xchg
lods
(bad)
sub
imul
popf
push
aaa
sub
add
adc
jnp
inc
in
cmp
popf
cmp
push
push
sbb
push
ret
lods
outs
loop
je
out
push
int
sbb
jae
popa
fdivr
dec
mov
call
scas
aam
repz
mov
call
mov
popa
sahf
movs
out
ja
ds
dec
cwde
mov
popw
mov
lea
dec
imul
inc
and
or
add
mov
and
aaa
sub
(bad)
mov
and
(bad)
iret
cli
fidiv
add
mov
arpl
ret
(bad)
fisttp
lods
and
mov
jnp
sub
cmp
jbe
inc
rcl
das
mov
mov
sar
pop
sar
(bad)
pop
jl
mov
xchg
outs
mov
add
dec
cmps
pop
mov
(bad)
test
imul
xchg
cli
dec
in
pop
and
ss
out
sbb
fcmovnbe
sub
sbb
(bad)
mov
in
xor
and
int3
ror
and
or
add
pop
cwde
ja
es
adc
add
std
pop
mov
and
cmp
jmp
mov
xor
div
mov
lods
pushf
sub
repz
xchg
ss
out
add
std
mov
jno
cli
rcl
sbb
or
out
jae
popf
(bad)
sbb
int3
push
loopne
xlat
imul
xchg
pop
idiv
sbb
push
lahf
and
fist
inc
push
and
cmp
fst
xlat
adc
pop
out
and
(bad)
test
int3
ins
add
in
fwait
outs
cwde
aam
add
fstp
rol
lds
arpl
in
sub
sub
jne
std
or
add
sbb
sbb
and
and
pushf
xor
(bad)
icebp
ret
and
pop
loope
js
outs
pop
fmul
sbb
ffree
jnp
xchg
fwait
das
lock
aam
repz
fsubr
dec
sub
pop
adc
nop
fcmove
ss
fwait
push
dec
std
rol
cwde
mov
loopne
out
mov
cwde
call
xchg
repz
mov
pop
xor
jno
pop
sub
stc
xchg
sbb
and
push
pop
pop
not
push
sub
push
and
(bad)
loop
cwde
xor
aam
push
xor
push
inc
add
gs
mov
clc
out
sub
push
xlat
out
adc
ror
pop
jo
mov
addr16
mov
sub
fimul
dec
cmp
sbb
xchg
or
test
xchg
dec
nop
popa
retf
loop
pop
test
mov
pop
ss
mov
inc
mov
push
mul
ret
inc
div
pushf
loopne
imul
adc
dec
ret
cmp
mov
loop
push
jl
rcr
dec
jbe
in
mov
sub
popf
shl
in
daa
mov
dec
and
pushf
xor
mov
retf
add
pop
push
pop
inc
mov
(bad)
call
mov
dec
shr
leave
stos
cs
xchg
sbb
and
or
xor
lods
es
leave
add
leave
jns
cmc
mov
xor
xor
add
and
arpl
(bad)
inc
clc
cwde
jmp
or
dec
mov
xchg
lea
and
pop
fiadd
stos
sbb
and
pushf
rol
gs
mov
sub
addr16
sub
jmp
inc
out
shl
int3
add
mov
cmc
loop
xchg
push
loope
jecxz
lahf
adc
sub
into
cmp
cld
adc
aaa
dec
rol
shr
movs
mov
add
xor
mov
arpl
(bad)
and
mov
sbb
xchg
jl
adc
fs
fwait
addr16
pop
jb
aaa
sar
ss
mov
pop
ja
sti
jmp
push
(bad)
in
test
iret
xchg
mov
inc
sbb
dec
les
test
xchg
jmp
repz
in
out
in
xchg
fdiv
mov
scas
cmp
xchg
mov
mov
push
mov
push
out
(bad)
(bad)
pop
mov
push
arpl
push
test
dec
(bad)
push
out
jp
das
add
dec
fnstcw
lahf
pop
pop
adc
add
(bad)
loope
or
js
adc
stc
add
cmp
xlat
push
push
(bad)
sti
loop
fs
push
aad
mov
pop
popa
xchg
repz
ret
jae
jmp
outs
mov
(bad)
sahf
out
xor
pop
sbb
mov
push
leave
out
data16
adc
adc
js
xchg
(bad)
nop
iret
retf
push
iret
mov
shl
enter
(bad)
sub
xor
mov
js
mov
inc
sahf
xchg
pop
fs
fwait
cmp
mov
pop
lahf
dec
jle
adc
pusha
cmovle
cmps
add
fwait
repz
div
adc
shl
pop
outs
pop
mov
cmp
movhps
cmps
fcomip
mov
push
repnz
jg
xor
lods
pop
mov
pop
test
dec
jo
pop
or
adc
dec
leave
or
js
push
popf
stc
stos
dec
cmp
hlt
jnp
mov
push
shl
in
not
mov
jl
cmp
imul
sbb
icebp
(bad)
dec
gs
adc
cmp
cs
data16
add
or
cmp
push
jo
aas
sbb
mov
cmps
jle
lahf
hlt
fmul
fdivr
addr16
iret
fild
cmp
ja
or
retf
into
es
in
mov
pushf
mov
mov
add
add
adc
shl
pop
jnp
inc
sbb
(bad)
daa
mov
cmp
xchg
sbb
add
add
and
mov
lock
and
fsubr
jmp
mov
add
cwde
lods
fldenv
push
xlat
rcl
add
and
popf
push
fwait
mov
out
lahf
fistp
jge
out
lahf
scas
ficom
add
repnz
dec
out
stc
out
and
push
add
inc
or
jmp
xchg
jecxz
lock
pop
(bad)
push
mov
shl
ins
sahf
adc
adc
sbb
cmp
daa
rcl
retf
aaa
sub
or
push
jmp
sbb
sbb
cmps
inc
push
int3
mov
scas
mov
adc
fstp
pop
xor
shl
xor
(bad)
mov
sub
in
cmps
pop
mov
movs
call
or
fdivr
mov
retf
fmul
mov
(bad)
(bad)
pop
(bad)
rcl
fwait
push
rol
fstp
pop
inc
lock
enter
adc
mov
fcmovb
out
xchg
pusha
xor
ror
adc
and
mov
push
movs
xlat
frstor
inc
push
aaa
call
add
mov
test
sub
rcl
push
add
retf
jb
sub
sub
jb
mov
fisubr
neg
in
pop
xor
or
lock
cmp
fbld
enter
jl
scas
fcmovnbe
jle
jp
inc
repnz
fwait
les
pop
sub
dec
mov
and
push
dec
jae
push
add
shl
cld
adc
mov
stc
ret
jle
lods
push
(bad)
inc
fisub
loope
xchg
stos
sbb
jge
pushf
mov
aas
daa
lock
pop
pop
or
pop
sbb
mov
sub
mov
les
fwait
jl
pop
(bad)
scas
cmp
lods
int3
cmps
push
xchg
push
cli
ror
xor
xor
xchg
loope
pop
fadd
pop
test
cmp
fwait
sub
push
cmc
sub
repnz
cwde
mov
pusha
ins
(bad)
dec
(bad)
stos
xor
push
and
out
add
push
mov
sub
adc
vpshlw
sbb
mov
and
xor
clc
out
sub
ss
mov
xor
(bad)
pop
iret
retf
fadd
push
lods
rcl
aaa
xor
fsubr
popf
pop
ss
mov
push
in
daa
enter
aam
stos
mov
fmul
lock
out
dec
or
jne
inc
jo
fdivr
sahf
push
jno
int3
push
jecxz
pop
data16
imul
dec
push
jmp
inc
je
cmp
leave
fs
lahf
ret
or
out
xor
mov
lods
add
iret
bound
imul
xor
inc
mov
sti
cmps
pop
xlat
imul
movs
adc
inc
sahf
jecxz
lods
pop
mov
xor
push
popf
cmp
out
scas
lahf
popa
(bad)
jle
cmp
push
inc
test
jp
jge
enter
cwde
popf
xchg
jno
inc
push
pushf
in
push
xchg
xor
jg
dec
cmp
data16
aam
cld
cmp
scas
sar
mov
ja
fdiv
aad
push
xchg
mov
xlat
ret
mov
xor
scas
out
popf
imul
mov
mov
out
fnop
pop
mov
(bad)
mov
and
inc
mov
and
mov
sbb
les
xor
jp
push
repz
fbstp
mov
inc
cmp
pusha
enter
clc
mov
push
shl
(bad)
push
cdq
out
dec
cmp
mov
fdivrp
pop
iret
pop
or
scas
rcl
mov
adc
push
mov
pop
cli
jmp
and
mov
js
sbb
sbb
xchg
sub
adc
in
xlat
retf
mov
in
sar
push
test
aad
push
inc
push
fisubr
iret
fwait
and
stos
pop
jbe
xlat
push
nop
sub
jg
jo
add
sub
inc
lock
mov
out
ja
(bad)
dec
loope
mov
jmp
data16
mov
fdivr
add
jle
jmp
fdivp
outs
xchg
mov
xor
popa
jl
push
out
jmp
test
fisttp
xor
rcl
push
test
pop
test
out
fld
fldenv
in
push
gs
push
daa
sub
shl
push
int3
push
(bad)
dec
ret
pop
xlat
jge
imul
pop
jge
sub
jmp
das
jmp
(bad)
jo
cmp
mov
jmp
sbb
push
sub
adc
lds
jne
out
mov
xor
mov
popf
adc
mov
or
jns
cdq
cmp
push
cdq
lds
mov
sbb
(bad)
jno
retf
push
xchg
retf
dec
dec
or
gs
push
sti
sbb
mov
and
push
inc
js
dec
dec
mov
xor
add
cs
xor
cmp
mov
push
xor
aam
add
add
xchg
adc
dec
adc
pushf
cmp
add
mov
sub
add
nop
in
sub
popf
test
aad
fimul
ja
les
popf
inc
ret
mov
dec
mov
fnsetpm(287
retf
xchg
sahf
loope
or
test
mov
test
mov
daa
test
jecxz
xor
fnstenv
push
sbb
in
mov
dec
and
scas
cmp
cmp
jo
fnstenv
imul
mov
(bad)
repz
aas
rcr
adc
pop
mov
push
mov
dec
inc
xchg
fdivr
mov
es
imul
inc
out
cld
(bad)
cdq
adc
mov
mov
jl
test
test
xchg
dec
pop
ficom
jnp
aas
retf
push
orps
idiv
or
jmp
lds
pop
in
mov
rcl
xor
dec
rcl
mov
das
xor
retf
neg
or
cmp
dec
in
push
sub
cmp
std
jg
fidiv
dec
xchg
sub
jl
add
inc
pushf
adc
ret
xchg
xchg
arpl
int
rcl
stos
rol
std
inc
popa
fidivr
fs
or
xlat
mov
pop
leave
pop
mov
in
push
or
inc
loopne
movs
(bad)
stos
pushf
ins
inc
jmp
dec
loope
dec
(bad)
aaa
add
inc
pop
push
scas
addr16
inc
iret
out
bound
pop
lods
lock
sub
lds
mov
sub
loopne
mov
sbb
lds
push
mov
psllw
sub
pop
mov
mov
mov
jae
inc
or
pop
es
inc
cmp
gs
in
and
cli
outs
dec
jmp
hlt
push
mov
or
fsubr
(bad)
mov
fdiv
fs
lea
rcr
dec
push
dec
mov
ja
push
or
xlat
imul
mov
push
sub
sbb
aad
test
leave
sbb
in
test
sbb
xchg
dec
xchg
xor
mov
fadd
ja
dec
ret
leave
mov
test
sub
leave
mov
test
loopne
outs
and
mov
pop
mov
mov
pop
(bad)
xor
sub
out
fild
mov
add
dec
lea
jecxz
mov
xor
mov
push
adc
popa
jle
mov
addr16
jbe
mov
xor
into
call
stos
dec
pop
les
add
nop
lods
cmp
pop
push
sub
pusha
jno
add
and
mov
cs
scas
xchg
dec
jg
inc
mov
mov
mov
xchg
pop
xchg
mov
inc
mov
addr16
jmp
loop
pop
dec
cmp
jo
push
xlat
bnd
cmps
pushf
xor
in
hlt
sbb
sahf
loope
add
dec
sbb
push
shl
lods
out
inc
into
add
stos
jns
in
lock
push
and
arpl
dec
(bad)
add
out
std
fiadd
daa
aaa
xchg
fdivr
and
inc
jne
jne
arpl
imul
mov
(bad)
dec
test
sbb
mov
cmc
push
jns
(bad)
mov
std
call
inc
stc
dec
fidiv
mov
pop
cmp
xchg
inc
cs
mov
and
mov
adc
fistp
sbb
dec
push
js
inc
pop
das
push
clc
xor
xor
push
inc
dec
adc
and
xor
xchg
enter
out
add
jns
pop
mov
lock
inc
inc
sar
mov
enter
dec
xor
out
sti
(bad)
nop
mov
jge
mov
(bad)
push
inc
push
add
loope
mov
fiadd
mov
xchg
shl
xor
stos
jle
push
lods
js
and
repz
mov
retf
sbb
sbb
pop
jae
or
(bad)
stos
neg
cmp
das
mov
(bad)
pushf
mov
loop
mov
push
lods
dec
repz
jmp
aad
add
(bad)
dec
push
pop
cwde
fwait
push
xchg
nop
mov
adc
ja
jae
ror
(bad)
ja
and
(bad)
imul
shr
ror
xor
sub
mov
aas
mov
add
inc
dec
test
ins
stos
lods
push
les
in
xor
add
add
mov
mov
pop
mov
mov
out
std
xor
sar
mov
rcr
inc
aam
dec
iret
and
lods
mov
and
dec
jmp
mov
retf
inc
mov
or
dec
std
inc
jbe
push
jmp
and
push
sub
movs
jmp
mov
push
push
nop
retf
pop
shl
movs
add
xor
pop
cmps
xlat
cmp
xchg
push
fild
imul
sbb
add
push
push
cli
add
pop
dec
and
aad
stos
mov
(bad)
(bad)
sub
cmp
mov
dec
(bad)
or
dec
pop
fimul
pop
cmp
(bad)
xchg
fistp
sub
xchg
dec
add
cmps
and
in
ds
mov
test
in
sbb
mov
cmp
cwde
fist
sub
jmp
jl
and
orps
imul
xchg
mov
std
ficomp
(bad)
or
std
fild
mov
jbe
out
(bad)
sbb
fs
push
fist
(bad)
pop
test
pop
push
dec
or
xor
nop
test
stos
(bad)
(bad)
stos
fadd
pushf
pop
sahf
dec
test
adc
cmp
cmp
mov
xchg
xor
idiv
enter
pop
pop
repz
pushf
rcl
or
mov
add
js
add
xchg
jp
jmp
push
push
jp
call
cmp
call
pop
fdivp
inc
es
mul
jecxz
shl
jmp
jns
sti
pop
push
outs
mov
ins
mov
jp
or
out
fcmove
push
sbb
xor
xchg
(bad)
fwait
addr16
nop
push
ret
pop
mov
push
xchg
add
dec
pop
pop
ja
cmps
inc
cdq
or
push
movs
cmp
add
test
pop
psubusb
jns
sub
retf
inc
cmp
sbb
fwait
jge
scas
jo
cmp
call
push
cdq
dec
lock
jp
inc
dec
ret
idiv
sub
adc
ror
jne
je
push
out
push
mov
jnp
fistp
push
push
sub
or
push
ins
push
cli
dec
stos
(bad)
xlat
mov
and
inc
cld
dec
mov
pop
pop
adc
xlat
and
lahf
pop
mov
ds
mov
lods
push
sti
sbb
das
(bad)
sbb
in
leave
ss
sub
fisubr
(bad)
fiadd
xor
shl
outs
pop
mov
lds
mov
add
aam
(bad)
sbb
or
out
lods
xor
xor
daa
(bad)
mov
es
xor
mov
mov
aaa
jnp
xchg
mov
mov
fadd
dec
lods
xchg
stos
or
adc
imul
push
stos
xor
mov
mov
jl
outs
mov
push
xchg
mov
movs
mov
fisttp
pop
sbb
clc
sbb
xor
ficom
mov
repz
sbb
stos
cmps
cmp
xor
jg
mov
outs
mov
aad
jnp
movs
push
int
add
inc
and
add
mov
or
cmp
shr
push
mov
arpl
clc
cmp
shl
add
sbb
dec
cmps
or
ins
dec
aaa
mov
push
mov
ja
dec
cmc
sar
jo
pop
in
xchg
jnp
fwait
mov
scas
add
fsub
sbb
sti
addr16
cmps
or
inc
fcom
call
sbb
cld
dec
out
aam
cwde
or
mov
jmp
out
mov
cld
jle
mov
(bad)
cmps
lds
dec
cmp
xor
mov
lea
sbb
pop
(bad)
out
mov
sub
cmp
fdiv
adc
mov
shl
xchg
das
cmp
xor
fstp
cmp
retf
out
push
mov
ret
imul
ins
dec
jl
hlt
pop
out
jbe
int3
sbb
xor
in
adc
jle
dec
idiv
pop
mov
mov
adc
int3
mov
test
fstp
mov
ja
mov
mov
(bad)
xlat
rol
ffreep
imul
push
mov
fadd
mov
ficom
(bad)
mov
les
scas
or
jmp
retf
pop
jo
rol
xchg
jmp
(bad)
fnstcw
inc
fwait
cmp
aaa
in
cli
fld
frstor
push
scas
sbb
loop
call
xor
sub
cmp
xor
into
dec
cmp
imul
jnp
stos
adc
into
sub
mov
push
sbb
out
mov
test
and
xchg
retf
test
inc
neg
mov
xor
cmp
adc
pop
in
fdivr
cmps
add
push
in
cmp
fwait
pushf
loopne
rol
add
push
xchg
xor
pop
cmp
scas
pushf
xchg
(bad)
sbb
mov
inc
adc
les
push
repnz
inc
lahf
cmp
fs
call
shr
add
(bad)
cli
aam
and
gs
cmp
dec
pop
xchg
dec
cmp
jno
mov
pop
pop
and
pusha
mov
cs
cmps
inc
cmp
fisubr
ins
mov
js
pop
jmp
ficom
mov
pop
inc
rcr
int3
cmps
out
inc
and
and
sti
adc
(bad)
(bad)
out
movs
xor
fcmove
sbb
dec
fst
pop
fwait
pop
or
sti
(bad)
pop
aaa
xor
les
adc
inc
imul
int3
xor
aaa
rcl
ds
aas
sbb
(bad)
xchg
mov
cwde
sbb
out
sbb
pop
pop
jle
jno
enter
in
dec
or
jnp
xor
sub
cwde
sub
xchg
jno
inc
mov
popf
shl
fld
jae
mov
jb
mov
ins
mov
dec
(bad)
jmp
fcomp
test
jmp
jle
daa
mov
fst
in
and
fidivr
push
xchg
cmp
push
dec
jge
out
mov
dec
sti
scas
imul
xor
call
retf
gs
adc
or
knotb
mov
push
jle
cmp
hlt
add
int3
nop
aad
pop
dec
pop
mov
fcom
leave
sar
jge
inc
movs
nop
jg
push
mov
hlt
scas
and
fistp
mov
shl
addr16
rcl
mov
mov
fcom
or
push
dec
fsub
and
pop
push
add
mov
mov
outs
retf
or
(bad)
loopne
push
adc
dec
loopne
hlt
mov
xchg
fist
bound
pop
push
xor
fsub
out
ins
test
push
mov
cdq
sub
inc
loop
test
clc
mov
call
dec
jne
push
test
imul
gs
rol
and
lods
pop
adc
(bad)
and
adc
loopne
sti
cmp
cld
call
adc
and
and
popa
dec
mov
inc
out
rcr
pop
aaa
push
jle
xor
in
push
or
pop
and
hlt
arpl
in
or
sub
xlat
(bad)
add
daa
and
sbb
sub
out
(bad)
xchg
sub
popf
mov
fsub
add
push
xchg
push
cli
push
cmp
loope
and
xor
rol
mov
xor
inc
xchg
popa
ficomp
cdq
mov
retf
mov
mov
sbb
adc
mov
pop
(bad)
mov
mov
and
cmp
pusha
fst
(bad)
ss
sub
cmp
push
adc
xor
(bad)
stc
inc
sbb
cmps
pop
add
dec
cmp
xchg
pusha
mov
movs
sub
(bad)
shr
add
xor
mov
mov
jecxz
enter
xchg
adc
mov
stos
adc
jecxz
xchg
dec
icebp
mov
fwait
and
cmp
lahf
sbb
shl
repz
xchg
sub
mov
in
dec
ficomp
cmps
push
cmc
mov
ss
and
pop
fld
adc
ins
test
fadd
add
jecxz
inc
dec
cmp
dec
dec
(bad)
jmp
fs
sbb
pop
test
jnp
push
xchg
clc
ror
pop
pop
dec
in
pusha
sub
push
mov
sahf
(bad)
sbb
cmp
push
ja
jle
pop
jns
rcl
loopne
mov
sub
jne
arpl
or
mov
adc
and
cmp
or
mov
popa
mov
rcl
mov
retf
inc
adc
adc
mov
pop
in
add
cmp
pop
int3
add
push
xchg
repz
enter
es
lahf
pop
repnz
daa
clc
mov
cmps
nop
iret
data16
xchg
xchg
and
push
mov
sbb
and
leave
pop
int
enter
test
jb
xor
cmp
mov
cmps
gs
not
rcl
xchg
stc
push
add
mov
loopne
inc
rcr
retf
or
xchg
sahf
pop
cmps
mov
mov
lock
in
pop
adc
mov
movs
(bad)
push
dec
inc
lock
push
sbb
mov
jmp
mov
push
lods
xchg
es
push
xor
clc
sbb
xor
pop
pop
push
sub
xchg
hlt
loope
inc
sbb
cmp
test
inc
aas
icebp
cmp
xor
repnz
add
inc
aad
arpl
pusha
inc
or
addr16
call
jae
cwde
pushf
test
lock
ds
push
fcmovbe
fs
ret
push
dec
or
mov
xchg
(bad)
into
aam
shl
push
inc
dec
sbb
rcr
sbb
dec
dec
mov
das
daa
lahf
push
outs
aam
enter
pop
push
mov
pop
cmp
cmp
call
repz
push
push
dec
mov
sub
add
sub
push
mov
cmp
scas
push
pop
add
aaa
mov
ret
add
xchg
push
shl
add
add
in
sar
or
mov
cmp
fst
(bad)
mov
push
sahf
pxor
mov
or
cld
imul
rcl
and
mov
pop
test
es
mov
mov
sbb
sub
(bad)
mov
cmp
xchg
mov
mov
jae
imul
cmp
jp
fcmovne
cmp
or
sbb
fbstp
sbb
and
test
ret
push
inc
xchg
outs
mov
pop
sahf
call
push
clc
test
inc
dec
mov
lahf
jne
and
sbb
imul
mov
sti
and
xor
inc
shl
mov
pop
vmovq
inc
mov
mov
sbb
ficomp
mov
inc
and
mov
in
xchg
jg
cmp
mov
scas
xchg
sub
xchg
or
xchg
push
imul
outs
sub
les
sub
xlat
cmps
aas
dec
mov
push
nop
add
sub
add
mov
xor
addr16
mov
sub
cmps
stos
loope
xchg
inc
xchg
ror
cwde
mov
std
(bad)
imul
std
or
stos
icebp
and
test
mov
and
xor
and
sti
outs
mov
lods
retf
mov
sti
daa
add
jns
xchg
jg
(bad)
les
(bad)
hlt
leave
ins
pop
lock
push
dec
mov
jecxz
ja
push
mov
xlat
ds
out
xor
aaa
xchg
lods
mov
inc
addr16
lahf
test
add
out
mov
pop
fwait
inc
dec
xchg
mov
loop
push
sar
aam
ficom
inc
mov
sub
pop
jno
push
sbb
int3
sub
call
test
dec
jmp
repz
vcvtps2dq
adc
lock
add
xor
xor
xchg
mov
xchg
xchg
test
mov
test
sbb
ret
jg
mov
or
dec
dec
ror
mov
mov
in
and
leave
bound
mov
sar
pop
sbb
enter
xchg
adc
je
cmp
loopne
data16
xor
dec
sub
xor
cmps
mov
div
sub
shl
fsub
cmp
je
adc
(bad)
sub
mov
(bad)
push
jae
pop
mov
in
test
cmp
mov
out
cmp
cmp
mov
pop
daa
adc
push
iret
out
pushf
add
inc
icebp
pop
jns
jmp
sub
nop
add
aad
daa
call
xchg
sub
xchg
outs
xor
jle
pop
out
add
fcom
pop
adc
add
fisubr
scas
mov
imul
dec
inc
lock
mov
int3
adc
mov
test
arpl
xor
(bad)
das
std
or
xchg
push
pushf
ins
ds
adc
pop
(bad)
ficom
or
scas
imul
adc
inc
xchg
scas
xchg
mov
push
pop
xlat
jmp
mov
mov
int
hlt
or
jmp
xor
ss
adc
push
xchg
dec
shl
sbb
cmps
ss
pop
pusha
mov
pop
lods
ror
mov
push
pop
push
shl
and
dec
imul
inc
fidiv
dec
pop
inc
jmp
nop
jb
fstp
xchg
push
in
in
push
add
adc
not
dec
sub
mov
pop
out
ins
xlat
inc
mov
pop
sub
sbb
inc
shl
stos
inc
fmul
sahf
xchg
in
das
repnz
and
mov
addr16
pushf
mov
push
in
(bad)
mov
xlat
gs
mov
cdq
(bad)
stos
jno
pop
movs
push
dec
adc
pop
dec
adc
lods
jno
sbb
sub
xor
call
xchg
cmc
pop
sti
gs
inc
sbb
mov
ret
cmp
jp
int3
shl
(bad)
cmp
icebp
dec
jno
xchg
xlat
mov
xchg
and
aaa
popa
rcl
xlat
ss
mov
movlps
sub
(bad)
mov
push
mul
fistp
pop
fs
daa
(bad)
shr
mov
pop
fnstenv
dec
cdq
dec
push
aad
mov
pop
add
pop
mov
mov
(bad)
jb
fisttp
cmp
or
in
shl
loopne
dec
aad
add
aas
adc
ja
mov
jmp
xor
iret
repnz
mov
lahf
data16
fxch
or
pop
popf
sbb
jae
xchg
sbb
mov
xchg
mov
adc
xor
xchg
jg
lahf
addr16
jb
rol
loop
adc
call
pop
jmp
loopne
push
push
ins
dec
sbb
ins
or
(bad)
aaa
adc
mov
cld
xor
fidiv
pushf
jo
lods
dec
push
aad
addr16
xchg
push
and
scas
mov
and
rcr
pop
sahf
pushf
stos
or
das
mov
leave
or
mov
push
push
sbb
std
pop
and
ror
(bad)
fnsave
pop
push
shr
xchg
rcr
jo
pop
loop
cmp
mov
xchg
mov
in
pop
mov
out
inc
jmp
fcom
inc
adc
dec
or
sub
stos
push
jo
bound
retf
or
dec
call
push
and
sbb
lods
sub
or
pop
or
cld
mov
(bad)
rcr
pop
popf
pop
shr
xchg
aam
jle
dec
fisubr
pop
daa
lock
dec
cmp
ror
(bad)
ja
push
inc
cmps
xchg
jl
dec
mov
push
popa
ins
(bad)
fucomi
test
test
adc
shr
mov
cmp
(bad)
jno
rcl
or
cmp
daa
push
cmp
jg
pop
mov
mov
push
loop
and
xchg
popf
rol
fucom
add
das
retf
popa
pop
retf
pushf
xor
aad
inc
movs
jb
xor
pop
push
ja
sbb
push
xchg
pop
jp
adc
call
test
arpl
aam
inc
icebp
sbb
push
mov
idiv
push
popa
sbb
push
and
mov
mov
mov
push
mov
addr16
sub
call
(bad)
pop
xor
mov
mov
xchg
sbb
(bad)
push
dec
inc
push
lock
xor
sbb
dec
sub
adc
test
jecxz
push
dec
leave
cmps
loop
ds
ror
adc
cmp
loope
aam
jmp
(bad)
sub
add
fnstsw
out
inc
call
and
push
fisttp
pop
test
dec
test
fidiv
pop
fidiv
retf
arpl
(bad)
jne
stos
xchg
xlat
shl
popa
mov
daa
and
cwde
outs
cmp
lods
pop
aad
sti
cmp
xor
cmp
icebp
xchg
pop
imul
fidivr
add
push
cmp
jnp
dec
sahf
fwait
out
retf
sub
icebp
push
push
ds
in
add
and
clc
lea
add
xlat
in
pushf
in
rcl
adc
call
push
xor
out
scas
enter
(bad)
jno
rol
(bad)
ja
rcl
cmp
fmul
push
call
xchg
in
sub
lock
mov
fwait
dec
(bad)
iret
shl
inc
mov
fdiv
aaa
mov
nop
shr
mov
addr16
sbb
adc
out
jo
scas
inc
neg
lds
int3
push
cmps
sub
fild
or
cmp
pushf
mov
push
pop
in
xchg
dec
and
jge
pop
nop
jns
adc
mov
lods
pop
add
rcr
or
jl
scas
or
or
daa
cmps
leave
inc
push
jmp
mov
inc
push
es
adc
adc
mov
fistp
ins
loopne
mov
xor
sub
sub
in
jae
stc
out
mov
cmc
arpl
in
(bad)
test
or
js
scas
pop
push
and
pop
sub
adc
xchg
push
dec
sub
add
ds
xor
in
cmp
nop
cld
int3
sbb
mov
mov
stos
inc
es
mov
ja
repz
ins
out
out
inc
push
jmp
pop
inc
stos
in
in
rol
dec
mov
repnz
(bad)
pusha
and
mov
mov
xchg
push
jp
pop
sub
cmc
xor
sbb
mov
(bad)
loope
fistp
out
xchg
in
imul
xchg
and
int
cld
jecxz
xor
hlt
enter
cdq
addps
xchg
inc
dec
fdivr
push
mov
mov
xchg
int
mov
pop
mov
jmp
adc
sbb
stos
call
push
gs
aad
iret
retf
xor
lock
xchg
pop
retf
xor
into
mov
push
or
gs
arpl
icebp
cmc
aad
or
add
call
sbb
loopne
int
cwde
sbb
or
pop
xchg
sub
ror
pop
shr
dec
fidiv
ds
loop
mov
sbb
mov
aaa
or
nop
xchg
dec
mov
movs
enter
leave
jnp
pop
mov
fmul
popa
jbe
cmps
pop
ja
ins
(bad)
(bad)
mov
sbb
jo
inc
pop
(bad)
(bad)
add
dec
push
xchg
stos
ds
cmovb
ret
repnz
les
pop
repz
cmp
arpl
lahf
mov
inc
xchg
xchg
cmp
mov
stos
dec
add
arpl
mov
or
je
pop
dec
retf
sbb
ja
push
rcl
lea
lods
mov
inc
outs
shl
arpl
dec
(bad)
shr
or
cmp
aas
sub
pusha
pop
push
sub
dec
call
rcr
mov
add
sbb
test
fisttp
iret
mov
movs
inc
outs
dec
fisttp
or
aaa
addr16
jge
rcr
loopne
cmp
or
addr16
xchg
pusha
sub
loopne
out
aad
mov
movs
loopne
mov
popa
shl
xchg
(bad)
test
rcl
push
mov
fistp
retf
(bad)
inc
or
inc
int3
mov
rcr
mov
sbb
or
mov
dec
rcl
cmp
or
mov
fsub
xchg
push
loop
push
mov
in
rol
sbb
pop
aaa
or
lods
cwde
add
mov
sbb
fisttp
pop
add
lds
lea
xchg
ret
rol
jl
movs
out
xchg
cwde
pop
jle
mov
jl
cli
fs
je
mov
or
into
cmc
sub
add
mov
rol
jle
gs
pop
cli
out
sahf
xor
inc
cs
push
push
inc
xchg
test
test
push
rep
xchg
sub
cmps
dec
jmp
test
stc
mov
fwait
mov
in
xchg
and
cdq
add
stc
int3
shl
add
test
(bad)
jle
outs
xor
ror
pop
(bad)
push
push
mov
or
cmp
aad
aam
pop
mov
adc
add
dec
cmp
mov
push
or
ja
cmp
adc
sub
icebp
mov
jge
and
in
adc
arpl
js
fwait
dec
xor
(bad)
imul
mov
dec
add
fcmovu
out
mov
and
mov
sub
or
adc
lds
xchg
in
(bad)
cmp
xor
dec
mov
xchg
inc
and
fadd
inc
jb
outs
add
test
ret
mov
sbb
jecxz
lock
pop
or
(bad)
jnp
call
jge
mov
mov
fmul
(bad)
cmps
cmp
jns
xlat
cmp
pop
push
mov
std
pop
cmp
lods
call
retf
stos
mov
jnp
leave
daa
in
push
stc
out
xchg
ficomp
(bad)
push
popf
aas
aad
int3
out
sbb
sub
xlat
test
lock
cmp
add
aas
jne
sbb
jbe
sub
pop
ficom
and
daa
mov
call
ffree
scas
mov
fcmovbe
test
aam
cdq
rcr
xchg
fcomip
ds
xor
cmps
cld
sbb
(bad)
jle
imul
shl
dec
sbb
fwait
test
inc
pushf
push
rol
mov
sbb
mul
dec
mov
or
ret
push
jo
(bad)
cmps
add
jae
push
icebp
xchg
mov
xor
inc
adc
es
and
mov
push
jns
xchg
loop
inc
pop
retf
sbb
inc
pushf
mov
les
cmp
fcomp
out
cmp
out
in
fdivr
lock
jmp
xchg
jmp
pop
sub
adc
mov
call
xchg
cwde
pop
dec
stc
adc
bound
adc
xchg
clc
xor
leave
cmps
and
jle
ja
mov
sub
cli
add
(bad)
mov
stc
js
add
xor
(bad)
add
sahf
sub
sub
shl
loop
bound
cwde
je
jg
xchg
ds
mov
inc
mov
xchg
cdq
shl
nop
stos
jl
adc
clc
fs
ja
add
add
dec
sbb
cmp
aam
lods
dec
push
icebp
repnz
pop
and
aam
jno
fistp
ja
xchg
lock
cwde
push
fld
nop
xchg
inc
push
imul
int
and
sbb
sti
mov
pop
or
jae
mov
test
pushf
jnp
adc
(bad)
in
loop
les
or
jecxz
mov
fwait
push
dec
out
imul
pop
push
xor
pop
mov
movs
push
or
fwait
cmp
aad
mov
push
or
ins
icebp
ror
mov
loop
pop
mov
loopne
js
jg
in
fnstenv
and
out
adc
(bad)
not
cmp
or
addr16
jmp
imul
test
iret
shr
jp
cmp
aad
arpl
mov
leave
fisub
dec
out
xor
inc
fild
addr16
inc
mov
scas
add
fcom
imul
fistp
pushf
loopne
pop
cmps
icebp
fbld
sbb
mov
fadd
or
ins
cmp
pop
arpl
std
(bad)
push
xor
loop
pop
icebp
(bad)
arpl
or
or
pop
xor
loop
lods
into
repz
jl
push
shr
in
call
cmc
ja
stos
daa
std
dec
lock
pop
loop
rol
call
jmp
das
sti
or
fsubr
xlat
and
cli
aad
(bad)
call
std
pop
mov
fwait
pop
adc
das
push
and
add
sbb
imul
cmp
div
push
(bad)
stos
lahf
stos
js
(bad)
daa
test
in
xchg
ret
or
pop
clc
outs
cmp
pop
mov
adc
shr
dec
sub
aam
dec
jo
inc
mov
dec
cmp
fisttp
(bad)
xchg
push
mov
xor
mov
lds
cwde
movs
sbb
mov
add
dec
cmps
adc
adc
mov
mov
lea
cs
imul
xchg
rcr
and
inc
jbe
movs
jb
sti
cs
pop
jo
cwde
push
rol
adc
xchg
popf
xor
and
outs
nop
pop
mov
ds
movs
add
dec
xchg
sub
test
push
mov
xor
loopne
int
xchg
sbb
push
lds
add
loopne
cmp
lea
push
ins
mov
sbb
in
jbe
cmp
fcomp
mov
pushf
imul
xor
cmc
retf
xor
out
mov
adc
xor
sbb
enter
sub
xor
sub
xchg
int
push
cmp
pop
imul
adc
mov
jae
push
pop
ret
sub
sar
jns
fsubr
pop
adc
jnp
sbb
push
add
dec
std
(bad)
loop
imul
xor
jp
adc
mov
pop
fild
scas
and
test
jle
fsubr
xchg
fwait
in
xchg
dec
pop
xor
xchg
cmp
sub
dec
test
push
dec
push
pop
fadd
pop
jp
dec
mov
mov
adc
xchg
stc
cs
push
fild
lods
in
dec
repz
and
mov
inc
shl
int
sbb
jae
popf
sbb
cmp
jmp
out
pop
xor
addr16
cmp
dec
pop
pop
ins
sbb
adc
call
pop
popa
pop
sti
stos
dec
ins
jns
mov
ins
ins
aam
imul
sti
test
dec
jnp
cld
push
popf
fimul
sbb
or
jbe
mov
sub
or
jle
pop
xchg
(bad)
retf
ins
rol
jb
add
(bad)
lock
pop
cmp
push
mov
mov
jmp
fild
(bad)
xlat
stos
dec
scas
adc
out
imul
mov
add
pop
sub
lahf
ins
push
js
(bad)
pop
mov
mov
mov
lods
sbb
adc
pop
repz
sub
ins
cli
aad
cmp
and
jmp
js
daa
sub
mov
cmp
or
xchg
arpl
mov
fs
sbb
sbb
stos
loopne
ja
add
(bad)
mov
mov
fiadd
rcr
aad
mov
xchg
jbe
dec
adc
dec
test
fwait
imul
test
addr16
dec
cmc
cmps
cmp
hlt
push
jmp
lock
out
push
fistp
xchg
lahf
nop
mov
mov
mov
sbb
sub
(bad)
jns
sbb
popa
call
add
inc
dec
xor
add
sbb
shl
clc
icebp
push
jmp
xchg
and
sbb
jge
jo
clc
xlat
std
into
pop
lods
cmp
nop
inc
out
push
jmp
loop
fs
not
and
les
xor
sti
fdiv
jae
cmp
and
pop
jmp
pop
ret
into
jae
lock
push
sub
xchg
(bad)
sbb
mov
imul
das
imul
pushf
push
shr
jbe
pop
dec
and
out
push
cs
loop
add
sti
popa
cmp
icebp
mov
xor
outs
lock
jbe
repnz
fs
je
adc
(bad)
aad
pop
xchg
jp
jmp
add
cmp
stos
jmp
push
adc
out
test
mov
and
add
pop
jge
leave
cmp
call
je
fwait
mov
jo
scas
pushf
mov
loopne
loope
aam
push
jns
iret
lock
fsub
into
jae
mov
inc
sub
test
xor
inc
clc
pop
mov
dec
mul
call
aas
das
pop
pusha
cs
push
fisub
add
xor
out
stos
xor
ret
jo
sub
call
add
add
jo
pusha
jne
add
sbb
aad
sub
jmp
jnp
fidivr
retf
sub
jecxz
movs
dec
or
xchg
in
ins
mov
mov
ins
(bad)
sbb
div
jge
cwde
call
inc
jp
fiadd
jmp
pushf
(bad)
cdq
lods
add
push
mov
pop
pop
mov
or
ins
sti
and
(bad)
test
popf
pop
sub
aad
lock
test
push
xor
pop
cmp
push
outs
fnstcw
dec
rcr
sbb
inc
jg
dec
xchg
aam
jb
fdiv
push
out
fadd
je
or
dec
mov
hlt
ret
xor
jmp
ss
outs
and
and
sub
sub
test
cdq
mov
mov
loop
cmc
aam
xchg
pop
loop
lods
shr
sbb
stos
dec
adc
outs
mov
cwde
cmp
lahf
cli
sbb
mov
sbb
push
(bad)
fadd
dec
pop
sub
push
(bad)
sbb
ins
adc
pop
mov
sbb
leave
test
lock
dec
(bad)
call
ret
scas
fwait
mov
push
(bad)
sbb
out
xchg
aas
pop
mov
pop
mov
mov
xchg
or
(bad)
sbb
inc
div
or
mov
push
jbe
sbb
push
aad
shl
dec
or
int3
mov
clc
mov
js
and
rcl
push
inc
sbb
pop
sti
pushf
sub
pop
inc
rcl
pop
pop
xchg
adc
sbb
loope
xchg
jnp
and
push
push
stc
push
dec
rcl
das
test
inc
movs
pusha
aad
mov
push
cmps
pop
pop
leave
sbb
into
xlat
les
jno
not
cwde
aam
sbb
jge
outs
jo
fwait
repz
xchg
and
mov
ins
xchg
add
xchg
out
mov
ja
lock
lods
sub
sbb
call
mov
not
lods
aas
xchg
mov
sbb
clc
(bad)
out
and
movs
push
mov
xchg
add
inc
imul
add
or
cmp
cmps
cmps
test
pushf
enter
stc
std
ficomp
xor
or
dec
or
pop
push
pop
inc
shr
push
or
test
pop
and
and
xchg
mov
cwde
mov
or
push
fcmovbe
cmps
xor
out
inc
sar
cwde
test
(bad)
xchg
add
xor
cmps
fistp
inc
loop
leave
fisttp
cld
bound
sbb
jg
and
sub
(bad)
pop
arpl
mov
enter
rcl
imul
push
std
fild
ins
mov
xchg
mov
pop
inc
ret
mov
aad
push
mov
sbb
jb
aad
cmp
std
add
xchg
popa
lds
enter
mov
retf
aam
dec
jecxz
ret
mov
fist
cmp
pop
rol
fwait
mov
add
pushf
sbb
movs
call
out
das
jnp
or
repnz
xlat
add
sbb
sub
jp
pop
(bad)
sbb
add
jo
dec
in
pop
inc
adc
pop
mov
test
inc
daa
mov
lods
fmul
push
lods
mov
js
push
sbb
xchg
test
call
shl
xlat
xor
and
gs
dec
ret
test
scas
mov
push
imul
add
and
test
retf
mov
sub
adc
push
gs
fnstsw
ja
(bad)
dec
inc
jg
add
in
jno
and
jnp
add
jmp
ror
xor
xchg
addr16
and
add
les
shr
(bad)
xchg
and
jne
sub
push
inc
dec
aaa
iret
cmp
nop
in
shl
test
fistp
in
cmp
imul
(bad)
int
sbb
sar
jmp
scas
and
jle
pusha
pop
scas
push
dec
jnp
enter
dec
xchg
scas
ret
pop
pop
iret
ss
mov
jnp
popa
pop
sti
aaa
add
push
mov
fdiv
lods
pop
out
in
pop
ds
pusha
leave
xor
mov
sub
jo
pushf
push
cmp
mov
pop
outs
aaa
hlt
loope
rcr
inc
addr16
and
dec
enter
call
mov
ins
loop
aaa
loopne
popf
inc
mov
pop
bound
std
xor
xchg
inc
xor
imul
push
sti
jmp
mov
loope
jl
hlt
sbb
loopne
in
cmps
out
jbe
xor
loop
inc
mov
xchg
xchg
outs
lock
cmps
cmc
loop
mov
adc
mov
call
sar
arpl
cmp
sbb
mov
push
cmps
mov
inc
int3
dec
iret
inc
cdq
and
cmps
test
cmp
popf
(bad)
dec
inc
pop
fist
sub
mov
fsubr
adc
jnp
push
sub
inc
pop
pushw
ins
leave
out
xchg
jae
outs
mov
cmps
sub
sub
push
sbb
or
ret
sbb
scas
inc
jmp
cmp
fild
mov
dec
push
sub
inc
mov
inc
lods
(bad)
xchg
lods
pop
mov
inc
enter
sbb
xor
or
adc
shl
(bad)
test
jg
xchg
fisubr
nop
pop
not
xor
repnz
shld
and
cmp
fwait
or
and
jg
mov
mov
sub
push
ja
cli
or
mov
sbb
sbb
cmps
push
mov
and
and
jecxz
es
pop
lods
sub
inc
retf
adc
dec
sub
inc
mov
in
pusha
sub
lock
dec
fucomi
fidiv
xchg
push
push
cmp
(bad)
jp
shl
gs
addr16
test
xor
loope
sbb
jnp
pop
adc
fild
mov
nop
sbb
inc
fidiv
fldcw
xchg
(bad)
pop
mov
arpl
mov
or
push
fcom
xor
inc
pushf
pop
pop
(bad)
or
inc
push
add
dec
jno
fmul
shr
js
test
xor
in
inc
sub
ja
jmp
adc
adc
dec
xor
and
or
lahf
sub
push
adc
movs
add
push
(bad)
pop
arpl
pop
cmp
push
and
(bad)
(bad)
dec
jmp
shr
mov
push
les
inc
nop
dec
mov
adc
int
pop
ds
and
or
and
fwait
mov
pop
adc
mov
cld
mov
pop
mov
in
stc
xchg
fstp
test
inc
enter
or
push
or
cmp
xlat
push
fsubp
mov
add
adc
pop
mov
and
les
ins
rcl
sub
xchg
fidiv
inc
jnp
xchg
cli
fld
std
mov
scas
mov
dec
mov
stos
add
lods
inc
jne
push
push
dec
and
mov
dec
and
ficomp
nop
pop
in
mov
faddp
out
cs
shl
aam
in
jae
pop
call
stos
mov
jnp
lock
mov
push
scas
sbb
scas
xor
xchg
enter
imul
mov
imul
jo
fs
retf
jae
mov
and
ss
jbe
add
stos
pop
ins
je
push
inc
mov
pop
retf
icebp
out
xor
cmp
add
push
add
pusha
pushf
pop
imul
jmp
inc
pop
add
inc
(bad)
leave
sbb
dec
xlat
popf
dec
add
into
pop
mov
loop
cmc
pusha
pop
cwde
inc
push
and
(bad)
push
clc
cmp
movs
ds
bound
mov
test
mov
retf
sub
(bad)
sbb
int3
jmp
push
mov
cmp
rol
and
jno
test
ins
out
add
mov
pop
int
fld
xor
mov
int3
inc
ror
ror
mov
sbb
popf
dec
inc
call
cmp
or
and
mov
or
xchg
int3
cmp
mov
test
push
push
jno
sbb
(bad)
push
js
gs
sub
retf
(bad)
sti
stc
lock
mov
pop
popf
pop
push
pop
daa
mov
mov
(bad)
mov
xchg
xor
pop
test
cld
pop
test
sar
mov
out
cmc
outs
mov
inc
mov
(bad)
or
jge
sahf
daa
adc
pushf
sub
sbb
or
jmp
sub
push
rcl
clc
xchg
call
pop
cmp
inc
bswap
(bad)
sbb
pop
sar
ret
clc
cmp
jae
or
and
push
addr16
scas
arpl
call
imul
add
lods
jge
jmp
stc
xlat
cmps
scas
pop
fs
ds
das
ret
pop
sbb
nop
inc
pop
xlat
inc
or
xlat
nop
cmc
adc
sub
mov
into
int
sub
sub
jbe
imul
pusha
and
mov
in
jo
sub
pop
adc
(bad)
fcmovbe
push
out
movs
in
xor
push
adc
xchg
mov
mul
mov
pushf
mov
sbb
stos
pop
mov
popa
rcl
sar
cmp
iret
inc
xchg
xchg
pop
bound
out
retf
out
push
test
test
call
push
into
jmp
xchg
mov
sub
cmp
mov
pop
lock
or
dec
mov
pop
sbb
loopne
(bad)
fldenv
dec
sbb
inc
jmp
push
sub
cmp
ss
jbe
sar
push
dec
or
sub
sbb
arpl
or
xchg
xor
push
sbb
xchg
mov
sub
push
jmp
push
arpl
scas
ret
pop
pop
test
aam
arpl
xor
(bad)
push
jmp
add
pushf
(bad)
(bad)
jo
cwde
dec
jnp
xor
push
push
cdq
aam
sahf
aam
(bad)
sahf
aad
inc
out
jnp
fcomp
add
ins
push
push
mov
mov
cmp
in
das
inc
dec
xchg
retf
sbb
adc
aad
mov
test
mov
imul
mov
in
data16
add
mov
pop
push
add
adc
and
test
push
xor
push
inc
lahf
(bad)
stos
push
sub
cs
mov
aam
add
jp
cmps
in
dec
out
mov
inc
pop
and
(bad)
inc
inc
push
inc
mov
aam
adc
inc
adc
mov
cmp
sahf
fbstp
jmp
repz
inc
pop
imul
pop
int3
pop
lds
sub
mov
jae
push
cmps
fs
in
add
mov
adc
std
shl
pop
mov
in
mov
pushf
out
lds
js
shl
and
(bad)
push
mov
stos
jp
xchg
sub
popf
xchg
sub
(bad)
hlt
aaa
inc
retf
jb
and
les
push
mov
icebp
inc
dec
cmp
rcl
inc
or
fcmovnbe
cmc
xchg
lods
iret
std
inc
into
push
mov
out
test
cld
xchg
int3
mov
and
mov
adc
adc
sub
lods
and
shr
sbb
add
fs
xchg
shr
sub
outs
push
add
dec
or
in
inc
push
xchg
cmc
mov
dec
push
sbb
dec
mov
fcomp
pop
xor
cmps
test
xchg
out
push
cmp
icebp
fadd
pop
movs
popf
(bad)
inc
sbb
fptan
push
aaa
pop
xchg
mov
inc
pop
push
dec
push
leave
xor
rcr
jge
add
fmul
dec
inc
clc
adc
fs
loope
rcl
mov
jl
mov
push
outs
sub
bound
in
pop
imul
js
push
pop
cmp
adc
sub
sbb
test
loopne
(bad)
cmp
sbb
dec
jge
and
mov
mov
mov
pop
xor
and
imul
les
xchg
fst
in
inc
push
mov
pushf
sbb
cwde
test
in
or
or
lds
cwde
mov
pop
dec
les
icebp
enter
and
ins
push
mov
pop
pop
push
jnp
daa
pop
jnp
or
sbb
scas
les
dec
aam
add
push
repnz
test
dec
lods
std
jl
shl
cmp
mov
jp
fnsave
fcomp
pop
test
repnz
mov
adc
and
mov
and
sbb
rcr
xor
mov
jmp
stos
add
xchg
sbb
stos
xor
jmp
retf
stos
adc
clc
popa
aam
push
xor
call
mov
xor
stc
pop
dec
or
call
push
ror
je
cmp
cmp
sti
push
cmp
mov
(bad)
shl
sub
call
aam
push
push
ror
sub
aad
daa
add
cwde
and
(bad)
cmp
ja
loop
mov
sbb
fldenv
aaa
pushf
int
xor
ror
push
sub
(bad)
fucomi
arpl
nop
mov
sub
mov
push
cwde
aam
pop
les
mov
pop
fidivr
fistp
or
push
xor
add
pop
mov
inc
inc
leave
sub
inc
jmp
dec
xchg
jp
int
cmp
rcr
mov
push
scas
lock
movs
sti
pushf
aad
dec
xchg
mov
mov
int3
(bad)
pop
jae
iret
rcl
dec
pop
(bad)
pop
mov
push
mov
dec
sub
fild
inc
imul
mov
pop
cmp
push
in
xor
lods
lods
bound
push
xor
mov
lock
mov
idiv
test
mov
call
mov
pop
lock
inc
mov
xchg
and
repz
push
push
mov
fwait
add
(bad)
icebp
loope
cmp
mov
in
es
pop
xchg
mov
loope
mov
cmp
js
imul
adc
je
mov
shl
push
or
aaa
sub
xchg
add
in
popf
jo
and
fisttp
lods
pop
sub
les
fiadd
sbb
xor
vmovdqu
inc
sbb
in
cmp
add
clc
jecxz
add
ficomp
inc
jg
std
dec
xchg
xor
ins
and
cs
sbb
push
xor
jmp
pusha
std
mov
out
cmp
xchg
mov
pushf
push
cmp
ficomp
(bad)
arpl
push
pop
adc
xor
pop
lea
out
rcr
sbb
add
das
mov
in
mov
xchg
sbb
xlat
test
cmc
loope
jp
mov
fiadd
stc
or
retf
push
popa
mov
inc
bound
sbb
jecxz
(bad)
jae
dec
lahf
je
pop
ja
jno
xlat
push
jnp
(bad)
fbstp
push
rcr
and
jge
push
push
pop
adc
pop
cwde
pop
cmp
add
ret
sbb
movs
sub
adc
and
bound
and
dec
sub
jle
(bad)
jle
or
int3
retf
and
jns
fisubr
lds
fsubr
shr
mov
sub
and
(bad)
sbb
xor
cmc
aad
loop
(bad)
out
mov
adc
or
(bad)
ds
xchg
aas
dec
js
in
cld
clc
mov
and
adc
movs
pop
cld
mov
mov
test
popa
sbb
or
loop
dec
fimul
inc
push
les
fbstp
mov
mov
push
and
mov
pop
dec
cmp
push
adc
les
jae
icebp
add
xchg
dec
out
sahf
sbb
ret
xchg
push
inc
movs
stc
addr16
mov
leave
push
psllw
sub
dec
jmp
xchg
jp
std
nop
add
pop
xchg
mov
mov
mov
mov
mov
ror
sbb
or
(bad)
fnstenv
hlt
mov
fsubr
cmp
mov
jnp
test
les
aad
push
pop
push
jmp
iret
jae
ds
rol
stos
jnp
das
cs
test
inc
push
stos
out
pop
daa
(bad)
fst
loopne
push
push
pusha
add
out
push
sbb
sub
dec
retf
xchg
push
add
adc
std
dec
xchg
push
test
pop
jmp
push
stc
mov
dec
and
jle
sbb
sub
dec
(bad)
sbb
fld
push
mov
pop
push
jo
cwde
mov
mov
jne
ret
push
bnd
ja
xor
leave
inc
add
add
movs
dec
cmp
xchg
sbb
daa
leave
push
fimul
shr
push
fimul
inc
js
pushf
jno
xor
mov
jge
repz
mov
call
ja
xor
pop
jp
lods
adc
adc
nop
adc
retf
sbb
jb
loopne
out
not
cld
or
stc
in
test
xchg
es
sti
adc
push
test
mov
aaa
(bad)
push
dec
mov
cdq
sub
cs
and
mov
imul
ins
jbe
call
pop
cld
mov
cmp
mov
test
dec
pop
outs
mov
mov
sub
jl
les
xor
cmp
push
movs
mov
outs
sub
pop
mov
stos
(bad)
(bad)
fnstenv
xlat
dec
xor
sbb
pop
cmp
pop
push
dec
cmp
rol
and
inc
inc
outs
sar
xchg
pop
repz
mov
fstp
outs
push
icebp
fcmovbe
pop
cld
stc
fistp
mov
out
pop
in
sub
or
mov
adc
adc
xchg
jl
mov
out
pop
xchg
inc
pop
push
rol
adc
mov
add
push
add
adc
arpl
push
inc
mov
pushf
inc
lahf
add
mov
cmp
mov
out
test
es
jmp
fiadd
retf
or
cmp
sub
xchg
in
fwait
(bad)
stos
sbb
icebp
jl
jmp
or
inc
push
add
data16
shl
adc
lock
lods
add
clc
div
push
inc
(bad)
pusha
test
xor
les
add
xchg
les
jb
ss
pop
(bad)
cwde
test
mov
fldenv
clc
test
pusha
push
cmp
arpl
loope
popa
lds
mov
mov
outs
std
hlt
add
sub
(bad)
aad
sbb
push
sar
fist
adc
xlat
jmp
js
dec
shr
cmp
and
in
sbb
sub
and
dec
xchg
movs
in
mov
ins
ficom
test
ds
cmovs
jg
mov
cld
xor
or
sbb
inc
(bad)
sbb
jmp
test
das
pop
mov
push
or
fimul
scas
aas
sub
push
push
dec
cmp
adc
xchg
leave
pop
adc
push
addr16
add
sbb
imul
mov
(bad)
adc
(bad)
fcmovbe
push
jno
inc
pushf
loopne
dec
adc
daa
ins
sbb
xchg
movs
xchg
push
and
mov
lock
inc
mov
xor
mov
imul
mov
jno
dec
xchg
pop
or
xor
pop
xchg
icebp
pusha
jl
push
dec
sub
lock
stc
xor
mov
mov
push
sub
sahf
dec
lea
pop
mov
sbb
in
icebp
scas
pop
in
mov
imul
mov
shl
sub
mov
call
push
dec
(bad)
or
sub
sub
add
icebp
mov
adc
jge
stos
or
mov
pop
repnz
pop
ret
pop
mov
int3
and
xor
pop
icebp
scas
int3
add
add
aaa
mov
sub
stc
push
(bad)
push
imul
inc
test
pop
test
sub
mov
loope
push
cld
jmp
xchg
sar
test
xlat
js
and
pop
shr
dec
cmp
jmp
cmp
xchg
jno
aam
scas
and
xor
mov
stos
xor
and
sbb
xor
dec
out
fucom
ins
in
stos
call
xchg
xor
pop
pop
shl
cmp
ds
adc
daa
cmps
xor
das
mov
xchg
pop
fimul
ins
shr
not
addr16
test
dec
cld
jb
pop
leave
call
push
dec
aam
adc
or
pop
sahf
gs
cmp
add
popf
sbb
call
jecxz
jno
adc
push
sub
pop
fidiv
jmp
jns
call
adc
in
scas
sbb
pop
js
aam
jno
jnp
int
ja
push
mov
popa
mul
xchg
inc
int
inc
ror
dec
jge
leave
inc
pop
daa
cmp
or
mov
jbe
jb
aam
mov
and
add
lock
pop
test
push
test
std
loopne
cmp
mov
sbb
mov
pop
das
test
push
aaa
lock
dec
enter
adc
stc
cdq
push
fisttp
rol
pop
jnp
and
(bad)
mov
call
inc
add
mov
jbe
aaa
(bad)
sub
sub
clc
pop
aam
(bad)
fadd
hlt
scas
mov
xchg
not
nop
stos
sbb
ret
cmps
adc
mov
test
dec
fstp
ficom
test
inc
xlat
or
call
jecxz
popa
or
mov
in
cld
inc
fadd
dec
out
iret
inc
daa
imul
icebp
cdq
pop
frstor
mov
enter
arpl
mov
sbb
pop
sub
mov
shr
(bad)
(bad)
cmc
and
push
gs
into
movs
nop
xor
dec
xor
mov
lahf
xor
int
push
inc
adc
mov
imul
icebp
mov
loope
lahf
in
xlat
dec
cmp
sub
repnz
and
fwait
out
mov
out
pushf
int3
pop
push
mov
add
sbb
or
xlat
(bad)
retf
pop
add
dec
data16
(bad)
xchg
push
(bad)
lock
pop
(bad)
pusha
loopne
movs
inc
mov
dec
into
addr16
push
push
cli
push
popa
daa
lods
vpcomd
mov
(bad)
aas
es
cmp
mov
(bad)
dec
cs
test
scas
or
xor
xchg
add
adc
mov
xchg
sub
ss
arpl
int3
fidivr
jmp
jge
mov
dec
gs
mov
xchg
mov
cmp
mov
xchg
test
push
imul
jmp
nop
icebp
pop
call
jle
xchg
jnp
loopne
sahf
and
hlt
loopne
push
leave
(bad)
mov
sbb
cs
enter
fld
adc
sub
sbb
fdiv
xor
icebp
dec
scas
adc
adc
push
mov
outs
inc
js
inc
xchg
mov
mov
test
data16
cwde
out
sahf
into
xchg
cmp
test
sar
in
fild
sub
cmp
adc
dec
jnp
xlat
data16
jno
push
mov
dec
mov
sub
pop
in
sbb
fcmovbe
sar
ret
jbe
mov
or
sub
(bad)
js
sbb
pop
lock
add
rep
mov
adc
fcom
iret
stc
mov
mov
and
add
in
mov
ja
mov
dec
jnp
int
cs
enter
imul
inc
hlt
and
xchg
xchg
aam
push
cmp
loop
jnp
mov
les
pop
or
add
push
movs
test
in
push
mov
fcomi
inc
cmp
retf
call
(bad)
ficomp
outs
mov
je
cmp
cmp
mov
out
mov
aaa
push
cwde
aam
pop
shr
jmp
xchg
out
scas
pop
add
fwait
(bad)
sub
pushf
mov
mov
adc
adc
ret
inc
sub
shr
push
xchg
(bad)
pmaddwd
sbb
sti
push
mov
push
jp
movs
mov
lock
jecxz
in
fadd
into
mov
pop
or
mov
in
mov
rcl
ret
call
addr16
xor
mov
push
add
xchg
push
shr
add
pop
push
jmp
mov
or
push
xchg
add
mov
sub
je
mov
inc
mov
idiv
push
outs
shr
shl
fstp
popa
(bad)
pop
data16
mov
and
xchg
xchg
cmp
mov
push
mov
mov
call
sbb
mov
cdq
or
xor
dec
retf
jmp
(bad)
jl
or
aad
or
pop
(bad)
xor
mov
jnp
xchg
jge
jmp
push
hlt
add
or
mov
mov
jg
push
push
pop
sahf
cmp
mov
xchg
outs
push
fcmovnbe
adc
loop
ret
adc
cdq
mov
shr
and
ja
xchg
xchg
aaa
lock
daa
mov
jns
xor
jb
dec
test
pop
movs
call
pop
in
inc
aad
xchg
xchg
and
sahf
inc
movs
cmp
popf
lds
xor
rcr
les
push
rol
fwait
push
out
lock
add
aaa
dec
mov
icebp
shl
fstp
xchg
std
outs
cmp
stos
fwait
sub
fistp
cmp
imul
jge
mov
mov
pop
dec
loopne
jl
aas
pop
mov
nop
and
scas
adc
fwait
hlt
sar
ficom
fsub
sub
xor
push
push
pop
out
lods
in
add
int
pop
add
es
pop
pop
xchg
inc
mov
cdq
xchg
inc
data16
cmp
push
xchg
dec
sub
pop
dec
cmp
jnp
fild
retf
dec
ins
adc
push
(bad)
mov
cdq
mov
inc
jge
das
mov
mov
cmps
adc
stos
sbb
dec
cmp
sub
push
xor
and
not
cwde
xchg
mov
dec
ret
dec
mov
fs
cmps
gs
int3
pop
add
arpl
mov
cdq
inc
adc
or
sbb
push
cmps
(bad)
js
sub
mov
add
ins
ss
inc
jnp
inc
jge
inc
test
mov
jecxz
sahf
jne
sbb
jae
and
mov
lea
jmp
jle
jl
inc
pop
jle
push
pop
push
mov
fdiv
or
or
cld
dec
out
stos
dec
(bad)
fisttp
xor
lahf
jecxz
mov
cmp
loopne
popf
mov
dec
jnp
mov
or
stos
popa
inc
cwde
cmps
fisub
xchg
shl
xchg
mov
pop
bound
aaa
mov
dec
fidivr
xchg
and
pushf
adc
jbe
fsubr
neg
xor
mov
pop
add
jns
sub
mov
mov
aam
stos
or
push
cmps
imul
xchg
dec
add
les
inc
sbb
repz
jnp
sub
pop
emms
ror
push
aaa
ror
or
and
add
jno
dec
push
push
sub
sub
cmp
mov
push
jp
add
loop
outs
push
or
dec
push
xchg
inc
jmp
adc
xchg
movups
ss
or
jo
pushf
int3
mov
push
fldenv
neg
jno
out
outs
and
setb
frndint
(bad)
cmc
cmp
aaa
push
std
arpl
mov
add
mov
xchg
jmp
nop
and
xchg
daa
add
out
dec
(bad)
inc
pop
xor
aam
add
sub
inc
xchg
sbb
sub
leave
lock
scas
adc
add
call
ja
mov
pusha
cmp
(bad)
mov
push
loop
push
(bad)
int3
mov
ins
stc
add
cld
stos
sar
xor
push
sti
sbb
pop
and
mov
sti
(bad)
movs
xor
sub
sar
jge
push
adc
mov
or
ret
pop
or
aaa
cmc
push
add
sub
mov
jg
retf
(bad)
pushf
add
ret
xchg
dec
push
xor
mov
mov
cli
adc
xlat
(bad)
jb
pusha
clc
enter
xor
push
push
pop
iret
enter
cmps
cmps
sub
test
adc
lods
sbb
pop
test
sti
cmps
out
in
adc
nop
sub
jne
out
int3
push
add
cmp
xor
test
fcmovnb
xlat
cmp
and
or
xor
ret
lods
int3
scas
mov
cmp
pop
inc
loop
pop
adc
cmps
inc
pop
and
adc
les
addr16
sbb
call
pop
loop
xchg
cs
sbb
js
mov
pop
jl
mov
cs
jbe
jmp
idiv
stos
ja
std
dec
es
fimul
int3
xlat
cmp
iret
jmp
aam
jns
push
mov
or
pushf
sub
jl
loope
lock
and
lods
out
adc
test
push
push
mov
cmp
add
and
scas
cdq
jnp
(bad)
int3
shl
adc
mov
(bad)
mov
push
sbb
lock
test
pop
push
and
add
out
dec
test
push
sub
inc
stc
push
imul
dec
jmp
stc
cmp
adc
lea
iret
dec
fbstp
stos
push
test
push
aaa
in
jge
je
pop
dec
in
jl
shr
daa
and
(bad)
pop
push
sub
nop
jae
mov
daa
stc
cs
push
xchg
dec
leave
fnstenv
xchg
push
pop
imul
outs
sbb
rcr
std
mov
loopne
popf
leave
dec
mov
sti
hlt
adc
loopne
adc
push
push
ins
test
addr16
cld
dec
cmp
outs
push
int
sbb
(bad)
mov
push
push
ja
push
xlat
lea
xchg
pop
xchg
mov
pop
repz
in
sbb
sub
in
in
call
push
int
xor
add
rol
sbb
icebp
sar
enter
int3
cdq
push
mov
push
lahf
daa
dec
jmp
adc
stos
cdq
cmps
inc
movs
dec
mov
aad
or
(bad)
jmp
jg
dec
in
(bad)
jg
enter
enter
xchg
out
shr
or
test
push
dec
data16
shl
xchg
cmp
jbe
fs
retf
hlt
cmp
sahf
mov
inc
or
in
pushf
cmp
aaa
xor
test
mov
sub
inc
fst
cmps
in
cmp
add
sbb
ins
sbb
(bad)
xchg
dec
ds
aad
xchg
xchg
dec
out
mov
inc
push
shl
inc
mov
lock
jge
xor
xchg
je
mov
xor
movs
push
push
out
xchg
mov
jae
xchg
xor
(bad)
mov
addr16
mov
xchg
sbb
shr
aaa
pop
cdq
adc
sbb
sub
fs
out
inc
pop
test
mov
lea
and
mov
mov
sub
inc
pop
dec
aas
(bad)
loop
cmp
jbe
ds
(bad)
jl
inc
fdivp
icebp
cwde
fdiv
push
jno
cmp
int3
mov
mov
(bad)
shr
sub
gs
dec
dec
push
loopne
leave
div
nop
push
mov
popf
test
pop
or
or
fmul
and
fcmovbe
les
xor
loop
test
inc
mov
les
pop
jmp
lods
mov
fistp
out
rcl
mov
leave
stos
pop
cmp
popf
xchg
test
rcl
mov
dec
mov
fldcw
ins
dec
mov
xor
xor
add
mov
fnstsw
sub
shr
dec
mov
dec
lea
push
mov
mov
(bad)
jmp
sub
inc
or
mov
push
mov
jne
fmul
xchg
icebp
daa
pop
dec
neg
mov
xchg
mov
sub
or
test
lock
pop
mov
aad
mov
int
ins
in
inc
clc
xor
mov
lea
ja
fisttp
and
inc
adc
push
icebp
xchg
fscale
cwde
in
or
push
ret
adc
or
pushf
clc
push
xchg
pop
jmp
sbb
in
jbe
inc
push
je
stos
sar
dec
cs
lds
xor
or
jg
mov
popa
pop
inc
pop
div
jmp
or
xchg
shl
mov
pop
sub
push
dec
pop
mov
push
rol
arpl
push
or
jno
popf
mov
pop
dec
mov
inc
repnz
or
pop
xor
movs
mov
mov
pop
and
leave
int3
mov
jb
jge
jl
cmc
popa
sbb
add
popa
fisttp
fnsave
jmp
dec
arpl
cmp
fdivr
jno
hlt
retf
and
cli
mov
mov
inc
pop
mov
lock
nop
mov
div
mov
pop
mov
mov
xor
dec
ins
pop
loope
jae
inc
xchg
mov
xor
pop
push
jge
push
popf
retf
pop
cld
(bad)
sti
and
sti
popf
jne
mov
leave
mov
inc
lds
mov
fild
sub
push
ins
js
sbb
ja
mov
jmp
clc
mov
fsub
rcr
dec
pop
sbb
jnp
jge
stc
and
push
test
mov
push
adc
jb
lock
mov
xor
mov
imul
sbb
sbb
inc
cmc
into
push
cmp
or
aaa
clc
idiv
xchg
retf
loopne
push
mov
outs
in
in
(bad)
mov
dec
dec
hlt
fwait
lahf
xchg
lods
lods
push
sahf
les
pop
fucomp
dec
cmp
or
prefetch
fist
mov
loopne
in
fwait
outs
sub
mov
or
int3
fucomp
push
pushf
hlt
jp
sub
jge
shl
ret
xchg
ss
shl
sub
inc
mov
aam
jmp
sar
mov
cs
xchg
cmp
xchg
sbb
in
mov
sahf
jae
cmp
test
mov
leave
inc
pop
sahf
push
cmp
xor
cmp
leave
dec
ja
leave
jle
push
push
cmps
rcl
inc
fs
pop
in
outs
adc
out
fld
pop
jno
dec
test
adc
in
mov
mov
dec
mov
push
mov
mov
pop
rol
rcl
shr
repz
dec
push
inc
in
mov
mov
push
test
fdiv
(bad)
call
pop
(bad)
pop
mov
mov
js
add
jns
mov
pop
jbe
sub
and
fisttp
sbb
pop
xor
loop
pop
push
gs
or
cmp
icebp
or
std
xor
aad
arpl
inc
jg
sahf
(bad)
loopne
cmc
sbb
inc
sub
not
mov
mov
in
popf
pop
mov
mov
mov
mov
ins
cwde
imul
adc
inc
jbe
retf
mov
fsubr
push
in
cs
push
jmp
rcr
xchg
cmp
cwde
mov
dec
or
sbb
addr16
xchg
ds
mov
rol
popa
retf
xchg
addr16
cmp
out
jno
push
dec
stos
and
cmps
xor
mov
sub
lods
call
(bad)
dec
mov
cmc
rol
in
aaa
leave
fmul
daa
ins
movs
scas
mov
addr16
push
mov
pop
sti
ds
sbb
jbe
pop
jg
mov
lahf
dec
mov
je
pusha
out
dec
aad
jns
mov
sbb
mov
add
xchg
jl
jbe
popa
xchg
imul
mov
cmp
nop
xchg
(bad)
popf
je
ror
jmp
pop
jae
mov
jl
push
or
in
jl
xchg
data16
sbb
repnz
fs
mov
das
jmp
xchg
hlt
push
pusha
outs
inc
jnp
outs
or
ins
fist
dec
fisttp
rol
sti
push
in
add
nop
int3
xor
loope
or
or
shl
outs
mov
retf
or
jecxz
add
push
stos
(bad)
adc
ret
inc
and
dec
jge
sbb
and
mov
mov
fsubr
and
mov
not
daa
mov
mov
mov
add
mov
mov
arpl
dec
ja
cwde
pop
lock
(bad)
inc
clc
jge
dec
pop
stos
or
stc
sbb
ja
and
mov
loopne
pusha
scas
pushf
xchg
push
and
mov
ret
pop
cmps
dec
imul
sar
das
jp
pop
or
pop
rcl
fldcw
sar
xchg
xlat
push
sbb
cmps
xlat
lock
not
mov
iret
test
cmp
retf
inc
rcl
jle
inc
mov
cld
or
imul
lds
dec
cmp
push
inc
mov
(bad)
mov
pop
pop
jecxz
das
fstp
mul
pusha
sub
in
and
dec
loop
adc
js
xor
pop
xor
pop
cwde
push
mov
push
scas
xor
push
(bad)
add
inc
jmp
mov
ret
aam
add
(bad)
out
iret
(bad)
(bad)
sub
sar
push
cwde
mov
scas
push
sub
inc
inc
mov
out
ror
mov
clc
jno
cmp
fiadd
and
pop
xchg
jmp
xchg
dec
and
in
mov
and
popa
cmp
rcr
cs
mov
repz
sahf
scas
push
js
stos
mov
push
cdq
and
pushf
mov
and
out
inc
popf
push
(bad)
loopne
mov
je
pop
test
sub
xchg
sub
fisubr
dec
adc
jb
xor
loope
mov
cmp
ins
sbb
mov
dec
cmc
push
xchg
fst
pusha
jp
push
add
push
mov
mov
sbb
dec
cmc
pop
icebp
es
and
pop
xchg
adc
push
psubsb
cmp
ins
push
cs
jl
popf
pop
adc
pop
cmp
ror
fimul
jecxz
loope
mov
arpl
push
sar
push
sbb
add
cmc
cmps
inc
add
xor
fisttp
mov
ret
in
in
adc
mov
xchg
popf
sti
fdiv
xor
ret
nop
mov
xchg
fistp
shl
(bad)
fcmovnbe
xchg
dec
fistp
aaa
sbb
imul
clc
in
adc
dec
push
inc
nop
inc
jecxz
std
frstor
xchg
push
(bad)
and
adc
pop
xchg
pop
fwait
shl
mov
or
adc
xor
xchg
repz
pop
ins
in
jle
xlat
adc
fidivr
iret
into
push
in
jo
dec
(bad)
stc
mov
cmp
xchg
popa
lods
call
lods
into
pop
sbb
dec
push
(bad)
out
mov
xchg
loop
mov
out
loope
ror
xor
fiadd
add
test
daa
xor
stos
xchg
mov
fucomi
mov
dec
sbb
into
and
outs
or
pop
loopne
lods
icebp
add
adc
mov
push
aaa
pop
sbb
pop
and
sub
and
mov
xor
cmp
mov
add
push
sub
shl
jnp
loopne
add
push
mov
cmp
sub
lock
jl
xchg
mov
and
mov
mov
jg
inc
sahf
or
push
cmps
gs
dec
add
xor
pop
out
hlt
scas
and
ror
fcom
mov
mov
sar
aaa
aam
and
arpl
inc
sub
push
icebp
aad
xlat
push
pop
mov
out
fcom
pop
enter
fdiv
fwait
add
movs
pop
dec
cmp
sbb
inc
scas
mov
xlat
xor
inc
fs
cmps
das
aad
aaa
xor
cmps
clc
or
(bad)
out
rcl
and
or
mov
or
add
add
into
hlt
in
stos
int3
cmp
mov
jns
push
aaa
stos
sub
outs
sbb
retf
inc
stc
dec
fidiv
jl
dec
fld
jge
cmp
inc
repnz
pop
xchg
push
sbb
enter
jmp
in
lods
test
lock
in
and
mov
in
jg
and
sub
mov
push
mov
out
call
mov
lods
xor
cs
xchg
ret
cmp
ins
jnp
xor
fcom
shl
mov
add
ror
jmp
ins
jmp
cdq
fist
shr
xchg
push
(bad)
adc
pop
mov
sub
xlat
xlat
fs
jns
sbb
ins
pushf
xor
push
popf
dec
sbb
mov
pushf
or
inc
adc
add
push
cdq
push
daa
out
mov
rcl
mov
and
or
mov
jnp
push
fst
sahf
enter
jns
ins
es
jns
fisttp
popa
mov
fmul
pop
pop
jns
lods
mov
mov
pop
cmc
mov
mov
cmp
jle
mov
add
ds
stos
pop
mov
in
jbe
fwait
popa
xchg
cmp
lea
push
(bad)
loopne
cmp
xchg
ins
ret
hlt
jmp
xchg
adc
and
push
test
adc
xor
sub
rcl
test
mov
jbe
or
lods
out
dec
ret
cwde
sbb
adc
dec
dec
es
shr
jl
and
test
pop
test
scas
ficomp
leave
push
push
cs
mov
jbe
cmp
mov
(bad)
and
in
es
jo
in
int
leave
repz
or
sub
js
add
icebp
mov
push
sar
std
into
sti
fcomi
add
(bad)
pop
js
pop
loopne
sbb
scas
ins
dec
pop
addr16
dec
sbb
rol
loopne
mov
add
arpl
jb
sbb
retf
or
xor
(bad)
leave
ror
rcl
pop
cmp
add
dec
arpl
fistp
sub
push
int3
enter
mov
push
xchg
jo
mov
mov
xor
xchg
mov
lods
push
retf
pop
dec
inc
nop
lods
test
fstp
repz
retf
xchg
jbe
les
push
icebp
mov
push
in
xchg
loope
adc
imul
add
addr16
loope
lock
push
mov
xchg
mov
test
lahf
fmul
int3
mov
mov
mov
xor
ins
or
mov
rcr
mov
mov
pop
fcomp
cmps
xchg
xchg
(bad)
xchg
mov
ins
out
push
daa
ins
inc
push
lods
cmp
arpl
jmp
sbb
xor
adc
dec
es
cld
sbb
jp
mov
(bad)
cmp
cdq
dec
loopne
jecxz
out
sub
ins
add
in
pop
les
sbb
fcmovnu
pop
dec
or
mov
sub
jg
dec
mov
mov
or
mov
outs
fadd
push
mov
push
pop
pop
int
add
pop
arpl
popf
scas
test
xchg
jle
cmp
(bad)
sar
cmp
retf
jo
ja
dec
stos
pop
sbb
sbb
pop
dec
rcr
pop
and
mov
xchg
inc
pop
mov
daa
fstp
sahf
xlat
mov
pushf
cmovp
mov
cmc
(bad)
add
(bad)
fist
xchg
fstp
iret
sbb
fwait
xchg
pop
rol
fnstcw
mov
ror
jb
lock
push
test
out
pop
add
stos
sbb
xor
pop
cmc
mov
pop
xor
push
dec
mov
adc
loopne
sub
xchg
add
idiv
mov
inc
and
cld
jmp
dec
mul
or
mov
inc
inc
ja
test
jl
pop
mov
cmps
dec
sahf
inc
add
outs
into
jmp
mov
cmp
aaa
popf
pushfw
xor
jns
(bad)
jno
popf
adc
je
fwait
popa
les
stc
das
mov
mov
lahf
rcr
shr
pop
pop
(bad)
pushf
sub
arpl
xchg
test
ss
pushf
lds
dec
movups
sbb
repnz
and
loopne
jg
sar
lods
and
push
or
push
pop
sub
xchg
xchg
mov
aam
or
xchg
iret
xchg
sub
or
mov
add
js
mov
pop
adc
rcl
fstp
dec
jnp
pop
pop
sahf
inc
les
push
cmc
shr
sub
mov
cmp
pop
sub
dec
(bad)
js
sub
jmp
and
fldcw
add
dec
pop
jo
iret
bound
or
pop
push
jge
sbb
xchg
test
ja
(bad)
loope
push
ret
cmps
or
(bad)
mov
cmp
add
retf
rcr
xchg
scas
fistp
sub
mov
adc
adc
inc
repnz
adc
aad
enter
jae
int3
dec
cli
cdq
(bad)
gs
push
dec
mov
and
sub
loope
mov
fild
addr16
pop
mov
mov
mov
scas
std
pushf
icebp
inc
int
inc
pop
nop
pushf
call
sbb
lahf
test
lahf
in
ja
push
dec
fwait
xlat
jno
jmp
test
or
dec
outs
das
es
jbe
pop
push
jmp
jnp
in
mov
iret
out
sub
xchg
xchg
nop
fcom
iret
pop
mov
popa
jmp
int
sti
sti
adc
retf
fstp
sbb
test
and
xor
dec
fdiv
and
xor
aad
shl
sbb
dec
sahf
mov
es
rcr
or
ins
adc
mov
(bad)
pop
pop
ja
std
jmp
je
jbe
jnp
loopne
das
cmps
shr
inc
in
aam
fs
arpl
push
fstp
ss
stos
cli
add
mov
idiv
cmp
xchg
imul
mov
aam
jp
ret
push
jns
adc
sub
dec
push
jne
mov
sbb
cmps
shr
pop
(bad)
mov
cmp
lds
leave
add
scas
dec
pop
adc
aaa
fiadd
hlt
push
test
and
daa
cmp
jb
out
in
fcmove
pop
mov
fxch
mov
popf
push
pop
sbb
outs
sahf
mov
push
add
pop
scas
or
dec
cmp
add
stos
and
cmps
lods
cmps
aaa
and
adc
mov
in
mov
jge
mov
push
test
jae
dec
bnd
and
adc
out
pushf
(bad)
push
outs
icebp
add
xchg
aam
mov
xor
loopne
sub
cmc
xchg
jmp
loop
jp
jne
std
cli
push
and
sbb
or
das
pop
cmp
sbb
xlat
cmp
jmp
(bad)
jns
inc
or
int3
fimul
inc
xor
pop
iret
cwde
sbb
sbb
sub
loopne
outs
pusha
ficom
xchg
sahf
push
(bad)
xor
add
mov
loopne
push
cmp
sbb
pop
add
scas
cmp
xchg
xchg
add
popa
pop
cmp
jmp
sub
imul
mov
add
shl
addr16
retf
cwde
or
sub
or
aas
xchg
sub
loopne
fst
mov
and
mov
out
(bad)
mov
mov
jmp
in
cwde
cmp
sub
div
pop
hlt
xor
xchg
out
mov
lea
xchg
dec
loope
pop
cmc
rcl
mov
ins
cmp
xor
mov
mov
arpl
int3
in
dec
outs
iret
(bad)
push
out
fwait
pop
ss
out
mov
js
push
dec
sahf
xchg
and
mov
retf
adc
sbb
bound
(bad)
enter
sub
mov
cmps
(bad)
std
pop
xchg
loop
push
ins
mov
js
pop
(bad)
jno
mov
cmp
pop
imul
addr16
jl
addr16
rcr
into
xchg
daa
pop
ja
pop
in
xchg
mov
jge
add
rcl
(bad)
aam
cs
jnp
sub
mov
mov
fisub
mov
push
and
dec
lahf
mov
push
sti
add
stos
mov
ds
in
mov
sbb
popa
leave
fldenv
out
mov
fdivr
mov
pop
push
aas
sbb
sbb
fs
adc
xchg
pop
scas
nop
jmp
and
call
loop
retf
mov
js
ins
aam
je
or
pushf
lea
jnp
js
aam
fild
sbb
mov
(bad)
mov
mov
nop
cs
mov
sub
out
mov
cmc
jmp
pop
mov
je
std
xchg
mov
xchg
push
add
or
in
idiv
push
ja
inc
jmp
cld
mov
cmps
mov
mov
mov
cmp
imul
cwde
and
cmps
mov
jmp
aas
mov
xor
test
fdiv
out
cmp
mov
enter
or
mov
push
cmps
xor
add
inc
push
retf
inc
push
hlt
mov
hlt
mov
ja
jl
adc
addr16
sbb
test
ret
jnp
or
bound
mov
stc
es
(bad)
sub
cli
xor
cld
or
or
(bad)
fcmovb
ja
data16
or
jl
and
jg
mov
daa
dec
mov
sbb
jge
push
xlat
out
test
pop
xchg
rcpps
fnsave
xchg
into
aam
adc
loop
push
adc
dec
mov
pop
pop
retf
sbb
mov
loopne
gs
cmp
lods
retf
jge
add
push
adc
je
xlat
jge
pop
fwait
mov
lods
sti
sbb
out
and
inc
repz
outs
xor
adc
shl
adc
sbb
mov
cwde
aad
outs
call
push
sbb
aad
xchg
(bad)
add
jbe
fnsave
jnp
iret
int
mov
fsub
adc
cmp
shl
imul
stos
xchg
add
push
adc
inc
pop
call
pop
xlat
leave
push
sub
xchg
mov
int
daa
inc
ins
or
cmc
xchg
or
adc
cdq
imul
jb
stos
rol
fndisi(8087
lahf
test
ror
out
call
in
aam
stos
arpl
inc
mov
cmc
jge
mov
sub
in
jb
sbb
in
ret
test
jbe
loopne
enter
mov
arpl
rol
push
and
daa
aam
enter
adc
lock
pop
xlat
push
push
push
cmps
push
stos
leave
mov
cwde
jmp
push
idiv
pushf
and
imul
das
movs
mov
mov
ret
loopne
jp
lock
pushf
and
pushf
jmp
sbb
call
stos
fcom
adc
fcomp
jl
or
sti
outs
inc
jecxz
mov
scas
cmp
popa
ss
jns
ins
xchg
mov
mov
addr16
xor
jnp
pop
pop
cld
mov
mov
call
mov
push
cmp
push
pop
adc
adc
fldenv
rol
mov
into
xchg
dec
int3
in
pop
(bad)
daa
mov
out
test
stos
fisttp
scas
test
adc
pop
or
push
int
movs
je
ds
jecxz
mov
ror
test
xchg
mov
cmp
fst
fcmove
popf
imul
cmp
inc
ficomp
inc
jg
sbb
dec
hlt
(bad)
fnstcw
push
dec
or
inc
adc
cmp
fisub
ficomp
loopne
pop
idiv
loope
dec
pop
popf
pop
xchg
(bad)
sbb
lock
mov
push
loope
push
push
mov
dec
jmp
not
inc
test
xchg
mov
jmp
arpl
push
jne
mov
test
repz
fistp
or
cmp
push
pusha
(bad)
mov
jbe
or
jnp
jo
out
pop
imul
pop
loop
xchg
popa
mov
fsub
jmp
adc
aam
sbb
and
jp
leave
and
js
sbb
(bad)
popf
cmp
and
sbb
push
int3
xchg
rcr
loop
es
cmp
mov
jg
mov
out
int
xchg
pushf
sub
(bad)
into
jmp
addr16
fsub
inc
dec
(bad)
(bad)
into
cmp
push
fisub
in
popf
adc
push
pop
cmps
pop
int
pop
es
mov
xchg
cdq
xchg
sti
add
ins
adc
aaa
gs
leave
or
add
lds
sub
scas
ds
xchg
in
lea
xchg
or
sub
les
add
or
sub
xlat
inc
mov
ins
aad
loopne
jb
sbb
and
dec
cdq
sbb
push
mov
gs
xchg
push
hlt
call
xchg
lock
icebp
pop
and
ror
mov
test
and
int
mov
sub
mov
arpl
sbb
imul
mov
jne
dec
ret
push
call
stc
dec
xchg
sub
lods
mov
cmc
xchg
add
test
pop
mov
call
dec
mov
xor
jae
add
xchg
gs
inc
jb
mov
add
int3
add
cmp
dec
pusha
fist
cmp
xor
dec
popa
jp
pop
inc
cmp
scas
sub
push
loope
mov
cld
xor
call
shr
stos
inc
mov
std
(bad)
hlt
ficomp
addr16
fmul
xchg
dec
arpl
push
jmp
or
ds
jmp
cmc
fst
imul
rcl
out
call
ret
test
stos
push
jmp
arpl
jmp
mov
fstp
aam
fmul
ja
mov
dec
push
shl
mov
not
retf
adc
inc
mov
mov
sbb
jae
xor
push
mov
dec
push
(bad)
push
stos
push
loope
sbb
dec
ins
(bad)
sbb
sar
mov
enter
adc
sbb
daa
jbe
add
jg
mov
iret
aaa
jl
loopne
adc
mov
clc
mov
ror
xor
dec
sbb
pop
out
lock
jg
inc
xor
push
pop
call
ror
cld
cmp
cmc
shl
pop
or
inc
outs
out
cmc
xor
jle
test
or
shrd
adc
movntps
adc
ret
dec
daa
fbld
xchg
js
cli
lods
cdq
dec
sbb
xor
sbb
data16
ja
mov
push
imul
sbb
shr
stos
in
out
mov
js
mov
xchg
lahf
pop
test
sbb
daa
scas
aaa
imul
sub
inc
mov
repnz
push
repz
sbb
mov
outs
call
and
pop
and
adc
xchg
ins
pushf
pusha
sub
imul
mov
(bad)
rcl
ins
sub
fwait
shl
xchg
pop
push
xor
pushf
sub
mov
push
sar
jno
nop
loop
sahf
mov
(bad)
mov
clc
mov
xlat
daa
jmp
mov
(bad)
je
fidivr
pop
push
xor
in
(bad)
pop
adc
aaa
inc
push
popa
adc
out
shl
(bad)
push
adc
stc
test
fdiv
(bad)
cdq
js
pop
push
mov
add
cli
push
test
xor
xchg
jb
pushf
add
enter
clc
mov
mov
movs
or
add
dec
shl
out
icebp
or
jge
std
mov
sub
add
adc
ret
jecxz
std
mov
pop
jg
mov
retf
pop
mov
outs
and
inc
push
adc
lods
sbb
imul
shl
jae
cli
push
movs
ja
daa
and
jnp
ss
jl
shl
dec
xchg
pop
(bad)
add
int3
ss
je
mov
mov
ret
aas
xor
mov
imul
movs
push
xor
inc
popf
pop
das
push
cld
popf
sbb
std
sub
shl
add
cmps
frstor
pop
push
or
cwde
add
pop
imul
(bad)
cmc
inc
xchg
loopne
mov
inc
cmc
(bad)
push
cmp
das
pushf
and
jmp
cwde
shl
or
xor
ror
pusha
jmp
push
mov
test
fistp
push
cmp
in
xor
xchg
xchg
es
add
movs
sbb
arpl
push
lods
push
lods
jmp
jns
inc
in
jmp
(bad)
xchg
pop
out
movs
std
loopne
hlt
(bad)
xchg
sbb
loope
adc
xchg
jnp
popf
xor
(bad)
pop
add
mov
mov
aaa
ja
inc
cmp
(bad)
test
dec
xor
test
pop
jnp
inc
sub
add
mov
in
cdq
ret
add
test
fcomp
and
jae
mov
test
xor
push
adc
(bad)
mov
into
es
xor
shl
xchg
retf
pusha
and
sbb
stos
icebp
inc
pop
aad
xor
cmp
mov
mov
hlt
or
jmp
pop
sub
sbb
scas
mov
xor
stos
xchg
cdq
cld
mov
inc
out
leave
jl
cli
aaa
mov
loopne
repnz
add
pop
imul
lock
int3
xchg
in
ins
movs
int
popa
test
sbb
test
mov
stos
adc
dec
jno
std
dec
xor
inc
fcom
sbb
cmp
jle
jmp
xor
add
sub
mov
mov
mov
xchg
dec
or
cmp
cmp
pop
push
lock
lods
mov
pop
xchg
aaa
sbb
mov
push
sbb
adc
push
mov
pusha
pop
dec
sbb
xlat
test
add
int
mov
je
push
or
push
loop
mov
push
mov
fist
out
pop
cld
ds
fist
pop
add
xchg
push
xor
sbb
call
popf
mov
pop
cmps
sub
mov
(bad)
push
lods
nop
sub
pop
(bad)
or
xlat
sub
sbb
sar
xchg
mov
adc
retf
(bad)
sub
retf
movs
dec
loopne
adc
sbb
(bad)
inc
(bad)
pop
jno
loopne
push
push
in
xchg
fimul
mov
cmp
push
pushf
daa
pop
add
jne
push
sti
adc
inc
cmp
out
addr16
pop
imul
rcl
out
nop
sahf
jne
and
cmp
inc
xchg
xor
dec
mov
mov
stos
add
sbb
pop
xor
out
(bad)
scas
lahf
outs
rcr
stos
and
paddq
cmp
test
ins
sub
movs
push
retf
cmc
ficom
in
sub
push
arpl
xchg
and
mov
test
stc
mov
(bad)
cld
ror
xlat
rcr
add
push
cld
push
pop
jo
es
rol
jbe
adc
in
xlat
sub
dec
jge
ins
lods
adc
and
arpl
lods
xchg
sub
inc
adc
sbb
out
(bad)
retf
arpl
(bad)
jno
adc
cld
cmp
dec
xchg
sub
xlat
rcr
cs
fcom
loopne
sub
mov
imul
stos
dec
or
dec
iret
pop
sub
mov
mov
add
sbb
ins
sahf
jmp
xchg
adc
cmp
sub
out
mov
jnp
adc
sbb
and
sti
div
lods
inc
neg
sbb
mov
add
loopne
or
sub
movs
(bad)
add
aad
jbe
mov
loopne
mov
rcl
or
inc
lea
loope
jmp
daa
push
cli
rcr
outs
push
inc
dec
add
ret
cmp
idiv
dec
cmp
lock
jns
jmp
outs
scas
and
mul
dec
lds
adc
push
push
add
(bad)
js
bound
push
cmp
rol
mov
add
repnz
in
icebp
jb
mov
sbb
aaa
sub
dec
shr
in
cmp
in
jo
inc
addr16
push
sahf
jmp
clc
or
dec
retf
add
inc
xchg
rol
dec
lahf
imul
es
icebp
fwait
fwait
mov
sti
xchg
popf
std
cmp
icebp
jmp
jbe
add
cmp
aam
dec
loopne
movs
jo
xchg
sbb
int
pushf
pop
test
xor
dec
int
mov
mov
or
or
mov
loope
add
icebp
pushf
mov
or
add
mov
dec
fisttp
addr16
or
lds
sbb
je
push
mov
shl
push
int
mov
dec
dec
ins
(bad)
inc
and
neg
mov
inc
xchg
cmp
sbb
sub
out
cmp
imul
clc
mov
xor
inc
mov
mov
test
call
ins
sbb
fisttp
popf
scas
push
data16
xchg
adc
sbb
jb
xor
jno
or
jae
pop
dec
push
xor
push
ins
or
pop
loopne
lods
inc
mov
aad
jle
xor
fist
jnp
test
sbb
inc
dec
sbb
fmul
sbb
dec
aaa
pop
push
ss
mov
add
or
xor
pushf
ss
fild
push
ins
pop
or
xchg
push
pop
xchg
mov
or
cmps
adc
scas
loop
sbb
pop
sar
in
xor
jbe
in
and
lock
pop
mov
xchg
mov
pop
sar
push
int3
leave
inc
sub
jge
push
xlat
push
or
push
sbb
int3
cmc
fwait
ja
imul
(bad)
pop
jo
mov
mov
dec
int3
les
sbb
pop
mov
add
sbb
loope
dec
pop
xchg
cmp
idiv
xchg
test
add
xlat
push
loope
retf
into
sub
cdq
sbb
shl
addr16
enter
sub
into
stos
jmp
fwait
lds
cwde
outs
out
adc
mov
nop
fndisi(8087
sbb
jecxz
sub
std
jl
cld
pop
push
pop
lahf
ds
mov
aaa
les
pop
pop
dec
sub
xor
pop
movs
cmc
or
in
stos
mov
adc
adc
pop
stos
addr16
mul
xor
push
cld
xor
pusha
xchg
ret
test
mov
xchg
in
adc
sbb
dec
ror
push
and
aaa
mov
shr
add
xchg
outs
js
push
ss
test
stos
xchg
mov
movs
xor
ret
enter
pushf
sub
sbb
jge
or
cmp
sbb
fadd
push
pop
shl
vmovddup
jg
ror
adc
jge
ret
out
lahf
mov
xlat
pop
jge
cmp
cwde
icebp
pop
sbb
mov
mov
or
adc
push
fdivr
sbb
int3
or
nop
dec
or
jge
stos
test
or
ss
loope
in
fs
jo
arpl
(bad)
mov
or
sub
pop
adc
(bad)
mov
in
jmp
rcl
sub
mov
dec
fs
jb
aaa
pop
push
aad
jmp
shl
outs
ret
sahf
inc
shr
jl
pop
add
ds
lods
dec
fwait
sar
nop
mov
mov
loop
aaa
nop
(bad)
xchg
shl
pop
push
sbb
xlat
mov
mov
pop
xlat
bound
sar
std
iret
jne
cld
mov
push
scas
test
pop
cli
ficom
or
repnz
sbb
xchg
dec
xchg
into
shl
inc
scas
cmp
mov
push
daa
(bad)
jle
lods
retf
test
(bad)
xchg
mov
inc
push
sbb
ds
jmp
call
add
push
daa
shl
dec
pop
xchg
shr
jno
sub
cld
xchg
ins
dec
addr16
(bad)
movs
in
pop
dec
loopne
push
shr
push
mov
rcl
xchg
fild
jb
pop
jg
sub
pop
retf
(bad)
leave
jno
push
and
stos
sahf
lods
and
dec
dec
ror
lock
call
repz
push
adc
lods
shl
retf
in
enter
mov
rcr
mov
mov
jp
push
scas
xchg
aam
pop
sbb
lods
mov
xchg
ds
pop
jmp
mov
xor
mov
pop
js
(bad)
jb
dec
push
and
pop
add
add
repz
(bad)
out
jae
mov
ds
and
jbe
dec
or
stc
cmp
mov
(bad)
and
mov
adc
xchg
mov
push
mov
in
mov
push
(bad)
xchg
stos
sub
loope
push
stos
cmp
ret
xchg
fwait
mov
mov
sbb
jl
cdq
popa
dec
fsub
aad
popa
mov
jge
and
xor
pop
ja
cld
into
cmp
lds
lock
sbb
in
fcmove
test
lea
inc
sar
mov
push
xchg
(bad)
jge
iret
(bad)
xor
out
add
mov
(bad)
mov
push
test
xchg
out
dec
cmp
cmp
xor
fwait
or
retf
je
es
pop
push
shl
pop
push
aam
arpl
inc
fwait
aam
inc
ins
loop
dec
jp
rcl
cmp
dec
and
ds
lds
mov
int
imul
fisubr
cmp
ds
push
in
retf
(bad)
mov
push
push
xchg
mov
cmp
pusha
dec
ins
icebp
mov
or
push
inc
cmp
sbb
push
call
out
inc
add
ret
dec
arpl
push
inc
(bad)
stos
test
push
jmp
(bad)
mov
repz
adc
seto
pop
jge
push
movs
mov
ss
rol
jmp
(bad)
out
shl
gs
jbe
mov
dec
stc
pushf
je
shr
push
das
in
inc
push
pop
sub
cld
fbstp
jo
shl
stos
daa
cmp
loopne
(bad)
lods
loope
ds
(bad)
fld
pop
(bad)
sub
xchg
fnop
lss
scas
push
arpl
lock
iret
xchg
pop
cs
lock
test
pop
mov
dec
pop
xchg
test
loopne
inc
push
jbe
es
or
pop
pop
cmp
push
sti
push
(bad)
repz
xlat
out
mov
jns
sub
push
or
jl
jmp
cmp
push
lock
sti
cdq
jp
test
jo
nop
aaa
jmp
loopne
fs
pop
pop
in
dec
ror
mov
sbb
sbb
push
push
mov
fsincos
dec
xor
mov
mov
(bad)
sub
rcl
(bad)
sub
sti
dec
cmp
add
pop
ds
fidivr
xor
adc
mov
outs
inc
dec
mov
adc
pop
mov
arpl
rcl
inc
call
dec
adc
sar
mov
mov
int3
push
sub
addr16
add
stos
or
stos
mov
sub
jb
pushf
pop
cmp
mov
imul
stos
aad
adc
pop
inc
popa
sti
and
inc
pop
sub
pop
or
fsub
std
dec
imul
sub
int
xchg
inc
lock
pop
neg
mov
in
int
stos
cmp
mov
leave
fsub
loope
push
test
mov
clc
sbb
mov
outs
xlat
ficom
rol
push
cmp
mov
es
or
xlat
call
sbb
add
bound
adc
push
fbld
or
ror
sbb
lods
push
sub
clc
dec
and
ret
sub
fcom
adc
rol
push
jmp
shr
dec
or
daa
mov
movs
test
inc
mov
mov
(bad)
xchg
in
push
xchg
fwait
jp
adc
pusha
pop
mov
jns
mov
(bad)
sbb
stc
sti
out
stos
mov
xor
adc
js
or
add
fisttp
mov
popa
fisttp
jge
pop
dec
or
cmc
push
push
xor
shr
mov
nop
mov
(bad)
sub
and
pop
ds
mov
xor
jecxz
sub
inc
aam
push
hlt
cmps
dec
in
push
push
test
add
shr
fild
rcl
push
xor
(bad)
lock
xor
push
aas
stos
sub
movs
inc
push
mov
inc
mov
mov
jecxz
into
xor
icebp
shr
mov
jmp
ss
retf
mov
jbe
adc
addr16
adc
pop
dec
test
push
xchg
mov
pop
mov
jno
sbb
dec
inc
into
es
loope
mov
mov
movs
pop
add
sbb
scas
int3
and
ss
stc
jl
jnp
nop
push
ins
div
fldl2e
dec
popf
mov
sti
test
cmp
into
std
outs
fld
pop
add
xor
fidiv
test
pop
push
sahf
loopne
shl
jnp
push
mov
(bad)
fcomip
mov
adc
fwait
xor
sub
hlt
aad
xor
push
sub
repnz
jo
pop
in
push
mov
add
mov
sbb
popa
sub
(bad)
mov
int
jae
std
leave
mov
ror
les
mov
mov
fcomp
push
sub
mov
jo
sub
sbb
rcl
mov
add
jg
push
js
jae
ror
xchg
mov
jp
ins
sbb
test
inc
fistp
data16
rcl
sti
mov
sub
js
ins
mov
test
mov
sbb
fsubr
xchg
lods
dec
cmp
jp
jg
fwait
xlat
push
dec
mov
dec
fnstenv
xchg
xchg
jae
lods
or
sbb
mov
lahf
pop
or
fisttp
xchg
mov
out
fld
pop
test
push
inc
or
sbb
loopne
mov
sub
popf
cmp
fld
mov
and
mov
jge
inc
mov
add
xor
fstp
lods
imul
dec
rol
imul
push
(bad)
fiadd
int3
cwde
adc
jns
je
dec
push
pop
les
pop
xchg
leave
or
sbb
es
rcl
cmp
std
mov
mov
popf
jmp
cdq
adc
add
ins
or
sbb
sub
xor
jg
dec
jle
cmps
cld
mov
sbb
or
lahf
retf
mov
bound
xchg
push
jne
push
ins
add
fadd
push
jge
xor
jle
outs
jle
cli
fwait
ins
js
jne
cdq
add
mov
mov
pop
(bad)
or
sar
(bad)
pop
xchg
mov
mov
pop
fild
hlt
inc
(bad)
dec
and
ins
jg
mov
sub
dec
mov
pop
jg
or
dec
xlat
sbb
adc
scas
inc
sar
cdq
xchg
or
mov
sbb
xchg
fcmovnu
and
add
loopne
sahf
xchg
push
push
inc
and
inc
mov
and
out
push
call
mov
mov
lds
jmp
add
and
out
(bad)
jmp
fbld
jnp
xor
(bad)
inc
dec
fstp
popf
xor
loopne
xor
aaa
mov
in
hlt
bound
mov
movs
mov
pop
loopne
dec
retf
jne
adc
xchg
arpl
je
dec
xchg
pusha
out
mov
leave
dec
xlat
fisttp
xchg
popa
adc
in
mov
ficom
test
ins
cmp
pop
sahf
loope
dec
jecxz
mov
push
or
jnp
loope
xor
mov
lea
mov
fdivr
xchg
dec
fcomi
pop
cli
mov
mov
jae
adc
rcl
xlat
loopne
(bad)
and
ja
out
pop
aad
ret
in
fiadd
(bad)
loope
neg
adc
pushf
sti
sbb
int
dec
add
or
xchg
mov
xchg
xchg
pop
rcr
inc
dec
mov
xchg
inc
mov
mov
push
cld
jmp
cmp
addr16
ja
pushf
cmps
xor
mov
stc
push
int3
and
mov
nop
aas
pushf
lea
mov
(bad)
loope
out
call
dec
push
pop
sbb
adc
int3
cld
adc
pop
jmp
jnp
outs
cmc
add
and
icebp
jns
fdivr
xchg
out
imul
mov
mov
fist
push
leave
inc
repz
ficom
ja
call
aaa
es
sub
add
mov
mov
arpl
add
(bad)
fidiv
pop
popf
push
add
inc
and
outs
into
push
adc
retf
(bad)
sbb
test
mov
loopne
ficomp
mov
jns
arpl
sub
call
push
xchg
dec
ret
call
addr16
pop
sbb
inc
push
or
mov
pop
adc
add
mov
sets
push
mov
or
into
inc
fcmovnb
shl
ds
lods
add
addr16
icebp
retf
sahf
push
xchg
add
jl
enter
int3
aam
mov
(bad)
and
(bad)
lods
and
xchg
call
jge
mov
inc
ja
push
mov
fcom
dec
cmp
xor
lods
fwait
in
jl
sub
push
jno
cmp
mov
xchg
add
and
jb
sub
pop
aaa
loopne
fild
int
and
shl
jne
xor
adc
fwait
les
int3
dec
ror
not
push
call
aad
fsubp
rcl
ja
xor
ror
cmp
movs
mul
jl
dec
pop
clc
lahf
pushf
outs
nop
adc
pop
dec
push
mov
loope
inc
mov
(bad)
inc
cmp
gs
jp
inc
movs
or
mov
mov
xchg
in
mov
ds
xlat
sbb
mov
mov
lock
retf
ds
pop
stos
add
mov
retf
mov
inc
xor
fidivr
mov
in
das
mov
sbb
sub
retf
out
cmp
sbb
inc
mov
pop
enter
ror
outs
aas
inc
daa
scas
dec
pushf
(bad)
clc
xor
pop
lock
or
out
xchg
fdivr
imul
shl
adc
sbb
div
icebp
enter
test
sub
cmp
out
mov
pop
add
(bad)
mov
icebp
fisubr
mov
xchg
dec
mov
setg
dec
dec
imul
mov
out
pushf
call
std
jnp
lea
ds
adc
inc
iret
xchg
fcom
mov
push
out
call
jg
inc
in
pop
inc
mov
icebp
mov
popf
push
cs
sahf
(bad)
mov
cmp
sbb
div
js
(bad)
pusha
push
out
mov
ins
mov
addr16
cdq
aas
inc
cmc
test
and
sub
inc
add
cdq
pushf
jge
fcomi
xchg
push
pushf
pushf
push
jnp
adc
idiv
push
xchg
pushf
or
mov
div
jo
push
fild
xlat
stos
call
mov
xchg
push
xor
test
ds
jge
scas
lods
fwait
sub
sub
cs
xchg
lods
mov
imul
outs
push
push
arpl
xchg
xor
mov
movs
mov
shr
pushf
sub
ja
jl
ret
sti
pop
jb
in
test
cmp
call
aad
daa
icebp
dec
call
pop
push
xchg
add
les
test
cmp
ja
repnz
out
enter
ss
mov
test
inc
inc
lea
jb
mov
mov
out
add
sbb
mov
jl
and
add
push
ret
in
xchg
aas
add
(bad)
movs
dec
test
xchg
xor
fcmove
push
cld
adc
dec
sub
cmps
jle
jle
and
push
in
xchg
pop
fistp
mov
rol
cwde
cld
stos
mov
mov
inc
lea
jg
xchg
pop
cmp
xchg
addr16
jae
lock
not
loope
ret
outs
cmp
fnstcw
rcr
arpl
fimul
and
pop
loop
xor
pop
sub
add
inc
pop
cmp
push
jmp
mov
jp
xchg
sbb
jne
addr16
cmps
test
and
loope
dec
test
mov
les
mov
aaa
out
push
outs
sbb
dec
mov
push
or
fnop
and
xlat
call
pop
jg
fidiv
jmp
fisubr
out
mov
inc
retf
dec
mov
out
cmp
xor
dec
sub
dec
les
mov
dec
inc
mov
sub
in
xor
jns
push
lods
in
push
push
sbb
test
mov
ja
clc
push
xchg
arpl
jne
inc
test
mov
sbb
aad
out
ins
ret
xchg
fs
add
jmp
fcomp
mov
xor
xor
mov
cld
mul
pop
xchg
xchg
leave
sub
test
cmp
or
cmp
mov
lahf
xchg
addr16
mov
adc
(bad)
dec
push
(bad)
outs
mov
ficomp
aaa
cs
fwait
pop
mov
aas
sbb
and
dec
rcr
push
cli
aaa
popa
imul
or
push
fcomp
cmp
sub
imul
jo
retf
std
mov
ret
push
pop
cmp
jmp
inc
iret
xor
pop
and
pop
mov
bsf
out
shr
out
icebp
mov
and
rol
push
sub
sbb
push
test
xor
rol
mov
mov
addr16
rcr
pop
test
xor
cld
shl
fistp
push
jo
jmp
out
push
mov
jl
frstor
fcomp
(bad)
push
or
rcr
push
arpl
push
jnp
cmc
ds
lock
push
dec
pushf
enter
fcmovnbe
repnz
mov
jge
aam
test
pop
mov
test
xlat
push
or
pop
push
dec
mov
lds
fwait
addr16
mov
mov
pop
pop
push
sub
jns
outs
test
inc
dec
popa
pop
cmp
mov
push
cmc
cwde
rcr
or
lock
push
cs
into
rcl
(bad)
push
fdivr
hlt
lods
mov
mov
daa
imul
fsub
fs
inc
xor
lock
mov
mov
fsubp
cmp
cmp
fldenv
pop
push
mov
lods
popa
int3
pop
jge
cmp
loopne
ss
lods
xor
pop
pop
jae
add
push
rcr
cmp
aam
enter
and
(bad)
dec
pop
pop
inc
or
loope
pop
xchg
mov
sub
pop
mov
mov
xchg
mov
mov
retf
adc
cmp
mov
inc
ins
iret
stos
dec
sub
test
or
enter
shr
mov
dec
ret
and
sahf
scas
xor
fisub
sbb
pop
shl
inc
mov
out
jg
cmps
pop
pop
jmp
cmp
xchg
dec
push
dec
dec
jno
int3
fsub
mov
ss
lds
cmp
mov
fwait
pop
and
and
fcomp
(bad)
dec
es
sub
inc
jg
cmp
push
rol
enter
push
jnp
mov
in
dec
addr16
call
ret
fmul
lds
(bad)
idiv
jmp
push
loop
jne
jne
adc
adc
push
jge
xchg
push
inc
sbb
xchg
jae
add
out
mov
loop
mov
mov
mov
lods
in
mov
pop
lea
imul
mov
push
cmp
push
loopne
sti
fsubr
ja
sbb
xor
rol
mov
sbb
scas
mov
pop
inc
mov
mov
jmp
sub
test
call
jg
cmp
xchg
loopne
and
jno
pushf
pushf
scas
adc
mov
(bad)
add
pop
les
dec
nop
in
clc
mov
stos
adc
sub
shr
retf
mov
jne
lods
aaa
dec
push
cmp
xchg
push
ins
pop
fsub
sbb
jmp
scas
and
pop
mov
retf
shr
mov
or
mov
sbb
jae
nop
mov
push
loop
mov
xor
ins
(bad)
clc
mov
jmp
out
mov
adc
inc
push
push
and
rcl
fld
mov
shl
mov
jle
mov
xchg
cmp
neg
lods
das
fistp
iret
jns
(bad)
dec
ret
out
sub
cli
push
mov
out
push
adc
dec
push
sub
bound
les
jno
int
aas
xor
pop
and
outs
pushf
es
out
ds
in
pop
aad
test
dec
sbb
push
or
fcmovne
out
retf
adc
icebp
ds
(bad)
dec
and
clc
xchg
test
dec
ins
(bad)
mov
mov
nop
pushf
cmp
loope
and
(bad)
test
fbld
test
or
(bad)
test
sub
inc
sub
and
mov
sbb
xlat
aad
mov
fisubr
pop
loopne
push
xor
xor
dec
mov
into
std
(bad)
lahf
sub
leave
clc
imul
add
rcr
ins
ss
fwait
pop
popf
add
out
push
push
push
cld
inc
sbb
mov
inc
mov
loopne
inc
add
mov
scas
out
dec
pushf
je
outs
in
sub
cwde
cld
xor
add
ins
mov
mov
loopne
(bad)
cmp
jge
pop
lods
call
(bad)
push
outs
jns
push
pop
sub
gs
mov
stos
pop
sub
cmp
das
dec
pushf
mov
lds
mov
jnp
and
repnz
push
(bad)
pushf
fs
mov
jge
daa
jle
dec
and
jo
popa
pop
mov
sbb
push
dec
jp
cmp
pushf
jb
push
pushf
jle
sub
mov
popf
xor
cdq
xchg
inc
jmp
rol
or
shr
dec
or
inc
sub
push
int3
mov
rcl
pop
push
sbb
pop
int3
add
imul
xor
pusha
ss
out
xchg
push
call
sub
ds
lods
shl
sti
dec
test
xor
nop
ror
pop
data16
jmp
call
scas
jl
jbe
cmc
cmp
enter
add
in
call
idiv
ja
push
js
popa
mul
fdiv
mov
or
adc
loop
fadd
jmp
dec
add
pop
pop
mov
mov
adc
and
mul
(bad)
int3
mov
jns
and
bound
fcom
adc
loopne
pop
xchg
pop
setl
cli
and
pop
dec
jecxz
daa
mov
lahf
sbb
xor
sbb
pop
lods
inc
inc
xor
or
mov
leave
rcr
pop
ret
jmp
inc
std
add
nop
gs
pop
mov
or
mov
fcom
dec
push
or
and
cmps
scas
sbb
std
mov
inc
inc
jl
mov
pop
popf
jns
dec
pop
push
jl
xor
mov
cwde
jne
gs
es
pop
ret
fmul
pop
aaa
test
jge
pop
nop
lds
inc
jl
pextrw
push
loopne
pushf
mov
mov
dec
mov
in
adc
xchg
pop
mov
loopne
mov
inc
outs
push
sub
mov
mov
push
add
sbb
loop
xchg
rol
pop
les
pusha
ins
in
dec
sahf
fprem
mov
adc
sbb
retf
pop
cmc
pop
in
stc
sar
out
mov
loopne
inc
mov
test
and
nop
movs
dec
jp
sar
push
sub
dec
or
mov
dec
addr16
ja
pop
add
es
jnp
push
inc
or
or
aaa
adc
xchg
movs
jmp
pop
cmp
inc
push
pop
add
ins
adc
fnsave
mov
outs
jecxz
aad
push
mov
cmps
leave
std
and
mov
and
sar
ds
adc
ror
mov
xchg
xor
je
test
stc
iret
int3
cli
loopne
jne
outs
cmp
pop
lds
jl
shl
ss
mov
cmp
mov
sbb
cwde
xor
call
jmp
call
mov
imul
fs
std
popa
mov
stc
sbb
pop
adc
hlt
cwde
movs
out
not
in
test
iret
mov
nop
addr16
dec
inc
push
mov
xchg
test
sti
pop
std
dec
xchg
lahf
popa
mov
stos
shr
popa
mov
adc
pop
(bad)
mov
jnp
fwait
sti
lods
mov
mov
cmp
into
fmul
jmp
inc
out
dec
lahf
aad
pop
js
xchg
dec
call
sub
in
xor
jns
cs
and
aas
jb
or
test
arpl
cs
fcmovne
mov
in
push
icebp
adc
pop
sub
das
loope
mov
xor
retf
inc
call
pop
addr16
push
mov
ss
cdq
fdiv
mov
inc
cdq
test
test
(bad)
mov
fsub
lahf
jp
pushf
cmp
es
xchg
jl
pop
xor
xor
popa
not
adc
pop
or
std
ins
cwde
pop
jb
ret
push
lahf
pop
ins
dec
cmp
in
lods
pop
push
loope
je
sub
pop
cmp
mov
jnp
xor
je
adc
xlat
mov
xor
xchg
imul
push
fcomp
(bad)
inc
adc
rol
push
inc
out
div
dec
data16
adc
outs
sbb
cmps
rcr
adc
mov
pop
jae
add
jno
shr
dec
fnstenv
pop
xor
inc
add
mov
push
sbb
lahf
pop
pop
loope
add
xor
(bad)
dec
shl
cdq
sbb
push
dec
inc
shl
or
pusha
mov
popa
dec
retf
pop
out
aad
add
jl
xchg
push
mov
loop
in
fcomp
lods
retf
inc
mov
out
mov
adc
pop
and
sbb
mov
shl
mov
push
stc
push
nop
sub
add
and
imul
(bad)
cmp
xchg
push
(bad)
inc
cmp
jl
xchg
outs
cwde
xchg
xchg
xlat
sbb
pop
stos
arpl
retf
jmp
jb
shl
scas
xchg
jae
sbb
add
test
jae
ret
rcr
xor
mov
arpl
faddp
addr16
movs
and
sbb
mov
pop
outs
dec
mov
inc
inc
or
xlat
cs
or
je
jae
sbb
fisubr
sub
movs
dec
stos
lea
mov
out
ins
mov
mov
sbb
iret
imul
and
cmp
dec
stc
sub
cmp
aam
xchg
sub
(bad)
retf
pop
jle
mov
xlat
lods
jmp
aam
xor
mov
in
stos
xchg
sbb
xor
sar
xor
inc
mov
cld
ret
loopne
sub
test
push
arpl
mov
pop
jmp
jge
or
add
and
rcl
ja
retf
movs
add
(bad)
mov
push
sub
je
mov
ds
(bad)
addr16
xchg
jns
inc
call
arpl
adc
in
adc
cdq
add
mov
add
xor
push
test
fsin
sub
mov
jno
mov
(bad)
je
push
repz
loope
fidiv
mov
loopne
push
test
pop
pushf
push
mov
sahf
ins
into
dec
jbe
sti
aam
add
sbb
cmp
jmp
inc
push
pop
xchg
xchg
popf
adc
jecxz
ret
push
sti
fst
add
mov
arpl
adc
pop
or
fisttp
arpl
pop
sub
adc
sbb
bound
sub
mov
hlt
jno
cdq
dec
call
jg
sti
add
adc
inc
data16
adc
(bad)
test
int
sub
cmps
mov
or
jbe
push
in
jno
daa
nop
push
mov
sbb
pop
cmps
clc
ror
inc
(bad)
mov
in
shl
outs
into
das
push
aad
mov
mov
and
inc
push
sbb
test
and
shl
and
or
out
int3
int
jmp
push
adc
mov
xor
addr16
mov
push
pop
fmul
push
setp
shl
dec
int3
add
push
sub
daa
adc
loop
mov
add
and
dec
inc
rol
(bad)
cli
clc
inc
repnz
inc
dec
mov
or
(bad)
fs
in
movs
out
xchg
adc
xchg
dec
xor
ins
jno
js
out
and
dec
mov
cwde
mov
push
dec
xlat
pop
mov
mov
sti
cmp
in
and
mov
repnz
push
push
mov
jb
mov
push
pop
jnp
add
sbb
ret
mov
stos
mov
call
ins
cmp
xchg
les
popa
dec
inc
repz
repnz
jmp
mov
mov
(bad)
(bad)
enter
mov
pushf
lock
xor
rcr
push
jnp
xchg
(bad)
das
test
clc
mov
mov
and
cmp
movs
or
mov
stos
dec
outs
cmp
pop
mov
fwait
push
and
and
clc
dec
pop
and
inc
add
mov
sbb
loop
adc
dec
div
jmp
push
pop
mov
cmp
and
xlat
jno
int3
pop
dec
pop
sbb
push
ja
addr16
int
fldcw
or
pushf
and
inc
sbb
add
repz
push
int
sbb
mov
cli
jp
sub
das
adc
jno
mov
jnp
mov
fcom
mov
push
mov
ds
int3
scas
adc
mov
jnp
mov
out
gs
loope
sub
loop
repnz
rol
mov
mov
outs
push
loope
and
dec
add
jbe
aad
xor
in
sub
pushf
iret
cmc
mov
jg
xor
mov
cmp
and
mov
push
mov
retf
imul
inc
sbb
lock
popf
iret
pop
mov
mov
push
push
and
add
repz
mov
std
stos
std
cdq
(bad)
sub
je
imul
mov
data16
aaa
xchg
push
stos
dec
cmc
adc
gs
(bad)
push
fadd
not
cmc
lahf
dec
lock
movd
les
jcxz
add
dec
xchg
fbstp
fld
iret
pop
fild
adc
jne
adc
std
xor
sub
xchg
mov
outs
push
jmp
adc
clc
jl
mov
(bad)
jno
dec
(bad)
stos
loope
fucomp
mov
fadd
loope
int3
into
push
movs
test
ds
shl
add
xchg
lock
xor
inc
popf
inc
movs
shr
fist
jge
in
pop
push
sbb
int3
xor
push
inc
push
jmp
adc
lods
and
aad
mov
sub
movs
(bad)
ror
jno
cmp
mov
mov
(bad)
call
and
(bad)
jo
jbe
(bad)
jp
push
sti
or
mov
push
fld
mov
or
xor
xlat
inc
pop
cwde
jo
fidivr
mov
pop
push
scas
(bad)
push
xchg
scas
rcl
pop
gs
out
mov
addr16
or
jbe
fsub
scas
add
pop
jo
in
jmp
mov
js
scas
mov
jmp
mov
sbb
sbb
jmp
cmps
enter
push
and
lahf
jl
or
and
pushf
test
pop
jecxz
mov
cmp
mov
ror
xlat
or
mov
push
(bad)
push
cmc
(bad)
jbe
cmp
xor
ins
push
sbb
sbb
fstp
add
add
cwde
lea
mov
cmp
fisubr
bnd
cs
popf
cld
pop
mov
jno
xor
popf
(bad)
stc
ds
push
adc
fiadd
inc
loope
cmp
fistp
stos
adc
in
outs
movs
ins
or
jb
fisubr
mov
stos
jmp
out
and
jb
dec
xor
test
push
cmp
push
rcl
cmps
arpl
adc
ror
xor
hlt
mov
mov
push
(bad)
fwait
loop
pop
cmps
aaa
and
lods
iret
rep
or
jb
xchg
pop
jmp
int3
sar
cwde
fimul
dec
mov
sbb
push
les
loop
push
cmp
or
nop
sub
fbstp
mov
and
aaa
setae
sbb
lahf
push
jmp
cmp
mov
xchg
or
std
iret
rol
adc
xor
mov
mov
cdq
and
call
push
pop
jp
push
stos
shl
fld
mov
pushf
cmp
icebp
fdiv
rcl
pop
push
stc
and
pusha
inc
pop
mov
ds
mov
jmp
mov
sahf
aad
or
adc
mov
pop
xchg
cmp
xchg
pop
push
(bad)
aam
add
pop
(bad)
in
es
mov
jae
sti
pop
inc
mov
outs
pop
retf
push
ins
cwde
add
shl
inc
dec
mov
pop
sub
in
ins
addr16
dec
inc
loop
in
cmovno
sar
cmp
pop
xchg
fdivrp
push
push
je
retf
mov
sbb
xchg
add
movs
jmp
js
pop
push
mov
retf
ds
icebp
add
push
inc
mov
dec
ud0
mov
(bad)
arpl
loopne
dec
in
mov
adc
and
add
pop
aam
dec
lea
xchg
pushf
(bad)
stc
jmp
mov
loop
pop
push
adc
mov
ret
pop
retf
jecxz
push
dec
xchg
sbb
aam
dec
outs
movs
mov
into
shl
xor
adc
sub
dec
movs
(bad)
dec
jae
and
popf
sti
sub
xchg
(bad)
in
aaa
xor
jmp
xlat
push
mov
icebp
(bad)
loop
ja
stc
lock
idiv
scas
pop
pop
dec
in
test
es
sar
lods
add
jl
xchg
jb
cdq
jp
jge
and
call
inc
rcr
mov
and
and
or
push
aas
popa
jl
pushf
push
stos
jle
cld
xor
sbb
ds
or
fucomip
movs
adc
movs
add
lea
stos
scas
xor
aam
stos
push
sub
(bad)
push
(bad)
push
push
or
js
out
push
adc
mov
push
xor
call
pop
pop
iret
mov
out
retf
(bad)
xchg
add
sub
clc
adc
shl
mov
sub
cli
mov
jg
mov
int3
mov
mov
iret
sbb
jo
aaa
jae
icebp
inc
or
push
cmps
jb
and
js
in
push
sub
jle
jno
or
sbb
div
repz
es
test
cmps
sub
push
mov
xchg
pop
out
mov
retf
pop
fwait
jge
jbe
cmp
mov
addr16
or
xor
mov
rcl
ds
push
aam
nop
inc
push
adc
push
jne
jae
(bad)
pop
fisub
sar
cmps
sub
aaa
push
or
aas
dec
scas
test
pop
lock
fucomip
sbb
movs
psrad
jb
retf
cmp
popf
daa
es
les
rcl
jmp
inc
sar
push
jmp
pop
rcr
xchg
push
lods
sbb
push
nop
inc
pushf
xor
hlt
std
inc
jl
nop
loope
fidivr
pop
and
ror
dec
aas
adc
dec
xor
jbe
repz
xchg
push
add
xor
sub
jge
or
mov
outs
aam
pop
out
inc
mov
outs
jnp
or
xchg
(bad)
jge
enter
mov
stc
dec
mov
scas
and
sub
fcom
mov
out
popf
sbb
jl
adc
mov
cmps
out
inc
jp
pop
mov
cmp
inc
fs
gs
bound
ss
scas
pop
retf
mov
fidivr
inc
mov
leave
mov
stc
enter
in
mov
(bad)
adc
sub
cld
fcmovne
repz
mov
aaa
fldenv
sub
aaa
loop
dec
push
fisub
std
dec
jne
xor
sub
or
idiv
js
data16
xor
fistp
aad
sbb
sbb
int3
pop
mov
iret
stos
mov
or
test
sub
and
int3
test
je
rcl
and
loope
out
dec
not
cld
push
movs
fcmovnu
mov
and
inc
mov
pop
mov
pop
cdq
add
adc
inc
sub
fcomp
ins
sub
mov
xchg
push
std
mov
pop
sub
mov
mov
lods
pop
cld
or
in
add
test
int3
lods
aam
or
sar
dec
or
addr16
sbb
cmps
daa
add
add
shr
mov
inc
xor
imul
clc
shl
push
das
arpl
mul
pop
inc
daa
idiv
mov
nop
outs
fist
jp
(bad)
xor
cmc
or
ins
mov
mov
(bad)
gs
fistp
fisubr
pusha
xchg
daa
pop
clc
daa
inc
sub
aad
pop
cs
rol
jb
push
clc
push
fdiv
mov
cmp
push
lock
mov
je
shl
or
(bad)
xchg
mov
xchg
dec
std
imul
sbb
(bad)
jg
mov
fwait
jmp
xchg
jnp
loope
inc
retf
adc
ret
jecxz
into
push
sub
lods
jle
push
dec
into
sti
adc
cmps
sbb
test
mov
jge
cmp
jmp
out
push
neg
addr16
dec
outs
push
sbb
stos
mov
sbb
in
mov
mov
std
jmp
je
jecxz
mov
dec
popa
mov
pusha
dec
mov
call
push
imul
push
(bad)
pop
sti
sbb
add
ja
jno
dec
mov
xchg
js
mov
ja
rcr
test
arpl
sbb
aaa
jae
neg
mov
gs
enter
mov
pop
int3
fst
ins
call
loop
jmp
jns
test
mov
pop
clc
(bad)
or
lods
sub
pop
jne
adc
popa
xchg
shl
push
fsubr
cmp
inc
lock
xchg
push
retf
fcomp
add
sbb
ins
gs
add
daa
jo
cld
jns
stos
dec
mov
mov
add
hlt
stos
rcl
xor
cmps
fs
std
mov
pop
imul
dec
cli
xchg
mov
ror
idiv
dec
ins
(bad)
std
retf
or
aad
out
popf
test
leave
hlt
dec
jnp
mov
(bad)
mov
fwait
sub
mov
fistp
xchg
movs
jno
add
lods
push
pop
jmp
mov
mov
js
sbb
cdq
push
cmps
xchg
pop
(bad)
ds
inc
mov
push
xor
xchg
ins
mov
and
cmp
sbb
pushf
ret
adc
pop
imul
mov
(bad)
lods
mov
retf
cmp
inc
jns
xchg
inc
xlat
lock
sub
enter
push
push
leave
xchg
sub
jmp
jae
or
(bad)
cmp
pop
mov
pop
arpl
inc
mov
sub
jg
pop
mov
std
nop
arpl
inc
pop
fstp
stos
aam
xor
ds
dec
and
mov
mov
adc
dec
enter
sub
ins
cmc
dec
ret
cmp
xchg
dec
inc
not
out
inc
push
add
or
dec
daa
xor
(bad)
neg
lock
aaa
retf
dec
cmp
(bad)
call
fist
imul
xor
sbb
mov
push
jne
jle
adc
jmp
pop
les
pushf
and
stc
cld
aad
pop
xchg
push
or
sub
sbb
pop
mov
dec
cmp
das
dec
cmp
pop
and
pop
push
or
sbb
test
test
cdq
test
je
adc
sub
pop
add
mov
out
mov
aas
mov
call
outs
sub
inc
sub
and
sbb
retf
int
jnp
sub
push
pusha
push
xchg
ins
stc
dec
cli
xchg
test
xor
icebp
cmps
enter
sbb
xor
pop
add
push
push
mov
dec
fs
(bad)
js
fcom
add
pop
sub
add
aad
mov
ds
jns
pop
jb
or
pop
sbb
pop
icebp
stos
pop
xlat
adc
xchg
mov
shl
inc
(bad)
jns
cmp
(bad)
pop
shl
int3
loopne
ja
daa
mov
mov
adc
loopne
js
push
push
jmp
outs
cdq
clc
xor
mov
(bad)
add
rcr
sub
and
ret
rcr
dec
pop
cmps
jl
ins
scas
mov
cmp
fs
xchg
pop
test
lock
xlat
xchg
cmp
std
sub
cmp
mov
adc
retf
sub
sub
and
nop
jbe
push
pop
fld
fdiv
(bad)
hlt
arpl
add
dec
xchg
or
and
cmp
adc
dec
test
mov
cwde
pop
mov
pop
out
loopne
jmp
pop
dec
pop
lock
pop
inc
add
movs
sahf
mov
test
daa
addr16
loope
and
out
mov
xlat
aas
sahf
sub
add
and
push
gs
leave
cwde
pop
mov
sbb
movs
adc
imul
aas
push
mov
jmp
mov
push
dec
mov
sbb
imul
call
cli
data16
int
cmps
iret
adc
jge
lods
mov
push
or
out
jnp
mov
xor
sar
out
xchg
retf
ins
sub
scas
scas
lea
sub
sub
push
test
mov
push
sbb
jp
lods
scas
clc
js
sub
daa
push
cdq
mov
test
cs
inc
(bad)
sub
dec
adc
push
inc
push
jmp
imul
loopne
lock
xor
mov
jmp
out
xchg
sahf
push
xchg
psubd
(bad)
cmc
pop
cmp
dec
add
mov
neg
ins
mov
fld
jb
pop
xchg
nop
xchg
cmp
add
call
add
in
sub
pop
xchg
push
stos
cmps
cdq
jnp
not
xlat
xchg
imul
and
(bad)
test
sub
inc
mul
push
xchg
push
loopne
nop
fsub
sbb
shr
pop
push
and
pushf
wrmsr
popf
inc
mov
pop
xor
sbb
adc
out
sub
aas
mov
add
pop
push
push
(bad)
outs
xchg
cs
or
ins
xchg
adc
sub
pop
aam
sbb
mov
mov
addr16
into
mov
dec
mov
mov
mov
sbb
xchg
aaa
shr
arpl
xchg
gs
dec
dec
cmp
retf
xchg
add
xor
and
dec
inc
or
and
and
jl
fwait
pop
shr
cmp
pop
mov
aaa
mov
into
mov
push
dec
retf
loopne
sub
sbb
pop
loop
mov
pushf
pop
add
ret
ror
add
loope
mov
ret
fisttp
or
(bad)
loop
bound
test
lock
fwait
push
outs
enter
(bad)
loopne
jmp
inc
pop
jecxz
inc
mov
inc
mov
sbb
imul
repnz
ja
mov
pushw
lods
and
pop
inc
sbb
inc
pop
test
add
ja
jae
outs
mov
das
cmp
mov
inc
pushf
aaa
pop
out
je
push
rol
push
adc
cmp
sbb
out
and
mov
rcr
push
mov
push
mov
pop
jmp
call
push
in
scas
push
dec
mov
stc
pop
ins
mov
mov
arpl
fnstcw
pop
dec
call
movs
jbe
aas
inc
mov
mov
mov
mov
out
arpl
and
pop
mov
gs
pop
xor
sar
frstor
adc
pop
cwde
retf
cmps
and
fistp
jge
xor
push
sar
int3
mov
sbb
sbb
call
sbb
and
sysexit
push
dec
dec
push
add
mov
loop
(bad)
cli
push
test
aaa
push
scas
aam
pop
ficom
push
xor
mov
push
test
push
mov
sub
inc
popa
and
lea
jg
adc
inc
xor
mov
jl
dec
stos
pop
dec
jmp
aaa
arpl
mov
add
or
jmp
sbb
inc
aaa
fnstenv
xchg
fiadd
sti
pop
push
push
mov
aad
pusha
test
pop
(bad)
sub
jb
or
(bad)
in
mov
mov
aaa
call
fs
leave
clc
cmp
sub
jg
xlat
add
mov
mov
mov
fcom
(bad)
fdivr
inc
ds
mov
dec
xor
xchg
or
jnp
mov
dec
push
push
fwait
pop
push
shr
stos
jmp
jno
arpl
sbb
std
aas
add
cdq
add
(bad)
ret
xchg
movs
fdiv
cwde
xchg
lock
(bad)
out
fld
sbb
outs
dec
or
retf
arpl
test
push
push
push
push
(bad)
mov
mov
mov
mov
shl
sbb
sbb
add
test
or
jmp
sub
sbb
in
jns
push
and
sub
pop
mov
scas
nop
pop
xor
xchg
lahf
adc
cld
fwait
lock
sub
mov
lds
les
movs
inc
int3
and
fnsave
mov
adc
xor
lock
aas
fidivr
clc
retf
mov
mov
cli
out
int3
addr16
push
xlat
sub
out
fxch
fscale
and
add
xchg
inc
jo
xchg
mov
push
(bad)
cmp
pushf
jp
cs
dec
adc
lea
xor
mov
dec
loop
cmps
push
fwait
arpl
xchg
(bad)
xor
ja
fcomp
cmp
push
test
add
or
dec
in
imul
ss
push
jp
dec
mov
lea
xchg
sbb
fwait
jp
lods
xlat
add
mov
xchg
leave
pop
mov
out
inc
(bad)
sbb
lods
dec
test
add
sbb
iret
adc
dec
data16
dec
mov
or
cmp
or
mov
shl
push
not
scas
sub
popf
sub
cmp
mov
rcl
fldcw
xchg
push
xor
jl
push
test
lods
xor
fisttp
pop
mov
stc
mov
out
js
fdivr
(bad)
ins
lods
add
rcl
mov
sti
push
outs
xor
pop
mov
xlat
aad
cmp
push
movs
mov
int3
xchg
sbb
add
or
inc
shl
movs
dec
adc
lea
push
add
div
jmp
sbb
mov
in
fcom
retf
cwde
cdq
enter
add
and
aas
mov
ret
mov
hlt
adc
nop
popa
popf
sbb
cmps
dec
lea
arpl
dec
and
mov
jg
fild
jecxz
and
add
or
cmp
pop
ins
xchg
cmp
std
sub
sbb
outs
jae
dec
and
fmul
pop
cmps
xchg
fsubr
inc
mov
and
xor
jg
js
jae
test
mov
inc
and
add
push
jecxz
xchg
and
les
mov
pop
aad
cmp
leave
leave
xor
pop
dec
mov
movs
neg
and
push
lock
cmp
ss
aaa
mov
(bad)
sbb
push
mov
iret
sbb
mov
shr
sub
retf
add
push
or
mov
add
cmc
(bad)
test
loop
or
pop
pop
push
fs
mov
sti
fnstsw
dec
adc
nop
pop
adc
add
jne
test
cmc
adc
idiv
xchg
cmp
push
jo
popa
lds
fs
push
stos
cs
xor
push
adc
test
push
add
adc
loopne
jmp
mov
ror
dec
mov
out
cmps
(bad)
int
ret
ss
fxch
neg
not
and
fs
aad
ja
dec
jle
scas
push
dec
xchg
lods
sbb
test
sbb
(bad)
(bad)
(bad)
jnp
and
lahf
test
pusha
lods
add
and
dec
les
xchg
cmp
lahf
das
push
test
cmps
mov
fst
pop
xor
mov
retf
nop
jb
aam
shl
dec
adc
scas
ins
sahf
adc
add
leave
cmps
dec
pop
call
mov
pop
cs
iret
int3
add
dec
ret
ficom
jmp
pop
aam
pop
arpl
xchg
imul
clc
test
cli
xchg
pushf
out
cmps
dec
(bad)
mov
and
cmp
lds
jmp
jnp
push
mov
pop
sub
out
pop
dec
lods
out
push
or
test
push
movs
test
ins
dec
dec
or
not
push
jp
(bad)
mov
fisubr
cdq
ins
ja
out
xchg
mov
aaa
sub
repnz
arpl
push
cmp
inc
cdq
iret
mov
cwde
adc
fnsave
loop
mov
sub
(bad)
outs
lock
add
lahf
cs
ret
fstp
jle
in
ja
cs
dec
jp
jl
into
inc
or
pop
pushf
(bad)
adc
ds
outs
ror
adc
in
out
fbstp
xchg
(bad)
sub
jg
int
mov
out
fs
push
or
pusha
cmp
dec
inc
dec
cmp
test
je
(bad)
mov
out
inc
jge
mov
inc
fs
push
rcr
hlt
or
xor
inc
sub
in
mov
cmp
nop
aam
sbb
int3
loopne
pop
rcr
sbb
pop
enter
dec
fstp
pop
pusha
sub
aas
(bad)
push
mov
push
das
and
push
inc
in
pop
xchg
cmp
xlat
cmp
ja
shl
int3
fcmovnbe
iret
cmps
sub
xchg
xor
ror
ds
fs
jmp
mov
neg
adc
cmp
inc
xor
or
and
(bad)
push
inc
jno
cs
cdq
mov
das
sti
xor
test
mov
jo
popf
out
adc
(bad)
cdq
rcl
retf
xor
jmp
inc
mov
arpl
aam
fbstp
cmp
adc
pop
dec
and
adc
pushf
ret
xchg
enter
jmp
loop
adc
mov
aam
out
push
sbb
lods
push
push
cli
xor
popa
(bad)
cmp
push
in
sbb
not
shr
dec
mov
int
push
sti
std
imul
mov
or
test
cmp
ss
pop
cmp
in
add
lock
pop
std
and
jmp
(bad)
xchg
push
mov
test
cmp
mov
(bad)
sbb
cmp
dec
clc
lods
and
cs
and
pop
push
mov
ret
dec
(bad)
sti
neg
jb
jle
ja
jecxz
les
mov
cmp
outs
xchg
js
mov
rcpps
lea
lods
mov
dec
sbb
hlt
jno
mov
or
adc
mov
add
inc
aam
and
inc
aas
or
mov
test
rol
dec
mov
pop
(bad)
push
or
rol
sar
gs
out
loop
add
fisttp
int
pop
ins
sbb
mov
dec
dec
xchg
add
mov
addr16
test
jo
mov
pop
dec
add
mov
xchg
ins
mov
inc
lea
aaa
inc
mov
ins
push
pop
test
stc
adc
adc
inc
adc
pop
popf
ds
or
inc
pop
cli
repz
fsubr
repnz
dec
les
push
clc
inc
xor
cmp
mov
pop
std
mov
stos
repnz
inc
mov
cwde
push
xor
dec
fcomp
lock
adc
mov
jae
push
add
ret
aas
aam
add
lock
cld
lds
cdq
xlat
sub
mov
cmps
test
jo
pushf
lock
jae
pushf
fistp
rcr
mov
hlt
push
jl
xchg
rcr
(bad)
lahf
pop
enter
retf
xor
cmp
adc
call
pop
enter
nop
(bad)
sub
jo
shl
std
add
inc
add
jb
fcomp
imul
mov
sub
jo
rcr
jmp
leave
nop
xchg
std
push
dec
clc
jne
cmp
ds
or
arpl
cmp
div
ret
mov
inc
mov
fadd
nop
in
popa
(bad)
add
pop
mov
pop
(bad)
in
push
leave
add
inc
fdiv
retf
push
sbb
rcl
ins
into
nop
stc
xor
mov
cmps
dec
cs
inc
dec
ins
pop
push
xor
pop
adc
mov
mov
adc
enter
rol
mov
rol
sbb
nop
out
fcmovbe
fild
test
nop
lods
xchg
cld
in
mov
inc
out
or
add
cmp
cwde
lock
push
cmps
loopne
xor
sbb
ins
add
inc
jecxz
jne
mov
push
sub
xchg
jo
ins
clc
loope
mov
mov
mov
out
jmp
fstp
loop
pop
fwait
leave
adc
and
or
ja
mov
(bad)
sbb
pop
mov
sbb
in
out
fdiv
jnp
xor
mov
mov
inc
mov
jns
fwait
push
mov
repnz
or
stos
cdq
pop
sbb
jge
stos
sbb
xchg
icebp
ds
int3
jae
(bad)
jecxz
inc
cmp
and
cmovnp
addr16
repz
enter
cld
mov
sbb
mov
push
(bad)
push
adc
(bad)
out
and
add
ja
fiadd
mov
pop
jno
popf
cmp
arpl
dec
or
rol
out
mov
jnp
aam
and
xor
mov
pop
and
icebp
pop
aad
out
mov
nop
sbb
adc
retf
or
hlt
repnz
or
das
pop
hlt
cwde
stos
push
lea
adc
ret
cdq
add
cmp
and
pop
gs
adc
stc
xor
out
out
dec
jge
push
sub
(bad)
imul
rcr
pop
xchg
(bad)
mov
push
adc
push
add
mov
std
sahf
cmp
mov
mov
cmp
mov
les
mov
into
scas
arpl
sbb
rcr
aam
pop
ins
sbb
xchg
pop
or
(bad)
test
jl
xchg
mov
call
aad
jle
mov
daa
sbb
call
(bad)
rcl
dec
call
mov
out
push
in
adc
jno
pop
push
adc
mov
jle
sbb
pop
sub
ret
daa
pop
hlt
icebp
cmp
pop
mov
repnz
scas
movs
jno
(bad)
fs
mul
cmpxchg
mov
loope
int
xor
cmp
aam
dec
(bad)
push
pop
and
lea
icebp
js
jns
ret
xor
je
scas
and
(bad)
fst
xlat
cld
call
sbb
and
scas
xor
push
push
int3
(bad)
jp
push
mov
mov
pop
(bad)
or
push
sub
cmp
jo
adc
mov
mov
mov
ja
fs
cmp
(bad)
push
sbb
cs
or
mov
push
dec
cdq
dec
leave
jbe
push
xchg
pop
cmp
cs
iret
ret
sbb
loop
int3
push
fld
xchg
mov
js
inc
pop
sub
cmps
push
adc
push
and
and
sbb
sbb
nop
hlt
cmp
fincstp
push
adc
adc
cmp
mov
lods
out
mov
cmp
xchg
iret
inc
mov
or
pop
call
ins
sbb
adc
jge
sbb
dec
adc
fwait
inc
xor
imul
sub
shr
mov
ror
and
out
mov
sub
pop
jb
mov
or
inc
fwait
adc
sbb
pop
push
cmc
xchg
mov
add
lahf
push
ds
adc
(bad)
rcl
or
scas
xchg
and
cmps
sub
call
pop
sub
iret
mov
jae
scas
icebp
scas
(bad)
xchg
cli
sar
mov
adc
push
arpl
and
sub
sahf
mul
call
or
(bad)
fcmovne
mov
sub
add
jp
xchg
adc
or
xchg
and
imul
xor
inc
pop
jmp
loop
push
aam
push
sbb
mov
loopne
sbb
out
adc
sub
rcr
addr16
data16
test
dec
in
aam
add
sub
pop
inc
mov
stos
mov
jae
xor
call
inc
lods
inc
push
mov
pop
(bad)
add
mov
rcr
lds
sbb
ret
js
call
add
fidivr
mov
test
lods
hlt
jmp
ds
lds
cli
and
pop
ret
int3
gs
xor
dec
fcom
out
loope
jp
js
xchg
sbb
cmp
scas
push
jl
xchg
xchg
xchg
cdq
mov
pop
lea
ret
fsub
adc
ret
outs
ins
in
inc
repnz
pop
xchg
fnsetpm(287
int3
jge
push
outs
add
ror
sub
jae
and
add
sub
push
jp
cmps
mov
jl
fs
cs
and
out
enter
push
nop
pop
pop
sbb
ja
add
add
sub
fcmovnbe
mov
(bad)
adc
sbb
stc
mov
into
out
jbe
xchg
adc
jecxz
popfw
or
mov
mov
mov
shl
int3
js
call
or
ja
(bad)
pop
out
mov
pop
retf
add
fistp
push
gs
jmp
test
aad
std
mov
inc
pushf
pop
and
jmp
outs
jne
aad
jne
jmp
xor
mov
sbb
sbb
or
paddq
retf
or
adc
push
fs
cmp
mul
add
push
ss
pushf
movs
and
push
ss
jbe
jl
cmp
lahf
pop
sbb
sub
mov
fmul
lods
ss
push
neg
sbb
dec
call
adc
add
(bad)
fld
jbe
pop
push
int
adc
xchg
in
jmp
cs
gs
add
aam
inc
xlat
cmps
pop
jns
cmp
sahf
xchg
inc
sahf
inc
clc
test
dec
daa
sar
retf
(bad)
cmc
add
push
mov
jbe
add
pop
and
add
jae
shl
sbb
int
stos
mov
mov
xchg
mov
daa
dec
jmp
add
or
jmp
pop
fiadd
retf
xchg
push
lds
add
pushf
or
in
rcr
pop
sti
adc
inc
fst
mov
dec
pop
fdivp
pop
adc
mov
and
inc
dec
shrd
stos
les
cli
sar
add
mov
sub
test
sub
dec
loope
rcr
cwde
fnstsw
ds
fnstenv
sbb
xor
pop
sub
aad
sub
fcmovnu
inc
pop
xchg
mov
lds
adc
pop
cmps
aad
cmp
adc
mov
mov
div
aaa
push
inc
dec
outs
pop
push
rol
xchg
pop
sub
inc
mov
(bad)
sbb
jle
mov
cld
sub
inc
pop
inc
mov
dec
push
adc
xchg
pushf
ds
xor
adc
out
popf
pop
sub
rol
(bad)
adc
out
push
loopne
in
daa
sar
mov
ins
repz
ja
inc
mov
test
adc
inc
js
(bad)
push
and
ja
mov
les
outs
adc
loope
fcmovnb
add
jmp
mov
jmp
ins
(bad)
xor
ds
clc
add
movs
(bad)
rcr
pop
dec
mov
movs
test
push
aad
int3
(bad)
xor
push
lock
test
mov
stos
call
retf
and
xchg
xor
push
dec
inc
sar
jae
dec
arpl
cmps
fcmovbe
sbb
pop
xchg
push
jmp
or
stos
in
mov
fcomp
xor
xor
dec
inc
shl
xlat
sahf
out
loop
enter
gs
jnp
mov
addr16
test
or
(bad)
aad
push
jb
scas
xlat
mov
fimul
push
ins
std
mov
xchg
dec
mov
adc
shr
enter
movs
dec
add
xlat
(bad)
mov
ss
pushf
ret
(bad)
jmp
inc
push
mov
xchg
jne
and
jecxz
(bad)
mov
fbld
mov
or
stc
pop
aas
mov
lahf
xor
push
popf
(bad)
jmp
inc
or
cwde
mov
in
gs
pop
pushf
ins
jg
or
repz
and
dec
cmps
loope
les
jmp
pusha
jbe
xlat
cmp
(bad)
pop
loop
lds
mov
and
inc
lods
and
(bad)
das
xor
sbb
std
jge
mov
test
stc
lea
popa
fdiv
push
or
jp
fcomp
jmp
pusha
stos
and
lods
lods
add
mov
or
mov
ins
mov
out
and
inc
xchg
ficomp
mov
pushf
dec
or
jmp
les
shl
and
dec
jnp
stc
mov
shr
mov
sbb
add
cmp
pop
pop
xchg
out
scas
lock
(bad)
xchg
fsubr
adc
adc
dec
sbb
(bad)
or
fdivr
mov
pop
aaa
xchg
iret
ja
and
mov
popa
mov
push
add
call
test
pop
cli
in
add
jg
push
dec
out
test
xchg
pop
icebp
adc
fs
sbb
add
add
ds
xchg
aam
out
and
and
pop
popa
jno
sbb
add
mov
xor
cmps
test
mov
cmps
and
jno
sub
sbb
cmp
pop
jecxz
out
mov
mov
outs
aam
cdq
outs
mov
jno
fdiv
xchg
wbinvd
fisubr
pop
inc
movs
sysexit
jmp
(bad)
or
mov
jl
cmc
into
out
fstp
push
in
xor
cmc
stos
add
ret
pop
sub
jle
adc
rcl
xchg
adc
loop
lahf
addr16
out
lds
pop
add
xchg
xchg
xor
cmp
sub
push
mov
jmp
imul
pop
mov
aad
imul
cmps
add
fnstsw
into
pushf
test
xchg
(bad)
push
ins
jl
push
fisubr
into
pushf
and
push
repz
add
out
out
adc
sbb
adc
add
adc
jp
retf
sbb
mov
sahf
pop
inc
mov
enter
scas
xchg
xor
jge
cwde
add
int3
mov
push
(bad)
push
push
stos
sub
clc
icebp
enter
(bad)
ins
xor
jmp
jno
lock
pop
ror
adc
cmp
fwait
pop
mov
or
movs
cmp
sbb
push
js
cmc
or
stc
loope
sar
in
stos
in
add
mov
inc
out
das
cmc
xchg
inc
and
dec
cli
mov
jl
push
pop
data16
test
in
ret
inc
and
push
adc
jae
test
call
in
push
mov
inc
fadd
js
stos
jecxz
aad
jp
mov
sub
jnp
adc
inc
call
or
cmp
add
arpl
pop
push
and
dec
mov
xchg
mov
adc
cdq
fidivr
cmc
dec
add
nop
out
jne
retf
push
ja
mov
mov
scas
jmp
fwait
cld
loop
out
sub
pushf
xor
and
mov
mov
cmps
sbb
xlat
cs
(bad)
mov
aam
sub
iret
fwait
shl
aam
jmp
pop
sti
daa
int3
push
sbb
loope
cmp
push
mov
into
mov
fcomp
push
xor
cmp
xchg
mov
jle
and
fld
push
push
sbb
xchg
push
mov
dec
loopne
pop
ins
clc
icebp
sbb
dec
push
adc
xchg
cmp
jmp
sub
mov
lds
jmp
movs
jl
push
stos
aaa
push
je
lahf
loopne
jecxz
mov
(bad)
jmp
push
mov
dec
sub
test
sar
cmp
mov
ja
stos
gs
lahf
push
mov
jmp
pop
in
pushf
jge
mov
jbe
cmp
in
add
int3
adc
mov
cdq
mov
jge
mov
push
aaa
enter
popa
int3
out
dec
pop
add
mov
inc
gs
sbb
out
ret
pop
xor
dec
fwait
cmp
(bad)
mov
ins
test
inc
push
(bad)
push
ss
in
fdivr
sbb
push
dec
fdivr
push
loope
scas
and
inc
fst
pop
mov
xchg
inc
push
cld
aam
xchg
inc
push
leave
inc
mov
mov
dec
movs
jg
mov
(bad)
mov
xchg
add
nop
mov
loope
mov
xchg
pop
xchg
sbb
pop
ficomp
pop
fcomi
push
mov
sub
leave
and
ficom
pop
retf
and
dec
dec
ins
call
fcmovnb
xor
ins
addr16
sbb
arpl
(bad)
mov
or
clc
pop
(bad)
ror
add
add
(bad)
jae
jo
pop
mov
jne
xchg
icebp
xchg
dec
and
sahf
xchg
cld
mov
pop
inc
sbb
xchg
sub
ja
imul
sbb
or
les
mov
ins
push
dec
fadd
sub
and
pop
das
jge
popf
add
mov
mov
pop
xchg
mov
sbb
das
xor
lahf
sub
fild
out
inc
icebp
addr16
inc
push
cmp
xchg
das
dec
dec
add
mov
pop
push
(bad)
popf
sbb
ins
xchg
cmp
lock
or
adc
mov
mov
and
inc
jmp
lahf
xchg
sbb
fldenv
inc
dec
neg
jle
fild
movs
rcr
retf
mov
xchg
inc
xchg
mov
sub
mov
dec
inc
jge
pop
cmc
scas
scas
pop
xor
(bad)
pop
and
sbb
jecxz
gs
pop
mov
out
ror
pushf
push
lahf
sub
loopne
cdq
aaa
cmp
and
fcomp
in
xor
outs
repz
push
or
js
push
mov
std
push
addr16
dec
push
sahf
out
loopne
scas
mov
cs
mov
(bad)
add
dec
mov
hlt
pushf
jp
not
push
mov
mov
mov
cmp
imul
add
sub
adc
push
outs
mov
test
push
iret
jnp
xchg
pushf
xor
mov
mov
addr16
sbb
xor
jb
fistp
dec
pusha
imul
adc
pop
lods
loop
rol
inc
lahf
ins
test
jmp
dec
jne
mov
push
hlt
repz
es
ror
fld
repnz
cwde
jnp
ret
std
es
push
es
jne
int3
stos
cs
pop
push
mov
fist
mov
aaa
sar
cmp
(bad)
sbb
ss
lods
jge
lock
mov
fld
shl
jecxz
outs
mov
int3
and
rcl
and
iret
ret
mov
sub
cdq
or
addr16
dec
pushf
pop
push
pop
mov
xchg
xchg
push
ins
movs
cvtps2pd
sbb
cmp
push
sbb
fstp
fcomp
daa
pop
sbb
xor
cmp
daa
shr
scas
lahf
out
into
das
mov
pop
pop
jl
adc
ins
cmp
push
cmp
add
dec
or
adc
cmps
push
loop
(bad)
push
mov
jle
sbb
cdq
jmp
stos
push
inc
jnp
cwde
xor
sti
clc
ror
mov
sbb
mov
lahf
adc
stos
mov
mov
imul
rcr
inc
test
dec
mov
aaa
adc
lds
xor
sbb
fimul
push
and
pop
test
inc
xor
cmps
bnd
sub
or
dec
cmp
add
mov
lods
fldcw
sbb
out
and
(bad)
and
aas
mov
loopne
xchg
adc
leave
iret
fst
and
std
(bad)
push
pop
out
pop
pop
test
jmp
icebp
push
fstp
shr
push
arpl
scas
cmps
cmp
fist
sub
dec
jmp
mov
ret
scas
inc
int
push
sbb
xchg
movs
cmp
add
int
fdivp
mov
ror
push
cdq
sbb
inc
push
(bad)
mov
pusha
push
sub
fistp
adc
mov
icebp
mov
mov
jg
mov
cmc
xchg
add
push
dec
or
adc
mov
add
fsub
mov
and
js
inc
scas
xchg
xchg
push
dec
mov
mov
lea
jmp
sbb
nop
aas
dec
jmp
shl
ins
xchg
dec
mov
xor
mov
mov
xor
sub
adc
xchg
jns
jmp
xchg
pop
add
dec
ret
mov
rol
jecxz
out
mov
cmp
mov
icebp
jle
or
sbb
cmp
gs
xchg
pop
lock
int3
dec
(bad)
sbb
dec
sub
test
adc
aam
pushf
shl
mov
mov
and
mov
push
test
and
pop
sbb
push
sub
stos
loope
or
outs
push
xlat
sub
cmp
or
pop
test
jns
add
test
mov
dec
shr
aad
dec
ins
ficom
ss
es
jge
sbb
icebp
fnstcw
pop
call
cmps
sub
add
pop
cmp
sub
lea
pop
enter
out
sar
pushf
xchg
sub
mov
js
inc
sbb
enter
movs
jno
test
in
sub
leave
je
adc
mov
leave
test
mov
imul
cwde
jns
cmp
mov
ins
xor
stc
inc
sub
fnstenv
cmp
fisub
add
add
inc
clc
les
jo
push
and
push
aam
sbb
or
fnstsw
xchg
(bad)
cmp
pop
mov
jo
inc
mov
jbe
fmul
inc
xor
loop
cmps
sbb
push
shl
xor
push
mov
daa
sbb
cmp
add
xor
js
jl
cdq
mov
xchg
mov
mov
ja
pushf
mov
mov
test
repnz
add
pushf
xchg
lahf
shl
cmps
loop
mov
cmp
cmp
inc
pop
cwde
in
adc
pop
stos
jbe
jp
movs
rcr
and
inc
xchg
xor
xchg
test
sti
mov
jg
xor
jne
add
(bad)
fsub
cmp
scas
pop
jmp
push
in
test
stos
ja
shr
sbb
cmps
mov
pop
addr16
adc
pop
lods
jecxz
jmp
adc
mov
out
fcomp
xchg
mov
js
ja
mov
pop
jae
mov
mov
jmp
jle
pop
push
add
dec
add
jae
dec
shrd
push
pop
inc
dec
sbb
mov
fmul
pop
mov
mov
inc
mov
add
mov
sub
loopne
das
(bad)
call
push
out
xchg
in
out
cmp
or
test
add
or
ret
adc
(bad)
pop
fwait
xchg
xor
xchg
and
xchg
ins
(bad)
(bad)
lock
push
pop
(bad)
pop
icebp
jg
dec
pop
mov
and
jmp
lock
jle
call
xor
test
push
mov
adc
and
in
hlt
call
test
mov
push
cs
cmps
loopne
clc
mov
mov
cmp
je
in
xor
aam
pop
cmp
push
int3
imul
cmc
pop
in
cdq
add
dec
push
mov
adc
push
iret
inc
push
cwde
mov
daa
dec
ins
push
xchg
push
out
cs
add
mov
pop
imul
mov
xchg
mov
push
jmp
cmp
ret
popf
fwait
ja
sub
addr16
fst
sbb
sbb
ret
dec
adc
jne
in
aas
pop
ror
and
pop
stc
push
sbb
mov
rol
in
inc
lea
mov
shl
stc
rcl
adc
dec
in
dec
addr16
repz
add
mov
test
add
cmp
dec
push
movs
mov
dec
xchg
xchg
stos
sbb
jne
inc
in
push
or
cmp
ds
in
and
(bad)
sar
jno
std
dec
lea
sbb
mov
leave
xor
fisubr
int3
xor
(bad)
aam
test
aam
push
out
jbe
mov
pop
(bad)
xchg
and
pop
mov
loope
sahf
sti
xchg
dec
push
push
scas
in
dec
rol
into
in
add
ins
mov
sub
pushf
sbb
cmps
test
call
aad
ins
pushf
iret
inc
outs
popf
(bad)
adc
js
xchg
dec
lods
adc
popa
imul
out
xchg
mov
neg
(bad)
jnp
mov
cmp
sbb
retf
and
push
push
int3
sbb
pop
jmp
hlt
(bad)
cmp
int3
push
add
aam
xchg
aad
jge
mov
(bad)
aam
(bad)
push
lock
fcmovnbe
push
push
sub
lea
repz
adc
pop
ret
imul
dec
inc
fwait
or
jg
mov
xchg
push
fcom
sub
div
cmp
inc
mov
out
push
psubusb
imul
jg
sub
cmps
dec
into
mov
out
sbb
sbb
retf
xlat
pushf
dec
pop
dec
mul
stos
ds
inc
mov
retf
iret
call
out
dec
mov
dec
cwde
call
dec
push
mov
push
and
pop
retf
push
aad
fwait
jge
sahf
mov
inc
pop
out
or
stos
sub
(bad)
lods
or
mov
mov
dec
jno
popf
sub
ins
mov
test
dec
int3
fistp
fisubr
dec
pushf
ja
jno
(bad)
mov
dec
pushf
jne
mov
mov
rcr
push
jecxz
add
stc
loop
hlt
sub
mov
repnz
ret
loopne
scas
dec
fcom
mov
mov
std
hlt
aas
pop
ret
cmp
inc
pop
xor
pop
les
inc
push
ins
in
and
cmp
push
push
and
push
pop
jbe
add
(bad)
arpl
xchg
ins
fbld
mov
xchg
jg
out
lock
(bad)
xor
repz
xchg
test
pop
inc
(bad)
sti
int
lock
or
mov
xchg
call
mov
xchg
shl
dec
pop
loope
jp
(bad)
fwait
ds
test
call
lock
hlt
dec
fwait
fs
or
jmp
loop
pushf
mov
(bad)
xchg
jge
out
popf
pop
sub
sbb
dec
sar
push
add
dec
jno
lods
in
mov
clc
sbb
or
cmp
and
cdq
adc
les
pop
pmuludq
(bad)
jge
mov
fbstp
dec
and
jp
add
je
retf
mov
jns
fcmovnbe
jge
shl
add
jge
xchg
mov
std
mov
mov
xlat
test
movs
lods
mov
mov
(bad)
jmp
push
(bad)
stc
movs
dec
inc
lock
push
xor
mov
ror
fstp
popa
pop
push
pop
imul
xchg
cmp
imul
push
inc
adc
pop
ret
daa
inc
int3
add
mov
adc
popf
sub
cmp
repz
retf
mov
imul
call
lds
dec
inc
add
cmp
icebp
test
ror
das
idiv
cmp
ins
mov
xchg
mov
xor
cli
xchg
or
push
(bad)
int
xchg
cmc
adc
adc
lock
adc
(bad)
fbstp
pop
dec
lods
(bad)
and
rcl
push
cs
add
cmp
cmp
les
call
pop
je
mov
mov
inc
push
aas
mov
or
xchg
pop
add
dec
sub
jae
lahf
loop
dec
mov
call
(bad)
mov
push
ret
cmps
xchg
ror
cmp
enter
inc
xchg
sbb
sub
fs
sbb
lods
daa
inc
jae
jbe
sbb
push
aam
lds
into
aam
sbb
dec
(bad)
in
ins
into
jbe
cmp
ins
mov
add
mov
mov
xchg
cdq
das
xor
test
pop
mov
ret
pop
enter
imul
sti
xchg
push
inc
sti
inc
pushf
jb
lock
daa
adc
dec
mov
jmp
cmps
mov
fst
cmp
sbb
or
xchg
pop
popf
cmc
mov
push
imul
loope
nop
add
cwde
jmp
iret
pop
xchg
imul
ror
loop
pop
lahf
je
xor
pop
rcl
(bad)
cmp
loope
push
add
test
(bad)
ja
mov
arpl
push
mov
pushf
pop
cmp
cmp
or
or
xor
mov
bt
cmp
pop
jg
jae
(bad)
dec
fmul
pushf
ss
push
sbb
sbb
dec
sbb
pop
dec
adc
sub
out
iret
gs
mov
test
jo
push
outs
pop
cdq
adc
mov
inc
enter
dec
retf
inc
jmp
je
cmp
push
jl
aaa
sti
xor
mov
pop
stos
sbb
rcr
out
(bad)
and
(bad)
xchg
out
sbb
out
shr
pop
shl
sbb
fwait
mov
or
push
xchg
mov
push
ficom
and
and
and
sub
push
xchg
push
mov
jecxz
in
adc
lock
out
pop
(bad)
xor
jl
aam
pcmpgtd
pop
fld
into
add
push
sub
loopne
cmps
stos
inc
sub
hlt
mov
cmp
icebp
dec
je
cmp
fdivr
aaa
xor
inc
outs
xor
mov
or
or
adc
sbb
inc
sahf
shl
dec
ds
out
fdivr
addr16
push
lods
cmp
adc
xlat
xchg
je
stos
mov
fmul
or
sbb
fimul
ja
mov
or
push
or
cwde
arpl
sub
mov
xor
arpl
leave
xchg
bnd
(bad)
push
xchg
in
in
sub
fs
inc
int
mov
pop
add
mov
xchg
bound
ror
push
push
pusha
(bad)
mov
aaa
adc
dec
xor
leave
jns
pop
(bad)
in
imul
shl
pop
or
test
aad
outs
jg
add
push
sbb
fimul
lock
mov
cmc
mov
scas
std
jg
push
data16
inc
ror
sbb
test
addr16
sub
daa
ins
dec
test
retf
cmp
mov
adc
sub
addr16
or
xor
pop
aas
inc
xor
mov
cmps
mov
aaa
in
(bad)
cwde
push
inc
mov
adc
pop
pop
pusha
imul
adc
fisttp
loope
shr
xor
and
or
(bad)
int3
jno
add
inc
cwde
and
rcl
jae
aas
jmp
jbe
sahf
cmps
dec
mov
cdq
ret
out
clc
pushf
xchg
outs
scas
lock
aaa
and
retf
cmc
mov
fisttp
jno
test
sub
xchg
and
sbb
loopne
jnp
jb
push
dec
js
dec
pop
cmp
mov
fmul
rcl
shr
push
out
(bad)
or
out
fidiv
push
int3
pop
fwait
imul
sub
ror
sub
loopne
push
add
dec
movs
xchg
int3
xsaves
pop
dec
nop
push
xchg
xchg
rol
mov
push
into
mul
ins
sti
outs
jo
dec
sbb
loopne
mov
push
out
cmp
mov
inc
outs
sub
pop
(bad)
mov
ret
call
jp
lea
sub
jb
adc
mov
out
xor
mov
fsubr
and
inc
sbb
fcomp
or
mov
jno
pop
pop
push
(bad)
xor
aas
mov
mov
mov
dec
pop
pop
loop
test
add
fisttp
into
sbb
call
shl
pop
lock
loope
sbb
inc
xor
fwait
ja
(bad)
push
(bad)
mov
rol
out
dec
sbb
xchg
xchg
jnp
add
dec
test
sbb
mov
mov
jo
add
sub
mov
(bad)
je
arpl
movs
sbb
dec
outs
pop
mov
idiv
call
pop
inc
jnp
retf
pop
xchg
add
inc
fst
or
cdq
xor
lahf
dec
push
rcl
mov
xor
lds
mul
stc
les
ficom
push
inc
fstp
shr
ror
mov
push
cli
into
and
add
mov
push
jne
mov
daa
cmps
in
icebp
inc
test
ret
jae
adc
mov
pop
and
aaa
ror
cld
or
cmp
jae
mov
rcl
jnp
and
push
pop
into
lahf
mov
ds
imul
xchg
scas
jmp
mov
adc
popf
mov
rol
lock
(bad)
popa
pop
in
xchg
xor
or
sub
or
sbb
fidivr
fwait
mov
movs
jae
jg
jp
fsubr
cmp
mov
jae
xchg
daa
lods
sbb
mov
xor
push
xchg
in
in
push
jne
cmp
inc
out
dec
stc
mov
iret
jns
inc
out
test
fstp
fimul
sub
ret
fstp
loope
fst
inc
lods
mov
inc
xchg
inc
jns
mov
mov
shl
ds
jecxz
dec
hlt
push
push
lock
pop
dec
loope
lods
scas
mov
cmps
pop
sub
adc
xor
lds
int3
arpl
mov
ficomp
fdivrp
cmp
addr16
cmp
fist
push
xchg
mov
mov
ja
repz
int
pop
fadd
rcr
or
inc
outs
mov
jge
jle
pop
pop
outs
(bad)
js
ss
(bad)
dec
sbb
xchg
sbb
mov
mov
(bad)
aad
sar
lahf
stos
(bad)
adc
jle
stc
data16
arpl
mov
out
test
adc
ins
mov
mov
mov
mov
in
add
test
jl
cld
pop
test
xlat
jmp
inc
test
jecxz
dec
mov
push
outs
fwait
retf
xchg
pop
cmp
mov
mov
jno
mov
dec
aam
out
cmp
sbb
xor
xor
mov
or
rol
dec
dec
adc
cmp
xor
ret
mov
xor
pop
int
xchg
es
out
pushf
sbb
cs
sbb
mov
imul
nop
jmp
push
inc
scas
lahf
and
adc
mov
jecxz
mov
jmp
jg
(bad)
dec
cmp
cmp
sbb
or
jge
pushf
arpl
pusha
sub
mov
and
sub
inc
stos
xchg
out
mov
dec
rsqrtps
ja
int3
and
jge
push
shl
push
test
pop
pop
inc
jno
cmp
aaa
cmp
mov
shl
mov
sti
bsf
xor
inc
mov
rep
neg
(bad)
xchg
push
pushf
push
pop
(bad)
sbb
mov
push
push
stos
in
jl
shl
nop
(bad)
fcomp
lods
cmp
mov
push
jae
mov
inc
xchg
pop
cdq
js
mov
sub
stc
cdq
mov
(bad)
adc
test
jae
or
aas
test
mov
mov
js
mov
jl
xor
lods
lods
pop
mov
mov
jge
push
aad
loopne
es
mov
sti
or
sahf
lods
paddq
out
jbe
mov
jge
xlat
fmul
dec
(bad)
stc
add
mov
movs
xor
inc
scas
xchg
test
dec
xor
mov
test
lock
icebp
dec
or
rcl
das
inc
test
shr
retf
adc
jmp
push
jns
sar
loop
mov
call
push
fidiv
mov
push
pop
add
add
(bad)
pop
(bad)
ror
and
fistp
or
mov
fadd
jl
lock
lds
push
pushf
sbb
in
lahf
xchg
retf
inc
ss
sti
or
mov
add
test
add
in
dec
pop
aaa
(bad)
mov
mov
jo
mov
loop
repnz
stos
mov
dec
aaa
inc
shr
push
aas
lods
jle
ja
and
imul
mov
(bad)
fisttp
mov
mov
pushf
test
xchg
xchg
add
jg
push
dec
jno
or
js
test
addr16
aas
cdq
arpl
adc
fld
dec
fisttp
sahf
or
arpl
xor
push
sub
(bad)
jp
cmp
out
pusha
sub
inc
dec
mov
xchg
shl
dec
sub
ins
or
(bad)
and
pop
mov
push
mov
enter
add
fild
cdq
xor
nop
inc
daa
pop
mov
fwait
pop
or
mov
pushf
cdq
aam
jge
ja
in
jbe
adc
add
and
sub
push
(bad)
pop
inc
ja
test
adc
jae
fwait
dec
jmp
xchg
xchg
mov
sub
retf
jge
cmps
adc
sbb
shl
mov
mov
inc
jb
fcom
xor
or
fucom
dec
pushf
and
add
sbb
lock
movs
push
out
enter
fnstsw
push
sub
dec
rcr
into
adc
aad
jge
dec
test
lock
dec
pop
aam
mov
pop
jo
popf
adc
(bad)
xchg
addr16
shr
dec
or
jnp
in
inc
hlt
test
stos
add
in
mov
and
mov
dec
sbb
adc
shr
inc
xchg
lock
aad
cmps
mov
(bad)
mov
jmp
mov
mul
fmul
or
into
mov
mov
xor
(bad)
hlt
loopne
fimul
cli
push
mov
sub
sub
imul
mov
sbb
ficomp
jge
sahf
mov
mov
adc
idiv
fisubr
add
(bad)
pop
cmp
test
dec
nop
sub
rcr
dec
xor
rcl
gs
call
jg
(bad)
pop
and
(bad)
fwait
sub
mov
push
out
neg
push
mov
pop
pop
push
cmovp
adc
xchg
xor
rcl
push
test
pop
std
call
adc
add
inc
adc
int3
gs
mov
adc
xchg
loop
xchg
mov
imul
(bad)
icebp
into
scas
xor
fwait
shl
xchg
mov
(bad)
push
int3
jb
cmp
dec
add
iret
(bad)
loopne
inc
cmp
rol
clc
inc
and
push
dec
sbb
clc
addr16
xor
jb
test
add
popa
stos
neg
jl
popf
inc
dec
popf
xlat
cmps
in
out
mov
fimul
hlt
dec
call
inc
mov
popf
xor
push
aas
inc
sub
clc
loop
call
adc
aad
icebp
mov
xor
mov
lods
jno
neg
jl
mov
adc
inc
jg
mov
arpl
(bad)
mov
fsubp
inc
xchg
cwde
sbb
rcr
loop
clc
mov
js
fstp
(bad)
fld
std
jge
add
aas
adc
loopne
mov
pop
out
add
jbe
jbe
ins
loopne
mov
js
test
lahf
jmp
jnp
mov
mov
mov
dec
rcr
push
fcomip
jecxz
sahf
call
mov
ja
adc
sub
imul
sub
fdivr
jae
sub
xchg
xchg
sar
sub
loope
jge
iret
jmp
or
leave
push
es
mov
sub
xabort
sub
adc
push
cmp
push
fidiv
and
mov
jmp
mov
arpl
pop
jle
(bad)
push
fisttp
adc
cmp
in
jne
leave
mov
cmp
inc
inc
rol
xchg
mov
add
mov
xchg
mov
sahf
test
(bad)
sub
xor
mov
jmp
fwait
pop
push
mov
fdivr
ja
idiv
lahf
jae
sub
jns
jg
in
or
es
inc
xchg
data16
fisubr
sbb
lods
dec
(bad)
push
push
or
push
mov
(bad)
(bad)
push
xchg
ret
xor
pop
stos
cmp
sub
lock
loopne
xor
repnz
sahf
dec
mov
inc
pushf
fcmovbe
and
jae
out
and
mov
mov
cli
jmp
pusha
sub
push
sbb
dec
ss
fistp
dec
aaa
ret
sub
pop
add
add
ror
xchg
in
sub
jne
add
(bad)
cld
sub
sbb
xor
cdq
cmp
in
inc
jns
jmp
retf
mov
in
xchg
push
fs
mov
mov
sahf
push
ja
daa
xchg
push
ins
jle
ins
pushf
cmps
adc
mov
bound
mov
fmul
adc
xor
mov
call
fwait
add
scas
cmp
push
mov
out
int
mov
jmp
addr16
sbb
mov
(bad)
push
jp
xchg
xchg
fbld
xchg
dec
repnz
dec
xchg
jl
scas
iret
mov
dec
idiv
call
cs
dec
bound
int3
mov
mov
or
pop
sub
mov
ror
push
mov
pop
mov
and
enter
sahf
pop
inc
ss
mov
cwde
xchg
imul
sub
in
mov
arpl
dec
sub
jecxz
aad
repnz
movs
sbb
pop
fwait
push
mov
test
aam
(bad)
pop
(bad)
add
dec
ja
scas
sbb
add
mov
or
and
xor
dec
xor
imul
add
clc
xlat
mov
ret
ror
add
push
push
sbb
mov
rcr
jl
stc
add
cmc
ja
dec
test
jnp
(bad)
lea
or
das
cs
in
out
dec
pop
pop
xor
imul
pop
mov
inc
aas
lock
je
pop
jbe
mov
movs
add
jge
(bad)
popa
fild
push
cmp
inc
adc
push
fadd
loop
sbb
sbb
push
rdpmc
movs
gs
push
aam
mov
in
xchg
push
lods
arpl
mov
loopne
rol
int
mov
mul
aas
aad
fisttp
lods
je
xor
sbb
bound
in
sbb
dec
mov
sub
div
xchg
lods
aad
push
rcl
mov
adc
ss
sbb
cmps
test
jp
push
or
push
xchg
scas
not
jbe
xchg
call
push
or
dec
push
and
pshufw
sub
pop
int3
clc
sbb
cmp
pop
xchg
arpl
push
sbb
and
jne
fist
xor
mov
jg
xchg
mov
push
int
(bad)
repnz
cwde
or
or
rol
sbb
dec
fild
mov
leave
dec
ds
lahf
loop
mov
xor
mov
sub
push
push
lods
pop
push
addr16
clc
mov
loopne
pop
scas
add
(bad)
cdq
xlat
sub
jge
into
repnz
sub
popa
adc
(bad)
faddp
stc
xor
or
popa
outs
or
add
pusha
fdiv
dec
in
pop
mov
ja
mov
add
jmp
or
gs
div
into
mov
ds
mov
or
xchg
mov
xor
loopne
ja
pop
call
std
js
fcmove
pop
inc
dec
mov
inc
or
hlt
fimul
pop
inc
pushf
inc
adc
push
adc
sahf
push
adc
push
cmps
inc
movs
mov
lock
clc
pop
xor
sub
cli
mov
shl
pop
dec
or
mov
cmps
mov
in
ins
aad
jl
cmp
ret
and
repnz
loope
dec
xor
add
sub
cmc
cli
es
test
fcom
ds
and
iret
int3
test
sbb
aaa
addr16
in
push
mov
mov
push
lea
or
lods
stos
jp
data16
mov
shl
mov
jne
add
shr
and
enter
inc
jg
mov
addr16
arpl
arpl
cwde
rol
enter
add
inc
xchg
fcmovnb
or
mov
fisttp
xchg
cmps
in
test
push
sar
ficomp
lods
mov
and
mov
dec
dec
fistp
out
aam
add
sbb
ret
and
sbb
jp
and
lock
(bad)
aam
not
test
sbb
and
or
and
dec
push
pop
mov
dec
rcr
in
lock
adc
retf
pop
mov
(bad)
loopne
fwait
ret
jp
pop
rcr
jl
loopne
cld
jge
mov
push
cmp
push
inc
inc
fwait
les
(bad)
sub
sub
push
into
imul
mov
mov
retf
jmp
xchg
in
push
arpl
mov
add
fmul
push
out
loop
cwde
je
cwde
cmp
pusha
fstp
mov
push
pop
push
arpl
pmaxsw
popf
mov
pop
mul
dec
mov
aaa
mov
loopne
mov
jne
sar
daa
or
jae
sti
dec
mov
dec
or
cli
bound
push
cmp
cdq
xor
and
aam
fisub
(bad)
cld
dec
cmps
daa
pop
pop
cmp
fsubrp
aam
inc
fsub
fld
nop
sbb
(bad)
fldpi
push
(bad)
dec
vcmppd
into
mov
xchg
inc
sbb
int
addr16
xchg
cmp
rcr
sbb
loopne
push
pop
push
sbb
ins
lods
adc
push
in
int3
push
sub
repnz
fidiv
pop
(bad)
xor
dec
jmp
enter
mov
and
movs
dec
xchg
cs
inc
das
aad
in
fisubr
fs
ret
dec
jno
mov
jae
mov
push
push
pop
inc
shr
(bad)
fild
xor
test
stos
scas
(bad)
les
repz
loop
movs
mov
(bad)
adc
ja
out
push
pop
sahf
mov
push
sub
cmp
sbb
(bad)
pop
cdq
neg
dec
mov
add
gs
lea
add
cmps
mov
adc
pusha
jl
lods
ret
push
fstp
sahf
jmp
(bad)
ds
push
pop
test
mov
leave
aaa
adc
sbb
push
icebp
mov
sbb
(bad)
es
mov
or
mov
dec
and
les
push
sbb
outs
push
cmp
and
fild
add
ret
loope
pop
sbb
cs
adc
cmp
pusha
fs
int3
pop
stos
pushf
je
(bad)
mov
inc
sbb
push
leave
dec
iret
inc
movs
dec
adc
cmps
mov
mov
jnp
loope
loop
xchg
cmps
adc
pop
dec
cmp
or
mov
sbb
out
icebp
fist
and
mov
fcom
pop
or
inc
ds
or
pop
int3
pop
and
sub
sub
enter
pop
out
inc
adc
adc
push
mov
inc
fcomp
fsub
les
enter
add
cmp
movs
jbe
loop
std
ja
stos
push
cmp
icebp
pop
fbld
test
es
dec
jle
mov
inc
or
pop
bound
fcomp
xchg
dec
adc
shl
mov
cld
push
repz
js
not
(bad)
fimul
cmc
ins
lea
mov
icebp
mov
push
sbb
jno
sub
xchg
sbb
jge
pop
fwait
dec
dec
cmp
fs
repz
pop
xor
jae
bound
push
cdq
jne
aad
and
fwait
and
in
sbb
sub
inc
inc
push
xchg
adc
cmp
sbb
sub
mov
inc
jle
inc
movd
jb
pop
push
ror
or
hlt
sub
mov
sbb
lods
push
jge
adc
pop
outs
iret
sti
push
xlat
and
sbb
out
adc
and
ins
fadd
dec
lods
jo
dec
int3
pop
(bad)
out
je
in
cmps
sbb
clc
cdq
mov
ins
dec
cmp
sahf
adc
mov
jnp
xor
and
mov
jge
pop
pop
imul
add
mov
cmc
adc
loopne
addr16
test
inc
sbb
sub
cwde
adc
sbb
fild
clc
push
cli
mov
dec
rcl
push
loop
pop
sbb
dec
leave
push
push
pop
push
xchg
fstp
mov
mov
pop
sbb
aad
jno
pop
imul
sub
add
mov
push
pusha
sbb
cmp
fistp
std
pop
retf
mov
popa
push
iret
jnp
sbb
dec
ins
push
or
addr16
sti
div
sub
xor
mov
adc
loop
mov
pop
stc
jnp
pop
cs
cmp
(bad)
data16
mov
mov
shl
push
ja
cs
jbe
ins
pop
cmps
mov
inc
mov
loopne
aad
fild
pop
addr16
shl
push
mov
mov
xchg
adc
inc
fcomp
pop
ins
or
dec
sti
xchg
add
(bad)
and
ds
sub
fdiv
cmp
cld
jno
sbb
cwde
shr
pop
push
mov
push
mov
mov
pop
inc
add
xlat
mov
add
inc
lods
in
pop
mov
and
pop
dec
in
jb
or
push
mov
je
and
sub
test
movs
mov
fnclex
fld
sbb
mov
std
fcomp
movs
setbe
push
sub
mov
fdiv
xor
outs
push
xchg
adc
mov
js
or
pop
push
xchg
adc
(bad)
mov
xchg
push
xor
cmps
xor
jge
sub
ret
(bad)
jnp
mov
xlat
test
cdq
dec
push
repnz
cdq
inc
xlat
mov
xchg
arpl
adc
cmp
mov
xchg
cwde
ja
je
test
lock
mov
and
out
jmp
(bad)
jmp
sahf
mov
xchg
pop
ret
push
xlat
(bad)
push
mov
xor
jecxz
xor
mov
xchg
jp
mov
les
stc
ret
dec
andnps
jg
inc
sub
int
mov
outs
ins
pop
pop
mov
out
fstp
push
call
sbb
lahf
dec
mov
ins
mov
push
push
test
call
sub
(bad)
jbe
leave
stos
ret
lock
std
bound
mov
call
pop
xchg
push
push
jmp
jp
repz
inc
inc
shl
or
sbb
sahf
sub
xchg
push
xor
adc
not
call
adc
inc
aad
rcl
rol
dec
pop
sbb
sub
pushf
or
xchg
mov
fidiv
ficomp
cmp
cmp
pop
mov
scas
pop
xchg
repz
aam
adc
daa
jle
sub
aad
pop
int3
stos
mov
add
pop
xchg
pusha
mov
ds
lea
jmp
lock
push
sbb
enter
shl
daa
push
or
cmp
dec
enter
add
or
jnp
in
adc
xchg
cmp
xor
aam
and
push
mov
jge
and
stos
retf
xchg
mov
and
dec
push
movs
scas
sar
dec
push
mov
or
cmp
dec
pop
in
fcom
pushf
outs
jecxz
fndisi(8087
(bad)
push
add
movs
or
push
ds
xchg
mov
cmc
cmp
cmp
and
dec
inc
mov
fnstcw
add
push
into
and
push
(bad)
stos
popf
add
jle
(bad)
es
dec
fwait
scas
adc
pop
aad
push
push
es
xlat
mul
daa
int
pop
mov
or
movs
js
push
test
call
adc
sbb
sbb
sbb
push
in
jns
mov
or
sub
mov
jae
loope
popf
sbb
(bad)
adc
sbb
(bad)
adc
cmps
out
mov
data16
(bad)
cmc
dec
fadd
jge
inc
loopne
dec
daa
mov
ins
pushf
mov
pop
js
scas
jbe
jo
outs
dec
fisttp
(bad)
inc
push
xor
mov
xchg
sub
dec
mov
int3
call
in
scas
dec
sbb
fldz
out
push
aas
fidivr
inc
outs
out
js
ins
or
scas
xchg
sahf
inc
cmp
and
jmp
jbe
sbb
pop
mov
pushf
mov
xor
inc
cwde
push
and
je
scas
pop
out
sbb
cmp
or
test
aaa
xchg
push
and
pop
aam
add
int3
neg
out
jno
cmp
les
add
pop
xchg
and
xor
cmps
js
pop
xor
lock
scas
or
jl
lock
in
xor
in
cwde
pushf
mov
cmp
out
out
(bad)
adc
xor
(bad)
mov
outs
push
aaa
add
loop
or
push
adc
imul
dec
pop
scas
call
and
fiadd
scas
int
add
in
aad
push
addr16
retf
and
js
mov
cmc
xchg
shr
cmc
mov
mov
lds
sbb
cld
dec
sbb
ret
cmp
gs
xchg
sub
mov
retf
jno
das
adc
(bad)
xor
pop
push
adc
pop
add
mov
imul
aam
dec
add
mov
cmps
xchg
jmp
jl
mov
pushf
xchg
xor
ja
mov
js
dec
dec
pop
ds
jmp
clc
rcl
pop
dec
aam
mov
mov
(bad)
sub
stc
dec
sbb
sbb
or
dec
hlt
dec
retf
cs
sbb
rol
mov
call
mov
xor
(bad)
or
pop
sub
rcr
ds
addr16
and
dec
mov
in
push
les
lods
and
lods
mov
cmc
xor
sar
ja
jno
dec
pop
pop
and
sti
aad
push
push
ret
mov
cmc
stos
and
imul
and
pop
mov
push
cmp
or
push
or
pop
lock
mov
mov
mov
jecxz
and
xchg
cmp
push
mov
imul
das
in
xchg
das
dec
fld
add
sub
cld
dec
add
inc
pop
pextrw
xchg
scas
xor
sub
add
jg
xchg
cwde
sbb
dec
jmp
pop
push
cmps
jno
cmp
cdq
nop
std
push
fst
or
dec
out
xor
adc
pop
sti
and
sub
adc
(bad)
lea
paddusw
clc
xor
repnz
rol
fist
add
sbb
sbb
mov
or
js
dec
aam
jno
addr16
add
mov
sti
scas
lea
dec
xchg
inc
jecxz
dec
push
and
lea
pusha
or
lahf
outs
jmp
jns
mov
or
or
add
(bad)
cmp
mov
pop
xor
xchg
sub
and
into
mov
mov
test
cld
les
and
xchg
aaa
pop
imul
push
add
dec
mov
push
mov
adc
lahf
bound
shl
sbb
mov
mov
or
mov
repnz
sub
aaa
and
xor
aas
jo
dec
out
xchg
mov
arpl
das
in
jbe
arpl
lds
adc
push
jae
push
pop
daa
aam
xchg
mov
cmp
push
xlat
inc
arpl
in
adc
int3
push
dec
pop
mov
iret
cmp
or
stc
jle
imul
sbb
add
shl
out
sahf
ins
and
rcr
in
dec
dec
mov
sub
dec
movs
lods
dec
mov
jle
call
ss
stos
fild
or
lods
lea
xor
shl
addr16
lods
xlat
mov
adc
call
jge
out
call
loope
gs
std
pop
xchg
mov
cmps
pop
jno
dec
add
inc
xchg
sub
add
mov
pop
or
mov
rcl
lahf
cmp
or
jae
fistp
fimul
inc
add
movs
push
sti
or
inc
js
mov
or
dec
call
inc
(bad)
scas
cli
mov
jno
pop
cwde
mov
fwait
stos
movs
mov
clc
stos
sbb
scas
fs
push
add
or
xchg
aam
int3
loop
pop
fsub
cld
(bad)
sub
mov
and
or
out
cmps
fs
xor
jno
loop
mov
pushf
inc
(bad)
ss
test
ror
mov
cmps
mov
jo
rcr
jecxz
push
das
mov
xchg
and
hlt
push
mov
movs
aad
jae
loopne
stc
xchg
push
iret
popf
sub
sub
shr
push
test
adc
loopne
adc
cmp
fnsave
fild
sti
xchg
mov
push
mov
scas
adc
xchg
xor
push
outs
sub
sub
ds
in
or
mov
lds
iret
jns
jmp
not
mov
sbb
adc
rol
nop
(bad)
push
sub
mov
std
inc
jl
mov
push
test
scas
cmp
or
mov
or
dec
add
jns
dec
aaa
cmp
inc
fldlg2
inc
xor
sbb
arpl
push
imul
(bad)
cmp
cld
test
and
jo
dec
push
(bad)
scas
jne
dec
daa
lods
fimul
clc
les
shr
test
mov
movs
sbb
pop
mov
inc
aaa
into
daa
fisub
jo
and
mul
das
ins
or
enter
mov
push
movs
pop
mov
std
mov
ror
mov
sub
pop
fstp
xor
inc
mov
scas
xlat
(bad)
xchg
fwait
adc
sub
pop
xor
push
and
fs
shl
cmp
mov
jp
mov
sti
xchg
and
test
sbb
xchg
mov
pop
dec
add
pop
xor
xchg
mov
push
retf
gs
mov
enter
pop
mov
pushf
jp
(bad)
loope
sbb
adc
shl
enter
daa
fstp
add
cmc
scas
and
(bad)
aas
inc
vcvttps2dq
pop
gs
cmp
cmps
xchg
loopne
and
xlat
add
push
les
(bad)
dec
ds
mov
shr
sahf
pop
jp
repnz
movs
cmp
cwde
adc
xor
xchg
ins
jmp
mov
js
or
pop
inc
pop
mov
mov
fimul
fistp
jno
inc
stc
movsx
mov
hlt
mov
push
cmp
jno
sahf
jb
popf
test
xor
push
jg
cmp
pop
jnp
cs
and
dec
dec
scas
xor
shr
dec
cmp
mov
int3
and
dec
jbe
mov
stos
lods
cmp
les
push
cmp
gs
fsin
inc
retf
xchg
(bad)
leave
mov
repnz
or
add
push
in
xor
mov
push
hlt
je
loopne
aam
sub
mov
ficomp
mov
mov
xlat
push
sub
fimul
inc
(bad)
push
xchg
pop
inc
mov
push
shl
add
cmp
out
xchg
sub
pop
loop
mov
adc
pop
arpl
add
jbe
cs
sbb
imul
xor
mov
pop
dec
or
cwde
cmc
cld
jmp
add
add
push
pusha
std
sbb
and
pusha
dec
mov
inc
movs
mov
push
mov
ret
pop
sbb
jnp
(bad)
sub
pop
in
retf
mov
int3
les
mov
out
or
push
mov
iret
sbb
jae
(bad)
and
or
dec
retf
sbb
xchg
inc
nop
jmp
scas
jmp
mov
sub
push
test
jbe
mov
mov
pop
in
sahf
jb
sbb
sub
mov
pop
push
mov
mov
je
pop
xlat
pop
inc
or
xchg
cs
sub
cmp
inc
in
inc
jo
xor
cwde
push
sbb
das
mov
add
dec
popa
(bad)
jb
xlat
not
fadd
retf
cmp
inc
pop
clc
cli
les
jae
cmc
lock
imul
jne
out
leave
into
jp
jno
mov
clc
adc
out
jns
dec
pop
xlat
or
mov
imul
pop
shl
jp
stos
dec
ror
jae
loope
ror
inc
and
int3
or
or
mov
lahf
mov
mov
mov
cmp
fcom
rcr
loopne
stos
out
mov
popa
icebp
pop
add
mov
fst
adc
add
xlat
iret
sub
push
sbb
cmps
xlat
dec
aaa
jl
jg
js
mov
fisub
stc
mov
dec
out
aam
stos
(bad)
jo
les
dec
sub
(bad)
pshufw
pop
repz
into
aam
ins
popf
add
stos
xchg
sbb
adc
mov
adc
mov
jg
cwde
mov
lea
fcom
cld
shr
test
adc
fnsave
lahf
add
jns
cmp
ss
cmc
out
(bad)
(bad)
pop
pop
retf
hlt
pushf
pop
jge
fadd
call
ficomp
rol
sbb
sahf
out
pop
inc
xchg
dec
out
xor
adc
sub
scas
aas
and
sbb
push
add
jg
ins
dec
(bad)
call
out
aaa
loopne
xchg
leave
ret
dec
adc
loope
fstp
out
aaa
xchg
sbb
(bad)
cmps
call
outs
(bad)
pop
dec
add
aad
or
pusha
or
dec
cmc
sbb
scas
pop
sahf
rcl
inc
or
push
rcr
leave
sahf
push
xchg
aaa
sbb
ja
pop
pcmpeqd
cmp
cmps
loope
addr16
shr
and
xchg
add
addr16
out
add
jmp
addr16
add
dec
lea
jp
daa
shr
mov
(bad)
fmul
or
mov
push
dec
scas
std
or
clc
cmps
mov
rcl
jo
fs
rcr
movs
sub
jp
add
push
(bad)
dec
xchg
je
clc
(bad)
xchg
aam
jecxz
dec
movs
mov
mov
dec
pushf
imul
cmp
sub
sub
xchg
loop
fwait
jns
pop
push
hlt
retf
mov
adc
(bad)
sub
inc
mov
or
or
in
jb
ja
inc
mov
out
and
or
sbb
xchg
les
stc
jno
sub
jle
(bad)
out
mov
mov
retf
popf
jbe
pop
pop
inc
inc
cmp
xchg
mul
adc
sbb
inc
xor
mov
add
xchg
jo
pop
jno
(bad)
in
int3
pop
push
jmp
cmp
ins
mov
sub
and
and
pop
mov
mov
lock
add
or
fisub
mov
push
cmps
arpl
std
test
adc
pop
cmc
push
xor
cmp
sbb
adc
loope
sbb
xor
mov
idiv
fcomp
xor
add
pop
jmp
rol
mov
mov
pop
pop
lods
mov
out
mov
movs
sub
and
inc
test
add
sbb
inc
mov
jl
dec
jbe
sbb
push
adc
rcr
lock
and
mov
jmp
xchg
push
mov
push
cmp
fiadd
nop
(bad)
push
icebp
adc
das
pop
shl
mov
add
sbb
(bad)
push
test
loop
es
sti
lea
xchg
dec
mov
std
or
inc
sbb
dec
and
clc
push
cli
fs
adc
lds
loop
cs
pop
into
je
jge
test
adc
cmp
xchg
and
sahf
pop
pushf
retf
xor
idiv
mov
mov
int
ins
(bad)
mov
fwait
imul
daa
or
std
out
pop
xchg
mov
je
xor
fstp
mov
ja
pop
or
pop
idiv
and
pop
aad
imul
daa
lds
adc
and
adc
jo
pop
cmp
jmp
out
inc
push
cld
push
jbe
mov
and
jo
pop
push
cs
cmp
push
xchg
mov
fist
cli
stos
int3
or
mov
sti
push
lock
pop
inc
in
pusha
xlat
push
dec
mov
call
jno
or
mov
fdiv
inc
jnp
out
ins
fiadd
outs
repnz
(bad)
loop
ja
dec
mov
jge
xchg
lods
call
cmps
dec
sbb
std
test
jge
xor
in
adc
pushf
dec
add
es
out
sbb
add
ret
stc
sub
jecxz
(bad)
jl
mov
stc
pop
faddp
pusha
pop
push
test
mov
stc
test
movs
xchg
mov
popf
mov
mov
int
in
pop
adc
in
xchg
push
cdq
adc
int3
and
lahf
mov
inc
pop
xor
ror
aaa
fcom
cmp
mov
xor
xor
and
xchg
xor
and
test
pop
icebp
retf
movs
ins
idiv
idiv
dec
hlt
popa
(bad)
push
mov
in
(bad)
retf
les
xchg
pusha
xor
call
xchg
ds
dec
lock
js
cmps
jns
sbb
sbb
push
sub
xor
addr16
rcl
sub
pushf
push
stc
xlat
xchg
add
fisttp
mov
cs
jle
les
xchg
je
(bad)
int
pushf
inc
or
jne
pop
fild
xor
jo
mov
inc
jl
cmp
mov
loop
jge
dec
inc
sbb
(bad)
push
pop
(bad)
mov
je
aaa
or
loopne
push
pushf
mov
mov
sub
int
loopne
into
jg
push
or
fidivr
(bad)
jle
and
fdiv
sti
aas
cmp
(bad)
out
cmp
out
retf
push
in
loope
push
sahf
jmp
cmps
mov
bound
ss
in
sbb
int3
push
mov
xchg
xchg
enter
retf
xor
imul
dec
add
fcomp
scas
mov
(bad)
shl
addr16
jle
cmps
ret
ins
(bad)
div
push
cdq
cmp
movs
retf
nop
mov
lock
and
sbb
adc
cmps
xchg
pop
cdq
and
lea
in
pop
pop
cmp
or
inc
sub
iret
stos
cmps
and
nop
push
repnz
movs
(bad)
sti
iret
aaa
loope
shr
jbe
mov
inc
icebp
adc
(bad)
neg
push
(bad)
out
bsf
jno
jmp
rcl
cdq
popa
scas
das
cmp
cmps
fsubr
rcr
js
arpl
mov
and
sub
jae
fcomp
nop
push
push
aaa
iret
shl
rol
aad
cwde
sub
jge
daa
or
dec
das
xchg
mov
xlat
pop
out
into
fsub
prefetchnta
xlat
push
jmp
and
(bad)
stc
inc
cmc
test
outs
cmp
xor
movs
adc
fld1
dec
hlt
sbb
mov
jb
pop
sbb
lock
out
loopne
int3
dec
into
mov
shr
shl
and
adc
dec
inc
inc
out
adc
inc
rcl
lea
ss
sar
leave
bound
cld
mov
pop
cmp
mov
adc
movs
mov
sbb
rcl
loope
jnp
lods
(bad)
push
stos
data16
leave
sub
pop
adc
sbb
add
dec
sbb
inc
(bad)
sar
xor
dec
popf
jnp
xor
scas
and
dec
sub
ds
cmp
mov
jae
dec
dec
pop
and
pop
sbb
sbb
add
ds
das
data16
fcom
push
mov
lods
neg
icebp
pextrw
inc
mov
xchg
les
frstor
or
xchg
bound
aaa
retf
add
neg
jg
mov
lods
pop
pop
mov
pop
adc
push
bound
pop
sti
data16
push
xchg
psubq
inc
sub
xchg
aam
adc
loopne
pop
mov
mov
mov
sahf
mov
lds
mov
pop
push
out
cmc
mov
lahf
loope
lea
inc
cdq
jnp
cmp
sub
xchg
in
jl
shl
test
idiv
mov
(bad)
arpl
cmc
mov
xchg
out
mov
out
ror
jmp
and
(bad)
aam
in
push
test
push
call
leave
fimul
js
imul
push
jmp
out
jae
jno
loope
mov
inc
cmp
xchg
mov
lock
idiv
adc
pop
xor
inc
into
cmp
(bad)
lea
jae
ret
ret
mov
test
dec
adc
fld
cld
popa
pop
out
mov
adc
shl
push
mov
(bad)
dec
dec
cmp
xor
xor
mov
(bad)
push
lods
mov
cmp
mov
or
inc
dec
fcomip
dec
dec
shr
pop
gs
push
inc
push
daa
idiv
ror
sbb
ins
jmp
or
cmp
jge
pop
push
fwait
in
mov
cmp
popf
dec
pop
fdiv
(bad)
and
inc
sub
cmp
dec
pop
push
jns
or
and
inc
(bad)
daa
fst
jbe
and
push
mov
popa
mov
push
inc
push
pop
jmp
loope
or
cmp
ds
aam
fwait
push
xchg
int3
push
dec
mov
fstp
push
test
push
push
je
into
push
add
push
(bad)
outs
int3
xor
mov
dec
int
cwde
xor
or
pop
ds
add
cdq
xchg
xchg
xchg
retf
adc
adc
and
jno
aas
xor
(bad)
les
pusha
xchg
and
std
scas
adc
push
inc
test
loop
ret
(bad)
retf
shl
repz
not
sbb
jge
xchg
push
dec
mul
pop
xor
push
sbb
popa
xchg
xor
sbb
cmps
cmp
add
jl
stc
jecxz
repnz
inc
cdq
add
push
push
add
shl
test
push
loope
pop
ret
jmp
cmc
mov
ins
pop
cwde
ss
jmp
jns
adc
lahf
(bad)
lock
mov
jno
jg
and
cmp
push
idiv
and
movs
push
loop
push
mov
arpl
xlat
inc
dec
lahf
dec
and
mov
mov
xchg
mov
sub
adc
inc
sub
fiadd
xchg
les
or
pop
sub
dec
jnp
in
fisttp
ja
sbb
cli
sub
add
pushf
les
pushf
pop
mov
sbb
push
add
in
mov
loop
pusha
ins
(bad)
mov
mov
sub
mov
lock
fidiv
dec
add
cmp
ja
mov
outs
xor
push
pop
ins
mov
push
xor
push
dec
iret
not
test
pop
lock
inc
jge
jmp
inc
das
aad
mov
adc
lahf
mov
push
pop
leave
outs
out
inc
adc
int3
jmp
repnz
mov
ins
sbb
or
add
mov
and
push
retf
pop
mov
int3
add
js
xor
xchg
pop
push
stos
mov
xlat
sub
aam
rcl
mov
(bad)
jmp
mov
xchg
and
ret
xor
sbb
xlat
adc
jae
rol
jg
mov
iret
rol
cmp
ds
mov
std
fld
pop
jmp
jmp
inc
jo
cmp
inc
jmp
jnp
sub
addr16
mov
int3
loope
pop
(bad)
dec
js
scas
cmps
in
bound
(bad)
push
loopne
sbb
lds
pop
dec
lahf
lds
push
sub
fist
inc
into
add
je
and
xchg
scas
mov
cmp
std
mov
fnstsw
sub
xor
stos
repz
fnstsw
pop
mov
inc
pop
pop
adc
adc
sub
call
mov
gs
loope
adc
push
jae
dec
ror
test
dec
loopne
mov
mov
add
cmovge
movs
into
xchg
dec
sub
(bad)
ja
enter
call
mov
jecxz
shl
dec
ficom
inc
cmp
cmp
jb
or
and
popf
pushf
hlt
jns
sbb
mov
mov
mov
and
jg
aam
cmp
pushf
mov
popa
jmp
mov
mov
call
adc
inc
jo
fcmovb
fwait
pop
(bad)
push
cdq
mov
dec
pop
pop
mov
ja
cs
sub
jnp
dec
mov
cwde
(bad)
retf
dec
pop
data16
popa
pusha
movs
mov
rol
cmp
add
call
pusha
loope
mov
lock
mov
sub
les
movs
cld
jg
icebp
fldcw
mov
mov
adc
mov
push
(bad)
mov
pop
out
repnz
xchg
addr16
sbb
inc
adc
fld
push
add
add
cs
rol
jl
cmc
int
cmp
dec
sub
mov
mov
or
dec
mov
out
mov
sbb
lock
sbb
xchg
iret
cli
dec
mov
push
adc
test
xchg
popa
data16
pop
mov
inc
pop
xchg
std
mov
inc
iret
cs
inc
lahf
pop
pop
into
or
dec
gs
pop
in
aaa
pop
mov
mov
mov
mov
dec
repz
ins
push
or
out
in
test
jmp
mov
(bad)
pop
in
popa
sar
add
mov
enter
push
inc
inc
dec
jae
mov
push
cld
sub
xchg
pop
icebp
pushf
jo
jns
mov
(bad)
dec
jp
mov
jmp
sbb
in
jbe
xchg
ja
lods
xchg
push
add
fidivr
ror
and
gs
call
dec
mov
pop
(bad)
mov
xchg
mov
pusha
push
pop
mov
repnz
xor
out
scas
push
ins
mov
mov
pop
push
std
sbb
push
hlt
pop
popf
jmp
cmp
cs
mov
adc
push
pop
mov
mov
dec
es
pop
test
shl
aaa
in
add
inc
sbb
cmps
and
xor
dec
fbstp
sub
cmps
jmp
in
dec
in
push
and
and
xor
xchg
shl
leave
adc
add
mov
or
xchg
(bad)
jl
das
pop
xchg
mov
in
jmp
addr16
ss
les
sub
adc
mov
daa
mov
xchg
add
cmp
jp
ds
lea
fadd
sub
add
add
adc
push
int3
pop
shr
inc
cdq
mov
add
jecxz
inc
dec
or
add
xor
and
mov
dec
pop
push
xchg
in
sbb
jne
xlat
pop
(bad)
test
hlt
call
cdq
(bad)
pushf
out
test
ficom
js
jo
gs
push
push
push
test
loope
ins
in
std
inc
lock
sub
inc
ds
(bad)
xor
aam
ror
and
fcom
push
fsubrp
movs
inc
mov
and
adc
lea
pop
jo
test
rol
std
fs
mov
add
mov
scas
push
xlat
jno
inc
lods
mov
and
or
(bad)
dec
pop
inc
mov
or
sbb
outs
dec
xor
xchg
js
in
sub
add
push
fsub
(bad)
pop
retf
pop
cmp
pop
sbb
out
push
cmp
pop
rcl
sar
daa
xor
adc
mov
adc
adc
cld
(bad)
inc
cmp
dec
pop
ret
mov
int3
leave
jne
call
not
mov
iret
pop
stos
addr16
stos
sbb
mov
(bad)
jno
outs
mov
sub
sub
pop
cmps
jnp
aad
loop
mov
out
pop
shl
cmp
inc
jne
xlat
rcr
pop
push
sti
jmp
mov
imul
xor
test
rcl
xchg
cmp
dec
inc
fistp
and
push
aam
mov
dec
jmp
xchg
pop
clc
sub
lods
pushf
fcomp
(bad)
cmc
add
add
adc
fnstenv
stos
inc
lods
cld
inc
pusha
jmp
dec
stos
sub
aam
dec
mov
mov
call
pop
mov
sub
cmp
pop
push
inc
data16
mov
(bad)
fild
addr16
mov
out
sbb
xchg
imul
call
lods
cmp
pop
fadd
rcl
stos
nop
imul
fmul
rcr
mov
ins
cmp
cmps
push
imul
imul
mov
inc
xor
push
bound
ror
and
inc
loope
sbb
and
nop
mov
out
xchg
(bad)
sub
push
shl
dec
inc
dec
mov
dec
stos
gs
test
lock
mov
sub
jle
push
mov
adc
rcr
cmps
call
fstp
push
pop
xchg
sbb
std
pop
xchg
inc
xchg
ficomp
loope
add
and
rol
nop
je
in
frstor
rcl
dec
mov
outs
sahf
repz
dec
adc
jnp
outs
mov
mov
sbb
call
adc
cmp
dec
dec
mov
push
xchg
pop
clc
or
(bad)
sbb
imul
out
dec
adc
rdtsc
push
ret
inc
imul
loope
jb
sbb
add
int
hlt
pop
fcomip
jl
xchg
mov
push
add
push
out
adc
mov
lods
and
aad
push
fldenv
jne
xor
lds
stos
out
and
jg
or
jb
neg
cmp
pop
mov
mov
sti
add
pop
sub
inc
aaa
or
pop
mov
scas
or
out
xor
mov
inc
pop
and
ins
movs
mov
(bad)
xchg
pop
bound
arpl
mov
int3
lods
out
rcl
pop
hlt
mov
dec
sub
sbb
push
pop
and
ja
pop
sar
jae
or
mov
inc
ja
or
mov
adc
xor
mov
ja
dec
ret
aad
mov
jp
pop
jmp
add
imul
cwde
add
loope
xchg
xor
nop
dec
arpl
ins
xchg
pop
jl
cmp
pop
cmp
outs
sub
pop
add
dec
mov
ss
mov
push
pop
cs
fdivr
div
out
adc
ins
sub
mov
gs
push
jle
or
mov
fild
sahf
ret
(bad)
push
xchg
mov
retf
or
adc
push
imul
add
add
xor
and
inc
jmp
and
sbb
lods
push
pushf
bound
lock
retf
dec
mul
and
gs
jbe
shr
push
cld
out
inc
sub
mov
dec
xor
(bad)
std
dec
ins
stc
cmp
ret
in
das
sub
push
(bad)
arpl
mov
pop
dec
xchg
and
mov
xchg
or
mov
jp
rcr
neg
(bad)
outs
xor
pop
mov
aam
push
rcl
out
dec
cmp
pop
sbb
adc
ror
(bad)
lea
(bad)
push
sbb
dec
mov
mov
push
sbb
cmp
or
sbb
lds
lahf
cwde
sub
enter
inc
je
add
(bad)
fnstcw
and
and
bound
inc
jae
ret
add
cmp
clc
in
scas
add
lods
push
jmp
inc
add
cwde
and
cmp
ror
cwde
out
cmp
rcr
pop
sub
push
iret
jp
cdq
and
jo
bound
nop
or
pop
jae
cdq
xchg
or
push
ins
(bad)
push
xchg
gs
cld
fidiv
int3
mov
dec
pop
cli
sbb
mov
inc
dec
jg
sar
test
mov
add
fmul
out
dec
into
sub
sbb
lahf
pop
cmps
pop
jmp
mov
pop
int3
xor
mov
(bad)
pop
or
ret
shl
or
inc
sahf
mov
(bad)
or
cld
cmc
push
int3
mov
jp
gs
sub
push
sbb
(bad)
stos
cmp
ins
fdivr
enter
push
(bad)
scas
and
xchg
xchg
adc
retf
lock
cmp
nop
sbb
int3
rol
in
in
add
pop
xchg
push
mov
adc
or
sbb
je
or
gs
sub
add
pop
call
retf
mov
inc
dec
aad
inc
loopne
ret
inc
xor
sbb
or
xor
push
fcom
jae
rcl
and
lock
sbb
xlat
mov
ins
imul
and
mov
add
fisttp
jl
mov
xchg
xchg
add
sub
dec
xchg
inc
xchg
inc
into
dec
in
cmp
dec
adc
pop
leave
cmp
in
sub
fld
sbb
cli
rol
loope
test
ins
lock
adc
inc
push
in
cmps
pushf
lods
xchg
imul
pushf
ror
in
std
imul
cmp
push
loope
popa
(bad)
das
rcl
push
sub
pushf
fwait
and
cmp
xrelease
and
add
jecxz
push
or
ss
push
sub
cwde
xor
or
stc
push
sub
push
inc
xor
sub
rol
cmp
fdivrp
jge
mov
popf
(bad)
push
jge
test
mov
pusha
loopne
jmp
mov
and
and
and
mov
push
out
push
ret
mov
loopne
clc
sub
les
sbb
mov
add
xlat
mov
xchg
dec
mov
xchg
jno
dec
test
outs
stc
(bad)
mov
int3
pop
and
cmp
xchg
fimul
imul
aam
push
sbb
jmp
cwde
push
popa
and
add
js
pop
push
(bad)
xlat
pop
mov
out
push
mov
loope
sti
push
pop
jle
jnp
leave
pushf
aam
cmc
cmp
mov
ja
out
and
test
test
loop
jno
push
cdq
jl
xchg
dec
xchg
aas
test
jo
cmps
pop
adc
fdiv
add
clc
lahf
or
test
(bad)
shl
mov
jl
pop
xor
scas
leave
es
ror
daa
pop
mov
je
fistp
enter
fstp
je
fistp
aam
out
sar
push
mov
sbb
test
mov
movs
xchg
jg
dec
int3
dec
jge
sbb
dec
imul
cmp
dec
cmp
mov
(bad)
ret
out
adc
cli
(bad)
cmc
sub
pop
xchg
(bad)
in
xlat
sbb
aaa
jnp
push
jno
int
repz
push
in
mov
xor
shl
cmp
fsubr
fucom
dec
stc
sbb
dec
add
push
xor
jg
pop
neg
pop
xlat
pusha
sbb
(bad)
(bad)
push
pop
test
push
in
push
cmps
sbb
cmp
dec
dec
add
push
jl
clc
inc
add
push
push
jae
push
imul
mov
xchg
or
popf
ss
mov
and
sbb
dec
xchg
and
add
mov
jmp
xlat
dec
daa
dec
lea
add
xor
mov
xchg
stos
(bad)
dec
sbb
es
add
inc
rol
ror
out
(bad)
or
dec
xchg
adc
sar
push
mov
int3
gs
in
sub
pop
pop
dec
jmp
cdq
dec
push
ins
lods
lods
call
jnp
push
jmp
ins
push
ins
aam
aas
(bad)
call
inc
mov
mov
mov
push
in
das
lds
adc
nop
(bad)
push
push
inc
bswap
push
das
mov
pop
dec
dec
(bad)
test
mov
or
pop
fidiv
sub
and
aam
sub
mov
fst
test
sub
or
ins
rol
xlat
or
cmp
aam
xor
mov
xor
and
pop
imul
fld
dec
fiadd
sahf
add
and
in
or
pushf
jmp
fcmovnb
pushf
cdq
and
xor
lods
lock
dec
popa
sub
in
jnp
arpl
pop
ret
loopne
mov
and
sbb
xor
pop
stos
jnp
jnp
mov
mov
xchg
rol
add
(bad)
xchg
xor
icebp
pop
cmp
(bad)
ficom
cwde
pop
mov
idiv
jnp
xchg
and
cwde
xor
push
or
pushf
xchg
ss
iret
jnp
mov
jl
gs
add
lods
out
dec
stos
fs
ds
push
mov
sbb
jp
sbb
sbb
(bad)
sar
jae
imul
cmps
push
mov
cmps
and
add
jns
xchg
inc
xchg
lock
xchg
lea
es
fild
aad
dec
jns
imul
pop
mov
in
xlat
xchg
(bad)
jecxz
fisubr
pop
xchg
push
(bad)
(bad)
mov
sub
and
pushf
add
sub
and
ja
movs
sar
daa
cmp
pop
mov
les
addr16
popf
and
xor
div
arpl
xor
mov
sub
pop
sbb
jnp
xor
cs
aam
cdq
add
push
sub
sbb
lea
push
jnp
fwait
es
cs
ret
lock
lods
gs
fwait
in
push
jno
mov
ins
leave
in
stc
push
(bad)
pop
fisub
jne
(bad)
fmul
out
add
adc
mov
test
dec
rol
(bad)
mov
inc
fidiv
mov
into
sub
test
test
cld
mov
arpl
fdivr
inc
and
push
cmp
test
mov
mov
scas
inc
shl
dec
test
ss
push
es
movs
(bad)
(bad)
dec
sbb
jne
add
in
inc
xlat
js
sub
int
xlat
mov
repnz
pop
retf
les
sub
push
neg
adc
sbb
cdq
dec
dec
jge
pop
aaa
(bad)
mov
out
ret
jo
es
daa
cmp
loopne
cs
lods
push
retf
cmc
icebp
push
popf
sbb
int3
aaa
or
fsubr
sbb
cdq
imul
fwait
push
jl
or
test
push
fadd
bound
pop
imul
mov
data16
fs
sbb
lahf
cmovp
lea
mov
setle
imul
aad
xchg
repz
call
mov
and
scas
andnps
or
add
adc
(bad)
sbb
iret
push
sub
pushf
loop
(bad)
mov
pop
in
xlat
int3
jge
xor
mov
mov
xor
pop
mov
les
retf
retf
sbb
mov
mov
aaa
mov
ret
fwait
loop
xor
cmps
jp
adc
add
xlat
fisub
pop
dec
out
mov
jns
lds
or
loope
les
mov
les
xchg
(bad)
sub
pop
sbb
dec
lods
ss
cmp
mov
jge
iret
add
pusha
repz
inc
dec
inc
fwait
mov
(bad)
mov
pushf
repnz
stos
push
or
mov
sbb
adc
movs
inc
fs
pop
mov
mov
dec
mov
test
lea
ret
pop
imul
lds
cmp
mov
aas
jnp
(bad)
or
daa
shr
sar
sub
loopne
fistp
popf
int
pop
xor
scas
fadd
or
leave
cdq
outs
adc
cld
pop
inc
je
mov
cmp
pushf
rcr
loop
push
push
dec
sar
add
push
xlat
jmp
pop
adc
fidiv
sbb
mov
ins
rcl
mov
(bad)
loop
dec
xchg
dec
jle
cmp
pop
lock
test
sub
in
mov
or
pushf
xlat
shl
pop
out
sbb
or
push
loope
arpl
sbb
add
add
movs
sub
sub
mov
and
test
cmp
pop
outs
mov
pushf
inc
in
pop
fisttp
ficomp
lods
push
(bad)
scas
mov
int3
xchg
mov
popf
dec
inc
movs
cdq
push
out
jae
ret
call
sub
call
lahf
or
fs
aam
sbb
pop
add
and
pop
call
mov
mov
es
daa
stos
mov
or
ja
xchg
pushf
and
fwait
inc
dec
jnp
sti
dec
icebp
xchg
mov
addr16
ret
push
sub
movs
test
push
es
hlt
jecxz
push
retf
imul
(bad)
div
retf
(bad)
call
fwait
gs
sbb
pushf
dec
inc
mov
xor
pop
sub
pop
daa
push
xchg
inc
mov
fdiv
sbb
sub
inc
mov
dec
(bad)
push
aam
scas
int
arpl
inc
jno
push
jmp
xchg
cmps
ror
in
mov
jmp
sti
ds
cmp
jbe
jne
icebp
xor
mov
pop
inc
lds
add
retf
mov
stc
mov
push
lods
push
repnz
(bad)
loop
daa
(bad)
xchg
pop
cmp
push
mov
inc
jno
ins
mov
adc
add
mov
loop
(bad)
dec
fxch
push
push
icebp
imul
hlt
mov
fld
and
push
adc
mov
aam
mov
jg
dec
lods
mov
repnz
frstor
sbb
and
(bad)
dec
cmp
or
jnp
add
cld
mov
mov
imul
pop
pop
daa
cld
jmp
ds
pop
mov
jno
int3
dec
int
sti
cmp
movs
dec
push
pop
sub
call
cwde
jne
rcr
dec
pop
xor
cmp
popa
xchg
dec
dec
xchg
push
das
push
jo
daa
into
and
pop
mov
pushf
loopne
sub
cmp
adc
mov
repz
xor
in
test
jnp
repnz
push
test
or
repz
stc
sub
sub
mov
xchg
push
xor
mov
jl
and
push
adc
js
je
ins
inc
mov
cmp
out
sahf
repz
add
inc
sbb
dec
scas
mov
cdq
push
aaa
mov
test
mov
sar
fld
xchg
adc
mov
jnp
push
sub
dec
enter
(bad)
mov
lea
push
fcmovb
fistp
pop
fist
or
shl
mov
shl
lods
in
sub
inc
js
inc
pop
jae
push
dec
mov
push
sub
xchg
out
scas
xchg
xor
xchg
cmp
dec
dec
inc
fdivr
sbb
cmp
imul
int3
push
jno
push
lock
dec
es
pop
sub
fwait
or
inc
imul
xchg
fstp
test
push
xchg
xlat
pop
je
or
push
sbb
cmp
dec
pop
arpl
fld
or
pop
push
icebp
xchg
mov
pop
test
ror
(bad)
pop
(bad)
sahf
cmc
xchg
mov
retf
sbb
sub
int
sbb
loope
mov
add
mov
fs
or
cmp
in
add
dec
(bad)
ficom
pop
jp
scas
rol
test
leave
and
(bad)
push
(bad)
mov
push
xlat
in
clc
sbb
push
or
mov
nop
out
mov
mov
cmp
xchg
sbb
push
adc
movs
(bad)
xor
mov
pop
dec
add
mov
sub
lds
les
inc
xlat
in
push
jno
mov
push
xlat
scas
push
add
in
add
hlt
aas
stos
mov
pop
inc
adc
stos
pop
cmc
inc
inc
xchg
xor
adc
(bad)
pushf
mov
mov
loope
cmp
adc
(bad)
mov
pop
or
dec
lea
jb
dec
add
popa
lahf
mov
out
cli
add
lahf
inc
add
repz
cmp
mov
ins
push
ficomp
push
jbe
mov
inc
(bad)
nop
push
pusha
mov
out
cmp
sar
and
in
sub
test
mov
sub
jnp
popf
sub
mov
ins
cdq
push
push
push
jmp
popf
mov
pushf
push
ja
xor
sbb
fisub
int3
loopne
fistp
movs
xrelease
cmp
mov
not
pusha
pop
(bad)
std
jmp
mov
mov
mov
sbb
push
movs
mov
pop
xchg
outs
out
(bad)
std
pop
ret
sub
test
mov
lock
fwait
mov
(bad)
mov
mov
pop
cmp
jl
mov
in
les
jbe
out
mov
stos
cmp
xchg
jge
mov
mov
(bad)
ja
mov
push
pop
push
and
(bad)
stos
pushf
xor
adc
loop
fisttp
jnp
mov
into
mov
hlt
rcl
clc
rcr
cmp
add
inc
les
lds
adc
sbb
adc
lea
pop
sbb
test
adc
inc
cmp
shl
outs
adc
jae
mov
ja
mov
test
in
and
adc
pusha
pusha
dec
add
cmc
dec
jnp
fwait
push
pop
out
xchg
push
cld
or
sub
cmps
movs
ins
(bad)
inc
ret
mov
ficomp
jmp
lods
push
pop
dec
fwait
or
getsec
cmp
push
adc
cwde
loope
or
xor
lahf
sti
ja
mov
add
sti
xor
pop
mov
mov
xor
and
int
adc
push
lea
pop
lea
cli
pushf
test
cmp
mov
ss
rcl
ror
dec
daa
mov
xchg
sbb
and
push
dec
fs
loope
inc
and
enter
cmp
pop
and
cmp
sub
vmread
inc
or
loope
sahf
xchg
push
and
jbe
dec
sub
add
jle
mov
sub
dec
push
sbb
lock
jbe
lea
test
or
mov
cwde
push
adc
adc
ins
jo
ror
xchg
js
stos
or
aad
push
sub
jl
test
fnsave
lods
jne
pop
pop
xchg
and
xchg
leave
add
lock
cmp
movs
pushf
pop
imul
sub
idiv
js
imul
add
ror
sahf
sbb
pop
sbb
inc
aas
sbb
push
xor
pop
cmp
add
or
xor
pop
add
(bad)
sbb
popf
imul
mov
fcomp
inc
popa
cmps
(bad)
je
ret
push
mov
xchg
sti
push
ins
cmps
(bad)
movs
pusha
pop
cmp
jae
mov
push
fist
or
rol
call
fstp
je
mov
out
or
mov
dec
int
mov
out
cmps
cs
imul
and
jnp
mov
rcr
lods
enter
sahf
and
adc
inc
xor
xor
call
cmp
test
mov
fs
scas
pop
rcr
add
and
sbb
(bad)
lea
sub
and
aaa
pushf
cmp
push
cld
test
mov
enter
xchg
dec
pop
push
cli
lock
sub
xchg
xor
push
rol
aaa
inc
push
test
adc
pop
add
and
jp
dec
ror
hlt
lea
dec
dec
push
push
pop
mov
sub
ja
aad
out
pop
xchg
dec
fwait
pop
out
fs
addr16
aas
xchg
dec
or
icebp
pop
jmp
dec
mov
jg
push
sub
mov
mov
cmp
gs
or
cmp
retf
sub
inc
mov
test
adc
pop
jae
loope
out
and
push
inc
add
cld
push
fcom
sbb
fadd
sub
dec
fld
out
add
icebp
and
and
test
test
fwait
inc
push
out
rcl
push
push
imul
inc
enter
dec
ins
(bad)
sahf
fcomp
lods
mov
jo
xchg
ret
push
sub
test
test
leave
lahf
push
mov
aad
pushf
(bad)
push
dec
stos
push
cs
inc
lods
push
outs
ins
pop
loope
cmp
(bad)
retf
adc
mov
xchg
sbb
fldcw
loop
sar
pop
inc
aas
fidiv
int3
or
cmp
into
push
sbb
bound
xchg
ja
stos
sub
adc
pop
cmp
adc
and
addr16
iret
mov
movs
inc
shl
jge
ret
leave
sub
xchg
cmp
inc
aaa
into
mov
jmp
cmp
nop
call
mov
cld
loop
mov
das
sbb
retf
imul
adc
movs
jg
pop
mov
stc
test
mov
dec
and
sbb
pop
mov
cmc
dec
or
xchg
sar
nop
add
aaa
(bad)
mov
push
inc
inc
jg
mov
pusha
mov
ficomp
aam
sub
cmp
inc
lahf
jnp
fdivrp
adc
jg
movs
pop
imul
sbb
outs
popf
fadd
cmc
mov
aam
push
dec
jno
daa
mov
mov
mov
pushf
loop
and
fisubr
xchg
adc
mov
jmp
sbb
cmp
push
cmp
leave
adc
imul
sbb
stos
ins
test
daa
fwait
(bad)
mov
ret
sbb
popf
xchg
fwait
xchg
icebp
test
jmp
(bad)
pop
pushf
mov
adc
xchg
xchg
fild
shl
fwait
dec
sub
mov
sti
push
nop
mov
in
push
mov
dec
ret
mov
ja
inc
jge
mov
pop
sub
cmp
and
mov
sbb
mov
cmp
inc
aam
loop
xlat
ficom
nop
fidivr
xchg
in
xchg
(bad)
mov
rol
pusha
ds
jmp
sub
test
hlt
xor
xor
inc
sub
inc
sub
pop
sti
mov
pop
movs
mov
dec
cmp
mov
jae
and
stos
xchg
xchg
pusha
xchg
mov
(bad)
sbb
dec
aad
or
push
cmp
cld
xor
fadd
adc
or
xchg
mov
ss
paddsw
into
cmp
nop
jno
loope
out
loop
pop
push
xor
cmp
movs
pop
test
dec
aam
retf
aad
fcmovbe
fidiv
(bad)
div
adc
lods
jno
sbb
movs
arpl
in
dec
mov
push
popf
mov
jl
and
sub
fsub
mov
test
enter
call
icebp
mov
jo
push
xor
popa
mov
xor
and
inc
pop
test
shl
fadd
fwait
loope
sar
add
leave
nop
stc
jmp
clc
and
or
push
shl
das
pop
clc
inc
xor
or
jo
loopne
xchg
cmc
rol
sub
fwait
cmps
movs
xor
inc
dec
lock
iret
xor
mov
xchg
mov
and
mov
aaa
out
mov
sti
aad
add
gs
sub
xchg
ret
push
and
cmp
mov
push
jle
call
xchg
int3
retf
mov
add
outs
data16
inc
add
in
push
rcr
(bad)
movs
xor
pop
cmc
xchg
mov
sub
rol
mov
scas
mov
loope
jp
add
add
hlt
inc
inc
lods
and
push
fild
and
fiadd
inc
repz
movs
add
stc
inc
lods
in
adc
jno
sti
into
cmp
out
fwait
push
cmps
sbb
scas
sbb
xor
(bad)
add
cmp
pop
jb
int
stos
add
(bad)
xor
mov
stc
cmc
adc
lea
jb
or
mov
cld
push
pop
mov
inc
shl
mov
jnp
loop
inc
jmp
movs
ins
mov
pop
in
push
pop
pushw
in
jmp
pop
dec
mov
test
jno
loopne
daa
cmps
loopne
sbb
ins
mov
jmp
push
shl
cli
adc
popa
movs
nop
or
pop
mov
fwait
out
retf
inc
sub
xor
add
les
push
test
and
xor
ffreep
pop
push
pop
jbe
aad
lahf
cmp
fistp
sti
imul
call
leave
lds
ficom
test
mov
outs
idiv
(bad)
xchg
popa
leave
sbb
dec
loopne
inc
pop
clc
dec
push
xchg
les
xchg
jle
(bad)
dec
jl
xchg
test
gs
out
(bad)
es
test
aaa
enter
imul
mov
hlt
mov
mov
jo
std
cmp
imul
mov
loopne
mov
jecxz
or
push
or
in
mov
pop
xlat
xchg
mov
sahf
shr
int
xchg
mov
pop
lock
fmul
or
shl
data16
mov
push
lahf
xlat
adc
out
scas
loope
loopne
push
daa
(bad)
(bad)
(bad)
xor
add
or
rcr
pop
sub
nop
clc
and
mov
xor
mov
mov
add
inc
jne
mov
pop
pop
cmc
jno
mov
(bad)
fs
push
mov
mov
sbb
add
pop
gs
and
idiv
mov
daa
test
add
repnz
inc
and
loopne
sub
push
push
sub
jo
or
das
pop
jne
not
add
into
sbb
(bad)
mov
jp
or
pop
popf
subps
xor
pop
adc
test
pop
loope
div
pop
cld
fnsave
cmp
pop
jg
mov
les
jmp
push
mov
stos
push
mov
xor
add
push
ss
inc
mov
xchg
jp
test
gs
and
xchg
pop
inc
arpl
cmp
mov
lea
in
jg
dec
mov
add
leave
pop
data16
dec
xchg
sbb
les
comiss
aam
lahf
sahf
xchg
sbb
mov
push
pop
mov
pop
pop
retf
xor
jp
fmul
(bad)
mov
movs
ins
xchg
mov
sbb
adc
xor
inc
fs
inc
xchg
mov
pop
dec
(bad)
lock
cmp
rcr
push
sub
sbb
pop
push
cmp
push
xchg
loopne
or
iret
pusha
jno
pop
(bad)
pop
mov
sub
cld
and
out
shl
out
cwde
sub
int3
les
sub
ss
pop
add
push
call
mov
mov
ret
stos
mov
mov
jl
push
cmp
xchg
test
mov
mov
test
shl
clc
mov
mov
ins
pop
imul
or
les
mov
out
addr16
outs
aas
pop
retf
or
(bad)
mov
sbb
ja
loopne
es
and
ret
pop
jmp
sbb
push
push
mov
mov
fadd
xchg
fisub
lock
out
dec
add
add
dec
jl
mov
repnz
and
arpl
(bad)
pushf
aam
fwait
add
(bad)
(bad)
dec
dec
mov
fcomp
sub
jne
lods
jo
push
mov
jb
inc
cmp
in
push
push
mov
cli
mov
(bad)
popf
rol
dec
shl
sub
push
into
(bad)
push
mov
out
std
xchg
aam
je
icebp
push
sub
inc
(bad)
cli
(bad)
enter
mov
dec
mov
ja
repnz
cmps
(bad)
stos
or
outs
lods
mov
mov
pop
hlt
jl
dec
les
iret
lods
sar
cmp
scas
push
push
xchg
pop
jle
mov
lods
cld
pop
fld
xor
aaa
scas
js
dec
sub
dec
sbb
add
adc
mov
dec
rcl
test
push
test
stc
mov
jge
call
jae
push
jecxz
add
icebp
xchg
in
xchg
adc
jmp
adc
pop
or
imul
pop
dec
fwait
stos
and
movs
sbb
jo
loopne
mov
dec
mov
fadd
fistp
dec
fdivr
or
jnp
stc
cmp
and
pop
sets
pop
dec
pop
dec
setle
dec
mov
mov
mov
or
or
mov
pop
dec
(bad)
imul
mov
daa
imul
xchg
mov
div
fiadd
shr
adc
sbb
out
inc
mov
and
sub
or
dec
inc
gs
shr
popf
sub
jmp
or
cdq
movs
inc
loop
jnp
xchg
nop
push
outs
and
sbb
nop
(bad)
sbb
sub
push
popf
push
push
jns
mov
dec
imul
xchg
push
aam
cmp
cmps
pop
jb
(bad)
jge
add
xchg
ret
sbb
and
out
jmp
and
dec
loope
dec
and
les
jg
sti
inc
in
push
xchg
out
(bad)
or
imul
stos
stos
sti
and
sti
pop
mov
mov
sbb
fwait
shr
mov
and
push
aam
cmp
pop
add
pushf
xor
pop
(bad)
jne
out
loope
pop
dec
repz
imul
ja
cmps
aaa
int3
pop
jae
xchg
retf
cmp
mov
out
in
mov
xchg
data16
rcl
xchg
jae
mov
enter
mov
inc
ins
mov
out
daa
jg
pop
sub
jmp
pop
or
fisubr
xchg
fst
lock
mov
fbstp
dec
(bad)
fs
sub
jmp
aaa
mov
jo
nop
rcl
sahf
cmp
adc
outs
fcom
cmc
jl
ror
ins
adc
je
loop
(bad)
cmp
mov
xchg
pop
and
cmp
or
out
nop
mov
and
sbb
mov
inc
jecxz
pop
test
bswap
retf
dec
stc
add
inc
adc
xchg
jle
jle
sbb
ret
sub
leave
pop
or
sar
sbb
jno
and
pop
sbb
mov
xchg
rcr
mov
jge
push
xchg
gs
ja
test
repnz
cmp
nop
pop
shl
into
mov
not
fidiv
push
mov
addr16
push
int
xor
cmp
push
leave
(bad)
xchg
das
test
mov
pop
xchg
mov
and
or
mov
lock
gs
mov
push
lea
mov
adc
mov
inc
(bad)
in
aam
jmp
xchg
and
iret
shr
mov
pop
(bad)
mov
repnz
mov
or
pop
cmp
or
mov
idiv
loope
addr16
gs
pop
sbb
jmp
xchg
test
sub
fisttp
mov
add
jecxz
mov
cmp
fcom
cmp
test
(bad)
xchg
into
and
jae
dec
je
jmp
xchg
push
sub
jmp
add
aad
outs
or
sbb
rol
cmps
dec
push
outs
ret
and
ficom
lods
pop
mov
dec
ins
push
sub
pop
dec
add
cmp
sbb
(bad)
pop
jmp
out
sbb
loop
push
jnp
mov
dec
mov
fsub
mov
inc
popa
jge
mov
mov
loop
mov
sub
mov
out
cmp
xchg
mov
stos
adc
ficomp
dec
push
xlat
imul
jp
mov
outs
rcl
iret
sub
jno
add
pop
ss
adc
push
mov
lods
jno
cmps
cmp
dec
and
lock
inc
dec
cwde
push
and
sub
call
cld
ficomp
repnz
sub
cmp
nop
fisttp
enter
jae
mov
or
ins
in
mov
cmp
mov
dec
dec
sbb
(bad)
push
shl
xchg
inc
inc
mov
add
das
int3
inc
outs
push
(bad)
jle
jecxz
inc
mov
pop
outs
xlat
div
pop
les
jmp
js
mov
sbb
adc
outs
idiv
mov
xor
pushf
pop
adc
mov
inc
mov
xchg
adc
pushf
or
dec
mov
not
out
jecxz
clc
cwde
test
mov
cmp
cmc
btc
mov
fcom
inc
adc
(bad)
sbb
(bad)
fs
jne
mov
ja
icebp
xlat
fwait
arpl
inc
std
mov
adc
xor
add
jmp
xchg
pop
sbb
cmps
sbb
out
fcomp
pop
and
jbe
add
sbb
push
xchg
dec
dec
ins
fwait
retf
mov
pop
mov
(bad)
nop
xchg
fild
fwait
push
jbe
fidivr
lock
imul
push
aaa
call
cmp
push
test
xchg
loopne
leave
adc
cmp
rcr
and
mov
push
sbb
in
test
pop
add
adc
fprem1
arpl
xlat
xor
pop
mov
test
xor
jecxz
sub
pusha
pop
xor
fwait
es
out
sbb
out
pop
(bad)
pusha
inc
jae
sub
xchg
push
sbb
jns
ror
add
jnp
dec
stos
sbb
jae
jb
cli
xchg
scas
ss
fcomip
sub
mov
lods
inc
adc
sbb
(bad)
jecxz
push
(bad)
jl
dec
dec
jne
xchg
cmp
jae
xchg
and
add
pushf
push
ret
sub
dec
mov
sub
cmp
dec
pusha
popf
loop
mov
mov
push
pop
ins
add
push
imul
push
jb
imul
fcomp
jp
sbb
fistp
cmc
lock
dec
out
xchg
dec
jge
xchg
arpl
loop
bound
jne
xchg
retf
xchg
add
dec
push
fisttp
sbb
fwait
and
xlat
mov
and
enter
in
fisub
enter
fadd
ins
xchg
push
(bad)
inc
jg
(bad)
mov
push
les
in
hlt
sahf
dec
or
cmp
call
and
in
loopne
mov
mov
mov
pusha
rcr
in
lods
aad
inc
daa
dec
(bad)
(bad)
inc
mov
imul
cld
ins
cld
jnp
daa
(bad)
fadd
mov
into
ficomp
cmp
daa
dec
cld
(bad)
rcl
pop
mov
cli
and
stos
je
adc
(bad)
mov
(bad)
outs
pop
dec
jp
push
js
mov
dec
xor
push
clc
ins
push
mov
int
xlat
push
pop
cld
popa
out
scas
cwde
sub
clc
xor
outs
sbb
xchg
lods
lds
mov
rcl
push
dec
fpatan
movs
push
(bad)
fcom
sbb
test
and
pusha
sbb
fldenv
outs
pop
xchg
ss
mov
arpl
push
loop
mov
dec
pop
adc
cmp
jl
xchg
sub
sti
and
add
popf
sbb
rcr
dec
cmp
cld
inc
imul
xchg
pop
sbb
sub
cmp
xor
mov
jecxz
fst
leave
jp
stos
aam
pop
dec
out
out
lds
sahf
xor
and
ret
adc
imul
mov
add
shr
mov
iret
int3
movs
aad
inc
sub
daa
je
cmovae
xchg
mov
ins
inc
aas
test
or
(bad)
repnz
cs
jle
sub
or
aaa
push
pop
xchg
pop
dec
int
dec
mov
sbb
add
test
push
cmp
fist
fsubr
mov
lock
push
outs
mov
mov
mov
push
dec
mov
sbb
pop
or
xor
sbb
loop
add
jo
ret
pop
inc
inc
mov
jbe
aad
(bad)
push
inc
das
push
pop
pop
push
xchg
retf
ret
pop
pop
mov
xor
pop
call
cs
ficomp
push
fucomp
dec
imul
mov
xchg
cmc
mov
xor
arpl
fwait
inc
cmp
call
sub
in
out
pop
mov
cmps
in
mov
arpl
out
adc
(bad)
scas
cs
cs
test
gs
adc
jp
js
push
cli
addr16
popa
add
adc
out
push
fdivr
xchg
loopne
sti
shl
sbb
not
lods
or
aas
ret
fs
sub
shr
dec
inc
jl
mov
aas
mov
fld
rol
into
cmp
add
enter
jnp
fs
icebp
mov
pop
mov
sbb
pop
jb
nop
out
add
cmps
sti
pop
(bad)
xlat
xchg
shl
jle
jno
out
mov
fsin
dec
jne
and
and
mov
icebp
scas
jge
cld
jnp
fs
sbb
add
(bad)
call
sub
mov
dec
out
not
jmp
les
inc
mov
gs
push
xchg
stc
inc
cli
mov
jle
inc
jnp
aam
dec
push
lds
out
sub
out
hlt
xlat
mov
stos
add
test
add
or
mov
and
sbb
inc
std
add
fdiv
push
dec
sbb
leave
retf
je
mov
loopne
jbe
dec
sub
jle
mov
fldenv
mov
xchg
fucomp
(bad)
fnstenv
or
iret
sub
mov
out
mov
movs
sbb
pop
ret
mov
(bad)
jae
push
push
sbb
xor
cli
mov
retf
loopne
ins
xchg
cmc
cmp
test
mov
loope
out
mov
jmp
push
jmp
inc
shl
mov
mov
cdq
rcl
dec
pop
les
jmp
sub
sbb
or
cmp
lods
sub
mov
cmps
mov
cld
in
les
adc
or
and
and
add
add
mov
dec
int3
pusha
popf
cmp
out
fisttp
sbb
ins
mov
stos
call
pop
popa
fcmovb
dec
test
jb
xchg
adc
fisub
and
lock
push
aam
xchg
ja
xchg
xchg
ins
add
aad
push
sbb
sbb
cmp
stos
out
or
outs
xchg
adc
loope
fcomp
xor
aad
popa
lahf
fwait
mov
mov
(bad)
mov
loope
xlat
adc
push
cmc
mov
mov
rol
fild
addr16
jns
addr16
ins
lock
lahf
dec
faddp
dec
push
sahf
sti
cmp
fnstenv
aad
and
sbb
sub
or
sbb
(bad)
loopne
mov
dec
sub
fdiv
push
sub
mov
aam
push
int3
mov
push
pop
xchg
sahf
sub
jl
mov
xchg
lds
in
das
dec
aam
cmps
pop
nop
hlt
rcl
jmp
mov
mov
les
in
xor
mov
(bad)
cli
or
int3
shl
cld
mov
loope
or
inc
(bad)
sar
out
test
pushf
push
pop
xchg
in
cmp
aad
xor
bound
adc
call
ja
les
or
add
sub
icebp
xchg
xor
xor
xchg
mov
cdq
and
mov
ret
(bad)
outs
jno
cmp
ins
ret
mov
mov
xchg
(bad)
mov
inc
mov
push
sahf
mov
in
mov
or
push
cmp
inc
pop
cmps
mov
sub
not
sub
icebp
int
push
jg
das
std
pop
test
inc
mov
push
lahf
stos
pop
mov
push
xchg
pop
pop
movs
sub
loopne
and
sbb
dec
iret
stos
xlat
loope
aad
arpl
dec
mov
mov
jne
adc
out
and
scas
mov
mov
dec
jmp
push
mov
addr16
stos
adc
dec
aam
fld
cmp
adc
(bad)
enter
pop
xlat
cwde
call
sbb
jmp
dec
cmp
rol
jmp
inc
aad
or
cli
hlt
jo
mov
popa
inc
add
xchg
jae
cmp
test
outs
sub
xchg
aam
jnp
call
int3
jg
pop
adc
inc
pushf
(bad)
cmp
jp
mov
mov
out
mov
mov
mov
and
loop
or
jns
sub
test
scas
mov
cwde
in
out
mov
mov
mov
fidiv
(bad)
ins
loopne
out
push
sub
call
sbb
ret
push
push
pop
sti
sahf
or
dec
dec
ficomp
pop
scas
test
int3
ret
inc
(bad)
jbe
pop
dec
outs
xchg
push
call
in
mov
mov
pop
(bad)
(bad)
pushf
rcl
pop
pop
(bad)
cmp
enter
adc
outs
pop
shr
jb
aaa
adc
mov
fmul
dec
mov
mov
dec
pop
ret
pop
inc
jp
rcl
out
fiadd
dec
xlat
loopne
sub
movs
cwde
fimul
cli
inc
inc
fisub
or
xor
xlat
add
adc
bound
loop
jg
movs
mov
mov
daa
cs
jp
icebp
loop
or
or
neg
cwde
cmp
clc
mov
aaa
xchg
cmp
loop
aas
shr
test
icebp
add
add
iret
out
sbb
mov
or
movs
pusha
sbb
loope
jge
mov
imul
xchg
mov
scas
adc
dec
dec
jmp
movs
push
add
ret
mov
xlat
jl
mov
or
xchg
xor
popa
pop
inc
cmp
in
cmps
test
loope
pop
cmps
fldcw
push
leave
pop
int
xor
lods
sub
jbe
push
lods
push
jmp
sub
mov
loope
inc
sbb
mov
iret
or
dec
cmp
mov
dec
pop
mov
out
addr16
sub
xchg
lods
or
xchg
xor
push
std
mov
hlt
pushf
shl
cld
test
retf
ret
adc
outs
pop
mov
sbb
sti
lock
jbe
push
ja
pushf
retf
mov
leave
jae
into
cmp
mov
jg
out
xchg
popf
dec
cmp
pop
xor
leave
cs
arpl
sbb
dec
lock
cs
jno
pop
pop
mov
mov
rcl
int
pop
dec
mov
cmp
mov
mov
fwait
dec
inc
stc
ror
nop
mov
cmp
push
mov
sub
mov
mov
xlat
mov
pushf
in
jae
lock
mov
sar
sbb
sbb
adc
sub
sub
fwait
test
mov
inc
dec
(bad)
mov
pop
int
inc
cmp
add
mov
push
xchg
(bad)
mov
push
mov
mov
fsubr
les
in
xchg
daa
and
out
pushf
addr16
dec
push
pop
pop
dec
sbb
clc
jl
(bad)
adc
loopne
mov
pushf
in
test
push
sbb
inc
push
cmova
js
popa
sbb
daa
lods
jmp
into
cld
push
xchg
inc
inc
pushf
add
push
jnp
ds
fstp
loope
sbb
mov
(bad)
push
xchg
cmp
in
cmp
push
pop
jmp
sbb
mov
xchg
push
add
stos
ja
xchg
mov
fiadd
jno
mov
js
or
mov
add
push
mov
and
jno
lods
bnd
mov
xchg
cld
sbb
dec
inc
add
cs
push
mov
sbb
aaa
call
sbb
sub
dec
or
sbb
rcr
lahf
shr
pop
ss
xchg
mov
adc
fs
cld
(bad)
jmp
rcr
mov
cmp
and
cmc
push
out
nop
jne
loopne
mov
mov
push
cld
jg
cmp
dec
mov
or
scas
jl
dec
mov
or
mov
aam
loopne
into
ss
sar
push
xchg
stos
pop
xchg
mov
or
loop
mov
add
cwde
sbb
push
push
out
(bad)
push
ins
fild
push
dec
adc
lock
mov
arpl
mov
ja
inc
xchg
mov
push
cmp
add
pop
sar
(bad)
add
repz
xchg
mov
mov
cmp
xor
add
and
inc
in
mov
pop
pop
or
(bad)
sbb
nop
jmp
push
jne
inc
xchg
enter
pop
mov
mov
inc
xor
push
jnp
and
dec
sub
jle
fcom
cmp
mov
movs
lods
jbe
sub
pop
loope
retf
mov
fsub
pop
xor
push
fwait
mov
loope
or
test
sub
push
nop
ret
pushf
les
and
add
mov
mov
std
mov
cmps
fnsave
mov
mov
fsub
or
push
repnz
scas
imul
push
ror
add
test
xlat
xor
mov
or
loop
jl
pop
xchg
inc
fstp
enter
(bad)
cmc
lock
fild
out
shr
cmps
rcr
push
dec
iret
js
pushf
inc
sbb
push
push
cmp
out
cmp
lods
fucomip
pusha
jnp
arpl
test
or
mov
push
bound
(bad)
jmp
or
pop
lods
dec
xchg
mov
js
(bad)
dec
mov
add
or
mov
addr16
mov
pop
push
inc
daa
call
pop
xor
mov
inc
cmp
addr16
jl
inc
xor
sbb
xchg
sbb
push
pop
popa
xchg
jp
or
dec
lock
sub
fist
xor
fst
addr16
imul
mov
jo
sub
xor
sbb
loope
pop
cmp
retf
movs
push
mov
push
pushf
pop
and
not
aam
push
or
ins
ror
dec
mov
ficomp
dec
jmp
enter
in
nop
mov
mov
pusha
(bad)
and
fild
shl
sub
xchg
xor
stos
bound
sahf
test
div
test
adc
lods
lock
out
pop
fwait
cmp
xchg
pop
jecxz
mov
das
fsub
dec
mov
popf
dec
sub
leave
lahf
aaa
pop
jno
outs
hlt
mov
sub
ror
push
push
mov
inc
pop
xor
test
cld
inc
jbe
aas
fstp
push
punpckhdq
lods
hlt
jb
pop
push
test
gs
or
test
int
xor
jae
das
loopne
jno
scas
jg
mov
xchg
out
cwde
adc
cmps
mov
mov
dec
mov
ss
lahf
fsubp
jp
mov
add
arpl
(bad)
pop
sub
inc
pushf
and
sub
cmps
shl
jmp
cmc
push
push
outs
push
and
outs
stos
cmp
(bad)
sbb
mov
ror
mov
(bad)
in
inc
inc
cs
(bad)
push
push
cmp
and
test
adc
pop
ins
dec
mov
sahf
mov
imul
imul
mov
fwait
push
pop
sbb
inc
sbb
push
pushf
lock
popf
enter
xor
fs
dec
sub
ins
mov
mov
stos
jle
sti
mov
pop
sahf
pop
sbb
sub
fist
cmp
sbb
ds
ret
jmp
sub
or
aam
inc
sbb
rol
jmp
mov
mov
pushf
adc
ins
inc
fwait
arpl
push
(bad)
inc
xor
out
sub
jbe
pop
aaa
rcr
sbb
mov
fs
ret
aad
sbb
xor
lahf
xor
fmul
inc
cmp
outs
jne
ins
int3
daa
or
adc
sbb
mov
fiadd
movs
dec
lds
xchg
sub
daa
test
push
stos
sub
cwde
xchg
or
mov
mov
test
xchg
lea
pop
push
shl
daa
cmps
int3
ret
pop
cmp
push
mov
not
cwde
movs
xchg
cmp
push
es
push
or
jb
mov
fstp
cmp
ins
inc
sbb
cld
stos
adc
enter
out
nop
add
mov
push
pop
loopne
sbb
leave
add
push
cmps
(bad)
and
inc
not
shl
or
jne
mov
leave
xchg
mov
outs
push
js
xor
or
xor
xchg
addr16
xlat
call
mov
and
mov
xchg
mul
mov
push
cmp
scas
in
adc
out
call
mov
lahf
or
push
fcom
mov
int
loop
mov
daa
mov
in
cmp
and
lods
xlat
mov
xchg
int3
aaa
xor
and
mov
aas
fld
sub
jle
sub
push
dec
addr16
jmp
xchg
cs
jbe
int3
call
dec
out
xchg
mov
dec
adc
cs
jno
mov
iret
jns
push
shr
push
sub
mov
cs
out
push
xchg
daa
fnstenv
int3
repnz
sub
retf
sub
out
jnp
push
bound
push
(bad)
loope
add
(bad)
outs
xchg
xor
add
mov
sub
je
jl
pop
inc
xor
cdq
mov
hlt
shl
call
lock
int3
inc
push
mov
shr
cdq
xor
mov
outs
xlat
xor
loop
xlat
sbb
es
lahf
jg
mov
push
sbb
rcr
jge
mov
mov
stos
cmp
in
mov
cmp
daa
adc
imul
shl
cwde
fisubr
push
push
or
pop
retf
ror
mov
fs
std
mov
loopne
push
mov
dec
sub
dec
add
pop
mov
or
inc
lds
pop
jbe
sbb
push
push
add
jmp
daa
arpl
mov
add
cs
dec
jge
pushf
mov
cmp
xor
or
xchg
jnp
sbb
mov
loopne
jge
jl
popa
jo
shl
add
pushf
adc
inc
pop
xchg
dec
push
jmp
jmp
test
fild
sub
clc
dec
adc
jl
dec
xor
or
push
adc
fiadd
loopne
fst
xor
sbb
xor
inc
stc
out
loope
dec
cmp
push
mov
xchg
inc
and
scas
and
xor
add
dec
call
jae
pop
push
cs
(bad)
shr
add
ror
leave
lods
fwait
(bad)
aam
fld
scas
xchg
mul
pop
scas
icebp
mov
(bad)
fcomip
jp
nop
sub
aad
mov
mov
pop
pop
mov
push
lahf
mov
cld
cmp
fcomp
fldenv
aaa
shr
pop
mov
fadd
inc
cmp
shr
aad
xor
fidivr
paddsw
(bad)
ja
scas
push
or
xor
outs
xchg
aad
aaa
rol
sub
inc
xchg
(bad)
jl
and
dec
arpl
push
adc
add
int3
fst
xchg
loopne
jne
inc
mov
mov
jg
sub
out
lahf
mov
fistp
lahf
pusha
aad
(bad)
outs
in
ins
ror
sti
aad
inc
pop
lods
mov
jb
mov
sti
push
inc
pop
addr16
pop
fmul
repz
sti
rcl
aam
imul
or
ret
xchg
and
adc
pop
clc
cmps
pushf
add
mov
pop
retf
xor
mov
sbb
cmp
jnp
imul
xchg
add
call
out
or
mov
sti
cmp
aaa
jbe
mov
scas
mov
or
add
jns
imul
lods
lds
adc
out
stc
imul
imul
popf
(bad)
cmp
pop
stos
and
clc
call
mov
out
push
mov
ja
sbb
pop
daa
inc
pop
cmc
test
cmp
mov
in
aas
sub
cdq
jg
fdiv
enter
mov
nop
inc
inc
pushf
test
dec
push
test
hlt
push
mov
outs
xchg
loopne
mov
int3
jecxz
dec
add
xlat
xor
out
lahf
add
pop
xchg
jnp
jg
in
pop
dec
addr16
push
shl
pop
pop
scas
(bad)
and
xor
inc
test
dec
add
mov
cmp
xchg
fisttp
pusha
pop
mov
aam
dec
push
fwait
jo
push
inc
push
lea
fs
enter
mov
clc
sub
in
xor
xchg
cwde
add
jbe
or
outs
stos
movs
lahf
jmp
rol
mov
inc
lahf
into
jl
jecxz
inc
leave
icebp
xchg
jle
fldcw
cmps
mov
sbb
and
scas
pop
cmps
add
or
mov
fs
xchg
lods
push
call
stc
shr
hlt
(bad)
mov
scas
pushf
lods
ret
mov
pop
mov
cmps
out
mov
fdiv
add
mov
scas
dec
pop
and
mov
xor
lds
retf
mov
adc
push
(bad)
fild
imul
add
and
icebp
mov
pushf
jp
in
sub
inc
mov
dec
xlat
dec
mov
sahf
shl
and
add
mov
pushf
adc
pop
jnp
scas
(bad)
jae
sub
push
sub
mov
sbb
add
sar
mov
jge
sar
mov
sbb
pop
dec
mov
push
pushf
lods
aam
dec
push
add
jne
fild
bound
arpl
(bad)
adc
fsubr
nop
jl
and
out
push
out
and
lds
mov
pop
retf
ins
rcl
xlat
fadd
cwde
sbb
mov
cmp
sub
test
or
pop
out
icebp
xchg
dec
and
test
push
mov
out
outs
add
rol
leave
pop
sbb
mov
inc
test
pushf
int3
push
(bad)
hlt
stos
stos
addr16
(bad)
mov
pop
lods
daa
xchg
push
adc
dec
hlt
mov
lahf
push
and
imul
xchg
das
in
xchg
movs
sbb
test
je
stos
pop
xchg
mov
xchg
dec
test
in
retf
retf
mov
neg
ror
arpl
mov
loop
push
mov
mov
cmp
xor
retf
cmp
jecxz
outs
or
xor
push
xchg
pop
in
fisttp
or
pop
fsub
je
out
sub
push
or
sbb
jae
xor
inc
pop
sbb
popf
jno
pop
mov
xor
inc
mov
sbb
out
pop
scas
xlat
add
(bad)
or
inc
shl
mov
mul
xchg
adc
lods
xlat
jmp
push
in
sbb
jmp
int
jmp
fimul
in
ficomp
or
rcr
mov
fs
jmp
movs
fs
leave
sbb
add
outs
das
xchg
jmp
repnz
movs
mov
fs
xchg
retf
push
dec
ds
dec
dec
es
sub
fbld
jge
mov
push
xchg
add
xchg
call
xcrypt-ecb
cmps
mov
and
sahf
popf
xchg
ror
js
neg
cmc
sub
fisub
mov
inc
jg
sub
dec
mov
mov
cmp
add
in
jnp
pop
mov
mov
rol
js
inc
cmp
xchg
in
addr16
jmp
mov
out
test
sahf
xchg
shr
and
xchg
cs
jmp
ret
mov
adc
add
sbb
jae
push
mov
test
in
mov
out
loope
mov
mov
sar
cld
cmp
(bad)
jle
mov
test
adc
mov
out
repnz
out
push
xor
in
out
push
mov
rol
ds
mov
fidiv
scas
cmps
xchg
dec
fs
mov
dec
addr16
icebp
pop
mov
out
(bad)
stc
cwde
mov
xchg
mov
jne
lds
mov
push
rcr
and
aaa
push
rcl
daa
or
and
mov
neg
icebp
mov
adc
daa
lods
fcomi
add
jo
pushf
inc
aaa
dec
popa
enter
shl
repnz
mov
stos
dec
repz
xor
jo
das
call
clc
test
mov
loope
xor
stc
mov
push
out
push
cwde
mov
fisubr
fst
ror
mov
std
jno
(bad)
movs
and
ins
popa
stos
test
mov
pop
mov
call
movs
sbb
xchg
mov
cmps
daa
ror
dec
mov
xor
dec
sbb
ror
(bad)
adc
sar
sbb
lods
push
mov
cmps
ficomp
mov
scas
pop
sub
inc
pop
pop
dec
(bad)
xchg
or
sbb
mov
mov
pop
pop
cmps
sub
mov
pop
sub
nop
daa
mov
sub
(bad)
pushf
(bad)
pop
mov
jmp
pop
test
fidiv
adc
sub
sub
fldenv
paddw
into
pop
jnp
jo
inc
mov
out
push
ds
sbb
cmps
jge
mov
jae
gs
into
xor
cmp
or
(bad)
sbb
dec
sti
mov
inc
aas
(bad)
cmps
and
inc
das
pop
cmps
mov
xlat
idiv
jbe
jge
sub
xchg
lods
movs
ret
push
not
test
(bad)
loopne
dec
push
cmp
fsub
push
int3
ret
mov
pop
push
jb
adc
inc
add
inc
clc
pop
sub
retf
pop
sbb
repnz
jo
out
jp
cmp
loope
leave
sub
bound
and
cmp
cmp
(bad)
sub
jnp
or
adc
jae
cmp
push
and
lea
lea
imul
mov
sbb
adc
std
dec
stos
pop
mov
pushf
dec
jl
pop
add
mov
ds
iret
rol
pop
jg
mov
sbb
aaa
and
push
pop
cmps
or
mov
in
lock
stc
test
fwait
mov
cmp
out
push
mov
out
pop
jl
arpl
xchg
sbb
jle
or
fisttp
and
mov
popa
pop
pop
mov
dec
aaa
push
pop
jp
sbb
jg
arpl
push
jbe
jge
(bad)
adc
imul
xor
aad
and
(bad)
and
mov
ja
push
mov
int3
sub
fist
dec
mov
les
mov
pop
pop
je
lods
stc
mov
mov
mov
add
enter
cmp
xchg
aad
cmps
call
fmul
icebp
dec
or
aad
jmp
lods
mov
out
cdq
call
adc
xchg
test
xchg
mov
adc
lock
pop
dec
les
mov
push
jmp
hlt
pop
fcomp
push
or
jg
push
dec
rol
push
pop
jo
xchg
sub
dec
cmp
pop
mov
(bad)
into
xchg
daa
xlat
sub
push
mov
pop
fcmovnu
(bad)
sub
xchg
or
mov
movs
ss
push
push
stos
push
jecxz
fisubr
idiv
xchg
sahf
rol
adc
inc
pop
pop
pop
lea
hlt
sbb
xchg
ja
mov
push
xchg
lea
sub
sar
xchg
dec
aad
and
pop
int3
jl
aam
ficomp
jae
mov
dec
jge
in
gs
sbb
shl
in
mov
imul
popf
add
pop
and
(bad)
in
scas
ror
outs
cs
xor
lods
push
rcr
popa
es
das
loope
jo
and
ins
out
jne
ins
scas
stc
shl
outs
pop
or
xchg
cdq
call
ins
ret
add
inc
(bad)
and
dec
pushf
add
test
repz
or
add
mov
loop
mov
or
push
fstp
cs
push
jmp
sub
adc
xchg
mov
or
add
add
push
pmaxub
shl
xchg
leave
mov
fdiv
pop
ficom
or
jp
retf
cli
jmp
pop
and
ss
or
out
push
call
aaa
in
out
(bad)
jge
sahf
inc
loope
aad
out
in
stos
rcr
and
(bad)
and
sbb
repnz
rcr
ja
mov
fistp
sbb
pop
movs
push
inc
mov
and
pusha
cmps
inc
dec
xor
jl
shr
stos
mov
rcl
fwait
hlt
sahf
adc
pop
mov
ficomp
add
int3
int3
ror
std
lods
stc
sbb
sbb
ror
loop
movs
jo
push
adc
push
dec
int3
(bad)
mov
mul
dec
rep
pusha
push
mov
data16
mov
or
push
jp
ficom
bswap
rcr
mov
inc
loop
in
cmp
pushf
jno
or
pop
cli
in
popf
jp
add
fcomp
push
pop
mov
ins
call
bound
pop
sbb
mov
aad
mov
mov
outs
sbb
pop
push
cmp
jno
stos
les
sbb
push
arpl
sahf
sbb
jecxz
and
rcl
out
nop
js
ins
inc
ins
sub
(bad)
mov
movs
sbb
sbb
xor
xchg
push
lock
sub
arpl
xor
fild
dec
pushf
scas
lods
adc
in
mov
out
jae
inc
cmp
xor
pop
ffreep
int3
push
popf
sti
mov
mov
outs
sub
movs
dec
(bad)
jno
sbb
sub
mov
pop
pop
aad
sbb
mov
bound
or
call
pushf
loope
loopne
or
loopne
call
pop
mul
int3
stos
add
pop
mov
jmp
cmc
enter
mov
push
sahf
dec
mov
lock
enter
adc
(bad)
sbb
mov
(bad)
xlat
lahf
inc
mov
aam
xor
les
cwde
ja
pushf
mov
sub
add
pop
push
cmp
cmp
mov
and
jmp
aam
dec
(bad)
mov
sub
add
(bad)
pushf
cld
pop
push
xor
loopne
sbb
call
je
mov
enter
test
cmps
pushf
and
pop
jnp
push
xchg
hlt
pushf
push
push
dec
cld
shl
jmp
dec
xchg
mov
shr
dec
mov
push
jecxz
enter
into
aad
lock
inc
mov
xlat
or
aaa
lods
mov
xlat
lahf
mov
push
movs
out
mov
mov
adc
mov
ror
js
(bad)
fsin
in
(bad)
jmp
xchg
push
mov
sbb
fnop
pop
xor
movs
in
stc
mov
sbb
gs
jae
dec
push
pop
pop
jae
mov
pop
sahf
imul
and
push
push
dec
ja
fimul
test
cmp
adc
mov
sbb
rep
hlt
leave
movs
and
or
jb
sbb
sbb
jp
and
push
stos
repnz
pop
jle
sti
add
cmps
sbb
pop
mov
shl
loop
(bad)
xor
aam
mul
pushf
sahf
add
pop
pop
jmp
sbb
je
pop
jno
inc
stos
xchg
addr16
inc
xchg
bound
mov
int
test
jmp
mov
mov
push
xchg
test
mov
inc
mov
add
enter
mov
push
pop
in
out
cld
sbb
xor
add
out
and
fdivr
push
pop
pop
jmp
xchg
push
xor
je
and
xchg
out
xchg
jg
movs
test
ss
pushf
ins
sbb
ja
mov
push
mov
mov
cld
imul
rol
(bad)
xchg
pop
popf
retf
add
add
aam
sbb
xchg
in
and
adc
scas
leave
(bad)
loopne
lahf
movs
mov
fs
sar
retf
cmp
mov
dec
xchg
into
jle
sar
mov
mov
cmp
fadd
out
loopne
xchg
adc
jl
adc
cmp
dec
fstp
leave
ret
xchg
push
jmp
icebp
pusha
xchg
fimul
push
push
pop
mul
push
inc
jl
lds
xchg
not
mov
mov
sub
stos
xchg
jae
mov
inc
(bad)
addr16
xchg
dec
leave
add
in
aaa
adc
mov
mov
stc
jae
mov
dec
cmp
dec
dec
ret
sbb
inc
aas
adc
enter
and
xchg
mov
mov
scas
xor
push
inc
xor
push
in
or
rcr
imul
sti
lods
or
sbb
(bad)
stc
sub
ins
pop
stc
fwait
jmp
mov
popa
and
jo
loopne
xchg
out
xchg
mov
cmp
sti
les
js
or
push
fucomp
inc
(bad)
sbb
push
mov
pop
xor
push
mov
daa
or
and
adc
mov
adc
push
pop
sbb
mov
sbb
mov
pop
loop
pop
adc
add
dec
inc
dec
jnp
clc
jge
cmp
sub
(bad)
inc
arpl
pop
mov
clc
sub
mov
addr16
push
fiadd
add
mov
sub
pop
xor
daa
push
xchg
out
and
adc
pop
aaa
mov
jno
sub
lock
ss
jne
dec
xor
and
les
imul
enter
pusha
out
mov
jp
sbb
lods
pushf
adc
ret
push
nop
fcmovbe
xor
push
mov
inc
int3
xchg
inc
int3
xlat
(bad)
push
mov
mov
pop
dec
mov
pop
mov
call
(bad)
add
add
(bad)
cmp
sbb
fdiv
daa
mov
pop
push
inc
hlt
ins
out
popf
aad
(bad)
jge
pop
pop
stos
ds
sub
jmp
adc
xchg
xor
mov
push
sbb
push
mov
int
idiv
icebp
test
or
jp
xor
adc
cmp
js
stos
sbb
outs
scas
out
mov
jns
imul
lock
jmp
xor
fnstenv
out
xor
int
popa
mov
in
cmps
xor
add
movs
(bad)
sbb
and
ins
outs
push
loop
icebp
fmul
xor
inc
add
push
pushf
lea
loope
fist
test
push
mov
sbb
xor
test
mov
test
arpl
or
add
movs
cwde
into
rcr
push
gs
movs
imul
loopne
pop
scas
lods
xor
test
rcr
mov
or
push
arpl
mov
cmp
call
in
and
push
fbld
push
in
and
aam
aas
(bad)
xlat
dec
push
pushf
mov
outs
inc
cmp
jmp
push
arpl
jmp
pop
outs
(bad)
(bad)
out
xchg
das
or
ds
xchg
dec
or
stc
dec
adc
and
adc
sbb
gs
add
or
aas
cwde
(bad)
push
push
icebp
popa
and
xchg
inc
(bad)
in
or
and
cmps
mov
ja
mov
add
std
pop
nop
pop
mov
cmp
shr
mov
loope
or
or
mov
mov
pop
dec
test
scas
ficomp
push
std
jp
stos
and
jnp
fcmovb
inc
pop
lods
arpl
mul
(bad)
inc
lods
cdq
les
loop
nop
sub
out
push
mov
(bad)
out
dec
aaa
xlat
xchg
(bad)
sub
xchg
aas
inc
mov
fsub
int3
pop
int
mov
mov
es
pop
hlt
ins
xor
mov
fdiv
out
cmp
xchg
pop
mov
adc
(bad)
fcmovnb
pop
(bad)
jo
(bad)
retf
icebp
and
add
stos
mov
in
mov
out
or
sahf
mov
das
pushf
pop
xlat
(bad)
in
scas
mov
scas
outs
hlt
or
mov
cs
xchg
xlat
pop
int
mov
repnz
mov
add
jle
mov
das
leave
(bad)
stc
adc
sub
dec
cmp
pop
and
popf
ror
inc
dec
pop
mov
xor
je
sbb
(bad)
and
sub
xrelease
adc
shl
dec
leave
dec
aad
mov
in
push
leave
ss
and
xor
cs
sbb
jecxz
ja
cmp
movs
xor
ins
ds
(bad)
js
dec
pop
adc
sbb
jne
cmp
cmp
sti
outs
inc
add
daa
inc
cmp
sahf
popa
xchg
(bad)
outs
cwde
dec
aam
push
jb
push
imul
shl
push
sbb
or
and
jmp
xor
pop
pushf
ror
cld
xor
xchg
inc
pop
test
shr
mov
mov
jge
mov
scas
jmp
push
mov
push
jnp
mov
jno
js
loop
or
inc
aam
imul
sub
sub
mov
mov
mov
xor
dec
inc
sbb
and
jle
xchg
aam
into
repnz
add
and
and
jne
xchg
in
jns
and
mov
fs
mov
out
repnz
loopne
sub
jecxz
ja
lahf
xor
sub
mov
in
imul
inc
inc
pop
push
(bad)
and
mov
pop
mov
mov
call
cmp
pop
sub
dec
add
and
out
push
jnp
adc
dec
pop
mov
pop
dec
jbe
fs
fcomp
push
scas
shl
loop
inc
scas
jns
test
test
sbb
daa
dec
pop
jle
dec
shl
out
int3
xor
sub
addr16
pop
(bad)
shr
mov
retf
les
test
push
xchg
jnp
ret
adc
adc
adc
shl
pop
pavgw
retf
dec
cmp
adc
div
sub
sbb
mov
jnp
iret
fldcw
push
in
pusha
scas
bound
pop
(bad)
(bad)
sub
daa
xchg
fcomp
inc
inc
ds
gs
stos
push
xor
std
push
xor
adc
dec
(bad)
arpl
shl
or
and
stos
pop
scas
adc
inc
call
jmp
inc
lock
loop
into
pop
rcr
cmps
pop
push
pop
dec
xchg
mov
pop
push
mov
push
add
xlat
jne
popa
cmc
adc
pushf
dec
mov
aam
cmc
inc
std
push
fsub
int3
fdivp
and
xchg
push
sbb
sub
sbb
js
sbb
inc
adc
inc
daa
lods
lock
xor
jo
xchg
add
mov
push
mov
push
inc
pop
jmp
xor
int
mov
je
fs
ror
les
pushf
sub
cmps
mov
xchg
pop
lea
std
and
jns
mov
std
fnstenv
cmp
pop
cmp
push
xchg
cmc
out
mov
shr
sub
pop
jbe
push
adc
stos
sar
adc
jmp
push
(bad)
out
mov
xor
pushf
xcrypt-ecb
cmps
or
xchg
rcl
and
out
cs
nop
or
sub
xor
and
icebp
stos
mov
ror
test
cwde
mov
in
mov
and
movs
push
ficom
sbb
xchg
xor
int
shr
push
add
outs
push
push
dec
mov
jecxz
sar
xchg
jne
loope
pop
jo
out
stc
cmp
int
add
xchg
lea
(bad)
adc
inc
test
jo
xor
add
xchg
mov
or
dec
lds
leave
push
cmp
pop
into
mov
jl
add
sbb
push
fadd
imul
fadd
movs
(bad)
into
pushf
loopne
jb
mov
addr16
mov
jl
aas
pop
ss
dec
mov
cmp
out
jg
inc
mov
add
out
sar
test
and
(bad)
hlt
mov
out
fisubr
jnp
lock
mov
mov
and
(bad)
sbb
xor
jo
movs
mov
clc
sbb
add
gs
and
fnstcw
cmp
xor
add
movs
or
jbe
sub
jp
aaa
inc
test
call
adc
sbb
out
scas
push
sbb
arpl
xor
lock
jmp
mov
jge
je
cmp
cmps
pop
rol
pop
fist
add
adc
sbb
adc
inc
rcl
into
cld
inc
pop
lahf
rcr
push
scas
loop
mov
dec
aas
push
mov
jmp
jb
jnp
lds
push
fs
loop
iret
mov
mov
xor
pop
push
pop
xchg
sub
mov
inc
push
pop
aam
mov
aaa
aaa
xchg
mov
neg
xchg
pop
test
stos
dec
aaa
jmp
gs
out
xor
inc
les
mov
mov
(bad)
jne
fistp
sbb
scas
mov
inc
cmp
sbb
pop
push
inc
int
and
clc
sahf
pop
imul
cs
(bad)
jmp
popa
stos
into
or
sub
sub
jge
push
test
mov
dec
cs
call
mov
xchg
inc
xchg
popf
(bad)
mov
loopne
int3
pop
in
cmp
lods
je
sahf
sub
or
push
xchg
jbe
mov
jnp
dec
lds
shl
push
mov
fsub
sbb
outs
mov
stc
mov
mov
add
test
or
adc
pop
cdq
sbb
fld
retf
mov
or
inc
xlat
mov
lock
sub
fist
or
jae
cmp
ret
lock
(bad)
mov
mov
imul
inc
push
sbb
mov
cmps
in
xchg
jbe
xchg
mov
test
sub
dec
mov
ret
sbb
push
nop
ins
and
xchg
cwde
(bad)
jg
jg
into
xor
cdq
xchg
sahf
push
rcl
je
cmp
or
or
mov
fadd
xchg
retf
dec
imul
cmp
pop
xor
daa
sbb
jae
adc
mov
leave
ins
inc
xor
jnp
scas
cdq
cmps
mov
dec
movsx
jb
mov
and
nop
sub
inc
cmps
cmp
sbb
push
ret
imul
dec
xchg
gs
test
xor
dec
arpl
sub
sub
xor
sbb
(bad)
push
(bad)
cld
inc
and
mov
fadd
inc
and
mov
cmp
jecxz
and
mov
ins
adc
add
pop
mov
jne
mov
xor
(bad)
jl
je
in
mov
rcr
movs
sbb
shl
push
push
scas
loopne
psubusb
add
sub
ja
mov
xor
sub
dec
add
test
sbb
pop
mov
sbb
mov
cs
push
pusha
push
sub
fscale
dec
inc
(bad)
shr
fadd
add
cwde
or
mov
into
inc
inc
push
sti
add
fcmovne
and
sub
dec
jecxz
inc
jae
jb
dec
call
ret
mov
inc
mov
mov
jbe
jmp
test
scas
lock
fdivr
and
xchg
outs
stc
jnp
nop
mov
pop
rcl
stc
fst
addr16
adc
jecxz
inc
mov
dec
pop
xlat
pop
lds
xor
shr
push
jecxz
inc
xlat
mov
enter
mov
mov
test
outs
loope
cmp
xchg
jnp
jnp
add
or
cwde
sub
(bad)
pop
test
retf
cs
xchg
lods
pop
mov
imul
enter
push
xlat
lods
(bad)
out
icebp
leave
xchg
lock
sub
(bad)
sub
add
inc
lods
push
daa
addr16
push
add
inc
inc
mov
pushf
div
xchg
xchg
js
dec
inc
enter
or
(bad)
enter
xchg
jno
mov
xor
fadd
loop
pop
or
fisub
mov
jae
stos
pop
push
pop
les
or
xor
loopne
and
(bad)
or
and
scas
mov
sub
div
fsub
(bad)
test
jge
xor
inc
test
xchg
hlt
mov
mov
cmp
mov
shl
out
mov
fucomp
inc
inc
das
mov
jmp
adc
sub
mov
mov
adc
xchg
arpl
loop
cmp
dec
mov
mov
mov
ja
fcomp
push
stc
and
test
in
jae
nop
stc
and
daa
mov
xor
int
xor
test
or
daa
ret
test
shl
arpl
pop
xlat
sbb
aad
mov
std
lods
aad
jge
mov
add
arpl
mov
pop
sub
cli
push
arpl
cmc
out
inc
pop
out
shr
mov
imul
(bad)
jmp
int3
out
push
cmps
and
jl
push
(bad)
cld
push
adc
(bad)
loopne
stos
iret
bound
test
mov
xor
dec
pop
sbb
inc
xchg
dec
push
sub
jbe
xor
or
in
inc
dec
cmp
mov
cmps
(bad)
sahf
scas
retf
inc
stc
mov
stos
jno
xor
inc
aam
aam
xlat
pop
loope
jnp
(bad)
mov
rol
(bad)
fisub
xor
or
or
jmp
rcl
loop
sbb
cdq
jmp
pop
lea
dec
jnp
cld
push
dec
ins
mov
fsubr
jle
std
dec
stc
mov
fucomip
cmp
ins
ficomp
inc
cmp
movntps
and
in
mov
ins
nop
lock
sub
pop
and
push
lods
mov
sbb
jo
pushf
xor
ror
xor
jl
(bad)
shl
and
pop
pop
mov
mov
pop
pop
(bad)
rcl
test
push
push
addr16
fstp
push
sub
inc
xor
lods
dec
lods
or
lods
retf
movs
ja
data16
in
add
fsub
fwait
(bad)
jl
shl
sub
mov
sbb
loop
nop
xchg
mov
cmp
imul
xchg
sbb
xchg
sbb
test
mov
xor
adc
sbb
cmp
test
mov
std
dec
jl
aaa
retf
mov
xlat
adc
sub
jmp
fwait
arpl
jecxz
pop
sub
addr16
pushf
push
daa
loop
add
push
je
push
jl
(bad)
pop
add
arpl
inc
pop
push
cmp
popa
adc
or
div
ja
mov
shr
jge
sub
mov
sbb
jmp
into
sub
repnz
sti
dec
cmp
push
sbb
xor
loopne
aaa
mov
pushf
jmp
sbb
outs
fist
adc
test
add
mov
xchg
out
pop
arpl
pop
push
and
jecxz
shr
scas
test
add
adc
push
jnp
pop
inc
(bad)
jecxz
xlat
ds
fincstp
loope
pop
(bad)
nop
arpl
(bad)
push
pusha
cmc
popf
jne
out
push
int
push
cmp
(bad)
sar
mov
ret
adc
(bad)
loopne
jo
es
mov
sbb
push
cmp
fwait
add
mov
les
ret
or
addr16
adc
sbb
mov
outs
rol
imul
sub
push
rcr
push
test
pushf
lea
dec
xor
sar
shl
mul
cdq
adc
arpl
mov
push
lahf
ror
add
cwde
xchg
mov
out
int3
mov
push
ficom
or
add
das
nop
pop
sub
fistp
jl
xor
pop
sbb
mov
xor
into
sti
sub
cs
or
std
retf
cmp
jmp
pop
test
pop
dec
mov
ss
fistp
adc
push
sub
xchg
mul
dec
(bad)
leave
cmp
xchg
pop
mul
int
add
inc
push
rol
dec
stos
aam
mov
sbb
sub
dec
adc
push
push
sub
push
push
cs
loopne
pop
loop
lock
mov
add
pop
mov
jns
mov
(bad)
mov
(bad)
sbb
in
call
jnp
xchg
pop
call
inc
jecxz
push
inc
mov
xchg
fprem
lock
dec
dec
pop
data16
inc
ror
jno
shr
sbb
adc
pop
jnp
cmp
clc
push
or
les
xor
jbe
jb
in
dec
adc
sbb
repz
xor
push
cld
retf
adc
or
adc
pop
add
out
mov
xchg
shl
rol
fidivr
mov
and
iret
fbstp
add
add
scas
jno
loopne
nop
rcr
mov
je
loop
jb
mov
mov
cmp
std
icebp
push
mov
test
fmul
push
mov
add
pop
shr
mov
test
shl
dec
cmp
add
xchg
outs
daa
mov
jb
sbb
popa
and
adc
lock
mov
sbb
pushf
cdq
mov
dec
mov
dec
sub
ja
lea
(bad)
push
fcmovne
rol
jp
xor
adc
pop
mov
pushf
repnz
addr16
mov
cmps
fsub
and
push
mov
push
and
aam
dec
sbb
jmp
ins
repnz
mov
in
mov
push
jmp
inc
push
mov
push
xchg
iret
stos
xor
ins
shr
gs
clc
pushf
loopne
xchg
nop
push
cmp
mov
sub
lock
rol
mov
and
sub
outs
icebp
aaa
adc
mov
cs
test
or
sub
je
push
xor
repz
icebp
arpl
(bad)
xchg
rol
push
rol
mov
aas
adc
fwait
cmp
add
cmps
ret
imul
inc
out
inc
sahf
inc
rcl
push
ds
sbb
mov
adc
push
inc
push
in
inc
jno
mov
sbb
les
sbb
in
jne
add
aam
addr16
or
adc
xchg
ror
jmp
jbe
ror
push
nop
lahf
pop
(bad)
stos
sbb
std
jmpw
out
cmp
cwde
mov
aad
into
in
(bad)
xor
(bad)
fdiv
inc
cmc
add
sbb
std
push
das
jmp
inc
mov
and
inc
jg
mov
mov
cld
push
dec
inc
pop
test
push
pushf
dec
loopne
and
and
outs
ret
fmulp
clc
ja
mov
inc
pusha
xor
add
loope
mov
test
mov
or
movs
mov
hlt
stos
jo
inc
aam
repz
and
mov
out
clc
dec
loopne
mov
mov
push
mov
sub
dec
mov
adc
lahf
and
outs
imul
in
ins
xor
rcr
ret
das
inc
jle
ret
fnsave
ds
cmp
std
mov
mov
out
dec
call
pop
sbb
pop
inc
mov
lea
inc
(bad)
aas
stc
xor
inc
xchg
cs
int3
jmp
add
js
cmp
scas
or
sbb
adc
xchg
jns
(bad)
mov
sahf
push
fstp
cmp
in
fidiv
loope
stc
loopne
ficomp
mov
xchg
or
aam
dec
cpuid
jl
adc
push
(bad)
sbb
add
pop
pop
loope
dec
xchg
lods
or
shl
jge
mov
lods
add
ja
sbb
stos
test
retf
rol
dec
inc
sub
add
dec
gs
mov
lock
mov
cld
mov
push
or
retf
mov
hlt
fcom
adc
adc
pop
(bad)
or
jno
ret
sub
cmp
nop
sbb
mov
lods
xchg
adc
in
push
(bad)
jnp
push
and
sar
dec
pusha
jg
cmp
test
retf
fild
in
fcom
loopne
retf
push
dec
mov
in
or
jns
adc
push
sub
cli
jecxz
pop
or
inc
or
jmp
fs
pop
stos
xchg
jne
cmc
mov
lock
cld
push
pop
cmp
fmulp
shr
mov
(bad)
clc
cvtps2pi
sub
sub
movs
mov
repnz
cmp
loop
fcomp
das
shl
add
inc
pop
ret
dec
sub
xchg
stos
push
shl
stos
rcl
mov
mov
int3
ds
fist
in
inc
out
test
pop
int3
xchg
mov
lock
add
or
pop
into
call
test
lods
loop
jg
stos
adc
int3
test
sub
or
fcmove
dec
call
cmp
push
mov
cmps
mov
pop
out
sahf
pop
push
lock
mov
add
pop
mov
mul
mov
cmp
pop
and
pop
lahf
xchg
xor
mov
push
fwait
push
retf
frstor
add
aad
sbb
stos
pop
adc
scas
xchg
xlat
data16
clc
mov
adc
sub
ds
sar
xor
mov
mov
mov
inc
push
pop
mov
sahf
sti
sbb
xchg
mov
jmp
mov
add
add
push
gs
xor
pushf
loope
push
inc
xlat
pcmpeqd
fcmovbe
ins
(bad)
adc
bound
div
shl
neg
sbb
loopne
push
(bad)
call
data16
mov
je
call
push
out
ret
outs
sub
stos
(bad)
xchg
pop
xchg
daa
ror
neg
mov
jmp
push
ret
movs
out
pop
cwde
fsub
mov
not
cwde
sbb
ret
les
stos
push
daa
in
fist
adc
xchg
sbb
in
xor
jecxz
and
cmc
mov
mov
rol
fwait
jmp
push
out
loope
push
(bad)
inc
mov
rcr
push
mov
daa
mov
xor
adc
pushf
sbb
popa
jg
adc
inc
mov
push
push
add
push
or
inc
repnz
xor
xchg
cmps
cs
pusha
mov
and
cmc
or
outs
mov
lock
inc
sub
sar
sbb
fisubr
dec
inc
dec
addr16
call
sbb
sbb
loop
pop
test
(bad)
shr
(bad)
ficomp
mov
or
push
js
jnp
aas
push
pop
mov
and
gs
or
sub
jle
stos
fs
mov
pushf
loopne
sbb
ja
mov
shr
adc
cld
cwde
fimul
ds
shr
adc
inc
ficomp
sahf
stos
add
jecxz
(bad)
out
xchg
and
xor
(bad)
jmp
out
or
mov
xchg
fcmovbe
dec
and
lds
adc
popf
test
daa
jbe
inc
fcomi
push
mov
mov
shr
inc
sub
imul
out
xchg
rcl
sbb
push
adc
xchg
repz
or
and
adc
dec
mov
dec
mov
(bad)
mov
(bad)
xchg
dec
ins
repz
loope
dec
push
or
mov
popf
jge
jle
imul
mov
inc
mov
pop
movs
ja
nop
les
mov
loope
sahf
pop
pop
add
mov
mov
neg
fcmovnu
aam
add
popf
pop
aam
outs
mov
jo
sbb
dec
add
xchg
int3
adc
ja
ds
mov
test
push
nop
cmp
mov
(bad)
cmp
and
imul
pop
and
gs
fldcw
adc
cmc
adc
jb
jb
cmp
aas
shl
lods
inc
dec
aam
pop
ficomp
push
sbb
add
aas
stos
lea
push
loopne
mov
dec
call
mov
js
push
call
pop
loopne
repz
jnp
xlat
add
cdq
jo
rep
adc
scas
cmp
sub
pop
stc
cmp
mov
mov
lock
outs
sbb
push
rol
dec
sti
jno
ret
sbb
jns
iret
fcomp
sub
pop
add
ins
sub
jno
imul
adc
add
pop
cmp
dec
(bad)
or
mov
push
adc
jnp
sub
jnp
push
aaa
int3
stos
or
call
loop
jmp
dec
ins
mov
out
mov
push
xchg
xor
lock
movs
ins
ror
sub
sbb
mov
mov
cmp
aad
mov
xor
jl
jl
mov
mov
ins
lds
aam
cmp
xchg
pushf
adc
mov
adc
jo
pop
(bad)
pop
enter
in
pop
jecxz
jge
leave
mov
ja
push
xor
out
fidiv
not
ret
lds
cmp
shl
daa
push
sbb
popf
or
cmp
push
fwait
arpl
jo
jmp
(bad)
pop
mov
aad
lea
ins
fwait
sub
pop
jmp
nop
add
sub
inc
or
(bad)
call
(bad)
neg
dec
mov
sub
sub
loope
(bad)
xlat
mov
jmp
or
cmp
mov
mov
sub
dec
push
push
mov
aaa
aam
out
(bad)
pushf
(bad)
bound
xchg
call
jmp
pop
inc
xor
and
and
adc
mov
sbb
add
sbb
and
in
mov
loop
mov
mov
int3
cmps
pop
enter
cs
pushf
jge
dec
adc
aad
aad
out
adc
jo
inc
sub
add
arpl
fcomip
xor
push
xlat
aaa
add
cmps
sbb
push
pop
dec
jnp
xlat
sbb
mov
clc
out
or
inc
and
bound
test
push
push
mov
test
push
pop
aaa
daa
push
sub
fisttp
daa
cmp
add
out
xor
fistp
daa
in
sahf
stos
mov
sbb
sub
fadd
into
mov
pushf
(bad)
(bad)
mov
mov
pop
xor
(bad)
sbb
fs
inc
popa
dec
jns
xor
test
push
pushf
std
test
int
pop
mov
popf
movs
pop
or
stc
retf
mov
inc
fwait
jmp
inc
mov
pushf
dec
jecxz
iret
push
mov
pop
data16
push
out
pop
push
hlt
loopne
dec
stos
fwait
in
sbb
or
es
sub
je
mov
xor
mov
jle
popa
sub
popf
xchg
out
pop
jae
xchg
adc
adc
leave
pop
mov
(bad)
aad
jl
enter
lea
fwait
shl
add
out
push
mov
loopne
add
cwde
call
adc
inc
hlt
dec
fadd
adc
dec
std
inc
inc
jno
gs
pop
es
test
add
pop
dec
(bad)
(bad)
sbb
pop
dec
push
dec
loopne
cmps
dec
call
push
mov
das
cdq
jo
mov
mov
cmp
movs
les
mov
mov
lahf
shl
int3
mov
inc
xor
pop
ss
imul
sbb
push
inc
mov
or
push
adc
adc
jg
fdiv
push
cmp
mov
repnz
xchg
ret
pop
or
add
mov
jbe
not
es
in
scas
or
ror
mov
xor
test
sahf
push
push
inc
rcr
pop
dec
mov
add
mov
and
imul
out
fsub
sub
inc
mov
pop
cdq
mov
out
mov
jae
add
mov
fwait
outs
mov
dec
push
xlat
push
das
imul
aam
sbb
sub
loop
or
cmp
arpl
loop
je
adc
sti
gs
jbe
pop
push
shl
test
pop
inc
loopne
aad
jo
ficom
push
and
pushf
or
mov
mov
sbb
aaa
out
cwde
sbb
mov
push
and
shl
push
mov
adc
adc
mov
sbb
pusha
(bad)
(bad)
dec
xchg
pop
adc
push
cmc
mov
int3
ret
sbb
sbb
push
dec
mov
(bad)
lods
and
daa
rcl
dec
ins
xchg
sub
xchg
inc
inc
xchg
cmp
fucomi
xchg
jb
imul
aaa
ret
lsl
shr
and
xchg
das
arpl
mov
push
ret
in
shl
fcom
mov
test
shr
jo
es
push
cmp
and
sub
jg
popf
push
addr16
mov
sub
call
cmp
pop
cmps
sub
push
sahf
arpl
bound
nop
mov
scas
std
mov
jmp
test
in
pop
and
add
lahf
cmp
xor
ror
jo
mov
neg
aaa
(bad)
daa
in
push
push
fisubr
cmp
push
mov
or
call
dec
std
xchg
jge
ins
(bad)
fnstsw
push
adc
fdiv
mov
mov
mov
mov
fsub
mov
fisub
pop
and
loope
fist
aas
add
sar
fs
jle
mov
(bad)
out
pop
mov
loop
push
aas
mov
mov
cmp
(bad)
mov
addr16
jno
sub
cld
pop
dec
popa
int3
nop
mov
push
mov
mov
and
loopne
mov
push
sub
adc
sbb
xor
add
in
jle
pop
in
adc
adc
fwait
test
lods
and
jns
scas
loope
in
fcomp
int3
adc
inc
iret
sbb
jle
(bad)
adc
push
mov
fst
lea
dec
call
gs
cdq
dec
xchg
mov
jge
idiv
data16
pusha
add
push
pop
xchg
mov
popf
in
jecxz
out
dec
loopne
stc
cli
mov
retf
sbb
mov
xor
cwde
dec
stos
out
mov
call
sbb
popf
mov
jp
dec
cmps
mov
fwait
pop
movs
inc
stos
mov
in
jnp
xchg
push
mov
mov
push
xor
mov
sbb
jmp
addr16
je
push
(bad)
dec
mov
add
fnsave
pushf
pop
fcmovnbe
xor
addr16
dec
sti
and
not
push
les
sbb
cmp
dec
cmps
sub
cmps
mov
lods
test
or
dec
fmul
ins
aaa
cmovs
sub
sti
imul
push
daa
fld
pop
sbb
inc
jae
mov
hlt
(bad)
cmp
cmp
test
(bad)
sub
icebp
mov
out
lods
popf
aaa
mov
mov
add
cmc
push
in
repz
fild
dec
aaa
(bad)
in
push
and
cmp
adc
pop
jnp
push
inc
in
inc
mov
jmp
out
ins
ss
stc
xlat
dec
cli
test
(bad)
add
inc
cmp
pop
mov
fst
dec
(bad)
jl
pop
mov
mov
and
imul
rcr
xlat
xor
jmp
xor
push
in
test
loopne
rcl
sub
dec
xor
dec
in
sti
into
xor
pop
sbb
jp
shr
jbe
fwait
push
int3
ret
xor
cwde
call
pop
movs
push
stos
add
xor
cmp
xor
fwait
call
inc
add
jl
(bad)
call
(bad)
and
test
repnz
inc
mov
mov
inc
aaa
es
mov
dec
push
iret
aas
sbb
inc
mov
neg
jne
aaa
pop
xchg
or
push
jge
dec
arpl
fucompp
lods
in
mov
xor
into
in
xor
fcomi
push
push
jmp
pushf
rcr
ret
mov
and
mov
jg
xchg
jmp
add
xchg
cmp
ret
out
or
dec
jno
lock
mov
test
stos
add
add
xchg
cld
inc
adc
dec
dec
es
dec
mov
inc
xchg
lahf
(bad)
mov
setae
cmp
bound
(bad)
and
fldln2
jb
mov
nop
pop
out
xchg
mov
fs
add
push
adc
out
mov
dec
loope
cmp
rcr
inc
cwde
xor
dec
aam
add
sub
call
js
rcr
dec
cmp
mov
xchg
sbb
fdiv
mov
(bad)
(bad)
dec
add
or
(bad)
mov
sub
icebp
sub
in
pop
stos
push
int3
push
sbb
dec
add
push
sub
pop
xor
xor
imul
sbb
shr
int3
rcl
push
cdq
test
cdq
fwait
stos
popf
cmp
(bad)
shr
and
pop
push
mov
(bad)
mov
test
cmp
dec
ret
lahf
out
test
and
es
(bad)
aaa
sub
mov
pop
dec
cmc
adc
jb
pop
loop
(bad)
sub
cmp
out
push
in
in
jl
cmp
or
test
bound
and
mov
shl
test
ds
sbb
jno
pop
mov
mov
mov
sub
retf
pop
add
pop
rcr
pop
dec
xchg
into
mov
scas
mov
jae
ffreep
shl
push
dec
mov
pusha
cwde
or
ja
bound
loop
(bad)
and
pop
rol
sub
imul
mov
cmc
inc
sbb
js
jle
mov
aaa
rol
or
nop
or
inc
shl
push
fild
pushf
mov
outs
mov
adc
lock
adc
push
mov
dec
(bad)
xor
cli
call
jo
daa
inc
fdiv
cmp
outs
adc
jmp
inc
jo
ret
es
and
es
jmp
pushf
pop
push
sbb
aad
push
pushf
fbld
test
test
and
sub
pushf
dec
es
mov
inc
and
inc
test
mov
imul
stc
cmp
lods
sub
jae
mov
cmp
repnz
sub
inc
rol
cdq
ja
ins
jb
(bad)
and
mov
cmps
cmps
inc
pop
loope
out
test
bswap
js
jmp
or
ret
jno
(bad)
cld
out
loopne
sub
and
out
(bad)
out
scas
push
(bad)
fwait
pop
dec
retf
mov
fcom
in
out
mov
pop
jns
test
les
fstp
mov
ds
jp
movs
adc
cmp
idiv
push
mov
out
pop
cmp
inc
mov
gs
ror
dec
mov
aam
mov
jmp
jb
dec
stos
mov
outs
es
inc
idiv
mov
(bad)
hlt
or
pushf
fmul
(bad)
mov
aaa
sub
in
daa
pop
inc
push
mov
cmp
sbb
cwde
jecxz
ja
retf
add
cmp
and
lds
and
sbb
mov
loope
ret
and
jbe
dec
inc
gs
(bad)
imul
addr16
pop
fistp
enter
jge
mov
add
cmp
mov
call
cmp
and
mov
icebp
xchg
sbb
out
mov
mov
dec
sub
mov
leave
pop
jmp
xor
jl
rcr
ds
popa
cld
mov
push
add
shl
mov
movs
leave
pop
add
test
and
push
mov
out
xchg
shr
jbe
pop
cmps
lea
sub
test
bound
mov
mov
add
pop
data16
mov
or
shl
or
popa
daa
popf
dec
pop
add
sbb
ins
cmp
ins
rol
jge
sti
jge
outs
stos
movs
shl
xchg
rcl
mov
push
or
mov
fsub
and
idiv
mov
stc
in
mov
and
sub
jge
rcl
push
fisubr
inc
jnp
pop
inc
and
test
add
xchg
cmp
jmp
jb
dec
in
int
int3
loope
inc
sub
mov
ins
daa
xchg
cmp
xchg
inc
int
cmp
dec
jmp
xor
xchg
mov
and
xchg
mov
rcl
cli
sub
into
push
dec
out
cmp
add
pop
and
aam
push
rcl
push
jg
sbb
push
inc
sub
xor
sbb
xchg
mov
adc
xchg
mov
jle
cmp
jmp
adc
(bad)
fidivr
lock
movs
js
outs
and
add
lods
pop
add
fcom
dec
call
sub
or
pop
cmc
mov
sbb
vcvttss2si
call
outs
int
and
push
call
mov
or
aam
loopne
or
and
or
xchg
xor
icebp
xchg
sbb
adc
dec
lahf
popa
inc
rol
dec
je
js
xchg
push
fnstenv
loop
mov
std
fimul
and
aam
ds
ret
fldcw
sti
pop
pop
pop
sbb
mov
ret
sub
jne
stos
xchg
cmp
sar
jecxz
stc
inc
mov
mov
(bad)
mov
sbb
jp
pop
out
jns
pushf
push
or
mov
jmp
sbb
cmp
daa
pushf
jmp
sbb
mov
push
add
stos
dec
push
(bad)
adc
ins
arpl
adc
cmp
pop
stos
arpl
in
jmp
push
xor
and
jmp
push
adc
xchg
sbb
or
push
and
sbb
fadd
mov
mov
pop
jl
shrd
xor
mov
pop
mov
test
lds
(bad)
sbb
inc
mov
imul
sub
push
add
jl
jg
sub
jge
in
sub
retf
sub
lods
pop
push
stos
jg
sbb
arpl
xor
gs
mov
ins
ret
mov
in
jp
adc
ret
xchg
jmp
rcl
cmc
or
mov
mov
pop
mov
out
mov
ja
xchg
sub
mov
dec
jae
fnstsw
mov
mov
mov
sbb
jne
icebp
sub
sbb
sti
lock
stc
adc
loopne
add
adc
mov
jne
adc
icebp
mov
(bad)
ins
inc
out
ror
add
and
div
jbe
jmp
repz
popf
and
cld
mov
push
js
outs
jmp
movs
push
push
dec
inc
les
pop
adc
sub
or
xor
(bad)
outs
jle
mov
stos
aaa
jmp
int
jb
cmp
push
pushf
push
ds
lahf
sub
add
xor
lea
ja
adc
sub
loope
xor
dec
mov
push
xchg
jnp
lock
pop
adc
arpl
pushf
cmp
jbe
pop
shr
gs
out
leave
aad
inc
mov
es
sub
mov
inc
add
push
or
in
adc
cs
icebp
dec
scas
hlt
stos
xchg
mov
jmp
sbb
shr
xchg
pop
call
cwde
mov
out
add
push
nop
into
hlt
xor
pop
jmp
dec
add
sub
int3
jp
mov
sub
adc
mov
int3
ja
(bad)
or
repnz
mov
enter
(bad)
lds
test
lods
daa
in
out
adc
test
arpl
add
in
test
or
sub
(bad)
xchg
sub
call
dec
xchg
in
push
ds
adc
jne
cmp
xchg
aaa
and
je
sbb
mov
pop
sbb
loopne
adc
pop
out
or
(bad)
fcmovnbe
in
push
ds
call
lods
stos
sub
mov
or
xchg
pop
add
in
cs
xchg
lock
or
addr16
mov
stos
and
fisttp
mov
sti
mov
outs
imul
fwait
xchg
je
(bad)
fsubr
pop
dec
jmp
and
mov
push
in
loopne
fistp
push
dec
mov
push
retf
cwde
sbb
or
cli
ror
jmp
(bad)
dec
or
xor
push
cdq
mov
ss
or
scas
rcr
adc
pop
inc
(bad)
addr16
rol
lock
pushf
push
xchg
js
xor
adc
jb
add
sbb
movs
or
push
shl
out
int3
cmp
mov
lods
mov
mov
cwde
and
mov
jae
push
int
and
int3
jmp
push
rol
inc
mov
cs
sbb
or
mov
aaa
xor
sti
cmp
cli
ja
pop
mov
mov
xor
fcmovnb
add
fs
dec
mov
js
outs
pushf
mov
cmps
push
ret
ja
les
movs
dec
mov
aas
ds
test
cmp
pop
sbb
cs
inc
inc
add
das
shl
cmp
mov
sti
adc
addr16
ja
fcomp
jge
pop
sbb
push
ins
mov
fs
fisub
fstp
iret
cmp
mov
xchg
or
std
cmp
push
and
cli
inc
lods
dec
mov
(bad)
push
xor
push
rcl
test
jl
dec
popf
mov
xchg
xchg
ja
ja
mov
mov
inc
xchg
sbb
bnd
mov
sub
push
jne
push
xchg
adc
or
pop
add
sar
mov
dec
add
jle
jmp
xor
sahf
jecxz
loop
fadd
daa
sbb
adc
inc
(bad)
(bad)
pop
sbb
and
push
pop
push
sub
sbb
(bad)
push
inc
pusha
pop
stos
jle
ins
out
imul
cld
fdivr
ret
pop
mov
cmc
mov
imul
mov
test
adc
cmp
not
ins
and
dec
fxch
and
mul
ins
js
daa
cdq
adc
(bad)
push
jl
ret
push
ficomp
daa
pop
dec
xchg
test
fdiv
add
cmp
cdq
add
std
xlat
std
dec
xchg
pop
push
sub
push
pop
js
sbb
dec
xor
sub
lea
jmp
inc
cli
ror
cmp
fild
call
adc
cmp
jb
gs
jnp
clc
aad
push
bound
push
daa
or
out
outs
mov
mov
ror
(bad)
out
into
mov
(bad)
out
sbb
xchg
mov
loop
sub
dec
xchg
scas
push
fistp
ins
adc
aaa
xchg
xor
push
jg
jo
ja
mov
lods
test
fsub
and
push
fimul
int3
lea
fst
repnz
div
les
mov
mov
pop
sub
rol
pop
mov
xchg
mov
sti
fs
sub
push
xchg
cmp
lock
cdq
dec
cmp
inc
loope
jne
xor
cdq
lods
jo
shr
loop
aaa
xchg
and
xchg
pop
xor
(bad)
rol
cmp
nop
movs
sbb
in
add
add
add
cmp
mov
xor
int3
outs
mov
jmp
int3
or
jmp
push
or
nop
pop
frstor
inc
dec
out
fs
sar
imul
in
sti
rcr
or
test
dec
jg
mov
idiv
lea
jmp
ror
movs
push
jnp
add
adc
aaa
jmp
push
cmp
push
iret
dec
mov
jp
xchg
push
orps
imul
or
ficomp
daa
fwait
add
dec
cmp
test
call
ret
push
sar
ja
push
mov
mul
or
pop
pop
jp
(bad)
dec
fdivr
xor
cmp
push
sbb
mov
mov
fiadd
je
pop
stos
push
mov
mov
add
sbb
jle
jmp
imul
bound
jmp
add
mov
(bad)
pop
sub
idiv
enter
mov
rcr
jmp
mov
int3
sbb
push
and
jp
and
cmp
fwait
dec
out
mov
or
adc
dec
ret
dec
pop
add
xlat
pushf
mov
imul
inc
lock
push
sbb
sub
fisubr
jmp
xchg
pop
jl
mov
cmp
mov
sbb
lock
push
mov
add
and
ret
and
fstp
psrlw
push
loope
lock
xlat
add
mov
leave
jns
shl
adc
aaa
push
jl
ficomp
fmul
loopne
pop
mov
cmps
mov
jbe
xchg
in
mov
in
xchg
add
cli
out
aaa
inc
sub
inc
mov
(bad)
(bad)
dec
xchg
add
inc
sbb
mov
dec
inc
in
mov
and
fxch
pop
dec
ss
neg
gs
shl
lahf
shr
imul
cwde
xchg
in
pop
push
mov
dec
mov
jmp
dec
cs
jmp
xchg
cmp
movs
lea
xchg
loope
inc
inc
fidivr
add
outs
cmp
dec
sub
pop
fwait
push
loopne
sbb
imul
sub
popa
sub
(bad)
stc
(bad)
int3
sbb
call
adc
repnz
cld
push
cmp
inc
paddq
loop
(bad)
jl
push
test
cmp
lahf
popa
in
enter
sbb
dec
xchg
mov
or
retf
sbb
jae
pop
push
(bad)
and
cwde
fsub
jae
push
test
or
test
repnz
dec
push
scas
cld
(bad)
repz
in
loopne
mov
inc
sub
inc
ret
(bad)
adc
push
xchg
mov
shr
or
sti
pop
mov
sub
bound
push
stc
iret
mov
sbb
mov
(bad)
push
aad
arpl
int
clc
lahf
iret
cmp
pusha
xchg
mov
or
pop
adc
jo
cdq
xchg
xor
test
mov
scas
or
jmp
cmp
pushf
xor
jb
fimul
(bad)
pop
inc
repz
fdiv
push
cmps
or
mov
int3
lahf
and
pop
daa
and
add
das
push
xor
lock
pop
jno
daa
push
inc
and
and
inc
pop
xor
jg
push
dec
daa
addr16
stos
ins
cmps
pusha
je
mov
shr
in
mov
int3
jmp
loopne
add
pop
push
sub
mov
and
mov
fidivr
fild
mov
push
(bad)
sti
iret
iret
stos
sbb
cwde
test
int3
push
out
loopne
mov
mov
dec
lods
outs
dec
cmp
jae
aaa
fnstenv
adc
pop
dec
adc
sbb
enter
and
retf
into
clc
and
out
pop
call
pop
(bad)
mov
mov
call
or
or
ja
popa
sub
out
push
stc
push
(bad)
gs
sub
into
xchg
sti
or
ja
xor
imul
cdq
adc
jg
inc
int3
sub
xchg
pop
mov
pop
popf
mul
stc
into
icebp
test
mov
pushf
ins
aad
out
leave
cli
pop
outs
test
add
pushf
jmp
std
ror
inc
jg
loope
inc
inc
xor
push
lods
push
into
push
pop
call
stos
nop
dec
mov
aam
jno
daa
aam
push
hlt
stos
adc
imul
or
mov
mov
sub
not
clc
mov
add
jne
dec
iret
mov
dec
fistp
shl
push
loop
imul
lds
sbb
leave
(bad)
arpl
and
mov
iret
sar
ins
imul
mov
pop
push
xor
les
fs
sub
pop
push
mov
fiadd
daa
not
sbb
sbb
xlat
div
pop
and
and
pop
outs
mov
xchg
inc
or
cmp
sbb
mov
dec
sahf
sub
jmp
xchg
(bad)
push
pop
ins
ret
(bad)
add
in
mov
loopne
aaa
es
popf
push
xor
sbb
cmp
sub
dec
pop
aaa
pop
jnp
sbb
inc
sahf
fisttp
jmp
fs
fwait
pop
int3
or
mov
cmps
push
data16
(bad)
sub
in
push
sub
sbb
pop
jge
clc
jmp
rcr
ins
push
jmp
scas
arpl
mov
rcr
xchg
cmp
mov
jp
sbb
sub
dec
push
idiv
in
jae
mov
mov
xchg
out
push
jae
sbb
sbb
iret
jge
pop
or
push
(bad)
jmp
aaa
(bad)
jge
jp
or
test
mov
lds
push
mov
ins
xchg
dec
and
stc
cmp
popa
addr16
cmp
dec
adc
push
idiv
(bad)
xor
int3
mov
aas
xchg
ret
pop
mov
imul
sbb
(bad)
retf
fwait
clc
gs
dec
pop
enter
pop
dec
shr
cmp
inc
mov
jg
push
sbb
imul
pop
mov
add
out
and
adc
mov
int3
inc
rcr
push
cmp
jl
inc
jno
pop
add
gs
cdq
or
lea
rol
sti
dec
js
fld
cmp
cld
cmp
jbe
ror
pop
aas
stc
pop
mov
out
xchg
cmovb
lods
xlat
shl
lock
push
scas
out
sti
jge
mov
mov
cmp
ins
(bad)
mov
xor
push
mov
in
pushf
fist
rcr
sbb
stos
jge
mov
movs
mov
fcomp
test
(bad)
inc
sbb
pop
and
cld
in
cld
retf
jmp
adc
adc
jnp
cld
or
loopne
cmc
shl
lods
xchg
add
imul
mov
mov
mov
stos
cdq
xchg
cmp
sbb
xchg
popa
int3
mov
xor
(bad)
call
dec
jmp
loop
jns
xlat
add
mov
adc
(bad)
not
dec
cmp
fdecstp
icebp
or
hlt
test
rcr
ss
test
xor
cmp
xor
push
in
inc
loop
aam
cmp
in
(bad)
mov
inc
mov
inc
(bad)
call
(bad)
inc
pop
in
pop
xchg
fadd
push
jle
std
inc
dec
shl
adc
fwait
adc
inc
and
dec
mov
inc
(bad)
daa
push
ds
xchg
cmp
call
add
adc
sbb
cs
pop
xchg
popa
xchg
(bad)
cmp
stos
daa
sub
ror
sub
adc
movs
pop
fidivr
(bad)
mov
mov
int
adc
mov
and
inc
cmps
add
and
adc
push
xor
mov
lods
sbb
shl
pop
sbb
les
sti
jb
pop
(bad)
xchg
mov
or
mov
xchg
in
ds
xchg
or
jae
jbe
sbb
paddq
ja
inc
cdq
inc
loope
fidiv
aaa
loop
scas
and
outs
ss
jl
pop
and
ins
les
ja
and
repnz
inc
pop
test
shl
pop
push
pop
ret
pop
dec
xchg
adc
mov
pop
push
adc
jp
fist
push
(bad)
xor
mov
popf
jnp
aaa
jge
xchg
icebp
imul
loopne
mov
inc
mov
push
dec
in
in
shl
mov
mov
popf
pusha
(bad)
push
movs
dec
pop
sub
in
mov
mov
mov
mov
jge
sub
xchg
xchg
rol
lock
stos
sub
or
adc
mov
inc
or
inc
call
rol
(bad)
fimul
sbb
cmp
jb
sbb
call
loopne
adc
clc
icebp
or
inc
aas
or
shl
in
jno
stos
fwait
dec
test
pop
pop
add
(bad)
jg
dec
in
int3
xor
dec
inc
or
rcr
in
push
mov
dec
pop
lea
adc
add
pop
ja
mov
adc
stos
pop
test
mov
pop
(bad)
pop
fstp
cdq
pushf
lock
mov
xor
std
fidivr
push
jmp
dec
jg
test
jl
pop
lds
pop
mov
jbe
or
sahf
enter
mov
enter
repz
cmp
mov
(bad)
xor
xchg
popf
mov
(bad)
or
add
or
dec
nop
pop
push
imul
jne
sbb
inc
cmp
ror
jg
js
and
fucomip
xlat
and
dec
cmp
mov
in
sub
lahf
jge
dec
sbb
cmp
test
rcl
ficomp
sub
mov
xchg
dec
adc
mov
xor
jl
adc
jle
mov
jns
imul
xlat
stc
fidiv
xchg
call
or
lds
movs
pop
sbb
xlat
cmp
mov
lods
adc
ins
inc
mov
ja
cmp
xor
test
stos
push
mov
mov
or
cmp
loopne
stos
mov
inc
fcomp
test
psubsb
jb
aam
add
dec
mov
cld
sub
inc
cdq
aas
ins
and
mov
and
dec
cmp
mov
dec
or
push
lods
fisubr
mov
mov
or
and
lahf
cmp
enter
ds
or
sbb
mov
shl
or
pop
pop
sbb
jnp
jmp
ds
ror
sbb
dec
aam
es
pop
out
jg
xchg
(bad)
(bad)
loop
ficomp
mov
cmp
inc
or
sub
fcom
mov
rol
jbe
lock
dec
push
in
shr
adc
cwde
pop
push
ds
lods
fstp
gs
cmp
xchg
scas
push
syscall
cmp
sti
fsubr
lock
push
icebp
popa
cmp
in
pop
out
cmp
idiv
ins
in
inc
aaa
fstp
sub
inc
push
nop
inc
js
cmp
mov
pop
xchg
and
stc
lock
enter
and
dec
mov
jae
inc
mov
xor
les
cmp
pusha
shr
fst
xchg
mov
popf
sub
push
stos
and
icebp
outs
scas
inc
out
and
jge
nop
pop
cmp
and
jle
or
jp
and
mov
pop
outs
aas
sub
mov
xlat
pop
lock
cmp
lods
shl
push
(bad)
ds
xchg
sub
arpl
jp
sub
push
addr16
jo
pop
fst
dec
mov
cmps
nop
xchg
mov
aas
xor
or
int3
jns
push
sbb
out
add
inc
inc
in
imul
and
fldcw
dec
inc
xchg
adc
inc
push
addr16
imul
push
test
push
int3
rcr
fnsetpm(287
mov
mov
das
push
loope
(bad)
(bad)
retf
pop
inc
mov
mov
or
xchg
push
cmp
cmc
inc
(bad)
xor
fild
pushf
stos
xchg
btr
xlat
mov
dec
enter
jecxz
out
cmps
xchg
mov
mov
sub
out
pop
sub
mov
dec
lea
aaa
mov
pop
jl
(bad)
jl
sub
sti
jns
out
xor
add
mov
cdq
fdivr
ret
or
movs
pop
not
inc
inc
in
mov
and
out
addr16
cdq
mov
pop
xlat
mov
jmp
pop
mov
bound
dec
xchg
shl
push
or
cdq
add
sub
cld
sbb
sbb
and
mov
ins
into
call
sub
dec
cmps
jnp
push
mov
pop
and
and
inc
arpl
shl
or
mov
ror
inc
mov
mov
arpl
pop
ja
mov
sub
mov
outs
add
inc
sahf
jmp
imul
jl
cdq
add
jmp
sub
sbb
cli
mov
out
xchg
es
mov
add
imul
push
and
mov
inc
mov
pop
stc
adc
nop
jmp
(bad)
sahf
call
xchg
arpl
xchg
bt
dec
shl
sub
daa
leave
sbb
xchg
imul
xchg
lods
leave
imul
adc
stos
out
in
mov
mov
mov
mov
xchg
movs
dec
daa
push
retf
sbb
(bad)
daa
imul
test
ins
sbb
in
and
ds
loopne
sbb
addr16
repnz
sub
add
inc
in
into
addr16
mov
cld
dec
enter
test
push
int3
cs
popf
jmp
adc
jecxz
add
push
retf
dec
xchg
cmp
out
adc
shl
rcr
mov
ret
fcom
in
xor
pop
push
out
mov
addr16
out
adc
aaa
push
sub
les
lea
push
icebp
shr
push
push
mov
ret
cwde
imul
mov
test
pop
stos
(bad)
aad
push
fdivr
jnp
add
or
cmp
xor
xchg
add
sbb
(bad)
xor
push
(bad)
pop
loopne
xor
jbe
movs
(bad)
adc
push
add
ja
cli
pop
or
mov
arpl
cmp
pop
inc
out
cmc
inc
jnp
dec
sbb
jnp
scas
(bad)
(bad)
xchg
or
loopne
mov
fwait
cmp
and
inc
pop
cmps
addr16
mov
pop
imul
popa
inc
ror
pushf
inc
pop
out
push
outs
jae
mov
pop
sahf
add
or
push
cmp
cmp
rcl
push
jmp
sbb
mov
addr16
std
retf
aas
call
jp
inc
jp
sub
mov
mov
sbb
add
test
ins
adc
pop
mov
cs
sbb
sub
(bad)
mov
rcr
popa
mov
lahf
inc
mov
mov
pusha
inc
pop
int3
add
imul
sub
mov
push
push
into
or
sbb
or
or
sbb
test
arpl
pop
clc
jne
(bad)
(bad)
cli
data16
sbb
rol
rcr
sbb
dec
pop
test
pusha
mov
repnz
inc
hlt
pop
sub
(bad)
xlat
dec
cdq
scas
inc
mov
daa
cmps
mov
test
pop
jae
xchg
cdq
push
cs
sub
add
arpl
call
fiadd
in
jb
stc
iret
das
inc
lds
inc
fbld
popf
mov
pop
lds
and
dec
pop
pushf
xchg
xor
int3
aam
pop
mov
mov
pop
xor
cmp
jmp
xchg
push
ins
(bad)
mov
mov
cmp
loopne
nop
sbb
mov
pop
push
push
sbb
loope
sub
dec
out
push
pop
dec
imul
pushf
push
aas
(bad)
pop
ja
adc
dec
or
pusha
push
(bad)
fsub
shl
jp
sahf
mov
imul
mov
out
pop
mov
jg
fucom
adc
aaa
mov
mov
ftst
inc
int3
and
add
inc
or
push
adc
leave
dec
or
mov
pop
aaa
inc
dec
fisub
call
(bad)
stc
sbb
aam
je
push
lock
push
push
xor
dec
in
out
xchg
nop
mov
mov
push
in
xchg
cmp
xchg
jmp
std
int3
retf
loope
stc
pop
inc
sbb
sub
stos
aam
jne
repz
enter
inc
cld
push
int3
add
mov
addr16
mov
inc
push
mov
retf
dec
add
(bad)
sahf
and
dec
call
pop
loopne
jl
xchg
fsubr
sbb
push
dec
idiv
cmps
pushf
xchg
jbe
ret
push
mov
fsubr
push
inc
push
dec
hlt
jle
or
jge
fs
mov
test
mov
jno
xlat
fnstsw
sbb
(bad)
(bad)
jecxz
mov
int3
pop
jno
sbb
adc
dec
mov
lock
add
and
jo
xchg
dec
dec
aad
movs
cmp
mov
push
icebp
call
scas
jl
push
or
ja
mov
dec
add
sbb
fiadd
mov
dec
aas
sub
popf
stc
das
leave
mov
fiadd
hlt
or
inc
pop
arpl
stc
mov
in
dec
sbb
add
std
sbb
dec
scas
mov
std
mov
push
mov
lods
mov
pop
jne
dec
call
les
sub
dec
dec
add
mov
hlt
mov
loopne
aam
add
test
aad
mov
jbe
add
sahf
mov
adc
pop
es
stos
sti
push
cmp
mov
push
mov
adc
out
fmul
inc
xor
fcom
int
inc
xchg
xor
loop
ja
mov
nop
mov
xchg
push
into
mov
pop
mov
(bad)
push
addr16
fisttp
cdq
push
jl
pop
scas
int
not
push
push
push
xchg
push
dec
fdiv
push
pushf
outs
inc
inc
cdq
cmp
hlt
adc
jnp
pop
cmps
les
sbb
scas
lods
pop
pop
or
xchg
shr
mov
(bad)
mov
(bad)
inc
and
aad
add
movs
pop
out
cld
stos
mov
fnstsw
jl
inc
hlt
mov
lock
mov
xor
xchg
mov
adc
or
out
cmp
out
push
retf
cwde
pop
cdq
rcr
xchg
cmp
(bad)
dec
cld
mov
cmp
mov
mov
ss
fs
(bad)
mov
push
mov
rcr
aas
lods
add
ins
in
leave
adc
test
sbb
rcl
mov
sub
scas
dec
jge
imul
jmp
je
pop
or
out
sub
shr
sub
and
daa
addr16
ins
dec
mov
push
sbb
mov
shr
and
add
mov
nop
(bad)
fwait
add
jmp
cmp
fld
push
xchg
xor
adc
scas
loopne
addr16
sahf
cmp
out
sbb
cdq
imul
mov
push
sbb
and
xchg
cmp
lods
(bad)
jl
jle
sbb
pop
mov
jmp
jp
xchg
addr16
mov
fwait
aas
push
clc
lock
dec
add
cld
adc
mov
jno
xor
imul
cmps
(bad)
lock
mov
pop
mov
pop
pusha
out
rcr
cld
ret
lahf
dec
jp
shl
cmp
aaa
jl
jp
add
and
pop
dec
int
out
fidivr
adc
mov
cdq
int3
add
dec
sub
mov
pop
dec
cmp
outs
(bad)
repz
ss
stc
mov
add
shr
push
gs
xor
xchg
mov
and
xor
pop
mov
mov
mov
and
add
dec
fisttp
ror
mov
or
scas
cli
out
sub
mov
and
jg
cmp
push
push
inc
push
ror
adc
dec
add
and
test
loopne
and
fimul
test
aas
xor
sub
daa
sti
nop
aas
lock
fisttp
or
fs
push
push
loope
nop
ins
and
sbb
(bad)
scas
mov
es
push
fild
mov
fstp
arpl
push
cmp
or
(bad)
mov
mov
mov
movs
pop
fisub
arpl
mov
add
ficomp
xchg
clc
es
jb
call
cmp
sub
fnsave
add
or
mov
(bad)
out
inc
out
add
(bad)
(bad)
dec
fiadd
push
pop
jne
push
in
js
neg
push
jno
sti
sbb
inc
sbb
jmp
dec
dec
cmp
sbb
jmp
aam
gs
sub
or
cs
cdq
fidiv
or
enter
dec
or
xor
ja
(bad)
push
(bad)
iret
and
dec
push
xchg
mov
push
lds
call
cdq
test
xchg
es
push
pop
repz
cmp
push
jg
push
loop
nop
inc
jg
cmp
push
je
add
call
nop
and
sub
int3
rcl
add
hlt
daa
or
or
pop
fldenv
sahf
daa
loop
pop
mov
in
cmc
push
mov
xchg
mov
out
ds
ins
jno
inc
pop
push
imul
mov
adc
fcom
and
in
loop
add
std
fld
mov
pop
int3
inc
sub
jbe
inc
mov
in
test
enter
hlt
adc
loop
push
add
jge
pop
(bad)
fcom
inc
xchg
(bad)
push
fist
add
cld
scas
test
cmp
push
mov
sbb
mov
or
ins
jno
int
jl
sbb
not
sar
sub
mov
div
jle
sahf
fadd
jae
add
(bad)
sub
aaa
mov
out
in
movs
test
dec
pop
mov
jno
xchg
repz
jp
sbb
jae
mov
leave
movs
mov
and
sub
fldenv
(bad)
adc
push
fwait
push
sub
aaa
jo
mov
sbb
mov
cmps
js
jae
cmp
mov
mov
mov
sbb
out
(bad)
sbb
and
aaa
ror
arpl
sbb
cmp
dec
cmps
lods
xchg
pop
ins
lahf
sbb
and
(bad)
rcr
xchg
or
dec
data16
stc
pop
std
xchg
or
pushf
pop
add
das
dec
shr
std
or
retf
out
add
push
jp
cwde
mov
(bad)
jb
aam
shr
jne
dec
mov
aaa
ret
pushf
xchg
ficomp
(bad)
(bad)
nop
cld
jae
mov
dec
aad
cld
adc
(bad)
ror
push
les
scas
lods
push
int3
fist
sub
std
(bad)
mov
dec
cmp
inc
test
scas
mov
fisub
and
push
mov
and
aad
pop
push
sub
jne
pushf
lds
adc
inc
data16
call
xchg
imul
fcom
in
add
inc
sub
in
or
mov
pop
xchg
sbb
push
stc
mov
jl
out
es
mov
pop
push
pop
ds
add
fld
shl
rcl
(bad)
ror
fdivrp
cmp
push
int
loop
sbb
test
bound
and
or
pop
fwait
adc
cwde
loop
dec
push
mov
pop
fistp
jno
sbb
(bad)
ja
imul
mov
(bad)
sbb
imul
enter
clc
rol
ret
in
(bad)
mov
pusha
mov
dec
pop
pop
loop
outs
dec
pop
or
xor
push
in
neg
(bad)
int3
push
pop
stos
push
xchg
or
mov
ror
(bad)
and
call
cmp
les
retf
mov
and
lahf
inc
jae
(bad)
mov
push
jbe
bndldx
inc
sbb
sub
jae
or
inc
jo
mov
not
fwait
add
mov
mov
test
cmp
stc
jl
and
mov
and
fbstp
call
fs
mov
push
iret
mov
mov
icebp
out
fdivr
out
fild
stos
and
loopne
push
aaa
(bad)
mov
cs
mov
sbb
pop
stos
cmp
call
sbb
mov
jl
and
mov
ror
mov
push
push
inc
shr
adc
out
add
cld
mov
mov
mov
retf
adc
dec
pop
loopne
loopne
ins
sbb
sbb
jnp
mov
and
mov
or
jmp
pop
fcomp
sub
js
neg
inc
inc
cdq
mov
xchg
pop
sti
mov
dec
frstpm(287
and
jle
pop
mov
es
or
pop
jge
mov
adc
jl
stos
pushf
rcl
or
mov
and
out
push
mov
fisub
(bad)
icebp
mov
les
fdivr
sub
sub
pop
fisttp
mov
jg
sbb
inc
inc
push
jl
adc
pusha
or
test
jge
mov
inc
cmps
ss
pop
rcl
scas
jae
mov
ins
lock
lods
add
mov
lahf
popf
stos
fs
fimul
jmp
pop
sbb
push
dec
sbb
pop
les
xchg
push
dec
push
(bad)
cwde
push
fisttp
sar
mov
ja
scas
inc
fild
enter
ror
call
add
dec
(bad)
das
xchg
ss
pop
sub
rcl
mov
push
rol
dec
stos
les
pop
mov
shl
sti
ss
cdq
jg
call
mov
pushf
dec
pop
and
pop
cli
int3
push
test
xor
call
ja
sbb
imul
stc
fcomip
outs
js
mov
popa
xchg
neg
pop
test
add
cmp
cmp
in
icebp
inc
pushf
push
dec
pop
adc
mov
gs
mov
ret
push
stos
xchg
sub
(bad)
cmp
fistp
fdiv
bound
or
mov
pop
mov
sub
inc
dec
or
dec
rcr
push
dec
jecxz
jg
dec
shl
fs
add
lds
adc
nop
pop
pop
inc
js
adc
popf
mov
jmp
jo
arpl
stc
jne
or
jle
(bad)
xchg
mov
sub
lahf
lds
adc
xor
rcr
or
adc
pop
sahf
mov
lahf
fsub
sbb
add
mov
mov
lock
mov
cmp
push
pop
retf
add
mov
dec
jmp
stos
xchg
jl
sbb
imul
inc
jnp
dec
dec
addr16
sar
cdq
jae
in
into
es
cmps
jns
iret
xor
repz
xor
pusha
lods
xchg
jl
mov
mov
iret
retf
pop
cli
cmp
int3
sbb
jg
mov
repz
icebp
(bad)
jbe
sbb
mov
ficomp
dec
dec
jl
cmc
cli
aam
fisttp
imul
push
cs
cld
cmp
stos
sub
cs
pop
pop
sbb
xor
push
cmp
and
push
stos
mov
xchg
enter
xchg
fsubr
push
mov
xchg
fidiv
or
push
lods
xchg
cmc
cdq
lahf
ds
ror
shl
mov
data16
fwait
push
(bad)
fadd
mov
popf
div
sub
(bad)
cmc
push
mov
call
(bad)
and
lock
(bad)
popa
push
mov
pop
test
jbe
stos
mov
and
sti
scas
outs
movs
pop
add
cs
and
sahf
out
xchg
leave
inc
adc
fcomip
push
xor
in
sub
sub
add
mov
lahf
aad
mov
pusha
jbe
push
sbb
mov
cmp
jge
xor
rcr
mov
add
mov
cmp
outs
int
xor
mov
fwait
jnp
jge
sbb
(bad)
pop
add
and
arpl
enter
adc
sub
leave
mov
fdiv
pop
jge
cmp
test
ja
fst
test
ret
shl
mov
add
dec
leave
push
(bad)
sbb
pushf
mov
(bad)
(bad)
and
jle
adc
sbb
mov
xor
pusha
or
int
int3
sbb
xor
and
inc
push
sbb
clc
dec
cli
mov
shl
push
jb
ror
dec
cmps
inc
jb
jecxz
push
or
xor
mov
popf
fimul
out
cmp
mov
jg
enter
jmp
inc
arpl
xchg
stos
std
rol
sub
dec
out
out
fsub
push
sbb
and
pop
(bad)
adc
mov
add
and
add
mov
out
mov
in
fbstp
fnstsw
and
mov
jmp
sub
xchg
pop
mov
dec
jne
sbb
mov
shl
inc
sahf
jae
mov
xor
jne
call
(bad)
ror
jbe
loopne
out
pop
dec
movs
jne
outs
ret
lds
pusha
pushf
mov
ret
jb
aas
test
xchg
sbb
fwait
bound
pusha
or
jmp
sbb
and
js
(bad)
mov
cmp
sbb
sbb
pop
mov
jmp
push
je
adc
cmp
dec
and
fcmovne
fwait
inc
(bad)
fcom
jb
sar
jnp
or
add
into
fldcw
ins
mov
movs
push
pop
adc
mov
gs
test
push
pop
std
in
retf
test
enter
mov
fstp
es
in
nop
aad
jno
xor
div
in
mov
xchg
push
adc
sbb
lock
mov
daa
and
fisttp
mov
dec
pushf
dec
sub
in
jno
stos
pop
aas
and
push
adc
pop
ds
mov
mov
fist
in
add
add
fnstcw
dec
lock
or
jmp
dec
xor
jp
std
adc
lods
and
rcl
jns
jnp
cmps
dec
and
jge
mov
cmps
sub
adc
fst
xchg
mov
sbb
add
hlt
lods
pop
fwait
push
sub
and
cmc
aam
pop
jge
int3
pop
outs
mov
mov
pushfw
push
outs
inc
inc
loope
push
mov
sub
push
push
mov
daa
fstp
add
jge
add
loopne
test
push
and
jge
movs
dec
jns
in
add
scas
into
div
push
ins
mov
dec
push
out
cmc
inc
pusha
push
inc
js
sbb
sbb
pop
shl
jp
or
xchg
cmp
or
push
inc
enter
fisttp
ja
mov
push
inc
jmp
xor
mov
iret
cmp
test
aad
movs
add
iret
xlat
std
push
adc
call
add
sbb
inc
std
mov
cdq
xchg
add
rol
test
push
popf
mov
mov
mov
dec
push
in
lock
sahf
outs
mov
fcomp
frstor
cmp
fsub
pop
stos
jnp
or
jg
cmp
mov
jle
fcom
retf
push
dec
stos
cmps
cmp
jae
adc
mov
mov
cwde
fdiv
push
test
scas
push
aad
fistp
dec
xor
xchg
icebp
fidivr
adc
xchg
aad
repz
inc
retf
inc
pop
sub
call
mov
mov
mov
jg
arpl
push
fsub
lds
aam
(bad)
aas
je
xor
dec
fcmovb
ja
xor
fcomp
mov
inc
(bad)
scas
aaa
mov
pop
in
(bad)
icebp
pop
adc
pop
and
clc
pop
push
and
enter
mov
add
adc
test
(bad)
jmp
fcomi
sahf
mov
cld
out
data16
push
lds
loopne
sbb
xchg
pop
push
and
adc
sbb
retf
xchg
jl
js
dec
stos
and
fdiv
jnp
dec
stc
fmul
sbb
jmp
pop
das
stos
cmps
(bad)
fild
or
push
shl
and
iret
stos
jo
mov
jg
or
cmp
cmps
js
dec
leave
fld
loop
pop
sbb
rcr
out
and
xchg
xchg
cs
jmp
mov
inc
xlat
lods
jns
and
pushf
push
ret
pop
cmp
pop
sbb
inc
fisttp
sbb
cmp
or
aas
in
xor
lods
and
and
jnp
mov
jnp
xchg
nop
not
les
cmp
stc
icebp
mov
pop
fcomp
repnz
pop
sub
xlat
(bad)
pop
pop
mov
fisttp
js
mov
dec
dec
in
shl
inc
ret
ficomp
sub
out
push
movs
ffreep
sti
xchg
or
mov
aaa
xor
mov
dec
test
inc
add
push
rcr
retf
fld
sahf
in
jnp
mov
lods
push
arpl
in
and
out
icebp
push
arpl
rcl
jbe
jge
ret
dec
sbb
mov
dec
and
inc
inc
mov
xchg
push
sbb
push
inc
ficom
je
sub
jge
ds
imul
adc
mov
sbb
imul
stc
xchg
xchg
and
js
dec
xor
jo
sbb
stos
push
sbb
outs
scas
pop
fst
xchg
push
mov
aas
out
mov
xor
dec
in
mov
cli
sti
stc
arpl
imul
mov
jnp
in
xchg
fisttp
jne
sbb
jge
inc
ins
sar
and
sbb
fcom
loop
lock
dec
cmp
inc
xor
xchg
adc
mov
ficomp
push
pop
sub
iret
call
mov
lahf
adc
iret
stos
pop
into
cmps
imul
dec
jge
enter
sub
cli
xor
fsubr
mov
push
add
sub
xchg
and
in
cmp
sub
scas
into
and
addr16
mov
gs
stos
sub
fisub
div
aad
push
adc
test
push
pop
and
(bad)
fcomip
in
xor
xchg
and
bound
stos
mov
cmp
test
out
mov
(bad)
iret
rcr
cmps
dec
jge
jmp
rol
push
mov
cmps
scas
jg
(bad)
rcr
push
jne
pop
idiv
adc
push
push
mov
xlat
cmp
aaa
push
js
jo
xchg
and
sbb
sbb
xor
das
or
xchg
mov
mov
out
dec
test
es
xlat
dec
cmp
fisub
aas
test
pushf
and
pop
(bad)
and
fstp
push
jo
pop
dec
and
inc
push
push
fild
mov
mov
sbb
xchg
frstor
sbb
(bad)
push
iret
xor
loopne
add
dec
fcmovb
xchg
pop
idiv
test
dec
adc
ror
fwait
jmp
(bad)
and
push
popf
lods
and
pop
fimul
pushf
xchg
test
push
dec
inc
rcr
les
(bad)
cmp
sub
and
cwde
add
mov
mov
out
outs
mov
xchg
mov
xchg
sub
xchg
adc
add
rol
js
pusha
or
mov
frstor
ret
mov
sti
pushf
add
xchg
ficomp
mov
call
xchg
cmpxchg
mov
popf
scas
inc
fst
sub
lds
lods
mov
lock
sar
add
fcom
lock
mov
stos
xchg
pop
xchg
pop
push
mov
mov
xor
push
or
mov
popa
cmps
(bad)
dec
pop
sub
sbb
dec
mov
xchg
mov
mov
ret
and
call
xor
mov
dec
and
or
xchg
int3
(bad)
mov
cmp
pop
dec
inc
push
daa
or
sbb
jl
mov
sbb
adc
les
dec
in
fisub
test
idiv
dec
mov
cdq
fs
sbb
addr16
mov
test
add
and
pop
aad
stc
or
push
sub
dec
xor
ja
mov
aaa
pop
outs
jg
(bad)
jmp
xor
pop
ja
mov
inc
xlat
xchg
adc
int3
std
mov
clc
stos
xchg
test
mov
ss
inc
push
push
fst
stos
add
movs
fmul
jmp
cmp
or
sub
shl
popa
push
mov
mul
jecxz
sar
sar
into
les
in
pop
inc
pop
in
sub
sub
jo
call
sub
pop
in
mov
xor
test
mov
test
pop
int
test
sub
inc
jg
movs
rol
adc
rcl
push
cmp
popa
outs
dec
hlt
fnstcw
add
dec
push
xchg
enter
mov
mov
dec
push
mov
js
stos
pop
sbb
mov
sub
imul
xor
inc
xchg
pushf
jmp
cwde
push
(bad)
jge
push
int3
ins
ror
mov
test
push
stos
mov
pop
scas
cmp
inc
mov
pop
jecxz
inc
std
nop
pushf
pop
dec
push
mov
ficomp
mov
shl
cli
mov
mov
(bad)
ror
and
loop
mov
mov
in
aas
fadd
push
jno
mov
jbe
dec
and
cmp
inc
mov
ja
cli
les
movs
nop
lahf
mov
cmc
jle
pop
adc
jmp
push
sbb
push
jmp
jg
mov
fistp
jl
xor
imul
nop
(bad)
shr
cmp
mov
inc
iret
dec
mov
retf
push
adc
nop
sbb
mov
or
or
scas
xchg
mov
mov
ret
adc
test
mov
or
imul
daa
inc
loope
hlt
in
cld
push
sar
dec
outs
pop
popf
jge
push
push
pop
pushf
and
lods
ja
dec
dec
sbb
jno
ins
sbb
cmp
jmp
mov
pop
jmp
dec
sbb
push
sbb
push
push
sub
pushf
loopne
rol
fbstp
add
cmp
pop
lds
add
cmp
pushf
dec
(bad)
rcr
mov
push
lock
bound
cs
imul
pop
jg
cmp
xchg
xlat
(bad)
cdq
jnp
fadd
mov
(bad)
fcmovb
xor
cmp
jp
pop
pop
and
push
pushf
repnz
lock
ja
xor
nop
add
xchg
mov
lock
ja
mov
or
sub
sub
out
mov
pop
data16
in
mov
mov
bound
imul
fistp
xor
ins
inc
(bad)
or
xchg
sbb
mov
push
imul
mov
adc
mov
sub
daa
fcom
fs
xchg
and
and
mov
mov
mov
pop
iret
xchg
sub
jge
daa
sbb
inc
jge
test
push
loopne
or
push
sub
inc
(bad)
shr
sbb
push
xchg
sub
bound
push
std
push
stos
lahf
adc
push
or
aaa
push
xchg
fdiv
iret
and
sbb
jg
xchg
into
pop
mov
xchg
pop
mov
fidivr
fwait
dec
scas
gs
sti
out
cmp
stc
ret
mov
cmp
mov
pop
js
sahf
mov
call
xor
fld
pushf
xchg
inc
sub
fimul
fsubr
cs
and
mov
inc
mov
es
xor
jbe
jecxz
mov
add
mov
lahf
pop
test
mov
push
iret
shr
sub
push
pop
nop
ds
add
cs
cmp
jp
(bad)
hlt
imul
or
cmc
inc
pushf
ror
jle
and
arpl
adc
push
add
jle
std
sub
pop
pop
hlt
and
movs
fld
pop
(bad)
dec
fwait
and
call
out
pop
pop
mov
pop
jnp
int3
mov
inc
push
cmp
pushf
push
int
mov
adc
js
adc
pop
pop
cmp
xchg
cmps
sub
inc
jmp
loopne
pop
shr
inc
jle
arpl
pop
call
mov
bound
or
leave
repz
push
retf
push
fisub
nop
add
mov
call
mov
repz
xchg
inc
out
std
leave
stc
xchg
fucomip
into
cmp
inc
push
out
adc
(bad)
fisub
fwait
and
popa
jo
aam
out
loopne
xchg
sub
in
mov
xor
fisub
movs
cmp
jle
push
rcr
cmp
mov
les
sbb
inc
sub
or
push
jns
xor
dec
in
ror
pop
pop
mov
sbb
dec
and
mov
xchg
fist
in
rcl
push
loopne
das
cmp
loope
mov
fs
xlat
clc
out
push
cmp
jmp
test
mov
imul
dec
mov
enter
pop
mov
push
les
jmp
cmp
jge
cmps
test
inc
sub
pushf
push
dec
outs
cmp
add
in
mov
add
pop
push
dec
std
test
rcl
out
int3
add
jnp
jnp
xor
fnstsw
dec
cli
jl
jne
sbb
or
inc
imul
xchg
sbb
(bad)
(bad)
pop
pop
sbb
call
out
mov
mov
cmp
mov
pop
loope
mov
xchg
mov
sbb
pushf
rol
dec
test
sub
push
or
pusha
pop
xchg
rcr
jmp
test
xchg
loope
pop
add
and
ss
push
inc
sbb
pop
add
mov
mov
mov
imul
std
dec
bound
xchg
(bad)
and
sub
sar
(bad)
add
mov
inc
inc
push
fwait
stc
add
popa
pop
add
ret
or
in
push
push
sbb
pop
ds
stos
push
cmp
or
and
or
cmp
fwait
xor
mov
loopne
pop
or
fldcw
xor
sbb
push
pop
mov
rol
cmp
in
fadd
xchg
sub
imul
rcl
mov
mov
mov
cmp
aas
mov
xchg
lea
add
push
push
jns
daa
pop
jmp
cmp
sbb
fwait
and
cmp
push
cli
or
inc
call
sub
pop
push
test
daa
into
popf
hlt
and
aam
mov
test
jl
cmps
sub
int3
ficom
mov
test
and
lea
ror
inc
dec
(bad)
neg
dec
pop
xchg
xchg
pusha
int3
push
sbb
and
ins
pushf
sbb
jmp
ds
js
jl
jnp
add
add
or
and
or
lods
mov
push
js
or
sub
jb
jnp
pop
into
inc
arpl
xchg
mov
cmps
ss
not
aad
mov
push
rol
and
xor
lods
mov
adc
pop
cmp
int
pop
lock
sar
push
lds
adc
mov
rol
call
pop
push
imul
pop
adc
(bad)
in
and
pop
mov
in
sbb
pop
hlt
test
mov
mov
test
cs
and
xchg
arpl
cmc
loopne
mov
push
loopne
pop
xchg
or
iret
ds
cld
fcom
cmps
add
les
cmp
int
and
test
jge
dec
sbb
fldcw
mov
rcr
cdq
jmp
ins
cmp
pop
inc
(bad)
repz
xor
push
leave
aaa
sub
xchg
mov
jmp
dec
call
push
pop
and
mov
les
aaa
cmp
xor
pushw
popa
and
pminub
sbb
and
outs
xchg
cli
push
inc
add
scas
jmp
sub
push
cmp
pop
scas
ss
mov
les
(bad)
into
pop
ficomp
jmp
rol
daa
mov
lods
pushf
pop
push
pusha
pop
push
push
inc
jmp
add
rcl
xor
adc
rol
in
pop
retf
push
loop
pushf
in
inc
dec
push
sbb
(bad)
jns
test
pop
pop
jns
jmp
add
push
loopne
scas
add
or
das
jnp
mov
pop
ja
xor
jl
fst
xchg
shl
push
(bad)
mov
sbb
cmps
sar
dec
xchg
loope
push
adc
cmp
lods
add
(bad)
je
pop
popa
push
repnz
dec
out
ror
jmp
stc
shl
or
repz
jno
out
cmp
mov
jb
popa
aam
addr16
inc
or
rcl
ret
sbb
mov
enter
push
xor
cdq
loop
jge
jb
push
push
push
dec
dec
add
sub
gs
push
fistp
mov
fadd
pop
loopne
mov
dec
sub
inc
daa
rcl
jb
mov
in
sahf
ret
push
dec
shr
adc
add
addr16
test
dec
in
dec
xchg
mov
aam
cmp
repnz
ret
daa
jl
sbb
jmp
fwait
test
cmp
mov
dec
pop
loop
out
adc
xor
dec
test
or
inc
test
lods
mov
shl
lea
push
xchg
mov
pop
push
add
adc
inc
xchg
mov
cli
xor
es
jmp
dec
jae
cmp
xchg
or
test
fcomp
push
cmovs
(bad)
add
(bad)
in
in
retf
gs
mov
stos
(bad)
ds
add
xchg
fcomp
dec
jmp
mov
out
shl
call
fisub
test
sub
or
in
xlat
arpl
jp
inc
(bad)
fnstcw
jbe
and
pop
loopne
daa
addr16
out
adc
bound
(bad)
outs
mov
addr16
pop
sub
retf
cmp
aad
jmp
sbb
jecxz
xchg
fidiv
mov
xchg
mov
jge
inc
or
sbb
push
in
in
(bad)
push
call
retf
mov
sub
ins
pop
es
dec
addr16
xlat
aaa
jle
repz
sub
mov
or
inc
mov
add
mov
sub
out
sub
mov
lahf
sti
mov
shr
mov
push
(bad)
imul
xchg
sbb
inc
dec
xor
and
dec
ins
ror
in
pop
sbb
nop
sub
loope
cli
loop
or
and
pushf
mov
dec
lods
aaa
aad
in
mov
scas
xchg
mov
stos
dec
jg
sbb
arpl
pop
push
loopne
sbb
popa
or
leave
addr16
add
xor
loope
sbb
push
sub
fcmove
push
movs
adc
add
aaa
cmps
fistp
inc
mov
ja
dec
adc
in
fsub
scas
jmp
dec
jmp
xor
or
dec
test
ds
(bad)
fistp
lock
xchg
push
cmp
addr16
fadd
add
popa
fldz
mov
movs
nop
add
jmp
loopne
movs
retf
push
sbb
mov
cmp
adc
out
push
xor
in
mov
movs
mov
dec
push
in
mov
clc
daa
mov
setbe
adc
push
xor
mov
cmp
loopne
arpl
cmp
mov
cmp
fisttp
retf
dec
lods
dec
mov
sbb
(bad)
rcl
mov
imul
add
leave
sub
push
pop
mov
mov
and
mov
push
ficomp
int
cmp
enter
jg
pop
sub
arpl
repz
push
(bad)
sub
ret
test
ins
mov
gs
sbb
(bad)
ds
iret
loop
jbe
(bad)
mov
pop
xor
sti
add
test
ja
mov
mov
sbb
dec
jne
rol
dec
adc
sar
or
in
adc
mov
or
cld
cmp
js
mov
ror
or
fcmovnu
ret
and
sub
pop
cmp
cmps
pop
push
dec
push
inc
sti
and
add
cmp
push
dec
mov
imul
dec
sub
jp
jmp
mov
ss
daa
popa
arpl
push
push
pop
mov
jo
xchg
push
pusha
push
mov
fdivr
mov
push
(bad)
retf
sub
dec
rol
mov
aas
inc
fstp
rcl
jl
dec
xchg
sub
clc
pop
or
xor
rol
pusha
scas
cwde
cs
(bad)
repnz
and
rcr
push
dec
sub
inc
lods
dec
pop
js
aad
data16
sbb
mov
xor
and
aas
mov
add
(bad)
sub
jae
(bad)
xor
pop
push
(bad)
inc
in
jno
loope
outs
jmp
ret
int3
xor
jnp
mov
fsub
test
sbb
xor
pop
dec
in
arpl
cwde
push
mov
addr16
aaa
popf
dec
sub
hlt
mov
jmp
jo
sbb
mov
mov
dec
pop
dec
fisubr
sbb
dec
push
popa
jge
movs
inc
sbb
je
jge
(bad)
hlt
mov
jle
pop
cmp
(bad)
mov
test
ja
outs
push
adc
cmp
mov
mov
nop
cmp
push
js
(bad)
fldenv
arpl
jp
cdq
data16
(bad)
hlt
sbb
mov
loope
jbe
dec
jnp
int
pushf
outs
test
mov
not
and
mov
xchg
loop
jmp
test
fiadd
mov
inc
or
mov
arpl
mov
sub
dec
push
dec
cmp
sbb
sbb
popa
int
xchg
fwait
sub
adc
inc
sbb
or
add
jmp
add
daa
fsub
test
pop
test
mov
and
push
dec
das
mov
test
sbb
mov
lock
dec
cwde
push
cmp
dec
jg
pop
aad
ins
cmc
mov
add
cmp
retf
mov
xchg
repz
lahf
imul
in
sub
jmp
mov
sub
es
gs
leave
mov
enter
adc
dec
mov
dec
out
aad
call
addr16
jnp
dec
pop
in
add
mov
shl
mov
retf
push
clc
pushf
mov
sub
push
sub
jnp
cld
push
out
push
cmp
test
or
cmp
fwait
inc
dec
test
nop
fdivr
ja
sub
sbb
stos
dec
sbb
mov
push
jne
int3
push
mov
fwait
(bad)
repnz
sbb
xchg
mov
rcr
cmp
cld
adc
(bad)
inc
fidiv
jmp
and
adc
cmp
xchg
mov
cs
and
dec
lea
xchg
xchg
shl
dec
sbb
and
push
(bad)
sbb
dec
addr16
iret
and
repz
retf
jns
xchg
and
sti
inc
aaa
sar
add
and
jmp
adc
sbb
push
ins
outs
push
jp
stc
cld
aad
dec
pop
in
jecxz
cmps
xor
push
test
dec
pop
popa
stos
aas
repnz
imul
shr
rcl
jg
popf
ficomp
mov
sub
pusha
fcomp
repz
pop
stos
pop
les
adc
shr
into
loopne
or
pop
lahf
pushw
sbb
push
and
shl
scas
pop
mov
inc
setbe
in
or
pop
dec
loop
scas
inc
pop
inc
call
sbb
mov
cwde
jo
push
adc
das
(bad)
jmp
dec
sub
jo
dec
mov
or
jge
xor
sahf
int
out
fwait
retf
lock
mov
lods
sti
cmc
fild
imul
sub
sbb
dec
xor
std
pop
pop
lahf
mov
popf
xchg
loopne
inc
sbb
sbb
es
mov
and
sahf
loop
dec
aas
mov
ror
aas
push
dec
movs
ret
dec
into
aas
or
rcr
cmp
mov
dec
or
adc
ror
daa
pop
push
adc
push
xchg
clc
lea
hlt
popa
or
test
cli
mov
ja
(bad)
mov
inc
mov
bnd
es
mov
inc
cmp
sub
cmc
pop
std
xor
cld
lahf
dec
in
scas
and
push
(bad)
dec
daa
rcl
jp
adc
pop
pop
cs
sbb
daa
sub
inc
sbb
scas
lods
adc
push
sub
loop
mov
sub
pop
xor
in
fisttp
dec
sbb
jo
test
mov
xlat
das
sbb
nop
push
pushf
retf
dec
pop
or
fsubr
rcl
mov
jbe
mov
mov
xchg
ficom
pushf
loope
inc
add
mov
(bad)
arpl
push
arpl
sahf
nop
and
mov
je
cld
mov
add
popa
mov
fst
jle
or
fimul
aas
sar
adc
cmp
jp
aam
test
ret
mul
(bad)
aam
push
clc
scas
jmp
jg
adc
sbb
push
sub
sahf
lahf
mov
mov
scas
ins
cmp
iret
test
xchg
inc
pop
bound
mov
pop
test
das
and
sub
js
add
dec
mov
mov
retf
mov
xchg
cmp
imul
stos
sub
shr
pop
je
or
mov
xor
mov
(bad)
mov
into
test
ficomp
dec
jno
lahf
jns
dec
pop
sbb
popa
jo
cdq
xchg
daa
sbb
mov
push
pushf
sahf
hlt
shl
push
mov
out
fmul
dec
xchg
xchg
xchg
into
pop
daa
mov
js
or
and
xchg
loop
xlat
les
xor
or
and
pop
sar
mov
mov
shr
jp
push
pop
lods
dec
push
cmps
in
adc
fstp
imul
mov
pop
test
je
push
adc
sahf
push
in
sbb
icebp
jno
sub
test
pop
mov
dec
nop
jns
sub
test
add
movs
addr16
add
iret
jmp
test
aad
adc
popf
or
(bad)
cmp
sahf
outs
sti
adc
xlat
mov
in
fisub
pusha
inc
jae
lods
xor
les
pop
popf
clc
stos
pop
stos
inc
pop
hlt
call
mov
sub
xchg
xchg
push
cmps
and
fild
ret
mov
adc
mov
rol
out
push
pushf
daa
dec
jmp
push
mov
aaa
(bad)
int3
addps
jo
neg
mov
(bad)
lds
mov
inc
cmp
pushf
cwde
push
sbb
mov
fcomp
sbb
fnstcw
outs
mov
fs
cmps
jmp
lods
ds
jmp
sub
loopne
fimul
jge
inc
cmp
fcomi
jmp
sub
push
push
dec
pop
or
(bad)
sbb
push
cmc
mov
add
inc
int3
mov
lock
xchg
es
stos
or
push
adc
xchg
ror
test
adc
hlt
(bad)
sub
fsub
jbe
sbb
pop
pop
sbb
jnp
adc
daa
sbb
(bad)
xor
or
dec
pop
sbb
sub
dec
rcr
out
sub
adc
or
(bad)
lock
xchg
push
cmps
jmp
dec
and
mov
dec
repnz
cmp
pop
cs
fstp
mul
sub
cld
xchg
mov
mov
movs
lock
fist
aas
push
popa
popf
(bad)
mov
inc
ret
ffreep
jmp
cmp
enter
dec
fs
pop
shr
out
loop
sar
sbb
call
aas
and
sti
pop
cmp
cmp
push
cmp
xlat
ret
xchg
mov
or
(bad)
pop
push
add
push
int
test
in
push
fisub
mov
lahf
xor
stos
dec
cmp
ins
fdivr
jle
mov
hlt
mov
jno
pop
pop
or
xchg
je
jb
inc
and
and
dec
and
sub
fdivr
daa
mov
in
xchg
call
sub
arpl
sbb
sbb
ds
int3
pop
mov
cmps
jno
xchg
xchg
jmp
es
mov
repz
cmp
sub
push
push
pop
(bad)
std
test
fsubp
inc
int3
adc
ja
fnstcw
in
int3
mov
pop
(bad)
inc
push
retf
leave
inc
test
icebp
jbe
add
mov
push
sti
xor
sbb
jmp
or
and
iret
lods
mov
xlat
mov
js
mov
add
cmp
push
(bad)
push
sub
retf
or
xchg
sbb
pushf
mov
and
dec
inc
or
dec
dec
cli
inc
mov
ins
fidiv
adc
add
cli
mov
scas
xor
pop
repnz
ror
xchg
pop
add
mov
adc
daa
add
je
shr
pop
stc
dec
popa
mov
or
and
mov
dec
loopne
jle
arpl
xor
push
cmp
ror
rep
sub
int3
pop
loope
sub
repnz
inc
push
aas
jge
and
sar
mov
pop
lds
ss
lea
dec
(bad)
jae
xor
outs
or
mov
lea
dec
or
jne
(bad)
movs
inc
mov
jno
sbb
or
xchg
out
dec
or
retf
(bad)
push
dec
into
xchg
dec
sar
jge
jnp
retf
movs
sar
mov
xchg
hlt
mov
xchg
aaa
shl
xor
jno
dec
fadd
pop
or
mov
div
inc
mov
(bad)
js
aam
jl
xchg
and
pusha
cmp
ja
jae
xor
js
sub
add
arpl
adc
imul
pop
xchg
out
jnp
adc
mov
add
iret
xchg
repnz
xor
je
jo
fistp
cmp
push
fnstcw
repz
out
pop
and
mov
int
sbb
sub
sti
out
push
mov
dec
adc
push
add
add
add
mov
loop
mov
cmc
inc
bound
mov
sub
sahf
dec
ins
(bad)
retf
fwait
sub
xchg
push
out
fst
mov
jge
es
xlat
jno
add
(bad)
in
les
push
jae
mov
jmp
inc
dec
jno
pandn
mov
mov
and
retf
mov
in
cs
add
rcl
jns
ins
push
std
pop
push
enter
rcl
jecxz
or
jae
pusha
imul
and
push
pop
mov
das
in
push
cwde
iret
cmp
xchg
jno
jecxz
in
xchg
fwait
pop
jnp
push
dec
adc
hlt
daa
je
retf
jmp
pop
push
add
cmps
out
imul
nop
call
jnp
mov
lds
xchg
sti
fcomp
add
adc
call
inc
test
test
(bad)
dec
sbb
movs
fwait
test
xchg
jne
xchg
es
call
jbe
add
test
mov
adc
jne
dec
rcr
aaa
xchg
bound
retf
mov
xchg
jge
aaa
ins
pop
dec
mov
mov
mov
sbb
fisttp
pop
push
cmps
dec
outs
and
xor
into
mov
cmp
rcr
push
sbb
aam
loop
imul
xchg
loop
adc
or
(bad)
imul
pushf
sub
cmp
or
mov
(bad)
mov
repnz
retf
loop
or
xchg
rcr
out
fprem
fcomi
test
jle
fist
mov
ja
int
dec
dec
in
mul
shr
daa
sbb
dec
cmp
push
xor
cmp
stc
popf
mov
out
mov
sub
sbb
and
push
mov
xor
adc
pop
sub
pop
or
xor
push
mov
ins
movs
sbb
cwde
adc
mov
mov
pop
in
stc
xchg
jae
mov
addr16
jne
pushf
loope
(bad)
add
cmp
test
fisttp
fsubr
xchg
lods
and
sub
push
ins
out
sar
call
jo
mov
pushf
loopne
daa
inc
loope
cmp
sub
test
test
fsubr
pop
in
out
scas
add
pop
mov
sub
sub
ret
mov
xchg
scas
or
mov
pop
inc
lds
or
pop
les
repz
sub
rcl
mov
mov
ins
loopne
lods
pop
xchg
pop
inc
(bad)
loopne
mov
das
mov
aam
dec
mov
jl
sbb
mov
add
cwde
or
das
xor
adc
add
fwait
mov
lds
call
mov
xchg
pop
sbb
call
mov
inc
inc
pop
push
pop
add
daa
enter
inc
loopne
add
jle
in
in
stos
mov
fdiv
ror
mov
xchg
js
xlat
fistp
sbb
fcmovnb
jge
pop
xor
adc
imul
jmp
inc
jg
mov
dec
push
sub
pop
stos
mov
shr
pop
sub
sub
loop
xor
fwait
inc
mov
pop
mov
sub
dec
(bad)
or
(bad)
mov
out
call
loopne
iret
push
sub
adc
xchg
mov
dec
imul
dec
jmp
sbb
dec
xchg
les
shl
jmp
out
cmp
movhps
addr16
aaa
(bad)
push
mov
mov
jb
jb
jae
or
xchg
mov
sar
jo
push
mov
jae
jmp
cli
addr16
mov
pop
ja
dec
popa
sub
mov
mov
lea
(bad)
push
cmp
fild
ja
fst
push
push
shl
loop
xor
rcr
and
neg
xchg
adc
cld
loope
out
mov
or
(bad)
sub
fist
call
xor
push
fcmovu
addr16
or
ins
dec
or
test
sbb
fstp
out
mov
(bad)
cmps
jne
fisub
loop
mov
sahf
repz
xor
call
inc
leave
lds
hlt
jb
call
push
jp
jne
xchg
add
pushf
rcr
addr16
js
add
jnp
sbb
cmps
sub
dec
iret
ror
clc
out
jmp
push
jnp
or
icebp
aad
pop
or
and
cs
(bad)
out
dec
sar
in
lahf
inc
packsswb
cmp
mov
int
scas
aaa
sub
cmp
dec
inc
lea
sbb
dec
mov
(bad)
and
movs
inc
icebp
inc
xor
pop
rcr
in
cs
jl
sbb
and
dec
mov
retf
shl
mov
jmp
test
add
mov
icebp
sub
enter
pop
push
sub
ja
inc
shr
arpl
push
dec
pushf
bound
cwde
inc
sub
push
or
lock
mov
or
or
scas
or
dec
dec
and
adc
bound
inc
popa
pop
cdq
scas
add
sti
lods
pushf
stos
fild
sti
rol
movs
pop
std
inc
xchg
add
mov
mov
imul
sbb
inc
mov
cwde
cmp
xor
pop
inc
sub
clc
loopne
jae
stos
cmp
pop
arpl
push
fld
int
mov
inc
mov
(bad)
scas
mov
dec
repz
rcr
loop
sub
mov
mov
pop
in
ret
mov
sbb
(bad)
lods
ror
ss
add
ja
ja
add
je
lahf
mov
mov
repnz
mov
lods
(bad)
out
(bad)
dec
mov
aam
xchg
gs
add
sub
cmps
mov
sbb
push
inc
add
aas
and
mov
aaa
jmp
and
loope
dec
int
shl
inc
div
test
lock
stos
fcom
fdivr
pop
pop
xchg
xchg
sub
jb
enter
lock
jae
dec
push
push
leave
les
test
jae
push
daa
push
lahf
fmul
mov
ss
jno
pop
clc
scas
js
xchg
and
cwde
push
stos
or
dec
mov
leave
xchg
push
mov
gs
inc
push
(bad)
or
fimul
stos
push
cli
mov
dec
ins
(bad)
hlt
adc
and
int
loope
mov
sbb
dec
jne
push
sbb
cmp
je
xchg
mov
lods
push
outs
mov
cmp
dec
or
es
push
fidivr
xor
xchg
mov
inc
xchg
sbb
aaa
enter
mov
pop
in
outs
test
enter
pop
push
fisttp
je
mov
mov
aad
xor
rol
xchg
dec
mov
push
and
adc
mov
ins
dec
mov
dec
sub
sar
into
stos
data16
mov
push
pop
ror
push
aam
mov
mov
in
adc
lock
cmps
adc
arpl
adc
push
jne
mov
sahf
and
fldenv
imul
cs
mov
jnp
pop
mov
cmc
sub
push
daa
cld
pop
es
stos
adc
ins
mov
lea
sub
retw
stos
aaa
mov
push
adc
or
dec
mov
and
adc
add
jne
or
rcr
pop
mov
mov
sbb
xor
call
aad
stos
cmc
out
sbb
pop
xchg
push
sub
sub
mov
mov
jle
mov
push
pushf
cmp
pop
push
dec
jg
cli
je
shl
jmp
cli
mov
out
cmps
pushf
rcr
add
and
add
out
cmp
pop
out
sbb
sahf
fisub
xchg
push
retf
and
mov
and
arpl
inc
xchg
popa
fisubr
pop
fimul
and
mov
mov
cli
inc
in
adc
adc
mov
aad
test
cmp
rcr
les
xchg
add
jb
xor
call
scas
es
cdq
push
sbb
jae
mov
sub
mov
(bad)
jp
push
imul
jl
pop
jae
(bad)
mov
lods
or
mov
mov
in
push
pop
push
xchg
ins
fstp
(bad)
mov
sbb
das
or
adc
cmp
(bad)
leave
add
cmp
sub
dec
sbb
sti
cmps
xchg
hlt
ficom
xchg
pop
xchg
icebp
sub
je
bound
arpl
pop
mov
in
(bad)
pop
xor
mov
clc
sub
test
cmps
(bad)
shr
xchg
mov
jg
retf
pop
ret
stos
inc
fimul
jmp
aam
loopne
(bad)
fadd
aam
mov
or
lock
ret
cmp
xlat
jbe
dec
or
jl
push
adc
dec
xchg
sub
dec
cwde
ins
(bad)
pop
and
outs
mov
fcomip
int3
pop
adc
xor
xchg
scas
pop
sbb
mov
enter
mov
pop
dec
xor
sbb
sbb
cmps
shl
and
xchg
mov
jnp
jg
jb
pop
(bad)
ja
jmp
retf
aas
(bad)
or
and
adc
sbb
lea
adc
daa
out
dec
mov
and
xchg
fldl2t
rol
ds
jns
(bad)
push
lock
sbb
aam
add
adc
pop
movaps
sbb
stos
fwait
cmp
xchg
dec
stos
ret
push
pop
aam
popa
sbb
cli
pop
gs
cs
mov
enter
and
fisub
jmp
call
xlat
pop
stos
in
aad
mov
inc
ja
mov
ficomp
jl
jno
and
pop
or
jbe
mov
mov
les
icebp
mov
addr16
adc
sbb
pop
out
fs
(bad)
xchg
push
mul
inc
add
sahf
sbb
adc
cwde
mul
(bad)
rol
fstp
jle
pushf
jbe
test
jmp
stc
inc
cs
sbb
popw
and
sbb
aas
ror
jbe
mov
add
retf
out
push
daa
inc
(bad)
fadd
sbb
pcmpeqd
inc
jnp
jae
mov
ja
mov
rol
push
mov
mov
inc
jbe
(bad)
pop
pop
gs
cwde
cmc
call
stos
mov
ds
and
neg
scas
push
lods
sbb
dec
out
dec
in
pop
inc
push
or
loope
mov
push
into
lahf
mov
pop
adc
aam
int
sub
push
push
sub
scas
adc
xchg
in
lods
mov
je
scas
daa
aaa
push
mov
outs
sbb
pop
adc
ds
test
out
iret
ds
gs
(bad)
dec
call
push
dec
data16
leave
xchg
add
cmps
retf
fstp
call
(bad)
aad
xchg
lea
cmp
mov
jmp
inc
popf
mov
dec
pop
in
mov
adc
jno
inc
push
sbb
fadd
push
mov
and
fcmove
movs
push
repz
jmp
cmc
frstor
ins
call
push
pop
ja
adc
icebp
mov
cmp
jae
in
imul
fcom
sub
mov
sbb
daa
jns
jle
xlat
std
sti
push
or
movs
dec
addr16
xchg
lea
xchg
loop
add
sbb
cld
mov
or
xchg
iret
add
movs
mov
cmp
push
cmp
fild
test
jge
lea
xor
sbb
int3
jg
bound
mov
pop
movs
or
out
shl
xor
xlat
inc
adc
add
enter
push
loop
popf
mov
fmul
imul
ins
push
cmps
add
ja
pop
loopne
jne
sbb
jns
mov
add
shl
iret
in
sub
fimul
adc
and
jecxz
imul
dec
(bad)
imul
push
xor
cmp
sub
inc
gs
fcomp
add
dec
sahf
test
(bad)
daa
and
cmps
pop
repz
sbb
xor
mov
aaa
inc
and
adc
push
or
sub
rol
rol
loopne
fdiv
enter
mov
loopne
cmc
dec
cmp
push
xchg
movs
fld
xlat
sar
(bad)
ja
js
and
xchg
scas
cmp
inc
push
stos
lock
popa
stos
mov
and
mov
push
cdq
adc
xchg
sbb
pop
shr
retf
add
stos
shl
stos
add
pop
lds
dec
xlat
mov
push
ja
outs
loope
leave
dec
sub
jb
int
ins
push
sbb
arpl
or
mov
pop
xlat
mov
mov
fstp
add
ins
sbb
jmp
cli
push
or
pop
push
sub
xor
sub
sbb
or
popa
popf
ss
ja
adc
es
nop
xchg
lods
pop
push
das
and
add
adc
dec
cdq
es
aam
xor
mov
in
(bad)
xor
fs
add
aam
(bad)
mov
mov
adc
and
jno
data16
call
xchg
fistp
inc
inc
in
cmp
pop
out
jnp
cld
or
ret
sbb
(bad)
xor
rol
and
nop
sbb
enter
je
lahf
fdiv
dec
jne
fs
cdq
cmp
cld
fimul
pop
popf
stos
xchg
je
xlat
test
arpl
ins
sti
mov
add
sbb
ins
sbb
mov
imul
mov
mov
(bad)
push
jl
stc
mov
mov
mov
retf
pop
inc
mov
ss
dec
mov
fwait
xchg
mov
pop
(bad)
fisub
enter
mov
push
lods
xchg
xor
dec
or
jle
aam
cwde
mov
cmp
stos
cmps
neg
std
mov
imul
mov
(bad)
fwait
sbb
cs
pop
lods
(bad)
push
outs
mov
inc
retf
push
sub
test
pop
add
rcl
aaa
or
loop
rcr
out
sahf
(bad)
xor
dec
rcl
jo
push
rcl
(bad)
arpl
popa
addr16
jae
ja
cld
shl
dec
outs
shl
push
jmp
xchg
js
(bad)
daa
push
out
sbb
pop
not
dec
imul
or
enter
push
cmp
inc
lock
dec
add
in
sub
xchg
rcl
and
pop
inc
push
aas
js
mov
(bad)
pop
push
mov
fidiv
loop
xchg
and
mov
push
push
mov
dec
jmp
out
stos
movs
pop
mov
adc
pop
xor
outs
push
xchg
(bad)
push
push
sbb
dec
cli
or
lock
sub
int3
xchg
les
bnd
jmp
sbb
into
clc
pop
or
mov
xor
enter
call
mov
outs
mov
fstp
push
add
mov
xchg
xchg
daa
mov
stos
ficomp
call
pop
(bad)
cdq
fcmovnu
xor
mov
pop
mov
xchg
sub
cmp
popa
stos
sub
nop
mov
mov
in
jnp
and
pop
addr16
jmp
nop
adc
mov
call
and
nop
ins
cmp
pop
mov
xor
pop
es
lds
stos
enter
call
neg
fs
mov
mov
adc
inc
and
mov
mov
or
in
mov
adc
rcl
vpxor
mov
hlt
add
in
push
xlat
jp
es
xchg
push
(bad)
jge
test
mov
pop
mov
fimul
pushf
(bad)
push
inc
pop
(bad)
mov
jecxz
jmp
and
dec
jnp
fcomp
and
enter
popa
sub
ret
shl
pop
jbe
loope
sub
sub
jecxz
pop
les
sub
sti
sahf
mov
push
ss
movs
push
xchg
jle
pop
icebp
int3
dec
lods
shl
adc
les
xchg
dec
ret
push
or
(bad)
adc
loopne
add
sub
test
std
es
in
aaa
movs
mov
mov
adc
xor
cmp
cwde
hlt
lock
push
pop
sub
out
or
out
jo
add
shl
nop
outs
cmps
test
in
xor
orps
ficom
repnz
inc
mov
stos
dec
imul
inc
stos
add
and
pop
(bad)
scas
mov
lahf
adc
mov
popa
jbe
stos
mov
les
mov
nop
sahf
out
rol
and
test
data16
push
mov
imul
ror
arpl
outs
sbb
mov
pop
inc
sbb
and
or
arpl
jb
jne
cwde
aaa
inc
mul
sbb
leave
iret
pushf
rol
push
stc
pop
(bad)
pushf
sub
pop
mov
(bad)
pusha
fist
dec
jmp
sub
movs
repz
daa
sbb
fld
pop
or
sbb
pop
neg
loope
and
loope
mov
or
ds
stc
arpl
out
adc
test
xor
in
iret
sbb
pop
loop
sbb
imul
push
mov
test
mov
sbb
mov
stos
dec
dec
fmul
sub
loopne
pop
mov
pop
data16
rcl
mov
hlt
adc
xchg
xchg
xchg
icebp
pop
adc
(bad)
in
mov
fstp
push
pop
dec
pop
shl
xor
dec
jns
in
add
in
rcr
add
ror
mov
inc
popa
jge
(bad)
pop
int
sub
mov
cmp
fisub
(bad)
jns
shl
mov
fisttp
imul
cld
mov
pop
cld
jno
push
les
push
mov
sbb
push
inc
mov
stos
xchg
fimul
dec
cmp
jecxz
inc
mov
pop
jmp
pop
scas
stc
iret
xor
mov
pop
and
popa
pop
cli
stos
adc
or
cld
push
or
push
push
lahf
outs
jp
push
mov
push
inc
add
or
(bad)
mov
fdiv
pusha
add
cwde
dec
cmp
or
pushf
(bad)
jbe
mov
fcmove
inc
or
scas
adc
jnp
mov
xchg
xchg
repnz
int
inc
lods
or
dec
xor
mov
out
stos
iret
scas
xchg
leave
ds
ret
mov
xchg
mov
stos
ds
daa
loopne
scas
neg
fdiv
sbb
xchg
jg
sub
in
cmps
out
jmp
clc
dec
jb
pop
bound
inc
pop
push
inc
je
(bad)
sti
loop
dec
test
movsx
cld
lea
jb
mov
xor
mov
(bad)
mov
push
mov
and
or
pusha
aam
dec
xlat
out
mov
and
mov
js
aas
dec
dec
push
dec
sub
push
ror
adc
into
aam
sub
jl
in
xchg
adc
xchg
aam
mov
jmp
pop
mov
not
sbb
push
sbb
mov
add
cld
vhaddpd
sbb
dec
sbb
div
stos
ja
sub
mov
mov
js
adc
lods
push
mov
outs
imul
cmp
dec
imul
nop
cmc
dec
lods
mov
xlat
out
outs
out
push
daa
mov
outs
pop
mov
loop
sahf
pusha
(bad)
mov
imul
std
add
mov
push
(bad)
ror
lock
dec
mov
inc
fcomp
jbe
enter
xlat
std
(bad)
pop
xor
pop
aam
xchg
sbb
jo
in
int
add
cdq
mov
push
(bad)
loopne
xchg
mov
mov
ficom
push
cmp
dec
xchg
xor
mov
in
jmp
sub
movs
xchg
add
imul
pop
or
(bad)
cs
jg
inc
or
shl
push
sub
cmp
jecxz
test
mov
jnp
pop
sbb
mov
sub
sbb
cmp
aad
rcr
or
mov
or
mov
iret
sub
add
fdivp
daa
call
sbb
and
int
sbb
jge
(bad)
or
cmp
cmp
and
jne
mov
pop
cmp
fdivr
popa
xlat
popa
inc
jg
sahf
(bad)
add
and
mov
sub
jnp
pop
int3
repnz
sub
xor
nop
or
push
cmp
add
test
mov
stos
adc
sub
xor
xor
pushf
shr
push
mov
jo
xor
add
cmps
test
fistp
push
lods
arpl
outs
xchg
add
pop
vmovupd
push
mov
aad
das
adc
add
jmp
jbe
pusha
sbb
lahf
add
mov
outs
and
sbb
add
pop
mov
pusha
imul
(bad)
pop
in
pop
ins
aam
mov
add
cmps
pop
dec
add
in
sub
int
dec
(bad)
dec
call
cdq
push
int3
sub
jo
cmps
pop
loopne
loopne
dec
xlat
pushf
jl
dec
jg
shr
shl
sub
push
pop
mov
sbb
ret
idiv
adc
je
sbb
das
or
push
xchg
xor
or
dec
jnp
push
pop
sub
in
loop
mov
dec
test
adc
dec
icebp
lods
push
retf
mov
sbb
sub
in
xlat
cs
xchg
or
imul
std
jmp
fadd
cwde
(bad)
cmp
pop
xchg
mov
outs
cmp
sbb
push
jge
fdiv
mov
in
cmps
push
out
rcr
loopne
push
xchg
xor
adc
push
cli
nop
pop
enter
xor
int3
icebp
and
pop
xchg
mov
call
repz
nop
sbb
enter
xchg
cli
cmp
and
sbb
rcl
lahf
sbb
fstp
pushf
mov
out
or
sahf
jmp
in
mov
push
dec
dec
dec
dec
inc
pop
call
push
xchg
imul
mov
cli
retf
sbb
aas
sbb
loopne
cmp
leave
les
cmp
(bad)
xchg
dec
inc
(bad)
aaa
mov
test
dec
pop
rcr
cs
adc
and
les
cmp
stos
fisttp
fstp
sar
cdq
cmp
cmp
popf
sbb
and
mov
loopne
loopne
ret
(bad)
pop
pop
or
data16
gs
pop
lock
stos
(bad)
test
push
pop
(bad)
sbb
mul
mov
xor
dec
dec
xchg
in
mov
sbb
xchg
sub
cmp
int3
jge
mov
pop
repnz
add
repnz
inc
dec
loop
rcl
rol
dec
enter
xchg
xor
pop
pusha
sbb
xor
out
xor
push
xchg
push
push
add
sub
aas
cmp
sahf
pop
jne
cmp
pop
jnp
jmp
push
aad
jmp
pushf
sbb
jp
(bad)
(bad)
dec
xor
push
stc
mov
mov
sub
jmp
mov
mov
sahf
arpl
or
mov
aam
jns
xor
sbb
movs
lock
xchg
ror
sub
pop
stos
pop
inc
pop
jmp
push
jns
aam
sbb
pop
(bad)
inc
pop
and
cld
adc
push
sub
mov
jg
(bad)
xor
adc
sbb
mov
psadbw
in
xchg
out
dec
fcmovnb
test
pop
mov
enter
mov
bound
aas
fiadd
xchg
jmp
dec
ds
ret
ins
(bad)
mov
test
int3
(bad)
and
and
daa
jp
popf
pop
add
rcr
ftst
xchg
xor
dec
js
pop
mov
adc
push
sub
pop
pop
retf
sbb
dec
cld
nop
rdpmc
cwde
aad
jmp
push
in
loop
test
ins
sub
dec
mov
cmp
pop
cmps
push
mov
and
std
loop
jg
icebp
cdq
in
outs
xchg
loope
pop
call
adc
ins
setnp
aad
fstp
sbb
push
cli
dec
mov
xlat
and
popa
and
sahf
mov
clc
out
popa
(bad)
mov
stos
mov
les
pop
jmp
pop
push
and
pop
push
in
jl
cmps
push
or
mov
aas
mov
rol
pop
je
fwait
adc
mov
sbb
mov
imul
or
(bad)
xchg
mov
mov
pop
aaa
or
cmp
jl
lock
sahf
out
(bad)
je
lods
push
pushf
and
mul
jecxz
adc
fiadd
adc
push
sbb
xchg
mov
fwait
loop
not
push
fld
dec
stos
clc
test
call
adc
dec
test
(bad)
fs
mov
mov
ret
jmp
addr16
push
jmp
aas
xlat
cmp
mov
xor
jmp
add
ja
mov
in
(bad)
sbb
imul
sub
retf
in
hlt
xor
not
or
inc
mov
leave
rcr
int
div
sbb
mov
(bad)
shr
std
arpl
pop
ja
cmp
mov
jge
dec
sub
jg
cwde
pop
cld
int3
and
scas
mov
inc
jge
mov
js
push
sbb
aam
(bad)
in
lods
imul
jge
in
mov
xor
jnp
mov
push
dec
dec
jae
cmps
push
xchg
cdq
add
inc
or
je
aad
mov
shr
scas
aad
add
movs
mov
pushf
add
rep
push
jne
jb
loope
xor
xor
add
test
mov
mov
mov
rcr
pop
or
mov
xor
loopne
(bad)
lods
ror
add
cmp
lock
out
cwde
in
aam
jnp
not
dec
lea
lahf
int3
mov
xchg
mov
jb
rcpps
scas
dec
out
push
sbb
inc
pop
jge
cmp
ja
xchg
jbe
aam
jnp
sub
les
fpatan
int3
xor
and
push
cld
push
out
mov
xchg
mov
or
loope
jmp
jmp
xor
cmp
movs
data16
ss
xchg
sahf
mov
push
imul
pop
out
xor
dec
or
lea
ret
add
or
out
clc
call
adc
aam
sub
shl
imul
inc
(bad)
stc
dec
lods
inc
mov
repnz
fimul
and
push
arpl
push
sbb
xchg
pop
sbb
(bad)
(bad)
ror
pop
into
sub
xchg
inc
fsin
jg
mov
sbb
mov
sbb
mov
stos
cmp
push
sahf
xlat
dec
pop
sub
ret
pop
idiv
popa
cld
cmp
movs
and
mov
xor
sub
dec
repz
jns
sbb
rcl
jno
fist
repnz
jae
jge
inc
ret
in
push
fcmove
jbe
jno
fdiv
pop
jne
add
xchg
fwait
(bad)
xchg
adc
icebp
add
push
out
inc
inc
push
jae
pushf
call
cs
xor
inc
push
push
movs
pop
mov
add
jae
xor
fsub
mov
aaa
xchg
inc
push
lock
in
jge
dec
xor
std
cmc
nop
mov
mov
sub
lods
(bad)
jle
push
adc
inc
mov
xor
test
(bad)
loope
pop
outs
faddp
jo
pop
test
jne
push
mov
push
or
adc
shr
test
dec
mov
cs
jbe
popf
js
fdivr
ficomp
stos
mov
jge
cwde
mov
and
dec
add
out
push
int3
pop
gs
xchg
mov
pop
xchg
mov
push
dec
jle
mov
mov
lods
loopne
(bad)
cmp
in
inc
add
jge
dec
pop
test
pop
sbb
pop
sbb
popa
cmovge
into
int3
and
add
mul
leave
aaa
sbb
jbe
out
ins
fld
push
scas
out
cmps
rol
aas
pop
sbb
daa
fnstenv
pop
getsec
repnz
es
inc
mov
dec
or
push
push
sub
dec
or
mov
fisub
add
mov
pop
rcr
int
cs
mov
(bad)
jo
inc
ja
add
sub
cmp
fldenv
dec
or
mov
or
cdq
pop
push
push
sbb
lahf
jg
pop
add
xchg
inc
adc
test
push
pop
lods
inc
call
fdivrp
add
sub
push
xchg
mov
mov
add
stos
or
(bad)
fdivr
push
xchg
pop
mov
fptan
adc
jo
sub
adc
cmp
or
dec
lock
lahf
outs
mov
shl
repz
and
rcl
xor
adc
imul
mov
pop
add
sti
cld
test
push
loop
dec
mov
xchg
(bad)
scas
stos
movs
pop
cli
aas
mov
fimul
cmp
cwde
sbb
adc
data16
retf
mov
mov
cmc
or
mov
ins
iret
inc
sub
ja
cmp
daa
xor
cmc
push
inc
ins
call
inc
ds
imul
mov
test
pop
cli
cmp
sub
add
imul
call
add
adc
mov
sbb
ficom
rcr
push
mov
lods
or
outs
stos
int3
adc
and
and
ffreep
fmul
aad
into
ss
mov
pop
push
sahf
hlt
mov
dec
jmp
repz
adc
push
ins
push
outs
and
mov
cmp
sbb
not
jecxz
fdecstp
adc
cmp
dec
outs
xor
stc
in
push
pop
cmp
mov
pop
or
scas
call
int3
in
jp
jle
mov
mov
jge
lea
sub
fst
dec
test
test
push
int
lds
pop
je
push
retf
cmp
add
aad
add
add
push
rcl
push
mov
push
mov
jmp
call
xchg
rcr
jge
inc
enter
loopne
mov
mov
add
push
mov
push
push
dec
js
jns
sub
jge
loop
and
xchg
imul
mov
jl
pop
or
arpl
and
ins
sbb
pop
xchg
mov
retf
xchg
adc
sbb
xor
xor
pushf
push
jge
sbb
in
xor
dec
fptan
pop
pop
ret
in
sbb
(bad)
aam
pop
leave
mov
iret
dec
sahf
sbb
adc
pop
inc
mov
in
aam
pop
inc
jecxz
aam
push
popa
sahf
xor
fs
dec
xchg
xor
mov
lods
lock
push
mov
push
xor
jb
fwait
push
test
xchg
rcl
lds
fwait
pop
mov
mov
xchg
fucom
inc
mov
test
(bad)
lods
pop
jp
mov
ja
test
lds
fisttp
sahf
(bad)
lock
je
std
pop
sbb
neg
cmp
pop
push
or
or
jnp
arpl
cwde
push
out
or
retf
adc
cmp
punpckhbw
fsub
(bad)
mov
div
pop
ret
push
rol
or
icebp
jge
movs
push
ret
mov
or
mov
and
addr16
mov
mov
dec
push
retf
js
push
xor
inc
fdiv
add
or
shr
add
ds
jb
sti
add
adc
jne
add
bound
imul
and
dec
std
sbb
loopne
mov
xor
lock
pop
arpl
cmp
jae
add
hlt
(bad)
loop
call
lods
dec
repz
and
out
xor
jmp
movs
cmp
inc
movs
mov
rcl
push
jle
mov
popa
test
test
sub
or
mov
in
mov
sub
ss
ins
dec
xchg
xlat
clc
ins
xor
xor
sbb
inc
jle
dec
push
adc
dec
add
sub
and
jecxz
scas
pop
scas
inc
cdq
rcl
leave
imul
test
mov
arpl
pop
inc
sbb
arpl
jmp
xchg
pop
loopne
cmc
test
jmp
pop
pop
sbb
mov
mov
(bad)
pop
push
shl
cmp
pop
sbb
mov
loopne
jae
push
jae
or
lods
push
push
mov
and
jp
sbb
lahf
mov
sbb
mov
aam
cmp
sub
dec
add
lods
and
inc
gs
inc
mov
(bad)
aam
inc
dec
and
mov
out
out
(bad)
ret
pop
dec
cmp
pop
lahf
repnz
xchg
jg
jmp
mov
les
es
shl
xchg
mov
in
scas
ficom
mov
jb
sub
sub
mov
pop
mov
add
pop
cmp
add
pop
sub
les
jnp
sub
ds
outs
mov
(bad)
inc
pop
enter
mov
and
xchg
mov
stc
and
mov
adc
gs
fst
mov
lahf
test
outs
jbe
mov
nop
pop
mov
aad
fcom
into
cmp
test
popf
xor
and
es
and
out
add
test
push
mov
inc
fstp
(bad)
dec
or
fcomp
or
push
lock
and
mov
dec
pop
xchg
sar
pop
sbb
push
mov
mov
lods
(bad)
cmp
mov
gs
adc
push
and
pop
mul
mov
(bad)
ds
rcl
inc
jge
xlat
pop
jmp
add
wrmsr
push
xchg
ins
cmp
and
cmp
ror
inc
dec
mov
shl
fistp
inc
(bad)
int3
loope
xchg
not
mov
fild
mov
sbb
stos
lahf
xchg
mov
cmps
pop
jnp
test
rcr
push
sub
dec
fstp
mov
pop
dec
mov
push
pop
cmc
ja
push
out
cli
outs
ins
and
aam
cdq
sub
adc
mov
xchg
int3
in
sbb
sub
xlat
paddw
adc
jo
sbb
xchg
pop
fptan
lock
sub
lea
jne
(bad)
mov
fdivr
jnp
lods
sti
and
push
sub
mov
(bad)
push
lds
xchg
dec
xor
ds
xchg
loope
or
mov
lods
pop
adc
push
pop
icebp
cmp
xchg
xor
les
scas
cmc
adc
jp
jno
or
pop
in
cmp
sahf
clc
dec
fmul
mov
cmp
leave
cmp
xchg
pop
and
adc
jmp
jp
icebp
xor
loop
cmp
cmp
iret
out
xor
add
jmp
jmp
retf
in
retf
and
adc
mov
shr
fldcw
pop
cld
mul
mov
and
icebp
test
jo
dec
add
(bad)
sbb
mov
adc
jnp
mov
cwde
adc
pushf
jg
nop
sahf
push
fmul
sar
push
lea
icebp
sbb
adc
repnz
jg
sbb
adc
sbb
mov
sbb
loopne
sbb
mov
imul
loope
mov
pop
fs
xchg
or
sbb
mov
or
mov
cmp
add
pop
sti
mov
adc
push
imul
fisttp
test
adc
sub
push
sbb
(bad)
int
adc
ins
jno
mov
ficomp
in
shr
sahf
inc
adc
push
jne
js
daa
repnz
xor
cs
cld
loopne
movs
dec
lock
setbe
mov
movs
inc
sbb
popf
icebp
fcom
mov
es
clc
dec
xchg
pop
push
jnp
lods
push
push
ror
or
out
fmul
retf
xchg
sti
or
enter
and
pop
and
cwde
jno
mov
inc
shr
outs
push
push
shr
leave
or
(bad)
call
call
into
out
sub
push
cmc
ret
dec
mov
loopne
repnz
pop
pop
adc
pushf
cmp
pop
lahf
pop
push
(bad)
mov
push
cmp
jns
popf
dec
pop
xor
js
add
js
sub
pushf
mov
call
setb
and
pop
mov
enter
inc
push
movs
pop
mov
add
dec
inc
leave
retf
gs
es
rcr
dec
stos
pop
adc
test
and
push
xchg
shr
je
fcomp
inc
das
stos
ins
and
(bad)
gs
cmps
dec
pop
inc
call
cmp
sahf
outs
and
cld
push
call
test
test
push
outs
push
sub
outs
xchg
xchg
fild
or
dec
enter
in
call
sbb
jg
js
mov
pop
addr16
jne
mov
cs
aam
aad
jp
push
and
call
add
pop
(bad)
lock
xchg
sub
sar
cdq
mov
pushf
adc
push
inc
mov
(bad)
(bad)
sti
adc
(bad)
fimul
lock
ins
test
shl
xor
out
push
add
jnp
inc
in
test
and
push
shl
fmulp
or
(bad)
jmp
mov
pushf
adc
cmovl
mov
mov
cld
addr16
hlt
mov
and
ret
stc
adc
(bad)
idiv
dec
jl
aad
jb
sub
mov
aam
push
sbb
jmp
mov
cmp
in
or
sub
jmp
inc
or
test
cmp
push
mov
icebp
sbb
xrelease
loopne
sar
or
add
adc
mov
adc
mov
call
xchg
(bad)
cmp
int3
hlt
add
rol
repnz
je
xor
std
xchg
mov
dec
jno
sti
and
popf
sbb
adc
jmp
ins
rcr
(bad)
mov
mov
loope
sbb
dec
mul
rcr
and
int
les
pop
dec
aam
mov
adc
pop
jmp
es
sub
outs
js
stos
dec
loop
lock
pop
inc
sbb
jl
mov
sbb
mov
cmp
aam
mov
in
dec
or
fwait
addr16
mov
push
jno
fwait
mov
fwait
in
adc
sub
and
mov
sbb
cmp
jbe
add
mov
shl
outs
mov
pop
in
jle
jns
pop
not
sbb
dec
ret
push
sbb
or
ds
mov
mov
or
sub
and
sub
push
add
dec
xchg
add
cli
sub
(bad)
aam
mov
sub
pushf
push
inc
fidiv
or
(bad)
aaa
mov
and
and
cmps
idiv
aam
add
inc
pop
dec
call
lea
mov
mov
jb
mov
sub
(bad)
fcom
cdq
call
dec
jmp
and
add
and
(bad)
mov
cmp
jmp
mov
cmp
sbb
dec
mov
(bad)
popf
cmp
test
stos
(bad)
cmp
mov
lock
(bad)
pop
xchg
cmp
push
sbb
inc
mov
dec
and
inc
push
mov
pop
mov
sub
dec
push
cs
cld
arpl
xchg
aas
scas
xor
sar
xchg
test
inc
xchg
push
out
or
rol
(bad)
xor
mov
lods
sbb
push
xor
jp
dec
in
mov
or
mov
repz
aad
cmp
pushf
inc
out
mov
xor
popf
fcmovnb
(bad)
cmc
push
pop
sub
jp
lds
add
push
aam
in
outs
(bad)
mov
je
into
imul
mov
add
ror
sub
or
sub
in
pop
in
mov
fdiv
sub
dec
push
daa
ficomp
and
dec
push
pop
cmp
leave
or
fnop
pop
push
loop
mov
push
int3
cmc
push
mov
pop
clc
ss
mov
fwait
jg
mov
cmp
pop
shl
repz
xchg
loop
or
lds
(bad)
cli
outs
cmp
scas
xchg
xchg
and
mov
cmps
leave
jns
aaa
mov
inc
xor
or
cmp
add
jecxz
and
pop
cmp
scas
shl
les
dec
xchg
dec
pop
mov
xchg
push
retf
clc
xchg
out
icebp
mov
pop
cmp
ds
es
in
daa
mov
jp
out
ds
sub
mov
xchg
inc
adc
ret
stos
push
xchg
mov
clc
(bad)
push
outs
xchg
into
mov
ins
imul
shl
push
icebp
cmp
repnz
xchg
xchg
pop
sub
das
cmc
jmp
jle
stc
and
xor
jno
stos
add
inc
lock
cmp
mov
sub
bound
bound
pop
imul
push
or
dec
xchg
adc
retf
cdq
or
mov
cmp
fistp
jle
mov
inc
test
fsub
fsub
out
cmp
rcl
adc
sbb
jae
push
sbb
pop
cmps
hlt
cs
fist
mov
sbb
aam
push
sub
ins
sub
add
mov
je
mov
ins
mov
jge
test
sub
rcr
push
retf
xchg
loop
fcom
lahf
mov
(bad)
sbb
mov
xchg
or
xor
jbe
mov
dec
test
pop
clc
push
xchg
sub
int3
and
xchg
dec
(bad)
pop
test
add
dec
es
out
aaa
in
xor
icebp
mov
(bad)
daa
stc
ins
add
adc
jl
aam
das
leave
adc
jae
(bad)
sbb
dec
ins
sbb
jl
add
out
(bad)
loopne
mov
cwde
push
xor
xor
mov
and
cld
imul
mov
cmc
and
sub
add
xor
and
fcomip
cmp
rcl
retf
xchg
inc
inc
adc
fisttp
push
out
mov
sbb
dec
pop
adc
(bad)
fcomp
loop
inc
cdq
dec
inc
fs
inc
(bad)
sub
icebp
xchg
mov
and
xchg
into
push
inc
or
lea
mov
int3
push
pop
xlat
daa
stos
(bad)
ins
stc
xlat
dec
frstor
rcl
loop
ins
add
mov
in
call
in
popf
dec
mov
pop
ds
ret
rcl
xor
mov
(bad)
pop
je
mov
(bad)
push
mov
jbe
push
mov
add
stos
(bad)
loopne
mov
test
dec
fist
push
pushf
imul
or
in
adc
movs
mov
clc
ss
add
jmp
das
aad
dec
mov
mov
fneni(8087
push
jle
sub
adc
inc
inc
in
cmp
jnp
call
int3
les
aam
xlat
stos
and
xor
icebp
dec
ret
or
and
cmp
mov
out
or
imul
mov
fcomi
aas
xor
lods
add
xor
ds
xor
cmps
arpl
mov
add
pushf
les
mov
xor
xchg
jae
ins
or
jmp
dec
cmp
imul
push
mov
push
idiv
test
mov
xchg
jne
arpl
inc
out
adc
adc
sar
fldz
fsub
and
pop
aam
and
int
dec
or
dec
clc
inc
cmp
sbb
daa
cs
dec
inc
adc
pop
pop
cmc
inc
lea
pop
ficom
movs
ret
cli
aas
pop
ss
mov
lods
cmp
sbb
jno
jns
sbb
sbb
sub
jno
es
xor
clts
xor
xchg
mov
stc
xor
or
and
fcom
xor
std
sub
mov
jl
adc
and
pushf
pop
push
sbb
retf
xchg
nop
cli
loop
xor
outs
push
stos
aad
test
in
int
not
ins
es
lods
add
cli
sub
push
pop
movs
hlt
and
outs
sub
add
shl
nop
pop
(bad)
imul
pop
nop
lods
mov
sub
pop
pop
imul
cmp
sbb
(bad)
sti
rcr
xchg
mov
dec
test
shl
ss
leave
cmp
jbe
out
and
(bad)
push
icebp
and
pop
retf
push
fld
cmp
lods
fsubp
push
xchg
nop
gs
push
add
les
(bad)
push
(bad)
push
dec
pop
retf
in
in
sub
xor
xchg
lds
mov
out
jle
cli
std
add
xlat
stos
add
cli
dec
cwde
cmp
test
jnp
ins
jno
es
push
pop
push
cmp
and
mov
in
loopne
xchg
mov
push
in
(bad)
jp
jnp
push
cld
mov
adc
mov
sbb
leave
ins
cmp
(bad)
mov
mov
rol
xchg
lea
sub
xor
dec
mov
xchg
push
pandn
push
shr
stos
(bad)
mov
pop
vmread
(bad)
pop
not
sub
test
push
mov
sbb
pushf
outs
mov
popf
pop
xor
stos
push
dec
ins
test
fistp
mov
push
out
ret
shr
mov
jbe
cwde
ret
(bad)
cmc
push
sbb
push
pop
sub
push
or
push
and
or
pop
fst
aad
add
fsubr
push
xchg
sti
stos
pusha
cmps
adc
inc
in
inc
cli
test
mov
mov
and
sbb
cwde
std
mov
lahf
movs
push
push
and
xchg
test
shl
ins
sbb
es
in
cmp
inc
add
jnp
cli
sbb
pop
dec
int3
cmp
loope
push
add
ret
test
leave
mov
xchg
jle
jbe
daa
pop
mov
dec
jmpw
stos
push
xchg
sbb
push
(bad)
sbb
dec
xchg
movs
nop
stc
or
fcmovnu
pop
dec
pop
xor
xchg
push
test
sub
xchg
pushf
clc
(bad)
xlat
pop
test
loopne
mov
and
sbb
xchg
and
dec
jne
out
pop
pushf
dec
jp
xchg
push
inc
jb
pop
cs
sub
and
push
mov
add
and
retf
add
sub
mov
test
or
cmp
jmp
popa
(bad)
pusha
bound
movs
fmul
push
sub
cmp
cmp
mov
or
mov
shr
mov
inc
dec
fcomp
(bad)
push
sbb
fdivr
pop
mov
scas
add
cmps
js
outs
sub
call
and
mov
(bad)
mov
jmp
(bad)
out
push
cmp
xchg
daa
push
int
in
inc
cmp
mov
test
sbb
inc
add
into
or
xchg
and
inc
repz
xchg
pushf
xor
add
adc
and
addr16
add
pop
or
outs
mov
pop
lock
cmps
dec
dec
mov
jmp
jne
lea
cmp
jo
imul
cmp
test
jge
and
int3
jmp
pop
dec
sub
jo
aaa
(bad)
ins
push
(bad)
or
fstp
popf
fcmovbe
loopne
rcr
mov
pop
sub
pop
out
ds
xchg
loop
call
popa
mov
or
fistp
xor
stc
cmp
adc
mov
sub
xor
and
sbb
aas
jnp
or
dec
mov
jae
ds
popf
add
jle
ror
inc
and
xchg
push
jae
push
sbb
lods
or
(bad)
enter
clc
sub
loopne
xor
mov
fs
mov
pop
jp
std
in
adc
shr
cmps
or
fs
in
push
in
jle
mov
repnz
jne
sub
dec
(bad)
sbb
test
aam
or
jecxz
mov
pop
dec
fwait
daa
cmp
and
popa
inc
and
sub
mov
mov
xchg
pop
dec
imul
sbb
cld
repnz
mov
call
cmp
mov
xor
mov
test
jbe
xchg
cmp
js
inc
xlat
outs
call
cmps
shr
retf
cmp
outs
xchg
mov
mov
(bad)
jns
xor
adc
test
scas
dec
shl
add
lods
lock
fstp
mov
test
gs
fild
mov
(bad)
outs
xlat
mov
and
jmp
mov
rcr
pushf
and
hlt
pop
ds
lahf
std
jle
cmp
repz
int
xor
push
sahf
ss
outs
fld
mov
aam
and
add
jne
pop
pushf
adc
stos
ins
and
loopne
ds
imul
ficomp
rcr
mov
enter
cld
or
jp
and
mov
push
xchg
pushf
test
sub
sbb
cmc
fwait
or
gs
cmp
pushf
(bad)
in
das
cmps
jmp
adc
inc
sbb
fsub
int
xchg
inc
cwde
dec
inc
rol
mov
fldenv
and
jge
dec
xchg
out
pop
cmp
into
xor
lahf
cmp
xchg
nop
cmps
sbb
out
pop
mov
inc
push
shl
dec
pop
mov
shr
jl
stos
xchg
jge
pop
cmp
(bad)
jmp
jmp
jle
cmp
imul
xchg
fld
push
retf
bound
mov
jmp
adc
shr
in
xor
pop
shl
repnz
loop
push
jmp
dec
popa
je
inc
cmp
xor
pop
aad
imul
mov
daa
loop
sub
xor
sti
cmc
aad
ins
repnz
leave
pushf
ja
dec
int3
adc
mov
fld
cmp
test
pop
mov
push
nop
repnz
enter
mov
jmp
or
fldenv
push
neg
mov
popf
pushf
dec
js
cmp
pop
nop
mov
(bad)
ficomp
push
repz
dec
lahf
ffree
out
ja
inc
(bad)
mov
lods
fidivr
shl
push
cli
push
stos
jle
xor
stos
jno
daa
xor
sub
pop
cmps
aas
adc
cli
aam
imul
cmp
pop
dec
mov
xor
xor
adc
mov
repnz
pop
fistp
mov
push
mov
dec
dec
push
std
cmp
scas
gs
loope
stos
ja
call
mov
lods
ins
daa
scas
jb
push
sub
add
pop
fistp
(bad)
je
cld
xor
movs
pop
clc
mov
mov
jl
sub
fisub
mov
xor
jg
cmps
clc
jae
cld
sar
jle
and
push
ror
pop
jl
xchg
dec
popf
mov
aad
xlat
jmp
cmp
or
mov
rcl
int
dec
mov
dec
jno
sub
dec
shl
cmp
sbb
jle
lds
xor
int
scas
sub
dec
or
cmp
sbb
and
fwait
sbb
ja
xchg
push
dec
mov
sbb
rol
gs
sub
stc
dec
ins
inc
subps
jle
dec
shl
nop
lock
add
(bad)
sub
cmp
aad
adc
dec
lock
(bad)
xor
push
dec
pop
int
fld
sbb
cld
daa
dec
fsub
push
pushf
or
cmc
jmp
inc
retf
in
jns
and
mov
aam
fs
cmp
dec
fistp
jnp
out
push
jbe
xchg
ret
push
add
lahf
fld
loope
mov
aas
scas
mov
inc
imul
inc
or
sbb
sbb
mov
inc
es
sbb
mov
sti
pop
lds
lods
imul
push
aaa
inc
sbb
mov
push
daa
aad
popa
dec
mov
rcr
fcmove
sbb
aaa
sahf
mov
mov
pop
movs
fsubr
int
and
cmps
popa
scas
or
mov
cmp
mov
out
mov
push
push
int
cmp
(bad)
jmp
repz
or
xchg
shl
sub
fwait
repz
mov
mov
pop
sar
call
gs
cmp
pop
fidiv
pop
sub
xchg
and
adc
addr16
out
sbb
inc
push
inc
loop
(bad)
xchg
rcl
adc
ins
push
jl
push
out
nop
mov
ret
inc
push
fcomp
nop
jmp
or
stc
mov
wbinvd
int
fdivr
cwde
sti
into
hlt
inc
out
mov
and
ficom
call
pop
mov
cvtdq2ps
not
(bad)
xor
xchg
xchg
or
sar
push
stos
clc
add
out
mov
(bad)
pop
mov
dec
or
and
inc
and
cmp
frstor
cmp
xor
arpl
in
jns
sbb
loop
sub
out
fs
push
add
xor
push
(bad)
mov
fnstenv
mov
movs
(bad)
lahf
xor
nop
push
lods
jns
(bad)
mov
(bad)
fmul
shr
lea
psrlq
repnz
dec
pushf
and
fisub
jbe
scas
neg
int3
int
cmp
aaa
jb
cmp
pop
arpl
add
pop
pushf
pop
outs
mov
test
push
pop
call
pop
xor
fs
int3
(bad)
adc
jge
sbb
cmps
dec
cmp
popf
dec
dec
mov
mov
popa
jbe
aaa
inc
or
imul
mov
sti
into
aad
xor
out
mov
fadd
dec
sub
push
adc
ror
mov
fist
cld
icebp
pop
ret
push
fmul
jb
rcr
pop
cmp
fcmovbe
fidivr
stos
mov
cmps
pushf
push
dec
mov
mov
and
mov
cli
popf
cld
xchg
and
xchg
movs
pushf
jo
add
inc
clc
pop
fidiv
mov
(bad)
retf
or
bound
ror
cwde
xor
pop
sti
dec
loopne
mov
ret
arpl
stc
push
mov
jnp
mov
xor
lahf
inc
aas
arpl
and
inc
xchg
sub
popa
jge
leave
(bad)
mov
and
jp
fist
(bad)
int3
gs
out
push
cmp
movs
cmp
stc
mov
push
mov
xor
icebp
mov
mov
mov
mov
dec
dec
scas
mov
pop
fistp
imul
jmp
loope
inc
lock
and
rol
test
clc
pop
leave
mov
ins
aas
imul
int3
out
pop
loop
sub
les
movs
dec
cmps
pop
sbb
sub
out
test
call
(bad)
push
jb
loopne
sbb
jae
(bad)
repz
les
popf
(bad)
out
daa
hlt
rcl
dec
xor
(bad)
arpl
cmp
retf
cmc
adc
lods
sub
aaa
out
cld
cmp
pop
sbb
leave
cmc
pushf
(bad)
push
repnz
not
dec
mov
xor
int3
adc
adc
fld
and
sbb
jno
les
scas
mov
xor
rcl
cmp
cmps
add
test
cmps
loopne
push
push
ins
mov
jmp
and
xor
mov
out
mov
jmp
dec
inc
sub
inc
jmp
hlt
cld
sub
dec
dec
dec
cmp
ror
sub
inc
fnsave
retf
cdq
clc
mov
mov
or
daa
into
lock
hlt
out
sbb
cli
lock
mov
jb
rcl
and
in
dec
adc
ds
jl
fisttp
push
or
pop
pop
adc
nop
fs
fiadd
pop
sbb
aam
neg
mov
push
stos
mov
sub
ret
pop
cs
mov
lods
inc
gs
lock
ins
inc
mov
xor
xor
in
cdq
pop
xor
dec
sub
jae
aaa
retf
mov
aas
and
stos
or
jle
pop
dec
jbe
jge
or
and
mov
fdiv
push
das
les
pop
add
in
pop
xchg
inc
xchg
fcmovnb
call
inc
inc
imul
mov
push
(bad)
(bad)
xor
xchg
push
clc
cwde
xchg
out
dec
loop
add
in
sub
dec
sbb
iret
pop
ins
mov
mov
fadd
mov
loopne
xor
push
int3
lods
push
adc
xchg
add
adc
mov
xchg
xchg
(bad)
ror
pop
mov
mov
std
fcomp
fbstp
jnp
cmp
push
dec
inc
out
dec
retf
mov
hlt
sbb
jmp
(bad)
pop
lea
inc
popf
rcr
movs
dec
(bad)
call
sbb
shl
xchg
xchg
push
(bad)
popa
popf
jp
aas
add
inc
ss
push
mov
mov
adc
in
push
adc
fwait
loop
mov
mov
les
xor
mov
fsubr
lock
sbb
aam
inc
test
sub
cmc
mov
fld
mov
jne
(bad)
test
sbb
xlat
xchg
xchg
cmp
cdq
xor
mov
cdq
ins
fbld
dec
fistp
jge
mov
jg
enter
mov
mov
aad
push
mov
out
sub
mov
push
scas
jo
cmc
ss
ror
loop
inc
inc
(bad)
sub
pop
sbb
inc
lea
pop
push
cwde
inc
(bad)
imul
sbb
fwait
jg
jae
and
and
push
mov
push
cmc
mov
push
je
mov
arpl
ret
(bad)
mov
and
rcl
xchg
dec
sub
scas
dec
mov
cmp
ficomp
icebp
and
cmp
cmps
cmp
test
call
add
mov
shl
fnstsw
out
inc
out
push
lods
jno
pusha
or
xor
stc
aas
dec
push
pop
jl
fimul
jecxz
(bad)
sub
(bad)
ret
mov
cwde
cmp
mov
pop
aaa
outs
pop
int
mov
and
pop
cmp
stos
sub
inc
pop
cmp
sub
xchg
mov
in
push
(bad)
pop
push
setno
and
lods
mov
push
aas
push
in
imul
cld
dec
popa
retf
(bad)
inc
pop
push
dec
pop
xchg
cmp
int3
adc
cmc
cmp
cld
rol
sub
sbb
and
push
fisubr
test
sub
shl
jae
cmps
mov
sbb
ret
data16
rol
mov
adc
pusha
cmp
xchg
mov
fist
imul
push
inc
xchg
push
jne
xor
data16
lods
xchg
aaa
push
xor
mov
out
push
pop
dec
pop
cli
ja
xchg
mov
push
and
pop
add
sub
std
push
sahf
add
xor
adc
and
pop
push
or
jne
stc
rol
dec
call
mov
in
mov
sub
xchg
pop
in
jg
or
fcomp
scas
imul
loopne
jns
stc
int
hlt
dec
(bad)
mov
in
outs
test
or
movs
outs
loope
loop
ja
dec
pop
outs
retf
mov
mov
pop
sub
test
dec
or
loopne
aaa
push
mov
push
inc
and
push
xchg
cdq
cld
xor
push
xchg
mov
pop
mov
lds
mov
dec
cdq
add
adc
sbb
cdq
(bad)
cld
ss
pop
out
out
push
sahf
xlat
pusha
jo
mov
sub
mov
dec
data16
(bad)
push
fcomp
jp
aam
mov
(bad)
shl
mov
into
test
data16
test
add
(bad)
repz
movs
lock
lock
xchg
and
mov
cmp
es
mov
push
clc
pop
jae
jae
jnp
sahf
lock
mov
repnz
and
dec
sar
push
mov
xchg
sbb
pop
add
pop
xchg
retf
pop
fisttp
dec
mov
rol
inc
shl
je
push
inc
dec
cld
adc
pop
or
sbb
push
iret
daa
jle
pushf
ret
cmp
std
test
mov
rcr
ror
push
loop
push
and
dec
mov
je
pop
or
mov
jnp
mov
mov
arpl
push
add
inc
pop
gs
or
sub
jmp
les
popa
lods
or
pop
jg
jnp
pop
aad
jmp
cmps
adc
es
enter
enter
in
jl
add
mov
or
dec
cmp
push
bound
ja
loopne
push
test
sub
cmp
pop
jns
sahf
lea
cwde
pushf
xor
mov
loopne
ror
push
in
pop
std
sub
out
imul
cmc
pop
rol
push
sbb
in
aam
std
adc
push
nop
and
int
lahf
daa
cmc
or
or
(bad)
mov
push
dec
mov
mov
mov
jo
mov
pop
rcl
gs
popa
(bad)
int3
rol
dec
cs
fidiv
push
add
mov
popa
in
jmp
jo
dec
in
add
ror
mov
fsubr
cmps
stos
mov
mov
and
sbb
mov
idiv
mov
mov
test
daa
pop
cmps
cmps
rsqrtps
scas
int3
adc
js
loop
push
cmp
push
push
pop
imul
xor
loopne
xchg
clc
mov
push
ficom
leave
mov
and
into
add
xchg
inc
xor
and
popf
xchg
movs
dec
or
cmps
(bad)
mov
mov
cmp
xchg
js
and
push
neg
sbb
pop
jae
lods
dec
xor
adc
icebp
retf
test
adc
inc
xor
xchg
stos
add
xchg
mov
iret
jge
sub
gs
or
leave
shl
and
test
retf
pop
sti
sub
arpl
aam
add
inc
sbb
add
mov
pop
mov
and
int3
sbb
cmp
rol
pop
int3
clc
adc
xchg
and
pop
es
mov
adc
pop
test
xchg
jl
nop
cmp
add
mov
(bad)
push
inc
test
push
scas
jg
add
add
mov
dec
fcomip
leave
ror
jmp
mov
xchg
or
aam
dec
hlt
cli
loopne
repnz
xlat
add
ret
sti
sahf
lods
dec
fidiv
in
add
ja
jo
add
enter
clc
inc
nop
sti
pop
ja
fwait
xor
xlat
dec
lea
aaa
xor
clc
jno
push
(bad)
adc
movs
imul
adc
imul
lods
push
or
es
stos
idiv
inc
scas
pushf
and
popf
pop
gs
or
fild
shl
les
ins
mov
push
jge
push
cwde
gs
sbb
jge
ins
pop
dec
leave
sub
pop
ficom
or
std
cmp
pop
fisttp
mov
and
hlt
inc
jl
mov
jmp
jnp
and
mov
push
push
add
lds
and
pop
sub
call
xchg
mov
ja
bound
out
pop
jmp
add
push
out
mov
ret
dec
lock
ds
ss
adc
mov
add
jge
ins
aam
movs
dec
dec
out
mov
add
push
dec
mov
(bad)
mov
add
les
lahf
xchg
mov
sbb
pop
xchg
inc
bound
loopne
jmp
cli
rcr
loopne
fistp
xchg
jle
inc
rcr
jmp
aaa
shl
jo
lea
xor
or
xchg
inc
sar
mov
inc
ror
(bad)
mov
in
addr16
rol
les
pop
jns
jg
mov
push
pop
pushf
fwait
cmp
or
add
dec
sbb
idiv
test
adc
push
or
add
and
or
test
jo
rcl
jno
addr16
fisub
jbe
mov
popf
(bad)
ins
mov
xor
leave
out
cs
(bad)
jno
dec
cwde
cmc
addr16
mov
inc
shl
push
pop
lahf
mov
sbb
jne
dec
xlat
cs
push
xchg
ins
mov
loope
pop
pop
sub
jb
mov
push
in
dec
int
inc
pop
push
push
jp
xlat
add
push
xor
xor
mov
adc
jbe
mov
fdiv
lds
cdq
and
or
add
in
adc
daa
dec
shr
xor
arpl
rcr
inc
pushf
jle
ror
int3
pop
xchg
mov
add
add
sbb
add
add
pop
hlt
pop
jno
jmp
mov
lods
xor
sbb
and
xlat
adc
sub
xchg
or
idiv
movs
inc
dec
xor
xchg
fistp
push
mov
pop
(bad)
retf
add
xchg
fcmovbe
push
dec
out
mov
sbb
inc
scas
ins
fdiv
add
mov
fcomp
jmp
add
xchg
xchg
dec
cmp
das
lods
pop
stos
mov
mov
push
retf
imul
lods
cdq
mov
sub
and
outs
pop
in
mov
dec
neg
dec
jl
mov
jb
cdq
push
(bad)
iret
add
add
push
pushf
pop
push
cmps
push
pop
adc
fistp
push
xchg
or
or
dec
ins
sbb
(bad)
rcr
fiadd
add
shrd
mov
mov
imul
pop
xchg
jl
pusha
ss
add
jl
push
pop
fidiv
aad
xchg
sub
sub
rcr
push
imul
inc
outs
mov
outs
cli
xchg
pusha
stos
pop
cmp
inc
mov
pop
shl
mov
pop
pop
or
ja
out
xchg
or
pop
xchg
(bad)
jmp
icebp
imul
mov
push
nop
outs
loop
out
inc
push
xor
mov
and
jne
popa
inc
jae
xchg
in
add
pop
rcr
shl
test
push
(bad)
pop
inc
clc
mov
push
fistp
and
inc
ja
inc
push
xchg
mov
mov
(bad)
retf
fs
fdivp
ds
xchg
pop
adc
pop
xchg
sbb
mov
test
jnp
sbb
fs
fldenv
xor
out
mov
iret
push
push
ins
inc
popa
int
sub
dec
mov
(bad)
push
pop
mov
fdiv
je
fmul
nop
int3
in
dec
mov
xchg
icebp
and
loopne
xlat
fild
xchg
mov
loopne
mov
cwde
adc
cmp
nop
dec
ret
in
jb
stc
cmp
xor
mov
loop
cmp
outs
cmp
sti
jo
mov
jnp
mov
scas
mov
int
(bad)
(bad)
mov
in
pop
xchg
shl
dec
xchg
push
push
sub
outs
dec
call
mov
mov
adc
fcomp
ins
push
cmp
jecxz
data16
mov
push
stc
lock
test
adc
or
xor
shr
out
and
(bad)
cmp
and
dec
rcl
jmp
or
dec
int3
pop
daa
and
adc
pop
in
sub
aaa
sbb
dec
add
retf
sbb
cs
pop
sbb
inc
jae
add
(bad)
xor
mov
push
mov
movs
mov
adc
xlat
in
scas
stos
jmp
cwde
lds
std
xchg
cwde
mov
sub
sbb
out
pop
pushf
push
popa
dec
(bad)
ret
leave
scas
jne
mov
push
xchg
mov
push
adc
inc
sbb
lds
pop
call
pop
int3
xor
mov
jns
ins
sub
aam
add
or
mov
xor
and
fadd
rcr
adc
dec
xchg
cmps
and
sub
cmc
fst
xchg
push
sbb
cmp
jge
vpaddb
iret
add
mov
fdiv
push
ds
sub
out
xchg
pop
mov
xor
rcl
push
push
cmp
cmp
in
push
cld
addr16
in
dec
inc
call
out
test
lock
add
out
repz
push
xchg
mov
add
retf
lahf
mov
lods
sbb
mov
dec
dec
std
xchg
int3
xchg
dec
out
pop
inc
inc
push
repz
dec
push
push
cmc
test
inc
je
nop
and
test
cs
es
dec
je
cwde
into
mov
add
mov
test
in
inc
faddp
xchg
mov
mov
push
in
push
pop
push
dec
push
jge
xchg
int3
push
push
loopne
mov
xchg
xor
mov
inc
aaa
aad
mov
ret
or
xchg
fs
lds
xchg
sub
sti
fwait
shl
mov
outs
outs
call
mov
lea
jmp
adc
fisttp
imul
dec
pop
div
cmp
inc
xor
scas
or
cmp
cmp
mov
sub
sbb
loope
daa
cmp
jae
xor
scas
in
cmc
imul
das
dec
in
mov
fist
dec
pop
clc
div
inc
cmps
mov
push
loopne
loop
pop
out
adc
xchg
nop
shl
icebp
push
fisttp
sub
and
sbb
gs
mov
pop
(bad)
dec
pop
mov
shl
neg
sub
test
inc
cmp
adc
rcl
dec
ins
push
mov
fdivp
dec
dec
inc
retf
cmp
cmp
dec
sub
in
pop
ins
lock
inc
stc
popf
call
jecxz
mov
pop
js
ss
sti
push
jmp
shl
mov
fistp
sbb
add
xchg
fs
or
mov
adc
imul
xchg
loop
std
fwait
dec
adc
imul
push
add
js
pop
and
cld
popa
sub
ins
cmp
lea
(bad)
push
push
cld
push
mov
push
jge
adc
retf
int3
out
je
dec
ins
cld
call
xlat
fwait
dec
inc
push
xchg
ins
ins
rol
rcr
sbb
(bad)
inc
cli
arpl
mov
jge
pop
xchg
mov
leave
in
or
rol
and
mov
xchg
xor
fs
cmp
outs
js
out
(bad)
jb
rol
loop
push
inc
pop
and
(bad)
mov
cmp
(bad)
push
call
out
pop
inc
movs
popw
cwde
mov
sub
(bad)
out
and
dec
xchg
dec
lods
push
sar
mov
ins
mov
sub
jb
daa
mov
addr16
ja
pop
jle
arpl
fcom
aam
sbb
sbb
in
mov
push
dec
js
jmp
pop
addr16
jns
mov
add
test
int3
xor
push
iret
loop
cmc
xchg
into
mov
add
xchg
jmp
(bad)
xor
mov
pop
sbb
sub
mov
add
pop
imul
add
arpl
hlt
mov
pop
mov
mov
sub
adc
call
sub
dec
cmp
adc
sbb
xchg
call
aam
iret
jnp
rcr
movlps
sbb
neg
mulps
outs
or
sbb
pop
mov
mov
imul
out
adc
arpl
test
mov
push
push
mov
inc
pop
cmp
ret
mov
and
arpl
aaa
cmc
xor
jmp
ret
inc
or
cmp
rcl
cmp
fnstcw
fild
xor
jae
xor
cmp
sbb
lock
adc
cmc
ret
jp
xlat
xor
mov
out
jnp
mov
jmp
pop
cdq
(bad)
in
jo
add
(bad)
movs
cli
jecxz
and
movs
fwait
mov
sub
fst
cmps
ror
cmp
stos
(bad)
out
push
mov
leave
and
pop
and
sbb
je
and
sbb
dec
jge
jns
sub
fsub
or
sub
xor
lahf
mov
xchg
test
or
movs
jae
mov
(bad)
dec
(bad)
pop
loopne
dec
xor
xor
push
push
or
jge
add
test
lahf
in
sub
pop
jo
mov
es
add
out
enter
jg
push
mov
cmp
mov
test
neg
in
pushf
std
dec
mov
in
fsubr
pop
xchg
jmp
fwait
jae
dec
mov
add
mov
loope
push
call
sub
ret
sbb
(bad)
add
inc
into
fld
cs
lock
sub
retf
mov
fstp
mov
aaa
(bad)
adc
retf
xchg
mov
add
push
ror
push
ins
mov
(bad)
mov
and
push
xchg
jmp
mov
in
pushf
xor
or
cmp
sub
xchg
out
push
jp
dec
out
pop
lods
push
outs
xor
cmp
pop
add
movs
pushfw
pop
(bad)
cmp
dec
xor
jmp
sub
std
xchg
inc
push
dec
push
adc
xchg
ja
xchg
rcl
call
add
ficomp
dec
stos
mov
jmp
pop
pop
cwde
popa
adc
sbb
adc
sar
(bad)
sbb
mov
jno
out
lds
ss
xchg
mul
fdivr
std
mov
inc
xor
xchg
enter
stos
xchg
or
jmp
dec
dec
pusha
in
cmp
fld
fsub
frstor
push
(bad)
pushf
push
dec
call
pop
fld
mov
push
fs
cwde
dec
xchg
aaa
xchg
call
arpl
(bad)
gs
push
push
pop
rol
sbb
fcomp
add
nop
ja
loopne
push
mov
mov
jno
in
in
(bad)
push
cmps
jne
nop
jno
and
pop
xor
xchg
xor
cmp
into
mov
stc
and
pop
cmp
push
aad
push
(bad)
out
push
push
dec
adc
ds
inc
es
stos
data16
imul
push
sbb
mov
fdivr
sub
nop
inc
sub
test
out
mov
ins
jbe
push
imul
pushf
neg
arpl
mov
xor
jmp
sub
cs
leave
retf
pop
aad
mov
rol
jge
sub
pop
push
sbb
test
inc
cs
lods
xor
test
xor
dec
dec
adc
out
fimul
sahf
xchg
adc
jmp
mov
rcl
bound
shr
adc
push
mov
stos
test
dec
inc
sub
mov
(bad)
mov
loopne
outs
mov
lahf
pop
or
dec
ja
js
push
shl
sub
push
cmp
pop
pop
mov
xlat
aam
mov
sahf
sti
push
sbb
jbe
xchg
push
adc
dec
cmp
cmp
arpl
fisttp
inc
rcr
or
sbb
mov
and
fisubr
int3
in
sub
in
ror
push
dec
push
retf
test
fadd
mov
lahf
das
xchg
push
les
mov
mov
fwait
cmp
shl
add
hlt
jae
rcl
loopne
arpl
jmp
out
popa
loope
jmp
in
cmps
fs
scas
push
test
shr
sbb
(bad)
stos
jg
cmp
fwait
mov
int
xor
xor
ja
inc
fwait
pop
nop
mov
sub
lods
cmps
out
xchg
in
adc
sti
sub
loopne
mov
pop
pop
adc
mov
jp
inc
push
arpl
cmp
mov
fcmovnbe
lods
mov
dec
push
sub
in
adc
(bad)
push
aam
std
sub
fld
ret
and
dec
int3
mov
nop
mov
push
sbb
mov
fst
push
sbb
dec
or
(bad)
dec
push
mov
jne
cmps
add
jno
mov
ficomp
imul
and
retf
mov
dec
fimul
dec
mov
mov
jp
mov
test
shl
cmps
mov
jb
fstp
or
pop
or
int3
dec
nop
jno
xchg
lock
dec
fistp
mov
pop
test
rol
inc
ficomp
inc
out
adc
jb
push
mov
das
ins
pop
out
fdivr
icebp
ror
imul
push
ss
ins
scas
loopne
mov
stos
popa
call
inc
and
and
movs
in
xor
fld
xchg
fdivrp
in
iret
mov
jmp
clc
fidivr
jbe
xor
xlat
xor
push
cmp
fadd
push
(bad)
aad
imul
jae
dec
jns
dec
sub
in
and
jo
dec
test
or
mov
inc
push
ss
mov
cmp
pushf
xchg
sbb
push
stos
std
mov
inc
inc
xchg
(bad)
and
sbb
add
addr16
mov
pushf
loop
(bad)
mov
inc
gs
adc
sbb
inc
xor
ins
cmp
jmp
dec
mov
das
jae
std
cmp
jbe
push
pusha
maxps
xor
inc
out
pop
in
jg
std
sbb
iret
dec
jl
sub
leave
in
or
jmp
lods
add
(bad)
xchg
add
push
scas
mov
mov
or
add
xor
dec
add
test
adc
sub
cmc
int3
jl
or
mov
mov
mov
and
call
xchg
xor
adc
mov
dec
jg
icebp
jl
fiadd
sar
or
clc
cwde
mov
cmp
pop
inc
mov
ins
push
jle
push
mov
in
les
push
data16
mov
mov
mov
in
inc
(bad)
push
and
inc
add
jnp
mov
in
(bad)
ret
mov
mov
pop
pop
add
xor
inc
jnp
or
(bad)
adc
mov
push
and
gs
xor
mov
cmp
aad
sbb
push
push
mov
pop
bound
sbb
cs
sbb
pop
pop
pushf
and
sub
push
imul
or
sbb
out
push
out
aas
(bad)
push
retf
push
xchg
nop
dec
mov
jmp
sub
clc
jle
and
push
pop
push
jmp
ret
repnz
sub
bound
mov
xchg
mov
adc
mov
sub
pop
xchg
xchg
jmp
cld
dec
repz
fidiv
fwait
xchg
out
push
xchg
sub
sbb
adc
xchg
neg
inc
pop
xor
sub
fwait
adc
and
xor
jae
or
cmp
in
mov
and
mov
push
idiv
add
push
xchg
(bad)
std
aaa
jnp
jb
ret
sbb
xchg
fsubr
cmp
dec
jecxz
sbb
int
aam
shl
push
imul
mov
push
out
iret
mov
daa
cmp
sbb
mov
cmps
stos
mov
ins
xchg
les
jo
fdiv
lods
jmp
cwde
xchg
out
mov
(bad)
fcom
or
ja
arpl
das
push
dec
pop
cwde
jl
inc
jg
dec
push
rcl
rcl
cmp
jno
mov
aad
imul
xchg
push
fcom
push
mov
in
ja
or
cmp
mov
sti
pushf
aaa
jo
(bad)
sbb
je
adc
into
ja
sub
push
inc
jns
enter
(bad)
xchg
dec
lea
(bad)
xor
sbb
aas
add
xor
shr
fnsave
repnz
push
cmp
sbb
aam
and
rcr
scas
cmp
sub
pop
aad
xchg
hlt
loopne
ret
push
cmp
dec
clc
push
(bad)
int3
push
je
sub
push
xor
push
retf
inc
mov
mov
pop
cwde
sbb
xlat
xor
cmp
cs
int3
xlat
jae
(bad)
xor
pop
loop
sbb
in
xchg
ins
pop
mov
push
push
aam
fist
ret
xchg
jno
das
shl
xchg
cmp
mov
pop
dec
in
dec
popa
movs
shl
(bad)
test
ja
adc
mov
mov
sub
xor
push
push
add
test
xchg
and
cdq
add
cmc
mov
sti
in
jmp
js
sub
inc
pop
push
ror
dec
jmp
and
adc
int3
out
loopne
fprem1
push
xor
jmp
mov
dec
js
fimul
or
jecxz
fidiv
cs
jnp
leave
jp
adc
aaa
inc
adc
test
xor
jb
cmp
aam
leave
sbb
dec
in
cmps
shl
gs
push
hlt
(bad)
ror
jno
rcl
out
add
push
mov
stos
pop
test
popf
sbb
pop
push
in
pusha
pop
dec
(bad)
repz
xchg
nop
sahf
shl
dec
daa
aad
add
add
ds
fnsave
lahf
lock
aaa
jg
mov
push
(bad)
aaa
inc
push
or
jp
jmp
out
sub
or
pop
call
xor
push
jo
adc
cmp
mov
movs
inc
repnz
stos
fild
sbb
inc
sti
(bad)
adc
test
les
je
mov
out
pop
mov
inc
dec
mov
jbe
jmp
aam
dec
ds
les
and
retf
cmps
and
(bad)
fild
push
jge
dec
inc
dec
sahf
mov
out
mov
add
cmps
inc
ds
shl
dec
mov
arpl
es
add
pop
push
mov
pop
mov
cmps
xchg
aaa
shr
adc
push
sub
fdiv
and
ins
bound
mov
push
dec
mov
test
push
psubsw
(bad)
hlt
call
js
sbb
sub
ret
movs
xchg
lds
dec
sub
xchg
dec
fxtract
repz
cmp
xchg
xchg
push
je
retf
fcom
inc
in
imul
xchg
inc
call
idiv
loop
(bad)
mov
(bad)
ficom
ja
sbb
or
mov
(bad)
js
or
sbb
out
push
int3
cmp
inc
test
hlt
push
mov
push
mov
sub
mov
sbb
add
or
sub
out
out
fsub
dec
rcr
pop
fdiv
adc
xor
aas
and
inc
je
jmp
lds
pop
cwde
mov
dec
xchg
jmp
jae
push
loopne
and
xchg
add
loope
ror
add
push
aas
jmp
cmc
rol
retf
jl
add
xchg
neg
mov
xchg
sbb
loope
and
or
cld
xchg
dec
stos
xor
pop
repz
arpl
ret
(bad)
xchg
xor
jbe
fcom
adc
xlat
add
leave
push
or
mov
push
int
adc
int3
jmp
(bad)
push
rcl
sbb
mov
mov
sub
sbb
sbb
ret
(bad)
out
mov
xor
dec
inc
in
jo
inc
pop
push
xchg
sbb
xchg
cmp
add
sbb
rcr
int3
cmc
push
stc
pop
sbb
dec
mov
mov
lock
add
cmps
jl
mov
dec
jno
inc
fcom
movs
pop
dec
loop
jecxz
gs
inc
dec
das
cmp
xor
pop
(bad)
mov
shl
sbb
icebp
fcmovnbe
popa
movs
imul
stc
cli
add
adc
xor
and
aas
sbb
loopne
(bad)
out
adc
and
jg
pushf
sub
arpl
loopne
(bad)
cmc
out
inc
cmp
scas
jo
lods
not
(bad)
dec
out
test
test
fisubr
dec
push
xchg
cmp
mov
jnp
hlt
adc
cmp
call
jp
adc
push
xchg
xchg
outs
test
pop
sub
test
jmp
or
mov
(bad)
sbb
pop
pop
clc
fistp
mov
sub
sub
mov
mov
ret
pop
adc
pop
mov
sahf
xchg
lea
je
mov
push
pushf
cmp
jo
fnstsw
cmp
loope
(bad)
sbb
scas
dec
out
out
cmp
dec
cmp
fnstenv
or
in
in
and
xchg
(bad)
sbb
int
sbb
xor
mov
pop
cmps
xchg
jmp
xchg
(bad)
stos
mov
sub
test
push
lods
stos
popf
adc
lock
jno
pop
sbb
mov
mov
sub
out
lods
pushf
in
dec
sub
call
out
je
(bad)
fdivr
es
in
imul
jmp
enter
mov
lds
out
sbb
lahf
and
and
in
(bad)
(bad)
hlt
aaa
pop
mov
(bad)
jne
cmp
sub
add
test
fldenv
aad
push
jae
push
and
xchg
test
and
sbb
xchg
add
out
iret
jp
fcmovnbe
(bad)
sahf
adc
idiv
jmp
xchg
mov
stos
outs
cdq
jge
lea
out
jle
shl
ret
jb
sub
mov
iret
(bad)
cmp
sub
retf
inc
pop
dec
or
push
xor
xor
aaa
jle
mov
int
sahf
pop
pop
out
fs
mov
dec
pop
dec
es
pop
hlt
push
cmp
pop
xor
loopne
lock
mov
mov
sbb
mov
pushf
lock
out
imul
jle
jmp
in
lds
lea
mov
xor
aas
lods
arpl
inc
mov
shr
add
mov
mov
ins
cld
jb
sub
jmp
aad
sub
mov
imul
out
sub
pop
jno
scas
shl
imul
cs
push
xor
out
jnp
inc
cmp
sub
or
pop
jmp
push
leave
arpl
jne
adc
xchg
pop
add
fisttp
add
stos
xchg
addr16
arpl
sub
xor
pop
xchg
dec
loope
ret
xchg
cmp
gs
outs
js
xchg
push
mov
pop
inc
mov
push
pop
fst
scas
fsubr
clc
fiadd
pushf
push
aad
popa
cld
je
in
adc
push
mov
sub
jno
dec
add
stos
out
lods
dec
rcl
adc
in
ds
push
pop
mov
sbb
lahf
arpl
call
add
and
outs
mov
mov
int3
xchg
fs
shr
dec
xor
cs
xor
xor
ins
or
cmp
out
dec
and
and
adc
cwde
push
(bad)
lea
cld
xchg
scas
aas
mov
pushf
dec
jnp
(bad)
(bad)
ja
fnsave
popf
movs
arpl
mov
imul
xor
movs
add
push
loop
add
int3
addr16
sub
push
ret
push
hlt
inc
inc
stc
and
dec
xchg
pop
xchg
sbb
loopne
pop
(bad)
push
imul
lods
(bad)
mov
fsubr
loopne
cld
adc
mov
jo
cs
mov
jmp
jge
push
pop
xor
aaa
out
adc
dec
cmp
jg
mov
fs
xchg
mov
mov
ret
inc
ror
aam
or
inc
add
inc
stos
sub
ss
push
(bad)
mov
or
out
lods
cmc
pop
xchg
fs
xchg
inc
std
pop
mov
mov
(bad)
pop
adc
daa
cld
and
cmp
xchg
lods
jmp
cmp
sub
movs
inc
mov
in
jmp
cmp
sub
push
inc
js
sbb
(bad)
push
sbb
test
jmp
cmp
out
jne
outs
mov
adc
add
dec
xor
test
and
ror
aas
xchg
(bad)
push
pusha
push
(bad)
add
stos
adc
retf
add
push
or
ja
dec
sub
sahf
(bad)
imul
fist
iret
lea
aaa
mov
dec
and
ret
pop
in
fild
jmp
mov
daa
ins
ds
mov
fiadd
inc
aam
push
cmp
sub
push
pop
in
sbb
mov
xchg
push
int3
jnp
(bad)
sub
jl
pop
or
pop
rcr
pop
je
enter
xor
sub
ins
xor
imul
xchg
mul
iret
mov
or
(bad)
int
sahf
aas
add
mov
arpl
push
sub
fiadd
in
lods
aam
mov
cld
sub
rol
into
(bad)
ja
sub
sbb
mov
(bad)
loop
mul
push
mov
sbb
(bad)
rcl
cmps
nop
xor
not
stos
and
(bad)
pop
mov
sbb
sbb
outs
add
sti
xchg
(bad)
iret
mov
bound
cwde
xor
xchg
mov
adc
sbb
sub
movs
pop
imul
sub
and
cmp
ret
jle
fcom
dec
bnd
outs
sub
ficomp
sub
call
pop
xchg
sub
mov
dec
in
pop
js
lods
xchg
inc
shr
sbb
sub
cld
sub
and
call
inc
jp
xor
xor
cld
ds
xor
inc
fimul
inc
push
inc
repnz
mov
inc
jo
jp
xchg
les
in
retf
pop
imul
mov
mov
ss
jns
in
sbb
icebp
mov
add
cmp
imul
(bad)
dec
pop
cmp
mov
mov
push
xchg
mov
int3
in
ror
loope
or
push
imul
inc
jecxz
mov
jmp
push
or
hlt
sbb
repnz
and
fbld
xchg
pop
pushf
cmc
(bad)
shl
mov
mov
jl
push
movd
lock
cmp
push
mov
xlat
push
push
in
and
cmp
add
mov
add
or
and
fadd
lock
repnz
pushf
aas
pop
sub
jg
xor
lods
mov
sti
pop
mov
push
xor
mov
test
rol
js
push
add
and
sub
dec
dec
inc
mov
test
lahf
xchg
xchg
xor
xchg
call
adc
leave
xchg
or
push
in
bound
sbb
in
sti
fs
dec
add
movs
ss
fwait
pusha
dec
jns
fsubr
dec
fucomip
dec
sub
loop
xchg
add
xor
cmp
dec
jnp
sar
cmp
(bad)
imul
shl
pop
cmp
add
jbe
jb
xchg
test
jg
sub
fwait
aam
fwait
mov
(bad)
add
and
xlat
mov
adc
lea
push
mov
daa
sub
pushf
adc
adc
shl
lea
loopne
xchg
aad
add
out
int
xlat
dec
push
fldcw
fld
imul
fld
sub
push
mov
dec
gs
xchg
pusha
xchg
sbb
inc
pop
lods
int3
fist
and
push
cmp
pop
out
inc
mov
mov
pop
out
mov
pop
xor
repz
push
xchg
adc
mov
sbb
jbe
dec
xor
sbb
add
ror
repnz
adc
jae
mov
push
jo
mov
inc
fisubr
test
fdiv
adc
sbb
jmp
adc
jg
inc
pop
mov
push
fisub
jl
mov
aad
loopne
lahf
loop
sbb
test
pop
test
xor
gs
fiadd
(bad)
jmp
add
push
add
jno
out
jecxz
push
aam
adc
es
aam
xchg
mov
ret
cmps
sbb
das
test
mov
ret
sbb
test
ja
cmps
push
loopne
dec
clc
jge
push
in
clc
mov
sub
xlat
sub
cmp
repz
fistp
mov
shr
(bad)
(bad)
(bad)
out
fist
xchg
mov
fiadd
test
stc
cwde
fistp
es
jecxz
les
stc
int3
mov
sbb
cmp
call
loop
sub
ins
cdq
sub
inc
dec
jl
sub
addr16
xchg
mov
int
test
sub
jmp
rcl
jmp
cwde
pop
int3
popf
sub
xor
sar
(bad)
pop
sbb
mov
sbb
aad
adc
lods
cmp
mov
fucomi
xlat
adc
frstor
movs
call
fidivr
sub
sbb
sub
jmp
push
cmc
sbb
sbb
test
pop
cmp
pushf
pop
xchg
jmp
sbb
pop
pop
ins
ins
jno
pop
(bad)
aam
dec
mov
push
and
outs
daa
push
sbb
int3
sub
cmp
inc
jae
dec
fistp
nop
mov
push
gs
pop
cmp
ja
and
outs
mov
out
bnd
lds
retf
add
je
dec
test
or
jb
popf
ret
push
out
pushf
dec
or
popf
mov
sahf
outs
std
fild
xchg
adc
stos
ins
ret
fmul
inc
sub
std
pop
jae
(bad)
(bad)
mov
fstp
sbb
jno
xchg
push
sub
push
mov
js
add
ss
mov
lods
sub
mov
mov
xchg
shl
aad
pushf
dec
add
adc
push
in
rcr
cmps
pop
and
sub
ret
je
not
xchg
imul
push
inc
stos
aaa
ret
neg
xor
jmp
pushf
call
(bad)
aas
rcl
pop
cdq
cmp
cmp
fwait
jae
mov
jnp
inc
out
sub
lock
pushf
push
and
fdiv
cmp
mov
sub
out
lods
jl
fisttp
or
addr16
mov
pop
jp
outs
ins
jae
mul
jae
add
pop
rcl
dec
cmp
enter
mov
test
pusha
pop
push
pop
sub
pop
aam
xchg
push
ret
ret
or
xor
cmp
clc
lock
daa
and
cmps
test
and
cwde
repz
cmc
mov
aaa
xor
jb
fwait
sti
cmp
cmp
es
retf
mov
(bad)
dec
call
rcr
lods
adc
cwde
inc
mov
mov
xchg
stc
or
cld
pop
jmp
mov
or
and
xor
pop
mov
xor
cwde
push
lea
and
popf
mov
cwde
sbb
and
stos
jae
dec
jns
sti
out
push
fidiv
pusha
push
pop
call
mov
arpl
cmp
rcl
push
(bad)
jge
fdiv
pop
and
popa
push
inc
repnz
mov
call
dec
int3
(bad)
lock
rol
loopne
mov
mov
sbb
xchg
xchg
out
mov
imul
pop
push
pop
neg
int
mov
pop
add
sbb
mov
pushf
pop
xor
cld
(bad)
psubusb
in
mov
add
pushf
jp
jmp
mov
cmp
sbb
aas
adc
sub
add
fsub
aaa
mov
ds
inc
fstp
dec
mov
and
fdiv
sar
xchg
inc
dec
jmp
out
add
out
xor
sbb
mov
les
dec
adc
xlat
shr
cld
push
repnz
xchg
or
stos
(bad)
inc
mov
pop
lock
push
push
push
xor
retf
mov
jl
gs
scas
cmp
sti
pop
fld
add
movs
in
sub
pop
scas
arpl
pushf
sub
bound
and
mov
in
pop
sahf
imul
enter
jbe
imul
enter
ja
pop
xor
mov
lahf
(bad)
push
or
dec
jb
jae
or
mov
mov
sbb
fwait
shl
stos
ins
mov
xchg
daa
pop
adc
test
pop
fwait
loopne
add
push
inc
sub
not
jmp
mov
ret
in
add
pop
out
push
rol
nop
add
mov
daa
ds
inc
in
(bad)
idiv
and
sbb
call
xor
push
iret
int
jmp
stos
fild
mov
pusha
mov
ins
jg
mov
pop
cs
iret
sbb
cmp
or
pusha
xor
test
cdq
jp
push
rcr
cmps
aaa
mov
pop
pop
sbb
jg
stos
outs
fadd
int3
fbstp
(bad)
jge
cmp
shr
inc
outs
push
jb
dec
xchg
mov
arpl
stc
push
sar
(bad)
cmc
fwait
rcr
mov
xor
out
mov
loope
pop
xchg
xor
mov
and
mov
and
and
pop
sub
cdq
ins
jmp
pop
iret
test
jnp
xchg
aam
lea
xor
xor
push
inc
push
dec
dec
dec
les
out
xor
xlat
sahf
mov
jo
push
rcr
cwde
bound
popf
fadd
stc
stos
sub
cmc
jl
mov
fild
and
iret
push
mov
mov
aas
je
jno
xor
push
ja
icebp
fisub
mov
data16
mov
sub
das
push
add
arpl
cmp
fld
js
mov
rcr
add
dec
cmp
sar
mov
gs
test
in
lods
dec
mov
jmp
inc
jae
call
xchg
pop
push
dec
gs
mov
add
ror
mov
cmp
rcl
xchg
(bad)
fiadd
repz
test
lahf
scas
push
dec
inc
jbe
adc
mov
push
in
cs
out
inc
movs
imul
mov
ret
sub
sub
ins
cmps
jne
mov
lods
cwde
pusha
or
or
mov
push
loop
ficom
dec
xchg
pop
mov
push
adc
movs
int
xor
push
lds
loopne
cmp
ds
mov
sbb
xchg
fistp
cmp
push
pop
xchg
rol
arpl
add
mov
add
cmps
daa
mov
out
aam
ja
xlat
lea
data16
xchg
fist
pop
inc
jg
inc
push
rol
rcl
mov
inc
xlat
fdiv
in
pop
mov
lds
pop
aam
jl
std
push
stos
mov
pushf
dec
stos
inc
ins
mov
pop
adc
repz
inc
out
rcl
dec
mov
repnz
jmp
fisttp
mov
fimul
mov
shr
pusha
in
and
cld
fcmovu
add
lea
sub
(bad)
push
out
pop
pop
mov
loopne
inc
cmp
or
cld
retf
out
jno
out
jno
adc
fsubr
retf
hlt
test
sar
and
sub
and
inc
inc
mov
pop
sahf
mov
xchg
das
add
pushf
lea
div
scas
adc
addr16
aas
jp
or
mov
rol
imul
add
inc
(bad)
lock
dec
inc
aad
shl
add
pop
es
jmp
dec
sbb
hlt
ret
clc
jno
sub
inc
push
mov
xor
mov
jecxz
jmp
xor
push
scas
mov
xchg
stos
push
xchg
adc
aas
jmp
popf
movs
or
(bad)
mov
adc
jg
cmp
nop
aad
add
pop
icebp
or
lock
in
cwde
mov
adc
jb
push
test
pop
call
xchg
inc
add
test
jmp
jp
cmps
das
jp
or
xor
xlat
cmc
mov
mov
dec
jb
fidiv
fdiv
xlat
dec
call
ss
aad
shl
(bad)
aam
pop
mov
fist
loope
jge
sbb
mov
imul
aaa
inc
sbb
pop
pop
jnp
jmp
dec
clc
loope
fs
dec
mov
sbb
dec
call
movs
pop
outs
(bad)
test
jo
icebp
inc
cmp
sub
inc
jne
dec
outs
call
ds
mov
rcr
inc
add
jecxz
push
les
mov
xchg
push
mov
cmp
mov
and
xor
(bad)
inc
jbe
loopne
adc
out
and
sbb
xchg
add
fnsetpm(287
mov
adc
and
mov
(bad)
pop
mov
mov
xlat
mov
mov
pop
jmp
leave
pop
jecxz
nop
popa
fnstsw
popf
fwait
dec
movs
ss
sbb
gs
aaa
mov
dec
out
nop
push
cmp
ja
xchg
in
xor
call
test
sbb
push
in
jle
std
dec
pop
dec
sub
and
sub
fwait
and
in
mov
pop
cmps
sar
sub
(bad)
jmp
push
adc
dec
hlt
scas
and
(bad)
stc
push
aad
xchg
dec
mov
jp
jnp
leave
stos
pop
pop
stc
jb
sub
repnz
push
loop
inc
dec
sub
xchg
pop
dec
imul
push
mov
cli
adc
jnp
aad
ror
rcr
outs
loop
int
movs
sbb
add
dec
in
cmp
out
or
dec
push
gs
rol
and
push
retf
shr
loopne
movs
icebp
stc
sar
mov
or
add
sbb
cmp
mov
push
push
sub
cmp
fdiv
gs
ss
xchg
push
movs
xchg
cmp
sar
enter
xor
dec
jmp
mov
pop
xchg
jmp
cmp
dec
pop
into
cmc
push
mov
(bad)
in
mov
cmp
xchg
lahf
pop
sar
cwde
add
enter
jle
(bad)
mov
jecxz
xchg
xor
xchg
in
push
dec
xchg
(bad)
sti
xlat
aas
jnp
pop
xchg
mov
fisttp
aaa
pop
into
add
int3
call
imul
add
int3
stc
pop
or
call
fcom
adc
push
scas
push
sub
in
mov
(bad)
jns
and
push
xchg
mov
hlt
mov
clc
mov
sahf
popa
jp
lahf
out
int3
push
cmp
aam
pop
sbb
(bad)
pop
jg
stc
mov
bound
mov
test
pop
ins
mov
popa
not
fcomp
dec
mov
cmp
cmp
or
dec
cmp
inc
jmp
test
mov
cdq
leave
jb
call
push
adc
mov
cmp
icebp
repnz
adc
outs
sbb
test
jmp
push
hlt
scas
enter
cmp
pop
stos
xor
data16
push
inc
out
iret
pop
imul
mov
cli
fcmove
mov
dec
rol
call
gs
in
inc
sub
int
shr
in
pushf
xchg
(bad)
adc
jmp
cmp
fst
test
sub
mov
(bad)
dec
push
push
imul
push
mov
stc
sbb
imul
dec
dec
sub
ficom
int
es
jge
(bad)
sar
mov
push
rcl
inc
outs
in
dec
rcl
push
fst
push
fsubrp
or
rcr
mov
mov
js
aam
adc
enter
ja
jbe
ins
and
shl
inc
mov
sub
pop
cmc
push
test
or
pop
mov
or
push
(bad)
ja
add
in
cwde
ret
sbb
pop
inc
pop
add
fimul
sbb
fs
out
dec
inc
push
adc
idiv
mov
test
jmp
and
ror
pusha
push
std
xor
sbb
int
ins
sahf
jmp
pop
test
sub
call
int
inc
cs
jmp
cmp
and
stos
jnp
add
sti
retf
push
sub
inc
sbb
test
(bad)
cmp
cmp
cmp
test
shl
sbb
jns
pop
loopne
rol
dec
pop
jne
sub
adc
daa
mov
mov
and
inc
adc
idiv
mov
lods
data16
jns
rcl
ffreep
pop
or
mul
push
(bad)
pop
(bad)
stc
jmp
jo
or
ins
gs
sbb
sti
pop
stc
jmp
ret
sbb
sub
xor
mov
(bad)
mul
shl
leave
stos
nop
add
retf
jg
popa
mov
inc
mov
cmp
pop
inc
or
cmp
mov
mov
pop
inc
rcl
lods
ret
je
pop
adc
int3
jnp
sbb
out
jno
push
daa
ret
push
sub
arpl
sub
fs
mov
xor
fidiv
push
sbb
aam
mov
fs
dec
fisttp
pop
jge
lahf
push
jnp
rcl
dec
(bad)
sub
mov
jmp
mov
push
cmp
add
xchg
push
xor
inc
push
sub
inc
inc
(bad)
ucomiss
sahf
jnp
sbb
mov
aaa
lds
push
and
add
pushf
dec
fidivr
ss
sub
movs
push
sub
je
xchg
cmp
xchg
dec
xor
mov
fs
cdq
leave
mov
mov
dec
and
fild
jmp
cdq
mov
pushf
sar
mov
icebp
or
cmp
daa
hlt
pop
push
hlt
xlat
xchg
(bad)
dec
xor
xor
leave
xor
xchg
icebp
adc
movs
lock
cmp
ficom
les
mov
mov
xchg
mov
fist
mov
sahf
in
or
sbb
(bad)
jmp
cmc
inc
nop
test
cld
pop
xor
arpl
pop
cmp
jmp
cmp
jmp
lods
cmp
stos
fisttp
mov
fwait
(bad)
(bad)
push
and
sbb
xor
jle
cmp
cwde
(bad)
(bad)
test
pop
mov
aas
call
mov
jnp
pop
pop
imul
fbstp
into
adc
sbb
adc
adc
cdq
stc
mul
xor
sti
(bad)
and
adc
rcr
in
cmp
fld
dec
dec
adc
out
pop
cmp
dec
movs
mov
sub
jle
cmp
neg
std
iret
push
inc
mov
add
sti
shl
add
pop
and
daa
jmp
pop
or
dec
fld
mov
fwait
pop
ins
pop
les
inc
icebp
aam
pushf
sbb
stos
dec
jmp
ret
(bad)
data16
sti
adc
cs
jge
push
aam
xchg
push
sub
bound
dec
adc
xchg
push
push
sar
cwde
popf
jne
fisttp
ds
jmp
pop
ror
sbb
mov
jb
rcl
mov
pop
ret
ins
retf
cli
inc
cmp
push
and
dec
xchg
xchg
sbb
int3
call
inc
out
loope
or
inc
sbb
jl
xchg
test
inc
pop
cmovne
shl
scas
(bad)
in
adc
fidiv
xchg
outs
mov
outs
ins
dec
mov
ins
(bad)
jmp
pusha
push
out
adc
and
adc
push
fimul
fmul
adc
mov
shl
gs
dec
pop
xchg
inc
test
sbb
xchg
test
jle
out
aad
stos
mov
cmp
rcl
add
addr16
mov
add
faddp
arpl
jge
sbb
add
(bad)
xchg
hlt
bound
inc
pushf
ins
inc
in
cdq
jmp
sahf
xor
jp
xchg
fsub
outs
xor
sub
push
mov
shl
mov
fst
cmp
stos
pop
enter
(bad)
sbb
cmp
dec
shr
scas
ins
ror
dec
xor
mov
inc
movs
push
stos
fiadd
dec
in
mov
rcr
inc
inc
jmp
mov
pop
xchg
push
icebp
mov
dec
dec
xchg
push
test
mov
mov
je
ja
mov
stos
and
loopne
lods
test
push
movs
and
add
add
movs
icebp
mov
out
mov
and
std
fisubr
aad
mov
call
neg
dec
std
jnp
add
mov
lods
add
inc
or
xchg
cld
sti
add
(bad)
rol
sbb
jl
stc
les
dec
inc
call
push
mov
dec
fdivr
push
inc
add
mul
xchg
jge
xor
sub
jne
cmps
lock
dec
dec
adc
push
and
aad
add
push
ds
mov
(bad)
rol
sub
scas
aaa
test
mov
out
jnp
dec
fmul
aam
je
hlt
scas
push
shl
clc
fld
mov
int3
xor
sbb
or
cmc
inc
xor
mov
stc
cmp
lock
sub
jns
push
daa
lock
es
mov
sbb
adc
(bad)
div
(bad)
pop
or
ins
xchg
aam
adc
jbe
mov
xor
jge
mov
pop
adc
or
sub
rcl
add
rol
add
pop
shl
scas
div
push
dec
addr16
call
imul
push
outs
jo
and
ds
loop
cmp
mov
jg
adc
dec
cmps
dec
mov
or
lods
inc
addr16
scas
ror
nop
cdq
jl
daa
xor
ja
ror
push
adc
pushf
pop
dec
add
dec
cs
cmp
add
and
bound
lahf
jnp
mov
mov
sub
test
outs
dec
jne
inc
out
test
in
dec
lahf
adc
(bad)
daa
outs
pop
repz
retf
lahf
pop
sbb
pop
loop
inc
cmp
push
and
(bad)
push
push
pop
or
or
test
mov
leave
cmp
test
mov
add
mov
ror
inc
mov
int
imul
(bad)
jbe
call
repnz
jo
aaa
xor
xchg
and
mov
icebp
pop
(bad)
scas
mov
fcmovnbe
add
fadd
add
std
xchg
(bad)
sbb
lahf
out
lds
sbb
fmul
dec
inc
inc
shl
cmp
xchg
retf
rcl
cmp
push
and
ss
aaa
jp
addr16
ret
ins
adc
jne
pushf
ins
cmp
out
shl
and
xor
test
inc
cmps
imul
xor
loop
mov
(bad)
jecxz
pop
push
or
pop
sub
mov
sub
mov
adc
movs
lods
jmp
shl
cmp
daa
loopne
mov
scas
inc
cmp
jg
(bad)
sbb
jmp
ret
pop
mov
dec
cld
or
cdq
ficomp
das
aaa
pop
adc
mov
pop
aam
or
push
cmps
shl
cdq
fstp
(bad)
sti
pop
mov
mov
stc
sbb
inc
imul
in
(bad)
mov
and
enter
or
aas
leave
(bad)
cmp
call
aas
dec
(bad)
push
mov
and
adc
dec
push
arpl
test
arpl
imul
jge
mov
jle
jmp
test
xor
push
out
shr
mov
arpl
jl
leave
fdiv
cmp
adc
jp
sbb
xchg
jl
xlat
mov
cmps
jg
fcomp
lods
call
(bad)
dec
push
add
fucom
sahf
lahf
shl
jnp
test
mov
mov
push
jecxz
vshufpd
add
(bad)
hlt
arpl
jecxz
inc
rcl
pop
jb
(bad)
mov
adc
jbe
int
inc
mov
push
pop
xchg
in
ins
mov
mov
cmps
(bad)
out
icebp
xchg
push
cld
pop
xchg
js
mov
outs
(bad)
sub
lds
call
movs
lock
jg
rol
push
sar
xor
retf
inc
pop
mov
setb
mov
sbb
js
dec
pushf
jmp
add
scas
rcl
push
test
cmp
hlt
bound
push
sbb
xchg
jbe
pushf
mov
push
cmps
add
sub
mov
ins
inc
sbb
mov
pushf
and
in
sub
loop
test
fs
pop
push
adc
dec
jno
pop
cdq
clc
sar
mov
sbb
pushf
add
mov
aaa
shr
mov
dec
(bad)
int3
out
adc
xor
xchg
dec
xchg
dec
inc
cmc
pop
push
fdivr
ret
or
shl
(bad)
lock
pop
push
outs
les
in
mov
sub
call
cli
cmp
sub
(bad)
imul
add
pop
stc
pushf
xor
mov
adc
arpl
retf
repnz
dec
jnp
bsr
dec
sub
sub
cmp
fld
sbb
jg
sar
add
aad
adc
add
sub
xchg
cmp
dec
fcomp
xor
mov
xlat
pop
jae
and
stos
mov
shl
sbb
cmps
dec
sub
pop
out
ror
sar
xor
inc
les
jae
jo
rcr
out
stc
scas
mov
dec
dec
sub
adc
sbb
fwait
jnp
test
push
xchg
xchg
adc
(bad)
push
(bad)
fs
push
jmp
dec
and
shl
(bad)
or
rcr
or
sub
cwde
jmp
mov
ret
and
aam
minps
mov
dec
test
and
mov
ins
ror
sbb
(bad)
shr
sti
int3
imul
adc
mov
push
popf
push
jnp
or
sar
sti
xchg
jns
std
add
jle
sub
fwait
mov
and
ror
shl
fs
mov
pop
cmp
sub
pop
mov
sbb
xor
pop
and
mov
pop
sbb
mov
and
add
pop
add
dec
mov
ins
outs
mov
inc
add
std
cwde
cmp
out
les
fwait
xchg
fmul
je
fidiv
or
add
imul
xor
ins
scas
and
les
dec
sub
in
test
mov
or
js
push
inc
add
inc
pop
shl
popa
aam
xor
xchg
jae
scas
cmp
mov
addr16
in
push
adc
adc
loopne
xchg
test
inc
pop
int3
ret
clc
lods
cs
loope
int3
pop
push
and
jmp
cmp
int3
aaa
cmp
shl
movs
aad
into
in
pop
fst
sbb
xor
stos
(bad)
lods
(bad)
test
xchg
hlt
dec
xchg
mov
stc
js
sub
cmp
and
icebp
lea
les
(bad)
pop
push
sar
ret
or
sahf
inc
loopne
lds
(bad)
rcl
test
mov
mov
mov
addr16
stc
xor
pop
push
gs
mov
sub
test
jmp
push
out
sar
daa
dec
push
mov
xlat
vcvtsi2sd
inc
jl
imul
out
pop
test
es
jmp
add
nop
push
test
sub
ret
dec
inc
fnstcw
sbb
jge
aam
enter
pop
or
sub
mov
arpl
xchg
cs
xchg
xor
neg
dec
ret
mov
pushf
test
inc
adc
lea
mov
dec
inc
jno
xor
repnz
adc
sub
out
add
test
scas
mov
pop
xor
cmove
gs
fcom
shr
scas
and
stos
ds
shl
outs
movs
daa
lods
out
or
pushf
retf
or
mov
shl
add
xchg
mov
addr16
mov
and
xor
ss
repnz
mov
aas
and
cwde
icebp
sti
xchg
push
push
cmp
repnz
fs
sahf
cs
and
vmptrst
fmul
adc
mov
pop
jge
call
inc
(bad)
addr16
push
pop
ss
sbb
dec
mov
xor
sar
shl
pop
pop
push
inc
cld
sahf
jo
sbb
arpl
ret
jp
adc
fild
mov
fcmovnu
and
bound
movs
inc
cmp
inc
sbb
pop
xchg
leave
cmp
xchg
imul
mov
xlat
mov
jp
cwde
fisub
cmp
cmp
(bad)
jae
mov
imul
jp
cs
test
loope
mov
out
aad
and
(bad)
dec
addr16
int
sbb
lods
push
pop
pushf
or
adc
gs
sbb
pop
push
rcl
cmp
cmp
ins
fnsave
add
push
pushf
mov
cmp
jmp
pop
cmp
jb
xchg
pop
test
int3
mov
inc
hlt
aam
pop
push
stc
loop
jo
or
xor
int
bound
dec
adc
adc
sbb
xchg
mov
addr16
pop
popf
fsub
imul
pop
pop
dec
add
sub
sbb
lods
cmp
pop
stc
fisubr
and
imul
add
stc
cmp
or
(bad)
loopne
jge
push
ret
loope
mov
ud1
add
addr16
call
jmp
sbb
outs
fyl2xp1
jb
out
repz
js
jnp
rcr
es
mov
sar
inc
mov
repz
dec
fild
push
mov
pop
out
cwde
inc
xor
mov
push
test
cmp
shr
inc
sub
in
jge
test
pusha
mov
movs
and
xchg
mov
push
push
fnsave
pushf
inc
movs
jmp
daa
loop
sub
(bad)
pop
xchg
adc
push
xor
(bad)
mov
rol
lods
xchg
cmc
cmps
adc
dec
leave
test
xchg
xor
test
popa
xor
outs
(bad)
cmp
or
push
sahf
mov
sti
add
stos
(bad)
mov
fucom
xor
fimul
pop
jmp
lods
xchg
dec
es
mov
push
xor
cld
fwait
mov
xchg
int3
push
sub
push
cmp
push
popa
pop
(bad)
es
cdq
rcl
pusha
mov
test
xor
(bad)
or
adc
dec
or
cmc
and
imul
sbb
pop
jo
ds
push
adc
jnp
mov
out
pop
jbe
mov
popf
rol
and
jg
lods
in
ds
gs
nop
push
cmp
pop
les
pop
jle
xchg
xchg
jge
mov
daa
fiadd
mov
push
dec
or
repnz
cmp
addr16
stos
into
adc
loopne
mov
mov
inc
stos
popa
pop
call
xor
test
jp
jno
adc
jo
inc
cld
jne
mov
sbb
mov
rcr
fwait
jmp
pop
pop
(bad)
mov
fdivr
add
mov
or
loope
sbb
inc
cmps
out
outs
cmp
popf
inc
mov
mov
inc
sbb
or
(bad)
aas
or
cmp
in
jmp
mov
pop
ja
cmc
mov
push
jns
lea
mov
int3
xor
stos
dec
retf
mov
xor
jno
dec
and
sbb
xlat
xchg
mov
call
mov
dec
or
in
inc
pushf
clc
in
mov
push
xor
sub
xlat
dec
mov
jno
test
aam
adc
pop
hlt
jecxz
sar
retf
fld
mov
fadd
xor
test
mov
je
sbb
jne
enter
les
mov
shr
test
xchg
mov
pop
sub
mov
mov
and
dec
mov
mov
inc
mov
imul
ds
adc
mov
xchg
sar
push
xchg
stc
pop
cld
fs
fnstcw
adc
ds
xor
in
sbb
shl
nop
and
ins
and
cld
fcomp
push
push
xor
mov
(bad)
cwde
push
jmp
dec
and
push
cmps
in
or
pop
shl
mov
jne
in
push
cmp
xchg
dec
jb
fcom
push
loope
ret
and
push
adc
pop
int3
pop
mov
add
mov
pop
test
aam
adc
stos
xchg
repnz
jl
push
(bad)
in
repz
sbb
(bad)
pushf
fcom
std
sbb
xlat
ins
fmul
ss
aaa
out
push
adc
aaa
sbb
hlt
or
fld
call
mov
pushf
inc
mov
scas
push
imul
adc
mov
pop
mov
cmp
mov
push
movaps
xor
push
sbb
loopne
call
dec
ficomp
push
jno
jmp
push
xchg
lea
pop
shl
and
jp
sti
xchg
jl
cmp
dec
mov
add
mov
dec
and
cmp
outs
out
retf
loopne
or
pop
push
sbb
xchg
lods
mov
xchg
xchg
and
dec
mov
mov
mov
adc
push
mul
js
mov
rcl
xor
ja
or
jae
hlt
cmps
jmp
jp
mov
adc
das
mov
mov
cmp
inc
rol
dec
stos
mov
or
stc
push
in
push
sti
jg
loopne
icebp
mov
pop
aad
pushf
and
jmp
mov
pusha
push
fist
pop
shl
xor
repz
movs
xor
adc
not
and
rcl
imul
(bad)
sub
pop
aad
mov
sub
push
and
imul
sbb
rcr
dec
dec
add
repz
jae
mov
jmp
sub
fld
and
(bad)
fwait
mov
xor
add
xchg
sub
pop
xchg
and
fld
das
in
xlat
neg
repz
aas
jne
sbb
mov
stc
inc
push
in
jmp
jmp
xor
inc
stc
pop
cmp
fistp
lahf
aaa
xor
loop
(bad)
rcl
call
std
movs
es
mov
mov
icebp
(bad)
sti
jno
xor
fisttp
sbb
mov
or
cli
dec
imul
jl
das
loope
and
xor
shl
fbld
fwait
pop
mov
test
rcl
(bad)
out
jno
outs
xor
sbb
add
xor
adc
xor
imul
mov
fadd
push
push
pop
push
adc
sub
loopne
(bad)
in
xchg
sub
pop
sub
je
adc
adc
sbb
in
fsub
push
pop
adc
jle
imul
pushf
(bad)
aad
sbb
jne
loopne
mov
adc
lods
cmp
dec
aad
cmp
enter
ret
jp
test
gs
mov
stos
mov
das
mov
inc
sbb
ret
inc
cwde
mov
push
test
jl
mov
cmp
pop
shl
popa
or
cmp
mov
test
or
pushf
fcomp
pop
dec
adc
cmps
cmp
jnp
jmp
jnp
mov
sbb
sub
in
mov
xor
aaa
pop
sahf
adc
pop
pop
or
call
inc
jp
push
sub
movs
(bad)
push
cmp
test
lods
(bad)
fmul
fcmove
cwde
push
mov
lahf
cs
xor
iret
unpcklps
xchg
cmps
and
(bad)
mov
sbb
(bad)
and
popa
(bad)
fcomi
and
(bad)
retf
push
sti
push
out
or
aad
cmp
imul
mov
loopne
leave
test
aas
add
sbb
cdq
dec
jmp
xlat
jmp
call
dec
cmps
xor
call
xchg
fsubrp
repnz
leave
cmps
mov
out
out
fbstp
loop
add
and
(bad)
fsub
inc
adc
lods
stos
xor
sbb
cld
push
arpl
adc
mov
add
popf
fild
cmp
imul
jle
(bad)
popa
neg
in
xor
sbb
cmps
xchg
sahf
mov
dec
push
inc
mov
mov
stos
stos
adc
sti
aad
dec
js
mov
stc
out
push
sbb
(bad)
mov
fsub
pop
enter
or
inc
push
cmp
mov
xchg
in
and
movs
test
sahf
mov
and
jmp
dec
aad
inc
mov
cli
and
fdivr
shl
mov
add
call
jnp
arpl
jb
mov
stos
push
cdq
cmp
call
lea
les
sbb
sbb
sub
stc
in
scas
stos
aaa
test
dec
mov
enter
inc
sub
fild
jne
(bad)
push
fidivr
xor
es
jns
sbb
iret
cmp
cli
js
loopne
xor
aaa
scas
cld
pop
out
in
rcr
stos
in
mov
xchg
xchg
(bad)
jg
and
mov
int3
cdq
mov
xchg
sbb
and
out
out
ins
push
ins
jecxz
dec
inc
enter
sub
out
addr16
push
cmps
(bad)
sub
clc
cs
call
(bad)
(bad)
jg
dec
lahf
popa
(bad)
dec
cmps
sub
stos
pop
rcr
or
daa
ins
in
mov
jg
ror
sahf
call
xchg
sbb
add
jbe
pushf
xor
xchg
out
xchg
inc
xor
cli
pop
ret
in
fwait
pop
test
sub
adc
fsub
dec
pop
iret
popf
mul
dec
push
test
cmp
xor
and
xor
and
leave
or
repz
mov
iret
mov
adc
inc
add
mov
sub
pop
clc
rol
inc
and
cmp
cmc
add
ficom
mov
push
lea
sbb
mul
pushf
mov
mov
clc
fnstcw
mov
xchg
sbb
out
and
sbb
add
push
aas
aam
xchg
loopne
into
(bad)
aaa
sbb
dec
mov
lea
dec
in
in
xchg
inc
iret
push
cmp
pushf
push
push
xor
in
cwde
mov
jo
push
sbb
xchg
rol
loop
imul
sbb
sub
jmp
push
mul
loopne
pop
mov
sub
sub
loop
cmp
xchg
aam
fidiv
cmp
jge
shufps
(bad)
call
mov
pop
stc
xor
and
out
shr
dec
jmp
fdiv
and
ror
xchg
fld
adc
sub
mov
dec
inc
mov
sbb
bound
xchg
sbb
in
idiv
stos
or
stos
inc
ds
cmp
push
mov
and
icebp
ins
stc
mov
push
test
cdq
push
jno
mov
dec
ss
out
add
call
aam
pop
or
int3
mov
gs
pop
lods
mul
pop
inc
outs
aam
xchg
push
jb
fdiv
xchg
jmp
sub
test
mov
adc
ins
xor
das
fidivr
fist
pop
not
lods
sub
pop
mov
mov
stos
jmp
pop
add
dec
cmp
ret
jl
sub
fst
arpl
xchg
les
dec
outs
ins
call
jle
imul
inc
fisub
xor
dec
popf
(bad)
aaa
and
mov
inc
jmp
or
sub
sub
cmp
je
pop
mov
inc
cli
mov
nop
pushf
cmp
or
nop
and
pop
and
sub
or
pop
loope
fld
mov
dec
pop
jne
frstor
adc
(bad)
pop
add
fadd
add
loop
cmc
xor
sub
push
shl
enter
inc
test
fild
pop
inc
xchg
stc
loope
clc
cs
pop
rol
push
(bad)
repnz
pop
dec
jl
leave
jmp
dec
outs
shr
sub
pop
sbb
xchg
sub
sti
not
aad
and
(bad)
into
and
or
aaa
fisub
jmp
add
pop
dec
mov
dec
cld
mov
out
mov
sbb
xor
add
mov
sub
xchg
in
jecxz
cli
xchg
jne
mov
pushf
xchg
ins
dec
out
shr
arpl
cmp
test
inc
retf
jb
imul
push
sbb
push
popa
test
dec
cmp
(bad)
mov
fild
mov
(bad)
dec
fneni(8087
test
sub
fisttp
xchg
arpl
aam
push
push
inc
arpl
into
xor
fstp
mov
fsubr
outs
fild
jb
or
fstp
pop
stos
adc
(bad)
(bad)
stos
in
cwde
adc
in
rcl
leave
fisubr
test
scas
inc
add
das
pushf
xor
dec
push
jbe
sbb
mov
pop
call
fst
mov
cmp
jbe
sbb
pop
mov
push
or
ds
imul
ficom
ret
shr
leave
xchg
test
sub
add
pop
mov
adc
(bad)
lock
xor
cmp
cmp
sub
push
rcr
nop
jmp
popf
and
cmp
push
push
(bad)
pop
in
int3
sub
inc
cld
mov
xchg
mov
jo
add
bound
mov
mov
ret
pop
sbb
lea
mov
ret
test
mov
cmp
mov
xor
cwde
mov
retf
and
(bad)
imul
loope
and
loop
mov
adc
jo
push
xor
push
loopne
mov
jmp
inc
add
xor
das
lock
cwde
or
in
or
(bad)
retf
popa
imul
mov
test
dec
adc
push
pandn
mov
inc
out
cmp
sar
pop
out
rol
fisubr
xor
popa
out
adc
and
push
jg
div
sub
repnz
iret
sub
dec
xchg
cmp
jge
(bad)
pop
(bad)
sbb
(bad)
aad
jl
shl
adc
adc
addr16
std
(bad)
sub
mov
ss
(bad)
xor
movs
scas
int3
push
popf
sub
aas
dec
mov
repnz
das
aam
outs
(bad)
ret
xor
sub
dec
aam
push
pop
pop
or
mov
pop
loopne
retf
dec
pop
shl
cs
mov
fidiv
xchg
loopne
call
xor
frndint
push
int3
mov
mov
sub
sbb
ins
fild
arpl
ins
loop
cmp
mov
loop
ds
mov
jmp
mov
call
bound
out
daa
add
lock
xchg
fcom
xchg
jmp
shr
pop
or
loop
push
xchg
jmp
in
inc
mov
aaa
not
aaa
inc
lds
pop
icebp
mov
lods
cwde
ds
cwde
and
sbb
(bad)
push
js
or
sub
(bad)
sub
jb
imul
ror
imul
xor
std
popf
mov
dec
xchg
shl
dec
xor
pop
fwait
(bad)
loopne
sahf
mov
fistp
xchg
inc
pop
adc
inc
lods
xor
dec
add
cwde
lahf
popf
enter
adc
xor
inc
inc
mov
sbb
bound
inc
mov
in
mov
dec
aas
and
push
xchg
xor
pop
pushf
jmp
xlat
idiv
xchg
lods
mov
rcl
daa
mov
mov
adc
jmp
adc
mov
mov
mov
out
mov
out
push
sbb
aad
sub
xchg
mov
imul
pop
push
int3
lea
mov
int
dec
jmp
mov
jl
xor
dec
fld
inc
std
push
cmps
and
adc
mov
jge
clc
adc
fist
hlt
popf
xchg
add
push
add
ds
sti
pop
or
xchg
(bad)
push
in
rcl
out
hlt
xor
dec
lds
adc
(bad)
or
add
adc
xchg
aad
sub
xchg
gs
or
sti
not
data16
sbb
xchg
outs
dec
xor
pop
stos
lods
or
mov
sbb
sub
stc
out
dec
fnstenv
int3
sub
inc
cmp
out
inc
(bad)
jmp
adc
outs
lods
gs
pop
rol
mov
cmps
ficomp
aad
scas
lock
and
shl
test
fsubr
jbe
pop
xchg
mov
jnp
sbb
in
rcl
inc
fist
and
mov
mov
pushf
movs
pop
push
sub
dec
mov
adc
jle
dec
xor
inc
push
ror
adc
jmp
pushf
rcl
mov
(bad)
jmp
cmp
sbb
xchg
xchg
fadd
inc
dec
jg
es
mov
stos
retf
mov
(bad)
fwait
mov
rcr
push
jnp
ins
sbb
push
in
pusha
lahf
xlat
sbb
mov
fnstcw
sub
das
mov
nop
lods
(bad)
adc
loop
mov
push
xor
ret
or
jmp
xchg
and
fdiv
jnp
test
aam
push
push
imul
leave
or
inc
movs
pushf
adc
bound
mov
jnp
dec
neg
xchg
aad
and
ins
mov
push
rol
fisttp
pop
aaa
add
mov
jno
inc
adc
addr16
iret
hlt
mov
sub
pop
push
addr16
fcmovne
daa
das
xchg
pop
std
bound
test
pop
scas
mov
xchg
jne
neg
lods
push
aas
imul
dec
inc
addr16
xchg
jns
mov
mov
inc
jmp
popf
loope
pop
cmp
jmp
stos
inc
(bad)
jg
xor
shl
inc
adc
mov
retf
fidivr
mov
adc
add
adc
xor
aaa
scas
or
(bad)
push
inc
jecxz
jp
dec
xchg
loopne
ins
and
sub
add
pop
fcomi
out
fld
and
cmp
add
xchg
and
fs
cmps
and
les
sub
out
shl
je
mov
pop
push
es
pop
or
jo
iret
mov
mov
sbb
int
inc
inc
mov
lea
jmp
imul
hlt
lahf
out
push
xor
aas
fdiv
cmp
xchg
inc
mov
and
jbe
icebp
or
mov
jmp
and
or
push
test
sbb
movs
jge
fcmovne
sar
mov
imul
call
jmp
stc
dec
xchg
or
mov
inc
icebp
cmp
loope
add
sub
out
ja
inc
shl
pop
sbb
jg
std
xchg
neg
div
push
or
jge
shl
nop
cmps
pushf
sbb
xchg
or
push
dec
dec
xor
or
and
add
mov
and
(bad)
xor
(bad)
fisubr
inc
pusha
repnz
sbb
xchg
push
(bad)
dec
retf
mov
push
inc
pushf
xchg
fwait
mov
jl
jne
jnp
mov
nop
or
sbb
dec
sub
mov
pop
mov
in
fcom
pushf
sbb
or
call
sub
jbe
mov
xchg
jo
retf
or
in
sub
stos
shl
mov
ds
mul
mov
adc
fisub
mov
xor
das
cmp
(bad)
aaa
xor
idiv
mov
sbb
push
clc
pop
vmovsldup
mov
add
ret
push
pop
mov
sbb
ret
in
dec
push
hlt
mov
lods
cmp
cli
repnz
and
dec
dec
repz
mov
int3
das
dec
lea
cmp
movs
and
addr16
or
lods
cmp
stos
push
push
xchg
mov
push
mov
cwde
pop
dec
call
iret
pusha
jmp
bound
fstp
push
push
loopne
mov
xchg
popf
sbb
rcl
xor
jle
int3
adc
daa
fnstsw
movs
or
push
or
ins
fldenv
sub
cwde
(bad)
in
adc
sar
add
imul
mov
sub
and
add
(bad)
pop
xchg
lahf
cmp
iret
cmp
sbb
pushf
xor
pop
(bad)
popa
adc
cs
stos
sar
add
repz
nop
inc
xor
sbb
or
ret
les
mov
sub
mov
pop
adc
xlat
cmps
fcomp
iret
dec
xor
fnstenv
add
iret
push
(bad)
adc
cmp
or
sbb
fbstp
xchg
sub
lds
push
pop
fwait
shr
xor
mov
pusha
dec
sbb
sub
mov
ins
fnstenv
shl
push
adc
stos
loopne
dec
jmp
clc
push
and
loopne
cmp
das
shl
mov
sbb
and
adc
mov
loopne
push
jae
les
xchg
mov
or
sub
jp
(bad)
cmps
mov
add
out
pop
(bad)
and
jp
mov
repz
es
inc
inc
(bad)
clc
add
aam
out
shr
cmps
and
or
cmp
cld
mov
(bad)
dec
outs
mov
and
imul
aad
rcr
mov
mov
inc
cmp
jp
sub
movs
inc
push
out
das
movs
popa
div
shr
call
push
out
jb
dec
sbb
xchg
jnp
jge
add
stos
in
dec
xor
loope
push
out
xchg
mov
arpl
and
out
cmp
pop
pop
lahf
pop
dec
jo
dec
cld
retf
enter
(bad)
int
neg
cli
imul
into
mov
cmp
loopne
mov
push
sahf
ds
dec
call
loop
test
push
xor
or
repnz
dec
dec
pushf
movs
jb
pop
scas
xchg
ja
(bad)
pop
fisttp
mov
(bad)
pop
ins
inc
jmp
ja
rol
fimul
add
push
stc
xor
and
mov
arpl
lods
lods
fistp
inc
sub
and
cmp
add
clc
cmp
not
(bad)
or
popa
mov
dec
mov
mov
aam
sbb
stos
push
xor
cwde
(bad)
out
cmp
ins
mul
ret
mov
mov
icebp
aad
adc
xchg
pushf
cmc
xor
rcl
xchg
mul
int3
xchg
ret
pop
aam
push
out
adc
jmp
popa
mov
fdiv
add
mov
push
jmp
pop
cmp
sub
test
push
mov
pop
add
out
inc
aam
cmps
xchg
test
jbe
aaa
ja
aam
xchg
arpl
lock
jo
and
jmp
mov
ins
pop
dec
gs
pop
push
cwde
sub
pop
pop
ret
cs
inc
xor
and
inc
or
cmp
push
int3
sub
sbb
ds
sbb
ret
repnz
fcomp
(bad)
dec
sub
sti
ret
stc
cmp
sub
xchg
icebp
add
mov
stos
push
sti
xor
mov
fs
enter
inc
mul
mov
nop
int3
cmp
jg
cmp
pushf
(bad)
pop
sub
stos
sbb
outs
inc
(bad)
xchg
fist
nop
and
fcom
inc
daa
mov
call
jl
mov
adc
aam
sbb
cmp
pop
fstp
cmp
and
sbb
mov
(bad)
imul
pop
pop
inc
xor
mov
fstp
inc
fwait
xor
cs
push
test
xchg
add
push
es
jge
push
cdq
loopne
mov
in
jl
inc
or
arpl
mov
jnp
xor
push
jl
stc
jle
out
and
mov
push
cmp
mov
xor
push
aam
and
int3
mov
mov
(bad)
(bad)
es
(bad)
xor
xor
aam
addr16
aad
pop
jne
popf
xor
in
jp
sahf
fsubr
xchg
dec
fstp
jns
(bad)
cmps
dec
imul
pop
ins
and
mov
(bad)
loop
lahf
cmps
ja
retf
out
jmp
mov
(bad)
std
arpl
popf
fdiv
repnz
inc
inc
movs
repz
mov
and
test
into
sub
popa
adc
sub
iret
out
cmps
aad
mov
icebp
(bad)
adc
pushf
not
and
adc
or
xchg
xor
sub
ss
add
loop
dec
cmps
jmp
xor
ss
or
pop
mov
mov
inc
add
lods
lahf
add
add
mov
out
fdiv
iret
pushf
out
dec
cdq
(bad)
repnz
in
or
stc
adc
shl
jnp
sbb
and
xlat
adc
mul
inc
out
ja
sub
pop
add
push
jmp
popf
repz
jmp
fimul
lods
jae
popf
inc
pop
mov
int3
adc
sub
pop
inc
pusha
jne
pushf
popf
dec
pop
rcr
cmp
fwait
sub
out
gs
pop
sbb
cwde
dec
and
adc
std
pusha
cmp
dec
gs
arpl
dec
mov
sub
scas
int3
xchg
ins
mov
call
mov
out
mov
outs
mov
push
inc
in
test
sti
rol
mov
adc
mov
icebp
xlat
arpl
cli
fndisi(8087
inc
rol
pop
push
retf
sbb
push
(bad)
mov
(bad)
std
pop
xchg
mov
fld
popf
mov
jnp
std
ja
in
inc
std
or
sub
das
push
inc
push
fnstenv
xor
cmp
retf
retf
adc
mov
mov
arpl
and
dec
pop
ret
xchg
lock
pop
mov
mov
fstp
cmp
dec
out
or
sti
jle
sub
repnz
test
xchg
mov
pushf
ficom
out
sbb
ins
test
push
hlt
mov
mov
out
retf
scas
test
pushf
push
sbb
movs
in
mov
and
pop
(bad)
in
mov
fidiv
ins
jle
mov
push
sbb
mov
add
mov
(bad)
aad
push
ins
xchg
clc
jecxz
jb
movs
cwde
pop
or
mov
push
jnp
xor
sahf
inc
xor
int3
and
add
mov
(bad)
sti
fbld
or
sub
pop
int
cmp
mov
arpl
pop
arpl
dec
inc
xor
(bad)
mov
sbb
loopne
test
dec
ja
push
neg
stos
into
int3
xchg
push
test
fst
mov
clc
sbb
retf
sub
add
add
bound
push
sbb
shl
addr16
inc
mov
inc
(bad)
fmul
xchg
mov
stos
xor
mov
or
dec
dec
and
pop
movs
sbb
mov
push
sub
add
add
mov
adc
pop
and
sub
cmp
inc
mov
mov
jp
das
mov
mov
fst
cmc
add
adc
(bad)
scas
push
inc
lahf
push
lds
add
cmps
inc
cdq
or
push
(bad)
(bad)
mov
loope
mov
mov
add
int
xchg
mov
divps
and
mov
ja
cdq
inc
push
test
test
or
dec
mov
mov
(bad)
jbe
sbb
scas
xchg
fdiv
dec
mov
fldcw
mov
adc
sub
aam
retf
(bad)
mov
jo
ja
mov
push
fisttp
push
ss
(bad)
pop
pop
or
cmp
test
jge
bound
sbb
ja
mov
lock
push
mov
inc
les
shl
sti
and
sbb
retf
je
out
neg
int
and
inc
adc
fwait
sar
(bad)
push
shr
mov
(bad)
ins
fwait
inc
jle
test
ficom
imul
ins
cmps
jnp
add
aam
jge
push
mov
mov
lock
in
mov
cs
(bad)
adc
call
popa
lods
sahf
sub
in
and
push
loopne
pop
mov
out
sbb
pop
jmp
push
pop
or
add
dec
out
(bad)
dec
outs
daa
dec
jmp
push
dec
mov
mov
ja
mov
(bad)
dec
mov
(bad)
aad
not
pop
dec
dec
sub
inc
mov
les
pushf
lods
xlat
lods
xchg
xchg
scas
scas
dec
cld
inc
sbb
inc
in
pop
dec
xor
loopne
fisub
mov
mov
daa
test
leave
and
call
mov
loope
aas
add
sar
mov
mov
xor
(bad)
test
jmp
cmp
arpl
xor
(bad)
cs
cmp
mov
pop
add
cmp
push
aam
lods
sub
jne
inc
inc
fcomp
popf
mov
dec
sub
inc
fidivr
xchg
inc
sub
adc
pop
ja
test
cmovbe
jge
sbb
mov
xor
mov
adc
cwde
mov
inc
ds
sbb
popa
jnp
sub
nop
push
ret
push
lock
xor
js
add
mov
pop
sbb
inc
div
cld
jns
mov
jno
mov
xchg
dec
(bad)
sbb
dec
fsub
cmps
neg
hlt
push
xchg
fsub
inc
shl
adc
adc
cs
les
call
hlt
jno
or
mov
sub
pop
pushf
adc
ds
and
push
adc
out
add
aaa
ds
sbb
jnp
sub
jmp
adc
xchg
jmp
cli
jb
sbb
aas
dec
mov
not
inc
adc
shr
jecxz
int3
test
inc
inc
(bad)
addr16
lods
dec
dec
pop
je
retf
push
mov
sub
adc
lahf
sti
loopne
cmp
ds
jmp
push
pusha
mov
jae
sbb
iret
mov
scas
sbb
jnp
xchg
int
shr
lahf
mov
pop
rol
sub
fs
icebp
lods
(bad)
sub
sbb
retf
dec
lods
dec
sahf
sbb
pop
mov
ja
or
rcr
sbb
ss
inc
sub
ret
je
call
cmp
push
jmp
inc
aam
ror
les
jle
jne
inc
imul
fisttp
cmps
push
dec
les
xchg
xchg
gs
dec
or
(bad)
fnstsw
jmp
rcl
push
retf
(bad)
add
jnp
pop
loop
mov
mov
fisubr
push
out
das
and
es
cwde
xor
xchg
xchg
shl
fisttp
pop
std
arpl
mov
mov
clc
daa
fldcw
cmc
mov
(bad)
loop
sub
movs
pop
aaa
mov
adc
enter
mov
pop
push
in
ds
cmc
(bad)
fstp
xchg
inc
sbb
mov
outs
sub
dec
cli
mov
out
arpl
leave
sub
stc
pop
(bad)
retf
mov
int3
repnz
sub
movs
stc
shl
sar
in
inc
sub
push
outs
(bad)
shl
push
sbb
jnp
jp
loope
mov
neg
out
cmp
sbb
fidiv
mov
rcr
jmp
adc
ror
daa
mov
(bad)
mul
xor
outs
mov
sub
push
add
lods
test
mov
inc
je
movs
call
or
iret
ss
xchg
mov
(bad)
aad
ins
push
in
ret
inc
mov
push
rep
mov
or
mov
mov
test
retf
imul
stos
pushf
(bad)
pop
cli
scas
adc
fld
add
popa
jmp
jge
push
loop
mov
(bad)
sahf
mov
sub
xor
sti
fwait
pop
mov
push
call
jae
mov
imul
sbb
fst
test
ret
push
dec
inc
jns
pop
loope
inc
stos
call
mov
adc
lea
das
xchg
mov
mov
sbb
test
dec
cmp
test
jmp
push
mov
pop
cmp
inc
and
cmc
mov
xor
sub
pushf
out
jg
dec
fisubr
std
imul
pop
leave
push
jecxz
push
cmp
dec
ins
fdivr
jge
popa
fist
and
dec
cli
or
test
push
xchg
call
cmps
dec
nop
cmp
rcl
je
mov
sar
add
or
adc
jecxz
sub
sub
pop
mov
aaa
cmps
cwde
add
test
ja
in
cmps
pop
xor
sti
push
ret
ss
mov
clc
mov
mov
out
add
dec
push
push
cli
push
jmp
push
xor
in
enter
pop
push
sub
pop
and
cmp
lods
jmp
jo
mov
adc
imul
bound
pop
mov
inc
sbb
xor
int
sub
movs
pop
(bad)
call
retf
mov
pop
fwait
push
shl
(bad)
hlt
mov
cmps
cmc
call
(bad)
in
xchg
pop
jge
(bad)
cli
mov
ins
pop
jle
xchg
cs
div
push
das
mov
adc
xor
test
inc
mov
inc
or
cmp
jae
in
cmps
(bad)
fidiv
loop
retf
lds
adc
in
and
xor
pop
adc
and
sbb
mov
dec
jecxz
jl
fsub
add
call
shr
sub
in
dec
mov
pushf
(bad)
cmc
add
jp
outs
dec
mov
iret
scas
ss
aaa
mov
jl
int
cmp
scas
sahf
lahf
nop
es
pop
pop
mov
xor
ins
not
loopne
add
xchg
lahf
nop
aaa
jnp
loope
imul
sbb
xor
bound
push
arpl
xchg
add
fcomp
or
outs
jp
popa
pop
dec
adc
das
ror
mov
xlat
call
loopne
inc
pop
gs
in
jno
mov
sbb
fwait
mov
fdivrp
addr16
dec
or
dec
push
jno
inc
lods
mov
inc
jmp
adc
inc
add
aad
pop
pop
mov
arpl
add
sbb
xchg
and
mov
movs
aam
push
clc
test
pop
aaa
(bad)
push
not
in
cmc
push
stos
jnp
data16
loop
leave
add
mov
and
(bad)
addr16
mov
pop
inc
(bad)
loopne
cmp
into
sbb
retf
out
ficomp
loopne
pop
pop
hlt
adc
(bad)
popa
and
sub
dec
mov
shl
fadd
jno
inc
xchg
ss
dec
test
fnsave
push
jecxz
shl
pushf
arpl
xor
and
xor
cmp
shr
inc
add
fstp
adc
mov
pushf
ficomp
and
int3
push
pop
pop
cmp
(bad)
jmp
ffreep
pop
leave
fistp
xchg
pop
sbb
jecxz
xchg
pop
xor
mov
sub
dec
int
out
ror
inc
fnstenv
inc
xor
add
nop
fist
dec
test
popa
and
pop
pop
loopne
jnp
aam
into
dec
jo
push
or
pop
imul
push
or
jo
mov
dec
adc
pop
icebp
dec
(bad)
cmp
jo
push
mov
and
mov
jb
push
aaa
bound
imul
stc
rcl
scas
out
push
lock
sub
jbe
neg
(bad)
stc
sbb
jo
test
xchg
cmp
mov
jmp
arpl
mov
ins
js
jnp
movs
loope
ja
xor
idiv
and
xor
cmp
sbb
xor
fxch
mov
pop
xor
or
popf
pop
pop
adc
gs
xchg
dec
dec
jmp
xchg
ja
cs
fist
xor
rcl
(bad)
cmc
punpckhwd
push
inc
mov
add
adc
(bad)
addr16
mov
xor
mov
push
mov
(bad)
fsubr
int
pop
or
adc
mov
xchg
cld
lock
inc
cmp
out
mov
add
and
and
push
cwde
fistp
aaa
mov
dec
dec
and
test
int
dec
sub
stos
adc
cmp
cli
mul
mov
mov
aas
iret
mov
test
mov
cmp
inc
dec
mov
pop
fwait
pop
je
ins
and
lods
xchg
mov
clc
pop
call
daa
dec
sub
mov
loop
popf
rcr
xor
out
cmp
add
and
fidivr
xor
ins
push
jge
mov
mov
stos
test
(bad)
jp
sbb
inc
pop
leave
into
sti
cmp
mov
loope
push
adc
mov
(bad)
sti
cli
cmp
dec
mov
sbb
out
jmp
jbe
(bad)
pop
pop
stc
dec
xor
jg
mov
jmp
sahf
mov
pop
retf
sar
in
(bad)
in
mov
shr
and
mov
fsubr
mov
outs
push
dec
(bad)
cmps
ficomp
test
gs
pop
jb
es
xor
pop
push
mov
pop
mov
ror
aam
xchg
lods
pop
dec
jnp
jnp
dec
push
cmp
inc
xchg
mov
jns
inc
gs
pop
xchg
adc
ja
cmps
test
maskmovq
imul
fbld
fld
daa
enter
push
cwde
xor
pop
pop
jnp
(bad)
lock
dec
dec
ja
push
xchg
fstp
test
cmp
pop
(bad)
cli
ins
xor
scas
(bad)
in
pop
shl
adc
cmp
test
fiadd
cmp
jmp
(bad)
mov
call
ror
add
pop
adc
(bad)
aam
fmul
sbb
jge
mov
xor
jl
cmp
cmp
repz
cld
test
sahf
mov
ds
iret
hlt
(bad)
xor
dec
out
jnp
add
test
imul
sub
cdq
fidiv
(bad)
or
out
pop
fwait
in
xor
repnz
js
pop
(bad)
shl
in
in
xchg
jne
xlat
cmp
sub
dec
mov
pop
pop
inc
mov
jmp
xor
push
cmc
jbe
mov
push
in
rcr
fnstsw
dec
push
inc
add
jmp
fistp
enter
loope
jmp
loope
cmps
sub
push
sub
cmc
add
js
(bad)
iret
js
cli
ss
jne
and
mov
push
push
push
test
jmp
mov
mov
sbb
add
stos
cmp
and
and
ja
push
mov
add
fcom
add
jo
outs
enter
ja
push
pop
daa
outs
cli
push
test
mov
jnp
loopne
shl
lock
adc
mov
je
pop
rcl
fisttp
sti
xchg
aaa
clc
sbb
retf
loopne
inc
nop
or
jb
push
nop
add
clc
jne
or
lods
jl
lods
mov
mov
lods
push
pushf
fidivr
(bad)
test
add
xchg
cmp
aas
sbb
pop
add
pop
lock
xchg
adc
xchg
fst
mov
push
jge
xchg
enter
cmp
xchg
std
(bad)
int
jle
xchg
inc
sbb
mov
dec
stos
pop
adc
retf
les
test
adc
cmps
lahf
in
cmp
jge
push
stos
dec
ja
(bad)
lock
js
inc
pop
jg
sti
push
bound
fadd
imul
sbb
jmp
leave
nop
sahf
push
rcl
mov
test
jl
inc
mov
cdq
int
fstp
pop
loope
pop
movhps
add
dec
bswap
adc
mov
(bad)
or
sub
ja
add
sbb
loope
or
mov
sbb
adc
test
xlat
retf
jle
cmc
adc
jnp
(bad)
movs
sti
loopne
cmp
inc
jns
out
pmaxub
pop
add
sub
outs
xchg
pop
push
test
enter
(bad)
jmp
dec
(bad)
pusha
dec
adc
push
xchg
fstp
mov
xchg
or
loopne
call
and
mov
jmp
sub
fsub
jge
xlat
aam
sub
sub
aad
push
out
fsubp
popf
jmp
mov
popf
jecxz
rcr
and
sub
mov
pop
xor
fmul
lahf
sti
pop
push
lock
dec
mov
and
inc
lahf
aaa
fs
adc
call
mov
test
push
(bad)
cmp
sbb
dec
out
mov
jmp
cmp
bswap
sub
(bad)
sub
jmp
loope
pop
mov
push
jo
jnp
shr
les
dec
push
xchg
ds
sahf
shr
cwde
outs
movs
push
jmp
pushf
pop
push
inc
ds
xor
push
or
sub
rcr
dec
out
ja
adc
inc
jle
jmp
and
pop
mov
std
aad
inc
(bad)
fwait
mov
or
addr16
out
mov
inc
lods
nop
and
sar
mov
mov
push
rol
call
iret
dec
and
xor
rol
ja
xor
or
stos
test
(bad)
xchg
or
hlt
out
push
xchg
xor
les
aam
push
jne
in
loop
jg
in
pop
rcl
ins
mov
gs
mov
test
in
sbb
xchg
xchg
dec
xchg
jge
cmp
sub
dec
pop
dec
pop
shr
xchg
mov
push
in
cmp
nop
mov
pop
inc
pop
fld
and
add
xor
arpl
aas
adc
mov
mov
adc
arpl
nop
cmps
repnz
(bad)
jno
add
cmp
mov
mov
dec
retf
push
and
mov
test
cmp
xor
out
in
(bad)
jmp
movs
mov
or
ror
adc
mov
adc
call
sbb
popf
xor
mov
dec
hlt
mov
push
mov
xor
adc
sub
int3
pop
mov
icebp
cmp
cmp
pop
mov
push
rol
pop
adc
popa
or
pop
mov
xor
cs
sbb
and
out
cdq
cwde
dec
xchg
push
pop
stos
jle
and
fisub
dec
into
add
ror
cld
adc
push
sbb
bound
inc
fs
dec
mov
pop
mov
rcr
jmp
push
cli
dec
jns
inc
pop
je
clc
in
add
or
test
sbb
adc
inc
sub
xchg
jecxz
or
daa
sbb
rcr
lahf
pop
lock
dec
stos
repnz
push
ds
aas
cmc
sub
lods
mul
xlat
lods
call
xchg
arpl
sbb
test
mov
cdq
mov
adc
scas
cmp
push
aad
xchg
cmp
leave
sub
fcomp
fist
fstcw
add
xchg
movs
les
loopne
mov
movs
ja
sti
xchg
cmp
cwde
fstp
jmp
xchg
enter
add
lock
loop
sbb
inc
call
lock
and
pop
test
push
ja
mov
pop
lock
out
mov
jno
cmp
adc
adc
repz
inc
repnz
mov
rol
das
mov
inc
lds
mov
nop
jmp
stc
cld
jle
jnp
xlat
adc
mov
dec
lds
jnp
add
aaa
dec
jmp
mov
jnp
push
push
lods
jne
xchg
stos
lods
iret
xor
mov
xor
lock
inc
(bad)
jmp
cld
adc
mov
cmc
gs
ror
bound
std
sbb
add
xchg
scas
test
jg
arpl
mov
loope
xchg
call
les
clc
daa
pop
adc
adc
sub
(bad)
aad
xchg
xor
retf
nop
mov
and
sar
xlat
mov
cmp
mov
xor
fmul
pop
clc
mov
cmp
dec
nop
cdq
sbb
mov
xor
mov
aam
xlat
dec
mov
sar
push
(bad)
not
pop
ret
bswap
ins
fcomp
das
shl
and
lock
mov
mov
in
ins
jmp
mov
push
mov
aam
adc
shl
pop
cmp
arpl
lahf
sub
push
cld
cmp
or
inc
jne
rcr
addr16
pop
mov
retf
add
fdivr
lock
(bad)
xchg
test
pop
inc
rcl
xor
shl
xchg
jmp
pop
adc
dec
mov
xor
arpl
inc
out
sbb
push
mov
scas
repz
(bad)
pop
xchg
jns
xchg
outs
repz
fadd
ins
sub
in
xlat
push
inc
js
push
add
pop
aaa
pusha
mov
push
shr
movs
jo
sub
pop
std
sub
adc
pop
popa
les
popf
cmp
scas
cmp
(bad)
mov
push
retf
stc
pop
lock
ds
mov
outs
add
inc
fwait
jge
shl
xor
xchg
lods
je
add
imul
mov
push
sub
push
cmp
test
shr
push
adc
mov
arpl
dec
xor
push
mov
ds
push
or
push
cmp
sbb
loopne
mov
daa
xor
aad
sbb
jnp
adc
mov
inc
jb
arpl
mov
ja
es
cmps
add
sbb
(bad)
dec
push
push
test
pop
repnz
ror
jb
stos
pop
or
inc
fwait
inc
pop
or
gs
outs
dec
sbb
push
sub
aaa
fcmovbe
ret
lea
fst
int
xchg
mov
mov
push
sbb
jno
mov
inc
daa
fwait
add
add
pop
xor
adc
jae
mov
les
add
loopne
sub
xchg
cli
or
call
dec
lock
pop
scas
call
add
mov
ret
fld
xor
pop
jge
outs
jb
jl
test
loopne
dec
xchg
adc
stc
cdq
xchg
add
repnz
jp
ds
and
dec
xor
rcr
sub
jl
add
push
push
pushf
push
push
dec
stos
mov
stc
clc
fwait
dec
xorps
(bad)
pop
cmp
dec
lock
push
pop
dec
jle
xchg
cli
and
aam
rol
arpl
mov
or
aaa
sti
add
outs
fsubrp
jns
cmp
je
sar
out
gs
sbb
repz
adc
or
out
pop
dec
out
into
mov
gs
in
or
mov
int3
dec
add
mov
cli
cmp
shl
add
pop
push
pop
xor
leave
sub
bound
ss
adc
(bad)
enter
push
cmp
shl
frstor
adc
hlt
mov
fs
popf
mov
adc
lock
dec
dec
cs
cli
aad
pop
(bad)
jmp
sub
pop
dec
push
sub
dec
int
mov
pop
inc
xchg
inc
dec
xchg
stos
(bad)
jecxz
jb
ss
sbb
dec
xor
mov
ror
cmps
push
call
rcr
mov
push
push
ins
scas
in
cmp
cwde
not
scas
dec
cld
mov
btr
or
jmp
cmp
cmp
or
sahf
sbb
or
mov
mov
mov
xlat
mov
lds
sbb
(bad)
xor
push
pop
cmps
mov
xlat
sar
outs
ins
jnp
fwait
sbb
ja
add
repz
aam
mov
or
xor
jo
xchg
(bad)
shr
dec
add
dec
pop
aaa
mov
nop
xor
fcmovb
fdiv
dec
pop
inc
push
mov
pop
cmp
icebp
dec
repz
xchg
xor
add
cmp
pop
inc
ret
bound
xchg
popa
xor
std
idiv
test
inc
lods
jle
psubq
jmp
bnd
push
mov
xchg
xor
gs
stc
or
pop
mov
and
call
mov
ret
pop
imul
gs
mov
arpl
jge
push
xor
sahf
leave
inc
sub
pop
or
or
xlat
add
pushf
add
jae
(bad)
dec
jg
pop
dec
addr16
pop
in
pop
push
addr16
dec
xor
cmc
mov
fisttp
and
cmp
loope
mov
push
and
test
icebp
inc
mov
les
push
xor
xlat
adc
nop
jl
push
icebp
mov
into
sub
addr16
outs
add
xchg
dec
push
jmp
inc
rcr
pop
dec
lock
jmp
inc
inc
int3
enter
clc
loopne
fidiv
pop
xor
push
jns
jnp
sbb
ins
mov
mov
pop
xchg
jnp
push
rcl
jge
pushf
pop
adc
mov
dec
xchg
inc
push
pop
ret
push
sbb
and
ins
push
xchg
jecxz
test
jl
mov
dec
aas
hlt
push
mov
pop
mov
out
outs
sub
(bad)
mov
ins
addr16
and
or
add
ss
into
dec
loope
push
cmp
and
mov
mov
push
push
push
es
sub
clc
sbb
xchg
clc
sbb
fisubr
dec
push
and
inc
dec
mov
outs
loop
std
sbb
push
hlt
jmp
es
sub
push
push
call
mov
fcomp
or
xchg
arpl
std
xlat
dec
test
outs
call
sub
sbb
mov
push
adc
jl
mov
and
iret
popa
ror
(bad)
dec
imul
sti
sahf
mov
inc
je
imul
sbb
pop
pop
adc
push
xchg
sbb
cdq
out
mov
test
int
fld
mov
stc
push
cmp
jle
push
mov
out
ds
sub
shl
fsubr
jg
call
xor
fld
pop
loop
clc
add
aad
test
rol
repnz
int
out
(bad)
jg
jmp
fcom
je
ins
pop
stc
add
or
pop
lods
xchg
and
add
stos
in
xor
stc
add
dec
fld
pop
in
mov
push
adc
sbb
push
sbb
xchg
(bad)
mov
xchg
mov
dec
lods
(bad)
dec
add
les
aaa
push
lods
adc
mov
pop
fild
loopne
adc
pop
dec
mov
inc
les
sub
cmp
(bad)
neg
std
pushf
sub
rcl
fstp
jg
pop
sbb
scas
xor
push
or
icebp
xchg
mov
cwde
mov
pop
loopne
dec
sbb
std
ficom
xor
pop
dec
and
stos
adc
xchg
lea
xor
xchg
push
shl
sbb
adc
movs
test
dec
cwde
test
push
stc
stos
mov
xor
adc
fcomi
push
mov
adc
pop
xchg
adc
fcmovne
push
aam
aaa
inc
fimul
fwait
int3
ins
add
push
icebp
mov
addr16
and
xchg
or
sar
mov
xchg
adc
mov
loopne
mov
fwait
pop
pusha
out
jmp
rcl
cs
outs
idiv
loop
cdq
sbb
mul
and
jle
jmp
test
adc
int
call
sbb
test
mov
ins
inc
and
adc
pmuludq
mov
outs
je
dec
mov
mov
dec
shr
popa
pop
repnz
push
fwait
sbb
dec
inc
and
lods
clc
fcmove
iret
rcr
ret
mov
lods
adc
or
mov
jmp
pop
popf
std
xor
mov
mov
jnp
std
push
adc
jbe
xchg
cld
xchg
dec
inc
push
xor
loopne
xchg
sbb
stos
xor
cwde
push
outs
mov
add
mov
fadd
test
dec
push
setl
and
popf
push
dec
jnp
xor
fld
cmp
loopne
dec
sub
sub
dec
js
push
call
pop
aaa
enter
jo
clc
ins
fiadd
pop
cmps
pop
cmp
mov
and
ins
outs
cmps
mov
sbb
(bad)
sbb
int3
out
les
xchg
cmp
lahf
hlt
adc
shl
inc
cmp
dec
aaa
pop
imul
loopne
mov
iret
fistp
adc
sub
dec
cmp
aad
cmp
repnz
pop
sahf
xlat
shr
(bad)
xchg
mov
inc
push
jp
mov
cmp
rcl
pop
xchg
clc
jecxz
shl
or
loopne
lods
scas
in
push
mov
xor
push
jg
push
iret
mov
xchg
xchg
jg
mov
retf
outs
pop
pop
int3
xchg
inc
mov
push
popa
fcomp
stc
adc
adc
rol
sub
xor
(bad)
gs
call
out
es
jno
xchg
popa
push
inc
pop
fdiv
sbb
movs
xchg
mov
jle
pop
push
push
mov
push
lea
mov
je
mov
mov
lahf
scas
mov
pop
aas
movs
out
adc
inc
comiss
std
int
add
repnz
ss
stos
jb
pop
sub
imul
push
shl
pop
jg
sbb
int3
push
xor
push
jl
or
push
mov
push
xor
jecxz
int3
jb
jg
sbb
pushf
in
jle
sub
dec
dec
cld
sub
fldenv
dec
xchg
out
mov
lahf
and
pop
in
daa
dec
sbb
cmp
xor
or
retf
rcr
pushf
add
mov
div
sbb
pop
or
pop
xor
sbb
and
sahf
inc
daa
dec
std
mov
(bad)
pop
cli
outs
shl
push
clc
pop
scas
ror
jge
push
das
test
pop
fsubr
push
push
ins
pop
dec
shl
daa
xchg
scas
cmps
and
cs
xchg
arpl
gs
es
xchg
push
mov
adc
pop
sti
loop
and
in
jl
jmp
fwait
mov
inc
in
aaa
pop
xor
(bad)
adc
push
aaa
sub
cmp
mov
xchg
adc
add
outs
mov
jmp
lds
loopne
push
sub
xchg
gs
sbb
lea
addr16
push
push
push
loop
rol
or
int
mov
jno
or
push
adc
dec
lea
mov
push
rcr
pop
(bad)
gs
ins
xor
jb
mov
lea
jge
loop
xor
mov
inc
xchg
add
fldenv
mov
push
pop
xlat
retf
or
pop
push
or
pushf
mov
or
fcomp
loop
cmp
(bad)
adc
and
icebp
push
xor
jmp
xor
pop
or
stc
xchg
mov
cli
push
out
aaa
or
test
jmp
dec
popf
pusha
pop
cmp
inc
push
cmp
(bad)
sbb
mov
pushf
pop
jne
cs
mov
dec
jns
imul
iret
mov
scas
outs
cdq
sub
adc
or
dec
pop
pushf
add
in
jecxz
or
aaa
rcl
jmp
adc
or
aas
adc
xchg
cmp
loope
imul
push
mov
sub
xlat
push
xchg
aaa
je
xchg
push
push
xchg
loop
cld
(bad)
push
movs
into
shr
mov
movs
inc
xchg
ja
es
pop
sub
rcl
mov
and
std
into
sub
pop
rcr
push
test
cmc
xor
pop
lods
dec
out
loopne
adc
pushf
mov
cmp
mov
pop
jbe
or
jnp
in
lea
and
popf
pop
push
push
mov
rcr
cmps
cmps
xchg
mov
mov
dec
ins
test
xor
dec
(bad)
idiv
add
mov
sub
std
fst
or
inc
shr
je
scas
pushf
pop
add
sbb
fxch
xchg
cmp
aas
xchg
repz
and
cdq
jnp
cld
push
mov
sub
out
sub
xchg
and
retf
in
push
ficom
fwait
lods
adc
pushf
pop
add
jno
out
add
add
adc
sub
ins
ss
inc
ret
ficomp
pop
cmp
daa
mov
push
pop
dec
loopne
ds
out
adc
pop
dec
arpl
pop
mov
(bad)
out
inc
std
stc
std
push
xchg
pop
loopne
aaa
movs
mov
add
popa
stc
cmp
jbe
add
inc
aad
pop
xchg
add
ss
repz
call
adc
and
dec
inc
dec
pop
adc
cmp
push
mov
xor
enter
xor
call
sbb
test
fist
cmps
mov
mov
lds
fcomp
out
pushf
add
push
add
xchg
fwait
dec
arpl
ds
adc
aad
mov
popf
mov
repnz
aad
mov
push
loope
jb
mov
mov
movs
shl
loop
sbb
lods
mov
fistp
or
mov
and
mov
add
sbb
lds
sbb
fstp
mov
iret
(bad)
cmp
sub
test
(bad)
div
mov
cld
sti
jb
dec
aaa
xchg
cdq
xlat
pop
lock
(bad)
idiv
fldcw
das
pushf
mov
mov
or
pop
mov
push
jge
xor
mov
in
add
mov
and
and
outs
aam
mov
in
mov
sub
and
das
mov
sub
test
lock
sbb
enter
mov
xor
pop
test
icebp
ds
push
push
rol
sub
jno
cwde
push
outs
dec
fcom
lahf
call
inc
out
pop
push
dec
es
into
fwait
mov
mov
adc
pop
mov
stos
mov
cmp
mov
int
out
lods
sub
psubq
shr
mov
and
adc
mov
call
adc
jmp
mov
or
inc
add
or
aam
jnp
cli
add
pop
aam
jmp
loopne
cmp
jmp
mov
imul
push
sbb
pop
add
lock
in
and
inc
fidiv
sub
shrd
pop
sub
mov
fisubr
out
(bad)
xchg
pop
(bad)
or
sub
loopne
fs
mov
pop
stos
mov
ss
mov
imul
jmp
ins
sar
xor
xor
imul
sub
hlt
popa
cmps
jl
push
scas
mov
mov
int
leave
lods
es
(bad)
and
dec
paddw
ja
inc
fdivr
pop
xor
inc
sbb
dec
sbb
xchg
shr
sti
sbb
xor
rcr
dec
push
mov
dec
loopne
imul
out
shr
or
push
add
mov
pop
add
int3
or
stos
sar
mov
push
push
fstp
lock
mov
dec
int3
dec
jnp
je
inc
cmp
icebp
movs
sbb
fsub
fisubr
xlat
pop
fdiv
fsub
xor
xor
cmp
in
pop
cmp
mov
call
push
xor
and
les
imul
ror
sub
ret
iret
jmp
scas
popf
or
mov
mov
cs
cmp
mov
jae
loop
nop
push
sti
pop
mov
add
movs
ds
mov
in
adc
adc
mov
clc
ins
push
sub
ret
xchg
sti
dec
jp
sbb
push
je
sub
mov
sub
jp
(bad)
add
pop
xlat
stos
sar
call
fs
sbb
mov
mov
and
int
pop
or
mov
dec
test
ds
lock
push
mov
mov
cmp
pop
mov
call
sub
push
test
int
bound
(bad)
mov
ror
enter
sbb
je
out
and
sub
ja
mov
test
sbb
lahf
cld
xor
ins
add
gs
cmps
outs
mov
loopne
sub
mov
cdq
cs
dec
gs
ror
mov
add
(bad)
jecxz
into
cdq
push
cmc
inc
les
sbb
and
push
cmps
outs
jbe
jp
daa
call
push
sub
je
lea
xor
f2xm1
fwait
push
aaa
mov
push
nop
ret
jnp
jmp
push
(bad)
cld
jg
mov
(bad)
loope
fwait
test
arpl
test
sti
adc
int
fnstcw
adc
add
jbe
sub
stos
jbe
add
dec
mov
fs
test
dec
loope
test
not
ss
or
loope
mov
and
outs
xchg
mov
aam
sub
sbb
inc
adc
fs
test
loope
out
pop
push
out
aam
dec
inc
lods
into
adc
mov
inc
push
mov
xchg
mov
ror
inc
adc
or
dec
fisttp
out
sahf
and
cmp
jo
mov
popa
icebp
cld
les
adc
inc
push
ffree
jnp
mov
int
sub
add
xchg
adc
jno
imul
dec
mov
in
pop
fbstp
jns
and
mov
out
push
enter
and
and
aas
daa
jo
add
sub
mov
cmp
cmps
inc
jnp
push
sub
fisub
or
jmp
add
sar
nop
push
push
test
sbb
fnstcw
imul
add
adc
sbb
mov
(bad)
daa
je
xchg
cmp
loope
push
inc
or
sub
or
mov
add
push
xchg
imul
retf
ret
inc
add
in
pusha
mov
or
gs
inc
loop
dec
daa
outs
cmp
mov
(bad)
fcmovnbe
jge
or
or
mov
inc
and
mov
ds
add
add
call
jnp
push
jbe
or
jno
daa
mov
addr16
push
inc
pushf
and
in
xchg
mov
mov
push
in
xor
in
pushf
daa
es
and
and
sbb
dec
bound
fstp
retf
xchg
pop
push
adc
bound
push
and
xchg
add
inc
pusha
mov
jmp
mov
pop
xchg
jg
arpl
fimul
out
xlat
xor
dec
pop
shr
out
sub
pop
setae
fistp
adc
adc
addr16
and
push
xchg
push
inc
clc
or
mov
cmps
vpcomub
xchg
or
out
mov
push
ret
cld
mov
(bad)
into
(bad)
fcomp
iret
stos
in
adc
add
pop
out
and
adc
clc
pop
mov
dec
jb
or
iret
lods
push
je
out
inc
mov
pop
or
sub
shl
or
mov
(bad)
fsub
mov
test
in
scas
shr
add
pop
xchg
mov
xchg
aas
xchg
mov
mov
enter
mov
mov
xchg
inc
enter
out
jge
xchg
jno
jge
mov
inc
into
cdq
inc
js
xchg
add
push
inc
stos
lahf
sub
and
(bad)
cli
add
and
add
fstp
jmp
je
push
ins
addr16
adc
aam
mov
inc
adc
in
idiv
stos
es
jne
cmp
fild
adc
daa
cli
xor
sbb
xchg
movs
and
add
loopne
fiadd
inc
mov
(bad)
nop
sub
sar
pop
push
lods
fdiv
fstp
inc
hlt
(bad)
dec
push
dec
mov
and
out
ins
ror
fist
stos
jge
mov
lods
stos
sub
inc
xlat
cdq
mov
sbb
cmp
xor
in
mov
mov
in
dec
push
(bad)
jmp
mov
out
dec
sbb
fldenv
call
adc
sbb
(bad)
movs
movs
push
pop
pop
mov
adc
xor
mov
sbb
movs
mov
mov
iret
add
mov
dec
pop
mov
mov
std
shl
cs
sbb
xlat
in
pop
xchg
jl
retf
xchg
adc
push
fnsave
idiv
jns
out
(bad)
daa
mov
cmp
adc
repz
mov
or
aaa
in
mov
xlat
ja
adc
sub
adc
aaa
push
mov
inc
xor
cmp
sub
dec
cld
aaa
or
hlt
sbb
stc
pop
cs
dec
inc
and
repz
dec
or
iret
jb
mov
scas
hlt
adc
jbe
ret
fnstenv
fidiv
mov
jmp
aam
data16
mov
(bad)
add
dec
jmp
jge
fiadd
rcl
retf
dec
dec
bound
pop
loope
scas
pop
fidiv
push
fnstenv
mov
and
imul
lods
loopne
(bad)
fiadd
push
sub
sub
shl
jb
and
jmp
outs
gs
jl
sub
in
pop
inc
loope
inc
xor
loopne
jl
mov
pop
shl
test
mov
das
cli
sub
(bad)
and
cmp
mov
xchg
push
cmp
pop
outs
stc
or
retf
rcr
das
push
arpl
lea
lods
scas
mov
dec
jle
mov
pop
jge
push
(bad)
cld
sahf
mov
xchg
inc
daa
dec
retf
jnp
or
mov
push
ret
jl
push
and
(bad)
push
inc
movs
mov
stc
jns
jp
(bad)
ins
pop
push
ds
movs
nop
push
pusha
js
test
loopne
mov
stos
retf
lds
pop
jae
push
fcomp
stc
int
je
and
pushf
test
and
sub
sbb
xchg
icebp
mov
xor
mov
loopne
push
fcomp
enter
mov
sub
mov
mov
addr16
mov
fstp
loop
push
mov
inc
jp
in
cmps
sub
lea
sub
(bad)
outs
adc
mov
popf
mov
dec
popw
cli
push
popf
int3
sbb
inc
js
in
xor
dec
pop
popf
test
jne
mov
into
sahf
test
xor
ror
outs
mov
jne
xchg
and
add
shl
mov
xor
jno
nop
sub
mov
pop
pusha
sub
icebp
cmp
xchg
jbe
push
mov
mov
pop
jbe
test
out
mov
cmp
jmp
enter
leave
xor
cmp
mov
fadd
das
push
adc
adc
push
adc
jg
cmc
and
or
js
imul
jno
mov
cmp
add
out
int3
xchg
pop
call
orps
push
mov
aam
push
adc
mov
sub
jmp
xchg
and
and
mov
cmp
jl
mov
xchg
clc
add
jae
fstp
dec
jnp
jmp
push
jge
dec
lahf
jp
(bad)
push
ja
or
jae
adc
sbb
push
lods
push
cmp
imul
into
xor
call
inc
pop
ror
inc
sub
movs
(bad)
xor
(bad)
mov
jp
pop
icebp
xor
jl
pushf
rcr
sbb
leave
and
xchg
push
jns
call
push
sar
aaa
ror
fs
popa
pop
adc
shl
fst
pop
popf
(bad)
xchg
push
mov
jecxz
rcr
pop
mov
aaa
shr
dec
out
inc
pushf
arpl
jbe
arpl
lods
mov
mov
mov
icebp
fcmovu
test
sahf
xchg
inc
ss
cmp
mov
ja
xchg
test
in
mov
cmp
mov
xor
fwait
pushf
sub
stos
cli
icebp
push
or
daa
fdiv
out
xchg
jp
rcl
cs
ret
(bad)
out
jns
pop
jns
loop
dec
cdq
dec
not
stc
cmp
cli
push
ds
push
ror
ret
inc
fnstcw
jno
mov
mov
push
ror
ror
push
ds
cmp
out
rcr
or
js
or
call
pop
adc
mov
sbb
test
es
pop
sub
jecxz
jnp
cmps
cmc
int3
addr16
test
out
rol
pop
push
pop
or
outs
mov
ins
rol
(bad)
pop
pop
es
out
dec
pop
sub
iret
sbb
idiv
jmp
js
arpl
add
pop
dec
mov
jns
clc
aas
(bad)
mov
sbb
mov
or
shl
sti
dec
or
outs
mov
mov
std
out
(bad)
imul
jge
aaa
lods
xor
(bad)
and
jo
jmp
in
pushf
aam
and
into
xchg
mov
test
in
les
int
push
hlt
inc
mov
mov
outs
pop
imul
lea
ins
(bad)
pop
or
addr16
mov
pop
push
mov
or
dec
stc
or
sub
inc
sbb
imul
cmp
dec
jg
out
loopne
jmp
shl
pop
aam
int3
movups
loop
push
scas
dec
or
cmp
mov
adc
aam
pop
xchg
or
test
pop
push
lods
mov
mov
pop
(bad)
xor
(bad)
and
es
push
adc
cmc
cmp
call
mov
push
ret
mov
add
xor
test
xchg
test
into
jnp
and
xlat
test
adc
test
sahf
aad
mov
int3
ret
dec
xchg
xlat
movs
fsub
pop
push
out
aam
push
in
mov
mov
cld
fld
mov
jno
das
cwde
xor
and
add
mov
add
inc
call
pop
dec
push
mov
fldcw
adc
mov
mov
(bad)
push
popa
shl
in
lahf
bound
pop
gs
mov
imul
outs
arpl
rol
pop
test
add
out
lods
movs
pushf
push
enter
jb
adc
mov
mov
jae
or
add
jbe
vsubsd
pop
sub
mov
pushf
(bad)
loopne
mov
icebp
(bad)
sbb
arpl
(bad)
pop
xor
sar
rcr
cdq
out
cmp
(bad)
dec
inc
mov
(bad)
gs
pop
stos
inc
add
out
xor
push
sub
es
shl
loop
push
bound
mov
sbb
mov
pop
pop
jb
in
inc
rol
cmps
pop
pop
xchg
(bad)
shl
es
mov
sbb
(bad)
shl
int
add
dec
rcl
mov
and
push
enter
test
mov
add
mov
cld
pop
ror
std
cmp
and
or
test
xchg
fisubr
xor
mov
rcr
clc
xchg
shl
test
adc
sub
fisub
int
lds
daa
xor
inc
mov
xor
dec
or
sbb
and
adc
mov
xchg
sub
add
lods
jecxz
mov
jg
mov
xchg
hlt
rcl
(bad)
fdiv
pop
pop
push
clc
inc
push
arpl
fist
dec
xchg
push
out
es
jo
in
xchg
xor
das
inc
loope
pop
jge
mov
loop
cmps
sar
(bad)
cmp
mov
cld
(bad)
nop
adc
nop
add
push
loope
adc
fnstenv
mov
outs
aam
add
cmp
ret
cmp
lods
and
in
dec
dec
aam
push
out
push
and
outs
pop
cli
push
rep
retf
mov
outs
sub
fs
lock
fs
aaa
xor
shl
leave
push
xor
imul
pop
add
and
adc
adc
push
inc
sub
ficomp
cmp
nop
push
lock
push
push
mov
fdiv
jmp
fistp
repz
dec
rol
xchg
retf
lods
hlt
fld
nop
sub
dec
sbb
mov
sbb
mov
add
or
shl
xchg
xchg
lods
scas
ins
push
ins
out
push
js
enter
ss
shr
jb
(bad)
sub
int3
repnz
push
into
mov
sahf
movs
aaa
sbb
ror
movs
xchg
xchg
or
adc
jmp
cmp
(bad)
movs
fldcw
mov
push
push
jae
dec
jge
outs
jbe
inc
sub
mov
popa
cmp
cmps
out
in
mov
pop
cld
add
daa
jmp
sub
xchg
xor
lock
cli
repnz
inc
fld
mov
jl
stos
add
dec
inc
push
ror
pushf
in
loopne
dec
xor
mov
cmp
push
inc
(bad)
dec
(bad)
int3
pop
pop
aas
ret
dec
xchg
leave
enter
xor
add
imul
enter
call
dec
jle
sbb
sbb
or
fcmovb
adc
hlt
pop
sahf
jno
jns
loop
sbb
xchg
pushf
lock
fs
mov
int
pop
arpl
mov
test
(bad)
sub
jg
repz
jbe
push
js
push
xlat
test
icebp
std
mov
repz
mov
aam
inc
sti
loop
mov
xchg
sbb
sti
xchg
(bad)
fadd
cmp
fwait
mov
mov
lahf
jbe
pushf
mov
xor
push
out
loope
cld
pop
cmp
mov
mov
sbb
inc
xor
and
sub
dec
int3
xchg
dec
enter
nop
xchg
leave
adc
pop
jo
stc
adc
mov
out
sbb
repnz
inc
fisub
dec
lds
outs
or
les
fldcw
lods
mov
add
faddp
bnd
in
fidiv
add
imul
neg
add
int3
imul
inc
cmps
pop
dec
aaa
sbb
(bad)
out
repz
pop
push
or
cmp
inc
push
xchg
lods
cli
mov
xor
loop
cmps
xchg
mov
pop
pop
xor
mov
cwde
mov
pextrw
push
xlat
dec
pop
mov
dec
dec
pop
pop
int
lahf
push
fdivr
xor
retf
fmul
clc
push
xchg
(bad)
xor
sub
sub
cdq
sete
out
cmp
in
pop
sti
lods
(bad)
shl
mov
push
jne
mov
push
clc
scas
sar
push
ror
xchg
cmps
and
jnp
xor
stc
pop
jmp
ins
ins
(bad)
xlat
lds
movs
stos
jno
rcr
and
sbb
scas
push
jae
xchg
jmp
xchg
pushf
loopne
loope
mov
retf
or
mov
adc
sar
inc
test
sub
stos
es
fild
repz
mov
or
mov
dec
mov
lea
push
push
push
dec
sub
mov
add
or
retf
pop
mov
dec
dec
mov
xchg
lds
bound
les
lock
ficomp
and
aam
retf
cmp
fisub
pop
pop
xor
mov
cmp
add
ret
sub
mov
test
div
stos
sub
sbb
cs
add
in
xor
cs
(bad)
clc
les
pop
sbb
jns
mov
mov
jmp
fcomp
sub
in
mov
and
call
mov
push
nop
fcomp
lahf
out
pushf
fld
(bad)
fisubr
xchg
mov
pushf
and
lock
rcl
loop
mov
adc
sbb
sbb
pop
rcl
aad
clc
stos
mov
imul
(bad)
nop
push
aam
in
outs
inc
aam
jbe
in
xor
push
in
mov
pop
sub
jmp
jg
(bad)
inc
inc
mov
sbb
push
(bad)
ins
(bad)
not
sub
xchg
mov
(bad)
into
add
cmp
mov
cmps
test
(bad)
shr
xchg
pop
(bad)
cmp
aaa
sbb
neg
(bad)
pop
jecxz
push
mov
add
loop
and
ror
sti
jmp
or
mov
jmp
dec
push
inc
mov
mov
dec
or
loop
cmp
loopne
dec
inc
call
or
xchg
mov
cs
es
scas
and
inc
inc
(bad)
in
cs
and
neg
add
mov
mov
jo
mov
push
clc
es
xchg
aas
aaa
xchg
and
ds
aaa
push
repz
aad
inc
mov
sbb
or
xchg
or
xor
hlt
dec
test
daa
inc
jmp
xchg
stc
xor
jp
mov
enter
not
test
fnstsw
(bad)
movs
and
in
ja
sub
stos
test
stc
dec
daa
pop
popf
and
dec
sbb
sbb
push
or
inc
or
cld
pushf
mov
xchg
and
shl
test
dec
mov
icebp
pop
and
(bad)
xchg
push
shl
in
add
out
dec
sub
xlat
inc
loop
or
and
fild
jge
dec
xchg
dec
cmp
dec
fmul
loope
in
pop
mov
sbb
pop
or
push
jecxz
push
pop
pushf
xchg
in
and
xor
mov
push
pop
stos
mov
scas
jno
dec
pop
adc
mov
icebp
fisub
fist
push
xchg
test
mov
data16
sbb
xchg
fyl2x
retf
pushf
mov
out
push
jmp
mov
in
push
jmp
stos
or
jns
adc
dec
mov
loop
dec
push
sbb
(bad)
lahf
icebp
lds
or
xchg
xchg
aad
mov
mov
pushf
push
sub
fisub
ins
test
in
xor
sbb
test
xchg
sti
mov
les
in
sbb
xor
xor
mov
loopne
lock
out
fnsave
mov
iret
push
mov
rcl
loop
sub
or
pop
dec
lods
out
les
inc
fcmovu
push
cmp
pop
pushf
xchg
je
and
xchg
pop
sbb
out
aas
test
(bad)
jl
in
outs
fisubr
mov
(bad)
mov
loopne
aad
add
mov
cdq
dec
lahf
adc
sbb
jnp
addr16
dec
div
sub
xor
sbb
and
adc
and
(bad)
fstp
cmp
and
ret
das
fmul
mov
jecxz
adc
cmp
pop
mov
enter
nop
jge
lea
imul
fld
add
mov
pop
loope
pop
loopne
adc
jnp
cmp
rcr
xchg
test
push
mov
cmp
pop
sbb
sti
mov
pop
pop
push
ja
xchg
(bad)
cwde
(bad)
pushf
xchg
mov
mov
gs
push
and
jle
out
in
and
(bad)
fmul
push
cmc
mov
sbb
mov
test
jbe
sub
jmp
sbb
xlat
mov
mov
jmp
aaa
int3
jge
dec
mov
aas
idiv
adc
xor
popa
hlt
leave
jae
fucomip
and
mov
pop
test
arpl
inc
inc
add
inc
sub
pop
les
jbe
div
cwde
dec
shr
mov
pop
mov
xor
hlt
jo
and
sbb
out
(bad)
xchg
cmp
xchg
scas
sub
cld
iret
cwde
inc
xor
push
mov
jecxz
jg
cmp
jmp
inc
in
pop
scas
cwde
push
mov
test
and
call
out
cmp
ins
(bad)
imul
jge
inc
(bad)
dec
mov
push
cmp
cmp
mov
add
inc
iret
mov
cwde
test
dec
xor
sbb
cmp
push
test
jbe
imul
pop
je
or
and
rol
sbb
or
sub
sub
mov
dec
adc
push
sahf
loop
(bad)
popa
sub
mov
push
(bad)
jmp
rcl
and
xor
and
cmp
hlt
fs
dec
cmp
fsubrp
push
loop
cmps
sub
adc
inc
je
cmp
pop
xchg
add
jne
sbb
xor
mov
sbb
(bad)
and
push
out
out
int
adc
mov
iret
cmp
dec
pop
aaa
adc
mov
xor
inc
jnp
pop
mov
add
(bad)
push
fld
idiv
lahf
in
xchg
push
cdq
lahf
xlat
imul
out
(bad)
fsubr
push
or
mov
xor
sub
xchg
mov
mov
add
or
push
in
(bad)
out
int3
ja
push
cs
gs
fbld
ins
push
mov
and
fs
ret
adc
aad
adc
pop
pop
mov
(bad)
mov
jne
enter
call
pand
mul
cmp
mov
sub
pop
int
dec
in
rcr
shr
inc
jo
imul
xchg
jae
rcl
sbb
push
adc
mov
push
sbb
mov
icebp
out
sbb
add
or
mov
jle
push
pop
cmps
ds
rol
pop
fisub
loope
push
stc
cmp
icebp
adc
and
pslld
into
sbb
(bad)
cmps
lahf
or
(bad)
faddp
and
mov
push
sbb
(bad)
push
(bad)
pop
inc
jl
push
and
loopne
pop
pop
xchg
call
cmps
and
push
mov
test
nop
xchg
xchg
sbb
inc
in
mov
jecxz
nop
arpl
in
push
rcl
push
loopne
gs
dec
(bad)
adc
cmp
push
sbb
push
fldenv
jb
mov
cmps
dec
adc
xchg
cmp
stos
dec
or
jecxz
xchg
push
(bad)
cmp
lea
push
jmp
mov
in
test
mov
js
push
ficomp
repnz
leave
int3
jle
sbb
xor
pop
addr16
or
or
(bad)
loopne
sahf
sbb
push
xchg
jge
or
mov
mov
daa
pop
jl
ins
(bad)
pushf
adc
push
jmp
xchg
and
dec
cmp
add
xlat
shl
icebp
outs
jmp
js
sub
out
add
aas
push
mov
jae
push
pop
xchg
add
call
inc
aam
dec
pop
fcom
into
das
movs
jno
stc
cmp
sar
mov
mov
aam
adc
rcl
mov
cmp
loopne
popa
fsub
or
push
ds
shl
mov
loopne
test
or
ss
dec
test
or
fcmovnbe
test
dec
jmp
in
test
daa
sub
hlt
inc
sbb
add
mov
clc
fwait
xor
ret
lods
cmp
mov
dec
sbb
push
mov
xchg
push
or
dec
aad
mov
push
add
loope
(bad)
add
cmp
icebp
fiadd
fs
jmp
push
icebp
xchg
add
xor
or
out
outs
mov
jg
inc
fdivr
adc
sub
int3
jne
out
shl
retf
iret
aad
jbe
out
jne
pop
add
adc
xchg
jmp
pop
add
mov
pop
inc
lods
mov
add
mov
jmp
sbb
dec
loopne
sbb
jl
mov
push
jecxz
movs
sub
xchg
pop
xchg
jae
daa
mov
aad
mov
cmc
and
pop
push
repnz
sub
bound
sub
mov
in
cmc
push
mov
enter
mov
lods
pop
add
test
into
jns
xchg
dec
adc
cmp
xor
mov
jb
mov
mov
orps
add
sbb
xchg
mov
(bad)
adc
imul
jne
adc
cmc
rol
enter
pushf
call
(bad)
sub
dec
out
push
(bad)
sbb
repnz
fsub
pusha
add
jmp
daa
dec
add
fcomp
test
std
(bad)
in
mov
rol
pusha
fldcw
pushf
js
test
int
stos
xchg
shl
in
ins
push
mov
js
shr
test
ror
outs
pushf
fsub
loope
mov
pop
push
fsubr
xor
out
data16
rcl
repnz
(bad)
pushf
push
inc
pop
rol
fst
sti
xchg
out
sub
jbe
jno
mov
popf
jo
stos
mov
out
div
or
ins
jle
dec
dec
test
les
push
stc
mov
xchg
pop
dec
xchg
in
push
cmps
out
dec
sub
or
pop
(bad)
mov
gs
ficomp
add
or
mov
mov
xchg
sbb
aaa
ds
sar
shr
cmc
adc
fs
sbb
push
cmc
push
sti
inc
push
out
fcomp
jmp
pushf
shl
les
mov
test
lahf
inc
mov
pop
mov
jge
xor
daa
mov
lods
inc
dec
neg
pop
(bad)
idiv
sbb
sbb
fcom
dec
sub
jnp
push
(bad)
fmul
mov
adc
popf
sub
pop
int3
aas
mov
mov
mov
add
jne
test
push
xor
(bad)
xchg
popf
loop
(bad)
pusha
dec
in
cmp
out
jg
and
adc
cmp
mov
adc
loop
scas
inc
xlat
(bad)
xchg
dec
xor
mov
stos
loope
int3
push
xchg
bound
test
mov
arpl
popa
lock
and
inc
cmps
and
push
out
jae
in
mov
clc
int3
inc
sbb
push
(bad)
imul
ret
dec
push
fimul
lahf
arpl
xor
in
dec
repnz
bound
pushf
or
gs
ins
fdiv
push
and
scas
imul
mov
dec
pop
aam
xlat
xlat
pushf
push
lgs
nop
and
sbb
(bad)
sbb
test
loope
xchg
cmp
pop
push
jg
jb
cmps
xor
lahf
loopne
test
adc
das
fnstenv
mov
xchg
pusha
cmp
daa
inc
sub
adc
fwait
xlat
sub
mov
adc
inc
jge
rcl
ins
ror
shl
out
pop
dec
adc
push
or
or
jns
ins
shl
std
lods
(bad)
push
fwait
pusha
jns
cmp
dec
aad
dec
fs
rcr
(bad)
jl
add
ja
mov
add
(bad)
fs
(bad)
dec
adc
xlat
and
dec
imul
jne
add
push
pop
push
mov
into
scas
sub
pop
lods
fs
xchg
arpl
shl
jmp
sub
adc
dec
sbb
dec
std
xor
mov
mov
aaa
(bad)
jp
sub
fild
mov
or
pop
and
(bad)
and
sbb
add
pop
adc
loopne
lea
fs
data16
mov
add
add
dec
jmp
mov
push
inc
sbb
sub
sub
and
and
sbb
mov
cld
nop
ins
(bad)
pop
jmp
xor
add
jne
xchg
mul
and
mov
cld
xchg
sub
ret
pop
pushf
popa
(bad)
cmp
pop
and
or
dec
loop
hlt
arpl
mov
dec
cmp
sub
sub
dec
aas
or
pushf
mov
lock
mov
rcl
xchg
add
jae
sti
stos
jae
enter
out
dec
and
enter
pop
lock
ins
outs
jg
iret
sub
mov
sub
mov
xor
sub
int
xor
int
sub
and
push
lods
aam
push
jmp
mov
add
mov
sti
inc
imul
pop
dec
jne
out
inc
push
test
sbb
lahf
xchg
xor
sub
mov
mov
push
repz
xchg
inc
leave
fiadd
pop
cmc
fisubr
arpl
cmp
(bad)
(bad)
mov
push
mov
dec
clc
inc
push
adc
lds
sbb
or
add
sub
xchg
or
and
test
cld
imul
xchg
sbb
inc
cdq
stc
out
adc
jl
pop
test
aam
sbb
leave
xchg
xchg
sar
or
inc
loope
cs
pop
xor
stc
and
and
jl
mov
and
cs
mov
pop
push
inc
mov
inc
push
mov
test
cmp
(bad)
aas
and
cmps
add
lods
jo
pop
or
adc
retf
cmp
mov
inc
repnz
jl
dec
arpl
dec
dec
dec
call
movs
jno
sub
fidiv
push
retf
sub
rcl
fimul
ret
add
or
daa
push
or
mov
mov
or
enter
pop
push
movs
int3
push
sub
aad
loope
mov
xor
push
sbb
out
fsub
test
cmp
pop
mov
gs
pop
lahf
jne
jmp
aam
pop
imul
sub
arpl
push
xchg
pushf
push
jae
popa
xchg
aam
and
sbb
jmp
repnz
icebp
stos
(bad)
sahf
push
pop
(bad)
push
or
sti
rcr
sub
(bad)
shl
mov
jb
mul
sti
push
mov
lahf
jmp
push
xchg
(bad)
xchg
shl
int3
aam
push
out
or
inc
cmps
ins
outs
fistp
icebp
js
mov
mov
pop
add
stos
and
call
xchg
push
sbb
daa
push
dec
je
jno
pushf
test
mov
pop
neg
retf
fcomp
stos
arpl
int3
jmp
out
enter
mov
aas
mov
dec
pop
cmp
mov
fist
xor
jge
xchg
fdiv
mov
(bad)
and
mov
mov
mov
inc
shr
jae
xor
sub
mov
sub
test
sub
pop
adc
mov
pop
and
cmp
fistp
dec
cmp
push
hlt
xchg
fcmove
gs
(bad)
loope
mov
sti
xor
jle
cmps
dec
jmp
add
push
add
rol
dec
mov
ins
mov
xchg
jno
sbb
hlt
pop
mov
cmp
or
sbb
fist
mov
test
enter
loop
mov
xchg
xchg
add
mov
pop
gs
ins
xor
jmp
xor
hlt
mov
pop
aam
push
xor
cmp
outs
mov
and
or
sbb
mov
add
(bad)
push
xchg
lods
aas
or
dec
push
mov
mov
inc
jmp
sub
pop
push
nop
push
push
out
inc
adc
dec
(bad)
cmc
mov
add
dec
ja
add
push
daa
fdivr
mov
cmp
pop
aad
repnz
sub
in
dec
jnp
jns
hlt
stc
and
pop
lahf
int
xor
jp
sub
gs
dec
push
fld
pop
lahf
and
jp
imul
dec
int3
mov
and
outs
add
cmps
sub
inc
pop
movaps
jnp
jo
xlat
sub
daa
sub
jmp
mov
mov
push
clc
lock
sub
test
aaa
addr16
call
mov
add
mov
fld
dec
cs
xchg
call
inc
mov
lods
push
cmp
test
push
std
leave
xchg
aaa
dec
test
and
rcr
pop
add
mov
and
in
fcmovnbe
fcom
stos
inc
xor
lods
dec
sub
ja
aad
fnstsw
xor
push
fidivr
cdq
cwde
sub
test
(bad)
les
push
xchg
ins
and
inc
cmp
(bad)
gs
adc
inc
jmp
cmp
mov
pop
jb
(bad)
sub
push
jae
nop
fst
ja
cwde
call
mov
cs
(bad)
pop
aam
fwait
int
dec
jns
cld
cmc
mov
movhps
sbb
sub
hlt
cwde
aaa
lahf
loopne
(bad)
int3
and
and
std
push
arpl
ror
push
jmp
add
cdq
pop
loope
dec
cmp
out
and
xchg
mov
add
push
aaa
popa
push
in
aaa
sub
mov
lea
and
jmp
idiv
and
jp
in
fist
enter
out
ret
fild
mov
push
xor
cmp
ficomp
mov
mov
xchg
dec
add
imul
mov
lock
mov
cmps
sub
sub
add
mov
mov
clc
or
arpl
jmp
out
popf
pop
push
xchg
arpl
fcom
cdq
dec
mov
popa
out
and
dec
pusha
inc
mov
xor
or
das
dec
xor
je
adc
popa
jg
sahf
sub
fwait
sbb
push
fidiv
jge
mov
mov
jnp
scas
daa
dec
cmp
out
cwde
je
mov
aad
and
inc
pop
mov
ficom
fistp
fadd
(bad)
push
jl
out
out
lock
pusha
loopne
cli
scas
mov
std
fmul
shl
dec
adc
dec
ficomp
push
and
jnp
outs
sbb
fcom
or
mov
shl
in
adc
ss
fisubr
mov
ds
xchg
dec
add
inc
mov
outs
test
jge
sub
sbb
inc
xchg
sub
adc
movs
int
fmulp
adc
inc
lahf
add
dec
sbb
xchg
adc
mov
pop
dec
les
dec
pop
lods
fmul
popa
sub
inc
mov
mov
mov
sahf
(bad)
addr16
cdq
push
aad
pop
pop
cmc
adc
mov
sbb
pop
and
add
gs
push
fsubr
mov
and
(bad)
push
sbb
push
dec
call
inc
cwde
inc
repz
sahf
loope
jmp
cmp
int
add
loope
frstor
cmovl
addr16
movs
push
loop
jle
jmp
aas
pop
iret
mov
shl
shl
lock
mov
xchg
add
jno
xor
cmp
pop
or
push
into
sahf
lock
inc
jmp
dec
sub
or
out
test
pop
xor
jne
dec
scas
pusha
into
inc
jbe
(bad)
call
lods
mov
xlat
or
leave
clc
dec
and
fld
(bad)
sub
pop
ret
out
mov
xchg
xlat
out
fsub
cmp
fldenv
pusha
push
xchg
addr16
push
and
rcr
sub
sbb
or
cld
mov
(bad)
cli
stos
lea
sub
inc
ds
push
adc
(bad)
push
adc
movntq
cmps
cmp
test
add
inc
out
push
pop
mov
mov
pusha
mov
jmp
mov
xlat
cmps
add
popf
imul
mov
xor
fstp
sbb
(bad)
pop
mov
fnsave
push
outs
push
xchg
loope
jae
in
adc
add
ins
sub
mov
pop
pop
dec
mov
cmp
into
mov
adc
mov
into
cmc
bound
imul
fs
mov
dec
dec
fidivr
mov
ja
mov
and
xlat
test
add
adc
xchg
retf
mov
loopne
data16
repz
dec
or
or
jl
bound
dec
stos
or
dec
push
mov
lea
pop
lds
ret
pop
sub
dec
cmc
imul
inc
stc
xchg
test
fsub
test
mov
cmps
inc
neg
(bad)
push
xlat
icebp
js
push
fcmove
xchg
rcr
and
(bad)
xchg
cmp
clc
leave
push
rcl
call
ins
imul
pop
jnp
mov
or
mov
sub
dec
jecxz
adc
push
jl
add
ss
pushf
jg
xchg
xchg
leave
sbb
mov
(bad)
aas
dec
enter
call
mov
fld
adc
clc
test
pop
pushf
or
push
addr16
cmp
mov
rol
les
mov
fsub
movs
inc
loop
sbb
(bad)
mov
cmps
movs
fbstp
arpl
and
aad
sub
sub
or
jns
loope
mov
aad
xchg
mov
or
and
stc
pop
cmp
pop
pop
push
sbb
push
(bad)
aas
or
hlt
mov
repnz
fsub
add
call
mov
ins
pop
push
push
mov
cmp
dec
lods
cmp
(bad)
(bad)
icebp
test
mov
(bad)
ja
add
adc
mov
cmp
sar
scas
call
ins
gs
jmp
mov
xor
pop
ficom
or
pop
loopne
bound
movs
dec
(bad)
addr16
sub
in
dec
rol
popa
lds
push
sahf
test
rol
sub
and
or
xchg
inc
cmp
sbb
xchg
dec
push
adc
int3
ret
and
cwde
hlt
mov
mov
repnz
idiv
in
lock
fdiv
cmp
lahf
hlt
push
add
add
sub
cwde
dec
push
push
cmp
cmp
mov
adc
push
dec
(bad)
cmp
cmp
std
mov
mov
lods
fs
inc
inc
or
xor
xchg
stos
push
loopne
push
pop
jbe
push
loop
enter
fsub
mov
jg
sbb
lahf
cmp
jns
loopne
arpl
aaa
enter
not
ds
jns
fsub
test
push
and
sub
fimul
sub
popf
bound
jmp
xchg
nop
addr16
xchg
sti
push
mov
mov
aam
xchg
fnstcw
dec
test
mov
popf
pop
ins
mov
add
sti
xchg
sub
and
(bad)
mov
mov
xor
test
pop
cmp
stos
and
xchg
mov
sbb
dec
stos
dec
fcomp
call
test
int
sbb
dec
loopne
(bad)
mov
pop
adc
rcr
xor
enter
nop
daa
pop
shl
in
or
mov
cdq
into
dec
xlat
sub
sbb
fiadd
outs
jl
stc
dec
dec
hlt
mov
enter
daa
or
dec
ins
or
or
(bad)
cmp
cmp
mov
jae
das
rol
xlat
(bad)
jmp
enter
add
and
sbb
test
pop
cmp
or
dec
fs
mov
dec
rol
adc
lahf
and
pop
xor
push
fdivr
cmp
sub
push
inc
sub
(bad)
daa
ins
fidivr
and
scas
test
js
push
lock
lahf
(bad)
cld
xlat
(bad)
mov
dec
jl
test
inc
(bad)
cmp
ror
sub
mov
lods
dec
jmp
adc
jae
cmp
loope
and
mov
push
mov
jae
outs
aas
cmp
mov
push
cmp
fmul
or
cmp
sbb
fdiv
xchg
pusha
addr16
call
push
sbb
cmp
hlt
and
mov
add
and
lock
fst
ret
nop
xchg
ins
xchg
or
lock
mov
cmp
rcr
mov
or
fcomp
cmp
or
daa
ret
push
pushf
xchg
jo
sbb
cmps
xor
ror
mov
addr16
aaa
dec
ss
xchg
shr
pushf
inc
mov
in
outs
inc
push
stc
jb
(bad)
adc
adc
xlat
cmps
cmp
mov
pop
int3
mov
sar
push
call
stc
xchg
mov
rcl
mov
pusha
jae
push
mov
rcl
pushf
xor
xor
loope
(bad)
adc
in
clc
into
push
es
repz
sub
mov
cmps
add
retf
(bad)
sbb
ret
and
aad
mov
sub
xchg
out
retf
pop
jmp
lock
sub
stos
add
push
jle
pop
xchg
jb
(bad)
xor
cdq
mov
xor
xchg
lahf
mov
push
adc
addr16
test
fiadd
imul
dec
loop
mov
pop
or
mov
adc
add
sbb
sbb
sar
xlat
cmp
repnz
retf
or
push
fisubr
ins
out
pop
push
pop
jns
sbb
and
dec
push
xchg
adc
add
add
jmp
retf
sbb
mov
jnp
daa
lock
cmp
sub
js
or
int3
vminps
stos
xor
pop
stos
dec
push
cmp
popa
and
addr16
out
push
repz
inc
pop
push
cmp
push
call
dec
push
dec
inc
(bad)
add
mov
lahf
sbb
das
out
cli
loopne
inc
movs
lods
retf
cdq
pop
sahf
pushf
and
jp
ds
push
mov
fadd
mov
ins
test
into
lahf
push
sbb
mov
inc
adc
rol
pop
mov
push
jns
xchg
adc
mov
shl
xor
aaa
sub
loopne
stc
cmp
and
or
out
ss
mov
mov
inc
lds
and
les
out
shr
xor
sub
sub
ret
ds
test
out
loopne
(bad)
sbb
pop
jnp
add
scas
cmp
xchg
int
dec
icebp
jmp
xchg
cs
nop
xor
xchg
sub
cmc
ret
dec
sbb
pushf
rcl
xchg
ror
pop
cmp
nop
cwde
mov
dec
loopne
loope
and
cdq
daa
js
ins
inc
pop
sti
sbb
jl
pop
dec
push
xor
mov
imul
or
dec
call
cmp
dec
push
(bad)
push
sub
sub
push
xor
mov
add
ret
bound
mov
test
(bad)
fs
ja
rcl
ja
cmp
stos
in
inc
addr16
iret
retf
in
cmp
jnp
adc
dec
in
loop
mov
adc
fild
je
inc
mov
shl
mov
out
inc
adc
jbe
sub
inc
js
dec
mov
ss
dec
call
xchg
push
mov
push
psrld
inc
fdivr
(bad)
int3
daa
or
fsubr
add
or
jge
loop
pop
out
sub
dec
or
fsub
mov
mov
pop
fiadd
shl
push
mov
in
or
add
dec
dec
add
inc
mov
lock
rcr
mov
or
cs
sbb
rcr
push
loopne
cmps
mov
(bad)
jnp
outs
fnstcw
repz
mov
lods
mov
(bad)
dec
ja
bnd
add
cmp
sbb
js
test
aad
fld
xchg
mov
xchg
test
adc
shl
out
loopne
sti
xchg
cmp
mov
gs
and
fisttp
push
jb
push
call
popa
enter
outs
dec
pop
mov
dec
dec
cmc
aaa
es
dec
mov
dec
cli
mov
mov
fwait
shr
icebp
lods
xor
in
imul
scas
mov
dec
sub
rol
retf
xchg
adc
mul
mov
(bad)
ret
jns
cwde
pop
mov
neg
lods
sbb
iret
inc
jne
sub
pop
(bad)
dec
hlt
add
retf
cs
nop
push
movs
xchg
cmp
xor
push
test
push
inc
sbb
fsubr
or
sbb
cld
aam
dec
lea
call
mov
mov
mov
mov
sbb
ret
push
stos
mov
cmp
lock
inc
cs
int
sub
ror
xchg
mov
mov
adc
cmp
adc
xor
pop
rol
call
out
and
mov
jecxz
(bad)
xchg
cmc
or
mov
xchg
test
(bad)
sub
loope
stos
addr16
push
std
pushf
push
sub
es
pushf
cs
popa
sub
enter
and
shr
out
push
sahf
(bad)
pop
dec
into
sub
mov
daa
dec
adc
adc
test
dec
dec
cli
pusha
cmc
cld
in
sbb
imul
cmp
mov
pop
push
daa
pop
add
test
sub
call
loope
push
lahf
scas
xlat
daa
sub
aam
adc
push
or
sub
and
push
dec
cmp
jg
inc
pop
adc
in
call
add
dec
push
shl
lea
sbb
ins
clc
pop
and
jmp
idiv
arpl
sub
cmps
xchg
sbb
sub
inc
sbb
ret
jae
xchg
push
cdq
fs
xchg
ror
hlt
mov
nop
pop
xor
xor
jb
and
dec
mov
test
mov
aaa
or
fdivr
dec
jnp
sub
inc
repnz
and
stc
xchg
xchg
add
push
lahf
push
(bad)
imul
fst
aam
add
retf
call
mov
call
aam
movs
dec
adc
out
inc
xor
jge
cmp
push
xlat
fcomp
imul
mov
pop
jg
(bad)
push
push
in
jle
inc
push
cmc
pop
pop
dec
jbe
sbb
and
in
inc
call
jmp
arpl
cld
push
push
or
loopne
mov
mov
mov
nop
(bad)
lods
je
jnp
mov
inc
pop
pushf
adc
cs
mov
cs
shr
mov
lahf
fs
ror
mov
loopne
push
cli
cmps
pop
xor
inc
jb
xchg
icebp
jno
in
cs
fidivr
jno
jnp
sbb
nop
aaa
loope
inc
sar
dec
ins
stc
mov
ins
inc
addr16
pop
aaa
jmp
and
sbb
loop
mov
mov
lods
lahf
mov
cdq
in
add
add
jg
mov
cmp
ror
xchg
(bad)
xor
loop
add
pop
stos
push
sti
aas
add
aam
add
jge
repnz
fs
dec
dec
jg
sti
xchg
dec
inc
xchg
outs
leave
ins
jmp
out
or
pop
js
xor
ins
mov
iret
mov
hlt
inc
push
cmp
jecxz
jae
dec
mov
pop
cld
dec
ss
sbb
xor
shl
xor
popf
addr16
cmp
gs
js
std
mov
dec
stos
cmps
push
sti
mov
mov
frstor
cmp
jmp
shl
push
ins
out
and
jmp
rcr
push
xor
adc
nop
in
movs
jecxz
mov
lods
out
(bad)
(bad)
outs
mov
push
sub
cmp
lds
jmp
jae
xchg
jno
int3
ins
scas
daa
and
shl
loopne
mov
clc
cmp
xor
lea
cmp
lock
lods
sbb
mov
adc
pop
iret
xchg
fdivr
cli
pop
cmps
sbb
dec
das
(bad)
stc
hlt
push
int
xor
addr16
add
cmps
fsub
or
cld
repnz
js
jnp
out
pop
jno
rol
push
adc
enter
cmc
ret
pop
mov
dec
(bad)
stc
aad
sbb
not
inc
push
int
arpl
mov
retf
mov
jmp
in
dec
dec
jge
xchg
out
adc
dec
sub
lock
inc
rol
xor
dec
xor
mov
sahf
pop
xlat
inc
pop
push
add
test
bswap
pop
test
cmc
mov
xchg
inc
fwait
std
push
push
(bad)
cld
adc
out
pop
fsub
fsubr
mov
push
int
ins
aaa
loop
mov
out
mov
cwde
loop
das
in
push
out
jge
out
clc
jnp
clc
sub
mov
adc
cmp
xchg
inc
ja
adc
sar
push
fwait
push
jmp
cs
movs
lahf
cmp
ror
cmp
push
mov
sbb
jae
sbb
xor
aad
ret
lods
call
lock
cmp
push
aam
dec
sbb
jno
xchg
sub
sub
cmp
and
imul
div
(bad)
dec
imul
(bad)
mov
pop
pop
push
test
jmp
ror
and
aad
movs
xchg
sub
clc
xchg
bswap
push
sbb
pop
xlat
inc
movs
cld
test
pop
fbstp
(bad)
loope
les
lods
js
cmp
mov
aas
ror
push
(bad)
add
pop
dec
stc
xor
push
enter
mov
xchg
sbb
rcl
ds
enter
ror
(bad)
sub
cmp
pop
mov
mov
sbb
popf
jl
(bad)
cs
(bad)
fidivr
mov
repnz
nop
mov
dec
test
sbb
shl
lods
pop
cmp
cli
and
(bad)
enter
add
loop
out
test
pop
(bad)
in
add
xchg
sub
cmp
xor
(bad)
push
xor
push
(bad)
or
les
mov
sub
aam
add
cmp
push
sub
mov
aas
and
push
xchg
cmp
sbb
rcr
adc
loope
or
jle
xchg
gs
mov
inc
aaa
cmp
xor
ret
pop
mov
sbb
(bad)
cmp
dec
in
push
jp
cwde
pop
and
xor
dec
stos
cli
push
cmps
test
sub
icebp
xor
mov
out
int3
jge
xor
or
xchg
outs
xchg
les
mov
jmp
push
and
(bad)
add
pop
std
aas
nop
ret
inc
inc
mov
sbb
in
nop
inc
mov
mov
(bad)
pop
xor
xchg
sbb
(bad)
in
stc
call
sti
inc
mov
loop
lds
sub
jle
adc
push
fsub
dec
xor
loop
daa
les
test
retf
int
and
fwait
jbe
(bad)
(bad)
lock
mov
or
in
dec
cmp
rcr
xor
aas
or
arpl
sub
mov
jne
push
js
jnp
xor
push
sbb
add
push
mov
arpl
mov
push
ja
dec
jbe
adc
dec
aaa
mov
and
xchg
mov
pop
inc
pop
popf
sbb
mov
jecxz
or
mov
xlat
div
and
imul
jne
jno
push
sbb
dec
sbb
xchg
icebp
push
cmp
les
mov
jecxz
(bad)
ds
push
ja
rcl
add
cmp
pop
mov
test
shr
inc
mov
xlat
sbb
mov
out
lea
mov
mov
mov
ins
outs
fistp
and
dec
sbb
stc
sar
mov
fwait
xchg
xchg
push
dec
jmp
stos
shl
in
ins
(bad)
push
pop
mov
add
mov
xchg
outs
sbb
cdq
mov
pop
mov
xor
cmp
adc
retf
call
xchg
stc
jle
mov
in
xchg
push
push
mov
stc
popa
and
xor
mov
xchg
adc
fldcw
sahf
fistp
ret
retf
mov
neg
xchg
aam
loop
cmp
mov
push
jne
dec
stc
lods
push
aaa
adc
cmp
add
mov
xchg
repnz
push
dec
cmp
and
pop
push
mov
cmp
and
int
push
mov
xor
ins
and
in
sti
gs
add
aam
call
cs
lock
mov
push
jge
and
push
cmp
pop
rol
xchg
pushf
push
add
sbb
jecxz
add
inc
or
stos
loopne
dec
inc
mov
xor
leave
out
xchg
clc
pop
push
push
dec
hlt
push
dec
mov
sahf
fild
inc
xchg
pop
(bad)
(bad)
and
fisub
inc
xor
mov
mov
mov
push
push
stc
jge
push
inc
push
or
daa
out
xchg
add
ins
xchg
aad
mov
in
sbb
mov
imul
jnp
rcr
mov
in
xchg
push
pop
icebp
dec
imul
ret
es
enter
inc
jl
test
inc
imul
test
pop
mov
mov
mov
or
push
inc
mov
or
neg
rcr
(bad)
rcl
push
in
adc
(bad)
fdiv
adc
jmp
pop
jne
sbb
iret
adc
lods
shl
repz
mov
jb
fimul
push
cld
pop
imul
rcr
fisttp
jp
ins
data16
mov
pop
add
daa
pusha
or
jle
js
cmp
jmp
retf
cdq
jno
sub
out
sbb
ja
cs
xor
sbb
or
xlat
sbb
mov
call
dec
(bad)
mov
inc
jp
jl
jge
popa
sahf
inc
xchg
(bad)
(bad)
xlat
dec
jno
or
sub
and
add
lods
sbb
mov
fsin
repz
in
loopne
xlat
(bad)
adc
fwait
loope
jl
sub
cmp
sub
jne
mov
enter
test
sub
push
int
and
dec
pop
cmp
or
shl
test
test
mov
and
out
fldcw
call
out
ret
mov
pop
mov
popa
loope
jge
addr16
outs
js
inc
and
ins
xchg
stos
sbb
shl
int
mov
jne
sar
int3
in
sahf
inc
cld
dec
in
xchg
mov
push
or
pop
rol
loop
xchg
jg
fisub
push
and
dec
call
mov
popa
hlt
cli
add
(bad)
and
mov
fucomp
pop
cmp
icebp
mov
out
cmps
in
test
(bad)
lods
push
(bad)
push
loop
imul
lahf
data16
or
dec
cld
push
mov
arpl
adc
aad
rcl
pop
sub
sub
arpl
push
mov
push
addr16
push
mov
std
or
mov
dec
jmp
leave
and
mov
jge
enter
cmp
sbb
pop
ins
mov
pop
add
hlt
clc
and
dec
add
ss
sub
pop
inc
enter
sub
imul
sbb
xor
fdivr
mov
hlt
shl
dec
pop
cli
cdq
sub
cmp
loop
push
sbb
dec
pop
xlat
shl
xchg
jbe
jnp
dec
dec
push
jmp
ins
mov
jae
adc
ins
jae
pop
cmp
arpl
ror
mov
mov
add
mov
adc
dec
jle
mov
loop
pop
(bad)
shl
dec
ds
jg
cmp
inc
add
into
sbb
push
pop
dec
jmp
mov
shr
and
ret
sub
adc
popa
inc
sbb
scas
ins
push
pop
pop
cmp
aam
test
xchg
xchg
mov
push
jo
mov
jle
aad
xchg
adc
jne
jae
adc
sti
cli
mov
jnp
pop
jmp
rcr
dec
in
fstp
xchg
mov
xchg
pushf
icebp
inc
dec
or
inc
ja
mov
xchg
pop
and
cmp
mov
mov
shr
and
daa
pop
lock
lahf
push
dec
push
and
movs
or
sbb
pop
or
mov
dec
ins
jbe
cmp
movs
(bad)
pop
xor
pop
jge
xchg
ja
popf
or
add
cdq
push
sar
pop
mov
icebp
and
push
mov
and
mov
mov
xchg
dec
in
fldcw
push
int3
jne
jmp
xchg
jns
jp
lea
cwde
mov
mov
test
test
and
stos
nop
sbb
test
aam
xor
add
dec
out
mov
(bad)
(bad)
jecxz
inc
sti
sub
push
rol
test
cs
push
loopne
dec
ret
sbb
imul
nop
stc
test
mov
fsubr
js
cld
mov
std
out
arpl
sbb
fnstsw
in
or
mov
inc
cli
push
xchg
mov
rcl
pusha
(bad)
pop
add
cmps
fdiv
add
and
daa
sbb
pop
xchg
stc
xchg
and
jnp
(bad)
sub
rcr
loopne
loope
lds
jne
xchg
jb
add
or
push
shr
pop
pop
and
fwait
cmp
sub
(bad)
jecxz
loopne
iret
data16
imul
jne
movs
neg
push
cs
lahf
out
neg
pop
sbb
mov
adc
arpl
sbb
inc
out
adc
add
pop
call
(bad)
dec
stc
fcmovnbe
dec
jns
mov
pop
nop
out
fisubr
fdivr
fs
(bad)
into
xchg
mov
adc
adc
stos
xchg
ret
sbb
fst
arpl
push
fadd
jmp
inc
mov
xchg
pop
mov
test
dec
fisubr
mov
or
daa
dec
mov
pop
hlt
pop
loopne
xrelease
mov
and
ins
inc
test
jge
mov
out
inc
dec
lods
jecxz
push
(bad)
pop
(bad)
cmp
mov
movs
test
sub
in
push
inc
cmc
jg
mov
dec
sbb
stc
jp
pop
test
or
das
cld
or
pop
cmp
(bad)
popf
aaa
je
xchg
in
and
int3
or
mov
aas
ins
cmp
vmread
ds
aad
loop
shl
xor
ret
imul
push
dec
inc
jnp
in
inc
retf
dec
les
dec
xchg
ja
int3
push
mov
imul
je
add
mov
xor
xchg
add
mov
fild
pop
std
out
pushf
push
xlat
or
or
leave
xchg
daa
cld
cmp
mov
mov
push
adc
rcl
les
adc
xor
pop
pop
mov
add
psrlq
scas
jne
pop
push
iret
ins
jle
fld
(bad)
dec
xor
inc
mov
fistp
fmul
mov
cld
xchg
sub
lods
hlt
hlt
or
and
xchg
stc
mov
pushf
out
ja
or
loop
add
les
mov
lock
inc
mov
gs
pop
dec
xchg
xchg
xlat
xor
clc
adc
mov
arpl
out
lea
and
inc
xchg
inc
scas
mov
rol
push
pop
push
daa
lea
test
gs
xchg
loopne
aad
pop
add
push
sub
mov
or
fdiv
rol
cld
fcom
movs
popa
pop
leave
(bad)
push
or
sbb
add
jns
fnsave
mov
mov
sbb
test
in
js
xor
js
ficom
aaa
dec
movs
xor
xchg
mov
mov
outs
cli
cmps
inc
jb
lea
popa
push
fsubr
gs
stos
(bad)
dec
ds
xor
add
outs
dec
mov
sbb
dec
aad
nop
int
and
push
and
pusha
and
sar
or
jo
sbb
xlat
sti
in
xor
xchg
pop
fcomp
pushf
mov
popa
fld
and
or
out
push
add
les
movs
ret
dec
fsubr
and
pop
loop
mov
add
push
push
cmp
cmc
nop
fcom
mov
cmovge
cmp
dec
sub
jge
adc
adc
(bad)
or
dec
ror
mov
in
mov
push
aad
inc
pop
loope
mov
inc
gs
mov
nop
mov
add
popf
add
rcr
xchg
xor
fldcw
add
stc
push
cmp
lahf
inc
ds
das
popa
test
fcomip
rcl
scas
jmp
inc
push
imul
sti
or
pop
pop
jae
and
push
dec
xchg
call
sti
arpl
stc
jne
mov
lahf
xor
ja
cdq
mov
xchg
push
fwait
dec
(bad)
addr16
mov
rcr
stos
jbe
mov
jecxz
adc
idiv
call
jle
std
mov
aam
pushf
adc
lock
xlat
clc
daa
imul
dec
lods
enter
and
xlat
sbb
inc
adc
out
out
sub
and
clc
push
inc
addr16
dec
sub
cld
cmovge
push
cli
mov
jo
cmp
xlat
or
sbb
sub
pop
pop
mov
ds
inc
sbb
jp
mov
xor
jae
mov
icebp
les
jle
dec
pop
rcl
shl
movs
lock
jbe
dec
fst
aaa
mov
cvttps2pi
rol
movaps
pop
aam
mov
popa
dec
aad
fiadd
jns
cmp
and
(bad)
and
add
call
leave
rep
mov
xor
out
lock
cwde
mov
pop
ins
mov
ret
pusha
pop
pop
nop
add
movs
lahf
cmps
pop
imul
stos
mov
push
test
inc
and
das
adc
mov
int3
test
and
xchg
hlt
xor
sub
cmp
test
cmp
call
add
cli
add
pushf
and
xor
xchg
xor
div
test
lods
stos
cmps
add
xor
std
(bad)
pop
mov
dec
xor
jge
addr16
loopne
shl
and
sub
xor
lock
cmp
aad
add
pop
in
leave
enter
fidiv
pop
jbe
cld
mov
push
ins
out
outs
(bad)
(bad)
dec
xor
cmp
push
aaa
fidiv
hlt
dec
push
and
dec
xchg
addr16
repz
in
inc
out
sar
out
daa
int
std
enter
cmp
ins
cmp
xor
sbb
pop
cmp
inc
and
pop
test
icebp
inc
or
les
mov
call
jl
lods
sbb
dec
mov
pop
fwait
adc
sti
mov
xor
push
daa
addr16
cli
es
pop
fldcw
push
and
outs
dec
into
xchg
mov
ins
and
push
pushf
pusha
mov
cld
hlt
jae
loope
iret
push
inc
push
mov
sbb
push
in
push
clc
xor
sbb
sub
cli
loopne
jmp
or
inc
lds
xchg
scas
loop
dec
int
fs
movs
iret
pop
loopne
and
repz
inc
cwde
gs
lods
push
sbb
loopne
jmp
pusha
mov
add
fadd
jmp
jo
ins
or
sbb
dec
(bad)
in
pushf
mov
and
ror
pusha
add
aam
jge
mov
pushf
push
add
out
mov
xchg
sbb
repnz
enter
add
mov
push
mov
push
mov
mov
pop
call
les
sbb
pop
scas
sub
adc
or
adc
pop
jge
ror
mov
cmp
and
stos
loopne
pop
(bad)
(bad)
mov
xchg
mov
jnp
cmp
daa
xlat
add
lock
js
mov
mov
aas
aas
out
les
jns
shl
push
scas
jne
jmp
mov
into
jmp
imul
pop
xchg
jge
outs
popa
pop
stos
xchg
shl
ins
pop
stos
loopne
shr
add
jns
fwait
xor
mov
inc
dec
and
cdq
cmps
cld
rcl
pop
mov
call
add
xchg
sbb
cmp
call
jg
sbb
sub
cmc
pop
and
cmp
inc
loope
sub
push
ficomp
cmp
xlat
sbb
clc
sti
(bad)
xchg
mov
outs
inc
mov
add
dec
repz
daa
and
xchg
jno
mov
pop
mov
mov
xchg
(bad)
jl
push
lods
mov
sti
movs
jmp
in
jns
cdq
xchg
gs
or
call
fwait
push
mov
mov
test
cmp
dec
loopne
mov
mov
(bad)
arpl
out
inc
pusha
dec
add
add
aam
mov
mov
out
jle
cld
or
add
and
outs
ror
ficomp
jl
push
xchg
repnz
and
sahf
mov
cmp
pushf
adc
mov
mov
pop
lods
fsubrp
out
(bad)
loopne
lods
retf
mov
jecxz
add
in
iret
jg
daa
pop
and
ins
and
jecxz
push
mov
jmp
xchg
(bad)
in
call
mov
push
ds
jnp
loopne
inc
xor
xchg
cli
mov
push
jg
pushf
loopne
ds
fisub
stc
mov
aad
and
xlat
xor
movs
jle
lock
fst
jg
neg
and
cld
adc
inc
pop
dec
sub
iret
cli
fcmovnbe
cmp
and
mov
icebp
xlat
mov
inc
cmc
cmp
cmp
ds
pop
push
cmp
pop
xchg
mov
test
out
out
sub
sbb
std
(bad)
fadd
call
(bad)
das
mov
div
push
mov
icebp
dec
push
cmc
inc
and
call
push
lods
jge
xor
in
hlt
lods
push
aaa
fcmovbe
iret
into
lea
and
sbb
stc
push
cmps
inc
sbb
mov
sbb
inc
add
(bad)
mov
ins
push
dec
cld
mov
push
(bad)
xchg
push
add
push
fcom
lds
lahf
call
and
(bad)
xchg
jl
mov
or
sbb
outs
cs
push
push
pop
mov
mov
ins
mov
dec
arpl
push
jle
stc
aam
xlat
mov
mov
mov
(bad)
mov
fwait
pop
sbb
add
loop
popa
cmp
cmp
dec
mov
inc
aas
lea
in
dec
xchg
ror
push
sti
pop
jo
lods
(bad)
mov
test
mov
cmp
fistp
aaa
sbb
aam
cmp
mov
add
adc
aas
sar
(bad)
loopne
out
cmp
xchg
hlt
push
jp
xchg
pop
sbb
(bad)
lods
retf
and
pop
mov
daa
pop
icebp
add
dec
jb
neg
push
push
jp
repz
dec
pop
jne
mov
fs
adc
push
imul
jb
pop
and
test
mov
pop
mov
fadd
adc
fiadd
call
lea
fcom
call
push
add
leave
sub
push
in
retf
push
(bad)
pop
xlat
jmp
(bad)
dec
adc
mov
jle
ins
inc
arpl
push
sbb
mov
and
sar
out
push
ret
sbb
xchg
jmp
cmp
push
mov
ds
repz
loopne
pop
nop
xchg
dec
shl
jle
aad
add
mov
fist
sub
jno
into
gs
and
xchg
mov
push
imul
xor
inc
in
int3
or
inc
dec
or
lahf
inc
xchg
or
shr
inc
push
pop
imul
out
scas
repnz
push
(bad)
adc
xchg
add
lods
leave
pushf
pop
pop
outs
pop
rol
pop
popa
xor
dec
dec
addr16
push
mov
retf
push
pop
int
rcl
and
pop
jg
cwde
push
lods
sub
aas
push
popa
stos
les
push
mov
daa
or
pop
(bad)
mov
int
mov
mov
ins
loopne
dec
ror
adc
push
jecxz
ror
fidiv
scas
sub
and
pop
arpl
cmp
ins
cmp
lock
mov
add
push
aas
dec
loopne
mov
movs
push
paddusw
xlat
movs
int
sahf
pop
or
jmp
jb
loop
add
icebp
mov
mov
pop
cwde
cmp
into
in
loopne
aaa
sar
scas
xchg
icebp
fldenv
test
ins
mov
in
pop
mov
mov
pop
sbb
inc
mov
xor
inc
aaa
out
pop
outs
push
sub
pop
aam
arpl
not
and
push
aaa
push
cmp
mov
in
out
or
push
daa
pop
enter
retf
outs
in
cs
ja
leave
sub
cld
mov
cmp
loopne
jbe
and
xor
push
arpl
xor
out
mov
stos
inc
inc
shl
movs
enter
mov
addr16
(bad)
fsub
dec
je
cmp
mov
dec
fwait
xchg
pop
mov
dec
(bad)
and
sbb
cmp
inc
mov
jge
addr16
xchg
sahf
repnz
xchg
sbb
adc
and
xor
(bad)
xor
cmp
js
ins
jge
dec
or
mov
in
cdq
cmps
retf
mov
outs
adc
pop
cmp
sbb
fist
dec
les
jl
arpl
icebp
pop
adc
inc
jae
imul
pop
sub
jl
outs
xchg
scas
loop
sbb
cmps
xor
cmp
mov
cwde
xor
ds
movs
jp
dec
repz
mov
adc
enter
fcomp
jg
outs
pop
and
xor
push
xchg
(bad)
sbb
sbb
pusha
mov
mov
into
jg
and
mov
add
pushf
test
out
scas
add
xlat
jo
aaa
pop
jge
aaa
fsub
xchg
call
loop
push
push
not
movs
xchg
push
or
mov
out
mov
dec
mov
mov
dec
test
mov
jnp
aam
std
pop
bound
lods
sub
test
xor
pop
lea
cmps
rcr
ror
and
jecxz
pop
cmp
or
sbb
ror
xchg
out
push
fs
jp
ins
fsubr
push
lods
dec
xchg
mov
loopne
dec
ss
jmp
sar
sbb
mov
and
xchg
in
mov
in
mov
(bad)
aam
and
inc
pop
in
push
adc
xchg
cld
and
outs
dec
fld
sti
mov
idiv
loopne
or
pop
jb
xor
hlt
pushf
adc
gs
inc
mov
dec
shr
(bad)
push
stos
sub
xchg
clc
test
pop
call
or
out
jge
fist
cmp
mov
jl
and
cmp
push
mov
ins
mov
jo
jne
xor
sbb
push
(bad)
and
sbb
dec
and
sub
push
inc
xor
xlat
push
sub
mov
sahf
cmp
sbb
adc
es
mov
loopne
imul
mov
inc
mov
add
loope
push
mov
mov
leave
mov
dec
popf
adc
pop
sub
aam
test
push
(bad)
jns
inc
fs
mov
ficomp
test
mov
inc
lods
pop
cld
test
pop
push
cmp
int3
in
shl
pop
push
sbb
aad
add
mov
xor
fnstcw
arpl
retf
xchg
mov
xor
xchg
retf
mov
push
ficomp
push
sbb
sub
mov
fs
sti
cmp
in
ror
inc
sar
cmp
and
mov
dec
ins
xlat
fmul
adc
cmps
test
sbb
adc
jne
in
mov
ja
push
movs
test
ss
cmp
mov
or
bound
ins
mov
lahf
cdq
sti
sti
jmp
loopne
je
in
mov
mov
mov
push
pop
repnz
xor
xor
mov
lods
iret
sbb
or
mov
xchg
scas
push
xchg
add
mov
fdiv
and
rcr
pushf
push
xchg
loop
cmps
mov
xchg
inc
mov
inc
hlt
sub
fmul
out
in
mov
out
xchg
test
hlt
ds
add
jge
mov
retf
jnp
std
xchg
stos
call
push
in
and
ins
pop
pusha
mov
test
inc
fst
xor
mov
popa
inc
shr
loopne
sub
jb
fwait
sub
icebp
dec
(bad)
and
(bad)
inc
jns
dec
push
ss
and
mov
jno
xor
fld
pop
push
push
dec
mov
mov
test
cmp
sar
loopne
sbb
xchg
xchg
jle
pushf
cmp
stos
mov
inc
add
pop
sti
stos
adc
xchg
adc
mov
cmp
cwde
cmp
ss
ja
jl
cmc
aaa
and
sub
in
inc
xchg
dec
jno
xchg
test
outs
lds
adc
xchg
pop
add
jle
pop
mov
and
shr
bound
inc
ss
sbb
test
scas
dec
or
mov
push
imul
jmp
mov
adc
mov
dec
mov
mov
jl
xor
jmp
mov
xor
call
pop
(bad)
sub
test
dec
or
inc
jnp
jp
lods
fsub
scas
sbb
test
xchg
jle
fwait
jge
shl
xchg
fs
lock
les
mov
push
and
bound
js
pop
nop
out
imul
dec
arpl
mov
cmp
nop
movs
cmp
std
je
and
arpl
or
imul
(bad)
popa
rcl
add
xor
imul
jbe
mov
add
je
(bad)
ds
mov
sub
repz
cmp
adc
in
add
cmp
fild
jecxz
mov
push
push
xchg
shl
scas
popf
sbb
inc
(bad)
aaa
mov
out
leave
dec
xchg
adc
mov
pop
imul
arpl
mov
and
cmp
not
inc
hlt
and
mov
in
sbb
call
or
mov
mov
sbb
ins
sbb
push
retf
adc
call
mul
inc
add
ins
mov
test
out
mov
sub
dec
call
(bad)
jge
xchg
cmp
call
sbb
aad
push
or
(bad)
jl
loope
gs
dec
dec
jge
or
mov
cmps
inc
mov
rcr
add
and
sbb
iret
lea
xchg
bound
and
test
mov
dec
mov
sahf
rcr
in
ja
inc
jl
push
rcl
call
or
sub
dec
push
scas
loopne
mov
jnp
add
inc
test
mov
fs
mov
mov
mov
mov
push
fcom
movs
test
shr
push
xor
xor
mov
mov
arpl
pop
repnz
ret
(bad)
or
dec
stos
cmc
push
mov
daa
fcomp
xlat
loopne
xchg
aad
sbb
mov
cmp
dec
push
xor
cwde
jmp
mov
(bad)
dec
add
mov
loopne
out
mov
iret
sub
outs
xor
or
sub
ficomp
sbb
cmp
js
shl
js
dec
pop
or
sbb
pop
mov
mov
icebp
cli
fst
and
lds
pop
arpl
call
mov
les
cmp
and
bound
inc
sar
std
xchg
inc
dec
inc
icebp
xor
fwait
sub
push
add
pop
and
adc
fdivrp
pop
xor
clc
(bad)
jcxz
sub
stos
cmp
cmp
mov
xlat
and
fwait
(bad)
jmp
mov
add
jge
dec
sbb
test
add
stos
xchg
(bad)
ficom
xor
mov
pop
push
lods
mov
mov
push
mov
inc
mov
xchg
(bad)
sbb
or
mov
scas
jmp
cmp
push
push
mov
(bad)
sti
aaa
jnp
lds
cwde
outs
ss
lahf
stos
dec
movd
cmp
xchg
(bad)
push
xchg
dec
(bad)
pop
push
std
nop
(bad)
push
dec
pop
push
loopne
pusha
je
inc
and
inc
dec
sub
and
mov
add
hlt
movs
sub
stos
inc
fdivr
push
sbb
inc
fcom
push
movs
xor
and
imul
ja
inc
pop
out
mov
cmp
fld
outs
or
push
pop
and
imul
and
not
rcl
dec
mov
dec
sub
xor
loope
add
call
cmp
mov
xchg
jb
pop
inc
sar
adc
int3
dec
psllq
(bad)
sub
dec
inc
xor
jge
jne
pop
ret
out
int3
pushf
loopne
test
fist
hlt
(bad)
icebp
push
cmp
fdiv
pop
mov
xchg
sbb
adc
xor
out
xchg
not
push
loopne
jo
fild
sub
cdq
ins
dec
jmp
mov
mov
fcom
push
(bad)
test
jns
ins
sahf
int
push
lds
dec
call
cmp
cmp
stc
(bad)
out
shl
mov
xchg
gs
test
cwde
xchg
mov
push
add
xchg
arpl
in
xchg
inc
dec
pop
xchg
add
lock
sub
push
arpl
sub
(bad)
push
mov
mov
fbld
ins
xchg
out
scas
xor
repz
dec
dec
fnstenv
or
jo
popa
xchg
stos
mov
into
loop
xchg
and
inc
adc
pusha
icebp
aaa
mov
in
add
shl
in
fs
ins
mov
dec
sub
cmc
xor
xlat
jecxz
xchg
and
int3
(bad)
leave
dec
retf
adc
ins
xchg
add
lods
mov
add
pop
sbb
pop
xchg
mov
xchg
xor
lods
out
jae
imul
and
dec
cmp
xor
scas
repnz
sbb
loopne
inc
cld
mov
dec
pushf
stc
loopne
ret
sbb
cld
lods
rcr
mov
fnstsw
sbb
stos
adc
mov
pop
fistp
dec
nop
xor
int3
mov
pop
or
test
cmp
mul
pop
imul
add
(bad)
xor
iret
jle
sbb
outs
sub
nop
cmp
lods
pop
push
or
(bad)
mov
mov
mov
push
mov
inc
out
les
mov
lahf
dec
fwait
test
rcl
fisttp
mov
inc
test
repnz
adc
push
cdq
gs
mov
fwait
lods
sbb
(bad)
xchg
pop
cmp
adc
cs
pop
mov
sub
push
xlat
sbb
cdq
push
xor
mov
adc
pop
mov
push
dec
push
dec
popf
fsub
push
mov
jo
cmp
bound
jbe
fwait
and
pop
cmp
(bad)
stos
dec
pop
push
adc
mov
std
xor
mov
mov
jp
xor
arpl
or
mov
sbb
(bad)
sub
cmp
or
out
(bad)
inc
pop
adc
aad
and
or
and
push
adc
call
das
mov
sti
fs
mov
jmp
mov
mov
push
xor
xor
sub
loopne
repz
imul
mov
sahf
push
ret
aaa
into
(bad)
clc
imul
jmp
ja
push
out
cld
mov
xlat
pop
add
stc
mov
mov
or
das
push
and
add
xlat
aad
jae
xor
jns
cmp
sub
mov
js
mov
push
daa
daa
pop
clc
(bad)
out
mov
addr16
and
push
mov
clc
cdq
pop
pop
push
lds
inc
ror
fisubr
or
sub
lock
push
rol
or
dec
mov
xchg
mov
or
cmps
stos
pusha
loope
mov
cdq
outs
mov
ds
cli
jne
inc
(bad)
adc
push
inc
mov
sar
push
test
data16
mov
fnstenv
jmp
jo
pop
dec
stos
lods
jmp
rcl
daa
rol
and
shl
push
loop
push
dec
sbb
movs
shl
and
pop
push
mov
inc
mov
lds
jne
push
mov
das
jp
nop
cmp
inc
lods
ins
test
mov
xchg
xchg
dec
dec
sub
pushf
inc
sbb
ins
iret
test
dec
push
outs
shr
cld
cmp
popa
or
test
add
cmp
arpl
scas
jnp
cmps
aam
add
int3
loop
fld
mov
daa
into
out
mov
mov
neg
pop
xor
dec
lea
in
add
jp
cmp
cdq
out
mov
mov
fdiv
push
(bad)
dec
data16
popa
div
mov
push
out
mov
ds
sub
or
cwde
aam
pop
mov
push
jecxz
gs
and
add
call
repz
inc
shl
sbb
inc
xchg
(bad)
pop
mov
mov
ror
pusha
jp
cli
mov
mov
adc
add
mov
fwait
xchg
or
enter
and
cmp
out
popa
pop
dec
mov
push
int3
shl
mov
dec
cmp
pop
xchg
mov
movlps
adc
mov
call
xchg
out
pop
xchg
push
cld
mov
loopne
xchg
rcl
ins
mov
(bad)
mov
push
xor
adc
dec
ds
add
outs
jae
mov
test
push
mul
leave
int
push
cmp
dec
out
mov
(bad)
mov
sbb
(bad)
xchg
lods
pop
ret
push
test
fcom
inc
xlat
cmc
aaa
jno
outs
push
pop
ins
std
or
sub
ins
pop
inc
xor
sub
out
push
mov
add
add
jbe
push
push
in
pushf
and
xchg
jne
mov
pop
ins
mov
mov
test
(bad)
pushf
pushf
pop
clc
xchg
mov
and
jbe
xor
into
fcom
cmp
not
or
jecxz
mov
push
jbe
mov
clc
dec
cdq
aam
fs
push
xchg
call
pop
pop
jg
xlat
xlat
cld
push
int3
test
cwde
lods
mov
jo
je
int3
test
fwait
jle
push
out
sbb
xchg
xchg
test
mov
adc
ins
push
addr16
dec
mov
sar
jns
xchg
jmp
out
dec
add
pop
test
jmp
cmp
jle
fld
fist
push
cmp
and
inc
add
nop
ds
pushf
pushf
out
and
popf
mov
xchg
mov
outs
icebp
mov
es
(bad)
fwait
push
pop
push
sub
popf
sub
xor
pop
pop
sub
inc
cmp
cmps
cmp
or
inc
aam
ins
jno
jmp
push
dec
not
sbb
xchg
call
sbb
fadd
push
pop
ficom
mul
dec
das
in
out
jle
mov
cld
pop
iret
cmp
fsubrp
add
xchg
lock
aas
daa
xor
mov
pop
jne
inc
push
mov
jae
sub
cld
dec
push
pop
cli
pop
arpl
sub
pop
xor
leave
jb
iret
push
data16
ds
mov
rol
sub
add
cmc
mov
dec
(bad)
rcl
mov
dec
cmc
adc
xchg
adc
fadd
retf
jo
(bad)
sbb
jo
iret
lods
inc
jo
and
lods
daa
cmp
sub
stc
in
push
sbb
(bad)
in
lods
mov
push
dec
stos
mov
pusha
test
xchg
int
popf
pop
mov
push
cwde
xor
pop
(bad)
pop
jg
mov
xor
adc
adc
sbb
fsub
sub
mov
sbb
pop
cmc
mov
lea
jl
cmp
fcmovu
sub
xchg
(bad)
out
std
loop
lahf
out
dec
in
jo
ret
fcmovnu
jnp
mov
in
xlat
xchg
inc
xlat
fstp
scas
outs
sub
cmp
cld
call
sbb
and
(bad)
push
(bad)
popa
dec
retf
(bad)
mov
lock
mov
add
aam
les
pop
inc
cmp
int3
xchg
jnp
jp
and
stc
mov
push
pop
xor
repnz
dec
mov
fs
movs
lahf
mov
push
not
cld
fsubr
pusha
cmp
mov
ja
pop
sub
loopne
push
mov
jmp
loop
(bad)
cmp
movs
nop
(bad)
mov
cmp
push
les
mov
ds
mov
mov
ja
movs
(bad)
(bad)
call
mov
loopne
pop
stos
in
push
out
inc
std
imul
dec
shl
loop
xor
hlt
sub
and
dec
jnp
sub
fsubr
jno
inc
in
fcomp
std
xchg
dec
pop
mov
and
add
cmc
mov
xchg
push
mov
xor
mov
sub
mov
in
enter
(bad)
dec
xor
mov
xchg
and
push
enter
push
dec
add
jl
test
lods
jno
into
dec
mov
cmp
pushf
das
mov
cmp
push
(bad)
dec
xchg
sbb
out
pop
sub
ds
mov
mov
imul
movs
adc
jne
(bad)
inc
retf
je
push
cmp
push
inc
or
lods
pop
pop
in
pop
scas
cmp
test
cs
pop
push
xchg
cmp
inc
iret
test
jmp
xchg
mov
push
loop
fld1
sub
imul
push
retf
lods
push
pop
dec
pop
ret
add
xor
(bad)
fistp
scas
sub
rcl
xor
mov
push
cmp
jge
mov
cwde
cdq
int3
ds
or
dec
mov
int
or
jl
pop
test
imul
test
adc
fiadd
mov
aam
push
outs
xchg
rcr
out
cmp
test
mov
sbb
and
jg
loop
(bad)
stc
aaa
arpl
push
(bad)
hlt
and
xchg
call
imul
cmp
dec
xchg
mov
cli
sub
sbb
int3
bound
xchg
retf
sub
or
cmp
dec
jmp
and
ficomp
push
jnp
inc
(bad)
pop
dec
xor
and
ror
loope
clc
inc
stos
arpl
js
jge
or
inc
ffreep
aam
inc
xor
clc
lock
and
nop
cmp
dec
scas
push
jmp
adc
push
cmp
shl
push
adc
jb
jge
rcr
imul
pushf
dec
aas
neg
mov
inc
push
xchg
jge
shr
fild
xor
std
adc
pop
or
jmp
(bad)
jmp
xor
pushf
mov
and
sti
call
sub
or
lods
out
cwde
ins
push
sub
fiadd
xchg
cmp
bound
mov
test
or
push
xor
add
mov
inc
mov
in
xor
nop
rcr
fs
pop
bound
loop
nop
in
mov
test
loope
push
or
dec
sbb
push
in
pop
shl
xchg
imul
mov
adc
inc
fnstcw
imul
fnstsw
cmp
shr
mov
icebp
add
pop
not
loopne
add
mov
xchg
into
ficomp
test
mov
xchg
push
adc
sub
sub
out
pop
jle
jnp
add
aaa
xchg
out
loope
adc
xchg
lods
push
mov
sbb
cmp
iret
inc
mov
int3
and
adc
pop
sbb
inc
repz
adc
mov
add
mov
mov
add
cmp
daa
fnsave
and
pop
jge
mov
clc
dec
cs
xor
dec
stc
or
fiadd
call
pop
mov
cwde
(bad)
rcl
in
ins
mov
cli
fcom
repz
rcl
(bad)
pop
lock
add
sub
aam
(bad)
aad
cmp
fnstcw
lea
and
xchg
mov
cmp
and
pop
pop
fidiv
xor
mov
adc
xchg
fimul
pop
mov
adc
mov
xchg
inc
pop
sub
cwde
dec
sti
mov
jmp
dec
in
push
pop
jnp
rcl
fidivr
jmp
arpl
sbb
or
cwde
pop
fstp
dec
jmp
mov
sub
(bad)
aaa
sahf
mov
loopne
dec
mov
dec
push
lods
xchg
and
popf
mov
call
push
(bad)
int
dec
(bad)
mov
cdq
in
sar
cmp
hlt
add
cwde
pushf
loope
ror
je
imul
mov
sbb
out
push
cdq
dec
call
aam
sbb
dec
out
(bad)
pop
clc
pop
(bad)
push
or
arpl
addr16
cld
inc
fild
jae
jg
sbb
dec
push
les
cmp
jbe
sbb
xlat
push
jmp
stos
mov
pop
rcl
xor
js
ficomp
mov
(bad)
push
push
pop
push
ficom
sub
ins
inc
and
ja
pop
push
not
jno
inc
push
mov
cwde
ror
rol
cwde
mov
mov
xchg
ret
push
inc
sub
gs
jmp
pop
mov
out
mov
shl
daa
adc
jo
in
icebp
inc
push
pop
cld
repnz
adc
mov
pop
pop
ds
and
stos
jmp
cmp
fst
shr
pop
ja
imul
cmp
mov
iret
lods
data16
push
aas
pop
call
adc
push
or
in
sbb
pop
push
in
(bad)
xlat
sbb
(bad)
outs
(bad)
repz
neg
and
bound
xor
add
fcomp
retf
ja
pop
and
inc
test
test
lea
inc
adc
(bad)
loopne
xchg
fwait
cdq
xor
cmp
ret
xchg
pop
daa
(bad)
(bad)
repnz
dec
test
sub
mov
dec
sbb
add
nop
(bad)
in
jbe
arpl
and
adc
sbb
movd
cwde
mov
leave
dec
sbb
add
pop
mov
mov
and
cmps
(bad)
inc
stos
xchg
adc
cmp
pop
cld
fcomp
fmul
mov
fbstp
push
rcr
lods
mov
ror
sti
das
shr
add
xlat
idiv
daa
call
bound
cmp
les
dec
aad
lods
fs
(bad)
jmp
sub
mov
pushf
fwait
sbb
add
dec
jmp
mov
mov
cmp
pop
jp
push
mov
xor
sub
sbb
in
fs
and
lea
fs
push
jmp
sub
leave
xchg
addr16
stos
fdivr
push
test
pop
push
jbe
sub
push
sahf
dec
sub
div
gs
das
add
lea
ins
mov
push
pop
sub
(bad)
ds
je
imul
xor
cmp
mov
xor
or
xchg
pop
cmps
sub
cmovle
cmc
scas
xchg
sar
out
rcl
or
(bad)
aaa
pop
popf
xchg
inc
push
ja
adc
jno
bound
jl
sbb
call
int
sbb
ret
aaa
sub
jae
push
cmp
xor
bound
hlt
outs
jg
inc
cmp
cdq
and
mov
xchg
cmc
or
lods
mov
pop
ret
stos
sbb
pop
sbb
mov
gs
arpl
jmp
pop
jge
add
or
sti
ud0
movs
pop
or
movs
add
jge
dec
mov
xchg
outs
jle
inc
loop
pop
(bad)
xchg
div
aam
xchg
pop
inc
ja
xchg
test
push
sub
int
cmp
movs
mov
push
pop
out
(bad)
push
push
pop
fiadd
in
push
int3
pop
jp
stc
retf
idiv
add
cmp
adc
(bad)
(bad)
add
dec
sbb
sub
cmp
lahf
in
hlt
fsubr
push
nop
loope
fnstsw
arpl
int3
(bad)
int3
fbstp
mov
out
daa
xchg
cmp
in
fsub
enter
pop
gs
pop
mov
and
dec
mov
cwde
lea
ret
add
stc
push
cmp
xchg
pop
mov
dec
pop
imul
loopne
xchg
and
sub
mov
xor
pop
jg
mov
jp
push
(bad)
fst
aaa
mov
call
cmp
mov
aas
xor
cmp
or
inc
test
enter
dec
fisubr
pop
fimul
ror
int
mov
lea
push
pop
mov
int
test
sti
jl
xor
ficomp
pop
inc
ja
pop
leave
inc
push
into
push
(bad)
not
adc
mov
sub
xor
in
jl
xor
sbb
mov
jno
rcl
in
(bad)
cmp
mov
loope
iret
rcl
out
inc
out
std
test
pop
fwait
mov
push
mov
scas
(bad)
mov
out
test
xchg
rol
jmp
cld
sub
or
inc
movs
xor
ss
add
fiadd
arpl
adc
push
icebp
in
sub
ja
fdiv
stc
(bad)
xor
loopne
std
sub
mov
pop
mov
(bad)
(bad)
ja
fisub
and
dec
and
int3
push
in
iret
xor
iret
xchg
xor
test
xchg
lea
push
aam
jge
xchg
lods
push
push
dec
mov
push
cwde
pop
aaa
dec
pop
push
ins
adc
mov
in
addr16
into
pop
in
sub
inc
hlt
sar
icebp
lods
mov
(bad)
aad
add
add
addr16
jmp
mov
jmp
enter
loope
dec
sbb
lods
add
cmp
dec
push
dec
mov
cs
inc
arpl
jb
out
adc
in
cmp
jge
pop
lea
add
stos
dec
xor
cmc
dec
xchg
ds
xchg
mov
dec
or
jp
rcl
(bad)
ja
push
jl
mov
jae
mov
and
cs
pop
push
mov
push
dec
and
jmp
out
fild
sbb
mov
enter
stos
xor
(bad)
lock
lea
addr16
cwde
xchg
cmp
jae
inc
dec
push
sti
loop
test
mov
shr
(bad)
int
pop
not
les
out
cdq
sbb
push
dec
mov
(bad)
ss
clc
lods
mov
mov
cmps
enter
(bad)
stos
xchg
imul
sub
pop
lock
daa
jg
sub
sbb
or
daa
push
mov
push
mov
xor
in
pop
pop
loopne
leave
cld
fwait
js
loop
push
mov
add
in
mov
jl
mov
mov
push
aad
lahf
stos
xchg
in
out
aam
sub
inc
mov
cmp
inc
cmps
(bad)
mov
jb
hlt
arpl
and
test
and
mov
mov
pop
out
fistp
add
or
aad
dec
jp
aad
add
pop
test
sbb
push
dec
dec
push
jecxz
and
cwde
ret
std
xchg
inc
adc
call
add
sar
and
call
jecxz
dec
dec
sub
ss
fst
inc
and
xor
lods
loopne
xchg
idiv
aam
lods
test
or
jmp
shl
jmp
loopne
adc
push
mov
cwde
inc
add
popf
sbb
mov
sbb
dec
sbb
sub
mov
jp
push
pop
imul
xor
add
add
inc
nop
loop
xor
push
movs
das
sbb
clc
cmp
je
mov
pop
addr16
xor
addr16
mov
push
out
sbb
idiv
adc
test
mov
mov
mov
(bad)
mov
adc
sbb
arpl
and
not
mov
fwait
fs
cmc
mov
mov
jmp
pushf
fidivr
mov
stos
mov
jl
xor
jmp
dec
in
or
or
xchg
test
pop
lods
daa
shr
ret
iret
imul
sbb
test
adc
addr16
lods
jbe
repz
sbb
mov
mov
adc
cmp
lods
lea
(bad)
xor
rcl
sub
ins
cmp
movs
adc
and
sub
into
js
xor
dec
cmp
fdivrp
adc
rcr
out
jmp
xchg
scas
sbb
repz
pop
cmpxchg
cmp
sub
in
stos
hlt
jp
cld
xchg
fcmovne
cwde
or
or
addr16
enter
sub
(bad)
es
inc
ret
and
stos
aam
push
lods
jmp
jp
jmp
(bad)
std
fimul
(bad)
add
sbb
retf
stos
fst
adc
and
cmp
pop
adc
or
sbb
and
clc
popf
mov
cmp
push
sbb
jmp
sub
dec
pop
pop
aaa
out
mov
in
jl
inc
jmp
hlt
xchg
popf
sbb
add
cmps
cs
imul
add
xor
(bad)
mov
xlat
shl
cmp
xor
(bad)
sbb
inc
std
rcl
pop
mov
lea
push
repz
push
xchg
xor
mov
push
jo
pusha
xchg
fwait
dec
ret
xlat
jae
test
in
mov
or
fwait
jo
test
mov
sbb
out
outs
adc
dec
aas
in
mov
inc
mov
ins
xor
fnstenv
pop
call
daa
add
out
pop
shl
dec
ins
jecxz
aad
stc
pop
ficom
mov
pop
test
sbb
mov
dec
aam
mov
dec
or
push
fdiv
scas
jno
test
add
inc
mov
pop
pop
daa
mov
push
mov
ins
mov
add
fwait
jmp
pop
out
in
(bad)
sahf
dec
pop
mov
dec
ins
mov
inc
int3
push
mov
jecxz
sub
ret
xchg
lods
ja
sub
xchg
fsub
and
lock
jl
movs
mov
jno
adc
rcr
sub
adc
inc
and
popf
icebp
cmc
push
pop
popf
or
fucomip
sub
xchg
call
iret
int
js
sti
sahf
sbb
fnsave
scas
and
pop
sub
(bad)
mov
push
loop
les
push
jmp
outs
push
cli
jge
mov
rcr
data16
pop
mov
scas
cs
ins
and
sti
push
and
hlt
sbb
int3
jecxz
imul
push
sub
test
and
dec
out
jl
dec
mov
cmp
retf
in
iret
dec
push
push
inc
ret
repz
push
hlt
xchg
je
rcr
pop
and
sti
pop
adc
pop
and
sbb
sbb
xchg
xchg
mov
push
lea
mov
pop
fistp
div
int3
xchg
pushf
mov
jp
leave
aam
imul
not
xchg
sbb
mov
sbb
inc
jo
push
hlt
icebp
sbb
mov
je
rcl
inc
(bad)
pop
cmp
cs
sti
adc
dec
xchg
aad
shl
push
inc
fist
add
mov
jbe
int
mov
gs
cmp
nop
retf
jge
ror
sbb
jno
mov
pop
sub
pop
push
out
ss
push
(bad)
cdq
mov
add
cmp
int3
rcl
add
sub
gs
ins
ror
loope
pop
fcom
shr
push
push
add
push
and
xor
leave
fisttp
sar
popa
(bad)
(bad)
loopne
xor
(bad)
push
(bad)
mov
shl
aad
push
pop
jo
shl
out
js
or
shl
mov
int3
sbb
push
imul
dec
push
leave
frstor
xor
retf
sub
and
xchg
stc
outs
xchg
mov
(bad)
(bad)
daa
inc
gs
scas
push
mov
dec
mov
xchg
repz
pop
dec
repnz
sar
ins
icebp
sub
dec
xchg
xlat
xchg
(bad)
ins
fimul
jo
push
jmp
idiv
(bad)
jnp
jb
idiv
sub
icebp
out
shl
fst
out
jle
aas
xchg
rcl
imul
fidiv
mov
cld
les
repnz
idiv
mov
jl
push
dec
mov
sar
int3
jg
lds
sub
mov
and
inc
pop
cdq
xor
shl
out
xor
aam
mov
cmps
sub
ins
or
and
(bad)
pop
jmp
mov
sub
movs
out
loope
adc
jmp
jbe
xor
jecxz
dec
mov
and
shr
popf
cwde
(bad)
dec
movs
pop
dec
pop
push
cli
pushf
push
or
mov
stos
sub
icebp
mov
xchg
inc
int3
adc
pop
mov
mov
mov
mov
std
fidiv
lods
adc
(bad)
jmp
and
loop
pop
xchg
loop
out
push
sbb
mov
sbb
dec
dec
mov
sahf
sub
(bad)
pop
(bad)
out
aam
dec
xchg
jg
cmps
xor
dec
sbb
add
xchg
mov
into
jp
(bad)
je
inc
push
mov
sub
or
hlt
popa
scas
jnp
mov
ror
out
xchg
mov
inc
add
add
sbb
outs
(bad)
push
adc
repnz
jb
dec
and
nop
xor
cld
pop
xchg
call
enter
fs
call
and
in
sub
movs
fdivr
or
sbb
jnp
cdq
xlat
xor
pop
call
mov
out
jno
call
pop
pushf
add
mov
mov
mov
int
xor
repnz
add
push
mov
cdq
xchg
xchg
add
call
cmp
cmp
cs
mov
mov
ror
rol
adc
dec
rcl
in
push
sub
and
lea
stos
mov
(bad)
sub
mov
imul
not
arpl
adc
xor
inc
dec
adc
push
fwait
pop
scas
fcmovnu
test
ins
fnstcw
fmul
cmp
adc
pop
pop
xor
add
not
popa
mov
push
fnstsw
ds
and
bound
xchg
int
js
(bad)
fyl2xp1
dec
fdiv
(bad)
mov
xchg
xchg
mov
call
mov
les
mov
cmp
mov
add
dec
jmp
push
jbe
stos
push
mov
aam
addr16
xor
out
inc
sahf
popf
out
ins
push
stos
outs
cmp
(bad)
dec
inc
ss
push
mov
or
fcomp
adc
mov
ret
sub
into
adc
mov
sub
add
push
in
pop
rol
je
dec
es
xchg
xchg
iret
lods
cmp
addr16
xlat
sub
mov
xchg
sahf
mov
mov
in
inc
jns
in
push
inc
in
dec
adc
stos
and
sub
mov
add
int3
cwde
jge
inc
aas
pushf
push
jmp
or
push
test
xor
xor
mov
mov
mov
mov
push
dec
mov
pop
(bad)
out
cmp
pushf
xchg
sub
ins
loope
push
dec
push
push
retf
popf
fwait
jmp
pop
xchg
xchg
cwde
sar
or
mov
adc
jnp
ret
rcr
aad
ret
inc
dec
fwait
jmp
das
add
xor
pop
dec
mov
daa
aaa
mov
mov
cld
mov
popa
ss
pop
or
jmp
dec
and
xlat
enter
sbb
push
dec
stos
int3
push
js
sti
mov
leave
cdq
dec
inc
jne
dec
adc
fimul
cmp
dec
outs
push
mov
pusha
jmp
or
inc
pop
mov
arpl
push
aas
add
call
adc
push
out
jb
sub
pop
mov
shr
pop
jnp
nop
sbb
pop
xchg
pop
and
jb
(bad)
jmp
push
push
daa
lods
jo
mov
xchg
pop
or
mov
and
outs
(bad)
fsubr
and
mov
xchg
clc
push
sbb
and
addr16
add
dec
mov
mov
std
cmp
pop
iret
out
cdq
adc
int
jo
cmps
dec
mov
jge
sahf
mov
daa
xor
gs
leave
dec
push
das
adc
mov
addr16
int3
add
bound
(bad)
add
sub
popa
pop
and
jge
xor
inc
nop
call
sub
jmp
jmp
jge
icebp
dec
pop
popf
mov
jbe
push
dec
or
adc
(bad)
mov
dec
out
xchg
cmp
mov
arpl
xchg
cwde
movs
add
call
xor
jo
repz
(bad)
enter
test
sahf
mov
daa
mov
mov
fcom
sbb
cmps
xor
int
out
inc
pop
jp
sti
popa
xchg
adc
cmps
dec
(bad)
out
push
popf
xchg
add
jmp
in
xchg
sbb
in
inc
xchg
xchg
popa
or
cld
pop
add
push
retf
sub
pop
push
mov
setnp
aaa
xlat
jmp
in
sub
stc
push
fwait
test
pop
hlt
iret
push
xor
fld
or
or
dec
dec
adc
int
enter
sub
or
outs
stos
std
sti
aam
sub
into
jmp
cmp
imul
push
mov
add
loope
and
sub
or
into
int3
fcmove
div
mov
faddp
jmp
iret
and
push
or
scas
(bad)
mov
stos
push
xchg
or
loope
enter
iret
enter
pop
cmp
push
bound
xlat
pop
xchg
hlt
xor
jl
fadd
adc
or
imul
pop
ret
sbb
daa
jmp
cmp
rol
(bad)
int3
enter
mov
scas
mov
outs
mov
cmp
pop
test
(bad)
lods
retf
hlt
push
pop
pusha
push
loop
inc
xlat
movs
add
into
imul
xchg
inc
cmc
in
fstp
mov
mov
fisttp
imul
cmp
cmc
mov
lock
adc
dec
cmp
je
add
loop
adc
push
icebp
enter
add
cmp
int3
outs
pop
imul
dec
xor
test
hlt
cmp
lahf
gs
sahf
ret
call
jne
into
jg
inc
mov
pop
(bad)
test
dec
push
sub
shl
dec
adc
mov
add
lea
or
lock
pop
ja
xor
dec
inc
fcmovb
push
jge
xchg
in
in
push
(bad)
push
out
(bad)
out
retf
je
lahf
neg
mov
mov
inc
adc
dec
dec
dec
call
mov
dec
imul
jb
adc
in
cdq
or
loop
shl
cli
sbb
push
int
sbb
repnz
adc
or
iret
rol
jae
jae
mov
fisttp
shr
push
pop
pop
in
pop
xchg
ins
push
jbe
mov
cld
icebp
loop
mov
push
mov
nop
sbb
repz
dec
fwait
mov
lahf
gs
shl
das
cdq
int3
push
xor
pop
mov
loop
mov
std
push
inc
xchg
xchg
jnp
ds
cs
pop
movzx
sub
gs
lea
ja
out
frstor
(bad)
xchg
and
ret
ins
dec
inc
mov
ja
scas
movs
pop
cmp
lods
jmp
sub
mov
jbe
add
inc
in
call
dec
and
xchg
mov
daa
and
push
(bad)
cwde
lds
jno
dec
(bad)
lds
in
ret
inc
ja
or
adc
push
mov
push
mov
loopne
adc
sbb
mov
in
shl
stos
dec
mov
mov
or
rol
xor
adc
jge
xor
aad
mov
(bad)
fcmovnbe
mov
mov
sar
push
dec
dec
stos
mov
mov
jb
aam
add
js
stc
je
(bad)
xor
adc
inc
cmc
sti
dec
rol
call
cmp
dec
out
clc
dec
int
int3
les
stc
(bad)
xor
cmp
fincstp
fist
pop
enter
jmp
loop
dec
test
pop
mov
loopne
push
jge
add
in
pushf
inc
test
shl
mov
out
adc
mov
in
fidivr
or
xor
test
(bad)
jp
cmps
cs
and
xor
jnp
icebp
ja
shl
clc
push
clc
xchg
dec
push
mov
xchg
add
cdq
jecxz
push
mov
sbb
jecxz
sbb
cmps
mov
sub
cmp
lea
fst
pop
jl
mov
and
dec
pop
imul
leave
popf
xchg
cld
out
movs
cmps
mov
int
cmc
ror
inc
daa
mov
xor
lahf
mov
mov
test
dec
add
outs
and
adc
cmps
inc
int3
dec
sbb
(bad)
xor
cvttps2pi
cmp
mov
xor
sub
mov
ret
nop
push
cmp
xlat
push
cdq
mov
adc
stos
jnp
mov
push
pop
in
and
push
cmp
jne
test
sar
inc
scas
mov
inc
dec
sub
pop
dec
scas
ror
jae
jno
call
ficomp
adc
sbb
adc
fldenv
dec
cmp
(bad)
int3
scas
mov
data16
cmps
(bad)
push
sbb
push
xchg
(bad)
jmp
add
popa
imul
in
push
xlat
pop
pop
loope
push
dec
js
push
inc
dec
pop
dec
sub
and
lea
cmp
mov
lods
sub
fldcw
(bad)
les
jnp
fisubr
dec
cmp
aam
pop
inc
sub
or
cmp
jno
mov
popa
sbb
clc
(bad)
loop
xor
fcomp
or
xchg
cmp
lods
add
jl
repz
mov
(bad)
mov
call
inc
(bad)
fistp
push
retf
dec
out
sub
lods
push
in
mov
add
not
clc
mov
mov
xchg
stos
aam
push
mov
xor
sar
or
sub
xor
mov
and
cmp
sbb
cmp
sub
dec
mov
add
fimul
fwait
sbb
clc
(bad)
pop
loop
add
or
ror
and
cmc
ficom
mov
outs
retf
mov
not
dec
sub
retf
xchg
movs
jno
dec
cmp
push
or
pop
dec
xchg
enter
pop
and
mov
popa
dec
mul
jle
push
imul
pop
xchg
scas
mov
lock
jnp
sar
fsubr
or
in
push
xchg
mov
sub
jne
push
in
dec
cmp
pop
(bad)
out
repz
push
int3
push
push
jp
mov
or
fisubr
mov
daa
mov
mov
fsub
mov
aam
and
mov
push
(bad)
mov
lods
leave
int3
jb
imul
pushf
dec
sub
xor
jnp
int3
sub
and
mov
dec
in
pop
imul
mov
js
and
mov
inc
cmp
cmp
mov
fldlg2
loope
push
int3
dec
test
call
out
sub
cmp
lea
addr16
rcr
xchg
(bad)
or
fidiv
enter
stc
pop
into
out
dec
scas
xchg
aad
add
inc
xor
fimul
cmc
jl
cmp
cs
jmp
inc
pushf
jg
cmp
inc
inc
mov
test
cmp
ja
dec
leave
mov
hlt
int
(bad)
sti
jnp
sbb
xlat
sub
xchg
mov
inc
in
or
jmp
fsubr
pop
lock
and
jge
dec
xor
mov
xor
dec
out
dec
xor
aad
pop
mov
and
adc
and
pop
mov
ja
shl
xor
inc
ret
push
dec
ss
sbb
sahf
out
cli
push
mov
or
push
or
shl
jnp
sub
mov
inc
jg
mov
inc
stos
sub
jle
pop
xchg
test
push
clc
pop
xchg
mov
(bad)
jmp
cmp
mov
push
or
test
inc
push
mov
ror
ds
jmp
loop
adc
jno
pop
sbb
xlat
push
ja
jmp
sbb
jne
cmps
add
(bad)
push
addr16
xor
mov
mov
sub
xchg
mov
ror
es
ret
icebp
xchg
stos
add
add
dec
adc
sbb
hlt
push
loope
cmp
lea
xor
jmp
fidiv
push
jl
das
rol
jecxz
and
mov
pushf
push
lahf
jnp
push
adc
in
(bad)
sub
adc
mov
test
sar
lods
add
(bad)
cmp
mov
ds
fsubp
mov
adc
add
push
and
hlt
sbb
cwde
fbld
ins
inc
shl
(bad)
add
(bad)
sti
sbb
inc
sub
inc
mov
cmp
xchg
int3
inc
mov
fsubr
mov
sub
sbb
jle
jp
push
sub
inc
pop
and
inc
mov
jl
(bad)
(bad)
cmp
sub
fimul
out
sub
xor
xchg
pop
stos
xchg
setno
add
clc
dec
dec
xor
cmp
lahf
(bad)
cmps
add
push
rcl
arpl
adc
loopne
pop
dec
test
loopne
retf
adc
sbb
imul
xchg
pop
pushf
int3
cmp
inc
adc
mov
(bad)
xchg
add
cmps
xor
xlat
pop
mov
mov
stos
dec
sahf
xchg
push
jb
clc
sbb
sub
pop
fmulp
or
scas
dec
div
jns
fiadd
(bad)
(bad)
pop
mov
js
or
ret
(bad)
xor
mov
sbb
push
pop
add
lods
add
fdivr
xchg
xchg
dec
xchg
(bad)
sbb
ucomiss
pop
mov
push
fst
out
loopne
fstp
xchg
iret
(bad)
pop
lods
and
jno
pop
and
or
int
add
sub
jle
cmp
das
sub
ds
dec
ficomp
fdivr
test
adc
(bad)
not
mov
(bad)
lds
aad
mov
cld
jno
dec
(bad)
lea
sahf
mov
adc
sbb
pushf
mov
fdivr
pop
(bad)
dec
loopne
and
fwait
jae
sti
popf
lea
iret
das
cmps
loope
loopne
add
add
shl
pop
lds
in
out
add
xlat
ins
mov
adc
(bad)
and
mov
jnp
in
push
inc
shl
sbb
loopne
rcr
imul
bsf
and
cwde
aaa
pop
ffreep
pop
adc
inc
repz
pop
pop
movs
aam
xchg
(bad)
push
pop
mov
out
hlt
in
clc
mov
mov
jnp
jecxz
popf
jmp
sbb
ror
dec
pop
lahf
sub
pop
adc
aam
xchg
inc
rcl
pop
jp
fadd
or
(bad)
jbe
xor
pop
push
outs
sti
push
sub
ret
scas
les
cmove
jg
and
push
jo
ret
lods
jl
push
dec
pushf
xchg
add
fs
lahf
icebp
movs
cmp
and
xlat
pop
out
in
dec
shl
cmc
rcr
and
lahf
inc
push
jo
mov
nop
icebp
lods
mov
gs
fstp
mov
lods
stos
call
pop
jbe
sti
clc
jge
adc
push
scas
stos
cmps
push
(bad)
and
jp
sti
and
cwde
fscale
sbb
ficom
rcl
cmp
cmp
hlt
arpl
inc
(bad)
(bad)
inc
pop
cmp
test
dec
or
pop
movs
nop
test
pop
xchg
cmp
imul
(bad)
cld
cmp
(bad)
mov
dec
out
jnp
fisub
jl
fimul
psrad
push
push
and
adc
rcr
cld
in
jns
(bad)
shl
sar
test
push
test
jmp
pop
add
pop
nop
jmp
mov
jns
icebp
cs
cs
das
push
jmp
ins
fbstp
pushf
adc
push
je
(bad)
mov
jbe
add
or
mov
push
mov
push
or
(bad)
jp
push
arpl
sub
cwde
icebp
jmp
or
push
jmp
push
std
jnp
or
fnsave
push
ficomp
mov
inc
sbb
pop
pop
fmul
dec
cmp
into
ficomp
imul
jne
jge
out
aad
stos
jo
int3
lods
xchg
in
test
in
gs
push
inc
(bad)
dec
mov
ins
sub
(bad)
dec
and
dec
mov
adc
jns
sbb
dec
add
adc
mov
mov
sahf
pop
cmc
dec
outs
repnz
xlat
cld
cdq
pushf
pop
icebp
push
into
jg
ret
and
loope
add
mov
ja
jmp
pop
scas
mov
dec
movs
loopne
jno
dec
push
shr
not
sti
out
imul
push
sbb
ins
cmps
cmp
inc
add
addr16
(bad)
adc
call
inc
mov
cmp
rol
mov
les
in
ret
jns
or
xor
push
test
leave
call
or
(bad)
sbb
pop
push
repnz
(bad)
out
sbb
xchg
and
or
mov
lea
pop
cs
dec
lahf
daa
cmc
mov
lods
test
inc
mov
push
dec
fstp
xor
xchg
xor
mov
mov
retf
lahf
repz
push
(bad)
ss
bswap
xchg
fwait
(bad)
push
mov
sub
loope
mov
aaa
fild
test
scas
push
fdivr
jl
push
shl
cmp
push
adc
das
mov
ja
lods
adc
in
pushf
push
pop
scas
fld
and
adc
add
mov
and
mov
leave
or
add
xor
push
pop
cwde
test
mov
retf
enter
and
adc
mov
jne
mov
jae
cli
(bad)
xchg
adc
cmp
in
dec
outs
push
mov
mov
(bad)
daa
cli
pop
xchg
or
push
dec
xor
(bad)
xor
jnp
push
movs
repz
jmp
enter
cwde
int3
pop
cmp
test
fld
div
loop
syscall
js
cdq
popa
(bad)
mov
jbe
sub
cld
push
shld
xchg
test
out
pushf
dec
dec
(bad)
fild
pushf
adc
xchg
retf
xchg
inc
mov
mov
outs
inc
push
js
pop
or
mov
mov
pop
adc
test
xchg
daa
mov
mov
inc
mov
call
cmp
mov
jg
pop
jge
out
and
mov
(bad)
pop
jno
ins
inc
push
jmp
inc
imul
pop
inc
push
dec
or
lods
fisub
sar
jl
mov
popa
cmc
dec
cli
sbb
push
xor
cmp
repnz
pop
ins
pop
lahf
out
call
out
fstp
sbb
out
mov
loope
gs
jmp
cmp
cwde
dec
pop
mov
sub
(bad)
call
add
sbb
jno
loope
les
xchg
pop
fwait
and
sbb
lahf
loope
inc
fcomp
add
into
push
mov
or
push
lods
and
jmp
aam
add
push
fild
lods
shr
xor
xchg
out
jno
(bad)
retf
sbb
sbb
add
adc
rol
std
inc
pop
push
sbb
rol
enter
rsqrtps
pop
retf
test
dec
repz
cs
inc
popa
mov
pop
adc
inc
jo
dec
xchg
pop
std
repnz
add
sub
(bad)
and
(bad)
mov
push
psubsw
adc
stos
rcl
pushf
not
cmp
inc
les
mov
xchg
mov
mov
ds
mov
xchg
inc
jae
sbb
jae
and
lock
jno
mov
push
sub
push
pop
push
lahf
xor
mov
pop
add
push
push
adc
push
adc
push
lock
adc
cmp
dec
pusha
lods
ds
mov
imul
push
cmp
loopne
mov
sahf
loopne
bound
hlt
mov
out
sub
push
stc
jl
in
dec
sti
clc
(bad)
(bad)
xchg
out
mov
daa
pusha
sub
imul
int3
ins
add
fiadd
out
std
(bad)
jecxz
stos
faddp
add
mov
aas
div
scas
push
les
pusha
loope
and
mov
loope
mov
pop
xchg
mov
mov
dec
iret
mov
jmp
stos
cmp
adc
pop
aas
mov
mov
dec
mov
pop
sub
jl
add
std
jmp
ss
lods
lock
(bad)
je
ret
push
out
or
pop
imul
idiv
fimul
inc
(bad)
jnp
sbb
jp
cmp
dec
dec
sti
retf
sahf
imul
ror
imul
xor
push
jb
push
mov
scas
gs
out
mov
pushf
pusha
test
pop
(bad)
push
mov
push
pop
mov
pushf
fst
(bad)
lock
int3
arpl
loop
inc
pushf
add
ja
and
push
push
inc
mov
pusha
rol
sbb
add
xor
out
push
ja
jp
bound
mov
sub
pop
fisub
sub
sar
loop
aad
ins
(bad)
xlat
js
cmp
call
pop
mov
out
and
mov
cld
mov
(bad)
mov
fldcw
add
call
cmp
jp
enter
jmp
ja
xchg
push
lahf
xchg
push
cmps
cmps
ins
and
pop
cwde
ins
push
sub
inc
sub
or
cmc
out
xchg
pop
sub
jmp
inc
arpl
jg
xor
shl
pop
es
pop
sub
push
lea
call
fimul
outs
sahf
retf
jg
pop
jle
cmp
push
retf
div
mov
pushf
xchg
and
daa
(bad)
pop
dec
or
aam
inc
pop
sbb
xchg
and
mov
cmp
add
in
fcomp
mov
sbb
out
mov
adc
jg
mov
pop
fstp
inc
int3
cld
adc
pop
addr16
repz
shr
out
dec
add
pop
nop
jbe
xchg
xchg
push
pushf
pop
ja
jnp
or
xor
push
inc
push
test
push
xchg
xlat
and
inc
xchg
scas
inc
call
or
pop
dec
call
sti
int
fld
retf
inc
mov
add
xchg
dec
pop
enter
cdq
xlat
icebp
cmps
mov
mov
rcl
jmp
retf
add
or
xor
xor
scas
in
jl
test
in
scas
imul
outs
push
xchg
(bad)
jp
sub
cld
mov
int3
push
jae
add
clc
adc
add
mul
mov
test
push
dec
and
in
mov
and
mov
adc
cmp
fisubr
and
aaa
sbb
out
fidiv
lahf
push
repnz
add
mov
push
sar
rcl
pop
add
cdq
push
and
scas
test
aad
mov
add
add
test
dec
test
movs
mov
enter
sub
push
iret
fucom
js
dec
arpl
sub
es
or
and
jecxz
push
dec
cli
iret
cwde
jne
jo
test
cmp
push
jmp
sar
dec
pop
pop
add
data16
fmul
add
shl
pop
icebp
sub
push
cmps
push
pop
movs
not
push
mov
es
pop
lods
mov
js
imul
retf
(bad)
push
movs
pop
mov
push
mov
dec
jle
mov
jnp
dec
and
sar
lea
dec
add
sub
ds
jg
and
(bad)
out
out
iret
div
enter
add
and
jne
pop
sbb
into
popw
pushf
adc
dec
dec
mov
add
jl
ss
dec
mov
adc
mov
add
test
rcl
mov
cmps
fwait
pop
sbb
inc
outs
lea
jge
aam
push
ins
repnz
shl
test
mov
aaa
data16
movs
jnp
sbb
es
test
lea
inc
mul
stos
mov
mov
mov
push
xor
cmp
adc
bound
push
xchg
pop
cmp
sub
push
sbb
inc
sbb
aas
ins
inc
imul
aad
rol
fs
inc
dec
and
push
mov
je
or
outs
jg
jp
mov
mov
out
jl
ror
sbb
push
xchg
cmps
xlat
movs
fsubr
xor
and
xchg
xchg
push
js
sbb
enter
scas
(bad)
xchg
pop
jne
sub
gs
mov
xor
out
push
int3
push
push
mov
fldenv
xchg
pushf
shl
repnz
push
jmp
rcr
ret
add
in
sub
in
sbb
sahf
xor
or
dec
call
idiv
retf
push
jmp
retf
(bad)
dec
ja
xor
out
(bad)
dec
in
mov
jge
sub
je
ins
mov
les
dec
dec
mov
daa
pushf
xchg
mov
pop
add
les
ret
push
int
fisttp
dec
sub
mov
and
sbb
movs
out
je
ins
cmp
inc
mov
adc
pop
push
scas
fnstenv
add
sub
fadd
loopne
mov
popa
bound
and
sub
jmp
test
mov
xlat
in
jo
sub
mul
sbb
dec
pop
sbb
add
mov
dec
sbb
or
push
in
jmp
push
jecxz
add
daa
cmps
les
leave
sub
out
mov
jae
cmps
push
gs
ins
mov
nop
out
rcl
add
xchg
sub
or
and
out
push
outs
rcl
add
add
or
sub
xor
mov
pop
arpl
mov
and
inc
push
int3
fistp
fld
fmul
mov
mov
mov
jnp
aaa
pop
jmp
xchg
add
pop
cwde
xchg
adc
sbb
int
pop
mov
xor
repz
mov
mov
mov
mov
loope
addr16
push
cmp
and
dec
and
mov
sub
sub
cmps
rcl
int
aas
sub
mov
fbld
(bad)
cwde
cs
scas
xchg
add
fcomp
hlt
adc
(bad)
push
mov
das
dec
test
hlt
jle
aam
push
adc
jmp
dec
xchg
mov
xchg
or
push
add
movs
inc
xor
dec
xor
sbb
push
push
push
les
aaa
push
cmp
sub
jbe
fdiv
sbb
in
pushf
imul
jmp
adc
mov
xchg
xchg
cdq
aam
dec
and
fadd
aad
sub
cdq
add
jmp
pop
std
inc
sub
mov
mov
cmp
or
lods
shl
inc
mov
shl
retf
push
test
mov
call
mov
test
fisttp
mov
sbb
test
dec
das
jnp
dec
push
icebp
add
sub
inc
pop
in
loopne
xor
pushf
mov
xor
add
add
dec
add
adc
add
arpl
pop
jg
mov
jle
scas
pop
les
mov
cmp
movs
mov
cdq
and
jle
jge
loope
cmp
add
lahf
popf
push
push
rol
mov
call
push
mov
mov
es
mov
add
dec
mov
mov
rol
sub
xchg
xchg
jb
ja
sub
ss
cmp
stos
ret
call
adc
aas
sub
add
mov
test
pop
xchg
mov
pushf
loope
mov
test
mov
inc
icebp
push
stc
adc
inc
sub
ds
sti
pop
cld
cmp
in
(bad)
(bad)
cmp
fiadd
push
in
(bad)
(bad)
sbb
jnp
repnz
pop
mov
or
ss
daa
sub
loopne
or
pop
dec
xchg
add
mov
repnz
loope
sub
lds
pop
mov
fst
pop
sub
cmp
je
pop
ficom
push
inc
push
jge
ret
pop
in
into
mov
cmp
lea
push
fidiv
into
add
in
or
je
ds
in
push
jle
xchg
xchg
es
xchg
or
push
hlt
popf
sar
jmp
outs
mov
fcom
push
inc
jne
fst
lahf
jb
int
dec
in
mov
fst
jno
fsubr
fcom
jp
out
dec
jp
and
pop
sti
div
mov
mov
ss
fiadd
adc
sub
scas
pop
push
arpl
inc
leave
add
pop
push
jmp
mov
pop
sahf
mov
addr16
push
sti
push
bound
fld
call
lahf
in
xchg
test
test
cmp
inc
or
jae
enter
sub
sbb
sahf
inc
add
test
(bad)
dec
daa
shl
in
cmp
nop
ss
jnp
fwait
loope
sbb
call
jmp
fbstp
inc
repz
jnp
pop
(bad)
sbb
out
add
jae
into
sbb
sbb
mov
sbb
imul
rcl
dec
retf
jl
inc
cmp
fdiv
ret
arpl
sbb
js
stos
fisub
xchg
sub
add
lods
pushf
mov
and
sub
push
cmp
sar
pop
call
dec
out
in
fs
hlt
int3
push
push
inc
inc
in
leave
mov
addr16
xor
fcomp
(bad)
loopne
and
pop
pop
cmp
mov
push
jl
enter
mov
mov
and
pushf
inc
dec
pushf
loopne
cld
cs
cmp
nop
dec
adc
xchg
mov
dec
mov
pop
xchg
push
jo
je
popa
add
sbb
sbb
pop
lea
push
movs
cmp
xor
test
dec
scas
mov
mov
fst
sbb
pop
pop
mov
adc
add
jl
dec
ds
push
dec
xor
or
gs
sbb
and
loopne
jmp
inc
jg
sbb
(bad)
(bad)
ret
pop
outs
mov
loopne
and
fcmovbe
mov
dec
(bad)
retw
fs
jb
jno
movs
in
inc
icebp
and
sahf
mov
loopne
out
cmp
cdq
pop
xchg
adc
aad
push
mov
(bad)
cs
sbb
aaa
int3
stos
pop
dec
neg
inc
addr16
push
js
mov
inc
xlat
into
mov
sub
ficomp
ds
mov
push
jne
xor
pop
and
popa
jb
and
mov
mov
xchg
loop
add
int3
cwde
jmp
aad
loop
mov
lods
inc
imul
(bad)
ror
popa
xchg
or
or
push
cmps
mov
mov
cwde
leave
ins
addr16
cs
ins
and
lahf
retf
inc
daa
scas
icebp
mov
xchg
mov
jl
push
std
xor
sbb
pop
jmp
mov
dec
dec
pop
not
ins
(bad)
cmp
enter
jmp
push
adc
lods
cld
shr
jo
stc
push
push
nop
jb
not
jne
inc
fadd
xor
rcr
popa
fld
sub
sub
mov
dec
sbb
xchg
mov
jge
popf
pushf
aam
dec
lock
loope
mov
xchg
les
aam
or
mov
mov
rol
mov
push
dec
mov
adc
stos
ror
std
cmp
push
push
test
xlat
icebp
and
lea
mov
js
xchg
aam
push
int3
loope
or
cmp
cmp
mov
pop
rol
jo
sti
mov
xchg
mov
in
sub
xor
out
or
fstp
jmp
add
push
jg
xchg
inc
mov
addr16
add
dec
pop
dec
push
push
aas
mov
pop
add
sbb
rcr
add
adc
dec
or
pusha
cmp
inc
mov
or
jne
int3
out
dec
mov
cmp
pop
ror
mov
inc
imul
dec
add
inc
loop
fld
dec
pop
pop
add
mov
push
mov
sahf
retf
jg
dec
shr
pop
repnz
(bad)
mov
fidiv
aam
push
lods
jle
push
retf
push
or
inc
sbb
or
mov
cmp
fcmovbe
dec
cdq
loop
mov
dec
jnp
sbb
int3
add
pop
stc
adc
jp
out
adc
inc
sbb
jo
push
fimul
cmp
or
push
jmp
pop
sbb
push
das
inc
test
jmp
cmps
push
gs
add
push
inc
mov
ins
xor
mov
stos
mov
loop
jne
or
and
cwde
in
push
sti
sar
sub
jnp
into
inc
mov
icebp
imul
or
push
cld
xchg
cmp
in
dec
je
dec
xchg
pop
popa
sti
pop
pop
in
xchg
push
shr
jge
test
sar
aam
ss
pop
dec
movs
(bad)
inc
ja
jns
cmps
(bad)
pop
pusha
add
cmp
cmp
inc
leave
call
xor
dec
into
ins
jmp
cmp
jmp
ror
jl
pop
push
cs
cmps
call
cwde
sub
xchg
ja
fldenv
push
pop
or
push
cmp
jnp
add
movs
cmp
push
mov
mov
jmp
mov
mov
es
jbe
or
and
arpl
pop
pushf
loope
leave
int3
js
gs
sbb
and
in
pushf
dec
int3
and
add
push
push
sbb
cli
lods
(bad)
stos
pop
inc
movs
pop
push
(bad)
out
call
icebp
div
push
pop
shr
cmc
pop
dec
xlat
ja
(bad)
int3
popf
dec
or
sub
cmp
xchg
and
cmp
add
fisttp
inc
scas
pop
(bad)
xlat
mov
neg
jae
sub
sbb
std
dec
add
fdiv
mov
cmps
out
sub
sub
(bad)
sub
cmp
inc
fcomi
loopne
dec
(bad)
test
mov
mov
std
inc
call
xlat
dec
inc
jg
xchg
sbb
xor
sub
xchg
and
mov
xor
dec
movs
loopne
xchg
inc
fnstsw
dec
sbb
pop
fsubr
push
fwait
dec
lds
push
outs
call
idiv
xor
dec
loopne
jge
push
push
sbb
add
xor
pop
push
jmp
fldcw
jle
jmp
dec
out
in
cmp
fadd
cmp
test
data16
rcl
dec
jp
mov
mov
jnp
jecxz
xor
xchg
pop
pop
fadd
push
push
jp
cmp
mov
xchg
daa
loopne
out
mov
mov
popa
arpl
(bad)
xor
(bad)
pop
push
sbb
mov
fadd
jmp
or
dec
mov
das
fldcw
push
cmp
dec
mov
and
lea
mov
xchg
pop
mov
mov
mov
(bad)
aaa
ss
cs
dec
jnp
test
or
js
lea
dec
and
xchg
xchg
adc
daa
loope
fbstp
xor
shl
pushf
and
dec
retf
les
jge
mov
dec
add
ret
test
mov
pop
adc
test
pusha
cmps
or
mov
mov
xchg
not
mov
out
mov
fdiv
ds
push
push
mov
cli
repnz
or
call
fcmovnb
and
inc
push
mov
repnz
jnp
adc
cmps
das
jl
jo
push
mov
jo
(bad)
cmp
inc
sbb
jmp
xor
inc
pop
jg
sahf
sub
clc
jmp
adc
ins
push
inc
push
xor
les
dec
aad
xchg
in
mov
scas
mov
lock
daa
add
xchg
fst
movs
test
sub
push
test
out
mov
or
fcom
int
test
nop
stos
xchg
pop
sbb
(bad)
dec
je
imul
ffree
cdq
neg
loopne
or
pop
neg
sbb
mov
int
mov
test
das
(bad)
popf
inc
sub
test
jb
(bad)
mov
pop
sbb
sub
and
push
dec
es
pop
jmp
or
cmp
or
loop
cwde
dec
das
mov
mov
inc
pop
pop
jo
icebp
call
jb
mov
add
xor
test
pop
push
pusha
cmp
xor
adc
pop
sub
adc
sti
xchg
repz
shr
add
(bad)
data16
sbb
mov
pop
fild
sub
push
(bad)
rol
pop
bound
shl
pop
addr16
loope
jp
stos
mov
pop
sbb
push
pop
ror
iret
xor
test
jbe
imul
cmps
les
or
jae
sbb
enter
xchg
or
pop
and
stc
and
loop
daa
xlat
rol
dec
lock
push
dec
lods
xor
neg
pop
and
arpl
loope
pop
fwait
xchg
loope
jecxz
xchg
pop
or
fwait
popf
mov
mov
adc
dec
xor
sar
mov
dec
mov
addr16
daa
and
fsub
ja
call
hlt
int3
cld
fsubrp
repnz
call
(bad)
imul
jno
xchg
mov
daa
jle
mov
(bad)
dec
(bad)
int3
pop
sbb
adc
icebp
shl
div
mov
imul
scas
jne
rcl
xchg
cmps
(bad)
jmp
add
mov
mov
idiv
(bad)
pop
popf
pusha
jmp
pop
ja
bound
int3
mov
leave
scas
ss
clc
push
aam
sub
outs
sbb
fsubp
loopne
pop
test
push
je
lods
mov
and
add
in
add
sub
jns
dec
sahf
(bad)
imul
rcr
mov
in
jmp
mov
jbe
aas
adc
dec
cli
lock
mov
and
add
in
js
popa
(bad)
push
dec
shl
and
push
std
call
outs
adc
xchg
test
fstp
jmp
add
add
mov
mov
pusha
jge
test
aam
inc
push
ret
cmp
xor
shr
lock
sbb
mov
dec
jecxz
cmp
pop
sub
dec
push
repz
iret
popf
rol
nop
dec
(bad)
mov
xor
sub
cs
adc
pop
pusha
out
rol
fidivr
jnp
es
sar
shl
adc
sti
mov
and
add
xchg
sbb
cs
mov
imul
addr16
data16
push
xchg
(bad)
sbb
jmp
in
mov
mov
rol
jg
movs
shr
adc
dec
cmp
out
sub
inc
out
int3
mov
lahf
shr
shl
mov
inc
mov
outs
pop
retf
lods
ja
or
shl
not
push
cdq
xlat
mov
cmp
ficomp
popf
sub
add
hlt
dec
repnz
repnz
sti
fcom
push
jmp
lods
sbb
out
fistp
jmp
cwde
loope
(bad)
lods
sub
mov
jns
mov
loop
ds
add
add
xchg
dec
in
adc
cmp
sbb
lods
push
arpl
xor
mov
jge
test
mov
xchg
sub
pop
cs
les
cmps
aaa
dec
mov
sahf
mov
shr
mov
cdq
rol
cwde
jecxz
dec
std
popa
xchg
lea
shl
dec
mov
pop
sbb
dec
jmp
fwait
es
test
(bad)
gs
dec
cmp
pop
repnz
xchg
mov
push
xchg
sbb
mov
lahf
call
loope
cmp
repnz
mov
(bad)
rcr
sub
xchg
mov
mov
fidivr
add
into
outs
cs
mov
push
or
loopne
nop
or
loop
hlt
inc
jl
adc
mov
fcmovu
sbb
or
(bad)
fdivr
(bad)
sub
scas
sbb
mov
sahf
out
push
dec
dec
mov
cmps
add
rol
arpl
fdiv
cmp
fwait
and
xor
call
jbe
mov
sbb
or
sub
sbb
mov
inc
push
enter
int3
shl
inc
fldenv
sbb
shr
xchg
mov
cmp
call
(bad)
adc
in
mov
not
mov
call
mov
jno
lea
dec
push
std
mov
fnstenv
movs
cmp
cmps
scas
push
fwait
nop
in
sub
leave
pushf
pop
test
popa
fmul
or
mov
pusha
sub
cmps
jne
pop
daa
cmp
scas
mov
xchg
ins
jmp
nop
shr
dec
lahf
lock
in
(bad)
mov
lods
in
(bad)
sahf
add
push
out
and
push
ins
stc
in
ins
movs
sbb
dec
out
pinsrw
or
xchg
or
pop
ins
adc
jmp
movs
mov
and
mov
fdiv
or
lea
call
out
hlt
ficomp
repnz
pushf
push
push
in
les
jb
xchg
xlat
cwde
pop
cmp
call
push
js
mov
aad
(bad)
sbb
popa
iret
ds
inc
jmp
nop
mov
(bad)
jle
sbb
fcmovbe
fcom
jmp
sub
xor
jl
adc
dec
cmp
inc
fidivr
push
adc
xlat
scas
pushf
push
shl
fwait
(bad)
push
push
push
fimul
shr
rcr
jnp
in
inc
call
lahf
imul
cs
loop
and
es
sub
cwde
mov
mov
fidiv
push
and
stos
inc
jo
sbb
xor
jmp
jmp
je
fst
mov
mov
add
and
jb
sti
loop
or
mov
pop
jp
pop
xchg
call
jmp
xchg
(bad)
add
nop
cmp
or
pop
dec
sbb
mov
mov
mov
mov
xchg
or
mov
out
fadd
mov
loopne
xor
push
leave
pop
and
fmul
xchg
mov
dec
icebp
es
js
mov
in
add
dec
mov
xchg
fmul
dec
aad
popa
mov
mov
sbb
sbb
les
sub
mov
hlt
jmp
test
sbb
int
cld
add
neg
pop
xor
mov
loopne
sti
arpl
pop
or
pop
nop
cmps
cmps
and
pop
lods
fsub
ret
lods
or
xor
in
mov
sub
dec
or
jbe
clc
adc
push
dec
iret
std
aam
sti
(bad)
fdivp
xchg
inc
fisub
push
int3
sbb
stc
mov
ror
jmp
dec
out
lods
jb
int3
int3
xor
jl
inc
xchg
mov
pop
rol
push
add
dec
ins
les
push
and
arpl
and
push
loopne
pop
ror
jmp
cwde
clc
sti
jnp
aaa
rol
dec
dec
out
sbb
sar
mov
fcomp
inc
dec
(bad)
mov
lea
repz
mov
fcom
pop
or
adc
hlt
pop
xlat
sub
push
data16
and
sub
push
pop
dec
out
(bad)
xlat
in
lds
add
loope
loop
sti
cmp
or
jnp
dec
xor
cwde
sbb
inc
ins
pop
fdivp
mov
adc
fst
adc
(bad)
add
(bad)
sub
fistp
mov
in
fmul
add
and
icebp
imul
mov
or
xchg
data16
sub
les
sbb
mov
cld
sahf
and
xor
bound
je
pop
add
add
in
fiadd
ret
mov
lahf
add
inc
aad
jg
jmp
jo
xor
in
jl
and
sub
sbb
(bad)
aaa
sbb
mov
dec
pop
data16
mov
add
sti
test
inc
(bad)
pop
mov
adc
or
stos
mov
ja
push
in
je
outs
adc
retf
sbb
test
clc
xlat
(bad)
ja
(bad)
ja
lods
mov
lock
inc
stos
pop
mov
fcom
outs
pusha
jo
cmp
pop
and
icebp
mov
lock
fdiv
pop
adc
fxch
cmp
loopne
loope
xlat
sub
dec
push
icebp
sahf
or
xchg
cwde
in
mov
dec
xor
sub
xchg
push
ret
aaa
ror
lods
and
mov
scas
mov
xchg
inc
xchg
ins
and
icebp
gs
fmul
add
pop
dec
jb
popf
push
in
(bad)
int3
int
pop
and
jecxz
outs
mov
adc
popa
scas
call
ficomp
loopne
xchg
rol
cmp
out
dec
xchg
mov
loopne
cmps
call
cmps
int3
push
(bad)
add
clc
fwait
pop
retf
xlat
mov
or
inc
fst
xchg
mov
ins
outs
adc
aad
loopne
xchg
loopne
cmps
cwde
pop
outs
aad
popa
jae
sbb
jg
retf
dec
sbb
mov
jecxz
pop
jmp
dec
mov
push
clc
xor
pushf
adc
xchg
outs
mov
sbb
push
sbb
sti
push
out
inc
dec
inc
mov
adc
dec
rol
inc
shl
pop
or
pop
or
cmp
cld
mov
fiadd
ds
neg
stc
cdq
aam
stc
jle
fiadd
pop
add
js
jbe
les
(bad)
cmp
imul
jge
jge
test
mov
jge
sbb
mov
ins
cld
xlat
sub
or
mov
js
push
pop
push
aas
stc
mov
dec
sbb
mov
cmp
test
push
xor
sbb
xchg
std
retf
movs
clc
inc
and
pop
scas
out
mov
jle
pop
ret
inc
pop
stos
fbstp
fcomp
add
sahf
int3
mov
push
and
add
shl
repz
leave
fstp
aam
in
(bad)
sub
and
xor
sbb
jp
fisttp
or
jecxz
mov
lods
sti
pop
loop
nop
loop
adc
fwait
xchg
pop
mov
jmp
out
fwait
nop
mov
adc
rcr
sbb
mov
jbe
jmp
(bad)
repz
xchg
xor
sub
iret
lahf
fdiv
(bad)
xor
enter
push
dec
imul
loope
or
retf
push
sbb
leave
imul
sub
out
jp
xlat
popa
mov
pop
mov
std
ja
jmp
add
add
jp
int3
es
ins
and
push
retf
push
inc
enter
rcr
mov
fcmovne
and
dec
ret
(bad)
xor
sar
jno
je
cmp
add
outs
js
mov
inc
jno
hlt
stos
or
add
cs
loope
aas
push
ficomp
dec
ss
sbb
or
jmp
outs
dec
xchg
dec
stc
jnp
in
xchg
scas
in
leave
mov
cmps
popfw
lods
jp
sub
in
jnp
sbb
add
xchg
or
je
add
out
retf
add
fcomp
into
(bad)
leave
pop
push
mov
pop
pop
sub
push
inc
in
ja
rol
fdivr
mov
xchg
movs
movs
movs
pop
nop
popf
pushf
jmp
shr
std
mov
push
fs
sub
js
jmp
cwde
cmps
jmp
pop
aam
mov
mov
lock
inc
add
push
stos
sub
retf
cmp
movs
inc
ins
xor
pusha
and
push
sbb
xor
cmps
xor
ja
pop
scas
ret
fcmove
jmp
inc
in
dec
xchg
mov
(bad)
fwait
push
mov
jmp
xchg
sub
xlat
leave
lods
pop
inc
int
add
xlat
scas
sbb
sbb
enter
cmp
aad
ja
jl
call
(bad)
push
add
dec
popf
dec
sub
mov
lds
aam
data16
int
mov
dec
out
in
jmp
les
mov
adc
fisttp
popf
loop
mov
jmp
std
push
ficom
add
mov
lds
dec
movs
sbb
bound
mov
idiv
jmp
fs
rdpmc
sub
ins
or
loopne
movs
lahf
sahf
pop
gs
lds
push
push
xchg
cmp
scas
out
pusha
imul
popa
pop
adc
(bad)
loopne
movs
fsubr
mov
jmp
adc
stos
jl
outs
mov
xchg
jl
cmps
xor
cli
sbb
inc
xor
inc
push
int3
popa
mov
and
arpl
mov
aam
xor
xchg
jno
aam
aaa
repz
sub
mov
aaa
jle
dec
lahf
push
rcr
int3
xor
fstp
clc
aaa
adc
xchg
repnz
sar
jno
adc
lahf
test
adc
xchg
(bad)
adc
add
sub
cmc
mov
pop
test
daa
out
aas
mov
or
mov
cld
sbb
push
movs
sar
dec
(bad)
fild
jnp
or
sub
mov
loopne
xchg
push
fst
ror
adc
test
test
shl
das
cs
dec
out
sbb
xor
push
or
outs
sub
jmp
stos
xor
icebp
lahf
or
cmp
inc
gs
mov
pop
jp
mov
repz
(bad)
nop
adc
push
rol
aam
inc
adc
inc
or
add
sbb
popa
inc
rol
fmul
cmp
xor
jno
inc
in
xchg
jg
int
jnp
mov
cli
mov
inc
pop
jmp
mov
div
movs
imul
mov
add
aam
jo
das
js
jmp
jp
enter
add
(bad)
enter
adc
xor
rcl
or
jmp
ja
das
push
rcr
loopne
in
mov
fiadd
cmc
or
test
loopne
cmp
fs
(bad)
adc
cmps
cmp
cmp
fwait
(bad)
(bad)
out
sbb
jp
sub
pushf
fiadd
adc
mov
jne
(bad)
push
mov
dec
fs
jns
dec
popa
cwde
sbb
(bad)
jb
pop
cmp
jb
add
popa
xlat
xchg
aam
outs
add
mov
and
fld
pushf
dec
sub
adc
jmp
add
leave
and
push
loop
(bad)
pop
xchg
mov
adc
fstp
fimul
jmp
jmp
dec
aad
es
lea
cmp
fisttp
mov
jne
push
lds
push
leave
adc
jnp
adc
sti
es
loopne
rcr
inc
dec
xchg
mov
and
jmp
mov
mov
push
pop
xchg
pop
mov
push
xchg
call
and
fisttp
mov
xchg
idiv
sbb
dec
int3
push
sbb
mov
lea
cmp
mov
lods
sub
sbb
pop
fwait
hlt
xchg
inc
aad
xchg
rcl
fwait
push
mov
xlat
mov
aas
xchg
cmp
pop
dec
or
aas
mov
cwde
xlat
dec
movs
jmp
lahf
(bad)
mov
enter
xor
in
dec
fcom
pop
push
hlt
ret
mov
addr16
in
jae
daa
mov
sbb
mov
fs
std
mov
test
and
fcom
out
add
inc
xor
imul
mov
jnp
fwait
cmp
in
fstp
adc
mov
pop
and
mov
dec
push
test
mov
jae
and
ror
(bad)
jae
out
push
loop
inc
jno
aam
inc
daa
rol
and
(bad)
cmp
rol
push
mov
shl
jno
inc
ror
add
mov
in
or
movs
movs
bound
dec
mov
aaa
fistp
call
pop
mov
mov
pop
jne
movs
jecxz
mov
mov
pop
gs
repnz
(bad)
cdq
adc
sbb
les
inc
sbb
rol
mov
lea
xchg
xchg
dec
stc
cld
rcl
cmp
xlat
push
scas
sbb
push
inc
cmp
and
fistp
mov
and
test
inc
jbe
pop
je
cmp
ss
jmp
pop
retf
jae
pop
sahf
cli
cld
lahf
mov
(bad)
or
addr16
retf
stc
pusha
rcr
daa
adc
ins
scas
sub
pop
dec
adc
arpl
(bad)
pop
push
xchg
push
push
push
lods
test
push
adc
xchg
pop
xchg
ret
mov
inc
mov
jle
rcl
mov
xchg
inc
arpl
jb
cmp
imul
gs
ja
mov
adc
add
rol
adc
aas
imul
in
mov
aad
daa
add
stc
push
jmp
jl
sar
mov
int3
add
lea
lods
dec
jno
push
lock
ins
mov
std
test
xor
cmp
frstor
cmps
popa
xchg
sbb
pop
in
jnp
aad
mov
adc
idiv
sbb
retf
jmp
mov
rcl
sub
pop
inc
cmc
xchg
sbb
dec
scas
pop
or
lds
ret
jmp
and
add
push
sbb
or
(bad)
add
sub
les
iret
jae
xchg
sub
test
mov
push
mov
cwde
in
shr
adc
cdq
cwde
sub
iret
mov
adc
xchg
xor
dec
movs
gs
and
mov
(bad)
int
call
and
ficomp
and
mov
xchg
mov
hlt
pop
js
pop
les
mov
les
or
imul
test
mov
mov
push
lods
(bad)
mov
and
and
test
mov
adc
dec
addr16
push
div
leave
mov
stc
xchg
jmp
dec
movs
scas
ins
mov
or
call
repnz
pop
popf
fnstcw
dec
or
sub
fcmovnu
leave
movs
ror
aam
(bad)
out
movs
enter
mov
mov
lea
mov
sbb
fs
push
xor
sub
fst
sub
fcmovne
fist
repz
ds
jne
repz
dec
imul
lahf
add
mov
lock
pop
jnp
and
lock
not
adc
xchg
jg
movs
pop
mov
push
test
adc
push
icebp
in
pop
cmp
jmp
stc
pusha
arpl
jae
adc
cmps
ret
mov
jecxz
enter
mov
ret
imul
pushf
mov
out
add
loope
pop
fmul
mov
add
push
cmp
push
jns
std
add
fstp
in
lods
dec
outs
mov
push
pop
je
mov
idiv
jge
and
sub
cdq
mov
sub
in
aas
imul
(bad)
hlt
lahf
icebp
and
popa
aam
dec
and
inc
aas
xor
and
out
ins
mov
push
push
pop
add
jl
or
pop
int3
(bad)
cmps
into
xlat
mov
sub
or
hlt
xor
movs
inc
jp
push
jae
xchg
out
mov
jmp
and
bound
call
addr16
dec
pop
arpl
call
mov
pop
xor
mov
pop
(bad)
adc
aam
push
add
sub
add
mov
enter
push
(bad)
jne
lock
push
sbb
mov
repz
inc
xchg
das
sub
mov
aaa
dec
cdq
jge
jmp
neg
into
push
adc
and
add
ror
sub
xlat
dec
sbb
sbb
fstp
cmp
rol
out
fidiv
cmp
mov
dec
test
addr16
jae
aam
(bad)
jmp
daa
or
xor
fsub
test
sti
jb
pushf
cld
fnstcw
stos
imul
(bad)
jb
mov
mov
lds
sub
fstp
mov
div
fldlg2
jge
push
popa
jl
jns
addr16
popf
pop
adc
push
push
mov
lahf
call
mov
push
and
sbb
repz
mov
leave
cmp
lea
repnz
pop
xor
mov
push
push
(bad)
or
idiv
pop
inc
mov
dec
or
jge
movs
pop
adc
arpl
cmp
arpl
imul
pusha
imul
inc
adc
pop
mov
fst
mov
jmp
sahf
xchg
rol
dec
test
sub
cmp
jge
test
push
pop
or
mov
cld
pop
sahf
xchg
jnp
lods
mov
cld
shr
add
dec
mov
and
repz
icebp
sub
sub
in
repz
mov
push
ret
dec
mov
mov
test
mov
lds
mov
(bad)
push
icebp
dec
out
inc
ja
(bad)
sti
fcomp
sbb
cmps
and
cmp
cmp
pop
hlt
fldcw
xchg
iret
pop
adc
jecxz
pop
cmp
pushf
ins
aam
push
jae
jle
(bad)
or
add
sbb
test
xlat
push
dec
nop
sub
hlt
adc
int3
fwait
sbb
inc
xchg
sub
aad
dec
test
push
movs
sbb
jecxz
jnp
dec
push
dec
dec
popf
fst
daa
pushf
jp
out
stos
mov
(bad)
sub
sbb
std
repz
push
cmp
mov
sub
xor
cwde
mov
fcomp
iret
sbb
sbb
pop
cwde
(bad)
int3
fs
jnp
mov
jecxz
adc
xchg
icebp
lods
push
(bad)
call
sar
adc
sub
bound
aas
mov
lea
lods
mov
out
dec
cmp
dec
mov
jecxz
loop
arpl
add
jmp
nop
pop
fld
ins
or
jmp
loop
js
xchg
xchg
into
dec
sbb
or
cmp
jmp
xchg
xchg
adc
enter
inc
jne
cdq
(bad)
xor
mov
mov
pop
pop
popf
mov
dec
mov
push
cs
dec
xlat
xchg
push
rcl
or
aad
push
movs
sub
mov
fwait
mov
pushf
pop
xor
add
cdq
and
int3
add
and
mov
repnz
out
mov
cmp
shl
imul
xchg
mov
inc
cmp
push
push
pop
hlt
scas
cmp
ss
push
aas
push
or
ret
aam
mov
je
cwde
mov
pop
lock
mov
pushf
push
inc
fisttp
(bad)
out
jmp
out
mov
std
int
fldenv
xchg
rcr
jmp
fsub
loopne
pop
lock
mov
psubd
icebp
test
sub
jg
loope
jne
ins
fxch
push
inc
or
pop
or
cmp
cld
sbb
dec
mov
jecxz
repnz
inc
lock
sti
cmp
xchg
rcr
or
cmps
std
push
push
movs
call
std
adc
loopne
test
add
lahf
adc
std
aad
adc
pop
inc
pop
jno
sub
push
push
dec
cmc
add
fld
inc
inc
stos
int3
adc
inc
xchg
jmp
mov
std
stos
inc
pop
adc
addr16
jae
inc
shl
dec
mov
mov
or
shl
adc
rcr
pop
out
mov
popf
aam
aaa
pop
mov
scas
or
call
xor
mov
xchg
mov
je
mov
dec
mov
jge
outs
shl
movs
jg
imul
xchg
pop
popf
in
sub
dec
xor
adc
aad
mov
pop
int3
push
clc
sub
and
cdq
stc
add
add
lock
int
xchg
lds
mov
(bad)
aam
add
sub
cs
(bad)
rcr
sbb
(bad)
adc
add
jl
int
loop
mov
add
in
mov
xor
inc
mov
xor
lods
xlat
rcr
fsub
push
mov
ins
xchg
cli
fimul
std
(bad)
mov
fnstcw
mov
pop
jae
mov
cmp
mov
sub
lods
jne
sub
cmp
je
pop
cld
mov
fnsave
mov
push
or
inc
(bad)
sbb
and
cmp
pop
pop
cmp
xchg
mov
pop
jno
test
sbb
sbb
add
add
daa
sub
dec
stos
rcl
sub
fist
pop
cmp
(bad)
or
and
cwde
pop
cmp
pushf
add
mov
mov
push
jge
(bad)
mov
and
push
data16
mov
xor
fistp
arpl
ins
cli
fsub
add
adc
fcomp
repz
dec
outs
push
jl
mov
aas
and
ret
cli
jno
xor
sbb
lods
jbe
jnp
dec
pop
icebp
inc
ss
in
aad
pop
cmp
stos
xchg
pop
xchg
adc
mov
push
dec
add
sub
xchg
pop
jp
pop
cmc
dec
sti
add
sbb
pop
hlt
in
out
adc
push
jae
and
add
test
cmps
sub
fcomp
add
lahf
xor
mov
rcl
pushf
mov
push
push
mul
ins
jne
fwait
sub
lods
and
xchg
enter
inc
push
call
pop
cld
pop
(bad)
(bad)
fcmovbe
lods
into
das
aam
push
outs
call
inc
dec
imul
sbb
dec
movs
pop
ds
lds
cmp
jle
pop
pop
pushf
xor
dec
jbe
mov
ins
pop
aad
arpl
push
leave
pop
and
fcmovnu
sbb
cmp
mov
adc
ja
or
inc
inc
cmp
sub
(bad)
imul
sbb
lods
mov
loop
sub
std
and
add
rcl
push
retf
dec
dec
dec
pop
mov
pop
inc
pop
jge
xchg
imul
mov
test
fldenv
clc
rcr
call
and
mov
ss
aad
push
mul
and
dec
fstp
pop
test
mov
cli
les
scas
into
sub
push
data16
js
cmp
xchg
imul
fs
sub
push
sub
sub
pushw
jg
repnz
and
jl
jo
mov
xchg
(bad)
out
jae
push
and
mov
add
mov
cmp
sahf
shl
mov
mov
mov
rcl
jg
mov
(bad)
mov
imul
imul
frstor
sub
shr
ret
xchg
fcom
add
test
and
repnz
push
or
push
push
lahf
xor
mov
mov
in
rcr
pop
rdmsr
xchg
nop
inc
movs
push
cmp
sbb
mov
lods
out
mov
push
gs
dec
sub
push
adc
mov
dec
outs
aam
mov
clc
mul
test
das
add
push
lods
iret
pop
cld
xchg
call
mov
xchg
ja
fcom
or
adc
sbb
(bad)
mov
push
xor
imul
adc
pop
setb
jle
xor
add
popa
mov
cmp
mov
mov
imul
pop
fcmovnbe
or
pushf
xchg
dec
je
xor
inc
pushf
pop
test
ss
ds
xchg
mov
push
sbb
fist
pop
mov
xchg
dec
out
jle
pop
rcl
cmp
(bad)
scas
inc
xchg
adc
cmovp
or
cmp
push
pop
fs
cli
stos
cwde
cld
mov
shl
dec
xchg
cmps
les
pop
mov
inc
xor
inc
mov
or
add
in
popf
test
mov
xchg
icebp
xchg
and
fnsave
mov
dec
fsub
push
mov
mov
pushf
inc
inc
repz
mov
sub
ins
jg
call
sbb
call
(bad)
mov
fcom
mov
repz
rcr
cli
dec
jle
shl
add
pop
pushf
and
fdivr
into
pop
lahf
out
test
dec
cmp
jb
add
bound
dec
dec
xchg
pop
add
mov
xor
jge
popf
scas
dec
mov
pushf
pop
(bad)
sbb
inc
movs
nop
adc
hlt
mov
inc
pop
sbb
shl
sbb
fwait
adc
jbe
popa
stos
cmc
daa
and
cmovle
fnstsw
mov
push
imul
push
add
out
push
pusha
loopne
jge
dec
cmps
sbb
call
jmp
cmp
rol
mov
or
and
popf
inc
inc
addr16
in
ss
mov
loop
push
lahf
ins
rcr
sub
push
fist
mov
movs
int3
dec
jl
fimul
push
retf
ins
or
mov
loope
xchg
push
mov
push
mov
jmp
pop
imul
loop
addr16
gs
adc
add
mov
sub
retf
shl
fcomp
xchg
mov
(bad)
cwde
mul
and
enter
sub
outs
pop
imul
ret
daa
ins
pusha
imul
aam
test
and
jmp
mov
arpl
xchg
pop
cmp
inc
movs
lock
or
cld
rol
sub
sbb
(bad)
jge
aaa
imul
dec
in
cmp
cmps
xchg
call
shl
and
hlt
jge
lods
pop
pop
sub
adc
push
sub
mov
sar
test
push
cmc
pop
jne
pop
pop
jl
jns
dec
addr16
jg
test
or
jo
xor
scas
out
sbb
outs
adc
fidiv
retf
inc
cdq
pop
rol
neg
mov
sahf
pop
jnp
aas
sti
and
sbb
mov
push
push
xor
ins
(bad)
shl
add
clc
dec
cmp
sbb
(bad)
sahf
stc
mov
movs
xchg
add
cmp
ret
or
jmp
push
test
in
jno
or
leave
je
xchg
push
ret
(bad)
mov
mov
idiv
out
dec
dec
and
mov
aas
jle
fmul
movs
(bad)
iret
pushf
fadd
xchg
cmp
push
sbb
hlt
out
call
and
pop
or
dec
sub
ds
cmp
neg
stos
neg
idiv
push
sar
lock
add
mov
dec
xor
mov
push
cmp
xchg
ja
test
mov
mov
cmps
retf
je
popa
inc
aam
mov
idiv
xor
icebp
push
cld
add
cmp
xlat
cdq
jmp
jmp
in
dec
cmp
fbstp
pushf
dec
movs
loope
jno
sahf
ficomp
aam
arpl
xchg
sub
iret
push
xchg
mov
add
dec
push
sbb
daa
adc
outs
push
in
test
sbb
not
hlt
push
loop
inc
jp
div
pop
(bad)
arpl
int3
push
mov
fsub
in
adc
push
jp
neg
xchg
(bad)
dec
loop
sub
enter
mov
out
fld
pop
loopne
jbe
push
(bad)
cmp
ret
cmps
xchg
loope
push
cmp
mov
add
arpl
retf
pop
xchg
nop
add
lea
jb
xor
sub
adc
mov
test
(bad)
jmp
inc
dec
pop
mov
mov
mov
push
pop
xchg
sbb
add
push
mov
aaa
mov
push
fwait
out
cmp
into
jo
push
(bad)
xchg
je
pusha
int3
cmc
stc
and
lea
mov
push
cmps
inc
mov
gs
dec
jg
in
adc
push
cmp
shr
iret
sbb
pushf
das
or
xchg
movs
xchg
jnp
xchg
dec
imul
repz
call
pop
push
ins
inc
jg
ins
inc
aaa
ins
ja
mov
out
dec
int
xor
push
xchg
xor
sar
loopne
ss
test
push
lahf
enter
in
jmp
cmp
jle
push
push
shl
mov
ins
(bad)
int
cmp
xor
push
push
adc
(bad)
jae
aaa
xlat
pop
outs
sbb
sbb
add
popf
inc
pop
leave
data16
push
mov
fnstcw
add
(bad)
push
stc
mov
sub
stc
dec
dec
pop
jnp
dec
clc
fidivr
jecxz
jge
sbb
clc
fbstp
cmp
mul
adc
aas
cmp
xchg
loop
jge
xchg
pop
push
mov
cld
mov
ja
mov
mov
or
jp
push
mov
aaa
xlat
and
test
repz
mov
add
sbb
sub
int
fcmovb
mov
sbb
movs
or
pop
(bad)
inc
scas
xchg
sbb
xor
sub
inc
pop
inc
rcr
xchg
pop
jae
aas
(bad)
ret
aaa
cmp
mov
pop
ror
pop
jbe
ficom
lods
or
cli
dec
pop
stc
mov
sar
mov
in
lock
rcl
mov
scas
sub
(bad)
xchg
mov
(bad)
ds
push
pop
cmp
pop
cdq
je
popa
sar
push
push
int3
dec
int3
sub
fs
or
xor
test
jae
mov
sub
in
dec
jle
pop
mov
gs
sbb
ds
ret
and
imul
jmp
arpl
jb
stos
sub
add
pop
iret
dec
pop
fisubr
aas
inc
inc
mov
imul
mov
cwde
push
jnp
cdq
imul
mov
inc
mov
pop
icebp
retf
pushf
in
pop
sbb
stos
jo
les
sub
mov
dec
in
pop
jbe
int3
jb
push
sub
jecxz
inc
dec
(bad)
jl
push
jmp
retf
xchg
push
adc
ds
aad
in
mov
(bad)
nop
je
push
push
inc
mov
fstp
inc
or
dec
pop
cld
and
cmp
inc
lods
and
inc
sub
sbb
dec
mov
mov
pop
ja
arpl
jge
xor
jge
pusha
inc
mov
test
sbb
clc
mov
lock
jbe
push
adc
add
push
mov
mov
pop
addr16
lods
push
scas
(bad)
dec
dec
cmp
ficomp
pop
ret
sub
cmp
sbb
fisttp
mov
xchg
cwde
pop
or
lods
mov
aaa
shl
xor
jle
sub
add
add
jno
(bad)
pusha
and
mov
dec
sbb
sbb
aas
fbld
dec
adc
dec
out
pushf
inc
cmps
mov
cmp
xchg
scas
out
les
call
push
and
push
cmp
xor
add
jp
mov
popf
cwde
adc
adc
or
push
rcl
outs
das
mov
mov
in
or
dec
or
jge
xchg
xchg
mov
cli
pop
bound
mov
or
cmps
outs
inc
fadd
dec
and
adc
cmp
imul
xor
test
pop
rcl
leave
ja
sub
pop
or
aam
sub
lea
cld
inc
add
pop
mov
xchg
jecxz
push
popa
pop
lods
mov
xchg
test
cld
addr16
icebp
xor
aas
dec
jo
sub
xor
fcom
push
push
xlat
mov
xor
inc
mov
and
shl
jno
neg
nop
inc
mov
push
shr
dec
jle
mov
into
in
or
ss
xchg
(bad)
fstp
add
dec
aad
xchg
and
jmp
inc
xor
pop
dec
push
jl
fist
ins
xchg
xor
int
call
adc
in
cmp
add
jmp
inc
sbb
dec
aas
xchg
loop
and
pusha
je
push
(bad)
jnp
mov
rol
test
adc
lock
mov
add
fist
mov
adc
cs
jmp
and
lock
cmp
mov
adc
mov
pop
cmp
push
sub
aaa
sbb
loopne
jo
pop
sbb
pop
lock
xchg
shl
pop
cmp
icebp
push
aam
lods
cli
sti
test
fnclex
shl
lods
out
ja
fucomip
mov
adc
jmp
jnp
sub
inc
test
push
mov
out
sub
cmp
sub
call
addr16
cdq
loope
push
stos
repnz
neg
push
push
dec
movs
sbb
pop
ror
mov
lahf
mov
les
mov
lea
in
sub
cmp
std
xchg
fld
popa
loopne
add
dec
xchg
bound
mov
fsubr
adc
repz
and
adc
out
shl
ins
adc
(bad)
and
pop
xchg
jmp
sbb
shr
mov
add
ins
xor
ja
jle
(bad)
repnz
aam
push
or
fnstenv
adc
scas
or
xchg
dec
sbb
pop
sbb
pushf
dec
pop
cmp
aam
push
add
call
pop
add
cmp
loop
pop
int3
(bad)
lds
dec
cmp
shr
pop
sbb
push
dec
lods
(bad)
lock
mov
sub
mov
dec
ss
sahf
inc
fbstp
cmps
sbb
push
jmp
pop
aam
dec
dec
popa
cld
inc
enter
adc
sbb
hlt
outs
dec
pop
sub
ja
sar
cmp
(bad)
mov
sub
fld
add
cmp
shl
movs
int
dec
sbb
xchg
sbb
int
out
push
scas
inc
out
push
loopne
pop
push
xchg
xchg
sbb
adc
out
cmovg
cmps
loop
daa
jo
pop
adc
jo
sub
lods
test
cmp
jnp
(bad)
cs
lea
in
add
mov
pushf
push
cwde
stos
lock
push
lock
out
cld
leave
cmp
jnp
mov
sub
test
fisttp
mov
daa
dec
inc
arpl
sbb
in
les
xchg
pop
shl
(bad)
adc
jl
dec
cmp
lock
push
push
outs
jmp
jae
and
sti
dec
push
inc
dec
repnz
sti
push
xor
adc
fstp
xchg
mov
cmp
fimul
cwde
ret
inc
cmp
in
pop
mov
cmp
sub
xor
retf
mov
(bad)
jnp
cmp
(bad)
push
mov
shl
sub
jno
enter
imul
loopne
cmc
fwait
adc
(bad)
mov
pop
popa
cmc
jno
add
call
push
pop
adc
or
push
sbb
or
or
scas
cmp
lahf
xor
dec
add
mov
mov
cs
loope
stos
hlt
mov
push
pop
cwde
adc
arpl
mov
imul
cmp
mov
cs
es
out
outs
add
shl
jnp
mov
and
stos
repnz
in
pop
fdiv
std
(bad)
sbb
(bad)
sbb
daa
outs
fldcw
int
arpl
mov
sub
add
fwait
in
test
push
aam
sbb
push
mov
push
push
mov
mov
push
inc
js
fisubr
pop
xor
xor
and
aam
xchg
xchg
call
inc
movs
inc
or
mov
cmps
test
cs
nop
jae
mov
dec
pop
or
in
jae
add
dec
dec
mov
push
xor
cld
out
jb
mov
movs
sub
sbb
cmp
jp
mov
cld
div
push
pusha
xlat
adc
push
sahf
push
fcom
mov
std
jg
hlt
leave
xor
xor
imul
movs
aas
out
gs
lods
inc
ret
ins
pusha
js
inc
or
loopne
sub
jne
add
ror
add
or
mov
sti
not
loope
out
jl
inc
mov
and
cmc
pop
lea
les
push
movs
mov
(bad)
cmp
ror
jo
daa
(bad)
sbb
pop
call
gs
das
push
inc
retf
out
fsub
fsub
loope
les
push
fistp
mov
loop
push
inc
stos
ficom
ins
cs
pop
jmp
xchg
test
xor
and
xlat
add
mov
test
mov
je
fild
les
sub
xor
das
call
pop
pop
fucompp
pop
sbb
cmp
mov
mov
mov
fwait
pop
jmp
cmp
mov
jne
cmc
sbb
sbb
ins
adc
or
cdq
fistp
fpatan
(bad)
xlat
ret
and
cld
adc
cmc
(bad)
jo
pop
adc
(bad)
push
mov
int3
jmp
inc
ret
(bad)
cmps
cdq
or
xchg
and
iret
inc
mov
xor
cs
fistp
jnp
stos
sbb
add
push
leave
imul
dec
dec
mov
aad
sub
mov
xchg
mov
rcr
mov
arpl
enter
ss
xor
jne
and
jge
cmps
test
cmp
inc
stc
dec
pushf
in
stc
rcr
sub
and
adc
xor
mov
mov
sub
dec
add
cmp
idiv
mov
(bad)
inc
pop
mov
push
int3
or
(bad)
lock
jnp
xor
cmc
dec
jge
jnp
add
call
jmp
pusha
mov
dec
push
cmp
jmp
bound
lods
sbb
or
pop
push
dec
cwde
fwait
or
repz
mov
rcl
xchg
in
push
sub
push
ins
xchg
push
adc
inc
fwait
addr16
gs
in
stc
inc
jae
mov
aas
icebp
rol
imul
push
(bad)
and
mov
pusha
adc
cmp
mov
xchg
dec
inc
pop
jne
movs
or
mov
xlat
xchg
add
mov
les
and
xchg
sbb
test
pop
inc
inc
(bad)
push
mov
cdq
sub
lods
aam
icebp
test
ror
cld
push
out
cmc
sub
ins
test
adc
mov
(bad)
in
dec
clc
adc
ins
push
pop
pop
movs
pop
mov
and
jbe
(bad)
cmps
mov
shr
jge
sbb
push
in
fistp
jb
xchg
test
mov
mov
adc
mov
pop
mov
dec
outs
xchg
lock
loopne
lds
mov
shl
sti
adc
nop
cmps
pop
push
xor
fstp
mov
push
in
fsub
and
mov
enter
(bad)
imul
clc
clc
jno
push
cmp
pop
push
je
push
das
jmp
jge
aam
add
push
and
sbb
pushf
push
sub
mov
call
or
push
cmps
mov
out
mov
xchg
test
and
aaa
jle
mov
test
das
pop
or
mov
loop
lock
pop
push
js
jns
xchg
push
(bad)
pop
pop
or
jnp
sbb
jl
add
popf
ror
cld
dec
xor
push
(bad)
push
mov
dec
or
sub
xchg
pop
jge
pop
xor
sub
mov
jns
add
fistp
loop
and
sti
push
aad
in
(bad)
xlat
push
pop
or
sub
fs
or
pop
mov
call
stos
stc
repnz
sub
lahf
and
mov
(bad)
cli
cmp
jb
push
sub
adc
xchg
ins
std
xor
sub
sbb
(bad)
sub
scas
add
and
push
retf
repz
mov
icebp
pop
(bad)
fnstcw
pushf
imul
aad
les
push
mov
pop
mov
aam
jecxz
outs
pop
xor
xchg
pop
leave
xor
pop
xor
jbe
cs
mov
mov
or
sbb
mov
add
pop
arpl
pop
iret
jl
ins
int
mov
bound
gs
dec
xchg
sbb
int
and
xor
dec
jnp
push
jnp
dec
popf
js
out
mov
inc
lock
ret
adc
lds
test
fcmovnu
dec
sub
dec
mov
and
dec
jmp
test
aaa
lds
mov
pop
push
jo
in
and
inc
popa
out
dec
fcom
test
pop
arpl
mov
fiadd
push
ficom
(bad)
jmp
or
pop
arpl
mov
push
mov
mov
jl
or
or
outs
adc
out
sub
es
loopne
retf
pop
xchg
pop
jo
dec
mov
fidivr
jnp
sbb
mov
lock
fld
mov
ja
add
sbb
outs
test
jbe
mov
dec
or
push
push
(bad)
(bad)
jns
mov
xlat
mov
es
xchg
mov
jle
addr16
(bad)
lock
sahf
xlat
(bad)
and
mov
addr16
push
mov
outs
sahf
push
aam
mov
sbb
loopne
xchg
lods
mov
hlt
out
pushf
xor
sbb
nop
aad
xor
shl
xchg
leave
cmc
inc
ficom
rol
dec
ds
scas
hlt
fidivr
jge
test
or
dec
loopne
std
pop
jmp
pushf
push
(bad)
(bad)
xor
sub
push
fwait
imul
les
cdq
xor
mov
bound
jge
inc
mov
xchg
jno
lods
stos
fs
mov
js
popf
xor
fcomp
jmp
jbe
ss
xchg
xor
adc
aam
(bad)
pop
mov
je
jae
mov
jecxz
mov
jnp
cmp
sbb
sbb
ficom
das
rol
(bad)
clc
dec
xchg
add
pop
mov
shl
ins
and
neg
sub
push
cdq
pop
mov
aam
jge
mov
ror
in
ror
xchg
xor
popf
(bad)
dec
pop
and
sub
adc
inc
add
xchg
or
pop
sbb
push
inc
popf
pusha
aam
aad
push
add
xor
imul
mov
push
test
push
xor
mov
and
jmp
aaa
aas
fisttp
movs
jmp
mov
pop
xchg
xchg
(bad)
push
sti
loopne
add
xchg
cmp
mov
mov
movs
xor
cmps
inc
mov
inc
pop
aad
pop
int3
pop
add
push
and
hlt
ja
fcmove
dec
(bad)
pop
push
mov
sub
hlt
fsubr
push
xlat
jno
dec
jge
and
add
sar
fimul
jne
xlat
imul
in
leave
into
fwait
xchg
dec
mov
jmp
scas
or
std
leave
push
sbb
popa
out
cld
js
(bad)
jmp
sbb
mov
adc
jecxz
or
(bad)
arpl
add
dec
loopne
xchg
push
fnstenv
gs
mov
call
cmp
push
xor
loop
dec
fsubr
xchg
cmp
(bad)
fbld
sbb
mul
add
jno
vcmpsd
push
sahf
mov
mov
lea
shl
loopne
movs
xor
sub
aaa
mov
in
dec
and
push
(bad)
jp
inc
icebp
jno
cmp
pop
pop
push
dec
pop
inc
mov
stos
push
out
push
test
mov
lock
dec
cmp
mov
cmp
xchg
sub
(bad)
sub
adc
fcomp
pop
xchg
shr
pop
pop
add
shr
ret
sahf
ret
ds
adc
pop
sbb
(bad)
cmp
mov
add
xchg
or
ins
cmps
xchg
popf
xor
jmp
dec
sub
inc
sbb
push
cmps
mov
xlat
sub
push
(bad)
rol
stos
fwait
mov
cmp
xor
and
pop
enter
pusha
not
add
jmp
test
cmp
pop
mov
sbb
push
dec
mov
sbb
js
imul
push
cmp
dec
pop
jb
sti
loop
jns
out
inc
outs
add
adc
add
sub
daa
aam
pusha
pop
shl
xchg
push
sti
mov
das
ficomp
shl
inc
sub
fs
mov
dec
dec
hlt
jl
cmc
mov
loopne
cmp
sbb
sbb
sub
in
jb
sub
xor
ja
jbe
mov
hlt
adc
test
dec
sbb
in
(bad)
and
arpl
cmp
ds
enter
(bad)
sti
(bad)
and
std
push
and
add
pop
(bad)
adc
add
cmp
pop
call
scas
nop
pop
sub
pop
inc
aad
rcr
xor
pop
mov
cwde
jecxz
mov
(bad)
push
call
mov
(bad)
retf
xchg
jmp
push
sar
cmps
push
rcr
arpl
sbb
ins
sub
in
(bad)
popf
(bad)
sbb
(bad)
ss
aam
adc
push
dec
xor
fild
ins
jmp
ja
push
jmp
movs
inc
movs
mov
push
cs
jnp
pushf
adc
rcr
add
fadd
lock
in
push
fld
lods
sub
rcl
xchg
cli
push
je
test
(bad)
mov
lods
ficomp
lods
xchg
cmp
ss
int
stc
mov
mov
pop
mov
and
inc
mov
aad
ja
pop
and
jno
aaa
and
jle
push
iret
xor
adc
repz
and
imul
(bad)
aad
mov
mov
pop
dec
ret
mov
fld
sbb
inc
cmp
(bad)
ins
sbb
mov
xor
mul
mov
push
ins
push
add
dec
mov
or
movs
jo
xor
sbb
loop
mov
movs
daa
adc
xor
outs
out
pop
xchg
push
pop
xchg
mov
mov
cmp
adc
inc
push
inc
dec
mov
shr
daa
rol
cmp
adc
lods
test
fld
cmp
xor
leave
fdiv
mov
mov
out
pushf
mov
mov
and
cmp
(bad)
ret
mov
dec
jg
xor
fcomp
mov
out
cmc
sahf
mov
dec
lock
dec
and
mov
jns
addr16
aam
mov
and
mov
inc
rol
fidiv
xlat
push
repnz
jo
adc
jnp
jne
mov
mov
test
cmp
inc
cmp
cmps
not
aad
arpl
jge
mov
imul
fcmovnbe
push
add
and
ret
cmp
jmp
popa
stos
cwde
xchg
jae
jg
mov
repz
adc
inc
mov
xlat
xchg
pushf
mov
pushf
stc
(bad)
out
std
ffree
(bad)
out
arpl
sti
icebp
jmp
jo
sbb
or
int
push
mov
xchg
and
cmp
ss
and
push
call
jno
adc
mov
dec
inc
xchg
dec
mov
cmp
ds
mov
retf
pop
and
push
xor
imul
shr
or
fld
lods
mov
gs
jp
sbb
or
ja
mov
jp
aad
add
jnp
ins
push
mov
push
cmp
cmp
and
ds
sahf
mov
ficom
jge
(bad)
cmps
and
adc
adc
mov
add
jns
shl
mov
cdq
jge
mov
lock
xor
das
out
sahf
dec
push
leave
imul
jge
sbb
and
test
test
xchg
xor
jmp
int
lods
push
xchg
dec
out
adc
repz
xchg
shl
adc
push
jbe
cmp
adc
lea
and
jae
pop
sub
out
push
and
lods
mov
sbb
sub
aam
aad
jo
cmp
stos
fcmovu
lahf
sbb
push
rep
dec
xchg
xchg
pop
mov
rol
jecxz
addr16
arpl
sbb
call
mov
and
jecxz
lods
add
add
xor
rep
cmp
inc
call
add
in
imul
xchg
ret
aas
jge
test
(bad)
ds
enter
push
mov
jp
lods
push
xchg
mov
inc
pushf
gs
fwait
loop
jge
adc
scas
rcl
mov
ret
dec
fwait
cmp
fistp
ds
pop
out
and
sahf
(bad)
ror
inc
dec
loope
aas
idiv
inc
nop
push
fcom
xor
mov
pop
std
retf
xor
and
mov
jle
sbb
push
cmp
pop
dec
sar
and
push
mov
jmp
stos
adc
pushf
add
jo
jbe
push
xchg
addr16
in
xchg
sbb
push
ins
cmp
shl
enter
mov
xchg
mov
daa
mov
imul
in
mov
stos
dec
pop
mov
out
fist
shl
mov
fcomp
jmp
inc
leave
pusha
push
xchg
stc
dec
(bad)
xchg
push
(bad)
shl
shl
stos
sub
movs
pop
adc
inc
ins
add
cli
add
call
mov
(bad)
stos
stc
dec
rol
mov
cmp
xchg
mov
inc
loope
mov
adc
pop
arpl
or
sbb
int
loop
enter
lods
pop
mov
std
and
sti
inc
add
(bad)
mov
cmc
fbstp
test
(bad)
mov
jbe
mov
je
mov
cmps
mov
gs
hlt
xchg
mov
pop
and
sbb
retf
xchg
adc
push
cmp
and
icebp
scas
shr
pop
mov
xor
fwait
sub
xor
cli
or
nop
inc
ds
and
aaa
cmp
loope
dec
jae
lea
loopne
les
sbb
fucomi
xor
sbb
sub
pop
pop
jge
mov
(bad)
fisubr
dec
add
jno
sbb
pop
(bad)
enter
add
dec
dec
sub
dec
cmp
dec
inc
xor
sbb
pop
dec
neg
fwait
pop
adc
mov
cwde
sub
lock
fbstp
sub
dec
and
in
rcr
lock
push
sbb
int
(bad)
jno
test
iret
(bad)
cmp
fadd
xchg
jp
push
stc
adc
dec
xchg
mov
sub
imul
bound
push
stos
ja
and
cwde
pop
sbb
inc
stos
data16
pop
sbb
mov
pop
lods
daa
mov
xchg
mov
or
mov
or
sbb
sahf
mov
push
call
xchg
mov
outs
fisttp
pop
or
and
hlt
scas
mov
adc
cs
fmul
stos
jmp
out
test
ror
pushf
xchg
or
shl
push
jnp
dec
sti
sub
and
adc
pop
scas
call
frstor
loopne
dec
jmp
or
call
pop
inc
es
test
push
rcr
cdq
inc
and
(bad)
out
aam
mov
pop
cmp
mov
out
push
mov
adc
stos
enter
stos
popa
pop
rcr
push
jmp
fist
idiv
jle
mov
enter
sbb
add
xchg
jb
jl
jecxz
aaa
mov
inc
lds
lahf
mov
cmovnp
daa
gs
ins
arpl
push
dec
jnp
cmp
dec
fimul
icebp
fcomp
push
movs
shl
push
or
dec
jmp
fwait
pop
aas
inc
sti
stos
scas
shr
pop
sbb
sub
inc
hlt
inc
sub
ss
sar
in
mov
ins
push
sub
or
lds
int3
fcomp
push
movs
sti
mov
sbb
iret
out
rcl
jecxz
test
cmp
pop
sbb
sbb
scas
jns
(bad)
outs
push
or
loop
push
and
aaa
test
add
retf
push
pop
or
mov
sub
mov
cli
push
add
mov
dec
mov
adc
movs
add
js
enter
dec
or
(bad)
nop
push
movs
pop
cmp
sbb
jns
mov
xchg
cmp
(bad)
into
hlt
jl
xchg
dec
xchg
in
lea
push
dec
ficom
in
jp
stos
inc
xor
out
xchg
sub
cmp
inc
fcom
shr
movs
push
jl
and
nop
inc
fwait
dec
cmp
jmp
(bad)
push
mov
jp
mov
and
vmulps
sbb
jne
jne
bound
pop
cwde
ins
mov
fst
mov
popa
(bad)
pushf
mov
inc
push
mov
mov
mov
sbb
cmp
inc
gs
xchg
cmp
addr16
cmp
xchg
fldcw
xbegin
sahf
pop
test
rcr
xor
in
cmp
xchg
push
dec
fstp
sbb
xchg
pop
es
adc
ins
dec
jnp
popa
movs
push
mov
or
mov
popf
ins
jle
(bad)
xlat
pop
cwde
inc
aaa
imul
repnz
mov
int3
push
test
scas
or
rcr
clc
adc
fld
or
mov
into
add
cmp
daa
jg
dec
mov
jmp
imul
push
xchg
popa
inc
(bad)
loop
mov
cmp
sar
mov
jge
mov
lahf
shl
xor
repz
mov
push
pop
dec
daa
cmp
movs
and
cmp
enter
xlat
sub
mov
lock
push
adc
jecxz
xlat
out
repz
jno
mov
in
adc
sti
call
sub
stc
ja
in
test
push
mov
cld
xor
fwait
sub
pop
inc
mov
adc
jb
imul
das
rol
aam
fstp
push
mov
ror
(bad)
adc
mov
nop
ret
mov
hlt
xchg
cmp
loop
xchg
dec
aad
add
sbb
int3
jle
inc
cmp
inc
nop
je
sbb
ss
dec
xchg
les
push
sub
das
addr16
mov
int3
fs
pop
push
push
stos
xor
dec
and
sbb
mov
aad
mov
mov
xchg
dec
pop
mov
jmp
add
pop
add
add
dec
pop
fild
xchg
call
jmp
jo
cmp
popf
push
icebp
test
xor
xchg
inc
push
test
push
pop
mov
jg
ficomp
fst
inc
mov
mov
cmp
add
mov
or
repz
retf
xchg
mov
and
adc
or
test
mov
dec
into
mov
xor
adc
pop
movs
mov
inc
mov
jbe
in
cmps
push
div
dec
add
dec
mov
inc
sbb
mov
popa
(bad)
(bad)
pop
mov
mov
pop
mov
sbb
ror
push
xor
mov
jl
sub
loop
add
sbb
jne
or
dec
stos
out
cmps
div
jmp
pushf
dec
xchg
sbb
test
xchg
inc
add
dec
mov
cdq
push
xchg
js
push
mov
mul
cmp
adc
sbb
dec
adc
jbe
pop
call
jnp
scas
xor
add
sahf
mov
int
dec
xchg
jns
mov
and
aaa
cmp
and
stos
sbb
aam
mov
sbb
mov
addr16
lds
pop
fst
out
lock
xchg
data16
dec
loop
hlt
cmps
arpl
mov
sbb
dec
jg
lods
xor
lds
dec
pop
xor
cmps
mov
test
adc
inc
retf
add
test
ins
inc
add
cmp
adc
adc
cmp
xchg
call
sbb
and
int3
loopne
jbe
cmp
sub
pop
call
test
cmps
popa
xor
mov
pop
cmp
sbb
es
mov
inc
mov
fst
(bad)
adc
jmp
mov
pop
pop
mul
jle
stc
fwait
(bad)
retf
sub
pop
sbb
or
add
stos
in
xor
sar
cmp
xor
add
or
mov
push
mov
and
fidiv
xchg
inc
out
jmp
(bad)
jge
mov
dec
es
(bad)
je
dec
mov
fadd
inc
sgdtd
push
sbb
push
pop
mov
rcr
push
bound
call
int
push
sbb
idiv
fstp
and
jne
arpl
inc
mov
cmp
push
dec
jnp
xor
adc
ret
stos
mov
mov
sub
hlt
mov
inc
addr16
icebp
aaa
inc
xchg
xchg
pop
sub
cmc
gs
lock
inc
sub
fidiv
inc
fnstenv
aam
dec
adc
loopne
icebp
data16
dec
sbb
fcomp
popf
fbstp
cs
adc
sbb
jnp
mov
dec
test
fs
aas
push
out
(bad)
or
mov
and
mov
sar
inc
les
adc
push
dec
add
xor
push
xor
cld
xchg
icebp
inc
lea
jne
mov
sti
pusha
add
test
jl
push
mov
adc
jne
scas
cmc
leave
push
inc
fidiv
or
(bad)
repz
adc
dec
addr16
mov
adc
jg
jge
in
sub
adc
aas
hlt
pop
iret
pushf
jae
mov
mov
lds
xchg
out
cwde
arpl
fistp
dec
shl
lods
jbe
pop
sub
call
add
ja
pushf
fld
cs
push
inc
jno
fsubr
(bad)
dec
aam
add
mov
jp
push
xchg
mul
pushf
dec
xor
or
arpl
cdq
mov
jmp
and
mov
mov
xor
sub
push
ss
fidivr
dec
xchg
ja
in
and
hlt
push
retf
(bad)
jge
fucomi
push
xchg
pop
cmp
dec
inc
mov
xor
fiadd
jge
pop
lods
and
cmp
jns
jg
jle
jns
sbb
xchg
into
jmp
shl
mov
jecxz
adc
mov
mov
stc
sar
and
test
test
pop
or
xchg
add
mov
cmp
(bad)
ficom
and
dec
ret
stos
push
sub
pop
loopne
ins
jmp
(bad)
lods
outs
inc
sbb
mov
pop
sub
ins
mov
aam
or
pop
add
jae
pop
dec
inc
mov
out
push
daa
sub
mov
sbb
pop
int
jae
in
xor
imul
pop
int
sbb
pop
popf
pushf
sbb
xor
dec
out
push
dec
pop
sub
or
push
cwde
fs
pop
dec
dec
pop
dec
lock
mov
jnp
outs
imul
jmp
arpl
and
adc
clc
pop
rcr
loop
and
mov
imul
push
dec
sbb
aam
xchg
xchg
nop
loop
jl
loop
fisub
cmp
adc
sbb
jecxz
xchg
scas
push
imul
sub
xlat
inc
shl
scas
lahf
pushf
cwde
pop
enter
xor
repz
pop
in
cld
dec
jno
mov
dec
add
pusha
cld
lods
fs
jbe
ja
ins
out
jp
outs
or
or
jg
ficomp
addr16
out
call
sbb
ss
add
sub
and
test
pop
daa
push
(bad)
push
pop
xchg
mov
mov
adc
sbb
add
sbb
daa
and
dec
out
inc
jae
dec
cmps
sub
cmps
dec
mov
loopne
je
or
mov
push
jmp
mov
test
cmp
popa
test
sub
xchg
rcr
jmp
mov
jl
clc
les
push
rcr
jmp
push
ja
or
hlt
jnp
test
push
jmp
push
bound
adc
inc
dec
sbb
sub
shr
pushf
pop
test
hlt
mov
jo
loopne
cmp
dec
cld
push
sbb
cmp
push
ins
mov
retf
outs
ror
or
adc
stos
adc
sar
push
pop
pop
clc
push
mov
(bad)
pop
sbb
into
dec
pop
cwde
jmp
push
cli
lods
out
fs
nop
scas
xchg
test
pop
sbb
xor
jnp
(bad)
pop
adc
arpl
ins
push
mov
xchg
test
fdivr
mov
jg
leave
mov
lods
mov
out
pop
push
popf
into
add
mov
in
scas
(bad)
fiadd
xchg
jmp
test
das
dec
xor
(bad)
adc
add
sbb
mov
mov
xor
xor
sbb
mov
jp
call
inc
pop
or
dec
outs
idiv
pop
lds
fadd
or
in
inc
and
pop
fs
add
in
jae
jp
mov
(bad)
ins
fistp
imul
xchg
add
xor
aam
imul
shl
xchg
and
mul
adc
mov
iret
push
jmp
out
(bad)
push
push
arpl
int3
mov
dec
sub
xor
out
inc
jns
or
pop
mov
cmp
iret
dec
jb
cmp
in
mov
push
sahf
cmps
jbe
or
pushf
add
xchg
jo
imul
pusha
adc
ins
cmp
dec
mov
aad
jl
push
mov
cmp
icebp
push
repnz
call
pop
stos
cwde
daa
dec
and
pop
enter
and
fwait
cmp
rcr
cmp
push
ja
pop
mov
bound
stos
mov
sahf
mov
xchg
dec
add
sbb
loop
add
dec
pop
jmp
mov
ins
sar
inc
sbb
sub
xor
fnstenv
aaa
es
imul
mov
pop
adc
adc
jne
dec
pop
dec
fcmovbe
and
inc
stos
pop
outs
dec
mov
sahf
jno
dec
sti
in
cmp
dec
jmp
ret
and
aam
cwde
xchg
mov
dec
sub
(bad)
out
mov
pop
inc
daa
stos
push
pop
addr16
push
adc
jge
outs
cmp
cmp
cs
cld
mov
push
out
mov
imul
fidivr
and
inc
sub
jnp
lods
push
loopne
(bad)
pop
std
loop
sbb
xchg
mov
mov
stc
sub
push
pop
dec
(bad)
and
xchg
es
pop
pushf
fs
add
inc
sbb
daa
or
xchg
xchg
push
add
xchg
pop
popa
cld
int3
(bad)
xchg
imul
push
aas
mul
repz
imul
pushf
arpl
cdq
cmps
add
fs
fbstp
outs
inc
inc
sbb
mov
dec
push
push
jge
dec
pop
nop
aam
mov
pop
jnp
pushf
push
fwait
enter
adc
push
fcmovu
int3
out
xchg
mov
mov
(bad)
cmc
sar
push
push
pop
loopne
mov
pop
mov
loope
fstp
add
aad
or
sbb
cmp
push
inc
cmps
or
push
and
out
in
fiadd
aam
icebp
pusha
out
ins
les
sbb
aaa
mov
rcl
lods
fwait
dec
mov
in
fmulp
cdq
fimul
lds
jne
adc
add
dec
(bad)
mov
popf
aam
scas
inc
or
int
dec
mov
and
mov
add
ja
fld
xchg
and
lock
mov
repz
call
in
out
inc
xor
pop
xor
inc
add
or
bound
bound
cdq
xchg
ret
xor
pusha
(bad)
adc
jmp
xor
mov
mov
fadd
push
sub
outs
sbb
jge
sbb
push
neg
addr16
jno
xlat
sub
pop
stos
dec
pop
pop
jne
jbe
ror
sbb
out
push
cmp
das
int
xchg
xor
cmps
mov
mov
dec
ret
retf
sub
mov
std
xchg
out
lods
sahf
add
inc
in
pop
mov
xchg
loopne
xchg
ret
in
dec
fdiv
pop
jp
fisttp
es
pop
mov
enter
ret
dec
mov
push
aad
test
sub
pop
das
ins
hlt
push
add
xchg
mov
inc
mov
arpl
ds
fldcw
in
dec
fbld
push
push
xchg
push
pop
pop
mov
jge
cli
sar
push
(bad)
sbb
xchg
xor
jmp
mov
inc
xchg
dec
lock
jae
mov
sti
scas
mov
out
dec
add
stc
in
adc
cdq
xchg
pop
add
dec
jnp
adc
and
sbb
arpl
add
stos
loopne
cmc
sbb
or
leave
cs
adc
inc
daa
mov
fldenv
ins
pop
sub
inc
dec
inc
mov
xor
dec
(bad)
mov
mov
sub
dec
jge
adc
xchg
mov
addr16
hlt
cmp
dec
sub
rcr
jne
or
mov
js
(bad)
std
inc
ja
cmps
xchg
and
or
push
rcl
lahf
pop
aad
sub
pop
int3
pop
cmps
int
mov
xor
pop
mov
cmps
xchg
or
xchg
stc
push
mov
cmc
mov
mov
or
sti
mov
jmp
pop
adc
loopne
popf
ds
es
fmul
sub
sub
ja
pop
imul
cs
icebp
mov
loope
mov
fstp
in
sub
inc
fdivr
test
mov
xchg
test
adc
stos
dec
cmps
add
aam
push
push
loop
cmp
scas
movs
mov
enter
fwait
pop
xlat
push
out
mov
call
or
sbb
xor
adc
adc
push
or
out
arpl
nop
xlat
outs
test
push
rcl
(bad)
cmp
mov
adc
fnclex
push
add
adc
jnp
enter
push
sub
test
and
push
pushf
sbb
and
in
adc
test
lods
sbb
cmps
int3
push
push
sbb
in
daa
mov
xor
sbb
in
pop
lahf
push
push
dec
outs
push
mov
sub
call
call
div
sahf
fst
add
into
shl
lea
mov
leave
sbb
arpl
mov
adc
inc
lea
nop
adc
and
test
jmp
mov
lods
repnz
pop
push
xchg
or
lods
xchg
sbb
cdq
push
enter
ins
les
adc
test
in
es
adc
jg
iret
daa
cdq
sub
xlat
jp
cmps
mov
sub
mov
out
(bad)
das
push
cld
pop
int
enter
call
mov
ins
int
imul
mov
mov
inc
fbstp
xchg
push
cmp
aas
push
jl
inc
fwait
dec
and
in
outs
in
fld
out
mov
(bad)
rcr
push
push
and
sbb
fistp
xor
aaa
and
pop
inc
sti
mov
lods
and
call
dec
cli
xchg
cmps
iret
xchg
ror
loopne
add
adc
ins
fbld
ja
aaa
xor
jl
push
(bad)
sbb
not
outs
(bad)
int
cmp
int
push
mov
scas
fwait
nop
inc
push
nop
jmp
call
sbb
sub
xchg
pop
mov
or
push
mov
fisttp
push
sbb
fisubr
sbb
or
sub
xor
pusha
fwait
add
rcr
mov
and
xchg
sub
xor
dec
cmp
jnp
ret
jae
mov
sahf
mov
bound
loope
movs
mov
ins
cmp
cdq
sar
and
push
js
test
inc
popf
test
sbb
push
or
lods
inc
mov
add
cs
cmp
sbb
adc
cdq
jmp
mov
or
adc
mov
lea
mov
in
loop
aam
movs
pop
dec
stos
push
adc
mov
inc
jmp
cwde
popf
arpl
addr16
push
fs
pop
add
cwde
xchg
jmp
fcom
pushf
pop
jno
mov
inc
or
in
push
out
pop
fiadd
or
pop
pop
ret
and
mov
retf
pop
sbb
adc
dec
xchg
xor
test
mov
push
adc
jmp
add
popf
jae
es
test
jnp
sahf
cmp
mov
add
lods
inc
dec
and
dec
dec
dec
mov
adc
push
dec
mov
or
mov
fsubr
ds
stos
mov
arpl
lahf
scas
je
imul
xchg
test
mov
mov
(bad)
and
retf
ret
xor
test
dec
repz
pop
sub
add
rcr
aam
cmp
popa
fidiv
jle
adc
pop
mov
sub
add
and
sbb
retf
dec
aam
shr
dec
mov
push
inc
jno
loop
dec
push
mov
bound
mov
pop
in
lods
xor
sub
lock
fcmovb
sub
stc
jnp
dec
adc
in
lahf
pop
xchg
dec
jecxz
cld
pushf
mov
movs
(bad)
sbb
dec
dec
adc
sub
mov
hlt
pushf
neg
inc
imul
fisttp
in
sub
nop
rcl
sahf
or
outs
cmp
fadd
and
adc
sti
xor
stos
lods
pop
and
and
cmps
test
retf
stos
test
sub
mov
arpl
mov
xchg
pop
daa
xchg
and
fwait
push
jnp
xor
jmp
cmps
and
xchg
xor
movs
aad
push
pop
in
mov
jo
stos
mov
sbb
in
rcl
lock
lds
and
adc
xlat
jbe
repz
push
cmc
aad
or
(bad)
jne
adc
ins
mov
pop
sbb
addr16
mov
inc
xchg
jae
js
outs
mov
es
mov
fimul
sbb
sub
mov
in
sbb
xlat
in
aas
inc
adc
icebp
add
mov
sbb
jmp
repnz
push
test
int3
inc
xor
aaa
pop
lahf
in
rcl
push
dec
lahf
loop
retf
push
sti
dec
push
pusha
mov
mov
scas
mov
je
(bad)
div
lods
xchg
mov
bts
mov
cmp
inc
lods
add
in
mov
add
hlt
test
popa
mov
mov
dec
xor
lods
adc
pop
out
pop
rol
cmc
dec
xchg
dec
dec
sbb
mov
imul
push
out
sbb
mov
mov
shl
loop
test
pop
and
add
sbb
in
add
pop
ret
pop
rol
dec
fstp
(bad)
idiv
mov
mov
xor
scas
repz
mov
orps
cld
mov
pop
ja
mov
shl
je
sub
fwait
test
pop
rol
pop
sbb
fcmovbe
aaa
cmp
cld
sbb
outs
frstor
lahf
fwait
xlat
iret
add
aad
fcmovnbe
jne
imul
nop
test
adc
pop
dec
stc
sbb
dec
cmp
mov
sub
jecxz
sbb
(bad)
or
xchg
das
mov
rol
jnp
jne
sbb
xchg
(bad)
test
mov
jo
arpl
dec
adc
jecxz
sub
jg
sbb
rcpps
xchg
mov
jecxz
(bad)
out
jno
mov
popf
imul
or
cmps
inc
or
pop
adc
pop
js
mov
mov
lods
shl
fwait
in
lea
pop
scas
add
(bad)
push
aam
cdq
popa
js
arpl
std
je
mov
push
shl
cs
mov
xor
push
sub
mov
xor
enter
retf
push
(bad)
sbb
cld
mov
xor
mov
jmp
cli
jb
jl
(bad)
cmp
pop
pop
cmps
shr
pop
imul
fst
mov
daa
push
push
jae
lock
in
sbb
out
retf
push
movs
jp
mov
rcr
mov
xor
mov
add
mov
test
(bad)
jno
inc
pop
lahf
xor
mov
aaa
sbb
dec
mov
inc
sar
jge
les
xchg
(bad)
or
xchg
or
mov
aaa
cli
dec
pop
add
add
clc
jmp
dec
retf
add
adc
fsub
sti
leave
add
fisub
xchg
test
cmc
movs
lock
mov
inc
mov
push
in
mov
clc
lea
xor
fsubr
add
dec
mov
fcomp
addr16
cli
mov
ss
mov
js
fimul
pop
adc
pop
sub
retf
imul
fild
fldlg2
dec
inc
(bad)
dec
xchg
inc
xchg
jnp
arpl
mov
in
or
sub
push
mov
outs
lea
mov
aam
popf
lods
rol
dec
jp
enter
cld
mov
or
sbb
in
sub
(bad)
and
test
xchg
scas
stos
sbb
stos
inc
xchg
icebp
mov
dec
cs
(bad)
dec
(bad)
sbb
pop
push
xlat
mov
pop
daa
inc
sar
aam
mov
mov
pusha
repz
mov
push
sub
cli
(bad)
jg
ja
cmp
fnstenv
xor
movs
xor
lahf
push
(bad)
nop
jnp
pop
push
sbb
jmp
and
xchg
jp
xchg
ja
mov
rcr
add
bound
cmp
scas
loop
sub
pop
push
xchg
sbb
mov
fwait
in
xchg
sub
leave
push
xor
jo
sbb
xlat
dec
ja
popf
ja
sub
jmp
(bad)
pop
inc
ss
xchg
test
jmp
and
(bad)
add
lock
idiv
cld
ss
es
scas
stos
pop
fisttp
rcl
sar
and
mov
jno
xor
dec
xor
aam
adc
aaa
movs
scas
and
lock
lods
mov
es
push
fld
pop
out
movs
mov
push
mov
leave
adc
push
dec
jo
jge
int
pop
mov
add
pushf
dec
dec
(bad)
sub
fld
adc
popf
out
sub
in
nop
cli
push
in
lods
test
cmp
and
push
sub
mov
and
stos
stc
mov
mov
cmp
sahf
sbb
jle
lock
xor
std
mov
test
movs
and
adc
mov
pop
mov
push
cmp
(bad)
lods
jmp
push
(bad)
mov
pusha
hlt
xchg
pop
push
repz
xchg
mov
sub
push
(bad)
pop
push
jle
loop
adc
xchg
and
adc
cmps
inc
sub
mov
add
cmp
sahf
je
sub
xchg
out
fistp
pop
fwait
jae
pop
mov
xchg
pop
sar
sub
sti
cmp
cdq
imul
sbb
pop
xor
imul
add
cmp
push
hlt
shl
fstp
xchg
pop
ja
pop
ja
adc
xchg
ret
mov
lock
in
and
div
loope
xor
pop
pushf
xchg
(bad)
xlat
push
fwait
int3
(bad)
dec
lods
loopne
dec
push
dec
jo
sbb
push
mov
dec
ret
jb
fcom
push
fsub
cmp
jge
xchg
or
lahf
test
mov
out
fwait
adc
and
ins
stos
dec
jo
mov
(bad)
stos
outs
push
je
push
adc
lds
imul
inc
adc
mov
push
lods
ror
mov
xchg
push
pop
xchg
push
mov
adc
movs
dec
mov
call
pop
fldenv
cmps
xchg
sbb
dec
sub
ins
push
pop
inc
mov
dec
jmp
daa
ret
dec
push
adc
leave
mov
inc
aas
(bad)
test
sub
or
movs
jmp
pop
pop
mov
outs
or
add
and
push
or
mov
sbb
push
dec
stos
sbb
pop
(bad)
pushf
cmp
xchg
inc
movs
es
in
add
loop
push
xchg
es
and
pop
and
lods
xor
jb
xchg
add
jae
dec
shl
pop
icebp
xchg
ja
lahf
sub
sti
inc
sbb
push
leave
sahf
or
jl
dec
lock
bound
test
mov
add
pop
jl
dec
jmp
mov
in
fild
sbb
loopne
and
jae
sbb
ret
(bad)
mov
mov
sub
inc
and
cmp
adc
(bad)
aad
jae
push
retf
(bad)
jb
adc
aaa
aam
ja
sbb
loop
retf
or
pop
retf
(bad)
std
ins
mov
daa
inc
mov
inc
pop
xor
not
adc
push
sti
adc
jge
ret
ss
pop
icebp
and
shr
call
jae
bound
(bad)
pop
jnp
mov
pop
fiadd
inc
dec
fwait
sub
adc
arpl
mov
div
and
rcr
pop
loopne
or
aam
push
sbb
jmp
lods
jmp
dec
shl
mov
in
ds
sbb
retf
loope
loopne
les
ja
stos
dec
pop
pop
adc
lock
and
pop
jae
and
xchg
out
pop
js
adc
ficomp
stos
mov
dec
cmp
push
adc
fisubr
mov
ss
cld
les
mov
ss
addr16
add
(bad)
fild
mov
mov
mov
adc
ds
add
popa
fst
sbb
add
loopne
int3
lahf
xor
stos
inc
jl
int
add
ins
adc
xor
sti
push
mov
(bad)
jle
dec
mov
and
or
(bad)
cmp
imul
xlat
pop
nop
rcl
mul
ror
pop
fsub
popa
out
retf
xchg
adc
mov
jmp
jo
cli
rol
pop
sbb
je
mov
mov
shld
inc
loop
es
mov
mov
test
fwait
dec
xchg
ds
arpl
ret
aam
aaa
dec
(bad)
std
mov
outs
daa
push
mov
push
mov
mov
pand
inc
leave
outs
fabs
fidiv
in
ret
xor
les
sub
inc
sbb
outs
mov
mov
mov
(bad)
xchg
mov
rol
inc
mov
aaa
sbb
add
xor
adc
lock
stos
xor
outs
pcmpeqd
mov
jl
mov
cld
in
dec
pop
pop
fidivr
xlat
stos
(bad)
adc
xchg
out
mov
fsub
push
mov
jmp
fcmovu
stc
nop
sub
mov
fidiv
pop
mov
sub
add
push
cmpxchg
pop
jne
enter
sbb
lds
or
or
sub
xlat
pop
jg
shl
sbb
add
call
pop
sbb
arpl
ja
shr
jbe
loopne
outs
xchg
ins
sub
fiadd
push
loopne
lock
adc
cmps
dec
xor
jmp
inc
xchg
test
pop
and
(bad)
cmp
sbb
jne
pop
adc
mov
mov
xor
(bad)
int
dec
leave
dec
or
pushf
mov
xor
sbb
out
pop
jo
sub
popa
xlat
mov
sahf
lock
xchg
nop
test
pop
jns
mov
lds
icebp
fld
stos
jge
mov
adc
jnp
inc
sub
mov
int3
pop
mov
pop
(bad)
clc
push
ror
nop
mov
pop
stos
out
xor
ja
(bad)
into
mov
pop
icebp
aam
adc
out
mov
inc
inc
jmp
outs
sub
les
sub
xchg
das
outs
leave
dec
mov
adc
sub
mov
mov
mov
inc
mov
pop
cli
retf
fsubr
jno
fdivr
popa
jl
mov
xchg
mul
fist
mov
or
inc
ds
add
pop
cmp
lahf
out
hlt
gs
(bad)
sbb
push
aam
loopne
aaa
pushw
and
std
mov
fsub
and
(bad)
data16
mov
call
sub
mov
in
mov
scas
pushf
jl
inc
loope
ss
outs
int3
mov
test
cmp
mov
test
sbb
in
adc
ss
pop
sbb
test
mov
dec
sub
mov
fcom
push
push
fidivr
jge
loope
pop
push
test
inc
mov
xchg
cli
(bad)
mov
mov
cs
xchg
mov
sbb
push
mov
sbb
(bad)
int3
movs
out
pop
and
rcl
sti
xchg
adc
xor
push
add
ins
fprem
popa
or
push
loopne
das
xchg
sbb
ret
sti
or
rol
sbb
inc
push
in
outs
pushf
jge
add
fninit
lods
pop
(bad)
mov
jmp
rcl
dec
fcomp
popa
dec
mov
mov
sbb
sbb
rol
jl
push
jge
sub
or
ins
je
or
xchg
neg
or
sbb
sub
fbstp
adc
pop
ret
fisubr
into
or
add
jnp
sub
inc
mov
retf
popa
mov
lock
xlat
jbe
mov
ins
aaa
mov
push
fcom
cmp
loopne
or
dec
cmp
mov
fldenv
xchg
stos
inc
outs
shl
mov
jae
in
or
sbb
call
leave
sbb
sbb
pop
mov
xor
clc
cmp
int3
cmp
dec
dec
mov
cmp
mov
aam
xor
add
rcl
aas
pop
add
or
out
fidiv
inc
test
shl
arpl
fwait
in
out
in
mov
mul
jae
xchg
dec
push
les
xor
ins
cdq
popa
(bad)
and
ins
lds
gs
jae
fldcw
pop
js
cdq
scas
sar
mov
mov
fadd
rcl
or
pusha
cmc
cmps
lahf
jp
xor
hlt
out
xchg
aad
jle
dec
mov
pop
daa
ins
xchg
dec
adc
mov
add
and
pop
test
enter
mov
(bad)
mov
sahf
out
cmp
sbb
and
jmp
pushf
add
aaa
icebp
fiadd
push
fcomp
sub
(bad)
dec
pop
jae
cwde
ret
push
sbb
retf
jae
jl
inc
lods
cmp
aas
mov
dec
add
xor
dec
xchg
test
mov
mov
dec
cmp
lea
adc
mov
rcr
arpl
in
xor
xchg
pop
and
stos
add
and
mov
jge
xchg
ret
in
inc
xchg
dec
ins
jl
outs
xor
ins
xor
test
lods
repz
sub
mov
ins
rcr
pop
xor
leave
xchg
dec
pop
cdq
retf
pop
mov
out
fisubr
movs
push
mov
adc
aam
sbb
pop
repz
push
out
mov
sar
sbb
div
cld
pop
fmul
dec
shl
sub
scas
cli
adc
and
nop
(bad)
scas
xor
fcmovnbe
xlat
jmp
les
push
stos
cwde
mov
xchg
fdivr
dec
mov
int3
push
push
mov
popa
les
shr
fisubr
mov
push
adc
jl
inc
arpl
mov
ret
call
cmp
sub
jbe
fcom
cmps
loop
mov
inc
loope
fsubr
dec
ins
out
dec
jmp
retf
jns
neg
dec
lock
sbb
jns
cmp
mov
xchg
push
call
mov
pop
inc
or
pop
stos
push
fcmovb
popa
ja
and
jbe
mov
pop
xchg
in
repz
mov
aaa
ficom
jo
in
mov
gs
pop
pop
jno
aaa
dec
cs
sbb
ins
pop
push
loop
cmc
aaa
mov
ins
dec
or
pop
ins
test
cli
pop
add
sti
pop
mov
or
fs
pop
xor
cmp
sbb
imul
pop
in
mov
cmp
cmc
pop
cmps
and
out
sti
mov
sbb
je
mov
or
stos
rcr
cmp
lea
pop
inc
pop
les
adc
lds
jl
cld
push
(bad)
jmp
ficom
jae
bound
dec
fdiv
sbb
xchg
push
les
or
xchg
xchg
mov
inc
inc
lock
popf
sbb
xor
mov
sub
jecxz
mov
cli
mov
aad
ror
sbb
add
sub
or
mov
push
dec
jno
addr16
pop
inc
cmps
test
arpl
dec
out
pop
pop
xchg
and
jmp
in
ja
test
sub
add
hlt
lock
dec
mov
push
jmp
lock
jmp
pop
mov
jmp
std
pop
movs
cmp
call
ins
outs
sub
and
pop
cmp
(bad)
dec
clc
pop
out
imul
mov
int3
pop
push
inc
sbb
fstp
or
pinsrw
outs
mov
mov
inc
loope
and
(bad)
outs
sbb
pop
aas
pop
imul
mov
and
repnz
sti
imul
ins
pop
cmp
(bad)
push
inc
ftst
aam
pop
mov
ins
and
mov
sar
aam
jno
add
sub
or
adc
movs
int
rep
test
shr
mov
in
push
xchg
dec
jnp
aaa
dec
loopne
push
push
push
xlat
inc
or
int
mov
sbb
sbb
dec
fist
pop
push
add
inc
mov
or
dec
adc
sahf
(bad)
cmc
out
daa
and
mov
push
ror
mov
popf
fld
sub
les
ror
xchg
mov
out
cwde
leave
fadd
mov
add
or
fcom
fwait
cld
add
jmp
shl
stc
add
aaa
add
rcl
in
pop
(bad)
or
and
dec
xchg
push
loopne
cmp
ins
int3
xchg
xchg
push
shl
jp
cmc
add
dec
push
and
jb
loopne
arpl
fistp
shr
or
popa
rcr
push
inc
dec
sub
retf
cmps
xchg
or
outs
pushf
jge
aas
or
push
mov
mov
adc
lock
div
scas
retf
in
add
fs
sbb
inc
cmp
inc
iret
jbe
arpl
pop
dec
adc
aad
pop
inc
adc
(bad)
int3
arpl
aad
mov
pop
stc
jge
enter
mov
mov
mov
lods
sbb
(bad)
scas
(bad)
(bad)
push
pusha
das
sub
push
xchg
shl
mov
(bad)
push
cld
sbb
aas
div
(bad)
xlat
pop
shl
outs
xor
push
mov
or
stos
aas
(bad)
aam
ret
sar
lea
jb
sub
js
fidiv
fdivr
add
jno
(bad)
jl
mov
mov
xor
addr16
shr
shl
pop
fild
cmp
or
ja
loope
test
xlat
imul
lods
pop
jmp
fmulp
pusha
idiv
packsswb
and
das
jmp
hlt
aam
xor
js
mov
jbe
lds
ret
daa
(bad)
push
mov
mov
popf
hlt
cwde
and
mov
je
fnstsw
mov
push
dec
or
call
pop
sti
dec
sbb
or
outs
fld
ret
pop
and
and
into
push
push
fs
hlt
cmp
mov
sub
out
adc
mov
outs
adc
pop
mov
retf
popa
cld
adc
in
hlt
pop
popf
(bad)
push
out
or
lds
jb
mov
add
mov
sbb
dec
cli
daa
mov
ds
stos
rcr
iret
nop
shl
push
sub
lock
push
popf
fidivr
adc
mov
dec
cs
cmovb
repz
mov
mov
fadd
push
sub
pop
stos
iret
push
in
loop
or
pop
rcl
push
mov
inc
add
sbb
call
aaa
adc
dec
pop
cmc
mov
dec
sub
mov
xchg
fcomp
icebp
call
aad
ficomp
out
push
and
aaa
enter
ins
and
pop
mov
sub
mov
loopne
(bad)
es
jl
in
lock
pop
in
pop
shl
and
ja
jp
movs
idiv
imul
mov
fimul
mov
hlt
mov
jne
jmp
sub
mov
jmp
pop
mov
in
outs
test
into
rcr
scas
daa
pushf
push
int
cmp
inc
mov
fist
sbb
xlat
cdq
addr16
push
fdivr
out
adc
scas
xchg
mov
xlat
les
xchg
xor
mov
test
shr
jl
ja
and
sahf
cld
xor
stos
inc
cmps
fisub
out
push
inc
idiv
pop
gs
sti
push
mov
or
out
push
xor
jnp
dec
into
enter
sbb
push
and
and
mov
jg
xchg
and
or
imul
push
int3
aas
xchg
sbb
add
das
pop
lds
cmps
mov
mov
pop
inc
pop
inc
jp
outs
mov
rcr
push
shl
fistp
pop
data16
call
out
mov
ror
test
lock
sub
rcr
jnp
xchg
xchg
imul
das
jmp
jb
cmp
push
ror
pusha
add
adc
aam
or
or
jmp
retf
jae
mov
jle
imul
fist
inc
pop
in
mov
mov
push
mov
aas
jg
shr
xor
adc
clc
nop
inc
in
lock
add
arpl
mov
outs
and
push
sbb
fdiv
pop
add
out
int3
test
ss
mov
aaa
pushf
push
test
inc
ficom
mov
lea
sbb
sub
loop
sbb
dec
test
push
pop
add
clc
int3
adc
in
aad
(bad)
iret
mov
mov
xchg
mov
enter
and
ja
dec
sahf
call
dec
pop
jge
fild
dec
pop
daa
push
icebp
jg
push
adc
popa
dec
add
in
dec
stos
retf
inc
pop
sub
jle
fisub
xchg
les
gs
jecxz
in
int3
jo
stc
fsub
mov
aaa
push
sub
xlat
xchg
or
(bad)
sti
adc
mov
xor
push
scas
push
fwait
arpl
retf
pop
dec
into
push
(bad)
sub
dec
out
test
std
adc
pushf
loop
jae
jne
cmc
or
imul
push
pop
and
inc
cmp
(bad)
fsub
sti
sub
jbe
ficomp
shrd
sub
pop
repz
pop
dec
sub
rcr
(bad)
call
cmp
dec
mov
pop
and
sub
push
xor
dec
cmps
rcr
mov
ret
mov
movs
add
mov
dec
pushf
test
cmp
mov
mov
or
ja
pop
push
jmp
mov
outs
aam
loopne
xor
into
cmp
(bad)
pop
pop
pop
aas
and
hlt
scas
and
mov
lods
cmc
dec
cli
jge
fcomp
xchg
les
mov
mov
es
retf
mov
dec
or
sbb
cmp
mov
les
mov
loopne
pop
loop
push
rol
cmp
dec
inc
inc
dec
sbb
pop
sub
add
jbe
cs
inc
ins
(bad)
sub
aad
push
jmp
sbb
ret
xor
and
pop
mov
xor
mov
xlat
pop
cdq
push
fnstenv
aad
cmp
fisttp
mov
jno
push
jp
mov
pop
lock
push
aad
outs
arpl
into
or
xor
mov
add
and
lods
add
rol
xchg
mov
(bad)
jo
cmc
mov
sub
cmp
mov
inc
xchg
xchg
sbb
bswap
add
jns
call
mov
fnsave
test
jmp
rcl
pop
push
sub
(bad)
es
add
cmp
rcl
push
mov
mov
dec
je
ds
mov
pushf
push
retf
sti
inc
out
adc
add
add
jne
and
(bad)
push
popf
ret
jmp
jp
(bad)
dec
mov
or
push
cmps
into
jmp
aaa
pop
mov
ja
pop
xor
mov
aam
mov
inc
movs
cli
(bad)
stc
push
ins
mov
or
cmps
cmp
pushf
out
(bad)
dec
inc
cmp
cmp
(bad)
jae
dec
in
aam
push
dec
xor
sti
xchg
sbb
rcr
jne
jnp
idiv
mov
pop
out
cli
out
mov
jo
xchg
pop
or
pop
movs
mov
clc
cdq
aaa
loope
dec
jae
int3
mov
push
or
movs
bound
cmp
iret
pop
scas
sbb
dec
sub
lods
out
pop
cmp
jns
pop
pop
leave
mov
mov
inc
xor
mov
sbb
fdiv
xor
mov
mov
dec
mov
(bad)
into
adc
add
xchg
xor
movs
mov
or
(bad)
mov
jl
out
sub
fbstp
push
cmp
neg
movs
inc
movs
(bad)
cmc
cmc
lods
sbb
sub
dec
js
add
dec
(bad)
shl
mov
push
inc
ins
pop
or
cld
and
sbb
sti
sbb
sub
adc
mov
adc
adc
loop
adc
xchg
pop
dec
jmp
push
imul
in
hlt
pusha
shl
adc
and
mov
sub
adc
inc
out
xor
and
dec
cld
adc
inc
fwait
(bad)
packssdw
xchg
std
push
fst
repnz
mov
not
sbb
scas
(bad)
lds
pop
mov
cmps
in
imul
pop
xor
push
pop
js
(bad)
in
dec
cmp
ret
pushf
inc
pop
xchg
xor
jge
push
inc
or
fist
xchg
jmp
mov
mov
jmp
fsubr
add
ret
and
push
cmp
jp
imul
mov
adc
in
jo
inc
and
push
push
movhps
sti
mov
aad
mov
inc
(bad)
(bad)
ror
push
cli
mov
(bad)
outs
xor
adc
ja
add
push
aaa
mov
shr
dec
add
rcl
sahf
in
mov
xchg
push
scas
jge
lock
sub
scas
mov
pusha
or
das
int3
sbb
dec
int3
jl
cmp
pop
adc
push
dec
sub
fst
enter
out
inc
pop
aaa
call
inc
add
sub
and
push
push
(bad)
das
dec
gs
fisttp
sahf
dec
xor
cmps
add
or
ja
sbb
(bad)
push
push
add
shl
cmp
daa
arpl
sbb
sti
in
mov
xlat
cmps
inc
mov
cmps
mov
adc
adc
jb
cmp
(bad)
sti
cmp
fwait
addr16
ja
xor
mov
js
dec
mov
mov
mov
mov
loop
mov
mov
jmp
popa
test
cmp
movs
xor
shr
js
daa
in
in
outs
pop
add
mov
and
add
jl
inc
mov
xchg
mov
in
out
xor
in
arpl
(bad)
pop
pop
sbb
(bad)
mov
dec
(bad)
out
lds
int
cmp
mov
or
ror
cmp
sbb
mov
dec
xchg
inc
gs
or
xor
ins
into
inc
fwait
cmp
aad
ins
loope
inc
pop
mov
inc
je
cmp
add
fmul
push
cmp
push
xlat
outs
enter
pop
lds
xchg
cmp
push
xchg
mov
pop
sub
jns
(bad)
daa
sub
outs
or
push
clc
cmp
nop
mov
das
xor
fcomp
das
into
lock
into
mov
enter
clc
cmp
push
sti
int
in
dec
mov
push
lods
stos
in
imul
fcmovb
lock
pop
add
ret
int3
mov
inc
dec
cmp
(bad)
aam
jge
sub
dec
stc
inc
bound
pushf
and
and
push
sbb
push
enter
in
js
mov
dec
clc
aas
outs
sbb
dec
movs
dec
and
xchg
or
fst
lods
lock
pop
aas
jmp
mov
pop
call
fld
das
pop
and
push
fwait
pop
xor
jbe
push
enter
push
test
loop
out
out
stc
pop
or
outs
inc
movs
pop
mov
shl
jae
sub
addr16
and
imul
rcl
add
sbb
mov
mov
mov
xor
test
stc
push
adc
cmps
arpl
pop
imul
or
xchg
cmp
inc
aas
mov
ja
cld
loop
inc
(bad)
scas
dec
jb
fmul
jbe
xchg
pop
push
and
sbb
pop
and
dec
pop
lods
sub
retf
idiv
cwde
jmp
addr16
pop
adc
fcom
jl
aad
cmc
sbb
lods
sbb
js
pop
sub
mov
int3
xchg
jne
icebp
xchg
add
and
pushf
and
std
ja
and
daa
loop
xor
mov
addr16
pop
gs
cdq
scas
dec
sub
mov
mov
(bad)
mov
pop
xchg
ds
mov
pushf
ja
int
add
cdq
xchg
sbb
push
ins
push
retf
sub
mov
jbe
xor
sti
mov
loope
cli
push
and
fimul
nop
sar
xor
div
mov
pop
push
lea
stos
add
fmul
push
ret
pop
add
out
xor
jl
cmp
loopne
mov
adc
out
cmc
mov
inc
std
cdq
jl
arpl
mov
cmps
cli
cmp
dec
fadd
not
ss
sar
pusha
jnp
sub
test
jecxz
cs
imul
sub
out
xor
mov
dec
mov
pop
inc
jnp
adc
fcomp
mov
stos
mov
ds
mov
xor
and
and
inc
rcl
push
jge
test
cmp
loopne
or
fisttp
dec
dec
fucom
std
or
add
fsub
add
addr16
fldcw
and
cmps
adc
xor
shr
(bad)
fcom
xor
mov
mov
xor
pop
lock
pop
int
mov
bound
adc
movs
adc
mov
shr
shl
sahf
nop
mov
add
jae
cs
fwait
mov
adc
xchg
and
adc
fsub
ffreep
(bad)
nop
mov
fs
cdq
inc
test
sub
jle
add
lods
in
idiv
dec
inc
call
mov
pop
jmp
mov
inc
xchg
dec
int
push
mov
(bad)
or
loope
fsubr
movs
sbb
sar
sub
add
and
mov
mov
xor
pop
fmul
inc
xchg
fdivr
pop
aam
inc
out
sbb
push
mov
fisttp
or
pop
mov
mov
xor
pop
sbb
inc
sbb
mov
retf
retf
dec
add
int3
outs
enter
sbb
fcomp
dec
jnp
cmc
fwait
(bad)
mov
push
mov
test
mov
mov
(bad)
xor
cwde
sahf
mov
inc
mov
aad
mov
test
mov
out
mov
loope
call
mov
not
cwde
or
(bad)
add
pushf
push
cld
call
dec
lock
arpl
dec
mov
pop
jmp
dec
adc
fsubr
test
mov
inc
ja
xor
es
sbb
jmp
push
jmp
rcl
xchg
pushf
add
push
and
(bad)
repz
dec
lods
data16
xor
rcl
jmp
scas
sub
aaa
loopne
inc
pop
mov
add
sub
retf
xor
cmp
ins
jle
fnstenv
dec
das
jge
rcl
and
dec
lea
nop
lods
fadd
mov
jmp
mov
fimul
pop
xchg
gs
loop
mov
cmc
in
lods
push
imul
repnz
sub
inc
mov
xchg
sbb
in
movs
(bad)
xchg
pop
movs
sbb
pop
inc
jmp
jo
ins
or
push
std
imul
mov
gs
(bad)
dec
or
push
mov
mov
jg
std
jo
mov
data16
jae
xor
fistp
arpl
ror
mov
cmps
fcomip
adc
pushf
loopne
mov
nop
jg
sbb
inc
cmp
(bad)
sahf
jecxz
adc
mov
inc
pop
int3
add
lea
stc
enter
cld
mov
inc
inc
mov
xor
pop
daa
(bad)
dec
iret
scas
(bad)
lods
inc
add
xchg
js
leave
mov
stos
sub
(bad)
pushf
repz
lds
jle
sbb
shr
xchg
fcom
xor
pop
mov
call
inc
fs
cwde
stc
jmp
jecxz
mov
push
pop
ja
fnstsw
sub
or
test
jo
clc
push
pop
imul
rcr
mov
sub
sahf
mov
xor
mov
xlat
dec
adc
ins
cmp
mov
scas
mov
ins
sub
bound
sbb
in
push
ins
scas
cld
mov
lea
jp
xor
mov
push
push
gs
lods
add
cmc
or
in
ret
data16
in
into
xchg
loop
dec
dec
pop
pop
and
ror
adc
mov
pop
jnp
popa
data16
bound
sbb
lahf
push
fisub
repnz
les
xor
(bad)
das
out
aad
inc
sub
test
push
stos
pop
fst
pushf
push
out
pusha
pushf
xchg
xor
idiv
inc
imul
adc
les
outs
repz
push
inc
rol
add
js
pop
imul
xor
sub
sbb
inc
dec
(bad)
xlat
dec
fcomp
push
not
ret
push
cwde
ret
jp
(bad)
sti
sub
ficom
out
sbb
inc
test
cmps
inc
xor
inc
push
xchg
mov
sahf
mov
push
add
push
inc
aad
xchg
out
mov
std
(bad)
hlt
xlat
repz
daa
pop
lock
in
push
mov
lock
push
jmp
mov
aaa
inc
mov
sahf
shr
mov
loopne
imul
out
adc
jae
inc
xchg
lods
inc
mov
jle
and
stos
sahf
jno
and
sub
hlt
pusha
pop
push
inc
cld
inc
xlat
push
icebp
sbb
ja
icebp
dec
jo
fnstsw
cmp
dec
cmc
jl
fnstenv
mov
xor
js
add
dec
out
mov
loop
iret
pop
xlat
mov
inc
rol
dec
nop
pushf
mov
stos
pop
dec
sbb
mov
stc
fimul
and
mov
int3
xor
fadd
(bad)
outs
sbb
imul
push
pop
or
js
jg
call
aam
push
pop
jae
arpl
cmp
cld
mov
or
dec
vandnps
test
popf
or
stos
sub
mov
out
out
std
cwde
nop
dec
add
adc
mov
push
inc
fld
das
enter
sub
jge
mov
imul
les
sahf
xor
fsubr
or
and
ror
pop
test
ins
sbb
jmp
xchg
test
or
(bad)
int3
dec
push
mov
inc
jmp
lea
mov
int
data16
jmp
(bad)
pop
retf
jge
popa
movs
cld
sub
stos
xchg
push
jae
(bad)
int
les
mov
stos
push
sbb
repnz
sbb
sahf
loopne
pusha
xchg
dec
push
pop
add
mov
and
repnz
mov
jle
aam
adc
xlat
push
rcr
shl
mov
xchg
shr
add
xor
js
push
les
or
add
sbb
mov
in
mov
cmp
test
add
sbb
mov
mov
scas
xchg
pop
xor
dec
dec
scas
fistp
sub
xchg
dec
in
sub
xchg
stc
dec
and
movs
jbe
pushf
sub
ja
leave
fxch
fucomi
mov
mov
or
mov
cmp
(bad)
adc
sbb
xchg
jle
and
rol
cmp
xor
sbb
mov
pop
out
push
mov
and
or
dec
lahf
outs
jge
fwait
in
imul
(bad)
sar
stos
leave
lods
aad
sbb
mov
loopne
sti
push
popf
repnz
sub
pop
push
sub
or
add
sub
iret
sbb
stc
and
movs
sbb
fiadd
and
in
pop
sbb
mov
xchg
jne
push
sub
fwait
out
test
test
push
inc
rol
adc
add
adc
in
jmp
pop
cmp
fbstp
lds
push
fld
pop
pop
adc
dec
dec
movs
mov
sub
ins
jle
adc
pop
add
popf
dec
ss
out
mov
int
dec
iret
shl
mov
sub
xchg
inc
mov
and
lds
stos
fwait
or
or
inc
into
les
add
inc
fcom
mov
and
xlat
test
dec
and
arpl
push
dec
pop
pop
mov
into
stc
inc
add
cmp
bswap
sub
sub
sbb
fsub
bound
mov
cmp
cld
rol
cmp
(bad)
popa
dec
and
loop
mov
std
cmp
pusha
je
xchg
pop
jge
ror
dec
test
add
stos
in
leave
(bad)
lock
retf
fnstcw
movs
jno
outs
fbstp
in
clc
fdiv
shr
nop
shr
mov
sbb
pop
push
pop
cs
loope
cmp
xor
mov
(bad)
mov
pop
fs
xchg
mov
cwde
sbb
xor
mov
ja
cmp
jmp
fcmovnu
mov
call
dec
mov
addr16
cli
test
mov
push
sbb
fistp
pop
mov
rcl
loopne
cld
popa
pop
div
push
or
out
lods
fisttp
mov
and
mov
push
cmc
out
adc
out
retf
mov
jle
ins
add
lahf
lods
cmps
jle
fcom
sub
jbe
mov
xor
inc
add
mov
add
sbb
loop
push
mov
dec
or
add
aaa
rcl
jge
lahf
cmp
les
mov
call
dec
pop
add
jne
imul
mov
fnstenv
and
inc
mov
aad
cmps
enter
in
dec
bound
sbb
mov
leave
call
popf
xor
inc
cld
xchg
lods
or
jmp
sahf
pop
mov
pop
add
jmp
pushf
and
neg
enter
(bad)
sbb
scas
cmp
pushf
push
clc
fs
mov
sti
add
adc
inc
sub
pusha
sar
mov
adc
adc
movs
add
stc
push
push
bound
jmp
mov
loope
into
sub
fiadd
sub
cmp
jo
imul
repz
pop
shl
dec
sbb
xor
dec
cld
imul
cli
gs
xchg
and
cmc
stos
inc
cmp
stos
ret
jl
dec
jbe
sbb
(bad)
and
and
push
adc
mov
dec
(bad)
lods
retw
jae
sbb
sub
ficom
mov
push
les
jge
inc
push
aad
xchg
call
xchg
mov
push
mov
inc
(bad)
out
jp
aad
pop
mov
push
cmp
aaa
jmp
gs
sar
dec
inc
mul
inc
sti
lds
icebp
fcmovb
dec
arpl
fidivr
push
sbb
aas
xchg
jbe
add
inc
xchg
mov
rcr
mov
add
int3
pop
cmp
ror
mov
outs
outs
nop
rol
jo
sbb
retf
xor
pop
into
ja
(bad)
test
sbb
adc
xor
adc
dec
sbb
les
and
add
rcl
cmp
ret
les
fs
mov
scas
push
addr16
and
pop
popf
push
sbb
dec
xchg
fwait
push
fcmove
xchg
movs
cmp
xchg
shl
adc
loope
addr16
ins
sbb
imul
or
inc
xor
imul
loop
and
mov
push
and
ficom
dec
jbe
push
dec
cwde
ja
or
pop
push
lods
xchg
(bad)
movups
into
test
jecxz
mov
aaa
movs
pop
or
xchg
loope
xor
out
jecxz
xlat
dec
ror
add
mov
test
bound
inc
pop
pop
aam
pop
int3
jbe
mul
aaa
dec
pop
mov
dec
dec
sbb
push
jl
es
jg
xor
push
adc
(bad)
fadd
divps
add
inc
imul
mov
fcomp
sbb
inc
jg
mov
bound
test
inc
sti
icebp
lea
imul
push
in
and
repnz
mov
pop
icebp
or
inc
bound
jae
push
or
daa
xor
adc
js
out
sub
dec
test
mov
aaa
imul
xchg
(bad)
ins
inc
hlt
ds
popa
icebp
adc
adc
pop
dec
pop
pop
mov
or
add
inc
and
pop
in
cmp
jo
pop
cmps
mov
sti
xchg
rcl
dec
imul
outs
shl
data16
inc
addr16
out
pop
and
inc
mov
push
cmp
inc
popa
push
cmp
jecxz
push
ja
(bad)
xor
mov
adc
add
ret
and
sbb
enter
(bad)
mov
jl
fcmovb
sbb
pop
pop
mov
bound
ins
sub
xor
inc
movs
mov
inc
inc
and
out
lods
sahf
push
adc
mov
lds
sub
pop
and
push
shr
jge
xchg
push
sbb
mov
dec
loopne
jnp
(bad)
push
out
dec
xchg
fisub
aaa
push
mov
dec
div
xlat
adc
out
xor
sbb
push
inc
sub
mov
sbb
jb
addr16
inc
in
rcl
jbe
popa
mov
leave
pop
scas
inc
mov
lods
fcomp
inc
(bad)
jno
repz
nop
pusha
push
push
sahf
pop
push
sahf
ret
imul
in
iret
outs
jb
lock
cli
iret
pushf
adc
xchg
(bad)
in
or
cmp
scas
sar
stc
in
push
dec
and
bound
pop
fsub
inc
jge
in
jnp
mov
stc
test
sub
xor
mov
cs
out
dec
out
pop
pushf
mov
mov
pop
(bad)
repz
outs
adc
int3
add
stc
adc
adc
rcl
and
lds
or
sub
dec
jmp
mov
xor
(bad)
jbe
daa
mov
pop
cdq
push
ins
inc
(bad)
sbb
inc
je
(bad)
cmp
adc
mov
(bad)
outs
mov
inc
ja
inc
push
gs
mul
mov
das
xor
pop
sahf
push
xlat
test
arpl
and
sti
je
adc
daa
adc
lods
(bad)
push
jne
or
cmp
aam
out
daa
jmp
jg
mov
test
dec
jno
dec
pop
sub
inc
mov
jle
loopne
jae
mov
sub
mov
mov
shl
mov
pop
test
pop
mov
cmp
mov
gs
sti
ins
jo
pushf
push
sub
jle
mov
ret
loope
pop
mov
jnp
loope
mov
cmp
les
arpl
adc
xchg
mov
sub
sbb
pushf
mov
dec
mov
stos
test
pop
ins
movs
xchg
push
dec
jp
adc
xlat
sbb
int3
cmp
(bad)
scas
push
std
in
movs
pop
xchg
pop
lea
lods
ret
push
mov
fisttp
outs
pop
push
or
shl
aaa
ror
sbb
xor
mov
rcl
dec
push
mov
mov
out
xlat
pop
iret
push
xor
arpl
pusha
nop
out
mov
dec
xchg
mov
push
imul
std
cld
daa
xchg
sbb
int
sub
(bad)
out
das
loop
push
cli
mov
xor
cdq
dec
sbb
nop
int3
(bad)
add
mov
mov
loop
daa
xchg
xchg
clc
push
inc
test
and
stc
mov
lock
lds
jge
mov
xor
pop
out
pop
rcl
push
push
(bad)
aad
cdq
jno
sub
pop
sub
popf
mov
mov
hlt
mov
mov
xchg
(bad)
movs
dec
jmp
push
xchg
enter
aam
fld
add
enter
and
hlt
xchg
jbe
sbb
adc
stc
cmp
jno
xchg
leave
out
leave
sar
cmc
ficom
loopne
inc
pusha
call
jno
pop
scas
cmp
nop
ret
or
sbb
and
sbb
inc
out
je
inc
add
push
pop
icebp
pop
or
mov
(bad)
cmps
fisttp
fidiv
or
push
xchg
jge
test
adc
mov
xchg
cli
imul
adc
(bad)
test
sbb
dec
out
push
sub
jb
pop
or
mov
cmp
call
int3
or
xchg
fistp
dec
fmul
mov
sar
sub
inc
or
out
mov
push
les
sub
sub
jnp
push
xor
(bad)
arpl
pop
xchg
out
push
sub
inc
xor
add
jge
jl
adc
push
jle
mov
xor
cmps
push
jb
sbb
or
imul
pop
fbld
pcmpgtw
loopne
dec
lods
addr16
mov
test
and
pop
mov
push
pop
es
add
and
loope
test
inc
and
les
not
mov
out
jmp
je
xor
popa
pushf
pop
cwde
jbe
lock
imul
lds
lods
xor
mov
pop
push
push
xor
xchg
cmps
ins
stos
inc
xchg
icebp
fbstp
in
push
cmp
inc
fmul
xor
cmp
mov
fisttp
(bad)
sbb
sub
outs
jb
mov
idiv
jg
rcl
adc
and
scas
mov
ret
adc
imul
clc
and
jp
std
arpl
mov
cmp
sbb
mov
and
movs
imul
fcomp
xchg
aaa
sbb
aam
xor
lock
icebp
xor
mov
jmp
dec
and
enter
or
std
lods
aas
push
xor
jnp
mov
push
test
push
aaa
dec
mov
repnz
xor
das
cld
adc
pushf
into
lock
dec
clc
(bad)
repz
cli
daa
jl
mov
mov
aad
dec
xor
xchg
sbb
es
jne
push
xchg
fbld
ins
popf
lock
std
push
imul
pop
jo
cmp
fs
in
xor
aas
jp
out
cmp
sti
mov
loop
cmp
stos
int
or
mov
fst
or
and
mov
dec
stos
dec
sub
inc
xlat
fistp
gs
leave
into
retf
ds
(bad)
and
lahf
cmp
mov
pop
jbe
shl
in
out
sahf
pop
adc
lods
jmp
adc
push
jmp
cmp
xchg
(bad)
mov
jb
fsub
xchg
sub
pop
retf
sti
in
movs
add
cmp
(bad)
cmp
mov
arpl
inc
adc
mov
call
fcmove
or
imul
pop
pop
(bad)
sbb
or
mov
add
pop
bound
mov
in
mov
pop
aas
xor
sbb
push
inc
and
test
xchg
out
sbb
int3
cs
pop
cmp
mov
jne
pop
xchg
jne
and
popf
leave
lahf
xchg
sbb
in
xchg
cld
popa
loop
les
clc
les
pusha
and
xchg
rcr
xor
aam
add
push
mov
xor
cwde
mov
sbb
add
pop
xchg
cdq
sub
xlat
out
(bad)
loopne
in
mov
mov
dec
pusha
fwait
push
xchg
sub
dec
(bad)
jmp
jmp
imul
mov
fwait
aaa
(bad)
mov
iret
xor
xor
mov
mov
(bad)
ins
push
cmc
jge
shl
sbb
test
dec
std
aad
pop
icebp
xchg
or
retf
pop
push
dec
daa
xchg
dec
jge
xlat
dec
mov
add
loop
inc
mov
div
pop
aaa
jmp
jo
xchg
push
lea
jecxz
shl
and
mov
xchg
sbb
sub
mov
adc
shl
pop
mov
jge
add
cli
jmp
push
pop
rcr
mov
add
aam
aam
or
test
fwait
sbb
mov
jp
aaa
pop
jnp
sti
sub
or
arpl
pop
sub
or
cvttps2pi
pop
mov
mov
pop
mov
std
mov
pop
(bad)
movs
mov
(bad)
jp
jns
xchg
cmp
add
(bad)
jmp
jle
push
adc
imul
pop
aaa
paddw
xlat
popa
shl
enter
add
into
scas
pushf
je
mov
sub
push
or
mov
and
xchg
add
(bad)
int
sbb
aaa
mov
nop
iret
sahf
ret
mov
ja
inc
shr
dec
in
cdq
or
cwde
pop
shl
sub
addr16
or
xchg
pop
rep
xlat
sub
sbb
dec
mov
stos
and
xchg
fwait
push
and
bound
and
jno
mov
(bad)
std
mov
cs
xor
imul
fild
rcl
jmp
sbb
mov
sbb
mov
lods
xchg
inc
mov
loop
and
ds
and
pop
xor
int3
pusha
push
dec
jl
sub
cwde
shl
push
sub
xchg
loope
retf
and
push
or
aam
pop
and
int3
popa
mov
enter
and
test
pushf
push
sub
or
cmp
out
pop
xchg
mov
sbb
(bad)
cmp
es
ins
inc
out
(bad)
or
add
sub
cmp
cmp
rcr
mov
ja
aaa
lods
sysexit
add
xchg
pop
mov
mov
add
enter
fsub
pop
out
(bad)
cmp
mov
jbe
xchg
sbb
jge
and
sub
jno
pop
lahf
shl
cmps
mov
pop
neg
(bad)
lock
addr16
jo
leave
(bad)
fbld
(bad)
in
pop
shr
stos
test
ret
icebp
icebp
sub
fcom
int
add
jnp
in
or
inc
mov
sub
jmp
shr
cwde
sub
dec
imul
(bad)
addr16
add
dec
or
add
push
arpl
mov
mov
sub
jg
pop
ds
rcr
xor
jns
fstp
sub
fisttp
pop
sbb
pop
(bad)
pop
and
xor
mov
xlat
or
je
daa
mul
xchg
leave
pop
push
imul
inc
scas
in
(bad)
mov
mov
scas
stos
xchg
dec
pushf
mov
int3
imul
inc
nop
cmp
ret
aam
push
rcl
xchg
and
jb
inc
inc
mov
ins
sahf
xor
cs
cmps
pop
repz
sub
pushf
jo
or
dec
lea
sti
jg
ja
fsubp
fsubr
ror
xlat
dec
inc
mov
xchg
mov
shr
ficomp
add
in
xor
pop
xor
sbb
jno
cmp
push
and
aam
cmp
mov
push
mov
mul
xlat
vpsubusw
daa
in
cmps
or
mov
in
outs
fisubr
retf
sbb
in
cmps
fsub
cmp
iret
add
js
ds
gs
ss
pop
add
fwait
mov
xchg
(bad)
xor
adc
cld
fisub
pop
push
fcomp
fld
shl
or
(bad)
stc
pop
mov
lock
sub
mov
imul
in
dec
ja
jle
(bad)
xchg
jmp
add
popf
aas
jno
jge
arpl
xor
sbb
iret
lds
mov
cmp
in
push
std
pop
jmp
out
push
call
or
sub
clc
ror
in
mov
psubq
xchg
in
ds
mov
pop
shl
jle
pushf
scas
pop
mov
mov
xor
cwde
xchg
pop
mov
pop
pop
mov
jo
fld
xor
xchg
arpl
pop
inc
mov
sbb
test
push
repnz
fwait
cmp
sbb
pusha
in
mov
add
jns
(bad)
adc
mov
dec
sub
stos
loopne
hlt
mov
mov
mov
add
and
lds
jmp
jae
shr
popa
lds
and
popa
shl
sbb
push
popf
sub
ins
mov
cmp
iret
hlt
ret
fiadd
sub
ficomp
dec
or
cmp
add
stos
inc
ret
mov
jnp
adc
es
sub
adc
jns
mov
sbb
iret
test
push
stc
aad
mov
cmps
dec
mov
pop
mov
push
je
jmp
mov
dec
or
test
and
inc
cmp
jmp
test
mov
hlt
sti
push
rcr
mov
ret
push
lock
mov
ror
call
cmp
out
lods
stos
sbb
adc
mov
in
sbb
mov
jg
mov
add
inc
adc
scas
jo
mov
rol
out
mov
push
fs
nop
pop
daa
mov
cmp
push
repz
and
sbb
cmp
in
retf
pop
sub
push
pop
leave
jl
mov
mov
retf
out
mov
and
cmp
xor
xor
movs
(bad)
cwde
jl
xchg
lahf
pop
mul
mov
stos
xor
(bad)
fs
adc
(bad)
pusha
(bad)
ficom
inc
jge
adc
add
xor
inc
add
loopne
iret
sar
dec
mov
push
pop
(bad)
out
movs
add
(bad)
iret
dec
inc
add
xchg
push
xor
sbb
fcom
sbb
inc
cmp
(bad)
push
inc
add
div
iret
mov
or
aam
sahf
and
push
and
popa
pop
push
mov
mov
mov
mov
add
pop
pop
mov
fsub
int
inc
push
pushf
dec
ss
shr
dec
inc
mov
mov
ror
daa
sbb
mov
sub
dec
pushf
and
in
pusha
sahf
cmp
cmc
push
jno
sub
leave
int
jbe
adc
mov
or
stos
dec
int3
add
mov
fwait
retf
sahf
pusha
pushf
jmp
loopne
ret
dec
jge
(bad)
jmp
sub
ror
push
(bad)
mov
in
mov
dec
mov
div
pop
sub
xchg
push
pop
pusha
xor
pop
jmp
shl
neg
or
dec
mov
jge
cmps
jae
test
inc
in
test
push
repz
mov
dec
rcr
test
shl
pop
push
mov
push
icebp
push
fadd
loop
dec
xchg
(bad)
xchg
leave
and
mov
push
cmps
push
das
loope
cli
loopne
rcl
(bad)
dec
fldenv
cmp
ds
ins
jno
arpl
cld
add
(bad)
pop
xor
dec
inc
daa
sti
xor
clc
dec
jecxz
sahf
movs
fild
mov
xchg
int3
std
dec
pop
in
jmp
and
dec
stos
fdiv
cs
mov
add
jbe
gs
pop
test
sub
jbe
jno
enter
adc
test
sar
(bad)
inc
mov
cmp
(bad)
out
into
mul
mov
fcmove
arpl
(bad)
jmp
mov
mov
(bad)
in
(bad)
push
leave
or
scas
cmp
fild
ss
(bad)
(bad)
into
jg
xor
push
dec
pop
dec
loope
out
mov
stos
mov
xchg
fstp
shl
and
hlt
mov
in
sahf
leave
loop
fmul
sub
stos
je
fsub
push
and
mov
xchg
xor
ds
jbe
sub
add
inc
mov
xlat
xor
es
jp
sti
cmp
inc
xor
cmp
std
int3
ds
jge
(bad)
arpl
mov
rcr
jnp
mov
in
xor
nop
or
mov
or
mov
mov
pop
ja
pushf
add
loope
(bad)
mov
lock
mov
pop
sub
add
push
push
mov
ds
or
ds
pop
cs
pop
push
cmp
jo
cmp
mov
dec
dec
jnp
xchg
cmp
inc
mov
and
pusha
nop
aas
rcl
cmp
aam
sbb
aaa
aam
jecxz
(bad)
rcr
les
popa
xlat
es
(bad)
and
mov
stos
dec
xchg
push
pop
ror
lock
mov
push
adc
push
imul
xlat
push
test
add
add
dec
in
nop
fld
or
mov
mov
jnp
ds
fadd
lock
mov
call
mov
adc
sbb
fcomp
ja
cdq
popf
xor
and
push
sahf
sub
sub
mov
inc
js
jnp
dec
inc
xchg
mov
cmp
jbe
pop
mov
mov
pop
cld
dec
sub
les
mov
add
mov
xor
pop
ins
pop
setl
xor
sbb
jmp
sbb
dec
rcr
add
xor
sar
aad
(bad)
fwait
rcl
scas
xor
ret
adc
in
movs
fcomp
adc
mov
popf
test
sbb
daa
adc
imul
out
inc
je
jb
xlat
adc
icebp
mov
stos
and
cmps
cmps
cmp
pop
(bad)
out
int3
xor
leave
pop
inc
xor
int3
fucomi
movs
mov
adc
push
fmul
jnp
enter
mov
push
cld
inc
aaa
jp
xor
cmp
sub
lds
xchg
push
push
jl
push
mov
sub
rcr
xlat
outs
nop
or
push
shr
ret
stc
lock
sbb
pop
das
sbb
cdq
dec
jp
rcr
loopne
inc
call
out
push
add
test
mov
imul
pop
(bad)
mov
jp
or
pop
ins
mov
ss
fstp
add
ficom
pop
pop
not
cmp
dec
ss
shl
xchg
xchg
xor
ins
mov
jne
aam
push
mov
or
mov
in
xchg
fnstcw
scas
hlt
mov
or
jmp
mov
cmps
mov
sti
aaa
adc
push
dec
arpl
mov
push
leave
jge
mov
mov
inc
das
mov
cmps
(bad)
aad
(bad)
lock
dec
push
retf
sbb
ja
dec
mov
hlt
xchg
xchg
js
test
in
popf
test
jbe
int3
jb
push
into
nop
xlat
(bad)
out
dec
mov
push
lahf
mov
mov
adc
(bad)
(bad)
hlt
stos
loope
pushf
jmp
ds
lds
xchg
xor
idiv
push
or
inc
cmps
arpl
out
sub
jg
push
pop
imul
das
cld
shr
mov
pop
or
mov
hlt
ficomp
jp
and
add
adc
xchg
and
(bad)
cmp
sbb
sbb
fst
push
imul
inc
fst
mov
fld
pop
push
push
jno
inc
jo
jge
cmps
mov
pop
ins
nop
dec
not
ds
push
in
fisubr
jns
or
(bad)
and
mov
aad
inc
inc
xchg
inc
mov
movs
sbb
(bad)
daa
xchg
adc
nop
aam
(bad)
(bad)
jne
(bad)
arpl
cld
xchg
and
or
shl
dec
sbb
mov
lods
into
cmc
adc
mov
mov
fild
mov
lea
mov
lods
mov
pushf
inc
mov
dec
sbb
jle
sbb
jb
push
aam
pop
and
pop
addr16
(bad)
shr
push
and
xor
ja
repnz
mov
jp
cmp
icebp
lods
mov
sti
mov
dec
cli
xchg
sar
loopne
adc
fadd
push
fs
mov
sbb
sub
fcom
xchg
(bad)
int3
loopne
fdivr
pop
shl
(bad)
cmps
push
adc
adc
cdq
mov
lods
push
and
fadd
inc
fst
push
jo
popf
ret
mov
aam
cld
dec
test
jo
(bad)
rcr
xor
cmp
neg
ja
mov
sti
movd
test
xor
das
shl
ja
push
data16
mov
jne
ss
sbb
pop
cwde
fcmovb
xchg
js
cwde
in
adc
(bad)
xor
pop
sti
sbb
mov
test
jns
inc
cld
pushf
pushf
(bad)
addr16
int3
adc
sbb
cmp
mov
push
lock
ds
fwait
push
iret
cld
aam
arpl
push
push
and
mov
mov
pop
inc
jo
and
cmps
pop
xchg
pop
movs
pop
neg
fs
mov
pop
mov
pop
cmp
daa
(bad)
xchg
mov
jmp
sbb
sti
movs
les
arpl
pop
cmp
xor
add
outs
dec
and
rcl
out
(bad)
in
or
popf
mov
mov
(bad)
int
aam
imul
mov
or
cli
std
fidivr
pop
clc
fisub
jl
cmp
(bad)
pop
xchg
pop
(bad)
out
icebp
mov
inc
jne
xchg
jp
test
and
aad
jno
pop
cmp
cmp
fidivr
inc
mov
pop
pop
cli
mov
pop
xchg
push
std
stos
adc
cli
or
je
(bad)
mov
dec
and
add
mov
pop
mov
push
ret
addr16
mov
nop
arpl
mov
push
sub
arpl
or
mov
(bad)
jb
cli
pop
jae
inc
xor
or
mov
dec
add
pushf
daa
dec
sub
stos
jmp
sub
addr16
and
ficom
aas
pop
mov
inc
pop
cmp
(bad)
pop
int3
xor
loope
fisttp
mov
dec
dec
movs
or
add
push
pushf
mov
add
push
push
sub
mov
xor
mov
(bad)
fwait
push
push
movs
mov
pop
inc
jae
push
pop
inc
sbb
icebp
xlat
mov
xchg
in
or
adc
fidivr
outs
adc
imul
pop
xchg
mov
pop
xchg
xchg
adc
ins
or
movs
sub
push
and
xchg
out
xor
cmp
fadd
cmp
unpckhps
sbb
or
jmp
adc
pop
pop
mov
dec
fdivr
add
add
push
push
dec
les
fisub
pop
dec
xchg
dec
dec
dec
and
ins
mov
sbb
lods
fld
jecxz
ja
ja
xchg
int
scas
xchg
sub
imul
fwait
cmp
pushf
xor
pop
dec
in
push
aam
outs
neg
dec
mov
call
das
outs
cwde
and
out
mov
cmc
dec
adc
test
or
aaa
and
popa
cmp
adc
cli
sbb
mov
mov
or
pop
sbb
or
cmps
sbb
sbb
push
pushf
and
xchg
push
out
push
mov
sbb
inc
fldenv
std
js
add
mov
pop
add
cmp
enter
ret
sbb
ss
inc
cdq
cmc
fild
xor
push
jp
add
ror
mov
cmps
pop
mov
fsubr
xor
(bad)
ficomp
add
fcom
(bad)
push
fs
inc
movs
add
arpl
mov
loop
sub
mov
sbb
dec
xchg
enter
jnp
mov
rcr
in
xor
fild
loop
jmp
sub
aad
dec
cli
mov
fnstcw
ficom
cs
inc
xchg
xchg
add
push
mov
out
pop
retf
ficom
mov
enter
sub
xor
scas
xor
sbb
push
sar
and
dec
loop
sub
loopne
inc
pop
jl
(bad)
xchg
clc
(bad)
sahf
mov
mov
jge
lahf
xor
dec
xlat
fcmovne
and
dec
in
scas
loop
int
sub
outs
mov
pop
call
mov
dec
xor
out
and
iret
outs
cmp
xchg
lods
jae
imul
xor
aas
(bad)
stos
pop
add
int3
pop
push
in
cmps
fsub
mov
sbb
clc
fiadd
dec
push
dec
cmps
cld
clc
sbb
xchg
push
sbb
mov
aaa
pusha
in
ins
dec
cmp
push
cli
loopne
or
fsubr
mov
mov
cmp
imul
mov
and
fucom
mov
inc
stos
push
aas
aam
fnstenv
loope
or
in
push
mov
mov
pop
add
cmp
popa
inc
nop
sbb
leave
sbb
mov
ss
sbb
push
add
push
cmp
lds
adc
fsubp
jg
xlat
push
sbb
cld
mov
fisttp
jp
stos
xchg
mov
in
cmc
xchg
add
fstp
lods
push
enter
xor
sub
ins
mov
rcl
lock
cs
mov
sbb
cmps
xchg
hlt
in
mov
inc
repnz
mov
(bad)
and
pop
out
cs
pop
dec
cmps
pop
xchg
cmp
sbb
xchg
and
ret
dec
sub
das
out
ja
ins
sbb
or
mov
aaa
sti
out
or
mov
dec
inc
lds
mov
mov
leave
mov
addr16
adc
rol
dec
pop
mov
xchg
test
scas
out
rcr
xchg
popa
xchg
jbe
sbb
fwait
or
mov
pop
inc
stc
aad
jno
add
cwde
mov
aad
xchg
mov
les
pop
ds
add
and
xor
cmp
fsubr
dec
xchg
push
aam
call
aaa
ficomp
mov
loopne
scas
or
loope
xchg
mov
mov
test
or
retf
inc
es
dec
xchg
jle
push
mov
lock
outs
sbb
mov
dec
gs
mov
int
sub
ror
jmp
push
jmp
leave
xchg
fimul
sbb
int
mov
inc
in
cmp
jae
and
into
clc
sbb
mov
sbb
jle
push
sbb
sbb
stos
or
loopne
loopne
mov
dec
(bad)
popa
xlat
push
xchg
std
mov
scas
test
inc
add
mov
xor
xor
cmc
jo
xchg
sti
sar
xor
add
(bad)
xchg
inc
addr16
in
popf
sbb
int3
push
popf
bound
push
dec
mov
cmp
stos
mov
cmp
xchg
xor
iret
push
inc
rol
outs
rcr
jo
cld
add
jno
cli
jmp
ret
push
mov
mov
lock
push
inc
pop
xchg
add
sbb
cdq
dec
sbb
inc
imul
fdiv
jmp
loop
mov
fist
pop
mov
jl
into
mov
sbb
fisub
sub
pop
push
dec
mov
nop
fsubr
xor
scas
test
pop
loopne
push
clc
iret
movs
or
dec
fst
pushf
push
cmp
mov
sbb
mov
fadd
jo
jl
xchg
ror
mov
stc
and
inc
(bad)
stc
dec
push
jecxz
shl
in
ins
into
fs
inc
and
dec
loop
mov
jg
rol
mov
cwde
pop
sub
lds
pop
push
xchg
push
dec
int
inc
inc
jnp
fwait
pop
dec
fisttp
mov
(bad)
push
scas
neg
and
jae
sahf
dec
push
inc
cli
fs
das
dec
pop
sbb
lods
inc
nop
inc
inc
jl
inc
xchg
add
xchg
out
xor
pop
addr16
jp
pop
pop
adc
sti
movs
jno
test
xchg
scas
lea
cmc
mov
scas
iret
xor
(bad)
jmp
aam
jge
fiadd
mov
lahf
(bad)
out
loop
popf
movs
inc
addr16
(bad)
test
popa
mov
std
das
ins
mov
sbb
xchg
add
sbb
movs
test
jae
sbb
es
or
dec
mov
xor
rcr
ficom
mov
jo
aad
ret
pusha
shl
test
stc
ss
mov
fyl2xp1
jns
xor
mov
mov
pop
mov
dec
movs
push
inc
bound
adc
or
xchg
push
or
or
push
dec
sbb
xchg
pop
push
pop
jae
(bad)
int3
pop
ror
retf
xor
xlat
(bad)
and
or
xor
rcr
shl
pop
add
(bad)
cmps
xchg
(bad)
and
mov
and
shr
and
xor
cld
aaa
popf
cmp
outs
sbb
(bad)
pop
enter
ss
psubusw
mov
repnz
push
jmp
or
sub
std
in
cmp
pop
jl
call
hlt
fwait
in
idiv
and
daa
mov
inc
mov
loopne
mov
mov
js
push
sub
sahf
iret
jl
shl
pop
sub
fmul
aad
cmp
outs
shl
mov
jmp
xor
sbb
jecxz
pop
jno
test
ds
adc
in
jmp
mov
fist
(bad)
test
cmp
je
les
in
scas
mov
xchg
gs
daa
pop
and
jae
or
movs
js
mov
sbb
(bad)
stc
jnp
cmp
pop
dec
jae
xchg
add
lock
mov
add
icebp
dec
hlt
sbb
fiadd
add
push
in
pop
pop
fxam
jg
and
call
add
cmp
unpcklps
pushf
push
fwait
mov
ja
aam
sbb
rcl
push
mov
test
sti
mov
ins
dec
and
addr16
fstp
lock
xchg
loopne
sti
xcrypt-cfb
cmps
xor
je
scas
pop
push
ret
in
arpl
mov
mov
jb
aam
push
jge
mov
xor
inc
push
ins
mov
clc
or
adc
push
adc
add
push
xor
push
loope
rcr
cli
enter
fist
xchg
or
push
mov
jecxz
or
ss
jle
pushf
push
inc
inc
mov
test
loope
rcr
mov
mov
cmp
cmp
ds
shl
fwait
push
sbb
(bad)
test
add
jmp
dec
nop
outs
test
xor
(bad)
dec
pushf
imul
ret
mov
(bad)
fadd
mov
std
push
dec
test
cmp
sar
and
in
cmp
fnstenv
ficom
rcr
not
pop
or
icebp
xor
push
mov
movs
repz
and
(bad)
sbb
mov
addr16
mov
pop
sbb
(bad)
mov
add
jno
ins
add
push
call
inc
lods
movs
adc
retf
iret
jg
nop
sub
push
loop
dec
xchg
cdq
loopne
sahf
add
push
jle
(bad)
fimul
idiv
movs
jle
ins
fldenv
jo
ds
jmp
jno
imul
inc
sub
cmp
mov
(bad)
int
test
fimul
pop
mov
cs
test
fnstcw
pop
push
loop
call
adc
retf
mov
push
push
loop
out
dec
push
neg
(bad)
push
cmp
stc
shl
sti
addr16
push
add
and
add
addr16
and
push
outs
add
xor
mov
push
push
test
pop
or
inc
or
hlt
cmp
addr16
setp
xchg
int3
int
xchg
out
xchg
(bad)
mov
mov
mov
xchg
std
je
jl
xchg
pop
add
pop
nop
pusha
dec
pop
push
stc
sti
aaa
dec
xchg
push
daa
jmp
xchg
mov
hlt
pop
or
(bad)
xlat
mov
fwait
add
data16
rol
cmc
mov
loope
add
lea
jmp
(bad)
adc
lahf
movzx
cmp
stos
bound
sub
xchg
neg
repnz
mov
and
sbb
cs
push
mov
adc
pusha
popa
mov
inc
dec
ficom
add
or
cmp
jge
test
(bad)
fst
out
xchg
movs
add
push
xchg
enter
stc
and
adc
inc
mov
adc
mov
pop
xchg
rcl
out
jae
or
es
gs
push
jno
imul
push
dec
add
xor
mov
pop
push
adc
stos
scas
push
cmps
pop
(bad)
mov
inc
(bad)
inc
push
sahf
and
inc
mov
nop
pop
pop
movs
test
jb
fwait
cmps
jmp
outs
mov
neg
inc
mov
std
add
or
pop
xchg
inc
fwait
jmp
mov
xor
fadd
fist
or
fimul
ja
aas
stos
cmp
mov
(bad)
fisttp
jo
sub
lods
rol
arpl
cmps
pop
cmps
or
in
sbb
jmp
or
mov
sub
loop
jnp
pop
clc
lea
dec
dec
jae
push
fs
sub
mov
or
add
jmp
adc
jle
out
push
xor
retf
pop
dec
push
jmp
es
mov
pop
and
xor
inc
outs
mov
daa
in
call
dec
cmc
xchg
aad
pop
loopne
enter
inc
jnp
cmp
inc
inc
test
int3
xor
pop
mov
fs
inc
outs
sub
mov
mov
mov
push
in
daa
sti
outs
cmp
in
enter
mov
call
push
lds
test
push
dec
repnz
xlat
fadd
pop
leave
punpckldq
inc
outs
dec
push
pop
dec
pop
pop
in
imul
pop
dec
xchg
in
adc
and
mov
xchg
sub
js
xchg
pop
and
xor
popa
inc
and
inc
(bad)
daa
mov
out
stos
ror
pop
shl
daa
sub
lods
mov
fld
icebp
mov
movs
jne
fcomp
mov
pop
scas
and
call
daa
addr16
cld
fstp
cmp
fisub
inc
cmp
xchg
jmp
shl
add
das
rcl
jne
fsub
scas
inc
mov
pop
mul
repz
pop
cdq
pushf
(bad)
ficomp
int
jae
fisubr
mov
sahf
loopne
(bad)
jg
aaa
xor
dec
cmps
lds
add
cld
movs
jmp
or
sub
inc
movs
stc
(bad)
div
mov
mov
xchg
fistp
sub
rcl
pop
popa
aad
push
out
rol
sbb
in
pop
push
xor
mov
(bad)
shr
lea
arpl
mov
retf
icebp
fnsave
pop
popa
shl
cmp
lock
js
addr16
call
cld
imul
(bad)
loopne
cmp
leave
int3
test
(bad)
mov
cmp
pop
(bad)
sahf
outs
loopne
fmul
mov
sbb
(bad)
mov
test
mov
mov
add
adc
(bad)
pop
push
add
and
xor
(bad)
out
sbb
adc
xor
leave
mov
dec
adc
pop
jle
add
mov
cwde
add
push
mov
gs
inc
push
int
mov
sahf
movs
or
cld
(bad)
arpl
pop
inc
adc
or
dec
cmps
adc
dec
lahf
xor
mov
sbb
jno
ficomp
jl
ss
sub
inc
lods
add
scas
lods
push
push
hlt
mov
mov
add
jmp
pop
pop
(bad)
cld
je
pop
adc
sub
daa
out
leave
loope
mov
rcl
and
data16
loop
xchg
mov
ror
mov
mov
ins
mov
dec
push
scas
dec
mov
rcr
push
jae
xchg
retf
push
in
inc
outs
fcomp
xor
pushf
add
cmp
mov
mul
shl
xor
sbb
call
(bad)
mov
call
clc
add
pop
(bad)
push
stos
and
inc
les
pop
push
sbb
movs
push
cmps
fldcw
or
cmc
or
sti
push
cwde
jle
pop
push
aam
imul
(bad)
xor
xor
dec
cmp
ret
add
pusha
inc
cld
loopne
mov
xchg
adc
ret
scas
or
pop
inc
add
dec
push
and
shr
out
add
mov
sub
into
js
inc
(bad)
cmp
shl
xchg
dec
pop
into
arpl
pop
mov
fs
xchg
pop
jne
cs
mov
and
pop
mov
pop
dec
test
inc
cmp
dec
dec
enter
addr16
scas
add
inc
fdiv
or
pushf
(bad)
pop
add
cs
pop
dec
push
adc
fcomp
addr16
imul
sbb
and
(bad)
xor
imul
outs
mov
xchg
adc
pop
xchg
jb
lahf
ss
test
xor
int3
jg
mov
shr
pop
push
xorps
loopne
xchg
sbb
mov
adc
call
push
jae
popa
jg
enter
movs
mov
sub
dec
cmp
mov
retf
ja
cmp
mov
mov
lea
(bad)
outs
inc
inc
pushf
jp
div
jg
inc
adc
fisttp
cmps
cdq
test
push
push
xchg
sbb
call
push
loope
sti
jnp
inc
adc
(bad)
push
dec
add
jmp
adc
cmp
repnz
and
int3
fldcw
jg
pop
(bad)
scas
dec
push
cmp
cmp
xchg
jnp
popa
lods
sub
add
into
sti
inc
jge
fwait
je
xchg
fadd
outs
sbb
dec
in
dec
cmp
sar
pop
mov
jnp
adc
sti
mov
dec
mov
mov
or
(bad)
mov
out
push
mov
mov
daa
inc
out
lds
add
sbb
inc
adc
test
add
jl
and
outs
jo
dec
mov
sub
mov
push
cmp
fcomp
fwait
push
out
outs
mov
and
mov
or
mov
bnd
pop
or
mov
mov
mov
out
push
xchg
bound
xor
inc
shr
dec
fwait
sti
dec
jns
stos
inc
add
rcr
jg
inc
add
ss
lods
and
outs
push
dec
sbb
pop
mov
or
lock
mov
leave
push
cmc
xlat
add
dec
out
fmul
dec
outs
int
lods
add
arpl
sbb
ds
jne
sahf
in
cld
fsubrp
mov
cmp
fidivr
pop
cs
test
push
xchg
imul
xchg
sbb
lock
bound
jne
pavgb
daa
push
or
test
cmps
loopne
test
loope
les
pop
sub
js
sub
mov
jge
stos
sub
pop
aam
sbb
jne
scas
xchg
pop
inc
psubb
pop
mov
xor
fdiv
mov
sub
popf
or
jnp
aas
jb
enter
xor
call
out
fidivr
adc
std
movs
cmps
in
fistp
mov
sar
add
push
jae
dec
jne
adc
and
(bad)
push
aaa
push
push
pop
(bad)
mov
mov
mov
xchg
test
jmp
adc
xlat
pop
arpl
dec
mov
mov
mov
mov
jecxz
dec
pop
mov
mov
sbb
in
fcmovu
sub
adc
jno
or
adc
in
and
adc
daa
loopne
xor
repnz
sbb
or
jno
adc
neg
sub
jbe
(bad)
in
ss
fdiv
add
inc
ror
addr16
scas
cdq
or
setl
and
inc
outs
scas
arpl
pushf
push
rol
(bad)
bound
pop
sbb
sbb
and
retf
(bad)
imul
sub
ds
jg
xchg
jmp
cmp
lahf
or
cwde
jo
or
xor
ret
add
ja
inc
adc
mov
xchg
cwde
pop
and
repz
ror
inc
ds
pop
cmp
arpl
mov
pop
dec
sub
rcl
add
push
jl
sub
scas
out
mov
push
popa
adc
dec
sahf
xchg
in
pop
xchg
jmp
stos
mov
add
fdiv
mov
or
xchg
in
xchg
lea
adc
sbb
mov
(bad)
jmp
retf
inc
or
inc
dec
sti
push
lahf
mov
in
lahf
daa
(bad)
cwde
stos
dec
sbb
ds
fcom
jmp
cmp
xchg
inc
push
iret
pop
jecxz
or
fistp
dec
jmp
pop
pop
out
repz
and
or
push
inc
enter
pusha
out
mov
ret
adc
mov
xor
fwait
mov
push
rcr
lods
or
movs
movs
and
jp
mov
imul
adc
out
adc
adc
nop
sbb
aam
jbe
jle
shl
add
xchg
loope
cld
xchg
std
xlat
mov
mov
mov
std
pop
popa
jne
cmp
jae
imul
movs
repnz
fucompp
pop
mov
sti
shl
dec
mov
rol
pop
loop
fcomp
enter
inc
out
cs
inc
fidiv
ss
in
(bad)
jnp
leave
mov
push
dec
test
cmps
dec
pop
rcl
outs
xchg
or
fs
dec
pop
add
mov
(bad)
push
mov
not
adc
xor
ins
push
cdq
imul
aaa
lods
sub
jge
xor
aaa
or
dec
jae
pop
xchg
fadd
scas
dec
jl
(bad)
adc
loope
or
arpl
in
std
mov
sti
movs
ins
mov
in
mov
adc
pop
aaa
(bad)
mov
hlt
dec
div
push
add
and
push
cld
out
sahf
dec
dec
jecxz
sar
mov
cmp
je
xchg
adc
sub
sbb
push
xchg
xor
pop
je
lods
loop
push
loop
repnz
shr
mov
push
xor
cmc
ret
adc
neg
xor
adc
fstp
push
mov
lea
inc
mov
or
lods
add
mov
icebp
push
pop
cmp
loopne
mov
push
call
es
sbb
pushf
scas
fcom
push
or
push
add
sbb
sbb
sar
sbb
cmp
pop
cmp
xor
pop
int3
in
test
sub
(bad)
inc
adc
ja
pop
in
add
inc
inc
dec
(bad)
fstp
xlat
adc
add
lahf
jge
fild
jmp
jle
add
jbe
fwait
test
and
jp
lock
pop
mov
or
mov
inc
sbb
stos
xchg
stos
and
push
mov
out
sahf
mov
sti
arpl
int
imul
int3
aaa
dec
das
mov
xor
push
(bad)
(bad)
aad
icebp
test
adc
stos
int
rol
add
sbb
sbb
pop
jmp
rcr
adc
arpl
xor
add
mov
dec
ins
inc
test
or
add
mov
test
(bad)
mov
dec
sub
ret
imul
out
sub
dec
mov
popf
sub
add
push
fidivr
xchg
or
(bad)
dec
hlt
int3
fwait
mov
popf
xchg
retf
lahf
cmp
test
shl
adc
inc
and
mov
pop
repz
fwait
add
(bad)
xor
sbb
push
fcmovnbe
stos
cmc
rol
jmp
leave
adc
or
fcmovb
cdq
xchg
xlat
add
mov
push
dec
push
hlt
pop
nop
push
mov
lods
xchg
not
retf
pop
mov
mov
aaa
mov
sbb
mov
test
push
dec
repnz
mov
fbstp
cwde
iret
mov
jmp
cwde
shl
xor
mov
pop
sub
(bad)
(bad)
loop
jbe
fcom
sub
mov
push
test
sbb
xchg
mov
adc
call
clc
popf
push
rcr
jmp
jp
add
jmp
adc
jecxz
xor
mov
addr16
xor
xor
pop
mov
(bad)
in
(bad)
ds
popf
rol
xchg
sbb
aaa
aaa
push
lea
mov
int
jle
pop
add
sub
dec
jg
or
push
or
pop
add
scas
mov
jo
jnp
es
call
inc
aad
xchg
jmp
inc
and
fimul
jae
adc
inc
adc
mov
cmps
and
inc
dec
jp
shl
add
sub
jbe
add
loopne
lods
(bad)
push
js
push
xchg
push
push
xchg
mov
je
dec
out
cdq
dec
add
sti
loop
mov
dec
mov
push
sahf
fwait
mov
mov
pop
out
jo
(bad)
pop
xchg
add
adc
rcr
(bad)
loop
sahf
mov
jecxz
in
retf
test
mov
jnp
adc
sbb
mov
xor
ror
ret
push
push
push
(bad)
xchg
ins
(bad)
pop
pop
aad
mov
(bad)
inc
cmp
pop
xchg
add
inc
xor
loop
sbb
(bad)
test
jmp
(bad)
pop
dec
and
arpl
call
push
jno
je
int3
adc
cmps
pop
test
(bad)
push
sbb
push
test
inc
mov
dec
in
cs
jl
pop
dec
ss
pushf
outs
dec
dec
fisttp
push
in
sbb
xchg
mov
cwde
enter
mov
(bad)
rol
(bad)
ret
scas
add
stos
popf
add
adc
inc
(bad)
repnz
mov
dec
mov
mov
aaa
xchg
and
sbb
hlt
add
jo
inc
dec
loope
daa
sub
stc
icebp
cmp
dec
daa
lahf
mov
neg
xchg
aam
retf
adc
push
rcl
scas
pop
pop
cmps
daa
test
call
cwde
sub
test
mov
and
jmp
pop
fstp
push
dec
mov
xchg
and
fadd
mov
iret
pop
addr16
rcl
adc
mov
scas
xchg
mov
jnp
jmp
mov
(bad)
xchg
mov
daa
push
pop
fmul
rcr
(bad)
pop
push
dec
mov
fdivr
sbb
mov
or
push
sahf
movs
mov
fnstcw
in
dec
mov
mov
aas
sbb
pop
pop
mov
(bad)
lahf
pop
jnp
addr16
or
les
inc
call
pop
fmul
sahf
arpl
pop
pop
ficomp
dec
jne
imul
test
dec
mov
lods
adc
xor
jnp
xor
and
bound
xchg
in
rcl
mov
sbb
and
clc
adc
jl
add
push
push
frstpm(287
ins
sub
dec
mov
shr
(bad)
or
in
hlt
rol
or
sbb
enter
fcmovnbe
sbb
xor
fdecstp
(bad)
lods
lock
jmp
mov
mov
outs
cmc
mov
shl
xchg
jno
and
xchg
sub
ret
push
popa
fld
popf
arpl
(bad)
add
retf
push
sbb
push
(bad)
hlt
jmp
sub
call
push
xlat
xor
xchg
pop
lods
jp
sub
mov
(bad)
dec
mov
push
sub
iret
fsubr
pop
push
aas
lock
repnz
xor
dec
push
pop
inc
ss
adc
mov
inc
rcr
xlat
int3
cmp
dec
bsr
out
jmp
cmps
loopne
inc
cmps
test
xor
pop
mov
and
fst
stos
or
dec
cwde
ins
jl
push
add
sbb
pop
call
in
xor
nop
int3
int3
jmp
shl
pushf
adc
adc
push
jmp
lods
les
mov
adc
mov
lock
mov
imul
push
(bad)
call
pusha
cmp
jmp
sbb
(bad)
aas
cs
cwde
and
cmp
jnp
loope
dec
loope
push
push
push
mov
pop
test
push
sub
jne
aad
push
push
jmp
push
or
std
jbe
mov
jno
dec
pop
lock
pop
aam
pushf
repnz
mov
add
pop
out
loop
pop
push
js
mov
push
sub
fcmovnbe
adc
pop
push
retf
pop
int3
sub
sbb
cmp
daa
jge
dec
cmps
xlat
stc
icebp
(bad)
scas
jo
out
dec
ins
iret
fld
xor
inc
jp
jmp
sahf
add
ds
and
sbb
pop
mov
cmps
jb
jl
and
or
jp
mov
xchg
int
dec
(bad)
jg
or
cmps
mov
cmp
lods
xor
out
ins
pop
cmps
push
xchg
shr
sbb
leavew
(bad)
dec
cmp
jmp
inc
je
and
sbb
cmp
outs
daa
mov
pop
pushf
lods
jge
push
xchg
xchg
(bad)
out
mov
cmp
(bad)
fistp
ins
scas
or
dec
adc
mov
loope
inc
push
adc
jno
mov
sub
repz
xlat
push
scas
and
pop
imul
jmp
ror
(bad)
pop
sbb
dec
shr
(bad)
sbb
dec
ror
xchg
dec
and
fsub
or
sub
aaa
pop
dec
in
dec
sbb
test
icebp
dec
and
mov
call
xor
enter
(bad)
dec
mov
and
dec
mov
call
jecxz
push
xchg
mov
fadd
js
mov
cmp
cmp
adc
repnz
dec
in
data16
repnz
pop
clc
stos
dec
pop
(bad)
fsub
(bad)
aam
scas
mov
inc
aas
jl
adc
fisttp
pop
and
cmc
mov
push
jne
mov
xchg
cmp
enter
and
(bad)
jns
jecxz
int3
sub
outs
pop
mov
mul
pop
(bad)
iret
jmp
mov
push
ret
loop
mov
shl
daa
(bad)
push
mov
pop
aas
aas
jnp
mov
sti
or
pop
xor
int
mov
push
gs
jbe
pop
adc
jmp
addr16
rol
loopne
bound
mov
lods
pop
lock
xchg
ja
jg
dec
fnsave
add
xlat
sahf
lahf
mov
jne
icebp
push
push
ins
xchg
or
push
mov
movs
push
mov
pop
inc
push
push
test
lds
xor
cmp
iret
(bad)
lahf
lahf
inc
stc
adc
das
dec
sbb
sub
test
jecxz
scas
push
dec
pushf
inc
imul
and
movs
xchg
fstp
mov
adc
ds
pop
cmps
fimul
xchg
cmp
mov
sbb
out
mov
or
jle
xchg
sar
mov
in
arpl
fiadd
fs
xor
mov
mov
stc
mov
mov
lds
int3
icebp
push
xor
push
loopne
lahf
jle
cdq
loopne
pop
sub
inc
adc
adc
punpcklwd
outs
(bad)
cli
pop
push
movs
sbb
push
out
pop
addr16
in
cmps
xor
mov
(bad)
enter
push
add
retf
outs
add
dec
sub
out
sti
shl
inc
mov
jb
inc
dec
les
xor
mov
push
cmps
jb
xchg
int3
push
pushf
std
adc
pusha
test
mov
ins
xchg
mov
cmp
mov
adc
repz
mov
mov
rcr
shr
imul
mov
lods
sbb
enter
dec
pop
xchg
jl
sub
movs
xor
dec
adc
shr
(bad)
lods
dec
(bad)
lock
gs
mov
dec
call
mov
push
dec
shl
pop
cli
jo
and
arpl
push
mov
pushf
pop
icebp
sub
dec
mov
loopne
mov
mov
push
test
(bad)
jmp
pop
push
adc
inc
scas
and
add
xchg
xor
xchg
push
fimul
and
jns
popf
loope
xchg
sti
mov
enter
push
pop
out
ret
sar
dec
cwde
mov
sbb
add
out
stos
inc
mov
mov
pop
xlat
add
mov
jmp
pop
mov
mov
and
call
dec
push
xchg
js
sub
shr
enter
jno
leave
dec
test
dec
adc
xor
xchg
cdq
rcl
inc
(bad)
(bad)
hlt
pusha
mov
sbb
mov
sbb
or
mov
(bad)
or
dec
in
loope
fsubp
inc
int3
aad
push
cli
test
sub
push
stc
push
pushf
mov
fisttp
mov
lods
sbb
cwde
add
pop
xchg
sub
inc
gs
add
bnd
enter
cdq
dec
push
cmp
mov
mov
das
or
fisub
cmp
inc
lods
ds
push
cmps
stos
cmps
(bad)
mov
xchg
sbb
lods
mov
movs
mov
setbe
sahf
in
push
mov
jmp
sbb
xchg
retf
ins
sub
cwde
inc
in
add
fdiv
add
fwait
scas
jmp
add
dec
popf
xor
cmp
pop
rcl
sbb
(bad)
xlat
lea
add
cmps
mov
mov
cmp
pop
stc
xlat
loop
push
add
push
jne
pop
inc
jecxz
pop
arpl
add
andps
mov
jmp
jmp
fdivr
jo
inc
add
mov
mov
pop
cmp
cmp
out
dec
dec
sub
(bad)
or
shr
cdq
aam
in
je
add
enter
inc
mov
mov
sub
adc
mov
ror
std
mul
(bad)
retf
mov
int
and
clc
pushf
mov
sbb
push
dec
pop
pushf
sub
sub
fcom
or
rol
dec
xchg
fwait
pop
pop
xor
sbb
sbb
(bad)
mov
fadd
dec
imul
xchg
xor
mov
or
pop
pop
pop
cld
ja
pop
sub
cdq
mov
fdivr
xchg
aaa
fst
fadd
dec
pop
jp
les
dec
repnz
cmp
ret
leave
and
dec
mov
mov
dec
data16
fucomi
cs
mov
cmc
mov
fsubr
and
dec
dec
fcom
push
sbb
jbe
scas
loopne
test
xchg
lds
pop
dec
cmps
ret
fld
jo
sub
test
iret
dec
nop
xchg
xchg
ja
(bad)
icebp
mov
push
adc
jmp
and
xchg
(bad)
ror
nop
or
add
rcl
cmp
push
push
(bad)
push
sub
adc
stc
lds
sbb
pop
ja
sbb
dec
push
fidiv
sub
xor
cmp
or
stos
sar
xor
call
sbb
mov
add
xor
pop
jo
sub
pop
or
pop
jb
pop
push
mov
fdivr
pop
jg
js
shl
std
out
jae
dec
mov
or
int3
ret
test
pop
fcmovu
add
xchg
out
dec
ja
add
cmp
jg
xchg
shr
cmp
clc
sub
xchg
scas
dec
fwait
gs
jp
dec
stc
nop
jnp
inc
sub
jnp
popf
int3
in
or
(bad)
push
js
xchg
dec
iret
inc
retf
leave
jg
int3
jg
es
add
mov
inc
addr16
out
push
dec
pop
cmp
sbb
jne
adc
cmp
push
gs
xor
push
movs
mov
popf
jnp
jmp
fidivr
movs
cmp
jo
not
pop
rol
add
add
in
out
les
rcl
mov
or
dec
gs
inc
cmp
add
cmps
(bad)
js
in
dec
push
ret
xchg
xchg
xchg
in
jno
mov
cmp
cmp
ja
push
lods
push
sub
test
int3
out
adc
push
xor
lods
sub
jp
mov
fld
cmp
xor
sub
cmp
inc
jae
dec
test
rcl
ror
imul
adc
adc
jp
add
jns
outs
sbb
je
call
popf
adc
mov
inc
enter
bound
inc
ja
fcomp
out
add
gs
push
jmp
repnz
sub
adc
pop
and
dec
test
cmp
sbb
jns
pop
pop
rcl
std
cmp
shl
jecxz
fcmovne
js
mov
pop
mov
push
jecxz
add
int3
inc
mov
(bad)
into
loop
stos
lahf
daa
push
jg
sub
repz
call
gs
rcr
xchg
rcl
adc
pop
mov
dec
pop
push
xlat
out
mov
es
mov
mov
xchg
addr16
cmp
xlat
jmp
xchg
(bad)
pop
vpunpckhbw
call
pop
mov
sbb
fsubr
fucom
daa
pushf
je
pusha
pop
xchg
or
mov
or
add
mov
arpl
mov
mov
leave
sti
xlat
hlt
call
popf
loopne
dec
jne
in
unpckhps
jb
sbb
std
mov
pop
ds
adc
pop
(bad)
pop
sbb
jecxz
inc
not
test
dec
loop
push
xor
dec
xor
inc
je
pop
scas
das
and
sbb
loop
aad
pop
adc
mov
mov
imul
jp
data16
int3
shl
and
popf
xchg
dec
das
add
pop
inc
cmp
jmp
sti
jnp
jnp
mov
xor
jl
and
and
jle
sbb
sub
adc
lahf
sub
mov
cs
loop
mov
xchg
rcr
or
jns
ret
push
push
fdivr
pop
pop
div
aam
xor
lahf
sub
fs
dec
mov
fsubr
out
mov
ins
lods
jne
mov
sahf
stc
arpl
push
dec
mov
dec
pop
call
addr16
mov
or
jns
adc
jg
jecxz
mov
imul
addr16
mov
mov
mov
xchg
lock
sbb
fadd
addr16
cmc
mov
in
dec
mov
loop
(bad)
shl
pusha
pop
sar
cmp
rcr
sbb
stos
in
cmps
push
push
icebp
add
dec
jnp
pop
pusha
push
and
(bad)
pop
jle
mov
pop
adc
pushf
jmp
daa
ror
adc
dec
mov
pop
pop
pop
or
adc
mov
or
push
mov
mov
ds
cld
or
mov
daa
shr
cmp
pop
loopne
mov
mul
bound
jbe
sub
jae
jl
pop
cli
add
push
jb
test
test
cmps
aam
ror
sub
or
idiv
push
mov
cmps
shl
xchg
movs
fnstsw
sub
or
js
pop
jge
adc
pop
xchg
push
mov
xor
call
imul
sub
xor
ja
cld
lods
scas
sub
dec
dec
aad
dec
ja
fcom
jns
adc
xor
arpl
lds
dec
imul
inc
ss
fs
leave
add
out
cmp
fbld
push
sub
repnz
cmp
xchg
dec
xchg
int3
int3
lock
hlt
adc
and
jno
cmc
pop
sar
pop
(bad)
enter
pushf
sbb
sbb
dec
mov
jne
jmp
ins
out
int3
sub
ja
aaa
sub
pop
cmp
mov
cmp
pop
pop
xor
mov
mov
sbb
aam
jno
and
popa
cmp
lods
jmp
pop
(bad)
pop
outs
mov
and
mov
xor
push
pop
xchg
imul
ror
dec
dec
leave
out
dec
mov
and
imul
popa
xchg
das
dec
iret
ss
shr
lahf
bound
push
add
iret
xchg
jg
jae
sbb
(bad)
cmp
xchg
shl
mov
cmp
repnz
shr
adc
cdq
enter
addr16
inc
cmps
sub
ret
icebp
lahf
adc
inc
ret
and
inc
mov
and
mov
jbe
inc
pop
dec
int3
mov
je
xor
test
jb
daa
mov
cwde
(bad)
dec
mov
push
ds
mov
stos
jmp
xor
out
dec
cmc
xlat
xor
dec
pop
sub
icebp
iret
cmp
dec
dec
mov
fild
rol
addr16
xor
fs
dec
add
inc
mov
and
(bad)
push
cs
pusha
inc
sub
fimul
dec
mov
mov
shl
dec
inc
xchg
iret
or
mov
pop
jns
mov
xor
(bad)
std
mov
cmp
daa
dec
fsubr
mov
xor
into
cwde
loop
adc
rcl
frstor
push
(bad)
ins
shr
pop
add
pop
sbb
arpl
inc
push
arpl
inc
sub
sbb
or
pop
mov
gs
test
xchg
push
cld
mov
jnp
(bad)
int3
dec
aaa
xor
into
cld
pushf
in
add
push
cmp
addr16
cli
push
push
ds
out
push
sbb
mov
int3
enter
call
outs
pop
cmps
pop
lahf
fcmovnbe
dec
les
mov
jns
sbb
sbb
xchg
mov
sub
aas
in
dec
sub
or
xor
mov
nop
mov
cmc
pop
mov
inc
gs
sahf
dec
jge
outs
xchg
sti
arpl
pop
pop
scas
gs
movs
add
mov
xchg
je
(bad)
mov
aas
jmp
sub
pop
leave
jp
cdq
test
mov
dec
or
inc
mov
xor
xchg
or
inc
inc
sbb
les
pop
rcl
add
xchg
(bad)
mov
pop
add
sbb
dec
mov
dec
cmp
dec
jecxz
rol
lds
pop
mov
fcmovne
mov
pop
fucomi
int
mov
adc
mov
xor
or
daa
jge
jmp
cs
or
aam
jg
mov
shl
sub
pop
or
sub
pop
stos
inc
and
mov
mov
mov
pop
cmps
push
xchg
enter
clc
mov
test
sub
sbb
jno
shl
push
ins
aam
push
repnz
mov
push
cmps
mov
ja
js
mov
cmp
xor
fcomp
or
add
sub
rol
popa
cwde
xlat
mov
rol
clc
mov
pop
jo
int3
arpl
xchg
cdq
and
imul
pop
jle
cmp
pushf
pop
cmps
or
in
sub
sbb
pop
xchg
push
dec
pop
and
xchg
sbb
add
or
fnstenv
cmp
adc
pushf
lock
fcom
enter
nop
cmp
loopne
fs
into
and
jae
mov
push
dec
daa
cmp
dec
jnp
push
sti
mov
add
mov
(bad)
cmc
mov
cmc
cmp
mov
inc
idiv
rcr
jmp
fld
loop
push
scas
mov
fsub
std
push
lock
push
xor
(bad)
addr16
or
gs
movs
jge
xchg
daa
jge
int
dec
xchg
jae
pop
mov
push
inc
call
lds
push
xlat
das
xchg
xor
pop
mov
mov
clc
mov
mov
fadd
push
pop
jg
push
mov
or
lds
test
xchg
shl
cld
ins
fistp
les
clc
jne
jmp
std
xor
jp
xor
retf
add
sbb
xlat
arpl
(bad)
in
aam
jp
fsub
(bad)
jb
clc
mov
mov
out
ins
aam
fmul
dec
push
push
cmp
mov
adc
inc
or
sbb
je
icebp
jmp
or
stc
(bad)
mov
mov
xor
loop
out
fstp
dec
imul
lock
arpl
rol
add
cmp
add
scas
push
inc
(bad)
jmp
push
push
dec
add
jnp
clc
push
mov
push
mov
retf
mov
inc
arpl
or
test
mov
aas
addr16
test
adc
shl
dec
mov
sbb
mov
pop
retf
pop
dec
xchg
shr
jne
inc
mov
cmps
cmc
divps
jae
int
hlt
push
stc
sbb
or
sbb
pop
push
outs
imul
mov
int3
adc
shl
fild
add
dec
and
xlat
mov
xlat
mov
cmp
jl
in
mov
inc
call
adc
js
jp
rol
int3
ja
xchg
inc
rcl
(bad)
or
sahf
stos
dec
cli
in
sub
out
dec
aaa
lea
jge
pushf
stos
dec
stc
dec
scas
jmp
mov
test
outs
mov
or
jo
xchg
aam
clc
xchg
leave
jae
mov
bsf
loop
test
sub
scas
gs
fild
mov
and
mov
in
movs
shl
pop
cmps
mov
sbb
pop
jb
sub
push
mov
std
fist
push
xchg
xor
gs
pop
push
dec
aam
dec
movs
push
test
mov
cmp
fldcw
ins
jb
cmp
fldcw
clc
pop
test
aas
rcl
popf
mov
loopne
pop
jp
sub
not
jg
popa
outs
retf
lods
dec
ins
add
loop
and
push
stos
inc
scas
add
add
test
daa
pop
js
jle
adc
sti
dec
outs
cmp
and
daa
sbb
dec
out
cdq
daa
adc
mov
stos
mov
sahf
daa
sub
xchg
int3
movs
sbb
pop
pop
aad
inc
lock
shl
or
outs
xchg
push
push
jmp
int3
nop
push
push
pop
mov
mov
aaa
sti
xor
sahf
pop
pop
inc
je
rcr
data16
lods
push
push
cld
sbb
hlt
add
out
imul
jne
mov
mov
popf
retf
stc
cmps
lods
stc
xchg
cwde
icebp
sahf
push
mov
pop
ja
aam
xchg
jno
cli
and
push
and
cmp
pushf
out
sbb
xor
lods
dec
ins
sub
push
ins
cmc
xchg
or
jnp
arpl
(bad)
pop
jnp
dec
lods
leave
into
cmp
(bad)
pop
mov
mov
(bad)
test
mov
(bad)
xlat
sbb
push
aam
lds
jmp
cmp
dec
repnz
out
inc
mov
fadd
loopne
cdq
sbb
fwait
sti
add
clc
sbb
or
cld
xchg
addr16
mov
mov
jmp
xchg
movs
xchg
out
adc
cmp
fwait
pushf
(bad)
rcr
jp
rcl
mov
xchg
add
call
fiadd
out
pop
sti
ja
xor
ds
cwde
btc
sbb
lea
pop
sbb
rol
sti
xchg
in
aad
push
outs
test
fisttp
mov
cmp
rol
dec
ror
mov
push
dec
(bad)
dec
inc
push
sbb
push
pushf
xor
mov
fcomp
test
lahf
add
dec
xor
pop
mov
mov
pop
stos
pop
cmps
popf
loopne
jle
enter
test
push
cmc
sub
jb
neg
dec
and
mov
das
pop
aam
xchg
pop
xor
push
ret
jp
xchg
es
iret
inc
std
or
out
xor
pop
cs
inc
inc
jmp
adc
fwait
add
mov
call
hlt
sbb
ror
dec
sub
mov
mov
repnz
js
mov
(bad)
lock
pop
fadd
mov
jg
enter
call
mov
sbb
add
je
(bad)
push
jnp
or
call
cmp
sub
push
push
cmp
rcl
or
adc
push
push
jae
pop
jecxz
arpl
call
fist
push
cmp
lds
ds
ins
inc
push
or
xlat
(bad)
jnp
aas
mov
fcmovbe
cmp
in
dec
cmp
mov
not
sub
lock
shl
xor
pop
mov
inc
lock
jg
push
push
pop
into
ror
in
sub
int3
and
dec
addr16
add
movs
aaa
in
lds
xor
fadd
dec
pop
add
xlat
jno
xlat
sbb
mov
loopne
jne
sti
xchg
or
retf
inc
adc
int3
mov
ins
mov
xchg
pop
mov
sbb
stc
das
in
lods
sub
sub
or
dec
sbb
sub
std
lods
test
bound
mov
fwait
sbb
sub
pop
sub
fst
jae
inc
sbb
imul
out
push
adc
push
enter
pop
xchg
(bad)
jmp
xor
or
xchg
loopne
xor
or
pushf
icebp
inc
fcom
popa
pusha
mov
sbb
push
push
push
icebp
jmp
daa
or
aas
inc
dec
jns
int3
sahf
mov
mov
lock
or
inc
dec
(bad)
fcom
xor
pushf
ror
adc
and
cmp
shl
jmp
mov
aas
mov
xor
stc
jnp
(bad)
dec
xor
adc
int3
push
mov
rol
fisubr
mov
popa
js
mov
lods
jge
int
mov
add
xchg
sub
mov
lods
mov
cld
dec
in
xchg
fisub
repnz
push
pop
popa
pop
inc
pop
or
inc
cmp
sub
ret
pusha
mov
push
ds
sbb
inc
aas
push
pop
jecxz
inc
dec
cld
dec
in
push
out
push
adc
xor
(bad)
(bad)
xchg
lods
pop
inc
sbb
outs
aad
lods
mov
mov
fxtract
sub
xchg
adc
or
sbb
repnz
mov
inc
rcr
fwait
neg
sbb
push
neg
adc
dec
mov
sub
mov
push
ret
pop
sbb
sbb
cmp
sbb
ja
rcl
(bad)
fldenv
push
add
jmp
rol
out
adc
pop
out
jge
adc
pusha
push
xor
sub
cmps
out
mov
call
lods
enter
mov
fnstcw
in
add
push
mov
sti
mov
adc
inc
add
jmp
shl
mov
and
mov
fistp
push
arpl
or
cmp
(bad)
cmc
pop
stc
pop
cmc
imul
pop
arpl
fmul
jno
jecxz
mov
mov
test
loopne
mov
adc
inc
cmp
movs
rcl
rcr
xor
cwde
sar
pop
sbb
push
imul
xchg
xor
fwait
sub
or
lods
mov
je
test
fwait
(bad)
repz
sbb
push
movs
mov
xor
call
out
rcr
jno
add
push
out
icebp
ins
mov
sti
pop
ja
pop
movs
(bad)
sub
sub
std
add
fild
sbb
jp
(bad)
loop
stc
pop
or
sub
sbb
int
or
inc
and
pop
add
dec
aam
sbb
mov
in
retf
add
xlat
xchg
ins
ret
cmp
cld
(bad)
xchg
neg
and
push
clc
adc
jnp
xchg
int3
fld
hlt
fldcw
cmp
adc
imul
movs
aam
dec
inc
push
xor
push
sbb
sub
aad
mov
stos
(bad)
fiadd
adc
adc
add
jmp
(bad)
cmp
dec
push
jmp
inc
jecxz
pop
cmp
(bad)
mov
stos
lock
sbb
out
sahf
fistp
or
or
sub
out
(bad)
sbb
pop
pop
in
adc
ins
cmp
inc
fistp
mov
aad
sbb
lods
push
xchg
fdiv
out
add
mov
(bad)
pop
pusha
lds
cmp
bound
add
cmp
pop
adc
mov
fdiv
mov
cmp
dec
mov
das
mov
cs
and
(bad)
jmp
jnp
sub
xor
sti
push
xor
and
push
adc
fcomp
popf
xor
aam
jbe
sbb
dec
aas
cmps
pop
and
movs
pop
popa
or
push
and
dec
movs
xor
cmps
jo
mov
sub
loopne
cdq
je
fidiv
cwde
sbb
mov
adc
sub
je
es
(bad)
dec
ret
pop
mov
leave
gs
xchg
imul
jge
or
loope
mov
aad
sub
pop
adc
sub
shl
dec
sbb
idiv
inc
mov
pushf
sbb
mov
loop
mov
arpl
movzx
sbb
jb
out
sub
leave
(bad)
xchg
out
ins
add
outs
sub
rcl
cld
mov
loopne
ret
pop
or
dec
pop
and
push
hlt
cmps
inc
mov
cmp
jno
inc
jne
mov
inc
adc
cmp
ds
(bad)
push
test
xor
add
outs
dec
sbb
xor
arpl
sti
or
pop
ret
imul
push
xchg
jmp
xor
or
stos
dec
adc
cwde
in
xchg
in
scas
cli
sub
sbb
cwde
sbb
fcom
mov
(bad)
mov
xchg
(bad)
pushf
cld
mov
or
adc
scas
inc
lods
jp
cmp
sbb
dec
inc
and
xor
inc
pop
(bad)
adc
aaa
scas
dec
sbb
call
jle
pop
out
iret
loopne
or
outs
(bad)
sbb
push
call
or
mov
aad
jl
push
xor
mov
fisubr
es
dec
sar
inc
mov
sub
dec
push
adc
shr
fild
push
ja
not
xchg
iret
imul
push
test
cli
cmc
js
into
mov
sbb
dec
push
out
dec
shl
out
into
mov
shl
lods
mov
ins
mov
inc
cmp
in
push
adc
leave
ja
pop
jbe
and
dec
push
hlt
inc
addr16
out
movs
cmps
idiv
push
rcr
mov
in
rcl
(bad)
xchg
shl
cdq
push
inc
add
mov
and
lock
fmul
mov
sbb
daa
int3
sub
pushf
add
stos
scas
mov
int3
and
lock
fcomp
out
fmul
xchg
hlt
xchg
dec
mov
cmp
inc
mov
int3
fiadd
or
aaa
push
add
jp
imul
push
push
push
rcr
xchg
or
xchg
pop
arpl
cmp
es
fdivr
test
int
inc
push
mov
xlat
ds
jp
in
push
cmp
sub
sub
lea
push
pop
cmp
lods
fstp
clc
(bad)
cmc
inc
std
push
mov
dec
in
mov
out
les
xor
pop
dec
hlt
sub
cmp
mov
jb
mov
pop
lock
cmp
dec
(bad)
fimul
mov
sbb
in
sub
sbb
cwde
loopne
gs
pop
mov
mov
mov
sbb
mov
xlat
inc
pop
fcom
push
lock
mov
jno
or
lods
jnp
enter
pop
into
test
imul
xor
leave
pop
or
cdq
jle
mov
dec
in
in
mov
(bad)
mov
ror
or
ss
inc
push
cmp
adc
xchg
mov
cmp
jle
(bad)
push
fnstcw
fistp
daa
xchg
cdq
jnp
jnp
icebp
cdq
outs
cld
mov
fdiv
mov
fist
mov
(bad)
pop
jg
rol
jmp
mov
mov
add
mov
jmp
jo
ret
mov
xor
pop
push
mov
sub
sub
mov
icebp
div
les
das
aaa
call
jbe
daa
sub
ins
jle
and
stos
aaa
enter
push
cmp
or
pop
jge
rcl
aas
inc
cmp
cmp
mov
lods
xlat
xchg
test
jecxz
cs
dec
shr
mov
pop
scas
xchg
or
sub
sti
loope
mov
push
test
(bad)
mov
test
add
loope
je
gs
(bad)
mov
mov
inc
imul
ret
jecxz
imul
mov
fisubr
shl
imul
dec
and
mov
pop
cmp
test
cwde
push
cli
add
xchg
dec
push
xor
sub
bound
in
sti
mov
mov
cmp
dec
jno
call
cwde
retf
ss
adc
dec
push
ret
mov
fld
popf
xchg
pop
cs
loopne
imul
fsubr
fbstp
cmp
in
(bad)
mov
es
fwait
cli
cmp
in
fidivr
cmps
fwait
scas
sub
jg
mov
mov
icebp
push
loope
std
mov
mov
cld
mov
or
cmc
cmps
dec
popa
loope
jmp
arpl
adc
pop
outs
call
in
iret
pop
jle
push
xchg
xor
lods
inc
dec
xor
adc
aam
jl
cmp
call
sbb
fst
pop
enter
xchg
and
push
fadd
ror
add
(bad)
cmp
xchg
ins
(bad)
loopne
fisub
rcr
es
ss
stos
retf
shl
sti
mov
and
pop
test
jle
mov
je
cmp
pop
mov
ss
jmp
mov
and
mov
adc
fist
dec
or
ins
push
in
fwait
cli
scas
adc
xor
call
std
cdq
cmp
retf
popf
cdq
push
nop
(bad)
mov
ret
pop
sbb
fwait
inc
fdivr
mov
aaa
bound
addr16
jmp
iret
jnp
pop
call
ret
jb
(bad)
in
jne
sbb
cs
dec
push
(bad)
fwait
les
pop
jg
xor
sbb
pop
mov
mov
gs
add
out
pop
xor
and
fsubr
add
mov
cmp
(bad)
push
rcr
hlt
xchg
stos
xchg
cmc
mov
mov
ficomp
pushf
jg
sub
les
xor
imul
mov
cmc
push
pusha
jae
adc
stos
sub
js
sub
js
sub
fisubr
ins
addr16
mov
or
add
dec
addr16
sahf
int3
out
add
mov
hlt
ja
lock
(bad)
fbld
pop
(bad)
fild
(bad)
in
adc
ds
addr16
or
push
shl
(bad)
test
mov
icebp
sbb
cmc
es
(bad)
jg
lds
scas
cmps
jl
sub
cmp
mov
jmp
outs
cmp
adc
inc
or
inc
pop
sub
push
ss
sub
les
ins
clc
mov
(bad)
daa
imul
addr16
lea
in
test
ins
mov
pop
xchg
push
ret
push
dec
fimul
sub
cmps
xor
inc
cs
fild
jle
pop
test
adc
int3
pop
lds
xchg
push
mov
sbb
dec
aaa
data16
(bad)
in
shl
les
and
outs
scas
push
sar
dec
mov
adc
scas
iret
scas
xor
outs
dec
test
mov
ss
es
inc
inc
pop
or
cdq
fsub
mov
mov
rcr
dec
cdq
cwde
add
fimul
neg
dec
and
push
sub
jne
fdiv
or
cdq
sub
gs
aad
sbb
mov
dec
pusha
ins
loopne
out
sbb
mov
xchg
cmp
ds
xchg
int
push
cs
and
and
sub
push
ins
retf
inc
aam
dec
imul
ds
call
fcmovu
add
out
rcl
daa
lods
jb
fdivr
sbb
rcr
xchg
sub
mov
xchg
(bad)
add
jno
push
and
sub
jae
and
js
mov
jge
sbb
push
imul
jmp
mov
push
leave
scas
rcr
aas
xor
ret
mov
(bad)
push
mov
jp
jns
mov
inc
popa
pop
mov
xchg
cmp
cmps
fmul
ficom
hlt
(bad)
xchg
fst
fsubr
mov
jo
pushf
pop
pop
xchg
(bad)
cmp
cmps
pop
inc
popf
faddp
mov
adc
push
pushf
mov
mov
jl
sbb
cmc
sbb
out
pop
push
or
fsub
repnz
push
movs
rcl
pop
push
mov
cld
pop
stc
jnp
push
jle
mov
mov
dec
stos
mov
mov
dec
pop
or
cwde
xchg
cmp
cmc
aad
pop
mov
jb
arpl
push
xchg
div
mov
sub
sub
int
push
bound
gs
mov
adc
dec
push
dec
mov
sbb
xchg
movs
pop
mov
int
test
shl
cs
or
pop
add
lods
arpl
add
test
jbe
cmp
push
pop
xchg
xchg
jo
mov
out
mov
pop
not
aaa
push
push
int3
mov
cld
pop
cli
inc
jl
mov
in
(bad)
sbb
iret
pop
mov
mov
mov
xchg
dec
ror
ins
(bad)
movs
call
push
in
je
addr16
dec
mov
sub
adc
or
mov
mov
push
xchg
ins
std
cdq
cmp
adc
adc
in
retf
stos
outs
fs
addr16
xor
aas
or
rcl
ds
fisubr
idiv
sbb
or
mov
jne
dec
sub
and
push
and
nop
stc
pop
add
push
jb
mov
fcomp
push
push
sbb
dec
call
in
mov
pop
cmc
inc
pushf
mov
adc
shr
or
sbb
ficomp
add
jl
mov
(bad)
mov
mov
xor
xchg
loope
push
sar
dec
retf
fsubr
mov
jns
add
popa
cld
sbb
stc
test
daa
mov
movs
das
movs
lds
mov
test
sbb
ds
xchg
(bad)
cmp
cmp
arpl
loop
(bad)
sub
lds
jmp
and
daa
push
or
ins
jp
pop
cwde
aam
daa
xlat
and
hlt
sar
inc
out
ins
cdq
lea
cmp
repnz
mov
sub
xchg
add
cmp
pop
push
imul
pop
fwait
mov
or
lahf
mov
add
mov
fild
push
test
stos
pushf
loop
xchg
pop
mov
xchg
dec
dec
lahf
mov
cmp
cmp
call
ins
ficom
ficomp
retf
imul
imul
aam
mov
mov
aas
loopne
cmps
test
clc
fnstenv
pop
pushf
clc
adc
stc
stos
test
pop
cld
adc
or
cmp
fwait
and
aas
imul
jnp
inc
dec
fs
addr16
inc
movs
rol
and
add
jns
dec
sti
add
xchg
js
pushf
mov
ret
dec
mov
add
xlat
aad
dec
cmp
jns
jo
mov
pop
push
in
mov
or
aaa
mov
xchg
je
mov
in
pop
and
div
out
ror
inc
jge
(bad)
fcom
rol
push
dec
dec
sbb
cli
and
clc
jle
mov
push
rol
mov
push
mov
les
push
out
xchg
adc
mov
pusha
push
dec
imul
dec
lea
sub
dec
cmp
push
add
adc
mov
cmp
enter
popw
outs
add
sbb
in
ret
fistp
fiadd
inc
mov
mov
xor
jecxz
push
cdq
(bad)
xchg
push
xchg
fucomp
jnp
ror
in
mov
xchg
cmps
int
dec
adc
mov
pop
repz
jne
mov
xor
stc
push
sbb
int
cmp
pop
xchg
ror
loopne
xchg
(bad)
sub
adc
push
cld
jmp
inc
mov
stc
jp
jge
imul
lock
addr16
call
leave
sti
cld
in
mov
dec
sub
call
or
mov
test
fucomi
das
and
stos
ud0
mov
in
aas
ror
adc
push
std
ins
xor
pop
mov
xchg
cmp
pop
cwde
out
sahf
jo
sbb
loopne
push
mov
loopne
(bad)
mov
and
and
iret
push
call
sbb
frstor
adc
cmc
jge
dec
je
mov
jp
(bad)
in
cmp
imul
jnp
fsub
fs
pop
xor
aad
dec
or
push
mov
out
sbb
adc
and
pop
sub
or
sbb
sbb
ins
cld
scas
(bad)
push
cmp
shl
mov
mov
xor
or
js
mov
pushf
imul
icebp
xor
stos
xor
stc
mov
cld
xlat
dec
test
cli
popa
cld
sahf
adc
mov
pop
aaa
pop
inc
dec
sti
xor
mov
cdq
(bad)
sbb
icebp
push
and
xchg
sti
sub
xlat
mov
jne
out
add
test
and
(bad)
xor
jnp
rcr
dec
push
xor
fcomip
xchg
inc
mov
out
mov
pop
ja
xor
mov
in
mov
enter
mov
outs
and
test
and
and
retf
ficomp
imul
or
adc
(bad)
add
fcom
push
dec
push
sub
jne
and
pop
pop
xor
pop
and
adc
call
mov
in
cs
movs
sbb
clts
dec
fs
loope
addr16
xchg
push
shl
pop
inc
sbb
cmp
popa
adc
scas
ret
and
mov
xchg
fnstsw
jae
ja
(bad)
and
pop
xchg
(bad)
dec
add
mov
and
dec
mov
clc
xrelease
(bad)
out
mov
or
outs
and
test
mov
and
cmp
xchg
lods
cs
adc
sbb
fimul
xchg
aas
(bad)
mov
int3
fld
loop
mov
(bad)
int
pop
xchg
jl
inc
pop
jo
mov
lods
pop
js
or
cmp
in
fcmovb
les
mov
lds
cmp
xchg
mov
stos
dec
cmp
int
sub
shl
push
call
mov
js
cwde
inc
test
std
stos
push
into
push
stos
mov
ds
in
movhps
xor
pop
nop
pop
arpl
test
mov
adc
test
cwde
xor
xchg
push
(bad)
out
imul
add
add
pop
pop
sub
in
and
pop
out
enter
enter
not
push
test
add
push
sub
loope
dec
ret
lods
push
jmp
push
enter
pop
inc
outs
mov
xchg
lock
fwait
and
aam
push
push
xor
inc
lods
cmp
adc
jnp
popa
mov
xchg
sti
enter
mov
lods
ins
(bad)
in
out
aaa
sbb
jle
inc
and
cmp
push
add
shl
dec
and
mov
add
ds
jae
mov
jnp
neg
mov
dec
(bad)
mov
fwait
cmp
(bad)
(bad)
cld
es
jne
inc
cmps
pop
addr16
ret
in
sbb
(bad)
ret
dec
jmp
push
addr16
imul
push
sbb
fmul
mov
xor
jne
mov
fisttp
xor
test
pop
add
mov
out
mov
or
mul
sti
jnp
push
sbb
cwde
adc
(bad)
mov
mov
cdq
cwde
dec
dec
xchg
out
(bad)
mov
clc
dec
call
xchg
dec
push
(bad)
clc
fldcw
pop
xlat
ret
dec
sbb
add
add
xchg
push
jge
and
jae
shl
dec
loop
pop
mov
xchg
jge
sub
scas
sub
jecxz
mov
dec
or
sub
xor
mov
lock
xchg
fldenv
int3
ficom
(bad)
mov
stos
stos
push
pop
jae
pop
(bad)
test
pop
sahf
and
adc
cmps
lds
mov
and
(bad)
in
sub
daa
jmp
and
push
and
cdq
dec
cs
pop
int
jmp
add
jmp
mov
push
pop
pop
aaa
(bad)
and
daa
icebp
imul
fwait
shl
cmps
into
dec
jg
mov
pop
test
dec
jg
out
mov
rol
sub
adc
(bad)
or
shr
add
xchg
adc
xlat
dec
push
jp
ins
fdivr
lods
jmp
movs
data16
cs
mov
in
mov
and
add
xlat
or
inc
daa
cmp
add
xor
mov
pop
div
inc
dec
out
repnz
popa
cwde
out
mov
push
(bad)
pop
xchg
(bad)
cmp
rcl
lahf
xchg
mov
hlt
lods
test
inc
sbb
pop
inc
(bad)
dec
dec
and
mov
imul
mov
test
outs
and
sbb
add
jmp
pushf
jg
in
mov
out
jge
and
mov
loop
and
adc
shl
jge
cmps
call
dec
popf
pop
lods
and
scas
test
xor
cmp
aam
lock
or
idiv
and
jl
sub
adc
fdivp
addr16
imul
shr
push
dec
int3
fwait
pop
int3
or
add
jg
cmc
jns
addr16
psllw
jp
xor
popa
enter
jl
icebp
sub
mov
mov
and
popf
rcr
add
mov
jnp
pop
adc
loop
in
jbe
push
push
sbb
fs
and
loop
and
fabs
sti
mov
loop
repnz
xor
test
fild
(bad)
outs
stos
ds
mov
adc
(bad)
push
imul
dec
pop
test
xor
pop
aam
or
lods
call
test
or
mov
out
mov
pop
xchg
jo
outs
sub
jbe
sbb
cmp
add
inc
cmp
cdq
test
call
fcom
adc
popa
add
dec
xlat
outs
sub
dec
push
sub
stc
sbb
jmpw
cmc
and
xchg
add
fnsave
pop
cli
add
rcl
mov
jmp
jge
pop
mov
jmp
out
and
jne
ins
scas
sbb
push
fimul
mul
mul
hlt
dec
movs
and
daa
stos
jmp
cs
push
jmp
cmc
or
mov
cdq
cs
and
retf
mov
fstp
push
dec
mov
lahf
add
call
and
jmp
pusha
out
sub
gs
(bad)
shl
(bad)
xlat
ror
sub
fwait
pop
mov
aam
xor
xchg
add
into
xchg
inc
push
je
leave
xor
lds
dec
push
rcr
pop
mov
repz
cmps
jnp
pop
add
mov
mov
xchg
inc
push
(bad)
xor
fdivr
outs
xchg
sbb
cwde
adc
jb
mov
jp
dec
push
sub
in
test
mov
pop
xor
int3
fdivr
pop
dec
xor
jp
ins
pop
(bad)
mov
push
retf
arpl
int3
lods
dec
mov
sbb
dec
ins
xor
or
in
xchg
mov
dec
lods
and
cmp
adc
push
aas
movs
pushf
pusha
cmp
fld
shl
scas
dec
(bad)
mov
(bad)
fisub
loope
mov
mov
out
imul
pop
mov
xor
mov
jno
push
sub
in
(bad)
pop
xor
out
rol
dec
jle
cmps
mov
repz
imul
int3
scas
leave
lods
pop
test
jl
ins
fnstenv
adc
pop
cmp
xchg
daa
in
sub
mov
imul
jb
leave
sbb
cmp
mov
mov
adc
movs
cmp
rcr
test
push
js
sbb
mul
add
aaa
and
jecxz
mov
dec
mov
call
js
(bad)
mov
(bad)
pushf
ret
dec
ja
loop
imul
dec
inc
pop
(bad)
stc
cs
sbb
loope
sub
push
inc
xchg
jg
add
jo
mov
jno
jge
fwait
cld
and
mov
mov
lea
popa
or
gs
add
in
sub
mov
arpl
inc
adc
(bad)
adc
inc
xchg
sbb
dec
sbb
addr16
pop
xchg
enter
int3
jmp
rol
jmp
xor
(bad)
mov
and
dec
mov
push
int3
fild
stc
push
or
jecxz
aaa
jno
mov
sbb
sub
mov
icebp
mov
ja
dec
xchg
in
les
push
mov
iret
sbb
lds
outs
sbb
xor
(bad)
mov
cwde
xor
movs
pop
aam
push
in
ss
mov
cmp
or
and
imul
sbb
jp
sbb
and
cs
add
imul
mov
cmc
cmp
sub
jo
int3
rcl
add
push
test
in
fimul
imul
and
add
push
xchg
or
div
stos
shl
out
mov
out
mov
or
int3
pushf
mov
dec
jle
adc
les
xchg
lods
and
pop
lock
add
cmovo
pop
mov
loop
outs
ins
jo
stos
dec
inc
adc
jo
add
popa
sbb
add
daa
out
inc
in
pop
mov
pushf
dec
movs
scas
sar
push
call
push
fcmovb
mov
mov
mov
retf
stos
jl
adc
pop
aad
mov
(bad)
mov
mov
(bad)
gs
xor
pushf
test
pop
add
cmp
addr16
test
enter
int3
in
sbb
in
lods
dec
aaa
retf
xor
(bad)
enter
push
sub
push
call
sub
jmp
dec
xor
mov
in
push
jmp
sbb
mov
sar
pop
vpunpcklwd
mov
jmp
push
scas
sbb
bound
jb
add
cmp
push
movq
pop
add
fnstcw
mov
mov
push
aas
js
jg
push
add
push
lahf
loope
sbb
mov
lods
mov
mov
cmp
in
pop
in
loope
pop
cmp
out
data16
jnp
cmps
cmp
adc
fs
mov
fdivr
mov
(bad)
loop
in
jns
lock
xchg
push
or
loope
dec
(bad)
vmread
inc
jbe
loopne
and
mov
scas
jno
adc
pushf
push
jp
adc
in
xchg
cld
dec
adc
mov
pop
in
out
or
(bad)
ja
mov
dec
movs
mov
fwait
jmp
xor
enter
ja
ret
push
sub
jno
sbb
pop
mov
fidivr
fcmovb
pop
aam
movs
std
jmp
pop
jbe
dec
dec
pushf
add
movs
dec
clc
or
cmp
(bad)
push
ja
add
sbb
lods
stc
push
sbb
add
fnstenv
test
js
push
lods
and
jo
sub
dec
shl
pushf
inc
sar
add
xor
cmp
int3
ins
movs
or
call
pop
push
mov
push
mov
loop
int
test
dec
inc
add
dec
xchg
or
imul
dec
add
push
rcr
sbb
push
mov
jle
test
bound
mov
test
pop
out
inc
fnstenv
pusha
fdivr
mov
neg
push
inc
retfw
pushf
jae
test
popa
es
push
sahf
(bad)
fld
icebp
(bad)
enter
sbb
or
sahf
mov
movs
shl
dec
push
ja
movs
inc
pop
fnstcw
fisub
cwde
retf
push
arpl
in
lahf
inc
push
inc
jmp
pop
jnp
or
scas
fidivr
arpl
push
lods
xlat
out
fnstenv
not
xor
call
inc
jmp
sub
stos
jae
pop
push
jl
hlt
(bad)
cmp
out
mov
cli
les
dec
in
dec
cmp
call
mov
sbb
inc
jae
dec
loopne
jg
test
mov
(bad)
mov
xchg
xlat
int3
out
scas
fistp
or
in
xor
sbb
mov
pushf
fxch
xchg
pop
rcr
mov
sub
ds
dec
outs
retf
xchg
mov
sbb
sub
imul
mov
dec
mov
sub
rol
cmps
leave
out
adc
leave
int3
xlat
aaa
pop
popa
test
idiv
or
dec
retf
jnp
les
lock
ja
dec
test
xor
and
(bad)
jae
inc
jecxz
and
sbb
js
mov
fdiv
mov
xor
mov
scas
call
inc
sahf
outs
fwait
sub
adc
(bad)
pop
gs
push
out
and
mov
scas
cwde
cmps
sub
fild
mov
ret
fisttp
ret
nop
mov
mov
test
cmp
mov
pop
adc
push
sbb
fmul
dec
clc
ret
pop
shl
pop
xor
fild
fs
aad
pop
(bad)
xchg
mov
jmp
push
nop
clc
fwait
mov
push
call
outs
adc
(bad)
jmp
sti
xchg
sbb
push
cmp
lahf
sub
mov
in
pop
mov
xchg
push
stos
and
int
inc
cld
popf
mov
cmp
dec
arpl
xor
mov
das
popa
xchg
pop
mov
cmp
pop
push
mov
xor
mov
out
inc
xor
push
(bad)
sbb
icebp
sbb
mov
jl
ja
aaa
daa
shr
(bad)
cmp
sub
in
aad
lea
adc
mov
pop
inc
(bad)
loopne
test
ficomp
out
movq
mov
cwde
cmp
cli
jmp
in
pop
sub
in
dec
inc
sbb
sub
repz
inc
inc
inc
push
pop
cs
stc
movs
sbb
pop
mov
pop
fsubr
sbb
push
test
adc
dec
or
cli
xchg
stos
inc
xchg
in
cmp
mov
aas
(bad)
push
jb
sbb
fwait
dec
std
fimul
xchg
pusha
nop
ja
add
retf
rcr
inc
and
mov
jecxz
jb
(bad)
ds
sub
pop
mov
sbb
xor
add
mov
sbb
fucom
cmp
mov
xchg
xor
mov
mov
or
push
xchg
enter
call
fistp
sbb
cmp
int3
jbe
push
cmps
add
or
aam
and
or
out
push
push
rcr
jl
push
dec
jo
rol
sti
(bad)
mov
sbb
fimul
sub
cld
out
xchg
xor
call
or
mov
pop
xchg
xor
popa
push
sbb
rcr
pop
int3
stos
call
sub
nop
add
add
cmp
inc
es
aam
cwde
ror
repnz
mov
inc
push
loopne
(bad)
mov
fmul
add
das
es
cmps
loop
(bad)
add
popa
or
mov
test
js
mov
(bad)
jnp
xor
sub
(bad)
xor
arpl
cs
sbb
cmp
aad
popa
mov
fdivr
adc
push
mov
lods
sub
mov
mov
jmp
push
dec
add
adc
mov
fcmovu
dec
adc
sub
mov
out
(bad)
pop
cmp
mov
lods
shl
jae
pushf
imul
mov
push
mov
in
lods
int
(bad)
cmp
es
jnp
dec
mov
fs
cmps
clc
test
retf
mov
push
mov
xchg
mov
mul
addr16
sti
push
ds
movs
stos
xor
and
shl
xchg
cmp
mov
adc
xor
pop
out
push
pop
mov
imul
or
scas
or
fist
(bad)
lock
sub
(bad)
pop
mov
jmp
dec
ficom
imul
nop
jecxz
dec
inc
call
dec
jmp
mov
out
mov
sar
add
sbb
add
xchg
cwde
ror
call
inc
in
popa
test
adc
test
mov
mov
mov
inc
push
sbb
dec
aam
or
cmc
cmp
mov
dec
je
cli
xor
mov
ror
or
xor
test
push
add
scas
fsubr
mov
je
jns
add
vmaxss
stc
packsswb
add
(bad)
pusha
dec
cmp
cld
stos
cmps
cmps
test
mov
adc
inc
inc
shl
pushf
inc
(bad)
adc
or
xchg
retf
call
xchg
pop
inc
jge
(bad)
(bad)
pop
js
movs
pop
loopne
xor
pusha
out
mov
pop
push
jo
inc
lahf
mov
(bad)
mov
mov
not
jle
xchg
sbb
jge
(bad)
in
ins
pushf
(bad)
arpl
mov
pop
rcl
push
sub
cmp
sti
sbb
pop
and
push
call
fcom
out
push
arpl
mov
ror
sub
cli
lea
mov
jge
push
popf
imul
lock
enter
xchg
fcomip
inc
mov
loop
and
cwde
push
add
xor
xor
and
or
stc
mov
scas
les
push
call
pop
rcl
popa
sub
loopne
and
repz
dec
fld
daa
pop
push
clc
cs
sbb
jecxz
dec
sbb
pushf
ins
xor
imul
add
loop
pop
aam
adc
inc
pop
je
ret
sub
dec
aas
pop
call
push
inc
cmp
and
fcomi
xchg
lahf
loope
xchg
lea
daa
inc
cmp
jl
mul
mov
xchg
dec
int
aad
ror
pop
or
ret
movs
dec
mov
ins
fwait
push
sbb
call
lock
call
(bad)
out
rol
in
xchg
nop
push
retf
fmulp
imul
ja
call
arpl
shr
adc
arpl
mov
pop
mov
pop
ret
xchg
int3
mov
inc
xchg
sub
enter
loop
ss
pusha
je
dec
adc
add
cwde
sbb
std
lods
push
cmps
aam
push
mov
jp
pop
pusha
mov
push
pushf
les
push
aas
mov
mov
call
jne
fdiv
add
scas
cmp
inc
mov
stos
cmp
sub
jg
nop
mov
mov
clc
mov
ret
pusha
loopne
inc
pushf
call
dec
push
sub
lock
(bad)
push
mov
outs
mov
std
xor
cmp
inc
lds
sahf
jmp
jbe
fsubrp
dec
lock
mov
call
leave
pop
(bad)
ret
or
ins
sub
mov
(bad)
shld
outs
fadd
out
dec
mov
add
push
dec
xor
cmc
mov
xor
push
mov
cmp
dec
lods
arpl
mov
push
mov
push
fisub
ss
xchg
int3
stc
mov
add
mov
xchg
ja
dec
sahf
stc
jnp
mov
inc
popa
retf
fisub
xchg
push
int3
mov
pushf
mov
pop
in
(bad)
(bad)
xor
cmp
retf
or
and
mov
lea
clc
mov
xchg
bound
pop
(bad)
daa
xor
repz
jbe
test
and
leave
pop
xchg
int3
pop
jmp
or
fdiv
outs
mov
jo
ficomp
mov
leave
inc
mov
sub
imul
inc
test
jb
jnp
out
xor
jle
ffree
lds
xor
cs
ins
popf
ret
sbb
loop
movs
mov
mov
fldcw
push
push
fisubr
pop
mov
fsubr
es
sbb
addr16
xchg
imul
sub
std
and
aas
inc
fstp
jmp
sbb
mov
mov
inc
xlat
add
pusha
not
mov
(bad)
lods
jae
addr16
stos
pop
inc
jno
cdq
inc
adc
inc
sbb
(bad)
sub
mov
pop
loopne
pop
mov
mov
xor
jno
cdq
pop
sar
bound
and
shl
dec
pop
(bad)
push
fwait
xchg
sub
int
imul
daa
adc
jl
pop
xor
mov
cmp
mov
push
inc
rcl
leave
or
fstp
dec
mov
add
jnp
fld
pusha
mov
xchg
and
fdivr
clc
cmp
push
and
stos
pop
call
dec
stos
xlat
mov
je
jno
cmp
adc
mov
into
in
adc
and
shl
push
jge
lahf
stos
push
dec
jg
mov
aam
div
and
je
mov
gs
sbb
aaa
in
add
cmp
loope
iret
in
lods
pop
nop
dec
pop
call
call
mov
(bad)
aam
and
(bad)
rcl
or
hlt
inc
xor
and
cmp
mov
push
mov
xor
ja
sub
jecxz
dec
mov
inc
sbb
sbb
pop
movs
sub
push
(bad)
adc
jmp
xor
daa
int3
push
dec
mov
xor
mov
mov
in
aam
(bad)
nop
push
out
aam
jmp
pusha
stos
push
cs
pushf
lods
imul
call
test
cld
dec
sbb
inc
dec
inc
es
lds
and
sub
cmp
add
dec
mov
dec
cmp
arpl
fst
sbb
pusha
sahf
mov
sbb
sbb
in
mov
inc
inc
pop
adc
jbe
ret
lea
jmp
or
arpl
and
hlt
nop
gs
xlat
out
jbe
sub
and
pop
popa
aaa
cld
retf
pop
jae
sbb
jle
cld
test
xchg
sbb
add
in
out
add
hlt
fimul
aas
inc
cs
cmp
add
mov
dec
popa
sbb
dec
and
push
push
jmp
pushf
pusha
and
aad
xchg
cmp
popa
jmp
cmp
movs
in
ficom
mov
push
jge
(bad)
loope
dec
pushf
mov
pop
pop
loopne
lods
add
push
out
bound
or
adc
and
xchg
mov
inc
add
in
sbb
ds
xor
fdivp
dec
and
rcr
ss
pop
shl
fcom
int3
fdivr
push
pop
cmp
shl
sbb
shrd
mul
ja
cmc
dec
push
outs
and
xor
into
fcomp
adc
mov
pop
fld
xchg
dec
movs
push
les
dec
out
jae
push
jnp
ret
gs
std
xor
int3
sbb
sbb
push
stc
jnp
into
clc
mov
xchg
aam
fidiv
ins
mov
pop
lahf
in
dec
addr16
clc
mov
sub
je
(bad)
sbb
mov
push
mov
inc
sti
cmp
mov
adc
sub
pop
pop
pop
mov
(bad)
popa
adc
cld
sbb
leave
dec
fwait
mov
addr16
(bad)
aam
push
lock
or
sbb
add
push
ins
(bad)
pushf
mov
mov
icebp
and
mov
xchg
xchg
les
lock
(bad)
ror
adc
daa
mov
pop
cmps
inc
sbb
(bad)
int3
(bad)
loop
fisttp
mov
mov
inc
sbb
pop
push
xor
(bad)
loopne
mov
ret
inc
stc
mov
jno
adc
cdq
mov
(bad)
push
(bad)
or
adc
not
push
ret
movs
cmp
in
cld
jo
pop
adc
vpsadbw
push
scas
push
dec
(bad)
repz
lahf
xchg
movs
mov
in
test
dec
mov
cwde
adc
fucomip
add
push
inc
xor
fisttp
test
cmp
ffreep
fwait
push
js
cwde
fst
push
dec
daa
sbb
mov
fdiv
mov
outs
int
jmp
es
stc
cld
rcl
xor
ins
pop
xchg
stos
cmp
icebp
mov
iret
bound
pop
mov
(bad)
rol
cwde
movs
(bad)
xor
leave
pop
mov
or
jbe
xor
push
mov
mov
jmp
sub
(bad)
xchg
div
(bad)
xchg
xchg
fwait
adc
ja
les
pop
mov
pop
outs
push
mov
scas
jl
ret
push
sbb
mov
sbb
and
add
rcl
jnp
loopne
fsubr
rol
out
push
dec
mov
ja
arpl
or
adc
push
mov
xchg
retf
inc
stos
push
(bad)
aas
add
adc
jbe
jle
mov
push
dec
sbb
pop
cmp
cmp
dec
cmp
dec
pop
jmp
xchg
dec
dec
sbb
xchg
stos
lds
fidiv
arpl
xchg
add
xchg
or
mul
(bad)
outs
loop
in
(bad)
nop
pop
test
inc
cmps
fst
lods
xchg
push
stc
(bad)
or
pusha
shl
test
loop
pop
add
dec
pop
in
lods
jge
push
sub
mov
lock
push
cld
(bad)
popf
sar
adc
jmp
aad
jno
push
cmps
stc
dec
(bad)
sbb
add
mov
dec
mov
or
xchg
cdq
mov
inc
adc
popf
mov
dec
dec
gs
aad
xor
lods
fst
fistp
out
shl
mov
cli
or
rcl
imul
loopne
xor
fcom
(bad)
pop
sub
adc
pop
in
xchg
mov
dec
out
and
dec
cmps
aad
xor
push
aad
push
mov
data16
retf
dec
pop
xor
dec
push
sar
cmp
out
jae
mov
sar
cmp
adc
or
pushf
xor
std
sbb
jns
cmp
nop
push
inc
adc
lds
imul
call
ins
xchg
cmps
call
in
movs
push
push
mov
push
neg
xchg
xchg
jge
fcmovnb
xchg
out
imul
mov
mov
fild
inc
sub
dec
(bad)
or
xor
dec
ins
mov
cli
fisttp
ja
push
pop
push
inc
mov
sti
add
push
ss
push
or
sbb
inc
loop
bound
lea
cmps
out
lds
enter
les
dec
cmp
in
push
fwait
dec
sbb
inc
not
xor
jbe
add
dec
in
enter
mov
or
add
out
cwde
xchg
not
fisubr
jmp
test
xchg
dec
xchg
mov
push
(bad)
scas
mov
ss
adc
add
outs
hlt
movs
jl
mov
mov
out
sub
(bad)
or
adc
sub
and
xor
leave
jge
or
(bad)
in
inc
mov
inc
pop
xor
sub
neg
mov
mov
test
jle
cmps
mov
mov
sar
imul
sub
inc
sub
ss
je
jp
pop
or
push
push
js
pop
cmc
gs
cdq
push
push
sbb
pop
adc
push
cmp
push
add
sbb
loop
sbb
jmp
cmps
dec
mov
test
jl
and
mov
mov
js
int3
ss
imul
lods
and
mov
stos
into
pop
mov
push
add
enter
in
stos
imul
and
call
cld
adc
enter
lea
mov
fimul
mov
fmul
stc
(bad)
pop
aad
jl
movs
dec
inc
and
imul
xor
mov
or
lods
sub
mov
xchg
stc
inc
enter
mov
jo
inc
arpl
aam
xor
pop
call
push
ret
jae
dec
xor
mov
enter
popa
cld
mov
sbb
ins
ds
xchg
mov
test
jnp
ins
addr16
xor
xor
sbb
add
cmps
bswap
mov
jmp
test
ret
push
push
dec
mov
hlt
jmp
pop
mov
stos
adc
push
dec
xor
cmp
ror
mov
push
and
outs
cmp
in
ins
call
or
popf
sbb
gs
test
inc
(bad)
stc
fs
test
inc
xchg
in
push
xor
test
add
sub
mov
push
pop
fmul
adc
pop
pop
cmp
stos
mov
xchg
lods
bnd
daa
cmc
jl
and
mov
inc
dec
mov
cwde
in
mov
adc
fisub
xor
inc
mov
add
mov
lock
push
aas
movs
leave
inc
pop
push
adc
shl
mov
iret
les
out
xor
jb
xchg
test
cmp
movs
jecxz
aam
arpl
pushf
add
cs
shr
(bad)
pop
push
enter
adc
sub
push
mov
mov
mov
or
into
push
or
mov
mov
jg
adc
xchg
fs
sub
xor
(bad)
sbb
ja
out
sbb
dec
mov
jl
lods
mov
mov
adc
(bad)
and
and
enter
push
pop
ja
mov
test
cdq
ja
mov
pop
xor
stos
inc
outs
loope
fs
jmp
add
arpl
jecxz
mov
jnp
sub
(bad)
addr16
(bad)
int
inc
gs
jo
push
pop
lods
cmp
sub
fisttp
dec
imul
lahf
dec
jnp
cmp
or
push
mov
aam
sub
xchg
loopne
dec
(bad)
xor
push
xchg
or
int3
pushf
add
movs
loope
push
mov
dec
fbld
fidivr
push
inc
mov
cld
dec
xor
outs
fst
dec
sar
mov
int3
out
sar
cmp
in
scas
loopne
pop
sub
jo
xchg
push
cmp
popf
jae
rcl
push
fcomp
mov
pop
out
imul
fadd
xor
mov
mov
les
and
bound
jle
stos
pop
addr16
sub
pop
fst
dec
xchg
mov
xchg
rcl
or
adc
outs
mov
loope
mov
dec
sbb
js
mov
inc
xchg
sbb
cmp
(bad)
rcr
repnz
(bad)
imul
stos
xor
(bad)
(bad)
cmc
xor
xor
sbb
jmp
xlat
or
and
arpl
test
push
cs
nop
sbb
aam
pop
or
mov
sbb
push
imul
out
push
(bad)
pop
call
aas
ja
push
out
mov
pop
cmps
xchg
mov
jbe
pop
out
add
fs
sar
push
pop
jo
movs
jmp
arpl
ins
mov
jne
mov
sub
sar
inc
test
push
jl
ror
(bad)
push
cmp
mov
leave
pop
in
pop
inc
pop
ins
ja
mov
xchg
adc
mov
dec
mov
pushf
push
rcl
and
aad
jo
jge
loope
aam
or
dec
in
shr
push
loop
div
push
call
sub
pop
cmp
adc
clc
and
push
sahf
jo
mov
inc
dec
pop
jbe
lods
jmp
push
mov
xlat
ret
ss
adc
push
mov
cmp
pop
(bad)
push
sbb
lods
dec
mov
pop
scas
stc
loopne
sub
pop
adc
cmps
retf
(bad)
out
loopne
jp
(bad)
stos
and
mov
ins
push
leave
dec
(bad)
arpl
push
test
xchg
std
sub
int
jl
cmps
cwde
aaa
shl
pop
stos
pop
call
adc
leave
addr16
stos
fwait
cld
xchg
add
div
xor
lods
sbb
sar
mov
sahf
xchg
pop
cdq
lock
adc
enter
pop
cli
rcr
test
mov
dec
data16
mov
int
in
mov
and
sahf
arpl
aaa
jle
mov
out
sbb
in
mov
mov
xchg
outs
push
leave
dec
js
adc
out
pop
lock
js
test
cdq
inc
arpl
rcr
dec
sub
dec
or
sbb
(bad)
leave
sub
mov
sti
inc
jg
(bad)
adc
push
mov
push
push
xchg
cmp
xor
int3
sbb
pop
dec
sbb
mov
add
test
test
cld
out
push
fild
ins
xchg
das
retf
cld
mov
repnz
das
test
mov
and
neg
pop
sbb
xchg
pop
push
data16
or
in
mov
(bad)
push
push
push
test
mov
xchg
sbb
inc
arpl
mov
xor
add
pop
adc
cmp
rcl
sar
popa
mov
lock
shl
rcr
cdq
pop
mov
add
hlt
inc
mov
mov
ss
sbb
push
aam
adc
add
dec
mov
xchg
(bad)
dec
mov
dec
cwde
bound
sbb
add
lods
jno
cmp
mov
push
cmp
or
loopne
xchg
add
lds
and
inc
(bad)
and
mov
(bad)
cmps
dec
bnd
aam
inc
rcl
test
or
out
sub
mov
and
cmp
push
jbe
adc
adc
jnp
jnp
ins
in
dec
icebp
stc
mov
(bad)
lock
mov
xchg
aam
sub
loope
fdivrp
fistp
dec
mov
push
pushf
mov
sub
jnp
mov
outs
dec
popf
mov
outs
adc
xchg
pushf
push
mov
jecxz
lea
aad
dec
stos
loopne
adc
push
cmp
mov
rcr
ins
mov
sbb
add
daa
cmp
(bad)
dec
and
sbb
(bad)
push
test
xchg
push
push
mov
xchg
aas
ins
push
hlt
ret
cwde
push
xchg
ja
or
push
fcomp
(bad)
in
xor
xchg
lods
sbb
jge
jmp
ret
add
sbb
cld
add
push
aam
ins
out
(bad)
mov
sahf
adc
imul
and
or
xor
push
push
cmp
aam
ja
and
adc
ins
mov
dec
push
clc
xchg
in
jmp
ficom
out
stos
mov
push
fiadd
xor
xor
inc
pop
or
sub
push
and
pop
and
addr16
dec
mov
lahf
dec
cs
and
mov
xchg
fist
mov
imul
or
xor
mov
cmc
shl
jmp
and
push
retf
mov
jle
sbb
mov
addr16
fcomp
loopne
cmp
aaa
sbb
sbb
pushf
pop
aam
fisttp
fidivr
mov
dec
int3
sub
aam
(bad)
pushf
dec
mov
mov
xor
sub
mov
pop
sar
fmul
popf
mov
inc
and
addr16
sub
mov
test
outs
sub
sub
sbb
dec
push
cmp
cwde
cmc
xchg
jmp
mov
lods
add
cs
xchg
test
mov
inc
out
or
and
add
sub
adc
bound
xchg
and
pop
dec
in
add
jns
sbb
loop
dec
inc
hlt
shl
pushf
lock
sbb
out
lahf
push
aam
inc
loopne
sbb
mov
dec
mov
inc
sub
adc
lds
push
adc
dec
fs
sub
lea
inc
jo
aas
xor
fist
mov
in
ret
jmp
das
cmp
test
pop
dec
in
in
sbb
(bad)
icebp
pop
mov
xchg
repnz
out
fcomip
push
nop
scas
out
imul
dec
jge
fnstcw
push
jl
push
xor
pop
sti
mov
and
mov
mov
jno
dec
mov
sahf
popa
rcl
jno
push
cmps
pop
xor
jge
aam
enter
(bad)
fisttp
(bad)
jnp
mov
fadd
and
dec
test
andps
repnz
xchg
xor
les
(bad)
and
fistp
fs
(bad)
mov
push
pushf
repnz
cld
adc
dec
popf
jae
retf
push
dec
int3
ss
bound
push
or
xor
clc
sub
dec
mov
nop
xlat
xchg
inc
add
mov
push
jle
mov
and
or
imul
and
push
fisubr
dec
inc
xor
rcr
in
adc
ss
pusha
mov
loopne
jbe
popf
mov
cmp
call
cmp
mov
pop
(bad)
jno
fadd
lock
mov
shl
mov
xor
mov
test
pop
or
sti
dec
fiadd
inc
mov
es
push
add
addr16
pop
aam
clc
cli
inc
adc
dec
fstp
dec
cld
leave
popa
mov
mov
jns
adc
addr16
sub
aam
sbb
add
fs
xchg
call
mov
fwait
sub
int
mov
mov
mov
push
push
jns
cmp
xor
mov
push
mov
aam
add
cmp
jp
fwait
mov
jno
and
fwait
push
pop
retf
dec
inc
scas
xchg
pushf
movs
lock
sub
push
out
inc
mov
in
xchg
shr
mov
cmp
dec
(bad)
pop
ret
ss
outs
inc
jns
xchg
sub
les
jb
cmps
stos
rol
popf
mov
jns
sub
in
cmp
int
outs
aam
loop
mov
mov
jnp
push
(bad)
sar
ins
in
inc
es
or
and
mov
xchg
aam
mov
pop
xlat
or
mov
shr
push
pop
inc
je
xchg
sbb
fcmovnb
call
jnp
pop
sbb
add
mov
dec
adc
ins
push
fs
inc
xor
inc
dec
add
add
out
shl
pop
jle
cmp
push
neg
ror
ror
ja
jne
movs
xor
xlat
shr
and
(bad)
aad
push
jg
add
rcl
cmp
xor
sub
(bad)
sbb
sub
push
aad
aad
adc
mov
mov
ror
sar
(bad)
adc
xchg
pop
push
pop
clc
cmp
adc
movs
cmp
test
xor
push
dec
mov
xchg
outs
cmovge
jmp
test
mov
push
sbb
test
mov
jmp
sub
cmps
or
dec
out
das
ss
mov
adc
sbb
jg
dec
addr16
out
xchg
pop
ret
sbb
mov
pop
test
or
push
sbb
mov
or
cmp
or
pushf
sbb
xchg
sub
inc
fadd
in
ss
scas
push
xor
dec
xchg
gs
dec
and
mov
fidivr
inc
rcr
mov
fs
das
push
cmp
pushf
inc
cdq
pushf
movs
inc
imul
jo
sbb
sbb
les
sahf
(bad)
in
retf
pop
inc
sti
add
push
fldenv
and
(bad)
pushf
dec
in
std
mov
xlat
sar
(bad)
jl
xor
mov
mov
dec
adc
int3
add
sbb
cmps
add
rol
xchg
test
loopne
inc
(bad)
mov
sub
sbb
mov
(bad)
outs
jbe
test
not
mov
pop
enter
xor
mov
sar
fadd
hlt
xor
add
add
mov
(bad)
out
cmp
mov
mov
xchg
inc
sbb
xor
inc
and
inc
mov
imul
ja
dec
mov
aad
pop
inc
sub
fst
sbb
mov
mov
mov
jge
jae
push
not
push
arpl
out
mov
add
pop
js
xchg
jne
sub
xchg
lds
and
fmul
add
cmp
fcmovnu
xor
arpl
push
sub
add
scas
jmp
int3
push
ss
inc
xor
or
adc
xchg
mov
mov
loop
pop
aas
inc
push
call
jmp
test
imul
mov
sbb
push
loopne
fdivr
dec
(bad)
repnz
push
pop
test
imul
mov
mov
or
xchg
inc
mov
lock
dec
enter
mov
js
test
mov
sub
popf
mov
shl
ins
push
int
add
inc
stos
pop
clc
add
in
stos
int
out
inc
in
sub
mov
addr16
mov
jae
cmps
aaa
inc
push
pop
pusha
(bad)
cwde
xor
xor
ins
pop
push
jl
pop
pop
in
test
ret
in
fistp
xchg
push
jmp
fdivr
and
push
fidiv
das
(bad)
push
push
lahf
movs
mov
lods
and
xchg
push
push
fcompp
aas
push
outs
pushf
mov
mov
adc
enter
inc
jae
dec
cld
loop
lods
cmps
pop
adc
sub
xor
push
push
sbb
xor
ins
aam
add
test
xor
aad
js
xor
loop
hlt
loopne
ficomp
call
rdtsc
mov
movs
cmp
inc
xchg
out
dec
pop
out
push
aaa
retf
aaa
sub
or
cmc
push
jle
pop
dec
xor
xor
or
fwait
lahf
les
rcl
pop
inc
xor
je
sbb
sub
push
pushf
rcl
sbb
lds
ja
mov
add
loopne
sub
mov
mov
mul
mov
in
ficom
push
sub
addr16
fidiv
xor
add
ret
jae
jg
das
sbb
aaa
xlat
ds
test
retf
lock
push
into
pushf
jno
ins
js
cdq
bsf
sub
pop
dec
mov
xor
or
xchg
std
and
sahf
mov
movs
ins
add
sub
mov
xchg
(bad)
enter
enter
and
repz
adc
inc
sub
pop
in
xlat
loope
je
mov
addr16
cdq
ins
cmp
push
dec
inc
xchg
jb
xchg
retf
(bad)
lock
leave
push
jns
scas
sbb
sbb
daa
adc
xchg
stos
rcr
sub
jae
int3
and
inc
xchg
push
aad
push
sub
mov
mov
jge
lods
inc
lea
imul
xchg
pop
cld
add
jmp
(bad)
ficom
out
repnz
call
sbb
mov
fimul
pop
inc
loop
test
cmp
jg
dec
es
popf
cmp
pop
add
in
enter
scas
loopne
std
mov
cmp
fdiv
out
je
jecxz
test
mov
xor
mov
sub
pop
xchg
cmp
dec
clc
daa
mov
out
rcl
dec
gs
rol
mov
ss
js
loopne
shl
xchg
dec
jecxz
pop
pop
out
loope
or
mov
xchg
push
xchg
nop
adc
inc
and
imul
mov
sahf
(bad)
sub
fisubr
mov
mov
js
or
(bad)
and
jle
lea
not
mov
aaa
scas
clc
jae
jno
mov
cmps
pop
mov
xor
imul
adc
sbb
in
and
mov
and
imul
jnp
clc
sub
jecxz
cmps
xchg
or
inc
jg
or
ins
mov
fdivr
call
mov
fisttp
jp
jl
push
repz
sub
inc
xchg
psraw
jecxz
rcl
xor
cmps
dec
pushf
retf
dec
in
or
fwait
mov
dec
or
daa
push
std
(bad)
pop
inc
xlat
pushf
xor
movs
inc
(bad)
std
jo
js
add
rol
retf
in
pop
pop
pop
mov
xor
aas
mov
aaa
push
jecxz
pop
mov
int
mov
xchg
jmp
pop
(bad)
mov
call
pop
push
pop
add
jl
sub
jge
or
aas
loop
push
jae
popa
xlat
ins
out
push
dec
dec
fwait
in
dec
scas
lods
sbb
loop
fld
imul
enter
call
xor
adc
lods
lods
mov
pop
aas
fidivr
repnz
cld
mov
pop
dec
ja
inc
icebp
pop
outs
in
mov
dec
jns
xchg
xchg
push
dec
cmp
mov
idiv
movs
add
js
dec
sub
ror
dec
cli
inc
sub
rcr
ja
add
jno
jmp
lds
sbb
retf
jle
xchg
push
leave
mov
ja
or
add
pop
xor
add
outs
add
aaa
test
sub
mov
mov
sbb
push
mov
add
scas
cwde
(bad)
dec
pop
loop
int3
lea
test
xor
mov
dec
push
leave
es
les
pop
imul
(bad)
loop
rcl
pop
dec
daa
std
fst
dec
retf
movs
aas
ss
(bad)
test
int
not
stos
test
lock
leave
dec
test
stc
pop
call
rcr
push
push
cmp
pop
aaa
xor
or
push
or
out
pop
push
and
ror
mov
shr
adc
adc
cwde
push
shl
(bad)
idiv
pop
xchg
or
int3
loopne
imul
lods
rol
inc
push
(bad)
aas
cmp
add
clc
(bad)
push
imul
jl
mov
in
shl
and
sub
repnz
adc
enter
call
mov
adc
mov
in
xlat
fcom
mov
in
repnz
fcmovne
dec
outs
pop
xchg
(bad)
xor
stc
aaa
adc
push
xchg
add
mov
xchg
xor
fld
aas
fisttp
ja
(bad)
ss
mov
lods
ins
fisttp
sub
mov
push
scas
outs
cmp
mov
cdq
fcomp
push
mov
(bad)
push
push
call
js
push
sub
jp
add
popf
jns
mov
(bad)
xchg
je
xchg
push
lds
aam
xor
and
dec
inc
shr
push
aad
add
push
pop
daa
push
ins
ret
ret
sbb
shr
call
jnp
fcomp
fild
nop
mov
sub
adc
mov
ds
dec
mov
mov
std
cmps
pop
sbb
push
xor
ins
push
icebp
iret
stc
sub
pop
xchg
stos
adc
sar
cmps
mov
jb
inc
(bad)
jge
(bad)
(bad)
icebp
scas
test
pusha
neg
mov
jnp
pop
test
cmp
jne
mov
jo
mov
adc
sub
add
mov
mov
(bad)
fnstenv
mov
push
jge
push
push
pop
(bad)
mov
push
xchg
(bad)
mov
xor
ja
inc
aaa
mov
dec
xor
out
ins
arpl
in
iret
add
add
aas
and
pop
repnz
push
and
xor
popf
xchg
div
ret
call
or
rcr
ret
in
xchg
aam
in
or
inc
sbb
shrd
mov
aam
xlat
jmp
mov
ret
ja
xor
push
les
aad
push
in
dec
mov
enter
add
mov
push
fcomip
outs
mov
add
ins
ds
jmp
jne
inc
xor
pop
dec
stos
nop
pop
int3
inc
mov
fld
sbb
(bad)
sbb
push
add
cmp
dec
and
daa
pop
fidivr
div
repnz
jb
sub
rcl
nop
xor
stos
push
dec
iret
fsubr
xchg
pop
add
inc
call
add
mov
ins
rcr
add
fldcw
mov
mov
adc
imul
mov
jmp
loop
adc
and
cmp
sar
dec
mov
jbe
mov
jbe
cwde
loop
pop
dec
push
mov
out
neg
push
mov
dec
adc
cmp
mov
and
or
out
rcl
pop
in
outs
mov
mov
(bad)
shr
add
mov
jbe
int
and
sbb
jno
inc
cmp
mov
push
lods
mov
xchg
nop
gs
fcomp
daa
push
out
lahf
div
pop
add
inc
cmp
mov
cdq
inc
out
pusha
test
jbe
pop
mov
cmps
sahf
inc
jmp
sti
inc
daa
mov
mov
fs
ins
mul
leave
fcmovnb
xor
or
fwait
or
mov
add
xchg
jl
loop
add
push
pop
out
retf
jmp
les
and
loope
lock
inc
outs
inc
dec
ret
fsub
lods
dec
adc
push
push
push
xor
mov
mov
leave
add
pop
test
(bad)
lahf
push
mov
cmp
pop
stos
int
jmp
xchg
xor
sbb
loop
arpl
jge
mov
mov
push
shl
imul
pop
jo
data16
xchg
jecxz
out
push
jp
fnstcw
(bad)
mov
push
int3
mov
in
pop
pop
inc
rcr
fiadd
xor
jl
xor
aam
mov
pop
jle
mov
aam
add
xchg
dec
or
aas
adc
jecxz
loope
mov
or
inc
xchg
jmp
(bad)
pop
movs
aas
lea
and
pop
cld
inc
repnz
sti
js
jmp
adc
or
in
icebp
rcl
push
popa
and
xchg
mov
es
sbb
jle
js
test
jo
stos
pop
jmp
mul
sub
pop
add
cmc
mov
in
sub
pusha
lea
out
push
(bad)
lahf
pushf
mov
jo
aam
fcom
sar
stos
or
mov
loope
dec
or
lea
adc
adc
icebp
aaa
inc
pop
jo
push
sub
sbb
or
or
ds
dec
jge
pop
shl
and
aam
sti
sbb
pop
push
push
pop
btc
rcr
outs
mov
nop
mov
enter
hlt
mov
mov
ins
mov
or
jl
popa
lods
nop
sub
and
mov
jge
ss
sub
mov
pop
(bad)
into
jp
sahf
loop
pushf
ins
jg
popa
(bad)
cld
push
mov
mov
and
dec
dec
xchg
fistp
pop
mov
(bad)
push
mov
jle
mov
cmp
xchg
cmp
add
es
shr
outs
jb
jo
push
std
cld
xchg
pop
leave
xor
stos
adc
pop
mov
push
push
xor
sub
dec
pop
jne
sub
push
jge
lods
mov
pop
and
pop
inc
mov
push
inc
aad
sub
gs
pop
dec
pop
aaa
out
aam
xor
nop
xchg
pop
mov
ficom
xor
sub
popf
arpl
sar
ret
outs
jne
sub
sbb
mov
sti
mov
push
pop
cmc
jmp
aad
inc
leave
loopne
xor
out
dec
xor
stos
pop
call
push
cwde
push
mov
fidivr
cmc
mov
fisub
fst
leave
popf
neg
add
mov
adc
sbb
movs
loope
aad
pop
pusha
xchg
sub
out
rcr
xchg
xchg
inc
out
ret
fiadd
(bad)
int
adc
aam
jmp
test
mov
ss
sbb
movs
jns
cmp
sbb
mov
cmp
cli
mov
xchg
mov
ja
inc
push
scas
xchg
into
pop
jmp
(bad)
add
addr16
mov
repnz
out
xchg
sbb
dec
es
scas
inc
jecxz
lahf
xor
lahf
adc
push
mov
cmp
xor
les
add
loop
shl
(bad)
nop
cmp
ins
and
push
int3
inc
in
xchg
dec
jge
push
hlt
mov
fadd
jnp
int3
xchg
sbb
mov
out
and
imul
scas
movs
(bad)
loope
ins
pop
push
push
cmp
dec
pop
test
inc
cmp
dec
inc
call
sub
or
loopne
loop
xor
and
pop
stos
jno
push
push
sub
sti
mov
out
xchg
jne
test
push
or
cmps
adc
mov
call
movs
xchg
arpl
adc
dec
out
xchg
outs
mov
mov
fsubr
mov
cli
(bad)
xor
xchg
add
in
mov
cmp
xor
add
or
lods
sub
aaa
adc
or
popf
and
hlt
xlat
jb
pushf
mov
ror
ds
scas
push
ins
mov
repz
popa
cs
adc
jns
(bad)
gs
fidiv
dec
jg
xor
mov
les
mov
pop
loop
jmp
(bad)
scas
push
pop
jg
mov
xor
pop
into
mov
adc
shr
rcr
fistp
sub
add
jp
pop
dec
xchg
add
leave
push
xchg
pushf
xor
inc
fs
sbb
lods
and
ret
out
ja
ds
jmp
xchg
rcr
adc
xlat
lods
rcl
mov
sub
xor
stos
int3
lock
cli
stos
movs
push
mov
enter
lahf
shl
cmp
cmp
das
mov
mov
inc
xchg
popf
cmps
push
stos
push
mov
daa
out
ffree
loope
int3
xlat
xlat
dec
and
jmp
into
mov
and
adc
and
ds
pop
jae
dec
xchg
mov
repz
xor
push
push
mov
imul
cmp
push
sub
std
sti
loope
pop
cli
mov
jg
pop
sbb
sub
bswap
fimul
enter
scas
xchg
out
in
dec
inc
in
test
stos
mov
imul
inc
scas
jmp
jns
sub
sbb
inc
dec
inc
stc
loopne
sub
mov
and
cmp
pop
cmp
push
sbb
int
xor
aas
arpl
test
in
adc
sub
or
dec
aam
(bad)
xlat
mov
call
sbb
repnz
add
push
gs
mov
pop
out
jb
aas
test
nop
jae
jne
and
adc
iret
call
or
sub
and
pop
mov
dec
add
idiv
dec
leave
aad
test
in
mov
mov
daa
xchg
in
mov
retf
inc
xor
xchg
push
mov
jp
mov
sbb
dec
jmp
dec
lea
mov
and
cmp
loopne
(bad)
ficom
mov
inc
fimul
cmc
imul
jo
mov
mov
push
mov
sub
test
addr16
into
mov
pop
mov
test
shl
push
nop
sub
dec
add
mov
sub
mov
call
dec
cmp
loopne
mov
sub
dec
mov
xchg
or
pop
ins
sahf
jge
lahf
or
(bad)
fisub
dec
ins
add
mov
mov
loop
in
xchg
jl
ins
jmp
fldcw
adc
mov
mov
mov
fnstenv
mov
adc
mov
dec
xor
pop
pop
mov
or
or
out
fisttp
push
xchg
pop
retf
ret
cli
or
les
out
mov
cs
fwait
dec
mov
jb
jnp
loopne
aas
sub
sub
das
push
mov
add
xchg
adc
call
jne
adc
iret
cdq
pushf
aas
xlat
daa
and
fadd
dec
(bad)
fistp
adc
fcom
jle
aam
cmp
fdiv
jge
(bad)
mov
jmp
push
jge
outs
hlt
lds
ja
in
retf
mov
stos
jns
lods
loope
pop
sub
dec
fwait
jmp
popf
adc
mov
loop
jmp
nop
arpl
mov
ins
fld
fwait
loope
push
dec
stos
dec
add
cmp
sar
mov
dec
mov
stc
mov
inc
fimul
(bad)
aad
loopne
icebp
test
rcl
cs
into
fmul
inc
and
lds
iret
push
dec
pop
jp
test
sub
fisub
(bad)
mov
jl
mov
ins
(bad)
sub
inc
shl
or
ins
add
std
fdiv
lock
xor
cmps
pushf
push
push
pop
lock
(bad)
out
inc
std
dec
popf
or
cmp
fld
mov
mov
add
or
cli
scas
xchg
adc
jge
aad
push
and
push
shl
movs
(bad)
(bad)
add
xchg
js
rcl
ins
shr
or
mov
mov
aad
jae
mov
jno
mov
pop
cmp
adc
add
sub
in
loope
test
cmp
mov
xor
inc
cmp
popf
rcl
push
clc
dec
add
add
jmp
pop
shr
mov
inc
pop
and
int3
fdivr
mov
arpl
pushf
inc
add
xor
loope
pop
mov
pop
(bad)
inc
add
clc
cmc
and
into
cmp
fmul
add
add
lea
rcr
mov
mov
xor
xlat
mov
push
icebp
sub
add
(bad)
ins
add
add
test
lods
jb
mov
mov
div
cmp
out
cmp
mov
inc
and
adc
xchg
xor
xor
fisubr
push
cmps
idiv
clc
test
fiadd
dec
xor
jo
jnp
mov
out
jo
cmps
cdq
adc
adc
lods
sbb
push
rol
mov
fdiv
jnp
mov
lods
fucomi
jg
mov
aad
cwde
jge
jmp
jo
mov
shr
push
xchg
mov
and
int3
cmp
mov
cmp
(bad)
xor
ror
sub
daa
xor
(bad)
pop
jnp
test
cmp
ins
imul
lea
hlt
hlt
xchg
add
and
mov
enter
adc
cmp
fwait
pop
mov
mov
out
ins
in
retf
push
fldenv
cmp
dec
jno
add
clc
cmp
xor
test
mov
pop
jb
xchg
push
sar
lods
add
push
(bad)
xchg
(bad)
je
rol
sbb
pop
add
add
stc
add
mov
or
push
cmp
jnp
push
lods
mov
xor
aas
fidiv
pop
pop
std
sub
jbe
push
cwde
call
call
clc
stos
cld
mov
xchg
movs
jae
mov
mov
mov
sti
cwde
cwde
xor
jl
xchg
xchg
jmp
inc
mov
mov
lods
mov
nop
fcomp
jo
dec
cmp
mov
aaa
fisub
pop
sahf
xchg
dec
pop
xchg
hlt
xchg
cwde
inc
and
sbb
pop
aas
call
jae
push
std
mov
gs
pop
push
push
call
and
push
sub
pop
out
in
clc
(bad)
sahf
ret
pushf
hlt
std
and
sub
sbb
pop
push
jnp
push
les
and
mov
or
lock
push
addr16
sub
push
out
pop
xchg
pop
test
or
loopne
jne
or
pop
test
pop
sbb
sbb
pop
add
call
out
jl
push
shl
lahf
add
std
fidivr
lods
pop
fcomp
add
adc
jg
xchg
aam
and
sbb
cwde
mov
dec
enter
pop
pop
idiv
push
iret
out
fimul
cld
inc
jne
daa
and
leave
pop
push
xlat
test
mov
loopne
imul
mov
push
pop
inc
sahf
test
in
enter
pop
dec
call
mov
or
into
pushf
pop
cdq
dec
adc
std
xor
sbb
and
rcl
inc
add
je
loope
sub
(bad)
dec
cmp
mul
stos
(bad)
pop
aas
cmps
(bad)
out
aaa
jp
pushf
xchg
or
mov
add
adc
ins
cs
or
or
push
std
rcr
dec
out
and
sbb
xchg
fdiv
inc
add
xor
or
mov
loope
inc
xlat
sub
outs
mov
lea
in
pop
sub
fstp
jle
xor
movs
mov
xchg
and
ficomp
pop
aam
fist
mov
fprem
pushf
scas
stos
pop
dec
mov
adc
loop
xchg
xchg
or
inc
mov
scas
cmp
sub
inc
jmp
test
sbb
mov
mov
in
inc
test
xlat
rol
push
jbe
cmc
imul
mov
or
dec
mov
imul
inc
cmp
scas
and
out
aam
mov
cmp
(bad)
xlat
pop
ss
inc
call
jb
enter
push
push
xchg
cmp
mov
popf
xor
or
pop
jbe
(bad)
cld
call
pop
adc
and
dec
dec
pop
dec
inc
mov
xlat
cdq
and
mov
push
jp
push
mov
lds
pop
cwde
push
mov
call
sub
pop
xor
xchg
push
or
jno
push
(bad)
or
test
loopne
jb
out
jmp
shl
pop
sub
push
in
or
sub
or
mov
sbb
sbb
push
mov
jbe
aaa
inc
add
fbstp
sub
or
mov
arpl
js
rol
add
adc
push
xor
dec
jns
cmp
lea
sbb
movs
sbb
mov
jmp
push
mov
jecxz
int3
inc
out
cld
pushf
shr
add
and
test
push
and
clc
enter
call
mov
jno
mov
jle
sbb
cdq
dec
jge
add
inc
out
xchg
loopne
add
push
fs
cmc
(bad)
dec
inc
xchg
(bad)
int
dec
les
shl
mov
(bad)
les
sub
inc
aam
rcr
add
aam
inc
sub
pop
cs
or
(bad)
inc
fild
cld
jne
jbe
push
push
pop
jle
jnp
xchg
retf
adc
adc
in
fisubr
neg
out
out
pop
mov
and
push
lock
adc
xchg
push
sub
dec
iret
fisubr
mov
int3
or
mov
sbb
rcr
pop
fcom
push
push
sti
push
mov
adc
mov
outs
sbb
lods
mov
leave
(bad)
jmp
mov
xchg
or
inc
and
mov
fild
cdq
imul
aam
mov
xor
setb
dec
pop
fmulp
add
hlt
sbb
jb
and
push
hlt
and
clc
ins
call
xor
mul
pop
nop
jmp
sbb
push
daa
sub
ss
or
lods
fdivr
pop
xchg
cld
jae
mov
pusha
ss
or
jno
fadd
mov
adc
dec
call
repnz
lock
sub
mov
(bad)
ret
jae
enter
or
cwde
xlat
stc
jae
mov
sub
ret
adc
sub
mov
movs
dec
jne
test
xchg
sub
dec
mov
mov
jne
(bad)
in
shl
add
in
add
jl
sub
xchg
pop
cmp
(bad)
sbb
push
sub
pop
mov
pushf
sbb
jp
out
cmp
(bad)
jnp
cs
and
cmp
add
push
jl
imul
add
push
cmp
xchg
shl
pop
arpl
mov
test
lock
sub
xchg
pop
mov
sub
sub
adc
sahf
adc
push
mov
mov
pop
pop
push
stos
dec
sbb
cwde
mov
pushf
inc
imul
fwait
cmps
add
test
std
mov
xchg
retf
dec
mov
mov
dec
mov
scas
mov
shl
jge
ds
ror
mov
inc
daa
cmp
adc
cli
cmp
stos
or
fistp
movs
lods
sub
or
inc
sub
mov
rcl
or
hlt
jg
mov
fwait
retf
sbb
jmp
sar
push
pop
repz
lock
inc
sbb
out
jecxz
cs
and
jmp
pop
pop
scas
imul
jg
repz
mov
fadd
lds
ins
popf
retf
pop
sbb
sub
jno
imul
(bad)
ins
call
addr16
sub
mov
fld1
js
dec
and
xor
xchg
fwait
(bad)
xlat
add
or
stc
in
(bad)
int3
add
or
fisubr
push
xchg
mov
mov
stos
test
pop
sub
arpl
sbb
xchg
cs
mov
add
inc
cmc
mov
(bad)
lock
or
pop
pop
enter
mov
bound
mov
xchg
xlat
jno
fcomp
call
and
aas
cwde
lods
sbb
adc
and
jnp
pop
pop
inc
inc
loopne
lahf
sbb
sub
inc
jmp
pushf
sbb
xor
xchg
or
push
fsub
mov
fdiv
xlat
sub
ror
jle
out
fldl2t
ds
mov
add
pop
fld
movs
into
push
mov
add
mov
cmp
(bad)
pop
fwait
dec
scas
mov
popf
outs
sar
pop
in
or
mov
mov
adc
test
shl
aam
bound
das
popa
test
xor
xor
add
xor
inc
idiv
movs
inc
sahf
mov
dec
idiv
xchg
shl
loop
ret
mov
mov
and
jmp
in
fcom
dec
loopne
outs
loopne
or
arpl
test
add
sub
xlat
fisub
pop
cld
inc
mov
xor
or
lock
jmp
push
fist
fs
lahf
or
dec
inc
(bad)
and
aas
sbb
jo
inc
imul
and
bound
out
dec
mov
fdivr
jmp
dec
cmp
pop
push
push
and
xlat
shl
xchg
mov
sub
sub
sbb
xchg
sub
lods
fistp
outs
dec
outs
inc
push
push
jmp
int3
and
test
call
movs
sub
push
aad
push
out
icebp
mov
movs
sub
aad
es
outs
inc
and
sbb
movs
(bad)
ja
in
call
inc
or
add
sbb
push
push
jmp
nop
push
pop
pop
xchg
lahf
dec
pop
fsubr
pop
mov
mov
and
mov
mov
sub
cmps
mov
sub
shl
pop
test
adc
jno
rcr
jno
jae
dec
dec
pop
arpl
adc
cmp
loop
pusha
xchg
and
pop
mov
clc
jae
(bad)
test
mov
pop
adc
mov
mov
icebp
ja
neg
add
test
push
les
mov
lods
mov
les
mov
fimul
rcl
sbb
sub
inc
push
nop
push
pop
(bad)
repz
jp
lods
sti
fmul
inc
mov
mov
iret
mov
lods
add
pusha
sbb
dec
out
lods
bswap
ret
mov
pop
fwait
(bad)
xor
ja
je
imul
aad
mov
fisttp
test
lock
mov
push
cmp
cdq
mov
ss
fchs
mov
dec
ret
fcomp
shl
sbb
adc
jb
pop
or
push
in
div
adc
cmps
fmulp
mov
xor
in
push
mov
mov
mov
pushf
add
jp
stos
sub
fcmovb
cmp
cld
loop
int3
or
sti
add
retf
retf
pop
inc
lods
addr16
push
mov
(bad)
sbb
push
push
mov
out
push
movs
and
ins
adc
xor
mov
mov
mov
inc
xchg
fidivr
mov
iret
movs
mov
adc
add
xor
mov
jge
mov
paddsb
mov
pop
pop
in
push
push
cmps
inc
jae
mov
push
imul
dec
lock
mov
jo
and
enter
pop
mul
sahf
rcl
mov
xchg
push
mov
xlat
ja
mov
iret
cmp
out
lock
js
dec
jecxz
cli
mov
and
loope
(bad)
mov
push
mov
or
cld
jns
push
or
hlt
int3
cdq
nop
xor
adc
jecxz
neg
popf
mov
leave
ds
repz
lahf
inc
rcr
lods
aaa
jne
push
dec
dec
or
sbb
mov
adc
push
cmc
jnp
cdq
xchg
push
stos
aad
push
fs
adc
inc
ror
push
icebp
adc
dec
push
outs
and
rcl
retf
sahf
les
pop
and
test
sub
imul
call
hlt
cs
dec
adc
sub
pop
push
mov
xchg
xchg
out
sub
ret
jge
fcomp
push
add
or
push
mov
cmp
push
or
aaa
adc
fcomp
daa
in
cld
dec
push
or
mov
sub
les
cli
jp
test
mov
jno
sub
mov
data16
lea
jl
and
jmp
push
rol
std
outs
dec
(bad)
and
mov
cmps
test
adc
and
xlat
lds
dec
ss
fcomp
out
and
pop
adc
inc
push
test
dec
mov
xchg
jmp
in
jecxz
sbb
call
mov
sub
pop
sbb
push
in
add
and
pop
ins
mov
xor
int3
loope
js
in
dec
mov
mov
fidiv
inc
adc
ret
fisub
xor
icebp
pushf
(bad)
cmp
fs
jne
out
or
add
mov
loopne
sbb
bound
or
dec
fnsave
fdivrp
or
adc
pushf
sbb
cs
clc
and
hlt
rol
mov
enter
mov
xchg
or
jno
lea
or
cmp
lods
adc
jns
inc
stos
push
sbb
cdq
addr16
mov
mov
jg
pop
xchg
jmp
pushf
sbb
inc
les
push
inc
gs
jnp
mov
addr16
mov
cmp
call
sub
and
xchg
addr16
call
ret
retf
xlat
aam
ds
push
xchg
(bad)
mov
loopne
(bad)
aaa
lock
dec
pop
lds
sub
sbb
data16
pop
cs
sti
aas
adc
loopne
cmp
jecxz
and
adc
inc
inc
sbb
arpl
addr16
retf
adc
std
inc
loopne
mov
lods
not
sub
mov
push
inc
jmp
push
mov
lds
mov
das
jnp
xchg
rcr
xchg
pop
mov
test
pop
mov
sti
mov
fnstcw
sub
out
jns
fistp
shl
sbb
bound
jnp
out
stos
cld
mov
(bad)
les
push
ins
sub
mov
cld
in
prefetch
or
mov
jmp
mov
loope
arpl
add
mul
or
in
xchg
jmp
or
xchg
repnz
and
xchg
test
aaa
ret
push
pop
mov
push
jmp
dec
pop
in
(bad)
lods
or
pusha
mov
mov
int3
fcom
dec
(bad)
xchg
js
fsub
jno
mov
lea
sbb
ins
icebp
fdivr
xchg
dec
dec
iret
adc
jmp
aaa
pusha
std
fst
(bad)
aam
aad
cld
adc
adc
imul
dec
jb
fcom
(bad)
push
mov
push
fstp
cmp
test
ret
in
ret
jno
push
das
mov
add
(bad)
(bad)
loop
dec
pop
out
in
mov
bswap
addr16
call
mov
mov
int3
push
std
movs
fxch
push
mul
dec
mov
and
jp
pop
out
loop
jb
adc
addr16
dec
xchg
mov
cdq
enter
jb
pusha
add
pop
and
jno
sub
push
or
popf
pop
fimul
outs
int3
xor
std
fsubp
fcom
jg
cmps
rol
test
loope
dec
cs
adc
xlat
sbb
inc
pop
stos
sbb
and
push
lahf
imul
imul
mov
mov
(bad)
test
in
(bad)
ds
pop
push
dec
sub
cmp
cmps
cmp
or
sti
pop
fwait
or
(bad)
push
mov
neg
imul
test
mov
addr16
imul
out
xor
jmp
mov
pop
pop
fwait
jae
pushf
test
sbb
adc
rcl
cmp
ret
shl
adc
mov
push
xor
pop
push
imul
sbb
scas
jg
das
sti
inc
dec
loope
push
int
xchg
int
mov
push
xchg
rcr
and
icebp
jb
jbe
adc
xor
push
rol
sbb
rol
and
push
hlt
lock
mov
rol
mov
sub
mov
out
sbb
jp
mov
fisttp
dec
xor
jne
mov
mov
loopne
add
pop
retf
div
pop
aad
ret
dec
imul
mov
or
fsub
or
test
sub
dec
sar
sbb
sbb
pop
fdivr
(bad)
mov
mov
out
fimul
aam
sub
shl
in
jg
xchg
push
pop
inc
js
push
loop
xchg
xor
sahf
sub
xchg
adc
push
mov
out
(bad)
or
push
jne
pusha
push
and
lea
jb
mov
cmp
fnstsw
mov
pop
adc
sbb
test
cmc
push
je
les
xchg
or
mov
mov
sub
popa
push
sbb
test
sub
(bad)
mov
jno
test
inc
in
mov
in
push
jecxz
mov
ja
push
sub
sub
sub
cs
or
jnp
scas
sbb
adc
aaa
cli
rol
fisubr
popf
xchg
fs
dec
pop
cs
xor
pop
shl
inc
lock
mov
push
test
jb
sbb
in
pop
hlt
pop
hlt
xchg
(bad)
adc
lea
sub
jmp
(bad)
and
push
sub
xchg
jae
push
jns
mov
push
out
mov
fadd
mov
mov
xor
cld
xchg
push
daa
xchg
and
xchg
adc
fwait
adc
pop
iret
pushf
dec
xor
call
aad
jp
outs
sahf
mov
add
sbb
mov
call
inc
shl
jne
push
and
xlat
mov
cmp
test
test
(bad)
pop
icebp
or
(bad)
xchg
xlat
mov
jl
test
and
push
pop
popf
(bad)
leave
rcr
adc
mov
jle
stos
jle
xchg
lods
inc
pop
pop
and
(bad)
je
outs
pop
sbb
dec
lahf
movs
jmp
push
imul
pop
jns
daa
cmp
dec
mov
daa
pop
rol
push
(bad)
out
mov
push
popa
cld
push
sbb
inc
sbb
pop
out
jl
pop
push
pop
dec
dec
lock
adc
(bad)
cmc
sbb
shl
stos
fcmovnb
pop
dec
in
je
(bad)
clc
mov
mov
addr16
fsubr
pop
push
enter
lahf
pop
sbb
int3
clc
adc
dec
sahf
cdq
test
add
and
push
popf
mov
lds
in
movs
ret
pusha
mov
xchg
inc
fstp
ins
sbb
or
or
cmp
into
or
mov
or
call
daa
loope
ficom
mov
aad
in
mov
stos
pop
cs
sbb
aaa
jb
imul
dec
repnz
or
xchg
retf
pop
aas
cld
mov
lea
dec
mov
cmc
movs
add
(bad)
push
inc
fiadd
sbb
gs
pop
inc
inc
add
jge
sub
cmc
sbb
dec
cwde
iret
pop
and
stc
fwait
xor
movs
in
out
inc
inc
sbb
sbb
clc
add
das
loopne
add
pop
cdq
mov
add
push
ins
fdiv
ffreep
xor
repnz
mov
int3
test
jae
rcr
dec
(bad)
je
xchg
mov
les
jns
pop
mov
shr
in
push
push
outs
push
add
jg
inc
adc
pop
xor
int3
xor
mov
mov
test
mov
add
jge
jmp
mov
sbb
stc
aaa
jge
les
(bad)
push
dec
cdq
mov
fwait
dec
jl
dec
jne
rol
sbb
push
or
lods
mov
(bad)
js
dec
add
or
xchg
sub
pop
retf
push
lea
and
mov
xor
call
xor
repz
mov
hlt
jnp
pop
and
xchg
sub
cmps
xchg
push
sbb
(bad)
aad
data16
mov
jmp
sub
dec
inc
stos
ins
inc
adc
dec
xor
ret
and
nop
and
icebp
xchg
inc
in
mov
dec
fstp
pop
pop
test
retf
test
arpl
hlt
push
(bad)
les
add
jns
cmp
and
cdq
jnp
and
rol
in
cli
mov
rcr
cdq
xchg
mov
adc
(bad)
fsub
or
xchg
shl
out
ror
loop
xchg
sub
adc
mov
inc
or
mov
and
push
fidivr
mov
int
arpl
not
mov
fwait
iret
(bad)
out
inc
mov
popf
mov
sub
test
ficomp
mov
push
les
mov
pop
sub
scas
mov
add
(bad)
xchg
cmp
push
lea
(bad)
xlat
add
sub
pop
mov
pop
jno
(bad)
cdq
push
js
mov
(bad)
fmul
pop
idiv
jns
xor
cmp
sub
pop
lods
popa
push
mov
lock
inc
sub
fucompp
(bad)
pop
movs
sbb
fsub
pop
xchg
inc
(bad)
mov
adc
or
xchg
pop
xchg
leave
xchg
fyl2xp1
cmp
sub
pop
xlat
jmp
or
mov
data16
xchg
or
les
cld
(bad)
push
adc
inc
add
adc
or
inc
ds
jl
add
sub
lods
inc
and
xor
lea
fisub
fist
add
(bad)
fwait
dec
jne
add
pop
mov
mov
hlt
inc
call
or
mov
in
mov
cmp
jmp
(bad)
or
and
lds
mov
dec
pop
aam
push
inc
mov
pop
push
pop
sbb
adc
or
sub
adc
aad
xchg
dec
lods
pop
sbb
stos
mov
shr
iret
push
xor
add
cld
dec
ss
jp
test
mov
adc
dec
fwait
pop
inc
mov
nop
std
xor
sbb
dec
add
out
sub
sub
inc
mov
cld
test
dec
lea
test
mov
test
pop
ror
dec
daa
add
push
jmp
inc
and
ds
ins
iret
inc
adc
loopne
cld
xlat
mov
sbb
cmp
pop
in
mov
(bad)
pop
cmp
sbb
sub
sti
and
aam
sub
movs
add
sub
or
(bad)
cmps
xor
cmp
mov
sbb
mov
mov
sti
pop
mov
daa
inc
dec
std
pop
xor
jmp
lock
lds
push
pop
adc
push
fnsave
or
addr16
mov
xor
out
out
jne
dec
cs
sub
sbb
neg
mov
inc
out
(bad)
cmp
mov
ret
push
sbb
inc
push
xchg
dec
and
xlat
jae
pop
fs
(bad)
stc
lock
adc
xor
jp
xchg
add
jmp
and
into
mov
stc
enter
shl
xchg
outs
inc
and
pop
rcl
jp
adc
sub
out
dec
mov
mov
dec
mov
push
xor
mov
jl
sbb
pop
push
lahf
aad
(bad)
pop
es
mov
fist
push
xchg
in
cmp
pop
scas
mov
push
pop
ja
or
dec
mov
aam
mov
pop
(bad)
daa
add
mov
mov
cwde
mov
(bad)
(bad)
ss
lock
cmps
test
jmp
lds
pop
mov
pop
add
inc
shl
les
pop
mov
dec
es
mov
inc
rcr
lods
jno
loopne
mov
or
in
pushf
rol
retf
arpl
shr
push
sti
pop
xor
aas
sub
movs
or
in
add
or
(bad)
pop
xor
cwde
fild
xchg
dec
loopne
jmp
push
icebp
ficom
ds
pop
int
jmp
retf
lldt
cmp
cdq
jno
xor
call
pop
xor
push
test
jnp
or
out
rol
add
sub
mov
sbb
mov
sbb
xchg
call
(bad)
xchg
jmp
cmp
push
cmp
lock
cs
int3
sbb
xchg
aad
ja
dec
cmp
jmp
enter
mov
sahf
pop
push
jmp
ja
call
shl
pop
(bad)
jo
in
in
push
dec
div
pop
or
retf
rcl
mov
popa
sbb
es
adc
push
ficom
cmp
pop
out
lahf
mov
shl
jnp
call
sub
adc
mov
fld
dec
(bad)
lahf
sub
ror
jno
ja
inc
xor
ficomp
enter
adc
pop
xchg
pop
pop
mov
pop
(bad)
mov
(bad)
xor
test
jbe
popf
adc
sbb
push
pop
sbb
push
inc
test
fldenv
dec
xchg
inc
or
retf
jno
sub
in
ins
gs
call
les
nop
int3
and
xor
mov
push
outs
or
sub
pop
adc
rcr
mov
mov
mov
mov
out
retf
cmps
sbb
(bad)
mov
and
push
inc
(bad)
sub
cmps
mov
add
loopne
gs
test
or
pop
lahf
inc
and
add
imul
mov
pop
add
jecxz
aam
xchg
pop
xor
mov
adc
(bad)
shl
xor
shl
stos
mov
push
cs
xlat
xor
mov
loop
fistp
and
fld
sub
into
mov
sub
dec
popf
rcl
inc
out
lods
icebp
bound
sahf
daa
mov
fistp
mov
adc
cld
push
inc
cdq
mov
aad
mov
add
scas
inc
adc
xchg
inc
int3
sbb
(bad)
leave
sub
adc
xor
fidivr
arpl
push
int3
enter
lods
loopne
add
repnz
daa
nop
jecxz
(bad)
popf
loopne
popa
mov
daa
shr
adc
dec
aad
cli
and
cld
pop
js
popa
lods
stos
mov
dec
and
push
push
or
cmp
jge
mov
jo
pushf
stc
ins
jns
push
ds
sub
and
mov
dec
jmp
sub
push
pop
test
dec
int
fsub
cmp
lock
jae
mov
jae
push
mov
push
inc
cmps
aam
stc
repnz
stos
int3
scas
add
inc
jno
mov
or
int
mov
jp
nop
inc
scas
cli
iret
xor
mov
mov
gs
pop
mov
and
mov
(bad)
jg
jne
xchg
icebp
sar
loop
push
xor
pop
sbb
push
inc
aam
mov
push
sub
xlat
push
ja
test
cld
or
inc
into
fcmovnu
inc
sar
or
push
dec
or
imul
test
fwait
jl
mov
call
pop
in
push
mov
(bad)
in
pop
ins
dec
push
icebp
xor
clc
push
jb
or
adc
mov
push
out
mov
fst
out
mov
aam
push
push
add
aad
loop
movs
jp
jnp
cmc
sub
arpl
push
jns
hlt
ficom
ins
or
dec
jmp
or
(bad)
add
retf
pop
scas
jmp
gs
out
fwait
es
in
mov
btc
popf
jno
sbb
movs
inc
cmp
imul
push
test
sahf
dec
jp
test
mov
jmp
xor
xor
fild
sub
imul
ins
or
and
mov
neg
sbb
int3
sub
jbe
inc
loope
(bad)
fnstcw
add
ja
gs
sub
cmp
dec
xchg
inc
cs
sahf
ds
add
je
mov
hlt
inc
push
pop
cwde
push
or
push
stos
sub
cmp
imul
mov
inc
(bad)
dec
pop
test
xchg
mov
and
sbb
add
aad
add
loope
inc
push
add
add
outs
lock
jnp
xchg
stos
xchg
adc
and
xchg
clc
xchg
in
xor
stos
test
add
pop
out
mov
jmp
mov
pushf
and
mov
xchg
xchg
dec
in
add
ret
mov
push
mov
int
xchg
js
xor
mov
pop
adc
pop
ret
adc
push
sbb
inc
xchg
setle
pop
das
ds
inc
xor
pop
fdiv
mov
test
lods
inc
cwde
dec
cld
hlt
adc
clc
lea
jne
arpl
add
adc
stos
sbb
rcl
add
(bad)
pop
dec
pop
sub
scas
aaa
loopne
in
fdiv
jmp
les
aaa
pop
neg
push
sub
loopne
sbb
sub
enter
xchg
sar
loop
xlat
xchg
xchg
sbb
mul
and
mov
stc
or
inc
mov
jge
pop
ror
xchg
add
mov
cmp
ja
xchg
pop
dec
pop
sar
dec
in
inc
jge
or
xchg
rcl
rol
dec
inc
cmps
ins
xor
or
shl
nop
jmp
push
out
mov
push
cmp
outs
inc
pop
xlat
rol
and
gs
scas
adc
jb
or
bound
stc
adc
aaa
test
mov
jmp
sub
shr
(bad)
push
and
std
mov
(bad)
xor
sub
(bad)
mov
daa
xchg
adc
fistp
mov
push
imul
inc
outs
in
xchg
jp
dec
outs
(bad)
push
or
dec
dec
aam
fnstsw
shl
add
jnp
sar
daa
push
jae
nop
adc
sbb
mov
pop
call
mov
test
xchg
adc
push
rol
pop
ss
pop
shr
inc
ins
mov
xor
sahf
mov
ss
xlat
mov
shl
add
cmp
push
push
(bad)
fmul
xchg
pop
xchg
or
mov
aam
push
mov
ins
cmp
loopne
and
mov
in
nop
or
or
cs
fwait
out
dec
ja
lahf
or
int3
cli
jecxz
stos
fsub
mov
xchg
cld
lea
push
test
jnp
std
mov
or
mov
jl
mov
cmp
adc
imul
fcmovu
fwait
(bad)
jmp
arpl
push
xor
xchg
or
movs
and
jae
xor
jno
xchg
in
sub
hlt
adc
in
dec
js
mov
and
out
loopne
push
fist
repnz
aam
cmp
pop
bound
das
test
push
adc
push
xchg
sub
repz
add
sbb
gs
cmp
adc
or
(bad)
mov
mov
fldz
adc
jle
(bad)
sbb
pop
sahf
dec
mul
xor
jb
jmp
cld
pop
dec
jg
in
jg
mov
mov
(bad)
fstp
int3
fcmovbe
ja
fs
mov
jle
aad
add
push
jb
sbb
push
pop
cmp
in
sub
mov
nop
adc
pushf
retf
aaa
and
jb
outs
dec
cmps
adc
test
push
daa
mov
or
sti
push
jp
scas
jmp
sbb
dec
cmp
or
aam
stc
jmp
(bad)
cmc
jp
out
(bad)
rcl
(bad)
adc
data16
inc
enter
(bad)
pop
sub
sub
fsubr
mov
xchg
mov
mov
jg
inc
add
push
outs
les
lahf
mov
inc
or
xlat
fld
leave
es
jge
in
add
xchg
cmp
dec
xchg
icebp
test
add
aam
mov
mov
mov
loopne
add
bnd
or
cmps
jmp
mov
aaa
out
icebp
test
js
shr
lea
xor
xlat
push
mov
inc
bound
pop
pop
mov
sahf
pop
inc
imul
jb
push
cmp
outs
xor
pop
jge
into
dec
les
push
pop
cmp
cmps
fwait
in
lods
mov
jmp
or
push
inc
in
or
pop
xor
(bad)
mov
aas
mov
mov
das
adc
fs
push
lods
mov
stc
cmp
xlat
dec
or
nop
pop
(bad)
mov
cmp
mov
sbb
call
jge
dec
add
xor
jnp
xor
xchg
idiv
mov
xchg
js
xor
push
xchg
xchg
test
add
sbb
fcmovne
fistp
sub
add
sbb
dec
pop
cmps
lds
call
cwde
sbb
jb
sub
adc
xchg
pop
dec
pop
iret
outs
xchg
cs
clc
jge
push
in
in
rcl
pop
xchg
stc
out
lea
shl
iret
sub
mov
lods
(bad)
pop
pop
xchg
imul
jmp
lds
rcl
pop
(bad)
ficom
sub
int3
push
out
lods
sahf
in
xchg
jmp
pushf
fmul
sbb
(bad)
addr16
cmp
enter
xchg
imul
out
sbb
inc
shl
push
stc
and
sbb
xor
lea
adc
pop
adc
ins
inc
dec
rcr
mov
int
fdiv
push
test
cmps
and
jnp
mov
ror
call
pop
fcmovnb
and
cdq
jns
dec
xlat
sahf
loop
(bad)
pop
push
(bad)
pushf
or
outs
shl
imul
es
xor
je
fnstenv
sub
mov
push
je
inc
js
call
pop
jbe
jecxz
sub
fcom
cdq
addr16
sub
retf
push
leave
dec
stos
sub
mov
imul
xlat
(bad)
push
out
jne
inc
aam
or
lock
jae
dec
loopne
cs
cmc
xchg
xchg
out
ins
outs
aad
in
outs
mov
and
cmps
dec
cdq
xlat
pop
inc
cmps
push
pop
cmp
mov
dec
imul
pusha
mov
(bad)
rcr
adc
cmp
cld
call
(bad)
and
mov
push
aaa
push
popa
nop
push
mov
push
cmp
lods
daa
and
push
xchg
xchg
ror
pusha
mov
fstp
(bad)
jmp
pop
icebp
xchg
sub
jmp
stos
gs
cmps
cdq
ret
push
test
mov
xchg
cmp
dec
jo
xchg
pop
mov
ret
je
sbb
test
add
push
dec
sub
nop
push
push
sbb
icebp
ss
ins
sbb
pop
in
jbe
or
scas
pop
adc
adc
imul
and
out
xor
in
ror
mov
js
add
inc
mov
ins
adc
pop
push
add
xchg
dec
idiv
mov
xchg
jl
or
aam
jmp
test
iret
xchg
adc
adc
shr
fdiv
inc
jl
nop
lock
push
fisttp
scas
cmps
loop
imul
loopne
adc
pop
in
nop
pop
jp
jmp
jmp
pop
jb
pop
xchg
xchg
sub
setbe
cmp
mov
xor
cmp
iret
inc
sbb
pop
mov
mov
xchg
iret
jmp
and
dec
jnp
sub
stos
xchg
pusha
inc
sahf
add
pop
loop
push
int3
nop
rcl
in
cli
scas
punpckhdq
shl
pop
add
jg
inc
cmp
pop
aam
xchg
add
sti
cmps
loopne
push
shl
jp
mov
lods
sbb
jb
sbb
and
lock
in
xlat
loop
cmp
cs
fst
sbb
cmp
inc
or
or
pop
add
ror
push
vmovaps
pop
sbb
sub
inc
scas
dec
add
movs
dec
jbe
jge
add
fpatan
out
das
cmp
xchg
(bad)
jecxz
and
sbb
ja
call
cmp
xchg
push
mov
or
xor
fisubr
std
cmps
(bad)
mov
test
xchg
xor
or
or
cmc
imul
inc
idiv
icebp
jl
lahf
popf
fild
dec
inc
pushf
jno
cmc
loope
and
xor
nop
mov
pusha
xor
sbb
cmp
adc
xlat
push
pop
cs
sbb
fs
cmp
mov
mov
jg
push
pop
dec
or
retf
dec
les
ins
or
mov
addr16
daa
mov
stos
pop
cli
mov
call
adc
aas
jp
jl
push
retf
xor
pop
ins
call
rcr
push
jns
push
xchg
and
or
sbb
cmc
inc
xchg
(bad)
ficomp
imul
adc
lock
add
xlat
into
inc
data16
retf
aad
bound
xchg
fwait
dec
in
inc
xchg
jmp
inc
fidivr
ins
cdq
sti
mov
repz
push
imul
xor
jg
pop
inc
push
call
call
out
sub
ror
mov
mov
sub
add
int
xor
pop
out
mov
xor
add
pop
xchg
cld
into
adc
mov
inc
and
pop
jmp
jnp
inc
pop
fst
js
daa
shl
mov
out
mov
mov
mov
test
pop
sbb
sti
pop
mov
add
mov
dec
aaa
adc
push
sbb
repnz
add
sbb
inc
test
outs
div
dec
mov
cdq
pop
xchg
icebp
xchg
mov
ds
fild
push
std
js
rcr
mov
in
jo
stc
sub
mov
xchg
mov
enter
out
mov
sub
in
push
jmp
imul
pop
dec
mov
or
mov
sbb
test
add
inc
inc
sub
lahf
mov
dec
push
cmp
xor
sar
xchg
mov
std
xor
adc
clc
pop
and
leave
push
add
sbb
pop
mov
btc
jp
test
xor
cmp
mov
pop
push
xchg
popa
mov
js
adc
retf
mov
xchg
das
inc
dec
sub
pop
sub
mov
icebp
push
je
push
stc
jno
fidivr
adc
dec
mov
arpl
inc
xor
pop
aaa
push
inc
aam
mov
or
into
pop
xchg
pushf
popa
adc
repnz
sahf
cmps
sbb
les
std
arpl
xor
stos
out
mov
adc
mul
stos
mov
xchg
xor
out
mov
aas
imul
out
add
(bad)
rcr
inc
std
push
inc
mov
out
stos
xlat
inc
loopne
popa
(bad)
lahf
enter
dec
dec
push
inc
inc
(bad)
cdq
fdivr
sub
and
mov
adc
pop
popa
dec
sub
je
(bad)
sbb
xor
sti
cs
jae
push
pushf
(bad)
daa
aaa
jle
mov
aam
rol
add
sub
imul
jmp
inc
add
pushf
sbb
aam
add
(bad)
aaa
aaa
push
mov
pop
retf
loope
(bad)
push
xor
adc
jno
rcl
mov
mov
inc
or
adc
cwde
ins
in
(bad)
mov
sahf
arpl
ins
push
rol
loop
int
mov
and
in
inc
inc
(bad)
imul
sar
dec
mov
mov
or
jecxz
dec
jo
sbb
pop
mov
je
and
ror
jge
or
and
dec
fcom
inc
jge
dec
ret
and
aam
sub
into
jne
push
int
adc
inc
push
jp
jmp
div
stos
scas
fidivr
sbb
add
pop
lods
out
mov
(bad)
push
(bad)
retf
lock
pop
sar
pop
dec
adc
lea
gs
dec
jecxz
jge
aad
pop
and
mov
aad
popa
ja
mov
pop
out
jo
jg
pop
in
pop
cmp
idiv
push
outs
js
clc
push
pop
sub
sub
repnz
lock
lock
mov
imul
mov
sub
xchg
inc
mov
push
call
jns
sbb
lock
push
fidiv
das
cdq
rcr
dec
xlat
daa
mov
mov
aaa
mov
iret
jle
sti
jecxz
inc
xor
sub
popf
xchg
push
inc
mov
jg
daa
cld
add
push
ds
cmps
icebp
fidivr
shl
out
shr
adc
inc
lods
or
mov
ja
or
xchg
cs
shl
repz
xchg
inc
repz
es
push
mov
sbb
mov
fbstp
dec
adc
into
ja
cmp
mov
sbb
mov
mov
cmp
push
xchg
enter
or
cmc
mov
or
inc
jbe
jb
fst
sub
scas
test
push
mov
popf
pop
mov
ds
push
and
iret
outs
adc
cmps
out
add
adc
test
retf
xor
jnp
and
dec
sbb
dec
and
cmp
stos
pop
xlat
(bad)
sub
shl
enter
daa
jle
adc
(bad)
mov
iret
into
xchg
jmp
outs
loope
arpl
pop
or
jmp
sbb
in
cmp
or
in
push
stos
loopne
fdiv
or
fnsave
jecxz
pop
in
push
div
dec
push
stos
repz
sar
jge
adc
cdq
mov
jno
in
popa
dec
sti
push
push
add
in
mov
frstor
sbb
jl
popa
adc
(bad)
scas
sar
jnp
xor
int3
aam
jmp
ficom
mov
sbb
sbb
test
in
psrlw
rcr
dec
mov
pop
sub
mov
xchg
pop
mov
mov
inc
(bad)
in
mov
inc
pop
fs
mov
ja
push
(bad)
pop
imul
lock
push
mov
fadd
mov
push
mov
test
sbb
xlat
inc
in
push
push
test
sahf
sub
fimul
js
mov
leave
mov
sti
xchg
mov
push
fnstsw
and
sub
sub
ret
ficom
add
push
sti
pop
mov
mov
ret
cmp
dec
enter
ins
mov
adc
std
pop
jge
test
mov
adc
repnz
jb
pushf
call
icebp
pop
clc
aaa
adc
sahf
aam
sub
pop
(bad)
inc
jg
push
fild
stc
(bad)
leave
jns
add
mov
dec
ss
or
sbb
sub
lock
sbb
sbb
and
aaa
outs
lock
lahf
sahf
lock
repnz
ja
fcomp
push
jno
call
div
int
lock
dec
adc
mov
pop
push
and
mov
sub
xchg
inc
push
dec
in
xor
addr16
adc
jge
ins
adc
test
add
(bad)
dec
cmps
cmp
cmp
ja
cli
loope
int
and
aaa
shl
add
cmp
ja
mov
(bad)
adc
(bad)
test
idiv
les
pushf
sbb
cmp
mov
ss
mov
je
out
xlat
ret
jo
xlat
push
jle
test
add
fxch
xchg
cli
sahf
push
or
pop
xchg
push
push
lea
shr
movs
dec
add
cli
fwait
dec
sbb
jmp
imul
add
shl
cmps
mov
sbb
jmp
in
adc
pop
adc
cmp
pop
(bad)
loop
xlat
cmp
repz
mov
sub
jo
pop
mov
push
xor
daa
cmp
pop
sub
stos
xchg
mov
ja
inc
mov
jne
out
mov
cmp
push
fwait
xchg
jg
jmp
icebp
adc
dec
jns
sub
lods
xor
ds
pop
rcl
movs
xchg
(bad)
and
aas
imul
lea
mov
aas
in
(bad)
add
fstp
into
fidivr
(bad)
jle
mov
je
sub
fst
repnz
imul
xchg
(bad)
xlat
adc
pop
mov
(bad)
xor
mov
pop
and
es
nop
fidivr
adc
mov
daa
xor
jmp
lea
movs
pop
dec
sbb
xor
cwde
pop
shl
ret
ret
sub
inc
popa
int3
ret
into
push
test
mov
in
dec
cmp
cwde
fwait
sub
xchg
test
adc
mov
loop
out
mov
repz
(bad)
rol
jb
jnp
repnz
shl
jbe
rcr
push
(bad)
fwait
pop
xor
and
icebp
in
cmps
retf
push
das
adc
mov
cmp
mov
pop
sub
push
(bad)
into
(bad)
mov
cmp
mov
aad
adc
xchg
daa
mov
pop
and
repz
not
mov
ins
sahf
mov
mov
push
pop
pusha
mov
cmp
les
pop
jg
popf
idiv
adc
ffree
in
xor
retf
test
mov
addr16
enter
es
mov
push
xlat
(bad)
push
dec
popa
retf
rol
fld
jmp
push
ror
fwait
arpl
mov
scas
mov
xchg
sbb
iret
mov
in
jo
ja
idiv
iret
int
pop
call
mov
sub
iret
sbb
lea
ins
shl
or
push
out
in
or
addr16
mov
ror
jns
loop
or
test
push
lahf
jmp
adc
cli
pop
outs
pop
dec
xchg
dec
dec
lahf
ss
add
xor
pop
pop
sti
jg
ror
mov
cdq
addr16
lock
stos
add
dec
sub
cmps
sub
movs
inc
xchg
nop
sbb
or
xchg
sbb
scas
int3
repnz
sub
mov
or
cmp
jecxz
call
inc
out
loopne
inc
and
dec
mov
mov
rcl
sub
pop
xchg
xchg
test
dec
rcr
xor
and
movs
in
mov
push
test
cmp
xor
xor
cld
jno
mov
ret
pop
or
mov
jo
inc
push
mov
pushf
lock
xchg
or
cmp
and
sub
push
xor
lods
mov
push
loope
xor
mov
inc
aas
mov
popf
shr
inc
test
jle
es
cmp
pop
aam
add
pop
vpsrlw
stos
mov
dec
sbb
cmp
pop
jno
mov
shl
inc
jmp
pop
sti
test
mov
pop
lock
fst
and
outs
pop
dec
push
cmp
and
jnp
add
(bad)
icebp
test
or
pushf
fist
push
inc
rcr
add
out
outs
sahf
and
adc
push
stc
cmp
enter
(bad)
cld
rol
xor
pop
ret
imul
(bad)
call
hlt
cli
scas
lods
add
xlat
outs
mov
mov
sub
cmp
(bad)
dec
cmp
sbb
(bad)
cmp
imul
mov
(bad)
ror
retf
rcr
pop
mov
push
mov
and
call
pop
cmp
clc
loope
cmp
stc
sub
push
mov
cdq
mov
inc
add
lea
mov
aas
ins
jecxz
mov
adc
adc
fcomp
mov
int3
push
dec
fisubr
test
test
not
mov
mov
sbb
or
pop
cmc
xchg
adc
xchg
les
fisub
inc
hlt
inc
out
sbb
add
call
ins
dec
imul
(bad)
sub
sbb
or
cmp
or
fchs
mov
inc
stos
pop
fdivr
push
or
inc
fldcw
stos
loopne
rcl
popa
hlt
dec
dec
xor
mov
loope
or
and
push
xor
enter
in
leave
push
jno
ficomp
retf
jmp
push
mov
mov
push
xor
push
jmp
xchg
sub
jbe
or
pop
mov
jbe
xchg
push
fisubr
stos
out
jnp
jne
(bad)
loopne
lahf
push
neg
test
lock
and
push
cmp
sbb
and
test
ja
inc
xchg
cmps
push
les
dec
inc
jmp
out
dec
cld
jae
loopne
add
xor
add
mov
lock
jmp
xchg
push
push
int3
sbb
xor
jl
mov
mov
pop
mov
(bad)
adc
loope
in
jo
cmp
mov
enter
es
mov
in
sbb
mov
fist
mov
pop
loopne
xchg
mov
sar
mov
js
dec
sar
dec
ret
add
je
push
rol
dec
pop
cmp
xchg
fcomp
push
dec
leave
or
pop
(bad)
aaa
rcr
sub
imul
outs
popa
mov
lods
jbe
xlat
fcomi
push
dec
ss
jl
sub
dec
inc
loopne
push
jmp
mov
rol
ret
in
and
pop
mov
dec
pop
cmps
pop
jnp
add
pop
(bad)
jge
fdiv
fs
rcl
jp
cmp
xor
adc
or
repnz
push
xchg
neg
dec
or
mov
inc
mov
pushf
mov
xchg
dec
stos
pop
les
sbb
ins
push
adc
nop
out
pop
dec
retf
sub
pop
call
or
imul
into
add
push
inc
mov
retf
inc
xchg
aas
and
ror
mov
fdiv
cmp
jl
test
and
call
popf
sbb
data16
loopne
pop
cmp
xor
sub
mov
push
aam
imul
dec
mov
cmps
scas
aad
shl
jo
jp
fsub
and
or
mov
pop
pop
jg
cmp
xchg
imul
mov
mov
fisttp
mov
cmp
or
es
xor
add
xor
dec
push
jge
xchg
mov
sbb
add
rol
out
lds
adc
popf
or
dec
fs
jg
mov
pop
popa
pop
stc
mov
(bad)
push
ss
cdq
lock
aaa
retf
inc
aam
xlat
bndstx
inc
xlat
pop
jno
push
xchg
(bad)
repnz
pop
scas
(bad)
arpl
dec
cwde
movs
js
fdivr
or
adc
and
push
outs
les
out
dec
mov
stc
fisubr
stos
adc
and
cmp
sbb
daa
fxtract
pop
inc
out
rcl
and
mov
stos
imul
or
(bad)
sbb
mov
into
int3
push
icebp
movs
int
cmp
(bad)
pop
dec
repz
pop
out
cs
fidiv
lock
fld
jl
pop
mov
dec
out
arpl
add
ins
aam
adc
push
add
dec
sbb
jge
ja
dec
mov
fcom
pop
fwait
(bad)
(bad)
fcomp
rol
aam
into
xchg
cmc
inc
ds
popf
mov
mul
cmp
sbb
clc
dec
daa
mov
into
in
xchg
js
retf
aam
ficom
movs
mov
add
pop
or
sbb
jge
loop
sub
inc
pop
or
addr16
adc
mov
inc
dec
or
mov
cmps
push
into
sbb
jo
pop
sahf
in
jl
or
ds
mov
cmp
pop
hlt
xchg
out
test
add
popf
jbe
imul
shr
pop
xlat
push
pop
es
xchg
(bad)
scas
xor
jno
inc
pop
xchg
push
mov
sub
jecxz
mov
leave
mov
sub
cs
pop
rcr
aad
jno
repz
imul
lods
or
addr16
mov
cli
xchg
inc
mov
pop
mov
dec
push
sbb
pop
inc
or
jnp
arpl
dec
lods
mov
lods
cmp
and
pusha
mov
cs
out
mov
(bad)
shl
sub
sub
cmc
xchg
hlt
test
mov
mov
jno
mov
iret
(bad)
jmp
cmp
cmp
sar
push
adc
jge
push
push
add
pushw
mov
in
ja
scas
mov
jns
nop
pop
call
in
and
jnp
jmp
aad
cli
adc
mov
in
xor
adc
scas
jp
mov
push
movs
leave
jl
lock
xor
and
jge
bound
cmp
inc
jl
(bad)
push
pushf
push
xor
outs
inc
fiadd
inc
repnz
mov
jle
xchg
mov
mov
xor
shl
or
push
pop
pop
je
js
adc
sbb
add
mov
dec
movs
inc
retf
push
in
sbb
and
stc
sub
aaa
les
test
loop
es
mov
fild
leavew
sbb
pop
mov
sbb
dec
cmc
(bad)
cld
mov
mov
retf
loopne
mov
test
pop
aam
adc
(bad)
push
sbb
cs
(bad)
jl
sub
and
ja
cmc
cmp
xchg
pop
stc
div
retf
mov
scas
test
or
(bad)
cmp
les
jmp
pop
cmp
xor
loope
push
rcr
jb
(bad)
push
mov
daa
sar
adc
imul
cmp
sub
and
adc
sbb
mov
mov
pushf
inc
xlat
dec
addr16
xor
mov
arpl
(bad)
jnp
adc
mov
push
test
ja
mov
add
das
aas
mov
ins
shl
mov
aad
mov
call
repnz
call
loopne
push
ins
push
and
(bad)
rcl
call
inc
mov
mov
aas
ins
mov
or
idiv
mov
or
retf
fisubr
ret
ss
je
into
mov
and
call
push
(bad)
cdq
shl
xchg
jo
pop
or
add
nop
clc
jb
stos
jmp
xchg
lock
sub
push
in
xor
mov
xor
dec
aad
stos
in
xlat
ins
outs
adc
imul
mul
repz
inc
(bad)
push
jmp
mov
mov
jno
add
mov
inc
jge
test
test
(bad)
push
jmp
jno
pop
(bad)
xlat
repz
jge
sub
scas
ins
mov
pop
cld
in
jp
mov
or
test
and
cmp
les
aas
pushf
push
cmc
xor
iret
aad
jg
mov
mov
push
jecxz
xor
sub
adc
cmp
ins
ins
jnp
ret
icebp
lahf
inc
icebp
mov
shl
shr
add
add
mov
or
jnp
fnstenv
(bad)
repz
test
gs
jbe
rcl
or
imul
adc
cmp
ja
push
arpl
(bad)
cmp
jb
sub
jle
cmp
pop
aaa
retf
mov
pop
fisub
shl
stos
popf
mov
cmps
xlat
sub
hlt
cwde
cmps
int
inc
stc
mov
in
bound
add
push
out
(bad)
mov
sub
sbb
ja
sub
sbb
pop
cs
pop
ss
jb
int3
ret
jmp
mov
pop
adc
pop
sti
into
cmp
or
(bad)
(bad)
push
push
mov
arpl
and
adc
jl
inc
dec
ficomp
in
sub
add
sbb
cli
mov
sub
xor
inc
cmps
test
loopne
aad
dec
pop
sbb
lods
xchg
push
cmp
(bad)
jo
movs
add
xacquire
retf
and
dec
xor
clc
pop
je
fst
out
cs
call
inc
(bad)
pushf
jns
adc
push
jbe
inc
pop
add
lea
push
inc
mov
xor
stos
cld
cs
cmp
je
popf
mov
out
pop
sub
gs
mov
outs
daa
enter
cdq
dec
mov
sub
mov
and
nop
out
cmps
hlt
sub
mov
push
adc
pop
cdq
cmp
hlt
adc
stos
push
inc
sti
enter
test
adc
jp
jne
js
dec
jl
mov
mov
mul
stos
es
mov
ss
sub
pop
and
mov
mov
mov
add
cmp
leave
movs
pop
dec
inc
cld
or
push
push
dec
mov
mov
aaa
xor
jae
call
jbe
jp
ins
add
(bad)
ins
inc
in
mov
inc
popf
mov
fist
sbb
xchg
xor
dec
jg
sbb
(bad)
shl
add
stos
outs
sahf
or
gs
lds
cmc
or
mov
loopne
sub
and
push
sub
or
adc
push
repz
sub
inc
ja
xchg
push
add
cld
push
and
add
add
in
add
xor
scas
cmovge
xchg
xchg
in
mov
cld
movs
xor
div
push
lock
mov
jmp
aam
pop
dec
or
dec
addr16
push
or
xchg
add
cdq
inc
inc
imul
pop
xor
shr
mov
div
mov
fiadd
out
bound
sahf
xchg
ins
addr16
xchg
and
xchg
jp
mov
or
mov
(bad)
sbb
mov
jb
sub
or
sub
mov
cmp
sbb
in
fnop
(bad)
dec
mov
sbb
and
jo
pushf
and
sub
cmp
push
call
cmps
adc
dec
push
adc
or
push
jle
or
enter
push
push
mov
cdq
loop
cmps
push
mov
gs
fst
dec
lods
cmp
cmp
and
iret
ins
imul
adc
idiv
jge
test
dec
sub
icebp
aam
not
sub
sahf
and
mov
inc
or
xor
dec
add
inc
inc
setnp
hlt
mov
add
dec
mov
push
aam
dec
int3
movs
mov
(bad)
push
sub
mov
push
ins
call
les
ror
inc
(bad)
mov
(bad)
adc
ret
push
out
add
inc
inc
and
aas
sbb
loop
xchg
add
(bad)
sub
icebp
inc
ins
aaa
cmp
mov
pusha
jnp
mov
push
and
shl
dec
stos
(bad)
aad
popa
not
loopne
sti
push
call
repnz
scas
popa
popf
dec
cli
mov
mov
adc
shr
clc
xchg
sahf
fdiv
push
ss
lock
jge
stc
push
dec
scas
adc
fwait
aas
push
dec
xchg
out
pop
mov
xor
cmp
push
ror
add
shl
call
hlt
stos
dec
sbb
mov
loop
out
mov
(bad)
and
and
lods
sar
je
gs
push
dec
sub
jne
xchg
or
aam
mov
mov
shr
mov
pop
iret
sbb
xor
add
and
pushf
dec
jg
dec
pushf
imul
mov
push
adc
ret
in
int3
lods
inc
mov
repnz
icebp
push
ss
add
gs
push
add
xchg
aam
sti
popa
jns
ss
fmul
cmp
dec
je
stc
inc
ja
xor
pop
test
fsubr
jae
repnz
push
dec
xor
and
clc
aad
lds
rcr
sub
test
xchg
sahf
mov
mov
pushw
out
jno
out
in
mov
jge
xchg
retf
xchg
push
les
dec
and
mov
push
rcl
adc
sti
stos
dec
add
(bad)
fsub
mov
cmp
test
out
std
packsswb
loop
fadd
jne
ss
pop
push
or
sar
inc
rol
xlat
out
(bad)
stos
adc
in
add
or
or
cmp
xor
push
addr16
out
mov
arpl
mov
and
fdiv
pop
ret
test
in
inc
mov
push
push
fnstcw
test
sub
cwde
or
cmp
cmp
dec
push
add
test
push
ror
or
icebp
arpl
imul
mov
stos
in
es
jle
jno
aad
jle
jno
cli
ins
sahf
mov
cmp
in
mov
jmp
and
addr16
cmp
icebp
and
fst
sub
xchg
adc
leave
movs
into
and
adc
cdq
push
mov
fidiv
arpl
mov
sub
adc
lods
int3
or
leave
xchg
sbb
lods
pop
xchg
adc
xchg
data16
sub
cld
out
into
pop
and
pop
cs
add
scas
aad
dec
add
or
gs
sbb
sti
jb
push
js
rcr
lods
add
cdq
and
ins
aad
mov
jb
push
pop
pushf
aam
add
jne
or
retf
div
pop
mov
mov
ins
pop
neg
nop
sub
jns
mov
jae
push
(bad)
out
sub
loopne
fwait
iret
mov
push
inc
push
and
xlat
lods
fcomi
xor
sbb
sbb
or
js
nop
or
jg
pushf
stos
int3
in
pusha
or
jle
or
jo
cmp
mov
dec
rcl
test
mov
xchg
pushf
cld
mov
xor
pop
or
cli
(bad)
jno
pop
mov
add
sbb
xchg
fsub
mov
mov
dec
mov
push
test
jb
sbb
push
arpl
lods
push
imul
jno
out
pop
call
jl
cmp
bound
inc
cmps
call
ficom
sbb
lods
scas
mov
retf
fwait
cmp
adc
add
pop
push
inc
sbb
mov
enter
or
stos
movs
mov
dec
cmp
arpl
cdq
push
or
jle
push
in
and
sbb
and
in
add
int
cdq
inc
and
mov
(bad)
xchg
outs
outs
pop
lea
push
das
push
(bad)
(bad)
mov
mov
and
or
push
pop
mov
jae
add
and
dec
mov
test
lock
nop
std
daa
adc
cmp
sar
aas
dec
hlt
inc
xor
lea
call
lods
jae
push
stos
arpl
dec
pop
xor
inc
inc
retf
push
aam
sub
pushf
loopne
adc
iret
jg
xchg
push
xor
jge
jne
cmp
jl
aam
shl
push
adc
sub
loop
(bad)
into
jbe
mov
and
sar
daa
push
push
cdq
xchg
adc
sub
mov
dec
adc
jge
jg
sub
pop
jecxz
add
adc
push
sahf
inc
shl
(bad)
add
jbe
push
jp
pusha
mov
dec
fcom
imul
jns
movs
xor
gs
and
pusha
fs
mov
xor
jmp
lahf
mov
jl
dec
mov
xchg
mov
jns
mov
(bad)
js
popa
fistp
cmp
stos
lock
pop
jnp
cmps
in
inc
mov
pop
in
add
jge
jl
jo
popa
shl
add
in
jae
outs
sub
and
mov
adc
fsub
cmps
and
fisttp
(bad)
stc
adc
or
shl
shl
inc
(bad)
adc
jle
mov
xchg
inc
movs
add
push
and
add
and
jecxz
(bad)
fcomp
jle
xor
inc
adc
xor
mov
cld
mov
push
jno
pop
cld
mov
xor
push
loope
dec
arpl
push
add
xlat
inc
ja
xchg
xchg
inc
aaa
xor
out
idiv
lock
(bad)
sbb
xlat
mov
cmps
daa
fcom
push
out
push
jmp
push
cmc
jnp
push
sbb
xlat
push
xchg
pop
mul
sbb
sub
or
jl
ja
stc
(bad)
imul
lea
rcr
jmp
jmp
lock
adc
not
stos
int
inc
mov
push
aaa
test
cmp
(bad)
push
outs
mov
int3
in
sub
sub
ror
xchg
pop
push
ror
out
pushf
mov
pop
or
sub
and
leave
xor
(bad)
xor
pop
cld
xchg
jmp
dec
sub
(bad)
push
mov
jp
in
(bad)
std
mov
scas
mov
push
push
push
pop
jo
(bad)
test
mov
mov
add
pop
mov
add
sub
out
pushf
pop
je
aam
add
or
jbe
mov
or
leave
mov
push
dec
push
push
adc
in
aas
pushf
adc
std
adc
shl
(bad)
or
or
jae
or
dec
lea
pop
out
popa
xor
aaa
mov
or
adc
lock
jno
xchg
imul
mov
jno
icebp
mov
mov
xor
xchg
lock
xchg
push
mov
xchg
xor
aad
adc
aam
push
pop
ins
mov
and
stos
scas
nop
retf
ds
movs
sub
dec
dec
adc
hlt
push
test
sub
(bad)
sub
retf
push
sbb
push
pusha
lds
fst
cmp
push
and
inc
fistp
stos
jecxz
and
sbb
mov
pusha
cmp
push
(bad)
sbb
mov
shl
retf
imul
lods
aaa
loope
and
jmp
jge
push
or
les
pop
and
jb
ins
mov
inc
in
sub
mov
jecxz
enter
mov
pop
jmp
xchg
in
pop
push
mov
ins
aaa
pop
sub
xor
pop
inc
jb
fnstcw
cmp
jmp
out
push
int3
cwde
shl
aaa
inc
or
repz
pop
out
adc
aam
rcl
or
add
into
add
dec
fist
dec
pusha
(bad)
cmp
or
call
cli
jae
(bad)
xchg
push
add
adc
mov
push
hlt
mov
jg
enter
int3
or
dec
call
pop
bound
divps
pop
out
jno
fwait
sub
mov
sub
adc
add
loopne
imul
lahf
push
xor
and
inc
mov
and
dec
jmp
or
aas
sahf
rol
dec
jno
push
shl
retf
dec
dec
jp
lea
out
inc
jmp
nop
or
sbb
dec
xor
pop
mov
jle
dec
xchg
lods
dec
(bad)
cmps
ret
lock
fidivr
cmp
es
inc
rol
add
fld
clc
sbb
test
jl
movlps
mov
rcl
pushf
add
sub
pop
dec
dec
mov
popf
xor
adc
out
aam
gs
xchg
push
and
loopne
and
mov
add
push
jns
push
dec
movs
mov
and
sub
test
(bad)
dec
sar
sbb
xchg
xchg
std
push
in
leave
and
aam
aaa
jne
loop
and
daa
lea
addr16
fsubr
movs
repz
push
push
pop
clc
xor
ret
scas
dec
sbb
fstsw
retf
mov
lods
inc
(bad)
movs
and
pusha
mov
(bad)
sub
mov
mov
lock
xchg
data16
les
(bad)
lock
ret
xchg
int3
clc
add
test
mov
sti
xchg
cmp
aam
xor
cmp
or
mov
push
adc
out
mov
lahf
adc
fucomp
sub
dec
mov
mov
stos
push
mov
cmp
jge
cmps
js
out
inc
(bad)
int
fcom
xor
(bad)
cmp
cmps
mov
sub
xor
push
clc
stos
push
dec
lahf
test
popf
add
xchg
dec
xor
aaa
sub
xchg
lea
sbb
int3
mov
xchg
neg
pop
xchg
sbb
shl
cmp
in
mov
push
hlt
sbb
outs
xchg
adc
sar
je
lahf
mov
pusha
fdivr
cmps
call
inc
mov
xlat
dec
nop
addr16
push
jns
dec
add
pushf
outs
jg
ds
xlat
imul
pop
mov
lds
sbb
popf
test
pop
jmp
les
movs
gs
jg
push
push
cmp
mov
sbb
cmp
stc
add
leave
pop
inc
enter
mov
push
xor
(bad)
cmc
or
mov
lods
push
or
data16
xor
push
push
inc
mov
cmp
sub
adc
jp
scas
dec
xchg
neg
mov
push
sub
addr16
sub
shr
hlt
dec
outs
pop
outs
lea
pop
lea
mov
xlat
test
and
js
mov
cwde
mov
gs
shl
sbb
mov
push
aaa
add
or
mov
and
sbb
or
xchg
xor
in
mov
fsubp
mov
sub
stos
fisub
pop
mov
jb
neg
mov
dec
xor
mov
pusha
sti
cmp
xor
call
pop
dec
movs
(bad)
xor
pop
int
call
dec
fcomp
xor
cwde
mov
inc
cmp
xchg
cmps
jae
sti
dec
out
pop
mov
(bad)
aaa
cwde
rcr
jmp
mov
call
jno
mov
push
aam
xchg
dec
jns
pop
pop
pop
mov
pop
int
aaa
jmp
pop
push
mov
(bad)
sbb
fild
jp
dec
int
pop
nop
mov
pop
mov
mov
ret
test
cmp
aaa
shl
push
sbb
scas
inc
sbb
in
adc
add
popf
or
mov
cdq
cmps
xchg
cmp
sahf
dec
mov
jmp
cmp
in
cld
xchg
cwde
cwde
push
jmp
sub
mov
(bad)
aas
add
inc
jg
pop
das
leave
imul
dec
sbb
addr16
call
rcr
cmp
xchg
nop
xchg
mov
push
cmps
imul
mov
stos
mov
lea
adc
adc
sbb
push
(bad)
or
out
dec
xchg
loope
dec
test
xor
dec
aaa
fst
dec
cmc
dec
push
ror
and
fdiv
jbe
push
loop
into
fisub
dec
mov
push
mov
mov
(bad)
aam
mov
fcmovnb
sar
dec
mov
into
mov
push
jmp
mov
xchg
xchg
in
xor
inc
es
sbb
cmp
lea
and
xchg
gs
xor
push
cmp
arpl
xchg
xchg
in
sar
addr16
sbb
mov
xlat
push
add
dec
(bad)
iret
and
mov
arpl
pop
or
movs
clc
stos
cmp
and
mov
cwde
push
xor
test
sbb
jno
lds
or
lahf
jmp
or
add
stos
pop
sub
ja
mov
enter
inc
retf
addr16
repz
in
mov
ds
mov
jb
push
loope
adc
push
ret
mov
sbb
or
xchg
pop
ret
xor
in
xchg
mov
pop
cmp
jp
or
ja
pop
sub
enter
adc
fidivr
in
mov
cmc
fnstsw
or
lods
sbb
cli
repz
mov
adc
ins
scas
xor
pushf
outs
mov
add
stos
sub
(bad)
cmps
cmc
jbe
aaa
(bad)
rcr
sahf
mov
test
out
sub
sbb
mov
dec
sti
push
inc
enter
mov
in
push
xlat
retf
gs
xchg
cmp
pop
cmp
mov
mov
cmp
mov
adc
xchg
inc
pop
sub
inc
mov
jne
cmp
inc
paddw
iret
call
mov
test
out
push
push
mov
mov
fldcw
stos
pushf
xor
loope
inc
call
sub
xchg
sub
sbb
loopne
push
iret
mov
cmp
loope
mov
mov
test
div
pushf
mov
(bad)
mov
dec
or
or
xchg
daa
cmp
mov
ds
and
(bad)
mov
and
test
movs
push
adc
sti
mov
or
mov
lahf
or
mov
pop
cmp
push
rcr
out
loope
ret
fscale
xchg
pop
test
sub
fs
out
rol
or
jno
push
scas
fist
retf
jns
adc
lds
jp
sub
push
or
out
dec
or
(bad)
stc
ins
ins
adc
call
mov
add
int3
jg
stos
inc
mov
ds
push
imul
punpcklwd
adc
ror
push
inc
dec
adc
add
ss
loope
pop
out
movs
or
cmp
jnp
mov
xlat
dec
dec
mov
push
ja
pop
fst
jb
sti
and
test
mov
neg
mov
cdq
rcr
call
mov
adc
sub
cmp
lds
sbb
gs
(bad)
inc
mov
(bad)
pushf
push
mov
int3
push
mov
cmp
aas
sar
xor
data16
ss
test
mov
inc
fild
xchg
dec
or
fcom
xor
and
push
and
lea
ds
in
xchg
jmp
pop
arpl
jns
push
jae
inc
jmp
cs
dec
jmp
and
out
adc
leave
add
add
aam
jo
ins
dec
jp
adc
inc
pop
xchg
pop
ds
mov
mov
cld
add
ret
adc
cmp
sbb
pop
push
jmp
jae
dec
xchg
ficom
(bad)
in
pop
ds
outs
sbb
lds
or
adc
cmp
aas
fcom
mov
xlat
cmps
mov
out
mov
ja
xchg
mov
in
cwde
test
out
jne
add
inc
and
xor
dec
push
inc
mov
lods
ja
in
mov
popa
popf
inc
rcr
fwait
ins
pop
sbb
cmps
(bad)
scas
sbb
pop
jg
sub
daa
fadd
pop
sbb
add
rcl
arpl
sub
mov
jmp
std
test
je
daa
imul
mov
push
rol
sbb
stc
enter
mov
or
test
retf
add
cmp
jp
mov
and
mov
xchg
mov
ja
xchg
stc
xchg
icebp
adc
cs
dec
arpl
dec
mov
fist
adc
ins
xchg
or
jnp
and
push
fcom
push
cmps
inc
jg
and
lods
and
xchg
push
mov
inc
ins
fisttp
pop
dec
ja
pop
rcr
add
sub
mov
loopne
add
add
sub
and
bound
test
out
inc
jb
cdq
push
rcr
xchg
mov
push
xchg
xor
mov
(bad)
xor
push
mov
leave
loopne
sub
mov
lock
ins
sbb
cmp
test
daa
aas
aad
cwde
mov
out
daa
inc
mov
(bad)
adc
daa
enter
pop
push
or
stos
data16
xchg
ins
mov
mov
aad
ins
pop
lea
or
ret
pop
dec
fucom
and
js
retf
pop
iret
aam
push
pushf
adc
in
mov
xchg
retf
add
sub
push
outs
stos
addr16
sub
test
mov
mov
push
sar
pop
push
in
sub
inc
int
bound
mov
sub
xchg
bnd
mov
pop
inc
mov
and
shr
(bad)
fucomi
add
sub
movs
rcr
pop
xor
push
sub
cmp
add
mov
adc
adc
cmps
shl
retf
or
xchg
mov
shl
inc
imul
dec
imul
bound
sahf
cmps
dec
lock
jmp
add
cmp
jne
aaa
jge
les
pop
por
out
test
add
inc
mov
out
(bad)
int3
mov
xchg
push
dec
sub
and
mov
jns
ficom
int
sti
test
neg
push
and
retf
push
aad
stos
(bad)
add
push
push
push
dec
inc
(bad)
cmp
mov
jns
ret
inc
dec
fmul
inc
cmp
xchg
mov
cs
stos
dec
mov
(bad)
mov
jnp
mov
xor
stc
dec
int3
dec
push
call
fsub
mov
div
or
adc
mov
sub
lods
pop
pushf
xchg
sub
lahf
push
xlat
add
sbb
lock
movs
bound
inc
push
mov
fsubp
movs
or
adc
call
push
popa
pop
cld
mov
pop
(bad)
jnp
or
dec
xchg
imul
mov
jbe
sub
loopne
dec
sbb
fwait
sub
in
jmp
push
jle
inc
dec
popa
mov
cmp
add
jg
mov
sbb
or
bnd
lods
lahf
and
push
mov
jmp
icebp
outs
in
jnp
std
cvtdq2ps
cdq
mov
bswap
mov
rcr
repz
in
lock
(bad)
into
hlt
ja
test
or
dec
mov
xlat
rcl
add
mov
comiss
mov
push
xchg
sub
dec
inc
dec
lds
(bad)
fsub
aam
in
fisub
popa
adc
push
pop
mov
xchg
xchg
out
push
xor
sub
cmps
test
frstor
mov
xor
aam
into
movs
neg
popf
stos
(bad)
add
cmps
stos
dec
lds
pop
lea
in
retf
dec
stos
arpl
xchg
add
inc
xor
and
jmp
sub
add
mov
pop
sahf
jmp
in
popf
xchg
mov
in
sub
loopne
retf
movs
ficom
xchg
loop
nop
sbb
jecxz
sub
push
dec
push
sbb
xor
stos
pop
lods
mov
retf
adc
jle
push
jo
scas
dec
mov
push
xlat
sbb
rol
in
jnp
jae
and
pop
sub
dec
loopne
enter
mov
pop
sbb
and
ins
cwde
push
in
cmc
aam
and
int
inc
mov
stos
aad
ss
xor
sbb
mov
(bad)
aam
rcr
jbe
mov
mov
inc
in
adc
xchg
and
aad
(bad)
sahf
fdiv
aad
inc
cmp
dec
dec
imul
inc
cmp
dec
out
ss
outs
mov
ins
pop
push
pop
adc
sahf
jns
loope
cmc
push
or
enter
mov
cli
ficom
nop
or
push
push
mov
sbb
xchg
call
push
repnz
lods
call
je
enter
add
nop
push
into
xchg
cs
into
add
imul
jae
push
test
push
mov
cs
adc
stc
ja
test
(bad)
cmps
pop
inc
cmc
mov
mov
cmp
data16
dec
pop
xlat
mov
int
fimul
xlat
push
out
pop
aam
add
cmp
fild
push
jmp
push
and
ror
ins
hlt
mov
adc
popf
push
xchg
cld
movs
sub
dec
sub
cwde
cld
pop
mov
nop
mov
mov
inc
cmps
aam
fidivr
(bad)
fcom
pop
jg
inc
dec
sahf
stos
mov
addr16
dec
mov
(bad)
xlat
rcl
xor
nop
xor
dec
fisubr
add
les
or
test
fs
stc
cmp
(bad)
cld
jno
pcmpeqb
pop
in
dec
mov
popa
inc
xchg
or
shr
add
mov
xlat
jg
mov
ficomp
pop
test
dec
cmp
push
stos
dec
inc
push
inc
jl
xchg
push
mov
repz
add
icebp
dec
retf
sbb
(bad)
or
sbb
jge
pop
dec
lods
pop
xchg
pop
push
jns
xchg
sbb
(bad)
mov
sub
in
push
xor
push
sub
aas
cmps
(bad)
mov
mov
pop
mov
das
pop
and
sbb
out
pop
(bad)
sub
xchg
lods
pop
les
test
test
push
xor
and
pop
add
add
inc
loopne
in
out
jge
jnp
cwde
rcr
mov
outs
(bad)
adc
xchg
out
and
dec
les
pop
jnp
in
lock
pop
sub
jg
sub
cmp
cdq
adc
xor
push
enter
xchg
loop
mov
pushf
in
push
dec
imul
cs
cli
test
or
leave
cmp
(bad)
fdiv
sti
push
sahf
(bad)
cmc
outs
pop
and
cmp
scas
scas
mov
and
push
push
mov
pushf
shr
push
mov
mov
ins
inc
inc
mov
add
(bad)
pop
mov
jno
int3
pushf
loopne
xor
mov
mov
popa
dec
adc
fstp
aaa
dec
aas
rcr
scas
fisubr
cmp
out
int
inc
(bad)
test
pop
(bad)
jg
cmp
push
adc
jle
mov
fisubr
mov
or
mov
ins
sbb
test
shl
js
mov
les
dec
rol
mov
jno
in
sar
push
lds
adc
pop
inc
sbb
and
popa
aaa
dec
add
mov
cvttps2pi
dec
popa
gs
push
sti
cmc
adc
test
sahf
add
xchg
pop
cli
cs
mov
lods
pop
pop
mov
pushf
sbb
mov
(bad)
inc
mov
outs
sbb
rcl
loopne
sar
xchg
push
in
daa
fbstp
fisubr
test
fidiv
and
or
pop
jle
cmp
pop
dec
lock
(bad)
das
rcl
inc
and
pop
and
loope
mov
and
stos
cmps
fist
jle
popa
popf
pop
mov
call
or
shl
out
push
mov
jmp
jle
push
dec
xlat
stc
jecxz
cmp
pop
mov
arpl
dec
or
xor
stc
leave
vpmacssww
aas
retf
sub
rcl
push
(bad)
sar
rcr
pop
xchg
hlt
mov
mov
mov
imul
push
icebp
mov
loopne
iret
sub
les
aas
and
pop
ss
pushf
shr
ror
nop
(bad)
stos
jbe
pop
push
xchg
add
xor
or
cmps
xlat
scas
push
push
(bad)
ficom
push
loope
jbe
or
out
push
stos
dec
xchg
arpl
push
xor
out
in
mov
and
pop
jge
mov
pop
neg
lahf
nop
xchg
sahf
test
and
test
jne
lods
xchg
push
push
ror
sti
rol
or
out
mov
jg
cmp
fnsave
fcmovbe
in
mov
addr16
mov
push
or
cs
mov
in
movs
fnstsw
xchg
ins
fist
mov
stos
es
fst
ds
mov
lds
inc
fmul
sbb
mov
sbb
mov
xchg
or
pop
cmp
pop
push
scas
stos
aad
lds
jne
sbb
rcl
cwde
in
xabort
loopne
ins
add
sbb
add
(bad)
mov
ror
in
sbb
dec
pusha
pop
mov
gs
add
sub
and
pop
jno
pop
push
sti
fs
inc
xor
add
xchg
(bad)
adc
dec
rcr
inc
jmp
(bad)
loopne
dec
sbb
(bad)
mov
test
sub
in
jno
mov
not
les
jge
clc
adc
fs
jle
jp
ja
scas
dec
sub
mov
idiv
xor
pop
repz
fs
add
les
push
movs
pusha
cmp
mov
int3
push
xlat
pop
dec
imul
imul
into
inc
xchg
stos
movs
cmp
mov
jb
push
mov
push
pop
fst
mov
cmp
lahf
push
test
xor
call
jecxz
(bad)
mov
xchg
mov
add
xor
jmp
out
inc
aaa
repz
pop
sub
fisubr
pop
iret
dec
push
push
imul
(bad)
in
mov
push
fs
arpl
inc
or
mov
ret
mov
iret
js
jb
adc
dec
push
jne
mov
push
and
loope
les
out
fst
xchg
add
(bad)
or
or
lock
xchg
out
idiv
ins
int
stos
pop
fsub
(bad)
jp
jl
sub
or
mov
xor
test
adc
sub
popa
(bad)
rcr
adc
add
aam
dec
call
std
cmp
pop
scas
push
pusha
or
hlt
out
adc
dec
cli
ficom
stos
popf
out
lods
push
ficomp
xlat
aaa
rcl
ja
mov
pop
(bad)
not
lea
add
xlat
dec
mov
inc
or
sbb
push
mov
or
int3
test
aad
out
and
adc
sub
pop
xchg
es
or
and
mov
ins
out
xchg
rcl
or
fidivr
xchg
and
popf
fld
jp
fst
add
jge
bound
sahf
or
mov
cmp
cmp
in
jle
sub
jge
push
pop
sub
les
dec
lods
or
push
pop
jl
adc
mov
mov
push
movs
fiadd
pop
mov
lea
mov
xor
sbb
mov
pop
xor
dec
(bad)
in
cmp
(bad)
and
rol
push
repnz
mov
xor
push
fistp
leave
rcl
xor
add
jne
je
pop
sub
adc
or
dec
aam
fstp
movs
pop
pcmpgtw
shl
pushf
rcl
cs
add
lods
outs
jp
popf
js
arpl
loopne
dec
daa
pusha
pop
call
(bad)
pop
mov
xchg
mov
rcl
int
pop
aad
xchg
and
cmp
imul
loop
int3
dec
(bad)
pop
(bad)
sar
sbb
stos
jno
gs
bound
inc
pop
out
popf
stos
pop
ds
push
or
lock
aad
pop
mov
cmp
push
shr
jmp
cmp
sbb
mov
scas
and
dec
dec
add
mov
idiv
mov
mov
and
xchg
mov
push
adc
shl
xor
maskmovq
not
add
fnsave
aaa
or
cmps
scas
add
aaa
jno
fild
xchg
sbb
mov
mov
out
adc
sbb
pop
aas
mov
jae
mov
dec
stc
in
iret
or
jae
int
mov
cmps
xchg
into
ror
lock
aaa
mov
xor
imul
cmps
cmp
aas
sti
repz
movs
(bad)
dec
adc
xchg
fiadd
dec
ret
jo
aad
push
shl
arpl
in
mov
cwde
(bad)
cld
jae
pop
fwait
test
pop
pop
jae
jns
mov
dec
(bad)
jl
push
mov
rcl
ret
mov
sub
add
cmps
in
imul
int3
push
adc
or
test
pop
adc
aad
jmp
mov
rcl
dec
mov
add
pop
add
push
(bad)
jge
leave
test
fcom
les
ins
lahf
mov
xchg
jmp
into
or
jl
cmp
ficomp
adc
or
repnz
mov
cmp
jmp
mov
pop
sbb
dec
hlt
mov
mov
pop
jl
outs
int3
pop
add
clc
push
mov
shl
mov
fstp
jl
cmc
je
xchg
loopne
pop
push
mov
les
pop
stos
ret
fs
aad
cmp
int3
lods
mov
shl
or
inc
ja
and
dec
inc
pop
jnp
adc
sbb
dec
dec
pop
test
or
and
mov
xchg
data16
mov
ss
pusha
ja
mov
jnp
hlt
popf
test
cmp
add
push
mov
xchg
es
ja
cmc
sbb
fisub
sbb
dec
xor
add
pop
inc
ins
push
push
gs
aad
pop
fsub
aad
icebp
jb
fisub
mov
stc
sub
pop
dec
popf
or
jp
call
mov
sti
std
sub
stos
mov
dec
xchg
mov
jne
lock
jmp
pop
mov
mov
mov
(bad)
int3
xchg
xor
mov
ret
out
fild
pop
call
popa
cmps
fstp
lds
cld
ja
(bad)
pop
push
scas
dec
out
shr
mov
hlt
ret
into
sbb
dec
sub
add
rol
push
sbb
in
sub
mov
mov
fstp
sub
dec
popf
sbb
add
pop
cmp
or
and
sbb
push
movs
enter
fldenv
ins
(bad)
pop
fwait
xchg
mov
in
(bad)
test
popf
sbb
ret
mov
aam
psllw
mov
rcr
jmp
xlat
inc
mov
loop
jp
test
mov
cmp
dec
push
sub
mov
sub
mov
cs
les
pop
mov
xchg
test
dec
retf
outs
call
mov
mov
lds
leave
scas
pop
mov
ins
out
adc
inc
dec
aaa
mov
pop
add
jae
packsswb
adc
in
mov
and
push
push
sbb
mov
dec
add
mov
movaps
push
shl
jae
mov
cwde
dec
and
sbb
add
sbb
xchg
(bad)
cdq
pop
mov
loopne
jle
xchg
sub
(bad)
cmp
test
sbb
shr
mov
ret
or
xchg
aaa
mov
(bad)
outs
addr16
add
mov
fisttp
sub
mov
sbb
cmp
sti
adc
imul
out
add
and
stos
scas
fild
fisub
mov
rol
push
mov
clc
(bad)
dec
(bad)
into
adc
mov
mov
shr
push
pop
ficom
lods
fidiv
or
mov
(bad)
fs
push
adc
sbb
jae
mov
daa
mov
jb
mov
cld
clc
pushf
mov
sar
or
sti
and
mov
cmps
jo
mov
push
push
inc
xor
fsub
lock
fistp
jge
in
push
nop
xor
cmp
and
push
add
call
pop
add
aaa
xchg
adc
add
(bad)
and
shr
outs
cmp
jmp
jno
dec
test
xor
sbb
cwde
inc
sti
call
pop
and
retf
sbb
mov
pop
das
out
jae
out
in
std
and
out
addr16
dec
pop
jno
int3
mov
jmp
cli
jnp
mov
imul
dec
mov
and
add
push
int
in
mov
inc
fucomip
mov
mov
add
clc
mov
les
out
ins
fdiv
pop
jmp
pop
mov
add
dec
add
cmp
hlt
int
pop
ds
sub
fisubr
pop
xor
iret
xor
stc
cmps
push
adc
out
fisttp
dec
push
mov
mov
dec
cld
adc
dec
popa
jo
stc
or
and
mov
aad
mov
add
lds
sub
mov
in
test
pop
xchg
mov
outs
pop
cld
mov
mov
mov
adc
ror
push
cmp
inc
sbb
rol
inc
pop
jge
stos
xlat
xor
stos
(bad)
cwde
mov
or
dec
xor
out
push
in
and
jb
test
test
std
pop
inc
nop
mov
pusha
mov
aam
xor
je
aad
mov
and
xchg
jge
(bad)
cmps
mov
nop
mov
fninit
cmp
lock
mov
and
rcr
pop
fnstcw
cmp
std
dec
sbb
les
jnp
cmp
test
daa
sbb
sub
pop
pop
mov
jg
dec
pop
ss
cmp
test
fcom
cmp
mov
loopne
lods
retf
dec
mov
fscale
imul
(bad)
cmp
outs
scas
push
xchg
cwde
jmp
pop
push
sub
sub
push
mov
jno
clc
aaa
add
pop
mov
xchg
jae
imul
and
or
aas
and
mov
fistp
xor
xor
jp
pop
shr
add
push
and
mov
adc
dec
mov
(bad)
mov
mov
sar
out
fsubr
dec
add
inc
cwde
bound
fcom
mov
stos
inc
adc
pop
iret
aam
fwait
dec
mov
enter
mov
ins
je
adc
dec
sbb
mov
mov
and
inc
inc
pop
mov
ret
mov
xchg
pop
jl
adc
push
loope
pop
lods
icebp
push
jle
and
and
add
sbb
pop
push
in
test
mov
mov
xlat
mov
cmp
imul
dec
cmp
nop
sahf
xor
scas
cwde
in
mov
mov
cmp
iret
adc
retf
sbb
and
mov
cmp
add
adc
xchg
das
and
mov
adc
xchg
sets
lahf
bound
call
imul
jb
mov
add
addr16
sbb
jo
out
stos
nop
dec
push
add
loop
retf
mov
mov
in
fnstcw
outs
mov
scas
call
std
and
mov
cmp
push
mov
push
sub
dec
push
dec
and
ffreep
stc
pop
test
xchg
pop
inc
pushf
xor
push
mov
dec
imul
xor
or
and
cdq
popf
sub
push
mov
movs
inc
or
rcr
jno
sti
add
mov
jo
dec
dec
enter
mov
jl
jle
add
idiv
inc
cmps
test
in
sar
iret
jbe
mov
pop
stc
adc
movs
retf
cmp
sub
fild
add
rcl
js
mov
pop
mov
push
movs
out
mov
inc
xlat
inc
add
adc
rol
(bad)
sbb
scas
test
aam
lods
jae
outs
inc
maskmovq
test
shl
add
xchg
cwde
push
cmps
ins
jmp
dec
xor
aaa
mov
mov
loop
adc
sahf
add
jns
xlat
out
xchg
fsubr
push
popa
pop
dec
lock
std
sahf
xlat
sbb
mov
test
push
cmp
jb
pop
xor
inc
mov
and
mov
(bad)
in
pop
inc
push
int3
mov
mov
xor
shl
into
dec
arpl
pop
test
mov
aaa
retf
jecxz
xor
push
aaa
cwde
xor
mov
and
mov
nop
pop
inc
sub
mov
cmp
movs
adc
jb
xchg
and
aad
addr16
rol
dec
inc
pop
jno
pop
pop
ds
scas
call
lahf
mov
add
mov
adc
mov
cwde
xor
adc
(bad)
push
idiv
xchg
lods
lea
fstp
outs
movs
(bad)
in
or
mov
sti
je
ret
cmps
mov
ja
sub
inc
jmp
std
pop
mov
mov
xchg
push
add
into
cmp
sub
mov
enter
jnp
(bad)
adc
pushf
add
pusha
xchg
fnstenv
pop
xor
into
pop
dec
leave
ret
ss
test
push
adc
xchg
and
sub
mov
sub
pop
aam
jmp
mov
dec
sbb
cmp
pushf
or
pop
lock
hlt
adc
sti
push
stos
out
mov
xlat
ret
int
mov
shl
fld
lock
iret
fisubr
mov
popf
xor
jge
or
jl
dec
test
push
mov
dec
test
adc
iret
mov
xor
inc
(bad)
push
or
addr16
shl
sub
pop
lahf
punpckhdq
dec
in
cmp
cmp
mov
push
mov
aam
mov
ja
fcom
nop
retf
cmp
sbb
pop
mov
add
cdq
add
lock
jmp
mov
out
sbb
fwait
adc
ret
je
out
xchg
ret
xchg
lds
or
inc
sub
pop
sub
or
pop
lods
test
ins
xchg
push
arpl
fs
and
dec
aam
fistp
xlat
jbe
(bad)
sub
stos
pop
mov
shr
ss
clc
aam
pop
dec
sar
mov
xchg
(bad)
es
xor
imul
mov
addr16
call
shl
jge
pushf
push
sti
mov
mov
add
shr
xchg
imul
dec
sbb
mov
test
cs
fcomp
aaa
xor
ja
test
lea
stos
adc
adc
add
pop
loop
stc
jmp
out
inc
add
sbb
mov
jl
jle
mov
xchg
xchg
test
push
push
call
psllw
sbb
cmp
push
cs
sbb
call
xor
mov
adc
mov
cmp
mov
cmp
mov
jmp
ins
and
dec
adc
mov
inc
nop
mov
pop
xchg
(bad)
and
cmp
xor
into
jae
mov
sub
cmp
ja
jae
loopne
xor
push
xor
repz
rcr
test
repnz
cmps
stos
push
mov
cld
(bad)
inc
pop
push
es
pop
in
pop
lods
imul
dec
mov
fwait
inc
gs
pop
fisttp
loopne
cmp
leave
mov
sbb
xor
fimul
sbb
or
hlt
std
js
shr
push
mov
xor
pop
int3
stc
adc
bound
push
aaa
ss
pop
imul
xchg
push
aam
movs
test
lahf
outs
inc
das
and
pop
mov
dec
mov
push
push
rcr
enter
jl
dec
(bad)
std
xor
mov
jmp
outs
and
shl
adc
dec
mov
push
push
mov
or
dec
hlt
mov
jmp
ror
shr
jmp
(bad)
dec
cmp
ins
inc
mov
cmp
ins
fcmovne
xchg
cmp
repnz
mov
mov
rol
lods
loope
and
cmp
fild
hlt
mov
arpl
gs
cmp
adc
rcpps
shl
cdq
push
adc
loopne
push
scas
js
xchg
fldenv
fmul
mov
xchg
(bad)
call
pop
xor
shr
push
adc
nop
mov
test
nop
(bad)
mov
ins
dec
stos
fdiv
xchg
fdivr
add
cmp
loopne
xchg
add
ret
dec
add
pop
dec
(bad)
es
mov
cmc
add
jl
pop
xchg
pop
icebp
push
push
cld
xchg
scas
xor
and
dec
(bad)
js
push
jle
mov
dec
test
pop
add
xor
jo
fcmovb
or
xchg
lods
inc
push
pop
dec
xchg
in
lods
test
inc
sub
leave
sub
retf
out
add
pop
mov
fldcw
adc
push
fadd
movs
jne
add
add
mov
rol
call
rcl
outs
fisttp
retf
(bad)
cmc
pushf
outs
adc
iret
mov
push
mov
jnp
outs
push
jl
mov
mov
add
test
inc
aas
fst
sub
in
sbb
sbb
mov
cdq
ins
dec
in
mov
push
dec
mov
rol
pop
mov
xchg
xchg
aam
into
outs
out
ret
fisubr
lods
hlt
sub
jge
mov
test
in
sti
or
imul
pop
(bad)
xor
jo
fdivp
int3
sbb
rcr
(bad)
es
mov
mov
ret
or
ds
lahf
int
dec
pop
int
jecxz
dec
pop
adc
popf
cmp
mov
xchg
push
ret
fdivr
aaa
xchg
dec
sub
out
xor
mov
mov
pop
sbb
xchg
sbb
pop
xor
(bad)
xor
pushf
jno
lock
sar
out
pop
add
inc
dec
pop
inc
mov
lods
mov
pushf
xchg
ret
loopne
test
scas
outs
outs
add
inc
xlat
sub
ds
xor
in
jl
add
sub
mov
ror
ins
cmp
stos
and
jp
and
xchg
lods
mov
lods
mov
push
sub
fs
ins
jae
add
cmps
loop
int3
xlat
dec
mov
jnp
mov
pop
sub
jns
cdq
mov
mov
xchg
push
(bad)
mov
jle
les
mov
sbb
loope
adc
jo
pop
adc
pushf
daa
sti
dec
inc
stc
push
aas
clc
xchg
(bad)
nop
out
inc
and
push
xor
dec
iret
cmp
push
adc
imul
adc
loopne
or
sar
cmp
push
ficomp
cmps
(bad)
and
adc
pushf
ins
xor
mov
mov
jecxz
cwde
xor
adc
cmp
mov
aam
(bad)
(bad)
stc
jle
and
mov
shl
into
xor
(bad)
imul
movs
xchg
mov
(bad)
and
mov
ja
xchg
sar
mov
ja
and
ja
cmp
aas
cmp
data16
push
mov
js
mov
jmp
mov
add
jae
into
inc
jae
xchg
ja
cmps
daa
xchg
pop
pop
imul
adc
xchg
dec
(bad)
call
lock
pop
adc
lds
jo
mov
inc
fst
pushf
test
and
aam
dec
lock
pop
loopne
pop
gs
jae
adc
cmp
popa
call
fisttp
nop
test
in
inc
stos
sbb
push
mov
dec
xchg
jmp
pop
and
xor
xchg
mov
data16
xor
stos
pop
jge
in
leave
ffree
push
call
mov
inc
in
inc
in
pusha
push
push
rol
aas
loopne
leave
xchg
ja
xchg
sbb
imul
ins
and
mov
dec
repnz
aad
dec
push
test
lds
shl
out
sub
shl
gs
add
loop
in
mov
mov
iret
pop
(bad)
sub
dec
and
ins
in
sbb
push
(bad)
add
pop
(bad)
mov
sbb
or
cmp
loopne
or
loope
scas
dec
pop
jg
stos
add
test
pop
push
xchg
push
fwait
pop
cmp
and
mov
dec
xchg
gs
jbe
and
mov
stos
mov
sbb
cs
add
rcr
imul
add
mov
loope
mov
mov
mov
xor
add
inc
sub
popa
fdivr
jecxz
fldcw
ds
push
test
ds
(bad)
pop
in
in
ja
scas
rcr
add
stos
mov
rcl
cld
mov
xchg
ss
(bad)
(bad)
xchg
xor
fwait
addr16
in
loop
xchg
jb
clc
int3
ret
test
pop
pop
outs
adc
sub
loopne
xchg
(bad)
loop
push
out
sub
xor
addr16
jb
sub
pop
enter
mov
cdq
cld
mov
int3
and
ror
pop
jmp
lea
xor
mov
push
(bad)
sbb
cmp
mov
mov
in
sbb
sbb
in
push
jnp
inc
sub
adc
stos
pop
out
jns
outs
dec
jmp
aaa
in
mov
jnp
adc
mov
ret
aas
mov
mov
inc
cmp
sahf
rcr
pop
mov
mov
sub
gs
adc
(bad)
sbb
ret
dec
push
pop
into
call
dec
sbb
mov
cs
ror
iret
aaa
stc
cs
jge
mov
mov
enter
loop
idiv
push
popf
sub
pop
test
ins
lds
push
mov
mov
inc
sub
je
lods
nop
dec
cmp
loopne
pushf
push
(bad)
xchg
popf
cmps
mov
jmp
cld
jae
xchg
in
inc
outs
and
mov
pop
and
pop
sub
push
sub
jle
shl
test
xchg
test
mov
and
pushf
fidiv
pop
or
pop
cld
idiv
sbb
sub
int3
pop
fwait
sub
dec
fcom
and
sti
inc
push
sar
sub
xor
(bad)
ins
fld
jo
fdiv
out
mov
cwde
adc
les
icebp
ins
int
fcmovu
inc
pop
adc
mov
sbb
call
xlat
xchg
cwde
mov
not
test
enter
mov
jmp
movs
jbe
sbb
dec
mov
pushf
sub
adc
les
pop
add
sbb
xchg
ins
fdiv
arpl
xchg
add
lods
xlat
test
(bad)
stos
arpl
pop
std
ds
sar
call
scas
outs
xor
ins
les
adc
aas
sbb
pushf
popf
neg
movs
pop
xor
(bad)
in
jb
pushf
cwde
ds
and
sahf
push
fadd
js
into
mov
jns
cmps
sub
xor
das
shl
jb
cmp
retf
inc
enter
pusha
xchg
popf
xor
mov
in
push
dec
or
xchg
ficomp
(bad)
ja
lahf
clc
out
adc
inc
cwde
cs
xchg
(bad)
call
es
lods
push
sbb
ja
fstp
pop
pop
xlat
stos
jb
fist
(bad)
outs
stc
add
add
xchg
push
sub
(bad)
mov
jne
jnp
push
clc
out
popa
lods
mul
fldenv
pop
adc
mov
xlat
add
dec
pop
pusha
xchg
inc
(bad)
xor
mov
dec
arpl
xor
int
push
(bad)
push
addr16
push
test
shl
out
sbb
loop
add
add
xchg
jnp
pop
int
imul
cmps
mov
pop
mov
mov
out
hlt
rol
pop
pop
or
imul
adc
dec
xor
inc
xchg
(bad)
ror
iret
pop
loope
outs
stos
pop
gs
mov
test
das
aam
push
scas
pop
ds
xchg
and
fcom
sbb
sbb
in
adc
sub
pushf
add
pop
int3
cli
shr
aad
and
lods
mov
cmps
inc
add
mul
dec
lods
in
ror
jae
(bad)
mov
adc
and
in
mov
mov
push
cmp
mov
fist
int
inc
clc
and
push
iret
lods
sub
xchg
mov
add
jne
icebp
jo
xchg
cmps
test
cmp
or
mov
dec
shl
inc
jmp
outs
shl
mov
neg
cli
dec
mov
adc
mov
rol
fldenv
sbb
dec
sub
(bad)
dec
(bad)
fwait
xor
lods
pop
(bad)
cmc
adc
dec
xchg
shl
jno
es
pop
jbe
add
push
(bad)
and
sub
stos
(bad)
in
cwde
arpl
mov
test
out
iret
push
(bad)
mov
pop
sbb
movhps
pop
(bad)
xor
lock
push
inc
dec
gs
jecxz
and
sbb
cld
dec
mov
div
mov
jmp
loope
mov
mov
jle
push
mov
pop
and
or
pop
das
or
push
repz
(bad)
inc
out
pop
retf
sar
jae
sar
inc
inc
sub
and
inc
lds
test
fcomi
mov
das
dec
jmp
shl
ss
pop
imul
sub
call
dec
mov
fwait
jmp
(bad)
rol
mov
pop
ficom
mov
lds
dec
pop
pop
dec
dec
mov
mov
jnp
dec
movs
stos
cmps
mov
int3
sbb
pop
lahf
icebp
leave
call
or
gs
aad
shl
pop
dec
sbb
mov
aad
adc
iret
test
out
(bad)
rcl
adc
loop
fwait
(bad)
dec
cmps
dec
shl
cs
jmp
mov
xchg
cmp
mov
pop
les
(bad)
inc
addr16
xor
adc
shr
mov
movs
cmp
fst
call
in
ins
in
test
shr
dec
mul
sahf
fs
jl
sbb
cmp
iret
mov
sar
push
xchg
daa
cs
arpl
xchg
cmc
cld
cmp
neg
mov
pop
xchg
jmp
stos
mov
pop
imul
push
sub
push
rol
sbb
dec
add
mov
(bad)
sar
jmp
dec
adc
xor
inc
js
and
fwait
push
movs
jae
es
sbb
inc
in
fdivr
dec
ja
pop
cwde
ret
cld
cli
(bad)
push
inc
push
mov
mov
lds
lea
xchg
mov
add
pop
ss
pop
loope
sbb
icebp
push
aas
(bad)
add
ins
rol
push
xchg
dec
outs
loop
jb
fdiv
mov
addr16
ret
pop
pop
(bad)
enter
mov
fxch
js
and
jge
js
arpl
pushf
adc
dec
shl
mov
xchg
mov
(bad)
loopne
retf
call
sub
leave
pop
scas
mov
or
or
loopne
mul
push
cld
push
inc
stos
jge
jmp
lods
pop
gs
adc
pop
mov
inc
ss
stos
xchg
sbb
iret
push
test
lock
cwde
lock
adc
icebp
dec
xlat
xchg
test
inc
or
add
push
inc
mov
leave
ror
inc
inc
mov
sbb
mov
dec
dec
test
adc
jecxz
and
pop
retf
repnz
jl
sub
sbb
das
push
mov
gs
sbb
daa
(bad)
rcr
mul
or
fist
jge
cmp
ds
inc
xchg
inc
mov
movs
adc
dec
xor
cld
fmul
and
xchg
enter
dec
arpl
dec
adc
add
pop
mov
int3
jb
add
add
dec
adc
jb
pop
mov
fst
mov
loope
idiv
xlat
test
sbb
jle
mov
mov
adc
enter
pushf
sub
sbb
mov
or
sbb
scas
pop
mov
fsubr
dec
ja
mov
sbb
loopne
jo
sbb
lar
dec
jg
xchg
inc
adc
dec
cmps
jmp
bound
jmp
pushf
mov
push
shl
int
aad
and
scas
mov
(bad)
pop
mov
mov
adc
aad
pop
push
sbb
sbb
jp
mov
sbb
iret
jmp
cmp
dec
repz
fs
pop
push
test
mov
loope
push
inc
mov
addr16
ret
add
test
scas
xchg
ret
test
bound
shl
mov
movs
mov
add
jp
pushf
std
inc
pop
sbb
popa
sbb
jae
jle
xlat
push
adc
sbb
adc
inc
adc
repnz
out
sbb
cmp
pop
cmp
int3
fwait
dec
jbe
dec
bound
and
nop
(bad)
sahf
(bad)
mov
(bad)
mov
inc
adc
mov
sbb
shl
dec
pusha
mov
cmc
mov
add
popf
dec
pop
mov
outs
dec
pop
mov
push
mov
shr
sbb
dec
jmp
jmp
movs
les
mov
pop
in
sahf
jno
jno
sbb
arpl
jge
mov
sar
loopne
or
push
ror
dec
or
cmp
fucomip
inc
add
mov
xchg
inc
fwait
loop
sub
movs
jbe
xor
ins
mov
xchg
lahf
dec
adc
lahf
and
mov
daa
test
stc
test
dec
jl
int
in
sbb
fdivr
dec
and
cwde
jle
nop
mov
add
mov
mov
sar
cmps
(bad)
jmp
xchg
sbb
xlat
sub
pop
pop
push
movs
imul
dec
sbb
dec
(bad)
jno
dec
and
daa
cdq
movs
push
adc
test
pop
dec
stos
jge
add
(bad)
(bad)
xor
pop
pop
add
cdq
sbb
int3
mov
pop
or
and
inc
loope
adc
in
mov
int3
loopne
xchg
lods
pop
jmp
nop
mov
ins
out
out
aam
push
retf
cmp
push
mov
adc
fadd
aas
rcr
faddp
xor
lds
mov
fst
xor
mov
lahf
sbb
pop
push
int3
test
mov
jecxz
mov
int3
push
popf
retf
xchg
and
xchg
and
xor
hlt
or
fwait
adc
or
add
in
cmp
dec
cli
pushf
xchg
pop
push
call
xor
add
cld
push
pop
nop
je
mov
rol
sbb
sub
not
fldcw
cmp
jg
pushf
cs
pushf
pushf
cmp
xor
ins
mov
dec
retf
test
ins
jg
sbb
push
lods
jae
(bad)
jecxz
and
sub
stos
fistp
mov
jmp
fistp
aad
test
sub
pusha
xchg
inc
rcr
icebp
test
cld
add
ja
fistp
pop
outs
fist
mov
(bad)
out
mov
pop
xor
lock
jno
shl
pop
and
ror
icebp
loop
push
int3
add
inc
test
data16
loopne
mov
sub
cdq
push
push
pop
std
cli
sub
mov
jb
dec
mov
fist
es
xchg
jbe
dec
jnp
inc
adc
rcr
enter
sbb
inc
mov
scas
(bad)
call
fist
add
mov
jne
xor
inc
popf
aas
mov
ror
push
enter
cwde
jle
adc
xchg
aad
imul
sub
add
dec
cmp
test
or
sbb
sbb
(bad)
mov
pop
(bad)
sbb
xchg
push
sbb
mov
pop
cmc
adc
mov
jo
pop
inc
adc
cmps
xchg
les
inc
adc
mov
lds
outs
mov
push
mov
add
stc
dec
ins
loopne
mov
adc
jnp
in
cli
xchg
dec
adc
jno
mov
xchg
call
mov
push
xor
and
popa
sbb
mov
call
inc
push
dec
mov
lahf
fldcw
ja
icebp
xor
test
ret
xor
pop
popf
enter
and
push
mov
js
movs
xor
leave
cmp
xor
push
stos
in
mov
aas
fild
dec
ror
ret
arpl
in
adc
dec
shl
mov
lahf
nop
dec
aad
pop
outs
mov
sbb
lock
sub
jl
popf
std
push
outs
mov
es
sub
fnstcw
test
add
xchg
in
cli
cmps
mov
jl
bound
stos
pop
loop
mov
xchg
dec
ret
sub
mov
xor
dec
push
ficom
xchg
ins
aaa
stos
int3
push
int
stos
fwait
sbb
sub
mov
push
cwde
out
mov
mov
sub
dec
mov
stos
pop
addr16
std
push
mov
xor
mov
clc
xor
mov
lahf
mov
test
lods
jno
popa
mov
add
mov
push
mov
adc
enter
dec
and
shl
(bad)
repz
cs
fdiv
loop
jmp
push
mov
xchg
lods
popa
and
xchg
mov
mov
push
fadd
and
rcr
adc
push
and
adc
(bad)
jmp
pusha
test
lods
imul
ficom
mov
or
or
push
aaa
les
ins
cmp
pop
pop
arpl
sub
mov
lds
mov
cdq
pop
inc
stos
push
jl
imul
rcl
mov
push
xor
fbld
aad
pop
mov
mov
pop
pop
jno
daa
enter
cld
dec
inc
call
sub
push
into
sahf
clc
push
(bad)
das
out
xor
bound
imul
aaa
int3
shr
cmc
xchg
mov
or
push
xor
jmp
shl
loopne
cmp
cmp
stos
pop
lahf
je
inc
inc
fdiv
rol
cmp
adc
pinsrw
pop
fist
std
ficom
stc
out
pop
push
xor
adc
popa
call
sub
or
mov
adc
int
jno
lock
je
int3
push
fist
dec
pop
fmul
inc
ja
dec
cld
scas
lock
imul
inc
dec
outs
add
sub
dec
mov
pop
dec
popa
movs
data16
push
icebp
sbb
cmps
cmp
call
lods
push
in
xor
in
mov
outs
xchg
jb
scas
mov
fdiv
inc
lock
lods
outs
xchg
into
sub
sub
stos
push
popa
mov
mov
xchg
fcomp
push
cdq
inc
dec
imul
push
std
(bad)
jmp
adc
push
xchg
jnp
lods
adc
arpl
scas
sbb
dec
cmp
lock
cmp
pop
leave
adc
cmp
pop
loope
lea
inc
nop
cmp
outs
push
xchg
jbe
scas
(bad)
cwde
jmp
mov
jl
jge
or
adc
ret
add
ja
push
loopne
pop
ja
mov
fiadd
mov
cmp
mov
mov
sub
lock
adc
pop
adc
aam
xlat
pop
push
imul
adc
scas
sahf
sub
imul
sub
daa
add
mov
jge
dec
aad
fbld
arpl
daa
std
stos
sbb
adc
mov
or
jg
dec
cs
jno
fwait
push
pop
inc
out
sar
pop
js
adc
cmp
inc
inc
fidivr
jae
stc
adc
fistp
into
sub
inc
jnp
add
dec
pop
out
mov
jp
int3
jno
add
lods
sbb
xor
push
push
sar
sbb
(bad)
sub
icebp
sbb
sar
int3
pop
jmp
add
(bad)
xor
nop
mov
push
nop
and
shl
and
sbb
cmc
push
or
sahf
dec
jns
mov
call
ja
sbb
mov
mov
inc
xor
(bad)
push
nop
enter
mov
jb
std
in
sub
in
pop
pop
out
ss
mov
fbld
ins
or
jnp
and
cs
push
jecxz
jns
rcl
add
test
mov
sbb
pop
pop
test
(bad)
repz
dec
pop
jp
daa
loop
inc
loope
ss
aas
or
out
ror
dec
imul
mov
pushf
call
idiv
xchg
cmps
cmp
in
cmc
adc
sti
xor
mov
inc
jmp
sub
loopne
mov
add
sub
pop
inc
ffree
mov
popf
dec
sbb
xor
out
mov
jnp
sub
cli
mov
inc
xor
xor
mov
pop
jl
mov
inc
xlat
ds
jo
push
in
push
xchg
nop
sbb
test
inc
loopne
mov
push
js
call
jp
mov
enter
hlt
fmul
sub
sbb
sub
retf
jns
push
imul
sti
xchg
push
stos
dec
pushf
add
pop
and
popa
jge
(bad)
pop
daa
add
mov
jb
mov
aam
jmp
sbb
aaa
add
sbb
pop
inc
push
sbb
ffree
aaa
dec
cli
inc
mov
scas
jae
sbb
xchg
cmp
xchg
test
and
adc
movs
add
pop
cli
shl
shl
sub
jp
sbb
push
mov
adc
mov
add
je
push
pop
add
add
fs
in
ss
dec
dec
loop
cli
mov
pop
cwde
xchg
cmp
push
stc
icebp
fidivr
mov
sbb
push
dec
shl
stos
mov
cld
test
dec
mov
pop
pop
push
inc
dec
icebp
and
(bad)
pop
les
mov
cmp
stc
int3
sub
fdivr
cmp
unpckhps
add
ds
inc
dec
pop
ret
outs
push
imul
ss
pop
cli
push
loopne
outs
push
enter
or
jle
inc
fcmovnu
push
dec
add
and
or
dec
xchg
mov
(bad)
xlat
mov
popa
and
outs
sub
nop
and
dec
cmp
xor
mov
(bad)
jmp
adc
call
test
mov
(bad)
ins
nop
mov
inc
(bad)
dec
cmps
dec
(bad)
add
aad
shl
scas
ss
enter
or
add
test
mov
mov
ja
adc
(bad)
in
sbb
dec
dec
mov
add
icebp
mov
jl
xchg
jae
sbb
imul
mov
sub
js
test
push
inc
sbb
jnp
ret
sar
mov
inc
fwait
bound
inc
or
jl
xchg
push
lea
jmp
mov
mov
dec
sbb
cld
(bad)
mov
stos
jge
mov
ffree
mov
push
xor
lds
loopne
inc
jmp
shr
adc
dec
mov
repz
push
push
push
dec
in
push
fwait
aas
xchg
loopne
mov
mov
jbe
sub
sahf
loope
lods
push
int
jmp
bound
aaa
pop
inc
ins
(bad)
mov
mov
ja
pop
rcr
mov
shl
(bad)
or
mov
mov
shr
or
mov
mov
xor
mov
add
push
mov
inc
pop
xchg
daa
movs
adc
mov
xchg
mov
aas
jl
xchg
das
pop
shl
or
push
imul
pushf
test
cmp
outs
dec
push
dec
mov
push
aaa
pop
test
es
xchg
sub
sbb
in
mov
inc
ins
sar
xchg
mov
push
or
xchg
(bad)
pop
pop
dec
push
(bad)
xchg
sub
inc
jl
push
aam
pop
jmp
mov
and
cld
push
dec
lods
jp
out
out
inc
mov
lods
inc
add
pop
pusha
mov
adc
outs
scas
jo
je
rol
test
cdq
and
dec
xor
mov
mov
mov
jae
loopne
fsubr
imul
mov
mov
fisubr
xlat
jbe
ja
ficomp
pop
or
mov
xchg
inc
jmp
retf
popa
pop
in
sub
push
dec
xlat
mov
inc
pop
popa
mov
aam
test
jg
(bad)
mov
push
daa
push
dec
jmp
inc
test
inc
les
test
pop
mov
fild
imul
test
push
les
in
call
mov
mov
cmp
nop
mov
pop
lea
pop
aaa
sub
sub
(bad)
mov
test
fisttp
xchg
in
inc
(bad)
pop
cmp
sbb
adc
sub
push
xchg
jp
jmp
push
leave
sbb
mov
test
fwait
add
jge
loop
push
mov
and
ror
movs
inc
pop
enter
in
xchg
cwde
sbb
pop
(bad)
inc
cli
fnstenv
fsubr
ror
ret
mov
jnp
push
pop
dec
pop
pop
mov
sbb
retf
push
mov
rcr
scas
shl
nop
arpl
outs
(bad)
mov
les
mov
jo
mov
js
xchg
pop
ss
mov
push
push
add
dec
aaa
mov
movs
jb
int3
push
mov
fucomi
aad
adc
nop
and
popf
mov
jle
sub
push
dec
int
xor
sub
sbb
std
adc
add
dec
cwde
arpl
scas
adc
jge
loope
test
xchg
push
pop
rcr
ja
or
ins
rol
inc
rcr
mov
(bad)
add
cmp
cdq
fcom
xchg
add
cmc
iret
(bad)
(bad)
out
push
in
mov
pop
sub
(bad)
fidiv
mov
jo
rcl
xchg
inc
repz
xor
cmps
adc
xchg
ret
sub
pop
aam
sub
js
mov
xchg
inc
in
mov
cmp
mov
mov
adc
addr16
jge
scas
mov
mov
inc
aad
clc
arpl
mov
dec
nop
inc
sbb
and
and
pop
les
lods
div
adc
test
pop
jge
push
aaa
addr16
mov
add
adc
lods
aaa
add
or
popf
lock
scas
jg
xchg
push
lahf
push
or
retf
jo
sub
push
dec
sti
jbe
daa
sbb
xlat
pop
gs
es
push
scas
cmc
aad
pop
jl
loopne
ror
mov
cmp
out
and
add
inc
xlat
mov
push
fdivr
fdivp
push
test
(bad)
retf
rcr
pop
sub
fadd
mov
push
adc
xchg
mov
push
push
call
mov
pop
pop
aas
(bad)
adc
fld
pop
push
inc
std
mov
imul
inc
jmp
lods
sbb
inc
cld
pop
sub
and
mov
pushf
mov
sbb
ret
inc
je
sub
push
cdq
pop
push
int3
dec
push
jmp
aas
mov
xchg
loopne
jmp
lock
dec
adc
movs
movs
rol
cld
dec
dec
stc
cmp
jl
and
sbb
mov
dec
out
out
xor
mov
lods
cdq
int
hlt
stos
adc
add
mov
fsubr
cs
in
rcr
outs
fistp
pop
push
jle
or
inc
pop
inc
jmp
or
push
inc
adc
loop
std
ins
push
(bad)
xor
and
jle
imul
cld
fcomip
xlat
add
fadd
push
cmp
(bad)
enter
cmp
lock
fs
adc
push
sbb
add
jo
and
jno
push
fdiv
or
mul
push
push
cwde
pop
mov
idiv
mov
sti
add
pop
xchg
loope
mov
popf
push
(bad)
or
xchg
out
ins
sahf
(bad)
push
test
int3
mov
xchg
or
(bad)
das
je
mov
jnp
push
inc
xor
leave
pop
std
jp
(bad)
cmp
rcr
sbb
daa
cmp
fidiv
int
scas
neg
xor
mov
xor
mov
rcr
les
loopne
jo
mov
leave
int3
stc
cmp
and
int3
xchg
jbe
or
mov
sub
dec
jo
mov
rcl
pusha
inc
rcl
ins
pop
add
xlat
dec
jle
push
neg
jae
mov
mov
in
push
xchg
cmp
jae
popf
pop
xchg
and
mov
pop
mov
dec
push
int3
sbb
je
mov
fdiv
fwait
jae
cmp
sahf
movs
cdq
or
fwait
xor
out
(bad)
push
cwde
mov
sub
enter
into
adc
clc
dec
in
test
out
dec
inc
adc
mov
add
inc
sbb
xor
push
sub
pop
clc
loopne
fcmovu
xchg
cmp
xchg
neg
jecxz
jo
rcr
pushf
push
sahf
adc
mov
in
jp
dec
(bad)
mov
cmc
lods
jmp
js
xchg
mov
push
(bad)
stos
pusha
cmps
cs
shl
sub
ror
mov
ss
test
jae
shl
jmp
rcl
jbe
jo
pushf
cmps
ja
and
add
push
sub
mov
jge
sub
or
adc
(bad)
(bad)
push
inc
iret
mov
out
(bad)
pop
outs
push
rcr
dec
xchg
cdq
mov
cmp
xor
je
inc
lods
fiadd
stos
mov
pushf
pop
movs
sub
xlat
xor
jnp
jmp
sub
jnp
pcmpgtw
loope
daa
(bad)
hlt
loope
cmp
jae
mov
movs
pop
fwait
pop
test
das
push
cdq
jge
mov
mov
inc
out
sbb
jg
mov
jnp
adc
loope
xor
jo
test
iret
pop
mov
sub
push
jb
inc
dec
ja
(bad)
bound
ret
pop
rcl
test
arpl
inc
and
ins
jmp
frstor
sbb
shr
in
scas
sar
cmps
jns
and
add
jmp
lods
iret
mov
add
sub
sar
mov
mov
out
loope
adc
pop
jmp
push
popf
xor
loopne
nop
xchg
imul
cs
inc
loopne
dec
in
sub
test
out
(bad)
pusha
and
leave
dec
enter
arpl
mov
jbe
repz
and
or
movs
push
sub
into
push
rol
pop
jmp
fwait
xchg
mov
and
pushf
xchg
loopne
jle
test
neg
cwde
(bad)
lods
jae
mov
mov
adc
aas
lds
dec
sbb
popa
add
loope
pop
xor
mov
adc
dec
or
xchg
sub
(bad)
mov
test
jmp
ja
dec
jae
bound
mov
adc
bound
xchg
inc
stos
movs
cmp
jnp
dec
sub
sbb
fsubr
idiv
mov
sbb
pop
mov
push
pop
cmps
mov
mov
jo
fsubr
push
push
fidiv
jnp
sub
call
push
add
loop
test
pop
sbb
jmp
cwde
je
cli
sbb
and
fist
rcl
mov
fsub
cld
sahf
xchg
(bad)
mov
fcomp
sub
retf
jp
jmp
(bad)
aam
push
jbe
shr
jae
jg
dec
lea
fwait
inc
js
jno
cmp
cmps
(bad)
jnp
adc
push
dec
hlt
pusha
push
cwde
nop
pop
lds
xchg
push
outs
in
arpl
and
cmp
mov
lds
call
mov
aas
cmp
xchg
lock
xchg
xor
xchg
mov
and
arpl
mov
cmc
addr16
cmp
repz
mov
mov
push
pop
add
into
and
nop
sub
dec
sbb
fidiv
call
iret
ja
aaa
inc
xchg
cmp
ins
adc
mov
add
push
sbb
nop
mov
xor
fistp
xchg
adc
rol
clc
adc
mov
cld
mov
inc
daa
hlt
shr
stos
pop
shl
push
dec
pop
inc
hlt
lods
lock
lock
jne
push
jmp
xchg
jno
dec
pop
rcl
mov
or
cmp
test
mov
stos
dec
dec
adc
cmp
lock
push
ss
mov
fnstcw
add
push
or
sbb
bound
mov
stos
sub
fdiv
cmc
adc
mov
test
outs
jne
sbb
stc
mov
cmp
add
popf
repnz
(bad)
into
fld
cmp
xor
cmp
push
xchg
push
sbb
loop
cdq
mov
sub
clc
rol
dec
cwde
pop
scas
aaa
gs
xchg
dec
sub
rcl
inc
and
xchg
inc
inc
sub
xor
enterw
(bad)
mov
inc
inc
shr
scas
sub
mov
sub
mov
pushf
nop
push
pop
icebp
add
fadd
sub
(bad)
mov
cmp
or
aaa
xchg
xchg
fdiv
and
push
jmp
ret
cmp
cmp
mov
div
inc
pop
jae
add
mov
loope
xchg
sbb
mov
out
(bad)
mov
push
popf
sar
inc
cmp
leave
adc
dec
xchg
jns
jnp
xchg
imul
dec
(bad)
loop
lods
push
call
xor
xor
leave
hlt
dec
mov
pusha
inc
jns
mov
push
adc
mov
pop
xchg
add
push
jb
sahf
std
mov
call
lock
(bad)
jne
sub
lock
pop
movs
jmp
iret
in
mov
mov
into
fcom
or
xor
mov
jb
push
cmp
sar
xchg
sub
push
rcr
bnd
pop
mul
pop
xchg
(bad)
sbb
mov
sub
mov
push
mov
xchg
jno
adc
dec
or
test
xchg
cmp
fnsave
cmp
pop
or
dec
call
push
xor
jbe
dec
pop
dec
lods
pop
pop
pop
lods
ins
sbb
movs
sar
fs
cmp
jl
test
jmp
adc
cmps
mov
sahf
push
jmp
out
and
scas
std
sahf
adc
pop
in
or
push
cmp
(bad)
lods
sub
inc
iret
mov
jecxz
xchg
scas
push
adc
jo
imul
or
fbld
les
pop
bound
pushf
or
adc
cli
ficom
xchg
mov
xlat
gs
and
in
pop
cdq
dec
addr16
dec
mov
aam
cmps
das
in
lahf
cmp
ret
addr16
pop
mov
aam
iret
xchg
dec
adc
nop
stc
xchg
mov
aad
push
ds
inc
call
sbb
ror
movs
or
cmp
push
sahf
(bad)
pop
sbb
mov
fdiv
rol
cmp
xchg
xchg
call
cdq
loopne
jmp
hlt
push
xchg
addr16
xchg
icebp
popf
sahf
dec
xor
mov
retf
push
das
xchg
enter
shl
push
jl
loop
shl
mov
cmp
jge
test
sbb
jg
add
push
test
outs
std
into
loop
stos
mov
push
shr
nop
xor
mul
pop
js
mov
push
sti
movs
dec
retf
sbb
psubsw
dec
fidivr
bnd
dec
ret
xchg
(bad)
cli
cmp
push
dec
dec
and
mov
pushf
sbb
inc
sub
sbb
push
pushf
int
jb
(bad)
mov
repz
outs
in
adc
mov
pop
pop
or
cmps
pusha
cmp
int
stc
push
adc
in
xor
push
dec
add
gs
pushf
leave
fsubr
cmps
arpl
shr
cdq
sbb
cmps
cmp
pop
fs
mov
lods
xor
dec
lods
xchg
mov
aaa
sahf
ss
daa
ret
xlat
scas
dec
leave
mov
cmp
sti
sbb
push
adc
jno
mov
(bad)
cmp
shr
in
inc
aad
popa
dec
push
xor
in
call
mov
sbb
jmp
cmp
(bad)
ins
shl
pop
out
sub
add
and
in
pushf
mov
in
fcomp
test
int3
fcmovnu
sub
sub
ss
fisttp
or
jb
pop
jnp
dec
mov
into
pop
or
jbe
or
xor
sbb
daa
mov
ret
(bad)
int3
push
xchg
jnp
sbb
lods
je
mov
ss
or
out
pop
sbb
mov
popf
and
(bad)
push
imul
rcr
pusha
rcr
pop
mov
add
inc
rcr
stos
imul
or
push
xchg
inc
jl
push
(bad)
xchg
xor
icebp
mov
cmp
fs
in
test
es
cs
rcr
pop
gs
mov
xchg
(bad)
(bad)
lidtd
dec
das
hlt
add
retf
dec
mov
xchg
pop
pop
and
adc
pushf
into
mov
stc
cs
lds
and
and
xor
sub
stc
cmps
jl
inc
xlat
push
cdq
pop
or
dec
adc
into
jo
xchg
adc
add
and
test
inc
dec
cmp
ins
popa
rcl
pop
inc
adc
pop
sub
mov
or
shr
test
sbb
inc
stos
into
fabs
loop
push
shl
out
loopne
into
mov
xor
sub
push
xchg
int
lods
add
pushf
push
xchg
xchg
fcomp
add
hlt
popa
(bad)
jns
mov
adc
sub
(bad)
std
lods
add
pop
mov
es
push
test
or
mov
sub
bound
scas
lock
push
outs
test
mov
loope
rol
imul
imul
jl
jmp
push
pushf
push
gs
lea
outs
outs
(bad)
out
enter
jecxz
retf
pushf
xchg
sub
inc
pop
fmul
jmp
and
and
sub
xchg
push
sbb
jne
aam
mov
mov
arpl
and
sahf
sbb
inc
lds
jp
xor
inc
inc
push
aad
or
jl
imul
enter
mov
add
sbb
test
test
cmps
enter
xor
xchg
out
and
out
cld
movs
pop
pop
xchg
das
lods
test
bound
shl
mov
mov
mov
in
test
sub
and
movs
arpl
sub
retf
bound
lahf
(bad)
js
and
inc
out
xchg
sub
ja
pop
mov
paddw
mov
jmp
mov
fistp
sti
dec
mov
imul
adc
out
push
pop
dec
pop
aad
or
jge
sbb
mov
sub
mov
xchg
pop
out
fxch
ret
ins
stc
fisubr
jns
(bad)
ss
cmps
rcr
mov
inc
push
loop
in
movs
imul
sub
add
daa
xlat
mov
pushf
inc
pop
push
pop
and
adc
mov
fiadd
push
int
xchg
in
adc
cli
xor
mov
rcl
add
(bad)
cmp
and
div
add
dec
xchg
(bad)
std
out
pcmpeqd
cwde
daa
retf
pop
(bad)
aas
push
sbb
dec
fs
xchg
pop
pop
jmp
addr16
mov
pop
xlat
lock
cmp
in
in
and
sar
xchg
and
cmp
movs
lock
push
fisub
sbb
jnp
mov
out
js
sub
addr16
sbb
rcl
jmp
in
leave
(bad)
jmp
sbb
sti
fidiv
pop
ja
mov
pop
inc
inc
inc
sub
push
dec
fidivr
jae
imul
pop
cmp
xchg
sub
fdivr
push
mov
sub
inc
push
pop
ror
dec
xor
(bad)
fmulp
mov
xlat
popa
neg
xchg
(bad)
dec
push
and
popf
dec
push
push
(bad)
pop
ins
sub
fdivp
mov
lds
aas
dec
fs
dec
jbe
mov
repnz
loop
xchg
mov
adc
bound
cwde
loop
lods
mov
mov
(bad)
call
sti
pop
movs
repz
in
push
(bad)
dec
mov
inc
adc
mov
cmc
das
into
pop
xchg
jns
dec
push
mov
sub
(bad)
lahf
mov
sub
daa
inc
or
nop
push
jmp
jns
mov
mov
shl
sub
xchg
loopne
mov
xchg
stos
and
mov
loope
push
fdiv
jge
jnp
mov
and
ja
sbb
imul
adc
daa
outs
mov
dec
cmps
les
sbb
ins
adc
in
push
jnp
sub
pusha
addr16
push
push
outs
int3
add
cmps
xor
nop
mov
into
mov
inc
rcr
mov
jge
rcl
sti
rcr
sbb
mov
or
cli
int
sub
call
cmp
dec
and
sahf
pop
test
repnz
sub
dec
out
sub
movs
fiadd
loop
mov
hlt
scas
(bad)
iret
xchg
add
push
push
jmp
dec
mov
clc
mov
stos
sub
jo
xchg
and
pop
lea
or
sub
dec
(bad)
stc
dec
test
subps
mov
push
retf
icebp
in
std
sub
xchg
jl
jnp
rcr
add
mov
xchg
les
xchg
call
mov
jp
jmp
push
and
mov
mov
movs
pop
ret
mov
push
cwde
cmps
test
outs
in
scas
jl
into
cmp
add
(bad)
jnp
fbld
pop
sbb
in
mov
jmp
cmp
mov
aaa
add
fcomp
out
push
mov
stos
clc
xchg
shl
mov
movs
adc
rcl
xchg
and
movs
xor
add
adc
adc
and
xchg
fnstenv
lahf
jg
int3
(bad)
and
js
ret
mov
mov
and
rol
fsubr
xchg
in
(bad)
fiadd
cs
rcl
movntps
lods
pop
push
or
out
cmp
cmp
fstp
and
test
out
fisubr
sub
dec
fbstp
test
stos
mov
rcl
(bad)
aam
loopne
xor
push
int3
adc
retf
sbb
ins
adc
movs
add
push
lock
push
dec
pavgb
jne
enter
mov
iret
pop
pop
jl
ds
mov
pop
retf
jmp
mov
int3
das
push
and
mov
call
push
ss
loope
fwait
fwait
sub
js
out
sbb
lea
loop
adc
rcl
cwde
jo
mul
mov
cmp
movs
or
dec
cmp
xchg
inc
arpl
bound
repnz
mov
pop
js
popa
push
shl
sbb
add
inc
or
inc
cmps
(bad)
ds
(bad)
fnstsw
xchg
sbb
xlat
mov
push
aam
popa
data16
mov
or
nop
push
dec
inc
daa
jns
pop
hlt
call
xor
dec
mov
repz
add
int
gs
mov
fistp
mov
adc
fwait
add
mov
mov
adc
aad
push
mov
jge
out
fld1
dec
inc
mov
ins
int
add
sub
xor
mov
mov
pop
fist
imul
mov
pushf
and
ins
outs
mov
setbe
mov
adc
enter
add
lahf
push
cmp
and
push
test
shr
in
enter
dec
sbb
test
add
ffree
aam
shr
cmp
push
(bad)
in
dec
aaa
ins
dec
cmp
inc
popf
mov
dec
nop
js
and
loopne
pop
imul
repz
inc
xchg
dec
outs
mov
loop
xor
mov
dec
jnp
mov
daa
in
mov
int
aam
jmp
iret
add
mov
inc
inc
pop
and
sub
adc
popf
stos
cs
nop
loope
mov
iret
and
test
in
ds
mov
sub
je
xor
in
int3
(bad)
and
loope
in
(bad)
adc
jp
add
aam
test
nop
idiv
and
mov
sub
pop
sub
fprem
pushf
dec
cld
add
or
pop
xchg
std
mov
cmp
jne
sbb
ss
ins
xchg
mov
pop
dec
fild
(bad)
fcmovb
xchg
and
add
mov
outs
pop
sahf
(bad)
mov
shl
and
(bad)
out
adc
inc
add
inc
icebp
fcomp
push
stos
in
les
mov
push
adc
sub
xchg
cmp
ja
cmps
xor
sar
loopne
scas
mov
xchg
or
sub
inc
outs
out
mov
xchg
mov
ret
stc
in
adc
pop
loop
cmp
pushf
addr16
pop
and
jnp
(bad)
push
stos
lahf
cmp
ins
push
jge
retf
iret
gs
iret
in
xor
mov
ja
xchg
pop
les
aad
jmp
retf
mov
xchg
jmp
ins
mov
mov
rcr
jl
pop
fld
push
mov
pop
xchg
inc
fist
fldenv
push
(bad)
push
jl
jg
repnz
lods
push
pop
add
push
and
inc
xor
rcr
(bad)
fistp
test
dec
das
push
dec
mov
xor
shl
mov
or
xchg
scas
sbb
ret
add
aam
jmp
push
inc
aad
xchg
dec
or
mov
jmp
pushf
mov
std
call
xor
push
sub
stos
push
fistp
adc
dec
into
or
int
push
outs
dec
shr
(bad)
jno
stos
dec
mov
push
dec
aaa
jmp
fwait
pop
xlat
and
outs
sti
xor
int
xor
jmp
bound
cmp
pop
(bad)
mov
jne
push
jnp
sbb
sti
ret
and
hlt
push
fld
cmp
addr16
xchg
xor
leave
push
fisub
jbe
dec
jae
(bad)
in
inc
xchg
loope
mov
movs
mov
cmp
add
pop
pop
xor
push
std
ficomp
sbb
jb
and
xlat
pop
psubb
inc
sub
cmp
push
ret
pop
fsub
dec
mov
mov
(bad)
(bad)
push
and
sbb
cld
pusha
lds
pop
adc
cmps
xor
xchg
mov
adc
hlt
push
xchg
jle
or
mov
add
push
dec
dec
xchg
lea
imul
rol
inc
fsubr
inc
jnp
adc
ret
in
push
and
das
sbb
fs
scas
jnp
xlat
or
fdivr
mov
mov
retf
and
xchg
sub
cmp
xor
repnz
jnp
or
aad
cmp
sbb
add
jmp
push
nop
out
dec
cmp
fistp
add
jl
shl
xor
std
outs
push
lahf
xor
mov
je
mov
jnp
js
xchg
fimul
sub
sbb
mov
arpl
(bad)
jo
mov
xor
(bad)
enter
cli
mov
mov
mov
adc
jl
inc
aad
idiv
sbb
scas
or
pop
sbb
inc
sub
addr16
mov
adc
dec
leave
jae
nop
les
mov
pushf
icebp
out
les
out
ins
adc
shl
adc
xchg
nop
push
ja
pusha
pusha
xlat
xlat
int
adc
pop
lds
(bad)
sub
(bad)
inc
leave
pop
test
(bad)
not
dec
jecxz
xchg
sbb
out
push
data16
xchg
outs
mov
mov
jne
fmul
cmp
or
arpl
push
push
call
mov
cmp
iret
mov
xchg
sub
push
mov
push
mov
test
pop
scas
add
dec
jae
cmp
(bad)
dec
mov
lock
push
outs
dec
movs
sub
jmp
adc
cmp
fwait
add
rcr
and
and
and
pop
mov
push
push
jne
mov
stos
jnp
popa
mov
(bad)
jo
adc
lea
in
cmp
in
arpl
push
pop
mov
cmp
xor
mov
stos
pop
xchg
cmps
mov
add
xor
mov
lds
jmp
aam
push
movs
aam
xchg
nop
in
loopne
aad
and
sub
ins
std
adc
aaa
sar
mov
add
add
leave
xlat
dec
jae
imul
gs
pusha
dec
aas
fwait
jmp
out
addr16
dec
aas
and
dec
xchg
ret
mov
mov
(bad)
sbb
jae
sbb
aaa
cmp
jb
sbb
and
shr
and
inc
pop
pop
or
dec
dec
imul
mov
shl
dec
imul
mov
ficomp
push
sub
mov
fbstp
clc
push
xchg
ret
ins
add
(bad)
call
int3
jne
mov
in
mov
cmps
push
mov
test
cmp
fs
xor
push
arpl
xor
dec
push
fdiv
jge
aaa
shl
call
inc
dec
mov
inc
mov
mov
adc
outs
call
push
int3
or
test
sub
sahf
adc
push
movs
mov
inc
in
cld
add
jnp
aas
sub
jne
jle
aad
retf
mov
loop
fisub
xchg
dec
in
cmps
and
ss
pop
in
outs
xor
add
(bad)
dec
jecxz
cmc
popa
ficomp
icebp
data16
scas
mov
(bad)
adc
pop
pushf
cld
rcl
int3
sbb
push
les
dec
cmc
(bad)
aad
pop
sub
fadd
xchg
(bad)
(bad)
mov
pushf
xor
pop
push
mov
push
push
data16
xor
daa
or
sbb
popf
cmp
mov
in
fisub
jne
jmp
mov
out
int
push
push
out
mov
xor
mov
loopne
stos
push
or
out
pusha
sub
pop
shl
sti
xor
js
cld
jp
xor
test
and
stc
push
rcr
hlt
enter
mov
xlat
lea
dec
mov
and
mul
mov
cmp
lea
(bad)
test
jns
jg
bound
lods
pop
xchg
in
jl
adc
jmp
jne
mov
rcr
test
sbb
into
push
lahf
(bad)
pop
jb
add
enter
mov
mov
lods
mov
adc
jae
adc
fisubr
jp
pop
frstor
out
shl
shl
push
adc
inc
pop
xlat
dec
mov
fcom
cmp
add
call
push
xor
out
call
shld
aas
(bad)
(bad)
jbe
int3
sbb
vmptrst
cmps
repz
dec
pop
les
or
xor
xchg
fcomp
test
cld
push
ret
sbb
xchg
xchg
mov
pop
test
(bad)
call
jmp
imul
lods
sub
push
or
ficomp
sbb
xchg
or
pop
lock
(bad)
adc
mov
gs
call
stos
mov
int
es
(bad)
or
sbb
add
test
je
mov
push
out
daa
in
xlat
inc
arpl
cmp
mov
(bad)
xor
(bad)
xchg
xor
pop
gs
loopne
xor
mov
rol
jge
mov
xchg
dec
sub
xchg
dec
sti
or
mov
push
mov
outs
mov
add
sbb
dec
sbb
mov
je
mov
add
inc
es
(bad)
mov
dec
jmp
shl
pop
fnstenv
das
xchg
sbb
xchg
cmp
or
adc
iret
push
mov
das
(bad)
mov
xchg
xchg
sub
pop
jbe
jmp
sub
jge
mov
psrlq
dec
push
push
(bad)
mov
call
cwde
into
dec
xchg
and
or
jae
cmp
int3
xor
out
cmp
(bad)
and
cmp
in
sub
ins
sub
std
fisub
xchg
ins
push
shl
mov
pop
jle
sub
in
mov
cld
inc
stos
mov
xor
add
test
lods
pop
aad
pusha
lahf
gs
mov
inc
cld
sub
pop
sahf
stos
loop
lahf
mov
popa
push
sbb
fs
push
dec
ret
sub
jmp
xor
dec
test
dec
jl
inc
jbe
in
xor
int
xor
push
std
inc
adc
rcr
jne
sub
xor
or
inc
and
shl
dec
inc
add
stos
push
mov
in
sbb
push
add
inc
stos
or
shl
ret
push
bnd
cmps
jge
pop
push
rcl
and
out
pushf
shl
cwde
pop
sbb
std
fcmovbe
sbb
mov
test
jmp
gs
lods
cmp
(bad)
push
in
je
pop
push
into
ins
sbb
call
adc
xor
int3
loope
pop
pop
sub
add
cmps
mov
mov
dec
fstp
outs
nop
mov
inc
xchg
pop
es
popf
shl
in
jge
cmp
mov
pop
fwait
inc
out
cmp
sahf
push
(bad)
aam
jae
sbb
(bad)
retf
mov
add
sub
cmp
xchg
sub
cdq
mov
stos
xchg
ja
add
mov
in
mov
mov
dec
add
mov
adc
jne
or
movs
out
mov
push
and
adc
jnp
dec
pop
leave
sub
push
dec
pop
xor
imul
and
dec
loopne
add
mov
out
leave
ja
pop
cmp
inc
fisub
adc
imul
add
fist
pop
test
neg
inc
(bad)
xchg
sbb
sbb
push
dec
sahf
dec
push
push
mov
rol
pushf
stc
pop
xor
mov
sub
shr
pop
jp
movs
jmp
push
pop
and
or
addr16
push
fisub
pop
mov
xchg
cmp
cmps
push
mov
jb
imul
sbb
rcr
sar
push
call
xlat
dec
inc
cmp
xchg
mov
jae
in
mov
mov
loop
sub
aas
or
int3
mov
fdivp
dec
dec
inc
dec
lods
bound
fldcw
adc
outs
push
retf
xor
out
imul
ficomp
in
cmp
add
sbb
mov
xchg
imul
and
leave
lea
sub
cs
outs
inc
mov
in
lock
mov
add
mul
fisubr
mov
jae
jge
dec
out
jl
sahf
aaa
dec
lock
not
test
or
sbb
cmc
(bad)
int
stc
adc
inc
add
(bad)
mov
dec
je
cmps
jmp
mov
test
js
xlat
pop
xor
cld
dec
mov
pop
shl
lahf
scas
sub
xchg
mov
fst
sub
leave
push
in
sbb
(bad)
xor
fcomip
cld
call
shl
dec
pop
push
cmp
cwde
xchg
daa
adc
pushf
push
mov
movs
pop
imul
jmp
(bad)
pop
test
lods
jle
mov
stc
mov
xchg
jae
jecxz
and
js
dec
sub
or
or
jae
push
xchg
es
jge
mov
jp
aad
pop
outs
imul
sub
call
(bad)
loopne
nop
cmps
jmp
xor
inc
jl
sub
adc
mov
xchg
hlt
xchg
inc
int3
stos
ins
fist
sbb
or
pop
push
loopne
outs
inc
fwait
jae
inc
sub
gs
sbb
repnz
mov
aam
outs
fidivr
repnz
neg
push
xor
retf
xor
loope
ins
mov
push
lea
dec
inc
jmp
jmp
sbb
sbb
adc
pop
sub
inc
mov
adc
scas
fdiv
out
cmp
push
cdq
jge
push
in
sub
cmp
test
push
xchg
out
cmc
lock
mov
shr
sti
mov
mov
aaa
sbb
ficomp
pop
sub
push
push
into
mov
pop
aaa
dec
and
push
push
jp
xor
mov
popf
pop
sbb
gs
cwde
jge
popa
sahf
int3
xlat
rcr
imul
imul
retf
(bad)
cmps
mov
sub
push
loop
pop
adc
and
dec
es
xor
jno
int
sbb
mov
and
ficomp
ret
in
in
les
sbb
inc
cmp
jl
xor
dec
mov
or
mov
xchg
push
aaa
xor
popf
inc
xchg
pop
mov
pushf
adc
jb
xor
push
add
call
adc
mov
inc
sub
push
in
or
sbb
mov
adc
push
or
aad
repz
(bad)
cmc
idiv
jo
dec
fst
add
push
sub
push
fcom
clc
dec
fadd
jnp
pop
xor
push
push
cmp
sahf
dec
inc
pop
inc
(bad)
repnz
or
test
cwde
fdiv
pop
xchg
push
inc
jne
gs
mov
shl
lods
cdq
fwait
xchg
iret
int3
push
xlat
and
dec
addr16
test
pop
jb
mov
shr
jne
mov
jnp
push
push
mov
ret
retf
and
add
out
push
pop
inc
mov
in
nop
fild
inc
and
dec
dec
push
xchg
test
or
ins
lds
push
jno
dec
sbb
and
mov
stos
pop
rcr
add
loop
cmps
mov
push
dec
or
push
xchg
and
pop
pop
dec
dec
sub
in
and
pop
add
ds
sbb
cmp
inc
cmps
mov
rol
jmp
mov
xor
scas
mov
dec
pop
add
test
out
sbb
lahf
and
mov
jmp
add
dec
push
pop
test
aas
add
mov
ret
inc
and
loope
pop
popf
dec
mov
inc
(bad)
pop
dec
xchg
sub
and
inc
in
shr
scas
pop
xor
call
cmc
and
sub
(bad)
in
mov
aad
fidiv
bound
ret
sbb
push
les
nop
dec
mov
sub
ja
mov
mov
xchg
popa
mov
js
sbb
add
mov
cmp
test
test
dec
int3
push
stos
jb
int3
lahf
test
fst
repz
push
dec
push
xchg
jb
test
pop
cdq
mov
push
sub
mov
inc
jge
push
les
jmp
popa
int
jecxz
sbb
les
(bad)
rol
cmc
out
call
push
inc
retf
vdivps
sub
xchg
in
mov
mov
sbb
sub
cmp
push
aaa
scas
sub
fisubr
movs
mov
and
xchg
inc
mov
jae
les
mov
test
stos
mov
mov
not
mov
rcr
xchg
jmp
test
sbb
sub
ret
ret
jge
adc
lds
jbe
mov
fimul
sbb
je
jle
mov
inc
fstp
xchg
test
pop
pop
ja
fwait
xchg
test
push
sub
inc
mov
sbb
inc
fwait
mov
and
ins
dec
int
mov
adc
loopne
adc
sub
lahf
aam
push
sahf
pop
xor
mov
inc
dec
daa
ins
push
leave
cdq
add
mov
int
fcomp
das
inc
pminub
pop
std
pop
in
jo
neg
ror
scas
push
or
and
fild
mov
aad
pop
or
loop
xor
imul
sub
sti
pop
mov
mov
sahf
aam
(bad)
aam
rcl
sub
xchg
sar
inc
(bad)
pop
mov
jl
xchg
stc
jno
fstp
xchg
jecxz
cmp
aam
and
push
shl
(bad)
mov
mov
xlat
mov
shl
mov
adc
add
pop
sbb
into
push
mov
mov
push
pop
sbb
clc
mov
pop
sbb
ja
adc
and
xlat
mov
xor
inc
adc
push
shr
cmp
test
out
push
lock
or
mov
out
inc
pushf
cmps
clc
retf
jg
das
pop
fidiv
sub
add
mov
xchg
(bad)
xlat
push
jge
test
ror
or
nop
retf
sbb
add
repz
mov
outs
iret
fs
fsubr
jg
push
fimul
cmp
jp
xchg
jl
mov
in
and
mov
std
fcomp
scas
aas
pop
mov
sbb
ja
xchg
imul
retf
mov
retf
in
ret
or
adc
pop
and
cmps
and
adc
dec
mov
xchg
aad
mov
cmp
push
adc
adc
outs
pushf
sub
cmp
inc
(bad)
jae
stos
(bad)
fld
icebp
dec
out
mov
pop
dec
shl
jnp
or
inc
jae
jmp
in
lods
icebp
fnstcw
cmp
xor
mov
push
xor
add
imul
sbb
mov
push
scas
je
dec
cwde
dec
add
dec
jmp
jl
sar
(bad)
pop
xchg
(bad)
and
int3
ret
das
and
push
sub
or
lods
lock
rcr
shl
add
popf
mov
push
xchg
dec
push
and
pop
cmps
jbe
(bad)
or
mov
jmp
fcomp
mov
push
inc
xor
idiv
test
lods
cmps
outs
in
test
(bad)
jge
or
dec
xchg
stos
in
out
sub
push
movs
mov
fwait
sub
sbb
pop
stc
std
dec
gs
sbb
sbb
jg
and
(bad)
shl
dec
outs
push
stc
cmp
xlat
mov
lods
pop
cmp
inc
jecxz
cmp
out
or
mov
push
icebp
call
sbb
rcr
push
in
pop
daa
movs
mov
mov
jecxz
jmp
fmulp
jl
xchg
rol
dec
pop
sbb
xchg
sub
je
and
inc
fisttp
(bad)
and
add
inc
das
test
sar
(bad)
out
or
adc
je
inc
ds
sahf
data16
pop
mov
jmp
scas
jbe
xchg
xchg
je
(bad)
mov
mov
paddsw
push
loop
and
inc
pop
sti
pop
nop
cmp
and
fnstsw
in
pop
repnz
mov
sbb
add
jp
mov
or
repnz
fsub
xor
sub
push
fs
add
enter
test
or
or
aam
popa
retf
dec
arpl
dec
inc
pop
inc
(bad)
fstp
out
mov
repz
loopne
(bad)
lods
pop
popa
adc
(bad)
add
call
shr
shl
cld
aaa
mov
mov
mov
sbb
mov
inc
out
push
jmp
fsub
and
test
add
mov
ror
in
mov
inc
dec
jmp
fwait
je
hlt
xchg
cmp
sbb
imul
adc
gs
xlat
ficom
nop
inc
sub
fadd
or
push
xor
icebp
fimul
mov
hlt
mov
mov
movs
cmp
outs
or
sbb
mov
sub
mov
mov
test
add
ret
push
aam
push
add
add
mov
cmp
ret
lock
sub
add
cmp
jnp
inc
add
repz
jmp
dec
mov
pop
add
loopne
push
(bad)
sbb
push
mov
push
mov
add
and
sbb
push
iret
adc
leave
and
ss
in
enter
jmp
ds
ins
dec
push
test
ror
int3
mov
(bad)
fcmovne
repz
or
adc
pop
loop
jecxz
or
mov
int3
je
dec
and
jecxz
call
(bad)
int3
push
hlt
pop
lods
mov
dec
add
neg
pop
test
scas
or
in
xor
(bad)
push
fbstp
sbb
(bad)
(bad)
out
mov
enter
sbb
jns
pop
sahf
dec
call
jp
pushf
jns
or
addr16
pop
add
mov
xchg
daa
fmul
jnp
and
push
rcl
rcl
cmp
adc
xchg
mov
(bad)
sub
(bad)
out
outs
xchg
push
fidivr
mov
and
ds
dec
imul
add
retf
rcr
ds
push
and
shl
nop
in
fcomp
jmp
aad
inc
dec
stc
inc
cmps
dec
movs
inc
sub
test
sti
pop
cli
inc
fisttp
stos
mov
aaa
popf
cmp
js
push
sbb
scas
cld
push
and
and
adc
sub
rcr
push
jmp
dec
add
shl
pop
xchg
addr16
jmp
lods
mov
xchg
test
pop
xchg
add
addr16
stc
add
in
idiv
std
pop
mov
sbb
pop
rcr
xlat
xor
xor
and
push
xchg
mov
jg
xchg
jge
aam
push
mov
inc
push
movs
or
pop
(bad)
push
rcl
fisttp
es
xchg
dec
cmp
loopne
push
imul
cdq
sbb
mov
jb
inc
dec
mov
inc
aam
push
jnp
nop
ret
mov
scas
sub
inc
or
adc
inc
(bad)
cmps
rsqrtps
retf
fnstenv
test
icebp
push
xchg
inc
pop
(bad)
ror
out
jp
das
sub
lock
scas
pop
mov
sub
lock
cmp
mov
sbb
add
or
(bad)
jnp
jg
add
mov
cmps
pop
mov
sbb
add
data16
pop
repz
pop
add
loope
add
dec
cmp
je
mov
cmp
push
ret
pop
push
or
xchg
fist
mov
inc
add
xchg
jnp
pop
sahf
dec
dec
pop
push
es
push
mov
(bad)
loop
fbld
push
lods
sbb
push
popa
ror
cmp
sub
iret
mov
loope
inc
leave
hlt
mov
inc
push
push
ficomp
or
or
mov
lds
pop
pop
sub
jbe
and
ret
popa
dec
jp
lea
pop
movs
push
push
mov
icebp
movs
jecxz
enter
std
mov
std
adc
pop
stc
es
push
push
pop
lods
ror
mov
add
(bad)
nop
loope
lods
push
clc
cmp
sbb
pop
(bad)
repnz
ficom
iret
add
and
push
xchg
outs
(bad)
jp
fcmovb
pop
jmp
fucom
repz
dec
mov
sbb
pop
movs
mov
xchg
jns
loopne
lock
mul
repz
jmp
sbb
sar
test
sbb
in
push
mov
imul
cmps
add
inc
imul
xchg
(bad)
mov
fst
and
mov
cli
push
dec
mov
fild
lahf
jmp
movs
repnz
jnp
sbb
mov
lods
aaa
popa
inc
pushf
out
mov
pop
or
mov
js
(bad)
pop
shr
pop
fistp
(bad)
push
xchg
xchg
jecxz
out
adc
dec
xchg
mov
pop
push
enter
sub
dec
lock
mov
shl
and
dec
neg
int3
fst
stos
or
sub
fdiv
jmp
loopne
call
sar
sar
add
jp
xor
pushf
ins
mov
daa
dec
pop
mov
sub
adc
pop
cmp
dec
dec
xchg
cmc
loop
test
jbe
mov
arpl
dec
push
and
fadd
stos
xchg
loop
push
cmp
lds
mov
imul
mov
sbb
add
ins
xchg
test
outs
pop
dec
pop
jne
sub
dec
xchg
mov
jnp
dec
cwde
mov
sti
pushf
ret
jecxz
fst
mov
inc
test
cmc
jnp
movs
int3
ficom
pop
mov
imul
pushf
xchg
pop
jns
ret
jbe
jl
aas
jnp
shl
mov
jbe
maxps
inc
pop
pushf
daa
and
fld
xchg
pop
les
imul
mov
jae
(bad)
je
push
retf
sbb
rol
sahf
imul
add
jmp
cdq
movs
std
outs
(bad)
adc
jnp
mul
fistp
dec
jae
adc
fsub
sub
add
or
and
leave
test
and
add
lods
mov
dec
mov
jl
jp
outs
fstp
add
mov
movs
icebp
stc
shl
mov
jae
pop
(bad)
stos
repz
jnp
outs
fst
push
pop
fadd
mov
mov
jo
sbb
pop
pop
jb
adc
test
xor
jmp
repz
faddp
lock
mov
push
js
sbb
xor
call
pop
xor
leave
fwait
cmc
call
pushf
hlt
adc
(bad)
push
xor
jo
packuswb
shl
xor
in
and
int3
mov
cmc
mov
sub
mov
inc
mov
lds
fsubr
shl
push
add
scas
xor
jae
sahf
rcr
fsubr
push
cmp
scas
pop
jp
cli
stos
nop
sahf
sub
test
(bad)
stos
push
imul
push
in
sub
xor
mov
sub
scas
lods
in
xor
and
sub
and
loope
inc
in
hlt
inc
les
push
jo
lods
add
dec
dec
mov
call
pop
daa
not
int
aad
push
fcom
aad
int3
out
dec
leave
cld
pop
dec
call
xchg
mov
sbb
jae
inc
add
clc
rol
pushf
(bad)
mov
(bad)
rol
push
jmp
pop
inc
inc
aas
pop
adc
ins
les
pop
pushf
scas
inc
sar
cs
cmp
mov
cmp
dec
aam
dec
icebp
or
jl
fwait
jne
or
int3
push
ret
les
add
rcl
inc
dec
xor
fld
mov
add
hlt
fidiv
push
jmp
nop
int3
cmp
fdivr
and
ins
js
push
(bad)
xlat
aaa
mov
outs
fmul
and
add
mov
sub
lock
mov
dec
dec
add
jnp
mov
clc
xor
adc
sub
in
aam
xor
leave
sbb
cmp
jp
or
sbb
enter
test
sbb
and
cmp
addr16
enter
outs
aad
sar
adc
xchg
xor
pop
adc
cmp
push
and
jge
push
enter
icebp
iret
out
(bad)
rcr
add
aad
enter
ss
cmps
or
fwait
lea
loopne
hlt
pop
fldcw
mov
sub
mov
adc
mov
(bad)
cmp
mov
inc
jmp
aas
sar
mov
push
mov
xchg
sub
inc
sbb
stos
jmp
and
loop
aam
and
or
jmp
pop
test
mov
pop
and
mov
sbb
(bad)
mov
push
std
mov
ds
int
in
jecxz
or
cmp
ins
pop
(bad)
sub
xchg
prefetch
mov
int
inc
adc
mov
cmp
sub
jo
in
cmp
movs
xchg
mov
shl
pop
int3
inc
dec
ins
in
push
repz
enter
cmp
call
ret
into
jae
or
int3
adc
mov
lds
dec
cli
sub
fwait
dec
mov
lahf
push
sub
add
in
ret
pushf
dec
jge
loopne
ins
and
les
sub
int3
add
in
cmc
les
jle
dec
mov
push
mov
or
call
or
nop
and
shr
sbb
idiv
nop
jmp
adc
not
xchg
addr16
or
test
push
xor
xchg
adc
mov
pop
popa
push
or
out
push
cdq
jp
xlat
mov
rol
pop
or
add
and
and
or
add
ficom
jne
mov
call
dec
xor
jae
fild
jnp
push
test
ja
dec
mov
mov
push
pop
fdivr
aaa
inc
inc
and
(bad)
fwait
cmp
mov
test
mov
outs
bound
sub
pusha
arpl
rol
call
sbb
add
pop
ins
repnz
inc
cli
outs
aam
les
call
sti
push
jns
mov
repz
mov
mov
sahf
xchg
mov
mov
(bad)
fmul
mov
pushf
pop
push
pop
push
hlt
push
dec
cmp
movs
imul
mov
fsub
jno
sub
aam
and
or
mov
shl
inc
mov
and
mov
mov
mov
cmovs
jnp
sti
or
mov
mov
sbb
(bad)
fcom
into
clc
push
dec
repnz
pop
ret
add
in
push
ins
dec
out
push
mov
test
jnp
pop
xchg
jl
(bad)
dec
aaa
clc
popf
test
sbb
or
je
inc
loop
test
leave
popa
and
mov
mov
and
(bad)
cmps
sar
stos
dec
jne
jge
ret
cs
in
jae
mov
xchg
and
and
mulps
dec
mov
(bad)
and
loop
or
cli
stc
(bad)
sbb
dec
xchg
sub
or
fcom
dec
inc
fcom
adc
pop
mov
les
(bad)
(bad)
xor
push
xchg
sbb
adc
xor
out
push
test
ror
sbb
into
push
xchg
sti
jo
or
nop
lea
ins
cmp
mov
scas
out
mov
ins
sbb
and
push
mov
mov
ins
es
fwait
and
mov
and
stos
pop
xor
stc
sar
lock
push
nop
ror
int3
out
cld
push
push
movs
fdiv
fdivr
inc
sbb
out
pop
dec
ror
dec
lods
mov
addr16
dec
pop
sahf
xchg
(bad)
mov
push
dec
(bad)
cmc
or
mov
fstp
jbe
mov
stos
pop
adc
mov
and
inc
push
addr16
push
retf
or
in
fimul
cmp
pushf
inc
jo
mov
push
mov
dec
sub
mov
mov
mov
mov
test
loop
jnp
daa
sub
mov
jg
mov
mov
dec
xlat
or
add
and
imul
mov
(bad)
repz
cmp
and
mov
xchg
jmp
cmc
popf
mov
add
adc
inc
aam
pop
or
jmp
rol
loopne
ins
or
fild
daa
(bad)
cmp
dec
stos
push
clc
sub
aam
cmp
push
xchg
gs
ins
and
push
icebp
or
cli
addr16
mov
retf
imul
jmp
push
dec
fwait
std
je
xchg
pop
leave
sbb
pusha
cwde
pop
lea
or
idiv
ror
shl
push
cmc
shr
xchg
jge
es
ins
pop
mov
sub
ret
jp
stos
(bad)
cmp
xchg
xor
push
xchg
inc
loope
test
out
lock
cmps
ja
cli
retf
test
cwde
jp
(bad)
jo
or
das
jl
inc
dec
sub
jmp
daa
jp
mov
add
cli
jo
aad
inc
mov
loop
cmps
mov
xchg
sar
arpl
fnstsw
fcmove
ins
mov
pop
mov
js
mov
push
xchg
mov
mov
inc
mov
sub
js
(bad)
mov
cmps
(bad)
sahf
push
push
cld
loop
daa
push
or
push
and
les
std
lods
or
pop
push
sbb
add
pop
cld
adc
cmp
repnz
push
pusha
addr16
xchg
loop
mov
xlat
in
leave
xchg
add
sub
or
sub
mov
pop
or
aaa
in
rcr
(bad)
(bad)
mov
xchg
mov
mov
or
dec
xor
xchg
push
loop
ret
push
pop
pop
das
fwait
dec
jge
lahf
call
cwde
adc
pop
push
(bad)
fisub
mov
out
gs
pusha
inc
dec
frstpm(287
dec
pusha
dec
bound
add
stc
sub
cmp
adc
(bad)
pop
je
push
mov
mov
pop
stos
loopne
inc
dec
outs
cld
add
movs
push
adc
fadd
xchg
mov
xchg
jl
adc
imul
dec
jmp
sub
enter
scas
ins
xor
cmc
std
adc
shr
jmp
test
push
movs
pop
inc
inc
loop
inc
rcr
xchg
inc
sbb
jp
fnstenv
pop
movs
gs
xchg
xchg
and
mov
add
pop
mov
push
and
int3
push
cdq
mov
es
push
sbb
xor
dec
fsubp
cmp
cmp
int3
sub
dec
jge
out
pop
jno
jmp
xor
jae
(bad)
and
or
idiv
xchg
adc
dec
add
mov
or
mov
cdq
fs
fdiv
pop
or
(bad)
mov
sti
loopne
mov
popa
das
pop
mov
mov
mov
div
pop
jb
rcr
fld
xchg
sub
add
xlat
lahf
push
jnp
ins
xlat
xor
aaa
sar
stc
ja
add
fdivr
lods
xchg
jecxz
loop
sbb
sub
add
out
add
jle
push
pop
test
aam
iret
or
adc
loopne
sub
test
pop
lods
sahf
test
imul
mov
inc
push
inc
adc
mov
dec
xlat
fldenv
(bad)
ret
lock
xchg
dec
int3
mov
and
sub
sub
mov
fwait
xchg
mov
mov
inc
lock
in
loopne
fwait
inc
jnp
or
mov
(bad)
mov
je
add
les
mov
add
push
fmul
test
pop
rol
out
fsub
loopne
mov
(bad)
out
pop
mov
push
dec
jo
imul
jmp
dec
xchg
sub
(bad)
and
aad
inc
jns
cld
fnstcw
icebp
fistp
fidivr
cmp
cmp
inc
cs
inc
cmp
in
xchg
movs
mov
arpl
push
cmp
jmp
imul
push
shl
cmp
inc
int
mov
test
mov
arpl
jns
movs
inc
loopne
sbb
xchg
and
popa
iret
cmp
pop
pop
push
loop
add
out
scas
dec
add
int3
popa
stos
pop
cmps
push
mov
scas
xchg
(bad)
enter
pop
xchg
mov
or
(bad)
aam
adc
mov
icebp
sbb
repnz
sub
(bad)
lahf
mov
enter
or
jmp
push
dec
inc
mov
in
js
fdivr
ss
and
mov
dec
sub
cwde
pusha
(bad)
and
dec
dec
pop
(bad)
fwait
lock
loopne
stos
mov
fdivr
push
sete
lock
movs
in
push
dec
loop
push
repz
inc
out
jo
mov
bound
add
or
push
dec
push
push
(bad)
pcmpeqb
xchg
rcr
hlt
aaa
les
dec
or
mov
call
cwde
int
shl
mov
sub
cmp
lahf
jns
popa
lahf
rol
dec
jmp
stos
rcr
out
dec
jmp
mov
mov
cmp
shl
jno
pop
out
in
jb
ins
es
test
or
dec
pushf
ins
(bad)
out
int
test
out
mov
cld
dec
xchg
inc
pushf
std
test
in
(bad)
pop
fisubr
push
pop
cmp
xor
imul
mov
mov
sbb
jne
fisttp
push
arpl
mov
mov
ins
mov
mov
cwde
mov
arpl
cmp
inc
aaa
cmp
pop
leave
bound
xor
push
jno
push
xchg
pushf
in
mov
aaa
addr16
icebp
mov
xchg
outs
inc
imul
int3
cmp
push
int3
ss
mov
sub
mov
push
cmc
adc
push
mov
ins
dec
push
push
push
in
(bad)
lea
adc
ffree
jge
add
xlat
dec
and
shr
sub
pop
mov
test
mov
xor
cwde
retf
mov
imul
jg
ja
sbb
jl
sub
xchg
sub
jmp
scas
test
inc
aaa
pop
div
mov
cmp
imul
xchg
sbb
and
add
xchg
idiv
(bad)
pop
inc
mov
out
add
std
mov
add
data16
mov
xchg
in
std
jge
mov
xchg
in
push
push
inc
enter
lods
dec
sub
lds
or
xor
push
pop
inc
mov
sahf
xchg
cmps
dec
jecxz
push
xchg
ja
stos
test
mov
adc
mov
mov
lods
jge
inc
nop
mov
pop
fmul
xchg
mov
sahf
(bad)
(bad)
xchg
(bad)
mov
or
pop
shl
(bad)
sub
stos
(bad)
(bad)
dec
scas
pusha
cmp
maskmovq
(bad)
xor
xchg
mov
repnz
dec
mov
sbb
jnp
out
or
ret
stc
ror
xor
cdq
paddq
jbe
lods
jmp
mov
push
pop
pop
jp
adc
sub
mov
sbb
arpl
aaa
jge
adc
xor
ins
xchg
xchg
dec
mov
sbb
dec
mov
pop
jmp
push
in
fistp
mov
scas
hlt
mov
adc
mov
mov
fimul
push
or
hlt
xchg
dec
push
or
movs
lahf
arpl
dec
stos
mov
or
div
(bad)
faddp
test
fild
pop
cmc
ret
aam
ret
fcom
and
cmp
shr
sar
xor
bound
sbb
sar
adc
xor
lahf
fmul
cmp
cld
ret
xchg
push
mov
sbb
sbb
inc
data16
lahf
loope
sub
pop
mov
fidivr
dec
add
or
sub
xchg
mov
jo
gs
mov
xor
mov
loop
gs
rcl
aas
jg
mov
call
xchg
ins
int3
in
lock
fs
cmp
mov
dec
daa
add
arpl
mov
xchg
add
push
cmp
add
add
lock
xchg
mov
in
fild
pop
cwde
push
push
gs
push
or
pop
push
repnz
inc
cmp
cld
xor
push
ins
jmp
(bad)
lock
pop
sub
xchg
(bad)
jge
sbb
js
mov
cmp
scas
mov
pop
mov
fbld
sub
aaa
(bad)
adc
mov
mov
mov
adc
adc
xor
pop
mov
sbb
retf
mov
popa
ss
loopne
inc
fcom
push
fldenv
dec
in
out
popa
sbb
sub
jp
push
arpl
dec
loope
and
stos
pop
hlt
int3
adc
push
xlat
or
or
jo
mov
dec
fist
and
add
cdq
pop
dec
ja
mov
in
ja
in
jmp
pop
addr16
pop
dec
sti
jo
mov
add
es
in
addr16
fcmovne
stos
ss
or
xchg
inc
pop
jle
add
aaa
les
lahf
mov
fcomp
in
push
stos
adc
jbe
fist
xor
in
xchg
push
and
pop
add
lods
dec
dec
pop
into
adc
mov
nop
aaa
mov
std
(bad)
push
sbb
mov
or
or
pop
xor
jo
pop
jns
jmp
fsubr
jle
jnp
jge
ret
iret
movs
sahf
push
jmp
xlat
cwde
pop
mov
stos
inc
mov
adc
pop
push
cmp
enter
pop
cs
dec
shl
xor
push
inc
mov
sbb
push
pop
push
mov
rcl
loop
xor
adc
lea
mov
ret
frstpm(287
cld
and
iret
xor
adc
lods
sbb
test
fdivr
add
pop
dec
mov
dec
ja
shld
push
pop
jp
stos
mov
dec
ds
xor
movs
mov
shl
inc
mov
aad
imul
sub
xor
js
dec
push
les
inc
xor
fmul
inc
fsubr
scas
jne
pandn
mov
daa
rol
das
sbb
and
mov
mov
jae
imul
and
jecxz
ja
sub
mov
xchg
sbb
pop
and
or
jge
pop
fdivr
rcl
int3
pushf
push
in
dec
add
hlt
sub
ss
mov
adc
mov
sti
fimul
bound
xor
push
mov
out
cmovs
push
jl
xor
js
adc
pop
ret
lods
push
add
ficomp
je
mov
mov
mov
mov
xlat
icebp
xchg
pop
shl
mov
jbe
and
cmp
ins
mov
jl
stc
inc
push
loop
shr
stc
push
scas
mov
sbb
push
sbb
xor
lods
lods
movs
test
push
inc
cs
adc
mov
dec
adc
mov
pop
mov
fisttp
mov
mov
adc
dec
aaa
cmp
(bad)
push
pop
mov
retf
xchg
and
pop
mov
inc
cmp
movs
jne
int
test
jp
adc
push
dec
and
bound
sbb
stc
je
cmp
shl
xchg
push
jnp
or
retf
push
and
cmp
sub
mov
adc
and
push
(bad)
dec
lock
or
push
pusha
jnp
mov
test
call
mov
jge
outs
mov
cmc
jmp
sbb
ret
(bad)
ss
push
mov
fcmovu
loop
movs
mov
into
jmp
fsub
jno
jno
add
pop
fisubr
cmp
(bad)
enter
imul
pop
retf
ins
mov
pextrw
sbb
dec
movs
push
ss
fistp
leave
pop
mov
cld
retf
or
(bad)
cs
cld
cs
push
mov
(bad)
xor
dec
loopne
xchg
sub
(bad)
(bad)
leave
mov
mov
adc
imul
or
popf
push
adc
pop
repnz
jb
xchg
lods
test
movs
dec
mov
jmp
fwait
push
adc
sub
xor
sbb
(bad)
loope
xchg
and
or
pop
inc
subps
adc
push
inc
inc
mov
lock
dec
pop
add
test
jb
mov
out
les
mov
stos
jbe
pop
xor
xor
xor
lahf
test
jns
neg
mov
imul
add
(bad)
repnz
data16
into
sbb
js
rcr
dec
das
sub
int3
ins
xchg
adc
and
pop
mov
sti
dec
fs
inc
dec
hlt
cmps
out
iret
sbb
pop
mov
fadd
js
rsqrtps
xor
loop
aaa
cwde
jp
imul
shr
add
xor
(bad)
js
push
dec
inc
sub
in
and
inc
in
and
mov
(bad)
(bad)
inc
and
fist
push
and
or
test
fild
pop
clc
or
mov
loopne
call
gs
shr
hlt
add
jmp
jl
pushf
inc
dec
push
test
mov
out
pop
mov
rol
inc
in
add
or
mov
xchg
loopne
out
stos
lods
loopne
mov
jmp
in
jns
fsubp
add
fiadd
xchg
icebp
xor
pop
xlat
aas
in
push
adc
xchg
xor
repz
pop
mov
sub
xchg
test
sub
gs
ja
dec
mov
ficomp
aad
inc
mov
sbb
mov
inc
sbb
xor
adc
adc
iret
scas
or
lods
outs
pushf
test
sbb
xor
inc
fsub
and
xchg
mov
(bad)
mov
mov
jae
and
(bad)
cwde
add
jmp
(bad)
or
dec
fist
ss
push
(bad)
rol
push
lods
arpl
imul
xor
scas
mov
ds
popa
xor
jnp
mov
pop
dec
adc
sbb
xlat
sahf
arpl
addr16
cmp
ret
shl
xor
xor
jecxz
pop
mov
push
push
fild
test
mov
icebp
mov
dec
or
mov
push
call
rcr
push
adc
jmp
mov
nop
addr16
fist
push
pop
cld
push
cdq
mov
(bad)
xchg
push
(bad)
mov
ja
daa
push
mov
pop
loopne
add
pop
mov
sub
std
or
mov
or
mov
mov
dec
pop
mov
sbb
in
(bad)
pop
adc
push
add
dec
pop
in
fld1
xchg
and
scas
sbb
dec
mov
data16
mov
cmps
out
ja
(bad)
cmc
fcomp
add
sbb
cmp
inc
add
cmp
push
push
mov
inc
sti
cmp
xchg
dec
out
jns
cmp
sub
ins
push
jg
mov
mov
aam
inc
sbb
fwait
dec
neg
pop
mov
test
sbb
mov
ret
test
aad
shl
out
and
or
test
sbb
dec
mov
jnp
xor
add
mov
cmp
cmps
sahf
xchg
popa
and
and
mov
push
mov
push
in
mov
call
ins
iret
cmp
stc
xor
cs
mov
push
jb
jecxz
inc
sbb
cli
or
mov
cmp
call
or
xor
jb
mov
or
jle
mov
push
rcr
sub
cmp
fcmovne
jmp
mov
int3
dec
arpl
int3
push
loop
push
stos
rcl
cvtps2pd
fld
fdiv
mov
push
popa
mov
pop
pop
mov
test
ins
sub
movs
xchg
stos
(bad)
stos
fild
ja
aad
call
fstp
add
or
iret
enter
sub
inc
dec
dec
in
cwde
nop
sbb
pop
out
cmc
push
dec
dec
and
ret
mov
add
pop
cs
mov
ins
sahf
jl
nop
mov
xor
inc
in
cs
adc
jae
ins
cmp
push
das
ret
sub
or
rol
inc
lods
loop
pushf
shl
cmc
sbb
cld
ins
inc
dec
pop
movs
push
fsub
jmp
mov
push
into
cmp
popa
pop
mov
sbb
in
retf
in
xor
xor
inc
jmp
test
cmc
push
mov
and
mov
hlt
mov
cmp
or
(bad)
in
push
dec
cmp
je
fwait
add
repz
xchg
aad
mov
(bad)
cmp
out
mov
lods
mov
and
pop
hlt
pop
outs
jg
jb
movs
adc
jg
je
add
(bad)
sub
les
js
mov
mov
xor
in
dec
out
or
push
std
cmovne
fisub
mov
push
ins
fst
adc
pushf
jo
sub
adc
add
inc
std
shr
lods
push
arpl
sbb
mov
sbb
mov
daa
mov
xchg
cs
ficomp
idiv
jo
mov
lods
jmp
cmp
pop
cdq
xor
sbb
adc
enter
cmp
pop
sbb
aas
pop
and
cmp
movs
test
gs
push
std
or
xor
pop
xchg
add
or
rcl
fsub
in
ret
push
jb
mov
mov
add
in
mov
pushf
outs
shl
inc
ds
call
cdq
vpsubsw
cmp
push
mov
lds
lock
xor
movs
or
fld
jno
mov
jbe
in
jp
pop
loope
addr16
adc
pop
inc
mov
loopne
cwde
movs
call
push
imul
sub
inc
xchg
fsub
fbld
ins
fisubr
in
test
fisub
or
leave
adc
in
ds
add
fwait
daa
xchg
lods
pop
dec
add
dec
aam
inc
mov
mov
jne
lods
pop
mov
jl
xor
pop
cmp
pop
aas
sub
cmp
loopne
pop
fsincos
cmp
and
loopne
lock
jp
sub
dec
mov
call
cmp
mov
adc
imul
icebp
push
sub
scas
std
push
test
push
loopne
leave
inc
aam
pop
adc
aaa
ja
dec
call
sti
xor
xchg
ja
adc
clc
aam
pop
pop
outs
mov
pop
jge
jmp
cmp
adc
sbb
jp
int3
repz
pop
xor
sbb
push
imul
div
push
mov
push
fiadd
fwait
cmps
(bad)
data16
hlt
adc
mov
pop
iret
rcr
sub
and
inc
adc
ror
repz
pop
jecxz
mov
mov
out
mov
xor
pop
pop
leave
push
lahf
pop
cmps
sar
and
fdiv
mov
inc
mov
aad
mov
ins
add
(bad)
popa
pop
dec
mov
push
out
dec
cld
pop
lahf
ds
fstp
jl
fsubr
push
loop
test
adc
pmullw
push
retf
lahf
pop
sbb
and
repz
jbe
mov
or
sbb
lods
mov
call
nop
xlat
jae
test
aam
sbb
icebp
jno
les
dec
popa
fadd
xchg
push
aad
dec
mov
xchg
in
mov
pop
dec
fs
idiv
lea
fidiv
mov
inc
repz
test
adc
stos
dec
add
cmps
mov
stos
shr
fbstp
lea
adc
cmc
push
sbb
xlat
lds
leave
int3
xchg
clc
adc
ret
in
ss
cwde
fwait
sub
mov
or
fild
lock
div
leave
pop
out
ins
cmp
mov
out
pop
jmp
rcr
adc
dec
xor
inc
div
mov
loop
pop
pop
mov
mov
jge
cmc
inc
push
mov
sbb
js
not
dec
add
or
sub
cmp
xor
mov
xchg
cmp
rol
lods
aad
dec
std
push
push
or
daa
jno
sbb
sub
push
push
and
idiv
mov
stc
jmp
repnz
push
fwait
scas
pop
(bad)
loopne
mov
pop
pop
xor
dec
push
push
in
cwde
in
dec
(bad)
call
mov
push
std
pop
movs
nop
mov
ret
ja
mov
ins
adc
push
push
jae
dec
lahf
out
fmul
push
aam
and
cwde
arpl
and
push
(bad)
fld
mov
xchg
ja
ins
ja
fdiv
dec
inc
jbe
pop
inc
jmp
mov
xlat
loopne
arpl
pop
cli
(bad)
dec
cld
mov
mov
clc
arpl
xchg
push
movs
and
popa
addr16
dec
jbe
aam
aaa
pop
sar
nop
pop
pop
mov
sub
push
jbe
(bad)
ror
sar
pop
inc
or
pop
inc
call
adc
mov
pop
(bad)
cld
outs
xchg
xchg
mov
pop
loopne
mov
fwait
xchg
add
xchg
push
arpl
lock
daa
mov
idiv
sub
mov
fwait
cmp
lahf
loope
aam
jg
loopne
and
shr
mov
cdq
nop
add
js
inc
xchg
adc
fstp
stos
pop
(bad)
call
cld
in
aad
and
pop
mov
xchg
add
(bad)
jecxz
and
jge
cmc
popa
cmp
xor
call
mov
scas
fstp
(bad)
dec
in
fs
pop
call
out
cmc
cwde
iret
stos
jb
cwde
jbe
cld
or
repnz
jnp
cmps
pop
mov
jmp
add
(bad)
jle
rcl
xor
dec
mov
xchg
jp
stos
cmp
in
loope
(bad)
fdivr
add
add
dec
adc
cwde
jmp
sub
fwait
lahf
movs
adc
add
xchg
ds
dec
mov
add
nop
inc
fisub
clc
cmp
enter
das
jp
or
xchg
or
cmp
mov
adc
push
(bad)
ss
ret
hlt
and
dec
adc
push
lea
cmp
addr16
adc
test
xchg
lahf
outs
cmp
dec
adc
ret
mov
addr16
aaa
sub
sub
fst
cmp
mov
sti
xchg
xor
in
inc
adc
gs
pop
or
(bad)
cwde
sub
enter
jbe
arpl
mov
mov
sbb
(bad)
dec
mov
inc
js
jg
les
and
test
adc
xchg
push
adc
(bad)
ss
fisubr
sbb
cmp
bound
push
pop
jg
(bad)
mov
(bad)
mov
xchg
sti
cmp
sub
dec
fiadd
pushf
idiv
loopne
or
fidiv
adc
mov
pop
dec
out
loopne
mov
push
test
mov
test
mov
mov
mov
xchg
pushf
enter
out
push
or
push
jl
jle
daa
pop
mov
call
jg
cwde
out
lea
scas
mov
dec
rcr
pop
test
pop
shl
jg
ret
jmp
cmc
mov
aam
pushf
pop
int
aad
mov
inc
jmp
fidivr
push
mov
sub
push
push
or
int3
fsub
or
scas
push
(bad)
mov
jg
out
repz
push
bound
test
nop
cmp
pop
pop
int
xor
stc
fldenv
icebp
add
push
rcr
xchg
sbb
sar
xchg
dec
sbb
mov
xlat
ficom
sub
inc
xchg
pop
mov
out
mov
ret
sbb
pop
cmc
fisttp
sar
aam
popa
jl
xchg
or
fstp
mov
lods
ins
jbe
arpl
outs
mov
adc
outs
ds
add
sbb
push
push
mov
or
jo
lea
add
mov
mov
xor
cwde
jmp
popf
in
imul
fnstenv
add
jo
push
sti
popf
sbb
fmul
leave
dec
cwde
push
pushf
and
dec
out
push
or
imul
sahf
ins
mul
sub
jl
lods
sbb
mov
outs
dec
pop
shl
popf
retf
mov
imul
or
adc
mov
in
pusha
mov
xchg
push
pop
in
sbb
mov
pop
and
les
outs
dec
and
lods
xchg
pop
xor
sub
push
pop
movs
mov
pop
mov
sar
ins
xchg
outs
fwait
xchg
inc
aam
push
mov
retf
ja
rol
add
imul
mov
jnp
mov
into
xchg
xchg
xlat
and
stc
cmp
xchg
mov
xchg
push
(bad)
inc
lods
mov
fcmovne
pop
push
in
loop
(bad)
stos
lea
mov
stos
les
dec
mov
fnclex
sbb
xchg
inc
jmp
das
fistp
movs
adc
xchg
dec
push
or
cdq
adc
nop
mov
mov
les
sbb
jnp
push
aam
ja
or
sar
enter
rcr
xchg
pop
inc
out
popf
mov
push
cmp
jb
xchg
push
jg
and
fdivr
push
leave
or
mov
jne
mov
shl
push
ret
pop
pop
dec
(bad)
mov
mov
add
cmc
and
btc
pop
mov
sub
aam
loope
cmc
das
add
addr16
jns
cmp
mov
jg
cmp
pop
push
cs
or
dec
jnp
sub
rcr
cmps
inc
jmp
out
push
int3
xlat
call
fisubr
nop
push
xor
sar
call
cmps
dec
push
sub
jnp
lea
or
and
jl
(bad)
loopne
mov
out
dec
xor
outs
pop
(bad)
arpl
lock
test
iret
xchg
mov
pushf
test
xchg
cld
mov
cdq
pop
lods
cmps
cmp
adc
jne
xchg
inc
mov
ficom
and
or
call
mov
in
in
movs
dec
(bad)
push
push
pop
mov
xor
xor
sbb
loop
pop
or
ret
cmp
pop
and
pop
std
stc
push
(bad)
pushf
fwait
xor
mov
retf
jge
xchg
inc
outs
lds
sub
fist
rol
push
sbb
test
mov
mov
pop
pop
pop
(bad)
(bad)
aas
(bad)
adc
mov
mov
fwait
xchg
adc
cmp
sbb
push
add
push
push
mov
jbe
pop
addr16
xor
push
xor
fnsave
xchg
scas
loopne
pop
test
cmp
mov
jno
sub
pop
dec
sub
cmps
pop
addr16
loop
call
pop
mov
push
adc
adc
je
push
ins
popa
sbb
jmp
adc
dec
neg
sti
ds
sbb
cmc
nop
push
stos
push
sub
fwait
addr16
sbb
push
ja
dec
fcmove
mov
movs
mov
fst
je
in
lds
push
out
ins
push
xchg
mov
fadd
xlat
pop
mov
imul
daa
push
or
stos
fbld
or
jae
mov
retf
shr
xchg
icebp
(bad)
dec
jmp
sub
inc
pushf
inc
in
pop
push
lahf
inc
repz
lock
xor
or
addr16
outs
out
cwde
stos
sub
mov
fadd
mov
jmp
mov
sub
xor
popa
sbb
lods
call
sbb
jp
jnp
inc
out
rol
jno
(bad)
mov
fs
dec
sbb
inc
jbe
sahf
sbb
ins
mov
mov
add
xor
aaa
aas
hlt
sub
pop
daa
(bad)
fdiv
pop
and
sbb
hlt
mov
cs
sub
test
lock
mov
iret
test
dec
movs
inc
rcr
cdq
mov
pop
jp
rol
xor
das
mul
ret
(bad)
fstp
cmp
test
(bad)
xchg
(bad)
xor
sub
cmp
adc
dec
data16
jg
dec
aaa
outs
dec
lock
cmp
sar
data16
mov
and
push
stc
and
sub
fnstsw
sub
adc
cld
sbb
enter
popf
ins
cmps
jb
sub
jo
mov
idiv
push
xlat
or
(bad)
jnp
xor
test
jo
or
call
aaa
add
and
and
ret
cmp
cmp
pop
cmp
getsec
pop
popf
inc
jg
jnp
xor
jp
fisub
mov
(bad)
inc
inc
push
sub
outs
ret
imul
pushf
add
into
aas
sub
sbb
lea
mov
jnp
pop
adc
pushf
inc
pop
mov
jmp
add
or
inc
rcl
jge
int3
add
inc
dec
dec
add
xor
out
pop
pop
mov
aam
inc
idiv
cmp
rcl
jae
add
and
dec
pop
gs
out
lea
xor
rcl
fsub
movs
adc
mov
fild
xor
dec
inc
jbe
imul
push
add
xchg
pop
loopne
in
imul
jge
xlat
arpl
lock
test
push
clc
xor
scas
inc
push
pushf
cwde
pop
and
stc
push
ret
add
mov
lods
inc
xor
ss
sbb
stos
adc
xchg
or
mov
cmp
mov
xlat
loopne
mov
and
push
hlt
xor
cmp
nop
scas
pop
cs
or
mov
fst
cmp
and
jne
cmps
adc
sub
mov
shl
js
mov
ror
xchg
sub
gs
push
(bad)
mul
bound
in
enter
pop
ret
pop
mov
arpl
xchg
pop
push
pop
cmp
push
dec
dec
or
push
pop
sahf
clc
lods
mov
(bad)
push
in
mov
pop
dec
movs
add
shr
push
push
jnp
lfs
or
pop
push
in
jmp
xor
pop
and
fld
cmc
pop
ror
das
jnp
repz
jbe
sbb
cld
sti
pop
inc
imul
mov
inc
xor
mov
pop
cmps
push
push
pop
pushw
sub
rcr
(bad)
jo
mov
aad
sub
push
nop
jne
(bad)
repnz
iret
adc
jg
fcomp
sbb
xlat
push
leave
fidiv
sbb
sub
xchg
dec
mov
int
pushf
fisttp
xchg
xlat
jb
fisub
pop
ja
neg
pop
push
inc
sbb
ins
out
mov
iret
inc
dec
cmp
addr16
in
xchg
loop
popa
dec
push
or
xchg
neg
xchg
pop
sub
dec
cwde
test
(bad)
sub
loop
mov
sahf
inc
ror
inc
cmp
pop
imul
xchg
hlt
dec
in
int3
nop
in
push
cmp
scas
mov
jmp
je
sub
sub
mov
mov
adc
inc
loopne
stos
sahf
xor
sbb
add
dec
scas
(bad)
fcom
or
and
or
mov
outs
cmp
sar
inc
inc
(bad)
mov
sub
ficom
(bad)
mov
push
addr16
sar
and
push
jns
out
xchg
pop
mov
scas
lods
rcl
es
jno
scas
adc
hlt
sub
and
mov
sahf
sbb
shr
rol
add
sar
and
aam
arpl
jl
sbb
sbb
fidivr
mov
mov
or
push
sub
inc
push
mov
imul
imul
and
fnstsw
js
sub
cmp
cli
(bad)
dec
push
jle
xor
bound
xor
rcl
(bad)
and
mov
xlat
shl
je
or
sub
pop
add
popa
aam
sub
sti
imul
mov
or
pop
test
inc
xor
sub
cmp
retf
(bad)
int
jmp
jmp
scas
ret
fs
jg
mov
pushf
fimul
cmp
fs
or
out
adc
jnp
add
sub
mov
and
sahf
out
pop
sti
add
repnz
sub
dec
push
push
lea
dec
cli
push
dec
xor
nop
inc
xor
aaa
mov
mov
gs
or
nop
mov
fbstp
in
in
ins
jp
pop
daa
cmps
pop
test
dec
add
xchg
lahf
adc
inc
dec
mov
or
mov
inc
(bad)
xor
dec
pop
xor
or
push
(bad)
xor
mov
mov
add
shr
dec
pop
jns
xor
sub
push
adc
mov
dec
mov
pop
sbb
or
inc
cmp
xchg
lods
hlt
not
fwait
call
fbld
pop
movs
ret
xchg
stos
cmps
pop
jae
(bad)
mov
or
xor
jo
sub
jl
xchg
mov
div
fisttp
cmp
test
dec
pop
shl
stos
pusha
jnp
jmp
fnsave
cs
xor
dec
push
sub
ror
pop
icebp
add
jne
push
in
gs
dec
pop
in
cdq
add
jmp
jno
in
leave
es
mov
xor
bts
js
dec
sub
add
stc
imul
call
push
or
es
fld
inc
mov
pop
enter
sahf
cld
stc
(bad)
mov
pop
and
push
jae
mov
or
daa
shl
aaa
int3
aas
adc
fldcw
sub
inc
mov
pop
lods
push
add
lea
lea
pop
mov
fstp
arpl
(bad)
aam
pop
or
xchg
shr
cmp
std
jb
mov
loop
add
adc
cmp
ds
hlt
sub
aas
outs
out
pop
fcom
call
out
mov
xchg
xor
test
jno
mov
dec
jle
in
sub
dec
repz
xor
cmp
jae
pushf
loopne
loope
iret
mov
sbb
imul
jmp
pop
test
jmp
mov
pop
push
sbb
aas
xchg
xchg
les
inc
or
mov
nop
mov
call
or
fldenv
cmp
sub
add
mov
movlhps
jp
xchg
out
into
jecxz
mov
push
push
pop
mov
inc
cmps
add
adc
imul
call
add
pop
jae
sub
pop
mov
add
stos
or
test
push
and
int3
inc
daa
mov
cmp
mov
adc
dec
daa
shl
mov
cli
stos
mov
push
jge
shl
xchg
push
xor
mov
bound
data16
movs
jne
xchg
nop
inc
pop
fimul
mov
inc
sbb
dec
scas
ja
dec
sti
test
or
aas
dec
repz
retf
test
and
pop
dec
mov
icebp
pusha
mov
sar
dec
imul
mov
and
adc
pop
pop
test
pop
pop
cdq
or
pop
mov
or
addr16
popf
daa
jae
pusha
dec
ss
add
cmp
cdq
ds
addr16
test
(bad)
and
in
jo
pop
fwait
jno
inc
retf
(bad)
enter
mov
xchg
push
call
pop
lahf
jl
int3
les
out
jmp
(bad)
cmps
ins
call
cmp
add
pop
xchg
inc
stc
and
jmp
xor
es
add
xchg
cmps
not
adc
movs
pop
jnp
sbb
ret
push
dec
int3
pop
and
adc
pop
daa
xchg
aam
mul
adc
add
mov
xor
push
imul
add
shr
jmp
cmc
sbb
or
adc
movs
stos
aam
adc
in
cmp
add
or
cmp
pop
mov
lods
push
xchg
daa
dec
adc
out
dec
in
add
inc
jbe
lea
xchg
gs
hlt
mov
mov
xchg
iret
shr
mov
push
add
mov
int3
add
mov
(bad)
movs
cmps
in
aaa
push
cli
and
pop
dec
lea
stos
dec
fidivr
cli
das
or
mov
fisttp
mov
mov
pop
cmc
dec
fst
jnp
sub
and
pop
cmps
daa
or
daa
daa
push
aam
and
leave
div
cmp
jnp
fwait
movs
ror
push
pop
aam
jmp
pusha
push
test
xchg
mov
mov
sahf
stos
das
arpl
fcomp
cmps
neg
xchg
and
adc
js
mov
inc
add
mov
cmp
lock
sar
cmp
xchg
aam
xchg
sbb
mov
cwde
out
xor
lahf
dec
out
int3
or
adc
es
adc
jmp
inc
push
(bad)
not
push
adc
mov
ja
leave
sub
xchg
sbb
ret
cmp
mov
mov
loop
push
test
jg
sub
je
inc
cmp
jg
inc
dec
lahf
mov
dec
std
or
(bad)
fidivr
popa
pop
jle
and
xor
jmp
sbb
enter
add
(bad)
lods
xchg
jge
adc
mul
xchg
aam
sbb
das
daa
(bad)
push
sbb
push
ret
inc
sub
sar
push
xchg
jg
retf
aas
xchg
add
adc
(bad)
out
jne
push
out
mov
addr16
stos
sub
or
or
fidiv
loop
add
sti
dec
call
shl
(bad)
ins
xor
inc
imul
dec
mov
and
jnp
pop
or
inc
sbb
mov
scas
adc
dec
idiv
loop
mov
adc
lods
leave
mov
sahf
xchg
ds
xor
add
stos
xor
dec
dec
mov
mov
dec
inc
test
mov
mov
pop
test
mov
shl
ins
out
push
xchg
loop
xchg
pop
adc
cdq
dec
jmp
add
outs
pop
inc
cmp
sbb
xchg
(bad)
jle
int
push
imul
ror
xor
jno
inc
cmp
and
pushf
jge
fldenv
pusha
int
repnz
push
mov
in
mov
dec
mov
adc
mov
pop
and
popa
loop
les
cmp
mov
loope
call
dec
cmps
mov
ins
adc
and
dec
push
push
xchg
jle
add
and
sbb
sub
shr
test
mov
cmp
add
cmc
pushf
loop
es
(bad)
push
sub
xchg
pusha
sar
xor
pop
dec
xor
pop
fs
add
and
scas
sub
pop
scas
aaa
mov
(bad)
mov
sbb
jns
jmp
je
xor
rcl
sbb
push
cmp
jg
lods
int3
and
jmp
jnp
cmps
aam
xor
ficomp
pop
xchg
cmp
lahf
pop
pop
jle
xchg
popa
sahf
ret
pop
in
js
arpl
and
pop
(bad)
push
push
push
mov
inc
loop
out
sbb
lods
mov
mov
imul
adc
xor
add
stos
out
mov
sub
mov
inc
cmp
inc
fcomp
pop
mov
popf
sti
xor
repz
or
mov
icebp
ret
and
mov
sbb
pop
stc
mov
or
(bad)
fisubr
cli
jmp
mov
adc
push
mov
pusha
les
aam
dec
sti
mov
inc
adc
push
or
in
lahf
sbb
push
leave
mov
arpl
leave
sub
(bad)
ds
xchg
xor
hlt
cmp
mov
cmc
shl
add
loop
in
pop
or
sub
xchg
rol
test
stc
or
iret
mov
das
jge
jecxz
ins
or
inc
pop
cld
dec
mov
mov
xchg
add
outs
fdivr
rcl
and
add
push
mov
pop
mov
jbe
jmp
out
adc
dec
mov
ror
push
(bad)
or
dec
sub
adc
inc
mov
sbb
cmp
inc
dec
retf
push
xchg
xchg
sub
ror
push
jge
enter
or
mov
mov
std
ins
xor
lods
xchg
js
pop
(bad)
fs
outs
adc
pushf
jno
out
les
mov
xchg
xor
cmp
dec
mov
int
push
mov
push
push
fwait
jbe
and
dec
sbb
rcl
ss
or
sbb
xor
or
add
nop
daa
push
add
sbb
mov
push
out
dec
daa
(bad)
clc
arpl
mov
arpl
mov
pushf
in
(bad)
call
dec
jp
or
mov
fwait
cld
and
movs
fsub
and
or
sub
or
inc
xchg
push
cmp
adc
dec
cmp
add
jae
jnp
mov
lock
call
pop
ins
jge
enter
sbb
aam
iret
jmp
shl
(bad)
mov
jl
push
adc
cdq
mov
ret
and
mov
push
repz
pop
add
dec
push
shl
aam
idiv
into
imul
ins
or
fs
jbe
fwait
mov
mov
dec
out
mov
fild
in
scas
cmc
inc
mov
mov
pop
mov
sbb
cmp
mov
mov
(bad)
xor
cmp
mov
(bad)
xchg
not
sub
stc
mov
mov
addr16
push
test
adc
mov
je
stos
cmp
xor
cmps
jmp
dec
frstor
jl
and
inc
cmps
arpl
test
and
aad
xchg
or
pop
mov
clc
retf
movs
fisubr
inc
sub
aad
stc
pop
inc
cld
xchg
push
rol
jge
push
jns
pusha
mov
push
out
aad
sub
cmp
shl
add
test
xchg
xchg
lods
popa
pop
pop
addr16
fcmovu
xchg
dec
(bad)
pop
repz
sub
in
cdq
jmp
loope
inc
or
pop
(bad)
fcomip
mov
cmp
scas
mov
xchg
(bad)
mov
or
lods
jmp
mov
dec
cmp
loopne
sbb
inc
jp
ss
cmp
fnstcw
push
sub
jmp
fnstsw
sahf
sub
jmp
mov
mov
dec
(bad)
loopne
iret
dec
dec
sub
imul
jge
dec
xlat
adc
lock
inc
jg
loop
add
les
ins
shl
(bad)
xor
aam
mov
cs
xlat
push
xor
xchg
cs
pop
sub
mov
jmp
fld
pop
mov
test
inc
inc
mov
push
sar
ja
mov
ret
outs
cmp
loope
adc
(bad)
push
push
fldz
push
pop
dec
inc
push
ins
cli
pop
and
repnz
cld
mov
push
jg
sub
lods
loop
ss
mov
loope
neg
and
add
int3
data16
dec
repz
sbb
xlat
mov
mov
pushf
sbb
xchg
into
xchg
nop
mov
inc
xor
mov
sbb
jae
fmul
out
pop
inc
(bad)
push
hlt
dec
xor
pushf
and
adc
aaa
xchg
adc
cmpxchg
jns
push
and
pop
in
pushf
inc
lea
scas
xor
adc
pop
scas
xchg
mov
push
(bad)
(bad)
pop
or
jecxz
inc
or
push
xchg
jg
cmp
add
arpl
mov
add
cmc
clc
push
adc
test
xchg
inc
neg
test
dec
jns
mov
je
rcr
in
fstp
xchg
xor
add
or
mov
retf
fst
jmp
icebp
push
aas
bound
rcl
adc
pushf
push
xlat
cmp
fsubr
dec
mov
lock
sub
pop
neg
and
push
aas
mov
loope
mov
xchg
adc
stc
push
dec
les
xchg
ja
mov
inc
pop
pop
mov
fcom
imul
push
add
cmp
push
imul
push
sub
inc
(bad)
lock
add
test
sub
lahf
cwde
xchg
cli
xor
or
jl
sub
jae
push
aas
dec
pop
(bad)
ja
push
imul
cmp
push
cmc
sbb
push
in
mov
dec
arpl
and
push
pop
jmp
(bad)
addr16
fldenv
sbb
jl
jbe
rol
mov
add
lods
jg
lock
fiadd
cmps
sbb
sub
enter
mov
call
cmps
adc
sbb
push
ss
popa
dec
xchg
loope
pop
cli
lods
std
ret
dec
test
mov
fldcw
fldenv
xchg
out
dec
mov
std
adc
loopne
mov
retf
or
stc
aam
jge
sbb
jle
loop
call
add
cmps
lods
fisttp
adc
pop
push
pop
mov
dec
adc
les
(bad)
(bad)
in
inc
out
adc
jl
mov
dec
mov
aam
sar
mov
pop
xchg
mov
cdq
jmp
call
cmps
les
ficomp
inc
es
lahf
not
or
xchg
add
cmp
cmp
add
ja
sub
outs
xor
js
imul
pop
jg
sub
hlt
sbb
xor
aaa
pop
push
fstp
push
xor
fwait
and
in
push
scas
jg
jp
fmul
(bad)
jmp
dec
sub
fisttp
pop
(bad)
push
jmp
mov
fdivr
push
and
add
stos
sub
mov
mov
mov
out
cmp
sub
and
and
fwait
and
mov
pop
add
(bad)
dec
rcl
and
aad
ret
xor
or
cld
sbb
jmp
std
and
mov
mov
in
cmp
mov
test
repz
xor
imul
add
(bad)
xchg
pop
sub
mov
jno
xchg
jae
push
or
adc
in
dec
iret
scas
int3
and
lods
test
ficom
cmps
fisttp
sub
gs
jl
sahf
cmps
stos
fistp
mov
(bad)
icebp
arpl
repz
xchg
out
push
sub
sub
out
mov
push
cli
aam
inc
mov
jns
daa
fwait
aad
push
pushf
mov
dec
stos
push
or
mov
adc
or
and
pop
jle
lods
push
cli
clc
int3
test
fsub
push
jmp
push
int3
xor
loopne
dec
ins
jae
in
xchg
fstp
mov
push
lahf
xor
xchg
jmp
call
test
test
fiadd
xor
inc
mov
pop
ret
gs
aam
and
and
inc
idiv
js
fcom
xor
out
mov
mov
mov
shr
les
push
fyl2x
mov
xchg
stos
loop
das
sbb
sub
retf
adc
jae
(bad)
and
inc
sbb
inc
jne
test
lea
inc
cmp
popf
cmp
in
sub
ret
(bad)
jns
ins
mov
sbb
dec
push
js
dec
cmp
mov
or
push
aaa
cmp
mov
mov
pop
scas
pop
push
sbb
push
int3
xor
jb
dec
cmp
jmp
test
sub
sbb
jne
lods
push
jecxz
xor
sub
cli
mov
pop
mov
in
je
push
(bad)
mov
pop
sbb
iret
ja
fdivr
outs
pushf
dec
mov
jnp
dec
sahf
jmp
mov
outs
and
jne
(bad)
push
jae
pop
adc
xchg
xchg
jae
cs
mov
imul
test
add
retf
jne
sbb
push
mov
loope
dec
push
jle
mov
push
mov
stos
rcl
(bad)
mov
mov
fwait
or
add
cmp
int3
inc
xchg
mov
(bad)
sbb
push
pop
jne
cld
iret
cmp
mov
fild
and
outs
mov
out
jno
and
mov
push
test
mov
jmp
lds
add
aam
mov
lds
push
fsubr
mov
(bad)
fnstenv
adc
cmps
mov
and
and
and
xor
ins
mov
fcomp
or
adc
retf
and
dec
push
or
mov
sub
adc
fucomip
mov
lahf
sbb
pop
mov
or
sbb
rol
cdq
loop
lods
xchg
out
push
fcomp
cmp
mov
rcr
loop
mov
outs
mov
pop
fisubr
xchg
mov
or
dec
in
les
mul
mov
sti
repz
xor
xlat
cwde
bound
mov
push
fdiv
cmp
pushf
mov
inc
fdivr
jnp
icebp
pop
push
dec
pushf
xchg
cwde
in
or
adc
aam
in
mov
dec
xchg
adc
push
in
hlt
cdq
cmp
xor
inc
test
mov
push
ja
(bad)
pushf
push
mov
retf
xchg
out
cmp
fucom
(bad)
sti
inc
rcl
psrlq
fadd
push
dec
push
dec
mov
(bad)
pop
mov
sub
mov
xor
dec
jl
mov
sbb
xor
sub
cmp
movs
std
mov
jbe
out
fstp
mov
inc
push
cmp
arpl
xlat
fwait
adc
shr
push
jb
(bad)
addr16
cmp
push
inc
jae
aad
mov
jmp
int
lods
adc
dec
test
sti
inc
rol
dec
and
pop
sbb
int3
cmc
add
adc
mov
jne
icebp
pop
es
ins
and
inc
fimul
pop
jge
cmps
sbb
and
xchg
sub
pop
in
inc
(bad)
pop
cmp
xchg
dec
clc
jno
movs
ins
mov
and
icebp
and
div
mov
mov
push
inc
adc
out
cs
xor
mov
lds
xchg
pushf
sbb
adc
push
pop
sub
xor
push
adc
stos
(bad)
mov
(bad)
jbe
mov
adc
jnp
lock
imul
sbb
push
cmp
sbb
nop
repnz
mov
(bad)
sub
pop
out
pop
xor
xor
jl
cmps
loope
pop
pushf
rcpps
rcl
push
cmp
addr16
nop
xchg
pop
jae
inc
inc
push
dec
daa
xchg
mov
cmp
xor
les
rcl
pop
outs
aaa
mov
add
int
bound
dec
mov
pop
dec
das
lock
xor
sub
(bad)
(bad)
jnp
(bad)
loopne
adc
mov
add
xchg
cmps
into
call
test
loop
inc
test
lods
sbb
jmp
xchg
mul
in
cwde
and
push
sar
inc
idiv
movs
push
xchg
or
lods
xor
adc
sub
sbb
xor
pop
xchg
sbb
inc
stc
mov
and
loope
push
xlat
retf
xchg
sub
out
inc
push
and
(bad)
pushf
dec
pop
fadd
cdq
pop
rcl
lds
ret
test
push
jne
ins
mov
pop
lds
fidiv
dec
outs
(bad)
adc
mov
stos
mov
repz
sbb
fcmovbe
fist
and
sahf
push
pop
add
push
bound
jnp
inc
aam
jp
mov
ret
dec
dec
sahf
test
shr
inc
jl
mov
fbstp
dec
dec
(bad)
mov
dec
add
and
mov
adc
imul
test
dec
mov
mov
(bad)
lea
hlt
call
dec
pop
movs
(bad)
and
enter
lahf
out
jp
(bad)
aaa
ss
adc
mov
fiadd
fadd
adc
fld
rcl
add
enter
data16
js
cmp
sub
mov
shr
pop
mov
sbb
xchg
dec
pop
js
dec
addr16
ins
scas
loopne
stos
jg
lahf
add
inc
jno
mov
dec
sbb
dec
test
or
pop
cmp
rcl
pop
aaa
mov
test
fwait
clc
retf
push
xor
dec
wbinvd
daa
xchg
mov
das
es
scas
ins
dec
sub
sbb
cmc
out
stos
in
stos
push
cmp
icebp
and
mov
mov
jne
jmp
inc
in
sub
mov
loop
scas
ins
lods
add
js
test
adc
jbe
add
xchg
push
les
(bad)
jmp
imul
mov
jp
mov
mov
push
pop
mov
rol
xor
ins
sub
lock
sti
mov
sub
pop
sub
test
pop
dec
fwait
mov
retf
xchg
shl
lds
sub
sahf
clc
add
pop
pop
mov
stc
in
data16
inc
jmp
inc
imul
pop
inc
mov
cld
loop
jns
add
fcom
jnp
outs
or
pop
xchg
imul
xor
in
pushaw
test
inc
xor
dec
in
jmp
stos
inc
lods
pop
and
mov
adc
call
push
and
(bad)
repnz
xor
pushf
mov
test
jle
test
inc
icebp
imul
add
(bad)
(bad)
jnp
adc
push
scas
push
bsr
inc
or
add
mov
rol
fcomp
mov
xchg
add
mov
scas
adc
mov
sahf
ficom
sbb
in
dec
arpl
loopne
sahf
stos
ds
sub
add
in
sub
shr
inc
sbb
addr16
lods
dec
dec
jb
sbb
push
xchg
mov
fmul
dec
add
mov
or
mov
cmps
pop
mov
out
ss
loopne
cmp
(bad)
jecxz
stos
mov
cwde
out
in
bound
call
push
add
lods
loop
int3
call
dec
mov
scas
mov
dec
sar
push
daa
jmp
mov
jge
inc
mov
popf
in
mov
dec
jae
pop
std
push
mov
sub
pop
fcomp
imul
pushf
add
pushf
push
rcl
jg
adc
jae
pusha
mov
out
test
(bad)
mov
loopne
and
sbb
pop
pop
daa
sub
leave
mov
inc
cwde
loope
push
inc
jle
cmp
cmps
mov
mov
pop
sar
jo
inc
dec
push
push
gs
push
jae
iret
std
adc
sbb
mov
cmc
pop
in
lahf
fcmovb
or
mov
fbstp
es
inc
mov
adc
pop
stos
dec
aad
rcl
hlt
adc
in
into
shr
dec
punpcklwd
xchg
movs
pop
ret
dec
int
arpl
cmp
cli
pop
mov
sub
mov
mov
inc
mov
loop
ins
sti
mov
scas
mov
ficomp
sbb
or
sbb
mov
ins
ins
(bad)
ficom
push
call
and
jle
mov
sub
rol
mov
fist
lds
cmp
js
sub
in
cmps
ins
sahf
out
sbb
pop
cmc
sbb
inc
aad
and
jae
and
jl
xchg
sbb
push
shl
push
std
arpl
repnz
scas
shl
lock
xor
jg
sbb
inc
and
xor
int3
fcomi
mov
adc
xchg
pushf
dec
sub
push
adc
jmp
dec
sub
cld
out
or
frstor
ds
popf
cmp
fs
cld
sub
popf
cmp
daa
sbb
call
mov
dec
ja
inc
xor
add
inc
dec
dec
inc
shr
push
bound
bound
xlat
dec
dec
(bad)
xchg
loopne
adc
faddp
fwait
in
icebp
mov
fld
outs
sti
daa
xchg
in
mov
addr16
adc
arpl
(bad)
add
in
test
add
cmp
sbb
adc
push
mov
jmp
lea
inc
jle
ins
cld
mov
xchg
mov
iret
push
mov
ds
in
cmc
xchg
(bad)
ins
xchg
jmp
push
adc
sub
mov
shl
pop
fsubr
cmp
mov
inc
int3
mov
fbstp
push
dec
aaa
xor
callw
popa
mov
pop
pusha
stos
loopne
pop
aas
les
xchg
(bad)
hlt
xor
(bad)
fst
cmp
aas
pop
mov
pushf
fnsave
and
sub
adc
pop
div
push
mov
into
jg
adc
ins
mov
jle
pushf
and
dec
and
push
pop
pop
loop
ss
pop
(bad)
neg
bound
mov
add
aaa
pop
jo
pusha
(bad)
cmp
inc
jge
dec
xlat
fs
sbb
outs
fistp
fimul
xchg
and
popa
xchg
cwde
enter
sar
rol
xchg
jb
mov
xchg
imul
fiadd
push
fucompp
pop
sub
dec
lods
push
int3
pop
dec
push
push
xchg
movs
out
pop
pop
pop
sahf
in
inc
and
scas
test
adc
int3
out
add
sbb
int3
popf
aam
push
push
push
push
in
jno
adc
jmp
mul
mov
sbb
sbb
shr
pop
lods
fnstenv
mov
loopne
idiv
and
add
mov
sub
fadd
scas
push
sbb
xchg
mov
jne
mov
push
scas
lods
daa
pop
pushf
ret
inc
mov
rcr
les
pop
sub
js
mov
js
std
mov
test
push
cs
cmp
mov
cli
mov
and
stc
lods
les
dec
add
neg
push
pop
xchg
iret
xchg
jno
jb
jne
(bad)
mov
aas
pop
in
push
xchg
push
stos
int3
leave
xor
ror
push
mov
inc
dec
ror
sbb
pop
inc
pop
sbb
cdq
push
and
(bad)
(bad)
cmp
pushf
inc
inc
adc
pop
jnp
push
jge
inc
(bad)
retf
in
stos
xor
push
test
add
out
test
repz
fnsave
pop
or
loop
jae
ret
or
bound
pop
mov
pushf
cmc
pop
loopne
sar
into
sti
push
xlat
pop
call
test
adc
lahf
cmp
aad
loopne
adc
and
and
(bad)
loop
mov
inc
xor
sub
add
rol
out
mov
sbb
mov
sub
and
es
push
jmp
daa
sar
adc
adc
mov
mov
clc
pop
pop
and
dec
ror
pop
mov
mov
add
or
sti
pop
mov
cmp
ror
dec
jno
ins
add
aam
retf
dec
ins
sbb
ins
fldpi
les
ficom
jmp
fcom
ins
pop
pop
bound
aam
and
mov
pop
dec
xor
dec
sahf
pop
push
mov
cmp
icebp
test
xlat
dec
push
stos
popa
xchg
adc
stos
ins
fistp
aaa
movs
popa
inc
aad
cmp
shr
xchg
jmp
dec
loop
ja
aas
xchg
push
mov
mov
xor
xor
shl
xchg
retf
mov
dec
sbb
ret
cmp
std
mov
out
mov
sub
xchg
mov
mov
xchg
and
push
dec
rol
sar
sbb
sbb
mov
repz
mov
add
popf
jbe
fild
sub
push
shl
and
sar
pop
mov
mov
sti
out
dec
cmp
rcr
push
nop
adc
mov
sbb
lahf
push
pop
repnz
ror
sbb
movs
pop
aam
pop
addr16
sub
fistp
xchg
retf
loopne
ret
sub
pop
ror
fnstcw
outs
pusha
sub
cwde
lea
or
dec
push
push
mov
test
mov
loopne
push
fsub
lods
(bad)
popf
je
in
dec
repz
popa
cwde
loopne
add
pop
aaa
fmul
std
and
aam
jne
loope
ret
jecxz
popf
ror
daa
pop
push
cwde
(bad)
js
pop
xchg
popf
mov
(bad)
loopne
jl
aad
fmul
or
lods
and
call
dec
fisttp
cmp
jp
fnsave
push
dec
fldenv
fstp
adc
mov
not
adc
sbb
loopne
sub
add
sbb
push
jmp
cmp
ror
pop
mov
or
addr16
fwait
jmp
and
(bad)
mov
add
das
jbe
adc
icebp
add
inc
fdiv
inc
and
jl
mov
test
inc
(bad)
jp
cdq
mov
out
jb
pop
sbb
es
cmp
inc
mov
pop
mov
push
push
cmc
jb
mov
sbb
(bad)
imul
mov
and
gs
mov
div
out
rol
mov
sbb
lods
jae
sahf
test
loope
movs
pop
push
jmp
loope
addr16
pushf
pop
pop
or
mov
dec
jb
dec
mov
cld
push
lahf
mov
(bad)
add
push
in
sahf
ds
pop
sub
mov
rcr
in
adc
pop
mov
in
sub
mov
out
ins
dec
lods
mov
les
pop
sbb
cmp
movs
xchg
inc
adc
ds
(bad)
nop
pop
jge
ins
push
adc
arpl
cmp
inc
ds
cmp
icebp
out
pop
jne
add
js
not
sbb
push
jmp
ret
push
push
push
and
dec
jp
xor
mov
dec
fcomp
inc
pop
add
pop
imul
mov
and
mov
dec
gs
iret
sbb
(bad)
xor
(bad)
pop
aad
sbb
test
aad
mov
mov
fidivr
daa
push
pushf
xchg
inc
fwait
or
retf
sub
pop
and
cmp
ins
ror
pop
mov
mov
xchg
cmps
adc
in
lock
movs
mov
in
push
and
arpl
aam
add
inc
int
pop
xor
sub
dec
and
scas
adc
adc
jnp
and
inc
daa
dec
sbb
inc
test
out
fstp
dec
jb
test
out
mov
hlt
push
mov
cmps
add
cs
or
pop
gs
jg
pop
inc
mov
adc
stos
ins
inc
inc
push
movs
inc
mov
mov
and
mov
mov
jge
fs
nop
fwait
test
jg
int
stc
push
push
mov
rep
xor
sbb
sub
cmp
imul
jno
imul
ds
push
cs
jo
shr
test
sub
jmp
stos
jl
push
dec
ja
cmp
loopne
jns
call
cmps
mov
dec
shr
stos
fisttp
or
push
loopne
movs
push
xlat
dec
xor
fistp
jmp
call
mov
push
mov
push
adc
inc
cwde
xchg
sbb
rol
mov
std
xchg
mov
lds
dec
push
sub
mov
xchg
int3
jo
in
xchg
dec
xor
mov
mov
xor
dec
mul
mov
fs
add
mov
movs
out
push
lea
pop
jp
popa
pop
arpl
push
mov
cmp
dec
sbb
(bad)
daa
ret
xor
inc
cmc
mov
add
dec
int
cmp
rcl
imul
ins
push
adc
mov
pop
pop
fiadd
sbb
inc
push
in
scas
inc
xlat
sub
or
sbb
and
movs
lods
rcl
daa
jp
dec
sbb
inc
inc
adc
es
in
inc
xchg
movs
loop
int3
jmp
mov
sub
sahf
(bad)
adc
test
sub
xor
cmp
cmp
push
bswap
not
call
mov
mov
pop
nop
iret
xchg
fcomp
rol
jmp
push
dec
mov
idiv
mov
sbb
or
cmps
pop
call
sar
push
and
sub
dec
pop
sub
(bad)
xchg
dec
stos
fcomp
push
lds
add
pop
call
mov
lock
aam
jno
xlat
mov
je
sbb
push
add
jl
aad
dec
repz
out
(bad)
adc
sub
jmp
aas
stos
into
xchg
test
dec
sahf
mov
add
sub
or
xlat
push
loopne
mov
or
and
cmp
jmp
fbstp
sbb
imul
dec
jbe
cmp
cmps
sbb
jb
loope
in
js
dec
pop
mov
mov
inc
cmp
push
je
leave
sub
pop
(bad)
jbe
dec
fdiv
leave
sub
ja
outs
addr16
pop
fwait
jl
cld
mov
mov
sbb
ins
xor
sub
mov
or
sti
adc
mov
mov
cld
cli
push
add
inc
ror
xchg
pop
icebp
cmps
ret
mov
popa
fbstp
or
loopne
sbb
dec
rcl
test
rol
aam
sbb
sbb
and
call
add
sub
sbb
push
xchg
outs
jnp
arpl
pop
xor
cmp
out
adc
sbb
mov
push
test
shr
xor
jmp
aam
retf
lods
mov
inc
pop
(bad)
mov
dec
push
mov
mov
rcl
xchg
sub
sbb
pop
fistp
xchg
push
aad
int
pop
test
and
lahf
es
mov
pop
or
fsub
cmps
push
push
fs
push
sbb
pop
jo
cmps
sbb
cmp
shl
mov
pop
ror
lods
and
popf
or
or
mov
pop
sub
jmp
mov
dec
or
addr16
(bad)
(bad)
outs
mov
in
(bad)
nop
lahf
mov
loopne
dec
xchg
mov
inc
xchg
lods
aam
loopne
and
ret
mov
jne
sub
jecxz
dec
rep
sbb
and
pcmpeqb
inc
fwait
les
enter
mov
inc
iret
test
lods
mov
push
pop
sbb
dec
mov
and
xor
pop
and
xor
push
sbb
dec
ins
or
xchg
push
mov
or
es
cmp
dec
adc
xor
div
aam
add
in
xchg
pushf
lock
xchg
cmp
rcl
ins
cwde
sahf
push
shl
mov
fcmove
push
pop
lock
mov
mov
cmp
test
xchg
or
mov
cs
xchg
push
cmp
adc
xor
pop
loopne
loopne
adc
jno
ins
sub
mov
push
adc
movs
out
nop
push
pop
arpl
cmps
push
cwde
cmps
cmp
sbb
push
jge
repz
cdq
pop
mov
cmp
stc
add
cmc
int3
sbb
scas
cmps
rcl
jg
mov
and
cmp
adc
popa
sbb
inc
imul
mov
(bad)
bound
dec
inc
dec
sbb
xchg
and
jle
push
sahf
xchg
arpl
mov
sub
pop
cmp
repnz
sbb
adc
xor
ds
sub
push
inc
mov
sbb
ss
mov
push
sub
mov
(bad)
xor
push
dec
imul
inc
mov
push
sahf
rcr
dec
cmc
or
fild
test
cmp
push
mov
xchg
xchg
movs
mov
sbb
lahf
in
test
sub
adc
xor
xor
jmp
pusha
fst
xchg
jbe
fwait
mov
cmps
fwait
pop
mov
push
mov
dec
mov
addr16
mov
sbb
shr
add
shr
scas
movs
xchg
pop
xlat
push
ds
int3
shl
test
and
scas
xchg
mov
cld
enter
(bad)
idiv
inc
pusha
je
adc
rol
jp
ins
xchg
inc
shl
sbb
add
add
arpl
in
int3
dec
pop
sub
adc
shl
push
rol
(bad)
call
mov
sbb
jnp
mov
push
loopne
ret
sub
mov
push
addr16
cmps
lea
or
iret
pop
loopne
mov
lahf
fsubr
push
push
cld
xor
fnop
les
cmp
(bad)
neg
inc
or
pop
out
mov
mov
stos
push
cli
shl
loop
sti
jne
mov
fs
dec
inc
les
xchg
xchg
mov
stc
mov
push
in
nop
jge
inc
pop
dec
ins
clc
ret
repz
inc
les
nop
add
add
or
dec
jnp
rep
pop
push
pop
mov
fisttp
add
push
pop
jmp
in
int
dec
sbb
sbb
dec
scas
bound
mov
(bad)
dec
dec
pop
mov
mov
or
es
ret
fild
cmp
sbb
lock
rcr
xchg
and
movs
pop
fild
movs
push
mov
jg
fmul
ins
retf
arpl
cmps
xchg
jmp
adc
fisttp
mov
push
mov
mov
nop
test
jmp
pusha
mov
outs
jge
(bad)
out
fimul
adc
loop
pop
aam
daa
dec
sbb
outs
adc
idiv
push
mov
or
mov
leave
xchg
jne
pop
jg
or
sub
dec
call
pop
push
mov
inc
inc
scas
test
stc
xchg
(bad)
push
mov
mov
rol
fbstp
mov
inc
xchg
repz
lock
fmul
retf
imul
mov
shr
ret
add
cmp
push
loopne
pop
data16
mov
dec
pop
int3
mov
in
int
ret
mov
imul
cs
cmc
test
ror
mov
or
shr
scas
mov
xchg
jp
repz
xchg
(bad)
imul
xchg
les
xor
and
xchg
cmp
pop
scas
sub
mov
push
dec
(bad)
xchg
arpl
push
sub
dec
xor
out
ds
jmp
jl
shl
enter
cmp
sub
bound
jno
add
fsubr
mov
clc
aad
arpl
test
push
fld
mov
push
aaa
test
and
test
mov
sbb
and
sub
fs
cmp
pop
xchg
cmp
stc
js
mov
mov
mov
adc
cmp
fdivr
push
not
jbe
or
mov
xlat
cmovs
push
sub
je
fs
sbb
push
inc
pop
inc
out
jg
inc
mov
stos
pop
jl
or
mov
(bad)
cli
enter
xor
arpl
cmp
jmp
aam
cmp
dec
push
hlt
stos
jnp
std
add
call
push
aaa
sbb
dec
fnstenv
call
push
sub
sti
nop
pop
cli
mov
push
ror
sbb
pushf
inc
inc
dec
inc
inc
adc
shl
cmps
retf
xchg
jecxz
cmp
adc
test
adc
sub
inc
cld
fwait
dec
push
mov
pop
jmp
and
jecxz
sbb
fild
mov
test
gs
xchg
mov
dec
bound
pop
mov
jnp
inc
or
nop
xchg
pushf
pushf
pop
push
push
fist
clc
rcl
sub
popa
adc
xchg
ss
fsubr
fidivr
sbb
(bad)
jl
loope
aad
sbb
shl
xchg
stos
cwde
retf
push
iret
sbb
rcl
test
xchg
std
outs
lock
outs
movs
mov
mov
mov
ins
and
xor
jmp
push
ror
dec
sub
aad
loopne
or
les
aam
retf
add
add
enter
dec
das
(bad)
cld
sti
mov
mov
retf
es
dec
push
movs
jbe
and
rcl
jecxz
iret
scas
in
mov
inc
mov
sbb
sbb
scas
in
pusha
aam
or
adc
sbb
aam
leave
fxch
pop
cvtdq2ps
xchg
fwait
xchg
cmp
fldcw
rcl
sbb
cmp
fwait
mov
push
out
and
aaa
mov
xor
inc
out
ror
jle
jmp
adc
add
int
cmp
mov
cmp
push
pop
push
lods
lock
ds
jnp
jnp
pop
std
pop
ss
adc
outs
pusha
ins
push
adc
sub
not
cmps
inc
lea
pop
push
mov
lock
jo
dec
gs
shr
(bad)
xor
cmp
scas
fnsave
call
sbb
arpl
fldcw
jge
and
bnd
mov
pop
ss
and
in
mov
mov
jl
loopne
sbb
adc
xchg
stc
jge
jnp
mov
or
sub
mov
mov
dec
jnp
mov
mov
mov
push
jo
jb
add
cmp
fist
aaa
mov
scas
test
inc
cmps
sub
inc
mov
out
and
imul
xchg
cmp
cmp
loope
cmc
mov
sub
in
jae
mov
xchg
cs
mov
test
cmps
out
pop
std
adc
iret
(bad)
imul
fdivrp
cmp
rcl
jle
add
and
add
mov
mov
xchg
mov
sbb
dec
add
inc
pop
retf
xchg
push
addr16
sbb
sbb
dec
adc
cmp
sub
loope
rcpps
pop
sbb
dec
push
popf
test
ins
mov
xchg
lods
ds
aam
pop
popa
ins
pop
loopne
imul
out
lahf
adc
nop
mov
mov
push
repnz
push
cmp
ret
xor
pushf
not
les
xlat
shl
aaa
and
cdq
fst
sbb
addr16
push
inc
jge
or
sub
mov
ja
push
xchg
mov
jb
sub
ds
mov
bound
sbb
icebp
xchg
loop
fisubr
idiv
and
in
rcr
jb
jbe
sbb
mov
sub
into
jae
dec
and
mov
or
jnp
(bad)
sahf
inc
push
mov
cmps
pop
mov
sbb
enter
sbb
idiv
push
cld
rol
dec
add
dec
mov
daa
(bad)
xor
pop
xchg
xor
enter
pop
inc
ror
mov
mov
or
fcomp
pop
dec
cmp
scas
aaa
pop
cmp
pop
xchg
jle
neg
std
aad
loopne
(bad)
xor
jle
fisub
ins
and
aam
test
repz
push
sbb
imul
mov
mov
dec
pusha
and
aad
or
shl
mov
cdq
jge
les
sub
cmp
sahf
push
and
xchg
xor
xor
pop
xchg
dec
cmc
jne
mov
retf
mov
adc
push
cmp
sub
outs
daa
stos
inc
sub
jns
(bad)
fdiv
or
or
jmp
mov
mov
or
push
push
mov
dec
jnp
sahf
dec
push
dec
pop
add
enter
aad
repnz
mov
mov
pushf
cmp
push
repz
xchg
in
in
popa
fimul
aam
movs
fldcw
rcr
and
pop
je
movs
xlat
ds
mov
ja
outs
int
sahf
xlat
ret
adc
(bad)
mov
push
ja
outs
cli
adc
pop
mov
imul
xchg
fisub
ret
popf
arpl
call
pop
jecxz
dec
jle
inc
xchg
push
add
mov
icebp
fdivr
pop
and
out
sbb
loop
ja
xor
dec
pop
call
pop
leave
ror
in
dec
div
cmp
inc
cld
scas
adc
pop
movs
daa
call
dec
data16
hlt
arpl
fnstenv
or
xchg
je
fadd
add
xlat
scas
popa
arpl
mov
add
mov
(bad)
outs
mov
xchg
mov
(bad)
sub
push
sub
add
dec
gs
sub
(bad)
cmp
retf
int3
mov
mov
sbb
inc
es
and
scas
aam
out
(bad)
(bad)
lea
xchg
inc
arpl
jp
test
fwait
xor
adc
stos
mov
aaa
cmp
pushf
movs
cmp
mov
lods
jbe
jl
xchg
mov
pop
fsubr
cmp
sub
dec
aam
pop
and
aaa
pushf
dec
pop
repz
pushf
addr16
mov
jmp
adc
(bad)
mov
sbb
dec
ja
mov
jnp
loope
fbstp
ror
jl
add
(bad)
aaa
mov
(bad)
cwde
aad
in
xchg
push
push
dec
pop
cmp
pop
mov
vcvttss2si
bnd
xchg
(bad)
xchg
loop
sbb
mov
lods
sub
jno
and
das
or
dec
pop
(bad)
addr16
mov
(bad)
loopne
ins
mov
jae
add
gs
sahf
and
cmc
sub
mov
(bad)
pop
imul
push
push
mov
push
or
repz
sbb
(bad)
stos
fld
std
adc
xchg
cli
jmp
repz
fsincos
inc
sbb
and
push
adc
mov
scas
pushf
pop
ret
push
jno
out
jne
inc
xchg
inc
inc
xor
xchg
in
lods
dec
js
ins
xchg
cs
popf
ins
mov
test
cmps
ffreep
pushf
sub
mov
dec
adc
retf
mov
inc
arpl
jbe
mov
xor
mov
retf
inc
pop
ret
jp
and
sbb
pop
sbb
lods
popf
pop
add
adc
push
out
fidivr
int3
mov
cmp
jl
(bad)
into
mov
sbb
cmp
cmp
cli
mov
ins
sahf
pop
mov
mov
stos
mov
test
aam
(bad)
sub
outs
or
xchg
addr16
mov
pop
fst
daa
out
sub
cli
push
outs
out
fdivr
push
cmp
fstp
dec
es
jge
(bad)
(bad)
repnz
jg
loopne
pop
push
jl
ins
hlt
inc
(bad)
pushf
sbb
inc
cwde
sbb
fcomp
fadd
adc
mov
push
ins
xor
jmp
test
mov
mov
cmp
shl
sub
mov
or
rcr
xor
fcomp
xor
add
push
nop
fwait
add
imul
cmovbe
les
jmp
adc
mov
push
mov
add
jmp
cmp
out
sub
enter
movs
push
shr
push
addr16
mov
lahf
mov
pop
inc
retf
sahf
inc
mov
mov
jg
mov
sar
(bad)
and
mov
pop
jge
outs
mov
aad
and
or
call
mul
push
ja
mov
fiadd
jo
cmc
sti
push
fucomip
and
pushf
(bad)
mov
cld
dec
mov
in
xor
out
cmp
addr16
in
push
bound
stos
retf
sub
idiv
mov
mov
mov
xor
xor
push
xchg
(bad)
push
sbb
sub
pop
add
ror
cmp
add
(bad)
adc
sbb
cmp
push
add
cld
and
or
fwait
cmps
mov
out
retf
mov
jmp
addr16
aas
xchg
and
add
mov
xchg
jb
or
inc
jg
cmp
les
add
jle
jl
dec
add
icebp
dec
or
jne
(bad)
daa
add
and
stc
pop
mov
arpl
and
ja
ret
push
pop
mov
mov
xor
pop
jl
or
mov
mov
jb
add
add
inc
movs
fcom
cs
mov
mov
fadd
cmps
rol
jbe
dec
xchg
jecxz
sbb
mov
mov
cmp
outs
repz
fstp
ret
sub
sbb
push
repz
clc
shl
and
mov
ja
mov
sub
xchg
or
lods
cmp
and
cwde
pop
mov
pop
sahf
inc
ins
jg
lods
push
pop
pop
sbb
sbb
dec
or
(bad)
mov
and
popf
xchg
dec
(bad)
and
fld
xchg
rol
adc
rcl
stos
cmps
test
nop
push
rep
sar
inc
mov
cli
ds
cmp
sub
shr
and
cmp
pop
sub
mov
lods
push
inc
mov
popf
data16
inc
xor
xor
inc
sbb
into
dec
nop
pushf
adc
xor
(bad)
pop
jno
test
test
sub
adc
fdiv
daa
cmp
xchg
lds
adc
in
retf
sbb
(bad)
int
repz
inc
cld
retf
call
cmp
icebp
ds
lea
mov
in
dec
iret
inc
pop
scas
lea
jae
daa
sub
mov
popa
pop
test
xor
shl
nop
test
pop
jge
fcom
fld
pop
data16
(bad)
or
ins
sub
adc
aas
int3
xchg
sub
in
mov
cmp
adc
stc
les
clc
ins
ins
jnp
cmp
sbb
sub
sub
add
xor
lods
aaa
xor
mov
loope
push
repz
dec
push
out
jbe
push
sub
adc
out
popa
neg
jmp
mov
push
mul
int
nop
mov
ds
fimul
int
push
cmp
jmp
sub
pop
notrack
push
inc
repnz
into
push
jnp
dec
cmp
dec
lock
dec
jns
lock
add
adc
sbb
out
sub
pop
jecxz
and
sub
add
xchg
loop
mov
push
pop
push
push
jle
pushf
cmp
and
sbb
mov
cmps
xor
pop
sub
mov
mov
push
lahf
push
dec
mov
pop
jo
push
ror
push
ins
stos
adc
cmp
jnp
pop
sub
jle
loop
shl
jno
loop
(bad)
xchg
and
dec
jnp
fistp
push
mov
out
mov
int3
push
sbb
mov
pop
cmps
or
push
lahf
scas
shl
adc
push
push
push
mov
mov
nop
mov
pop
dec
sbb
test
stc
jmp
aaa
xor
mov
movs
push
push
icebp
dec
mov
dec
pop
out
sub
mov
dec
sbb
rcl
arpl
and
enter
push
sbb
sbb
xor
or
fimul
sub
adc
daa
add
push
push
loopne
popa
cmp
xchg
rcr
adc
jl
jp
jmp
and
cmp
jb
aam
xchg
inc
or
or
or
rol
cmp
ins
sets
loop
ror
jp
dec
jae
je
pop
mov
lods
inc
int
popa
gs
gs
outs
or
or
jmp
mov
das
pop
mov
mov
xor
out
mov
mov
mov
inc
push
es
mov
(bad)
mov
xor
cmp
nop
dec
and
xchg
aaa
sar
sbb
push
loopne
pop
mov
xor
rcl
pushf
push
jo
jg
fidiv
lock
gs
iret
sub
dec
sbb
ss
hlt
ja
fiadd
jne
pushf
mov
mov
lock
loopne
imul
addr16
cmp
fcos
dec
imul
jl
cmp
aam
cmps
sbb
mov
leave
fstp
push
adc
jle
(bad)
pushf
dec
(bad)
gs
addr16
add
movs
ja
mov
mov
pop
inc
mov
dec
pop
in
push
lahf
jp
xor
fisttp
lds
out
push
mov
out
and
addr16
mov
int3
adc
(bad)
cmp
sbb
inc
cmp
sahf
arpl
aam
into
arpl
jg
sar
(bad)
ins
xchg
push
add
mov
dec
daa
dec
and
inc
xchg
outs
inc
(bad)
cld
into
cwde
xchg
inc
cwde
shr
jmp
xchg
mov
aam
mov
(bad)
adc
cmp
fcomi
cli
mov
mov
call
jp
ror
imul
in
aam
sub
rcl
push
imul
or
not
push
dec
xchg
lods
fcomp
jg
xchg
iret
and
aad
leave
and
js
jae
push
dec
sbb
je
xchg
dec
xor
mov
lahf
sbb
es
popf
jmp
cmps
fst
loop
sub
in
mov
and
and
adc
or
pop
xor
sbb
sar
push
hlt
mov
addr16
sbb
mov
mov
aam
xor
jae
pop
xor
shl
pop
jl
pop
in
test
sub
push
retf
push
arpl
pushf
(bad)
or
cld
test
rcl
sub
test
into
pop
add
retf
push
sub
mov
inc
cwde
dec
pop
mov
add
jmp
nop
movs
rcr
out
or
xchg
gs
lea
fistp
adc
jnp
cmps
addr16
xor
push
mov
scas
jg
mov
pop
shl
xor
xchg
jmp
sbb
mov
arpl
lock
in
fdiv
add
pop
icebp
xlat
pop
pop
push
nop
lock
frstor
or
push
jo
mov
sti
or
pop
call
mov
inc
sbb
adc
xchg
sahf
clc
or
jne
sbb
data16
sub
sti
sub
jno
inc
fisttp
shr
xchg
cwde
adc
out
push
or
mov
hlt
push
pusha
add
dec
int3
mov
pushf
stos
inc
adc
and
jg
adc
outs
outs
mov
neg
jbe
push
aam
xchg
sub
push
push
fst
push
sti
int3
sahf
dec
pop
xor
scas
test
in
(bad)
mov
pop
and
ror
or
push
sub
imul
inc
push
xchg
popa
(bad)
cs
or
aaa
test
push
nop
add
xchg
movs
ret
rcr
les
push
ds
push
pop
clc
leave
fist
pop
xchg
cli
(bad)
jmp
and
push
stc
jbe
fidiv
stos
push
ins
int3
add
dec
std
mov
xchg
(bad)
shl
mov
test
mov
lods
jae
dec
inc
push
ins
dec
xchg
pop
icebp
dec
lea
enter
xor
cmps
ins
dec
stos
cli
sbb
push
mov
shl
ror
push
sbb
fadd
push
mov
call
and
leave
(bad)
inc
ins
jg
mov
jo
lock
inc
int
cmp
mov
jae
addr16
push
pop
add
sub
xchg
push
or
sub
lods
sub
jne
dec
jno
imul
jae
(bad)
mov
les
add
xchg
in
pop
xchg
(bad)
(bad)
adc
sbb
inc
adc
adc
mov
inc
mov
rol
lds
stos
arpl
sub
cld
sti
xor
aas
xchg
lock
and
mov
mov
pop
aaa
cmps
jb
pop
inc
out
mov
(bad)
mov
(bad)
nop
sbb
in
cmc
mov
cs
xchg
push
daa
push
jmp
dec
dec
rol
sbb
push
sub
sbb
out
dec
scas
fs
es
inc
inc
mov
add
test
pop
pop
push
adc
jns
lahf
and
loope
retf
push
xor
pop
lds
mov
imul
mov
aaa
xchg
fld
enter
div
adc
rcr
and
loop
lahf
xchg
test
iret
adc
push
xchg
fld
cwde
mov
add
loope
xlat
inc
pushf
and
lods
fisttp
pop
sbb
mov
stos
sar
mov
scas
xchg
and
enter
out
pushf
sub
pop
pop
mov
mov
out
push
xchg
push
jp
fwait
mov
push
adc
dec
cmp
ins
outs
mov
adc
or
lock
daa
mov
dec
push
in
or
inc
cmp
adc
mov
fincstp
test
xchg
leave
sahf
cmc
mov
jmp
je
cs
rol
dec
int
in
adc
lahf
mov
adc
or
out
fisttp
fdivr
pusha
leave
(bad)
jp
cwde
mov
scas
lock
imul
pop
pop
into
adc
popf
xor
in
inc
shl
sbb
sti
dec
cmp
neg
xchg
jmp
into
inc
jnp
push
pop
xchg
shl
cs
iret
sbb
lds
mov
xchg
xchg
mov
push
outs
push
push
pop
or
mov
iret
lods
lods
dec
fcmovnbe
pushf
dec
mov
sbb
enter
jmp
dec
outs
inc
sub
daa
ins
dec
pop
stos
fwait
sub
add
inc
stos
xchg
(bad)
and
cs
addr16
adc
mov
jo
out
mov
mov
inc
(bad)
(bad)
cmp
in
cmovle
push
mov
stos
pushf
adc
pop
stc
mov
sub
or
fs
dec
daa
mov
movs
fs
sub
leave
push
cld
mov
jno
lods
mov
sub
pop
sbb
inc
in
jl
xchg
stos
in
pop
data16
xor
ss
dec
(bad)
mov
sub
xchg
jb
lahf
xchg
xor
out
lds
add
repnz
jbe
(bad)
lods
rol
(bad)
pop
dec
jg
jg
mov
outs
jbe
and
pop
push
inc
bsr
lahf
and
inc
add
and
push
dec
push
(bad)
push
aad
ins
add
sbb
adc
in
aaa
retf
icebp
cmp
mov
fcom
cmp
call
std
cmps
mov
lods
popf
jl
mov
ins
adc
dec
stos
fs
mov
push
mov
xchg
xchg
je
fidivr
shl
leave
xor
fsubr
jle
pop
mov
jns
dec
xchg
mov
int3
add
mov
cmps
fnstenv
hlt
mov
and
jg
lods
inc
mov
shl
loop
iret
cmp
pushf
aam
sub
mov
dec
call
fnstenv
sub
pop
pop
loop
pop
push
xor
sbb
cmp
iret
xlat
push
inc
ja
sbb
push
dec
pop
pop
cld
ins
enter
xchg
or
push
mov
adc
and
pop
sbb
repz
imul
cs
sbb
cmp
mov
mov
inc
mov
jmp
adc
mov
shl
sbb
dec
or
mov
mov
xor
cmp
push
jge
inc
(bad)
test
jp
ins
mov
sti
mov
out
mov
imul
jae
mov
lea
fcmovnbe
imul
and
sbb
xchg
sbb
cwde
popf
or
ja
adc
mov
sbb
sub
out
fmul
and
std
pushf
repz
int3
or
push
cmp
jnp
movs
sub
xchg
in
mov
popa
gs
(bad)
adc
mov
hlt
ins
int
jae
and
aas
sub
int3
jl
and
pop
mov
mov
push
jae
pop
mov
(bad)
mov
jmp
stc
ficomp
mov
cwde
cmp
enter
fadd
xchg
lock
(bad)
ins
inc
sbb
jbe
pop
dec
ror
dec
cld
test
pop
add
fnstcw
adc
mov
push
cdq
sub
test
dec
daa
mov
(bad)
pushf
pop
lea
pop
rcl
aas
mov
pushf
cmp
or
inc
pop
adc
dec
xchg
scas
outs
aam
push
in
jbe
and
(bad)
xlat
fs
sub
dec
ja
and
sub
mov
mul
or
pusha
outs
dec
dec
dec
mov
ds
out
pusha
sub
loope
pop
mov
xchg
repz
ss
lock
cmc
mov
in
(bad)
fwait
dec
inc
pop
jb
xchg
sub
mov
xchg
mov
xchg
rcr
mov
jmp
push
jmp
dec
stos
outs
and
add
and
push
xchg
icebp
pop
and
jae
stos
daa
ficomp
push
xlat
sbb
sbb
jl
xchg
mov
xlat
sub
cmp
dec
jo
test
add
fild
sbb
cmp
adc
add
dec
mov
adc
mov
pop
and
xchg
pop
in
mov
mov
(bad)
xor
or
aad
xor
xchg
sbb
test
adc
stos
fidiv
sahf
sub
pop
pop
mov
or
int3
mov
dec
and
adc
jg
xor
dec
fdiv
lea
or
add
sub
pop
(bad)
fcmovnu
pop
sbb
xchg
enter
rol
fwait
nop
inc
cmp
mov
sub
mov
xor
fwait
int3
inc
push
sub
fwait
test
loopne
loop
les
lock
push
mov
or
(bad)
pop
sub
add
int3
fdiv
ja
imul
push
sahf
ins
jmp
add
popf
scas
xchg
inc
cmp
ret
mov
stc
xor
mov
mov
inc
repz
pop
push
ffree
adc
or
nop
ja
mov
xchg
and
ret
sub
repz
in
ja
inc
(bad)
shl
add
dec
xchg
(bad)
cmp
and
adc
pusha
mov
sbb
mov
xor
or
inc
daa
mov
popf
jl
movs
push
sbb
jne
cmp
push
adc
xchg
xor
daa
cdq
lock
dec
pop
sahf
adc
loopne
pusha
push
cmp
popa
push
lds
(bad)
push
push
fcom
sti
add
mov
xchg
jp
daa
xlat
add
dec
test
lods
shl
pop
mov
cmp
cmp
xor
sub
xor
js
and
or
shl
mov
outs
xchg
xchg
fld
inc
mov
lahf
arpl
fmul
imul
pop
sub
je
and
cmp
shl
jnp
pop
and
stos
mov
cmc
stos
adc
aad
inc
out
mov
ret
add
or
bound
xchg
push
pop
(bad)
loopne
pop
clc
mov
inc
mov
xchg
arpl
dec
adc
js
cbw
xchg
ins
fsave
jne
push
fld
jno
dec
or
push
push
sar
and
jmp
loope
test
retf
sub
jno
push
mov
pop
cmp
lods
mov
sub
sbb
sbb
cli
jmp
mov
inc
test
aad
shl
xchg
push
aaa
sub
mov
xor
in
sahf
cmps
sbb
xchg
loope
cld
or
sub
mov
pop
cmp
stos
or
sub
(bad)
out
ja
fwait
lds
inc
cmps
call
ins
pop
jns
mov
jmp
and
mov
inc
sbb
mov
push
(bad)
mov
arpl
adc
(bad)
test
jge
mov
scas
dec
pop
fsubrp
retf
cdq
shl
shl
xor
or
cmps
push
div
adc
dec
jo
dec
addr16
inc
jb
jnp
xor
int3
mov
mov
mov
(bad)
mov
gs
in
(bad)
sub
xlat
xlat
imul
pushf
lds
call
stos
stos
mov
fsubr
call
jbe
push
inc
dec
jle
dec
gs
xchg
out
push
sbb
cld
xor
mov
clc
rcl
out
mov
loope
cmps
jae
inc
cmps
dec
pushf
add
retf
add
(bad)
push
mov
mov
rcl
dec
pop
(bad)
cmp
(bad)
inc
gs
push
pop
call
pushf
and
lods
pop
mov
cmps
mov
in
mov
test
jns
add
or
push
and
shl
push
aam
repnz
lahf
xchg
mov
or
xor
dec
inc
mov
sar
or
jnp
cld
adc
cmp
inc
xor
aas
xlat
or
addr16
sub
mov
adc
cmp
call
add
(bad)
push
mov
repnz
aas
cmp
cmp
call
lahf
in
faddp
rcr
les
retf
mov
pop
dec
and
jge
xlat
in
shl
jp
sbb
mov
les
dec
sub
(bad)
jmp
pop
pop
pop
aaa
sbb
arpl
cmp
int3
jno
cli
lods
ror
dec
(bad)
fild
or
lock
sub
push
je
in
sbb
adc
int3
aaa
push
pand
and
add
xchg
adc
mov
call
in
cmp
leave
xor
sbb
pop
daa
fnsave
js
pop
adc
jg
pop
pop
push
in
ret
mov
xor
and
pushf
mov
cmp
and
out
pushf
pop
xor
add
xor
push
sbb
test
sbb
jae
add
xlat
push
gs
ret
jno
pop
or
ror
dec
mov
cmp
inc
cdq
pop
int
into
pop
xchg
dec
adc
cmp
cmp
push
jle
pop
into
(bad)
imul
es
sub
pop
mov
mov
gs
lahf
xchg
cmp
xor
cli
(bad)
xlat
push
adc
(bad)
fcmovnu
mov
push
dec
sub
nop
scas
loop
sub
in
sbb
jo
ja
stos
fidiv
out
imul
mov
inc
sbb
push
dec
in
dec
add
jne
div
pusha
xor
xor
ficomp
imul
outs
pop
jns
jge
mov
lock
movs
xor
sub
cmps
xor
test
fldcw
fwait
xor
popa
es
push
outs
jmp
lods
pop
push
cmp
cmp
cmp
push
mov
dec
ret
(bad)
pop
inc
mov
das
lock
dec
push
repz
jmp
pop
and
push
mov
sbb
push
(bad)
scas
shl
shr
cmp
loopne
addr16
push
in
cmps
aas
cwde
clc
lds
or
mov
sbb
jge
cs
add
push
mov
leave
enter
dec
and
mov
dec
mov
jno
fadd
dec
iret
inc
cmp
rcr
push
sbb
jl
pusha
cwde
mov
sub
stos
xchg
sub
fwait
adc
adc
sbb
movs
test
pop
stos
lahf
pop
out
mov
ret
jecxz
add
adc
pop
scas
loop
outs
jo
mov
mov
(bad)
(bad)
fisubr
nop
cli
cmc
sbb
nop
sub
pop
ins
pop
mov
(bad)
stc
jl
pop
inc
jns
push
in
xchg
std
mov
pop
jl
loopne
add
xor
sub
xor
aas
test
and
es
scas
aam
lods
jbe
into
test
sbb
enter
(bad)
lods
mov
mov
out
rol
adc
jge
ins
dec
jecxz
sbb
push
arpl
sub
jge
xchg
and
and
(bad)
ins
sbb
and
fs
inc
addr16
xchg
test
retf
pusha
add
push
test
xor
not
jbe
cmp
pop
mov
movs
stos
fstp
dec
cmp
inc
and
addr16
retf
sbb
cmp
xchg
fchs
jp
add
inc
jne
movs
ror
std
jle
scas
ja
cdq
pop
out
ins
shl
in
sahf
lods
fcmove
in
adc
nop
push
jle
jl
mov
pusha
out
and
aam
aas
add
mov
outs
mov
push
pop
hlt
icebp
mov
in
or
je
pop
cmp
mov
pusha
in
addr16
mov
out
sbb
dec
(bad)
int
mov
rcpps
xchg
neg
sbb
fimul
fcomp
inc
inc
sub
dec
neg
pop
dec
xor
icebp
popf
cmps
shl
arpl
inc
mov
cwde
xor
push
mov
push
pop
mov
int
mov
dec
mov
int3
cdq
jmp
lahf
mov
shl
jno
idiv
push
sbb
mov
aam
xlat
in
or
ins
dec
or
sub
sbb
das
in
mov
dec
aam
xor
int
or
xor
adc
out
shr
lea
xor
mov
sub
mov
xor
mov
fidiv
mov
dec
int3
mov
js
push
div
jmp
mov
femms
jmp
pop
inc
xchg
test
sub
pusha
and
or
or
mov
jl
xchg
pop
fdiv
fld
int3
sbb
jo
ret
in
mov
pinsrw
ins
out
pop
fisttp
aam
imul
adc
cmp
(bad)
jo
jne
push
mov
push
sub
into
iret
icebp
adc
mov
mov
je
mov
or
pop
push
cmp
mov
fdivr
loope
mov
push
pop
xchg
mov
fdivr
cld
xor
mov
pop
sbb
in
test
aaa
xor
jno
(bad)
adc
mov
dec
js
pop
fistp
nop
inc
pop
sar
push
es
test
call
into
dec
loopne
nop
add
jno
call
adc
aas
aaa
retf
shl
adc
sti
add
mov
lahf
ins
xor
js
sub
adc
pushf
clc
stos
mov
xor
lahf
cmps
pop
xchg
sub
xchg
adc
bound
pop
rol
dec
mov
xchg
inc
mov
adc
sub
in
cmp
pop
cmp
add
daa
aaa
adc
scas
or
mov
fdiv
lds
sub
jle
loop
push
push
xchg
shl
pop
xchg
mov
lods
fistp
ss
sub
fdiv
sub
mov
xor
jo
mov
dec
(bad)
mov
hlt
cmps
stos
popa
test
jnp
enter
push
rcl
xor
add
xor
(bad)
mov
mov
xchg
xlat
int3
fs
loop
and
call
push
ds
cmp
js
pop
call
xchg
xchg
lea
pop
ss
pop
(bad)
jge
jg
adc
cmp
or
cmp
dec
push
pushf
jmp
fs
stos
pop
out
xchg
fidivr
xchg
les
pop
pop
clc
aam
(bad)
push
jmp
xchg
push
ja
fstp
sbb
and
or
push
lods
cdq
or
xor
dec
jmp
adc
in
jno
sbb
in
pop
mov
scas
cmp
cdq
shr
cld
adc
pusha
sub
fldenv
hlt
rcr
sub
popa
hlt
sub
fisubr
sbb
cmc
push
fadd
cmp
mov
sbb
mov
xchg
stos
xchg
mov
cmp
mov
pop
or
inc
dec
(bad)
std
push
popa
dec
(bad)
test
push
shl
lods
push
daa
(bad)
xor
mov
aaa
adc
rcl
add
pop
mov
xor
mov
mov
sub
(bad)
int3
mov
xchg
mov
cmp
jecxz
fcomp
div
jl
pop
sbb
out
ins
mov
add
shl
popf
cld
jp
lds
dec
mov
(bad)
(bad)
push
mov
imul
pop
cdq
fbld
xchg
rcl
jno
dec
fnstenv
aam
pop
cmps
pop
imul
push
cli
lods
iretw
jecxz
add
psraw
jae
cmp
xchg
pop
rol
cmp
fs
xlat
(bad)
int3
sub
jecxz
pop
push
hlt
int3
xor
xchg
pop
adc
stc
fst
xchg
mov
and
in
pusha
xor
lock
aaa
cwde
and
int
mov
(bad)
cld
cmp
(bad)
jnp
int
mov
fstp
xchg
ja
xchg
ds
cwde
pop
cmp
jno
mov
push
lahf
hlt
pushf
cwde
fnstenv
dec
adc
cs
lahf
ficom
mov
sar
mov
je
sar
sbb
pop
rol
dec
out
push
sahf
push
repnz
stos
xor
idiv
cmps
xchg
ret
mov
or
(bad)
and
add
test
inc
cmp
sub
sbb
cld
push
push
pop
stos
in
and
lea
push
out
pop
scas
mov
mov
push
mov
out
cmp
mov
xchg
or
jae
popf
fidiv
xchg
je
or
int3
inc
mov
mov
jno
xchg
push
xchg
xor
mov
loope
inc
dec
stos
cmc
fdivr
jbe
mov
out
sbb
int
fcomp
rcl
dec
pushf
push
rcr
and
repnz
mov
je
push
adc
jecxz
mov
add
dec
pop
and
sub
cld
push
inc
jb
fwait
(bad)
nop
xchg
sub
sub
loopne
sahf
cs
pop
retf
mov
push
and
in
mov
mov
in
(bad)
xchg
push
mov
jbe
aam
lock
push
push
pop
xor
mov
fcomip
xor
cs
inc
es
aam
js
shr
aam
fist
clc
mov
xor
into
fcom
iret
outs
aad
pop
repnz
add
sbb
test
(bad)
xchg
sbb
aas
cli
ja
cdq
nop
stos
sbb
inc
fst
lods
ret
mov
mov
pop
fmul
cmp
xchg
loope
mov
push
sub
xchg
pop
fnstcw
mov
fucomp
add
std
add
push
ja
bound
pop
cmp
call
out
mov
dec
inc
push
xchg
adc
and
adc
adc
push
sub
and
cmp
pop
adc
xchg
call
push
popf
shl
enter
fisub
jmp
adc
sbb
sti
in
enter
fisttp
ja
or
jle
xchg
(bad)
lea
xchg
xor
cmp
loop
cmc
out
movs
pop
push
test
rcl
int3
(bad)
scas
es
lods
inc
inc
ds
fcmovnu
and
dec
cmp
sub
pop
mov
push
es
adc
scas
mov
jp
jg
pop
in
lea
(bad)
(bad)
mov
push
test
push
gs
rcr
fwait
xor
pop
test
cld
leave
ja
jno
dec
xchg
pop
xchg
pusha
fstp
add
xlat
inc
sti
mov
jns
and
test
mov
adc
cmps
fisub
retf
out
mov
mov
jle
loopne
lea
push
dec
(bad)
and
jmp
fucomi
rcl
outs
fs
ja
xchg
int
pusha
dec
xlat
shl
mov
mov
sbb
(bad)
inc
scas
scas
sbb
nop
test
inc
in
in
test
mov
inc
mov
and
les
xchg
mov
out
ins
sbb
enter
fsubr
pop
cli
push
pusha
aaa
in
ins
pusha
shl
cwde
ins
add
sub
cmp
cmc
shr
int
add
arpl
push
add
int3
xchg
cli
enter
hlt
pushf
fdiv
push
mov
fdivr
add
rcr
pop
jno
jecxz
popf
pop
int3
pop
ins
inc
out
(bad)
pop
cmc
push
dec
stos
pop
mov
pop
add
lahf
xor
out
ds
sahf
sub
fbld
dec
cmp
rol
pop
mov
enter
push
imul
jecxz
pop
(bad)
lea
inc
cld
pop
push
ins
xlat
fistp
fwait
aam
jnp
push
mov
and
pop
sbb
gs
ins
sahf
sbb
dec
adc
push
dec
(bad)
shl
iret
sbb
pop
nop
mov
xbegin
loop
mov
cmps
test
pand
xchg
jbe
pusha
sahf
daa
lods
adc
(bad)
jl
jmp
rcl
mov
not
std
ja
mov
dec
loopne
jle
sub
xchg
movs
sbb
jp
loopne
xor
cmp
jp
mov
mov
inc
stos
std
adc
add
sar
jnp
jno
adc
adc
and
cdq
idiv
in
aas
out
retf
and
xor
shl
cmp
gs
lods
and
mov
ficomp
aad
ror
jmp
sub
rol
cmp
jns
xlat
or
mov
pop
pop
xor
fwait
mov
mov
daa
push
retf
mov
sub
outs
mov
pop
push
pop
mov
mov
test
pop
adc
outs
pop
sbb
mov
pop
jnp
mov
cmp
sbb
inc
popa
xchg
and
dec
or
int
bound
push
jg
(bad)
repz
fcom
mov
or
add
in
push
ins
inc
mov
pop
add
(bad)
in
cdq
xchg
(bad)
cs
mov
push
inc
fimul
inc
lock
dec
xlat
fwait
pop
jecxz
dec
xchg
jo
addr16
outs
mov
jg
js
out
push
lea
jg
pusha
mov
cmp
cmp
mov
pop
outs
lods
arpl
and
mov
(bad)
dec
or
mov
lock
mov
dec
das
adc
idiv
daa
dec
push
(bad)
in
mov
enter
cdq
mov
sub
jmp
xchg
xor
sbb
mov
inc
inc
cmp
loope
sub
inc
mov
cmp
imul
cmp
pop
loope
inc
or
cld
in
pop
and
movs
enter
jl
cdq
cmps
push
aad
pusha
imul
(bad)
fwait
and
scas
outs
sub
or
dec
std
and
(bad)
test
push
pop
fmul
dec
inc
aad
push
mov
sub
mov
ret
clc
in
jmp
sub
std
out
jae
neg
ins
loope
jnp
fst
adc
mov
ret
jbe
icebp
sub
fdivr
adc
dec
xor
cmp
push
push
mov
fild
int
cli
inc
loope
jnp
loop
adc
retf
aas
push
dec
aam
cmp
push
jecxz
mov
movs
mov
mov
mov
sub
out
scas
lock
ja
sar
cmp
nop
es
jge
shl
push
in
mov
lds
and
dec
(bad)
mov
lea
dec
pop
cmp
sub
aas
push
inc
adc
mov
sub
mov
(bad)
out
inc
jb
pop
pop
inc
pop
sbb
fidiv
dec
out
cmps
jge
inc
jne
xchg
loope
stos
fwait
out
jno
in
cmp
jmp
mov
sub
mov
or
xchg
mov
cmp
jne
inc
mov
cli
cmp
aas
mov
not
push
dec
cmp
push
les
xchg
inc
sub
pop
daa
nop
ficom
stos
mov
inc
pop
push
fisubr
mov
pop
dec
or
push
push
int
ret
dec
pushf
xor
cmc
in
cdq
jge
test
jnp
(bad)
enter
jnp
sub
xchg
fnstsw
jnp
inc
dec
push
out
(bad)
arpl
sbb
sub
fsub
add
xchg
cs
mov
call
push
int3
push
fcmovu
cli
pop
mov
es
mov
out
test
xlat
cld
(bad)
push
sbb
je
jmp
es
mov
push
shl
pop
push
clc
mov
mov
lds
xor
adc
push
fld
and
(bad)
ja
setle
fnstenv
sbb
cmp
mov
out
std
jmp
div
(bad)
in
sahf
cmp
pop
int3
jo
mov
xor
jns
ins
cld
xchg
push
int3
je
push
mov
aas
out
jle
loop
into
in
ins
and
add
jp
push
retf
out
sbb
jge
jmp
nop
xor
scas
push
(bad)
sub
pop
in
loope
mov
sub
xchg
pop
stc
cwde
or
mov
ins
test
pop
inc
and
sub
add
sub
shl
inc
cmp
inc
pop
inc
add
(bad)
pop
inc
test
mov
ja
(bad)
out
leave
aaa
or
mov
retf
sbb
out
bound
lock
pushf
adc
inc
in
loop
sbb
add
adc
push
aaa
pop
loopne
loop
daa
mov
xchg
stc
mov
(bad)
out
or
in
in
sub
mov
adc
scas
mov
jl
enter
out
sbb
imul
sbb
aam
sbb
sub
mov
rcr
mov
push
push
sub
fmul
jo
les
cmps
fs
out
imul
(bad)
aaa
and
sbb
in
pop
mov
push
(bad)
xchg
mov
add
imul
push
sbb
fcomp
cdq
int3
push
lahf
je
pop
in
jne
sbb
shl
dec
jl
xor
fild
lock
into
rcl
or
sbb
lea
test
frstor
out
loopne
push
loopne
loope
stc
in
pop
sbb
push
ja
sbb
leave
sar
pop
jno
add
(bad)
(bad)
enter
add
stc
adc
dec
dec
leave
jp
(bad)
mov
cmps
shl
pop
icebp
pop
xchg
iret
push
cwde
mov
jg
ss
pop
fadd
(bad)
jae
mov
cli
jne
fisubr
test
adc
dec
dec
fld
cmps
inc
sub
inc
inc
jbe
call
sbb
push
mov
fstp
rcl
jg
mov
(bad)
inc
pop
dec
sbb
stos
les
idiv
mov
pop
xor
and
cli
int3
stos
mov
inc
loope
mov
retf
aaa
mov
leave
dec
or
mov
add
gs
rcr
push
jmp
mov
mov
imul
mov
ror
xchg
mov
xlat
xchg
sbb
jge
je
ret
stos
pop
ficomp
cmp
sub
addr16
xchg
jbe
inc
mov
jle
mov
out
(bad)
push
jl
out
mov
inc
cs
int3
inc
adc
and
aaa
inc
adc
xor
add
in
(bad)
xchg
adc
sti
inc
sti
fwait
pop
xchg
sub
cmp
call
jb
jmp
mov
sbb
int
lock
stos
hlt
xor
xchg
sub
mov
mov
push
fcom
sbb
loop
mov
and
cld
aas
(bad)
nop
gs
fld1
adc
mov
add
test
adc
(bad)
cmp
outs
out
call
and
stc
jnp
jnp
sbb
sbb
jp
int
ror
mov
loopne
adc
dec
fld
retf
mov
int3
fwait
mov
rcr
loopne
jge
pushf
sbb
adc
nop
adc
(bad)
pop
nop
push
push
inc
push
sbb
popa
js
jbe
sar
iret
ror
push
mov
dec
shr
and
mov
sub
or
js
mov
jne
in
aas
push
cmp
dec
sub
sub
fld
pop
js
sbb
sub
clc
cmp
mov
nop
xchg
xchg
or
inc
fstp
ds
iret
pop
push
retf
mov
js
out
cs
push
inc
mov
nop
scas
out
icebp
aad
not
push
xor
inc
xchg
imul
loope
sbb
xor
jl
rol
fld
jb
(bad)
pop
lock
popa
inc
loopne
sar
stos
pushf
cmovae
aad
(bad)
cld
sub
pop
mov
sar
mov
mov
mov
add
in
add
inc
sahf
cmp
mov
imul
rcr
fild
or
push
xchg
sbb
out
lock
mov
xchg
cdq
jge
inc
push
mov
loop
pop
(bad)
test
js
hlt
or
or
xlat
jmp
gs
sub
mov
xor
dec
test
outs
ins
inc
shr
jbe
into
ret
stos
pop
ins
jb
pop
push
push
dec
in
inc
repz
(bad)
dec
mov
sub
push
adc
int3
es
jl
(bad)
xor
imul
mov
xchg
sbb
mov
cmps
push
push
fist
xchg
imul
push
out
push
mov
xchg
inc
fst
vhsubps
in
rcr
mov
ror
mov
cmc
sbb
pop
shl
ins
mov
into
jge
mov
xlat
ja
adc
adc
nop
loop
mov
loopne
ins
dec
mov
test
popf
pop
fild
and
fdiv
std
push
(bad)
call
popa
cmp
pop
add
es
fist
ror
scas
cmc
pushf
sub
xor
das
call
bound
(bad)
xor
fisub
inc
add
add
mov
sbb
dec
mov
loop
xchg
in
inc
loop
or
push
pop
xchg
mov
xor
lods
inc
push
(bad)
cmps
jmp
mov
dec
cmp
stos
test
dec
addr16
mov
loopne
pop
inc
xchg
push
loopne
pop
push
fwait
cdq
daa
fwait
in
int3
add
cmp
cli
add
dec
or
int3
test
dec
mov
imul
pop
mov
mov
movs
stc
shl
pop
sbb
stos
dec
dec
rcr
lods
fcomp
push
into
inc
cli
mov
outs
sti
call
cmp
stos
adc
jae
in
je
mov
sbb
idiv
loopne
inc
das
mov
jl
(bad)
xchg
shl
adc
mov
gs
dec
xor
ja
les
or
sbb
mov
int
inc
ficomp
lock
dec
fist
add
jno
pop
arpl
add
cmovl
mov
pop
cmp
clc
sahf
dec
or
int3
push
sbb
outs
ret
sub
adc
mov
aaa
ds
(bad)
mov
pop
sub
inc
cmp
jle
add
cdq
sub
js
xor
outs
push
scas
fcomi
jmp
adc
xlat
push
test
xchg
cwde
popf
mov
(bad)
fidiv
push
inc
mov
mov
mov
cmp
pusha
or
push
dec
push
mov
push
mov
jns
aam
in
mov
int3
inc
lods
sbb
aad
test
mov
jnp
sub
jo
stc
or
nop
jno
ins
clc
shr
(bad)
sbb
inc
ins
jl
daa
push
ds
popf
or
xlat
inc
fs
or
dec
add
mov
jge
sbb
cmp
je
lahf
dec
in
(bad)
dec
imul
int3
int3
popf
cdq
sbb
stos
mov
sbb
scas
aas
rol
pop
cli
movs
xor
add
scas
add
push
sbb
scas
test
mov
pop
sbb
mov
or
movs
mov
pushf
mov
jno
mov
jo
cdq
sbb
mov
hlt
cmps
in
hlt
dec
div
into
leave
push
mov
mov
lock
jp
push
test
jmp
popf
pop
fild
sar
sbb
mov
sbb
fucomi
stos
pop
stos
or
std
aam
mov
sbb
sub
fiadd
pop
jp
mov
push
ret
fidivr
jnp
lods
shr
mov
pop
mov
inc
pop
dec
clc
test
dec
jge
push
outs
cld
push
mov
cs
inc
add
jo
and
test
push
out
mov
mov
loope
and
cmp
loopne
xchg
push
sbb
loopne
mov
dec
(bad)
fistp
pushf
xchg
lods
fs
sar
shl
loop
mov
cs
and
pop
jno
pop
fs
(bad)
out
inc
fidiv
loop
ret
cmps
leave
push
pop
ins
xor
cs
pushf
jge
adc
stos
xor
scas
add
ins
loope
mov
imul
sar
stos
sbb
out
hlt
adc
mov
mov
push
xor
xor
fidiv
sub
dec
cmp
xor
cmp
pop
int
test
jns
ja
pop
xchg
fisttp
hlt
and
jle
sub
scas
xchg
cmp
jmp
push
pop
add
adc
aam
xchg
cmps
xor
push
xchg
add
sbb
inc
fucomi
mov
adc
test
js
loop
int3
pop
pop
or
push
lds
mov
aad
arpl
aam
pop
stos
cmp
push
std
dec
in
dec
mov
outs
cld
cmps
(bad)
popf
nop
dec
cdq
mov
push
mov
dec
push
push
add
dec
sbb
ficom
push
popf
pop
inc
sbb
fdivr
call
icebp
jmp
js
lahf
inc
out
fwait
adc
dec
lds
(bad)
call
mov
pop
adc
ja
ror
sub
dec
adc
jge
aad
dec
push
jge
mov
bnd
mov
cld
dec
scas
int
xchg
mov
or
add
aam
daa
repnz
xor
mov
test
rol
adc
sub
iret
int
lock
imul
repz
or
test
and
fstp
pop
xchg
je
sub
ret
or
ret
fild
sbb
cmps
xor
and
mov
fdivr
std
dec
mov
dec
bound
push
xchg
sti
xor
into
pushf
enter
sbb
dec
(bad)
das
lea
dec
loopne
jl
icebp
lods
mov
sti
bound
ror
inc
lock
dec
cmp
or
sahf
(bad)
pop
cmp
push
bound
push
sbb
in
add
fimul
movs
in
add
fwait
push
add
inc
cld
iret
mov
xchg
push
fwait
mov
mov
mov
arpl
add
idiv
cmps
jne
cmp
rcl
mov
pop
adc
jae
fist
ret
retf
add
xor
cmp
ja
adc
cdq
dec
popf
(bad)
xor
ffreep
dec
jg
xchg
repnz
add
jmp
sub
mov
pop
popf
test
jnp
mov
inc
out
cmp
sbb
addr16
xor
and
sbb
xor
ss
or
push
nop
ja
pop
dec
cli
es
dec
call
(bad)
aas
add
pop
sbb
and
dec
jmp
inc
mov
pop
jmp
mov
test
add
mov
ins
shr
sbb
add
xor
push
xor
mov
mov
sbb
push
je
in
sahf
jb
imul
in
shr
xchg
cmp
cdq
jl
adc
add
fld
push
adc
cld
jne
adc
ins
mov
loopne
or
mov
in
pop
stos
ins
xchg
and
fisttp
(bad)
xchg
imul
out
sbb
inc
and
push
sbb
add
in
and
pop
stc
cmp
add
addr16
scas
ror
sbb
or
dec
call
out
(bad)
xor
jno
loope
pop
inc
xor
jnp
dec
or
push
lods
xor
ror
in
scas
mov
mov
les
scas
fidivr
cmps
lods
retf
mov
xchg
pop
lds
imul
add
jmp
adc
adc
out
pop
push
sbb
add
mov
icebp
lea
jnp
js
push
push
(bad)
aad
push
jle
adc
push
mov
mov
into
cs
jl
and
or
ror
push
mov
xchg
cs
inc
cmp
enter
stos
retf
(bad)
inc
mov
and
inc
xchg
clc
add
fisub
data16
dec
cwde
(bad)
push
fistp
mov
cs
jnp
xor
nop
in
cld
xchg
daa
pushf
xchg
icebp
cmp
test
addr16
mov
xlat
fidivr
lods
sar
push
pop
dec
sub
adc
ror
popa
dec
inc
sbb
add
dec
mov
pop
pop
mov
cmp
add
popa
and
jmp
mov
pop
das
loop
xchg
and
or
pop
loopne
dec
pop
test
mov
fild
mov
rcr
jg
fbld
xor
call
xor
pop
or
pop
rcl
push
push
int
or
xor
jno
sub
push
push
ja
push
xor
pop
xchg
adc
mov
add
retf
xor
dec
pop
push
test
sub
xor
push
cmp
aad
les
or
cmp
je
inc
and
arpl
ror
mov
pop
inc
xchg
lea
shl
xor
dec
jno
jne
lea
inc
movs
or
ins
stos
or
in
scas
(bad)
aaa
inc
jns
repnz
pop
bound
cmc
xor
jb
cwde
adc
xchg
mov
pop
jle
sbb
adc
in
jno
fwait
daa
push
xchg
retf
mov
adc
movs
jmp
mov
xchg
inc
push
pop
jmp
sbb
or
and
pop
fisttp
mov
ins
jb
mov
mov
sbb
mov
aas
cmp
add
cmp
adc
daa
xchg
fs
xchg
jae
mov
in
push
pop
pop
push
ret
ja
out
or
arpl
pop
int3
push
in
or
(bad)
mov
(bad)
loopne
cs
sub
loope
sub
push
adc
mul
mov
in
xor
sub
dec
dec
fisub
pop
or
sar
test
in
push
jnp
mov
mov
loop
mov
dec
jp
mov
inc
or
iret
mov
ret
loopne
sbb
jmp
sar
dec
pop
jmp
(bad)
push
test
(bad)
lahf
jecxz
mov
lock
dec
inc
arpl
out
(bad)
js
pop
add
dec
sti
mov
inc
push
mov
push
or
cmp
mov
mov
mov
lahf
fisttp
in
int3
push
retf
rcl
(bad)
iret
(bad)
push
cdq
daa
adc
mov
popa
jge
test
jo
push
dec
(bad)
(bad)
xor
and
out
inc
dec
mov
stc
cwde
dec
xchg
mov
sbb
out
add
pop
jne
movs
cmc
xchg
mov
xchg
pop
add
ins
test
aas
and
shl
cmp
movs
sbb
retf
push
mov
jl
jmp
fwait
int
xor
cmp
aaa
lock
cmp
push
clc
jmp
pop
dec
fiadd
sti
sbb
add
fcom
or
dec
or
push
lahf
xlat
(bad)
jmp
push
addr16
xor
sbb
mov
mov
xor
lods
sbb
in
sbb
cmp
retf
popa
adc
sbb
add
movs
mov
(bad)
jecxz
nop
push
fidiv
or
adc
sbb
hlt
outs
xor
mov
ror
loope
ds
pop
lock
pop
clc
jmp
mov
xchg
data16
add
push
leave
fisttp
xlat
scas
in
out
lods
stc
std
jmp
mov
sahf
xor
mov
(bad)
int
push
fcmovu
add
retf
(bad)
test
dec
iret
dec
js
cwde
inc
fadd
addr16
ja
ja
aam
in
mov
xchg
in
gs
add
jnp
pop
dec
daa
xor
lahf
or
sbb
int
or
jle
jae
cmps
cmp
inc
xchg
jno
mov
in
leave
mov
jo
push
mov
sbb
lahf
pop
cli
test
mov
repnz
test
cld
pop
xor
sub
dec
mov
rol
pop
add
les
dec
jne
scas
leave
jne
cwde
dec
movs
inc
(bad)
(bad)
or
leave
xlat
outs
mov
sub
mov
or
push
fbld
fist
fs
and
add
clc
xchg
sbb
outs
outs
and
add
neg
and
dec
mov
fimul
(bad)
xchg
jae
(bad)
aam
sub
js
arpl
pop
sbb
in
aam
daa
loopne
test
clc
adc
xor
mov
pop
xor
jne
call
in
mov
jmp
pop
mov
jmp
leave
mov
inc
rcl
test
push
ins
pushf
int
jge
jmp
mov
stc
rcl
or
gs
xchg
out
sbb
push
lods
outs
mov
int3
add
call
hlt
scas
les
int3
cmc
mov
das
cmp
push
and
cmp
fdiv
aas
xorps
sub
mov
pop
cmps
jg
and
pusha
cmps
imul
hlt
or
add
jg
cli
outs
rcl
or
cs
iret
sbb
cmp
sub
out
test
scas
ficom
bound
push
adc
push
ja
mov
dec
es
inc
rcr
jnp
xlat
push
aad
mov
pop
and
and
and
xlat
(bad)
and
push
aam
stc
mov
call
(bad)
mov
xor
mov
cmc
jge
inc
jo
cs
or
cmp
xchg
adc
repnz
cmp
mov
mov
sub
enter
scas
or
fst
dec
sbb
loop
ret
movs
or
in
and
dec
(bad)
popf
sahf
mov
push
gs
jbe
dec
xchg
cmp
push
int3
jge
lock
jb
sbb
fwait
push
bound
dec
(bad)
mov
addr16
sub
xchg
ret
hlt
test
or
pop
cmp
dec
in
fst
or
mov
bound
jbe
sbb
jl
pop
push
pusha
sub
sub
jle
sub
dec
adc
dec
and
loope
xor
add
jecxz
and
out
sbb
dec
cmp
call
out
retf
pop
cwde
stc
pop
xchg
and
fs
gs
add
mov
pop
in
inc
loopne
add
and
mov
retf
push
add
xchg
aas
xor
(bad)
mov
sub
dec
xchg
sbb
pop
je
ds
fcomp
push
mov
(bad)
adc
inc
xor
or
dec
or
push
(bad)
pop
push
pop
into
dec
daa
mov
cli
pop
imul
sbb
sbb
pop
adc
jae
into
pop
popf
add
frstor
mov
aaa
ja
xchg
aam
push
outs
aas
movs
daa
popf
ds
pusha
stc
icebp
data16
mov
inc
or
inc
xor
xchg
mov
(bad)
adc
pushf
(bad)
mov
push
fwait
ss
cmps
sbb
dec
push
adc
or
pop
push
fst
pop
movs
lock
dec
sbb
stos
inc
fwait
mov
ror
aaa
popf
cmp
enter
fbstp
or
pop
xor
mov
add
ins
cmp
cmps
pop
aam
push
pop
xor
ins
cwde
pop
sub
ins
and
xor
(bad)
fucomip
jmp
xchg
xchg
ins
sbb
dec
mov
sar
aaa
dec
fcom
loope
push
pop
xchg
gs
shr
xor
shl
les
mov
pushf
les
jbe
jp
rcr
mov
push
idiv
gs
pop
mov
xchg
jne
sub
mov
aam
ins
push
imul
lock
test
dec
inc
fisttp
sub
jnp
aad
cmp
clc
jae
and
cs
jbe
and
(bad)
mov
dec
jp
ins
push
imul
lods
arpl
cmp
(bad)
sar
(bad)
dec
mov
pop
in
sahf
push
add
sbb
xchg
cs
and
adc
sub
mov
shl
ins
cld
fsubr
sbb
mov
cdq
adc
hlt
cmp
shl
pop
or
clc
sub
lahf
cmps
adc
pop
pop
jmp
ror
xor
outs
loopne
mov
mov
jne
add
xor
inc
mov
mov
mov
sar
out
or
push
aam
cs
icebp
add
pushf
dec
std
cs
loopne
jmp
dec
int3
push
mov
ret
jb
push
cs
rcl
into
sub
cdq
push
cs
pop
mov
outs
arpl
pop
fucom
xchg
pop
(bad)
mov
gs
mov
aas
xchg
mov
push
add
cmp
cmps
iret
stos
and
mov
jne
pop
mov
xlat
fwait
mov
(bad)
inc
fsubr
std
imul
xchg
imul
xor
lahf
hlt
xchg
inc
or
jnp
mov
push
adc
xchg
jge
int3
ins
xor
push
mov
pop
call
dec
sbb
nop
in
sahf
and
dec
xor
inc
int3
lea
push
lock
icebp
mov
sbb
xlat
stos
aam
lods
retf
(bad)
lods
inc
xlat
popf
inc
cmp
mov
pop
mov
or
fs
inc
fild
jnp
cmp
dec
pop
mov
retf
jecxz
ficom
mov
mov
ins
cmps
xchg
inc
imul
fst
push
(bad)
scas
test
adc
adc
jo
movs
dec
and
adc
lds
add
shl
jns
push
popf
es
cld
xor
pushf
jne
xchg
mov
inc
adc
retf
fs
popa
mov
cmovl
mov
sar
fdiv
add
push
mov
pop
out
pop
dec
aas
aaa
addr16
xor
imul
pop
jae
pop
dec
enter
lock
or
cmp
dec
cwde
out
pop
jmp
daa
dec
xchg
fcmovbe
aaa
mov
int3
icebp
out
jae
loopne
aaa
mov
movq
sub
pop
int
inc
and
dec
mov
jne
repz
retf
inc
(bad)
push
pop
int
daa
jno
pop
loopne
pop
push
push
mov
jl
or
lods
inc
ret
(bad)
mov
(bad)
cmps
pop
mov
pop
cmp
bound
loope
add
mov
sub
es
xor
push
lock
test
xchg
sbb
push
cmp
pop
sbb
inc
outs
xchg
mov
les
(bad)
jl
fistp
jp
inc
mov
push
jno
xor
adc
add
fidivr
aam
scas
pop
je
test
sub
fwait
cmp
sbb
pop
pop
dec
push
stos
(bad)
or
nop
clc
xor
xor
out
fsub
cmp
cmp
neg
fimul
outs
dec
addr16
xor
dec
(bad)
xor
push
inc
jge
jge
inc
(bad)
cmps
rcl
test
ror
dec
pusha
push
xor
and
fwait
dec
pop
outs
call
jecxz
or
fisubr
loop
rcl
or
mov
adc
cld
cwde
jbe
push
push
jb
cmps
aas
js
shl
dec
scas
ffreep
inc
and
cmp
inc
mov
nop
ss
push
(bad)
dec
xchg
out
mov
in
jle
inc
(bad)
xor
(bad)
push
(bad)
lahf
dec
scas
jb
jne
pop
inc
mov
jbe
and
mov
sub
mov
pop
xchg
pop
mov
rol
in
test
pop
add
inc
fdiv
cmp
(bad)
int3
push
mov
pop
fisttp
(bad)
jg
mov
or
rcr
jno
cmps
ins
adc
inc
inc
call
and
xor
dec
aad
lea
adc
(bad)
mov
rcl
mov
cld
dec
aas
loopne
sub
xchg
mov
sar
arpl
cwde
sbb
iret
dec
fstp
ret
inc
dec
jl
jno
ss
push
add
add
fdiv
push
imul
pop
mov
imul
xor
out
aaa
test
ja
(bad)
mov
and
daa
sar
push
imul
dec
xchg
jmp
shl
mov
mov
mov
sbb
pop
sub
sbb
inc
dec
loop
jmp
loop
sub
loop
push
mov
add
ret
xchg
mov
push
pop
and
pop
adc
push
lds
mov
inc
and
mov
pushf
push
lds
pop
pop
sub
(bad)
xor
dec
pop
shl
push
repz
or
or
mov
je
aaa
jge
(bad)
inc
jg
rcl
push
stc
call
and
mov
push
les
dec
das
sbb
call
jnp
adc
mov
retf
inc
stos
(bad)
push
mov
or
sub
(bad)
out
cmps
push
push
mov
sbb
aam
pop
(bad)
ss
loopne
sahf
dec
cdq
inc
jecxz
push
mov
dec
xor
call
mov
rcl
out
push
jno
add
cmps
inc
icebp
pop
(bad)
and
adc
mov
sub
lods
dec
push
xchg
shl
out
cmp
aaa
jne
mov
mov
mul
add
and
pop
sub
or
in
cwde
loope
push
mov
mov
mov
ins
sub
mov
sub
pop
inc
out
jmp
push
aam
inc
movs
enter
dec
push
cmp
icebp
bnd
mov
lock
rol
cli
test
ds
shl
and
loop
jo
adc
int3
cmps
mov
or
jnp
mov
and
jle
(bad)
jle
sbb
cmp
in
mov
or
sbb
sbb
clc
xchg
cwde
rcr
push
jl
mov
xchg
ror
mov
mov
inc
lahf
mov
adc
cdq
and
ret
add
push
cmp
sub
pop
ret
sub
xchg
or
lods
sub
xor
push
sub
pop
cmp
in
sbb
mov
jb
add
iret
mov
aas
mov
pusha
inc
xchg
cli
fs
cs
add
popw
daa
jo
mov
retf
loop
fwait
adc
pop
mov
adc
sar
neg
mov
add
movs
dec
test
xchg
stos
xchg
mov
fs
inc
mov
fs
hlt
or
xlat
or
jns
fwait
ds
mov
in
adc
call
std
sbb
inc
push
js
shr
mov
xchg
and
gs
dec
and
fidiv
sti
pop
cmp
cmps
jl
fisttp
xchg
sub
and
les
jecxz
sti
jbe
mov
mul
pop
xor
jno
pop
stc
push
rol
jle
ins
or
inc
(bad)
push
inc
pop
push
aam
das
xcrypt-cfb
cmps
and
pop
div
jne
mov
sub
scas
push
cmp
sub
jl
out
shl
in
loopne
sub
aam
add
loope
nop
cmp
inc
js
mov
les
lds
fcom
and
(bad)
rcl
inc
nop
xor
mov
int
sbb
sub
jne
outs
adc
shl
xor
jg
push
mov
adc
push
xchg
fadd
xor
xchg
test
push
mov
sub
cmp
mov
jle
aam
iret
and
mov
add
or
loope
ror
mov
push
lods
(bad)
fdiv
shl
nop
jle
neg
mov
mov
and
ins
sub
inc
int
out
fidiv
mov
push
push
jmp
std
pusha
nop
inc
in
cmp
jae
cmps
rcr
add
xchg
rcr
xchg
fs
pop
dec
and
mov
mov
icebp
adc
jl
pop
adc
leave
out
ret
pop
xchg
inc
xchg
sub
aaa
pop
pop
pop
sub
sbb
scas
mov
out
lods
bound
lock
lock
pop
stos
retw
addr16
test
ins
sbb
in
icebp
mov
pshufw
xor
nop
jl
loopne
hlt
mov
mov
outs
cld
pop
ror
fld
mov
mov
xor
out
add
sub
push
lahf
mov
jns
nop
dec
and
pop
sub
popf
int
fstp
enter
and
push
jmp
inc
sbb
shr
xor
pushf
and
movs
in
arpl
adc
push
ret
jge
and
push
adc
ficom
pop
not
setae
xor
fsubr
push
mov
mov
pop
mov
hlt
ins
aaa
pop
xchg
jbe
sbb
ja
jmp
(bad)
cmp
fs
imul
sub
mov
inc
out
push
jb
and
inc
rol
pop
std
mov
adc
call
(bad)
pusha
call
xchg
pop
or
dec
jo
aam
push
and
cmp
and
push
scas
jp
fnsave
jge
xchg
ins
test
xchg
mov
sub
in
(bad)
stc
pop
js
scas
mov
jmp
or
jnp
jnp
inc
jbe
cdq
adc
rcl
jp
icebp
pusha
inc
in
xchg
out
xchg
int3
xor
mov
cmps
pusha
call
inc
or
(bad)
call
xor
cmc
jle
push
aas
or
pop
push
fmul
xchg
mov
movs
dec
mov
hlt
mov
pop
psraw
or
imul
push
retf
jno
stos
dec
loopne
mov
enter
int3
jmp
daa
fadd
mov
js
dec
dec
test
adc
xchg
inc
cmp
test
mov
sbb
pop
mov
pop
xor
dec
ret
dec
cmp
test
push
jle
push
jl
mov
jns
rcl
in
test
push
inc
ds
lock
cwde
in
sbb
rcl
neg
arpl
pop
mov
ds
and
(bad)
inc
sbb
mov
daa
pop
fs
(bad)
data16
mov
and
ins
ret
prefetch
push
push
fsubr
(bad)
ins
dec
inc
arpl
sub
std
pop
add
pop
pop
cmp
repnz
iret
inc
mov
mov
mov
pop
ja
inc
ins
shl
dec
xchg
(bad)
in
xor
retf
out
data16
aad
pop
scas
pop
cmp
and
lds
xlat
jae
ret
cs
pop
aaa
sbb
sar
int3
in
inc
std
adc
sbb
pushf
and
(bad)
push
test
pusha
call
sbb
pop
(bad)
xor
add
and
shl
rol
sti
mov
pop
pop
inc
aad
push
daa
adc
aaa
test
pushf
mov
pop
cmp
jmp
push
or
inc
mov
add
pop
(bad)
dec
mov
cdq
ins
pop
stos
cmp
mov
(bad)
push
lods
imul
loopne
mov
lods
mov
pop
adc
add
mov
shr
loop
ltr
(bad)
call
jle
cmp
gs
and
cmp
test
bound
push
aam
sbb
push
push
shr
sub
sahf
pop
mov
xor
add
mov
mov
jns
retf
add
xchg
and
push
mov
aas
inc
popa
xlat
shr
je
leave
xchg
mov
(bad)
sub
hlt
sbb
js
jge
(bad)
mov
shl
in
sti
inc
push
ret
adc
sub
dec
inc
test
popf
add
stos
push
pop
sbb
cmp
xor
scas
sbb
popa
jg
(bad)
dec
ins
cmp
fs
pop
push
retf
aas
mov
stc
sbb
scas
mov
loope
(bad)
mov
fbstp
dec
outs
(bad)
shl
aad
xor
out
fldcw
mov
mov
push
push
test
push
and
ds
ins
inc
and
sahf
clc
xor
xor
sbb
(bad)
jns
push
pop
(bad)
lahf
xor
mul
in
adc
cld
dec
dec
sahf
div
(bad)
fadd
add
aaa
ficomp
lea
xlat
or
cs
sti
ins
and
gs
shl
mov
xchg
pop
sub
ja
jp
push
and
addr16
cdq
bound
fimul
add
idiv
ins
movs
dec
dec
cmp
pop
push
xchg
and
lahf
pop
sahf
xchg
pop
sub
leave
jbe
dec
les
xchg
fcmovu
popf
dec
adc
bound
jnp
xor
in
sbb
inc
retf
(bad)
(bad)
dec
gs
push
aaa
push
jmp
xchg
xchg
pop
jg
mov
cdq
dec
xchg
(bad)
lds
leave
outs
push
jnp
pop
ins
cmc
cmp
push
mov
rcr
data16
and
or
imul
dec
sub
sub
pop
pop
push
loop
or
pop
mov
dec
ja
sub
pusha
aad
test
fstp
push
cmps
lea
sub
out
leave
(bad)
mov
es
mov
inc
ja
mul
scas
ja
frstor
and
add
jge
mov
sub
mov
and
jp
xchg
push
fwait
pop
add
mov
popf
(bad)
add
jno
ja
sub
ror
mov
inc
leave
aas
test
aas
(bad)
iret
mov
mov
push
and
sbb
sub
cld
stos
int3
cmp
jp
jecxz
and
pop
push
inc
sub
pop
das
pushf
jg
sub
in
mov
frstor
lahf
ins
mov
inc
test
mov
sbb
aam
lock
test
lea
lahf
mov
ins
xchg
es
arpl
in
imul
sbb
jmp
inc
sub
xchg
arpl
xor
adc
dec
int3
add
push
in
sbb
ret
push
les
jmp
dec
neg
fldcw
mov
iret
dec
and
dec
(bad)
enter
and
and
push
sar
lds
pop
xlat
icebp
call
push
sbb
ds
sub
mov
pop
lods
add
push
jmp
stos
dec
mov
add
sub
shl
dec
push
add
mov
dec
pop
idiv
dec
jl
ret
aad
enter
xor
shr
sbb
mov
cmps
jmp
mov
repz
call
mov
dec
dec
bound
add
leave
pop
fadd
push
pop
test
adc
loopne
mov
sbb
lahf
pop
pop
fdivrp
inc
cmp
add
mov
and
sbb
xor
push
xchg
out
into
in
movs
and
test
(bad)
lods
xchg
sub
adc
stos
(bad)
fld
es
add
push
mov
popa
sbb
sar
stos
jp
cmp
arpl
je
retf
and
pop
cmps
icebp
xor
lock
dec
xor
pop
mov
out
lds
fcomp
jp
jmp
dec
std
ins
cmc
pushf
xchg
inc
lock
jmp
rcr
cmc
jae
xchg
and
aam
les
push
cmc
loopne
cmp
cwde
pop
fs
sbb
adc
aam
cdq
cmp
sar
cld
pop
pushf
mov
push
add
not
inc
sbb
loopne
mov
xchg
xchg
into
pop
dec
mov
or
push
cmps
bound
mov
mov
nop
leave
pop
movs
stos
mov
fld
adc
mov
sar
stc
add
cmp
jns
fsubr
int3
sub
aas
inc
push
jae
cmps
fs
fcom
sbb
mov
in
fcmovu
dec
stos
mov
in
sub
xchg
hlt
bound
and
or
pop
cli
or
xor
cwde
dec
or
aaa
adc
adc
test
dec
xor
ins
xor
jmp
jo
mov
repnz
fadd
aas
std
arpl
ja
adc
sbb
lahf
rcl
xchg
jo
xchg
cmp
cmp
pusha
movs
adc
sub
jb
call
xchg
scas
cdq
push
adc
jnp
push
sbb
imul
(bad)
jl
fimul
in
push
sti
and
sti
es
and
leave
shl
pop
inc
lea
mov
sbb
push
xor
pop
sar
or
fild
stos
fs
in
test
dec
sub
mov
ja
(bad)
adc
push
mov
fs
pop
xchg
gs
mov
cmp
pop
icebp
mov
push
xchg
in
out
repz
(bad)
in
(bad)
pop
inc
je
or
arpl
cmp
jo
cwde
sub
mov
cmp
out
lahf
int3
stc
mov
pop
arpl
pop
cmovge
out
xlat
dec
push
retf
xchg
pop
rcr
jge
inc
mov
sbb
dec
xchg
pop
pop
push
mov
jle
(bad)
xor
jmp
pop
pop
mov
pop
lahf
dec
daa
(bad)
lock
mov
xchg
pop
jno
clc
ret
ds
shl
push
pop
push
ins
add
pushf
push
pop
or
out
inc
into
int3
and
jnp
and
jb
mov
adc
pushf
std
push
mov
xchg
pop
adc
sub
(bad)
xor
jl
out
inc
sar
es
and
(bad)
push
xchg
xor
fisub
pushf
lods
pop
cmp
cmp
add
adc
inc
cmp
sub
jge
mov
mov
jo
rcr
add
mov
push
rcr
bnd
(bad)
stos
jge
adc
push
movs
std
mov
scas
push
cmp
xchg
sub
cld
test
cld
in
cs
pop
jmp
scas
xchg
mov
mov
stos
dec
dec
inc
and
push
add
sbb
pop
jns
push
push
and
adc
ja
adc
int
rcl
mov
push
pushf
aam
hlt
and
mov
fs
add
(bad)
dec
sbb
mov
jp
out
mov
sbb
repnz
push
shl
cld
fst
lea
mov
dec
or
jne
mov
or
sahf
jno
int
sub
sub
sbb
dec
call
push
int3
imul
xchg
add
les
inc
les
sbb
mov
mov
test
mov
add
dec
cwde
outs
and
(bad)
dec
(bad)
xlat
int3
fwait
jmp
jb
mov
test
push
int
push
mov
inc
jmp
(bad)
sbb
push
add
xlat
stc
out
ret
or
push
jle
push
shl
sbb
retf
outs
jmp
inc
and
dec
mov
xor
mov
rcr
pop
push
xchg
or
clc
push
xor
fldcw
cwde
test
sbb
jne
stos
mov
push
aas
shl
sbb
xor
jmp
lock
cmp
je
push
mov
sbb
push
std
loop
leave
jg
fsub
mov
push
sbb
scas
mov
xchg
stc
pop
push
cmp
jnp
ficomp
dec
inc
adc
sub
loop
int
sub
out
fcomp
imul
loop
dec
mov
(bad)
pop
pushf
inc
call
leave
in
pop
(bad)
imul
icebp
pop
mov
inc
push
or
jbe
mov
sub
xchg
mov
je
call
into
scas
sub
imul
ja
pop
inc
lods
sahf
xlat
xchg
pop
fidiv
push
xchg
gs
fidiv
push
or
pop
int3
mov
sar
pop
cmc
or
cmp
enter
out
scas
ds
in
lds
dec
movs
cmps
adc
xor
sbb
(bad)
test
ret
fnstsw
xchg
add
jp
int3
add
cmps
scas
inc
pushf
shl
pop
pop
cmp
xchg
adc
xor
adc
inc
loop
sbb
jp
stos
or
(bad)
ja
daa
psrlq
dec
shr
cdq
mov
mov
pusha
out
sub
adc
dec
out
push
sbb
mov
push
ss
or
les
clc
enter
xchg
or
xchg
cmc
cli
cmp
inc
xchg
sub
cwde
leave
(bad)
stc
(bad)
sbb
push
jmp
push
xor
sbb
test
ror
into
fdiv
aaa
mov
loope
fst
pop
icebp
sub
sahf
imul
dec
sub
adc
jecxz
adc
push
dec
dec
popf
sbb
adc
es
add
pop
sbb
outs
xchg
sub
inc
and
mov
and
idiv
inc
aad
pop
jbe
imul
loopne
repz
or
fild
fsub
stos
mov
mov
scas
jnp
cli
mov
cld
xor
adc
loopne
ds
push
fwait
xchg
cmp
mov
xor
push
mov
cdq
and
add
nop
pop
dec
lods
cmp
pop
jg
jmp
cmp
jb
mul
xchg
sar
(bad)
lock
sbb
jg
xor
push
add
add
iret
mov
lock
std
lock
stc
jg
jmp
leave
sub
cmp
sbb
push
aas
pop
mov
and
jae
xor
(bad)
in
jle
mov
mov
and
aas
push
movs
idiv
and
pop
xchg
push
mov
push
sbb
pop
shl
shr
add
or
or
int3
pop
sbb
xchg
in
add
ds
cmp
shl
out
not
mov
push
iret
mov
or
sbb
retf
fwait
inc
daa
or
out
in
out
es
inc
ret
(bad)
popf
and
call
scas
sub
pop
js
dec
mov
adc
sub
mov
add
frndint
inc
or
add
hlt
pop
dec
rol
pop
jo
xchg
mov
(bad)
xchg
mov
loopne
rcl
xor
push
xchg
jne
inc
fsubr
inc
jle
push
ins
xchg
jbe
cmp
fild
push
jecxz
jle
imul
mov
add
jae
mov
pushf
push
stos
sbb
inc
inc
cmp
call
inc
ret
lahf
cwde
fimul
loop
imul
stos
ins
sub
mov
aam
test
xor
cmps
mov
jb
fild
dec
or
fistp
mov
xor
ror
icebp
pop
mov
fisttp
or
(bad)
xchg
cmp
push
adc
jp
(bad)
xor
push
mov
xor
mov
cmp
push
sub
lds
ja
addr16
int3
in
mov
shl
cdq
movs
xchg
in
and
mov
mov
jo
jmp
movs
mov
push
rcr
popf
mov
cmp
sar
ins
push
sub
(bad)
rcr
js
cmp
mov
or
push
and
inc
cmp
sahf
popf
iret
sbb
jnp
into
(bad)
loopne
out
xor
xor
int
xor
lea
pop
sub
int3
push
xchg
add
cmp
mov
addr16
(bad)
mov
push
test
push
mov
add
mov
retf
call
and
xchg
pop
pop
dec
push
daa
and
fcomp
mov
xor
sbb
(bad)
mov
cmp
or
shl
dec
int3
cwde
add
stos
sub
leave
pop
out
dec
ins
lods
adc
(bad)
aaa
cmp
mov
pop
dec
retf
icebp
mov
inc
mov
sub
mov
popa
ret
ja
not
jp
cmp
pop
loop
push
and
call
test
xchg
movd
adc
dec
push
cmps
xchg
dec
sbb
mov
jp
mov
cmc
ja
sbb
lods
nop
mov
fcom
adc
test
mov
cld
sti
jnp
inc
retf
and
out
cmp
dec
xchg
adc
inc
ror
adc
xor
mov
out
or
mov
mov
or
mov
call
sar
pop
lock
and
addr16
jmp
xchg
pop
inc
not
cmp
dec
in
ja
sbb
fdivr
pop
push
and
mov
sub
mov
(bad)
pop
cmp
cmp
push
mov
loope
sbb
cld
mov
lods
jns
sub
jae
jno
or
mov
dec
adc
ins
pushf
dec
inc
mov
pop
cwde
mov
sbb
mov
dec
(bad)
dec
xchg
jge
push
outs
popa
test
push
add
jp
sbb
pop
cdq
xchg
adc
das
mov
fsub
adc
mul
shl
mov
dec
or
sbb
rol
jmp
adc
mov
inc
clc
mov
cmp
stos
lods
or
mov
out
idiv
(bad)
jae
inc
pop
sub
push
stos
sbb
pop
cmc
imul
dec
mov
adc
imul
push
push
mov
sbb
jb
adc
add
mov
(bad)
mov
mov
out
pop
into
jmp
mov
int
cmp
jno
xchg
adc
mov
dec
sub
ins
pop
push
or
std
jnp
xchg
cmp
push
or
xchg
cli
mov
xchg
out
jmp
push
sub
push
fidivr
test
xor
mov
ret
loope
push
mov
jns
(bad)
cmp
jle
mov
mov
dec
push
xor
cwde
mov
dec
iret
cs
dec
mov
lahf
stos
and
adc
ret
stc
adc
es
and
lea
(bad)
outs
or
fldenv
ins
call
ss
adc
arpl
data16
pop
test
xor
and
add
push
or
daa
push
add
stc
popf
cld
enter
xchg
lods
jmp
pusha
pop
inc
mov
adc
pusha
fidiv
adc
mov
inc
sbb
xlat
call
pop
xchg
dec
iret
jecxz
dec
mov
leave
js
sub
and
ret
or
rcr
mov
push
pop
movs
aam
pop
sub
add
fnsave
mov
jne
sbb
pop
lock
repz
out
add
lds
adc
sbb
adc
fmulp
popa
xor
pop
int3
ror
stos
sub
pop
aam
xor
je
iret
popa
gs
fidiv
push
out
enter
cmp
push
pop
ja
shr
jge
pop
pop
int3
mov
sbb
inc
cmp
xchg
add
retf
jae
aad
push
mov
add
push
push
push
xchg
pop
neg
ins
fmul
inc
pop
nop
out
gs
xor
mov
dec
imul
(bad)
daa
popa
lahf
fs
fwait
sub
add
sbb
stos
xor
ja
adc
jbe
cli
pop
ins
outs
adc
pop
pop
cmps
jmp
push
icebp
test
pop
xor
(bad)
push
mov
je
popa
mov
dec
mov
add
call
jo
mov
and
xchg
pop
mov
gs
out
or
ror
fiadd
mov
push
pop
sub
scas
mov
push
cwde
fild
inc
fsubr
cmps
adc
ret
mov
js
sub
sahf
das
ror
mov
fwait
push
and
and
lods
fiadd
adc
addr16
rol
imul
fisttp
hlt
mov
sub
ds
add
dec
xor
xor
psubusb
inc
mov
loop
pusha
sbb
es
pop
outs
fcom
inc
mov
dec
shl
pop
pop
(bad)
cld
cwde
xor
movs
popf
jns
pushf
jb
cld
arpl
mov
jb
inc
adc
sbb
rol
cli
jnp
loopne
or
sub
scas
cmp
retf
mov
dec
cmp
retf
jge
cli
sti
pop
sar
sar
jmp
setge
push
js
xor
adc
mov
pop
jl
mov
enter
imul
fadd
jno
scas
inc
aaa
dec
xor
mov
push
sbb
repz
push
dec
test
adc
push
inc
xor
bound
or
retf
lds
or
sbb
pop
cdq
inc
add
xor
not
aam
mov
lock
adc
cmp
mov
out
ss
mov
push
loope
cmps
adc
aam
std
push
push
sub
inc
mov
psubusw
xchg
cmp
aaa
or
mov
cmp
imul
jp
lds
icebp
adc
cmp
sbb
test
jmp
mov
(bad)
xchg
daa
pop
rcl
addr16
les
add
dec
and
data16
cmp
cmp
or
or
pushf
(bad)
outs
pushf
in
pop
dec
xor
and
xor
dec
test
clc
xchg
xchg
dec
mov
imul
mov
sbb
aaa
aam
push
xor
aam
sub
adc
rcl
dec
scas
ret
fstp
xchg
xor
ins
lock
mov
sbb
jp
ds
out
xor
test
and
loope
out
mov
lock
jne
jmp
push
pusha
mov
add
xchg
test
jl
dec
mov
mov
push
stos
jne
test
in
(bad)
dec
sti
push
in
pop
in
int3
ss
mov
dec
scas
push
adc
pop
xchg
pop
sti
data16
mov
aam
cmps
jb
mov
jp
ja
cwde
sbb
fst
xchg
pop
aad
cmp
int3
add
pop
pop
jl
es
pop
or
popf
xchg
shl
push
mov
jno
xor
sbb
out
dec
loope
arpl
mov
sub
shl
jne
dec
fwait
add
lock
jne
pop
cmp
jmp
les
mov
inc
in
retf
rcl
sub
mov
cmp
call
add
sbb
cmp
add
shr
sbb
add
xchg
push
icebp
mov
nop
pushf
push
or
shr
imul
sbb
push
push
fcom
mov
xor
pop
cmp
or
inc
mov
out
mov
mov
push
icebp
in
ret
fisubr
addr16
fidivr
cmp
or
arpl
add
or
mov
aaa
(bad)
loopne
movs
push
outs
dec
mov
jecxz
and
loopne
popa
call
loop
add
rcr
dec
or
stc
mov
sbb
scas
pop
retf
mov
div
add
sub
sub
mov
pop
sar
mov
cmp
imul
pop
cmp
arpl
xchg
pop
rcr
push
rcr
adc
test
or
scas
adc
idiv
stos
pop
push
out
fidiv
pusha
push
test
jge
xlat
out
test
mov
fdiv
sub
int
mov
xchg
repz
pop
or
jno
or
(bad)
loopne
dec
mov
lea
fisubr
(bad)
ja
dec
push
jecxz
and
mov
pop
xchg
mov
pop
jae
jge
jb
test
scas
fdiv
sbb
dec
push
xor
ja
pop
add
(bad)
(bad)
dec
mov
adc
pop
cmc
sub
js
aad
cmp
icebp
jg
dec
lods
cmc
push
adc
pop
sub
jmp
cmps
fisttp
mov
enter
sub
ror
cmp
ret
jl
add
cli
cmc
das
cmp
sbb
fnstsw
push
sub
push
movs
stc
xor
or
pop
stos
inc
fmul
xchg
(bad)
push
fcmovb
push
movs
out
push
je
add
les
retf
fimul
mov
jmp
pop
fs
pop
imul
pusha
cmp
hlt
arpl
mov
test
mov
dec
pop
cmp
imul
repz
lods
sbb
mov
add
lods
ds
ins
pop
push
imul
adc
int3
and
std
xchg
dec
lods
dec
cs
mul
enter
fwait
sahf
pop
lock
add
mov
xlat
mov
push
ja
(bad)
xchg
xor
adc
push
dec
mov
pop
pop
or
cwde
clc
mov
add
push
js
into
adc
and
test
(bad)
icebp
xor
add
pop
pop
call
clc
jmp
nop
jo
cs
jns
pop
xchg
scas
les
ret
adc
jl
fsubr
push
fsub
push
add
fild
adc
in
rol
into
(bad)
jge
pop
popf
stos
xchg
and
sub
cmp
ror
mov
outs
loopne
fmul
fs
dec
jmp
jae
mov
mov
cmp
pop
loopne
jmp
out
adc
idiv
int3
push
inc
sbb
call
push
sahf
rol
(bad)
sar
mov
mov
mov
lock
in
and
jnp
jp
push
and
rcl
aaa
stos
jmp
in
mov
push
in
mov
ss
mov
push
push
mov
mov
jb
pop
cmps
push
or
dec
inc
imul
pop
mov
jb
nop
sub
pop
push
stos
xor
xchg
add
mov
std
fld
jge
shl
and
loopne
add
mov
sbb
or
adc
scas
mov
nop
xchg
std
mov
frstor
sbb
cmp
and
sub
call
leave
pop
xchg
mov
and
push
fldenv
jne
xor
out
call
mov
retf
push
pop
cmp
ficom
inc
cld
pop
test
cmp
sub
mov
pop
jnp
cld
arpl
repz
je
push
out
push
cli
xchg
cmp
rol
push
addr16
mov
lea
loope
fidiv
mov
pop
outs
xchg
fdiv
loopne
mov
lock
mov
in
outs
cmp
sti
mov
sahf
or
sub
ins
xor
test
dec
leave
mov
sub
mov
out
cmp
mov
sub
mov
mov
test
xchg
inc
aaa
push
adc
cwde
sub
movs
imul
and
mov
fsub
xchg
hlt
cmp
scas
les
dec
sbb
ret
int
dec
inc
mov
aam
push
inc
(bad)
and
jnp
ss
out
(bad)
pop
inc
sbb
sub
aam
pop
loop
inc
pop
sbb
daa
push
pop
rcl
inc
pop
mov
add
data16
sti
dec
adc
rol
fs
mov
push
adc
retf
mov
loop
movs
addr16
or
ficomp
and
sub
inc
test
rol
dec
push
adc
in
mov
mov
sub
add
and
(bad)
or
popa
lahf
adc
pop
xor
not
jnp
cli
es
loop
pop
sub
rol
pop
push
int
pop
mov
push
pop
aaa
test
add
pusha
xlat
mov
adc
push
cmp
adc
cli
mov
fdiv
std
retf
aas
scas
mov
push
pop
mov
push
jecxz
xlat
inc
xchg
xchg
daa
retf
mov
mul
clc
push
xor
pop
cld
xlat
movs
xor
sub
popf
mov
inc
movs
icebp
sbb
mov
out
xchg
jb
adc
mov
(bad)
in
js
fisub
lods
mov
xor
adc
xor
loopne
and
xchg
mov
imul
sbb
add
(bad)
retf
hlt
xchg
(bad)
fiadd
(bad)
pushf
js
rol
aas
dec
fst
lock
ret
pop
rol
push
dec
and
(bad)
ds
in
mov
adc
cmp
sub
rcl
jmp
push
int
int3
xchg
inc
stos
imul
imul
sbb
popa
jmp
mov
int
pusha
mov
jmp
pop
pop
mov
ror
imul
out
mov
lock
push
cmps
jno
xor
xchg
ret
mov
pop
inc
and
rcr
xor
loop
fwait
les
xor
push
scas
mov
add
fdiv
loopne
leave
dec
aad
retf
jns
mov
add
ds
mov
mov
sub
ss
xchg
lock
push
in
push
call
daa
fstp
mov
fucomp
sbb
mov
ins
sahf
push
and
mov
stos
inc
adc
ja
fild
add
pop
pop
popa
pop
out
mov
add
pop
sti
ss
jnp
cld
fsub
out
test
dec
loopne
inc
mov
iret
jmp
mov
fwait
pop
mov
(bad)
mov
jno
shr
xlat
jmp
xchg
imul
sti
pop
std
jecxz
stos
mov
std
mov
mov
adc
and
(bad)
jbe
das
sbb
cmp
imul
stos
push
jae
mov
in
and
dec
pop
jb
fcomp
inc
movs
push
pop
mov
jp
xor
movs
outs
lock
xchg
adc
in
cmp
cmp
leave
pop
call
cmps
fadd
daa
out
mov
lea
pop
sub
nop
cld
mov
jb
sti
call
retf
mov
pop
adc
sub
sbb
add
mov
shr
sbb
enter
out
xchg
outs
push
cmc
into
sbb
dec
pop
jg
mov
sar
daa
les
push
dec
mul
inc
lea
and
cs
stos
psrlq
(bad)
iret
and
popf
push
push
cmps
sub
retf
mov
daa
mov
mov
retf
cmp
cli
push
lods
gs
jmp
fiadd
pop
stc
icebp
in
dec
out
mov
not
mov
movs
pop
xchg
mov
sti
sbb
push
mov
jno
cmps
lds
rcr
lock
sbb
sub
mov
(bad)
cmc
jp
mov
scas
xchg
mov
or
mov
dec
out
xor
jl
add
cmp
cmp
add
sub
lahf
pop
std
adc
xlat
data16
out
jg
sub
lods
ror
(bad)
retf
ins
iret
jmp
popa
jnp
shl
xor
push
cmp
mov
pop
gs
jp
mov
aaa
and
aas
test
clc
mov
xlat
test
sub
cmps
jmp
js
pop
add
sti
in
outs
popf
xchg
jl
enter
and
gs
pop
mov
pop
fist
push
jno
es
fild
sub
mov
int3
cmp
or
icebp
stc
aam
dec
push
mov
pop
adc
cmp
xor
add
fnstenv
push
cmp
cmp
mov
popf
cs
pop
pop
js
push
ss
push
cdq
jge
into
(bad)
sbb
int
mov
fstp
jb
xor
(bad)
xchg
xchg
inc
mov
inc
mov
xchg
call
cmp
sbb
jge
xchg
sub
std
aam
xor
add
jp
ja
mov
push
stos
lea
div
arpl
adc
jle
mov
inc
dec
mov
inc
add
nop
repz
inc
inc
mov
cwde
adc
pop
std
mov
sbb
mov
nop
pusha
sub
aad
iret
cmp
dec
adc
fld
enter
imul
cli
jnp
push
mov
mov
leave
sbb
push
lea
sbb
stos
and
std
push
cmp
push
sbb
pop
pop
xor
jb
out
dec
add
sahf
idiv
inc
mov
jnp
mov
jg
push
popa
xchg
loopne
fcomip
mov
test
imul
lods
inc
pop
movs
pop
inc
pop
adc
sar
xchg
cmp
(bad)
or
movs
not
aam
scas
fist
add
cmp
test
ins
fbstp
(bad)
push
push
mov
call
xchg
movs
(bad)
call
aam
icebp
test
pop
sbb
xchg
adc
and
dec
fstp
xchg
xchg
stc
imul
mov
(bad)
sar
xor
nop
mov
lock
mov
or
dec
je
cbw
jb
movs
add
repz
inc
sbb
sbb
xor
(bad)
out
mov
push
stos
dec
call
lods
or
je
mov
jmp
sub
ret
lods
cmps
pop
and
dec
fisubr
test
cld
pop
jmp
mov
jae
fist
pop
sbb
out
arpl
mov
es
cmp
dec
lods
xor
popf
pop
ds
pushf
inc
into
add
jp
mov
mov
out
imul
lods
jge
cld
sti
arpl
repnz
pop
push
test
je
or
mov
ja
xor
xchg
ret
cwde
cmp
xor
jg
jecxz
mov
mov
fsub
inc
leave
sbb
jnp
(bad)
inc
fisubr
cmps
stos
ins
mov
jmp
shl
lods
jno
inc
jnp
fs
jae
or
aam
nop
push
lea
ins
cmp
mov
pop
mov
xchg
cmp
dec
stos
not
icebp
push
gs
push
push
ja
push
rcr
mov
popf
test
or
fild
ins
dec
xor
(bad)
int
ficom
push
fild
pop
pop
rcr
xchg
jge
sub
ret
bound
xchg
xor
call
bound
sub
mov
mov
out
out
mov
das
sbb
test
(bad)
sahf
mov
mov
popa
sub
inc
fisttp
ds
mov
dec
add
rol
push
scas
xchg
mov
into
ja
pushf
popf
fistp
mov
lock
sbb
arpl
or
inc
cmp
movs
mov
push
xchg
pop
mov
call
rcl
jle
jne
shr
push
ror
push
xchg
test
adc
jae
mov
hlt
mov
test
dec
sub
lahf
cmp
pop
adc
mov
inc
ja
pop
enter
(bad)
push
mov
jge
xor
sbb
ds
repz
cmps
mov
leave
jmp
xor
in
jb
int
mov
cld
stc
jo
pop
mov
movs
pusha
in
xor
push
push
fld
sar
push
cwde
push
or
adc
ficom
cmp
dec
scas
xor
pop
shr
hlt
out
mov
lds
cmp
push
xor
sar
iret
jp
dec
sar
cmp
not
xchg
movs
adc
or
and
pop
fwait
pop
xor
xchg
inc
dec
mov
sbb
ror
pop
mov
std
mov
jmp
leave
or
fs
jae
jecxz
jae
cld
arpl
rol
add
xor
icebp
cwde
das
int3
inc
mov
jnp
les
adc
push
jbe
cs
loopne
in
xchg
std
mov
sub
out
call
(bad)
push
call
fidiv
pop
and
shr
fadd
xor
in
in
add
cmp
mov
popf
sbb
mov
jle
out
jne
dec
and
push
inc
xlat
pop
mov
out
loop
in
addr16
dec
outs
push
or
call
adc
pop
push
aam
fs
and
(bad)
push
or
jb
mov
ins
mov
cs
cmp
pushf
es
adc
fwait
push
cdq
bound
fisttp
(bad)
popa
and
push
push
push
aas
mov
pop
pop
or
cmp
int3
add
adc
pop
dec
mov
pushf
addr16
push
test
add
int
sar
jmp
dec
dec
into
inc
add
and
sbb
inc
pop
loop
movs
std
mov
les
push
xchg
inc
xchg
idiv
pop
fcom
push
xlat
mov
inc
mov
adc
in
push
ins
stos
into
or
mov
rcr
or
out
icebp
lds
dec
stos
stos
int3
aaa
push
das
dec
or
lahf
pop
add
sahf
int
jne
pop
clc
mov
ja
push
enter
(bad)
xlat
add
cld
dec
cmp
jns
cmp
xor
cld
jle
xchg
cmps
fsubr
ins
scas
xlat
rcl
add
sti
push
ret
push
js
mov
sub
adc
adc
or
add
xlat
and
addr16
or
stc
in
mov
pop
inc
mov
aas
jge
add
mov
inc
and
sbb
enter
imul
dec
and
sbb
inc
pop
cs
outs
ds
shl
jo
xchg
shl
xchg
push
fwait
ret
pushf
daa
dec
or
loopne
out
inc
test
imul
push
mov
xor
int3
jae
jmp
ds
es
cmp
fwait
clc
call
pop
ror
addr16
stos
test
loopne
mov
(bad)
retf
and
(bad)
jno
pop
call
add
pop
jns
xor
add
stos
lods
push
mov
mov
(bad)
and
fisttp
push
xchg
cli
mov
fild
rol
aam
mov
jge
(bad)
cmp
lods
jecxz
sbb
cmp
or
ds
aad
cmp
xchg
mov
jg
cmp
cmp
xor
ret
jbe
cmc
es
je
add
dec
pop
mov
xchg
sub
adc
into
pop
dec
sbb
push
(bad)
xchg
addr16
(bad)
fild
ds
and
mov
sub
mov
pop
loope
loopne
shl
data16
cmp
pop
inc
pop
int3
daa
loopne
xchg
fcmovb
sti
sub
sub
test
mov
xchg
or
(bad)
pop
fwait
cdq
push
mov
jno
enter
fisub
addr16
push
scas
mov
sbb
lea
xlat
sub
push
cmc
int3
stc
xchg
movs
cmp
enter
and
sbb
inc
sub
mov
and
dec
pop
push
inc
popf
fldenv
hlt
and
in
sub
dec
sbb
add
cmp
test
or
push
and
xor
cmp
aaa
sub
loopne
(bad)
cmc
jl
imul
mov
ret
clc
add
xchg
add
pop
inc
(bad)
bound
loope
pop
mov
add
rcl
das
scas
cmp
inc
xchg
or
mov
cld
jne
into
jae
xchg
pop
shr
xor
fmul
mov
dec
dec
mov
test
adc
imul
inc
sbb
(bad)
call
cwde
(bad)
and
(bad)
mov
pop
jle
pushf
lods
dec
and
xor
cli
cmps
sahf
push
mov
mov
int3
xlat
sub
cld
mov
imul
cmps
jecxz
mov
push
cmp
or
int3
scas
add
cli
in
or
sub
inc
lds
and
mov
push
mov
pop
jge
dec
aam
dec
jnp
fldenv
dec
cmp
les
cmp
push
cmps
mov
mov
jno
sahf
addr16
xchg
cmps
fimul
jmp
rcl
push
pop
cmp
loop
loope
sahf
leave
xchg
rol
pop
lods
xchg
daa
fstp
pop
(bad)
sahf
and
mov
fidivr
sbb
xchg
and
jns
jecxz
int
cdq
test
sbb
push
mov
adc
retf
mov
into
inc
(bad)
push
dec
fwait
mov
sub
fcmovnbe
sub
pop
loope
xchg
(bad)
test
xor
jbe
push
cli
xor
fwait
add
mov
and
adc
jmp
mov
je
pushf
sti
or
aaa
adc
dec
xor
lods
mov
sbb
retf
(bad)
stc
push
xor
add
mov
fcom
icebp
sub
aas
xchg
in
arpl
mov
cmp
dec
call
out
cwde
inc
aam
xchg
cmp
xchg
adc
mov
pop
and
imul
dec
pop
pop
xchg
push
and
daa
sub
sub
repnz
ficom
cdq
call
sub
and
dec
mov
hlt
out
lahf
mov
(bad)
push
bound
inc
inc
xor
aaa
jp
mov
adc
(bad)
call
(bad)
jmp
ret
fadd
loopne
shr
push
jg
cmp
dec
mov
rol
popa
loopne
or
mov
test
out
js
pushf
out
loopne
test
dec
int3
cmp
daa
pop
pop
sbb
sar
xchg
fiadd
(bad)
mov
pushf
adc
pushf
iret
xor
mov
ja
pop
sti
cmp
cmp
push
add
push
repnz
xlat
inc
fcmovnbe
push
cli
mov
mov
(bad)
cmps
sbb
push
or
adc
fldenv
aam
into
cmp
pushf
xor
aam
shl
mov
fs
pushf
rcl
xchg
pushf
dec
out
fild
les
rol
sbb
rcl
pop
inc
fwait
in
mov
lods
and
mov
mov
mov
cmp
jae
out
adc
pop
dec
cli
mov
pop
jle
sub
in
xchg
stc
rol
int
fisub
daa
(bad)
loopne
xor
outs
or
sar
jecxz
outs
mov
sub
dec
jmp
push
inc
pop
mov
and
inc
sti
add
pop
popf
aaa
or
into
jns
iret
pushf
les
scas
sbb
ja
aam
sub
je
les
or
loop
int3
jp
push
pop
lock
mov
(bad)
aam
je
dec
inc
int
aas
test
cmc
sar
jle
sbb
cmp
sbb
stc
in
and
add
int3
les
dec
add
lods
sub
mov
cmps
loopne
aam
add
pushf
push
mov
inc
pop
mov
inc
mov
(bad)
loopne
push
xor
dec
mov
mov
xchg
xchg
rcl
mov
push
repz
inc
jge
cwde
pushf
dec
mov
popf
test
dec
and
or
mov
cdq
add
xor
jne
add
ins
nop
push
add
add
es
jge
push
aas
inc
sub
pushf
cmps
xor
inc
test
xchg
and
sub
pop
bnd
add
xchg
and
and
pushf
pop
into
ins
in
int3
jno
dec
enter
shl
loop
cs
and
inc
stc
fstp
(bad)
out
add
out
adc
dec
dec
or
cmp
enter
outs
sbb
jl
mov
aam
or
test
pop
ret
pop
sbb
cmp
and
shl
movs
ins
mov
mov
shl
enter
xor
in
jns
js
loope
push
ds
cmp
jae
hlt
or
outs
cmp
sub
sahf
shl
pop
fwait
popa
(bad)
jno
test
add
test
test
data16
mov
stos
icebp
add
sub
movs
mov
shl
dec
outs
lock
out
(bad)
ds
push
cmps
out
mov
dec
sub
dec
out
loope
mov
and
inc
mov
xchg
and
shl
loopne
sub
repnz
cmps
cld
push
dec
cld
pop
loopne
in
sbb
cmc
popa
dec
ins
les
in
ja
js
mov
mov
cmp
push
dec
push
and
push
mov
adc
fadd
inc
mov
and
loope
test
out
std
fld1
fwait
xor
push
jecxz
sahf
xor
push
movs
push
loope
pop
inc
mov
pop
mov
sbb
pop
in
cmp
jns
stos
mov
sar
out
xchg
adc
xchg
inc
mov
sbb
sti
imul
fwait
loop
dec
mov
xadd
and
fs
outs
mov
je
or
cmps
push
ins
mov
fwait
push
jecxz
sti
aam
cmc
push
ja
(bad)
out
pop
jle
outs
mov
xlat
cmp
mov
sub
push
inc
popa
fmul
push
cmp
push
dec
mov
cmp
jns
cwde
ins
push
inc
aad
out
pop
das
(bad)
add
out
daa
add
in
dec
ficomp
in
stos
or
push
(bad)
mov
adc
fidivr
test
sub
dec
sbb
pop
sbb
lock
movs
out
xchg
cmp
les
mov
inc
stos
mov
pop
loope
ja
sub
fsubr
push
xchg
ins
mov
shl
(bad)
sbb
je
gs
mov
lods
es
(bad)
shl
daa
icebp
xchg
cli
xor
mov
popf
out
cwde
dec
jecxz
inc
(bad)
fidivr
mov
cmp
rol
mov
and
stos
clc
call
xchg
xor
pushf
ins
mov
inc
pop
(bad)
xlat
xor
sbb
push
jmp
or
mov
popa
cmc
mov
retf
fsub
add
pop
popa
popa
mov
addr16
mov
cmp
sti
mov
mov
rcl
push
pusha
je
push
push
dec
cmp
push
cmps
mov
mov
xchg
dec
out
leave
xchg
pop
cmp
inc
and
mov
cdq
ja
enter
adc
fs
mov
es
loopne
mov
int3
fcmove
mov
mov
pop
icebp
mov
fdivrp
bound
pop
xchg
stos
and
jo
in
cli
call
xchg
pusha
xor
out
mov
mov
mov
iret
dec
stos
and
lahf
popa
and
js
mov
mov
pop
cmp
test
inc
pop
mov
dec
mov
sahf
pop
rsm
in
ss
(bad)
aam
div
(bad)
shl
(bad)
mov
lods
push
test
or
retf
into
fstp
iret
movs
mov
xor
mov
mov
aam
rol
xchg
mov
sti
lods
pop
call
jnp
aam
mov
sub
mov
ret
mov
test
push
sub
je
cmpxchg
xchg
jb
mov
ja
push
mov
or
adc
out
les
clc
aad
xchg
mov
pusha
inc
ds
xchg
movs
test
popa
out
call
pop
fstp
(bad)
jge
sar
mov
sbb
ins
cld
shl
pop
jnp
loopne
mov
mov
nop
rcr
call
mov
in
jbe
xchg
xchg
mov
stos
scas
sub
or
pop
pop
push
fwait
mov
sbb
iret
stc
and
or
inc
ja
jmp
and
mov
sbb
loopne
aad
xlat
push
mov
and
fmul
lock
fwait
fwait
(bad)
imul
ins
mov
pop
js
ins
pop
sahf
or
daa
mov
and
sbb
dec
stos
push
push
cmp
cmps
lock
xchg
mov
ss
or
cdq
aaa
fwait
xor
push
sbb
pop
cmp
dec
mov
mov
sub
mov
dec
or
cs
fidivr
pop
pop
or
mov
inc
test
push
mov
jmp
call
mov
mov
dec
mov
in
retf
aaa
(bad)
or
xlat
ja
pushf
or
mov
pop
addr16
sub
fimul
fwait
cli
add
dec
xor
sbb
pop
sbb
sub
int3
mov
pushf
icebp
loope
enter
ins
push
and
(bad)
xchg
lahf
not
sub
add
ja
adc
fiadd
ret
pop
idiv
adc
lds
aam
push
icebp
les
loopne
rcl
push
(bad)
sub
mov
pop
cmc
mov
sbb
movs
adc
sbb
ds
ficom
mov
mov
dec
fmul
cmp
mov
inc
jmp
mov
mov
sbb
sub
les
add
jle
repnz
inc
test
ret
cmp
ins
mov
fcom
push
idiv
mov
mov
loope
fisubr
jmp
add
mov
mov
jno
(bad)
sbb
push
jl
and
call
or
cld
(bad)
imul
push
icebp
jmp
push
add
shl
cmps
or
lahf
mov
push
cmp
data16
pop
push
es
adc
adc
dec
and
(bad)
mov
jecxz
shl
jbe
loop
xor
call
adc
sub
mov
aaa
and
aam
mov
pop
loopne
jle
push
int3
push
nop
mov
(bad)
shl
jbe
mov
ret
arpl
xlat
jmp
arpl
aam
push
stos
pop
or
jmp
pop
mov
out
ja
xor
xchg
arpl
jnp
inc
sbb
mov
(bad)
test
mov
add
call
dec
push
cmps
pop
xchg
call
push
sub
push
enter
ins
pop
and
jmp
pop
and
out
loope
hlt
scas
cmp
mov
sbb
mov
jle
inc
(bad)
ins
repnz
je
xchg
sbb
fild
repnz
shl
(bad)
(bad)
stc
sar
mov
mov
mov
test
loope
jg
sbb
mov
ins
push
mov
fisubr
sahf
xor
and
jmp
jnp
or
sahf
cmp
jnp
loope
jle
xchg
adc
pushf
cmps
jp
outs
dec
xchg
addr16
cmps
mov
mov
pop
shl
test
aas
jle
int
sub
sub
mov
int3
and
(bad)
test
cld
aaa
ret
imul
cmp
and
das
push
js
inc
push
loop
shl
xor
popa
mov
fstp
adc
mov
dec
dec
sbb
push
mov
pop
test
mov
sbb
or
repz
jns
icebp
inc
push
in
inc
call
test
push
in
dec
cdq
sub
popf
out
arpl
and
outs
jo
jmp
(bad)
dec
sbb
in
test
sub
pop
push
or
inc
push
inc
add
mov
clc
cmp
cmp
dec
push
cmp
repz
out
mov
pop
mov
in
inc
call
test
pop
jnp
xor
sub
fmul
cmp
cmps
jp
dec
add
xchg
js
pop
mov
in
ret
out
pop
mov
and
dec
sub
cmp
jge
scas
loopne
outs
inc
mov
add
fcmovnb
mov
and
xor
sbb
or
mov
cmp
jns
xlat
sar
xor
jge
and
mov
and
jl
cmp
ss
xchg
cmp
pushf
stc
lock
xor
sub
jo
call
loop
cli
in
gs
test
pop
lock
fmulp
cmc
pop
inc
add
jb
and
push
push
(bad)
leave
push
fnstenv
xchg
push
dec
scas
pusha
mov
push
xor
and
inc
fistp
or
xor
xlat
jbe
(bad)
cmp
test
jno
stos
test
xor
mov
ret
and
add
fdivr
(bad)
mov
jb
gs
fld
dec
cmp
sbb
pop
push
mov
cld
aam
out
in
sub
sbb
pop
pop
xchg
test
ror
cwde
pop
xchg
mov
pop
into
mov
div
jge
addr16
fcmovnbe
dec
mov
sar
cmp
xchg
test
and
loop
mov
and
adc
or
sub
loopne
lods
mov
sub
pop
lods
xor
rcl
pop
cmp
sbb
adc
ins
lahf
sub
sub
dec
push
sbb
test
iret
inc
bound
xlat
fisub
in
xchg
idiv
test
push
jge
mov
(bad)
cmp
ret
xchg
das
jg
aad
xchg
sahf
fsubr
adc
test
mov
xchg
out
lods
das
xchg
movs
pusha
push
push
push
popa
and
adc
push
fisubr
loope
inc
dec
mov
hlt
mov
dec
(bad)
dec
outs
adc
pop
cld
movs
aam
xor
pop
pop
pusha
xchg
jo
mov
inc
cmp
sar
fisubr
shl
shl
pop
(bad)
xor
dec
jmp
mov
out
outs
sub
pop
dec
mov
in
push
aas
push
sbb
pop
adc
mov
in
pop
ss
jns
popf
inc
inc
mov
ror
or
mov
aas
add
cmp
sub
imul
push
scas
fild
dec
ret
mov
int3
jl
cli
and
ss
fidivr
test
fcomp
adc
pushf
cmc
jae
push
xor
addr16
pushf
sbb
nop
scas
loop
or
bound
push
adc
sahf
add
xchg
cld
dec
lock
sbb
inc
inc
dec
or
les
cwde
inc
ror
rol
fstp
div
outs
pop
sub
sub
dec
pop
push
mov
cli
inc
pop
add
dec
push
or
mov
pop
adc
scas
imul
xchg
push
or
mov
ja
(bad)
sbb
mov
iret
aas
xchg
(bad)
push
cmc
adc
ins
es
pop
push
loopne
pop
dec
inc
fisttp
lea
out
add
mov
cmp
cdq
push
sbb
cmp
shr
rcr
(bad)
fwait
cmp
jnp
(bad)
repnz
pop
xchg
mov
shl
sub
jle
clc
jp
in
int
pop
ins
arpl
xor
(bad)
sub
(bad)
add
test
test
loopne
in
xchg
push
add
or
mov
jo
jnp
adc
inc
ds
aam
mov
test
retf
scas
stos
sub
jmp
dec
pop
imul
jae
js
(bad)
pushf
push
push
pop
cmps
add
retf
xlat
outs
jbe
aaa
pop
xor
xchg
enter
mov
outs
and
inc
ins
jg
xor
sti
jle
add
cdq
stc
lock
jbe
or
sbb
imul
test
inc
iret
sub
lods
dec
aaa
mov
sub
mov
(bad)
(bad)
push
mov
xor
call
popf
or
loopne
mov
les
xchg
inc
rcl
xchg
test
cdq
mov
rcr
mov
(bad)
ss
and
mov
pop
sahf
add
cmp
xchg
ins
lock
mov
xchg
pop
push
mov
xchg
loopne
mov
sub
mov
loopne
cmp
xor
inc
mov
push
ja
mov
movs
pop
sbb
jnp
lods
mov
push
push
cmps
mov
inc
xor
cld
mov
pop
enter
out
dec
push
addr16
mov
mov
pop
aaa
nop
jecxz
xchg
stc
sbb
imul
pop
fs
jl
repz
pop
pop
fisub
aaa
popa
and
int3
lock
dec
and
mov
pop
cmp
popa
cwde
push
ins
ss
ins
pop
mov
and
cmp
and
mov
jno
sub
or
test
mov
xor
pop
cmp
call
jnp
sub
xor
add
sub
cmp
(bad)
and
or
push
retf
int3
mov
jae
movs
mov
xchg
fwait
pop
loop
lea
mov
xchg
mov
or
sti
mov
xchg
aad
arpl
mov
and
xor
enter
mov
cmp
adc
mov
inc
jno
fist
pop
xchg
pop
mov
in
call
sub
call
xlat
inc
adc
jo
mov
in
sahf
and
cmp
in
xchg
cs
enter
retf
mov
pushf
pop
push
add
es
inc
or
clc
mov
out
imul
adc
repz
mov
inc
mov
cmp
jp
(bad)
pop
fwait
mov
call
xlat
arpl
rcr
mov
in
lds
push
xor
pop
sub
das
aaa
mov
cs
leave
int3
lods
pop
jmp
push
mov
mov
or
sub
repz
mov
xchg
ins
dec
pushf
pop
xchg
dec
sahf
cmps
xchg
xchg
mov
and
aas
(bad)
(bad)
cmp
mov
fldcw
fsub
scas
daa
js
stos
and
mov
jmp
jno
sub
test
(bad)
jg
push
ret
push
sbb
arpl
mov
dec
hlt
or
addr16
stos
inc
cwde
(bad)
mov
dec
mov
ror
xchg
jne
mov
mov
inc
dec
fidiv
mov
cdq
retf
jmp
push
push
pop
shl
or
jl
adc
sub
adc
fwait
jecxz
cmp
jae
push
jbe
cmps
push
(bad)
scas
and
jge
dec
push
and
fxam
imul
addr16
xchg
inc
pop
sbb
dec
std
sti
jno
push
dec
imul
mov
loopne
rcr
and
dec
int3
dec
jo
lods
cmp
cmp
and
fstp
(bad)
aas
(bad)
fmul
hlt
dec
iret
fisttp
jg
retf
aam
xor
sub
inc
scas
cmc
rcl
pushf
fs
and
lods
cmp
push
rcl
test
rcr
(bad)
and
cmp
lods
cmp
dec
(bad)
daa
xchg
inc
add
add
pop
pop
aad
mov
call
inc
pop
jecxz
in
push
mov
test
push
(bad)
ss
sbb
rcr
daa
push
push
fwait
mov
dec
push
push
in
mov
jno
push
xor
push
xor
fiadd
jecxz
xor
(bad)
fidiv
rcl
addr16
scas
cmp
jnp
imul
and
push
push
jge
loopne
jp
xchg
push
lahf
not
je
sahf
mov
dec
sbb
jmp
mov
xchg
mov
loope
mov
add
mov
cdq
movs
jge
cmp
outs
push
pop
leave
ret
rcr
jns
ss
sbb
int3
jmp
inc
jae
in
sub
push
cmp
mov
add
and
das
jmp
ficom
pop
mov
div
sub
xor
cmp
(bad)
push
dec
gs
and
push
mov
fld
pop
dec
test
adc
aam
stc
cmp
mov
mov
pop
int3
push
shl
mov
push
mov
cmps
xcrypt-ecb
cmps
iret
xchg
mov
dec
xor
push
cmp
mov
mov
cwde
sub
pop
adc
inc
cmp
fist
idiv
pop
scas
push
pop
add
pusha
jne
mov
pop
xchg
add
cmps
xlat
jmp
loope
cmp
push
lods
jmp
sbb
pop
or
add
push
sbb
or
inc
movs
xchg
pop
mov
cld
iret
call
mov
inc
rcl
xor
sti
(bad)
add
inc
outs
cmp
add
les
xlat
retf
sar
popa
cmc
loopne
inc
xchg
xchg
or
sub
into
movs
push
xor
jmp
xor
mov
js
xor
xlat
mov
xor
adc
xchg
or
push
pop
add
out
dec
int3
in
int3
inc
push
mov
xor
pop
aaa
nop
add
mov
test
fiadd
dec
jne
loope
add
retf
dec
neg
dec
push
shl
pop
outs
jmp
adc
push
into
adc
mov
inc
(bad)
adc
jbe
and
add
inc
pushf
or
cmp
int3
cmp
add
inc
pop
xor
pop
push
sbb
(bad)
aam
(bad)
sar
aad
jmp
push
test
int
jmp
(bad)
dec
push
gs
and
xor
je
xchg
dec
sub
mov
xor
pop
sub
test
popf
push
movs
sub
ret
push
sub
fstp
ror
add
mov
pop
jge
mov
mov
ja
and
inc
sub
cmp
mov
xchg
shr
in
pushw
push
jmp
pop
addr16
pop
sbb
mov
loope
ja
test
mov
(bad)
mov
mov
mov
loopne
add
mov
add
out
popf
sub
jge
mov
test
(bad)
ficomp
cmps
sub
sbb
add
(bad)
xchg
adc
dec
mov
fcmovnbe
jno
cmp
adc
add
xchg
jecxz
and
dec
(bad)
js
xor
popf
cmp
jp
ret
inc
ins
or
or
imul
dec
jmp
ror
adc
lds
(bad)
cwde
mov
setno
cld
mov
fldcw
mov
inc
(bad)
xchg
mov
sbb
jb
stos
lods
mov
and
xor
push
out
mov
mov
xor
aaa
pop
call
add
das
mov
xor
(bad)
pop
xor
push
push
mul
sar
arpl
dec
xor
cwde
test
pop
(bad)
mov
cmp
retf
fistp
(bad)
cdq
shl
and
jns
adc
popf
xchg
xor
add
movs
sbb
sub
dec
cs
(bad)
push
aam
mov
cwde
(bad)
test
cdq
inc
jecxz
jge
mov
xor
add
movs
inc
mov
ret
lock
jns
ds
ja
mov
aaa
imul
(bad)
or
dec
or
cmp
jg
ffreep
aas
ror
inc
fnsave
cmp
cmp
data16
retf
mov
in
mov
cmovb
push
jmp
enter
mov
loopne
stos
xor
test
pop
cmp
enter
call
ror
shl
mov
mov
xchg
mov
push
or
fwait
pop
and
mov
pop
mov
cmp
fcomp
push
mov
or
add
and
add
popa
daa
test
(bad)
xor
sbb
fdivr
xor
out
mov
xchg
stos
jno
and
leave
sub
in
shl
xlat
mov
adc
cdq
stos
jle
in
mov
pcmpeqd
(bad)
iret
(bad)
mov
nop
frstor
dec
sub
(bad)
mov
jle
xlat
mov
mov
pop
and
pop
(bad)
js
pop
dec
rcr
push
hlt
mov
mov
fwait
(bad)
sbb
fld
dec
mov
popf
push
mov
jl
and
adc
mov
jge
mov
out
loop
lods
sub
mov
sbb
scas
xor
idiv
fiadd
sub
not
or
inc
scas
leave
add
sub
mul
jecxz
bound
pop
inc
les
or
and
or
aam
test
mov
ss
adc
loopne
add
fnstsw
fdiv
add
pop
xchg
ss
(bad)
cld
inc
out
retfw
cli
mov
gs
or
(bad)
fcomp
xor
sbb
sbb
fidivr
cmp
jg
cmp
or
ficomp
sub
pop
add
cld
and
push
out
inc
dec
pop
out
jmp
add
sub
xchg
mov
xor
ja
enter
sbb
mov
shl
cmps
fisttp
mov
xchg
sbb
mov
in
fmul
xlat
ret
mov
or
pop
sub
push
mov
test
mov
pop
xchg
cmp
vmread
mov
pop
retf
aam
in
fisttp
hlt
loopne
mov
mov
sbb
xchg
jnp
in
adc
sahf
cli
xchg
aam
aam
or
inc
(bad)
pushf
(bad)
push
sbb
mov
ficom
sbb
rcl
dec
mov
shr
sub
sub
fstp
xchg
sahf
sub
push
int3
pop
jbe
sbb
jle
fwait
in
fild
push
push
and
mov
mov
or
push
out
sub
dec
sar
mov
sbb
test
mov
pop
inc
(bad)
xchg
dec
imul
icebp
push
inc
lds
aam
ret
or
inc
inc
adc
jnp
pop
push
cdq
aam
push
rcr
push
sub
add
mov
imul
ss
rcr
mov
pop
retf
fs
xchg
loope
or
ds
stos
fcmovu
repz
push
jl
(bad)
adc
push
cmps
popa
lahf
push
(bad)
dec
mov
ss
pushf
add
push
aam
jmp
inc
jbe
stc
dec
sbb
pop
fwait
sub
fs
cmp
push
dec
sahf
stos
cmp
sub
mov
mov
rcl
pop
jnp
hlt
sub
imul
test
out
cmp
mov
lds
in
push
clc
add
mov
mov
xchg
jmp
in
sbb
mov
push
adc
mov
mov
adc
mov
pop
pop
lds
sbb
inc
pop
cmp
and
in
fwait
not
cmps
aam
inc
mov
xchg
dec
inc
mov
push
adc
and
xlat
stos
jmp
dec
xchg
fisttp
add
ins
jnp
les
dec
outs
imul
and
retf
and
sub
cmp
and
js
stos
dec
cli
push
movs
mov
das
cvtpi2ps
lock
(bad)
fcom
dec
add
push
popa
jno
out
or
xor
jle
fcomp
test
xchg
out
cmp
leave
sbb
push
mov
mov
push
xchg
push
xor
mov
stc
int
cmp
cmp
mov
pop
std
clc
cmp
(bad)
xchg
push
adc
lea
aad
aas
imul
mov
fdiv
cwde
xor
push
arpl
inc
ss
mov
and
cmp
in
or
and
push
dec
mov
loope
lods
mov
outs
lods
div
int3
cmp
adc
loop
pushf
jmp
mov
jle
pop
in
aaa
cmp
test
cld
sub
xchg
ins
cmovnp
adc
aam
cmps
dec
lods
add
pop
lock
pop
mov
bnd
ds
mov
jbe
test
sub
fmul
xor
sub
xchg
push
fnstcw
sbb
inc
sub
jmp
sub
fidiv
or
out
jmp
fild
shr
or
jge
lahf
mov
popa
int3
xchg
push
dec
stc
ret
inc
sub
push
sub
pop
mov
lea
and
cmps
pop
or
and
cld
aad
stc
cld
mov
inc
outs
mov
add
mov
sar
hlt
std
fdivrp
xor
in
or
dec
xor
aad
retf
mov
in
call
adc
push
aaa
add
aad
pop
jo
loopne
mov
lods
enter
dec
adc
inc
out
aaa
mov
xlat
gs
add
aaa
cwde
push
push
shr
hlt
int3
in
xor
add
clc
inc
aas
and
dec
out
iret
push
pushf
pop
push
jge
xchg
test
cmp
push
or
in
(bad)
movs
jne
rcl
out
jnp
ja
lock
cmp
daa
loopne
and
push
fiadd
les
jmp
inc
dec
pop
arpl
aam
pusha
fstp
or
int3
push
adc
ja
cmp
ss
pusha
dec
inc
aad
dec
xchg
mov
das
jl
mov
and
cmc
cmps
push
ds
mov
loopne
jecxz
in
push
mov
aaa
test
rol
mov
mov
sub
fdiv
sbb
outs
xor
and
stc
mov
call
push
out
fld
arpl
jle
sub
and
dec
cmp
scas
aam
push
jmp
mov
fisubr
aas
xor
jns
ret
cmp
iret
sbb
jge
call
xlat
shl
ret
dec
dec
inc
pop
push
add
gs
daa
aam
and
add
(bad)
jnp
lock
and
movs
jg
lahf
sub
sar
inc
and
or
mov
cwde
push
fstp
add
fldenv
addr16
les
gs
iret
pop
jp
sbb
fcomp
fist
cwde
jbe
in
in
mov
idiv
mov
fs
sbb
mov
sub
test
sahf
pop
jl
jmp
xchg
dec
jecxz
popa
or
and
fwait
xchg
enter
xchg
lock
xchg
sbb
dec
int
adc
push
arpl
cmps
aam
mov
pop
sti
mov
xchg
jnp
or
push
add
or
rcl
cmps
sub
push
cmp
mul
inc
mov
lds
mov
(bad)
xchg
pop
enter
sbb
cmp
aas
sub
lahf
xor
pop
jl
int
xchg
pop
movs
or
mov
sub
sar
fadd
shr
jne
xor
xchg
and
pop
stos
scas
xchg
jmp
sbb
in
pop
inc
ja
mov
mov
xchg
sbb
(bad)
in
outs
and
mov
int3
mov
aaa
cld
dec
mov
enter
sbb
fsub
xor
mov
jge
inc
out
push
adc
push
and
sbb
lods
cmp
add
call
push
cmps
cmp
push
push
mov
adc
gs
popa
fmul
sar
std
mov
push
out
pop
jg
fcom
inc
push
test
jle
ins
popa
pop
enter
push
xchg
pop
cmps
ret
out
cld
dec
test
xchg
addr16
es
xor
pop
sahf
sbb
sar
add
inc
fadd
mov
mov
mov
mov
test
dec
nop
sub
rol
mov
pop
lock
cmps
fst
add
sbb
adc
pop
ss
cli
push
sbb
cmps
xor
adc
dec
and
cmps
imul
adc
movsx
in
mov
(bad)
xlat
dec
sub
mov
daa
ror
mov
add
adc
stc
hlt
test
pop
clc
dec
sti
mov
cmps
mov
hlt
cmps
cmp
mov
mov
(bad)
les
das
and
sbb
jge
adc
cwde
sbb
xchg
fucomi
adc
add
cli
stos
or
push
push
add
cmps
jle
dec
movs
jmp
mov
out
xchg
(bad)
cs
push
in
test
ins
sub
call
xlat
and
adc
test
cmp
ja
mov
adc
push
arpl
out
inc
jb
cdq
popf
push
(bad)
sti
aas
jge
ja
cmps
cmp
xchg
push
shl
sbb
repz
outs
push
inc
loop
rcr
adc
xlat
inc
fs
mov
pop
mov
and
push
das
mov
push
sub
pop
jl
push
rcl
xchg
es
xbegin
cmps
and
frstor
in
mul
and
imul
and
xlat
sub
sahf
pop
mov
nop
mov
call
xor
mov
lods
loopne
test
out
rcl
(bad)
cs
mov
fistp
cdq
pop
gs
sbb
add
add
dec
sub
aaa
mov
(bad)
ja
push
(bad)
icebp
push
mov
hlt
and
pushf
mov
ror
push
mov
addr16
test
or
mov
out
dec
les
jmp
xchg
cs
jmp
mov
push
cmp
mov
jmp
call
fs
xchg
inc
les
mov
adc
lahf
xor
ins
pop
or
aaa
rol
or
pop
cmp
arpl
cmps
sub
je
mov
or
icebp
sub
jnp
iret
mul
(bad)
xor
fidiv
imul
outs
out
cs
inc
mov
jnp
lods
and
pop
loope
or
lds
and
stos
jle
or
jns
(bad)
bswap
cmp
sbb
mov
nop
cwde
and
xor
adc
bound
hlt
popf
inc
fnstcw
dec
popa
xor
jl
(bad)
rcl
repz
pushf
or
dec
jmp
xchg
jecxz
jo
sahf
int3
xlat
sbb
sbb
cmp
jge
jbe
dec
dec
out
stos
sbb
mov
sub
dec
fdivr
add
lods
mov
fcmovu
inc
nop
sub
ror
xchg
enter
mov
lods
pop
push
cmps
pushf
cmp
xor
pushf
cmp
es
imul
rcl
retf
sub
les
xchg
shl
inc
sbb
out
call
ficom
icebp
inc
inc
fistp
dec
stos
sbb
out
dec
inc
xchg
mov
lods
popf
pusha
sbb
stos
movs
out
enter
sbb
ins
push
dec
call
xchg
mov
mov
cld
mov
scas
fisubr
int3
cmps
xchg
mov
pop
js
fcomp
xchg
sbb
out
inc
or
ja
inc
les
out
cmp
jmp
add
pop
(bad)
ror
das
bound
push
pop
aaa
xor
jmp
retf
stos
ss
cld
cmp
cmp
lods
out
pushf
cwde
pop
aam
sar
ret
push
jl
pop
fstp
add
add
mov
mov
shl
and
jge
out
test
push
loop
retf
(bad)
(bad)
mov
rcr
sbb
push
mov
pusha
xchg
imul
clc
xor
and
dec
pop
sub
imul
or
rcl
xchg
xchg
push
and
(bad)
aaa
pushf
icebp
dec
loop
ror
cmp
fisttp
jno
iret
inc
dec
pop
add
pushf
fwait
inc
(bad)
jmp
pushf
into
sub
adc
or
js
inc
clc
cmp
mov
mov
jmp
aaa
inc
and
shl
daa
movs
and
adc
jge
xchg
mov
shr
ret
(bad)
jge
sbb
mov
and
loopne
retf
es
jno
sbb
pop
push
int3
push
jae
adc
fwait
es
adc
cmp
(bad)
xor
popf
icebp
pushf
jno
pusha
sar
jnp
cs
sar
xor
and
xchg
sbb
stos
mov
cli
cmp
(bad)
loop
push
jg
aas
iret
and
add
mov
mov
fmul
fidiv
mov
inc
rcr
pushf
push
jnp
test
fadd
mov
xchg
pop
sbb
cmp
push
jo
fst
clc
cwde
jns
das
or
int
inc
sub
sub
pop
out
sbb
inc
cld
sbb
xchg
xchg
adc
lock
mov
sahf
sub
xor
inc
sbb
mov
cdq
xor
fcom
dec
div
rcr
ss
push
or
je
push
pushf
push
and
enter
add
inc
mov
mov
xor
enter
test
pop
mov
dec
shl
xchg
xchg
mov
push
mov
cld
xor
cmp
inc
mov
call
pop
fwait
push
std
jg
(bad)
hlt
shl
and
sti
dec
xchg
mov
xchg
jbe
adc
pop
sbb
dec
xor
mov
ss
dec
pop
scas
xor
push
int3
and
cmc
hlt
push
mov
add
mov
jmp
test
cmp
jae
cdq
out
push
mov
jnp
mov
xchg
add
mov
xor
daa
iret
push
inc
ret
les
adc
addr16
leave
inc
pop
dec
mov
sbb
mov
sub
mov
xchg
pop
cmp
and
sbb
aad
cmc
dec
mov
fbstp
stos
test
sbb
mov
mov
enter
mov
sbb
and
popf
daa
pop
mov
fadd
cld
jns
cmp
push
aaa
daa
jno
les
mov
pop
xlat
fisttp
mov
mov
sti
loopne
jo
sbb
xchg
or
pop
arpl
mov
cmps
sub
cld
repnz
mov
lds
pusha
jno
jmp
xor
adc
(bad)
inc
sar
aam
push
jmp
push
adc
dec
outs
jmp
ins
mov
lahf
daa
or
aam
or
popa
cli
rcr
xor
inc
dec
push
or
and
int3
scas
test
fidivr
sbb
dec
mov
fldl2e
sub
xchg
shl
out
pushf
pop
aaa
jmp
add
cld
enter
mov
xor
inc
popa
xor
(bad)
(bad)
mov
jge
jg
ja
shr
push
in
sahf
clc
dec
arpl
repz
cmp
sbb
cmp
inc
repz
mov
and
xchg
pop
xchg
push
daa
clc
pop
or
push
vmread
ror
xgetbv
sub
out
lods
push
push
xchg
data16
daa
rcl
or
sub
(bad)
dec
xchg
(bad)
fbld
mov
and
hlt
cs
xchg
(bad)
retf
jle
imul
ds
and
loopne
loopne
or
dec
movs
(bad)
pop
(bad)
(bad)
sub
inc
sbb
push
retf
or
jecxz
mov
fisttp
xchg
xlat
xor
stos
dec
mov
retf
dec
sub
mov
mov
push
lea
out
xor
jbe
dec
inc
mov
(bad)
push
pop
in
clc
loope
sbb
xchg
add
fdiv
sbb
(bad)
inc
pop
xor
fwait
push
repz
mov
mov
hlt
inc
add
dec
add
(bad)
shr
call
test
ret
aas
sub
ret
push
mov
adc
test
sbb
push
retf
fs
sub
mov
pop
xor
inc
cwde
inc
test
push
jae
(bad)
cwde
sbb
fisub
push
jmp
sbb
mov
(bad)
jbe
mov
xchg
sti
sbb
cli
cmc
stc
popa
dec
(bad)
lock
test
mov
xor
or
mov
clc
(bad)
mov
(bad)
add
add
out
inc
dec
aaa
push
and
(bad)
test
pushf
xchg
mov
movs
or
out
push
pop
popa
(bad)
push
mov
xor
jge
scas
or
fcmovne
(bad)
adc
cdq
dec
clc
mov
push
cmps
pop
mov
dec
leave
rcl
pushf
lock
cdq
aam
fistp
retf
shr
ins
sahf
test
dec
nop
jmp
std
adc
lahf
movs
adc
xchg
dec
mov
cmp
xor
clc
loopne
dec
sbb
inc
fdivr
ja
mov
jle
call
ret
hlt
neg
sub
and
xchg
push
cmp
nop
jp
push
inc
js
and
out
mov
add
xchg
mov
bound
inc
mov
xor
inc
loopne
fst
mov
inc
inc
adc
sti
or
dec
fisttp
add
mov
ror
int3
push
add
retf
dec
push
out
and
mov
js
neg
dec
pop
sbb
jnp
pop
repz
leave
jle
daa
xlat
popf
mov
adc
adc
jl
leave
or
call
xchg
add
sbb
xlat
inc
lods
out
mov
mov
xor
test
daa
mov
lock
icebp
push
xor
(bad)
test
pop
xchg
xor
stc
adc
shl
pop
js
ret
jnp
jecxz
rcr
div
call
pop
bound
rcl
(bad)
aas
mov
sahf
das
adc
jmp
mul
sar
push
(bad)
cmps
call
jne
(bad)
rol
pop
add
movs
inc
or
btr
or
pop
mov
or
scas
cwde
fwait
fwait
adc
or
arpl
mov
sub
out
enter
in
xor
pop
mov
sub
inc
fcomp
jmp
mov
stos
cmp
adc
mov
movs
pop
push
sub
pop
out
in
jo
rol
adc
adc
adc
sbb
ins
push
scas
jne
sub
sbb
fwait
cmc
ins
push
add
lods
pop
fisub
mov
xchg
jle
mulps
ins
iret
shl
cld
sbb
ins
outs
xlat
ds
add
adc
sbb
or
out
enter
mov
or
sub
pop
pusha
sahf
in
jb
dec
mov
gs
inc
movs
and
loop
push
xchg
inc
xor
adc
cmps
hlt
(bad)
or
das
push
mov
inc
xor
in
ins
sbb
mov
dec
std
rcl
inc
adc
cmp
jp
fidivr
push
mov
leave
add
into
sub
out
adc
sahf
imul
xlat
xchg
xor
nop
inc
add
cmp
imul
ror
jmp
or
in
jb
adc
pop
out
dec
pop
dec
mov
add
mov
push
dec
cdq
mov
shr
jbe
(bad)
neg
(bad)
pushf
jo
dec
ror
(bad)
inc
out
adc
mov
repnz
(bad)
dec
mov
mov
xchg
pop
xchg
shr
sbb
ficomp
call
pusha
push
fiadd
jge
xchg
push
icebp
(bad)
sub
cwde
push
ins
add
push
hlt
cwde
add
push
mov
mov
out
xor
mov
adc
cmp
fisub
in
add
mov
pop
lahf
sub
aaa
or
mov
inc
sub
dec
rol
pop
int3
push
pop
push
ins
pop
or
imul
dec
jo
js
xchg
xchg
mov
mov
pop
xor
sbb
(bad)
scas
mov
xchg
rcr
out
into
pop
push
adc
aas
das
inc
mov
aad
dec
push
inc
lods
adc
repz
add
xchg
xchg
call
aam
add
lock
jg
inc
dec
mul
stc
in
vpunpcklqdq
adc
xchg
sub
push
jbe
out
adc
icebp
neg
jb
xchg
cmp
clc
and
cmps
and
inc
xor
pop
xchg
push
repnz
adc
mov
add
jmp
mov
pop
test
push
lahf
pop
loopne
shr
sbb
cmp
mov
bound
fcmovnbe
add
xchg
push
dec
jp
inc
sar
(bad)
iret
xchg
test
push
mov
inc
and
push
imul
sub
scas
pop
xor
cdq
repz
xchg
out
xchg
mov
jp
lea
retf
cs
sbb
into
pop
(bad)
pushf
jne
repnz
icebp
std
sbb
clc
jl
loop
dec
mov
adc
outs
push
ret
inc
int3
pop
xchg
pop
je
pop
inc
jo
mov
mov
push
aad
call
lods
and
push
cmp
mov
mov
in
mov
sub
retf
pop
jp
inc
std
lods
loopne
pop
div
cli
push
cmp
cld
call
and
cmps
mov
xchg
test
sub
mov
add
cli
cld
push
pop
shr
sub
inc
mul
jae
pushf
push
ds
or
mov
in
inc
je
inc
and
xchg
xchg
fsub
das
arpl
repnz
jo
sbb
and
je
inc
xor
int3
mov
pop
cld
out
xor
mov
rol
int
mov
popa
loope
jg
push
inc
cld
ss
mov
dec
loop
mov
aam
pop
mov
pop
aam
mov
loop
shl
inc
mov
add
adc
enter
push
dec
addr16
loopne
out
ret
stc
cwde
pop
mov
push
imul
jmp
test
dec
mov
jmp
cwde
pop
pop
add
pop
fwait
adc
cmp
adc
jl
jmp
mov
xchg
and
loopne
sub
(bad)
js
mov
shl
mov
call
sub
jmp
jnp
pop
lock
popa
in
bound
jmp
sub
fsubp
dec
fld
pop
daa
mov
adc
dec
popf
adc
jmp
stc
fcmovbe
je
sub
jge
loop
scas
or
movs
je
mov
xor
out
pop
movs
enter
push
add
out
dec
repnz
scas
sbb
retf
ja
mov
jle
stos
out
mov
jo
ret
fisttp
pop
xchg
push
out
xor
xor
fidivr
je
adc
inc
xchg
leave
mov
pop
mov
pushf
call
add
push
inc
imul
sar
inc
(bad)
imul
mov
out
dec
lods
gs
ror
lahf
mov
adc
pop
xchg
pusha
mov
xchg
sbb
fwait
imul
push
fwait
and
xchg
mov
fadd
and
imul
lock
mov
test
push
mov
sbb
push
mov
pushf
xchg
and
xor
cmp
lds
push
test
(bad)
(bad)
pop
cmp
sub
xor
pop
pop
cmp
mov
movs
jl
fidiv
jmp
mov
mov
lea
(bad)
das
mov
sahf
or
shl
adc
push
in
rol
and
add
add
add
jne
int3
mov
mov
xor
mov
sub
lods
mov
addr16
jae
adc
sub
mov
push
jl
in
(bad)
cmp
out
cmp
dec
and
cmp
ds
inc
popa
fisubr
and
cmp
xchg
pop
sub
mov
mov
add
sub
into
fcom
bnd
jb
add
xlat
shl
dec
jb
and
sbb
fdiv
mov
and
adc
sub
lods
jb
add
addr16
add
push
dec
push
hlt
push
in
xor
mov
fdivrp
push
pop
xchg
jnp
push
fimul
dec
mov
fcomp
cmp
mov
and
cmp
add
mov
pusha
(bad)
mov
add
fsub
mov
inc
xor
imul
cmp
cmp
icebp
sub
ror
jae
or
out
cmp
adc
arpl
(bad)
adc
pop
test
lea
inc
nop
sar
mov
int
(bad)
fisub
cmp
dec
std
(bad)
sar
test
dec
jns
cmp
push
popf
adc
rol
push
or
fcmovnu
xchg
movs
mov
mov
ret
mov
dec
fnstcw
inc
mov
lds
mov
(bad)
and
cmp
or
fwait
call
pop
pushw
jl
adc
test
cwde
mov
adc
cmp
inc
fldcw
xor
jno
push
in
xor
push
(bad)
arpl
int
cli
pop
cmp
adc
add
mov
xor
pop
(bad)
inc
pop
xchg
sbb
xor
dec
dec
dec
cmp
pop
dec
scas
cwde
popf
sbb
not
cmp
rcl
sub
shr
push
and
cmp
mov
jnp
std
jg
ss
shl
sbb
or
mov
dec
mov
cwde
ja
lods
pop
mov
pop
push
jns
mov
rcl
lahf
jecxz
xor
ins
stos
ja
dec
lods
fst
lods
jo
xchg
or
xor
push
sub
or
aas
jnp
mov
cld
adc
ins
ss
loop
sbb
arpl
call
ror
xchg
ins
pop
push
sub
hlt
xchg
jecxz
stos
sub
jmp
int3
or
(bad)
pop
ss
sub
push
inc
ret
test
arpl
xor
out
push
mov
pop
out
pop
les
movs
fistp
jl
mov
stos
pop
iret
mov
outs
cli
xchg
loope
fbld
shl
push
pushf
shl
xchg
push
shr
rol
call
into
adc
pushf
jb
inc
into
jb
cmps
jo
sahf
rcr
inc
mov
lods
cwde
xor
xor
jp
cmp
(bad)
sti
or
fdivr
adc
int3
popf
sbb
jb
sbb
imul
add
xchg
xchg
mov
fistp
mov
call
iret
shl
push
mov
repz
mov
sub
addr16
fwait
lea
or
xlat
adc
fdivr
jno
jne
(bad)
push
int3
add
fistp
xchg
(bad)
movs
adc
dec
and
xor
push
dec
xchg
sub
in
outs
add
pop
ss
mov
jnp
cli
jge
nop
xchg
jl
mov
push
sub
mov
mov
lods
setae
sub
and
pop
push
inc
add
push
cwde
pop
test
adc
pop
and
mov
pop
sub
or
push
xchg
loopne
out
cmps
xchg
fimul
cmp
push
fst
add
mov
mov
(bad)
xor
mov
dec
les
leave
pop
cwde
(bad)
pushf
xchg
and
rcr
std
(bad)
jge
dec
repz
scas
push
pop
fimul
add
test
push
daa
push
lock
ins
pop
rcl
and
inc
nop
sbb
push
(bad)
test
xchg
and
dec
ret
push
push
inc
ss
xchg
fist
jmp
and
mov
or
sbb
xchg
sub
addr16
sbb
mov
repnz
adc
sbb
dec
imul
push
je
xor
mov
xchg
movs
(bad)
adc
jp
shr
sbb
fs
or
push
sbb
mov
mov
fsub
stc
es
stos
mov
pop
inc
jg
cwde
pop
ins
inc
inc
test
dec
or
dec
inc
lods
mov
push
mov
repnz
push
ss
(bad)
mov
push
xchg
sbb
gs
push
pop
mov
push
mov
mov
mov
jp
dec
stos
ja
call
iret
sbb
push
xlat
and
ss
dec
out
mov
jnp
sub
inc
les
sub
cmc
test
stos
jecxz
retf
jp
mov
dec
lods
cmp
int
dec
(bad)
clc
lds
sbb
mov
test
int
sub
dec
arpl
inc
dec
dec
inc
push
pop
ins
neg
sub
hlt
mov
sub
push
loope
pop
push
and
or
sbb
mov
movs
ins
sub
nop
jb
and
sbb
jno
inc
daa
mov
stos
pop
or
retf
add
or
cmps
lahf
iret
arpl
mov
or
and
inc
push
jmp
(bad)
ja
push
add
mov
je
inc
dec
(bad)
dec
ror
movs
pop
xchg
jp
das
push
mov
ror
sub
stos
stos
fmul
adc
mov
in
cld
popf
mov
sbb
mov
enter
cdq
aaa
mov
lds
mov
or
pop
pop
out
icebp
add
clc
(bad)
enter
inc
(bad)
std
arpl
outs
out
or
xchg
in
enter
jle
shl
out
push
adc
fild
repz
test
mov
loope
ror
add
lea
in
mov
inc
cld
mov
cwde
xor
icebp
dec
jmp
pop
adc
or
pop
dec
push
pusha
mov
lds
mov
mov
data16
jmp
in
dec
adc
xchg
mov
and
jg
ja
pop
fadd
add
xchg
sub
aaa
retf
test
jb
cmp
jns
sbb
add
xor
xchg
inc
shl
popa
pop
push
mov
push
aam
fstp
dec
mov
aad
ins
push
arpl
inc
ret
cmps
mov
pushf
push
gs
leave
dec
popf
scas
jmp
inc
pushf
sub
(bad)
xor
mov
ins
mov
add
dec
adc
imul
adc
xor
outs
push
mov
or
in
repnz
into
call
cdq
clc
push
dec
or
mov
mov
xor
cmps
xchg
sbb
jg
or
mov
sbb
inc
add
fistp
push
adc
mov
enter
sub
xlat
push
fild
sub
std
add
out
div
jle
adc
push
sub
pop
cdq
mov
shl
sub
mov
psubw
popa
(bad)
push
xor
dec
dec
jae
les
mov
inc
mov
dec
inc
mov
mov
xchg
cmp
scas
xchg
dec
push
sbb
ins
and
push
mov
ret
jb
xlat
dec
out
sbb
mov
push
mov
pop
sahf
pop
dec
in
daa
push
add
test
loop
dec
shr
shr
cmp
sub
adc
jno
not
mov
mov
enter
mov
dec
cmp
mov
lea
jge
lea
lahf
push
cmp
pop
adc
test
ret
std
jg
mov
cmp
call
push
jmp
out
or
xchg
push
sub
das
xor
and
dec
cmp
jl
xchg
pushf
add
mov
dec
xchg
jl
sbb
(bad)
popf
das
loopne
adc
(bad)
repnz
loop
(bad)
xchg
setl
inc
popa
inc
pop
sbb
cmp
xchg
mov
jg
cmp
sti
cwde
push
mov
nop
pop
sbb
pop
aas
retf
adc
inc
in
pop
add
int3
mov
mov
jns
pop
sbb
mov
outs
adc
mov
adc
sbb
and
movs
push
int
cli
add
cmps
loop
mov
xchg
ins
in
xor
fsubr
aaa
(bad)
or
jmp
xor
xor
cmp
mov
aad
cmp
xchg
movs
jae
cmc
sysenter
push
daa
cmps
xor
xor
fild
and
jge
mov
xor
xchg
jge
ins
xchg
fs
mov
popf
mov
out
ins
push
push
push
imul
push
ins
movs
push
arpl
aas
loope
mov
aaa
xchg
fmul
mov
and
mov
cmp
cmps
xor
cdq
pop
ror
dec
push
xchg
mov
xchg
add
mov
jne
pop
sbb
pop
cmp
cmp
inc
cli
mov
(bad)
into
dec
xor
(bad)
(bad)
cli
xor
loop
(bad)
loopne
pop
jecxz
mov
push
mov
test
mov
call
pop
or
cmps
adc
jae
push
and
push
push
stos
add
test
imul
mov
and
inc
dec
in
xchg
mov
dec
cli
sbb
adc
push
pushf
pop
mov
xlat
mov
dec
cmp
les
inc
add
sub
mov
ret
outs
mov
sub
arpl
mov
in
sbb
and
aad
sbb
jg
ja
in
rcr
jae
xor
xchg
gs
es
jge
int3
lahf
std
cmp
or
or
in
cmps
lds
inc
into
mov
(bad)
(bad)
rcl
daa
ja
dec
int
inc
adc
stos
adc
push
dec
shl
sar
fdivp
inc
imul
pop
add
shr
sbb
cwde
mov
dec
lods
mov
mov
push
jb
xor
hlt
aam
xchg
(bad)
out
cmps
sbb
or
popf
mov
not
into
std
cmp
lea
out
dec
pop
or
push
xor
dec
dec
dec
sbb
scas
push
int
into
jb
jno
(bad)
ret
cmp
outs
push
out
adc
outs
dec
jbe
mov
nop
stos
aam
pop
aam
xor
adc
out
mov
sub
loopne
inc
jecxz
cmp
xchg
xchg
mov
and
sbb
test
repz
xchg
mov
aam
add
push
cmps
jnp
dec
retf
movs
cs
push
xor
ret
mov
jecxz
inc
or
stos
(bad)
aam
(bad)
rcl
adc
push
adc
jmp
hlt
nop
mov
jl
rol
retf
or
xor
and
pop
cld
pop
mov
xor
sti
inc
imul
push
push
daa
mov
cwde
dec
inc
xor
in
mov
(bad)
lods
xor
(bad)
jbe
inc
jp
xchg
jmp
sbb
push
mov
div
sub
push
fwait
lock
push
movs
mov
xor
xchg
cmp
jg
lea
pop
outs
stos
mov
gs
xchg
lds
add
mov
inc
stos
(bad)
ins
lahf
dec
jne
push
sbb
sub
mov
out
cmp
inc
aad
push
mov
xor
stos
outs
imul
cdq
cmp
out
pop
retf
cwde
dec
aam
(bad)
or
pop
outs
jle
add
pop
push
xchg
ret
dec
fs
ror
jge
fstp
or
shl
mov
in
mov
push
cli
cmps
add
dec
sub
mov
mov
pop
xlat
nop
xlat
sar
call
inc
mov
cmp
dec
stos
pop
shr
lods
int3
loopne
pusha
pop
inc
sbb
push
mov
pushf
sbb
dec
in
(bad)
icebp
(bad)
ror
frstor
add
mov
push
ret
mov
sub
ss
outs
inc
add
shl
add
das
mov
test
int3
jbe
sar
je
adc
cmp
pop
mov
pop
mov
and
adc
or
fistp
or
sti
adc
out
(bad)
sti
mov
mov
sub
inc
jp
push
in
push
ins
ret
test
push
pushf
sub
push
pushf
pop
outs
repnz
mov
stos
(bad)
iret
in
cmp
jle
test
mov
xchg
mov
mov
xchg
cmp
pop
iret
push
jnp
lock
fcomp
(bad)
push
lahf
call
sbb
ins
pop
or
pop
jmp
adc
dec
mov
out
lock
int
mov
jp
jmp
sbb
pop
inc
xor
and
sbb
jnp
jp
xor
int3
and
lods
and
or
mov
pop
rol
ja
xchg
pop
std
dec
inc
push
or
ret
xor
push
or
pop
mov
jmp
out
and
xrstors
xor
cmp
push
daa
aas
pop
shl
push
sahf
imul
or
add
and
cmp
hlt
sbb
add
push
mov
push
pop
pop
jge
pop
mov
cmp
adc
xor
xchg
ins
ficomp
arpl
and
mov
pop
rcr
(bad)
mov
sbb
ins
cmp
mov
inc
repnz
add
jnp
leave
adc
jo
jge
(bad)
push
les
leave
pop
lea
mov
sbb
mov
mov
test
call
sbb
ins
sub
sbb
xchg
pop
int
inc
sbb
dec
lods
in
sub
fstp
cmp
jecxz
cmp
cmovno
mov
mov
jg
push
outs
arpl
jne
lock
sbb
mov
sub
mov
(bad)
mov
addr16
pop
dec
push
or
add
dec
or
jecxz
or
retf
aas
fcom
dec
es
or
call
dec
pop
(bad)
scas
cwde
jmp
rol
pop
in
dec
xchg
pop
inc
mov
js
arpl
out
in
(bad)
fs
mov
sbb
push
fs
and
or
aam
shr
jne
ds
pop
or
pop
adc
(bad)
jle
shl
out
adc
fldenv
popa
jmp
xor
and
dec
(bad)
ficomp
or
pop
fisub
mov
pop
pop
and
jmp
call
cs
cld
cmp
cld
pop
sub
in
sbb
mov
jo
retf
addr16
xchg
icebp
jmp
ret
(bad)
fild
jo
(bad)
dec
jl
rol
pushf
lea
scas
fidivr
pop
call
ins
clc
loopne
cmc
aam
dec
add
mov
push
lahf
mov
lock
lods
and
sub
add
dec
(bad)
xlat
out
pusha
neg
inc
add
cwde
nop
dec
test
xor
not
ror
or
mov
lea
push
or
inc
neg
add
xor
sar
scas
jge
and
call
jae
dec
jo
fdiv
sahf
(bad)
mov
pop
stos
add
jmp
ja
(bad)
retf
shr
add
dec
dec
loopne
push
loopne
sub
add
cmp
ja
fwait
mov
xchg
pop
addr16
mov
xor
scas
cmp
sbb
(bad)
addr16
stos
mov
add
fstp
dec
stos
retf
scas
cmp
(bad)
xchg
adc
cli
mov
repz
fidiv
pop
pop
pop
sar
jns
jl
push
xchg
cmp
cs
aaa
(bad)
stos
cmps
outs
dec
arpl
sbb
mov
arpl
jnp
pop
push
les
jle
lods
stc
mov
imul
push
aad
jmp
or
cmp
jg
push
out
adc
jno
dec
dec
(bad)
add
dec
jl
in
mov
cwde
jne
(bad)
mov
or
pop
(bad)
sub
cmps
pop
mov
xor
outs
cdq
nop
adc
mul
shl
pop
push
cmp
mov
ins
push
fiadd
push
xchg
mov
clc
jbe
sub
add
pop
inc
dec
dec
aas
jmp
sub
cmp
sbb
cmp
popf
adc
dec
add
pop
icebp
pop
or
sub
std
sahf
inc
test
sbb
out
dec
pop
cs
xor
pop
fwait
mov
or
call
stc
rol
cmp
xchg
ss
fld
(bad)
es
rcl
xor
pop
popf
rcl
adc
sub
push
push
int
addr16
xor
hlt
jne
rcr
into
mov
add
cmp
jg
cmp
sub
or
pusha
and
pop
add
rol
mov
xor
inc
(bad)
jo
mov
pushf
push
xchg
add
sar
lock
cwde
sub
int3
movs
std
stos
iret
dec
sbb
inc
jns
jge
jb
dec
dec
sub
cmps
adc
pop
inc
fcom
rcl
push
pop
or
sub
jns
in
mov
pop
push
cmp
test
xor
mov
mov
shl
jecxz
mov
sar
xchg
retf
mov
sub
push
inc
mov
pop
add
outs
movs
mov
add
inc
pop
xlat
sub
out
std
xchg
jge
retf
mov
stos
or
pop
xor
pop
and
mov
or
xlat
dec
mov
leave
pop
push
jbe
dec
inc
push
pop
out
pop
mov
mov
dec
loopne
into
cmps
mov
ret
lock
mov
in
cmc
aad
xchg
mov
loop
fdivr
push
push
push
push
frstor
mov
sar
adc
mov
xchg
(bad)
xor
or
or
add
ss
pop
mov
push
xchg
dec
dec
mov
cmps
idiv
mov
(bad)
test
iret
xchg
les
mov
repnz
in
xchg
push
fcomp
jecxz
mov
loop
int
imul
sub
call
mov
je
cdq
inc
add
sbb
out
xchg
inc
xchg
inc
clc
std
in
dec
lock
in
dec
dec
inc
in
fdiv
mov
mov
idiv
mov
xchg
or
retf
hlt
push
fbstp
sub
(bad)
cli
push
(bad)
test
inc
pop
(bad)
stc
inc
(bad)
mov
das
push
out
pushf
test
pop
daa
and
in
inc
cdq
sar
out
and
jmp
dec
fwait
mov
inc
popf
jge
and
lods
xchg
jl
sub
mov
jge
and
bound
hlt
mov
mov
ins
mov
and
sub
stc
adc
cld
test
loopne
(bad)
fcomi
out
stos
dec
(bad)
xchg
cmp
mov
gs
sbb
scas
jmp
test
push
(bad)
pop
pop
or
in
mov
jno
dec
cmp
pop
and
xchg
jmp
jo
and
fcom
out
call
retf
mov
bound
fcom
rcr
mov
sub
or
sub
mov
sub
xchg
das
mov
pushf
push
cmps
dec
shr
ins
movs
sub
mov
les
push
push
mov
push
push
inc
cmp
lods
ds
aas
pop
jmp
push
pop
dec
mov
loopne
push
pop
sbb
push
jge
pop
xchg
cmp
ds
sbb
rcl
xlat
mov
add
addr16
inc
jmp
and
(bad)
ss
test
jg
movs
sub
loopne
sbb
push
push
retf
or
push
jno
jge
push
movs
les
aaa
clc
add
sbb
sub
inc
cmps
and
and
cmp
popa
and
jae
inc
repnz
fisttp
add
mov
call
out
mov
retf
movs
sub
adc
fdiv
pop
cmp
lods
cmp
or
dec
xor
mov
sti
pop
icebp
mov
or
adc
loop
outs
out
nop
sub
add
lods
neg
mov
js
sub
sub
xchg
mov
push
pop
pushf
fwait
pop
stos
xchg
cmp
mov
adc
ins
test
jl
pop
shl
arpl
hlt
mov
dec
push
and
mov
gs
movs
in
dec
out
jo
loopne
ret
cwde
(bad)
popf
movs
inc
push
mov
mov
mov
cdq
rcr
mov
pop
mov
arpl
call
pop
add
cmp
mov
pop
ins
mov
sub
aas
cwde
test
fcmovnu
push
xchg
sbb
imul
sub
shl
pop
mov
mov
fdecstp
pop
in
stos
call
aaa
pop
call
pop
adc
loop
in
lds
pop
or
cs
cmp
fcom
dec
inc
(bad)
daa
(bad)
loopne
cmps
loopne
sub
imul
repnz
fcom
push
mov
cmp
div
mov
nop
mov
enter
imul
dec
into
jmp
inc
sub
pop
lock
sbb
mov
and
sbb
pop
ret
inc
pop
cmp
inc
mov
push
loop
jo
nop
jmp
stos
cmc
jb
std
aad
xchg
movs
call
adc
pop
nop
push
pop
adc
cmps
inc
cmps
or
jne
aam
ret
(bad)
push
xor
pop
ss
imul
push
fnsave
test
pop
push
pop
jecxz
test
mov
loopne
add
pusha
push
xchg
fsub
fidiv
in
sbb
adc
clc
pop
clc
repnz
addr16
cmp
loop
pop
adc
push
cmc
fisub
dec
call
xor
or
cmp
dec
mov
inc
test
rcl
xor
(bad)
outs
fisttp
sbb
and
fistp
pop
mov
gs
cmp
dec
xchg
repnz
test
out
xchg
xchg
test
mov
loop
mov
cmp
icebp
push
mov
jae
retf
mov
jnp
adc
add
loopne
push
push
adc
sbb
neg
out
cld
stos
cmps
stos
xor
or
push
ins
mov
ja
mov
dec
fwait
add
rep
(bad)
mov
push
leave
sbb
xchg
scas
and
push
jne
sub
jmp
mov
out
cld
scas
pusha
xchg
cdq
ret
or
inc
inc
sbb
mov
add
jo
or
ficom
cld
inc
fdiv
ret
mov
pop
xchg
int3
mov
push
cmp
ret
add
paddsw
hlt
add
fidiv
pop
dec
cwde
mov
or
iret
cmps
pop
out
inc
mov
inc
jmp
ret
repnz
test
jbe
das
xchg
retf
sti
hlt
stos
dec
xor
in
mov
ror
repz
dec
jno
and
fsub
cmp
pop
popf
mov
cmps
sub
dec
imul
scas
(bad)
out
in
out
cdq
pop
cli
sbb
or
call
mov
test
add
(bad)
xchg
in
pop
sti
mov
std
loopne
mov
in
repz
out
inc
(bad)
inc
clc
pop
mov
test
mov
gs
xchg
sbb
aaa
add
adc
fwait
mov
shr
aaa
sti
pop
or
loopne
por
retf
push
mov
add
push
mul
mov
arpl
fnstcw
in
in
je
xchg
push
(bad)
xchg
push
loope
jmp
sub
push
addr16
dec
sub
inc
and
dec
adc
jl
or
dec
cmp
cmp
add
mov
cmp
xchg
or
or
add
ins
fst
pop
lods
fwait
aam
add
mov
mov
dec
leave
sahf
pop
out
outs
ss
add
aas
jbe
mov
stos
dec
loop
ja
pop
jbe
add
and
sti
push
xor
xor
push
fisubr
in
xchg
mov
push
jno
repz
xchg
push
(bad)
pop
rcr
aad
adc
mov
dec
(bad)
adc
(bad)
cmp
pop
sbb
add
pop
inc
stos
xor
inc
jp
sub
xor
mov
fstp
cmps
mov
mov
ins
out
not
adc
out
jae
pop
adc
or
inc
(bad)
jns
jbe
stos
sub
cs
ror
retf
cmp
dec
and
out
fmul
mov
or
mov
test
cmps
ret
pop
les
xchg
jne
dec
out
xchg
dec
sbb
add
sub
jg
iret
fidiv
stos
cmp
loopne
adc
cmc
call
call
ret
fdiv
mov
ja
out
cwde
mov
mov
sub
out
xor
or
fwait
push
(bad)
jl
fild
test
aam
mov
ss
(bad)
in
mov
pop
rcr
(bad)
mov
(bad)
mov
pop
adc
dec
or
push
loope
fcmovb
cmp
mov
mov
cld
dec
jmp
rol
iret
call
das
cmp
add
je
jbe
cmp
lds
lock
dec
push
rol
sbb
push
mov
fnstsw
loop
sub
(bad)
mov
aad
(bad)
push
rol
adc
ins
push
mov
jmp
mov
lods
pop
mov
push
repnz
les
mov
or
mov
fdivr
(bad)
and
popa
pop
mov
hlt
rol
cmp
in
fdivr
and
pop
sub
mov
call
mov
and
push
push
aad
std
mov
pushf
(bad)
mov
jge
dec
dec
ffreep
lea
pop
xor
jmp
or
and
add
add
das
data16
xchg
pop
aaa
aas
adc
test
icebp
mov
adc
mov
fwait
jmp
(bad)
push
jmp
enter
sub
dec
add
cmp
shl
xchg
ds
push
jnp
out
add
mov
push
xor
xchg
das
inc
jecxz
xchg
in
in
fs
mov
gs
inc
idiv
jnp
jp
lds
int
and
(bad)
mov
push
int3
test
mov
xchg
mov
loope
and
pusha
iret
jb
mov
mov
push
and
jmp
fcom
sar
push
or
sbb
not
xlat
xchg
imul
loope
daa
loopne
enter
and
lods
jbe
mov
not
stc
dec
cs
ss
mov
cmps
test
adc
(bad)
shl
ret
fwait
out
mov
push
lods
jmp
loop
mov
add
lods
nop
retf
pop
mov
loope
mov
jp
dec
xchg
mov
xchg
retf
xor
adc
dec
mov
xchg
and
push
jbe
loope
enter
cmp
jo
cmp
cmp
aaa
cmp
hlt
aam
loop
stc
dec
adc
lods
int3
loope
(bad)
cs
aaa
(bad)
rcr
cmp
inc
jmp
xor
push
movq
mov
lods
xchg
xchg
push
xchg
in
rcl
and
mov
stos
pop
sub
ja
add
popf
mov
(bad)
jns
cmp
into
dec
ins
cmp
xor
data16
les
jmp
lea
fstp
sub
loopne
sbb
cmp
mov
int3
(bad)
movs
inc
adc
sub
dec
xchg
push
adc
lock
pop
lea
pop
cld
xor
pushf
lahf
cld
or
pop
xchg
shl
pop
xchg
inc
fcomp
adc
div
test
(bad)
loop
int
fidiv
popa
sbb
std
stos
ret
mov
dec
cld
scas
inc
xor
xor
mov
movs
hlt
sti
push
inc
sti
push
push
stos
(bad)
mov
push
pusha
call
punpckhbw
xchg
ins
sub
push
or
leave
std
cmps
sub
jo
not
adc
loopne
sub
gs
fistp
int
sub
(bad)
pop
or
imul
(bad)
cwde
test
push
mov
inc
not
out
aam
xchg
(bad)
movs
pop
loopne
ins
xlat
div
xchg
call
sar
fld
push
and
ins
dec
jle
dec
add
mov
repz
xor
mov
aas
je
int3
and
mov
mov
mov
inc
sub
or
adc
jge
adc
rcl
es
push
mov
ja
push
stos
imul
cli
sbb
(bad)
pop
gs
sbb
push
mov
xor
dec
mov
sbb
popa
mov
pop
sahf
ins
adc
add
push
push
cmp
jge
push
int
adc
mov
mov
cmp
ds
pop
xchg
pop
out
jnp
hlt
ja
push
and
mov
aas
ret
inc
loopne
push
jge
sbb
(bad)
xchg
pushf
std
xchg
lahf
icebp
rol
inc
scas
add
fwait
add
xlat
and
xchg
mov
daa
inc
xchg
clc
aaa
cld
(bad)
es
add
add
or
inc
test
push
(bad)
not
mov
loopne
mov
imul
iret
push
inc
push
xor
jmp
rdpmc
pop
lock
pop
call
jmp
daa
sub
cmp
call
gs
lock
out
test
push
stos
jnp
ror
pop
jp
jo
(bad)
(bad)
nop
(bad)
mov
mov
xor
add
dec
call
pusha
jmp
(bad)
mov
ret
mov
adc
ja
push
push
iret
aas
cmp
fstp
fdivr
jne
(bad)
and
movs
cdq
push
add
and
cmp
lock
push
inc
lds
lods
fs
fcomp
pop
xor
fsubr
mov
loopne
loope
mov
lock
xor
sub
adc
pushf
(bad)
jecxz
or
dec
push
sti
jecxz
and
fbstp
and
data16
mov
pop
imul
mov
jb
mov
outs
xchg
out
xchg
inc
ret
and
out
sub
mov
icebp
sbb
retf
push
mov
loop
push
scas
fcmovu
loope
leave
cld
sbb
in
cmp
stc
push
pop
jp
jl
inc
out
push
aad
adc
sar
das
push
jmp
adc
test
retf
jo
jb
mov
inc
xor
test
mov
cmps
mov
sbb
inc
cmp
into
mov
aad
xchg
jb
imul
(bad)
call
shl
loope
push
push
add
stos
xor
jne
add
div
ffreep
push
shl
pop
add
retf
mov
and
inc
mov
push
dec
or
inc
lods
xor
pop
jl
adc
xchg
enter
cmp
xchg
shl
pushf
and
jae
adc
call
mov
inc
std
sti
hlt
pop
aas
stos
and
jle
out
push
(bad)
pop
mov
xchg
retf
iret
jmp
mov
add
add
jbe
pop
test
xchg
mov
push
mov
in
clc
pop
and
aam
or
ins
xchg
xchg
pop
pop
xchg
lods
push
pop
adc
add
out
in
ja
mov
pop
xchg
cmp
inc
fmul
add
cmp
or
aad
ja
ret
ret
inc
push
fcomip
jge
lahf
dec
dec
loope
jo
pop
push
jg
sub
sub
sub
popf
mov
test
mov
cmp
je
adc
jo
pop
popa
cmp
(bad)
paddw
call
dec
push
jnp
add
add
adc
retf
sbb
(bad)
pop
lahf
fs
dec
imul
sbb
sbb
xor
daa
aad
mov
sbb
or
or
ins
or
pop
push
clc
sub
push
and
adc
inc
mov
cmp
or
call
test
data16
stos
mov
iret
mov
inc
pop
jae
inc
xor
sub
pop
inc
push
jo
cmps
aaa
fcom
adc
mov
add
pop
xlat
add
mov
test
aaa
lods
aaa
push
stos
or
cld
jle
xlat
xchg
cdq
cwde
inc
push
add
push
cmc
(bad)
inc
dec
popa
dec
scas
cmp
jbe
inc
int
inc
daa
push
push
jae
pop
ja
xchg
push
std
rcr
ins
nop
push
popa
xchg
in
shr
sar
out
fnstenv
jmp
inc
mul
mov
out
hlt
dec
fidiv
mov
xor
pop
imul
mov
push
dec
stc
aas
leave
xchg
or
sbb
call
xor
inc
rcr
inc
into
(bad)
hlt
push
shl
jge
inc
sbb
and
lods
pop
fsubrp
push
or
jno
adc
and
fdiv
mov
test
mov
xor
inc
in
test
ret
gs
sbb
pusha
cmps
xchg
arpl
adc
ins
in
fsub
push
cld
loope
popa
adc
jl
and
pop
ret
loopne
scas
or
push
out
sbb
mul
popa
dec
dec
mov
adc
addr16
mov
cmp
mov
imul
(bad)
out
dec
adc
pop
cmp
cmp
clc
push
mov
(bad)
mov
and
xor
add
(bad)
sar
and
sub
push
pop
in
inc
jo
scas
pop
sbb
mov
mov
clc
adc
test
cli
mov
repz
(bad)
push
cmps
push
cmp
mov
cmp
jmp
les
out
adc
jg
iret
inc
dec
stc
cmps
lahf
jmp
ins
pushf
jno
dec
jnp
ins
xor
adc
xchg
or
add
test
mov
rcl
dec
pop
pop
fisttp
mov
repz
movs
jl
jne
push
sub
arpl
movs
push
repnz
inc
(bad)
mov
in
sub
push
(bad)
int3
rcl
adc
and
fmul
dec
out
inc
inc
fcmovb
push
cmp
jmp
jbe
sub
xor
dec
mov
sahf
pop
int
in
lea
fcom
mov
ror
gs
mov
xor
cwde
sbb
call
pop
int3
push
and
mov
push
mov
call
mov
push
int3
jge
mov
and
or
xchg
aas
pop
fcom
xor
fwait
pop
repnz
loop
xchg
push
push
sbb
mov
push
sub
push
jno
(bad)
lahf
add
dec
cmp
or
shr
aam
fsubr
sub
retf
dec
pusha
mov
ins
mov
fs
(bad)
and
mov
scas
mov
fld
(bad)
jecxz
(bad)
dec
inc
inc
cld
dec
test
(bad)
cld
loopne
pop
add
fbld
inc
mov
pop
ret
fs
mov
stos
jmp
add
mov
rol
add
cs
cmc
and
sub
cmps
add
scas
mov
cs
ficom
fbstp
(bad)
pop
xor
inc
mov
xor
sbb
adc
xor
push
pushf
in
pushf
and
mov
xor
outs
push
adc
and
dec
push
pop
cmp
push
jno
scas
out
push
ins
popf
fs
out
mov
mov
sub
mov
mov
cmp
sbb
mov
arpl
push
lea
sahf
mov
fcom
xor
rcr
lods
lods
and
retf
movs
jge
cmp
pop
dec
xor
push
mov
and
shl
mov
addr16
sub
xor
cwde
lods
sub
sub
ins
rol
fistp
mov
dec
jmp
fcmovnu
mov
outs
enter
stos
neg
sub
hlt
mov
cmp
mov
add
or
pusha
pop
out
xchg
in
mov
pop
ins
sub
not
aam
mov
ds
mov
aam
jle
int3
dec
fild
iret
stos
dec
push
xor
sbb
inc
ins
cwde
inc
in
dec
add
enter
das
in
in
std
fisubr
movs
imul
jle
stos
and
int3
repnz
(bad)
das
inc
add
push
push
jno
pop
adc
stc
adc
adc
push
and
cmps
jne
sahf
xor
in
mov
ins
rcr
pop
mov
repz
jo
dec
push
dec
pop
lods
shl
mov
and
jnp
sar
test
fnstenv
mov
add
imul
mov
dec
(bad)
pusha
in
icebp
pop
or
cmp
inc
in
push
push
out
and
mov
lea
enter
xchg
mov
xchg
xor
jmp
imul
fcmovnu
(bad)
adc
inc
aaa
adc
and
sub
sub
mov
(bad)
dec
fsubr
and
mov
test
mov
xchg
push
dec
test
dec
jle
cmp
cmp
mov
dec
xor
mov
addr16
popa
ja
inc
aaa
(bad)
aam
in
paddusb
clc
push
xchg
ret
push
mov
ss
jbe
(bad)
pop
xchg
repnz
out
les
clc
pop
mov
test
add
loop
jecxz
mov
nop
dec
fst
(bad)
fimul
pop
call
jle
jae
nop
addr16
mov
pushf
mov
(bad)
adc
pop
arpl
imul
ins
adc
outs
xchg
shl
jnp
mov
stos
mov
and
xchg
or
je
jo
adc
mov
and
pop
rcl
nop
fwait
push
inc
cdq
dec
cmp
pop
hlt
mov
test
sar
cmp
pop
xchg
movs
dec
push
and
mov
ds
and
in
mov
lea
ret
xor
add
in
fwait
jecxz
outs
aaa
icebp
pop
icebp
pushf
ds
mov
sbb
push
push
sub
push
je
ins
mov
push
xor
xchg
outs
scas
icebp
adc
call
push
sbb
dec
arpl
cdq
aaa
and
sbb
dec
add
push
mov
sahf
loope
shl
sub
mov
(bad)
dec
push
inc
pushf
imul
or
or
into
add
push
retf
push
loopne
in
ret
add
xor
mov
(bad)
push
xor
cmp
(bad)
cld
bound
sbb
std
mov
inc
xor
rcr
repnz
ret
test
push
mov
les
cmps
pop
and
fst
mov
xchg
cli
cmp
aaa
jne
in
outs
push
mov
dec
mov
outs
shl
mov
inc
sbb
jmp
(bad)
mov
xor
or
in
lds
cmp
movs
in
(bad)
(bad)
aam
sbb
fisub
icebp
shr
xchg
movs
sub
ja
stos
xor
lods
xchg
clc
out
mov
addr16
iret
and
push
test
ja
xor
push
cdq
mov
cmp
or
adc
ins
sub
and
pop
daa
xchg
vdivss
scas
sbb
xchg
hlt
fidiv
add
mov
jge
icebp
stos
daa
lods
scas
mov
mov
dec
and
mov
imul
aaa
xchg
pop
push
sub
xor
push
adc
mov
and
jecxz
dec
fisttp
jae
into
inc
or
sub
iret
(bad)
push
xchg
fsub
and
lea
in
loope
fcom
mov
cmps
out
adc
in
pop
hlt
sbb
mov
pop
push
cwde
ds
rcl
or
nop
imul
dec
stc
rcl
test
add
mov
push
add
mov
pop
cwde
mov
xor
nop
and
mov
jge
mov
sub
lea
jle
pop
pop
jb
aas
push
mov
adc
ins
add
jne
pushf
inc
int3
cmp
xor
lahf
xchg
int
lock
outs
popa
jne
movs
mov
mov
test
push
int3
push
or
mov
imul
push
add
movs
mov
adc
loop
mov
test
xchg
fucom
mov
adc
fisub
fwait
jl
mov
add
arpl
(bad)
push
std
inc
sbb
xchg
sbb
outs
imul
pusha
(bad)
add
sbb
hlt
inc
pushf
sbb
inc
push
mov
lods
sbb
xchg
ficomp
int
test
sbb
jg
outs
pushf
retf
sub
jl
xor
pop
pop
sub
pop
adc
cmp
dec
pop
push
test
jmp
stos
adc
mov
cmp
call
(bad)
sub
cdq
movs
dec
into
(bad)
push
pop
push
mov
xlat
cwde
clc
ret
test
and
dec
rcr
ss
out
mov
sub
idiv
xor
add
jmp
retf
xchg
loope
mov
jnp
loop
ret
icebp
xor
aas
jmp
gs
xchg
out
mov
cmc
ds
xchg
shl
add
inc
sub
pop
cmp
sub
sub
int3
(bad)
lods
fs
push
inc
or
push
or
mov
and
or
fisubr
push
ja
stc
sti
cmps
fisub
push
aaa
adc
mov
mov
sahf
popa
xchg
xor
gs
imul
es
inc
mov
sub
popf
xchg
mov
shl
mov
pushf
jbe
ins
inc
fwait
ret
or
inc
xchg
jnp
dec
fcomp
jge
push
fs
xchg
pop
add
(bad)
jp
aaa
push
pop
xchg
lahf
pop
aam
loopne
stos
daa
mul
push
sub
sbb
lea
jmp
push
shl
clc
sar
(bad)
mov
or
jnp
push
push
dec
jne
cs
inc
enter
in
adc
dec
cmp
call
out
xchg
fdivr
stc
mov
lea
in
xchg
inc
dec
movs
test
pop
repnz
loope
fistp
sbb
adc
fnstcw
add
sar
jg
xchg
mov
pop
push
fstp
mov
adc
ins
adc
fcomp
out
mov
sub
iret
aaa
fistp
inc
out
adc
pop
retf
mov
(bad)
xchg
push
or
ror
pop
push
imul
push
jo
adc
mul
pop
icebp
mov
dec
sub
loopne
pop
aam
pop
fcom
cs
push
dec
inc
add
sub
popf
shr
shl
sub
mov
rcr
fisub
aaa
not
inc
in
sbb
jne
pop
test
jne
mov
jmp
fdiv
dec
ret
sbb
sub
enter
mov
mov
sub
xchg
out
bound
jbe
ja
ret
adc
movs
push
push
jp
pop
push
sbb
aad
ss
sbb
test
xlat
and
xchg
popf
loop
call
adc
pop
jp
push
push
fild
cmps
arpl
test
out
idiv
aaa
pushf
lock
rcr
in
push
dec
sub
xchg
std
pop
bts
mov
adc
sbb
mov
sub
xchg
mov
cdq
das
sbb
stos
or
ss
lock
int
scas
movs
sub
xlat
sbb
pushf
imul
adc
repnz
add
cmp
adc
mov
pop
cmp
arpl
mov
push
fld
and
jp
push
cmp
sub
jmp
adc
xchg
pop
in
into
xchg
dec
aam
xchg
in
sahf
mov
pushf
inc
(bad)
pushf
(bad)
cmc
push
fs
popf
sub
or
jb
aaa
add
or
adc
xor
scas
pop
jp
adc
ret
mov
out
dec
xor
stos
pop
sub
out
fnstenv
outs
pop
jge
rcr
push
loopne
pop
xor
addr16
dec
rcl
pop
les
inc
push
pop
push
jmp
mov
loopne
rcr
push
or
dec
inc
xor
vorps
cmc
xor
clc
daa
pop
jns
call
lahf
pop
imul
arpl
into
jbe
jmp
inc
popf
lock
mov
push
jle
arpl
jge
(bad)
fisttp
bound
test
sahf
pop
out
popf
push
and
test
mov
stc
das
mov
add
pushf
and
push
dec
cli
aad
push
mul
call
int
mov
push
outs
mov
inc
lea
xchg
add
aad
xchg
adc
jne
mov
mov
shl
add
adc
inc
pop
dec
mov
mov
mov
ds
sbb
and
pop
test
pop
inc
bound
sub
(bad)
mov
push
jb
pop
sub
cmp
ficom
retf
sbb
daa
aam
nop
ja
repnz
mov
sub
sti
or
xchg
mov
div
add
add
test
mov
in
test
push
push
daa
fidivr
cmp
sar
push
mov
pop
mov
loopne
arpl
fbstp
rol
jge
std
inc
and
mov
sub
mov
add
xchg
aam
xchg
daa
retf
dec
ret
dec
cmp
push
pop
jns
shl
lahf
push
mov
xchg
aas
arpl
cmps
push
cmps
add
mov
dec
jb
jo
cs
int3
js
push
jp
mov
pop
mov
push
mov
retf
sbb
jae
imul
shl
js
sti
movs
iret
dec
sub
mov
in
dec
xchg
mov
jb
mov
not
pop
sete
add
inc
sbb
jecxz
dec
arpl
fcom
mov
mov
cld
pop
mov
pop
cmp
jbe
arpl
and
push
adc
pop
std
loopne
mov
ins
jae
add
sbb
mov
movs
sub
mov
je
retf
dec
push
mov
and
inc
ja
ins
push
arpl
out
rcr
into
cmp
sahf
out
and
cli
pop
inc
mov
popf
or
sbb
dec
cld
mov
je
int3
pop
xchg
push
mov
jb
(bad)
in
scas
dec
pop
imul
jg
add
ins
mov
aaa
pop
xor
sahf
lods
aad
inc
xchg
ss
xor
jl
fsub
cmp
cmps
jae
pushf
dec
cmps
dec
mov
mov
imul
xchg
pusha
call
jmp
outs
ret
mov
loope
jnp
jmp
push
mov
shl
rcl
aad
imul
pop
shl
mov
pop
not
and
pop
(bad)
fcomp
inc
loopne
add
mov
ret
lds
into
mov
mov
mov
out
popf
fisttp
mov
mov
xchg
fcmovbe
arpl
mov
pop
dec
out
mov
loop
sub
in
add
pop
mov
fsubr
les
xchg
add
mov
add
jae
inc
mov
cmp
stos
dec
mov
aad
mov
scas
mov
adc
ret
fidivr
jecxz
dec
mov
sub
xchg
push
aam
arpl
and
mov
add
mov
add
and
sub
adc
mov
add
in
addr16
lea
jle
rcr
jne
sar
(bad)
jg
push
mov
shr
and
jp
jns
inc
pop
xor
loopne
lods
push
test
stc
cld
retf
fidivr
pop
inc
cmp
jmp
rcl
xlat
jne
adc
jge
push
push
ins
mov
bound
sbb
repz
mov
rcr
ja
test
mov
cmp
sub
aaa
sub
mov
inc
mov
scas
fidivr
and
(bad)
ror
cli
rol
popf
add
cdq
std
push
sub
ja
cli
loope
mov
dec
add
jp
arpl
pop
cmp
xor
dec
arpl
push
xlat
mov
fst
and
pop
inc
stc
mov
rcl
jle
int
mov
call
cld
add
pushf
dec
stc
adc
mov
mov
ja
fadd
sbb
jecxz
pop
push
sub
(bad)
imul
idiv
ins
inc
xlat
out
xchg
xor
or
popa
lahf
mov
lods
bound
mul
mov
xchg
movs
pop
pop
and
inc
sbb
add
stos
add
push
ins
stos
jg
les
call
gs
clc
jge
mov
xor
test
mov
dec
hlt
or
leave
jne
mov
sbb
jp
jno
add
out
adc
cmps
(bad)
xlat
(bad)
mov
loop
add
repz
jmp
pop
scas
cmp
xchg
pop
pop
cmc
dec
xchg
sub
test
cmc
mov
out
xchg
dec
pusha
mov
ret
inc
sub
bound
or
mov
jmp
lock
cmp
inc
jae
add
inc
stos
out
(bad)
loope
jae
pop
sub
cs
mov
das
sub
aam
sub
stc
je
pop
jmp
cmp
xor
clc
cwde
xchg
imul
add
inc
aaa
shr
lock
retf
inc
dec
out
call
movs
mov
push
mov
mov
(bad)
sbb
shr
push
sahf
cmp
je
aam
pop
sbb
sub
sub
xchg
iret
xor
xchg
mov
mov
xchg
in
fmul
push
dec
and
xchg
push
cdq
mov
inc
mov
arpl
mov
out
pusha
lock
call
pop
xchg
xor
ficom
call
daa
mov
fs
sar
imul
jmp
inc
push
cs
pop
inc
push
dec
and
call
outs
inc
call
push
movs
movs
jno
adc
(bad)
cld
xlat
stos
xlat
in
inc
push
cdq
xchg
cdq
sub
cwde
lods
lahf
ret
xchg
mov
lods
fstp
stc
pushf
test
adc
xchg
test
and
sub
sar
imul
loopne
lods
jnp
adc
outs
cmp
and
aaa
std
cmps
mov
mov
dec
push
sub
hlt
retf
pop
xchg
inc
fild
dec
sbb
arpl
test
sbb
(bad)
jae
lock
jl
dec
(bad)
imul
fidiv
pminub
xor
es
dec
cwde
aaa
mov
sub
mov
dec
test
dec
mov
gs
xchg
pop
gs
lea
pushf
dec
xchg
ret
test
test
and
jecxz
cmp
push
(bad)
push
cli
pop
movs
sbb
mov
mov
repz
dec
xor
rol
sub
push
aaa
fisttp
fsubr
dec
push
add
(bad)
shr
mov
sub
jl
or
inc
fist
cld
add
in
xchg
mul
leave
cmps
cs
jle
xlat
imul
ds
jmp
jns
es
cld
repnz
push
push
out
xchg
dec
jbe
pusha
push
push
mov
jp
enterw
cld
lahf
pop
xchg
jmp
mov
shl
xor
pop
adc
jne
(bad)
cdq
(bad)
dec
test
(bad)
into
mul
dec
cmps
add
jnp
sahf
jl
jae
cmp
sbb
jp
arpl
xchg
mov
push
(bad)
cmp
and
pop
test
jmp
dec
jl
xchg
sbb
jge
pop
pop
(bad)
test
clc
(bad)
std
(bad)
jle
or
test
mov
mov
gs
neg
icebp
dec
sbb
pop
pop
push
mov
(bad)
pop
add
pushf
stos
sti
into
imul
or
jae
cmp
add
aad
pop
call
(bad)
pusha
js
sti
mov
jecxz
or
sbb
mov
cmp
out
cmp
ins
movs
mov
jmp
popf
jnp
fcmovnbe
bnd
pop
and
aad
arpl
and
sbb
fist
mov
xchg
sbb
push
add
dec
cs
mov
pop
jae
addr16
rcl
mov
mov
dec
mov
add
loop
aaa
mov
sbb
lea
sbb
cdq
ja
push
and
sti
sub
mov
jne
in
jae
(bad)
or
frstor
lahf
xor
add
dec
dec
sub
mov
push
loopne
mov
imul
jo
(bad)
jne
mov
xchg
(bad)
sub
mov
lds
add
rcl
push
mov
sbb
pop
sbb
mov
adc
jle
dec
xchg
mov
ins
mov
and
iret
movs
cmp
retf
and
mov
pop
shl
cmc
or
xor
addr16
not
dec
mov
xor
(bad)
mov
mov
inc
adc
jp
sub
fadd
retf
fisubr
adc
sbb
(bad)
jae
adc
sbb
aas
js
dec
sub
mov
sbb
pmulhuw
int3
stos
test
cmc
fdiv
mov
add
retf
bound
int
sub
inc
jge
mov
jo
add
fmul
jle
loop
ss
daa
mov
mov
or
(bad)
adc
in
jnp
test
fmul
ficom
xchg
ret
test
fwait
int3
mov
dec
sbb
dec
adc
push
(bad)
xchg
les
push
mov
mov
cld
stc
add
shl
dec
pop
mov
mov
out
adc
clc
ins
into
(bad)
push
test
scas
jge
jg
fwait
xchg
pushf
and
loope
(bad)
sbb
adc
inc
lahf
nop
ret
stos
(bad)
not
adc
(bad)
gs
push
add
jge
bound
movs
popf
adc
jnp
js
xlat
adc
call
push
int3
rcl
mov
sbb
std
fadd
dec
arpl
mov
ror
jnp
cmps
addr16
pop
pushf
xchg
sub
mov
push
out
sbb
mov
jecxz
dec
and
jle
pushf
xor
sub
or
pop
mov
mov
pop
xchg
xor
out
xlat
inc
idiv
mov
sbb
(bad)
jl
into
cmc
hlt
lea
mov
ins
mov
mov
repnz
fsubr
xchg
mov
pop
imul
xchg
retf
jmp
out
xchg
pop
or
add
fsub
add
cmpxchg
in
rcl
fistp
dec
jnp
cwde
fiadd
aam
sub
dec
faddp
loop
sub
dec
inc
cmp
pop
pop
and
push
aas
fcomi
mov
scas
retf
and
inc
out
mov
pop
rcl
ja
mov
mov
xchg
jns
adc
jge
mov
cmp
and
imul
dec
sub
repnz
jg
xlat
adc
lock
ficom
push
adc
cmp
inc
faddp
mov
shr
push
gs
jg
lods
inc
fs
(bad)
int3
lds
ror
inc
retf
rol
stos
mov
mov
retf
mov
mov
call
mov
sbb
sub
hlt
adc
test
mov
mov
call
cwde
sbb
loope
loope
sbb
pop
in
std
sub
adc
push
pusha
out
sub
or
mov
(bad)
in
fcmovu
cmp
and
mov
mov
mov
sbb
outs
sub
mov
sub
jno
addr16
in
mov
outs
inc
dec
mov
dec
std
pop
out
jmp
push
mov
add
and
jecxz
pop
adc
pop
ds
in
push
cwde
sub
hlt
xor
int3
and
nop
lds
sub
addr16
inc
jbe
push
addr16
scas
inc
loopne
jb
loope
jl
fstp
cmp
dec
mov
push
pop
jno
lds
rol
stos
adc
or
jl
or
popa
mov
pop
and
in
stc
xor
and
xchg
mov
mov
fwait
pop
xchg
scas
pop
daa
paddw
repnz
and
mov
mov
data16
mov
add
xor
data16
inc
mov
dec
cmp
fisttp
les
aam
outs
dec
cmp
inc
pop
repz
push
test
dec
sub
mov
xor
popa
jnp
idiv
(bad)
out
adc
(bad)
ror
in
sub
icebp
aas
jg
or
sbb
lock
arpl
fst
xor
cmps
xor
mov
xlat
aas
mov
addr16
add
jge
push
call
popa
sub
dec
mov
and
or
or
int
cmc
les
pop
push
mov
adc
add
sbb
mov
fisttp
call
addr16
dec
js
aas
loop
and
fnstenv
jmp
sahf
push
aaa
jl
or
jae
cli
out
fadd
push
mov
rcr
sub
mov
rcl
mov
mov
mov
cdq
movs
xor
mov
test
idiv
dec
pushf
sub
or
sub
sub
aaa
pushf
jle
xlat
call
bswap
xchg
sbb
sub
mov
iret
sub
cmp
dec
mov
cmp
stc
xor
neg
fsub
leave
xchg
push
mov
out
push
push
jge
leave
cmp
mov
loop
and
std
mov
fcmovnb
pop
pop
jnp
or
mov
dec
fchs
mov
(bad)
leave
test
jmp
xchg
add
add
ret
xor
inc
je
cli
jo
sbb
and
push
stos
mov
daa
xchg
fstp
sub
cmc
mov
mov
sbb
xchg
dec
and
ins
jne
dec
je
ret
je
jmp
pop
repnz
lods
pop
and
aad
not
mov
or
ins
cdq
and
adc
loopne
ins
cwde
fdiv
or
jnp
pusha
pop
dec
sti
inc
add
jb
movs
lahf
inc
cld
sti
pushf
and
xor
pop
arpl
retf
jl
lock
cmp
dec
mov
stos
int
lock
test
pop
push
retf
and
(bad)
fcom
enter
jle
aaa
rcr
add
xchg
dec
stos
ja
lds
inc
out
jne
call
push
mov
cmp
or
lods
pushf
sub
mov
add
sar
xchg
xchg
popa
mov
out
pop
addr16
xor
(bad)
or
clc
dec
ror
mov
popf
addr16
and
xchg
out
in
pop
cdq
push
sub
mov
dec
fnsave
fisubr
cdq
pushf
or
mov
enter
push
dec
leave
dec
fdivr
retf
movs
xor
cmp
pop
pop
in
in
jmp
stc
adc
mov
ja
neg
mov
sbb
and
cdq
jmp
dec
xchg
sub
dec
mov
pop
ds
test
out
call
jl
loop
jle
fbld
call
int
cmp
iret
add
pushf
xor
push
(bad)
or
nop
cmp
xchg
sub
mov
xchg
mov
sar
shl
push
not
lock
mov
daa
pop
rcr
sub
jnp
out
mov
test
inc
jnp
stos
mov
lea
stos
push
ror
push
xchg
call
shr
call
loope
xor
push
sub
cmps
or
mov
lock
jmp
int3
mov
push
pop
cwde
sub
sti
gs
ret
int3
pop
test
xor
sub
add
repz
repnz
xchg
data16
sahf
test
push
ror
cmps
xor
push
or
cmp
aam
mov
in
cdq
sub
inc
sub
les
ret
arpl
xlat
adc
mov
mov
dec
add
fs
mov
imul
xchg
out
dec
cmp
or
mov
mov
ds
addr16
xchg
add
xchg
test
adc
clc
xchg
pop
pushf
cmp
and
mov
clc
xchg
mov
retf
push
fisub
mov
and
mov
pop
gs
sahf
not
std
call
movs
mov
js
call
sub
fbstp
xchg
shl
add
sti
add
dec
pop
jns
fadd
cmp
inc
pusha
out
retf
outs
pop
leave
cs
adc
cwde
out
pop
jmp
(bad)
ret
aaa
push
int3
sbb
xor
movs
and
add
jl
jecxz
pop
push
fucomip
sub
lahf
dec
xchg
ds
inc
leave
or
test
fsub
les
mov
loop
add
test
cdq
les
fnstcw
xor
push
js
adc
xchg
fist
aad
imul
adc
add
xor
jmp
mov
push
adc
fisttp
loope
add
aam
mov
repnz
push
lods
xlat
xlat
push
jecxz
cwde
outs
push
pop
jge
xlat
mov
xor
pop
mov
arpl
inc
mov
cmp
sti
mov
cmp
mov
dec
lods
or
cmp
fwait
daa
pop
dec
shr
and
stos
and
xor
dec
mov
dec
xor
neg
dec
mov
mov
xor
gs
push
mov
pop
loope
out
cmp
sti
paddd
mov
daa
shl
adc
jle
out
ins
shl
inc
jb
xchg
cmp
stos
pop
mov
mov
mov
mov
sub
dec
push
and
dec
push
xor
mov
mov
adc
lahf
xor
add
stos
fmul
xor
xchg
jmp
pushf
dec
neg
int
sbb
push
shl
call
sahf
pop
ret
pop
push
imul
cmp
cmps
int
daa
and
mov
and
es
hlt
mov
pop
xchg
out
rcl
cmp
ins
retf
push
enter
xor
xlat
xor
mul
pop
faddp
fstp
adc
sbb
pushf
loope
loopne
rcr
data16
fisubr
leave
aas
ins
jmp
xor
lahf
hlt
loope
pop
and
shr
call
dec
sar
adc
pop
out
int3
push
pop
push
popa
int3
mov
pop
mov
lods
ja
cld
not
aam
(bad)
pop
stc
add
inc
dec
push
jns
jnp
push
fstp
push
push
jecxz
imul
sub
sbb
fimul
iret
mov
xchg
les
xlat
jo
mov
sub
dec
shl
inc
push
push
cmc
imul
adc
cmp
pop
dec
pop
inc
sub
ficom
dec
mov
jecxz
call
push
push
jne
loope
rcl
sbb
sbb
mov
mov
add
mov
mov
test
mov
mov
jmp
sbb
xchg
popf
mov
mov
xlat
xor
jne
out
ins
push
push
add
inc
xchg
retf
xchg
jo
push
out
and
cmp
sar
mov
aas
xor
ins
fs
lods
xchg
push
add
inc
imul
lock
jl
mov
sub
and
sbb
or
scas
jne
mov
popa
ja
enter
xchg
add
jno
mov
dec
out
das
hlt
imul
lock
cwde
fistp
dec
loop
cld
dec
pop
mov
jno
jg
outs
add
cmp
mov
and
mov
mov
push
pop
inc
repz
sti
and
sub
rcl
adc
xor
sub
mov
mov
xchg
pushf
mov
popa
inc
add
sahf
pop
das
(bad)
jbe
sbb
pop
retf
stos
inc
jl
ror
sub
push
jg
adc
ret
(bad)
mov
cmc
pop
ss
sub
into
pop
push
dec
call
cdq
sbb
xchg
jnp
not
rcr
jb
mov
add
les
call
popf
mov
rcl
out
mov
fnstsw
dec
pop
pop
sbb
arpl
pop
std
ins
pop
jl
pop
jo
dec
jae
cmp
ret
lods
xor
cmp
xchg
mov
sbb
xor
add
jge
mov
pop
adc
push
or
rcr
adc
mov
jb
jne
mov
(bad)
(bad)
out
add
repnz
retf
sbb
out
shl
sbb
stos
push
jae
ret
mov
push
xchg
dec
xchg
cmp
pop
ins
call
or
(bad)
leave
mov
push
shl
pop
cmp
inc
lea
sub
jbe
pushf
jmp
xor
inc
xor
xchg
pop
imul
push
xor
push
and
mov
pop
push
xchg
fwait
push
xchg
dec
cmp
sbb
xchg
pop
fcom
inc
cmps
push
push
(bad)
fwait
lods
arpl
rcl
jle
retf
pushf
dec
in
retf
aam
push
and
ret
(bad)
push
push
retf
mov
inc
call
jmp
nop
rcr
push
xor
pop
jg
shl
movs
mov
dec
hlt
rcr
adc
xchg
dec
xor
outs
ss
sbb
test
shl
std
ror
icebp
mov
arpl
in
imul
xchg
fucom
pop
movs
add
retf
daa
mov
sbb
jno
dec
jle
push
mov
ja
ja
loop
mov
sub
pop
outs
adc
sbb
aas
xchg
dec
cli
inc
ds
out
sub
push
or
dec
sbb
daa
mov
mov
and
and
int3
or
cmp
fmul
sbb
adc
mov
jbe
inc
in
stc
mov
mov
(bad)
and
jo
sbb
fs
sbb
dec
pop
mov
mov
add
test
ret
movups
jae
push
cmp
sub
inc
jno
pop
jl
adc
jae
ret
cmp
pushf
loope
and
sub
out
ficomp
fs
mov
xchg
push
idiv
aam
les
jb
push
inc
pop
jno
push
fwait
dec
pop
cmc
js
(bad)
jmp
bndstx
or
sti
adc
pop
cmc
mov
push
out
(bad)
iret
mov
mov
stc
aaa
adc
pop
jmp
cld
sti
xchg
jno
jb
dec
jne
dec
ins
dec
test
jg
out
movs
test
sub
ficom
and
xchg
into
ins
loopne
push
shl
jbe
add
pop
dec
movsx
(bad)
mov
in
in
ficomp
mov
mov
add
jmpw
stc
ins
(bad)
and
aas
(bad)
fisub
out
cmc
sar
add
test
hlt
push
ss
pop
adc
inc
and
xchg
aas
or
idiv
mov
enter
mov
xchg
fcom
mov
mov
dec
stos
test
jnp
adc
jne
cmp
sbb
outs
mov
movs
inc
adc
mov
movs
pop
inc
push
sbb
adc
scas
int
jge
sbb
xor
cs
pop
das
out
cmp
rcr
movs
pop
mul
mov
or
pushf
pop
in
les
aas
out
out
sbb
movs
cmp
ss
sbb
jb
ins
sub
adc
add
push
push
cli
dec
daa
mov
xchg
call
mov
cmp
es
add
sbb
shl
adc
ror
pop
loop
push
jae
jns
ins
arpl
iret
and
adc
(bad)
ja
push
ds
mov
(bad)
or
xlat
xchg
rcr
sbb
(bad)
pop
scas
dec
push
xchg
mov
and
push
xchg
jb
leave
dec
sbb
stos
les
push
xchg
adc
std
ds
mov
mov
or
or
pusha
add
push
pop
cld
push
mov
xor
inc
sub
stos
add
mul
sub
ins
xchg
ret
rol
aas
push
stos
pushf
ja
jg
(bad)
in
data16
test
sub
push
pop
cmp
mov
and
gs
aam
jmp
shl
inc
daa
nop
lock
jmp
mov
jp
out
pop
mov
jmp
and
jns
mov
mov
xchg
movs
inc
add
call
xor
push
lods
cmp
stc
int
add
in
xor
out
sbb
loopne
daa
cmps
cmps
fimul
adc
inc
scas
fstp
add
mov
pop
cmp
int
mov
test
ja
adc
mov
ror
bound
fld
sbb
gs
jg
shr
neg
cmc
rcr
jge
jp
jle
inc
add
sar
push
lods
sub
xchg
(bad)
arpl
lock
arpl
(bad)
jne
fadd
xchg
call
xor
cmps
rcr
lods
add
bound
sbb
setb
sub
sbb
xchg
inc
in
xchg
jne
enter
pop
push
enter
cmc
fsub
popa
or
pshufw
xchg
ds
out
fs
pushf
xor
mov
int3
in
push
xor
ror
xchg
sub
jno
cli
btr
mov
mov
loop
ja
dec
ds
jg
inc
and
mov
push
mov
inc
sbb
or
cmp
dec
neg
cmp
push
push
js
les
mov
mov
std
mov
or
mov
cld
xchg
push
sbb
mov
rcl
orps
pop
push
outs
loopne
ins
fdiv
rcr
cs
and
(bad)
pop
push
adc
test
cmp
jl
push
std
push
(bad)
push
(bad)
lods
lds
jns
mov
sub
retf
push
lods
xor
rcr
jmp
push
cmp
adc
lds
add
sub
push
fcomp
jnp
xchg
xor
jg
gs
mov
push
(bad)
fnstcw
out
add
mov
jl
push
leave
pushf
push
sub
ins
rol
sub
cld
dec
dec
pop
cld
hlt
add
pushf
pop
jo
and
adc
xchg
jecxz
jmp
mov
(bad)
sub
sbb
push
test
int3
bound
popa
(bad)
dec
mov
aaa
iret
xor
lahf
addr16
inc
sbb
and
pushf
mov
(bad)
pop
xchg
and
fsub
lahf
mov
pop
popf
cs
or
adc
shr
dec
fcom
sub
ret
call
jge
fcmovnbe
dec
or
and
mov
ret
push
out
mov
mov
and
or
(bad)
jno
aam
pop
nop
outs
mov
test
and
sub
mov
push
(bad)
ret
sub
add
imul
mov
sbb
ret
cmps
pop
sahf
je
neg
or
dec
mov
test
ds
mov
dec
sbb
mov
mov
dec
and
jnp
sbb
sub
mov
or
inc
dec
pop
fmul
mov
jnp
pushf
and
ss
pop
jg
or
rdmsr
mov
(bad)
cmp
stc
sti
add
pop
dec
xor
fnstcw
push
adc
mov
xor
outs
test
outs
aas
(bad)
popf
aas
repz
xchg
shl
pop
(bad)
leave
jg
addr16
sub
fst
nop
imul
push
(bad)
cwde
add
cs
jge
cdq
and
jle
sub
adc
jne
stc
(bad)
enter
adc
push
inc
loopne
mov
pop
push
in
push
mov
scas
pop
frstor
adc
pushf
ret
or
std
cmc
in
inc
dec
fnsave
cld
cmp
cld
fwait
inc
movs
out
push
inc
mov
sbb
shl
push
stc
jg
mov
fcmovnbe
pop
test
push
xchg
enter
inc
add
bound
popf
clc
xor
pop
pop
sahf
scas
mov
sub
call
loope
shl
mov
xchg
inc
(bad)
out
push
pop
xchg
and
dec
addr16
cmp
(bad)
popa
dec
inc
sub
or
in
adc
loopne
ss
push
push
push
out
sub
outs
lods
pop
adc
loope
sub
push
fwait
pushf
jns
pop
or
mov
mov
btc
ja
mov
jg
dec
xchg
xor
les
(bad)
ja
and
push
repnz
jge
sahf
addr16
pop
stos
dec
fwait
(bad)
fist
pop
dec
(bad)
or
ror
jmp
test
sub
scas
loopne
into
dec
jno
fiadd
mov
pushf
xchg
and
shl
movs
int3
mov
push
loop
pop
inc
mov
mov
push
cmps
repz
inc
mov
jle
or
dec
sbb
jg
xor
sbb
mov
inc
cmp
xchg
stos
fwait
jg
leave
imul
adc
mov
lock
jle
aad
add
sub
xor
mov
ja
cmp
sbb
pop
daa
imul
mov
cdq
dec
loope
shl
bound
and
repz
daa
add
mov
pop
rcr
mov
popf
fsub
leave
outs
jbe
mov
mov
es
pop
xlat
ins
nop
cmp
std
(bad)
push
into
out
inc
(bad)
jp
mov
push
movs
popf
dec
fistp
pop
dec
mov
inc
dec
fdivr
popa
mov
cmp
add
(bad)
jmp
pop
into
sub
mov
gs
inc
push
dec
and
ds
add
add
addr16
xchg
and
cld
imul
jl
repnz
cld
xchg
in
push
mov
repnz
addr16
movs
cmp
adc
push
or
xor
mov
or
mov
leave
cmp
stos
push
adc
dec
push
sbb
pop
es
dec
push
mov
push
xlat
out
jo
ins
nop
aad
mov
pushf
lock
cmp
neg
push
jo
mov
cli
fstp
fcmovb
pop
stos
sub
xlat
push
push
inc
pop
pop
inc
psubsb
hlt
dec
xchg
or
pop
test
xchg
retf
std
jmp
call
iret
dec
std
jnp
lods
xchg
aas
lahf
xor
out
push
call
nop
xchg
lock
xchg
fs
std
jnp
int
stc
fld
xor
mov
aam
ficomp
push
hlt
popf
in
cmp
jns
pop
ds
cmp
(bad)
jge
mov
sub
xor
out
ds
mov
ss
jbe
mov
inc
or
rcr
lods
push
jecxz
rcl
push
ins
aas
push
sub
fcom
jns
mov
cmp
shl
add
push
push
sbb
adc
addr16
sahf
hlt
out
mov
dec
cmc
ret
gs
and
in
pop
bound
das
inc
xchg
mov
retf
sub
es
or
push
ret
sbb
jge
and
inc
imul
xchg
mov
ins
leave
rcr
mov
inc
ja
xlat
loope
pop
xor
cmp
imul
popf
or
jmp
sbb
fstp
mov
outs
push
and
sbb
aam
sbb
inc
xor
test
outs
cdq
lock
aaa
out
mov
jmp
or
mov
icebp
movs
nop
pop
shl
cwde
mov
sahf
dec
mov
in
scas
and
std
push
jae
aam
imul
dec
hlt
and
mov
rcl
and
sub
imul
fild
psubusw
jnp
clc
jb
stos
sub
lods
mov
in
jae
jmp
(bad)
add
mov
and
inc
jecxz
mov
out
mov
jmp
std
dec
mov
popf
pop
sub
(bad)
pop
mov
and
pop
pop
sbb
lea
xchg
outs
jmp
out
mov
jg
mov
inc
in
cdq
pop
and
xor
ins
jge
dec
mov
adc
push
sub
cmp
pusha
cmp
cmp
not
pop
push
sbb
mov
les
xchg
pop
sub
test
jle
xor
jmp
push
sub
adc
test
pushf
mov
mul
mov
outs
jnp
inc
ja
iret
fld
sbb
sbb
jae
cmp
pop
ins
mov
xchg
mov
mov
in
inc
rcr
scas
mov
(bad)
out
mov
inc
or
aad
xor
add
aam
arpl
sbb
and
xor
jp
in
mov
lds
jnp
icebp
add
jb
cmp
mov
std
addr16
adc
sbb
push
push
jb
mov
int3
xchg
add
nop
xchg
push
xchg
lea
mov
nop
daa
mov
adc
push
mov
adc
lea
pop
cs
push
mov
rol
sbb
and
(bad)
jne
push
inc
out
int
hlt
sbb
cmc
push
daa
or
dec
or
or
aam
loope
shl
xor
jp
cmp
div
or
fiadd
sbb
mov
dec
and
push
repz
inc
jb
lea
fimul
adc
adc
pop
and
xchg
ja
aas
in
arpl
call
cmp
loopne
lods
push
sbb
mov
nop
jns
push
fcomp
xor
pushf
jl
test
lods
add
xchg
jae
sbb
xchg
mov
jge
pushf
in
pop
fdiv
imul
sbb
clc
jle
pop
sbb
into
sub
icebp
jnp
xor
test
and
sbb
cwde
cdq
fmul
push
outs
mov
imul
xor
mov
xor
push
movs
jae
shl
test
and
das
lods
sti
pop
pop
call
cdq
out
pushf
xor
mov
lods
je
or
ficomp
pop
sub
adc
xchg
(bad)
sub
adc
mov
add
cld
dec
add
mov
mov
rcl
into
push
mov
pop
jmp
cmp
inc
cld
add
cmp
push
loop
pop
mov
cmp
test
mov
jp
les
lock
mov
jns
pop
adc
xor
adc
imul
mov
pushf
popf
mov
inc
xor
aaa
shl
movs
les
fstp
and
cs
or
imul
adc
das
fwait
enter
sub
pop
ins
daa
pop
xor
xor
jnp
dec
push
fidivr
mov
mov
xlat
sbb
ror
or
push
adc
add
ficom
jno
rcl
jmp
dec
cdq
ins
(bad)
test
enter
jp
inc
xor
inc
out
jb
jnp
mov
(bad)
sub
pop
push
push
and
xor
adc
(bad)
leave
mov
sbb
mov
ror
jo
mov
scas
jl
xchg
(bad)
cmc
dec
pop
test
jbe
add
in
rol
dec
add
jbe
in
or
cld
call
in
push
repnz
sub
dec
sbb
or
pop
jp
and
dec
in
ret
aam
pushf
cmp
add
cld
hlt
or
in
ret
inc
push
(bad)
jns
sbb
add
sub
aad
popa
dec
push
inc
pop
dec
mov
test
xor
push
lahf
fwait
sbb
cmp
sbb
mov
sbb
push
hlt
sbb
fisub
iret
push
xchg
pop
cs
dec
xchg
mov
adc
cdq
add
(bad)
in
retf
xor
cmp
clc
call
lea
(bad)
scas
addr16
inc
jnp
(bad)
test
pop
out
jl
add
iret
pop
rol
rol
in
and
add
fisttp
sbb
or
push
or
in
jecxz
add
xchg
aam
xor
mov
scas
outs
fdivr
sbb
js
adc
dec
ret
lods
xchg
test
sub
pop
dec
inc
adc
stos
(bad)
(bad)
or
dec
push
xchg
mov
dec
lahf
pop
jnp
xchg
add
dec
jb
add
leave
std
adc
push
pop
jmp
mov
inc
add
or
test
and
fs
out
or
or
cmp
into
push
jp
xchg
mov
dec
mov
cmp
fst
enter
cmp
cld
retf
push
mov
and
fimul
push
mov
les
xchg
cmp
sbb
stos
cdq
mov
scas
aam
push
pop
add
leave
pushf
add
dec
dec
cld
repnz
mov
mov
inc
ins
movs
jne
jmp
into
or
popa
dec
idiv
rcl
stos
lods
hlt
ins
push
push
not
rcr
inc
and
pop
xchg
sbb
pop
xlat
pop
mov
and
and
inc
dec
fimul
xchg
into
int3
cmp
add
outs
bound
mov
dec
dec
jne
(bad)
mov
outs
aam
pop
inc
mov
mov
pushf
push
test
outs
mov
sti
jg
add
imul
add
pop
pop
mov
sub
push
jns
and
test
sub
sub
call
div
pop
pop
push
in
push
mov
out
push
inc
mov
popf
mov
inc
and
push
adc
ja
inc
xchg
jae
push
mov
lods
mov
stos
bound
mov
or
mov
int3
int3
xlat
adc
push
push
addr16
pushf
xchg
inc
out
sahf
push
popf
or
les
repnz
mov
movs
add
pop
xchg
enter
loopne
adc
lahf
(bad)
cmps
aam
or
cmps
shl
test
pop
cmp
add
xchg
ds
arpl
dec
retf
dec
aaa
cs
scas
pop
sub
in
xor
xchg
in
rol
xlat
jne
pop
or
mov
stos
ja
xor
pop
cmp
div
push
fs
xlat
cmps
xor
cmp
outs
(bad)
cmc
int3
pop
pop
cli
fstp
sbb
sbb
ror
xchg
mov
push
dec
cmp
jmp
jnp
fs
retf
mov
dec
sbb
cmp
fldenv
and
jle
mov
enter
rcr
call
xchg
push
sub
loop
daa
in
fld
adc
mov
ja
ins
cdq
xlat
xor
xchg
popf
pusha
xchg
mov
(bad)
mov
inc
jo
add
inc
pop
les
aam
cdq
pop
and
rcr
ja
push
sbb
mov
cmp
sub
push
fist
aaa
mov
(bad)
out
test
mov
retf
or
bound
mov
push
hlt
out
adc
mov
dec
mov
pop
rcr
ret
cmp
dec
cmp
mov
addr16
cmp
ins
jle
sub
jmp
push
pop
adc
mov
xlat
dec
(bad)
sbb
pop
std
jns
jnp
fwait
div
clc
cmp
ja
sub
dec
in
jecxz
pop
jnp
pop
or
and
ja
dec
push
xchg
call
jg
ins
sahf
sbb
addr16
adc
int3
ret
stc
xor
inc
mov
pop
or
or
(bad)
retf
and
(bad)
call
mov
jge
dec
or
pop
in
aad
pop
xlat
sub
dec
xor
jno
dec
daa
adc
and
or
(bad)
arpl
int
xchg
inc
adc
dec
or
pop
cmps
push
cld
outs
cmp
push
aam
mov
jl
enter
push
and
(bad)
mul
lahf
mov
lock
arpl
sub
ret
mov
mov
pushf
(bad)
jbe
in
sti
aad
push
adc
adc
inc
xor
out
fadd
pop
jnp
gs
lea
jmp
nop
push
xor
nop
push
bnd
sub
dec
xchg
inc
dec
xlat
fidivr
aaa
sbb
sub
and
xchg
push
dec
dec
push
pop
int3
adc
fs
sahf
and
dec
js
fild
and
xlat
call
and
fist
dec
iret
jl
dec
ins
and
imul
arpl
ss
push
into
inc
sbb
jmp
cmc
(bad)
cmc
jmp
ret
sbb
inc
popf
add
or
dec
sbb
icebp
push
jo
sbb
xor
das
dec
inc
cmp
dec
xchg
in
mov
cwde
imul
push
js
xchg
loopne
mov
cdq
cmps
sbb
mov
mov
sar
pop
ds
aad
push
ret
adc
int3
adc
in
jle
mov
icebp
fdivr
push
test
add
adc
scas
push
cwde
loopne
imul
dec
sbb
mov
pushw
cs
cmps
pushf
push
mov
mov
mov
sub
aam
mov
mov
xchg
xchg
fnstenv
jle
out
sub
ds
xchg
repnz
std
fldenv
jle
movs
sub
fcom
imul
test
sbb
cmp
test
jbe
push
das
rcr
aam
loop
pushf
xchg
mov
pop
push
rcr
mov
sub
xchg
pop
rcl
sub
dec
(bad)
lds
sub
mov
or
sar
jno
stos
mov
out
jnp
xor
and
dec
xor
mov
outs
rol
int
dec
call
popa
xchg
sbb
es
lods
ins
outs
xchg
lods
rol
fcomp
les
call
arpl
mov
mov
(bad)
fisub
lods
jmp
pop
mov
imul
jge
ins
and
jle
xchg
xor
mov
and
movs
jmp
ficomp
add
std
mov
scas
inc
and
leave
mov
xchg
inc
(bad)
fld
inc
int3
sti
clc
push
ja
xchg
pop
repnz
dec
mov
sbb
inc
int3
sbb
cmps
js
test
pop
dec
aaa
fs
fld1
(bad)
pop
or
(bad)
push
mov
xchg
neg
sbb
dec
dec
sub
test
jp
and
mov
pop
fsubrp
jmp
idiv
in
loopne
shl
xchg
xchg
sub
mov
sub
pop
lock
pop
add
push
cmps
ficomp
jnp
and
push
call
iret
out
jle
(bad)
xchg
sbb
(bad)
adc
movs
rcr
pop
cmp
pop
div
push
and
out
xchg
(bad)
mov
cmp
ins
iret
cmps
jl
xlat
inc
jmp
daa
sbb
das
daa
dec
inc
scas
gs
imul
imul
cmp
inc
je
setne
mov
jae
(bad)
jp
push
mov
aaa
out
adc
(bad)
out
xor
jb
pop
arpl
iret
cmps
(bad)
inc
cs
clc
sbb
or
push
push
dec
pushf
pop
cmp
(bad)
xlat
or
add
(bad)
sbb
stos
xor
cmp
sub
push
mov
adc
xchg
call
cld
icebp
xlat
or
mov
rcl
ret
(bad)
lahf
lea
mov
jns
cmps
push
(bad)
mov
gs
pop
test
mov
in
inc
dec
or
sub
ds
xchg
int3
loopne
cmc
mov
das
(bad)
mov
leave
scas
enter
jg
ins
imul
mov
push
fdiv
arpl
movs
aaa
rcl
popa
pop
pusha
sub
cli
frstpm(287
int
jbe
daa
xchg
mov
jmp
mov
add
loope
fild
loopne
das
jnp
xor
mul
jmp
cmp
sub
jb
jg
xor
cmp
fst
mov
push
les
inc
imul
(bad)
loopne
pop
push
sub
jmp
shl
out
out
and
fidiv
iret
mov
pop
rol
push
clc
mov
pop
pushf
sub
jge
inc
fadd
imul
movs
and
or
es
pushf
dec
mov
jle
div
dec
and
mov
(bad)
push
add
mov
push
iret
jnp
(bad)
cld
inc
cmps
sbb
mov
stos
mov
cmp
add
dec
dec
cmps
jb
or
pop
in
shr
push
mov
imul
call
mov
pop
jns
push
fistp
xor
stos
sbb
aaa
fld
pop
sub
add
mov
mov
pop
int3
and
and
ins
and
daa
rdtsc
sub
fimul
lods
push
pushf
(bad)
retf
mov
lods
xor
dec
imul
and
jg
std
xchg
push
dec
dec
mov
jg
fcomp
add
sub
xor
(bad)
stc
adc
add
rol
inc
dec
lahf
lahf
into
adc
movs
out
lods
mov
(bad)
push
inc
inc
scas
sbb
or
fcomp
pop
neg
in
adc
inc
sbb
pop
rol
ins
cld
xchg
cmp
pop
addr16
lods
mov
out
int
dec
push
or
mov
aas
fdivr
xchg
repz
adc
or
mov
scas
sub
mov
push
fidiv
enter
push
ds
xor
cmp
xchg
inc
fidivr
mov
aam
or
xchg
iret
add
test
(bad)
dec
cmc
or
push
(bad)
pusha
(bad)
pop
xchg
cmp
movs
fs
out
xchg
xlat
pushf
and
ins
mov
adc
scas
push
aad
aam
push
pop
imul
in
mov
jae
jl
in
dec
adc
cs
dec
mov
dec
in
scas
cdq
adc
dec
xchg
lods
imul
jmp
sub
outs
pushf
cwde
outs
dec
push
jae
jge
or
adc
js
jecxz
cmps
out
mov
sbb
lahf
test
push
cmp
sub
aaa
mov
jle
sub
push
popf
out
fxch
inc
loop
push
sbb
sbb
xchg
mov
movs
pop
jmp
movs
std
mov
add
icebp
xor
rcl
rcr
push
mov
or
sub
mov
aam
inc
inc
je
gs
fsubr
cmps
xor
pop
push
(bad)
test
stc
mov
test
push
mov
lds
mov
push
sub
pop
idiv
call
scas
daa
sbb
in
xchg
mov
mov
mov
inc
add
gs
fwait
sbb
lock
and
dec
xchg
addr16
test
(bad)
and
pop
out
std
rol
mov
jae
add
mov
scas
mov
mov
push
add
aaa
ret
retf
fst
into
clc
inc
imul
jbe
scas
movs
out
cmp
adc
ror
mov
xchg
out
jbe
ror
mov
jge
repnz
mov
pop
mov
stos
and
rcl
cli
xor
sbb
sub
jecxz
inc
adc
(bad)
pop
xchg
mov
ret
xchg
leave
clc
dec
test
pushf
gs
and
stos
rcl
cmp
outs
addr16
adc
dec
adc
mov
jo
pop
pop
inc
inc
fwait
mov
aad
fwait
mov
cmp
xor
rcl
xchg
addr16
jo
fstp
test
sbb
aam
loop
add
les
rcl
mov
popa
dec
xchg
mov
pop
(bad)
and
push
jbe
pop
dec
mov
sub
mov
jp
loope
inc
jno
sahf
popa
cmp
pop
inc
int
mul
mov
in
lock
mov
push
xchg
and
jb
and
jecxz
ins
dec
lods
xlat
stc
xchg
idiv
inc
sub
imul
ret
call
push
cli
bound
fadd
dec
add
mov
jecxz
ins
pop
cld
rol
mov
dec
pop
lahf
mov
and
(bad)
call
jmp
movs
xchg
out
lock
(bad)
adc
daa
lods
loope
mov
ss
mov
push
enter
adc
aas
xchg
pushf
addr16
mov
and
dec
(bad)
stos
or
mov
sub
mov
ja
sub
jnp
and
inc
mov
add
outs
bound
inc
xor
pop
sub
mov
nop
cmps
xor
xchg
lea
retf
hlt
push
xchg
ror
je
outs
mov
pop
jb
sbb
push
arpl
push
cld
jmp
out
mov
retf
pop
fiadd
dec
pusha
xchg
pop
inc
in
sbb
rol
(bad)
jb
ins
pop
fwait
mov
fiadd
and
enter
lahf
std
mov
cmp
mov
cwde
push
fwait
xchg
data16
dec
idiv
mov
sahf
fcom
jge
push
repz
sbb
add
call
jmp
push
pop
in
cmp
fdiv
test
add
xlat
add
test
push
cmp
xchg
ror
jmp
sub
into
pop
adc
mov
mov
sub
gs
popa
(bad)
stos
xchg
jae
sub
lea
std
ins
add
push
pop
mov
ds
pop
inc
cwde
or
mov
add
test
inc
pop
mov
cmps
lods
pop
sbb
mov
ret
sub
test
mov
pop
repz
add
or
add
cmps
movs
jb
xchg
dec
icebp
test
add
xchg
popf
sub
inc
je
pop
mov
outs
fs
inc
xor
cdq
pop
or
out
mov
ror
test
pop
push
jns
mov
fcomp
push
lods
pop
xor
xchg
push
mov
mov
adc
mov
pop
jecxz
mov
call
pop
ret
push
xchg
pop
sbb
call
sbb
clc
adc
and
stc
and
pop
jnp
adc
dec
pop
jmp
retf
and
aaa
mov
call
dec
hlt
xor
dec
cmc
in
outs
jp
jae
and
call
sub
xchg
adc
loopne
leave
xor
clc
fwait
push
sub
xor
push
cs
sbb
push
sub
ds
rol
loop
inc
shl
rcl
push
cmp
outs
jns
call
les
and
pop
mov
rcl
inc
inc
inc
fcomp
mov
fst
xor
sub
in
ja
adc
xchg
pusha
je
movs
daa
pop
rcr
rol
xor
das
xchg
loope
dec
inc
clc
pusha
mov
dec
mov
lahf
xor
mov
(bad)
xchg
push
mov
xchg
inc
mov
push
into
call
xor
cmc
mov
or
(bad)
xor
hlt
aaa
clc
cs
and
call
mov
dec
cmp
movs
(bad)
cmp
and
test
jb
push
sub
dec
sbb
pop
repnz
pop
sbb
into
mov
mov
push
call
pop
js
cmps
or
xchg
aaa
fucom
pop
outs
push
int3
into
in
mov
push
pop
mov
or
adc
arpl
jg
sub
pop
jg
nop
fwait
div
div
sub
dec
leave
test
pushf
rcl
sub
push
fisttp
cld
mov
stos
loope
ins
stos
popf
xchg
sbb
test
lea
pop
mov
cmp
sar
test
sub
mov
jno
aaa
clc
inc
add
and
loope
(bad)
cmp
jmp
lock
jns
fldcw
pop
ficom
arpl
inc
in
inc
jle
(bad)
ret
fistp
or
cmp
and
fcomp
jecxz
push
push
pop
jmp
mov
adc
jg
push
adc
mov
pop
mov
test
(bad)
push
inc
pushf
test
add
cmp
call
out
cmp
jp
or
xchg
lea
jno
pop
sub
leave
cdq
or
and
lds
mov
bound
or
push
adc
or
mov
mov
dec
inc
or
ret
ror
enter
dec
fsubr
inc
cmp
push
out
(bad)
and
cwde
dec
push
imul
div
pop
shl
nop
jnp
sbb
xchg
and
retf
shr
imul
push
mov
xchg
adc
push
into
shl
ret
inc
jg
push
nop
sbb
mov
out
int
and
(bad)
enter
push
mov
push
mov
int3
jno
and
cli
push
and
push
lods
shl
arpl
push
stos
mov
imul
inc
gs
mov
mov
add
add
and
jno
push
mov
loop
adc
adc
pusha
pop
mov
out
loopne
(bad)
or
jnp
xchg
push
inc
lods
add
push
ret
(bad)
sub
pop
xchg
sbb
outs
jmp
dec
mov
xor
push
dec
xchg
add
test
inc
mov
dec
arpl
jno
dec
cmp
jns
mov
sar
loopne
ins
sbb
dec
pop
push
inc
mov
sbb
retf
(bad)
mov
add
inc
xor
outs
push
nop
outs
mov
retf
sbb
cmp
mov
fbstp
jl
dec
fsubr
xchg
or
inc
cmps
ror
pop
sub
adc
mov
push
jle
dec
fisttp
fiadd
jmp
pop
into
cmp
jmp
gs
mov
add
inc
mov
sbb
xchg
mov
test
cmp
mov
sbb
push
lahf
pop
mov
imul
sbb
jge
jo
sbb
sbb
inc
jnp
enter
push
fidivr
xchg
sub
or
aam
push
fisubr
(bad)
mov
pop
inc
aam
cmc
mov
mov
inc
cmp
adc
nop
cmp
cdq
int3
push
pop
mov
xchg
push
xchg
mov
push
icebp
mov
fdivr
out
sub
call
xchg
cmp
int3
mov
add
or
fld
cmps
and
jmp
push
ret
(bad)
mov
mov
push
or
xchg
pop
and
lods
out
pop
push
and
inc
shl
ja
ins
fild
xchg
stos
push
lock
inc
xor
jl
inc
xor
sbb
cmp
mov
loopne
orps
in
in
mov
dec
mov
or
loopne
leave
dec
pop
mov
call
sub
xchg
dec
fld
adc
xlat
mov
sbb
fsubr
dec
mov
enter
popf
ins
mov
out
push
(bad)
adc
ja
cmps
std
dec
retf
ins
out
clc
push
fwait
pop
mov
hlt
adc
iret
stos
(bad)
out
loopne
lds
movs
fwait
sbb
mov
mov
push
fidiv
cld
add
imul
and
rcr
in
imul
lds
icebp
mov
xor
gs
fwait
adc
fcom
jo
mov
add
out
std
xlat
and
dec
int3
fidiv
addr16
add
pushf
or
jno
stc
sub
jl
pop
out
outs
pop
ja
pop
mov
js
sahf
or
push
dec
pop
test
xchg
rcr
imul
scas
int3
es
xor
arpl
jge
mov
pushf
stos
test
fiadd
push
inc
ret
les
repnz
and
or
out
sar
jmp
mov
inc
xchg
jae
sbb
add
fld
xor
and
sub
push
popf
xchg
cmp
fidiv
dec
mov
icebp
lds
push
cdq
jmp
enter
dec
popf
call
inc
jg
or
push
push
aam
push
pusha
out
arpl
and
xor
jle
cmc
cmp
cmp
popf
xchg
outs
mul
dec
sbb
aam
lahf
push
dec
imul
sbb
call
fdivr
sbb
cmc
pop
mov
pop
stos
cmps
pusha
enter
jecxz
cs
cwde
adc
mov
lea
and
sar
xchg
push
sbb
les
fidiv
sbb
jo
cmp
rol
cli
push
fistp
mov
sbb
mov
(bad)
push
loop
adc
ds
jo
fsub
xchg
inc
aam
pop
jns
retf
mov
loopne
mov
sub
repnz
cmp
sahf
cwde
fidivr
cmp
mov
inc
push
mov
add
aas
int3
xchg
add
int3
ins
outs
rcr
(bad)
hlt
call
fdivr
nop
mov
shl
(bad)
rcr
ja
test
or
arpl
adc
mov
or
jp
pop
mov
xor
(bad)
pop
int3
or
lea
int3
push
lods
cmp
stos
retf
xchg
movs
loope
cmp
pushf
mov
cli
jmp
add
int3
scas
jge
sub
lods
lds
mov
sbb
mov
xchg
inc
aaa
add
repz
push
and
jl
lock
lods
ds
jmp
retf
sub
stos
push
fisubr
mov
sub
dec
sub
(bad)
add
mov
ss
popa
mov
xchg
inc
scas
sub
arpl
mov
imul
jge
loop
push
call
hlt
mov
push
xchg
mov
nop
clc
push
push
popf
dec
je
mov
ret
ret
in
push
in
sbb
dec
xor
jmp
movs
xor
mov
pop
dec
xor
fstp
mov
xchg
jb
or
rcl
and
js
clc
pop
jnp
popf
lds
jp
add
push
mov
push
jno
and
das
and
inc
aam
pop
mov
cdq
add
mov
aaa
mov
ds
dec
cmps
add
daa
scas
jmp
fwait
or
(bad)
jge
mov
sbb
xor
jmp
mov
mov
stc
aam
xor
jecxz
pop
pop
ins
mov
lods
mov
sbb
pop
and
cld
pop
pop
or
sub
jmp
ret
icebp
xchg
jbe
ins
cmp
sahf
mov
adc
arpl
sub
adc
sbb
fist
loopne
add
cmp
int3
adc
dec
cmc
mov
popa
sub
or
pop
cdq
dec
out
jne
mov
test
leave
cmp
mov
enter
out
push
inc
loop
(bad)
add
scas
inc
mov
enter
ret
test
cwde
ret
in
mov
cli
aam
lds
rcl
pop
dec
popa
dec
xchg
sub
in
mov
add
imul
mov
push
out
mov
push
jmp
dec
dec
jae
pop
mov
arpl
or
push
in
mov
add
lahf
mov
or
aaa
fnstcw
rcl
fcmovbe
fadd
sti
cmp
mov
pop
pop
cmp
inc
and
jmp
mov
fistp
stos
(bad)
or
jecxz
fsubrp
inc
add
jae
or
mov
getsec
test
mov
(bad)
fsubrp
inc
loop
std
mov
out
adc
mov
aam
push
pop
cmp
add
inc
jmp
push
push
(bad)
dec
daa
push
mov
cmps
mov
into
xlat
je
add
inc
xchg
loopne
jmp
fld
ins
add
lock
stc
jo
les
not
cdq
mov
add
arpl
cmp
bound
and
ss
dec
ins
jo
shr
leave
cmp
adc
xlat
dec
rcr
ror
or
xor
fst
out
mov
ins
stos
pop
mov
push
jnp
loop
or
or
push
ret
pop
sbb
inc
sub
mov
bound
cmp
(bad)
popa
jne
cmp
pop
mov
imul
and
or
mov
dec
xor
jg
cmc
mov
adc
(bad)
jl
lahf
pop
rcr
loopne
leave
add
clc
xor
int3
sub
in
dec
repz
movs
push
cmp
xchg
pusha
shl
pop
adc
jae
jp
dec
push
stc
imul
rcl
sbb
dec
popf
cmp
aam
jne
mov
mov
cmp
ret
hlt
ficomp
pop
(bad)
(bad)
mov
lods
mov
inc
fistp
in
jnp
jle
ss
(bad)
ds
jl
cmp
cli
push
pop
sub
cdq
inc
mov
mov
jbe
push
inc
in
out
cmp
inc
pushf
inc
pop
dec
aaa
scas
mov
movs
aaa
ins
pop
ret
fidiv
mov
cmc
addr16
call
push
push
xchg
pushf
xchg
dec
mov
aam
mov
cmp
push
push
fwait
inc
dec
fisttp
cmp
cmc
lods
fidivr
daa
fisubr
addr16
xchg
ffreep
loop
mov
imul
ins
sahf
sbb
push
pop
fstp
fwait
push
mov
rcr
cmc
fldcw
popa
xchg
retf
cli
sbb
xor
add
cmc
or
push
fcom
in
xchg
xchg
sbb
pop
dec
out
xor
jnp
xchg
push
dec
loopne
inc
mov
sti
cdq
and
push
lods
cmp
pusha
test
push
lock
jmp
mov
fnstenv
(bad)
sti
xchg
sub
cmp
and
jle
push
mov
fdivr
pop
sbb
cmp
jo
fist
mov
xor
pop
cmp
and
adc
xchg
xor
xchg
push
movs
sbb
lea
xchg
test
retf
in
adc
pushf
pop
out
mov
in
ins
out
dec
pop
ror
mov
jl
je
lea
hlt
jno
sar
push
aaa
in
imul
gs
sub
or
(bad)
test
mov
pop
rcl
(bad)
js
bound
xchg
rcr
rcr
and
sub
ss
jle
mov
stos
clc
dec
stos
sub
jecxz
mov
pusha
shr
iret
mov
cs
int
xlat
in
imul
add
dec
sub
fdivr
aas
and
int3
push
push
lock
or
(bad)
cld
xchg
dec
push
jmp
mov
js
cld
cmp
sbb
sar
jo
retf
mov
js
arpl
or
lahf
nop
mov
mov
fstp
test
into
cmp
xor
imul
test
pop
jo
leave
xchg
call
pop
mov
jnp
daa
xlat
dec
inc
bound
push
adc
and
jecxz
inc
mov
pop
out
(bad)
int3
add
adc
std
gs
movs
mov
loop
push
jl
int
and
mov
lods
xor
mov
out
sub
xchg
inc
(bad)
sub
push
add
in
add
and
sbb
pop
aas
mov
mov
mov
mov
pop
fsub
sbb
adc
fld
in
pop
xchg
neg
xlat
test
fsubr
lods
test
jb
fisubr
adc
(bad)
mov
mov
jno
or
sbb
inc
lods
repnz
xlat
icebp
push
push
pop
xlat
aaa
test
iret
je
fiadd
xchg
add
adc
dec
movs
jnp
sbb
dec
adc
and
out
loop
jo
shl
out
push
hlt
call
out
sub
dec
adc
add
int3
dec
pop
out
fwait
dec
test
adc
sbb
cmp
jns
cdq
jb
int
jmp
xchg
mov
add
enter
outs
pop
retf
push
rol
add
jg
pop
outs
jne
rcr
and
pop
aam
test
pop
(bad)
fbstp
sub
sub
pop
add
jmp
ins
aas
imul
(bad)
shr
pop
mov
xor
dec
inc
xchg
fwait
dec
or
cwde
adc
push
or
or
mov
outs
stc
mov
aaa
int
dec
out
pop
adc
and
loopne
ficom
pop
enter
xchg
sar
sbb
jp
mov
or
dec
pop
pop
mov
adc
push
and
add
fsubr
add
mov
push
cli
cmp
(bad)
and
mov
mov
repnz
add
fs
test
movs
push
out
lods
mov
mov
movd
fstp
xchg
ja
xlat
pop
push
mov
iret
push
(bad)
icebp
mov
push
int3
push
rcl
out
fs
test
mov
sahf
push
loopne
cmp
jno
add
fnstcw
adc
shl
rcl
dec
inc
das
sbb
push
pop
or
cdq
mov
push
mov
dec
ret
push
cmp
out
sub
aas
nop
sbb
sti
dec
(bad)
push
gs
fbld
push
jp
or
inc
popa
sub
cs
mov
iret
xor
mov
xchg
xchg
pop
daa
sbb
mov
xor
leave
sbb
shr
in
mov
add
jo
push
pop
jmp
retf
push
mov
jno
test
mov
xchg
leave
(bad)
xchg
int3
hlt
adc
dec
cmc
add
lahf
adc
rol
rcr
imul
sub
push
and
and
out
cmp
push
aaa
push
mov
fisttp
xchg
pop
imul
push
dec
sti
adc
inc
lea
adc
jge
stos
dec
in
les
mov
pop
(bad)
pop
xchg
rol
mov
inc
fistp
mov
push
mov
test
stc
dec
inc
aam
popa
(bad)
imul
repz
fwait
addr16
sub
loope
add
ss
test
and
push
mov
inc
shl
ins
inc
xlat
xchg
(bad)
ja
cld
fdivr
dec
mov
(bad)
jecxz
test
xlat
or
cmps
cs
mov
repnz
fndisi(8087
and
sub
outs
lahf
push
and
inc
popa
mov
rcr
test
nop
ds
test
fwait
push
push
into
jns
cmp
mov
test
xchg
mov
push
test
aas
cdq
(bad)
out
inc
dec
bound
or
iret
pop
push
sbb
add
xor
or
push
int3
mul
inc
xor
std
jno
jmp
scas
inc
rol
divps
pop
nop
push
(bad)
repz
mov
scas
ins
test
es
out
jnp
xchg
mov
xor
pop
pop
pop
push
xor
mov
adc
pop
shl
pushf
lods
popa
dec
jmp
pop
sub
adc
(bad)
fnstenv
jbe
(bad)
cld
add
jbe
jge
test
dec
fidivr
add
inc
inc
xor
push
mov
and
pop
xchg
mov
repnz
xchg
aas
pop
cmp
popa
jae
movs
mov
pop
pop
sub
xor
es
pop
imul
(bad)
(bad)
out
jp
loopne
movs
inc
test
xor
iret
dec
inc
inc
pop
or
fiadd
push
push
in
cwde
push
dec
das
jp
jle
ret
(bad)
pop
cmp
or
arpl
dec
add
and
sub
lods
xor
mov
lahf
test
adc
push
mov
shl
push
push
(bad)
loope
outs
(bad)
int3
dec
nop
xchg
xchg
fdiv
mov
test
popa
dec
cmp
mov
mov
or
and
xchg
cmps
pop
addr16
popf
jne
mov
repnz
imul
sahf
daa
cmp
and
push
ds
and
in
mov
adc
dec
popa
sub
inc
and
shl
test
loopne
mov
xchg
loopne
outs
or
sub
mov
sbb
stos
in
mov
dec
sbb
xchg
cmp
pop
aad
pcmpeqd
jge
xchg
jno
movs
sub
jge
call
mov
xchg
pop
cmp
lock
dec
sar
pop
mov
cmps
aaa
pop
adc
(bad)
push
stos
rol
inc
mov
xor
dec
sub
add
les
(bad)
mov
imul
xchg
dec
add
loop
(bad)
loopne
fcomp
mov
cmc
mov
and
lock
out
mov
stc
scas
xor
mov
dec
cmp
jle
aam
xor
pushf
add
push
pop
call
push
mov
sbb
imul
pop
mov
lahf
loop
add
sub
pop
dec
cmps
cmp
cld
inc
push
xchg
mov
inc
ja
adc
inc
cmp
lds
(bad)
jne
xchg
push
add
sub
xor
sub
cmp
mov
pop
ficom
pop
rcr
arpl
xchg
(bad)
mov
test
cmps
pop
add
xlat
mov
ins
push
mov
mov
mov
call
adc
add
ins
add
mov
xchg
int3
push
push
mov
(bad)
jmp
aam
in
call
clc
fwait
pop
scas
or
pop
or
daa
add
mov
out
sub
imul
out
repz
mov
rol
sar
test
stos
sub
addr16
pop
pushf
push
xor
jmp
push
inc
neg
xchg
adc
es
jo
paddusb
repnz
dec
ins
push
arpl
sar
mov
jecxz
cmp
ja
jle
xchg
dec
lahf
sti
xchg
adc
add
(bad)
clc
mov
mov
xchg
inc
cwde
sti
adc
mov
int
mov
js
daa
retf
sbb
sbb
and
pop
loop
imul
sbb
xchg
xchg
rcr
leave
clc
or
fs
stos
call
pop
add
call
call
pop
jp
aaa
mov
sbb
fnstcw
add
rcl
cmc
xor
pushf
pop
pop
popf
aaa
btr
sub
adc
out
popa
stos
lahf
aam
and
cmp
stc
sub
mov
jne
mov
(bad)
mov
dec
mov
bt
shl
lods
xor
xchg
xor
jl
xchg
jle
mov
imul
adc
inc
jg
shl
les
sub
and
mov
cwde
(bad)
sti
bound
push
jnp
imul
nop
les
fidivr
test
les
push
cmc
cmp
fcomp
push
inc
fsubr
aas
xor
push
test
adc
mov
and
or
(bad)
cmps
iret
test
xchg
loope
out
pushf
inc
jno
dec
or
jge
loope
inc
out
jbe
push
sbb
inc
xchg
adc
push
xchg
cmp
jne
add
popf
lods
pop
stos
loopne
xchg
lock
push
lds
jmp
stos
pop
pop
push
mov
jbe
mov
dec
jl
fbld
jbe
or
push
in
xchg
push
pop
out
ficomp
cmp
lods
in
jmp
in
sbb
aas
add
xor
push
xchg
mov
or
and
pop
ret
mov
movs
sbb
mov
loop
sbb
mov
ins
cld
jo
aad
cmp
pop
scas
iret
or
inc
sahf
xor
xlat
add
gs
popf
jno
xlat
shl
nop
enter
xor
(bad)
adc
xchg
iret
les
cmp
push
pop
fwait
sub
push
dec
fwait
push
sbb
push
and
sahf
mov
das
add
jle
inc
in
dec
sbb
dec
movs
and
sar
and
xchg
retf
call
fcom
push
loop
out
jl
pop
push
push
int3
adc
jns
cld
adc
or
int
jns
gs
ret
pusha
fcmovb
stos
dec
repnz
lods
fwait
push
pop
cmp
sbb
ins
inc
(bad)
add
in
jbe
enter
cmp
push
xor
or
push
dec
mov
lods
(bad)
fisttp
mov
jl
jo
dec
adc
fucom
sub
imul
out
fidivr
(bad)
xchg
jecxz
aam
jbe
sti
jnp
jge
stos
jg
iret
dec
in
sbb
int3
loopne
add
dec
pop
pop
dec
inc
or
es
fwait
mov
cmp
fisttp
pushf
pop
xor
cmps
push
xor
pop
or
je
je
clc
in
dec
xor
and
push
aaa
xchg
adc
outs
cmps
sub
or
shr
ret
(bad)
and
in
cmc
call
shl
mov
fcom
rcl
test
push
inc
imul
test
push
rcl
xchg
cmp
fs
(bad)
jp
push
jmp
vmptrst
and
mov
(bad)
pop
xchg
xor
cmp
sahf
jge
fwait
mov
cs
mov
pop
mov
(bad)
push
mov
sbb
pusha
mov
mov
loopne
xchg
xor
retf
xchg
pop
call
inc
(bad)
fistp
xchg
cld
sahf
pop
cmp
cdq
cmp
cwde
mov
leave
mov
mov
out
push
sub
add
push
jno
add
mov
mov
mov
sub
dec
out
sub
(bad)
jmp
test
mov
or
fwait
or
jns
sbb
pop
dec
inc
and
ss
cmp
or
idiv
ja
cdq
sar
cmps
add
lods
imul
pushf
outs
ins
xchg
mov
jbe
outs
add
(bad)
fnstenv
js
mov
rol
loopne
lea
pop
cld
pop
dec
adc
scas
pushf
std
(bad)
inc
add
jge
(bad)
in
mov
xor
jmp
pop
adc
cdq
and
fidiv
or
jae
add
and
not
ficomp
loopne
cmp
push
aas
pop
fsubr
adc
add
mov
and
or
mov
(bad)
cmps
mov
clc
push
or
dec
push
adc
sub
call
pushf
pop
inc
sbb
mov
rcl
dec
push
pop
pop
sbb
rcr
push
cmps
mov
push
jge
add
jmp
nop
or
xor
mov
push
enter
pop
retf
jge
icebp
dec
cmp
daa
pop
fidiv
cs
or
xchg
lock
ss
imul
in
lods
or
popa
inc
iret
jne
or
mov
out
fbstp
cmp
leave
inc
(bad)
sbb
clc
out
xor
arpl
imul
mov
fbld
out
mov
pop
dec
mov
add
out
jmp
xlat
sbb
(bad)
in
aaa
addr16
test
scas
out
push
mov
push
ret
inc
retf
retf
fs
data16
cmp
out
in
sub
jge
dec
int
jmp
jle
jnp
jo
call
xchg
repnz
push
not
mov
mov
mov
scas
in
and
sbb
pop
xchg
dec
les
aas
cld
jmp
jmp
xor
and
js
scas
(bad)
lock
or
mov
push
cmp
pusha
inc
out
rcr
xchg
jmp
out
scas
inc
in
jno
dec
(bad)
push
add
pushf
jp
fsubr
inc
aad
test
push
xchg
or
(bad)
pop
jmp
inc
icebp
imul
pushf
test
or
xchg
inc
mov
outs
fisttp
(bad)
das
ds
push
sbb
cmc
mov
ror
push
mov
jmp
jns
pop
cmp
push
lods
xchg
sti
aaa
mov
xor
or
ror
div
cdq
nop
(bad)
cld
mov
adc
adc
dec
fwait
pop
(bad)
sub
mov
and
icebp
stos
loop
pop
add
(bad)
push
scas
sub
out
sub
mov
push
sbb
sbb
cmp
jno
imul
push
push
jnp
std
xor
fadd
fs
sbb
inc
and
push
jo
es
inc
mov
cmp
lea
jmp
and
call
cli
mov
lds
and
add
cmc
dec
or
(bad)
xor
sti
arpl
int
inc
xor
pop
(bad)
push
add
stos
pop
jge
jg
aam
xchg
pusha
mov
fwait
clc
(bad)
mov
(bad)
popf
aad
mov
aaa
cmc
sbb
pusha
or
jae
call
jg
repnz
push
aad
xchg
imul
xchg
sbb
iret
adc
fsubr
lods
aaa
pop
lods
cmp
xor
loope
jp
jmp
or
dec
fwait
shl
(bad)
adc
sahf
sub
adc
ss
pop
mov
pop
pop
mov
in
push
in
dec
retf
fwait
shr
push
add
push
push
cs
push
js
jae
shl
xor
out
mov
popf
jmp
push
aaa
and
cmp
sbb
in
jge
mul
inc
adc
mov
(bad)
out
mov
lods
mov
mov
ins
cdq
push
cmps
mov
sub
in
pop
in
xlat
sub
dec
imul
dec
fsub
cmc
test
xor
sub
repnz
add
stos
(bad)
mov
shl
aad
into
ss
call
jge
sub
mov
cmp
in
mov
jbe
mov
out
retf
fstp
cmp
or
sbb
push
push
sbb
out
repz
or
jecxz
retf
push
cmp
cmps
push
mov
enter
mov
scas
int3
push
in
lock
xchg
cmp
push
jo
retf
jg
inc
dec
and
push
pop
xor
pop
outs
dec
mov
addr16
push
popa
add
(bad)
mov
mov
mov
sub
ja
ins
adc
inc
xchg
mov
and
(bad)
mul
mov
cmp
call
dec
add
mov
mov
cmps
leave
sub
std
bound
pop
sub
adc
nop
push
adc
mov
mov
in
and
ss
lods
mov
or
adc
fstp
mov
adc
mov
adc
pop
inc
push
mov
adc
scas
out
sub
inc
fst
inc
and
scas
dec
shr
les
and
pop
arpl
cmp
sbb
inc
dec
das
popf
pop
xchg
call
mov
mov
mov
fiadd
int3
lock
push
sbb
sub
aam
inc
jmp
ror
push
ins
lods
popa
pop
pop
mov
rcr
dec
ret
in
js
scas
mov
pop
(bad)
push
mov
stc
div
pop
add
rcl
dec
ret
sti
popf
iret
aam
mov
or
cld
mov
push
and
push
jecxz
ret
out
and
push
test
dec
(bad)
xor
sahf
xchg
inc
mov
fiadd
jae
dec
fs
xchg
idiv
fsubr
test
add
mov
xor
pop
adc
jl
aam
bound
and
add
(bad)
mov
lahf
cmp
sar
sub
div
sbb
into
lock
cdq
pop
mov
aas
inc
fadd
sbb
push
adc
sbb
cmc
push
test
jp
scas
movups
add
test
pop
mov
aas
(bad)
fst
jmp
loop
mov
dec
(bad)
push
ins
rcl
mov
cmp
and
daa
fwait
retf
mov
cmc
sub
mov
mov
in
test
in
repnz
lock
adc
ret
push
aas
mov
popa
cmp
xor
add
loopne
ss
sub
nop
sbb
loop
push
aaa
xlat
xchg
sbb
xchg
(bad)
cmp
push
xor
pop
xchg
dec
fs
(bad)
push
cmps
fstp
cs
iret
ficomp
imul
xor
sbb
shl
std
cmp
mov
or
mov
(bad)
xor
aam
sbb
je
idiv
in
imul
pop
dec
stos
pop
in
cld
sub
mov
popa
adc
dec
add
stos
pop
test
lock
xchg
cmp
cmc
dec
xor
idiv
rol
(bad)
std
clc
push
or
addr16
mov
aaa
in
dec
sub
scas
fiadd
push
dec
ins
cmp
shl
jb
sahf
jnp
shr
ret
rcr
std
adc
mov
add
ja
ror
int
ins
mov
pop
adc
aam
cmp
xor
mov
mov
cwde
int3
and
mov
xor
or
cs
push
push
mov
add
scas
popf
mov
mov
data16
xor
dec
mov
dec
cmp
outs
xchg
sbb
or
std
cs
add
jmp
mov
pop
mov
stc
xor
pop
or
sbb
fistp
mov
mov
adc
mul
mov
push
inc
or
xor
jo
loope
push
xor
mov
int
add
lods
jle
jmp
outs
mov
arpl
fimul
das
lods
jae
into
shr
scas
dec
dec
dec
int3
push
sub
dec
sbb
cs
add
(bad)
xchg
fcomip
dec
loopne
or
dec
and
jmp
loopne
sub
inc
sbb
push
mov
xor
addr16
pop
cmp
leave
pop
xchg
ss
cs
scas
push
jmp
out
inc
cmc
mov
sar
(bad)
ror
mov
or
jae
pop
jge
push
sbb
jno
ret
movs
enter
sub
cdq
out
inc
mov
fcom
jge
push
pop
cwde
cdq
sbb
sbb
retf
test
ins
shr
jge
test
cmp
jno
dec
pop
sub
seto
dec
pop
mov
ins
dec
sub
and
pushf
push
scas
ins
mov
inc
push
xor
popf
or
movs
fimul
out
xchg
push
retf
jge
pop
imul
jmp
pushf
lock
stos
ficom
dec
adc
push
(bad)
clc
inc
(bad)
sbb
rcl
test
inc
mov
test
adc
inc
pushf
sbb
jmp
adc
xor
ja
es
icebp
xor
ins
add
ror
cmp
jmp
lock
shl
jle
aad
mov
pop
clc
test
lods
test
fild
mov
pop
loop
cmp
fisubr
retf
lock
lods
inc
jmp
push
mov
daa
sub
cmp
cmp
int3
sar
xchg
jle
xchg
cmc
xchg
add
loop
(bad)
lods
xor
into
cmc
adc
dec
inc
loop
sbb
push
aas
adc
adc
inc
xchg
jp
add
push
push
mov
shl
add
js
dec
retf
mov
jns
cli
cmc
int
rcl
lock
pushf
xchg
sbb
pop
jg
push
imul
pop
out
xor
dec
cmps
push
lahf
push
push
xlat
xor
stos
cld
mov
jmp
and
xchg
dec
jnp
mov
sbb
mov
jns
sub
adc
into
cmp
jb
mov
mov
jecxz
cli
or
test
or
pop
sbb
aad
repnz
push
inc
fwait
adc
mul
inc
sbb
xchg
and
xor
ss
fisub
das
dec
sub
pop
mov
enter
gs
pop
ins
adc
arpl
and
arpl
push
xchg
inc
lds
jg
fld
mov
cmp
xor
dec
in
add
popf
pop
fiadd
add
pop
jp
or
lods
cdq
jmp
pop
xor
test
stos
in
fsub
movs
cmp
mul
and
jno
stc
pushf
lods
sub
mov
mov
xchg
pop
gs
sub
les
mov
in
add
xchg
sahf
dec
dec
jge
loope
es
dec
pop
(bad)
jmp
dec
dec
mov
call
xor
pushf
pop
mov
adc
mov
mov
xlat
add
shl
add
inc
mov
fiadd
pop
sub
in
ja
nop
sub
push
or
dec
loopne
sbb
scas
pop
scas
dec
cmp
cld
xchg
push
pop
pop
ins
mov
int
xchg
sti
icebp
adc
dec
push
bound
sbb
inc
xchg
dec
movs
dec
dec
ins
nop
dec
in
xor
cmp
cmp
adc
push
push
mov
jno
fmul
xchg
aas
idiv
aaa
mov
sub
xchg
(bad)
in
and
dec
jg
jecxz
inc
arpl
jmp
(bad)
mov
pop
loopne
shl
mov
mov
jp
mov
mov
dec
les
iret
int3
es
jmp
(bad)
push
(bad)
and
cdq
arpl
dec
sbb
push
dec
sbb
ja
sti
daa
pop
mov
xlat
movntq
jg
into
adc
mov
idiv
push
jge
sub
stos
push
mov
cmp
add
push
dec
and
sbb
dec
inc
pusha
pop
inc
mov
call
inc
ins
cmp
pushf
lahf
cmp
inc
rcl
aam
out
shl
shl
mov
lea
aam
cmp
fld
ins
imul
dec
test
push
in
not
xor
sbb
inc
icebp
lock
inc
dec
dec
inc
cmc
add
dec
xchg
cmc
push
imul
icebp
sar
dec
push
imul
cmp
cmc
leave
adc
cmc
jo
fwait
pop
arpl
jbe
push
mov
push
cld
int
dec
mov
pop
int
adc
retf
in
dec
addr16
inc
pop
pop
adc
iret
or
stc
(bad)
ins
icebp
and
gs
(bad)
adc
clc
fist
out
adc
xor
mov
popf
pop
sbb
fdiv
jg
xor
mov
in
scas
ins
jmp
jno
inc
mov
cmp
cdq
add
sbb
cmp
mov
jp
inc
and
jge
pop
out
loopne
rep
fsubr
dec
sbb
std
pop
mov
scas
cmp
clc
sbb
adc
mov
dec
je
sub
cld
shr
mov
xor
add
lahf
popf
leave
sbb
fcmovb
repz
mov
xor
lods
jmp
daa
fsub
dec
lock
repz
cld
mov
add
sub
nop
or
repz
add
dec
call
ficom
in
sbb
adc
(bad)
inc
aad
mov
out
sub
lds
xor
sub
pushf
int
scas
xor
push
xchg
push
lock
or
pop
retf
jl
jno
cmp
aad
pushf
mov
lock
xchg
jb
xor
aam
mov
push
out
xchg
adc
in
mov
inc
daa
inc
dec
mov
in
aam
out
pop
(bad)
and
fdiv
add
imul
pop
(bad)
cdq
ja
(bad)
push
icebp
cmp
inc
mov
loopne
mov
(bad)
lds
outs
movs
bound
out
scas
cmp
cmp
pushf
inc
mov
in
sahf
bound
pop
push
dec
push
mov
mov
rcr
lock
fbld
jno
pop
push
stc
ins
or
test
jecxz
daa
and
xchg
fst
mov
out
dec
xchg
jne
mov
mov
(bad)
xor
aaa
xchg
mov
or
pop
add
sbb
cdq
mov
daa
cmps
movs
cmp
mov
ins
cmp
sti
inc
mov
adc
add
inc
mov
mov
das
sub
dec
mov
lea
fist
mov
mov
pop
aad
add
mov
add
mov
ret
add
xchg
push
aaa
cmp
pop
dec
je
xchg
push
add
jno
mov
jecxz
pushf
xchg
add
inc
out
xchg
sbb
daa
mov
cmp
and
scas
sub
scas
sbb
mov
xor
pushf
fwait
pop
out
mov
test
repnz
dec
xchg
sbb
xor
push
popf
loop
pop
shl
xlat
imul
add
scas
sub
dec
add
int
into
stc
xor
and
cmc
je
das
dec
std
cmp
and
sbb
pop
cmp
pop
dec
dec
jmp
and
fcom
dec
jg
icebp
fnstenv
or
mov
or
cmp
dec
stos
(bad)
push
hlt
push
sbb
and
test
push
(bad)
pop
xor
xlat
xchg
jmp
dec
icebp
js
xchg
imul
int3
dec
push
xor
xchg
shr
leave
or
dec
pop
sti
cmps
xchg
cwde
mov
jmp
or
out
mov
retf
adc
loop
mov
hlt
pop
stos
pop
cdq
dec
adc
jge
sub
or
mov
in
cmps
adc
in
lods
out
mul
or
int3
push
sbb
jbe
push
push
sbb
dec
add
mov
ins
pop
cmp
stc
ret
cdq
mov
arpl
inc
sahf
sub
pop
pop
jns
shl
xlat
jmp
jmp
popf
push
pop
lds
(bad)
jne
call
cmp
(bad)
pop
sub
rcl
push
mov
clc
pop
cmovne
xchg
xor
pop
inc
sub
xchg
dec
push
maskmovq
imul
add
add
adc
dec
inc
lds
shr
fwait
cmp
push
rcl
sahf
jecxz
cmp
enter
shl
jne
adc
(bad)
adc
aaa
mov
add
xlat
ja
mov
fwait
aas
hlt
and
push
lahf
pop
sub
sub
xchg
pop
xchg
mov
int3
or
leave
mov
sub
mov
in
in
mov
cmp
jo
stos
dec
je
pusha
inc
mov
imul
clc
push
(bad)
jg
add
cmp
lods
sub
add
ss
mov
xor
daa
or
bound
jle
in
jne
pop
or
adc
loopne
clc
js
stos
sub
daa
(bad)
ins
push
dec
sub
cmp
enter
arpl
inc
mov
daa
int3
cli
dec
lds
stos
scas
rol
pusha
stos
jmp
test
lods
out
(bad)
cmc
scas
jmp
add
shl
and
(bad)
cdq
lea
pop
div
aam
clc
cmp
cwde
xchg
pop
jae
dec
or
daa
lea
cmp
xchg
sub
fsub
mov
push
mov
adc
jae
push
or
test
push
cmp
test
mov
add
add
repz
xor
rol
mov
cdq
ss
fmul
jg
pop
sar
push
adc
test
addr16
sbb
xor
sbb
pop
jecxz
mov
cmp
pop
and
ret
lods
fwait
jbe
mov
das
in
in
cdq
test
inc
and
scas
jmp
push
call
mov
mov
ret
xchg
cmp
dec
cdq
cld
pop
ret
push
push
adc
data16
push
enter
add
jmp
jmp
xor
cmp
fild
into
retf
pop
mov
rcr
inc
sub
and
jmp
xchg
mov
in
ror
inc
jp
dec
inc
(bad)
shr
xor
push
xor
nop
cmp
cld
es
fwait
jmp
(bad)
jp
bound
in
mov
inc
out
dec
mov
ds
sub
pop
pop
outs
push
(bad)
cmp
dec
push
inc
mov
pop
mov
fwait
jae
int3
push
jae
test
cmps
arpl
push
aas
xchg
fmul
sahf
(bad)
cld
jnp
cmc
xchg
bound
pop
pop
push
cmp
push
sbb
fdivr
mov
ins
psllq
aad
jge
addr16
xor
inc
jo
test
and
rol
mov
fidivr
and
loopne
xchg
dec
adc
dec
adc
in
(bad)
bound
and
hlt
(bad)
push
mov
pop
cs
repnz
ss
sbb
inc
ret
repz
ror
int
aad
pop
cmp
cli
jne
mov
mov
pop
or
ds
lock
mov
in
push
test
xchg
or
add
int3
ror
push
in
movs
int
inc
mov
nop
outs
sbb
into
mov
dec
mov
sbb
mov
mov
stos
out
adc
mov
pop
fwait
dec
fild
fcmovnbe
sbb
push
sub
pop
aaa
xchg
inc
cmps
mov
les
out
fadd
dec
and
cmps
mov
mov
movs
aam
xchg
aad
add
cmp
loope
sti
lock
jb
pop
(bad)
push
repnz
iret
call
adc
dec
xor
push
jl
mov
xor
xchg
js
dec
icebp
pushf
sub
and
sub
cmp
cmp
lods
push
test
push
jp
xchg
push
add
pusha
pop
inc
mov
in
fstp
lahf
mov
dec
or
adc
cmp
and
aaa
push
rcl
and
out
sbb
loopne
outs
push
and
aas
shl
ja
jge
out
sub
jle
inc
je
mul
mov
sbb
xchg
xchg
lahf
jmp
shrd
loopne
movntq
mov
retf
or
pop
sbb
mov
imul
add
pop
jge
sbb
sbb
rcl
sub
mov
paddb
out
aaa
iret
add
(bad)
sub
aas
fisttp
dec
std
adc
cdq
jp
cmp
loopne
pop
dec
push
cs
popa
(bad)
adc
pop
test
mov
push
dec
mov
cmp
xchg
push
call
aam
jmp
nop
xchg
pop
(bad)
adc
add
pop
scas
adc
aaa
mov
xlat
sbb
cmps
leave
push
or
sbb
sub
sar
pop
test
(bad)
dec
pop
xor
xlat
xchg
xchg
xchg
sbb
xchg
mov
idiv
retf
and
add
repnz
mov
pop
sub
fcomp
push
out
mov
rol
adc
sub
mov
push
xor
jno
cmp
in
add
dec
dec
ficom
jl
pop
mov
jl
dec
imul
mov
and
add
call
jl
mov
xor
pop
mov
xor
cld
pop
in
sub
loop
ret
mov
push
leave
mov
popa
xor
mov
pop
adc
inc
psubsw
jb
xor
push
jmp
loop
sti
push
and
pop
fs
mov
push
mov
pushf
rol
jmp
sub
jl
jmp
jle
pop
retf
js
(bad)
pop
sub
xchg
mov
les
hlt
jge
cmp
jg
test
cmp
cmp
ins
sar
mov
lds
push
cdq
out
jp
lea
push
test
pop
inc
loopne
jge
mov
cli
push
je
mov
js
xor
pop
jnp
sbb
pop
shl
mov
movaps
in
mov
sbb
dec
inc
push
sbb
nop
cmc
pop
pop
fnstenv
fs
pop
mov
out
inc
ss
pop
xchg
or
pushf
(bad)
ins
or
mov
push
inc
into
lods
xchg
pop
dec
pop
dec
(bad)
mov
jl
push
push
jl
pop
mov
cld
fstp
push
mul
xor
frstor
xchg
jmp
xlat
mov
ret
sub
int
lods
outs
movzx
popa
push
jmp
sar
lahf
or
xor
mov
ror
mov
jge
mov
pop
(bad)
sbb
mov
pop
scas
sar
aam
xchg
jecxz
bound
outs
mov
fisub
mov
outs
xor
int
inc
sbb
xor
pop
jne
rol
(bad)
cld
and
pushf
dec
lahf
lds
mov
stos
jp
mov
mov
adc
mov
lods
and
adc
xchg
test
jno
aaa
jb
pop
push
dec
adc
in
rcl
dec
lea
in
cmp
mov
fxch
push
popa
add
xor
push
lahf
ins
call
add
sahf
mov
add
fdiv
das
mov
mov
loopne
xor
stc
fwait
ja
jmp
push
xlat
push
fist
pop
sbb
jl
inc
stos
add
fcomp
cli
push
push
mov
les
loop
jns
lods
fnstsw
lahf
pop
dec
test
mov
(bad)
inc
imul
sub
pushf
jecxz
retf
xchg
(bad)
(bad)
aad
into
bound
outs
cli
into
dec
dec
(bad)
xchg
cmp
js
stos
pop
xchg
imul
mov
inc
jae
es
jb
(bad)
lahf
xor
cmp
dec
out
pusha
ins
lds
adc
add
retf
xchg
push
pop
cdq
aaa
cs
adc
inc
jne
cs
in
mov
sbb
xor
test
ja
jge
es
mov
neg
je
arpl
xchg
ins
push
sbb
sbb
leave
dec
ins
call
pop
push
pop
cmp
lea
xchg
gs
mov
mov
cdq
popf
inc
pop
loopne
sbb
aas
rcr
mov
leave
cmp
and
jbe
pop
pop
fwait
sub
mov
inc
mov
shl
jo
or
fwait
sbb
lds
cmp
mov
fnsave
sub
push
lods
dec
dec
ins
and
icebp
jge
push
pop
sbb
xchg
int3
(bad)
(bad)
rol
pop
aaa
xor
clts
enter
je
dec
mov
and
inc
nop
shr
inc
jnp
out
jl
imul
fcmove
pop
addr16
xchg
fadd
add
inc
(bad)
fmul
popf
dec
ins
cmc
ins
lods
mov
adc
arpl
xchg
dec
sub
ins
xchg
xor
push
mov
addr16
push
push
xchg
(bad)
test
mov
add
pop
xor
mov
mov
jmp
lock
adc
into
jno
push
mov
(bad)
fisub
call
jge
inc
sub
and
sbb
cs
pop
call
dec
mov
pop
and
dec
xor
in
push
or
out
push
leave
pop
sar
jno
xchg
(bad)
(bad)
mov
xchg
adc
xchg
out
call
push
loop
dec
outs
cmp
arpl
(bad)
push
pop
mov
lea
icebp
mov
les
mov
xlat
mov
retf
push
push
pop
rol
dec
or
test
jecxz
xor
mov
cld
adc
dec
jmp
pop
and
scas
neg
mov
mov
xchg
fiadd
xor
stc
dec
xlat
adc
mov
xchg
jo
and
mov
in
ror
and
or
in
pop
fistp
aaa
(bad)
popa
imul
mov
gs
pop
pop
in
inc
stc
test
ja
pop
cld
lock
test
jnp
(bad)
loop
(bad)
sub
call
ret
jne
lock
int
and
pop
sbb
push
(bad)
shl
xor
fnsetpm(287
in
mov
test
inc
repz
mov
dec
les
test
loope
sub
rcr
ins
adc
inc
pop
mov
or
cmp
je
mov
lea
mov
popf
push
in
mov
pop
repz
sbb
ins
or
mov
sbb
ins
(bad)
(bad)
push
and
dec
pop
xchg
scas
or
cmp
(bad)
rol
lods
sahf
mov
out
cmp
pop
std
aam
loop
(bad)
push
into
sbb
loopne
fisubr
sbb
cmps
loop
lock
dec
leave
and
mov
xchg
jge
xchg
jb
sbb
add
test
mov
sub
sahf
jle
pop
xchg
add
popa
fild
pop
out
pop
fcom
push
js
jo
aad
push
mov
ffree
mov
and
xchg
and
test
fchs
mov
cld
mov
lods
imul
hlt
jno
callw
dec
inc
add
les
rcr
jbe
out
(bad)
loop
or
ret
ret
dec
push
sbb
inc
push
(bad)
in
jl
ss
mov
in
adc
dec
or
dec
adc
scas
popa
xor
data16
xchg
aaa
ficomp
push
cmp
pop
stos
dec
push
jecxz
dec
(bad)
sti
push
daa
add
movs
add
sahf
inc
ds
xchg
push
mov
in
or
jl
mov
dec
cs
mov
pop
iret
(bad)
or
sub
add
adc
and
aam
cmp
inc
bound
push
sub
sub
xchg
les
pop
push
aaa
hlt
int
xor
cwde
cmp
lock
lock
and
xchg
test
mov
mov
push
(bad)
fwait
mov
dec
ds
mov
adc
lods
jp
sub
jmp
adc
stos
icebp
fsubrp
and
or
cmps
retf
xor
sbb
pusha
mov
mov
les
sub
sar
call
add
adc
add
imul
jl
cli
and
jne
shr
push
jp
lea
mov
mov
mov
jmp
out
mov
push
data16
jae
and
sar
sbb
cli
test
cld
push
pop
adc
jmp
les
or
mov
scas
test
mov
xor
(bad)
out
test
dec
popa
jb
adc
pop
bound
mov
shl
jne
mov
js
sbb
stos
dec
jle
and
sbb
and
or
idiv
cmps
ja
pusha
dec
fld
cmc
jl
pop
jae
imul
scas
inc
fwait
pop
mov
arpl
cwde
add
and
fiadd
mov
inc
mov
clc
pushf
in
or
cld
out
fmul
and
mov
cmp
xor
push
push
push
adc
mov
mov
and
jae
ja
xor
mov
arpl
add
push
xchg
shr
push
test
inc
jmp
cmps
retf
mov
sbb
pop
mov
hlt
mov
jmp
outs
lea
sub
adc
pop
call
adc
icebp
lea
int
xchg
dec
pop
jne
inc
sar
test
push
inc
push
dec
inc
mov
pop
dec
(bad)
cld
jnp
je
mov
icebp
push
jmp
dec
bound
arpl
fisubr
push
jl
mov
mov
ja
fcom
jno
dec
test
pop
test
xchg
xlat
mul
pop
ja
mul
xor
xchg
push
jge
movs
pop
mov
ins
mov
push
test
sub
dec
aas
repnz
js
loopne
stc
and
movs
das
aas
fsubr
or
test
call
sbb
das
pop
inc
add
mov
sub
cmp
push
pop
add
dec
imul
lea
or
push
push
leave
std
push
cmp
rcr
sub
jno
mov
ds
jmp
dec
cmp
imul
jge
xchg
and
(bad)
jnp
dec
movs
shl
shl
mov
push
inc
push
out
push
dec
dec
inc
pop
fwait
outs
adc
xchg
mov
adc
adc
inc
cmc
inc
dec
mov
mov
adc
mov
addr16
fdiv
lock
push
push
(bad)
mov
push
dec
jmp
fcomp
push
test
adc
mov
adc
mov
mov
rcr
icebp
fwait
sub
pop
jp
fsub
pop
push
push
push
aad
repz
mov
in
cdq
xchg
adc
in
inc
aad
popa
mov
fs
xchg
sub
mov
idiv
xchg
cmps
pop
cmc
fistp
sti
pushf
xor
addr16
add
ficom
and
pop
aaa
loopne
std
cli
out
and
aas
xor
out
fbstp
pop
test
cmp
push
mov
out
fdiv
test
stc
sbb
xchg
xchg
xchg
inc
stos
ret
pop
xchg
into
xlat
test
jg
and
ds
jmp
pop
(bad)
jnp
aaa
sbb
stos
push
pop
es
push
pop
fisubr
pop
xor
dec
mov
push
pop
shr
sub
pop
sbb
mov
cmp
aam
dec
jno
jl
pop
pop
push
idiv
adc
mov
dec
imul
cwde
addr16
adc
mov
xchg
daa
shl
inc
icebp
xchg
jae
in
xchg
inc
cs
mov
dec
inc
xchg
or
test
pop
mov
loopne
jecxz
xlat
fs
loope
or
lods
jmp
out
shr
sbb
repnz
inc
sub
xor
(bad)
js
(bad)
scas
(bad)
fwait
aaa
cmp
retf
pusha
sbb
sub
xor
ficom
mov
arpl
stos
pop
pop
inc
fwait
dec
fbstp
xchg
stos
enter
inc
dec
jb
sub
xchg
jo
dec
shl
jmp
add
push
sbb
mov
cmc
or
cmovae
sub
inc
xlat
cmp
dec
xchg
outs
inc
jmp
ret
popf
popa
popf
getsec
ja
arpl
inc
add
pop
xchg
pop
fadd
and
push
lea
(bad)
xlat
pop
mov
adc
xor
(bad)
dec
imul
mov
or
icebp
retf
out
mov
outs
gs
cdq
dec
loopne
mov
gs
and
mov
push
and
(bad)
test
sub
jle
dec
fbstp
push
mov
scas
xchg
mov
aam
mov
xchg
cmp
jl
mov
(bad)
retf
sbb
and
test
fstp
pusha
jge
xor
(bad)
xchg
aaa
lahf
mov
mov
stos
fwait
sar
(bad)
adc
pop
push
pop
(bad)
jmp
jbe
add
adc
in
into
es
out
retf
and
fistp
fldcw
rcl
dec
adc
sbb
pop
mov
push
test
push
nop
adc
add
and
cwde
jne
jae
aam
hlt
imul
lods
cmp
rsqrtps
daa
jl
pop
pop
xor
sar
lds
pop
adc
push
loopne
test
movs
pop
push
ja
push
inc
in
mov
arpl
daa
daa
xor
dec
or
fstp
cld
inc
xor
push
test
fistp
xrelease
lock
push
push
jmp
cmp
jb
push
adc
sub
arpl
dec
or
ror
push
stc
mov
mov
or
shr
test
pop
shl
push
inc
mov
dec
scas
or
jge
(bad)
les
mov
jg
sub
jno
(bad)
cmp
fld
ins
adc
and
mov
cmp
sbb
adc
sub
xor
mov
arpl
test
int
pop
dec
cmps
out
in
(bad)
or
mov
inc
std
pop
mov
push
mov
jno
cwde
pop
dec
in
jg
int
addr16
pushf
aad
and
das
xchg
ret
inc
xchg
inc
aam
cli
sbb
out
es
xchg
xchg
sbb
cmp
push
fbstp
mov
rcl
call
jb
push
and
inc
popf
movs
mov
iret
inc
dec
push
shl
(bad)
push
(bad)
dec
mov
int
adc
into
stos
cmp
xor
pushf
push
std
data16
fnstsw
add
pop
dec
fist
dec
cdq
mov
les
jmp
xor
mov
jmp
int3
or
shl
aad
popf
xchg
cmc
jns
cmp
push
fadd
xchg
cmp
mov
add
(bad)
fmul
retf
pop
inc
push
cmps
pop
jmp
inc
pop
movs
cli
lods
outs
sub
push
jo
mov
and
fstp
mov
ret
in
retf
(bad)
jmp
jmp
inc
cdq
fcom
nop
cwde
or
mov
mov
cld
mov
imul
aad
mov
mov
inc
pop
iret
or
fmul
int3
fcomp
push
loopne
dec
and
cmp
aaa
mov
xor
push
loope
pop
mov
sbb
push
pop
cld
push
jge
call
pop
fdivr
nop
cmp
push
adc
inc
xchg
cmp
dec
sbb
in
inc
jge
pop
mov
jne
pop
xchg
xor
pop
dec
leave
xlat
cld
push
xor
je
imul
mov
xchg
xor
and
dec
imul
sub
and
inc
clc
jb
scas
push
(bad)
movs
es
mov
cld
pop
pop
dec
mov
sbb
and
lock
mov
mov
dec
pop
sbb
enter
sahf
cmp
sbb
dec
jg
ficomp
push
outs
sub
adc
push
lds
xor
mov
add
or
nop
sbb
push
pop
(bad)
out
ror
out
mov
sar
fistp
mov
mul
mov
(bad)
cmps
inc
jae
pushf
iret
retf
loope
push
lock
and
(bad)
mov
and
mov
fdiv
sub
pop
sub
push
lea
sub
adc
js
mov
cmp
test
lahf
dec
aaa
pushf
add
add
add
imul
test
mov
mov
jae
sahf
je
push
cmp
leave
test
aaa
pop
mov
cld
mov
jae
fild
adc
gs
mov
push
or
sbb
cmp
into
dec
cmp
cs
cmp
mov
sub
mov
mov
test
dec
fwait
pushf
dec
add
mov
or
in
adc
push
aam
push
and
jb
add
iret
fisttp
xchg
add
in
dec
xchg
iret
inc
cdq
jl
adc
lods
shl
jle
clc
sti
retf
imul
outs
lods
push
cmp
fldenv
and
or
iret
sub
ins
lea
mov
call
push
out
aaa
cmp
mov
and
stc
and
dec
dec
lahf
cmp
cwde
or
(bad)
pop
jmp
(bad)
sbb
(bad)
push
imul
(bad)
shl
pop
push
jge
fiadd
mul
pop
push
lock
xchg
(bad)
pop
mov
nop
scas
leave
movs
sti
mov
pop
xor
in
xlat
adc
sub
inc
int3
(bad)
fwait
hlt
inc
shl
jae
pop
dec
ficom
mov
pushf
pop
(bad)
imul
dec
pop
sub
push
dec
arpl
rol
aaa
ja
lahf
addr16
cmps
inc
inc
sub
pop
pop
fisttp
xchg
mov
push
cmps
cdq
cwde
out
rcl
clc
fsubr
icebp
loop
addr16
fldcw
xor
or
sbb
adc
xchg
adc
cdq
push
dec
je
cmp
fcom
pop
mov
add
cmp
mov
sar
adc
push
pop
sbb
gs
sub
pop
retf
or
pop
push
fstp
inc
lea
jnp
pop
and
aaa
jae
jne
(bad)
(bad)
xor
sub
dec
out
leave
adc
mov
push
mov
mov
pop
(bad)
pushf
or
les
movs
cdq
lods
mov
cwde
sbb
dec
sbb
sub
fwait
popf
stos
sbb
mov
addr16
xchg
mov
(bad)
push
out
add
inc
repnz
in
rcr
adc
cdq
pop
xchg
mov
sahf
dec
pop
sub
jg
(bad)
pop
adc
call
pop
in
stc
cmp
mov
fcom
jo
(bad)
retf
jmp
add
(bad)
push
mov
lods
cld
sbb
sub
pop
add
cmpxchg
fcomi
push
test
pushf
rep
cli
pop
lock
add
faddp
pop
scas
leave
call
icebp
fnstsw
sub
pop
ja
inc
jmp
sub
call
faddp
jmp
push
(bad)
(bad)
ja
push
dec
rcr
jnp
stc
push
cmp
add
push
dec
out
jl
mov
xchg
test
inc
sbb
pop
jge
push
ficom
push
or
xchg
leave
xchg
jbe
push
loope
dec
div
or
mov
or
(bad)
fbld
push
rcr
cmc
div
inc
sub
pushf
mov
dec
lods
jl
xor
pushf
call
dec
pop
jae
sbb
call
ja
scas
dec
stos
push
sar
scas
push
jmp
xor
pop
and
fisub
scas
adc
lods
out
ror
jg
mov
fnsave
xor
inc
mov
retf
pop
adc
cmps
or
sbb
jmp
mov
or
jmp
mov
adc
repz
sti
dec
push
cmp
sahf
pop
std
stos
inc
dec
in
xor
cmc
push
jmp
push
call
test
das
xchg
dec
bndldx
les
aad
mov
int
ins
xor
fisttp
fcomp
xchg
mov
fs
imul
addr16
(bad)
jb
jno
int3
push
push
dec
pusha
out
pop
cmp
or
in
push
rcl
daa
dec
lds
mov
jle
inc
push
mov
je
adc
push
mov
out
jge
clc
(bad)
add
lahf
fild
and
push
mov
mov
jge
(bad)
mov
fucom
ret
lods
cli
sbb
lods
fst
sub
and
push
or
jne
aas
cwde
cmp
inc
push
jge
enter
lods
push
cli
in
cmps
and
push
add
dec
test
pop
xor
fwait
adc
adc
fs
in
(bad)
ins
mov
aam
cmp
pop
sti
add
xchg
out
mov
ja
out
into
enter
fiadd
cmp
dec
xchg
rcl
idiv
cs
xchg
xor
mov
fadd
inc
lock
sub
mov
or
mov
or
jno
push
and
adc
fisub
and
cmp
add
out
loopne
mov
mov
cwde
jge
cmc
into
adc
retf
push
clc
mov
gs
test
mov
hlt
or
push
(bad)
mov
fisub
xchg
sub
mov
xlat
movs
pop
pop
jmp
jl
mov
and
call
xlat
pop
mov
fwait
cmp
bound
inc
mov
ja
push
jecxz
test
xor
sub
test
lea
fld
push
xchg
inc
adc
inc
les
mov
ins
mov
popa
call
push
sbb
cmp
xor
xor
lea
jecxz
out
fucomp
mov
out
adc
ffreep
cmp
or
adc
dec
loop
(bad)
mov
loopne
mul
push
mov
je
loopne
mov
pop
repz
clc
xchg
mov
call
xchg
sub
ror
icebp
adc
dec
inc
mov
loopne
cmps
mov
mov
enter
stos
push
in
adc
daa
add
fsubr
test
and
out
loopne
mov
ja
fist
xchg
mov
jo
sub
xchg
cmp
pop
mov
not
jg
nop
pop
nop
cdq
popa
cmp
dec
mov
dec
or
jae
test
(bad)
dec
push
icebp
fisttp
int
mov
leave
adc
jns
mov
out
xor
loop
push
or
inc
test
mov
pop
retf
xor
xlat
cwde
cs
push
icebp
sbb
sbb
lods
push
outs
cdq
mov
push
daa
sbb
cmp
iret
loopne
sbb
in
pushf
(bad)
jne
add
cmp
push
push
mov
mov
cmps
push
shl
mov
cmp
add
adc
test
mov
stos
hlt
fmul
outs
or
push
dec
mov
mov
fld
jno
pop
jmp
mov
jl
aas
cmps
je
mov
stos
nop
push
loope
cmps
cli
sbb
popf
call
sub
loopne
mov
jge
sbb
les
scas
(bad)
or
jle
dec
mov
push
mov
ja
mov
mov
cmps
xchg
mov
jl
cmp
sbb
movs
jmp
dec
dec
adc
dec
mov
jb
inc
sub
out
les
in
dec
aas
add
aad
sub
sub
pop
add
cmc
or
(bad)
fidiv
sub
cld
jmp
pushf
pop
pop
xchg
lock
xor
into
sub
cmp
inc
sbb
das
(bad)
mov
mov
push
bound
lods
in
cmps
push
fiadd
ins
or
mov
mov
test
add
lds
sbb
xchg
sub
mov
cmp
ins
ret
rcl
sub
idiv
inc
sbb
mov
dec
cmp
pusha
sbb
movs
iret
push
popa
mov
ret
(bad)
push
mov
iret
mov
xor
mov
xchg
daa
fcom
xchg
ja
(bad)
pop
push
les
fcom
int
not
jbe
hlt
fs
push
std
gs
repnz
mov
sub
add
add
jp
push
enter
es
pusha
frstor
popa
lods
jne
movs
pusha
sub
inc
loop
sbb
loop
test
sub
inc
test
lahf
mov
push
add
inc
cmp
mov
shl
sub
cmp
lea
add
xchg
aaa
arpl
cdq
ret
imul
leave
xor
mov
push
sar
sub
cmp
fs
(bad)
dec
dec
and
and
fmul
sub
sbb
lahf
lds
out
mov
test
jmp
ds
addr16
xchg
inc
or
cmc
mov
sub
pop
push
pushf
push
lahf
stos
xchg
stos
in
sahf
rcl
aam
nop
fidivr
gs
lea
dec
dec
push
fsub
pop
fisub
or
rol
mov
rol
push
mov
adc
add
je
xchg
adc
xor
dec
mov
js
cmps
cmp
out
cwde
mov
jns
inc
dec
dec
mov
adc
fwait
mov
pop
(bad)
(bad)
cmp
jg
push
cs
int
pop
pop
mov
adc
dec
jmp
jnp
jl
out
pop
push
sbb
sbb
jecxz
outs
mov
cmps
cmc
test
sub
test
and
cwde
add
int3
into
rcr
clc
leave
sbb
pop
and
mov
(bad)
jmp
add
imul
push
mov
fimul
cmps
pop
or
xor
mov
ss
dec
test
dec
pop
xor
int3
ret
aad
pop
je
es
sub
mov
mov
pop
and
xchg
push
jl
fdiv
adc
or
aaa
push
not
pop
jmp
sub
pop
inc
dec
pop
hlt
jno
not
xor
lock
sbb
into
adc
int3
pop
push
pop
dec
mov
xor
add
xchg
mov
push
xor
or
jmp
popf
jb
stc
lods
fs
pop
into
dec
pop
pop
push
dec
imul
(bad)
psubsw
fwait
or
mul
hlt
mov
push
or
loope
push
in
sub
mov
cs
add
push
jge
mov
mov
mov
in
(bad)
pop
jnp
call
push
or
sti
out
scas
pop
pop
xor
sbb
add
inc
mov
(bad)
cmp
bswap
cmp
add
in
rcl
mov
fnstcw
lahf
sub
add
jmp
mov
loop
imul
ficom
dec
jmp
mul
cmp
sub
movs
loopne
jl
push
pushf
dec
fwait
popf
mov
icebp
ret
mov
jl
bound
and
inc
lock
aas
xor
pop
or
cmc
xor
adc
inc
pop
fisubr
movs
aaa
jge
mov
movsx
sti
inc
dec
xor
sbb
pop
leave
dec
mov
shr
or
rcr
or
cmp
mov
das
ror
(bad)
rcr
jp
mov
loope
pop
pop
call
push
idiv
std
mov
mov
push
inc
adc
fist
inc
test
pop
cld
test
ds
arpl
int
dec
ins
mov
add
(bad)
repz
inc
sub
push
jp
pop
or
push
jne
inc
ds
aas
xchg
cmp
pop
fild
add
int
push
cs
aaa
fistp
lock
xor
fwait
pop
jae
mov
ja
int3
pushf
mov
js
dec
push
call
dec
pop
pop
shl
xor
cmp
jle
stc
adc
adc
daa
dec
sub
xchg
xchg
mov
mov
ins
nop
ins
pop
mov
sbb
mov
dec
hlt
sbb
ror
pop
jno
lock
sub
cld
sub
test
aam
js
call
ficomp
rcl
mov
xor
cwde
sbb
mov
(bad)
ror
adc
dec
movs
sti
je
push
arpl
rcr
movs
xchg
xor
mov
icebp
fnstcw
dec
lods
(bad)
popf
push
push
adc
push
dec
mov
ficom
pop
movaps
mov
out
pop
pusha
enter
xor
loopne
cwde
push
cld
movs
dec
xchg
fdiv
dec
rol
or
pop
adc
js
pop
js
sbb
clc
adc
push
repz
mov
and
xor
imul
(bad)
and
or
lock
jl
dec
aaa
xchg
push
ja
into
push
mov
mov
pop
retf
mov
cmc
(bad)
ror
pop
dec
lock
fdiv
idiv
out
clc
add
xlat
test
jno
fcom
xchg
repz
dec
or
pop
xchg
push
pop
and
or
xor
(bad)
aaa
pop
inc
jae
jae
fistp
push
sbb
mov
xchg
hlt
push
push
push
lea
inc
(bad)
pop
jne
je
cmp
mov
dec
adc
sbb
pop
cld
adc
test
in
pushf
hlt
cdq
icebp
adc
pop
not
ins
xchg
imul
mov
pop
push
sub
stc
inc
fild
mov
and
lock
mov
dec
pop
and
dec
(bad)
cmp
test
push
mov
dec
xchg
ins
rcr
aas
popa
mov
mov
in
inc
jge
push
es
(bad)
push
pop
aam
rcr
lods
movs
and
call
(bad)
xchg
lock
retf
idiv
adc
pushf
in
es
mov
xchg
and
mov
mov
dec
xlat
or
aas
test
jp
adc
mov
addr16
sub
xor
popf
lea
sub
mov
mov
push
mov
int3
pop
or
xor
cs
jl
dec
xor
(bad)
sub
aam
add
pop
int3
fistp
xchg
jbe
cmp
call
out
jns
push
pushf
ins
les
cmps
shr
push
loop
cmp
mov
in
xor
sub
mov
mov
je
ret
je
cwde
data16
ds
sub
test
pop
aam
inc
add
xchg
loopne
aam
fimul
jbe
cmp
bswap
pop
dec
int3
jmp
mov
adc
aas
jmp
loope
add
cmp
in
mov
shl
cmp
movs
cmp
cmp
push
jnp
and
xor
cwde
std
sub
icebp
stos
adc
stos
xchg
add
push
xchg
mov
nop
pmaxub
cld
mov
aam
or
add
pop
sub
fstp
popf
fnsave
and
test
retf
call
stc
jnp
cmps
jne
aas
ror
(bad)
xor
inc
push
jg
loop
shl
xchg
adc
sub
pop
ror
ds
dec
push
mov
ja
pop
shr
jge
test
pop
add
test
out
stos
enter
push
xchg
addr16
cld
dec
jb
gs
test
fist
cld
push
pusha
aam
aas
loope
pop
jmp
xchg
mov
out
sbb
jmp
arpl
mov
push
sahf
or
pop
and
mov
jle
push
sbb
sub
dec
inc
(bad)
mov
pop
ror
ins
and
(bad)
cld
xor
sub
fstp
(bad)
in
sbb
addr16
mov
out
int3
push
sar
(bad)
cmp
inc
cli
test
cmp
dec
xor
nop
xchg
int
in
sub
mov
adc
hlt
ins
enter
xor
es
rcr
mov
mov
ins
fimul
mov
sahf
mov
fnstsw
or
popa
adc
daa
and
pop
xchg
sbb
and
ins
push
dec
lock
or
jno
cmps
xchg
(bad)
cmp
and
pop
sar
dec
jb
outs
xchg
inc
hlt
xchg
cmp
mov
daa
cwde
fidiv
dec
pop
push
push
inc
aaa
call
jp
add
cs
or
test
xor
ins
pop
mov
movs
int3
ds
mov
xchg
xor
sar
mov
addr16
loop
rcr
into
jl
and
jns
cmp
pop
push
test
mov
pop
test
retf
les
cmp
int
mov
fucomi
jno
mov
adc
or
cmp
mov
push
outs
add
mov
xchg
test
int
mov
sbb
dec
xchg
shr
pop
cmp
and
jne
inc
stc
add
add
push
je
cwde
mov
fistp
iret
pop
jo
xor
cwde
arpl
aas
retf
ja
cwde
fbld
push
or
pop
inc
es
ins
jmp
sub
mov
mov
ret
pop
inc
ds
mov
aas
push
not
(bad)
in
rcl
test
xor
imul
leave
and
bound
js
jno
push
mov
dec
pop
call
aad
xor
inc
push
cdq
pop
mov
loop
ins
sub
cdq
push
mov
imul
cdq
clc
xchg
mov
fisttp
aad
test
loopne
xchg
mov
dec
pop
adc
cdq
sti
push
out
mov
jbe
addr16
or
pop
test
jle
pushf
leave
in
clc
xor
mov
(bad)
add
mov
lds
xchg
ret
hlt
scas
adc
inc
push
cs
cmp
push
clc
or
neg
into
push
lea
or
enter
in
int3
stos
loopne
mov
sbb
inc
loopne
out
addr16
mov
xchg
jl
cdq
dec
ja
popa
stos
add
pop
xor
xchg
pop
cmp
shl
add
mov
dec
fst
jns
lahf
pusha
cmps
or
(bad)
sbb
dec
xchg
add
nop
dec
pop
cmps
lds
xchg
push
and
cmp
sbb
shl
jno
or
push
pop
and
cmp
inc
xchg
mov
sub
imul
cmp
cmp
sbb
sbb
aam
pop
cmps
or
push
mov
mov
adc
in
push
xchg
xchg
push
mov
cmps
or
in
mov
outs
not
add
adc
push
jns
nop
adc
retf
aad
cmp
lds
fimul
xor
cmps
sbb
pop
aas
sub
pushf
sbb
out
mov
dec
loope
mov
test
pop
sub
add
mov
imul
mov
sub
(bad)
adc
in
bnd
out
adc
int3
int3
dec
cmp
aaa
movs
dec
sub
cmp
push
dec
jmp
xchg
shl
call
ins
and
aam
fiadd
fldl2e
ficom
dec
(bad)
cli
aam
pop
shr
ins
rcl
(bad)
mov
mov
enter
mov
pop
mov
mov
jmp
jmp
add
inc
lock
jg
push
movs
and
stos
enter
push
(bad)
stc
shl
mov
pop
gs
into
cmp
faddp
dec
jns
mov
fwait
push
jecxz
mov
jb
mov
ja
aam
push
lds
mov
call
pop
dec
out
mov
pop
clc
out
aaa
or
cmp
fisttp
addr16
aam
outs
out
mov
mov
cmp
push
sub
fdivr
call
popa
adc
fcom
add
imul
push
pop
xchg
adc
mov
mov
std
push
push
imul
and
into
pop
nop
mov
pushf
lods
jle
adc
dec
data16
push
xlat
mov
inc
push
or
or
jno
inc
adc
add
mov
mov
adc
and
jae
and
push
stos
fadd
(bad)
retf
ret
sub
hlt
push
mov
stc
rcl
rcr
or
or
adc
mov
jmp
loope
sub
add
movs
mov
xlat
std
loop
adc
sar
sahf
mov
inc
pop
in
add
push
imul
stc
ins
pop
push
fcomp
repz
sbb
xor
jecxz
outs
test
lods
mov
shl
je
inc
in
ret
adc
aaa
rcl
cmp
jmp
out
add
lods
pop
das
pop
loop
jecxz
mov
imul
push
sti
adc
xor
push
pop
dec
stos
push
stos
adc
and
pop
loop
cmp
bound
fs
jle
cmp
push
mov
jae
fwait
sbb
mov
dec
inc
ss
daa
(bad)
ds
mov
pop
or
push
cmp
rol
sub
iret
out
xchg
xor
adc
dec
add
jb
loope
inc
push
fisub
loopne
sbb
cwde
out
rcl
add
dec
rcr
(bad)
sub
mov
mov
mov
jmp
movs
inc
add
add
fcom
int
(bad)
dec
cmp
xchg
inc
sti
inc
sub
in
(bad)
mov
and
pop
xor
ds
(bad)
fist
jnp
push
and
sub
in
pop
dec
and
push
sub
daa
pop
adc
arpl
test
popa
xor
sub
hlt
(bad)
mov
adc
out
daa
pop
out
inc
or
es
and
sub
pop
cmp
pop
pushf
push
nop
and
sub
push
or
add
adc
fild
sbb
pusha
mov
dec
inc
das
nop
dec
inc
jp
mov
gs
movs
mov
add
pop
inc
add
outs
add
arpl
popa
cmp
jno
xchg
lods
loopne
mov
pop
retf
out
xor
mov
lea
(bad)
push
cdq
sub
mov
daa
jle
outs
mov
adc
inc
pushf
cmps
adc
fisttp
xchg
stos
out
in
dec
and
pop
adc
mov
dec
faddp
mov
loop
xor
arpl
or
mov
pop
add
test
dec
lock
fbstp
movs
dec
mov
aad
cmp
inc
pop
int3
(bad)
fmul
std
fdiv
cmps
retf
pop
ss
sub
inc
es
xlat
mov
pop
add
dec
dec
mov
or
fwait
cdq
inc
stos
mov
pop
pop
or
lea
imul
mov
jns
xor
imul
mov
inc
mov
pop
fld
sti
mov
cmp
xchg
not
fstp
aaa
sbb
rcr
push
lods
ficomp
sub
out
and
mov
icebp
je
cld
inc
inc
out
movnti
loop
dec
ss
mov
sub
push
mov
pop
inc
call
xor
push
(bad)
lea
jmp
mov
test
mov
repnz
popf
adc
shl
inc
nop
xchg
cli
cmp
jecxz
imul
cmc
hlt
in
sub
icebp
fstp
adc
cmp
fstp
inc
loopne
inc
mov
std
jb
int3
cmps
push
or
cmp
sbb
jbe
mov
jmp
fnsave
dec
popa
sbb
ja
mov
mov
aaa
outs
xor
or
sub
jne
pop
neg
scas
push
(bad)
mov
fs
push
fbstp
fwait
pop
pop
out
shl
stc
test
test
(bad)
cmp
test
ret
mov
jo
push
xor
stos
pop
dec
xchg
sahf
add
ds
retf
inc
pop
push
dec
push
imul
mov
xchg
fabs
rcr
into
cmc
push
adc
mov
enter
arpl
cmp
inc
fisub
mov
or
sbb
cs
outs
or
fidiv
ins
sub
and
loop
mov
mov
pop
push
out
sub
rep
dec
sub
ret
adc
pushf
dec
adc
xchg
retf
dec
xchg
jl
imul
aad
shr
fnstsw
stos
es
push
loop
test
lock
and
push
or
cld
bound
push
stos
out
push
push
pop
sbb
ret
repnz
out
sub
inc
xchg
hlt
cmps
mov
xlat
push
jp
leave
int
jbe
rcr
mov
ins
mov
mov
xor
jae
jo
add
in
add
mov
jnp
inc
ror
add
push
mov
fucomip
sbb
cmp
shl
sbb
jmp
cs
dec
sub
aad
inc
push
inc
mov
ret
(bad)
call
jp
mov
aad
cs
mov
popa
cld
or
and
hlt
xor
xor
pop
pop
arpl
xchg
out
in
mov
push
sub
ror
jno
jle
dec
xchg
sub
push
stc
jl
cmp
cmp
rol
fcom
pop
adc
(bad)
dec
pop
cli
fstp
shl
inc
daa
ins
xchg
fidiv
ror
mov
pop
xchg
xor
push
(bad)
rsm
das
and
sahf
xor
aam
iret
push
mov
repnz
or
loopne
or
xor
cdq
mov
inc
adc
adc
stos
cli
hlt
push
cs
adc
push
arpl
ja
and
xchg
out
sub
push
cmp
xchg
icebp
call
inc
cmps
popf
dec
push
xchg
imul
mov
jge
mov
fcomip
imul
fild
xchg
(bad)
push
pop
adc
mov
out
sub
ficomp
xchg
enter
dec
mov
lds
test
jg
push
and
ret
int3
imul
fldcw
ja
xor
dec
push
sub
push
or
jnp
adc
jg
push
xchg
fmul
outs
jo
int3
jnp
add
xor
pushf
stc
inc
imul
mov
test
dec
mov
ror
out
rol
pop
cli
sbb
xchg
mov
push
fucomp
add
push
dec
mov
jae
inc
ja
mov
pushf
sahf
dec
jge
loope
test
(bad)
and
xchg
jnp
test
mov
xchg
call
loopne
icebp
xor
int3
adc
xor
or
mov
movs
mov
mov
push
pop
adc
dec
mov
cmp
pop
adc
dec
icebp
mov
fsubr
mov
mov
sti
mov
cs
cmp
hlt
xchg
xchg
lods
sbb
addr16
sbb
mov
xchg
sahf
mov
adc
cmps
xor
(bad)
ror
xchg
cdq
jg
mov
pop
popa
not
dec
push
push
mov
jmp
dec
sub
and
int3
push
fwait
sbb
stc
ss
imul
add
inc
out
mov
imul
fiadd
inc
shr
(bad)
cmp
jnp
dec
mov
ror
rcl
cmc
cld
xchg
icebp
inc
or
dec
repnz
stc
adc
mov
sbb
dec
mov
stos
clc
sbb
(bad)
pop
repnz
inc
jg
fadd
dec
push
jmp
in
adc
ins
pop
dec
xor
inc
nop
jmp
leave
and
push
stc
fsqrt
(bad)
push
sub
enter
pop
sub
pop
ficom
ror
and
pushf
xor
outs
fs
mov
mov
add
dec
cmp
push
cmp
loop
inc
cli
ss
in
push
(bad)
xchg
sbb
stos
add
push
and
push
inc
jecxz
out
and
int
dec
jecxz
cdq
push
idiv
or
jae
(bad)
pushf
loopne
retf
mov
mov
push
inc
je
add
lods
adc
fwait
gs
or
mov
pop
rol
out
iret
aaa
push
rcr
daa
add
les
xor
idiv
mov
xor
mov
jne
enter
jle
stos
adc
mov
int
mov
daa
jmp
adc
retf
das
lock
imul
push
ds
shl
mov
aaa
push
push
pop
push
aaa
pop
stos
popf
dec
pushf
ror
movs
pop
mov
into
sub
stos
add
mov
aam
xor
(bad)
add
push
int
data16
setl
mov
pop
push
stc
mov
pushf
push
push
loope
je
call
das
xor
push
test
sbb
call
or
push
scas
inc
mov
push
(bad)
fld
push
cmp
add
(bad)
adc
dec
ins
cmp
and
mov
and
jne
add
push
stos
jo
mov
in
into
mul
pop
xchg
clc
mov
jmp
sub
shr
xlat
xor
push
and
push
and
pop
imul
lahf
ficom
mov
push
add
cmp
mov
jecxz
jge
inc
lods
stos
aam
mov
jb
sub
pop
pop
cmp
or
cwde
popa
fdiv
pop
aas
jp
pop
mov
movs
aaa
xor
fisttp
(bad)
ror
mov
xchg
push
fwait
cmps
mov
add
pop
addr16
push
add
cld
arpl
add
sbb
inc
inc
pop
outs
adc
pushf
dec
dec
sub
in
mov
inc
and
pop
arpl
adc
sahf
out
mov
rol
(bad)
fcomip
fist
mov
cmps
xchg
and
loope
imul
sbb
xcrypt-cfb
cmps
addr16
inc
adc
lods
sbb
loop
cmp
loope
cli
retf
gs
cmp
xor
(bad)
cld
mov
dec
ror
add
cmps
loope
and
cmp
mov
addr16
sub
leave
or
div
pop
lods
(bad)
mov
xor
mov
mov
sub
aad
lods
xchg
xor
je
add
popf
stc
and
inc
xchg
lea
rcr
pop
scas
mul
sub
dec
push
mov
xlat
xchg
fisttp
shl
mov
jg
fcomp
sub
pop
dec
dec
pop
xchg
jg
jo
push
cmps
mov
inc
mov
test
dec
mov
inc
cmps
cmps
jle
mov
lods
sub
or
sbb
pop
mov
shl
fsubr
ror
and
neg
cmp
out
int3
push
(bad)
push
add
inc
push
xchg
ins
fldenv
xlat
inc
sbb
stos
lods
sbb
(bad)
lock
mov
ins
sub
dec
lahf
jb
addr16
mov
mov
xchg
push
mov
lahf
cmp
add
ja
jne
cmp
das
xchg
pushf
xchg
(bad)
mov
mov
cld
lock
mov
mov
cmp
retf
pop
sub
or
popa
or
jmp
or
les
jns
dec
pop
jp
inc
out
and
fidiv
cmp
daa
in
je
pop
repnz
fst
out
inc
retf
pop
jb
(bad)
mov
call
cmp
mov
jmp
jns
sub
rcl
xor
jge
daa
stos
test
push
sub
pop
das
sbb
push
mov
and
add
jb
mov
xchg
dec
movs
rcl
stc
cmp
or
mov
(bad)
aaa
xor
loopne
je
push
fisttp
clc
pop
mov
mov
cmc
xchg
in
adc
xor
imul
std
jge
dec
mov
ror
adc
inc
sbb
scas
add
or
mov
xor
loop
xchg
(bad)
xor
mov
in
fcomp
jl
(bad)
mov
jno
fdivr
adc
xor
xor
sbb
mov
xchg
call
ret
int
pop
pop
or
icebp
out
stc
inc
jl
js
cs
pop
test
xor
test
mov
inc
gs
in
fdivr
rcr
mov
xchg
xchg
sbb
pop
jecxz
cmp
adc
pushf
adc
cmp
in
mov
adc
sbb
(bad)
aas
adc
mov
push
test
sbb
cdq
(bad)
cld
mov
pop
mov
test
out
mov
mov
lea
test
cdq
pop
mov
int
mov
mov
push
cmp
mov
xchg
aas
aad
adc
inc
push
aaa
add
cmps
fnstenv
aaa
and
loopne
les
mov
dec
cmp
mov
fnstenv
je
mov
push
gs
xchg
fs
dec
jle
aaa
push
std
mov
(bad)
stos
sbb
fst
xor
pop
daa
push
jp
cmp
adc
fmul
jmp
shl
pop
movs
(bad)
ss
mov
adc
shl
outs
(bad)
(bad)
into
(bad)
int
outs
bound
jmp
dec
mov
push
clc
shl
aas
cli
fdiv
xor
mov
push
xchg
sbb
les
and
mov
arpl
jmp
ficom
add
and
mov
les
pop
xlat
add
mov
mov
xchg
test
push
and
xchg
ja
mov
rol
mov
dec
sbb
ret
lock
bound
cmp
or
pop
lock
fmul
xor
es
mov
loope
pop
add
inc
ins
mov
xchg
mov
xlat
ja
mov
bound
idiv
cmps
es
xchg
daa
and
pusha
add
adc
mov
adc
stc
dec
aaa
int3
inc
push
pop
mov
pop
cmp
iret
cld
mov
jle
js
inc
jae
sbb
push
ja
hlt
sbb
sub
sub
or
jo
adc
push
mov
mov
(bad)
out
mov
and
push
push
xor
stos
loop
pop
mov
inc
in
cmp
stos
dec
aaa
inc
test
aam
cmp
fucomip
inc
fcom
push
data16
mov
adc
fwait
stos
inc
mov
mov
test
jnp
xchg
or
cs
jo
inc
mov
fidivr
push
dec
sbb
mov
dec
add
fidiv
aad
ret
or
jecxz
call
sti
mov
mov
popf
push
inc
mov
in
mov
cwde
(bad)
dec
scas
or
repnz
push
jg
mov
sub
neg
xchg
mov
(bad)
pop
std
mov
iret
clc
mov
mov
stos
dec
std
test
pop
cwde
dec
movs
and
pop
xchg
cs
jecxz
imul
(bad)
xlat
ss
div
call
xor
and
push
(bad)
fisttp
add
mov
icebp
mov
int3
dec
sub
test
loop
(bad)
ds
fldenv
addr16
imul
dec
lock
ja
inc
sub
dec
cmp
loop
pop
es
dec
imul
fbstp
into
ins
(bad)
sbb
in
cmp
dec
scas
ins
call
movs
push
fcom
rcl
dec
lods
sub
loop
jge
(bad)
xor
movs
mov
xchg
mov
xchg
inc
lds
push
jg
or
cmp
or
dec
sub
jl
pop
jge
or
sub
jmp
lods
mov
in
push
inc
pop
cld
xchg
xor
jg
jno
mov
jmp
push
(bad)
jl
les
pushf
retf
pop
iret
push
jmp
cmps
xchg
mov
dec
fiadd
(bad)
jecxz
repz
sbb
iret
dec
sub
xlat
mov
add
daa
(bad)
mov
loopne
and
pop
mov
mov
add
sbb
daa
sub
add
psraw
bound
and
push
add
movs
scas
nop
sub
dec
dec
and
jb
(bad)
mov
clc
xchg
mov
cmp
inc
lods
in
sub
jl
aad
pop
std
cld
fld
jp
(bad)
aaa
mov
retf
ins
dec
and
sub
aaa
int
xchg
ds
xchg
(bad)
lods
or
sbb
cs
push
cmp
inc
dec
jp
mov
add
mov
push
and
aaa
cmps
mov
sub
imul
retf
xchg
cmp
fisttp
push
add
xor
lock
dec
aas
or
mov
(bad)
pop
xchg
mul
push
jge
push
jb
loope
imul
rcl
ins
imul
lahf
mov
or
or
lea
sub
imul
cld
adc
(bad)
mov
push
dec
mov
xchg
lods
add
lds
shl
sbb
rol
cwde
stos
sbb
(bad)
push
out
cmps
int3
frstpm(287
(bad)
inc
dec
adc
mov
sbb
inc
outs
dec
(bad)
popf
xor
inc
popf
div
mov
call
cmp
cmps
das
in
mov
adc
test
call
shl
adc
mov
mov
add
xor
sub
jnp
adc
xchg
adc
in
jno
jmp
int
fdivr
dec
nop
mov
sbb
dec
mov
cs
je
push
scas
test
pop
shr
cmp
pop
les
data16
hlt
int3
in
pop
inc
rcl
stc
sar
adc
sub
pop
cwde
int3
mov
push
push
pop
imul
mov
aam
pop
and
icebp
sar
cmps
sub
aam
dec
mov
mov
xchg
or
inc
adc
push
ins
mov
mov
call
add
inc
cmps
dec
inc
mov
push
icebp
fidivr
test
xchg
les
mov
adc
pop
push
pushf
(bad)
add
arpl
int
sub
cmp
pushf
addr16
xor
pushf
bound
(bad)
cmp
enter
addr16
pop
mov
pop
inc
push
clc
dec
or
rcl
or
adc
mov
add
jge
icebp
imul
std
fiadd
movs
movaps
sbb
call
inc
sub
or
xor
adc
pop
loopne
std
cmc
xchg
mov
js
int3
call
inc
cdq
cmp
xchg
mov
aad
adc
xor
sbb
retf
sub
shl
mov
and
dec
int3
jne
or
stos
into
jecxz
sub
xchg
mov
mov
mov
dec
xlat
mov
jnp
loop
inc
pop
push
ds
jp
jmp
daa
mov
imul
jbe
xor
shr
fmul
hlt
jo
pop
add
cmp
push
xor
pop
ja
cmp
fs
jg
xchg
loop
int
ss
or
cmps
mov
xchg
inc
lods
xchg
inc
jbe
imul
dec
test
(bad)
sar
jle
push
xor
fsub
adc
add
dec
mov
ins
ss
mov
xor
mov
adc
call
scas
test
xchg
jmp
xchg
loope
lea
lods
sub
sahf
pusha
mov
lea
loopne
push
inc
arpl
lea
ror
or
jl
ret
sbb
cmp
das
fisubr
in
out
inc
out
test
push
adc
pop
sbb
mov
ja
pushf
cwde
xlat
lock
les
mov
or
leave
(bad)
je
pop
xlat
xchg
xchg
xchg
xchg
repnz
dec
pop
sub
call
cs
mov
inc
mov
mov
or
push
dec
ret
sub
mov
adc
out
xlat
add
xor
ja
mov
ficomp
and
rcl
stos
and
fdiv
pop
shr
jl
ret
xlat
and
sub
stos
mov
xor
inc
shl
pop
nop
add
stos
jnp
mov
out
jbe
cmp
leave
hlt
fwait
je
push
mov
mov
mov
xor
or
pop
arpl
push
pop
arpl
xchg
sbb
xlat
ds
pop
xchg
bound
xchg
mov
out
out
ret
(bad)
out
clc
mov
not
jno
cmps
arpl
pop
dec
pop
sbb
mov
call
int3
lods
mov
cs
jns
retf
hlt
movs
xchg
xor
sbb
test
call
mov
xchg
jnp
jp
dec
pop
xor
out
mov
xor
lahf
neg
sti
pop
inc
dec
pop
repz
jnp
push
push
in
arpl
fld
into
and
xor
mov
das
in
xlat
sbb
nop
repnz
mov
int3
lods
pop
dec
and
inc
ret
push
inc
cmp
dec
dec
outs
aam
jecxz
inc
cld
dec
ss
add
rol
jbe
rol
fidivr
sbb
(bad)
jnp
icebp
cmps
scas
adc
pop
pop
push
adc
ja
inc
and
add
pop
fstp
xor
mov
out
aam
lock
cmps
mov
dec
jae
xchg
ja
and
out
dec
ror
mov
sbb
or
add
pop
ret
mov
stos
push
clc
mov
add
stc
dec
cmp
fist
cmps
jae
inc
repz
nop
iret
xchg
inc
inc
aad
cmps
in
add
test
nop
adc
in
bound
test
repnz
ja
jmp
cmc
mov
shl
(bad)
xor
dec
fidivr
xor
ss
and
or
adc
stc
jge
push
pop
repz
sub
fucomi
repz
push
pop
adc
and
test
ds
imul
aad
dec
leave
adc
shl
repnz
int3
ja
(bad)
pop
add
push
and
out
add
push
pushf
ja
adc
or
push
mov
ins
sub
mov
sbb
or
cmp
jnp
rcl
ins
pop
jnp
mov
inc
movs
jnp
je
adc
ret
cmp
cs
and
inc
mov
(bad)
arpl
adc
(bad)
std
popf
shl
ret
lea
or
pop
(bad)
sbb
movs
(bad)
cwde
rcl
lahf
xchg
or
outs
movs
test
(bad)
and
rcr
xor
icebp
dec
mov
out
arpl
cmp
cmps
shr
dec
and
sub
mov
retf
mov
inc
sbb
add
aas
test
cmp
(bad)
lds
or
loope
(bad)
cmps
push
xchg
pop
cmp
xchg
xchg
pop
cmps
(bad)
std
mov
jae
rcr
mov
add
imul
cs
inc
pop
clc
clc
mov
lds
out
dec
mov
out
aad
pop
jecxz
mov
cmp
out
loopne
xchg
add
ins
paddsw
data16
addr16
rol
scas
pushf
sbb
je
and
xchg
sbb
and
and
add
repnz
stc
leave
ret
out
fsincos
daa
push
stc
jge
fadd
push
pusha
jno
and
(bad)
jp
mov
gs
rcr
js
out
dec
sub
xchg
ror
cmps
outs
mov
dec
fnstcw
sub
push
loop
mov
cmps
imul
stos
das
push
out
jae
xor
sub
fisttp
(bad)
cld
dec
or
mov
adc
push
sbb
sub
sbb
outs
sbb
cmp
cli
icebp
pop
inc
sub
nop
sub
lea
sub
in
leave
jb
sbb
ja
ret
sub
xlat
cmp
xchg
push
push
jnp
hlt
stos
dec
inc
sub
idiv
xchg
push
jl
pop
ss
add
test
inc
sar
adc
sub
int3
push
mov
push
xor
fild
jmp
sub
xchg
dec
push
pop
jl
push
jmp
(bad)
xchg
mov
and
jmp
(bad)
cli
int3
sub
in
adc
(bad)
jp
cmp
ja
adc
pushf
mov
pop
cmc
addr16
mov
pop
ja
mov
mov
jp
aaa
(bad)
jl
dec
jno
mov
into
pop
daa
xchg
leave
xor
imul
dec
mov
lods
aas
cld
jno
sbb
cmp
aam
inc
or
mov
aas
dec
jb
mov
pop
cmp
(bad)
inc
ret
into
cli
pop
sbb
sahf
xor
loopne
in
sub
rcr
lds
adc
dec
test
test
sahf
mov
jge
sar
add
adc
inc
dec
(bad)
inc
into
leave
push
sub
scas
cs
jne
jb
dec
adc
xchg
and
jno
push
inc
in
scas
mov
je
add
mov
jp
leave
fs
cmps
mov
inc
mov
int
(bad)
or
or
ds
sbb
inc
jno
retf
loop
ja
fisub
pop
in
sar
or
jne
cwde
cmp
and
lea
in
addr16
lods
push
push
test
lea
mov
push
pop
outs
mov
loop
aad
mov
dec
sar
mov
enter
and
popf
jmp
push
adc
jmp
mov
fmul
mov
inc
rcl
pop
cmps
shr
push
scas
push
pushf
stos
test
add
std
push
iret
ror
fstp
inc
pop
jmp
fdiv
daa
mov
pop
add
(bad)
not
dec
movs
mov
pop
push
(bad)
add
push
xchg
sub
sub
aaa
gs
dec
loopne
les
pop
std
pop
cmp
mov
adc
dec
push
prefetch
push
fldcw
je
dec
push
mov
push
and
push
mov
inc
sbb
dec
sti
les
push
cmp
ss
mov
push
jg
add
adc
mov
pop
clc
in
int
mul
push
shl
cmp
pop
push
enter
mov
cmc
jnp
fisubr
adc
dec
jg
jl
inc
(bad)
jle
pop
xlat
mov
push
jb
add
cwde
fistp
mov
pop
dec
ss
fs
dec
xor
ja
or
loopne
mov
dec
dec
inc
jnp
jbe
dec
inc
hlt
imul
jl
imul
cmc
cmps
dec
addr16
les
lock
or
mov
int
cli
pop
bound
aam
jnp
movs
sbb
arpl
movs
mov
fisttp
jge
out
push
cmp
mov
mov
ds
inc
and
imul
pop
mov
xlat
jg
mov
and
inc
or
rcl
pop
sub
add
pushf
fist
xchg
pop
rcr
inc
pop
aam
popa
sbb
dec
pushf
xor
xor
sar
pop
je
or
mov
enter
jo
dec
call
adc
xchg
pop
mov
fucomi
adc
dec
xchg
iret
add
lds
mov
cwde
pop
(bad)
or
ret
pop
inc
int3
ret
cwde
arpl
shr
loopne
add
popa
mov
mov
loope
ds
cdq
out
scas
lock
fadd
xchg
pushf
push
cmps
test
jmp
sub
or
movs
cmp
out
(bad)
and
jmp
lea
xchg
and
sbb
dec
sub
mov
fdiv
adc
pop
fs
stos
push
mov
adc
cmp
mov
mov
pop
push
(bad)
mov
mov
jb
pushf
adc
les
stos
add
mov
sbb
xchg
int3
adc
push
pop
pop
add
ror
push
int
xchg
dec
pop
enter
fstp
cdq
mov
out
pop
cmp
pop
mov
sbb
pop
out
inc
jl
cmp
daa
adc
icebp
pop
bnd
ja
pushf
cld
scas
mov
iret
add
mov
adc
mov
mov
pusha
fst
rcl
push
mov
sbb
push
int3
jbe
xor
pushf
test
mov
push
push
lods
nop
pop
ins
dec
add
pop
mov
fs
jp
or
inc
fiadd
mov
cli
pop
or
and
sar
sub
cmp
test
pop
push
mov
dec
mov
pop
jl
enter
fldenv
clc
jle
jns
lods
ja
repnz
addr16
in
mov
ja
cmp
fsubr
dec
imul
test
cmp
and
adc
ret
pushf
or
xchg
pop
pop
ret
add
xchg
jge
adc
push
mov
cmps
pop
(bad)
(bad)
and
les
xor
outs
adc
out
(bad)
cmp
adc
in
ds
addr16
jg
retf
fcom
mov
or
neg
push
jbe
loopne
adc
fwait
sub
inc
xor
popa
popf
inc
sub
adc
push
ins
jno
mov
jge
jecxz
add
in
jns
xchg
popf
jmp
jbe
dec
stos
sbb
dec
xchg
cdq
xor
rcr
iret
xor
mov
ins
xor
ret
mov
dec
test
scas
pop
add
dec
cmp
lods
inc
test
leave
mov
mov
lods
pushf
jl
pusha
sub
mov
popf
jns
push
rol
push
jmp
lods
or
fstp
xchg
adc
cmps
or
mov
and
(bad)
mov
das
enter
mov
pop
out
xchg
sbb
xor
jno
push
stc
(bad)
pop
aam
je
js
cmc
pop
push
clc
fsub
add
retf
bound
enter
call
add
and
mov
(bad)
int3
adc
pop
imul
inc
jl
xor
xchg
or
adc
adc
scas
or
jmp
jns
loopne
fsubr
pop
in
or
jmp
test
int3
lock
inc
inc
mov
shl
in
loope
and
cld
adc
sub
outs
push
aam
(bad)
mov
ins
mov
add
adc
xlat
imul
or
pop
mov
sbb
lock
sahf
out
popa
mul
mov
xchg
fcmovbe
hlt
in
es
cmp
ins
push
pop
rol
xlat
jecxz
add
or
dec
aaa
mov
dec
mov
dec
xor
shr
cs
mov
add
ror
push
push
in
nop
es
int3
(bad)
push
out
mov
sub
in
mov
mov
jnp
stos
loopne
jmp
mov
push
repz
cmp
sub
aam
push
sub
pop
cmp
lods
es
cmc
xchg
mov
jl
pop
fidiv
pop
push
pushf
push
inc
hlt
push
fwait
jbe
sbb
call
or
push
pop
add
dec
and
push
out
ficom
inc
and
cld
fcom
push
mov
and
inc
(bad)
mov
daa
adc
sbb
ins
les
or
repnz
push
inc
in
mov
sahf
inc
arpl
sbb
ret
inc
ja
mov
inc
pop
add
nop
pop
arpl
rol
jecxz
inc
push
adc
les
push
lds
imul
pop
mov
outs
xor
sbb
iret
jmp
jp
aas
adc
mov
fdivr
push
add
test
dec
mov
ror
xchg
add
stos
or
add
xchg
adc
inc
rcl
mov
int3
inc
pop
outs
cmc
int3
call
xor
fnsave
loopne
out
mov
test
gs
push
and
out
and
dec
xchg
xlat
call
das
stos
pop
(bad)
fisub
sub
shl
xchg
int
in
(bad)
loopne
inc
cmp
jae
fistp
xchg
add
sub
pop
into
pop
clc
add
loopne
sub
retf
jb
punpcklwd
pop
in
sar
add
btc
addr16
rcr
jns
mov
pop
int3
push
movs
inc
fdiv
loop
rcr
xchg
ret
cmp
test
arpl
fstp
adc
scas
es
fcomp
cmps
call
cmp
dec
arpl
jnp
test
fwait
mov
je
sbb
scas
sub
sub
pusha
mov
(bad)
push
call
push
xor
cmc
cwde
mov
sbb
push
push
cmp
pop
or
into
mov
and
pop
enter
in
cmps
int3
pop
pop
xchg
push
jge
cmps
push
in
fs
cmp
cmp
sub
cld
adc
rcl
adc
jp
jl
test
or
xchg
aaa
aam
test
xchg
add
jno
fist
xchg
cwde
xor
rcr
out
xor
shl
xor
iret
lahf
movzx
mov
mov
push
or
push
aaa
dec
ret
outs
idiv
sub
cmp
scas
pop
mov
push
or
mov
add
push
lock
mov
popf
imul
leave
push
ss
fld
fild
dec
ret
sub
jae
mov
(bad)
loopne
cld
cmps
dec
pop
mov
arpl
test
push
cmp
sub
dec
mov
inc
cmps
popf
out
dec
mov
(bad)
in
inc
fldcw
xor
cmp
js
shl
cmp
xor
idiv
jno
cwde
push
jne
test
xor
int3
jne
mov
in
inc
cwde
xchg
sub
sbb
rol
fwait
jmp
push
and
sub
inc
call
mov
cmp
push
jo
sbb
mov
mov
test
jns
lds
mov
rcr
je
push
mov
fcmovne
fwait
(bad)
loop
pushf
dec
ss
cld
pop
cmp
test
push
sub
xchg
clc
inc
pop
pop
lods
pop
popa
and
lea
cli
out
xchg
push
mov
xlat
inc
or
push
adc
adc
cmp
lock
adc
imul
jmp
ja
sub
lds
loope
push
sti
and
cld
aad
mov
jle
jmp
sbb
cmps
mov
sub
mov
test
icebp
add
xchg
mov
(bad)
fist
sub
loopne
pusha
adc
out
jp
sbb
adc
clc
mov
xchg
cmp
ds
adc
xchg
rol
mov
cdq
pop
sahf
and
pop
xor
out
repnz
pop
cmp
retf
(bad)
cmp
pop
outs
(bad)
stc
cmp
repnz
add
ret
mov
aam
fcom
and
xor
mov
in
mov
in
push
(bad)
fnsave
fst
cmps
add
sub
mov
rcl
cmp
push
std
mov
mov
or
adc
cmp
out
mov
mov
scas
cs
pop
push
jno
leave
sub
jp
inc
fadd
loopne
cwde
cmp
mov
aaa
dec
jno
push
sti
push
es
hlt
popa
repnz
neg
push
push
inc
cdq
jp
(bad)
loope
pop
or
and
clc
dec
shr
dec
cmp
imul
cwde
adc
leave
jae
fdivp
add
je
xchg
cmps
xor
dec
aas
(bad)
dec
mov
ins
or
sbb
test
out
add
clc
jmp
cs
mov
mov
mov
in
jnp
das
pop
adc
and
daa
aam
dec
xor
pop
mov
enter
loopne
xor
lea
mov
dec
(bad)
cmp
fmul
add
mul
sbb
lock
mov
mov
and
mov
jae
rcl
mov
sub
sbb
jl
push
xchg
pop
cmps
xchg
aam
shr
cdq
xor
sahf
hlt
push
stos
push
fadd
push
pop
adc
mov
push
(bad)
mov
xor
out
lahf
dec
pop
and
mov
inc
loopne
sbb
repz
jmp
outs
aam
pop
xor
and
(bad)
pop
push
bound
jbe
inc
sahf
mov
dec
enter
push
test
arpl
std
inc
push
loop
xchg
sub
addps
stos
xor
cmps
adc
or
cdq
or
push
daa
cld
pop
addr16
mov
jmp
inc
(bad)
iret
and
cmp
(bad)
arpl
sub
std
adc
inc
test
loope
call
test
dec
xchg
outs
jle
inc
scas
push
call
sahf
xor
xlat
sub
cmp
xchg
pop
push
or
xchg
mov
popa
or
jbe
shl
push
mov
add
icebp
dec
mov
ins
jo
sbb
mov
arpl
ret
xchg
push
inc
iret
shl
ja
sahf
xchg
sub
lds
ret
add
adc
inc
cmp
std
imul
push
nop
shl
(bad)
sub
mov
or
mov
dec
mul
add
es
leave
(bad)
xchg
mov
and
pop
aaa
icebp
fdivr
loope
into
dec
pop
loopne
xchg
xchg
cmp
push
sub
jnp
xchg
pop
push
in
push
mov
fldcw
idiv
push
cdq
mov
(bad)
loop
xchg
aam
or
sub
ins
addr16
fistp
push
add
pop
adc
pushf
dec
push
popf
lock
mov
xchg
daa
cmp
lods
push
fsubr
mov
jno
cmp
sar
fcomp
pop
scas
sahf
jl
jb
jle
addr16
xor
push
dec
(bad)
sub
shr
dec
sbb
jo
aaa
pop
in
xlat
xor
out
sub
jge
dec
xchg
jnp
add
scas
pop
in
mov
outs
call
push
dec
les
in
dec
add
fcmovu
daa
pushf
(bad)
push
sbb
or
inc
xor
sub
imul
lods
aaa
mov
(bad)
sahf
push
xchg
jmp
(bad)
xchg
sar
adc
sbb
xor
call
inc
inc
cs
jns
mov
sub
or
jp
(bad)
out
sbb
mov
(bad)
out
mov
test
jne
jl
jge
imul
int
js
sub
(bad)
sbb
pop
imul
fwait
dec
outs
and
mov
dec
(bad)
pop
pop
loopne
fisubr
cmc
adc
xchg
mov
mov
(bad)
ins
outs
shl
div
sub
sub
lock
sub
arpl
jecxz
jo
ror
jb
aaa
add
sbb
cdq
jo
push
ds
into
in
loope
arpl
and
neg
(bad)
xor
fs
sbb
push
out
xchg
sti
arpl
xchg
(bad)
xor
dec
addr16
or
xor
fadd
xchg
iret
xor
arpl
hlt
dec
inc
push
pop
pop
pushf
adc
fsub
shl
imul
and
popa
pop
les
adc
jns
aam
ret
fild
stos
pop
fmul
cmps
add
mov
sub
pop
aad
out
xchg
xchg
xchg
sbb
pop
add
std
push
les
sbb
dec
dec
leave
stc
int3
jg
(bad)
inc
xlat
jecxz
aad
mov
pop
shl
lds
repnz
push
xchg
cmp
fs
pop
mov
adc
add
mov
lock
sbb
xor
and
int
fcom
cmp
push
jae
movs
dec
inc
add
jmp
loop
pop
fiadd
mov
cmps
fsub
jmp
dec
popa
dec
cmp
xor
inc
and
xchg
aam
fsubr
aaa
add
or
adc
lods
inc
xor
dec
fistp
rcr
pop
mov
lock
xor
push
push
(bad)
fadd
movs
inc
sub
mov
lock
cmps
fcmovnbe
xchg
jo
cmp
sbb
arpl
dec
jb
pop
jb
xchg
mov
rcl
pop
js
push
dec
bound
sub
push
(bad)
push
sub
pop
cmp
mov
fimul
inc
retf
pop
dec
out
ja
fwait
add
pop
in
dec
sbb
xor
and
rcl
cwde
xchg
xchg
pop
dec
loop
sub
cmp
aas
fs
sbb
enter
ds
mov
dec
retf
scas
jb
sbb
lods
push
test
stos
cmp
mov
sahf
pop
adc
rcr
add
das
or
(bad)
mov
and
dec
leave
pop
fistp
mov
ins
es
xchg
fsub
aam
(bad)
xor
pop
mov
shr
ja
xor
sub
inc
movs
add
xchg
and
mov
cmp
das
aam
(bad)
dec
ss
cmc
cld
or
in
pop
pushf
(bad)
call
aaa
stc
jne
inc
retf
scas
(bad)
js
pop
ds
inc
cmovns
jnp
push
retf
push
fisttp
add
shr
scas
mov
or
sbb
scas
inc
jmp
pop
sti
neg
adc
add
(bad)
jmp
jo
xor
pop
pop
loope
sub
les
mov
in
pop
arpl
mov
popf
adc
cwde
push
push
in
jne
or
daa
ret
sahf
fadd
(bad)
shl
jl
inc
mov
rcl
pop
jb
or
xchg
data16
pop
inc
(bad)
sbb
iret
xor
pop
cmc
xchg
push
inc
daa
call
sbb
inc
jb
pop
pop
jg
pop
out
jb
or
cmps
ins
stos
ja
(bad)
stos
fst
fs
adc
jne
mov
sub
aas
mov
ins
sub
aas
std
pop
ja
(bad)
(bad)
mov
xlat
dec
jmp
jg
pop
xchg
aam
push
out
in
push
cdq
shr
pushf
xchg
call
cmp
dec
movs
lock
retf
xchg
loope
push
(bad)
iret
xor
mov
es
jmp
stos
mov
add
adc
movs
mov
cmc
scas
popf
push
sbb
lock
stos
jp
or
inc
cmp
std
or
pop
adc
btr
jnp
ds
test
aas
cwde
sbb
adc
lock
int
mov
xchg
pop
and
retf
dec
add
adc
fisubr
mov
mov
lea
mov
nop
xor
xchg
(bad)
and
outs
jge
pop
movs
sub
or
fst
pop
out
fsub
mov
and
push
sti
sub
sub
(bad)
jge
idiv
int3
adc
popa
push
push
dec
ins
stc
popf
nop
add
xchg
xor
adc
add
cmp
lahf
cwde
adc
lods
jmp
mov
mov
xchg
fdivr
push
jmp
mov
add
outs
pop
mov
cmp
pop
inc
push
cli
push
push
pop
rcr
imul
cmp
xchg
repz
out
sub
daa
rol
sub
cmp
jge
push
out
dec
(bad)
loop
adc
xor
xor
dec
ins
rcr
xchg
and
lahf
mov
sub
jge
add
or
clc
icebp
(bad)
(bad)
aam
cmovno
adc
sbb
icebp
fldl2t
in
push
sbb
adc
out
sub
adc
cmc
(bad)
call
mov
dec
cmc
ret
call
outs
mov
and
mov
xchg
jmp
push
push
mov
cmp
scas
ja
call
jno
pop
push
mul
xor
into
mov
push
xchg
mov
nop
cmp
pop
jbe
(bad)
leave
mov
xchg
psubb
mov
fmul
popa
adc
adc
xor
pop
call
push
test
pop
ficom
or
pop
xchg
fcomp
or
fsubr
out
mov
(bad)
inc
shl
int3
es
pop
sub
push
in
sub
aaa
sti
mov
ret
cwde
mov
cdq
sar
sbb
adc
rol
inc
sub
mov
cmp
inc
sbb
ret
ret
(bad)
(bad)
daa
and
dec
xor
pop
sbb
iret
lahf
fadd
add
das
and
mov
in
xchg
adc
jbe
sub
push
mov
cmp
pop
fist
mov
sar
sbb
sbb
mov
inc
adc
inc
xor
lock
or
loop
fild
pop
mov
pop
jmp
dec
xchg
dec
mov
out
mov
xor
nop
sub
enter
adc
inc
and
dec
stc
int
scas
push
fidiv
mov
mov
sub
adc
dec
out
and
fs
in
dec
xchg
sbb
and
pop
push
mov
add
nop
pop
adc
or
mov
adc
jecxz
inc
jmp
mov
unpckhps
ja
ins
iret
inc
ss
imul
add
mov
cs
jmp
test
lock
inc
hlt
test
setl
push
cmp
daa
sub
push
mov
mov
lods
pop
gs
daa
xor
out
inc
das
fld
pop
jne
in
and
push
sbb
cmp
imul
shl
pop
xor
(bad)
int3
cli
dec
clc
jg
inc
dec
or
mov
push
jns
xchg
sub
ds
and
aaa
out
nop
dec
add
dec
retf
repnz
dec
inc
iret
xchg
jns
pop
pop
shl
mov
ins
lahf
movs
xlat
dec
mov
push
ins
ja
dec
(bad)
xlat
dec
add
idiv
test
retf
ss
cmp
dec
pushf
xlat
(bad)
adc
inc
fs
xor
clc
call
cli
leave
cmp
cli
xor
loop
cmp
leave
mov
xor
xchg
retf
enter
mov
mov
xchg
xchg
aaa
sbb
cmp
or
jmp
shl
aaa
sbb
neg
pushf
ins
xchg
sub
dec
arpl
ret
cli
push
scas
jp
mov
sti
es
rcr
call
mov
imul
repz
cli
popa
test
adc
push
cmp
pop
sar
adc
xchg
and
stos
sbb
inc
(bad)
rol
popa
(bad)
and
adc
iret
sbb
repnz
mov
outs
sub
(bad)
and
or
les
jae
mov
int
pushf
fwait
sar
pop
pop
adc
je
add
stos
sub
dec
in
mov
mov
pushf
push
sar
push
(bad)
or
test
enter
loop
lds
(bad)
push
sbb
dec
and
push
pop
ins
or
icebp
out
and
mov
jmp
outs
aam
xchg
ror
int3
add
jno
fld
aad
lock
and
xchg
pop
dec
mov
enter
pop
jle
mov
push
ret
and
jmp
jle
arpl
(bad)
pop
in
dec
mov
ss
addr16
sbb
(bad)
call
adc
(bad)
mov
test
dec
pop
in
orps
pop
mov
sub
dec
add
mul
shr
test
rol
(bad)
dec
popf
mov
and
loopne
xor
movs
aam
jecxz
dec
mov
popf
aam
sub
or
or
mov
ins
pop
inc
test
mov
mov
inc
test
jmp
add
idiv
mov
lock
stc
loopne
sbb
mov
pop
dec
call
add
inc
xchg
loope
dec
push
push
cwde
push
mov
pop
int
imul
xchg
call
out
out
cmps
ds
push
in
(bad)
scas
xchg
ficom
mov
pop
mov
pop
mov
jo
mov
mov
aas
jne
loopne
callw
mov
in
retf
adc
sub
jmp
push
imul
and
inc
int
sbb
mov
mov
(bad)
xchg
adc
adc
inc
aas
sub
sbb
dec
or
scas
sahf
adc
sbb
sbb
pop
jb
int3
cmp
(bad)
add
aaa
mov
sar
sbb
daa
in
mov
pop
xlat
add
fcmovnbe
push
jbe
mov
retf
lods
pop
rcr
inc
fstp
xor
fld
mov
sbb
adc
pop
cmp
fisubr
mov
jecxz
mov
dec
daa
rol
sub
xor
ss
and
stc
aad
sub
push
jg
and
pop
jmp
fucomp
int3
div
add
arpl
mov
test
sbb
pop
ss
(bad)
and
sbb
dec
test
inc
push
sar
imul
jo
adc
xor
mov
dec
pop
jle
aad
cmp
jp
xor
dec
dec
movs
shr
retf
popa
xchg
fst
out
dec
mov
push
sub
dec
cmp
mov
daa
add
xchg
pop
cs
or
xchg
es
mov
(bad)
movs
cmp
or
hlt
jl
hlt
rcr
jmp
mov
mov
je
sub
pop
xor
daa
xchg
icebp
mov
enter
in
xchg
std
push
jecxz
add
push
lss
enter
jmp
in
mov
xchg
push
jmp
jge
sahf
in
xor
seto
outs
cmp
xor
scas
sub
and
movs
test
jge
ret
retf
sbb
pop
adc
lahf
mov
push
adc
cmps
cmp
ds
aad
jnp
adc
mov
fsubp
push
mov
add
jl
and
mov
sub
into
mul
mov
cmp
push
xchg
out
jmp
jp
xor
dec
in
ins
sbb
adc
mov
sub
int
dec
popf
(bad)
ror
jl
sub
pop
push
in
add
adc
out
or
int
push
cmc
ins
ret
aaa
sub
sbb
cld
das
(bad)
pushf
loop
ss
cmp
sbb
cs
cmp
retf
sub
push
jl
add
ins
add
fwait
shld
out
js
cli
mov
inc
ror
loope
or
jnp
dec
pop
dec
jecxz
jne
mov
pop
push
stos
pop
sub
mov
mov
test
dec
adc
fdivr
loope
in
ror
int3
mov
sbb
dec
out
inc
aam
xchg
into
add
imul
shl
mov
into
and
adc
cmp
inc
je
add
pop
jo
sbb
mov
xor
mov
jmp
pusha
ins
scas
xchg
jns
xor
sbb
dec
in
rol
jmp
push
mov
add
mov
sub
xor
mov
stos
jl
xor
(bad)
int3
push
in
mov
xlat
mov
pop
sub
js
mov
les
add
fimul
dec
xchg
mov
popf
add
in
or
nop
xchg
push
add
sbb
sahf
sti
mov
rcl
xor
xor
(bad)
pop
pop
in
mov
xor
mov
std
inc
add
sub
fsub
jecxz
push
xchg
pop
or
aad
das
pop
inc
pop
push
sahf
stc
inc
sbb
push
push
mov
mov
addr16
sub
adc
mov
outs
jmp
pop
mov
inc
push
stos
mov
(bad)
add
movs
mov
mov
test
mov
addr16
fimul
fstp
test
xchg
jno
pop
aad
mov
sub
test
lods
lahf
lea
repnz
movs
add
popf
aam
into
sbb
repz
ins
mov
xchg
pop
ds
jno
ds
add
test
sysenter
scas
test
(bad)
xor
mov
pop
cmp
mov
pop
sbb
scas
mov
mov
aam
inc
xor
jge
cmc
dec
inc
cdq
pushf
(bad)
add
stos
mov
mov
out
lock
rcr
(bad)
lea
fs
xor
mov
sahf
pop
add
call
xchg
test
imul
jl
jge
rcr
test
loop
and
xchg
pop
mov
dec
jns
cmps
ret
mov
dec
cmp
daa
call
call
fisubr
mov
cli
or
push
mov
test
adc
pop
(bad)
clc
jle
cmp
bound
mov
cli
into
push
cmp
add
push
dec
rcr
mov
aam
popa
pop
loope
shl
adc
push
pop
pop
dec
cmp
mov
(bad)
dec
xchg
pop
xchg
rol
scas
pop
inc
sbb
mov
mov
lds
push
test
cwde
shl
or
test
adc
shl
movs
inc
pop
stos
clc
inc
push
call
or
jp
sbb
jl
loop
push
enter
stc
cld
sbb
(bad)
sbb
jne
push
ror
xor
imul
addr16
out
push
mov
(bad)
push
inc
mov
std
adc
out
dec
movs
int3
push
pop
pop
mov
mov
push
pop
jo
jp
pop
and
(bad)
xadd
int3
stos
add
lock
cmps
fidivr
or
and
or
mov
jp
jb
add
jne
in
int
(bad)
loop
dec
xchg
lea
stos
push
lods
jnp
and
mov
mov
aad
pop
retf
push
or
fsubr
into
jl
cmp
outs
popf
popf
mov
call
inc
pushf
pop
adc
push
adc
dec
stos
hlt
or
push
adc
cmps
cmp
jns
lahf
jb
mov
or
mov
pushf
aam
sub
adc
pop
push
and
aas
js
sub
call
out
mov
inc
dec
sbb
nop
pop
enter
jle
clc
and
dec
outs
cmc
inc
cmp
pop
xchg
xchg
lods
inc
pop
in
xor
cld
shl
mov
jns
out
(bad)
jb
test
and
mov
add
nop
fidivr
loope
cld
rol
movs
popa
rol
adc
dec
rcr
jp
and
(bad)
loopne
lods
pop
out
pop
xchg
clc
sub
jg
push
inc
mov
jae
dec
push
rcl
rcr
xor
js
int
add
xchg
mov
shr
stos
and
in
sub
stos
in
aad
lds
stos
xor
ins
add
xchg
cmp
xchg
pop
popa
xchg
stc
inc
cs
pop
int3
jno
inc
jmp
mov
jge
push
mov
xor
enter
jb
xor
add
test
sti
push
xchg
push
cmps
jo
mov
test
mov
outs
inc
shr
outs
lds
or
mov
mov
sbb
and
mov
add
fwait
pop
retf
jle
out
(bad)
mov
mov
sub
mov
jmp
dec
sbb
fstp
push
dec
std
sbb
push
cmp
loopne
rcr
pop
and
ins
jge
fadd
mov
divps
movs
popf
sbb
inc
out
xor
dec
shl
aam
dec
pop
daa
mov
push
adc
mov
loop
in
adc
jnp
hlt
dec
inc
sub
retf
(bad)
jno
cmp
mov
shl
js
fisttp
pushf
xlat
jge
adc
loop
loopne
inc
jne
adc
dec
imul
pop
pushf
pop
dec
out
jns
les
das
push
pop
mov
mov
cmp
and
(bad)
xchg
adc
ficomp
or
fidivr
sub
pop
call
dec
fidivr
or
inc
cdq
push
ins
push
imul
xor
out
mov
sbb
jle
cmp
movs
sar
fadd
lea
sub
(bad)
pop
ret
pop
cmp
lock
shl
pop
push
xchg
mov
out
rcl
es
inc
out
jnp
xor
pop
scas
pop
add
xor
pop
mov
inc
adc
mov
cmp
dec
aam
and
pop
(bad)
cmc
mov
es
add
fdivr
aaa
xchg
mov
push
ror
cdq
call
xchg
mov
lods
shl
imul
dec
call
jg
ror
pop
lods
add
popa
mov
nop
pushf
sbb
shl
mov
loopne
icebp
stos
dec
jmp
imul
sub
cmp
popf
mov
int3
push
mov
int3
pop
add
ss
loop
loop
sbb
ja
call
xchg
dec
ins
sbb
cs
aad
dec
clc
movs
dec
sub
ja
xchg
add
pop
mov
clc
xor
test
(bad)
cmp
fwait
and
inc
add
push
call
inc
mov
addr16
dec
sahf
mov
shr
ins
sub
cmc
dec
or
cli
xchg
dec
shl
arpl
sub
or
mov
dec
or
inc
push
push
not
sti
fldenv
xchg
adc
push
dec
pop
jp
cmps
jl
dec
cmp
jmp
or
inc
enter
xor
stos
cmps
and
aam
add
and
out
mov
mov
aad
dec
inc
jmp
aam
iret
mov
push
sub
pop
dec
cs
ret
ds
out
cmps
ja
mov
dec
mov
gs
mov
sti
(bad)
xor
inc
lds
rcl
dec
add
jp
xchg
imul
push
frstor
xor
push
fcom
in
mov
xor
adc
popa
div
pop
cmp
ds
xor
call
adc
je
rcl
inc
nop
push
sub
cli
dec
repz
ds
adc
lods
outs
sub
sub
push
push
pop
mov
pop
sub
dec
lock
jbe
fld
mov
shl
mov
jecxz
mov
test
push
sub
aam
push
jnp
cdq
jecxz
sub
pop
dec
iret
inc
push
(bad)
gs
ss
cmps
lea
and
test
dec
iret
adc
jmp
jo
rcl
jnp
out
(bad)
or
fiadd
xchg
push
mov
xchg
pop
popa
lds
into
fcmovbe
out
in
cmc
xchg
enter
fcom
xor
jns
fidiv
cld
mov
cs
mov
test
ins
nop
jbe
sbb
sbb
dec
or
cmp
ficomp
jp
and
cmp
loopne
cmp
pushf
xlat
xchg
dec
push
mov
pop
push
mov
(bad)
clc
repnz
adc
pushf
inc
sar
outs
sbb
pop
jecxz
or
dec
push
xchg
add
cmp
mov
xchg
popf
fdivrp
jp
jo
or
shl
mov
mov
adc
inc
dec
push
dec
out
pop
xor
sahf
enter
cmps
rol
xchg
mov
xchg
dec
and
cmp
push
cwde
pop
pop
mov
sbb
in
inc
aaa
movs
call
cmp
mov
pop
call
pop
mov
dec
js
cmp
fmul
and
les
push
addr16
inc
mov
xchg
jae
dec
adc
and
dec
mul
in
sub
clc
mov
test
xchg
inc
sahf
mov
push
dec
and
adc
dec
cmp
ss
xor
std
mov
retf
fistp
arpl
sahf
retf
cmp
mov
pop
push
xchg
mov
pop
cdq
and
(bad)
cmps
sub
in
dec
xor
movs
test
xchg
pop
adc
outs
add
dec
pop
cmp
push
push
mov
(bad)
aad
shr
dec
cmp
pop
or
or
in
mov
jne
inc
stos
dec
adc
(bad)
cmp
jo
fild
mov
pop
cmp
dec
mov
pop
sti
loopne
ins
and
adc
xchg
arpl
xchg
dec
test
dec
jle
mov
jae
xchg
sub
fmul
jbe
add
ds
mov
sbb
jp
xchg
mov
pop
ins
and
ins
mov
pop
jecxz
pop
cmp
xlat
push
push
icebp
fs
iret
adc
jo
cdq
les
es
imul
(bad)
sub
dec
xchg
xor
cmps
add
movs
push
pop
mov
call
and
pandn
pop
int
jg
lock
sahf
enter
(bad)
pop
(bad)
mov
gs
popf
cs
(bad)
dec
push
sub
mov
enter
stos
cmp
cmp
adc
shl
je
lea
mov
sahf
cmp
test
aaa
jne
mov
lahf
stc
cs
jg
lock
add
push
loopne
jnp
pop
mov
fistp
loop
jmp
fwait
mov
ror
cmp
or
or
pop
cld
push
(bad)
in
inc
into
stc
cmps
rcr
and
pop
int
test
(bad)
sbb
jo
inc
inc
mov
(bad)
inc
mov
mov
fwait
arpl
or
jne
pop
mov
or
xchg
lahf
mov
cmc
pop
movd
sub
sti
pop
inc
ret
pop
inc
xor
aad
ds
fiadd
jl
add
in
cdq
pop
add
dec
pop
or
mov
or
mov
push
mov
mov
add
add
sahf
mov
xchg
xor
push
jne
and
jns
cvtps2pi
and
or
(bad)
ret
jl
enter
cmp
cdq
cmp
outs
mov
fwait
aas
mov
loopne
xchg
inc
jle
cmp
mov
dec
mov
stos
pop
stos
inc
nop
mov
sbb
push
dec
out
aad
je
dec
cwde
fmul
cmovge
sbb
dec
cdq
fisubr
mov
or
xchg
jmp
stc
cmp
stc
push
jge
daa
ret
rcl
call
daa
lock
aam
xchg
call
mov
adc
imul
cmp
mul
icebp
push
add
mov
push
rcl
add
scas
lods
sbb
test
sub
mov
lock
shr
ins
sub
in
mov
cwde
or
or
inc
xchg
shl
cmps
or
mov
and
ficom
jnp
mov
pop
pop
xor
adc
pop
xor
(bad)
or
sbb
add
imul
jb
imul
shr
xchg
push
and
je
and
ss
imul
adc
inc
ds
xchg
cmc
popa
add
ror
imul
push
sub
ret
or
xor
lods
mov
adc
push
mov
xor
sti
push
lea
mov
xor
sbb
inc
shl
xlat
mov
mov
dec
adc
test
cmp
xchg
mov
iret
sub
dec
int3
fisubr
jmp
mov
sbb
hlt
loop
inc
repz
out
mov
mov
test
cld
int3
mov
into
stc
sub
ret
dec
pop
arpl
out
push
and
xchg
sub
mov
aam
push
imul
jnp
sbb
scas
pop
mov
cmps
dec
sub
pop
pop
out
aaa
fs
push
push
xor
push
(bad)
daa
fisttp
dec
cmps
arpl
call
sti
sbb
add
in
rol
jns
sbb
int3
add
imul
mov
outs
daa
or
fmul
arpl
lahf
std
cld
adc
push
push
mov
or
(bad)
mov
es
or
jge
and
in
stos
adc
jle
div
dec
test
loope
(bad)
jb
rcr
les
inc
mov
lahf
in
out
inc
jmp
xor
outs
push
sti
mov
and
pop
dec
jmp
lock
movs
sti
sub
lods
jg
ins
mov
push
into
xchg
mov
data16
imul
mov
sub
not
jge
pop
loopne
int
cmps
mov
sub
dec
mov
sub
(bad)
push
inc
pop
push
or
sbb
imul
or
lods
adc
pusha
aas
test
into
aaa
sbb
shl
cmp
ja
push
mov
jmp
stos
mov
leave
aad
cwde
or
enter
mov
call
cmp
and
mov
inc
mov
shr
jg
dec
jg
inc
(bad)
loop
jnp
xchg
aad
jae
jmp
push
std
cmp
mov
add
stc
stos
test
lods
adc
xlat
xor
stos
mov
xchg
call
cwde
stos
pop
mov
cs
inc
add
sbb
add
dec
aaa
dec
mov
dec
xchg
nop
icebp
mov
ficom
mov
xchg
mov
pop
fld
push
fwait
test
lods
ins
jmp
retf
push
push
xor
or
push
xor
add
out
std
(bad)
mov
pop
imul
cmps
dec
std
gs
mov
mov
imul
cwde
mov
loopne
xor
xchg
in
sub
stos
inc
cwde
fist
in
shl
mov
xchg
fldcw
sbb
pop
add
out
inc
mov
add
xchg
idiv
xchg
imul
and
popf
or
enter
cmp
inc
sbb
push
call
icebp
(bad)
addr16
sub
xchg
call
fimul
int3
dec
mov
fsub
inc
jae
cld
add
les
push
xchg
sub
sub
jp
cmp
dec
fistp
ja
inc
cld
dec
pop
xchg
idiv
ret
adc
sbb
push
mul
std
cmp
jno
add
int
into
ss
mov
cmc
jle
int
sub
(bad)
lock
xor
(bad)
cwde
shl
push
xchg
das
pop
mov
call
and
fisub
mov
sub
mov
(bad)
ror
cmp
and
dec
jo
cmp
mov
mov
(bad)
adc
fbld
(bad)
push
inc
mov
sar
std
dec
push
fist
or
sub
(bad)
mov
loop
jmp
dec
pop
out
dec
out
stos
add
int3
cdq
ja
or
popf
arpl
in
out
mov
jmp
mov
xchg
sbb
pop
jp
mov
test
pop
mov
ds
inc
add
in
sbb
icebp
mov
bound
jmp
outs
lahf
fsub
loop
and
push
loopne
call
mov
jl
cli
jge
sti
and
test
jnp
(bad)
int
inc
pushf
xor
movs
in
inc
add
icebp
sbb
jbe
inc
div
mov
sbb
fisttp
adc
push
sbb
scas
or
cmp
pop
fsub
mov
cmp
add
jno
adc
into
xlat
add
mov
jae
push
mov
inc
jne
lods
dec
mov
dec
je
loop
imul
ror
popa
mov
(bad)
sbb
cmp
xlat
add
(bad)
pop
das
out
(bad)
aaa
push
cmc
outs
dec
mov
push
arpl
dec
ud1
test
xor
cs
dec
in
dec
xor
pop
pop
into
rcr
dec
push
sub
pop
cmp
mov
pop
gs
mov
dec
add
out
push
push
movs
mov
cmp
(bad)
pop
mov
aad
or
stos
sbb
daa
jge
inc
clc
shl
pusha
loope
fist
dec
sub
inc
or
movs
popf
inc
adc
aad
sti
xchg
pop
mov
lods
cmp
sub
movs
mov
sub
mov
rcl
pop
mov
les
push
rcl
cmp
shl
add
cdq
dec
leave
mov
out
imul
fisubr
push
jmp
mov
cdq
pop
pop
retf
mov
sub
js
mov
pop
cmps
dec
pop
mov
and
jmp
jns
xchg
aad
dec
(bad)
sbb
out
push
not
push
lds
in
lds
cmp
jae
sub
mov
push
push
sbb
int3
jo
xchg
push
sub
xchg
loop
sub
ds
fst
mov
movs
dec
pop
mov
lods
addr16
ret
sar
cdq
cwde
xlat
aaa
sbb
and
loopne
xchg
inc
mov
xor
in
jo
nop
or
loopne
pop
ja
xor
jmp
xor
sbb
jno
push
push
stos
and
pushf
pop
xor
add
inc
pop
dec
sub
lods
cmp
pushf
(bad)
and
xor
pushf
fucompp
push
std
mov
loop
out
int
mov
add
cmp
out
loope
out
or
adc
mov
jl
add
dec
arpl
jmp
push
int3
or
neg
adc
addr16
imul
pop
lock
daa
fadd
and
mov
daa
loopne
fimul
pop
ja
mov
int
cmp
inc
jnp
(bad)
or
stos
add
push
xlat
add
fiadd
not
push
push
push
add
enter
or
cmp
rol
imul
add
push
xchg
das
fwait
rcl
imul
jl
sbb
aaa
lods
pop
push
popa
mov
lock
rol
cmp
adc
jp
cmp
pop
popf
push
mov
pop
adc
retf
and
rcl
clc
pop
jno
sbb
sub
out
dec
imul
dec
rcr
test
dec
add
push
add
or
add
mov
push
cdq
jns
imul
ds
jo
adc
scas
mov
lds
outs
fucomi
aam
jp
jmp
sbb
add
gs
mov
jne
inc
mov
sub
daa
cli
rcr
sub
fdiv
jp
aam
je
adc
push
and
xor
dec
test
lds
and
jl
lock
fild
shr
enter
or
add
leave
inc
ja
xchg
test
sbb
out
and
out
pop
(bad)
nop
in
mov
lods
sub
addr16
jno
pop
in
dec
jecxz
dec
test
jl
sub
retf
xchg
(bad)
shl
add
jno
sub
xchg
cli
pop
mov
mov
push
out
mov
push
and
ret
xor
mov
fadd
or
push
jp
xor
jp
scas
dec
mov
rcr
adc
pushf
ficomp
sbb
scas
dec
mov
movs
mov
outs
cmp
pop
dec
es
add
add
mov
movs
and
inc
test
ret
stos
pop
xlat
add
xchg
and
ins
pop
cmp
xor
repz
sbb
push
xchg
(bad)
jbe
pop
pop
push
cmp
lahf
or
mov
fdivr
mov
and
shl
(bad)
(bad)
test
imul
mov
sub
aas
or
dec
jbe
pop
rol
dec
pop
(bad)
dec
sub
ja
rcl
(bad)
sub
adc
sub
xor
out
aam
xchg
or
pop
push
les
shl
push
push
dec
ss
xlat
mov
adc
lds
(bad)
imul
loope
and
inc
xor
sub
popa
scas
or
jns
jbe
out
fcom
rol
pop
lahf
sti
hlt
sub
sti
add
mov
sub
pushf
dec
outs
bound
pop
jle
mov
xor
mov
dec
push
arpl
in
enter
hlt
inc
dec
les
mov
mov
ret
jge
cdq
popa
lods
cmc
sub
retf
sbb
shl
pop
fcom
rol
std
fadd
dec
ret
sbb
cmc
or
dec
in
neg
lock
mov
sub
add
xchg
pusha
rol
add
js
jmp
pusha
pop
cdq
mov
xchg
inc
je
mov
dec
mov
xor
movs
mov
in
push
nop
clc
sub
push
mov
mov
xchg
push
lods
iret
daa
test
cmp
xchg
sub
cmps
cmp
dec
inc
fucom
mov
pushf
add
mov
scas
dec
aas
mov
das
push
add
int
push
jb
pop
retf
jae
cs
dec
adc
adc
rcl
adc
and
xchg
inc
push
popa
popa
push
push
or
sub
outs
fcomp
shl
push
and
dec
adc
push
or
mov
mov
push
adc
rol
repnz
adc
mov
ds
mov
dec
sbb
es
loop
in
sar
cld
aam
outs
dec
push
and
arpl
pop
jmp
xchg
aaa
lea
push
and
in
nop
push
cld
cs
lds
jl
or
jo
mov
fsub
and
popa
xlat
ins
mov
jle
mov
mov
and
dec
jmp
inc
xchg
push
(bad)
pop
mov
dec
(bad)
imul
lds
mov
les
sar
pop
mov
ds
adc
push
rcr
cwde
fwait
and
repnz
lods
adc
pop
(bad)
fistp
es
pop
jl
or
call
rcl
pusha
mov
(bad)
sbb
xchg
inc
mov
in
dec
sub
stc
inc
outs
mov
pop
fwait
inc
aaa
add
in
int
jnp
adc
and
mov
sbb
mov
pop
stos
es
aam
loopne
sahf
(bad)
div
cmp
cmp
mov
and
lock
xlat
xor
push
fild
imul
stos
ja
sbb
loopne
dec
jmp
add
jnp
int
add
pop
cmp
pusha
leave
fnstsw
ss
das
lock
stos
rol
aaa
xor
push
mov
popf
and
mov
cwde
mov
shl
inc
pusha
(bad)
cmp
aam
pop
jnp
retf
push
sub
jns
icebp
jb
pushf
cmp
dec
jp
cmp
test
or
out
jl
gs
pop
adc
ins
jge
xor
jnp
fsub
and
xchg
pop
sub
push
daa
dec
(bad)
sar
(bad)
pop
stos
sbb
ins
mov
out
cmp
repnz
mov
mov
xlat
sbb
aaa
repnz
pop
stos
adc
fldpi
push
push
mov
ins
cmp
cli
push
in
push
sub
icebp
push
jmp
jmp
push
test
(bad)
sub
or
push
fcmovu
mov
jbe
and
dec
add
out
mov
loopne
mov
inc
xchg
mov
hlt
inc
jecxz
outs
int
test
inc
dec
and
pop
jl
xchg
or
sbb
scas
sbb
xchg
push
cwde
push
lock
jbe
inc
xchg
pop
mov
pop
ret
shl
add
ins
sbb
pop
add
pushf
jno
loopne
es
pop
sub
scas
hlt
lods
ins
dec
es
sbb
adc
(bad)
push
mov
push
loop
pop
dec
mov
xor
xchg
cwde
(bad)
js
out
cld
push
js
pushf
(bad)
add
shl
and
push
imul
cmps
(bad)
jns
or
imul
pop
fcmovb
xlat
int
pop
pop
ret
mov
pop
fild
cmp
fcmovbe
and
xchg
sbb
xor
mov
xlat
add
pushf
mov
mov
das
movs
inc
jp
xor
adc
push
mov
push
and
jbe
and
cmps
ds
adc
enter
xchg
pop
shr
dec
or
sbb
scas
out
icebp
xor
addr16
push
in
sbb
and
sbb
push
rol
aad
push
mov
fwait
jle
into
mov
cli
sahf
and
add
pop
fwait
pop
outs
fnstenv
mov
mov
push
enter
cwde
(bad)
push
fwait
movs
ds
popf
out
mov
lods
fcomi
pop
fbld
xor
cmp
imul
pushf
dec
inc
shr
add
push
bound
or
mov
inc
push
sub
and
sar
sbb
repz
ss
sbb
inc
jno
jnp
inc
pop
cmp
add
daa
in
mov
pop
hlt
mov
add
jg
pop
jmp
aam
mov
sbb
mov
cmp
lahf
sub
mov
out
pop
fdiv
movs
imul
xchg
push
sar
mov
sub
inc
(bad)
sbb
sbb
push
out
mov
pop
add
not
jmp
aaa
sbb
rcl
adc
daa
mov
ror
ins
mov
(bad)
call
push
push
pop
adc
popf
(bad)
loope
call
push
xor
mov
lds
jnp
popf
mov
xor
lea
xchg
pushf
push
and
aad
pop
(bad)
fisttp
mov
sub
ficom
test
(bad)
jns
add
aaa
xchg
mov
shl
push
xchg
and
sub
inc
ja
call
xchg
dec
pushf
push
mov
neg
and
adc
clc
cli
mov
cld
jmp
arpl
add
ret
inc
adc
jns
add
xor
es
sub
hlt
fadd
mov
(bad)
mov
test
mov
xlat
lock
(bad)
cs
int3
(bad)
mov
push
mov
loop
mov
xor
mov
loop
mov
inc
(bad)
(bad)
data16
pop
lahf
xchg
shl
inc
scas
test
lods
jmp
adc
dec
push
cmps
rcl
out
xlat
push
cwde
xchg
out
cmp
idiv
pushf
dec
jne
rcr
inc
mov
loop
(bad)
mov
xchg
std
push
add
pop
mov
test
fcom
pop
dec
std
call
and
stc
outs
test
sub
and
mov
bound
lea
stos
xor
test
pop
xor
jle
fmul
mov
ret
push
(bad)
jmp
ja
and
jge
dec
or
add
xchg
shr
lock
mov
dec
dec
jmp
adc
xor
jae
outs
push
fisubr
cmp
cmc
rcl
(bad)
retf
sbb
xor
fstp
sub
adc
aad
pop
or
adc
xor
(bad)
mov
(bad)
mov
dec
sbb
loope
sahf
popa
or
adc
loope
add
xchg
pop
enter
xor
jmp
mov
xor
pop
inc
pushf
add
sbb
test
jae
dec
mov
push
or
or
cwde
mov
int3
push
push
imul
fcmovb
mov
mov
fdivr
mov
popf
mov
sar
and
lods
scas
mov
cmp
sar
cli
je
push
sub
sub
(bad)
mov
adc
pop
fst
jp
shl
pop
sti
sub
pop
div
stos
push
test
das
test
xor
aaa
cld
and
pushf
dec
sub
sub
jb
sti
dec
sub
push
push
call
adc
mov
mov
movs
mov
ja
and
xchg
test
pop
mov
adc
pop
push
in
or
pop
clc
outs
xor
xor
or
pop
rol
(bad)
sub
xor
adc
adc
in
loope
pop
push
cmp
cs
pushf
sub
mov
add
dec
sar
rcl
lahf
dec
bound
jne
int3
rcl
pop
push
loope
bound
ror
imul
fcomp
inc
mov
push
stc
mul
lods
add
xlat
fiadd
movs
pop
shr
sbb
xor
in
out
in
cmp
ja
xchg
stc
push
into
fxam
ja
and
outs
dec
fwait
sub
das
clc
in
sub
sub
xchg
or
sbb
pop
or
mov
add
mov
or
and
inc
fidivr
dec
push
stos
xlat
push
addr16
loopne
cmps
fnstenv
retf
jnp
dec
daa
inc
xchg
frstor
fistp
cmp
stos
gs
or
ret
sbb
icebp
fist
sbb
push
mov
shl
dec
cmp
dec
outs
lahf
lock
int3
cmp
popa
mov
sar
push
sbb
jae
sbb
xor
mov
in
push
or
neg
shl
stos
test
fwait
xchg
cmp
sub
sbb
jo
xchg
pop
ficom
push
mov
sbb
int3
fadd
loopne
or
sbb
dec
fild
sbb
pop
sbb
dec
add
or
push
les
or
mov
mov
pop
pop
add
adc
cmps
out
jle
aas
sahf
jmp
sbb
dec
xchg
out
mov
jg
es
jbe
loop
enter
arpl
cmp
cmp
imul
mov
add
lea
add
add
xchg
sbb
pushf
add
inc
dec
ss
(bad)
xchg
stos
cmp
ins
popa
push
and
mul
xchg
pushf
cs
cmc
or
out
push
sub
test
jo
inc
neg
mov
xor
into
dec
test
in
mov
adc
mov
(bad)
xchg
cmp
pop
add
push
and
nop
add
xor
push
jecxz
std
push
int3
mov
dec
ja
lock
loopne
or
icebp
sar
fldpi
and
cmp
(bad)
dec
sbb
jp
call
nop
je
jae
(bad)
fstp
pop
mov
ss
sub
xor
rcr
movs
dec
es
jmp
shl
outs
inc
pop
sub
test
fldenv
popa
fs
mov
(bad)
xor
push
(bad)
in
xor
pop
or
retf
xchg
(bad)
adc
mov
ret
pop
(bad)
xchg
sbb
mov
jmp
retf
mov
(bad)
sahf
scas
pushf
push
sub
hlt
xchg
inc
jne
mov
pop
in
mov
lods
and
nop
arpl
repz
xor
stc
int
rcl
fwait
or
jmp
outs
mov
leave
pop
in
push
sbb
jmp
jge
cld
inc
fcomp
jns
mov
push
data16
stos
not
cmps
pushf
jae
xor
lea
mov
and
jg
in
xchg
xchg
lods
std
enter
or
sub
and
sbb
and
(bad)
pop
sub
dec
jg
mov
cmps
xor
rcl
jnp
pop
jl
xchg
jle
clc
pushf
sbb
xchg
adc
cwde
(bad)
hlt
dec
sbb
pop
sbb
mov
call
mov
pop
fs
jno
mov
rcr
inc
leave
push
dec
sbb
xchg
aaa
sub
cmp
cs
ds
(bad)
sub
inc
xchg
adc
sub
arpl
cmc
lods
mov
fisttp
dec
aaa
call
(bad)
aaa
adc
rol
mov
out
jp
pop
mov
sub
sub
mov
dec
aas
mov
aaa
pop
ins
arpl
sbb
cmc
sbb
sub
retf
pop
iret
xor
outs
stos
cmp
test
mov
call
outs
cmps
out
xlat
into
or
ja
mov
sub
fnstcw
out
fcomi
push
fstp
mov
mov
adc
cmps
jb
xor
mov
xchg
movs
out
inc
test
and
jecxz
jecxz
aad
pop
fs
mov
dec
or
sbb
sahf
scas
xchg
rcr
push
ins
jbe
arpl
les
bound
aaa
leave
push
(bad)
mov
push
adc
cld
dec
push
mov
xor
mov
xchg
pop
sub
pop
in
imul
es
sub
cmp
add
dec
outs
push
inc
dec
inc
dec
pushf
pop
mov
and
sbb
outs
call
rcl
mov
mov
push
pextrw
outs
rcr
sbb
xor
pop
pop
pop
psllw
call
arpl
scas
mov
and
dec
hlt
cli
sub
mov
aaa
xor
(bad)
nop
inc
push
add
mov
add
xor
dec
inc
dec
(bad)
mov
inc
adc
loopne
mov
cmp
inc
dec
add
dec
inc
aam
leave
and
mov
call
mov
je
jle
push
sar
adc
xor
lods
popa
inc
scas
xor
enter
in
inc
add
fstp
jb
xor
cmp
xor
mov
jmp
mov
test
test
clc
rsm
retf
outs
xor
ds
pop
lfs
test
aaa
cs
push
inc
cli
xor
outs
sti
or
jnp
fstp
adc
cld
lods
call
mov
xchg
ins
pop
xchg
jbe
pop
xor
ret
jb
and
adc
sub
popa
in
cmp
push
dec
fs
xchg
pop
pxor
popf
call
mov
stc
lock
mov
xchg
jecxz
call
cwde
mov
pop
out
in
ss
push
mov
mov
pop
fist
imul
adc
daa
sbb
jmp
sbb
pop
sbb
popf
jecxz
call
adc
mov
jno
pop
ret
cmp
push
jge
pop
adc
imul
(bad)
ins
xor
inc
mov
jo
push
cmp
mov
out
jg
icebp
in
js
cmps
pop
test
in
dec
lea
mov
popf
xchg
loopne
iret
int3
push
mov
clc
mov
(bad)
jle
outs
and
mov
push
and
sub
pop
jo
push
sub
test
mov
pop
xchg
int3
push
inc
mov
sub
popa
mov
aas
jg
inc
and
stos
add
adc
mov
test
or
ds
loopne
push
es
fbld
scas
mov
(bad)
sar
jg
rol
jnp
or
rcl
test
dec
cmp
pop
cs
push
cmps
test
mov
js
cmps
adc
mov
mov
stos
push
in
test
(bad)
shl
sub
mov
or
test
inc
mov
jae
add
sub
imul
dec
adc
add
push
fcomp
add
xor
dec
dec
jmp
jg
or
fnstenv
nop
jl
mov
inc
xchg
pop
push
mov
dec
dec
sar
add
cmp
cli
rcr
jg
outs
sar
sbb
lea
xchg
fstp
push
xor
inc
mov
shl
pushf
push
sbb
(bad)
jecxz
cld
stos
jno
push
sbb
scas
jb
aaa
or
ja
sahf
cmp
ds
lahf
inc
arpl
xor
lea
icebp
fiadd
dec
cmp
daa
push
popa
mov
aaa
sahf
loopne
jecxz
push
daa
jmp
jle
aam
mov
sbb
add
cmps
movs
mov
push
mov
mov
sbb
push
fst
mov
sub
rcl
xchg
pop
cmp
jno
jp
int3
rcl
pop
pop
inc
xlat
push
lods
out
sub
push
push
jge
loop
test
ret
inc
jae
imul
dec
test
cdq
push
ins
add
loop
loopne
dec
sahf
or
mov
test
ds
scas
int3
push
cwde
xor
jno
stos
mov
icebp
lahf
daa
cmp
neg
adc
dec
mov
add
idiv
cmps
adc
jb
(bad)
fldcw
ret
and
imul
xlat
(bad)
cmp
(bad)
push
cmp
inc
shr
xor
or
or
fimul
mov
dec
les
aas
mov
inc
nop
push
repnz
xlat
cmp
and
add
inc
xor
clc
popa
(bad)
call
ins
outs
addr16
arpl
in
pop
in
out
pop
into
jp
jno
pop
data16
push
sti
add
mul
je
dec
pop
outs
sbb
jae
mov
ret
(bad)
pop
adc
push
jmp
dec
jae
fstp
xor
jg
cmp
pop
pop
(bad)
ja
xchg
push
pop
mov
shl
(bad)
fiadd
ss
sti
inc
movs
jge
and
add
adc
sbb
dec
dec
aad
add
call
test
leave
and
or
jb
mov
pop
dec
jae
mov
mov
mov
and
(bad)
sub
pop
inc
xor
es
fdivr
sbb
xchg
sar
pop
dec
xchg
and
cmp
jge
pushf
mov
jl
and
pop
mov
jg
lahf
push
mov
pop
rol
jecxz
shr
ins
aam
outs
dec
pop
adc
or
xchg
hlt
cmp
out
aam
stc
mov
pop
push
sbb
sbb
stc
cmp
lods
add
and
push
or
imul
mov
cs
mov
push
std
(bad)
dec
lods
retf
and
(bad)
sti
cmp
test
pop
jg
push
cmp
mov
stc
lahf
lock
dec
and
xchg
or
leave
ret
imul
mov
mov
fmul
dec
cmp
inc
mov
add
pop
xor
and
sbb
xchg
pop
xor
sub
(bad)
jge
shl
popf
out
fnstenv
mov
shr
dec
movs
jns
adc
mov
dec
pushf
cmps
shr
pop
push
mov
outs
(bad)
out
xlat
sbb
arpl
jnp
ja
mov
push
popf
iret
out
shl
repz
mov
loope
out
mov
(bad)
pop
xor
loop
(bad)
sub
jecxz
add
(bad)
sub
lea
shl
push
cmp
fild
and
test
inc
(bad)
sbb
popa
ja
nop
test
imul
sbb
mov
mov
div
dec
ins
jg
push
loopne
(bad)
scas
fs
sbb
sbb
dec
daa
inc
jge
cmp
and
push
mov
frstor
jmp
pop
in
adc
push
pop
cmp
aaa
pop
mov
lea
es
pop
mov
mov
mov
stos
mov
mov
je
outs
inc
dec
xchg
jge
stos
mov
sub
ja
lea
(bad)
pushf
test
aaa
xchg
mov
jb
ja
mov
sbb
imul
and
push
push
pop
sub
ins
in
push
sub
shl
test
push
outs
jo
lea
xor
aam
mov
out
mov
jge
push
mov
pop
jmp
ins
popa
add
push
out
test
out
and
stos
or
add
xchg
out
inc
pusha
movs
pop
xor
icebp
push
stos
jle
jp
adc
(bad)
imul
lahf
add
sbb
shl
mov
xor
test
and
not
scas
bound
add
jo
ret
je
fcmovbe
int3
and
les
inc
cld
push
ss
sahf
push
mov
xchg
dec
adc
cmps
push
sar
push
push
jge
adc
ins
loop
xchg
dec
pop
lock
mov
jbe
mov
addr16
mov
inc
enter
xchg
into
mov
lods
aaa
dec
jae
iret
mov
les
add
aad
cmc
mov
mov
hlt
not
stos
fistp
mov
(bad)
stc
sbb
dec
mov
mov
mov
imul
iret
jnp
fwait
cdq
pop
sar
lods
iret
ins
gs
pushf
das
enter
fistp
push
jmp
xor
das
into
(bad)
fsubr
scas
pop
loop
ss
pop
add
pop
retf
push
js
inc
push
mov
sar
cmp
sub
fwait
sub
je
cdq
cmp
les
ins
in
pop
aam
or
popf
push
lods
push
xchg
imul
std
mov
dec
arpl
loope
lods
adc
fcomp
in
push
fsubr
push
dec
sbb
xor
pop
xchg
xchg
add
jg
fwait
adc
jb
clc
pop
dec
jae
xlat
push
push
int3
xor
repz
push
shl
out
sbb
shl
xor
daa
sahf
popf
mov
pop
retf
jmp
xchg
lods
cmp
gs
loope
aam
fwait
xchg
movs
mov
inc
sti
push
jge
rcl
jl
aaa
dec
push
mov
mov
sbb
sahf
xchg
popf
mov
imul
aad
adc
and
push
ror
sahf
pop
cdq
test
test
lock
push
cwde
out
cld
ja
xor
jnp
push
cmp
mov
cs
sbb
ins
jg
adc
pop
adc
jmp
dec
push
lea
and
and
pop
or
test
cmps
dec
rol
(bad)
mov
sbb
sbb
dec
sbb
jl
adc
cmp
mov
ret
mov
xor
jmp
ins
push
call
in
or
(bad)
shl
out
pop
inc
inc
retf
adc
rcl
enter
(bad)
in
adc
les
jb
push
mov
dec
int3
and
shr
jnp
pop
add
loop
mov
ficom
es
lock
aam
pop
mov
mov
dec
js
mov
data16
lods
push
repz
mov
mov
out
and
lahf
mov
pop
dec
dec
dec
sar
lods
imul
call
cmp
fldenv
mov
cmp
lds
push
out
call
cmp
ror
aaa
pop
cmp
mov
movs
daa
sbb
mov
mov
lahf
or
xchg
in
or
jb
fisub
pusha
ret
or
cmp
push
in
mov
push
dec
imul
xlat
sbb
xchg
xchg
mov
dec
mov
imul
outs
repz
int3
dec
pop
cld
pushf
ins
jbe
ins
loopne
or
mov
push
in
dec
pop
repz
mov
pushf
mov
loop
xor
pop
sahf
xchg
aaa
mov
and
int3
popa
mov
ss
scas
jecxz
mov
loope
scas
aaa
loop
push
test
shl
pop
rcl
and
(bad)
retf
outs
int3
xor
ror
mov
fwait
push
mov
aad
sbb
cli
mov
cmp
mov
je
xor
mov
inc
cmp
pusha
or
cwde
arpl
mov
icebp
frstor
call
and
rcl
pushf
xlat
pop
mov
ret
cmc
sahf
aaa
inc
jns
(bad)
jnp
mov
dec
add
push
mov
add
ss
mov
lods
and
inc
or
(bad)
lods
xor
xchg
or
mov
and
inc
inc
inc
mov
rol
ins
repz
lea
xchg
push
ss
mov
or
cmp
xchg
mov
imul
ins
pop
fnstsw
loop
addr16
fldenv
pop
jno
mov
outs
mov
popf
int3
xchg
sub
jne
mov
cs
cmp
inc
loopne
rcl
out
mov
cdq
pop
push
jecxz
push
in
adc
out
mov
pop
outs
cmp
push
mov
dec
pop
dec
cmp
dec
sahf
mov
mov
add
jb
inc
dec
lods
fisttp
fdivr
inc
sub
push
push
pop
stos
das
adc
leave
nop
arpl
ja
cmp
push
outs
leave
movd
adc
mov
mov
ds
ins
pop
iret
mov
bound
jb
sbb
adc
nop
pop
pop
mov
mov
mov
and
cmp
outs
jl
ficomp
test
pop
push
out
sbb
test
imul
mov
lods
fwait
lock
outs
neg
pop
xor
sti
adc
jae
aaa
push
and
fsubr
(bad)
fld
pop
jb
mov
es
jae
add
ret
sub
mov
mov
pop
aaa
or
cmp
mov
pop
xchg
sbb
cmp
jg
mov
div
and
push
ds
fs
adc
dec
ja
fadd
cdq
add
cmps
pushf
pop
lock
ins
adc
fbstp
cmp
sti
xchg
cwde
or
add
aad
or
sar
(bad)
dec
push
test
fld
pop
xchg
sub
xchg
(bad)
jp
xchg
outs
int3
sub
or
pop
mov
icebp
in
rol
jge
cmp
cmp
std
pop
scas
inc
xchg
dec
mov
cmc
add
mov
push
out
xchg
inc
cmp
xor
push
push
das
sub
fcom
int
cmc
ins
inc
rcl
xor
xchg
xor
dec
pop
add
add
cld
jae
sbb
unpcklps
adc
rcl
add
sub
inc
push
jge
xchg
les
bound
leave
push
mov
lods
mov
aad
xchg
mov
xchg
jl
pop
stos
jmp
xlat
sub
add
sbb
mov
loopne
bound
pop
inc
loope
fisttp
xchg
adc
loop
test
add
ret
pop
adc
pop
cmp
leave
imul
out
sbb
imul
arpl
or
fild
iret
out
jae
(bad)
xor
jg
ins
inc
fild
dec
in
inc
test
jne
fimul
outs
dec
mov
jmp
cmc
mov
mov
rcl
pop
test
xor
movs
outs
xor
or
mov
js
movs
mov
dec
cmp
sub
repz
popf
or
adc
cmp
sub
lahf
pop
push
in
test
cmp
fnstcw
pop
push
adc
cmc
shr
movs
aaa
out
scas
mov
mov
(bad)
out
push
mov
lock
add
jae
mov
ret
xchg
cmps
cwde
pop
cmp
mov
or
inc
jo
pop
mov
adc
xchg
jl
and
pop
adc
call
lock
ret
mov
sub
dec
xor
mov
jmp
pop
loopne
xchg
pushf
popf
gs
test
hlt
or
inc
push
clc
inc
mov
add
pop
push
test
ins
pop
jmp
pop
xchg
dec
push
cwde
and
outs
sbb
stc
movs
bound
fldenv
or
fmul
dec
cmp
aaa
jnp
mov
mov
in
arpl
xor
add
es
inc
dec
aaa
mov
mov
jb
or
pop
jae
arpl
aaa
mov
(bad)
mov
jne
xchg
jge
sbb
push
add
pop
mov
dec
pop
jl
mov
jl
inc
inc
std
repnz
js
push
sub
inc
call
mov
inc
ret
cwde
lods
ss
sub
pop
jg
in
lahf
adc
jg
arpl
(bad)
mov
pop
lods
dec
and
push
sbb
aaa
sbb
rcl
pop
aam
outs
neg
pop
mov
cmp
xchg
and
loopne
cmps
mov
sub
push
push
inc
loopne
hlt
xlat
test
clc
enter
pop
pop
jmp
mov
stos
mov
ds
cmps
jl
test
mov
ja
out
mov
div
sbb
mov
rcl
jle
stos
xchg
cmc
and
into
mov
pop
gs
repnz
pop
and
xchg
pop
ror
pop
ja
inc
movs
scas
adc
lods
dec
in
dec
call
mov
sub
push
push
inc
mov
pop
mov
ret
mov
in
dec
pop
gs
add
xchg
xlat
pop
adc
xor
clc
sbb
rcl
mov
fld
or
inc
(bad)
push
jae
mov
mov
dec
xchg
bswap
repz
push
vunpckhps
dec
pop
inc
cmp
or
sub
leave
bound
xor
and
dec
ins
and
loope
enter
call
rol
sub
pushf
adc
pop
fadd
hlt
mov
or
call
cli
(bad)
in
pop
in
push
adc
mov
push
sub
or
pop
pop
mov
test
push
mov
push
retf
hlt
fcom
jae
sub
dec
add
push
test
cmps
ret
pop
rcl
std
rcr
into
jp
js
push
mov
add
dec
sub
lea
test
in
push
gs
fbld
push
jmp
fs
mov
push
(bad)
push
or
push
mov
pop
in
dec
dec
push
pop
popa
(bad)
xchg
push
push
repz
sub
pop
iret
(bad)
push
inc
inc
add
jnp
ja
(bad)
dec
mov
mov
sti
cdq
push
popf
mov
scas
jle
push
mov
mov
sub
sahf
xchg
test
xor
in
rcl
ret
sub
lods
cmp
aam
jmp
dec
jo
lds
outs
pop
mov
jp
dec
inc
stos
mov
xlat
ins
dec
hlt
add
mov
jmp
aaa
cmp
jne
cmp
inc
lods
mov
adc
sbb
push
mov
sbb
scas
push
cmp
xchg
xchg
hlt
push
dec
jge
inc
hlt
pop
adc
dec
and
cld
jge
fcom
(bad)
and
repnz
pop
repz
gs
pop
std
sub
dec
enter
jns
pop
rcl
sti
test
mov
add
inc
jae
sti
jno
mov
ret
cmp
and
push
xchg
fidivr
shl
addr16
pop
jae
test
xchg
mov
mov
sbb
push
repnz
ss
xor
lock
sti
inc
add
lea
pop
mov
js
inc
fwait
jae
shr
add
add
jnp
sub
mov
adc
add
xchg
mov
or
ja
lock
and
test
pop
test
xor
nop
int3
lahf
add
cld
mov
test
lods
fild
sbb
mov
sbb
dec
push
pop
out
idiv
arpl
jnp
fst
push
call
je
aas
jle
sar
xor
stos
sti
in
push
imul
push
ja
xor
cli
stc
pop
hlt
jns
xor
ins
push
dec
adc
lea
lahf
std
xchg
les
mov
mov
push
or
in
cmp
(bad)
dec
add
cli
jmp
pop
mov
and
and
call
adc
mov
mov
out
push
pop
mov
adc
enter
mov
add
push
sbb
ins
iret
add
daa
hlt
sti
and
jle
fnstsw
sbb
movs
ds
aam
cld
cs
sbb
std
jle
sbb
mov
adc
nop
pop
in
retf
mov
adc
or
push
aam
lods
sub
jle
xchg
nop
je
xor
sub
pop
sti
cmp
or
sbb
pop
jl
dec
xchg
jne
inc
(bad)
jmp
push
push
jbe
sub
jg
popf
xlat
sbb
adc
mov
xor
ins
sub
jmp
sbb
fcompp
addr16
mov
dec
loopne
mov
fdivr
pop
sbb
pop
xchg
ret
in
ins
shl
pushf
mov
ins
sbb
mov
pop
test
dec
clc
add
pop
(bad)
or
jae
scas
mov
jl
cmp
adc
shr
pushf
push
(bad)
mov
add
push
push
out
push
mov
sbb
inc
pop
lock
inc
pop
sahf
pop
fcomp
mov
dec
neg
mov
retf
aad
shl
retf
jecxz
ja
mov
cs
pushf
sub
and
rol
(bad)
fxch
and
cmp
icebp
(bad)
fwait
mov
jnp
push
mov
push
inc
je
ds
in
fld
lahf
addr16
cmp
adc
neg
arpl
loopne
lods
sbb
fcomp
jg
pop
mov
cmp
dec
(bad)
aam
dec
jge
ss
adc
jnp
cdq
push
in
or
popf
cmp
dec
cmova
test
xlat
mov
les
aas
(bad)
mov
shr
iret
cwde
sub
fild
mov
mov
mov
mov
push
lea
pop
js
dec
fstp
adc
sub
jno
xor
cs
adc
hlt
retf
adc
jo
inc
scas
les
push
das
and
xor
xlat
(bad)
xchg
popa
sbb
pop
pop
dec
and
cmc
lea
(bad)
mov
cmps
test
mov
push
dec
xchg
clc
mov
call
sub
in
push
aaa
pushf
mov
push
inc
sub
mov
adc
loop
mov
ret
in
pop
in
call
(bad)
sbb
cmp
jmp
fcom
pop
pop
fisttp
pop
mov
push
(bad)
or
push
aad
imul
psrlq
nop
sahf
xchg
mov
shl
jbe
push
pop
hlt
inc
jge
sbb
icebp
mov
js
mov
test
fdiv
in
push
in
dec
cmp
xchg
push
add
mov
leave
fcmovnbe
jecxz
adc
enter
mov
sbb
xor
mov
leave
fnstenv
stos
test
not
and
jl
cmp
arpl
mov
or
push
mov
lods
jnp
mov
sub
cmps
jno
dec
sub
mov
add
and
std
xor
fild
mov
mov
mov
ja
std
pushf
dec
pusha
add
pop
push
(bad)
fld
xchg
btc
sub
inc
push
dec
inc
mov
ss
sbb
(bad)
shr
aaa
retf
xor
lahf
enter
xchg
xchg
add
mov
xor
cwde
hlt
sbb
sub
outs
inc
les
retf
mov
cmp
push
pop
cdq
bound
repz
push
movs
jae
sahf
adc
mov
dec
mov
fcom
(bad)
jns
xchg
lahf
retf
imul
adc
call
imul
lea
pop
pop
fidiv
xor
push
popa
cli
outs
mov
lahf
xchg
ret
or
call
cdq
add
mov
adc
ror
ds
jecxz
ss
mov
(bad)
cdq
adc
xchg
dec
pop
out
lods
dec
jno
push
pop
in
sub
rcl
shl
(bad)
xlat
mov
bound
mov
dec
ds
mov
xlat
gs
and
mov
dec
dec
push
fwait
and
cmp
dec
pop
imul
and
jge
test
adc
inc
mov
scas
popa
lods
inc
ins
cmps
dec
ins
gs
jge
push
mov
mov
repnz
shl
xor
mov
les
inc
pop
daa
jns
ror
call
dec
sbb
stos
or
sub
cvtps2pi
cs
out
out
loop
mov
sub
arpl
clc
mov
pushf
mov
and
jp
and
pop
shl
(bad)
mov
je
aas
sub
add
and
push
cmp
sbb
pop
cld
cmps
pop
test
fist
mov
add
add
daa
adc
loope
adc
sbb
mov
fnstsw
lds
rol
sbb
xor
pop
pop
(bad)
retf
lea
movs
and
pop
repz
cli
sbb
adc
adc
mov
and
in
dec
sbb
dec
jle
aaa
shl
dec
push
mov
dec
sbb
cld
push
fisttp
rcr
pop
popf
pop
or
pop
mov
test
in
jg
adc
push
pop
xor
cmp
mov
adc
es
mov
retf
sahf
push
inc
pop
push
and
addr16
lods
lea
inc
adc
inc
std
jo
inc
sbb
mov
dec
push
(bad)
pop
daa
mov
retf
jnp
in
cmp
outs
cmp
xlat
pop
fwait
loop
jnp
shr
sub
in
rcl
je
pop
sar
pop
mov
fidivr
or
mov
in
mov
pop
cmp
mov
gs
mov
jbe
cwde
pop
xchg
jnp
inc
xchg
push
or
adc
cmp
(bad)
mov
jbe
stos
(bad)
lds
loop
dec
adc
add
rcl
mov
adc
and
xchg
test
jl
ficom
stos
push
sbb
jns
jge
aaa
daa
adc
inc
jl
call
pop
and
aaa
gs
dec
mov
icebp
ja
lock
and
(bad)
clc
jle
pop
xlat
cmp
addr16
cdq
retf
jno
and
mov
jp
sub
mov
sub
stos
jo
int3
sbb
pop
sub
xchg
les
call
pop
cdq
fwait
jmp
rcl
mov
dec
js
clc
sbb
adc
mov
cwde
outs
data16
xor
push
mov
mov
push
fcomi
xlat
lock
sub
cld
leave
add
clc
daa
paddsw
jnp
pop
ror
dec
mov
and
in
ins
rol
std
mov
add
shl
lods
js
iret
xor
mov
mov
cmp
fcom
and
and
ds
loope
push
inc
test
inc
xor
mov
stos
js
shl
sbb
adc
icebp
sub
div
cs
push
jge
sub
mov
sar
push
pop
(bad)
in
loopne
jmp
fwait
inc
lock
addr16
arpl
xor
in
sbb
pop
outs
hlt
add
push
ss
jns
fisttp
iret
out
ret
xor
add
cmps
sub
data16
imul
rcl
out
mov
adc
mov
inc
aam
pop
xchg
push
mov
ror
dec
dec
popf
and
push
aaa
cmps
adc
fwait
shl
in
addr16
loop
push
int3
push
cmpxchg
jmp
lahf
xor
pop
xlat
cmc
psubsw
cs
mov
scas
idiv
xchg
loopne
jl
pop
rcr
sub
fstp
inc
loop
xchg
icebp
adc
pop
into
sbb
push
jmp
fstp
pushf
jg
adc
push
fnstcw
imul
mov
std
cmp
add
aam
adc
inc
shl
fs
arpl
stos
shl
pop
pop
push
(bad)
sub
shl
daa
and
shl
pop
movs
adc
push
push
push
and
(bad)
sub
xor
fwait
mov
stc
mov
sbb
(bad)
cdq
dec
arpl
sahf
xor
in
mov
movsx
lock
xchg
out
add
xchg
pop
jecxz
mov
xchg
inc
sar
mov
fisub
push
inc
in
sbb
pop
jl
add
retf
mov
push
jg
es
loopne
mov
cmps
je
sub
adc
fmul
jb
cmp
jl
mov
jmp
sbb
jns
enter
unpcklps
and
sbb
dec
adc
fsubr
mov
clc
lock
pop
pushf
add
pop
test
xchg
cmp
call
rol
sbb
mov
jne
leave
int3
ja
rcr
iret
stc
cld
div
add
mov
lahf
retf
inc
fsubr
fmul
dec
fdivr
jno
call
lods
lahf
xor
pushf
jno
and
dec
dec
mov
mov
aaa
push
sbb
sub
sub
jae
sar
fbld
daa
mov
jl
inc
sbb
sbb
add
out
mov
in
aaa
dec
mov
lds
push
or
pop
arpl
mov
xchg
sub
sbb
aaa
xor
aad
sti
add
xchg
(bad)
sar
inc
cmp
repz
inc
mov
lock
cmps
sar
scas
movlps
aaa
popf
mov
aas
sbb
mov
lock
(bad)
sub
push
or
(bad)
jg
mov
stos
sbb
sbb
int3
push
mov
rol
div
test
pop
dec
mov
and
push
fsubr
and
and
(bad)
hlt
xor
loopne
test
sahf
lock
je
xor
fsubr
xor
push
xchg
arpl
mov
pop
jmp
pop
pop
xor
(bad)
adc
mov
call
cs
fadd
add
mov
cs
repnz
dec
mov
mov
fimul
mov
inc
(bad)
dec
xor
cld
xchg
pop
pop
in
aad
retf
loop
dec
inc
loope
mov
push
add
xchg
enter
shl
dec
lds
pop
gs
or
push
xchg
aam
push
xchg
icebp
inc
pop
stc
mov
mov
xchg
shl
xor
aam
test
mov
push
jbe
sar
xchg
fidiv
add
mov
sbb
dec
cld
idiv
imul
inc
xchg
and
in
lock
das
dec
push
popa
lea
mov
inc
ror
aam
push
push
in
leave
enter
mov
aam
cmp
mov
lock
push
push
call
and
(bad)
lock
cld
mov
sbb
cwde
cmp
mov
shr
sti
xor
xor
xchg
or
cdq
pushf
(bad)
in
mov
cmp
cmps
(bad)
adc
in
bound
pusha
aam
(bad)
cli
xlat
push
dec
cmp
test
add
pop
cld
xor
arpl
mov
jmp
clc
pop
xchg
mov
aas
ins
retf
xor
sar
ds
push
jnp
push
popa
sbb
gs
test
div
fwait
add
mov
hlt
sub
and
leave
xchg
lods
pop
sbb
icebp
pop
jae
(bad)
dec
(bad)
call
or
enter
mov
out
ja
dec
sbb
ins
mov
pushf
or
out
idiv
mov
sub
mov
popa
mov
mov
jl
cld
sub
pop
inc
fwait
not
and
dec
arpl
pop
rcr
cmp
pop
repnz
push
pop
xor
in
loop
pusha
les
ins
pop
xlat
lea
nop
push
jnp
push
and
push
dec
out
imul
push
test
jmp
(bad)
les
les
cmps
xchg
add
lds
ds
cmps
xchg
and
shl
or
(bad)
scas
addr16
sub
mov
cmc
mov
scas
xchg
pushf
xchg
aad
mov
jbe
sbb
sti
and
xchg
add
lock
sbb
pop
jne
xor
lahf
ret
and
retf
pushf
mov
push
imul
sbb
test
xchg
aas
inc
retf
cmps
mov
mov
stos
rol
dec
mov
into
dec
xor
cmps
dec
pop
movs
jne
xor
push
pop
pop
es
aaa
iret
enter
pop
fsub
jle
and
aas
jl
pop
xchg
sbb
jl
sbb
cld
adc
adc
icebp
lods
add
dec
pop
xor
aaa
stos
cmp
pop
sbb
leave
xchg
(bad)
push
push
xchg
das
loopne
out
mov
adc
push
out
xlat
cmp
push
jns
pop
adc
xchg
mov
pop
scas
es
sbb
outs
sub
xchg
mov
pop
cmc
into
clc
adc
mov
adc
lods
mov
sub
push
push
mov
in
jae
scas
test
mov
add
cmps
mov
mul
pop
(bad)
cwde
sti
dec
sbb
xchg
arpl
imul
sahf
mov
pop
rcr
pop
in
xor
loopne
imul
cmp
out
xor
xchg
(bad)
ins
xchg
dec
jno
outs
cmp
pop
or
mov
addr16
inc
sbb
xor
pop
add
pop
pop
mov
loopne
or
test
ja
mov
cmps
mov
or
(bad)
sbb
add
xor
pushf
and
jbe
enter
jle
mov
mov
fisubr
scas
pop
xchg
popa
sti
xor
push
mov
push
lock
xchg
mov
arpl
push
cmp
add
pop
cmp
xor
call
mov
sti
mov
add
hlt
imul
neg
aaa
xchg
inc
cdq
ins
add
pop
sub
mov
push
push
jl
sub
call
shl
xchg
jmp
mov
cmp
mov
(bad)
shr
jg
sahf
push
add
cmc
out
sub
das
sub
leave
sbb
test
nop
(bad)
mov
add
add
jnp
sub
push
nop
movs
pushf
push
dec
sub
push
pop
loope
sbb
add
repnz
in
mov
mov
imul
movs
pushf
mov
ins
xor
aas
sub
xchg
pusha
inc
dec
mov
dec
mov
sub
pop
shl
inc
fwait
jns
aaa
add
xchg
mov
pop
std
push
out
shr
pop
mov
mov
fnstsw
movs
cmp
lahf
retf
xchg
xor
jnp
push
add
in
pop
xchg
dec
jmp
mov
adc
push
inc
dec
push
fiadd
in
mov
push
inc
push
pop
pusha
cmps
(bad)
dec
out
enter
pop
cmc
rol
mov
inc
enter
clc
shl
in
push
adc
add
call
dec
ret
mov
mov
xchg
ins
jbe
bnd
out
dec
mov
xchg
lods
mov
stos
popa
push
dec
test
addr16
mov
sbb
fiadd
mov
nop
push
inc
xchg
xor
out
(bad)
stc
shl
fcmovb
arpl
fldln2
xchg
mov
mov
pop
pop
(bad)
dec
fisubr
add
mov
daa
(bad)
adc
div
or
fmul
mov
fmul
cmp
es
jne
add
add
mov
das
(bad)
out
xchg
imul
rcr
rol
push
mov
sub
xchg
sbb
jecxz
or
inc
mov
ja
sub
dec
imul
push
loopne
mov
cmc
mov
pop
fs
mov
call
rcl
nop
xchg
push
ins
loopne
cli
std
test
into
xchg
add
std
mov
aas
out
movs
jae
movs
add
(bad)
jecxz
scas
mov
or
ret
xchg
js
out
add
or
inc
push
mov
pop
std
sbb
mov
out
jle
jmp
test
xchg
add
push
sub
mov
or
sbb
fdivr
cld
fldcw
lock
and
cmps
fidivr
lods
es
cwde
and
lahf
(bad)
and
cmp
cdq
mov
cmc
xor
mov
test
adc
dec
sub
repnz
adc
ins
sbb
dec
mov
sub
addr16
sbb
(bad)
or
out
clc
jl
push
int
ret
sbb
or
inc
pop
or
pop
push
aas
push
retf
outs
test
adc
pop
xor
fsubr
push
adc
aad
pop
dec
aad
hlt
dec
daa
in
call
addr16
push
and
push
sub
ret
push
cmp
inc
ins
sar
push
or
sbb
daa
mov
adc
pop
outs
mov
mov
popa
ja
sahf
(bad)
and
pop
sbb
ds
mov
push
ds
inc
(bad)
clc
cdq
mov
pop
lock
xor
mov
(bad)
mov
inc
cmp
fld
adc
jl
inc
push
inc
(bad)
mov
ror
dec
ja
rcl
repz
out
inc
fld
stos
leave
fsub
add
dec
jno
test
inc
sar
jne
repz
stos
sahf
stos
push
shr
sub
mov
mov
sar
retf
fnstsw
mov
jecxz
inc
sub
test
fmul
push
push
xchg
inc
cmp
lock
bound
jae
add
outs
daa
inc
mov
in
mov
aas
ss
xchg
xor
jl
data16
adc
sbb
aaa
jo
jg
xor
sti
push
push
cs
pop
out
es
je
ret
or
dec
sbb
(bad)
std
out
stc
dec
jmp
jae
in
nop
test
xchg
sub
fnstsw
inc
inc
retf
add
and
es
mov
pop
idiv
sbb
pop
loope
sub
icebp
xchg
ja
sub
and
sbb
mov
stos
pop
mov
shl
imul
shl
xchg
push
es
sub
xor
ror
jo
jns
hlt
mov
mov
ret
sub
push
jbe
push
mov
gs
stc
fadd
int
lods
sbb
loopne
push
push
cmc
push
mov
or
(bad)
cmp
push
pop
xor
ret
dec
(bad)
test
xchg
rcr
cmp
jbe
in
or
rcr
mov
ins
ins
fwait
mov
clc
dec
sub
dec
push
bnd
jo
arpl
sbb
(bad)
sub
dec
xor
sbb
mov
mov
mov
lea
mov
push
and
stos
adc
ret
addr16
out
in
xchg
pop
(bad)
fcmove
or
mov
in
push
jne
call
push
loop
sub
add
pop
ins
out
pushf
cdq
out
iret
ret
or
pushf
sbb
stos
sub
push
dec
hlt
cmc
xchg
int3
push
push
mov
test
jge
add
jae
int3
loopne
repz
and
aad
mov
dec
sbb
adc
fs
iret
int
call
rcl
xor
jg
dec
enter
sar
mov
mov
pop
pop
sbb
pop
xor
movs
sub
lock
retf
dec
sbb
mov
clc
or
rol
sub
stos
retf
dec
jne
outs
inc
xchg
dec
idiv
jge
enter
mov
movs
dec
jmp
pusha
les
test
int3
daa
xchg
mov
fdivrp
ds
loopne
xchg
int3
dec
test
pop
and
inc
cmc
shl
or
gs
mov
jb
fwait
jle
jecxz
sbb
clc
mov
push
leave
dec
jnp
pusha
ins
(bad)
cld
and
movs
ja
xchg
mov
mov
adc
adc
sub
pop
mov
mov
(bad)
pusha
sbb
pop
pop
push
push
fdiv
xor
ret
xchg
sub
jbe
imul
inc
push
mov
mov
lea
test
pop
sub
pop
loopne
jmp
sbb
mov
mov
push
scas
or
test
xchg
mov
and
fsub
fisub
or
mov
dec
xor
push
mov
arpl
mov
mov
aad
sbb
xor
cmp
fistp
dec
mov
push
mov
sbb
sub
mov
dec
mov
scas
repz
add
test
xchg
inc
and
sbb
sub
mov
jo
outs
ror
pop
lahf
dec
cmp
jns
lahf
pop
repz
inc
mov
rcl
mov
mov
neg
adc
fisub
out
(bad)
push
xchg
shl
push
sub
mov
lahf
shl
mov
test
(bad)
pushf
loopne
adc
push
iret
mov
push
sbb
mov
dec
jp
sbb
fmulp
push
fisttp
aam
xchg
sub
out
xchg
cwde
rcl
xor
fidiv
daa
mov
mov
mov
ret
pop
jae
lods
(bad)
loopne
inc
push
jnp
fisubr
cdq
in
out
mov
adc
jmp
(bad)
xlat
pop
retf
daa
ret
test
test
dec
clc
mov
shl
pop
iret
xchg
push
retf
ror
fisttp
into
jbe
ficomp
test
fst
int3
or
mov
push
(bad)
rcr
rcr
(bad)
popa
sub
add
in
in
xlat
das
and
sbb
add
jg
xchg
pushf
dec
mov
stos
add
adc
lds
popf
xlat
xlat
mov
mov
mov
stc
mov
dec
push
rcr
jae
push
pop
dec
or
ret
cs
sbb
and
lea
mov
out
into
push
add
loop
sahf
bound
in
adc
mov
fcom
mov
ja
inc
cmp
das
inc
push
in
xor
inc
pop
and
xchg
pusha
pop
xchg
pop
cld
mov
pop
call
gs
add
rcr
leave
(bad)
js
neg
sub
shl
std
dec
cmp
cmp
sbb
sbb
mov
(bad)
dec
dec
mov
jmp
retf
hlt
mov
xchg
pop
test
xchg
fisub
pop
dec
movs
fst
daa
jp
mov
scas
xchg
repz
push
movs
ins
cmp
sbb
jbe
sar
fst
sub
mov
pop
leave
mov
dec
loopne
clc
push
out
or
jle
loopne
jnp
jmp
pop
lea
mov
push
sbb
sub
dec
fbld
mov
ds
outs
add
repz
cmp
sub
dec
stos
out
data16
mov
pop
ja
dec
pop
pop
cmp
xchg
out
mov
enter
mov
dec
pop
mov
cwde
movs
pop
sub
dec
jns
lea
sub
mov
mov
js
add
mov
xor
lds
cdq
sbb
dec
pop
sub
cdq
pop
and
pop
inc
sbb
scas
cmp
push
dec
test
mov
nop
sbb
cmps
fisttp
test
push
ds
enter
push
push
loopne
jmp
lock
scas
fwait
sar
loope
or
mov
dec
stos
or
and
int3
loop
popa
js
cmp
out
mov
sahf
rol
lods
adc
and
aam
cmp
es
je
mov
popa
lds
int3
push
and
fisub
fs
cmp
sbb
fiadd
sbb
adc
(bad)
fisub
in
sti
setne
dec
bound
pop
xor
sahf
jmp
and
pop
arpl
mov
mov
and
mov
(bad)
push
(bad)
pushf
ja
cdq
mov
sahf
leave
out
mov
cld
xor
lods
retf
mov
xchg
sbb
jp
push
xchg
shr
and
sub
lods
clc
adc
push
sub
scas
(bad)
call
push
lds
dec
dec
aam
dec
es
rcr
lock
pop
or
cwde
inc
loopne
es
mov
fld
jge
add
mov
push
pushf
(bad)
sbb
test
div
ins
data16
mov
mov
jecxz
inc
inc
mov
cmp
cmp
clc
movs
lea
xchg
fwait
shl
push
pop
outs
mov
mov
test
dec
sub
pop
xchg
sub
mov
ja
sahf
mov
loopne
cmp
pop
fs
dec
jnp
loop
pop
ror
mov
daa
xchg
dec
loopne
(bad)
sbb
add
push
pop
call
fdiv
fidiv
dec
(bad)
and
(bad)
test
mov
sub
inc
loop
jmp
nop
dec
(bad)
xchg
add
(bad)
in
adc
mov
and
jbe
rcr
cmp
cmp
cmp
cdq
call
and
cmp
mov
ins
xor
mov
xor
jnp
adc
mov
lods
xchg
push
ret
mov
cmc
popf
sbb
fist
scas
test
mov
cmp
push
inc
inc
fstp
fisub
sbb
dec
cmps
call
pop
fisub
arpl
xor
push
out
dec
mov
(bad)
push
sbb
cmp
dec
out
sbb
pusha
sub
and
jbe
(bad)
shl
mov
sub
shl
dec
dec
or
xchg
xchg
push
pop
test
in
not
add
fsubr
mov
nop
scas
icebp
sar
clc
jmp
xchg
pop
pop
int3
pop
lock
pop
mov
pushf
dec
pop
jp
xor
cwde
sub
cmps
or
mov
in
xchg
test
mov
pop
or
sub
or
lods
into
adc
test
imul
jge
sub
js
xlat
ret
fiadd
outs
sbb
lods
stc
addr16
jl
out
aaa
call
mov
mov
imul
mov
sub
sbb
jnp
int3
mov
push
push
pop
fs
mov
shl
dec
push
inc
adc
sub
aad
inc
popa
pop
adc
fisub
dec
pop
xor
lahf
cld
retw
xchg
dec
xor
pop
into
sub
les
adc
mov
fisub
sbb
in
(bad)
dec
ins
jg
mov
xchg
push
sub
pop
rcr
fadd
push
dec
int3
inc
jmp
rol
sahf
cmp
lods
mov
sub
xor
xchg
fdivr
push
lods
xchg
and
test
xor
dec
fnstenv
jne
std
shl
cmp
xor
sub
mov
loopne
lock
mov
xor
fisubr
out
popf
mov
xlat
add
stc
cmps
gs
jmp
jecxz
test
mov
mov
adc
std
rcr
jl
add
push
sub
dec
aam
fiadd
sbb
jo
push
and
fst
mov
cmp
fs
out
cmc
mov
dec
ins
outs
jo
jne
repnz
in
cmp
(bad)
add
jl
sahf
mov
gs
add
push
xor
add
leave
pop
push
mov
ret
xchg
enter
lods
mov
(bad)
iret
cmps
jmp
loopne
fmulp
and
fwait
mov
push
rol
dec
mov
inc
pop
push
dec
and
idiv
cmc
sub
ds
ja
mov
or
inc
test
repnz
push
aam
retf
test
inc
mov
sub
push
pop
into
dec
ja
ds
sahf
dec
daa
neg
js
inc
fnsetpm(287
mov
xchg
adc
mov
adc
mov
jnp
xor
xchg
int
movs
push
sub
(bad)
push
popf
sti
sbb
pop
sub
pop
mov
stos
dec
cs
aad
arpl
ficom
jo
pop
sar
xchg
fcmovu
leave
fwait
mov
loop
pop
shl
push
sar
rcr
loope
add
cmp
push
cmp
and
or
xor
call
hlt
lock
mov
ja
lods
aam
dec
dec
mov
int
cmp
mov
inc
dec
shl
inc
cmp
cli
ret
sbb
fst
mov
aam
cmp
clc
int3
lock
cmp
enter
and
push
or
mov
fs
jne
mov
fidivr
jnp
mov
mov
cmp
cmp
nop
js
fiadd
(bad)
loop
stos
push
and
push
retf
mov
xchg
test
mov
sbb
cdq
and
cmp
cmp
popf
int3
push
cmps
cld
stos
aaa
pop
(bad)
clc
push
popf
or
repnz
sbb
clc
nop
mov
mov
dec
add
fcom
test
loopne
inc
je
xor
addr16
sbb
iret
xchg
ss
mov
test
xchg
cli
es
sbb
in
or
xchg
nop
pop
pop
cld
ins
inc
scas
idiv
mov
adc
fisttp
inc
dec
cld
inc
cwde
fldcw
mov
sub
mov
cmp
std
loopne
mov
aam
sbb
dec
sti
cmp
mov
cmp
cmp
xchg
or
xchg
daa
push
arpl
adc
mov
daa
dec
mov
inc
pop
xlat
dec
shl
aam
sub
xchg
test
(bad)
mov
daa
jl
lea
fidiv
and
jno
sbb
pushf
cdq
mov
cmp
push
push
adc
loop
push
mov
or
neg
adc
jecxz
dec
(bad)
out
pop
cdq
ret
fucomi
std
inc
in
cli
cwde
inc
jmp
aad
inc
punpckhdq
(bad)
movs
sbb
pop
loopne
outs
dec
pop
push
ficom
mov
aam
pop
pop
jecxz
adc
mov
les
push
fwait
mov
ret
aad
loop
inc
addr16
lods
jle
mov
call
retf
push
cmp
fldcw
cs
hlt
mov
cmp
xchg
pop
inc
fwait
or
mov
loope
mov
pop
in
stos
xor
icebp
mov
shr
int
fdiv
std
jge
sbb
jo
xor
fsubr
push
mov
sub
jg
dec
jmp
push
fmul
mov
mov
pusha
sbb
dec
or
adc
add
je
scas
mov
xor
push
fcom
jb
xchg
sbb
fsubrp
pushf
or
dec
addr16
out
cmp
or
push
out
ins
loope
rcl
push
imul
inc
outs
fcomp
loopne
xchg
imul
xor
adc
das
push
push
adc
sub
inc
hlt
mov
arpl
test
push
scas
cmp
ret
dec
shl
pop
imul
ja
xlat
pusha
cmp
lea
pop
popf
add
(bad)
fwait
(bad)
xchg
jg
jnp
push
inc
ror
or
push
mov
or
out
bound
fstp
cmp
and
xor
push
or
dec
jg
pop
and
sub
outs
movs
ror
rcr
mov
aaa
mov
sahf
inc
mov
(bad)
sub
adc
adc
inc
lock
stos
sub
cmps
xor
pop
nop
pushf
pop
fst
pop
ins
mov
or
cmps
loop
mov
dec
and
xchg
cmps
push
sbb
jmp
(bad)
fsubr
outs
mov
mov
mov
ror
retf
xchg
cmp
pop
imul
nop
or
push
mov
mov
mov
test
xor
inc
sar
xor
adc
test
or
out
clc
jbe
mov
mov
xchg
xchg
cmc
dec
pop
in
movs
cmp
mov
sbb
enter
or
ret
sbb
mov
add
pushf
test
push
rcr
push
in
jle
mov
mov
cmp
xchg
push
cdq
mov
mov
jnp
push
arpl
cmps
pop
push
add
cmp
neg
pushf
mov
loope
push
aaa
mov
fisub
add
mov
sub
leave
nop
sar
fwait
sbb
jmp
xor
mov
pop
sub
popa
dec
jbe
je
jg
xchg
inc
push
out
imul
mov
jns
and
mov
ja
mov
gs
ds
arpl
and
fcom
mov
mov
and
arpl
repz
int3
jb
aaa
shl
mul
cmps
jo
ins
dec
jg
and
cmc
or
data16
mov
movs
test
das
push
sub
dec
es
mov
into
cmp
xchg
mov
mov
out
ret
dec
ins
stc
or
lgs
int3
mov
add
sbb
adc
sahf
and
loopne
cmp
dec
mov
fisttp
fs
ja
fnstsw
add
cmps
sub
pop
shr
sar
mul
fxch
sbb
out
mov
jecxz
jae
ds
(bad)
fdiv
xchg
adc
scas
and
lahf
jge
ror
xchg
sti
fimul
in
mov
es
dec
nop
dec
rcr
push
hlt
std
or
ins
mov
(bad)
fstp
pushf
clc
push
mov
test
cmp
xor
lahf
aaa
xchg
jl
neg
or
mul
inc
sbb
pusha
push
nop
dec
jp
into
push
adc
test
and
sahf
mov
(bad)
aad
xchg
push
stc
mov
push
and
hlt
xchg
push
or
push
out
stos
(bad)
retf
adc
and
fisub
popf
aaa
pop
sbb
in
(bad)
lea
int
add
test
rcl
jbe
inc
setbe
ds
popa
mov
mov
push
imul
pop
pop
pop
pop
sbb
mov
(bad)
mov
fs
loopne
sbb
aam
xchg
aaa
not
cld
imul
fnsetpm(287
imul
stc
int
push
call
pop
popa
(bad)
aam
lock
mov
pushf
xlat
pop
(bad)
sbb
or
cli
fwait
mov
inc
(bad)
(bad)
sbb
fisub
sub
sbb
cwde
sbb
jno
shr
mov
dec
inc
xor
nop
mov
cli
push
je
dec
ror
add
mov
jne
mov
sub
mov
sub
dec
push
into
mov
(bad)
(bad)
pop
rcr
cmp
mov
mov
loop
add
mov
loope
or
cld
mov
call
test
mov
pop
(bad)
pop
test
lea
(bad)
scas
cmc
sbb
xchg
or
mov
mov
ror
push
and
mov
jmp
push
push
push
pop
stos
into
cmps
adc
jb
and
xor
and
dec
xor
inc
and
arpl
and
jno
test
push
xor
inc
sbb
dec
into
es
dec
in
call
push
pop
call
xor
(bad)
arpl
mov
loope
mov
sqrtps
cwde
mov
(bad)
int
pop
sub
jnp
jle
gs
js
fcom
daa
imul
mov
outs
push
inc
sahf
ror
or
test
int
lock
movs
div
mov
data16
std
sub
popf
rol
dec
lahf
cdq
pop
shl
push
fstp
arpl
out
retf
jmp
push
push
add
clc
or
shr
adc
xor
xchg
jmp
xlat
std
call
aad
mov
mov
loopne
add
fadd
pop
popf
dec
sbb
cld
push
dec
clc
xchg
sbb
jno
mov
cmps
sbb
loope
mov
loope
fild
ja
jmp
jg
cs
(bad)
xor
cld
cmc
into
les
pop
add
push
pushf
sbb
(bad)
xor
jno
push
aad
cmp
cmp
xchg
sbb
jp
sub
dec
imul
push
pop
sbb
inc
int3
xchg
adc
gs
mov
xchg
cwde
xor
jg
adc
and
mov
cld
cwde
in
cmp
rol
pop
(bad)
aad
mov
or
pop
jnp
mov
lock
repz
inc
inc
fs
sub
jno
out
xor
std
mov
mov
mov
nop
mov
fiadd
adc
sub
lea
fistp
mov
lea
rcr
ficomp
repz
pop
daa
dec
loop
mov
pop
cwde
inc
not
cmp
sbb
push
dec
loope
fimul
fnstenv
jge
add
(bad)
pop
into
sti
arpl
mov
in
and
stos
cwde
sbb
mov
repnz
in
hlt
test
lods
jmp
cdq
or
inc
ficom
push
idiv
call
ss
xlat
jl
xor
inc
sbb
push
sbb
xchg
dec
dec
outs
ret
push
loope
fdiv
dec
mov
out
pushf
push
dec
popf
aaa
jnp
sbb
sub
enter
int3
(bad)
test
add
dec
mov
mov
lea
add
imul
pop
push
xor
push
pop
inc
test
les
jg
out
dec
fs
mov
xor
push
push
retf
and
repz
pop
sahf
push
ss
imul
out
lahf
shl
popa
dec
int
xor
sub
xchg
sbb
mov
sub
xchg
jno
outs
mov
idiv
push
int3
adc
icebp
jbe
cwde
call
lock
in
repz
xlat
dec
call
shl
(bad)
dec
bound
pop
jl
call
mov
test
into
cli
push
scas
inc
jmp
out
mov
add
pop
jne
cmp
jbe
loope
add
cmp
sub
pop
push
push
mov
jmp
mov
ins
ret
cmps
dec
int3
sbb
arpl
ds
mov
ret
outs
out
pop
pop
and
scas
leave
ins
mov
push
sbb
pop
stos
add
stc
(bad)
aam
cdq
xor
add
data16
inc
pop
and
pusha
dec
mov
jle
aaa
loope
sbb
outs
or
shl
xchg
mov
mov
push
xor
sub
jl
pop
imul
nop
push
push
mov
pop
int3
out
mov
loope
mov
adc
sti
sbb
shr
pop
sti
xor
mov
setns
xlat
fsubr
dec
mov
fcomi
vsqrtsd
mov
jmp
push
movs
rol
mov
sub
stc
or
cwde
out
push
pop
push
aam
xlat
push
mov
cmp
ins
fwait
adc
sbb
cmp
faddp
aad
push
mov
xor
nop
(bad)
int3
pop
enter
jo
imul
pop
and
jo
pop
mov
sbb
push
div
jmp
rol
and
add
dec
pop
addr16
mov
pop
bound
pop
scas
addr16
jae
mov
inc
xchg
jmp
test
mov
jb
lea
mov
lods
jecxz
fsub
mov
outs
stos
dec
jmp
nop
in
repz
xlat
sbb
test
mov
jle
dec
sbb
das
sub
mov
xor
cld
rol
(bad)
mov
sbb
jle
jno
imul
inc
pop
out
and
rcr
push
add
push
mov
sbb
(bad)
xor
in
jbe
mov
outs
pop
(bad)
and
push
inc
clc
pop
pop
out
rol
jbe
sub
ins
inc
outs
jmp
xchg
pop
push
mov
push
leave
and
iret
call
(bad)
or
push
fdiv
das
jbe
pop
gs
ins
add
in
xchg
sbb
les
adc
dec
sub
aad
push
and
loop
sbb
pop
adc
lods
push
fcom
js
sub
retf
(bad)
sbb
mov
fcmovnb
in
into
shl
(bad)
mov
mov
or
adc
pop
sub
xchg
out
push
xchg
leave
add
jle
pop
xor
addr16
ffree
fadd
outs
cmc
mov
dec
dec
shl
out
jl
cmps
inc
xor
ret
out
adc
adc
dec
xor
inc
mov
or
inc
mov
and
dec
test
out
mov
mov
push
mov
pushf
push
aad
leave
dec
cmp
mov
clc
dec
inc
mov
or
mov
xlat
xor
cmp
mov
cmp
mov
jb
ds
les
outs
in
test
lods
mov
pop
pop
cld
sub
inc
clc
fsubr
mov
mov
aam
lock
xchg
mov
and
sub
jae
xor
pushf
xor
jmp
and
loop
daa
and
ds
push
jmp
not
sbb
arpl
mov
add
outs
bound
enter
sub
mov
inc
add
jle
mov
xor
pop
(bad)
out
rcr
mov
mov
jae
inc
pop
outs
push
scas
loop
retf
jnp
adc
rcl
jae
shl
call
bound
rol
and
aam
push
loope
aas
xor
nop
mov
cdq
out
rol
push
out
mov
inc
fdivr
xchg
pusha
sub
mov
and
cmp
xchg
mov
cmc
push
lods
sub
fisubr
jmp
ds
mov
aas
push
cmp
adc
cmp
xchg
rcl
xchg
int
jb
mov
inc
push
int
scas
dec
test
call
inc
adc
call
in
inc
sahf
jge
jg
xor
mov
mov
mov
mov
ja
and
ins
fwait
jbe
inc
inc
mov
aam
mov
sub
mov
cmps
cmp
mov
cwde
lds
ret
outs
shl
mov
aaa
sbb
call
pop
pop
mov
push
js
mul
ds
fs
sbb
ds
call
sbb
mov
popf
fcmovu
inc
mov
mov
iret
paddw
dec
adc
fstp
adc
sub
jmp
push
lahf
dec
popf
enter
mov
fstp
push
jp
ins
push
cmp
test
retf
adc
aam
xor
jp
xlat
dec
inc
pop
sub
cmp
mov
(bad)
nop
xor
xchg
cmc
stc
(bad)
inc
dec
movs
dec
adc
cmp
sbb
imul
mov
dec
leave
(bad)
jmp
ss
rol
dec
xchg
pop
sbb
or
in
adc
xchg
inc
pop
cmp
dec
addr16
sar
lods
ret
xor
xchg
repz
or
cmp
out
sub
add
add
(bad)
pop
cli
mov
adc
inc
stos
sbb
fcomi
repz
cmps
push
xchg
ja
adc
dec
mov
push
push
inc
push
cmps
ss
fs
lods
push
sub
sbb
out
aaa
xchg
loop
mov
(bad)
mov
mov
bnd
outs
dec
jmp
jns
into
(bad)
sbb
pop
cld
sub
lock
adc
in
jo
fs
mov
add
xor
lds
dec
jno
or
(bad)
jmp
and
popa
movs
leave
and
int3
mov
fcomp
adc
push
jo
rcr
out
rcl
outs
std
popa
push
or
push
outs
xchg
mov
mov
stos
fisub
xchg
adc
dec
mov
jne
mov
div
frstor
ret
repz
dec
stos
cmc
pop
daa
daa
adc
test
loopne
(bad)
dec
xchg
mov
mov
xchg
aaa
mov
push
bound
pop
(bad)
mov
fs
fwait
addr16
(bad)
jge
xchg
retf
sbb
scas
shl
adc
inc
mov
jmp
sbb
ja
mov
sbb
bound
das
pop
pop
pop
fcomp
lock
sbb
mov
(bad)
fisttp
ins
retf
push
fimul
les
sub
shl
in
jno
jg
aam
daa
rcr
xor
fwait
div
cs
inc
mov
movs
out
rcl
in
push
jmp
mov
ret
sub
dec
loop
pop
call
xor
push
mov
xor
test
fwait
out
mov
push
cdq
mov
jo
fist
sub
daa
inc
enter
scas
ret
test
cmps
mov
pusha
push
shl
nop
inc
sbb
push
call
xlat
in
mov
mov
or
(bad)
cmp
jg
jle
sub
mov
test
enter
add
ins
aaa
scas
or
(bad)
mov
popa
inc
into
pop
lds
or
jb
adc
into
mov
loope
call
mov
ins
daa
test
mov
cmp
and
mov
xor
xchg
retf
icebp
mov
xchg
int
aas
mov
jne
sahf
cmp
hlt
pop
xor
enter
es
nop
sbb
fsub
or
jb
mov
jl
sub
outs
xchg
adc
out
xor
xchg
mov
cld
mov
call
cmps
xor
sbb
push
data16
test
mov
mov
sbb
pop
add
jo
(bad)
xchg
fisub
int
fs
dec
in
xor
addr16
cwde
arpl
push
push
mov
clc
inc
sbb
cld
and
popa
rcl
cs
add
iret
or
mov
fbstp
(bad)
push
push
fsub
loopne
js
imul
cld
mov
jg
ja
push
mov
outs
add
sbb
imul
or
pop
shl
or
popf
mov
push
mov
mov
rcl
xchg
and
adc
ds
jmp
popa
xchg
mov
daa
hlt
dec
jmp
popf
jge
fmul
int
mov
mov
add
jae
jl
in
push
in
cmc
loope
xchg
xor
retf
sub
inc
gs
pop
ins
es
adc
loop
ds
sar
push
adc
fcomp
push
inc
scas
movs
out
or
adc
push
mov
mov
fst
push
cwde
inc
cmp
inc
push
aaa
or
push
sti
add
mov
mov
loopne
jg
pop
adc
mov
ficomp
fisub
inc
jmp
and
sub
int3
mov
push
xchg
retf
jo
cmp
dec
add
xchg
mov
adc
shl
push
sub
adc
loopne
retf
mov
add
pushf
jmp
push
icebp
push
adc
jmp
add
addr16
dec
pop
xor
pushf
push
movs
push
fidivr
call
cmp
mov
dec
mov
adc
xor
or
arpl
bound
adc
mov
sar
mov
add
stos
dec
in
mov
pusha
mov
in
inc
les
call
inc
aam
jecxz
dec
test
mov
cld
add
xlat
ror
adc
mov
mov
sub
stos
inc
movs
sbb
stos
xchg
sbb
or
cmp
sbb
push
sbb
std
cmp
pop
stos
pop
or
fdiv
push
gs
rcl
cwde
push
jl
dec
xor
jl
push
add
adc
pop
inc
and
sub
shr
dec
arpl
mov
mov
xor
jns
mov
fwait
mov
leave
jmp
out
aam
das
push
and
test
and
pusha
mov
xchg
movs
fs
jns
cmp
jmp
sbb
mov
iret
xor
fld
mov
add
js
xlat
sti
lods
xor
call
scas
mov
push
scas
outs
and
mov
dec
pop
dec
nop
cdq
or
retf
xchg
push
push
dec
in
adc
inc
ds
adc
pop
dec
lds
xor
loope
inc
xor
sti
cmp
dec
retf
int3
push
cdq
into
push
movs
and
aam
push
(bad)
in
pop
dec
mov
ficomp
fistp
pop
mov
ins
imul
loopne
pop
loopne
stc
fld
scas
sbb
gs
outs
cmp
imul
xchg
mov
mov
dec
cmp
mov
fld
retf
pop
movs
xchg
stc
mov
push
jnp
add
jmp
fwait
les
and
cmp
rol
jg
push
arpl
pop
push
cmp
ret
xor
addr16
loope
jo
out
out
sbb
pop
loopne
gs
sbb
jno
jbe
jmp
jnp
repz
aad
pop
push
jmp
outs
and
mul
or
pop
jge
jnp
int
pop
jecxz
aaa
(bad)
(bad)
ror
in
dec
push
sbb
jne
xlat
sbb
sub
nop
fwait
pop
loopne
repz
stc
inc
inc
sbb
popa
ss
lods
pop
fisub
mov
mov
int3
sub
fisttp
enter
clc
lods
cmp
inc
push
pop
int3
ds
cmps
add
push
cmp
dec
xchg
fsincos
fadd
jb
jp
jne
or
dec
adc
mov
sbb
lea
dec
cmc
iret
jmp
(bad)
push
aaa
(bad)
xchg
sbb
mov
xor
cmp
mov
ret
jo
inc
push
or
das
ss
and
mov
xlat
lock
mov
lea
outs
and
push
in
mov
dec
add
div
sub
mov
mov
adc
inc
out
xchg
xchg
iret
arpl
mov
stos
retf
jmp
xor
dec
mov
inc
out
gs
sbb
loop
shl
je
xlat
test
stc
cmp
arpl
adc
in
std
int3
bound
test
cdq
aam
fsubr
sar
lock
dec
test
fwait
jnp
jmp
add
jmp
fdivr
pop
inc
push
repz
fldcw
add
mov
xchg
sub
sub
jl
popf
hlt
out
pop
movs
and
jg
icebp
stos
xchg
pop
push
add
mov
out
aad
fstp
push
pop
xlat
loop
call
outs
cmp
push
push
cmp
arpl
jo
mov
outs
pop
or
push
pop
pop
(bad)
clc
push
mov
push
push
movs
pop
div
mov
ror
shr
repnz
cld
mov
add
retf
daa
xor
inc
cld
sub
repnz
call
data16
mov
and
(bad)
(bad)
aas
jp
cmp
sbb
xor
mov
dec
loop
fs
adc
push
jmp
lock
dec
f2xm1
ins
(bad)
aaa
pop
push
sbb
imul
mov
push
sub
or
aam
inc
sbb
jmp
loopne
jmp
sbb
std
cli
adc
vmwrite
pushf
pop
xchg
lods
add
lahf
xor
inc
dec
mov
mov
jbe
lock
js
loope
mov
loope
leave
mov
jne
mov
lods
(bad)
out
in
aaa
(bad)
push
test
aaa
std
xchg
sbb
out
int
mov
sbb
ins
cmp
fcom
(bad)
call
es
(bad)
jge
mov
sub
sub
in
xchg
addr16
mov
jno
mov
lea
dec
hlt
xor
(bad)
in
xchg
mov
sub
dec
nop
or
outs
lea
dec
pop
jnp
dec
xchg
jmp
pop
mov
scas
push
sar
cli
xchg
cli
pop
xchg
mov
ret
mov
out
stc
sbb
mul
jp
mov
inc
inc
or
not
xchg
and
aas
xchg
ss
push
ss
jmp
shl
mov
cmps
enter
ror
xor
dec
jnp
and
cmp
rol
ins
inc
pop
out
call
test
and
in
dec
bound
fst
sub
rcl
mov
enter
test
cmp
pop
imul
pop
and
outs
cmp
add
fst
sahf
outs
out
xor
xchg
loop
xor
(bad)
daa
pop
fdiv
dec
adc
fld
rcl
test
dec
dec
cmp
sub
pop
out
sub
pop
jmp
not
ins
pusha
(bad)
out
add
fs
icebp
mov
cmc
jns
or
inc
and
mov
in
ins
mov
xor
sub
mov
inc
leave
pop
pop
(bad)
push
mov
dec
push
dec
inc
movs
cmp
test
xor
mov
push
ins
(bad)
mov
push
xor
mov
cmps
mov
shr
inc
loop
add
loop
adc
loop
scas
scas
or
mov
stos
mov
mov
cdq
cs
adc
push
out
and
inc
ret
stos
fild
mov
push
jp
jne
add
jnp
jnp
cmp
cmp
loop
xchg
movs
sbb
push
call
push
test
in
out
push
movs
dec
dec
xlat
jp
jmp
xchg
pminub
cdq
and
xor
cmp
mov
out
mov
dec
lock
mov
inc
cs
icebp
inc
and
loopne
jb
ins
xchg
in
cmp
aad
jns
dec
add
outs
mov
push
test
add
mov
dec
mov
add
div
shl
sbb
bound
cmp
popa
pop
ret
lock
jmp
jmp
push
push
test
out
mov
enter
cwde
adc
cdq
inc
bound
shr
xor
xor
sti
xchg
(bad)
push
mov
dec
aad
push
out
cmp
lds
fs
jae
arpl
int
push
xchg
dec
add
sub
mov
pop
push
mov
ror
call
rcr
cli
repnz
cmps
out
and
movs
fs
dec
setle
sub
movs
adc
jmp
inc
cmp
pop
inc
cmps
movs
call
lods
mov
jmp
in
std
push
push
cli
add
dec
pop
sbb
test
sahf
sbb
mov
fcmovbe
stc
pop
add
xor
loopne
sbb
dec
test
rol
mov
mov
push
popa
outs
dec
push
ret
aam
aam
repz
mov
test
int3
push
outs
pop
xor
ja
inc
popa
retf
sti
fnstenv
xchg
adc
into
pop
or
stc
mov
dec
test
dec
out
aam
lods
dec
cmp
inc
(bad)
pop
cmp
ficom
inc
lahf
push
mov
inc
pop
cmp
mov
pop
pop
jecxz
dec
nop
dec
mov
mov
or
jle
in
cli
aam
das
lods
popa
jo
fwait
pushf
adc
pop
mov
mov
mov
lods
sbb
js
jmp
bound
(bad)
pop
popf
and
fimul
dec
jg
fisubr
xchg
jl
addr16
popa
retf
push
xor
or
sbb
cmp
or
sbb
pushf
mov
dec
cwde
xor
sub
lods
pop
mov
fwait
xchg
outs
push
fisttp
es
cwde
xor
ficomp
int
sbb
(bad)
push
ins
retf
dec
mov
inc
xlat
cmp
pushf
arpl
cmp
mov
arpl
rcr
pop
inc
or
int3
mov
xor
int3
loope
aad
or
das
(bad)
mov
push
fwait
test
popa
inc
mov
pop
pop
call
jecxz
test
mov
popa
sbb
sbb
dec
test
cmps
pop
jle
mov
ror
pop
int3
cmp
loope
add
stos
mov
mov
inc
pop
enter
xchg
sbb
sbb
mov
push
pop
in
dec
cmp
call
cmp
sub
icebp
repz
add
aaa
xlat
cld
add
or
jbe
std
int3
mov
jae
cmc
enter
adc
add
dec
int
lock
mov
dec
jp
call
inc
inc
popf
ffree
fxam
or
(bad)
pop
push
out
ror
or
std
test
xchg
or
repz
je
push
pop
jbe
add
xor
add
stos
sbb
fsubr
in
dec
adc
jnp
xor
add
scas
pop
xchg
rcr
add
nop
mov
movs
sbb
cmp
push
rol
rcr
lods
jmp
cs
leave
xor
jae
(bad)
adc
int3
js
inc
mov
push
setne
imul
lock
add
loop
mov
sbb
add
(bad)
ss
sub
stc
adc
inc
outs
scas
scas
je
retf
jnp
xor
cs
xchg
sub
xor
and
add
xor
or
hlt
push
pop
xchg
add
data16
mov
pop
ds
xlat
jae
int
cwde
int3
lds
inc
mov
sahf
pop
test
fsubr
jb
jbe
dec
test
xor
dec
icebp
mov
add
hlt
push
cmps
mov
addr16
ror
hlt
pop
mov
ins
loop
loope
mov
(bad)
and
sbb
mov
imul
add
sbb
inc
outs
push
loopne
daa
add
add
jne
cmp
jb
mov
rol
mov
push
aad
lds
out
fsubr
add
push
add
enter
daa
and
or
pop
inc
pop
sub
dec
aaa
cmps
dec
inc
movs
or
sub
les
sbb
dec
or
stos
add
jge
add
in
xor
cmp
mov
inc
or
dec
popf
adc
out
scas
mov
(bad)
in
addr16
add
jp
pop
test
and
push
jo
not
dec
mov
in
inc
fcmovb
xchg
mov
xchg
add
in
sub
dec
std
push
loopne
adc
movs
dec
sahf
jecxz
jb
les
sar
inc
push
jmp
icebp
rcr
adc
out
xor
mov
dec
push
shl
cmp
and
push
fld
das
and
cmc
aad
inc
add
sub
adc
sbb
mov
test
jnp
add
lock
mov
push
sub
jle
jnp
or
into
dec
gs
sub
shr
xor
xchg
sub
lds
paddb
cmp
add
or
sahf
and
xlat
jmp
ret
iret
lods
inc
iret
rcr
dec
or
sbb
mov
sub
seto
add
push
dec
aad
mov
fstp
pop
or
out
ins
stos
aaa
jp
les
pop
add
cmp
(bad)
pop
mov
xchg
fs
lods
cdq
jmp
jp
xchg
(bad)
fld
test
es
(bad)
pop
pop
jno
and
js
ja
out
xchg
inc
add
push
fadd
mov
cvtps2pi
and
pop
fimul
cmp
test
jnp
mov
test
push
cmps
mov
sbb
lea
xor
inc
cmps
sysexit
cmps
movs
sub
call
shl
enter
cmp
pop
mov
dec
sbb
dec
gs
mov
pop
push
aas
jl
fcmovu
loopne
mov
push
test
sub
mov
mov
in
mov
and
mov
test
ficomp
lods
mov
dec
(bad)
xor
add
jle
cmp
xor
pushf
push
mov
lock
test
mov
sbb
sub
data16
lock
xlat
jg
jl
int
mov
gs
mov
shl
ror
inc
mov
jp
mov
int3
pop
push
lahf
pop
push
or
gs
mov
into
int3
(bad)
(bad)
pop
mov
fldenv
pop
pop
stc
xor
repnz
add
push
mov
and
xlat
or
jbe
lock
jmp
lock
daa
xchg
repnz
sbb
add
pushf
adc
adc
rcl
int
popa
fbld
xchg
mov
in
mov
fcomp
pop
imul
in
dec
add
fs
jecxz
out
sti
shr
call
ds
repz
adc
cld
mov
sbb
mov
(bad)
arpl
sbb
jmp
mov
sbb
fdiv
fs
lods
add
xchg
imul
mov
sahf
dec
or
pop
pop
mov
cmp
mov
mov
out
sub
dec
mov
or
nop
sbb
mov
dec
cs
mov
and
inc
retf
add
jecxz
mov
in
retf
retf
into
adc
cwde
inc
mov
adc
mov
push
jo
or
pushf
dec
cmp
jo
sar
iret
push
cmp
stos
jnp
(bad)
dec
xor
std
out
mov
sar
mov
xor
rol
and
fmul
std
ficomp
jecxz
fist
cdq
enter
sbb
pop
jg
sub
dec
(bad)
cmp
repnz
inc
pop
mov
ret
jl
pushw
pop
xchg
xchg
xchg
mov
ins
hlt
fdiv
call
jno
or
sti
ins
neg
aad
xchg
dec
cwde
ja
scas
sti
cmp
xor
inc
ja
mov
mov
mov
xchg
jb
arpl
stos
dec
cmp
or
xchg
sbb
mov
cmps
fidivr
fidivr
push
xor
hlt
sbb
adc
jnp
cmp
dec
jmp
adc
mov
mov
scas
xchg
lea
push
fmul
cs
clc
dec
add
or
dec
into
adc
sahf
loopne
jmp
and
xor
call
movs
xor
retf
rcl
stos
xor
and
cld
mov
pop
(bad)
int
es
mov
xor
cwde
xchg
sbb
push
dec
sub
data16
push
jae
neg
sahf
(bad)
pop
jmp
and
push
cmps
fld
loop
add
getsec
cld
sti
adc
xchg
pop
pop
call
retf
xor
inc
je
mov
jge
pop
popf
or
loope
push
xlat
dec
fdivr
inc
mov
jp
mov
mov
mov
sbb
enter
ss
lock
gs
out
inc
mov
jns
addr16
sbb
pop
arpl
adc
out
in
lods
stc
cmp
stc
aam
pop
outs
sub
mov
dec
scas
or
pop
gs
jne
test
ss
in
sbb
ins
jg
inc
jns
mov
pop
inc
jmp
ficom
push
test
pushf
adc
jnp
mov
jl
cmp
arpl
les
xor
push
es
xlat
mov
dec
push
sbb
fadd
push
adc
pop
mov
sub
or
push
fidivr
xchg
aam
jle
xchg
or
xor
pop
call
mov
(bad)
mov
sub
xchg
pop
sub
cs
inc
jg
outs
ror
(bad)
adc
jl
sub
sbb
cwde
and
or
sbb
out
(bad)
aam
out
xlat
or
ins
sub
add
aad
arpl
xchg
fs
adc
xlat
cmp
mov
jecxz
mov
test
pop
jl
hlt
pop
and
fnstsw
mov
xchg
dec
loope
lea
inc
sbb
mov
inc
retf
sbb
jle
mov
xchg
sub
push
mov
or
pop
test
and
sbb
jge
ror
shr
cmp
mov
mov
xchg
(bad)
pop
enter
jmp
mov
repz
imul
mov
mov
lock
fs
bound
arpl
jae
(bad)
cmp
imul
xor
nop
xchg
cdq
sbb
int
mov
mov
cwde
aad
push
push
add
inc
call
xor
xchg
pop
pop
inc
loopne
or
sbb
test
loopne
jmp
outs
xchg
lahf
int3
push
aaa
lea
pop
pushf
dec
icebp
add
mov
pop
add
jmp
rol
cmp
jmp
add
jbe
push
adc
mov
pop
dec
fstp
sbb
inc
js
fiadd
hlt
arpl
nop
mov
(bad)
popf
sbb
pop
mov
mov
jge
lahf
push
mov
xlat
push
call
mov
rcl
lds
daa
dec
test
sbb
xchg
dec
pop
int
mov
jmp
xchg
mov
into
lods
jmp
xchg
pop
sahf
(bad)
arpl
xlat
pop
(bad)
sbb
movs
je
add
and
cmp
mov
sahf
mov
scas
loope
rol
mov
into
test
pop
xchg
jno
fist
mov
mov
pop
inc
dec
cmp
jge
dec
js
xor
pop
idiv
test
jae
stos
int3
and
fisub
dec
mov
stc
adc
mov
int
loop
ins
sbb
push
and
and
inc
rep
in
jbe
mov
arpl
inc
dec
xchg
mov
mov
add
and
rol
and
xchg
scas
mov
aam
sbb
adc
inc
dec
sahf
ss
pop
es
cli
aam
jge
cmp
(bad)
and
cmp
mov
ins
cmps
sbb
cwde
pop
call
test
xor
mov
jge
xchg
retf
inc
les
into
cmps
sbb
add
pop
test
mov
cmc
add
stos
lds
mov
fdiv
xchg
fmul
popa
ret
pusha
pop
push
cmc
cmp
mov
mov
movs
sbb
xchg
call
push
jg
xor
ins
add
stc
(bad)
jmp
lods
sub
popa
xor
inc
daa
test
mov
sahf
int3
dec
xchg
mov
sti
(bad)
cmc
add
hlt
mov
imul
jns
mov
lahf
arpl
mov
adc
add
or
not
lock
inc
cld
ins
fidivr
cmp
push
add
pop
clc
pop
push
cmps
mov
les
inc
gs
mov
inc
inc
dec
out
push
mov
std
jmp
pop
cli
xchg
pushf
xor
(bad)
iret
fadd
pop
and
mov
pop
lods
push
push
loop
add
shl
jnp
fwait
cwde
push
dec
fldenv
imul
ins
jbe
cs
lock
adc
hlt
lods
xchg
xchg
lea
adc
ficom
cs
and
dec
cld
xchg
ds
xchg
cmp
adc
ins
jg
scas
(bad)
cwde
xchg
and
pop
test
xchg
jge
dec
fisub
mov
push
cmp
ror
sar
lahf
stos
dec
xor
test
xor
mov
mov
(bad)
push
sub
stos
mov
sub
into
cs
mov
inc
jbe
ss
fld
and
xor
jne
stos
cmp
jmpw
jmp
mov
loopne
out
sar
pop
adc
repnz
fnstenv
push
inc
ins
mul
fnsave
int3
mov
adc
xchg
es
mov
out
sbb
and
in
cdq
lods
xchg
enter
es
mov
cmp
push
adc
fs
push
pop
shl
jecxz
daa
ins
pop
push
push
(bad)
sub
std
pop
es
mov
jne
std
cwde
fidivr
xchg
pop
ss
inc
fistp
mov
adc
out
xlat
adc
(bad)
pop
push
neg
adc
ins
add
pop
repz
mov
adc
cwde
pop
jp
pushf
and
push
mov
cmc
mov
jae
pop
lods
dec
hlt
mov
mov
xchg
adc
adc
imul
push
(bad)
lea
test
dec
das
lds
int3
mov
pusha
cmp
fisttp
xlat
out
dec
(bad)
stos
mov
fdiv
lods
xchg
mov
in
cld
in
inc
out
fnstenv
inc
jne
ins
jge
or
aam
add
jmp
fs
xor
mov
push
pushf
fdivrp
inc
sub
push
popf
jo
or
je
xor
in
ret
sbb
mov
push
push
retf
not
not
mov
add
mov
add
pop
stos
jmp
nop
mov
dec
mov
test
lea
sub
scas
adc
ins
xor
add
(bad)
and
rcl
xchg
pop
fstp
jno
pop
int3
push
xchg
sbb
mov
icebp
dec
pop
mov
addr16
into
and
idiv
gs
(bad)
shl
sbb
mov
xchg
sbb
add
pop
jle
mov
dec
mov
cmps
outs
jae
cld
jmp
repz
out
dec
loopne
adc
hlt
scas
mov
pop
ret
mov
lea
call
popa
test
sahf
push
jns
mov
fisttp
jp
jmp
cmps
or
xchg
add
out
add
add
jmp
stos
adc
mov
inc
mov
gs
nop
add
cli
in
aaa
add
and
ins
cmps
jo
mov
scas
sar
inc
ret
inc
and
mov
cmp
add
out
add
arpl
mov
sbb
imul
mov
imul
and
fcom
clc
cmc
push
push
popf
pop
es
fs
lea
dec
enter
xor
lods
push
popf
stc
out
sub
lea
pop
fsub
in
aad
paddw
xchg
mov
xchg
lods
mov
pop
mov
cdq
loopne
push
iret
cmp
ds
pop
std
jge
neg
jmp
dec
and
xlat
or
(bad)
adc
push
cwde
push
dec
mov
idiv
xor
lock
push
cs
aad
inc
retf
pop
mov
mov
pop
fsub
enter
add
(bad)
cmp
stc
jb
sub
je
cld
aad
pop
inc
xlat
lods
sbb
lea
mov
sub
hlt
aas
push
sub
daa
sbb
loope
loop
shr
jmp
cmp
mov
(bad)
pop
push
xchg
popa
cmp
mov
xchg
xchg
xor
rcr
push
scas
dec
fldcw
cdq
into
push
and
ret
push
xlat
cmp
jle
mov
inc
cmp
sub
mov
outs
inc
retf
mov
fiadd
push
xchg
arpl
test
xor
inc
addr16
loope
movs
ficom
rol
and
cld
pop
xchg
jmp
pop
pop
jmp
loopne
stc
cmp
scas
call
ins
enter
adc
xchg
(bad)
jmp
mov
inc
inc
fwait
loopne
xlat
push
or
jmp
sbb
arpl
fsub
ins
mov
jmp
inc
mov
jnp
jmp
push
stos
push
loop
fdiv
fwait
push
mov
(bad)
dec
mov
cmps
xchg
mov
adc
(bad)
ret
or
stos
pushf
pop
push
iret
ins
sub
fnstsw
movs
(bad)
cmp
dec
sar
xchg
lock
ret
jae
shl
ja
imul
inc
xlat
add
push
in
xchg
inc
addr16
xor
mov
movs
test
lods
xchg
push
and
sbb
(bad)
sub
clc
call
in
fstp
push
pusha
aaa
stos
sub
aad
(bad)
cmp
cmp
inc
out
aas
cmp
arpl
das
in
inc
mov
adc
add
push
imul
mov
(bad)
jnp
adc
pop
xlat
pop
jle
sub
js
jmp
pushf
dec
jno
pop
add
test
mov
popf
data16
test
sti
dec
lahf
imul
mov
and
fwait
aaa
push
bound
sbb
movs
jmp
(bad)
push
shl
push
cmp
sub
in
sbb
pop
mov
add
enter
ins
pop
push
fs
inc
fist
(bad)
call
xchg
ror
out
and
adc
push
sub
jmp
inc
loop
pushf
fs
inc
pop
mov
fstp
or
rcl
or
add
cmp
ret
inc
cwde
xchg
dec
sbb
lock
aaa
call
xchg
loop
or
lds
push
and
push
mov
inc
cdq
cli
sbb
mov
dec
shl
dec
(bad)
xchg
(bad)
and
arpl
mov
lods
imul
pop
push
dec
cmp
outs
sbb
jae
add
adc
loopne
int3
repnz
rcl
xchg
mov
adc
dec
loopne
jmp
and
pop
mov
adc
fidivr
out
xchg
(bad)
inc
jae
inc
data16
sbb
sbb
dec
push
push
mov
inc
and
fisub
les
pushf
repz
mov
push
(bad)
pop
sbb
cs
or
and
cmp
popa
loopne
or
mov
add
(bad)
retf
xchg
les
adc
jle
add
out
xchg
test
add
sbb
sbb
jle
and
shl
fdiv
pop
mov
ret
sub
dec
and
les
neg
ficomp
cmp
loopne
pop
sbb
mov
dec
dec
push
xchg
sub
or
ja
retf
out
out
lods
std
ja
fnsave
cmp
in
inc
add
out
jp
(bad)
push
push
push
xor
jmp
fsub
push
rcl
dec
and
jge
sub
fimul
test
pop
or
in
or
cld
icebp
(bad)
or
jp
test
xchg
repz
lahf
sbb
in
mov
fisubr
push
push
or
jle
lods
cmps
push
addr16
outs
jecxz
addr16
mov
sub
cmp
push
push
movs
pop
mov
cwde
in
inc
daa
sbb
and
mov
mov
retf
jae
xchg
mov
cmps
sahf
pushf
jmp
xchg
mov
pop
ficomp
pop
loopne
repz
mov
xchg
push
nop
or
dec
push
dec
movs
inc
daa
(bad)
enter
sbb
repnz
sub
push
out
das
aad
jmp
pop
lods
loope
fimul
imul
loop
and
or
cmc
(bad)
div
xor
fidiv
push
fiadd
rcl
outs
cmp
int3
pop
push
dec
lds
(bad)
rol
shl
lahf
out
inc
and
imul
sar
(bad)
fwait
pop
xchg
sti
mov
pop
push
and
inc
adc
push
and
ror
into
sbb
xchg
and
push
call
jecxz
fwait
aam
mov
test
sbb
daa
dec
xor
bound
bound
(bad)
loopne
mov
int3
pop
out
loopne
pusha
test
cs
and
and
or
xor
test
int3
push
dec
sar
pop
pop
(bad)
sti
pop
fsub
arpl
sub
scas
ja
fcmovbe
daa
rcl
xor
lock
fnop
pop
cmc
jnp
fst
repnz
mov
dec
xchg
inc
cmp
xchg
mov
dec
(bad)
xor
aad
mov
pop
dec
dec
ja
sbb
shl
add
mov
loopne
in
inc
push
sub
retf
push
cmp
stc
dec
mov
add
loope
in
adc
and
js
out
push
sub
fidivr
dec
xor
push
adc
and
xchg
add
ja
push
adc
inc
inc
dec
xchg
jg
rol
lods
imul
icebp
mov
mov
mov
dec
mov
mov
loopne
loopne
jp
xchg
out
or
or
add
xchg
mov
push
div
dec
js
jle
xor
jmp
add
jp
sbb
(bad)
xchg
push
sahf
and
sar
sub
leave
pop
fs
push
pushf
inc
and
fidiv
jo
add
pop
je
fidivr
out
ret
jne
cmp
inc
and
mov
pop
xchg
cs
cdq
mov
sti
aad
push
scas
push
dec
enter
dec
cmp
cmova
out
xlat
push
out
leave
movs
sub
mov
dec
or
cmp
imul
mov
add
mov
daa
dec
icebp
push
ins
mov
add
push
jbe
xchg
inc
adc
stos
dec
pop
sbb
scas
mov
cmps
mov
pop
sar
cmp
pusha
data16
dec
jp
out
xor
pop
faddp
neg
fadd
jle
dec
mul
mov
jae
cmp
stc
push
rcl
out
mov
neg
retf
push
dec
jo
dec
popf
xchg
cmp
inc
popf
dec
arpl
xchg
loope
test
rcl
inc
cs
mov
inc
sbb
mov
call
mov
and
ins
fisubr
cld
lods
mov
sub
xchg
xchg
xchg
rcl
mov
lahf
cmp
add
pop
dec
add
dec
cld
xchg
(bad)
add
mov
pop
or
arpl
fldcw
or
mov
push
fwait
jnp
ja
aad
test
dec
or
(bad)
inc
fcom
lods
xor
rol
sar
repnz
fiadd
jnp
mov
lock
(bad)
stos
jmp
push
add
mov
out
arpl
add
sub
repz
inc
xchg
inc
sub
sub
sbb
sbb
dec
data16
add
in
std
dec
jmp
mov
inc
and
ret
xor
push
imul
or
push
stos
sbb
retf
scas
pop
scas
push
sub
mov
push
jo
dec
jl
xchg
inc
(bad)
(bad)
into
outs
hlt
mov
dec
shl
adc
outs
mov
adc
xchg
arpl
add
ja
arpl
pop
sub
pop
ja
dec
pusha
push
sub
mov
stc
cmc
(bad)
std
jae
sub
cmps
add
xchg
ins
xor
scas
mov
bound
jmp
sub
stos
dec
retf
mov
stos
adc
nop
inc
fcmovnu
ja
xchg
fistp
and
jge
sub
dec
pop
mov
lahf
inc
lock
(bad)
push
ins
xchg
xor
dec
or
fadd
inc
pop
mov
lds
mov
jl
setbe
cwde
(bad)
cmp
fucomp
sbb
cmps
push
adc
ins
fist
(bad)
mov
mov
push
repz
popf
outs
(bad)
retf
mov
mov
aam
repnz
pop
sub
mul
push
xor
mov
xlat
cmp
sub
jg
inc
sbb
fisubr
jge
loope
or
adc
js
movaps
aaa
xlat
pop
popf
out
mov
mov
lea
les
(bad)
cmps
and
inc
xchg
sub
sub
icebp
xchg
pop
inc
stos
ss
and
mov
cmp
rol
inc
stos
cli
mov
in
ins
test
es
mov
pop
pop
lahf
inc
mov
int3
jo
inc
jmp
mov
sbb
dec
pop
cs
adc
dec
mov
out
icebp
xchg
and
retf
test
ins
icebp
add
clc
aam
(bad)
in
pop
mov
ret
push
sbb
retf
clc
dec
pop
nop
push
into
sti
(bad)
fimul
mov
pop
cmp
(bad)
dec
pop
imul
dec
arpl
test
and
sbb
stos
aam
push
ret
fmul
fisttp
pop
or
daa
sbb
test
and
xor
jo
sub
repz
repnz
adc
pop
cmp
addr16
sbb
mov
dec
dec
outs
or
xchg
sub
xlat
(bad)
sub
pop
sbb
xor
dec
(bad)
in
mov
das
push
dec
cmp
xor
test
pop
xor
leave
jb
test
lods
push
or
xchg
xrelease
adc
lock
xor
movq
and
push
popf
dec
and
inc
push
sbb
dec
pop
sub
mov
or
js
(bad)
jp
mov
lahf
mov
jge
test
daa
mov
gs
std
lods
cmp
or
or
jno
push
pop
dec
fimul
std
or
sub
push
and
fwait
loopne
sbb
push
mov
dec
fadd
test
sahf
cmps
sub
pusha
inc
loope
jmp
add
mov
sub
cmp
push
mov
push
sbb
dec
stos
mov
in
jns
data16
imul
add
pop
jno
jg
stos
sahf
mov
mov
push
xchg
daa
push
pop
xchg
ins
outs
sbb
in
jne
cmp
add
fimul
xchg
sar
push
inc
dec
xor
cmp
pop
into
pop
lods
add
push
lahf
mov
adc
push
jns
push
pop
(bad)
fimul
into
pushf
mov
mov
dec
xor
inc
nop
in
add
je
mov
push
std
shr
mov
in
das
loopne
cwde
adc
cwde
mov
pushf
repnz
call
push
sti
fsub
jl
sub
fild
dec
mov
enter
popf
lahf
push
jmp
or
nop
mov
sbb
xor
xlat
ss
mov
sti
pop
xor
inc
ins
mov
(bad)
mov
jno
dec
clc
gs
stos
and
lods
push
pop
mov
push
pop
cmp
jle
aam
lock
add
test
push
(bad)
mul
(bad)
ror
aad
popf
sub
iret
mov
call
bound
inc
cmps
ds
fwait
mov
xchg
and
or
xchg
sbb
jmp
pop
or
pop
pop
jmp
loopne
mov
sub
inc
das
pop
cmp
iret
xchg
arpl
sbb
add
add
cmp
ret
or
fst
(bad)
loop
mov
xor
std
add
out
pop
popf
jge
arpl
xor
enter
rcl
fstp
and
dec
push
xor
mov
jmp
sub
aad
sub
imul
ret
call
mov
(bad)
pop
test
mov
or
mov
mov
(bad)
sub
psrlw
out
daa
int3
fisub
pop
pop
sbb
push
cmps
mov
push
mov
mov
xor
ds
loope
cdq
jp
and
pop
or
inc
pusha
retf
push
daa
mov
mov
in
add
and
xchg
jmp
aam
out
mov
out
push
jbe
mov
mov
outs
ret
and
shl
pushf
mov
mov
pop
sbb
cwde
xchg
pop
fld
mov
scas
rcr
cmp
jnp
mov
xor
jae
lea
sbb
pop
lea
jl
or
sbb
jbe
(bad)
shl
mov
fild
dec
push
addr16
cdq
mov
pop
popf
inc
in
mov
lock
mov
cli
jo
popa
push
pop
(bad)
push
xchg
cmc
gs
pop
and
cmp
dec
int
push
std
fimul
movs
aam
jge
in
pushf
mov
mov
in
in
jne
xchg
bound
add
mov
cmc
jl
jno
adc
xor
inc
or
pop
clc
push
sar
push
mov
mov
loope
ror
ins
mov
out
stc
sbb
jb
pop
inc
or
mov
lahf
adc
test
cmp
les
dec
(bad)
xor
mov
mov
or
mov
leave
mov
xchg
push
and
cmp
out
or
in
sub
adc
lea
fnstenv
int3
mov
fdiv
pop
jmp
cmps
sbb
data16
or
enter
pop
xor
mov
dec
in
mov
push
mov
mov
xchg
cmp
cdq
fimul
mul
cwde
test
mov
push
pop
push
sbb
je
test
mov
sub
dec
adc
stos
ret
add
int3
cs
loope
dec
cs
and
pop
or
dec
push
ror
xchg
pop
call
icebp
call
pop
dec
dec
dec
cmp
push
sbb
cmc
outs
inc
arpl
mov
pop
paddusb
pop
jns
add
push
mov
les
leave
mov
jae
nop
stos
mov
rcr
out
fmul
lods
idiv
std
push
lahf
dec
and
loopne
cs
xchg
xchg
into
mov
mov
cmp
xor
cmp
mov
sti
add
xor
call
and
pop
push
xchg
cs
pop
pop
jmp
jmp
out
pop
hlt
cmps
idiv
(bad)
push
shl
call
cwde
jl
movs
rcl
push
fsubr
nop
inc
lods
sub
enter
xchg
cdq
mov
js
xchg
jae
in
icebp
jmp
and
mov
jnp
(bad)
xchg
or
repz
gs
sub
imul
pop
mov
mov
sub
cs
jg
dec
mov
sahf
test
sub
ret
fidiv
jb
ja
push
and
mov
mov
cwde
into
mov
in
outs
mov
push
jo
push
sbb
shl
rcr
adc
int
xor
pop
and
add
scas
and
ror
and
xor
and
outs
fst
push
push
fcmovu
into
int
sub
enter
sub
inc
aam
add
or
out
and
ins
js
mov
jnp
xlat
jl
push
mov
es
(bad)
nop
imul
mov
xlat
rcl
mov
jg
and
ins
(bad)
icebp
sub
(bad)
and
ret
in
xor
movs
add
stos
sub
lods
mov
push
or
pop
repnz
stc
and
(bad)
jge
xlat
push
mov
nop
lea
loope
jmp
inc
ret
jb
int3
test
in
imul
scas
jge
sub
sub
adc
mov
cmp
popa
sar
out
inc
dec
stc
push
aad
cmp
shl
int3
push
cmp
out
stos
scas
mov
push
mov
enter
fisub
rcl
aad
adc
push
jge
fistp
lea
retf
pushw
inc
fst
sbb
push
daa
push
icebp
aad
dec
fwait
push
rcl
and
push
jg
nop
jnp
inc
ficom
mul
in
in
sub
out
pop
push
xchg
daa
je
pop
sub
icebp
mov
push
hlt
rcr
pushf
daa
xchg
jp
(bad)
cdq
cmp
pop
pop
imul
ins
mov
add
outs
pop
xor
or
in
xor
aam
dec
pop
add
imul
jnp
sbb
xchg
mov
leave
cmp
jne
mov
push
pushf
mov
mov
and
push
inc
iret
dec
pop
add
inc
popf
jmp
mov
sbb
jle
lods
js
jmp
sbb
stc
mov
and
test
and
dec
sub
or
pop
lock
cmp
out
adc
dec
popf
out
test
cld
xor
sahf
cs
ins
lds
pop
ret
push
push
fimul
fs
jb
out
jnp
push
ret
popf
or
mul
inc
addr16
daa
call
not
add
cmp
cld
fsub
sbb
pop
addr16
arpl
pop
jnp
(bad)
lods
inc
dec
jmp
adc
xchg
jae
cs
mov
mov
cmp
pop
inc
out
sti
dec
bound
dec
jge
outs
mov
mov
xchg
repnz
mov
cmp
loop
test
mov
(bad)
pop
pop
rcl
dec
dec
jge
clc
and
bnd
fucom
dec
xor
fstp
xchg
jmp
int3
(bad)
pop
add
sbb
sbb
ror
loopne
ror
mov
add
dec
mov
test
ss
dec
hlt
push
sti
in
inc
fadd
scas
push
aam
(bad)
adc
into
cmps
xchg
xchg
mov
cdq
add
aaa
mul
sar
out
daa
out
dec
hlt
sbb
cmp
lods
push
xor
dec
cdq
push
xlat
aad
pop
sbb
cmps
cmp
adc
xchg
jp
out
pop
dec
pop
push
out
out
pop
pop
in
inc
push
outs
jle
out
ins
push
xchg
add
imul
in
fiadd
jp
add
xchg
mov
mov
mov
iret
fisttp
xor
xchg
out
enter
into
xlat
add
xor
mov
(bad)
xlat
in
cmp
jmp
mov
mov
push
cmp
stos
test
inc
mov
xlat
push
lock
test
test
fwait
or
(bad)
data16
imul
push
dec
push
mov
clc
pop
(bad)
sbb
in
arpl
mov
lea
es
xchg
pop
jae
adc
(bad)
call
bswap
stc
pusha
add
loop
dec
sbb
mov
int
cmc
mov
dec
and
xchg
mov
(bad)
mov
cmp
aad
jmp
pop
daa
mov
out
clc
int3
mov
cdq
shl
and
push
popa
push
jmp
mov
sbb
or
jecxz
stc
and
adc
shl
xchg
mov
fst
mov
inc
cwde
inc
jnp
imul
fnstcw
int3
into
dec
push
dec
hlt
or
lahf
push
mov
or
mov
xor
cmp
imul
ss
dec
xchg
movs
loop
jmp
sbb
mov
repnz
(bad)
gs
ret
mov
add
popa
pop
cmp
scas
scas
xchg
ds
push
adc
add
mov
dec
daa
xchg
dec
adc
pop
mov
xlat
pop
pop
cmp
pop
ret
clc
pop
cmp
dec
and
pop
or
xor
dec
push
aad
inc
or
lahf
fdivr
sar
mov
(bad)
sub
cli
dec
dec
xchg
sbb
adc
es
lds
cmp
fidiv
jno
cwde
mov
dec
call
ds
ins
(bad)
scas
inc
adc
adc
rcl
test
cmp
loop
fadd
xchg
test
mov
pushf
xlat
test
mov
lea
mov
and
mov
(bad)
fist
push
call
ins
std
mov
jge
adc
cld
cmp
shl
lods
mov
ret
mov
(bad)
adc
cwde
jo
pop
mov
dec
imul
fdiv
shr
das
mov
mul
lock
lods
ds
mov
jae
push
sub
je
mov
sti
or
cwde
pop
mov
add
inc
imul
sbb
mov
call
pop
les
xor
lea
sub
ins
sbb
and
stos
cmp
enter
jmp
push
xor
fwait
lods
ss
mov
retf
jmp
pop
dec
rcr
cdq
icebp
rol
add
xlat
jmp
pop
addr16
in
out
xor
or
mov
ins
int3
push
push
rol
ss
push
inc
xlat
pop
hlt
mov
sub
dec
arpl
mov
mov
push
mov
and
pop
cmp
scas
scas
cs
out
pop
jp
shl
mov
xchg
in
xchg
mov
cli
pop
cmps
fsubrp
mov
pop
ss
jns
xchg
pop
xchg
out
out
xchg
nop
and
or
lea
inc
dec
daa
fld
and
in
ins
jle
add
dec
or
js
mov
cmp
and
cld
nop
test
cs
jno
cmp
push
loopne
aaa
xlat
add
popf
lods
shl
cdq
loopne
idiv
(bad)
(bad)
xor
lods
popa
mov
or
aad
inc
or
sbb
dec
add
dec
fisub
fnstcw
mov
pop
es
neg
mov
inc
popf
pop
xchg
fs
fistp
mov
setbe
loopne
pop
dec
jnp
pop
cmps
mov
inc
add
aas
mov
pop
call
scas
pushf
inc
(bad)
jmp
cs
cli
inc
mov
jg
or
dec
mov
test
mov
loope
mov
rcr
jg
stos
xchg
cdq
iret
xchg
jo
popa
cmp
cmp
sub
mov
mov
ds
es
add
push
xchg
cmp
or
test
xor
push
mov
or
pop
pop
int3
loopne
pusha
sbb
(bad)
push
push
rol
into
cmps
sub
nop
jle
push
jp
sbb
pop
fistp
xor
mov
(bad)
cmc
fcomp
xor
addr16
or
jl
or
(bad)
(bad)
popa
or
test
ds
jae
sub
xchg
in
push
into
sub
dec
jns
dec
sahf
fsub
mov
hlt
xor
push
xlat
mov
cmc
imul
aad
sar
mov
(bad)
push
and
jae
adc
mov
mov
sahf
popf
es
adc
xchg
sti
jns
in
dec
sahf
mov
mov
xor
lds
sub
cli
ss
out
mov
fimul
fdiv
int
jg
jmp
xor
jecxz
pop
icebp
or
dec
add
mov
jmp
adc
sub
dec
dec
pop
xchg
push
inc
(bad)
je
pusha
cmp
jns
xchg
ret
sub
ror
cld
dec
adc
push
adc
mov
inc
mov
push
xchg
xchg
fadd
cmp
cmps
repz
ds
mov
jae
cs
inc
arpl
dec
fnsave
(bad)
jnp
movs
sub
add
mov
das
(bad)
jp
sbb
imul
or
xchg
fidiv
sub
mov
dec
mov
(bad)
(bad)
lods
movs
jmp
cmp
stos
xchg
test
scas
pop
call
stc
cs
fidiv
js
sbb
call
scas
loopne
mov
sub
cs
stos
neg
(bad)
push
shl
in
dec
jmp
pop
(bad)
arpl
inc
fs
inc
fld
jp
jg
int3
mov
ins
stos
les
sub
adc
xchg
(bad)
in
or
hlt
inc
xchg
pop
inc
ins
push
push
ror
(bad)
(bad)
push
mov
sbb
outs
fild
xor
int
jmp
fimul
add
popa
sti
cmp
es
jne
sbb
es
(bad)
and
repz
add
jmp
dec
xchg
test
(bad)
ret
adc
mov
mov
mov
cmp
cmc
mov
or
mov
dec
(bad)
xor
dec
mov
pop
aaa
ret
dec
pop
mov
scas
lock
repz
jp
xchg
lock
sub
imul
arpl
(bad)
push
sub
call
xlat
aad
mov
div
sbb
sahf
cmp
sub
(bad)
xchg
cmc
or
pop
push
call
mov
lock
pop
add
mov
push
mov
and
sub
jno
(bad)
add
int3
sti
or
sub
dec
popa
retf
adc
fsqrt
pop
lahf
addr16
dec
add
aas
and
in
mov
mov
xchg
dec
jg
lods
shl
mov
xchg
iret
mov
jns
sbb
aas
xchg
pop
jmp
test
aad
ror
adc
cld
inc
gs
xlat
test
popa
in
or
and
das
dec
fadd
xchg
mov
push
jo
outs
pop
push
inc
mov
xchg
inc
nop
sbb
mov
into
dec
push
(bad)
enter
sar
outs
sbb
retf
xchg
test
adc
arpl
sub
(bad)
ffreep
cmp
call
push
jmp
addr16
cmp
(bad)
call
fcomip
pop
sub
inc
ret
add
xchg
add
jl
jmp
call
fwait
cwde
les
xor
(bad)
ins
shr
aad
ja
cli
(bad)
outs
(bad)
(bad)
push
push
stos
mov
mov
add
sbb
dec
mov
cmp
or
jae
mov
dec
cmp
jne
pop
xor
mov
fwait
cmp
sbb
push
inc
retf
pop
test
mov
test
fwait
shr
je
push
pop
sbb
aad
xlat
push
lock
fisttp
(bad)
ds
jl
sub
dec
xchg
fidivr
push
xlat
addr16
(bad)
sub
sahf
imul
cmp
xor
jmp
sahf
and
and
fnop
jnp
pop
push
sbb
mov
stc
cmp
jno
fcom
jb
lea
addr16
xchg
push
cld
cmps
dec
mov
push
mov
xor
dec
jb
aaa
fidivr
mov
cwde
add
aad
retf
sub
xchg
add
inc
inc
es
xlat
arpl
push
loop
imul
xlat
inc
cmp
retf
hlt
neg
cli
cmp
jp
mov
add
fmul
and
and
jmp
(bad)
jp
int
mov
and
cmc
addr16
shr
dec
jnp
movs
dec
shl
pop
jmp
scas
mov
lods
outs
mov
pop
dec
imul
xlat
ins
mov
in
xchg
inc
sahf
inc
mov
add
test
sub
loop
or
stos
(bad)
in
xchg
pusha
mov
test
leave
fild
xchg
xchg
movs
add
xchg
arpl
push
push
xchg
jae
push
cli
fmul
aam
loopne
lods
sub
push
sub
mov
loopne
jb
fbld
fistp
lds
pop
lods
mov
jg
enter
add
push
lods
fwait
imul
or
cmc
ins
pop
test
ja
dec
cmp
aas
inc
pop
push
cdq
out
pop
fld
sbb
and
lods
(bad)
mov
cmp
sbb
jge
dec
pop
sub
cdq
or
aam
sbb
xchg
sbb
jae
int3
push
push
outs
sbb
aam
sbb
xchg
clc
jp
push
retf
aaa
sub
pop
cmp
mov
or
hlt
inc
mov
stc
xchg
repnz
inc
icebp
cmp
pop
lea
in
jecxz
sbb
(bad)
(bad)
cmp
mov
(bad)
clc
iret
stos
push
les
mov
(bad)
enter
clc
xor
sbb
xchg
imul
xor
inc
and
stos
(bad)
not
icebp
adc
es
adc
iret
sub
pop
inc
fistp
fucom
mov
mov
or
into
jmp
hlt
aaa
sar
repz
ins
icebp
scas
imul
mov
pop
neg
mov
ret
mov
push
pop
push
jns
dec
sbb
shl
jnp
mov
push
lea
mov
pop
sbb
fwait
in
fiadd
out
imul
or
addr16
fisub
add
jmp
push
ss
lock
add
pop
and
(bad)
aam
mov
jp
mov
and
xlat
jg
pop
fstp
push
push
xchg
mov
out
enter
add
shl
retf
mov
les
fs
jmp
outs
mov
ror
in
pop
out
dec
xchg
ins
jle
(bad)
sar
mov
ror
mov
push
and
dec
adc
cmp
jo
(bad)
js
in
daa
(bad)
pusha
bnd
fbld
add
cmps
jno
and
movs
in
pop
push
cmovle
and
imul
neg
mov
aam
shr
pop
jne
aam
push
or
ja
mov
dec
mov
imul
ret
sub
popa
repnz
mul
daa
(bad)
and
sbb
mov
in
and
aad
loop
test
cld
nop
shl
popf
fnsave
xlat
les
sub
lock
xchg
and
dec
cmp
cmp
fild
or
mov
inc
daa
xor
pop
inc
movs
jno
jge
stc
cmps
dec
mov
mov
loopne
lea
jp
ror
pop
mov
in
(bad)
sbb
xchg
push
retf
fstp
dec
mov
ins
adc
dec
sbb
adc
ds
lea
push
inc
js
mov
out
jno
cdq
out
xchg
int
pushf
sub
push
pushf
js
movs
sbb
outs
mov
ja
aaa
sub
fstp
mov
in
ins
or
int
dec
jg
test
dec
jle
(bad)
pop
cdq
and
es
data16
dec
(bad)
push
xchg
(bad)
xor
inc
xchg
lea
cmp
stc
loop
mov
cmp
loope
dec
mov
lahf
mov
mov
xor
inc
(bad)
dec
addr16
dec
shl
loope
loope
ja
mov
imul
push
mov
adc
div
icebp
jns
jns
adc
lods
mov
xchg
neg
xlat
or
cmc
popa
aam
nop
in
mov
mov
push
mov
xchg
xor
neg
in
cmp
pop
popa
mov
fcomp
sub
(bad)
and
dec
pop
stc
mov
sbb
xor
pushf
push
dec
jmp
pusha
and
adc
rcr
in
jmp
daa
shl
dec
pop
in
xchg
mov
xchg
inc
add
(bad)
dec
sbb
popf
inc
mov
lods
sub
mov
sub
lds
outs
add
or
adc
test
pop
dec
enter
push
ja
sub
(bad)
xchg
aam
pushf
push
pop
ins
jae
and
(bad)
xor
(bad)
popf
enter
lods
clc
pushf
pop
jl
jbe
ror
mov
rcr
aaa
(bad)
(bad)
int
dec
xor
inc
ror
div
jb
loope
jae
push
bound
push
push
jmp
jbe
les
inc
mov
inc
and
and
dec
mov
cmp
fld
jno
dec
dec
loopne
test
mov
push
pop
mov
push
jmp
adc
mov
dec
test
xchg
push
retf
bound
aad
and
fsubr
loop
fucom
or
mov
sti
in
xchg
mov
cwde
ret
cmps
fwait
and
mov
mov
fs
loope
mov
xchg
popf
sub
mov
cmp
mov
(bad)
or
jae
std
mov
push
add
and
adc
or
sub
mov
push
(bad)
movs
cmp
mov
ins
mov
cwde
lahf
sub
pop
xlat
adc
or
hlt
(bad)
or
sbb
mov
ffree
push
aaa
sub
enter
outs
or
dec
int
les
mov
(bad)
cmp
sbb
int
sahf
mov
mov
movs
stc
add
inc
and
sbb
mov
mov
arpl
mov
gs
pop
sar
lea
add
add
clc
test
or
out
lea
mov
sub
inc
icebp
dec
bnd
sbb
jle
cmp
lods
std
push
fbld
mov
inc
add
mov
sub
daa
rcr
lods
adc
sub
cmp
mov
shl
cld
pop
sbb
and
or
jns
xlat
lahf
call
mov
add
sub
xor
cmp
jbe
(bad)
pop
fnstenv
inc
push
movs
inc
ret
jmp
(bad)
push
xchg
inc
repnz
test
fnstenv
daa
fnstcw
mov
(bad)
fmulp
push
mov
loop
aaa
cld
fcom
imul
retf
pop
das
mov
mov
mov
dec
retf
repnz
sub
xchg
fcom
pop
imul
test
mov
xchg
jae
xor
jmp
(bad)
jl
test
fdiv
or
jl
lock
push
or
sahf
ds
retf
dec
bound
mov
jmp
sbb
xchg
mov
shl
cmp
out
dec
xor
rol
jge
outs
push
mov
mov
add
mov
xchg
or
and
scas
xchg
xchg
mov
jnp
xor
scas
icebp
adc
xchg
ins
push
push
dec
retf
jl
xor
and
and
adc
xor
push
out
adc
mov
inc
not
xor
sub
inc
mov
cmovbe
or
sbb
xchg
inc
cmp
shl
addr16
xor
mov
sbb
mov
test
aam
jle
jmp
out
imul
mov
xchg
push
stos
cmp
aaa
xor
shr
cmp
push
mov
mov
in
mov
mov
test
pop
fcomp
push
stos
or
lods
pop
push
inc
pop
stos
out
pop
sar
xchg
int3
or
fldl2e
add
jp
sti
sbb
mov
and
ficomp
int
outs
fisub
pop
mov
pusha
aaa
xchg
fadd
xor
sbb
ja
fs
sub
jno
xchg
sbb
fwait
xor
mov
imul
lea
jg
mov
xchg
cdq
imul
mov
int
hlt
mov
mov
jne
inc
pop
fucomi
call
je
inc
aas
cmp
mov
or
loopne
mov
bnd
pause
cmps
aaa
imul
out
pop
fucompp
fist
enter
mov
add
push
popa
adc
cs
and
out
adc
ds
pop
or
sar
mov
mov
and
outs
daa
call
sbb
fmul
xlat
cmp
cmp
cld
in
cmp
test
dec
or
add
xor
imul
mov
hlt
sbb
test
call
push
les
inc
sbb
in
popf
pop
cwde
pop
icebp
push
outs
mov
sbb
pop
push
fnstcw
or
mov
push
cmp
stos
test
in
sahf
push
sbb
outs
(bad)
(bad)
push
mov
mov
rcr
test
cld
sbb
jmp
movs
xchg
call
pusha
sar
xchg
push
add
fucomi
xor
adc
ret
xchg
pop
lahf
mov
mov
pop
ret
arpl
jb
call
aaa
int3
test
jge
adc
int
fnstcw
push
and
arpl
xor
rcl
adc
enter
cmp
inc
or
bound
repnz
test
popa
sbb
popa
leave
out
cmp
pop
dec
jno
sub
nop
jbe
(bad)
cwde
jmp
sbb
stc
test
stc
sbb
pushf
pop
popf
sahf
in
xchg
push
sbb
aaa
shl
adc
imul
fiadd
ja
jg
jmp
dec
push
rol
sbb
sub
jne
sub
xchg
(bad)
pop
test
int3
fprem1
sbb
add
dec
xor
leave
movs
cli
mov
in
imul
sbb
jnp
fisub
jnp
mov
pop
sub
adc
push
sub
pop
add
xchg
dec
(bad)
pop
ror
push
jl
rol
xor
call
ins
bound
add
js
mov
pop
push
std
mov
fst
dec
or
xor
cmp
sub
scas
sahf
aam
dec
push
dec
out
pop
stc
hlt
and
adc
cmp
jmp
sbb
call
or
fs
sub
push
add
(bad)
scas
in
das
adc
idiv
jb
xchg
fadd
add
mov
out
push
mov
adc
sub
sbb
push
bound
ret
cmp
aad
scas
sub
cmc
ja
push
ficom
in
push
in
je
int
jne
in
push
shr
fiadd
loopne
hlt
lock
and
or
push
cmp
ror
retf
hlt
test
lock
mov
jno
mov
sti
inc
pop
cmc
cmc
mov
mov
dec
add
imul
ja
ret
popa
in
fcmovnb
mov
xchg
in
and
jb
loop
enter
mov
pop
add
add
pop
jge
pop
sub
pop
add
xor
dec
jb
or
enter
dec
pushf
ret
cdq
xor
adc
iret
leave
mov
fsub
aas
ds
aam
push
mov
mov
(bad)
cmp
jle
fs
adc
pop
fiadd
cmp
or
sbb
popf
or
sbb
lods
jns
retf
dec
inc
out
jae
shl
add
out
xchg
jge
cwde
into
pop
cmps
and
popf
(bad)
fist
nop
mov
pop
cmp
jecxz
lods
cmc
out
xor
jp
addr16
mov
ficomp
sbb
inc
push
push
adc
adc
xchg
les
jb
sub
pop
out
cs
stc
cmp
je
xchg
mov
xchg
mov
jnp
mov
xchg
dec
leave
xchg
shr
out
adc
sbb
jg
daa
fiadd
xchg
in
not
inc
mov
sar
pmuludq
mov
sbb
pop
rcr
jmp
int3
adc
jmp
retf
push
jmp
mov
shl
xchg
sbb
mov
pop
daa
xchg
loopne
mov
and
ds
addr16
xor
mov
aaa
xor
mov
loope
pop
enter
je
out
fdivr
test
xchg
icebp
int
pop
(bad)
xchg
(bad)
pop
les
mov
lods
outs
jp
jno
pusha
fcmove
xchg
retf
outs
push
call
fiadd
in
xor
mov
dec
dec
iret
pop
in
pushf
js
or
test
ds
scas
clc
mov
out
adc
ret
les
fsub
fwait
pop
mov
enter
mov
iret
xchg
fs
inc
nop
inc
shl
in
dec
nop
idiv
ds
push
xor
rcl
add
sub
push
adc
das
or
in
retf
mov
xchg
inc
xchg
pop
jl
std
shl
jb
sub
pop
or
xchg
cdq
movs
xor
push
in
stc
xchg
imul
mov
cdq
jmp
rcl
cdq
jo
int3
pop
std
adc
dec
xchg
jmp
cmps
mov
mov
sub
pop
jbe
stc
(bad)
dec
xor
sbb
lock
retf
pop
jmp
sbb
push
sahf
add
mov
rol
arpl
cs
sub
fadd
(bad)
push
pop
and
aaa
iret
lds
sub
cdq
jmp
push
shl
inc
xchg
scas
sub
mov
loop
mov
mov
cld
cmps
mov
xor
xor
dec
in
mov
mov
not
pop
sub
enter
pushf
lods
push
out
aam
into
cdq
popf
je
xor
dec
rol
push
loop
dec
outs
sub
pmaxub
ss
ret
mov
xor
in
mov
outs
or
leave
ins
test
div
daa
ficom
mov
push
xchg
test
mov
(bad)
fstp
inc
mov
or
in
sub
fisttp
mov
fild
jno
pop
and
mov
hlt
ror
rcl
jge
loop
into
std
neg
hlt
push
or
mov
sbb
mov
lock
mov
xlat
fsub
pop
xor
push
test
mov
ror
dec
mov
nop
(bad)
xlat
imul
repnz
push
ror
daa
test
mov
mov
sbb
enter
pop
jmp
push
add
sub
or
ficomp
ins
popf
mov
sbb
cmp
daa
adc
outs
sahf
mov
mov
dec
pop
imul
test
mov
into
loop
jmp
and
sbb
mov
cli
pop
adc
out
out
push
push
fwait
cmp
push
test
push
aaa
les
in
push
cli
div
loopne
arpl
adc
out
shl
adc
sbb
fwait
mov
stos
repnz
jns
fidiv
cmp
out
xchg
add
test
rol
mov
sti
xchg
cmp
dec
pop
pop
mov
out
push
add
xchg
jecxz
push
mov
ins
scas
out
dec
adc
lea
pop
inc
cmc
test
test
fsubp
ficomp
xchg
xchg
addr16
push
cmp
or
cdq
ret
pop
pop
shl
xchg
loop
pop
sbb
fisttp
and
lar
add
loop
adc
add
add
fstp
cli
stc
inc
cmp
pop
cwde
jns
jp
das
loopne
icebp
push
jmp
pop
dec
repz
fld
rol
mov
mov
jl
dec
sbb
xchg
mov
xchg
add
add
sub
cld
int3
pop
pop
mov
pushf
(bad)
mov
sub
mov
addr16
inc
arpl
imul
mov
loope
mov
adc
mov
out
ja
or
fcmovne
xor
sbb
pop
cmp
xchg
bound
push
mov
mov
jle
inc
pop
and
xor
fsubr
movs
xor
ins
sbb
jo
pop
xchg
sub
dec
fiadd
jg
rcr
mov
add
xlat
or
sub
cs
jns
(bad)
mov
mov
(bad)
xchg
and
inc
pop
psrlq
fcomp
shl
push
mov
add
ss
stc
mov
mov
js
ror
inc
imul
scas
pop
shl
adc
fidiv
mov
mov
pop
loope
out
mov
or
mov
add
and
mov
push
fisub
dec
(bad)
fimul
mov
push
add
mov
out
mov
test
aas
stos
xor
xchg
pushf
sub
add
test
sub
push
mov
push
add
push
mov
xchg
cmp
mov
xor
loopne
dec
in
test
popa
add
sub
rcl
mov
sahf
fisttp
pop
xchg
adc
inc
sub
pop
test
mov
jae
loopne
jle
mov
xlat
or
cs
test
(bad)
xchg
sbb
dec
cdq
mov
push
xor
pop
scas
dec
call
inc
sbb
lock
mov
imul
pop
daa
mov
pusha
fdivr
xchg
sbb
aad
mov
aad
ins
mov
test
fwait
aaa
cmc
or
js
inc
mov
xor
dec
pop
fnsave
pushf
push
cmp
push
pop
push
dec
pop
pop
xor
ror
xchg
div
mov
push
(bad)
nop
dec
lods
(bad)
push
sub
mov
retf
rol
dec
lods
and
iret
xchg
jne
mov
out
mov
adc
adc
or
rcr
mov
sub
shr
(bad)
xor
scas
ss
jl
cmp
es
and
mov
jp
cmp
pop
(bad)
push
pop
jge
jbe
sub
(bad)
js
(bad)
lock
test
out
inc
mov
cmp
dec
push
dec
test
mov
(bad)
xchg
sub
push
ret
mov
mov
rcl
push
dec
fcmovbe
mov
inc
aas
mov
pop
aad
xchg
xchg
mov
or
sbb
mov
ficomp
sbb
cmp
jns
mov
xor
or
pop
mov
add
cmp
imul
and
mov
pop
sahf
adc
retf
mov
les
cmc
popa
lods
mov
and
push
xchg
jns
sahf
retf
stc
ins
mov
mov
lods
aaa
loope
xchg
xor
adc
xor
xchg
ins
ret
rcr
or
ret
xchg
into
stc
and
adc
and
jmp
test
ja
daa
ds
sub
pop
xchg
sbb
jns
dec
sub
push
sub
aam
mov
std
lods
and
imul
cld
int3
sar
int3
jbe
ja
movs
or
push
popf
or
std
call
sar
inc
call
pop
in
push
mov
xor
or
and
cwde
jecxz
xchg
jg
dec
out
inc
xlat
(bad)
sub
or
aam
add
sbb
int
cmp
loopne
or
arpl
pop
in
jg
fadd
mov
sbb
xor
pushf
jecxz
push
into
mov
fild
xchg
scas
jae
push
enter
pop
call
pop
idiv
cdq
cdq
mov
(bad)
loopne
mul
retf
dec
mov
repnz
gs
movs
dec
retf
ja
mov
scas
inc
inc
addr16
sti
jmp
shl
mov
arpl
in
mov
inc
cmps
cmp
pop
(bad)
mov
dec
mov
hlt
mov
push
push
stos
shl
(bad)
xchg
dec
imul
lods
xchg
or
aam
ror
ficom
std
push
cdq
jnp
pop
inc
mov
or
fmulp
push
and
dec
xchg
stc
div
aas
imul
fs
or
sbb
add
xor
and
or
dec
or
mov
gs
lods
sub
idiv
jnp
adc
rol
or
sub
jg
(bad)
aad
cmp
jl
push
push
cli
cmps
sar
mov
xchg
std
clc
sbb
mov
xchg
enter
mov
dec
and
xchg
jb
cmp
stos
bndldx
push
imul
shr
enter
cmp
mov
xlat
cmp
outs
dec
pop
stos
sbb
mov
imul
fnstsw
jp
xlat
xor
(bad)
repnz
jg
scas
mov
stc
mov
jne
sbb
(bad)
fdivr
ffreep
aam
fwait
les
inc
pusha
mov
jge
mov
fiadd
jns
jmp
shr
sbb
xor
in
rcl
popa
sbb
inc
pop
jmp
inc
je
retf
daa
mov
aad
popa
leave
rcr
loopne
mov
adc
dec
jb
pop
ret
hlt
test
mov
pop
into
stos
jge
fisub
sub
loopne
je
das
popf
std
lods
mov
leave
in
ficomp
mov
(bad)
loopne
jne
popa
shl
jle
fstp
out
cli
arpl
repz
into
sahf
bound
in
xchg
sub
cmps
test
test
adc
sahf
xchg
mov
pop
movs
mov
aaa
bound
jo
hlt
xchg
cmp
in
scas
dec
pop
ret
add
(bad)
sub
div
fs
sbb
(bad)
xlat
out
xchg
ret
jmp
adc
dec
jmp
mov
(bad)
test
or
xchg
mov
push
fmul
and
cmp
pop
outs
(bad)
(bad)
fcom
shr
ficomp
ret
mov
sbb
ds
pop
es
cmp
mov
aad
xchg
popa
cmp
(bad)
out
push
fwait
mov
add
pop
add
sbb
mov
inc
sti
pop
test
add
not
and
add
in
xchg
mov
(bad)
in
(bad)
dec
or
lods
(bad)
mov
std
je
jg
mov
les
(bad)
icebp
inc
cld
fadd
aad
outs
mov
cmp
ret
and
xor
(bad)
dec
push
mov
pop
xchg
dec
mov
lods
aaa
jb
xchg
add
pop
in
popa
inc
pushf
out
xor
shl
mov
shl
add
das
xchg
mov
test
das
fs
adc
lock
iret
push
mov
cmp
xchg
xchg
imul
loopne
lods
push
jae
sub
mov
inc
push
mov
stos
add
pop
mov
and
lahf
or
in
inc
cmp
xchg
jmp
adc
or
loope
lea
(bad)
lea
fsub
test
retf
or
cmp
outs
daa
mov
test
mov
xlat
jmp
not
cdq
inc
mov
or
mov
adc
loopne
adc
add
adc
cdq
jnp
jo
or
nop
clc
sar
jno
xchg
jmp
mov
test
(bad)
test
mov
pop
sti
mov
jbe
loop
fldenv
and
pop
fiadd
add
mov
inc
cmp
repnz
mov
pop
lock
add
sbb
shr
ins
and
sub
mov
imul
fs
inc
jmp
cdq
cwde
cdq
sub
add
push
cmp
jbe
mov
xor
or
loop
add
stos
adc
scas
pop
lahf
xchg
loopne
lods
gs
neg
rcl
or
call
call
cmp
sub
aaa
mov
mov
ror
gs
and
cwde
mov
(bad)
je
xlat
jmp
test
shr
cdq
push
jno
mov
jbe
or
(bad)
jmp
call
rcl
gs
pushf
dec
ror
ficom
popa
xchg
push
sbb
stos
gs
mov
ins
push
dec
jno
loop
out
aas
and
mov
mov
sar
mov
adc
add
loope
mov
dec
pop
int
adc
icebp
cmp
fsub
fst
lock
cli
imul
lahf
mov
jo
cmp
in
mov
sbb
xchg
adc
inc
loop
push
iret
data16
push
retf
sbb
inc
lods
mov
fwait
pop
and
or
mov
adc
mov
mov
int3
pop
mov
sub
out
or
sbb
dec
or
fwait
sub
rcl
imul
popf
in
sub
jg
xor
test
loope
sbb
add
scas
or
stos
inc
sahf
pop
pop
pop
xchg
arpl
dec
xchg
and
jle
daa
push
mov
mov
leave
lods
cmp
jns
(bad)
rcr
retf
daa
fnstenv
jo
xchg
dec
fimul
icebp
xchg
dec
ror
loope
cmps
xor
sub
xor
pop
push
mov
and
mov
xchg
iret
ins
pop
adc
jmp
jmp
sbb
loop
mov
jle
mov
out
mov
loopne
jle
in
push
and
mov
hlt
sub
dec
mov
cmc
scas
xchg
push
mov
and
cdq
jecxz
push
mov
hlt
mov
mov
mov
gs
mov
aaa
mov
les
mov
and
jg
push
xchg
jecxz
adc
add
repnz
xor
pop
retf
dec
jmp
mov
daa
inc
mov
imul
dec
pop
sbb
adc
xchg
out
dec
dec
adc
adc
sar
mov
push
out
sub
inc
inc
and
js
shl
adc
or
pop
and
add
push
aam
pusha
loopne
setne
sub
sbb
(bad)
es
push
aad
jae
leave
fiadd
mov
inc
nop
out
ja
sub
(bad)
rol
fsub
push
outs
or
lods
adc
repnz
daa
out
sbb
dec
fadd
push
daa
mov
add
ds
sbb
cmp
cmp
addr16
jns
(bad)
xor
outs
jnp
sub
loopne
js
xor
dec
mov
(bad)
push
ret
int3
in
sbb
shr
int3
(bad)
mov
xchg
sahf
js
sbb
leave
pusha
sbb
inc
sbb
fcom
mov
mov
xchg
ins
jg
jnp
jae
jp
loop
mov
dec
mov
sub
mov
ret
lock
and
inc
test
dec
imul
cmp
inc
mov
xor
mov
or
add
dec
jg
mov
mov
mov
rol
sbb
jae
movs
jnp
pop
xchg
ins
push
or
in
aaa
test
or
mov
out
cmps
and
mov
push
jp
mov
push
imul
adc
es
out
xchg
adc
pop
xchg
jae
jmp
push
cdq
jnp
or
jae
dec
aaa
jno
sub
inc
pushf
pop
or
loope
add
mov
or
test
call
test
dec
movs
push
icebp
mov
pop
push
and
dec
imul
mov
dec
shl
sbb
push
xchg
or
popf
data16
and
out
(bad)
fistp
jp
ins
lahf
scas
pop
add
xchg
in
loope
or
outs
out
nop
mov
repz
or
outs
addr16
mov
cs
mov
(bad)
push
test
neg
mov
adc
jnp
iret
adc
pop
push
mov
push
mov
pop
mov
cmp
iret
call
mov
pop
test
push
push
and
shl
sbb
in
pop
mov
lods
push
fimul
loop
loopne
ret
push
fild
cmp
les
pop
shr
inc
popf
test
mov
or
mov
mov
pushf
fwait
sub
cmp
cli
in
dec
jne
aad
jmp
adc
pushf
das
shl
sub
inc
sbb
jo
mov
xchg
ins
cmp
push
xchg
jno
adc
pop
pop
pop
imul
adc
int3
test
adc
and
add
inc
bound
cmp
jl
cmps
sbb
and
hlt
push
ftst
xchg
lods
daa
inc
icebp
ficom
sbb
test
test
mov
dec
aaa
out
push
mov
jne
push
out
adc
shl
imul
mov
ds
loopne
pop
xor
cmp
rcr
add
add
push
jle
test
ret
loop
mov
inc
jge
lods
(bad)
fmul
js
mov
mov
mov
inc
inc
daa
shl
cld
pop
pop
inc
loopne
sub
mov
adc
imul
mov
mov
dec
cmc
push
jg
mov
je
or
ret
jl
bound
dec
xchg
or
jl
sbb
jb
mov
mov
fstp
dec
sub
xor
clc
retf
clc
cmp
(bad)
int
jp
mov
jb
inc
mov
push
movs
rol
mov
pop
je
pop
xchg
and
mov
cld
push
or
test
cmp
pop
dec
(bad)
pop
xchg
push
sbb
out
and
mov
mov
mov
stc
pop
ja
jnp
fsub
dec
imul
ror
pusha
fisubr
movs
sbb
arpl
xor
sub
adc
cmp
dec
daa
dec
pushf
pop
bound
je
xor
adc
test
ins
in
stos
pop
fwait
mov
mov
jae
mov
jecxz
mov
ret
xor
loopne
and
cmp
inc
cmps
nop
test
pop
xor
adc
(bad)
pop
aad
push
ins
(bad)
lea
push
and
popa
stos
pushf
lock
sbb
fild
pop
or
fcmovne
(bad)
daa
cld
test
push
scas
pushf
test
add
jo
sub
addr16
mov
inc
in
inc
gs
pop
pushf
and
int3
fcom
mov
sbb
mov
pop
and
dec
adc
call
jp
jmp
hlt
outs
push
shr
lahf
cmp
aaa
xor
and
push
stc
call
sar
cmp
pop
cwde
sbb
mov
addr16
int
fisttp
or
sbb
scas
stos
daa
pop
test
test
push
mov
or
push
enter
(bad)
ret
stc
stc
dec
xlat
inc
stc
stos
adc
push
jle
push
gs
stc
cli
mov
xlat
inc
ror
jnp
sbb
cmp
pop
fisttp
je
xchg
push
mov
xchg
cmp
test
xchg
sbb
fstp
mov
xor
pop
movs
push
and
and
(bad)
stos
sbb
jae
push
mov
cmps
mov
out
or
rcr
push
test
lahf
or
sbb
push
inc
pop
ret
cmp
lods
jp
dec
add
jno
mul
cdq
sbb
xor
and
pusha
shr
push
arpl
pop
ds
push
rcr
mov
xchg
push
in
pop
or
sbb
add
stos
in
sub
push
lock
out
xor
add
js
push
clc
test
and
pushf
or
pushf
ds
lods
xlat
dec
inc
popa
cwde
vpsllw
cwde
rcr
lock
dec
inc
pop
or
xchg
dec
idiv
popa
mov
iret
or
fcomp
out
les
xlat
mov
adc
cwde
popf
and
stc
push
lods
lock
in
test
push
cmps
dec
mov
in
mov
dec
imul
xchg
pop
inc
dec
xchg
jge
repnz
loop
xor
fidivr
inc
imul
xor
loop
mov
pop
dec
outs
cmp
mov
dec
pop
inc
cdq
jl
push
pop
ss
cwde
pop
or
aaa
sbb
loopne
push
hlt
adc
(bad)
dec
ins
test
mov
movs
out
lods
in
repnz
cmp
mov
lods
addr16
sbb
cld
popf
mov
ins
push
mov
jle
aaa
cmc
sub
pushf
inc
lods
nop
fisttp
pop
push
or
mov
sar
sahf
and
mov
or
cmps
lods
jnp
push
sbb
and
and
in
and
pop
das
inc
inc
and
jmp
cmp
cmp
sbb
mov
(bad)
add
fistp
xor
or
je
mov
out
das
lods
jmp
push
loop
mov
adc
pop
ja
ins
xor
push
sub
scas
pop
(bad)
push
jno
les
aaa
into
jmp
mov
je
icebp
push
mov
add
jle
fcmovnb
xchg
retf
into
xlat
shl
loopne
idiv
add
rol
mov
xchg
pushf
cmp
mov
(bad)
pop
sbb
loopne
in
push
or
(bad)
cmp
nop
or
dec
xchg
loop
clc
pop
bound
rcl
mov
dec
cs
repnz
sar
loop
jo
mov
in
fwait
xchg
push
cmp
inc
mov
jne
pop
mov
rol
mov
sahf
retf
inc
cmc
lods
inc
dec
pop
cld
test
dec
pop
rcr
fadd
push
and
mov
loopne
push
jl
pop
push
jmp
stos
or
add
loope
jae
int
mov
cwde
jg
idiv
jo
jns
into
mov
in
aas
xchg
pop
shl
jno
dec
sub
pop
push
dec
adc
aaa
jp
push
clc
das
mov
mov
retf
mov
mov
mov
push
test
jg
pusha
ficomp
adc
inc
push
bound
mov
dec
sbb
in
and
push
mov
sub
js
ds
push
mov
mov
push
fcomp
daa
pop
pop
xor
xlat
(bad)
add
xor
inc
cld
dec
mov
ror
pop
lea
sbb
add
dec
inc
in
(bad)
xor
es
lods
pop
mov
rcl
inc
sar
dec
push
pop
or
and
sub
shl
fdivr
mov
xor
jp
jp
es
sahf
dec
sub
mov
fcomp
mov
ffreep
sbb
fadd
xchg
mov
xchg
mov
mov
sbb
pushf
inc
add
sub
mov
pop
js
pop
push
push
mov
sub
cmp
add
mov
scas
and
dec
ds
pop
mov
push
inc
rcl
pop
ret
nop
sahf
es
inc
loope
clc
test
sbb
and
mov
out
mov
mov
idiv
ins
inc
dec
rcr
es
test
std
and
cld
sbb
call
rcr
mov
inc
and
nop
sub
repnz
pusha
and
adc
std
sub
dec
mov
mov
push
aas
adc
cld
jne
jae
jb
rcr
(bad)
jmp
push
test
sbb
add
(bad)
int
mov
or
xlat
push
call
xchg
dec
jl
xchg
out
sub
loopne
add
jmp
xchg
nop
sti
and
cmc
mov
inc
sbb
out
dec
je
enter
jmp
in
and
mov
push
push
cmp
div
push
push
(bad)
push
push
push
lds
daa
dec
sar
jne
push
mov
push
(bad)
mov
(bad)
mov
in
adc
sub
imul
das
sbb
ficomp
jmp
adc
cld
fidivr
push
outs
sar
ror
jecxz
imul
and
sub
dec
sbb
fcomp
popa
cmp
pop
iret
test
fcomp
jns
daa
pop
lds
ins
ficom
test
pop
sahf
jbe
cmp
repnz
mov
jmp
mov
or
jae
aam
add
sub
mov
fstp
cwde
(bad)
or
cmp
sub
pop
cmp
cmp
mov
mov
in
and
hlt
pop
je
rcr
or
sub
cmp
or
mov
fcmovbe
mov
fcom
and
pop
add
add
arpl
fstp
sbb
pop
mov
inc
mov
test
adc
inc
sbb
cmp
stc
mov
mov
sbb
sahf
and
jecxz
cwde
daa
rol
or
std
aam
mov
pop
jmp
pushf
cs
(bad)
mov
mov
push
sbb
out
add
stos
repz
and
(bad)
cmp
fidivr
out
adc
mov
sub
arpl
sub
call
cmp
pop
ret
rol
lea
or
jg
sbb
out
cmp
mov
test
ds
mov
sub
lahf
cmp
and
out
loop
sbb
mov
sbb
inc
push
cmp
cmps
cmp
mov
fs
sbb
sbb
iret
imul
cwde
push
pop
outs
mov
shl
xlat
add
or
push
aam
mov
movs
sbb
or
aas
outs
jp
(bad)
push
xor
sbb
mov
mov
sub
(bad)
sahf
fisttp
std
xchg
clc
mov
popf
not
sub
stc
fidivr
loop
sub
mov
stos
push
or
sbb
and
retf
out
aam
sbb
nop
icebp
ret
and
pop
cli
jmp
dec
add
push
and
out
mov
xor
jmp
push
cmc
jbe
dec
aaa
pop
lock
shl
jl
fistp
es
aam
jle
fs
jle
dec
addr16
fs
mov
xchg
mov
leave
fld
xor
rcr
iret
ret
pop
aaa
mov
xchg
dec
add
cwde
adc
call
icebp
dec
or
enter
dec
int3
sbb
dec
jl
lahf
retf
pop
(bad)
pop
or
jmp
xor
xchg
add
mov
sbb
mov
jo
jnp
jbe
sbb
xchg
xchg
je
mov
addr16
call
fwait
add
scas
dec
rol
fcom
jmp
and
xchg
xor
pop
xor
sbb
inc
movs
pop
cmp
jmp
xlat
shl
push
fisub
or
mov
sbb
jo
or
dec
cdq
xor
xchg
cs
lods
and
pop
scas
(bad)
adc
scas
inc
call
dec
mov
lock
int
xlat
adc
sbb
xor
pop
jne
jg
dec
jmp
hlt
lods
in
pop
(bad)
retf
popf
sub
sbb
dec
loopne
sub
push
dec
inc
outs
aad
addr16
fist
jge
add
mov
and
nop
rol
aad
or
shl
lock
sbb
lahf
inc
jno
jo
test
(bad)
sbb
neg
adc
mov
push
mov
pushf
push
mov
xor
push
addr16
sbb
mov
ja
pushf
fsub
lds
ins
test
mov
ja
push
jmp
pop
jg
pop
lea
mov
dec
or
arpl
in
pushf
sbb
push
icebp
pop
fnsave
xlat
pushf
mov
daa
test
bound
lahf
neg
jg
(bad)
push
repz
loope
xor
clc
dec
xlat
xor
jae
mov
loopne
ret
push
mov
pop
jae
and
sub
fild
sar
jge
inc
ret
sub
pop
shr
enter
retf
xchg
push
xlat
cmps
sbb
adc
and
mov
scas
xchg
cmps
(bad)
ficomp
adc
mov
shl
cwde
sar
shr
ins
repz
ror
dec
ins
hlt
inc
in
mov
mov
lahf
icebp
cld
cld
xchg
dec
rcr
loopne
add
(bad)
mov
cmc
and
or
push
push
(bad)
sbb
dec
pop
mov
inc
xor
inc
sub
push
ds
aam
push
adc
cmc
loope
mov
in
jge
(bad)
rcr
sub
xor
jg
ds
xchg
or
sbb
xor
nop
pop
pushf
mov
mov
or
mov
dec
fistp
xchg
pop
out
pusha
out
xor
call
cmc
xor
jmp
out
or
pushf
int3
xchg
sub
(bad)
out
cmps
sub
fwait
mov
fmul
sub
jmp
or
inc
test
xchg
and
arpl
sbb
inc
xor
xor
shl
shr
inc
push
add
pop
outs
xor
or
icebp
hlt
mov
fnstsw
adc
pop
arpl
mov
xchg
or
mov
stos
inc
jge
mov
pop
add
(bad)
pop
retf
ja
mov
nop
cmp
lahf
or
out
mov
pop
(bad)
es
mov
outs
mov
xor
iret
adc
mov
mov
lods
mov
ins
push
and
adc
dec
and
xchg
push
scas
imul
xchg
fstp
dec
mov
test
nop
jmp
pop
int3
cmp
mov
out
hlt
and
in
push
sbb
add
or
adc
gs
inc
dec
sbb
mov
mov
cs
add
divps
mov
iret
sub
out
mov
sbb
ss
cwde
mov
fisubr
and
cmc
repz
call
mov
add
inc
sub
in
and
pop
pop
mov
fstp
arpl
sti
mov
loopne
or
inc
gs
adc
and
push
mov
div
add
jmp
pop
mov
mov
xchg
arpl
adc
add
(bad)
xor
mov
shl
jmp
add
je
ds
popa
aad
loopne
and
hlt
mov
aas
out
ja
repz
jl
arpl
dec
and
mov
rcr
push
mov
sub
xchg
div
inc
sub
iret
adc
sub
xchg
imul
or
(bad)
pop
and
fwait
xchg
pop
js
dec
push
sub
lahf
cmp
rcl
sbb
lods
mov
cmp
addr16
xor
lods
mov
aaa
dec
jge
cmp
out
pushf
push
das
cwde
mul
push
in
xchg
fs
int3
adc
shr
and
and
mov
xor
adc
stos
and
aas
push
lds
(bad)
cld
push
sbb
sub
cmp
stc
repnz
outs
lahf
dec
ja
mov
cld
in
ja
xchg
mov
dec
fwait
mov
push
mov
inc
aad
pop
je
imul
stos
aad
cmp
loop
int3
sbb
retf
test
xor
int
fucompp
inc
mov
mov
push
and
mov
das
mov
jge
js
or
dec
sbb
cmp
hlt
cmp
sub
xor
push
cmp
push
adc
push
sub
mov
jnp
and
ins
jo
fdivr
cwde
loopne
or
and
mov
test
call
in
mov
inc
jno
cmps
rol
ja
and
and
out
add
pop
cmp
sub
wbinvd
mov
clc
sbb
mov
ficom
xchg
mov
arpl
mov
ins
pop
jle
pop
daa
pop
imul
xor
pop
sbb
loopne
loope
push
or
mov
cmp
mov
xchg
movs
mov
or
repnz
aaa
or
pop
sbb
adc
mov
push
push
sbb
push
fneni(8087
xlat
into
fs
or
xchg
pop
xor
adc
push
lods
(bad)
in
push
(bad)
jbe
or
shl
jge
mul
(bad)
movs
aaa
mov
out
cmp
cmp
push
sbb
xchg
ins
cmp
adc
dec
xchg
out
es
xchg
cs
paddusw
sub
cwde
and
mov
dec
sub
sub
lea
cwde
mov
imul
fmul
push
into
test
inc
test
xor
int
sbb
jp
push
out
push
mov
xchg
imul
mov
jge
push
imul
pop
sbb
xchg
sub
sub
gs
dec
adc
and
sbb
jle
jnp
xor
js
cld
mov
sbb
aad
mov
pop
(bad)
mov
int
push
fnstsw
inc
xor
pop
xchg
mov
mov
inc
push
outs
fidiv
loop
xor
and
lods
and
or
push
adc
movs
adc
(bad)
hlt
dec
jl
mov
xor
pop
jmp
je
stos
mov
mov
pusha
lahf
cld
add
mov
pop
xlat
push
fwait
push
push
cmps
inc
mov
movs
sbb
dec
and
stos
ins
xchg
mov
xchg
dec
sti
test
push
push
or
pop
pop
fisttp
jge
add
adc
xchg
sahf
pushf
cmp
add
stc
xchg
jle
fist
fsqrt
xchg
mov
scas
rol
xor
stos
inc
dec
xor
cmp
(bad)
lea
sub
lods
and
inc
fild
mov
addr16
pop
outs
iret
add
dec
mov
hlt
add
pop
ss
mov
ss
push
add
push
cwde
fwait
pop
stos
sbb
mov
xchg
repnz
rcr
adc
cmc
neg
fucomip
mov
cmps
out
fild
test
(bad)
pusha
mov
call
in
pop
push
mov
inc
xor
loopne
sub
test
pop
nop
aaa
mov
pop
pop
dec
fsubr
and
or
aaa
(bad)
les
ins
into
gs
push
cdq
in
inc
jae
ret
pusha
test
fmul
dec
imul
fidivr
test
mov
adc
mov
inc
push
and
aam
cwde
inc
aaa
push
xor
pop
mov
stos
icebp
(bad)
jge
sub
cwde
loopne
jecxz
xlat
call
test
jnp
mov
dec
aam
mov
(bad)
sbb
sub
mov
xchg
into
(bad)
(bad)
repnz
pop
mov
lahf
pop
dec
outs
inc
mov
xor
and
xlat
scas
adc
mov
dec
and
js
arpl
mov
cs
mov
push
add
mov
stos
sub
add
mov
or
(bad)
fxam
out
pop
pop
push
lods
mul
ins
ror
imul
or
ins
xor
xor
inc
int3
rcl
imul
outs
jno
cmp
jae
jle
jo
test
sar
xor
into
cli
iret
push
xchg
cmp
xchg
es
sar
push
inc
pop
jp
and
mov
xor
imul
fisubr
lahf
jae
sar
push
and
imul
xor
add
dec
fisubr
ss
adc
xor
and
test
inc
jg
sbb
or
cwde
or
ds
adc
jb
push
out
push
sub
hlt
or
and
mov
mov
les
mov
test
xor
inc
ret
sbb
(bad)
cdq
shr
jo
and
fadd
fmul
cwde
mov
pop
xchg
xchg
mov
mov
out
jns
enter
push
mov
or
rcl
sub
inc
(bad)
fdiv
xor
pop
inc
repnz
les
push
jg
adc
inc
in
mov
call
push
cmps
xor
addr16
jecxz
pop
out
sbb
and
pop
pusha
rcl
inc
packuswb
xchg
dec
icebp
add
mov
(bad)
(bad)
imul
sbb
iret
mov
mov
mov
popa
rcl
mov
cmp
jo
jmp
ins
cld
mov
adc
xchg
(bad)
enter
mov
inc
cmp
(bad)
push
dec
sahf
cmp
das
and
or
out
cs
sar
adc
in
xchg
fadd
out
pop
sbb
fisttp
test
xchg
ds
je
(bad)
sbb
dec
(bad)
addr16
xor
add
les
xchg
repnz
xlat
leave
dec
jno
loopne
inc
loop
mov
adc
lods
aaa
call
add
cmps
add
push
fwait
push
xchg
sub
cwde
pop
xchg
bound
push
stos
xchg
pop
leave
jle
push
leave
xor
add
pop
cmp
out
movs
push
inc
pop
popf
mov
push
scas
jmp
sub
outs
mov
mov
sbb
xchg
sbb
rcl
mov
nop
push
cmp
pop
mov
or
add
(bad)
cld
(bad)
xor
icebp
push
mov
pop
int3
mov
sbb
sub
mov
adc
dec
sub
and
mov
pop
push
dec
stos
push
pop
and
push
mov
out
iret
and
and
js
imul
icebp
fmul
jmp
fs
xchg
xor
inc
movs
fistp
or
sbb
mov
push
test
dec
push
fmul
in
loopne
xchg
aam
pop
ficom
bound
pop
into
outs
int
ss
cdq
shl
jl
mov
or
dec
jmp
xlat
jp
in
es
fst
pop
mov
loopne
outs
ss
test
stc
lock
pop
adc
enter
stos
cmps
dec
imul
loop
(bad)
cmps
ja
push
in
dec
add
xchg
sbb
popa
int3
xor
test
nop
enter
mov
inc
jb
add
xchg
push
xchg
mov
fdivr
or
inc
not
aad
call
das
sahf
mov
shl
into
xchg
outs
inc
dec
pushf
xlat
pop
in
aaa
cmp
cmp
fld
outs
in
ficomp
retf
push
int3
pop
mov
inc
mov
call
mov
mov
fcmovu
div
or
pop
js
jmp
es
pushf
jge
test
and
xchg
jns
push
mul
movs
dec
cld
xor
xchg
shl
fidiv
popf
mov
popa
mov
mov
adc
outs
inc
inc
in
xchg
mov
and
jnp
push
xlat
xor
push
xchg
loope
iret
les
sub
ss
inc
cmp
inc
test
inc
fisttp
inc
sahf
inc
cli
addr16
outs
loopne
lods
or
sahf
add
mov
jge
pop
jbe
ss
ret
daa
cmps
jno
push
push
or
ins
xchg
movs
daa
outs
sbb
sub
xchg
pop
(bad)
sbb
sub
arpl
(bad)
xor
mov
dec
stos
inc
(bad)
cmc
js
ffreep
cwde
sub
pushf
add
xchg
push
xchg
dec
imul
mov
psrad
movs
push
mov
imul
aam
retf
sub
popa
in
inc
shr
xchg
push
lea
cmps
sbb
xchg
inc
test
sar
mul
cld
jae
push
adc
sbb
stos
inc
sbb
jge
push
sub
les
mov
cmp
mov
jns
xchg
(bad)
jb
dec
and
dec
mov
icebp
mov
lods
fsub
jmp
in
in
mov
mov
add
and
dec
cmc
cmp
(bad)
addr16
out
jbe
scas
push
inc
mov
retf
shr
and
test
out
xor
(bad)
(bad)
shr
cmps
sbb
xor
xor
rol
inc
and
fs
nop
mov
pop
(bad)
pop
cmp
test
jecxz
nop
cmp
add
lds
mov
cld
dec
retf
cld
sub
and
sar
ficom
push
push
fiadd
inc
dec
jmp
aam
leave
gs
sub
jge
scas
push
shr
add
cld
mov
and
aam
std
clc
loop
cmps
mov
shl
daa
shl
daa
or
shl
inc
mov
pop
cwde
arpl
push
mov
mov
repnz
rol
(bad)
pop
loopne
adc
dec
repz
push
in
ins
cmps
out
mov
out
inc
or
xchg
xlat
pushf
push
into
jl
(bad)
xchg
jg
adc
loop
adc
xchg
ror
cmp
cmps
mov
mov
mov
lock
lea
sbb
cmp
psubsw
mov
push
dec
dec
push
mov
cld
aad
push
out
sbb
loope
shl
cmp
imul
push
fadd
or
fsub
ficom
and
(bad)
data16
xchg
push
loope
std
add
adc
out
movs
cmp
sub
sahf
loopne
out
aam
jecxz
sub
mov
push
mov
sbb
aas
fisub
sub
int
xchg
into
jp
stos
dec
ror
add
xchg
ja
sub
add
sbb
int
push
mov
sub
in
push
xchg
pushf
xchg
lock
mov
fwait
shl
fadd
inc
adc
dec
xor
xor
out
mov
div
ins
sub
add
mov
pop
add
aas
cs
mov
sar
fidiv
stos
pop
(bad)
out
ret
ret
test
push
movs
pop
mov
pop
fadd
jmp
mov
xchg
push
mov
jle
mov
lahf
hlt
xlat
pop
or
popa
lods
(bad)
aad
pop
cld
das
sti
data16
mov
xchg
adc
fwait
or
pop
mov
fistp
arpl
inc
mov
pop
ja
pop
stc
(bad)
xlat
call
mov
push
pop
add
out
pop
idiv
int3
cmp
pop
clc
pop
adc
call
xor
(bad)
sar
pop
call
stc
mov
mov
sbb
add
loopne
push
cdq
jp
mov
push
mov
dec
lods
ss
mov
scas
iret
pop
vpunpcklqdq
xchg
mov
adc
dec
dec
pop
adc
jno
pop
test
scas
lea
mov
jnp
arpl
pop
xchg
or
mov
adc
or
jmp
add
retf
jne
mov
cs
push
fwait
sti
dec
mov
out
mov
jns
pop
pop
jl
mov
push
nop
loopne
ins
dec
xchg
std
adc
pop
pop
bound
pop
jmp
dec
dec
mov
sub
mov
loop
sub
pop
popf
mov
outs
int3
push
imul
mov
sub
(bad)
cmp
lahf
iret
fisub
shl
pushf
push
xlat
mov
jge
mov
add
sub
dec
sub
ins
inc
jne
faddp
retf
xor
bsf
ins
ret
push
jmp
imul
cmps
jno
call
adc
pop
inc
jns
ror
or
add
rol
inc
ins
mov
jmp
movs
xor
fld
scas
push
imul
js
mov
jo
jbe
adc
add
adc
fwait
call
sub
xor
les
mov
scas
ss
(bad)
add
and
leave
out
dec
adc
loope
shl
xor
cmp
not
(bad)
pop
loopne
fwait
mov
xor
nop
shl
mov
mov
jl
jmp
fisttp
ins
jnp
ins
lea
push
pop
popa
sub
jge
mov
xchg
(bad)
dec
mov
(bad)
cld
loop
out
lods
cdq
dec
mov
adc
push
rcr
fstp
mov
loop
mov
and
ret
aas
out
pop
cmp
jbe
loop
lea
xchg
rcl
push
dec
out
mov
push
mov
movs
push
loopne
imul
xchg
sbb
rcl
push
stos
jo
fisubr
sbb
cmp
mov
push
ror
out
outs
shl
aam
(bad)
xor
add
pop
int3
(bad)
pop
enter
imul
mov
aam
add
pusha
sahf
sbb
adc
cmp
lahf
inc
fild
or
rcr
loope
addr16
ja
cmp
lods
scas
dec
xor
xor
inc
mov
sub
or
ss
sub
ficomp
rcr
add
rcl
push
ins
hlt
dec
add
imul
and
xor
adc
shl
lock
cmc
inc
in
push
in
mov
jmp
mov
mov
mov
aad
mov
stos
pop
in
mov
loopne
add
mov
ss
mov
call
arpl
pop
pop
aad
repnz
ja
cmp
mov
add
pop
add
int3
xchg
dec
adc
xor
out
(bad)
sbb
call
inc
xor
pavgb
out
push
xor
mov
jne
adc
sbb
and
cdq
iret
xchg
cmps
push
mov
adc
(bad)
pop
out
xchg
cmc
add
fdivr
push
dec
jae
fld
ds
jae
pop
jnp
cmp
mov
addr16
lahf
outs
fstp
mov
int3
add
mov
xchg
psrlw
cmps
call
movs
xchg
enter
ss
mov
xchg
push
xchg
mov
inc
pop
retf
jp
jne
xchg
pop
pop
and
dec
adc
sahf
pop
push
and
and
jb
(bad)
nop
mov
dec
int3
push
push
push
pop
repz
stc
shr
and
icebp
mov
or
addr16
cmp
sub
or
std
out
dec
mov
imul
addr16
push
xor
jmp
pushf
(bad)
sub
push
repnz
div
sbb
imul
mov
bnd
repz
mov
sbb
xacquire
call
dec
push
mov
adc
imul
popf
xor
fs
sub
inc
pop
pop
lea
mov
shl
push
out
aam
mov
sub
ficom
imul
cmp
or
rol
lods
mov
push
adc
cmp
pusha
jo
jb
(bad)
ret
lock
fidiv
das
mov
sar
or
sub
inc
cmps
fidiv
rcr
pusha
rcl
mov
sub
cwde
jg
pop
(bad)
dec
rcr
and
scas
std
mov
aam
xor
push
jnp
cmp
jmp
cwde
pop
loopne
es
mov
cs
(bad)
das
lock
int
(bad)
sbb
repz
in
mov
jae
iret
hlt
jb
fcomp
push
outs
lods
jmp
mov
int
fnstenv
mov
add
sar
repz
repz
lods
rcl
sbb
pop
jp
mov
shl
dec
ret
push
aaa
jnp
out
xor
sbb
pop
nop
lds
adc
pusha
sbb
fild
xor
cli
test
xchg
pop
test
jg
cmps
sti
loopne
push
leave
cmp
scas
dec
out
daa
inc
adc
add
mov
mov
ja
push
xlat
daa
loop
mov
out
je
imul
dec
xchg
pop
leave
add
aam
jb
push
jbe
retf
pop
aas
push
out
fnstcw
cdq
add
inc
ins
mov
jno
pop
cmps
out
mov
mov
in
xchg
cwde
sar
mov
pop
lods
stos
xor
int
aam
and
rsqrtps
pushf
mov
pop
pop
cmp
pop
cdq
pop
imul
popf
lea
lahf
xchg
ficomp
jle
not
rol
push
ror
loope
dec
ret
inc
pop
pop
stc
pop
repnz
fldcw
push
rcl
mov
or
mov
cdq
mov
scas
pop
mov
scas
push
hlt
inc
sbb
pop
mov
jmp
adc
dec
imul
mov
xchg
pusha
mov
mov
call
jmp
xor
outs
sbb
sub
mov
xor
and
in
mov
pop
sahf
mov
mov
js
(bad)
pop
xchg
inc
xchg
sahf
rcl
arpl
push
aas
sub
jnp
sub
and
adc
pop
adc
xchg
loop
or
call
mov
shl
cld
adc
lahf
fist
aam
shrd
fild
sbb
mov
ret
add
or
popa
xchg
stos
movs
or
sbb
xor
xlat
fisub
daa
sub
sti
add
jno
repnz
mov
pop
pop
retf
jnp
lds
add
test
enter
sbb
or
aas
or
xor
mov
lds
ja
pop
call
faddp
sbb
outs
push
cmps
mul
inc
jb
lods
sbb
pop
inc
jmp
rcr
jecxz
in
sbb
popa
ror
mov
xor
sar
push
test
and
pop
mov
mov
cmp
cdq
es
cmp
call
pop
cmc
addr16
sub
call
cmc
and
aaa
xchg
aaa
sub
rcr
mov
jge
mov
dec
xlat
jg
popa
mov
es
(bad)
mov
in
dec
ret
dec
adc
xor
mov
xchg
add
and
jmp
stos
in
call
aaa
inc
lods
ins
mov
not
and
sbb
xchg
cld
fst
pop
jbe
sbb
xor
aaa
inc
xchg
cmc
xor
mov
mov
mov
xor
pop
(bad)
pop
sbb
arpl
retf
or
mov
inc
loop
int3
inc
scas
dec
div
mov
xchg
dec
push
das
dec
pop
and
int
xor
mov
shr
jmp
shr
cdq
or
mov
pop
nop
pushf
cmps
loopne
adc
cdq
push
fist
sbb
pushf
xchg
dec
dec
cmp
sahf
add
fcom
lods
ds
(bad)
mov
mov
mov
xor
mov
sti
int3
outs
lahf
sbb
fwait
ja
inc
in
push
xchg
jae
sub
or
push
inc
mov
push
jae
cld
adc
or
push
pop
imul
mov
pop
cdq
mov
jmp
cmps
daa
int3
xor
jne
and
and
inc
movs
test
xchg
or
(bad)
pop
dec
scas
lods
clc
mov
shr
pop
enter
sti
push
xchg
call
(bad)
push
inc
stos
cmc
(bad)
(bad)
fwait
lea
jmp
aam
aaa
(bad)
mov
ja
pop
mov
dec
dec
arpl
fwait
xchg
rcr
xor
add
cmps
mov
inc
mov
add
gs
push
dec
neg
in
mov
mov
pushf
mov
and
mov
ret
out
cmp
cdq
pop
xchg
and
or
scas
push
jmp
shl
sub
sub
sub
xchg
xor
xchg
add
mov
test
cmp
jmp
ffree
pop
lock
popa
(bad)
add
push
rol
sub
cwde
inc
std
lahf
lods
out
rcr
scas
dec
icebp
enter
xor
xchg
sub
push
mov
cmp
mov
ins
pop
fcom
xchg
adc
nop
or
test
dec
loop
fisub
jns
sub
pop
adc
mov
cmps
dec
push
js
jnp
inc
xchg
xchg
(bad)
fstp
push
popa
dec
ins
mov
neg
mov
xchg
xchg
inc
sub
loopne
mov
inc
test
cld
fimul
cld
adc
add
ficom
fcomp
inc
push
popa
xchg
cs
and
xchg
call
push
mov
jle
sub
les
sbb
and
adc
adc
add
mov
mov
push
int3
push
or
sub
adc
and
leave
daa
pop
cmps
and
pop
mov
or
inc
mov
(bad)
sub
push
sub
ret
lock
cdq
mov
ret
aam
push
xchg
call
mov
push
stc
xlat
cdq
loop
stos
sbb
dec
sub
and
add
or
cmp
pop
push
sub
mov
or
mov
xchg
popf
imul
shl
fwait
sbb
(bad)
int
pushf
pop
in
mov
xlat
lds
mov
ficomp
arpl
and
xlat
mov
mov
out
rcr
das
adc
ins
shl
nop
push
into
sub
pop
retf
mov
inc
sahf
out
sub
dec
out
mov
or
rol
xchg
rol
push
(bad)
sub
and
hlt
pushf
aas
adc
dec
outs
inc
xchg
in
outs
stc
jns
cmp
xchg
lods
mov
test
add
jmp
cs
faddp
jb
dec
add
jns
sbb
mov
loope
pop
hlt
xor
sub
les
cmps
pop
dec
pop
not
push
les
adc
loope
xchg
mov
xchg
dec
pop
xor
fbld
mov
lods
lods
xchg
jnp
sub
fcomp
shl
mov
mov
add
repnz
ror
dec
inc
scas
int
sub
or
xlat
xchg
sbb
dec
popf
mov
pushf
or
sub
xor
sbb
retf
loop
js
and
sub
retf
call
mov
add
stos
test
out
imul
test
loope
push
(bad)
out
enter
call
test
loope
aaa
mov
les
in
mov
jmp
(bad)
mov
xchg
push
cmps
fcmovb
ss
std
dec
mov
jg
stos
mov
xchg
xchg
ja
cld
stos
push
sub
mov
pop
sti
inc
test
ds
add
jne
dec
loop
jne
sbb
pop
(bad)
cmc
clc
jnp
adc
mov
imul
mul
rcr
sub
rcr
xchg
add
test
xor
xchg
rol
adc
or
(bad)
inc
mov
arpl
push
ja
push
cmp
mov
jb
jnp
mov
ret
stos
dec
retf
stos
je
inc
or
sub
mov
sbb
(bad)
jbe
jl
pop
and
lods
or
add
out
push
idiv
(bad)
fbstp
(bad)
rcr
fistp
out
fidivr
push
rol
push
mov
gs
test
ja
cs
inc
int3
sub
hlt
add
mov
ret
pop
scas
add
push
adc
outs
sub
gs
push
xchg
test
fcmove
aas
push
jno
shr
test
push
and
jp
pusha
lock
test
retf
pop
xor
push
adc
out
arpl
jnp
fbstp
add
sbb
push
int3
cmp
frstor
ret
lea
fisubr
xor
xor
gs
test
cmc
std
jmp
outs
push
ins
sub
and
(bad)
pop
ins
mov
pop
sub
pushf
ds
add
std
adc
pop
sar
sub
push
ds
test
add
lahf
mov
cmp
push
and
pop
mov
pop
push
mov
aam
sbb
stos
push
js
inc
popf
jbe
nop
push
inc
imul
adc
pop
mov
enter
xor
(bad)
lods
dec
mov
and
jge
push
icebp
enter
push
add
pop
imul
int3
retf
test
pop
mov
xor
fwait
int3
add
cmp
aaa
popf
xor
fstp
mov
fxch
test
xor
enter
sahf
jl
int
mov
stos
call
fcom
xor
mov
(bad)
out
mov
lock
fistp
lods
or
stos
mov
(bad)
popa
movs
dec
mov
ja
push
repz
aas
xor
xor
leave
mov
dec
lahf
mov
imul
sub
mov
sub
add
dec
test
mov
mov
js
ins
fisttp
loopne
and
or
dec
jae
not
mov
and
ins
cmp
jmp
cmp
stc
xchg
jg
call
sbb
cmp
push
mov
mov
inc
mov
cmps
mov
mov
ret
jnp
out
sub
ins
mov
(bad)
leave
fst
imul
push
and
xor
jge
fsubr
mov
adc
pop
daa
jbe
in
pop
addr16
inc
arpl
dec
jecxz
mov
sub
je
push
ss
inc
push
cmp
shl
pop
sbb
loope
loop
ror
ja
in
js
pop
pcmpgtw
int
(bad)
fisub
fst
sub
mov
popa
and
jbe
(bad)
pop
(bad)
(bad)
pop
mov
call
dec
pushf
push
dec
pop
psraw
inc
jecxz
call
adc
mov
ja
inc
jb
mov
mov
fadd
push
jo
idiv
(bad)
std
inc
pop
out
aam
and
jo
inc
pop
outs
or
xlat
sub
inc
pop
inc
(bad)
jae
mov
call
popa
adc
mov
xchg
jle
gs
imul
sbb
mov
mov
pop
mov
cmps
pop
add
xor
mov
cdq
jg
mov
ret
mov
mov
push
mov
movs
ficomp
xor
xchg
leave
lods
mov
dec
jmp
jne
and
ret
sub
sbb
aaa
ins
in
mov
push
jo
xchg
jns
inc
bound
retf
aaa
cwde
in
cmps
mov
adc
push
pop
fcom
or
arpl
add
out
cli
cmp
mov
push
addr16
xlat
and
mov
jbe
xchg
test
xchg
std
cld
mov
lods
ss
shr
fcom
(bad)
std
mov
mov
or
clc
sar
sbb
arpl
cli
pop
les
sbb
sbb
sti
mov
mov
xlat
adc
push
shl
pop
in
and
hlt
out
aaa
aaa
pop
fisttp
push
pop
add
inc
add
xchg
mov
(bad)
inc
mov
fldcw
hlt
dec
jl
cmps
sbb
fwait
sar
fs
retf
lahf
and
(bad)
movs
pop
jecxz
xor
mov
aas
sub
xor
(bad)
jnp
sub
dec
ins
pop
jle
out
inc
add
pop
leave
and
lahf
rep
xchg
aam
repnz
xlat
sti
fbstp
pop
call
clc
dec
jnp
xchg
cmps
outs
add
dec
rcl
nop
jmp
mov
stc
fadd
cli
fidiv
popa
adc
dec
popf
xor
popf
cs
rcl
mov
xchg
and
sub
int
out
out
dec
or
xchg
lea
clc
inc
sub
bound
add
cdq
xchg
or
mov
cmps
xor
lahf
(bad)
fidiv
push
adc
shl
nop
or
xor
ins
mov
nop
fisubr
(bad)
fcomip
xor
pop
pop
pop
jg
pop
imul
xor
lods
je
jg
dec
inc
push
in
xchg
push
xor
mul
jmp
js
mov
popa
mov
arpl
repnz
or
push
jae
stos
inc
add
mov
jmp
sbb
xor
or
mov
add
inc
test
push
ss
pop
jae
jl
jns
stos
mov
sub
inc
mov
mov
or
mov
sbb
sub
retf
cdq
mov
sbb
jg
icebp
and
pop
stc
scas
mov
cmp
dec
dec
cwde
mov
inc
pop
sbb
outs
push
(bad)
sub
adc
aas
xor
jg
fadd
dec
pop
and
outs
cmp
cld
fisub
inc
dec
mov
test
push
scas
pushf
inc
loop
xchg
fist
leave
jns
inc
add
add
fist
xlat
sahf
adc
push
jnp
cmp
lea
push
call
ret
not
(bad)
xchg
pop
cmp
mov
gs
jle
mov
movs
cmp
pop
imul
adc
jne
fcom
popa
jo
pop
adc
repz
pushf
popa
xchg
xor
push
adc
xchg
sbb
dec
pushf
push
ins
(bad)
push
mov
jae
mov
xlat
mov
loop
inc
mov
adc
push
push
ins
and
xchg
(bad)
sti
add
sub
dec
xchg
inc
mov
into
int3
ins
pop
imul
xor
pop
in
xchg
push
cmp
xchg
pusha
xchg
test
mov
adc
mov
xchg
push
imul
and
mov
adc
(bad)
push
mov
push
or
fs
dec
pop
jle
and
cdq
pop
cmp
shr
mov
mov
gs
stos
lea
and
mov
into
pushf
sbb
shr
popa
sbb
(bad)
xchg
aad
push
adc
and
shl
in
retf
out
setle
push
movs
lods
cmc
add
(bad)
lock
xor
loop
js
mov
std
stc
sub
inc
xlat
inc
pop
ret
push
scas
inc
clc
aam
sub
xchg
xchg
inc
loope
in
stos
les
dec
cmc
ins
stc
scas
push
or
mov
cmp
fimul
lds
xor
sbb
std
outs
daa
push
xchg
sahf
dec
pop
in
xchg
mov
test
cmp
or
ficomp
int
mov
push
pop
cld
or
addr16
iret
adc
nop
neg
mov
jns
cmp
std
add
(bad)
xchg
pop
jecxz
push
jmp
sbb
xchg
mov
push
or
xchg
fwait
cmp
mov
out
inc
adc
test
xchg
pop
sbb
push
pushf
and
call
or
imul
pop
retf
xor
pop
das
fwait
fs
lea
dec
dec
jo
out
imul
mov
test
adc
mov
pop
hlt
jecxz
pushf
js
cmps
xor
aaa
cmp
push
jae
pop
gs
push
mov
push
mov
jnp
dec
cmc
ror
inc
mov
jl
(bad)
pop
dec
sub
pop
mov
cdq
pop
fnsave
pop
and
scas
in
ror
jle
stos
inc
adc
test
les
dec
dec
fisub
xchg
mov
test
out
mov
and
sar
lahf
dec
dec
mov
test
retf
inc
les
(bad)
fld
jne
cmp
jl
adc
push
sub
cmps
mov
pop
int
sbb
xor
mov
lods
mov
jae
mul
mov
mov
pop
ins
mov
clc
lods
xor
cmp
push
xchg
cdq
xlat
loope
into
and
mov
popf
push
xchg
xchg
mov
dec
mov
ins
ror
sbb
sbb
adc
(bad)
repnz
icebp
out
inc
bound
nop
inc
and
cmps
sti
pop
add
fsubr
and
(bad)
pop
add
cwde
jg
pop
test
add
iret
pop
sub
(bad)
fcom
xchg
mov
popa
cwde
scas
or
cld
mov
sahf
fimul
push
jne
ss
mov
xor
neg
aam
daa
sbb
fcom
add
aam
push
xlat
(bad)
js
mov
je
loope
ja
mov
out
jb
xchg
stc
out
mov
pop
jne
call
dec
clc
push
mov
cmp
addr16
sub
mov
and
xchg
and
daa
cdq
loop
dec
push
addr16
hlt
jle
mov
push
mov
push
jg
sub
fnstcw
dec
(bad)
fcmovnu
push
rcr
pop
inc
mov
add
pop
fisttp
add
sub
xchg
ins
xchg
pop
mov
sub
shl
push
and
dec
daa
daa
(bad)
add
(bad)
aad
xchg
pop
or
ds
or
in
add
stc
sub
icebp
mov
movs
pop
in
aas
xchg
sahf
jp
push
push
dec
mov
call
stc
jb
repz
mov
btr
or
mov
das
cmp
in
cwde
dec
bound
inc
xchg
sahf
and
(bad)
loopne
test
pop
outs
and
clc
add
movs
xchg
ss
or
test
pop
not
ins
leave
mov
jb
dec
inc
jb
jecxz
push
push
into
jl
out
(bad)
cmps
loopne
mov
(bad)
jb
mov
mov
repnz
sbb
inc
aaa
rcl
xchg
sbb
mov
jb
xchg
or
rcr
push
sbb
(bad)
push
popf
les
into
and
cmp
pushf
test
push
or
scas
push
js
add
push
mov
push
lea
sbb
dec
push
or
push
aam
icebp
xchg
or
jnp
add
xchg
push
dec
mov
data16
popa
xor
stos
xor
repnz
xchg
test
ja
inc
mov
(bad)
clc
imul
hlt
jns
xor
sar
repnz
push
cmps
add
inc
push
test
jbe
push
ffree
in
call
mov
cmp
das
(bad)
out
(bad)
dec
(bad)
dec
pop
pushf
arpl
mov
sub
dec
lods
in
mov
push
push
push
mov
jl
imul
ret
xchg
push
fimul
mov
mov
sub
out
ja
rol
dec
pop
dec
xor
enter
inc
mov
ds
rcr
xlat
add
loop
loope
cmps
and
sbb
dec
add
mov
int3
lea
pop
(bad)
jp
mov
dec
inc
test
mov
xchg
(bad)
push
xchg
mov
sbb
enter
popf
lods
inc
push
cmps
dec
std
test
add
inc
inc
mul
pop
and
and
adc
pushf
inc
adc
fwait
pop
fucomip
in
or
push
lahf
cwde
sub
sbb
and
out
(bad)
scas
sbb
xchg
dec
inc
dec
jmp
aaa
mov
std
mov
fucompp
or
repz
lahf
shl
addr16
sahf
mov
mov
dec
ins
jno
sub
add
test
push
imul
out
push
int
idiv
cld
scas
rcr
inc
lods
add
or
rcl
push
xlat
pop
in
mov
in
popf
leave
sahf
xchg
shl
or
mov
jnp
and
shl
cdq
push
dec
mov
cli
dec
or
stc
cmovs
fld
adc
popa
(bad)
in
(bad)
out
(bad)
cli
xchg
in
xchg
mov
adc
xlat
stos
cmp
ror
mov
lahf
inc
and
jo
nop
inc
jge
mov
inc
xchg
pusha
ror
mov
push
add
cmp
test
mov
retf
aas
lea
loope
fidivr
fwait
cs
sbb
dec
neg
and
popa
mov
xchg
jne
push
push
cmp
mov
jo
mov
lds
push
sbb
(bad)
loop
mov
cdq
fcomp
push
add
jp
jmp
push
jle
sub
sub
push
xor
pop
pop
mov
dec
xlat
arpl
mov
cs
cld
inc
sub
push
arpl
bsf
dec
jle
jo
fst
call
loope
jmp
dec
jecxz
mov
fild
xchg
outs
xchg
aad
outs
popa
or
jg
imul
int3
push
sti
or
or
jecxz
call
inc
sbb
out
sub
ror
jg
pop
inc
jb
jecxz
in
sbb
scas
stos
jae
adc
dec
push
sbb
adc
mov
mov
mov
hlt
imul
sub
sbb
push
or
sti
dec
cs
bound
lock
into
scas
retf
ficom
in
daa
xchg
arpl
test
mov
mov
adc
mov
ss
pop
push
adc
out
mov
cmps
imul
cmp
sar
sub
call
or
lock
int3
xchg
dec
cdq
popf
cmp
(bad)
iret
aaa
test
test
jmp
movs
and
sbb
ins
push
mov
shl
add
sbb
shr
add
inc
xchg
and
faddp
enter
leave
add
xchg
jge
inc
dec
pop
sub
fwait
call
mov
jg
mov
or
mov
std
arpl
loopne
adc
xchg
sub
popa
push
sti
stos
xor
and
xchg
push
xchg
mov
dec
push
jmp
add
(bad)
ds
pop
xchg
call
push
push
dec
das
push
mov
mov
push
mov
mov
(bad)
ins
push
lods
fcom
repz
sbb
xchg
into
fcomp
cdq
jmp
pop
repnz
enter
and
test
mov
test
add
(bad)
mov
add
mov
jb
adc
add
into
or
pop
mov
lds
cmp
into
scas
jno
inc
mov
jmp
clc
aas
xchg
stos
mov
repz
dec
cli
xor
xor
xchg
jo
shr
mov
stos
push
daa
jae
lods
mov
mov
loop
cmp
pop
push
push
mov
out
(bad)
or
fild
out
inc
push
inc
not
fidiv
(bad)
(bad)
dec
js
add
inc
xchg
sub
mov
arpl
fdivrp
cmp
ret
dec
int3
push
and
push
fs
pushf
popa
adc
pop
(bad)
arpl
add
jecxz
pop
fldcw
inc
dec
push
sahf
(bad)
(bad)
les
and
cmc
mov
mov
cld
jb
mov
hlt
(bad)
sbb
push
or
ds
ffree
mov
daa
dec
jge
sbb
pop
int3
cdq
xlat
retf
sahf
loope
cli
fnstenv
cld
and
sbb
out
(bad)
inc
sbb
imul
dec
lods
jns
js
mov
fcom
loope
(bad)
jmp
addr16
add
sub
mov
and
push
dec
push
jno
and
adc
sahf
cmc
xchg
loop
and
add
fild
pop
dec
gs
enter
xchg
xor
lods
ja
adc
int
daa
jp
inc
test
pop
mov
xchg
out
in
cmp
lock
fcomp
and
fcmovne
pop
fwait
pop
mov
and
dec
mov
xchg
xor
jbe
int3
repz
dec
daa
jmp
les
addr16
(bad)
std
push
ins
dec
cmc
add
cmp
inc
push
div
lods
and
ins
retf
cwde
jbe
dec
inc
cdq
call
arpl
test
cmps
movs
mov
and
mov
test
ficom
dec
repz
mov
daa
rcl
arpl
movs
ss
and
bnd
mov
call
push
enter
loop
mov
sbb
fdivr
neg
xor
outs
sbb
push
sar
adc
xor
dec
sbb
ret
cmp
sub
cwde
leave
xor
sub
gs
xchg
push
int
sar
sub
data16
sbb
or
dec
cli
dec
adc
imul
sub
pop
mov
and
retf
inc
sbb
aam
pop
in
cmp
shl
jge
inc
test
inc
nop
push
aad
iret
dec
stos
dec
nop
dec
cld
and
pop
fcomi
leave
cmc
rep
and
xchg
jl
call
test
rcl
ret
jmp
mov
sub
push
lahf
ret
adc
ss
(bad)
sub
movs
ja
sbb
and
sub
ins
adc
mov
sbb
or
sub
sub
pop
out
cmps
lods
push
and
retf
adc
cwde
ins
sbb
push
loope
sbb
lods
shl
loop
out
pop
not
pop
cld
fcom
adc
and
fiadd
add
jb
or
test
int
mov
loope
mov
add
scas
loopne
enter
add
push
ins
push
mov
jae
mov
cmp
sbb
iret
enter
std
mov
fimul
push
inc
movs
inc
(bad)
gs
(bad)
sbb
sub
dec
pop
sahf
jecxz
add
pop
and
clc
adc
xor
jmp
fdivr
adc
bound
jno
pushf
pop
or
xor
jne
aaa
or
mov
pop
mov
(bad)
hlt
fdivr
dec
jno
sub
out
clc
scas
dec
test
sub
push
popa
or
add
test
sbb
stc
jb
fdivr
outs
leave
mov
std
push
sbb
loop
(bad)
sahf
cmps
cmp
lahf
jg
jnp
xlat
and
mov
mov
mov
mov
push
dec
jecxz
ret
imul
lahf
cmp
fs
stos
and
sbb
fs
mov
les
and
or
bnd
fist
inc
or
call
cmp
pushf
js
jne
or
fbstp
xor
xor
adc
scas
jnp
xlat
enter
movs
cmp
int3
fadd
push
cwde
push
dec
adc
fwait
push
fstp
push
cmp
aaa
js
mov
not
out
sbb
and
xchg
arpl
cmp
je
loop
ror
push
dec
or
pop
pop
nop
dec
mov
dec
(bad)
xlat
push
inc
add
push
daa
outs
mov
mov
or
adc
fcmovb
push
mov
pop
and
push
je
dec
loope
test
push
aaa
pop
dec
(bad)
ficom
int3
push
sub
sahf
inc
add
cmc
xlat
out
inc
pop
pusha
lea
adc
sub
add
mov
cmp
out
lea
ja
test
inc
shl
sbb
shr
pop
lahf
cmps
hlt
mov
mov
lock
sbb
iret
sbb
and
inc
jb
div
jp
mov
adc
jns
push
pushf
js
pop
push
inc
jp
(bad)
adc
sub
and
neg
xchg
push
sar
mov
and
xchg
out
cmp
sbb
lock
ins
or
or
shr
pop
xor
and
pushf
aas
ficomp
cmp
ja
pop
sbb
ins
xchg
adc
dec
and
pusha
imul
mov
fbstp
mov
loop
xor
push
retf
cmp
cld
add
call
cwde
mov
dec
repz
inc
ret
ins
fadd
push
aas
pop
push
mov
mov
fistp
aad
out
inc
mov
push
arpl
ins
xlat
jge
inc
and
test
aad
and
loop
(bad)
mov
ja
cwde
cli
in
push
stc
les
xor
pop
sub
stos
mov
cwde
adc
popa
sbb
sub
dec
das
xor
fisttp
push
mov
ds
push
add
dec
(bad)
jle
aam
not
or
sub
sub
xchg
inc
pusha
lods
js
adc
mov
or
mov
fwait
or
push
sbb
fwait
rol
or
arpl
push
mov
dec
cmp
das
sub
dec
shl
rcr
jg
lea
jae
cli
test
add
xor
inc
adc
jecxz
cld
xchg
pop
mov
inc
loope
xor
jns
xchg
pop
mov
inc
mov
xor
jp
pop
xchg
out
popa
imul
fidiv
popa
test
in
ret
nop
(bad)
call
outs
clc
ror
and
jo
pusha
push
dec
mov
sbb
rol
xor
fsubr
lahf
jo
jbe
ins
test
les
mov
mov
scas
fisub
push
xchg
mov
lods
xchg
mov
test
fimul
and
out
mov
mov
aas
sub
mov
aaa
xchg
aas
push
mov
pop
scas
cmp
popa
mov
(bad)
sahf
sti
cld
mov
push
out
xor
dec
pop
(bad)
xor
retf
sub
fcom
xchg
lods
sbb
mov
outs
ror
mov
inc
push
cs
mov
push
add
xchg
daa
mov
cmp
les
mov
das
call
push
jl
sbb
xchg
jp
jge
inc
out
mov
cwde
cli
dec
idiv
sbb
ss
xlat
fdivr
je
mov
adc
dec
inc
scas
(bad)
shl
in
ficom
jge
dec
stos
mov
sbb
jmp
test
mov
mov
cmp
ficomp
pop
sub
in
stos
xchg
xchg
(bad)
and
inc
(bad)
pop
inc
aaa
push
jno
cmp
jp
(bad)
pop
or
dec
pop
in
mov
add
adc
aam
push
jecxz
jmp
sbb
sub
sbb
mov
mov
xor
mov
std
mov
aas
inc
cld
sbb
ins
fidivr
mov
aaa
inc
mov
xchg
jo
jno
mov
pop
shr
idiv
inc
pop
xor
aad
mov
mov
pop
jmp
dec
cdq
push
aad
fwait
jmp
popf
call
icebp
movs
cs
in
loopne
cmps
pop
out
int3
push
mov
jg
push
pop
sub
or
mov
fucomp
or
cwde
dec
scas
mov
out
sbb
dec
dec
sub
lods
add
sub
sbb
sub
in
pushf
out
adc
pop
and
pop
dec
sub
inc
lock
and
sar
psubusw
mov
jno
int3
rcr
fnsave
fimul
sti
add
leave
int3
push
movs
ret
ss
out
mov
cmp
adc
int3
push
push
add
sbb
test
test
xor
addr16
inc
lea
or
add
sub
push
test
fist
movsx
sbb
clc
xchg
ja
mov
rcl
popf
adc
mov
fild
lods
cmp
push
mov
inc
mov
mov
pop
sbb
push
cmp
not
mul
push
gs
jno
in
loop
loopne
inc
inc
popa
sub
pop
out
push
dec
into
dec
jp
add
call
pop
adc
xor
pop
or
jge
mov
ret
addr16
mov
(bad)
aas
arpl
mov
xor
sbb
sub
shr
inc
test
jae
add
test
jg
mov
pop
xchg
ja
and
jecxz
or
bnd
imul
aaa
push
mov
outs
mov
lahf
imul
enter
adc
scas
sbb
pop
ja
lods
add
or
cdq
cmps
(bad)
pop
or
sub
(bad)
inc
xor
jp
sahf
pushf
xor
out
xchg
cmovno
mov
xlat
inc
mov
movs
loopne
pop
sbb
jnp
xchg
leave
sbb
inc
(bad)
adc
ja
mov
xchg
or
mov
int3
mov
dec
mov
mov
cmps
stc
jecxz
ret
push
divps
rcr
int3
jmp
cld
jns
cdq
pop
sub
loope
mov
call
adc
jge
(bad)
push
jb
sbb
popa
jae
cld
pop
xchg
adc
int3
outs
mov
inc
je
cmp
pusha
fstp
jl
(bad)
(bad)
pop
dec
pop
fiadd
inc
jnp
mov
mov
rcl
aas
loope
daa
or
fadd
pop
adc
inc
dec
mov
aaa
or
les
(bad)
pop
into
push
or
leave
(bad)
push
jmp
pop
loopne
xor
ret
cmp
mov
fnstenv
jnp
inc
shl
loope
imul
pop
rcl
pop
jns
stc
dec
mov
(bad)
jo
icebp
test
lock
shr
pusha
mov
cld
cmc
jge
(bad)
jne
pop
fnstcw
mov
cmp
mov
and
push
sahf
sub
jnp
push
addr16
or
adc
push
fild
mov
add
jbe
(bad)
aam
sub
std
push
push
pop
mov
mov
xor
add
or
in
mov
or
adc
dec
imul
jmp
and
push
inc
inc
xchg
jp
test
mov
sbb
cmps
mov
lahf
and
out
cmp
mov
inc
cdq
mov
jg
pop
std
arpl
dec
push
adc
js
dec
inc
ins
ja
aam
jbe
xlat
push
in
add
stos
arpl
push
cmps
adc
push
mov
mov
cmc
stc
fwait
xor
mov
ds
fs
ins
adc
xor
retf
cmps
cmc
dec
(bad)
cmp
inc
cmp
fcmovnbe
or
pop
xor
xchg
sub
push
sub
test
in
adc
xlat
ins
icebp
dec
sbb
ror
jno
sub
out
fimul
cld
sub
push
test
pop
inc
sub
dec
jne
iret
sub
enter
push
inc
fild
cld
pop
push
mov
xchg
and
cmp
xchg
gs
fstp
shr
push
(bad)
idiv
ror
sbb
and
iret
cmp
cmp
pop
loope
sbb
lea
out
xchg
mov
mov
cwde
addr16
ja
or
cdq
jns
mul
sar
adc
neg
ins
or
shl
mov
xchg
lea
and
out
mov
mov
inc
mul
shl
imul
or
ret
sbb
push
dec
bound
mov
ss
xchg
cs
pop
push
mov
adc
or
je
mov
arpl
(bad)
fs
mov
add
scas
xchg
and
add
mov
inc
ret
stos
add
push
dec
std
or
mov
arpl
test
arpl
jge
sahf
push
cld
add
adc
pop
xor
and
xchg
outs
ror
add
dec
das
add
jno
xlat
sbb
pop
mul
jmp
lods
xor
jns
inc
ins
sti
mov
retf
mov
imul
mov
mov
cwde
push
js
mov
stos
cdq
mov
inc
lock
fild
popa
cmp
int
add
xor
ds
pop
pop
push
pop
pop
rcl
pushf
dec
inc
inc
xchg
adc
imul
sub
push
cmp
inc
sbb
fidiv
loopne
sbb
mov
cmp
mov
imul
data16
sbb
mov
mov
fsubr
aam
fstp
fsub
cmc
xor
cmp
mov
adc
sti
sub
loope
xlat
push
sbb
push
pop
adc
rcr
add
or
mov
inc
xor
int3
out
in
aam
(bad)
addr16
mov
dec
ins
shl
out
mov
xchg
jne
mov
jg
test
loope
neg
or
mov
push
push
or
sbb
test
adc
leave
dec
cmp
dec
out
mov
dec
pop
mov
push
cmp
push
push
pop
outs
rcl
mov
scas
inc
fist
jg
inc
(bad)
jns
mov
(bad)
jmp
pop
sub
push
cs
stos
and
out
cmp
cmps
jp
mov
pusha
lahf
pop
xchg
in
cli
arpl
(bad)
ins
jmp
dec
dec
lods
jb
adc
cli
mov
and
ja
dec
dec
or
outs
mov
jno
xor
enter
ja
pop
and
(bad)
retf
inc
mov
push
mov
mov
ud0
or
das
in
push
pop
xlat
add
sub
push
je
push
nop
sub
sbb
mov
loope
mov
les
mov
jge
mov
ins
dec
sbb
add
fdiv
shr
loopne
aam
dec
out
ror
stc
mov
mov
lock
adc
push
add
and
mov
fistp
ret
push
cs
xchg
mov
repnz
adc
xchg
pusha
fnstsw
mov
adc
xchg
outs
shl
pop
jno
mov
jl
jnp
add
fdiv
(bad)
push
cs
sub
adc
add
xlat
xor
pop
shl
cli
sbb
pop
pop
sub
dec
ret
mov
mov
jnp
das
(bad)
jecxz
mov
(bad)
push
add
ror
faddp
iret
js
dec
jle
loopne
push
jecxz
or
xchg
cmc
dec
mov
mov
pop
jle
sub
pop
sub
xchg
mov
push
jmp
mov
mov
outs
idiv
and
fwait
or
popa
pop
inc
adc
outs
inc
addr16
mov
pop
pop
mul
mov
jbe
sub
mov
in
call
shr
(bad)
adc
mov
pop
jmp
in
add
mov
fstp
mov
fadd
jno
cmp
iret
inc
mov
ficom
push
aad
(bad)
push
cdq
leave
retf
xlat
hlt
dec
mov
repz
call
test
mov
push
loope
add
out
out
sbb
push
cdq
jg
sbb
mov
dec
dec
or
dec
and
mov
fwait
ds
into
sub
movs
xchg
pop
push
cmp
(bad)
es
test
mov
pop
jmp
movs
pop
(bad)
out
add
dec
cmp
ret
sub
push
int3
iret
fimul
mov
cmp
lods
out
std
mov
movs
mov
dec
clc
lock
ins
mov
xlat
push
inc
add
xchg
add
sbb
ret
ror
mov
push
push
dec
ins
fs
jmp
addr16
or
sbb
ja
dec
push
mov
mov
call
test
(bad)
mov
mov
mov
pop
mov
stos
inc
std
stos
sbb
mov
int3
jp
mov
inc
paddb
cmp
dec
xor
ja
ss
xchg
fcom
add
or
dec
add
jg
mov
pop
test
push
(bad)
and
or
mov
push
inc
inc
mov
pusha
jae
enter
pop
inc
aaa
add
or
out
fnsave
imul
ja
pop
or
jecxz
rcr
lock
push
lahf
aaa
and
or
inc
pop
or
nop
inc
out
icebp
push
mov
ins
push
dec
js
mov
rol
stc
popa
xor
jge
dec
(bad)
fs
pop
mov
sahf
add
scas
xlat
or
int3
addr16
stos
adc
js
enter
mov
inc
mov
pop
sub
xor
mov
loopne
cmp
shr
xor
dec
xor
test
cmp
mov
fcmovbe
mov
in
scas
mov
mov
pop
leave
mov
sbb
xlat
in
mov
push
push
popa
repnz
sub
stc
icebp
cdq
push
test
in
test
xchg
retf
pop
hlt
frndint
jle
sahf
cmps
not
and
mov
dec
jo
outs
scas
movs
jnp
dec
imul
arpl
(bad)
xor
sbb
or
loopne
push
jp
mov
xchg
movs
add
ins
jecxz
addr16
cmp
ret
repz
shl
push
inc
jecxz
call
or
inc
out
sahf
jne
mov
and
mov
popa
gs
mov
xchg
aas
sub
inc
(bad)
xchg
cmp
dec
clc
cmc
shr
pop
daa
sub
jle
pop
in
daa
loop
(bad)
inc
push
jg
add
push
imul
add
push
xor
push
dec
xlat
dec
pop
inc
adc
inc
dec
xor
push
sbb
jp
aaa
xchg
mov
dec
dec
sti
test
xchg
add
push
mov
dec
ds
in
cwde
or
fcmovnu
sbb
push
repz
cli
xchg
rcr
mov
dec
cmp
push
sar
mov
lods
pop
es
out
cmps
aaa
hlt
in
(bad)
(bad)
cld
jmp
jmp
sbb
pop
jge
int
mov
test
or
enter
(bad)
movs
mov
test
(bad)
dec
test
hlt
push
cs
xchg
aam
mov
mov
icebp
pop
sub
je
fimul
das
rcl
add
enter
hlt
cmps
test
jge
stos
sbb
xlat
inc
pop
sbb
pop
sub
retf
out
out
loopne
das
sbb
das
cmp
in
cli
test
sar
mov
add
cmc
cwde
jle
jmp
xor
leave
jl
loopne
rcl
(bad)
call
cmp
addr16
mov
rol
inc
pushf
dec
ins
sbb
inc
cmc
lods
pushf
jmp
pusha
and
adc
cwde
inc
dec
sbb
mov
xchg
dec
inc
out
push
pop
fstp
cmps
mov
add
ja
and
addr16
scas
dec
or
leave
mov
(bad)
pushf
push
int3
xchg
in
(bad)
iret
ret
daa
or
in
sub
cli
stos
fs
adc
mov
inc
fs
inc
inc
cmps
(bad)
push
inc
mov
pop
xlat
push
rcl
aam
or
add
mov
mov
inc
fidiv
sub
mov
sub
mov
mov
int3
mov
and
ja
nop
cdq
xchg
jmp
push
jmp
jns
fst
push
push
dec
js
icebp
(bad)
imul
jbe
fld
lea
or
out
ins
and
inc
add
jbe
cmp
push
lahf
lea
pop
cmc
(bad)
xchg
loope
push
jno
shl
xlat
push
jmp
sub
mov
mov
xchg
mov
jge
dec
mov
ins
pop
adc
cmps
jns
and
and
fsubr
adc
movs
stos
jb
fcom
add
sub
sbb
pop
scas
inc
arpl
jo
lds
xchg
mov
ja
rcl
push
xor
add
cwde
xchg
ins
iret
shr
clc
sbb
pop
xlat
sub
adc
(bad)
push
ja
inc
jmp
mov
(bad)
mov
or
nop
enter
daa
cmp
popf
fnsave
out
jo
(bad)
xchg
rcl
addr16
div
loop
sahf
or
movs
inc
shl
xchg
ins
shl
cmps
push
dec
cmps
mov
jg
sub
out
cmps
test
jmp
pusha
ror
lds
mov
ds
sbb
lds
jno
fisubr
ret
(bad)
and
lahf
adc
pop
inc
lds
ins
daa
sbb
push
xchg
adc
dec
jae
sbb
outs
cmp
adc
pop
push
sbb
ficom
ss
(bad)
sbb
out
scas
jnp
inc
mov
sbb
ret
adc
inc
inc
adc
push
int
mov
pop
in
shl
cmp
xchg
and
fwait
pop
add
fiadd
mov
jmp
push
cmp
xchg
jmp
or
mov
enter
and
test
cmps
inc
sbb
mov
pop
push
xchg
sbb
pop
push
aad
pusha
out
sahf
adc
test
xor
push
mov
repz
or
push
xchg
jge
mov
clc
fstp
pop
dec
push
jmp
jmp
lods
nop
push
push
test
leave
enter
push
mov
pop
sti
into
xor
push
scas
jno
jle
ret
gs
adc
outs
mov
(bad)
xchg
dec
adc
pop
cmps
ja
inc
out
or
xchg
push
movs
dec
lock
sub
sbb
daa
xchg
mov
sub
(bad)
bound
rcl
dec
sub
mov
sub
test
mov
adc
jmp
pop
divps
rcl
adc
xor
dec
not
mov
jmp
iret
xor
cmp
mov
pop
enter
fucomip
aaa
push
dec
jns
dec
out
fist
and
inc
leave
sub
cmps
dec
into
sub
jecxz
aam
adc
(bad)
jp
xor
(bad)
push
xbegin
and
cmc
inc
dec
add
inc
inc
mov
jge
in
mov
mov
add
mov
xchg
push
cwde
cmp
adc
jnp
mov
fdiv
pop
movs
mov
bound
sbb
adc
xor
sub
outs
sub
pop
mov
iret
cmps
in
call
scas
dec
sbb
pop
sahf
idiv
lds
pop
int3
adc
adc
leave
movs
stos
sbb
or
cdq
inc
shl
daa
loope
mov
adc
data16
(bad)
ror
dec
dec
mov
daa
add
inc
mov
or
cmp
sub
xor
sub
push
mov
and
jp
outs
jecxz
nop
jl
and
mov
(bad)
rol
sub
xor
cmps
adc
inc
adc
or
call
sbb
mov
adc
gs
gs
call
sbb
adc
push
sbb
gs
sub
xor
pop
mov
les
add
lods
xchg
mov
rol
pushf
(bad)
dec
and
pop
xchg
aam
push
cmp
shr
xchg
rcr
jbe
aaa
cmc
push
sub
ret
cs
es
dec
je
fsub
fwait
test
mov
xchg
mov
jns
push
loopne
das
sub
clc
in
add
popa
cmp
clc
xor
imul
dec
out
cmp
jb
(bad)
push
and
pop
push
cwde
and
adc
jl
movs
cmp
jnp
gs
pop
inc
xor
fcom
sub
jle
cmps
movs
(bad)
dec
jmp
push
xchg
gs
inc
push
lahf
add
pop
call
icebp
xchg
jns
sti
jecxz
mov
push
pop
mov
aaa
dec
fwait
mov
pop
xor
nop
lock
aam
xor
not
push
lods
(bad)
and
push
inc
jne
jno
div
loopne
ss
sbb
call
icebp
lahf
(bad)
lods
xor
mov
mov
aam
scas
popf
add
pushf
loope
or
cli
aam
loopne
popaw
cwde
jmp
mov
adc
push
lds
hlt
fsub
repnz
xchg
push
sbb
or
call
bt
add
inc
cs
sbb
out
jle
sub
lods
or
dec
xor
gs
mov
ror
push
adc
cdq
xchg
cmp
mov
fcomp
into
jnp
adc
inc
int
or
sbb
test
sbb
enter
cmp
push
cs
sti
ret
dec
aas
repz
push
add
movs
loope
outs
pop
jmp
jge
pop
addr16
jp
mov
fcom
inc
cmps
mov
sbb
push
fstp
mov
fs
add
jo
xchg
(bad)
adc
mov
fistp
sub
popf
adc
jecxz
fnstsw
outs
dec
ret
pusha
sbb
jle
aaa
std
fist
aaa
bound
mov
adc
push
or
add
cmps
inc
and
loopne
inc
mov
inc
add
pop
sbb
out
es
loope
lahf
dec
dec
jge
xchg
daa
push
mov
xchg
mov
inc
daa
stos
bswap
ror
lods
cld
pop
lods
sbb
ds
dec
cdq
lods
pop
in
sbb
shl
dec
xchg
push
mov
mov
(bad)
push
xor
adc
xor
(bad)
sbb
sub
ficomp
fcom
shl
sbb
ins
js
xchg
pop
sub
fdiv
dec
adc
cmps
jmp
add
push
loope
(bad)
sbb
sub
xchg
jmp
dec
pop
mov
outs
(bad)
movs
iret
inc
jne
push
dec
sub
std
fdivr
sbb
xchg
fsub
push
jno
xchg
out
xor
fisubr
xor
call
pop
outs
xchg
push
sub
out
out
add
xchg
push
pop
sub
ret
clc
jge
jnp
mov
add
or
(bad)
sbb
pop
mov
into
push
ins
imul
mov
sbb
addr16
push
push
mov
mov
or
sub
adc
int
pop
daa
mov
pop
ret
daa
sub
jl
adc
xchg
(bad)
ror
imul
pop
xor
add
or
mov
lock
or
fld
and
push
mov
ins
pop
inc
out
push
out
and
ds
cwde
retf
mov
jp
vmread
imul
xchg
or
(bad)
xor
scas
aaa
lock
jnp
sub
addr16
mov
sbb
out
mov
rol
sub
push
inc
fcmovnbe
fst
lock
cmp
cmp
and
jp
imul
sbb
dec
and
fisubr
pop
and
cdq
shr
lds
sbb
mov
(bad)
int3
add
loopne
xor
std
xor
add
fwait
dec
lock
or
xchg
lds
stc
xchg
xlat
add
ror
test
lea
int3
fst
mov
cmp
and
sti
mov
into
out
inc
sbb
or
mov
sbb
test
and
test
iret
idiv
and
mov
(bad)
inc
fadd
pop
xchg
fidivr
sahf
push
pop
pushf
push
movs
adc
push
and
sahf
push
add
mov
dec
pop
shr
int3
dec
out
int3
out
xor
pop
add
daa
adc
xor
loopne
out
inc
mov
xor
dec
sbb
dec
stos
inc
js
out
dec
popf
cmps
fadd
lock
ret
push
sub
jae
dec
int3
mov
jb
fxam
pushf
fld
call
aaa
add
jl
test
or
adc
fldenv
adc
lahf
stc
popf
push
sbb
xor
ret
test
cmp
mov
mov
mov
(bad)
mov
xchg
test
jb
mov
leave
mov
in
(bad)
sbb
hlt
es
fwait
neg
xchg
jno
pop
or
xor
xchg
js
jno
add
das
aaa
sbb
or
loop
pushf
push
push
stc
push
push
pushf
adc
in
push
(bad)
fst
(bad)
mov
mov
pop
cmps
pop
scas
(bad)
and
pushf
cwde
xor
push
pop
into
mul
int3
fdiv
xchg
add
and
push
push
(bad)
ror
jae
inc
sbb
and
(bad)
lods
jle
mov
pop
mov
(bad)
xchg
add
sbb
and
mov
jno
idiv
idiv
mov
push
add
clflush
mov
fcom
(bad)
leave
mov
das
pushf
mov
push
cmp
loop
jg
cs
add
dec
jge
pop
push
mov
cmp
fs
pop
dec
iret
jmp
sbb
xchg
jle
push
inc
xchg
out
dec
xor
or
bound
add
loop
outs
out
xchg
loopne
or
mov
scas
cmps
ds
dec
adc
cld
mov
mov
popa
sahf
mov
xor
stc
cmp
dec
add
(bad)
jno
dec
movs
add
neg
push
push
xchg
xlat
call
pop
sbb
cld
xor
pusha
dec
mov
imul
ficom
xor
jp
inc
cwde
push
jnp
mov
imul
aam
enter
mov
cmp
mov
adc
dec
test
js
sbb
mov
adc
mov
imul
push
ins
sbb
inc
(bad)
mov
cmp
fcomp
xor
inc
fidiv
int3
inc
pop
loopne
lods
xchg
adc
adc
pop
(bad)
xchg
mov
mov
jl
jp
mov
dec
or
cwde
sub
out
sbb
std
mov
or
inc
sbb
fnsave
out
and
add
mov
cmp
shr
cld
aad
shr
sbb
retfw
add
jge
in
jp
jnp
adc
mov
repz
fdivrp
cs
or
imul
call
pop
out
jo
xor
(bad)
loopne
shr
imul
sbb
sbb
sbb
ret
mov
jnp
push
into
push
ja
sub
xor
mov
xchg
cmp
pop
test
cmps
rcr
clc
pop
(bad)
loop
shr
push
inc
mov
inc
imul
fs
pop
mov
pop
lahf
mov
rol
int
push
and
add
sbb
xor
pop
mov
mov
fsubr
dec
mov
ds
ins
or
ins
mov
bound
fst
fwait
in
arpl
fstp
lock
stos
ret
mov
gs
jg
pop
dec
sub
hlt
lods
mov
or
enter
pop
adc
test
stc
push
clc
push
iret
aad
push
mov
retf
mov
shl
or
pop
jo
in
adc
sub
stos
mov
push
pusha
ret
mov
clc
stos
push
add
xchg
mov
cmp
jae
ins
jle
dec
lahf
es
pop
popf
js
fs
xchg
sbb
(bad)
inc
or
mov
add
sbb
out
pop
push
lods
retf
mov
dec
push
push
xchg
sub
push
test
js
imul
inc
jno
adc
nop
test
lods
push
cli
cmp
adc
stc
mov
(bad)
push
jbe
mov
movs
cmove
jae
lods
retf
daa
pop
adc
mov
mov
xchg
in
dec
push
dec
dec
int3
sub
fstp
div
popf
sti
(bad)
shl
and
inc
push
mov
mov
sbb
fiadd
and
cmp
sbb
jmp
add
(bad)
fs
mov
scas
push
push
rcr
xlat
data16
pop
pushf
fstp
pop
arpl
adc
jnp
or
push
xchg
and
and
lods
dec
mov
jno
fwait
mov
inc
cwde
ret
pop
fidiv
not
mov
sahf
add
pop
cmp
(bad)
jns
push
in
mov
inc
loop
xchg
xor
dec
cmp
sbb
jle
or
pop
or
jmp
adc
cmp
push
mov
pop
mov
inc
and
loop
sub
push
lea
sub
dec
sub
and
add
mov
jg
sbb
jo
xor
rol
pop
int
out
add
data16
mov
or
push
mov
icebp
cmp
cmp
rcr
(bad)
xor
mov
pop
pop
mov
mov
cdq
push
(bad)
pop
icebp
xlat
and
leave
adc
iret
dec
cmc
jl
mov
scas
dec
cmp
xchg
loopne
sbb
jo
mov
stos
in
xor
sub
clc
test
(bad)
sub
stc
(bad)
mov
sti
call
mov
cwde
jae
sti
jecxz
mov
adc
pop
sbb
int
push
sahf
les
xchg
pop
mov
ins
dec
add
jecxz
mov
mov
push
pop
jns
out
adc
pop
or
xor
addr16
push
lods
inc
adc
mov
mov
in
xlat
dec
shl
and
lea
int
push
fimul
mov
shl
loop
popa
arpl
xor
fsub
dec
retf
add
cmc
push
pusha
sub
test
loop
jb
mov
ss
push
pop
fwait
mov
mov
mov
cmp
enter
jmp
cs
push
ja
popa
push
push
jl
xlat
dec
sub
add
imul
xchg
adc
inc
mov
std
shl
stos
pop
rcr
sbb
aaa
adc
pop
sbb
or
fsubr
cmps
push
push
xchg
loope
arpl
js
cmp
and
sbb
push
push
mov
cmps
jge
pop
int
call
sahf
pop
sub
sub
sbb
adc
lock
test
or
fdivr
cmp
inc
lock
mov
es
jg
cmp
in
mov
aam
test
mov
mov
push
sbb
pop
xor
retf
add
xchg
dec
sub
shl
dec
cdq
fistp
mov
add
sbb
jbe
sbb
xchg
add
inc
prefetchwt1
pop
sbb
ficomp
jp
sub
scas
adc
int3
repz
mov
push
and
movs
dec
adc
pop
and
mov
add
jp
jno
rcl
(bad)
mov
fcomip
pop
test
mov
int3
out
and
stos
aam
(bad)
nop
out
mov
pop
cmp
(bad)
aam
out
sbb
div
sub
fstp
adc
lds
push
xlat
pop
std
jae
int3
addr16
mov
pop
xchg
inc
mov
jmp
fild
das
xchg
pop
loopne
cwde
inc
sbb
xlat
add
add
jmp
sub
std
pop
movs
mul
sub
mov
dec
nop
jb
sbb
push
mov
dec
inc
and
pop
mov
fstp
xchg
xor
cdq
add
adc
fsubr
out
adc
or
mov
repz
xchg
and
cli
das
or
fucom
mov
in
fwait
jmp
pop
sub
fst
jmp
mov
push
and
in
mov
in
cmp
dec
push
popf
rcl
pop
out
mov
mov
arpl
inc
std
jecxz
push
or
fidivr
mov
jnp
xchg
or
jo
ficomp
xchg
sti
pop
add
loopne
sub
cld
add
mov
mov
jg
pop
dec
lock
ja
add
test
pop
cmp
lea
jl
pop
ficomp
std
push
dec
je
lods
aaa
movs
add
mov
stos
mov
cmp
xchg
mov
cs
xchg
jo
sbb
adc
(bad)
cld
mov
pop
leave
mov
or
xchg
xchg
outs
shl
pop
pop
sbb
sub
push
or
iret
in
push
adc
pushf
fadd
pop
cmp
scas
dec
mov
adc
out
daa
cmp
retf
inc
mov
add
mov
fwait
jns
icebp
jle
mov
mov
dec
bound
rcr
add
test
sahf
imul
scas
push
clc
fwait
inc
mov
out
mov
sahf
lock
shl
in
(bad)
fnstsw
or
jl
jecxz
aas
int
enter
pop
inc
test
dec
into
sbb
xchg
pop
(bad)
fist
test
jecxz
sbb
imul
cmc
or
pop
aam
test
ror
mov
jnp
sub
pop
push
sbb
ss
mov
pop
jge
cwde
xor
ret
pusha
addr16
rcl
mov
cli
dec
fisubr
lock
sbb
aad
shl
loope
imul
adc
sbb
dec
es
cmp
sbb
repnz
ds
or
cs
xchg
sub
mov
push
aas
mov
shl
add
dec
hlt
push
xchg
cld
add
jecxz
sub
jb
cmp
or
cmp
mov
addr16
int3
pop
add
inc
dec
es
xchg
mov
add
and
cmp
or
pop
arpl
adc
and
fwait
mov
cs
adc
pop
mov
sbb
and
jae
mov
mov
adc
dec
xor
push
adc
jnp
sub
mov
xor
jg
stos
push
pushf
cmp
cmps
pop
cdq
cli
ror
jno
push
push
addr16
rcr
sti
cld
arpl
mov
mov
adc
push
jbe
jnp
(bad)
fldenv
xchg
inc
ins
xchg
(bad)
aad
and
imul
cmps
sbb
xchg
or
in
pop
pop
dec
leave
sar
mov
inc
push
and
fcmovbe
int3
pop
jmp
das
repz
shl
dec
test
je
and
pop
pop
ror
mov
dec
gs
inc
push
movs
jbe
in
mov
xchg
das
xchg
mov
add
mov
pusha
out
sub
mov
pop
imul
addr16
rol
popf
jp
xor
lock
inc
cld
mov
mov
popa
jne
stos
xchg
xor
and
leave
daa
retf
mov
(bad)
sbb
or
mov
add
icebp
add
push
das
xchg
iret
outs
jle
jle
adc
push
sbb
lahf
jle
add
cmps
es
mov
jnp
jbe
lock
xchg
pop
test
loopne
cmp
and
adc
fwait
sub
shl
and
inc
lea
stos
fs
pop
aam
and
idiv
xor
in
(bad)
aad
mov
sub
dec
lds
xor
fs
bnd
sub
dec
xchg
lods
jp
sub
test
lea
ret
call
cmp
pusha
add
jecxz
bound
mov
shr
dec
mov
xchg
imul
cwde
fst
lock
add
jmp
xchg
mov
in
icebp
sahf
dec
je
lds
in
mov
push
mov
push
sub
imul
arpl
xchg
xor
dec
pop
dec
ret
jl
mov
mov
jge
and
mov
xor
mov
pop
mov
shr
pop
xor
sub
pop
(bad)
(bad)
ror
fucomi
jmp
(bad)
cmps
aaa
xchg
mov
ins
aam
push
and
stos
lea
mov
cmp
jp
dec
sbb
pop
add
cmps
int
jecxz
cwde
add
and
stos
les
dec
cmp
sahf
cmps
xchg
fiadd
ret
in
inc
adc
nop
js
adc
cld
loopne
or
push
rcl
sub
dec
xchg
adc
out
in
rcl
jno
adc
rcr
jns
test
sub
dec
mov
lsl
sti
xor
aam
test
xor
daa
cld
xor
ins
jle
popf
add
xor
stc
pop
push
jle
mov
int
add
sub
cwde
jge
jle
icebp
cwde
mov
mov
gs
enter
in
lds
ret
in
sbb
out
inc
pop
xor
ja
add
mov
and
imul
stos
xlat
dec
aaa
add
jno
pop
aas
fsubr
sbb
sub
xor
fcmove
(bad)
add
clc
fistp
dec
movs
pop
xchg
outs
call
jg
shr
in
push
(bad)
xchg
or
(bad)
in
cmp
dec
into
js
xchg
add
cmp
test
shl
aam
pop
out
pop
push
mov
gs
mov
into
pop
jbe
xlat
gs
xchg
scas
(bad)
xor
sbb
sahf
add
fcomp
jg
dec
cmp
aas
ja
es
rol
push
imul
popa
pop
lods
sbb
mov
lock
push
push
push
mov
inc
push
sub
xlat
xor
jnp
cmp
pop
imul
sar
or
rol
sbb
jns
sub
in
dec
add
mov
mov
adc
pushf
popf
push
pop
pop
push
aad
arpl
sbb
add
shr
movs
push
jmp
(bad)
addr16
mov
xor
pop
iret
loopne
fistp
xor
dec
clc
loop
pop
sbb
inc
lahf
and
xlat
ss
cli
push
mov
lds
stos
cmp
gs
xchg
cmp
inc
stc
rcl
int3
push
xadd
jmp
out
push
push
test
push
int3
xchg
loope
and
xor
xor
test
cli
mov
jmp
inc
lea
outs
sbb
inc
inc
pop
pop
or
inc
sar
imul
add
or
adc
pop
fs
icebp
stc
fiadd
dec
stos
mov
or
adc
je
les
lea
inc
pop
or
cmp
iret
iret
push
pop
mov
dec
aam
ror
jle
push
call
imul
push
and
mov
mov
pop
mov
cmc
mov
xor
push
into
and
mov
pop
mul
in
jo
xor
pop
lock
out
in
dec
or
pop
xor
aaa
call
inc
and
xlat
call
(bad)
(bad)
push
add
cwde
in
lods
movs
ror
cld
jno
push
push
aam
pop
dec
stos
pop
or
xor
mov
mov
push
pop
cli
jge
mov
scas
pop
cdq
inc
pop
icebp
dec
clc
dec
sbb
stc
xchg
outs
inc
dec
inc
(bad)
cmps
mov
fwait
push
neg
mov
push
ja
(bad)
dec
add
(bad)
mov
or
lea
ret
adc
lea
lds
sbb
mov
push
push
dec
sub
xchg
adc
data16
(bad)
dec
cmps
fst
jle
(bad)
pushfw
inc
(bad)
jle
ror
jnp
mov
and
mov
hlt
(bad)
in
xor
xor
xchg
mov
pop
sar
das
jo
xchg
test
sbb
inc
std
test
push
fidivr
jp
outs
add
int3
jecxz
test
leave
mov
stos
ret
popf
and
pop
fisttp
hlt
jbe
pop
pop
ins
mov
cmps
push
push
ds
jno
push
ficom
mov
addr16
enter
xacquire
pop
into
aad
cmp
pushf
imul
fnsave
test
dec
inc
sbb
div
sub
int
sub
lock
push
ja
lahf
push
or
or
hlt
jg
cmp
xchg
or
add
jg
test
add
scas
dec
jmp
xchg
mov
out
out
mov
repz
mov
pushf
jle
rol
out
cmps
sub
pop
and
enter
xchg
call
xor
pop
fldenv
stc
inc
sbb
mov
add
out
inc
sub
sub
(bad)
cmps
inc
push
sbb
lea
es
fucom
or
repnz
shl
mov
shl
loop
pop
push
test
popa
mul
leave
add
mov
mov
cmp
stos
popf
and
btc
xchg
fcomp
add
pop
mov
jmp
inc
fst
push
arpl
pop
push
push
stos
neg
pop
les
jge
repnz
mov
inc
jns
cmps
retf
pmovmskb
jge
leave
loope
loop
adc
ins
imul
or
mov
xchg
or
xor
xchg
inc
push
mov
addr16
pop
or
sub
addr16
fucomip
loopne
iret
(bad)
je
mov
lock
mov
xor
dec
in
xor
mov
pop
pop
das
call
stc
mov
jl
or
in
adc
or
stos
cmp
xor
jmp
inc
popf
movs
and
push
push
aas
loopne
mov
cmp
sbb
mov
xor
mul
repz
inc
js
and
xor
and
fwait
pop
sbb
adc
jmp
loopne
mov
sti
xlat
dec
sbb
jmp
int3
jge
ja
xor
ficomp
push
(bad)
adc
dec
inc
pop
cmp
mov
gs
sub
add
(bad)
mov
xchg
sub
cmp
or
add
in
test
iret
pop
pushf
pop
and
or
sub
stos
ins
pop
adc
push
dec
cmp
dec
in
dec
imul
xor
cmp
sti
dec
or
mov
xlat
inc
popa
clc
cdq
push
nop
ds
sbb
div
outs
cwde
jae
pop
mov
rcl
shr
and
push
jnp
sbb
sti
test
dec
out
les
mov
out
mov
push
jmp
or
and
(bad)
inc
pop
cmp
jnp
minps
iret
loop
dec
rcl
pop
dec
push
sahf
add
in
mov
inc
enter
dec
sub
inc
sbb
mov
inc
adc
arpl
test
cmps
int3
and
stc
push
cmc
call
loop
repz
aam
pop
add
jnp
in
or
sbb
jl
or
jns
dec
sahf
rep
cdq
gs
movs
or
aaa
fisub
rcl
lea
int3
mov
push
and
and
push
shl
jl
cmc
pop
aaa
push
push
shr
out
or
call
(bad)
rol
pop
sub
arpl
adc
xchg
ja
jno
cmp
cwde
xor
addr16
push
cmp
xor
pop
stc
pop
outs
add
pop
das
(bad)
rcl
aaa
scas
shl
cdq
dec
sub
inc
push
xchg
icebp
add
mov
add
mov
shl
aaa
out
xchg
mov
jno
push
sbb
sub
arpl
scas
jns
popf
xchg
or
dec
cmp
xchg
data16
in
dec
add
not
xchg
in
(bad)
mov
lahf
(bad)
dec
or
mov
rcr
mov
sti
pop
add
in
sub
sub
out
popa
(bad)
int3
(bad)
ror
pop
mov
push
aaa
scas
or
dec
int3
lea
cmp
xchg
out
int
sbb
jg
call
pop
adc
mov
cwde
fcmovu
fisub
cs
lds
jne
and
sbb
push
sub
lock
xchg
js
mov
xchg
push
dec
sub
test
ja
and
cld
mov
mov
push
pop
xor
mov
mov
fwait
daa
dec
or
add
popa
pop
mov
xchg
mov
dec
inc
sub
push
imul
stos
int
mov
popf
repz
(bad)
aad
retf
fs
cmp
mov
icebp
dec
inc
aad
adc
cdq
hlt
ror
xor
lds
xchg
dec
fwait
cmc
and
sbb
pop
jmp
fdiv
xchg
add
pop
inc
les
pushf
fisub
div
pop
mov
or
outs
dec
leave
dec
mov
cmc
js
xor
stc
popf
xor
cmp
out
jmp
pop
pop
pop
xchg
ficom
loope
add
mov
addr16
sbb
stos
loopne
pop
ror
jmp
loopne
and
mov
(bad)
jl
rol
movs
xchg
push
inc
sar
gs
idiv
clc
pop
addr16
push
jbe
cmp
cmps
arpl
cmp
cmp
outs
ret
imul
fdiv
rol
mov
mov
test
dec
cmp
aas
cmp
pop
mov
je
jge
mov
jp
cmp
pop
xchg
movs
mov
(bad)
ds
dec
inc
gs
jmp
stos
push
xor
jl
mov
int3
out
sub
int3
mov
mov
ret
push
jmp
mov
pusha
loop
test
or
xlat
fwait
stos
mov
shl
mov
pop
and
popf
mov
nop
sbb
jbe
push
ror
pop
dec
push
scas
jp
call
sub
mov
ins
mov
mov
inc
lahf
pusha
pop
test
inc
mov
fwait
jge
cld
push
sbb
mov
dec
cmps
sub
gs
cmp
inc
or
pop
jns
cdq
iret
and
clc
jmp
mov
ja
mov
and
dec
mov
sub
push
or
dec
jne
adc
shl
xchg
jo
sar
jle
ja
push
or
pop
jmp
dec
movs
gs
or
dec
xor
adc
outs
mov
adc
idiv
stos
mov
imul
xchg
in
jb
cwde
stc
xchg
adc
(bad)
loope
mov
xor
sub
and
push
jmp
push
adc
dec
out
(bad)
(bad)
pop
std
into
cmp
xchg
cli
mov
ret
aas
push
push
or
(bad)
popf
je
xchg
repnz
jmp
inc
sti
push
out
ins
add
push
(bad)
push
in
adc
retf
jnp
mov
cmc
test
add
popf
inc
enter
jge
gs
xchg
lock
cwde
rcr
jmp
mov
pusha
or
retf
dec
call
rcr
mov
adc
hlt
add
jmp
dec
pop
or
iret
push
adc
add
scas
test
push
pop
nop
inc
push
dec
dec
mov
jo
retf
(bad)
mov
stos
aas
pop
inc
or
inc
sub
cmp
in
ficom
fwait
leave
dec
and
(bad)
and
mov
arpl
aaa
outs
in
push
mov
enter
mov
clc
dec
cli
pop
xchg
js
icebp
push
lods
loop
call
ret
jle
sub
int
cld
push
rol
push
hlt
or
and
inc
popf
add
dec
jno
imul
or
xchg
in
cmps
pop
xor
mov
xor
mov
xchg
pushf
lock
xchg
mov
sub
mov
mov
inc
xchg
sbb
pop
test
fstp
jmp
push
inc
push
or
(bad)
dec
mov
jae
adc
adc
aas
jmp
push
hlt
dec
mov
sub
cld
mov
push
adc
fmul
and
cmp
xor
loop
sub
mov
out
mov
pop
push
dec
addr16
jg
push
mov
not
leave
in
cmps
pcmpeqw
jp
dec
shl
ret
fsubr
jle
jnp
jnp
pushf
lock
jle
or
cwde
mov
call
(bad)
xchg
pop
test
cwde
xchg
adc
leave
pop
cld
daa
sub
mov
xchg
mov
mov
sbb
xchg
inc
sub
icebp
jb
adc
jns
rcl
xor
mov
dec
fwait
mov
mov
xor
int3
jg
mov
adc
int3
jge
pop
sbb
mov
add
in
jp
jmp
je
or
push
inc
popf
fstp
test
xor
dec
mov
cmp
mov
dec
pop
fidiv
pop
cwde
mov
outs
mov
xchg
cmc
test
add
out
mov
mul
mov
jnp
jnp
inc
and
mov
lock
sub
nop
test
les
xchg
dec
push
sahf
lock
loopne
adc
shl
dec
test
mov
mov
adc
repnz
mov
xchg
pop
jae
loopne
leave
test
pop
lods
test
aaa
shl
mov
(bad)
enter
(bad)
adc
ret
dec
ds
xlat
and
jmp
fdivr
out
(bad)
jb
pop
or
mov
nop
in
out
adc
cwde
fs
adc
push
dec
or
jmp
sbb
loop
pop
sti
xchg
(bad)
push
fnstsw
dec
int3
cli
(bad)
mov
test
cmps
in
add
sti
xchg
daa
mov
test
adc
aam
repz
push
mov
cmp
(bad)
rol
cmp
(bad)
jmp
push
ss
(bad)
clc
mov
cwde
pop
shl
xchg
cmps
mov
mov
xor
pusha
aam
sbb
mov
rcr
and
inc
mov
jle
sub
push
add
pop
pop
rol
rcl
ret
jle
inc
int
mov
fstp
repz
sbb
lods
mov
mov
cmp
pop
fadd
gs
jns
int
aaa
ins
pand
xchg
loop
es
or
xchg
mov
repnz
dec
cmps
cmp
out
push
mov
jmp
aam
add
dec
fst
jno
or
shr
mov
(bad)
jbe
or
dec
jae
xor
pop
ins
pop
lock
cmps
sbb
and
aaa
push
ror
adc
mov
and
sub
xor
outs
push
ds
mov
pop
call
push
pop
or
mov
test
mov
je
dec
sbb
ins
or
out
adc
mov
fwait
push
mov
xchg
pop
push
das
inc
or
push
clc
inc
xchg
mov
into
or
mov
ja
je
dec
(bad)
jge
pop
adc
(bad)
sbb
jae
stc
cli
sbb
dec
arpl
shl
dec
and
out
sub
ret
in
mov
xchg
xchg
shr
fwait
dec
dec
neg
or
push
retf
jl
inc
mov
jbe
mov
sbb
imul
jns
mov
mov
add
call
mov
stos
aaa
std
ffree
lock
jp
push
jge
mov
sub
(bad)
test
cmps
out
sub
xchg
mov
xchg
pushf
mov
xchg
and
add
mov
cwde
jbe
ds
adc
ficomp
leave
pop
xor
mov
in
repz
push
pop
cmps
pop
das
sbb
mov
ins
mov
lods
shl
fst
push
xchg
pop
or
mov
mov
fld
cmp
aam
cdq
sbb
aad
sbb
into
dec
adc
xor
mov
push
mov
mov
jnp
sbb
lea
adc
clc
xchg
pop
jecxz
in
push
pusha
mov
gs
cmp
mov
int
es
fnsave
cmp
daa
cli
and
retf
cwde
mov
or
daa
mov
or
shl
stc
jnp
xchg
jmp
aad
loop
push
sub
xor
into
mov
adc
push
push
jge
mov
add
xchg
xlat
sbb
lods
iretw
aaa
pop
mov
stos
pushf
ficom
add
dec
test
cmps
pop
ins
neg
cld
mov
test
xor
aad
pushf
inc
rcr
imul
lods
cmp
call
neg
sbb
fild
js
mov
jge
cmps
arpl
sbb
mov
and
retf
add
cmps
pop
idiv
mov
cmp
dec
dec
fnstsw
xchg
jp
imul
popf
lods
sahf
jns
push
and
push
sti
add
pop
mov
inc
dec
adc
jmp
scas
std
call
and
int
dec
stos
sub
dec
xchg
enter
adc
xlat
pop
div
outs
cmp
pop
ja
push
mov
(bad)
shr
pop
out
outs
sub
cld
adc
(bad)
hlt
adc
add
out
push
pop
sti
fimul
fisttp
pop
pop
jmp
jmp
(bad)
push
sbb
dec
add
add
pop
pushf
fidiv
inc
dec
jmp
sar
push
xor
mov
ffree
popf
and
and
adc
dec
test
jmp
and
mov
aam
or
fidiv
ds
mov
push
test
shl
stc
jno
mov
push
jmp
mov
loope
or
sub
cs
lea
dec
and
cmp
stos
int
(bad)
fmul
rol
mov
mov
dec
fcomp
jge
outs
(bad)
ins
xor
jns
sub
xchg
test
mov
xchg
imul
adc
mov
push
sub
sar
inc
daa
scas
dec
sub
loopne
adc
jo
les
test
ins
mov
adc
add
mov
mov
(bad)
in
push
mov
mov
fcomp
std
sar
daa
mov
sub
pop
xchg
call
cmps
daa
xor
shl
scas
pop
dec
or
lods
jo
or
add
push
add
dec
bound
mov
push
pop
out
out
cld
lods
lods
repz
mov
cwde
push
lds
aas
or
sub
(bad)
cld
mov
jge
sbb
and
mov
rcr
stos
in
inc
mov
mov
cld
and
sub
lds
mov
and
xchg
xlat
xchg
push
xor
push
shr
push
out
lock
aam
adc
sub
push
push
imul
in
sub
fwait
lods
in
cmp
or
pop
xchg
xchg
jmp
data16
dec
js
popa
adc
cld
imul
in
mov
rol
pop
es
jmp
stos
out
cmp
sub
xchg
jle
pop
or
shl
fadd
lea
scas
lods
rol
cs
mov
adc
ins
test
dec
div
jmp
sbb
stos
adc
(bad)
mov
popf
cmp
pushf
ds
out
out
loop
sbb
fist
(bad)
lock
jbe
enter
aam
push
push
push
scas
or
js
fidiv
mov
adc
add
mov
mov
and
cmp
cwde
inc
aas
jo
sbb
xor
cmc
mov
int3
pop
push
out
push
hlt
outs
pop
ret
xchg
leave
inc
xor
mov
or
cwde
sbb
or
cli
jb
cmc
adc
xchg
leave
pop
adc
adc
jle
mov
mov
(bad)
push
xchg
test
enter
pop
inc
pop
jecxz
push
and
push
mov
loop
dec
or
mov
mov
cmp
xor
mov
pusha
xchg
adc
rcr
mov
jb
leave
sub
aad
jbe
xor
aaa
push
sbb
repnz
and
jae
push
push
int
stc
loop
xchg
and
and
add
xor
mov
push
stos
inc
repz
movs
mov
jge
push
cli
sbb
push
mov
stc
xor
jae
sbb
jg
adc
pushf
add
stos
mov
pop
ja
inc
ror
js
mov
push
jnp
mov
sti
xchg
mov
fidivr
cld
push
arpl
cmp
mov
jno
cmps
xor
fcomp
ja
lgdtd
dec
enter
test
add
pop
movs
xchg
(bad)
fst
mov
sub
cmc
daa
xchg
xchg
inc
(bad)
push
in
push
js
lock
call
dec
fst
mov
ja
mov
scas
icebp
int
sub
movs
xor
rcr
ins
sub
ins
out
xor
jae
ss
mov
adc
push
(bad)
add
xchg
movs
add
mov
fsub
dec
sti
or
mov
(bad)
dec
add
shl
cmp
xor
inc
and
xlat
scas
add
shl
pusha
add
xor
pop
jbe
inc
fist
mov
push
mov
rcl
das
inc
and
stos
gs
mov
sbb
mov
pop
mul
lock
cli
cmps
pop
jmp
push
push
(bad)
inc
aaa
rol
popa
repnz
add
and
sub
out
dec
xchg
xchg
cmp
xchg
push
(bad)
fucompp
gs
sub
rcr
aam
mov
cmps
inc
or
dec
or
and
add
fbld
inc
push
or
sub
ins
clc
rcr
arpl
add
cli
jl
or
popf
inc
xchg
sbb
cld
aam
sub
mov
sbb
push
jnp
mov
and
sbb
(bad)
and
ret
shl
test
or
scas
push
nop
push
xchg
jp
movs
cmp
pusha
push
xor
adc
adc
inc
aas
sbb
and
dec
dec
lods
dec
mov
test
shl
in
popw
cmps
mov
imul
ret
addr16
jo
fisttp
out
dec
pop
scas
mov
pop
mov
or
into
mov
rol
dec
and
call
xchg
dec
pop
cmp
dec
push
movs
inc
jnp
jnp
mov
rcr
xor
fadd
and
scas
das
add
ins
ret
fadd
outs
add
dec
loopne
jge
in
mov
out
cdq
ss
mov
mov
xchg
rcl
cmps
cli
fidiv
inc
pop
bound
aad
sar
cmc
push
cmps
imul
or
sub
cmp
jl
mov
test
lods
cmps
shr
xor
sub
mov
or
addr16
jmp
dec
ja
shl
imul
lahf
and
in
adc
mov
add
ud0
sbb
ja
dec
add
adc
call
daa
lock
add
sbb
rcpps
(bad)
int3
add
push
push
or
mov
adc
or
dec
fs
in
jnp
enter
stc
lea
movs
mov
push
cli
addr16
sub
lds
mov
xchg
mov
sbb
or
cld
mov
mov
sbb
or
mov
or
sub
xor
jl
push
push
sbb
cmp
js
rcr
jns
pushf
add
pop
fcomp
push
xchg
nop
jo
push
pushf
or
sahf
cmps
ds
(bad)
(bad)
cwde
pop
add
ret
shl
fsubr
pop
pop
lea
jnp
jp
test
retf
push
push
add
movs
scas
test
pop
movs
pop
push
jl
and
stc
rol
or
pushf
fisttp
adc
inc
cmp
stos
fstp
push
inc
xchg
sub
mov
clc
into
jp
dec
movs
pop
mov
imul
test
ins
xchg
dec
mov
nop
jge
add
fisttp
mov
loopne
add
loope
jl
jb
push
lea
stos
mov
pop
mov
ret
jno
lahf
sbb
(bad)
jnp
test
mov
(bad)
rcr
jg
jmp
mov
in
mov
sbb
adc
test
pop
(bad)
inc
inc
adc
inc
dec
fsub
scas
sahf
mov
rcl
push
inc
clc
call
xor
repnz
xchg
xlat
cmp
adc
fdivr
xchg
scas
xchg
sbb
inc
mov
inc
mov
dec
aad
inc
daa
or
sbb
ds
hlt
icebp
mov
push
call
pushf
jns
in
add
add
test
daa
(bad)
pushf
add
mov
pop
xlat
lods
hlt
dec
push
sar
xchg
pop
popf
xor
cmp
cld
adc
ja
aam
test
mov
xchg
push
or
cdq
pushf
push
nop
fadd
jmp
cmp
jae
cli
push
sbb
sub
sub
lea
fstp
or
jl
mov
push
pop
js
rcr
push
sbb
gs
(bad)
rcl
pop
add
push
sti
dec
xchg
or
mov
ror
sbb
cmc
jg
xlat
pop
cld
cmp
cmps
cwde
or
pop
pop
mov
comiss
sbb
pop
and
mov
mov
dec
mov
pushf
push
cmp
jb
cmp
dec
imul
int3
add
dec
clc
cdq
out
jp
dec
pop
inc
aad
push
outs
daa
xchg
mov
aas
nop
or
punpckhdq
xor
pop
push
neg
jno
adc
int3
ins
and
mov
in
sub
push
jns
popa
mov
aam
add
xchg
fisub
and
cwde
call
cmps
sub
in
sub
sub
inc
mov
mov
xchg
fist
mov
xor
jnp
push
fnsave
stos
inc
fdivr
fmul
loop
sub
xor
pop
shl
pushf
jmp
adc
sub
pop
pop
sub
or
les
ins
iret
ret
push
push
mov
out
mov
or
push
test
inc
in
or
outs
sub
or
cdq
and
sub
mov
or
xchg
xor
mov
mov
dec
int
scas
and
adc
jmp
cmp
xor
les
dec
int3
leave
icebp
adc
lea
add
fisubr
sahf
ja
cmp
cmp
cdq
cld
les
pop
ins
xchg
adc
les
adc
ins
mov
out
inc
ja
sub
dec
inc
mov
push
int
cmp
es
bound
push
and
in
or
inc
sahf
rcr
adc
test
and
movs
mov
dec
mov
fcmovbe
push
add
fwait
mov
pop
retf
add
add
jle
mov
ins
not
aam
je
loope
and
ror
and
and
adc
sti
xchg
dec
push
jmp
mov
cmp
(bad)
mov
mov
inc
shl
test
dec
outs
sub
mov
push
stos
dec
aam
push
sub
push
dec
int
pop
sbb
fldcw
mov
sub
mov
shl
cdq
mov
and
fwait
jl
ins
jl
movs
sub
or
add
adc
mov
mov
sub
fwait
mov
loopne
fisttp
mov
cmc
xor
inc
mov
mov
jg
ins
inc
jae
lea
call
pop
adc
mov
retf
(bad)
jnp
or
inc
xor
test
push
push
and
imul
in
sub
addr16
jae
inc
movs
xchg
iret
ds
in
loopne
mov
adc
sbb
cmps
adc
jae
or
inc
(bad)
pop
ret
sub
je
pop
xor
xor
adc
mov
sbb
inc
test
je
mov
jg
loop
jmp
mov
outs
cld
mov
dec
retf
imul
mov
daa
iret
cmp
test
adc
mov
cmp
ins
mov
adc
fst
cld
fs
pop
xchg
mov
inc
shl
mov
adc
loopne
popa
jmp
jo
in
cmp
push
xlat
(bad)
scas
push
pop
mov
mov
ja
movs
and
in
push
cld
daa
or
lods
iret
jb
dec
fistp
dec
or
mov
sbb
jmp
dec
(bad)
mov
aas
ds
mov
pop
or
or
pop
ss
in
sbb
or
std
fadd
retf
or
leave
fdiv
les
loope
lahf
cdq
add
pop
mov
stos
ds
and
mov
neg
xlat
push
out
mov
push
lahf
loop
sbb
loopne
and
(bad)
out
and
sub
retf
adc
mov
rcl
pop
mov
je
mov
ja
ror
shr
lock
sub
cmp
out
fcomp
gs
mov
jne
push
mov
in
sbb
ds
and
mov
rcl
icebp
pop
mov
mov
sbb
xchg
or
nop
pop
shl
clc
shl
ror
into
call
add
sub
ins
outs
mov
inc
adc
dec
cmp
stos
mov
rcl
(bad)
fdivp
call
adc
jecxz
sub
mov
mov
aam
xchg
gs
pop
stos
mov
pop
mov
lahf
and
clc
loope
(bad)
and
push
movs
or
les
int3
or
inc
mov
cmp
hlt
inc
mov
mov
jns
or
stc
or
mov
ins
jo
test
mov
mov
aad
sub
or
dec
mov
retf
pushf
cli
xor
aas
cmp
ror
pop
or
ja
cli
pop
mov
xchg
retf
sub
jmp
sub
dec
ror
les
adc
or
lock
pop
or
cmp
fidivr
ins
out
adc
das
ror
pushf
jge
fcom
ret
xchg
aad
std
xchg
and
dec
arpl
std
mov
adc
test
push
sub
nop
cmp
xchg
gs
ficom
xchg
push
push
loop
push
mov
push
adc
lea
sbb
imul
in
push
xchg
xchg
(bad)
jb
mul
inc
fwait
ja
jmp
fcom
(bad)
push
cmp
test
push
cmp
test
cmp
lock
(bad)
push
mov
mov
(bad)
out
mov
push
pop
ja
sub
clc
mov
shl
sahf
pop
mov
and
pushf
xor
inc
sub
cmp
or
add
cmps
xchg
and
(bad)
and
movs
xor
ret
(bad)
xlat
pop
push
cs
popf
cli
cmp
jmp
inc
add
pop
jnp
inc
sbb
pop
mov
dec
cmp
pop
clc
sti
or
dec
jp
pushf
sub
mov
mov
inc
lock
mov
sbb
movs
bound
mov
and
mov
mov
cmp
fcmovnb
jp
sahf
xor
sub
cwde
xor
(bad)
daa
imul
adc
push
popa
ret
pop
aaa
adc
xor
adc
add
pushf
and
jl
push
ins
dec
push
mov
movs
inc
xor
xchg
pop
popa
jne
arpl
out
mov
cld
sar
(bad)
or
mov
pusha
push
fucomp
mov
push
sub
or
leave
in
mov
pop
jbe
add
ja
dec
sar
in
adc
dec
clc
fadd
xchg
shl
push
push
int3
or
hlt
mov
xchg
ret
mov
jmp
push
xchg
inc
jg
ficomp
ficom
mov
mov
ins
leave
xchg
xlat
pop
push
sahf
jnp
aaa
mov
jle
cmps
or
loopne
cmp
xor
and
inc
repz
cwde
hlt
jl
(bad)
dec
es
jl
xor
jnp
cld
leave
(bad)
dec
data16
fs
hlt
nop
cli
dec
xor
stos
xchg
loopne
jmp
xor
fwait
cmp
fsub
aas
adc
scas
movs
and
lods
(bad)
neg
jmp
pop
xor
sti
mov
fdivr
dec
sahf
inc
out
dec
sbb
repnz
lods
add
inc
push
lea
ja
sahf
ret
sbb
retf
mov
dec
jns
fsub
xor
loopne
test
jp
jno
push
inc
mov
hlt
jl
or
mov
(bad)
inc
std
inc
xor
int3
fnstcw
mov
inc
sub
dec
pushf
cmp
mov
fsubr
loopne
add
mov
movs
repnz
retf
add
lods
fidivr
stc
mov
xchg
iret
fwait
imul
or
jno
pushf
ins
inc
push
mov
test
mov
(bad)
sti
and
adc
cmps
mov
jae
jmp
adc
addr16
dec
sub
(bad)
in
sbb
out
sbb
repnz
outs
mov
push
or
out
rcr
mov
push
sub
adc
mov
xor
cmp
ds
ins
int
sub
fsub
and
mov
sahf
mov
sti
inc
test
cmp
add
pushf
cmp
dec
sub
cs
es
adc
and
xor
mov
xor
and
in
cmp
cmp
mov
add
scas
popa
dec
xlat
push
pop
daa
xlat
sti
and
mov
sahf
scas
arpl
and
or
lea
test
adc
add
div
cwde
ds
inc
mov
pop
mov
xor
hlt
out
sub
xrelease
sbb
dec
cwde
xchg
push
pop
pop
or
xchg
adc
pop
ss
push
jbe
xor
push
int3
jno
cwde
xor
rcr
les
mov
out
fwait
push
sub
pop
or
sbb
pop
movs
mov
jno
xor
scas
sbb
repnz
fnsave
cmp
fstp
mov
mov
push
dec
cmp
in
inc
pop
add
in
xor
loopne
ins
adc
lahf
rol
sbb
cmps
loop
stos
fnstsw
jno
xor
push
retf
or
movs
cmp
aam
and
adc
pop
aaa
mov
stos
cdq
xlat
es
mov
sbb
dec
pop
push
inc
jge
aam
mov
push
jnp
pop
mov
mov
clc
mov
int3
xor
mov
dec
xor
and
nop
and
and
xor
aas
jnp
sar
xchg
cmp
dec
retf
inc
in
loopne
lds
dec
popf
push
or
mov
call
mov
dec
cmp
jae
lds
(bad)
retf
test
jmp
xchg
xchg
xchg
mov
mov
jl
imul
aaa
adc
pop
mov
cmc
(bad)
outs
inc
xlat
push
mov
sahf
loope
xchg
sbb
or
dec
ins
fldcw
jmp
dec
xor
out
push
mov
push
and
rcr
fwait
or
push
fimul
fs
retf
lock
or
push
loop
jns
mov
out
pop
test
xchg
cmps
fwait
gs
xchg
fs
ja
rol
test
sbb
mov
ja
mov
dec
inc
(bad)
xor
push
jecxz
push
aaa
repnz
jg
xor
inc
mov
sbb
mov
push
fisub
ror
jle
(bad)
sbb
push
jno
ja
adc
loope
test
retf
outs
ror
xor
rcl
and
clc
jmp
jle
mov
cmc
aam
push
dec
test
push
push
cmp
shl
sub
outs
add
add
push
push
sub
add
mov
mov
ds
push
fidivr
fldcw
fcomp
and
and
sbb
mov
xor
bound
xchg
lods
push
cs
xchg
mul
daa
pop
stos
sbb
mov
je
jo
sbb
fidivr
test
lock
push
dec
dec
mov
inc
xor
ins
loope
stos
jmp
cmps
adc
scas
jmp
std
push
add
in
jmp
or
pop
pop
(bad)
dec
lea
mov
movs
add
test
mov
repz
(bad)
aam
aad
ror
pop
std
lods
cmp
cmc
sub
push
ret
leave
pop
es
xor
xchg
push
(bad)
sbb
dec
inc
mov
ror
ss
sbb
adc
stos
popf
adc
stos
mov
in
mov
pop
sub
shl
mov
xchg
sub
xchg
xchg
jmp
mov
nop
pop
loopne
jp
fadd
jb
pop
lds
sub
(bad)
jbe
stos
test
mov
std
xchg
push
mov
push
and
or
dec
in
cmps
ret
cmp
xlat
mov
push
dec
pop
xchg
adc
cld
mov
dec
and
inc
fdiv
dec
mov
cdq
out
mov
and
add
or
ins
mov
pop
pop
int3
in
adc
outs
jge
cld
aaa
pop
sub
and
adc
adc
and
fxch
movs
xor
or
daa
pop
call
bound
shr
inc
shl
(bad)
pop
nop
pop
push
out
ds
cmp
cs
mov
mov
sti
pop
es
pop
test
daa
repnz
sub
jb
mov
mov
mov
sub
ret
and
stos
ins
and
test
jno
enter
or
pop
jle
int3
cmp
pop
sahf
pushf
test
sbb
fdivr
ds
mov
push
cmp
push
jb
xchg
pop
stc
xchg
sub
cmp
fidivr
jmp
(bad)
mov
(bad)
jle
adc
xchg
pop
mov
dec
ja
cwde
inc
lds
mov
push
sbb
xchg
fcmovnb
rcl
cwde
push
ins
mov
enter
jnp
push
mov
stos
cmp
sub
mov
cmp
enter
inc
adc
xor
mov
push
loopne
jmp
jb
push
pop
addr16
call
iret
pop
ins
lea
outs
std
mov
(bad)
mov
pop
pop
andnps
sahf
add
pop
sbb
adc
and
inc
int3
xchg
push
jb
ret
jge
gs
in
loope
in
cmp
ret
(bad)
(bad)
or
inc
mov
retf
scas
inc
nop
mov
daa
mov
jmp
ja
call
mov
pop
cmp
call
aaa
xor
pop
je
xchg
je
adc
push
jo
sar
sub
gs
out
jns
in
add
ret
pop
mov
hlt
cld
fadd
shr
or
out
push
inc
sub
jno
push
xor
ja
xchg
sti
outs
push
adc
or
movs
jb
call
popf
inc
test
fiadd
sub
retf
inc
cmp
aam
lock
pop
arpl
and
(bad)
in
(bad)
mov
(bad)
call
cmps
add
jns
cmp
adc
idiv
adc
xlat
cmp
xor
pop
adc
inc
imul
rcl
jns
rcl
xchg
pushf
pop
sub
xor
push
xlat
and
mov
push
dec
out
mov
cmp
jo
jae
push
add
sbb
mov
shr
mov
iret
add
push
loopne
push
jmp
jmp
or
inc
outs
shl
and
jg
es
(bad)
scas
cdq
ins
shl
(bad)
nop
mov
add
fwait
mov
das
push
int3
hlt
aam
xchg
adc
inc
inc
in
imul
mov
popa
lods
jl
nop
in
dec
dec
in
(bad)
(bad)
fsub
push
xchg
lods
mov
loopne
dec
mov
dec
cmp
ins
jbe
xchg
cmc
popa
cwde
dec
jmp
arpl
dec
push
or
ins
jne
xchg
xchg
mov
push
ins
ret
pop
sbb
mov
mov
fst
pop
mov
das
push
mov
repz
pop
dec
pop
pop
(bad)
sub
sub
xchg
loope
repz
inc
jnp
mov
fdivr
jge
(bad)
jbe
mov
ins
xor
mov
push
sub
aad
imul
faddp
push
sbb
and
sbb
in
cmps
dec
fwait
pop
adc
cld
jae
inc
cmps
dec
sti
retf
sub
test
lods
(bad)
dec
cmp
sbb
loop
rol
jns
pop
and
cmp
fwait
ror
dec
in
cwde
adc
inc
mov
sub
mov
int3
push
push
(bad)
fisub
aam
fisttp
outs
dec
loopne
out
cs
daa
sbb
mov
push
lea
dec
or
(bad)
(bad)
fimul
pop
inc
or
(bad)
std
add
push
fadd
outs
and
adc
jae
jnp
std
adc
xor
es
adc
in
mov
ret
hlt
jo
cdq
add
cmc
into
(bad)
jle
jnp
call
fmul
jns
push
mov
mov
inc
mov
in
xor
fdivr
fisub
sar
push
das
cli
fcmovnu
inc
adc
jbe
cmps
div
lods
popa
dec
mov
addr16
jnp
(bad)
mov
xchg
int3
daa
xor
inc
mov
fstp
mov
xor
lock
sti
push
xchg
add
push
xchg
adc
fsub
add
push
dec
mov
mov
mov
sub
add
pop
cwde
or
mov
lock
xchg
loope
call
and
adc
xchg
push
pop
sbb
imul
pop
cmc
sbb
mov
imul
lea
sbb
pop
dec
pushf
mov
movs
adc
aaa
mov
stos
mov
(bad)
push
fcomp
scas
sub
(bad)
pop
shr
idiv
gs
mov
(bad)
push
not
cmp
sbb
in
rcr
int3
cmp
fnstenv
xor
adc
jl
adc
ret
and
nop
pop
cmp
cmp
mov
mov
lock
xchg
dec
repnz
(bad)
out
xlat
fidiv
dec
fcom
inc
cmc
aam
outs
mov
mov
pop
cli
inc
mov
cmps
cmp
mov
push
jae
mov
lock
pop
ins
xchg
nop
jnp
pop
mov
cmps
mov
jmp
shl
mov
xchg
cmp
sbb
xchg
mov
aas
jl
pop
pop
into
stc
cmps
sub
and
push
push
(bad)
pop
cld
test
mov
mov
adc
call
jae
div
stos
pop
in
fmul
hlt
cdq
sub
sbb
pop
rol
aam
xchg
jbe
pop
jmp
cmp
(bad)
pop
sbb
pusha
inc
sar
push
xchg
mov
fcom
stc
loopne
scas
nop
mov
sbb
xlat
retf
dec
out
push
push
in
or
push
adc
add
shr
fmul
xor
sti
jnp
ja
cmp
pop
jno
dec
test
cmps
cwde
lods
ds
xchg
dec
clc
es
out
in
cmc
inc
inc
lods
(bad)
retf
repz
jns
dec
loopne
xor
mov
xchg
dec
out
mov
les
iret
out
dec
fucomp
ss
add
test
dec
fstp
or
push
test
cmps
mov
aaa
or
les
jl
outs
(bad)
mov
test
stos
mov
xlat
rcl
jmp
je
xor
ret
adc
sbb
push
imul
loopne
rcl
xchg
fisubr
pop
call
xchg
fimul
add
push
pop
pop
sbb
cmp
ja
cld
sbb
sbb
test
shr
int3
mov
out
outs
dec
add
dec
cmp
retf
push
pop
loopne
(bad)
ins
push
cmps
and
pop
jl
cld
daa
cli
jmp
add
fimul
dec
or
mov
(bad)
rcr
pop
out
mov
sbb
ins
mov
test
sub
dec
jne
inc
div
test
ds
adc
shl
cmp
cmps
cwde
dec
pop
loope
add
adc
retf
push
and
dec
sbb
mov
div
(bad)
in
aaa
gs
stc
aaa
pop
mov
jnp
cmps
dec
jge
lds
in
mov
stc
jl
fistp
idiv
fnstenv
pop
pop
cwde
(bad)
push
cli
dec
(bad)
mov
dec
jnp
addr16
cld
test
add
lds
sbb
out
pop
sbb
jl
es
test
movs
add
lea
push
and
and
inc
pop
dec
pop
rcl
and
jl
inc
(bad)
stos
fcom
out
clc
push
and
cmp
mov
pop
mov
push
and
mov
dec
sbb
stos
leave
push
cli
outs
mov
lods
fwait
outs
shl
lahf
popa
sbb
popf
mov
fist
xchg
addr16
cmp
mov
push
mov
push
or
dec
add
bound
sub
add
repnz
push
jb
and
mov
test
inc
jne
(bad)
outs
inc
cmp
popa
dec
stc
mov
mov
gs
scas
dec
ins
int3
test
outs
mov
lea
xor
aas
jle
inc
fst
les
mov
popf
mov
(bad)
and
xor
aad
dec
push
lahf
jle
call
test
xor
(bad)
cld
(bad)
jle
inc
add
sbb
outs
and
movs
ja
cwde
cdq
pop
or
inc
test
bnd
lahf
dec
dec
div
or
arpl
jno
add
push
(bad)
(bad)
icebp
fld
mov
cmp
mov
mov
dec
add
add
daa
and
stc
sbb
mov
(bad)
fwait
pop
addr16
ret
data16
cmp
sbb
add
repz
mov
(bad)
xchg
inc
inc
test
or
loope
inc
addr16
shr
sub
pusha
push
cs
sub
pusha
ror
push
ds
rcl
ret
sar
xor
maxps
mov
xlat
mov
sub
cmp
xchg
call
out
and
mov
(bad)
jge
pop
int3
lods
ins
inc
fsubr
jl
fs
sbb
mov
lahf
mov
mov
jmp
pushf
cmp
fcmovnbe
xchg
xor
test
stos
icebp
xor
mov
(bad)
cs
mov
or
mov
add
cmp
pop
dec
pop
shl
or
call
(bad)
dec
popa
cmp
add
shl
jno
in
dec
(bad)
lods
popf
mov
loop
mov
inc
cdq
(bad)
fstp
cmp
adc
and
sti
dec
lds
pop
pop
xchg
jp
xlat
and
outs
retf
add
sub
adc
jo
sbb
pop
sbb
ds
in
inc
mov
stc
xor
sar
aam
add
mov
inc
sub
push
mov
retf
push
in
adc
shr
mov
mov
mov
(bad)
and
sbb
fldenv
(bad)
dec
or
xor
cmps
or
in
or
(bad)
push
fwait
imul
fwait
sbb
(bad)
lock
pop
(bad)
cmp
dec
loopne
inc
mov
out
adc
jbe
cdq
retf
push
xchg
xlat
arpl
add
inc
int3
(bad)
add
pop
xor
stos
mov
stos
shl
fwait
mov
(bad)
int3
and
jmp
adc
add
add
pop
fincstp
out
xchg
inc
popf
(bad)
repnz
ja
mov
popf
and
cmp
sar
push
or
push
pop
mov
stos
jle
pop
mov
cmp
imul
mov
xchg
sti
fisubr
jnp
push
pop
(bad)
daa
out
out
nop
leave
xchg
pop
loope
mov
xor
popf
movs
mov
cmc
aad
in
(bad)
retf
pop
test
mov
mov
sub
adc
pop
rcr
stos
fdiv
pop
pop
movs
and
add
dec
rcr
sub
sub
mov
xchg
add
pop
cld
inc
(bad)
xor
fcmovb
call
ret
fild
call
mov
shl
pop
inc
jns
xlat
jns
push
es
loopne
jmp
push
mov
ror
shl
lods
push
jle
xor
inc
and
sub
stc
inc
stc
dec
rcr
adc
dec
pop
(bad)
sub
inc
add
adc
enter
mov
mov
ins
sahf
std
mov
bound
push
out
es
lock
lahf
(bad)
cli
xchg
mov
mov
add
mov
sti
xchg
dec
or
out
shr
mov
cld
sub
dec
mov
add
mov
mov
mov
jg
xchg
add
mov
call
mov
mov
sub
xchg
xor
xchg
(bad)
ret
pop
aas
adc
dec
aad
dec
stos
push
inc
mov
cmovle
and
mov
or
imul
xchg
mov
jl
push
push
call
jno
dec
jbe
xchg
dec
or
nop
push
out
xchg
or
adc
popa
dec
gs
cmps
mov
cmp
jb
lods
out
outs
test
mov
ret
add
jmp
add
outs
repz
ffreep
sub
inc
add
ins
jl
out
inc
(bad)
in
icebp
xlat
add
mov
pop
jge
sub
xor
push
mov
or
jmp
sbb
aaa
shl
add
repz
and
add
push
add
xchg
js
leave
pusha
add
fimul
imul
jbe
jmp
addr16
inc
or
movs
sub
dec
mov
sbb
into
call
xor
mov
mov
sahf
icebp
arpl
sub
mov
sub
arpl
repz
outs
loope
mov
clc
test
int
cmp
(bad)
inc
mov
pop
lods
(bad)
jmp
inc
inc
sbb
cmp
sub
add
mov
pop
inc
mov
fsub
inc
sbb
sti
mov
popf
sub
outs
lea
xchg
arpl
lds
mov
mov
(bad)
jnp
sti
cmp
outs
cdq
out
ins
jg
push
sbb
aas
es
mov
outs
sub
pusha
aam
test
inc
cld
mov
mul
adc
jmp
mov
(bad)
arpl
pop
push
mov
dec
push
sub
dec
lock
cld
inc
and
adc
movs
lods
jne
aas
xchg
js
test
imul
jbe
jl
add
shl
add
jo
mov
call
xor
push
mov
mov
fstp
xlat
fist
aaa
pop
lods
ficomp
pop
arpl
loop
xchg
mov
cmp
repz
mov
cdq
es
pop
or
dec
dec
mov
rcr
sub
push
cmp
dec
jp
popf
scas
daa
mov
mov
shl
imul
or
xchg
jmp
cmp
push
pushf
dec
cmps
(bad)
mov
pushf
outs
mov
fist
(bad)
sbb
adc
loope
lods
jno
dec
add
or
out
add
push
mov
rcr
out
pop
repnz
ds
dec
or
stos
mov
stos
sub
push
aaa
shl
lds
cwde
jecxz
inc
call
xor
ds
dec
add
adc
ror
aad
repz
lock
retf
fstp
mov
out
outs
into
pop
mov
scas
jb
pop
mov
cmps
loopne
std
cs
dec
mov
out
pop
and
add
adc
into
in
divps
mov
sar
fld
mov
sbb
test
mov
jle
or
aaa
sbb
cli
jecxz
call
aam
stos
adc
aaa
jecxz
mov
dec
call
or
xor
mov
mov
xor
test
jmp
mov
lds
pushf
and
dec
xchg
fidivr
push
xchg
fisubr
push
daa
das
(bad)
mov
fcom
loopne
jecxz
sti
pop
jge
add
inc
pop
imul
sub
mov
(bad)
scas
xchg
cdq
and
sbb
cmp
pop
cs
push
adc
sub
sbb
jge
daa
xchg
adc
mov
std
cmps
fbld
mov
pop
hlt
sti
cwde
ror
mov
dec
in
(bad)
iret
aam
ret
mov
cmps
scas
push
adc
mov
jg
mov
rcr
dec
lods
cwde
fwait
add
das
stos
xor
ins
cwde
pop
sub
iret
cmp
test
sar
pop
dec
xor
add
(bad)
inc
pop
ins
int
push
ins
jno
push
and
push
imul
inc
add
in
je
push
mov
mul
cmp
jae
jmp
pop
nop
push
(bad)
pop
lea
ficom
add
aam
lock
mov
push
push
jae
int3
push
movs
stc
retf
mov
lea
xlat
or
mov
(bad)
push
xlat
dec
shr
pop
mov
repnz
mul
inc
ficom
and
mov
dec
pop
mov
pop
push
mov
mov
fdivr
fcom
sbb
(bad)
mov
xor
pop
test
addr16
mov
jge
scas
sub
ficomp
push
sub
jb
mov
and
adc
inc
jnp
adc
fcmovne
sti
and
loop
add
inc
and
cmp
mov
popf
pushf
mov
sbb
jl
jmp
mov
in
sbb
sbb
inc
jbe
test
rcl
clc
ins
mov
lahf
sub
push
xchg
push
sub
mov
jge
cwde
xor
imul
cwde
or
dec
mov
or
test
dec
and
iret
and
mov
cmp
and
movs
loopne
mov
rcl
jae
cli
stos
sti
retf
inc
aas
pop
fsubr
call
mov
imul
ror
mov
pop
(bad)
aad
mov
stc
mov
pop
loopne
mov
pop
pop
loopne
test
jne
pop
sub
or
push
sti
outs
dec
sub
xlat
aad
jp
aaa
icebp
adc
add
xor
(bad)
inc
(bad)
push
ror
call
ins
pop
iret
mov
stos
xor
fcomp
out
ins
inc
rcr
xchg
or
std
and
xchg
mov
dec
repnz
out
pop
out
ror
dec
or
pushf
mov
inc
mov
inc
xchg
(bad)
pop
outs
adc
ja
xchg
(bad)
cmc
popa
pop
adc
leave
fwait
push
dec
mov
xchg
int
imul
add
in
fsubr
add
pop
jp
imul
xlat
mov
mov
pop
or
mov
push
pop
xor
adc
add
ins
ret
adc
cmps
outs
xchg
mov
jne
cmc
icebp
adc
mov
stc
add
fcom
inc
xor
pop
cs
aaa
push
pop
dec
mov
test
nop
or
lahf
pop
fcomp
pop
psraw
and
(bad)
push
ficomp
adc
bswap
fdivr
sbb
icebp
nop
icebp
lock
adc
pop
lfs
push
xor
mov
(bad)
mov
fs
cmc
mov
or
dec
in
dec
jno
dec
int3
outs
(bad)
jae
pop
mov
xchg
pop
fldenv
cli
push
imul
(bad)
int3
adc
shr
adc
and
pop
xor
inc
lods
iret
inc
jecxz
mov
add
loope
pop
pop
mov
xor
(bad)
pop
push
iret
mov
rcl
das
jl
sbb
(bad)
sub
cmp
add
or
imul
push
inc
lea
add
xchg
mov
xchg
in
xlat
and
in
leave
enter
cwde
sti
mov
inc
sub
(bad)
jp
xchg
cli
add
aaa
(bad)
sub
mov
sbb
sub
popf
push
sbb
mov
inc
pushf
xor
inc
and
or
sbb
mov
add
mov
addr16
pushf
std
pop
pop
push
adc
jmp
mov
stos
sbb
pop
or
cmp
add
jge
dec
idiv
push
inc
or
fistp
mov
ss
(bad)
rcr
mov
inc
adc
cmps
int
add
pop
fiadd
push
daa
pop
jo
stos
pop
ins
cmp
into
push
sbb
xor
mov
cdq
dec
sar
or
lahf
mov
stos
stc
sub
xchg
pop
cmp
icebp
in
xchg
imul
xchg
inc
push
sbb
push
lods
push
pop
hlt
rol
loop
pop
dec
pop
sub
jp
mov
xchg
pushf
xchg
out
lock
in
cli
add
imul
out
pop
ss
push
dec
sub
and
cmp
mov
sbb
imul
lods
leave
fisubr
adc
int
call
in
pusha
es
and
test
sub
mov
mov
idiv
lods
pushf
dec
ja
dec
mov
xchg
add
cmp
adc
lea
mov
cmp
pop
push
xor
bsf
int
or
test
inc
mov
jge
pop
inc
pop
aas
pushf
push
sbb
int3
aam
push
(bad)
fisttp
out
enter
fwait
pop
or
jnp
adc
test
(bad)
sub
shl
iret
aas
repnz
cld
lds
cmp
pop
pop
stos
jge
mov
(bad)
fsub
(bad)
mov
mov
mov
test
fidivr
ins
push
xor
and
ror
shr
int
push
and
mov
test
mov
call
xchg
xchg
mov
movs
icebp
jg
jb
dec
jecxz
call
dec
xchg
jb
lods
ins
fsub
pop
rol
jge
in
jnp
sub
push
mov
jl
sar
sbb
in
aam
daa
into
cmp
pushf
push
push
out
mov
mov
jmp
and
dec
xor
in
pop
pop
jge
xchg
push
shl
inc
cmp
test
js
pop
xor
mov
mov
gs
or
mov
dec
and
xor
push
popa
fst
add
in
fisub
dec
fdivr
fst
pop
dec
or
neg
ror
arpl
sbb
push
xchg
sub
daa
inc
dec
movs
mov
xor
and
jne
pop
js
add
iret
ror
sbb
daa
mov
retf
stos
sbb
xor
pushf
fcomp
jmp
(bad)
loop
sbb
sub
lods
xchg
sub
push
ins
mov
inc
imul
addr16
xor
retf
mov
(bad)
fucomp
aam
inc
push
xlat
rol
push
sub
pop
out
mov
std
aam
add
sti
fcmovnbe
bswap
inc
mov
mov
dec
mov
repz
and
sbb
sbb
sub
mov
aaa
jge
or
aad
imul
pop
jp
(bad)
movs
rol
mov
adc
sub
mov
xchg
inc
fistp
cwde
sbb
je
stos
test
inc
sbb
inc
aaa
iret
xor
and
lock
add
add
cmp
stos
aad
xor
pop
cmp
jns
dec
push
iret
in
sbb
ds
push
outs
mov
pop
jmp
shl
jne
ror
ficomp
mov
fwait
push
pop
push
mov
dec
ror
fld
xor
mov
cld
retf
shl
rcr
sbb
push
pop
cmp
jecxz
aam
dec
jmp
sti
mov
std
psllw
inc
mov
lahf
pop
pop
and
int3
and
pop
cmp
jne
fld
call
ss
pop
sub
push
push
jmp
pop
ror
xor
(bad)
test
inc
xchg
pop
aas
ins
xor
mov
adc
mov
push
lock
jmp
push
pop
push
ins
xor
sbb
jle
add
mov
scas
neg
ja
mov
cmp
xchg
les
dec
and
les
adc
popa
inc
xchg
push
jge
ret
(bad)
cwde
xchg
jae
gs
int3
mov
cmp
inc
out
out
xor
sub
ds
imul
fprem
aaa
hlt
or
test
(bad)
movs
cwde
sbb
or
mov
and
rol
sahf
push
adc
sbb
pop
out
pop
or
fcomp
pop
jge
add
push
xchg
mov
pop
stos
mov
jnp
cmp
push
std
imul
mov
lahf
mov
dec
data16
call
mov
fld
and
bound
mov
arpl
mov
dec
cmps
xor
pop
les
mov
or
jbe
inc
rol
jmp
test
push
push
ds
xchg
mov
loop
imul
pop
mov
lods
add
loope
data16
test
inc
pop
xor
repz
std
pop
int
pop
jp
rcl
push
sbb
dec
jae
inc
push
cmp
sahf
lods
pushf
xchg
pop
xor
call
dec
cmc
outs
rol
dec
cmp
jnp
add
dec
mov
rcr
jmp
adc
sub
sbb
pop
dec
dec
test
inc
jno
mov
ret
sbb
pop
ds
out
sahf
jb
fimul
ror
dec
outs
popa
mov
leave
jne
mov
cmp
mov
xchg
into
xchg
retf
stos
and
sub
or
add
jae
sbb
ja
ss
out
(bad)
mov
lods
mov
(bad)
jno
mov
add
lds
cmp
pop
stos
adc
push
or
pop
jmp
call
int
stos
adc
pop
in
ins
dec
stos
inc
das
sbb
scas
test
push
scas
add
adc
mov
stos
sbb
(bad)
aaa
xchg
ja
sbb
jle
sub
std
fild
sbb
pusha
js
cmc
pop
mov
and
std
mov
rol
dec
and
add
mov
inc
fsubr
mov
push
push
adc
mov
mov
ret
aaa
out
mov
pop
xchg
and
loopne
bound
mov
mov
dec
dec
inc
and
push
mov
or
fwait
pop
repnz
and
mov
xchg
neg
mov
scas
fwait
stos
pop
pop
push
sub
mov
cmp
push
push
xchg
not
cld
shl
or
mov
dec
iret
pop
dec
add
sahf
mov
sub
outs
push
arpl
xchg
(bad)
push
xor
stos
adc
pop
inc
xchg
dec
jbe
aam
out
mov
jmp
xor
push
in
imul
shl
scas
bound
out
std
jne
jg
call
es
mov
jne
ja
inc
out
or
add
cmps
xchg
enter
or
lahf
scas
test
pop
xchg
aad
mov
retf
dec
adc
jno
mov
hlt
lea
pop
cld
or
xchg
sub
xchg
fidiv
push
or
int
sbb
(bad)
rcl
jp
stc
or
mov
fnsetpm(287
cwde
push
sti
pushf
inc
imul
in
mov
(bad)
retf
nop
adc
dec
dec
sbb
inc
(bad)
fwait
inc
adc
inc
xchg
push
cmp
pop
stos
fwait
cmp
xchg
pop
sub
push
ja
xchg
jb
(bad)
cs
adc
add
mov
inc
stos
orps
push
(bad)
test
sbb
and
mov
sbb
ror
lock
inc
loop
jns
pop
push
fmul
push
push
int3
add
add
es
mov
xlat
dec
mov
mov
mov
xor
call
or
test
xor
push
and
fprem1
push
and
stos
sti
jl
loop
pop
call
cmp
lds
cs
push
jmp
cmps
cmp
push
enter
ret
aad
loopne
ror
mov
adc
jbe
inc
sbb
xchg
inc
stos
(bad)
sub
mov
push
inc
sub
test
adc
pop
iret
fcom
pusha
and
scas
push
adc
pop
stos
push
or
ins
or
dec
cmp
mov
sub
out
dec
loopne
lds
ins
push
mov
call
out
mov
sub
imul
jnp
data16
xchg
cmp
call
dec
sbb
xor
fidivr
jo
hlt
test
push
js
mov
test
movs
ret
mov
push
leave
jge
mov
jno
jl
ins
cmp
xor
xlat
mov
sahf
enter
loopne
jmp
test
mov
and
xor
mov
and
or
push
pop
(bad)
movs
dec
popf
int3
push
dec
scas
inc
xlat
shr
loope
(bad)
addr16
dec
fnstcw
xchg
push
pop
dec
xchg
jb
mov
mov
add
push
arpl
(bad)
push
dec
pop
mov
xchg
jmp
fwait
xchg
jmp
fwait
mov
xlat
outs
sar
and
jle
xor
push
dec
das
or
jb
cli
enter
(bad)
in
daa
inc
and
sti
and
cmp
aaa
into
mov
jge
push
xor
outs
test
mov
arpl
sub
aad
xchg
dec
inc
fld
push
push
add
dec
xchg
add
jl
pop
push
push
shr
aas
or
jmp
loop
cmp
mov
cmp
ja
std
adc
jecxz
mov
cmc
fisttp
mov
nop
xchg
mov
mov
mov
mov
sbb
stc
mov
or
push
cdq
lea
mov
addr16
repz
sbb
jb
fs
or
arpl
cmc
test
dec
mul
imul
push
hlt
mov
mov
dec
repz
inc
and
mov
or
test
jmp
pop
dec
and
mov
xchg
pop
pop
sub
mov
cmp
add
cld
in
mov
in
push
jmp
mov
push
cmps
retf
loope
push
das
dec
xor
jne
mov
clc
cld
jp
loop
gs
in
push
mov
jnp
sbb
xchg
sub
(bad)
xchg
sbb
mov
daa
sahf
jb
enter
fdiv
adc
mov
add
ss
sahf
hlt
push
aam
sbb
loope
retf
leave
cdq
iret
adc
inc
fsubr
inc
mov
daa
jbe
repnz
pop
mov
jmp
push
push
scas
fnstenv
jae
jp
xlat
push
push
cmc
mov
jmp
repz
outs
nop
adc
call
pop
or
push
mov
sub
push
std
jb
inc
(bad)
pop
mov
jl
jns
inc
fs
cmps
dec
(bad)
push
repnz
lock
sahf
xor
and
call
imul
jl
jge
pop
fisttp
sub
popa
and
push
in
push
inc
xchg
fild
test
xchg
int3
ds
mov
and
mov
xchg
mov
mov
or
dec
cmp
sub
lods
retf
and
sub
sub
push
or
jmp
movs
push
enter
xor
mov
jecxz
add
push
xor
or
nop
xor
mov
stos
jmp
je
and
stos
xchg
shl
pop
pop
xchg
xor
adc
sub
ror
jnp
dec
sub
pop
gs
cwde
lea
fistp
bnd
lea
out
dec
cld
test
cld
mov
push
sahf
mov
push
mov
hlt
add
rcr
push
stos
cmp
jo
adc
imul
loope
daa
push
aad
sub
ins
outs
mov
retf
jmp
mov
cs
inc
daa
retf
xchg
dec
xor
loop
adc
mov
repz
dec
dec
add
xlat
xchg
sub
jl
xor
pop
(bad)
aaa
adc
xchg
sub
pop
ja
ret
stc
mov
xchg
and
ret
mov
mov
pop
pushf
cs
push
shl
mov
loop
ror
mov
dec
push
scas
aaa
inc
jbe
inc
popf
cmps
(bad)
addr16
fld
fld
loop
push
or
and
mov
fwait
pop
sbb
jmp
mov
xlat
cmp
mov
sar
(bad)
xchg
arpl
ror
mov
jp
rcr
push
jge
pop
mov
sbb
xor
fist
or
cmps
sbb
mov
ret
sub
stos
lock
xchg
cmps
into
stos
mov
or
cmp
jle
(bad)
mov
imul
inc
mov
push
adc
push
inc
jb
pop
sbb
in
push
into
mov
gs
ds
dec
and
lock
jns
ret
daa
sahf
enter
scas
test
mov
and
js
add
dec
lds
push
fist
mov
(bad)
fs
mov
les
ins
sub
mov
dec
stos
sbb
out
sub
rcr
mov
adc
in
shl
push
push
lods
lds
ret
mov
push
and
mov
push
(bad)
aam
pop
mov
jbe
shld
mov
std
dec
pop
ffreep
es
mov
movs
loopne
mov
call
nop
hlt
aam
sti
(bad)
jge
cs
out
loop
int
fld
xchg
popa
(bad)
pop
cs
pop
ror
(bad)
pop
mov
add
ret
pop
xor
rcr
jnp
test
call
scas
jnp
ins
ror
inc
and
push
in
push
push
fdivp
popf
fadd
enter
out
out
jb
fs
push
mov
in
xchg
loope
cli
sub
mov
cwde
dec
cmp
loopne
out
xor
dec
fdiv
aad
imul
ds
in
xlat
int
add
xchg
or
imul
lds
pop
aam
ds
or
mov
cmp
push
dec
call
icebp
aaa
mov
and
sub
add
dec
iret
sbb
mov
pop
clc
jnp
icebp
mov
fimul
cwde
jbe
push
cmp
adc
push
std
in
xlat
push
sbb
enter
aad
dec
adc
mov
and
stos
add
es
iret
or
cmp
mov
mov
pop
pusha
mov
in
fwait
xchg
inc
rol
mov
hlt
mov
sub
pop
jg
push
mov
mov
pop
test
lods
push
adc
mov
dec
cmps
mov
out
mov
jle
aam
mov
mov
jge
ins
jbe
sbb
mov
dec
cmp
lock
push
lock
pop
mov
cmps
call
jo
fisttp
dec
cwde
xlat
jge
pop
push
fsub
push
cwde
sbb
push
mov
dec
pop
in
in
push
data16
cld
fucomi
push
dec
xor
(bad)
xor
lods
mov
fsub
iret
inc
leave
mov
int
leave
jmp
dec
cdq
(bad)
loopne
cdq
xlat
and
out
aam
ficom
mov
leave
fisttp
add
or
push
add
fcmovnb
add
jl
in
xchg
jns
pushf
(bad)
push
inc
movs
lods
sub
xchg
pop
cmps
xchg
loope
add
xchg
sub
in
sbb
neg
repnz
push
mov
or
or
(bad)
cmp
dec
cmc
out
inc
xchg
xchg
sti
repz
mov
pop
jp
add
daa
xchg
xchg
pop
dec
cmp
sub
outs
(bad)
xchg
mov
xchg
pushf
mov
xor
cld
sub
pusha
jmp
jne
cdq
retf
aad
cld
hlt
dec
dec
adc
and
(bad)
mov
rol
fld
imul
adc
rdtsc
cmp
push
mov
pop
inc
dec
xchg
inc
mov
aam
lahf
ins
(bad)
fisttp
icebp
and
lods
(bad)
dec
pushf
lods
cmc
jge
dec
pop
push
nop
dec
inc
mov
sbb
daa
repnz
and
mov
icebp
sbb
and
loop
rol
int3
ficomp
xchg
loop
pop
out
cmp
pusha
adc
aam
add
mov
or
mov
popf
or
push
(bad)
stc
je
and
(bad)
(bad)
mov
pop
loop
mov
stos
clc
jle
les
repnz
jge
add
sbb
std
push
xor
and
push
jne
retf
sbb
dec
xor
jo
jnp
sbb
add
out
jnp
add
cmp
aam
push
inc
dec
in
mov
jae
xor
adc
dec
aaa
sti
in
stos
push
mov
rcr
jecxz
push
loop
add
jmp
(bad)
or
mov
int
cmp
mov
nop
shl
aas
push
and
pop
sbb
and
fisttp
outs
xchg
sbb
iret
mov
into
or
hlt
scas
cmp
sbb
jmp
les
mov
mov
push
dec
movs
bnd
in
mov
xchg
shr
jp
int3
mov
dec
xchg
or
xlat
push
mov
mov
loopne
xor
aas
pop
in
xchg
add
test
aam
repz
pop
sub
js
test
hlt
mov
out
xor
cwde
pop
jge
mov
in
adc
xchg
inc
call
mov
dec
out
xor
cmc
jmp
(bad)
leave
add
(bad)
xor
pop
mov
test
es
mov
dec
movs
jg
sub
data16
sub
and
cs
lds
sbb
aaa
int
push
mov
leave
xor
xor
xchg
outs
inc
mov
fcom
rcl
aad
add
test
jecxz
jnp
loopne
cmp
(bad)
(bad)
icebp
cmp
ins
mov
add
in
pop
cmp
and
aas
cmp
(bad)
push
push
or
cwde
push
out
jge
fs
add
loopne
mov
data16
fs
lods
sbb
xor
ret
pop
cwde
cli
or
mov
fsub
add
and
ret
pop
push
ins
int
push
mov
aam
out
lea
out
cs
xchg
movs
rcr
jnp
add
rcl
retf
mov
or
jg
sbb
cmc
cdq
(bad)
(bad)
and
shr
sbb
mov
stc
add
fld
aaa
test
dec
retf
mov
out
int3
or
jno
push
push
cli
sbb
jl
test
jbe
mov
xchg
in
mov
outs
push
and
and
mov
jle
mov
scas
pop
fsubr
add
repnz
sub
dec
dec
js
push
and
bound
retf
pop
mov
fdiv
xor
xor
shl
not
add
pop
add
dec
xchg
pushf
ins
fwait
clc
cld
push
out
push
xchg
mov
cmp
xor
data16
pop
push
test
cmp
pop
js
push
ret
aam
add
test
(bad)
xor
fild
mov
addr16
sbb
add
je
movs
mov
es
(bad)
jmp
imul
into
je
repz
mov
je
ret
int3
dec
ja
mov
push
jp
mov
rcl
jge
xchg
js
push
or
mov
shl
arpl
arpl
ja
enter
test
mov
push
int
fsub
(bad)
sbb
aad
call
ja
fdivp
inc
pop
jle
into
call
xchg
div
xor
cs
sub
xor
dec
cwde
jle
dec
inc
xstore-rng
cmps
test
push
jmp
mov
dec
or
add
push
rol
(bad)
mov
mov
pop
stc
jmp
ret
adc
mov
sub
dec
stos
cmp
gs
mov
jmp
mov
in
rcr
or
push
movs
stos
(bad)
cmp
jp
data16
mov
dec
or
xor
mov
pop
and
stos
push
jbe
repz
ja
test
std
jno
stc
mov
xor
jmp
push
inc
shl
lods
rcr
cmp
sbb
mov
add
mov
ret
mov
das
xchg
stos
adc
mov
fistp
mov
aaa
ds
in
je
fwait
les
push
push
rcl
test
aam
xchg
jg
add
into
jecxz
lock
cmps
jg
pop
cmps
daa
ja
in
retf
xor
pop
(bad)
sti
xchg
push
rol
push
adc
jnp
ficom
punpckhbw
push
mov
jl
(bad)
pop
sar
lods
and
cmp
cmovns
pushf
jmp
push
aad
dec
pop
addr16
das
loopne
loopne
sahf
add
push
js
mov
mov
addr16
push
(bad)
in
mov
or
mov
push
mov
fimul
mov
mov
outs
inc
dec
xchg
dec
ror
je
ins
add
jmp
inc
jmp
dec
and
adc
jge
cmps
mov
ins
jmp
or
push
mov
xchg
out
dec
add
xor
sahf
xchg
(bad)
push
cli
mov
cmp
loop
leave
(bad)
std
or
lods
in
fimul
pop
out
sbb
xor
test
stc
sub
scas
cmp
mov
pop
mov
lea
pop
push
repz
sub
xchg
pushf
jle
jg
scas
popa
or
out
popf
fdecstp
adc
mov
ds
iret
call
xor
out
push
sbb
or
xchg
test
(bad)
jb
retf
out
aaa
push
jmp
data16
add
xchg
fsubrp
mov
pop
fsubr
dec
push
mov
fadd
je
in
into
(bad)
aas
arpl
or
jmp
std
rcr
push
inc
and
cmp
scas
add
cmp
ret
mov
out
cs
inc
mov
inc
cli
(bad)
ja
xchg
test
mov
fs
imul
dec
add
ja
retf
popf
mov
add
mov
sbb
mov
inc
pop
xchg
mov
dec
xchg
push
jl
outs
clc
xchg
(bad)
mov
mov
cwde
jle
mov
test
aad
std
out
scas
mov
jno
ror
adc
xchg
test
outs
xor
mov
js
sbb
pop
add
mov
adc
adc
xlat
lahf
addr16
inc
(bad)
movs
dec
aas
mov
or
xlat
adc
shr
jecxz
fsub
adc
psubsw
fninit
inc
pslld
mov
and
sar
push
call
pop
es
mov
xchg
inc
cmp
mov
nop
sub
push
bound
xor
enter
cmc
mov
add
fs
mov
div
dec
mov
addr16
imul
(bad)
mov
sub
ss
xor
popa
push
mov
inc
ins
mov
mov
cmps
adc
ja
fidivr
inc
neg
inc
fadd
sar
sub
(bad)
hlt
sbb
in
mov
xlat
lods
cmp
rol
and
sbb
arpl
fistp
dec
jmp
mov
mov
dec
jo
fldcw
shr
mov
test
sbb
rol
cwde
and
(bad)
movs
hlt
fdiv
pusha
push
rol
cli
dec
add
push
dec
test
(bad)
out
add
mov
aas
jbe
xchg
aas
sub
scas
test
xlat
xor
push
pop
cmp
rcr
dec
fwait
leave
jmp
xchg
inc
outs
out
imul
add
rol
xor
mov
xor
mov
cmp
loopne
jp
pop
les
popf
inc
xchg
cmps
and
lds
mov
in
mov
pop
int3
jge
mov
dec
enter
cli
in
lods
or
je
sub
pop
and
jp
adc
jns
xchg
push
sbb
icebp
adc
push
adc
enter
test
cwde
adc
mov
dec
sbb
or
lock
jae
int3
(bad)
dec
fidiv
or
fwait
pop
daa
pushf
(bad)
and
je
adc
pop
dec
sub
inc
jle
aam
std
jmp
mov
leave
xchg
ins
pop
arpl
test
and
jge
fcmovnbe
add
push
(bad)
cld
mov
dec
sahf
out
rcr
and
inc
sbb
mov
sub
out
mov
xor
stos
jae
cwde
sbb
mov
(bad)
pusha
fwait
mov
adc
loope
mul
sbb
lock
test
adc
mov
pop
dec
jbe
push
in
xor
mov
loop
imul
enter
push
out
(bad)
cmp
sbb
xchg
sub
inc
lods
mov
inc
shl
jmp
shl
scas
add
pushf
(bad)
shr
adc
popa
pop
xchg
pop
fstp
test
(bad)
jmp
ins
xor
add
mov
loopne
rcr
push
or
shr
dec
not
div
in
jnp
(bad)
sbb
push
gs
mov
or
fisubr
ja
and
stos
push
nop
aas
add
mov
ins
push
fistp
ins
dec
dec
xchg
inc
jne
ss
fwait
test
mov
lock
xor
aam
pop
jge
test
arpl
cld
push
into
dec
jmp
xor
popa
dec
sbb
lods
and
mov
out
push
int
adc
int3
ret
mov
aad
xchg
sub
fnstenv
popf
cmp
(bad)
gs
xor
in
dec
xor
pop
lds
pop
mov
test
mov
jnp
call
pushf
push
sub
sbb
mov
shl
sbb
in
pop
add
xchg
(bad)
fcom
dec
push
aam
aad
mov
inc
push
test
call
xlat
call
adc
xchg
jl
dec
cli
jmp
movs
retf
or
call
mov
add
push
mov
xchg
loope
call
mov
bound
not
gs
xor
sub
cld
xchg
push
test
xchg
pop
popa
cmp
dec
pop
mov
mov
dec
add
and
(bad)
imul
sub
and
xchg
adc
fidivr
call
mov
fisubr
mov
adc
out
loop
xchg
shl
jno
int
fs
mov
sub
and
rcr
jmp
mov
in
sar
inc
imul
xor
into
dec
les
and
xor
arpl
daa
xchg
mov
add
outs
push
adc
ror
js
push
xlat
pop
(bad)
add
inc
not
or
fisttp
xor
mov
div
ins
imul
xlat
ds
pop
(bad)
or
(bad)
fs
dec
inc
mov
sar
daa
cmp
dec
(bad)
pop
leave
and
jns
nop
stc
(bad)
xor
dec
or
pop
sahf
je
cmp
cmp
mov
mov
pop
xlat
jbe
sar
ficom
xchg
shl
ja
sti
mov
dec
scas
(bad)
mov
(bad)
mul
cmp
push
int3
push
sub
ja
ret
push
lahf
adc
fidivr
jge
neg
pop
shl
push
sub
inc
xor
jmp
xchg
xor
dec
fisubr
ja
mov
cmp
dec
jne
mov
nop
ss
xchg
mov
addr16
jge
pop
push
sub
cmp
fidivr
adc
dec
pop
fldenv
jp
test
ret
sbb
pop
addr16
(bad)
out
loopne
scas
cs
js
sar
push
inc
stc
jg
fsub
nop
push
inc
mov
addr16
repnz
sbb
fiadd
push
mov
xor
rol
xor
pop
std
mov
in
call
aam
push
add
dec
pop
xor
std
test
add
aas
mov
shr
dec
shr
mov
dec
jle
inc
jl
les
xchg
push
fdiv
pop
or
or
es
sahf
lahf
mov
stc
push
movs
in
test
add
sbb
mov
add
or
xchg
jb
or
sahf
out
mov
push
ret
addr16
and
inc
rcl
sub
iret
je
inc
or
mov
jg
mov
add
test
inc
and
or
and
int3
ins
jns
pop
and
add
mov
psubsw
push
xor
cwde
stc
push
movs
sbb
push
jl
jp
aad
mov
and
fild
add
daa
aam
lds
call
push
pop
push
out
push
and
je
pop
dec
lahf
mov
add
stc
push
inc
ror
fucom
sbb
jb
inc
out
xchg
dec
inc
ror
sub
pop
(bad)
or
imul
and
adc
cmp
adc
pop
mov
xor
test
push
daa
mov
repnz
add
adc
sar
push
xchg
add
dec
and
shl
test
sar
cs
mov
bswap
ror
ins
inc
pop
and
cmp
mov
idiv
loop
inc
mov
fsub
(bad)
and
icebp
out
(bad)
les
aam
pop
mov
fistp
sbb
daa
cmp
mov
repnz
das
ret
mov
(bad)
sbb
pop
loopne
popa
aad
add
cmps
(bad)
stos
mov
fnstcw
add
(bad)
add
mov
sbb
sahf
imul
int
push
ins
fsub
pop
stc
add
lock
movs
xchg
loop
cwde
and
sbb
and
add
push
cmp
es
cmc
ins
aam
dec
les
repz
and
fsub
adc
mov
fwait
sbb
xchg
pushf
fwait
jmp
retf
add
pusha
dec
fisubr
(bad)
or
push
or
adc
mov
adc
(bad)
addr16
xchg
inc
xchg
cwde
xchg
movs
pop
lock
cmp
imul
push
xchg
jno
xchg
out
adc
push
cmp
pavgb
jmp
shl
add
xlat
mov
iret
movs
fimul
aad
dec
adc
fwait
gs
popa
fmul
div
in
sub
xchg
sahf
sar
popf
jg
xchg
mov
cli
fs
loop
inc
fbld
jecxz
cmp
xor
sub
jle
sbb
ja
mov
(bad)
aad
xor
inc
jmp
shl
adc
arpl
hlt
mov
call
int3
mov
or
(bad)
fnstenv
(bad)
cdq
mov
sbb
or
mov
mov
into
repnz
les
dec
adc
cmp
sub
mov
push
mov
push
xor
dec
push
outs
nop
mov
ror
in
repnz
dec
jo
jp
ret
pushf
inc
jnp
fstp
and
je
pop
sbb
mov
cmp
jg
retf
pop
inc
scas
inc
ret
jo
ss
call
push
movs
jns
jne
rol
call
sub
or
fist
test
cmp
jecxz
mov
lods
imul
push
outs
sub
xlat
and
test
sub
scas
mov
movs
in
mov
call
shr
fcom
repnz
mov
mov
pop
inc
idiv
or
sub
or
stos
pop
and
out
and
aad
jno
adc
jecxz
movs
ret
pusha
sub
mov
jge
fldcw
lods
sti
dec
in
mov
inc
inc
jecxz
(bad)
dec
popa
sahf
inc
pop
xchg
and
xor
in
ret
addr16
or
xor
mov
aas
and
mov
addr16
sbb
pushf
cmp
xor
enter
(bad)
dec
cs
mov
mov
mov
add
cmp
jno
dec
fs
dec
jge
gs
int
or
xchg
sub
xchg
stos
or
mov
jns
fld
pop
mov
pop
(bad)
pop
imul
push
mov
ins
nop
int3
aad
sub
xor
retf
inc
mov
xor
push
retf
push
lock
mov
out
dec
cli
mov
add
ds
mov
push
inc
add
fisub
cld
and
sub
mov
mov
sbb
jno
pusha
pop
daa
rcr
pop
cmp
fwait
xor
repnz
call
imul
je
sahf
arpl
adc
nop
shl
pop
mov
xor
into
test
std
fsqrt
test
adc
lock
and
cmp
sub
cmps
mov
dec
pop
je
idiv
jl
nop
cmp
sub
xor
mov
(bad)
xor
add
das
stos
mov
inc
xor
rcl
mov
mov
mov
jae
mov
aas
lods
and
pop
xor
adc
and
and
push
jbe
mov
and
lds
int3
icebp
dec
(bad)
data16
fadd
loopne
sub
pop
inc
inc
adc
mov
rcl
jae
sar
inc
(bad)
retf
adc
inc
daa
rol
pop
pop
loop
or
push
in
push
call
and
xor
mov
popf
icebp
push
xchg
(bad)
clc
int3
sub
test
xchg
repz
adc
aam
jge
mov
clc
pushf
dec
dec
adc
nop
adc
mov
push
add
inc
test
mov
lods
out
pop
fild
rol
xlat
mov
iret
add
in
inc
mov
in
xchg
xchg
dec
out
xor
fnsave
out
add
mov
push
in
ffreep
frstor
in
iret
frstor
dec
fcomp
xchg
cli
fild
jmp
dec
icebp
stos
clc
cs
ret
adc
mov
cli
sbb
into
pop
fiadd
test
adc
fdivr
xor
or
pop
in
pushf
inc
mov
test
data16
pop
jmp
xchg
pop
adc
push
sub
in
ror
fnstenv
(bad)
icebp
(bad)
lock
arpl
jmp
mov
adc
dec
ficom
mov
xor
(bad)
aam
and
pushf
pop
jle
pop
test
cmp
sub
mov
pop
xchg
xchg
in
pop
lods
sar
push
lods
repnz
fdiv
mov
xchg
and
pop
jmp
lock
cli
aam
in
mov
jmp
pop
loop
mov
arpl
pop
inc
sbb
sub
int
inc
fiadd
shr
out
xor
sbb
xchg
cli
pop
stos
dec
hlt
test
into
mov
iret
aaa
sub
mov
fsubr
cmp
sti
leave
clc
daa
xor
cmovno
pop
fldcw
(bad)
int
std
pushf
xor
retf
add
jg
push
(bad)
fld
jp
cmp
push
add
and
les
pop
iret
les
or
and
cmps
pop
or
xor
xor
dec
xlat
push
inc
rol
retf
daa
cdq
sbb
mov
xor
sub
lock
sub
push
icebp
imul
xchg
(bad)
out
fmulp
movs
pushf
aam
jl
and
add
pop
cld
adc
push
dec
jnp
mov
mov
push
add
popa
add
int3
or
enter
mov
inc
xchg
sahf
adc
enter
or
les
dec
imul
jo
jmp
and
mov
mov
aaa
adc
jmp
cmp
das
rcr
mov
popf
into
cmp
or
dec
popa
test
out
push
fcomip
fiadd
jmp
mov
add
xor
pushf
xor
fwait
int3
in
add
hlt
jne
mov
jo
aaa
push
adc
mov
ja
dec
pop
ror
lods
push
sub
in
push
icebp
dec
hlt
fldcw
lahf
add
mov
xchg
pop
loopne
jae
jle
mov
mov
ret
cmp
push
(bad)
push
repz
inc
jnp
pop
(bad)
loopne
stos
push
mov
cld
inc
jbe
fst
adc
aam
mov
push
push
addr16
sub
ss
(bad)
retf
rcr
push
xor
cmp
shrd
dec
idiv
loop
js
test
add
ret
inc
push
sbb
mov
mov
sub
outs
lods
hlt
fild
retf
sub
mov
dec
push
imul
inc
adc
lea
ins
mov
pop
adc
xchg
cmp
pop
pusha
inc
cmps
xor
mov
cmc
loope
fadd
call
jl
pop
sbb
(bad)
fidiv
not
mov
xor
pop
ret
out
in
cmp
mov
mov
pop
fidivr
pop
iret
mov
call
jns
and
icebp
push
and
(bad)
xchg
mov
dec
inc
mov
sub
push
popf
jecxz
mov
cmp
mov
int
pusha
jmp
adc
fs
xchg
(bad)
jge
in
or
(bad)
mov
test
xchg
xchg
push
push
inc
pop
cmps
mov
cld
xchg
inc
scas
test
cmpxchg
push
push
push
xor
ja
in
jae
push
cli
pop
inc
cmp
xchg
popf
iret
out
rol
jo
push
ins
sub
data16
push
les
pop
and
adc
dec
jnp
adc
sbb
les
mov
mov
xchg
sub
loope
xor
sbb
sub
xor
arpl
and
push
retf
je
pop
and
or
xor
leave
sbb
mov
aad
popf
repnz
push
mov
aad
(bad)
std
mov
js
ret
cmp
stos
ret
(bad)
fst
sbb
fimul
cmp
(bad)
imul
or
and
push
pop
adc
aam
push
jge
scas
cld
pop
call
mov
int3
lods
imul
retf
add
jecxz
fisubr
ja
xor
adc
and
mov
adc
dec
jp
cmp
fidiv
mov
add
inc
cmp
or
mov
cmp
fdivr
(bad)
daa
cmp
in
mov
push
jae
mov
test
add
ficomp
aaa
adc
lahf
mov
dec
ins
cwde
mov
scas
ss
push
add
push
out
arpl
shr
pop
das
out
lods
iret
out
jg
sub
push
stc
sbb
or
cdq
lock
cmp
test
xor
dec
mov
arpl
or
mov
mov
(bad)
das
cmp
add
sbb
jne
mov
in
inc
pop
loopne
jns
cmp
paddusw
aaa
(bad)
fs
(bad)
xchg
dec
iret
out
push
pop
or
iret
xchg
or
cmp
jle
shr
mov
mov
je
xchg
aas
adc
adc
jmp
and
and
pand
sbb
dec
xor
cwde
fldl2e
mov
adc
call
fistp
(bad)
test
les
daa
out
push
cdq
jb
lods
jbe
retf
cld
lock
adc
imul
mov
fcomp
sub
sti
mov
add
loopne
pop
aam
and
lods
aam
push
imul
xchg
adc
mov
mov
add
jbe
jae
stc
js
jge
pop
call
cdq
dec
add
cmps
and
ds
or
cld
push
sub
push
outs
or
sbb
cmp
and
inc
std
or
jmp
es
popa
adc
rcr
jl
add
mov
and
std
test
or
jl
addr16
aaa
es
faddp
aas
jnp
dec
lds
mov
dec
adc
adc
push
pop
loop
test
fs
mov
xor
adc
mov
and
test
ds
pop
jge
call
pop
push
mov
jnp
dec
mov
iret
out
repnz
in
std
(bad)
das
lods
fnstenv
arpl
call
pushf
and
jp
cld
iret
adc
daa
push
xchg
push
cmp
sbb
xor
sbb
ret
lods
pop
int3
push
push
jecxz
pop
or
dec
test
sbb
mov
cmc
popf
jnp
sub
dec
rcr
push
jmp
gs
inc
jmp
leave
lods
sbb
ins
test
loopne
ss
out
adc
enter
das
cld
dec
imul
fist
ss
mov
sbb
push
iret
and
or
sbb
cmp
pop
mov
cmp
addr16
int
adc
push
jg
mov
xchg
adc
scas
rcl
jmp
call
push
aaa
xlat
shl
dec
jnp
jae
test
aas
dec
mov
mov
push
lods
push
and
scas
or
sbb
sbb
ret
fisttp
loope
and
sbb
cmp
jmp
enter
xlat
push
xchg
and
sbb
into
(bad)
into
xchg
pop
in
sbb
mov
scas
xchg
stc
cmc
jns
dec
lds
sbb
sbb
lock
cdq
mov
mov
(bad)
dec
in
or
nop
in
outs
inc
or
iret
mov
ds
pop
sub
jne
mov
mov
and
mov
loop
cld
mov
aam
push
cmp
daa
sub
cmp
xchg
xchg
psrld
or
(bad)
hlt
enter
cld
mov
pop
push
pushf
dec
cmp
addr16
add
inc
jp
mov
sub
fucomp
push
test
fs
dec
and
and
jg
imul
or
dec
xchg
icebp
mov
(bad)
add
push
fsubr
and
call
xchg
scas
sbb
sbb
pop
xor
stos
sub
sub
and
sbb
imul
(bad)
in
loopne
mov
jbe
mov
ffree
imul
push
lds
retf
outs
mov
(bad)
lds
setbe
int3
jmp
jge
dec
mov
sahf
and
mov
dec
fwait
pop
cmp
dec
in
jle
xor
push
sbb
dec
into
sub
shl
hlt
push
adc
iret
add
hlt
jg
or
jp
dec
sub
jge
inc
(bad)
sar
push
popf
test
pushf
push
lea
loope
jae
jne
arpl
sbb
icebp
xor
out
xchg
outs
mov
sbb
adc
mov
rcl
ins
iret
aam
shl
fsub
push
xchg
movzx
out
sub
sbb
(bad)
pop
loopne
ins
lahf
push
push
icebp
mov
sbb
mov
or
jl
and
sub
mov
inc
mov
pop
or
push
outs
scas
clc
lss
fwait
xchg
and
push
scas
int3
push
push
add
and
bound
aaa
and
pop
imul
dec
dec
pop
or
dec
mov
jae
inc
jmp
sub
lods
ja
jecxz
es
aad
les
stc
adc
sub
inc
ja
pop
jne
fs
adc
nop
dec
clc
dec
out
xor
dec
test
xchg
add
xchg
fwait
xchg
mov
out
jp
in
cmp
sbb
xor
stos
lahf
das
movs
mov
dec
push
popf
(bad)
fimul
fisttp
inc
mov
xchg
cli
mov
mov
pop
int3
xor
nop
sbb
push
mov
dec
and
out
pop
push
pop
inc
clc
jmp
xchg
dec
push
sub
icebp
mov
add
mov
dec
fcomp
cmp
adc
xchg
sub
xchg
xor
repz
imul
adc
jmp
inc
jmp
fcomi
cmp
dec
mov
ret
cmps
leave
mov
dec
mov
pop
cmps
fst
fadd
sbb
loop
or
or
xchg
inc
mov
mov
pop
xchg
nop
add
mov
rcl
ins
enter
push
enter
in
xor
jb
jo
nop
and
xchg
and
sbb
mov
std
aam
add
data16
sbb
sbb
leave
out
xlat
(bad)
aad
push
test
mov
mov
mov
xchg
lods
(bad)
fisttp
jecxz
call
jge
call
scas
push
xchg
or
jns
(bad)
cs
mov
fild
adc
sbb
neg
mov
les
and
pop
add
inc
stc
jmp
adc
stos
aaa
(bad)
dec
xor
pop
(bad)
sub
repz
add
sbb
mov
(bad)
daa
push
push
adc
pushf
aaa
xchg
dec
cdq
(bad)
xchg
leave
pop
call
xchg
jg
push
scas
add
fisttp
dec
lock
loop
pop
dec
sahf
jecxz
ins
adc
pop
lahf
fwait
push
jl
mov
std
dec
cs
mov
ja
sub
aaa
jg
xchg
sub
mov
shl
enter
inc
mov
jle
xchg
mov
addr16
sub
into
test
pop
dec
mov
add
loopne
loop
inc
imul
les
outs
jp
mov
out
xor
sub
shr
mov
inc
xor
das
out
(bad)
mov
xor
dec
test
cli
sbb
jbe
in
sbb
cmp
icebp
icebp
xchg
cmp
push
pop
mov
adc
int3
leave
push
cmc
and
shl
mov
aad
inc
fwait
daa
test
jae
add
inc
js
jge
mov
mov
or
loope
fadd
pop
sub
hlt
dec
rcr
xchg
std
and
cld
sub
xlat
ins
jnp
in
mov
mov
sub
add
mov
into
(bad)
push
ja
mov
cmp
cli
shl
mov
mov
jnp
mov
xor
sbb
xor
jmp
adc
push
lods
jg
mov
jb
jmp
movs
sub
jnp
cmp
adc
dec
aas
ret
div
fild
iret
call
sahf
xor
mov
test
into
ret
cmp
mov
cmp
add
lea
and
sbb
add
cli
loope
jns
outs
arpl
push
mov
pushf
pop
adc
test
jmp
pop
and
jnp
int
loope
movs
pushf
mov
icebp
fidiv
pop
ins
push
cmp
jmp
pop
dec
aaa
es
jmp
xor
push
xor
stc
sub
adc
cmp
or
xchg
sbb
std
retf
(bad)
jmp
ins
es
scas
xchg
and
mov
push
mov
pop
int3
xchg
(bad)
push
popf
xor
fild
adc
shl
jge
daa
imul
and
sub
fwait
xor
add
scas
pop
gs
aad
add
xor
in
aas
bound
(bad)
cmp
aad
pop
mov
in
xor
mov
cmp
mov
xlat
cmp
add
mov
dec
or
arpl
fild
push
sub
fadd
jge
es
mov
jno
xor
and
daa
jno
adc
dec
stos
push
push
mov
(bad)
jecxz
(bad)
loopne
addr16
pop
enter
loopne
push
mov
ins
shr
jno
xor
mov
and
jmp
dec
cmp
popf
fdiv
pushf
xchg
test
lock
push
clc
pop
ret
mov
sbb
push
pop
dec
imul
sbb
(bad)
sbb
push
lods
mov
mov
push
fwait
imul
(bad)
dec
sbb
fisttp
xchg
out
shl
mov
xchg
popf
pop
pop
mov
sbb
jl
test
dec
mov
(bad)
outs
scas
dec
adc
(bad)
mov
cmp
cmp
pop
mov
pop
loope
test
fdivr
push
add
or
int3
adc
sbb
inc
or
fstp
dec
xor
arpl
loopne
xlat
dec
(bad)
fist
ss
xchg
mov
(bad)
push
mov
int3
or
mov
mov
sub
xchg
cmc
pop
and
(bad)
xchg
jmp
(bad)
push
test
aam
xchg
outs
test
cmc
shl
dec
jb
jnp
cld
gs
iret
mov
je
adc
and
(bad)
popa
pop
inc
(bad)
arpl
lods
cmp
push
pop
add
jmp
push
sub
nop
push
imul
and
pop
mov
sub
js
cmp
in
adc
cmp
in
pusha
loopne
mov
add
jg
lods
in
cmp
mov
xchg
dec
xor
push
lds
(bad)
scas
push
test
sbb
push
shl
jp
sti
mov
jge
cmps
pop
lock
mov
fs
xlat
inc
fcom
cli
push
sbb
adc
cmp
fs
push
adc
jmp
shrd
pop
dec
ja
inc
out
iret
jge
adc
adc
push
ror
pop
(bad)
lahf
cmp
and
outs
stos
icebp
dec
ins
push
int
and
fadd
cmp
lock
cdq
loope
push
xor
inc
mov
(bad)
enter
call
imul
js
int3
dec
ud0
aam
push
mov
and
jge
dec
xor
cmp
and
push
out
shl
cmc
push
adc
add
xchg
test
push
cmps
imul
mov
mov
int
cmp
mov
sub
ins
sbb
pop
(bad)
(bad)
mov
cmps
push
cwde
mov
cs
aaa
dec
jmp
call
add
lods
cmp
call
fwait
cmp
push
sub
xchg
cmp
cmp
retf
(bad)
stos
mov
xchg
xor
push
fs
inc
std
ror
and
fistp
mov
aaa
xchg
pop
or
and
stos
aaa
or
and
add
jo
jne
inc
jne
xchg
mov
pop
jb
rcr
ret
arpl
or
(bad)
push
fcmovnb
fs
jmp
aas
fidivr
mov
sti
(bad)
mov
pop
out
sub
cmp
jp
adc
je
lods
pop
fidivr
std
pop
xchg
dec
fwait
mov
push
pop
sbb
call
mov
ins
pop
pusha
cmps
xlat
dec
loopne
aam
xchg
fild
popf
cld
dec
xchg
or
xor
out
adc
jbe
mov
pop
mov
pop
xchg
sub
(bad)
aaa
add
out
inc
add
cmp
mov
ficomp
add
loop
push
popf
repz
mov
push
sub
in
cmp
mov
nop
or
sbb
ds
aas
mov
jp
mov
cmc
pop
inc
fldcw
aam
popf
aas
dec
sar
cmp
out
ret
xor
mov
retf
pushf
call
jmp
push
xor
lods
add
fbld
mov
pop
xor
push
stos
call
int3
push
push
push
scas
je
and
jbe
(bad)
shr
pop
out
loope
adc
es
push
pop
xchg
jbe
jle
jmp
add
out
bound
xchg
dec
sbb
lods
ret
jp
mov
leave
xchg
sbb
(bad)
in
shl
(bad)
mov
jmp
sar
aam
dec
ror
sub
adc
or
ret
or
jnp
mov
mov
dec
mov
jle
mov
add
data16
int
es
dec
lock
pop
pop
and
repnz
lock
inc
sbb
addr16
dec
mov
xchg
inc
adc
mov
inc
cwde
add
mov
sti
push
out
sti
imul
fs
sti
loop
and
mov
(bad)
stc
push
sub
out
aaa
int
dec
mov
cmc
lods
sbb
jo
jnp
pop
icebp
and
jae
aad
and
cmp
sub
pop
xor
inc
mov
mov
push
in
mov
inc
or
arpl
outs
outs
mov
jnp
adc
dec
or
ja
fist
sbb
xchg
dec
xor
pushf
mov
fisubr
test
ja
xor
stc
sbb
push
shl
rcl
ins
clc
xor
mov
jo
or
xchg
push
outs
or
int
les
sti
push
in
cmp
cdq
adc
daa
push
inc
inc
xor
fsub
lods
sbb
lock
(bad)
loope
xchg
movs
popa
cs
sub
ror
inc
cmp
mov
(bad)
jecxz
movs
jnp
fild
jae
jns
pop
iret
cld
movs
push
pop
out
cmps
ins
adc
xor
cmps
cmp
xor
(bad)
ja
cdq
int3
xchg
arpl
mov
aaa
test
repnz
add
es
pop
leave
popf
test
xchg
out
cmp
push
sbb
pop
fdiv
add
dec
sti
out
push
imul
add
mov
shr
aaa
mov
adc
dec
dec
test
mov
mov
mov
xor
jo
stos
lods
sbb
or
in
pop
(bad)
push
out
mov
rcl
scas
sti
sti
(bad)
scas
jg
xor
out
sbb
pop
mov
adc
in
jp
gs
mov
pop
sahf
push
ins
xor
div
mov
sub
outs
rcl
xor
pop
mov
retf
pop
cmc
push
ret
loop
mov
mov
outs
scas
lods
dec
sub
lods
test
in
aad
jne
mov
fcomp
aam
push
addr16
outs
mov
shl
cwde
addr16
and
ins
sub
pop
pop
dec
ja
adc
fidivr
inc
fist
xor
stos
lahf
loopne
mov
sub
sub
jle
mov
mov
sub
mov
ins
pop
loop
in
dec
pop
dec
jp
inc
lods
push
push
test
push
push
test
sbb
mov
cmps
add
(bad)
adc
xchg
in
adc
xor
leave
pop
dec
or
or
inc
cld
imul
dec
jle
pop
inc
push
jmp
mov
ins
iret
inc
(bad)
adc
push
mov
mov
inc
dec
repz
mov
ins
loopne
(bad)
dec
xor
pop
dec
imul
lahf
inc
push
xchg
xchg
cmc
(bad)
cmps
shr
in
leave
or
stc
mov
mov
(bad)
and
adc
or
inc
dec
shr
ror
arpl
mov
pop
cmp
pop
dec
push
adc
dec
daa
mov
loop
mov
mov
mov
xchg
sub
aaa
push
lds
imul
ret
mov
inc
ins
sub
mov
pushf
push
inc
jl
(bad)
jmp
sahf
dec
rol
pop
pop
dec
push
and
clc
cs
inc
outs
int
mov
cmps
fmul
arpl
sub
mov
sbb
xchg
push
add
les
xchg
xlat
(bad)
enter
push
cld
pop
fcomp
inc
out
out
les
mov
imul
and
push
xchg
xor
mov
push
call
mov
lods
cmps
mov
ret
fwait
dec
and
or
add
xchg
shl
add
mov
xor
mov
pop
jmp
push
(bad)
rcr
xchg
add
jmp
xor
cld
adc
sub
mov
jnp
mov
frndint
shl
sbb
jnp
jge
pop
dec
sysret
adc
jg
shr
mov
add
push
sbb
scas
aaa
test
jmp
xchg
push
cmps
mov
in
into
aaa
add
dec
add
ins
das
(bad)
ror
rcl
lahf
or
sbb
sbb
cmc
stc
push
or
sub
dec
or
sbb
mov
xor
daa
sbb
jp
ds
jecxz
cld
ds
cdq
addr16
rcl
xor
add
or
adc
xchg
std
mov
mov
ins
outs
push
in
call
mov
xchg
xchg
add
addr16
pusha
fidivr
mov
jg
ror
jmp
dec
cld
mov
leave
xchg
popf
or
pop
sbb
mov
cdq
push
pop
(bad)
jo
daa
mov
pop
nop
push
pop
xchg
sub
sbb
clc
(bad)
xor
icebp
cmps
out
adc
fistp
mov
jmp
neg
test
pop
jmp
mov
fstp
outs
gs
outs
aam
cmp
rcr
movs
jnp
cmps
or
inc
jl
pop
fistp
xchg
jno
stos
push
sbb
and
ret
in
pop
pop
out
mov
les
enter
mov
aas
dec
pop
icebp
xchg
or
mov
mov
in
xchg
movs
aam
pop
jne
arpl
movs
inc
adc
jno
dec
(bad)
mov
ins
fild
push
dec
adc
adc
and
or
std
cdq
jl
or
(bad)
mov
mov
or
pop
popf
inc
ds
popf
scas
arpl
fld
aaa
(bad)
sti
(bad)
mov
xchg
data16
in
adc
add
mov
lds
ds
lock
mov
rol
(bad)
gs
ror
iret
inc
xor
dec
scas
xor
add
jmp
es
ins
test
mov
fmul
inc
mov
fild
adc
sbb
les
sbb
fist
pop
mov
push
xor
loope
lock
(bad)
adc
push
jmp
jae
shl
mov
das
es
fcom
adc
dec
add
xchg
jl
xchg
xlat
retf
imul
stos
(bad)
mov
xchg
push
mov
mov
pusha
add
cmp
xor
xchg
loopne
popa
ja
out
jnp
push
dec
imul
xor
ds
nop
out
and
outs
xor
mov
sub
dec
leave
mov
test
and
push
mov
add
(bad)
or
push
jns
popa
mov
sub
movs
test
frstor
pop
call
push
rol
add
or
pop
mov
pushf
fiadd
imul
or
mov
cmp
fbstp
jp
mov
out
fsub
adc
inc
out
push
sbb
pop
pop
std
jo
cmp
repnz
aad
cmp
sub
jnp
loopne
fcomip
pushf
aaa
or
mov
or
(bad)
repz
jmp
(bad)
dec
aas
jg
cmp
ret
xlat
test
adc
mov
cwde
enter
pop
clc
xchg
rcl
pop
add
xor
inc
out
sub
mov
loopne
lds
adc
lock
dec
fwait
mov
fnsetpm(287
lock
mov
xchg
xchg
dec
dec
add
pop
jp
retf
sub
stos
mov
std
stos
xchg
push
jne
mov
push
dec
retf
push
lock
ja
pop
daa
sub
arpl
jne
and
lods
out
inc
gs
cdq
add
ret
fwait
jmp
shr
mov
jmp
mov
cmp
mov
and
mov
leave
div
dec
and
add
push
adc
mov
mov
and
xchg
ins
jmp
pop
fiadd
retf
arpl
scas
retf
mov
xchg
ins
mov
ins
repnz
mov
dec
popf
cmp
lock
cmp
sbb
mov
call
sub
inc
adc
lahf
repnz
push
in
cli
dec
pop
mov
scas
add
sbb
push
sub
xchg
mov
mov
out
dec
inc
cmp
test
call
lods
jecxz
cli
inc
mov
pop
ja
sub
retf
or
push
jg
mov
ffreep
pop
gs
(bad)
jge
or
js
add
pop
cwde
sub
cs
sbb
xchg
imul
xchg
mov
pop
mov
int
pop
faddp
not
add
scas
mov
jno
push
push
inc
cld
xor
cmp
cmp
ins
imul
xor
add
adc
ficomp
mov
mov
fimul
hlt
(bad)
cmp
in
dec
dec
jmp
jno
imul
(bad)
lock
push
dec
xchg
fldenv
dec
(bad)
cld
add
adc
push
sub
rol
das
jne
xchg
addr16
cmps
xchg
in
rcl
and
xor
prefetch
pop
mov
les
cmp
out
(bad)
fimul
sbb
push
or
push
gs
popf
mov
jb
jp
push
mov
ds
enter
mov
mov
pop
jns
push
and
and
fdiv
dec
mov
(bad)
(bad)
stc
cdq
rcl
pop
sbb
pushf
lods
push
retf
push
dec
xchg
push
sub
push
jecxz
jbe
mov
cs
dec
dec
fnstenv
or
xor
jp
and
sbb
dec
jnp
(bad)
sar
push
xor
mul
mov
or
gs
push
into
push
add
cmp
dec
mov
rol
pop
pop
hlt
push
xor
sbb
cs
mov
pop
cmp
add
or
push
cmps
push
sbb
cmp
adc
xlat
fs
xchg
mov
push
std
lods
into
lock
jmp
pop
pusha
fst
bound
xor
xchg
ins
mov
mov
push
ins
cmps
test
adc
pushf
jno
push
cmp
retf
call
inc
lock
sbb
push
push
dec
push
out
sar
add
test
sbb
aaa
daa
popf
std
cwde
rcr
lds
xchg
pop
mov
stos
pop
cwde
mov
sbb
xchg
gs
jno
rcl
(bad)
pop
and
dec
pop
aad
adc
and
add
jb
lods
pop
in
fdivr
(bad)
add
shl
xchg
inc
das
inc
fiadd
push
sub
adc
ds
cmc
dec
fcomp
fwait
popa
imul
jp
jo
sbb
inc
xchg
bound
pusha
and
(bad)
mov
mov
xchg
sahf
(bad)
dec
sub
scas
cld
int3
cmp
mov
push
fsubp
or
mov
mov
imul
push
pop
add
stos
(bad)
add
jmp
mov
sub
ficom
mov
int3
push
push
pop
sub
mul
int3
jno
in
add
ficom
sub
mov
call
jno
popa
fld
inc
jle
out
push
mov
mov
inc
dec
cmp
mov
adc
mov
(bad)
cld
nop
into
imul
aas
daa
(bad)
push
dec
adc
dec
sub
leave
fcmovb
mov
inc
lahf
fdivp
cmp
shl
dec
stos
dec
xchg
out
sub
scas
push
mov
mov
xor
es
jecxz
mov
fdivrp
fcomp
arpl
nop
mov
inc
xchg
rcl
loopne
add
outs
jmp
xor
push
bound
imul
jae
out
rcl
xchg
mov
dec
push
adc
rcl
inc
std
xor
pushf
pop
xor
xor
fidiv
cmps
push
mov
pop
test
iret
sub
imul
xor
push
add
repnz
je
push
neg
out
or
(bad)
pop
ret
loope
loopne
cmp
fldcw
inc
adc
sub
dec
mov
icebp
mov
xor
ficomp
xchg
ds
ficom
mov
and
adc
in
jae
xor
addr16
pop
ins
lea
cmp
retf
cmp
inc
inc
outs
mov
jle
pop
and
outs
sti
inc
cmp
(bad)
sti
xchg
mov
lods
push
(bad)
lea
mov
(bad)
call
mov
adc
xor
xchg
icebp
in
push
jg
(bad)
div
in
lock
mov
pop
arpl
nop
dec
neg
not
loopne
js
sbb
enter
pop
mov
in
pop
sub
cmp
and
test
jb
shl
sbb
push
(bad)
fdivr
leave
loopne
bound
es
cld
(bad)
or
fwait
in
xor
clc
sub
cmps
les
lods
in
call
inc
and
push
cs
lahf
dec
cmc
into
xlat
enter
mov
mov
mov
xor
cmp
adc
dec
fnsetpm(287
iret
xchg
or
xor
pop
les
retf
pop
mov
dec
add
dec
mov
mov
sar
in
xchg
pop
adc
pop
imul
jns
dec
loop
add
div
push
mov
pop
shl
or
sub
add
das
mov
pop
in
(bad)
push
cmp
aam
sbb
jp
jg
out
xchg
push
xor
outs
sahf
jno
sub
sbb
sub
xchg
fwait
pop
push
pop
ret
jl
das
enter
push
repz
inc
mov
mov
outs
(bad)
popa
push
pop
pop
fbld
xchg
mov
dec
mov
jl
stos
push
or
enter
xor
(bad)
in
mov
jle
fcompp
cmp
movntps
cmp
xor
out
sar
and
mov
js
aam
lock
loopne
popf
int3
ds
xor
xchg
push
mov
cli
or
jae
jmp
test
pop
data16
jbe
scas
jae
jecxz
jmp
xor
(bad)
(bad)
push
movs
mov
push
ret
mov
popf
int3
ins
or
jo
mov
aam
sbb
pop
cmp
imul
add
mov
pusha
mov
fnstcw
push
rol
cmp
sar
gs
sbb
xchg
cmps
pop
shl
loope
jmp
inc
cmp
cwde
pushf
push
hlt
xor
sub
sub
lock
scas
popf
in
in
add
cwde
out
int
mov
xor
inc
into
les
and
sub
or
dec
xor
ret
push
fucomip
jl
or
xlat
(bad)
push
neg
jge
or
lods
loopne
jb
shl
pop
aam
aaa
pop
pushf
xchg
aaa
int
aam
jp
sbb
pop
add
stos
add
into
push
in
cmp
jmp
sbb
sbb
inc
mov
mov
test
mov
inc
xchg
cwde
lods
or
dec
mov
cmp
ss
aaa
push
pop
loop
imul
imul
push
dec
les
mov
mov
inc
pop
lea
and
shl
sub
cld
loope
adc
sahf
jecxz
cmp
aas
mov
mov
xchg
xchg
mov
hlt
xlat
mov
xor
inc
push
int
xchg
dec
inc
loopne
clc
fidiv
(bad)
cmp
in
div
mov
adc
cmp
dec
inc
mov
out
fld1
mov
jmp
loope
outs
push
lods
mov
xchg
sbb
push
aad
std
and
icebp
mov
mov
cld
lds
dec
dec
ins
push
mov
int
jmp
push
push
lahf
cmps
scas
add
inc
jno
sub
or
jp
addr16
clc
xchg
or
hlt
nop
mov
test
push
loopne
aad
inc
sbb
pushf
(bad)
xchg
inc
jle
xchg
cmp
push
sub
call
cdq
je
mov
mov
and
sbb
ss
in
data16
sahf
loopne
dec
and
push
sbb
jge
cmps
adc
and
pop
pop
jns
and
push
cmps
rol
test
pop
jmp
leave
jle
mov
pop
pop
in
js
dec
push
add
scas
(bad)
jge
aam
or
adc
fisttp
push
mov
lock
jl
fcmovnbe
inc
stos
aam
sbb
loope
xor
xor
and
mov
mov
cld
cdq
push
icebp
mov
xor
lods
neg
xlat
sub
push
mov
jp
into
add
pop
push
xchg
jne
(bad)
sbb
call
mov
mov
movs
ror
push
imul
sbb
outs
add
xlat
dec
fdivr
sub
pop
mov
inc
sbb
outs
pushf
out
mov
cmp
sbb
shr
sbb
es
(bad)
call
xlat
and
pop
iret
cld
arpl
popa
or
cmp
aad
popa
aaa
in
sbb
cmp
push
pop
repnz
pop
add
mov
cmps
pop
mov
xchg
fldenv
mov
clc
mov
pop
sbb
loopne
push
push
dec
inc
out
mov
sahf
or
loop
(bad)
pop
mov
or
dec
scas
lds
sub
arpl
add
ds
out
mov
daa
inc
inc
sbb
push
pop
add
dec
retf
pushf
jno
xor
mov
pop
jg
pop
push
lock
cmp
lods
push
stos
xchg
scas
mov
jmp
int3
xlat
dec
test
mov
xor
imul
dec
and
gs
sub
sbb
ss
push
jne
out
mov
iret
rcl
mov
and
inc
sub
inc
jae
ror
fmul
push
stos
call
loopne
aas
stos
cld
cli
scas
dec
daa
sub
inc
in
cs
pop
clc
sub
or
outs
and
adc
cdq
adc
add
daa
stc
test
mov
out
jp
movs
mov
jge
pusha
shl
lods
inc
out
xchg
push
xchg
int3
push
xchg
and
push
fwait
jmp
mov
and
push
pop
push
mov
mov
int
sub
in
xchg
fidivr
out
pop
mov
xor
addr16
fdiv
fild
xchg
cli
xor
jnp
loop
jmp
dec
ins
fistp
aam
retf
mov
dec
fadd
push
leave
retf
push
adc
adc
gs
rol
xor
xchg
int
xchg
sub
cmc
push
test
daa
mov
fstp
push
mov
mov
xor
les
lods
jae
pop
sbb
(bad)
xor
sbb
cmp
push
sahf
jno
jle
or
pop
(bad)
div
in
les
dec
xchg
push
test
sub
scas
jne
arpl
adc
shl
push
cld
loop
aas
dec
test
push
mov
(bad)
sahf
pop
pop
pop
cmp
add
dec
jmp
add
out
les
lods
in
lock
dec
outs
inc
in
jg
sbb
sbb
mov
xchg
jg
mov
int3
call
add
mov
pop
mov
sbb
push
jne
ror
dec
stos
push
int3
sub
jle
dec
cmp
call
neg
pop
mul
mov
mov
and
xor
leave
cmp
fist
pop
pop
inc
xor
mov
cwde
fnstsw
push
in
xchg
push
(bad)
fbld
xor
adc
push
sbb
jge
psrlw
dec
aad
in
mov
dec
jecxz
mov
lods
sbb
cmps
fs
xchg
xchg
push
inc
daa
test
and
inc
lea
mov
and
(bad)
repnz
repnz
xor
scas
sub
jmp
push
sbb
rcl
mov
jp
mov
lea
inc
inc
xchg
std
lods
push
into
xchg
call
imul
jnp
dec
jns
setb
pop
test
shl
dec
fiadd
sub
push
hlt
sbb
daa
add
sub
pop
aad
mov
dec
adc
cmp
scas
cmp
xchg
push
pop
xchg
and
daa
mov
or
pop
dec
sbb
aam
outs
js
push
add
jae
hlt
cs
xchg
jnp
int3
sub
in
int
cmp
fcom
popf
je
pop
xchg
jl
cmp
fnstcw
inc
mov
xchg
adc
adc
adc
sub
and
sti
mov
xchg
stc
sub
aaa
sub
(bad)
(bad)
push
aas
sbb
cmp
outs
out
in
adc
mov
cmp
and
push
pop
retf
arpl
out
add
out
arpl
xchg
xchg
or
pop
add
dec
sbb
mov
imul
xor
inc
or
addr16
mov
push
mov
or
or
movs
int3
dec
mov
push
(bad)
and
cmp
sbb
(bad)
out
push
dec
sete
outs
jmp
pop
push
out
(bad)
iret
mov
cmps
imul
mov
cli
mov
aam
and
aam
adc
fstp
dec
mov
sbb
adc
mov
or
int
sbb
mov
push
fucom
xor
cmp
or
test
aaa
pop
mov
add
adc
fldpi
(bad)
(bad)
cmp
in
pop
lods
outs
cmp
das
lock
xor
mov
mov
daa
stc
sub
xchg
stc
pop
aam
inc
cmp
out
mov
and
mov
xchg
add
inc
pushf
daa
and
push
(bad)
xor
jnp
in
loopne
sub
jbe
into
jp
pushf
pop
lds
in
mov
push
jp
push
push
sub
push
xchg
out
mov
hlt
imul
inc
cmps
push
fdiv
hlt
jne
jmp
dec
and
xlat
je
fild
in
mov
iret
mov
lahf
or
mov
push
jl
jmp
or
in
push
add
ficomp
xchg
push
stos
mov
cld
test
aaa
ror
lea
dec
sbb
sbb
mov
sub
push
icebp
lds
in
pop
inc
test
add
push
sbb
jmp
cmp
fidivr
dec
xor
mov
mov
push
or
sub
and
cdq
pop
cmps
dec
sbb
jbe
sub
sbb
cld
jne
xor
pop
sbb
std
int3
js
rcr
ss
push
cmp
shl
pop
inc
fsubr
and
lea
out
pop
out
add
cmc
cmp
pop
ins
scas
es
in
or
adc
inc
and
xchg
arpl
jbe
aaa
adc
or
cmp
jb
ret
cmp
ret
dec
xor
adc
shr
inc
pop
mov
jecxz
int
shl
lock
cmp
loope
test
cmp
cmps
push
cmp
jmp
push
fadd
cmp
sbb
je
sar
xor
ss
xor
jl
out
jae
enter
cmps
and
out
or
jecxz
fsubr
call
adc
sub
push
sub
mov
test
push
push
mov
dec
int3
jo
outs
push
lock
push
lods
xor
int3
push
pop
pop
xchg
inc
cmp
mov
shl
aaa
add
mov
arpl
(bad)
(bad)
cmc
and
mov
pop
mov
daa
xchg
mov
mov
add
movs
fidiv
clc
dec
jle
in
fist
push
test
mov
(bad)
pop
pop
jmp
push
sub
sbb
xchg
imul
into
xor
xor
loope
xchg
cmp
out
xchg
cmp
and
mov
or
out
mov
icebp
lahf
loopne
jecxz
retf
dec
inc
hlt
movs
cmc
loopne
xchg
ja
push
mov
retf
out
arpl
aaa
clc
into
(bad)
int3
or
sub
xor
jmp
ins
pop
arpl
dec
jmp
loop
inc
jns
shl
out
(bad)
aam
lahf
or
mov
sbb
fild
(bad)
loopne
cmp
push
in
ret
data16
and
lds
sar
(bad)
int
enter
sbb
enter
fwait
(bad)
loope
push
push
pop
cmp
cmps
fstp
pop
fdiv
xchg
leave
sub
retf
stc
imul
and
cmp
aaa
pop
dec
xor
nop
add
aad
pop
inc
dec
or
or
xchg
pop
pop
sbb
sub
mov
pop
out
fst
pop
mov
sub
nop
xchg
xchg
mov
pop
stos
clc
add
inc
scas
hlt
iret
call
das
fucom
test
ret
js
(bad)
dec
in
fdiv
push
push
call
xor
idiv
stos
adc
mov
mov
mov
or
and
ror
loop
jp
jp
jae
(bad)
lods
add
test
fwait
call
retf
shr
(bad)
inc
jmp
adc
cld
pop
pusha
mov
into
arpl
call
or
xor
dec
mov
push
mov
aad
cmp
push
imul
or
add
test
(bad)
push
movs
jge
cmp
fstp
mov
jbe
aam
rcr
push
nop
and
pop
cmp
loopne
clc
out
(bad)
add
mov
jne
fwait
test
(bad)
xchg
cli
jl
(bad)
jg
sti
mov
outs
int
in
xchg
cmps
xchg
adc
xlat
call
(bad)
popf
in
cs
dec
stc
mov
cmp
daa
mov
sbb
pop
pop
mov
jae
mov
pop
push
gs
pop
push
pop
test
in
fldl2t
sub
sbb
cdq
lods
std
push
retf
xchg
ds
loop
js
sub
pop
push
jmp
je
ret
not
cmps
push
adc
les
rcr
dec
jmp
add
aaa
cmp
pop
push
xchg
pop
inc
cli
push
outs
cdq
jmp
xor
cld
add
xlat
sbb
jno
pop
in
addr16
call
stos
and
in
aam
fdivrp
imul
pusha
sub
cmp
xor
or
adc
mov
bound
adc
push
inc
or
xchg
adc
mov
pop
in
cli
fld
jmp
inc
cmp
inc
add
dec
dec
xchg
cmp
fucom
in
jnp
cmp
dec
test
lea
shr
inc
xor
aaa
(bad)
jmp
sub
xor
ds
cmps
adc
out
mov
clc
mov
mov
cmp
push
or
xlat
cwde
pop
xchg
test
mov
stc
mov
repz
addr16
push
das
pop
and
call
adc
dec
pop
dec
sub
mov
daa
mov
out
inc
inc
rcl
gs
sahf
cs
mov
and
push
nop
xor
arpl
mov
and
xor
mov
enter
shl
test
pop
add
jp
sub
dec
xor
pushf
aaa
rcr
enter
sbb
sub
int3
test
sbb
pusha
in
or
cdq
es
div
loopne
or
arpl
or
inc
and
loopne
sub
aad
dec
rcr
adc
ds
fwait
pop
mul
aaa
mov
sbb
jle
or
rcr
sbb
mov
das
mov
sub
pusha
je
dec
inc
cld
pushf
dec
jg
pop
rol
pop
push
out
push
mov
xor
fcom
scas
mov
dec
jno
jbe
out
push
push
fcmovnu
adc
out
shl
loope
jbe
add
jp
xlat
mov
fisttp
mov
ins
scas
(bad)
lods
stc
aam
fwait
lods
add
fimul
sahf
inc
rol
rol
mov
pushf
dec
outs
mov
fadd
mov
aad
lahf
lea
enter
add
arpl
aaa
arpl
jmp
sub
jb
not
cwde
daa
push
push
iret
push
cmps
fsubr
out
add
add
xor
mov
shl
xchg
mov
retf
lahf
push
mov
pop
pop
sbb
add
xor
dec
inc
pusha
shr
mov
popf
sub
test
iret
(bad)
inc
pop
add
adc
mov
ds
fadd
mov
mov
sbb
dec
pusha
into
add
pop
xor
aad
std
jmp
pushf
jmp
fcmovnbe
sub
mov
outs
sbb
mov
lds
sbb
outs
ror
sbb
popf
and
pushf
ins
dec
popf
ds
stos
loop
int3
pop
out
rcr
imul
lock
mov
sbb
pop
sbb
pop
lods
jp
loope
iret
pop
or
push
mov
lods
mov
and
imul
xchg
inc
push
fisttp
not
add
(bad)
mov
adc
loop
sub
jmp
pop
pop
or
rcl
popa
mov
or
call
and
mov
rcr
mov
mov
shl
inc
cmp
aaa
xor
shl
shl
mov
push
mov
dec
cwde
cmp
sbb
and
inc
sub
test
(bad)
sub
cmp
retf
cmp
push
inc
test
mov
cmp
(bad)
popf
mul
adc
mov
lock
xor
clc
mov
in
pop
jo
fadd
add
push
adc
xchg
fist
arpl
jne
mov
xchg
inc
and
xor
mov
ret
stc
mov
mov
mov
mov
movnti
aad
out
xor
sbb
mov
sbb
mov
(bad)
fidivr
call
push
jmp
xlat
xor
lahf
xchg
pop
int3
mov
out
and
mov
rcr
stos
mov
push
out
(bad)
adc
(bad)
xchg
push
adc
adc
and
mov
pop
jge
inc
mov
in
sub
mov
arpl
ins
push
clc
jnp
mov
pop
sub
jmp
jbe
sahf
pop
mov
push
shl
xor
sbb
loope
pop
mov
or
pushf
jmp
cmp
xchg
or
mov
test
mov
xlat
test
inc
sahf
mov
(bad)
push
fcomp
jmp
mov
loopne
cmps
jno
ror
fisubr
push
sub
fld
xor
sub
mov
cld
inc
or
cmp
and
jnp
lea
jecxz
mov
js
jmp
int3
loop
inc
pop
bound
jb
repz
nop
cwde
and
das
push
movs
dec
xor
or
(bad)
cdq
dec
fcom
jge
in
cld
push
cmc
mov
pop
lock
jp
ret
fwait
js
ret
popf
arpl
je
mov
jg
in
cmp
pop
test
pushf
(bad)
adc
aad
ja
sbb
push
mov
(bad)
lea
pop
fdiv
and
aad
inc
fdivr
mov
ret
into
push
sub
fiadd
dec
jmp
arpl
cmp
jnp
and
and
jge
aas
hlt
xchg
mov
cmp
test
std
push
adc
sub
lahf
ret
lea
cmps
std
popa
ds
cvtdq2ps
adc
shl
inc
adc
jb
out
cmp
cmps
push
mov
int
into
les
test
aas
pop
arpl
jle
in
xchg
inc
test
pop
pop
lds
rcl
adc
jmp
mov
xchg
inc
pop
mov
mov
add
xchg
inc
mov
sbb
in
daa
lds
pop
mov
jo
inc
neg
sets
cmp
or
fimul
push
jns
(bad)
dec
adc
mov
in
fnstcw
iret
stos
add
pop
fcom
xchg
adc
mov
nop
jl
xchg
clc
stos
xlat
aas
out
dec
jg
ret
sbb
push
test
int3
out
rol
xlat
hlt
mov
jmp
mov
fist
je
mov
xor
dec
or
push
faddp
xchg
add
repnz
ins
lea
xor
xor
adc
mov
sub
inc
jecxz
pop
sub
fst
fwait
arpl
jbe
pop
shl
call
jge
sub
push
(bad)
outs
leave
add
ins
mov
ror
and
loope
sbb
rcl
xchg
test
jbe
shl
repz
int
dec
test
xlat
hlt
push
loopne
mov
(bad)
ja
loopne
inc
sub
ror
mov
inc
jle
pusha
movs
pop
fwait
xor
cmps
dec
je
cmps
out
push
mov
xor
aam
dec
cmp
push
or
dec
sub
in
inc
test
push
popa
jae
dec
mov
dec
pop
inc
push
pushf
or
jecxz
dec
mov
cmp
lods
push
les
cmc
push
rcl
sub
std
or
pushf
push
cdq
push
or
sub
sar
push
or
xchg
in
cmp
aad
and
retf
add
repnz
push
mov
stc
xchg
mov
stc
icebp
adc
mov
or
in
mov
call
and
and
mov
(bad)
push
inc
aaa
mov
fstp
shl
sbb
dec
out
pop
bound
fmul
popf
or
adc
dec
movs
mov
fist
fsub
sahf
cdq
rcl
adc
daa
bound
or
jecxz
xor
xor
dec
xor
dec
aam
out
adc
in
jmp
inc
call
mov
mov
les
mov
in
(bad)
jnp
leave
outs
jle
pop
jmp
mov
enter
inc
sub
add
popf
sbb
mov
mov
sub
pop
mov
dec
std
add
fsubr
out
xchg
cmp
push
popa
jg
mov
jno
push
out
sub
or
xor
fstp
loopne
and
mov
mov
add
add
inc
mov
popa
mov
addr16
push
mov
pshufw
fidiv
lods
add
mov
push
in
(bad)
sub
cwde
push
aas
pop
lds
cmc
mov
mov
fisub
shl
inc
es
lods
and
pop
or
clc
pop
and
cmp
out
jge
jecxz
mov
dec
popf
dec
or
push
push
int3
sbb
icebp
and
xor
push
ds
jbe
xchg
jno
push
stos
rcr
push
or
mov
cli
cld
in
jae
test
pop
shl
xchg
xchg
xchg
mov
dec
fcmovnb
add
mov
mov
int3
cmp
push
dec
int3
add
je
(bad)
idiv
cdq
sbb
sub
jnp
xchg
into
xchg
mov
add
mov
and
push
xchg
call
xchg
jp
mov
or
lahf
ins
gs
dec
mov
mov
sbb
cmps
add
enter
jbe
lahf
pusha
shr
leave
xchg
shl
pop
popf
pop
xchg
xchg
aaa
pushf
xor
loop
fist
hlt
and
enter
stc
xor
sub
clc
(bad)
in
std
mov
dec
add
dec
and
xlat
popf
outs
add
inc
out
popa
btr
(bad)
cmp
clc
repnz
sub
mov
pop
movs
mov
lods
pop
js
jmp
mov
and
mov
xchg
adc
addr16
es
fcom
(bad)
and
div
add
jmp
lea
or
sbb
mov
adc
sub
jno
(bad)
in
(bad)
pop
test
stos
arpl
or
mov
add
leave
shr
jle
scas
pushf
aaa
int3
push
mov
pop
adc
fstp
jecxz
fadd
and
fimul
repz
movs
cmp
push
mov
inc
mov
dec
stos
fdivr
xchg
stos
lods
dec
ins
out
aas
pop
and
sbb
rcr
add
jmp
movs
int3
out
jae
cs
rcl
or
lea
mov
dec
fiadd
dec
xor
pop
pop
dec
out
mov
xchg
ficom
lock
mov
mov
sub
fdivr
mov
dec
pop
or
cwde
in
in
rcl
cmp
sub
push
not
and
ins
out
adc
out
pop
sub
iret
mov
pop
pop
push
push
fild
pop
mov
imul
jnp
adc
dec
mov
ss
aad
or
mov
jge
pushf
xchg
or
xor
(bad)
or
sub
mov
jmp
cmps
js
sbb
cmp
mov
lods
jo
sbb
jae
pop
(bad)
xchg
pop
push
ror
sub
div
cmps
sbb
stos
lahf
adc
popf
call
cmps
inc
push
push
call
push
rcl
out
dec
mov
xchg
pop
imul
(bad)
mov
mov
dec
(bad)
sahf
imul
xchg
mov
adc
jl
push
or
mov
push
idiv
les
mov
xor
dec
adc
push
push
mov
xor
push
std
dec
sub
xchg
sbb
div
imul
pop
aam
jge
sub
xor
movs
addr16
mov
inc
std
(bad)
adc
test
leave
jb
fcmovnu
fsub
mov
mov
mov
aaa
add
fisubr
jns
data16
lds
out
pop
(bad)
mov
(bad)
xor
lea
jmp
pop
cmp
mov
outs
push
and
cmps
pop
xor
call
pop
hlt
and
inc
fiadd
retw
cmp
sbb
sbb
and
pop
xchg
xchg
dec
lods
dec
aad
cmp
daa
loope
jo
ss
jp
sub
popa
adc
and
sub
inc
mov
rcr
int3
repnz
xlat
(bad)
push
ins
hlt
mov
xor
call
pop
mov
out
sbb
push
push
mov
jno
fs
in
inc
lds
call
xchg
test
fild
shl
ds
or
jg
stc
fbld
push
sbb
xor
add
ret
cmps
sub
pop
xor
mov
lods
jnp
or
adc
dec
sbb
(bad)
adc
adc
(bad)
shr
imul
sbb
int3
push
cld
xor
aad
je
xlat
push
sbb
into
push
out
popf
idiv
push
pop
sbb
pop
sahf
and
mov
add
mov
out
push
add
jle
lds
and
and
jecxz
ss
dec
cli
cmp
(bad)
stc
adc
popf
xchg
push
fld
ins
xor
mov
mov
push
movs
mov
mov
loopne
(bad)
adc
data16
xchg
sub
in
mov
jno
leave
mov
and
sbb
adc
pop
sub
mov
fisubr
cmp
add
mov
mov
xchg
xor
sbb
retf
dec
dec
dec
mov
retf
pop
aad
push
dec
dec
ins
sbb
nop
push
neg
ficom
adc
adc
add
shl
cwde
pop
cwde
push
dec
cmps
adc
xchg
es
sub
xchg
xchg
fmul
mov
sahf
popa
cmps
inc
repnz
jns
pushf
fwait
push
not
les
and
mov
cmp
mov
dec
outs
pop
and
adc
push
sti
xlat
movs
sbb
mov
mov
mov
lea
out
mov
in
cmp
loope
cmp
dec
sbb
nop
shr
mov
xor
shl
jb
adc
mul
sub
loopne
cmp
adc
sti
xor
hlt
dec
dec
mov
sbb
mov
inc
pop
in
pop
or
sbb
adc
or
in
pushf
xchg
jge
or
hlt
mov
pop
dec
pop
rep
sub
call
or
adc
pop
stos
jne
pushf
push
ins
popa
enter
jnp
(bad)
xchg
dec
dec
out
jp
das
or
out
add
stos
xor
dec
arpl
push
sub
mov
vmovmskps
fimul
jmp
pop
out
lods
sbb
push
sbb
pop
add
loopne
ficom
retf
dec
push
xchg
sub
xor
pushf
or
adc
mov
mov
sbb
mov
aam
pop
adc
dec
inc
dec
fwait
(bad)
iret
fnstsw
dec
mov
xchg
jg
jmp
push
xchg
ror
js
cld
popa
ja
rcr
fisub
dec
repnz
mov
iret
mov
push
ins
push
mov
es
jo
pop
pop
ss
xchg
test
xchg
cmp
loopne
clc
stos
sub
(bad)
rol
mov
rcr
ins
movs
test
leave
and
cwde
cdq
and
sbb
icebp
sbb
xor
(bad)
xor
pop
xchg
arpl
xor
cmps
pushf
jp
pushf
rcr
mov
(bad)
mov
mov
mov
cwde
enter
sub
ror
mov
sbb
pop
mov
mov
popf
lea
popf
or
sbb
jb
aaa
nop
cmp
cld
cmps
xchg
or
hlt
mov
sbb
inc
sbb
lahf
(bad)
sub
leave
es
add
xchg
ss
sbb
cwde
adc
int3
daa
xchg
xor
out
ins
scas
and
aam
aad
push
cmp
and
dec
jo
inc
fwait
add
lods
and
jg
mov
jl
jge
push
das
rol
ins
addr16
(bad)
fnstenv
loopne
imul
loope
xor
add
jbe
out
xor
cwde
repz
int3
dec
es
push
inc
and
(bad)
and
mov
sub
jne
fisttp
mov
push
int
sub
dec
pop
ins
cmp
(bad)
cmp
jbe
cmps
mov
lods
fisubr
jp
xchg
mov
cmp
popf
jge
dec
jo
xor
adc
out
lahf
mov
pushf
std
mov
(bad)
mov
das
xor
or
or
jmp
push
or
test
jae
int
cmp
xchg
shr
cwde
mov
jnp
gs
push
(bad)
inc
out
xchg
or
add
push
adc
mov
out
add
pop
cmp
std
pop
pop
(bad)
fisttp
sub
lock
dec
hlt
sub
push
ins
mov
out
or
cmp
dec
add
sub
mov
sub
ja
int3
imul
inc
sbb
jmp
inc
inc
jb
xchg
jecxz
xchg
add
ja
add
mov
(bad)
daa
lds
jecxz
cmp
jnp
and
sbb
in
ret
mov
test
sti
cs
addr16
dec
mov
cmp
push
adc
sbb
je
jbe
mov
jl
pop
loop
(bad)
retf
out
fcomi
xchg
dec
pop
jle
aad
(bad)
aam
aam
mov
int
mov
cmp
(bad)
jmp
cmc
(bad)
stos
jb
aas
cmp
je
ins
xor
jnp
rcl
scas
jo
pushf
fcomp
push
hlt
fcomi
sbb
cmp
jno
pop
jp
jle
sbb
lea
and
lock
imul
cs
sub
test
addr16
push
push
or
sbb
add
lahf
dec
in
cmps
lds
setb
cmc
fwait
out
mov
xor
fdivr
scas
xor
(bad)
in
cvttps2pi
inc
or
in
push
push
xchg
push
pushf
icebp
adc
ja
mov
inc
and
dec
imul
fstp
add
(bad)
mov
shr
mov
inc
std
sar
fidiv
xchg
ror
ror
cmp
(bad)
lock
pop
fnsave
mov
in
sub
fcom
imul
adc
jg
dec
mov
mov
sub
imul
cmp
movs
cdq
fist
sub
pop
jb
push
and
xchg
imul
or
idiv
sbb
pop
imul
stos
cmp
clc
std
cmp
xchg
lea
sbb
out
leave
ret
lds
popf
fwait
sbb
imul
xchg
cmps
aad
outs
ror
sbb
pop
setbe
aaa
cmps
(bad)
int3
xor
aam
pop
add
jmp
in
or
dec
cmp
(bad)
jb
jecxz
js
sbb
mov
rol
cmp
mov
xchg
aas
(bad)
cmps
ja
cmps
aaa
and
scas
ja
mov
int
sub
popf
mov
or
iret
in
(bad)
jb
aas
sbb
mov
sub
shl
int3
mov
inc
adc
mov
pushf
sti
cmps
or
test
lea
pop
(bad)
call
pushf
jo
push
cmps
ins
xchg
mov
xchg
mov
xchg
ins
test
popa
in
inc
push
fcmovb
pushf
cmps
stc
mov
cld
fild
lea
lahf
cli
mov
dec
dec
add
push
add
std
scas
bound
sub
aad
jge
rep
push
mov
sub
int
xchg
mov
mov
xchg
xchg
cs
stos
jno
and
ins
push
pop
sub
xor
shl
jbe
aad
pop
xor
int
push
push
xchg
mov
cmp
fnstsw
pop
(bad)
idiv
popf
lahf
sar
add
mov
dec
and
mov
imul
inc
outs
(bad)
sub
xor
sar
outs
mov
fcmovbe
sbb
mov
mov
imul
sub
push
fwait
test
in
fwait
hlt
push
inc
mov
pop
js
ds
jmp
and
ja
(bad)
nop
in
and
daa
arpl
cmc
xor
mov
sub
test
xchg
jp
in
sbb
into
and
push
retf
push
cmp
xor
mov
xchg
xchg
jp
(bad)
adc
and
pop
inc
sub
dec
sbb
popf
mov
xor
nop
dec
and
lahf
pushf
jecxz
sbb
int
xlat
mul
out
test
cmp
mov
push
cdq
push
js
rcl
xchg
daa
jbe
and
int
loopne
sub
inc
cmc
mov
jmp
or
outs
fimul
pop
sub
fisubr
icebp
aaa
push
popf
fwait
or
dec
jae
mov
mov
sahf
push
dec
xchg
shl
aad
imul
pop
mov
call
cmp
dec
mov
mov
std
mov
jle
inc
test
icebp
(bad)
std
mov
jle
leave
xor
lock
int
xchg
idiv
adc
loopne
adc
daa
scas
loopne
push
int
das
shl
mov
dec
aad
or
push
cmp
sbb
loopne
enter
and
jp
push
or
dec
cmc
mov
xlat
icebp
fnstcw
push
ss
cmc
loope
jl
jp
xchg
(bad)
aam
pop
cs
fisub
or
push
sbb
jp
jnp
sub
push
ja
(bad)
retf
dec
cmps
movs
shl
sub
cmps
add
cmc
fsub
xchg
mov
jmp
loopne
jp
cmp
leave
dec
dec
lods
imul
xchg
sbb
pushf
push
mov
aad
dec
adc
push
jmp
idiv
(bad)
add
cdq
dec
mov
cmp
xlat
stos
or
pop
out
xchg
(bad)
jbe
mov
inc
mov
or
stos
and
push
sar
push
addr16
in
jmp
cs
mov
xchg
test
jle
cmp
cld
push
push
in
pop
neg
or
in
jne
mov
add
adc
es
lods
test
pop
pop
mov
adc
push
dec
outs
pop
mov
imul
test
rcl
mov
pop
dec
push
mov
or
cmp
mov
dec
xchg
adc
xor
pop
xchg
add
push
pop
dec
mov
stc
pop
mov
(bad)
lock
rol
push
retf
hlt
imul
lea
popa
xor
xor
xor
stos
punpckldq
jmp
push
adc
push
jmp
loopne
ja
or
mov
loop
lods
repz
stc
mov
cdq
mov
fnsave
add
inc
fst
(bad)
or
mov
sbb
mov
icebp
adc
jae
jb
fucompp
aam
adc
inc
add
out
jle
mov
inc
jb
dec
shl
clc
xchg
and
cmp
fwait
inc
fstp
xor
mov
cmp
and
retf
mov
inc
mov
jbe
cmp
push
push
les
cmp
jnp
inc
lock
cmp
sahf
pop
push
sub
icebp
stos
rcr
out
mov
cmovle
js
repnz
xlat
dec
shl
adc
adc
dec
mov
push
sbb
mov
daa
loopne
xor
int
imul
adc
je
xchg
cs
sbb
popf
mov
out
inc
and
stos
inc
inc
(bad)
push
push
jge
jl
inc
movs
out
jge
mov
fst
pop
imul
mov
inc
mov
xlat
(bad)
(bad)
pop
shl
fadd
push
mov
mov
in
mov
dec
mov
cs
mov
pop
mov
cdq
xor
cmc
rol
test
aam
xchg
inc
push
sbb
aam
mov
sub
push
int3
or
pusha
movs
sub
lahf
or
add
ja
and
sub
sti
iret
jge
or
push
push
test
xchg
jp
jge
aas
dec
icebp
xlat
out
or
loope
cmp
sub
cmps
push
aam
dec
inc
push
ins
mov
imul
out
dec
mov
adc
sbb
push
(bad)
xchg
(bad)
aaa
mov
mov
test
ja
rol
jb
add
ret
inc
jmp
mov
sub
aam
push
das
test
push
test
loope
out
sbb
inc
push
idiv
pushf
push
mov
dec
adc
fnsave
xchg
dec
es
fmul
sbb
nop
cs
iret
dec
out
addr16
cmc
cmps
mov
inc
cld
cmp
xchg
push
imul
shl
jno
jae
mov
pusha
mov
sub
xor
and
push
pop
xor
lea
xor
push
xchg
sub
add
stc
(bad)
xor
mov
ins
scas
sub
(bad)
pop
and
push
dec
(bad)
in
mov
cmp
xchg
push
fs
cmp
mov
xchg
retf
ins
imul
icebp
test
ds
in
daa
sbb
push
inc
mov
clc
rcr
lea
ja
fcmovbe
fs
push
add
rdmsr
enter
sar
xor
adc
ja
pop
sbb
in
mov
jle
sub
cmc
shl
sub
dec
push
addr16
inc
hlt
mov
int
cdq
xor
mov
cmp
in
fcmovbe
test
jmp
fs
sub
leave
lods
nop
dec
retf
adc
add
rcpps
sub
std
addr16
test
out
xor
add
lock
(bad)
mov
aam
lods
cld
movs
mov
movs
push
mov
mov
in
adc
pop
pop
movs
dec
movs
jl
push
mov
dec
loopne
jns
inc
adc
loop
ror
fild
dec
adc
sub
scas
fmul
pusha
popf
sub
arpl
xor
(bad)
enter
xor
push
push
fsub
lock
inc
sub
les
pop
ds
mov
dec
out
out
dec
xchg
cmp
fstp
jle
pop
mov
mov
mov
into
call
sub
pop
mov
hlt
aad
sbb
or
cmc
stc
stos
loope
or
int
jb
sbb
cld
xchg
mov
outs
xor
mov
leave
dec
jo
shl
(bad)
adc
out
loope
xchg
add
lods
aaa
addr16
fst
add
popa
mov
rcr
xor
sti
jne
fdivr
xchg
push
rcr
add
dec
and
dec
aam
js
(bad)
dec
mov
pop
sub
test
fist
pushf
xlat
pop
sbb
(bad)
cld
inc
and
dec
outs
iret
jb
jmp
das
loope
call
(bad)
(bad)
mov
push
inc
je
cmc
lods
je
test
xor
jo
sbb
mov
fsubr
icebp
aaa
sbb
pop
fimul
popf
(bad)
popa
fild
sbb
sbb
sahf
or
mov
cwde
add
jno
cmp
mov
jmp
inc
push
outs
fdivr
stos
adc
add
add
(bad)
xchg
pushf
mov
(bad)
das
out
mov
inc
sub
adc
test
pop
push
mov
test
(bad)
jmp
rcl
pushf
pop
test
push
xor
push
addr16
and
mov
outs
(bad)
sub
nop
jmp
adc
mov
mov
ja
jmp
push
nop
jle
adc
(bad)
movs
dec
lea
cmp
mov
mov
mov
hlt
sbb
adc
mov
push
inc
sbb
adc
adc
mov
mov
test
sub
jb
int3
cmp
stos
mov
adc
add
add
dec
dec
div
xchg
sub
pop
push
fisub
jge
lahf
push
pop
aam
push
push
push
test
movs
sbb
jne
mov
pop
inc
inc
out
inc
test
inc
sbb
add
xchg
call
mov
xchg
popf
loop
inc
lock
pop
add
dec
sbb
sbb
pushf
inc
inc
mov
dec
cmp
lock
cmp
dec
hlt
xlat
popa
stos
mov
ror
test
xor
jle
arpl
pop
loope
dec
and
scas
leave
add
pushf
dec
sbb
shr
jmp
jo
mov
and
or
jae
test
rcl
aaa
jge
jne
cld
in
dec
xchg
dec
xor
dec
push
repnz
or
std
std
jge
push
jno
leave
and
in
xor
jnp
mov
adc
aam
popf
xor
mov
or
xlat
bswap
dec
inc
aad
push
sub
jp
aam
add
pop
es
ja
jmp
or
stc
push
or
push
mov
jle
xchg
fld
xlat
call
aam
call
jb
and
add
fs
mov
adc
mov
push
push
dec
cs
iret
cld
jmp
fidiv
inc
adc
mov
dec
mov
xor
pop
repz
jae
aam
adc
dec
pop
push
mov
push
cli
sbb
es
dec
(bad)
pop
mov
push
xor
sub
push
cld
sahf
jo
imul
mov
pop
adc
fwait
repz
and
pop
fs
dec
ficom
and
loop
loopne
lock
ror
xor
(bad)
mov
and
adc
or
loopne
or
in
inc
ror
sbb
mov
in
shl
inc
out
shl
in
popf
ffree
rcl
sbb
data16
jns
(bad)
cmps
ror
add
xchg
(bad)
pop
or
sbb
int3
sbb
sub
fld
daa
dec
or
in
jmp
neg
call
jmp
sete
mov
stos
pop
xchg
dec
xor
aam
push
dec
shr
les
dec
stos
sti
lea
jnp
lods
movhlps
shl
cmp
leave
ins
cld
je
mov
pop
repz
xchg
retf
mov
mov
push
lods
and
arpl
dec
dec
div
or
push
int
lea
repz
mov
ins
push
popf
xchg
(bad)
(bad)
xlat
adc
or
rol
sub
and
call
sbb
xor
mov
lahf
gs
adc
(bad)
jmp
sar
sub
pop
jnp
repz
js
ins
cmp
mov
mov
jns
std
ins
in
sbb
adc
push
and
stos
mov
nop
mov
test
or
cmp
ror
cld
repnz
jl
mov
cld
(bad)
pop
sbb
pop
sub
adc
cmp
mov
xchg
loope
push
pop
fcmovne
sub
lahf
arpl
or
inc
inc
jae
xchg
pop
mov
or
add
push
xor
and
mov
imul
push
lahf
add
dec
retf
ins
xchg
cdq
repnz
shl
js
or
jnp
xor
imul
imul
div
popf
dec
(bad)
sbb
aaa
push
adc
mov
or
pop
fcomp
inc
jg
mov
popa
cld
sub
rcpps
dec
loopne
ins
daa
pop
rcl
rcl
mov
xchg
out
cmps
std
adc
pop
fldcw
into
ror
fs
lods
sbb
dec
call
mov
pop
out
loopne
xor
or
mov
add
repnz
fs
mov
or
les
inc
cmp
call
sbb
neg
je
cli
xchg
cmc
inc
mov
pop
pop
jle
out
mov
jnp
and
jb
mov
xor
ret
mov
sbb
inc
sub
push
mov
mov
add
mov
lock
xor
add
inc
sbb
ret
lea
push
clc
mov
mov
sbb
outs
das
pushf
clc
lods
xchg
xchg
test
movs
ds
adc
pop
dec
enter
xor
adc
std
test
ins
mov
or
xchg
and
(bad)
(bad)
xlat
jmp
rcl
jmp
idiv
cmp
mov
push
cmp
adc
or
pop
cs
pop
in
clc
fdiv
jae
inc
loopne
mov
mov
es
push
mov
and
xchg
out
inc
dec
dec
xchg
ins
pop
mov
call
jecxz
push
not
sbb
icebp
(bad)
rcr
test
out
add
add
pop
ret
ss
cmc
cmc
mov
call
sub
ins
jecxz
dec
lock
psrld
push
jnp
leave
lds
cld
out
or
xlat
jmp
jge
xchg
jmp
div
and
aaa
cmp
lods
sub
fucompp
pop
fbld
nop
push
cmp
sbb
xor
je
xchg
dec
mov
jnp
std
xor
mov
daa
stos
or
add
mov
sub
push
xor
fiadd
pop
inc
mov
dec
fcomp
jp
(bad)
push
mov
enter
sub
out
inc
add
cmp
or
nop
ret
push
and
sub
and
push
xor
into
daa
lea
clc
jno
mov
sub
lahf
jle
dec
mov
adc
push
cmc
adc
mov
ror
gs
lods
adc
leave
pop
mov
int3
push
aaa
or
clc
(bad)
xchg
or
sub
call
not
and
mov
add
repnz
pop
push
push
gs
jmp
add
jmp
or
cmp
xlat
(bad)
dec
gs
shr
cmc
cld
cld
cwde
pop
imul
imul
sbb
pop
cwde
gs
ret
sbb
push
xor
jmp
daa
ret
pushf
pop
dec
mov
push
in
mov
xchg
sti
mov
add
xchg
and
push
sti
out
mov
fcomp
(bad)
or
adc
test
mov
in
jle
daa
adc
nop
sbb
iret
cld
lea
fistp
push
stos
test
xor
pop
mov
cmc
xlat
stc
aam
out
faddp
sbb
adc
add
dec
fild
imul
cs
xchg
in
fcmovnb
loop
fist
push
out
mov
jbe
fisttp
jmp
cmp
aaa
enter
fdivr
pop
inc
jge
sub
(bad)
cmp
mov
cmp
jmpw
out
pop
xchg
or
jl
xchg
xor
xchg
push
adc
sub
cmc
shl
xor
push
in
add
ficomp
adc
and
inc
outs
loop
jecxz
pop
ror
pop
cmps
icebp
in
add
(bad)
clc
sub
xor
out
add
and
leave
repz
addr16
call
arpl
dec
jo
fs
in
rcr
inc
add
dec
push
loopne
stc
xor
sub
adc
push
mov
test
dec
stc
mov
push
dec
add
shl
pop
gs
mov
ins
adc
loop
push
jp
sub
sub
or
sub
mov
ror
retf
(bad)
loop
push
push
cmp
jp
or
mov
mov
mov
mov
sbb
out
sbb
test
mov
sub
push
popf
lahf
cdq
sub
and
cwde
push
jmp
jae
jbe
std
out
pop
test
jl
inc
adc
popa
fist
mov
in
sbb
sbb
cmps
adc
adc
popa
ins
fcomp
or
pop
cmp
pop
arpl
stos
pop
icebp
jmp
pop
stos
push
jo
sbb
dec
loop
rcl
ret
(bad)
and
jl
mov
ja
push
push
ins
cmp
cmp
shr
cwde
dec
sbb
bound
ss
or
neg
fcom
cmc
pop
jle
cmovns
adc
loope
stc
fwait
ret
jmp
xchg
neg
out
xor
movs
out
fidivr
jnp
add
pop
and
shl
xor
mul
rcr
sub
jne
leave
mov
push
movs
pop
mov
jge
adc
inc
out
push
mov
push
mov
pand
iret
sub
xlat
mov
jnp
jmp
addr16
test
(bad)
cmp
adc
pop
jmp
bnd
shl
pop
out
add
push
rcr
mov
out
xor
xchg
sub
mov
xor
sub
xchg
les
mov
es
arpl
call
sbb
jmp
push
mov
mov
retf
int3
in
sub
addr16
mov
cdq
out
daa
mov
fcomp
pop
xor
sub
jae
mov
mov
idiv
pusha
mul
mov
outs
xchg
lock
clc
and
add
cmc
cmp
dec
adc
fisttp
test
add
movs
popf
jno
xor
jecxz
mov
xchg
sbb
sbb
sub
cld
aad
jge
xor
lds
arpl
inc
fsubr
and
ja
xor
mov
xchg
scas
jmp
fnstcw
cmps
adc
xor
std
inc
mov
inc
or
dec
sbb
jnp
sbb
loope
dec
add
loope
sbb
cld
call
cmp
sbb
jg
or
cmp
jo
(bad)
dec
dec
add
jle
js
repz
loopne
repnz
add
jg
dec
and
push
ins
pop
pop
or
add
xchg
jmp
mov
and
add
and
(bad)
test
cmps
pushf
sar
jge
mov
cmp
jmp
inc
ret
push
xchg
out
xlat
loope
jle
neg
std
xchg
cdq
and
xchg
mov
pop
mov
call
mov
hlt
push
cmc
xor
fistp
dec
es
cmp
xchg
(bad)
pop
cmp
cmps
mov
inc
imul
ja
xor
add
sbb
clc
in
inc
(bad)
ficomp
ja
inc
jl
daa
xor
in
fcomip
jne
out
stos
mov
lods
sbb
int
dec
mov
bound
sub
ja
pop
cmps
lods
add
push
pop
loopne
jmp
mov
cmp
pop
lds
pop
sbb
xlat
cmp
mov
sahf
sbb
jmp
les
add
loop
mov
loopne
js
arpl
inc
pop
mov
mov
mov
or
sub
push
xchg
add
push
les
pop
dec
jge
adc
into
mov
cmp
hlt
popf
ret
(bad)
fisubr
pop
sub
popf
jp
pop
daa
xchg
mov
in
add
push
mov
jne
cmp
jbe
out
cmps
test
popa
xor
xor
aaa
push
sbb
fwait
fs
popf
jp
pusha
daa
nop
push
jno
adc
mov
call
push
mov
and
and
sbb
xchg
fisub
rcr
dec
or
aaa
mov
mov
sub
aas
(bad)
inc
inc
(bad)
sub
ret
ins
mov
data16
test
jmp
test
(bad)
add
nop
dec
dec
call
and
mov
and
ror
cmp
repnz
fistp
das
mov
out
or
or
cmp
fisttp
and
pop
mov
or
mov
inc
xor
mov
js
scas
or
call
neg
jno
mov
lahf
sar
pusha
and
retf
pop
xor
xchg
mov
int3
pop
inc
scas
dec
xchg
or
cmp
xor
cmp
rcl
sub
fxch
adc
(bad)
loop
add
je
jecxz
scas
lahf
sbb
test
pop
xor
push
loop
repnz
push
scas
mov
and
sub
lods
lock
dec
mov
mov
fist
cmp
sbb
add
mov
jecxz
imul
out
pop
cmp
adc
xor
cdq
iret
nop
sbb
jl
(bad)
xchg
gs
outs
in
lods
nop
pushf
ins
dec
mov
jae
aam
jno
loopne
dec
push
xchg
pop
jl
cmp
fnsave
arpl
sbb
inc
ss
fcomp
cmps
cmp
mov
xchg
js
pop
and
mov
mov
add
popf
jo
gs
mov
xor
push
cmp
(bad)
cwde
mov
mov
les
aas
int3
push
push
cwde
mov
aas
cmp
test
loope
scas
fisttp
dec
test
jge
sub
xchg
mov
out
add
mov
mov
(bad)
cld
inc
or
sub
out
pop
lods
stos
and
dec
mov
xor
and
aaa
pop
xor
xchg
xor
in
mov
mov
xchg
fld
pop
add
mov
xchg
enter
inc
mov
push
sbb
lock
pop
adc
sbb
fsub
cmp
bound
mov
call
xchg
adc
cli
xchg
mov
scas
cld
icebp
push
push
out
int3
into
push
dec
gs
jo
mov
sub
add
aad
mov
fs
pop
push
lds
lock
push
dec
xchg
mov
(bad)
sub
lea
inc
inc
retf
inc
mov
call
xor
sub
outs
popf
(bad)
inc
mov
in
sub
pop
jg
ret
mov
test
iret
cwde
jl
cwde
adc
int3
aad
pop
and
mov
pop
and
mov
(bad)
push
arpl
mov
mov
popf
sub
jo
adc
push
(bad)
sbb
movs
cs
push
ret
xor
ds
les
arpl
jne
fwait
jmp
sbb
sub
stc
mov
pop
xchg
loopne
fdiv
push
sbb
cmp
dec
pop
and
and
inc
cmp
retf
in
retf
fist
pop
sbb
nop
pop
mov
test
push
adc
in
sbb
jge
xor
dec
push
std
mov
jp
ja
fs
icebp
mov
icebp
push
and
imul
lea
enter
int
fimul
idiv
mov
ficomp
push
pop
fwait
push
add
scas
or
cmp
cmp
jnp
xor
mov
loope
lock
and
push
stos
jl
add
enter
les
add
fisub
and
es
(bad)
je
and
fs
and
inc
clc
push
jge
sub
and
shr
cmp
adc
xchg
add
addr16
sbb
sbb
sub
mov
ja
sub
fild
das
push
ss
cld
jle
pop
jmp
push
jno
pop
(bad)
(bad)
outs
jg
xchg
dec
sub
mov
xchg
repz
mov
je
dec
out
dec
cld
pop
inc
inc
mov
add
ins
mov
add
sbb
inc
mov
mov
xchg
or
push
push
sar
push
data16
mov
rcl
not
ret
jge
mov
fisubr
(bad)
ficomp
movs
cmp
aad
cs
pop
shl
add
fcomi
adc
jp
stc
mov
pop
sub
xchg
xchg
push
pop
adc
shl
sahf
int3
push
(bad)
sub
cmp
shl
push
jmp
pop
adc
jmp
dec
test
pop
or
cmp
mov
retf
mov
cmp
mov
push
fs
mov
lock
iret
shl
push
add
jle
cdq
push
and
mov
out
xchg
in
or
and
jp
cmp
or
shr
fisubr
mov
vsqrtps
push
mov
jne
rol
jnp
repz
outs
neg
cwde
add
adc
mov
ds
dec
outs
aas
adc
mov
xchg
dec
xchg
rcr
xlat
fcomip
(bad)
push
sbb
jnp
mov
dec
int
call
pop
push
jp
test
cmps
jle
not
ins
mov
test
jmp
adc
ss
cmc
in
stos
inc
xchg
add
and
jge
adc
sub
push
stos
int3
std
sbb
pop
jne
push
push
and
xchg
push
push
xlat
jmp
adc
push
mov
lds
xlat
and
push
and
pop
clc
sub
inc
mov
sbb
pop
mov
ins
cmp
ins
jnp
fst
loope
push
shr
ja
retw
pushf
or
je
inc
enter
popa
aaa
jmp
sbb
fild
fisubr
into
je
push
inc
or
or
sbb
inc
fcomp
sbb
sti
or
pop
daa
and
pushf
clc
dec
cld
push
push
sub
std
xor
mov
adc
out
mov
push
fistp
lods
mov
ror
daa
movs
mov
push
pop
jnp
nop
movs
clc
adc
popf
inc
inc
out
sahf
inc
mov
loope
(bad)
jp
cmc
mov
(bad)
mov
add
cmp
mov
push
xor
xchg
iret
and
add
mov
mov
adc
dec
dec
xchg
out
xchg
int3
mov
mov
lock
mov
lahf
sar
fldenv
mov
inc
repnz
mov
and
std
(bad)
cmc
pop
xchg
mov
test
xchg
pop
xor
push
add
adc
jle
sub
pop
pop
dec
aaa
mov
push
js
cmp
lock
jge
jnp
mov
xor
jo
sbb
aaa
cmps
pop
mov
sbb
imul
int3
xlat
push
cmc
ret
cmp
pushf
sub
lock
jl
xor
dec
hlt
mov
int3
push
lods
dec
cwde
mov
adc
leave
fwait
dec
pop
cmp
add
fld
sub
xor
aam
fwait
or
mov
stos
push
xchg
dec
xor
adc
imul
sbb
cmp
xchg
or
inc
sub
out
mov
mov
loope
jge
std
jmp
stos
push
and
rol
loope
jmp
fwait
and
cmp
call
mov
push
icebp
push
in
lahf
pop
fsub
movs
cmp
fbstp
aad
pop
retf
inc
rcr
jmp
lea
in
push
add
sub
or
add
cmp
cmps
push
data16
push
loop
push
int3
in
and
repz
(bad)
push
fisub
sub
mov
push
repnz
cmp
scas
fbstp
dec
add
inc
sbb
mov
int3
add
dec
dec
sbb
fcom
nop
cld
dec
out
xor
mov
push
lahf
sbb
pop
sbb
pop
mov
les
jne
adc
rcl
mov
fsubr
add
sbb
mov
pop
xchg
adc
(bad)
or
ror
inc
dec
push
mov
std
cwde
loop
add
mov
outs
test
pop
ja
cmps
dec
pop
sbb
dec
pop
push
(bad)
cli
xor
mov
mov
pop
ja
cmp
rcl
fwait
push
dec
and
or
push
cmp
fst
out
sub
jge
mov
mov
lods
ins
pop
mov
test
fwait
xchg
inc
in
mov
inc
fst
pop
push
mov
mov
sub
pop
pop
and
call
iret
arpl
setbe
(bad)
mov
fwait
call
jg
pop
and
aas
pop
cld
cmps
jae
adc
mov
pop
pop
ins
int
cdq
in
xchg
jmp
cmc
lods
xor
ss
pop
fwait
and
adc
stos
and
sar
lds
stc
jb
fld
add
in
mul
dec
dec
pop
in
inc
outs
adc
add
push
cmps
fs
inc
ror
push
(bad)
sbb
rol
xchg
sub
dec
pop
call
ror
daa
sbb
pop
lea
dec
(bad)
mov
fdivr
ins
iret
ror
cmp
mov
add
fimul
push
xor
mov
mov
pop
xchg
movs
push
test
dec
jp
fsubr
pushf
pop
xor
xchg
mov
nop
test
jmp
rcl
ret
xchg
mov
pushf
inc
call
test
pop
mov
jbe
ror
mov
inc
js
jp
stc
fadd
loopne
call
fsub
call
in
js
push
push
dec
imul
retf
fcomp
add
xchg
mov
scas
dec
cmp
fist
scas
add
loopne
ds
add
xlat
sub
push
jp
mov
inc
sbb
cdq
ins
loopne
and
not
pop
call
pop
aam
ins
mov
test
cmp
cmp
call
push
fisub
xchg
pushf
or
inc
nop
sbb
pop
sahf
mov
cmp
adc
sub
sub
add
in
out
or
(bad)
or
scas
imul
scas
push
sub
jecxz
adc
jmp
mov
(bad)
cld
jns
dec
mov
push
cld
ret
dec
sbb
scas
(bad)
push
rcl
sahf
jne
jmp
loope
mov
int
inc
ret
mov
pop
popf
pop
sbb
dec
push
mov
fistp
xor
sub
ret
or
inc
adc
sub
adc
inc
push
pop
aam
cmps
add
adc
or
mov
push
jge
sbb
sbb
mov
outs
cli
inc
pop
push
inc
lds
xchg
fdivr
fstp
sub
(bad)
retf
or
loop
ins
pop
sar
int
inc
in
call
push
jmp
movs
jge
out
int
mov
(bad)
jbe
jno
aam
sti
int
idiv
dec
lods
sbb
push
sbb
mov
loopne
adc
adc
fadd
sub
dec
out
(bad)
adc
enter
movs
xchg
push
dec
lods
std
imul
mov
inc
fadd
les
mov
jecxz
push
fisub
je
xor
cmp
lods
and
cmp
xlat
(bad)
shr
sbb
leave
add
jge
iret
jo
push
add
inc
ret
repz
stos
fwait
and
jge
repz
dec
pop
sbb
sbb
fs
mov
xor
or
fsubr
mov
popf
inc
icebp
dec
inc
inc
xchg
fisttp
nop
call
sub
mov
ss
(bad)
in
push
gs
test
add
dec
mov
dec
and
push
pop
and
icebp
test
push
bsr
push
mov
xchg
dec
mov
in
push
xor
rol
fwait
in
cmp
leave
cdq
push
mov
pop
rcr
iret
jns
test
cmp
inc
sbb
add
mov
sbb
mov
sub
add
(bad)
retf
sbb
inc
pop
pop
mov
icebp
test
in
int3
cmps
mov
sub
and
mov
in
loop
or
dec
daa
ins
push
(bad)
div
test
mov
dec
jae
sbb
jne
xchg
aas
stos
pop
jg
adc
add
popf
or
gs
out
jae
mov
shr
add
and
cli
mov
mov
sub
pop
xor
add
adc
shr
in
dec
push
mov
ret
jno
and
dec
mov
rcr
dec
mov
outs
cmps
test
call
mov
jle
mov
cmp
out
ins
adc
pusha
jns
pop
pop
xchg
icebp
scas
(bad)
jmp
pop
dec
lea
arpl
xchg
repz
stos
and
iret
test
(bad)
mov
xor
neg
and
push
jno
jbe
mov
inc
gs
xchg
xlat
add
sub
mov
dec
or
jnp
add
xchg
xchg
(bad)
mov
shl
(bad)
or
inc
test
sbb
mov
sbb
mov
(bad)
sub
retf
xor
pop
and
adc
pop
xor
shr
and
dec
lea
cmp
cmps
addr16
pushf
rcl
movs
mov
mov
cmp
cmp
and
mov
xor
shr
shl
add
cmps
mov
pop
mov
mov
xchg
test
sbb
sbb
into
in
fisub
add
arpl
fmul
jno
and
sbb
out
inc
inc
movs
pop
repz
jno
sti
dec
jmp
aaa
mov
fstp
pushf
lea
jl
jg
xor
add
or
push
mov
and
sbb
(bad)
push
scas
add
xchg
ins
xchg
cmc
jl
mov
clc
xlat
adc
retf
scas
iret
psubsw
clc
mov
shl
push
mov
mov
aam
or
addr16
lods
xlat
cmp
fs
xchg
daa
test
sbb
into
(bad)
push
push
(bad)
les
jmp
jae
and
pop
or
push
dec
imul
sti
out
imul
aam
dec
mov
outs
adc
jae
and
adc
jmp
pop
mov
arpl
sbb
jecxz
jns
pop
push
loop
add
or
xor
pop
dec
popf
(bad)
repnz
sub
shl
add
xchg
nop
inc
push
cmp
inc
imul
aad
dec
lea
push
lods
cdq
shl
(bad)
mov
popf
and
sub
fiadd
int3
pop
and
(bad)
test
ins
sub
mov
push
fsubrp
cmp
jne
push
xchg
ins
and
or
sahf
sub
push
fstp
or
mov
test
and
push
pop
xchg
jno
enter
ds
movs
mov
mov
mov
or
mov
repnz
push
out
in
aad
dec
jbe
lock
aas
pop
xchg
ret
add
ins
dec
pop
test
lods
test
push
xchg
fwait
or
(bad)
push
lea
mov
sbb
movs
leave
std
jge
loop
lods
movs
sub
mov
imul
mov
pop
dec
mov
sub
mov
push
in
mov
mov
fsubr
(bad)
mov
fwait
xor
dec
fimul
loope
sub
addr16
push
jge
adc
(bad)
push
mov
push
imul
pop
push
push
sbb
sub
mov
mov
jno
jnp
int
mov
outs
add
nop
push
jmp
fdivr
add
sahf
ja
mov
inc
pop
shr
sub
out
cmp
cld
adc
fldenv
popf
aas
les
mov
mov
ja
push
push
fs
ds
dec
xor
sbb
popa
ds
cmp
hlt
adc
inc
mov
xchg
imul
xchg
mov
sub
jl
jo
pop
rcr
dec
mul
pop
dec
or
sub
scas
(bad)
pop
out
sub
out
std
xchg
pop
into
mov
mov
push
retf
int3
scas
(bad)
pop
rol
aad
pop
test
mov
adc
fld
shl
int3
xor
out
fiadd
mov
(bad)
mov
sbb
jno
bnd
pop
mov
ja
push
lods
and
lahf
pop
dec
loopne
or
lea
into
arpl
ror
xchg
mov
cld
aas
fisub
jge
fild
lods
xchg
std
add
jno
stc
adc
leave
xchg
mov
pushf
push
fs
es
repnz
(bad)
sbb
loop
shr
nop
adc
mov
je
fbld
jno
repnz
adc
add
xchg
pop
xchg
sub
xor
mov
adc
clc
xchg
cmp
fimul
push
lock
mov
sbb
dec
dec
call
cmc
push
mov
push
xchg
les
pop
fcomp
pop
cs
arpl
or
push
mov
cmp
xchg
shr
mov
call
xchg
sub
out
bound
cmp
(bad)
(bad)
sti
scas
mov
icebp
add
int
push
call
(bad)
ror
loopne
test
jmp
cmps
mov
dec
mov
push
popa
dec
fimul
xor
xlat
mov
in
aad
inc
dec
mov
jle
(bad)
fbstp
mov
sub
mov
(bad)
rcl
mov
loopne
test
cld
dec
lock
pop
imul
dec
icebp
aad
loopne
sbb
xchg
cmp
shl
adc
xor
in
iret
adc
sub
pop
sub
cmps
push
pop
jp
aam
loope
jae
or
(bad)
jmp
jle
dec
mov
mov
int3
into
ja
shr
int
fisub
xor
bound
cwde
(bad)
lods
adc
or
in
dec
cmp
loop
loop
push
jmp
xor
mov
retf
xchg
mov
in
(bad)
(bad)
mov
push
retf
pop
scas
int
xchg
mov
addr16
hlt
cmps
mov
lods
push
(bad)
stos
aad
sub
dec
push
dec
dec
cwde
dec
dec
test
push
in
ror
arpl
sub
pop
inc
mov
sub
idiv
xlat
xor
enter
push
repnz
inc
dec
pop
mov
or
jae
push
in
push
ror
dec
mov
jnp
or
les
sbb
push
call
mov
push
lahf
push
test
mov
jl
rcr
jg
int3
dec
dec
adc
sbb
jle
int3
sbb
stos
and
clc
inc
cmp
mov
mov
int
cmp
mov
or
sub
dec
mov
bound
mov
cmp
xchg
jne
and
addr16
mov
inc
(bad)
cmc
adc
mov
imul
mov
pop
imul
cmp
int3
shr
call
loopne
dec
jmp
mov
sub
mov
iret
adc
imul
stos
lods
in
cdq
and
mov
mov
test
push
mov
cmp
test
aaa
cmp
and
daa
xor
mov
jns
mov
sub
dec
xor
cmp
push
sub
jg
cmp
mov
stos
cmps
sbb
dec
daa
or
mov
dec
push
inc
jge
sbb
sbb
push
sbb
(bad)
int
pop
aad
or
cmp
leave
mov
mov
inc
xlat
out
leave
push
fist
int3
dec
sub
xchg
jmp
adc
pop
sub
cwde
movs
mov
jb
and
jno
lea
jnp
loopne
sbb
loope
push
dec
aaa
cmp
leave
ds
(bad)
push
jae
push
iret
retf
mov
inc
cmps
(bad)
(bad)
pop
sub
(bad)
xlat
pop
sub
aaa
xor
cld
psadbw
inc
push
pop
lods
ins
mov
in
jnp
lods
lods
icebp
stos
aaa
pop
dec
inc
add
mov
call
test
(bad)
mov
aad
shl
rcl
aam
js
outs
imul
mov
mov
shr
add
xchg
cdq
mov
jmp
jnp
setl
pop
int3
pop
inc
inc
mov
gs
cli
fcom
out
in
mov
call
pop
hlt
jno
iret
pop
mov
ret
sbb
loope
shl
data16
pop
mov
frstor
mov
jle
adc
push
loope
cmp
push
and
pop
aaa
fsubr
movzx
sti
xchg
lahf
dec
in
mov
mov
inc
sub
adc
loope
iret
pop
mov
test
mov
das
jmp
jg
jle
push
push
adc
jmp
leave
data16
sub
shr
cmp
iret
mul
mov
mov
arpl
mov
inc
shl
sahf
test
enter
mov
jno
dec
pop
fstp
mov
ss
mov
cdq
mov
mov
cmp
or
icebp
sbb
je
adc
sbb
pusha
jge
xor
hlt
inc
sub
inc
add
inc
pop
push
mov
add
add
xchg
mov
pop
and
aas
inc
dec
or
or
ins
scas
push
out
cld
aas
sub
push
aas
outs
int
into
and
mov
push
inc
clc
inc
test
lock
sub
pop
or
retf
arpl
loope
pop
sbb
mov
repnz
xchg
rol
mov
rcr
or
pop
adc
(bad)
push
xor
or
(bad)
out
jl
addr16
imul
or
dec
xchg
xor
dec
dec
cmps
pop
sbb
leave
add
ret
cs
(bad)
jmp
loopne
out
ss
mov
(bad)
(bad)
es
inc
rcl
mov
mov
loope
pop
cld
add
xor
pop
(bad)
push
out
xchg
xlat
into
jge
push
dec
loopne
jne
leave
and
mov
aam
xchg
outs
mov
out
es
mov
test
lds
call
add
in
sub
repz
test
popa
mov
std
test
xchg
int
pusha
mov
outs
add
pushf
mov
cs
push
or
jne
aad
dec
cmp
sar
mov
lea
cmp
imul
push
adc
mov
ret
cmp
in
leave
mov
aaa
stc
jno
push
push
nop
lods
mov
je
rcl
dec
push
scas
xchg
push
(bad)
mov
jne
sbb
mov
test
and
pop
repz
int3
dec
loop
int3
sub
inc
adc
(bad)
jp
(bad)
push
jecxz
imul
cmp
jno
or
pop
in
add
bound
cmp
test
outs
shr
add
cmp
(bad)
add
inc
aad
jmp
mov
enter
push
retf
jle
popa
int
lock
push
inc
fisttp
dec
mov
xor
sti
xor
pop
clc
std
mov
dec
sbb
loope
leave
test
or
sbb
mov
enter
das
cmps
add
(bad)
mov
cmp
arpl
jg
sub
jb
pop
loopne
pop
les
and
and
in
add
shl
mov
dec
out
jmp
aam
shr
jl
fsubr
push
add
sub
xor
jbe
ins
jb
and
jg
and
mov
fcos
bound
xchg
xor
loopne
cld
mov
imul
mov
add
stc
xor
sbb
mov
pop
test
gs
call
in
adc
add
sub
xlat
test
push
jmp
adc
dec
in
jmp
sar
sbb
ds
pop
ret
pop
aaa
pop
ficomp
mul
movs
js
push
shl
push
or
xchg
dec
and
ins
jne
pop
nop
shl
add
jge
inc
mov
aas
iret
outs
push
mov
inc
daa
push
cmp
sbb
mov
or
dec
pop
jge
adc
adc
cld
xor
ins
pop
mov
cmp
cmps
xor
cli
mov
int
call
ror
ret
rcr
mov
lahf
call
push
cmp
xchg
xchg
aam
pop
in
add
lock
pop
imul
jl
add
dec
call
fsubr
inc
push
dec
rcl
xchg
fld
cld
jge
xor
cdq
fld
mov
xlat
mov
xor
pop
loopne
cmp
ja
pushf
pop
sahf
inc
mov
test
jb
xlat
or
mov
sar
outs
push
mov
adc
add
or
mov
aas
mov
ja
(bad)
xchg
pop
cmp
pop
daa
adc
es
mov
jmp
adc
dec
int
retf
jg
popf
push
push
sub
into
xchg
loop
dec
cdq
(bad)
in
push
jbe
fs
jnp
mov
push
dec
enter
mov
adc
and
(bad)
jge
mov
nop
adc
ins
or
aam
mov
(bad)
not
call
push
pop
xchg
rcl
add
or
sub
dec
dec
addr16
xor
and
(bad)
in
sar
movs
leave
inc
ins
jge
ffreep
push
lock
call
xchg
jae
lods
mov
lea
mov
inc
dec
(bad)
pop
les
fbstp
cdq
mov
mov
and
xor
xor
fidivr
mov
ret
iret
inc
mov
in
and
(bad)
pusha
mov
mov
rep
popf
sbb
dec
(bad)
push
mov
js
mov
cmp
adc
les
cld
cmc
cdq
adc
adc
push
es
clc
addr16
pop
push
xchg
push
push
xchg
inc
ret
sub
mov
xor
or
gs
out
push
jge
adc
sbb
fs
enter
xlat
or
cmp
jmp
and
cmp
pop
add
daa
and
icebp
push
cwde
inc
cs
ins
sbb
in
xchg
std
ins
sub
cmp
add
mov
nop
(bad)
neg
inc
cmp
jp
mov
cmc
or
xchg
mov
mov
fld
pop
into
pop
fsubr
cmp
aam
out
retf
out
loop
and
pop
or
popf
dec
mov
push
fcmovbe
popa
fucomi
sub
ja
xor
inc
pop
mov
pushf
idiv
and
fwait
dec
mov
lods
cmps
jne
into
int
sub
push
inc
imul
mov
movs
and
(bad)
fbstp
sub
imul
and
jmp
mov
mov
int3
pop
dec
xor
test
mov
and
loope
into
xlat
jle
arpl
xchg
pop
cmp
add
adc
mov
nop
push
nop
inc
mov
jae
inc
cmps
sub
jmp
pop
dec
std
mov
and
mov
xchg
xor
mov
sub
shl
and
inc
push
xchg
out
xor
imul
iret
lahf
and
pop
add
sbb
push
dec
std
adc
xchg
xchg
push
inc
loopne
ret
mov
cmp
repz
(bad)
mov
and
dec
cld
mov
push
xchg
add
inc
jo
and
mov
ins
push
test
push
pop
pop
in
mov
push
bnd
in
inc
int3
inc
jne
enter
cmp
out
xchg
dec
(bad)
fnstsw
cs
call
xchg
lock
adc
ror
cmps
ss
cmp
fwait
lock
mov
and
inc
mov
jge
pop
adc
jns
push
cmp
mov
inc
xor
push
ss
(bad)
cmps
ror
add
std
fisttp
leave
aaa
pop
add
leave
out
mov
rcl
clc
add
jo
fnstcw
popa
bound
push
push
cld
or
inc
ins
js
xchg
add
mov
push
ja
bound
in
(bad)
nop
sbb
addr16
jmp
iret
push
out
pop
inc
(bad)
push
add
or
loop
mov
loop
pop
sbb
popf
fdiv
daa
and
mov
inc
sub
ror
ins
ret
in
push
dec
pop
and
mov
add
jp
pop
sub
rcr
add
sahf
(bad)
shl
dec
in
aaa
cmp
in
cmp
fcmovne
clc
xchg
sub
gs
das
cwde
pop
in
mov
sub
loop
retf
mov
sub
mov
aas
adc
cdq
xor
fcom
cmp
stos
dec
in
retf
or
aad
in
and
jle
mov
lds
int
movs
mov
jns
fwait
dec
ficom
pop
icebp
pop
jmp
es
add
aas
int3
fwait
jmp
mov
push
std
inc
mov
dec
inc
sbb
out
addr16
stos
cs
xchg
add
popa
mov
or
push
push
mov
pop
not
popf
and
jg
xlat
cmp
fwait
dec
lods
add
ins
(bad)
and
inc
(bad)
xor
or
mov
jb
mov
jg
int3
loope
and
mov
fmul
push
add
inc
aad
jb
scas
mov
adc
jnp
stos
inc
xlat
jno
sub
or
mov
inc
jmp
rol
leave
ins
stos
retf
mov
push
in
fcomp
jae
movs
push
jb
adc
pop
aam
repz
fwait
dec
pop
cmp
dec
cmp
xlat
and
adc
push
imul
sbb
add
jmp
adc
into
pop
jp
jo
fcmovnbe
lock
pop
xchg
outs
movs
or
int
mov
mov
fisttp
push
dec
out
push
sub
jmp
push
int
jp
xor
push
addr16
repz
xchg
fidiv
mov
mov
xchg
int3
dec
or
inc
add
jnp
mov
inc
sub
shr
cmp
jmp
cmp
(bad)
mov
pop
inc
clc
fcomp
add
fld
(bad)
xchg
adc
sbb
push
xor
mov
sbb
pop
inc
xor
js
sub
xor
pop
scas
inc
not
fsubr
push
dec
cs
stc
test
(bad)
dec
lea
pushf
add
sub
jmp
inc
dec
mov
std
push
cmp
jmp
popf
ret
push
ret
call
and
jl
outs
lods
mov
out
sub
sar
fcomp
xlat
movs
push
add
in
mov
push
test
pop
push
mov
fdivr
fst
jmp
pop
les
rol
inc
mov
paddw
ins
test
push
mov
push
(bad)
fmul
sub
dec
int
call
push
sub
jl
cmp
(bad)
inc
jge
aaa
mov
inc
pushf
test
ins
xor
pop
movs
adc
cmps
pop
popa
fdiv
push
lds
mov
and
mov
hlt
sub
push
xchg
inc
xlat
les
add
aas
cmps
push
ficomp
pop
mov
jl
pop
xchg
jl
repnz
fsubr
clc
int
jmp
std
or
in
call
push
pushf
addr16
mov
arpl
or
mul
mov
mov
mov
call
fbstp
jbe
mov
sub
sbb
xchg
jnp
xchg
sub
iret
mov
sahf
dec
daa
rcl
ja
test
mov
addr16
sbb
add
ret
pop
lods
aaa
adc
mov
aam
outs
inc
(bad)
mov
sbb
adc
addr16
outs
mov
(bad)
fdiv
aaa
push
dec
adc
ja
je
xchg
test
fisub
jmp
mov
ss
lods
(bad)
retf
les
cmp
shr
retf
mov
sbb
push
jbe
adc
pusha
push
in
adc
inc
sbb
repz
xchg
icebp
adc
out
inc
test
push
dec
push
dec
adc
dec
adc
pushf
into
or
jecxz
cwde
xchg
cdq
adc
sbb
pop
arpl
and
add
enter
and
pop
mov
xchg
les
iret
in
cwde
fld
idiv
or
pop
imul
cmp
adc
mov
(bad)
push
cdq
stos
mov
push
hlt
loop
shr
popa
mov
jge
sbb
(bad)
fs
pop
pop
pop
adc
mov
jg
pop
cwde
fadd
je
dec
dec
push
mul
push
push
stos
mov
jb
dec
fxam
push
mov
jno
xchg
dec
or
inc
add
mov
mov
test
(bad)
dec
pop
cmp
pushf
adc
sbb
int3
out
stos
shr
in
and
mov
enter
mul
jg
test
ror
dec
add
push
pop
push
(bad)
imul
pop
inc
(bad)
xor
xor
sub
pop
sbb
inc
mov
fdivr
push
stos
sar
sbb
out
mov
shl
mov
outs
retf
jl
pop
ret
push
or
mov
mov
pushf
fisub
div
rcr
pop
movs
(bad)
popf
adc
jae
sub
sbb
add
jmp
dec
rcr
xor
and
fwait
jmp
inc
cdq
(bad)
fisttp
in
stos
repnz
mov
test
cs
dec
sbb
add
xchg
hlt
js
cmp
add
addr16
push
mov
jl
dec
push
jnp
mov
xor
pop
mul
stos
pop
pop
and
loope
push
xlat
jge
aas
xlat
dec
loopne
popa
data16
xchg
mov
test
shl
sub
jge
(bad)
ror
adc
and
sub
dec
icebp
cmps
xor
mov
lock
mov
add
retf
dec
ficomp
xchg
cmp
cmp
sub
add
xchg
ins
add
xchg
mov
pop
adc
push
sub
jl
movs
pop
shr
inc
fiadd
adc
ficom
fbstp
iret
push
cwde
jne
dec
ins
pop
xor
pop
retf
pop
pop
stc
jnp
movs
pushf
ins
sbb
sti
mov
in
xor
and
pop
cmps
retf
test
mov
dec
pop
les
push
sar
call
dec
mov
(bad)
push
fdivr
add
pop
sub
lock
std
or
inc
mov
and
gs
rcl
retf
xor
xchg
push
fwait
ins
xchg
sbb
in
dec
stc
sti
outs
xchg
test
add
jne
adc
fs
retf
loop
xor
mov
addr16
pop
(bad)
push
add
(bad)
clc
mov
mov
push
mov
mov
or
push
enter
mov
pop
sbb
mov
mov
sbb
pushf
mov
aaa
xrelease
jno
int3
popf
dec
inc
ret
(bad)
std
inc
jmp
fs
into
add
daa
mov
ror
dec
lea
sub
push
pop
sub
sub
(bad)
ret
cmps
mov
push
mov
mov
dec
(bad)
in
cld
lds
outs
mov
fild
inc
jge
es
fcom
stos
in
lods
xor
test
mov
dec
dec
in
fisubr
sbb
(bad)
xor
ret
mov
dec
push
iret
out
add
push
dec
stos
das
adc
push
dec
mov
add
sbb
and
cmp
aam
idiv
ds
adc
sbb
push
add
and
movs
outs
push
sti
dec
and
imul
cmp
xchg
xchg
push
dec
mov
xchg
ins
jbe
add
scas
mov
cmp
in
push
dec
xchg
pop
lea
adc
mov
push
adc
ficom
cs
jb
mov
pop
fs
add
in
cmp
in
mov
push
test
retf
ss
int3
sbb
sub
(bad)
mov
ss
push
sti
xor
fstp
ja
int
jbe
jne
xor
cdq
push
mov
movs
bound
lods
mov
xlat
pop
sub
test
sbb
jecxz
ds
fbld
push
stos
jnp
scas
pushf
sbb
(bad)
sbb
lods
sbb
sub
retf
sbb
loop
jae
inc
lea
(bad)
ror
mov
jno
sbb
cmp
call
mov
pop
outs
in
jge
inc
sbb
cdq
out
xchg
div
es
xchg
std
jl
add
mov
sbb
push
popf
add
loop
push
mov
test
sub
cmp
mov
xchg
cmp
icebp
repnz
fsubp
mov
dec
jecxz
sbb
inc
imul
loop
icebp
add
(bad)
sub
mov
stos
ud0
jmp
lds
(bad)
ja
add
mov
or
sbb
addr16
mov
cmp
add
mov
add
pop
push
into
daa
push
cld
fldenv
lods
xchg
mov
into
xor
shl
and
inc
pop
dec
std
mov
xor
xlat
shr
jl
out
mov
ins
daa
gs
test
ja
int3
fwait
pop
lods
mov
jg
ret
push
xor
push
mov
rcr
mov
sub
push
test
xchg
or
jge
lea
mov
ror
mov
dec
cmp
add
sti
adc
mov
jg
loope
jo
xor
fistp
push
add
fmul
fist
pop
adc
cmp
aad
add
xchg
retf
mov
mov
les
sub
sbb
mov
jne
mov
pop
pop
adc
mov
mov
cdq
mov
adc
push
jbe
adc
xchg
js
enter
fimul
adc
fdivr
push
xor
mov
inc
call
mov
mov
push
sub
or
lds
out
pop
xlat
add
imul
movs
fninit
pop
push
lods
cmp
mov
jne
lock
pop
sbb
cmp
cmp
je
repnz
sbb
sbb
cmps
rcr
pushf
aaa
(bad)
xchg
sbb
cmp
pop
cmps
imul
outs
stos
or
call
int
mov
mov
sub
add
jp
loope
cli
xor
push
pusha
mov
scas
xchg
or
and
addr16
pop
das
out
sti
and
pop
inc
mov
shr
dec
imul
jle
mov
movs
adc
or
out
dec
cmp
icebp
adc
lock
cmp
into
rcr
aas
jnp
jg
mov
test
imul
xor
inc
rcl
xchg
sub
mov
int
lock
nop
and
push
jecxz
push
cmp
add
fld
pop
inc
sbb
push
ret
call
dec
add
les
cvtpi2ps
add
mov
push
test
loope
sahf
in
hlt
xor
adc
popf
jb
fsub
add
cmc
lods
push
and
xor
clc
xor
shl
stos
ror
ss
js
jecxz
jno
push
das
fs
das
stos
sub
test
sub
mov
xchg
mov
pop
cwde
stos
mov
fstp
inc
int3
rcr
inc
ret
sti
push
push
mov
or
nop
sub
xor
gs
rcl
dec
pop
xor
push
jnp
pushf
lods
mov
pop
sahf
inc
mov
adc
sbb
daa
popf
or
fcom
mov
ds
xor
(bad)
or
cmp
push
test
outs
and
sub
dec
dec
ins
in
shr
mov
pop
ins
cmp
pop
repz
in
stos
sar
jmp
jae
(bad)
push
jbe
or
sbb
test
xchg
rol
mov
in
mov
sub
push
sbb
mov
pusha
mov
xchg
push
mov
sbb
sub
push
mov
xchg
push
xor
cmps
dec
fwait
inc
pusha
mov
inc
mov
sbb
push
stc
pop
add
mov
and
iret
xor
xchg
jmp
test
loope
xor
call
add
out
mov
pop
outs
ror
pop
xor
movs
and
sub
mov
sub
sub
pop
imul
push
push
push
ret
shl
jmp
mov
push
push
cmp
ror
jl
or
add
add
jmp
(bad)
xchg
fld
push
stc
push
jb
shl
add
jmp
jge
(bad)
cmp
nop
pushf
lock
out
aaa
mov
rcl
push
inc
aaa
fwait
push
dec
imul
out
mov
popf
mov
sbb
pop
cli
xor
ss
cld
cmp
push
sub
jo
vprotw
sbb
(bad)
lods
loope
pushf
lods
cmps
push
cmp
aas
test
shr
ds
sbb
xchg
inc
sbb
dec
sub
inc
sahf
fld
xchg
xlat
scas
dec
lods
pushf
pop
pop
pusha
ja
sahf
mov
out
and
push
and
(bad)
push
bswap
sbb
ins
mov
sahf
sbb
stos
and
stos
add
ins
and
test
call
push
lds
fcom
and
xchg
int
stc
mov
addr16
(bad)
shl
std
aam
(bad)
lock
data16
imul
bound
sbb
fcomp
(bad)
imul
stc
add
arpl
addr16
jl
fisttp
push
xor
fiadd
add
pushf
sbb
dec
cmp
cmp
push
ins
jbe
add
in
inc
mov
outs
neg
or
cmps
(bad)
jg
adc
jno
(bad)
js
popf
sahf
xor
test
ret
sbb
and
rcr
aam
jb
xchg
aaa
cmp
jle
sbb
les
sub
or
pop
fwait
mov
lea
adc
in
jmp
ins
out
add
lock
gs
sbb
test
js
mov
pop
adc
mov
jno
pop
les
loopne
inc
mov
shr
dec
push
(bad)
dec
test
pop
mov
mov
std
rcl
push
mov
and
stos
dec
or
dec
pop
push
ins
sbb
cmc
hlt
jmp
movs
(bad)
pop
cld
sub
mov
mov
out
(bad)
push
gs
int
into
push
sti
dec
mov
(bad)
arpl
cwde
call
arpl
inc
or
mov
dec
pushf
cwde
retf
sub
dec
inc
out
dec
movs
push
sub
push
or
fcomip
arpl
mov
xor
stc
or
inc
(bad)
or
lods
mov
shl
div
fnsave
pop
jo
mov
lahf
dec
xor
pop
jne
jae
sbb
fsubr
xchg
inc
push
mov
inc
mov
ds
out
test
(bad)
pushf
(bad)
outs
jae
(bad)
fmul
sbb
xchg
cli
add
mov
fucom
inc
(bad)
xchg
repz
xchg
pop
push
nop
pop
js
pop
mov
push
sahf
sub
(bad)
out
cmp
fsub
cmp
push
ja
je
pop
adc
dec
dec
idiv
push
mov
outs
cmps
or
mov
inc
int3
push
sbb
cmp
aam
push
push
push
ja
addr16
fstp
lock
pop
js
mov
inc
or
es
xor
dec
dec
int3
push
xchg
add
loopne
mov
jg
and
nop
shl
daa
mov
test
dec
in
loopne
fldcw
leave
test
call
push
movs
xor
sbb
int3
aaa
test
addr16
mov
cmc
adc
or
mov
xchg
(bad)
loopne
shl
nop
jbe
pop
fwait
outs
cmp
ss
(bad)
xchg
dec
and
call
gs
mov
test
into
mov
push
mov
ins
push
add
or
inc
gs
test
aaa
(bad)
scas
sub
cwde
add
movs
adc
xchg
jp
(bad)
sbb
test
cmps
xchg
xor
imul
fwait
cmp
push
cmp
cmp
mov
fxch
and
add
ds
and
xlat
mov
retf
dec
out
mov
and
mov
rol
pop
ret
cmp
hlt
xchg
or
cwde
mov
sbb
addr16
or
repnz
imul
mov
movs
pop
xlat
ficom
shr
adc
arpl
adc
loop
std
or
mov
or
push
test
jg
mov
or
daa
test
test
(bad)
rol
(bad)
inc
or
fcomip
cmp
jmp
sbb
sti
scas
mov
das
fsubr
jnp
sbb
push
mov
mov
nop
arpl
add
ins
in
call
or
lahf
dec
mov
xchg
add
xchg
mov
jne
dec
mov
mov
div
and
or
sub
or
xchg
daa
adc
inc
push
daa
xlat
mov
dec
xor
dec
or
push
outs
cwde
ret
mov
adc
adc
shr
(bad)
push
push
pop
sbb
push
push
scas
shl
mov
imul
rcr
push
mov
inc
pop
xchg
fwait
jnp
push
mov
test
xor
out
mov
cmp
sub
add
mov
mov
js
loop
mov
popf
mov
mov
dec
std
inc
sahf
adc
nop
inc
mov
push
sbb
bound
inc
in
stc
add
inc
mov
mov
std
ja
inc
fcmovne
fisubr
xchg
shr
mov
inc
cmc
and
mul
sbb
pop
loopne
ret
lods
xlat
clc
pop
adc
push
mov
adc
nop
test
mov
pop
das
cvttps2pi
(bad)
or
or
push
xchg
pop
cmp
inc
mov
pop
aam
dec
add
adc
je
dec
mov
dec
js
sub
or
in
leave
stc
pusha
les
sbb
mov
inc
mov
pop
movs
out
pop
sub
cmp
sub
cli
pop
iret
retf
xchg
jg
jmp
loopne
xchg
cli
lods
jmp
adc
ss
out
and
mov
out
cld
cmp
imul
loope
xor
cmp
lods
sbb
test
hlt
lds
mov
stos
sbb
dec
xchg
mov
cmc
popa
fisttp
cmp
hlt
mov
adc
ror
(bad)
push
fsubr
jg
mov
cmps
add
sub
add
shr
jb
enter
add
push
jae
and
aam
stc
dec
out
sti
outs
sbb
popa
sahf
add
pop
xchg
popa
and
shl
xor
add
inc
cmp
movs
lods
in
and
xchg
rcr
xor
cld
sub
les
pop
imul
xchg
xchg
inc
pushf
sbb
stc
mov
adc
outs
push
pop
jmp
gs
pop
adc
rcl
push
test
fsubr
xchg
les
cmp
ins
mov
call
call
cs
mov
jb
movs
mov
test
cmp
jnp
in
ins
push
pop
fidiv
jp
or
imul
shl
push
je
xchg
in
cmp
pop
lea
loopne
xchg
cmp
cmp
xor
dec
dec
ror
mov
pop
inc
add
xor
call
loopne
addr16
xchg
inc
repnz
popf
mov
xor
xchg
mov
pop
bound
sahf
in
pop
dec
mov
aaa
pushf
ins
(bad)
retf
xor
mov
popf
call
inc
cmps
ja
adc
test
pop
sub
(bad)
cmps
loopne
and
fistp
cmc
and
and
mov
(bad)
nop
xor
push
mov
jae
int3
push
clc
repz
data16
mov
(bad)
hlt
ret
pushf
paddb
dec
fadd
test
not
add
enter
push
enter
stos
lods
push
inc
xchg
pop
(bad)
push
ret
int
xor
jl
xor
in
stos
dec
mov
adc
dec
aaa
push
sahf
inc
cmps
cdq
fistp
add
or
jecxz
adc
sub
sbb
in
cmps
stc
test
in
popf
fcom
sbb
inc
rcl
push
or
aas
movs
cld
mov
bound
jge
jnp
push
inc
xchg
test
add
imul
mov
fmul
fs
dec
jns
iret
xor
mov
cmp
std
(bad)
loope
sub
aas
or
pop
xor
or
mov
cmovae
xchg
adc
lock
and
clc
xchg
and
mov
arpl
popf
inc
aas
adc
push
fcom
scas
imul
loope
dec
sbb
push
(bad)
push
loopne
mov
dec
jp
sub
test
es
sbb
cmp
es
inc
pop
xor
(bad)
mov
pop
xchg
shl
push
jo
dec
add
mov
cwde
or
mov
icebp
jns
into
xchg
arpl
pop
adc
mov
adc
(bad)
sbb
jge
mov
xlat
push
sub
mov
popa
lds
ds
fldenv
push
push
jecxz
mov
jl
xor
push
fidiv
(bad)
or
mov
imul
sbb
fnstcw
out
mov
inc
addr16
inc
minps
pop
(bad)
cmp
inc
fwait
movs
leave
mov
imul
push
lds
dec
sub
pop
mul
sub
pop
in
neg
push
add
sbb
outs
cld
inc
xor
sbb
and
(bad)
cmovs
jmp
shl
bound
jg
frstor
fnstenv
inc
rcr
dec
adc
jecxz
pop
mov
inc
xchg
outs
mov
adc
iret
loop
push
mov
pop
xor
jg
aad
dec
add
repnz
mov
push
cmp
cld
pop
fisubr
enter
(bad)
ja
loopne
shr
repnz
mov
xchg
call
dec
add
ins
mov
pop
add
adc
push
adc
mov
push
push
aaa
pop
push
cwde
ret
cmp
jmp
mov
pusha
enter
ret
inc
shl
inc
fisubr
pop
dec
add
mov
popf
and
push
mov
out
sub
push
es
cmps
stos
ficomp
jo
add
(bad)
pushf
mov
dec
cmp
iret
cmp
sar
and
(bad)
int
and
ins
dec
or
div
xchg
rol
ret
adc
dec
dec
mov
out
push
mov
or
xchg
jae
and
rcl
jb
shl
pushf
ss
add
nop
sub
shl
push
xchg
js
mov
lock
sub
and
jmp
pop
dec
dec
inc
(bad)
jo
add
gs
sbb
iret
sub
ins
and
fmul
add
push
xor
push
jge
(bad)
mov
addr16
and
cmp
or
add
sub
add
push
mov
cmp
ret
cmp
dec
cmps
push
lea
cmp
rol
icebp
loopne
add
mov
jle
daa
jl
es
dec
push
cld
out
sar
loopne
ret
jmp
pop
pop
sub
xor
pop
test
rcr
dec
std
out
icebp
push
mov
ds
push
sbb
cwde
push
add
fucom
int
pop
aam
pop
xchg
(bad)
pop
out
push
retf
(bad)
cmps
pop
(bad)
jmp
push
cmp
enter
test
cs
icebp
sahf
adc
fild
outs
iret
pusha
add
pop
mov
inc
div
fdivr
cld
rcr
sub
scas
shl
dec
(bad)
xchg
mov
test
(bad)
dec
hlt
mov
pop
sub
repz
jl
add
dec
xor
(bad)
adc
inc
mov
repnz
and
lea
adc
shr
call
fbld
out
retf
mov
xchg
mov
je
sub
(bad)
sub
pop
xor
xchg
mov
jge
xchg
(bad)
daa
sub
cmp
jns
div
mov
jmp
jl
inc
int
mov
add
xor
adc
push
ss
inc
xchg
stos
pop
or
pop
push
add
add
or
jp
or
in
stos
psubd
push
sbb
add
dec
arpl
or
add
add
jp
fstp
test
sbb
xor
jbe
pop
push
gs
loop
mov
pushf
push
ror
sahf
or
mov
clc
add
add
popa
cmp
pop
xor
sub
push
mov
mov
lods
mov
lahf
xchg
add
jge
pop
and
mov
dec
scas
jnp
adc
cmp
cdq
jnp
ins
sbb
cs
add
mov
dec
pop
aad
jmp
xchg
xchg
jp
data16
and
(bad)
retf
sbb
dec
push
cli
push
pop
sub
iret
cdq
xchg
add
adc
push
out
push
(bad)
pop
xor
and
dec
pop
shufps
ins
fwait
in
cwde
mov
add
inc
inc
xor
sub
stc
pop
mov
ja
mov
xchg
ss
xor
pop
xchg
pop
mov
(bad)
addr16
mov
sub
aam
push
adc
mov
cmp
xlat
pop
xlat
xchg
sub
cld
pop
popa
dec
push
mov
mov
dec
add
pop
fimul
pop
repz
inc
in
clc
scas
pop
inc
jnp
push
(bad)
mov
ja
pushf
dec
mov
rcr
(bad)
call
add
dec
aaa
dec
add
cmp
xchg
hlt
and
adc
mov
xor
add
xchg
hlt
scas
lahf
push
hlt
pop
loop
jmp
pop
pusha
jmp
push
dec
int3
aam
test
js
ins
rol
xlat
clc
xor
lds
sbb
jge
jmp
nop
mov
aam
pop
test
push
xlat
shr
mov
fdivr
and
mov
push
push
call
test
stos
out
or
xor
push
or
sub
out
iret
dec
cwde
sbb
stos
fidivr
push
mov
adc
push
mov
out
dec
push
sub
daa
push
les
into
jb
test
inc
mov
or
ss
dec
aas
mov
std
inc
add
(bad)
ficom
mov
icebp
retf
stos
rol
lods
lock
mov
push
xor
mov
out
fsub
cmp
pop
pop
inc
adc
cmp
pop
pop
jge
pop
std
or
sub
test
ja
dec
pushf
loop
xchg
rcl
ja
cmp
dec
sahf
aam
add
xchg
aaa
into
stc
loopne
fs
mov
mov
cmps
push
jmp
mov
fnstsw
or
int3
inc
push
(bad)
ja
xchg
inc
int3
lods
les
das
jmp
not
mov
outs
(bad)
jg
dec
push
mov
pop
pushf
fld
xchg
test
rcl
xchg
sbb
add
iret
jne
stc
aaa
mov
fs
mov
fimul
fisttp
ds
dec
pop
aaa
sub
dec
dec
mov
fist
addr16
cmp
push
add
icebp
jnp
fucom
xchg
or
xor
adc
mov
arpl
out
loopne
rol
cmp
push
clc
out
jp
ins
dec
hlt
mov
cmp
(bad)
and
pop
out
push
adc
adc
and
fidivr
and
call
lods
add
imul
pushf
in
adc
imul
std
gs
add
minps
dec
retf
push
inc
call
adc
dec
lds
push
mov
jno
jnp
pop
or
scas
ss
and
push
jge
push
out
xor
add
push
jbe
or
scas
aas
dec
inc
cs
pop
jo
out
pop
pop
fwait
xchg
rcl
jne
xor
jg
pop
push
rol
sbb
fsub
lahf
dec
mov
out
cmp
scas
mov
(bad)
xchg
pop
mov
push
sub
fld
or
js
stos
imul
or
mov
inc
(bad)
adc
add
mov
push
cld
mov
and
jmp
inc
int3
xor
daa
ja
mov
loopne
jmp
cmps
and
add
test
in
mov
nop
(bad)
std
pop
test
inc
(bad)
pop
mov
aam
pop
mov
xchg
cmp
idiv
pop
mov
fcmovu
(bad)
jp
xchg
mov
adc
jnp
rcl
jnp
mov
cmp
mov
(bad)
mov
(bad)
add
into
mov
mov
aas
xchg
xlat
addr16
push
mov
dec
lds
xchg
or
mov
int
sub
pop
(bad)
mov
cmp
cwde
test
sub
jmp
rcr
mov
(bad)
(bad)
mov
into
xchg
dec
mov
out
(bad)
jmp
jmp
push
rcl
or
dec
ins
(bad)
dec
push
scas
clc
mov
test
mov
hlt
push
push
pop
xor
test
daa
sbb
sbb
add
mov
inc
(bad)
xor
rol
sub
cmps
dec
adc
add
sbb
fs
fmul
cld
imul
lods
and
ror
out
and
test
mov
xchg
ins
mov
pop
aam
(bad)
(bad)
cld
ins
sub
adc
shl
mov
xor
xchg
pop
out
inc
fistp
cmp
push
or
and
sbb
into
lods
cs
or
mov
jno
imul
and
dec
pop
aam
push
ret
sub
fld
jnp
retf
icebp
test
pop
(bad)
sub
adc
pop
fnsave
cmp
test
inc
and
xor
pop
js
jae
sub
jmp
dec
(bad)
push
push
mov
jmp
ret
sub
shr
push
in
push
jmp
sub
sub
mov
clc
push
inc
xor
scas
dec
sti
cmps
je
dec
cs
rol
fsubrp
sti
xchg
fwait
mov
dec
cmps
xchg
in
movs
lods
push
sub
nop
ds
sahf
mov
or
int3
mov
pop
(bad)
cli
imul
push
ror
loop
arpl
movs
out
(bad)
jne
arpl
ficom
dec
mov
push
cld
and
jbe
dec
lods
rcl
test
push
inc
adc
jl
pop
adc
add
mov
pushf
(bad)
(bad)
pushf
stos
xchg
cmp
cmp
add
imul
mov
push
retf
popf
pop
adc
pop
aad
icebp
mov
cmp
mov
push
jmp
jo
pushf
stos
frstor
inc
inc
mov
mov
pop
cmp
cmp
clc
sbb
lods
xchg
es
cmp
int3
mov
mov
dec
fst
pop
retf
push
push
aas
in
arpl
and
not
jmp
adc
xor
xchg
jmp
out
pop
push
pop
(bad)
out
pop
cli
xor
les
push
cmp
cmp
add
cmp
pop
mov
cdq
gs
cmp
lock
cmp
call
into
into
stc
leave
not
sbb
aas
push
xor
sbb
fcmovbe
pop
mov
fwait
sbb
sti
movs
cmp
popw
push
mov
(bad)
aam
add
rol
neg
loop
and
leave
das
cli
push
xor
dec
jb
push
pop
sub
lock
lods
cmp
inc
mov
ret
and
cs
int3
in
sub
jno
stos
lock
pushf
lock
jnp
mov
pop
pop
adc
dec
jecxz
fist
nop
and
std
mov
dec
rcr
cmp
lahf
out
xlat
jmp
(bad)
loopne
sub
lds
mov
adc
xor
fadd
jl
in
fstp
call
dec
aad
xchg
xchg
scas
or
push
add
mov
and
jno
into
inc
ins
aam
inc
(bad)
dec
sbb
loop
shl
or
xor
ja
adc
adc
mov
mov
pop
aaa
ins
xor
push
mov
les
sub
nop
gs
aas
movs
fcomp
lahf
jmp
out
les
xor
sub
jno
add
popf
push
stos
add
inc
mov
add
cmp
dec
stos
cmp
sti
adc
daa
and
add
adc
pop
or
xchg
dec
call
xor
icebp
and
cmp
imul
mov
iret
mov
xlat
xor
in
mov
adc
call
mov
xchg
mov
mov
scas
scas
sbb
mov
sub
fwait
add
lahf
pushf
push
andnps
adc
push
test
xor
jbe
xchg
or
mov
clc
mov
xchg
xchg
dec
or
push
pop
adc
sbb
addr16
inc
mov
mov
rcl
mov
and
mov
pop
fisubr
leave
arpl
adc
and
retf
fs
push
daa
sbb
pop
cld
lahf
rcl
psubsw
sar
dec
mov
adc
push
(bad)
pop
sbb
xchg
les
mov
(bad)
test
sbb
rol
dec
add
popa
push
mov
stos
cwde
lea
and
adc
cmc
out
xchg
or
ins
mov
xchg
hlt
nop
mov
inc
in
push
(bad)
(bad)
push
in
int3
(bad)
movs
mov
xchg
shl
adc
fimul
fwait
sub
and
mov
xchg
test
inc
xchg
arpl
aaa
inc
xchg
std
xchg
xor
(bad)
cmc
sub
cwde
and
pop
xchg
in
rcl
push
rol
cwde
out
and
addr16
mul
mov
xchg
popa
pop
sbb
ins
shl
stos
pushf
mov
push
push
mov
or
test
mov
xchg
fisub
sbb
call
aad
loopne
ds
aaa
nop
add
mov
lahf
mov
mov
or
push
xor
and
in
in
dec
dec
jns
xchg
adc
jmp
fisub
fld
push
dec
bound
cmp
fwait
jmp
nop
fsubr
cdq
(bad)
add
test
(bad)
cmp
fld
push
test
jo
mov
test
mul
add
lock
shl
(bad)
in
sub
les
add
mov
push
mov
imul
dec
add
cmp
fstp
and
mov
pop
(bad)
cmps
xor
mov
xchg
dec
ss
adc
xlat
pop
icebp
repz
shr
or
(bad)
push
ss
jnp
inc
dec
out
jge
in
arpl
pushf
ss
loopne
sub
mov
in
aam
push
mov
stc
adc
sub
jmp
arpl
push
dec
gs
and
icebp
dec
inc
cmp
push
aad
cmp
out
fild
push
lea
cdq
and
retf
nop
jnp
mov
mov
pop
push
fld
dec
pop
aas
popa
mov
jle
pop
loope
mov
push
(bad)
mov
mov
ror
lahf
push
jb
test
fwait
hlt
imul
cld
mov
mov
adc
imul
pop
repnz
pop
mov
xchg
test
pop
neg
xor
test
fsub
shr
cmp
lock
sub
out
pop
pop
pop
xchg
daa
add
mov
pop
sbb
push
cmc
les
mov
mov
dec
sbb
sahf
xchg
int3
cmp
sub
cmp
popf
add
ins
cmp
mov
cmp
xor
mov
mov
jp
enter
mov
lods
and
stos
jnp
xor
mov
sub
cs
in
xchg
(bad)
mov
add
cmp
adc
pop
inc
and
adc
fdiv
add
pop
xchg
lock
ds
ret
movs
push
mul
inc
outs
mov
pop
daa
mov
pop
cmp
pop
pop
neg
adc
cwde
inc
dec
inc
fidiv
adc
scas
sbb
xchg
adc
mul
xchg
sti
jmp
sub
adc
stos
ja
pop
mov
xor
rcr
and
outs
adc
cmp
clc
or
xchg
sub
cmp
std
push
jg
(bad)
adc
icebp
adc
fidivr
mov
pop
xchg
pop
clc
push
cmps
pop
lahf
xchg
call
nop
xchg
std
mov
jae
idiv
xor
lahf
xor
(bad)
(bad)
pop
mov
sbb
adc
loop
(bad)
dec
push
sbb
jnp
push
pop
push
inc
fs
test
mov
stc
push
je
pop
jb
out
sbb
clc
inc
cmps
cmp
imul
enter
out
xor
cmp
lahf
fld
add
test
(bad)
movs
jp
xor
cmp
jns
fwait
xchg
push
maskmovq
neg
das
sbb
mov
push
ja
push
ds
shl
jcxz
pop
xor
dec
mov
aam
retf
push
retf
sbb
dec
push
add
and
mov
inc
pop
ins
stos
pushf
mov
xlat
ret
or
cmp
mov
xchg
dec
dec
jmp
inc
mov
xor
xchg
(bad)
stos
dec
loop
xchg
pop
aam
(bad)
sahf
jne
sbb
sbb
stos
sub
dec
stos
aaa
mov
aas
xor
cmp
cmp
dec
mov
ja
es
jo
jo
call
xchg
add
mov
adc
push
fincstp
xor
jge
dec
es
cwde
adc
mov
fcmove
sub
lock
ficom
mov
in
lock
sbb
call
fld
mov
mov
mov
adc
ret
or
push
jne
fwait
pop
mov
sub
je
mov
shl
push
shr
jp
jge
(bad)
pop
sar
sub
xchg
cs
and
xor
es
push
leave
sbb
repnz
push
jg
pusha
test
sti
aaa
les
out
leave
mov
push
clc
mov
cmp
mov
or
bound
push
mov
push
scas
push
push
jp
push
arpl
sub
dec
in
lods
xor
shl
xor
mov
xor
cdq
mov
shr
push
imul
add
lods
lock
jmp
cmc
add
sub
inc
adc
pusha
dec
mov
int
mov
(bad)
ja
push
inc
push
mov
sahf
mov
das
ret
les
pop
stos
in
call
(bad)
pop
icebp
ja
addr16
mov
loop
ret
lods
fs
mov
xchg
push
xor
push
outs
xor
mov
push
push
stos
scas
xlat
or
dec
add
stos
sbb
int3
adc
mov
cmp
push
imul
aad
or
daa
cmp
push
pop
sub
(bad)
loop
inc
mov
push
sub
and
inc
cld
push
out
out
jle
dec
aam
ja
call
pop
dec
test
jae
mov
je
into
js
pop
sahf
movs
fsubrp
in
and
xchg
push
sub
push
in
add
popf
and
sbb
push
add
fdiv
(bad)
pop
jmp
push
xchg
add
or
data16
pop
jge
and
jae
dec
jns
(bad)
push
sub
cmp
and
mov
addr16
jecxz
pop
mov
pop
adc
and
xor
sbb
ficom
ins
and
jo
cmps
outs
or
push
int
push
test
xor
arpl
sub
scas
jo
adc
cmp
loop
cmp
dec
aam
sbb
mov
fimul
lock
pop
and
ss
aad
popa
adc
pop
push
cwde
dec
mov
dec
jno
dec
aad
mov
ins
and
jg
mov
mov
icebp
and
xchg
jno
retf
fidivr
adc
push
jg
cmp
push
aad
pushf
push
jnp
cmp
rcr
pop
movzx
ins
lea
add
arpl
mov
loopne
or
jmp
sahf
ins
scas
push
adc
mov
pop
(bad)
in
jecxz
sub
xchg
inc
pop
jp
push
shl
jmp
sub
dec
cmps
ja
jbe
sub
sbb
bound
push
ffreep
xor
jno
lods
and
into
mov
jmp
add
sbb
inc
loopne
inc
dec
mov
and
mov
xchg
mov
add
sar
pop
jo
dec
adc
inc
cdq
es
adc
mov
jecxz
cmp
inc
mov
mov
cmp
and
js
loopne
xchg
repnz
dec
mov
mov
(bad)
xchg
scas
(bad)
mov
xchg
dec
mov
xchg
mov
sbb
jno
sub
adc
punpcklwd
xlat
xor
pop
add
dec
int3
push
clc
movs
and
cwde
mov
mov
mov
jbe
pop
push
sub
stc
push
xchg
push
dec
imul
pop
hlt
pop
aaa
jl
lods
neg
lods
ret
(bad)
sbb
jecxz
adc
fiadd
(bad)
mov
or
mov
jae
dec
ds
or
stos
ins
mov
fcomp
fdivr
ret
jbe
and
dec
pop
popf
mov
sahf
out
jp
scas
sub
xchg
xchg
pop
repnz
ret
fdivrp
fcomp
fcom
into
mov
inc
xlat
bndstx
nop
sub
jl
mov
xor
ror
add
sbb
stc
test
inc
pop
add
(bad)
jge
movs
dec
mov
shr
mov
cmp
push
dec
sub
sbb
mov
mov
ror
cmps
mov
and
in
shr
dec
pop
test
cld
xor
pop
(bad)
pushf
jl
pop
inc
(bad)
mov
xor
outs
int
or
(bad)
mov
ret
nop
sub
ror
dec
add
repnz
test
dec
fcom
dec
loope
rcl
loopne
jle
xchg
das
inc
imul
(bad)
pop
neg
xlat
adc
(bad)
xchg
jge
pop
sub
dec
pop
in
jo
(bad)
mov
or
pop
loop
jle
jmp
test
mov
stos
and
shl
mov
push
jg
xchg
test
stos
and
mov
popa
fdiv
(bad)
cmps
sar
push
das
sbb
dec
dec
mov
mov
jb
dec
inc
cmp
mov
lds
(bad)
loope
(bad)
idiv
and
inc
add
jle
or
add
and
jp
aam
ins
dec
push
jae
and
shl
jns
lods
pop
sbb
push
sbb
out
mov
pushf
xchg
mov
fmul
adc
jmp
in
popa
pop
fdivr
enter
out
dec
(bad)
add
jne
sub
shl
pop
mov
stos
arpl
repz
out
add
fwait
cwde
inc
in
add
loopne
adc
fstp
loop
sbb
in
and
mov
or
cli
repnz
out
push
jg
mov
int3
pusha
mov
jecxz
cmps
and
push
inc
repz
fisub
sub
dec
sub
cdq
mov
mov
push
mov
daa
ins
shl
or
js
pop
test
leave
cdq
mov
sub
cmp
loope
pop
adc
push
fucom
push
dec
push
mov
(bad)
cwde
pop
loopne
(bad)
fwait
jmp
pop
in
sbb
xchg
and
sub
sbb
jg
les
addr16
adc
outs
pushf
pop
xor
pop
add
mov
mov
and
in
repnz
repnz
mov
mov
dec
inc
sbb
(bad)
sub
pop
loop
jnp
ja
stos
cmps
pushf
inc
fbstp
loop
xor
inc
xor
mov
push
out
add
add
mov
push
scas
pop
mov
mov
and
xor
jbe
fld
fiadd
movs
(bad)
mov
in
push
dec
dec
jl
cwde
into
pop
cmc
popf
sub
or
push
sbb
push
jne
rol
shl
movs
pop
idiv
stos
into
jnp
cwde
jno
inc
pop
call
xchg
in
sub
xchg
mov
xor
pause
pushf
in
outs
adc
cmp
push
jmp
push
pop
push
xor
adc
(bad)
jge
xchg
fmul
popa
xchg
mov
mov
pop
call
mov
test
push
push
arpl
sar
les
xchg
mov
ret
ror
fld
sahf
gs
(bad)
cld
mov
mov
cmps
sub
push
push
ret
call
nop
arpl
mov
or
dec
pop
push
mov
xchg
cmp
xlat
pushf
sbb
jae
call
and
pop
mov
mov
stc
lea
(bad)
into
xchg
sar
add
fwait
lea
outs
rol
jae
and
push
and
lea
xor
adc
neg
dec
pop
inc
dec
jbe
sbb
cmp
fst
out
pop
mov
std
or
test
jp
ins
push
mov
mov
in
ss
mov
rcl
stc
mov
mov
neg
popa
loopne
sub
lock
dec
out
inc
std
xor
push
pop
jo
(bad)
sbb
stos
ins
xchg
loope
xor
lds
ja
enter
movs
lods
aam
(bad)
mul
lods
(bad)
pop
ficomp
pop
loope
or
imul
inc
in
mov
adc
dec
add
sbb
cmp
shl
int
cmp
mov
and
jmp
pushf
push
or
test
jge
mov
pusha
pop
push
adc
dec
clc
int3
dec
mov
out
push
div
xchg
(bad)
or
enter
add
into
pushf
mov
adc
cmp
mov
dec
movs
mov
inc
push
and
cmps
sbb
ror
(bad)
sub
adc
nop
mov
mov
int3
mov
into
mov
pop
js
inc
mov
adc
test
pop
ss
push
push
adc
dec
xor
and
jg
dec
xlat
dec
sub
out
in
cdq
lahf
inc
or
mov
push
out
jo
sbb
sti
nop
add
sub
xchg
cld
or
dec
lea
int3
adc
jge
mov
xchg
mov
xor
icebp
push
inc
cmp
jle
jle
jns
unpcklps
jle
aaa
mov
pop
mov
aaa
xor
clc
in
push
sar
pop
push
scas
jns
test
push
scas
sti
jp
hlt
movnti
sbb
add
imul
addr16
aam
dec
or
adc
sbb
pop
es
mov
scas
out
mov
(bad)
push
xor
mov
push
pushf
sub
mov
mov
sbb
scas
push
in
or
pop
test
sub
mov
int3
xchg
stos
mov
push
and
fcmovnbe
bound
jmp
cdq
in
(bad)
in
dec
nop
xchg
loopne
gs
in
rcl
or
cmp
xchg
jmp
pop
inc
pop
cmps
mov
jecxz
repz
mov
xor
sbb
test
dec
lock
or
stos
and
dec
push
push
sbb
mov
dec
xor
xchg
outs
arpl
jp
mov
add
nop
pop
and
pushf
sbb
jno
adc
cmp
ins
push
jecxz
xor
fwait
push
imul
test
retf
pop
mov
shr
fs
xchg
and
sbb
sti
shl
pop
dec
add
into
mov
push
mov
xor
aad
fcom
dec
(bad)
lock
and
outs
aaa
movlps
imul
into
dec
jp
fldcw
pop
push
js
push
sub
pop
ins
dec
jmpw
fisubr
outs
fidivr
cs
jae
into
es
xor
jp
pushf
mov
mov
cmps
fdivr
cs
mov
es
mov
cmp
sar
xor
sub
cmc
mov
mov
cmp
sbb
or
jg
mov
xor
imul
dec
rol
or
aas
cmp
pop
mov
cmp
xlat
popa
addr16
adc
test
pop
inc
outs
int3
stc
pop
das
mov
cdq
mov
pop
sti
fisubr
jb
pusha
test
push
fidivr
imul
js
mov
stos
lea
adc
inc
and
mov
xchg
push
pop
mov
mov
push
lods
fistp
ds
gs
xchg
sub
pop
mov
jno
imul
movlps
test
leave
push
pop
int3
stc
shl
jecxz
leave
inc
jge
pop
in
lahf
push
pop
and
test
pusha
je
sbb
mov
fdiv
or
push
fidiv
mov
push
or
jbe
fwait
push
sub
dec
jmp
xchg
mov
fdivp
or
or
(bad)
xchg
outs
in
push
in
pop
test
sbb
inc
sub
(bad)
nop
jmp
out
xchg
mov
ins
sub
jp
or
and
xchg
xor
pop
(bad)
addr16
jle
sub
push
pop
or
xor
lods
(bad)
xchg
out
sub
dec
imul
pop
and
pop
(bad)
aaa
call
pop
pop
fiadd
cld
inc
(bad)
mov
fwait
pushf
push
xchg
dec
cmp
icebp
bswap
sbb
and
mov
and
clc
cmp
mov
mov
sbb
jecxz
imul
das
inc
sub
jno
pop
mov
mov
push
inc
ret
push
fs
call
(bad)
repnz
mov
push
and
jge
cld
push
dec
fs
push
add
add
shl
(bad)
movs
pusha
imul
std
pop
(bad)
mov
mov
int3
lods
loop
adc
mov
cmc
movs
pop
or
mov
jmp
jbe
shl
push
pop
call
fstp
and
jl
aaa
rol
sti
ins
fist
es
or
aam
stc
dec
jne
xor
test
adc
sbb
xchg
(bad)
and
repz
(bad)
jl
push
push
fldl2e
out
pop
mov
jmp
cmp
ror
stos
jns
pop
popf
lds
mov
fild
push
inc
and
push
scas
out
rcl
arpl
lods
adc
addr16
adc
shl
sub
pop
push
mov
pop
xor
inc
cwde
cmp
push
(bad)
pop
into
or
enter
dec
js
inc
popa
fnstcw
mov
arpl
jl
cmp
call
cld
inc
dec
jne
lock
inc
mov
cmp
cmp
xchg
and
inc
ret
ja
and
es
push
loope
stos
fldenv
xor
jg
inc
inc
out
or
loop
fiadd
(bad)
stos
fsub
inc
push
shl
jp
iret
pop
adc
(bad)
pop
sub
push
out
stos
jge
jl
dec
rcl
inc
inc
sbb
jae
mov
imul
xchg
and
leave
and
or
push
out
jge
sub
push
and
std
sub
add
rcr
xor
ror
fwait
(bad)
push
test
push
(bad)
ret
sub
(bad)
movs
loop
mov
or
(bad)
push
(bad)
ffreep
iret
cdq
ret
fwait
dec
xchg
sub
xchg
fsub
sub
jg
mov
fmul
dec
aam
int3
in
sbb
sbb
imul
je
inc
lods
das
xchg
mov
addr16
jecxz
xchg
jge
out
and
sub
in
push
aam
out
rcr
fimul
pop
sub
cmp
mov
inc
mov
pop
mov
rcl
cwde
fstp
dec
addr16
rcl
es
sahf
out
jo
outs
cs
sub
pop
(bad)
mov
mov
xchg
push
call
cmp
dec
inc
gs
mov
jbe
ins
pop
movs
in
jl
and
(bad)
jle
shr
or
cmp
xchg
fstp
repz
or
ins
dec
js
lods
pop
sbb
lahf
mov
mov
clc
in
popa
xchg
mov
aad
push
pop
(bad)
sub
sub
mov
js
sub
ds
inc
dec
das
jmp
(bad)
fs
call
scas
call
xchg
xor
dec
mov
pop
cmp
xchg
jecxz
std
nop
xor
ins
out
xor
and
add
xor
aam
movs
sbb
inc
xchg
jmp
jo
jnp
dec
fxch
cmp
add
scas
xlat
imul
sub
fdivr
lea
and
push
rol
jl
pop
outs
sub
mov
push
or
mov
cwde
cmps
mov
adc
push
mov
call
pop
jge
loope
sbb
adc
sub
addr16
lock
mov
jne
sub
dec
call
aad
pop
inc
xor
cmp
repnz
mov
sub
inc
fisubr
dec
movs
cmp
xchg
inc
cli
jne
xchg
xor
dec
mov
mov
sbb
in
xchg
add
aam
mov
leave
out
(bad)
rcl
and
je
push
ror
mov
pop
push
shl
xor
in
ss
pushf
dec
sbb
int
and
popa
shl
push
jnp
out
fild
dec
add
outs
push
mov
pop
mov
inc
stos
popa
jg
dec
fadd
aas
mov
fidiv
dec
bound
or
(bad)
pop
xchg
jb
sbb
cmp
mov
fs
mov
jae
adc
jl
int3
add
pusha
sbb
mov
imul
mov
hlt
sub
and
cmp
pop
loopne
fld
sub
leave
sbb
lods
cmp
(bad)
int
mov
leave
mov
mov
ja
ins
(bad)
fwait
pop
adc
shl
adc
fwait
ins
pop
push
outs
je
fadd
idiv
not
out
sbb
cmps
dec
mov
mov
std
pop
mov
pop
dec
push
pop
clc
xchg
aam
addr16
jge
pop
mov
sbb
mov
loop
pop
jno
mov
sub
cmp
out
mov
jb
movs
lock
aaa
dec
jnp
jp
(bad)
xchg
jp
sub
gs
mov
sar
out
mov
in
push
sbb
imul
mov
out
adc
xor
sub
fcom
into
inc
cmp
(bad)
xchg
adc
or
or
call
(bad)
cmc
call
fs
imul
dec
cmp
add
mov
pop
mov
xchg
jle
sub
retf
imul
pop
(bad)
mov
and
adc
fld
pop
aad
inc
xor
jno
ss
sbb
inc
into
add
addr16
js
add
jmp
inc
cmp
int
add
ja
adc
inc
out
sahf
jge
popa
ja
sbb
fild
cmp
jl
aaa
push
push
leave
hlt
les
adc
shl
adc
mov
jge
push
add
ins
aaa
jnp
pop
jle
out
je
jl
pop
xchg
pop
add
call
popf
retf
adc
mov
leave
xchg
aaa
mov
mov
push
fsub
push
add
ficom
push
repz
cmp
mov
add
xor
sub
rcr
pop
aam
and
xchg
mov
out
enter
add
shr
dec
jmp
inc
push
shr
cld
add
push
jge
pop
mov
pushf
ror
mov
push
in
loopne
inc
rol
retf
add
or
sub
and
shr
or
in
call
lahf
fidiv
lock
bt
out
mov
mov
in
aaa
adc
in
rcr
(bad)
cmp
xor
call
jg
cwde
adc
les
mov
arpl
nop
mov
xlat
dec
mov
push
sbb
inc
push
pop
xchg
cld
push
mov
pop
fisubr
or
jl
add
dec
mov
mov
xchg
jne
cmp
pusha
and
mov
pop
xor
loopne
and
ins
push
mov
(bad)
mov
je
cmp
in
sbb
mov
jge
sub
inc
push
sbb
cmp
push
mov
aaa
scas
mov
push
sbb
fadd
push
js
add
mov
pushf
cmp
clc
ficomp
jnp
es
jmp
xor
out
enter
or
popf
sbb
aad
mov
ins
loopne
or
push
sbb
outs
sub
enter
jnp
lds
or
sub
pop
pop
ins
movs
sub
mov
mov
sbb
out
add
stc
jb
sub
int3
lahf
add
xor
xor
outs
stos
xchg
and
retf
or
or
(bad)
and
jnp
shl
shr
ss
lock
add
pushf
add
jnp
adc
xor
xchg
(bad)
es
dec
mov
jnp
in
sub
jno
outs
dec
mov
test
inc
xchg
sbb
mov
or
push
cs
mov
add
pop
loopne
cmp
mov
jl
push
inc
mov
mov
ds
(bad)
idiv
mov
adc
dec
repnz
icebp
sub
jnp
fstp
sub
sbb
fdiv
jb
dec
cmp
aad
push
mov
arpl
or
dec
mov
or
not
push
xchg
xchg
jb
mov
das
lods
push
xchg
cmps
repz
mov
ret
das
pop
clc
ror
sub
cmp
aaa
adc
clts
mov
push
push
sar
daa
push
rcr
pop
leave
lods
in
mov
pop
mov
(bad)
dec
call
daa
pop
sbb
fistp
add
push
xchg
call
mov
adc
lods
ror
popf
and
dec
movs
dec
fst
sbb
xchg
adc
push
add
aaa
xor
jl
sub
test
cs
xchg
(bad)
xlat
and
lods
pop
sub
cmp
addr16
clc
stos
dec
jl
jb
mov
xor
aaa
push
pop
repnz
mov
cmp
cmps
fimul
(bad)
(bad)
lods
faddp
cmps
inc
addr16
pop
mov
lahf
fnstsw
push
push
jbe
mov
das
out
sbb
ins
and
mov
outs
rcl
ja
in
dec
call
bound
fcom
std
fcom
pop
mov
into
mov
sub
loope
stos
ror
lahf
lea
jmp
xchg
dec
push
mov
xor
push
dec
inc
lods
cs
aaa
inc
call
push
push
add
mov
ror
popa
aam
loop
adc
jmp
xor
scas
not
sbb
int3
daa
ins
fild
fcom
mov
repnz
(bad)
xlat
(bad)
mov
movs
push
cmp
mov
mov
jne
(bad)
cmp
jmp
cdq
(bad)
push
jl
xchg
popf
shr
ja
sub
out
outs
sahf
fistp
push
add
mov
cmp
inc
iretw
dec
or
rol
add
shr
sub
scas
jmp
icebp
dec
mov
dec
data16
mov
jecxz
or
jne
cwde
adc
or
cmp
loope
enter
inc
adc
push
mov
lds
dec
addr16
rcl
scas
daa
and
mul
rcl
cdq
push
jns
sbb
shl
es
and
pop
jae
fmul
push
ret
loopne
clc
mov
retf
xor
cld
(bad)
lods
rcr
rcl
cmc
das
loope
iret
ret
test
aaa
or
pop
adc
cmp
fs
cwde
lock
jmp
cdq
retf
jge
fbld
xchg
call
and
sbb
xchg
fst
mov
mov
inc
daa
fcom
jmp
mov
sbb
dec
fstp
mov
repnz
lock
adc
jbe
sar
or
mov
aas
sub
mov
mov
call
push
lahf
push
sbb
dec
mov
push
mov
std
sub
pop
hlt
jl
dec
mov
retf
ins
retf
ret
popa
sbb
ds
pop
jmp
pop
pop
xor
popf
fs
mov
rcr
xor
test
mov
sbb
cmp
and
push
pop
push
adc
pop
pop
jb
mov
xchg
shl
dec
mov
mov
out
inc
mov
outs
iret
push
dec
inc
pop
(bad)
push
cld
leave
sbb
pusha
cdq
mov
dec
and
jle
dec
je
mov
ja
rcl
push
cs
out
mov
fisttp
push
jbe
mov
in
mov
or
dec
pop
dec
fcomp
dec
push
mov
das
bound
push
mov
lahf
jbe
sub
cdq
jmp
jo
mov
push
pop
ret
sbb
loopne
mov
stos
cmps
ror
ins
retf
int
dec
mov
pop
aad
arpl
cld
in
and
out
mov
(bad)
mov
jmp
ins
mov
cmp
adc
adc
lods
shl
push
pop
inc
test
and
push
(bad)
into
push
xchg
jecxz
rol
call
iret
add
lds
retf
fst
mov
push
shr
daa
pop
int3
sub
mov
sbb
arpl
jmp
xchg
mov
into
push
xor
xchg
push
rcl
aaa
data16
jp
nop
loope
dec
sbb
add
sbb
inc
stc
fisubr
(bad)
jns
mov
dec
push
stc
loope
cmps
rcr
jp
pop
dec
std
shl
das
mov
test
pop
pop
imul
(bad)
pop
pop
fs
xor
es
inc
mov
cmp
push
ins
pop
clc
pushf
add
mov
cld
cmp
int3
neg
push
jmp
inc
lds
movs
inc
call
shl
popa
push
out
lds
push
cli
pushf
cmovp
sahf
xor
(bad)
mov
cwde
aas
mov
jmp
pop
pop
aaa
in
xor
inc
sbb
repz
mov
ficomp
mov
mov
not
inc
(bad)
mov
jl
fstp
push
aaa
xchg
push
ja
dec
stc
fiadd
pushf
pop
adc
arpl
ret
ja
in
jae
dec
test
das
mov
sub
ds
dec
jb
loopne
and
mov
cmp
repz
add
fidiv
pop
adc
test
mov
iret
fdivr
cmps
fdivp
mov
sbb
pop
call
sbb
pop
sub
and
mov
adc
das
adc
xchg
fwait
test
cdq
push
adc
int
or
jp
or
outs
inc
cmps
or
sub
xchg
(bad)
scas
call
out
xor
xchg
stos
push
push
dec
cmp
loope
ss
xlat
scas
dec
aam
aam
add
cmp
push
mov
adc
push
mov
sub
out
sbb
push
jl
jmp
pop
jmp
sub
out
ins
dec
xor
scas
mov
enter
push
inc
push
push
inc
fs
(bad)
push
pop
stos
addr16
daa
js
test
push
test
stos
adc
xchg
les
movs
pop
ds
mov
cmps
inc
(bad)
imul
push
in
mov
sub
outs
out
test
cs
dec
inc
cmp
mov
push
js
cmps
xchg
push
pop
addr16
mov
push
(bad)
pop
cmc
sbb
aaa
inc
int3
push
in
adc
pop
aaa
adc
test
fimul
pop
or
jg
clc
inc
lock
test
and
jo
dec
xchg
push
in
jge
sub
jbe
pop
pop
sahf
mov
sbb
ror
inc
(bad)
jg
xor
push
cmp
addr16
mov
aam
dec
cmp
les
sub
in
cwde
push
cs
fcom
inc
stc
outs
cld
xor
ss
retf
sar
and
jno
mov
enter
push
xlat
addr16
out
jae
mov
inc
and
jg
mov
call
push
popa
arpl
xor
cmc
sahf
loopne
mov
pop
pop
aam
(bad)
xchg
pop
push
idiv
movs
mov
hlt
movs
fnstsw
fistp
call
pop
pushf
scas
and
pop
in
push
ret
loope
jge
test
sub
arpl
ficomp
jo
mov
adc
xor
adc
mov
pop
sbb
popa
stc
add
enter
mov
cld
and
neg
jbe
mov
ror
jne
xchg
inc
add
scas
pushf
push
mov
fwait
and
sub
xor
(bad)
leave
pop
inc
mov
sahf
lock
adc
adc
xchg
jb
sbb
int3
jb
push
dec
and
bound
iret
fmul
jg
rcl
lods
call
mov
cdq
add
arpl
cmp
mov
inc
xchg
sub
jne
call
mov
out
jno
jmp
jnp
xchg
dec
push
add
sbb
push
movs
mov
xor
std
pop
fcomp
sbb
pop
sbb
stos
push
retf
cmp
push
idiv
push
out
cli
mov
xchg
movs
mov
sbb
(bad)
mov
inc
inc
lods
fsub
xchg
pop
push
mov
mov
xor
popa
mov
cmp
mov
pop
push
cmp
cmps
sbb
xor
mov
add
pop
inc
push
push
add
mov
inc
mov
cmp
xchg
or
pop
sbb
cmp
(bad)
xor
loopne
push
and
loop
cs
inc
(bad)
and
out
out
cmp
adc
fcomi
pop
mov
pop
out
pop
movs
lea
fdiv
retf
cmp
or
jmp
aam
fwait
cmp
out
jae
mov
outs
cmp
outs
jno
scas
sub
iret
push
es
pop
popf
scas
(bad)
sar
push
and
call
and
sbb
xor
sub
sbb
ficomp
dec
cmps
cmp
les
in
cmc
mov
dec
mov
adc
movs
dec
mov
pop
lahf
sub
inc
mov
cmp
nop
cmp
push
bound
inc
mov
cmps
(bad)
pushf
pop
ret
pusha
shl
ins
xor
lods
ins
es
test
pushf
add
out
(bad)
add
mov
sahf
lods
dec
xchg
pop
and
inc
or
into
inc
and
push
pop
sbb
dec
push
mov
pushf
pop
repz
cmp
dec
mov
xor
xchg
shl
aam
iret
pushf
and
mov
pushf
pop
rol
fwait
sbb
mov
retf
ins
data16
out
lock
cdq
out
(bad)
cld
xchg
push
add
rcl
pop
xor
loopne
je
inc
jae
out
push
retf
pushf
sub
xlat
cmps
xchg
out
lock
xchg
out
xchg
aam
push
dec
mov
push
(bad)
mov
jle
or
jns
cmp
fdiv
ds
out
mov
xor
pop
stc
jb
data16
add
sub
inc
repz
lods
sbb
sub
xchg
mov
adc
xor
xchg
push
adc
mov
(bad)
xchg
xchg
and
shl
cmp
cmp
dec
mov
pshufw
mov
pop
sahf
outs
cmc
xor
mov
jno
sub
pushf
sbb
mov
mov
lock
outs
fcom
jmp
pusha
cmps
pop
dec
retf
int3
inc
xlat
xor
cmp
pop
cmps
jae
or
(bad)
sar
push
aas
lods
(bad)
in
(bad)
pop
mov
mov
imul
or
jb
xor
mov
(bad)
jp
ret
int
push
leave
in
mov
push
push
das
adc
cwde
pop
xchg
fcomi
lods
and
dec
int
or
dec
in
(bad)
mov
inc
mov
shl
xchg
xchg
push
mov
test
fistp
pop
test
inc
adc
xchg
adc
mov
push
arpl
js
dec
data16
test
add
pop
adc
push
pop
mov
push
mov
jbe
loop
adc
mov
sbb
fstp
xchg
out
call
fucomp
jle
xlat
stos
mov
xlat
push
jb
mov
pop
inc
(bad)
cld
(bad)
es
pop
mov
cmp
xor
push
xor
(bad)
rol
and
stc
pop
das
popf
jmp
shl
dec
pop
xchg
aam
div
mov
fwait
rcr
cmc
jl
or
shl
cmp
jo
add
dec
dec
fistp
loop
adc
push
cld
sub
adc
mov
jae
mov
or
cmp
lea
inc
jno
cmp
cdq
dec
xchg
mov
lea
rol
fwait
and
pop
call
ror
pop
aad
push
push
lahf
arpl
mov
call
ror
and
shl
(bad)
ja
inc
fwait
cmc
cmp
js
xchg
push
pusha
or
pop
cmp
ja
(bad)
dec
push
iret
jl
push
stos
hlt
mov
mov
push
xchg
mov
mov
sub
mov
lock
fcom
out
fidiv
aad
xlat
dec
repz
pop
mov
fs
pop
mov
fnstsw
imul
movs
mov
jb
popf
ins
mov
cmc
mov
xchg
ss
shl
mov
jge
(bad)
sbb
adc
popa
shl
enter
inc
bnd
ins
jo
add
in
sbb
sti
jmp
ror
into
ja
add
into
xchg
hlt
inc
mov
jb
mov
fimul
test
int3
pop
jge
int3
fadd
push
fnstsw
fild
into
xlat
stos
mov
cmp
push
(bad)
jle
popa
aam
push
fwait
retf
cmp
ins
pop
ins
hlt
xor
test
pop
push
ins
(bad)
shl
push
xchg
inc
push
into
mov
push
mov
hlt
arpl
jb
cs
sub
pop
sub
popf
lods
jge
mov
and
pop
or
shl
pop
mov
push
jl
mov
push
dec
mov
mov
pop
cli
ds
in
jge
adc
or
pop
xor
pusha
mov
push
mov
push
es
adc
mov
add
xchg
ror
repnz
xor
jno
and
mov
ss
or
cmp
mov
xchg
pop
mov
pop
or
mov
pop
shr
ret
dec
clc
scas
sahf
out
lock
push
pushf
jno
jg
cmp
pop
inc
fadd
mov
mov
psadbw
ins
push
sbb
adc
lea
cdq
aad
das
add
lds
stos
into
xchg
pop
je
fnstsw
in
xchg
jmp
idiv
mov
inc
pop
push
sahf
push
fst
pushf
dec
cmp
pop
pop
fwait
sub
add
inc
aad
push
jmp
sbb
and
xchg
movs
pop
inc
movs
idiv
xor
mov
outs
retf
push
sbb
inc
out
fwait
(bad)
pop
iret
push
xlat
sub
hlt
jbe
pop
jmp
in
push
cmp
or
xchg
dec
jle
les
fs
xor
cld
and
push
mov
lahf
jg
fisub
xor
aaa
mov
inc
dec
jg
push
push
adc
jno
sub
dec
cmp
loopne
scas
sub
pop
cmp
cmp
pop
and
movs
jp
push
or
(bad)
ja
fimul
pop
push
jp
mov
gs
or
xor
push
iret
dec
push
scas
inc
(bad)
out
push
das
out
scas
sahf
in
mov
fsubr
fcomip
inc
xor
xlat
cmps
fprem
pop
or
xchg
mov
mov
jl
add
ja
dec
or
inc
pusha
sbb
(bad)
fsub
sub
shl
sbb
out
or
and
rol
add
test
xchg
loop
jmp
and
pop
jp
sahf
push
aam
pop
ins
imul
push
inc
fcom
cdq
push
enter
push
and
sbb
lock
sbb
cmp
outs
jno
test
push
out
outs
xchg
movs
mov
and
add
xchg
pushf
ss
mov
dec
cmp
dec
inc
pop
mov
and
fisubr
pop
xor
test
and
out
dec
aaa
add
jae
addr16
(bad)
push
mov
pop
aam
adc
inc
xchg
inc
jbe
stos
(bad)
pop
cmp
mov
dec
pop
rcl
neg
lea
mov
sbb
dec
pop
ins
pop
ds
div
mov
push
pop
xlat
pop
mov
mov
mov
mov
inc
push
fimul
(bad)
sbb
icebp
adc
adc
arpl
mov
xchg
push
dec
aad
push
cdq
jno
mov
lahf
inc
mov
(bad)
outs
and
aaa
outs
dec
icebp
(bad)
shl
xlat
pop
mov
inc
(bad)
ss
add
inc
jp
jnp
int3
stos
inc
test
std
shl
pop
or
loope
jb
push
stos
fmul
jno
(bad)
push
enter
mov
mov
or
push
pop
gs
jecxz
xchg
cwde
pop
repz
mov
aaa
fcmovb
sub
adc
pop
jmp
dec
xchg
mov
and
ficomp
clc
jmp
cmp
aad
push
push
sub
push
fs
bound
js
mov
cld
jge
push
fadd
add
sbb
shl
pop
arpl
mov
idiv
inc
popa
call
or
bound
or
pop
in
mov
fistp
xor
icebp
retf
adc
push
fcom
loopne
add
neg
repz
sar
push
fdiv
pop
sub
push
ret
and
jle
std
fisttp
enter
cmp
adc
enter
fbld
mov
aam
or
or
mov
mov
rol
push
jbe
dec
dec
in
jge
lds
aam
lock
mov
fsubr
call
(bad)
lahf
ds
in
add
cs
shl
inc
jl
mov
cmp
push
mov
pop
ficom
and
sub
div
sub
sbb
jo
lahf
add
pop
add
fmul
jecxz
loop
inc
ins
pop
xchg
sub
(bad)
pop
pop
test
mov
les
mov
mov
dec
sbb
int3
(bad)
stos
dec
leave
and
mov
fnstcw
mov
ja
mov
lea
sub
ja
rol
fld
sbb
ss
sub
or
cmpxchg
dec
cwde
push
cdq
push
in
pop
add
movs
or
frstor
mov
cmp
dec
bound
std
mov
xchg
fdivp
test
iret
sub
pop
std
pop
daa
repnz
mov
xchg
jp
sub
out
dec
mov
shr
add
sar
lods
in
dec
pushf
int
ss
and
mov
push
cmp
fxch
mov
adc
xchg
cld
pop
xchg
pop
div
add
out
or
jle
mov
fwait
pop
mov
xchg
aaa
dec
xchg
sub
adc
mov
dec
inc
ret
in
out
data16
rcr
cwde
ss
add
pop
or
sbb
sbb
inc
sar
(bad)
pushf
fistp
or
into
and
sub
mov
xchg
scas
(bad)
scas
push
xchg
stc
cmp
mov
cmp
add
xor
enter
push
imul
jmp
mov
and
test
int
push
add
sub
clc
adc
popf
inc
inc
js
dec
mov
dec
jge
mov
lods
dec
add
div
jge
cmp
in
ins
imul
and
mov
dec
mov
mov
pop
test
je
pop
ss
test
pop
outs
mov
sbb
test
mov
inc
mov
int
(bad)
adc
fst
loope
sbb
aaa
sbb
sbb
xor
push
or
int
retf
mov
sub
jle
push
orps
cmc
int3
sub
mov
jbe
js
push
retf
and
into
pop
pop
xlat
repz
pop
and
out
(bad)
xchg
mov
(bad)
push
cmp
(bad)
add
fwait
push
mov
jnp
sub
jge
push
sub
dec
add
daa
adc
push
js
mov
push
in
sar
push
xor
retf
gs
and
sub
mov
clc
sub
xchg
mov
xchg
scas
call
sti
sub
repnz
jae
add
fbstp
rcl
jo
dec
ja
jge
pop
movs
es
ja
add
pop
je
jmp
jns
pushf
and
ss
(bad)
dec
ins
stc
pop
mov
test
es
arpl
adc
aam
pop
jno
mov
sub
sbb
sub
push
and
dec
out
sub
pushf
daa
and
aad
dec
jo
mov
mov
mov
mov
xchg
xor
push
xor
test
sbb
mov
sbb
lahf
xlat
dec
jle
aad
(bad)
(bad)
cs
add
sub
mov
(bad)
sub
pop
mov
shl
pop
(bad)
lds
sub
push
sub
fcom
(bad)
sbb
hlt
jle
outs
pusha
lods
cmp
test
ds
mov
call
iret
ins
pop
push
jl
int
adc
(bad)
stc
int
push
lds
dec
ja
aas
ds
add
xor
jecxz
les
shl
mov
dec
jl
loopne
pop
ror
mov
rcr
dec
or
call
xor
mov
sbb
imul
cwde
test
in
or
dec
mov
push
inc
sbb
pushf
or
retf
mov
adc
add
fdivr
int
lea
mov
adc
mov
aaa
add
rcl
lock
cld
or
xor
stc
int
xchg
inc
sbb
mov
push
cmps
inc
and
lock
mov
arpl
dec
xor
cld
nop
enter
inc
mov
bound
mov
xchg
mov
in
imul
aaa
(bad)
pop
sar
cli
inc
mov
dec
adc
push
pop
repz
sub
aad
aaa
icebp
aad
dec
shl
adc
shl
dec
mov
mov
dec
nop
call
imul
adc
lods
push
fstp
pop
ins
pop
aaa
shr
dec
movs
nop
sub
scas
pop
jl
call
mov
leave
adc
pop
push
xchg
and
rol
and
mov
xchg
aas
inc
cld
lahf
das
rol
lock
rcl
aaa
inc
pop
and
pop
add
sahf
or
and
push
mov
lahf
loopne
iret
aad
jge
daa
adc
dec
push
fucom
outs
sub
mov
into
cmc
jle
out
jbe
rcr
xchg
sbb
arpl
ret
hlt
sub
loope
mov
gs
cmp
xchg
and
or
sub
idiv
pushf
jno
mov
pop
icebp
je
cli
cmp
inc
fdivr
push
icebp
xor
fstp
das
inc
mov
mov
mov
scas
test
out
fxch
bound
cmc
fnsave
outs
pop
in
mov
je
add
clc
lods
push
jnp
ds
sbb
xchg
out
dec
mov
cmp
pop
mov
aad
cmp
dec
sbb
int3
imul
xchg
mov
mov
lds
movs
jmp
ins
mov
xor
or
cmps
int3
imul
stos
dec
push
popfw
ins
lock
retf
xlat
xor
push
cwde
aaa
inc
add
in
mov
(bad)
out
hlt
mov
jmp
bound
(bad)
dec
cmps
mov
into
sub
test
dec
xlat
rol
mov
pop
adc
jmp
jb
push
push
sbb
int
mov
dec
into
stc
sahf
xchg
lock
cwde
fdiv
lods
pop
movs
into
jl
loope
ds
mov
(bad)
out
cdq
lods
mov
mov
in
jnp
dec
and
dec
pop
dec
inc
adc
fimul
in
ins
mov
dec
ds
test
fmul
dec
mov
and
jmp
js
mov
inc
repnz
cmc
xchg
jp
pop
fidiv
ss
call
push
sub
iret
xchg
push
call
ins
dec
or
fstp
add
aaa
dec
(bad)
pop
cmp
add
fs
xchg
daa
popf
xchg
loopne
pop
test
xchg
call
dec
cs
arpl
iret
xor
sbb
(bad)
call
rcr
loop
outs
jge
lods
push
pop
sbb
fimul
or
mov
shl
sub
mov
pop
push
dec
pop
pop
stc
mov
ins
ret
daa
add
cmp
push
lock
iret
in
push
leave
push
rol
xchg
pop
adc
pushf
out
dec
push
sub
clc
lods
jmp
shl
jge
mov
mov
gs
push
jp
push
xchg
mov
push
mov
cmp
mov
xchg
mov
adc
lds
inc
and
inc
(bad)
arpl
sub
mov
pop
jae
ins
pop
and
sahf
dec
sub
cmps
xchg
bound
sbb
mov
sets
add
rcl
jge
cmp
push
sub
and
jo
pushf
dec
xchg
xor
out
pop
ss
mov
jge
xor
mov
fimul
es
shl
pop
cs
mov
aam
push
push
cwde
shl
test
fnstcw
out
jo
popa
adc
lods
sub
lock
push
xchg
daa
popf
(bad)
not
dec
mov
scas
std
pop
or
dec
fdecstp
xchg
mov
and
jp
sub
ja
retf
(bad)
xor
push
stc
test
inc
pop
fwait
cmp
mov
lds
imul
out
mov
xchg
sub
mov
cmc
mov
xor
fwait
push
sbb
xchg
outs
test
mov
fadd
out
dec
test
pushf
pop
adc
(bad)
add
pop
xchg
outs
mov
push
(bad)
cwde
fnstenv
jle
stos
cmp
and
test
(bad)
jecxz
or
rcl
pop
pop
lods
sbb
hlt
(bad)
jmp
xchg
cdq
int3
jno
inc
lods
dec
out
sbb
push
enter
mov
int3
adc
int
cmp
popf
jecxz
pop
jo
and
and
outs
sbb
fisub
adc
rcl
dec
dec
mov
dec
ret
mov
xor
pop
xor
pop
cmp
xchg
or
ins
ins
sbb
sub
inc
inc
mov
and
dec
adc
sub
nop
and
les
sub
fisub
outs
retf
add
inc
and
add
ror
(bad)
ja
adc
pop
lock
xchg
pop
or
das
jo
xchg
add
in
mov
rcl
arpl
(bad)
call
es
cld
pop
pop
cld
jmp
xchg
ds
cld
jmp
in
aad
ror
cmp
sbb
mov
dec
pop
inc
and
and
int
mov
sbb
add
(bad)
jp
dec
sub
inc
pop
mov
cwde
and
or
push
or
push
mov
pop
push
mov
mov
div
and
cmc
dec
cli
xor
(bad)
adc
or
loop
(bad)
fmul
outs
sub
xor
pop
jns
push
cmp
iret
call
(bad)
push
lods
pop
mov
pop
xchg
push
sub
test
outs
xchg
mov
adc
push
cwde
ret
data16
(bad)
repz
xchg
xchg
jbe
(bad)
call
mov
add
nop
(bad)
scas
cmp
sub
or
fbstp
mov
pop
jae
enter
xchg
sbb
pop
and
adc
xor
mov
arpl
ror
dec
hlt
mov
test
sbb
or
push
mov
call
(bad)
push
pusha
call
jnp
mov
rol
pop
inc
daa
aad
mov
push
mov
and
or
mov
aad
push
xor
mov
test
xor
jg
(bad)
addr16
fs
cmp
pop
add
fwait
icebp
lea
les
test
jne
xlat
dec
mov
mov
sbb
std
or
or
movs
xchg
cmc
retf
fwait
sub
or
push
adc
mov
scas
aam
test
pop
push
jno
xchg
inc
pop
adc
jg
pop
test
sbb
pop
fidivr
push
fwait
(bad)
div
arpl
popf
outs
(bad)
and
sub
aam
inc
push
cmp
repz
xchg
pop
xchg
rcl
(bad)
mov
iret
and
inc
lds
xor
mov
and
xchg
ja
pop
inc
pop
cli
dec
pop
fisttp
sbb
dec
sub
outs
mov
add
pop
pop
cld
mov
repz
mov
inc
loopne
fidiv
fwait
dec
and
add
dec
pop
ror
iret
into
and
dec
ins
adc
test
aaa
fld
dec
dec
aaa
test
bound
in
in
sbb
popa
clc
repz
lods
sbb
mov
fdivrp
pop
push
call
hlt
aad
rcr
lea
pop
shl
mov
retf
inc
leave
ret
push
inc
pushf
ins
sahf
lahf
jmp
aas
mov
cmp
ja
bound
lds
imul
and
bound
into
and
dec
or
popf
cmp
adc
imul
mov
mov
jns
cld
mov
mov
push
cmps
jnp
xchg
xchg
xchg
xchg
pop
pop
pop
lock
push
inc
jnp
or
xchg
ins
inc
and
dec
in
adc
in
enter
mov
adc
stc
dec
ins
outs
out
jne
cs
retf
sahf
mov
jmp
pop
push
enter
loopne
ins
cmc
push
icebp
mov
(bad)
(bad)
pushf
mov
shl
(bad)
ins
dec
mov
lock
neg
icebp
retf
jp
xchg
movs
aad
dec
fiadd
cmp
cmc
xchg
xor
add
pop
scas
or
pop
inc
jmp
cmps
sub
ds
push
jo
mov
adc
pop
cmp
xor
repz
and
ins
(bad)
pop
xor
pop
sahf
adc
outs
sahf
pop
sbb
(bad)
xchg
in
lds
cmovne
jg
push
push
ja
inc
cs
pop
mov
jecxz
lods
pop
fadd
test
sbb
add
sbb
lds
jmp
mov
iret
mov
bound
jae
add
mov
adc
nop
and
and
pop
add
imul
fucomp
push
imul
arpl
es
add
mov
shr
sbb
fistp
sbb
xchg
mov
mul
stos
aam
ins
add
(bad)
mov
aaa
mov
cs
inc
ss
test
call
inc
sub
call
jmp
shr
ins
xor
ret
pop
aam
push
add
xchg
call
idiv
cmp
sub
mov
mov
or
test
adc
gs
stos
mov
xor
push
(bad)
pusha
bound
pop
cmp
or
mov
retf
cmp
lock
test
scas
and
xor
sub
dec
das
bound
mov
movs
xlat
add
pusha
jl
mov
cmps
mov
mov
test
mov
sar
push
xchg
cmp
cld
mov
push
stos
in
cmps
fs
aam
js
xchg
sub
mov
shr
rol
arpl
inc
scas
and
pop
jmp
push
or
or
push
jb
outs
(bad)
fmul
cmps
fs
in
scas
gs
or
arpl
push
cmp
mov
loopne
sub
ror
(bad)
push
sbb
repnz
jle
dec
cmp
inc
mov
and
push
fwait
mov
aad
cmp
scas
mov
or
mov
xchg
outs
mov
mov
pushf
push
adc
shl
add
int3
inc
push
lea
aaa
clc
dec
arpl
add
inc
pushf
pop
loop
or
and
add
xchg
jae
cwde
push
icebp
sbb
daa
or
imul
inc
sbb
adc
lods
and
mov
mov
pop
aad
daa
fistp
std
rcr
mov
in
loope
fs
retf
cld
add
fnstcw
sub
inc
sub
ja
pushf
dec
inc
pop
(bad)
rcl
fldcw
sub
popf
mov
aam
int
lock
aad
cmp
imul
sti
xchg
dec
cmp
not
xchg
push
pop
jge
ficom
add
pop
sbb
and
sbb
retf
inc
(bad)
out
add
sub
cdq
in
mov
pmaddwd
dec
sbb
xchg
xor
fwait
xchg
push
outs
loop
lods
icebp
movs
adc
(bad)
fwait
pop
push
xchg
push
test
mov
sbb
cwde
mov
or
sbb
pushf
add
cs
addr16
xor
neg
or
rcl
cmp
xchg
cmp
ficomp
cmp
xchg
push
dec
pop
retf
jmp
inc
aad
pop
mov
xchg
pop
hlt
mov
and
popf
or
dec
inc
pop
mov
int
pop
and
xchg
test
dec
xlat
popa
sub
call
stos
mov
popa
mov
cld
dec
popa
mov
lahf
jl
mov
jns
lods
xchg
pop
pop
pop
in
(bad)
(bad)
sbb
loopne
lea
movs
in
fcom
inc
ss
cmp
pop
cld
div
add
xchg
xlat
ror
jnp
mov
xlat
inc
int3
pushf
push
jae
mov
int3
aam
mov
call
cmp
and
xchg
sub
hlt
or
sbb
mov
xchg
jmp
aad
lahf
pop
cmp
dec
dec
xor
(bad)
lock
mov
call
movs
icebp
cmp
shl
and
push
add
fbld
xchg
push
sbb
cli
push
mov
in
push
rcr
sbb
rcr
pop
jae
pushf
les
ins
pop
out
mov
popf
fld
push
std
nop
sahf
daa
sub
push
xchg
int3
inc
or
push
push
lods
gs
dec
mov
push
mov
adc
sub
cli
cdq
mov
test
xor
test
cmps
mov
pop
out
xchg
push
and
shl
xor
hlt
add
pop
pop
out
rcl
imul
sti
adc
(bad)
xor
add
fist
mov
rcr
push
mov
add
bound
mov
stc
or
(bad)
mov
cmps
push
ins
out
and
loop
shr
not
lahf
mov
inc
push
jmp
add
mov
enter
xor
vmwrite
add
aam
test
cli
jns
addr16
loopne
mov
push
jb
pop
inc
cs
jp
repz
add
sub
(bad)
int
push
cwde
je
(bad)
pop
push
dec
scas
cmp
aam
loop
pushf
rcl
jo
fiadd
jb
mov
mov
shl
div
(bad)
jecxz
cmps
cmc
mov
sbb
test
ins
enter
aaa
pop
aam
mov
sub
pop
mov
push
retf
xchg
gs
jne
and
(bad)
jno
pop
push
add
int3
cmc
push
jns
aam
or
(bad)
loopne
gs
sub
daa
pop
mov
cmps
mov
movs
cmp
cmc
mov
scas
jno
jmp
ja
dec
cmp
adc
xor
rol
ins
mov
xlat
ss
sub
jne
cmp
scas
jns
cmp
cwde
sahf
xchg
xchg
or
push
sub
clc
push
movs
sub
push
retf
in
mov
dec
int3
sbb
sub
ret
xchg
repnz
not
loope
fdiv
mov
iret
inc
sub
pushf
pop
add
mov
out
sub
lock
std
and
jmp
sahf
sbb
pop
ja
mov
das
mov
dec
cmp
daa
mov
cmp
push
inc
sub
mov
sub
xor
out
mov
outs
mov
stos
rcr
rol
cdq
mov
push
push
out
jmp
mov
cld
enter
not
sbb
cmp
(bad)
popf
sahf
cmp
adc
nop
fidiv
rcl
push
dec
sub
dec
popaw
push
lods
pop
pop
pop
xchg
adc
arpl
pop
iret
and
movs
fistp
stos
das
inc
loope
aad
dec
xchg
sti
rcl
inc
jnp
adc
adc
cmp
mov
addr16
or
call
jp
and
sahf
or
lods
call
xchg
das
sbb
test
pop
or
test
sub
pop
pushf
repnz
adc
xlat
int
aad
push
div
loop
xchg
mov
and
dec
xchg
inc
mov
test
in
inc
xchg
js
pop
adc
cmp
sbb
(bad)
jno
repz
rcl
pop
cwde
cmp
gs
icebp
xchg
imul
outs
lock
jge
test
xlat
test
cli
inc
cmp
cmp
jl
xchg
xor
repnz
movs
mov
push
pop
fild
inc
(bad)
out
pop
mov
pop
jle
int
push
push
jp
cmp
(bad)
mov
jmp
rol
mov
cmc
inc
iret
in
sub
xor
daa
xchg
ror
jl
mov
and
cli
jno
dec
sti
dec
loopne
jnp
inc
bound
xchg
cmps
mov
(bad)
pop
sbb
inc
and
ss
push
mov
push
stc
mov
pop
xchg
rol
(bad)
push
mov
sti
fcmovnbe
sar
mov
mov
inc
jnp
loopne
mov
(bad)
arpl
add
dec
push
cwde
hlt
outs
out
int3
dec
push
leave
ret
jno
sub
scas
jns
pop
mov
xchg
fist
mov
push
mov
add
in
sub
and
js
xchg
mov
aaa
sub
inc
shl
mov
jno
adc
push
or
mov
cmp
aad
adc
(bad)
std
ins
lea
dec
mov
mov
or
jp
aad
jae
mov
in
shl
pop
stos
sub
xor
pop
adc
gs
pop
jmp
dec
push
jmp
(bad)
mov
xchg
pop
fcom
dec
mov
add
cmp
in
mov
mov
sti
js
icebp
aaa
cdq
shl
pop
ds
inc
push
je
cmp
adc
dec
mov
sub
add
data16
mov
push
and
daa
fnsave
sbb
mov
dec
test
retf
and
mov
stos
cmp
mov
xlat
pop
xchg
mov
pop
jg
pop
push
sub
mov
lods
pop
jmp
inc
xchg
xor
push
ret
jo
or
fwait
cmps
test
rol
add
xchg
sub
loope
std
dec
(bad)
test
loop
sub
mov
mov
mov
and
mov
xchg
mov
cmp
mov
cmp
xchg
mov
int
jo
fcomp
sbb
xchg
stos
jg
shl
shr
rcl
popf
sahf
jl
fwait
xchg
push
aam
lahf
fld
mov
es
sar
loopne
rcl
ds
dec
imul
inc
mov
rcr
arpl
test
pop
aas
cmovno
cmps
fdivr
lahf
outs
ret
rcr
cmp
mov
push
mov
lea
inc
sbb
cmp
lods
adc
mov
xchg
add
cmp
daa
push
jb
or
inc
ja
inc
(bad)
stc
adc
push
inc
pop
cmc
xchg
ds
adc
(bad)
aad
pop
inc
inc
iret
push
dec
dec
dec
daa
mov
out
(bad)
xchg
xchg
stc
sub
inc
sbb
fistp
mov
xchg
pop
les
xadd
mov
(bad)
jnp
lock
hlt
sbb
inc
xlat
and
mov
ror
leave
dec
vandps
fstp
mov
jnp
fstp
cmp
out
mov
call
pop
(bad)
in
aaa
dec
dec
les
fimul
push
mov
add
xchg
or
add
mov
xor
cld
out
sahf
jno
jmp
pop
mov
pop
sub
sub
xchg
sbb
test
idiv
mov
or
mov
add
jno
pop
ins
out
les
push
int3
cmp
test
popf
xor
and
movs
pop
jno
(bad)
fs
lea
sbb
push
hlt
pop
call
bound
pop
ins
js
mov
mov
sub
jmp
inc
pop
mov
push
(bad)
mov
ja
jecxz
arpl
inc
test
dec
out
sub
es
neg
inc
mov
inc
rcr
fisub
dec
jg
and
adc
repnz
test
in
call
neg
mov
cs
mov
sar
dec
std
push
ins
sbb
les
mov
ror
in
pop
pop
aad
xor
addr16
aad
push
pop
xchg
dec
fcom
bound
cmp
add
sbb
mov
mov
mov
pop
(bad)
jg
xor
cld
or
arpl
aaa
inc
mov
(bad)
ins
and
push
add
jo
shl
(bad)
ror
fcmovnbe
ret
mov
ret
int
(bad)
add
gs
mov
out
xchg
(bad)
pop
jmp
das
mov
das
out
mov
push
mov
jecxz
mov
dec
dec
mov
lahf
fwait
ret
aad
lods
loop
and
sub
mov
push
stos
cmp
jg
ret
mov
inc
inc
mov
xlat
hlt
pushf
arpl
cli
jbe
pop
sbb
push
jmp
lods
xchg
push
xlat
(bad)
int3
mov
push
hlt
rol
fdiv
imul
and
cwde
lods
and
pushf
pop
sbb
sbb
jns
add
inc
inc
imul
xor
push
dec
je
adc
pop
aas
mov
cmps
jbe
imul
test
sahf
pop
pop
lds
mov
inc
es
push
sub
push
iret
in
or
cmp
inc
sub
sub
loopne
mov
std
fwait
popa
sbb
(bad)
ss
xor
and
fidivr
repz
mov
mov
inc
mov
mov
(bad)
rol
mov
push
arpl
xchg
iret
sub
pop
ins
mov
test
das
dec
les
in
mul
pop
add
(bad)
pop
push
data16
aam
outs
mov
retf
fwait
scas
retf
(bad)
out
xlat
int3
mov
pusha
mov
js
mov
mov
pop
aad
sbb
std
scas
mov
movs
xor
cmp
or
sub
fidivr
sub
xor
pop
call
dec
xchg
daa
out
xchg
das
call
repz
js
out
cwde
pop
out
loope
mov
out
cmps
push
popf
mov
js
loop
sbb
xchg
lea
bound
cmp
xchg
pop
adc
(bad)
mov
pushf
ror
jns
push
icebp
fcomp
in
je
mov
dec
shl
sub
jmp
push
ja
push
sar
leave
ja
aaa
xchg
cmp
push
inc
or
in
sbb
pusha
dec
int3
xor
xlat
jg
push
dec
cmp
movs
aaa
les
mov
fidivr
popf
lahf
lods
mov
fs
arpl
cmc
sar
fld
cmps
xor
sub
aaa
mov
test
jle
(bad)
outs
and
adc
shl
(bad)
setnp
mov
pop
fwait
push
jno
cmps
sub
fcom
in
nop
inc
push
xrelease
sub
loope
mov
nop
inc
arpl
dec
cwde
push
loope
lods
inc
jo
aas
add
fwait
or
fs
dec
jmp
mov
jmp
lods
frstor
ffree
(bad)
ds
add
and
and
or
jne
dec
sub
dec
icebp
lea
jl
test
out
push
add
pop
push
sbb
or
push
fs
(bad)
popa
adc
mov
sub
xor
inc
jnp
ds
loop
add
popf
daa
ficomp
nop
(bad)
lock
ror
xchg
mov
in
add
mov
jmp
sbb
xor
push
call
add
jae
add
cmps
imul
add
ror
dec
push
sar
xchg
cmps
std
test
call
aaa
movs
arpl
(bad)
cmp
lods
fcmovnu
jb
popa
cwde
inc
inc
pop
dec
push
mov
jbe
in
add
cdq
xchg
out
sub
or
out
adc
ror
mul
dec
adc
add
jbe
push
mov
in
je
rcr
push
add
ror
popf
loopne
mov
pop
pop
mov
pmulhw
sub
mov
mov
retf
mov
ret
sbb
(bad)
fisub
pop
fst
sub
dec
sbb
mov
dec
jg
shl
cmc
fwait
(bad)
out
adc
nop
inc
stos
xchg
out
xor
dec
jge
sahf
mov
cmp
or
fistp
outs
push
jnp
cmp
gs
jbe
into
sbb
xor
fsub
adc
jmp
es
ds
ds
sbb
inc
sbb
mov
pop
fild
stos
out
loope
shr
xor
lahf
sbb
shr
fs
push
pop
enter
bswap
mov
stos
pop
rcr
out
mov
shl
adc
sbb
jmp
outs
mov
xchg
repz
add
sub
sbb
out
out
jg
dec
jmp
and
inc
movs
mov
stc
or
fld
into
sbb
mov
iret
and
mov
xchg
rol
cmp
ins
push
pop
inc
or
inc
pop
or
sub
mov
mov
or
fbstp
into
cmps
and
adc
pop
inc
mov
dec
pop
mov
pop
sub
mov
mov
inc
mov
mov
jnp
lods
enter
cli
add
dec
mov
push
popa
push
lahf
rol
dec
mov
data16
pop
(bad)
or
in
neg
(bad)
pop
cld
push
mov
in
xchg
jo
repnz
popf
popf
lods
jge
inc
jp
push
mov
(bad)
jle
mov
sbb
retf
mov
into
das
xchg
and
and
dec
bound
push
popf
inc
add
mov
daa
jmp
mov
fsub
out
fiadd
jge
shl
xor
mov
(bad)
dec
and
fadd
inc
inc
(bad)
data16
and
and
pop
cmc
mov
mov
iret
lods
inc
movs
mov
dec
dec
and
pusha
mov
jbe
ss
pop
xchg
pushf
sub
mov
imul
imul
retf
lahf
les
mov
jmp
mov
pop
xchg
stos
test
pushf
dec
adc
dec
mov
aas
in
fsub
les
mov
xor
xor
mov
sahf
mov
jl
xchg
mov
dec
pop
addr16
in
adc
inc
(bad)
cmp
and
xchg
aaa
dec
test
aam
push
pop
repnz
xchg
mov
cmp
(bad)
add
and
aaa
add
into
(bad)
cmp
shl
cld
ins
xchg
mov
xchg
pushf
sbb
cmps
dec
loopne
sub
and
and
retf
into
push
inc
xor
ins
inc
repnz
bound
(bad)
outs
lds
xlat
adc
(bad)
jo
and
xchg
jp
scas
cmp
lahf
ficomp
imul
jmp
out
xchg
push
mov
and
std
cli
lds
add
sub
mov
mov
inc
jmp
add
mov
jge
dec
push
push
movs
cdq
sub
xchg
sbb
loope
mov
test
pop
mov
dec
push
cdq
add
hlt
imul
sbb
(bad)
ins
rcl
loopne
xlat
sub
mov
add
add
int3
push
pop
bound
dec
push
mov
inc
push
les
xlat
in
inc
fimul
hlt
adc
and
test
jnp
loope
add
arpl
lock
nop
or
push
shr
push
loope
sbb
(bad)
mov
fs
ror
cmp
xor
push
jmp
push
imul
sbb
movs
(bad)
xchg
not
jne
mov
push
add
mov
mov
cmp
xchg
in
test
aas
rol
and
ret
nop
les
inc
es
(bad)
pop
shr
and
pop
aam
fcmovnb
mov
push
test
jge
sbb
nop
out
fidiv
jp
pop
xchg
test
lock
(bad)
lea
ror
add
cdq
rcr
dec
movs
add
pop
test
imul
sub
movs
loope
int3
xchg
loopne
jmp
push
pop
(bad)
sbb
pop
out
xchg
mov
ins
stos
arpl
lods
xlat
sbb
pop
cmp
cdq
xor
jmp
shl
test
repnz
mov
pop
sar
repnz
mov
mov
xor
adc
movs
pop
inc
(bad)
popf
or
fwait
push
js
dec
pushf
push
jg
int3
rol
cdq
push
loop
pop
jb
cld
cmp
cwde
ret
clc
or
cwde
int3
or
push
pminsw
out
adc
push
imul
dec
jp
push
jmp
enter
and
stc
scas
addr16
mov
mov
retf
pop
inc
xor
mov
mov
or
mov
pop
pop
das
and
shl
add
ss
ror
add
out
push
dec
icebp
xor
sbb
(bad)
and
dec
jne
rol
and
test
in
sbb
sub
add
sub
push
push
and
stc
add
pop
std
cwde
ret
std
xor
mov
mov
add
or
rol
fwait
pop
pushf
adc
inc
push
sub
fldcw
ror
xchg
out
aam
cmp
mov
push
test
jnp
pop
pop
arpl
out
movs
adc
sbb
add
dec
in
popa
ins
sbb
inc
ja
into
outs
mov
stos
clc
xchg
shr
cmps
imul
pop
or
sahf
loop
push
mov
arpl
sbb
mov
jge
cmps
pop
adc
mov
dec
fisub
jge
test
gs
adc
sbb
mov
call
cmp
inc
jb
(bad)
nop
inc
push
push
js
bsf
aaa
ss
jbe
xor
test
jmp
fsubr
push
scas
stos
loop
push
scas
push
mov
xchg
stc
xchg
fwait
jecxz
cwde
ret
into
loop
loopne
leave
jle
pop
jmp
(bad)
mov
addr16
xor
xchg
cmp
fistp
fldenv
call
mov
mov
sbb
push
jle
imul
push
movs
dec
jo
mov
jmp
xchg
ret
inc
mov
mov
fcom
sbb
fdivr
fild
push
xchg
aam
push
push
jg
pop
jnp
rol
xchg
and
aad
test
xchg
out
or
pop
push
gs
out
fild
add
sub
xchg
or
jmp
and
and
(bad)
sub
lods
pop
cmp
pop
cs
sbb
das
jb
bound
rcr
je
dec
test
mov
scas
sar
and
lods
jmp
dec
test
aaa
mov
(bad)
daa
addr16
adc
stos
sub
adc
call
fwait
jb
dec
sbb
(bad)
adc
adc
rcr
out
pop
xchg
loopne
(bad)
push
push
adc
rcl
pop
push
fidivr
out
xchg
repz
xor
mov
loope
jae
mov
add
mov
push
daa
fadd
loop
ficomp
clc
push
dec
sbb
aas
enter
xor
push
in
shl
(bad)
sti
push
mov
nop
pop
pushf
xchg
add
add
push
in
ins
sub
sbb
mov
jne
inc
gs
pop
pushf
add
ret
jo
shr
dec
adc
int
xor
dec
in
push
(bad)
scas
dec
iret
dec
rcl
pop
inc
add
sahf
scas
dec
inc
nop
mov
ja
and
jmp
adc
cmp
xor
test
ins
and
aam
push
popf
lods
sbb
sub
lods
mov
lahf
(bad)
mov
outs
fnsave
push
xchg
sbb
jmp
dec
xchg
ror
in
mov
aad
mov
mov
fwait
mov
xchg
push
sbb
div
ret
cdq
or
sahf
inc
fld
sub
fisub
call
fadd
jns
inc
xor
idiv
vorpd
jmp
mov
mov
popf
frstor
call
xchg
xchg
pop
mov
inc
imul
ret
not
lock
sbb
add
lods
inc
sub
pop
mov
jg
or
fcom
popa
add
cmp
les
dec
dec
in
ins
test
inc
fcom
lds
cli
pop
or
and
stc
dec
or
pusha
xchg
push
das
or
fst
adc
(bad)
stc
fst
rcl
pop
jno
add
arpl
push
sub
pop
fldcw
rol
jno
mov
mov
mov
xlat
bound
xchg
mov
cs
ja
rcr
sub
int3
addr16
add
or
(bad)
es
jp
adc
out
cmp
mov
inc
std
mov
fiadd
mov
inc
sub
push
cld
mov
lods
mov
mov
mov
in
xor
bound
or
adc
pop
popf
ror
dec
pop
jge
xlat
and
sbb
pushf
mov
mov
dec
jb
lock
push
mov
retf
xchg
out
pop
xchg
scas
fldenv
add
xor
or
call
mov
cmp
push
inc
jnp
outs
lods
push
test
aam
push
add
add
add
lods
push
repz
sbb
inc
adc
adc
fistp
or
inc
popa
mov
and
push
sub
dec
xor
jmp
sti
mov
sbb
clc
or
daa
push
adc
cli
out
sub
sub
push
lahf
sbb
(bad)
leave
sub
cmp
retf
jo
xor
out
jmp
out
icebp
popa
inc
vcvtss2sd
xchg
mov
push
arpl
jge
mov
imul
pop
push
push
push
(bad)
mov
addr16
push
test
aas
push
cmp
push
sub
retf
jl
pop
stc
mov
int3
cmc
nop
shl
and
xor
sbb
nop
addr16
sub
sub
int
dec
jbe
dec
aaa
sbb
sub
inc
inc
cs
sub
xchg
or
mov
push
and
xor
pop
scas
pop
xchg
push
pushf
mov
addr16
mov
cmp
call
xchg
xchg
push
ins
movs
inc
xchg
in
push
push
lods
jne
(bad)
aam
jp
popa
mov
in
dec
nop
scas
add
or
shr
shl
lahf
lods
mov
out
inc
shl
add
movs
xchg
fwait
mov
stos
int3
ds
(bad)
xor
daa
push
mov
or
icebp
mov
dec
mov
loopne
sbb
mov
leave
push
daa
adc
mov
aaa
(bad)
shl
inc
dec
pop
arpl
mov
lds
mov
jno
mov
jmp
sbb
xor
push
or
jnp
imul
pushf
shl
scas
jns
(bad)
call
add
jmp
xchg
sbb
(bad)
mov
dec
sbb
push
xchg
sub
or
outs
outs
mov
gs
out
push
pop
clc
push
lea
lds
ror
mov
fldlg2
fyl2x
or
pop
jbe
xlat
pop
imul
push
lods
and
push
pop
scas
push
pop
jb
(bad)
push
jmp
stos
pop
cwde
adc
dec
movs
imul
push
(bad)
pop
test
movs
stos
outs
xchg
push
loopne
cmps
cmp
out
aad
push
std
add
cmps
xor
push
cmps
cmp
stos
lock
imul
fadd
dec
(bad)
pop
popf
out
in
ss
lods
inc
mov
inc
nop
loop
fwait
adc
inc
in
enter
ss
inc
sbb
xor
into
mov
jmp
(bad)
loop
rcl
xchg
xchg
adc
(bad)
mov
cwde
loopne
inc
sti
fild
pop
movs
pop
daa
jnp
(bad)
mov
dec
and
ds
adc
cmp
xchg
sbb
fisub
pop
pop
or
lods
icebp
adc
fdiv
cld
dec
mov
mov
mov
and
(bad)
lahf
mov
cld
mov
ins
push
cmp
rol
dec
sbb
jg
mov
mov
mov
not
imul
fdiv
push
inc
jno
mov
(bad)
pusha
int3
push
push
pop
bound
lock
in
addr16
and
mov
sbb
out
push
sub
outs
or
lock
add
das
(bad)
jge
jmp
pusha
push
in
stc
and
out
push
std
xchg
lock
fisttp
aad
stos
mov
aaa
fsubp
adc
mov
xor
nop
aam
sbb
dec
addr16
popf
sub
adc
fiadd
cmp
fstp
in
cmp
and
rcr
xor
mov
or
fstp
in
pop
pop
arpl
adc
pop
ds
fistp
rcr
stc
push
pop
push
fsubr
fcomp
dec
(bad)
in
jne
jecxz
pop
dec
push
int3
cwde
mov
adc
sar
and
pop
pushf
loope
inc
xchg
mul
push
adc
arpl
les
xor
(bad)
jl
mov
fsubr
lods
cmp
adc
(bad)
push
push
scas
daa
(bad)
push
adc
mov
sbb
in
sbb
or
mov
add
retf
add
loopne
jne
fst
xor
pop
ret
jl
imul
jne
inc
mov
in
cmp
shl
adc
cmp
leave
vpshaw
fisttp
push
mov
jo
push
mov
jae
mov
nop
test
sub
scas
fistp
nop
xor
xchg
test
inc
mov
das
push
mov
aad
cmp
test
in
dec
inc
es
cmp
or
outs
push
mul
adc
mov
jg
mov
ins
dec
mov
cmp
js
xor
in
retf
out
lahf
or
mov
es
pop
jle
cs
pop
and
and
aad
mov
(bad)
fwait
cwde
cs
pop
pop
add
popa
dec
and
fsubr
jae
adc
(bad)
daa
or
loope
(bad)
and
test
push
aas
mov
jb
add
jae
inc
add
cmp
xchg
mov
outs
js
(bad)
sti
and
inc
xchg
pop
call
imul
sub
lods
and
jg
aaa
cvtdq2ps
lea
outs
push
push
cmp
bnd
dec
(bad)
out
scas
outs
fld
mov
inc
aaa
pop
sbb
test
inc
sbb
mov
adc
xchg
std
jmp
gs
adc
pop
mov
cmp
adc
push
aad
loop
das
jl
fistp
mov
cmp
mov
shr
jnp
scas
cdq
test
push
or
test
add
pop
test
cli
add
sub
or
daa
mov
fistp
pushf
mov
cld
xchg
in
push
dec
dec
lahf
sti
faddp
ss
(bad)
sub
mov
inc
in
call
sub
rol
xchg
aam
pop
push
int3
and
adc
push
cmp
inc
push
repz
mov
and
shl
cmovns
test
cld
pop
call
or
and
mov
movntq
imul
sti
mov
cs
(bad)
scas
fdiv
cld
ficom
jg
imul
fdivr
pushf
add
inc
sbb
push
pop
or
in
dec
xchg
out
pop
push
std
(bad)
jmp
add
mov
sbb
daa
popf
cmp
hlt
(bad)
jge
int
into
hlt
fistp
pop
and
cld
in
fnstenv
push
(bad)
stc
xor
push
ret
mov
xor
call
mov
aaa
and
idiv
inc
xor
push
cmc
pop
aaa
pop
mov
sbb
leave
push
int
out
fwait
stos
repnz
lods
adc
fcom
aam
ss
loope
jmp
(bad)
or
ja
adc
stos
xchg
mov
mov
sbb
inc
mov
aam
loop
dec
out
sub
mov
loopne
jbe
shr
les
pop
gs
sbb
daa
lahf
loopne
cli
outs
xor
xchg
add
arpl
clc
stos
mov
mov
mov
jo
push
xlat
icebp
dec
setnp
cmp
cmp
cmp
mov
call
out
mov
dec
jbe
sub
sub
jmp
sbb
sbb
and
(bad)
adc
dec
sub
addr16
(bad)
rol
or
inc
in
in
sub
pop
inc
adc
and
sbb
out
ja
sbb
rcr
and
sbb
or
xor
and
daa
pop
or
push
ss
sub
pop
test
pop
mov
mov
int3
adc
into
test
mov
sbb
pusha
dec
cs
stos
(bad)
cwde
mov
cwde
jg
arpl
or
mov
jge
cld
fcomip
fbstp
fwait
out
sub
push
add
push
loope
clc
ror
aas
ret
adc
dec
fs
mov
cmp
cmp
gs
mov
mov
push
xchg
xor
add
hlt
fisttp
push
cld
mov
das
out
fneni(8087
pushf
or
xchg
shld
adc
arpl
and
jae
sbb
mov
and
bswap
leave
fisubr
mov
xchg
adc
(bad)
sti
pop
push
cmp
daa
out
in
sbb
pop
add
dec
pop
in
fild
fs
add
call
nop
dec
mov
xor
pop
(bad)
stos
inc
pop
inc
stos
pushf
inc
loope
imul
inc
xlat
pop
std
pop
daa
popf
outs
push
mov
sahf
add
int
loope
cmp
pop
add
dec
adc
xor
fcmovbe
lea
dec
push
add
popa
cmps
aaa
jp
dec
div
test
sbb
push
jnp
pop
fdivp
dec
jb
rcr
xor
out
mov
(bad)
ins
mov
dec
jg
lods
and
or
jns
in
popa
or
loopne
into
not
aam
jg
cld
jnp
adc
pop
ret
enter
fadd
xchg
aam
push
xchg
movs
les
ss
and
mov
xchg
xchg
sub
adc
dec
out
pop
sbb
mov
xlat
sahf
jmp
inc
xlat
sar
cld
cdq
mov
outs
aas
adc
push
and
stc
repz
call
adc
stos
mov
pop
jmp
or
wrmsr
pushf
sbb
test
ins
mov
pop
aad
idiv
xlat
jl
pushf
dec
cs
pop
les
xchg
pop
jno
sbb
inc
push
adc
jnp
xchg
imul
loope
pop
icebp
lahf
rcl
inc
clc
pusha
mov
xchg
das
pop
test
(bad)
loope
sbb
aas
mov
or
hlt
jnp
adc
mov
adc
(bad)
mov
call
xchg
push
cmp
mov
cli
in
xor
jno
cmp
out
cvtdq2ps
dec
or
xchg
call
push
or
iret
cmps
pop
(bad)
cmps
mov
jns
(bad)
fiadd
sbb
inc
inc
xchg
mov
cmp
inc
add
out
nop
les
jle
xor
ins
pop
jp
aaa
jbe
jmp
xlat
fstp
popa
mov
jmp
cmc
test
cmp
sbb
push
imul
scas
in
adc
pop
jns
shl
xchg
inc
stc
(bad)
icebp
mov
mov
inc
rcl
clc
nop
jnp
and
sbb
aaa
or
xlat
mov
dec
push
adc
add
xor
dec
in
clc
ficomp
jp
je
adc
mov
push
idiv
popf
xchg
pop
out
jp
cwde
cmp
cmp
or
aad
nop
sahf
fisub
cmp
pusha
ret
push
mov
mov
xor
arpl
sbb
pop
mov
popf
add
daa
mov
icebp
icebp
mov
jmp
fisub
(bad)
aaa
pushf
mov
fsincos
in
int3
outs
cmp
shl
cli
jecxz
cmp
ds
lods
xchg
test
loope
and
loopne
mov
loop
rcl
sub
mov
dec
je
adc
cmps
jbe
xor
inc
xlat
mov
mov
cmp
loopne
fdivrp
leave
cmp
pop
adc
dec
nop
push
pusha
popa
iret
add
int3
xchg
sbb
into
push
mul
ror
dec
mov
cmps
jp
add
mov
retf
or
std
push
xor
mov
loope
js
iret
xor
xchg
add
mov
dec
jmp
add
push
sahf
xlat
push
or
jno
mov
neg
or
fcomp
dec
mov
inc
lahf
rcl
sbb
aaa
mov
xor
mov
dec
(bad)
jne
fdivr
sbb
push
and
inc
sbb
push
pop
loopne
out
jp
xchg
js
test
dec
jmp
cmp
shl
or
mov
pusha
cli
dec
retf
inc
call
fnstsw
jne
cmps
fldenv
popa
cmps
add
pushf
pop
movs
or
jb
pushf
fild
push
xchg
mov
inc
inc
or
push
push
rcr
fwait
jns
xlat
xor
xchg
data16
hlt
xchg
xchg
retf
or
aad
mov
or
and
dec
lahf
daa
data16
sar
xlat
cmp
mov
rol
int
push
test
pop
sbb
jge
fidiv
(bad)
inc
js
(bad)
or
das
mov
fisttp
push
loopne
push
loope
popa
mov
addr16
jmp
stos
mov
push
arpl
(bad)
mov
aas
loop
mov
inc
sbb
neg
push
sub
or
daa
sub
addr16
add
jae
js
dec
mul
bound
mov
imul
xchg
jg
sub
xor
ins
and
shr
pushf
mov
cld
ffree
mov
jmp
daa
mov
addr16
pop
neg
dec
dec
sbb
lods
mov
or
mov
fcmovnb
dec
cdq
jb
cmc
jl
or
xor
xlat
adc
push
test
mov
cli
sub
stc
jbe
(bad)
(bad)
mov
adc
push
push
dec
mov
fisttp
mov
ficom
mov
inc
cmp
adc
ss
or
and
sar
loop
inc
push
adc
xor
daa
sub
pushf
dec
or
rcr
push
cs
jno
repnz
ja
xchg
test
or
mov
fcmove
addr16
stc
cmp
fistp
pop
jbe
inc
push
push
lds
loopne
mov
add
scas
fld
retf
cmp
cmp
fwait
add
mov
fwait
lahf
ret
jg
or
cmc
or
shl
sbb
ja
aad
mov
ror
adc
enter
mov
(bad)
add
cmps
push
scas
ficom
repz
inc
ins
sub
cmps
xchg
push
pop
pop
out
es
clc
fnstcw
add
or
sbb
pop
enter
push
add
jb
xlat
jmp
push
imul
xchg
mov
mov
and
mov
xor
fimul
mov
or
pop
lahf
xchg
push
loope
ja
ins
aad
add
pop
gs
adc
adc
jae
mov
sbb
out
mov
bound
dec
repz
addr16
stc
ins
int3
mov
xchg
inc
pop
ror
xor
jmp
or
neg
ins
retf
dec
adc
(bad)
je
(bad)
mov
pusha
and
mov
rcl
mov
int3
push
inc
in
dec
sbb
or
or
pop
cmps
push
adc
retf
push
cmc
lds
adc
repnz
outs
mov
and
inc
into
ror
sub
fst
lods
pop
pop
add
or
pop
cmp
scas
dec
aas
mov
sbb
out
data16
mov
jbe
int3
sub
mov
xchg
pop
pop
test
jmp
or
fs
pop
cmp
add
mov
sub
jmp
dec
dec
ror
pop
xchg
fwait
lock
inc
xchg
mov
mov
add
xor
dec
jmp
jb
mov
int3
mov
sbb
cmp
mov
mov
xor
test
int3
rcr
xor
stc
mov
sub
xchg
or
adc
inc
sbb
mov
inc
adc
add
mov
arpl
pusha
xchg
frstor
adc
jmp
and
aaa
cmp
mov
mul
cmp
cdq
pushf
lea
xchg
cmp
fs
hlt
(bad)
cmp
call
and
mov
fild
in
dec
icebp
mov
adc
les
xor
jns
sub
into
mov
dec
ficomp
sub
mov
sar
mov
push
sub
fst
cwde
cld
mov
scas
inc
dec
or
not
adc
cs
pop
fstp
mov
lea
push
pop
and
dec
and
jle
bsr
xchg
fneni(8087
lock
inc
aam
std
and
push
push
mov
dec
outs
cmp
inc
mov
sub
int
lock
add
cmc
dec
out
push
push
mov
pop
fimul
sub
out
or
frstor
adc
pop
jmp
outs
push
jmp
jp
fcom
adc
push
inc
or
mov
mov
cld
push
pop
in
pop
xor
pop
push
and
or
cmps
fisttp
adc
ds
pop
mov
aam
mov
imul
test
add
or
and
mov
(bad)
icebp
out
pop
mov
push
and
pop
mov
mov
mov
mov
mov
pop
aam
clc
xor
cmp
push
mov
xchg
dec
pop
add
push
clc
jl
cdq
loop
popf
cs
or
(bad)
push
fidiv
jg
mov
inc
push
loope
loop
push
imul
add
sbb
daa
pop
sahf
push
jb
push
fdivr
dec
add
cmp
enter
sub
pop
std
and
stos
movs
(bad)
fidivr
ins
or
and
out
adc
mov
stos
cmp
add
sti
cmp
push
inc
jbe
test
sub
mov
dec
or
sub
rcl
adc
and
xchg
int3
shr
add
outs
les
and
test
sbb
push
rcl
sbb
cmps
ds
int
fistp
aam
sbb
cmp
popf
or
(bad)
mov
ret
dec
jl
pop
jnp
add
in
and
mov
xlat
inc
mov
jnp
add
mov
aaa
lds
or
js
sbb
dec
inc
leave
jno
scas
call
sub
(bad)
(bad)
into
scas
rcl
push
mov
xchg
sahf
push
sar
out
(bad)
mov
out
sbb
movs
lahf
(bad)
cwde
sti
nop
and
jo
jge
sar
mov
lahf
in
and
xchg
xchg
mov
cmp
mov
and
retf
add
cmp
mov
inc
popf
or
pop
and
out
ror
and
jl
add
rcl
lods
fcmove
popf
jne
dec
cmp
push
aam
push
or
or
push
push
(bad)
cmp
rcl
sar
icebp
mov
mov
retf
mov
push
cmp
shr
mov
imul
sar
jmp
pop
scas
mov
or
nop
mov
mov
stos
dec
loope
pushf
inc
rol
fcom
pushf
adc
xchg
push
mov
fld
pop
sub
xor
aam
cmp
aam
popa
aaa
mov
push
xchg
mov
xor
fs
pop
shr
push
and
or
inc
sbb
mov
or
dec
adc
adc
es
xor
adc
repnz
pop
add
push
mov
hlt
add
(bad)
jmp
adc
lahf
rcr
iret
add
dec
dec
es
(bad)
fidivr
and
lods
sti
rcl
daa
(bad)
movs
mov
and
dec
dec
and
shl
lock
stos
jno
rcr
popf
sbb
sub
ror
ss
sbb
mov
popf
adc
lods
sub
cmps
daa
mov
cli
aaa
icebp
aad
pop
cmp
mov
and
mov
lea
cmp
pop
mov
push
xor
out
sar
push
jno
outs
(bad)
dec
fisub
sahf
push
jl
pop
(bad)
jmp
mov
mov
je
loopne
cs
(bad)
loopne
xor
sbb
push
push
fwait
gs
out
rcl
pop
pop
jae
js
gs
mov
jbe
pop
pop
pushf
inc
dec
int3
mov
pop
push
into
jns
jns
fldenv
je
pop
sub
rcl
add
out
rcr
stc
add
add
test
lea
xor
push
jmp
adc
mov
jl
xchg
cmp
sub
cmp
mov
add
mov
push
(bad)
(bad)
pusha
dec
or
stc
sub
test
dec
in
push
fadd
mov
pop
pop
mov
jmp
cmp
(bad)
scas
in
sub
pop
retf
or
jle
mov
fcmovbe
addr16
push
xchg
adc
jmp
sub
sub
xor
ins
pop
xchg
jge
aam
je
ja
jne
fdiv
xor
jge
test
fwait
loop
mov
mov
stos
sti
pushf
xor
shr
xor
movs
push
pop
int
pop
add
add
sbb
popa
sti
psrlq
cmp
je
inc
dec
(bad)
enter
jno
lds
mov
fcmovbe
retf
addr16
stc
dec
jmp
push
pop
add
push
mov
daa
mov
cmc
imul
pop
mov
jnp
inc
jae
cdq
sbb
ins
jp
scas
push
and
idiv
pusha
(bad)
(bad)
push
into
das
idiv
adc
call
lods
(bad)
push
xchg
and
mov
imul
xor
dec
lock
ds
test
sbb
pop
jmp
cld
fistp
add
mov
lds
pop
and
pushf
loopne
aam
cmp
dec
mov
out
ret
sub
jne
sar
inc
outs
scas
std
mov
adc
xchg
es
cmp
je
jo
stc
daa
cmps
jb
mov
jl
neg
or
mov
nop
sar
iret
mov
cmp
mov
out
xchg
aaa
inc
xor
pop
pop
push
add
mov
inc
shl
neg
fcomp
cld
xchg
cmp
iret
call
xchg
adc
jo
stos
test
jbe
(bad)
xor
mov
add
std
fbld
scas
sbb
sbb
jge
jmp
bound
xchg
lods
add
mov
lods
dec
add
jae
fdiv
jns
mov
imul
pusha
adc
inc
add
cmp
xor
adc
or
stos
mov
xchg
sbb
pop
jmp
mov
fisub
push
cmps
sbb
cld
and
repnz
dec
mov
fisttp
sahf
push
lods
clc
add
sub
push
lock
pusha
sbb
or
jp
push
nop
in
inc
jge
lahf
xor
leave
mov
fiadd
add
xor
cli
xchg
ret
call
jmp
dec
add
out
and
std
lds
enter
js
jno
dec
cmp
push
mov
dec
out
inc
push
jmp
sbb
sbb
rcl
dec
adc
inc
sbb
mov
mov
ins
fcomp
rol
cwde
lods
fs
cmps
inc
pusha
and
pop
cmp
fwait
int3
sbb
call
fsub
xor
jb
xor
pop
dec
sbb
mov
imul
add
fistp
lds
fsub
inc
lods
push
push
mul
adc
lods
mov
popf
ins
pop
and
xchg
mov
nop
aam
int
cmp
in
mov
sub
sub
and
out
adc
add
mov
(bad)
(bad)
div
fwait
lea
mov
inc
outs
mov
out
jnp
xlat
lock
adc
pop
daa
test
pop
jp
mov
or
jecxz
scas
pop
add
stc
movs
or
jne
mov
sbb
scas
lock
mov
cmp
fstp
(bad)
(bad)
xchg
int
jp
fsubr
(bad)
pop
pushf
shl
mov
xor
push
sub
jnp
bound
fwait
xchg
or
pop
add
loop
es
cmc
mov
pop
shl
lahf
retf
pop
data16
jmp
pushf
aam
or
cmp
leave
clc
int3
outs
aam
push
out
repnz
pop
push
pop
mov
pop
aas
fldenv
fbld
add
xchg
jnp
arpl
dec
ins
(bad)
jno
push
pop
dec
xchg
sar
test
inc
cmp
mov
daa
adc
sbb
push
clc
pop
add
in
frndint
sub
fisubr
pop
dec
sub
enter
push
sbb
mov
sahf
mov
mov
enter
jnp
jo
popf
movaps
mov
cmp
pop
sub
test
cli
out
(bad)
xor
cmp
leave
push
push
pop
push
sbb
inc
mov
test
mov
daa
imul
rcl
or
cld
inc
xor
adc
fwait
cwde
ja
in
cmp
mov
daa
xchg
cmp
xor
movs
aas
cwde
loop
mov
jae
mov
xlat
adc
out
or
fdivr
jne
mov
daa
arpl
sub
das
pop
in
in
cmps
xchg
inc
out
aad
ror
addr16
and
icebp
cmps
push
xor
sub
sahf
leave
fadd
pop
mov
data16
pusha
enter
push
das
outs
pop
cld
dec
pop
adc
xor
pop
arpl
inc
xlat
shl
pop
ins
adc
ret
fnsave
sbb
and
es
pop
sub
adc
push
sbb
sub
std
mov
mov
mov
push
push
dec
sbb
cmps
call
jge
hlt
sub
std
mov
fcom
pop
sub
sub
mov
pushf
sub
add
repz
adc
jg
xchg
iret
jl
sti
mul
aad
add
(bad)
(bad)
dec
jp
aad
add
or
popf
mov
fs
jo
out
mov
test
mov
lea
mov
jl
add
inc
xor
jmp
pushf
arpl
inc
xchg
repnz
daa
xchg
mov
rcl
xchg
jmp
mov
push
ss
dec
int
in
ins
add
push
sub
aam
push
dec
(bad)
adc
outs
mov
scas
mov
je
frstor
cmp
out
rol
or
mov
(bad)
pop
not
jp
sub
xchg
push
push
iret
out
push
loope
fisub
inc
sub
(bad)
pop
into
mov
jp
rcr
dec
xchg
pop
mov
cmp
sub
int3
in
pop
es
aam
aam
push
fimul
iret
push
retf
fcomp
inc
ret
inc
mov
dec
mov
and
inc
outs
fstp
jmp
retf
or
stos
scas
std
cmps
sub
adc
loopne
movs
lds
cmp
(bad)
sub
jmp
push
push
pop
out
pop
popa
into
adc
or
addr16
xchg
mov
xchg
cld
test
aaa
add
add
cmp
repnz
cmp
mov
rol
or
adc
pop
add
xchg
push
es
push
daa
inc
xlat
rcl
mov
aad
push
pop
jae
icebp
lods
pop
push
rcl
ds
mov
sub
sahf
int3
pushf
test
push
cmp
jg
mov
push
dec
mov
shl
fistp
push
(bad)
ror
cmp
sub
xchg
adc
mov
adc
push
sbb
jg
out
cmps
cmc
jp
daa
fcomp
cmc
push
pop
ss
pop
and
dec
not
sbb
jne
xor
mov
lea
push
fisttp
add
outs
jmp
mov
jmp
adc
sbb
xor
jl
jge
inc
xlat
jg
iret
pop
adc
fimul
xor
sbb
mov
jge
out
xchg
(bad)
pop
in
xchg
je
sbb
mov
int3
jb
enter
lods
movs
cwde
xchg
loope
bswap
lods
adc
test
push
sbb
xchg
out
lods
ret
enter
cld
mov
pop
sbb
(bad)
bound
xor
push
movs
lods
sti
mov
into
mov
rcl
iret
fucompp
mov
inc
push
or
mov
pusha
dec
push
in
or
lods
(bad)
outs
xor
sti
inc
or
and
mov
dec
fucompp
and
and
out
mov
xor
scas
cmp
xchg
in
icebp
adc
sbb
pop
jle
sub
into
imul
mov
fnstsw
sar
pop
sub
stos
sub
in
(bad)
popa
imul
fsub
pop
nop
ficomp
hlt
add
jg
ret
dec
dec
mov
das
jl
ds
aaa
sub
adc
jge
jl
cmp
loopne
cmp
jbe
adc
movs
out
add
and
xchg
out
inc
(bad)
in
xchg
fild
cmc
mov
pop
dec
movs
pop
and
imul
rcl
cmp
mov
outs
sbb
jae
dec
mov
sbb
std
sub
xor
ds
test
dec
adc
dec
push
es
inc
je
jmp
xchg
inc
loop
in
mov
pop
aaa
neg
nop
adc
sub
mov
cmp
jmp
xor
cwde
mov
lods
pushf
and
and
fpatan
popa
xor
test
xor
adc
test
fisub
or
(bad)
rol
fcomp
jne
push
dec
mov
sub
mov
loopne
cdq
fiadd
fcmovnu
add
popa
cwde
sub
xchg
pop
int3
out
xlat
ja
aas
xchg
xchg
pop
daa
imul
sub
add
sub
inc
inc
mov
sar
mov
xor
nop
rcl
mov
inc
stos
inc
push
xchg
cmp
ins
cmp
inc
jl
mov
(bad)
ja
push
inc
jle
xchg
movs
pop
inc
lods
adc
nop
xchg
je
(bad)
push
in
or
pusha
aaa
inc
cld
ja
jb
rcr
pop
rcl
push
int
sub
nop
xchg
int
gs
je
lock
jnp
pop
outs
mov
inc
cmp
cmp
out
sti
imul
pop
stos
loopne
mov
push
push
fidivr
loopne
(bad)
mov
mov
inc
cmps
mov
pop
loop
pop
fist
imul
push
shl
dec
retf
and
call
add
lea
adc
es
pop
xchg
sub
dec
inc
push
ins
xor
inc
pop
cmps
sub
(bad)
stos
sub
cdq
mov
in
sbb
jmp
fist
jmp
imul
push
jns
dec
pop
test
lea
leave
sbb
xor
xor
sets
dec
dec
in
hlt
mov
fwait
add
rol
and
cmp
fwait
pushf
sar
inc
dec
(bad)
mov
lock
enter
sbb
shr
gs
and
enter
out
push
pop
leave
jge
add
mov
pop
cmp
sahf
mov
fsubr
(bad)
or
jmp
inc
xchg
sub
cmps
xchg
std
mov
cdq
mov
pusha
in
cmp
mov
bound
push
in
xor
imul
pop
dec
fstp
inc
loopne
cwde
(bad)
mov
in
fcomp
inc
adc
and
out
aad
xchg
jmp
cmps
pop
sbb
shl
shl
mov
nop
loop
jns
jbe
rol
inc
jg
cmp
dec
cdq
aaa
pop
cmp
jns
mov
leave
mov
add
mul
iret
add
aas
xchg
mov
mov
push
enter
push
jl
int
shr
mov
rcl
iret
(bad)
(bad)
sbb
and
(bad)
fcomp
jo
outs
daa
xchg
mov
push
dec
idiv
mov
cdq
shr
rcr
fidiv
xor
sbb
aas
arpl
fisttp
pop
cmp
shr
icebp
pushf
push
xchg
sub
xor
jns
mov
fs
lds
(bad)
cmp
adc
add
or
hlt
(bad)
mov
neg
fnstcw
sbb
add
mov
inc
cmps
sub
cmp
or
push
cmp
shr
pop
sbb
pop
mov
cdq
call
adc
and
daa
and
xor
ret
inc
xor
mov
mov
call
loop
in
mov
fnsave
adc
fadd
push
push
and
pop
aad
sub
in
mov
dec
stos
out
mov
jns
pop
loope
cmc
cmp
pop
sbb
pushf
xor
inc
sbb
adc
(bad)
xchg
cmp
enter
mov
mov
inc
fld
lds
push
scas
inc
jecxz
inc
(bad)
std
adc
cmps
push
add
loop
jo
cld
cmp
mov
push
mov
lahf
jae
jp
or
in
les
aaa
push
mov
addr16
sub
arpl
adc
push
in
and
xchg
sbb
pop
sub
retf
mov
in
les
inc
add
out
fcmove
test
aaa
or
and
cli
das
fnsave
shl
rol
dec
xchg
sub
in
enter
enter
or
push
pop
fmul
xor
ds
xor
test
pop
stos
push
repz
pop
pop
dec
js
cmps
stos
xchg
pushfw
int
sahf
mul
xlat
cmp
ins
daa
push
shl
rcl
pushf
push
shl
mov
add
jmp
and
push
int
imul
sbb
fstp
ret
adc
imul
and
ret
mov
mov
sbb
mov
fist
mov
mov
add
mov
mov
push
stos
imul
xor
stos
add
pop
jmp
jbe
scas
push
mov
mov
loopne
add
and
mov
xchg
mov
mov
gs
or
push
mov
or
push
pop
out
cmp
cmp
(bad)
cs
ja
lods
mov
aaa
pop
mov
(bad)
pop
push
push
out
call
cmp
fs
lahf
mov
mov
sub
adc
mov
inc
(bad)
retf
rol
fcmovnbe
jo
pop
pop
in
repnz
jmp
nop
push
dec
jb
stos
jg
rcr
es
adc
stos
test
popf
ret
bnd
mov
mov
sti
retf
mov
loop
dec
mov
cmp
or
(bad)
sub
xor
jb
mov
cmc
in
fisub
sub
or
cld
push
dec
rcl
xchg
push
repnz
movs
dec
dec
add
sahf
jg
dec
mov
es
scas
jae
inc
stos
sbb
inc
pop
xor
jmp
in
mov
into
xchg
sahf
repnz
jp
stos
imul
pusha
test
mov
dec
sub
ror
and
fadd
imul
sub
dec
sbb
retf
cwde
adc
fdivr
sar
in
call
dec
adc
pop
aam
push
outs
push
test
lahf
dec
inc
pop
fsub
add
rol
mov
lahf
add
dec
jo
imul
mov
not
ss
out
mov
mov
fs
jmp
jmp
lods
out
push
pusha
div
add
xchg
adc
sub
daa
mov
(bad)
pop
add
fsub
pop
lods
inc
into
push
mov
call
stos
jp
inc
int
in
loop
pop
jbe
ret
fcom
popf
and
push
icebp
mov
push
stc
cwde
mov
in
aas
fwait
rcl
ins
(bad)
xlat
pop
dec
fidivr
cmp
cld
pop
nop
sub
(bad)
cmp
mov
mov
popf
ret
ror
inc
stos
cli
sub
inc
add
iret
sub
and
push
mov
inc
pusha
pop
xchg
and
loop
sbb
hlt
xchg
shl
push
ja
sub
cmps
shl
mov
rcr
in
fnstenv
loope
jae
dec
add
cmp
fadd
scas
outs
lods
inc
mov
rcr
je
xlat
lods
pop
or
mov
push
mov
dec
aaa
cdq
aad
call
jo
out
mov
pop
jl
jecxz
call
nop
stos
cmp
rcr
jge
rol
mov
cmp
push
(bad)
pop
stos
movsx
ja
push
pop
pushf
push
xchg
or
mov
shr
inc
and
rol
and
sahf
out
push
shl
push
daa
pop
sub
or
pusha
les
call
fcmovne
dec
xor
es
adc
mov
adc
mov
or
xchg
jmp
inc
pop
pop
mov
mov
rcr
fiadd
dec
repnz
mov
xchg
xlat
add
sub
test
lds
(bad)
dec
cli
dec
push
jle
adc
mov
(bad)
lds
stos
mov
nop
pop
lock
pop
jo
xlat
sbb
fdiv
aas
test
icebp
test
out
cld
cdq
push
fs
fstp
sbb
arpl
cdq
cmp
xor
mov
mov
sub
adc
push
hlt
add
ds
dec
jnp
je
(bad)
not
mov
xchg
lock
push
dec
mov
mov
xchg
cwde
add
dec
jecxz
(bad)
jmp
or
arpl
and
popa
xlat
mov
fnstsw
data16
jnp
add
rcl
frstor
xor
push
lea
xchg
jb
stos
lock
dec
jnp
xor
mov
push
mov
adc
sub
retf
mov
jno
adc
add
int
fnstenv
adc
push
push
jmp
cs
mov
mov
in
sub
dec
mov
mov
(bad)
jle
popa
cmps
push
int
imul
daa
cmps
jo
lds
fcmovnb
dec
mov
jmp
cmp
mov
imul
test
adc
ja
inc
(bad)
icebp
rcl
push
out
xchg
pop
xor
or
sub
stos
mov
gs
in
(bad)
fisubr
js
mov
xchg
ss
cld
mov
add
sbb
sahf
jp
pushf
mov
and
jnp
inc
adc
(bad)
dec
fstp
rol
jmp
mul
aam
(bad)
add
and
xchg
retf
jnp
dec
loopne
adc
adc
in
pop
jg
inc
loope
sub
(bad)
xchg
mov
mov
add
je
push
stos
gs
dec
popa
test
pop
mov
xchg
sahf
hlt
fucomip
sahf
pop
xlat
ja
xchg
dec
test
sub
mov
mov
je
xchg
mov
sub
in
dec
cmp
cmp
dec
mov
xor
push
sbb
sbb
cmp
pop
pop
ja
shl
or
cli
dec
xor
pop
loope
push
jmp
fcmovnb
ja
push
out
inc
ja
(bad)
jge
push
fmul
in
and
shr
enter
dec
mov
sub
out
jle
pop
pop
and
dec
nop
daa
sub
hlt
or
aam
fcom
add
mov
push
test
inc
fst
popf
lods
xchg
int
daa
adc
adc
es
sub
fidivr
adc
mov
nop
jmp
pop
es
pushf
push
dec
lds
dec
aam
mov
loopne
jbe
test
test
pop
and
sbb
mov
fisub
nop
xlat
div
das
jg
dec
or
jno
int3
jbe
out
push
push
leave
js
pushf
push
sub
sbb
mov
ins
jno
dec
frstor
pop
cmp
mov
sbb
xchg
and
js
jl
push
dec
(bad)
int3
push
aam
mov
out
push
push
and
test
mov
mul
test
jmp
xchg
fldenv
jg
mov
popf
push
sbb
test
mov
add
fimul
inc
xchg
mov
mov
jno
or
leave
mov
mov
data16
or
adc
fisubr
adc
ror
xor
rcl
out
mov
ins
add
jl
cmp
cmc
sub
ins
jl
test
cmp
lea
scas
daa
mov
push
adc
or
aaa
jb
sbb
push
mov
mov
cld
fnstsw
adc
aad
loopne
xor
(bad)
enter
cmp
dec
lahf
ds
adc
fwait
sub
fld
jmp
cmc
push
pop
ficomp
sbb
mov
cmp
xor
jnp
cdq
movs
mov
add
and
fcmovbe
add
xchg
push
cdq
xchg
mov
sub
arpl
jle
mov
mov
mov
add
jmp
or
dec
out
test
dec
jg
es
pop
arpl
push
sahf
retf
(bad)
jle
xchg
mov
outs
loop
mov
adc
xchg
push
cmps
pop
mov
cmp
sbb
nop
inc
lock
add
outs
bound
addr16
add
pop
pop
ins
dec
out
sbb
push
test
test
add
xchg
ror
lods
xor
rcr
xchg
leave
and
or
rep
sti
mov
dec
xlat
in
add
mov
mov
mov
mov
dec
fidivr
mov
xlat
ret
movs
pop
test
jne
idiv
repz
lock
scas
pop
into
popf
push
push
adc
cmps
pop
sbb
test
add
cdq
je
ss
js
mov
pop
or
push
mov
jg
push
fdivr
jp
xor
shl
adc
pop
and
jg
sub
push
js
stos
idiv
pushf
or
mov
jp
xchg
in
cmps
dec
lahf
test
(bad)
pushf
mov
cs
popa
das
test
fcmovu
or
dec
cdq
adc
in
xor
pusha
call
cmp
inc
xlat
fcom
pusha
sub
pop
cmp
fsubp
in
dec
test
push
sar
and
push
lock
cmp
jg
push
das
pop
sbb
xlat
pop
dec
outs
xchg
fsubr
hlt
dec
sbb
jo
jl
push
add
pop
or
out
fmul
sub
mov
sbb
cli
mov
mov
pop
call
cmp
adc
lds
popa
jge
cmps
pop
(bad)
jo
push
fidivr
in
fistp
arpl
outs
pop
cmp
jecxz
dec
mov
fwait
dec
xchg
or
dec
cmp
hlt
sub
leave
sub
xchg
cdq
sub
mov
aam
icebp
inc
out
pop
mov
test
retf
(bad)
sbb
ins
test
nop
rcl
in
and
push
(bad)
lock
dec
cmp
ficomp
data16
jg
or
pushf
sbb
ins
xlat
xor
xchg
std
inc
dec
add
out
cmc
leave
push
test
pcmpeqb
push
inc
cmc
mov
lahf
mov
rcr
fsub
sub
sar
sbb
push
ret
mov
jae
sub
dec
sub
xor
(bad)
(bad)
dec
jb
cmps
les
sahf
or
push
stc
call
lds
push
test
pop
sahf
pop
(bad)
imul
dec
and
xor
mov
fsubr
div
cmp
jae
retf
ins
sub
(bad)
(bad)
push
inc
cmps
push
jge
xchg
mov
cmp
mov
mov
inc
pop
pop
retf
shl
jg
jl
xchg
jns
jmp
pop
out
dec
and
fcmovnbe
lahf
cmps
rcl
xchg
inc
ret
sti
scas
fisttp
inc
cdq
in
cmp
xchg
xchg
fcom
nop
lods
mov
mov
pop
loope
into
xchg
imul
dec
sub
dec
fwait
stos
mov
pop
mov
icebp
jne
lods
rcr
add
mov
mov
cmp
mov
mov
pop
mov
xchg
movs
xchg
in
mov
aad
call
seto
rol
dec
push
sbb
push
push
adc
and
lods
push
add
adc
clc
xchg
xor
dec
retf
test
jne
imul
ds
arpl
dec
adc
push
push
or
call
jl
add
mov
mov
mov
cdq
test
add
lods
xor
ret
adc
and
cmp
pop
xchg
std
and
pop
popf
fnstenv
mov
das
stos
cmp
ja
bound
(bad)
hlt
mov
sahf
int
jle
mov
ret
adc
or
and
mov
jnp
xchg
and
int3
ror
inc
(bad)
icebp
fiadd
mov
sahf
mov
repnz
dec
add
fcomp
arpl
loop
fiadd
push
pop
test
sbb
and
pop
inc
add
cdq
adc
and
jae
neg
ins
aaa
movs
pop
dec
pop
xchg
sbb
movs
fucom
in
or
fwait
push
xor
pop
adc
aaa
addr16
fucom
call
(bad)
push
nop
push
pop
or
stos
push
inc
or
dec
xchg
xchg
adc
(bad)
push
ja
cmp
add
cmp
dec
pop
add
cmp
jl
lea
mov
cli
add
les
cmp
movs
mov
stos
in
fimul
jno
ror
sub
addr16
aad
dec
ja
xor
jle
out
mov
mov
cwde
cs
out
push
mov
mov
lea
pop
sbb
into
add
cmps
fild
(bad)
xlat
stos
jp
mov
das
pop
pop
daa
mov
cmp
fcmovu
jnp
fwait
mov
inc
mov
lock
cmc
aas
mov
mov
(bad)
mov
in
xchg
xor
mov
mov
sbb
sub
inc
loopne
ret
out
inc
push
lea
popf
jnp
mov
add
xor
xchg
sbb
jo
push
push
fcmovbe
test
aad
dec
loopne
iret
sub
addr16
add
call
adc
cdq
and
and
(bad)
push
jmp
nop
lds
sbb
and
xlat
loop
rcl
call
mov
push
inc
cmps
mov
add
push
pop
fmul
jmp
cmps
push
jns
iret
and
and
ins
lock
cmps
sar
cdq
cmp
sbb
dec
fild
ins
(bad)
add
pop
idiv
jp
add
mov
dec
pop
ret
add
mov
sub
lock
fdivr
push
loopne
or
push
mov
pop
push
cmps
into
rcr
sbb
jbe
inc
jl
inc
xchg
hlt
out
and
iret
cmp
cmp
or
test
add
sbb
ins
cmp
mov
ins
pop
out
inc
or
int
add
retf
mov
fldenv
lods
aam
call
(bad)
and
sub
aaa
xor
in
stos
enter
fimul
data16
lods
mov
gs
and
and
icebp
ror
adc
sbb
pop
pop
dec
push
sbb
adc
mov
cmp
mov
imul
lods
inc
lds
pop
dec
sbb
jecxz
mov
lock
pop
ficomp
push
lods
inc
pushf
mov
test
cmp
shl
inc
push
fst
enter
(bad)
sti
mov
xchg
outs
daa
cmps
lock
dec
push
rcr
sub
enter
retf
jmp
mov
inc
or
mov
(bad)
arpl
pop
(bad)
fldenv
and
mov
push
inc
lea
adc
jnp
adc
fdiv
mov
icebp
inc
mov
xchg
mov
stos
stos
loopne
shl
shr
daa
adc
push
mov
popf
push
sbb
(bad)
popa
retf
mov
jmp
sub
out
add
lods
lock
pop
(bad)
iret
cmp
and
cli
dec
cdq
movs
push
pop
pushf
int3
test
xchg
imul
or
cmps
mov
pop
cmps
sbb
cmp
div
mov
inc
cs
icebp
ret
mov
dec
mov
pop
inc
cli
mov
in
cli
push
adc
loope
ja
and
out
adc
sub
xchg
pop
add
xchg
cmp
mov
enter
in
or
mov
dec
repnz
movs
js
out
dec
mov
sub
xor
(bad)
xlat
fistp
pop
add
aam
sbb
cld
dec
movs
xchg
and
(bad)
mov
jnp
fimul
ds
cld
dec
jae
aam
push
push
je
ficom
cmp
ret
jle
arpl
out
(bad)
(bad)
or
sub
xchg
jnp
cmp
test
js
mov
(bad)
mov
push
(bad)
jle
jb
in
out
adc
push
dec
hlt
lods
sti
xor
sbb
pop
xchg
sahf
jmp
and
movs
adc
inc
ins
jno
pop
test
inc
pop
mov
in
or
add
xor
mul
jns
pop
les
jl
in
fldcw
or
lahf
mov
call
sub
cmp
(bad)
pop
fist
cmp
icebp
sub
dec
jmp
in
mov
cdq
int
loop
or
xchg
sti
ja
pop
call
and
inc
mov
pop
sbb
mov
and
push
adc
sahf
js
out
and
loopne
nop
ficomp
push
sbb
cdq
mov
xor
lods
mov
cmps
lods
test
jge
pop
cmc
ja
cli
pop
push
in
ror
cld
enter
mov
loopne
in
push
xchg
inc
sbb
mov
push
movs
mov
mov
(bad)
fcmove
(bad)
mov
pop
mov
add
pop
(bad)
push
adc
pop
xchg
lock
mov
jle
popf
outs
push
out
sub
not
add
rcl
pop
dec
adc
sub
sar
or
xchg
les
fimul
(bad)
nop
dec
add
sub
and
aad
xchg
add
mov
cs
sbb
pop
cmp
xchg
cmp
repz
inc
pop
dec
jmp
fcomp
mov
cmp
pop
xlat
inc
cs
pop
pop
mov
adc
and
cmp
sbb
pop
or
ins
rcr
inc
imul
lea
outs
mov
xchg
enter
adc
xchg
inc
ins
test
icebp
dec
jo
xor
mov
mov
por
jge
repnz
mov
jno
aam
add
fcmove
push
push
arpl
fwait
out
mov
(bad)
push
ret
sub
fcom
ins
int
pop
jo
jle
sbb
popf
dec
mov
fwait
mov
in
mov
or
and
or
ins
mov
dec
ror
int3
push
sti
mov
add
nop
repnz
icebp
retf
adc
jnp
add
sub
push
dec
dec
mov
jo
xchg
in
(bad)
jle
in
mov
pop
xor
add
xchg
pop
out
frstor
sub
mov
jmp
xchg
imul
aaa
sub
cmp
mov
stos
gs
xchg
push
sbb
pushf
fs
fwait
or
loope
into
loope
push
in
ret
in
push
xchg
(bad)
stos
shl
cwde
sub
adc
loop
rol
inc
xchg
sbb
loope
dec
dec
sbb
aad
sub
popf
and
add
or
sub
scas
jge
ficomp
pop
add
mov
push
fmul
mov
std
imul
dec
call
nop
cwde
and
pop
or
xchg
mov
push
cmc
mov
jmp
in
hlt
fdivr
(bad)
int
in
pop
test
es
sbb
scas
outs
dec
fdivr
addr16
(bad)
loope
shr
cmp
jmp
push
push
jae
(bad)
rol
fdecstp
lock
push
pop
push
inc
dec
jle
lahf
mov
pushf
mov
sti
dec
mov
adc
mov
stos
aad
mov
pop
shl
jb
std
inc
cmp
pop
stc
rcr
and
aam
cmp
cmp
sbb
mov
adc
cmp
mov
pop
xchg
(bad)
sub
icebp
xor
lds
xor
mov
jmp
cmc
sar
xor
fbld
and
(bad)
sbb
mov
lods
push
aaa
sub
pop
adc
aad
inc
mov
fldcw
mov
sub
or
inc
(bad)
call
jl
jo
xor
xchg
loop
push
add
push
jg
dec
mov
rcr
push
repnz
ss
sub
push
cwde
push
dec
cdq
js
pop
rcr
adc
enter
ss
xchg
xchg
sbb
fwait
push
lea
mov
push
ins
enter
inc
adc
pop
mov
pop
dec
xor
push
add
sbb
inc
jns
scas
and
or
xchg
cs
hlt
mov
retf
inc
cmp
mov
(bad)
jge
add
cld
lds
adc
lock
(bad)
jp
sub
fstp
dec
push
push
fst
jns
into
mov
push
and
aaa
jle
stos
inc
push
mov
cmc
and
sbb
pushf
(bad)
call
mov
mov
shrd
jmp
cwde
not
mov
addr16
adc
xor
arpl
in
aam
add
pushf
xor
sbb
dec
cli
test
bound
arpl
pop
jl
out
dec
test
(bad)
mov
aaa
push
sub
or
adc
popf
(bad)
popf
mov
int3
dec
shr
jle
gs
(bad)
sub
test
mov
pushf
xor
aaa
add
jnp
idiv
test
and
test
(bad)
addr16
pop
dec
or
or
adc
push
jmp
dec
retf
dec
dec
push
leave
sbb
xchg
pop
mov
lods
arpl
mov
inc
jg
mov
fcmovnb
stos
fstp
inc
(bad)
not
xor
pop
jge
jecxz
mov
and
bound
mov
loopne
mov
cli
push
jne
(bad)
imul
and
cli
(bad)
mov
daa
(bad)
fidiv
mov
sub
xchg
mov
ins
xchg
sti
xchg
mov
jns
lahf
pop
adc
cwde
sbb
jg
jmp
into
xlat
stos
loopne
xor
clc
adc
sub
cdq
pop
dec
mov
add
aaa
in
call
mov
push
or
adc
not
push
push
imul
fcomp
rcr
aam
mov
mov
mov
sbb
or
add
enter
add
gs
adc
dec
mov
mov
jle
pop
js
push
mov
jo
inc
pop
mov
fidiv
mov
aam
fisttp
sbb
cmp
xor
jnp
pop
test
cld
pop
ins
aam
push
std
pop
imul
mov
mov
adc
icebp
xlat
or
mov
std
bound
mov
or
pop
call
(bad)
fcom
cld
test
icebp
hlt
pop
inc
mov
aaa
fst
xlat
rcl
xchg
and
push
cmovnp
push
cmp
sbb
add
aam
test
sub
iret
mov
cli
push
les
adc
int3
shl
into
mov
pop
jg
pop
sbb
lods
sub
dec
cwde
(bad)
mov
data16
(bad)
jge
mov
into
pushf
dec
clc
mov
nop
or
jle
imul
int
xchg
sbb
cmovs
sub
call
sbb
cmc
dec
add
mov
ins
leave
dec
add
scas
mov
sbb
shr
pop
cld
ins
push
or
jae
xchg
or
xchg
cmp
mov
or
or
loope
xor
scas
je
aad
add
xchg
pop
cs
pop
mov
add
repz
jmp
mov
xchg
push
cld
pop
xchg
cli
push
enter
push
popa
hlt
cdq
popf
loopne
loop
ficomp
and
xchg
dec
fwait
mov
jnp
das
jl
stc
mov
retf
add
dec
push
aam
fadd
aas
loopne
cli
push
cmp
push
inc
adc
test
ror
repz
int
lahf
push
fsubr
adc
pmulhuw
or
ja
mov
sbb
mov
(bad)
cli
mov
sbb
stos
push
out
in
mov
sbb
xchg
data16
push
jl
(bad)
push
and
dec
mov
sbb
adc
test
inc
jge
sub
pop
push
in
jo
add
aas
push
add
pop
push
movs
(bad)
pop
jo
leave
pushf
sbb
fs
out
adc
and
adc
rcl
dec
aad
jg
inc
(bad)
repz
adc
sub
dec
add
push
hlt
fisttp
inc
(bad)
mov
test
sub
pop
popa
pop
in
dec
jmp
add
cs
cmp
inc
jmp
jmp
rcl
mov
sub
dec
out
adc
repz
icebp
fst
push
jae
push
pusha
sbb
jge
xor
mov
push
int3
cld
jl
mov
out
or
test
mov
dec
imul
rcr
mov
or
aad
pop
mov
mov
pop
add
mov
pop
cmp
shl
popa
int3
ins
sbb
xor
jmp
test
cmp
sbb
or
scas
sbb
push
dec
fwait
pop
and
sti
mov
and
mov
xchg
xchg
loopne
hlt
or
xor
(bad)
aam
xor
xor
dec
outs
call
sbb
icebp
imul
lods
inc
mov
loope
arpl
fsubr
mov
bound
fwait
(bad)
dec
ins
push
dec
dec
cmp
dec
mov
cmp
jbe
xor
mov
aam
ret
adc
add
leave
popa
es
jnp
xlat
call
out
imul
and
jnp
and
cmps
gs
std
mov
(bad)
leave
and
push
aaa
(bad)
xchg
(bad)
mov
scas
push
mov
xor
pop
daa
not
out
dec
mov
mov
fild
sbb
out
aam
push
stc
test
rcr
out
push
retf
pop
sahf
push
jmp
sub
fs
mov
mov
outs
push
and
xlat
sbb
jmp
(bad)
imul
das
neg
ror
nop
movs
les
pop
jg
loop
push
xchg
push
in
into
ror
adc
rol
xchg
test
jne
outs
sbb
test
ja
lods
adc
scas
push
out
popa
mov
fidiv
mov
cmp
sbb
test
into
pushf
lock
cld
test
shl
and
adc
xchg
inc
out
mov
mov
mov
mov
cmp
push
adc
out
mov
adc
mov
adc
mov
fcom
cs
jnp
ss
test
test
mov
xchg
and
dec
cmp
test
and
cs
sbb
fld
pop
call
mov
mov
and
sub
nop/reserved
jge
imul
ror
aaa
adc
mov
and
cmp
or
push
and
mov
fmul
jnp
mov
jb
sbb
dec
loop
adc
and
clc
xlat
mov
rol
inc
jle
mov
push
nop
fs
mov
sbb
pop
and
mov
push
pop
shr
push
aaa
cmp
in
sbb
into
pop
xlat
jno
dec
les
jge
and
cwde
inc
push
test
or
jg
xchg
adc
or
push
iret
xchg
out
mov
dec
outs
adc
push
int
push
xor
mov
push
mov
sub
jnp
sub
test
comiss
sub
or
rcr
sbb
xor
add
push
dec
jmp
fist
xchg
(bad)
fcmovbe
xor
cmp
fsubr
sub
cmps
mov
pop
es
mov
mov
cmp
dec
sub
scas
out
(bad)
in
ret
sbb
test
nop
loopne
jg
enter
mov
ss
repnz
pop
aam
mov
loop
xchg
add
idiv
sbb
and
mov
xchg
adc
fs
sbb
mov
test
adc
sub
(bad)
lahf
lods
test
jno
je
ds
mov
std
das
mov
pop
lods
xchg
push
ds
push
add
daa
xor
pop
jge
aaa
pop
dec
outs
in
fst
jp
jnp
int3
push
scas
and
dec
cs
mov
add
or
pop
sti
mov
sub
fiadd
aad
dec
lahf
sub
push
jno
outs
xor
aaa
clc
push
jmp
outs
out
and
sub
fnstsw
jnp
movs
call
rol
push
scas
shl
dec
jbe
fcmovbe
test
dec
(bad)
adc
pushf
int
lods
lock
pop
add
lahf
inc
fsubr
nop
add
in
nop
ficom
push
dec
imul
(bad)
jno
daa
sbb
cmps
clc
cld
in
ror
loop
mov
enter
in
mov
jb
or
in
enter
test
fwait
sub
mov
cmp
and
pop
dec
in
mov
mov
rcl
lods
or
imul
xchg
sub
pop
aaa
mov
pop
cmp
fmul
add
push
push
rcr
add
adc
imul
cmp
and
ja
shl
cmps
sub
ror
stos
add
shl
jmp
imul
inc
gs
xor
sub
sub
rcl
xchg
out
aam
push
mov
mov
sbb
xchg
outs
cmp
sbb
out
ror
mov
(bad)
aam
mov
mov
or
hlt
pop
pop
pop
aam
daa
xor
sub
add
sbb
sub
pop
dec
in
cs
pop
rcr
jmp
xor
cdq
leave
test
jp
cdq
cmps
aam
stos
push
psubb
mov
mov
mov
jae
call
out
cmp
cmp
jne
mov
mov
scas
cmp
shr
shl
inc
addr16
cmp
int
mov
ins
scas
std
push
cmp
sub
stc
inc
loope
cmp
je
xchg
aam
mov
or
dec
mov
push
inc
into
cmovae
and
sbb
and
jb
pushf
mov
mov
test
(bad)
xor
(bad)
ret
cwde
xlat
es
inc
mov
and
push
or
mov
mov
icebp
fldcw
pop
pop
out
div
std
sbb
fucomi
aas
pop
push
data16
cmps
data16
pushf
push
xchg
xchg
and
push
jmp
or
popa
repz
sahf
ret
dec
sbb
call
mov
pusha
xchg
iret
and
call
mov
dec
push
outs
mov
shl
push
pop
std
loopne
jp
pop
mov
mov
sub
inc
pushf
lock
xor
out
adc
add
cdq
cmp
pop
jg
inc
sti
in
mov
and
ja
(bad)
push
bound
dec
movs
xlat
pop
fnstsw
push
leave
out
jae
leave
mov
out
mov
sbb
jmp
fwait
test
inc
js
ds
dec
jge
dec
or
sahf
push
jmp
loop
jmp
xchg
xchg
cmps
cwde
and
xor
int
or
adc
xchg
stos
pop
cmp
es
add
out
out
fst
pop
sub
mov
clc
mov
sbb
mov
dec
call
gs
scas
xchg
mov
ja
jecxz
nop
(bad)
push
into
jns
inc
sahf
xchg
pop
fstp
add
jnp
pop
add
pushf
pop
mov
retf
popa
mov
shl
lahf
ret
cmp
pop
test
cmps
sub
icebp
or
fidiv
fwait
lea
(bad)
pushf
mov
in
ins
test
pop
imul
out
adc
inc
jge
(bad)
fs
addr16
lock
cmps
out
pop
icebp
and
fnstcw
or
call
addr16
jecxz
sbb
xchg
aad
mov
push
hlt
fidiv
hlt
push
adc
lea
test
push
mov
xor
cmp
scas
scas
lods
mov
add
cmp
and
pop
neg
push
in
(bad)
jo
mov
sub
mov
shr
sti
pop
lods
scas
inc
mov
mov
sar
inc
dec
outs
shl
cmp
retf
mov
pop
enter
mov
dec
cwde
in
fist
and
faddp
dec
inc
xlat
(bad)
lock
jno
mov
cmc
mov
jge
fcom
jmp
dec
pop
mov
fcom
mov
and
pop
pop
aas
mov
(bad)
xor
arpl
mov
ds
test
das
leave
jecxz
xchg
pop
dec
xchg
mov
sbb
ds
pop
pop
push
out
sbb
add
jmp
dec
add
stc
stos
jecxz
leave
jnp
jmp
pop
mov
and
jle
xchg
adc
cmp
cmp
sti
push
lds
add
fnstcw
test
mov
scas
test
stc
dec
pop
sub
jo
add
lock
or
cwde
retf
pop
test
imul
pop
sbb
adc
sub
stos
sbb
and
sahf
or
mov
fmul
sbb
lahf
or
sbb
push
add
mov
push
xchg
mov
fimul
and
daa
and
mov
mov
jne
je
mov
xor
fidivr
mov
inc
cs
jle
shl
push
mov
ins
jp
inc
test
repnz
out
pop
out
or
sub
stos
and
or
enter
mov
adc
sahf
pop
xor
cld
cmp
xor
ficom
push
popf
les
inc
mov
pop
pop
inc
jg
shr
dec
aam
test
gs
sub
pop
not
mov
add
mov
nop
pop
pop
leave
dec
(bad)
and
cwde
sub
in
xchg
sbb
ret
test
mov
(bad)
stos
push
sub
mov
aam
pop
sub
push
arpl
sbb
pop
mov
xchg
xor
push
shl
inc
addr16
shr
cmp
push
jno
lods
cmp
mov
jge
dec
pop
sub
shl
cmps
sub
cld
retf
hlt
in
inc
dec
enter
mov
popf
ins
(bad)
(bad)
shl
popa
hlt
mov
jb
hlt
sbb
dec
mov
xor
rcr
and
scas
inc
pop
jo
pop
(bad)
xlat
ds
les
xlat
hlt
push
and
mov
out
mov
pushf
in
ficomp
dec
cmc
sbb
and
retf
out
cmp
add
pop
gs
outs
hlt
fld
mov
(bad)
jmp
mov
sti
push
aaa
mov
dec
pop
mov
sbb
mov
(bad)
mov
and
sbb
push
ds
and
xor
pop
hlt
adc
jae
fwait
loopne
xchg
sahf
lods
fnsave
xchg
loop
sub
jo
xchg
cmp
pop
inc
sub
and
stc
or
sub
mov
xor
sub
jnp
pop
sub
xchg
loopne
xor
xor
pop
mov
push
add
jae
sbb
jle
add
dec
and
mov
stos
xlat
push
fdivp
jge
aam
imul
dec
xchg
add
arpl
stos
(bad)
enter
xchg
mov
jnp
dec
add
popf
movs
fistp
cwde
jle
fadd
mov
call
xor
lds
add
ds
lods
jmp
retf
mov
cmp
mov
int3
shl
or
aam
jmp
add
jnp
mov
adc
jns
adc
sbb
fisttp
fistp
cli
(bad)
cs
adc
mov
xlat
hlt
mov
test
xchg
in
sub
icebp
stos
xor
sbb
xlat
nop
out
sbb
mov
scas
or
shr
push
sub
fist
loop
test
out
xor
arpl
pop
and
mov
sbb
stc
cmp
cdq
aam
mov
cdq
jo
pop
cmp
fisttp
rol
aam
and
pop
or
adc
pop
xor
movs
fwait
mov
aad
aad
sbb
push
adc
lods
push
shr
enter
mov
iret
xchg
jp
jo
cmp
pop
cmp
push
mov
or
mov
push
adc
pop
jmp
xchg
stos
mov
call
(bad)
rol
mov
mov
neg
sub
(bad)
aad
sahf
aam
jmp
pusha
add
lods
ins
jmp
retf
not
pop
lahf
cmc
loopne
sub
jl
dec
stos
push
stc
pop
std
sub
mov
pop
repnz
fbstp
and
or
mov
push
dec
cmp
out
clc
aam
sub
mov
idiv
rcr
jmp
jae
cmp
stos
xchg
fcomp
jo
mov
jg
push
mov
scas
aam
push
xor
push
(bad)
adc
out
pop
outs
in
sar
fisttp
pop
dec
scas
or
or
mov
jnp
sub
mul
fnstenv
ds
cld
loope
mov
fwait
(bad)
sub
adc
dec
pusha
(bad)
push
cmps
mov
lahf
dec
enter
mov
jne
fcomp
push
ds
pop
out
sub
xlat
out
imul
enter
xchg
mov
call
mov
fs
ja
mov
test
push
test
xlat
cmp
mov
je
jne
jge
adc
aad
dec
or
mov
add
rcr
jb
inc
addr16
movs
dec
xor
outs
dec
lods
scas
sbb
dec
daa
push
push
and
lds
dec
mov
lahf
pop
call
lds
jmp
cld
jnp
stos
ins
xor
arpl
add
imul
or
mov
lods
cld
stos
repz
mov
xchg
cmps
pop
push
fst
cmp
xor
es
js
rcl
mov
cmp
enter
dec
fidiv
sbb
dec
mov
sub
pushf
add
xor
mov
shl
mov
jle
cmps
aaa
ins
scas
dec
push
shl
ins
inc
fimul
jecxz
pop
(bad)
sbb
mov
push
add
pushf
mov
(bad)
cdq
pop
or
push
or
mov
int
(bad)
jle
dec
in
jge
xor
shl
rol
add
mov
pop
jmp
xor
ins
ficomp
movs
push
ins
loopne
fiadd
fcomp
add
adc
cld
js
retf
(bad)
sar
cmp
(bad)
retf
cmc
call
inc
sbb
mov
je
or
pop
or
cmp
or
inc
jnp
leave
cld
movs
cld
pop
ret
jnp
mov
shl
xor
xchg
jnp
in
xor
mov
mov
pop
mov
bound
fimul
addr16
xchg
sbb
rol
adc
cld
test
lock
loopne
mov
cdq
xchg
xchg
mov
mov
mov
mov
pop
call
out
xor
push
daa
mov
mov
xchg
mov
out
cmp
out
jl
ror
shl
add
cs
out
out
sub
mov
js
mov
add
neg
cmp
push
mov
clc
icebp
addr16
in
pop
fisub
lahf
inc
mov
pop
mov
sbb
hlt
adc
push
and
arpl
arpl
loope
pop
adc
stos
dec
push
or
jl
push
sbb
cmp
inc
js
or
adc
pop
daa
sub
icebp
xchg
pop
(bad)
push
cmp
(bad)
lods
adc
mov
je
jb
pop
rcl
mov
mov
aad
jae
add
push
sub
hlt
jno
das
repz
xchg
outs
pop
into
xchg
dec
inc
jb
mov
lods
lods
inc
fdiv
xor
popf
pushf
cld
jecxz
loopne
xchg
add
adc
fwait
mov
mov
aad
aam
mov
lods
hlt
shr
dec
ins
inc
dec
sar
loope
daa
lea
cmp
das
loop
shl
fst
pop
fs
mov
test
push
jo
and
adc
scas
ret
in
jb
cmp
mov
dec
or
xchg
(bad)
jge
and
mov
cmp
lock
in
mov
dec
cmps
pop
mov
(bad)
cld
aad
push
je
push
xor
add
stos
fs
inc
aaa
hlt
fld
jno
and
cmp
inc
lock
mov
or
in
outs
mov
pop
shl
dec
pop
addr16
out
into
push
mov
jo
test
xchg
lahf
push
cmp
call
push
jno
mov
push
movs
lock
xor
dec
sbb
mov
inc
adc
add
fstp
pushf
push
jmp
div
mov
xor
iret
and
adc
sti
adc
aaa
xor
inc
das
mov
mov
fadd
adc
fcom
cwde
stos
mov
popf
aad
arpl
jne
or
mov
jnp
pop
shr
ror
loopne
xchg
test
sbb
pop
test
es
lea
add
cs
mov
rol
dec
(bad)
push
ss
les
mov
push
add
lds
cwde
cmp
push
pop
push
test
push
push
or
enter
sub
xchg
sbb
pop
je
push
outs
cld
sbb
adc
inc
mov
imul
adc
pop
and
inc
es
mov
ins
in
jmp
sbb
pushf
or
cmp
retf
gs
nop
mov
mov
pusha
retf
pop
fisttp
test
movs
mov
add
mov
sti
(bad)
add
push
xchg
jge
aam
mov
cmp
clc
or
adc
sbb
adc
push
push
push
je
adc
push
sbb
dec
sub
pop
push
fwait
add
xchg
lock
mov
lds
(bad)
loopne
pop
sar
adc
(bad)
les
inc
mov
mov
jmp
xlat
dec
add
movs
inc
adc
cmp
xchg
sbb
int
fisttp
mov
push
cwde
xor
push
dec
les
push
test
mov
push
mov
pop
sbb
pushf
sub
mov
adc
int3
in
int3
ror
test
(bad)
mov
push
mov
mov
retf
and
nop
adc
rcl
mov
mov
mov
pusha
dec
ret
mov
(bad)
mov
mov
xchg
xchg
dec
retf
loope
jmp
aad
sbb
and
push
ret
xor
cmps
push
lahf
jmp
inc
dec
inc
(bad)
jle
loopne
push
out
iret
out
mov
(bad)
(bad)
mov
cmps
sbb
out
das
and
push
pusha
cmp
pop
mov
add
fmul
pusha
dec
sbb
jge
cmp
mov
add
mov
rcl
sbb
fnsave
adc
dec
push
inc
fwait
dec
test
jl
in
xor
pusha
push
cmp
sbb
adc
xchg
dec
popa
(bad)
out
or
inc
(bad)
inc
pushf
fsub
push
fisub
jmp
pop
outs
push
cmp
mov
rcr
ds
(bad)
loop
test
add
mov
xor
jnp
mov
push
sbb
ins
out
push
inc
and
and
(bad)
jge
loop
popf
push
repnz
xor
aas
dec
mov
int
add
outs
ja
ins
fwait
clc
inc
in
or
aam
push
and
jle
pop
imul
ja
fldenv
fstp
mov
mov
fcmove
sub
fnstsw
shr
pop
add
pop
sbb
clc
push
(bad)
(bad)
inc
dec
int
pushf
jecxz
fstp
pop
fwait
sub
inc
out
pop
rcl
popf
push
pop
gs
xchg
mov
(bad)
es
int
leave
xchg
sbb
inc
shl
scas
loopne
push
arpl
dec
pop
xchg
not
sbb
mov
sbb
xchg
stos
(bad)
cwde
and
jmp
mov
push
aad
rcr
mov
repnz
jle
scas
int3
mov
sub
add
add
jge
das
mov
dec
sti
xchg
bound
aad
adc
lods
dec
push
dec
xchg
(bad)
jmp
jmp
ficom
cmp
ins
dec
cmp
dec
pop
ficom
mov
pop
jmp
lock
cmps
push
not
adc
in
gs
js
or
mov
in
imul
test
pop
int3
out
push
adc
pop
ret
push
mov
push
push
idiv
mov
cmp
jge
out
test
pop
std
mov
mov
jmp
mov
dec
aad
ja
rcr
mov
dec
jno
les
xchg
sub
inc
mov
inc
mov
ins
sub
dec
inc
adc
test
ss
xchg
aaa
cs
sbb
xchg
rcl
mov
and
outs
push
icebp
shl
(bad)
mul
cmp
jl
dec
mov
or
std
mov
jp
mov
jne
pop
xchg
sbb
push
sbb
ror
inc
xchg
jl
cmp
pop
dec
fidiv
pop
or
test
jge
(bad)
aad
pop
jne
jno
pushf
push
xchg
adc
fcmovnbe
int3
pushf
pop
adc
fs
dec
or
ret
inc
js
ins
in
out
ficomp
(bad)
xor
in
mov
adc
pop
shl
and
out
sub
sub
dec
fistp
fiadd
test
mov
push
cdq
cmps
and
dec
dec
out
ror
and
inc
mov
ds
mov
mov
jmp
inc
fstp
adc
pop
out
jno
adc
mov
cmp
mov
add
dec
nop
jmp
mov
fidiv
push
xor
and
push
or
repz
jb
jae
dec
(bad)
arpl
ds
adc
aam
sbb
mov
(bad)
jmp
and
mov
out
mov
or
pop
(bad)
test
int
cs
push
mov
lahf
xchg
dec
js
cmp
ret
pop
retf
mov
sub
out
(bad)
ret
nop
ror
dec
fcom
inc
jge
adc
out
dec
or
popa
cwde
mov
pop
mov
mov
stc
add
mov
repnz
mov
sub
sub
cmp
shl
das
dec
lea
mov
shl
dec
mov
dec
mov
in
daa
push
lods
jbe
mov
sub
inc
ror
std
mov
xor
leave
hlt
xchg
movs
mov
int3
jp
out
in
push
cs
sbb
sub
pmullw
and
mul
ss
shl
inc
mov
add
pop
imul
xchg
push
push
(bad)
xor
pop
xchg
inc
mov
ror
adc
pop
xchg
scas
pop
mov
push
int3
xchg
or
dec
ins
push
test
mov
ja
mov
adc
pop
sub
out
pop
lahf
test
xorps
add
inc
mov
enter
sti
push
dec
mov
pusha
inc
push
das
pop
add
btc
push
sbb
lock
dec
and
rol
pop
or
inc
arpl
movs
(bad)
pop
and
fdiv
cmp
loope
pop
neg
dec
(bad)
aaa
inc
test
std
mov
inc
dec
push
(bad)
sbb
scas
mov
sub
xor
arpl
mov
rol
addr16
gs
sbb
sbb
and
push
or
and
mov
dec
scas
icebp
xor
jp
js
xlat
cmp
mov
push
popa
xchg
pusha
push
in
mov
test
add
dec
int3
addr16
or
pop
int3
lahf
jmp
add
jo
fsubr
pop
inc
dec
pop
test
fmul
xor
pop
adc
or
pop
sar
fild
mov
push
jnp
ret
sbb
and
pop
les
inc
cmp
test
push
cli
mov
mov
out
mov
jg
js
and
dec
call
loopne
mov
pushf
or
stos
loope
out
dec
mov
test
or
clc
daa
push
dec
inc
pop
pop
push
cmp
aas
pop
in
ror
data16
loop
fcom
div
dec
out
jle
sar
lock
cdq
adc
jge
sub
dec
ins
ret
stos
cs
xchg
xchg
push
adc
sbb
lock
gs
sub
xor
(bad)
sbb
ss
add
jle
cmp
or
xlat
dec
js
gs
pop
pop
sbb
xor
push
jo
push
jmp
popa
push
fistp
xchg
adc
xchg
sub
fbstp
mov
psadbw
sbb
pop
mov
rol
ret
ja
in
mov
hlt
iret
neg
adc
jno
add
dec
and
mov
dec
pop
stos
adc
test
daa
sbb
lods
sti
push
retf
retf
enter
ror
movs
pop
cmp
mov
ins
shl
into
dec
mov
adc
push
pop
imul
mov
ror
mov
ret
das
push
sbb
pop
add
mul
inc
es
ret
and
mov
lods
sar
add
lock
movs
imul
or
sub
sub
pop
push
adc
push
sahf
movs
xchg
adc
xchg
push
mov
stos
(bad)
clc
xchg
outs
cld
add
(bad)
leave
ins
mov
popf
jo
(bad)
jmp
stos
dec
sub
dec
xchg
add
gs
jmp
lods
push
inc
ret
pop
rep
xchg
in
cmps
fs
mov
push
xchg
cmp
xchg
in
lods
arpl
inc
add
jg
cmc
loop
jmp
xchg
test
fnsave
pop
sub
push
aas
scas
and
sub
in
sar
pop
dec
mov
sbb
sbb
jecxz
pop
mov
cmc
not
sub
out
mov
imul
out
aad
xor
js
jmp
add
add
inc
ss
sbb
mov
(bad)
push
ret
jp
hlt
add
pop
ror
ins
mov
mov
xchg
aaa
push
dec
xchg
ret
mov
ins
xchg
fcomp
jg
xor
(bad)
(bad)
jmp
mov
mov
dec
in
mov
imul
shr
mov
jbe
pop
scas
pop
test
cwde
push
push
jb
dec
fisttp
jp
in
pop
jbe
add
dec
push
aam
cmp
jmp
sub
das
int
cmp
ins
ror
cmp
mov
jmp
jle
sub
gs
int3
adc
daa
jnp
dec
call
sbb
cli
mov
popa
ins
and
sbb
(bad)
(bad)
push
fcomp
(bad)
push
fmul
ss
retf
inc
jl
mov
in
jmp
int
and
shr
pop
jnp
idiv
mov
mov
pushf
dec
adc
add
cs
shl
int3
cli
sti
xchg
ret
ror
jb
push
loope
mov
mov
sar
sbb
int
dec
iret
push
shl
push
xor
or
add
mov
fs
(bad)
lods
je
mov
cli
xchg
(bad)
daa
cmp
int3
stos
mov
mov
fnstsw
loopne
(bad)
pop
pop
xchg
test
nop
jo
sub
es
js
cdq
mov
outs
fldcw
jge
or
xchg
inc
es
add
(bad)
outs
mov
pop
je
mov
sahf
mov
stos
xchg
test
pop
loope
pop
pop
pop
or
rcl
inc
dec
and
ret
add
rcl
lock
(bad)
(bad)
push
mul
aam
stos
jge
and
daa
cmps
push
in
mov
push
arpl
or
jg
xlat
push
pop
push
fcomp
(bad)
cmc
aaa
xchg
jge
iret
out
out
sbb
outs
dec
jge
dec
rcl
psllq
nop
xlat
mov
int3
test
sub
mov
cmps
in
jle
imul
xchg
push
add
mov
jp
jne
dec
adc
mov
mov
sbb
push
enterw
mov
sbb
xchg
movs
mov
add
adc
mov
push
sub
adc
mov
sbb
rol
push
loope
xchg
rcl
jge
and
pop
sub
mov
fdiv
(bad)
jmp
into
(bad)
nop
ret
int3
sub
mov
add
shl
(bad)
repnz
mov
push
push
pop
retf
push
pop
aam
iret
add
and
inc
aaa
loopne
fldcw
pop
pop
mov
ins
xor
icebp
sub
or
fisubr
push
mov
ins
jno
mov
int3
addr16
dec
dec
mov
cld
pop
jle
daa
add
(bad)
cli
sbb
mov
pop
jp
or
lock
push
sub
jmp
movs
and
mov
adc
jp
mov
je
mov
dec
test
lds
mov
and
aaa
inc
gs
arpl
push
(bad)
dec
sbb
dec
jmp
pushf
push
push
jnp
pop
ret
cmp
fsub
push
pop
ret
dec
xchg
pop
dec
fwait
aas
(bad)
jmp
jae
je
ins
pusha
pop
push
mov
dec
jbe
mov
addr16
fwait
es
push
mov
and
sti
cmp
mov
xor
inc
pop
mov
inc
jbe
int3
loopne
pop
sar
pop
pop
dec
jno
cld
or
sbb
mov
icebp
mov
cld
cld
jp
clc
push
out
jmp
add
add
daa
(bad)
test
inc
test
les
rcr
jae
(bad)
and
dec
lods
data16
cld
sbb
cwde
call
das
lock
aaa
stc
pop
ror
out
xchg
and
dec
jle
les
or
out
aad
ins
jle
xor
adc
mov
mov
add
fsubr
not
pop
sbb
cmps
xor
imul
(bad)
adc
mov
mov
inc
dec
sub
add
std
movs
gs
arpl
push
pop
jmp
jecxz
push
mov
xchg
cmp
das
push
or
les
or
cmc
xor
inc
mov
scas
es
xor
cmps
and
mov
(bad)
xchg
pop
loopne
and
pop
cld
mov
cmp
and
add
mov
dec
push
pop
ds
jmp
and
sbb
sbb
pop
es
sbb
in
(bad)
(bad)
and
inc
inc
pop
mov
dec
fsub
pand
push
or
movs
sub
repnz
jnp
outs
lods
and
xor
arpl
jnp
push
ds
out
inc
pop
mov
mov
adc
cmp
mov
aaa
xchg
out
dec
dec
movs
dec
mov
mov
push
aas
cwde
mov
inc
in
les
jo
jmp
cli
or
sub
xchg
inc
sar
cmps
pop
sbb
sub
fst
hlt
lahf
jl
cmp
cmp
mov
das
fs
out
or
clc
icebp
data16
call
xlat
sbb
push
dec
div
inc
pop
sbb
bnd
xchg
cdq
rcr
mov
pop
jbe
push
cwde
repz
xchg
sti
pop
and
xchg
push
popa
and
rcl
mov
ret
add
mov
xor
jl
adc
enter
mov
nop
aas
cmp
repnz
inc
mov
das
pop
and
loopne
rcr
dec
mov
imul
cld
mov
mov
mov
mov
add
mov
push
in
adc
enter
mov
nop
mov
pop
aas
sbb
fstp
jl
jae
pop
stos
retf
in
xchg
push
adc
adc
dec
imul
loope
repz
shl
mov
rcl
push
lock
in
imul
sbb
jmp
les
lods
aas
jl
sub
mov
int
fdiv
(bad)
mov
fcom
cmp
or
jo
lahf
or
les
(bad)
outs
dec
mov
mov
mov
jns
(bad)
fld
inc
ror
xor
fcom
loop
xlat
sub
lea
movs
sbb
mov
xor
xchg
sub
aam
push
fucomip
inc
mov
mov
jae
xchg
cwde
xor
push
int3
stc
rcr
(bad)
xchg
pop
les
or
imul
push
add
xor
sub
jae
cmp
xor
lds
mov
sbb
adc
cld
prefetch
mov
sub
xor
in
push
cmps
xor
jl
cs
dec
pop
loop
pop
mov
jbe
lock
shl
mov
mov
push
loopne
stos
neg
xchg
sub
loope
int3
ins
pop
push
or
les
mov
and
rcl
dec
xrelease
cmp
cmp
ss
outs
mov
stc
stos
xor
push
push
jo
mov
pop
adc
out
xchg
inc
fdiv
pop
add
jp
test
jl
loopne
aam
adc
sbb
retf
mov
lods
mov
or
int3
fisubr
push
jb
dec
mov
(bad)
fwait
pusha
lods
add
pushf
xchg
jnp
mov
(bad)
cmp
repz
(bad)
add
int3
mov
xchg
xor
in
sub
sub
dec
rcl
bswap
xchg
loopne
push
btr
rcr
fld
(bad)
pop
inc
pop
xor
les
repz
push
pushf
inc
push
data16
dec
sub
jmp
push
jge
or
mov
jne
cli
inc
mov
mov
adc
xor
inc
xchg
dec
cwde
sbb
in
xchg
push
lds
jmp
fld
mov
pop
lea
mov
xor
mov
push
test
addr16
test
fmul
mov
add
jecxz
mov
imul
add
inc
lock
mov
and
mov
jge
sub
scas
add
sub
add
fadd
mov
push
push
arpl
mov
ret
fwait
lahf
add
cmp
int
call
cmp
out
mov
pop
push
jbe
or
fsubr
loopne
outs
test
xchg
sar
mov
xchg
aad
add
add
dec
cmp
dec
pusha
inc
loopne
and
push
(bad)
dec
icebp
bound
imul
add
sub
cmps
gs
fidivr
pop
test
dec
gs
fdiv
add
shl
lock
dec
and
jno
inc
(bad)
jmp
mov
sbb
in
add
xchg
push
dec
push
pusha
aaa
sub
jmp
xchg
push
dec
jg
mov
xor
out
sub
shl
dec
sbb
enter
mov
xchg
lahf
ins
les
cmp
not
jno
mov
or
fldcw
out
imul
xor
addr16
in
repz
mov
pop
mov
iret
dec
adc
jecxz
call
sbb
inc
push
push
dec
fisubr
repz
ss
shl
(bad)
push
jge
adc
cdq
add
mov
aad
pop
mov
mov
add
xchg
jno
inc
neg
cmps
enter
idiv
adc
jns
inc
in
ja
mov
or
enter
sbb
sbb
mov
in
mov
or
xlat
xor
cli
sbb
mov
jae
shl
xchg
mov
adc
(bad)
std
push
inc
pop
mov
cmp
mov
xchg
jecxz
mov
fidiv
iret
cmovl
or
push
pop
daa
fstp
idiv
dec
cld
adc
cld
rcr
div
test
dec
add
int3
cmp
inc
dec
mov
push
arpl
pop
mov
and
inc
test
or
test
addr16
addr16
add
mov
mov
imul
shl
fidivr
mov
mov
pop
mov
inc
jne
xor
push
jmp
fidiv
push
dec
sbb
shl
scas
push
mov
inc
adc
rol
sbb
mov
cld
fs
inc
inc
sub
shl
jae
mov
sar
mov
cmp
sub
or
adc
pop
push
(bad)
pop
push
ret
and
sbb
mov
sahf
push
and
mov
ret
mov
pop
add
cmp
xchg
push
int3
ja
shl
mov
test
in
and
shl
js
mov
jne
(bad)
inc
adc
xchg
stos
pop
adc
push
lock
movs
mov
push
inc
add
clc
sub
pop
lods
aaa
jnp
ds
outs
xor
fisub
dec
jp
jne
xor
jg
push
not
imul
mov
(bad)
adc
cmps
sub
and
jge
dec
cmp
aaa
xor
and
lods
mov
push
inc
xor
loope
push
pop
mov
outs
xchg
es
sbb
pop
out
xchg
jb
leave
leave
cmp
lock
ins
shr
jbe
jle
mov
pop
ror
inc
mov
add
icebp
leave
mov
(bad)
pop
or
or
push
push
lea
in
xor
cmp
mov
mov
cmp
int
or
xor
cmc
movs
jp
pop
stos
or
and
cs
pop
add
aam
clc
int3
jecxz
xor
aaa
inc
scas
aam
aas
repz
sub
push
int
gs
pop
push
mov
test
pop
add
cmp
adc
out
sbb
push
loopne
daa
cmps
fidiv
cmp
sub
add
ret
punpckhdq
mov
nop
enter
in
jecxz
ja
pushf
cli
mov
iret
push
and
xchg
fbstp
xor
push
jge
(bad)
fisttp
xchg
rcl
add
adc
cmp
fwait
gs
jbe
loop
scas
mov
imul
jle
aad
xchg
popf
rol
not
cmps
movs
sbb
out
sub
mov
cmp
pushf
jmp
sahf
mov
(bad)
dec
test
push
in
call
test
icebp
mov
pop
in
jbe
shr
dec
fucom
mov
(bad)
scas
mov
pushf
xchg
outs
pop
nop
or
mov
(bad)
ficomp
jb
mov
cmp
test
test
rcr
dec
pop
clc
repz
mov
sbb
stc
push
aad
dec
cmp
push
data16
mov
add
arpl
pop
rcr
xchg
jae
ins
inc
aas
inc
dec
cwde
pop
xchg
ins
push
mov
mov
mov
dec
add
jg
outs
pop
mov
and
ins
ds
mov
sbb
pop
cmp
dec
or
sub
push
out
ds
add
push
fwait
add
xchg
xchg
jne
pop
fld
jo
jno
mov
not
fcom
test
cwde
fst
and
mov
out
jb
xchg
retf
not
sub
mov
adc
jb
test
loop
mov
int
pop
fpatan
push
shl
dec
mov
jnp
lds
sbb
aad
and
sar
aad
mov
jl
mov
inc
loopne
stos
stos
rcr
xchg
test
dec
sti
push
mov
retf
mov
and
gs
dec
(bad)
ficomp
cdq
push
int3
ja
cmp
shr
or
es
jmp
mov
inc
(bad)
xor
out
push
shl
enter
in
xor
mov
mov
jl
xchg
add
stc
push
adc
dec
adc
pop
aam
mov
mov
xor
dec
cwde
sbb
mov
xor
sbb
dec
(bad)
mov
jp
or
pop
dec
fidiv
lea
jecxz
mov
fadd
aam
or
lahf
repz
add
xchg
test
adc
cmp
ins
jge
cmp
neg
mov
mov
and
push
lahf
sub
neg
dec
inc
fbstp
pop
inc
xor
dec
test
xchg
mov
adc
sub
xchg
rcl
sub
addr16
cmp
fst
cmp
in
inc
rol
mov
pop
mov
(bad)
leave
dec
cmp
ja
fwait
push
or
pop
lea
push
xor
sbb
cmp
call
mov
pop
stos
mov
scas
sub
ins
scas
(bad)
mov
(bad)
sti
push
pop
cmp
in
inc
jl
or
aad
imul
test
xlat
mov
movs
push
dec
retf
lahf
fstp
jge
push
add
dec
or
and
ja
out
mov
add
mov
jecxz
mov
inc
push
lahf
mov
or
inc
bound
dec
jecxz
lea
fcomp
adc
ja
popa
mov
adc
mov
xchg
rol
dec
(bad)
push
mov
mov
lock
dec
dec
daa
pop
mov
pop
outs
aaa
jge
and
lods
outs
dec
mov
pop
jno
(bad)
mov
sbb
or
std
ins
(bad)
js
sar
lahf
enter
pop
jne
les
pushf
add
xlat
adc
(bad)
xor
adc
shl
(bad)
sti
(bad)
sub
pop
daa
mov
hlt
mov
cmp
aas
and
cmp
xor
and
loop
mov
ins
xchg
fwait
pop
sub
xor
pushf
loop
(bad)
pop
scas
(bad)
xor
xchg
xchg
and
cmp
dec
mov
push
pop
adc
mov
scas
pop
jnp
loop
stc
pop
dec
pop
jno
rol
push
ins
movs
add
pextrw
add
loopne
pusha
xlat
inc
xor
sbb
test
jne
inc
jge
xchg
mov
mov
std
ja
fsub
or
ror
sti
ror
and
xor
pop
lock
ficomp
ret
jl
sub
push
pushf
ds
cs
add
lea
mov
xor
call
pop
dec
pushf
inc
cmp
adc
cld
arpl
sbb
out
xor
push
inc
adc
hlt
and
xchg
pop
int
clc
aad
retf
xor
xor
dec
iret
loopne
pop
stos
pop
mov
jne
inc
mov
xchg
sbb
jmp
aaa
rcl
mov
shl
pushf
jb
or
in
aam
pushf
mov
push
jle
test
xchg
(bad)
adc
js
push
inc
aaa
cmp
clc
push
and
cmp
push
repnz
call
sbb
mov
iret
out
jle
push
aaa
pop
mov
shl
mul
shl
sbb
mov
pop
add
sub
xchg
and
int3
mov
add
(bad)
lea
dec
test
xor
mov
sub
into
div
and
mov
repz
ret
xchg
add
mov
jae
not
test
push
clc
out
retf
(bad)
fld
inc
ret
jp
sub
sbb
fs
jge
jne
sbb
jmp
add
cmp
cld
mov
(bad)
sub
push
sub
jae
mov
(bad)
mov
cmp
xchg
mov
adc
(bad)
fstp
push
idiv
sub
lahf
fisub
jnp
push
pop
test
sbb
vpaddsw
gs
ins
dec
fidiv
sbb
in
ss
lea
clc
div
inc
clc
mov
pop
xor
and
cld
xor
and
xor
out
mov
or
jns
fwait
pop
jo
out
mov
adc
inc
out
jmp
add
pop
pop
into
retf
xlat
sbb
cmp
cdq
repnz
xlat
sub
retf
add
int
pop
sbb
stos
pop
inc
scas
pushf
mov
cmp
cld
vmread
clc
xchg
lods
out
sub
push
in
bound
nop
and
iret
mov
xchg
add
cmp
sub
xchg
dec
xchg
adc
adc
push
mov
dec
push
dec
test
cmc
lods
mov
push
dec
adc
add
pop
adc
test
test
pop
pop
add
mov
mov
out
pop
and
dec
hlt
mov
push
inc
mov
nop
mov
adc
std
or
or
push
shl
ret
hlt
mul
lahf
pop
push
out
mov
sar
xchg
je
mov
xchg
sub
jb
pushf
pop
dec
sub
adc
inc
pop
dec
cmp
sub
std
inc
mov
in
sbb
sbb
xchg
xchg
or
dec
les
push
sbb
jmp
(bad)
jp
scas
mov
cmc
pop
mov
and
xlat
fisttp
xor
jge
xchg
mov
mov
lea
xchg
push
inc
xor
push
dec
les
cmp
inc
lahf
cdq
jp
(bad)
(bad)
fdecstp
daa
ret
add
push
sbb
cmp
outs
imul
lea
xchg
mov
adc
mov
pop
jl
arpl
data16
adc
push
leave
push
pop
(bad)
fistp
jnp
mov
call
inc
mov
dec
inc
xchg
pop
mov
rol
pop
lods
cmp
pop
enter
sti
cmps
rcr
jmp
scas
mov
push
pop
int3
dec
sar
scas
nop
int
sbb
xchg
call
outs
bound
neg
pushf
and
mov
mov
pop
rcl
not
jp
dec
pop
mov
std
jg
mov
out
je
icebp
mov
sub
addr16
jecxz
out
pop
outs
xor
neg
cmp
push
fdivr
sub
xchg
xor
mov
fld
xor
pop
jmp
and
sub
cs
sahf
xchg
sbb
push
push
jmp
and
fcom
aas
mov
idiv
or
sub
xchg
inc
fcomp
xchg
fs
adc
push
pop
pop
mov
mov
lahf
arpl
pop
sub
clc
sbb
dec
ds
push
shr
sar
mov
xor
aam
add
mov
pop
and
shl
push
xchg
and
les
mov
add
xchg
inc
dec
mov
leave
cmc
out
mov
(bad)
push
mov
add
mov
push
xchg
and
pop
or
or
xchg
inc
lods
sub
movs
dec
xchg
lods
aaa
push
pop
pop
scas
fs
push
xchg
push
mov
shl
mov
arpl
ret
popf
in
pop
xor
out
daa
std
mov
sub
push
shl
clc
ins
sbb
test
sbb
lea
fcmovb
push
outs
sti
gs
adc
popf
or
or
pop
fld
out
sbb
lods
mov
push
dec
push
(bad)
dec
sbb
jmp
jmp
inc
mov
dec
stc
dec
test
in
dec
test
inc
and
push
cwde
loopne
fsub
aam
adc
pop
fs
nop
push
ja
test
push
call
xchg
xchg
pop
inc
adc
jp
cdq
jl
(bad)
scas
ins
jae
loop
imul
jns
ret
cmp
dec
xchg
sbb
mov
out
jbe
jae
fsub
rcl
or
arpl
imul
xchg
je
mov
mov
and
aaa
sbb
mov
jmp
cmps
aaa
mov
in
pushf
dec
in
loopne
sbb
(bad)
pop
push
dec
inc
and
push
shl
in
fstp
pop
test
fsubr
std
lods
in
cmc
push
dec
cmps
pop
pushf
pop
out
lods
xor
(bad)
dec
mov
fsubrp
xchg
retf
aad
repz
mov
cmps
nop
mov
jmp
(bad)
and
ds
sti
cmp
mov
fwait
mov
call
lds
dec
jmp
adc
push
cwde
cmps
sub
loop
dec
cs
pop
inc
push
leave
jmp
(bad)
cmp
pop
gs
cmp
pop
mov
rcr
cwde
cdq
loopne
dec
inc
pop
popa
dec
pop
test
mov
icebp
adc
xlat
push
cdq
clc
xchg
icebp
or
stos
adc
xlat
ret
rol
push
in
stos
sub
mov
jmp
mov
push
pop
push
rcr
out
test
adc
adc
sbb
push
xchg
jg
dec
lea
lods
mov
mov
ret
add
push
pop
jae
shr
cmps
dec
repnz
and
aas
mov
es
and
mov
(bad)
in
fld
(bad)
int
push
ja
xchg
cmp
sahf
sbb
push
dec
cli
cmp
push
pop
cli
push
push
(bad)
stos
(bad)
xor
and
jecxz
int3
mov
inc
cmp
xor
or
div
adc
adc
jo
fisub
push
aam
(bad)
push
mov
les
imul
pop
xor
mov
pop
lea
imul
push
push
jl
addr16
adc
inc
or
loop
xlat
enter
call
push
xor
fmul
rcl
cmp
aaa
iret
int
fwait
(bad)
cmp
repz
xor
aad
mov
push
out
arpl
push
out
and
mov
pop
nop
add
aad
mov
pushf
jge
dec
(bad)
jle
mov
out
cdq
fwait
push
jp
or
leave
push
mov
xchg
jg
sbb
lods
sub
sub
std
dec
pop
pop
dec
popf
lock
jle
jne
addr16
mov
jns
sub
aaa
push
fwait
mov
sahf
call
and
add
jnp
sbb
jecxz
test
xchg
sub
mov
xchg
popa
push
mov
mov
ins
lock
in
popf
test
jmp
les
push
push
mov
dec
inc
movs
sbb
lahf
(bad)
out
stc
out
and
call
shl
mov
clc
imul
aas
pop
cmp
and
rcl
mov
loope
push
mov
es
dec
push
sbb
xor
sbb
test
or
add
add
pusha
adc
aaa
mov
dec
jmp
scas
pop
test
gs
lds
cmc
jmp
sub
icebp
pop
sub
or
int3
mov
xor
inc
dec
pop
inc
fs
xlat
repz
adc
push
jge
push
bswap
enter
mov
lds
out
and
mov
mov
xchg
movzx
inc
dec
lods
and
cmps
mov
pop
mov
(bad)
(bad)
push
mov
mov
fist
mov
loop
iret
sbb
imul
pop
setne
lods
sbb
jb
aam
loope
xchg
fwait
dec
icebp
adc
push
pop
popf
or
mov
aaa
mov
mov
test
ins
gs
sbb
stc
ja
mov
enter
je
fimul
mov
pop
pop
xchg
cwde
dec
xor
pop
test
cmp
rol
push
sub
div
pop
pop
dec
jmp
les
push
loop
aam
xor
adc
pop
cmp
lods
in
iret
pop
jo
cdq
dec
popa
xor
or
aad
aas
xor
xchg
repnz
push
in
jns
sub
mov
int3
and
ins
mul
jmp
push
sbb
pushf
pop
pop
mov
and
jp
dec
cli
(bad)
sar
dec
fnstsw
enter
in
sub
push
jae
rcr
xor
push
and
loope
pop
mov
pop
test
outs
pop
(bad)
ja
sbb
enter
dec
ficomp
and
mov
call
push
into
repz
push
push
movs
dec
leave
and
dec
dec
mov
retf
div
xchg
push
addr16
pushf
int
movs
int3
dec
aas
jae
jg
movs
xchg
sbb
cld
rol
add
hlt
(bad)
(bad)
dec
push
pusha
mov
sbb
mov
sti
mov
or
int3
add
es
xor
add
push
or
ins
mov
sbb
xor
mov
pop
sbb
aam
hlt
test
mov
sub
fstp
cmp
add
push
mov
hlt
mov
mov
and
xchg
je
adc
mov
loopne
test
xchg
pop
inc
mov
shl
ins
dec
cmp
push
arpl
pop
je
mov
loop
test
pop
mov
mov
or
iret
xchg
clc
imul
mov
cmp
aam
imul
pop
ja
data16
movs
jl
add
mov
xlat
cmps
fmul
mov
push
push
cmp
fisub
leave
and
mov
inc
pop
sub
cmp
xor
xchg
inc
mov
dec
scas
cmp
loopne
lock
pop
shl
jle
(bad)
aad
sti
pop
cdq
cmc
mov
push
adc
jl
in
cld
out
add
std
pop
adc
pop
xor
shl
dec
out
jle
jnp
aam
std
cdq
aaa
mov
sub
lahf
and
push
cmc
mov
lock
enter
(bad)
cld
dec
fcomp
in
inc
arpl
sbb
sbb
xchg
retf
ja
aam
rcl
xchg
into
pushf
xchg
cmps
in
push
and
pop
shl
jb
aam
push
sub
adc
loopne
maskmovq
imul
sbb
adc
or
lock
cmp
push
outs
test
jnp
pop
cmp
jecxz
and
jecxz
mov
gs
mov
jne
xor
dec
aam
loopne
ja
jl
(bad)
push
imul
xor
arpl
imul
(bad)
and
test
mov
jle
jmp
or
(bad)
call
test
scas
test
(bad)
pusha
mov
xor
mov
xchg
sahf
(bad)
cmps
pop
in
and
mov
jmp
adc
(bad)
xchg
in
jae
pop
mov
push
dec
mov
int
push
(bad)
cdq
push
inc
mov
lods
pop
pop
cmp
(bad)
mov
aad
cmp
push
aaa
(bad)
mov
cmp
in
and
dec
cs
inc
mov
xchg
push
loop
(bad)
sub
dec
test
retf
jmp
or
adc
mov
fadd
push
imul
xchg
ins
xchg
pop
daa
dec
or
daa
mov
pop
jg
call
dec
and
(bad)
cmp
mul
mov
adc
stc
xchg
pop
lock
pushf
lock
int
add
(bad)
repz
ficomp
ret
mov
mov
(bad)
push
sbb
sbb
cmp
lock
mov
dec
dec
or
push
jg
mov
shl
sub
adc
andps
popf
popa
mov
pop
mov
sbb
cmps
sub
xchg
adc
retf
pop
jne
mov
lahf
xor
lods
ins
cmp
mov
test
sbb
mov
dec
in
(bad)
and
jnp
js
fsub
rcl
(bad)
push
cmp
test
imul
outs
fcomp
pusha
or
aas
test
daa
stos
dec
jmp
xlat
or
data16
mov
cmp
iret
mov
les
(bad)
je
jge
aaa
push
add
fidiv
sar
push
add
add
jo
xchg
mul
add
fmul
scas
sti
dec
call
imul
and
or
idiv
pop
cmp
xlat
dec
pop
adc
add
push
imul
loope
adc
push
mov
sbb
add
sub
push
repz
(bad)
sub
fdiv
arpl
sbb
jecxz
mov
jae
rol
daa
jno
fwait
lock
xchg
enter
inc
leave
imul
loope
jnp
(bad)
std
int3
cmp
inc
stos
jmp
xor
jmp
pop
pop
cmc
dec
mov
pop
hlt
(bad)
xchg
rcr
mov
sub
fwait
jmp
pop
dec
(bad)
jo
mul
push
(bad)
mov
outs
(bad)
xchg
cmc
icebp
fcom
or
out
jnp
jle
jb
daa
iret
arpl
sbb
push
mov
(bad)
and
dec
xchg
jne
dec
mov
test
rcl
cld
in
adc
nop
ja
and
test
xor
push
(bad)
cmp
push
push
enter
mov
xchg
dec
shl
pop
sub
push
adc
pop
not
inc
jmp
mov
mov
mov
mov
mov
xor
and
dec
xchg
sbb
ss
sub
imul
sbb
leave
pop
jmp
ja
pop
dec
or
xchg
jl
(bad)
jne
enter
cdq
mov
scas
dec
popf
mov
jmp
mov
push
add
inc
add
pop
inc
nop
jecxz
mov
adc
mov
cmp
mov
sahf
adc
add
mov
add
push
test
add
test
inc
adc
inc
not
dec
fidivr
push
lock
sbb
nop
pop
push
xor
loopne
push
mov
in
leave
pop
daa
dec
stos
sub
or
push
jg
mov
les
adc
mov
push
gs
rcl
jmp
sub
out
cmp
add
mov
xchg
ret
cli
push
or
scas
(bad)
shl
retf
mov
iret
fwait
dec
bound
xor
mov
pop
mov
ret
mov
aaa
icebp
and
sub
mov
jae
xchg
dec
or
jns
outs
sbb
imul
inc
cs
sbb
ja
in
jne
mov
xor
adc
fild
mov
ins
out
enter
ds
movs
pop
pop
push
lods
ins
pushf
sub
push
inc
xchg
xchg
mov
inc
pop
enter
out
and
xchg
fist
xor
xchg
or
add
push
aam
arpl
scas
jnp
das
popa
fisttp
dec
and
sbb
adc
ret
fcomp
pop
retf
les
nop
scas
xchg
adc
sbb
sub
inc
in
xor
xlat
jle
out
into
inc
test
push
stos
mov
push
jge
rol
cmp
push
and
inc
scas
xlat
test
jns
xchg
xor
push
je
push
fs
ds
jnp
push
and
ret
dec
xchg
or
aad
(bad)
fsub
and
mov
fisttp
lahf
sbb
lods
jae
dec
sbb
(bad)
sbb
jg
clc
cmp
(bad)
sbb
and
dec
push
ret
ins
xchg
and
mov
or
mov
sub
mov
out
push
adc
(bad)
adc
imul
mov
sub
jmp
mov
pushf
movs
pop
mov
pushf
xlat
inc
cld
mov
popf
and
mov
fidiv
xor
dec
out
ins
sbb
addr16
mov
in
jg
add
mov
js
sub
lods
mov
mov
jp
cmp
xchg
pop
popa
retf
pop
ror
mov
sub
ja
xchg
clc
loopne
loope
iret
sbb
push
pushf
adc
cdq
xor
mov
sub
stos
ins
test
outs
out
loopne
push
mov
add
sbb
push
cmp
(bad)
pop
dec
cmc
ss
jle
sub
movs
xchg
imul
int3
or
mov
and
ja
dec
add
rol
out
mov
pusha
mov
pop
test
pop
cmp
sbb
in
out
(bad)
ficomp
jmp
sbb
fistp
sbb
arpl
stos
in
xchg
fcomp
cmp
loope
adc
cdq
(bad)
xor
xchg
inc
sti
rcr
mov
int3
repnz
xor
jno
gs
dec
(bad)
in
sbb
ja
ror
mov
ror
ins
dec
add
popf
inc
jecxz
jae
sub
jbe
dec
xchg
test
adc
add
push
fsub
addr16
jae
and
loopne
mov
repz
mov
rcr
jae
leave
cmp
pop
stos
aam
pop
add
xchg
jmp
jl
adc
cmp
pop
pop
sub
mov
mov
dec
addr16
imul
mov
push
ds
pop
push
or
int
mov
hlt
jg
or
sbb
mov
popf
sbb
inc
sub
mov
mov
push
out
cmp
add
mov
enter
out
pop
test
popf
jmp
daa
pop
dec
retf
mov
not
inc
dec
jo
jge
out
aaa
std
sahf
cmps
aad
dec
fiadd
popa
sub
inc
out
xor
or
jg
mov
mov
jb
(bad)
jnp
nop
mov
mov
(bad)
push
fdivr
pop
clc
icebp
mov
xlat
int3
push
imul
or
xlat
lock
aad
in
xchg
popf
sti
outs
je
sbb
in
test
mov
inc
mov
ja
sbb
push
cld
cld
xlat
jne
adc
in
sbb
mov
ins
ja
pop
pusha
sti
lds
pop
sub
dec
ja
push
popa
fist
and
or
ins
ja
pushf
dec
out
xor
inc
sub
push
outs
das
fisttp
rol
jae
sub
int3
inc
ds
push
and
js
dec
(bad)
inc
xchg
jmp
ss
stc
or
(bad)
imul
call
pop
add
(bad)
out
enter
imul
push
sbb
sub
mov
mov
test
mov
cmp
and
add
cmc
or
jl
int
ins
fcmove
imul
add
pop
stos
cmp
inc
cs
aad
test
ret
pop
jge
call
or
dec
loopne
cmp
fcom
cmp
cli
adc
push
ja
aas
cmp
clc
sbb
call
xlat
dec
push
icebp
xor
cwde
add
ss
fldl2t
imul
mov
jnp
adc
ins
xor
int
push
aam
add
mov
jp
fdivr
push
in
mov
push
add
aaa
push
add
iret
fdiv
jnp
inc
ja
ret
sbb
cmp
(bad)
imul
pop
pop
sbb
jns
jb
mov
lea
test
sub
dec
sbb
test
push
inc
push
nop
into
jno
scas
stos
aam
nop
enter
lahf
xchg
pop
xor
ror
daa
pop
push
int3
shl
test
mov
inc
mov
sbb
mov
adc
and
inc
push
fisubr
push
lea
add
cmp
cmp
out
jmp
das
je
mov
pop
xchg
jno
in
mov
mov
sbb
pop
int
clc
iret
dec
xchg
inc
push
ins
pop
sbb
mov
pop
arpl
movs
xor
mov
add
xchg
data16
push
cmp
mov
sbb
xchg
dec
mov
nop
test
aaa
inc
jge
fisubr
lds
rcr
(bad)
int
adc
fnstsw
and
loop
cmps
adc
mov
inc
scas
(bad)
pop
addr16
sbb
xchg
into
dec
mov
and
mov
(bad)
mov
sbb
push
pusha
mov
retf
out
mov
and
neg
jns
out
adc
push
clc
(bad)
nop
mov
es
xor
scas
loopne
(bad)
outs
adc
cli
je
inc
push
sub
fwait
xor
fwait
inc
mov
or
sahf
inc
adc
cmp
aam
inc
mov
cmc
shl
loope
sbb
int
inc
(bad)
test
xor
jne
mov
aaa
lods
fcmovnbe
popf
mov
lods
std
mov
aas
cld
aaa
ficom
shl
mov
pop
sbb
dec
rcl
and
mov
and
dec
int3
lods
pop
xor
imul
fisttp
aaa
lods
jo
push
sub
repz
add
mov
xchg
mov
pop
push
pushf
adc
addr16
mov
hlt
rcr
inc
pop
sbb
(bad)
dec
push
xchg
cmp
sbb
pusha
fsubr
sar
mov
cmp
pop
mov
jle
test
sbb
dec
mov
dec
loopne
popf
xchg
dec
sub
test
shr
dec
icebp
mov
pop
pop
mov
dec
je
inc
pusha
xor
aad
mov
(bad)
xor
adc
test
push
(bad)
out
xor
pslld
mov
pop
repnz
not
aad
ror
add
js
ds
mov
dec
inc
mov
pusha
xchg
and
jns
add
mov
cmp
mov
push
stos
scas
dec
sbb
ins
add
lea
xor
les
fstp
xchg
push
(bad)
(bad)
pop
mov
cmp
jne
(bad)
rol
mov
outs
stos
xor
xor
xchg
fldcw
iret
sbb
jne
jmp
pusha
adc
mov
fisttp
icebp
les
outs
mov
nop
imul
adc
fsin
inc
fwait
sti
(bad)
xchg
das
jl
pop
std
sbb
cmp
cmp
(bad)
cld
mov
loopne
cs
cld
mov
pop
dec
call
mov
and
fdivr
arpl
dec
jmp
adc
push
cmp
push
jge
mov
cmp
push
jmp
xchg
mov
mov
aam
and
sbb
jbe
fcomp
dec
call
mov
repz
out
popf
aaa
das
cmp
sbb
arpl
xchg
dec
xchg
in
aad
outs
xchg
lock
push
vmovdqu
jnp
cs
aam
rcr
imul
xor
mov
xlat
mov
dec
xchg
push
inc
inc
les
aas
jae
xchg
gs
jmp
mov
fnstcw
push
pop
jno
iret
pop
aad
(bad)
xchg
pop
int3
in
xchg
and
test
add
pop
mov
leave
push
fidivr
cmp
pop
pop
stos
ja
sub
cmps
gs
fs
std
xchg
and
sbb
push
movs
jge
dec
dec
(bad)
movs
cmp
lods
jg
dec
aam
aaa
pop
cmp
imul
mov
xor
loopne
xlat
mov
xor
lock
sar
mov
mov
pcmpeqd
ret
out
in
(bad)
aam
pop
cwde
xchg
mov
mov
stos
xchg
rol
jae
sub
add
or
mov
cmc
cwde
neg
(bad)
dec
sahf
pop
test
ret
xchg
xchg
and
rcl
je
or
sub
adc
adc
movs
and
out
fist
sbb
mov
pop
push
dec
bound
pop
sbb
mov
out
das
mov
out
adc
mov
mov
jb
icebp
int
mov
dec
push
jl
fistp
in
std
adc
scas
aad
movs
nop
pop
enter
push
inc
mov
std
retf
and
sar
fst
not
push
stos
cmp
mov
retf
lock
mov
sbb
int
loop
or
mov
leave
mov
js
mov
addr16
(bad)
adc
(bad)
fsubp
adc
(bad)
neg
stos
cmps
jge
stos
mov
add
push
sbb
ret
mov
push
sub
dec
xor
cld
jmp
mov
jo
or
pop
(bad)
push
pop
pop
cmp
push
imul
mov
call
shr
shl
(bad)
xor
mov
leave
xor
inc
mov
pushf
mov
retf
cmps
sub
mov
out
lods
div
sub
sbb
jae
out
out
sbb
sahf
mov
std
shr
sub
push
not
xchg
loopne
xor
xchg
mov
cmps
fst
dec
and
and
or
aam
xor
xchg
mov
out
daa
push
iret
and
jns
dec
aam
jbe
cli
add
fild
daa
xchg
mov
in
mov
pop
std
pushf
out
sbb
or
inc
(bad)
dec
pop
push
pop
imul
or
inc
mov
sbb
(bad)
adc
out
sbb
leave
cmc
fimul
add
mov
jae
ror
jmp
or
stos
and
les
into
sar
loop
dec
in
lds
daa
or
stos
xchg
daa
xchg
sbb
repz
enter
clc
stos
scas
aam
pop
test
inc
adc
pop
sbb
push
or
cmp
adc
or
pop
cdq
fnstsw
fld
out
loope
pop
iret
xchg
push
les
xchg
push
xlat
mov
add
fmul
not
push
dec
mov
repz
clc
pop
sub
in
mov
jl
pop
mov
xchg
xchg
addr16
dec
mov
shl
(bad)
pop
jge
sbb
inc
pop
sub
(bad)
out
fdivp
push
loopne
sbb
ins
inc
fdivr
fidivr
cmp
mov
push
jge
dec
sbb
sub
sbb
rcr
jbe
jbe
out
push
in
dec
mov
jbe
xchg
scas
sbb
jle
pushf
(bad)
push
iret
inc
xor
shr
loopne
fstp
aaa
or
in
mov
out
inc
stc
mov
pop
leave
loopne
or
xchg
mov
xchg
jge
test
addr16
std
ins
cmp
pop
(bad)
xor
fstp
dec
imul
xlat
das
jmp
xchg
sbb
ficomp
mov
inc
aaa
add
jns
jnp
aam
jmp
or
int
cmp
das
pop
or
cmc
or
sbb
adc
in
push
push
cs
mov
test
ret
jo
int
scas
fs
in
sub
pushf
loopne
cld
inc
(bad)
outs
das
push
retf
xlat
push
lods
mov
push
inc
scas
aad
repnz
outs
sub
inc
std
fnstcw
mov
pop
add
out
ja
and
ins
add
sbb
ror
sub
sbb
pop
sub
call
ret
xlat
popf
adc
mov
fnstsw
dec
sub
push
pop
and
jne
addr16
pop
imul
sbb
jge
xchg
dec
hlt
jecxz
push
rol
pop
call
pop
lock
pop
push
retf
fdiv
adc
call
and
sbb
sub
dec
stos
imul
out
jecxz
outs
retf
scas
mov
xchg
and
rcl
lds
lock
dec
pop
mov
adc
add
xor
pop
inc
sbb
neg
dec
sbb
dec
pop
adc
pop
push
es
add
or
cmp
ss
fsubr
les
ja
xor
shl
and
mov
in
adc
pop
jno
in
ret
or
popf
lds
dec
xchg
pusha
cmps
and
in
ficomp
fs
push
jbe
mov
outs
mov
mov
xchg
dec
xchg
fcom
jp
add
mov
xlat
cmp
cmp
jmp
mov
movs
pop
xchg
mov
cwde
mov
lock
fdivr
cmps
dec
scas
fs
sbb
mov
mov
add
mov
add
dec
and
xchg
pushf
(bad)
xor
push
movs
lods
or
pop
pop
in
jo
retf
inc
gs
shr
pop
pop
mov
push
popa
xchg
pop
scas
or
cmc
add
and
fxch
aaa
mov
daa
jb
stos
lock
and
(bad)
add
push
dec
dec
outs
and
add
sbb
lock
lods
jmp
mov
movs
imul
lea
mov
lea
repnz
inc
(bad)
push
cli
push
sub
xchg
aam
pop
inc
inc
(bad)
nop
or
sbb
dec
fst
fimul
lods
mov
jnp
ja
xchg
sub
xor
stos
xor
aas
push
or
repnz
movs
or
cmps
and
(bad)
sti
test
and
cmps
xor
and
adc
enter
mov
loopne
push
shl
(bad)
fdivr
fwait
jo
dec
sub
loop
or
dec
pop
dec
pop
fld
retf
(bad)
xchg
clc
dec
(bad)
push
jmp
mov
add
push
pop
push
mov
mov
movs
aas
fimul
(bad)
xchg
mov
test
mov
pop
cld
es
test
push
sahf
push
call
push
or
hlt
retf
sub
adc
shl
in
or
loopne
sub
mov
inc
mov
jnp
std
les
enter
aam
jp
mov
xchg
int3
mov
mov
daa
pop
lds
ss
dec
jnp
jge
xchg
jmp
dec
pop
jl
mov
xchg
lahf
jp
inc
pop
clc
aam
push
pop
jge
add
pop
fmul
nop
js
nop
mov
push
int
jmp
(bad)
rdtsc
outs
mov
push
aaa
addr16
fcomp
dec
in
(bad)
lock
shl
arpl
dec
add
cmps
stc
lods
sbb
enter
jno
lea
cli
add
sbb
fimul
loope
lock
out
data16
imul
rcr
and
jnp
repnz
(bad)
imul
sbb
or
rcl
dec
xchg
add
add
jmp
popf
lods
idiv
xchg
lea
cmp
dec
jno
mov
push
fs
mov
call
jmp
popf
int3
repz
clc
jle
sub
add
mov
mov
inc
jno
xchg
mov
pop
and
xlat
aad
and
ja
xor
sbb
call
mov
xor
lds
ret
call
mov
or
popf
pushf
push
retf
sub
in
fnstenv
adc
hlt
dec
inc
jne
dec
xchg
sub
mov
xor
cmp
xchg
or
daa
dec
clc
push
ins
and
in
push
int
adc
bound
mov
dec
pop
push
rol
and
xchg
into
inc
mov
scas
test
sub
dec
movsx
fchs
inc
jnp
(bad)
out
imul
(bad)
gs
jge
daa
dec
mov
push
loopne
cwde
rcl
push
xchg
test
add
dec
shl
fsubr
loopne
(bad)
loopne
inc
(bad)
jae
pop
mov
mov
nop
and
pop
arpl
xchg
arpl
pop
imul
jbe
ss
push
out
xchg
xor
add
fcom
mov
mov
lods
mov
std
push
dec
mov
jp
lds
out
inc
(bad)
stc
fidiv
scas
int3
int3
pushf
jmp
out
sub
xor
inc
xor
push
ds
xchg
pop
pop
jmp
mov
or
pop
mov
fnstenv
addr16
call
sub
pop
jnp
pop
mov
test
gs
pop
(bad)
ja
push
outs
sti
xchg
inc
outs
and
ror
and
clc
pop
addr16
idiv
jmp
loop
push
cmp
mov
test
add
inc
sbb
jp
jmp
out
retf
push
cmp
mov
dec
ja
push
or
out
sbb
ret
aam
shl
xchg
adc
(bad)
idiv
ja
retf
imul
(bad)
push
inc
cmps
ficom
hlt
pop
sbb
dec
(bad)
int3
lahf
lds
jb
in
pusha
popf
sbb
xchg
les
pop
sub
je
pop
(bad)
mov
cmps
xchg
popf
fisubr
jmp
adc
mov
hlt
fldcw
mov
push
pop
cmovnp
daa
cmp
aam
(bad)
cmp
xlat
sbb
not
fcom
out
push
add
adc
mov
sub
and
jge
not
adc
mov
sbb
daa
jo
inc
push
sbb
out
or
sbb
jb
mov
ja
ins
sar
push
test
lods
add
dec
mov
imul
sbb
jno
idiv
sar
push
push
stos
mov
sbb
dec
sbb
jge
push
sub
popf
in
loop
sti
pushf
add
adc
or
adc
lods
pushf
or
(bad)
(bad)
cdq
mov
xchg
cmc
jb
aaa
stos
xor
mov
jne
in
mov
out
pop
mov
loop
mov
out
mov
cld
pop
mov
mov
adc
pop
movs
in
cmp
shl
hlt
loope
int
ror
pop
add
and
das
and
sub
add
sub
jmp
cmp
(bad)
jns
dec
pop
dec
arpl
push
xchg
(bad)
inc
mov
push
dec
mov
or
xor
(bad)
xor
and
mov
(bad)
cmp
neg
sbb
dec
push
pop
int
mov
push
xor
nop
or
jo
dec
jns
xor
sub
push
stos
pushf
push
daa
rcl
mov
scas
pop
xchg
pop
out
fsubr
push
xor
inc
neg
or
(bad)
not
rcr
xchg
repnz
sbb
pop
ss
pop
in
pop
ins
push
cld
xchg
mov
jmp
ret
lods
imul
jbe
pop
sbb
test
in
outs
stos
mov
xchg
cdq
xlat
in
or
movlps
adc
retf
xor
cmp
or
or
scas
loopne
rcl
lahf
hlt
xchg
adc
or
cmps
nop
sbb
leave
sahf
xlat
mov
shl
jb
sbb
loope
cmps
loope
ja
sbb
cmp
mov
pushf
cld
std
push
lods
dec
mov
ficom
xor
das
mov
mov
lods
mov
outs
mov
nop
sahf
xor
mov
xchg
cmp
and
(bad)
adc
push
stos
pop
inc
pop
sahf
loope
fistp
xor
clc
add
push
aaa
ror
xchg
popf
inc
pop
jle
adc
jnp
xlat
mov
cs
jecxz
pop
ins
dec
adc
fistp
jg
js
mov
sub
pop
jne
jmp
and
mov
xor
jne
clc
mov
(bad)
popf
(bad)
cdq
test
inc
xor
and
ds
dec
xor
dec
mov
mov
daa
outs
xor
ror
inc
mov
jmp
pusha
es
xlat
mov
add
adc
movs
sub
pop
add
mov
or
sbb
jae
addr16
sub
test
xor
add
arpl
ja
inc
outs
test
and
(bad)
adc
daa
scas
std
arpl
xchg
adc
xchg
add
mov
jbe
(bad)
mov
pop
push
mov
or
pop
dec
loopne
idiv
and
jnp
cmp
scas
lock
test
cmp
sbb
iret
test
lock
jmp
sub
xor
cwde
mov
adc
dec
loopne
mov
dec
pop
mov
retf
mov
and
(bad)
pushf
push
pop
rcr
mov
outs
pushf
xor
stos
fnstsw
or
clc
mov
lahf
inc
pop
inc
(bad)
pop
or
sti
mov
jnp
das
mov
xchg
inc
push
aaa
dec
dec
jns
mov
push
sub
adc
mov
pop
pop
clc
xor
lods
out
mov
fdiv
cmp
pop
or
in
ret
retf
jnp
adc
cmps
push
add
dec
mov
pop
out
cli
repz
cli
ret
mov
adc
mov
nop
cmp
shl
sub
out
push
inc
dec
or
mov
add
mov
mov
aaa
jo
xchg
pop
push
hlt
dec
jecxz
push
or
jb
call
jl
cmc
int3
push
mov
jmp
scas
mov
fadd
stc
push
addr16
mov
sbb
add
sar
addr16
pop
stos
sbb
mov
pop
out
add
dec
jmp
cmp
int3
inc
sub
loopne
fwait
xlat
imul
les
mov
leave
mov
cmc
or
fs
jne
push
sub
pop
gs
gs
ds
and
pop
mov
ror
sbb
xchg
int3
and
es
ss
add
jecxz
(bad)
jmp
repnz
mov
imul
sahf
pop
add
push
fs
pop
gs
sub
ftst
push
push
pop
nop
rcr
cmp
cmc
rcr
inc
mov
sub
gs
push
sub
and
push
int3
jge
xor
call
mov
loopne
push
mov
push
jp
stc
in
inc
in
dec
(bad)
std
inc
mov
mov
cli
and
add
test
loopne
adc
sbb
ds
inc
sub
mov
lock
lock
inc
sar
push
xor
ins
inc
aas
and
pop
inc
jb
xchg
stos
or
sub
push
cs
mov
ss
jle
cmp
cmp
jle
cmp
mov
gs
mov
mov
aaa
pop
sti
test
sbb
mov
xchg
mov
out
fistp
mov
fcom
mov
cmps
out
sbb
mov
les
push
and
and
sub
ins
jo
pop
(bad)
(bad)
ja
fucomi
outs
shl
out
add
jbe
test
shl
and
stos
aad
(bad)
std
dec
xchg
push
push
fbstp
pushf
fist
repnz
push
dec
xlat
sub
mov
mov
in
ds
ins
scas
cmp
add
aaa
sbb
push
push
clc
inc
mov
call
xor
scas
mov
mov
unpckhps
andps
fwait
push
in
repnz
xchg
cmp
sbb
test
mov
loopne
add
dec
push
jno
mov
jmp
jmp
pusha
addr16
data16
jns
hlt
aam
das
jp
or
(bad)
cmp
xchg
mov
add
or
cmps
pop
push
scas
adc
rcl
cdq
jmp
mov
mov
ss
js
dec
adc
and
or
lea
or
sbb
or
add
loopne
and
aam
adc
mov
cmc
xor
adc
fiadd
mov
stc
mov
cmp
(bad)
push
inc
fidiv
fstp
pop
add
loop
mov
pop
pop
dec
fsin
aas
sub
jne
jae
mov
mov
push
pop
aas
sub
cmp
out
jne
(bad)
add
lods
push
or
int
xor
retf
pop
ja
inc
adc
push
mov
and
pop
xor
fisttp
pop
mov
sub
aam
xor
pushf
jge
jnp
sbb
dec
dec
adc
fisttp
mov
(bad)
mov
lds
push
mov
fmul
mov
enter
jmp
xchg
adc
cli
(bad)
push
mov
inc
mov
push
scas
popa
or
push
xchg
inc
(bad)
mov
cmps
ds
lods
sbb
fwait
in
push
sub
lods
cmps
scas
inc
jmp
sub
data16
mov
cmps
int
dec
sub
mov
and
xchg
inc
rcr
push
adc
inc
pop
push
fild
popf
out
inc
inc
pushf
xchg
sti
mov
push
xchg
inc
call
pushf
add
out
sub
pop
push
push
pushf
or
movs
(bad)
jp
fwait
push
data16
enter
call
scas
mov
jnp
push
adc
push
(bad)
xor
jns
dec
bswap
push
mov
aas
mov
dec
xchg
mov
(bad)
ror
inc
cld
sub
ss
stos
dec
cmps
inc
ror
rol
(bad)
mov
or
call
xor
(bad)
pop
xor
inc
shl
(bad)
mov
loopne
loope
adc
adc
cmps
fistp
xchg
fisttp
ds
mov
sbb
je
cmp
fnstsw
mov
jmp
xlat
cmp
retf
mov
xlat
out
push
sbb
add
add
je
(bad)
cli
aad
test
and
test
dec
rcr
inc
iret
ret
enter
mov
pop
pop
pushf
jge
add
std
push
dec
clc
mov
js
jp
outs
pop
jmp
aaa
jg
test
addr16
add
fidivr
xlat
xor
add
dec
inc
lea
stos
addr16
mov
push
retf
cmp
pop
mov
and
out
sub
sbb
push
shr
push
in
sbb
mov
or
fstp
sti
mov
ficomp
jmp
pop
add
sbb
push
mov
in
jb
test
scas
(bad)
scas
xchg
xor
xchg
or
aad
dec
repz
push
stos
push
xchg
inc
sbb
dec
ins
adc
lea
sbb
stos
aaa
ins
cld
shl
mov
push
inc
mov
cmp
test
(bad)
adc
xor
jmp
inc
or
xchg
loope
dec
mov
xor
popf
jmp
pusha
mov
xor
imul
sub
ror
pop
sar
sub
test
lock
pop
fstp
xlat
aam
mov
cmc
loopne
adc
mov
or
ins
fdivr
retf
push
sbb
and
cmp
adc
jg
fidiv
sbb
loope
mov
sbb
scas
cwde
(bad)
inc
stos
les
mov
outs
mov
ret
cmp
cmps
bound
das
adc
in
jae
inc
mov
pusha
pop
out
out
sub
xchg
nop
enter
mov
or
jmp
inc
daa
es
ds
gs
adc
stos
push
pop
into
ret
test
push
aam
fadd
dec
in
cmp
inc
loopne
stos
pop
jmp
pop
dec
cmp
or
pop
cmp
push
mov
pop
in
rol
xor
pop
mov
lahf
test
loopne
es
enter
mov
push
inc
cdq
or
push
and
adc
add
movs
mov
mov
or
js
and
gs
lds
ror
mov
add
dec
in
rcr
and
mov
aam
push
jp
call
sub
mov
add
pop
fbstp
stos
pop
add
mov
sub
retf
lods
int3
shr
sbb
and
mov
imul
in
sti
pop
cmp
pop
and
or
mov
pop
rcr
inc
jno
bound
add
adc
push
inc
mov
bswap
push
push
cld
int
inc
add
js
dec
pop
push
mov
sub
aas
pop
pop
push
mov
sub
cld
xchg
jge
sti
ror
clc
cmps
dec
ud1
aam
xor
jle
mov
aas
jne
push
ret
pop
(bad)
fadd
dec
pop
push
inc
inc
test
pop
push
inc
lock
ret
jb
fdiv
outs
arpl
fnstsw
ds
sbb
cmps
sub
mov
or
loopne
les
push
pop
jle
inc
pop
lahf
es
test
pusha
jmp
xchg
cwde
and
mov
idiv
ss
adc
aam
cmps
push
mul
add
jb
(bad)
mov
addr16
call
push
in
and
test
mov
xor
out
int
sub
sahf
into
pop
(bad)
xor
and
mov
xor
and
les
jle
mov
imul
cld
pushf
shl
push
jmp
xlat
push
rcr
sbb
mov
mov
stos
xchg
clc
jnp
std
pop
add
xor
pop
push
movs
mov
test
ins
jle
(bad)
cmp
jmp
sar
lods
lods
and
cs
fwait
jne
sbb
add
fcom
shr
repz
(bad)
cmp
out
stc
nop
mov
xchg
pop
pop
dec
cmp
cwde
fchs
imul
mov
enter
sbb
cwde
xchg
mov
xor
jne
inc
outs
cmp
or
(bad)
cmps
rol
pop
les
hlt
pop
pop
jl
out
cdq
movs
dec
pushf
fiadd
xchg
addr16
xchg
test
lods
pop
fldenv
sub
jecxz
neg
mov
cmc
lock
movs
(bad)
imul
mov
sub
xchg
mov
mov
fcomp
xchg
imul
or
int
mov
push
je
outs
je
loop
xlat
ret
jns
fnstcw
cmp
dec
xor
(bad)
gs
out
mov
cmc
mov
(bad)
or
mov
push
out
fsubr
xchg
js
aas
sub
jmp
out
stc
jge
mov
xchg
cmp
(bad)
and
loop
pop
sar
int
jns
and
pushf
daa
sahf
mov
arpl
fs
jb
pop
lock
xchg
or
xor
adc
pop
repz
icebp
mov
mov
fmul
cmps
cld
inc
xor
and
(bad)
test
enter
sub
rcr
sti
add
add
hlt
or
cli
dec
(bad)
and
shl
push
(bad)
jecxz
mov
ret
sbb
mov
int3
sub
imul
or
pop
cdq
test
xor
mov
sub
cmc
popf
or
ins
div
mov
mov
adc
mov
push
jae
out
jno
mov
sar
rcr
pop
add
push
cmc
dec
or
jnp
dec
repnz
mov
fadd
pushf
arpl
mov
(bad)
mov
addr16
push
aaa
xchg
imul
push
mov
test
sub
and
shr
push
sbb
lock
outs
pop
pushf
arpl
call
push
pop
push
mov
jae
lea
call
mov
cmps
dec
inc
inc
test
loope
sti
and
test
mov
es
jp
pop
dec
pop
rcl
dec
cmp
ror
vprotb
in
push
mov
mov
sbb
imul
xor
cwde
fbstp
push
outs
and
push
mov
adc
adc
mov
jmp
ror
xor
lods
out
push
repnz
sub
xchg
xchg
xor
(bad)
xchg
nop
mov
fnstcw
out
inc
sub
dec
imul
mov
inc
xchg
and
mov
pushf
outs
imul
sbb
mov
out
sbb
inc
mov
push
xor
and
inc
add
dec
push
jecxz
inc
ficomp
cmp
pop
out
fs
xlat
test
cmp
add
jmp
lods
dec
divps
mov
add
and
dec
adc
mov
stos
(bad)
cmps
daa
cdq
adc
mov
mov
loop
fucom
push
jg
mov
jp
jno
bound
mov
mov
sub
or
dec
fcom
push
daa
xchg
pop
aas
push
pop
mov
ds
aam
dec
jle
dec
cmc
mov
jbe
pop
hlt
into
(bad)
nop
mov
cs
mov
mov
or
jmp
hlt
lods
ret
bound
pop
sub
fwait
cmps
pop
std
mov
add
sbb
jp
adc
push
pop
cmp
dec
(bad)
outs
fwait
add
pop
push
rol
cmp
push
(bad)
pop
aad
fsub
mov
pop
call
test
arpl
inc
mov
push
add
fisttp
clc
(bad)
xlat
in
jno
stos
test
jge
jb
pop
stos
popa
sbb
fstp
mov
retf
lods
xor
repz
std
cmp
cvtpd2dq
(bad)
enter
xor
in
jno
ret
dec
cmp
push
ins
and
or
sbb
pushf
sar
or
push
lods
scas
xor
pop
pop
test
mov
adc
adc
inc
xor
mov
xchg
scas
mov
adc
popa
mov
adc
mov
dec
popf
shl
cs
push
push
dec
xchg
fmul
cli
push
push
mul
loope
push
xor
sbb
ss
add
jmp
pop
cmc
push
rcl
std
(bad)
(bad)
ins
pop
test
mov
jge
jmp
jg
adc
mov
fcom
adc
jmp
repz
(bad)
stc
inc
mov
mul
fsub
(bad)
sbb
ss
mov
pcmpeqd
mov
cld
push
sbb
psrlq
pusha
cmp
movs
pop
dec
xor
ins
and
push
xor
imul
daa
pop
mov
mov
jne
sub
jnp
adc
into
mov
adc
aam
dec
cmps
js
cmp
pusha
xlat
fimul
cmp
xor
inc
xor
mov
call
into
out
adc
fidiv
into
pop
ja
xor
dec
pop
repnz
mov
stos
iret
sbb
and
push
mov
mov
push
sbb
sub
push
push
mov
xlat
shl
sbb
cmps
jg
or
or
ja
push
adc
dec
adc
imul
out
cmp
or
daa
cdq
in
dec
and
shl
xchg
stc
inc
bswap
and
adc
cmps
mov
fs
in
jecxz
xor
dec
or
jp
push
push
(bad)
test
(bad)
mov
ins
test
jl
inc
repnz
ret
dec
ins
(bad)
jmp
xor
pusha
test
push
enter
cmc
int
test
jbe
mov
repnz
mov
repz
cmp
loope
jnp
mov
clc
sub
and
addr16
sar
pop
sub
aam
jbe
mov
jb
retf
mov
nop
adc
mov
(bad)
pusha
loope
in
sahf
sbb
push
sub
jo
ins
gs
test
sub
arpl
jo
xor
arpl
pop
pop
and
addr16
fsubr
mov
ret
mov
or
into
popf
xlat
fadd
test
or
jmp
dec
jno
enter
mov
adc
add
add
push
jnp
mov
fimul
outs
or
and
pop
jmp
mov
lock
push
rcl
mov
fstp
mov
xchg
mov
aam
add
fsub
xor
loopne
sahf
or
and
stos
sbb
fstp
jecxz
sti
pushf
(bad)
mov
add
fist
inc
xchg
(bad)
fucom
jne
loopne
cmp
push
sar
fcmovnbe
sbb
stos
adc
pop
pushf
mov
push
xor
mov
(bad)
jle
add
sar
dec
xchg
sbb
lea
mov
fldcw
or
neg
jbe
dec
dec
int3
imul
pusha
pop
mov
mov
lods
cmp
shr
mul
test
pop
aaa
ss
cdq
out
pop
inc
retf
dec
xchg
rol
push
repnz
mov
inc
das
ins
jbe
sub
lods
jb
cmp
mov
mov
aaa
je
xor
retf
mov
es
loopne
btr
fisubr
sub
loopne
mov
dec
pop
xor
mov
cdq
push
cmps
(bad)
fs
outs
or
or
inc
xchg
xchg
mov
xchg
add
and
jp
jg
inc
jmp
(bad)
cdq
or
sar
adc
push
jecxz
icebp
les
jg
sub
(bad)
shl
sbb
dec
push
aaa
cmp
add
sbb
ja
enter
clc
ret
fbstp
cmp
mov
cld
sub
pushf
cmp
aaa
fwait
adc
aaa
mov
inc
cwde
mov
mov
and
div
push
push
fdivr
push
pop
scas
fnstcw
in
push
sbb
or
lea
js
cmp
push
dec
xchg
xor
(bad)
mov
xchg
mov
jae
mov
mov
pop
sbb
into
loop
lods
push
nop
push
push
adc
fwait
push
pop
cmp
adc
loopne
mov
out
ret
pop
call
push
leave
retf
mov
js
push
fistp
in
or
ror
fidiv
out
push
inc
xchg
movs
xchg
jb
lods
push
rol
push
mov
cmp
loop
fwait
mov
push
sub
add
ins
jl
mov
mov
xchg
or
sub
shl
enter
xchg
psubusw
ins
idiv
in
int3
(bad)
pop
or
cmp
pop
imul
out
loopne
add
add
test
lgs
cld
imul
and
out
add
add
leave
xor
mov
aam
adc
jnp
jle
or
pop
adc
fwait
ror
loop
fcmovnb
(bad)
out
shl
fidiv
test
or
add
cdq
movs
fdiv
lds
fwait
push
std
in
ret
fcomp
in
dec
mov
jmp
xchg
pop
jecxz
dec
ret
pop
xor
sub
jo
xor
(bad)
loope
mov
lods
movs
int
xchg
jno
div
rcr
add
stc
cmp
enter
jmp
out
and
sbb
in
sub
out
xchg
push
cmp
cld
arpl
std
imul
pop
and
mov
mov
or
push
dec
into
loopne
pusha
or
dec
inc
sub
lahf
sbb
ja
pop
sbb
cmp
cmp
xchg
sub
jae
scas
push
mov
(bad)
in
jnp
inc
xchg
(bad)
fstp
cmp
adc
xor
xchg
xlat
outs
jns
push
(bad)
fcmovnbe
(bad)
cmp
popa
xor
inc
jg
fucomi
aam
jbe
xor
stos
push
pop
sbb
pop
inc
sub
adc
mov
ror
adc
sbb
ror
sbb
mov
fisttp
jp
sub
sbb
mov
ficomp
add
push
dec
fiadd
fild
popa
test
(bad)
cmp
out
daa
sub
sbb
lds
push
(bad)
(bad)
lods
mov
ins
inc
scas
outs
jecxz
pop
call
add
ss
sbb
lock
jge
dec
test
inc
into
and
jg
lea
repnz
rol
xchg
push
mov
mov
dec
or
xchg
nop
or
enter
sub
test
fstp
or
jge
fldenv
pop
pop
mov
push
pop
repnz
fisttp
pushf
shl
push
shl
jno
ins
mov
jno
int3
dec
loopne
in
dec
mov
cmp
jnp
cld
(bad)
and
enter
jg
mov
pop
inc
mov
jbe
rcl
inc
retf
pop
xchg
push
enter
mov
icebp
lods
mov
inc
mov
jbe
mov
xor
out
cwde
das
hlt
sbb
pop
sbb
dec
scas
mov
sbb
fwait
xor
rcr
shl
stos
xor
adc
daa
mov
ins
mov
pop
sbb
jge
cmp
rcl
pushf
mov
icebp
lods
arpl
pop
cdq
push
fsubr
lock
cmp
xchg
push
add
cdq
and
jg
nop
pop
icebp
add
pop
lods
jle
inc
pop
pop
shl
pop
cld
popa
test
ret
cld
xchg
mov
adc
add
vpsubusb
aas
aad
adc
loope
cmp
bnd
sar
ja
(bad)
aam
mov
lahf
addr16
sub
repz
inc
loopne
push
mov
in
push
in
cmp
rcr
add
outs
das
xchg
mov
xlat
mov
jmp
jnp
sbb
mov
lds
push
push
mov
mov
test
shr
dec
add
ss
stos
xor
test
xor
int
xchg
dec
aam
lock
dec
rol
jp
retf
jnp
sbb
xchg
into
push
sbb
xchg
mov
add
imul
outs
or
pop
cwde
jb
test
sub
(bad)
cmc
daa
adc
sub
dec
data16
pushf
push
call
adc
push
in
add
xchg
leave
lock
repnz
sub
adc
in
iret
add
(bad)
xor
mov
fmul
xor
mov
aad
test
pop
out
stos
sahf
cmp
call
dec
jge
inc
in
xchg
sbb
aad
dec
mov
daa
loopne
and
out
mov
sub
pop
sbb
lods
jbe
xchg
mov
rol
mov
and
les
test
push
in
dec
shl
es
add
add
stc
jmp
xchg
(bad)
ror
in
in
mov
int3
sbb
and
mov
mov
and
in
pop
jbe
xchg
popf
into
jnp
clc
fsubr
fcomip
pop
xchg
pop
dec
dec
sbb
ins
or
fwait
sub
psubusw
add
arpl
sub
sub
add
int3
cmp
imul
vxorps
rcl
mov
cmps
mov
and
lahf
dec
sbb
pushf
imul
arpl
cmp
dec
mov
fild
or
jmp
jmp
add
rcr
inc
stos
icebp
rcl
jnp
xchg
div
pop
and
dec
inc
pop
sub
in
test
aaa
push
add
je
and
inc
addr16
imul
sub
pop
mov
push
jne
push
push
enter
imul
cwde
push
mov
mov
arpl
xchg
cmp
jnp
xor
mov
loop
add
mov
mov
mov
mov
sti
stos
pop
dec
jns
dec
mov
hlt
scas
imul
adc
(bad)
push
inc
jae
int
xor
ins
fldpi
repz
pop
sub
push
outs
cs
xor
pop
loopne
lds
or
neg
xor
addr16
clc
cwde
sbb
(bad)
popa
inc
sbb
mov
neg
daa
inc
retf
xchg
mov
fnsave
scas
inc
dec
std
add
xor
cli
xchg
mov
add
hlt
sub
fbld
mov
push
in
mov
dec
sub
cld
test
or
sbb
cli
or
or
loop
scas
(bad)
mov
(bad)
aaa
aad
in
rol
scas
and
or
add
rol
lock
in
fcomp
cmp
push
inc
sbb
movs
xchg
call
mov
test
mov
dec
into
adc
mov
fst
test
jno
xchg
into
pop
dec
dec
aad
xchg
dec
cmp
adc
(bad)
in
mov
popf
mov
jne
ret
clc
lock
dec
mov
add
les
push
pop
cmp
cmp
cmp
mov
(bad)
je
int
jbe
pop
(bad)
shl
call
int3
mov
mov
stos
push
mov
cs
jae
fwait
pop
jns
or
(bad)
iret
loope
inc
imul
movs
push
push
mov
daa
mov
xchg
repnz
xchg
pop
js
mov
xchg
or
stos
adc
xor
out
stos
imul
push
fidiv
mov
pop
fadd
pop
mov
stc
adc
xor
cdq
in
popa
aaa
out
and
sbb
mov
and
mov
fistp
fisttp
popf
dec
je
(bad)
into
repz
hlt
inc
inc
stos
jmp
retf
mov
stc
jb
inc
fdiv
add
push
jnp
pop
movntps
dec
mov
in
popa
pop
pop
jle
jge
push
sbb
(bad)
mov
sub
icebp
mov
mov
jle
dec
aam
mov
pop
popa
ret
cmp
inc
call
fsub
xchg
arpl
pop
pop
stc
ret
ds
mov
aad
pop
xchg
leavew
(bad)
popa
call
inc
fsubr
cwde
mov
ror
inc
and
mov
js
or
in
add
cdq
(bad)
cmc
pop
arpl
fwait
std
test
push
lods
mov
pop
cmp
pushf
(bad)
mov
push
cli
mov
add
daa
(bad)
shl
out
fwait
dec
and
pop
or
sub
repz
int3
xor
adc
xor
cmps
xlat
aam
mov
nop
lea
sti
mov
in
leave
mov
push
in
mov
ret
cmp
addr16
es
push
outs
shl
repz
addr16
ds
xor
int3
mov
ror
retf
scas
xor
sub
dec
xchg
xchg
adc
dec
sahf
cmps
frstor
xor
pop
push
cmp
cmc
sbb
lods
mov
cmp
cmc
stos
or
fcom
xchg
cmp
cs
push
pushf
dec
icebp
imul
and
test
mov
test
push
cs
dec
pop
outs
mov
(bad)
pop
push
inc
dec
dec
cmp
inc
aam
or
adc
out
sub
mov
nop
sbb
push
sbb
xor
out
fdivr
push
cmp
ret
dec
(bad)
push
add
push
(bad)
dec
sbb
icebp
push
push
data16
les
popf
ror
mov
(bad)
pmuludq
cmps
fcomp
dec
mov
mov
(bad)
fisubr
lea
jmp
loop
idiv
jg
inc
adc
and
je
dec
dec
mov
sar
call
jmp
jp
pop
dec
xlat
add
shl
jmp
mov
test
push
or
sub
cli
and
fsub
outs
add
dec
int3
mov
(bad)
retf
shl
pop
inc
pop
es
add
mov
jae
out
jno
sub
or
inc
cmp
xchg
add
call
and
(bad)
cmp
push
push
(bad)
adc
and
push
push
mov
mov
mov
mov
out
push
jmp
mov
idiv
leave
lea
ret
fcomp
jge
add
cmps
mov
(bad)
std
stos
dec
inc
inc
lahf
ds
add
rcr
fwait
push
ret
mov
or
adc
jnp
jbe
or
xlat
idiv
(bad)
repnz
pop
mov
movs
dec
dec
mov
mov
add
call
ja
mov
outs
test
xor
inc
pop
sbb
mov
pusha
(bad)
repz
in
push
sub
or
js
mov
fsubr
mov
aam
jb
pop
and
or
ror
stc
pop
push
cmp
sub
mov
mov
pop
mov
xchg
loop
fcom
cdq
les
add
int3
push
lds
adc
and
in
xchg
mov
out
aas
gs
push
adc
xor
fcom
movs
push
idiv
in
leave
rcl
fst
in
(bad)
dec
jp
int3
lock
int
movs
test
int3
or
xchg
bound
sub
fmul
push
adc
add
inc
call
and
pop
mov
sub
mov
mov
mov
(bad)
aam
jns
mov
gs
push
cli
sub
xchg
mov
popf
call
mov
les
loope
leave
aad
daa
or
pop
sbb
pop
into
xchg
sbb
inc
ja
sti
les
arpl
imul
xchg
(bad)
pushf
rol
cdq
outs
ror
jnp
lea
cmp
push
jmp
push
dec
adc
pop
mov
mov
inc
lods
dec
push
and
idiv
pop
add
xchg
jp
dec
cmp
rcl
jmp
div
imul
cli
aaa
pop
mov
pop
cld
push
jb
(bad)
stc
cmps
ja
push
push
mov
stos
imul
and
mov
pushf
icebp
mov
mov
enter
mov
push
popa
rcr
mov
adc
aaa
inc
mov
and
(bad)
js
(bad)
shl
xor
outs
pop
push
push
int3
sbb
sub
pop
out
xchg
add
sar
dec
ja
jnp
mov
rcr
push
cmp
les
sti
ja
pop
adc
adc
push
mov
sahf
sar
(bad)
aas
in
cdq
jp
mov
ins
mov
push
imul
pop
cmp
(bad)
mov
int3
cld
xchg
lods
cmp
ss
pusha
inc
cmp
imul
lahf
inc
or
in
or
lds
jae
ss
add
and
rcl
adc
pop
xchg
aam
jmp
sbb
out
cmp
sbb
mov
ret
xchg
pop
div
mov
in
cmps
popf
int3
dec
ins
outs
lock
push
gs
outs
imul
sbb
jmp
add
or
cmp
out
and
add
push
ins
jns
sub
test
lods
fidivr
mov
test
(bad)
or
pop
mov
imul
dec
jge
(bad)
jecxz
jo
mov
ds
dec
mov
xor
gs
sub
jns
sti
jnp
in
and
sti
and
mov
jp
and
xchg
sub
jl
inc
adc
rcr
retf
jnp
or
pop
int3
mov
popa
sbb
pop
stc
lock
ja
add
in
sbb
xchg
retf
add
mov
pop
jmp
lfs
jg
gs
mov
cdq
movs
mov
sbb
fld
push
cmp
cmp
inc
mov
test
dec
(bad)
jo
jmp
fmulp
sar
push
sbb
test
push
sbb
jo
mov
add
push
push
(bad)
cmc
and
inc
retf
(bad)
call
ret
(bad)
popa
je
push
or
sbb
adc
cmp
adc
sbb
cmp
not
pop
xor
xor
repz
push
mov
ins
dec
ffree
fidivr
mov
dec
xor
push
mov
sahf
cwde
jno
push
outs
xchg
movs
add
push
push
push
lahf
hlt
mov
cli
rcr
xchg
and
fnstcw
call
xchg
sub
pop
mov
ds
sbb
ins
mov
adc
cld
mov
mov
dec
bound
movs
enter
dec
dec
mov
jnp
mov
test
out
mov
xchg
adc
aad
cmp
imul
cmps
jae
in
lock
pop
pop
dec
adc
dec
je
mov
enter
jb
cmp
sbb
pop
mov
xchg
(bad)
stos
jbe
test
cmp
ins
loop
add
and
mov
pop
xlat
inc
in
outs
dec
fnsave
popf
mov
jl
in
xchg
fld
sar
repnz
sub
add
add
aam
loop
dec
aad
mov
mov
mov
pop
inc
jmp
dec
cmp
icebp
cmps
pop
add
and
and
or
dec
adc
popf
cli
xchg
push
adc
test
push
into
pop
bound
jne
ror
fcomp
cmps
jge
cmc
sub
movs
fisubr
mov
loop
xor
lea
out
test
stc
mov
add
mov
mov
jmp
mov
mov
iret
fisub
sti
push
ss
ins
or
into
jge
mov
adc
sahf
sub
in
push
push
test
jge
mov
icebp
sahf
pushf
mov
jne
mov
shr
(bad)
pop
mov
es
jnp
popf
out
clc
mov
stos
jno
clc
ret
aas
jae
add
(bad)
rol
push
sbb
push
cwde
iret
arpl
shl
pop
into
and
pop
and
aad
xchg
sbb
test
push
repnz
or
cmp
xchg
cmp
int3
sub
sub
push
cmp
push
jnp
xchg
popa
mov
sbb
add
retf
mov
mov
loopne
std
xchg
loopne
push
jbe
(bad)
mov
ss
inc
clc
lock
adc
add
(bad)
call
cmp
in
pop
(bad)
sbb
loope
push
fsubp
sbb
adc
push
cmp
and
(bad)
lods
mov
mov
in
lea
xchg
jo
push
pop
mov
cmp
das
jmp
aaa
mov
(bad)
mov
pop
inc
arpl
adc
call
out
leave
cmps
jmp
mov
movs
pop
mov
mov
jae
ds
bound
jnp
add
mov
test
pop
setle
dec
lea
ja
push
mov
push
mov
pop
push
mov
and
idiv
cmp
inc
or
fldcw
loopne
cld
bound
aas
cld
adc
ds
mov
push
div
mov
out
add
les
mov
pop
jnp
call
mov
dec
repz
nop
popf
cmp
and
outs
sub
mov
repz
(bad)
adc
fscale
jmp
push
add
mov
adc
(bad)
(bad)
mov
das
cmps
(bad)
lahf
pop
push
inc
mov
fucomp
mov
mov
in
(bad)
mov
mov
mov
xor
es
shl
loope
ds
fs
cmp
inc
cmp
sbb
dec
add
iret
call
mov
mov
adc
jns
ret
repnz
pop
dec
cmps
jnp
rcl
ja
sub
arpl
or
cwde
or
fisub
push
xchg
ror
dec
fistp
in
mov
fdiv
push
jb
or
push
cmp
mov
xchg
ficomp
in
jns
jnp
and
test
cdq
inc
jge
test
sub
lock
mov
clc
adc
push
in
loopne
inc
xor
ja
or
sti
ds
xchg
lds
fs
hlt
(bad)
sub
dec
sbb
lahf
clc
sar
jnp
mov
bound
sub
mov
and
cmp
sbb
iret
jle
pop
rcl
mov
fs
aad
les
fmul
cmp
shl
es
add
mov
call
iret
xchg
neg
jmp
sub
dec
in
xor
(bad)
ficomp
push
inc
out
sub
push
shr
mov
lahf
cdq
push
or
fs
jmp
test
mov
add
or
inc
cmp
adc
mov
push
cmp
dec
rcr
lds
sub
repnz
push
popf
add
rol
test
mov
jo
inc
xchg
fs
mov
int3
addr16
sbb
cmp
xlat
ds
das
in
mov
test
cmp
push
lods
or
repnz
dec
inc
ds
jb
aaa
xor
mov
pop
leave
daa
push
inc
(bad)
fist
fstp
pop
or
pop
push
add
mov
jae
pop
shr
cmp
inc
rcl
and
mov
jae
dec
mov
xor
cmp
gs
lods
jnp
movs
out
push
fcom
test
dec
jnp
inc
ror
(bad)
int
cmp
inc
fstp
mov
jge
fcom
shl
push
xchg
cmp
add
or
mov
lods
xor
xchg
rcl
inc
pop
pop
pop
jmp
icebp
xchg
movs
mov
call
fistp
fwait
pop
out
sub
mov
push
jmp
into
mov
push
xchg
pop
sub
sbb
and
stc
push
inc
fiadd
add
sti
push
dec
mov
jle
push
sbb
add
dec
pop
aad
cmp
mov
(bad)
(bad)
jmp
mov
adc
push
pop
sub
stos
cmp
jmp
mov
sub
add
inc
les
cmps
in
int
xor
and
test
adc
push
loope
lods
(bad)
adc
imul
mov
icebp
fidiv
push
mul
sbb
mov
jmp
or
adc
xchg
xlat
mov
fimul
es
cmc
fadd
mov
retf
fwait
sar
cld
mov
pop
mov
pop
add
stc
loopne
push
scas
div
mov
imul
std
loop
(bad)
pop
cld
mov
mov
jno
pushf
pushf
xor
push
pop
or
daa
jle
sar
dec
iret
ret
repnz
inc
inc
clc
cmp
aam
or
jmp
dec
sbb
imul
xor
(bad)
stos
fimul
es
xchg
imul
sbb
aam
dec
adc
pop
xor
loope
dec
inc
push
in
jns
ficomp
add
sti
xchg
or
lds
popa
sar
rcl
pop
sbb
aam
ret
fsub
aad
xchg
sbb
and
mov
push
jne
stc
(bad)
and
dec
in
pop
mov
sar
dec
or
xchg
pop
pop
mov
adc
xor
mov
and
pop
push
ss
in
aaa
xchg
ss
adc
fs
mov
adc
mov
add
fwait
nop
dec
dec
pop
mov
scas
cwde
mov
ffreep
loop
mov
pop
lea
mov
fwait
xchg
movs
movs
out
dec
pop
pop
rcl
in
jmp
add
(bad)
loopne
repz
push
mov
clc
mov
xlat
fisub
pop
push
scas
jg
out
cli
test
dec
jecxz
push
dec
movs
adc
cmps
pop
push
dec
cmp
aad
ror
dec
ret
add
cdq
xlat
pop
and
ds
mul
pop
dec
push
dec
test
stos
test
aam
mov
push
ret
arpl
int3
cmp
imul
hlt
mov
call
int3
int
ds
in
push
push
fdiv
xchg
imul
dec
push
(bad)
out
dec
xchg
push
(bad)
add
jg
movs
add
sahf
pop
(bad)
jb
dec
out
jp
stos
xchg
pop
mov
jb
mov
push
loope
fidivr
xchg
cmps
shl
aad
loopne
add
push
dec
pop
push
inc
fdiv
lods
sub
push
retf
gs
jb
outs
cwde
cmp
xchg
sbb
cld
rcr
inc
pop
in
mov
mov
icebp
sbb
aaa
out
movaps
enter
mov
call
test
cdq
sub
add
aam
push
inc
or
mov
mov
jo
popa
adc
fsub
cs
cdq
dec
fcom
and
js
mov
mov
ja
xor
fst
pop
fcmovnu
popa
jbe
arpl
jae
push
or
sbb
outs
sub
mov
mov
mov
test
out
lahf
inc
sub
mov
rol
addr16
loop
imul
aam
leave
xchg
xchg
xlat
xchg
ret
push
out
jl
xor
pop
xchg
sub
add
xchg
mov
ss
out
mov
dec
and
repnz
cs
xor
sub
or
rcl
jge
outs
add
and
icebp
xchg
das
mov
dec
(bad)
pop
jl
xor
pop
pop
pop
and
jnp
into
pushf
xor
xchg
jg
in
(bad)
arpl
mov
xor
xchg
push
mov
push
sbb
cmp
mov
mov
je
sbb
inc
fdiv
retf
mov
lock
push
out
pop
out
imul
test
ds
mov
mov
xor
sub
sub
mov
and
mov
mul
dec
movs
pop
add
inc
cdq
pop
scas
xlat
mov
or
push
xlat
out
pop
in
add
pop
dec
inc
ficom
pop
sub
not
js
cmps
sub
jg
nop
sub
mov
lods
ret
dec
stos
cdq
xor
mov
ins
aaa
jecxz
or
jno
push
daa
int
(bad)
push
test
or
loope
and
inc
cmps
(bad)
and
cmp
jb
js
xor
push
xor
xor
fadd
xchg
sbb
push
push
imul
in
sbb
and
sub
loope
mov
dec
or
mov
xor
xchg
lahf
jmp
in
jmp
xor
adc
ss
dec
into
fstp
pop
sub
jl
or
ror
sbb
push
fcom
stos
mov
dec
lock
xor
mov
adc
jno
cmp
mov
xchg
xchg
xchg
push
pushf
shr
pushf
(bad)
adc
out
call
xor
xchg
clc
pop
inc
enter
mov
dec
mov
inc
pop
dec
cmp
mov
movs
mov
push
(bad)
cwde
add
in
xor
jl
jns
pop
and
cwde
jae
xchg
sub
lahf
adc
aas
xor
pop
push
lods
cmp
test
jbe
push
adc
in
cmp
sub
mov
sub
jecxz
les
arpl
repnz
pop
mov
repnz
sub
add
push
cmps
jmp
sar
cmps
sub
ret
sub
mov
fild
(bad)
jmp
icebp
xor
cmp
cld
pop
stos
xor
add
cmp
adc
dec
outs
cdq
dec
popf
nop
dec
cmp
shl
pushf
int3
push
mov
lods
push
push
aad
inc
cmp
sbb
enter
adc
xlat
out
rcr
cmp
fsubr
mov
ss
or
pop
cmps
jmp
das
fimul
mov
rol
sbb
adc
iret
cmp
xor
cmc
sub
rdtsc
inc
js
push
or
adc
sub
mov
xor
and
in
xor
es
imul
(bad)
and
fadd
aas
and
mov
inc
push
daa
lods
and
mov
arpl
out
inc
sub
shr
scas
add
add
es
aas
inc
lods
cmp
out
xchg
jnp
adc
sbb
lock
fwait
neg
xor
pusha
int
ins
dec
hlt
stos
mov
adc
retf
test
clc
mov
mov
jmp
cmps
adc
push
sub
and
xlat
push
ror
loope
stos
dec
out
div
sub
fcmovb
call
scas
or
jmp
push
mov
cmp
pop
or
stos
repnz
or
nop
fmul
push
jp
mov
cli
sub
adc
push
lock
ficom
stos
and
cmp
(bad)
sti
imul
sbb
(bad)
cwde
mov
shl
jge
sub
retf
std
ins
test
(bad)
bound
cmp
pop
jae
jne
cmp
cwde
jae
xchg
cmp
or
lea
(bad)
dec
in
pop
sbb
jo
jp
jae
stos
outs
xchg
aaa
loopne
add
mov
xor
out
sahf
aam
pop
nop
sub
dec
lar
jo
xor
aad
pop
dec
xchg
push
jne
cwde
xlat
mov
nop
jge
sub
sub
mov
imul
clc
fadd
add
mov
mov
gs
jnp
xor
mov
mov
arpl
add
mov
or
pop
cmp
sbb
push
pop
cmc
sbb
cmp
rcl
std
in
inc
push
jl
cmp
out
fsub
shl
nop
jmp
pop
jo
frstor
jmp
xor
push
mov
je
xor
mov
fisub
mov
callw
shr
jmp
ja
pop
xor
gs
movs
or
daa
xchg
pop
pop
sbb
aad
jmp
sub
mov
xchg
pop
cwde
mov
icebp
adc
xor
leave
push
daa
pop
inc
cmp
pop
mov
leave
add
push
jl
ret
test
push
cmc
push
rol
dec
in
mov
and
xchg
pop
aad
popa
fstp
push
jmp
inc
int3
inc
nop
push
test
mov
int
rcl
inc
pop
inc
nop
cs
fnstsw
iret
sub
out
outs
(bad)
or
and
(bad)
rol
xor
sub
pop
int
stc
shl
add
mov
and
mov
bswap
cmp
dec
mov
push
mov
cmp
xlat
loop
cs
inc
scas
inc
mov
mov
add
ins
or
loop
(bad)
jle
xlat
retf
cmp
mov
pop
movs
mov
and
xor
cli
(bad)
int3
push
jge
cmp
addr16
icebp
sbb
ds
push
push
mov
pop
nop
int
cli
push
mov
adc
ffree
mov
jle
cmp
lahf
sysenter
enter
sub
mov
mov
push
mov
test
shl
push
mov
pushf
dec
gs
xchg
mov
stos
dec
into
(bad)
leave
jmp
inc
je
pop
push
ja
imul
rcr
jge
rcr
xchg
push
loopne
fnstenv
sbb
aaa
outs
mov
nop
mov
jae
pop
mov
inc
out
jns
sbb
sub
or
lds
ror
pop
add
aam
in
retf
mov
cmp
mov
icebp
xchg
or
inc
dec
mov
xchg
in
sub
ja
(bad)
push
xchg
inc
dec
daa
cmp
fs
mov
inc
jmp
add
movs
ins
sub
mov
mov
cld
dec
mov
imul
and
xchg
cmp
inc
sbb
ins
push
pushf
pop
mov
popf
(bad)
dec
mov
jb
shr
daa
cdq
cmps
cld
imul
les
and
std
push
int3
xchg
cmps
push
call
lods
cmp
das
pop
mov
nop
test
push
test
ja
fistp
test
xchg
cdq
inc
mov
jmp
xor
dec
jl
and
xor
out
test
xchg
mov
lods
adc
sbb
mov
cmc
adc
jnp
mov
aas
daa
cmp
iret
jne
pop
mov
sub
mov
aam
cwde
mov
stos
addr16
add
cld
loope
fcmovnb
int3
mov
push
sbb
cmp
pop
push
xchg
mov
sbb
inc
dec
sbb
imul
and
lea
mov
sti
and
jmp
pop
cmp
sbb
fs
jb
test
inc
test
fdiv
xchg
push
mov
pop
movs
pop
jle
mov
loope
sbb
(bad)
inc
ret
xchg
jb
push
xchg
inc
sub
push
add
inc
inc
ret
sbb
cmps
aam
inc
shl
aaa
push
push
adc
cmps
sbb
icebp
cmc
fiadd
inc
mov
jmp
(bad)
repnz
ror
mov
in
pop
cld
mov
pop
cmp
lea
or
fidivr
mov
mov
push
jmp
push
push
out
hlt
inc
(bad)
stc
jb
jl
inc
stos
imul
clc
out
mov
das
test
xor
mov
and
pop
dec
sbb
loopne
push
push
inc
pushf
cmp
(bad)
cmp
cmp
xchg
int3
mov
out
cmp
popf
test
out
ds
cmp
fdiv
out
push
jecxz
dec
ror
out
shl
call
pop
leave
push
add
dec
pop
sbb
add
mov
leave
xor
xor
jae
addr16
xor
pop
mov
clc
(bad)
mov
call
cmp
pop
imul
pop
pop
gs
or
or
pop
es
fwait
ret
out
mov
inc
fucom
ins
push
lds
loope
frstor
in
add
jecxz
dec
push
and
jge
xchg
cmp
dec
mov
(bad)
push
add
jne
mov
pushf
xchg
lods
stc
stos
pushf
jns
jb
outs
xchg
mov
jnp
mov
movs
aad
xchg
pop
cdq
jae
and
sbb
push
aad
pop
(bad)
push
sbb
add
xor
movlps
xor
neg
jle
pop
dec
out
jmp
test
dec
fnstcw
out
sub
jge
jmp
into
mov
and
iret
pushf
mov
adc
add
mov
out
rcr
inc
inc
or
jmp
pop
fild
jmp
and
call
pop
mov
cmp
sub
in
mov
or
xchg
fcom
cmp
inc
icebp
fdivr
loopne
dec
xchg
ins
xor
jl
mov
xchg
loopne
bound
shl
sbb
rcr
shl
pop
mov
in
jbe
lea
mov
fisttp
xchg
cmp
inc
lds
and
arpl
std
push
rcr
xor
mov
sti
jnp
lods
mov
mov
aaa
jg
jmp
(bad)
ss
mov
xchg
mov
adc
fsubr
and
and
into
ror
mov
out
push
clc
retf
and
dec
push
mov
and
sbb
add
inc
xchg
ret
enter
sbb
adc
mov
add
mov
jg
inc
mov
out
int3
fcom
mov
sbb
mov
pop
fst
dec
in
lahf
mov
cmps
inc
mov
pop
push
test
cs
ja
pop
ud2
jae
mov
into
sbb
mov
shr
pop
pop
sbb
test
sub
aas
mov
loopne
add
sub
xchg
dec
push
and
(bad)
shl
fmul
push
out
(bad)
mov
sub
sahf
bound
data16
int3
xor
push
mov
push
xchg
(bad)
dec
sub
mov
repz
lock
ins
sub
xchg
pop
pop
in
enter
inc
cld
cmp
jno
fisub
popa
cmp
dec
dec
sbb
push
and
pop
jmp
clc
xchg
add
add
xor
rol
addr16
mov
jmp
loope
aam
cmp
(bad)
pop
shl
jmp
xchg
sub
xlat
(bad)
out
or
sbb
aam
ja
or
pop
call
push
dec
or
test
adc
cmp
push
jmp
jp
cmps
mov
pop
add
add
push
push
jnp
cdq
enter
inc
pop
cli
sub
inc
aam
sub
ss
out
sahf
jecxz
dec
sbb
inc
mov
mov
mov
in
push
sub
out
(bad)
pop
dec
outs
add
stos
hlt
mov
out
inc
sbb
icebp
leave
push
pushf
bound
mov
ficomp
fnstsw
cmps
or
jmp
loopne
ss
xchg
add
sahf
inc
adc
stc
push
stos
fcomi
mov
adc
push
or
xor
sbb
retf
mov
sbb
inc
mov
lods
sub
repnz
loopne
dec
xor
xlat
addr16
dec
les
sbb
pop
mov
pop
(bad)
lahf
cs
pop
push
or
cld
mov
and
loopne
and
mov
aad
mov
shr
pop
loop
pushf
and
mov
push
sbb
jno
pop
loopne
test
or
mov
inc
dec
mov
movs
shl
(bad)
and
jnp
ret
mov
(bad)
imul
and
imul
mov
jae
rol
dec
mov
jae
lds
pop
test
add
add
test
jmp
dec
cmp
fcomp
mov
add
cmp
push
mov
push
inc
test
test
imul
jb
repz
jge
fild
ja
std
xor
popa
and
dec
nop
in
(bad)
(bad)
xchg
leave
jmp
jg
dec
jmp
jp
adc
mov
dec
push
int
stos
pop
fwait
imul
dec
je
push
sbb
sahf
jne
adc
push
lods
sub
dec
enter
call
sub
mov
std
mov
push
jo
and
sbb
xlat
aad
pop
cmp
mov
sub
icebp
xchg
dec
adc
aam
sub
adc
fld
ficomp
leave
rol
jb
lods
fcomp
pop
adc
ins
iret
pop
mov
in
stos
jecxz
std
adc
xchg
shl
jl
sbb
and
iret
cmp
jo
and
adc
ds
push
dec
lea
test
mov
fcmovnu
jl
and
sbb
pop
xor
or
mov
push
and
mov
sbb
mov
mov
mov
addr16
adc
inc
push
cwde
jb
push
mov
sbb
add
mov
cmps
sub
bound
ficomp
push
push
mov
push
sub
cld
fnstcw
js
lahf
add
cs
les
cmp
pop
daa
mov
clc
xor
and
(bad)
movs
push
lock
daa
dec
into
push
push
pusha
adc
lods
rcl
mov
es
dec
fcmovu
shr
(bad)
(bad)
push
popf
ret
xchg
cmp
pop
lahf
adc
xor
push
test
jle
ror
inc
jns
in
inc
and
xchg
mov
cs
and
out
xchg
pop
add
push
sub
cwde
adc
add
repnz
xchg
aaa
mov
gs
bswap
(bad)
loopne
xchg
inc
fdiv
xor
mov
add
ins
push
cmp
mov
iret
ins
std
lea
xor
inc
sub
dec
jmp
rcl
rol
fstp
dec
test
mov
into
dec
jnp
out
sbb
xlat
movs
jg
or
imul
jnp
(bad)
and
or
sub
push
dec
sbb
sbb
pop
or
dec
jl
and
addr16
fcmovbe
pop
pushf
push
pop
xchg
jge
loopne
mov
pop
dec
icebp
ror
sbb
fcom
mov
adc
xchg
inc
inc
push
inc
adc
mov
dec
xchg
test
cmp
fdiv
(bad)
push
dec
(bad)
stc
cmp
lds
shr
push
cld
lds
enter
cmp
dec
mov
aam
ja
jb
mov
sbb
out
cmps
xchg
ds
call
stos
imul
lods
inc
jo
push
inc
clc
cmps
out
aam
add
sbb
pop
loop
mov
xchg
sbb
mov
std
retf
jmp
lock
(bad)
ficomp
dec
adc
xchg
jns
retf
ja
repnz
fst
aas
ins
add
xor
fisubr
cmp
mov
scas
jae
aam
loopne
shl
mov
lahf
(bad)
(bad)
int
out
int3
adc
inc
das
sub
jp
enter
push
and
pop
add
pop
shr
dec
pop
mov
cmp
add
dec
gs
(bad)
push
push
push
pop
xchg
retf
pop
rcr
and
xor
jo
loop
div
push
cmp
or
mov
sbb
pop
and
jbe
test
mov
push
fnstcw
loop
jo
sub
(bad)
sbb
mov
outs
xlat
pop
sbb
iret
cli
les
adc
and
xor
stc
cld
out
and
mov
mov
inc
fucomp
adc
mul
test
xor
and
cmp
ds
xor
fisub
call
sbb
mov
movs
pop
push
cmp
shr
retf
jae
push
in
mov
dec
retf
loopne
pop
ficom
cmovne
xor
adc
pop
xchg
jl
sbb
add
mov
outs
fiadd
js
or
addr16
aam
xchg
mov
cmp
jmp
ins
int
dec
jge
icebp
loopne
push
sub
pop
xchg
neg
pushf
in
push
mov
sbb
mov
les
js
stos
loope
xchg
mov
fcom
dec
sub
mov
mov
lods
repz
xchg
mov
out
fstp
add
cmp
adc
pusha
mov
popa
xlat
sub
sub
inc
std
mov
aas
xlat
ss
out
mov
cld
pop
sub
outs
xchg
mov
or
or
mov
cmp
aam
shl
dec
xor
add
sub
stos
dec
mov
rcl
int3
cmp
(bad)
adc
cdq
xor
fucompp
adc
dec
std
popf
sub
sub
stos
out
jo
mov
cmp
ror
and
push
(bad)
loope
sbb
pop
add
fs
jl
lods
mov
jecxz
xlat
aaa
mov
push
fwait
cmp
rcl
pop
rcl
mov
ja
aas
mov
push
sbb
neg
gs
pushf
push
jo
mov
push
test
ret
pop
xor
test
push
inc
loopne
mov
xchg
xchg
mov
and
fcomp
in
pop
add
pop
xchg
icebp
fwait
xlat
mov
(bad)
pop
test
bound
(bad)
mov
ds
pop
sbb
popf
aam
loop
mov
lods
mov
dec
adc
repz
xchg
out
dec
or
lock
pop
pop
xlat
(bad)
arpl
cmps
stos
sar
fdivr
adc
pop
push
test
push
es
jg
stos
mov
jmp
inc
xor
pop
xchg
adc
push
adc
mov
ins
inc
(bad)
xor
sub
pop
imul
add
in
jmp
pop
aaa
mov
cwde
shr
push
in
sahf
mov
addr16
in
sub
sbb
jl
loop
inc
cdq
inc
xchg
mov
rcr
push
aam
cmp
lods
outs
mov
fadd
sub
pop
in
mov
push
mov
adc
arpl
(bad)
lahf
mov
pop
leave
pop
sbb
fst
push
dec
sbb
xchg
shl
sub
or
xor
cmp
mov
aad
data16
dec
dec
outs
push
cdq
popf
cmp
jmp
aaa
dec
sbb
jne
pop
sbb
cmps
jmp
fdivrp
pop
(bad)
or
xor
arpl
dec
mov
xor
outs
inc
in
das
out
xchg
jmp
fdiv
mov
sbb
fcomp
outs
xchg
adc
push
push
xchg
or
jg
xor
xor
into
enter
jns
ficom
popf
out
mov
call
xor
dec
xchg
rcl
ret
gs
aaa
pop
sbb
loop
mov
push
jp
outs
iret
les
adc
in
and
dec
push
cmc
call
jmp
out
mov
jge
fmul
pop
test
jnp
xchg
cwde
push
push
loopne
sahf
imul
pushf
xchg
imul
mov
movs
int3
jmp
cld
cmp
xchg
xor
mov
pop
(bad)
mov
sbb
pusha
lods
pop
dec
in
push
pushf
and
cmp
pop
mov
sub
dec
cdq
mov
cmp
test
pop
mov
gs
(bad)
ds
int
mov
mov
lea
sbb
xlat
lods
jl
jg
push
std
push
push
sub
pop
lea
in
js
dec
ja
aad
pop
enter
int
adc
fidivr
push
dec
cmp
push
xchg
cmp
mov
pop
scas
(bad)
outs
loope
arpl
xor
idiv
imul
int3
xchg
add
leave
iret
fsub
(bad)
jmp
frstor
add
dec
xchg
pop
aam
out
scas
or
xchg
lock
test
inc
(bad)
fisubr
and
popf
jno
or
fadd
bound
aad
sbb
fsub
xchg
sub
ds
fabs
test
out
pop
jo
in
shl
cmp
not
(bad)
cs
xor
mov
loopne
sahf
fld
jns
pop
push
test
clc
dec
xchg
or
out
xchg
pop
loop
dec
xchg
test
rcr
jno
cs
div
add
inc
pop
jmp
(bad)
cwde
cmp
jl
sahf
js
add
pop
mov
fidiv
mov
mov
jo
jge
arpl
xlat
xchg
and
pop
int3
stc
out
rcl
(bad)
dec
aam
gs
adc
pop
pop
jecxz
mov
stos
pop
loop
dec
fisubr
jmp
imul
mov
int3
outs
add
push
adc
jmp
push
mov
rcl
mov
mov
xchg
or
xor
cmc
inc
xor
push
sub
nop
in
fdivr
xor
jg
stc
fsubr
inc
fld
sub
cmp
push
cmp
pushf
int
or
jne
push
mov
xchg
add
scas
sub
mov
sub
mov
repnz
scas
fcom
mov
mov
cli
or
loop
leave
or
add
push
fbld
lahf
ins
jnp
imul
mov
fstp
dec
fcmovnb
fwait
arpl
clc
mov
enter
push
cli
(bad)
stc
shl
cmp
fs
inc
pop
pop
int
ins
cld
cmp
push
aam
xlat
icebp
add
aam
dec
ret
ds
jnp
xchg
xchg
push
and
pop
loopne
cmp
xchg
and
leave
call
sbb
dec
mov
mov
add
pop
dec
xor
push
outs
or
push
mov
jns
push
pop
push
jge
inc
lock
je
ins
test
cmp
imul
add
call
gs
arpl
mov
or
rcl
(bad)
(bad)
push
sub
push
push
xlat
loope
or
fist
dec
fild
fsub
fcomp
xchg
out
jnp
stos
sub
adc
(bad)
dec
jne
and
lds
fisttp
aaa
cld
push
ins
and
mov
in
into
iret
inc
xchg
and
movs
je
out
sub
pop
xor
sbb
mov
rol
aad
pop
adc
sahf
inc
jno
push
mov
xor
jmp
js
fld
stos
stos
pop
push
fwait
sti
clc
xchg
fwait
xchg
push
sbb
mov
cli
pusha
mov
faddp
fnsave
mov
or
fadd
pop
mov
adc
retf
jns
add
mov
retf
outs
fcmovb
xor
cmps
ss
loope
jb
push
in
sub
retf
and
out
in
or
ror
push
ds
sahf
mov
repz
pop
movs
mov
sbb
cwde
xor
inc
rcl
and
lock
push
icebp
retf
jae
popf
repz
mov
scas
mov
sbb
in
jnp
pop
mov
mov
mov
sbb
xor
movs
(bad)
rcr
mov
xchg
imul
cmps
scas
mov
xor
dec
sbb
xchg
adc
pop
xchg
dec
pushf
push
pop
repz
lods
in
aad
push
popf
pushf
(bad)
mov
in
dec
jnp
cmp
pop
add
aam
outs
jecxz
sub
mov
(bad)
push
cmp
mov
pop
test
loopne
pop
xor
fs
mov
fnstsw
xor
jnp
adc
add
mov
mov
mov
xor
cs
imul
mov
xlat
adc
out
mov
clc
dec
pop
adc
inc
les
or
push
sbb
aaa
mov
mov
push
xor
and
cmc
fdiv
scas
push
sbb
pop
or
xor
jo
(bad)
push
ins
push
mov
add
mov
vhsubpd
pop
inc
(bad)
and
xchg
xchg
add
jle
(bad)
stc
mov
mov
cmps
(bad)
mov
neg
neg
push
(bad)
add
mov
in
fbld
and
push
xchg
xlat
push
rcr
xlat
lods
pop
ret
iret
(bad)
mov
push
rol
(bad)
dec
dec
push
std
mov
(bad)
cld
enter
add
(bad)
in
or
std
shr
add
dec
daa
pop
sbb
jnp
push
sbb
cmps
sub
ror
stos
popf
rcr
pushf
sar
xor
aas
mov
(bad)
rcr
sub
clc
cmps
in
push
inc
retf
inc
ret
cli
jl
jo
or
daa
fwait
mov
addr16
or
push
jae
or
sub
call
adc
cmp
jno
xor
(bad)
aad
xor
mov
repz
jae
adc
dec
pop
ins
jbe
jmp
ins
add
cmp
mov
pop
ja
mov
pop
sar
pop
or
enter
push
mov
and
mov
jl
ja
(bad)
and
pop
mov
and
int3
sbb
xor
jb
push
psrlq
iret
sbb
sbb
fist
inc
mov
cmps
pop
lock
lods
pushf
ret
cdq
imul
adc
push
(bad)
daa
out
and
mov
out
out
mov
or
push
ins
jae
jbe
mov
in
fwait
(bad)
fwait
stc
mov
test
stc
jp
dec
push
sahf
jno
mov
loopne
retf
inc
int
sahf
in
and
xchg
stos
or
jb
fnstenv
pop
jle
jno
stos
adc
sub
fs
stos
nop
cli
ins
(bad)
and
mov
push
xchg
push
pop
and
fnstenv
arpl
and
adc
daa
push
xchg
fimul
jge
adc
mov
ja
mov
pop
dec
push
mov
adc
sub
pusha
jg
xor
add
outs
mov
mov
adc
ins
out
out
dec
stos
sub
fadd
mov
add
fild
icebp
mov
push
loopne
add
mov
fdivp
jbe
stos
xchg
cmp
idiv
(bad)
out
clc
xchg
push
cmp
xor
lahf
fstp
sbb
mov
sbb
not
cs
not
(bad)
imul
in
jle
stos
push
dec
cmp
mov
mov
inc
retf
mov
cmp
jae
cmp
push
sbb
or
mov
daa
xchg
pop
push
fnstenv
push
push
in
mov
and
lea
xchg
outs
or
inc
jge
pop
lea
in
jbe
cmp
fwait
dec
ja
aas
and
adc
cmps
out
push
cs
xor
add
test
push
dec
sub
mov
iret
cdq
cmc
xchg
mov
pop
push
jmp
push
jl
lock
fistp
lock
aam
pop
cmc
mov
mov
imul
icebp
mov
sbb
add
cmp
mov
mov
dec
bound
xchg
xchg
(bad)
push
punpckldq
mov
fimul
test
jb
imul
ja
push
lock
jp
dec
mov
add
sti
aaa
jne
fwait
mov
int
imul
xor
test
push
outs
inc
lods
and
cwde
popa
test
pop
ret
cmc
pop
and
cmp
dec
add
xchg
aam
loopne
dec
cmps
arpl
mov
out
shl
dec
outs
test
mov
inc
or
cwde
inc
mov
xchg
mov
stc
cmps
cmp
cdq
xchg
mov
mov
dec
mov
std
mov
xor
xchg
xchg
dec
add
xchg
pop
outs
loopne
xor
imul
xor
dec
fidiv
sub
mov
jmp
adc
fist
push
add
and
or
pushf
dec
pusha
mov
sahf
addr16
outs
stos
fstp
jae
xchg
aam
cs
add
mov
pop
push
in
pop
cmp
adc
ins
inc
add
add
xlat
das
xchg
fwait
xchg
mov
pop
or
push
stos
jb
and
xor
pop
pop
shl
bound
add
pop
shr
dec
add
push
sbb
push
ins
jmp
lea
dec
dec
idiv
lods
sbb
ficomp
add
shr
mov
repnz
jno
cwde
jp
fisttp
jl
push
daa
fcomp
outs
es
cmp
mov
rcl
mov
out
jmp
jmp
push
cmp
sub
imul
pop
out
mov
repz
sbb
fdiv
pop
out
xchg
sub
cmp
adc
aam
add
clc
fdivr
fist
xchg
lahf
mov
cld
arpl
mov
mov
int3
std
and
popa
mov
mov
and
out
pop
popf
movs
push
sub
xchg
rcl
(bad)
sbb
cmps
and
mov
sar
push
es
sub
(bad)
fld
add
sbb
test
jmp
xchg
dec
daa
clc
mov
ds
mov
not
fnstenv
mov
movs
push
call
mov
std
sbb
(bad)
dec
icebp
pusha
retf
ins
xchg
int3
add
mov
daa
and
xchg
and
ds
(bad)
jecxz
outs
push
rol
mov
push
add
sub
pop
cmps
fucomi
ins
push
aaa
les
ss
cwde
inc
xchg
sub
sbb
iret
add
add
(bad)
mov
push
pop
pop
or
mov
lahf
sbb
retf
fstp
jp
(bad)
adc
xchg
mov
mov
pop
mov
iret
jb
xor
cdq
out
xchg
inc
scas
test
mov
xor
or
mov
or
inc
call
inc
mov
retf
in
fs
pusha
sbb
or
mov
in
jg
fcomp
push
pop
sub
mov
push
add
rcl
ja
test
gs
(bad)
adc
pop
lods
jnp
xchg
jno
mov
sbb
mov
xchg
or
mov
nop
mov
mov
(bad)
clc
fstp
mov
mov
inc
jle
(bad)
cmp
sbb
lahf
push
dec
pop
push
leave
fwait
rcl
test
rol
adc
push
cmp
dec
pop
nop
dec
lods
hlt
push
xor
mov
jnp
mov
and
adc
sub
icebp
dec
cmp
enter
xor
jg
shr
js
outs
rol
out
int
push
dec
cld
mov
rol
iret
adc
lea
pop
mov
push
xchg
je
xor
push
in
sub
scas
mov
xchg
add
push
lods
mov
push
pop
push
inc
(bad)
inc
xchg
addr16
ficomp
xor
in
and
fs
push
dec
pop
jne
(bad)
and
mov
push
mov
sbb
shl
sti
lea
and
rol
jnp
lock
xor
in
dec
push
outs
jae
dec
mov
add
sub
movs
dec
or
and
add
mov
fnstsw
call
dec
adc
mov
push
(bad)
arpl
jbe
ins
(bad)
stc
mov
push
sub
push
push
push
ror
in
les
push
div
pop
imul
jo
out
int
adc
mov
and
sbb
and
and
mov
sub
int
sbb
(bad)
jmp
cmp
imul
sbb
mov
ins
ja
out
xchg
or
or
bound
ret
mov
pop
inc
sub
mov
aad
dec
push
dec
add
ss
popf
cmp
(bad)
xor
in
xor
shl
ss
ss
rcr
out
mov
(bad)
dec
push
ds
loop
jmp
iret
pop
enter
stos
into
fstp
mov
jno
fdiv
dec
retf
xchg
outs
sbb
stc
dec
fdiv
enter
add
mov
cmps
mov
pop
xchg
sbb
retf
std
pusha
inc
xlat
add
test
push
xor
pop
clc
jg
add
inc
in
int3
bnd
fcom
jno
mov
pop
jnp
cmp
dec
scas
xchg
out
push
dec
inc
imul
retf
test
inc
out
rol
pop
jmp
mov
psllw
mov
dec
ins
pop
fwait
xor
mov
xor
std
test
stos
ss
jmp
inc
ds
test
lods
imul
inc
sub
inc
ins
in
mov
push
aam
adc
cmp
mov
sub
not
lock
lahf
push
out
mov
lods
rcl
mov
fadd
mov
xchg
addr16
xlat
std
mov
sub
pop
xchg
fs
mov
pop
inc
lock
aas
fsub
xchg
cs
jle
rcl
pushf
mov
ret
cmp
fmul
pop
mov
ret
outs
loop
fnsave
out
sub
sub
dec
push
mov
jecxz
ins
push
jmp
jle
loope
mov
aaa
sbb
push
loopne
fcomp
hlt
pushf
movs
dec
pop
(bad)
cmp
push
jmp
test
in
mov
mov
add
push
or
jnp
jae
push
into
dec
sbb
pusha
and
imul
sub
push
mov
in
add
or
cmp
sub
out
push
int3
add
push
ins
loop
mov
lods
pop
mov
mov
pop
mov
cld
mov
sub
arpl
mov
jmp
sub
or
push
mov
lods
dec
leave
repz
sub
sbb
add
sbb
xor
cmp
test
pop
jmp
cli
add
mov
popf
pop
movs
lods
gs
and
jb
mov
mov
sub
pop
in
sub
jp
test
or
adc
xchg
xchg
cmp
sbb
xchg
nop
push
repz
jmp
repnz
fidiv
pop
mov
push
fstp
mov
out
dec
loop
mov
ds
add
jns
call
cmp
push
dec
clc
sub
or
or
outs
ret
or
dec
mov
aas
out
pop
and
lods
sbb
in
xor
repnz
stc
pushf
cmp
in
ficom
add
fcomp
(bad)
cmp
inc
xchg
(bad)
push
imul
dec
dec
mov
imul
cmp
leave
fisubr
cmp
pop
out
aam
mov
bound
enter
and
cmp
xchg
sar
outs
test
mov
clc
les
xchg
call
xor
cdq
lods
fcom
xchg
pop
mov
sbb
addr16
pop
addr16
(bad)
dec
nop
xchg
and
xor
mov
and
ror
rol
loopne
cmp
inc
sti
jmp
int
aas
push
cmp
and
call
fs
xor
inc
mov
mov
pop
es
push
dec
cdq
xchg
and
mov
outs
dec
pop
xchg
mov
mov
pop
fild
add
jnp
(bad)
xchg
outs
movs
or
cmova
dec
inc
jp
add
cmp
pushf
mov
and
push
xor
pop
jle
pop
xchg
sub
lahf
jp
test
(bad)
or
xchg
sub
shr
pop
inc
loopne
iret
mov
out
pop
add
and
cs
jae
aas
add
jae
xchg
ficomp
mov
mov
repnz
mov
adc
pushf
or
mov
and
sbb
test
sbb
enter
ins
ss
push
push
mov
jmp
push
pop
arpl
jo
push
xchg
mov
xchg
aad
lods
fimul
retf
sub
(bad)
enter
inc
mov
movs
xchg
jnp
cmp
stos
imul
sbb
push
pop
mov
cdq
mov
inc
jns
div
int3
push
pop
cmps
jmp
push
jns
pop
inc
jmp
(bad)
dec
push
sbb
or
lock
xor
pop
mov
pop
into
mov
neg
cs
dec
sbb
jns
mov
dec
lods
xor
cdq
inc
jb
pop
stc
ins
aam
xchg
mov
sbb
jp
out
adc
not
les
pusha
in
(bad)
ja
mov
mov
push
jne
inc
sbb
mov
stos
mov
sub
push
sub
aam
imul
push
pop
(bad)
xor
push
fistp
mov
adc
repz
fst
in
cs
cwde
cmp
sub
xor
dec
ror
cmp
dec
das
pusha
pop
dec
mov
jge
enter
adc
std
cwde
pop
xor
test
push
add
int
mov
popf
mov
xor
and
jnp
inc
(bad)
fistp
xchg
mov
ret
sti
ds
inc
sbb
mov
fadd
mov
and
pop
jmp
stos
outs
(bad)
sub
repnz
mov
(bad)
xchg
mov
test
xchg
sbb
push
sbb
mov
(bad)
pop
mov
ss
outs
jmp
sbb
arpl
or
mov
lds
add
mov
xlat
into
call
rol
jge
pop
dec
mov
or
add
pop
gs
jnp
ret
jmp
sbb
jb
pop
jb
jne
mov
mov
jmp
pop
or
dec
sbb
jg
adc
mov
cli
arpl
mov
lea
fist
aaa
pop
sbb
out
fwait
shl
lods
sbb
push
dec
xor
cmp
(bad)
cmp
div
dec
cmp
push
repnz
mov
sub
ins
adc
call
sbb
cwde
cld
scas
or
into
push
out
into
xchg
leave
fsincos
jnp
dec
ins
mov
pop
xor
test
mov
xor
and
imul
(bad)
(bad)
lock
sub
fimul
mov
out
pop
dec
fcomp
xchg
ficom
push
push
xchg
mov
xchg
scas
pushf
cld
test
and
test
aad
push
push
xor
ins
(bad)
dec
push
rol
iret
push
(bad)
fimul
cmps
mov
fadd
pop
stos
push
push
sbb
or
mov
adc
add
pop
pop
cmp
repnz
(bad)
or
lahf
(bad)
stos
les
sub
push
xor
aas
mov
xchg
dec
rcl
(bad)
adc
aaa
mov
mov
pop
sub
popa
sub
mov
jg
out
pushf
jno
jns
push
push
es
dec
mov
fist
jge
std
and
mov
popa
pop
(bad)
icebp
or
icebp
out
mov
push
dec
xor
inc
daa
and
outs
and
inc
add
adc
inc
jge
mov
adc
push
scas
retf
dec
repz
fwait
fs
cmps
pop
sub
dec
cvttps2pi
pop
mov
imul
test
cs
jp
xchg
pop
lds
pushf
and
iret
int
dec
inc
dec
lods
xchg
xchg
div
jl
repnz
fld
and
ficomp
dec
sub
mov
mov
add
or
xchg
sbb
mov
mov
je
daa
mov
pushf
mov
fsubr
mov
inc
aas
hlt
cmp
daa
pop
comiss
push
jns
fstp
jmp
xlat
mov
xchg
push
and
sbb
xchg
or
jp
cmp
jnp
pop
cmpps
(bad)
mov
pop
clc
pushf
mov
jnp
push
shl
les
cmps
fs
and
xor
(bad)
in
js
add
mov
sbb
cmp
ja
cmps
dec
rol
stos
jmp
ret
das
cdq
imul
popa
sbb
in
jp
mov
adc
rcl
mov
rdpmc
dec
cmp
pop
push
data16
fist
cdq
pop
inc
dec
inc
push
(bad)
fisttp
je
mov
xor
pop
pop
adc
pop
jmp
push
std
add
pop
inc
mov
add
retf
aam
mov
xchg
stos
ds
aaa
add
dec
(bad)
pushf
call
pop
inc
pop
adc
stos
mov
and
sbb
dec
aad
jge
dec
jle
or
ja
push
popa
ja
mov
cwde
arpl
mov
cwde
pop
jno
rcr
jae
cmc
pop
mov
(bad)
sbb
add
adc
fidivr
shr
pop
or
adc
push
push
xor
mov
test
iret
push
dec
dec
sbb
sbb
xlat
mov
jne
dec
(bad)
and
sub
movs
ror
or
dec
fcmovnu
pushf
jno
sbb
es
shl
in
pop
dec
(bad)
in
outs
add
inc
mov
pop
mov
xor
pop
aaa
outs
jnp
aad
pop
fisubr
cmp
jb
push
scas
inc
cld
enter
adc
adc
jg
sbb
inc
push
rcl
xor
inc
loope
xor
sbb
cmp
inc
fcmove
ja
stc
in
mov
pop
push
out
shr
mov
mov
pop
mov
adc
push
cmps
jne
ja
push
outs
inc
adc
ja
dec
cmp
jecxz
std
rcl
push
mov
(bad)
mov
sub
in
pusha
xor
mov
cmp
sub
xchg
adc
mul
lock
sysexit
ins
sub
cmp
jl
xchg
inc
adc
outs
sbb
test
jle
outs
das
loop
(bad)
sbb
js
fucom
mov
jge
xchg
mov
mov
fistp
sbb
fisubr
sbb
loop
adc
(bad)
sbb
call
aas
fcomp
or
imul
dec
int
sahf
mov
mov
sbb
stos
iret
(bad)
addr16
call
icebp
push
add
pop
mov
push
sbb
sub
movs
shl
cmp
cmp
sub
gs
(bad)
mov
add
adc
cmp
nop
ins
jmp
inc
popf
test
dec
cwde
fcom
push
jg
iret
cwde
(bad)
std
dec
or
lods
or
es
(bad)
xchg
pop
cmp
fisub
int
repnz
dec
das
mov
xchg
dec
mov
jae
jp
pushf
pop
and
pushf
stc
into
loopne
inc
sub
lds
and
pop
pop
mov
pop
les
mov
cmc
div
rcl
or
push
and
inc
mov
xlat
mov
adc
inc
dec
(bad)
sahf
bound
push
js
(bad)
cdq
(bad)
pop
xlat
add
push
daa
xchg
rol
fadd
jo
ja
xor
ret
lea
pushfw
fimul
xlat
cmp
bound
dec
adc
outs
push
xchg
les
jo
icebp
adc
or
cmp
sub
push
add
mov
xor
mov
xor
xchg
les
(bad)
sbb
cwde
daa
and
pop
cld
add
rol
es
imul
adc
push
pop
pop
rcr
or
shr
movs
ss
(bad)
mov
push
stc
mov
scas
pop
sbb
fcmovbe
dec
daa
ds
adc
aas
fadd
xor
dec
push
cld
adc
punpckhdq
fdivp
mov
sbb
xchg
jmp
add
icebp
push
mov
(bad)
or
(bad)
dec
fadd
and
std
mov
mov
dec
shl
popf
in
(bad)
test
xchg
lods
and
sbb
mov
fdivr
dec
and
pop
scas
lock
mov
sbb
dec
mov
scas
pop
hlt
js
call
mov
xchg
cs
lods
push
adc
fadd
jmp
sub
pop
dec
lods
loope
inc
sbb
xchg
idiv
xchg
sbb
fistp
lea
push
pop
ret
mov
(bad)
pop
test
adc
mov
out
adc
dec
test
je
out
mov
(bad)
enter
sbb
sbb
pushf
push
in
push
jl
ret
mov
ror
and
push
mov
call
std
xchg
mov
fsub
fnstsw
test
neg
shr
popf
sub
dec
xchg
jge
stc
fmul
push
retf
test
lods
sbb
test
pop
mov
dec
mov
dec
sub
sub
shl
mov
mov
scas
mov
cli
pushf
cmp
test
adc
shl
adc
int3
and
sub
jbe
jb
(bad)
inc
outs
push
xchg
dec
out
dec
(bad)
stc
cmps
mov
pop
jecxz
cmp
repnz
pop
push
push
call
inc
rcl
push
mov
ins
sub
adc
sbb
jmp
sub
cmp
push
sub
shl
fst
(bad)
lock
rol
aam
mov
repz
xchg
jnp
lea
adc
fidiv
rcl
add
push
push
cmp
mov
cmp
outs
dec
(bad)
mov
cwde
daa
or
mov
sub
add
jle
fs
xchg
or
sbb
pushf
xor
mov
loope
fldenv
xchg
xchg
ds
dec
mov
mov
dec
push
sub
lds
stos
pop
push
cmp
sbb
gs
dec
arpl
dec
popa
and
aam
jno
mov
int
pop
adc
inc
mov
sub
int
and
sbb
fcmovb
pop
pop
imul
not
lock
mov
xchg
jmp
ret
sbb
(bad)
std
or
inc
inc
mov
fidiv
sub
data16
push
lea
out
stos
adc
add
xchg
stc
adc
sbb
(bad)
jmp
cmps
fwait
hlt
push
jb
xchg
push
pop
pusha
(bad)
clc
pusha
jecxz
and
add
pop
dec
pop
dec
push
xor
xor
int
lods
sahf
outs
mov
push
out
sub
fadd
stos
jmp
xor
push
in
pop
sub
shl
rol
idiv
mov
ret
push
cs
xchg
movs
mov
xor
(bad)
scas
jmp
fbld
clc
mov
stos
mov
xor
(bad)
inc
aam
out
outs
out
rol
test
and
dec
mov
ret
ss
and
sub
pop
push
mov
jp
nop
das
xchg
lods
xor
sub
movs
xchg
cld
pop
sbb
(bad)
pop
pop
mov
and
sub
push
xchg
daa
lock
outs
cmp
shl
or
rcpps
jno
loop
xchg
or
ret
out
stc
cld
stos
xchg
mov
dec
ins
sub
jge
xchg
ja
jmp
or
into
ja
push
pop
cmp
mov
fucomip
sbb
addr16
adc
mov
jge
mov
mov
lea
jne
add
movs
and
inc
mov
sub
inc
rol
push
fisttp
cmp
inc
mov
inc
ss
int3
scas
inc
cdq
js
nop
mov
mov
xlat
or
(bad)
sbb
scas
cdq
test
loopne
push
cmps
hlt
sbb
lods
mov
add
std
movs
dec
and
xchg
int
jbe
ins
jns
shl
sbb
jae
fidivr
cmp
xchg
sbb
scas
push
mov
pusha
and
pop
lds
rol
sub
pop
xchg
inc
icebp
div
push
dec
cld
gs
stc
dec
mov
and
adc
nop
and
rol
(bad)
mov
(bad)
hlt
rcl
push
pop
pop
sub
push
int
pop
or
xor
stc
and
fstp
hlt
pop
(bad)
cmp
mov
nop
inc
aas
outs
inc
mov
lock
cmps
cmc
dec
cmp
scas
add
jmp
mov
sbb
mov
pop
mov
lods
jno
aam
mul
push
add
jns
push
lea
xchg
dec
mov
shr
sahf
jae
push
push
je
aad
mov
shr
daa
mov
sbb
sub
jge
push
add
enter
cmp
sbb
outs
xchg
in
jg
sub
dec
and
out
push
jg
pop
dec
cmc
pop
pop
add
dec
mov
xchg
aam
(bad)
add
add
aam
dec
jno
retf
sahf
jbe
cwde
sub
xchg
mov
mov
ins
push
int
sbb
sbb
push
and
(bad)
(bad)
push
or
fwait
int3
or
or
adc
hlt
mov
imul
jno
test
dec
lock
lea
shl
(bad)
jmp
pop
outs
push
sub
mov
cmps
adc
xchg
mov
adc
not
push
sub
xchg
and
ins
pop
addr16
fstp
pop
dec
adc
mov
jl
repnz
or
ret
std
addr16
jl
or
dec
mov
std
pop
push
mov
xchg
mov
pop
inc
inc
aam
test
mov
inc
xchg
mov
add
inc
jg
sub
mov
push
pop
sahf
sti
cmp
mov
stos
jne
icebp
pushf
test
sbb
sbb
pop
lock
adc
(bad)
dec
stc
cwde
out
leave
xor
push
xchg
cmp
xor
mov
int
mov
jo
fdiv
add
xlat
fst
jae
push
mov
lods
push
mov
call
dec
jl
add
test
or
or
dec
movs
mov
movs
and
sbb
pop
push
ja
pop
xchg
das
int3
push
cmps
pop
jno
cmp
xchg
rcl
push
mov
daa
push
ds
add
leave
xchg
xchg
pop
pop
xchg
mov
mov
jmp
push
jp
data16
dec
mov
mov
aam
add
mov
sub
bound
jmp
adc
call
pop
pop
popf
cmp
pop
jno
std
ds
or
test
repz
push
out
in
lock
sub
mov
in
fmul
les
mov
xchg
inc
sbb
(bad)
icebp
lods
sbb
loope
mov
out
cmp
cmps
dec
mov
adc
inc
inc
push
jo
rol
sub
popf
fsubr
clc
rol
jecxz
pop
stos
pop
outs
aas
daa
cmp
outs
xor
pop
dec
pushf
loopne
shl
dec
rcr
dec
sbb
and
push
lods
jnp
dec
pop
out
mov
adc
repz
movs
and
add
loope
inc
repz
inc
sub
cmp
mov
add
adc
stos
iret
sub
ror
dec
cld
add
sbb
clc
xor
aaa
(bad)
add
nop
or
je
rcl
push
xchg
pop
fidiv
and
pushf
or
mov
inc
mov
adc
push
sbb
jno
mov
mov
cmps
scas
jecxz
pop
les
xchg
push
and
xchg
xor
jb
mov
dec
loop
(bad)
sbb
mov
imul
pushf
mov
clc
or
div
or
imul
add
jl
dec
retf
in
cdq
call
mov
push
jle
ins
jo
imul
and
in
push
xor
out
xchg
inc
lahf
xor
xor
outs
jg
mov
cwde
in
or
call
jmp
pop
rcr
add
jge
xchg
push
xor
in
outs
ror
loop
lock
mov
jge
push
fisubr
mov
shr
pop
hlt
push
cmp
cmp
dec
loop
lods
call
shl
mov
push
shl
add
lods
jge
mov
lahf
(bad)
mov
imul
mov
fdiv
push
dec
sub
mov
cmp
xchg
mov
dec
mov
popf
into
dec
mov
jae
std
test
cmp
stc
and
lock
cdq
in
cmp
repz
mov
mov
dec
jge
dec
pusha
sbb
test
fs
out
cmp
mov
inc
add
fsub
mov
in
push
jno
sub
xor
mov
add
xchg
nop
jmp
(bad)
jle
ins
inc
push
lahf
xchg
push
dec
fist
push
dec
retf
adc
pop
add
jne
hlt
cmp
adc
lods
push
adc
jo
and
dec
test
xor
inc
fisttp
push
jl
mov
pop
jge
mov
int3
inc
cmp
push
mov
pop
fs
iret
sub
out
pop
out
mov
mov
cmp
pop
sbb
mov
movs
ins
mov
push
dec
aad
pop
mov
(bad)
sub
jne
fcom
lods
loopne
cs
addr16
inc
mov
adc
mov
cmp
xchg
gs
(bad)
mov
or
mov
je
lea
(bad)
push
jae
sub
pop
mov
cdq
sbb
pop
fisttp
pop
ja
sti
mov
leave
scas
sub
arpl
cmps
dec
or
call
fcmovb
ja
sbb
adc
ds
repz
adc
xor
sbb
sbb
adc
call
xlat
inc
jp
clc
inc
imul
ja
div
cmp
push
dec
cmp
add
mov
adc
push
pop
fdecstp
mov
xchg
div
mov
call
push
in
(bad)
aaa
imul
cmp
inc
ss
in
cmp
mov
and
dec
pop
shl
inc
push
fild
dec
xchg
adc
ss
xor
adc
scas
addr16
sub
mov
and
pop
xchg
add
inc
mov
jo
xor
mov
loopne
cmp
or
and
fisttp
(bad)
cld
xchg
add
cs
and
xlat
xchg
jnp
sti
(bad)
xchg
jge
pop
into
fldenv
mov
dec
xchg
(bad)
mov
mov
adc
push
jmp
dec
pop
jle
in
pop
call
or
push
out
add
and
stos
repz
adc
xor
jmp
ins
ja
xchg
pop
fwait
ss
das
inc
pop
out
nop
jmp
and
sbb
test
mov
xchg
ins
mov
xor
pop
movs
aam
push
and
hlt
gs
and
dec
inc
sar
jmp
inc
in
jmp
cmps
jge
pop
stos
or
test
scas
pop
xlat
retf
and
inc
dec
inc
push
sub
stos
aam
bound
cs
adc
ja
xchg
or
sub
into
(bad)
mov
jle
dec
adc
call
mov
shl
and
test
adc
dec
xor
jnp
dec
mov
or
jge
imul
xchg
sub
(bad)
mov
mov
call
in
aam
inc
(bad)
clc
sub
mov
movs
pop
xor
jp
pop
dec
push
clc
xchg
aam
cmp
sub
mov
dec
jl
fstp
pushf
(bad)
mov
cmp
sti
sub
call
out
arpl
or
dec
jb
stos
aad
fwait
adc
(bad)
ret
xchg
mov
dec
pop
adc
arpl
xlat
cli
and
inc
jge
cwde
xor
and
cli
xor
mov
enter
dec
dec
cmps
movs
jnp
ins
cmp
adc
iret
add
mov
cwde
mov
jge
leave
neg
push
mov
repnz
in
mov
stos
inc
inc
fdivr
(bad)
mov
dec
outs
fidiv
push
rcl
rcl
adc
sub
jae
lahf
jecxz
(bad)
fiadd
loop
rol
mov
fldenv
ins
paddq
xlat
dec
(bad)
adc
pop
inc
sbb
push
cmc
dec
pop
xchg
mov
retf
or
fldcw
pop
dec
jmp
inc
popf
(bad)
cmp
scas
loop
pop
cmp
xor
(bad)
sti
sub
sar
jo
sbb
mov
pop
pop
aad
shl
mov
cmp
ret
mov
adc
cdq
cmp
dec
je
in
push
int3
xor
mov
mov
sbb
jnp
pop
nop
mov
xor
loopne
dec
imul
xchg
(bad)
out
dec
jmp
sahf
cmps
daa
movs
(bad)
sub
popf
cmps
xlat
mov
mov
mov
dec
sub
mov
test
push
iret
jmp
fist
jmp
je
jne
jmp
clc
sub
call
adc
into
sbb
aaa
pop
mov
add
adc
mov
adc
cld
xor
dec
aam
jmp
icebp
retf
test
xor
enter
(bad)
push
push
in
stos
jno
or
mov
mov
(bad)
(bad)
and
gs
push
ror
push
es
pop
daa
(bad)
gs
dec
cmps
outs
fdivr
movs
sbb
fisttp
and
push
dec
fimul
pop
sbb
out
int
ss
hlt
mov
xchg
mov
dec
sub
jl
int3
fld
cmc
inc
xor
sbb
jo
dec
cmp
jmp
pop
icebp
pop
cmp
sbb
popf
jmp
enter
cld
sar
les
add
int3
scas
mov
push
mov
or
xchg
shl
lods
jge
int3
enter
call
ror
jbe
and
mov
loopne
icebp
xchg
pusha
je
shr
jae
fmulp
in
pop
sub
add
adc
or
js
mov
out
cld
psrld
push
fisttp
int
mov
add
dec
shl
mov
sbb
div
(bad)
(bad)
in
or
pop
push
or
adc
mov
sub
aam
mov
ds
aad
dec
add
jnp
scas
mov
sub
xchg
dec
idiv
ja
scas
std
mov
and
add
in
pop
and
lods
or
mov
jno
dec
ins
pop
push
and
and
outs
stos
mov
movs
pusha
ds
mov
pop
mov
(bad)
cld
jl
(bad)
fwait
enter
cmp
(bad)
(bad)
mov
aam
lods
inc
jecxz
call
jae
ror
pop
push
into
rcl
or
aaa
and
in
mov
and
pop
jno
push
cmp
repz
dec
retf
jne
fmul
push
fiadd
in
out
adc
fild
mov
xchg
and
sbb
ins
or
cmp
fucomip
aad
popa
outs
cld
fidiv
fisttp
or
aas
aad
dec
cmp
sub
loope
ret
dec
jne
dec
test
imul
jbe
pop
dec
(bad)
call
xor
test
retf
je
lods
out
cmps
add
dec
mov
or
ins
fnsave
jne
mov
mov
test
cmp
mov
addr16
nop
pop
popf
pop
dec
push
(bad)
sbb
je
fidivr
retf
inc
cmp
ins
fcmovne
aaa
jmp
rol
push
pusha
cmps
push
jne
cmp
lock
stc
(bad)
mov
test
and
stos
retf
or
cdq
(bad)
xchg
cmps
cmp
add
pop
xchg
adc
out
or
into
ficom
and
or
stc
sbb
cmps
(bad)
jge
add
pop
pop
mov
inc
ins
clc
or
dec
pushf
data16
dec
cmp
add
cdq
add
push
sar
cdq
push
icebp
pop
mov
out
lods
lock
sub
cwde
dec
dec
sbb
pusha
xlat
cld
push
push
int3
cmps
xchg
dec
sbb
jmp
jg
shr
add
push
mov
xor
adc
sbb
aaa
jmp
mov
xchg
add
int
popf
mov
call
jne
and
fwait
pop
(bad)
push
adc
into
pop
inc
shl
idiv
(bad)
std
repnz
xchg
fmul
add
xlat
xchg
leave
push
adc
out
mov
mov
cld
aam
push
ret
(bad)
into
add
ins
stc
cli
cmps
outs
out
ret
and
in
test
mov
sub
aaa
xor
iret
adc
ja
sbb
je
inc
out
dec
neg
cmp
(bad)
mov
mov
scas
cs
mov
xchg
jmp
neg
push
and
dec
mov
lock
out
push
sub
pop
int
inc
mov
mov
and
sbb
int
xchg
mov
pop
push
mov
lods
jp
fdivp
jno
pop
icebp
dec
les
stos
ins
(bad)
push
jl
dec
inc
jge
push
out
inc
sbb
inc
inc
std
test
mov
psubb
add
fild
inc
lock
not
cmps
aam
data16
xchg
clc
sbb
popf
xchg
inc
sbb
mov
fld
loopne
jg
pop
js
mov
jb
push
fistp
and
fdivp
sbb
or
in
fdiv
push
lock
dec
fadd
push
adc
pushf
pop
jmp
or
mov
xor
xor
int3
pop
dec
div
fsub
arpl
jmp
xchg
push
cli
cli
inc
ja
fidiv
dec
and
push
xchg
xor
cmp
rcl
jne
es
pushf
test
pop
inc
push
jo
dec
pop
or
fldpi
and
push
add
xchg
xor
call
pop
lods
inc
in
cmp
push
add
into
cld
mov
push
addr16
pop
lea
mov
in
mov
push
push
sub
add
addr16
not
cs
scas
and
push
adc
cwde
mov
jnp
out
imul
fdivr
scas
scas
jmp
adc
dec
jle
adc
test
out
ja
aaa
arpl
test
cmp
retf
adc
test
in
lahf
push
adc
or
pop
arpl
push
add
clc
inc
arpl
push
repz
stos
cmp
cmp
mov
sbb
adc
sar
fldcw
xlat
sbb
cmp
fwait
in
retf
cdq
daa
(bad)
into
cmp
sbb
fldpi
lods
rcr
push
sub
mov
lods
and
ins
test
aaa
sub
adc
mov
stos
loope
or
inc
fadd
dec
mov
(bad)
push
push
inc
inc
sar
and
fmul
pop
daa
lea
mov
ret
loope
movs
test
pop
call
and
cmp
pop
sub
adc
jecxz
jmp
pop
xor
sbb
jmp
and
loopne
mov
fcmovbe
loopne
adc
mov
popf
sub
xor
push
push
pusha
dec
pop
sbb
fld
pop
test
mov
mov
jl
icebp
int
out
cmc
es
push
fstp
xchg
push
xchg
inc
in
cmp
cmps
xchg
clc
and
sub
sub
mov
jg
xor
div
pushf
pop
fcomi
cdq
xchg
mov
imul
adc
rcr
nop
int
scas
std
js
ficomp
sahf
(bad)
mov
mov
xchg
vpextrw
lds
movs
mov
mov
xchg
ret
inc
jl
retf
lods
mov
lods
mov
in
jle
mov
xchg
pop
inc
push
(bad)
jo
sub
push
jg
sti
push
aam
sbb
dec
fcmovb
pop
and
ret
jle
fisttp
loope
in
das
cmp
push
out
pop
pop
sbb
ja
sub
pcmpeqd
icebp
idiv
mov
push
jo
popa
fcom
push
inc
and
addr16
xor
dec
data16
repz
test
pop
xor
adc
out
xchg
mov
xchg
mov
xchg
adc
aaa
stos
ffree
sbb
add
xor
mov
repz
inc
dec
sar
add
loop
jle
aaa
loope
mov
verw
pop
(bad)
mov
jmp
sar
add
mov
das
jle
mul
jge
mov
cmp
gs
pop
mov
cmc
push
out
arpl
out
cwde
push
jmp
jp
ins
push
retf
pop
and
jne
es
sub
push
stc
inc
in
lea
call
test
std
hlt
mov
push
push
scas
lahf
cmp
mov
ret
sbb
in
jmp
pop
mov
cwde
(bad)
ds
mov
cmp
sub
and
push
arpl
sub
daa
push
mov
inc
(bad)
fsubr
push
cmc
cmp
add
jnp
pusha
mov
stos
pop
mov
in
rcl
lods
add
or
mov
int3
cld
and
push
das
adc
aad
loopne
and
ret
mov
loope
inc
test
jmp
or
sbb
or
push
ret
test
sbb
fwait
out
ds
xchg
pop
cmp
jecxz
daa
sbb
(bad)
int3
mov
adc
cmp
hlt
aam
mov
add
pop
jmp
sbb
enter
mov
outs
push
jbe
cmp
push
sub
sub
xchg
fnstcw
sbb
inc
lea
add
shl
mov
push
iret
inc
dec
outs
xchg
loopne
mov
test
addr16
loop
outs
push
popa
shl
cwde
inc
xchg
loope
mul
inc
cmp
lock
and
addr16
sar
cmp
jno
js
shl
enter
sub
hlt
mov
dec
aam
(bad)
adc
sub
aad
fadd
jge
jmp
nop
add
mov
push
in
rcr
ror
sub
pushf
cwde
dec
sbb
pop
jge
and
iret
pop
and
aam
ins
mov
add
and
or
pushf
arpl
aas
sub
dec
sub
loope
push
fcomp
retf
test
push
jae
push
imul
out
ds
mov
arpl
adc
xchg
shr
enter
jae
or
pop
mov
stos
sahf
jmp
dec
loope
(bad)
fincstp
sahf
add
mov
and
std
in
cwde
inc
aaa
out
jbe
cmc
jge
xlat
xchg
stos
pusha
push
push
in
mov
jno
(bad)
push
cmp
sar
or
mov
fcmove
and
aad
xchg
mov
pop
xchg
jae
inc
popf
mov
xor
cmp
mov
ror
dec
cmp
cmp
mov
(bad)
cmc
test
and
lods
pop
mov
out
sub
fs
xor
(bad)
retf
dec
push
jp
xor
sbb
ja
test
inc
cs
mov
aas
fldcw
xor
mov
lds
xchg
and
cmc
imul
fnstenv
scas
inc
nop
not
ins
mov
jb
pop
jp
fs
test
cmp
jae
into
aam
sub
loop
xchg
cmps
lods
mov
mov
mov
dec
dec
xlat
mov
cmp
out
aad
loop
cmps
adc
inc
add
push
mov
into
out
retf
test
ficom
jmp
xor
mov
out
cmp
bound
add
ss
(bad)
aaa
fmul
sbb
dec
or
outs
ret
bound
mov
sub
jmp
and
jmp
dec
jns
add
mov
sbb
iret
pop
pop
fadd
in
cs
cdq
sahf
das
dec
mov
scas
aam
inc
rol
jmp
arpl
xor
cmp
in
popf
out
mov
aad
xor
add
pop
inc
pop
mov
dec
dec
out
cmp
jnp
(bad)
mov
leave
pop
arpl
inc
sub
dec
xor
push
test
xchg
ja
out
xor
ja
dec
xchg
(bad)
iret
cmp
inc
mov
aam
shl
(bad)
pop
pushf
inc
push
cli
test
pop
(bad)
shl
push
stos
cmps
xor
xchg
add
icebp
(bad)
mov
mov
mov
jo
adc
mov
ret
call
cdq
sbb
push
out
add
push
test
scas
mov
das
loopne
mov
xor
mov
xor
iret
sar
scas
stc
jnp
mov
inc
sbb
push
sub
xchg
jno
push
(bad)
jnp
sub
sub
inc
movs
xor
ins
clc
pop
fld
daa
ins
push
nop
lahf
aaa
lods
xor
xlat
pop
mov
or
(bad)
ficomp
in
mov
cmp
push
in
ins
push
or
test
fdiv
xor
xacquire
push
cmps
jae
pop
inc
sbb
ja
adc
adc
mov
push
in
fcomp
sbb
sub
test
add
nop
adc
dec
inc
lods
push
pop
ins
mov
(bad)
adc
cli
and
xchg
sti
cmp
mov
imul
retf
out
cld
cmps
xor
rcr
popa
sub
dec
and
push
sbb
push
xchg
or
mov
fst
xchg
jno
ds
(bad)
jo
fstp
mov
(bad)
fisttp
dec
shl
xlat
in
pop
pop
jae
mov
fisttp
sub
xstore-rng
cmps
les
movs
cmp
in
enter
pop
adc
pop
test
add
mov
aad
(bad)
nop
or
mov
mov
mov
inc
push
dec
pop
pop
inc
sbb
dec
rcl
inc
and
pop
mov
xor
nop
jnp
cmp
jns
jmp
jg
xchg
and
call
mov
push
fs
inc
mov
(bad)
add
in
aaa
add
sub
xlat
sahf
xor
in
xor
loopne
sahf
mov
pop
ror
les
lds
jno
in
and
push
or
sub
imul
ret
ret
push
and
pop
cmps
jmp
jecxz
aaa
movs
push
and
test
mov
pop
cdq
jge
add
lahf
mov
jae
pop
push
retf
xchg
jnp
jecxz
and
stos
clc
xor
cmp
pop
cmps
fist
dec
mov
xchg
or
stos
mov
sbb
push
and
adc
rcr
mov
lods
fdivr
rcl
jecxz
push
dec
ja
(bad)
pushf
pop
adc
jbe
sub
arpl
outs
imul
hlt
inc
lahf
pushf
xor
retf
(bad)
dec
lahf
jge
dec
aad
adc
sub
test
fiadd
and
mov
add
ret
inc
jmp
fwait
ret
movs
mov
pop
cmps
mov
add
mov
nop
push
shl
(bad)
loop
sub
pop
mov
loope
fcmovu
xor
sbb
(bad)
fdiv
nop
test
clc
(bad)
jmp
clc
inc
or
sub
movs
iret
repnz
fcomp
pop
sar
mov
das
(bad)
fdivrp
sbb
mov
imul
popf
test
ss
lds
xchg
push
jp
add
dec
sbb
xor
inc
into
sbb
jb
daa
sub
ror
sub
and
jmp
dec
out
adc
inc
gs
push
sar
mov
arpl
fidiv
jae
sar
imul
mov
out
push
sub
pminub
test
aas
scas
cdq
jnp
add
inc
sub
mov
mov
push
test
dec
mov
popf
mov
add
jae
retf
add
jns
fcomp
jg
fcmove
dec
aaa
pop
mov
or
iret
fbld
bound
adc
pop
nop
dec
push
adc
mov
out
jecxz
ds
sbb
push
dec
fisttp
cmp
aad
or
jecxz
mov
pushf
push
pop
push
push
mov
mov
fcom
mov
das
mov
(bad)
scas
cmp
popf
or
fadd
cwde
pusha
sub
das
mov
sbb
les
mov
sbb
sti
rcr
dec
cmp
jle
xor
fstp
pop
(bad)
adc
dec
jp
pop
in
add
lods
mov
push
jp
lods
xchg
push
jl
mov
mov
or
dec
inc
cli
cmp
std
mov
push
icebp
push
lds
adc
loop
test
(bad)
in
jo
js
pop
call
pop
ret
icebp
jge
xchg
add
mov
loopne
sbb
mov
inc
shl
test
mov
and
popa
cmp
xor
dec
or
mov
xchg
ds
pop
push
mov
ficomp
les
adc
mov
lea
loop
(bad)
mov
push
inc
pushf
shl
cmp
dec
pop
(bad)
outs
push
mov
cmc
(bad)
jmp
mov
jno
cli
dec
inc
or
cmp
sar
push
mov
mov
jb
mov
inc
mov
push
fmul
les
mul
imul
jbe
xlat
mov
out
sbb
js
pop
xchg
iret
mov
jp
lods
push
mov
xor
loopne
inc
imul
dec
add
loopne
sub
nop
add
sbb
daa
xlat
mov
fmul
add
loopne
and
sub
pop
cwde
cmps
push
lock
mov
xchg
and
pop
push
loop
out
cmps
out
ret
aad
(bad)
cmp
iret
popf
mov
fdivr
adc
in
into
push
xchg
xchg
loopne
mov
icebp
call
es
popf
inc
nop
cmp
dec
push
inc
adc
mov
(bad)
push
in
call
dec
add
dec
aam
add
sbb
repz
mov
inc
aam
sti
xchg
dec
cmp
mov
aaa
xchg
mov
fsub
mov
ret
in
push
sahf
pop
shr
cmp
inc
push
sub
add
scas
imul
pop
and
cmp
addr16
scas
jge
aad
sti
xor
pop
jmp
cmc
mov
xor
mov
sub
jnp
jo
dec
cmp
sti
test
pushf
imul
add
cmp
xchg
jge
stos
out
xor
(bad)
dec
jge
(bad)
mov
shr
mov
pop
xlat
pop
das
mov
scas
mov
push
pop
in
aaa
mov
add
popa
dec
pop
xchg
in
(bad)
imul
pop
inc
inc
cmp
sbb
fnsave
lock
dec
fsin
mov
(bad)
sbb
mov
inc
loopne
test
sahf
mov
out
sbb
mov
cld
rol
imul
fldpi
mov
sahf
mov
mov
inc
jmp
cmp
xlat
arpl
add
mov
lds
jbe
add
xor
in
jl
test
std
aad
lock
pushf
push
cmp
mov
mov
xchg
xlat
mov
lea
pushf
xor
cwde
xchg
ja
add
mov
adc
rol
mov
ror
xchg
jp
xchg
pop
pop
jno
loope
and
imul
stos
xor
hlt
dec
or
test
dec
and
sub
arpl
pop
xchg
xchg
push
movs
sbb
sub
cmp
dec
loopne
cmp
add
(bad)
fucomp
out
inc
js
lea
pop
fs
ds
push
mov
scas
jo
and
mov
pop
int
popa
(bad)
bound
dec
add
popf
xchg
pushf
pop
test
dec
sub
idiv
mov
ds
push
repnz
repnz
jmp
in
fbstp
jnp
rol
cld
ss
jmp
pop
ret
ret
rcr
lods
movs
lods
dec
into
rcr
xor
js
sbb
push
mov
push
and
add
xchg
sub
cmp
push
cmp
daa
(bad)
test
pop
popf
aam
push
in
test
daa
dec
fwait
scas
ds
mov
sub
dec
mov
sahf
loop
mov
jl
stos
out
pop
pop
ficom
sbb
mov
sbb
cmp
cwde
push
ror
popf
aad
leave
add
cdq
sub
rcl
cmp
not
push
jno
adc
jo
out
(bad)
sahf
sbb
mov
jge
repz
and
jnp
adc
fcmovnbe
push
add
clc
xchg
jmp
pop
daa
repnz
add
(bad)
cs
enter
lea
loopne
inc
pop
and
addr16
adc
nop
shr
shl
xchg
jl
ret
aad
int
mov
test
pop
push
adc
jg
or
cmps
jge
sub
mov
pusha
cmp
sbb
ins
iret
cwde
dec
sbb
inc
(bad)
scas
push
cmp
lods
fs
(bad)
pop
aad
out
inc
or
lods
mov
outs
or
cli
pop
retf
or
push
test
cli
mov
out
and
(bad)
jp
fild
push
cmovne
ins
and
mov
and
sbb
and
mov
call
mov
(bad)
aam
dec
add
fisub
dec
call
inc
std
dec
les
xor
sahf
sub
adc
sub
add
pushf
(bad)
ror
push
inc
inc
sbb
adc
push
(bad)
fistp
mov
push
push
ins
aad
mov
sahf
retf
adc
(bad)
jmp
cmps
push
stos
pop
xchg
push
mov
cmps
rcr
adc
xchg
stc
xor
add
dec
cmp
(bad)
xchg
xchg
inc
sub
scas
jg
sub
inc
fcmovu
inc
sbb
adc
cmps
pop
pop
int3
mov
(bad)
mov
pop
jmp
je
sbb
xchg
mov
ins
stos
jge
xchg
xchg
push
add
sti
jne
sub
std
mov
pop
cmp
xchg
push
shl
and
popf
cmp
pop
jne
xchg
inc
adc
daa
xchg
sub
pop
in
add
and
and
in
movs
repz
rcl
fwait
push
jmp
das
add
sub
(bad)
scas
ret
xchg
jo
xor
mov
jne
jle
mov
test
ja
push
rcr
pop
imul
dec
in
(bad)
ins
push
cmp
sub
and
iret
nop
lahf
mul
imul
push
lods
nop
cdq
jne
adc
jnp
and
popf
loopne
ss
push
pushf
pop
in
es
(bad)
std
nop
hlt
ror
rcl
mov
mov
hlt
pop
cbw
sbb
mov
jle
fsub
push
neg
fsubr
jle
movs
jmp
jmp
fwait
retf
(bad)
xchg
(bad)
dec
sbb
aam
pop
push
(bad)
lds
outs
cmp
cmp
inc
es
mov
dec
cs
or
mov
pop
out
dec
mov
enter
mov
inc
pop
cdq
rcl
xchg
call
mov
js
push
add
aaa
sbb
fcomp
add
aaa
inc
ret
movs
(bad)
cld
xchg
aam
push
(bad)
pop
pop
dec
mov
shr
test
repz
pop
cld
push
ins
std
xchg
inc
popf
mov
cmp
push
cmp
mov
fs
sbb
xchg
mul
add
dec
pop
cmc
pop
cwde
inc
mov
out
mov
(bad)
fld
xor
add
aas
ss
cld
call
mov
mov
out
movs
pop
push
imul
arpl
rcl
test
in
pop
add
js
icebp
jge
clc
sbb
hlt
clc
les
pusha
push
out
push
sub
mov
and
outs
sbb
jecxz
inc
xor
dec
iret
cmp
add
sbb
mov
pop
shl
ret
imul
pop
and
mov
jbe
mov
push
jo
sub
adc
movs
aam
into
or
in
(bad)
lock
mov
or
loopne
jle
mov
aad
push
int
jecxz
ret
popf
call
and
mov
popa
(bad)
shr
(bad)
push
pop
add
mov
push
jmp
add
mov
push
xchg
shl
lods
rol
push
cmp
jp
xlat
fdiv
pop
scas
repnz
aad
mov
mov
(bad)
pop
(bad)
push
mov
pop
(bad)
outs
pushf
pop
stos
test
push
movs
(bad)
cmp
imul
push
lods
pop
dec
mov
out
and
or
scas
push
inc
jb
(bad)
ins
sub
sub
add
cdq
xchg
mov
add
and
sbb
das
dec
aam
pop
xor
rcr
jp
cmp
mov
std
jmp
adc
mov
sub
push
iret
mov
mov
pop
adc
cs
pop
dec
cmp
adc
xchg
jnp
mov
mov
inc
call
jl
not
ds
addr16
fadd
imul
jmp
jns
gs
nop
aam
pop
arpl
fdiv
pushf
sbb
rcr
out
or
addr16
(bad)
push
push
int3
mov
ret
in
jb
sub
(bad)
push
dec
rcl
mov
push
cmps
je
lods
push
fs
pop
xchg
mov
add
mov
call
mov
(bad)
pushf
cli
loopne
xchg
push
add
out
ror
lods
int
adc
xchg
sub
adc
test
pop
sbb
mov
loop
xor
cmp
iret
lock
xchg
test
pop
mov
mov
pop
mov
xchg
and
stc
or
mov
stc
ret
inc
dec
jo
je
cmc
mov
fsub
add
jae
push
xor
pop
dec
ja
jno
and
sti
into
(bad)
push
pop
stos
scas
dec
out
dec
call
ret
cmp
sahf
scas
or
xchg
xchg
add
loopne
mov
xor
or
sar
cli
xlat
ror
pushf
xlat
mov
in
dec
dec
fdivrp
jle
lea
lods
std
sbb
and
mov
sub
imul
fcomip
fst
lods
xor
xchg
and
fistp
pop
mov
arpl
cwde
pop
and
cmps
(bad)
mov
pop
rol
stos
inc
dec
or
mov
daa
xchg
sbb
leave
lods
mov
mov
mov
out
movs
aad
loopne
mov
xchg
push
ds
clc
shl
inc
inc
out
xor
adc
(bad)
jne
add
aaa
ins
sub
cwde
mov
aam
push
dec
shr
or
xchg
dec
(bad)
cld
arpl
rcl
aam
add
lea
mov
adc
sbb
pop
push
(bad)
mov
jae
mov
and
in
xchg
es
xor
or
xor
add
in
sub
mov
jnp
loope
inc
repz
arpl
mov
in
mov
sub
call
sub
fisub
fiadd
fisttp
mov
adc
xchg
push
xor
sub
jmp
dec
fincstp
mov
gs
cld
lods
ja
js
cmps
dec
xor
cmp
neg
jno
lahf
out
push
sub
xor
fstp
cmp
loope
cmp
sub
cmps
das
leave
jnp
(bad)
jle
sub
loope
call
iret
xchg
mov
cmp
scas
dec
add
add
xchg
mov
shl
jns
cmp
sub
jo
adc
sti
fbld
add
adc
arpl
jne
dec
or
inc
mov
test
lock
shr
jl
add
or
cmps
xor
into
sub
into
mov
cmp
shr
push
mov
and
jl
pop
mov
(bad)
out
test
pop
jle
pop
pop
pop
clc
sbb
or
fstp
mov
xchg
sbb
and
hlt
adc
icebp
xchg
cmc
lock
push
or
add
loop
int
popa
mov
pop
cmp
fs
push
pusha
or
cmp
daa
jno
cmp
add
adc
je
sub
neg
in
jecxz
add
repz
retf
fisttp
loopne
mov
mov
mov
fisttp
adc
xor
das
sub
mov
add
xchg
cmps
inc
jns
hlt
scas
and
lock
outs
jge
inc
mov
mov
stos
inc
or
test
addr16
inc
pop
pusha
sub
sar
lock
sub
data16
lods
out
xlat
gs
add
std
dec
pop
sub
fsubr
frstor
clc
adc
mov
add
lds
xchg
ret
js
xchg
std
sbb
je
pop
xchg
popf
cdq
enter
shl
popa
dec
xchg
aas
repz
test
imul
or
jmp
sar
and
cmp
ds
test
adc
dec
mov
jb
fcmovbe
sahf
push
(bad)
pusha
mov
(bad)
xchg
dec
dec
xchg
loope
ret
dec
mov
fsqrt
movs
adc
or
xchg
(bad)
xor
loop
xor
push
cmp
xchg
cmp
ins
ins
cmp
cmp
inc
xor
pop
mov
fcomp
dec
cli
sub
pop
mov
(bad)
lock
mov
das
gs
inc
mov
push
neg
or
cld
(bad)
(bad)
icebp
xor
xor
xor
dec
fwait
es
push
adc
sahf
push
mov
and
dec
int3
shl
dec
loopne
mov
mov
(bad)
fdivr
imul
jmp
pop
inc
xchg
fcomp
mov
sbb
mov
jmp
dec
gs
adc
fdiv
mov
lock
xor
mov
pop
xchg
outs
mov
(bad)
push
adc
inc
fldenv
faddp
dec
(bad)
sub
bound
(bad)
dec
in
int
pop
fistp
xor
std
(bad)
dec
pop
leave
mov
aas
jae
lods
icebp
push
cmc
pop
mov
in
fcomi
jo
adc
inc
push
stos
icebp
xchg
jecxz
pop
leave
mov
sahf
fs
(bad)
ins
dec
push
jns
sbb
add
cs
rep
outs
cmp
fnstcw
sahf
xchg
xor
sysexit
mov
ret
scas
fs
xchg
std
daa
cld
imul
mov
xchg
pushf
(bad)
ror
mov
enterw
sub
dec
push
pushf
data16
shl
add
imul
neg
jne
mov
cmp
push
sub
pop
in
fild
aad
(bad)
add
ja
nop
cmp
and
aaa
cmps
sar
add
push
lock
cmp
cmc
fisub
test
mov
js
call
cmps
sub
fld
dec
mov
xor
mov
mov
iret
cmp
enter
jle
fdivr
push
add
push
xchg
mov
mov
icebp
in
sbb
inc
xor
ror
int3
xchg
sbb
dec
and
mov
call
sbb
mov
jnp
lock
out
lock
sar
adc
and
or
mov
jge
aad
mov
jmp
inc
pop
mov
push
rcl
and
mov
xchg
lds
mov
pop
push
mov
push
pusha
mov
sub
ins
imul
mov
test
sub
mov
mov
sub
or
mov
pop
or
arpl
add
fcom
push
sbb
addr16
sub
inc
fdivr
jnp
mov
(bad)
jnp
pop
jo
aas
data16
ret
inc
int
and
retf
pushf
js
push
js
cdq
sbb
(bad)
sub
or
mov
xchg
xchg
inc
push
jbe
and
fdivr
jae
dec
les
data16
cdq
mov
rol
iret
mov
hlt
sbb
imul
fld
cmp
dec
xor
sub
ficom
popa
scas
psraw
fidivr
jae
sub
lods
ror
adc
push
jae
(bad)
or
out
mov
pop
xor
dec
push
mov
(bad)
in
aam
xlat
arpl
leave
and
sub
mov
mov
sbb
push
jae
inc
cmc
add
mov
int3
call
rol
sbb
mov
sti
adc
cs
lea
fcmovbe
inc
jmp
mov
das
and
jge
int
inc
sbb
dec
mov
movs
dec
sub
popf
xor
(bad)
retf
test
js
push
mov
cld
mov
or
adc
loopne
mov
adc
int3
jl
out
int
(bad)
xchg
mov
lds
mov
fistp
fbstp
pop
push
jmp
cs
je
mov
mov
loopne
xor
in
and
dec
sbb
or
mov
jg
mov
outs
jo
sub
adc
push
dec
ds
or
dec
ret
dec
pop
jmp
cdq
arpl
cmp
aas
xor
pop
jnp
adc
push
pop
jg
or
jle
push
mov
mov
push
xchg
imul
dec
pop
pop
mov
sub
(bad)
shl
loop
xchg
psrlq
mov
cmp
int
pop
ror
(bad)
mov
sbb
cdq
mov
xlat
jge
mov
pop
sub
inc
mov
leave
mov
push
scas
retf
fnstenv
pop
inc
xchg
xchg
ficom
xor
mov
mov
mov
loop
out
ins
xchg
pushf
mov
mov
cmp
adc
mov
mov
movzx
xchg
pop
popa
int
mov
movs
sbb
xor
mov
jo
push
dec
cmp
daa
inc
mov
(bad)
xchg
aas
int3
(bad)
fst
adc
cmp
(bad)
scas
push
jl
stc
jne
adc
xchg
imul
pop
dec
pop
adc
or
cmp
mov
jne
mov
inc
enter
xor
shl
addr16
loope
add
mov
test
xchg
push
ja
push
js
push
fmul
push
pop
cmp
add
or
addr16
shl
movs
jp
ds
pop
adc
cs
(bad)
fcmove
xchg
mov
(bad)
pop
stc
mov
movs
and
and
movs
pop
xchg
push
xor
dec
cmp
jnp
mov
push
js
cmp
or
(bad)
jno
pop
add
lods
leave
inc
jns
shr
sbb
(bad)
rcr
shl
es
mov
daa
in
push
or
dec
xor
loope
fst
test
cmp
(bad)
inc
das
xlat
push
mov
rol
daa
lock
inc
jmp
sub
sbb
xchg
test
dec
clc
dec
lds
xchg
les
or
cmps
mov
push
cmp
addr16
pop
sub
add
mov
push
icebp
adc
stc
push
lea
fadd
mov
inc
stos
jmp
imul
push
adc
pop
addr16
call
repnz
fisttp
int
dec
cld
mov
movs
jmp
xchg
dec
sbb
xlat
movs
and
xchg
add
pop
cmp
dec
jp
std
push
cmp
stos
or
mov
icebp
mov
sub
bound
mov
cmp
push
sbb
icebp
mov
les
adc
rol
pop
sbb
enter
in
aaa
sub
sbb
or
imul
sub
loope
ficomp
dec
or
xchg
test
mov
mov
div
aam
pusha
push
ins
sbb
xchg
jg
shr
shr
xlat
fcomp
sub
int3
sar
push
cmp
ins
jo
or
and
stos
fnstcw
es
lock
clc
out
mov
pop
imul
sbb
pop
sti
lods
sahf
nop
popf
pop
hlt
push
pop
push
call
dec
arpl
outs
jnp
and
jle
jae
shr
les
mov
daa
mov
jmp
fcomp
bound
dec
add
dec
arpl
retf
xchg
pop
mov
jmp
cmp
pop
cld
call
test
mov
jle
lahf
addr16
sahf
(bad)
adc
es
jo
adc
in
rcr
mov
jmp
inc
out
adc
fimul
mov
pop
jle
xchg
fldenv
push
mov
shr
dec
inc
pop
sub
imul
jmp
or
fimul
in
ret
(bad)
sub
fucomip
add
aaa
cs
add
stc
pop
dec
adc
mov
ret
and
add
shl
stos
jns
cmp
xor
cmc
in
mov
and
into
mov
daa
cwde
in
fidiv
mov
fs
push
ror
inc
rcr
repnz
inc
(bad)
ret
and
sar
adc
(bad)
(bad)
aaa
xor
and
daa
hlt
cdq
jecxz
test
(bad)
int3
and
push
out
mov
pop
lahf
std
inc
stos
lea
push
pop
les
mov
jp
inc
aad
sbb
aam
cmc
loope
cmps
pop
xor
mov
mov
push
int
mov
jp
out
inc
bound
sub
aad
out
mov
(bad)
scas
xor
sbb
xor
loop
outs
adc
pop
dec
div
(bad)
pop
xor
and
push
ror
adc
mov
in
pop
call
or
idiv
add
sub
and
ins
in
js
push
cdq
pushf
nop
cs
mov
not
mov
ins
pop
gs
inc
jg
aad
mov
popa
aaa
add
cwde
xchg
icebp
push
mov
pop
(bad)
jmp
mov
jns
pushf
mov
mov
test
mov
and
cmps
xchg
int3
call
inc
les
dec
xchg
add
lods
fcmovnu
sti
addr16
(bad)
pop
inc
pop
mov
arpl
mov
xor
jmp
push
stos
inc
sbb
lea
rcl
jb
sub
loope
xchg
mov
pop
pop
(bad)
mov
mov
ret
out
mov
mov
mov
mov
sub
aaa
int3
mov
mov
inc
cwde
xor
repz
dec
inc
pop
adc
aam
arpl
mov
movs
mov
mov
xchg
das
dec
mov
add
mov
pop
inc
xchg
ins
inc
and
in
inc
push
xchg
(bad)
imul
add
pop
cli
sub
pop
es
shl
push
aaa
adc
mov
mov
add
hlt
pop
dec
mov
and
sahf
xchg
sub
dec
pop
mov
dec
sub
sbb
and
mov
sahf
fs
mov
bound
loop
push
stos
and
mov
aam
fwait
pop
pop
dec
ret
clc
adc
inc
gs
sub
(bad)
and
jg
aam
aas
scas
mov
pop
ds
push
sub
rol
psubb
mov
fadd
or
sbb
adc
adc
daa
jmp
fcom
mov
sahf
(bad)
push
adc
lock
push
int3
mov
jns
dec
neg
in
test
lock
mov
push
int
fs
adc
dec
out
shl
push
cmp
jmp
xchg
adc
push
mov
sahf
loope
stos
jns
xchg
xchg
dec
rcl
in
sbb
mov
xchg
(bad)
loopne
fwait
aas
loop
int3
ficomp
jae
(bad)
mov
xchg
jmp
mov
daa
jmp
outs
fsubr
bound
push
sti
pop
adc
ja
mov
in
lea
test
sub
xchg
jb
jae
push
jmp
call
fs
sahf
popa
dec
inc
xor
jl
inc
mov
pop
mov
inc
push
(bad)
(bad)
inc
outs
daa
popf
scas
int
ret
out
mov
fsubrp
dec
mov
mov
xchg
pushf
test
pop
loope
(bad)
sbb
mov
jno
mov
es
inc
jmp
cli
dec
mov
clc
dec
mov
xchg
xchg
cmp
in
pop
mov
mov
pusha
sbb
fsubr
int
enter
mov
pop
pop
in
lea
hlt
add
shl
dec
test
rol
arpl
fwait
fs
fld
daa
and
gs
repnz
or
dec
push
pop
sar
and
xor
movs
mov
jae
out
jo
sbb
cs
add
rol
dec
popf
xchg
mov
lea
push
xchg
sbb
push
jae
push
adc
enter
shl
mov
adc
inc
or
dec
xchg
dec
push
loope
(bad)
(bad)
and
stc
arpl
inc
inc
sbb
inc
repz
push
ffreep
push
dec
call
jbe
imul
jae
out
add
jecxz
fisttp
mov
mul
mov
ins
ja
loopne
add
add
outs
sahf
adc
pop
xchg
(bad)
or
sbb
adc
push
jp
jmp
daa
in
aaa
xor
jnp
imul
ins
stc
pop
ret
icebp
outs
clc
push
xchg
aas
adc
rcr
mov
mov
xor
mov
xchg
cmp
inc
xchg
adc
and
ror
push
dec
popa
(bad)
loop
dec
jmp
cwde
pushf
cld
push
adc
mov
fisttp
add
push
movs
adc
adc
or
hlt
xchg
imul
sbb
pop
je
rol
fnstenv
in
cmp
into
pop
adc
neg
mov
xchg
fwait
arpl
rol
(bad)
fwait
push
jnp
add
jl
xor
pushf
xlat
dec
repz
push
lahf
int
adc
adc
push
call
and
repz
ss
(bad)
fs
aad
addr16
xchg
loope
in
dec
lea
ss
loope
enter
sbb
and
sbb
clc
mov
add
and
outs
mov
inc
jmp
arpl
call
sub
in
call
mov
mov
in
(bad)
(bad)
retf
adc
call
test
or
dec
mov
push
xchg
nop
popa
out
mov
fisubr
dec
clc
jle
push
cwde
push
fidiv
ror
fwait
ds
cmp
cmps
mov
push
imul
into
cmp
inc
inc
cmp
or
cmp
mov
xlat
add
int
out
jbe
imul
lock
js
in
js
fs
stos
clc
pop
daa
dec
fidiv
cmp
fldcw
inc
cmp
jmp
adc
pop
mov
ja
sbb
ins
inc
or
sub
out
pop
sahf
push
pop
ins
push
cs
sbb
fs
mov
push
gs
loopne
inc
js
xchg
xor
sbb
and
or
enter
(bad)
mov
or
lods
rol
sub
pop
shl
out
lock
lods
pop
(bad)
fdivr
cmp
inc
dec
lock
nop
(bad)
aas
dec
cmps
mov
add
xor
cmp
mov
ficom
pop
enter
add
xchg
sbb
pop
adc
aam
mov
adc
xchg
push
dec
mov
ins
xchg
sub
adc
std
lods
inc
mov
ins
push
sub
push
sub
xor
cli
cmp
dec
loopne
push
das
in
out
enter
cmc
inc
cmp
and
inc
out
cmp
adc
add
or
cs
add
add
lahf
out
ins
mov
xor
sbb
out
ror
adc
push
fwait
test
fldenv
mov
adc
jp
cld
int3
lock
push
or
aad
sub
sar
jle
or
rcr
mov
inc
jmp
callw
xor
scas
mov
mov
mov
pushf
lods
push
int3
cmp
pcmpeqd
lock
jnp
push
xchg
(bad)
jns
fldenv
add
sbb
pop
fisubr
sti
jbe
test
and
adc
stos
cmp
sub
pop
ret
cmp
clc
adc
sub
push
les
dec
dec
sub
stc
push
outs
les
imul
jle
or
leave
cdq
cmps
ss
mov
in
outs
pop
xchg
sbb
dec
mov
aaa
popf
stos
mov
jne
xor
cmp
fcom
bound
dec
xor
mov
cmp
push
cdq
adc
dec
jmp
aad
push
cli
cmp
lea
mov
scas
mov
fsubrp
call
xchg
push
mov
cmp
sar
stos
sti
mov
push
push
mov
xchg
call
fdivr
sub
sub
shr
xor
lods
loope
push
enter
inc
xchg
pop
test
(bad)
ror
mov
cmc
inc
mov
sbb
jae
adc
nop
lods
repnz
and
shr
pop
imul
adc
inc
push
mov
mov
xor
dec
dec
mov
les
mov
jnp
stc
sub
mov
(bad)
jmp
loopne
or
adc
(bad)
shl
add
pop
xchg
fcom
(bad)
aaa
adc
sar
pop
or
aas
cdq
in
mov
lds
mov
dec
frstor
push
das
xchg
(bad)
(bad)
cs
cld
mov
sub
retf
xor
inc
lea
inc
adc
jge
sub
or
in
sub
jmp
aad
aaa
sbb
sbb
mov
inc
test
cmp
aas
mov
or
scas
shl
div
call
push
dec
xchg
add
xchg
mov
jne
push
mov
xchg
es
add
clc
mov
adc
xchg
loop
sub
fiadd
popa
jbe
adc
out
mov
xlat
out
cwde
add
push
pop
mov
out
das
int3
aas
adc
test
mov
into
mov
mov
add
ds
(bad)
sbb
pop
rol
nop
call
shl
mov
int3
cmp
aam
cdq
outs
push
push
sbb
cld
mov
or
or
fs
xchg
in
push
add
shl
push
fimul
es
jo
inc
dec
in
fiadd
or
mov
jo
addr16
pop
into
sbb
in
rcl
sub
xchg
sub
push
call
and
aam
loope
(bad)
cmp
scas
cmp
push
ret
stos
sti
push
loope
jo
fs
ret
adc
cmp
pop
mov
loop
mov
pop
dec
push
ja
into
cwde
les
out
dec
cld
addr16
sbb
mov
jnp
jmp
cmps
cmps
sbb
dec
test
outs
push
or
(bad)
(bad)
mov
(bad)
aam
mov
inc
pop
aas
mov
xchg
es
ja
sub
fdivr
xchg
adc
dec
mov
mov
loop
dec
sysenter
dec
add
mov
mov
push
pushf
call
adc
sbb
dec
jnp
jb
fs
and
aaa
adc
push
push
popa
mov
aaa
loopne
shl
or
(bad)
mov
adc
mov
and
das
outs
mov
shl
mov
jnp
push
adc
cmp
loopne
adc
pushf
dec
arpl
inc
test
sahf
inc
or
data16
cli
repnz
mov
jmp
imul
in
aaa
xor
imul
push
pop
fidiv
dec
lock
fld
jmp
loope
cdq
mov
cdq
fs
pop
or
xor
and
sbb
add
inc
mov
pop
(bad)
cmc
jl
(bad)
stc
xor
xor
loopne
pop
adc
enter
repz
mov
mov
push
inc
xor
pop
jmp
pop
ror
push
dec
xchg
enter
(bad)
mov
xlat
xlat
cwde
xor
xchg
jle
push
mov
js
or
ficom
dec
(bad)
ins
jno
pop
call
xchg
mov
adc
add
ficom
call
hlt
jb
loope
mov
inc
sbb
shl
pop
pop
sub
cmp
sbb
and
(bad)
daa
shr
xchg
fcomp
neg
jnp
push
xlat
(bad)
pop
outs
jg
push
ds
out
lods
ins
or
lods
cmp
stos
mov
stc
mov
mov
jp
xchg
outs
cmp
jae
xor
out
pop
cmp
scas
xor
mov
bound
pop
jns
cmp
xchg
sbb
test
push
jbe
cli
mov
push
(bad)
xor
div
fsub
lock
jge
sbb
data16
cld
add
pop
sbb
int3
jmp
pop
clc
dec
mov
push
(bad)
push
inc
fwait
jge
outs
xor
mov
(bad)
fdiv
lock
dec
mov
fnstcw
stos
repz
pop
out
mov
jl
xor
push
cmp
dec
pushf
add
mov
push
jle
pop
cmps
adc
push
mov
in
push
(bad)
ret
pop
clc
pop
xor
dec
xor
inc
in
nop
sub
jae
in
push
jo
popf
std
ret
jno
outs
nop
add
mov
data16
add
loope
mov
cmp
arpl
push
fst
push
(bad)
enter
jb
je
push
lea
aad
and
fsub
jae
inc
es
xchg
cld
imul
adc
bnd
sahf
cli
and
or
adc
std
ret
inc
mov
dec
lods
or
out
pop
inc
pusha
jge
fistp
bnd
imul
pop
sti
push
sub
and
mov
stos
(bad)
out
enter
ds
(bad)
xchg
jno
mov
sbb
test
jno
ins
ficom
xchg
cmp
add
mov
dec
lods
inc
sahf
scas
cmp
add
add
push
imul
mov
lock
or
push
and
outs
mov
dec
loop
sub
test
or
sbb
xchg
sbb
add
lods
loopne
retf
pop
call
cmps
xchg
add
adc
or
mov
jne
xor
push
stos
or
push
mov
sub
lea
dec
in
dec
loopne
push
sbb
mov
mov
cmp
outs
xchg
pushf
pop
or
je
pop
push
dec
shl
push
push
shr
(bad)
mov
mov
mov
pop
ficomp
sti
xchg
push
sub
and
adc
repz
dec
stc
jle
maskmovq
mul
stos
mov
outs
retf
cmp
pop
std
jle
pop
mov
and
into
mov
pushf
sbb
dec
(bad)
stos
push
je
fiadd
jge
outs
jmp
lock
mov
loop
jg
nop
pushf
xor
sbb
js
sub
test
iret
sbb
jne
lds
fmul
mov
addr16
jnp
fwait
or
mov
stos
push
sbb
jmp
mov
in
mov
retf
rol
sub
add
clc
mov
dec
aam
out
and
sbb
call
stos
push
add
mov
xor
fs
adc
sbb
sbb
xchg
pop
jns
popa
and
movs
outs
js
rcl
sar
push
push
jns
inc
imul
in
xlat
push
cmc
xlat
adc
push
es
les
(bad)
in
sti
ret
lods
call
lods
out
sbb
push
call
test
pop
je
retf
sub
bound
(bad)
mov
xor
pusha
pop
inc
sbb
shr
bound
xor
adc
dec
dec
(bad)
xchg
out
adc
or
lea
fdiv
dec
cmp
idiv
dec
(bad)
fistp
stos
(bad)
fadd
xor
std
in
outs
fld
or
pop
rol
mov
dec
jno
mov
out
(bad)
popf
pop
cld
cdq
or
jp
(bad)
push
movs
pop
pop
mov
sbb
call
mov
sub
xlat
jmp
mov
xor
and
mov
sbb
rcr
push
xchg
inc
push
ret
adc
pop
arpl
js
in
cmp
imul
dec
out
nop
loop
aam
sar
sbb
pop
jae
outs
jo
stc
add
(bad)
mov
adc
repnz
pop
cmp
int
add
jo
add
shl
lods
je
dec
push
xchg
jp
jge
mov
and
jb
sub
out
fnsave
mov
sar
xor
es
sar
mov
sub
mov
adc
pop
enter
popf
outs
in
inc
dec
adc
push
(bad)
pop
pop
add
mov
add
push
test
out
mov
lea
in
(bad)
and
loop
pop
(bad)
daa
jmp
mov
mov
pop
pop
sti
push
mov
or
call
xor
and
bound
or
popf
loopne
xchg
sbb
sub
ins
and
cmc
pushf
push
int3
push
imul
jnp
ins
psubusb
shl
sbb
(bad)
clc
push
push
movs
rcr
test
imul
cmps
cs
jb
sbb
(bad)
hlt
jnp
dec
ja
add
ficomp
loopne
cli
sbb
in
(bad)
aam
xchg
jle
ret
aad
xchg
(bad)
push
cmp
inc
sub
mov
(bad)
adc
xor
(bad)
adc
cmps
in
push
nop
adc
push
cmp
icebp
outs
xor
in
stc
arpl
cdq
loope
jae
leave
mov
dec
mov
xchg
addr16
or
sub
mov
or
addr16
sbb
movs
ret
push
(bad)
call
xchg
cdq
jmp
out
mov
push
lea
xor
(bad)
mov
pop
(bad)
shl
push
and
les
popa
jo
ins
(bad)
hlt
cli
(bad)
outs
push
sub
xchg
mov
dec
pop
sahf
lea
push
xlat
and
lds
xor
mov
rcl
or
mov
jnp
jbe
in
lahf
(bad)
out
mov
inc
xchg
cld
sub
jbe
xchg
jge
pop
push
test
xor
das
push
xor
dec
stc
pop
inc
mov
pushf
and
push
call
in
out
repnz
inc
fcmovnu
and
int
mov
popa
call
mov
neg
push
mov
lock
retf
clc
ds
sbb
mov
(bad)
dec
and
lods
add
aas
pop
lock
cmp
xor
inc
fcom
push
cmp
adc
aam
mov
fisub
mov
adc
mov
out
push
aaa
mov
pop
fcom
mov
adc
enter
cmp
cmps
xchg
mov
sub
out
jmp
inc
add
pushf
and
sub
ja
cdq
nop
adc
xor
and
pop
mov
dec
pop
jl
fist
cs
push
int3
popf
and
xor
pushf
push
add
jbe
sub
pop
pop
ror
mov
sub
fisttp
shl
or
or
jns
mov
adc
out
jae
push
dec
pop
mov
dec
fadd
pop
rol
(bad)
mov
jae
sbb
sub
and
sbb
lahf
sar
jge
xchg
arpl
test
pop
push
cdq
pop
push
int
mov
xchg
dec
div
jnp
cvtdq2ps
stc
(bad)
in
lods
push
sbb
sar
rcr
sahf
pop
sub
push
call
retf
mov
xor
xchg
push
dec
adc
jbe
sbb
push
(bad)
popa
loope
mov
jl
pop
test
jae
dec
(bad)
mov
(bad)
xor
rcr
fs
sbb
and
and
xchg
or
pop
push
inc
sub
jmp
dec
ja
inc
mov
pop
and
inc
lods
ja
and
rcl
add
lahf
xchg
(bad)
dec
add
(bad)
repnz
rcr
std
call
sub
push
popf
or
jbe
dec
fidiv
jecxz
fldenv
pushf
(bad)
stos
sbb
cmp
gs
fwait
(bad)
adc
pushf
retf
sub
(bad)
mov
cmp
mov
aad
out
or
(bad)
xor
clc
sbb
push
mov
ss
mov
adc
aam
push
out
mov
and
or
mov
add
(bad)
imul
loope
shl
in
loop
xchg
ds
lahf
in
popa
daa
lods
jle
pushf
test
pop
outs
cmp
adc
nop
repnz
jae
les
add
int3
pop
pop
push
or
pop
jmp
je
dec
sbb
leave
cmps
pushf
xchg
add
or
cmps
or
pop
shl
adc
aaa
push
pop
stc
dec
xchg
pop
pop
sbb
fcmovnbe
out
mov
dec
cmovs
in
mov
stc
and
imul
aaa
mov
jae
mov
xor
push
sub
cmp
dec
cmp
into
jp
stos
mov
stc
(bad)
pop
jmp
test
sahf
add
ins
mov
mov
push
pop
xchg
mov
ja
(bad)
(bad)
shl
xchg
sub
aaa
mov
(bad)
lahf
ror
mov
mov
mov
daa
mov
(bad)
ficom
not
xlat
retf
ror
sar
inc
inc
sbb
outs
pop
xlat
test
pop
or
mov
loop
jb
mov
jno
es
mov
gs
in
adc
mov
es
xor
push
out
push
inc
mov
xor
add
add
adc
nop
aam
xor
xchg
cmps
dec
push
xchg
xchg
repnz
loop
jnp
ficom
pop
or
fwait
cmp
mov
mov
cwde
jae
xchg
cmc
xchg
push
stos
in
pushf
mov
and
sbb
cdq
test
add
pop
ret
cmp
xchg
retf
mov
stc
fnstcw
push
jmp
sar
push
in
cwde
or
push
add
out
jne
into
jmp
xchg
leave
in
inc
lahf
or
jmp
mov
fdiv
xlat
mov
dec
cwde
inc
rcl
lea
lods
ins
xchg
int
mov
mov
and
ficom
pop
add
jnp
scas
xor
jecxz
pop
mov
jp
cld
push
xchg
adc
cmps
lods
shl
pop
loopne
sti
inc
xchg
scas
add
cld
mov
sub
push
aaa
jge
stos
idiv
aam
retf
xlat
iret
jge
jmp
mov
mov
lods
test
dec
mov
out
std
pop
aaa
jae
fiadd
or
shl
mov
cld
xor
sahf
or
adc
dec
push
pop
in
neg
cmp
push
out
movs
cmp
xor
sub
enter
into
inc
jmp
outs
jo
adc
and
xchg
push
dec
es
test
push
int3
xchg
inc
shl
pop
xchg
pop
add
in
mov
push
mov
iret
add
(bad)
loopne
dec
movs
dec
and
test
mov
repz
pop
fdiv
cmp
fld
xchg
cmp
cmp
(bad)
inc
sub
xor
xor
push
inc
and
mov
mul
adc
dec
(bad)
pop
adc
sub
cdq
xchg
xchg
add
sub
xor
hlt
lods
push
repz
xchg
call
add
mov
xchg
jnp
pop
hlt
loope
test
push
dec
fdivp
rol
out
jmp
sbb
sbb
xchg
xchg
jecxz
lea
dec
pop
xchg
out
pop
out
out
in
dec
dec
xor
pop
cld
mov
lods
(bad)
pop
push
call
dec
jge
xor
and
fsub
mov
pop
mov
pop
xor
fisttp
xchg
fistp
shr
ror
sbb
mov
outs
iret
xchg
mov
pop
(bad)
imul
lods
pop
(bad)
cs
out
adc
ds
adc
mov
jmp
movs
ss
repnz
in
and
lock
test
jl
sub
cmp
pop
jns
frstor
sbb
sbb
mov
in
and
iret
jge
enter
mov
popa
daa
ret
aas
add
shl
test
add
jmp
xchg
das
call
pop
ja
mov
push
loop
scas
or
jecxz
mov
je
push
xlat
cmp
mov
dec
aad
xchg
lods
shl
fst
cmp
loope
ins
sub
not
enter
mov
(bad)
rol
or
je
fcomp
dec
fabs
in
mov
mov
jnp
dec
push
and
outs
dec
mov
hlt
shl
cmp
xor
hlt
aaa
or
dec
daa
loope
jnp
out
push
xchg
mov
aam
dec
add
cwde
cdq
mov
ins
mov
cmp
int3
add
shl
imul
xchg
push
or
cmps
es
sahf
push
adc
and
loop
pop
push
popf
stos
dec
iret
jmp
arpl
push
loopne
fild
mov
mov
adc
ror
sbb
jnp
push
and
fadd
cdq
lea
jp
ja
inc
mov
mov
addr16
js
leave
addr16
inc
loopne
push
mov
(bad)
test
daa
mov
sub
test
xor
pop
jnp
ficom
jmp
xchg
ds
call
xor
sub
pop
sub
xchg
ret
call
xor
daa
outs
push
jns
mov
and
inc
mov
or
sahf
push
cwde
sbb
adc
jne
push
pop
cmp
dec
les
les
loope
xor
mov
retf
or
cmp
adc
jmp
rcl
mov
or
(bad)
xlat
push
sbb
mov
mov
add
shl
mov
aas
stos
cld
fucomp
adc
je
adc
out
fucom
out
mov
dec
sub
iret
ins
cmp
push
enter
fisttp
adc
mov
loopne
jge
lahf
sbb
and
imul
std
jne
rcr
repz
fdivr
jmp
mov
sar
push
gs
add
cdq
icebp
popf
adc
pop
cmp
dec
in
jle
add
add
(bad)
loop
cmp
sbb
popf
mov
test
stos
repnz
push
std
push
(bad)
aam
jno
mov
mov
mov
mov
push
cmp
loop
aam
test
outs
sar
dec
push
mov
ds
mov
mov
ins
das
not
add
add
cmp
fist
inc
int3
popf
xor
adc
js
jo
ins
add
pop
in
loope
addr16
mov
mov
adc
shr
movs
leave
enter
pushf
lock
popf
inc
or
clc
inc
(bad)
rcl
sbb
cmp
test
push
stc
jmp
adc
fcmovnb
mov
stc
cmp
dec
sti
loopne
add
fwait
int3
enter
stc
imul
in
mov
inc
iret
out
cwde
xor
push
pop
shl
cmp
mov
dec
cmp
jnp
jo
pop
jne
sbb
(bad)
rcr
dec
lahf
jmp
mov
mov
gs
inc
dec
pop
dec
mov
jb
xchg
dec
out
pop
mov
fnstenv
jmp
scas
sub
xchg
lods
push
dec
push
jbe
dec
mov
ins
xchg
adc
movs
xchg
dec
call
(bad)
sar
call
loope
push
mov
or
es
mov
pushf
adc
dec
mov
shl
arpl
outs
push
stc
out
mov
cmp
fwait
jg
xchg
lock
pop
ret
in
leave
clc
dec
mov
or
cdq
dec
mov
jl
jecxz
fisubr
fcmove
jge
out
js
sub
push
pop
addr16
jmp
jp
mov
dec
sub
sbb
aaa
fiadd
loop
lods
push
in
shl
or
push
imul
pop
mov
push
test
mov
push
add
mov
sub
or
daa
bound
out
hlt
sahf
add
fdiv
xchg
scas
ret
(bad)
faddp
loopne
xor
sar
xlat
inc
mov
test
and
or
(bad)
rcl
dec
lea
loope
pop
xor
cld
adc
push
add
outs
dec
cmp
nop
mov
aaa
or
mov
mov
push
mov
cmps
movs
xor
hlt
adc
call
or
shl
arpl
sbb
(bad)
dec
lods
or
or
call
add
lgs
pushf
dec
mov
mov
cmp
into
or
inc
push
sbb
fild
mov
inc
inc
and
cmp
rcr
repz
jno
imul
lods
xor
mov
mov
push
push
jae
retf
pop
leave
fs
jle
out
sub
xor
mov
xchg
test
retf
pop
out
push
pop
mov
inc
push
mov
mov
or
sbb
pop
ret
sbb
fidiv
and
sub
inc
(bad)
push
push
cmp
cwde
xlat
retf
mov
cmp
shl
mov
int
mov
jae
mov
sub
ds
imul
mov
(bad)
mov
mov
stos
dec
stc
(bad)
stc
dec
ins
shl
lock
pushf
push
pop
xchg
add
call
test
lea
js
es
(bad)
mov
inc
clc
add
jg
int3
sub
stos
fstp
data16
aad
aaa
xchg
popf
js
add
cmp
test
sahf
retf
mov
lods
cmp
das
daa
paddsw
sub
pop
and
push
adc
sbb
movs
or
adc
in
sbb
dec
mov
pop
sbb
jbe
adc
(bad)
and
mov
nop
fnstcw
xchg
aam
nop
out
xchg
cmp
mov
mov
ror
mov
xlat
push
cmp
jge
ret
pop
fisubr
xchg
pop
cwde
(bad)
jp
mov
and
xlat
push
fisubr
pop
xor
test
jo
jmp
(bad)
jno
mov
popf
add
pop
imul
adc
outs
cmc
inc
sbb
hlt
push
es
nop
ins
arpl
std
mov
popf
int3
sub
mov
add
fld
jae
sbb
inc
xor
fst
pop
pushf
push
jno
(bad)
sub
pop
ret
cld
rcr
or
push
imul
retf
jmp
jmp
xchg
pushf
out
scas
cmc
or
ds
mov
mov
cmp
shr
xchg
ret
push
push
xor
ret
pop
pop
sahf
xchg
xor
retf
push
mov
sub
arpl
jmp
mov
add
adc
xor
xor
mov
mov
push
repnz
push
call
adc
cmps
mov
fistp
(bad)
cmc
stos
xchg
stos
mov
jl
xor
add
ret
paddb
or
clc
xor
fcmovnb
(bad)
fsub
call
xchg
int
fadd
sub
xchg
bound
inc
js
les
test
xchg
(bad)
mov
sbb
push
push
out
retf
inc
pop
in
loop
(bad)
bound
or
pusha
mov
fstp
aam
jns
aad
and
xor
dec
push
pop
int3
xchg
sbb
jne
and
ret
jle
adc
adc
add
and
add
addr16
fwait
or
jecxz
imul
push
cs
xchg
(bad)
stos
loop
scas
jmp
inc
mov
push
movs
frstor
pop
cmp
hlt
adc
mov
push
or
jge
dec
(bad)
push
shl
popa
xor
cli
lahf
cmp
(bad)
popa
pop
pop
jp
in
call
stos
(bad)
jle
dec
daa
push
jbe
mov
leave
ja
jne
and
xor
pop
rol
push
pop
prefetch
aaa
loopne
fldcw
(bad)
or
or
xor
(bad)
pop
pop
mov
(bad)
mov
lds
test
inc
cmp
leave
int3
inc
inc
dec
mov
cld
cli
icebp
aas
push
loop
retf
(bad)
scas
retf
add
xor
stc
call
dec
push
pop
aaa
inc
je
clc
adc
stos
add
sbb
jmp
shl
sub
xor
(bad)
pop
js
icebp
add
mov
in
gs
xchg
outs
test
mov
add
pop
fwait
or
nop
push
fimul
xchg
lock
in
xchg
sar
retf
mov
stos
add
adc
push
(bad)
pop
xchg
add
fild
mov
(bad)
mov
dec
lock
add
and
ret
aaa
icebp
(bad)
out
inc
stc
push
neg
fidivr
imul
rcr
dec
cmp
pop
arpl
mov
js
push
test
sbb
movs
(bad)
loopne
ds
scas
and
test
pop
mov
mov
sub
lock
sub
xchg
pop
dec
mov
ja
mov
pop
sub
lods
cmp
inc
aas
out
push
leave
ret
push
pop
pop
inc
add
and
fcomp
push
ins
repnz
jge
jmp
mov
push
sbb
mov
push
mov
ja
mov
xchg
xchg
dec
fsub
(bad)
cmps
sub
adc
mov
je
jl
push
inc
sahf
cmp
scas
scas
test
pop
repz
push
mov
fwait
xchg
xchg
(bad)
into
pop
pushf
ret
sub
sbb
(bad)
repnz
pop
mov
cmp
add
imul
xchg
or
call
sub
test
add
sbb
mov
mov
out
into
popa
push
cmpxchg
rcl
mov
ret
or
rcl
lods
mov
out
out
push
inc
(bad)
div
or
jg
gs
aaa
std
in
fnstenv
sbb
shl
scas
arpl
idiv
mov
add
jb
ror
test
pushf
xor
or
and
stos
aam
sub
out
shl
and
out
test
mov
fdiv
daa
pop
in
neg
enter
pop
push
and
sbb
push
jmp
adc
nop
mov
rol
mov
mov
mov
inc
mov
sbb
fist
sbb
adc
idiv
int3
bound
pop
addr16
sti
xor
xchg
push
pop
lods
dec
dec
rcl
lods
mov
mov
add
jg
retf
out
js
mov
push
popf
and
sub
adc
push
cmp
pop
jnp
fwait
sbb
mov
jmp
inc
and
xchg
or
shl
cmps
out
add
jg
sbb
xchg
ret
add
dec
xlat
(bad)
push
cmps
xchg
in
inc
fidivr
mov
inc
jg
inc
nop
mov
inc
mov
xchg
sar
cwde
out
mov
jge
or
stos
and
mov
and
inc
jp
leave
in
xor
cmp
imul
test
ja
pusha
push
mov
xchg
pop
and
sub
repz
jge
sar
xchg
xchg
scas
push
sub
inc
adc
mov
pop
iret
push
mov
mov
dec
pushf
fistp
jl
and
popa
std
cwde
ror
ss
out
mov
xchg
pop
mov
or
bound
push
sbb
adc
call
cmps
push
sub
loopne
cmp
add
or
push
mov
add
pop
int
sub
xchg
mov
cmp
pop
pop
adc
(bad)
jmp
xchg
mov
or
outs
addr16
sub
ins
test
sahf
mov
pusha
inc
sbb
jmp
pop
pop
pop
fstp
pop
or
out
xchg
pop
add
enter
pusha
scas
mov
dec
nop
out
push
inc
mov
(bad)
mov
inc
mov
hlt
outs
fsubr
and
mov
adc
(bad)
xor
cmp
(bad)
(bad)
push
adc
sbb
retf
pop
xchg
lock
loopne
mov
out
psraw
cmp
inc
aad
fsub
lock
neg
aad
add
fwait
dec
cmc
mov
sbb
sbb
mov
inc
outs
pop
rcr
lds
add
loope
pop
imul
add
xchg
sub
xchg
mov
loop
ja
pop
jo
sub
jmp
(bad)
push
xor
push
fimul
and
loopne
push
nop
pop
ds
add
(bad)
lock
call
cmp
add
in
mov
or
cmp
adc
jbe
std
xor
mov
xchg
pop
mov
stos
cdq
pushf
in
rcl
or
add
and
mov
out
adc
in
inc
push
les
sbb
rol
jecxz
jnp
add
push
cld
out
mov
cs
pop
lea
xlat
jg
shl
ror
stos
fld
ror
and
sbb
arpl
xchg
imul
jmp
sub
pop
jge
test
test
(bad)
jle
adc
(bad)
sti
jb
pop
jmp
mov
push
inc
push
jecxz
clc
imul
sub
mov
sbb
jecxz
cmp
call
nop
ss
(bad)
je
jno
nop
js
inc
ins
fcom
fiadd
and
sti
fwait
and
(bad)
mov
mov
ficom
adc
test
push
xchg
adc
leave
jg
inc
add
jecxz
push
push
imul
xor
mov
mov
mov
jge
push
push
aam
sbb
fidiv
pop
add
movs
dec
jp
adc
adc
fcmovb
loop
ds
lods
dec
adc
mov
data16
adc
pop
push
lea
lock
sar
cld
loope
sbb
mov
dec
dec
sbb
dec
shl
push
pusha
jno
ins
pop
pop
push
mov
hlt
dec
jl
cmp
ret
cmp
mov
jge
sti
dec
cmps
and
and
retf
push
add
popf
sbb
adc
dec
cli
out
icebp
mov
add
pop
loope
movs
(bad)
lock
mov
sub
test
(bad)
fld
jle
stc
mov
inc
inc
inc
inc
rcr
sbb
mov
xor
test
cmps
xor
jmp
push
jno
(bad)
hlt
inc
loop
xor
addr16
jb
dec
sbb
sub
outs
mov
outs
imul
retf
mov
mov
in
push
stc
lods
iret
pop
cli
jmp
loope
sub
stos
jge
add
mov
inc
ins
not
arpl
xchg
ja
rol
das
pushf
inc
xor
in
pushf
mov
inc
(bad)
fist
in
(bad)
loopne
dec
mov
inc
ja
fmul
add
ret
inc
mov
sub
fdivr
inc
dec
pusha
adc
sub
push
pop
xor
jmp
jmp
dec
push
mov
fdivr
cmp
push
xchg
dec
popf
push
fmul
adc
add
mov
cmps
rcl
fld
loopne
cmp
mov
sub
repz
loop
ins
shl
adc
adc
jo
nop
(bad)
jmp
rol
pop
jb
pushf
xchg
cmp
repz
sub
hlt
cld
outs
mov
jp
pop
adc
mov
add
mov
ins
outs
dec
jnp
mov
ds
setge
test
adc
xor
dec
lods
inc
jl
mov
ins
(bad)
fs
pop
sub
out
pop
mov
jne
icebp
jmp
jl
cmp
ror
sahf
lahf
jmp
loopne
dec
ins
xchg
inc
xchg
(bad)
cmp
sahf
loop
or
cmps
in
xor
xchg
ss
fild
lea
iret
add
xor
lahf
sbb
push
or
dec
xlat
adc
ret
mov
sub
rol
mov
xchg
mov
sbb
and
pop
rcr
lds
pop
aaa
sbb
inc
sbb
push
cmp
test
dec
movs
jo
sub
pop
mov
(bad)
sub
mov
pushf
mov
jle
ret
add
(bad)
mov
std
mov
mov
les
dec
out
lahf
std
mov
sti
cmps
dec
jmp
mov
mov
cmp
mov
mov
ds
fnstsw
mov
ja
fild
sbb
sahf
and
in
sub
adc
dec
cmp
sahf
adc
xor
(bad)
div
add
mov
pop
addr16
(bad)
into
fist
lock
(bad)
push
dec
add
lea
call
test
fnstcw
sub
aam
inc
cmp
nop
dec
sub
xchg
repnz
std
adc
xor
rcl
adc
imul
lock
in
js
cmp
gs
repz
fistp
or
popf
push
pop
rcr
jmp
or
xchg
or
fs
push
nop
into
in
push
neg
imul
pop
lea
loopne
mov
in
in
mov
mov
mov
adc
aaa
fwait
enter
shl
call
sar
clc
jge
not
jmp
and
push
scas
xchg
rcl
in
rcl
iret
push
aad
inc
aad
and
xchg
(bad)
stos
or
popf
inc
aaa
mov
enter
mov
popf
or
or
loopne
pop
in
sub
jmp
dec
test
scas
push
pop
loope
push
aas
push
aaa
stos
mov
dec
or
pop
add
ss
inc
cli
jecxz
mov
in
cmps
mov
loop
push
xchg
data16
mov
xlat
push
dec
pop
or
add
cmp
jecxz
mov
push
or
adc
pop
jge
dec
xchg
mov
jns
jne
mov
xor
dec
adc
mov
movs
stos
(bad)
add
pop
dec
sbb
and
int
jmp
xchg
adc
lahf
xor
fcom
xor
test
pop
push
jmp
fsubr
and
xchg
mov
cmp
mov
mov
xchg
inc
add
sbb
add
test
mov
push
out
js
sbb
mov
push
jle
shl
(bad)
scas
ds
popf
xchg
and
iret
fld
pushf
pop
mov
xchg
pushf
jge
pop
add
pop
test
shr
push
pop
imul
out
cmps
and
cwde
dec
lds
adc
add
call
dec
push
xlat
div
jl
jmp
sbb
scas
mov
dec
pop
fcmovnbe
movs
push
mov
mov
out
not
push
lods
mov
push
shl
daa
dec
inc
popa
jg
inc
fstp
adc
addr16
xchg
cmp
fst
push
call
push
mov
cmps
test
pop
bound
mov
outs
xchg
ds
bound
lds
mov
pop
fidiv
dec
stc
sbb
sub
jge
cs
mov
jg
pushf
add
dec
cmp
fiadd
out
or
add
rcr
imul
fs
push
sbb
dec
int3
push
scas
ds
mov
pop
inc
sbb
jae
sub
xchg
cdq
inc
pop
mov
jno
cdq
sbb
dec
inc
inc
(bad)
adc
push
add
push
sbb
xor
inc
mov
jb
cmp
in
xor
mov
and
pop
arpl
ins
call
not
cmp
fidiv
ret
loop
enter
mov
es
idiv
cmps
pop
hlt
jmp
iret
pop
inc
and
cwde
push
aam
jmp
mov
inc
inc
push
test
dec
jnp
retf
pop
dec
int
inc
or
imul
loopne
cdq
sbb
int3
sub
test
inc
stc
stc
(bad)
imul
cdq
push
and
push
scas
inc
ror
xorps
xchg
sub
(bad)
jge
cmp
shr
push
push
pop
cmc
or
dec
cmp
xchg
xlat
pushf
imul
daa
and
jecxz
iret
inc
cmp
ds
repz
push
xchg
xchg
sub
nop
test
lock
loopne
cli
mov
and
mov
sub
mov
xor
movs
and
fwait
test
push
ret
mov
sti
mov
inc
popf
retf
mov
ja
(bad)
ins
lock
cmp
pop
scas
and
out
jno
mov
xchg
xlat
dec
sbb
add
shl
jecxz
sbb
loope
push
fdiv
jge
push
and
cmp
outs
rcr
inc
daa
test
test
or
lea
sbb
xchg
arpl
and
push
pop
jmp
push
daa
test
loopne
stos
ins
loop
je
cmps
sub
mov
imul
mov
repnz
nop
pushf
add
aad
addr16
loop
jne
mov
loop
jns
(bad)
add
dec
retf
xlat
mov
xor
xchg
mov
mov
repz
ins
shl
push
push
jge
div
je
or
pop
call
fdiv
jnp
loope
mov
test
mov
lock
xor
dec
popa
mov
fidivr
dec
cmps
(bad)
jno
stos
adc
cmp
xor
cmps
aad
adc
lock
aad
popf
data16
scas
dec
push
pusha
jecxz
int3
push
push
jbe
addr16
xchg
cmp
cwde
dec
aas
lahf
xchg
lods
cmps
into
fistp
aam
mov
test
xor
or
mov
not
dec
stc
mov
push
int3
xor
pop
ins
mov
sti
mov
das
out
int
push
sar
sub
push
ret
mov
xchg
mov
sub
(bad)
fimul
add
cmp
pop
enter
xchg
xor
jl
outs
jmp
xor
jmp
push
mov
cld
xchg
dec
push
mov
aad
sar
nop
jmp
mov
push
repz
sub
ins
xchg
add
xor
jnp
dec
mov
(bad)
sbb
fsub
sub
sub
clc
mov
fistp
push
mov
call
xchg
mov
or
mov
in
adc
in
xlat
jo
mov
cmp
inc
mov
dec
adc
in
mov
cmp
jle
or
cmc
ins
push
xchg
pop
inc
loopne
mov
retf
jge
push
loope
and
in
lock
dec
iret
enter
xor
pop
test
xor
mov
add
(bad)
out
out
mov
fisttp
add
add
mov
push
in
stc
inc
jb
mov
test
sbb
les
mov
dec
(bad)
inc
fist
rsm
mov
or
in
push
xchg
pushf
dec
ror
ror
loope
fcmovb
push
dec
add
xor
jle
fcomp
aam
lahf
xor
stos
ins
(bad)
int3
(bad)
mov
(bad)
js
retf
push
xchg
jecxz
stos
dec
and
and
adc
cwde
nop
xchg
sub
adc
mov
xor
rcl
add
ret
in
sar
mov
lahf
imul
adc
gs
int
dec
mov
cld
jne
rol
sbb
out
xchg
rcl
(bad)
int3
xor
push
or
call
mov
xchg
rcr
pushf
mov
jno
xlat
daa
mov
mov
in
arpl
cmps
xchg
(bad)
fdivr
jge
pop
inc
ret
mov
or
mov
mov
lahf
cmps
(bad)
int
inc
(bad)
mov
call
outs
sbb
out
add
ins
test
adc
xor
es
movs
sbb
cmovge
sar
pop
dec
sub
popf
loopne
ins
xchg
rcr
push
ret
loop
push
bound
lods
(bad)
rcr
lea
cld
mov
shr
or
addr16
add
and
adc
popa
std
inc
call
sub
pushf
push
xchg
stos
hlt
leave
fdivr
fidivr
mov
cmp
ds
sub
ins
outs
sub
add
push
mov
xor
add
not
leave
std
add
xor
and
lods
lahf
xor
out
sbb
jg
mov
sbb
nop
and
test
out
jmp
fwait
lahf
mov
lahf
or
mov
fsub
cwde
pop
jo
mov
or
fidivr
mov
ins
pop
cmp
cmp
sbb
lods
mov
ins
clc
bound
loopne
adc
iret
mov
push
pop
dec
sub
inc
in
ins
jae
test
push
and
pushf
jmp
push
shr
rcr
adc
add
jne
mov
sub
(bad)
push
cmp
ret
push
adc
dec
mov
jle
cmps
scas
pushf
adc
or
dec
lahf
int3
push
cmps
adc
xlat
cmc
dec
ds
cdq
add
loope
or
imul
dec
out
in
nop
sub
ja
leave
xchg
sbb
sub
repz
nop
stos
rcl
push
cmp
lods
stc
dec
inc
pop
(bad)
jmp
push
pop
les
in
xor
mov
sti
inc
sub
call
sahf
sbb
into
js
std
xchg
mov
jmp
retf
push
and
out
nop
add
lds
pop
xchg
mov
dec
enter
(bad)
fst
fld
rcl
push
and
sbb
cs
in
xor
daa
rol
pop
in
fidivr
imul
bound
mov
arpl
fisub
jnp
push
xor
lods
pop
pop
rol
xchg
ret
mov
daa
movs
retf
sbb
sbb
mov
jl
pop
bound
jp
fadd
imul
fstp
sbb
and
aaa
fimul
ret
pop
sub
push
and
retf
repnz
cmp
je
scas
retf
or
pop
xor
pop
jmp
pop
retf
jmp
fld
loope
jge
inc
sub
fcomp
int
js
push
xor
inc
add
(bad)
jg
shl
pop
fild
rcr
cmp
sub
rcl
setbe
pop
jb
(bad)
loopne
fnstenv
jb
inc
push
ja
stos
fwait
scas
arpl
mov
out
aad
hlt
iret
fs
pop
gs
rcl
sub
dec
pop
mov
dec
in
mov
or
fucomi
movs
test
aam
call
cld
mov
pushf
push
mov
std
push
and
fld
jne
xchg
test
or
(bad)
or
xor
mov
sar
stos
fnsave
sub
cld
mov
jg
xor
nop
retw
cmp
test
push
add
sub
ret
cmp
dec
test
ror
push
cld
sbb
dec
cmp
lods
in
data16
cmp
hlt
jnp
jmp
mov
pop
mov
rcr
dec
mov
mov
xchg
cwde
fsubp
dec
pushf
fiadd
dec
movs
ins
js
not
leave
pop
inc
pusha
cmp
sar
sbb
jle
cmp
or
jb
jle
push
sbb
jge
and
aaa
cmp
es
les
cmps
enter
aaa
mov
cmp
cld
push
jmp
inc
retf
push
lahf
aas
pusha
loop
mov
fmul
pop
mov
fcomp
push
mov
inc
pop
adc
cld
into
xlat
pop
inc
xchg
repz
mov
and
mov
into
sahf
sbb
mov
(bad)
mov
mov
xor
(bad)
popf
or
call
outs
lahf
mov
rcr
jle
mov
mov
imul
add
and
xchg
and
les
aam
push
js
inc
(bad)
dec
cmp
fcomp
mov
mov
pop
fwait
stos
add
inc
xlat
jg
mov
cmp
mov
inc
(bad)
not
je
in
(bad)
push
fiadd
leave
std
or
mov
mov
xor
loopne
movs
fcmovnb
xor
jmp
sar
push
in
stos
je
jl
fild
add
sbb
pop
mov
lods
adc
mov
xchg
sahf
sub
repnz
inc
movs
idiv
mov
ret
into
pusha
jmp
mov
and
and
and
xor
out
into
lods
pop
not
xor
cmp
add
cs
and
imul
jl
xlat
std
arpl
pop
sbb
out
ret
aam
xlat
ss
push
mov
cmc
inc
adc
pop
pop
jnp
loopne
inc
push
mov
int
sub
cs
bound
push
rol
dec
pop
mov
sub
cmc
jo
stos
out
int3
js
nop
pushf
mov
pop
jae
mov
or
pop
jmp
test
ficomp
mov
out
imul
cmps
arpl
xchg
dec
loopne
cmp
cmp
inc
push
dec
and
push
leave
inc
mov
aam
dec
cmc
or
cwde
data16
pop
out
out
sub
push
push
xor
(bad)
call
dec
pop
call
fcmove
jle
data16
mov
adc
mov
mov
pushf
loope
lods
add
mov
shl
mov
and
add
push
psraw
(bad)
cmp
inc
xor
(bad)
jnp
jmp
ret
and
lds
ror
adc
inc
test
cmp
int3
mov
inc
jge
pop
xchg
in
fst
pop
pop
sbb
outs
arpl
fadd
xlat
lods
lock
mov
mov
mov
pop
test
cmps
pop
lahf
xchg
test
mov
imul
leave
pusha
out
lahf
jb
dec
sub
mov
dec
jo
dec
call
cld
cmc
pop
sbb
push
mov
inc
mov
push
pop
push
push
jnp
jge
mov
lods
call
cli
js
and
(bad)
inc
jmp
xchg
bound
jae
mov
xchg
add
xchg
xchg
test
gs
push
mov
push
daa
jmp
inc
cmp
fs
(bad)
mov
add
rcr
loope
xor
jno
xor
push
movs
mov
push
imul
xor
out
out
or
dec
mov
or
ins
pop
cmc
test
js
or
mov
push
in
scas
repz
sub
test
aam
je
cmps
enter
dec
pusha
mov
ss
xchg
mov
xor
mov
std
test
add
iret
sbb
repnz
retf
or
push
hlt
dec
xlat
imul
mov
dec
xchg
inc
xlat
and
out
shr
sub
push
cmp
mov
cmps
aam
js
mov
push
push
les
in
cld
mov
dec
cmps
or
inc
jbe
mov
shl
aam
iret
sbb
push
jnp
mov
jno
mov
inc
cld
jge
xchg
xor
dec
cs
and
push
ja
mov
sub
arpl
test
push
push
aam
jb
mov
mov
addr16
dec
pop
cwde
fisub
add
fwait
pop
jo
add
adc
mov
mov
lods
cmp
inc
(bad)
cmp
or
jne
sahf
aad
adc
adc
sub
push
hlt
adc
sbb
es
pop
and
xchg
inc
(bad)
mov
loop
mov
dec
into
out
ins
in
and
pushf
(bad)
mov
jne
push
add
sbb
push
enter
stc
inc
mov
sub
sbb
inc
mov
dec
adc
jmp
mov
bound
mov
icebp
or
(bad)
xchg
adc
enter
in
std
or
std
cs
pop
scas
push
ins
scas
and
call
(bad)
and
gs
push
in
enter
lea
adc
mov
(bad)
(bad)
dec
ds
and
add
adc
and
push
or
cmp
push
lea
inc
dec
mov
fimul
out
push
pusha
inc
mov
push
or
add
mov
adc
repnz
addr16
xchg
ds
stos
adc
in
dec
mov
test
not
mov
adc
dec
inc
pop
sbb
jae
in
ins
arpl
arpl
(bad)
aaa
out
xor
or
jg
(bad)
mov
retf
out
je
cmc
fst
adc
in
mov
mov
inc
push
mov
imul
pop
dec
pop
jecxz
cli
xor
cmp
cmp
test
adc
sahf
cs
and
adc
dec
in
cmp
fst
inc
pop
jmp
jno
repnz
cmc
mov
pop
push
dec
mov
and
cmc
push
(bad)
int
leave
bound
add
or
mov
loope
sbb
inc
ins
mov
cmp
std
push
add
mul
adc
cli
test
pop
pop
in
inc
pop
cli
push
and
xchg
cmp
addr16
adc
mov
mov
dec
adc
scas
mov
mov
or
mov
pop
sbb
(bad)
fst
mov
mov
pop
fwait
jmp
repnz
in
inc
ins
rcr
ds
aad
mov
jge
push
aaa
outs
repnz
test
call
or
mov
xor
mov
je
push
std
add
push
repnz
pop
mov
pop
stos
daa
bswap
in
push
test
addr16
int
xchg
int
ficomp
dec
xor
(bad)
iret
and
je
jnp
push
not
cs
lods
frstor
pop
jl
es
loopne
add
pop
push
aam
fadd
cmp
(bad)
outs
enter
add
inc
sbb
mov
dec
sahf
aad
and
(bad)
dec
sbb
out
popf
jle
popa
cmp
lock
pop
pop
cvtpi2ps
push
dec
test
mov
xor
out
(bad)
pop
dec
add
sub
mov
jo
mov
push
les
sbb
mov
out
and
ss
lock
push
jne
xchg
fwait
scas
fdivr
or
imul
pop
mov
dec
pop
push
mov
int3
sbb
call
jne
pop
inc
adc
fcomp
retf
sbb
push
mov
rcr
(bad)
mov
dec
and
mov
neg
adc
fst
lds
pop
mov
fs
push
push
or
test
push
stc
push
clc
push
xchg
mov
push
xlat
out
cmps
enter
adc
js
add
shr
aad
inc
rcr
mov
jmp
mov
sub
and
push
dec
xor
outs
jmp
mov
inc
cvtpi2ps
(bad)
retf
mov
cmp
loope
pusha
sub
arpl
ss
in
push
ror
cmps
xchg
inc
sub
(bad)
std
aam
push
xchg
std
dec
jnp
sahf
xor
mov
pushf
(bad)
cmp
rcl
aad
xor
cdq
repnz
loope
mov
scas
rcr
inc
lods
arpl
aaa
xchg
cs
adc
xor
push
pop
mov
push
or
mov
adc
push
jge
cmp
pop
imul
push
pop
push
cmc
lds
cmp
sub
and
or
sbb
ss
fstp
mov
fst
add
push
fld
mov
rcr
inc
dec
cmp
inc
test
xchg
push
dec
les
adc
mov
in
mov
push
mov
sti
das
sbb
inc
push
std
dec
jnp
xchg
mov
sbb
stos
lods
and
inc
jae
or
or
jmp
jg
xor
std
out
loop
sub
sar
test
mov
mov
pop
(bad)
xor
sub
add
pop
push
mov
adc
add
pop
fwait
ins
sbb
dec
or
lahf
loopne
push
mov
jns
push
adc
jb
or
aas
in
retf
out
out
pop
push
and
les
dec
sar
jle
(bad)
call
popf
mov
cwde
jge
inc
cmp
scas
push
sbb
xor
adc
dec
outs
inc
pop
and
lea
movs
fneni(8087
ret
lods
dec
pop
or
aad
sbb
jnp
inc
std
cdq
ret
dec
ds
push
dec
int3
mov
and
dec
jg
jmp
push
mov
mov
push
push
ja
cmp
popf
sub
mul
pop
cli
mov
and
int
xchg
retf
add
dec
aad
jg
std
mov
out
(bad)
repz
out
jl
pop
mov
loopne
test
out
cwde
fisubr
f2xm1
mov
sbb
sbb
pop
jmp
stc
sar
xchg
(bad)
inc
fwait
jno
test
inc
adc
rcl
mov
adc
test
jmp
add
pushf
add
nop
cld
mov
jnp
mov
pop
adc
inc
shl
add
retf
dec
nop
outs
aaa
loop
jmp
cmp
int
repnz
xchg
dec
and
jge
jmp
xchg
jl
cwde
cmp
jle
cmp
ds
popf
mov
add
ins
stc
push
pop
mov
es
lea
jae
xchg
xchg
cs
or
pop
push
imul
inc
and
xchg
mov
adc
pop
mov
fwait
mov
ja
mov
mov
push
loopne
sbb
or
xchg
jnp
dec
repz
dec
mov
jae
das
mov
ret
mov
sbb
outs
inc
dec
mov
or
inc
cmp
js
pop
popa
xchg
or
xor
xchg
(bad)
pop
xchg
cmp
push
loop
es
dec
imul
jmp
(bad)
inc
in
add
retf
xchg
add
imul
cdq
shl
push
add
repnz
arpl
push
adc
leave
jo
aam
outs
loop
push
fst
sub
in
out
push
jp
je
add
call
sub
ins
fild
sar
push
sub
daa
add
adc
and
and
shr
xor
adc
je
xchg
mov
(bad)
in
mov
bound
dec
mov
sbb
fild
lock
cmp
jmp
pop
ficom
ror
iret
push
movs
cmps
cmc
cmp
aaa
cmp
popf
push
shl
jp
sub
xor
hlt
cdq
ins
jmp
dec
mov
cmp
nop
xchg
xchg
xor
imul
mov
xchg
jmp
mov
aas
adc
or
repnz
js
adc
loopne
xchg
icebp
inc
jecxz
xchg
mov
push
push
fnstsw
pop
push
and
pusha
out
inc
jmp
std
pop
test
mov
(bad)
(bad)
push
jnp
dec
pop
jecxz
ss
lock
cmp
ss
and
or
xchg
jl
imul
jg
xchg
fistp
add
sub
pop
jp
dec
arpl
mov
and
mov
stos
dec
pushf
(bad)
es
push
fsub
xchg
inc
mov
fiadd
lods
gs
adc
ror
shl
sub
xor
pop
sub
mov
cdq
adc
fdivrp
int3
inc
mov
mov
inc
das
cli
mov
adc
add
popa
adc
adc
push
jbe
push
push
popa
sub
pushf
push
sbb
xor
sub
cmp
popf
mov
adc
retf
push
lock
mov
nop
cmp
loopne
mul
fimul
std
mov
test
push
test
adc
movs
mov
cdq
out
mov
dec
dec
sahf
xor
and
pop
std
leave
and
mov
test
lock
jne
int
and
add
dec
pop
neg
jl
mov
xchg
shl
push
mov
cli
in
jle
loop
sbb
jp
dec
cdq
fisttp
ret
sub
shl
or
rcl
pop
sahf
ret
push
mov
mov
sbb
jmp
mov
cs
es
sbb
and
dec
mov
imul
rcl
test
fbstp
cmps
call
pop
cmp
mov
aam
loopne
add
(bad)
cmps
inc
xchg
into
sti
and
ret
popa
(bad)
fidivr
sbb
loope
and
push
movs
ins
dec
mov
ss
cwde
loope
push
cdq
out
dec
mov
add
inc
imul
pushf
jbe
push
std
dec
ror
dec
xchg
(bad)
cmp
(bad)
fcom
je
aaa
cmp
int3
pop
push
cmps
sbb
cmp
retf
mov
mov
mov
lock
iret
add
sbb
rol
inc
cmp
aam
pop
aas
repz
pop
dec
sbb
leave
add
test
mov
push
je
cmp
dec
mov
gs
mov
aaa
dec
mov
sbb
mov
jno
int
or
mov
int3
cmp
call
mov
sub
mov
inc
popf
xchg
es
imul
pop
pop
rol
dec
addr16
dec
(bad)
leave
mov
jae
lds
or
je
nop
ins
push
pop
clc
xchg
push
push
out
(bad)
sar
icebp
xor
popf
test
or
lock
into
js
sbb
jns
stc
add
(bad)
stos
aam
mov
xchg
pop
in
test
jnp
int
fcom
pop
and
frstor
dec
push
sahf
xor
popf
sbb
clc
ficom
call
dec
sbb
enter
xchg
pop
xor
cwde
cmp
fstp
mov
ss
pop
push
push
xchg
add
push
ins
jae
pop
dec
call
adc
shl
sti
push
cld
les
adc
push
das
sbb
movs
inc
mov
mov
mov
test
lods
dec
push
repnz
mov
jge
pop
fcom
and
jg
cwde
pop
and
jae
xchg
je
mov
xor
(bad)
out
stos
pop
inc
inc
repnz
pop
ret
xchg
loopne
ins
sti
aam
and
mov
and
push
fild
loopne
mov
xor
mov
jnp
xlat
retf
call
movs
cmp
xchg
stos
loopne
scas
xchg
fsub
jne
jb
repnz
shl
sub
cli
adc
or
dec
mov
aaa
mov
xor
int
movs
cmc
add
clc
sub
pop
in
repz
sub
js
xor
xchg
iret
loop
mov
sub
test
cwde
ret
or
nop
call
sub
mov
sub
test
lods
mov
xchg
les
ins
stos
xchg
addr16
dec
and
or
mov
pop
mov
cmp
aas
cmps
cmp
pop
jp
sbb
les
inc
iret
fadd
rol
fstp
test
cwde
jp
inc
arpl
pop
pop
popf
mov
dec
repnz
dec
fwait
mov
sahf
lahf
inc
sbb
and
jne
or
(bad)
pop
push
dec
adc
js
movlps
loopne
shl
test
dec
outs
xchg
dec
xchg
test
mov
dec
outs
push
les
xchg
push
xchg
test
cmps
lea
lods
push
pop
les
mov
rcl
jb
cmps
sbb
mov
jp
push
and
(bad)
cwde
pushf
lods
sbb
call
div
mov
fnsave
inc
cmp
mov
mov
fisubr
and
sub
scas
sub
outs
fs
gs
ret
add
push
dec
call
sbb
in
pop
sub
mov
cmc
call
fsub
loop
rcr
sbb
cld
sar
pusha
xor
jb
mov
iret
int3
mov
out
xchg
clc
pop
out
iret
iret
and
push
sbb
jno
in
int3
dec
and
mov
and
mov
stc
sbb
out
sahf
inc
mov
mov
inc
and
retf
jge
jp
add
pop
adc
call
jl
pop
sbb
mov
xchg
inc
jmp
push
mov
add
not
popa
fucomi
fwait
fs
and
test
js
ins
clc
(bad)
xor
dec
xchg
loope
sar
inc
push
ins
pop
and
push
sub
xlat
fstenv
dec
outs
jle
jle
mov
into
sub
fincstp
pop
pop
popa
out
cld
js
jno
not
ret
cmps
xchg
lods
cmps
jmp
loope
retf
jb
popf
(bad)
fld
lock
aas
retf
popa
mov
push
inc
aaa
daa
popf
loopne
inc
pushf
add
add
sti
sahf
push
ret
pop
lock
pop
cmp
cmps
rcl
idiv
imul
shl
sub
jnp
test
pop
(bad)
cli
jnp
inc
fnsave
jmp
xchg
popf
pop
sbb
cmp
dec
dec
ss
(bad)
into
xlat
fisub
jne
mov
call
pop
retf
ins
xchg
frstor
mov
sub
(bad)
or
add
xchg
popa
in
or
loop
mov
ret
dec
test
push
movs
iret
cmps
gs
stos
hlt
retf
xlat
stc
push
repnz
dec
nop
call
pop
mov
mov
cmp
sub
push
inc
xchg
aam
inc
sub
jne
jne
mov
pusha
jp
mov
aam
lahf
stos
stos
in
fimul
(bad)
or
(bad)
sub
popf
punpckldq
js
or
mov
(bad)
shl
push
pop
and
shl
jl
sbb
out
(bad)
mov
xchg
dec
cwde
test
neg
pop
push
int3
adc
push
mov
cs
jno
call
arpl
xchg
(bad)
data16
shr
dec
jmp
mov
dec
addr16
xor
arpl
pop
jge
push
loopne
(bad)
rep
scas
stos
call
sub
dec
stc
(bad)
loopne
loope
lods
cmc
sbb
inc
sub
popf
scas
sub
xchg
and
inc
sar
fwait
sbb
stos
stos
xchg
mov
add
mov
and
(bad)
push
fist
pop
xor
aaa
cwde
jl
pop
lock
das
xchg
sub
(bad)
in
adc
push
push
clc
call
(bad)
jb
or
pop
out
push
pop
mov
cmp
addr16
ins
(bad)
dec
dec
mov
cmp
stc
mov
inc
push
cs
jge
add
and
mov
cmp
aam
push
dec
bound
adc
call
leave
scas
xchg
sahf
mov
ss
in
xor
daa
push
das
xchg
fdivr
mov
mov
stos
int
cli
sbb
push
mov
fwait
pop
mov
pop
and
xchg
dec
int
ror
xchg
inc
fwait
scas
sub
jmp
jo
xor
sbb
loope
cmps
dec
xchg
mov
rcr
and
push
xchg
jmp
(bad)
in
jne
mov
jns
sbb
int3
and
jmp
das
sub
das
fmul
dec
xor
add
or
es
mov
dec
leave
lods
out
adc
jecxz
xor
scas
inc
cli
pop
push
lahf
sbb
ss
ja
inc
xchg
(bad)
ja
aaa
dec
mov
mov
fadd
(bad)
push
(bad)
sbb
pop
dec
cmc
xchg
sahf
mov
fidivr
cwde
jp
jmp
jmp
sub
aaa
inc
ror
inc
aam
test
push
mov
ret
int3
in
in
cdq
jle
stos
dec
push
xchg
and
sub
ss
dec
das
sub
mov
loope
mov
sbb
xchg
mov
or
cmps
out
inc
cmp
mov
(bad)
fmul
or
jmp
loope
mov
xchg
mov
mov
sti
nop
scas
pushf
pop
shl
aam
into
test
add
mov
fisttp
(bad)
cmp
mov
xor
push
sub
ins
sub
push
pop
sbb
ja
push
pop
push
push
mov
pop
add
fisttp
xor
xor
push
aaa
rcl
mov
mov
mov
and
repz
stos
mov
std
pop
popf
into
mov
or
movs
out
add
daa
adc
mov
aad
and
sbb
dec
add
cmp
sub
gs
fcomp
shl
dec
addr16
xchg
jle
mov
pop
pop
aaa
cmp
add
scas
cmp
jmp
add
xchg
sbb
and
mov
dec
push
add
mov
shl
(bad)
jmp
lods
inc
mov
xchg
inc
jle
push
test
mov
pop
xchg
jns
lea
je
jp
cld
bound
or
dec
mov
frstor
lods
stc
push
loop
jne
add
jo
and
push
jb
xor
sub
pop
dec
xchg
push
mov
sar
push
loopne
call
push
jg
jl
ret
sar
ds
jp
dec
scas
(bad)
inc
outs
repz
dec
stos
mov
push
mov
pop
mov
sbb
fdivr
popa
pop
or
xor
mov
push
inc
adc
xchg
mov
aam
dec
push
fistp
xchg
xchg
daa
jo
pop
ret
ror
neg
addr16
push
add
test
imul
mov
pop
in
fwait
pop
cmc
fst
pop
and
fcom
pop
cs
dec
sub
pcmpgtb
out
pop
push
mov
cmps
jg
jb
add
push
mov
shl
pop
push
push
mov
shl
push
mov
dec
cmps
daa
aam
push
xor
ror
mov
call
lds
jg
out
and
aad
imul
(bad)
push
sub
ins
daa
ds
dec
dec
lock
arpl
push
inc
cmp
mov
cmp
frstor
adc
or
movs
and
fstp
ja
scas
cmps
sub
scas
addr16
leave
aas
xor
pushf
and
xchg
add
lea
cmc
and
push
push
sub
addr16
jns
pushf
loopne
in
add
sbb
ss
mov
popf
loope
xor
push
jmp
clc
js
cs
pop
mov
xchg
cli
or
mov
cmc
gs
mov
xchg
and
loopne
jmp
fcmovbe
inc
xchg
adc
sti
pop
mov
js
push
push
pop
push
sbb
in
and
and
and
addr16
into
push
cmp
add
fstp
and
outs
shl
test
dec
nop
adc
fsubr
adc
mov
cmps
jns
pop
cmp
js
xor
call
jno
mov
jb
stos
clc
pop
call
or
popf
mov
mov
rcl
pop
pop
ret
aad
dec
and
mov
dec
aad
dec
cmp
push
push
aaa
test
fmul
das
xor
xor
pop
mov
enter
mov
lea
dec
push
or
pop
and
push
sub
cmp
push
stos
fdiv
mov
or
cmps
sbb
pop
imul
test
mov
je
add
mov
hlt
cmps
and
dec
adc
xlat
pop
adc
loop
daa
ss
xchg
dec
sbb
std
imul
pusha
or
dec
loop
mov
mov
adc
mov
test
icebp
xchg
jge
cmc
dec
fidiv
jp
popa
aas
rcr
test
lds
mov
movs
imul
or
cmp
mov
test
mov
push
jnp
xor
(bad)
mov
cwde
cmp
xchg
mov
push
add
jecxz
pop
push
sbb
xchg
xchg
sti
push
push
(bad)
cmp
rcr
push
std
imul
dec
call
dec
fnstsw
sbb
push
mov
data16
cld
lods
pop
lahf
add
loopne
adc
dec
xor
cmps
pop
sbb
call
dec
xchg
lods
jecxz
push
mov
fistp
sub
push
ins
inc
dec
jo
xchg
push
mov
push
cmp
pop
in
dec
(bad)
cmp
xchg
add
mov
push
mov
push
cmp
stos
xor
pop
mov
shr
cmp
out
xor
lahf
jae
jnp
jns
mov
mov
mov
mov
cmp
aaa
cs
loope
or
mov
jle
pop
fistp
mov
mov
repnz
js
cmps
lods
sbb
mov
dec
dec
(bad)
jnp
movs
int3
sti
add
icebp
pop
pop
pop
xchg
popa
jl
leave
dec
jno
and
mov
add
and
push
sbb
pop
fistp
loop
repz
sbb
int3
out
add
or
lods
pop
sti
out
push
dec
int
aaa
jge
mov
mov
rcl
pusha
mov
(bad)
fstp
fwait
push
retf
pusha
fstp
adc
xlat
adc
cmp
push
dec
or
(bad)
ins
in
imul
leave
mov
scas
fwait
js
clc
pop
xor
mov
dec
retf
arpl
and
cli
int
push
sti
xchg
bndstx
mov
addr16
das
and
daa
or
sub
ret
leave
jns
call
jne
dec
int3
popf
dec
inc
or
inc
mov
sub
or
jecxz
mov
inc
jmp
ret
or
(bad)
mov
fcom
xor
cld
ret
lods
sbb
mov
in
add
pushf
inc
in
arpl
(bad)
cld
fisttp
out
jnp
test
xchg
repz
rcl
sbb
je
add
sbb
repz
rcl
pop
dec
ds
ins
and
cs
fsub
fisubr
ds
dec
xor
movs
mov
imul
(bad)
mov
jge
xchg
(bad)
stos
mov
(bad)
add
sahf
sbb
push
retf
sar
int3
mov
hlt
rcr
and
mov
shl
add
push
call
push
scas
pop
cmp
(bad)
or
scas
aaa
mov
imul
jle
loopne
loop
pop
fnstsw
and
inc
lock
sbb
jg
fwait
cmp
std
adc
rcl
mov
ja
rcl
iret
push
sub
mov
mov
call
(bad)
pop
mov
xor
pop
imul
mov
in
sub
inc
inc
rcr
xor
push
test
pop
sbb
cmp
loope
mov
jge
pop
mov
and
push
inc
pop
shl
(bad)
fneni(8087
sar
sbb
inc
jo
mov
loopne
dec
mov
dec
sbb
inc
data16
mov
pop
ja
std
mov
gs
loopne
fisub
adc
mov
and
push
icebp
dec
push
xchg
add
clc
ror
jmp
pop
cmp
mov
adc
outs
shl
imul
test
inc
and
stos
ret
push
sub
sub
cmps
push
mov
test
fwait
dec
mov
cld
out
xchg
xlat
xor
adc
jg
add
xor
sbb
inc
pop
ja
pop
push
jne
in
inc
adc
dec
xchg
in
(bad)
sar
push
inc
add
dec
mov
cmp
addr16
lock
imul
ja
dec
not
adc
test
mov
arpl
ins
popa
jo
adc
imul
cmp
ins
inc
js
es
pop
cmp
dec
mov
fadd
xchg
in
fcomp
jmp
mov
(bad)
dec
(bad)
pusha
in
sbb
cmp
fldenv
xchg
jl
sbb
fsub
mov
aaa
xchg
test
mov
jno
xor
push
mov
cmp
popf
mov
sbb
int
xchg
stos
lods
pop
bound
jl
repz
data16
jno
mov
gs
and
xchg
adc
mov
je
inc
push
(bad)
cmp
repz
psubq
mov
sbb
and
mov
lock
xchg
mov
dec
dec
adc
jle
ror
pop
repnz
mov
mov
arpl
test
add
into
add
retf
adc
sbb
sbb
stc
mov
retf
cdq
repz
jae
pop
add
repz
xchg
xor
and
dec
adc
push
mov
stc
aas
data16
pop
or
add
bound
aaa
inc
push
repnz
push
mov
out
add
(bad)
xor
pop
mov
prefetcht0
mov
and
pushf
test
out
cmp
mov
add
lds
dec
int
call
dec
mov
in
ficom
push
retf
cmp
push
mov
ja
jp
or
mov
push
and
aad
mov
ret
push
fs
popf
add
mov
push
pop
mov
inc
jmp
cmp
or
in
idiv
outs
arpl
pop
pop
ins
pop
fadd
jmp
dec
stos
lock
(bad)
xchg
mov
jne
fwait
std
test
test
jnp
xchg
(bad)
sbb
mov
dec
loopne
sbb
cdq
dec
push
or
jne
pusha
xlat
das
jle
jp
mov
(bad)
in
icebp
xor
in
mov
repnz
and
ds
out
inc
cmp
and
sub
cmc
push
sub
inc
mov
adc
sub
dec
xchg
adc
fsubrp
push
ficomp
or
sub
and
mov
fidiv
fnstcw
push
rcl
or
dec
sar
lahf
mov
int3
adc
idiv
cld
stc
and
pop
mov
dec
and
int3
mov
jae
pop
dec
jl
inc
mov
jb
mov
and
dec
pop
iret
inc
std
fisttp
add
sbb
pop
fld
dec
sbb
aad
jne
xchg
mov
pop
add
push
xchg
outs
ret
xchg
pop
push
add
out
lock
or
mov
xchg
dec
add
adc
push
sub
mov
test
sbb
int3
lds
pop
pop
sbb
cmp
inc
pop
fild
mov
enter
pop
ja
push
or
jmp
inc
movs
mov
sbb
cmp
fistp
cmp
xor
fdivr
or
stc
and
leave
sub
ja
cli
cmp
movs
mov
nop
mov
int
sahf
xor
mov
out
sbb
rol
push
shl
ja
or
pop
dec
add
jmp
sar
push
dec
jns
jb
sub
inc
dec
dec
push
mov
cmps
jne
mov
les
xchg
adc
dec
aam
and
jno
and
push
dec
lds
sbb
sub
jg
xchg
clc
mov
and
or
(bad)
mov
pop
add
cmp
in
in
jb
mov
mov
sbb
movs
jbe
and
sbb
cmp
or
jbe
aam
push
test
push
mul
pop
pop
mov
mov
and
jmp
push
adc
mov
mov
push
stc
dec
mov
sub
sahf
mov
rol
ror
std
push
(bad)
cmp
js
pop
dec
dec
mov
test
shl
add
sub
push
push
push
pop
jl
pop
mov
cmp
pop
stc
std
or
ds
add
(bad)
int3
jne
pop
and
ret
mov
push
dec
rcr
fnstsw
xor
(bad)
push
jmp
or
push
inc
sub
test
mov
lea
fsub
pop
popa
cmp
sti
sbb
dec
cmp
mov
(bad)
aaa
fldl2e
or
dec
jg
or
pop
ins
mov
cmps
jnp
faddp
cli
aaa
xor
outs
ret
xlat
add
add
imul
push
or
inc
mov
cmc
xor
loopne
dec
pop
sub
ins
xor
cmp
cld
jae
pop
adc
or
xchg
jmp
mov
dec
inc
push
add
push
retf
cmp
fsub
jmp
test
jne
or
mov
ret
rcr
outs
sbb
cmc
imul
mov
int3
inc
adc
not
loopne
in
lahf
jnp
mov
xor
jg
pop
cmp
pop
push
stos
mov
push
cmp
and
neg
jmp
jae
jle
stc
push
dec
sub
push
nop
or
push
jmp
xchg
push
rcr
ja
adc
pop
mov
pop
mov
ss
(bad)
push
mov
sub
sbb
sbb
das
pop
aad
inc
adc
rcr
pop
(bad)
std
mov
clc
aas
gs
movs
ret
dec
pop
push
cmp
push
sub
push
not
gs
inc
and
cld
ss
jae
(bad)
mov
cmp
xchg
pop
inc
aas
dec
xor
fisttp
lds
jmp
mov
ins
pop
xchg
dec
push
sub
or
sahf
push
pop
cmp
dec
push
retf
pop
and
loopne
and
mov
push
adc
outs
pop
test
xlat
int
push
ror
mov
jge
out
xchg
xchg
rol
add
sbb
cs
dec
cmp
(bad)
sti
out
jecxz
mov
jo
jle
mov
cmp
mov
jno
inc
addr16
cmc
xchg
push
aaa
xlat
bound
pop
sti
ror
loop
xor
inc
jecxz
cmp
icebp
dec
add
(bad)
das
mov
push
push
cmp
pop
fwait
inc
pop
inc
or
or
pushf
(bad)
xchg
stos
les
cmp
xor
push
idiv
mov
loope
adc
add
inc
pop
sub
fsubr
test
inc
jg
jo
outs
dec
dec
cdq
add
icebp
sar
(bad)
mov
arpl
push
mov
xchg
push
test
mov
add
loop
mov
cmps
inc
add
call
retf
stc
inc
push
xchg
inc
xchg
icebp
retf
pop
or
inc
add
test
mov
xor
pop
sbb
dec
pslld
cmp
sbb
push
jge
mov
pop
rcr
sub
aam
sub
cmp
sub
cdq
mov
out
and
loopne
pushf
push
mov
ins
dec
adc
push
add
pop
ds
ins
cmp
push
es
mov
lods
idiv
adc
hlt
movs
add
cli
inc
dec
xor
idiv
xor
dec
aaa
xlat
ret
adc
mov
xor
test
into
mov
xchg
repz
ins
mov
xchg
fcom
adc
sbb
pop
bound
mov
dec
ror
xchg
xchg
or
xor
dec
rcr
in
cmp
inc
pop
(bad)
in
pop
stos
mov
fcomp
mov
mov
addr16
fs
loope
(bad)
lahf
je
pop
fcom
movs
pop
jmp
adc
cdq
shr
pop
mov
push
mov
inc
sbb
jns
adc
xor
adc
inc
fcomp
pop
jg
rol
mov
mov
xchg
mov
bound
sbb
and
fsubr
pop
jae
pushf
mov
mov
dec
sub
test
and
mov
cs
addr16
adc
inc
inc
cmps
test
jle
aad
or
sahf
js
ins
in
push
pop
pop
test
dec
cmps
test
inc
sbb
add
test
dec
pop
fst
in
fild
mov
mov
push
or
rol
push
loope
les
xchg
(bad)
scas
in
das
xor
lahf
stos
data16
fmul
pop
or
cmp
outs
mov
pop
daa
popa
stos
and
pop
fcom
aad
pushf
pop
dec
pop
lods
sub
out
jecxz
loopne
dec
sub
pop
jmp
sahf
mov
pop
add
cmovnp
retf
pop
fxch
mov
push
xor
sub
and
outs
shl
xchg
xchg
repnz
scas
dec
(bad)
mov
jae
scas
fwait
cmp
push
sub
mov
in
and
mov
xchg
mov
cmp
xchg
imul
pop
movs
add
mov
push
ss
fidiv
dec
jne
iret
call
bound
pop
add
mov
addr16
cmps
and
mov
pop
inc
and
jge
inc
pop
sub
xchg
jbe
in
sub
add
jmp
test
mov
mov
xchg
cwde
in
sub
ret
pop
dec
jmp
xchg
bound
imul
or
aas
ficomp
fstp
push
sbb
js
int
push
xor
push
xchg
mov
mov
bound
shl
pop
aaa
(bad)
mov
jmp
out
add
hlt
jbe
pop
jg
adc
iret
jg
mov
stos
jle
and
addr16
jmp
test
mov
and
cmp
sub
dec
jb
or
and
rcl
cmc
dec
out
hlt
ds
shr
jmp
ins
xor
iret
pop
jmp
das
sbb
mov
sub
jge
inc
test
mov
sbb
inc
ds
int
fxch
push
(bad)
ret
rcl
pop
sub
imul
out
sar
pop
pushf
add
push
mov
mov
inc
lock
les
int
mov
int3
sbb
mov
jo
push
fiadd
push
rcr
push
pop
out
pushf
and
inc
mov
push
test
xlat
inc
dec
xor
mov
sub
jmp
shr
adc
add
adc
jle
ss
nop
xchg
pop
xchg
call
pop
pop
pop
dec
mov
inc
aaa
test
(bad)
cmp
sbb
dec
fmul
add
push
movs
adc
push
(bad)
ror
ss
mov
not
adc
imul
dec
jmp
data16
std
repnz
push
jmp
pop
add
xchg
jnp
in
xor
xchg
adc
or
cmc
jl
mov
xchg
les
and
inc
test
mov
mov
(bad)
push
and
stc
loope
mov
cmp
adc
aad
inc
fsubrp
jbe
add
enter
jbe
dec
sub
test
push
xor
jg
pop
adc
neg
inc
test
ins
sub
cmps
cmp
(bad)
or
inc
imul
sub
out
adc
pop
mov
adc
inc
imul
fnsave
add
mov
in
adc
jno
sub
fmulp
inc
and
ds
or
mov
mov
arpl
add
inc
xchg
int3
jae
xchg
adc
xchg
popa
jo
(bad)
stos
pop
add
xchg
cmp
fcomp
lea
pushf
pop
out
inc
fdivrp
push
fsubr
fidiv
dec
loop
jle
nop
push
aad
jmp
inc
(bad)
cmp
ss
xchg
in
jmp
cmpps
ins
cmps
fucom
push
ds
sub
gs
repz
lds
dec
loop
cwde
fisubr
fcmove
lods
imul
xor
xchg
fwait
adc
mov
sbb
call
sahf
jne
call
dec
inc
mov
push
ficomp
not
pop
sub
call
outs
mov
xor
pop
scas
ds
add
(bad)
in
pusha
jnp
das
cmps
mov
mov
mov
xor
xchg
cwde
xchg
aam
xor
(bad)
(bad)
cwde
cwde
fimul
sbb
and
and
xchg
pop
stos
js
aam
arpl
or
sti
push
in
push
imul
shl
retf
add
and
outs
push
sbb
int3
(bad)
adc
fisub
mov
jp
retf
push
out
fstp
mov
call
mov
test
jb
pop
add
vpsubusw
mov
mov
loop
ret
or
mov
fsub
aaa
cli
inc
pop
in
ja
push
repnz
pop
pop
loope
mov
cwde
xchg
sub
inc
cmps
mov
cmp
jg
jle
iret
dec
mov
call
fwait
and
dec
js
mov
data16
and
mov
pop
mov
mov
fwait
mov
(bad)
loop
push
paddsw
call
adc
cmps
mov
hlt
jbe
enter
js
movs
xchg
adc
cs
pop
loope
std
or
ffree
mov
inc
pop
aam
cmp
cld
rcr
pusha
(bad)
push
out
jle
call
push
add
xor
in
fild
pop
pop
dec
fnstenv
and
xor
pop
adc
cmps
mov
outs
lds
jg
pop
fdiv
out
xlat
cmp
inc
inc
mov
mov
popf
or
mov
fisttp
push
dec
dec
push
mov
xor
out
mov
leave
inc
(bad)
shl
enter
push
je
and
jno
xchg
enter
add
fnstenv
out
mov
cmp
or
cmp
mul
xlat
xchg
xchg
stos
pop
and
ret
add
lea
mov
scas
xlat
in
into
or
add
cmp
pop
out
fxch
cmps
jmp
add
sti
xor
push
or
fstp
pop
mov
retf
stos
dec
clc
pop
rcr
and
dec
fidiv
or
mov
cmp
mov
cmps
neg
into
fmul
jge
repz
mov
mov
es
pop
mov
mov
pop
iret
fld
cmp
dec
icebp
ss
push
js
pushf
push
mov
scas
idiv
pop
stc
lods
sbb
fadd
and
std
dec
pop
fistp
fnstsw
fwait
jb
cmp
mov
ja
frstor
jmp
or
ss
sub
pop
xor
rol
cli
lods
repz
push
mov
enter
push
(bad)
mov
jg
int3
mov
sub
out
enter
ret
dec
sbb
fwait
mov
xor
add
mov
ins
int3
push
es
int3
sub
daa
push
or
loopne
test
adc
or
dec
push
pop
mov
adc
mov
mov
or
dec
das
pushf
dec
jbe
cld
add
mov
push
mov
repnz
pushf
jbe
push
mov
and
and
mov
shl
leave
xchg
aam
hlt
les
mov
test
push
out
popa
cmp
in
rcr
loopne
pop
(bad)
push
pop
or
dec
in
cwde
nop
jle
in
cmp
add
cli
adc
inc
stos
outs
dec
adc
pop
out
es
out
aaa
sbb
cs
sbb
jne
std
push
sub
ins
jo
lahf
sub
and
or
pop
stos
xchg
sbb
loope
mov
mov
mov
pop
mov
inc
push
outs
sub
sbb
fmul
shl
mov
xchg
and
lods
push
fwait
adc
mov
jl
inc
push
cmp
rcr
jo
int3
bound
inc
jge
lock
and
test
dec
dec
dec
sub
xchg
xlat
movs
scas
xchg
xor
or
ret
test
inc
loopne
pop
in
fbld
out
and
cdq
dec
push
add
les
adc
pop
cmp
push
fs
mov
mov
hlt
call
inc
or
xchg
sbb
push
dec
push
enter
fs
cmp
jmp
pop
outs
es
jmp
jo
dec
push
cmp
arpl
push
push
sti
sbb
(bad)
push
mov
jp
sub
mov
adc
jo
xor
rcl
stc
daa
cmp
fidivr
(bad)
mov
addr16
inc
mov
jne
jb
jno
int3
and
xchg
(bad)
fst
push
into
popa
lods
mov
jge
ret
into
pop
mul
sub
lods
mov
sub
mov
mov
mov
push
imul
push
cld
sub
sbb
dec
(bad)
dec
(bad)
fld
pop
mov
mov
ins
aaa
fisttp
clc
pop
test
and
gs
xchg
mov
repz
repz
inc
(bad)
jmp
inc
sahf
jge
cwde
adc
xchg
sbb
push
inc
mov
imul
int3
xchg
loop
adc
and
pop
push
fisubr
dec
pop
out
sub
pop
ins
fs
mov
or
add
jnp
int3
aaa
lea
(bad)
dec
push
out
shl
les
xor
icebp
xchg
ror
cmp
(bad)
lock
cmp
and
pop
outs
shl
pop
in
cmp
pushf
xchg
cmp
sbb
cmps
clc
add
movs
loop
sub
push
jo
push
xor
mov
inc
scas
xchg
div
mov
xchg
mov
dec
enter
add
test
loope
and
add
jmp
add
in
nop
xchg
(bad)
xchg
pop
sahf
ins
enter
test
pop
sbb
inc
call
xchg
scas
add
outs
aaa
cmp
pushf
or
aas
jge
push
mov
stc
push
ins
sbb
xchg
pop
mov
mov
aaa
cmp
sub
ja
push
out
movs
icebp
push
js
pop
push
cmp
push
and
popa
push
cmp
mov
xor
dec
cmp
xor
mov
lea
std
out
aam
xor
in
cmps
sbb
adc
pop
add
cmc
dec
dec
sbb
cmp
arpl
mov
xlat
ins
mov
test
push
test
or
std
dec
xchg
mov
fstp
xor
hlt
fmul
cmp
xor
mov
fistp
mov
and
fstp
sbb
in
out
push
cld
cs
inc
aas
and
pop
mov
adc
das
popa
int3
jmp
aaa
fadd
mov
cmp
and
ret
mov
adc
dec
xor
cmp
pop
pop
daa
sbb
loopne
pop
jmp
mov
(bad)
inc
aad
add
ja
popa
shr
dec
xchg
pop
gs
push
cli
cdq
sahf
jae
pop
lock
cmps
push
rcr
push
or
stos
sbb
sbb
and
jmp
daa
icebp
cmp
cmp
in
and
or
in
gs
fnstcw
scas
cld
pop
push
or
push
push
loope
repz
ja
inc
ror
cmp
leave
dec
cmp
push
mov
ja
xor
inc
int
sub
inc
xor
xor
lock
popa
fcom
dec
or
mov
call
jb
leave
aad
add
cld
xchg
cdq
adc
aad
xor
xchg
mov
lea
jo
cmp
nop
and
fwait
mov
das
sub
jmp
sub
mov
repz
xor
cld
cs
mov
dec
fisttp
and
push
rol
push
or
nop
neg
push
imul
imul
fisttp
pusha
cli
outs
lock
mov
sub
xchg
sti
dec
ss
xadd
and
dec
(bad)
hlt
outs
aad
and
push
retf
xor
dec
mov
(bad)
out
jne
mov
push
movs
jnp
add
inc
fdiv
inc
(bad)
js
sbb
movs
and
neg
pop
or
ins
push
rcr
fdiv
jp
call
daa
jb
pop
pushf
mov
adc
fsubrp
arpl
push
(bad)
adc
xchg
in
retf
pop
mov
pop
push
lahf
nop
sar
jp
pop
mov
(bad)
in
sbb
fimul
xchg
iret
jl
ins
xchg
dec
push
mov
inc
or
xchg
jne
dec
push
pop
push
mov
adc
mov
fst
(bad)
mov
loope
movs
rcl
push
ss
add
fisubr
mov
inc
aaa
popa
pop
xchg
mov
push
loop
int3
dec
in
fiadd
xchg
scas
sub
pushf
pop
ficom
ds
data16
jnp
inc
jbe
ror
(bad)
xor
sub
dec
mov
loope
xlat
push
pop
fimul
popf
mov
sbb
mov
dec
fucomp
popa
mov
adc
adc
adc
add
ror
add
lock
mov
in
add
pop
cwde
bound
add
stos
adc
or
fisttp
lock
mov
adc
sahf
adc
push
fld
test
aad
inc
pusha
loopne
xchg
sub
jg
aaa
(bad)
pop
mov
pop
repnz
push
and
fcom
call
xlat
sbb
cdq
sub
xchg
cmp
cmp
ftst
repz
mov
push
mov
(bad)
push
pop
imul
in
push
jge
xor
mov
retf
pop
adc
xor
and
cmp
rcr
shl
push
das
mov
and
xor
imul
pop
(bad)
(bad)
or
mov
loop
push
(bad)
dec
xor
lahf
popa
xchg
cli
mov
ins
mov
push
jp
push
sub
pushf
pop
jmp
jmp
enter
and
add
cmp
and
push
aam
mov
mov
jae
mov
dec
sbb
hlt
push
out
cs
loopne
adc
inc
fisttp
retf
fmul
mov
inc
rcr
jb
mov
push
fmul
dec
sbb
sahf
adc
push
cmc
ret
es
pushf
mov
(bad)
cmp
push
sub
dec
fwait
xchg
mov
pushf
jmp
rcl
clc
getsec
xor
call
or
or
arpl
xchg
sub
in
pop
mov
xchg
std
jmp
pop
aad
sbb
ss
inc
dec
aam
out
call
sub
lea
in
fsubr
jmp
fld
dec
test
and
push
xchg
xchg
stos
sbb
shl
push
xchg
push
adc
push
inc
xchg
xchg
pop
cmp
sahf
shl
jo
stos
xor
adc
adc
test
cmp
fpatan
scas
loop
mov
xor
test
loopne
aaa
push
adc
adc
scas
not
jle
in
test
dec
jge
add
adc
iret
push
dec
lahf
jl
clc
jmp
and
inc
mov
sbb
les
fiadd
and
pusha
push
jle
and
ja
push
pop
es
xor
mov
out
mov
enter
push
(bad)
sbb
jnp
gs
lahf
neg
sbb
div
inc
dec
jecxz
dec
lea
adc
inc
(bad)
jmp
push
mov
push
mov
loop
je
mov
xchg
prefetcht1
add
mov
jne
into
adc
mov
or
imul
movs
inc
in
cmps
cwde
or
xor
stos
neg
push
pop
push
int3
mov
mov
mov
push
dec
pop
jne
movs
or
xor
mov
cmovp
sub
jg
repz
mov
or
cmp
xor
shr
pop
sahf
rep
pop
pop
int3
leave
sbb
ret
lock
mov
xor
out
push
(bad)
mov
push
xor
gs
sbb
push
inc
out
sbb
test
mov
iret
mov
hlt
push
outs
pop
mov
push
pop
dec
ret
fs
out
mov
rol
cmp
adc
fistp
(bad)
dec
dec
(bad)
ror
xor
std
imul
mov
js
ja
inc
nop
sbb
(bad)
int
out
mov
mov
push
add
xchg
enter
push
and
test
pop
mov
or
xchg
call
hlt
inc
ds
inc
inc
arpl
popf
sub
mov
pop
add
lea
aam
imul
fiadd
mov
add
mov
dec
xor
into
push
test
push
add
push
rcr
mov
pop
div
pop
xchg
shl
aaa
cwde
push
repnz
(bad)
jmp
cli
push
mov
pop
dec
daa
es
or
mov
push
ret
and
dec
jae
dec
retf
push
cwde
pop
mov
sbb
inc
mov
ret
jg
call
fdiv
jne
fadd
arpl
push
dec
cs
cmp
loopne
mov
loopne
dec
xchg
mov
push
or
rcl
mov
mov
inc
cld
ins
jle
imul
sub
cmps
loop
aaa
or
jmp
jmp
push
outs
sbb
sbb
push
xor
dec
inc
cld
aaa
nop
adc
or
into
dec
call
imul
push
stc
adc
pop
push
jecxz
test
mov
cmps
clc
dec
repz
adc
sbb
les
or
adc
adc
pop
sbb
fs
push
xor
and
fld
lds
fist
inc
and
push
loopne
inc
retf
in
dec
inc
icebp
sub
outs
rol
stos
mov
cmp
mov
sti
push
xchg
sahf
mov
mov
pop
lds
dec
lods
ficom
out
xchg
(bad)
mov
pop
sub
pop
cmp
mov
movzx
int
pop
loope
cmp
adc
out
add
dec
add
lea
fsubr
(bad)
(bad)
dec
sbb
jne
push
sbb
outs
out
push
xchg
jle
mov
rcr
cmp
movs
xchg
mov
cli
stc
adc
int3
jmp
cmc
mov
and
pop
xor
in
mov
jmp
std
and
es
scas
push
movs
not
movs
les
dec
adc
cmp
in
mov
mov
out
test
leave
push
push
mov
gs
jmp
sar
inc
mov
push
fisub
inc
push
fsubr
xor
popa
shl
inc
and
or
adc
cmp
mov
lds
jbe
call
popf
jae
js
mov
imul
cld
cli
jge
adc
inc
shr
sbb
jb
sub
push
jge
dec
in
pop
movs
dec
xchg
ins
xor
cmps
inc
pop
(bad)
stos
call
daa
mov
dec
inc
xchg
gs
mov
adc
iret
icebp
fcom
cmp
test
and
push
mov
aaa
push
xchg
fwait
dec
arpl
imul
push
ret
jnp
popa
mov
push
pop
push
icebp
push
(bad)
push
hlt
dec
ins
scas
jg
jnp
adc
ja
fsubr
fwait
inc
js
jno
jle
cmc
push
xchg
cli
fcmovbe
pop
cdq
jg
mov
pop
adc
fcomp
fist
sbb
sub
icebp
xor
pop
xchg
sahf
gs
fs
or
mov
fs
adc
xlat
aam
mov
(bad)
rcl
pop
sub
test
push
mov
xchg
(bad)
cmp
jmp
jnp
lods
cs
mov
sub
cmp
mov
mov
jno
pop
scas
lock
(bad)
std
xor
cdq
sub
ins
lahf
jno
je
je
mov
ins
push
sub
out
xchg
push
pusha
pushf
cli
and
(bad)
out
sub
add
sub
push
push
inc
clc
mov
jnp
jmp
out
out
clc
push
pop
lahf
and
inc
inc
add
mov
int
xor
loope
int3
push
shl
mov
repnz
test
loop
sub
cmp
idiv
icebp
dec
out
xor
add
bnd
ret
movs
loopne
ss
cmp
cmp
fdiv
and
push
das
and
mov
push
mov
or
retf
push
adc
ds
push
retf
retf
xor
gs
in
fmul
int3
and
dec
pop
sbb
cmps
loop
mov
jl
xchg
popw
jne
sbb
lock
sbb
add
loope
xchg
fcomp
imul
mov
cmp
lds
std
imul
add
out
add
test
mov
dec
xchg
arpl
out
scas
mov
adc
push
movs
inc
je
cmps
xchg
xor
(bad)
aad
ds
mov
mov
or
push
add
adc
leave
aas
mov
das
out
fidiv
(bad)
pop
mov
ret
xchg
cmp
adc
xor
xchg
cmp
sub
xchg
loopne
mov
mov
out
cmp
push
ss
movs
adc
icebp
add
push
imul
mov
out
adc
test
mov
loop
dec
aaa
adc
mov
sti
cmp
(bad)
pushf
mov
lods
push
lods
push
in
or
ror
jg
push
ret
push
iret
iret
jb
sbb
imul
shr
mov
adc
xlat
lock
dec
and
loopne
loopne
cwde
xor
test
scas
inc
loop
cmp
cmp
jne
out
lds
sbb
repnz
jb
or
mov
xor
lock
shr
not
ins
push
ins
mov
scas
and
add
ror
inc
loopne
mov
test
cmp
test
ficom
inc
pop
sbb
sub
jmp
dec
pop
test
jne
or
adc
fs
cmp
push
arpl
iret
push
es
push
inc
mov
inc
lods
pop
popf
fsub
fisttp
icebp
loop
outs
pop
ss
in
dec
icebp
dec
xchg
test
mov
enter
sub
pusha
lea
xor
mov
fcom
in
(bad)
inc
jge
ins
pop
sti
sub
jg
sahf
rcl
fdivr
and
sbb
inc
push
inc
aaa
out
inc
test
pop
(bad)
test
aas
popf
loopne
ficom
dec
pop
lahf
out
in
xor
out
and
test
mov
jns
test
dec
ins
push
inc
mul
jo
dec
push
cdq
jl
icebp
inc
cs
pop
mov
cmp
arpl
xchg
and
adc
rol
daa
aaa
fisubr
push
xor
ins
loop
mov
fwait
ins
les
cmp
inc
fwait
push
(bad)
je
imul
stos
and
mov
ja
dec
shl
push
inc
xlat
or
and
ud0
mov
add
xchg
inc
or
mov
lds
adc
push
sbb
mov
xchg
movd
or
aas
jle
pop
and
jb
lea
inc
mov
inc
(bad)
push
sar
fcomp
sbb
popa
mov
outs
ret
cmp
cmc
push
add
addr16
call
push
(bad)
xor
jl
mov
loope
js
add
imul
add
in
out
mov
call
push
add
adc
and
movs
pop
call
in
aaa
and
xor
shl
aam
dec
pop
xchg
push
les
clc
xchg
xor
and
fidiv
int
lahf
sar
jmp
ja
dec
rol
xor
scas
adc
adc
pop
jle
inc
jnp
cmp
cld
inc
jmp
mov
ror
pop
not
cmp
cmp
sahf
cmp
cmp
jge
sub
pop
xchg
inc
mov
sub
jge
adc
dec
inc
pushf
dec
jne
pusha
mov
int
(bad)
lods
ficom
inc
pop
adc
jg
inc
pop
adc
(bad)
mov
addr16
jnp
push
ins
fst
lock
push
push
in
mov
fcom
loop
ins
jmp
adc
inc
mov
out
lds
test
sbb
rol
push
fs
jns
sbb
jmp
enter
stos
mov
mov
loop
fld
sbb
test
enter
pushf
push
add
dec
sub
mov
pusha
xchg
xor
shl
cwde
rcr
dec
mov
cmp
arpl
fnsave
rol
(bad)
int3
shl
mov
jg
push
out
push
ror
addr16
(bad)
or
(bad)
mov
inc
repnz
pop
mov
pop
pop
inc
mov
cld
mov
jne
mov
jge
or
or
cmps
imul
jb
mov
pop
pop
adc
in
cmp
xor
test
jp
ja
or
retf
mov
ficom
sbb
pop
outs
es
test
stos
loopne
aad
mov
sar
stos
mov
repz
adc
div
inc
sbb
pop
or
lea
mov
mov
push
(bad)
sub
imul
jae
icebp
xor
hlt
xlat
adc
test
mov
pop
adc
outs
fcmovbe
dec
push
pop
rcl
xor
vmovdqu
dec
pop
pop
cmps
mov
jb
fidivr
push
adc
push
mov
add
xchg
ret
push
pop
test
not
dec
bound
adc
mov
sub
retf
push
add
and
and
jae
es
dec
std
cwde
mov
mov
pop
ja
xchg
(bad)
and
sub
stos
xchg
or
xchg
or
push
ja
in
xchg
pop
jnp
lds
inc
cmp
clc
mov
bound
loope
test
inc
push
and
sbb
shl
add
inc
mov
popf
jo
test
cmp
xor
scas
sti
push
push
aaa
gs
enter
inc
mov
xor
shl
mov
les
ins
ret
pop
fucom
adc
lea
fcmovnbe
neg
push
fst
add
mov
jb
inc
push
sub
fisttp
inc
sbb
jmp
outs
cmp
lods
xchg
xlat
in
sub
mov
imul
dec
and
gs
or
pushf
pop
xchg
fisttp
in
or
inc
push
js
ret
or
add
xchg
xchg
ror
push
sbb
sub
jno
movhps
ja
adc
add
in
fidivr
repz
cmp
test
add
push
push
mov
pop
enter
jmp
(bad)
jne
lahf
call
mov
jb
aam
pop
mov
cs
sub
xor
ins
pushf
sbb
push
xchg
xchg
fnsave
mov
pop
call
loopne
add
sbb
push
ficom
fiadd
push
cmp
pop
push
jecxz
pop
lea
ds
out
pushf
sub
cmp
pop
cwde
arpl
pop
cdq
xchg
(bad)
(bad)
dec
aaa
jge
js
jmp
js
adc
aas
retf
std
mov
fimul
popf
lods
loopne
pop
and
add
aam
and
das
cmp
les
sub
dec
or
sbb
lahf
or
mov
aaa
movs
cmp
out
fistp
pop
pop
add
add
enter
pop
lea
pop
mov
cmps
or
xlat
pop
inc
xor
push
or
inc
and
movzx
ds
sub
mov
aam
gs
xor
add
inc
mov
mov
loope
movs
lahf
cmp
nop
cmp
scas
loope
sub
xchg
out
retf
xor
ror
out
pop
cmp
xchg
mov
jge
xor
push
sub
jmp
inc
mov
test
pop
mov
stc
add
xchg
int
int
repz
and
mov
lahf
(bad)
pushf
add
es
add
push
enter
ins
ret
cmp
mov
mov
mov
adc
dec
mov
(bad)
jle
inc
cmp
clc
dec
mov
fcmovnbe
pop
into
aad
fidiv
fwait
ins
bsf
pop
sbb
cmp
sbb
outs
cmp
mov
ret
daa
sbb
leave
enter
mov
inc
mov
hlt
dec
dec
(bad)
int3
gs
rcr
les
iret
add
xchg
hlt
jno
sub
ror
add
push
and
mov
rol
(bad)
popf
out
xchg
dec
ds
push
out
(bad)
adc
je
sbb
daa
mov
(bad)
pop
aam
push
outs
clc
sti
rcr
adc
lock
dec
cmp
imul
ss
lea
arpl
xchg
arpl
mov
hlt
cmp
test
cmp
stos
test
push
pop
int3
jb
call
push
mov
shl
push
pop
cmp
pop
(bad)
call
jle
in
jge
xchg
dec
les
xchg
cmps
xchg
adc
repz
mov
arpl
xchg
adc
sub
dec
in
pop
in
div
mov
sub
lock
test
inc
imul
mov
inc
nop
loopne
mov
jl
retf
pop
div
pusha
jbe
(bad)
xchg
bound
cmp
mov
adc
fdivrp
jl
or
jb
adc
mov
test
pushf
ror
mov
xchg
and
stos
push
jne
loope
jne
les
jbe
test
fld
lahf
and
jl
sub
or
cmp
cmps
and
into
in
std
mov
mov
mov
or
fist
push
push
fdivr
rol
sar
rcr
lds
sahf
and
nop
sub
sbb
scas
add
mov
sub
pop
mov
inc
cmp
push
push
aam
std
stos
mov
pushf
sub
mov
sbb
mov
ret
out
mov
out
jnp
shl
and
xchg
jp
icebp
push
ficomp
pushf
push
sti
jmp
cmp
out
in
adc
neg
push
(bad)
stc
leave
sub
lahf
hlt
push
and
or
rcl
xchg
sti
mov
mov
cmp
fstp
shl
and
xor
mov
leave
(bad)
loopne
test
dec
pop
xchg
adc
stos
lock
in
xchg
lds
(bad)
dec
jmp
sub
mov
mov
fdiv
pop
pop
ins
cmp
push
inc
pop
pop
jecxz
cmp
test
jno
clc
addr16
cmc
or
ins
inc
cs
sub
(bad)
in
xchg
scas
loope
fisubr
cmp
pushf
jmp
inc
(bad)
or
lods
dec
arpl
mov
inc
cmp
push
mov
movs
xor
push
and
adc
aam
pop
xor
and
(bad)
loop
or
cmp
mov
fild
cmp
enter
outs
dec
fwait
loop
div
arpl
jae
sbb
loop
jecxz
pop
push
xor
jecxz
loopne
push
xchg
(bad)
lahf
shl
sbb
mov
sub
push
push
invd
shl
addr16
jne
(bad)
das
push
mov
in
setle
fs
push
or
or
les
ins
jbe
mov
push
xlat
cld
sub
lea
lahf
lods
mov
push
mov
xor
or
bound
adc
sub
bound
(bad)
xchg
test
bswap
sahf
inc
jge
in
inc
je
gs
ds
add
ins
inc
inc
or
cmp
fidivr
and
add
fdiv
std
pop
div
xchg
and
into
push
jge
stos
(bad)
add
mov
in
popf
(bad)
fld
in
mov
pop
test
dec
cmp
and
pop
push
mov
sbb
sbb
sbb
dec
out
dec
in
mov
adc
sub
cmp
loop
mov
adc
leave
(bad)
shl
jno
or
lds
mov
fbstp
lea
das
add
xlat
cmp
xlat
imul
add
fldcw
lods
adc
push
pusha
shl
cmp
loop
push
jae
mov
(bad)
fstp
dec
out
loope
ins
cli
xor
dec
in
ficomp
aam
adc
lods
aaa
mov
mul
add
enter
clc
inc
(bad)
aam
push
jecxz
pop
in
in
pop
sub
int3
nop
adc
push
imul
aad
jl
ror
or
(bad)
sbb
push
and
popa
dec
test
int3
xchg
push
or
push
xor
cmps
fstp
pop
mov
rcl
popa
out
dec
or
cld
push
popf
mov
pushf
push
jg
nop
mov
inc
stos
dec
jb
sbb
push
sub
mov
mov
mov
add
jmp
mov
mov
cwd
ficom
push
test
mov
(bad)
(bad)
out
scas
sub
test
icebp
xchg
mov
add
les
push
retf
ins
cmp
sub
push
scas
pushf
mov
xchg
and
repz
sub
sbb
pop
in
addr16
add
sub
inc
mov
adc
popf
mov
lahf
sub
sub
mov
xor
push
jecxz
xchg
bound
mul
push
xor
fisubr
imul
sbb
ficomp
shr
mov
dec
or
out
movs
ins
sahf
or
sti
dec
pop
aas
ds
jb
cdq
push
test
jle
call
adc
push
push
ret
xor
push
pop
cmp
loopne
sub
je
mov
jmp
and
test
mov
adc
xchg
mov
push
mov
enter
dec
jb
or
std
mov
mov
mov
cmp
jnp
fst
pop
stos
adc
mov
push
mov
add
cmp
(bad)
(bad)
push
movs
retf
jp
xor
dec
cwde
fwait
mov
xchg
mov
loope
xchg
lea
ret
jmp
and
retf
xchg
sbb
fnstcw
in
mov
pop
cmp
outs
out
rol
sub
push
mov
aaa
js
sub
cld
add
std
mov
test
nop
xchg
xlat
scas
mov
xchg
add
(bad)
stos
cdq
xlat
popa
jo
cli
(bad)
push
pop
cmp
dec
fsubr
xor
adc
dec
cld
push
or
aad
out
mov
iret
outs
out
and
xor
in
mov
mov
xchg
mov
sub
fwait
pop
push
pop
or
(bad)
inc
xchg
push
outs
ds
rol
jle
dec
pop
call
xor
rcr
cmps
cmps
sbb
push
daa
in
push
mov
cmp
sub
xor
jnp
pop
mov
mov
lea
jae
sbb
or
mov
sbb
rol
xchg
repnz
mov
les
retf
retf
inc
scas
and
dec
pusha
sbb
scas
inc
pextrw
les
pop
int
mov
add
inc
gs
stos
mov
ins
lock
cwde
xor
or
jmp
pop
imul
or
sub
pop
xchg
mov
xlat
push
imul
xchg
pushf
(bad)
mov
dec
add
arpl
dec
stc
bound
aam
jge
add
mov
mov
add
xor
dec
cmp
int
cmp
push
inc
dec
aam
sub
es
push
mov
sahf
or
adc
cdq
mov
push
mov
xor
or
cmp
sbb
dec
jno
adc
xchg
les
shl
stc
pop
jmp
pusha
mov
adc
inc
sbb
adc
xlat
imul
sbb
mov
sub
nop
lahf
cmp
fst
aad
ret
fst
iret
mov
mov
dec
lods
ret
imul
pop
fisub
icebp
mov
mov
push
lock
adc
or
neg
fsubr
pop
cld
add
int3
or
push
push
push
daa
ds
mov
pushf
push
enter
(bad)
aad
dec
call
or
inc
aad
or
stc
sub
mov
jle
stos
push
mov
cmc
mov
cmp
xor
cdq
neg
in
mov
push
out
sub
push
arpl
shr
scas
(bad)
lock
mov
cmp
in
rol
dec
(bad)
loopne
xchg
in
inc
xchg
sbb
fwait
xor
xlat
imul
mov
lahf
fwait
mov
shr
fcomp
inc
(bad)
fstp
out
dec
ins
xchg
push
test
les
jmp
pop
push
ss
push
neg
out
mov
fst
add
stos
ja
pop
dec
jp
mov
add
pop
hlt
scas
out
lea
sbb
test
aad
popf
jnp
mov
cs
jmp
sbb
mov
xor
test
arpl
lods
in
cwde
adc
pop
ins
cmp
push
inc
outs
cmp
cmp
inc
movs
aad
lods
test
sub
add
push
rol
popf
icebp
sub
or
dec
nop
shl
jg
pop
mov
xor
push
cmp
pushf
pop
mov
rcl
cmp
es
ror
push
dec
rol
fimul
inc
and
loopne
inc
xchg
push
es
cmp
inc
mov
mov
outs
adc
fisttp
xchg
dec
pop
ror
xor
scas
pop
cli
fwait
mov
sbb
div
imul
bound
mov
sti
add
int3
mov
ret
sti
pop
mov
fisub
ret
sbb
test
inc
pop
and
imul
lods
mov
dec
loop
nop
out
sbb
aam
xchg
sub
dec
loopne
push
mov
jnp
sti
push
add
cmc
pop
(bad)
ficomp
pop
sub
push
xchg
(bad)
ins
mov
repnz
add
cmps
xor
mov
fcom
pop
int
add
push
test
call
test
in
adc
in
inc
cwde
push
mov
adc
mov
or
es
les
push
push
xchg
add
adc
push
mov
pop
cmc
pop
pop
mov
into
fs
aaa
jecxz
inc
sbb
push
inc
xchg
out
adc
test
push
pop
and
fchs
inc
mov
loope
enter
ja
push
mov
clc
push
sub
lds
inc
fmul
xchg
lods
in
or
pop
add
shr
pop
pushf
push
scas
lods
out
mov
lods
in
pushf
sbb
aaa
push
inc
xchg
pop
rol
js
sub
add
jbe
inc
adc
dec
pop
or
push
call
push
add
call
or
pop
stos
mov
nop
int
pop
push
inc
sub
push
jmp
call
(bad)
into
retf
or
mov
add
pop
mov
rcr
sbb
mov
repz
inc
pop
popa
stos
xchg
test
and
popa
push
dec
xchg
clc
mov
aad
jmp
mov
dec
inc
push
sbb
std
mov
popa
sub
retf
dec
out
xchg
adc
pop
fst
inc
adc
xor
mov
inc
(bad)
push
popf
es
dec
data16
add
add
in
rcr
add
dec
sbb
dec
in
pop
(bad)
pop
add
inc
sub
inc
or
dec
mov
cmps
sbb
shl
call
add
retf
int3
dec
div
mov
xchg
pop
add
sub
mov
shl
mov
rol
cld
add
add
aas
push
dec
add
push
or
mov
xchg
ret
out
inc
popf
add
push
int
mov
sbb
repnz
cwde
and
int
je
mov
sbb
cmp
je
jge
stos
loopne
cmc
push
xchg
hlt
adc
movs
xchg
mov
mov
mov
cdq
gs
jno
retf
fldenv
cmp
pop
and
xor
stos
add
dec
ret
adc
shl
xor
xchg
jnp
add
adc
jp
mov
jnp
pop
sbb
and
imul
cdq
iret
xchg
jae
sbb
dec
out
lock
ret
add
ret
jp
int3
jae
les
hlt
stc
lock
add
fmul
outs
div
cmp
add
popa
outs
rol
mov
dec
adc
inc
mov
dec
jge
cmp
or
xor
jge
fcom
in
cmps
mov
shr
out
add
movs
dec
jg
test
sbb
stos
repnz
outs
pop
in
lods
loop
lock
mov
loop
rcl
iret
lea
dec
mov
(bad)
pop
adc
jg
adc
cmps
push
push
sbb
in
xor
sub
pop
xor
fidivr
mov
xchg
and
and
(bad)
mov
xchg
xchg
dec
call
add
push
sub
(bad)
jo
xor
leave
outs
xor
or
cs
mov
aaa
xchg
dec
push
push
and
lods
jecxz
xchg
mov
mov
pop
pop
mov
lods
sub
lods
lea
hlt
sub
clc
loopne
adc
pop
sbb
outs
dec
push
mov
int
fwait
or
(bad)
add
xchg
pop
adc
jmp
mov
sub
push
pop
jge
push
jno
pop
es
cmp
test
jnp
lea
sahf
mov
test
add
push
jns
dec
imul
(bad)
std
cdq
stc
fld
xchg
mov
(bad)
into
xchg
mov
jbe
stos
scas
aaa
ja
cmove
ss
idiv
mov
(bad)
int3
and
lea
dec
cwde
aaa
cld
lods
jmp
xor
xor
inc
push
inc
fcom
mov
sbb
call
in
mov
sti
pop
xchg
jns
adc
mov
xor
cmp
push
retf
pop
and
and
dec
in
int
outs
fcom
add
outs
cli
adc
push
sbb
js
idiv
into
mov
adc
xchg
add
mov
mov
fsub
inc
(bad)
push
aas
add
dec
lahf
xchg
mov
sub
cmc
fdiv
mov
fist
movs
sub
out
rcl
fbstp
pushf
sar
or
outs
loopne
mul
pop
and
fwait
push
shr
inc
pop
fild
aaa
inc
mov
or
xchg
xor
jae
arpl
xchg
push
inc
aad
push
xor
add
mov
aad
scas
(bad)
shl
cdq
lods
pushf
retf
test
mov
push
imul
mov
jno
xlat
pop
mov
jecxz
mov
rol
jbe
and
cmc
jb
std
imul
lds
push
into
mov
xchg
cli
dec
mov
sub
rcr
sub
cmp
pushf
ret
das
inc
sub
or
jmp
out
or
aad
mov
shl
and
daa
dec
or
popa
push
jo
test
rcl
push
jp
fimul
add
mov
lods
mov
ror
bound
jge
icebp
call
sbb
bound
mov
inc
shl
mov
test
inc
arpl
jnp
dec
dec
lods
loop
xchg
(bad)
ss
cmp
jg
xlat
mov
and
les
add
in
cs
push
(bad)
nop
aad
jbe
(bad)
(bad)
enter
sub
(bad)
xchg
jmp
stos
popa
push
in
in
fisub
xor
jle
lea
pop
jmp
call
stc
mul
xchg
(bad)
jmp
mov
out
sahf
scas
imul
hlt
fsubp
or
fistp
movs
ins
pushf
cwde
mov
and
sbb
or
sahf
mov
iret
movs
dec
leave
ror
xchg
(bad)
clc
test
pop
cmps
pop
mov
sbb
aas
iret
test
mov
push
fidivr
mov
mov
sar
add
xchg
dec
std
out
shr
ins
cs
push
div
enter
(bad)
sbb
popa
sahf
rol
push
out
dec
xlat
neg
mov
ror
in
mov
loope
xchg
les
xor
mov
mov
clc
or
mov
rcr
ss
push
mov
adc
test
ja
out
outs
cmp
lock
ins
mov
scas
mov
sub
and
in
and
push
mov
jae
mov
fwait
xchg
push
push
sbb
xor
ret
(bad)
test
call
push
jecxz
test
imul
or
sub
icebp
stc
rcr
sbb
lea
mov
lods
push
xlat
ins
pop
pop
sub
nop
mov
outs
pop
sub
scas
sub
dec
push
and
jno
ins
pushf
ret
scas
pusha
mov
dec
nop
sti
xchg
es
fild
sub
xor
jl
cld
fisubr
jp
dec
mov
pop
cmps
jmp
pop
xchg
pusha
enter
in
add
inc
(bad)
(bad)
mov
stos
out
sub
fnsave
(bad)
jne
cmp
jnp
mov
retf
mov
ds
xor
xor
or
stc
add
fadd
mov
pop
div
jl
mov
shl
mov
ja
xchg
push
call
xor
xor
daa
adc
and
out
cmps
fwait
adc
scas
ret
xchg
std
push
inc
dec
(bad)
pushf
add
jo
sub
dec
mov
shr
add
out
xor
cmp
inc
sbb
inc
pop
es
add
jno
adc
sar
dec
xlat
idiv
dec
xor
icebp
push
and
sbb
mov
add
mov
sbb
fstp
imul
stos
xchg
(bad)
add
jno
repz
inc
ja
dec
loopne
test
push
push
ds
rcr
and
cmp
stos
sub
test
popf
adc
test
mov
push
jmp
je
dec
jge
sbb
sbb
fs
adc
inc
sbb
mov
shl
sbb
xchg
call
xchg
push
jg
adc
jne
pop
mov
addr16
shl
jl
scas
pop
adc
mov
test
ret
aaa
gs
dec
mov
fimul
pushf
repnz
ficomp
push
stos
or
and
rcl
setbe
sub
jecxz
std
stc
jg
mov
xor
mov
fdiv
cmp
push
test
stos
adc
call
mov
ins
xchg
xchg
(bad)
(bad)
lock
jmp
dec
xlat
ss
sbb
fs
inc
imul
pop
xor
rol
pop
(bad)
jmp
clc
cmp
sbb
(bad)
(bad)
sub
pop
(bad)
aam
push
dec
sub
and
jmp
pop
mov
lock
(bad)
cdq
add
repz
fbld
add
xor
sbb
ins
jl
ds
cmp
and
ins
jg
adc
pop
add
xchg
mov
jmp
jae
int
cdq
jo
jae
pop
dec
stos
sub
fwait
cmp
mov
dec
mov
lock
jne
xor
push
loope
push
mov
adc
das
out
loope
xor
in
aad
xchg
ror
jns
enter
clc
loopne
adc
push
push
inc
xlat
cmp
ret
sub
std
dec
and
adc
repz
loop
sqrtps
xchg
int
cmp
imul
in
in
cwde
xchg
jmp
xchg
mov
(bad)
in
fsubr
and
fxtract
xchg
push
rcl
cmp
rol
mov
retf
les
lods
cmp
in
inc
mov
push
cmp
stc
test
push
les
jne
repz
lods
jecxz
sub
rcr
inc
pop
cmc
inc
mov
in
mov
rol
imul
(bad)
(bad)
addr16
mov
adc
lahf
pop
xor
or
or
pushf
mov
inc
icebp
mov
xchg
(bad)
sbb
or
or
daa
or
push
pop
mov
out
pop
rcl
push
fimul
mov
lock
sar
xor
inc
adc
xchg
gs
dec
aam
test
out
xor
aad
cmp
cmp
sbb
dec
mov
dec
cmp
out
das
sti
push
jmp
add
pop
addr16
dec
js
das
sbb
fidiv
mov
aam
pushf
and
sbb
stos
lods
outs
inc
cmp
push
ja
push
sub
lods
or
xor
cmp
and
or
jmp
ret
mov
aad
adc
dec
out
js
inc
test
mov
inc
fldcw
test
test
and
xchg
add
mov
push
add
in
sbb
call
lods
push
and
mov
out
fistp
lods
or
fnstsw
jae
test
cld
cli
mov
jbe
ffree
mov
enter
mov
adc
loope
nop
adc
test
lock
lahf
dec
inc
xlat
cmp
fistp
cld
mov
shl
dec
jl
iret
xor
ja
cmps
rol
imul
cdq
xor
outs
sbb
mov
cwde
jnp
mov
mov
sahf
mov
aaa
dec
es
xchg
mov
add
ds
sub
out
clc
sbb
add
mov
gs
(bad)
test
jo
pop
mov
rcl
pop
fcomp
out
addr16
xor
jl
iret
cwde
sbb
sbb
pop
pop
cmp
sbb
mov
nop
(bad)
push
push
repnz
jg
sub
mov
inc
rcr
mov
xor
leave
fadd
adc
bound
lahf
pushf
in
xchg
dec
aaa
mov
addr16
rcr
(bad)
fwait
dec
neg
sub
xchg
xchg
add
(bad)
mov
add
in
dec
mov
jbe
mov
pop
xchg
jmp
xor
fs
dec
lock
xchg
pop
jp
fstp
addr16
sub
arpl
mov
psubsw
jb
(bad)
push
lock
cmps
dec
aad
cmps
push
mov
push
mov
cdq
push
sahf
jmp
scas
mov
in
sahf
gs
xor
in
inc
push
mov
jnp
stos
cdq
push
stos
out
inc
ficom
jl
xchg
popf
adc
stos
pop
jne
jnp
cmp
sub
out
out
and
daa
push
idiv
xor
(bad)
pushf
scas
gs
pop
addr16
adc
inc
pushf
sbb
mov
xor
jge
cmp
sbb
gs
dec
mov
imul
jae
xchg
inc
jmp
mov
dec
into
xchg
in
ror
aam
cli
and
lahf
cld
mov
mov
xrelease
jno
out
mov
xlat
jmp
int3
pop
dec
das
aas
add
dec
clc
mov
sub
pop
cmp
mov
fidiv
cmc
cmps
pop
sbb
jnp
mov
retf
outs
pop
pop
mov
in
stos
scas
jl
(bad)
out
push
sub
push
dec
sub
push
adc
pop
inc
pusha
fsub
stos
inc
xor
xchg
push
cs
sub
dec
mov
cmc
jb
add
fisub
push
adc
mov
data16
inc
push
lock
sub
mov
xchg
rcr
lea
ror
jmp
mov
sub
cmps
outs
movs
leave
dec
inc
cli
sbb
xor
dec
push
mov
aaa
nop
test
ret
or
sbb
aaa
cmp
and
fld
lahf
sbb
test
addr16
inc
jl
cmps
mov
jl
dec
jnp
jecxz
jae
bound
sub
pop
lods
jns
mov
pushf
iret
mov
xor
xor
xchg
adc
cs
xchg
outs
fld1
dec
dec
sbb
xchg
adc
sbb
(bad)
push
cmp
pop
add
(bad)
std
sub
or
fsubr
inc
scas
push
pop
add
pop
hlt
mov
cmp
and
jmp
mov
push
adc
jno
mov
mov
fld
(bad)
in
mov
fdivr
or
addr16
test
pop
sub
repnz
push
(bad)
jmp
in
sbb
add
push
(bad)
adc
leave
mov
pop
mov
int
in
push
pop
jmp
jle
(bad)
mov
scas
pop
pop
push
or
test
outs
call
retf
fidiv
ror
jp
outs
ja
stos
mov
out
adc
sub
inc
adc
fisubr
jb
xchg
fmul
mov
shl
idiv
mov
fmul
jecxz
outs
mov
stc
jmp
or
sub
dec
pop
xchg
(bad)
xchg
fnstsw
scas
fnstsw
cmp
daa
push
in
sar
dec
icebp
xlat
xchg
and
cmps
xchg
das
mov
xchg
arpl
(bad)
dec
jp
inc
loopne
pop
mov
sahf
push
xor
cmp
dec
ret
jmp
xor
sbb
fst
retf
sub
add
xlat
push
rcr
jmp
push
add
push
ja
jmp
push
add
call
dec
adc
adc
sub
and
mov
loop
dec
push
cld
jecxz
loopne
sbb
addr16
std
out
sub
lahf
nop
ret
stos
push
inc
add
dec
(bad)
sar
ficom
int
mov
scas
mov
(bad)
sbb
sbb
push
jmp
std
push
xor
lahf
jp
pop
das
mov
ret
out
inc
add
mov
mov
call
mov
mov
mov
outs
(bad)
fst
or
pushf
dec
mov
stos
xchg
sub
push
dec
stc
es
adc
repz
loopne
aaa
xchg
push
lods
hlt
mov
out
or
pop
pop
(bad)
or
std
aam
mov
addr16
push
cmp
daa
adc
stos
and
(bad)
add
push
rcr
jl
cwde
xchg
sub
jle
idiv
xor
xchg
jno
add
in
inc
cs
sub
xchg
enter
xlat
push
outs
push
daa
stos
sbb
push
popa
out
sub
push
dec
adc
pop
div
fnstsw
sub
jle
jbe
out
in
dec
xchg
adc
mov
ins
adc
popa
pop
sbb
cmp
dec
push
cmp
or
cmps
mov
aam
mov
sub
dec
push
ss
push
dec
rcr
xor
fist
in
xchg
or
js
mov
fsub
mov
mov
lea
dec
xlat
repz
mov
pop
mov
dec
mov
bound
cld
leave
mov
sub
frstor
cmps
out
pop
and
(bad)
cmc
fwait
fs
push
mov
cmp
add
mov
mov
cld
xlat
sbb
mov
sub
xchg
out
ins
jmp
sbb
mov
or
inc
rcr
dec
cmp
lahf
fmul
push
xchg
ins
jne
clc
(bad)
mov
lock
push
mov
add
xor
mov
into
test
mov
pop
pop
sub
push
mov
dec
repz
cmc
scas
iret
stc
pop
stos
sbb
mov
xor
arpl
inc
sbb
xor
jo
cld
or
pop
xchg
mov
lods
mov
or
ret
cli
add
and
sahf
bound
test
dec
sti
pop
in
mov
rol
mov
lods
retf
call
xchg
pop
pop
in
cdq
xor
pop
sar
loope
imul
dec
out
aam
dec
add
mov
adc
sbb
adc
or
movs
fmul
add
sub
leave
fstp
les
rcl
ror
mov
das
adc
out
cmps
and
repz
sahf
and
rcr
cmp
ror
dec
ja
and
xchg
mov
pop
sbb
out
addr16
and
dec
xchg
ja
inc
xchg
sbb
dec
mov
and
lock
or
cmp
ret
jno
dec
adc
pushf
push
or
mov
xchg
pop
mov
jge
out
nop
shl
dec
mov
dec
pop
addr16
fisttp
xchg
movs
pop
sub
xchg
adc
popf
ror
inc
and
adc
sbb
cmc
dec
mov
mov
jmp
add
fcmove
sub
into
icebp
mov
cwde
clc
outs
jno
sub
mov
lea
pop
dec
int3
fsubr
js
daa
popa
and
fldenv
inc
and
loope
pop
repz
ror
scas
loope
xchg
fcom
iret
stos
out
pop
rol
dec
call
push
pop
xchg
xor
xor
and
pop
or
dec
sbb
sbb
pop
xor
push
into
add
les
or
imul
cmp
sub
cmc
(bad)
xchg
ficomp
and
sbb
out
mov
and
ins
push
xchg
and
sbb
rol
les
jmp
cmc
add
pusha
mov
cmps
add
aad
shr
and
sub
retf
xor
mov
or
xor
xor
push
push
out
add
dec
es
stos
or
mov
add
sbb
add
inc
push
xor
(bad)
mov
push
xor
fmul
mov
arpl
retf
mov
xchg
xor
xor
mov
jmp
add
xor
xchg
shl
ins
pusha
adc
(bad)
pop
sub
xchg
dec
push
adc
rcr
pop
mov
cli
dec
xor
xchg
(bad)
dec
cs
mov
(bad)
mov
push
inc
bound
jmp
cmp
inc
int3
sbb
dec
test
cmp
int
cmp
data16
sub
push
inc
popf
ret
push
je
pop
jb
inc
add
repz
pop
fs
jae
push
rcr
in
stos
add
retf
dec
movs
in
lahf
cmp
cmp
sub
sub
adc
xlat
dec
das
push
mov
sub
out
icebp
movs
in
rcr
push
xlat
lods
push
outs
cmp
push
lahf
int
xchg
and
mov
add
jl
dec
sbb
stc
push
inc
sub
xlat
in
cmp
pop
or
mov
loopne
jmp
dec
xlat
adc
xchg
mov
sub
mov
lea
mov
stc
ins
and
push
jmp
adc
arpl
dec
xchg
aas
mov
call
mov
inc
sahf
dec
add
ret
jb
adc
mov
ja
or
repnz
sbb
push
mov
cmp
ss
cmc
aad
xchg
lahf
adc
sbb
or
ja
dec
lds
js
loope
test
lea
loope
jp
mov
dec
int3
push
ins
outs
inc
scas
test
mov
aaa
cld
int3
in
xchg
mov
das
jno
popa
aam
cdq
add
push
sub
adc
and
pop
mov
out
shl
sahf
add
adc
or
int
fnstsw
cld
(bad)
jp
inc
lods
adc
fcomp
jae
out
cmp
add
(bad)
adc
jmp
int3
push
cmp
iret
mov
dec
(bad)
movs
int
mov
mov
sbb
fwait
into
sbb
outs
fcomp
push
ss
aam
cli
and
adc
pop
leave
sbb
xchg
fs
cmps
jae
pop
inc
stos
test
pop
mov
(bad)
rcr
sbb
push
sbb
je
push
push
or
pop
lock
or
leave
jg
sbb
lock
xchg
out
jae
mov
push
push
sub
mov
dec
add
or
nop
test
xlat
call
xchg
sub
fldenv
test
mov
ficom
adc
fnstenv
add
repnz
js
dec
xor
sbb
mov
mov
lods
push
mov
js
loop
mov
out
cmps
xchg
dec
in
mov
stos
inc
lods
inc
pop
jmp
test
xchg
inc
sahf
dec
mov
sbb
mov
shl
dec
in
push
or
iret
pop
mov
jge
push
movs
dec
repnz
cmc
stos
mov
pop
dec
mov
imul
pop
mov
push
aam
lods
or
xor
pop
(bad)
push
fsubr
jmp
call
popa
retf
es
sbb
mov
jae
popa
retf
leave
adc
aad
push
stc
dec
loop
es
push
les
ss
mov
in
paddusb
add
in
loopne
dec
fld
imul
cmps
adc
fidivr
les
out
mov
in
fsubr
cmp
cmps
and
fldcw
push
int
xchg
sbb
dec
imul
fcomp
rcl
mov
ds
lea
mov
xchg
in
movs
stos
sbb
and
in
or
out
or
(bad)
mov
mov
es
loop
inc
rcr
mov
pushf
xor
xor
mov
push
in
mul
cdq
jbe
push
dec
fst
or
or
mov
lods
cmp
les
shl
push
add
loopne
jle
lds
xchg
jmp
push
push
(bad)
ret
mov
ins
mov
mov
dec
mov
mov
add
or
lea
mov
pop
add
shl
mov
and
gs
jmp
inc
in
loope
xchg
xor
movs
dec
adc
jnp
int3
sub
retf
ret
stc
mov
lods
push
imul
pop
adc
mov
mov
dec
fidiv
mov
mov
cmps
xchg
(bad)
fs
mov
(bad)
lea
pop
xchg
ds
fmul
retf
daa
jo
xchg
sub
ret
xor
cmp
out
pop
idiv
ja
fdivr
push
stos
fwait
add
and
mov
and
mov
pop
stos
jmp
scas
mov
push
adc
in
neg
xor
cmps
aam
pop
add
(bad)
pushf
and
ret
popf
cwde
mov
(bad)
cdq
adc
retf
rcl
scas
push
dec
inc
ds
test
out
sub
xlat
dec
push
sbb
lea
(bad)
int3
jecxz
mov
(bad)
aas
mov
dec
std
(bad)
dec
movs
pop
dec
and
sahf
dec
xchg
mov
cdq
fsubr
push
sbb
xchg
scas
movs
adc
ror
add
mov
stos
sbb
dec
icebp
sub
aas
leave
addr16
push
dec
cmc
daa
sbb
adc
jmp
das
mov
mov
push
in
pop
dec
mov
ret
ret
jl
dec
ins
dec
repnz
pop
add
sub
xor
ret
adc
push
push
pminub
fadd
sbb
es
(bad)
aad
xchg
push
inc
pop
ins
push
mov
dec
adc
and
inc
test
loope
push
fs
push
loope
imul
xchg
stos
jne
retf
cdq
add
jp
push
xchg
sbb
ret
jno
int
test
push
or
jnp
mov
adc
call
or
and
stos
loope
lock
fwait
mov
daa
push
(bad)
(bad)
in
(bad)
sub
popf
sub
(bad)
cmps
clc
shl
rcr
cmp
retf
sub
mov
rcr
retf
sub
lods
out
pop
pop
and
jmp
xchg
inc
sbb
sti
mov
lods
cmp
jo
xor
and
enter
cmp
inc
jecxz
rol
pop
into
in
pop
cmc
mov
fwait
pop
inc
dec
stos
cmps
test
outs
add
pop
push
sti
pop
xor
adc
xchg
cmps
pop
jae
sbb
and
mov
clc
push
mov
xlat
push
sbb
xchg
fcmovnb
dec
and
push
mov
in
rcl
push
push
sahf
call
aam
push
mov
arpl
lock
loopne
dec
and
mov
int3
loop
pop
sbb
or
into
fst
test
cmp
inc
or
sbb
imul
shl
(bad)
dec
ds
inc
or
push
and
loop
mov
repz
lahf
fsub
lods
test
sbb
push
cwde
jo
int3
adc
jecxz
jno
xchg
cmps
fisubr
push
lea
jne
mov
jne
scas
dec
push
sbb
xor
jmp
in
rol
push
cwde
imul
aaa
ja
and
call
jne
dec
neg
stos
lahf
verw
xabort
sbb
sbb
pop
leave
push
push
or
(bad)
in
jne
js
mov
out
out
les
jecxz
dec
push
mov
lock
add
es
cmp
js
cld
adc
pop
inc
xchg
mov
xchg
push
mov
popf
push
rcl
cld
xchg
test
push
in
mov
or
mov
std
js
sub
cmp
dec
dec
pop
dec
movs
inc
jl
xlat
pop
imul
push
mov
xor
jnp
int3
lods
sar
mov
pop
push
lahf
cmp
fwait
dec
mov
mov
mov
sub
push
sbb
(bad)
add
out
je
aas
cmp
in
(bad)
mov
sar
pop
xlat
mov
cwde
pop
arpl
movs
lock
jnp
in
(bad)
xchg
cmps
pop
jnp
xor
xlat
adc
inc
fst
cmp
lods
lahf
retf
dec
arpl
ret
rcr
out
inc
xor
pop
aad
or
xchg
out
test
push
inc
pop
(bad)
xor
ja
cs
sub
inc
push
pop
pop
xchg
cld
bnd
lods
aam
sub
fcmovnbe
rcr
js
loopne
inc
sbb
mov
arpl
rol
fsubr
enter
iret
inc
aad
outs
sahf
enter
into
xchg
or
xchg
cli
push
xchg
push
pop
cmp
rcr
mov
std
pop
lds
fst
cmp
or
add
jnp
push
shr
shl
int3
push
add
cmps
xchg
hlt
cs
jp
dec
jmp
lock
aad
pop
xchg
xor
mov
pmaxsw
ins
dec
fist
(bad)
add
sbb
mov
mov
sti
jb
pop
enter
mov
retf
adc
icebp
mov
xchg
jnp
and
ss
dec
and
ins
dec
jns
dec
or
dec
xchg
ss
dec
lahf
adc
rcl
stos
ret
loop
mov
dec
mov
ins
push
mov
imul
add
shl
fldcw
xor
arpl
xchg
dec
(bad)
pushf
mul
mov
mov
mov
loop
mov
shr
mov
seto
pop
push
movs
outs
in
mov
sbb
push
adc
dec
std
push
pop
repnz
jnp
imul
add
push
adc
arpl
imul
fisub
push
xchg
mov
(bad)
push
popa
inc
or
inc
lock
xchg
dec
pop
in
mov
dec
pop
fisub
xor
sub
ficom
dec
xchg
ror
sub
adc
out
add
adc
push
and
stos
lahf
test
(bad)
stos
aaa
gs
cmp
(bad)
jmp
icebp
add
out
out
push
add
mov
ret
clc
clc
inc
mov
push
and
ja
mov
or
pop
push
sbb
fsub
dec
push
lea
pop
int
sub
not
push
mov
fstp
xchg
fadd
ins
inc
cmps
dec
sub
(bad)
jno
ss
jmp
sub
jb
iret
push
mov
nop
test
pop
add
add
ret
cs
push
cwde
stc
leave
(bad)
cmp
jecxz
mov
inc
shl
shl
add
sbb
mov
stos
test
dec
dec
jle
mov
mov
sar
ror
mov
xchg
adc
dec
call
add
mov
pop
adc
scas
push
lods
xchg
lock
xor
fld
cld
add
xor
(bad)
call
ror
setb
out
push
or
adc
clc
icebp
pop
movs
mov
scas
loope
push
loope
push
jp
add
(bad)
or
repz
fistp
push
push
pop
stos
cmps
jge
jb
fiadd
rcr
shl
(bad)
add
mov
pop
inc
mov
(bad)
fmul
mov
jne
(bad)
loopne
cmp
cmps
cdq
add
dec
inc
or
shl
jmp
mov
loop
xchg
mov
lock
adc
aad
mov
out
and
mov
fucomip
and
mov
and
sub
xchg
rcr
(bad)
pop
sub
sbb
mov
inc
xchg
icebp
xchg
mov
loopne
xlat
jns
arpl
xor
xor
(bad)
pop
xchg
and
sbb
les
(bad)
outs
push
aam
popf
jmp
test
movs
loope
icebp
imul
and
dec
fcmovnbe
adc
jg
jg
dec
ror
push
(bad)
sbb
adc
sbb
xor
imul
aad
hlt
inc
pop
popa
js
mov
add
xchg
and
mov
fnstenv
mov
test
inc
(bad)
fbstp
add
jo
lahf
shr
js
dec
and
sub
fstp
and
xchg
pop
sbb
inc
aam
loopne
loop
push
std
sub
nop
out
dec
xor
dec
pop
arpl
movs
xor
mov
xor
push
dec
das
test
gs
xor
mov
xchg
pop
mov
push
dec
xor
or
mov
adc
arpl
call
jg
mov
pop
std
mov
int3
fs
dec
ds
popf
dec
inc
mov
pop
xchg
mov
and
int
aam
xchg
add
dec
(bad)
jge
ss
jl
dec
inc
(bad)
mov
and
push
icebp
mov
mov
adc
into
inc
out
push
pop
jae
lds
ins
inc
cwde
(bad)
hlt
adc
xlat
shr
jo
adc
jmp
pop
pop
(bad)
xor
in
xchg
pushf
pop
jmp
pop
xor
mov
add
mov
pop
xor
or
ins
or
wrmsr
dec
push
arpl
bound
sbb
outs
out
out
leave
xchg
lods
jns
test
adc
ds
int
out
mov
leave
sar
sar
pop
fisttp
into
sbb
in
xor
pop
into
add
mov
and
xor
mov
sub
pop
add
xor
nop
add
cmp
out
cmps
addr16
pop
jecxz
test
inc
add
push
ret
xor
push
mov
ins
loopne
jmp
bound
add
sub
push
mov
test
test
jno
cmp
test
enter
cmp
xchg
mov
mov
sub
lahf
push
jecxz
fisub
mov
pop
shl
cmp
pop
push
ins
mov
in
loopne
push
in
push
mov
addr16
push
cmc
pop
adc
xlat
(bad)
neg
in
data16
dec
jecxz
pop
and
dec
gs
js
mov
(bad)
loop
pop
in
fwait
je
lods
add
rcr
cwde
mov
int
leave
or
movs
add
push
pcmpeqb
mov
sti
push
fs
dec
(bad)
shl
std
xor
out
into
jnp
mov
add
jp
pop
js
lods
pop
rol
fwait
stos
hlt
std
inc
xor
ror
adc
je
inc
aas
sar
mov
(bad)
lock
push
mov
jno
mov
test
loop
mov
sbb
jge
mov
jmp
jl
test
sub
fild
in
adc
xchg
mov
outs
mov
inc
mul
aam
xlat
dec
dec
cmp
xchg
push
fwait
out
inc
iret
in
jnp
dec
pop
and
popa
inc
bound
clc
mov
rcr
jmp
test
mov
sbb
(bad)
daa
pop
int3
mov
or
dec
test
sub
jmp
mov
js
push
sub
mov
sub
fst
loopne
rcl
jns
fldcw
dec
jnp
mov
adc
into
sbb
popa
add
sub
pop
daa
imul
sbb
push
sbb
call
push
add
xchg
stc
sbb
test
pop
adc
sbb
pop
cmp
mov
in
pop
push
dec
pop
les
ja
sub
and
sub
leave
mov
fimul
pop
out
and
in
xchg
push
sbb
jo
pop
xlat
cs
mov
mov
je
in
loopne
mov
jmp
cs
sti
mov
jae
pop
mov
fdivr
scas
pop
sub
cwde
push
mov
sbb
rcl
xchg
test
dec
iret
dec
lods
aam
xchg
out
add
fwait
lods
mov
enter
xchg
jmp
test
out
xor
add
jp
pop
inc
out
scas
mov
cli
mov
aam
jns
push
or
mov
cmp
int
add
adc
cmp
sub
nop
cmp
aad
fwait
fwait
(bad)
push
fwait
xchg
cmp
out
es
xchg
sub
xor
or
sbb
cwde
shl
lea
mov
xchg
xor
xchg
push
sti
mov
aad
test
sbb
sahf
cmp
or
mov
pop
or
add
scas
retf
push
push
sbb
mov
mov
jl
fstp
sub
xchg
pop
pop
inc
pop
idiv
(bad)
enter
ja
call
mov
xor
adc
push
daa
add
and
xor
pop
scas
lods
add
jp
push
or
sti
icebp
ret
(bad)
call
mov
dec
xor
add
pop
enter
dec
adc
dec
fcomp
pop
movs
inc
pop
jg
pusha
or
ins
pop
imul
lock
jno
adc
fcomi
pop
or
lods
mov
in
ins
pushf
outs
loopne
dec
cwde
push
clc
xchg
dec
(bad)
xchg
jmp
inc
call
mov
xor
dec
into
addr16
and
cmp
mov
cdq
mov
cdq
out
sub
pop
sti
xchg
mov
fnstenv
mov
imul
jg
mul
fcomp
into
shr
push
aas
loop
mov
push
push
push
popf
dec
mov
mov
out
jo
sbb
ffreep
sbb
cmp
mov
sbb
add
inc
xchg
adc
or
out
inc
xor
or
call
(bad)
inc
xchg
out
or
retf
xor
fs
and
loope
mov
imul
sub
loopne
mov
dec
cmp
pop
push
adc
ja
cmp
movs
mov
push
rol
cmp
out
mov
call
paddusb
jmp
ins
inc
sub
inc
mov
in
je
addr16
dec
jmp
xlat
inc
scas
mov
jecxz
or
retf
fcmovbe
add
sahf
adc
xchg
scas
in
inc
inc
frstor
sahf
dec
and
dec
pushf
xor
mov
mov
mov
jmp
je
jae
aam
shl
dec
push
(bad)
pop
add
xor
jg
pop
or
inc
sahf
mov
mov
lds
mov
lods
xchg
cmp
mov
mov
cs
xchg
mov
popf
or
jb
out
pop
dec
imul
pushf
pop
ret
test
rcl
add
call
cmc
shl
js
loopne
lock
xchg
idiv
xchg
xor
and
aad
leave
mov
push
mov
xor
jmp
dec
mov
mov
dec
or
and
inc
ret
dec
dec
xchg
push
(bad)
out
rcr
dec
js
push
out
sar
and
dec
adc
dec
sbb
adc
mov
mov
mov
adc
fsubr
not
int
add
stc
add
jmp
cmp
adc
sbb
mov
inc
pop
pop
mov
xchg
mov
inc
imul
mov
mov
pop
cli
cli
push
cld
push
push
or
loop
mov
js
push
in
sbb
pushf
sub
xchg
push
repnz
movs
(bad)
xlat
jp
push
(bad)
adc
inc
or
int
out
cwde
je
imul
mov
push
add
jp
imul
jmp
dec
out
pop
mov
mov
and
push
mov
or
(bad)
and
in
dec
inc
jecxz
add
and
xchg
adc
bound
dec
loop
in
pushf
fs
xor
inc
pop
xor
aam
out
ret
xor
lahf
cli
test
cld
xchg
loope
push
and
es
cmp
adc
push
(bad)
loope
jge
sbb
mov
cmp
iret
icebp
not
(bad)
into
cmps
fs
retf
scas
pop
dec
in
clc
aam
rcl
cs
jge
or
add
scas
xor
dec
call
shl
mov
pusha
inc
and
mov
(bad)
arpl
mov
pop
pop
xchg
lea
arpl
test
jmp
or
pop
movs
pop
enter
mov
icebp
sahf
push
mov
retf
sar
pop
ds
add
add
push
das
movs
pop
xchg
dec
or
push
push
mov
inc
mov
std
cmc
adc
mov
and
mov
adc
neg
lock
xchg
push
ret
les
mov
jle
out
dec
sar
ja
or
add
inc
jmp
add
lock
push
stos
inc
push
push
sub
xchg
push
jns
test
rol
retf
es
shr
nop
push
inc
enter
cdq
in
dec
xchg
fcomp
test
lock
mov
mov
or
call
xlat
push
jmp
int3
inc
mov
(bad)
cmp
or
push
dec
in
mov
cmp
and
or
jp
cmp
jle
add
pop
mov
fmul
fs
and
xor
jne
pop
push
cwde
mov
and
push
pop
xor
retf
or
mov
pop
push
nop
dec
in
adc
pop
(bad)
jne
or
or
mov
and
pop
push
or
ds
movs
cmp
xchg
shl
rcr
pop
mov
cmp
push
jmp
sbb
add
add
sub
cmps
jge
out
sbb
inc
aad
push
and
sub
les
jmp
add
or
cmps
ror
test
icebp
or
stc
inc
cli
sbb
lods
jns
xchg
sub
imul
pop
test
xor
dec
fidiv
jne
sbb
add
and
mov
or
mov
xchg
fild
sub
lock
pop
sahf
(bad)
neg
add
cs
(bad)
dec
ins
mov
ss
cmc
in
ins
pushf
lock
push
pop
mov
retf
movs
rol
pand
pop
adc
test
das
cmp
ret
popa
cmp
push
loopne
out
enter
jle
and
aas
sub
pop
pop
outs
test
fmul
push
jnp
mov
aas
and
jl
(bad)
loop
mov
std
xor
pop
and
aaa
inc
add
push
mov
mov
push
mov
pop
jbe
pop
add
and
inc
pop
iret
or
cdq
mov
movs
mov
pop
pop
loop
push
fldenv
push
int
retf
push
mov
popa
pop
rcl
cmc
adc
ja
scas
iret
xchg
lock
pop
(bad)
out
cmp
pop
and
dec
int
frstor
hlt
dec
enter
cdq
and
push
sub
cs
fist
or
std
mov
jecxz
xchg
fld
pop
push
sbb
pop
mov
mov
test
pop
push
int3
test
or
add
lods
or
sbb
jo
fst
loopne
push
pop
pop
jle
pop
inc
nop
adc
loop
push
addr16
push
dec
mov
bound
push
repz
and
js
imul
in
xchg
and
test
div
retfw
cmp
cmc
enter
fistp
adc
jne
xor
icebp
push
ins
int3
push
(bad)
add
and
inc
jae
sbb
popa
mov
jmp
pop
sti
push
dec
pop
cmp
ficomp
hlt
jb
imul
sub
jecxz
cmp
test
cmps
and
outs
inc
(bad)
sahf
sbb
and
es
jle
fiadd
nop
jae
xchg
popa
jle
mov
pop
or
pushf
sbb
repnz
sbb
hlt
jmp
push
and
jecxz
dec
sbb
stos
shl
gs
(bad)
imul
(bad)
ret
jmp
stos
cdq
aas
adc
rcr
dec
xor
cwde
test
(bad)
pop
push
mov
pop
jbe
mov
xchg
cs
and
pop
xchg
dec
ss
pushf
loope
mov
loop
dec
leave
mov
pop
jg
mov
loope
ret
in
cmp
fnstcw
test
xchg
aam
inc
jmp
pop
pop
mov
out
cli
cld
jmp
loope
sub
jmp
(bad)
adc
pop
push
mov
jmp
cmps
xchg
fcmovnb
repz
jmp
jmp
aas
repnz
dec
jo
mov
daa
loopne
mov
shr
adc
rcr
cmp
mov
cmc
test
in
stc
mov
imul
xchg
cmp
xor
mov
dec
hlt
cwde
jmp
push
imul
xlat
push
mov
pop
jg
int
and
jp
fucomip
imul
add
(bad)
and
push
add
fdivr
sub
mov
sbb
push
jbe
rep
push
sbb
hlt
xor
and
push
test
fdivr
dec
mov
jbe
bound
xchg
add
fld
push
mov
xchg
add
sbb
cwde
jne
push
(bad)
sub
fldz
test
push
dec
push
test
add
inc
jbe
fmul
push
pop
std
jno
sub
dec
fbstp
out
loope
fwait
and
jns
test
and
icebp
sbb
add
sub
xor
push
movs
pop
rol
mov
daa
jnp
mov
pop
jp
inc
lock
jg
inc
jecxz
add
aas
mov
pop
xor
xchg
repz
fadd
mov
pop
sbb
std
into
push
mov
ret
icebp
pop
(bad)
jno
inc
ins
iret
mov
xor
sub
icebp
and
test
outs
jecxz
jmp
sub
jg
mov
cmp
(bad)
sbb
out
in
lods
mov
mov
loope
int3
inc
int3
sub
xchg
mov
es
dec
(bad)
mov
mov
pop
fnstenv
shl
xor
cmc
into
or
js
(bad)
jmp
cmp
icebp
push
nop
cdq
xchg
fild
retf
mov
xor
cmp
aam
pushf
test
in
fcomip
jb
sub
fwait
fs
rcr
test
mov
aam
xchg
adc
movs
and
mov
aad
fisub
push
dec
push
in
xor
inc
jp
cdq
in
sahf
stos
loope
icebp
xchg
mov
cmp
stc
sbb
jmp
xchg
push
sub
ret
push
dec
movs
(bad)
dec
cmp
cmp
pushf
xchg
lods
mov
fsubrp
xchg
hlt
jbe
and
xchg
pusha
addr16
xchg
sbb
xor
aas
loope
into
cmp
and
fstp
jb
sub
ficom
xchg
sbb
jmp
adc
adc
out
hlt
push
xchg
(bad)
call
sar
add
xrelease
push
and
mov
and
push
push
inc
in
mov
test
fidiv
cs
aam
clc
mov
call
ins
out
nop
mov
add
and
jae
add
mov
xchg
sar
hlt
add
sub
jne
mov
xchg
scas
add
pop
mov
push
(bad)
lds
push
sti
pushf
int
in
adc
mov
or
movs
pop
or
pop
in
push
fimul
mov
cmp
xchg
lock
(bad)
jne
jp
and
sbb
xchg
retf
or
cmps
outs
arpl
sub
jnp
xchg
std
cs
jmp
pop
das
fdivr
add
sbb
stc
movs
mov
pop
imul
fst
push
add
ins
dec
std
cld
es
movs
aam
push
pusha
(bad)
pop
cmp
ret
leave
mov
xchg
mov
pushf
aas
xchg
lods
(bad)
ds
xlat
cmp
dec
jb
cs
push
les
jp
movaps
call
xor
test
es
push
ja
xchg
sahf
mul
js
pushf
(bad)
or
movs
dec
inc
cdq
fidivr
pop
retf
push
cmps
mov
hlt
enter
icebp
mov
pop
popf
or
fst
adc
arpl
sub
pop
adc
(bad)
xchg
rol
pop
jno
inc
mov
add
cwde
outs
aam
xchg
jnp
sbb
fisubr
dec
lea
cmp
sbb
sub
dec
xor
out
sbb
fldenv
or
and
adc
into
push
sub
mov
outs
dec
(bad)
pushf
stos
jae
push
adc
popa
xchg
cmp
pop
loopne
leave
mov
clc
cdq
das
mov
pop
fadd
inc
(bad)
(bad)
mov
rcr
pop
test
adc
mov
jnp
push
(bad)
jg
and
pop
mov
sar
sbb
xchg
mov
jne
xor
dec
cmp
pop
jne
xor
arpl
xchg
jne
mov
data16
out
mov
js
pop
stos
mov
ror
in
call
sbb
test
loope
mov
jecxz
lods
dec
stos
bound
inc
aaa
sbb
sbb
rcr
add
xor
xor
pop
add
out
rol
and
in
mov
adc
pop
mov
or
pop
pop
cld
add
arpl
nop
enter
bound
jmp
or
and
bound
loop
push
jnp
loopne
cwde
mov
add
popa
add
inc
jnp
inc
loopne
adc
in
out
jae
fwait
dec
imul
mov
cdq
jnp
sbb
dec
push
push
push
loopne
inc
pop
xor
popa
mul
adc
adc
dec
scas
mov
icebp
mov
fcmovu
loopne
pop
inc
or
jge
xchg
push
lods
(bad)
push
call
mov
xlat
out
fcomp
fsubp
sahf
(bad)
stc
mov
xor
or
dec
pop
mov
mov
pop
(bad)
mov
cmp
test
imul
push
imul
xor
jge
lea
mov
(bad)
jns
pop
and
int
lods
add
jl
push
(bad)
or
jae
jmp
loopne
or
pushf
jae
out
(bad)
xchg
lock
mov
jl
inc
push
rcl
icebp
gs
push
push
fimul
out
adc
dec
addr16
inc
bound
push
add
mov
in
mov
out
add
jmp
sbb
loopne
cmp
fiadd
cmp
clc
adc
cmps
pop
cdq
nop
mov
cdq
sub
stc
jno
dec
call
cmps
out
call
daa
outs
push
daa
enter
retf
cld
in
jmp
(bad)
cmp
jns
jb
mov
sbb
cmp
clc
cmp
(bad)
xchg
lods
adc
out
fimul
and
lods
pop
into
js
push
pop
aam
(bad)
rol
push
dec
test
jp
bound
adc
mov
adc
rcl
xor
add
add
pop
mov
leave
sbb
pop
retf
mov
mov
pop
cwde
dec
fucomi
push
mov
mov
push
and
pop
and
pop
dec
mov
out
lods
sub
pop
jnp
std
shl
(bad)
sub
jecxz
js
ins
sbb
jno
inc
ja
push
add
mov
popa
mov
cld
lods
dec
add
pop
push
cwde
in
in
mov
aad
enter
leave
pop
arpl
xlat
imul
lods
pushf
mov
and
mov
mov
jg
inc
xchg
adc
cwde
push
inc
push
xchg
sub
(bad)
rol
dec
je
push
mov
loop
add
push
mov
jns
hlt
sbb
fild
ja
inc
stc
mov
fbstp
inc
es
pushf
push
icebp
pop
or
ror
sbb
mov
fidivr
in
loopne
add
sbb
add
inc
pop
and
pop
gs
in
js
dec
dec
jp
frstor
fsubr
das
adc
xchg
(bad)
cmp
fsub
or
gs
dec
xor
push
push
cmp
idiv
add
xchg
inc
(bad)
repnz
jmp
fild
pop
pushf
loop
pop
std
xchg
ja
pop
js
mov
sub
xchg
dec
adc
movs
jle
popf
sbb
pop
not
(bad)
cdq
imul
es
dec
movs
or
pop
sbb
mov
lds
rcl
imul
pop
pop
mov
xchg
add
leave
int3
push
sub
pop
outs
inc
pushf
jge
and
adc
mov
xchg
(bad)
pop
or
sbb
imul
dec
jb
rol
sbb
pop
leave
jmp
jmp
dec
scas
mov
xchg
fistp
pop
dec
adc
ror
cli
pop
xlat
jmp
rcr
xchg
jne
mov
das
adc
rcr
push
fcom
pop
pop
sti
outs
loope
out
dec
aas
jl
repz
fsubr
push
jmp
add
pop
pop
pop
aam
mov
fwait
xor
cmp
pop
call
stc
je
jo
(bad)
sti
sub
retf
mov
pop
sbb
std
jecxz
ret
sub
out
cmp
(bad)
(bad)
cwde
idiv
fwait
pop
out
rcl
pop
mov
jmp
mov
cmps
push
xchg
pop
rcr
mul
xchg
(bad)
pop
stos
fwait
xchg
in
(bad)
jbe
adc
retf
pop
ins
rcr
and
in
xchg
jae
out
xor
xchg
test
fnstsw
fcom
sahf
jg
jl
or
call
sub
les
jmp
jnp
mov
ret
fcomp
outs
test
aad
mov
and
int3
mov
and
nop
pop
mov
sahf
cdq
inc
movs
fwait
pop
pop
pop
mov
mov
rol
pop
mul
loope
ds
gs
(bad)
lods
call
rol
sbb
jmp
popf
int3
and
pop
aas
xchg
aad
sbb
adc
js
out
jns
and
cmp
lds
rcr
(bad)
cmp
pushf
jbe
pusha
aam
movs
pop
leave
fcomp
out
cmps
add
cmp
rcr
mov
jae
or
mov
nop
xor
daa
mov
push
jmp
adc
lods
imul
movs
sbb
jne
or
pop
fidivr
inc
enter
fnstcw
xchg
out
jb
(bad)
mov
inc
mov
cmc
imul
mov
outs
mov
pop
out
sub
and
pop
pusha
push
cmp
inc
mov
scas
lahf
(bad)
stos
aaa
adc
push
pop
pop
fdivr
xchg
jo
xlat
das
adc
xlat
(bad)
mov
push
mov
fcom
out
rcr
jge
or
fbstp
pop
ja
iret
aaa
call
pop
sbb
cmp
cmps
rcl
fsubr
or
test
dec
rcr
dec
inc
pushf
mov
jmp
leave
fnstenv
outs
sbb
popa
pop
fsubr
dec
mov
jg
lahf
xchg
fdivr
arpl
mov
jle
ror
mov
push
pop
mov
pop
push
arpl
movs
sbb
out
inc
hlt
sahf
sbb
int
sbb
pop
out
mov
pop
xchg
ror
sbb
loope
add
pop
lahf
add
mov
fucomi
fdivr
jg
mov
lea
jecxz
repnz
(bad)
and
pop
outs
inc
fldcw
movs
xchg
(bad)
(bad)
fdiv
retf
test
fadd
mov
ror
jne
pushf
fcomp
bound
mov
lods
cmp
cwde
push
movs
pop
push
xlat
jg
mov
inc
pop
retf
sub
sbb
ds
jle
test
imul
pop
gs
rcr
cmps
mov
test
pop
pop
data16
fiadd
sbb
mov
outs
inc
xchg
cmp
frstor
and
xchg
fld
pop
ss
out
dec
xchg
fsubr
add
sar
data16
aam
(bad)
adc
das
sbb
sbb
sub
adc
mov
sbb
cmc
fcomp
(bad)
pushf
mov
adc
pop
fmul
fimul
in
push
dec
jne
fmul
mov
(bad)
xlat
sbb
into
pop
ins
mov
imul
xchg
ror
mov
mov
dec
xor
imul
dec
ficom
pop
jnp
xor
adc
pop
imul
push
not
pop
cmp
pop
inc
dec
fidivr
sahf
dec
fxch
test
fmul
mov
rcr
inc
lods
sbb
pop
jg
popa
fcmovu
inc
fmul
xlat
fnstcw
ror
lods
rcr
push
jo
lods
sbb
shl
ficomp
and
jnp
ficomp
pop
aaa
cli
dec
loope
lock
xchg
adc
sahf
push
dec
xchg
dec
call
outs
outs
ins
sub
pop
icebp
jmp
(bad)
mov
popf
or
push
pop
add
fwait
ja
and
inc
shr
push
sub
enter
xlat
ins
pushf
pushfw
loopne
das
movs
pop
dec
inc
ror
sbb
or
mov
enter
pop
and
mov
ins
ds
dec
jl
sub
jmp
push
rcr
sbb
mov
ds
jmp
push
fmul
mov
dec
in
enter
pop
ds
pop
mov
fucomp
retf
pop
js
and
cmps
mov
or
pop
lahf
rol
test
jb
(bad)
int3
xlat
sub
jnp
xor
fstp
and
mov
pop
mov
push
push
seto
aaa
ror
mov
push
pop
xchg
sbb
xchg
xor
rcl
fcmovnu
stc
xchg
push
sbb
(bad)
pop
push
xchg
ins
fdivrp
les
scas
dec
jl
mov
jmp
(bad)
mov
(bad)
dec
add
sub
dec
popf
dec
jb
cdq
(bad)
pushf
adc
(bad)
adc
mov
pop
xchg
lods
lds
xchg
xor
sbb
fbstp
aam
cmps
pop
mov
add
loope
inc
xchg
dec
pushf
xor
std
sbb
jmp
jecxz
cdq
cdq
rcr
add
outs
mov
or
rcl
pop
pop
(bad)
sbb
enter
arpl
push
nop
sub
aam
mov
mov
test
push
and
xchg
ficomp
pop
std
push
mov
rcr
pop
ja
aaa
sbb
adc
sub
and
idiv
sub
rcr
aam
add
and
popf
fldcw
ja
ror
shr
mov
and
stc
push
into
repnz
xlat
push
rcr
pop
icebp
jecxz
mov
and
or
sub
call
ret
lods
cwde
outs
aam
xchg
pop
js
fimul
adc
cmps
xor
faddp
pop
fwait
pop
and
adc
test
int
fs
nop
adc
or
mov
or
stos
stos
(bad)
es
cmps
fcmovnu
fadd
pop
and
mov
or
test
fcomp
dec
aas
leave
pop
adc
sbb
xchg
aam
sbb
inc
inc
in
call
popf
ror
movs
pop
cs
clc
push
test
or
test
pop
rcr
dec
mov
pusha
retf
(bad)
fdivr
rcr
popf
pushf
pop
fistp
adc
dec
mov
mov
pop
lahf
xlat
fstp
daa
loop
rcr
push
into
or
adc
enter
pop
aam
mov
fs
and
dec
inc
xor
shl
pop
test
adc
nop
pop
fdivr
das
xor
push
sbb
sub
not
push
xchg
push
fcmovbe
int3
xor
inc
push
call
ins
scas
xchg
test
xchg
xchg
mov
pop
fadd
scas
jmp
push
pop
rcr
(bad)
xchg
retf
or
sub
lahf
mov
sub
pop
mov
fcomp
pop
or
xor
repz
clc
mov
into
or
inc
(bad)
js
push
add
fist
xchg
cmp
pop
xor
inc
out
add
nop
push
mov
push
pop
call
fwait
or
stos
rcr
dec
pop
pop
dec
mov
sbb
fisub
fisub
jl
hlt
add
imul
out
icebp
sub
xchg
gs
fmul
jge
mov
cwde
(bad)
bound
mov
ficomp
sub
sbb
add
mov
fdivr
push
clc
(bad)
cmp
adc
(bad)
idiv
clc
(bad)
fcmovnu
mov
and
ins
gs
lods
test
mov
xlat
sbb
retf
cld
xchg
or
sar
or
dec
outs
pop
idiv
call
ins
lahf
dec
addr16
shl
fcom
(bad)
pop
and
call
retf
xchg
ficomp
ins
cmp
test
xchg
xchg
int3
int3
push
div
lahf
jae
pop
call
xchg
fst
fild
jge
mov
fst
scas
pushf
jne
xchg
into
lea
pop
pop
sbb
(bad)
xchg
inc
sar
xor
cmp
das
dec
out
pushf
aam
ffreep
cmp
xor
xchg
fcomp
pusha
fcmovu
js
inc
hlt
rol
xchg
mov
repnz
stos
movs
jmp
(bad)
shr
pop
xchg
pop
mov
pop
fcomp
rcr
loope
ficom
pop
imul
retf
or
aas
sbb
add
fnstcw
int3
sahf
inc
pop
xor
xor
fsubr
daa
adc
push
adc
(bad)
mov
cdq
lods
int
dec
fadd
mov
pop
pop
loopne
fmul
out
mov
retf
shl
ret
xchg
or
and
enter
cmp
ja
ficom
mov
mov
fbld
sahf
retf
ficomp
inc
push
ins
mov
mov
jmp
in
cwde
mov
addr16
fdiv
cmp
and
inc
outs
fcom
aad
pushf
shl
sbb
xchg
dec
outs
pop
jp
je
or
sub
test
xchg
xchg
out
sti
dec
ss
enter
out
frstor
xchg
(bad)
pop
or
mov
and
add
mov
addr16
rcl
(bad)
push
push
outs
std
inc
loopne
mov
fwait
dec
inc
lds
mov
inc
addr16
xor
scas
xor
jge
adc
aad
pushf
push
div
or
scas
mov
sub
xchg
add
mov
ror
sub
sub
and
retf
and
pop
pop
add
in
data16
or
nop
or
inc
les
ja
jle
rcr
popa
dec
lock
std
call
(bad)
mov
xor
lods
xor
add
mov
fbld
xor
int3
sbb
call
jmp
cmps
jno
add
jb
jge
or
lods
pop
fucomp
adc
dec
push
int
jg
add
ficom
push
ins
jg
cmp
jl
sub
inc
repz
inc
cmp
daa
mov
mov
out
stos
xchg
xor
pop
dec
inc
dec
xchg
fdivr
or
jbe
bound
out
adc
push
sbb
mov
or
push
cld
out
dec
mov
(bad)
hlt
mov
jmp
ins
add
mov
xchg
push
sbb
cwde
push
out
out
rcl
add
sub
dec
in
in
inc
mov
lds
adc
(bad)
dec
mov
(bad)
xor
sub
(bad)
repz
inc
push
or
aam
cmp
in
popf
movs
push
lea
fild
daa
add
pop
int3
cmp
adc
sub
fcom
cld
and
inc
out
jg
dec
mov
into
adc
xchg
xor
mov
imul
adc
mov
iret
pusha
jmp
pushf
pop
inc
pop
enter
imul
popf
aaa
and
stc
xor
fldenv
xor
ror
sub
push
test
mov
hlt
cmp
push
inc
jp
sbb
dec
aam
jge
and
ja
dec
imul
inc
aad
jnp
das
xor
and
fwait
std
sub
jl
jmp
lds
out
lods
cwde
out
mul
retf
cmp
fstp
(bad)
pop
adc
ss
mov
sahf
ins
jbe
(bad)
mov
pop
jle
test
mov
imul
fs
das
xor
sub
in
xlat
rcl
dec
leave
in
inc
icebp
jmp
hlt
push
cmp
lahf
(bad)
mov
inc
ja
(bad)
pushf
sti
mov
inc
leave
aaa
mov
adc
cmp
xor
sbb
loop
inc
fisubr
imul
inc
das
pushf
out
js
les
lahf
std
imul
mov
pop
inc
pop
jg
inc
mov
test
or
sbb
mov
ins
xchg
ds
push
loope
lods
xor
cld
sub
xchg
jae
(bad)
inc
int
je
into
pushf
sbb
(bad)
push
cmp
std
xchg
test
scas
inc
pop
add
lods
dec
inc
xchg
out
sbb
iret
xchg
and
sub
icebp
sub
imul
call
mov
mov
inc
add
add
retf
pop
retf
mov
xchg
jnp
mov
mov
and
push
les
fcmovbe
pmulhw
or
dec
int3
das
cmp
lods
push
xchg
dec
icebp
pop
shl
rcl
loop
aad
add
cs
mov
pop
jg
popf
xchg
inc
push
sbb
mov
dec
dec
xor
fdiv
xor
pop
mov
lahf
mov
lds
into
ds
or
(bad)
xchg
cwde
xchg
rcl
test
push
pop
sahf
mov
dec
std
jno
or
retf
or
call
loopne
sbb
aam
push
mov
pop
rcr
and
int
xchg
sub
les
loop
test
xchg
inc
aam
(bad)
jno
stos
out
xor
sub
in
sub
mov
dec
mov
mov
mov
jle
mov
ins
gs
sahf
add
sub
xlat
jmp
push
loop
jge
mov
(bad)
lea
or
mov
dec
and
in
lds
xlat
xor
popf
xchg
jp
sbb
xchg
into
jmp
xchg
push
adc
int
movs
xchg
mov
mov
retf
xor
sbb
cmp
lods
scas
sbb
push
mov
xlat
lea
mov
inc
add
sub
or
stos
js
test
pop
inc
mov
inc
dec
inc
hlt
(bad)
xchg
inc
sub
in
pop
xor
and
push
cmps
dec
stos
out
mov
fisttp
sub
and
mov
mov
(bad)
shl
pop
dec
test
sbb
mov
out
cmp
and
add
jmp
imul
cmps
ins
sti
(bad)
dec
fwait
scas
and
dec
pop
mov
retf
or
cmps
stc
cdq
mov
pushf
add
or
xchg
adc
int
jns
ficomp
(bad)
push
rcl
ja
add
sbb
mov
mov
scas
push
in
cld
movs
xchg
retf
lds
fnstenv
(bad)
imul
retf
push
add
jmp
mov
push
(bad)
fbld
popa
mov
(bad)
imul
xor
sbb
rcr
push
lahf
xchg
ret
gs
fdiv
sahf
push
dec
dec
pop
cmps
sbb
adc
jb
xchg
push
jnp
sti
js
ret
pop
(bad)
mov
jbe
add
lds
ret
ja
sub
test
adc
pop
sub
test
jle
cwde
fld
pop
test
pop
lock
mov
in
add
sub
in
test
mov
dec
gs
jbe
pusha
pop
xor
lds
dec
pusha
add
imul
and
aam
xchg
cli
in
add
jnp
mov
ds
dec
(bad)
fisttp
mov
jmp
push
or
(bad)
mov
(bad)
movs
dec
repz
push
fstp
hlt
dec
(bad)
adc
pop
repnz
or
fst
pop
daa
jg
dec
mov
popf
daa
aas
retf
jbe
outs
fimul
add
lods
or
xor
loope
pop
leave
mov
cwde
pop
std
sbb
mul
mov
loope
mov
rol
sbb
xchg
push
and
sub
enter
and
cmp
xchg
push
xchg
and
xor
nop
dec
ds
xchg
fsubr
test
xor
or
jmp
sbb
lods
sub
iret
adc
sbb
dec
push
into
push
push
jae
lock
retf
scas
fst
sbb
out
(bad)
push
and
dec
jge
lods
jg
in
mov
adc
pop
sbb
xchg
out
ret
int
mov
pop
or
jp
int3
mov
pop
push
and
aam
(bad)
mov
adc
dec
cld
loope
jns
push
and
push
div
xchg
fcmovb
inc
outs
and
ins
mov
dec
mov
and
setge
icebp
imul
in
js
sub
sbb
xor
inc
or
sub
stc
repz
sub
sbb
cmp
sbb
dec
ds
int3
call
lock
pop
(bad)
inc
jmp
push
inc
mov
shr
jmp
pusha
and
dec
inc
cmc
adc
jne
aam
pop
imul
jbe
in
cwde
nop
cmp
xchg
pop
(bad)
cli
lock
hlt
loop
jl
adc
ds
fyl2x
fwait
jmp
popa
repz
inc
jmp
mov
mov
or
loop
shl
(bad)
fadd
and
add
push
mov
rcr
cld
jecxz
dec
adc
rcr
sar
cdq
pop
jne
xor
arpl
dec
adc
in
add
or
inc
mov
addr16
(bad)
pop
dec
scas
adc
mov
push
adc
pop
es
cmp
cmp
icebp
push
jnp
mov
test
ins
out
xlat
and
pop
add
push
sbb
shl
popf
popa
into
mov
fdiv
xor
repz
sbb
mov
jle
aam
jl
pop
or
fwait
pop
mov
repz
rol
aaa
pop
rol
fstp
int
enter
leave
cld
mov
ds
adc
mov
pusha
inc
js
out
cmps
sahf
or
xchg
ja
sub
jmp
int3
lahf
or
adc
ins
cmp
pop
fild
and
cmps
jg
int3
push
jmp
pop
inc
dec
sub
shl
in
pop
xchg
out
sub
mov
adc
fwait
adc
addr16
jnp
jae
ss
fist
stos
test
clc
out
cdq
push
xchg
dec
(bad)
stos
add
adc
or
mov
mov
push
sub
xchg
fidivr
jmp
xor
fwait
and
adc
push
push
push
cmp
adc
sub
rcr
push
push
repnz
lods
sub
call
ss
add
mov
adc
jg
mov
or
pop
jb
mov
dec
xor
aaa
rcr
ins
xchg
xchg
in
jp
std
fild
clc
cmp
test
mov
pop
retf
or
pop
mov
icebp
sbb
fcomp
lahf
(bad)
add
dec
scas
mov
dec
in
retf
inc
inc
mov
xchg
ficom
cmp
aad
xlat
aam
in
xchg
clc
sub
shl
mov
jns
cmp
push
retf
mov
fisubr
ja
je
inc
sbb
popf
loop
or
test
pop
ja
dec
adc
xchg
xor
jb
mov
rcl
xor
adc
pop
sub
xchg
in
xchg
sbb
bswap
outs
mov
jg
shr
cmps
aam
popf
inc
mov
mov
adc
ins
call
inc
sub
lds
xor
cli
add
xchg
outs
sar
dec
outs
cmc
(bad)
push
or
shl
inc
jge
mov
ins
(bad)
jne
inc
mov
lea
sbb
pop
imul
(bad)
lock
and
xor
mov
cld
out
int3
rcr
movs
inc
fwait
mov
daa
sbb
cmove
aas
mov
out
inc
sub
lock
arpl
imul
in
dec
pop
pop
das
ds
xchg
stos
sub
sbb
(bad)
adc
pop
movs
push
fdiv
in
sub
add
dec
sbb
cwde
rcr
cmps
xchg
popf
sub
xor
xabort
call
aaa
cmps
xor
rep
out
or
test
(bad)
push
and
adc
popa
lods
scas
add
sbb
ds
push
and
jne
dec
pop
bound
into
inc
xlat
jge
pushf
ror
shr
sub
imul
mov
or
popf
sub
dec
sub
mov
repnz
pop
lods
jmp
fsubr
pop
call
iret
les
pusha
popf
sub
add
mov
shl
push
and
jmp
pop
cdq
ins
inc
inc
mov
xchg
das
cmp
loopne
dec
jle
sahf
dec
pop
add
std
jmp
inc
jbe
int3
mov
pushf
add
lea
add
clc
add
fcmovnb
push
dec
xchg
mov
adc
push
(bad)
mov
cld
clc
pop
adc
pop
cli
inc
imul
cmc
jg
or
cmp
xchg
add
fxch
sbb
push
sti
clc
push
xchg
shr
sbb
add
dec
xchg
int3
fsubr
adc
out
xor
fisubr
js
xlat
pop
or
fxch
bound
or
jnp
retf
cdq
adc
loope
jp
inc
adc
fs
push
sub
mul
mov
lea
pop
and
fisub
and
or
div
jbe
in
xchg
pop
and
push
jge
jbe
and
pop
sbb
jmp
popf
cmp
lds
daa
cmp
xchg
inc
(bad)
hlt
mov
daa
lods
push
push
fst
sbb
clc
xchg
adc
inc
jns
push
add
sub
or
adc
cmp
mov
inc
and
push
push
lods
xchg
lock
and
push
mov
mov
add
out
mov
in
aas
jnp
cmp
cld
(bad)
nop
fld
in
jnp
sub
pop
dec
clc
fs
mov
and
dec
call
add
hlt
push
dec
add
fiadd
mov
test
ja
lahf
daa
popf
into
mov
pcmpeqd
sahf
fucomi
adc
dec
mov
mov
movs
mov
cli
unpckhps
dec
(bad)
call
ret
push
jg
dec
(bad)
pop
adc
xchg
(bad)
jecxz
or
mov
jmp
cli
dec
sbb
add
xchg
jno
push
shl
inc
mov
lods
fld
push
ds
nop
test
xchg
pop
jge
mov
mov
inc
mul
dec
add
addr16
mov
jbe
sbb
ds
stos
cmc
mov
shr
or
int3
push
in
ds
cwde
out
into
xchg
ins
xchg
xchg
out
mov
cld
xchg
inc
xchg
std
out
shl
push
mov
mov
out
cmps
mov
cmps
cld
bound
dec
pop
neg
xchg
jb
mov
and
push
out
push
shl
outs
imul
pop
cmp
bound
push
jns
and
out
shr
cli
push
add
aaa
cmp
lea
or
inc
retf
or
push
out
xchg
int
addr16
sbb
sahf
(bad)
arpl
add
adc
(bad)
stos
push
inc
push
sub
loope
sbb
push
(bad)
(bad)
fst
cmp
inc
mov
pop
in
jmp
mov
nop
mov
aad
loop
or
fild
ror
int
leave
lahf
(bad)
jge
xchg
jg
fdiv
pop
cmovno
out
imul
ret
pop
or
jno
ret
push
sbb
lods
stc
xchg
(bad)
push
dec
adc
sahf
std
lea
test
inc
mov
xor
mov
cmp
push
cmp
rcr
popf
shl
lock
ins
xor
mov
xchg
or
aad
fwait
popf
loope
inc
pushf
ins
pop
cwde
(bad)
cld
push
cmps
cdq
add
mov
les
dec
mov
in
mov
adc
mov
xor
or
pop
shl
test
mov
xchg
jge
add
sar
xlat
mul
movs
mov
into
jmp
dec
out
int
popa
ss
dec
adc
shl
sbb
aaa
jge
sbb
rcr
adc
mov
test
mov
fs
aam
push
movs
(bad)
(bad)
gs
mov
sbb
lahf
add
cld
int
xchg
jb
and
int3
stc
jge
inc
mov
dec
push
adc
push
cmp
push
sub
mov
cs
pop
xchg
jno
es
cmp
xchg
xor
xchg
jg
pushf
call
xchg
mov
out
xchg
(bad)
hlt
(bad)
lods
repz
int3
fwait
cld
dec
sub
sub
pop
sub
shr
jge
xchg
or
shl
mov
adc
sbb
nop/reserved
bound
pop
test
movs
out
and
mov
mov
fisttp
lock
pusha
dec
sub
mov
mov
test
pop
push
leave
dec
mov
(bad)
mov
fld
jmp
sahf
dec
cld
fwait
in
mov
cmps
mov
lods
or
sbb
add
mov
or
cmp
push
sti
sbb
inc
jae
test
retf
push
(bad)
outs
out
push
leave
and
fadd
push
aaa
fwait
pop
cmp
sbb
enter
mov
fsub
xchg
adc
xlat
xchg
out
xchg
mov
and
xor
mov
mov
xchg
mov
gs
mov
adc
call
mov
inc
jl
mov
ret
pop
inc
cmp
ficom
repz
shl
jnp
adc
js
pop
xchg
test
cmps
loopne
in
inc
lods
mov
and
xchg
mov
sub
jmp
add
pop
xchg
and
idiv
push
cmps
fs
xchg
aas
or
sbb
push
adc
sbb
shr
mov
(bad)
enter
pop
cmp
(bad)
sbb
cmp
test
imul
jl
pop
cmp
in
sbb
data16
scas
sbb
mov
loop
push
mov
fs
mov
mov
or
push
push
ficom
mov
movs
mov
mov
loope
addr16
sar
leave
sqrtps
fcomp
add
add
add
push
sub
aad
mov
lock
dec
(bad)
xor
bound
test
push
inc
fs
test
and
push
movs
mov
aas
mov
(bad)
(bad)
sti
outs
jnp
cmp
hlt
mov
ins
loope
or
test
out
push
pop
mov
fild
sub
arpl
ss
(bad)
pop
test
mov
mov
popf
out
sar
fwait
sub
and
adc
xor
adc
out
xor
movs
mov
xchg
inc
fwait
aas
retf
pop
test
pop
cmp
out
leave
inc
inc
lods
adc
fs
push
rcl
in
mov
sub
rol
pop
and
shl
rcl
cmc
ficom
xlat
cmps
les
mov
leave
push
mov
les
(bad)
dec
pop
xor
inc
cld
cld
cmp
cs
outs
icebp
xchg
jp
mov
mov
sub
lods
loopne
push
pop
stos
in
mov
add
fldenv
dec
and
push
(bad)
gs
sbb
cmp
inc
jge
mov
xchg
repz
mov
add
cs
addr16
mov
into
and
ror
ins
pop
pusha
(bad)
cmc
jb
mov
lahf
inc
mov
sub
loop
test
in
xchg
loopne
or
shr
inc
pop
sub
xor
push
in
mov
shl
fwait
mov
cld
pop
mov
(bad)
pop
dec
xchg
in
dec
cli
stos
xor
cmc
fld
fist
fwait
inc
loope
dec
sub
xor
xchg
ja
or
mov
out
adc
sub
push
mov
test
push
mov
aaa
sbb
jnp
sbb
cdq
out
sar
stos
jns
jp
(bad)
scas
jbe
and
leave
push
fst
neg
xchg
clc
sub
cld
fadd
(bad)
addr16
loopne
outs
shl
jbe
pop
jnp
pop
dec
in
sub
addr16
pusha
pushf
push
cdq
sub
arpl
and
mov
cmp
push
pop
pop
or
cld
push
sub
xor
pop
lds
es
cmps
mov
inc
dec
jns
dec
popf
int3
cmps
push
mov
pop
stc
stc
mov
fcom
in
in
pop
(bad)
dec
jne
sar
xchg
xlat
(bad)
rcl
and
pop
outs
ds
or
inc
pop
cmp
jp
pop
cmc
or
fstp
sbb
xchg
(bad)
out
jg
push
pop
shr
shr
sub
xor
dec
and
stc
jbe
sub
std
pop
leave
cdq
imul
and
std
mov
xor
jmp
stos
in
outs
ds
lods
jno
add
fsubr
sar
sub
xchg
popf
sub
sbb
fisttp
bound
jl
loopne
or
sbb
inc
outs
fsubr
add
fldenv
inc
add
popf
test
jge
loop
outs
gs
ins
retf
ret
iret
ficom
sbb
xor
cld
jb
push
out
inc
repz
mov
jle
gs
mov
out
shr
test
es
push
lahf
imul
nop
shl
push
ror
push
fcmovbe
xor
repz
js
call
pop
xchg
xchg
pusha
dec
push
repz
mov
pop
push
addr16
cmc
ror
jbe
pop
je
jge
and
imul
ret
or
push
icebp
jge
fidiv
int
dec
mov
int3
cmps
or
sbb
stc
and
and
jl
aaa
push
mov
pusha
pop
sbb
ja
stos
sti
push
rol
stos
neg
lahf
inc
and
setl
cmp
int
pop
loop
jp
pop
cmp
push
sbb
stos
in
mov
or
or
cmp
mov
pop
or
adc
in
cmps
mov
dec
shl
xchg
pop
cmps
dec
mov
aaa
leave
or
jecxz
stos
jle
mov
mov
enter
and
sbb
cmp
pop
js
sbb
and
sub
add
mov
iret
cmp
or
add
popa
pop
stos
jbe
scas
adc
xor
pop
sub
ja
data16
movs
lods
mov
and
mov
repz
jb
mov
arpl
or
ficomp
mov
(bad)
(bad)
pop
dec
pop
inc
scas
dec
int
mov
mov
(bad)
(bad)
hlt
pop
pop
xchg
dec
xor
jmp
aas
js
pushf
je
rcr
sub
jge
mov
(bad)
add
add
pop
fisub
jle
outs
xchg
cmp
int3
fwait
mov
imul
push
jmp
fsub
jo
xchg
mov
lea
ret
dec
imul
xchg
sbb
loope
cmp
xor
mov
mov
test
cmp
jp
fwait
adc
xor
pop
fcmovne
loop
les
mov
add
pop
gs
lea
int
ins
sub
xlat
or
ss
adc
mov
repz
test
aas
ror
loop
lahf
gs
in
fiadd
stos
jmp
(bad)
call
(bad)
shr
pop
fst
int3
ds
push
in
pop
jl
cld
add
jmp
or
repnz
ret
adc
fs
cmp
jns
jle
not
ficom
rcl
or
jmp
outs
mov
ret
sbb
ss
cwde
rcr
popf
std
in
inc
test
mov
cmp
inc
inc
push
stc
je
je
cmp
adc
clc
fcomi
adc
xor
sbb
and
aaa
sbb
or
shl
mov
push
cmp
sbb
xchg
loope
or
rcl
and
mov
out
bound
xor
xor
lods
sbb
stc
pop
in
jo
int3
test
xor
mov
xor
mov
adc
(bad)
repnz
pop
int
sub
cdq
fld
push
adc
rcr
arpl
xchg
dec
fs
sub
push
cmp
clc
fsub
jp
std
mov
sbb
dec
push
imul
xchg
pop
adc
cli
enter
ja
push
xlat
dec
int3
adc
in
adc
(bad)
in
js
xor
push
mov
cdq
mov
jns
add
out
jg
cmp
rcl
jl
rcl
enter
rol
pop
dec
in
mov
sub
xor
sub
icebp
es
mov
int
mov
inc
test
int3
jmp
loop
mov
movs
int
loopne
pop
les
imul
arpl
ret
or
or
aad
mov
lods
and
loope
ret
push
in
scas
dec
xor
push
cmp
sbb
add
pop
jae
ja
pop
push
add
dec
out
add
jg
push
jl
loopne
xchg
es
cmc
not
je
jge
aas
add
sbb
sub
lahf
pop
shl
sti
and
out
std
pop
sub
pop
pop
in
dec
jle
push
repz
cmp
dec
adc
jns
imul
enter
clc
mov
std
adc
fiadd
cmc
mov
inc
xor
test
aad
xchg
push
pop
scas
call
test
mov
mul
imul
outs
dec
mul
add
cmp
(bad)
not
cmc
not
mov
mov
and
pop
ins
jp
adc
shl
(bad)
jecxz
lea
sbb
jns
push
dec
xchg
adc
xchg
pop
jb
jl
push
push
movs
jbe
les
mov
push
cld
mov
pop
mov
mov
push
adc
sbb
push
mov
leave
adc
ret
xor
outs
push
xchg
cdq
dec
adc
shr
retf
cmc
mov
mov
not
in
dec
das
std
ins
(bad)
cld
icebp
jne
inc
jge
xor
xchg
jp
dec
adc
cmp
inc
je
pushf
ins
xor
mov
mov
add
hlt
cmp
mov
cli
push
fadd
pop
fisttp
pop
out
cld
enter
jmp
in
sub
(bad)
jmp
inc
idiv
mov
cmp
ret
fwait
mov
cmp
fistp
mov
cs
stc
loopne
adc
popf
push
arpl
popa
imul
lea
fwait
xor
pop
lods
pop
push
adc
jl
cmp
inc
and
cmp
imul
repz
jmp
sub
fcomp
and
xlat
enter
jbe
lock
pop
sbb
dec
popf
or
pop
xor
sar
dec
mov
adc
into
or
int
jbe
cmp
fsubr
loope
jmp
adc
push
icebp
rol
popa
call
retf
dec
and
xor
pop
mov
popa
(bad)
sahf
ret
mov
sbb
add
mov
dec
loop
xchg
not
ret
int3
lock
in
out
mov
cmp
sub
call
les
xlat
aaa
rcr
xchg
add
jg
cs
frstor
and
into
mov
dec
or
jns
or
mov
repz
shl
stos
imul
fistp
mov
inc
sar
cmp
(bad)
das
(bad)
fucomi
fs
iret
fnstcw
mov
xor
dec
lds
imul
cmps
jp
ret
add
xchg
in
fldenv
xchg
jae
sub
fidiv
push
mov
pop
imul
ror
js
cmps
mov
fsub
lock
push
cmps
jle
push
aas
xor
push
mov
and
jns
adc
xor
mov
(bad)
retf
(bad)
(bad)
xor
mov
mov
add
aaa
pop
xchg
sbb
pop
hlt
pop
cmp
cmp
mov
jo
fdiv
jno
jne
mov
mov
mov
add
xchg
xchg
sub
jge
cmp
rcr
mov
adc
das
movs
ds
push
mov
stos
adc
and
mov
cs
daa
(bad)
adc
dec
adc
aas
sub
jge
gs
pop
add
fwait
(bad)
pop
(bad)
pusha
in
push
dec
icebp
lock
fstp
sbb
jle
scas
mov
pusha
and
or
xchg
ins
shr
sub
out
rcl
add
and
pop
lods
fiadd
push
pushf
out
jmp
pop
repnz
sbb
movs
loop
push
mov
shl
in
cmc
fiadd
repz
cdq
sbb
retf
or
mov
test
dec
dec
jb
mov
dec
adc
adc
ins
lea
stos
pop
fcmovnbe
std
ins
jmp
inc
inc
dec
mov
mov
push
jae
nop
ins
dec
imul
sbb
jo
shl
daa
int3
jge
jmp
add
xor
rcl
xor
popa
sbb
enter
adc
stos
rcr
fwait
in
xchg
repz
test
mov
les
sbb
cmp
cmps
jmp
and
mov
stc
add
xchg
pop
fwait
lock
fstp
push
(bad)
mov
mov
pop
aaa
test
call
xchg
fwait
or
sub
inc
pop
sbb
cmp
push
cmp
push
mov
fist
mov
(bad)
int3
cmp
inc
xchg
jle
sbb
xor
in
dec
sti
ror
lock
cld
sub
icebp
nop
(bad)
mov
fadd
(bad)
daa
(bad)
mov
push
in
ins
retf
test
xchg
icebp
sub
add
pop
jg
rcr
xor
fild
or
shl
cli
cdq
mov
fcom
rcr
fwait
and
pop
mov
xchg
sub
retf
and
push
jl
fcomi
inc
adc
mov
jmp
mov
(bad)
mov
or
mov
call
mov
arpl
int3
jb
cmc
repz
(bad)
cwde
mov
xchg
cwde
ss
cwde
fwait
inc
dec
lahf
mov
sub
(bad)
ficomp
xor
pushf
push
into
mov
pop
mov
(bad)
ror
rcl
cmp
pusha
and
and
jnp
xchg
std
cmp
into
loope
add
pop
aam
shl
pop
(bad)
and
stos
add
xchg
mov
std
movs
imul
in
push
cmps
sbb
adc
or
lahf
xchg
sbb
fst
sub
add
shl
sub
sbb
cli
mov
mov
in
sub
mov
ror
bound
inc
ficomp
mov
push
add
jp
shl
aam
add
sbb
lods
retf
je
cmc
test
push
idiv
jp
xchg
inc
sahf
cmc
push
mov
retf
pop
mov
sub
std
mov
and
cmps
dec
in
inc
mov
jb
inc
in
xor
or
fs
and
cmps
shl
xor
jae
mov
cld
sbb
xlat
leave
scas
call
push
dec
(bad)
mov
pop
dec
ins
xor
scas
loopne
jmpw
mov
xor
adc
jo
cmp
push
int
ja
int
pop
pop
cmp
sub
scas
sub
cli
adc
or
mov
dec
stos
pushf
sub
jae
dec
dec
lods
mov
stos
stos
xor
stos
(bad)
mov
fdivr
mov
jmp
and
inc
cli
loop
pop
out
loope
xchg
imul
inc
sub
rcl
rcr
dec
sbb
sub
stos
addr16
add
test
into
(bad)
mov
cmps
pop
jge
mov
pop
pmaxsw
mov
adc
push
in
mov
cld
fdivr
out
mov
mov
and
test
gs
scas
out
fidiv
test
daa
pop
sub
aad
lea
jnp
mov
out
fcmovbe
jmp
cdq
out
sub
or
lods
sub
push
repnz
add
rol
pusha
into
xor
fistp
loop
ins
push
imul
and
mov
pushf
pop
push
or
sbb
sbb
ss
ret
dec
int3
and
push
hlt
jecxz
cs
cdq
adc
add
cmp
jnp
les
icebp
les
dec
pop
xor
xor
push
out
jge
mov
pop
push
push
cdq
pmullw
in
int3
ficomp
sbb
fcom
ins
pop
iret
cmp
push
sahf
out
cmc
(bad)
imul
or
push
ins
sbb
mov
jno
xor
repz
ror
cwde
ficom
inc
arpl
dec
sbb
xchg
push
mov
into
nop
mov
add
pop
mov
ror
mov
cmp
pop
cld
xchg
cdq
mov
loope
pop
pop
(bad)
iret
aaa
outs
sub
sub
push
ror
clc
push
(bad)
mov
cli
cmp
lahf
sbb
aaa
and
sub
pop
adc
push
add
add
inc
fiadd
mov
mov
div
inc
mov
pop
shr
jmp
in
btc
dec
ds
adc
cmp
mov
test
mov
fisttp
shl
add
jl
sub
int
sbb
mov
sub
mov
(bad)
pop
push
add
lahf
(bad)
jl
test
xor
pop
sub
and
mov
and
(bad)
pop
or
pop
inc
in
or
mov
mov
dec
adc
loopne
and
cwde
mov
popf
sbb
cmps
loop
sub
ins
das
sub
pop
call
adc
scas
sbb
xor
xchg
in
fild
mov
jge
aaa
imul
push
or
sub
retf
or
sub
push
adc
jnp
mov
dec
das
(bad)
lods
movs
fadd
lods
push
mul
fisttp
push
fsub
push
xchg
enter
jecxz
mov
xchg
jmp
push
mov
mov
ds
add
dec
imul
cmp
ror
mov
cld
mov
and
daa
mov
imul
mov
dec
xor
loopne
push
xlat
dec
ret
stos
int
jno
pop
cmps
xchg
cmps
ins
iret
pop
add
pop
pop
mov
or
repz
push
xchg
(bad)
call
push
lods
jae
push
xor
rcl
jmp
call
mov
ror
not
sbb
nop
inc
xchg
push
and
fisttp
xchg
jnp
ret
addr16
cmps
in
push
lea
sahf
adc
mov
and
adc
and
out
push
loope
dec
mov
in
add
movs
inc
ja
stc
adc
xlat
pop
arpl
jo
xchg
aaa
mov
in
xor
pop
mov
cs
xor
pop
stc
push
sub
sub
cdq
frstor
mov
and
fadd
ret
out
aad
jg
dec
sbb
mov
mov
sub
les
jecxz
fldenv
mov
add
or
mov
sub
jp
into
pop
sbb
dec
(bad)
(bad)
call
push
std
sbb
pop
retf
or
push
inc
je
xchg
lods
imul
pop
clc
aaa
push
ret
jmp
int3
add
add
inc
pop
mov
adc
test
into
cmp
inc
jnp
pop
cs
xor
jmp
(bad)
sub
icebp
push
fst
and
rcr
inc
(bad)
sbb
outs
js
and
aaa
pop
mov
adc
cmp
push
mov
adc
daa
icebp
shr
loopne
xlat
mov
fst
sub
jmp
push
ss
lea
jecxz
stos
add
out
xor
mov
inc
repnz
push
dec
cwde
fdivr
jns
int
xchg
or
bound
out
outs
sub
ins
outs
lea
and
and
add
mov
xchg
jmp
nop
lods
cmp
dec
outs
jp
stos
mov
test
arpl
out
push
sub
daa
dec
mov
add
in
sar
(bad)
lods
jecxz
mov
mov
add
test
push
test
outs
loope
icebp
pop
test
jno
gs
shr
aas
adc
lods
aam
scas
dec
fs
lea
not
mov
pop
ret
push
push
push
enter
addr16
push
inc
mov
adc
pop
mov
aas
xchg
loop
sbb
lock
pop
fisttp
mov
jmp
adc
cwde
test
stos
pop
and
mov
shl
dec
push
adc
pop
pushf
out
xchg
jle
cmp
ret
dec
add
jmp
arpl
(bad)
(bad)
adc
dec
cli
add
sbb
add
jp
fidivr
mov
push
pop
xchg
stc
sbb
jmp
xor
popf
xchg
out
jnp
mov
aaa
fcompp
pop
in
test
movs
daa
adc
sbb
mov
inc
cli
retf
xor
mov
cmp
mov
pop
fs
adc
cwde
ror
mov
(bad)
aaa
fwait
in
enter
arpl
movs
addr16
out
loope
dec
adc
dec
loopne
jb
inc
xchg
jmp
push
jno
das
mov
mov
cmp
pop
cmp
popa
mov
xlat
jmp
mov
rol
pushf
jmp
sahf
xchg
repnz
imul
push
push
hlt
fisttp
jns
mov
fcomp
pop
icebp
sbb
adc
pusha
cmp
jno
cmps
ins
(bad)
sar
into
add
js
xchg
fcomi
sbb
fwait
jbe
cs
push
mov
or
inc
mov
stc
sub
int
out
daa
sti
inc
or
xor
mov
lidtd
mov
(bad)
adc
xchg
sub
pop
inc
in
mov
push
cmovle
sahf
xchg
cmp
js
js
jmp
xchg
ficomp
sbb
and
cwde
test
fidivr
pushf
pop
test
pop
fdiv
inc
push
ins
mov
bound
loope
xlat
push
std
jl
fiadd
push
stos
xchg
adc
adc
in
movs
out
sub
pop
cs
pop
lea
jnp
mov
mov
sbb
cmp
jg
lods
mov
aaa
xchg
push
or
cmp
scas
cmp
sbb
aam
mov
adc
outs
add
fnclex
jae
jno
int3
iret
xlat
call
jne
dec
dec
lea
fld
jecxz
and
dec
lahf
xor
dec
dec
xchg
jno
ins
dec
add
aam
push
and
adc
in
stos
add
mov
aam
dec
retf
sbb
jge
in
xchg
ins
add
and
add
aas
push
mov
or
pusha
ins
xchg
enter
(bad)
jnp
cdq
dec
icebp
push
cmp
inc
lock
arpl
fadd
jmp
clc
out
mov
test
push
xor
dec
ret
lock
and
dec
jg
pop
dec
dec
test
or
xchg
pop
push
adc
pop
fwait
xchg
sar
push
dec
add
idiv
fstp
pop
push
dec
in
pop
fld
mov
es
pusha
push
sub
push
mov
push
adc
mov
cmps
mov
push
or
pop
add
xchg
daa
mov
or
inc
jp
cmp
enter
stc
inc
scas
scas
icebp
adc
dec
in
das
and
pop
pop
jmp
pop
inc
aam
fwait
test
push
dec
xchg
out
fdiv
adc
xchg
shl
and
sbb
push
mov
inc
fldcw
dec
sbb
xor
in
shl
sti
pop
jcxz
mov
fmul
dec
lea
ret
test
add
mov
cwde
jo
mov
inc
sahf
cmp
outs
aam
jmp
cmps
in
dec
cmp
push
stos
nop
arpl
mov
movs
aam
push
mov
mov
sub
leave
in
sub
dec
div
fld
cld
xor
add
push
nop
dec
pop
pop
rcl
(bad)
rcr
imul
adc
arpl
cdq
and
shl
das
(bad)
adc
pop
and
(bad)
mov
ins
repz
xchg
mov
repz
sbb
jmp
lds
jmp
out
pop
(bad)
shl
test
add
xchg
cmp
sub
push
ins
pop
repnz
int3
inc
add
jne
test
rcr
push
stc
adc
ficom
in
icebp
stc
dec
mov
call
daa
arpl
xchg
pop
fld
stos
and
dec
cmp
cmp
aam
pop
sbb
dec
popa
xchg
cmp
inc
inc
aad
call
or
jns
pushf
loop
dec
mov
jne
xchg
pop
xchg
repz
lahf
fwait
dec
fsub
fwait
inc
cdq
and
and
sub
loopne
cmps
xchg
out
jno
pop
and
fcmovb
les
pop
or
out
loope
mov
push
mov
(bad)
pop
and
int3
ret
sub
scas
iret
xor
movs
jg
cmc
mov
cs
mov
mov
dec
xor
iret
add
dec
ror
cmp
mov
adc
(bad)
mov
je
xchg
mov
inc
rcl
and
xchg
mov
and
scas
mov
jns
inc
add
push
mov
loope
jl
ds
push
bound
dec
fcmovb
(bad)
push
mov
lea
xlat
je
mov
aaa
pop
add
jmp
push
repnz
lock
ss
cmp
sti
push
and
dec
(bad)
jne
rcr
pop
sbb
loop
sahf
lock
push
and
mov
pop
loope
sbb
(bad)
sbb
xor
ret
popa
iret
idiv
cmp
fbstp
push
xor
icebp
aam
fisub
aas
lock
and
jmp
mov
dec
mov
dec
mov
lea
or
mov
and
or
push
(bad)
int
inc
xchg
mov
xor
imul
mov
push
jmp
btc
cmp
aaa
xchg
mov
gs
cmp
out
daa
xchg
pop
sbb
ja
rol
sbb
or
add
in
(bad)
push
adc
sbb
push
inc
aam
(bad)
add
add
push
ds
jecxz
xchg
inc
mov
push
fcom
adc
enter
ret
fisub
pop
push
mov
aaa
jge
cmp
xor
sbb
mov
out
das
cwde
fwait
lock
(bad)
outs
mov
add
dec
sub
push
and
jg
and
and
dec
jnp
xor
(bad)
push
adc
test
out
add
dec
xor
mov
in
push
das
mov
add
push
push
pop
ds
xchg
add
push
jl
cmps
push
stc
pop
shr
nop
std
jno
sbb
fs
cld
jmp
out
cwde
mov
bound
shr
(bad)
(bad)
scas
(bad)
ja
push
rcr
lea
cld
in
add
sbb
out
xor
push
nop
push
cmp
fnsave
pop
int
jl
aad
(bad)
and
cmp
adc
add
mov
les
cmps
inc
mov
ds
in
sbb
(bad)
out
fiadd
in
push
cwde
dec
mov
lock
jno
test
dec
sar
ficomp
or
pop
xchg
mov
and
and
inc
mov
dec
mov
vpmullq
retf
add
shr
jle
push
push
cmp
dec
mov
cmp
sub
cs
dec
cmp
mov
sti
sbb
loope
mov
mov
add
in
popa
nop
pop
dec
ds
les
dec
repnz
sbb
mov
fld
push
jg
test
and
pop
sbb
mov
mov
push
fcomp
scas
repz
mov
pushf
jle
pop
lahf
dec
sar
lea
xor
cdq
jo
sub
loop
out
jle
cdq
icebp
push
push
xor
sub
dec
dec
pop
adc
adc
jae
and
add
test
int
retf
and
sbb
xchg
jns
loopne
js
or
je
(bad)
(bad)
retf
popa
cmp
cmp
daa
mov
in
adc
inc
mov
mov
rcl
or
push
in
and
addr16
hlt
ret
not
iret
sbb
test
(bad)
pop
outs
or
lds
(bad)
jge
stos
jo
mov
adc
jmp
jmp
add
dec
retf
inc
(bad)
pop
daa
push
jno
es
jp
loope
mov
out
ret
cmp
adc
sahf
and
mov
movs
dec
loope
adc
ror
fwait
inc
inc
pusha
cmp
push
sub
shl
cwde
push
mov
outs
aad
adc
popa
out
mov
mov
mov
push
and
mov
push
shr
mov
out
jp
aad
push
sub
adc
sub
ret
dec
stos
xor
and
(bad)
and
xor
cmp
sbb
ins
or
jp
out
sbb
dec
pop
add
mov
fadd
shr
cld
cmp
jns
fist
pop
mov
cdq
mov
inc
outs
aam
push
cbw
jmp
ins
mov
and
push
xchg
and
xor
or
cli
adc
pop
xchg
ret
in
add
jmp
cmp
in
mov
(bad)
pop
pop
xchg
inc
pop
sub
daa
jbe
pop
mov
or
mov
push
add
push
push
mov
inc
aam
ds
mov
fidiv
out
sub
cmp
cmp
cmps
fstp
iret
arpl
pop
pop
les
dec
and
adc
(bad)
pop
mov
(bad)
dec
pop
js
cmp
dec
xor
sbb
lods
jno
xchg
xor
neg
lahf
inc
jl
imul
pop
sbb
mov
xchg
test
neg
lods
ret
sbb
ror
sub
push
cmps
repnz
jo
cmps
inc
mov
sbb
dec
loope
mov
pop
enter
nop
xchg
rol
xchg
pushf
pop
imul
lods
ror
stos
and
rcl
sahf
inc
popf
and
outs
xlat
pop
outs
push
mov
aad
push
ret
jl
inc
push
pop
ja
and
and
adc
inc
out
gs
sbb
xor
mov
les
aad
mov
push
add
sub
push
xchg
out
pop
inc
pop
push
pop
mov
adc
jg
addr16
enter
xchg
jecxz
in
ja
jmp
and
in
fisttp
test
xchg
aam
lods
inc
jns
add
sar
push
call
sbb
adc
je
stos
lods
int
mov
jnp
loop
int3
add
cmc
push
and
int3
pushf
nop
push
lock
mov
fs
stos
mov
fdivr
sbb
mov
xchg
mov
outs
mov
mov
stos
dec
fwait
ds
mov
sbb
xor
outs
shl
rcr
cmp
inc
adc
test
jno
(bad)
inc
pusha
add
add
(bad)
retf
mov
std
xchg
cmp
mov
jnp
and
aad
in
mov
cmp
sbb
mov
cmp
lds
sar
pop
mov
je
rol
xchg
dec
mov
mov
push
(bad)
jmp
loope
adc
shr
jno
cmp
mov
jl
dec
mov
je
xchg
jmp
dec
pop
stc
ret
fwait
aad
dec
ret
lods
outs
jl
dec
sub
loope
ins
adc
sub
cmp
dec
imul
mov
dec
(bad)
bound
cs
sbb
inc
cli
push
sbb
xchg
pop
out
mov
inc
or
adc
cs
(bad)
sbb
dec
sahf
fistp
xor
imul
fdivrp
inc
jae
outs
sbb
pop
jg
push
outs
sub
test
pushf
inc
nop
ds
xor
xor
aaa
bound
mov
rol
call
loope
scas
add
movs
jecxz
jno
mov
(bad)
pop
(bad)
push
mov
test
mov
gs
dec
push
pop
mov
movs
pop
xchg
pop
sbb
neg
jmp
xchg
mov
ror
int3
fucom
cmc
mov
rcr
fdivr
ins
int3
xor
mov
jge
sar
pop
dec
and
imul
je
sub
inc
xchg
mov
ins
ret
rol
sbb
adc
add
hlt
ret
pop
stos
adc
pop
inc
or
push
test
mov
mov
pop
jmp
or
je
aaa
inc
jl
ret
sahf
mov
fadd
das
test
in
and
ficom
imul
icebp
xchg
jo
sub
shl
aaa
xor
(bad)
mov
xchg
xor
pusha
push
sub
pop
xchg
pop
loopne
add
sbb
int
fisub
push
mov
(bad)
pop
push
dec
mov
cmp
ins
jne
inc
fistp
sub
retf
stos
pop
adc
test
mov
mov
or
scas
cmp
(bad)
push
xlat
enter
cmps
in
jb
aad
sbb
adc
dec
rcr
mov
fisubr
mov
mov
adc
mov
fcmovb
neg
mov
or
icebp
jb
dec
pushf
or
push
push
call
jae
mul
and
ins
popf
sbb
xor
jo
fwait
popf
iret
fmul
gs
aam
daa
mov
sub
add
inc
push
loop
imul
dec
jbe
push
ss
pop
rcl
push
xor
mov
cmp
test
pop
movs
or
mov
jo
movs
shr
pop
xchg
(bad)
test
xor
mov
mov
sar
lods
fucomi
fyl2x
sbb
xchg
fstp
daa
rcr
inc
dec
retf
ins
(bad)
cmp
or
out
lock
mov
std
rol
mov
mov
imul
daa
(bad)
fistp
ror
pop
call
les
jb
jae
call
leave
push
pop
js
and
jo
push
sbb
outs
sbb
jg
mov
pop
xchg
cld
jecxz
das
cld
test
out
loop
out
imul
jge
and
mov
mov
sub
fsub
enter
xor
scas
sub
je
daa
pop
mov
call
rol
pushf
hlt
push
mov
rcl
mov
pop
into
adc
shl
jbe
imul
sub
push
push
pop
push
sbb
out
adc
mov
leave
or
cmps
adc
loopne
push
es
mov
mov
into
nop
jle
shl
mov
test
jle
test
gs
lea
jle
pop
or
retf
push
or
call
rcr
mov
fmul
popa
das
mov
dec
pop
fst
mov
mov
inc
xchg
xor
cmp
or
or
mov
fwait
and
ror
dec
pop
sub
xor
das
jp
fadd
mov
xchg
jmp
mov
and
xchg
fwait
in
dec
mov
push
icebp
lods
and
push
ret
scas
cdq
or
fisttp
les
dec
sub
fidivr
dec
xchg
lea
hlt
inc
push
mov
repz
sbb
add
jae
sbb
cmp
sar
mov
out
mov
push
mov
cwde
add
in
jnp
mov
sub
je
mulps
push
sub
add
cld
int3
or
push
add
pop
imul
cmp
(bad)
pop
push
push
ss
mov
int
arpl
xchg
out
inc
out
mov
test
addr16
shl
outs
pop
std
mov
scas
inc
sub
push
push
add
xchg
mov
ret
(bad)
or
jmp
sbb
out
sahf
fcomi
adc
dec
mov
sub
xchg
push
pop
inc
arpl
adc
aas
dec
mov
sub
mov
cmc
mov
cmp
les
cld
fisub
pop
mov
pop
sbb
pop
mov
jo
out
loopne
movs
push
mov
mul
pop
jp
lock
fimul
test
fwait
and
jmp
xlat
lahf
ret
adc
xlat
pop
imul
pop
pushf
mov
adc
cwde
int3
pop
sub
cmps
outs
ror
loope
inc
fst
pop
fwait
push
sub
adc
xor
in
fsub
cmp
and
inc
jl
gs
inc
cmp
mov
je
push
dec
mov
jp
push
cdq
out
cmp
fsubr
push
aaa
push
jae
arpl
push
pop
lds
movs
or
int3
adc
mov
push
adc
hlt
mov
pop
push
push
dec
(bad)
daa
mov
cmps
pop
sub
iret
mov
(bad)
ds
fwait
aam
sub
lock
call
jp
mov
je
cmp
adc
dec
xor
or
fisub
mov
adc
cmps
fcom
sbb
add
js
jmp
rcr
xchg
pushf
push
push
sbb
scas
xor
or
loopne
sbb
pop
imul
mov
leave
add
(bad)
imul
xchg
xchg
shr
pop
jbe
sbb
mov
dec
inc
mov
pop
push
pop
mov
cmp
inc
sbb
sbb
mov
retf
ss
rcr
mov
pop
sbb
ja
retf
jp
sbb
(bad)
inc
jb
dec
adc
push
xor
inc
not
and
adc
enter
jmp
fwait
in
jae
inc
(bad)
push
out
or
arpl
nop
push
push
retf
xchg
imul
std
or
lock
mov
icebp
inc
push
sbb
aaa
mov
test
pop
inc
pop
sub
dec
add
call
nop
fmul
test
fwait
sub
stos
mov
pop
mov
or
(bad)
jmp
sbb
mov
inc
stos
rcl
sar
xor
ja
mov
repz
push
arpl
adc
fwait
sbb
inc
sub
mov
repnz
mov
fsubr
aam
add
xchg
add
jg
jbe
nop
push
mov
mov
dec
pop
cdq
in
enter
mov
scas
xchg
ret
xor
mov
rcr
lods
sbb
std
sbb
cmp
add
test
ret
push
mov
mov
push
imul
jnp
jl
mov
(bad)
pop
dec
in
popa
nop
push
rol
(bad)
mov
dec
sub
jp
cs
fnstenv
and
pushf
and
ins
or
add
loope
mov
in
popa
push
ins
dec
retf
adc
jmp
sti
xor
jnp
mov
mov
stc
mov
les
adc
xlat
(bad)
(bad)
pop
push
test
push
jge
cs
inc
or
std
jmp
dec
pop
aad
push
rcr
sub
fsub
adc
test
neg
pop
pop
mov
inc
stos
or
mov
push
les
sub
mov
cli
add
cmp
inc
dec
mov
pop
outs
iret
pop
movs
(bad)
mov
sahf
sar
xor
or
adc
movs
ins
jno
enter
bound
pushf
stos
lock
lods
and
and
sub
pop
stc
mov
pop
fwait
or
sub
cmp
xor
mov
pop
push
fnsave
xor
pop
push
inc
clc
pushf
lahf
dec
and
jmp
fcom
mov
jno
push
aad
xor
push
add
out
lahf
pop
and
lahf
cmp
fiadd
xor
push
cmp
push
jmp
jp
jnp
or
aas
test
xchg
xlat
push
lea
std
sbb
sbb
daa
dec
icebp
int3
sbb
addr16
pop
std
sti
arpl
cmp
and
ins
rcl
fadd
cli
adc
pop
pop
imul
push
push
imul
jg
rcr
inc
or
gs
cmps
xchg
sub
jge
mov
jle
xor
call
scas
retf
stc
mov
xchg
mov
push
mov
ja
loope
sub
adc
or
hlt
test
call
jge
and
jnp
lea
hlt
mov
add
mov
stos
inc
dec
out
int
cmp
(bad)
jl
inc
add
push
ja
add
fldcw
xchg
push
xchg
imul
loopne
pop
and
out
dec
inc
mov
sub
add
loope
inc
or
xor
adc
rol
call
push
in
inc
or
neg
xchg
mov
cmp
mov
clc
cld
lods
retf
in
ds
dec
xor
lock
mov
jne
xlat
mov
mov
fucomp
out
rcr
daa
pop
inc
imul
loope
out
adc
dec
or
or
sub
adc
and
cmp
aam
call
dec
pop
mov
sub
retf
test
jge
fild
dec
mov
add
mov
int3
bound
and
movs
mov
inc
in
push
enter
push
push
loope
or
fcmovnb
pop
es
outs
ret
lahf
jno
xor
and
cmps
sbb
movs
mov
xor
pop
inc
jge
int3
push
shl
stc
mov
out
add
sbb
mov
push
dec
jmp
add
gs
jmp
ss
sub
or
cmps
fsubr
cwde
push
jno
xchg
rol
hlt
pop
stc
adc
cmp
test
aad
add
xchg
inc
sub
cdq
neg
sbb
xor
dec
pop
cli
call
sub
fsub
fist
add
fwait
mul
xchg
cld
adc
dec
cld
sar
outs
lock
xor
ret
pop
push
in
out
popa
push
sub
pop
ja
js
rol
lea
sbb
pop
aad
in
xor
(bad)
xchg
ins
sub
in
fcomi
xor
xchg
int3
jnp
cmp
loopne
pop
daa
xchg
sbb
xor
sbb
xor
sub
scas
lahf
stos
out
or
adc
ret
dec
inc
shl
shr
jl
cli
hlt
fidiv
jae
inc
leave
mov
outs
mov
inc
push
sbb
movs
dec
xchg
inc
pop
call
or
adc
dec
lahf
mul
mov
pop
movs
mov
xlat
int3
sub
sbb
mov
jae
and
jmp
sar
adc
cmps
mov
mov
or
inc
cwde
ror
cli
sbb
inc
es
add
lock
icebp
mov
jge
movs
dec
rcl
inc
ret
mov
push
outs
mov
sbb
jmp
(bad)
fcomp
and
jmp
sub
xor
xor
(bad)
daa
and
ss
repnz
ror
push
or
iret
xchg
fcmovu
addr16
push
cwde
cmps
push
loopne
push
xchg
add
push
data16
push
lods
inc
mov
lods
or
and
retf
mov
inc
nop
jmp
or
fbld
dec
imul
repnz
daa
dec
je
hlt
xchg
ins
adc
cmp
add
cmp
push
mov
jbe
inc
sub
cmc
add
inc
daa
cmp
outs
jnp
add
and
sub
xlat
jmp
push
movs
dec
xchg
dec
or
ret
(bad)
ror
int
push
rcr
jo
xor
add
arpl
mov
pop
jb
mov
cmp
and
pushf
fadd
jmp
call
mov
cmp
cmp
and
mov
fst
push
mov
pop
popa
fwait
test
push
enter
jns
ds
push
popa
int3
mov
je
inc
dec
sbb
iret
xor
scas
aam
mov
inc
push
fist
dec
xchg
push
fs
mov
div
mov
cdq
jle
jb
add
xor
xor
enter
cmp
pop
clc
pushf
jne
mov
cdq
inc
or
jbe
pop
push
sbb
sbb
mov
jmp
out
pop
mov
mov
sbb
or
(bad)
push
(bad)
add
xchg
mov
dec
pushf
push
cmp
cdq
mov
mov
repnz
in
stos
pop
adc
pop
popf
sub
(bad)
out
mov
dec
xor
cmc
shl
mov
scas
jae
push
out
aam
cmp
lods
ret
adc
and
addr16
dec
sbb
add
fimul
jns
cmp
or
jo
pop
cs
rol
in
and
iret
jbe
aam
mov
jnp
stc
loopne
xor
sets
call
and
mov
loopne
xor
push
or
ftst
pop
in
adc
or
js
fsub
cmp
cmp
xchg
jle
loopne
push
cwde
call
int3
inc
aam
fnstcw
mov
in
in
pop
and
int3
fnstsw
ds
cmp
je
dec
(bad)
stos
xor
and
std
sbb
xchg
cmps
cmps
rcr
ret
and
imul
in
xchg
je
jmp
xor
mov
xchg
cmp
rcl
jecxz
mov
jno
sub
pop
cmp
fwait
dec
inc
in
cdq
mov
jns
pop
add
pop
test
fild
sbb
push
aam
hlt
cmps
loopne
test
adc
dec
mov
pop
push
mov
ss
jl
mov
leave
stos
xor
pusha
cmp
fcmovne
inc
cmp
sbb
sbb
mov
cmps
in
cmp
aad
pop
(bad)
rol
mov
in
mov
and
mov
push
fstp
and
leave
and
mov
stc
iret
mov
bound
mov
mov
enter
iret
push
test
jnp
sahf
mov
test
and
stos
jnp
in
pop
jmp
rcr
loopne
(bad)
mov
pop
mov
or
adc
push
mov
sahf
dec
call
jae
iret
sar
jb
pop
add
sbb
mov
mov
lods
loope
loopne
in
xor
ds
inc
imul
push
and
pop
push
fldcw
xor
retf
push
fwait
sub
mov
std
(bad)
int3
pop
push
hlt
jmp
inc
jp
inc
mov
mov
mov
add
aad
push
into
stc
push
inc
dec
out
std
mov
ret
icebp
sbb
xchg
xchg
push
sbb
stos
lock
fdivr
push
pop
mov
pop
and
pop
test
lods
ficom
sbb
mov
not
fimul
imul
sub
push
in
fs
sub
je
xchg
aad
test
xchg
mov
mov
loop
cmps
adc
stc
fadd
jmp
pop
je
call
jae
and
adc
xchg
dec
sahf
rcr
lea
adc
adc
cmp
ins
retf
test
sub
test
ins
iret
xchg
loopne
jnp
call
jno
xor
dec
jns
outs
and
sub
add
push
jb
lods
sbb
push
das
or
adc
xchg
aam
mov
pop
pop
mov
movs
sub
dec
mov
xchg
push
fwait
push
lahf
xchg
xlat
add
lods
jmp
push
push
pop
outs
mov
xchg
aad
jmp
ftst
mov
lahf
dec
sub
addr16
div
mov
jmp
(bad)
sbb
stos
repnz
push
cmps
dec
jmp
js
adc
sbb
js
or
xor
inc
pop
dec
xor
pushf
push
jne
lahf
or
mov
push
inc
in
dec
adc
sbb
pop
dec
scas
push
hlt
inc
scas
call
rcl
outs
and
xchg
inc
out
jne
out
(bad)
dec
cmp
std
ja
add
fwait
ja
xchg
mov
enter
outs
les
scas
shr
sub
outs
pop
add
pop
add
inc
mov
outs
fmul
sbb
mov
int
(bad)
adc
cmp
js
inc
inc
call
pop
xchg
imul
and
cdq
xchg
mov
push
in
pop
mov
mov
icebp
dec
std
cmp
sbb
fwait
and
dec
or
push
stos
pop
std
data16
push
mov
adc
aam
push
mov
sbb
mov
add
icebp
push
popf
imul
push
in
enter
xchg
cld
ficomp
pop
scas
mov
jp
(bad)
arpl
das
xchg
int3
loop
or
sbb
fwait
pop
in
and
call
sub
dec
addr16
xor
sbb
cs
jl
and
jg
sub
loopne
push
gs
mov
test
loopne
pop
fidivr
sub
imul
call
shr
mov
mov
rcr
pop
and
and
rcl
dec
dec
fmulp
xchg
(bad)
test
gs
dec
aaa
mov
(bad)
sbb
cdq
(bad)
pop
mov
dec
rol
pop
shld
in
cmp
ja
mov
cmp
mov
dec
in
in
mov
out
pop
inc
cwde
mov
mov
mov
xor
repnz
(bad)
sbb
push
mov
in
not
sub
push
jo
mov
adc
les
mov
aad
lods
movs
jnp
fs
mov
ins
inc
lock
fsub
sbb
lods
pop
push
jl
repz
cmp
sbb
jo
mov
push
dec
mov
aad
sahf
out
in
call
inc
mov
mov
outs
ss
add
or
push
pushf
mov
xchg
add
pop
sbb
mov
sbb
push
dec
lahf
xlat
add
rcl
xor
ficom
sbb
xor
neg
and
push
sub
into
jb
test
shr
xor
xchg
mov
daa
mov
dec
pusha
inc
push
cmp
add
aaa
pop
shl
push
fwait
ins
mov
jo
loop
xchg
mov
sahf
xchg
mov
in
pop
fwait
mov
(bad)
ins
test
sub
dec
popa
bound
fldenv
xor
xchg
mov
test
mov
inc
add
loope
push
fidiv
mov
jp
cld
add
bswap
popf
neg
fistp
mov
mov
sbb
movs
jae
push
dec
inc
inc
fisub
cdq
lods
lock
pop
nop
mov
mov
fcmovnb
pop
jb
xchg
sbb
sar
cld
mov
sub
ds
(bad)
fsubr
add
in
or
push
inc
pop
mov
sub
add
pop
xor
cmp
inc
push
xor
ins
mov
or
enter
adc
pushf
out
ret
inc
mov
pop
out
pop
bound
js
dec
and
in
push
mov
jg
sub
pusha
das
push
fldenv
inc
shr
pop
je
mov
not
(bad)
repz
xchg
jns
push
out
test
cwde
dec
pop
aaa
lock
jmp
addr16
cmp
mov
gs
inc
xchg
push
jecxz
cmp
dec
ret
ins
xchg
pop
jg
sti
mov
adc
mov
push
ret
out
dec
int3
xor
test
cdq
sbb
jmp
xchg
mov
pushf
dec
cmp
jge
mov
jnp
mov
loopne
out
inc
xchg
dec
fistp
cs
pop
push
xchg
fcomip
idiv
int3
add
push
mov
jnp
popf
fmul
push
inc
out
idiv
mov
adc
and
cmps
adc
shl
imul
or
xor
outs
mov
xor
and
xchg
int
imul
jb
jle
jmp
imul
in
lods
xor
lea
sbb
mov
dec
sbb
and
xor
sbb
repnz
mov
or
fxch
pop
lock
stos
fimul
rdtsc
adc
or
sub
mov
cmp
popa
repz
in
sbb
inc
pop
lods
adc
adc
sub
dec
pop
out
fmul
cmp
cwde
adc
pop
push
aaa
mov
sbb
pop
popf
or
push
dec
loope
fcomp
sti
add
mov
pop
pop
xchg
aaa
fstp
test
es
push
aaa
xchg
aam
adc
mov
dec
mov
mov
dec
dec
cwde
fst
or
test
into
out
adc
dec
jmp
add
jo
stos
xor
pusha
sub
mov
pop
aas
lods
mov
dec
pop
imul
xchg
mov
shr
sar
push
adc
sub
mov
rcl
cmp
mov
jge
pop
fld
push
push
sub
or
inc
gs
out
shl
jne
inc
mov
movs
xor
sub
mov
add
push
stc
and
xchg
fnsave
sbb
inc
push
fcom
jle
jmp
call
sbb
fwait
mov
loope
jmp
jge
push
cmp
pop
xchg
data16
int3
es
xchg
adc
bound
neg
lods
imul
iret
jge
fucomi
sbb
nop
inc
std
jb
inc
sbb
jae
xor
daa
ror
loop
xor
mov
test
sub
cmp
pop
imul
arpl
test
imul
stc
push
movs
ins
inc
(bad)
sbb
je
inc
mov
xchg
call
jns
sub
scas
in
jp
add
sbb
sub
fdivr
test
pop
fidiv
arpl
test
sub
ret
lahf
jg
test
inc
aas
outs
out
cmp
fidiv
nop
call
sbb
mov
shr
and
shl
sub
dec
stc
cwde
pop
lods
lock
xchg
sbb
ror
nop
gs
pop
call
std
dec
mov
aad
ja
sbb
js
ret
sub
add
jno
jno
clc
out
pop
mov
ins
push
mov
push
mov
cld
inc
nop
sbb
outs
xor
dec
mov
gs
leave
cmc
cmps
lods
mov
out
sar
mov
(bad)
mov
retf
cmp
adc
and
repnz
push
test
(bad)
dec
aad
daa
sub
inc
(bad)
mov
jecxz
aam
jne
pop
pop
push
lods
adc
test
mov
popf
dec
mov
int3
movs
cdq
or
cmp
cwde
inc
add
jbe
iret
test
stos
adc
pusha
icebp
mov
loop
fidiv
into
call
push
(bad)
in
sbb
mov
mov
les
jmp
push
xchg
outs
js
stos
jbe
mov
xlat
shr
fldl2e
js
mov
dec
push
push
inc
xor
(bad)
int
pop
cmps
repz
call
(bad)
and
(bad)
je
es
(bad)
sar
fst
fwait
cmp
mov
je
std
pusha
sbb
popa
jae
sub
fisttp
sub
gs
inc
ss
rcl
(bad)
adc
in
fcmovnbe
jecxz
inc
nop
xchg
call
mov
stc
loopne
iret
bound
std
add
pop
stos
adc
ds
movs
in
pop
mov
cmp
cmps
mov
xchg
test
add
sub
shl
ja
jnp
shl
ror
cmc
xchg
push
dec
or
cwde
sbb
pop
push
and
inc
cmc
xchg
pop
inc
les
(bad)
fcom
inc
cmps
inc
test
std
mov
mov
or
sub
xchg
icebp
dec
test
dec
adc
in
inc
cld
int
in
iret
fisubr
loop
jl
and
data16
add
xchg
outs
sub
fist
xor
xchg
rol
jge
sahf
mov
and
adc
sbb
jmp
jp
dec
aam
add
xchg
movs
mov
push
sbb
fidiv
push
push
cmp
rcr
xchg
jae
xor
test
pop
jle
das
pop
xor
xor
adc
popf
jl
xchg
call
cld
mov
fst
rcr
retf
loopne
push
xor
dec
or
in
loopne
loop
arpl
or
inc
lock
in
aad
ins
loop
push
or
mov
mov
cmp
call
cmp
sar
mov
inc
push
xor
loop
dec
and
idiv
xor
push
pop
dec
jnp
sub
adc
fs
(bad)
xor
mov
fwait
rcl
pop
add
inc
jmp
cmp
in
sub
xor
enter
in
scas
stos
mov
add
fldenv
stc
pop
or
inc
cmps
cmp
sbb
jbe
ins
mov
ficom
pop
(bad)
jmp
inc
js
inc
dec
mov
mov
or
xor
or
fs
mov
fisttp
dec
ja
fsubr
xor
mov
xchg
sub
push
push
xchg
jo
or
pop
mov
dec
movs
cmp
pop
jae
jbe
call
cdq
jl
xchg
sub
mov
jmp
mov
pop
pop
jge
or
pop
add
push
inc
inc
xor
aaa
inc
adc
mov
adc
cmp
and
jmp
ret
test
movs
sbb
inc
jbe
add
xor
pop
or
and
dec
xchg
mov
sti
push
pop
mov
jnp
dec
mov
push
mov
ror
jns
xchg
sti
icebp
xor
pop
mov
inc
inc
cdq
bound
add
jno
jnp
fist
adc
add
sbb
push
jl
fcmovu
mov
cli
pop
(bad)
loopne
mov
adc
test
sbb
pop
dec
xchg
gs
pop
mov
push
adc
add
dec
mov
das
test
cld
in
cmp
xor
mov
dec
sbb
push
inc
mov
or
leave
enter
mov
gs
(bad)
repnz
repz
test
mov
fcmovu
je
or
push
retf
jl
cmp
arpl
sti
dec
into
pop
stos
(bad)
aaa
inc
dec
sub
push
sbb
pushf
xor
ja
mov
jnp
or
push
xor
xchg
xor
push
sbb
adc
not
sbb
(bad)
fidiv
or
sahf
mov
jo
aam
iret
out
xchg
mov
out
jp
adc
mov
fdivr
mov
std
in
dec
out
dec
and
in
outs
ret
sbb
mov
push
in
and
movs
adc
mov
stc
and
lock
nop
loope
(bad)
repz
adc
adc
and
sbb
xor
push
jl
pop
push
les
push
pop
or
js
push
inc
pop
jle
movs
pop
xchg
imul
loope
nop
retf
call
jge
lea
cmp
pop
inc
push
xchg
sbb
push
jmp
sub
dec
ficom
push
or
and
inc
pop
retf
jmp
pop
mov
cmp
jge
sub
ss
sbb
xor
or
sub
(bad)
jno
(bad)
stos
nop
mov
dec
cs
cmp
xchg
cmp
shr
pop
leave
lods
sub
std
sar
repz
ins
jnp
sbb
add
mov
ror
dec
adc
fcom
cmp
test
mov
ret
mov
dec
jecxz
mov
das
icebp
nop
outs
add
mov
mov
movs
dec
rol
rol
or
rcl
push
imul
lods
aam
ds
in
sbb
rep
sbb
es
and
popf
out
sub
jle
loop
rol
and
inc
cs
dec
retf
mov
xchg
gs
rol
loop
ffree
aad
pop
pop
mov
outs
rcl
mov
daa
fldenv
lods
mov
add
xchg
push
out
push
add
fwait
xchg
inc
(bad)
outs
cmps
xchg
dec
ja
cmp
loopne
dec
into
mov
cmps
sub
pop
loop
jmp
lods
xor
(bad)
loop
mov
adc
sbb
(bad)
pop
mov
dec
dec
ins
fadd
jbe
in
test
xor
in
xchg
adc
mov
(bad)
pop
add
rcl
xor
popf
dec
in
lds
into
pop
js
cwde
ss
les
mov
les
test
test
aaa
xchg
lea
loope
ss
(bad)
outs
ins
and
rol
pushf
(bad)
aaa
std
push
jge
out
outs
mov
and
stc
sub
loop
and
xchg
jl
cdq
xlat
dec
mov
cmps
jae
mov
call
pop
aaa
mov
mov
sahf
add
pusha
jmp
stos
shl
mov
or
inc
mov
pop
cwde
jno
dec
jmp
ins
hlt
sbb
addr16
cmps
pop
mov
inc
pop
xchg
shr
or
sub
and
out
dec
adc
lahf
imul
sti
push
push
inc
jmp
sbb
inc
inc
pop
aad
mov
xchg
dec
jbe
or
inc
fs
cs
xor
data16
in
aaa
ds
inc
loopne
xor
sbb
push
rcr
ror
push
adc
rcl
inc
mov
ins
mov
dec
and
pop
cmp
(bad)
pop
and
sbb
jmp
adc
xor
and
enter
cdq
push
jp
mov
mov
in
cmp
xchg
sar
inc
push
clc
mov
mov
adc
inc
ins
repnz
xor
mov
mov
push
int3
pushf
cmps
sub
push
add
xor
mov
cdq
into
std
nop
mov
xor
sbb
sub
fcom
add
dec
xchg
pop
mov
stos
push
mov
nop
(bad)
ror
dec
das
frstor
push
mov
push
(bad)
loope
mov
int
mov
cwde
adc
lock
movs
ins
shl
pop
dec
jnp
sbb
inc
ret
sub
inc
pop
gs
add
sub
xchg
dec
icebp
stos
pop
leave
std
fmul
push
out
pop
shl
das
cmp
lods
mov
test
out
mov
adc
dec
cmc
mov
hlt
sub
sub
mov
ficom
clc
inc
fdiv
jae
popf
ficomp
aad
cwde
stos
add
aaa
fld
mov
sbb
pop
jle
xchg
stc
sub
push
cs
fidivr
sub
adc
mov
sbb
push
pop
and
adc
imul
jnp
jo
pop
fisubr
dec
mov
push
push
jb
lods
mov
ja
jge
mov
and
xor
test
stos
hlt
inc
dec
pop
mov
push
jge
jle
in
in
add
pop
mov
xlat
out
cmp
mov
cmp
push
xor
push
push
ror
push
fild
push
cwde
movs
lea
xchg
scas
and
jno
int3
cwde
xor
js
stos
lock
cdq
sbb
adc
into
mov
cmp
or
xchg
xchg
ret
sub
sahf
push
fcmovnu
jmp
repnz
add
jo
lock
cmp
loop
ds
inc
jle
mov
jae
or
cmp
sbb
xor
shr
popa
mov
xor
jae
xor
sbb
mov
js
push
jo
sbb
fdivr
cmp
adc
dec
mov
les
rol
pop
(bad)
add
cmps
dec
es
fcomp
push
jp
mov
or
push
movs
fcomp
retf
xor
mov
jae
push
std
cmp
mov
jbe
int3
push
cli
cmps
test
fstp
cs
cs
xchg
add
rcr
or
clc
addr16
aad
scas
mov
pop
hlt
ret
mov
push
lea
fdecstp
sub
pop
iret
xchg
outs
rol
or
pop
pop
cmp
or
mov
loopne
out
mov
or
loopne
enter
xchg
cmp
iret
daa
sbb
in
lds
mov
jmp
inc
fdiv
dec
neg
xchg
sub
(bad)
cmp
nop
scas
loope
xor
xchg
fisttp
or
fst
out
sbb
adc
in
les
dec
push
sub
add
fsub
add
mov
lods
sti
xchg
fucomip
dec
fstp
aaa
adc
int3
fwait
and
fidiv
daa
cmc
dec
xor
sub
jmp
pop
push
xchg
inc
out
sahf
call
fild
fnsave
retf
pop
xchg
mov
cld
xor
fwait
mov
cmp
test
xchg
xor
mov
in
cmp
(bad)
out
dec
jg
sbb
test
leave
addr16
xchg
sub
push
shl
imul
mov
std
dec
jae
mov
cmp
cmp
xchg
ja
es
addr16
shl
out
nop
inc
call
or
aas
(bad)
mov
out
xchg
sar
inc
neg
pop
mov
sahf
mov
ret
push
fcmovne
adc
pop
push
pop
xchg
sbb
stos
ds
dec
std
dec
pop
stc
fadd
gs
xor
lea
mov
xchg
mov
stos
ins
(bad)
mov
xchg
das
mov
push
cdq
dec
add
xchg
jno
nop
dec
sbb
(bad)
sti
cmps
jbe
stos
lock
mov
fwait
add
and
gs
push
aam
movs
popa
push
ja
xchg
jp
mov
les
push
ret
cmp
pop
sub
addr16
pop
jno
sub
add
aas
int
sbb
adc
imul
mov
arpl
mov
fcmovbe
adc
jecxz
mov
cmp
sbb
in
sub
daa
xchg
adc
and
loopne
or
xchg
sbb
and
xchg
cmc
movs
push
dec
rcr
out
int
cmps
push
adc
jnp
cmp
pop
sub
inc
push
mov
(bad)
pop
cmc
lahf
in
fadd
int3
nop
les
xor
stos
test
lahf
dec
fistp
adc
lods
add
cmp
in
add
or
add
jmp
es
div
shr
push
repnz
sbb
sbb
inc
and
(bad)
dec
retf
retf
popa
xlat
or
lods
daa
jno
xor
popf
jg
mov
mov
retf
ret
push
inc
jnp
cs
xchg
int
pop
leave
mov
addr16
jmp
push
test
int3
jo
pop
rcl
and
iret
xlat
int
dec
int3
sbb
mov
push
pop
mov
push
int3
xor
stos
int3
shl
rcl
jne
add
inc
or
dec
mov
dec
sbb
fwait
imul
mov
xlat
add
pop
dec
ins
cwde
push
sbb
mov
sbb
inc
mov
dec
cmp
mov
je
inc
jbe
push
adc
mov
sub
enter
mov
bound
xlat
mov
cmp
xchg
pusha
dec
xchg
xchg
cmps
aam
imul
pop
jg
es
mov
mov
xchg
mov
nop
test
xchg
push
inc
dec
test
ror
fs
inc
adc
sbb
cs
(bad)
and
jle
addr16
pop
pop
push
gs
xchg
(bad)
(bad)
ss
pop
icebp
adc
dec
ret
cmp
(bad)
std
aad
inc
dec
push
and
out
pop
popa
and
xchg
ret
mov
loopne
stos
sub
xor
push
inc
pop
nop
arpl
push
add
cmp
jge
cmps
mov
mov
adc
jmp
mov
pop
test
sbb
jge
icebp
mov
and
addr16
aas
push
sbb
out
push
adc
pusha
inc
mov
sbb
or
jp
mov
retf
loope
jle
dec
fbld
mov
sub
fs
or
div
sub
mov
das
cmp
sahf
in
mov
jmp
aaa
and
jge
fld
jnp
iret
(bad)
mov
jp
in
(bad)
std
mov
rcl
sub
inc
das
std
mul
push
btr
in
dec
adc
sbb
and
dec
sub
gs
sub
dec
push
lea
jp
mov
mov
test
int3
xchg
inc
jge
mov
jmp
fmul
xchg
pop
dec
test
inc
loope
out
push
mov
fs
test
sbb
sbb
fidivr
es
inc
cmc
adc
cwde
mov
popf
or
gs
fidivr
stos
push
rcr
jo
or
repz
(bad)
or
(bad)
and
push
mov
adc
(bad)
lock
push
jae
pop
pushf
push
mov
xchg
jns
dec
sbb
lods
fstp
aad
adc
adc
mov
or
xlat
push
fidiv
jns
inc
fdiv
inc
add
mov
mov
inc
push
iret
sbb
mov
push
push
rol
(bad)
in
jmp
pop
xor
or
aaa
loopne
or
mov
les
pop
jp
pop
es
and
xor
les
mov
mov
pop
lods
mov
lock
call
xor
rcr
and
inc
push
cmp
sahf
or
(bad)
clc
addr16
fimul
jg
mov
mov
lods
out
pop
jo
mov
retf
push
pop
test
rcl
sti
push
adc
pop
arpl
ja
pop
xlat
cmps
sbb
sub
(bad)
std
lods
inc
ins
ficom
and
out
sub
(bad)
pop
shl
inc
imul
push
sbb
cmp
aam
mov
xchg
lea
aam
pop
xor
xor
ins
test
adc
ds
push
dec
and
ins
and
xchg
inc
aaa
dec
cmps
ficom
push
in
ret
jnp
sub
dec
xchg
js
hlt
jne
shl
std
ins
daa
lea
cwde
lahf
popa
xlat
fimul
fdivr
lock
sbb
push
or
mov
mov
stc
test
pop
shl
or
(bad)
cmc
call
cmp
repz
(bad)
call
pop
out
icebp
ins
sub
and
adc
icebp
ret
push
mov
xchg
cld
and
mov
pop
dec
inc
push
inc
outs
mov
jb
mov
mov
add
add
mov
and
imul
sub
jp
ins
sbb
dec
or
sar
mov
hlt
imul
push
and
scas
je
sbb
loope
add
lds
sbb
mov
mov
mov
mov
in
cdq
adc
inc
in
push
int
in
pop
sub
adc
ins
rcr
xor
mov
xor
mov
out
and
out
push
ins
mov
push
jne
and
das
cmc
mov
bound
ja
fdiv
mov
pop
pop
pushf
mov
hlt
scas
cmp
push
dec
adc
dec
mov
adc
and
shl
(bad)
gs
lods
inc
xor
sub
inc
mov
ret
ja
lods
xchg
add
lahf
mov
rol
mov
pop
rcl
movs
js
rcl
and
fstp
into
sar
jmp
sbb
lods
push
or
xchg
pop
mov
ss
mov
xlat
mov
enter
xchg
xor
and
ja
rcl
ins
jmp
push
push
sub
or
rcr
pop
push
sub
inc
sbb
enter
frndint
push
mov
fadd
mov
fimul
push
sub
xor
hlt
mov
scas
pop
nop
pop
mov
(bad)
push
dec
jmp
aaa
mov
inc
xchg
shl
inc
adc
outs
or
dec
xor
gs
ja
inc
mov
cmps
adc
call
out
les
xor
and
pop
daa
sub
std
fstp
jne
mov
pop
xor
retf
or
xchg
hlt
adc
cmp
push
icebp
sbb
or
cmc
sbb
push
icebp
dec
(bad)
xchg
pop
int
js
dec
xlat
ficomp
pop
sub
dec
mov
xor
fimul
lahf
ret
mov
loop
jno
or
inc
mov
push
cwde
dec
or
pop
jl
mov
pop
jb
add
cmp
les
inc
sbb
inc
pop
jb
lods
sbb
jmp
mov
nop
lods
or
ja
dec
push
adc
mov
(bad)
dec
adc
adc
in
add
mov
push
cli
(bad)
dec
stos
(bad)
xor
jae
popa
push
jo
push
push
and
cmp
scas
mov
neg
and
push
dec
fnsave
int
cdq
push
loop
push
loopne
and
les
pop
lods
inc
push
fs
mov
out
xor
xor
and
cmp
lds
(bad)
fwait
retf
shr
stos
imul
dec
pop
setle
aaa
mov
mov
in
stc
inc
jbe
iret
sub
push
jbe
stos
sbb
xor
mov
adc
enter
ins
aam
cmc
cmp
dec
sbb
rcr
(bad)
xor
mov
dec
jg
nop
(bad)
movs
test
sub
add
jbe
and
xchg
jo
dec
ret
mov
push
xchg
jns
dec
add
rcl
fdivr
push
cmps
or
loope
(bad)
xchg
xor
and
scas
mov
fs
inc
(bad)
out
retf
pushf
scas
and
pop
shl
adc
cs
cli
dec
and
shr
sub
hlt
dec
popa
fcom
push
mov
hlt
je
pop
jp
adc
pushf
push
xchg
cmc
ds
and
dec
push
(bad)
and
cmps
loope
or
cld
(bad)
push
hlt
and
push
adc
pop
or
imul
ds
loopne
adc
push
(bad)
repz
inc
cmc
out
shr
xchg
mov
mov
sbb
sbb
pop
mov
adc
(bad)
or
pop
mov
stc
adc
sar
jge
sbb
lahf
and
(bad)
jl
pusha
rcl
fldcw
mov
pop
enter
inc
and
and
lds
cmp
cmp
and
mov
xor
dec
push
xor
daa
nop
add
fcom
int3
xchg
and
or
xor
add
rcr
out
and
cmp
add
stos
add
fldcw
jle
jnp
pop
out
ficom
xlat
scas
call
lahf
enter
sbb
jno
mov
pop
add
out
scas
pop
fdivr
dec
xor
and
and
dec
xchg
shl
pop
sub
jmp
jae
add
mov
mov
push
ds
mov
iret
jp
loope
mov
mov
aam
and
jbe
add
dec
dec
lar
jbe
cmp
fldenv
int3
lahf
jnp
popa
add
imul
pop
mov
inc
test
mov
movs
sub
mov
cmc
mov
inc
les
rcl
es
ret
stos
cs
out
inc
stc
inc
pop
aaa
xchg
not
or
int3
cvtdq2ps
push
imul
xlat
in
cwde
pop
mov
jb
cli
xor
loope
mov
pop
fild
idiv
div
call
arpl
std
xor
data16
xchg
adc
add
mov
sub
cmp
pop
ja
in
repnz
fcmovbe
inc
dec
dec
add
xor
fisttp
cmps
mov
inc
shr
loopne
mul
sub
pmullw
sub
clc
int3
add
push
dec
pusha
and
push
test
xlat
and
pop
retf
sbb
imul
imul
xlat
ds
popa
in
sub
cli
dec
(bad)
je
adc
inc
shl
test
xchg
cdq
sbb
cmp
mov
push
pop
fnstenv
mov
sbb
loop
mov
mov
cld
nop
ret
sub
adc
and
ja
xchg
push
loope
aas
nop
xchg
fiadd
sbb
sub
mov
push
mov
in
xlat
out
lods
shl
mov
dec
xchg
push
xchg
cli
jae
scas
sub
or
cmp
adc
jg
movs
mov
int3
jmp
lods
push
iret
fidiv
out
sti
xchg
and
mov
pop
mov
out
adc
jb
cmp
mov
daa
and
repnz
lock
fdivr
fnclex
sahf
std
int3
sbb
ror
mov
push
adc
lock
pop
ds
scas
add
std
inc
sub
icebp
(bad)
adc
cld
add
and
repz
xchg
pop
nop
cdq
idiv
retf
mov
ins
mov
ret
push
sub
cmp
sub
scas
mov
sahf
inc
(bad)
inc
hlt
push
mov
pop
test
lods
fs
sub
movs
cs
(bad)
mov
add
mov
addr16
mov
mov
jnp
push
pop
mov
inc
scas
mov
push
lds
and
mov
dec
or
sbb
int
mov
fwait
push
pop
xlat
or
mov
imul
fisttp
loopne
movs
add
sub
or
pop
mov
iret
lods
imul
jle
shl
xchg
ret
sbb
std
or
adc
pop
mov
fistp
clc
mov
xchg
sahf
adc
mov
inc
or
cmps
or
pop
aas
lods
dec
pop
xchg
cmp
lods
and
aam
pushf
push
in
dec
cli
movs
push
cld
inc
cmc
push
ret
or
xlat
ins
push
cs
push
cmp
shr
sub
imul
lds
push
cdq
mov
faddp
mov
ja
mov
pop
pop
cwde
mov
test
retf
shl
inc
pop
push
cdq
cdq
or
sahf
mov
ror
mov
sbb
dec
mov
inc
fbstp
and
jnp
int
mov
or
inc
xchg
daa
aad
mov
jmp
(bad)
or
ret
imul
daa
dec
mov
cdq
adc
and
ins
adc
aaa
inc
icebp
sub
cdq
repz
fcom
add
aad
rcr
add
jle
cs
retf
js
mov
pop
sub
pushf
push
aas
or
loope
aaa
sub
(bad)
jmp
push
fs
xor
mov
xlat
sub
mov
jae
lods
mov
jae
test
mov
fisub
and
push
push
pop
push
shr
(bad)
loop
rol
test
xlat
fld
ins
cmps
pop
mov
es
xchg
popa
enter
enter
fisub
jae
stc
pop
jnp
push
pusha
sub
bound
nop
ss
cdq
sahf
or
xlat
add
out
std
std
fwait
pushf
pop
push
jne
loopne
cdq
(bad)
sub
jge
aad
stc
sbb
or
xchg
mov
shl
lods
xor
inc
pop
mov
test
outs
push
ret
in
int3
cmove
scas
loop
mov
ins
repnz
and
int3
fwait
outs
and
and
cdq
xchg
addr16
in
fadd
inc
mov
fldenv
pop
xchg
cmc
adc
mov
lods
jle
iret
stc
sbb
jmp
sub
fidiv
jg
push
jne
out
cmps
cwde
enter
jnp
add
dec
add
jae
cmp
in
test
mov
mov
sbb
bound
scas
push
push
outs
mov
cmps
mov
(bad)
pop
cli
ficom
ss
aad
lock
fstp
pop
mov
sbb
enter
or
xchg
shl
std
cmp
sbb
xchg
cmp
xlat
pop
inc
inc
(bad)
clc
pop
jb
jge
or
popf
sub
jbe
cmp
fucomip
push
test
adc
lahf
lahf
or
fwait
sub
(bad)
js
sbb
add
clc
test
dec
in
mov
mov
mov
loop
dec
push
sti
dec
and
mov
fild
push
xchg
js
mov
fcomp
inc
mov
stos
sub
mov
or
jo
cld
ror
inc
frstor
mov
loope
aam
dec
fldcw
sete
je
test
mov
add
pop
fwait
push
xchg
add
mov
fistp
dec
je
out
popa
adc
and
dec
movs
aaa
bound
xlat
imul
inc
adc
push
and
dec
ret
mov
or
xor
out
adc
mov
jno
mov
lea
add
sub
sbb
(bad)
pop
inc
daa
cdq
sbb
add
mov
sbb
xchg
fst
mov
xchg
add
jmp
scas
xchg
imul
lods
sbb
jmp
fnstenv
sub
and
mov
in
lahf
jmp
dec
jo
pusha
icebp
mov
jns
sahf
and
jae
xchg
ds
inc
call
fistp
or
hlt
mov
lods
mov
arpl
inc
mov
lock
lods
jle
dec
add
dec
and
movs
scas
xor
retf
inc
xchg
shl
xor
mov
cmp
mov
cmp
out
cmp
push
adc
repnz
imul
rcr
dec
xchg
push
or
jg
mov
lahf
popf
inc
inc
(bad)
xchg
fimul
mov
fs
popf
mov
fld
aam
loopne
addr16
fisub
xor
jl
pop
adc
pushf
sbb
pop
rol
or
stos
aam
pop
pop
xor
inc
sub
pop
add
retf
cmp
mov
and
or
or
repnz
(bad)
(bad)
push
pop
add
mov
je
jnp
xchg
pop
mov
ins
pop
push
cld
sub
xchg
(bad)
fcom
sub
mov
add
xchg
xchg
mov
jmp
sub
int
pop
mov
push
sahf
mov
cdq
push
dec
adc
daa
push
or
out
into
and
ja
mov
jbe
sbb
mov
xchg
dec
popa
mov
or
int
sub
mov
popa
cs
sub
out
enter
or
ins
sbb
pop
sub
push
sbb
mov
es
iret
call
int3
ficomp
add
movs
fwait
inc
push
pop
mov
dec
das
dec
xor
pusha
pop
in
add
dec
dec
imul
mov
pop
cmp
out
pop
ja
pop
lds
inc
dec
jmp
xor
jbe
jnp
push
mov
stos
pop
pop
cwde
neg
pop
jmp
jbe
aaa
mov
dec
jge
fstp
cmc
ins
sub
lods
pushf
pop
rcl
int3
clc
jbe
stc
dec
cmps
aam
dec
dec
mov
push
dec
pop
movs
xor
lea
adc
dec
and
inc
add
test
sub
aas
cdq
popf
pop
sub
adc
and
push
xor
into
out
push
push
in
and
xchg
push
int3
fs
lods
mov
call
addr16
vmovdqu
imul
mov
out
cmp
mov
pop
dec
shl
jmp
(bad)
push
loope
xor
popa
mov
lods
add
(bad)
mov
adc
and
jb
out
out
fist
call
cs
movs
cmp
sub
fwait
push
adc
xor
add
push
pop
adc
jge
xor
jecxz
cwde
dec
stos
dec
outs
fcmovbe
ror
or
add
inc
sahf
aam
sub
imul
sahf
lds
push
int
fucomi
test
mov
dec
xchg
adc
xor
js
adc
sub
call
addr16
mov
dec
dec
mov
cmps
lea
out
imul
in
lahf
mov
into
mov
jnp
mov
jmp
ds
movs
mov
push
(bad)
(bad)
lods
sbb
in
or
mov
dec
das
std
rol
mov
push
into
retf
cwde
ja
mov
mov
and
pop
pop
mov
push
pop
push
fwait
jmp
out
push
inc
inc
fiadd
push
or
inc
pop
sub
mov
data16
lods
in
or
xchg
pop
fsub
inc
jle
(bad)
pusha
sbb
call
fidivr
adc
(bad)
adc
mov
sbb
add
inc
or
inc
sub
xchg
xchg
out
and
ror
or
dec
and
xlat
mov
(bad)
or
lods
cmp
out
inc
sti
out
inc
mov
daa
inc
(bad)
pushf
xlat
pop
sti
pop
cmp
xchg
lods
loope
repnz
jl
rcr
or
pand
mov
dec
xchg
mov
out
jbe
fwait
inc
sub
inc
fprem1
push
sti
jns
ret
inc
pop
outs
or
mov
mov
ret
and
or
dec
jge
pop
call
jo
sbb
adc
pop
add
ret
mul
pop
ins
push
sub
ins
(bad)
mov
(bad)
cmp
jecxz
pop
sub
outs
adc
inc
xchg
xlat
lea
pop
push
add
enter
std
outs
inc
cwde
inc
das
mov
lea
lods
dec
adc
loopne
mov
xchg
adc
popa
push
leave
sbb
sbb
out
sub
in
jge
dec
jmp
rcr
sub
loopne
cwde
push
repnz
imul
loopne
out
sub
shl
xchg
pop
sub
pusha
loopne
sub
xor
mov
push
fidiv
push
(bad)
xor
push
lods
jo
push
fild
cmp
cld
les
test
sbb
inc
lods
mov
adc
fwait
xchg
pop
xchg
push
aam
dec
iret
push
and
(bad)
cwde
push
out
loope
jle
adc
les
jmp
cmps
ret
es
pop
ins
jno
fstp
mov
dec
fstp
gs
cld
inc
mov
sti
ins
and
or
mov
pop
mov
adc
cmp
mov
(bad)
loop
pop
(bad)
call
dec
into
neg
mov
sub
(bad)
push
rcl
pop
adc
mov
xchg
xlat
pop
lock
push
std
jb
jns
fmul
js
mov
cdq
loopne
call
ja
bound
outs
mov
mov
mov
test
mov
(bad)
daa
test
or
xchg
scas
sub
pop
xlat
out
(bad)
push
pop
or
lods
icebp
(bad)
adc
mul
ret
(bad)
and
stc
xchg
xchg
cwde
pop
aam
xlat
pop
(bad)
fmul
dec
call
pop
push
mov
cmps
jp
pop
mov
sbb
dec
lds
sub
ins
jnp
and
add
push
sub
loopne
mov
dec
and
(bad)
fcmovnu
pop
scas
hlt
adc
clc
sahf
cmc
out
cmp
pop
xchg
jbe
sahf
outs
test
dec
sahf
push
not
push
mov
pop
or
fs
inc
mov
pop
xchg
sub
mov
aad
dec
clc
sar
scas
fcmovnb
into
pop
adc
popa
(bad)
aam
or
fldenv
pop
pop
ins
cmc
in
push
aaa
jmp
jo
pusha
inc
or
(bad)
cmp
xor
xchg
adc
push
imul
sbb
and
sbb
int3
call
(bad)
jno
push
(bad)
addr16
mov
(bad)
jmp
arpl
sti
pop
dec
or
pop
pushf
add
dec
mov
adc
popf
xchg
xor
pusha
sub
std
sbb
push
ss
movs
lods
jae
and
ss
add
out
mov
cmp
xchg
jmp
aas
cmp
cs
inc
xor
fst
or
pop
cmp
arpl
iret
xor
and
xchg
idiv
sub
(bad)
sub
int3
fidiv
lods
rcl
sub
sub
xchg
jbe
(bad)
ins
mov
and
and
std
xlat
xor
dec
lock
mov
mov
fiadd
mov
or
mul
push
sub
data16
fnstcw
nop
pusha
sbb
mov
rol
jno
sbb
cmp
push
outs
pushf
pop
pop
fcmovne
xor
push
int
add
mov
push
aad
test
les
and
fsubr
pop
mov
shl
push
loopne
in
mul
in
push
dec
dec
pop
jl
add
lahf
cmp
cmp
pop
outs
xchg
push
enter
pop
add
rcr
add
xor
push
or
add
pop
inc
add
mov
jbe
push
add
mov
lea
pop
scas
or
int
das
mov
dec
jae
iret
sub
aas
in
and
es
and
fdiv
movs
pop
sbb
pop
cmp
add
xchg
int3
not
jmp
xchg
mov
call
stc
mov
aad
lea
push
push
pop
iret
pop
lds
fiadd
loop
or
(bad)
addr16
cmp
out
std
test
push
in
jecxz
dec
cwde
mov
out
mov
cmp
idiv
test
cld
add
inc
dec
aas
and
inc
sub
enter
jecxz
cli
mov
js
sub
and
int3
fist
push
fidivr
xchg
das
test
and
add
adc
push
mov
aam
(bad)
add
adc
test
dec
jg
loopne
pop
movs
clc
inc
or
leave
into
add
mov
popf
push
dec
call
stos
repz
clc
movs
xor
hlt
xor
int3
jmp
sub
mov
aaa
cmp
and
es
xchg
pop
ins
aam
sbb
jnp
scas
aam
nop
repz
cmp
sbb
xchg
add
stc
mov
aam
push
pop
mov
and
std
adc
fdivr
xor
sub
loop
aam
adc
icebp
adc
push
and
fcmovnb
xor
mov
cmps
test
aaa
mov
mov
lea
and
pushf
test
idiv
call
push
dec
cld
mov
jl
test
sti
addr16
adc
pusha
push
lock
daa
sahf
or
(bad)
mov
mov
inc
or
stos
nop
dec
fsub
in
in
fcom
push
repnz
inc
pushf
aas
xchg
repz
es
imul
mov
pop
ret
jmp
das
popf
cli
cmp
sub
adc
mov
dec
jmp
inc
loopne
mov
push
mov
sub
lods
cmp
data16
mov
sahf
or
jbe
sub
outs
or
cmp
sbb
cli
pop
adc
pop
das
ror
jno
mov
jbe
mov
sub
idiv
xor
push
hlt
fidiv
xchg
stc
add
loopne
mov
mov
dec
test
mov
stos
popa
push
inc
jbe
sbb
add
xchg
inc
inc
sbb
(bad)
xchg
and
mov
stos
shl
mov
or
sbb
mov
sbb
and
jo
jmp
(bad)
mov
cmp
pop
jmp
rcl
cmc
les
mov
aam
mov
cmp
out
add
fnstsw
std
retf
repz
call
inc
mov
addr16
sbb
jle
stos
cmps
pop
jo
cs
outs
je
xor
sub
dec
xchg
xor
jle
loope
adc
hlt
jge
xchg
fcomp
icebp
xchg
sar
jno
jo
addr16
cmc
ja
xchg
jg
rcl
add
cmp
gs
pop
xchg
rol
adc
outs
mov
mov
outs
mov
rol
pop
loope
hlt
jecxz
jb
nop
xchg
fdiv
ficom
loopne
stos
cs
pop
cmp
xchg
popf
jbe
rol
inc
fldenv
pop
aaa
out
test
sbb
push
jnp
cmp
jnp
jbe
sub
(bad)
jle
mov
cdq
call
(bad)
push
xchg
inc
push
nop
sahf
aad
xchg
call
xor
lahf
cmp
sbb
jmp
push
popf
arpl
loope
sti
inc
adc
aaa
mov
cmps
out
nop
jp
xor
cmp
aam
pop
push
arpl
dec
cmp
scas
retf
ds
xor
mov
mov
or
cld
out
hlt
mov
cmp
iret
aas
mov
sub
cmp
out
pop
call
out
push
xchg
imul
add
(bad)
sti
(bad)
push
cmp
cdq
loopne
mov
dec
and
mov
sbb
out
sbb
ret
adc
push
je
ja
pop
(bad)
pop
out
ins
scas
xlat
pop
ror
sti
fmul
and
sar
pop
(bad)
cwde
aas
popf
cmp
and
mov
add
(bad)
lods
in
pushf
cld
cmp
mov
xlat
add
cmp
pop
xchg
add
jb
pop
bound
loop
and
cmp
(bad)
(bad)
mov
jb
inc
rol
imul
dec
pop
mov
bound
sub
(bad)
lock
xor
aad
je
push
stc
xor
repz
cmp
mov
push
(bad)
push
xchg
dec
inc
cld
out
inc
std
leave
(bad)
adc
les
inc
cmc
jb
sbb
or
xchg
movs
imul
pop
popf
jg
test
pop
sub
not
fcom
xchg
mov
test
mov
lahf
mov
xchg
dec
mov
jmp
adc
mov
pop
and
into
xor
sub
stos
jmp
fdiv
scas
outs
add
xchg
push
xchg
and
inc
aam
xor
add
fstp
popa
iret
xchg
(bad)
dec
sbb
pushf
mov
dec
jnp
retf
or
sbb
mov
imul
adc
test
push
pop
idiv
cdq
jns
out
mov
loopne
leave
enter
xchg
(bad)
push
sahf
or
jno
xchg
movs
adc
loope
cli
ins
iret
loope
test
ja
pop
cmps
fdivr
idiv
jecxz
nop
sbb
adc
push
xchg
les
and
arpl
sbb
ins
(bad)
and
jmp
inc
mov
scas
push
cmp
out
push
test
dec
cld
sbb
pop
dec
aad
mov
pusha
jnp
pop
imul
fucomip
mov
nop
daa
int
mov
dec
mov
fistp
sub
ret
jnp
pop
pop
lock
aas
jge
ftst
mov
shl
out
adc
cmp
stos
push
xchg
mov
push
call
mov
repz
loope
push
jae
pop
push
int3
lds
add
scas
cmp
xchg
fld
shl
pop
fistp
mov
mov
leave
xor
cdq
lock
popa
test
test
mov
xor
and
mov
inc
js
dec
sbb
ds
aad
arpl
mul
test
(bad)
xlat
sub
(bad)
stos
xor
xchg
(bad)
jbe
cld
stos
jp
mov
xor
cmp
out
xchg
cmp
push
scas
jmp
es
(bad)
xchg
push
mov
aam
div
icebp
sbb
fld
dec
loopne
rcr
mov
push
mov
jge
inc
xlat
ja
rcr
(bad)
rcl
pop
mov
inc
push
fsubr
inc
sub
(bad)
shl
push
push
out
push
(bad)
mov
mov
xchg
not
retf
mov
ret
dec
xchg
push
loop
repnz
jns
fwait
and
cmc
mov
clc
jmp
xchg
call
out
js
pushf
retf
mov
xor
adc
dec
xlat
(bad)
adc
ror
sahf
inc
jge
mov
sub
jge
cmp
outs
sbb
xchg
scas
psubb
pop
jno
sbb
in
outs
or
mov
jge
jle
inc
sub
sbb
ins
jo
cmp
add
pop
neg
nop
sbb
xchg
mov
inc
fcom
xchg
movs
loopne
inc
loope
out
push
sub
(bad)
daa
out
adc
fadd
mov
arpl
bound
out
outs
xchg
frstor
ret
daa
fwait
cdq
xchg
add
jecxz
sub
pop
dec
ficomp
ins
dec
cmp
mov
(bad)
mov
fidiv
sub
dec
push
ficom
push
test
or
aam
adc
(bad)
pop
xor
push
push
mov
dec
ret
push
mov
mov
sahf
in
add
imul
adc
loopne
stos
xor
sbb
sbb
pop
push
xchg
pop
adc
pop
je
hlt
int
test
retf
jge
and
push
ror
ror
ret
jae
outs
(bad)
gs
mov
inc
inc
xchg
and
(bad)
dec
lds
lds
xor
imul
or
mov
cli
xor
into
pop
cmp
popa
adc
mov
gs
out
pop
shl
inc
(bad)
dec
scas
movs
loopne
and
fistp
mov
cmp
sub
pop
push
std
loop
add
(bad)
aaa
shl
or
sbb
jae
mov
(bad)
pop
pop
ret
sbb
test
push
loope
enter
and
xlat
repz
ja
cmp
xor
jnp
dec
icebp
or
out
sbb
aam
bound
dec
ret
hlt
or
adc
cmp
inc
sbb
(bad)
pop
stos
mov
movs
daa
lahf
test
push
mov
and
dec
rcl
stc
inc
mul
push
inc
outs
cmc
pop
mov
push
icebp
lock
nop
jae
mov
rcl
mov
imul
sbb
loop
add
jecxz
(bad)
leave
out
xchg
jb
pop
sbb
dec
mov
inc
push
xchg
pop
loopne
lahf
aaa
adc
jmp
add
ja
(bad)
scas
nop
sub
cmp
bnd
cs
xlat
mov
push
stos
inc
out
ins
loopne
dec
inc
inc
xor
dec
movs
lock
pop
dec
cld
out
push
jnp
int
pop
mov
inc
jecxz
mov
sar
xor
cmp
inc
mov
mov
sbb
xlat
jmp
xlat
in
cmp
sbb
push
inc
and
out
mov
shr
fsubr
in
mov
sbb
js
mov
adc
les
pop
adc
mov
cld
dec
sub
xor
or
inc
add
xor
and
sub
mov
inc
sar
add
int3
(bad)
iret
jg
mov
sub
and
iret
and
into
lea
ins
outs
mov
pop
adc
and
sbb
mov
(bad)
pop
dec
xchg
cdq
mov
xor
ret
dec
pop
fs
repz
sub
aaa
xor
ficomp
pop
push
icebp
int
add
stc
pop
ret
mov
ins
inc
dec
in
call
mov
rcl
aad
or
in
xor
cdq
retf
ja
stos
loop
pop
rol
xchg
and
lds
call
cmc
out
(bad)
loopne
aaa
rcr
push
mov
imul
movs
cwde
pop
loopne
mov
sbb
or
mov
jmp
lock
sar
retf
cmp
imul
xor
mov
pop
ret
aam
int
mov
cld
add
shl
xor
ror
shl
sbb
push
jmp
pop
push
das
jecxz
or
ret
clc
cmp
js
es
lahf
mov
mov
mov
icebp
push
and
retf
sbb
inc
mov
cmp
test
test
repz
sbb
jns
xchg
bound
adc
ss
xchg
mov
mov
shl
lahf
jl
ja
push
push
dec
pop
jge
mov
sbb
mov
rcr
sbb
or
ins
popf
in
inc
mov
cmp
and
mov
in
xchg
fsub
in
and
data16
xlat
addr16
pop
stos
mov
and
movs
push
and
ficom
pop
nop
xlat
add
inc
aaa
pop
sub
mov
pop
(bad)
iret
push
push
(bad)
data16
lods
pop
ret
test
inc
out
aas
pop
jno
add
fsub
pop
pushf
jmp
add
(bad)
cld
in
mov
pop
aam
mov
mov
(bad)
pop
xor
sbb
arpl
retf
push
fwait
loop
les
icebp
ins
ss
sub
mov
mov
(bad)
popa
arpl
xchg
mov
call
sar
daa
out
mov
loopne
mov
cmp
or
adc
mov
scas
std
jge
pop
mov
cmp
pop
cmp
add
pop
mov
or
mov
jle
dec
mov
call
cmps
jae
xchg
mov
stc
and
or
cli
mov
mov
inc
xchg
inc
mov
push
or
mov
push
rcl
(bad)
clc
loop
sbb
mul
xlat
pop
scas
pop
arpl
mov
and
jmp
lods
and
or
ret
sub
(bad)
shl
push
xchg
push
dec
call
aaa
jbe
dec
loop
jmp
jnp
mov
rcr
out
adc
in
mov
les
cs
and
retf
std
loopne
out
scas
jecxz
pop
and
inc
je
pop
cdq
sti
arpl
xor
in
not
inc
xlat
aaa
xor
dec
xchg
pushf
adc
push
neg
jecxz
push
clc
sti
adc
adc
and
adc
fs
rcl
push
jns
xchg
jge
mov
aad
(bad)
dec
ror
sub
sar
cmp
das
xor
add
cmc
pop
lods
es
(bad)
arpl
pop
ftst
fwait
or
and
inc
add
movs
xchg
dec
sbb
sbb
pop
xchg
jne
mov
or
jnp
aas
sbb
pushf
dec
sub
jne
shr
out
mov
shl
fidivr
mov
es
mov
push
cmc
add
push
or
popa
in
sub
mov
mov
rcr
enter
nop
bound
pop
inc
sub
push
sbb
pop
lods
out
xor
or
sub
xlat
mov
pop
fistp
adc
push
jecxz
ret
pop
mov
inc
(bad)
loopne
fwait
call
cld
test
adc
sbb
ins
add
pushf
adc
xchg
adc
ffreep
sub
outs
mov
imul
mov
xchg
fwait
xor
push
not
mov
cld
retf
dec
jmp
push
sahf
shl
mov
xor
xchg
push
pusha
jl
cwde
add
jmp
setle
jno
fchs
fisttp
out
bnd
icebp
and
pop
hlt
dec
rol
mov
mov
out
mov
jp
adc
push
bswap
xchg
aam
mov
and
sbb
jmp
outs
push
sbb
or
jbe
mov
xchg
idiv
cmp
popf
jne
stos
cmp
daa
mov
xor
pushf
add
pop
fstp
mov
loop
sbb
pop
xchg
and
sub
jae
xor
mov
es
es
mov
aam
arpl
cmp
lds
mov
ret
dec
rol
push
pop
dec
pop
dec
mov
dec
mov
cmp
retf
or
mov
or
sbb
mov
push
dec
out
into
mov
push
nop
mov
pop
and
mov
pop
xchg
dec
sbb
loope
xor
pop
push
stos
pop
int3
ror
xchg
sbb
les
sar
sub
mov
je
jmp
pop
fwait
sub
cmp
or
loop
(bad)
mov
out
lods
(bad)
mov
dec
ret
iret
out
fidiv
sti
xor
jb
nop
xor
inc
pushf
addr16
loopne
fimul
sub
mov
mov
ins
mov
and
fld
not
mov
jg
xor
cmp
pop
mov
push
dec
mov
fstp
xchg
inc
fild
iret
mov
push
cmp
fnstenv
nop
pop
cdq
sub
xchg
jae
sub
(bad)
inc
outs
out
movs
xor
loope
or
adc
loopne
sahf
pop
into
mov
pop
mov
neg
jg
jae
cmp
iret
frstor
mov
ja
fimul
cmps
push
xchg
jg
sbb
mov
cmps
into
push
aas
or
test
mov
mov
inc
adc
(bad)
push
cmp
hlt
cmp
lods
arpl
and
xchg
sub
pushf
xor
loop
ins
cli
test
xor
in
dec
repz
enter
mov
push
sub
jns
(bad)
sbb
adc
mov
cmps
cmp
xor
xchg
mov
jecxz
cs
lds
arpl
xor
in
test
and
xchg
push
int3
fadd
data16
out
and
dec
jp
out
mov
dec
into
ja
int3
arpl
push
sbb
xor
shl
es
mul
push
xor
mov
lock
and
scas
jno
mov
in
inc
lods
leave
jmp
in
in
push
push
iret
mov
add
mov
mov
mov
push
push
mov
getsec
ja
fild
push
xor
in
pop
dec
adc
mov
xchg
sahf
dec
ja
push
ret
xchg
test
shl
sbb
jnp
pop
pop
enter
inc
fwait
test
fldenv
enter
dec
xchg
in
add
inc
fst
mov
ds
lea
mov
fidivr
lods
loopne
mov
xlat
inc
popa
jo
ins
dec
pop
sub
sub
leave
push
faddp
mov
or
div
je
jge
mov
sti
inc
xor
cmp
sub
mov
xchg
fmul
dec
mov
mov
scas
jnp
popf
sub
sbb
adc
adc
push
inc
bound
adc
dec
jnp
rcr
mov
ja
push
shl
xor
inc
push
pop
loope
adc
sbb
stos
pop
push
cmp
in
ror
push
sar
fxch
call
and
mov
lods
xchg
or
pop
lds
call
mul
(bad)
xlat
push
lock
cmp
daa
xchg
mov
add
fwait
mov
adc
pop
fisubr
jmp
fistp
in
(bad)
std
pop
adc
fs
xchg
dec
es
mov
(bad)
mov
push
sub
lods
outs
mov
fbstp
adc
add
inc
and
push
arpl
mov
pop
lds
add
(bad)
mov
push
lea
popa
or
inc
cwde
pop
cdq
add
and
mov
fld
mov
aam
cmp
cmp
cmp
and
sbb
fdiv
pop
mov
xor
jo
inc
xchg
cli
pop
xchg
push
cwde
inc
cmp
xor
cli
cmps
fs
xor
cmp
mov
fwait
imul
scas
mov
inc
xchg
pop
rcr
push
mov
nop
(bad)
mov
cmp
fistp
outs
mov
std
mov
(bad)
fs
push
stc
int3
jno
cmps
jnp
aad
iret
push
cmp
pop
inc
xlat
lods
fdivr
mov
in
ins
dec
add
push
and
cli
mov
neg
jge
mov
cmc
daa
les
(bad)
jle
xchg
or
fisttp
sbb
add
aaa
ret
lock
es
mov
icebp
inc
sar
es
popf
(bad)
div
pop
out
jmp
jns
arpl
jne
jnp
push
sub
mov
outs
mov
gs
sub
fcom
cs
jno
mov
out
sbb
hlt
mov
jb
aaa
xchg
pop
dec
test
dec
adc
inc
stc
aaa
jmp
xor
dec
mov
iret
cld
mov
or
stos
or
imul
push
xlat
inc
cld
retf
out
pop
push
push
push
ret
xchg
es
aaa
mov
push
fs
lods
loopne
in
fwait
aaa
xchg
jp
cmp
pop
(bad)
dec
cs
mov
mov
test
mul
cmc
inc
xor
and
push
mov
inc
jge
mov
pop
adc
out
inc
xchg
ret
jnp
mov
mov
test
jmp
test
retf
lock
xor
ror
push
pusha
(bad)
mov
mov
pmulhw
add
lods
mov
mov
jecxz
xchg
das
ins
jns
gs
pop
fsub
jae
jge
inc
xchg
(bad)
sbb
lea
cmp
sbb
dec
xor
lock
popf
sbb
dec
jl
xor
push
lods
stc
jnp
rcr
xchg
xor
cmp
(bad)
inc
jecxz
scas
cmp
xchg
xchg
mov
stos
cld
sahf
(bad)
ins
push
jnp
add
arpl
aas
lock
(bad)
ret
call
cmp
or
addr16
daa
(bad)
gs
aam
seta
nop
out
int3
cmp
and
loopne
jge
mov
cmc
jmp
xchg
nop
cmp
sub
fldenv
(bad)
cli
jmp
sbb
(bad)
pop
movs
sub
cmp
and
aas
cli
jge
rol
xchg
mov
pop
push
lock
nop
mov
arpl
sbb
pop
shl
stc
enter
pop
mov
push
shl
add
push
cwde
lea
call
test
dec
jle
imul
jnp
std
pushf
fisub
ds
mov
push
iret
pop
xchg
and
xor
inc
mov
enter
xlat
xchg
sbb
fstp
pop
stos
jns
sub
adc
and
cmp
sbb
jecxz
in
ja
scas
sub
pop
cmc
sti
mov
lea
xchg
imul
sub
imul
xor
(bad)
retf
xor
sub
pop
scas
xchg
in
mov
mov
adc
push
pop
xlat
adc
cmp
test
mul
in
push
cmps
ror
fwait
xor
sbb
pop
mov
xlat
dec
out
push
jl
stos
loopne
test
out
dec
rol
push
dec
pushf
jne
push
sbb
mov
inc
jmp
mov
xchg
and
ss
mov
(bad)
dec
imul
shr
mov
sahf
mov
rcr
js
xor
rcl
or
jg
in
ja
addr16
push
ja
mov
xor
aad
lods
push
mov
fnsave
sub
xchg
adc
add
jecxz
cmp
add
out
in
sar
test
cld
push
int
clc
aam
hlt
ds
pop
mov
lods
stc
jae
lods
scas
not
nop
arpl
push
dec
mov
mov
inc
push
xchg
or
ja
in
aaa
xchg
popf
xor
aas
mov
xor
push
cmp
xchg
pop
dec
cwde
mov
add
lock
pop
push
xchg
push
es
daa
sahf
cmp
jo
mov
xlat
push
xor
inc
lock
clc
repz
nop
dec
mov
sbb
dec
cmps
js
rcr
int
shl
xor
sbb
add
sub
cmp
mul
stos
cmp
repz
shr
adc
inc
fst
mov
clc
dec
outs
fdiv
push
adc
push
(bad)
mov
mov
mov
stos
inc
ins
inc
int3
add
fcom
pop
jae
sbb
sub
inc
(bad)
outs
js
add
dec
push
pop
sahf
jp
lea
sub
mov
add
xchg
dec
fcmovbe
mov
jge
arpl
and
mov
fdiv
push
mov
test
mov
xor
adc
movs
rcr
je
dec
cli
fist
cmp
jmp
shl
mov
(bad)
add
(bad)
mov
dec
popf
int
shl
or
in
mov
push
rol
inc
dec
psllq
xor
add
int3
retf
sub
test
xor
jge
and
push
jle
sbb
jg
push
es
repnz
in
add
mov
adc
add
jl
xor
add
pop
test
hlt
xchg
pushf
and
es
pop
jne
xor
xchg
rcr
xor
mov
ja
mov
aam
and
loop
inc
push
popf
iret
jne
cdq
fs
jnp
push
aam
mov
mov
gs
or
xchg
xor
mov
aaa
popa
cmp
stos
dec
das
mov
aam
xlat
movs
arpl
cmps
adc
pop
retf
daa
arpl
sbb
sbb
xlat
inc
jl
out
push
add
mov
sbb
xor
sbb
sbb
retf
adc
sbb
dec
arpl
or
push
test
pop
sar
sbb
mov
sub
push
mov
ds
jl
mov
clc
outs
inc
popa
fadd
push
lods
adc
sti
shl
sbb
jmp
jae
aad
xchg
loop
xchg
daa
addr16
mov
fs
addr16
mov
repnz
dec
lock
jae
(bad)
jge
std
imul
cmp
sub
and
cmp
inc
xor
mov
(bad)
call
pop
fst
push
inc
add
sub
inc
nop
dec
inc
mov
pop
push
push
mov
mov
jmp
mov
in
push
xlat
cmp
in
retf
add
gs
adc
jbe
dec
sub
pushf
addr16
mov
std
ds
pop
shr
or
sub
jmp
ins
mov
mov
sbb
pushf
loope
push
sub
ret
and
push
xor
and
fstp
sbb
pop
les
pushf
pop
jb
popf
std
push
xchg
jg
adc
pop
sub
push
and
fidiv
xchg
pushf
push
add
and
sub
mov
push
xchg
ja
jge
fadd
sbb
test
mul
dec
jnp
add
xor
xor
out
out
mov
in
nop
mov
sbb
adc
sub
out
xchg
xchg
test
dec
and
add
add
loop
inc
leave
les
arpl
cwde
movs
pop
fbld
push
cli
xchg
dec
adc
hlt
push
in
imul
jnp
push
jmp
cli
push
adc
scas
(bad)
call
repnz
cmps
mov
add
gs
push
pop
add
(bad)
pop
mov
xchg
xchg
push
push
inc
mov
out
inc
outs
mov
test
cld
cld
pushf
inc
neg
aaa
jb
mov
rcl
lods
leave
stc
cmc
jge
mov
pop
add
outs
push
or
push
add
push
pop
cmps
sbb
sbb
ds
sub
mov
lds
rol
push
(bad)
lock
mov
sub
xlat
sbb
xor
daa
adc
fs
push
fwait
ja
neg
fild
stos
dec
jae
push
cmps
aam
inc
pop
jbe
add
xor
xor
and
out
out
lea
popf
dec
sub
fcomp
mov
push
cmp
scas
sti
rcr
mov
movs
adc
in
call
jne
push
cld
test
aam
int
sbb
inc
adc
es
jmp
inc
pop
mov
(bad)
jnp
and
mov
clc
pop
aas
push
sub
mov
mov
pushf
shl
jle
push
sub
push
xchg
xor
les
in
push
dec
ins
scas
movs
sbb
lods
in
jnp
add
test
pop
pop
dec
call
add
inc
clc
jle
mov
mov
loope
repnz
push
popa
push
push
inc
loopne
pop
sub
test
fist
cli
add
jae
inc
lea
jnp
jnp
icebp
pop
pop
ins
mov
dec
cmps
push
push
xor
fdivr
(bad)
not
test
mov
dec
pop
push
shr
mov
and
mov
pop
xor
or
adc
sahf
popa
loopne
mov
daa
xor
into
jmp
adc
aam
mov
mov
mov
test
rcl
(bad)
loop
push
je
dec
cmp
and
lock
mov
aaa
shl
fiadd
xchg
pop
and
or
mov
push
fimul
add
and
and
dec
rcr
out
adc
mov
popf
(bad)
out
retf
mov
(bad)
hlt
sub
mov
add
xchg
jl
icebp
mul
jmp
jno
stos
push
mov
xchg
push
mov
xor
push
and
jmp
dec
mov
push
or
jnp
enter
push
cwde
fcomp
idiv
push
call
data16
and
(bad)
mov
enter
jmp
loope
fst
push
sub
jo
dec
outs
inc
icebp
sub
popf
mov
in
xchg
repz
sbb
daa
add
jmp
xchg
fsub
cmp
(bad)
aam
push
rol
jle
jl
out
(bad)
sbb
sbb
rol
add
pop
popaw
retf
or
mov
jge
jmp
dec
push
xchg
sbb
test
mov
dec
mov
stc
push
and
popf
pop
jb
or
mov
mov
inc
mov
mov
lods
fs
leave
out
ins
xor
mov
mov
out
jnp
mov
jge
xchg
lods
shl
adc
ja
inc
aad
and
adc
ret
sar
xlat
mov
aaa
pop
loope
jbe
into
icebp
int
inc
movs
pop
(bad)
xchg
sbb
in
add
fs
jp
aas
int
test
add
(bad)
out
retf
sub
inc
retf
(bad)
adc
sub
sub
jb
xchg
neg
mov
xchg
pusha
and
or
sbb
sbb
jmp
push
shl
push
pop
call
pushf
mov
(bad)
xchg
cmp
pop
add
xor
mov
xor
out
mov
jb
in
rol
dec
or
stc
adc
daa
dec
enter
pop
bound
pop
xchg
jle
xchg
lock
fild
aam
bnd
ror
fwait
std
addr16
stc
test
cli
inc
fidiv
push
sub
into
hlt
mov
mov
out
pop
and
std
cmc
jg
mov
int
pop
mov
popa
addr16
(bad)
out
mov
or
stc
add
xchg
int
test
and
mov
jmp
popf
mov
pop
inc
xor
push
aaa
(bad)
cmp
movs
bound
xchg
add
pop
push
push
add
add
hlt
adc
fnstcw
mov
sar
lds
(bad)
push
inc
jo
add
jg
or
jmp
(bad)
pop
cmp
jmp
mov
out
jl
jle
mov
mov
pop
sub
mov
cld
stos
call
cmp
sub
dec
in
les
jmp
adc
mov
adc
push
mov
cmp
out
bound
outs
mov
push
sti
dec
cdq
pop
loopne
jge
xchg
outs
push
fidiv
pushf
dec
leave
mov
and
mov
inc
pop
pop
cmp
xchg
std
cld
inc
dec
stc
adc
adc
add
loop
jnp
mov
sub
dec
xlat
pop
das
fidiv
arpl
and
lods
call
pop
arpl
sub
adc
loop
push
loopne
out
mov
pop
push
jnp
enter
mov
xchg
push
pop
out
or
mov
mov
lods
mov
mov
jge
jmp
arpl
adc
je
pop
jge
pop
jmp
jle
and
mov
dec
cwde
push
mov
fisttp
es
(bad)
xchg
in
nop
cwde
mov
sbb
fstp
ins
mov
enter
fisttp
push
jae
jmp
xor
pop
mov
in
add
push
out
adc
stc
add
data16
outs
mov
push
std
test
adc
mov
and
dec
shl
fdiv
mov
pop
pop
fild
pop
pop
sbb
xchg
mov
sub
inc
pop
push
push
out
imul
add
popf
mul
inc
(bad)
not
adc
cld
out
rcr
cwde
mov
dec
shl
outs
(bad)
cmp
leave
fld
push
std
inc
pop
xchg
dec
repnz
jecxz
neg
push
pop
rcl
fsubrp
xor
xor
sbb
or
scas
pop
adc
ja
jnp
jb
cmp
lods
jg
pushf
mov
dec
sub
(bad)
ret
mov
mov
test
xchg
jne
mov
or
or
mov
sti
cmps
fcom
and
xchg
or
push
arpl
sbb
push
adc
push
sub
xchg
into
sub
or
inc
mov
jge
(bad)
add
jp
in
mov
(bad)
fs
cmp
outs
arpl
push
les
(bad)
call
dec
jns
lods
aas
xlat
(bad)
nop
mov
sub
sbb
mov
or
adc
das
push
inc
nop
push
cli
rcl
je
fs
scas
loop
pop
push
dec
push
lods
in
pop
lahf
popa
fld
and
pop
enter
(bad)
jns
outs
cld
mov
addr16
sbb
dec
mov
inc
xchg
fnstcw
(bad)
inc
mov
scas
pop
in
pop
dec
ins
cwde
jno
or
jns
push
mov
xor
mov
push
pusha
daa
out
in
jecxz
sub
out
mov
sbb
arpl
ins
addr16
out
ins
push
lock
adc
loopne
pop
push
pop
(bad)
xchg
push
and
or
push
icebp
fld
mov
inc
js
cmp
jb
pop
dec
mov
push
push
push
xor
xchg
and
aaa
add
mov
and
sub
ins
cmp
cmp
xchg
mov
cdq
inc
sbb
lods
aad
lock
fcomp
xchg
push
test
lods
test
push
adc
add
jae
and
jnp
cmp
sahf
lods
sub
out
push
and
mov
fwait
dec
les
sahf
push
pop
movs
sub
cmps
jp
arpl
arpl
pop
iret
push
pop
cwde
call
inc
cs
mov
or
xor
das
add
push
mov
and
(bad)
pop
mov
fcom
shr
(bad)
dec
cmp
pop
jg
inc
adc
push
call
inc
retf
jae
xor
push
jg
push
adc
es
mov
cmc
jl
jnp
mov
sbb
fstp
cmps
pop
add
xor
icebp
mov
call
and
push
out
push
call
mov
arpl
adc
in
out
in
mov
idiv
mov
ds
lock
sar
xor
sti
pop
xor
sbb
and
dec
fnsave
sbb
mov
xor
sub
repz
and
cmps
popf
and
pushf
inc
ja
fs
sar
into
mov
out
inc
stos
sub
mov
sbb
out
jno
add
adc
or
icebp
int3
test
mov
cmp
cwde
ja
ret
jle
push
mov
xchg
(bad)
sahf
int3
mov
jg
or
les
add
xchg
popf
add
leave
mov
cwde
mov
int
jmp
cmps
ins
add
aas
addr16
out
cmc
lahf
je
js
push
adc
add
push
xchg
lods
xlat
sti
mov
sub
aad
and
add
ret
sbb
fild
or
(bad)
xchg
push
mov
sub
cmp
dec
es
test
mov
inc
dec
aas
xchg
test
push
push
add
cmp
(bad)
xchg
cmp
fcom
adc
push
aam
scas
mov
out
xor
pushf
mov
cdq
nop
shl
(bad)
jl
jb
ds
popa
mov
push
cmp
shl
ficom
push
dec
or
jno
sub
xlat
jg
push
jge
jo
mov
shl
mov
dec
aam
push
xchg
inc
es
adc
inc
jp
inc
int
mov
ins
lea
xor
mov
int3
stos
imul
xchg
push
imul
dec
out
lock
adc
mov
ficomp
or
and
fmul
jo
adc
push
into
jmp
pop
pop
lahf
mov
sar
pop
sbb
sbb
aaa
push
retf
xor
push
cmp
fcomp
sbb
and
adc
add
jecxz
dec
mov
cwde
cwde
add
sbb
repnz
cdq
cmp
adc
inc
adc
pop
arpl
retf
int
mov
xor
cmp
popf
mov
adc
and
aam
sahf
mov
int
inc
xchg
jmp
sbb
fstp
imul
lea
dec
inc
imul
inc
ret
es
sub
xchg
xchg
in
push
mov
mov
dec
daa
xchg
pop
mov
xchg
pop
lea
mov
mov
fst
enter
or
adc
aad
dec
shl
div
rol
push
(bad)
in
xor
sub
xchg
pop
mov
push
sbb
push
int
xchg
xchg
jmp
rol
repz
adc
and
call
mov
sub
push
mov
and
mov
push
inc
(bad)
mov
call
not
aas
fsubp
cmp
sbb
inc
cwde
pop
push
lods
push
cli
dec
mov
jno
jle
out
test
pop
sub
pop
and
dec
mov
lea
mov
add
sub
repz
push
or
adc
call
stos
xor
jl
pop
hlt
xor
(bad)
dec
cmps
(bad)
mov
xchg
dec
sub
jmp
sbb
outs
jle
jnp
aaa
adc
cmps
bnd
jmp
sub
add
(bad)
adc
sbb
(bad)
mov
inc
aaa
pop
dec
popa
mov
push
adc
hlt
fs
pop
test
jbe
cmp
push
xchg
sub
mov
hlt
pop
cmp
jle
push
adc
fwait
jmp
jb
cmp
dec
pop
adc
add
arpl
mov
int3
xlat
inc
ins
cmps
xor
sbb
xor
js
lods
addr16
xor
ins
pop
aad
aam
push
enter
adc
scas
sar
nop
iret
cmp
mov
std
push
pop
scas
sbb
leave
neg
loopne
and
pop
int
(bad)
test
sub
sahf
test
xor
pop
fnstcw
jecxz
xor
inc
lds
lea
fnstcw
mov
sti
dec
shr
int3
dec
iret
not
cli
aad
test
fimul
push
lea
test
pop
rcr
out
dec
dec
and
push
bound
ds
int3
sbb
mov
imul
or
gs
sub
fst
outs
mov
pop
xor
lods
ins
jo
push
and
lods
xor
js
lods
sar
imul
xor
jge
or
xor
repz
pop
dec
test
test
mov
inc
pop
lods
frstor
movs
pop
xchg
xchg
les
cdq
push
dec
or
jl
jb
sub
jne
inc
ja
mov
push
mov
movs
cmp
lock
dec
loop
ds
js
loopne
and
add
mov
sbb
(bad)
adc
mov
stos
pop
mov
inc
sbb
adc
or
stos
pop
mov
fisttp
mul
inc
in
jle
cmp
push
mov
jmp
xchg
fisttp
movs
wbinvd
mov
ins
sbb
shr
push
xchg
mul
ficom
push
test
mov
mov
out
into
dec
mov
jmp
outs
stos
sbb
mov
pop
ins
nop
cmp
js
pop
inc
popa
inc
imul
push
jo
cmp
std
lea
sbb
fisubr
sub
xor
sti
xchg
in
popf
inc
inc
popf
cmp
loopne
hlt
jmp
push
inc
lods
jo
adc
or
cmp
sub
xchg
and
xchg
sub
mov
push
xchg
pop
loopne
das
and
scas
xor
(bad)
loopne
sar
pop
ror
outs
ins
cmps
imul
stos
outs
daa
xchg
je
push
pop
xchg
movs
mov
lea
mov
shr
sub
dec
mov
aaa
cmp
push
popa
jne
into
(bad)
(bad)
push
int3
add
inc
or
aam
test
daa
push
int3
push
push
cmp
push
stc
fidivr
or
mov
jnp
sbb
mov
push
aaa
int3
mov
lahf
jne
fwait
out
add
in
mov
es
xchg
mov
jne
ds
in
aaa
jge
dec
sbb
xor
cs
cli
out
les
cmp
fistp
int
push
imul
jmp
inc
jle
xor
cmp
push
jb
enter
sbb
pop
pop
test
or
leave
div
sbb
add
stc
cs
fld
in
pop
jmp
xor
dec
imul
dec
ds
mov
lods
push
add
pop
dec
adc
push
das
pop
sbb
jle
leave
int
retf
mov
sbb
jb
push
cli
pop
inc
xor
dec
and
xlat
out
adc
push
(bad)
retf
push
js
mov
ret
sub
into
xor
ds
add
retf
jns
cmps
push
lods
jae
jle
push
ds
pop
cmp
(bad)
pop
pop
retf
fstp
(bad)
xchg
add
lds
cld
js
nop
ins
retf
mov
sub
scas
pop
xor
pop
mov
cwd
dec
cwde
mov
test
scas
sbb
stos
add
push
cmp
out
rol
pop
cmps
sbb
(bad)
push
lea
adc
jmp
sub
adc
add
jns
repnz
cli
sbb
xchg
loopne
dec
mov
mov
stos
shl
(bad)
aad
inc
dec
mov
dec
mov
or
push
cmp
ret
fldenv
and
fistp
aam
cmp
cmc
mov
sbb
pop
out
std
add
push
mov
add
jle
or
not
icebp
scas
fcmovbe
push
push
cmp
or
and
dec
inc
lea
and
pushf
xchg
pop
cmp
and
inc
mov
cs
pop
pushf
mov
in
mov
pop
pop
and
sub
stos
mov
shr
push
mov
int
ret
mov
aam
nop
int3
or
(bad)
std
hlt
ja
mov
xor
iret
adc
hlt
adc
(bad)
adc
inc
lock
adc
pop
cld
adc
adc
sbb
sti
push
cmps
sahf
outs
jmp
mov
add
out
add
ins
xchg
clc
mov
lods
adc
pop
cmp
movs
mov
sub
inc
mov
mov
cmp
adc
and
push
push
jae
daa
rcl
aam
xor
xor
das
push
sub
cmp
mov
popa
sub
enter
jp
sbb
arpl
movaps
(bad)
fsub
in
es
cmp
(bad)
push
aad
mov
lahf
pushf
aas
pop
outs
cmp
in
jle
cli
adc
push
jb
xor
or
mov
adc
cmp
lods
pop
fdiv
xchg
stos
cmp
pop
out
fwait
scas
pop
aam
jge
and
(bad)
aam
pop
dec
dec
sub
test
push
outs
popf
lods
fdiv
mov
cmp
mov
lea
sti
fwait
add
std
adc
mov
push
inc
cmps
push
pop
push
arpl
xchg
adc
dec
dec
sbb
and
fcom
push
lock
in
jbe
mov
mov
inc
sbb
xchg
(bad)
mov
adc
pop
mov
push
jbe
push
or
jmp
push
fwait
int3
mov
xor
jno
jae
in
cmp
ss
xor
cmp
dec
ficomp
lahf
xor
push
ins
pop
add
rol
ja
out
cdq
push
sbb
mov
mov
inc
or
pop
jl
sbb
pop
jno
stos
pop
push
mov
sbb
(bad)
aaa
lock
inc
in
test
inc
pmaxub
test
push
and
mov
stos
or
jbe
jae
pop
das
push
loopne
pop
cmp
(bad)
adc
(bad)
mov
pop
mov
mov
inc
mov
int3
rcl
inc
(bad)
xchg
movs
fcomi
ins
and
hlt
cdq
mov
rol
cli
ret
fadd
test
and
adc
enter
in
add
loopne
repnz
mov
cmova
sti
adc
mov
ret
sbb
add
push
mov
aad
pop
xchg
push
sub
push
mov
shr
scas
shl
jnp
push
outs
(bad)
call
aad
ret
mov
mov
sti
push
or
scas
mov
loope
shr
lds
dec
add
jo
jae
les
push
mov
jbe
movs
cmp
mov
push
mov
icebp
mov
dec
mov
mov
aaa
out
cmp
(bad)
das
inc
fwait
xlat
(bad)
mov
sti
setb
add
cmp
call
mov
lahf
add
mov
outs
aam
add
dec
sub
ja
fcomp
push
jge
mov
sbb
sbb
fs
jmp
lock
pushf
inc
xor
cmp
xor
retf
int3
push
loopne
pop
mov
pop
int3
rol
lods
sbb
dec
pop
mov
cmps
test
mov
ja
jno
jnp
adc
cli
call
int
in
add
fwait
(bad)
xor
int
in
data16
adc
mov
test
xchg
xchg
rcr
aas
ja
fs
(bad)
je
add
mov
mov
jg
mov
int3
rol
jg
lds
jmp
dec
stos
fcmovb
sar
pushf
ins
fwait
add
xchg
lock
cmps
call
and
dec
mov
into
mov
std
dec
jp
mov
popf
stc
inc
pop
sbb
dec
mov
lahf
dec
popf
xor
lea
scas
fs
fisttp
mov
(bad)
jno
mov
not
pop
inc
add
push
rol
jb
cdq
cmps
push
leave
stos
cmps
clc
test
int3
cmp
(bad)
xchg
mov
sbb
lea
addr16
pop
(bad)
mov
std
xor
aaa
mov
and
(bad)
push
mov
mov
pop
mov
fisttp
test
bound
cli
sub
call
retf
push
nop
(bad)
lock
add
mov
call
cli
(bad)
fstp
cmp
mov
sti
jb
cwde
push
neg
cld
and
neg
imul
xlat
imul
das
out
mov
loopne
sbb
or
fdivrp
sub
xchg
mov
popa
push
js
call
ret
mov
xchg
xchg
sbb
fimul
pop
mov
dec
dec
ret
repnz
adc
into
push
jge
mov
lods
sbb
pop
xlat
and
xchg
adc
mov
loop
mov
mov
jge
lods
icebp
push
pop
xchg
fcmovb
push
pusha
sub
fdiv
dec
sbb
fwait
daa
pop
dec
int3
and
lods
cmps
out
xchg
sahf
cmp
dec
jbe
cmp
push
add
test
aam
mov
mov
or
mov
fdiv
and
(bad)
les
stos
retf
cld
outs
int
inc
ds
stos
push
push
movs
push
jb
fdivr
mov
or
es
daa
push
pop
inc
xchg
pusha
pop
popa
push
frstor
xchg
mov
inc
xchg
xor
adc
pop
push
loop
int
jge
fcmovnb
push
daa
push
cmp
out
inc
push
and
xchg
lea
(bad)
xor
in
sub
repz
sub
das
pushf
mov
inc
stc
icebp
mov
add
rcl
(bad)
lods
mov
sbb
xchg
mov
xlat
fnclex
stc
mov
inc
push
gs
sub
mov
mov
dec
cmp
daa
jne
fisub
(bad)
lahf
xor
ja
adc
add
out
push
sbb
pop
xchg
and
pop
adc
add
lahf
movs
fisttp
mov
xor
mov
inc
sbb
ret
dec
popf
call
jge
enter
push
push
sub
mov
sbb
ja
bound
popa
inc
inc
pushf
ss
and
pop
and
ret
mov
adc
sbb
repnz
enter
sbb
dec
(bad)
ins
stc
mov
xor
jmp
dec
js
dec
mov
push
jle
sub
cmp
(bad)
rcl
cmp
and
inc
movs
adc
mov
fmul
dec
mov
xor
pop
lods
dec
pop
lds
popa
lods
or
xchg
cmp
dec
in
inc
dec
xchg
mov
cdq
ins
inc
dec
aam
bswap
aad
ret
push
sub
push
mov
rcr
sbb
mov
add
cmp
leave
jo
sbb
sbb
xor
sub
push
push
cmp
call
xchg
addr16
aad
aaa
pop
jle
jnp
les
jb
dec
mov
ds
ss
loopne
sbb
pop
xchg
cmp
fldenv
retf
aaa
push
mov
test
js
rcr
ror
inc
sbb
xor
lea
test
push
add
jmp
push
scas
push
fst
sub
dec
ja
jae
pop
xchg
mov
lea
push
and
addr16
pop
stos
sbb
addr16
cmp
in
xchg
or
or
push
dec
leave
mov
fucomp
xor
test
loop
jmp
jmp
sub
stc
lods
pusha
jo
das
fild
push
test
jmp
push
enter
fiadd
dec
fistp
call
int3
fcom
mov
ficom
das
out
push
xchg
xchg
fwait
pop
xchg
dec
mov
push
pop
inc
aam
pop
lahf
fs
pushf
add
pop
adc
mov
lahf
jge
fsub
(bad)
loopne
xor
push
push
sbb
test
ds
dec
imul
inc
jl
arpl
push
int
xor
imul
xor
mov
in
cwde
mov
dec
out
ds
jnp
mov
pop
xchg
inc
add
sbb
(bad)
fistp
and
(bad)
cmp
mov
jae
aaa
mov
pop
fnclex
mov
jne
xchg
nop
xchg
jmp
jnp
ret
jl
pop
dec
test
jbe
fcmovnbe
dec
mov
sub
xchg
ss
xor
inc
idiv
jnp
shr
jge
sub
bound
xchg
clc
inc
mov
pop
pop
stos
cld
fucomi
cmp
mov
push
fwait
pmaddwd
adc
mov
shl
lods
jno
shl
add
test
lea
add
sahf
scas
add
lock
push
pop
pop
hlt
retf
dec
out
push
sub
pop
popa
hlt
push
arpl
add
in
push
in
cmp
adc
popf
jmp
pushf
int3
arpl
sbb
rcr
sub
cmps
push
adc
outs
pop
lea
push
loopne
enter
sub
or
sbb
sbb
(bad)
ret
mov
push
xor
test
out
dec
rcr
cs
popa
rol
pop
mov
fadd
mov
in
sahf
iret
cmp
mov
inc
das
dec
iret
jns
push
out
mov
dec
stos
(bad)
ds
mov
jns
push
xlat
sbb
sub
add
add
test
stc
jl
lods
cmc
mov
adc
xchg
jge
xor
xchg
jge
mov
or
or
sbb
pop
cmps
sbb
pop
out
and
mov
pushf
addr16
jge
in
cmps
mov
xor
push
ffree
loopne
adc
pop
in
cli
ror
jo
fst
sbb
lahf
adc
data16
int3
dec
jnp
int
inc
push
lahf
xchg
jg
inc
nop
mov
mov
xor
cmp
loopne
mov
fwait
cmp
sar
aam
mov
mov
loopne
fnstsw
mov
sbb
popf
(bad)
fchs
(bad)
jmp
mov
cmps
je
fwait
xchg
outs
inc
mov
fistp
xchg
cwde
mov
arpl
dec
icebp
stos
pop
jae
icebp
call
add
popf
sbb
mov
loopne
pop
cmp
dec
scas
adc
sar
push
aad
out
lahf
mov
jno
mov
inc
scas
sub
ficomp
gs
sbb
sbb
mov
adc
out
arpl
jnp
loopne
sti
ja
div
jge
adc
jbe
dec
shl
jle
repnz
div
mov
mov
dec
jae
adc
scas
pushf
sub
push
lea
fiadd
mov
pop
aam
cmc
sub
pusha
dec
pop
bswap
lea
push
xchg
sbb
push
jae
ja
and
jno
gs
retf
inc
adc
sub
cld
sbb
ds
loop
push
push
and
imul
pop
popa
(bad)
dec
inc
jmp
mov
sub
xlat
inc
mov
push
out
pop
sbb
sub
fbstp
or
cwde
adc
ror
std
(bad)
inc
push
leave
mov
call
push
sbb
nop
mov
jmp
sub
lea
div
mov
jle
or
imul
mov
push
pop
pop
aam
hlt
(bad)
popa
test
push
cdq
pushf
pop
add
ret
mov
cmp
mov
mov
aam
mov
popa
test
dec
push
les
ss
mov
pop
out
jne
sti
(bad)
push
repz
pop
adc
adc
rol
mov
sar
pop
mov
dec
xchg
adc
pushf
test
pop
xor
jmp
inc
cs
xor
out
cmp
les
mov
test
fcom
and
das
mov
sbb
push
cmp
mov
out
pop
out
adc
lea
out
pop
sub
fcom
pop
jmp
nop
adc
cdq
mov
rol
cmp
fsub
mov
pop
add
loopne
jno
or
mov
fiadd
push
sbb
test
stos
inc
push
xchg
sub
daa
cdq
xchg
pusha
ds
aam
sbb
pop
push
adc
imul
xchg
popa
xchg
lods
sub
aam
mov
cmp
adc
and
(bad)
cmps
dec
addr16
out
ret
push
cmps
xchg
inc
dec
xor
jno
call
mov
mov
inc
cmp
and
lock
mov
fiadd
pop
(bad)
push
dec
sub
dec
sbb
cmp
jmp
mov
inc
mov
add
out
jmp
mov
out
rol
ds
fdiv
xchg
out
mov
fcomp
mov
xor
mov
clc
scas
mov
mov
icebp
test
cld
mov
jne
cwde
push
xchg
push
dec
sbb
sbb
imul
jmp
inc
repz
dec
int3
sahf
pop
sbb
in
idiv
int3
sbb
cmovge
fnstcw
sbb
mov
cmp
ss
cmps
push
out
int
ret
push
sbb
nop
scas
lods
and
pop
fs
movs
pop
xlat
mov
jno
sub
cmp
sbb
xor
cmc
in
mov
mov
add
add
aas
dec
stc
dec
cmp
std
pop
mov
mov
xor
pop
ret
mov
out
jp
movs
loopne
push
dec
push
cli
adc
std
(bad)
xchg
rcl
stos
test
and
pop
xchg
xlat
pop
add
and
arpl
push
mov
fld
pop
lsl
add
xchg
pop
pop
inc
lds
xor
jg
inc
pop
nop
mov
pop
add
fcomi
dec
cmp
pop
and
pop
(bad)
ja
pop
push
sahf
mov
sbb
test
lds
mov
mov
mov
int3
dec
dec
jno
mov
push
push
test
in
inc
jne
enter
lahf
jnp
and
xchg
cmp
and
(bad)
aad
cmp
and
inc
imul
pop
cmps
or
or
scas
(bad)
mov
ss
stos
loope
pop
(bad)
hlt
or
adc
ret
add
mov
or
push
test
xchg
ficom
pop
loop
mov
shl
push
lds
mov
push
imul
mov
mov
sbb
test
push
inc
jne
imul
dec
jae
(bad)
xor
push
dec
outs
fldpi
dec
cmp
rcr
pop
push
or
pop
ins
cdq
add
out
mov
pop
loopne
fs
xchg
and
sbb
and
push
mov
xor
adc
ins
imul
outs
aaa
push
pop
jmp
and
cld
jg
jl
add
xchg
jae
std
mov
scas
hlt
dec
ret
rcl
ins
mov
into
leave
loop
adc
aam
movs
xor
stc
in
(bad)
push
mov
pop
call
and
mov
daa
cmp
inc
rcl
repnz
pop
xchg
cmp
and
sub
stos
pop
sub
lea
jl
jmp
jge
loopne
and
push
inc
fiadd
call
outs
xor
mov
sbb
lahf
sbb
add
fcom
jecxz
mov
add
sub
dec
lods
push
sbb
leave
int3
aam
or
mov
xchg
pop
or
cmc
nop
xchg
movs
sbb
add
and
inc
mov
(bad)
push
(bad)
mov
add
or
sbb
jnp
rol
sbb
outs
mov
jnp
pop
daa
sbb
hlt
ficomp
retf
jge
aam
(bad)
in
sub
cmp
out
aam
add
icebp
dec
sub
ins
cli
sub
movs
xor
push
mov
daa
sqrtps
inc
popf
mov
fucomi
repz
dec
add
pop
loope
cmps
dec
cli
retf
int
mov
stc
aam
jecxz
sub
out
cmp
daa
xchg
in
ficom
inc
lea
dec
jle
xor
add
push
mov
cmc
pop
xchg
loopne
and
mov
xor
or
stos
pop
push
movs
movups
xchg
popa
(bad)
inc
adc
sbb
mov
stc
xor
lahf
lea
jp
loope
inc
fwait
dec
or
ss
inc
and
sar
dec
and
jecxz
cmp
and
div
mov
clc
mov
push
es
mov
fscale
data16
push
aaa
add
fst
add
test
ins
mov
add
mov
xor
mov
out
outs
pop
cmp
pushaw
sbb
and
sub
arpl
ins
movs
push
(bad)
pop
imul
sbb
stc
lock
cwde
dec
jnp
fld
inc
ret
cmp
push
pop
push
mov
call
aam
stos
std
mov
cmp
shl
push
inc
test
scas
(bad)
adc
retf
pop
cmp
imul
lea
pop
xor
std
cmps
sub
pushf
xchg
add
or
test
mov
cmp
or
jle
and
push
(bad)
cmp
(bad)
nop
xchg
cwde
xor
retf
mov
enter
jae
sbb
mov
sbb
xchg
mov
inc
adc
arpl
data16
jmp
scas
in
xchg
sbb
mov
fsubrp
sub
test
mov
popf
pop
push
xchg
jmp
addr16
cmp
cs
out
sub
dec
sti
addr16
pop
pop
rcl
loope
xchg
mov
rcr
jno
movs
push
mov
ds
inc
fdiv
push
mov
inc
fs
cdq
dec
neg
adc
sub
retf
jo
sbb
pop
pop
xchg
bnd
push
into
retf
aam
out
out
jge
dec
pop
xor
inc
push
xchg
(bad)
sbb
jg
cli
pop
pop
(bad)
or
stc
popf
dec
call
in
push
xchg
inc
iret
ror
jns
add
cs
cmp
sub
adc
data16
je
sub
popf
sti
jnp
cwde
jno
jg
outs
pop
jecxz
push
in
lods
aam
ds
stos
shl
retf
inc
(bad)
mov
sub
rcl
xchg
mov
js
lock
pop
push
mov
add
loope
sar
int
xchg
fadd
mov
jp
inc
pop
pop
cmp
xchg
rol
cmp
xchg
push
mov
mov
add
xor
adc
mov
stos
or
dec
call
test
cmps
pop
jle
cdq
push
sub
(bad)
shl
xchg
lahf
ins
cmp
int3
mov
push
sub
test
dec
push
mov
push
sub
add
xchg
dec
mov
push
jmp
or
pop
mov
adc
jge
sbb
dec
int
adc
dec
jns
dec
cdq
pushf
popf
inc
xchg
push
and
les
cs
adc
call
xor
gs
popa
not
nop
not
cmp
push
jg
dec
es
fist
test
sbb
dec
mov
push
loope
aas
and
in
addr16
inc
imul
jg
mov
pop
jg
jl
pop
adc
xchg
dec
mov
xchg
fisub
mov
retf
pop
popf
repz
ds
fisttp
out
cwde
clc
lea
xchg
outs
sbb
xor
jp
sqrtps
or
mov
mov
xchg
cdq
pop
nop
xchg
ret
mov
dec
arpl
push
addr16
mov
pushf
imul
mov
call
idiv
adc
dec
call
shl
jmp
ins
mov
test
dec
call
aad
mov
adc
test
mov
fsub
cli
adc
pop
stos
out
test
adc
or
fs
jge
(bad)
xlat
or
push
retf
dec
inc
lods
push
sub
pop
neg
das
xlat
cli
jne
dec
mov
adc
mov
pop
inc
dec
aam
mov
into
hlt
(bad)
in
sbb
mov
push
add
pop
js
mov
sub
call
(bad)
lahf
sbb
shl
xchg
push
jmp
mov
push
mov
hlt
lahf
sub
push
mov
neg
fidivr
cmp
mov
imul
fcmovu
ins
jae
jle
pcmpeqd
sar
xor
fstp
(bad)
fadd
dec
mov
and
stos
nop
jge
and
repz
test
js
mov
sbb
not
bound
fldenv
dec
xchg
stc
rol
jmp
aaa
rol
(bad)
rcl
ret
jmp
fisub
jmp
(bad)
ins
fbld
sbb
ins
xchg
adc
pop
xchg
je
xor
leave
sbb
jp
cwde
add
mov
adc
mov
ret
mov
xor
cwde
(bad)
ins
(bad)
push
je
jne
inc
pop
cld
or
scas
sub
xlat
jg
or
int
push
xor
pusha
loope
hlt
inc
mov
sbb
mov
add
in
dec
int
jo
ds
pop
push
inc
stos
mov
sub
xchg
sub
pop
hlt
mov
scas
into
mov
push
mov
int3
jae
popa
test
dec
inc
lods
sub
call
push
mov
sub
iret
loop
push
and
xchg
sbb
retf
or
mov
mov
mov
(bad)
pop
mov
push
add
mov
inc
out
or
stos
jg
sub
dec
ficomp
mov
arpl
or
push
jae
sti
adc
out
jg
jp
cmps
xor
adc
out
push
je
or
pop
in
mov
int3
cmps
dec
ins
call
mov
sub
pop
(bad)
shl
jg
pop
enter
iret
scas
loop
rol
neg
jg
inc
aam
mov
push
test
pop
ficom
xor
push
lds
lods
mov
retf
push
inc
jmp
shl
push
mov
cmc
dec
xor
push
int
push
jb
lods
sbb
pop
mov
das
sbb
fsubr
push
xchg
or
ss
ja
mov
aaa
adc
aam
nop
push
xlat
mov
mov
cmc
ficomp
and
push
aam
out
mov
push
push
mov
push
sbb
mov
xchg
or
cdq
adc
cmc
and
xchg
cmp
in
sub
jmp
ins
movs
cdq
mov
popf
mov
add
jnp
xchg
je
outs
mov
pop
shl
call
mov
xchg
call
int3
push
xor
dec
jnp
cmp
outs
dec
jae
mov
adc
xchg
out
out
aad
out
add
(bad)
adc
jnp
mov
xchg
ins
aad
lds
or
icebp
mov
mov
and
xor
outs
loopne
mov
dec
fisttp
xchg
xchg
addr16
hlt
xlat
psubsw
xchg
xor
retf
lock
add
(bad)
cmp
paddsw
test
dec
adc
sbb
jge
xor
xchg
cmp
clc
ja
pop
ror
fcomp
loop
xchg
cli
aad
loop
mov
aad
lock
cli
mov
(bad)
cmp
mov
fisttp
ret
in
jmp
jno
mov
es
aas
popf
imul
mov
ror
(bad)
cmps
lods
(bad)
ins
jg
inc
jmp
pop
adc
mov
addr16
mov
int
les
xchg
pushf
ret
mov
mov
aas
(bad)
std
cmp
jge
push
mov
mov
in
loope
arpl
xchg
adc
aam
imul
push
loope
jge
out
inc
push
cld
and
(bad)
xchg
or
addr16
ficom
rcl
adc
mov
mov
add
adc
dec
mov
cmp
lahf
test
xchg
mov
out
fist
mov
daa
fiadd
mov
(bad)
lahf
pusha
xchg
(bad)
add
jecxz
test
push
xchg
xchg
je
adc
push
jmp
mov
inc
daa
sub
jno
js
or
sbb
and
es
sbb
loopne
xlat
fwait
jmp
stc
xor
gs
mov
fsub
mov
imul
xor
push
in
int
mov
inc
xor
xchg
mov
cmp
mov
aad
or
stc
mov
jbe
fsub
push
sbb
xchg
sub
fld
mov
dec
adc
push
lods
(bad)
enter
call
inc
shl
lea
adc
(bad)
retf
arpl
icebp
adc
mov
jl
cmp
mov
adc
sbb
aad
mov
fcmovbe
pop
jns
(bad)
xchg
add
mov
ins
xchg
(bad)
cwde
push
data16
sbb
pop
dec
push
pop
movs
inc
outs
pop
sahf
cmp
popf
icebp
pop
add
sub
dec
stc
or
inc
loopne
imul
pop
shl
stos
or
cmps
sub
xor
shl
xlat
lock
fstp
push
(bad)
jp
lds
sbb
pusha
sub
aas
add
in
arpl
mov
sub
ds
iret
retf
mov
xor
xor
inc
(bad)
mov
fs
jne
adc
cli
and
sti
push
dec
call
inc
outs
mov
dec
inc
test
pop
mov
lods
popa
pop
fbld
jo
mov
mov
sbb
iret
add
js
call
push
adc
mov
and
or
xchg
pop
mov
in
fistp
inc
mov
sbb
mov
jge
les
retf
cmp
in
or
fdivp
push
fcom
int
inc
xor
pushf
jecxz
(bad)
cmp
mov
mov
clc
jmp
and
mov
lock
add
or
dec
inc
push
mov
pop
ins
test
jg
dec
fucom
push
mov
lods
sbb
pop
sbb
push
shl
mov
pop
fistp
push
or
dec
dec
sub
outs
push
jne
dec
mov
adc
jp
jle
bound
loop
in
sti
lock
sbb
popf
xchg
(bad)
shl
retf
pop
lea
aas
mov
fist
adc
adc
dec
and
mov
add
xchg
or
pop
ret
fist
cld
cdq
in
or
rcr
sar
retf
dec
(bad)
(bad)
in
int
out
xor
jmp
jbe
cmp
dec
or
mov
mov
retf
(bad)
xor
mov
shr
das
ret
fdiv
push
jecxz
fistp
or
stc
pop
sub
ja
test
fstp
sbb
push
push
loopne
cmps
cmp
push
scas
imul
xor
push
(bad)
gs
cmp
jnp
pop
iret
xchg
loop
jmp
or
jb
mov
xchg
ins
scas
inc
ins
push
cmp
(bad)
cld
add
dec
fistp
in
test
aam
add
shl
(bad)
mov
xchg
ja
jno
sub
push
sub
sbb
pop
sbb
fs
stos
pushf
xchg
fidivr
add
bound
cmp
arpl
add
cmp
out
mov
sbb
loopne
cmp
ret
fidivr
das
leave
cmps
push
call
jns
sub
or
adc
sub
(bad)
arpl
adc
xor
in
inc
popa
les
cmps
in
out
int
push
sub
adc
cld
cld
mov
fsubr
pop
dec
loopne
xor
and
adc
pushf
(bad)
ds
sbb
and
or
cmp
test
pop
pop
loop
dec
jb
mov
sub
sar
repz
jecxz
push
nop
sar
sahf
jmp
ror
mov
push
add
pop
sub
popf
jmp
cs
lahf
inc
cwde
loop
push
xor
(bad)
lods
jmp
mov
and
fsub
jbe
pop
jb
cmp
mov
xchg
mov
add
lds
push
dec
neg
icebp
js
test
mov
mov
or
mov
fidiv
dec
icebp
xchg
mov
mov
adc
jnp
xchg
retf
mov
enter
xor
mov
lock
shl
cdq
push
cmp
bound
fild
out
lods
sub
cmp
push
dec
les
ror
sahf
inc
pusha
cmp
sbb
inc
enter
out
lock
push
lods
clc
mov
mov
(bad)
(bad)
hlt
dec
inc
pop
cs
outs
push
in
pop
xchg
rcr
daa
rol
push
enter
jnp
fimul
fstp
xlat
pop
jle
imul
movs
push
pop
mov
pop
pop
rol
push
enter
pop
push
mov
inc
jo
jmp
ficom
or
lahf
imul
js
in
jge
sub
(bad)
push
dec
call
ja
es
int3
fwait
xor
adc
in
aam
cmp
popf
movs
inc
dec
dec
ss
mov
fs
rol
(bad)
cli
clc
mov
sbb
adc
adc
outs
or
out
hlt
jp
mov
sub
icebp
push
cmp
mov
lea
jl
pop
(bad)
aaa
jl
pop
cdq
pusha
popa
sub
xor
inc
adc
(bad)
lea
pushf
repz
(bad)
add
rol
ficomp
pop
retf
jo
push
xlat
mov
imul
pop
movs
mov
dec
ins
jb
retf
push
sbb
outs
inc
daa
cdq
punpckhbw
xor
mov
inc
pop
sub
inc
cmp
adc
and
aas
mov
jb
push
in
and
cmp
xor
add
inc
test
xor
jae
rol
xlat
cmp
iret
div
call
xor
in
push
cmps
call
add
rol
jge
dec
sti
add
jo
sbb
and
dec
shr
aam
sar
jmp
xrelease
pop
pop
scas
cmp
inc
cwde
pushf
ror
and
cmps
or
pop
jno
dec
xchg
xchg
fdivr
cwde
lock
sub
pop
add
add
loopne
xor
xor
mov
sub
inc
xrstors
sub
jle
popa
adc
mov
imul
movs
sbb
push
sub
adc
lock
retf
sti
cs
xchg
push
call
stos
sar
sub
popf
mov
in
sub
fcmovbe
inc
xlat
cdq
jo
or
mov
push
xor
pop
mov
test
movs
rol
or
mul
push
cmp
pop
xor
push
lea
dec
adc
popa
test
sub
pop
sbb
pop
push
mov
shl
mov
jge
out
(bad)
inc
pop
sbb
out
mov
fsub
push
sub
popa
xchg
aas
push
sbb
jo
push
dec
sbb
test
sbb
sbb
inc
pop
jmp
push
fild
mov
sub
dec
push
xor
les
or
inc
aam
cmp
pcmpgtd
and
pop
push
mov
stos
mov
in
adc
push
sbb
ins
push
push
sbb
pusha
fbld
scas
jmp
push
mov
(bad)
enter
int3
xchg
jp
cmp
and
fisub
push
dec
je
loop
adc
fisttp
fst
ins
push
mov
dec
and
mov
xor
into
(bad)
cld
mov
mov
inc
sar
add
push
rcr
cdq
(bad)
std
adc
sahf
lock
mov
mov
jmp
push
dec
jns
mov
sar
lahf
cmps
mov
mov
mov
imul
dec
sbb
mov
adc
cmp
outs
(bad)
sub
scas
imul
xor
jne
pushf
int3
in
popa
lea
movs
pop
test
out
fadd
(bad)
jne
xchg
or
mov
mov
lods
xchg
and
ins
dec
xchg
or
dec
mov
nop
mov
imul
rcr
pop
sub
pop
add
test
pop
xor
push
adc
pop
out
mov
and
and
mov
push
mov
mov
jmp
inc
adc
daa
lods
dec
jmp
sbb
jecxz
cld
lock
sahf
pop
add
cmp
push
arpl
jne
call
jge
outs
fsubp
daa
loop
add
div
push
or
xor
push
sub
rcr
xor
push
xchg
mov
int3
(bad)
add
cld
dec
inc
sti
ja
(bad)
je
adc
push
pop
js
mov
sub
adc
adc
dec
cmp
sbb
sbb
adc
mov
(bad)
sar
mov
adc
in
mov
repz
cld
(bad)
retf
pop
mov
jo
aaa
not
leave
mov
pop
int
and
je
adc
and
dec
in
add
(bad)
rcl
stos
lods
loop
(bad)
retf
jmp
out
sub
push
scas
mul
icebp
(bad)
mov
mov
lock
les
xchg
and
mov
fsub
aaa
xor
inc
test
or
xchg
retf
sub
fwait
jl
les
push
or
jl
dec
push
outs
xor
pop
mov
aam
mov
clc
push
inc
mov
jnp
loop
xchg
sbb
add
jae
xchg
and
data16
fstp
cmps
aas
sub
(bad)
leave
push
push
and
mov
mov
pop
imul
mov
daa
(bad)
dec
jne
fmul
fwait
dec
dec
mov
imul
jae
pop
lds
(bad)
inc
lods
pop
jl
dec
dec
daa
lods
(bad)
xor
aaa
dec
push
imul
cli
jge
cmp
cld
pop
dec
(bad)
jb
fwait
pop
out
mov
ret
popa
jne
clc
inc
add
xchg
mov
sub
inc
in
shr
push
mov
icebp
in
dec
and
mov
loop
int
lods
mov
icebp
ins
dec
out
push
dec
inc
sbb
jne
mov
jp
inc
and
and
and
xor
and
or
leave
call
push
add
mov
jl
inc
mov
retf
xor
aad
dec
xchg
xor
push
icebp
les
aas
outs
jge
mov
out
push
cmp
mov
call
mov
jne
fsubr
inc
sub
dec
mov
cmp
sbb
fld
or
sub
xor
mov
shl
jae
mov
add
xlat
jne
inc
(bad)
hlt
dec
mov
mov
push
jp
cmps
movs
into
jb
pop
push
mov
ret
lock
mov
jp
clc
mov
inc
repz
xchg
jae
xlat
mov
jmp
sub
fild
push
jb
adc
mov
jle
ins
xor
popf
aaa
gs
cs
cmp
ficom
aaa
stc
in
push
retf
idiv
div
mov
call
test
shl
inc
or
loop
jmp
into
lods
sti
cwde
add
xor
or
rcr
lahf
pusha
sub
push
dec
sbb
test
and
push
jmp
ret
cmp
or
cmp
xchg
js
push
mov
fcmovne
in
lods
jno
daa
fs
dec
and
stc
add
call
stos
xchg
jo
jne
jmp
fcomp
(bad)
arpl
fwait
pop
jbe
loopne
test
or
xor
jp
(bad)
fdivr
icebp
dec
loop
retf
ja
jae
xchg
pop
add
mov
das
arpl
jmp
mov
lahf
mov
xchg
loope
shl
aam
dec
aam
sub
and
mov
stc
xchg
pop
dec
mov
add
dec
push
jge
pop
mov
push
ins
mov
loopne
pop
mov
or
lods
jge
cmps
cmp
xchg
inc
jno
and
dec
mov
loop
sub
cs
adc
or
out
mov
pop
push
fnstsw
add
xchg
in
lock
daa
add
dec
into
xor
ror
adc
(bad)
(bad)
xchg
je
out
adc
push
addr16
xor
sbb
sbb
sbb
sub
leave
and
das
test
dec
pop
xchg
fwait
mov
lock
daa
sub
cmp
dec
push
(bad)
ror
loop
xor
pop
retf
cmp
dec
pop
push
icebp
(bad)
sub
adc
sub
movs
mov
addr16
push
mov
and
xchg
and
fld
inc
nop
loop
jecxz
push
mov
mov
stc
push
dec
(bad)
je
lea
mul
sub
loop
ja
jno
nop
ins
xlat
dec
fld
dec
loope
aad
div
pop
lahf
hlt
bound
add
and
cmps
adc
arpl
movs
sub
mov
mov
cld
or
clc
inc
or
int
sub
sub
mov
adc
add
(bad)
sub
retf
and
(bad)
addr16
in
popf
push
mov
cdq
pop
inc
xchg
adc
cmp
mov
adc
pop
pop
ror
pop
push
int3
popa
sbb
in
and
xchg
lea
pop
test
loop
ja
add
mov
jecxz
fisttp
rol
in
test
dec
(bad)
movs
mov
pop
sbb
into
add
pop
add
add
xor
or
push
sbb
lds
(bad)
adc
cld
(bad)
sub
retf
sub
xchg
or
fnstenv
sub
push
prefetch
pop
loopne
icebp
pop
test
shl
sahf
out
mov
xor
test
out
sahf
and
mov
xchg
push
scas
out
test
je
sbb
xchg
int
jg
mov
cwde
xor
push
mov
ins
and
jmp
fsubr
stc
jb
add
sbb
icebp
fisubr
adc
aam
xor
push
daa
xchg
mov
xlat
push
loopne
mov
inc
xchg
clc
(bad)
arpl
add
aad
inc
push
jbe
push
sti
leave
call
ds
hlt
dec
or
xor
sub
cdq
dec
xor
pop
outs
mov
mov
(bad)
cmps
fcomp
idiv
adc
mov
pop
add
jne
dec
lods
ss
shl
inc
cmp
dec
fmulp
pop
mov
inc
mov
ret
mov
mov
pop
dec
mov
adc
or
sub
xchg
pop
xor
jae
cmp
sbb
mov
fild
dec
mov
push
neg
mov
ins
pop
dec
push
mov
data16
cmps
movs
imul
aaa
push
jmp
pop
shl
mov
adc
fidiv
jmp
arpl
add
sti
adc
push
fwait
push
sub
push
ja
pop
push
sbb
cli
jnp
int3
(bad)
aam
mov
mov
push
jg
dec
or
push
test
js
push
lods
lahf
or
(bad)
(bad)
inc
and
xchg
push
cmps
mov
aad
or
movs
fcmovnbe
mov
mov
jne
adc
jecxz
mov
pop
ds
mov
mov
lods
call
mov
mov
mul
popa
jecxz
je
(bad)
xchg
mov
push
fbld
test
sar
xor
inc
repz
bound
mov
cmp
xor
xchg
int
adc
xchg
sub
or
mov
xor
jno
aad
mov
mov
sub
pop
movs
fadd
not
ret
jnp
fld
rcl
pop
xlat
pop
test
or
xor
fwait
(bad)
adc
test
test
sub
cmp
or
jbe
xchg
outs
loopne
dec
enter
repz
pop
push
or
repnz
outs
hlt
clc
inc
mov
xor
mov
int3
push
(bad)
movs
jne
xor
inc
sar
push
retf
jae
xlat
loope
jge
add
dec
xor
outs
adc
dec
mov
bound
pop
push
sub
push
retf
in
movs
fist
add
cmp
cmp
stos
mov
outs
popf
sbb
lods
pop
mov
pop
sahf
jp
sbb
leave
or
push
ss
int
jno
js
aam
xchg
das
enter
mov
xlat
mov
out
ror
loope
mov
bound
push
les
mov
push
call
jnp
push
pushf
pop
mov
add
add
outs
stos
lods
jge
in
mov
sbb
mov
retf
xchg
mov
xchg
sahf
mov
xor
push
xchg
out
push
dec
jge
movs
xor
mov
add
dec
fwait
sbb
adc
push
fild
cmp
out
in
leave
or
add
adc
cdq
sbb
push
fs
mov
jle
repnz
mov
sbb
add
mov
jno
or
xor
mov
jnp
gs
fsubp
add
mov
shr
mov
sbb
adc
rol
add
lahf
mov
in
and
les
xchg
imul
in
imul
and
xchg
push
pushf
stos
sub
adc
dec
fisttp
repz
leave
pop
dec
sub
mov
fldcw
mov
pushw
xchg
shl
sar
dec
inc
aaa
push
fwait
pop
jns
xor
cld
ret
inc
(bad)
and
out
sbb
jb
pop
xchg
xchg
(bad)
pop
sub
inc
pop
push
dec
mov
rcr
test
sub
call
out
inc
pop
dec
addr16
sbb
pushf
push
push
inc
cmp
xchg
sbb
imul
add
lods
lock
push
pop
sbb
stc
nop
push
rcr
dec
loope
je
movntq
mov
(bad)
and
arpl
mov
cmp
loop
xchg
push
ds
test
movs
loope
push
mov
sub
in
mov
sub
xchg
or
inc
cmp
push
cdq
mov
cli
push
scas
add
in
aad
clc
jmp
sbb
(bad)
or
ds
clc
loopne
pop
cwde
add
enter
mov
lods
cmc
xor
inc
(bad)
sbb
xchg
das
jns
imul
jae
push
sbb
sbb
popf
mov
adc
sub
rol
test
dec
push
cmp
shl
xchg
test
pushf
dec
int3
(bad)
pop
dec
aaa
adc
adc
lea
out
sar
or
daa
mov
cmp
sub
imul
jno
push
daa
jle
ret
add
xchg
fadd
mov
jl
dec
jg
adc
inc
xor
rol
dec
sub
call
cmp
lock
pushf
out
(bad)
cmp
mov
mov
add
aad
mov
ror
xchg
sbb
call
adc
push
mov
fsubr
lods
jmp
lea
mov
imul
pop
cmps
add
pop
cs
or
lods
pop
shl
clc
jecxz
xchg
std
leave
sbb
aam
sbb
in
adc
xor
movs
add
int3
push
xchg
jmp
stc
push
jmp
ins
hlt
(bad)
loopne
push
pop
fiadd
pop
push
pop
fadd
fcmovnbe
mov
imul
and
pop
cmps
pop
cmp
mov
mov
pop
arpl
popf
das
js
mov
xor
or
mov
fnstcw
addr16
popa
push
dec
cdq
pop
cli
jns
push
jl
pop
sar
iret
sub
dec
les
pop
jg
cmp
ins
popf
sti
mov
mov
div
cmp
nop
es
add
sub
lods
xchg
lds
add
pushf
mov
ss
inc
push
sub
sbb
fild
mov
aaa
fisub
lods
aad
pop
mov
mov
int
addr16
sbb
push
(bad)
sub
dec
push
push
pop
mov
add
adc
fwait
adc
cmp
into
or
inc
push
sbb
and
fistp
sbb
or
jecxz
dec
fadd
cwde
js
movq
or
inc
sbb
xchg
stc
push
in
jge
and
sbb
pop
pop
jg
in
or
xchg
push
lods
(bad)
shr
push
pop
sbb
add
mov
ror
int
pop
es
call
or
xlat
btc
adc
sub
dec
push
test
push
mov
hlt
out
movs
es
arpl
fstp
push
lds
mov
xchg
dec
or
cmp
out
dec
adc
cmps
mov
sahf
add
hlt
cmps
ficom
stc
aam
(bad)
jmp
rol
iret
jmp
push
cli
(bad)
out
jb
jb
(bad)
jns
pop
aaa
jge
mov
stc
mov
(bad)
cld
test
(bad)
pop
loope
test
inc
ret
call
rol
push
pop
xor
jge
ja
(bad)
sub
ret
popf
sbb
cmp
mov
dec
ficomp
add
leave
stos
cld
or
cdq
add
sbb
and
fidiv
mov
nop
mov
shl
mov
mov
out
mov
lea
and
adc
mov
mov
mov
jbe
mov
mov
sub
and
sbb
sub
sub
shl
push
adc
push
push
cld
ret
lahf
mov
inc
cld
aam
mov
jecxz
je
mov
hlt
fisub
push
add
jnp
call
mov
add
add
jae
out
sets
int
enter
in
mov
stos
outs
imul
dec
push
mov
lahf
pop
shr
adc
sub
fdivr
inc
pop
xor
sbb
aaa
hlt
jne
sbb
mov
cmp
and
test
adc
or
jg
out
mov
cmp
rcl
out
and
xor
xor
(bad)
rcr
mov
dec
push
adc
fnstsw
test
jge
push
mov
nop
sti
shl
sbb
pop
sub
dec
inc
sbb
xor
stc
inc
cmp
loopne
or
stos
or
sbb
not
call
call
retf
popf
xchg
stc
push
jecxz
cwde
or
xor
out
and
test
adc
sbb
cmp
jb
popa
lock
into
pushf
mov
jmp
aad
test
sub
lds
adc
mov
cdq
lods
std
(bad)
fisub
fidivr
outs
mov
out
das
pop
bound
imul
mov
push
popf
adc
mov
test
mov
dec
push
inc
jmp
cmc
fcom
adc
inc
pop
std
imul
and
fsubr
lock
ss
dec
push
xor
cmp
fidiv
dec
cmp
dec
inc
imul
lods
mov
xchg
popa
sti
cmc
mov
idiv
or
cmps
pusha
and
xlat
inc
out
dec
sbb
gs
mov
add
pop
das
icebp
inc
mov
push
xor
sbb
std
test
dec
daa
ret
add
outs
xor
mov
pop
(bad)
dec
hlt
imul
ja
pop
and
push
sahf
loopne
and
jl
clc
jp
or
das
sbb
mov
add
shl
sub
dec
inc
dec
sub
xchg
or
arpl
xchg
dec
jns
push
mov
in
retf
sub
(bad)
clc
mov
pop
(bad)
add
aam
push
push
sub
push
jb
xchg
outs
xor
add
ds
fld
xor
icebp
jmp
(bad)
mov
lahf
das
mov
add
fwait
dec
cmc
ror
jle
pop
loope
sub
sbb
shl
mov
mov
add
dec
dec
cmp
mov
fnstenv
jmp
jnp
cmps
mov
ffree
sbb
cmp
enter
leave
mov
ror
out
test
imul
in
mov
iret
cwde
mov
dec
and
xor
pop
cmps
pop
rcl
popa
not
xchg
cmp
retf
adc
adc
dec
adc
and
pop
sbb
rcr
pop
cmp
pop
pop
lds
jmp
xor
jge
imul
fnstenv
add
or
xlat
fsub
fld
pop
mov
mov
mov
inc
cmc
in
adc
dec
pop
cmp
(bad)
push
mov
addr16
test
iret
out
fisub
sbb
dec
icebp
in
push
jo
xchg
or
in
sbb
cmp
es
xchg
fistp
retf
aaa
cwde
or
adc
mov
(bad)
push
xchg
push
push
push
cmp
xor
fsubp
out
sti
pop
inc
ins
aas
das
mov
sbb
and
ficom
mov
push
inc
int3
mov
fst
clc
mov
clc
fsubr
rol
pop
pop
dec
sbb
cmp
ret
xchg
ins
cmp
or
xlat
or
jp
mul
mov
lock
cmps
inc
aaa
loope
pop
mov
xchg
sub
cmp
mov
and
shr
mov
fiadd
mov
xchg
das
test
stc
pusha
std
dec
retf
sub
cmp
leave
leave
test
lods
xchg
shl
cmp
cmps
cmp
(bad)
pop
jns
mov
enter
inc
lock
jns
shl
add
dec
(bad)
fisubr
fs
push
rcr
push
int
mov
bound
fucomi
int
in
rcl
xchg
test
pop
dec
sti
cmps
pop
mov
dec
in
push
aam
imul
pop
sahf
dec
inc
fwait
xlat
inc
xchg
fwait
mov
cmp
mov
inc
aaa
and
shr
daa
mov
int3
cmp
add
int
cmp
jmp
sbb
add
mov
cmc
pop
int3
push
jl
(bad)
dec
out
fnstsw
mov
and
(bad)
mov
(bad)
outs
mov
dec
dec
wbinvd
fdiv
lock
ja
ror
rol
test
push
xchg
pop
stc
cwde
retf
and
aas
not
xor
cmp
inc
xchg
call
xor
adc
push
push
lock
sub
push
or
not
add
loop
xacquire
jno
xchg
dec
popf
mov
inc
inc
sbb
enter
aam
jg
(bad)
daa
xchg
outs
pop
mov
nop
sbb
inc
cmp
sbb
movs
inc
push
cmp
mov
push
or
and
sbb
inc
fwait
xor
out
push
neg
loopne
or
jge
(bad)
outs
loop
dec
pop
pop
(bad)
rcr
jne
sub
inc
dec
fst
xchg
xchg
ds
repz
cmp
sbb
fiadd
cld
mov
jns
pop
sub
not
fisttp
data16
fsub
add
pop
sbb
pop
push
(bad)
add
dec
aam
cwde
int3
and
mov
push
ficom
adc
cs
mov
jnp
test
sti
add
xchg
jle
add
mov
mov
mov
gs
sbb
and
shl
mov
xchg
(bad)
xor
dec
jecxz
sbb
ins
bound
xlat
jno
push
aaa
and
add
jg
shl
lahf
arpl
add
adc
and
pop
cwde
add
cmp
cwde
or
add
fadd
outs
(bad)
adc
sbb
sub
or
neg
push
out
dec
mov
jo
pop
pop
stc
xchg
adc
mov
ds
js
dec
repz
int3
in
push
loope
jne
aam
push
dec
rcl
push
pusha
xor
xchg
mov
cwde
xchg
xchg
xchg
cld
loopne
mov
mov
int
jnp
xchg
addr16
sbb
std
fisttp
pop
xor
mov
out
pushf
popa
jb
cmp
adc
cmps
ja
mov
(bad)
lock
pop
pusha
les
and
shr
fcom
daa
call
adc
pop
xchg
mov
mov
adc
dec
daa
fadd
call
inc
mov
xor
mov
cwde
(bad)
out
xor
imul
pop
push
inc
push
sti
dec
ja
fld
imul
lahf
push
je
sub
jl
lock
mov
push
ja
inc
les
cmps
lock
pusha
dec
pop
xor
mov
mov
test
xchg
mov
cdq
jmp
sub
(bad)
xchg
cmp
aas
es
xchg
call
xor
sti
push
or
add
retf
inc
xor
mov
out
inc
jae
out
pop
test
in
fistp
xor
jmp
add
rep
out
adc
lahf
add
push
sbb
inc
xchg
inc
and
jae
sahf
cmps
lods
mov
addr16
cwde
or
(bad)
sbb
movs
jae
adc
pop
cmps
ins
(bad)
fwait
adc
daa
sub
fimul
ror
into
data16
sub
mov
dec
inc
pop
into
or
lahf
mov
add
mov
retf
or
shr
sbb
daa
push
iret
dec
mov
hlt
les
test
or
ret
push
daa
push
iret
dec
sbb
xchg
sar
sub
adc
lods
les
push
fmul
cmp
fwait
xor
scas
pusha
neg
pop
jl
mov
leave
inc
jbe
les
scas
xchg
popf
arpl
out
aad
add
clc
push
shl
xchg
mov
cmc
sahf
dec
jne
and
and
out
cmp
cmp
mov
hlt
add
test
sbb
sbb
dec
adc
and
addr16
popa
inc
stos
neg
aad
fwait
scas
pop
mov
push
mov
pop
into
jne
stc
mov
rol
xor
(bad)
daa
int
or
jecxz
je
not
cmp
aas
xor
sbb
jbe
pop
mov
into
xchg
xchg
std
stos
mov
stos
pop
adc
mov
inc
xchg
lea
pushf
pop
out
int
fiadd
and
out
xchg
pop
cmps
jmp
sub
pop
or
stos
jnp
cmps
xchg
jmp
aam
out
or
xchg
pop
adc
cmps
or
dec
imul
sbb
fsubr
xchg
jmp
ret
pushf
push
cs
jbe
mov
in
pushf
xor
movs
out
mov
inc
shl
stc
xor
push
neg
std
fisub
inc
je
adc
push
xchg
xchg
inc
or
sbb
loopne
mov
xchg
mov
inc
or
ins
out
rcr
sti
fs
test
out
iret
gs
mov
or
push
and
mov
cs
call
sbb
sahf
loope
call
pop
stos
adc
in
cmp
mov
xor
pop
dec
adc
in
xchg
jbe
adc
retf
arpl
mov
or
stc
fld
add
mov
shr
push
stos
aaa
out
push
mov
fdiv
mov
rcl
ficom
shl
stos
pop
mov
shr
arpl
mul
test
push
pop
fld
jmp
pop
ret
jne
xchg
adc
(bad)
dec
adc
mov
jnp
aam
mov
loope
xchg
rol
ficomp
pop
in
xchg
nop
pop
pop
(bad)
xor
or
mov
popa
cmps
mov
inc
test
mov
sub
jmp
xchg
and
out
out
push
jno
xchg
aam
mov
push
sbb
arpl
pop
dec
hlt
aaa
push
inc
shr
inc
xor
push
cli
mov
scas
pop
xor
xchg
xor
push
(bad)
sub
pop
(bad)
sbb
inc
sub
jmp
xchg
mov
js
add
cli
les
inc
cmp
mov
in
arpl
fmulp
sbb
cmps
retf
xchg
cmp
ins
fimul
jnp
mov
jl
jbe
xor
ret
cmps
rdpmc
retf
out
push
dec
jmp
xchg
pushf
(bad)
mov
xchg
xchg
inc
cmp
sub
pop
push
mov
scas
repz
rol
ins
ss
rcr
les
inc
add
xlat
stc
add
pop
sbb
jns
stos
mov
and
lods
jbe
(bad)
rcl
sub
jns
imul
xor
jmp
inc
push
jge
or
xchg
rcr
stc
mov
cmp
sbb
xlat
mov
mov
pop
dec
js
cmp
push
push
adc
sbb
or
aad
mov
and
js
pop
lock
jno
test
add
xchg
jb
pop
xchg
ins
ds
rcl
push
xchg
mov
fidivr
pop
add
lock
jns
loopne
pop
mov
vmovaps
mov
add
adc
jbe
cwde
aam
fst
jbe
pop
sbb
and
sub
dec
mov
jo
pop
test
mov
imul
mov
xchg
pushf
int
clc
and
dec
inc
push
adc
inc
dec
pop
gs
pop
arpl
cmp
jl
adc
loope
lea
pushf
push
dec
adc
mov
pop
push
jb
repnz
dec
fcom
cmp
fs
loope
and
test
mov
push
test
cwde
push
cdq
test
xchg
mov
out
sub
xor
adc
test
cmp
inc
(bad)
shl
push
jp
adc
in
jne
xchg
ret
leave
mov
adc
dec
xlat
pop
rcr
mov
cmp
call
jb
pushf
int3
push
retf
test
fidivr
std
lahf
mov
outs
inc
jge
jbe
xchg
bound
dec
xchg
pop
out
xor
int
add
test
mov
sub
mov
es
dec
ins
mov
ds
mov
sub
loop
leave
stc
fwait
jb
xchg
fistp
sbb
mov
jae
push
mov
loope
fisubr
adc
shr
dec
imul
imul
and
fdiv
fisub
sub
(bad)
push
sbb
jmp
push
int3
bound
aam
movs
mov
sub
push
imul
ficom
jns
xchg
icebp
fidiv
movs
mov
in
(bad)
cld
div
leave
pushf
je
dec
xchg
push
push
in
aas
xor
add
aam
pop
sbb
sbb
cdq
repz
xchg
sub
sbb
xor
and
test
fcomp
pop
pop
out
std
mov
std
fadd
sbb
jno
stos
mov
dec
daa
mov
mov
test
xor
dec
stc
mov
or
cld
outs
rcr
cmc
rcl
ret
dec
mov
jge
add
pop
pop
cmp
jge
dec
lods
mov
push
or
shl
xchg
xor
xchg
mov
add
shl
xchg
popf
pop
sub
movs
out
(bad)
xchg
loop
push
xor
rcr
push
jnp
nop
pop
dec
out
lods
divps
test
or
sar
jge
fist
push
call
addr16
add
mov
xor
sub
jle
js
jmp
adc
fcos
mov
cmp
xchg
js
clc
rcr
pop
mov
or
(bad)
mov
aaa
int3
jnp
aad
frstor
cs
and
mov
hlt
inc
loopne
pop
sbb
fwait
sub
out
inc
nop
push
add
js
aad
stos
sar
adc
bound
mov
lods
jns
mov
xchg
outs
sub
fimul
cwde
jg
(bad)
iret
call
xchg
mov
cmp
pop
js
dec
sbb
xchg
inc
ror
add
mov
(bad)
jns
xlat
(bad)
or
cmps
dec
xchg
mov
push
mov
add
adc
sub
vpminub
(bad)
les
loopne
adc
cmp
mov
or
mov
(bad)
xchg
mov
movs
jo
je
pop
not
popa
xchg
pop
mov
fdivr
sub
loopne
lea
mov
fldz
push
mov
mov
push
mov
scas
pop
pop
(bad)
push
push
cmps
mov
push
inc
pop
mov
xlat
cmp
jmp
cdq
out
push
pushf
and
addr16
enter
or
mov
add
mov
and
sbb
ja
rol
push
(bad)
clc
pop
mov
cmp
std
inc
fisub
lods
xchg
jno
div
(bad)
cmp
add
fwait
std
in
mov
test
cmp
xor
sub
mov
xchg
ins
add
add
push
or
pushf
int3
inc
std
pop
jg
es
add
mov
mov
adc
dec
sbb
(bad)
(bad)
push
stos
out
inc
inc
cld
and
inc
pop
pop
(bad)
and
out
jmp
test
sub
(bad)
push
imul
pop
push
arpl
mov
fucomip
cs
mov
adc
jle
add
xor
xchg
and
cld
or
jp
sbb
sub
and
call
je
hlt
jnp
addr16
jo
imul
aam
lods
add
std
inc
fbstp
lods
sub
sar
mov
std
adc
movs
les
sbb
(bad)
pop
pop
xlat
xchg
je
pop
rcl
fld
sar
mov
jns
fwait
jne
push
(bad)
movs
and
mov
in
movs
xchg
imul
adc
mov
xchg
pop
dec
punpckhdq
mov
fwait
pop
inc
out
xchg
icebp
xchg
xor
inc
frstor
mov
and
cmp
cmps
(bad)
mov
adc
add
out
stos
cli
ret
dec
ror
adc
js
jp
inc
lds
setl
int3
cli
mov
push
pop
jnp
gs
xchg
arpl
daa
aad
xor
inc
xchg
xchg
cld
aaa
fwait
pop
cmp
cmp
xchg
push
aam
xor
push
sbb
dec
xor
ret
out
adc
cmp
fsub
fnstsw
mov
pop
pop
cmp
xchg
outs
loopne
dec
ins
sub
xchg
pop
outs
mov
xchg
push
mov
sbb
inc
out
or
dec
jnp
out
pop
or
fimul
inc
mov
pop
inc
es
loopne
das
mov
pushf
push
pop
shl
imul
popf
xchg
pop
jae
xchg
addr16
inc
nop
cld
push
pop
pop
int
jmp
jmp
add
pop
loope
stos
push
les
fldenv
dec
push
scas
ror
mov
fisubr
or
shl
fdivr
push
adc
xchg
sbb
test
call
add
xchg
scas
cmps
dec
xor
xchg
fs
loope
lahf
leave
fucomp
jbe
dec
adc
xlat
jg
and
lds
jbe
sbb
and
scas
les
leave
out
mov
mov
dec
or
int3
je
xchg
repz
imul
xchg
xor
into
xor
mov
push
into
call
les
leave
std
mov
pushf
cmp
fldenv
sbb
hlt
fld
push
aas
fmul
push
sbb
call
pop
xor
movs
lahf
dec
in
mov
pop
outs
mov
rol
sub
add
fisttp
mov
push
inc
adc
das
test
call
and
es
ds
fadd
push
daa
les
xor
jmp
cmp
dec
jp
cmp
not
jb
inc
je
in
shr
fs
les
dec
push
xor
push
xor
xor
(bad)
call
data16
inc
mov
pop
xor
sub
push
push
inc
sbb
cwde
push
mov
(bad)
cli
std
xchg
jp
fst
out
dec
(bad)
shr
dec
sbb
in
mov
xchg
test
mov
mov
nop
aam
addr16
push
div
pop
cmp
xchg
xchg
rol
ret
cmp
push
ins
mov
mov
inc
sbb
mov
sbb
int
push
cdq
push
push
mov
mov
xchg
daa
push
mov
ja
lock
pop
push
test
out
push
or
pushf
push
pop
push
repnz
(bad)
aam
imul
arpl
push
shr
in
push
fcomp
out
loop
pop
mov
inc
pushf
xor
fnsave
leave
lods
dec
in
or
xor
cmp
cmp
outs
in
or
rcr
jg
js
fld
icebp
xchg
mov
cmp
int3
loopne
iret
push
pop
mov
rcr
xchg
jbe
and
mov
cmp
fucom
push
stos
je
popf
xor
pop
sub
xor
pop
or
xchg
not
loope
and
daa
sub
dec
dec
iret
jg
pusha
idiv
sub
fcmovnu
fnstcw
out
mov
iret
xor
(bad)
and
sub
stos
push
fisub
xchg
(bad)
in
mul
dec
addr16
(bad)
mov
cmps
xlat
jo
xchg
dec
neg
push
jp
or
mov
lods
pop
cmp
ja
inc
fisttp
mov
shr
and
ds
jge
inc
add
mov
mov
xchg
mov
mov
loopne
loope
fld
jmp
xor
rcr
push
mov
pop
std
pop
nop
addr16
adc
xor
push
sub
iret
mov
mov
sbb
dec
sub
(bad)
dec
jl
xlat
std
push
xchg
inc
stc
gs
js
push
jl
mov
fstp
push
mov
repz
leave
lods
ds
mov
mov
(bad)
bound
jg
in
sbb
neg
push
jp
retf
inc
rep
mov
cld
jb
sbb
fldcw
xor
push
jo
add
mov
mov
mov
loopne
ffreep
addr16
(bad)
sahf
mov
loope
(bad)
and
sbb
or
lods
add
xor
mov
test
jno
pop
stc
arpl
test
inc
push
pop
es
gs
call
dec
(bad)
mov
add
mov
pop
sub
fdivr
repz
mov
lock
mov
sbb
push
(bad)
pop
shl
mov
xlat
or
xor
cli
adc
mov
push
adc
add
ror
xor
cmp
sbb
int
jge
das
es
jl
jnp
mov
jae
inc
pop
cwde
test
mov
pop
push
cdq
pop
cmps
pop
or
movs
push
cli
jnp
and
xor
(bad)
jmp
xchg
sar
mov
sub
call
scas
jns
fcomp
xor
into
adc
in
pop
(bad)
hlt
inc
cmp
mov
ins
mov
sbb
xchg
jmp
(bad)
clc
push
sbb
add
dec
xchg
aam
mov
in
dec
mov
push
fs
dec
push
jns
cmps
fnstsw
not
adc
adc
imul
xchg
jp
lods
ror
scas
pushf
push
adc
xor
loope
std
mov
ins
and
sbb
cmp
cmp
ss
je
mov
fstp
mov
rcl
sub
cmc
stc
adc
dec
jmp
rcr
cli
(bad)
pop
or
sbb
jnp
mov
fisub
push
cmp
sbb
pop
push
push
xchg
aaa
jae
jne
repnz
je
leave
bound
aam
dec
mov
sub
popf
cmp
sti
or
ja
in
shl
test
pop
push
ins
(bad)
push
mov
dec
ret
sub
xchg
pop
lods
loop
adc
sub
sbb
bound
addr16
fisttp
pop
pop
jnp
popf
or
jae
adc
lahf
add
jecxz
ficom
dec
mov
cld
mov
cs
mov
mov
les
out
sbb
adc
dec
xlat
push
inc
jns
cmp
pop
pop
push
mov
jle
lock
mov
push
jne
mov
xlat
xchg
ret
lods
out
xor
sbb
pop
ror
rcl
aaa
mov
ror
jecxz
mov
mov
neg
fisub
push
mov
stos
int
sub
mov
push
and
push
nop
test
jae
sub
cdq
ja
xor
mov
aam
movs
(bad)
pop
popa
inc
or
imul
push
push
mov
xchg
int
rcr
adc
shl
les
push
add
stos
cmps
out
inc
xchg
sub
ds
or
inc
(bad)
daa
movs
xchg
jae
jp
jmp
dec
(bad)
es
jg
es
sbb
mov
retf
or
ins
adc
cmp
hlt
mov
stc
adc
mov
adc
mov
loopne
fstp
jne
out
pop
sub
inc
jmp
jp
push
bound
pop
mov
inc
pop
cmp
out
and
jmp
pop
xor
fs
pop
xchg
js
daa
mov
and
pop
push
call
pop
add
(bad)
aam
push
sub
shl
mov
movs
push
inc
arpl
out
inc
stos
loope
mov
sub
push
cmp
mov
dec
jae
fucomp
adc
mov
ret
jb
inc
daa
scas
xor
push
mov
das
call
xchg
loop
sbb
mov
mov
pop
in
and
sub
cmp
pop
fimul
pop
sub
adc
add
sahf
retf
rcl
cmp
das
xchg
ret
cmp
fisubr
push
fiadd
cdq
and
nop
push
and
bswap
inc
xchg
xor
into
pop
xor
outs
adc
xor
push
fld
pop
jecxz
and
dec
je
sub
fiadd
pop
ret
lea
sahf
in
ror
fst
call
lea
dec
fmul
test
pop
mov
test
cdq
std
adc
mov
out
popf
push
add
dec
pop
mov
pop
dec
xor
sub
or
pop
popa
shl
pushf
xchg
add
mov
mov
sbb
ins
shl
cmp
das
imul
cmp
xchg
mov
jecxz
sub
mov
push
dec
add
dec
sar
adc
push
or
mov
xchg
mov
cmp
sahf
clc
out
bswap
je
dec
mov
popf
rol
sub
in
fbstp
scas
cld
xchg
out
or
int
jmp
xor
mov
data16
ficomp
xchg
mov
jge
leave
sub
add
inc
push
scas
jnp
push
mov
aas
fist
inc
sub
shl
ins
push
stc
adc
rcl
int3
int3
popa
aas
lods
pop
les
es
mov
(bad)
mov
push
call
push
push
bound
push
mov
adc
jmp
cmp
jg
nop
in
pop
les
xchg
fwait
data16
out
xor
(bad)
mov
add
add
ss
cmp
in
hlt
add
push
test
dec
pop
jne
and
clc
mov
dec
and
add
jge
(bad)
xor
lahf
mov
das
idiv
dec
stos
and
jns
popa
dec
cli
mov
std
push
sbb
enter
out
jge
sub
into
xor
std
and
out
pop
cmc
mov
adc
ja
cmp
loop
out
jae
sub
adc
js
sti
(bad)
ret
lods
and
inc
ss
ret
mov
and
push
pop
stos
lahf
jno
cwde
enter
hlt
(bad)
ficom
psubsw
jp
inc
mov
and
fidivr
in
xor
or
inc
or
rcpps
add
int3
pop
sbb
jmp
jo
in
mov
pop
pop
cmp
mov
test
xor
fcomp
getsec
sbb
outs
lock
bt
mov
push
stc
adc
mov
sbb
inc
sbb
add
js
movs
jl
cmps
std
jae
xchg
sub
fwait
nop
rcr
add
pop
push
xor
mov
in
mov
jmp
es
lods
icebp
push
xchg
push
loopne
jbe
inc
push
push
pusha
dec
push
inc
fild
lock
xlat
in
jne
daa
mov
mov
ja
pop
bound
call
shl
outs
sbb
sub
stos
inc
and
cmp
clc
pushf
mov
(bad)
lock
loopne
in
mov
ja
dec
pop
outs
sbb
aad
dec
mov
and
mov
inc
cmps
xchg
push
loopne
imul
sbb
scas
mov
xor
sub
fcmovu
xor
sahf
loop
in
push
mov
inc
sbb
dec
push
ins
lea
push
pop
sbb
and
add
cmc
pop
out
aam
xchg
out
arpl
xor
in
cmps
fwait
or
or
pop
not
sub
and
mov
or
retf
fdivrp
xor
test
mov
xor
sub
retf
push
sbb
and
arpl
sbb
loopne
fmul
push
imul
pop
in
(bad)
icebp
mov
dec
(bad)
stc
adc
pushf
push
cld
pop
arpl
xchg
mov
or
add
pop
call
int
loopne
or
adc
nop
pop
je
lods
stos
das
inc
sub
pop
add
xchg
mov
sub
rcl
stos
imul
mov
stos
dec
std
mov
(bad)
loopne
dec
xor
pop
xchg
mov
and
loopne
mov
pusha
push
imul
frstor
daa
out
sub
out
dec
ret
dec
jne
dec
mov
loope
xchg
aam
xchg
inc
add
or
jmp
cmp
in
xor
jbe
cmps
mov
jbe
mov
stos
and
enter
rcr
push
xor
cs
xchg
int
jp
addr16
movs
pushf
xor
out
cmp
movs
arpl
push
jne
enter
push
dec
gs
jns
xor
or
out
daa
mov
cdq
inc
mov
xchg
sbb
mov
mov
sub
push
loope
out
pop
pop
(bad)
sbb
mov
call
cld
fcmovnb
mov
loopne
aas
pop
mov
jne
outs
push
inc
aad
mov
or
pop
adc
jecxz
adc
fistp
push
inc
lods
hlt
xor
or
(bad)
daa
jnp
daa
pop
push
imul
(bad)
push
sub
ret
adc
mov
popf
dec
or
not
or
sub
inc
adc
aas
pushf
push
icebp
pop
jns
inc
jne
(bad)
cmps
scas
lods
cmp
sbb
idiv
dec
sub
or
sbb
in
xor
push
pushf
leave
ss
sub
or
push
cmp
cmp
mov
jg
add
lea
push
cmp
inc
and
(bad)
nop
fsubr
inc
pop
cmp
sbb
xchg
jge
jl
adc
lods
sbb
mov
adc
adc
mov
(bad)
std
xchg
sub
xchg
pop
mov
or
shl
push
adc
aas
call
xlat
xchg
mov
(bad)
mov
pop
out
push
push
mov
daa
icebp
mov
(bad)
in
mov
loopne
dec
or
mov
and
jmp
sub
int
sbb
inc
dec
inc
icebp
adc
hlt
cmps
into
inc
or
add
lahf
cmp
xchg
pushf
stc
dec
push
std
std
(bad)
add
out
pop
push
mov
test
add
pop
rcl
mov
push
out
jbe
stos
dec
or
rcl
push
xadd
add
adc
and
pusha
pop
cmps
pop
jl
pop
cli
mov
sbb
sahf
in
dec
fst
aaa
pop
add
xchg
loop
xlat
ins
scas
call
cld
pop
ds
push
mov
aad
cmp
add
inc
xor
cdq
nop
cmp
arpl
jbe
sub
das
loop
fs
add
int
in
lock
cmp
fstp
mov
cwde
aaa
dec
pop
dec
clc
inc
pop
lds
pushf
lea
daa
pop
xlat
test
in
stc
adc
mov
or
jmp
pop
stos
out
sub
aad
data16
jg
and
inc
std
(bad)
mov
cmp
xlat
test
mov
inc
test
(bad)
call
das
loopne
xchg
mov
aam
pop
fnstenv
mov
ins
fwait
cmp
push
sti
(bad)
addr16
mov
push
jp
stos
or
cmp
loopne
jge
push
or
cmps
lea
mov
repz
add
out
jo
pop
adc
popf
fsincos
jmp
and
cld
jno
std
and
xchg
push
mov
mov
pop
inc
mov
cmpxchg
jg
arpl
xchg
mov
lods
add
or
popa
pop
add
jge
sub
aam
adc
mov
les
test
fst
pushf
cwde
cdq
add
adc
pop
cmc
test
xchg
jg
jge
or
jge
dec
retf
jmp
cmp
mov
popf
inc
mov
xchg
sub
icebp
jg
mov
(bad)
fisub
lea
jp
sbb
and
movs
and
mov
imul
cli
push
mov
je
inc
test
cmps
(bad)
dec
push
push
or
mov
adc
inc
or
cwde
cmp
fldcw
imul
addr16
mov
in
out
ficomp
in
sub
jmp
lahf
and
call
outs
in
leave
pusha
xchg
add
push
lock
sar
push
jmp
cli
mov
pop
scas
jecxz
mov
push
mov
imul
cmp
int3
push
jnp
mov
into
sub
add
xor
les
in
jecxz
adc
ror
jmp
dec
adc
dec
jnp
mov
fs
fstp
or
in
jg
jmp
sbb
pop
repz
sbb
scas
lds
mov
and
aas
movs
in
es
into
nop
lock
sbb
pop
lods
jbe
mov
or
push
and
push
and
sub
retf
mov
dec
mov
in
pop
shl
inc
inc
cmp
xor
sbb
cmp
sub
mov
xchg
sar
mov
cmc
mov
sub
cmp
shl
ins
call
pusha
pop
pop
jmp
out
mov
jb
and
push
mov
(bad)
mov
repnz
aaa
cld
retf
dec
cwde
adc
inc
cmp
adc
in
les
shl
jmp
pusha
mov
mov
xchg
xor
mov
mov
mov
sub
push
stc
mov
scas
aam
pop
cmp
mov
cld
fucom
(bad)
repz
jae
sub
outs
and
mov
sbb
sub
xor
push
lock
inc
enter
mov
push
xor
mov
js
test
dec
ins
clc
mov
test
jp
fisub
ret
pop
std
lock
inc
addr16
cmovb
fdecstp
cmp
push
pop
or
jg
fbld
push
pop
imul
inc
ins
pushf
call
push
imul
mov
jmp
xchg
xor
dec
test
les
cdq
jmp
xchg
repz
push
aas
jmp
xor
mov
mov
inc
jge
mov
int3
cmp
int
ret
dec
std
pop
ret
add
sbb
fcom
nop
ds
or
enter
lods
xchg
(bad)
in
ror
mov
dec
sbb
sub
jmp
(bad)
jb
jge
lea
ret
fdivr
add
popf
mov
jb
adc
pop
mov
jno
adc
ja
sbb
or
xor
lock
push
out
lods
(bad)
call
in
scas
xchg
clc
mov
sub
xchg
out
sub
cld
push
je
(bad)
adc
out
mov
outs
aad
(bad)
shl
jns
in
mov
fsub
mov
sub
push
pop
lds
(bad)
push
mov
xchg
aad
dec
add
in
int3
and
sub
mov
and
and
push
shl
mov
mov
in
pop
out
inc
sti
les
pop
mov
add
popa
mov
pop
jns
xchg
out
jmp
das
xchg
adc
mov
int3
in
pop
pop
int
cmp
dec
je
enter
rcr
loop
xchg
push
rcl
jno
mov
cld
adc
loop
adc
jae
movs
fwait
cmp
xlat
fcomp
arpl
jno
dec
lods
loop
xor
dec
movs
pop
lea
dec
leave
out
pop
xor
(bad)
div
lock
jle
mov
rol
addr16
mov
inc
popf
hlt
aam
test
mov
nop
mov
ret
push
push
pushf
push
mov
hlt
xchg
mov
mov
stc
mov
push
xchg
mov
pushf
mov
(bad)
pop
outs
pop
leave
inc
int
aam
cmp
fld
push
add
mov
movs
mov
es
adc
xor
xlat
or
pop
mov
popf
push
jb
push
push
fidiv
in
jmp
dec
or
xchg
push
ins
mov
ret
frstor
cmp
and
jmp
push
mov
inc
push
lds
idiv
(bad)
in
das
into
ss
retf
sub
cld
jp
hlt
mov
(bad)
push
xor
int3
cwde
push
rol
and
or
inc
cmp
dec
retf
and
or
test
sbb
mov
movs
imul
sub
aaa
(bad)
movs
mov
adc
nop
xor
fcomi
(bad)
into
add
sub
push
imul
std
hlt
mov
fstp
pop
push
pop
inc
aas
mov
iret
inc
mov
sbb
loopne
adc
dec
mov
push
loope
pushf
jno
idiv
sub
les
push
or
stos
int3
mov
sub
xchg
cld
hlt
out
push
mov
fsub
(bad)
or
sbb
popa
jne
mov
mov
in
push
ret
inc
push
shl
push
jle
add
imul
mov
mov
mov
int
ss
add
push
sub
push
or
ret
mov
test
dec
push
mov
mul
jo
pushf
add
fadd
movs
aad
push
popa
pop
adc
mov
push
jge
mov
cli
dec
add
cmp
es
add
repz
scas
and
and
test
jo
mov
mov
push
ss
xchg
jbe
push
mov
sub
iret
sub
and
add
(bad)
jmp
and
in
jp
push
aaa
push
dec
push
imul
inc
pushf
ret
lea
xor
pop
sub
andnps
pmuludq
fwait
shl
cwde
jmp
mov
(bad)
imul
std
call
mov
icebp
mov
ja
push
pandn
fld
mov
cmps
jno
fild
jp
cmp
aam
push
scas
or
lock
xlat
push
out
jno
fcmovnb
dec
cmp
fcmove
pop
mov
imul
cmp
fs
add
adc
dec
movs
push
jle
cmp
and
daa
add
shl
mov
gs
sub
add
movs
inc
mov
cmp
pop
(bad)
sub
pop
out
inc
xchg
fcomp
rcr
dec
int3
es
push
or
fld
popf
pop
addr16
dec
push
and
jge
fadd
das
xchg
adc
rcr
stos
xor
mov
adc
pop
(bad)
and
push
ja
movs
and
movs
cmp
jge
jmp
fidivr
jnp
add
(bad)
jo
adc
xchg
jno
(bad)
js
mov
add
pop
(bad)
repnz
int3
out
xchg
fadd
pmaxub
shl
aaa
jge
out
sbb
mov
add
push
sub
xor
mov
mov
push
push
sti
loop
dec
inc
mov
pop
mov
ss
cmps
iret
jmp
loopne
jp
scas
cdq
fisubr
in
sbb
cmps
aaa
nop
ret
loop
mov
cld
mov
lods
iret
dec
test
jne
fwait
pop
mov
test
lods
lock
xor
pop
or
fnsave
js
int3
xchg
add
lahf
inc
push
pop
jge
jnp
mov
xor
imul
mov
add
cmps
mov
cdq
lock
(bad)
push
iret
adc
rol
add
push
fdivrp
(bad)
mov
push
jmp
pop
xchg
xor
push
gs
in
fisub
add
lea
pop
imul
call
in
xor
ret
ja
cs
arpl
pop
cmp
neg
aad
mov
mov
je
aas
jle
pop
mov
and
daa
cmp
jmp
lods
jbe
repz
in
lock
xor
neg
jno
xchg
in
rol
(bad)
sbb
sar
sub
jge
outs
pop
sbb
popa
jg
mov
adc
xchg
fwait
int3
loop
or
mov
adc
sbb
cld
das
mov
popa
movs
scas
ficomp
pop
stos
leave
pop
push
mov
mov
pop
jnp
test
rcl
pushf
aaa
adc
fsubr
pop
mov
mov
das
addr16
pop
adc
mov
cmps
stc
jge
imul
repz
mov
test
push
inc
sbb
mov
lods
push
inc
inc
retf
bound
mov
adc
push
retf
inc
push
pop
scas
neg
test
fnsetpm(287
das
or
sub
repnz
jle
dec
pop
jp
jnp
adc
cmp
cmp
loope
push
cmps
pop
adc
pop
mov
in
gs
ret
popf
add
dec
(bad)
xchg
cmp
pop
ja
pop
jb
rcr
add
mov
dec
mov
add
mov
mov
dec
pop
in
retf
scas
push
mov
inc
ss
in
xor
push
aas
jle
sbb
stos
daa
dec
sbb
call
repz
mov
inc
mul
ja
xchg
ret
mov
jmp
mov
out
into
jmp
pop
or
push
aam
push
or
adc
shl
or
dec
test
loopne
push
fnstsw
dec
sahf
pop
jne
sub
out
jmp
inc
les
in
jnp
arpl
sbb
cmp
ins
xchg
adc
jmp
ins
push
pop
not
cmps
(bad)
(bad)
add
sbb
push
mov
mov
sti
ja
sub
dec
(bad)
xor
push
add
xor
sub
fs
push
int3
cmps
xchg
or
test
dec
cmp
(bad)
ss
mov
popf
add
mov
daa
inc
mov
mov
repnz
test
xchg
jae
xor
push
loop
shl
inc
das
(bad)
hlt
mov
xor
mov
cmp
out
mov
inc
dec
hlt
xchg
lock
jne
push
dec
push
stos
jbe
in
call
push
hlt
aam
mul
aam
mov
mov
pop
int3
lock
push
or
jae
fcom
xchg
dec
mov
call
cwde
call
mov
push
aam
scas
out
xor
mov
mov
adc
fmul
ins
fnstsw
and
cmp
enter
mov
push
cmp
sub
cdq
ss
xchg
out
and
mov
aas
test
in
int
loope
add
push
xchg
and
mul
in
and
out
retf
mov
fcmove
sbb
hlt
(bad)
mov
scas
and
inc
enter
xor
imul
add
pop
(bad)
out
and
push
cmp
aaa
adc
cmp
adc
call
jl
sbb
retf
fisub
sub
daa
in
push
lock
and
pop
mov
rol
dec
aaa
push
mov
call
mov
inc
fsubr
les
(bad)
xchg
jno
push
sbb
fs
test
(bad)
push
mov
lock
dec
test
sar
sub
jmp
(bad)
jo
xchg
inc
mov
movs
out
ficom
mov
sub
sti
iret
xchg
(bad)
cs
pmaxub
jno
adc
les
add
cmp
out
xchg
inc
out
push
dec
sub
fnstcw
sub
inc
fstp
sar
cmp
sbb
adc
xor
(bad)
lock
and
xor
dec
lods
push
mov
lds
fwait
shl
jl
loopne
in
cli
sub
jno
call
mov
mov
aam
imul
mov
sbb
fst
hlt
lods
mov
xor
int3
imul
cmp
dec
jp
sbb
cmp
pushf
and
dec
xor
or
int
cmp
clc
cdq
fstp
lods
mov
call
(bad)
add
(bad)
lods
fsub
leave
xchg
dec
aam
jge
icebp
div
test
jb
pop
(bad)
ds
push
outs
cwde
sbb
mov
sub
cmp
imul
pushf
loopne
jl
xchg
mov
xchg
fisttp
fwait
js
lock
in
mov
push
rcr
dec
push
aam
mov
sbb
jmp
xor
enter
setae
sub
xor
loopne
(bad)
in
(bad)
out
in
test
xlat
sti
dec
add
int3
jnp
cmps
inc
dec
sub
jb
adc
mov
rcr
xchg
inc
or
push
aas
repnz
jns
pop
xor
mov
sahf
imul
shl
in
cmps
ja
jne
cmp
xchg
iret
jno
ss
push
mov
sub
lods
in
aas
rcr
or
jnp
cmps
mov
sahf
es
addr16
ror
repz
lahf
ret
dec
aad
test
cmp
enter
(bad)
stc
loopne
inc
iret
aad
cdq
push
xor
data16
out
cmp
pop
ds
sbb
lfs
xchg
mov
cmp
fdivr
or
loopne
loope
add
pop
bound
pushf
add
lahf
xchg
xlat
cmp
pop
pop
arpl
mov
xchg
sbb
cdq
lock
mov
popa
mov
sbb
bound
popf
call
inc
mov
mov
push
out
sbb
lock
loope
loop
aaa
pop
(bad)
jns
nop
shr
dec
push
xlat
pop
xlat
(bad)
aad
push
ins
ja
cmp
or
push
aam
es
dec
cmp
pop
gs
push
retf
movs
scas
retf
and
out
jb
xor
xchg
dec
in
mov
mov
cmp
popf
and
xchg
test
mov
loope
dec
sub
fwait
inc
sbb
dec
cmc
out
pop
xor
xor
rol
push
mov
mov
fiadd
sub
clc
nop
sub
cmp
stos
dec
mov
mov
add
(bad)
jmp
scas
(bad)
push
scas
fst
mov
push
ja
xor
mov
and
lods
scas
inc
push
inc
shl
add
jecxz
test
dec
lock
retf
xchg
sub
sar
ret
aad
mul
call
popa
shl
jmp
aad
sub
push
loope
loope
add
pop
push
cmp
dec
mov
popf
popf
jne
mov
adc
movs
push
pop
nop
bnd
retf
aad
or
in
sub
mov
pop
add
movs
dec
dec
mov
push
loopne
ss
mov
pop
xlat
mov
sbb
sbb
loopne
loope
aas
ja
pop
xchg
mov
lock
fidivr
popa
call
push
int
add
es
out
stc
pop
jmp
pop
mov
inc
inc
xlat
add
outs
xor
add
test
aaa
(bad)
clc
and
es
xchg
aaa
cld
leave
(bad)
repz
cmp
pop
add
fisttp
fnstcw
cmp
pop
xchg
gs
mov
out
popf
and
aas
pop
xor
lods
push
out
sbb
mov
mov
aas
(bad)
shr
push
inc
dec
dec
bnd
cdq
(bad)
push
cs
jmp
ror
jmp
loopne
aam
stos
in
out
lock
and
cs
div
fwait
rcr
daa
out
jns
dec
fcom
mov
or
cmc
inc
jnp
lods
cdq
jle
daa
fwait
push
mov
sub
ins
pop
xor
sub
pusha
cld
push
jg
mov
mov
push
gs
xchg
les
rcl
test
fmul
dec
mov
pop
std
xor
inc
arpl
xor
sbb
out
fwait
call
rcr
inc
mov
loop
push
jno
jmp
push
test
fdivrp
add
adc
mov
call
stc
test
push
aas
and
jmp
mov
mov
push
ja
enter
in
adc
in
loopne
push
xor
xor
sub
mov
xchg
jmp
add
cs
push
jo
xor
xor
nop
repnz
sub
or
outs
dec
std
nop
mov
sbb
and
je
xchg
fcomp
push
push
adc
cmp
lods
mov
push
dec
xchg
mov
and
xlat
sub
pop
rol
aas
outs
mov
stos
mov
imul
or
(bad)
push
(bad)
pop
inc
inc
mov
jg
xchg
scas
pop
mov
sbb
pop
addr16
dec
adc
mov
add
xchg
aam
cmp
pop
cmp
xor
dec
test
jo
js
(bad)
sti
out
popf
and
iret
cmp
leave
jmp
inc
mov
leave
adc
pop
dec
add
fnsave
cs
lahf
and
lods
lahf
movs
sub
sahf
stc
xchg
cmp
add
mov
pushf
out
pop
ficom
scas
adc
and
mov
aaa
daa
sti
pop
mov
rcl
mov
or
into
cmp
mov
setge
inc
cli
xchg
xor
int3
mov
and
retf
jmp
jno
imul
push
cmps
movs
test
pop
pushf
sar
test
call
jmp
or
sub
pop
data16
in
(bad)
loopne
ficom
cmps
xchg
in
or
dec
(bad)
rcl
in
xchg
sbb
inc
mov
or
gs
int
in
cmps
fidiv
pop
or
ss
es
mov
mul
xor
jg
fcomp
call
xlat
push
daa
sar
or
(bad)
push
mov
dec
xor
jae
and
(bad)
mov
cmc
enter
mov
stos
sbb
loopne
cdq
pop
test
arpl
fild
xchg
inc
xchg
mov
mov
mov
and
daa
jg
xor
fsub
ins
mov
fst
fistp
mov
outs
movs
jns
mov
pop
test
mov
popa
(bad)
jge
(bad)
fcmovnu
mov
dec
sbb
jmp
mov
or
icebp
mov
mov
aaa
shl
loope
das
fiadd
jno
pushf
dec
adc
shl
mov
ins
hlt
pop
es
fcom
or
mov
jbe
sub
int
mov
jle
and
lock
jb
pop
push
push
jbe
aam
int3
leave
push
xor
sbb
ja
add
xor
add
and
idiv
xchg
fs
adc
minps
mov
(bad)
fimul
cmps
jmp
xchg
and
sahf
sub
and
pop
(bad)
repnz
add
mov
fld
pop
mov
popf
hlt
aad
mov
inc
cmp
inc
or
mov
scas
dec
mov
push
das
add
push
push
xchg
pop
cmps
into
xchg
test
sbb
imul
rcl
jno
xchg
jecxz
inc
call
pop
mov
lods
mov
dec
inc
xchg
shr
pop
jl
mov
out
sar
in
cmp
in
jge
jnp
xor
ja
out
pop
pop
mov
xor
int
xor
ins
jae
ror
sub
mov
dec
fcomp
(bad)
push
sbb
test
out
stos
pop
leave
adc
mov
add
fstp
mov
pop
jnp
les
sti
addr16
jb
pop
scas
lods
mov
push
cmp
nop
xchg
jle
iret
imul
cmp
mov
push
ss
push
inc
mov
loope
out
out
loope
dec
retf
lods
mov
outs
loope
push
mov
rol
sbb
xchg
cmps
xchg
loop
or
push
cmp
pop
cdq
out
push
les
int3
add
out
xchg
(bad)
jp
sbb
iret
call
dec
xchg
test
push
jb
ja
test
in
call
pop
sub
or
push
fdiv
loopne
loope
gs
fs
fmul
ror
sar
push
pop
mov
sub
hlt
pop
enter
push
add
cdq
add
inc
int3
int
(bad)
pop
shr
ret
enter
shl
or
and
ds
test
fs
dec
fs
fs
dec
das
adc
pop
shl
repz
cdq
lea
sbb
popa
xchg
mov
and
int3
adc
icebp
inc
dec
sub
or
mov
lea
xor
stc
test
clc
pop
xchg
js
pop
fwait
arpl
xchg
mov
mov
dec
mov
enter
mul
and
repz
ss
mov
shr
(bad)
loopne
popf
jp
dec
in
gs
icebp
push
sub
jge
mov
mov
inc
outs
shr
add
stc
or
psrld
jmp
rcl
lds
mov
dec
inc
sub
xchg
call
mov
cmp
xchg
add
out
adc
gs
ss
pop
push
cmps
mov
jmp
xlat
inc
mov
sti
jnp
pop
scas
daa
lods
jmp
sub
rol
(bad)
outs
lods
inc
xchg
mov
fisttp
hlt
pop
mov
adc
xor
imul
pop
mov
lahf
cmp
cmp
jge
in
sub
or
inc
sub
sub
lahf
sbb
rcl
xchg
ret
(bad)
or
std
lock
adc
(bad)
pop
mov
mov
sub
jmp
mov
lock
lods
arpl
sbb
imul
sub
imul
push
sbb
dec
push
cli
stc
add
shl
movs
arpl
jp
cmp
les
pop
gs
ins
sub
dec
imul
mov
loopne
jae
push
movs
push
out
push
mov
xchg
iret
xchg
nop
shr
xchg
pusha
in
xor
dec
push
dec
adc
sar
int3
mov
mov
xchg
push
xchg
xlat
sbb
xchg
cmp
xchg
(bad)
lods
or
imul
inc
mov
cs
stos
call
sub
push
outs
xchg
cwde
aam
mov
call
pop
mov
aad
pop
jp
cmp
adc
mov
mov
dec
mul
ds
mov
sbb
mov
sahf
enter
push
imul
ret
and
imul
sbb
push
or
adc
in
sbb
repnz
xchg
fnstsw
pop
mov
fstp
in
stos
cmp
(bad)
xchg
adc
xchg
arpl
sbb
mov
mov
(bad)
fidiv
mov
mov
lea
inc
add
pop
cwde
rol
loopne
movs
mov
iret
mov
pop
mov
dec
or
aas
dec
adc
push
rcr
add
mov
jnp
shr
dec
mov
push
call
and
mov
cmp
adc
(bad)
out
aam
jno
mov
jmp
push
and
mov
mov
hlt
fs
ins
outs
add
ror
int3
sbb
sub
das
mov
jnp
outs
enter
push
int
(bad)
iret
cmp
xor
stc
pop
jge
in
lgs
aad
or
pop
push
cmp
sub
and
jae
push
lods
sbb
rcr
in
aas
aam
pop
pop
sbb
sbb
retf
das
sub
sub
jge
leave
sub
xor
in
add
cli
aam
xor
test
push
pop
or
pop
push
dec
pop
adc
sbb
push
in
xchg
call
adc
sub
sub
sbb
sbb
fs
lock
fstp
lea
push
push
add
or
or
mov
mov
adc
int3
aaa
fcom
mov
jmp
(bad)
inc
daa
adc
out
icebp
cmp
pop
push
sbb
popa
daa
xchg
mov
adc
add
push
pop
or
jo
push
xor
jo
fwait
aam
hlt
push
sub
test
push
and
lock
(bad)
int3
fld
xchg
icebp
add
hlt
aam
inc
ins
pop
(bad)
pushf
push
loope
or
add
lds
push
iret
or
shr
fild
add
fistp
sbb
dec
pop
aaa
ds
(bad)
jmp
sub
mov
cld
adc
adc
jp
xor
mov
mov
lds
repz
sbb
inc
mov
pushf
lock
clc
xor
mov
(bad)
in
sti
jns
push
int3
push
and
xchg
popf
jecxz
xor
out
jno
mov
xor
sbb
mov
mov
outs
les
fsubr
xor
pop
push
mov
adc
fwait
xlat
movq
inc
pop
xor
mov
std
cmp
leave
aam
xchg
xchg
(bad)
(bad)
sbb
fld
and
push
cli
sub
inc
stos
imul
pop
add
and
mov
inc
sub
ret
ss
jne
cmp
sbb
sbb
cmp
push
scas
mov
out
jae
pusha
out
es
gs
idiv
dec
mul
mov
aad
ror
dec
stos
sahf
stc
and
test
leave
mov
(bad)
int3
cmc
nop
dec
in
fdivr
cwde
imul
mov
ret
sbb
jge
sub
cmp
and
mov
mov
mov
sahf
(bad)
xchg
(bad)
sub
mov
push
ret
mov
(bad)
xchg
cmc
add
add
sbb
in
(bad)
les
inc
jge
xor
mov
inc
sub
sahf
adc
aad
jns
lods
xchg
outs
fadd
stos
jge
cmp
inc
fistp
icebp
pop
mov
jbe
cmp
xor
popa
jmp
psrlq
movs
inc
xchg
mov
movs
jnp
cmps
sub
int3
in
fisttp
loopne
push
pop
pop
xchg
add
lock
icebp
bound
mov
int
sub
pop
adc
sbb
sbb
rol
shr
loop
push
aam
ins
fcmovb
sub
out
in
or
icebp
das
aad
shl
push
out
dec
ss
push
retf
mov
inc
mov
push
pop
jae
outs
sbb
jmp
xchg
outs
mov
cmp
sbb
mov
aaa
pop
cmp
pop
push
xor
fwait
jle
pop
nop
push
push
stos
push
inc
sub
add
mov
sub
cs
push
and
pop
ret
test
rol
jnp
mov
jl
xor
pop
test
int
(bad)
push
cli
les
int3
mov
(bad)
mov
sbb
imul
sahf
pushf
pop
push
push
out
xor
imul
sbb
fmul
inc
jae
xchg
in
and
js
jbe
test
or
mov
inc
pusha
xor
mov
xchg
pushf
adc
jge
xor
sbb
sbb
sub
xchg
or
dec
cmp
ss
mov
aaa
fdivr
mov
cdq
sub
nop
dec
in
scas
out
out
(bad)
push
nop
pop
add
add
psrlq
or
cmp
leave
lds
adc
jmp
into
cmp
fdivr
cmps
dec
dec
adc
lock
shr
xchg
mov
xchg
sub
stos
ja
lock
jecxz
fld
loop
push
mov
cwde
popa
push
movs
movs
inc
xor
xchg
inc
pop
adc
lea
mov
cmp
test
or
xor
mov
jge
and
push
xlat
aaa
aas
dec
leave
mov
xor
mov
push
repz
lods
dec
mov
push
movs
push
popa
ss
and
push
les
inc
mov
test
cmp
mov
fstp
fwait
pop
pop
xor
jne
jmp
inc
in
in
xchg
fcmovne
and
xlat
and
mov
fcom
sub
outs
push
xor
jg
arpl
jnp
lock
aas
sbb
daa
pop
out
fsubr
or
ret
mov
adc
fcmovb
or
fisub
fnstcw
(bad)
jno
xor
add
repnz
mov
pop
pop
lds
sahf
xor
ficomp
clc
dec
(bad)
enter
push
mov
jl
add
jle
add
dec
das
loope
arpl
pop
lods
inc
mov
loopne
jnp
sbb
adc
push
sbb
mov
inc
addr16
aam
ins
mov
xor
int
mov
sbb
fild
jbe
push
in
shl
das
add
sbb
arpl
aas
mov
je
pop
pop
out
out
add
cmps
pop
dec
mov
pop
pop
jg
hlt
mov
das
and
mov
(bad)
pop
into
and
sub
adc
and
push
mov
jnp
(bad)
dec
xchg
push
or
(bad)
jle
jp
pop
mov
pop
fs
nop
outs
mov
mov
push
(bad)
push
adc
push
mov
(bad)
jne
mov
jne
add
jmp
xor
xor
add
push
add
fs
sahf
cmp
or
mov
std
mov
(bad)
jns
push
xor
cmp
jno
loope
test
mov
popa
push
cmp
adc
push
mov
clc
adc
lds
xor
dec
fwait
pop
mov
mul
pop
jnp
push
mov
int3
xchg
sbb
fiadd
loop
mov
jbe
push
mov
xchg
imul
cmc
push
xor
xchg
ja
test
inc
sbb
push
push
mov
xor
jno
xchg
shr
aam
cld
mov
nop
loop
add
inc
mov
outs
aaa
test
dec
pop
mov
arpl
retf
and
sub
in
sub
imul
lock
retf
lods
neg
xor
mov
mov
cmp
mov
or
pop
push
dec
mov
test
outs
mov
xchg
cmpps
int3
stc
pop
lods
xlat
dec
dec
outs
das
cmp
mov
dec
cwde
addr16
adc
outs
xchg
arpl
sbb
hlt
xchg
mov
ja
pop
outs
fwait
ret
into
xor
and
mov
jno
dec
icebp
jge
mov
xchg
loopne
jnp
sbb
mov
jmp
mul
dec
call
loope
xor
int3
das
test
dec
mov
ins
retf
aam
and
(bad)
aaa
lds
mov
sub
inc
mov
jo
sub
test
add
int3
xor
push
xchg
adc
sub
sbb
(bad)
push
(bad)
jge
inc
fs
inc
and
(bad)
dec
xchg
push
push
imul
cmp
jge
jbe
mov
and
jmp
cmps
dec
scas
sbb
sub
and
leave
pop
nop
pop
mov
test
sbb
imul
dec
fs
lds
xor
out
mov
sbb
push
cmp
mov
xchg
pop
mov
aaa
std
pop
stc
xlat
lock
aam
icebp
dec
ins
and
xchg
and
loopne
jmp
mov
pop
dec
and
push
adc
xchg
or
fnsave
not
fs
ja
ins
mov
mov
xor
je
les
xor
and
imul
push
mov
xor
fisttp
test
jle
push
sar
mov
(bad)
cmp
mov
or
mov
out
mov
loop
push
je
pop
pop
idiv
out
rcl
mov
add
out
lods
jmp
cmp
jne
fisttp
out
mov
les
push
int
inc
push
cmp
or
push
into
mov
dec
or
push
xor
out
pop
mov
xlat
or
mov
fild
aam
adc
bound
pop
pop
cli
push
cwde
loopne
pop
dec
in
mov
cld
dec
mov
add
psubusb
sar
sbb
sub
mov
xor
dec
call
pop
ficom
jne
push
xlat
pop
or
out
in
adc
dec
pop
adc
pop
push
int3
adc
test
mov
rcr
ins
and
idiv
icebp
jp
(bad)
cdq
les
not
out
xchg
cmp
cmp
addr16
fnstcw
or
pushf
fst
aaa
cmp
pusha
xor
and
sbb
loopne
sbb
test
arpl
(bad)
cdq
imul
mov
dec
adc
std
not
std
inc
and
jl
fsub
stos
xchg
lods
rol
fdivr
xchg
cdq
sub
stos
mov
dec
or
jbe
dec
data16
out
push
out
pop
mov
add
ins
adc
clc
ficom
cld
in
xchg
cli
inc
les
sub
mov
mov
add
jg
or
adc
fld
mov
(bad)
hlt
pop
push
call
adc
int3
push
pop
shl
in
lds
shl
xchg
pop
(bad)
(bad)
cmp
xlat
fiadd
fild
test
sahf
sub
fist
sbb
popa
into
and
push
(bad)
ja
mov
fwait
ja
and
lea
xor
push
sahf
aaa
data16
xor
into
enter
sub
leave
dec
ins
sahf
dec
pop
xor
push
in
sbb
hlt
call
adc
lahf
sar
sbb
shl
jl
shr
pop
push
fwait
mov
xchg
push
mov
mov
push
dec
mov
fcom
pop
call
nop
test
pop
aad
pcmpgtd
xchg
pop
outs
enter
and
mov
fwait
cmps
jno
stc
sbb
push
rcl
adc
sbb
fninit
pop
pop
stos
mov
push
jbe
ret
imul
adc
jnp
inc
(bad)
push
cwde
aas
mov
lock
out
pop
repnz
push
jne
mov
pop
pushf
aad
xor
ss
fcomp
lock
lds
sahf
cdq
loopne
scas
retf
test
loop
inc
mov
add
sbb
test
lock
push
js
out
int
adc
icebp
mov
fwait
xor
add
sub
mov
test
push
jl
test
add
ins
mov
(bad)
mov
dec
jg
out
and
mov
popa
pop
mov
xor
addr16
in
out
lea
mov
dec
and
mov
stos
pop
pop
cmp
add
cmp
sar
fldenv
ins
rcl
sub
cld
or
mov
out
enter
push
inc
cmp
loopne
xchg
ds
or
aam
call
cmps
push
rcl
aas
and
sar
(bad)
xchg
les
and
and
mov
sti
call
xor
add
mov
in
fbstp
mov
mov
cmp
sub
push
loope
(bad)
cmps
add
mov
cli
mov
rcr
imul
mov
aad
(bad)
pop
sar
pop
mov
dec
aad
iret
xchg
ds
mul
lahf
and
add
sti
call
ds
inc
xchg
mov
mul
(bad)
js
mov
xor
(bad)
cmova
ror
fiadd
jmp
add
or
cmps
aas
daa
pop
ds
in
xchg
cs
push
sub
outs
cmp
mov
call
ret
sub
mov
cmc
inc
ja
(bad)
cmps
jge
sbb
and
not
sbb
cmp
jno
lods
and
jns
xor
sahf
cmp
fld
mov
inc
jae
mov
aad
jae
dec
sbb
fcomp
shl
adc
leave
dec
inc
adc
xor
stc
stos
and
xor
popa
mov
ja
mov
dec
jno
sbb
mov
scas
mov
lahf
cli
fcomp
push
ror
pop
bound
add
push
push
add
xor
test
shl
rcl
aam
(bad)
xor
push
lods
rcl
cmp
dec
lock
fisttp
rol
mov
movs
dec
(bad)
cmp
cmp
cli
pushf
movs
xchg
pop
pushf
cmps
push
xchg
outs
sbb
push
xchg
xchg
imul
lock
loop
mov
(bad)
push
ins
dec
in
push
je
pop
sbb
push
popa
cmp
xor
or
daa
neg
mov
ja
cmp
fisttp
sub
arpl
dec
mov
xchg
add
int3
fs
jb
mov
adc
dec
das
sbb
cs
outs
ss
jbe
pop
xrelease
cli
and
fwait
sub
loop
push
pop
xor
std
mov
mov
ins
nop
data16
xchg
jns
lds
or
and
cmp
inc
inc
sbb
fdivr
push
mov
cdq
ins
lea
push
aaa
cmp
mov
pop
aad
into
pop
cmp
loopne
hlt
in
push
ret
or
adc
out
sub
pop
aam
jp
inc
cmp
mov
xlat
retf
sbb
(bad)
jmp
out
mov
pop
aaa
adc
mov
rcl
cs
dec
test
add
fs
push
mov
aaa
cmp
ja
lock
xor
dec
push
sbb
and
cld
mov
shl
pushf
int
cmps
std
pop
out
(bad)
cli
push
mov
and
gs
xlat
test
(bad)
pop
push
je
add
add
dec
mov
std
mov
cld
dec
test
rol
fwait
test
fscale
ficom
jmp
xor
mov
or
pop
pushf
pop
iret
cld
push
xchg
cmp
mov
or
jne
les
adc
sub
dec
rol
and
add
cli
mov
sbb
sahf
test
pop
loop
dec
sub
pop
mov
(bad)
sub
push
push
or
sar
mov
fwait
push
dec
or
mov
leave
cmp
push
dec
push
inc
frstpm(287
jne
sub
out
mov
(bad)
push
rcl
(bad)
and
mov
int3
pushf
add
hlt
lds
mov
(bad)
cmps
mov
stos
retf
and
xchg
inc
or
pop
push
push
nop
out
jnp
cdq
cmp
pushf
in
cs
adc
push
xchg
mov
fild
jg
sub
lds
xor
push
pop
push
jne
mov
mov
mov
cs
out
jb
rcr
inc
(bad)
arpl
rcr
push
sub
stos
dec
pop
mov
clc
push
nop
jne
mov
icebp
mov
push
pop
xchg
cwde
neg
ss
call
arpl
mov
ror
push
xor
sub
call
adc
pushf
cs
out
and
sar
and
div
sti
xchg
inc
adc
fdiv
mov
out
adc
push
add
pushf
inc
out
dec
rcl
fldenv
popf
fwait
adc
xchg
mul
xor
imul
enter
sub
mov
mov
xlat
xor
jno
imul
test
add
sti
ja
nop
aas
std
pop
das
ror
dec
popa
iret
dec
jb
sub
jp
cli
and
hlt
sub
outs
or
sar
rcl
pop
jns
mov
lock
jp
neg
sar
sbb
mov
push
movs
sar
mov
dec
out
mov
jmp
push
pusha
aas
sub
jbe
mov
adc
fnstcw
int3
leave
imul
mov
jl
clc
jmp
xchg
xchg
lods
dec
loopne
mov
dec
pop
xor
ins
inc
adc
and
pop
daa
mov
sub
jbe
pop
pop
fst
add
ins
mov
ds
stc
dec
cwde
stc
or
out
and
pusha
fidiv
pop
mov
pop
mov
mov
inc
pop
cdq
cdq
scas
call
ret
sbb
imul
push
inc
dec
jg
dec
xchg
fadd
jge
loopne
je
int
test
gs
cmp
sbb
(bad)
rcl
mov
rcr
or
mov
pusha
cmp
xchg
sahf
rcr
dec
xchg
sbb
bound
rcl
into
fcom
dec
stos
cmp
or
mov
mov
out
dec
and
mov
movs
not
mul
dec
add
fnstenv
mov
cdq
arpl
pop
cmp
lock
in
mov
push
dec
js
lock
mov
and
stos
add
or
inc
mov
iret
hlt
jecxz
out
cmps
into
test
es
mov
jno
xor
pop
mov
mov
and
xlat
xchg
sbb
adc
rcr
ds
push
inc
mov
dec
call
mov
pop
stc
shl
jno
dec
pusha
das
fisub
add
or
sub
pop
fs
sar
in
mov
lods
gs
js
sbb
rcl
push
or
or
xor
ficom
adc
jnp
jno
ins
nop
lea
popf
ss
ja
mov
retf
push
ret
mov
mov
and
jne
sbb
xchg
and
mov
mov
addr16
call
add
sub
out
pop
add
bnd
inc
test
(bad)
fwait
stos
cmp
lock
loop
fcomp
repnz
jle
sti
pop
adc
scas
xor
push
xchg
xchg
fcomip
ins
sbb
and
hlt
pop
fmul
mov
mov
push
and
sbb
shl
cmp
scas
push
dec
dec
bound
jg
sub
or
sbb
adc
mov
and
pop
addr16
mov
fs
adc
jnp
iret
xchg
xchg
fcom
jo
or
arpl
cmp
pop
jb
popa
retf
loop
mov
xor
cwde
sbb
loope
bound
cs
imul
mov
push
pop
scas
jge
push
sbb
push
sbb
mov
inc
push
dec
call
lods
or
ds
stos
pop
inc
fldenv
mov
fldenv
addr16
shl
cmp
jnp
fwait
in
adc
push
call
mov
sbb
adc
cmp
lea
push
cdq
xchg
adc
outs
fsubr
call
rcl
pop
mov
dec
mov
stos
aaa
setnp
ret
sub
scas
ja
mov
loopne
dec
push
loopne
mov
bound
and
ss
xor
inc
aas
mov
xchg
in
arpl
push
(bad)
loopne
jmp
aaa
imul
mov
popf
push
mov
pop
mov
enter
ins
aaa
in
inc
pop
dec
sti
dec
mov
mov
or
sar
push
sub
mov
fisttp
arpl
out
pop
jo
add
cmc
fucomip
push
cs
pop
fdivr
scas
call
inc
out
xor
cwde
pop
push
jno
add
adc
pop
jp
xor
div
mov
fbstp
cmp
pop
jl
ret
pop
lods
push
sub
les
push
cmp
push
mov
push
retf
das
pop
je
add
(bad)
rcr
dec
cmps
mov
sub
mov
call
cmc
addr16
or
aam
dec
xor
and
push
retf
push
pop
push
mov
fs
in
xor
add
and
mov
push
(bad)
imul
add
imul
mov
xchg
test
stos
pop
retf
ins
push
(bad)
pop
test
leave
xor
rol
push
inc
push
xchg
fwait
in
jmp
pop
xchg
mov
test
jmp
pop
dec
rcl
sub
inc
jbe
ja
inc
pop
in
cmp
ror
inc
popa
out
pop
imul
sub
pop
mov
xchg
adc
lods
loopne
push
out
(bad)
cmc
(bad)
repz
test
loopne
test
loop
pop
dec
int3
add
int
sahf
mov
jns
mov
enter
inc
(bad)
leave
add
ins
xchg
push
dec
lock
mov
jnp
or
sbb
ins
stc
add
das
push
dec
cmp
and
shl
mov
pop
xor
add
retf
jno
lds
fbld
xor
movs
fdiv
cmp
and
lods
cwde
mov
aam
rcl
fdivp
push
xor
in
dec
das
cmp
xchg
pop
inc
and
mov
lds
(bad)
sbb
mov
jb
mov
fbld
std
jge
jnp
jnp
sub
fmul
push
xlat
ret
sbb
(bad)
cld
not
clc
inc
push
mov
je
xlat
imul
mov
ja
or
loop
ret
dec
or
and
and
add
loopne
and
mov
inc
aaa
cmp
popa
cld
dec
jae
jmp
rcr
cmp
cld
push
imul
bound
and
mov
mov
in
js
call
pushf
push
or
gs
movs
test
fs
xchg
shr
in
push
cmps
and
pop
mov
scas
push
sbb
fisttp
fstp
cld
or
xchg
inc
mov
xchg
push
mov
pop
inc
push
pushf
lock
adc
adc
cmps
popf
loopne
cmp
fld
mov
inc
xor
add
xor
ins
shl
sbb
xchg
(bad)
hlt
push
jnp
ror
mov
cmp
pushf
jmp
stos
jmp
inc
lea
jae
test
ins
fist
push
mov
sbb
iret
cdq
add
inc
inc
stos
(bad)
clc
xchg
retf
sub
fisub
push
outs
pop
cmc
inc
fstp
cmp
pop
ret
pop
rcl
pop
add
mov
xlat
stos
ds
dec
pop
shr
pop
jmp
test
fisttp
cld
jne
dec
or
cmp
in
sbb
cmp
mov
pop
dec
fwait
das
pop
add
mov
stos
mov
cli
and
imul
adc
ins
inc
jo
cmp
or
dec
cmc
(bad)
add
inc
dec
sbb
cdq
mov
out
daa
shl
xor
pushf
stos
pop
ror
cmp
fucom
cmp
fdivr
icebp
loope
inc
rcl
pop
lods
popf
pop
jnp
cmp
loopne
ins
sub
push
arpl
imul
jo
mov
(bad)
rol
mov
push
jmp
mov
mov
ins
mov
cs
sbb
out
xchg
jns
adc
loope
cli
jbe
sbb
dec
jmp
fnstcw
cvtps2pd
loopne
mov
sbb
(bad)
scas
enter
das
xchg
in
scas
out
div
jbe
mov
pop
fst
pop
or
and
jmp
mov
pop
iret
push
and
xchg
ins
cmp
cmps
sub
sahf
loopne
imul
test
aam
stos
mov
and
pop
ins
add
dec
mov
addr16
and
in
das
pop
nop
(bad)
out
adc
and
pushf
(bad)
mov
mov
stos
dec
fidivr
popa
dec
lea
xchg
xchg
sar
call
rcl
mov
and
mov
cdq
mov
inc
mov
movs
jg
cmp
sub
stc
xchg
ret
loopne
pop
jecxz
jp
sub
or
shr
mov
push
jno
mov
sub
std
jne
outs
das
and
bound
jns
jnp
jo
or
(bad)
push
sub
and
xlat
mov
dec
jg
sbb
ja
cdq
adc
cmp
outs
pop
xor
sbb
test
(bad)
sbb
jae
add
mov
pop
bound
loope
jne
gs
push
add
push
movs
inc
pushf
fidivr
adc
add
sbb
addr16
(bad)
arpl
pop
mov
mov
pop
cmp
inc
push
xchg
xchg
adc
les
jg
jle
leave
hlt
(bad)
xor
push
jl
fwait
mov
movs
push
call
xor
shl
or
push
jmp
fdivr
lea
and
push
movs
xchg
xchg
sbb
in
mov
sub
sbb
inc
shl
shr
call
imul
stos
pop
ret
adc
mov
adc
jge
inc
jge
sub
rol
pop
pop
push
dec
xchg
std
lahf
push
(bad)
push
xchg
nop
xor
jg
xor
fs
jp
les
mov
lahf
fisub
sti
cs
or
mov
daa
addr16
sbb
dec
pop
cli
(bad)
rol
push
in
lods
cmp
xchg
inc
fcomp
movs
xchg
inc
add
hlt
sbb
or
stc
push
shl
repnz
dec
(bad)
cmp
inc
xchg
xor
fiadd
lahf
out
or
repz
pusha
pop
or
clc
mov
clc
sub
lahf
and
pop
push
ror
or
dec
dec
jbe
aad
dec
in
sbb
bound
retf
push
sbb
push
mov
sbb
popf
out
dec
xor
arpl
mov
test
ins
outs
movs
push
dec
(bad)
rol
out
shr
ins
mov
clc
in
cmps
imul
adc
outs
iret
repz
sbb
in
aaa
jmp
xor
cmc
rcl
xchg
adc
mov
mov
pop
jmp
leave
loope
xor
pushf
mov
mov
mov
mov
nop
popf
cmp
dec
adc
movs
jmp
or
mov
cmp
addr16
(bad)
or
xor
cld
sbb
pop
neg
jmp
inc
(bad)
mov
and
fsub
sub
mov
add
pop
inc
jg
xchg
cmps
mov
and
cld
inc
cmc
sahf
cdq
mov
pop
aaa
jns
test
dec
pop
cmp
repz
es
sbb
inc
dec
xor
hlt
adc
sub
adc
fldln2
adc
pop
ja
clc
sbb
lds
push
daa
sbb
push
adc
adc
(bad)
mov
sbb
shr
jae
das
push
xchg
scas
mov
sub
push
sub
mov
and
inc
mov
pop
imul
cmp
pop
ins
mov
(bad)
lea
mov
das
dec
dec
retf
cmp
popf
inc
cwde
sbb
dec
ja
ret
jp
test
shr
test
daa
test
inc
ins
(bad)
in
push
add
pushf
sbb
cli
dec
inc
(bad)
sti
push
test
jmp
pop
mov
pop
fsub
arpl
in
xchg
dec
stos
in
or
aaa
(bad)
push
pop
mov
sub
dec
in
jg
popf
push
sbb
(bad)
pop
jle
repnz
rcl
sub
xor
out
call
test
sahf
shl
(bad)
popf
mov
int
mov
rcr
inc
pop
(bad)
cwde
jb
fstp
xchg
out
add
(bad)
mov
dec
cmp
push
sbb
xchg
out
imul
pop
mov
(bad)
pushf
retf
(bad)
ss
lods
xor
or
inc
mov
mov
xlat
pop
or
std
loope
cmps
fst
pop
test
add
inc
mov
mov
ja
mov
addr16
mov
lock
ret
pop
je
mov
jmp
mov
jl
leave
leave
jbe
in
retf
push
xchg
push
xchg
enter
mov
dec
or
mov
pop
cmp
rcl
push
fild
push
xchg
or
cmp
dec
jae
pop
jg
gs
adc
movs
jl
cmp
sahf
xchg
jns
adc
mov
stos
sbb
adc
sub
test
addr16
inc
dec
xchg
not
out
int3
and
(bad)
xor
mov
(bad)
stos
sbb
jnp
add
fist
movs
pop
or
or
fnstsw
(bad)
cmp
addr16
jbe
or
push
and
xor
pop
les
adc
bound
xchg
mov
and
ror
ja
mov
jne
loopne
cmps
mov
xchg
lea
pusha
dec
clc
outs
push
jno
jmp
das
sub
xchg
and
(bad)
out
setl
movs
retf
icebp
pop
imul
int
out
in
sub
dec
scas
adc
and
inc
idiv
cwde
pop
test
and
xor
mov
out
dec
xor
aad
cmp
lock
ins
dec
jnp
neg
adc
add
ror
pop
call
push
or
pop
shr
(bad)
push
movs
add
add
das
jp
scas
nop
test
fdivr
out
sub
pop
xchg
(bad)
push
jo
lods
lds
addr16
les
sub
push
pop
js
mov
xchg
pushf
mov
pushf
aam
bound
test
push
or
xor
scas
add
and
daa
pop
jb
or
mov
push
mov
pop
jne
nop
and
xchg
mov
rep
not
out
pop
cwde
mov
mov
(bad)
inc
popa
mov
jp
cli
xlat
mov
pop
sub
lods
int
pushf
test
add
movs
sar
int
pop
rol
adc
add
mov
or
sahf
dec
dec
mov
mov
jb
enter
imul
pop
mov
xor
in
mov
sbb
(bad)
pop
lods
pushf
imul
push
pop
test
mov
jmp
retf
jg
adc
scas
adc
outs
and
sub
mov
jp
cmp
pop
inc
mov
(bad)
lods
test
in
ds
imul
adc
inc
rcr
fst
jo
in
rcl
ret
dec
aad
mov
imul
mov
and
cmp
dec
es
ja
pop
push
cmp
mov
mov
lods
dec
inc
fdivr
cmp
sub
push
out
jge
pop
not
inc
sahf
imul
js
lahf
arpl
std
repz
pop
test
cmp
scas
ficom
or
pusha
clc
sbb
xchg
xlat
(bad)
dec
mov
lea
dec
push
add
mov
jae
rol
test
out
push
cs
add
pop
fild
aam
daa
xchg
sbb
xchg
jae
mov
mov
adc
pop
xor
fadd
push
inc
push
sub
mov
and
adc
stc
cdq
and
jb
sbb
push
xor
adc
js
mov
sbb
sub
popa
in
push
push
fcmovnbe
xor
dec
loope
mov
cdq
imul
adc
inc
shr
dec
repnz
aam
std
cmp
les
imul
sti
xchg
(bad)
stos
add
xchg
stc
mov
jecxz
cmp
(bad)
sti
enter
inc
out
mov
xor
adc
xchg
push
mov
add
dec
dec
out
sahf
popf
outs
std
stos
rcl
mov
xchg
pop
sbb
pop
dec
out
sbb
cmp
add
pop
scas
mov
cdq
nop
dec
sub
add
and
inc
inc
jne
sub
arpl
xchg
in
or
in
mov
into
in
mov
cwde
stos
mov
test
mov
in
test
adc
pop
jmp
and
(bad)
frstor
mov
dec
loope
jnp
xor
add
sub
mov
bnd
inc
call
add
push
ins
fild
mov
pop
(bad)
ja
fucomp
fidiv
adc
mov
shl
mov
mov
aaa
rcl
leave
cmp
aam
mov
or
cdq
dec
pop
cmp
rol
imul
cmp
jl
mov
add
xchg
xchg
nop
jnp
mov
retf
mov
xchg
imul
inc
ficom
fstp
pusha
imul
(bad)
xor
push
test
dec
or
movs
dec
mov
dec
bswap
mov
test
cli
push
aad
dec
or
loop
cmp
out
(bad)
popa
fld
mov
pop
add
fdivr
jle
repz
out
(bad)
jp
mov
ror
mov
jno
lods
out
ja
xchg
xchg
loope
sbb
leave
xchg
out
or
sbb
push
test
mov
push
push
lea
cmp
mov
stos
sbb
fld
mov
out
ret
and
jmp
mov
mov
mov
cmps
xor
es
std
imul
popa
js
and
lds
je
push
adc
bound
mov
sbb
jbe
sbb
dec
push
movzx
push
add
and
jae
cld
dec
cmc
push
js
out
ds
xor
xchg
jae
jle
ds
pop
(bad)
cmp
fld
or
mov
xor
push
enter
xor
cmp
popf
jecxz
push
pop
jge
out
push
call
push
dec
sbb
rol
(bad)
in
xor
pushf
in
pop
xor
fist
stc
xlat
cs
push
cmps
fistp
das
sti
jnp
fisubr
sbb
dec
je
ins
scas
adc
scas
sub
inc
mov
xchg
fiadd
inc
rep
imul
mov
nop
mov
rcl
jne
ss
jae
sbb
dec
xor
sub
push
cmp
xchg
and
xchg
aaa
cmps
fld
mov
les
sub
inc
xchg
push
dec
dec
fisttp
pop
inc
jmp
pop
(bad)
jmp
std
adc
dec
mov
push
sub
mov
push
outs
nop
scas
fwait
pop
adc
in
adc
ss
ja
fwait
add
shl
inc
xlat
mov
jno
mov
(bad)
xor
mov
(bad)
mov
mov
sbb
xchg
and
nop
fwait
add
fmul
dec
pop
loope
sub
sbb
pop
dec
and
add
jne
jp
jecxz
ror
jmp
aas
pop
out
sbb
test
inc
and
call
add
ds
gs
sbb
rol
push
pushf
xchg
adc
cld
pusha
cdq
loopne
cs
mov
inc
test
pop
popf
ret
cmc
push
in
cmp
cs
push
sbb
movs
fisub
enter
les
adc
jp
or
(bad)
pop
cmps
repnz
repnz
pop
or
shr
jmp
nop
xor
(bad)
push
lea
movs
inc
sub
inc
jno
nop
retf
arpl
js
call
jl
stc
pop
shl
stos
add
cmp
add
pop
push
stc
sahf
cmp
or
daa
xchg
mov
psrlq
loopne
pop
or
mov
pop
jnp
(bad)
ds
mov
stos
fwait
sub
imul
gs
call
jmp
dec
inc
sbb
xor
jae
imul
jmp
inc
shl
scas
mov
xchg
adc
lods
dec
jae
outs
jb
imul
ds
dec
jmp
mov
movs
add
cmp
add
fld
mov
test
out
mov
neg
jo
xor
mov
dec
fwait
loopne
ficomp
mov
loopne
push
push
cmp
int3
fild
xchg
(bad)
mov
cmc
fcom
adc
aaa
stos
sbb
sub
pop
xor
add
and
popf
sti
cwde
sub
lods
call
ja
enter
loopne
mov
ficom
rcl
aam
jecxz
cmp
dec
xchg
xlat
data16
iret
sbb
imul
fstp
inc
lock
push
cwde
je
push
dec
and
and
div
mov
pop
add
test
xchg
or
jmp
outs
les
xchg
aam
adc
mov
imul
ror
push
(bad)
pop
mov
and
shr
or
es
daa
test
mov
mov
xor
xchg
loopne
and
inc
pusha
mov
inc
aad
xor
aam
push
rol
cld
pop
push
(bad)
rcr
data16
push
push
mov
popf
sub
popa
lods
test
lock
adc
xor
or
sub
sti
shl
fstp
jmp
mov
push
jnp
cmp
xchg
(bad)
adc
sbb
ret
add
inc
(bad)
test
xor
gs
sbb
cmp
dec
loop
sub
shr
test
fld
sahf
mov
cmps
fistp
sbb
ins
mov
and
mov
test
cs
ror
test
jmp
sbb
inc
push
in
inc
mov
xlat
mov
pause
mov
pop
ins
in
mov
hlt
adc
ins
mov
mov
shl
cmp
retf
sbb
mov
jo
cld
pop
jmp
sub
fs
sub
sahf
add
sub
cmps
dec
ja
sub
dec
(bad)
cmp
cmc
pop
aaa
adc
sbb
lock
jmp
and
sub
lock
pop
and
and
mov
enter
push
int3
and
(bad)
fstp
pop
mov
fadd
cmp
test
push
pop
mov
lock
or
pop
stos
out
enter
dec
scas
mov
mov
dec
and
inc
jle
jmp
inc
stos
icebp
ds
xor
and
lods
mov
les
pop
pop
push
push
cmc
inc
shl
xchg
mov
fimul
aam
push
rcl
push
repz
lods
jae
and
(bad)
xchg
ret
shl
xchg
loop
mov
xchg
xor
inc
add
xchg
push
out
add
test
cmps
les
or
and
es
pop
adc
in
adc
sub
lock
xor
cmps
daa
adc
fcmovb
fwait
retf
(bad)
fwait
jns
shl
mov
sar
adc
jnp
jl
int3
jl
dec
xlat
sbb
pop
mov
in
ja
lods
pop
adc
daa
jg
adc
xchg
push
ss
cmp
xor
jle
lea
xor
cmp
xchg
movs
outs
mov
push
mov
or
rol
pop
jmp
rol
mov
loope
inc
jmp
inc
xchg
xor
jo
add
scas
ror
arpl
jae
js
jmp
in
mov
test
popa
cmp
mov
jo
aam
add
sti
xchg
mov
sbb
adc
ret
or
(bad)
(bad)
push
mov
sbb
aad
in
or
outs
aaa
sti
add
sbb
pop
retf
pop
mov
mov
push
cmp
mov
mov
sbb
jg
mov
out
inc
int
clc
cmc
push
(bad)
pop
add
jmp
push
xor
sub
daa
and
retf
js
mov
pop
aaa
inc
js
push
add
dec
jecxz
sbb
ins
pop
(bad)
pop
inc
in
(bad)
out
and
sar
ss
lds
cld
mov
lahf
inc
mov
push
mov
and
and
out
std
rcl
pop
lock
sbb
pop
push
mov
mov
push
fisubr
sahf
dec
fild
das
rcl
(bad)
add
shr
rcr
call
add
dec
je
fcmovbe
inc
div
mov
mov
jge
mov
in
dec
inc
hlt
ja
add
popa
add
ficomp
and
(bad)
mov
hlt
sub
leave
outs
cmp
popa
xchg
mov
and
and
or
jb
dec
mov
push
les
lds
fstp
xor
push
repnz
pushf
dec
add
pusha
xchg
pop
xor
or
adc
push
push
mov
inc
mov
(bad)
jge
loopne
sbb
addr16
ja
ds
xchg
push
jns
sub
cmp
adc
and
jnp
enter
inc
mov
and
bound
sbb
int3
mov
ret
inc
lahf
pop
pop
xor
pop
int
addr16
and
sub
cmp
dec
xlat
pop
rcl
add
adc
xchg
cmp
fdivr
or
and
and
xor
sub
mov
inc
lods
int3
sub
mov
cdq
mov
mov
mov
xor
jg
pusha
push
mov
shl
add
(bad)
inc
inc
jne
lds
cmp
push
sub
dec
lds
mov
mov
xor
jo
stos
test
loop
mov
mov
ret
mov
ds
stc
int
(bad)
xchg
loopne
mov
ja
rcr
pop
adc
out
inc
call
pop
retf
sub
ja
(bad)
mov
xor
push
aaa
cmp
les
jae
push
leave
inc
js
call
sub
(bad)
inc
loop
add
sub
jne
sti
dec
cdq
dec
push
add
mov
pop
sub
inc
(bad)
push
test
ss
push
jnp
sub
jno
pop
or
push
aaa
int3
mov
push
call
dec
addr16
jmp
mov
clc
dec
pop
lods
push
in
shl
std
int3
mov
cmp
fnstsw
jne
repz
dec
or
cld
mov
fs
push
test
leave
pop
fdivr
std
jmp
adc
mov
push
xchg
jecxz
xchg
pusha
(bad)
mov
inc
jnp
cmp
dec
stos
and
hlt
mov
lea
leave
jle
ret
aaa
push
pushf
fmul
popa
mov
out
jecxz
xchg
sbb
sub
jge
jae
jmp
ss
js
jbe
ss
out
je
jmp
pop
cdq
lds
add
push
(bad)
mov
fist
fcomp
xchg
mov
and
push
jmp
cmps
sbb
cdq
or
sbb
add
dec
ffreep
sub
sahf
push
mov
mov
jecxz
and
pop
and
cmp
xchg
pop
mov
or
adc
fcom
lea
inc
sub
sub
out
adc
jae
into
outs
mov
jbe
inc
cmp
cld
add
push
mov
clc
adc
arpl
add
push
js
addr16
in
add
stos
mov
xor
jo
cmp
(bad)
retf
jge
pop
and
outs
xchg
stos
shr
int
ss
in
mov
and
scas
dec
pop
add
mov
sub
cs
sbb
rcl
jp
sbb
aaa
out
inc
pushf
pop
in
pop
fld
cmps
cmp
mov
push
push
xchg
icebp
inc
jno
inc
mov
and
push
std
dec
ss
mov
add
inc
jne
mov
int
adc
and
xchg
pop
pop
and
push
mov
ror
fisub
push
stos
mov
or
dec
pop
sub
push
pushf
jne
jbe
xchg
pop
sbb
ins
shl
sbb
dec
xor
pop
ret
clc
jmp
mov
int
addr16
test
xchg
pop
xchg
lods
jle
data16
sbb
scas
pop
test
and
cdq
mov
test
sbb
cld
inc
push
sar
pop
push
pusha
inc
aam
dec
repz
and
pop
or
sub
pop
(bad)
jg
mov
and
shl
jno
dec
dec
or
inc
inc
int3
push
pusha
sub
and
mov
scas
push
bound
or
mov
mov
popa
dec
jg
call
les
sbb
out
or
sbb
push
daa
sbb
mov
(bad)
scas
bound
jl
ins
scas
mov
addr16
push
adc
call
push
mov
cmp
pop
inc
mov
test
lods
cld
mov
mov
mov
out
push
loopne
mov
push
pop
stc
mov
(bad)
sbb
dec
into
gs
in
add
rol
adc
es
mov
cmp
xlat
scas
mov
push
and
fcmovnbe
xor
cdq
jnp
retf
xchg
imul
pop
mov
fist
xlat
and
lods
push
(bad)
aam
out
sbb
xchg
cmp
cmp
cmps
push
ds
in
and
push
(bad)
aad
cmp
cdq
int
mov
jmp
rcr
ror
mov
enter
pusha
push
popf
add
jbe
stos
pop
repnz
mov
loop
nop
add
clc
pop
mov
clc
pop
test
ficom
xor
ja
add
push
push
sar
push
shl
add
cmp
mov
ja
jmp
and
mov
xchg
pop
out
ret
xchg
mov
push
out
mov
push
xor
lea
jns
mov
xchg
cmp
pop
jge
cmp
push
xor
mov
pop
cmp
dec
lea
out
cs
pop
ins
(bad)
push
ret
pop
arpl
dec
fadd
fadd
inc
ds
xchg
pushf
or
mov
arpl
jns
adc
fistp
in
leave
xchg
sbb
cmp
sbb
sbb
mov
inc
adc
leave
dec
sub
push
jo
rcr
iret
sub
jg
ds
out
inc
or
jl
fmul
push
push
enter
out
adc
dec
xlat
sub
xor
shl
inc
add
ds
xchg
ins
rcr
jae
leave
cmp
out
push
push
add
ds
mov
ins
pop
pop
sbb
pop
jns
not
lahf
fstp
in
pop
or
pop
fst
mov
cmc
in
ror
xchg
push
xlat
cld
or
(bad)
sub
and
inc
or
repz
and
mov
push
scas
sbb
mov
and
clc
mov
pushf
movs
sbb
stos
(bad)
arpl
jl
jo
jnp
and
dec
rol
or
aaa
xchg
xchg
popf
cmps
ret
test
sbb
push
push
arpl
jae
mov
add
ja
and
inc
retf
jbe
out
(bad)
cmc
cmps
popa
test
stos
sar
(bad)
arpl
inc
repnz
jmp
sbb
js
(bad)
(bad)
(bad)
dec
add
or
sbb
adc
jl
add
shr
pop
mov
pop
inc
out
add
(bad)
in
and
popf
mov
retf
jne
fidiv
(bad)
fidiv
and
mov
jnp
imul
sbb
jge
pushf
je
pop
mov
push
cwde
stos
add
cmp
cmp
daa
xchg
ja
ins
sub
xchg
mov
or
cmp
or
ins
aam
arpl
mov
fild
mov
mov
in
xlat
test
or
sbb
and
adc
mov
leave
stos
loope
mov
inc
rol
sbb
mov
push
int3
scas
mov
test
push
mov
push
mov
xchg
std
adc
and
cwde
rcr
and
aaa
mul
adc
inc
sbb
imul
jge
add
push
int3
xchg
dec
clc
pushf
pop
out
int
leave
test
fsub
test
shr
inc
push
cmps
sti
push
push
fwait
je
jp
stos
ja
and
inc
fst
push
mov
mov
loope
idiv
or
add
call
adc
push
mov
jp
or
mov
sub
call
ja
rcr
pop
jne
cmp
push
cmp
mov
xchg
add
xchg
cmc
mov
push
jmp
addr16
sub
iret
adc
xchg
jne
sbb
inc
and
xor
jne
pop
aam
sub
fnstcw
gs
push
int3
cmp
mov
and
adc
jle
fwait
fwait
cdq
mov
dec
ins
test
add
add
idiv
lahf
pop
add
cmp
fist
or
xchg
stos
aaa
data16
(bad)
push
sub
fiadd
push
(bad)
or
push
mov
jae
mov
or
xchg
dec
sub
dec
fimul
pop
(bad)
cmps
pop
sar
mov
or
dec
addr16
push
inc
enter
outs
pop
adc
popf
aam
dec
mov
(bad)
ins
or
mov
sbb
or
push
push
cmp
(bad)
adc
mov
addr16
lods
mov
dec
cmp
cs
pop
jmp
pushf
mov
aaa
xor
int
int3
xor
add
sub
ret
pop
pusha
push
ret
mov
and
adc
shl
mov
mov
mov
sbb
push
leave
push
cwde
or
imul
push
xchg
dec
leave
aaa
dec
or
rcr
movs
imul
or
mov
fiadd
or
lds
inc
shl
adc
stos
push
push
sti
call
adc
dec
arpl
lock
pop
and
dec
icebp
mov
dec
and
imul
(bad)
and
sub
xor
adc
inc
test
push
es
jle
mov
push
int
push
push
dec
pop
cmp
scas
jmp
cmp
or
jle
jnp
mov
fcmovu
mov
je
push
mul
lds
inc
fild
aas
and
cmps
xor
loop
retf
imul
xlat
in
add
push
push
add
xor
jb
dec
fwait
add
pop
sbb
xchg
sub
lods
mov
fbstp
sub
imul
push
fldcw
retf
cmp
inc
and
(bad)
shl
add
jmp
(bad)
fwait
rcl
fs
and
aas
cli
imul
push
retf
or
sub
mov
imul
loopne
xchg
mov
push
mul
add
lock
ret
jo
jg
jnp
clc
aas
fadd
and
xchg
test
xchg
add
out
push
js
pop
mov
sub
leave
lea
xor
ss
mov
adc
sub
das
in
cwde
xchg
sbb
mov
in
jne
push
add
push
fisub
pop
or
mov
jo
fisttp
stc
mov
shl
clc
std
add
sbb
push
or
pushf
add
loope
mov
push
sub
sbb
mov
pushf
or
adc
cmp
shl
pop
dec
dec
scas
adc
jge
adc
cdq
or
fidiv
loopne
mov
pushf
xor
xchg
stos
loope
xchg
pushf
jbe
pop
sbb
pop
jo
or
fcomp
out
fnsave
mov
int3
(bad)
fldenv
(bad)
int3
jle
xchg
mov
mov
outs
jge
call
arpl
mov
scas
pushf
aad
aas
cld
cdq
dec
mov
cmp
ja
not
add
in
cmc
scas
fwait
xlat
in
dec
out
dec
retf
push
shl
cdq
add
out
or
nop
jl
xchg
inc
(bad)
sbb
out
sbb
xor
(bad)
push
jmp
shr
retf
in
clc
jb
cmp
lahf
mov
(bad)
(bad)
popa
not
inc
icebp
sub
sbb
cwde
or
fadd
in
adc
pop
lea
jecxz
xor
out
int3
arpl
(bad)
mov
les
mov
fadd
push
retf
stos
push
mov
imul
retf
pop
stc
sti
mov
gs
pop
mov
push
(bad)
mov
pop
int3
aas
inc
aad
add
cmp
xlat
cmp
adc
iret
rcl
push
(bad)
sbb
inc
mov
sbb
pop
pop
lock
loopne
repz
ins
arpl
jp
dec
sar
(bad)
fisubr
dec
pop
xchg
arpl
mov
loopne
pop
pop
movs
adc
imul
(bad)
iret
fild
sub
mov
xchg
sub
loop
imul
jnp
mov
leave
fimul
inc
dec
lea
add
dec
movs
cmps
pop
push
mov
jno
jge
push
dec
mov
stc
jo
out
ins
xchg
cmp
mov
loopne
test
fucom
and
inc
fprem1
daa
adc
push
outs
inc
xchg
mov
push
sti
inc
fwait
arpl
int
push
fsubr
daa
pop
xor
out
stos
mov
scas
mov
jge
mov
test
or
cmps
jmp
xchg
mov
xchg
mov
call
mov
cmc
fild
and
and
cli
pop
(bad)
fwait
mov
fistp
jp
stos
cli
and
dec
not
and
push
or
inc
mov
sub
xchg
adc
call
add
lods
dec
xor
pop
cmps
cwde
mov
jnp
mov
idiv
fst
mov
je
int3
dec
outs
mov
or
pop
add
(bad)
jb
mov
xor
mov
pop
mov
jb
mov
xor
sbb
sbb
xchg
or
in
push
mov
push
dec
ins
mov
pop
jns
cwde
xor
jp
or
xor
mov
cmp
xchg
std
leave
cld
mov
stc
in
dec
(bad)
cld
out
push
loope
mov
add
mov
sub
daa
and
fld
std
gs
(bad)
push
sub
mov
dec
push
jecxz
push
cmp
and
pop
mov
(bad)
mov
mov
adc
lahf
shr
pop
popf
dec
cmp
loopne
dec
into
pop
and
aad
sbb
cmp
pop
sbb
mov
and
nop
push
dec
push
jmp
shl
fsub
mov
fsubr
mov
dec
pop
out
addr16
repnz
stos
cli
sub
call
sbb
icebp
dec
bnd
rcr
pop
mov
adc
mov
jnp
into
jbe
pop
loopne
daa
cld
cdq
call
cld
call
and
imul
mov
(bad)
jne
pop
stos
ins
fnsave
jmp
inc
inc
mov
adc
sbb
fimul
aaa
ret
les
xor
push
ja
mov
fld
adc
mov
push
lods
sbb
sbb
mov
mov
sahf
fistp
pusha
jmp
mov
ret
(bad)
mov
mov
and
and
jmp
test
mov
jge
push
jno
mov
add
out
xchg
jmp
add
sbb
fisttp
cmp
sti
jnp
and
jbe
pop
bound
add
iret
sbb
adc
cmps
push
push
pop
add
fwait
add
xor
pop
repz
pop
aaa
adc
pop
ds
addr16
imul
sub
adc
mov
ficom
clc
sub
sbb
shl
retf
neg
dec
sar
imul
sbb
(bad)
loope
movups
mov
call
xchg
push
pushf
push
sub
in
push
outs
jne
or
mov
popa
xchg
scas
inc
test
sbb
rol
daa
mul
dec
fdivr
(bad)
inc
mov
fbld
and
daa
and
les
add
pop
xchg
je
out
pop
add
imul
fidivr
ficom
int3
sub
pop
jae
popf
dec
mov
cld
mov
(bad)
pop
ret
arpl
adc
mov
into
ret
fcomp
sbb
mov
mov
sub
in
std
mov
dec
lock
cmp
out
or
stc
mov
and
mov
lea
adc
loop
(bad)
rcl
and
idiv
xchg
dec
ins
in
dec
test
loop
xchg
xchg
jmp
loopne
adc
rcr
add
inc
rol
cmps
adc
mov
mov
xchg
push
add
inc
mov
dec
sbb
lds
fldenv
mov
sbb
pop
popa
pop
jl
pop
jno
dec
addr16
lods
addr16
adc
mov
fstp
lahf
push
sub
aaa
push
cli
mov
test
sub
push
sti
jbe
int3
add
nop
mov
loope
add
jmp
ja
stos
imul
dec
fnstsw
rcl
dec
cmps
icebp
sub
xchg
push
fistp
mov
movs
(bad)
out
pop
dec
dec
loop
mov
jb
pop
sub
lock
jae
jae
mov
fcom
xchg
sbb
arpl
into
js
cmp
aaa
loop
inc
mov
or
hlt
sar
dec
mov
lock
push
loopne
fsub
push
push
dec
sbb
in
cmp
sbb
fbstp
xor
mov
mov
je
adc
mov
fstp
sbb
daa
cwde
shr
or
cli
inc
cmp
je
mov
lods
pusha
inc
and
cmps
sub
rcl
stos
and
ins
and
xchg
mov
push
imul
adc
cmp
ficom
cld
in
add
(bad)
loope
rcr
pop
add
xchg
cmp
mov
jle
imul
retf
push
lds
pop
mov
lods
in
adc
push
aaa
fwait
add
mov
cwde
push
stos
into
pop
and
fnstsw
mov
sbb
ret
dec
sbb
mov
popf
imul
jle
iret
icebp
imul
mov
loopne
jb
fucomi
mov
popa
ret
(bad)
stc
cmp
fldlg2
clc
adc
pop
neg
fdivrp
daa
jnp
ficomp
popf
jb
dec
mov
xchg
cdq
mov
pop
mov
fcomp
xchg
inc
sub
xchg
rcr
ja
push
xor
pop
sti
mov
lahf
cmp
mov
push
xchg
iret
fist
push
jle
dec
sub
push
inc
pop
int
mov
or
imul
scas
xor
and
xchg
in
into
stos
cwde
pushf
les
or
mov
(bad)
enter
jb
xchg
sbb
test
sbb
data16
mov
pop
push
imul
jmp
inc
cmp
addr16
add
scas
fstp
ins
rcr
pop
push
pop
pop
ins
inc
stc
mov
sub
xchg
mov
push
push
adc
and
(bad)
pop
jnp
push
sub
xchg
cmp
ins
out
in
ror
not
cmps
sbb
jb
pop
test
dec
mov
lahf
fadd
sub
xchg
add
mov
leave
jo
mov
mov
dec
les
dec
pop
jp
mov
addr16
imul
fst
push
int3
sbb
in
dec
dec
mov
cdq
icebp
mov
adc
dec
push
sbb
xchg
add
fadd
test
imul
jbe
sub
rol
pop
sti
xchg
js
jmp
pop
mov
loope
pop
push
out
cs
mov
mov
mov
lock
(bad)
dec
js
adc
fsubr
push
push
xor
call
iret
mov
out
out
inc
jnp
mov
rcl
push
inc
loop
push
mov
imul
sub
gs
dec
out
cdq
xchg
pop
pop
pushf
sahf
push
jns
inc
jne
add
sbb
stc
dec
in
in
and
ins
sub
pop
sub
pop
cmp
mov
hlt
jno
hlt
push
dec
mov
arpl
push
dec
fwait
bound
movs
mov
nop
gs
mov
aaa
cmps
aam
xchg
xlat
xor
push
pop
xor
cs
sbb
daa
imul
into
popa
and
dec
push
dec
sahf
data16
mov
imul
call
fwait
cmps
dec
imul
aad
popf
in
mov
or
inc
sub
xchg
pushf
aam
es
out
lock
lock
push
in
gs
lahf
or
inc
mov
lods
rol
out
jge
xlat
jg
sbb
popf
loop
mov
lea
pop
jae
mov
jge
bound
jl
push
jle
cmp
aam
jle
push
idiv
xchg
dec
dec
rcl
sbb
shr
out
dec
jnp
xchg
inc
mov
xlat
mov
scas
mov
in
pop
add
cmova
mov
test
xchg
or
icebp
mov
sbb
cli
add
gs
sub
adc
jns
fadd
(bad)
mov
xor
or
jmp
sbb
dec
mov
ds
add
add
cmp
js
sbb
gs
cs
adc
(bad)
int3
adc
ror
inc
dec
daa
cwde
shl
dec
out
fdiv
lods
in
and
jo
dec
pushf
neg
sti
add
xor
js
dec
push
pop
push
icebp
mov
scas
xchg
push
aam
cmp
shl
jo
or
dec
clc
cmp
sbb
test
push
int
mov
sub
inc
or
cmp
or
mov
pop
pop
(bad)
xor
lahf
push
jae
and
fneni(8087
and
cwde
dec
std
bound
gs
push
aam
push
aad
pop
pushf
cmp
dec
pop
aas
push
pop
outs
loopne
sbb
sbb
dec
xor
mov
hlt
or
push
sar
mov
sub
dec
xchg
lock
pop
xchg
adc
xor
rcr
push
and
repnz
gs
jmp
xchg
mov
loope
aad
not
and
enter
int3
movs
es
dec
pushf
ss
jne
cdq
sub
pop
cmp
pop
xchg
jmp
pop
out
inc
enter
adc
dec
push
mov
xchg
cld
out
loopne
mov
push
push
sub
or
fs
sbb
lods
or
pop
pop
test
jmp
cmps
and
dec
outs
clc
fs
dec
lea
add
std
int3
sbb
jmp
arpl
mov
mov
mov
xchg
add
adc
or
pop
stc
scas
in
push
add
aam
mov
fidiv
push
das
jnp
ins
ror
aas
arpl
les
mov
pushf
(bad)
(bad)
jmp
sub
dec
xchg
outs
iret
dec
or
les
add
cmp
(bad)
push
out
jl
lahf
cmp
sub
jle
loopne
or
mov
(bad)
loopne
pop
in
and
loopne
int3
pushf
bound
push
cmp
dec
and
xchg
fst
pop
inc
ffreep
jmp
push
stos
push
or
cld
add
enter
xor
inc
push
fmul
daa
inc
ret
and
and
add
jl
fsubr
mov
aam
fistp
imul
sbb
and
(bad)
leave
pop
imul
test
ror
mov
sub
cmp
mov
nop
out
aam
sub
mov
or
aam
xor
sub
pop
xor
mov
(bad)
xchg
or
and
sub
call
mov
dec
mov
into
fstp
pop
repz
mov
pop
xor
dec
dec
aam
lds
retf
xor
cmp
cmp
pop
jle
fbstp
jp
(bad)
test
gs
lock
outs
fisttp
or
imul
inc
js
push
vmread
in
rol
idiv
out
icebp
sub
ss
in
das
dec
xor
dec
out
jae
rcr
sbb
xchg
cmc
aaa
and
xchg
cmp
leave
xchg
ja
lock
paddusw
idiv
mov
loop
fdivr
jmp
imul
loopne
sub
aaa
mov
into
jg
xor
xchg
cld
inc
in
popf
cmp
lahf
or
mov
cmps
mov
push
jmp
dec
sub
mov
xchg
adc
xchg
ss
stos
pop
mov
mov
and
(bad)
jle
(bad)
cld
xchg
popa
(bad)
outs
out
inc
cmp
jle
mov
cmp
fstp
sbb
dec
mov
pop
xchg
int
dec
push
add
cmp
jle
and
js
popa
hlt
and
pop
into
ins
ret
and
add
das
jmp
hlt
(bad)
into
add
retf
out
test
mov
clc
and
mov
mov
push
das
call
loope
(bad)
jp
xor
or
pop
je
inc
dec
jle
pop
push
or
les
test
mul
imul
sub
aad
push
jle
dec
lahf
(bad)
jmp
out
mov
and
push
and
dec
fwait
adc
or
loop
sub
cmp
and
lock
clc
pop
out
enter
fist
xchg
dec
scas
nop
mov
push
ds
xchg
jnp
retf
cmp
daa
cmc
call
jo
jb
mov
add
lods
mov
xlat
lds
cmp
scas
cdq
sub
aam
inc
cmp
aad
arpl
stc
fdiv
mov
push
shl
push
jl
daa
or
mov
cmp
inc
out
sub
pop
arpl
ins
mov
and
cmp
cs
sbb
and
imul
pushf
sahf
lock
ror
leave
mov
repnz
pop
mov
lahf
sub
fst
cmp
stos
mov
mov
cmp
push
out
arpl
fidivr
cmp
shl
loop
push
push
pop
xchg
jb
sbb
push
shl
pop
popf
add
inc
js
int3
sub
pop
in
scas
cwde
jno
daa
leave
ror
cmp
lahf
mov
sbb
mov
test
aad
push
jb
aaa
push
(bad)
(bad)
cld
sub
lahf
arpl
dec
cmovs
or
(bad)
mov
xchg
pushf
fld
or
inc
hlt
(bad)
das
pop
mov
sbb
xchg
shr
cmp
pop
jbe
in
aaa
mov
sbb
add
mov
mov
mov
(bad)
ins
push
cmc
sbb
ret
gs
jmp
cmp
imul
enter
xchg
pop
movs
and
arpl
or
fwait
dec
aam
xchg
scas
and
mov
xchg
das
lahf
xor
and
push
sbb
jmp
push
fwait
dec
(bad)
xlat
cmp
call
push
xchg
jp
mov
mov
push
jnp
and
xor
mov
mov
ins
aaa
js
pop
out
adc
test
jbe
jge
pop
cwde
popf
pop
jbe
pop
mov
mov
mov
into
fadd
cmp
div
sub
mov
adc
add
mov
arpl
(bad)
iret
leave
fadd
xor
dec
or
test
stos
mov
xor
jno
jmp
nop
dec
or
(bad)
xor
push
or
pop
mov
pop
xchg
pop
mov
dec
ret
aad
jmp
mov
js
cmp
fst
out
dec
push
addr16
sub
pop
cmp
dec
imul
movs
inc
nop
sub
push
sub
jp
adc
mov
xchg
push
test
dec
cdq
(bad)
pop
cmp
pop
cs
(bad)
stc
lods
mov
jl
pop
fidivr
jge
or
fmul
retf
mov
push
out
jb
pop
in
add
mov
push
sub
mov
sbb
or
dec
add
hlt
mov
xlat
enter
fisttp
loopne
mov
sti
inc
jne
pop
mov
mov
jno
div
retf
dec
xchg
lock
fist
cld
(bad)
push
aas
mov
push
dec
int3
pop
sbb
and
leave
jmp
popf
jo
cmp
adc
or
shl
mov
pop
shl
test
ror
jnp
scas
sub
fsubr
push
xchg
loopne
dec
dec
gs
mov
shr
mov
lea
inc
jae
fidiv
jle
add
sub
addr16
out
xchg
jmp
shl
out
ss
mov
imul
push
sbb
jns
add
and
dec
repz
gs
dec
mov
ret
xor
lahf
in
je
inc
test
inc
ror
cmps
dec
aas
ins
loope
or
div
ins
push
or
rol
and
inc
jnp
add
fimul
fild
xchg
mov
cmc
jns
sahf
pop
not
sar
div
sahf
nop
adc
adc
movs
mov
mov
xor
test
loope
pop
push
fcmovnb
sbb
mov
push
jns
or
cmp
inc
into
add
cmp
fs
push
xor
dec
fwait
ror
dec
jg
jge
inc
add
fucomi
out
pop
push
dec
out
pop
adc
xchg
mov
pop
(bad)
xchg
loop
lahf
loope
aam
add
push
popa
push
or
xchg
mov
mov
fild
xor
inc
js
sub
cli
or
idiv
add
je
mov
adc
dec
pop
inc
mov
and
xlat
jp
pop
icebp
jmp
adc
fnsave
arpl
(bad)
test
ins
fsubr
and
dec
push
int
and
and
rcr
jge
and
inc
mov
hlt
or
cli
(bad)
in
pop
fidivr
test
adc
add
inc
fistp
fldcw
sub
popf
mov
or
pop
jno
sbb
lods
inc
jne
hlt
sub
inc
mov
js
adc
and
or
inc
xor
stos
sbb
and
pop
mov
dec
and
mov
sub
lds
sbb
stos
inc
sahf
mov
psubusb
je
aaa
mov
add
jmp
adc
jnp
sub
inc
lock
fild
push
dec
mov
jo
xlat
jecxz
jl
loope
pop
aam
(bad)
and
cmp
add
push
ffreep
add
and
ror
pop
lods
add
mov
cmps
fmul
cld
gs
loopne
dec
push
pop
hlt
shl
sub
push
shl
push
pusha
daa
mov
mov
into
jmp
and
test
cmp
dec
icebp
mov
inc
retf
mov
ds
mov
cmp
add
icebp
(bad)
idiv
mov
es
pop
lock
dec
xlat
sbb
push
jnp
push
push
int3
enter
inc
cmp
sbb
push
cmps
stc
cmp
dec
sbb
loop
adc
add
imul
fwait
(bad)
mov
pop
push
or
mov
(bad)
push
fisttp
call
fsubr
xor
adc
out
pop
sub
stos
push
sbb
in
pop
sub
es
loop
push
mov
aam
push
ror
ret
add
fistp
stos
mov
lods
sti
and
call
repnz
ja
and
mov
call
cmp
mov
outs
dec
out
ss
pop
push
add
gs
scas
jmp
add
lahf
movs
pop
jo
cmps
xlat
pop
je
test
add
lock
daa
xor
ret
and
movs
push
jp
test
mov
dec
sbb
pop
test
xchg
mov
out
lods
xchg
sbb
call
lods
pusha
push
mov
ins
push
adc
pop
pop
jg
mov
cmp
mov
xor
movsx
sbb
push
aas
and
xor
pop
idiv
(bad)
outs
pop
daa
mov
(bad)
mov
cmc
dec
and
fld
or
pop
fnsave
lock
adc
shr
fst
dec
fs
jnp
in
add
sahf
sub
jg
inc
add
adc
push
xor
rol
mov
xlat
add
retf
into
adc
call
pop
dec
mov
mov
mov
push
add
ret
xor
(bad)
iret
stos
stc
retf
mov
push
or
add
and
aaa
xor
cmp
fld
sbb
inc
add
fiadd
mov
xchg
push
xchg
scas
pop
mov
int
inc
rcr
xor
gs
pushf
xchg
xor
outs
cwde
pop
aaa
stos
lea
(bad)
fiadd
enter
cmps
push
sub
ret
test
popa
rol
out
jl
add
cmp
and
inc
jnp
mov
in
cmp
test
out
stos
int3
into
push
int
retf
stos
and
rcl
dec
mov
adc
jge
push
adc
stos
shl
cli
xchg
test
(bad)
daa
mov
jp
mov
repnz
icebp
mov
add
enter
xchg
xchg
pop
mov
arpl
jno
xchg
sub
loope
in
jo
call
cmps
outs
inc
add
ds
jge
jbe
mov
xchg
ret
imul
ret
int3
push
pop
xchg
or
add
mov
addr16
aad
popa
jge
cmps
xchg
push
cmp
xor
push
loopne
add
mov
sahf
xor
fnstcw
pop
sub
les
loope
pop
and
adc
aaa
lock
add
clc
popa
sub
test
scas
sahf
sbb
ss
cmc
sub
or
mov
(bad)
imul
push
adc
stos
(bad)
jmp
imul
sbb
mov
retf
dec
(bad)
push
mov
add
mov
popf
lods
pop
mov
hlt
(bad)
dec
call
mov
jnp
adc
icebp
mov
pop
mov
sub
cld
adc
xor
mov
rol
sub
not
popa
push
adc
cmps
inc
mov
sti
push
lods
(bad)
int3
and
inc
mov
or
mov
jl
nop
shl
jns
add
stos
xchg
(bad)
int
mov
push
(bad)
jge
cdq
sub
stc
mov
int
movs
and
mov
stos
mov
sub
mov
jae
dec
mov
cmps
aaa
ret
jmp
fs
xchg
cdq
jmp
or
dec
dec
push
pop
xor
fcom
sbb
mov
cld
(bad)
fldcw
mov
out
js
adc
xor
scas
push
push
in
mul
cwde
sub
pushf
dec
jmp
div
jl
inc
jbe
pop
and
imul
mov
xchg
sbb
(bad)
mov
jle
mov
(bad)
mov
add
into
sub
in
aam
rcl
pop
jbe
or
pop
scas
mov
fsub
add
iret
repnz
shl
or
daa
icebp
sub
les
in
mov
mov
jne
(bad)
and
cmc
fwait
lea
push
daa
cmp
inc
push
push
lock
push
(bad)
sahf
jno
adc
imul
test
jmp
fwait
adc
out
(bad)
outs
cdq
cmp
int
inc
fs
jo
retf
ds
mov
inc
mov
adc
test
cli
and
cmp
push
das
and
jge
inc
es
or
test
and
mov
test
(bad)
push
or
fnsave
push
iret
dec
lock
popf
popf
inc
fdiv
sbb
mov
sub
pushf
push
xchg
and
fxam
mov
or
lea
push
sahf
pop
push
mov
sub
adc
mov
nop
into
mov
jge
lods
add
addr16
out
loope
push
jl
arpl
mov
jae
fsub
lahf
pop
aaa
clc
mov
pop
ror
clc
inc
push
push
xchg
jmp
xor
das
fild
scas
ds
add
xchg
pop
jl
mov
sub
pop
cmp
xchg
pop
or
repnz
ret
jp
outs
stos
into
hlt
dec
pusha
mov
jb
pop
pop
sbb
mov
arpl
xlat
(bad)
scas
loopne
aam
jg
outs
cmc
jg
movs
jmp
pop
stos
lahf
mul
dec
fist
ins
out
popf
push
xchg
jnp
cli
js
fiadd
(bad)
dec
test
dec
mov
imul
sbb
xchg
lock
arpl
xchg
cmp
loopne
jle
hlt
sub
push
movs
inc
pop
aas
jp
(bad)
jle
sbb
cdq
inc
add
pop
and
idiv
mov
sub
dec
aam
aas
idiv
jl
in
hlt
pop
imul
adc
ds
inc
fcomp
add
outs
cmp
mov
pop
sub
dec
mov
xor
sbb
ficomp
rol
or
jge
mov
xor
into
mov
test
pop
pop
aam
pop
lods
aaa
xor
(bad)
dec
pop
sbb
xchg
mov
pop
xlat
mov
inc
dec
cdq
jmp
and
cld
imul
stos
mov
xor
sub
sbb
cmp
sti
frstor
xor
cld
mov
stos
pop
fisub
test
repz
jne
and
inc
pop
enter
out
or
push
dec
lock
loope
int3
mov
mov
arpl
add
dec
mov
add
fs
rcr
sub
sahf
loop
mov
aas
lock
fs
adc
nop
fsubp
popf
adc
pop
sub
jno
or
pop
sbb
push
add
sub
repnz
sahf
mov
add
mov
cmc
cmps
enter
mov
lea
jne
inc
mov
test
or
dec
mov
adc
pop
addr16
mov
inc
mov
movs
push
enter
fucomp
mov
mov
pop
jg
mov
dec
aam
push
test
pop
jae
and
inc
enter
dec
int3
cmp
xor
push
sbb
mov
call
movs
xor
dec
xchg
int
mov
imul
das
mov
inc
ret
xor
sub
push
mov
xchg
outs
leave
add
das
mov
mov
ins
aam
fs
mov
jae
and
xchg
std
xchg
in
adc
cmp
sbb
dec
ins
loope
and
ss
and
movs
outs
mov
hlt
pop
les
cmp
mov
pusha
lock
cmp
ins
sub
fcom
cmps
cwde
(bad)
daa
and
in
imul
cmc
mov
push
loop
push
in
or
pop
jl
ins
mov
inc
pop
loop
(bad)
adc
lock
mov
add
(bad)
test
pop
lahf
mov
mov
mov
loopne
xchg
push
test
dec
stos
add
jmp
fidiv
jbe
out
or
fs
push
push
retf
pusha
sub
jbe
cmp
push
mov
fdivr
shr
jno
fmul
movs
mov
fiadd
in
(bad)
arpl
fidivr
mov
les
inc
aaa
hlt
pop
rcr
xor
je
nop
fwait
or
mov
cmp
or
stos
mov
dec
and
ins
inc
test
std
xlat
daa
retf
jno
jae
xlat
(bad)
push
int
mov
xchg
cmp
daa
std
xchg
and
mov
push
push
sbb
add
ffreep
inc
dec
aam
out
test
mov
mov
fxch
pushf
xor
dec
pop
jecxz
cld
pop
inc
(bad)
imul
retf
int3
pusha
pop
jecxz
push
fwait
int3
push
hlt
not
add
call
xchg
pusha
setge
xor
shl
push
push
mov
pop
sbb
pop
rol
xchg
cwde
jmp
stc
shr
loope
mov
or
push
sub
retf
mov
getsec
cmp
rcl
movs
jecxz
adc
not
push
jge
fs
fist
xchg
pop
dec
dec
sub
stos
xor
out
mov
jl
jmp
arpl
fdecstp
aam
jge
inc
stc
addr16
and
pop
jp
gs
inc
stc
mov
mov
jbe
jl
in
add
and
stos
pop
(bad)
jl
out
add
rcl
sbb
daa
ins
mov
mov
jmp
pop
sub
push
popf
jbe
xor
xchg
jge
inc
mov
scas
lock
ficomp
mov
adc
rcl
sbb
(bad)
shr
mov
sub
mov
push
lahf
in
xchg
sbb
(bad)
stc
popf
cmps
dec
fldcw
in
inc
int
and
fstp
cdq
or
scas
sbb
and
and
test
push
push
shl
push
ret
xchg
adc
lock
and
(bad)
out
fsub
dec
jmp
js
clc
sbb
mov
aaa
aam
or
enter
(bad)
out
mov
xor
sub
cmp
retf
in
pop
mov
pop
ret
movs
xchg
call
pop
cmp
outs
jo
std
xchg
add
mov
cmp
jmp
cmp
mov
xor
push
push
idiv
cld
or
jmp
shl
mov
sbb
neg
mov
je
sti
jmp
sbb
fs
daa
mov
daa
repnz
scas
sbb
bnd
pop
mov
and
mov
loopne
shl
xor
out
in
mov
ret
xchg
stc
cmp
in
sub
popa
(bad)
out
cmp
popf
dec
pop
cmp
jge
xchg
enter
test
xchg
lock
sbb
and
(bad)
mov
jmp
rol
fdiv
push
adc
sub
xor
fidiv
pop
or
jns
adc
nop/reserved
cmp
add
aad
cmp
push
dec
aaa
or
test
pop
in
add
clc
mov
xor
loopne
jns
or
push
faddp
in
adc
loopne
gs
bound
xor
push
sub
cmp
push
rcr
std
push
retf
(bad)
add
sbb
or
add
hlt
lods
frstor
dec
(bad)
loopne
sub
aad
imul
fcomp
(bad)
out
adc
inc
and
ja
inc
inc
inc
(bad)
push
ret
ds
int
sbb
ror
mov
adc
jl
out
das
stos
and
repnz
inc
iret
xor
xchg
and
mov
mov
(bad)
fmul
enter
sahf
scas
mov
jno
or
mov
test
clc
mov
adc
call
inc
cmc
and
jns
xchg
addr16
cwde
xchg
pop
sbb
cwde
pop
sbb
stos
out
push
dec
std
retf
out
cld
pop
out
je
push
push
mov
push
fnstcw
pop
into
pop
adc
inc
pop
or
xlat
xchg
fwait
push
and
mov
setnp
mov
aas
int3
ss
outs
fwait
fwait
or
jle
pop
imul
fucomi
mov
sar
mov
mov
and
loope
frstor
movs
std
jge
enter
lods
in
mov
add
add
sahf
or
jbe
pop
pop
and
fwait
push
cmp
std
mov
mov
test
xor
or
push
mov
mov
push
test
sbb
cmps
xchg
addr16
jle
pushf
xor
inc
loope
pop
test
ds
sbb
pop
mov
mov
leavew
pop
and
jmp
fwait
rol
cmp
cwde
pop
adc
xchg
or
and
cwde
pop
mov
test
imul
fwait
cs
xchg
int3
inc
lds
push
and
out
pop
xchg
and
xchg
pusha
jnp
or
in
push
in
imul
dec
(bad)
sub
push
pop
jae
fsubrp
push
mov
jb
pusha
movs
cwde
sbb
fisttp
fcomp
and
mov
add
mov
jae
mov
pop
cmps
cld
bound
lea
mov
in
xor
(bad)
in
mov
pushf
(bad)
pop
fwait
lea
pop
outs
rol
push
and
jl
(bad)
test
fisubr
ja
dec
jb
aad
inc
or
sahf
pusha
pop
sub
loopne
sbb
test
inc
or
and
push
scas
xchg
mov
loop
push
sub
mov
mov
dec
test
mov
pop
xor
arpl
int3
je
idiv
push
sar
icebp
int
enter
cwde
xchg
lock
adc
pushf
push
clc
add
xchg
aas
inc
iret
cmp
pusha
and
add
push
pop
sahf
pop
repz
add
xor
(bad)
jmp
jno
pop
inc
fcom
das
jmp
(bad)
in
push
loopne
or
add
cmp
cmp
push
mov
nop
cld
mov
test
pop
mov
out
aam
add
(bad)
jbe
test
xchg
mov
ins
dec
int
iret
jmp
fstp
(bad)
fucom
arpl
mov
inc
xchg
inc
sar
(bad)
std
test
icebp
and
xchg
cs
retf
jmp
aaa
(bad)
pop
adc
xor
stc
dec
adc
sub
out
int
(bad)
frstor
aaa
mov
(bad)
jmp
arpl
es
fbstp
mov
cwde
fs
fwait
jmp
scas
movs
cmp
add
gs
mov
adc
fwait
push
inc
mov
outs
pop
push
xchg
push
fild
int
xchg
inc
jle
jle
icebp
lock
scas
xor
bnd
shr
movs
dec
popf
cwde
mov
sbb
push
lea
jnp
xor
nop
mov
push
nop
adc
push
idiv
jmp
adc
cli
scas
ror
jo
(bad)
std
add
(bad)
loope
jbe
shr
pop
dec
outs
inc
fiadd
aaa
add
les
push
les
(bad)
out
jle
sti
fcomp
mov
or
mov
mov
cmp
dec
push
push
rol
lds
mov
bound
into
stc
in
(bad)
out
push
pop
stos
mov
push
adc
jns
fild
adc
bound
test
inc
fcomp
sbb
add
jle
push
cmp
test
dec
repnz
sbb
lods
out
stc
mov
aad
mov
dec
and
call
inc
cmp
das
mov
gs
xchg
push
bound
mov
and
xchg
stos
icebp
xchg
adc
and
sbb
stos
add
fdiv
cdq
aad
arpl
sub
sbb
jbe
dec
dec
loope
sti
cmp
dec
mov
int
cmps
xchg
mov
iret
sar
jecxz
sub
(bad)
in
cmp
mov
push
in
mov
lahf
fcomp
shl
nop
out
ret
inc
jle
mov
push
test
push
repz
sub
neg
popa
pop
ja
and
xchg
sbb
repz
outs
xor
jmp
sub
pop
pop
or
xor
pop
mov
jns
lds
or
dec
imul
arpl
arpl
fs
cld
and
or
call
or
movs
fadd
push
jno
in
arpl
shr
mov
cmp
pop
add
(bad)
push
call
pushf
push
dec
cmp
jmp
ins
adc
arpl
pop
fimul
pop
int3
sahf
cs
adc
(bad)
mov
das
jge
mov
dec
or
js
cli
fidivr
fnstenv
int
call
outs
call
push
popf
mov
adc
daa
aas
xor
les
mov
jp
inc
rdpmc
mov
pop
push
jo
mov
into
int3
or
xchg
(bad)
xor
std
out
jge
pop
ja
push
pop
inc
or
arpl
add
hlt
add
mov
xchg
stos
mov
push
push
pop
cmp
add
cmp
inc
push
imul
pop
movs
cmp
in
push
adc
popa
cmp
add
(bad)
and
inc
sub
dec
pop
inc
int3
mov
jp
mov
mov
sbb
ror
add
push
mov
mov
jbe
movs
int3
xlat
xchg
and
pusha
popa
shl
inc
sbb
outs
leave
gs
call
in
jno
pop
fnstcw
shl
mov
inc
and
add
xchg
(bad)
push
jb
or
pop
test
ss
push
mov
sub
retf
pop
xor
sub
xor
imul
ds
xor
cwde
stos
mov
enter
nop
pop
fsubr
xchg
imul
out
int3
stc
dec
rcr
(bad)
stos
sbb
mov
and
xchg
(bad)
lock
(bad)
lock
push
fild
loop
das
push
in
ror
add
lods
sbb
jb
loopne
ins
not
dec
jle
loope
nop
or
fcomp
pusha
daa
jbe
lods
jne
fs
daa
mov
cli
push
pop
ja
fist
push
mov
push
daa
out
jg
adc
push
add
popf
out
fadd
mov
pop
sub
cmp
adc
aam
dec
stos
pop
jg
stos
sbb
arpl
mov
in
fcomp
cld
mov
test
neg
mov
ret
inc
inc
push
cs
and
pop
add
fnstcw
test
dec
jnp
mov
push
mov
mov
call
enter
jns
jo
or
push
ja
xor
add
dec
pop
in
mov
push
dec
hlt
mov
dec
adc
inc
ja
mov
cmp
imul
jno
lods
dec
cmp
and
sbb
xchg
mov
fsubr
dec
pop
mov
adc
test
xor
pop
stos
push
xor
data16
xchg
and
dec
bound
out
addr16
mov
jmp
fistp
mov
pop
std
and
push
pop
shl
lock
inc
stc
xchg
jbe
(bad)
adc
sub
push
cdq
jnp
push
push
xor
rcr
in
fst
jmp
stos
popf
dec
push
xor
mov
ja
popf
mov
fs
gs
mov
sub
mov
and
sub
in
in
sub
popf
imul
pop
fld
cmps
daa
loope
in
jno
test
(bad)
pop
adc
(bad)
retf
pop
sbb
adc
and
cmp
add
dec
mov
je
xchg
push
cmp
sbb
test
icebp
and
pop
int3
ficomp
repnz
and
ds
cwde
push
pop
xchg
fwait
inc
(bad)
push
inc
xchg
mov
test
out
retf
mov
and
nop
xchg
dec
(bad)
ficomp
test
aad
add
push
pop
pop
inc
sbb
(bad)
or
pop
rcr
push
arpl
mov
test
push
mov
jge
sbb
shl
pop
add
int3
mov
mov
push
jnp
retf
outs
in
fcmovbe
mov
(bad)
sub
push
mov
or
sar
jmp
mov
lds
retf
mov
call
pusha
mov
ret
sbb
addr16
add
stc
adc
or
arpl
scas
and
jnp
inc
aam
add
mov
or
stos
sbb
iret
in
cmp
test
in
dec
les
leave
pop
cmp
leave
jns
cmp
push
jo
pop
(bad)
popa
sub
int3
cmp
ficomp
nop
inc
movs
repz
xchg
mov
shl
xchg
call
dec
stos
mov
push
hlt
dec
lods
adc
xchg
pop
leave
sbb
int3
outs
in
stos
add
xchg
cmc
sub
lds
pop
dec
push
add
xor
xor
xor
fdivr
repz
out
popa
and
pop
mov
pop
scas
popf
mov
add
loopne
fst
jb
loop
sub
pushf
pop
iret
rol
mov
out
sub
mov
les
mov
fcmovnbe
lock
jl
jl
xor
xor
cmps
in
(bad)
xchg
loop
cwde
adc
ror
aad
lock
ficom
jmp
mov
(bad)
lods
cli
jmp
inc
scas
fwait
cld
idiv
cmp
cdq
popa
int
retf
mul
add
int3
fild
jg
fxam
mov
mov
cld
and
or
sbb
out
repz
xor
aad
repnz
xchg
test
dec
movs
dec
int3
adc
push
xor
out
movs
add
enter
int3
jns
xor
daa
mov
enter
jno
mov
loopne
clc
pop
xchg
add
mov
ret
sbb
test
and
pop
mov
adc
mov
mov
jne
mov
hlt
fidivr
mov
(bad)
pushf
mov
cs
xchg
int
xchg
and
loopne
mov
lds
cmp
cs
rol
xchg
cli
inc
mov
pop
and
cmps
or
sbb
pop
sbb
mov
js
mov
mov
mov
pop
cmps
jge
jp
cld
fcomp
fwait
ins
jg
inc
cmp
stc
sti
pop
sbb
cmps
jp
jmp
add
add
adc
movs
mov
mov
gs
pop
sbb
cld
ins
push
push
cdq
int3
mov
mov
dec
mov
bound
nop
sub
fld
cs
xchg
cmp
ds
icebp
pop
iret
jno
inc
ss
imul
aad
adc
(bad)
cmp
dec
dec
movs
cs
mov
mov
arpl
js
rcl
adc
xor
ficom
jno
sub
ret
jno
ins
sub
push
adc
inc
sbb
dec
and
push
push
sti
(bad)
repz
out
add
inc
cmp
and
and
in
sub
into
xor
mov
or
push
outs
push
adc
cdq
lea
mov
arpl
imul
in
and
xor
push
(bad)
mov
lods
push
pop
mov
lahf
mov
mov
sbb
cmp
ficomp
dec
dec
jmp
xchg
test
dec
jno
cmps
cmp
lods
aam
mov
add
cmp
xchg
scas
in
dec
cmc
sub
leave
(bad)
aaa
mov
inc
push
adc
es
std
cld
out
xor
pushf
inc
mov
mov
pop
imul
mov
ret
mov
or
xchg
adc
fwait
and
inc
out
pop
dec
sub
pop
cdq
push
xchg
or
mov
pop
add
in
adc
and
loopne
inc
push
adc
adc
ins
push
sbb
cwde
pop
dec
in
lahf
sbb
(bad)
push
call
shr
push
enter
lock
addr16
ins
outs
mov
out
pop
imul
jns
test
stos
add
out
inc
test
xor
pop
sti
mov
outs
movs
mov
inc
pop
popf
out
(bad)
jns
lock
add
adc
call
xchg
mov
fldcw
mov
pop
dec
jp
push
shl
jecxz
push
std
mov
sbb
ror
daa
pop
inc
mov
fs
push
and
push
iret
js
dec
mov
in
pop
xchg
inc
jmp
fsub
inc
rcl
in
jmp
arpl
xchg
fld
cmps
mov
inc
push
loop
fstp
(bad)
(bad)
daa
add
inc
adc
cmp
int3
cmp
add
mov
inc
iret
cmp
hlt
popa
enter
pop
inc
xchg
mov
xchg
loopne
ret
fisubr
test
xchg
dec
mov
and
and
aam
pop
adc
or
dec
enter
fdiv
ret
call
mov
mov
loopne
ret
dec
stc
sub
cmovne
ins
mov
xchg
xchg
arpl
xchg
xor
xchg
ja
xchg
xchg
cmp
loope
fldcw
jmp
and
dec
in
and
sub
sbb
pop
inc
adc
cmp
mov
test
ins
arpl
dec
pop
xchg
int
pop
or
lahf
dec
sub
adc
sub
test
pop
ror
(bad)
rcr
mov
or
movs
repz
les
push
and
xchg
pushf
jp
hlt
ja
iret
or
aad
in
add
loop
sub
mov
mov
add
xor
(bad)
push
(bad)
cld
adc
stos
xchg
popa
or
cmc
retf
jmp
pop
sub
iret
and
in
int3
xor
ja
sub
cmps
scas
sbb
cld
addr16
es
aad
les
add
push
stos
call
mov
repz
out
mov
(bad)
les
add
sub
iret
daa
in
test
inc
enter
repnz
ret
std
pushf
fst
into
cmps
jno
mov
outs
pop
arpl
cmp
adc
(bad)
popa
and
mov
xchg
jp
sbb
dec
mov
pop
pop
add
add
enter
cli
jecxz
addr16
add
inc
pop
les
mov
push
xlat
xchg
xchg
jg
repnz
add
je
add
test
stos
adc
adc
bound
out
xchg
adc
nop
sbb
add
xor
cmp
leave
les
add
in
enter
fnstenv
ds
test
fild
push
stos
xchg
(bad)
sbb
scas
dec
(bad)
fst
mov
sti
adc
or
inc
hlt
fwait
pushf
fmulp
lea
lds
stc
test
add
and
rol
dec
mov
std
sbb
jae
hlt
mov
cs
mov
pop
das
lea
push
mov
jecxz
popf
repnz
fnstenv
fsub
out
inc
ret
push
ja
fcmovu
int
fadd
cmp
push
xchg
jmp
ss
(bad)
fwait
and
aam
out
loop
jns
(bad)
retf
mov
mov
aam
cmp
mov
call
nop
repnz
cmp
popf
fwait
ss
cmps
mov
push
mov
adc
mov
test
shl
scas
add
lds
icebp
cwde
mov
sub
imul
mov
dec
mov
mov
pusha
mov
mov
icebp
jle
mov
retf
xchg
xor
lock
aam
and
jmp
add
or
pushf
sub
and
xor
sub
xchg
arpl
arpl
test
movs
rol
daa
sub
pusha
(bad)
fistp
stc
sub
outs
cmp
(bad)
mov
fwait
jmp
add
inc
dec
add
jno
push
enter
shl
cmp
inc
(bad)
pop
ret
arpl
imul
add
jge
out
mov
aaa
test
add
pavgw
and
xchg
std
ud2
fld
rcl
push
and
jno
and
out
adc
ds
pop
cmp
or
repnz
pop
push
addr16
inc
pop
shr
add
lods
pop
daa
sbb
xchg
mov
cdq
pop
xchg
addr16
test
pop
stos
mov
jno
push
jle
(bad)
fbstp
adc
push
cwde
in
xchg
mov
cvtdq2ps
inc
fld
adc
xor
fild
dec
bound
fnsave
pop
data16
pop
sbb
ins
sar
adc
pop
push
xor
pop
xor
stc
mov
dec
sbb
xor
push
add
enter
and
loopne
stc
inc
ss
adc
sar
outs
sbb
int
mov
sbb
xlat
(bad)
pusha
pop
pop
push
inc
imul
(bad)
daa
popa
lahf
jg
mov
cmp
adc
cdq
add
sahf
fcom
clc
jg
or
mov
movs
and
pop
or
int3
cmps
push
xor
retf
push
and
les
cld
hlt
cmp
dec
push
dec
xchg
add
dec
mov
retf
icebp
mov
inc
inc
jp
xlat
pop
(bad)
sti
dec
lock
inc
mov
jbe
(bad)
call
push
mov
(bad)
cmp
lea
imul
mov
cmp
lds
push
dec
sbb
cmp
mov
mov
and
jg
lahf
or
cmp
stos
scas
fs
fild
stos
push
dec
dec
and
pop
pop
and
les
int3
(bad)
jno
mov
dec
dec
pushf
adc
in
cmp
not
push
jge
cwde
adc
ret
mov
dec
fisttp
stc
cdq
mov
lahf
inc
add
and
clc
xchg
sub
dec
sbb
and
loop
sub
(bad)
push
dec
adc
jmp
int
call
leave
inc
cmc
jnp
arpl
in
mov
stos
cld
mov
ret
or
jne
test
in
jle
lock
mov
dec
adc
push
fwait
add
ja
xor
cmp
cmp
aam
cmp
adc
bound
cs
pushf
je
addr16
sub
or
in
cmp
scas
aas
cs
push
in
clc
jg
and
adc
sbb
outs
mov
lds
xchg
sub
in
or
dec
jnp
sbb
adc
je
or
fwait
xchg
add
test
push
lea
push
(bad)
cs
jmp
pop
push
sti
stc
mov
sahf
jne
jo
call
mov
xchg
(bad)
sub
adc
pop
cdq
sub
and
xchg
shl
adc
xchg
in
mov
cld
sub
or
rcl
lods
aad
test
add
jp
loope
ins
jnp
jl
sub
retf
jl
popf
je
sbb
mov
inc
sub
adc
mov
sub
cmp
rcl
jmp
and
sub
outs
cmc
sub
std
mov
popf
test
lods
into
mov
jle
sbb
fldcw
rep
pop
xchg
jp
arpl
and
or
rcl
mov
inc
mov
cmp
jge
aaa
adc
call
dec
inc
fisubr
int3
bound
adc
pop
mov
xchg
mul
mov
es
pop
mov
xchg
je
adc
outs
adc
loopne
cmp
fld
lock
(bad)
sub
sbb
inc
pop
test
enter
xchg
add
add
jo
imul
adc
repnz
call
jb
adc
out
cmps
push
jnp
and
stc
push
mov
dec
neg
add
test
pop
and
(bad)
pop
pop
daa
add
test
int
dec
int3
xchg
dec
in
aaa
es
stc
inc
sub
lods
int
fstp
and
push
fstp
dec
add
mov
jp
and
lock
pop
xchg
cmps
(bad)
sub
add
push
jns
aad
and
or
mov
retf
gs
cmp
mov
fisttp
cs
enter
movs
pop
push
xor
sub
xchg
sub
add
aas
xchg
push
or
sub
daa
sub
mov
jecxz
inc
fstp
xchg
mov
popa
pop
cmp
lods
xchg
xor
cwde
(bad)
add
jmp
dec
push
int3
jge
inc
mov
fld
xchg
imul
stos
mov
sub
(bad)
jmp
rol
pop
push
dec
cdq
and
cmp
or
ja
test
mov
pop
test
les
jmp
(bad)
cmp
outs
add
push
shl
push
xchg
cmp
pop
mov
push
movs
icebp
mul
ret
movs
enter
and
fiadd
repz
in
push
dec
xchg
aam
(bad)
cwde
pushf
or
aam
push
test
daa
sub
mov
int
dec
inc
push
stos
imul
sbb
movs
ror
push
sub
push
xchg
arpl
daa
mov
push
addr16
mov
fst
jp
call
push
nop
cmp
inc
scas
inc
or
mov
pop
xchg
out
cs
push
lahf
lods
mov
mov
es
and
mov
call
stos
in
inc
mov
jnp
xchg
or
dec
out
int3
xchg
shl
dec
inc
fld
imul
sbb
inc
inc
call
shl
push
pop
add
aam
loope
fmulp
jns
loopne
cmp
scas
or
or
adc
fwait
jb
test
push
dec
(bad)
add
xor
fisttp
cld
lods
xchg
xlat
je
loopne
xchg
pop
sbb
sub
sub
pop
aad
outs
bound
mov
inc
out
int3
push
scas
jl
jbe
cmp
mov
push
mov
or
mov
xchg
pop
pop
(bad)
mov
cmp
ja
rcr
loop
outs
neg
arpl
dec
stos
movs
fld
adc
out
xchg
jnp
mov
imul
imul
jge
cmps
nop
and
movs
into
inc
call
dec
(bad)
mov
xor
mov
jg
mov
dec
or
xor
mov
mov
mov
lea
inc
inc
dec
test
mov
sbb
jne
adc
push
movs
xor
adc
pusha
out
aad
and
dec
sbb
inc
jae
cmps
sbb
pop
sub
sar
mov
sbb
in
es
aad
xchg
adc
push
mov
mov
inc
jp
mov
jge
jbe
lods
fsub
adc
adc
ins
adc
mov
loope
rol
push
cli
sub
jp
sti
ins
ins
dec
adc
mov
mov
addr16
fistp
jge
test
xor
jmp
mov
outs
fsqrt
and
add
test
dec
pop
adc
test
(bad)
fst
add
and
pop
out
push
and
rcl
mov
xchg
jmp
xchg
in
les
clc
rcr
pop
clc
aam
dec
popf
or
in
sbb
jnp
jb
cwde
cmps
pop
sub
js
cmp
adc
inc
cmps
sahf
mov
sub
cld
out
mov
loopne
(bad)
pop
rol
and
inc
jmp
pop
stos
or
mov
call
adc
mov
dec
mov
cmps
sub
pop
and
mov
xchg
pop
jecxz
jmp
and
pushf
(bad)
jmp
mov
in
fcomp
(bad)
push
ror
pop
pop
imul
dec
out
push
adc
in
mov
in
in
or
idiv
or
lahf
lahf
mov
and
ficomp
outs
pop
lock
mov
pop
and
and
lds
jp
je
sub
(bad)
cmc
xchg
shl
and
aad
daa
(bad)
mov
pop
(bad)
dec
or
loop
(bad)
xchg
jmp
std
pop
fidiv
out
retf
sbb
icebp
(bad)
shr
loope
mov
mov
stc
test
movs
mov
into
push
lea
jmp
iret
scas
dec
xchg
popa
adc
imul
loop
pop
in
int
or
in
shr
cmps
inc
(bad)
add
(bad)
and
push
hlt
sti
stos
ja
fidivr
cli
cmp
mov
ret
lea
enter
pop
test
xchg
nop
mov
in
int3
stos
pop
mov
mov
lock
lock
xlat
jmp
les
jns
add
cmp
test
pop
jg
test
push
sub
pop
push
add
ss
fild
aaa
xchg
in
cwde
xchg
js
ror
aam
mov
test
push
cs
pushf
ficomp
arpl
mov
xchg
dec
pop
(bad)
(bad)
lea
dec
sub
push
jbe
xchg
mov
dec
aas
add
mov
push
popf
add
outs
sub
jg
fsubp
pop
cli
outs
jno
mov
inc
sub
fimul
lods
cmp
mov
jp
test
inc
push
sbb
and
jge
or
push
or
cmc
es
test
pop
jp
cmp
fwait
adc
cmp
and
fdivr
push
add
adc
pop
jnp
mov
pushf
push
sub
fwait
cmps
popf
inc
jne
bnd
adc
imul
mov
out
(bad)
(bad)
mov
dec
addr16
push
inc
or
push
daa
pop
or
xchg
xchg
xor
(bad)
jmp
sbb
ins
jle
inc
push
mov
push
inc
fucomi
add
aaa
lahf
add
sti
(bad)
cld
in
push
adc
test
push
jge
add
cmp
iret
mov
addr16
shl
inc
loop
push
arpl
dec
mov
and
popa
mov
jbe
dec
fmul
sldt
and
sub
lods
imul
mov
sbb
mov
push
addr16
fstp
jno
adc
sbb
addr16
out
retf
out
sbb
mov
sti
jmp
pop
sbb
inc
jl
mov
pushf
arpl
jns
xchg
cmps
push
(bad)
(bad)
mov
and
hlt
push
mov
cmp
or
xchg
adc
add
pop
sub
sahf
xchg
cmp
ins
dec
xor
add
retf
jmp
pop
mov
stc
jp
daa
enter
jmp
push
fs
inc
inc
aam
sbb
lock
mov
or
sub
adc
stos
pop
xchg
jbe
and
out
mov
dec
sub
sbb
sbb
push
inc
and
push
jl
aam
add
mov
pusha
dec
lods
dec
shl
out
sbb
inc
sbb
cli
bound
bound
jnp
cmp
mov
gs
adc
dec
movs
lahf
jge
ret
mov
mov
lods
xor
arpl
icebp
fst
pop
mov
lahf
iret
mov
fcomp
leave
cmps
(bad)
aam
and
test
dec
out
test
cmc
cmp
xor
xor
push
fnstcw
pop
mov
jo
ss
js
cmp
out
cmps
addr16
ins
jge
cmp
loop
enter
fdivr
call
fcom
and
loopne
jmp
inc
jp
ins
pop
lods
sub
push
test
jl
xchg
add
fsubrp
loopne
inc
push
jae
sub
cmp
icebp
and
pop
cmp
fsubr
fidivr
sahf
dec
mov
mov
stos
mov
inc
push
call
cli
and
clc
sti
call
mov
mov
fidiv
shr
jmp
shr
mov
mov
add
pop
sub
or
or
pop
or
pop
imul
(bad)
dec
xor
ror
out
enter
es
fmul
fisubr
push
stos
jo
sub
add
or
xor
repz
cmp
ins
cmp
mov
sub
(bad)
scas
enter
mov
pop
mul
ins
xor
es
sbb
repnz
mov
(bad)
call
jmp
xor
xor
xchg
lea
pop
(bad)
nop
cmp
jge
mov
(bad)
rcl
inc
mov
fdivrp
jmp
pop
adc
sub
xor
xor
cld
jl
and
sub
fsub
retf
sbb
arpl
sahf
daa
(bad)
in
retf
stc
xchg
sbb
push
mov
push
lods
and
dec
mov
mov
inc
add
adc
push
loop
leave
in
xor
fidiv
loop
add
lock
int
sbb
push
xchg
fcom
and
push
mov
cld
mov
shr
cmps
lahf
aaa
out
push
lock
loopne
sub
mov
cwde
or
enter
adc
push
mov
mov
push
cmp
stos
ins
jge
ds
mov
cmp
cwde
xchg
mov
xor
pop
stos
adc
jle
cmp
lods
cmp
ret
js
jmp
in
pop
test
dec
pushf
push
add
xor
movs
xchg
fiadd
jge
and
test
inc
out
xchg
test
pop
ins
pop
mov
addr16
lds
cmp
dec
je
rcr
nop
rcr
cmp
out
out
pop
clc
aaa
mov
jge
cmps
push
dec
test
pusha
(bad)
pushf
int3
inc
push
cdq
or
jge
(bad)
pop
arpl
inc
test
neg
in
popa
movs
inc
iret
int
std
cmc
ror
push
xchg
enter
fnstsw
cli
jo
dec
rol
mov
cmp
mov
fdiv
int3
xor
adc
jge
aaa
mov
(bad)
fstp
push
loop
(bad)
pushf
push
adc
test
jge
leave
fisttp
and
add
sub
jo
pusha
pop
jo
xchg
mov
push
repz
push
(bad)
xchg
mov
push
jno
aad
nop
fcomp
jmp
dec
jmp
mov
mov
adc
lods
cmp
jmp
fwait
inc
and
sub
mov
aam
or
fisttp
shl
add
pushf
call
pop
push
ins
fcmovbe
inc
xchg
outs
xchg
mov
mov
pushf
mov
cs
pop
out
out
pop
neg
adc
(bad)
aas
adc
jg
stos
inc
mov
gs
call
mov
cmp
sar
les
pop
jge
or
push
inc
sub
mov
in
stos
jae
(bad)
mov
sti
jb
add
leave
pop
int
nop
adc
inc
mov
mov
fdivr
xchg
mov
sbb
inc
cli
mov
cwde
rcr
xlat
call
and
sbb
push
ss
pop
push
jl
mov
mov
push
sbb
pop
or
push
push
push
nop
fwait
inc
adc
inc
fdiv
out
mov
stos
call
sbb
jge
call
inc
out
cwde
out
popf
pop
imul
cmp
int3
sbb
sar
add
pop
aam
loope
jmp
mov
sbb
inc
sbb
adc
iret
fisttp
sub
lahf
add
inc
dec
inc
in
pop
std
dec
sub
out
fidiv
cld
mov
rol
jbe
xchg
dec
in
shr
int3
(bad)
adc
add
sbb
sbb
adc
mov
out
cwde
pop
xor
inc
call
pop
sub
cld
mov
mov
and
(bad)
out
loopne
mov
stos
sub
sub
jne
into
dec
sbb
and
push
jmp
shl
push
and
push
mov
adc
sbb
inc
push
jg
xchg
jp
mov
xor
xchg
(bad)
mov
sti
faddp
mov
(bad)
loop
xor
gs
pushf
cmp
mov
out
int
push
call
aaa
arpl
xor
lods
mov
add
sbb
lds
push
gs
out
mov
shr
data16
xchg
pop
inc
movs
pop
rdpmc
xchg
fdivr
pop
loop
jge
mov
(bad)
mov
in
jns
pushf
daa
lea
mov
pop
add
mov
jmp
fsub
pop
std
cmp
sahf
and
sub
das
jnp
mov
xor
sbb
daa
movs
ret
inc
jmp
mov
test
aas
and
xchg
cwde
pop
out
out
mov
push
add
sbb
enter
scas
sbb
pop
mov
fimul
lods
imul
push
cld
mov
out
mov
popa
mov
inc
loopne
push
push
jp
popf
cbw
or
shl
or
sub
sar
pop
shl
mov
sub
pop
jmp
dec
sahf
add
ret
sbb
fidiv
fs
shl
(bad)
fisttp
lea
add
jo
jl
mov
sbb
in
dec
pop
pushf
js
sbb
dec
jmp
pushf
add
popa
loopne
mov
adc
mov
sub
jnp
mov
or
shl
push
mov
xchg
aam
fild
fucomp
cmp
or
stos
mov
adc
mov
jge
enter
cwde
xor
daa
ins
rcr
jno
fmul
jl
fwait
dec
int3
add
mov
cmp
call
jle
jne
mov
ds
mov
loopne
aas
int3
xor
je
dec
(bad)
pop
lock
pop
shl
or
cmp
imul
push
mov
int
jge
lods
outs
shr
push
or
mov
push
mov
xor
dec
sub
xchg
push
call
add
pop
addr16
adc
cmps
call
repz
mov
mov
shr
dec
jge
and
mov
sub
repnz
xchg
mov
std
jmp
adc
fs
xchg
ins
dec
pop
pop
jl
mov
aaa
add
fldcw
jnp
xor
lahf
int3
outs
mov
xchg
push
out
mov
aas
xor
ds
sbb
dec
mov
sub
xor
fwait
in
std
imul
sbb
pop
in
pop
xor
test
mov
int
mov
and
rcr
mov
loop
dec
push
push
nop
jmp
xchg
sbb
and
dec
mov
dec
and
jnp
fistp
sbb
mov
out
arpl
test
mov
xor
xchg
xchg
call
cmp
add
popa
popf
inc
dec
not
out
jle
mov
pop
lock
repz
(bad)
sub
out
add
add
jo
cld
in
enter
inc
int
jle
pop
add
ins
or
fstp
sti
add
test
push
cmps
mov
jle
push
xlat
pop
int
mov
and
(bad)
jge
pop
and
(bad)
stos
cmps
adc
int3
repnz
add
dec
rcr
je
imul
jge
mov
arpl
inc
adc
fstp
inc
jmp
in
mov
stos
dec
fiadd
push
pop
dec
js
mov
push
jmp
sbb
or
dec
and
dec
(bad)
rcr
pop
xor
movs
rcl
enter
ret
fisttp
cmc
xchg
repz
fld
fisttp
cmps
xchg
sub
fstp
(bad)
ja
idiv
ror
(bad)
fdiv
adc
dec
sbb
pop
xor
stos
into
iret
int3
iret
jne
pop
mov
stos
inc
fimul
imul
pop
mov
and
inc
mov
mov
arpl
jb
dec
adc
mov
int3
push
dec
bound
loop
cli
lea
and
and
out
shr
and
aam
mov
push
ins
int3
add
retf
cs
jnp
pop
ret
mov
inc
xchg
xor
mov
test
hlt
cwde
ret
xor
xchg
xor
sahf
aam
shr
test
pop
mov
int
push
loopne
test
push
mov
icebp
mov
or
pop
sbb
fdivr
push
jae
movs
pop
stos
jnp
(bad)
dec
stos
retf
mov
pushf
dec
or
mov
int
int
mov
dec
and
and
out
pop
rcl
pop
xchg
add
sahf
mov
jmp
dec
ss
fist
cmps
push
dec
enter
dec
mov
(bad)
jno
mov
cmp
(bad)
inc
adc
hlt
test
fiadd
sub
lods
pushf
ds
add
sbb
mov
mov
push
push
or
daa
xchg
cld
fisub
rol
sub
or
cmp
loopne
adc
je
dec
fwait
sti
cmp
test
dec
add
mov
cld
add
ins
sbb
int
pop
inc
pop
add
jns
loop
push
sub
mov
int3
pop
pop
les
fmul
xor
ja
sub
call
adc
shl
jo
in
cmp
sub
std
add
mov
or
push
es
or
mov
(bad)
in
inc
adc
fcom
adc
push
call
dec
xchg
dec
rol
sub
aam
adc
mov
cld
jp
pop
cmp
xchg
jmp
sbb
loopne
fwait
push
out
xor
pop
sbb
clc
push
movs
aas
xor
lock
push
and
cld
dec
(bad)
ss
sbb
sbb
cdq
(bad)
out
div
fwait
sbb
mov
cmp
stos
(bad)
loop
sub
fs
jp
ins
jle
fisttp
mov
(bad)
(bad)
dec
inc
fldcw
or
rdtsc
popf
movzx
sbb
test
xlat
xchg
popf
sahf
jle
cmps
sub
in
cmp
pop
pop
shl
mul
push
lock
jnp
and
out
sti
(bad)
mov
pop
push
jne
cmps
add
add
xchg
add
cmp
xor
jnp
aaa
ficom
mov
leave
mov
push
inc
inc
mov
add
leave
jo
ret
mov
mov
sub
xor
sbb
es
iret
aam
mov
sbb
(bad)
aad
and
int
das
jl
dec
mov
mov
cmc
push
pop
lods
add
ins
(bad)
dec
cmp
(bad)
imul
and
lods
(bad)
xchg
sub
add
test
ret
mov
sbb
dec
cmp
rol
jo
add
and
jge
inc
jl
adc
mov
and
xchg
dec
jecxz
cmps
(bad)
xchg
add
int
dec
and
adc
mov
ret
icebp
mov
dec
cwde
in
cld
sub
sbb
or
dec
in
mov
inc
rcr
iret
add
dec
stc
pop
inc
inc
xchg
enter
and
fcom
xor
mov
add
jae
and
out
(bad)
popa
daa
hlt
aam
bound
mov
push
retf
cld
stc
mov
mov
pop
gs
sub
mov
call
int
shr
pop
pop
rol
mov
loope
rcl
sbb
sub
loopne
(bad)
dec
pop
gs
sahf
mov
dec
inc
loop
arpl
dec
mov
fsubr
push
and
jae
(bad)
add
movs
dec
test
or
ja
pushf
inc
pusha
xor
mov
ds
std
adc
test
and
(bad)
jle
pusha
out
mov
and
dec
ins
sub
push
ds
xchg
aaa
stc
pmaxsw
cmps
mov
mov
sub
cdq
ins
xchg
sbb
cmc
cli
pushf
pop
push
ins
add
and
push
push
aas
sbb
sbb
sub
sbb
push
jo
sub
jmp
(bad)
bound
imul
stos
inc
pop
push
push
cld
mov
movs
jo
and
not
xor
push
out
shl
std
or
popa
int3
in
pop
call
(bad)
addr16
stc
leave
push
xchg
or
push
adc
icebp
sub
sbb
pop
mov
(bad)
sbb
mov
pop
mov
push
add
cli
jno
in
ja
jle
mov
(bad)
pop
xchg
mov
jle
and
mov
popa
sar
movs
sub
mov
cmp
(bad)
fs
inc
mov
ds
mov
jl
fs
out
jnp
push
stos
sbb
stc
and
imul
mov
shl
popa
jge
mov
cmp
mov
in
push
fisttp
jle
ins
cmp
mov
sbb
push
and
stos
repnz
pop
cmps
mov
ds
add
fcomp
cmp
pop
adc
movs
out
push
or
shr
xchg
mov
dec
int3
dec
imul
push
jo
jmp
add
(bad)
out
imul
inc
jbe
int3
loopne
add
hlt
push
xor
(bad)
add
loopne
mov
sub
(bad)
fldenv
mov
ret
fdiv
repnz
cmps
mov
pop
mov
les
mov
dec
test
into
jge
cmc
inc
jnp
shr
aam
int
jge
into
pop
mov
out
(bad)
jno
jmp
xor
mov
and
dec
pop
sbb
cmp
out
adc
rcr
push
mov
std
xchg
std
lock
sub
popf
cwde
push
mov
in
push
call
mov
and
xor
(bad)
loop
stc
ror
in
mov
into
sbb
adc
call
int
ret
pop
sbb
pop
inc
mov
sbb
push
addr16
jle
dec
sti
loopne
mov
mov
sahf
adc
shl
call
retf
mov
adc
jno
cmp
mov
xchg
pushf
rcl
sbb
add
cmps
push
dec
mov
cmp
adc
cmp
lds
ret
pushf
aam
sub
rcr
mov
addr16
or
dec
into
sub
xchg
fsub
and
mov
in
xor
daa
hlt
ds
mov
outs
mov
fwait
dec
jge
fmulp
cmps
or
(bad)
fst
add
mov
mov
xchg
cld
xchg
jge
mov
sub
loope
(bad)
mov
iret
mov
xchg
ret
sbb
push
(bad)
xchg
jnp
adc
repz
mov
push
pop
stos
fisubr
loop
cmp
retf
pop
sbb
cdq
xchg
(bad)
out
cmc
fadd
push
mov
jbe
lea
(bad)
pop
repz
push
imul
add
sub
pop
aad
cmp
int3
pop
lahf
lods
loop
jmp
mov
add
push
neg
in
(bad)
adc
pusha
fwait
call
jmp
jb
mov
mov
imul
test
xor
sub
lock
jge
aad
pop
dec
xchg
and
ja
nop
ds
dec
mov
push
pop
int
out
fsubr
call
sub
pusha
pop
mov
sti
xlat
add
mov
adc
popf
dec
(bad)
aaa
push
or
outs
stc
das
jae
inc
sub
xor
push
cmp
xchg
xchg
aad
rcl
fcmove
push
add
lea
jg
mov
jno
shl
cmp
iret
cmps
shl
(bad)
ja
cld
icebp
popf
sbb
and
out
shr
lock
cmp
in
ret
(bad)
push
and
adc
dec
movs
cmp
push
sub
cmp
push
mov
jb
xlat
sbb
sub
xor
lock
or
(bad)
fmul
lods
arpl
ret
mov
test
jmp
push
jl
aam
mov
dec
loopne
mov
ss
inc
shl
fstp
push
nop
fnstenv
pushf
and
mov
push
pop
pop
mov
out
sub
and
lea
sbb
jb
jmp
int3
data16
in
xlat
push
mov
lea
jmp
sbb
dec
push
jecxz
xchg
dec
adc
inc
cmps
and
pop
(bad)
loopne
xlat
push
mov
jno
mov
sbb
fidivr
movs
lods
stos
xchg
dec
jmp
sbb
push
mov
aas
xor
jnp
mov
and
int
jae
pop
test
data16
dec
mov
outs
(bad)
es
out
sub
je
bound
inc
push
aaa
(bad)
sar
repz
iret
fsqrt
fadd
dec
imul
loop
cmps
mov
addr16
das
in
lahf
push
sbb
pop
push
xchg
sub
cmp
push
mov
sbb
sbb
cmps
jno
mov
dec
inc
or
ds
push
nop
pop
adc
stos
and
sbb
mov
movs
data16
mov
ror
add
add
cmps
cmp
pop
cmp
or
sub
cmc
mov
imul
shr
mov
or
mov
rcr
push
les
(bad)
xlat
push
ds
ret
mov
hlt
push
sub
pop
xchg
dec
fidivr
pop
mov
mov
mov
dec
sub
inc
call
enter
cmp
jae
mov
(bad)
pop
push
inc
mov
cmp
sbb
adc
or
cmp
fisub
inc
mov
iret
jp
jmp
fucompp
pop
fisubr
call
cld
jb
and
cmp
xlat
cmp
dec
or
int
pushf
in
mov
ja
adc
mov
ds
(bad)
mov
fldenv
test
fistp
stos
sbb
scas
fidivr
ja
xor
(bad)
xchg
mov
adc
lahf
sub
aam
jno
out
mov
aas
xlat
or
call
repz
inc
mov
pushf
popf
push
(bad)
sbb
sbb
fdecstp
aad
js
rol
adc
inc
adc
imul
fcmovnu
cmp
mov
hlt
mov
(bad)
jmp
push
add
addr16
and
in
std
cwde
(bad)
xchg
xor
(bad)
xchg
ds
cmp
cmp
push
push
adc
mov
jne
bound
fiadd
fbstp
bound
outs
ret
sahf
adc
loopne
xor
out
cmc
xchg
mov
imul
cmp
pop
(bad)
sub
inc
in
fdivr
lock
jb
out
stos
mov
jp
push
cmp
es
rcr
popa
cld
xor
pop
push
data16
ror
cmp
out
dec
jnp
out
and
pop
int
fucomip
cdq
xor
lods
inc
enter
push
and
jmp
cmp
popa
iret
mov
cdq
fldenv
inc
addr16
cmp
ror
inc
pop
sub
mov
shl
js
dec
hlt
lock
jge
ja
inc
(bad)
inc
dec
adc
jecxz
call
mov
data16
fldpi
cmp
jb
in
les
push
cmp
pop
and
jle
sub
dec
xor
fiadd
inc
cmp
mov
outs
xor
fidivr
pop
add
adc
dec
arpl
in
(bad)
pop
clc
xor
(bad)
push
mov
pop
or
jae
pop
pop
pop
jmp
mov
mov
shr
movs
mov
push
mov
ins
cld
inc
pop
es
fadd
jp
jnp
pop
pop
pop
mov
dec
lods
pop
inc
xchg
daa
test
std
shl
pop
adc
push
sub
fisttp
not
cmps
xchg
fisttp
fmulp
mov
inc
pop
fstp
or
add
or
stc
pusha
cs
or
or
and
dec
loopne
xor
or
out
(bad)
mov
cmp
jae
gs
clc
idiv
add
adc
loope
call
xchg
xchg
mov
rcl
or
mov
imul
das
lds
fcomp
cmp
or
fadd
scas
dec
mov
mov
xor
sub
xchg
mov
popf
push
fadd
dec
adc
sub
imul
cmps
dec
cmovbe
sbb
movs
xchg
out
aas
in
stc
lods
out
dec
xor
xchg
in
test
and
pop
mul
xor
pop
sub
outs
mov
int3
outs
jge
jne
test
jno
cmp
(bad)
cmp
shl
and
fstp
jns
cmc
mov
xchg
fnstsw
dec
inc
adc
or
push
pop
xor
inc
pop
mov
enter
sbb
loop
mov
or
test
jmp
mov
push
push
xor
add
addr16
inc
(bad)
stc
pop
outs
fbstp
pop
cli
mov
aam
arpl
adc
into
popa
sbb
ja
rcr
fstp
add
cmp
mov
popa
out
jmp
ins
dec
inc
push
in
pop
outs
dec
shl
dec
cli
addr16
or
das
arpl
fs
and
sub
cmp
jmp
sbb
or
loopne
push
sub
dec
dec
loopne
pop
arpl
(bad)
lods
call
xchg
inc
mov
and
dec
scas
mov
push
sub
pop
or
mov
aas
(bad)
add
add
push
or
push
fcmovne
loop
shl
add
loopne
add
push
xchg
add
nop
push
jbe
xchg
mov
mov
imul
std
int
push
jg
pop
dec
and
push
xor
int3
mov
mov
mov
inc
adc
push
int3
cmp
ja
jmp
cmc
cmp
outs
sub
dec
sub
inc
std
loop
dec
push
dec
mov
dec
mov
lds
adc
mov
stc
jne
mov
mov
(bad)
retf
adc
adc
xchg
imul
(bad)
in
cmovnp
pop
es
cmps
dec
test
shl
push
push
or
inc
push
xchg
mov
rcr
lods
inc
rcr
sbb
jae
inc
adc
xchg
and
mov
lds
or
fisttp
sub
cmp
aas
out
xor
mov
xor
repz
shr
outs
mov
pop
cmp
xchg
in
retf
jbe
retf
(bad)
clc
mov
adc
test
xor
cld
jno
clc
addr16
xchg
nop
shl
push
xchg
movs
arpl
scas
out
sub
ins
push
leave
in
les
push
out
add
push
and
cwde
rcr
or
push
(bad)
jbe
xor
aad
fmul
sbb
ins
pop
mov
pop
out
fst
sub
and
(bad)
lahf
mov
cmp
xchg
mov
enter
dec
inc
test
pop
cmp
dec
aas
jae
xor
push
into
cmps
xchg
sub
inc
nop
sti
loopne
adc
push
dec
popf
inc
call
aas
or
lods
js
shr
xchg
loopne
bnd
ins
fisub
and
xor
popa
js
imul
push
and
sub
(bad)
mov
cmp
int3
xchg
dec
imul
push
mov
dec
pop
cmp
out
stc
pushf
ss
mov
sub
and
mov
pushf
jns
outs
(bad)
int3
outs
xor
or
dec
lods
clc
sub
and
pop
add
cmp
fwait
sbb
sbb
inc
stos
and
mov
inc
sub
fsub
add
int3
pop
cmp
pop
xchg
sub
xor
iret
jo
push
dec
or
pop
fstp
mov
push
scas
sti
jmp
sahf
vpsubusb
cmps
sub
xor
icebp
pop
mov
mov
enter
xor
rol
ds
(bad)
retf
pop
push
xchg
rcr
mov
(bad)
rcr
pop
arpl
sti
shr
(bad)
loope
jb
and
scas
xlat
(bad)
shr
fstp
push
mov
rcr
dec
out
mov
pop
push
aaa
push
push
jnp
rcl
xchg
ror
test
sbb
inc
popf
pop
inc
imul
jo
out
cs
pop
jnp
xor
js
push
pop
cmps
inc
imul
fwait
push
sti
or
fwait
daa
rol
pusha
sbb
pop
inc
push
and
addr16
push
jmp
push
inc
add
dec
aam
or
push
pop
pop
adc
mov
or
ja
dec
sbb
mov
mov
mov
cmp
into
mov
adc
sub
inc
inc
arpl
sbb
pop
addr16
mov
and
in
sbb
fistp
aas
cmp
daa
adc
sub
imul
pop
(bad)
inc
stos
aaa
pop
sub
cld
and
ins
cwde
xchg
push
mov
inc
jns
aam
dec
pop
stos
cmp
fmul
push
std
(bad)
or
pop
out
sbb
xchg
add
sbb
mov
or
daa
jnp
mov
ins
jmp
pop
ret
inc
xchg
sbb
push
add
cmp
push
push
rcl
je
nop
push
pusha
iret
sub
push
jg
(bad)
and
fwait
lahf
pop
jbe
push
jae
inc
sub
and
dec
lea
adc
aam
push
xor
ror
cmp
mov
jmp
push
mov
call
call
inc
les
loop
aad
int3
rcl
popa
pop
mov
inc
call
mov
in
aam
push
cmps
jns
jo
inc
(bad)
loop
mov
jle
sub
add
nop
daa
fisub
push
sub
jle
arpl
popf
rol
push
clc
sbb
adc
dec
outs
nop
in
fxtract
nop
jle
xor
and
cwde
outs
fnsave
pop
arpl
mov
test
jae
loopne
pop
mov
test
in
cld
shr
loopne
cmp
loope
pushf
imul
mov
aad
mov
add
icebp
clc
sbb
imul
movs
mov
call
add
fwait
sbb
pushf
add
mov
xchg
xor
les
rol
xor
test
or
rol
mul
fimul
movs
call
push
mov
xlat
std
add
aaa
fstp
data16
pusha
loop
inc
push
inc
lea
(bad)
js
cmp
icebp
push
mov
pop
mov
ja
cld
in
dec
ins
cmp
cld
add
into
push
call
mov
mov
dec
lahf
inc
add
cwde
ret
int
jmp
das
sub
push
cmp
xchg
jb
aad
sub
cmp
(bad)
popf
jmp
pushf
test
ret
js
xchg
std
lea
pop
or
pop
mov
mov
(bad)
psubb
add
inc
js
pop
push
cmp
ret
cwde
xor
leave
pop
pop
mov
push
sub
cli
cld
push
cmp
xchg
outs
lea
out
pushf
loopne
in
scas
inc
xchg
in
xchg
jp
jl
adc
dec
dec
ret
sub
out
aam
or
scas
xchg
mov
sbb
cmps
push
push
mov
retf
pop
aaa
int3
mov
ficomp
pop
push
div
in
outs
sbb
jmp
jmp
das
pop
aam
(bad)
popa
sbb
pop
lock
xchg
stc
push
ds
popa
(bad)
jle
sahf
sbb
leave
or
out
add
mov
pop
into
sbb
pop
mov
arpl
imul
data16
push
ja
jp
xchg
dec
and
sbb
adc
dec
shr
inc
mov
jns
inc
mov
sub
mul
inc
rsqrtps
cmp
dec
xchg
adc
cwde
push
lds
push
or
rcl
in
cli
idiv
stos
push
sub
cmp
retf
ror
sbb
js
cmp
push
mov
jne
fwait
gs
dec
mov
test
idiv
jmp
jg
jg
mov
cdq
sbb
adc
jle
std
frstor
retf
sub
aas
push
ss
mov
sbb
adc
mov
mov
mov
push
mov
cmp
sub
test
aaa
stc
popa
inc
mov
mov
repz
cmps
mov
pop
sub
pushf
cmps
sti
stos
test
into
rcr
mov
mov
sahf
pushf
ins
fs
test
lods
inc
or
ficom
mov
xchg
shr
int3
push
loope
pop
inc
pop
mov
ins
pop
mov
push
mov
fadd
sub
js
or
cmp
dec
idiv
sar
fild
or
lods
cmp
enter
push
or
xchg
dec
sbb
lea
aaa
mov
outs
sub
ds
sbb
dec
sub
jl
cmps
add
pop
lock
and
(bad)
jbe
add
mov
pop
dec
shr
mov
cwde
inc
gs
jmp
dec
cdq
xor
fwait
sbb
movs
pop
fs
out
(bad)
sbb
inc
push
jns
dec
popa
ja
(bad)
ror
js
mov
jbe
push
lods
xchg
idiv
adc
cwde
mov
sub
jb
push
nop
push
dec
rcr
cli
mov
lea
std
adc
xchg
jnp
adc
push
inc
std
mov
fldenv
mov
icebp
inc
ror
call
mov
or
out
jno
lea
cdq
ret
sbb
push
cmp
sub
pop
call
sub
mov
call
pushf
dec
int3
mov
stos
push
sahf
and
mov
(bad)
daa
lods
add
das
mov
cmp
xchg
mov
jbe
out
aam
jmp
mov
cdq
push
das
dec
pop
xor
(bad)
std
mov
add
or
mov
mov
in
(bad)
clc
pop
iret
mov
test
sub
(bad)
push
out
aad
or
dec
xor
cs
and
push
fimul
jns
in
xchg
and
idiv
shl
jnp
enter
test
and
adc
ficom
sbb
mov
rcr
mov
jecxz
dec
loopne
inc
ss
inc
popf
inc
fisubr
sub
sar
push
xchg
inc
push
inc
push
popf
pop
fld1
push
dec
mov
enter
fcom
mov
xor
fwait
sub
xor
and
xchg
leave
fisttp
jp
sub
icebp
xor
push
push
fldenv
dec
mov
les
int3
xchg
sbb
inc
cld
(bad)
gs
stos
and
sbb
or
xchg
mov
pop
xlat
int
cli
sbb
out
dec
pop
mov
and
jl
dec
xor
cmp
daa
gs
add
(bad)
mov
push
sbb
xchg
mov
jae
lahf
test
outs
in
cwde
mov
addr16
fadd
(bad)
sti
push
rcl
pop
pop
stos
and
add
xchg
push
rol
xchg
inc
popf
mov
outs
push
sbb
dec
aad
imul
imul
pushf
push
lea
cli
aam
mov
mov
mov
lock
sub
iret
inc
push
ret
imul
sbb
lds
je
popf
push
and
xchg
mov
arpl
pop
add
pushf
ret
cmc
cmp
mov
push
fwait
out
bound
clc
xchg
push
inc
inc
pop
addr16
and
mov
inc
cmp
out
fiadd
dec
fwait
mov
fild
cmp
adc
xchg
loope
int
mov
mov
push
test
mov
stos
shl
and
mov
cmp
jg
fsubr
cli
int3
jo
and
and
lahf
inc
enter
add
push
mov
xchg
icebp
pop
shl
outs
pop
pusha
mov
or
ret
jb
sub
ja
mov
outs
cs
mov
xsavec
arpl
jo
je
(bad)
(bad)
inc
test
stos
jp
int3
and
pop
pop
mov
imul
xchg
xchg
mov
dec
neg
fnsave
dec
xor
cdq
xor
aaa
push
mov
jnp
aaa
cld
mov
(bad)
cld
inc
mov
sub
inc
mov
jno
arpl
fst
add
into
stc
sub
lods
icebp
xchg
dec
mov
mov
sub
adc
movs
ds
lods
cmp
xchg
rcl
mov
cs
xor
shl
test
(bad)
aam
push
sub
dec
call
dec
ja
lds
sbb
enter
mov
push
outs
js
sub
xchg
push
int
jo
and
pop
inc
and
in
icebp
cmp
test
and
rcl
mov
sbb
imul
xor
mov
sti
sub
cwde
lea
cmp
mov
not
lea
mov
pushf
sub
inc
loope
in
push
cli
fisub
mov
mov
inc
or
sbb
dec
xchg
jmp
test
out
shl
cmps
stos
dec
mov
iret
mov
out
adc
mov
inc
enter
stos
shl
loopne
(bad)
rol
aam
aam
or
sbb
mov
pop
xor
push
out
mov
sbb
nop
lahf
xchg
pushf
sahf
jp
fistp
and
mov
jnp
dec
or
or
call
fdivr
mov
outs
push
cdq
dec
imul
or
mov
inc
pop
pushf
dec
sbb
jge
mov
and
add
retf
adc
dec
dec
inc
sbb
push
aaa
cld
outs
sbb
data16
arpl
push
push
popa
or
call
aam
jmp
arpl
inc
or
mov
ja
out
add
arpl
inc
fistp
jb
fld
mov
fld
mov
gs
mov
jbe
adc
mov
mov
push
shl
out
outs
fstp
lahf
cs
cmp
inc
dec
in
push
jno
aam
push
in
jmp
stos
adc
add
mov
shl
jl
push
(bad)
leave
pop
gs
aad
adc
inc
or
or
push
mov
sub
cmp
cmc
outs
mov
push
sbb
xchg
add
jl
adc
sbb
enter
mov
mov
adc
xchg
aad
mov
ja
cmp
arpl
imul
or
lds
movs
jmp
mov
xor
add
xchg
dec
sbb
push
mov
push
cmp
ja
loope
dec
xor
push
sti
pushf
aam
nop
jmp
stos
lahf
push
cmp
aaa
pop
push
mov
sub
stc
ins
inc
jnp
sub
fld
push
dec
xlat
jg
movs
adc
push
scas
add
dec
push
fs
or
ds
sbb
test
dec
pop
je
jmp
pop
inc
jae
cld
mov
inc
inc
cld
add
jecxz
jge
loop
ss
mov
push
sbb
aas
arpl
or
std
inc
cs
js
or
jne
or
xchg
mov
mov
sub
mov
and
dec
movs
xchg
xchg
scas
pop
daa
inc
jecxz
cmp
fdivrp
inc
fcmovnbe
jmp
mov
fwait
stos
and
loopne
xchg
aam
ins
lock
jae
gs
fcmove
pop
push
daa
jnp
outs
mov
fcmove
xor
cmps
out
fcomp
sub
das
sub
dec
cmp
push
xchg
jg
les
sbb
sbb
aad
(bad)
ja
sub
rcr
sbb
or
mov
and
mov
cmp
test
mov
mov
push
out
xchg
or
xchg
pop
mov
mov
ja
(bad)
shl
repnz
dec
adc
jne
add
push
pop
call
outs
hlt
enter
add
std
(bad)
adc
lds
fstp
fldcw
pop
inc
or
push
push
ret
sbb
mov
int
test
loop
sar
outs
ficom
fptan
jne
sbb
inc
dec
div
cdq
mov
cmp
mov
sub
(bad)
out
lahf
push
or
push
mov
mov
push
push
ret
dec
out
pushf
mov
dec
push
dec
pop
sbb
pop
addr16
loope
adc
test
std
push
xor
cmp
stos
cmovnp
mov
xor
pop
pop
jp
call
adc
es
(bad)
mov
mov
and
int3
mov
push
js
jecxz
or
ja
dec
arpl
sub
xchg
out
xchg
in
push
and
and
stc
cmc
rcr
rcl
add
and
or
add
jge
div
dec
dec
push
(bad)
xchg
jnp
sub
(bad)
push
add
adc
push
mov
in
dec
movs
movs
mov
mov
push
out
gs
cs
pop
div
sub
mov
xchg
jge
lea
dec
in
pushf
pop
stc
add
and
fwait
cld
sbb
fbld
pop
aaa
idiv
std
add
push
jae
mov
fimul
pop
pop
stos
push
js
rol
and
sar
and
push
frstor
mov
arpl
inc
hlt
push
lock
pop
pop
and
xchg
jmp
not
lahf
imul
add
push
sti
pushf
dec
fist
movs
sar
sbb
popf
jns
mov
fcomp
xlat
add
scas
cmp
lods
pusha
loopne
mov
aam
(bad)
jmp
sar
sub
mov
dec
aam
add
and
dec
push
idiv
std
test
pop
fdivr
std
js
inc
ret
xor
shl
sub
ss
dec
sahf
sub
imul
mov
iret
pushf
push
sar
fnstenv
sbb
out
ds
rcr
mov
mov
iret
pop
sub
xlat
push
mov
cmp
sub
pop
dec
pop
inc
dec
mov
pop
out
or
or
shr
jmp
adc
inc
shl
sub
gs
add
push
xchg
inc
mov
mov
xor
push
inc
sub
dec
pop
lahf
mov
adc
sti
and
(bad)
loopne
push
mov
sbb
cmp
jno
inc
int
add
push
push
pop
jne
xchg
mov
mov
cmp
xchg
push
push
sbb
cli
xor
and
jns
add
push
dec
mov
xchg
(bad)
hlt
lea
mov
mov
fwait
arpl
xor
dec
push
jmp
mov
repnz
das
repz
mov
jmp
or
or
unpcklps
and
or
adc
inc
sub
test
mov
lahf
cmp
push
mov
movs
fisttp
dec
push
jnp
loopne
mov
adc
ins
addr16
sub
and
loopne
push
mov
mov
loope
inc
and
pop
aaa
push
jmp
adc
retf
mov
and
sbb
push
mov
outs
mov
(bad)
xor
jle
sbb
fidiv
adc
imul
adc
icebp
sub
jo
mov
(bad)
mov
add
cmp
sahf
sub
or
fcom
test
or
ror
dec
stc
popa
xlat
cli
(bad)
sub
dec
outs
mov
pushf
mov
push
push
pop
add
aaa
popf
jo
ficomp
pop
jae
cmp
cmp
and
mov
push
cmps
jnp
dec
fstp
mov
lods
xlat
jmp
(bad)
test
cmps
inc
cmps
pop
mov
cs
cmp
dec
fnsave
push
lds
inc
xor
dec
dec
ror
lahf
sahf
imul
(bad)
jle
jge
aad
xor
inc
adc
mov
dec
lods
es
aam
mov
inc
cmp
int3
je
pop
mov
push
cmp
ds
bswap
adc
sbb
add
rcr
(bad)
ins
lods
outs
xchg
sub
xchg
or
lds
rol
ins
inc
setae
mov
fnstenv
ss
cmp
cmp
mov
push
test
(bad)
xor
ins
cmp
gs
jae
loop
stos
fadd
xchg
pop
sub
pop
add
sub
mov
cmp
imul
and
push
adc
and
arpl
jae
sub
dec
adc
out
arpl
and
jmp
outs
mov
addr16
or
cmp
pop
int3
push
retf
jle
cdq
das
lock
mov
ds
sbb
and
push
dec
enter
mov
pop
fistp
movs
or
jmp
inc
scas
sub
(bad)
ss
aad
dec
(bad)
mov
xchg
aas
call
cmps
rcr
imul
pop
test
test
inc
push
cmp
add
and
mov
push
in
mov
mov
in
sbb
psrlq
xchg
cs
push
push
sahf
push
mov
(bad)
inc
pusha
lock
jae
mov
pop
lahf
icebp
mov
out
jl
mov
xor
rcr
and
mov
jae
sahf
fwait
xchg
dec
mov
sub
shr
push
std
jl
xor
out
adc
mov
aam
cmp
push
lods
ficomp
pop
mov
or
aaa
cmp
fs
mov
fs
push
jno
loopne
add
mov
jmp
out
sbb
push
int
sub
mov
or
mov
xchg
cmps
sbb
push
add
inc
and
adc
push
sub
mov
mov
jge
push
jmp
inc
sahf
mov
pop
cmp
enter
aam
ins
pop
push
sbb
sbb
xchg
cmp
out
nop
(bad)
aad
mov
jl
and
pusha
(bad)
hlt
cdq
(bad)
lock
les
mul
adc
add
mov
ss
mov
fimul
movs
sbb
cmps
cwde
jnp
rcl
retf
pop
jle
mov
mov
dec
pop
cmps
leave
mov
inc
mov
mov
dec
and
les
lock
mov
push
mov
and
sbb
inc
xchg
mov
xlat
jge
loopne
add
lods
dec
sti
lods
test
push
inc
add
jae
sub
mov
push
push
and
adc
cmp
pushf
push
mov
push
fwait
xchg
add
adc
push
scas
mov
jnp
ret
mov
pop
xlat
push
shl
pop
test
fcmovbe
(bad)
or
fiadd
shl
xor
je
dec
xchg
lock
outs
repz
pop
in
mov
repz
sbb
loop
sbb
pushf
fiadd
popf
add
loopne
xchg
push
add
ficomp
fisubr
xchg
shr
xlat
xor
fisttp
and
mov
retf
fstp
mov
(bad)
and
jle
fsub
inc
pushf
repnz
test
hlt
cmp
xor
xor
sbb
in
ins
in
fadd
(bad)
xor
das
cmp
fimul
add
mov
sub
pushf
loop
mov
adc
mov
cld
pop
sub
pop
out
sub
cld
nop
mov
int
push
push
cmps
dec
adc
jmp
aas
jle
pop
in
out
bound
pop
cmps
mov
pop
push
jno
add
mov
inc
jle
fisub
push
mov
jmp
cmp
cdq
ds
add
jmp
lods
imul
in
pop
push
sbb
jle
cmp
aam
jo
pop
xchg
test
push
mov
xor
iret
pop
add
push
adc
sar
in
sbb
add
cmp
fs
ret
popa
ja
(bad)
pop
adc
push
cmp
cmp
into
sbb
sahf
jle
not
jmp
mov
dec
sahf
cmp
add
dec
jne
aaa
dec
push
and
jmp
mov
in
je
mov
cmp
dec
push
in
test
aaa
shl
jnp
pop
retf
sbb
push
sub
or
fdivp
add
out
dec
dec
mov
in
ret
and
mov
adc
jle
adc
sub
jbe
mov
cmp
push
cmp
movs
arpl
call
cwde
sti
pop
sbb
fist
mov
jb
push
push
ss
scas
outs
clc
adc
pushf
mov
and
sbb
pop
lods
clc
loope
gs
fstp
inc
mov
(bad)
mov
fstp
xchg
sbb
lods
mov
loopne
loope
enter
jne
mov
mov
fdiv
mov
jp
cmp
fidivr
mov
cmp
jnp
loope
add
fldcw
cmps
inc
mov
inc
pop
out
xor
cli
scas
push
js
pop
xor
outs
cs
out
add
push
inc
loope
sbb
xor
mov
or
push
(bad)
lahf
dec
enter
jg
pop
repnz
or
pop
pop
stos
fimul
shl
stos
les
addr16
cs
jmp
xchg
pop
adc
xor
mov
ret
or
xchg
inc
xor
pusha
es
xchg
stos
in
mov
dec
pop
adc
pop
and
call
(bad)
mov
sbb
and
pop
xor
cmp
xlat
shl
dec
cmp
aaa
in
adc
mov
aas
and
xchg
mov
xchg
cmc
aas
inc
push
lods
jle
outs
nop
ret
out
or
ret
std
dec
daa
mov
jge
push
(bad)
in
in
mov
cdq
fs
js
in
inc
push
aaa
pop
icebp
repnz
dec
jno
add
adc
dec
inc
adc
sbb
int3
mov
cld
xchg
test
inc
push
or
pop
outs
and
(bad)
scas
cmp
pop
jmp
icebp
push
cs
fisubr
mov
mov
add
jecxz
ds
dec
in
xchg
and
stos
daa
std
push
sbb
mov
aaa
cdq
inc
pop
test
push
adc
add
outs
dec
and
dec
xchg
cld
xor
(bad)
pop
fisttp
jno
cmp
das
mov
cmp
pop
daa
aaa
cmp
mov
mov
loopne
mov
icebp
ds
dec
pop
cld
aaa
or
ja
aam
lds
sbb
xchg
daa
popf
pop
inc
lock
faddp
xchg
rcl
xchg
pop
push
out
ret
pop
sub
mov
mov
mov
add
rol
mov
dec
aam
jge
push
dec
movs
sub
pop
aas
jmp
ret
pusha
push
ins
pop
jmp
into
aam
dec
sbb
or
les
(bad)
fsub
cmps
pop
cmps
xor
cmps
cmp
add
lods
dec
stos
sbb
stos
push
xchg
jmp
add
sbb
pop
xchg
stos
sbb
xor
popf
mov
mov
pusha
mov
retf
inc
int3
(bad)
xchg
fxch
gs
clc
(bad)
sbb
shr
nop
pop
sub
or
lods
div
pusha
mov
ror
adc
sub
jo
loopne
pop
mov
mov
dec
shl
add
cwde
and
call
(bad)
pop
mov
pop
sub
pop
or
gs
cwde
push
outs
lods
mov
pop
inc
fs
sub
bnd
pop
mov
lods
cdq
push
pusha
xchg
mov
in
add
mov
mov
sbb
pop
cmp
jge
dec
fs
cmps
jbe
out
hlt
xchg
aaa
jbe
addr16
xor
or
pop
xor
es
fimul
adc
mov
ins
cmp
nop
pop
shl
in
lds
dec
and
mov
inc
xchg
pop
mov
xchg
cld
mov
mov
or
adc
push
idiv
repz
cli
push
and
mov
ins
mov
jl
push
jle
pop
fist
cwde
hlt
jmp
sbb
mov
pushf
outs
mov
push
popf
jle
mov
in
idiv
mov
ror
sahf
inc
lahf
fs
xchg
jne
push
inc
sub
lock
mov
aas
xlat
pop
repz
call
loope
sbb
xor
fst
movs
or
sbb
xor
xor
sub
mov
pop
stc
(bad)
rol
test
arpl
nop
cdq
fdiv
mov
xchg
and
scas
stos
push
inc
add
adc
push
xor
pop
jne
add
push
lahf
fist
pushf
sub
(bad)
imul
mov
leave
loopne
mov
sub
xor
mov
call
mov
loope
movs
ficom
ins
imul
into
xor
dec
dec
xchg
aam
sti
adc
cs
dec
jg
(bad)
sbb
jmp
sub
xchg
pushf
pop
loope
rcr
leave
pop
mov
icebp
sub
mov
cmc
fild
sbb
into
push
inc
(bad)
(bad)
jnp
mov
lods
dec
(bad)
dec
xlat
mov
outs
(bad)
push
inc
out
mov
fcom
mov
inc
nop
mov
mov
cmp
(bad)
mov
pushf
cdq
pop
lahf
adc
mov
out
push
mov
aam
outs
cmp
pusha
shl
jnp
mov
push
jp
dec
and
jmp
push
mov
dec
bound
js
(bad)
cmc
enter
fst
scas
f2xm1
stos
pop
jo
mov
sti
and
sub
mov
sbb
add
fcmovbe
jge
(bad)
div
cwde
outs
cmp
xchg
jp
div
add
rcl
arpl
inc
pop
push
mov
div
mov
loop
mov
aaa
xlat
hlt
js
mov
jae
test
add
aam
inc
fdiv
push
lahf
xor
fiadd
mov
scas
in
jle
jnp
xchg
int3
cmps
sbb
adc
mov
pop
test
nop
outs
dec
add
jb
pop
sbb
popa
nop
hlt
daa
sbb
ret
and
add
sbb
mov
pop
push
ins
nop
inc
jp
fstp
or
xchg
dec
stc
pop
std
mov
xor
test
xchg
cmp
cmp
cmp
cmp
mov
(bad)
or
mov
sbb
ffreep
dec
sub
rol
push
cmp
jns
hlt
add
in
xchg
and
push
jecxz
sub
lea
mov
push
mov
jae
push
xchg
pop
add
sbb
loop
popf
dec
aas
enter
dec
jne
xlat
ss
xor
or
jge
sar
inc
jns
rcr
mov
mov
repz
pushf
mov
pop
mov
cmp
jmp
push
ror
add
fwait
sar
enter
fxtract
fwait
jmp
call
dec
shl
addr16
cmp
xchg
inc
movs
pushf
jae
adc
loopne
loop
dec
jmp
adc
in
jno
push
gs
loopne
xor
fisubr
sub
ret
cmp
pop
aam
outs
mov
jmp
mov
aam
adc
push
cwde
jmp
xor
sti
call
sub
stos
aaa
gs
lods
cdq
pop
or
xchg
cs
loope
sbb
xor
mov
mov
aam
mov
mov
dec
jno
xchg
int3
mov
push
or
mov
sbb
test
jl
jmp
jp
or
or
xor
xchg
pop
(bad)
xchg
clc
add
and
fst
push
cmp
jge
fwait
les
enter
jmp
(bad)
enter
sub
fwait
pushf
pop
popf
jno
bound
arpl
mov
jmp
(bad)
mov
int3
daa
iret
dec
outs
mov
dec
dec
cmps
out
and
cmp
dec
mov
inc
jg
inc
inc
dec
inc
mov
cmp
ins
mov
jle
push
jno
inc
sbb
fbld
cs
mov
retf
push
sbb
cmps
ds
push
sub
jmp
inc
loope
std
xchg
loopne
push
inc
xchg
cmp
sbb
or
add
inc
mov
add
scas
sub
cmp
hlt
xor
cld
or
or
push
sub
mov
xchg
jnp
sub
sti
fisub
mov
repz
or
into
mov
in
push
imul
dec
lods
mov
dec
adc
int3
xchg
cmp
push
sub
lea
loop
or
dec
jmp
fldenv
jno
mov
(bad)
cmp
sbb
aad
mov
add
sbb
das
das
jge
pop
out
push
div
jp
daa
xchg
mov
sbb
and
popf
out
rcr
jae
sub
pop
aaa
jg
jbe
jne
sub
(bad)
mov
call
pushf
lea
add
adc
pop
mov
jnp
and
dec
push
push
test
ds
pop
push
and
(bad)
pop
(bad)
jge
call
mov
xchg
in
mov
or
call
mov
push
xchg
sub
fmul
jo
ss
jl
inc
ins
sbb
cmps
out
neg
cmc
inc
cwde
xchg
rol
adc
test
jg
mov
push
cmps
ror
mov
and
mov
sbb
shl
xor
test
dec
add
rcl
fdivr
add
cli
mov
cmp
stc
inc
mov
les
pop
loope
jo
jmp
or
push
lods
and
mov
dec
not
mov
mov
popf
ins
inc
retf
scas
push
lahf
es
stos
push
mov
sbb
or
popa
imul
sbb
outs
inc
sbb
clc
push
inc
in
aam
retf
mov
loopne
mov
sub
pop
and
dec
push
out
(bad)
lds
add
xor
sbb
div
fisttp
pop
test
stc
aad
aaa
jnp
xchg
bound
jg
sub
pushf
add
jbe
mov
push
xor
fidivr
xor
dec
sbb
mov
outs
fs
mov
adc
mov
out
call
xchg
pop
push
jnp
jmp
sub
add
add
sub
addr16
dec
iret
lahf
jmp
mov
pop
push
sub
or
mov
mov
outs
cmps
enter
lahf
ficom
retf
sbb
aam
jp
sub
(bad)
fnstsw
test
ins
and
cmp
mov
test
jp
test
js
popa
lods
push
jmp
cmp
inc
js
test
sbb
pop
test
pop
imul
arpl
cs
cwde
iret
sub
stos
fidivr
or
mov
jae
mov
fldenv
xchg
mov
jle
ja
fidiv
out
xchg
mov
add
lock
lahf
adc
out
mov
fdivp
push
ins
xchg
cs
das
ret
ss
mov
jl
dec
and
mov
pop
lock
ins
js
lods
pop
adc
retf
xlat
or
dec
pop
bound
xor
sbb
in
mov
dec
addr16
and
int
cmp
push
dec
mov
mov
fmul
dec
cld
sub
aas
mov
adc
adc
xor
mov
iret
cmps
int
movs
fistp
adc
fcmovbe
in
or
jo
mov
mov
xor
dec
xor
mov
stc
aas
dec
sub
mov
mov
xor
shl
popa
in
pop
rol
add
inc
sub
lahf
cmp
fdiv
dec
inc
dec
out
cmp
addr16
mov
mov
xchg
lahf
inc
(bad)
cwde
stos
imul
inc
pusha
cmp
mov
inc
sub
inc
inc
add
sbb
jge
xchg
sub
xor
pop
fwait
add
mov
shl
ins
push
popf
pop
pop
in
int3
push
fcmovb
mov
sbb
inc
mov
rol
rcl
jmp
movhlps
sbb
mov
sbb
imul
loop
fs
fsubp
push
mov
or
mov
pop
adc
xchg
and
mov
pop
cmp
ins
push
daa
push
ds
movs
in
(bad)
pop
add
and
es
push
cdq
movs
pop
cmp
mov
cmp
push
mov
aad
(bad)
mov
in
cmps
mov
adc
popf
dec
xor
jne
push
aaa
(bad)
shr
add
xchg
jecxz
jge
xchg
xchg
imul
xchg
jno
out
jmp
inc
push
push
daa
push
jb
sub
and
in
mov
cmp
rcr
fld
or
pop
mov
retf
push
sub
cs
sbb
or
lahf
arpl
arpl
xchg
daa
inc
push
sar
mov
daa
jnp
(bad)
push
pop
aad
pop
push
je
xlat
shl
ret
push
out
xor
mov
jmp
jo
pushf
cwde
mov
loop
out
mov
stc
push
sahf
jmp
and
jno
fcmovnbe
or
jnp
and
shl
push
mov
nop
fwait
mov
inc
sbb
or
mov
nop
es
mov
sti
push
aad
enter
retf
cli
fld
pushf
jns
push
cld
mov
js
out
sahf
ficom
retf
inc
dec
movs
out
iret
or
hlt
mov
cdq
int
jbe
lods
pusha
mov
(bad)
dec
sar
push
sbb
int
daa
mov
in
mov
inc
pop
out
in
pop
outs
cmp
aaa
nop
nop
mov
movs
js
dec
pop
loopne
fadd
mov
sar
sub
xor
jne
mov
inc
push
dec
stos
ja
(bad)
jo
add
mov
dec
fdivr
fprem
int
or
dec
sub
jnp
xor
mov
sbb
cmp
push
ds
retf
inc
aas
add
mov
xlat
mov
push
(bad)
int3
mov
call
or
fldcw
in
adc
fidiv
mov
(bad)
sti
pop
push
nop
jno
inc
push
movs
add
xchg
shl
popf
(bad)
cmps
inc
bound
cld
sub
mov
xchg
mov
cmps
cld
jnp
scas
sbb
dec
mov
and
into
sub
stos
rol
push
xor
in
neg
pop
pusha
jnp
push
fidivr
test
cmc
ins
jae
mov
iret
out
aad
(bad)
(bad)
sub
push
stos
repz
(bad)
pop
pusha
ja
pop
lock
div
pop
xor
push
xor
iret
xchg
outs
(bad)
icebp
or
dec
rol
int3
sub
in
dec
push
jl
pop
movs
popf
pop
mov
cs
in
ror
(bad)
test
cmp
sbb
daa
int3
loopne
retf
sahf
dec
push
(bad)
jl
and
jae
fcomp
mov
aam
lahf
sahf
inc
pop
cmps
mov
jno
cmp
mov
rol
icebp
call
std
inc
inc
and
sahf
dec
pop
and
test
pop
out
ins
sub
shl
xchg
data16
test
call
sar
add
outs
(bad)
hlt
out
cmp
push
and
xchg
add
mov
(bad)
pop
mov
push
in
fsubr
mov
pop
mov
pop
sub
cld
jge
(bad)
pop
rcr
test
sbb
fnstcw
mov
test
shr
jae
clc
mov
mov
adc
mov
dec
mov
inc
jo
adc
adc
aas
icebp
jno
rol
inc
add
dec
std
lods
in
imul
je
and
cdq
mov
enter
sub
ret
arpl
fbld
out
rcl
jbe
fwait
sbb
(bad)
push
push
dec
cdq
lds
in
jb
jge
adc
or
mov
(bad)
aad
push
ror
or
sbb
repnz
loop
sti
clc
ret
lock
pushf
and
dec
dec
popf
fabs
sub
mov
in
dec
sbb
jb
rcr
ins
clc
cmp
mov
pushf
push
fcmovbe
push
mov
push
test
sub
dec
dec
clc
loopne
xchg
test
(bad)
adc
fld
cmps
iret
dec
cdq
loop
mov
pop
add
mov
and
rcl
je
out
lods
jns
test
not
push
dec
mov
leave
(bad)
in
push
sbb
in
sahf
add
dec
xchg
scas
mov
lea
and
iret
sub
imul
dec
pop
(bad)
fisttp
jmp
lods
dec
pop
popf
mov
xor
test
loope
mov
and
or
cld
adc
inc
lds
pop
pop
inc
pop
aad
xchg
xor
adc
pop
xchg
icebp
lds
push
sub
fstp
stos
cli
icebp
dec
inc
leave
jg
clc
shr
jmp
push
and
add
out
int
jmp
push
adc
push
push
jmp
fnstenv
inc
sub
dec
cld
inc
(bad)
xor
jmp
test
mov
scas
mov
pop
repnz
xchg
ror
in
dec
pusha
xchg
mov
mov
pop
cmps
mov
stc
pop
push
push
mov
(bad)
push
int
inc
adc
xor
sbb
jl
mov
lahf
repnz
int
mov
and
jp
icebp
lods
pop
cmp
retf
cs
cmp
push
jl
test
adc
jl
push
xor
out
cmp
enter
cmp
(bad)
jmp
mov
xchg
jle
mov
lds
and
mov
sub
jge
adc
mov
ja
adc
dec
(bad)
add
lods
push
sbb
jmpw
push
(bad)
fldl2t
lds
pop
cdq
ss
inc
sub
cmp
stos
ds
or
xchg
push
and
in
push
add
idiv
(bad)
in
mov
jmp
xor
lahf
loop
xlat
(bad)
pop
xchg
sbb
imul
stos
sub
push
jbe
sbb
fcmovnb
jb
push
pop
adc
aad
sti
cmp
mov
push
bound
push
out
jae
push
sbb
shl
mov
cmp
icebp
lds
inc
ds
rcl
push
ret
test
mov
les
call
sbb
fldenv
add
mov
jae
mov
mov
scas
sub
repz
add
xchg
rol
sbb
(bad)
in
mov
int
inc
mov
arpl
add
leave
(bad)
cli
test
rol
push
lock
sub
cmp
jl
(bad)
cmp
jge
xor
jo
xor
xchg
rcl
fsub
dec
mov
cmp
pop
mov
ja
pop
pop
data16
rol
fs
or
inc
dec
pop
pop
das
add
xor
jge
pop
das
and
out
rcl
push
sbb
lds
mov
ss
loopne
or
pushfw
add
sbb
(bad)
imul
push
cmp
idiv
call
leave
aam
ret
repz
stc
fstp
fwait
pop
push
xor
fidivr
mov
aam
push
cmp
jmp
xor
fcmovne
stos
movs
fcom
sar
mov
cmp
push
imul
(bad)
sub
aas
sbb
sahf
addr16
sbb
aad
call
sub
(bad)
(bad)
push
dec
out
dec
in
outs
sahf
push
jg
sti
fwait
js
retf
jno
lods
lock
xlat
arpl
js
jl
xchg
aam
push
in
ds
shl
mov
pushf
mov
dec
(bad)
js
or
retf
mov
push
icebp
(bad)
mov
iret
push
cwde
sbb
xchg
inc
jnp
test
mov
dec
xlat
xor
sbb
lock
xor
cli
and
add
ins
jnp
in
leave
inc
inc
stc
cmp
and
jns
and
push
pop
mov
lods
popa
ret
push
iret
jno
pop
dec
(bad)
retf
(bad)
cmp
mov
jmp
sub
lea
add
lods
mov
cdq
push
in
mov
orps
cmp
in
rcl
pop
lahf
cmp
or
pop
xchg
ja
fmul
push
xchg
dec
mov
pop
xor
mov
cld
cmps
loopne
mov
inc
xlat
fisub
mov
mov
mov
rcr
idiv
mov
push
add
mov
adc
mov
aam
or
mov
sub
mov
dec
inc
push
dec
test
jne
push
and
std
retf
div
dec
test
adc
ror
xchg
cmps
mov
push
cli
pop
je
cmp
inc
and
jl
push
fimul
jne
xor
cdq
std
mov
cmp
inc
dec
fadd
or
dec
push
cld
mov
xchg
sbb
xor
adc
cmc
xor
out
inc
aam
and
add
sbb
mov
mov
popf
and
pop
xchg
add
hlt
mov
loop
dec
dec
fidivr
aad
xor
in
cmp
lea
cmps
pusha
add
je
loopne
mov
inc
fdivr
in
out
xor
or
(bad)
add
test
push
popf
shl
add
dec
(bad)
js
mov
cmp
cmc
xor
xrelease
out
aad
push
jb
sub
cld
sahf
les
jp
das
xlat
ret
ds
or
jg
and
mov
pop
mov
pop
mov
add
push
jnp
inc
shr
sbb
cmp
xor
shl
loopne
nop
ins
es
pop
inc
cwde
neg
pop
sub
ds
add
icebp
push
test
xor
imul
adc
pop
(bad)
sbb
adc
cld
and
pop
adc
cmp
lods
mov
xchg
sbb
xchg
ins
jmp
jge
push
xlat
add
mov
or
rcr
xchg
and
cmps
push
dec
or
stos
inc
je
sub
call
sbb
cdq
dec
cmp
sbb
push
pusha
inc
int3
pop
imul
and
jne
fwait
pop
and
enter
mov
ret
and
jmp
mov
ror
daa
adc
shl
jae
stos
mov
or
icebp
xchg
inc
xchg
inc
jae
std
dec
ss
dec
push
jne
dec
dec
pop
push
outs
repz
mov
movs
adc
mov
dec
add
push
xchg
sub
ds
leave
out
mov
dec
daa
xlat
mov
add
sbb
stos
push
jmp
stc
cmp
pop
mov
enter
aas
sbb
jg
mov
xchg
sub
dec
sbb
sbb
fs
mov
ror
jae
push
cmp
(bad)
dec
daa
inc
pop
(bad)
int
test
data16
mov
pop
mov
sub
sbb
mov
or
lea
mov
(bad)
clc
loope
sbb
mov
(bad)
adc
fnstenv
dec
push
shl
pop
aas
imul
fs
pushf
icebp
loope
(bad)
fistp
mov
mov
inc
adc
lods
push
or
inc
xchg
mov
in
push
push
pop
sbb
arpl
push
ins
mov
sbb
jmp
inc
and
je
mov
iret
jne
adc
pop
out
test
aam
push
xor
daa
xor
cmps
out
adc
ret
enter
(bad)
dec
cmp
sbb
jg
nop
mov
fdiv
sub
push
mov
xor
xchg
xchg
pushf
sbb
popa
lds
clc
bound
enter
ret
outs
rcl
hlt
push
out
in
stos
retf
add
inc
xor
(bad)
xor
outs
jae
add
dec
addr16
xchg
fwait
sbb
ins
mov
daa
call
push
dec
mov
and
inc
stos
mov
in
movs
mov
pop
inc
jp
mov
cmc
aad
fimul
sahf
out
arpl
xchg
pushf
push
pop
mov
nop
cs
imul
mov
outs
es
aas
add
pop
mov
mov
jmp
aam
ret
aam
(bad)
pop
xor
mov
xchg
mov
mov
dec
add
mov
jmp
adc
lods
ror
arpl
ret
(bad)
push
push
mov
jmp
div
pop
sub
push
pop
in
pop
jmp
int
jmp
(bad)
popf
lds
add
loop
push
add
shl
mov
pop
jge
les
addr16
(bad)
fs
repnz
jle
cld
shr
dec
cmp
sbb
jbe
iret
mov
mov
(bad)
shr
cmp
in
pushf
sbb
mul
pop
mov
das
cs
ins
push
mov
rol
mov
test
test
mov
pop
nop
test
dec
sti
ds
fistp
ror
ds
push
sub
mov
scas
mov
push
lods
fwait
sbb
jmp
fsubr
sbb
and
pop
xchg
arpl
sbb
push
xchg
stos
lods
out
cmp
pop
push
and
cwde
dec
imul
int
fisub
jne
inc
xor
mov
retf
inc
movs
lahf
jbe
out
mov
adc
dec
jnp
pop
in
pop
xchg
xchg
dec
sbb
xchg
xchg
xlat
sub
enter
adc
add
xchg
or
pop
xchg
or
pop
jne
xchg
scas
sub
mov
fidivr
mov
sbb
inc
pop
cmp
aaa
inc
mov
sbb
les
dec
std
dec
sbb
je
push
mov
fld
addr16
sbb
(bad)
jb
dec
jecxz
nop
(bad)
and
pop
pusha
out
lock
pop
and
fcmovbe
in
pop
not
bound
js
mov
enter
in
inc
xchg
arpl
call
push
xchg
call
sub
mov
cmps
fisub
sub
mov
push
rcl
loopne
fwait
or
out
inc
add
xchg
xchg
sbb
xor
mov
neg
xchg
es
xchg
(bad)
call
xchg
or
xchg
jmp
pop
add
movs
xor
rcl
mov
popf
add
std
sbb
inc
imul
movsx
leave
sbb
push
mov
push
outs
add
fld
xor
dec
lods
mov
xchg
mov
(bad)
mov
ss
mov
add
mov
and
xchg
mov
rol
jmp
push
imul
lods
and
xchg
pop
add
les
inc
imul
push
iret
fwait
hlt
cmp
sbb
cmps
and
or
aam
add
jns
ror
xor
push
call
addr16
or
hlt
icebp
push
xchg
(bad)
xchg
aam
cs
das
xchg
loope
aas
div
cmp
jb
clc
jle
push
mov
and
push
(bad)
retf
xor
jbe
retf
mov
xchg
aas
repz
in
adc
push
mov
adc
sbb
fsub
cmp
inc
pop
stos
sti
ror
mov
push
dec
ins
inc
pushf
inc
pop
jae
jge
jmp
sar
int
(bad)
xchg
ja
sub
retf
cmps
pushf
out
pop
jne
xor
scas
dec
adc
xchg
scas
leave
dec
xor
test
push
clc
pop
push
sub
frstor
ret
scas
outs
xlat
adc
loopne
cmp
js
sub
outs
jmp
dec
cmp
inc
mov
ss
int
aam
(bad)
loopne
add
or
in
fmul
push
adc
cmc
test
jmp
scas
mov
fsub
pop
in
sub
push
loop
cwde
loop
cmp
sub
mov
push
ja
loop
cmp
daa
imul
push
in
pop
and
outs
aam
push
inc
lea
dec
jp
ret
add
aam
mov
sbb
jecxz
push
popf
shr
xchg
pop
mov
mov
dec
movs
shr
add
pop
sub
mov
push
(bad)
in
mov
push
push
push
cmp
rcr
push
adc
mov
mov
int
mov
ins
scas
pop
inc
sub
mov
push
cs
aas
cmp
push
or
jo
popf
push
scas
call
(bad)
neg
xchg
in
clc
mov
mov
adc
jecxz
fnstenv
aas
dec
icebp
cmp
jmp
sub
imul
sub
fcmovbe
jl
pop
mov
dec
sub
nop
sub
js
bound
mov
retf
nop
sar
addr16
jmp
scas
dec
out
les
aaa
pop
xchg
pop
sar
push
xchg
leave
aam
mov
pop
mov
rcr
pop
dec
mov
inc
inc
mov
add
lock
popf
mov
iret
fnstenv
jns
imul
pop
sub
pop
les
sbb
adc
movs
mov
pop
hlt
dec
test
cmps
in
dec
(bad)
out
popf
xor
push
pop
jge
inc
js
and
inc
mov
fnsave
or
fucomi
push
sar
pop
jne
(bad)
int
call
jl
xchg
cwde
adc
mov
dec
sahf
and
dec
mov
daa
jbe
arpl
icebp
push
ja
jnp
lods
xlat
dec
add
mov
js
mov
pop
ins
cmps
push
cld
xchg
popa
cmp
or
xchg
mov
mov
retf
(bad)
mov
dec
lahf
bound
stc
cmp
mov
push
jnp
or
sub
and
neg
sbb
lea
mov
mov
ins
or
cdq
ss
cmp
pop
dec
out
mov
inc
xor
mov
(bad)
ret
add
(bad)
pop
mov
shl
loopne
mov
cmps
cwde
ins
and
pop
stc
push
or
add
daa
movs
iret
aaa
mov
or
and
dec
div
movs
into
(bad)
sub
add
mov
movs
sub
xchg
jmp
loop
(bad)
xor
call
mov
xchg
mov
pop
inc
out
inc
fild
dec
repnz
xchg
aaa
push
adc
and
pop
and
mov
jns
push
fiadd
arpl
push
jae
xchg
pop
jo
xchg
mov
pop
dec
fidivr
scas
sti
or
pop
nop
(bad)
dec
and
stc
xor
cmp
iret
ret
sub
addr16
mov
and
xor
loop
retf
sbb
pop
rcl
fld
lods
and
cli
jb
or
push
ret
xor
mov
out
cmp
push
jo
pusha
dec
pop
dec
das
add
jae
fsubr
and
ins
in
push
mov
mov
mov
ja
sub
scas
ret
sub
mov
mov
fistp
lods
fld
push
jnp
(bad)
shr
addr16
add
inc
adc
fs
aam
pop
outs
fmul
call
cmp
enter
(bad)
sti
and
fdiv
cmp
pop
push
mov
jle
push
xor
stos
popa
lock
std
(bad)
sbb
popa
nop
mov
or
sbb
lea
aaa
(bad)
adc
xchg
pop
sbb
add
add
cwde
int3
dec
jecxz
int
movs
cmps
cli
mov
and
rol
sbb
enter
or
and
arpl
mov
pop
aaa
data16
mov
sbb
popa
leave
fcmovnb
daa
push
jecxz
in
loopne
mov
sbb
push
mov
(bad)
cmp
mov
push
xor
aaa
je
pushf
in
imul
int
ret
neg
fistp
push
jne
cmp
pop
mov
inc
jle
xor
call
je
mov
cmp
ja
jg
mov
sahf
or
rcr
xlat
sahf
fst
lods
(bad)
mov
adc
adc
pop
xchg
jno
mov
fadd
out
ret
mov
xor
(bad)
push
pop
sbb
loope
pop
dec
out
(bad)
push
inc
pavgb
mov
lods
inc
pop
fiadd
push
xchg
imul
ds
xlat
pop
sahf
int3
dec
jge
pop
xor
in
push
fild
scas
pushf
inc
aas
xor
test
add
sbb
fucomi
(bad)
fwait
nop
xor
jmp
rcr
adc
(bad)
call
cmp
inc
or
in
jo
mov
repz
lea
mov
mov
mov
mov
(bad)
dec
add
call
jge
pop
push
iret
ins
ja
out
cmc
dec
mov
fs
push
sub
jo
mov
lods
addr16
cli
pop
sbb
shl
jmp
rcl
cmps
xchg
dec
ins
ror
jno
pop
ret
aas
pop
sub
nop
cli
in
jnp
or
loope
leave
pop
mul
push
and
dec
shl
mov
mov
in
sbb
mov
dec
pop
les
push
(bad)
loop
pushf
add
push
sti
add
adc
out
fisttp
dec
and
inc
jne
pop
or
dec
std
add
mov
das
cs
pop
stos
jmp
cmp
nop
jmp
xor
push
and
add
cdq
or
inc
or
(bad)
inc
shl
loop
out
iret
imul
leave
ins
sub
call
es
ja
push
sbb
gs
cmps
jo
test
out
leave
xchg
jnp
popf
cmp
push
cmp
xchg
aaa
cwde
pop
inc
iret
push
repz
pop
cs
aaa
aad
sub
fptan
jno
leave
test
xchg
xchg
push
adc
pop
mov
pushf
jl
dec
fisub
mov
inc
es
jg
imul
adc
sub
imul
mov
xor
push
out
cmps
push
sbb
or
push
lods
mov
cld
mov
leave
scas
mov
sub
sbb
push
das
pop
inc
daa
push
es
js
adc
cli
aad
sub
mov
jge
gs
xchg
cmc
lock
cmp
loop
fld
inc
sti
dec
mov
sbb
push
jmp
jb
and
fimul
xor
jg
movs
cmp
adc
dec
das
dec
shl
movd
cmps
shl
push
mov
mov
mov
aam
pop
mov
out
mov
fist
add
std
add
cs
ins
aam
inc
adc
push
stos
std
in
inc
jno
sub
jp
xor
cmp
sbb
ds
loope
add
je
cld
jge
nop
dec
cmp
dec
sbb
xchg
dec
pop
jo
out
pusha
mov
or
into
dec
sbb
shl
jno
ds
sbb
and
and
push
jge
aam
nop
ja
int3
ds
sbb
pop
lock
jl
(bad)
sub
adc
jge
rcl
xchg
and
xchg
cmps
icebp
pop
lea
and
add
sbb
push
jb
push
cs
ss
dec
iret
pop
xchg
pop
test
sbb
pop
mov
je
dec
xor
mov
push
sub
popa
xchg
leave
gs
shr
psrld
xor
mov
sub
pushf
push
lahf
stos
lods
sbb
xchg
pop
xchg
jmp
jo
push
add
aad
xor
(bad)
es
cmc
adc
mov
push
pushf
sub
sar
and
dec
push
iret
dec
ins
int3
adc
push
test
js
fst
mov
adc
mov
std
mov
pop
dec
loope
movs
inc
xor
loope
sub
push
fdivr
loopne
shr
dec
dec
push
cli
fisttp
and
sar
push
adc
mov
lea
adc
loope
rol
xchg
or
in
mov
add
cmp
pop
in
cmp
leave
cmp
jecxz
int3
jecxz
or
mov
pop
adc
xlat
jmp
enter
in
or
mov
jmp
push
and
(bad)
sbb
or
and
mov
repz
in
mov
ins
das
(bad)
cdq
dec
xor
and
imul
hlt
xchg
sbb
test
pop
js
dec
mov
pop
dec
retf
sbb
outs
adc
sub
inc
adc
pop
pop
lock
sbb
jge
pop
adc
cmp
cmp
push
cwde
jne
jmp
push
pop
jb
mov
dec
push
sbb
cmps
ins
add
imul
imul
add
fisttp
cmp
call
sub
sub
push
push
addr16
xor
shl
not
nop
js
jae
xchg
mov
add
jl
test
popa
mov
adc
ss
ins
mov
scas
sar
icebp
out
mov
jmp
sti
xchg
add
jno
popf
in
das
arpl
inc
mov
jae
push
pop
arpl
add
sbb
loope
dec
mov
int
inc
les
lock
repz
xchg
xchg
ins
sbb
outs
fcomp
js
fstp
(bad)
lock
jae
fcom
cs
cwde
xchg
sub
popa
(bad)
les
pop
push
mov
inc
scas
rcr
push
hlt
add
add
jno
pop
xchg
out
rcl
push
jg
mul
dec
xor
sbb
lods
dec
dec
iret
jmp
jge
imul
pushf
out
sub
and
fwait
ret
or
dec
lods
dec
push
mov
wrmsr
test
mov
adc
sbb
aaa
aaa
mov
mov
mov
mov
test
dec
or
mov
mov
xor
dec
mov
xor
inc
sbb
sbb
inc
ror
cmp
xlat
xor
mov
cmp
mov
xchg
icebp
push
cmp
clc
or
cdq
push
mov
out
push
adc
push
daa
inc
xchg
icebp
mov
mov
ret
das
dec
(bad)
dec
xchg
push
mov
pushf
xlat
(bad)
(bad)
(bad)
fcom
inc
jmp
jno
dec
into
dec
sub
(bad)
xchg
jns
test
mov
mov
mov
cmp
jno
pusha
mov
loop
jg
sub
dec
push
pop
leave
push
leave
push
pop
fwait
dec
pop
sub
add
xor
(bad)
add
mov
pop
jg
cmp
std
retf
out
fmul
mov
cdq
xchg
es
pop
xor
jmp
dec
mov
fwait
dec
pop
sbb
xchg
out
daa
sub
mov
dec
mov
mov
das
jnp
repz
dec
bnd
add
sahf
ret
ds
mov
stos
sti
mov
cdq
adc
sti
dec
mov
inc
fisubr
sahf
push
and
je
sub
sub
stos
fs
gs
mov
lds
xlat
mov
xlat
call
rcr
xchg
and
inc
cmp
mov
neg
outs
xor
lock
into
(bad)
inc
out
mov
sub
or
loop
push
sbb
mov
pop
jmp
shl
mov
leave
pop
out
mov
push
inc
mov
add
clc
lahf
lods
call
fs
out
rcr
das
ins
inc
push
cdq
scas
rcr
pop
add
push
stos
sub
dec
cmps
popf
ret
dec
mov
xchg
repz
sub
sbb
aad
cmp
mov
jno
push
jnp
(bad)
adc
push
sub
(bad)
je
jmpw
ror
cs
push
cmp
lods
push
jge
push
push
ins
add
pop
jmp
shl
ins
test
aaa
jmp
ds
ja
ficom
xor
add
and
sbb
(bad)
mov
in
jo
push
cmp
aad
pop
fist
lock
rol
daa
arpl
push
jmp
sbb
xor
push
or
add
add
imul
mov
jno
jmp
shl
adc
mov
pop
jbe
aaa
sbb
test
loopne
aaa
xor
mov
sbb
mov
jns
mov
(bad)
ficomp
jmp
or
(bad)
aaa
loop
fwait
and
hlt
or
adc
retf
int3
loopne
cld
and
jmp
jl
pop
leave
add
dec
lock
dec
cmp
jmp
jge
bound
push
add
je
jnp
dec
cwde
sub
and
pop
rol
mov
sbb
push
(bad)
cmp
dec
fwait
stc
inc
xchg
lock
std
push
xor
add
push
mov
inc
mov
les
sub
pop
shr
push
push
icebp
int
cmp
dec
mov
jle
sbb
xchg
pop
pop
mov
push
push
retf
mov
lea
push
call
shr
div
test
push
lahf
jmp
cld
lods
pop
lahf
pop
mov
shl
int3
repnz
retf
mov
or
jp
cmps
pushf
add
mov
pop
xchg
popf
sbb
int3
adc
popa
push
rcl
in
clc
xor
sub
pop
sub
add
fld
or
adc
ins
pop
iret
pop
jmp
mov
jg
dec
or
enter
bound
and
mov
push
imul
imul
shr
mov
inc
je
dec
pop
sub
mov
cs
mov
pop
mov
je
mov
movmskps
sub
mov
iret
or
cmp
dec
pop
inc
sub
lock
sub
xchg
mov
mov
xor
push
jmp
push
adc
push
repz
aad
fwait
in
xchg
dec
popa
pop
sbb
in
aad
mov
xchg
sti
fsubr
dec
and
add
mov
bound
xchg
or
push
lods
push
push
xor
arpl
cmp
xchg
pop
pop
aam
add
add
mov
std
dec
jo
scas
test
outs
inc
ja
mov
repnz
cmp
enter
(bad)
pop
not
mov
jae
clc
pmuludq
sbb
inc
outs
fdiv
sub
sub
add
addr16
pop
cmp
ror
sub
(bad)
cs
dec
mov
call
icebp
push
push
jmp
jmp
pop
push
loopne
(bad)
dec
outs
xor
ret
(bad)
pop
call
cld
push
xchg
xlat
mov
pop
(bad)
cmp
fsub
sub
enter
dec
das
sub
test
ja
inc
cwde
cmps
enter
jmp
movs
test
jb
sbb
push
in
xchg
ret
adc
bound
lock
das
xchg
aam
ins
sub
daa
sbb
and
popa
mov
cmp
ds
mov
pop
sbb
(bad)
(bad)
fnstenv
(bad)
pop
jp
pop
or
sbb
fnstsw
sbb
dec
sub
fstp
mov
iret
mov
inc
xor
sbb
or
rol
cli
sbb
les
aam
lds
rol
ret
sbb
and
xor
mov
pop
dec
pop
out
or
hlt
cdq
or
mov
into
div
dec
gs
cmp
mov
popa
ds
fwait
in
cmp
dec
xchg
inc
(bad)
(bad)
push
ins
push
push
fdecstp
aam
int
push
push
mov
dec
mov
loop
mov
xor
mov
dec
pop
mov
ror
fistp
daa
and
dec
sbb
cmp
arpl
pop
loope
cmp
inc
movs
sub
ja
std
push
xor
out
jno
fld
into
add
fcom
push
mov
dec
aaa
mov
or
aas
cdq
pop
cmp
dec
add
sub
mov
lea
icebp
sbb
sub
sub
inc
mov
outs
scas
popf
daa
retf
fdivr
cld
shr
call
pop
div
inc
sbb
push
or
dec
push
out
mov
out
adc
pop
outs
js
add
test
xchg
push
imul
es
and
lods
push
pop
sub
mov
jne
ins
sbb
xlat
pop
xchg
sar
xchg
cmp
mov
add
cwde
sub
adc
(bad)
mov
sbb
jecxz
aam
je
xlat
jo
nop
jmp
xchg
mov
inc
hlt
adc
inc
pop
ja
and
xor
setl
stos
loope
pop
jae
fadd
or
mov
mov
jno
and
dec
and
cdq
cmp
pop
push
dec
add
sar
pop
cs
jmp
cmp
shl
mov
and
mov
inc
xchg
push
(bad)
sahf
nop
xchg
(bad)
ficom
lea
mov
ins
pop
cs
daa
fcom
int3
or
sbb
xchg
push
adc
in
mov
jnp
pop
hlt
test
hlt
pop
aad
cld
popa
(bad)
mov
mov
sub
addr16
sub
push
sub
cmp
inc
mov
jecxz
sbb
push
(bad)
loop
fld
cmp
xor
pop
adc
int3
mov
aam
imul
fistp
nop
out
push
(bad)
add
std
adc
cdq
fnstsw
push
in
and
clc
fnstenv
bound
mov
hlt
nop
test
xchg
out
lods
lods
fcomp
adc
retf
rcr
out
lock
mov
and
popf
pop
ficomp
sar
pop
loop
ror
fidivr
push
jmp
jmp
inc
fistp
in
xchg
pop
push
sub
or
clc
int3
pushf
adc
or
push
int3
ss
sbb
stc
int
in
(bad)
cli
mov
mov
adc
push
shl
gs
fmul
in
in
sahf
and
fs
pop
mov
loopne
lock
pop
xor
jno
out
sbb
lea
aam
sub
(bad)
(bad)
mov
lahf
push
enter
dec
fcmovnu
adc
cmp
(bad)
pop
dec
inc
shl
shl
jo
or
push
inc
mov
in
sub
(bad)
js
dec
adc
and
jne
shl
fsub
scas
not
xor
call
xor
push
or
(bad)
mov
mov
cmp
jno
pop
ins
sbb
mov
ja
sub
dec
cmovnp
lea
xor
jle
ret
rol
scas
test
xor
ja
ins
pop
int3
not
mov
cmps
out
mul
ror
shr
sti
jnp
mov
fild
(bad)
pop
popa
cmp
gs
inc
loope
mov
mov
lahf
sbb
inc
xchg
nop
push
call
outs
ja
mov
popf
sub
out
push
xor
jnp
(bad)
in
cmps
fwait
mov
push
arpl
ror
icebp
jmp
sahf
pop
push
mov
pop
pop
gs
and
jl
pop
fwait
je
dec
xor
loope
push
repz
aam
push
cmps
sub
jmp
cwde
ficom
xor
retf
xchg
repnz
ret
ds
sub
pop
ret
jecxz
mov
push
push
loop
aam
imul
ror
adc
retf
pop
lods
dec
in
ror
or
mov
nop
xlat
sti
lock
cmps
mov
mov
mov
cmp
loopne
push
xchg
js
mov
mov
cmp
push
mov
sub
add
adc
pop
out
push
das
in
adc
push
call
bound
add
in
lods
xlat
out
pusha
pop
xchg
sub
mov
push
retf
enter
je
(bad)
mov
pop
sbb
pushf
or
idiv
xor
loopne
stc
sub
enter
test
dec
cmp
add
or
mov
cwde
mov
push
loopne
jno
movs
in
jae
imul
inc
xor
dec
pusha
stos
test
pop
push
icebp
es
push
fdivr
or
aas
push
loop
xchg
sub
dec
or
arpl
cli
lea
inc
mov
cs
dec
fcom
dec
js
pop
div
pop
(bad)
mov
sub
push
adc
inc
aad
fild
pop
lock
loopne
mov
jp
pop
ds
jle
xor
loope
adc
or
push
mov
add
rcr
lock
(bad)
pop
mov
push
dec
dec
lods
outs
(bad)
aaa
sub
mov
jb
jmp
pop
sar
push
(bad)
(bad)
rol
pop
pop
stos
xor
mov
cmp
jo
mov
mov
(bad)
xchg
jmp
adc
loope
ins
stos
fsub
push
adc
fild
repz
in
mov
cmp
btr
mov
popf
repz
mov
out
cmp
mov
jl
adc
(bad)
add
imul
push
loope
pop
adc
jno
in
mov
cld
bound
mov
pushfw
cmp
ret
or
mov
or
lea
(bad)
fisttp
dec
pop
sti
xlat
dec
sbb
lock
mov
and
mov
inc
mov
addr16
addr16
(bad)
jmp
ror
ins
xor
mov
int3
push
mov
out
shl
mov
out
and
mov
jo
js
arpl
push
mov
scas
fadd
add
pop
cmps
mov
xor
pop
pop
pop
xchg
cmp
movs
xchg
icebp
rol
jmp
cmps
mov
in
mov
push
jnp
sbb
sbb
(bad)
and
sbb
test
mov
jno
loope
dec
mov
pop
aaa
int
or
test
pop
rcl
pusha
es
repnz
push
sub
test
xchg
ja
inc
inc
cmp
xor
sbb
sub
(bad)
mov
ret
jl
arpl
push
frstor
mov
adc
retf
not
call
fistp
pop
hlt
(bad)
dec
hlt
(bad)
push
iret
dec
shl
jg
inc
popf
(bad)
jb
mov
pushf
jno
aaa
aam
gs
pop
xchg
jecxz
pop
test
out
mov
mov
stos
fcomp
aam
lods
push
repnz
dec
gs
outs
xor
pushf
mov
(bad)
aam
inc
push
stc
jo
scas
out
adc
xor
dec
mov
inc
pop
call
ins
not
es
mov
cld
lods
hlt
mov
xor
sub
pop
fbstp
dec
xchg
or
pop
cmp
sbb
xor
jbe
inc
jmp
stos
data16
xchg
stos
sbb
fisttp
sbb
mov
cmp
and
xchg
lock
mov
std
pop
inc
xchg
arpl
xor
mov
push
aaa
dec
outs
and
jl
cld
sbb
xchg
adc
and
(bad)
ins
dec
xor
ret
mov
std
scas
movs
dec
adc
lahf
xchg
xor
sbb
pop
inc
stc
jmp
push
jl
jge
rcr
cs
stos
fimul
jnp
dec
xlat
rcr
ds
mov
fisttp
mov
cmp
lock
xchg
inc
jne
retf
add
pop
scas
pop
jmp
and
mov
mov
adc
fld
push
push
and
and
rol
fcomip
add
fsub
lock
test
lods
pop
mov
adc
and
push
mov
push
add
int
xlat
(bad)
mov
in
arpl
pushf
out
das
jecxz
and
mov
push
ss
cdq
adc
mov
push
cmp
mov
jnp
ins
shl
cmps
gs
std
pop
pusha
sub
aad
adc
jb
gs
fwait
lds
cld
cmc
mov
arpl
mov
fst
cmps
inc
and
add
jne
sub
(bad)
in
mov
jbe
push
gs
pop
mov
neg
dec
pop
into
jno
mov
js
mov
xchg
dec
pop
in
retf
mov
imul
sti
inc
es
mov
dec
add
jbe
sbb
iret
js
xchg
inc
out
inc
in
cs
dec
stos
jnp
fwait
js
sub
stos
nop
into
mov
sub
pop
addr16
sti
pop
aaa
int
mov
push
pop
mov
dec
pop
and
add
aad
dec
pop
xchg
dec
inc
cmps
sbb
jp
in
sbb
scas
dec
std
mov
ror
clc
mov
shl
aad
fiadd
xchg
push
out
cmc
adc
out
loope
jle
(bad)
(bad)
sar
mov
into
stc
call
xchg
and
fnstenv
adc
aad
adc
loop
lock
ja
mov
aam
in
fmul
pop
add
fs
jp
pop
pushf
fs
adc
(bad)
fist
xchg
pop
push
push
jmp
mov
test
mov
rol
sbb
dec
xlat
shl
gs
push
push
xchg
not
mov
outs
xchg
push
in
arpl
fcom
mov
pop
jp
outs
not
pop
imul
push
dec
fistp
sbb
sbb
test
int
or
xchg
(bad)
jmp
inc
sub
repz
xlat
les
jae
sbb
xchg
enter
jmp
or
dec
sbb
jae
pop
inc
push
out
clc
sub
jge
nop
addr16
loopne
pop
mov
aas
scas
fsub
sar
shl
dec
and
(bad)
fimul
in
push
sbb
or
clc
addr16
pushf
pop
fcom
xor
jl
adc
inc
scas
shr
or
test
dec
mov
xchg
dec
and
cmp
rcr
shl
(bad)
scas
loop
cwde
fcomp
mov
(bad)
mov
jge
daa
test
sbb
rcl
out
call
lods
push
jno
fst
and
jg
pop
cwde
fnsave
(bad)
mov
sbb
sub
fcmovnb
or
ins
call
ret
les
dec
sbb
ja
cdq
adc
push
div
xchg
jl
lods
ss
sub
fsubp
adc
cmp
outs
xchg
repnz
add
mov
popf
lds
dec
mov
adc
scas
cs
cmp
xlat
jb
mov
mov
inc
jno
out
clc
cmp
test
scas
retf
cmp
push
jns
xlat
stos
pop
inc
and
sub
mov
xlat
loop
mov
pop
jmp
pop
cwde
movs
sbb
push
xor
loopne
mov
mov
sbb
and
xchg
xchg
xor
fwait
jb
push
scas
loop
mov
mov
and
mov
shl
nop
popa
movs
fimul
scas
xor
(bad)
stos
xchg
xchg
(bad)
(bad)
mov
lea
(bad)
retf
xchg
ret
adc
push
xor
push
rcr
sub
mul
mov
mov
inc
jne
mov
std
mov
shl
fyl2xp1
dec
push
mov
push
jecxz
pushf
psubw
fisubr
aaa
and
adc
imul
dec
cmp
fmul
call
(bad)
scas
pop
pop
jge
out
mov
hlt
dec
cdq
fcmovbe
retf
add
data16
cmp
rcr
mov
jg
sar
fld
inc
cdq
call
dec
pop
imul
cmp
add
ins
ins
mov
mov
mov
repz
push
les
mov
push
or
sbb
add
lds
fadd
push
push
(bad)
jmp
mov
std
fst
push
push
cdq
inc
adc
cmp
add
mov
(bad)
cli
clc
push
shr
into
mov
xchg
mov
sbb
out
xchg
call
loopne
mov
lods
std
imul
and
xlat
loope
jmp
je
iret
mov
or
sbb
jmp
scas
rcl
dec
mov
push
pop
lahf
xchg
popf
sub
mov
dec
in
xchg
fwait
add
sti
pop
loop
xchg
shr
data16
push
ret
push
push
mov
arpl
push
aaa
sub
inc
aad
(bad)
call
adc
out
push
cdq
arpl
sbb
sub
shl
ja
add
aas
clc
jnp
jae
and
fld
repz
adc
ja
loopne
fsub
repnz
xchg
out
rcl
retf
dec
xadd
mov
push
fld
std
loope
loopne
sbb
push
stos
jge
stos
or
shl
fld
mov
cs
or
push
in
popa
hlt
push
push
add
fld
jle
and
ret
leave
js
or
aaa
adc
sub
mov
and
in
pop
shl
pop
dec
jmp
ins
bound
adc
clc
xor
push
push
pop
dec
mov
sbb
call
out
pop
push
loopne
pop
ins
aad
mov
inc
sti
sbb
push
sbb
(bad)
lods
xor
(bad)
push
scas
mov
mov
aam
add
fcmovu
mov
imul
popf
cmp
lahf
dec
test
mov
(bad)
jno
xor
xlat
pushf
inc
mov
adc
adc
repz
pop
loopne
aas
adc
sbb
(bad)
xchg
cmp
pop
and
pop
int
inc
imul
out
inc
sub
add
xor
push
mov
neg
push
fldcw
imul
dec
inc
push
add
inc
call
int
sub
add
mov
or
pop
fs
pushf
mov
jge
or
pop
add
add
adc
jge
pop
push
sbb
lahf
mov
mov
fs
cld
inc
xor
test
pushf
push
rcr
ins
(bad)
ret
cmp
pusha
cmp
aas
scas
sbb
outs
lea
daa
or
popa
pop
and
dec
mov
test
aad
adc
jg
jecxz
lods
into
retf
pop
leave
xor
mov
push
daa
jo
pushf
pop
bound
jae
mov
aad
sub
mov
inc
sbb
jae
pop
pop
or
cmp
sbb
arpl
lds
aaa
ror
in
or
loop
enter
cmp
enter
rol
xchg
test
out
pop
stos
icebp
fst
cmps
stos
jnp
push
inc
lods
or
sub
push
pop
rcr
dec
loopne
scas
fst
or
daa
xlat
cmps
mov
shl
(bad)
push
adc
icebp
inc
adc
in
(bad)
mov
jb
mov
xor
mov
in
arpl
sub
cmp
retf
std
rcl
or
push
xchg
dec
in
stc
push
idiv
xchg
or
cmp
and
mov
out
mov
pop
out
and
push
sbb
xlat
mov
mov
aaa
out
xchg
pop
dec
sbb
dec
aaa
shl
pop
movs
scas
daa
in
sub
xchg
mov
jns
pop
and
lods
mov
hlt
push
and
and
ds
pop
shr
mov
aad
inc
push
sbb
test
add
adc
adc
mov
fiadd
scas
paddd
cmp
and
jne
push
out
pop
pop
neg
sbb
dec
adc
leave
pop
daa
push
dec
dec
movs
out
push
push
sbb
aad
pop
push
aaa
sbb
fld
pop
push
pop
add
inc
or
push
push
dec
and
sbb
ret
push
xchg
scas
push
mov
(bad)
mov
jmp
dec
cmps
sub
nop
jmp
pop
adc
stos
push
rcl
xchg
xor
int3
mov
mov
into
mov
mov
pop
mov
out
mov
hlt
jbe
mov
loop
pushf
aaa
fistp
aaa
jb
xor
cdq
test
scas
lock
imul
pop
retf
xchg
retf
sar
xlat
mov
fisubr
cmp
pop
xor
dec
inc
stos
sbb
pop
pop
jnp
cmp
(bad)
cdq
jne
cmps
dec
leave
int3
popf
cli
push
imul
loope
ror
fidivr
cs
inc
stos
push
ss
mov
in
inc
(bad)
in
mov
mov
aam
mov
dec
or
(bad)
xor
pop
movs
cmc
imul
ins
outs
mov
xchg
aas
int
repz
enter
stos
dec
cmp
push
mov
adc
movs
push
pop
inc
push
inc
(bad)
pop
(bad)
fcomp
lods
sbb
cmp
pop
sar
cmp
dec
pop
sub
iret
push
xor
retf
pop
mov
jnp
not
xor
jmp
push
aad
mov
test
fsub
rol
idiv
add
call
pop
mov
ds
push
cmp
mov
(bad)
cmp
js
rcr
jns
popa
mov
push
adc
xchg
pop
sbb
add
or
ins
or
mov
push
cmps
jno
shl
xchg
test
fdiv
sub
or
mov
sub
mov
add
fiadd
xor
out
cdq
ror
xchg
nop
data16
sti
repnz
les
cs
aad
xor
or
lods
lahf
cmps
mov
out
mov
push
xchg
inc
mov
adc
(bad)
jecxz
mov
push
mov
inc
inc
fcomp
adc
or
rol
data16
adc
aaa
or
repz
js
push
dec
jmp
call
cmp
jge
mov
and
fisub
(bad)
xlat
cmps
(bad)
cmp
mov
xchg
mov
xlat
in
xlat
imul
add
out
rcl
in
stc
xchg
and
dec
xchg
movs
mov
aas
sar
push
push
sbb
sbb
retf
das
cdq
and
inc
xor
adc
shl
push
ret
in
das
add
bound
test
jnp
inc
mov
cmp
clc
jmp
(bad)
cs
mov
std
addps
xchg
shl
sub
pushf
cmp
in
mov
or
scas
(bad)
xor
jns
(bad)
pop
enter
pop
inc
(bad)
outs
sbb
rcr
in
mov
aam
sub
loope
retf
sub
cld
loop
xor
aam
xchg
cli
mov
pop
dec
push
inc
xchg
es
mov
pop
jecxz
jnp
adc
jnp
sub
aaa
xchg
loopne
nop
clc
test
in
lods
dec
arpl
fld1
pop
rcr
pusha
pop
jno
cwde
jnp
icebp
or
adc
imul
xchg
cmp
lea
pop
jmp
mov
in
jno
stc
ja
out
or
test
or
mov
out
pop
dec
neg
xchg
sbb
cli
loop
outs
mov
mov
lea
xchg
daa
aaa
into
dec
pop
fwait
stos
loopne
out
jmp
(bad)
adc
dec
js
imul
xchg
xchg
ror
fild
xor
pop
clc
mov
out
push
ins
xor
dec
xchg
les
in
xchg
push
out
and
popf
or
push
pop
aaa
test
lahf
arpl
ror
jo
loop
je
call
(bad)
and
inc
jge
cmps
jae
js
stc
jns
cmps
js
dec
mov
sti
pop
inc
fcomp
dec
out
popa
pop
mov
pop
add
dec
dec
fidiv
jo
push
stos
xor
push
cmp
push
pop
loop
aas
cmp
rcr
movzx
add
sbb
shl
and
mov
cmp
mov
pop
mov
adc
rcr
pop
and
(bad)
hlt
cwde
jg
push
ins
mov
cwde
mov
jo
jbe
mul
dec
xchg
out
push
rol
lods
sub
xor
mov
icebp
mov
sbb
inc
out
xchg
pop
lods
pop
mov
xor
and
out
add
sub
test
add
fiadd
xchg
adc
push
cld
retf
inc
(bad)
mov
adc
sti
jo
shl
out
(bad)
test
loope
sub
mov
mov
js
mov
mov
xor
or
idiv
pop
ins
sahf
ds
stc
lock
sub
adc
jmp
popf
inc
outs
lods
mov
and
out
idiv
fisttp
pop
xlat
(bad)
and
sub
out
pop
(bad)
jmp
out
cdq
jnp
popf
mov
lea
pop
dec
sub
push
or
in
mov
aaa
mov
sub
pop
daa
stos
sub
test
(bad)
(bad)
fcmovbe
xor
push
arpl
es
lods
(bad)
pushf
test
pop
mov
xor
sahf
add
xor
in
mov
add
inc
cmp
mov
sub
pop
cdq
stc
push
mov
mov
or
mov
sub
aam
inc
movs
repz
into
or
or
sar
xchg
cmp
ds
je
xchg
gs
sbb
mul
ins
fwait
sub
xor
movs
push
cs
ror
mov
push
mov
sub
test
dec
das
or
sbb
ins
xlat
aam
push
leave
(bad)
push
call
cld
xchg
xor
stc
push
jbe
mov
adc
(bad)
xor
xchg
push
cmp
cmps
out
(bad)
cmp
lock
popa
add
pop
daa
fdiv
mov
aaa
jg
mov
dec
sbb
sti
out
and
mov
stos
fadd
inc
in
mov
push
fistp
aaa
rcr
mov
fcomp
xchg
leave
push
ds
or
mov
pushw
aaa
shr
and
rcr
ficom
out
pop
inc
movs
dec
pop
pop
stos
popf
imul
sub
stc
dec
je
sbb
pop
pusha
mov
(bad)
movs
cmp
not
add
aaa
add
adc
jnp
mul
dec
or
push
gs
(bad)
mov
inc
mov
sbb
and
dec
mov
xor
push
jmp
inc
add
sub
sbb
adc
push
not
sub
mov
mov
dec
mov
jo
jmp
int3
xor
test
pop
ss
push
xchg
inc
ror
stos
in
xchg
or
cmp
stos
xor
fwait
mov
xchg
mov
pop
rep
mov
push
dec
mul
dec
sahf
cmc
add
jmp
xchg
inc
add
loope
push
xor
inc
test
out
push
movs
jle
inc
into
sub
repnz
out
xor
idiv
push
xchg
dec
jp
es
retf
push
xchg
adc
mul
mov
jne
nop
add
mov
sbb
push
xor
mov
jmp
out
int3
push
push
sbb
sbb
stos
cdq
scas
les
js
or
pop
adc
xchg
rcr
lock
nop
add
sbb
mov
sbb
cmp
in
ja
xor
cld
in
dec
cdq
out
mov
cld
mov
outs
mov
iret
dec
nop
mov
or
out
xor
sbb
sub
inc
ficomp
adc
mov
stos
and
sub
fistp
jno
dec
sub
pop
aad
push
sbb
jmp
mov
jl
out
fnstenv
adc
sub
mov
push
sbb
out
jg
in
pop
and
in
pushf
nop
cld
sbb
jp
xchg
imul
pushf
dec
dec
xchg
mov
inc
fstp
retf
xor
push
gs
jge
vorps
adc
mov
outs
icebp
xchg
or
sub
jp
loopne
xchg
push
xchg
add
dec
sbb
aam
and
sbb
sbb
adc
jmp
jl
jl
mov
dec
popf
add
push
mov
xor
ror
dec
jns
add
jecxz
ficomp
xchg
pusha
xacquire
inc
enter
xchg
call
shr
inc
sub
or
fbstp
inc
xchg
fst
fistp
minps
hlt
pop
push
inc
fcomp
pop
xlat
pushf
push
xchg
iret
call
xlat
dec
xor
popf
add
adc
scas
xchg
test
inc
sti
pop
repz
mov
div
fcomp
add
movs
cli
adc
mov
in
rcl
fmul
pop
into
lods
dec
aam
jne
or
sti
pusha
push
dec
push
icebp
push
adc
jnp
test
out
pop
cmps
fidiv
in
loop
sub
pop
in
mov
out
inc
lea
fst
xlat
sub
nop
sbb
enter
add
fsubp
push
mov
fisub
mov
pop
and
in
fwait
dec
and
jnp
mov
cwde
cdq
mov
sbb
and
cmp
lods
xor
jo
mov
xchg
mov
not
sub
jne
popf
dec
dec
pop
sub
adc
aam
jbe
popa
hlt
xchg
mov
rcr
push
jmp
je
aaa
sub
jg
retf
xor
dec
pop
dec
retf
jl
daa
jb
stos
push
(bad)
xchg
xchg
addr16
push
add
jae
mov
jns
ins
pop
push
(bad)
mov
(bad)
pusha
pop
imul
push
xor
pop
inc
fcom
bound
sbb
ds
sub
cs
mov
xor
daa
int
(bad)
jmp
jmp
jl
out
mov
jbe
mov
push
loope
sbb
xchg
add
(bad)
adc
sub
adc
xor
mov
ins
dec
popa
sub
std
call
cmps
mov
adc
and
mov
push
push
mov
push
pop
fwait
mov
adc
sub
mov
cmp
lahf
ss
retf
int3
xlat
inc
call
cli
test
cs
adc
ins
jae
dec
push
xchg
imul
or
mov
adc
push
and
stc
(bad)
(bad)
loop
fiadd
cld
mul
aaa
adc
inc
jp
or
loope
pop
(bad)
cmp
cmp
in
fistp
lahf
dec
loop
(bad)
mov
or
push
xlat
stc
aas
out
add
inc
dec
inc
mov
hlt
adc
aaa
pop
(bad)
rcl
sub
pop
lds
inc
popa
push
mov
(bad)
fld
mov
mov
inc
sbb
(bad)
pop
in
pop
lock
xchg
jno
arpl
out
mov
jmp
adc
int
shr
or
sbb
adc
cmps
icebp
nop
mov
arpl
xor
or
(bad)
sti
dec
outs
ret
rcl
sub
mov
dec
aam
(bad)
aam
es
push
push
mov
inc
push
jl
mov
daa
inc
dec
loopne
inc
neg
shl
jnp
push
mov
test
ret
pop
or
inc
stos
xor
and
sbb
mov
jge
imul
xor
or
imul
enter
ds
mov
dec
stos
sub
sub
mov
dec
(bad)
add
sub
leave
sti
push
and
xor
adc
cld
stc
or
pop
rol
fimul
and
out
mov
shl
mov
icebp
lods
test
stc
mov
mov
pop
loope
pop
int
push
aad
adc
fcom
sbb
cld
push
cwde
mov
mov
cmp
mov
(bad)
jmp
sbb
jno
xchg
icebp
mov
loope
xor
or
ins
sub
mov
test
push
lock
mov
mov
(bad)
mov
nop
xchg
dec
(bad)
cmp
dec
pop
(bad)
aam
and
xor
aaa
int
cdq
xor
popf
inc
add
cdq
int3
xor
imul
data16
sub
or
les
loop
daa
jbe
push
(bad)
xor
loopne
jae
pop
inc
inc
mov
xor
dec
xchg
scas
cmps
and
movs
mov
mov
loopne
inc
sbb
das
mov
mov
inc
mov
in
mov
xor
cs
mov
popa
push
jmp
in
sub
adc
inc
push
lods
movs
push
imul
retf
mov
xchg
not
mov
push
pushf
pop
(bad)
cmp
add
push
pop
pop
outs
mov
add
lea
scas
or
add
push
shl
push
sti
fist
popa
mov
test
fild
lods
dec
popf
xor
push
std
jns
imul
sbb
fild
cwde
in
popf
mov
and
lea
pusha
inc
jmp
aaa
lock
mov
mov
call
or
fisub
mov
mov
mov
pop
and
in
push
mov
cs
(bad)
inc
mov
mov
dec
mov
mov
in
mov
(bad)
js
call
into
jo
cmp
inc
inc
sub
mov
ins
sub
dec
(bad)
div
adc
loopne
inc
loop
cs
xor
push
es
xor
fisttp
fnsave
adc
rol
push
cmps
jo
push
ja
pop
push
adc
sub
dec
mov
loopne
jg
mov
pop
inc
sbb
(bad)
jmp
sub
(bad)
cmp
jo
adc
ss
dec
(bad)
xor
xchg
pop
fidiv
scas
jne
pop
loop
fstp
pushf
pop
adc
dec
add
loopne
push
test
xchg
retf
mov
add
and
pop
push
mov
not
xchg
loope
stos
mov
bswap
rcl
sbb
dec
call
stos
cdq
pop
mov
(bad)
xchg
mov
push
dec
sub
sbb
push
mov
mov
jle
retf
shr
xchg
nop
cmp
loopne
mov
gs
adc
(bad)
sub
xchg
clc
int3
xor
cld
test
push
pop
(bad)
push
mov
or
mov
fisttp
call
(bad)
imul
and
ins
sahf
xchg
into
push
loop
test
mov
lods
xchg
xchg
jb
stc
ins
cli
enter
mov
sub
imul
ret
sub
sub
call
or
loopne
lods
(bad)
adc
fidiv
fwait
test
arpl
adc
sub
scas
push
addr16
mov
sbb
inc
pop
je
pop
cmp
bound
loope
xlat
mov
xor
pop
and
sbb
in
add
arpl
pop
outs
jp
aaa
mov
pushf
cs
mov
(bad)
test
std
jge
iret
shl
and
gs
sub
cmp
or
not
mov
nop
outs
inc
add
ins
(bad)
dec
(bad)
cld
push
aaa
or
and
rcl
mov
cmp
fcom
out
sar
inc
inc
jnp
dec
push
xchg
(bad)
push
fcmovb
inc
sbb
sub
mov
mov
shl
retf
mov
jb
dec
jecxz
push
mov
sub
sub
movs
int3
dec
fnstsw
sub
movs
pushf
push
pop
(bad)
in
(bad)
fldenv
pop
(bad)
in
jo
addr16
push
rol
std
jae
fdivr
jmp
or
fstp
loopne
scas
in
sub
xchg
pop
push
arpl
jne
xchg
mov
adc
outs
cmps
inc
pop
and
fld
outs
enter
retf
or
mov
pop
add
or
xchg
daa
jae
in
rcl
push
sbb
mov
adc
popf
jmp
fcomp
into
or
push
inc
adc
inc
pop
test
int3
out
mov
and
xchg
cmp
cld
adc
ret
mov
jbe
or
std
mov
out
test
pop
xchg
sbb
fmul
(bad)
test
int3
mov
cdq
sar
adc
aam
test
push
fwait
pop
mov
loope
aaa
push
popf
push
and
(bad)
sbb
ret
inc
outs
call
dec
lods
std
pop
or
leave
neg
sub
rcl
mov
xor
inc
add
push
cld
lods
push
jmp
mov
(bad)
dec
cld
sub
adc
lods
or
daa
adc
sbb
mov
inc
xor
rcr
adc
pop
cmp
test
push
sahf
sbb
pop
enter
dec
add
mov
addr16
and
xor
addr16
jle
int3
xchg
mov
dec
rcl
jne
mov
int
pushf
push
test
rcr
mov
shl
pop
mov
xor
cmp
addr16
pop
test
xchg
sub
hlt
mov
push
inc
pop
ror
int3
les
mov
stos
sub
jns
pop
sahf
sbb
xchg
cld
mov
fs
lea
inc
retf
jne
push
mov
xchg
or
cmp
fs
outs
add
pop
pop
dec
(bad)
cdq
jmp
sub
int
retf
adc
xor
retf
and
cld
sub
push
aaa
pop
push
pop
pushf
cmps
loop
mov
and
test
jmp
int3
fisttp
pop
push
pop
aas
jmp
mov
jmp
xlat
(bad)
in
mov
not
gs
sub
mov
rol
push
fmul
jp
sbb
add
pop
imul
dec
jmp
mov
jnp
jno
lock
xchg
and
je
mov
mov
mov
packsswb
mov
aam
add
inc
sbb
out
sbb
sbb
push
or
stos
dec
dec
in
ror
xchg
cmp
jo
jmp
mov
dec
adc
push
dec
mov
jmp
call
mov
mov
adc
jmp
lea
sbb
mov
rcr
pop
xor
and
push
cmp
add
sub
inc
push
mov
shr
push
push
push
data16
stc
ret
sub
xchg
push
sub
std
add
mov
stos
arpl
stos
xchg
icebp
fisttp
push
cmps
dec
call
inc
aad
(bad)
ja
mul
and
adc
jg
in
popa
popf
jecxz
push
(bad)
mov
push
icebp
sti
jae
inc
sub
addr16
cmps
je
push
mov
mov
jmp
jmp
std
jmp
outs
xor
pusha
xchg
add
mov
cmps
mov
or
mov
xor
shl
out
mov
fcomp
adc
push
sub
sbb
sbb
addr16
sbb
mov
sar
dec
rcl
movs
adc
ror
(bad)
xchg
(bad)
jo
adc
jns
sub
(bad)
retf
enter
ss
cmp
mov
jo
ins
xchg
sti
(bad)
stos
fist
dec
mov
test
sbb
mov
aad
jge
mov
add
in
or
jg
imul
imul
mov
in
adc
mov
jg
sbb
es
push
call
mov
sub
outs
arpl
push
(bad)
imul
bound
iret
les
cmp
mov
push
stc
mov
add
scas
push
cmps
loope
movs
mov
xor
fisttp
adc
cli
adc
fsubr
push
ins
jg
(bad)
xchg
in
loop
jp
add
fnstcw
xchg
(bad)
dec
lods
imul
xchg
stos
dec
ins
xchg
rol
std
ins
and
push
sbb
xchg
shr
adc
test
sbb
xor
pop
sbb
inc
cs
mov
movs
sbb
call
push
xchg
xchg
inc
(bad)
in
xchg
out
jmp
jo
popf
jns
mov
adc
sbb
cmp
call
jmp
pushf
pop
push
fs
dec
hlt
xchg
inc
sbb
jl
jl
pop
jnp
test
pushf
dec
mov
out
call
xchg
xor
ds
push
push
sahf
fisubr
aam
iret
jmp
sub
dec
fs
jge
sub
lds
cmp
and
ss
test
ret
inc
lods
and
ret
fdivr
mov
sub
call
or
push
and
jmp
mov
das
cmp
(bad)
int
mov
xchg
add
sbb
xchg
outs
std
aas
out
cwde
push
stc
pop
pop
dec
push
and
fild
(bad)
hlt
or
(bad)
shl
adc
adc
retf
jns
push
adc
fmul
pop
pop
jmp
adc
pop
das
rol
push
mov
pop
sub
cmps
jp
(bad)
pop
mov
dec
push
je
push
aas
sbb
mov
test
inc
mov
mov
add
test
pop
call
addr16
pop
rcl
fld
mov
xchg
jns
cwde
fs
add
inc
mov
mov
fistp
(bad)
push
aas
jnp
mov
pushf
adc
stc
aad
pop
jne
rol
sbb
push
cmps
invd
cld
mov
jns
xchg
adc
pop
jmp
leave
jbe
cmp
cmp
push
jnp
ja
in
out
fadd
or
cmp
jmp
pop
repnz
std
mov
clc
jo
lea
sub
lahf
lods
mov
les
aad
in
jo
rcl
(bad)
adc
add
lods
lods
cmp
imul
cmp
mov
cmp
fidivr
sahf
shl
cmps
sub
pop
ins
push
pop
mov
outs
nop
cmp
pop
jne
sbb
xlat
shl
add
cmps
mov
push
sbb
dec
int3
push
ins
jmp
clc
or
xlat
mov
in
popa
iret
mov
imul
and
xchg
push
sar
push
das
arpl
push
shld
xchg
push
icebp
xlat
jne
mov
pop
dec
cdq
int
cmp
sbb
and
cli
inc
rcr
push
dec
pop
push
out
fld
pop
pop
cwde
hlt
std
shl
cld
stc
xor
stos
pop
cwde
les
pop
cmp
adc
pushf
(bad)
pop
fisubr
jle
aad
pop
cmp
and
inc
sub
jle
pop
push
fnstenv
pop
mov
and
mov
add
bswap
and
in
or
pop
imul
mov
ror
ds
push
cmp
inc
add
mov
int3
rcr
call
jp
icebp
jb
es
or
int3
dec
jmp
add
push
dec
stc
lds
std
je
cli
push
std
popa
push
aam
fcomp
sti
sahf
pop
lods
cmp
scas
fmul
int
xlat
push
mov
out
in
mov
pushf
mov
jge
(bad)
mov
xchg
(bad)
enter
es
mov
fsubr
call
movs
in
scas
jmp
dec
sbb
cmps
adc
ret
aaa
rcr
mov
rcl
outs
mov
dec
xor
repnz
add
or
lock
fistp
mov
and
fistp
add
fistp
pop
in
pushf
bound
ss
add
sti
pop
add
sbb
(bad)
in
cmp
pop
fsub
add
nop
scas
stc
cmc
and
in
popf
loopne
cmp
lds
ret
fdiv
clc
push
dec
add
xchg
add
dec
ficom
int
lock
(bad)
adc
inc
cmp
jp
push
push
mov
inc
aas
(bad)
xlat
inc
ds
push
fcmove
xlat
repnz
outs
pop
nop
leave
inc
rcr
and
gs
dec
fldenv
cdq
pop
push
push
out
fbstp
lds
xlat
gs
dec
out
es
fs
arpl
inc
sub
adc
push
nop
shr
sbb
mov
movs
jge
call
out
mov
popf
mov
pop
ins
cmp
outs
push
imul
in
mov
ins
or
mov
ins
jmp
ja
inc
cmovge
(bad)
mov
mov
fnstenv
pop
sbb
mov
call
(bad)
repnz
push
sbb
std
ja
es
mov
xchg
push
jp
adc
or
add
cmp
test
loopne
cmp
loop
cmp
dec
dec
inc
mov
sti
mov
shr
out
daa
xor
jl
xor
pop
mov
cmp
pop
addr16
out
je
sbb
mov
loop
(bad)
inc
mov
mov
test
cmp
sar
lahf
push
inc
in
inc
mov
push
sub
ins
jnp
add
movs
fwait
call
inc
cdq
outs
mov
xchg
cwde
and
ds
cmp
call
pop
mov
(bad)
xchg
scas
mov
out
lock
in
mov
fld
adc
out
adc
stos
sbb
comiss
pushf
and
mov
xchg
pop
sbb
test
dec
pusha
mov
movs
dec
pop
test
mov
jecxz
jbe
sub
mov
jg
sbb
adc
push
pop
vshufpd
sub
mov
ss
fisub
inc
ficom
leave
mov
scas
sbb
push
mov
jnp
xor
mov
fcomp
loopne
stos
or
out
mov
inc
jecxz
std
bound
dec
jg
mov
jnp
jg
xchg
lea
sbb
mov
into
and
int3
test
push
dec
pop
fsubrp
or
or
popa
add
pop
std
lock
adc
push
shl
mov
cmc
jmp
and
dec
lea
sahf
push
xchg
or
std
mov
pop
xor
cs
stos
sar
fcmovne
lea
repz
std
dec
xchg
xchg
fld
mov
jb
mov
xor
fucom
jge
sbb
sub
gs
xchg
outs
pop
push
inc
loop
push
mov
xchg
push
ins
sbb
cdq
test
mov
add
das
fimul
out
int
icebp
fld
(bad)
rcr
rcr
push
ret
push
shl
popf
cli
loop
and
arpl
xlat
ja
jle
enter
stos
sti
loope
dec
call
bound
ret
push
adc
imul
fimul
adc
inc
adc
jb
pop
clc
mov
sbb
cld
xchg
inc
ds
dec
xchg
xlat
call
jecxz
int3
les
mov
sbb
fs
and
jnp
add
(bad)
daa
std
cmp
jb
ins
test
dec
pop
scas
xor
mov
and
cwde
and
dec
push
mov
fcmovu
cmp
ja
jb
fild
jg
enter
push
mov
xor
adc
inc
ret
push
jo
mov
shl
pop
sbb
outs
mov
out
mov
es
add
pop
jmp
pusha
push
sub
icebp
sbb
mov
cmps
jge
dec
dec
xchg
retf
std
inc
imul
in
arpl
sbb
jo
mov
cmp
(bad)
mul
imul
push
mov
(bad)
iret
out
shl
ins
fs
xchg
stc
and
inc
pop
cld
clc
in
pop
sbb
stc
xchg
mov
and
mov
std
or
dec
ins
fdivr
inc
inc
aad
out
adc
xchg
stos
cmp
int
loope
xor
inc
inc
je
push
jmp
jmp
jmp
rcl
in
rol
mov
pop
stos
aam
(bad)
cwde
pop
imul
mov
ret
inc
(bad)
fcomp
int3
push
icebp
(bad)
push
enter
cmps
xchg
mov
or
dec
cld
lods
aad
adc
mov
xor
and
adc
dec
imul
data16
fdivr
dec
push
pop
cs
push
sub
push
shr
push
jae
rcr
js
loopne
mov
xlat
mov
mov
lock
mov
jg
push
retf
pop
xchg
cmc
pop
xor
cmp
mov
add
lar
mov
sbb
xor
jb
aam
add
or
repnz
cmp
(bad)
sbb
sub
shl
jno
outs
es
adc
fucomi
and
mov
int3
arpl
mov
test
nop
les
test
push
sahf
mov
fcmovnu
call
add
imul
dec
out
pushf
pop
movs
lds
stos
jae
adc
inc
pop
mov
mov
mov
pop
and
pop
xor
pop
mov
hlt
push
dec
jnp
and
pop
(bad)
jo
int3
fnop
je
mov
sbb
push
cdq
aam
dec
rol
sub
pop
aad
sub
mov
fisttp
loopne
ds
cmps
pop
mov
leave
repnz
sar
rcr
shr
add
push
pop
movs
mov
les
push
gs
das
jne
lods
xchg
or
jne
lahf
pushf
xor
add
into
in
loopne
ss
ret
sub
xchg
sub
cmp
inc
fs
mov
fsubr
mov
cmp
push
inc
sbb
out
shl
sub
std
scas
adc
dec
mov
js
aam
inc
adc
mov
and
push
mov
ins
or
mov
push
mov
push
inc
xchg
xor
ss
mov
ins
pop
pop
lods
in
inc
cmp
out
aas
add
xchg
xor
sahf
fs
xor
inc
jne
jl
lea
dec
mov
(bad)
das
cmp
(bad)
mov
jge
sub
bound
inc
stos
lock
mov
(bad)
movs
push
cmp
push
mov
sbb
aad
add
add
jne
adc
rol
sub
dec
inc
outs
jnp
mov
xchg
rcr
inc
rol
push
test
movs
pop
into
or
mov
fiadd
hlt
es
cmps
sbb
dec
fistp
xor
mov
(bad)
jmp
push
add
test
push
pop
inc
in
add
ror
and
adc
repz
sbb
push
or
enter
mov
out
sar
iret
(bad)
sbb
dec
adc
xor
or
dec
push
into
aam
xchg
and
aam
mov
je
out
jp
mov
xchg
call
(bad)
nop
push
call
scas
(bad)
mov
xchg
add
xchg
jbe
(bad)
dec
pop
add
mov
into
fs
dec
or
test
xchg
sbb
test
push
mov
popf
mov
ja
push
scas
cld
mov
das
pop
stc
stos
pop
fwait
mov
nop
or
sbb
retf
adc
out
(bad)
in
jge
aaa
aaa
cmovl
nop
dec
cld
leave
mov
push
test
aam
addr16
inc
xor
hlt
jg
dec
adc
mov
test
mov
jp
push
in
(bad)
fwait
xchg
add
jp
mov
(bad)
dec
fcomp
aam
jb
add
es
sbb
pushf
fisttp
or
cmp
nop
mov
rcl
jmp
icebp
xchg
xor
pop
add
adc
cmps
cmp
test
cmp
lock
adc
sub
jmp
mov
fist
pop
cwde
inc
mov
sub
out
aas
inc
sub
inc
pop
xlat
add
rep
push
sbb
(bad)
ret
or
jmp
retf
outs
and
push
jmp
mov
mov
sub
out
adc
push
inc
ins
fistp
sahf
popf
lock
sub
aad
retf
add
cmp
sub
pop
dec
xchg
(bad)
(bad)
push
sbb
pop
mov
aam
outs
dec
stos
into
fldlg2
and
add
in
rcr
jmp
ret
jo
sbb
xor
(bad)
add
dec
or
test
sub
push
retf
mov
or
pop
and
scas
sub
test
(bad)
xor
jno
pushf
dec
aam
dec
cmp
adc
jb
sub
add
xlat
or
inc
icebp
jecxz
dec
push
cmps
mov
mov
pop
rcr
aas
and
sub
mov
dec
or
ds
call
shl
ja
pushf
pop
ficom
popf
xchg
imul
sbb
mov
scas
cmp
clc
inc
loopne
mov
pop
int3
adc
dec
dec
(bad)
leave
inc
sbb
outs
mov
sub
les
aam
pop
cdq
scas
mov
push
test
and
imul
inc
enter
out
cwde
dec
fadd
xchg
dec
mov
mov
inc
mov
dec
repz
mov
dec
cmp
(bad)
rcr
fdivr
and
mov
or
(bad)
retf
add
adc
mov
daa
nop
sub
push
shr
inc
hlt
pop
(bad)
cld
inc
add
pop
jmp
std
adc
sbb
stos
dec
imul
arpl
lods
sub
pop
scas
mov
push
mul
adc
mov
inc
sahf
mov
cs
jle
sub
rcl
jmp
cmps
mov
and
xor
dec
arpl
xchg
repnz
dec
addr16
outs
dec
pop
push
sub
dec
mov
(bad)
jns
scas
cwde
scas
lock
pop
sub
les
leave
in
and
fisttp
mov
jp
test
mov
js
pop
and
xor
loopne
jno
xor
mov
ja
fdiv
daa
mov
(bad)
out
dec
mul
cmp
and
and
mov
int3
ret
in
icebp
push
dec
dec
out
mov
mov
pop
shl
movs
rcl
dec
test
xlat
mov
sub
xchg
hlt
(bad)
push
and
fld
hlt
jbe
or
cmp
jae
xchg
pop
mov
pop
xchg
cmc
and
sub
fild
outs
pop
jnp
add
pop
lea
test
in
mov
leave
jecxz
pusha
enter
pop
or
lods
in
xchg
fmulp
jp
push
push
mov
adc
mov
xchg
cld
rcr
jp
imul
add
adc
push
mov
aad
inc
leave
sti
pop
push
jp
push
mov
xchg
jae
nop
daa
loope
adc
mov
push
fcom
dec
xor
or
dec
fild
test
push
sti
lock
mov
sbb
jmp
push
sub
mov
jge
inc
aam
mov
ret
or
call
mov
xchg
xor
gs
fmul
pop
mov
and
pop
pushf
mov
add
push
dec
cmp
sti
pop
mov
sbb
push
add
addr16
ss
pop
sbb
inc
mov
push
fdiv
add
or
fnop
es
stc
jnp
rdmsr
sbb
repz
inc
mov
and
add
sbb
push
fimul
and
test
(bad)
mov
and
in
xchg
pop
int3
and
adc
inc
cld
xchg
jo
mov
xchg
push
jae
test
std
aad
inc
pushf
leave
enter
xor
(bad)
mov
fdiv
mov
cdq
pop
sub
mov
mov
mov
mov
icebp
adc
mov
xor
push
jo
adc
out
mov
pop
cmp
push
ins
popf
add
cmps
dec
cs
pop
test
dec
xchg
push
sub
adc
add
shl
iret
inc
repnz
inc
inc
pop
test
inc
pop
sbb
xchg
fcomp
mov
pop
pop
int
mov
dec
frstor
lock
imul
cs
push
mov
fld
xchg
imul
and
mov
ins
xchg
ds
push
mov
jle
jo
popa
mov
div
pop
ss
iret
pop
cmp
stc
cmps
mov
movs
lods
fstp
jbe
sbb
(bad)
rol
shr
mov
pop
es
jmp
mov
jl
mov
sbb
les
push
div
sub
add
dec
ins
xor
dec
inc
(bad)
inc
inc
jmp
adc
add
jmp
dec
cmp
rcr
cmps
or
movs
sbb
and
aam
lahf
jecxz
cmp
dec
jl
in
add
daa
dec
sbb
jnp
jmp
pop
and
push
ret
pop
loop
sbb
dec
aas
push
test
frstor
pop
xchg
adc
xor
in
call
call
inc
adc
push
aaa
push
or
and
ja
cmp
js
ds
jmp
mov
gs
adc
push
pop
dec
jnp
aas
xor
sub
push
inc
sub
fadd
into
mov
pop
cmp
test
es
mov
push
push
dec
sbb
int3
xlat
push
cmp
repz
jnp
xchg
popf
mov
aad
(bad)
out
sbb
lods
mov
sar
fsub
mov
in
push
movs
pushf
adc
adc
dec
out
(bad)
or
cld
clc
in
jne
dec
jo
jne
dec
in
push
xor
leave
std
jmp
adc
sbb
stc
cld
add
hlt
and
in
jno
mov
jmp
fldenv
mov
mov
jmp
mov
jle
pushf
pop
aas
(bad)
aam
daa
dec
aaa
cmp
int3
enter
inc
sbb
cwde
adc
add
in
outs
jo
ins
les
add
ds
repz
xchg
sbb
xor
push
out
jp
or
cwde
lock
jmp
mov
dec
in
ins
imul
ja
mov
mov
daa
imul
icebp
sbb
add
sub
cmp
lds
and
stos
mov
inc
mov
daa
xor
fchs
mov
jl
push
pop
iret
sar
jbe
dec
sar
xor
dec
out
aaa
out
fwait
mov
dec
pop
mov
test
pop
rcr
lea
sbb
movs
inc
not
mov
ret
jle
add
fcmovbe
cmp
mov
add
jg
stos
inc
nop
loopne
lock
out
sbb
(bad)
icebp
arpl
mov
call
fist
push
movs
xchg
xchg
cwde
adc
xor
and
test
enter
xor
push
test
je
les
mov
or
dec
sub
int
popf
es
sbb
fidivr
pop
int3
es
push
fmul
pop
mov
sub
mov
(bad)
or
(bad)
add
mov
stos
int
mov
std
sub
push
nop
rcl
push
inc
push
add
idiv
out
loopne
loopne
adc
mov
arpl
push
dec
arpl
(bad)
addr16
loopne
add
cmp
stos
sub
cmp
into
(bad)
jmp
jle
xor
xchg
int
jge
xor
and
adc
cmp
mov
add
test
jle
jmp
mov
mov
neg
or
test
jno
call
into
mov
jg
cwde
(bad)
(bad)
and
loop
dec
outs
dec
out
xchg
add
mov
xchg
lds
adc
fcmovbe
fwait
clc
and
pop
aad
cmp
inc
cli
mov
sar
outs
dec
das
test
mov
sub
xchg
push
rol
mov
ret
jnp
movs
in
inc
nop
cmp
ja
mov
in
retf
fwait
movs
aam
pop
adc
sub
xlat
jmp
cwde
adc
scas
mov
pop
popa
push
or
inc
sub
sub
fdiv
mov
mov
shr
pop
dec
mov
xchg
push
aad
popa
nop
push
cdq
fstp
xchg
mov
jmp
aas
push
push
(bad)
hlt
mov
xor
sub
mov
mov
xchg
adc
lock
xchg
xchg
cmp
mov
loope
dec
lods
dec
ds
and
inc
and
sub
stos
adc
dec
movs
push
mov
jb
sbb
xor
xor
pop
cs
ss
ins
test
cs
xor
fcomp
fld
push
push
idiv
out
fdivrp
fisttp
xchg
pop
in
addr16
inc
jae
cmp
dec
ins
mov
pop
sub
pushf
dec
pop
dec
xchg
pop
loopne
push
loopne
fld
mov
pushf
push
jmp
xor
loopne
xchg
(bad)
fimul
add
in
(bad)
mov
arpl
push
aam
mov
loopne
aad
ror
jo
mov
popa
fstp
lock
int
fmul
push
jecxz
jb
lods
or
mov
pushf
sbb
repnz
inc
jmp
rcl
shr
mov
loope
cmp
xor
pop
je
nop
inc
movs
int3
into
mov
mov
inc
fidiv
push
sbb
mov
mov
mov
jmp
sti
jno
adc
push
jge
push
ror
mov
outs
inc
sbb
jp
arpl
sbb
and
dec
pop
retf
xchg
data16
ja
sti
in
ds
push
cmp
cmc
popa
fcomi
mul
int
data16
pand
jno
sbb
push
mov
(bad)
pusha
mov
mov
mov
popf
pinsrw
ret
adc
add
xchg
mov
shl
xchg
ds
mov
pop
jmp
xor
xchg
out
fld
cmc
xor
in
pop
mov
pop
aaa
stos
loope
xor
xlat
data16
(bad)
js
push
(bad)
retf
inc
pop
icebp
test
pop
dec
shr
push
pop
xchg
fs
add
iret
dec
lahf
mov
in
retf
sub
lods
in
jecxz
pop
(bad)
dec
mov
out
popa
repz
popa
not
xlat
pop
pop
pop
pop
stc
ret
mov
inc
test
pop
(bad)
cld
aaa
(bad)
and
mov
mov
sub
dec
lods
pop
cmp
xchg
out
mov
pushf
jnp
mov
mov
sbb
dec
sbb
jmp
cmp
dec
dec
loope
cmp
add
add
bound
sar
cmp
dec
add
jle
(bad)
fwait
xchg
(bad)
lock
inc
mov
cmp
mov
fstp
ror
addr16
movs
aas
jp
sti
sbb
shl
or
test
add
je
xor
rcl
xchg
pop
fucompp
rol
(bad)
sbb
arpl
inc
adc
pushf
push
xor
xchg
jmp
retf
pop
mov
push
lock
int3
jge
inc
push
push
mov
push
mov
outs
pop
sahf
jle
push
xchg
mov
adc
inc
sub
cli
leave
cld
sub
or
mov
cdq
in
loope
and
addr16
or
pusha
xchg
jmp
and
ins
and
les
push
jg
ficomp
mov
pop
adc
mov
fcomp
push
xchg
cmp
xchg
push
mov
jge
xlat
fwait
xor
cmp
mov
xor
stos
and
rcl
sbb
push
and
pcmpgtd
dec
mov
pusha
dec
pop
sub
shl
add
aas
push
test
xchg
dec
xchg
jecxz
stos
jg
aam
sub
push
lods
test
dec
(bad)
push
(bad)
cwde
add
lahf
cmc
call
sub
jno
jmp
outs
std
outs
and
inc
and
dec
push
mov
leave
dec
mov
or
adc
mov
jge
add
loopne
out
outs
pop
push
push
stos
xchg
inc
scas
adc
iret
pop
jb
sbb
fwait
(bad)
push
inc
cmps
cmp
xchg
(bad)
(bad)
dec
movs
movs
ins
les
popf
jmp
mov
clc
jge
mov
pop
and
addr16
add
mov
jae
popa
and
or
(bad)
dec
mov
loopne
add
adc
jge
call
std
cdq
pop
loopne
mov
imul
sbb
pop
int
addr16
xchg
sbb
mov
ins
fdivr
xlat
lock
mov
outs
aam
fwait
dec
ja
shl
mov
inc
mov
jno
pop
push
push
cld
out
ja
dec
xchg
pop
pushf
mov
std
mov
or
pop
mov
std
mov
aad
push
jo
push
fs
jnp
push
addr16
adc
jmp
sar
cmp
xchg
cli
inc
add
and
(bad)
stos
add
aad
xor
cmps
xchg
retf
sub
sbb
std
loope
push
adc
sti
inc
push
rcr
les
sbb
mov
outs
into
adc
pop
fwait
pop
cmp
sbb
imul
xchg
sbb
pop
sub
jecxz
push
mov
xchg
call
cmp
ins
in
xchg
push
push
mov
jg
push
sbb
arpl
xlat
push
stc
inc
shl
sub
adc
xchg
adc
lea
push
cmp
xchg
imul
xchg
(bad)
sbb
sti
xor
push
out
xchg
scas
push
mov
or
add
pop
(bad)
popa
dec
outs
bound
or
mov
add
mov
mov
jle
cmps
scas
push
jnp
push
jne
aas
inc
xlat
dec
add
xor
mov
inc
daa
inc
and
pop
and
xlat
adc
xor
push
addr16
dec
arpl
xchg
dec
ret
outs
or
int3
icebp
cmps
clc
inc
bound
push
add
shl
icebp
cmp
jmp
jbe
neg
push
pop
add
jbe
call
add
movs
cld
idiv
dec
fwait
out
adc
(bad)
push
rol
push
mov
and
lock
adc
(bad)
fst
cmp
clc
push
and
jge
push
movs
or
cmp
inc
call
lods
dec
cmp
xchg
pusha
leave
mov
xchg
and
pop
fbld
xor
pop
shr
jp
adc
xchg
sbb
ds
mov
and
add
fmul
sub
lds
out
mov
cwde
jo
push
xchg
sar
pop
in
daa
fmulp
test
mov
mov
and
imul
or
push
dec
mov
jg
push
pusha
sub
retf
sti
xchg
pop
sub
xor
jno
cmp
lahf
aad
popa
pop
dec
sahf
mov
retf
sbb
push
pop
arpl
fidiv
mov
cmps
test
lds
mov
mov
sbb
imul
(bad)
mov
or
and
(bad)
dec
add
adc
imul
dec
sbb
add
pop
aaa
jmp
fld
xchg
(bad)
popf
mov
cdq
adc
mov
adc
sbb
cs
fild
push
add
int
stos
add
(bad)
cs
out
imul
and
sub
adc
fnstenv
xor
xchg
dec
push
xlat
aad
or
inc
adc
lods
xor
ds
sbb
xchg
test
mov
ds
(bad)
rcr
or
cs
dec
xor
adc
pop
sub
iret
dec
push
sbb
inc
neg
mov
dec
vmwrite
sahf
xchg
pop
inc
das
icebp
mov
repz
and
inc
(bad)
dec
lock
sahf
or
jl
ds
retf
(bad)
cmp
pop
lahf
pop
ja
mov
out
jno
mov
pop
xor
fadd
pop
push
das
pop
pop
sub
movs
mov
jle
ins
mov
mov
xor
nop
stc
pop
hlt
call
add
fldcw
out
xor
in
push
cs
xlat
std
mov
(bad)
xor
mov
push
fild
daa
xchg
jle
loopne
call
mov
and
and
pop
cmp
push
sub
adc
sahf
xchg
add
mov
sub
cmp
adc
in
mov
push
pop
(bad)
fxam
pop
data16
mov
loopne
pushw
xchg
mov
enter
push
jmp
push
dec
(bad)
(bad)
push
or
je
jp
dec
inc
dec
out
int
es
icebp
jle
cmp
mov
cmps
cwde
inc
adc
add
jmp
xor
pop
dec
into
mov
adc
fld
xor
ins
pushf
push
pop
sbb
jmp
push
arpl
mov
pop
icebp
cwde
ss
and
adc
pop
stos
cld
jmp
push
pop
std
arpl
mov
add
fimul
stos
lods
outs
pop
mov
jne
(bad)
xor
jno
ja
dec
add
jmp
push
push
test
out
xchg
sub
(bad)
add
addr16
pushf
push
dec
xor
jbe
std
mov
mov
dec
into
cmc
and
jg
int
cmp
push
movs
mov
std
sub
and
ss
cmp
xchg
out
xchg
mov
daa
mov
xchg
mov
cld
jns
int
pop
pop
jae
fidivr
test
mov
lods
inc
cld
out
mov
in
xor
pop
pop
inc
loop
push
pushf
cmps
ja
adc
sti
mov
sub
std
xchg
sar
stos
add
xor
popa
(bad)
mov
loop
loope
imul
cmps
jno
jo
adc
pop
retf
pop
aaa
daa
push
xchg
movs
dec
imul
hlt
push
sub
scas
push
pop
inc
fist
out
pop
dec
mov
ja
cmps
inc
inc
jne
or
test
gs
mov
pop
mov
jne
fwait
daa
(bad)
loopne
pop
lods
shr
lahf
pop
rcr
mov
outs
push
sbb
push
jae
dec
sti
mov
mov
adc
sbb
pop
fidivr
lds
add
add
pop
xor
cld
int
es
xor
clc
je
or
jge
push
mov
shl
cld
pushf
rol
fidivr
sub
push
pop
test
repz
ins
push
and
add
neg
pushf
add
dec
sbb
(bad)
sbb
jmp
pop
pop
pop
fwait
sub
sub
inc
add
imul
fcmovu
cdq
push
xor
enter
je
and
fstp
cmp
shr
xchg
xchg
es
sub
rol
not
call
scas
out
pop
sbb
mov
and
adc
mov
mov
lds
push
adc
movd
sub
sub
fwait
je
push
mov
retf
aaa
repnz
or
cld
mov
mov
ficomp
addr16
push
dec
xchg
stc
ins
ds
sahf
mov
arpl
sub
add
pop
and
fdivr
push
jmp
pop
sub
imul
stos
jbe
pop
pop
sar
inc
mov
push
shr
mov
sbb
aam
sub
pop
je
jb
movs
arpl
cmp
pop
jo
and
and
pop
pop
stos
xchg
bound
cwde
push
mov
dec
xor
shl
leave
pop
jmp
or
cmp
xor
aas
inc
movs
std
sbb
aam
jns
push
sahf
scas
pushf
pop
out
jnp
adc
in
jge
sub
jmp
outs
sar
push
and
out
cs
jnp
pop
int
sub
test
shl
fbstp
sahf
xchg
add
sbb
sbb
loope
popa
sub
add
adc
pop
xchg
test
imul
stos
dec
leave
mov
xor
mul
jnp
sub
xchg
mov
pop
pop
jo
mov
mov
or
mov
enter
lods
and
rcl
cli
aad
xchg
(bad)
jecxz
pop
smsw
in
xchg
pop
lods
call
das
mov
add
sub
call
sbb
hlt
cmp
loope
fisttp
nop
bound
xchg
lods
xor
push
adc
ja
frndint
mov
dec
and
repz
push
jnp
mov
data16
mov
pop
push
cs
imul
aad
clc
pop
pop
xlat
loopne
dec
shr
movs
ja
push
retf
addr16
jo
dec
(bad)
xlat
adc
ret
addr16
pop
mov
rcr
mov
push
repnz
push
scas
add
sbb
mov
dec
pushf
hlt
idiv
pop
(bad)
add
inc
jecxz
scas
mov
cmp
fstp
pop
push
jbe
lods
mov
sub
lods
into
shl
(bad)
std
rol
pop
jmp
sbb
aam
call
cli
and
push
aad
test
push
ret
xor
pusha
ins
gs
mov
pop
sub
xchg
popf
jne
pop
adc
mov
inc
xchg
mov
popf
enter
jne
push
or
and
mov
inc
mov
inc
adc
div
lods
or
xchg
call
jns
call
sbb
xor
je
call
ja
xlat
push
into
ror
ror
adc
imul
mov
ja
cs
dec
push
push
fdiv
mov
jecxz
leave
test
dec
pop
daa
cmp
inc
icebp
lods
jae
push
and
fldcw
repz
or
lahf
fldenv
jg
mov
inc
pusha
sbb
test
out
(bad)
mov
inc
mov
rcl
push
xchg
mov
xor
adc
cmc
add
call
xor
(bad)
xchg
in
xchg
adc
mov
(bad)
retf
sub
xchg
pop
xchg
jo
int3
jge
add
loop
cmp
shl
cmc
stos
dec
mov
pop
inc
ins
pop
cmps
(bad)
frstor
push
dec
in
jle
xor
mov
cmps
xchg
xchg
div
sahf
jae
dec
xlat
jecxz
loop
pop
scas
sub
mov
sbb
push
sbb
stos
stos
sbb
sti
inc
sub
mov
adc
mov
add
push
(bad)
cmp
xor
jnp
and
mov
sbb
loopne
mov
pusha
push
inc
inc
in
mov
jge
pop
pop
adc
xchg
sub
outs
jmp
addr16
cld
mov
es
pop
xchg
xor
lahf
xor
pop
out
mov
sub
cmp
pop
test
pause
mov
stos
push
jl
test
mov
imul
mov
inc
dec
aam
ja
shr
ds
jo
pop
sahf
imul
push
out
xor
mov
outs
pop
aaa
xchg
cmp
inc
(bad)
aaa
mov
test
sahf
push
pop
neg
daa
and
and
ins
or
arpl
xor
sub
xor
int3
outs
cmp
sub
mov
fldcw
daa
in
inc
xor
pop
sub
(bad)
pop
jg
call
aaa
out
push
fucompp
mov
inc
int3
adc
inc
inc
pushf
int
popf
jle
mov
jns
sbb
pop
stos
cmp
in
fldcw
mov
pop
pop
or
push
das
stc
jge
cwde
rcl
push
jns
addr16
jnp
adc
mov
push
aas
cmp
jnp
jno
fstp
dec
cmp
pop
sar
or
sbb
fist
and
scas
add
std
pop
loope
pop
xor
mov
das
(bad)
rcr
push
inc
mov
out
je
shl
push
mov
aaa
push
dec
cmc
mov
scas
xchg
cmp
dec
xor
cld
shr
dec
not
stos
xchg
cmp
dec
je
push
jae
sub
popf
cwde
popa
mov
arpl
adc
xchg
aas
mov
loope
jns
aam
jmp
pop
mov
inc
cdq
push
dec
rol
dec
add
cmc
ror
stos
pop
fbstp
jmp
xor
xchg
outs
clc
enter
mov
loope
cmp
xchg
push
and
sbb
sub
fdivr
shl
stos
loopne
jns
push
das
ds
pop
xor
push
dec
out
fs
cmps
(bad)
int
xor
mov
mov
int3
mov
sbb
pop
leave
and
mov
enter
(bad)
mov
cdq
push
outs
and
cld
or
cmp
push
xor
and
inc
cmp
pop
jns
lods
and
push
mov
rcl
push
hlt
int3
adc
sub
mov
inc
daa
dec
(bad)
pop
les
add
pop
retf
push
hlt
sti
enter
dec
fdivr
inc
mov
arpl
xor
push
adc
fmul
lea
add
fimul
mov
int
xchg
clc
pushf
xor
jns
mov
dec
add
out
sbb
jp
in
jnp
sti
push
in
iret
push
pop
push
inc
or
leave
les
repnz
xor
mov
cdq
xor
xor
cli
or
jbe
cmc
ins
pop
cdq
inc
(bad)
(bad)
aas
sub
pop
mov
ins
sbb
scas
retf
push
cmps
sub
mov
xchg
xor
cmp
out
sbb
and
mov
push
xchg
mov
daa
jmp
inc
push
sbb
mov
mov
nop
add
fist
imul
in
in
(bad)
ja
push
dec
call
and
scas
xor
mov
fs
arpl
dec
clc
fisub
ja
sbb
cmp
push
sub
or
cwde
fld
fdiv
cmps
add
out
push
jmp
mov
call
adc
mov
aad
mov
xchg
pop
sbb
int
sub
push
ins
add
xchg
dec
add
call
mov
sub
test
inc
enter
rcl
mov
cwde
in
dec
and
xlat
pop
leave
jecxz
sbb
pop
ds
jle
popa
mov
lahf
(bad)
pop
fwait
push
inc
and
daa
inc
int3
int3
add
mov
inc
popa
or
daa
push
pop
mov
jmp
mov
inc
add
sahf
cdq
aam
pop
or
cs
ds
jmp
pop
push
sub
(bad)
sbb
add
pop
aaa
lds
mov
push
mov
mov
dec
adc
nop
xlat
and
fldenv
es
clc
pop
mov
scas
scas
test
daa
xor
addr16
or
imul
push
outs
xchg
jg
mov
mov
pop
push
fwait
sbb
cwde
xor
retf
pop
mov
xlat
pop
push
daa
dec
jmp
(bad)
lock
mul
and
jecxz
xlat
mov
push
daa
scas
pop
inc
sbb
int3
jae
or
push
repz
adc
push
add
retf
push
cld
dec
stos
mov
neg
iret
xlat
clc
cmp
pusha
xor
ficomp
and
dec
loopne
cld
sub
adc
cmp
movs
xor
cmps
xchg
jle
sbb
xor
xor
dec
fcom
(bad)
adc
pop
adc
mov
xchg
jo
mov
push
jmp
or
push
add
add
std
add
pop
ficomp
lahf
fist
lahf
cmp
sub
adc
pop
mov
pusha
shl
sti
stos
xor
jp
dec
stos
xor
sub
popa
(bad)
ins
les
sub
std
sbb
add
hlt
jl
sbb
sahf
test
dec
jmp
pop
leave
pop
mov
ror
cs
scas
out
movs
dec
add
mov
pop
push
out
add
pop
sbb
fld
inc
cs
adc
xor
stos
dec
cmp
push
cmp
cwde
adc
ror
mov
jno
xor
fsub
cmp
addr16
dec
mov
mov
dec
call
fst
test
test
pop
call
mov
ret
jge
not
sbb
xor
ins
pop
push
mov
sar
ror
imul
int
shr
adc
out
cdq
inc
adc
stos
clc
fcom
mov
add
cli
or
int3
cld
stos
push
mov
das
out
push
fucomp
mov
sbb
pop
iret
pop
dec
(bad)
jae
xor
frstpm(287
ror
add
shl
xor
in
les
and
rcr
add
fld
adc
mov
push
or
js
adc
adc
pop
and
xor
and
xchg
aaa
sub
nop
mov
fistp
jge
sbb
aam
dec
sub
push
mov
fs
cmp
push
das
sahf
push
push
pop
adc
movs
mov
add
push
popf
jle
(bad)
mov
xchg
out
fdivr
imul
nop
lods
test
popa
and
jl
jbe
cmp
(bad)
push
and
shl
idiv
lea
mov
xor
pop
pop
popf
dec
xchg
ret
dec
xchg
mov
pop
(bad)
jmp
jg
cdq
push
cmp
mov
test
push
push
xchg
and
push
fisubr
jg
add
pop
(bad)
push
and
mov
xor
xlat
into
or
nop
sub
mov
sub
aam
cld
aad
ret
jne
jmp
mov
or
test
loopne
mov
pop
pop
std
jmp
int3
cmp
rcl
sbb
jmp
loopne
cmp
mov
jge
out
add
cmc
jmp
xor
xor
and
xor
mov
push
shr
pushf
out
(bad)
push
xchg
(bad)
fadd
loop
popf
mov
sar
lahf
dec
pushf
xchg
push
or
push
popa
xor
xor
sbb
shr
sbb
mov
mov
mov
(bad)
cmp
lods
cmovg
cmp
mov
xor
(bad)
fisttp
and
arpl
pop
mov
fld
aad
adc
mov
push
mov
ins
mov
pop
push
div
adc
cwde
test
or
cmp
in
add
ret
pop
pop
xchg
xchg
push
(bad)
jnp
jmp
test
sbb
pop
jnp
mov
fwait
pmaxub
test
lahf
icebp
mov
xchg
jnp
add
clc
in
xor
(bad)
and
rcl
xor
mov
mov
call
idiv
loopne
cdq
fbstp
pusha
add
fwait
and
inc
or
icebp
or
jp
cwde
cmp
fistp
lahf
rcr
call
test
std
push
popf
clc
push
jge
jmp
(bad)
jle
or
mov
fcom
mov
hlt
push
imul
into
fistp
cmp
shr
pop
stos
jb
xchg
cld
fisubr
xchg
gs
push
sub
inc
(bad)
cmp
fcom
or
and
mov
jge
xchg
(bad)
aaa
jecxz
jmp
ja
test
sahf
adc
cwde
pusha
cmp
dec
inc
outs
ror
pop
mov
idiv
and
mov
sub
or
sbb
lds
jb
bound
stos
xchg
fnsave
cmp
cmp
je
pop
stos
mov
movsx
push
mov
push
xchg
aaa
ins
add
scas
je
mov
sar
enter
dec
mov
cmp
test
jge
(bad)
add
and
dec
dec
cmp
ds
sub
push
rcl
sub
or
xchg
fprem1
inc
test
xchg
clc
xor
imul
cmp
scas
fadd
or
inc
jbe
stos
adc
ins
out
mov
push
mov
cli
cdq
jmp
mov
push
jne
push
call
fs
loopne
nop
mov
ds
jae
jno
add
fs
pop
test
jnp
mov
in
xchg
push
loope
dec
sub
mov
fsubr
fiadd
mov
push
and
outs
mov
aas
pop
sbb
call
je
xchg
adc
add
retf
(bad)
(bad)
jb
pop
push
int
jno
jge
enter
ror
jmp
inc
nop
dec
rcl
addr16
rcl
mov
js
mov
aas
es
jmp
iret
pop
mov
sub
aas
dec
xchg
fdiv
sub
push
mov
lods
push
add
sbb
idiv
jl
jmp
or
xor
pop
les
retf
push
cmp
cli
pop
mov
rcl
jmp
fisttp
in
pusha
retf
push
ror
out
leave
(bad)
and
and
jp
cmp
add
jp
cmp
repz
cwde
out
int3
movs
call
dec
popa
push
xchg
xchg
sahf
pushf
rol
dec
jle
mov
dec
jno
les
clc
dec
jg
inc
push
cmp
jbe
adc
push
jns
test
imul
adc
fs
cmp
out
mov
imul
jg
stos
sbb
jb
lods
push
fidivr
add
add
mov
xor
adc
shl
dec
xor
test
ficom
jmp
dec
shl
push
scas
daa
das
mov
or
dec
dec
hlt
ins
pop
mov
inc
xor
repz
ins
sub
dec
add
enter
sti
test
push
ror
or
fmul
push
call
and
push
cld
pop
add
into
add
es
imul
in
fwait
sub
fld
cmp
sahf
add
push
hlt
cmp
sub
pop
aaa
cmp
add
jae
xor
aam
iret
add
cmp
xchg
leave
push
push
out
fsub
jnp
sub
jne
loop
aad
inc
cmp
mov
mov
dec
push
push
std
dec
imul
pop
ins
mov
lea
daa
pop
out
inc
dec
shr
pop
hlt
cwde
lods
mov
jmp
or
mov
std
pop
xor
fcmovu
or
mov
mov
and
cwde
push
jge
push
mov
dec
mov
xor
aad
inc
mov
inc
pop
jmp
sub
outs
sbb
outs
outs
lods
push
or
xchg
mov
pop
pusha
stos
push
inc
jecxz
pop
adc
pop
shl
rcr
(bad)
xchg
fstp
jge
dec
xor
jp
pop
clc
push
add
stc
sbb
xor
push
pop
pop
(bad)
jnp
in
xchg
popf
mov
mov
mov
sti
dec
dec
sub
push
clc
dec
adc
sar
out
mov
sar
(bad)
mov
out
mov
sub
fucomp
fldcw
pop
dec
(bad)
sbb
shr
mov
imul
adc
fxch
pop
addr16
cmps
xchg
aam
pop
sub
sbb
jmp
mov
stc
dec
stos
mov
shl
data16
cmps
xor
call
jbe
aam
icebp
mov
mov
fs
sub
rcl
add
ins
popa
xlat
mov
sbb
movs
xchg
retf
test
in
std
inc
jne
loop
out
arpl
je
jmp
loopne
gs
xor
cmp
mov
stos
xchg
mov
fiadd
dec
or
push
mov
pop
pop
scas
not
int
es
cmp
loop
movs
sub
mov
daa
dec
dec
out
(bad)
dec
adc
pop
lods
inc
in
call
fstp
push
adc
sti
mov
sbb
pop
outs
sub
cmc
pop
jge
mov
dec
mov
sbb
test
mov
sub
lock
mov
(bad)
push
aad
rcr
mov
into
mov
jp
sbb
lahf
mov
gs
stos
loop
mov
pushf
adc
aaa
std
fld
push
ins
adc
arpl
fcmovbe
and
cmp
lock
mov
lahf
sub
fmul
leave
push
jnp
inc
sbb
dec
adc
popf
movs
ror
jne
shr
push
fcomp
dec
inc
mov
xchg
and
pop
in
(bad)
pop
(bad)
add
mov
dec
push
mov
(bad)
mov
movs
rol
inc
aaa
aam
inc
adc
dec
xlat
cmps
shl
dec
lds
mov
pop
dec
aaa
mov
pop
rcl
hlt
(bad)
push
xchg
out
in
test
(bad)
fadd
sub
lea
aas
jne
hlt
ror
jmp
cmc
mov
aam
iret
cmp
pop
cmp
and
jno
daa
sub
in
mov
cmps
cmp
jns
(bad)
push
aaa
sbb
sbb
ret
aam
xlat
push
jle
and
jp
ret
sbb
pop
sub
in
sbb
(bad)
js
sub
cmp
push
pop
jae
push
cmps
lods
jb
mov
push
lahf
or
jnp
out
push
hlt
int3
adc
mov
addr16
rcl
push
leave
sub
xchg
push
sub
cld
xor
dec
dec
push
test
call
push
jmp
xchg
ret
es
mov
xor
sbb
and
cmps
nop
or
rcl
loop
or
(bad)
sahf
lea
fwait
sbb
push
mov
fimul
add
mov
(bad)
xchg
je
cwde
jmp
leave
loope
sub
into
cmps
cmp
xor
mov
pop
outs
cmp
ficom
dec
push
mov
xchg
jmp
aaa
mov
inc
fmul
lods
sub
lock
sbb
loopne
fucomip
jno
mov
dec
adc
push
dec
mov
sub
pop
sub
es
std
xchg
popa
loope
cmp
loope
shr
loopne
mov
(bad)
jg
inc
pushf
xor
daa
mov
mov
fucomip
jno
test
ins
int3
pop
rcr
outs
and
stos
mov
push
mov
mov
xchg
add
pusha
jnp
jnp
cmp
pop
je
or
into
ins
pop
enter
lods
rol
adc
js
sbb
push
mov
(bad)
rcl
mov
mov
(bad)
hlt
aam
dec
xor
push
xlat
outs
sar
scas
sar
fidiv
xchg
(bad)
push
xor
imul
push
frstor
fdivp
in
push
sub
fdivr
fadd
cld
arpl
push
adc
aaa
fadd
sub
pop
mov
add
push
and
mov
dec
cld
vdivss
stc
iret
cmp
jmp
inc
pop
out
dec
fld
(bad)
shl
pop
pusha
push
add
jne
add
sti
iret
push
iret
outs
shl
and
mov
pushf
out
mov
icebp
ss
cmps
aaa
push
fldcw
out
fisttp
pop
xor
sbb
xor
pop
mov
ins
jno
hlt
addr16
mov
mov
ds
cdq
leave
fwait
call
inc
mov
cmps
xchg
xchg
daa
popa
ror
mov
or
aad
sar
jle
rcr
fcmovnb
xchg
addr16
loope
mov
dec
pop
sub
push
fwait
pop
enter
and
shl
ins
push
push
and
cmps
dec
loope
add
daa
scas
mov
call
dec
ror
loope
les
pop
jmp
fmul
out
pop
(bad)
fs
push
outs
pop
jnp
sti
jae
mov
jo
mov
outs
inc
out
popa
sub
outs
xchg
and
adc
mov
jno
in
popf
xor
jb
sbb
xor
je
mov
mov
lods
imul
dec
pop
adc
adc
leave
xchg
sbb
fild
rcl
pop
cmp
sbb
in
leave
stos
mov
cs
adc
dec
inc
hlt
sti
idiv
mov
div
lea
mov
retf
mov
pop
iretw
xor
mov
dec
mov
ja
or
jo
jmp
mov
stc
out
mov
and
mov
fnstsw
rcr
inc
(bad)
fcomp
in
dec
jmp
sti
imul
jae
mov
cmp
mov
popf
xor
fwait
std
mov
out
lds
dec
jne
xchg
rcr
icebp
sahf
xor
out
dec
xchg
test
sbb
and
int3
jge
pop
clc
data16
popf
push
sbb
sbb
sti
or
or
(bad)
fwait
(bad)
xor
les
leave
xor
xor
xor
fistp
cmps
add
sub
pushf
pushf
lods
daa
dec
out
fnstenv
(bad)
mov
pop
test
mov
fsubr
pop
ds
std
sub
xchg
cmp
or
fdivr
movs
fnstcw
sbb
cs
ins
cld
push
pop
sbb
das
ror
dec
pop
shl
cmps
mov
sbb
mov
adc
push
mov
popa
icebp
inc
pop
rcl
xchg
scas
add
stc
fcos
ret
xchg
inc
ins
out
pop
xor
fsubr
adc
inc
sub
dec
sub
ret
mov
imul
pop
idiv
sbb
cmovns
push
mov
push
jbe
out
push
pop
mov
popf
cmp
ja
sub
sub
rcr
or
sar
jmp
iret
out
sar
xchg
pop
pop
call
je
jbe
pop
aaa
xchg
test
mov
and
pop
in
sub
mov
ds
ja
aam
lfs
or
mov
xor
jo
test
pop
jle
out
ds
rol
ret
pop
mov
mov
jae
dec
popa
cmc
ret
sbb
fld
loopne
xchg
lea
sbb
cwde
jmp
(bad)
mov
pop
idiv
std
fimul
cmp
xlat
push
sahf
out
lahf
test
and
xchg
inc
or
pop
icebp
add
(bad)
ffreep
test
jae
loopne
aaa
inc
test
mov
in
shl
popa
xlat
mov
pop
addr16
ret
or
xchg
xchg
aad
mov
out
rcl
mov
les
xor
cmp
add
out
std
fild
push
aam
push
js
out
mov
jnp
ja
push
xchg
cmp
aad
in
jno
or
pop
xchg
sub
(bad)
loopne
daa
movs
aas
bound
cwde
ss
out
inc
test
push
xor
mov
xor
(bad)
pop
jo
or
sub
lock
stc
mov
pop
dec
pop
mov
std
out
pushf
dec
cmp
or
pop
or
lods
in
or
jnp
loop
push
sub
(bad)
jl
jg
xchg
dec
mov
mov
push
xor
mov
arpl
out
cmp
pusha
sbb
out
cs
xchg
fst
push
div
mov
mov
or
stc
les
into
aam
adc
or
js
cs
retf
push
or
call
sub
aaa
nop
repnz
loope
jmp
xor
adc
and
inc
dec
adc
stos
push
mov
mov
sub
push
sbb
clc
inc
jle
xor
in
pop
cs
mov
ret
push
and
(bad)
pop
mov
and
sbb
push
mov
xor
sub
push
pop
mov
gs
mov
mov
pop
loop
js
scas
aaa
daa
add
(bad)
push
arpl
add
inc
stos
shl
inc
adc
rol
aad
add
mov
push
iret
mov
pop
add
loop
mul
xchg
popf
cld
fisub
dec
jmp
or
fucomi
xor
jnp
adc
push
pinsrw
sub
and
push
aaa
mov
dec
cs
cs
push
das
hlt
das
jl
jecxz
mov
popf
bound
jns
addr16
xchg
fsub
enter
iret
add
cmps
call
pushf
fucom
dec
daa
js
(bad)
out
inc
xchg
jo
stc
ss
mov
sub
hlt
mov
fstp
idiv
(bad)
shr
inc
adc
in
out
jle
idiv
cmp
push
push
idiv
ins
xchg
int
cs
cwde
sub
pop
outs
jne
dec
test
rcl
cmp
stos
into
or
lea
aaa
xor
xchg
fstp
loopne
ins
push
xchg
(bad)
and
mov
sti
ret
test
sub
mov
jo
xlat
not
mov
std
int
sub
(bad)
pop
fsubr
aam
sub
popf
sub
rcr
imul
stos
ins
xor
loop
cmp
call
sbb
mov
adc
mov
push
lods
ror
iret
cs
mov
dec
inc
(bad)
dec
lock
das
mov
push
mov
inc
jg
mov
(bad)
(bad)
or
xor
cdq
lahf
loope
aam
push
test
jne
lods
sub
pop
clc
add
imul
push
out
add
(bad)
cmp
jmp
js
push
lods
call
mov
in
pop
add
aas
retf
lock
loopne
xlat
xchg
mov
ins
lea
mov
jmp
shl
inc
inc
mov
(bad)
arpl
test
xchg
jnp
dec
sub
test
fldenv
sbb
into
pop
mov
ins
ds
mov
push
push
dec
mov
(bad)
add
imul
adc
jno
das
div
xlat
lock
(bad)
in
pop
xchg
ficom
enter
mov
daa
nop
and
sub
fdivp
sbb
cdq
fstp
ja
call
mov
test
pop
xchg
rcl
dec
fisttp
loop
sub
sbb
sahf
push
add
(bad)
jae
and
cmp
cmps
ja
clc
idiv
int
int3
pop
push
inc
leave
push
cmp
jo
aaa
ins
shl
pop
pusha
fild
xchg
xchg
mov
leave
xchg
mov
push
ret
repz
(bad)
fsub
out
scas
jnp
dec
pop
movs
jge
call
leave
ret
or
stos
adc
mov
push
ror
xchg
pop
xchg
cdq
and
dec
test
mov
cmp
add
jae
data16
in
clc
xchg
jb
mov
cmps
cmc
(bad)
xchg
mov
(bad)
fsubrp
and
push
cld
mov
dec
imul
jg
fiadd
jmp
sti
aam
aaa
(bad)
loop
mov
add
fisubr
xlat
addr16
dec
adc
(bad)
fild
inc
jns
aaa
cs
xor
pop
pop
dec
push
cdq
(bad)
sti
mov
call
lds
adc
ret
test
in
xor
in
aaa
push
in
pop
js
push
mov
or
fld
dec
jo
inc
pop
mov
daa
and
ud0
xchg
xor
idiv
and
inc
scas
pop
inc
mov
mov
dec
icebp
jns
cld
sar
(bad)
outs
stos
rcl
mov
sbb
pop
bound
call
lea
mov
mov
mov
or
fwait
xor
mov
adc
push
add
mov
arpl
test
popa
clc
jnp
lods
ret
stc
stos
lock
inc
enter
pushf
fcomp
add
inc
ror
or
out
push
cmps
stos
cmp
pop
mov
scas
dec
or
push
mov
mov
mov
test
jp
pop
cli
sbb
mov
(bad)
mov
repz
push
fisttp
dec
pop
in
jg
les
jmp
ret
cmc
or
hlt
cli
push
xor
popf
dec
or
jp
push
push
cs
cmp
jge
outs
ja
xor
sbb
lods
addr16
inc
push
pushf
or
cmp
hlt
xor
pop
in
lahf
int3
push
out
xor
and
mov
push
and
xor
bound
cmp
xchg
fisub
fnsave
stos
dec
xchg
in
enter
bound
add
dec
dec
inc
add
out
fcmovb
gs
inc
dec
add
cs
cld
sub
maxps
adc
std
pop
sbb
(bad)
std
push
sub
add
sub
inc
xchg
pop
popa
mov
(bad)
jle
add
add
jg
mov
loop
inc
mov
xor
and
push
push
mov
jl
cmovle
dec
xor
rcr
or
retf
sahf
jp
repz
adc
jo
in
sbb
xchg
xor
scas
or
xchg
jno
push
sahf
push
sbb
cs
mov
xor
inc
inc
cmp
mov
pop
(bad)
in
cmps
mov
pop
xchg
inc
iret
push
in
jmp
pop
mov
mov
loopne
loope
(bad)
ret
imul
and
aad
sub
mov
lods
jmp
and
rcl
and
push
xchg
addr16
(bad)
(bad)
int3
jp
lea
cmc
cwde
int3
loop
nop
mov
sub
repnz
sbb
pop
xchg
clc
rcr
mov
lock
lods
or
xchg
mov
pusha
aaa
repnz
(bad)
sub
es
pop
or
mov
mov
jno
addr16
popa
retf
jmp
ins
scas
out
xor
push
and
jg
dec
mov
cmc
fstp
fidivr
call
xchg
adc
addr16
cmp
inc
xchg
dec
ret
pop
mov
int
sub
mov
(bad)
push
gs
mov
jmp
out
xlat
stc
nop
aam
push
ror
cmp
push
xchg
fnstsw
mov
pop
cmp
fcmove
push
fcmovu
jg
adc
jo
and
adc
mov
les
mov
xchg
inc
fldenv
adc
adc
pop
push
mov
jae
sub
and
out
rcr
mov
(bad)
fnstenv
test
mov
cmp
call
mov
add
js
fist
sub
retf
push
dec
in
mov
pop
iret
inc
inc
sub
inc
loope
or
dec
pmullw
movs
std
jge
inc
jmp
test
ficomp
stos
call
sar
nop
jb
jmp
bound
and
mov
lods
push
jmp
out
loope
pop
cmps
dec
push
xchg
in
(bad)
out
scas
pop
or
leave
adc
pop
jnp
les
mov
test
xchg
inc
push
dec
div
push
dec
cmp
and
adc
es
rcl
(bad)
arpl
xor
xchg
dec
les
mov
adc
sbb
xor
(bad)
mov
xchg
out
fnstcw
repz
mov
(bad)
out
mov
inc
or
jge
pop
(bad)
sub
mov
cmc
inc
dec
(bad)
dec
mov
dec
add
lods
cmp
adc
jnp
xchg
outs
xchg
jmp
fiadd
pop
push
dec
xor
push
ficom
xor
ja
mov
pop
fwait
imul
int3
dec
enter
ficom
(bad)
dec
mov
js
dec
mov
push
ins
mov
ffreep
imul
adc
std
cmps
jp
ins
cmp
add
stos
inc
loop
pop
int
cwde
in
jge
or
in
pop
add
test
or
cmp
shl
(bad)
and
adc
into
(bad)
in
pop
(bad)
ficomp
push
dec
sub
pop
retf
arpl
adc
jmp
stos
fistp
es
rcl
jmp
in
xchg
or
mov
inc
sub
cli
push
push
and
clc
iretw
lea
or
push
imul
(bad)
frstor
xor
push
sub
xchg
(bad)
pop
addr16
xor
aaa
shl
test
rcl
pop
xchg
rol
jp
fdivr
mov
dec
push
jmp
int3
adc
inc
dec
and
push
enter
in
in
dec
mov
aam
pop
das
add
fisttp
and
ret
les
push
jne
int
fsub
lea
sub
ins
(bad)
push
nop
jmp
in
hlt
push
test
bts
retf
jge
test
fcomp
push
ins
cs
or
scas
icebp
xchg
or
mov
jns
push
mov
push
cmp
xchg
or
push
mov
icebp
push
pop
pop
mov
into
fsubr
sbb
cmps
dec
or
data16
mov
pop
ss
xor
fcmovnu
retf
fwait
add
sub
xlat
dec
mov
daa
pop
sbb
pop
stc
imul
push
jmp
and
xlat
dec
out
test
loopne
fcmovne
mov
push
xlat
jns
sti
pop
dec
lds
std
jb
out
cdq
dec
adc
jno
pusha
das
fcom
jg
ret
mov
pop
xchg
pop
hlt
iret
jo
ja
(bad)
daa
popf
inc
jae
sub
push
cs
pop
fstp
mov
mov
sub
sti
dec
xchg
fimul
pop
and
pop
inc
jne
ficomp
sub
int
fisub
jle
cmc
fwait
iret
fcomp
jae
nop
mov
pop
fcom
push
(bad)
(bad)
xor
dec
mov
jp
jmp
mov
ficomp
cmp
mov
icebp
adc
pop
xchg
jge
in
xchg
dec
mov
fsubr
xchg
mov
scas
mov
pushf
push
cwde
pop
add
fbld
lea
add
or
pop
and
or
sbb
mov
jo
dec
shl
sbb
jmp
fistp
mov
pop
xchg
push
es
pop
rcr
mov
jl
sbb
push
lock
out
adc
pop
xchg
pop
mov
loope
jl
mov
enter
leave
les
(bad)
addr16
pop
mov
adc
mov
and
out
xchg
add
pop
(bad)
out
les
ror
mov
adc
(bad)
stos
push
rep
out
mov
pop
mov
mov
and
sbb
mov
ret
push
sub
sbb
cwde
arpl
icebp
push
adc
sbb
mov
dec
or
nop
jmp
rcl
aad
inc
in
inc
jg
mov
push
sub
xchg
inc
in
and
jnp
mov
test
shr
shl
cwde
jnp
fst
pop
imul
ret
pop
inc
lahf
aas
rcr
lahf
outs
outs
xchg
cdq
sbb
shl
push
pop
pop
mov
dec
div
leave
sub
rcl
aaa
daa
daa
inc
push
inc
xchg
idiv
jp
pusha
movs
pop
sbb
mov
jmp
mov
or
xlat
inc
in
pop
lods
aad
push
test
sbb
adc
inc
int3
icebp
and
stos
clc
std
xor
clc
pushf
fld
sbb
xchg
dec
xor
pop
cwde
sbb
push
stc
(bad)
div
mov
sbb
push
fdiv
push
neg
sub
adc
bound
pop
dec
and
mov
inc
add
inc
in
cmp
adc
dec
aam
ins
add
dec
sbb
push
ja
sub
add
gs
mov
dec
sti
pop
sahf
shl
cs
jae
jge
push
xchg
sbb
mov
xor
dec
pop
add
inc
sbb
mov
jns
xlat
ror
in
btr
ja
pushf
call
or
lods
pop
adc
and
mov
test
js
sub
xchg
push
rcl
pop
ss
in
fistp
jecxz
arpl
xor
repnz
or
pusha
outs
push
fstp
push
inc
push
popf
arpl
test
out
shl
js
aam
mov
ds
jp
and
pop
add
lock
mov
test
(bad)
repz
xlat
adc
adc
hlt
sbb
push
stos
div
mov
fmul
or
sub
mov
aaa
ins
mov
daa
sbb
fdivr
(bad)
(bad)
sub
cmc
and
dec
xcrypt-ecb
cmps
into
stc
add
sub
pop
je
jge
stc
int3
fwait
sbb
mov
call
aaa
sbb
mov
sahf
xchg
cmp
xor
shr
add
shr
jno
ss
jnp
jns
sub
mov
cmp
add
xor
push
sub
and
xchg
cmp
inc
lds
inc
pop
lods
mov
or
adc
cmp
repz
push
inc
sbb
arpl
jbe
cs
or
adc
dec
cmp
dec
adc
das
sbb
outs
pop
xor
test
mov
stc
cmps
sub
lods
sbb
es
cmp
call
rcr
pop
adc
mov
(bad)
sbb
adc
or
or
pop
push
ffreep
adc
mov
sbb
cwde
dec
jmp
adc
mov
(bad)
int
mov
sar
pop
dec
int3
mov
dec
loopne
hlt
int3
pop
sbb
fisubr
fbstp
in
(bad)
ins
pop
mov
sbb
jns
sbb
arpl
and
(bad)
ret
mov
shr
mov
add
push
xlat
jg
inc
fstp
cs
inc
add
xchg
ficom
loopne
push
xchg
sub
pop
retf
inc
(bad)
ror
repnz
push
xchg
out
cmp
jnp
inc
and
jmp
inc
mov
xchg
rcl
mov
inc
mov
mov
sysexit
in
and
ins
in
pop
ja
or
pop
push
sub
xor
push
jno
imul
add
inc
dec
arpl
mov
or
sbb
push
(bad)
xchg
sub
add
(bad)
push
mov
daa
clc
pop
nop
dec
jle
add
jae
pop
retf
bswap
loopne
gs
dec
out
idiv
dec
and
pop
ins
prefetcht2
scas
lock
cli
xchg
(bad)
pop
adc
ja
std
icebp
dec
xor
lock
sub
inc
rcr
mov
adc
arpl
(bad)
xchg
cmp
cmps
push
aad
or
leave
rol
ja
cwde
pop
test
call
out
fcompp
add
jp
(bad)
es
inc
sbb
pop
out
je
leave
dec
(bad)
(bad)
mov
pop
jo
jbe
fs
and
pop
movs
push
loopne
std
fidivr
jecxz
cmps
and
lock
sbb
(bad)
xlat
(bad)
adc
sbb
dec
mov
jl
push
jne
jbe
(bad)
in
jle
dec
je
loope
add
mov
add
add
(bad)
push
push
cmps
popf
adc
adc
push
(bad)
jmp
(bad)
sub
dec
cs
mov
pop
sbb
inc
cmp
mov
fcomp
shl
cmp
(bad)
sar
push
push
fcomp
inc
sub
xlat
ss
std
mov
sub
jge
push
cmp
pop
(bad)
pop
in
loop
pop
cmc
es
xchg
sbb
stc
inc
pushf
int
je
pop
push
sar
retf
push
test
lea
outs
test
adc
xchg
cld
fidivr
mov
ds
mov
inc
mov
xor
mov
int
loop
push
sbb
or
jnp
xlat
xor
rcl
mov
jae
pushf
dec
dec
xchg
pop
pminub
fadd
test
test
cld
jno
nop
ret
sbb
stos
xchg
dec
out
cmp
jb
jno
fstp
bound
enter
sub
jnp
sbb
xchg
ja
pop
dec
sub
js
inc
inc
stos
mov
mov
loopne
loop
fs
xor
stos
adc
js
addr16
xor
mov
inc
ret
mov
stos
ins
pop
xchg
adc
push
mov
mov
(bad)
jno
sbb
nop
fld
and
cmp
and
cmp
mov
pop
push
ret
je
dec
fucomp
inc
inc
daa
adc
pop
into
push
stos
mov
inc
les
cdq
fnstcw
xchg
sub
in
xor
aaa
sbb
xlat
pop
sbb
fwait
mov
aad
jne
stos
fnstcw
xchg
mov
xchg
mov
or
addr16
neg
add
cmp
mov
(bad)
jecxz
adc
add
fild
shr
out
les
dec
fcmove
dec
fldlg2
add
push
imul
push
and
push
repz
outs
cmp
sar
sbb
mov
and
test
jnp
jge
xor
push
xor
arpl
push
sub
jmp
or
push
cmp
mov
mov
or
pop
fwait
jns
push
xlat
inc
mov
mov
sub
scas
cmp
cli
xor
add
push
dec
mov
repz
pushf
cwde
dec
mov
xchg
add
jg
mov
jae
fsub
pop
(bad)
xchg
push
push
int3
jl
inc
pop
dec
lods
ds
mov
fcomp
imul
push
ins
idiv
out
and
loopne
add
and
inc
sbb
sub
xchg
mov
cmp
nop
xchg
lods
jge
(bad)
mov
ins
les
push
xchg
ss
out
jle
mov
loopne
aaa
ja
sbb
jl
mov
push
shr
xchg
cmc
sbb
or
xchg
(bad)
cmp
test
(bad)
adc
jnp
push
mov
and
mov
aam
push
push
aaa
test
pop
sub
inc
or
pop
(bad)
cmpxchg
pop
stc
push
movs
stos
adc
out
mov
iret
push
addr16
mov
jmp
mov
(bad)
inc
xchg
in
mov
dec
adc
data16
jmp
lahf
aaa
cld
sahf
pop
pop
clc
and
dec
xchg
xchg
pop
mov
jle
dec
add
or
pop
xchg
mov
inc
or
mov
xlat
stc
push
mov
sub
lds
jns
lea
adc
dec
std
pop
mov
movs
iret
cmps
jge
mov
sahf
ins
loopne
jg
mov
mov
retf
shr
pop
rol
cmc
(bad)
out
fnstsw
dec
jmp
adc
test
test
xchg
adc
rol
sbb
fucomip
shl
jge
jae
sub
cmc
shr
inc
out
mov
xchg
fistp
cmp
in
mov
pop
mov
ja
ret
mov
jmp
xchg
ret
push
xor
dec
push
mov
je
dec
inc
inc
imul
mov
pop
push
(bad)
jnp
mov
int3
push
xchg
pushf
sti
and
xor
pop
(bad)
xchg
push
cmps
les
shl
sahf
push
jns
stc
ficomp
mov
mov
(bad)
shl
push
adc
neg
repz
(bad)
cwde
pop
inc
sbb
das
rcl
add
nop
fisttp
cdq
mov
mov
add
test
xchg
pusha
int3
loop
jg
inc
mov
retf
mov
or
jmp
cmp
popf
push
mov
stc
ss
mov
inc
bound
pop
mov
cmp
mov
es
jg
jmp
xor
jg
les
mov
pop
les
dec
ret
sbb
xor
call
dec
into
fimul
pop
ins
pop
cmp
mov
inc
fistp
jae
and
fidivr
popa
or
test
push
dec
fdiv
pop
lea
mov
popa
js
out
nop
addr16
inc
xchg
pop
lock
in
xchg
ins
mov
ds
out
pop
sub
movs
test
std
lods
jno
jle
push
pushf
lods
test
xor
jge
test
push
adc
inc
jg
pop
xchg
rcl
std
leave
fsub
dec
xchg
xchg
jmp
shr
sub
xchg
sub
cmp
cmps
xor
das
sub
pushf
inc
mov
add
inc
mov
mov
xchg
adc
stos
add
sbb
out
add
pop
inc
scas
xchg
mov
lods
and
jne
xor
inc
add
mov
add
pushf
pop
jecxz
pop
and
xchg
scas
jmp
(bad)
(bad)
inc
loop
mov
xchg
mov
push
out
dec
cmps
or
out
mov
in
lds
dec
inc
cmp
(bad)
mov
loop
pop
sub
add
pop
enter
in
ret
inc
push
or
xchg
pop
je
and
add
idiv
test
rcl
add
pop
cmp
stos
sbb
mov
and
data16
lahf
or
es
pop
in
xor
dec
out
pop
sbb
mov
adc
mov
sahf
retf
ins
cmp
test
xor
loopne
ror
or
sub
out
mov
adc
std
mov
mov
lahf
rcr
in
adc
lods
aaa
imul
les
cmp
mov
loopne
push
and
mov
fwait
pop
cmp
fmul
shl
push
inc
ds
jecxz
or
add
cmp
adc
inc
jnp
ret
jl
fnstcw
fld
mov
xchg
or
inc
adc
rcr
adc
jnp
es
adc
(bad)
out
xor
lds
out
loopne
inc
shl
pop
repz
int3
add
jb
push
outs
dec
mov
mov
iret
add
add
sti
pop
push
imul
or
adc
daa
icebp
ret
mov
xor
inc
pop
jmp
cmp
rol
stos
nop
out
icebp
or
(bad)
in
dec
xchg
iret
in
dec
repnz
lock
lods
and
idiv
cmp
inc
push
int
pop
push
and
xchg
(bad)
fidivr
sbb
mov
in
(bad)
pushf
loop
dec
imul
sbb
fwait
push
int
mov
into
xor
adc
xor
gs
pop
sbb
xchg
or
scas
pushf
dec
rcl
fld
out
rcl
dec
aad
inc
jle
push
jg
jp
cld
mov
pop
xlat
jns
pop
push
dec
stc
xchg
mov
mov
lock
inc
mov
aam
(bad)
push
int
call
or
xor
in
stos
aaa
loope
cmps
outs
loopne
test
ror
repz
mov
mov
shl
cmp
test
retf
cdq
sbb
fist
dec
inc
push
movs
xor
jle
cmp
pop
push
push
sub
repz
stc
sti
add
xor
das
xchg
in
mov
out
push
jl
lea
shl
in
push
mov
adc
lea
inc
inc
dec
jnp
leave
lahf
sub
out
xchg
popf
xor
pop
jmp
xor
fprem
(bad)
lods
push
sub
bound
fmul
inc
scas
mov
pop
retf
sbb
pushf
push
adc
fstp
neg
and
and
shl
jbe
or
push
out
sbb
add
out
pop
add
cdq
pushf
mov
sti
test
jae
cmp
dec
scas
push
pop
loope
jp
mov
xchg
(bad)
xchg
int3
sbb
int3
into
dec
retf
ins
scas
jge
daa
xor
jbe
test
aaa
and
(bad)
push
dec
ja
sub
xchg
xor
sbb
cmp
jnp
adc
mov
test
jge
sub
mov
xlat
out
mov
pop
pop
or
sbb
xlat
push
jg
popa
adc
inc
stc
das
fsub
dec
sar
out
imul
lods
dec
and
repnz
test
adc
ins
xchg
aam
in
cmp
inc
loopne
xor
adc
xlat
mov
inc
mov
call
pop
ja
sar
jmp
push
repnz
daa
push
dec
mov
popa
cmp
adc
xchg
xchg
pop
xor
push
clc
mov
test
add
xor
mov
ror
int3
fwait
test
outs
sbb
sar
repz
jae
cmovbe
push
sbb
inc
dec
stos
sub
leave
jge
xchg
mov
loope
mov
mov
cs
pop
imul
out
ret
mov
popf
dec
add
xchg
pushf
or
xchg
push
xchg
cmp
imul
mov
xchg
jmp
loopne
jno
push
fld
rcl
in
cmp
sar
lahf
loop
ficom
add
pop
push
jmp
dec
xchg
popf
call
xor
fidivr
or
jmp
add
and
cmp
ins
je
cld
sti
adc
fabs
test
(bad)
xlat
sbb
cmp
mov
stos
cmp
aam
jb
jmp
(bad)
push
mov
ds
cli
div
sbb
in
xchg
adc
dec
push
cmp
mov
push
sbb
mov
getsec
lock
xor
and
push
cld
cmps
cwde
cwde
xor
lods
jl
dec
inc
jg
movs
sbb
fnsave
hlt
neg
stos
jmp
jp
les
mov
cwde
push
mov
sahf
ins
mov
push
les
xor
nop
xor
enter
(bad)
cmp
pop
int
sub
ss
jl
pop
xor
mov
mov
popf
loope
xor
sub
movs
fcom
(bad)
or
jae
or
dec
xchg
scas
jnp
mov
(bad)
les
addr16
jno
lods
cmp
adc
(bad)
call
ins
rcr
movaps
cmps
(bad)
pushf
lea
adc
xchg
xchg
xor
(bad)
jp
arpl
push
pop
or
out
pop
pushf
ins
test
lock
cmc
int
adc
fdivr
daa
adc
mov
not
mov
inc
cmp
loope
jg
(bad)
add
(bad)
sub
cmp
mov
mov
push
add
fadd
outs
or
push
fsubrp
or
imul
lock
xor
jo
loop
inc
in
jle
scas
or
pop
mov
scas
dec
or
icebp
cmp
push
dec
jmp
sti
out
ret
hlt
mov
push
mov
jnp
pop
leave
fisttp
je
fstp
ror
mov
fwait
mov
loopne
add
inc
shr
mov
fstp
xchg
xor
fstp
retf
inc
into
inc
add
xor
cmc
inc
leave
jg
test
add
inc
dec
cld
cmp
mov
mov
sbb
pop
cdq
jp
shr
pushf
pop
mov
aaa
pop
and
cld
out
jmp
(bad)
ds
xor
(bad)
jge
int3
pop
pop
adc
push
or
fs
ds
movs
pushf
fild
enter
iret
pop
dec
stc
dec
xor
mov
push
out
push
jbe
adc
xchg
inc
mov
aam
xchg
mov
cwde
dec
shr
dec
daa
mov
mov
stos
mov
mov
lea
dec
and
popa
les
dec
repnz
aas
mov
mov
fadd
mov
cld
push
dec
icebp
xor
and
ins
pop
push
movs
cli
add
test
mov
add
and
push
fist
xor
iret
add
xchg
mov
push
shl
out
nop
xchg
cmp
push
cmp
cs
dec
sbb
jnp
cmp
and
aad
repz
ss
pop
imul
stc
sub
inc
add
jo
or
test
cmp
arpl
xchg
lock
mov
fwait
movs
in
nop
aad
xor
and
ret
dec
pop
fld
push
dec
adc
and
sar
out
iret
ds
mov
fwait
sbb
inc
push
fdiv
pcmpeqw
enter
lahf
and
mov
jae
dec
inc
adc
int3
jg
popf
cmp
outs
ret
lods
xor
cli
inc
dec
in
pop
mov
retf
add
pop
push
cmp
pushf
adc
mov
and
push
inc
sub
xchg
adc
pushf
pop
jmp
wbinvd
neg
and
xchg
arpl
daa
dec
xor
mov
adc
cs
test
push
sub
sub
xchg
clc
int
inc
push
dec
(bad)
clc
mov
arpl
in
stos
stos
sahf
cmp
or
inc
mov
sbb
mov
out
fisubr
xor
xchg
ror
sbb
daa
cmc
xor
movs
nop
dec
jmp
movd
dec
dec
push
push
int3
mov
std
inc
(bad)
pop
sub
sub
ds
cmp
cmp
sbb
push
adc
test
inc
fistp
mov
pop
sbb
lock
xchg
data16
addr16
fs
push
push
daa
ja
cmps
fmul
jl
retf
pop
mov
and
aas
retf
jmp
xor
push
add
jno
xor
aam
sbb
ss
xchg
in
sbb
and
jmp
mov
inc
mov
mov
mov
hlt
mov
ins
loop
and
(bad)
in
dec
repz
and
mov
loopne
ss
pop
mov
jnp
add
lea
lahf
std
data16
call
addr16
xchg
dec
push
paddb
sbb
sub
or
out
dec
mov
jge
fisub
mov
aaa
dec
enter
and
mov
stos
sbb
ds
xchg
push
(bad)
sub
outs
in
push
mov
loopne
add
add
ror
ins
pop
icebp
sti
iret
sbb
mov
rcl
add
xor
push
nop
pop
xchg
iret
cld
cwde
pop
jmp
ins
inc
lea
mov
idiv
cwde
fistp
push
dec
jmp
cmp
(bad)
cs
jnp
fisubr
ds
imul
sar
adc
test
mov
fstp
movs
retf
inc
sti
adc
ss
pop
lea
sbb
mov
jmp
fldcw
jl
jae
ja
adc
pusha
cld
icebp
adc
stos
adc
out
mov
retf
cli
ficomp
lahf
pop
dec
mov
outs
inc
or
cmp
in
xor
out
out
into
test
imul
add
cmp
mov
mov
pop
test
inc
sub
add
mov
enter
sar
xchg
out
std
aaa
pusha
fwait
cmps
es
pop
(bad)
mov
rcr
add
push
mov
add
sub
pushf
and
idiv
movs
add
leave
fsubr
ins
fist
jne
xor
xchg
out
pusha
xor
dec
jge
pop
or
cmp
imul
test
scas
shl
ja
ficomp
sub
mov
jecxz
xor
jecxz
mov
js
mov
adc
(bad)
mov
cmc
push
jl
jp
xlat
adc
sub
(bad)
xlat
xor
cmp
jo
dec
(bad)
retf
jo
into
fwait
scas
pop
in
lock
dec
aaa
or
rol
cdq
pop
sbb
aam
push
jae
movs
add
addr16
loop
push
adc
pop
sti
xchg
mov
std
jno
lds
push
mov
outs
cli
aam
jp
cs
xchg
pop
dec
shl
sbb
fldz
es
xchg
mov
out
jns
push
sbb
dec
inc
mov
push
test
scas
popa
repz
jb
push
dec
sbb
mov
mov
in
xchg
shl
fwait
cmc
pop
add
ins
bound
adc
xor
test
pop
(bad)
aas
and
inc
(bad)
adc
call
mov
inc
or
stos
dec
sbb
push
add
add
sahf
mov
add
int
lock
adc
push
push
push
mov
mov
(bad)
add
inc
dec
push
push
jp
xor
pop
xchg
iret
(bad)
mov
jmp
outs
mov
or
fmul
cwde
shr
pop
stc
mov
and
sti
inc
ins
dec
add
sbb
xchg
call
jns
ss
mov
mov
mov
jmp
xchg
jne
test
push
inc
fidivr
call
sub
stos
mov
cli
(bad)
xchg
push
mov
pop
mov
push
popa
xor
popa
dec
dec
pop
inc
inc
retf
outs
pop
dec
mov
jmp
mov
dec
nop
(bad)
ja
into
pop
and
sub
cs
lahf
call
pop
sub
daa
inc
cmp
jmp
or
sub
ins
pusha
neg
ret
xor
add
mov
jnp
xor
add
sbb
inc
cmp
stos
mov
xchg
push
pushf
push
fsubr
aam
mov
into
in
mov
scas
pop
lock
mov
dec
fdiv
ds
aad
shr
mov
shr
jmp
fcmovb
xor
jmp
xor
sbb
in
out
add
jg
arpl
adc
imul
mov
xor
loop
sub
mov
pop
sahf
(bad)
ficomp
outs
es
sbb
and
mov
mov
(bad)
loopne
dec
and
mov
pop
out
mov
(bad)
out
and
shl
ins
dec
clc
(bad)
movsx
call
fiadd
ins
sub
(bad)
pop
xor
sub
pushf
pushf
cld
dec
loopne
iret
outs
int3
mov
out
neg
out
loope
add
cmp
add
iret
push
cmps
push
imul
mov
jge
nop
sub
sbb
(bad)
cdq
cld
popf
fimul
aaa
nop
(bad)
mov
dec
test
mov
popf
adc
jg
sbb
dec
fbstp
push
mov
arpl
sub
movs
frstor
inc
sub
mov
pop
pcmpgtw
sahf
aam
ror
lods
add
fcomi
loopne
inc
mov
rol
fsubrp
pop
pop
sbb
push
xor
pop
(bad)
cmps
xchg
daa
sub
dec
mov
xchg
xchg
mov
addr16
xchg
fwait
mov
sbb
ja
sub
iret
xchg
fdivr
and
lds
or
(bad)
ins
pop
mov
add
icebp
mov
std
xchg
dec
imul
fwait
sbb
mov
cmp
movs
sti
fisubr
ja
cmp
sbb
cli
inc
add
(bad)
add
cdq
sar
xor
out
mov
mov
in
sti
inc
push
inc
pop
lea
sub
clc
xor
cmp
cmp
push
xchg
mov
and
push
shl
mov
stos
mov
jge
inc
into
pop
push
push
int3
jg
jle
dec
sti
xor
std
jge
inc
jmp
test
inc
leave
dec
into
sub
ror
lods
pop
mov
adc
and
and
jne
mov
repz
push
mov
test
dec
lock
xchg
ds
adc
sahf
cdq
sbb
test
dec
stos
dec
xor
xor
stos
pop
std
mov
mov
icebp
or
pop
sub
push
push
jp
add
fwait
add
loopne
pop
fimul
push
adc
js
mov
fwait
(bad)
sub
pushf
test
inc
push
mov
mov
call
and
pop
or
lock
imul
fdivr
inc
sub
mov
mov
out
push
ds
cwde
cwde
cwde
inc
aas
jae
mov
dec
xchg
fidiv
jmp
or
add
retf
sbb
xor
fadd
sub
mov
in
jbe
xchg
push
and
sti
sbb
jmp
ins
sahf
int
push
jecxz
iret
push
dec
icebp
pop
mov
push
push
mov
out
xchg
and
push
fdivrp
or
jo
pushf
fstp
or
push
jg
inc
outs
iret
dec
imul
push
cwde
ss
clc
xor
xchg
out
stc
std
mov
pop
dec
addr16
push
mov
inc
enter
mov
push
inc
or
and
fldcw
rol
push
push
pop
rcr
add
or
jmp
lds
jge
xlat
mov
sbb
cmps
nop
or
leave
or
cmp
push
inc
mov
cmps
push
or
add
es
rcr
xor
xlat
inc
daa
jno
icebp
daa
mov
add
adc
ss
mov
mov
and
xor
push
push
pushf
sub
inc
sbb
cs
icebp
fwait
cmp
(bad)
lock
pop
lods
push
xchg
repnz
cmp
pop
popa
dec
mov
adc
lahf
dec
xchg
sbb
shr
add
xor
ror
clc
fs
out
xor
and
add
push
dec
push
out
mov
in
loop
dec
scas
inc
ror
psubw
cdq
pop
mov
push
mov
ficomp
loop
(bad)
stos
popf
neg
out
pop
sub
mov
add
repnz
jno
adc
sbb
cmp
xor
adc
sahf
add
jmp
movs
hlt
mov
push
dec
lods
or
(bad)
sbb
fdiv
out
in
loop
dec
leave
clc
jmp
mov
or
outs
pushf
mov
cmp
xchg
sbb
fnsave
sub
movs
sbb
jp
dec
add
in
pop
jne
cmp
sub
call
xchg
ins
fucomi
sub
dec
retf
dec
sub
cli
sbb
jg
xor
repz
lds
jne
push
arpl
ja
int3
or
out
sub
or
shr
sub
jle
jb
out
sbb
pusha
xor
pop
mov
sti
xchg
inc
pop
mov
test
in
inc
sbb
test
repnz
jge
daa
mov
jge
push
jo
xchg
mov
xchg
imul
sub
sbb
pop
sub
mov
and
mov
adc
xor
aaa
adc
rcl
sub
inc
sbb
mov
(bad)
cld
add
cs
test
in
inc
pop
mov
adc
lock
aas
inc
aad
push
inc
adc
xchg
sbb
mov
add
pop
lea
mov
mov
imul
cwde
mov
inc
fwait
pop
jecxz
xor
mov
sbb
ss
mov
in
jb
jnp
fst
fadd
push
mov
test
fst
stos
mov
mov
mov
call
cld
inc
in
lea
and
pop
and
inc
pop
push
lea
and
mov
(bad)
xlat
aad
push
or
or
imul
fcmovnbe
xchg
mov
dec
adc
std
pmulhw
ins
jmp
or
adc
fstp
addr16
test
and
daa
dec
lock
or
movs
push
jae
pop
mov
jmp
mov
ror
fmul
int3
dec
pop
adc
rol
xor
stc
mov
addr16
jmp
je
sbb
jmp
cdq
mov
push
sub
call
sub
fnstsw
push
fmul
aam
repz
loop
pushf
(bad)
push
gs
inc
xor
sbb
push
jp
sti
sub
loopne
movs
shl
inc
out
imul
xchg
mov
fbstp
mov
mov
cmp
aad
pop
mov
mov
xor
aaa
ficom
dec
ins
and
add
(bad)
leave
push
cmp
push
das
fcom
mov
push
data16
cmc
in
aam
test
popf
cmp
rcl
rol
ret
xchg
jb
je
xor
cmp
sahf
loopne
mov
scas
mov
adc
div
rol
cmc
push
mov
push
cmps
in
shl
stos
ret
pop
cmps
pop
in
mov
adc
add
push
pop
lahf
lock
or
xchg
pop
xchg
in
ins
adc
add
les
sbb
or
dec
adc
rcr
or
or
mov
les
rcl
(bad)
push
out
dec
daa
mov
xor
dec
push
call
in
stos
mov
push
and
loop
cwde
and
shr
(bad)
dec
popf
lods
frstor
xchg
jbe
cs
cmps
sub
xchg
sti
inc
jp
ja
fmul
mov
mov
mov
cdq
jnp
cli
js
faddp
xchg
pop
mov
or
sti
mov
push
sbb
ror
inc
sub
icebp
vmread
push
mov
std
stos
loop
arpl
aaa
shr
ins
inc
sub
adc
xchg
cmps
push
bound
inc
push
lds
push
sbb
dec
and
sub
inc
cmp
or
mov
dec
int3
jecxz
push
(bad)
pop
lods
jns
inc
push
mov
inc
test
sub
les
add
sbb
pop
add
test
sbb
and
adc
sbb
xor
jmp
out
xchg
lods
jno
and
pop
test
into
cmp
and
loop
adc
push
popf
int3
addr16
out
cdq
sbb
inc
pop
int
mov
push
das
push
lds
pop
pop
mov
and
icebp
and
mov
pushf
imul
sar
pop
and
pop
sub
ret
aaa
gs
ss
je
fs
stos
sub
fistp
pop
mov
mov
xchg
sbb
lock
sti
(bad)
fcmovbe
add
xlat
mov
shl
icebp
xor
adc
dec
mov
dec
aas
mov
int3
sub
and
xor
mov
loopne
push
dec
(bad)
jecxz
sbb
xchg
and
mov
mov
loop
cmps
adc
int3
test
cmps
addr16
(bad)
add
(bad)
in
cmc
xor
dec
dec
push
jns
jle
dec
add
or
xor
les
xor
xchg
dec
jmp
mov
in
and
pop
gs
aad
call
stos
xor
stos
pop
nop
push
mov
mov
(bad)
cli
jp
ins
stc
sbb
mov
push
jbe
cmp
cmp
push
pop
sar
add
pop
mov
arpl
sub
mov
xchg
ds
(bad)
in
stc
sbb
outs
xchg
std
xor
jmp
mov
push
aas
jns
(bad)
dec
dec
(bad)
es
rcl
and
mov
call
mov
int3
popf
ins
cmp
cmp
repnz
inc
jns
cmp
xlat
mov
loopne
jmp
push
mov
stos
mov
mov
or
jp
mov
pop
fxch
sbb
shl
pop
frstor
nop
sub
adc
jae
clc
out
sbb
shl
fistp
mov
pop
(bad)
and
xchg
and
or
pop
pusha
xchg
outs
cld
pop
popf
mov
push
xlat
(bad)
mov
repz
and
(bad)
push
ret
pop
call
push
outs
div
imul
clc
call
mov
cmp
xor
or
loop
cmp
cmp
sub
outs
repnz
jle
push
pushf
pop
sar
mov
xchg
fwait
cmp
dec
aaa
mov
fsubr
mov
ja
(bad)
xor
(bad)
fistp
push
cs
lea
retf
jno
les
dec
xor
rol
lock
cmp
add
sbb
shr
mov
pop
inc
jp
movs
xor
cdq
ret
sub
sub
jmp
and
sub
cmp
aam
fild
push
(bad)
outs
test
jg
and
sub
mov
imul
lock
push
adc
pushf
push
pop
push
hlt
rcr
mov
mov
arpl
shl
dec
inc
fimul
cmp
and
popf
pop
sub
add
and
push
sub
sub
cmp
jmp
dec
js
dec
leave
imul
sub
ins
sbb
lahf
in
(bad)
icebp
retf
call
mov
mul
ror
push
dec
jmp
pop
ret
and
or
jno
sub
xchg
movs
or
push
stc
add
leave
sbb
pop
loop
pop
dec
or
inc
push
repz
xchg
dec
cmp
or
std
aam
cdq
or
pop
adc
lock
dec
mov
cdq
mov
mov
inc
mov
cmp
pop
pop
outs
xchg
mov
jg
dec
xchg
mov
pop
std
mov
cmps
inc
imul
jne
adc
clc
adc
inc
mov
jmp
push
movs
inc
loopne
adc
dec
or
jnp
ins
mov
xor
or
pop
push
pop
push
adc
sub
loopne
fs
sbb
mov
jecxz
in
jnp
mov
and
dec
and
lock
stos
sbb
jne
sub
sbb
loopne
mov
sbb
cmp
or
mov
mov
or
fdivp
ja
and
xchg
and
(bad)
stos
jae
adc
fwait
xchg
fldenv
pop
sbb
dec
les
and
lods
push
xchg
add
mov
std
fmul
pop
jo
jmp
mov
mov
cmps
repz
addr16
xchg
mov
cmp
jg
pop
ins
rcl
add
int3
cmp
push
scas
add
push
mov
xor
jb
cs
ret
mov
mov
xchg
js
inc
aas
pop
xor
mov
fcomp
test
rcpps
ffree
sbb
push
mov
mov
stc
movs
lock
loope
mov
cmc
in
mov
sub
xor
sub
clc
in
push
(bad)
stc
xor
xchg
pop
mov
pop
hlt
pop
sub
xchg
push
pop
daa
and
std
mov
aam
push
push
in
hlt
cmps
jp
pop
es
in
js
push
and
mov
sti
push
lds
pushf
xlat
and
xchg
adc
(bad)
or
cld
push
sub
add
mov
les
adc
icebp
add
xor
repnz
in
arpl
std
cmp
mov
(bad)
popa
jge
mov
pop
frstor
xchg
sub
pop
xchg
dec
and
ins
cwde
(bad)
or
push
in
xchg
jne
cmps
lock
xchg
scas
test
sbb
call
inc
cmp
arpl
push
mov
cmp
inc
or
cmps
jmp
sub
and
jnp
pop
in
rcr
jp
lods
popa
mov
out
cld
retf
push
xor
inc
cmp
jae
push
or
cmps
mov
sbb
shl
fcomp
rcl
ins
add
sub
ins
test
inc
into
mov
xor
mov
out
sub
mov
ins
xchg
xchg
ja
es
sbb
pop
sbb
mov
adc
nop
dec
outs
movs
cmp
pop
imul
mov
sbb
jo
jge
aaa
fisub
jns
xchg
leave
popa
jns
cmp
and
mov
inc
and
leave
popa
and
es
retf
daa
cld
xchg
pushf
lock
scas
shr
mov
jnp
inc
sub
addr16
ins
out
and
xor
sub
cmps
ret
xchg
pop
rol
outs
sbb
sbb
fistp
rcr
xchg
jp
addr16
neg
pop
in
jecxz
cld
ja
into
pop
or
dec
mov
(bad)
sahf
icebp
popa
js
in
mov
dec
mov
loope
ds
mov
fdivr
and
movs
test
fdiv
mov
adc
popa
dec
pop
mov
ins
int3
adc
std
mov
ins
mov
addr16
and
mov
or
push
dec
adc
add
gs
std
mov
dec
cmp
sbb
popf
(bad)
call
cmps
or
int
pop
dec
jae
loope
jnp
xchg
movs
neg
sbb
add
rcl
sbb
and
jg
jbe
out
iret
(bad)
fnstenv
pop
cs
jbe
sub
ret
rol
loop
cmp
or
sub
cmp
pop
sahf
sub
mov
sub
xchg
push
and
loope
mov
outs
xor
cmp
xor
pop
jle
jno
push
jmp
div
in
or
push
push
dec
mov
or
xchg
add
push
fwait
and
inc
call
cdq
out
mov
pop
stos
pop
clc
xor
dec
dec
cld
sbb
cmp
mov
(bad)
outs
inc
hlt
ja
es
ds
add
mov
cmp
dec
pop
out
jecxz
dec
adc
into
dec
and
push
xchg
stos
sub
add
cmp
add
mov
rcr
add
mov
shl
clc
repnz
ins
ror
fst
cs
mov
mov
adc
out
sbb
sbb
push
xchg
cmp
sub
fs
mov
adc
stc
or
sahf
cdq
hlt
cdq
fidivr
mov
in
stc
fwait
ret
inc
jmp
add
inc
push
or
cmp
stos
add
rol
pop
gs
in
mov
aaa
(bad)
push
mov
mov
dec
cli
(bad)
call
ja
and
xor
cmp
sti
addr16
mov
cld
cld
loopne
nop
cwde
fndisi(8087
mov
popf
sbb
lock
push
sub
ins
mov
stos
mov
mov
sbb
dec
es
dec
rcr
push
cmp
and
jmp
mov
ret
mov
pushf
les
jle
mov
test
sbb
mov
mov
sti
scas
mov
cs
and
push
xchg
fwait
dec
push
mov
mov
jmp
or
sbb
and
test
mov
cmps
xchg
mov
int3
jnp
shl
pop
pop
mov
push
or
jno
es
inc
es
in
dec
lods
jmp
(bad)
add
cmp
out
pop
xor
ror
and
sbb
jb
mov
fwait
imul
loopne
inc
fmul
gs
out
cmp
adc
jg
sar
adc
sbb
jg
inc
les
add
sbb
int
mov
push
xchg
clc
xchg
inc
cs
adc
inc
loop
mov
push
dec
push
sbb
lods
mov
clc
push
out
pop
fdivr
(bad)
cld
inc
mov
lods
xchg
mov
push
sar
sub
pop
sub
addr16
pop
mov
dec
fcom
cmp
daa
out
rcl
sbb
cmp
mov
push
inc
gs
xor
lods
cmp
pop
mov
jmp
sub
xchg
inc
fs
scas
xor
pushf
fadd
push
push
fisttp
cmps
rcr
out
mov
dec
lods
aad
jmp
ds
cwde
ins
clc
fucomip
mov
inc
fdivr
nop
xor
mov
fsub
add
ror
jb
dec
ror
xchg
and
pop
or
mov
or
push
cwde
cli
imul
jmp
ret
cmc
lgs
or
sahf
sti
pop
mov
pop
enterw
stos
rol
dec
(bad)
scas
pop
fcom
(bad)
jmp
pop
test
cdq
retf
ret
adc
cdq
mov
dec
lods
jmp
mov
sbb
adc
loop
mov
(bad)
ror
add
nop
jnp
loope
loope
inc
stc
in
dec
into
xchg
ss
inc
(bad)
icebp
adc
pop
mov
add
rcr
jg
rcl
loop
icebp
loop
add
dec
or
stc
push
cld
aam
loopne
pop
(bad)
fisub
(bad)
(bad)
adc
add
nop
loopne
ds
into
sub
sbb
adc
xchg
mov
mov
jecxz
mov
std
stos
dec
aad
cs
dec
sbb
pop
and
mov
and
ds
inc
pop
aam
mov
pop
loope
add
add
adc
sbb
stos
inc
fcomp
icebp
stos
loopne
jmp
pop
(bad)
push
push
stos
or
dec
push
and
dec
in
pop
sbb
fadd
push
out
add
sbb
push
loopne
aas
loopne
mov
ficomp
cmp
mov
xor
or
jecxz
outs
(bad)
jmp
rcl
and
js
cmp
in
push
cmps
pop
push
or
lock
sub
hlt
xchg
cmps
popf
jb
ror
in
mov
pop
and
pop
out
add
test
cli
sbb
shl
inc
stos
sahf
inc
mov
pop
jge
inc
inc
mov
pop
rol
jge
call
pop
jl
adc
test
dec
sub
popf
stos
jmp
ja
sti
cmp
xchg
pusha
dec
cli
xchg
jge
mov
int
(bad)
(bad)
rep
test
pop
add
sub
cmp
dec
mov
cld
jmp
ja
das
inc
hlt
les
and
xchg
push
mov
bound
add
hlt
(bad)
cmp
add
or
loopne
mov
hlt
icebp
retf
addr16
push
movs
sbb
cwde
or
mov
repz
pushf
dec
jo
ds
inc
jno
sbb
lock
mov
or
pop
jp
mov
sar
push
bound
pop
jb
push
aad
mov
sub
scas
mov
pop
mov
out
sbb
inc
jmp
mov
outs
js
iret
outs
mov
add
cmp
cmps
retf
mov
scas
xor
call
ds
push
pop
pop
dec
fst
cmp
dec
add
lahf
lods
adc
dec
add
fnstcw
push
call
add
ds
fld
adc
inc
mov
mov
int
fdiv
mov
xchg
jno
fcomp
or
shl
mov
mov
into
aam
xor
mov
(bad)
push
int3
xchg
shr
inc
jb
dec
fsub
ja
cdq
add
jae
or
lods
pop
das
dec
mov
(bad)
dec
retf
(bad)
mov
mov
(bad)
cld
or
dec
js
jl
dec
aam
sub
inc
sahf
cmp
lds
inc
push
das
ja
sar
ds
or
sbb
mov
sbb
cmp
mov
sbb
jg
mov
sbb
pop
jg
or
fstp
jge
sub
(bad)
pop
ss
inc
jnp
jmp
xlat
sbb
pop
fwait
jne
(bad)
outs
fsub
test
mov
sbb
push
jnp
jb
mov
jmp
test
jl
adc
loope
inc
fisttp
fisttp
pop
adc
mov
(bad)
lea
mov
inc
ja
das
outs
dec
cs
dec
mov
dec
xchg
sbb
push
fcom
dec
jmp
pop
jne
cmp
push
(bad)
mov
jmp
aad
fnstcw
jge
pop
pop
add
inc
in
mov
in
sbb
mov
nop
cld
mov
mov
and
out
cmps
mov
add
jbe
les
(bad)
or
sar
repz
or
fistp
dec
mov
sub
pop
xchg
mov
es
dec
bound
pop
dec
cmp
mov
sub
sbb
cmps
daa
mov
mov
and
or
shr
sub
cdq
add
call
icebp
out
test
out
pop
sbb
inc
pop
(bad)
cmc
(bad)
add
or
inc
push
and
fidivr
push
push
push
jp
or
in
ret
(bad)
int3
lds
fisttp
shr
(bad)
sbb
fbld
add
sbb
cmps
mov
lea
popa
mov
(bad)
xor
dec
and
int3
pop
xor
dec
mov
out
push
mov
cmp
mov
(bad)
leave
stos
into
push
jne
mov
add
push
fdiv
daa
mov
add
fwait
and
dec
mov
gs
dec
xchg
push
sub
add
hlt
mov
mov
xchg
cmp
pop
outs
cmp
push
xchg
call
mov
mov
mov
cmp
mov
xlat
(bad)
jg
sbb
add
push
mov
pop
imul
cmp
jbe
jmp
sub
xchg
and
mov
aam
mov
dec
jo
lods
pop
popa
jb
mov
sub
or
test
cmp
(bad)
ret
sbb
push
aaa
push
arpl
xor
ds
iret
pop
add
pop
xchg
pop
jnp
scas
xlat
fbstp
ss
cmc
mov
fsub
(bad)
pop
mov
push
mov
mov
add
daa
call
cmps
xchg
fidivr
dec
pop
add
cmps
pop
cmp
dec
test
test
lahf
iret
push
sbb
push
inc
xchg
mov
and
lock
add
sbb
repnz
movs
push
popf
jecxz
dec
jle
stc
push
setbe
sbb
ins
aaa
into
xchg
cmps
or
mov
mov
cld
movs
and
sub
jle
repnz
dec
(bad)
adc
add
xchg
mov
outs
dec
inc
repnz
mov
add
movs
dec
cmp
rol
das
cmp
sbb
(bad)
jbe
sar
call
sub
faddp
mov
dec
sub
cmp
add
pop
jno
xchg
xchg
retf
int3
scas
mov
and
push
rcr
out
xor
xchg
(bad)
movs
and
stos
pop
dec
mov
aas
mov
inc
jg
cmp
jecxz
(bad)
arpl
push
stos
popf
pop
pushf
test
call
ds
mov
dec
cmc
mov
js
cmp
push
sbb
jne
jnp
ret
adc
xlat
out
and
dec
xor
mov
xchg
clc
mov
xlat
adc
add
nop
fldlg2
call
push
mov
int3
or
aaa
cmp
jbe
xchg
dec
hlt
add
jmp
add
add
jae
adc
push
sub
fwait
mov
xchg
add
push
pop
imul
mov
aam
leave
das
(bad)
dec
fcomp
push
dec
adc
cmp
scas
xchg
xor
cmp
xchg
outs
pop
mov
sbb
(bad)
mov
mov
pop
pop
dec
jmp
cwde
and
arpl
jmp
push
mov
arpl
(bad)
xlat
in
lods
or
outs
mov
inc
xchg
inc
dec
xlat
sahf
inc
loop
ja
nop
repnz
and
pop
sub
ins
jmp
dec
nop
out
sbb
pop
mov
neg
(bad)
push
cmp
mov
loopne
idiv
mov
cmps
aam
push
add
js
xor
cli
dec
or
test
inc
mov
rol
jle
mov
ret
ror
shr
xchg
pop
into
hlt
or
aad
jmp
std
push
mov
(bad)
mov
pop
sbb
or
daa
je
xchg
loopne
clc
pop
lods
les
std
fs
xor
test
pushf
xchg
and
sbb
ins
jge
add
add
in
add
rol
es
mov
fldcw
cmc
pop
std
icebp
xchg
les
cmp
and
push
test
ficomp
xor
xchg
nop
cmp
pop
xchg
lahf
pushf
pop
test
shl
sub
shr
mov
sbb
frstor
addr16
(bad)
jmp
sub
cmp
fcom
sbb
jge
mov
or
ds
pusha
and
mov
in
adc
inc
or
xor
xchg
mov
or
xor
loop
int
xor
cli
addr16
scas
ret
call
or
ret
push
mov
test
fist
and
or
mov
mov
dec
mov
loop
sub
jae
mov
cdq
xchg
sub
push
es
cmp
in
sti
or
mov
imul
pop
iret
push
xchg
es
jecxz
rcr
fistp
scas
in
fidiv
out
and
popf
es
retf
imul
out
ds
mov
adc
mov
sub
adc
ins
or
outs
dec
out
xchg
loope
addr16
(bad)
mov
add
mov
push
pop
and
popa
daa
bound
int3
test
test
std
mov
shr
mov
mov
gs
sub
fbstp
iret
mov
in
or
mov
jnp
jno
daa
push
pop
das
jmp
jae
cdq
jbe
(bad)
(bad)
pop
lods
jge
pop
call
hlt
xor
add
sub
mov
mov
pop
fs
pop
and
daa
pop
xor
mov
xchg
push
push
shl
mov
(bad)
loope
leave
jo
sbb
ret
clc
lock
(bad)
ficomp
clc
mov
movs
(bad)
mov
push
pop
rcl
pop
mov
rcr
aam
jg
jae
pop
push
aam
lock
fist
xor
test
lds
jle
shr
jb
sbb
sbb
dec
push
sar
int
adc
aam
lods
sbb
and
fwait
sub
stos
test
ss
xchg
aaa
jmp
adc
cld
stos
(bad)
xor
adc
pop
aam
mov
jmp
das
test
sbb
sub
arpl
rcr
add
dec
cmps
xlat
(bad)
mov
xchg
mov
out
mov
ffreep
jg
adc
dec
mov
and
fldcw
xchg
push
gs
cmp
xlat
int
(bad)
retf
out
jle
xor
fidivr
adc
mov
(bad)
adc
xlat
rcl
aaa
pop
popa
imul
sbb
push
ret
mov
mov
bound
pop
adc
loop
inc
cmps
rcr
scas
sbb
sbb
xor
mov
and
dec
cs
ror
(bad)
(bad)
push
add
mov
int
std
fadd
lds
test
and
dec
cwde
test
ret
(bad)
cmp
jns
mov
xchg
adc
mov
adc
popa
leave
mov
sub
into
(bad)
adc
cld
fiadd
jmp
mov
jge
test
push
nop
ror
sub
pop
sahf
or
jmp
(bad)
call
jl
int
in
clc
cmp
pop
or
mov
out
cmp
loopne
stos
test
mov
leave
push
arpl
adc
mov
mov
or
or
loopne
jp
test
add
dec
int
clc
push
lods
and
add
(bad)
push
stos
out
sbb
dec
les
or
and
stos
inc
jge
ds
pop
adc
push
(bad)
loop
stc
push
pop
movs
mov
cmps
test
ret
inc
and
lea
mov
dec
inc
lock
test
in
into
aad
mov
add
xchg
icebp
pop
cli
aaa
arpl
inc
adc
rcr
or
std
cs
nop
xor
stos
push
rol
dec
xor
dec
mov
std
push
das
sub
in
retf
cmps
test
inc
push
sbb
int
jge
je
cmps
scas
pop
cmp
or
fsubr
jl
jno
dec
jae
retf
mov
cld
mov
and
xchg
stos
cld
fwait
loop
fwait
sbb
aam
xchg
fld
ins
mov
sbb
aaa
(bad)
jp
imul
xchg
test
pop
mov
add
or
mov
fidiv
cmc
cmp
mov
movs
adc
inc
pushf
jae
mov
ffree
ret
xchg
jmp
sbb
scas
push
mov
scas
pop
mov
add
xor
mov
and
dec
dec
fld
shr
idiv
inc
mov
clc
dec
xchg
mov
cmp
inc
setae
jo
xchg
cmp
mov
jb
sub
sbb
stc
xor
dec
adc
adc
mov
paddusw
fist
leave
lea
pop
mov
fwait
mov
adc
dec
add
xlat
push
int3
aam
cmp
xor
daa
adc
jmp
out
clc
push
sbb
jge
ror
sbb
cmp
xchg
sub
std
jg
inc
imul
imul
jle
out
movs
add
ficom
xchg
(bad)
xchg
jmp
(bad)
jmp
dec
dec
mov
jne
cmp
fsubr
add
or
or
jmp
mov
dec
mov
sbb
add
xchg
jbe
or
jnp
xor
jb
imul
out
sbb
gs
add
push
sbb
fstp
ds
adc
(bad)
cdq
sub
out
push
fstp
daa
or
pop
push
or
add
das
(bad)
movs
mov
or
lds
sub
push
int3
std
cli
inc
push
jg
mov
retf
push
xlat
cmp
inc
push
ins
cmp
leave
sub
adc
dec
fidiv
dec
dec
movs
mov
or
mov
xlat
sbb
mov
popf
or
sub
not
dec
or
pushf
dec
pop
mov
mov
cmp
jb
dec
dec
mov
loopne
js
push
cmp
cmp
addr16
pop
ror
pop
add
pushf
or
jae
rcl
retf
sbb
pop
mov
(bad)
sub
xor
push
cs
stos
push
pop
loope
add
arpl
xchg
push
stc
cdq
lods
addr16
ins
sbb
cmp
div
movs
push
add
xor
rol
cmp
nop
jnp
lock
cmp
push
sub
inc
jns
ror
lea
fisttp
adc
das
push
cmp
(bad)
leave
push
bound
scas
cmp
dec
outs
or
jl
mov
cmps
push
std
jp
repz
addr16
rol
pop
retf
daa
icebp
dec
scas
and
inc
mov
not
js
ins
lea
fstp
loop
arpl
or
cs
xchg
retf
mov
and
test
dec
lock
dec
imul
shl
push
mov
daa
sbb
xchg
sub
out
addr16
inc
inc
rol
sar
sbb
ins
mov
lods
das
mov
sub
mov
out
mov
dec
add
call
cs
or
(bad)
dec
or
int3
sub
aaa
retf
fidivr
dec
shl
retf
cmp
add
jnp
in
mov
fsub
fld
xchg
enter
lds
or
mov
dec
xchg
inc
fdivrp
mov
jmp
mov
enter
add
dec
or
cmp
pop
sub
jmp
add
xchg
fidiv
jmp
xchg
ins
jo
pushfw
pop
dec
jno
push
sub
ss
loop
sbb
jl
inc
push
out
sbb
nop
or
in
(bad)
sub
xchg
and
(bad)
dec
out
rcr
sahf
aas
mov
or
ret
sahf
scas
arpl
xchg
loop
fldpi
and
rol
add
scas
dec
aad
mov
in
jb
xor
sbb
dec
out
(bad)
mov
mov
popf
and
jl
dec
into
cmps
loop
cmp
sbb
dec
les
pushf
mov
add
shl
cmp
(bad)
loope
and
mov
cwde
imul
pop
ror
call
mov
inc
in
(bad)
push
push
jns
mov
cmps
cmp
cmp
cmp
imul
sub
dec
mov
and
sub
sahf
dec
xchg
cmps
dec
or
in
stos
push
dec
stos
fs
pop
outs
inc
pop
inc
adc
jl
lock
sub
(bad)
ret
test
aad
in
popa
hlt
lock
jecxz
pop
out
add
mov
inc
fsubr
pop
or
test
sub
jbe
fdivp
inc
mov
and
jno
sbb
xchg
or
push
fdivr
add
pop
fldcw
mov
push
sbb
sbb
mov
in
arpl
xor
retf
or
lods
push
iret
xchg
bound
mov
and
pop
clc
ret
dec
jmp
out
lds
add
mov
popf
jo
cmc
cmp
stc
dec
inc
outs
out
daa
xchg
mov
inc
sub
or
adc
sub
je
std
add
arpl
imul
pop
dec
dec
or
aam
movs
cmp
xor
inc
dec
pop
adc
inc
pushf
jb
call
add
or
push
addr16
lods
sbb
or
pop
cmps
rcl
adc
lahf
rcr
arpl
cmps
les
cmps
jmp
pop
in
pop
(bad)
fucomip
repz
(bad)
push
mov
shr
test
add
gs
das
cmc
add
out
jns
mov
ret
fst
cld
je
cmps
loop
sbb
jnp
ins
clc
pop
push
adc
imul
push
imul
dec
imul
pop
push
adc
pop
(bad)
mov
dec
add
cld
ins
pop
and
in
je
jmp
push
sub
and
fcom
rcr
adc
in
mov
xor
add
push
cmp
pop
dec
jl
push
dec
leave
xlat
retf
sub
push
jne
mov
loopne
pop
(bad)
or
fidivr
loopne
sbb
jle
xchg
dec
retf
pop
xchg
jle
in
inc
sub
xchg
xor
(bad)
dec
mov
pop
xor
rcr
ror
xchg
jnp
out
adc
cmp
pop
jg
aam
test
pop
(bad)
aad
stos
dec
mov
ds
mov
push
mov
xor
imul
(bad)
int3
mov
lock
enter
es
call
cmp
and
(bad)
jb
(bad)
push
xor
dec
aad
rcl
jmp
imul
jno
push
lods
mov
outs
push
shl
ds
jbe
cmp
mov
mov
scas
dec
mov
xchg
dec
inc
xchg
fnstcw
lock
(bad)
aad
ja
stc
cmp
mov
test
loope
addr16
ins
arpl
push
sub
mov
(bad)
retf
clc
xlat
sahf
and
inc
cmp
fcmovnbe
adc
dec
popa
xchg
xchg
mov
lock
xchg
mov
push
ror
pop
push
fldenv
dec
das
mov
mov
jg
mov
mov
jp
dec
fimul
dec
add
dec
push
shr
mov
(bad)
mov
in
test
inc
adc
cwde
cmp
jg
les
retf
add
cmove
jle
jp
gs
out
adc
push
lods
or
scas
add
add
retf
mov
test
addr16
pop
stos
mov
inc
mov
push
fldcw
in
idiv
sbb
pushf
xor
mov
dec
mov
xor
outs
shl
pop
fild
push
cmp
sub
int3
jns
(bad)
jge
adc
pop
ja
push
lea
sbb
add
and
aas
rcr
and
jo
push
mov
js
dec
fwait
inc
out
int
je
mov
lock
sub
js
cwde
push
out
mov
add
jo
push
sahf
and
sub
nop
scas
dec
ret
scas
push
push
mov
outs
jg
inc
mov
pop
sub
in
retf
ins
pop
iret
pop
mov
xor
shr
push
pop
mov
(bad)
lods
popa
in
mov
pushf
pop
sbb
inc
push
gs
push
lods
stc
rol
inc
jl
ror
mov
cmp
ds
dec
pop
cli
push
fcomp
mov
lods
or
and
movd
push
and
fiadd
fistp
sub
js
cmps
stos
pop
sbb
dec
jp
adc
test
jo
fidiv
and
cmp
(bad)
imul
ss
mov
xor
shl
jle
xchg
adc
call
loope
(bad)
mov
aam
xor
adc
sbb
mov
out
sbb
or
out
mov
inc
fcomp
jge
scas
sub
ror
inc
inc
sub
or
lea
push
push
jge
div
repnz
mov
hlt
dec
push
pop
xor
clc
mov
xor
push
stos
arpl
and
ror
arpl
cld
aad
in
mov
pop
inc
ins
dec
or
xchg
sbb
add
dec
adc
sbb
ins
cmps
push
adc
cmps
fcmovnu
dec
add
push
pusha
mov
rcr
(bad)
xchg
hlt
in
ds
pop
jle
sbb
pop
mov
inc
adc
sbb
xchg
in
es
fcmove
push
fwait
push
lea
jmp
hlt
int3
mov
outs
mov
jge
fld
addr16
popa
fimul
xor
outs
cld
cmp
es
push
add
in
sar
fcom
pop
xchg
sahf
sar
pop
mov
jmp
push
mov
jb
push
inc
add
mov
int3
test
(bad)
fisttp
adc
dec
ror
ins
sub
out
mov
enter
retf
movs
jl
dec
adc
pop
imul
lods
pop
mov
cs
and
stos
add
(bad)
daa
shr
xchg
push
aad
addr16
popf
xor
jg
dec
add
cmp
(bad)
cmp
(bad)
and
inc
jg
push
mov
or
int
sub
jecxz
lods
in
or
mov
das
ror
push
loope
jl
hlt
push
(bad)
sbb
popf
mov
push
jae
mov
nop
imul
sbb
pop
outs
push
pop
fstp
sub
inc
mov
pushf
or
add
vpmadcsswd
stc
mov
push
(bad)
inc
sar
cs
cmps
fcomp
sbb
add
aam
mov
or
and
add
sub
(bad)
aas
jmp
xchg
call
sbb
adc
arpl
jle
cmp
cmp
mov
outs
nop
mov
push
jne
sbb
(bad)
push
cs
icebp
jmp
xchg
mov
les
inc
enter
(bad)
xchg
mov
push
int3
dec
cwde
push
ds
push
(bad)
push
sbb
inc
loopne
pop
add
repnz
pop
loope
enter
loop
mov
mov
std
test
fs
mov
cmps
add
jne
xor
push
(bad)
(bad)
pop
lock
aaa
xor
pop
pop
add
cmp
fcom
outs
aas
push
popf
addr16
rcl
je
pop
pop
call
sub
push
dec
pusha
out
cmps
cdq
xor
and
mov
out
(bad)
das
es
mov
mov
dec
or
xchg
popf
out
jo
inc
out
adc
xor
popf
jno
adc
es
dec
dec
repz
push
add
mov
sbb
out
fidivr
stc
fistp
fucomp
(bad)
out
lods
ja
(bad)
mov
in
cmc
mov
movs
pop
lahf
inc
jnp
and
stos
push
shl
fcmovne
enter
push
aad
les
pop
test
cmp
(bad)
cdq
imul
xchg
mov
mov
mov
inc
cmp
cmp
add
mov
ret
add
(bad)
(bad)
and
aad
mov
mov
fsub
sar
mov
dec
mov
dec
(bad)
loopne
adc
scas
pop
mov
ja
(bad)
popf
mov
fdivr
push
ror
js
mov
dec
into
and
iret
sbb
fwait
sahf
jno
push
adc
sbb
mov
push
fwait
add
(bad)
nop
mov
push
mov
cmp
inc
mov
out
pop
fadd
mov
cmp
call
stc
int3
loopne
add
jp
scas
jle
sub
dec
iret
xchg
(bad)
sahf
icebp
stos
lock
jno
mov
cdq
xchg
push
mov
fwait
jns
mov
retf
jb
ds
mov
push
mov
pop
outs
push
mov
cmps
imul
inc
adc
or
add
scas
(bad)
dec
pop
xchg
(bad)
iret
mov
loop
add
adc
aam
and
outs
pop
inc
pop
fmul
call
xor
in
mov
lea
fisub
(bad)
test
and
aad
cmp
and
popf
fidiv
mov
lds
mov
xchg
or
pop
pop
imul
inc
sbb
xchg
adc
and
retf
ret
push
cs
mov
loope
push
or
mov
test
pop
sbb
add
jae
pop
call
arpl
arpl
or
inc
es
push
dec
mov
xchg
daa
inc
imul
xchg
hlt
push
jnp
js
fdivrp
cwde
mov
adc
sub
in
dec
int3
hlt
cli
push
push
pop
sub
lahf
mov
sbb
jne
push
stos
mov
in
jo
jns
(bad)
aad
stos
int3
movs
cmp
fldcw
sub
dec
pop
mov
cld
mov
cmp
jnp
dec
dec
not
dec
ror
mov
jle
jle
xor
mov
push
loope
out
test
hlt
jmp
mov
ficom
jmp
sbb
sub
and
shl
or
enter
or
icebp
pop
push
push
mov
imul
xchg
inc
sbb
scas
imul
outs
shr
sbb
push
dec
ds
call
xor
int
fsubr
add
jmp
push
sub
push
je
dec
ss
jne
mov
ins
xchg
push
xor
mov
sbb
push
xchg
xchg
push
xchg
imul
fld
in
paddusw
sub
aaa
jl
out
sub
fwait
push
jno
movs
inc
cli
pop
cmp
sahf
bound
fdivp
push
sbb
lock
out
das
add
mov
mov
mov
idiv
push
stos
and
mov
or
loop
pop
or
push
(bad)
rol
mov
stos
fcom
test
popa
cmp
sbb
mov
sti
cmp
mov
pop
xchg
add
cmps
cld
push
sahf
int
rcr
add
shl
mov
fadd
out
in
sbb
aam
test
cwde
jge
aad
inc
jmp
popf
pop
shufps
cs
adc
(bad)
xlat
and
xor
neg
mov
int3
es
cli
push
sub
mov
xchg
(bad)
xchg
cs
dec
adc
movs
ins
std
leave
call
jo
jecxz
ja
stc
mov
stc
int3
dec
rcr
push
ds
js
push
aas
cmps
sub
arpl
sub
mov
xor
or
fxch
dec
popf
(bad)
ficom
pusha
and
jmp
mov
xlat
rcr
and
pop
sub
inc
imul
push
fnstenv
fist
jle
pop
adc
mov
mov
jns
imul
or
and
nop
and
mov
fcomp
and
cdq
retf
add
push
xor
pop
clc
pop
outs
mov
jae
scas
adc
add
jns
test
addr16
stos
and
ja
push
or
ret
in
sbb
pop
in
mov
repz
nop
add
std
retf
xor
fdivr
fisttp
xchg
ret
cmp
mov
push
add
add
fwait
sbb
mov
imul
or
mov
pop
lahf
xor
cmps
mov
jmp
sub
mov
xchg
cmps
stos
xor
jge
ret
into
not
ror
pop
rol
add
nop
fwait
sbb
icebp
(bad)
jb
mov
in
dec
into
cmps
push
pusha
add
mov
jp
adc
cmp
add
or
inc
inc
mov
mov
jge
cdq
pushf
mov
clc
cmps
sub
retf
xor
leave
jbe
sub
int
pop
add
jo
mov
jae
mov
mov
mov
test
and
mov
or
pop
test
lock
or
adc
mov
pop
push
daa
pop
inc
xchg
mov
adc
fcom
(bad)
jl
cmc
pop
jne
cs
jb
dec
adc
dec
inc
popa
pop
les
fwait
jg
sub
shl
leave
sbb
and
jno
push
leave
fisttp
pop
mov
push
push
push
fwait
xor
push
sbb
rol
hlt
cdq
fidivr
pop
mov
add
fstp
dec
jle
repz
stos
fisttp
lahf
fld
je
sub
push
cmp
cmp
call
push
mov
lods
neg
mov
mov
stos
inc
xchg
out
push
xor
jmp
xchg
xchg
pop
adc
aam
xchg
mov
dec
or
add
mov
adc
pushf
cmp
test
rcr
shl
mov
(bad)
inc
or
(bad)
loopne
sbb
sub
jb
sbb
cvtpi2ps
fs
aad
mov
fcmovbe
push
fsubr
push
cmp
add
scas
test
sub
xchg
cdq
ja
and
loope
ja
test
pop
cs
outs
fdivr
lea
xchg
not
pushf
mov
inc
nop
cmp
test
inc
mov
leave
movs
pop
cmp
jmp
nop
and
pusha
(bad)
fst
fisub
pop
es
mov
out
mov
mov
fdivp
pushf
jno
cld
or
pop
repz
(bad)
mov
adc
aaa
dec
adc
add
pop
mov
add
push
fmul
test
add
call
stc
pop
mov
mov
or
and
or
pop
push
fisttp
push
dec
mov
je
inc
ja
pop
cmp
int
push
call
out
mov
pop
pop
add
sub
dec
pop
push
(bad)
cli
sub
lods
dec
shr
test
fmul
fdivrp
or
aad
jno
scas
aam
(bad)
out
fisubr
lock
or
sbb
outs
adc
xchg
push
sbb
xchg
dec
xor
shl
ins
pushf
fs
push
mov
mov
adc
aam
movs
dec
ret
sub
push
mov
sub
repnz
les
cmp
movs
jnp
mov
outs
xor
aam
mov
push
and
mov
(bad)
push
mov
pop
pop
sub
js
mov
jae
push
sti
inc
out
scas
xchg
fwait
popa
xchg
xchg
aam
ror
sbb
xchg
retf
stos
loopne
clc
lea
mov
adc
sbb
dec
dec
sub
test
aam
sub
mov
in
mov
fistp
dec
cmp
add
ja
(bad)
pop
pop
mov
sbb
lods
mov
adc
cwde
mov
sub
cmc
push
iret
dec
adc
push
lock
push
xor
call
push
push
shr
mov
dec
pop
aaa
xchg
and
sar
sbb
xchg
sbb
dec
daa
dec
out
bound
push
int3
add
adc
sbb
mov
arpl
mov
stc
pusha
bound
(bad)
jbe
lock
aam
ins
in
and
aad
mov
sbb
(bad)
ins
ss
loop
push
dec
xchg
clc
jns
push
loop
pop
jno
imul
xlat
inc
lahf
hlt
cmp
mov
push
mov
in
(bad)
scas
leave
sub
jmp
out
dec
daa
addr16
cmps
pop
aas
(bad)
ins
push
loop
pop
sahf
ret
jg
fnstsw
sbb
stos
adc
jmp
dec
cmp
mov
ins
push
push
fidivr
jle
or
(bad)
mov
ja
jnp
mov
add
or
lods
jp
mov
mov
add
out
push
jb
std
das
mov
push
test
push
push
inc
push
xchg
push
cld
mov
sbb
jnp
jne
mov
mov
xor
adc
es
pop
stos
cli
call
push
lahf
jno
popa
sbb
jp
mov
clc
(bad)
push
in
ret
ret
mov
in
mov
push
pop
lods
int3
loope
aad
xor
nop
into
sub
pop
js
stos
inc
int3
mov
ja
xchg
shl
mov
inc
and
fwait
cmp
lock
sbb
mov
inc
call
and
sbb
ficomp
loop
in
cmc
push
outs
rol
add
(bad)
(bad)
imul
(bad)
(bad)
mov
mov
jge
push
(bad)
fiadd
arpl
sub
or
add
xor
pop
es
push
fnstenv
pop
inc
or
jbe
pop
std
push
cld
int3
cmp
jno
hlt
push
ror
jne
loope
or
mov
pop
fidiv
icebp
pop
imul
inc
mov
nop
dec
push
lods
test
aam
test
out
inc
sub
scas
xchg
jl
lea
cmp
shr
jg
enter
retf
add
jns
and
test
sub
mov
stos
inc
fbld
lods
pop
cdq
fldenv
and
pop
ror
ja
mov
ds
xor
test
xor
ins
or
aas
sar
mov
add
or
mov
mov
xchg
arpl
fcom
mov
mov
in
mov
lea
jecxz
pop
dec
or
mov
mov
mov
sub
fnstenv
push
gs
adc
dec
cmc
add
(bad)
fcmovnb
mov
ja
jb
lea
int3
fsubr
mov
dec
leave
sbb
gs
add
and
mov
sub
add
push
fstp
inc
adc
fidiv
ret
aam
pushf
popa
popf
sub
jae
shr
hlt
icebp
inc
sub
mov
pop
inc
daa
mov
addr16
sbb
sub
xchg
lods
dec
or
das
push
jmp
jg
jmp
loop
arpl
into
call
neg
icebp
sub
icebp
inc
mov
pop
add
ret
fldenv
js
pusha
loopne
sbb
ficomp
sbb
mov
xor
lea
and
je
test
cmp
sbb
push
pop
pop
sub
xor
fucom
rcr
(bad)
ins
cmp
out
sahf
ret
arpl
push
pop
mov
sub
push
and
and
cmp
aaa
inc
or
jo
outs
aaa
(bad)
loopne
loopne
rcl
cmp
rcr
jno
imul
mov
pop
out
scas
in
sbb
int
jnp
xor
fwait
push
(bad)
repnz
arpl
xchg
js
ficom
(bad)
xor
lock
imul
mov
imul
loopne
fstp
sub
out
push
fidivr
outs
jo
jmp
leave
imul
mov
or
xor
inc
lock
loopne
dec
add
fistp
retf
sti
jo
daa
fiadd
rcr
int
(bad)
mov
pop
add
mov
and
push
out
call
jmp
xor
inc
int3
leave
xchg
adc
imul
mov
inc
repz
sub
sub
sar
ja
jmp
ror
addr16
inc
push
ins
std
aas
mov
mov
js
(bad)
mov
push
add
pop
jg
cmp
dec
leave
enter
adc
sbb
or
push
cmc
arpl
push
mov
sbb
fmul
imul
sub
cdq
in
fwait
add
or
sub
enter
out
enter
rcl
dec
into
xchg
mov
mov
imul
xchg
movs
sbb
xchg
loop
sub
fwait
rcr
ror
movs
sbb
add
inc
mov
sub
push
dec
jmp
jb
cmp
push
stos
pop
or
add
add
arpl
dec
fisttp
push
(bad)
fld
shr
xchg
jmp
push
mov
fcom
test
pop
inc
jp
xlat
push
mov
cs
sub
dec
jg
lock
xlat
inc
mov
(bad)
mov
jmp
pop
nop
xchg
cmp
xchg
xchg
pop
sub
nop
icebp
cs
stos
mov
mov
ja
hlt
push
aam
enter
outs
fdiv
pop
pop
jmp
mov
je
call
ds
call
inc
jnp
xor
nop
dec
pop
mov
mov
aad
jne
sbb
pop
jno
(bad)
cwde
cdq
shr
push
icebp
sub
adc
or
pop
dec
or
dec
xchg
js
arpl
shl
jae
fsubp
jg
xlat
into
and
test
xor
sbb
inc
cmps
inc
into
and
sub
stos
inc
mov
pop
mov
push
cmp
fnstenv
es
gs
add
imul
fadd
(bad)
push
xchg
jns
out
lock
dec
sbb
sbb
fist
rcr
sbb
add
shl
aad
sbb
in
inc
jbe
jne
inc
enter
aas
mov
jecxz
outs
pop
jbe
mov
hlt
xchg
dec
cmp
add
loop
cld
into
pop
jmp
fsub
ss
mov
jae
cmp
js
jge
adc
(bad)
adc
outs
inc
call
imul
in
inc
ror
mov
je
xchg
sbb
inc
mov
outs
jmp
mul
out
hlt
jb
or
or
xchg
fild
ja
add
addr16
dec
out
jo
sub
cmp
sbb
pop
and
push
mov
pop
movs
or
fwait
dec
push
or
mov
push
xchg
pop
xor
das
push
cmp
push
xchg
jl
jmp
mov
sub
enter
cmp
cmps
rcl
sbb
xchg
or
mov
xchg
(bad)
sub
scas
cdq
ret
jge
dec
shl
adc
leave
inc
pusha
xchg
addr16
mov
rcr
push
fistp
test
addr16
xchg
pop
and
test
int3
icebp
xor
aas
shl
out
lods
ror
fld
jbe
dec
sbb
arpl
push
je
inc
jnp
mov
xor
xchg
sti
sbb
in
test
aam
dec
test
arpl
mov
test
ror
inc
loopne
ret
jge
inc
cwde
popf
rol
mov
mov
adc
lahf
xchg
ins
scas
lock
cmps
sub
mov
(bad)
jae
pop
sbb
cs
pop
movs
add
xchg
ins
pop
add
fmul
cmp
add
cmps
fsub
xor
in
neg
pop
xchg
add
fsub
mov
icebp
dec
test
adc
mov
pop
xchg
ficomp
push
cld
xor
sti
loope
adc
aaa
add
and
xchg
pop
pushf
xchg
call
xchg
cmp
pop
mov
fcom
mov
xor
mov
cld
push
daa
and
inc
call
dec
call
aad
adc
and
pop
push
dec
mov
cwde
jmp
mov
mov
test
(bad)
(bad)
mov
sahf
shr
jo
jo
(bad)
mov
inc
push
inc
mov
adc
cwde
hlt
sub
les
or
push
inc
ret
inc
mov
fcmovnb
push
stos
xor
xor
dec
cwde
inc
ss
dec
xchg
shl
leave
(bad)
ficom
xor
xchg
pop
hlt
or
adc
(bad)
jmp
jge
mov
push
jl
mov
imul
adc
not
adc
pop
sbb
lods
nop
fiadd
inc
imul
stos
sbb
cs
call
mov
cmp
loopne
fs
xlat
push
ins
lods
fcomp
rol
xchg
push
and
js
rcr
adc
mov
sub
adc
pop
daa
pop
rcl
pop
dec
adc
add
popf
daa
mov
mov
or
ja
xor
int
ror
xchg
das
add
xlat
xor
add
push
cmp
and
pushf
pop
add
repnz
int3
push
or
inc
mov
icebp
test
add
mov
(bad)
xchg
dec
mov
aaa
scas
es
inc
dec
sbb
into
and
daa
in
imul
mul
pop
xor
pop
iret
mov
inc
out
cli
int
mov
and
xchg
adc
in
ja
loopne
scas
push
pop
mov
rcr
mov
sbb
pop
jmpw
mov
outs
adc
jp
aad
jle
cli
sub
daa
cmps
mov
sti
retf
push
call
mov
add
sbb
push
xor
xor
pop
jmp
test
fst
inc
dec
std
jnp
clc
cs
cmp
inc
cmp
mov
mov
aad
inc
xor
dec
neg
push
or
pop
repnz
dec
inc
inc
outs
out
retf
sub
je
pop
stos
mov
fwait
jmp
jo
dec
xor
inc
fcmovu
push
and
mov
and
imul
pop
leave
pop
pop
sbb
ror
into
push
adc
sbb
mov
push
inc
pop
imul
cmp
pop
rol
aaa
stos
vmread
cmps
and
xchg
stos
mov
sahf
loopne
push
pop
inc
or
pop
enter
cmp
push
xchg
fidiv
loopne
in
and
test
fwait
xor
pushf
mov
ret
dec
sub
mov
xchg
mov
mov
cmc
dec
out
dec
repnz
sar
(bad)
cs
mov
mov
cmp
and
pop
jmp
sub
mov
jno
or
addr16
mov
fidivr
push
out
(bad)
cwde
jbe
xlat
stos
movs
rcl
mov
mul
aam
mov
or
mov
inc
pop
aaa
jo
jge
repz
jg
rol
mov
fisttp
mov
jno
adc
pop
mov
scas
pop
shl
(bad)
call
mov
mov
jge
sbb
cwde
out
hlt
sbb
xor
pop
bound
cwde
ins
enter
ret
out
cmps
add
sub
xchg
mov
lods
mov
jno
xchg
adc
mov
imul
pop
cli
mov
(bad)
mov
shl
pop
ret
cmps
std
loopne
jecxz
popf
movs
mov
les
pop
pop
ds
es
xchg
cmp
inc
in
idiv
sbb
adc
push
out
mov
ja
fidivr
loop
dec
pop
add
pop
(bad)
int
fld
or
sahf
stc
fst
push
lds
lea
or
sub
mov
ret
lahf
jbe
sar
push
les
(bad)
sahf
pop
cs
jae
aam
dec
fisttp
inc
fwait
shl
push
adc
mov
out
or
lods
pop
pop
push
cmp
mov
repnz
fs
hlt
push
add
mov
idiv
xor
sbb
pop
cmp
mov
lea
xchg
mov
or
jge
jge
jmp
xor
mov
mov
arpl
test
mov
pop
sub
aaa
xor
int3
sub
ins
cli
xchg
pop
dec
fwait
(bad)
sub
mov
mul
push
inc
or
aad
cld
mov
movs
mov
mov
ja
fwait
sbb
test
xor
(bad)
outs
push
and
mov
pop
sahf
movs
ror
inc
pop
sub
sbb
push
cmps
jo
arpl
dec
and
pop
sar
leave
clc
aas
xlat
sub
sub
jecxz
pop
not
cs
clc
dec
sahf
sbb
repnz
pop
inc
es
dec
xchg
bsr
xor
lahf
mov
or
stos
mov
mov
mov
in
ret
push
adc
fisub
sar
ins
test
sbb
xor
or
mov
sbb
loop
dec
adc
jnp
retf
ficomp
jmp
test
add
scas
xchg
push
cld
es
push
jnp
xchg
mov
pop
xchg
enter
cmp
sbb
ret
vsubps
mov
(bad)
push
outs
pop
je
xchg
mov
in
jle
or
in
lahf
pop
sub
mov
xchg
jmp
(bad)
(bad)
xchg
shl
scas
(bad)
sub
sbb
ins
add
loope
fwait
arpl
fwait
jp
inc
fwait
ins
popa
pop
or
movs
xlat
xchg
stos
push
(bad)
loop
setnp
sub
pushf
xchg
out
iret
cli
add
mov
dec
rcl
pop
lods
dec
cmp
ret
mov
mov
iret
sub
dec
arpl
dec
pop
idiv
and
inc
xchg
pusha
pop
jb
fcom
and
mov
xor
xchg
popa
and
inc
xchg
xchg
cmp
call
loope
out
adc
cmp
outs
sbb
push
stos
adc
std
sub
cmp
cwde
pushf
repz
aaa
(bad)
rcr
mov
rcl
mov
and
add
enter
mov
push
add
mov
jo
add
loop
xchg
shl
mov
aaa
ja
pop
test
pop
dec
rol
adc
and
int3
sbb
js
loope
loope
in
xchg
fcmove
pushf
push
out
(bad)
xor
sub
and
sub
mov
in
fsubr
adc
icebp
lea
pusha
mov
ja
and
mov
xchg
out
inc
jmp
push
fcmovbe
mov
push
retf
mov
fidivr
cs
call
(bad)
aas
add
xchg
or
std
mov
arpl
pop
outs
cmc
sahf
loop
xor
xor
push
xor
xchg
jecxz
dec
lea
xchg
lods
jae
call
sbb
adc
inc
sbb
mov
jge
xor
pop
jmp
rcr
inc
and
push
and
dec
dec
aad
xbegin
inc
ret
jb
aad
int3
add
or
dec
push
icebp
add
int
pop
mov
mov
push
jbe
sbb
sub
call
push
add
loopne
cdq
pop
out
pushf
int
sub
mov
sbb
push
push
mov
cmp
xchg
imul
push
jne
ficom
fcomp
dec
cmps
loopne
fisubr
aad
mov
lods
cmp
sbb
aam
(bad)
mov
jle
repz
fisub
fisubr
ins
mov
pop
dec
adc
retf
test
sbb
mov
or
cs
jmp
or
aaa
iret
xchg
fs
inc
mov
inc
add
ficomp
lock
bound
(bad)
mov
jl
xor
add
fidivr
jl
loop
adc
pop
sbb
lods
pop
test
sub
jae
sahf
scas
hlt
mov
stos
sbb
mov
jp
xbegin
sub
call
add
mov
or
xor
push
push
fld
cmps
idiv
mov
or
enter
test
and
sbb
or
jne
lea
and
les
mov
int3
pop
push
(bad)
sub
pop
cld
inc
loop
sar
jmp
pop
add
call
ror
xchg
mov
fwait
pop
push
inc
(bad)
pop
popf
repnz
ds
loopne
(bad)
int
not
push
push
dec
movs
les
(bad)
std
mov
adc
sbb
ins
jmp
and
mov
xor
stc
movs
inc
dec
(bad)
pop
mov
lds
xor
push
jnp
cmp
movs
pop
sub
mov
jge
dec
repz
test
xchg
mov
shl
jmp
and
cmps
shl
dec
(bad)
(bad)
sub
sbb
xor
lds
sbb
or
lahf
fcmovnbe
lock
popf
or
jp
mov
jge
mov
xchg
(bad)
ret
fild
aas
js
ds
mov
pop
mov
shr
adc
jne
adc
pop
push
sub
dec
mov
iret
test
xor
dec
mov
rcr
mov
cmovb
cmp
test
lds
add
fsubp
jo
jl
and
xchg
ja
fidiv
call
ins
cli
and
jge
mov
fcmovb
lods
cmp
mov
ds
std
pop
cmp
xchg
fwait
pop
mov
loope
imul
and
fsub
xchg
or
lock
add
adc
mov
push
jle
cld
dec
pushf
les
mov
mov
shl
pop
dec
cmc
mov
mov
push
cld
lahf
inc
stos
test
cli
out
fnstcw
pop
aaa
mov
pop
scas
adc
jg
mov
inc
cmp
call
aam
push
out
inc
jmp
test
or
and
xor
mov
icebp
sbb
sbb
cs
sub
inc
xor
imul
sbb
aam
xchg
rcr
sbb
out
scas
iret
xchg
fisubr
jecxz
fcom
es
addr16
icebp
mov
mov
sub
enter
xor
mov
test
adc
out
mov
push
mov
push
push
xchg
mov
pop
mov
or
pop
int
pop
jle
dec
sbb
mov
pushf
lea
cmp
retf
shl
pop
jno
out
pushf
imul
fist
(bad)
inc
mov
add
adc
xchg
push
movs
cmp
pusha
mov
neg
cmps
pop
inc
push
loop
rcr
jmp
cmp
mov
push
inc
add
cmps
adc
dec
es
dec
adc
mov
(bad)
int
out
lods
in
cs
cmp
inc
(bad)
cmc
inc
mov
pushf
or
cmp
xchg
call
out
sub
fidivr
(bad)
cmp
dec
(bad)
xor
stos
stc
xor
add
test
inc
push
and
gs
jg
pop
out
les
push
dec
sub
rol
xchg
out
cmp
jle
scas
xchg
jecxz
movs
push
dec
imul
cmps
shr
jbe
mov
jg
inc
out
not
ret
stos
push
sub
xor
dec
push
jg
sub
sub
push
adc
cmps
jmp
je
in
retf
mov
sbb
imul
adc
and
loopne
push
pop
popf
jne
fmul
cdq
test
(bad)
in
cdq
cmp
int
cwde
and
jne
and
mov
adc
push
inc
inc
push
adc
xor
(bad)
or
aad
stc
jnp
xchg
out
push
pushf
loop
push
dec
(bad)
test
out
lods
xor
test
dec
popf
dec
push
dec
nop
sbb
iret
sub
mov
popf
enter
pop
mov
mov
cmp
mov
mov
inc
add
pusha
int3
push
(bad)
mov
aam
stc
push
and
push
scas
cwde
jmp
js
in
scas
inc
sub
test
inc
or
mov
dec
mov
mov
aam
push
fmul
fndisi(8087
loop
clc
lahf
(bad)
into
dec
and
(bad)
sub
jp
xchg
inc
add
ins
lea
mov
iret
pop
iret
ret
fldcw
or
(bad)
sar
mov
lea
pop
mov
(bad)
jb
fwait
xor
sub
fwait
in
push
mov
sbb
add
into
jns
rcr
(bad)
lock
inc
jg
dec
mov
inc
(bad)
test
sahf
imul
aaa
sbb
pop
pop
stos
xor
cmp
fld
fdivp
jge
ins
dec
cwde
repnz
call
into
pop
pop
cmps
push
fwait
pop
cld
mov
push
ds
add
push
sbb
fwait
cdq
and
dec
outs
out
test
inc
push
aam
nop
addr16
mov
out
cs
cmps
fst
loopne
mov
or
imul
cmps
shl
jb
nop
cmp
(bad)
outs
ss
mov
mov
add
xor
shl
lds
adc
adc
add
push
out
add
mov
dec
stc
push
mov
in
stos
call
jmp
jnp
out
xlat
cdq
push
clc
iret
inc
aam
popa
xor
(bad)
scas
sub
xor
shl
sti
adc
sbb
and
fidiv
ds
iret
jge
daa
pop
loopne
or
push
into
fldcw
inc
ror
xor
cmp
imul
repz
and
ins
iret
sbb
mov
push
pop
addr16
outs
mov
and
jp
call
dec
pop
xchg
cmp
adc
push
aaa
fnstenv
shl
add
jmp
outs
add
pop
pop
loop
ret
cmp
sar
mov
mov
pop
mov
dec
add
pop
mov
les
jge
(bad)
daa
adc
pop
jnp
mov
dec
loopne
or
aam
cwde
ret
loopne
test
xor
ins
into
retf
xchg
sub
jo
cmp
push
js
jl
dec
das
in
xchg
pop
xchg
fld
cdq
in
jb
mov
rcr
add
(bad)
sub
popf
push
addr16
jnp
cmc
clc
test
pop
mov
push
dec
sub
stc
leave
jae
in
dec
lds
pop
ds
out
in
sbb
dec
push
xlat
shl
(bad)
xor
test
add
clc
pop
mov
(bad)
(bad)
fcomp
dec
adc
xchg
mov
push
out
sub
fstp
xlat
mov
hlt
lahf
pop
or
cld
shr
(bad)
call
mov
jae
ret
sahf
in
mov
cli
add
fidivr
jmp
dec
sysexit
shr
jge
mov
push
mov
sbb
cs
dec
ins
xchg
sub
call
add
mov
aas
dec
scas
adc
gs
dec
in
sub
mov
scas
inc
dec
adc
push
push
or
sub
loopne
inc
mov
pop
mov
sub
cmp
inc
xchg
outs
int3
fidivr
lea
xor
das
out
jl
sub
mov
sbb
inc
test
pop
stos
loope
add
add
xchg
std
jb
jbe
sahf
ret
xchg
or
(bad)
mov
mov
shl
dec
inc
fnstenv
jecxz
popa
dec
popa
and
ds
popf
dec
jmp
enter
popa
pop
add
lods
nop
hlt
cmc
jno
rcl
mov
rcr
xchg
in
scas
inc
(bad)
cmp
inc
xchg
pop
cdq
pop
push
xor
ror
mov
sbb
xchg
pop
in
dec
cmp
fbstp
(bad)
pop
xchg
jbe
xchg
jae
stos
or
je
addr16
or
scas
push
cli
dec
jecxz
adc
pop
imul
and
pop
stos
cmps
aam
and
(bad)
mov
rcr
pop
call
test
lahf
push
mov
mov
outs
fldcw
mov
pop
dec
ds
mov
mov
jle
dec
ror
int3
fs
int3
push
dec
xchg
or
push
aaa
cmp
out
cs
retf
adc
ret
das
or
pop
sbb
push
(bad)
and
aad
addr16
cwde
mov
add
sbb
dec
mov
pop
loop
fdiv
in
mov
push
aaa
cs
or
mov
imul
xchg
ins
sub
fisttp
nop
test
jle
fcomp
mov
(bad)
cmps
stos
push
imul
xchg
xchg
aam
not
mov
mov
cmp
gs
shl
dec
inc
test
stos
ins
pop
cmp
ja
push
pop
sbb
or
mov
inc
test
mov
in
dec
mov
add
inc
mov
sub
pop
push
cvttps2pi
imul
sub
sahf
mov
cmp
xchg
sbb
(bad)
aam
mov
(bad)
dec
or
popf
lock
jno
push
sbb
mov
lock
inc
xchg
ins
and
int
jl
mov
imul
and
jno
pop
add
popa
mov
adc
rcl
add
arpl
retf
and
xchg
cmc
js
adc
lahf
arpl
out
xchg
and
jmp
mov
js
mov
dec
bswap
cmp
jp
xor
fimul
xchg
pop
sub
mul
pop
mov
enter
or
push
stc
stos
in
std
and
jmp
mov
ins
jnp
scas
addr16
shl
sub
fst
dec
mov
and
dec
or
add
sub
ins
(bad)
and
jp
mov
xlat
loopne
out
mov
ds
jl
out
push
addr16
outs
push
and
stos
loop
setae
jp
je
inc
mov
inc
fist
out
mov
push
int3
jg
pop
ja
adc
add
pushf
rcr
mov
xor
cmp
pop
sub
fidivr
lahf
out
mov
std
rol
fs
push
loop
in
lahf
dec
dec
fsubr
mul
call
cdq
cld
test
dec
loop
hlt
mov
sbb
or
jmp
pushf
jg
icebp
add
push
and
push
in
add
mov
sub
(bad)
push
fmul
cmp
add
push
call
push
or
sti
jl
call
jecxz
mov
inc
fs
jb
mov
xchg
mov
push
mov
mov
dec
mov
test
dec
jne
jge
rcl
push
sub
adc
ror
aaa
mov
xchg
stc
push
sbb
jbe
mov
pusha
je
leave
test
loopne
clc
pop
cdq
cmp
fs
or
and
ja
lahf
add
mov
xchg
pop
aaa
cmp
xchg
mov
fisubr
into
cmps
dec
ret
xchg
mov
add
shl
data16
or
jnp
add
(bad)
repz
aas
inc
scas
cmp
ins
sub
outs
test
stos
ds
xlat
jmp
inc
sbb
mul
call
neg
(bad)
mov
not
push
nop
iret
mov
sti
out
push
popa
inc
out
movs
xor
jle
jecxz
mov
scas
pop
pop
add
std
mov
xchg
sbb
add
repz
xor
cmp
out
adc
cmc
cmp
cs
adc
iret
enter
pop
(bad)
(bad)
sbb
pop
sbb
loop
imul
popf
sub
jge
loope
pop
aas
add
stc
out
jb
pop
scas
and
test
sub
pop
cmp
xchg
fild
(bad)
inc
lds
mov
mov
addr16
mov
sbb
sbb
lods
cmps
mov
pop
scas
mov
inc
loop
xlat
push
dec
xlat
prefetch
lea
and
cmp
ins
clc
test
(bad)
(bad)
retf
pop
fstp
sar
ds
xchg
ins
sbb
xchg
out
jmp
imul
pop
or
and
jmp
xlat
rol
movs
adc
mov
fbld
ror
cmc
les
add
mov
mov
push
mov
sub
dec
not
xchg
sbb
cmp
sahf
(bad)
xlat
jae
in
add
xchg
sbb
ds
sbb
inc
clc
mov
add
push
dec
mov
rcr
fimul
fmul
mov
repz
sar
icebp
cli
out
ins
xor
pop
mov
push
retf
dec
jmp
call
pop
and
dec
pop
or
adc
lock
pop
sti
(bad)
arpl
mov
fst
test
ds
(bad)
fsubr
jno
adc
(bad)
pop
mov
xlat
int3
test
(bad)
int
lods
pop
loop
pop
daa
cmp
sub
(bad)
addr16
pop
pop
addr16
mov
pop
dec
and
dec
inc
sub
ins
test
pop
fucom
inc
pop
push
(bad)
push
inc
add
pop
daa
std
cmps
clc
ret
out
iret
jp
push
jnp
or
pop
aam
fist
sub
test
sahf
mov
pop
pusha
jp
sub
test
mov
(bad)
outs
pop
pop
cmp
inc
or
int3
dec
adc
jmp
mov
cmps
idiv
sbb
scas
repnz
movs
inc
jl
test
mov
sub
pop
cmps
sbb
push
ins
fadd
lea
inc
test
(bad)
push
jno
aaa
pop
cmps
xchg
sbb
loopne
ret
stc
push
pop
fdiv
dec
xor
imul
arpl
fneni(8087
dec
retf
xor
inc
mov
xlat
cmp
add
jle
pushf
adc
or
push
xchg
pop
mov
das
xchg
cmps
xchg
leave
ins
sub
ja
retf
out
jge
and
int3
shl
mov
stos
cmc
push
rcr
pop
jb
inc
fucom
push
hlt
retf
ja
aaa
dec
dec
add
test
or
idiv
jmp
fmul
popf
push
adc
push
inc
ficom
jae
mov
enter
mov
mov
cmp
test
into
(bad)
pop
push
xor
cmp
jmp
mov
pushf
in
push
cmps
xor
jno
jle
xchg
or
sub
popf
cmc
daa
mov
xchg
mov
imul
pop
pop
push
xor
pop
mov
cmp
int3
mov
pop
sub
mov
inc
(bad)
fst
sbb
dec
loop
sub
ja
shl
cld
ins
test
sbb
mov
lods
inc
jg
test
add
fistp
sub
fcmovbe
scas
jge
std
dec
retf
out
dec
jecxz
inc
addr16
sbb
inc
cld
sub
pop
sbb
repz
inc
sub
leave
push
inc
jecxz
fisub
fs
pop
sub
lock
mov
push
sbb
mov
and
and
jae
fsubr
sbb
add
jge
test
in
inc
jg
dec
inc
les
fidiv
mov
ffreep
xor
fs
repz
cmp
repz
mov
not
jnp
loopne
lods
loope
lds
mov
sahf
dec
jb
mov
jmp
cmps
or
loop
fiadd
scas
ins
mov
pusha
pop
mov
mov
(bad)
ficom
(bad)
dec
mov
adc
cwde
out
mov
test
rcr
jge
xor
xchg
dec
xchg
call
rcl
pushf
sub
(bad)
loope
pop
add
mov
dec
xchg
call
inc
movs
inc
ficomp
jne
add
xor
inc
rcl
mov
inc
js
jns
addr16
pop
mov
lods
popf
cmc
clc
fcom
icebp
mov
pop
pop
sahf
daa
popf
test
dec
test
mov
dec
arpl
inc
xchg
push
(bad)
rcl
sbb
cdq
jne
sbb
sbb
or
popf
sub
mov
mov
push
std
xlat
not
push
adc
icebp
popa
hlt
xlat
inc
push
mov
xor
mov
push
jo
pop
push
sti
in
mov
push
scas
sbb
cli
ins
sub
frstor
add
int3
push
enter
rol
jo
mov
jp
add
xchg
and
add
je
adc
stos
and
mov
cld
in
push
daa
xor
lahf
sahf
cli
outs
nop
ja
mov
sbb
test
xchg
pop
push
and
lods
(bad)
imul
ret
sub
js
(bad)
push
and
fwait
lds
dec
and
jmp
fcomp
imul
cli
lahf
xchg
mov
adc
cmp
gs
lods
xchg
pop
xor
xor
daa
arpl
dec
(bad)
ret
xchg
sbb
inc
test
sbb
sahf
cld
pop
mov
out
sub
xchg
imul
jmp
sbb
adc
pop
int
jg
push
xchg
test
stc
mov
call
mov
mov
adc
mov
xchg
pop
scas
(bad)
fxch
lea
push
sbb
add
and
(bad)
aam
push
call
mov
loop
and
or
inc
sbb
push
pop
pop
mov
cs
mov
add
jo
outs
dec
(bad)
sub
dec
push
ja
test
push
ret
cmc
mov
in
or
ins
out
(bad)
cmp
and
xchg
cld
push
ret
jmp
sub
ret
clc
pushf
dec
arpl
ficomp
hlt
xor
pop
add
int3
rol
dec
cmp
fcom
popa
aaa
fld
shl
fstp
inc
add
dec
inc
iret
in
sahf
xchg
jns
xor
stos
loop
in
popa
push
fild
shl
dec
cmp
arpl
rol
movs
aas
jae
jmp
cmc
clc
imul
mov
std
call
je
repnz
mov
fisttp
cmp
rcr
sahf
scas
inc
in
or
hlt
pop
stos
fstp
jbe
sub
adc
das
xor
xlat
(bad)
cmp
or
fwait
mov
rol
pop
mov
xchg
call
xchg
loope
mov
xchg
imul
dec
inc
or
xlat
bound
xor
xor
stc
mov
sub
push
add
nop
cmp
jae
test
sbb
sub
in
int
push
mov
cs
int3
and
jnp
jge
shl
inc
mov
aaa
cmps
adc
push
(bad)
loop
mov
lds
pop
es
ds
iret
sahf
in
mov
inc
fmul
fwait
lods
push
sub
sub
mov
add
dec
popa
push
add
add
cmp
(bad)
pushf
sbb
les
jmp
or
add
jle
mov
jecxz
push
pop
dec
fisub
out
push
cmp
or
leave
xchg
test
pop
cld
neg
sub
pop
(bad)
and
adc
shl
pop
xchg
data16
int
data16
push
dec
pop
(bad)
lea
addr16
sub
mov
push
lock
imul
inc
loope
mov
add
jae
sub
push
push
ins
xlat
andps
mov
bound
xchg
xor
and
in
push
xor
sub
in
out
inc
(bad)
int
xchg
xlat
push
jnp
pushf
lea
sbb
jmp
cmps
sti
sub
or
dec
imul
iret
mov
push
(bad)
fmul
lahf
stos
push
pop
cdq
cld
pop
in
mov
xor
in
push
xchg
pop
dec
stos
icebp
test
mov
cld
retf
repnz
lea
or
add
inc
lods
mov
dec
cdq
ret
imul
pushf
sub
fmul
cld
aaa
cmp
jne
hlt
adc
sub
in
fiadd
or
mov
repz
cmp
jge
pushf
mul
arpl
xchg
mov
xchg
aam
xor
mov
mov
jo
sub
dec
lods
cld
das
in
mov
push
mov
jmp
enter
push
movs
sub
adc
imul
mov
fcmovnb
push
push
lea
add
pop
xchg
pop
std
scas
cmp
fcomp
shl
jge
ffreep
rol
stos
push
and
imul
movs
sub
into
aad
pusha
jnp
jno
mov
cmc
(bad)
jp
jge
add
pop
and
add
(bad)
arpl
mov
xchg
(bad)
jg
arpl
es
mov
jne
add
dec
jae
sbb
and
clc
jbe
aam
mov
mov
mov
arpl
dec
es
or
in
sub
hlt
lds
xchg
dec
fisub
xchg
cld
sub
rcr
pushf
sti
push
arpl
add
push
cld
dec
mov
xchg
push
dec
cdq
mov
or
or
int3
scas
cmps
mov
cld
test
cwde
push
adc
push
dec
mov
mov
pop
cs
lock
sub
mov
in
or
ja
jnp
mov
(bad)
push
fbstp
sbb
jecxz
out
cwd
mov
or
add
cs
pop
jno
dec
and
adc
sub
in
sbb
lods
cmp
xchg
movs
test
xchg
int3
dec
sub
jno
inc
mov
push
sbb
test
lods
rcr
or
fbstp
fidivr
das
ins
push
xor
mov
xchg
sub
xchg
inc
push
cld
jnp
adc
and
in
fadd
xchg
mov
inc
add
cmp
jl
loopne
aam
je
and
xchg
stos
fisttp
inc
xlat
fcomp
add
jne
movs
ret
mov
cld
and
inc
push
sub
hlt
push
jb
adc
cdq
popa
inc
xchg
and
push
push
ins
cmp
shr
cmp
mov
std
retf
popf
lods
fsub
jbe
or
nop
dec
mov
cli
sub
(bad)
ds
rol
or
push
ficom
sbb
xor
cwde
dec
or
dec
pop
sub
pop
dec
into
aad
fcom
int3
jne
aad
aas
fisttp
mov
mov
pushf
jge
fcom
xchg
lock
cdq
pop
cli
addr16
inc
mov
dec
jmp
push
dec
jl
sub
and
sbb
test
stos
fwait
push
pushf
push
mov
push
xchg
adc
add
jo
(bad)
es
jno
in
sub
loope
imul
mov
adc
sbb
pop
jno
shr
aad
pop
mov
(bad)
mov
aas
in
in
icebp
dec
pop
aaa
push
adc
mov
ds
icebp
mov
cs
sub
xlat
fist
retf
xchg
adc
cwde
jmp
fisub
inc
imul
not
loope
(bad)
repz
mov
loopne
sub
shl
xchg
(bad)
push
mov
cmc
mov
sahf
adc
sar
lods
lock
and
jecxz
jnp
out
mov
lds
mov
sub
pop
sbb
or
push
cld
(bad)
cs
push
push
mov
sar
pushf
push
ret
cmp
sub
add
mov
cmp
outs
ins
(bad)
dec
test
mov
fcomp
add
lea
pop
(bad)
sahf
pop
(bad)
shl
js
xchg
push
jae
sbb
pop
adc
push
sbb
movs
mov
iret
adc
and
lods
fisttp
dec
or
add
inc
mov
daa
xor
rcr
add
dec
mov
imul
stos
popf
or
pusha
mov
das
fcomp
(bad)
popf
je
xchg
std
dec
aas
lods
add
iret
sub
xor
(bad)
out
sahf
in
shl
mov
mov
pop
xor
dec
sbb
adc
xor
movs
rcr
xchg
dec
(bad)
add
xlat
push
mov
adc
movs
stc
into
and
pusha
dec
pop
jmp
xor
dec
add
push
ins
call
rol
inc
test
lea
xchg
add
fstp
pop
popa
out
icebp
dec
push
cwde
cwde
sub
ret
cs
push
cmp
push
les
fldcw
mov
(bad)
pop
mov
add
daa
mov
in
mov
(bad)
mov
pop
add
pop
mov
pop
sub
mov
sbb
loope
das
repz
mov
inc
mov
lahf
cmp
lds
mov
dec
and
rcr
push
or
out
aas
and
dec
xor
int
daa
retf
fucomip
fld
int3
cdq
dec
mov
gs
ret
pop
or
sub
arpl
ins
inc
jnp
xchg
and
or
icebp
aam
out
retf
gs
ins
or
gs
jne
std
mov
cld
mov
add
jbe
jmp
aaa
inc
rcr
dec
cli
add
inc
mov
sbb
pop
inc
mov
sbb
shl
xor
sub
sub
(bad)
adc
dec
outs
not
les
mov
cmp
sub
inc
aaa
pop
div
repz
retf
add
sbb
pop
fisub
mov
mov
mov
sbb
pop
inc
clc
ret
lea
or
dec
xor
mov
retf
rcr
cmp
sub
sub
inc
inc
pop
aad
cld
movnti
ds
mov
push
into
jmp
test
ret
in
(bad)
push
mov
adc
add
mov
movs
or
push
fwait
not
mov
mov
xchg
push
bound
cs
ret
xor
hlt
ret
adc
fmul
movs
pop
mov
je
dec
and
test
aam
dec
xor
cs
jno
dec
cmp
mov
aaa
hlt
mov
test
mov
push
xchg
and
dec
inc
sbb
lahf
or
adc
xchg
aas
xchg
rcr
jle
cmc
pop
add
push
cmp
xchg
mov
cmps
int3
and
mov
xlat
jp
stos
inc
push
sub
cld
mov
mov
pushf
in
mov
out
fwait
and
mov
scas
and
test
call
lods
test
pop
shl
push
std
pop
fbld
fnstenv
add
ror
gs
sub
pop
sbb
stos
mov
test
call
inc
cmp
jmp
jo
sub
jae
or
push
fst
test
stos
push
pop
mov
std
inc
popf
je
pop
aam
sar
push
push
jle
mov
pop
mov
xor
adc
stos
jmp
adc
inc
push
dec
sbb
jge
xchg
daa
(bad)
and
jg
(bad)
lock
repz
(bad)
fdiv
mov
sbb
add
add
int
fidiv
inc
push
add
sub
jp
push
cmps
xchg
les
cmps
fmul
adc
jecxz
jl
cs
into
dec
jnp
mov
mov
and
(bad)
jmp
jo
sub
into
or
cvtps2pd
std
adc
dec
cdq
pop
out
dec
add
sub
fimul
cld
repz
inc
inc
push
dec
hlt
fidiv
ss
jmp
iret
sbb
clc
hlt
arpl
mov
dec
dec
dec
sbb
jns
call
pushf
in
jns
mov
call
cdq
mov
movnti
pop
cld
arpl
xor
push
and
aas
mov
pushf
sbb
loopne
pop
in
jb
inc
loope
lock
fwait
push
sahf
inc
div
adc
test
ret
xchg
xchg
scas
sub
cdq
shl
in
or
sub
xchg
pop
push
mov
or
fdiv
and
sub
pushf
mov
fdivr
cmp
cmp
push
sahf
shl
mul
jecxz
cmps
ror
dec
add
push
and
or
(bad)
shl
scas
pop
or
std
cmps
lock
mov
mulps
mov
out
mov
retf
adc
sub
mul
aam
pop
and
lods
jae
(bad)
je
dec
fild
std
jg
mov
aaa
pop
fnsave
mul
add
cmp
lds
icebp
jns
mov
mov
lahf
fadd
cli
sub
mov
(bad)
shl
into
dec
(bad)
hlt
fiadd
jmp
stos
xlat
jl
xor
mov
jns
pop
xchg
sbb
rcl
inc
xor
outs
pop
jno
int
loop
scas
or
xchg
fisub
xchg
jno
fimul
in
cld
imul
xor
xchg
daa
and
pop
add
mov
sub
jle
inc
dec
je
shl
test
pop
ret
gs
stos
cmp
popf
xor
fneni(8087
jae
int3
aad
stc
add
mov
scas
add
jp
inc
push
inc
pop
mov
and
push
adc
pop
pop
inc
js
icebp
xor
rcr
dec
ins
test
std
in
rcl
fld
sbb
mov
push
dec
mov
movs
pop
and
ds
inc
clc
sub
addr16
xor
adc
jmp
rol
loope
fidivr
imul
fisttp
stc
scas
hlt
fs
shl
mov
js
push
test
stos
dec
pop
inc
sub
inc
les
jp
or
xor
sub
dec
out
jae
les
fstp
shl
(bad)
mov
adc
xchg
add
sbb
fmul
push
cmp
icebp
xchg
and
cmp
sti
add
fidiv
dec
add
mov
xor
movs
jmp
ins
(bad)
and
jno
dec
add
leave
je
retf
mov
ficomp
sbb
push
outs
pop
add
or
leave
mov
sbb
cmp
mov
jmp
mov
cmps
fisub
(bad)
in
(bad)
xchg
in
pusha
addr16
pop
push
or
aad
jns
scas
ror
les
pusha
lahf
gs
push
imul
dec
jp
shl
push
pop
and
mov
stos
push
fsub
xor
int
inc
cmps
stos
(bad)
sahf
sbb
cmps
dec
cmps
dec
inc
dec
popa
xlat
inc
daa
xchg
add
movs
mov
pop
lods
(bad)
ins
(bad)
mov
dec
xor
(bad)
sub
adc
jb
sbb
cwde
call
dec
adc
push
ret
xlat
aad
add
mov
push
dec
jo
xchg
call
jp
and
out
push
xor
mov
cmps
cmp
cmp
jle
fcomi
sbb
sub
pop
pusha
enter
xchg
push
mov
movs
loopne
in
std
in
xor
or
les
mov
(bad)
and
(bad)
mov
call
mov
mov
sar
scas
mov
fst
pop
or
mov
mov
fnstsw
sbb
cmps
cmps
loope
or
cs
or
(bad)
in
mov
fwait
and
fdiv
mov
(bad)
xchg
sbb
dec
jnp
(bad)
pop
dec
mov
xchg
cs
rcr
push
stc
inc
ss
imul
out
lea
adc
retf
xor
or
test
cld
push
repnz
sbb
cmc
mov
or
lds
pop
mov
into
loope
rcr
jbe
pop
cli
(bad)
add
test
jle
(bad)
xchg
jmp
into
mov
aam
or
stc
in
add
sbb
adc
ins
shr
sahf
pop
push
ins
or
iret
movs
dec
je
cs
mov
cwde
cmc
mov
mov
pop
shl
pop
inc
ins
ins
loop
push
fistp
dec
(bad)
mov
aam
or
pop
mov
sbb
pop
pushf
jae
lahf
and
test
dec
xlat
jmp
pop
inc
pop
mov
bts
jp
jb
call
bound
sbb
lods
movq
xchg
addr16
sub
pop
clc
(bad)
jne
jmp
cmp
push
out
mov
add
push
adc
test
push
push
dec
ins
outs
cmp
bound
js
xor
shl
repz
int3
pop
(bad)
add
xchg
adc
push
cmp
mov
daa
push
sub
cmp
sbb
mov
or
push
xor
mov
dec
cs
int
mov
repnz
outs
inc
jmp
ins
pop
mov
fstp
rol
cmp
push
aad
arpl
mov
jg
push
je
or
mov
cmp
xchg
xchg
push
jge
(bad)
movs
inc
add
and
sbb
out
imul
mov
es
xor
(bad)
mov
pop
iret
lods
and
mov
cmp
outs
dec
dec
pushf
(bad)
lock
pushf
add
adc
xchg
stos
es
mov
stc
xor
retf
scas
ficom
fsubr
add
(bad)
jne
out
lock
push
ss
addr16
loop
sbb
xchg
stos
jle
pop
mul
ds
xchg
sbb
push
mov
arpl
js
dec
loopne
mov
pop
xchg
lods
fiadd
cmp
loop
ror
aas
(bad)
xlat
ss
imul
mov
cmp
nop
pop
addr16
dec
add
mov
stos
leave
out
int3
mov
shl
pop
xchg
sbb
jle
jmp
jo
jge
test
in
mov
and
inc
gs
es
call
popf
xor
mov
sub
inc
adc
rol
xchg
push
sar
push
push
pop
in
(bad)
mov
mov
enter
mov
jno
push
adc
(bad)
fadd
into
out
pop
dec
xor
outs
sti
xchg
adc
or
adc
and
push
retf
pusha
pop
(bad)
mov
lock
(bad)
loope
ins
call
dec
add
sbb
out
sub
rcpps
fistp
or
ret
fwait
pop
call
sbb
inc
and
or
sbb
or
sbb
fisubr
aam
or
loopne
or
fsubr
mov
push
sbb
mov
jmp
jns
(bad)
out
ror
outs
mov
adc
xor
add
or
inc
xor
neg
xchg
and
enter
pushf
ds
pop
dec
sar
add
adc
or
adc
das
pop
mov
cmp
sub
mov
lahf
stc
cmp
out
sub
pop
adc
pop
or
mov
mov
inc
push
fs
rcr
xor
xchg
cmp
inc
or
xlat
sbb
stos
xor
fadd
jnp
cmp
mov
mov
push
xchg
aaa
xchg
xor
mov
cli
push
(bad)
xchg
xchg
int
mov
jno
and
es
rcr
pop
jmp
jno
test
(bad)
(bad)
adc
imul
imul
push
sub
jl
push
dec
pop
pop
mov
sbb
cld
or
add
cdq
jo
or
xchg
dec
mov
xor
mov
xchg
call
sbb
push
bound
jnp
in
mov
mov
xor
fstp
pop
sti
push
shr
push
jmp
sub
call
les
jb
or
cs
dec
ins
pop
and
jmp
pop
cmps
jnp
adc
mov
test
jg
lds
pusha
inc
ret
xchg
adc
aas
stos
jno
call
int3
push
fimul
lock
mov
lahf
outs
sbb
ret
js
(bad)
aaa
jbe
lods
jmp
jo
arpl
stos
push
push
sub
and
cs
imul
pop
dec
adc
xor
movs
cmp
sbb
and
out
call
inc
fisttp
jb
std
cmp
cld
pop
call
xor
rcl
pop
add
push
pop
adc
pop
les
inc
xor
lods
(bad)
mov
int3
shl
cld
gs
pushf
mov
inc
lea
loopne
jmp
js
dec
dec
clc
mov
jno
imul
dec
frstor
mov
dec
xchg
dec
mov
sqrtps
mov
imul
push
pop
daa
add
xchg
xlat
or
leave
fnstcw
gs
jmp
add
cdq
cld
fild
cmp
push
ins
mov
jnp
add
ds
mov
mov
mov
call
ficom
sar
pop
dec
cdq
pushw
mov
inc
cld
iret
xchg
xchg
stos
sub
push
xor
std
(bad)
pushf
mov
outs
into
retf
push
push
int3
fadd
lea
ret
sbb
inc
sti
xchg
and
ins
sub
je
sbb
sbb
dec
xor
xchg
cmp
push
push
outs
rcl
and
gs
imul
sub
out
push
dec
sbb
push
jae
cmp
ja
dec
adc
and
popf
pop
dec
aaa
inc
popf
es
nop
add
add
repnz
les
cmps
arpl
jmp
push
and
mov
mov
push
mov
sbb
push
ror
ss
enter
fcom
cmp
push
pop
rcr
cs
cmp
fisttp
pop
mov
lock
loopne
mov
pop
mov
lds
outs
adc
hlt
pop
mov
inc
dec
xor
mov
lea
in
retf
outs
pop
xlat
push
popf
or
pop
jmp
jmp
cmp
push
stc
adc
xchg
pop
fwait
aad
inc
dec
jmp
mov
out
jmp
mov
sbb
adc
sbb
pop
mov
dec
jg
in
sti
(bad)
xchg
imul
push
xor
(bad)
sar
xchg
xchg
mov
adc
sbb
idiv
xchg
xor
sub
fnstcw
add
sub
push
mov
pop
rol
int3
xchg
arpl
neg
loop
dec
inc
icebp
pop
sti
(bad)
push
xchg
rcl
jmp
inc
mov
sbb
inc
shl
les
fld
mov
mov
xchg
jmp
adc
jecxz
es
pop
inc
iret
pushf
dec
lock
pusha
add
xor
lds
jmp
shr
or
jo
or
cdq
sbb
mov
aaa
fiadd
jnp
popa
int3
xlat
mov
daa
dec
scas
pop
fsub
inc
push
cwde
mov
(bad)
mov
aam
pop
stos
mov
dec
add
push
cld
ret
retf
sbb
call
jle
jnp
out
adc
popf
xchg
dec
mov
dec
and
mov
add
adc
rol
scas
xor
loop
and
adc
inc
mov
scas
int
fwait
(bad)
mov
mov
aad
mov
cs
(bad)
lods
jge
pushf
dec
and
add
jmp
mov
pusha
jns
jl
nop
sahf
pushf
xchg
dec
jp
popf
xchg
sub
mov
aam
call
dec
add
sbb
ins
fstp
imul
mov
inc
(bad)
adc
inc
xchg
ror
push
jnp
repz
inc
test
pushf
jle
in
dec
sbb
add
mov
cmp
test
(bad)
sbb
or
pop
mov
std
mov
int3
cdq
push
fld
scas
enter
scas
and
mov
test
(bad)
(bad)
fisubr
or
cmps
loopne
xlat
mov
pusha
adc
add
mov
loopne
add
xchg
repz
pop
into
out
push
or
dec
mov
pop
jl
jge
inc
inc
jbe
cmps
mov
(bad)
(bad)
out
(bad)
jg
jge
stos
add
add
pop
cmp
jmp
add
repnz
fsub
aad
aad
int3
xchg
and
out
rcr
lock
aam
div
push
mov
stos
pop
pusha
jmp
inc
xor
sbb
inc
nop
jmp
popa
push
stc
sbb
dec
push
sbb
nop
call
pop
or
inc
sahf
loop
dec
mov
inc
out
dec
push
in
cmps
dec
cdq
pop
mov
(bad)
hlt
mov
fimul
push
and
push
or
fldcw
mov
mov
add
add
cld
repnz
repz
jmp
nop
mov
fst
mov
retf
push
mov
call
imul
inc
test
(bad)
or
and
iret
int
push
mov
jle
aad
pop
movs
cld
jp
add
cmps
ret
add
sub
jne
sti
je
xor
mov
clc
not
mov
in
popa
inc
sub
addr16
adc
mov
sbb
push
jg
(bad)
adc
cdq
out
enter
push
mov
sbb
mov
popf
and
mov
cli
sub
cs
fld1
and
mov
mov
cwde
pop
cwde
pushf
out
in
add
jo
xchg
sub
push
imul
out
pop
lds
hlt
sbb
ja
nop
xlat
cld
mov
mov
out
or
in
call
imul
or
bound
pop
cli
mov
mov
pop
stos
loop
sub
test
cmp
std
loope
or
popaw
mov
int
push
mov
push
push
sbb
inc
xchg
popw
imul
lea
shl
and
pop
retf
push
or
xor
rol
(bad)
mov
add
lock
dec
out
and
out
pop
mov
inc
pop
fisubr
mov
jmp
out
and
js
cwde
cmps
adc
sbb
and
rcl
and
mov
cwde
je
pushf
ja
hlt
rcr
pop
mov
mul
xchg
shl
mov
fldcw
and
add
call
sbb
outs
dec
out
mov
xor
push
pop
pop
cmp
scas
pop
sbb
dec
sbb
es
adc
fistp
rcr
stc
inc
fidiv
jmp
xchg
xchg
adc
sub
cmc
jns
(bad)
push
aam
pop
loopne
cmc
data16
adc
cld
in
ins
loop
xchg
lods
icebp
mov
push
add
movs
pop
sbb
inc
pop
ins
and
pop
sti
inc
das
or
out
mov
mov
rol
push
and
pop
in
loopne
(bad)
push
mov
mov
adc
aam
and
push
inc
cs
adc
test
movs
into
mov
stos
inc
cmp
push
stos
or
inc
not
movs
inc
ffree
ss
xchg
into
xor
xor
(bad)
aam
addr16
out
das
xlat
lods
or
pop
and
shl
jno
xor
jge
ins
out
mov
mov
gs
add
call
cmp
pop
js
out
imul
push
pop
scas
cld
and
push
bound
les
inc
push
cmp
mov
mov
mov
int3
cmps
pop
push
test
ja
fstp
arpl
ret
add
int3
push
pop
cmps
daa
inc
shl
inc
repz
pop
mov
push
outs
pop
cld
jg
xor
aaa
or
dec
out
inc
fnstenv
jne
ins
mov
and
jnp
jmp
aad
(bad)
pop
jle
sar
push
push
and
mov
mov
arpl
and
xchg
dec
jb
dec
push
pop
adc
xor
adc
xor
movs
adc
int3
div
sbb
xchg
sar
mov
jbe
out
xchg
test
addr16
or
adc
xor
(bad)
and
sub
enter
cmp
aad
xchg
popa
mov
mov
sbb
adc
bound
mov
xor
mov
stos
mov
jge
dec
sbb
or
test
add
into
pop
jl
sbb
add
daa
push
cdq
push
push
sbb
or
je
into
aad
jmp
fwait
inc
out
mov
push
cmp
leave
mov
fist
fiadd
test
sub
push
(bad)
mov
inc
jp
(bad)
retf
and
loopne
call
sub
xchg
jmp
std
fldcw
pop
cmc
add
(bad)
cld
jb
cmp
or
inc
pusha
xchg
mov
int3
jge
adc
sbb
in
into
les
ficom
je
cmp
sub
fmul
and
jmp
mov
and
cmp
xor
(bad)
mov
jb
sub
pop
into
outs
(bad)
xlat
cmp
cmp
scas
inc
sar
cmp
cmp
mov
fsub
push
or
push
data16
sbb
cmp
loop
fadd
js
pop
xchg
xchg
mov
pop
mov
jle
leave
in
jp
in
iret
xor
ficom
neg
dec
mov
pop
jae
xchg
pusha
pop
mov
adc
push
pop
and
lahf
cmp
ss
(bad)
and
dec
fwait
out
rcr
movs
mov
jo
sbb
jno
mov
mov
inc
mov
loope
cmp
pop
push
cs
xor
dec
pushf
xor
dec
loopne
pop
rcl
mov
adc
push
and
popf
ins
std
or
dec
jge
into
rcl
outs
out
into
mov
rcl
mov
icebp
in
or
nop
or
lea
mov
pop
push
aam
fnstenv
xchg
add
cmps
sbb
popa
fwait
adc
inc
adc
daa
mov
xchg
cmps
xchg
cmp
jmp
cwde
popa
mov
mov
aaa
enter
push
pop
cmps
retf
jge
out
sti
dec
jp
inc
cmp
and
jnp
push
int
aas
into
cwde
mov
std
and
jge
pop
xchg
mov
scas
(bad)
mov
dec
fmul
add
add
out
push
cmc
and
mov
fs
in
cmc
nop
addr16
push
push
mov
lahf
jl
mov
fcom
sbb
inc
fld
mov
mov
out
pop
pusha
popa
sbb
or
mov
mov
int
sahf
or
jmp
shl
cmp
xor
xor
int3
sbb
push
sub
mov
cld
(bad)
sahf
pop
xchg
add
aad
ins
sar
mov
push
cwde
cwde
imul
pop
mov
push
xchg
cld
ficom
dec
(bad)
xor
lods
jl
mov
neg
push
inc
ds
dec
jo
(bad)
repz
inc
mov
nop
mov
out
loop
nop
out
inc
push
not
aam
dec
imul
jle
dec
push
jl
loope
jo
cmp
mov
jle
movs
xchg
aam
jmp
nop
push
sbb
imul
adc
mov
mov
out
and
mov
mov
jecxz
jb
xchg
cmc
loop
xchg
int
add
lds
das
loope
cmp
pop
lahf
push
stos
xchg
xor
sub
ds
inc
jo
push
xchg
xchg
bound
ret
rcl
jno
fist
pop
xchg
movs
and
push
fwait
ins
dec
aaa
ins
and
cmps
xchg
(bad)
rol
push
data16
jne
enter
fnstenv
push
pop
mov
mov
adc
pusha
push
test
add
mov
mov
imul
add
ss
in
jns
jae
pop
call
fst
(bad)
cld
(bad)
adc
dec
push
sub
imul
add
inc
pusha
sbb
pop
ja
xchg
sbb
iret
cwde
push
push
mov
sbb
fcmovnu
out
cmp
lods
test
dec
in
mov
sti
add
add
push
ins
scas
sub
inc
and
inc
or
xchg
outs
cmps
mov
xchg
pop
sbb
dec
push
sbb
xchg
sbb
dec
mov
sub
jae
int
and
and
adc
xlat
cdq
lea
fs
popa
jbe
cmp
adc
call
test
cli
test
mov
icebp
mov
in
xor
fsubp
sbb
leave
pushf
dec
jne
mov
pop
sub
cmp
(bad)
in
jmp
retf
ret
push
cwde
cmc
dec
adc
mov
outs
sbb
adc
xchg
loopne
icebp
mov
movs
sbb
sub
mov
icebp
fsubr
cmp
add
xor
push
mov
dec
xchg
lods
out
call
push
dec
les
pop
fidivr
cmp
std
pop
push
cmp
xchg
loopne
pop
in
push
(bad)
cld
scas
push
cmp
push
fist
jle
ins
push
add
mov
mov
or
inc
fmul
adc
cld
leave
dec
push
sbb
mov
mov
pop
ins
in
out
ja
cmps
push
sti
pop
pop
(bad)
rcl
xor
out
loopne
cmps
les
out
lds
les
std
rol
jp
mov
dec
in
adc
cmp
push
adc
in
loop
mov
mov
dec
push
push
out
lahf
loopne
and
sub
inc
mov
sbb
smsw
cs
add
adc
aaa
leave
icebp
std
movs
mov
fsubr
cmps
ins
mov
gs
cmps
jns
cmp
mov
lea
retf
mov
jp
int
mov
jbe
dec
jae
outs
ficomp
cmp
mov
addr16
xor
pop
(bad)
xor
iret
dec
jmp
loope
aaa
ret
aaa
mov
enter
sbb
mov
xor
(bad)
push
(bad)
cmc
xchg
fcom
xor
mov
les
sub
fs
adc
ins
shr
fs
mov
xchg
push
aam
pop
xchg
adc
jg
imul
pop
jae
std
ds
xchg
or
push
nop
mov
mov
cmps
pop
ja
ds
cmp
mov
repnz
ror
xor
mov
inc
lahf
mov
xchg
xchg
mov
sub
sub
inc
add
les
xchg
or
dec
and
inc
mov
sbb
inc
shl
dec
rcr
mov
jnp
test
adc
out
mov
dec
cwde
xchg
adc
xchg
jns
pop
mov
push
out
ds
xchg
mov
jl
mov
std
dec
test
sub
mov
rcr
push
and
inc
jmp
cdq
dec
or
mov
arpl
ins
imul
sar
add
push
inc
adc
fdivr
mov
push
int
fistp
sti
add
les
cmp
xor
sub
hlt
mov
jmp
aam
loopne
push
daa
into
mov
dec
sar
mov
icebp
js
add
pand
bound
into
dec
outs
clc
pop
test
(bad)
cmc
(bad)
pop
push
neg
ror
mov
in
movs
cmp
out
aam
inc
jne
mov
pop
dec
push
add
push
sub
sub
push
pop
jge
jnp
int3
aad
add
sar
lods
push
cmp
pop
jnp
jns
(bad)
or
and
ficom
stc
out
gs
and
jge
mov
loopne
enter
fisub
xchg
lods
rcr
add
(bad)
or
inc
fldenv
cld
adc
sbb
pop
(bad)
gs
aam
cmp
in
or
dec
cmps
mov
(bad)
or
jae
xchg
inc
cld
dec
(bad)
add
ret
rcl
add
pusha
sbb
adc
rcl
jg
adc
clc
mov
(bad)
repz
pop
addr16
and
cmps
xor
inc
add
xor
mov
jno
xor
cmp
mov
int3
mov
ret
cmp
jmp
push
sub
pop
or
inc
jge
in
(bad)
xchg
stos
xchg
cmp
xor
sub
out
jle
imul
aam
adc
shl
sub
mov
push
fs
fisttp
mov
jg
xchg
(bad)
sub
push
outs
scas
and
nop
inc
scas
xor
dec
pop
call
xchg
adc
nop
scas
mov
outs
xor
push
mov
cmp
jmp
mov
sub
push
stc
dec
xlat
sti
sub
stos
add
pushf
push
test
mov
fidivr
jmp
cmp
inc
sti
xchg
and
xchg
int3
and
pop
sbb
mov
mov
ss
das
pusha
int
leave
push
loop
jae
sub
adc
(bad)
rcr
cmps
and
pop
xor
sahf
cmp
pop
mov
sub
shl
ins
xor
cmp
adc
(bad)
in
add
in
sahf
and
lods
shl
cli
sar
ins
xor
mov
loop
pusha
xor
test
std
mov
in
mov
fadd
xchg
enter
push
(bad)
push
pop
or
sub
pop
repz
push
movs
sub
adc
fdivr
scas
mov
push
pushf
cld
and
loopne
dec
loopne
jp
sub
shl
popf
call
lock
inc
add
jge
cmp
adc
arpl
int
cmp
mov
xlat
mov
push
fwait
mov
adc
lock
aaa
int
ds
mov
in
into
daa
cmps
xchg
and
adc
jmp
xor
and
ins
nop
out
inc
dec
iret
aas
(bad)
add
jp
sub
loopne
mov
xchg
(bad)
inc
jge
or
inc
and
sub
mov
jo
mov
and
stos
shr
iret
pop
ds
pop
jmp
shr
imul
dec
outs
fldcw
pop
push
test
add
lock
jge
outs
scas
loope
stos
das
xchg
mov
dec
cwde
sub
cmp
add
shr
imul
sahf
test
xor
mov
pop
push
dec
idiv
subps
ins
fidivr
dec
mov
scas
icebp
and
pop
stc
neg
jecxz
cmp
jg
movs
xlat
or
into
or
shl
jnp
scas
pop
add
xor
jmp
daa
pop
fcmovu
pop
jmp
or
sub
jg
imul
repnz
push
xor
jne
adc
pop
mov
dec
xor
es
push
aaa
shl
jge
inc
fsubr
xchg
xchg
fadd
xchg
rcr
pushf
push
push
in
pop
cli
arpl
pop
fcmovnb
in
retf
sub
push
xchg
mov
push
call
and
jle
popa
xchg
push
and
arpl
(bad)
cmps
xor
pop
test
call
mov
mov
retf
push
mov
scas
pop
test
mov
shr
dec
pop
jg
lea
push
push
fidivr
repnz
mov
sub
dec
div
cmps
stos
(bad)
sar
pop
sub
pop
ror
pushf
iret
ret
or
je
mov
or
dec
push
mov
stos
xchg
jns
jnp
push
ins
pop
cli
(bad)
or
call
loopne
call
mov
imul
sub
daa
je
icebp
or
and
push
mov
mov
dec
test
sub
lock
jmp
aam
jecxz
cmp
add
mov
aas
sbb
push
dec
jae
push
sub
xor
sahf
ss
inc
mov
lea
inc
nop
fnstcw
jb
cmps
jbe
pop
xchg
icebp
fld
dec
pop
(bad)
out
lods
push
adc
push
jne
push
out
inc
or
mov
mov
xor
ins
cwde
retf
loope
sahf
push
fisttp
aaa
mov
add
push
pop
je
xchg
test
pusha
or
ret
sbb
jnp
repz
fsub
push
out
daa
adc
mov
add
stos
mov
adc
cmp
push
adc
sub
fimul
sbb
cmps
xor
pop
fdivr
lea
inc
frstor
adc
iret
and
cmp
repnz
sbb
pop
add
inc
xchg
cmp
and
jle
xor
aaa
push
clc
add
lahf
mov
mov
sbb
inc
adc
rcr
xchg
mov
xor
adc
dec
adc
jge
rcl
pop
xor
das
call
xor
sub
dec
movntq
mov
mov
sub
aad
push
test
sbb
mov
push
fmulp
mov
jnp
pusha
iret
repz
dec
dec
bound
add
sbb
pop
adc
sub
xor
fisubr
push
movs
(bad)
imul
sub
xchg
mov
sar
push
cs
imul
xchg
rol
imul
xchg
test
xchg
add
and
xor
inc
ds
sub
jmp
adc
adc
inc
jg
(bad)
test
mov
clc
jmp
mov
pop
in
sahf
sbb
(bad)
in
or
nop
jge
sbb
lods
xchg
jge
adc
pop
mov
fsub
aaa
test
mov
cli
cli
(bad)
lea
call
push
cli
add
push
push
fstp
pop
les
mov
(bad)
xlat
in
cld
push
jmp
stc
cli
loopne
inc
dec
pop
pop
data16
stc
ficom
stos
xor
xchg
or
xchg
add
in
dec
add
push
and
jmp
repz
or
shl
fidivr
pop
pop
mov
lea
jb
(bad)
xchg
test
cmp
push
push
add
push
or
arpl
push
cld
jno
pop
xlat
and
ins
loop
shl
push
pop
inc
pop
jecxz
vlddqu
ret
xchg
push
fcomp
add
daa
mov
outs
mov
mov
mov
dec
div
stos
(bad)
sub
test
fidivr
jnp
cmova
jnp
jb
and
add
mov
(bad)
sub
push
inc
mov
sub
mov
stos
and
into
cmc
inc
stos
scas
cs
cmp
in
fwait
xchg
xchg
cwde
jbe
popw
inc
mov
xchg
xor
and
pop
fwait
arpl
inc
jmp
ins
sti
inc
mov
dec
imul
dec
bound
jmp
dec
test
sbb
loope
cmc
xor
loop
mov
aad
sub
xchg
pop
jo
addr16
dec
push
add
inc
sbb
lods
into
xor
jecxz
stos
pop
je
rcr
pop
pop
call
dec
gs
and
jbe
mov
loopne
mov
pushf
out
or
dec
adc
cdq
int3
ror
jno
pop
outs
and
fwait
(bad)
fs
sbb
mov
ror
jno
adc
xchg
adc
mov
sbb
push
ror
aaa
or
jmp
fdiv
pop
mov
xchg
les
cmc
clc
mov
push
xchg
in
pop
mov
pop
(bad)
inc
lahf
test
mov
ret
mov
jmp
rol
add
mov
push
(bad)
test
xlat
call
test
icebp
push
int
stc
xchg
cmc
xor
js
jne
(bad)
imul
jns
xchg
mov
and
inc
scas
pop
xchg
sbb
dec
or
stos
ja
cmp
push
pop
mov
out
inc
adc
in
push
fmul
or
shl
mov
cmp
mov
dec
arpl
loopne
(bad)
sbb
sbb
leave
rcr
pop
push
adc
call
inc
in
mov
in
push
mov
mov
fsub
aas
dec
in
(bad)
cdq
ins
mov
push
std
fcmovnbe
mov
loopne
(bad)
lock
test
pop
inc
jo
pop
arpl
jno
xchg
in
pushf
dec
ja
ja
or
scas
dec
adc
push
jg
cmp
mov
inc
repnz
mov
sbb
jmp
add
nop
movs
sar
pop
movs
sbb
in
push
in
jae
mov
loopne
pop
add
mov
pop
pop
cmp
test
mov
xlat
es
inc
mov
js
sar
or
stos
je
dec
jnp
adc
cmp
pop
adc
arpl
cdq
xlat
lock
mov
and
or
dec
or
or
cmp
mov
and
(bad)
in
dec
mov
mov
add
push
mov
ss
cdq
scas
add
fnsetpm(287
lds
scas
and
mov
cwde
pushf
retf
stos
dec
inc
adc
mov
xchg
mov
sbb
mov
ficom
cmps
cmp
or
imul
icebp
fistp
pop
and
ds
and
inc
je
cmp
fimul
or
repz
xchg
add
icebp
mov
loope
jge
mov
pop
dec
ror
inc
aam
pop
lock
adc
xchg
add
jmp
or
inc
in
(bad)
scas
sub
jg
or
int3
jmp
cld
mov
leave
sbb
outs
loope
ss
stos
sbb
sub
mov
mov
js
push
push
(bad)
rcr
mov
mov
repz
mov
out
cwde
pop
jge
sub
rcl
stos
clc
cvttps2pi
and
imul
rcr
call
pop
sbb
jne
sbb
jmp
lahf
xchg
jmp
repz
push
fsub
or
rcl
dec
fadd
pusha
imul
mov
fdiv
shl
int3
xchg
dec
mov
push
idiv
lahf
inc
pop
adc
mov
jns
xchg
ins
fcomp
mul
jmp
jbe
aam
xchg
cli
jb
fcomp
xor
out
fcomp
mov
pop
mov
outs
mov
fdiv
mov
xor
fnstenv
in
ins
rcr
cmp
arpl
fisubr
jecxz
sbb
push
add
test
lahf
ja
mov
scas
(bad)
fcomp
je
xchg
pop
fdivr
add
(bad)
sti
mov
int3
push
retf
jp
mov
xchg
aam
push
call
std
(bad)
sbb
das
mov
xchg
xchg
fmul
mov
fdiv
add
out
or
les
dec
pop
sar
(bad)
sbb
leave
pop
idiv
pusha
call
fdivr
fimul
popa
xchg
inc
fmul
adc
retf
fsubr
(bad)
movs
push
jae
fcomp
mov
(bad)
rcr
cwde
rol
mov
add
xchg
icebp
mov
rol
nop
mov
ret
fsubr
(bad)
xchg
std
fcmovnu
push
jmp
int3
(bad)
push
neg
or
xchg
fidivr
mov
pusha
fmulp
pop
jp
push
push
jge
sbb
ror
leave
inc
jl
movs
push
jle
fcomp
test
push
jmp
jmp
mov
movs
xchg
out
lods
(bad)
aad
ret
sub
jo
dec
add
ss
dec
push
cmp
sar
inc
fdivr
pop
test
lahf
out
mov
mov
pop
inc
js
xchg
and
mov
clc
lods
mov
xchg
sbb
vmwrite
cwde
sub
adc
sbb
rcr
adc
retf
iret
js
xchg
outs
mov
mov
xchg
fwait
mov
aad
fmul
ja
nop
out
add
push
cmps
(bad)
int3
pop
pop
xchg
lods
popa
fiadd
in
fidivr
push
mov
xchg
call
out
stos
rcr
add
mov
fadd
sub
pop
adc
mov
mov
test
cmp
test
mov
push
xchg
mov
leave
faddp
jmp
idiv
nop
pop
jp
mov
(bad)
pop
lods
mov
ins
xlat
mov
add
cmp
ins
(bad)
jp
pop
cmps
daa
push
pop
ds
mov
mov
jae
pop
gs
push
iret
ret
or
shr
mov
adc
(bad)
add
mov
mov
div
push
lds
fadd
sar
mov
pop
shr
pop
outs
imul
push
mov
mov
push
int
rcr
in
call
jle
psubw
jae
xchg
cmc
out
push
loop
mov
sub
xchg
js
dec
mov
adc
int
gs
or
jae
sub
fcomp
sbb
outs
enter
fadd
xchg
mov
shl
fsub
xchg
mov
pop
jo
xor
cli
fsub
jae
jmp
jmp
inc
mov
fcomp
ds
fadd
push
shl
fdivr
scas
loope
pop
cs
ins
adc
shl
push
mov
in
mov
xchg
call
inc
cmp
add
mov
mov
pop
call
or
mov
aam
sub
fcomp
dec
dec
xchg
push
sbb
(bad)
daa
jae
es
xor
(bad)
mov
rcr
dec
dec
cli
push
sub
(bad)
push
mov
cmp
xchg
jbe
ror
pop
jmp
fsubr
jle
xor
push
adc
xchg
fsubr
adc
call
cmps
pusha
lods
push
icebp
int3
fs
mov
fmul
xchg
shl
cmps
sub
pushf
test
stos
int3
jmp
rol
mov
jnp
sahf
dec
fdivr
add
jmp
xchg
nop
(bad)
addr16
aam
mov
test
xchg
pusha
sub
fistp
push
jmp
nop
rcr
loop
mov
sub
inc
mov
mov
or
push
jbe
imul
fsubr
mov
inc
das
ficomp
in
fdivr
mov
(bad)
cmp
adc
loop
pop
bound
stc
lahf
es
jnp
pop
jo
cmp
sub
call
push
push
dec
dec
mov
and
fmul
enter
mov
(bad)
sbb
sar
lods
daa
push
test
add
or
les
fcmovbe
jnp
retf
aad
mov
and
int
push
jae
fdiv
in
cmps
test
add
pop
and
lea
je
fidivr
inc
fcmovb
or
pop
xchg
repnz
idiv
push
int3
daa
out
shr
shl
ins
xchg
(bad)
inc
sbb
cmp
(bad)
fcomp
out
dec
jne
call
jle
mov
repnz
stc
mov
mov
shl
ins
sbb
jmp
cmp
adc
les
or
ss
bound
scas
rcl
or
add
push
xchg
in
retf
nop
fdivr
test
jo
cmp
sub
das
jp
mov
add
xchg
xor
and
mov
outs
adc
addr16
push
inc
leave
fcom
(bad)
pop
clc
fiadd
pop
mov
sti
outs
and
test
into
adc
fcomi
loopne
fcomp
cmp
push
int3
sbb
xor
inc
xor
je
push
loope
int3
mov
fidivr
movs
mov
mov
(bad)
int3
or
loopne
repnz
fmul
(bad)
push
jae
mov
cmc
and
fidivr
pushf
fs
sbb
rcr
jo
retf
fcom
repz
gs
xchg
sar
pop
fdivr
(bad)
movs
mov
push
fsub
sbb
fadd
mov
cmp
(bad)
std
fadd
(bad)
leave
imul
mov
xchg
jns
mov
fcmove
xchg
adc
dec
mov
ins
sbb
dec
xlat
pusha
fmul
mov
push
mov
sar
cld
fdiv
pop
rcl
push
aam
fcom
clc
push
inc
xlat
call
cwde
(bad)
aaa
xchg
xchg
mov
or
add
int
mov
popf
and
les
mov
addr16
fxch
aam
cmps
pop
das
mov
int
adc
stc
out
scas
daa
cmp
jmp
(bad)
imul
repz
fsub
push
push
sbb
pop
xor
std
pop
mov
inc
mov
mov
aad
lock
cmp
movs
cmp
ins
sbb
jmp
pop
in
xchg
fmul
clc
pop
cmps
stc
cmp
mov
std
test
jo
dec
(bad)
in
add
mov
(bad)
mov
mov
add
mov
enterw
push
fwait
and
mov
jb
xlat
mov
(bad)
ficomp
in
fdivr
ds
fsubr
inc
not
fadd
xchg
das
retf
or
mov
jmp
pop
in
mov
dec
or
arpl
sub
pop
push
stos
ins
mov
dec
(bad)
xor
fcmovb
scas
jle
call
push
aaa
pop
lods
jle
pop
and
test
adc
xlat
movs
int3
or
push
mov
addr16
(bad)
mov
jg
or
xor
clc
repz
fadd
adc
mov
mov
push
hlt
xor
jns
cwde
push
sti
inc
stc
mov
mov
out
(bad)
std
xor
fidivr
or
mov
(bad)
fsubr
jecxz
dec
mov
pop
pusha
movs
dec
push
mov
mov
test
pushf
jne
xchg
nop
ins
mov
cmc
movs
es
fcomp
inc
jmp
fcom
jno
fimul
mov
jmp
loope
push
fsubr
cmps
inc
or
fadd
bound
cli
sbb
fisubr
mov
add
ficom
in
fdivr
ds
stos
test
pop
jp
or
push
shr
jge
jns
push
add
aaa
fdiv
jmp
fsub
int
jb
cli
rcr
call
(bad)
inc
enter
push
dec
jns
xor
or
cld
sub
and
mov
pop
cmps
fild
retf
call
xor
mov
mov
sub
pop
push
out
mov
jns
and
out
adc
enter
movs
pusha
pushf
sub
les
mov
add
repnz
ins
scas
jmp
cmp
aaa
mov
or
nop
rcl
adc
ror
clc
cmp
bound
ss
in
pop
cmps
jge
aam
pop
mov
lahf
fdivr
neg
mov
xchg
push
mov
xor
aam
dec
inc
inc
(bad)
jns
dec
jns
fild
call
lods
dec
fmul
cli
fbstp
and
and
mov
int3
mov
ror
std
push
cmps
shl
cmps
inc
or
shl
push
mov
das
call
push
push
jp
gs
inc
jb
push
inc
mov
cmp
aam
iret
mov
fmul
shr
je
into
ds
fmul
cld
fwait
and
mov
fcom
jle
icebp
(bad)
jp
cwde
ret
in
aam
(bad)
cmps
fistp
aaa
fdivr
dec
push
add
into
pop
push
cmp
loop
mov
mov
push
(bad)
push
sbb
imul
and
scas
mov
mov
call
popf
fiadd
mov
push
out
out
dec
imul
xchg
mov
fucomi
mov
jecxz
add
jne
ins
mov
pop
enter
or
jp
inc
call
pop
mov
cli
jle
dec
pop
in
imul
and
cs
pop
rcl
dec
loop
mov
add
jl
cmp
xchg
inc
pop
or
xor
push
fcom
stc
fistp
popa
jmp
ins
mov
fcom
cmp
jnp
push
ins
dec
cmp
pop
add
loope
pop
(bad)
mov
int3
cmc
(bad)
dec
mov
jecxz
mov
mov
pop
lods
std
test
scas
ds
sbb
(bad)
mov
cli
jge
jnp
push
arpl
or
push
enter
or
call
push
call
and
(bad)
or
loopne
fdiv
test
movs
ss
sub
xchg
add
cmps
into
and
fst
clc
push
aam
cmp
bound
call
hlt
pop
fmulp
out
add
fadd
cli
add
sub
push
seta
push
rcr
push
push
movsx
mov
rcl
mov
bsr
pusha
btr
dec
mov
clc
xchg
mov
sub
xor
lea
jmp
jmp
data16
xor
hlt
and
call
js
jmp
stos
sbb
jae
inc
lods
test
lea
stos
xor
jae
test
inc
call
adc
add
ds
test
ficomp
scas
idiv
inc
adc
adc
add
cmp
jnp
idiv
xor
retf
or
sbb
js
sahf
mov
cmp
inc
pop
lods
retf
dec
mov
out
xor
inc
retf
out
lea
jb
clc
cmp
cmp
push
mov
lea
jae
xor
mov
lea
call
lea
call
pusha
push
jmp
mov
or
fdivrp
push
ret
aaa
xor
enter
icebp
ret
sub
and
mov
lock
enter
pusha
fisubr
pushf
add
jo
imul
sar
int3
outs
adc
cmc
pop
(bad)
enter
aam
sub
xor
ror
das
aas
into
cmps
sub
test
sti
xchg
mov
inc
adc
dec
adc
xchg
ja
std
mov
fild
std
jmp
in
sbb
dec
push
ins
(bad)
mov
pop
mov
dec
data16
ds
fidiv
push
mov
stc
lea
add
sub
xchg
mov
(bad)
loope
and
test
sub
or
jb
sti
and
retf
sbb
mov
cmp
movs
add
clc
and
jbe
pop
lock
sbb
cdq
jg
pop
or
jo
push
jne
jmp
(bad)
xor
loope
cmp
stos
fld
ins
pop
push
ins
aam
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
sbb
add
and
ret
add
add
add
call
scas
jp
push
sti
and
shl
push
inc
jmp
pop
and
jo
push
clc
push
inc
bound
jmp
adc
in
push
hlt
push
js
mov
int
push
stos
js
jnp
jl
push
(bad)
into
imul
xchg
ss
test
add
jge
aad
and
pushf
and
inc
imul
dec
scas
into
call
cwde
mov
neg
lods
mov
push
xchg
mov
add
jl
jmp
sub
int3
sub
stos
push
aam
mov
mov
fadd
(bad)
jecxz
loop
xor
ss
neg
xor
js
cmp
cmps
fwait
out
add
retf
xchg
pop
data16
addr16
out
jne
cld
mov
les
aaa
cmc
repz
sub
int3
call
aam
mov
and
push
inc
push
and
dec
sahf
push
ss
xchg
mov
jmp
inc
mov
mov
lea
je
jmp
push
lea
call
push
call
add
inc
imul
pop
daa
dec
add
push
jae
imul
dec
mov
xchg
lods
repz
clc
ss
adc
fsubr
ins
mov
aas
ss
inc
dec
cmp
ret
sbb
dec
icebp
scas
data16
aas
sub
sar
sbb
test
mov
inc
aad
mov
and
test
dec
outs
(bad)
adc
inc
sar
push
or
jae
xchg
mov
rdpmc
fisttp
aaa
leave
pop
jge
(bad)
jl
adc
rol
out
adc
data16
sub
enter
lock
pop
mov
sar
jns
in
arpl
inc
sub
xchg
mov
dec
mov
cmp
aam
add
or
xor
pushf
bound
cmp
into
or
push
mov
push
pusha
sbb
push
mov
mov
push
jb
lahf
add
xor
jbe
or
ins
jle
mov
ds
(bad)
cli
test
std
xchg
add
gs
and
jns
scas
data16
and
leave
push
(bad)
xchg
mov
cmp
dec
push
or
cli
daa
push
icebp
or
call
jae
fistp
rcl
das
aas
xor
lods
or
xchg
jecxz
faddp
out
sub
pop
jp
mov
fdiv
mov
sub
sbb
or
fcomip
adc
repz
dec
dec
das
jb
out
stc
mov
mov
aam
rcl
sub
pop
ret
add
jl
cmps
pop
pop
ret
leave
pop
sub
mov
movs
jns
scas
dec
jge
fs
sbb
retf
add
loope
mov
mov
jmp
inc
push
imul
or
xadd
and
iret
rcr
aam
test
scas
jne
stos
in
xchg
mov
sti
and
and
jno
fsub
(bad)
inc
ret
(bad)
jo
mov
mov
add
jne
pop
dec
mov
retf
xlat
imul
xchg
mov
push
je
sbb
adc
mov
retf
in
pop
lahf
add
mov
xchg
jl
je
(bad)
test
sub
out
cld
adc
or
fs
sub
sub
repnz
pop
lods
add
jnp
not
or
in
sti
xor
sub
mov
add
adc
outs
(bad)
and
pushf
in
sub
or
dec
cdq
cwde
(bad)
fdivr
push
add
jno
push
sub
leave
xchg
sub
movs
cmp
pop
popa
sti
xchg
sahf
cmp
adc
nop
push
js
dec
mov
ss
das
sub
mov
scas
xchg
lahf
or
mov
push
or
data16
cmp
(bad)
jmp
pusha
sub
ins
ret
mul
cmc
sbb
mov
xchg
movs
in
call
les
mov
inc
jae
stos
mov
adc
pop
mov
iret
jmp
ins
xor
push
sub
sbb
pop
or
ins
(bad)
push
mov
sub
push
ficomp
pop
(bad)
fisttp
pop
(bad)
push
sbb
inc
pop
adc
enter
xchg
call
cmps
adc
mov
xchg
mov
stos
cmp
sbb
jno
lods
iret
pop
loopne
push
stos
into
xor
jmp
inc
and
xor
fs
jne
call
call
jge
cmp
ror
out
pop
mov
mov
jecxz
lea
repz
scas
into
jp
inc
add
mov
sbb
or
lods
arpl
retf
push
cmp
int
push
push
loop
push
shl
pop
cld
mov
std
adc
(bad)
jmp
inc
ins
xor
test
ins
or
in
mov
adc
xor
adc
ins
dec
push
into
mov
fdivr
es
(bad)
and
sar
std
sbb
cld
movs
xchg
mov
in
mov
mov
xor
add
jmp
call
mov
test
add
push
jno
adc
in
mov
(bad)
addr16
xchg
(bad)
push
mov
test
ss
jb
stos
fadd
and
sub
mov
add
lods
adc
or
data16
aam
pop
(bad)
jge
inc
add
loop
ret
sub
shr
and
jg
dec
push
fcom
cs
add
mov
hlt
scas
inc
mov
std
adc
ins
into
mov
fwait
sbb
add
cmp
test
repz
in
cwde
xor
test
push
push
mov
cwde
mov
adc
sti
adc
add
movhps
in
into
loopne
sbb
pop
jb
int3
clc
es
dec
adc
dec
mov
je
push
in
cld
mov
xchg
imul
dec
xchg
mov
gs
sbb
dec
sub
gs
lds
adc
das
std
call
and
jmp
mul
and
fcmovnu
stc
xor
push
mov
std
inc
mov
cmps
xchg
mov
adc
jl
int
jae
lock
popf
dec
or
stos
push
add
enter
jecxz
adc
inc
cmp
adc
jo
dec
or
gs
in
and
adc
data16
fimul
xchg
push
in
jo
mov
movs
scas
(bad)
out
inc
ins
outs
jno
sub
mov
hlt
xor
jne
jmp
cmp
jmp
aaa
popf
jmp
push
imul
pushf
pushf
repnz
push
lea
jne
mov
pushf
bswap
pusha
mov
movzx
mov
movzx
cwde
mov
pushf
call
lea
pop
movzx
bswap
lea
mov
mov
call
mov
out
jo
or
pushf
ss
js
sub
jl
inc
int3
out
call
gs
jecxz
inc
cmps
pusha
cmp
push
mov
(bad)
push
les
add
adc
das
inc
and
arpl
pop
outs
mov
rcl
sbb
sti
mov
lea
add
add
and
jl
iret
mov
out
pop
fdivp
or
sub
xchg
sub
(bad)
pop
stos
mov
sub
ja
sub
sub
and
add
movsx
pusha
mov
inc
sbb
mov
jmp
sti
sub
outs
dec
outs
mov
cli
and
in
push
xor
jp
jns
push
sbb
mov
mov
lds
pop
adc
in
adc
push
loopne
fistp
fst
xor
enter
outs
jmp
push
jmp
ins
out
add
stos
xchg
jg
imul
movs
mov
mov
pushf
pushfw
pop
jmp
out
sbb
or
pop
jl
les
(bad)
js
dec
stos
pop
lods
cmp
dec
lahf
fdivr
js
sbb
pop
or
(bad)
lahf
sar
adc
(bad)
or
xor
cwde
stos
(bad)
out
xor
mov
ja
or
lods
jbe
lds
rol
out
cmps
push
loopne
pop
not
add
movs
(bad)
pushf
bound
(bad)
jns
cmps
pop
xor
xor
add
mov
pusha
repnz
ret
dec
clc
push
jo
fdiv
inc
pop
daa
add
into
dec
popa
gs
xor
stc
cmp
push
retf
push
sub
add
sbb
xchg
sub
xchg
(bad)
(bad)
mov
loop
cmp
enter
mov
push
outs
test
xor
into
fs
and
push
push
mov
jb
or
retf
stc
iret
cmp
jmp
lods
hlt
inc
movs
iret
rol
mov
xchg
mov
pop
jecxz
xchg
ja
add
(bad)
fcom
test
(bad)
adc
xor
add
mov
xor
xor
cmp
mov
or
call
mov
imul
or
test
test
xor
mov
pop
sub
mov
xlat
ss
enter
mov
or
cmp
jmp
and
(bad)
fs
mov
(bad)
sub
pusha
xchg
or
jae
pusha
adc
jmp
add
or
daa
dec
xlat
gs
mov
push
add
jb
push
mov
mov
enter
movs
pop
rcl
fmul
push
ss
add
sar
sbb
fmul
sub
in
push
and
fiadd
es
enter
push
sbb
sbb
add
scas
shr
cld
or
pop
xchg
sar
nop
movd
sar
cld
pop
lahf
push
lea
mov
jmp
cdq
cli
gs
or
hlt
call
dec
push
cmps
mov
ret
sub
retf
data16
and
mov
test
pop
jae
pop
rcr
ss
mov
call
cmp
(bad)
cmp
cmp
cdq
cwde
scas
jno
(bad)
mov
ins
push
je
cdq
mov
fldenv
sub
adc
arpl
cwde
pop
ins
mov
or
ds
cmp
ret
pop
mov
adc
fidivr
mov
nop
dec
cmps
inc
loop
aad
pop
ficom
int3
add
jl
(bad)
hlt
adc
push
pop
loope
mov
push
sub
fs
jne
call
call
(bad)
bound
sbb
enter
rol
lods
fiadd
mov
add
into
stos
fadd
cmp
into
jle
cmc
fmul
push
std
arpl
stc
xchg
add
mov
fist
cmps
ds
lods
out
dec
sbb
lds
xchg
dec
mov
test
push
mov
inc
mov
pop
ja
mov
std
pop
mov
ss
fcomp
jmp
push
push
mov
call
lea
ja
clc
push
pusha
imul
pushf
test
push
add
pushf
pushf
lea
jmp
not
jmp
adc
xor
sbb
jae
xor
pop
das
dec
imul
aam
and
pushf
lea
je
dec
mul
cmps
and
cmp
clc
inc
aam
push
cmps
adc
pop
mov
pop
addr16
test
mov
icebp
fist
adc
add
aaa
test
jg
sub
psubw
stc
or
inc
imul
mov
mov
inc
mov
add
cli
gs
or
stos
pop
add
repz
inc
mov
cld
and
fcmovu
pop
push
mov
xor
call
les
xchg
imul
(bad)
ss
push
out
std
jecxz
iret
pusha
test
aas
fdivr
pushf
cmc
cdq
mov
cmp
aaa
mov
gs
cmp
adc
mov
pop
arpl
rol
stos
mov
and
and
call
sbb
outs
sbb
loop
enter
pop
mov
test
add
push
lods
lock
daa
into
xor
mov
jmp
fadd
push
into
std
jle
adc
out
push
mov
movs
sbb
out
imul
add
add
movs
jne
xchg
mov
cwde
out
and
nop
test
add
out
mov
iret
sub
pop
xchg
in
mov
fld
adc
adc
dec
inc
dec
in
cmp
popa
fwait
(bad)
dec
inc
aad
mov
mov
mov
fdivrp
loop
cld
mov
push
das
pop
mov
jecxz
movs
or
pusha
mov
lahf
push
popa
cmp
(bad)
out
adc
ss
pop
xchg
into
ins
inc
out
lods
push
xor
mov
cmp
xor
idiv
nop
xchg
xchg
sub
out
mov
push
test
out
and
pop
retf
call
fs
iret
jnp
jge
add
outs
out
das
jmp
ficom
push
js
or
stos
into
jl
cs
xor
aam
mov
jecxz
push
test
jmp
ret
shr
out
inc
cmp
xchg
push
mov
mov
pop
popf
test
out
daa
dec
arpl
or
aas
lds
test
jne
loop
jmp
repz
jmp
adc
dec
ja
or
iret
ja
sbb
in
inc
arpl
sahf
cmp
mov
mov
loope
leave
fwait
push
inc
pop
adc
sbb
push
daa
cmp
fst
mov
iret
stc
mov
xor
mov
inc
std
pop
xchg
enter
mov
loope
retf
xor
test
pop
ret
adc
push
sbb
dec
fadd
punpckhbw
xor
mov
jb
or
push
or
iret
lods
(bad)
movs
adc
inc
and
add
xchg
push
add
cmc
jmp
lea
jne
stc
shld
btr
pushf
mov
pushf
jmp
imul
xor
hlt
test
inc
cli
sbb
dec
stos
(bad)
dec
fbstp
xchg
sub
jecxz
dec
lea
movs
sub
adc
inc
sbb
imul
sub
scas
pop
xchg
add
in
jmp
mov
mov
popf
inc
adc
mov
pop
mov
stos
test
dec
dec
jge
xchg
scas
std
sbb
(bad)
add
jg
outs
cs
jnp
(bad)
lock
movs
js
or
jl
and
daa
gs
addr16
sub
xchg
dec
(bad)
and
out
loope
sub
jmp
shl
adc
(bad)
out
daa
cdq
out
loopne
adc
pushf
pusha
mov
mov
pushf
pushf
lea
jmp
imul
gs
xor
cs
ins
add
or
push
add
movs
ret
jge
mov
out
inc
cmp
outs
data16
cmps
xor
pop
xchg
adc
call
ror
cmp
sub
add
cmps
fbstp
aaa
dec
fistp
dec
popa
push
mov
ret
sbb
xor
mov
sbb
push
jnp
sub
adc
dec
and
jnp
leave
std
jns
or
dec
(bad)
clc
es
clc
lods
enter
cmp
icebp
xchg
ins
xor
ja
rcr
test
imul
mov
adc
shl
out
or
outs
nop
mov
jl
add
sti
lds
add
add
add
lods
mov
pushf
pushf
push
push
lea
jmp
sbb
jp
or
xor
bound
repnz
dec
pop
xor
std
jl
das
jno
pop
xchg
aad
cmp
dec
pop
adc
daa
pop
mov
test
nop
pushf
sbb
xchg
mov
mov
sbb
sbb
xchg
js
jne
mov
jg
push
sar
dec
cld
and
(bad)
jmp
sub
dec
enter
sbb
xor
ss
dec
xchg
fldenv
sar
or
pop
inc
neg
test
pop
mov
int
mov
test
inc
nop
cmps
cmp
cmp
adc
dec
out
and
lahf
add
(bad)
out
xor
and
pop
jge
int
cmp
or
jb
out
inc
jl
shl
gs
dec
clc
fsubp
dec
mov
push
stos
cld
addr16
fidiv
cmp
sar
mov
jp
sbb
jno
or
stos
str
push
push
lea
je
pushf
mov
jmp
mov
mov
or
(bad)
jl
mov
hlt
fsubr
cmp
xor
sub
js
pop
pop
inc
out
ret
push
inc
ja
(bad)
nop
ret
mov
scas
sbb
div
pushf
int3
cli
adc
jb
mov
aam
jne
ins
(bad)
fidiv
fsubr
mov
pusha
xchg
jmp
push
push
pusha
lea
jne
das
not
sub
add
stc
mov
dec
pusha
not
or
add
adc
mov
clc
mov
stc
push
test
pusha
push
lea
je
stc
push
jmp
jmp
lods
jmp
mov
pushf
add
pushf
not
pushf
jmp
push
pushf
lea
je
pushf
push
mov
adc
pushf
pushf
mov
lea
jmp
pusha
mov
jmp
cmp
jl
or
pop
and
inc
push
inc
int
repnz
and
repz
fst
shl
mov
cld
adc
loopne
in
add
fmul
xchg
mov
adc
dec
push
bound
ret
xor
xor
sub
in
pop
dec
jae
fnstcw
gs
lods
add
push
inc
pop
adc
sbb
mov
mov
dec
enter
in
cmps
pop
cdq
fcomi
jge
mov
fs
dec
lods
mov
pop
outs
pop
lock
clc
inc
fs
scas
pop
inc
pop
js
rcr
jmp
cdq
cmp
imul
xor
rcr
fwait
dec
repz
ror
cld
sub
add
push
dec
cmp
dec
pop
adc
xchg
mov
in
mov
sub
lahf
mov
sbb
sub
ret
sbb
xchg
mov
repnz
(bad)
mov
sub
dec
je
call
push
jle
jbe
inc
xchg
loopne
add
sub
test
inc
sub
ins
shr
loop
call
or
repz
dec
addr16
xor
or
sub
dec
pop
adc
outs
dec
scas
sbb
mov
add
xchg
js
sub
cmc
mov
sbb
add
mov
cmp
inc
xchg
test
pusha
push
adc
pop
adc
rcr
repnz
adc
pop
jl
and
leave
shl
fs
je
dec
ror
rcl
pushf
add
and
mov
test
stc
test
add
mov
cmc
cmp
clc
mov
rcl
bswap
or
mov
pusha
cmp
mov
lea
jbe
rcr
mov
sar
clc
add
jmp
addr16
leave
jle
or
test
jmp
cmp
not
or
(bad)
fld
daa
xor
pop
sub
div
in
xchg
pop
sbb
clc
inc
cmp
loopne
cmp
mov
loopne
cmp
fs
xor
std
push
ffreep
outs
(bad)
rol
xchg
or
ret
inc
popa
stc
aas
push
stos
neg
sbb
dec
jl
movs
scas
cmp
in
mov
outs
or
je
clc
cmp
jmp
mov
call
mov
lea
ja
cmp
test
add
jmp
mov
jg
or
mov
out
nop
inc
hlt
mov
push
fsubr
mov
inc
xchg
scas
lea
imul
dec
pop
adc
or
push
retf
jb
jnp
mov
and
jge
mov
jno
dec
jo
jne
and
rcl
pop
pop
add
mov
mov
imul
push
cmps
or
cmp
mov
xchg
int
popa
scas
or
je
(bad)
lods
nop
mov
jg
or
(bad)
js
(bad)
adc
lock
sub
mov
std
(bad)
mov
jne
adc
mov
fstp
or
imul
mov
pop
lds
test
jne
out
inc
imul
fcomip
or
(bad)
ss
jmp
xchg
or
imul
jg
or
retf
mov
ror
pop
fs
mov
and
lock
test
(bad)
or
call
jne
(bad)
cli
mov
sub
or
add
dec
aas
es
sar
mov
rol
cmp
and
jbe
fdivr
adc
xor
xchg
loopne
fadd
xor
adc
inc
pop
jmp
sar
test
pop
into
fcmove
jmp
int
xchg
lock
repnz
adc
ds
jl
xchg
pop
push
fsubp
cmp
mov
adc
xor
call
jne
dec
cli
sbb
cmp
mov
fnstsw
les
push
sbb
sbb
xor
addr16
mov
out
sbb
add
outs
test
shr
into
xchg
inc
lea
call
jmp
mov
call
or
xor
and
fsubr
xor
xor
shr
or
push
ret
cmp
push
xchg
mov
mov
movs
fs
rol
or
lock
jecxz
ret
loope
adc
mov
aas
and
not
icebp
in
mov
jmp
cmp
mov
xchg
xor
mov
pop
mov
jne
call
sub
(bad)
cmp
(bad)
std
(bad)
repnz
scas
mov
mov
std
add
mov
test
ret
dec
sbb
and
xchg
jg
daa
es
(bad)
not
scas
inc
xor
pop
test
pop
jnp
in
hlt
rcl
test
das
mov
jp
lods
fld
fwait
adc
mov
jnp
push
cs
lds
bound
jle
dec
aam
inc
fiadd
push
add
mov
ds
sbb
sbb
or
nop
push
jmp
dec
jmp
repnz
addr16
clc
and
sahf
mov
and
sub
xor
popf
fmul
mov
push
cmps
and
jg
lods
jg
or
mov
lds
sub
and
add
and
cld
add
ds
and
scas
inc
movs
(bad)
fsubr
or
pop
jbe
mov
push
popf
sub
mov
std
pop
jnp
or
inc
xor
cmps
int3
jle
out
mov
push
outs
pop
xor
mov
sbb
mov
ror
jg
dec
jno
call
add
push
cmp
nop
inc
or
aam
pop
jecxz
xchg
popf
lods
mov
mov
adc
pop
push
jno
stos
(bad)
fdivr
push
and
cld
dec
(bad)
loopne
pop
cmp
std
and
jne
xchg
push
jle
sbb
sbb
mov
pushf
adc
jp
xor
xor
xor
xor
sub
xchg
(bad)
out
and
jbe
popa
adc
xchg
mov
lea
cmps
adc
or
je
add
shl
cmps
bound
std
cmps
scas
test
sbb
test
or
adc
lods
test
push
mov
sbb
mov
cld
sub
sbb
mov
scas
push
sub
mov
pop
and
fist
xor
and
mov
jbe
mov
pushf
mov
xchg
lahf
hlt
sub
clc
push
(bad)
mov
shl
xchg
outs
add
mov
sbb
test
fcomp
lahf
mov
cmc
sub
jg
sbb
sbb
xor
dec
mov
test
mov
js
and
pop
and
dec
popa
jne
jl
add
enter
in
xor
repnz
out
cwde
mov
push
jbe
sahf
repnz
ins
sahf
xchg
popf
clc
dec
push
outs
retf
inc
xor
push
iret
sub
arpl
fdivr
mov
mov
pop
nop
cld
lahf
bound
pusha
mov
mov
test
data16
or
jge
test
imul
push
sbb
mov
xor
xchg
out
adc
or
xor
jge
add
sub
in
jge
mov
mov
push
loopne
push
(bad)
mov
rcl
adc
js
fstp
daa
(bad)
imul
rcl
outs
dec
out
adc
inc
in
out
enter
sub
movs
mov
je
retf
(bad)
icebp
mov
sub
movs
test
mov
pop
cli
pop
sub
push
mov
jmp
movs
ret
xor
xchg
stos
inc
leave
jmp
das
sbb
or
pushf
mov
jmp
not
bt
mov
mov
sub
mov
push
bt
bt
not
test
pushf
stc
shr
lea
jl
je
push
mov
mov
mov
adc
mov
lea
jmp
mov
push
jmp
test
jp
xor
xchg
jecxz
add
into
xchg
div
popf
mov
stos
pop
neg
enter
in
js
sub
rol
sub
hlt
mov
jae
sahf
dec
in
dec
jl
cmp
pop
sub
adc
mov
popf
mov
fidivr
jmp
pop
call
xchg
inc
mov
daa
loopne
test
mov
pop
test
jae
js
cld
dec
lock
dec
call
sub
pop
in
aaa
sbb
mov
ficom
jne
xchg
mov
push
cmp
jge
sti
mov
out
leave
int
ficom
js
mov
adc
xchg
pop
pop
xchg
and
ds
mov
mov
push
call
mov
lods
sahf
mov
sbb
lods
call
mov
sub
mov
push
inc
bound
pushf
into
out
or
fs
fnstsw
jmp
push
test
fistp
fucom
rol
nop
or
ret
push
mov
ins
dec
and
sti
sub
add
and
inc
shl
retf
iret
loop
cwde
jmp
mov
test
push
ja
pop
xlat
push
or
inc
shl
jbe
fsub
in
lahf
mov
push
cld
xor
xor
enter
push
ds
outs
mov
jae
adc
jmp
(bad)
int3
adc
fcomp
xchg
cmps
pop
inc
ds
push
or
fsubp
(bad)
jmp
xor
push
retf
cwde
mov
add
fmul
cmps
push
(bad)
aad
test
(bad)
aam
jl
cmps
jne
ficomp
pop
int3
inc
pop
sbb
cwde
(bad)
fwait
jbe
data16
mov
xchg
inc
mov
(bad)
pusha
aad
imul
pop
enter
inc
jl
pop
nop
(bad)
sub
fcom
ins
sahf
push
xchg
push
push
retf
mov
pop
push
int3
xchg
xchg
out
xchg
mov
push
inc
sbb
jns
shr
retf
call
stc
rcl
pop
aam
aad
xchg
shl
in
pushf
mov
aaa
fdivr
inc
xlat
xor
push
cli
aad
lods
dec
out
dec
push
aam
(bad)
mov
push
(bad)
(bad)
lock
in
movs
xchg
mov
mov
push
inc
or
dec
mov
je
dec
aas
mov
call
arpl
(bad)
out
sbb
pop
rcl
mov
mov
daa
mov
jb
or
cmc
fsubrp
and
int3
lds
call
enter
push
int3
pop
and
sbb
fidivr
je
aam
inc
retf
popf
ror
mov
dec
jecxz
fs
sub
cmp
pushf
sub
jl
stos
sbb
mov
call
mov
adc
mov
test
movs
js
mov
pop
mov
jp
into
repz
test
pop
sub
lods
dec
aam
pushf
pop
clc
pusha
adc
sbb
dec
fidivr
dec
imul
imul
cmp
call
sar
mov
enter
inc
sbb
test
js
cli
rcr
sahf
dec
aaa
adc
inc
push
mov
retf
retf
push
dec
adc
es
pop
jmp
lods
sbb
dec
sar
retf
movs
ror
lods
cdq
mov
ret
test
cdq
pushf
mov
cmp
test
loopne
mov
xor
mov
jge
stos
adc
sub
in
mov
mov
adc
fisttp
pop
mov
sbb
pop
cmc
dec
or
pop
pop
(bad)
int3
mov
pushf
adc
mov
(bad)
sar
jns
fcmovbe
test
xlat
inc
push
adc
ficom
sbb
pop
iret
(bad)
mov
pushf
xor
adc
int3
(bad)
shr
fs
sbb
xor
xchg
pop
sti
inc
pushf
ins
dec
sub
push
pushf
iret
push
and
pushf
sbb
aaa
ficomp
sbb
call
mov
sub
mov
pop
retf
sbb
mov
push
mov
xor
(bad)
stos
pushf
mov
jmp
mov
ret
dec
fwait
mov
add
ret
sbb
inc
jbe
(bad)
aam
lods
cmc
jo
int3
or
enter
mov
xchg
mov
mov
push
jo
pop
inc
std
dec
int3
mov
xor
jbe
dec
in
jb
push
jnp
stos
mov
mov
sub
imul
mov
dec
adc
iret
mov
pop
in
jecxz
jnp
push
pop
retf
shr
cmp
imul
dec
sti
xor
lods
sub
outs
and
movs
outs
por
mov
lods
les
movs
retf
ins
lods
pushf
jl
sbb
mov
xor
mov
or
cs
xor
mov
pop
cwde
imul
retf
add
push
xchg
dec
cwde
jl
retf
retf
dec
imul
fistp
dec
cmp
and
adc
data16
mov
mov
mov
sub
push
repnz
lods
xchg
fsubrp
ins
popa
sub
or
dec
sbb
xor
sbb
push
test
or
dec
jb
and
test
fsubrp
in
jns
mov
lods
sub
dec
push
aam
xchg
dec
cwde
jl
mov
cmp
cmp
mov
pushf
mov
daa
sbb
ss
xlat
dec
xchg
jl
pop
movs
fidivr
fnstenv
popa
std
and
mov
pushfw
or
xor
jmp
xlat
dec
and
cmp
dec
pop
retf
jmp
xchg
mov
sar
jnp
mov
mov
cdq
movs
jbe
adc
stos
js
int3
fistp
push
sbb
ins
cdq
jl
pushf
cmp
pushf
push
cmps
rcl
retf
cmp
fidiv
dec
dec
push
ja
push
test
sub
or
repnz
test
fistp
sbb
push
call
cmp
inc
sbb
lds
dec
jl
fisubr
mov
(bad)
lods
scas
jno
aam
fbld
sti
loopne
cmp
das
lods
enter
fidivr
pushf
jp
and
jb
lds
xor
sub
sbb
add
(bad)
jne
iret
in
mov
call
pop
jl
cmp
pop
retf
xor
fs
xor
(bad)
fstp
jo
adc
cdq
in
js
mov
push
lock
fild
sub
imul
mov
fwait
jmp
rcl
sar
push
pop
cmps
pop
test
ins
pop
pushf
push
jmp
mov
inc
or
mov
retf
test
aaa
mov
dec
pop
fimul
retf
add
mov
and
stos
jb
jb
pop
cdq
cmp
jno
retf
aaa
push
jmp
fwait
in
xor
cmp
jl
in
arpl
jmp
sub
cmp
fcomp
(bad)
fisttp
or
mov
jecxz
or
pushf
jb
ficomp
jle
retf
fucomi
rcr
mov
mov
scas
mov
jl
call
push
shl
mov
jmp
or
jmp
mov
fidivr
retf
xchg
retf
jmp
in
sub
cdq
call
bound
cwde
nop
fisubr
mov
sbb
jle
cdq
dec
jo
jl
retf
int3
test
mov
sti
cli
cmp
jb
dec
jo
pushf
je
mov
pop
imul
push
mov
(bad)
adc
mov
sar
jmp
sub
clc
jmp
loopne
xlat
fisubr
cmp
fwait
jmp
in
cmps
fisubr
ins
jno
cmp
mov
pop
cli
mov
push
dec
fwait
mov
jo
stos
jmp
sti
jecxz
mov
call
ins
mov
mov
jecxz
jp
mov
push
test
dec
jl
ficomp
(bad)
stos
xchg
rcl
jmp
cmp
leave
mov
cmp
jmp
in
xchg
ficomp
shl
jmp
ins
jp
jl
stos
int3
test
mov
mov
jb
rcr
retf
xchg
dec
aaa
not
shl
xchg
sub
lea
mov
inc
mov
push
jl
dec
mov
pushf
fidiv
xor
addr16
cmp
das
mov
jmp
cwde
stos
jp
xchg
les
mov
dec
fwait
int3
retf
jo
xor
int3
sti
cmp
fidiv
fsubrp
xor
retf
dec
push
sbb
retf
mov
fmulp
pop
sbb
stos
adc
or
scas
mov
icebp
ins
lods
movntq
out
jnp
dec
jl
dec
mov
daa
rcr
cmp
and
addr16
jmp
sub
add
icebp
sub
imul
fwait
or
mov
retf
jo
adc
aas
(bad)
mov
je
pushf
xchg
dec
(bad)
les
sub
mov
xchg
xor
fidiv
cmp
xor
sbb
xchg
ins
shl
aas
push
jbe
or
fstp
or
cmp
cmp
cdq
call
stos
mov
mov
cmp
mov
jmp
dec
mov
mov
cli
jp
leave
mov
jl
adc
test
mov
mov
mov
mov
jb
fimul
les
(bad)
mov
pop
mov
push
sbb
retf
retf
imul
call
inc
sbb
test
sbb
mov
dec
push
or
jno
call
mov
loope
adc
aas
jno
jl
ficomp
mov
mov
ficomp
mov
bound
mov
cmp
mov
mov
mov
fwait
sub
add
sbb
pop
sub
sti
cmp
fcmovu
in
shr
ds
pushf
sbb
or
outs
ins
cmp
cmp
popa
push
or
hlt
and
fisttp
stos
or
sti
cmp
in
std
inc
retf
sbb
jmp
jno
(bad)
pop
sub
stc
retf
push
sbb
stos
ficom
pop
and
mov
xlat
jmp
ret
cmp
(bad)
jb
sbb
push
pushf
int
sbb
leave
cmp
sub
mov
out
sub
jmp
sbb
ret
scas
jg
fidivr
push
push
sub
mov
jmp
jae
mov
loope
cli
mov
stc
test
jmp
in
mov
sub
outs
das
or
sbb
stos
sbb
cli
in
imul
int3
fistp
pop
sub
mov
mov
pushf
int
ins
jnp
sub
test
push
mov
lods
sar
fidivr
jae
mov
cmp
mov
xchg
mov
pop
jmp
add
cld
sbb
fidiv
mov
test
(bad)
pop
retf
jmp
mov
dec
loopne
and
push
cli
aam
mov
stc
lds
outs
pop
or
sub
dec
xchg
cwde
pop
sbb
jmp
mov
cmp
or
pushf
or
jl
leave
pop
sbb
cmp
call
sbb
pushf
pushf
jne
sahf
sbb
fild
jle
jl
xor
stos
hlt
fisub
sbb
dec
cmps
or
cwde
out
mov
dec
jne
sbb
sbb
or
sti
mov
add
(bad)
ins
xchg
mov
xchg
adc
sahf
sub
ror
cli
sbb
ror
mov
sti
call
pushf
pop
pop
pop
pop
cmp
pop
sbb
pop
stc
pop
jmp
pop
imul
pop
pop
pop
dec
pop
cmp
push
rcl
enter
(bad)
sti
test
push
sti
inc
sti
cwde
stos
rcr
ins
cmp
sbb
neg
daa
out
adc
adc
movs
sbb
jecxz
mov
sbb
inc
sbb
xor
and
add
adc
repnz
sbb
sbb
sbb
sbb
sbb
sbb
push
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
xchg
or
cmc
rcl
or
test
hlt
jns
ffreep
jmp
mov
shl
inc
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aaa
mov
fisubr
loope
aad
aad
xchg
xor
neg
out
add
add
fiadd
push
fiadd
ficom
add
and
ret
shl
sbb
iret
jns
inc
cmp
out
movs
fdivr
pop
retf
js
fcom
mov
dec
cmp
lea
jge
in
ins
in
int3
cmps
push
push
mov
pusha
inc
aas
fistp
fidiv
cli
push
mov
hlt
cmp
adc
pop
in
adc
inc
push
shr
rcl
mov
and
pusha
cmps
sbb
mov
(bad)
push
ret
add
sub
mov
ds
mov
dec
jg
(bad)
call
out
fwait
xchg
sbb
imul
fiadd
(bad)
(bad)
cmp
ror
sahf
sub
inc
jl
mov
dec
xchg
icebp
pop
mov
ret
shl
not
jge
cdq
mov
cmp
pop
dec
lock
xor
adc
sar
mov
fistp
or
clc
pop
ficomp
pop
adc
xlat
push
add
sbb
pop
pop
push
jp
cli
mov
neg
push
enter
push
and
pop
mov
shl
xor
sbb
xor
aad
cwde
jb
xor
and
push
push
aad
sbb
outs
xchg
pop
jg
(bad)
test
out
lahf
jbe
xor
aad
ficomp
sub
push
ror
repz
in
cmps
in
test
fldcw
pop
int3
sbb
xchg
mov
pop
shr
sub
mov
mov
stos
inc
jb
pushf
imul
mov
pushf
mov
test
jmp
test
retf
inc
sub
sub
xchg
not
das
pop
stos
test
adc
(bad)
mov
xchg
sbb
and
cwde
sub
iret
arpl
mov
jl
xor
retf
add
ins
js
cmp
cmps
inc
fs
inc
xor
sti
pop
stos
add
rcr
cmp
mov
test
fcom
leave
mov
xlat
sub
cmp
mov
arpl
cwde
outs
dec
sbb
mov
inc
sbb
dec
xor
and
mov
lock
fwait
cmp
xchg
js
cmp
retf
inc
lock
stc
inc
mov
mov
repnz
ins
xchg
mov
xchg
jge
mov
inc
cmp
mov
neg
pop
popf
pop
mov
mov
sub
dec
call
inc
loopne
clc
fadd
leave
stos
stos
mov
jbe
sbb
in
jmp
adc
push
mov
mov
mov
sub
pop
inc
mov
aaa
aad
sti
sti
ror
jmp
jns
fld
xchg
sbb
dec
les
cli
pop
adc
(bad)
repz
mov
out
stos
fisubr
je
xchg
sub
in
pop
inc
cmp
lods
xchg
retf
out
xchg
push
sti
pop
mov
sti
fistp
sbb
cmp
imul
clc
pusha
jp
imul
in
pop
mov
sub
movs
test
dec
ret
cmc
addr16
popf
adc
fistp
mov
mov
ins
push
mov
(bad)
mov
push
jne
sub
mov
out
retf
or
out
adc
sbb
xor
mov
mov
sti
sub
repz
xchg
jl
je
cmp
imul
rcl
ins
int3
int3
dec
push
out
pusha
loop
cmps
cmp
rcl
test
dec
(bad)
mov
xchg
xor
sub
adc
mov
out
mov
(bad)
pop
pop
mov
sub
jl
mov
xchg
daa
add
ins
test
jns
push
jl
imul
loopne
into
xchg
cmp
jp
sbb
imul
aaa
inc
xchg
test
pop
lea
sbb
add
mov
sbb
cwde
test
(bad)
dec
leave
out
xchg
push
call
call
pusha
inc
out
jae
(bad)
fcom
lods
fwait
mov
inc
int3
push
dec
inc
sbb
stc
or
rcr
ret
mov
fwait
jp
jmp
mov
mov
dec
retf
out
add
pop
retf
xchg
pop
push
inc
mov
scas
fwait
test
imul
mov
ja
sar
movs
cmp
stos
retf
fwait
jb
push
sub
movs
rcl
dec
sbb
stos
int3
arpl
sub
fwait
push
mov
or
inc
int3
call
cmp
sub
(bad)
fsub
ja
sbb
sbb
mov
fldcw
enter
lods
movs
cmp
mov
push
sub
repz
fisub
mov
inc
stc
scas
push
xchg
pop
adc
sbb
mov
iretw
mov
enter
fisttp
mov
sub
retf
ins
retf
cwde
or
in
dec
retf
retf
bound
pushf
lods
fdivr
pop
mov
jne
or
int3
push
loop
stos
jge
and
sar
rol
adc
adc
pop
in
pop
mov
lock
fs
jl
cmps
retf
jmp
sbb
jl
pop
in
cmp
jmp
stos
nop
cmp
xchg
les
or
mov
and
(bad)
(bad)
out
or
xchg
ja
cld
inc
int3
xchg
(bad)
(bad)
ror
sub
mov
sti
xchg
mov
dec
pop
lods
outs
adc
push
sbb
fist
sbb
vpsubsb
xchg
sub
lods
cmp
outs
push
mov
xchg
out
daa
sbb
stos
or
sbb
add
sti
pop
(bad)
jmp
adc
fiadd
cmpps
cwde
hlt
mov
test
mul
xchg
jg
or
push
fsubr
cld
push
push
mov
call
mov
enter
mov
mov
xchg
test
inc
xchg
jno
mov
inc
sbb
sti
mov
lock
dec
jmp
cmp
repz
(bad)
mov
fbstp
mov
call
cmp
dec
ret
dec
mov
gs
enter
lea
jb
test
cmps
and
mov
mov
jecxz
imul
sbb
sub
cmp
sbb
pop
neg
sbb
mov
ins
out
pusha
enter
nop
mov
ja
xchg
outs
mov
sub
mov
cmp
cmp
mov
adc
inc
fwait
inc
sbb
inc
adc
jb
sub
aam
fbld
mov
jbe
fst
arpl
cdq
sbb
push
(bad)
retf
fbstp
xchg
cmp
inc
inc
sub
mov
mov
mov
stos
adc
fwait
xchg
cs
jg
cmp
cli
jnp
fwait
sti
xor
xchg
pop
xor
cmp
fcmovu
mov
sbb
sahf
sub
ss
xchg
pusha
sbb
jmp
pop
fmul
call
scas
loope
clc
ficomp
mov
cld
outs
pop
dec
adc
xchg
sbb
inc
mul
repz
(bad)
push
adc
lahf
xor
jb
sahf
mov
into
cmp
push
push
lea
pop
or
sahf
mov
inc
lds
(bad)
adc
icebp
pop
mov
fdivr
cmp
mov
cmp
pop
or
inc
cmps
pusha
test
xchg
ror
pop
or
pushf
sub
cmp
inc
jg
cmc
pop
mov
retf
int3
xchg
test
inc
and
or
sbb
mov
scas
jl
loop
dec
push
mov
adc
sbb
cdq
adc
xchg
jl
mov
add
(bad)
rcr
xor
pop
jb
aaa
sbb
jl
or
fiadd
dec
and
call
mov
push
jno
test
cwde
sti
repnz
hlt
sbb
into
mov
mov
test
stos
inc
shl
jmp
mov
inc
scas
cmps
cmps
xchg
scas
lods
inc
cld
inc
push
scas
and
cmp
pop
fstp
into
cli
test
retf
xchg
jo
pop
xchg
enter
call
stos
stos
fwait
sbb
dec
je
or
aas
fwait
add
ins
adc
clc
popf
pop
jmp
inc
mov
cmp
mov
jl
in
fistp
xchg
retf
retf
imul
fist
(bad)
ins
arpl
and
mov
pop
cmc
sbb
int3
or
cld
inc
pop
add
ds
mov
mov
jno
jmp
inc
into
mov
mov
mov
popa
fs
or
call
mov
(bad)
and
popf
out
mov
aaa
and
cld
loop
lods
pop
cld
xchg
push
(bad)
(bad)
adc
mov
push
pop
popf
enter
sub
jns
arpl
inc
and
xchg
dec
jb
cwde
aam
test
aaa
inc
pop
dec
aam
pop
jne
dec
pop
je
(bad)
mov
push
mov
sbb
or
xchg
jne
shl
adc
cld
inc
fcmovnb
xchg
xchg
adc
retf
sub
xor
inc
fistp
cmp
cmp
dec
retf
dec
dec
jg
xor
xor
add
iret
lods
js
add
dec
pop
rcr
movs
shl
enter
cmp
cwde
push
xchg
and
mov
or
ret
sbb
ret
xchg
cdq
ja
mov
jp
retf
xchg
jns
ins
or
pop
(bad)
fdivr
mov
xchg
(bad)
(bad)
fs
(bad)
xor
cdq
mov
sbb
lds
pop
ret
cdq
jae
dec
sbb
shl
stos
retf
(bad)
jmp
leave
add
int3
lods
and
call
test
sub
add
pushf
cli
inc
or
or
or
push
jnp
cs
mov
fwait
test
mov
jmp
xchg
aam
dec
or
or
cmp
pop
push
cmps
xchg
fdivr
sar
mov
fsubr
out
ror
cli
pushf
xor
inc
dec
movq
les
lods
pop
inc
sbb
mov
jb
repz
inc
inc
pop
inc
cmp
jg
sub
cdq
xor
mov
push
inc
test
push
jecxz
inc
mov
stos
or
pop
retf
push
dec
adc
mov
push
inc
mov
fs
adc
adc
(bad)
adc
inc
iret
mov
and
xchg
sub
cmps
push
xchg
repz
idiv
aas
xor
lahf
and
adc
xchg
ret
aam
or
inc
mov
lock
ficomp
jmp
out
(bad)
fistp
pop
or
mov
or
mov
jle
add
int3
or
jl
ret
shr
sub
(bad)
retf
sbb
push
in
inc
or
sub
jle
mov
or
loop
lahf
cmp
xor
xor
mov
sub
xlat
sbb
inc
fild
jge
dec
lods
mov
mov
mov
mov
mov
(bad)
iret
sti
xchg
xchg
pushf
cwde
cmps
dec
out
mov
inc
pop
dec
and
pop
dec
jnp
xchg
adc
xor
mov
dec
pop
inc
imul
inc
stos
ret
pop
test
mov
mov
inc
jnp
sub
xor
fcmovnu
shl
sub
fadd
mov
stc
xor
ins
xchg
jg
sahf
dec
and
push
dec
sbb
jl
out
or
jne
adc
call
sub
push
shl
cmp
sbb
sbb
cmp
jno
loope
cwde
or
jg
aas
stc
push
cmp
lods
aad
sub
fild
enter
sub
fst
dec
fnstenv
fs
and
scas
mov
inc
std
xchg
rol
lock
push
js
sbb
cld
push
loop
mov
outs
xor
dec
xor
lods
(bad)
mov
xor
ret
repnz
xchg
cwde
cwde
sub
je
sub
sub
retf
stos
pop
mov
stos
inc
mov
adc
mov
sahf
mov
mov
mov
retf
or
lods
push
xor
cmps
inc
xchg
mov
ins
test
sti
leave
jmp
cmps
or
js
push
adc
fmul
call
mul
fwait
pushf
dec
sbb
jl
cmp
xchg
dec
(bad)
and
int3
sbb
jne
mov
xor
clc
ja
call
mov
add
cmp
inc
jle
retf
or
pop
cwde
cmove
xchg
test
dec
sbb
cmp
imul
mov
or
in
xor
push
xchg
mov
mov
jge
push
sbb
daa
mov
inc
mov
pop
cmp
out
cmp
jnp
sub
mov
jns
(bad)
sub
and
in
(bad)
xchg
rcl
call
jbe
push
mov
dec
int3
pop
sbb
mov
stos
xchg
pushf
icebp
cmp
bound
cwde
dec
mov
ficom
fidiv
and
sub
ds
int3
xchg
adc
shl
add
xchg
aad
adc
or
jne
dec
leave
inc
or
pop
pop
xchg
sti
push
aad
(bad)
pushf
dec
dec
mov
pop
pop
xor
popf
mov
scas
movs
pop
stos
mov
add
cmp
pop
cld
adc
cwde
std
lods
xor
out
stos
mov
or
cmp
mov
sub
cmp
aaa
sub
mov
jne
mov
scas
lahf
inc
call
popa
iret
push
mov
imul
int3
sahf
fimul
cmp
mov
pop
mov
not
push
lahf
daa
mov
jg
xlat
xor
xlat
cwde
jl
je
sti
cmp
sub
dec
mov
xchg
movs
fistp
jbe
jle
mov
or
inc
inc
dec
mov
scas
mov
(bad)
out
repz
int
xchg
movs
mov
sub
ins
mov
pusha
fwait
rcl
sub
mul
xor
push
dec
cmp
jp
adc
aad
retf
xchg
push
and
loop
in
push
punpckhdq
xchg
imul
aam
sbb
loop
mov
out
cmp
retf
sar
or
ja
rol
fdiv
jb
dec
and
repnz
mov
into
ret
mov
pushf
jl
push
fidiv
jmp
ror
jno
mov
popf
adc
jne
xchg
sbb
lods
in
or
xchg
mov
mov
int3
push
xchg
jg
pusha
std
inc
xchg
or
dec
out
mov
retf
fisttp
xor
jecxz
retf
imul
sbb
mov
jge
scas
inc
lea
daa
xchg
push
pop
cmp
push
jp
daa
adc
ins
dec
dec
jo
nop
icebp
xchg
retf
push
cdq
rcl
dec
xorps
int
(bad)
ficomp
(bad)
ficom
push
mov
mov
push
xchg
jmp
push
stos
mov
fisubr
(bad)
mov
jae
sub
pop
into
lods
arpl
mov
mov
jmp
int
add
fcmovne
aas
mov
cmps
cmp
sbb
mov
stos
mov
and
call
xlat
jne
mov
int3
pop
push
mov
dec
adc
stos
or
adc
iret
adc
push
push
xchg
cmp
inc
mov
cdq
out
xchg
push
or
inc
lods
fucom
ss
retf
aas
adc
(bad)
sti
jmp
sub
outs
cs
dec
mov
adc
adc
sbb
dec
adc
or
aam
scas
loope
enter
out
and
(bad)
and
outs
sbb
xor
retf
xchg
jmp
pop
sahf
out
push
push
mov
cwde
call
xchg
push
mov
jnp
cwde
fcomp
fimul
or
jmp
repz
cmp
sbb
aad
call
adc
or
cmp
mov
add
inc
or
and
mov
xor
jp
inc
sub
test
sub
jp
push
jnp
gs
sub
ins
ins
push
inc
call
jmp
retf
ins
stos
jns
imul
xchg
mov
cmp
pusha
fdivr
cld
or
lods
ss
int3
fsqrt
pushf
in
push
lock
scas
lock
adc
sub
or
es
sbb
or
ror
cmp
rcl
lahf
retf
push
or
in
les
adc
mov
mov
retf
jb
push
out
test
retf
fiadd
int
push
out
push
mov
dec
sbb
sti
inc
(bad)
in
outs
pop
fadd
outs
lock
int3
(bad)
sti
mov
out
icebp
ss
mov
repnz
xchg
push
xchg
sbb
mov
stos
mov
test
pop
mov
dec
cmp
mov
pop
cmp
xor
in
js
pusha
adc
xchg
movs
fdiv
cld
mov
int3
call
push
push
dec
jl
xor
dec
or
xor
jl
es
jl
retf
sub
aaa
cld
mov
fisttp
retf
add
outs
jmp
aaa
ins
stc
ins
or
cld
xchg
push
arpl
ret
mov
xor
mov
and
cld
test
sub
or
adc
xchg
sti
push
xchg
push
or
sbb
movs
mov
jnp
hlt
mov
fisttp
and
repz
pop
inc
stos
jmp
mov
jecxz
retf
shl
xchg
push
jecxz
or
je
pmuludq
cli
popa
cmp
cli
fucom
or
cmp
pushf
cwde
fwait
pop
sahf
mov
popa
adc
xor
xchg
and
out
icebp
push
push
push
int3
inc
and
cmp
out
mov
cmp
cdq
dec
fadd
fcmovbe
repnz
mov
fstp
cmp
js
or
xchg
sbb
int3
xor
dec
push
movs
nop
pop
(bad)
fbstp
cld
xchg
in
bound
cmp
xchg
das
xchg
test
sbb
sbb
dec
inc
(bad)
lock
or
les
cdq
lods
lock
mov
retf
sub
(bad)
mov
imul
cmp
clc
mov
cmps
mov
pop
jae
inc
or
fsub
test
mov
xchg
sti
stc
mov
das
(bad)
push
int3
jnp
sbb
lds
cld
or
adc
mov
add
pop
sahf
mov
out
loope
dec
adc
or
push
js
and
pop
xor
pop
sti
test
sbb
pop
out
sub
push
mov
(bad)
mov
cmp
mov
es
fucomip
mov
icebp
arpl
adc
fld
sub
mov
pop
adc
cdq
mov
add
shl
mov
jmp
sti
ror
ror
sbb
or
fdiv
cli
pop
in
jmp
hlt
adc
addr16
jnp
mov
sbb
int
clc
iret
jl
sub
cld
popa
scas
add
inc
rcl
xchg
xchg
sbb
adc
das
sub
inc
jmp
fwait
dec
inc
or
call
or
push
sub
repz
loope
sar
cdq
xchg
out
push
push
or
xchg
inc
xor
jg
stc
xchg
adc
rol
cmp
mov
loope
test
push
or
idiv
int3
movs
push
sbb
fcom
loop
jbe
ins
push
hlt
or
inc
cld
je
dec
out
push
and
pop
lods
dec
ret
ins
add
js
jecxz
retf
mov
pop
mov
xor
push
mov
pop
div
loop
pop
pushf
call
into
mov
ins
pusha
inc
rcl
out
fsubr
mov
rcr
pushf
or
jae
cmp
retf
adc
ja
mov
jae
(bad)
mov
fisttp
jae
js
push
pushf
xor
jmp
dec
dec
jg
call
push
adc
mov
sub
psubsw
outs
dec
and
dec
fwait
cmp
sbb
add
imul
stos
fwait
push
leave
fistp
rcl
adc
cli
add
arpl
repz
dec
and
jl
mov
scas
repz
ss
sbb
hlt
test
imul
dec
cmp
xchg
or
retf
mov
in
add
push
push
sbb
mov
cld
sbb
cmps
or
cdq
sbb
sahf
or
aaa
std
icebp
cmp
mov
dec
js
cwde
pop
pop
repz
repnz
mov
icebp
les
pop
push
mov
mov
sahf
xor
outs
popf
ins
mov
jns
pusha
movs
iret
inc
(bad)
popa
fiadd
pop
cmp
mov
pop
je
test
mov
pop
aad
pop
dec
mov
imul
push
retf
add
movs
mov
loope
mov
xchg
jmp
call
pop
lea
adc
fcmove
(bad)
lock
mov
sbb
shr
inc
shl
iret
mov
lahf
xor
pop
stc
cwde
jg
pop
or
mov
xor
cld
fimul
jge
not
seta
cwde
ret
mov
sub
int
out
test
ja
cmp
repz
pause
out
mov
xor
les
jle
fadd
int3
aaa
ret
add
jmp
pop
or
xchg
adc
dec
fucomi
mov
cli
(bad)
sbb
or
adc
mov
xchg
mov
jp
lock
sub
lahf
fs
call
sbb
pushf
inc
jmp
jmp
dec
(bad)
pop
imul
xor
cmp
jo
(bad)
dec
inc
mov
mov
add
xchg
xor
cli
mov
test
pop
into
mov
adc
int3
inc
inc
pop
jge
adc
inc
pop
xchg
push
xlat
in
jb
push
lods
sbb
xchg
jae
jae
push
aaa
lods
idiv
(bad)
int3
test
ins
cmp
mov
out
out
jb
out
adc
xor
out
mov
gs
inc
dec
xlat
rcl
(bad)
fistp
adc
add
imul
xor
xlat
pop
call
fwait
add
dec
(bad)
mov
cmp
mov
sbb
xchg
sbb
int3
jmp
ret
int3
retf
or
or
int
xchg
cwde
sbb
jnp
cdq
jmp
dec
xor
push
gs
(bad)
mov
or
sbb
loope
fidivr
rcr
call
mov
add
fist
sti
loop
jg
sub
sub
ror
mov
push
test
push
push
or
cld
outs
and
jl
aam
aam
popa
mov
loopne
fimul
scas
dec
call
push
jg
adc
(bad)
div
idiv
loopne
or
sub
jb
jns
out
jl
hlt
add
mov
push
popa
inc
add
add
jo
and
repz
lods
and
(bad)
pop
in
jo
fst
mov
scas
sbb
imul
sbb
lahf
mov
call
mov
or
xor
pop
cwde
adc
sbb
mov
dec
ficomp
push
sub
jb
pop
or
push
mov
mov
and
xchg
xchg
push
sti
int
add
pop
inc
pop
jp
xor
adc
(bad)
cmps
mov
inc
cmp
xor
jno
cmp
arpl
stos
call
inc
and
xchg
fwait
aam
xchg
push
mov
cmp
push
repz
cwde
adc
push
pop
ins
test
cld
jmp
(bad)
outs
repnz
int3
push
leave
dec
movs
sub
aaa
icebp
sti
sti
lds
xchg
mov
mov
xchg
pushf
push
test
pop
mov
dec
xchg
adc
ds
pop
repz
dec
jecxz
pop
add
fild
cmp
pop
mov
pop
adc
aad
jg
push
push
xor
mov
or
xchg
cli
push
and
mov
and
xor
sar
mov
imul
into
enter
jae
jge
jnp
xor
cdq
sbb
arpl
stc
fwait
xor
xchg
and
adc
xchg
sbb
leave
js
mov
iret
int3
lds
xor
(bad)
jno
aad
leave
cmp
es
add
xor
xor
daa
das
and
scas
mov
lods
pop
xchg
sub
mov
ins
clc
mov
dec
sub
xchg
inc
mov
jae
xchg
lods
daa
mov
imul
cli
sti
mov
pop
cmc
xor
pop
push
push
(bad)
in
test
call
daa
int3
pop
dec
fwait
arpl
bound
cli
push
imul
jno
jo
inc
jle
jge
cmp
enter
adc
lods
lds
enter
xchg
cmp
fistp
rol
xchg
inc
dec
inc
pop
inc
ret
inc
mov
inc
dec
mov
dec
stos
dec
ret
dec
dec
inc
sar
out
mov
or
push
ret
call
jmp
stos
pop
jb
dec
sti
popa
scas
mov
cmps
inc
push
mov
call
push
cwde
pop
pop
inc
pop
fwait
test
pop
dec
pop
pop
inc
jp
inc
popa
or
enter
jle
pusha
pop
mov
mov
fwait
jns
nop
lock
test
out
xor
out
pusha
clc
and
out
out
fimul
mov
and
pop
int
adc
cld
in
popa
(bad)
jno
pop
sar
xlat
in
les
and
or
neg
fdivr
pop
rcr
jns
or
xchg
mov
xchg
in
sbb
lods
aas
mov
adc
in
dec
cdq
jo
xchg
pusha
xlat
pop
add
imul
mov
sahf
out
dec
imul
out
int
add
and
dec
jge
rcl
out
dec
imul
mov
lock
sbb
xchg
cli
imul
enter
aas
call
jb
or
inc
call
mov
mov
lods
(bad)
dec
sbb
rcr
mov
fwait
jnp
sbb
sbb
std
mov
mov
aaa
test
cmp
std
clc
fdiv
or
or
inc
pop
jmp
dec
data16
fnstcw
cdq
sbb
dec
or
out
mov
in
aam
fisttp
sbb
ins
sbb
cmp
aam
cbw
retf
push
std
dec
and
retf
jne
pop
lods
mov
add
push
push
mov
lods
test
cmp
pop
sub
jl
stc
das
div
clc
jmp
pushf
sub
jle
sbb
imul
cld
nop
cmp
aaa
xchg
dec
pop
test
repnz
cmps
popf
sbb
in
or
jl
ins
push
retf
mov
inc
mov
cwde
xor
cmp
ficom
push
mov
jnp
push
mov
jbe
push
cmps
mov
mov
int3
(bad)
mov
imul
lock
push
pop
jbe
xchg
sub
dec
push
jnp
fdivrp
and
push
mov
dec
jnp
jl
ss
sub
xchg
jle
pushf
fcmovnu
mov
lods
push
outs
lods
jp
jl
(bad)
hlt
movs
mov
test
pushf
jp
fdivrp
dec
jmp
sahf
push
push
push
adc
mov
aad
leave
pop
mov
int3
push
or
test
pop
and
int3
outs
sahf
or
fnstsw
mov
int3
lahf
inc
clc
popf
cwde
jnp
push
aad
je
gs
mov
pop
cwde
xchg
cmp
push
mov
jmp
sbb
fwait
xchg
pop
mov
jnp
rcl
sbb
mov
sbb
fldl2e
sbb
into
sub
xchg
sahf
ins
pop
test
test
cmp
sbb
pushf
cwde
ret
fcmovb
stos
xor
pushf
pop
inc
pop
call
pop
fwait
add
mov
or
sbb
rcl
test
xchg
sub
xchg
or
rol
sbb
and
xchg
pop
push
pop
inc
pop
and
jp
cmp
dec
pop
sbb
jecxz
pop
push
sub
or
clc
test
mov
pop
push
xchg
hlt
les
imul
in
push
jmp
les
sub
pop
jp
aad
inc
sbb
jecxz
inc
push
and
jmp
dec
hlt
test
mov
xor
je
inc
jb
addr16
rol
stc
jnp
xchg
adc
push
mov
xchg
cld
addr16
repnz
push
arpl
push
fwait
mov
leave
pop
jmp
sbb
xor
test
add
push
adc
out
or
jae
jg
bound
push
mov
int3
push
ds
lock
mov
push
push
jbe
sbb
cld
int3
imul
push
dec
pop
adc
sar
inc
mov
js
mov
push
cld
fdivp
or
(bad)
pop
sbb
adc
cmp
lods
jo
and
sub
int
cwde
sti
loope
mov
inc
retf
sbb
and
nop
sbb
out
nop
mov
sbb
fwait
jb
xchg
jge
xor
cmp
and
loop
jmp
(bad)
scas
sbb
jo
inc
call
xchg
ret
xor
sbb
ins
sub
xor
fist
jecxz
jno
lds
aas
mov
sub
popf
xor
(bad)
fsubr
test
pop
fiadd
mov
sar
cmps
popa
inc
or
iret
aad
into
sub
xchg
jae
mul
jmp
cli
jmp
xor
jle
arpl
cwde
retf
fwait
xor
js
xchg
push
pop
push
repnz
aad
iret
or
iret
movs
cld
add
ins
xchg
retf
lods
mov
or
(bad)
loop
pop
adc
mov
jle
test
inc
popf
loopne
or
jle
arpl
xor
ffreep
cwde
sahf
mov
fwait
leave
mov
iret
inc
mov
dec
stos
test
nop
ins
add
mov
lahf
into
les
not
sbb
gs
jmp
cmp
mov
mov
sar
pop
jae
xor
adc
bound
jno
push
add
mov
push
jnp
pop
out
lods
fwait
in
mov
sbb
leave
push
stos
jmp
and
adc
or
adc
(bad)
ja
cmp
cld
sbb
jle
inc
jge
loopne
ins
call
xchg
sbb
cwde
sbb
sub
nop
pop
cmp
repnz
into
inc
fwait
pop
icebp
retf
pop
pop
sub
and
add
pop
adc
jecxz
mov
and
ficom
aad
pushf
mov
adc
ds
add
and
push
mov
pop
loope
cmps
dec
pop
add
push
mov
enter
(bad)
jns
js
shl
int3
mov
nop
cld
adc
int
pop
ins
pusha
mov
dec
in
sub
inc
(bad)
aas
xor
mov
jmp
sbb
sbb
xchg
into
sbb
daa
pop
pop
pushf
adc
loope
ins
mov
mov
(bad)
aam
lds
aaa
mov
ins
inc
xchg
xor
jns
add
cmp
adc
popa
mov
ret
in
push
jp
adc
add
test
jmp
mov
not
ror
push
aas
sbb
in
sbb
fisubr
into
scas
call
ins
jge
or
les
hlt
mov
out
push
xchg
mov
fldcw
mov
fstp
enter
mov
add
sbb
shl
fld
imul
push
scas
aam
js
out
jle
arpl
inc
cmp
inc
or
dec
mov
pop
mov
mov
sub
dec
adc
enter
shl
push
mov
mov
call
adc
dec
sbb
cmp
adc
xchg
cmp
retf
clc
aas
pop
aaa
out
ss
arpl
add
pop
or
xchg
push
jmp
or
lods
pop
push
jmp
jp
adc
mov
jbe
test
xor
xchg
cmp
cli
mov
imul
mov
xor
xchg
cmc
add
xor
jmp
push
in
jmp
into
mov
stc
mov
call
xchg
mov
sbb
iret
mov
int
mov
mov
cmovo
fdiv
in
aam
add
js
lods
fwait
add
repz
add
sar
add
push
push
inc
mov
xor
push
dec
pop
xor
stos
fnstcw
xchg
sub
mov
sahf
or
xchg
mov
test
lea
and
sub
push
into
dec
das
mov
rcr
cmp
cmc
adc
test
push
pop
addr16
and
mov
daa
in
mov
lods
xor
add
bound
dec
pop
inc
and
test
push
xchg
aad
cs
mov
xor
cmp
xor
rep
imul
shr
call
retf
sub
aaa
repnz
mov
imul
fcmovne
call
dec
fmul
cmp
pop
pushf
dec
cmp
xchg
fst
sub
push
cmp
sub
push
std
mov
fwait
call
call
inc
arpl
lahf
int3
scas
add
fwait
lods
adc
xchg
loope
pop
idiv
aas
pop
ud1
pop
mov
outs
adc
push
add
dec
call
cwde
cmp
xchg
sar
jae
or
pop
arpl
sub
cmp
inc
neg
div
xor
sbb
fs
out
addr16
add
loopne
lods
sub
dec
in
ins
mov
sahf
dec
sub
call
mov
cs
inc
adc
add
in
mov
(bad)
ret
cli
mov
sub
xlat
bound
and
add
loopne
ss
fdiv
and
enter
sub
enter
int3
xchg
sub
clc
sub
mov
mov
xchg
sbb
inc
dec
dec
push
(bad)
dec
popf
sbb
pop
repnz
pop
xchg
pop
idiv
sub
adc
jl
out
int3
stos
jmp
cmp
dec
jb
test
cs
aad
mov
jecxz
push
in
and
cld
mov
neg
loope
clc
sti
or
sub
xor
add
xchg
pop
fcomip
add
jnp
adc
xchg
sar
push
cmp
push
push
pop
sbb
sub
loope
inc
int3
stos
inc
push
mov
pop
out
scas
imul
pop
retf
loope
call
fisubr
xchg
mov
add
adc
pop
inc
mov
outs
lods
lds
mov
or
mov
mov
mov
push
adc
not
xchg
outs
daa
mov
sbb
dec
mov
fbstp
sahf
mov
xbegin
push
ret
cmp
in
daa
add
inc
xchg
ror
loope
xor
idiv
xor
cmps
push
fdiv
addr16
ins
xchg
sbb
fs
mov
dec
lods
or
push
dec
aam
inc
loopne
dec
sahf
and
mov
mov
push
out
and
dec
add
dec
jb
jp
xor
jle
xchg
retf
in
fldcw
xchg
mov
cmp
push
mov
sbb
xchg
ret
std
push
inc
mov
loop
(bad)
cmp
push
test
mov
cwde
bound
iret
lahf
(bad)
test
pop
dec
punpckldq
fcomp
jg
int3
(bad)
pop
xchg
push
or
retf
dec
(bad)
dec
sbb
repz
(bad)
arpl
call
or
and
sub
popf
push
pop
mov
daa
loopne
cld
dec
mov
sub
les
push
jl
mov
ret
int3
cli
movs
xlat
movs
xchg
dec
dec
cmp
mov
or
sti
mov
repz
std
lods
pop
mov
xchg
sahf
xor
dec
mov
cmp
div
ins
fisub
sar
dec
mov
xchg
je
cmp
cli
xchg
adc
std
sub
add
jo
sbb
or
push
push
adc
aaa
and
jmp
fcmovne
inc
clc
(bad)
retf
mov
xchg
mov
xchg
sbb
mov
mov
enter
inc
xchg
scas
into
mov
pop
cmp
adc
fisubr
add
pop
je
mov
mov
xchg
xor
pop
dec
pop
add
or
adc
cmp
jp
clc
sub
hlt
or
fistp
pop
sbb
mov
dec
or
cmp
sbb
(bad)
or
jge
jl
push
movs
cmp
rcr
ficom
sahf
fistp
push
pop
dec
retf
pop
xchg
push
rcr
adc
rcr
sahf
sbb
mov
ficomp
sbb
pop
clc
cwde
call
push
call
adc
push
call
adc
push
call
push
sti
pop
stos
pushf
neg
repz
pop
jmp
out
jecxz
out
push
out
xchg
out
aad
adc
out
shl
adc
sub
loop
loop
loop
repz
call
shr
fwait
push
enter
inc
aam
(bad)
jl
pop
jne
push
mov
mov
fisub
je
mov
jp
push
or
fs
cmp
push
enter
inc
sbb
push
dec
xor
jmp
mov
push
xchg
cmps
jge
stc
sbb
pop
mov
sbb
fidiv
fst
sbb
in
jp
sub
mov
cmp
xchg
leave
scas
inc
or
test
pusha
pop
sbb
rcl
ret
cmpps
cmpps
push
jno
(bad)
pop
fnsave
jl
jmp
sbb
mov
sbb
(bad)
bound
adc
mov
sbb
stos
shl
sbb
xor
in
test
pushf
dec
fdivr
pop
or
sbb
fwait
icebp
sbb
pop
sti
or
sbb
fwait
jo
out
mov
adc
pop
cmp
mov
js
sbb
pop
jnp
mov
pop
test
fidivr
mov
inc
mov
mov
inc
xchg
idiv
jge
gs
test
movs
fwait
in
bound
outs
xchg
in
jmp
push
push
and
mov
jbe
cmc
xchg
add
push
sbb
loope
push
aad
xchg
shl
pop
push
out
jg
in
jns
test
cmp
pop
in
or
ja
xchg
jno
fisubr
stc
call
push
or
mov
xchg
icebp
push
call
jbe
xchg
or
xor
sbb
(bad)
(bad)
sbb
retf
sbb
dec
mov
xchg
xlat
jbe
mov
lea
adc
fwait
sahf
or
dec
push
retf
mov
push
or
fwait
jbe
push
jb
push
ja
push
mov
mov
popw
in
cmc
enter
cmps
dec
xchg
sbb
xchg
jb
adc
xchg
leave
mov
dec
xchg
cmps
pop
fst
or
data16
aas
mov
pop
sbb
pop
jnp
inc
xchg
movs
imul
jbe
lahf
and
sub
mov
ss
mov
dec
mov
es
pop
jbe
mov
jnp
into
cmp
test
and
repz
(bad)
pop
js
lods
xchg
daa
pop
clc
mov
popa
iret
cdq
xor
pop
mov
push
or
jns
mov
mov
clc
jnp
sub
pop
cmps
or
xor
daa
ficom
fiadd
fsubrp
xlat
int3
mov
mov
push
aaa
daa
enter
jmp
ja
movs
out
nop
mov
out
xchg
cli
aad
xchg
jno
mov
mov
inc
fidiv
push
int3
repz
lahf
mov
shr
and
xor
push
add
pop
dec
test
enter
jae
shl
mov
dec
cmps
jbe
and
add
popf
adc
jnp
mov
iret
mov
ss
rcr
ror
mov
dec
rcr
aad
pop
aad
inc
test
mov
xor
add
mov
lock
cmp
ret
rol
push
rol
je
mov
mov
out
repz
adc
pushf
jle
lock
xor
sti
mov
sti
std
dec
ffree
xchg
(bad)
rcr
push
mov
cwde
clc
add
mov
xchg
push
movs
rcr
mov
jnp
push
push
sub
test
inc
dec
jo
inc
pushf
mov
xchg
mov
mov
jl
(bad)
cmps
sbb
or
xchg
mov
enter
aaa
out
mov
push
jecxz
mov
mov
inc
int3
retf
pop
in
add
mov
or
cmp
mov
or
xchg
or
fst
or
xchg
or
sbb
fdivr
sbb
sbb
sub
or
pop
inc
sub
xchg
inc
or
push
or
push
xchg
or
lock
xchg
or
mov
stc
adc
fimul
cmc
or
retf
mov
dec
mov
or
pushf
mov
pop
mov
or
xchg
or
push
mov
or
and
pushf
jns
sbb
inc
shr
neg
jb
or
dec
mov
stos
jge
aas
or
(bad)
mov
sub
or
lea
cmp
sbb
or
mov
pushf
neg
adc
enter
and
pushf
test
pop
mov
lods
sar
or
jbe
pushf
add
pushf
and
pushf
mov
or
sub
or
pushf
or
pushf
pop
int
pop
mov
call
push
popa
or
jae
pop
(bad)
mov
or
pushf
add
pushf
and
pushf
imul
push
sbb
dec
pushf
or
mov
pushf
or
pushf
pop
std
mov
mov
or
pushf
jns
mov
or
cmps
pushf
or
aas
pushf
or
pop
mov
or
pushfw
or
dec
pushf
or
mov
pushf
or
pushf
pop
push
mov
mov
or
pushf
jns
cmc
pushf
or
in
or
out
pushf
jnp
pop
pop
mov
or
pushf
mov
push
test
ds
or
push
pushf
or
dec
pushf
or
mov
pushf
inc
dec
xchg
mov
or
pushf
and
pushf
jns
in
or
aam
or
out
pushf
imul
mov
or
pushf
add
pushf
and
pushf
imul
xor
or
dec
pushf
or
mov
pushf
or
pushf
pop
jle
xchg
mov
or
pushf
jns
jecxz
or
rcr
mov
pushf
sbb
xchg
pushf
add
pushf
and
pushf
imul
push
pushf
add
pushf
and
pushf
imul
adc
add
pushf
or
pushf
add
pushf
and
pushf
jns
mov
or
mov
cmp
and
or
test
into
mov
add
pushf
and
pushf
imul
add
icebp
mov
pushf
or
pushf
add
pushf
and
pushf
imul
xchg
dec
or
sbb
aas
fisttp
xchg
jns
push
fisttp
loope
dec
or
mov
pushf
or
pushf
add
pushf
int
test
pushf
or
rcr
sbb
out
fistp
pop
fild
add
(bad)
or
fstp
inc
fisttp
pop
and
or
fild
or
pushf
and
pushf
scas
aas
mov
sbb
iret
je
mov
fisttp
mov
fcmovnbe
dec
enter
outs
fld
dec
pushf
lea
fadd
mov
xchg
push
or
scas
enter
enter
enter
imul
dec
fisttp
mov
fisttp
fild
or
(bad)
or
fstp
push
outs
fisttp
dec
fisttp
mov
fisttp
fistp
ficomp
movs
jns
push
fisttp
std
fisttp
mov
fcmovnb
mov
mov
fisttp
cli
or
jge
xchg
jg
ins
fisttp
pop
fisttp
mov
fisttp
or
popa
fisttp
cmp
pushf
test
mov
push
cmps
sub
test
int3
adc
dec
sti
dec
jmp
cld
sbb
sbb
daa
push
int3
clc
aad
in
adc
push
frstor
xchg
sbb
test
lods
inc
jmp
cwde
out
and
(bad)
loope
or
popf
call
cmp
xor
sbb
into
lods
jae
call
jge
cli
inc
cmps
push
mov
xchg
fcmovbe
mov
int3
mov
fwait
les
sub
pop
sbb
inc
pop
push
pop
cmps
fistp
xchg
pop
xor
cdq
push
pop
(bad)
cmp
or
inc
jmp
ins
sbb
push
fnstcw
xlat
aad
add
inc
fdecstp
pop
and
cs
dec
retf
icebp
pop
mov
cs
stc
mov
movs
ret
mov
sbb
jl
stc
sti
mov
(bad)
xchg
xchg
sbb
inc
fcom
stos
jnp
mov
(bad)
xchg
in
les
pushf
cwde
pop
sti
test
cmp
(bad)
jge
xchg
movs
add
jnp
xlat
mov
pop
inc
dec
call
dec
rol
inc
jl
cld
ins
lock
mov
dec
movs
nop
sahf
push
add
mov
test
mov
add
sahf
xlat
dec
dec
aad
cmp
rcl
cwde
dec
outs
push
cs
push
push
pushf
js
mov
stos
retf
xor
mov
cdq
jl
mov
sbb
in
mov
test
(bad)
fistp
sub
es
jmp
fsubr
(bad)
jns
in
test
sbb
jl
pop
shr
pop
sbb
sub
xchg
mov
push
mov
les
sbb
cmp
aam
sbb
push
fcomi
ss
cmp
fwait
cmp
fwait
lds
call
fstp
adc
push
ins
pop
test
stos
xor
mov
fwait
mov
push
jmp
sbb
outs
pop
lods
les
movs
mov
repz
enter
pusha
test
call
test
movs
sbb
push
xchg
push
pop
js
pop
sbb
inc
mov
fsubr
adc
mov
cmp
jl
pop
retf
mov
push
(bad)
fist
xchg
pop
mov
sbb
test
mov
lds
dec
fistp
repnz
inc
mov
sbb
sbb
ficom
pushf
push
jge
retf
pop
sbb
fild
ret
(bad)
sbb
fwait
xchg
mov
in
repz
aad
ins
xchg
cmps
push
or
daa
enter
inc
cmc
leave
xchg
addr16
in
(bad)
cli
mov
pop
or
mov
fld
xchg
push
and
xlat
popf
cmps
out
sub
aad
mov
inc
push
cld
lahf
fucomi
neg
jge
(bad)
cmc
movs
push
xchg
cmp
cld
cdq
sub
mov
adc
jmp
movs
test
in
fstp
stc
add
sbb
sbb
fistp
repnz
push
inc
rcl
cmps
cmc
in
mov
pop
popa
aad
std
xchg
push
test
pop
int3
icebp
mov
cmp
in
jmp
mov
loop
jle
dec
mov
push
mov
push
or
inc
xchg
lods
addr16
inc
mov
imul
aad
std
xlat
es
std
xchg
jb
repnz
pop
mov
jge
test
mov
inc
pop
movs
(bad)
or
or
out
aam
mov
push
hlt
int3
cs
(bad)
inc
adc
xor
into
or
and
sub
sbb
cmp
sub
mov
push
movs
xlat
mov
icebp
out
push
jmp
out
jecxz
out
aam
je
adc
mov
push
out
repnz
xchg
out
xor
mov
js
jp
mov
lods
mov
xchg
fidivr
mov
push
mul
mov
js
int3
sub
pop
addps
xor
lahf
mov
jmp
jecxz
fwait
cld
mov
aad
push
dec
ret
pop
fwait
pusha
or
cdq
dec
sbb
pop
fcomp
jmp
sub
sti
(bad)
push
leave
pop
jle
mov
mov
sub
fwait
popf
mov
sbb
dec
mov
mov
sti
xlat
aas
lods
jp
pushf
mov
cwde
pop
in
pop
ffree
in
mov
sbb
inc
outs
mov
inc
pop
mov
sbb
imul
dec
rcl
fidiv
jl
push
mov
mov
push
ret
push
enter
jnp
mov
ret
pop
mov
xchg
mov
lds
aas
int
lahf
cmp
sbb
or
pushf
retf
mov
in
fnstcw
mov
ret
push
dec
les
mov
mov
fiadd
pop
dec
fld
xchg
test
mov
jns
push
inc
fstp
sbb
mov
xor
xchg
cmp
pushf
push
xor
(bad)
sbb
mov
lods
sbb
test
xchg
fcomp
call
rol
hlt
inc
stos
mov
jnp
mov
lods
ror
pop
adc
or
xchg
mov
ret
sub
inc
pushf
mov
cwde
test
mov
pushf
mov
rcl
add
pushf
or
fisubr
mov
lahf
dec
pop
cmp
xchg
shl
push
(bad)
mov
stos
adc
lock
add
xchg
xchg
cdq
adc
pushf
scas
lahf
pushf
fisttp
xchg
cdq
sbb
or
dec
push
pop
xchg
mov
push
mov
stos
sbb
push
inc
inc
mov
sbb
test
div
fsubr
mov
(bad)
xor
js
xor
cmp
fwait
outs
std
cmps
cdq
xchg
xchg
pop
sbb
mov
xor
fld
sar
mov
stos
cmp
jmp
fistp
rcl
mov
xlat
cwde
rcl
mov
xchg
pop
test
cwde
test
xor
fisttp
dec
arpl
pop
adc
fidivr
cwde
iret
inc
or
pop
retf
sbb
jl
(bad)
cld
ins
or
pop
data16
jg
retf
fs
push
sub
les
in
popf
pop
xchg
ret
or
lods
pop
mov
pushf
cwde
push
and
pop
pop
push
or
jno
repnz
cli
cmp
fistp
push
mov
cmp
retf
inc
mov
inc
xchg
retf
xor
pop
pop
cli
or
push
pushf
sbb
ss
push
pop
cmp
or
pushf
sti
out
rcr
movs
(bad)
fisttp
mov
fcmovu
(bad)
fisub
jge
ja
dec
int3
jle
lods
outs
nop
pushf
scas
dec
pushf
push
cld
fwait
shl
pushf
(bad)
cmp
repz
in
(bad)
clc
retf
mov
lods
sub
pop
push
ficomp
fs
aam
sub
out
retf
add
(bad)
fcom
fcomp
aam
cld
(bad)
out
nop
in
int3
inc
mov
sbb
mov
pushf
imul
pusha
ins
jmp
push
repz
mov
retf
mov
mov
int3
mov
int3
es
mov
mov
mov
pushf
(bad)
fwait
pushf
js
pop
outs
ret
stos
call
int3
inc
jnp
jg
jmp
(bad)
and
dec
or
out
fistp
ret
mov
mov
pop
pushf
xor
ret
inc
fcmovnbe
dec
(bad)
sbb
sar
pop
xor
retf
neg
cmps
dec
fisttp
movs
or
push
fcmovnu
push
fistp
cli
fild
(bad)
fild
fistp
fcmovnbe
or
mov
gs
mov
lods
ja
pushf
cld
stos
pushf
hlt
fwait
pushf
mov
imul
mov
fstp
in
fcmovnu
out
(bad)
call
popf
dec
enter
pop
xor
aam
cmp
push
pop
aam
stc
aam
jmp
ds
pushf
pop
fcomp
fdivr
cmc
fcomp
clc
fsubr
sti
enter
int3
and
jl
int3
nop
pop
int3
sub
int3
mov
test
test
pop
outs
in
pop
ret
imul
ins
fmul
pop
(bad)
mov
mov
aam
nop
pushf
into
int
movs
fstp
pop
stc
loop
fcmovu
sar
sbb
fsubr
fmul
fcomp
fdivr
int
sti
in
int3
mov
int3
(bad)
pop
int3
addr16
bound
cwde
and
pushf
add
mov
pushf
jne
pushf
push
ins
pushf
jns
pushf
mov
pushf
push
pushf
mov
pushf
jl
pushf
or
jmp
push
mov
add
fcmovnb
sahf
mov
fidivr
fcmove
push
test
retf
fisttp
test
fstp
pushf
pop
pop
pushf
out
pushf
mov
pushf
adc
outs
jmp
test
fidiv
fidiv
fidiv
cwde
pop
push
dec
int3
call
mov
pushf
or
pushf
mov
pushf
xlat
outs
jnp
in
push
sub
aam
aas
aam
das
aam
paddq
out
aam
into
movs
mov
mov
jle
loope
sub
adc
push
retf
and
int3
xor
mov
rcr
sahf
fucomi
outs
mov
fmul
fcomp
add
push
cs
scas
in
aam
fst
in
les
mov
popf
mov
loopne
int3
dec
pushf
push
cmp
stc
mov
xchg
dec
aam
sub
std
fcmovnbe
jg
aam
cmp
or
xchg
pop
int3
pop
mov
mov
xchg
jnp
fimul
add
movs
popf
pushf
fmul
mov
sahf
cmp
fistp
pushf
sub
pop
push
fs
or
retf
mov
mov
sahf
dec
fidiv
stc
fisub
(bad)
fcmovu
adc
fidiv
sub
fisubr
cmp
xchg
dec
aam
sub
sub
aam
cli
aam
jmp
jmp
pop
jmp
aam
sbb
or
(bad)
leave
stos
sub
jge
cmp
aam
or
push
xchg
sub
and
icebp
test
push
pop
pushf
jns
pushf
es
pushf
std
stos
pop
into
ret
imul
jmp
or
mov
xchg
sti
(bad)
xlat
stos
dec
sahf
jmp
rcr
(bad)
jmp
sub
mov
cwde
push
ds
inc
mov
jmp
(bad)
ficomp
fiadd
fcmovb
sbb
dec
dec
fidivr
ficomp
fiadd
cwde
pop
sbb
add
ins
pop
push
retf
mov
dec
lods
mov
cs
or
mov
cmp
dec
pushf
cmps
lea
pushf
imul
and
pop
xchg
pop
sub
clc
jbe
fdivr
aam
pop
ror
mov
dec
aad
push
jle
das
sahf
les
pop
mov
sub
int3
and
int3
ins
aas
int3
sub
scas
outs
int3
loop
lods
mov
pushf
ret
mov
fsub
inc
mov
mov
pushf
jg
mov
fistp
dec
or
mov
fist
fucomi
dec
fld
fcmovnb
pop
mov
fcmovb
into
fisub
rcl
mov
aam
fst
outs
lods
aam
jge
aaa
xchg
aad
nop
pushf
fwait
pop
pushf
mov
pop
sub
jo
into
fstp
fimul
fimul
ficom
ficom
cld
fidiv
cwde
push
push
fmul
sahf
fcomp
jmp
fcomp
fcomp
(bad)
call
add
mov
mov
dec
mov
mov
scas
dec
pop
hlt
imul
pushf
out
pop
jb
mov
iret
cmp
pushf
cmp
fist
fstp
(bad)
mov
cwde
cwde
mov
int3
rcr
int3
cmp
pushf
je
pushf
and
iret
cdq
retf
addr16
aam
fiadd
push
adc
cwde
cli
(bad)
sub
cmps
js
imul
ficom
fisubr
push
or
in
fidiv
sub
inc
aam
fcmovnbe
sub
jnp
fild
xor
mov
cwde
sub
jecxz
pushf
idiv
mov
pushf
popf
pop
pushf
mov
pushf
enter
xchg
popf
je
ficomp
(bad)
jl
aam
fimul
dec
fimul
(bad)
or
xor
sbb
mov
sub
push
cmps
sbb
pushf
jge
out
mov
pop
pushf
pop
push
jno
aam
push
aam
std
les
inc
loop
rcr
test
push
pop
aam
push
aam
pop
aam
jle
fisttp
movs
(bad)
shld
mov
jg
add
jl
mov
cwde
jle
pushf
stos
call
neg
cwde
ss
fadd
aad
int3
dec
xor
(bad)
pusha
mov
pop
jnp
pop
adc
pop
xor
retf
nop
fist
(bad)
(bad)
fidivr
fistp
push
ror
pushf
repz
xor
mov
(bad)
mov
mov
xor
xchg
popf
mov
sbb
adc
adc
pushf
retf
xchg
push
jne
dec
pushf
cli
jge
adc
cmp
int
pushf
scas
cwde
mov
pushf
(bad)
ds
fstp
das
ins
fcmovne
or
fmul
enter
call
retf
mov
rcr
xchg
aam
or
dec
dec
aam
jnp
add
outs
mov
mov
ficom
int
fistp
(bad)
fld
fstp
xchg
sub
inc
(bad)
dec
int3
dec
pop
lods
add
pop
mov
rcl
cmp
pushf
xor
(bad)
jmp
outs
sbb
add
fild
sbb
fsubr
sub
pushf
in
or
pushf
sbb
imul
inc
fwait
cmp
mov
sbb
pop
imul
neg
cdq
cmp
ins
nop
sub
pushf
out
pop
pushf
mov
pushf
and
pushf
add
push
pushf
and
pushf
and
int
pushf
mov
pushf
idiv
int3
imul
leave
jmp
aam
movs
inc
out
sub
fwait
pushf
lock
fcomp
jb
sub
sub
fdivr
int
iret
clc
int3
jmp
fcmovnu
mov
pop
stc
fcmovne
jp
ret
fcmovu
push
cmp
int3
mov
adc
fisttp
(bad)
hlt
fcomp
dec
lods
jl
lods
and
pushf
xor
scas
jmp
hlt
retf
inc
sti
int3
adc
int3
mov
pop
jl
push
int3
pop
int
jmp
fistp
mov
(bad)
dec
fcmove
outs
ficom
fidiv
cwde
cmp
fdivr
dec
fdivr
pop
fcomp
movs
sahf
cwde
ins
pop
pushf
mov
add
pushf
or
aam
mov
cmp
push
pop
nop
pushf
jb
pushf
mov
pushf
dec
pushf
out
mov
pushf
ror
dec
outs
pushf
mov
or
out
fild
(bad)
fild
fcmovnb
inc
fstp
xor
mov
or
iret
dec
pop
pop
xor
pushf
xchg
pinsrw
out
int3
jno
int3
sub
cs
dec
pop
(bad)
jle
pushf
sbb
pushf
mov
cwde
retf
jae
mov
fcomp
popf
pushf
inc
dec
pop
and
cmp
fcmovbe
mov
xchg
in
pop
ficomp
add
aam
int
scas
mov
mov
les
and
and
outs
pop
retf
(bad)
mov
fiadd
jo
aam
int
rcr
les
cwde
cmp
jecxz
mov
mov
pushf
jmp
inc
or
nop
sub
mov
inc
int
mov
les
pop
push
adc
retf
add
mov
fdivr
fdivr
int
inc
nop
pushf
loopne
pop
pop
loop
fcmovu
mov
fidiv
mov
mov
fnsave
pushf
retf
xchg
mov
aad
pushf
adc
pushf
inc
cld
pushf
lea
mov
mov
ins
fcmovnu
cmp
pop
or
inc
fisub
dec
fidiv
aad
aam
mov
jl
sbb
js
fld
loopne
adc
aam
stos
aam
jnp
pop
imul
retf
adc
cmp
pushf
cmp
leave
mov
pushf
neg
pushf
sbb
pushf
add
pop
xchg
loop
fcmovu
or
fld
stc
arpl
int3
daa
jmp
int3
or
int3
(bad)
push
ins
int3
sti
mov
inc
pop
pop
pushf
int3
pushf
push
mov
in
aam
or
and
cmp
mov
cmp
mov
pushf
retf
jmp
pushf
mov
cmp
dec
pushf
push
jge
ins
popf
pushf
(bad)
mov
dec
(bad)
(bad)
fidiv
fimul
fimul
cwde
mov
jmp
sub
jge
mov
xchg
int3
fwait
cs
push
pop
int3
mov
mov
ins
ins
push
retf
xor
push
outs
aam
pop
les
jle
iret
sahf
mov
push
retf
mov
inc
cmp
mov
pushf
jbe
mov
pop
stc
loop
rcr
mov
cwde
js
inc
dec
retf
(bad)
outs
int3
in
sahf
int3
push
mov
push
pushf
and
jge
pushf
outs
ds
gs
pushf
inc
mov
shr
fwait
dec
pop
je
fistp
call
jge
fcomp
fsubr
fcmovnu
push
mov
dec
rcl
aam
push
aam
in
aam
int
and
mov
pop
fwait
pushf
retf
pusha
fisttp
sbb
push
fsubr
pop
push
lods
pushf
sub
mov
pop
les
pushf
jne
pushf
xchg
out
pushf
mov
jmp
sar
fiadd
mov
or
fidivr
fcmovb
pop
fimul
cwde
jg
fcomp
inc
mov
rcr
popf
mov
push
pushf
xchg
dec
pop
arpl
lods
fcmovu
mov
inc
xchg
sbb
cmp
movs
fdivr
sti
retf
sbb
retf
or
pop
add
(bad)
cmp
lods
jmp
aam
retf
stos
sbb
jp
ficomp
xchg
dec
(bad)
fstp
fwait
aam
mov
add
xor
sbb
mov
stos
mov
cmp
mov
sbb
pop
out
pop
push
imul
(bad)
mov
js
adc
sti
cwde
jmp
cs
ret
addr16
mov
mov
dec
mov
jmp
mov
retf
mov
cmp
mov
mov
test
ins
fistp
(bad)
(bad)
pop
jge
jne
adc
ins
pushf
in
sub
fdivr
(bad)
int3
pop
lods
int3
add
ins
popf
push
pushf
test
pushf
inc
ds
lahf
dec
jmp
fstp
fsubr
pusha
fcomp
adc
push
sub
pushf
adc
push
cld
ds
mov
push
pop
(bad)
fdivrp
fcmovnu
cwde
fwait
xchg
dec
lods
jp
pushf
cs
out
jmp
rcr
pop
in
(bad)
(bad)
jge
sbb
arpl
les
mov
call
dec
aaa
(bad)
fsubr
cmp
pop
pop
int3
iret
cs
xchg
std
pushf
mov
pushf
and
pushf
xor
pushf
stc
mov
xchg
aaa
sbb
sub
add
add
inc
jle
sbb
ins
nop
setl
pop
(bad)
loop
(bad)
fiadd
mov
xor
fisubr
fcmovu
push
ficomp
ficom
push
data16
mov
adc
mov
pushf
in
dec
pushf
dec
pop
jmp
(bad)
pushf
sub
sti
pop
mov
in
mov
push
test
out
ret
shl
mov
pop
adc
loop
call
fsubr
fsubr
fmul
daa
fdivr
fsubr
(bad)
fldenv
test
fdivr
add
int3
push
or
jb
int3
add
mov
pushf
push
(bad)
mov
pushf
cmp
arpl
mov
pop
mov
mov
and
mov
or
mov
ja
push
xchg
mov
sub
mov
sbb
fs
mov
fisttp
(bad)
js
iret
pop
(bad)
sub
jmp
lock
fmul
cmps
fmul
fdivr
fmul
scas
fcomp
fsubr
and
mov
cs
shl
pushf
ficomp
jle
aam
sbb
cmp
popf
cmp
scas
retf
lahf
pop
int3
loop
int3
loope
int3
push
push
xchg
mov
test
inc
pop
pop
sbb
mov
cmp
pushf
push
out
rcr
xchg
in
pop
cmps
enter
(bad)
pushfw
out
pop
cli
sub
mov
leave
sbb
xchg
pop
int3
(bad)
(bad)
int3
lods
int3
cld
mov
fnstsw
mov
sbb
sahf
jmp
rcr
cld
outs
cmp
imul
fiadd
das
fcmovbe
outs
fimul
fisubr
fcomp
fldcw
lods
out
pop
vaesdec
dec
mov
dec
pop
fcmovbe
(bad)
fcmovu
das
fiadd
dec
cwde
bound
aas
loope
cli
pop
aam
mov
and
aam
lock
adc
mov
loope
stc
shr
pop
jmp
pop
pop
sbb
daa
adc
inc
fild
push
enter
pop
xor
frstor
retf
fistp
push
fdivr
ror
fcom
mov
and
rcr
out
aam
xchg
aam
adc
xor
and
aam
push
mov
lods
ret
pop
lahf
push
pushf
mov
pop
jb
pop
inc
cs
fstp
mov
add
aam
ds
jle
jmp
aam
pop
(bad)
int3
retf
(bad)
(bad)
int3
jmp
inc
aas
int3
test
mov
pushf
jno
sub
(bad)
add
cmp
mov
pushf
add
jmp
fcmovnu
arpl
sub
shl
ficomp
loopne
xchg
jecxz
aad
les
leave
popf
or
xchg
retf
int3
imul
sbb
gs
fld
fstp
or
ins
sbb
cmps
cmp
add
fucomi
mov
je
and
iret
movs
pushf
adc
aad
push
fcmovu
cmp
sub
clc
cli
(bad)
sbb
fimul
fistp
sub
mov
fidiv
fcmovu
retf
sbb
or
fisubr
or
pop
fcmovu
fs
jecxz
aad
aam
sbb
(bad)
or
cli
mov
ret
mov
push
loop
sbb
sbb
pushf
or
pop
fcomp
sbb
stc
pushf
add
aam
mov
test
aam
sbb
dec
call
(bad)
mov
jp
aam
push
add
and
pop
scas
enter
pop
inc
sbb
pop
loop
pop
out
pop
mov
sub
test
leave
fistp
mov
fisubr
mov
sahf
sbb
push
pop
jge
dec
(bad)
fsubr
ret
icebp
fdivr
out
call
push
push
retf
pushf
(bad)
fstp
leave
jns
test
cmp
pop
dec
call
jmp
pushf
fidivr
fcmovbe
sub
jnp
fisub
jl
jns
cwde
sbb
fdivr
dec
dec
push
pop
test
popf
mov
inc
std
mov
fwait
data16
cli
add
fcmovu
push
fisub
inc
pop
cli
fs
int
inc
std
mov
call
pushf
cmc
dec
jmp
fstp
xchg
add
cmps
push
fcmovnb
jo
sub
adc
int3
sbb
int3
out
scas
int3
push
int3
sub
lods
dec
sbb
aaa
sahf
pushf
js
pushf
cs
pushf
and
xchg
(bad)
pushf
dec
mov
dec
fstp
int
fucomi
pusha
mov
fiadd
fidivr
lahf
(bad)
pop
(bad)
aas
(bad)
(bad)
ficom
xor
jmp
nop
pushf
sti
scas
pushf
sbb
fcmovne
out
fist
fist
ds
retf
lods
int3
fwait
mov
les
std
push
pushf
mov
pop
dec
pop
popfw
pop
cmp
repnz
push
jmp
and
(bad)
out
xchg
pop
mov
popf
sti
push
fstp
pop
jecxz
pop
lahf
cs
pop
dec
pop
mov
test
dec
push
les
adc
popf
pushf
mov
pop
icebp
enter
adc
cwde
je
dec
int3
(bad)
lods
sbb
pushf
xchg
dec
pushf
out
pushf
push
mov
mov
pushf
mov
sub
aam
pop
nop
pushf
repz
pushf
sub
pushf
mov
pushf
out
pushf
jle
pushf
int3
sub
cdq
(bad)
sub
or
mov
mov
sub
fcomp
pop
fsubr
nop
fmul
inc
enter
cli
mov
stos
mov
mov
inc
cli
pop
xor
retf
sahf
mov
fisubr
(bad)
stos
push
into
aam
jp
fisttp
jmp
js
pushf
(bad)
sub
push
cmp
aam
imul
stos
aam
retf
aam
(bad)
int3
adc
int3
push
imul
sub
pop
retf
call
push
movs
cmp
fld
jmp
fstp
mov
movs
fcmovnu
or
pop
popa
fcom
fsubr
bound
inc
xchg
pushf
jno
pushf
out
cli
mov
repz
sahf
sbb
fild
adc
pop
fidivr
fidiv
int3
fisubr
fcmove
(bad)
ret
fwait
jmp
mov
aam
popf
aam
lea
mov
mov
push
sub
cmp
cld
int
push
push
pop
(bad)
push
cli
xor
adc
aam
pop
mov
xlat
adc
push
pushf
mov
int
fsubr
inc
xlat
mov
pushf
cmp
cs
sar
xchg
scas
pushf
xchg
into
pushf
xchg
out
pushf
add
pop
mov
fcmovu
mov
mov
test
aam
mov
xor
dec
pop
and
sar
adc
push
mov
ret
std
(bad)
stos
(bad)
fcmovnbe
nop
fcom
add
mov
outs
dec
fdivr
int
mov
pushf
retf
in
sbb
mov
fs
stos
sub
dec
xchg
mov
pushf
pushf
push
jl
dec
ins
pushf
pop
dec
pushf
add
imul
lods
sbb
cli
pop
pushf
cmp
ret
add
pushf
fisub
inc
add
inc
pop
pushf
push
fdivr
call
mov
or
fsubr
fdivr
fmul
fcomp
fdivr
jl
or
dec
int3
ret
mov
inc
or
mov
push
icebp
call
int3
mov
dec
dec
int3
inc
sbb
pushf
mov
pushf
sbb
pushf
pop
cdq
pushf
in
pushf
cwde
sbb
xchg
ins
fcomp
sbb
mov
pushf
or
ret
gs
mov
int3
ins
sub
retf
(bad)
repz
sahf
or
cmp
jbe
es
sub
inc
cmps
cmp
js
pushf
imul
xor
pushf
cld
in
pop
add
jmp
nop
pushf
(bad)
out
pushf
push
das
pushf
push
dec
pushf
fnstsw
pushf
cmc
setl
pushf
mov
pop
jle
clc
mov
loopne
fisub
ficom
mov
(bad)
dec
paddq
aam
outs
aam
jg
aad
or
cmps
(bad)
fistp
dec
xchg
fdivr
mov
int3
fbld
int3
(bad)
xor
add
sbb
and
mov
push
jo
mov
sbb
mov
xchg
inc
push
mov
adc
sti
leave
rcr
daa
jo
or
mov
imul
mov
fld
js
sahf
inc
mov
adc
fdiv
rcr
loopne
fadd
sub
nop
adc
jo
fsub
inc
mov
mov
mov
lock
inc
je
jmp
sub
mov
jo
into
and
pushf
in
cwde
inc
lahf
pushf
jmp
sahf
pushf
mov
cld
push
push
dec
pop
cmps
in
pop
std
lea
cld
pushf
dec
or
mov
mov
call
ins
call
pop
cmps
mov
movs
cdq
pop
test
mov
pop
sar
jne
retf
adc
or
ds
cmp
int3
push
int3
xor
mov
pop
std
push
rol
aam
mov
idiv
jmp
adc
push
or
lods
popf
nop
pushf
and
aad
fidiv
inc
or
inc
not
dec
pop
imul
test
pop
fucomi
fcomp
(bad)
clc
fild
or
lahf
sbb
pop
sub
fmul
fsubr
fcomp
push
lods
cdq
mov
pushf
test
nop
or
mov
pushf
fisub
in
aam
sbb
dec
stc
les
cmp
rcr
aad
daa
ret
sbb
ret
pushf
dec
clc
jnp
dec
inc
xchg
cmp
jecxz
mov
jmp
pushf
xchg
cwde
dec
stos
jnp
ficomp
ret
pushf
popa
call
push
fcomp
fdivr
enter
test
retf
mov
(bad)
fcmovu
lahf
cli
fisttp
or
xor
daa
push
out
sub
cmc
dec
mov
xlat
adc
mov
retf
in
adc
out
fisubr
fisub
arpl
loopne
fistp
(bad)
push
hlt
fsubr
ins
fdivr
fcomp
int
fdivr
jge
sbb
retf
ins
fild
(bad)
clc
stos
fcom
fcomp
pop
enter
nop
mov
pushf
fidivr
fiadd
outs
lock
adc
push
pushf
repnz
xlat
fsub
or
inc
adc
xchg
ds
pop
xchg
adc
jg
scas
pop
or
pop
rcl
adc
mov
fidiv
fadd
and
aam
xchg
aam
jb
iret
inc
aam
loope
jns
aam
adc
adc
jmp
fdiv
fadd
fsub
fadd
push
lock
mov
loop
rcr
pop
fsub
aam
push
aam
xor
ins
and
stc
retf
xchg
add
imul
fidivr
push
aam
cs
pushf
xchg
pushf
sub
pushf
cmps
mov
pop
lea
pushf
rcr
cmp
(bad)
mov
adc
lods
rcr
jl
fmul
cmp
int
inc
push
push
pop
bound
cs
(bad)
jmp
adc
jnp
xchg
retf
fimul
hlt
mov
je
les
retf
ds
sar
mov
out
mov
cli
retf
mov
inc
cmp
or
fbld
jmp
mov
aam
or
jl
mov
jmp
shr
dec
pushf
ficom
fisubr
ficomp
fisubr
mov
(bad)
stos
dec
xor
pushf
jle
pushf
push
sub
imul
mov
push
pop
fstp
pushf
xchg
dec
pop
push
push
push
pop
push
sbb
(bad)
cwde
(bad)
jmp
sbb
retf
dec
call
xor
push
pushf
ror
fstp
dec
test
pushf
fxch
pop
jge
cli
rcr
inc
aam
or
arpl
aam
cmp
push
push
out
aam
call
test
jmp
shl
fdivr
mov
ficomp
xor
pushf
sbb
pushf
adc
(bad)
jmp
sbb
pushf
sbb
pushf
inc
dec
pushf
xor
es
out
push
pushf
cdq
push
pushf
pop
cs
mov
xchg
outs
pop
out
ret
cmp
enter
in
push
cmp
adc
cmp
int3
sahf
mov
mov
lods
fst
mov
call
ret
fidivr
push
pushf
sar
push
leave
sti
ficomp
int3
iret
outs
int3
dec
lahf
int3
sub
int3
das
add
mov
mov
lahf
pushf
add
aas
pushf
mov
pushf
ror
pushf
adc
fcomi
scas
(bad)
push
(bad)
(bad)
(bad)
pand
mov
ficomp
hlt
push
aam
jle
loope
mov
fild
mov
push
adc
mov
jmp
int3
pop
popf
int3
nop
lods
mov
pop
je
retf
add
std
lods
aam
mov
sahf
pushf
dec
popf
pop
js
push
test
fnstsw
int
mov
pushf
sub
or
stos
jge
scas
ins
pushf
mov
cmp
pop
mov
retf
test
ror
push
fstp
mov
or
mov
dec
outs
pushf
mov
int3
in
int3
inc
dec
mov
int3
mov
pushf
jne
pushf
pop
cs
int
aad
aam
sbb
gs
fwait
mov
mov
popf
pushf
aas
or
gs
pushf
lock
pushf
xchg
push
jmp
fcmovnu
out
mov
adc
sbb
sub
lea
mov
jl
adc
(bad)
fstp
sub
cwde
leave
xchg
mov
push
xor
daa
jp
ins
cmp
pushf
sbb
lods
call
pushf
punpckhdq
pop
pop
ret
mov
sbb
sbb
stos
mov
iret
jmp
pushf
fiadd
mov
mov
cwde
jbe
dec
int3
outs
fwait
int3
and
jo
int3
(bad)
sub
cs
sbb
int3
adc
sub
mov
mov
jp
and
adc
or
pop
cld
jmp
fidiv
fidivr
pop
fcmovbe
jl
arpl
mov
fcmovu
add
aam
pop
les
inc
mov
mov
mov
add
pushf
add
push
and
jo
pushf
cmp
sbb
leave
cld
call
int3
mov
pushf
loope
push
xchg
adc
xchg
popf
pushf
mov
push
sar
jbe
mov
gs
dec
mov
int3
mov
mov
ins
mov
fcmove
pushf
push
mov
xor
pop
es
mov
ret
cdq
repz
pushf
xor
push
out
les
ficomp
mov
mov
int3
or
loop
ins
push
ret
js
mov
dec
fcomp
es
psubusb
fdivr
fcomp
jl
fsubr
xchg
xor
out
popf
pushf
dec
int
neg
xor
cwde
fmul
sub
adc
and
pop
mov
neg
adc
lods
mov
int3
or
cmp
cmp
xchg
stos
or
pop
fcmovnb
sub
(bad)
jmp
pop
fcomp
enter
fiadd
clc
in
fdiv
fdivr
mov
call
add
stos
jmp
xor
pushf
int3
dec
lods
mov
pop
movs
jl
push
pushf
mov
nop
pushf
xchg
jmp
bound
xor
pushf
(bad)
pop
pushf
iret
sub
jmp
call
fdivr
fdivr
fdivr
int3
dec
sub
gs
jmp
fcomp
enter
jmp
fstp
and
ret
xchg
aad
ret
pushf
lahf
fstp
fild
cmp
pushf
xchg
adc
icebp
rcr
pushf
xchg
pop
pop
fsubr
fcomp
and
add
jo
fcom
int
xchg
push
push
sbb
mov
push
pop
frstor
cld
add
retf
push
fwait
cwde
mov
fdiv
mov
adc
data16
mov
int3
mov
lods
add
pop
ins
ret
stos
call
loopne
fdiv
neg
sbb
stos
stos
jo
fistp
gs
iret
xchg
pushf
ficom
fimul
rcr
mov
fidivr
fidiv
fidiv
fidiv
fimul
and
retf
adc
cli
fdivr
loopne
mov
mov
jg
cld
dec
mov
mov
repz
mov
cmp
fist
xchg
pop
pop
pop
bound
pushf
mov
int3
js
lods
pop
adc
stos
xchg
call
(bad)
or
jne
fcmovbe
or
pop
enter
fcmovu
xlat
fidiv
fisubr
dec
mov
pushf
jno
jge
pushf
lods
pop
pushf
cmps
inc
pushf
bound
add
lea
pushf
push
neg
pushf
ret
(bad)
addr16
jmp
pushf
xchg
mov
jg
pushf
sub
pushf
or
pushf
and
pushf
xlat
cmc
pop
pop
loopne
aam
push
aam
mov
out
pop
aam
addr16
mov
cdq
sub
or
call
pop
dec
les
stc
cmp
fisttp
sbb
pushf
(bad)
sub
push
cmp
daa
pop
fisub
lds
jge
ficom
mov
(bad)
fisub
popa
push
(bad)
enter
fldcw
xlat
fistp
sbb
pushf
cmp
xchg
pop
jmp
push
sbb
or
jmp
cwde
lock
scas
or
cwde
pop
stos
push
inc
sbb
call
lods
mov
int3
outs
sbb
popf
add
es
pushf
pop
pop
adc
lods
pushf
fcom
aam
jge
cdq
ins
les
pop
pop
pushf
dec
push
cmp
dec
adc
scas
call
fmul
enter
fstp
push
pop
leave
mov
int3
jg
int3
mov
int3
int
ins
sahf
ficomp
pushf
lahf
subps
xor
pop
lds
jb
pop
mov
pop
aam
pop
jnp
sbb
leave
pushf
fnstenv
shl
cmp
pushf
mov
pushf
popf
mov
repnz
jno
pushf
xchg
push
(bad)
clc
retf
sahf
jb
add
int
mov
pushf
ret
(bad)
lods
loop
in
adc
hlt
push
push
rcl
adc
jb
aam
add
xor
loopne
inc
nop
aam
pusha
aam
add
sbb
ins
sahf
aam
ds
push
les
std
dec
cld
nop
adc
ds
(bad)
jmp
pushf
fisub
jg
or
fiadd
fidivr
adc
aam
(bad)
xor
lahf
in
aam
jge
mov
mov
xchg
leave
or
dec
stos
int3
mov
jle
ins
xchg
or
fcmovne
cli
out
push
add
sub
pop
and
retf
mov
jb
(bad)
dec
ret
pushf
push
clc
push
enter
xchg
(bad)
inc
pop
pushf
icebp
jecxz
call
jo
cwde
cwde
or
stos
lods
(bad)
adc
sub
(bad)
mov
clc
call
fisub
mov
dec
mov
stos
jmp
aam
cmp
or
aam
fwait
aam
stos
les
mov
pop
add
or
pushf
inc
fcmove
or
int3
jo
lods
adc
ficom
aam
or
loope
aam
fwait
mov
mov
pushf
jmp
dec
sub
pushf
mov
pop
call
pop
mov
pop
loop
pop
(bad)
jnp
and
jo
pop
xchg
jmp
push
faddp
mov
aam
stos
(bad)
shr
retf
sub
fild
fist
fcomi
sbb
loopne
fist
cmp
xlat
pop
fcmovnbe
ins
sbb
xchg
int3
sub
fist
retf
or
nop
pop
iret
push
push
sbb
inc
cmp
repnz
jmp
out
pushf
movs
(bad)
out
(bad)
mov
push
sti
aam
or
fld
inc
pop
aam
jl
mov
jp
mov
mov
pushf
loopne
push
stos
sbb
fiadd
pop
fiadd
fidiv
fiadd
stos
pminub
fimul
ficom
ficom
ficomp
mov
push
aam
add
fistp
daa
ret
pop
icebp
std
push
pushf
inc
int
idiv
push
in
ficom
push
lock
outs
pushf
es
pop
fstp
push
pushf
jnp
pop
jmp
pop
xchg
pusha
pop
inc
sbb
push
adc
shr
div
int3
dec
out
int3
aaa
scas
lods
add
das
add
(bad)
ficomp
fisub
inc
(bad)
retf
bsf
mov
out
fistp
or
outs
mov
xchg
pop
and
retf
and
fiadd
stos
pop
out
mov
pop
cwde
fisttp
dec
fcomp
cmp
mov
mov
dec
mov
push
pushf
push
cwde
mov
jmp
(bad)
pop
es
out
or
pop
mov
mov
outs
outs
pushf
mov
pop
retf
stc
fcmovnu
dec
fucomi
fld
push
mov
fisub
cwde
ja
or
popf
push
test
fidivr
fidivr
fisubr
(bad)
aam
mov
outs
fwait
and
sbb
stc
sbb
mov
pushf
or
mov
ret
pop
scas
pop
push
pushf
neg
push
sti
pop
lods
or
add
mov
fucomi
fcmovnu
test
sbb
fsub
or
push
pop
pop
mov
push
jmp
ins
sti
les
sbb
mov
rcr
or
cwde
int
inc
(bad)
cmp
dec
mov
pop
push
pop
xor
jmp
jmp
xchg
enter
mov
pushf
dec
pushf
nop
cmp
pushf
call
pushf
ret
js
mov
pushf
cmp
cli
fistp
(bad)
(bad)
(bad)
dec
dec
fld
stos
ficomp
ficomp
ficom
fiadd
fidivr
or
fcmove
stc
mov
(bad)
push
shr
int3
loope
int3
xchg
inc
mov
jns
jle
mov
jmp
xchg
stos
mov
mov
pop
pop
adc
mov
pop
ins
cld
push
pushf
out
sub
fsub
enter
cwde
stos
xchg
mov
mov
fld
fld
retf
sbb
fcomp
fsubr
(bad)
fmul
fsubr
ins
pop
fdivr
mov
rcr
fisub
nop
out
nop
popa
pop
pushf
xor
fnstsw
jb
pop
mov
icebp
cmp
pop
ins
fisub
lods
aad
aam
or
lods
mov
les
jmp
lods
pop
jp
pop
in
or
fidivr
pop
jmp
(bad)
mov
loope
cwde
pop
aas
fcomp
fcomp
xor
jnp
fsubr
fcomp
mov
or
fdivr
fmul
mov
mov
jmp
sahf
pop
push
bound
lahf
leave
sbb
and
add
pop
jl
pushf
sub
(bad)
sub
call
ficomp
mov
les
jmp
cs
pushf
xor
pop
jle
pop
popf
sahf
or
pushf
das
dec
sub
int3
cmp
adc
xchg
and
mov
cwde
test
push
pop
adc
pop
scas
lahf
pop
imul
into
pop
cmp
aaa
adc
push
pop
pop
cs
pushf
sahf
push
pushf
mov
jmp
aam
std
les
fwait
popf
pushf
scas
jge
cmp
pushf
(bad)
sbb
jl
enter
retf
pop
inc
mov
dec
ror
stc
sbb
jecxz
fidivr
fiadd
fiadd
fimul
lods
aad
aam
cld
aam
dec
aam
jge
sbb
xor
pushf
pop
pop
int3
jmp
pushf
jae
pushf
imul
jmp
mov
pushf
add
inc
(bad)
ficomp
(bad)
sub
in
pushf
fisubr
cld
fcmovb
cmp
mov
ficom
ficomp
cwde
cmp
lods
mov
stos
inc
aam
test
pop
cmc
mov
pop
leave
repz
cmp
cdq
mov
in
fcmovu
nop
sahf
and
test
push
test
pushf
fmul
fdivr
fcomp
push
mov
mov
pop
pop
and
sub
(bad)
jns
sbb
fadd
in
pushf
nop
cwde
movsx
pop
out
ret
pushf
repz
mov
push
jmp
aam
cs
in
aam
mov
addr16
aam
ins
aam
dec
aam
cmp
out
out
push
pushf
sub
mov
in
pushf
jns
push
fild
fild
or
jle
(bad)
mov
cmp
imul
fcomp
fcomp
stos
enter
int3
pop
or
iret
pop
int3
jno
int3
dec
in
mov
pushf
fidiv
fcmove
ins
xor
mov
mov
pop
mov
pushf
xchg
pop
out
adc
bound
pushf
push
sti
xor
fild
fcomi
jmp
fisttp
test
(bad)
stc
aam
or
xor
pop
in
pop
mov
pop
cmps
cmp
pop
into
test
push
pop
pop
jmp
or
(bad)
xchg
lods
test
pushf
mov
test
push
and
mov
pop
dec
fxch
add
popa
stc
fcomi
or
hlt
loope
mov
mov
call
enter
pop
inc
loop
fcmovu
sbb
ficomp
fcmove
cmp
or
pop
or
retf
push
or
fcmovne
pop
push
pop
pushf
lds
lahf
cmp
aas
ret
leave
push
stos
pushf
test
pop
jmp
aam
int3
add
int3
inc
ins
int3
cli
pushf
lods
mov
pushf
test
call
pop
mov
jp
mov
sbb
leave
pushf
dec
or
btc
call
ds
call
les
mov
cwde
cli
jle
lds
mov
jmp
pushf
enter
retf
fisub
out
push
pushf
int
mov
retf
push
pminub
fcmovb
das
push
data16
out
aam
(bad)
popf
paddq
aam
outs
aam
(bad)
aam
lahf
les
adc
pushf
inc
pushf
fcom
fs
adc
mov
xchg
jno
outs
mov
adc
aam
adc
add
aam
(bad)
aam
xchg
aam
rcl
pop
repnz
loop
mov
mov
jmp
rcr
add
fild
xchg
fistp
(bad)
leave
and
rcr
pop
(bad)
sbb
popa
mov
sti
rcl
adc
sub
aam
inc
les
xchg
int3
jae
pushf
sbb
or
retf
add
adc
das
xor
pushf
fcmovb
xor
mov
fcomp
jg
mov
pop
add
popf
xlat
fmul
fdivr
cld
pushf
imul
ins
(bad)
idiv
lahf
xchg
icebp
sbb
lods
out
dec
sbb
lea
adc
sub
pop
fsubr
dec
xor
sbb
fdivr
enter
push
and
loope
mov
xchg
sbb
addr16
sub
jmp
mov
pushf
mov
pop
xchg
fisttp
dec
cli
ficom
cwde
pop
mov
les
xchg
popf
pushf
movs
or
pushf
or
pushf
gs
push
call
push
fisub
push
shr
aam
push
pushf
bound
pop
mov
pop
neg
mov
fdivr
or
lods
iret
popf
jmp
rcr
mov
fucomi
stos
fcmovnbe
jp
enter
in
stos
push
popf
pushf
fstp
aam
pop
xchg
loop
fcmovu
mov
in
mov
gs
mov
sbb
les
mov
inc
jmp
iret
push
pushf
ret
fmul
mov
leave
mov
out
(bad)
cld
jmp
fmul
jnp
int3
or
int3
adc
pop
in
push
inc
dec
pop
movs
or
retf
xchg
jne
pushf
mov
push
pop
aam
sub
std
sbb
xor
mov
pop
xchg
aaa
mov
(bad)
cwde
fimul
cwde
test
fcomp
fdivr
fmul
fdivr
fdivr
js
pop
cmp
fcmovu
ins
fidivr
dec
xchg
jno
mov
loop
aam
mov
pushf
push
mov
and
xchg
cmp
test
(bad)
fcmovnu
pop
fistp
mov
fistp
sbb
push
(bad)
aam
aas
mov
push
adc
mov
ja
(bad)
mov
add
pop
pushf
setg
jnp
int3
jmp
int3
push
ror
(bad)
lock
mov
and
mov
fistp
lods
rcr
or
fisttp
lods
das
pushf
ficom
fimul
cwde
div
scas
cmp
add
pushf
in
retf
push
lods
jmp
outs
pushf
data16
jmp
(bad)
enter
scas
(bad)
(bad)
std
(bad)
in
fcmovne
fstp
xchg
int
fisttp
and
ss
sbb
cld
push
pushf
data16
cli
rcr
adc
mov
ja
xchg
pop
sbb
pop
pop
push
pop
pop
pop
cs
pop
cmp
outs
or
rcr
retf
and
jp
int3
aam
lods
mov
pushf
sub
mov
pushf
out
popa
fcomp
cmp
stos
mov
ja
loop
lds
int3
nop
sbb
in
or
jg
aad
mov
out
nop
pushf
ret
imul
mov
pop
jae
retf
test
sub
sbb
sub
push
pop
aam
dec
aam
cmp
lea
daa
ret
js
test
fisttp
mov
mov
cmp
mov
cmp
mov
fdivr
pushf
jo
or
neg
ss
push
test
daa
call
pop
jns
or
lahf
in
sbb
jmp
stos
jns
or
imul
mov
xchg
cmp
fisttp
fld
fild
push
pop
jp
cmp
int3
mov
fwait
or
popf
push
cli
pushf
mov
xor
mov
pushf
seto
fstp
movs
push
push
dec
pop
pcmpgtd
pop
lods
dec
pop
aad
pop
inc
or
cmp
sub
mov
iret
fcmovu
mov
mov
cld
in
les
mov
pop
repnz
mov
lods
pushf
push
div
fstp
fist
not
leave
push
push
pop
mov
retf
jmp
push
aam
ffree
adc
or
pop
adc
pop
jle
pop
mov
pop
jge
mov
pushf
cmp
fstp
fidivr
and
pop
lods
loop
mov
movs
call
(bad)
pushf
out
pop
pop
jbe
cld
aas
pop
(bad)
outs
pop
mov
pop
push
iret
pop
dec
fistp
retf
ret
mov
fidiv
fcmovu
outs
fimul
pop
cwde
mov
fdivr
push
wrmsr
fdivr
stos
fsubr
movs
int
or
sbb
repnz
pushf
ret
outs
pushf
dec
sbb
pop
iret
pushf
sub
pushf
das
xor
pushf
ins
pusha
pushf
add
rcr
mov
pushf
push
cmp
aam
adc
iret
cmp
scas
fcomp
lahf
test
int3
jg
outs
mov
mov
jae
mov
inc
pushf
pop
cwde
add
jmp
(bad)
pop
add
js
inc
outs
pushf
fiadd
mov
fistp
and
pushf
fcmovb
mov
or
fisub
fcmovu
or
loopne
std
cmp
stos
retf
inc
dec
int3
out
pop
mov
js
lods
sti
pushf
ficom
mov
mov
int3
loope
int3
ds
mov
pushf
sahf
cwde
sar
sub
pushf
and
pop
dec
pop
pop
cdq
sub
(bad)
aas
sub
pop
fisub
xchg
pop
adc
ficomp
xchg
mov
fcmovu
or
sbb
inc
fdivr
xor
call
pushf
add
pushf
or
dec
aas
popf
push
test
clc
pop
fstp
stos
sub
xchg
pop
xchg
mov
pushf
xchg
cmp
push
ins
cmp
js
mov
fmulp
int3
mov
int3
and
int3
dec
or
sbb
mov
retf
data16
dec
fdiv
push
cs
hlt
popf
les
pop
out
push
mov
out
mov
pop
mov
pop
sbb
add
push
mov
or
aad
and
pushf
test
leave
int3
mov
mov
dec
mov
xchg
push
mov
add
pop
je
pushf
stos
mov
jle
dec
popf
rcl
imul
dec
test
pushf
iret
mov
mov
cmp
es
cli
mov
fisub
inc
sti
push
xchg
les
mov
retf
push
mov
fcmovb
fiadd
cwde
push
(bad)
fsubr
fcomp
int
jmp
push
pop
pop
fwait
pop
aad
pop
or
sub
test
mov
jmp
fcmove
push
pop
pushf
out
jge
stos
cdq
lods
mov
lods
cwde
jmp
fsubr
fcomp
fsubr
lods
mov
mov
pop
iret
push
mov
dec
fsubr
pushf
jmp
jmp
int3
dec
mov
push
push
sbb
inc
jl
adc
sub
cmp
mov
dec
sbb
pushf
dec
fsubr
add
jmp
not
mov
xlat
gs
nop
pushf
push
cmp
pushf
arpl
xor
pushf
dec
sbb
pushf
js
pushf
test
jnp
dec
dec
xor
(bad)
stos
jbe
pushf
stos
enter
leave
scas
dec
pushf
movs
jns
in
int3
jmp
int3
or
ins
pushf
pop
pop
sbb
or
lahf
mov
ficomp
stc
ficomp
fidiv
pop
(bad)
sbb
movs
clc
cwde
cmps
mov
in
ins
(bad)
push
pop
hlt
dec
pop
jecxz
pop
mov
sbb
push
data16
popa
push
adc
jmp
mov
pop
sub
retf
lods
(bad)
sti
(bad)
sub
out
cmp
mov
and
mov
pushf
int
pushf
shr
sub
pushf
dec
pop
out
fnstcw
adc
les
mov
jge
pop
popf
mov
push
mov
rcl
mov
out
call
pushf
fiadd
fidiv
fmul
mov
out
adc
add
adc
enter
pop
shl
nop
aam
mov
ret
loopne
ins
mov
pop
bound
clc
xor
pop
jl
pop
inc
add
stc
call
xor
mov
pusha
mov
mov
mov
call
mov
dec
jno
cs
fucomi
add
(bad)
loopne
shr
mov
pushf
push
xchg
data16
pop
mov
pop
test
pop
outs
mov
daa
icebp
pop
mov
cli
dec
fcmovu
and
fcom
cmp
mov
push
pop
mov
pushf
jl
aam
rol
mov
pop
f2xm1
pop
xor
pop
lds
pop
adc
pop
shl
pop
mov
retf
popf
mov
fcmovb
inc
push
cwde
aam
rcl
sbb
or
les
cwde
es
adc
pushf
dec
push
pushf
aas
and
call
inc
and
fild
scas
sub
(bad)
mov
or
cdq
push
aam
std
aam
mov
dec
mov
add
sbb
rcl
sti
nop
pushf
jp
pushf
loope
pushf
push
fucomi
gs
push
or
push
sbb
dec
cmp
fcomp
jl
das
mov
stos
pop
nop
pushf
pop
cmp
es
fcmovnu
fstp
fist
cmp
rcr
push
fmul
fsubr
popf
fcomp
iret
fdivr
xchg
fmul
fsubr
fmul
popf
pop
or
dec
ficomp
or
fld1
fsubr
addr16
test
sub
xor
lods
lds
sbb
pop
aam
pop
push
test
aas
xchg
leave
add
outs
imul
fnstcw
enter
dec
pushf
popf
mov
cmp
pushf
bound
mov
lods
leave
mov
pushf
and
int3
imul
sub
pushf
ficom
pop
fimul
fidivr
cwde
and
enter
arpl
mov
sbb
or
dec
int3
jo
lods
and
jmp
rcr
xchg
(bad)
mov
add
adc
mov
daa
mov
addr16
ja
(bad)
push
retf
ret
call
cmps
jae
mov
int
sbb
imul
js
pushf
sbb
mov
fild
fisttp
push
xchg
xlat
xchg
(bad)
cmps
mov
fadd
or
div
iret
pop
adc
push
pushf
mov
pop
call
pop
(bad)
test
retf
rcr
pop
shr
movs
fcmovu
aam
hlt
mov
mov
aam
imul
mov
test
fisubr
int3
lock
es
int
int3
mov
lods
xor
pop
sti
push
ret
ret
mov
or
pushf
in
js
mov
dec
add
retf
in
nop
pushf
or
jmp
fstp
adc
fstp
out
fild
sbb
sub
cs
fcomp
test
push
iret
fsubr
pop
fcomp
icebp
push
xchg
mov
push
in
aam
dec
aam
mov
fistp
fnclex
mov
nop
adc
mov
fstp
(bad)
call
push
(bad)
cmp
les
mov
aas
mov
pop
mov
out
mov
mov
pushf
lods
cwde
out
dec
stos
stos
push
xchg
clc
mov
mov
sahf
mov
into
sbb
fmul
push
inc
pop
aam
outs
les
pop
pop
lods
aas
pop
dec
punpckhdq
push
xor
jle
pushf
loop
ficomp
dec
aam
mov
lahf
(bad)
mov
aam
mov
ds
jge
aam
rcl
xor
loope
aam
inc
les
mov
cmp
fbstp
mov
add
out
fisttp
fcomi
rcr
loop
fisttp
push
fstp
gs
fcom
pop
fcom
pop
fadd
sti
fdiv
fcom
mov
pop
aam
cmova
mov
fdivr
pop
fcomp
movs
fdivr
fmul
fcomp
xor
sub
sub
in
nop
xor
inc
fcom
into
lods
aam
ins
aam
sub
cdq
jmp
mov
nop
cli
aam
mov
(bad)
sbb
mov
(bad)
into
retf
mov
movs
pop
ins
xchg
sub
pop
adc
aaa
sbb
shl
dec
fistp
fisttp
adc
pop
retf
sbb
lods
or
lods
push
mov
imul
cwde
mov
pop
pop
sti
or
pop
idiv
sub
cwde
pushf
in
aam
enter
aam
imul
(bad)
cmp
gs
fld
fstp
ror
pushf
xor
jge
mov
mov
xchg
dec
adc
or
cmps
inc
xlat
mov
icebp
popf
mov
push
jl
lods
leave
out
pushf
(bad)
into
int3
inc
pop
mov
mov
pop
(bad)
ret
ja
sbb
dec
stos
pop
sahf
pushf
imul
jle
pop
in
ret
cmps
mov
cwde
lock
ror
(bad)
(bad)
sub
mov
retf
fstp
fistp
dec
clc
cli
enter
cmp
loopne
adc
xchg
sub
add
sahf
or
jle
fmul
scas
pushf
or
jnp
pushf
stc
setl
pushf
mov
pushf
push
jg
sbb
mov
dec
fsub
popf
pop
shl
fdivr
push
push
pop
loope
pop
add
pop
xor
pop
push
fistp
pop
(bad)
pop
aad
pop
pop
push
pop
and
call
jmp
and
xor
inc
loope
mov
xchg
mov
mov
cmps
jno
outs
push
pop
mov
pop
bound
pop
mov
pop
sbb
sub
jmp
fistp
neg
pushf
push
scas
pushf
dec
pop
shl
ror
mov
and
scas
rcr
mov
dec
das
fsubr
cmp
std
in
adc
movs
mov
and
cmp
sbb
jo
int3
sub
or
pushf
ins
mov
jl
aam
stc
aam
test
xor
jecxz
int3
ins
dec
int3
inc
cmp
scas
clc
int3
imul
push
push
pop
imul
dec
fcmovbe
cmp
mov
stc
mov
mov
fstp
fnclex
cmp
pusha
dec
fstp
xchg
dec
int3
fidivr
je
int3
sbb
sub
cwde
cmps
test
test
(bad)
sbb
add
mov
fdivr
fcomp
sti
sub
pusha
test
lds
or
adc
fimul
fiadd
imul
stos
ficom
push
mov
dec
cmc
stos
int3
sbb
sub
jl
mov
jae
dec
cmp
pop
xor
jmp
fistp
push
enter
lahf
inc
xchg
pop
mov
pop
sbb
cmp
inc
sti
les
jbe
neg
bound
adc
push
push
fcomp
dec
inc
aaa
stos
fwait
popf
pop
mov
mov
pushf
imul
aam
ins
les
retf
mov
push
mov
pushf
xchg
mov
out
rcr
sbb
fimul
enter
adc
ficomp
sub
outs
ins
dec
popf
rol
pushf
pushf
hlt
sbb
and
mov
dec
sbb
mov
mov
fcmovne
pushf
push
pushf
mov
lods
imul
pushf
cmps
into
aam
(bad)
aam
pinsrw
nop
mov
das
ins
add
(bad)
(bad)
fidivr
fidivr
mov
sbb
dec
push
pushf
sti
in
mov
dec
(bad)
sub
sub
rcl
pushf
pop
jle
or
daa
call
pop
rcr
cmc
dec
retf
adc
out
(bad)
fisttp
push
sahf
mov
js
or
ins
fiadd
ficomp
ficom
mov
int
jg
pushf
adc
pushf
jl
pushf
sbb
pushf
(bad)
sbb
fmul
dec
pushf
shr
or
jmp
rcr
dec
sahf
sbb
lea
add
dec
fsub
mov
dec
pushf
(bad)
push
retf
rcr
int3
ficomp
jecxz
int3
cmp
int3
imul
or
sbb
int3
dec
mov
ja
add
and
jbe
les
sbb
lods
mov
call
int3
inc
cmp
pushf
leave
mov
(bad)
fcomi
jp
dec
call
sbb
jns
inc
cmp
dec
imul
mov
dec
je
pushf
mov
iret
sahf
pushf
inc
imul
ficomp
dec
fsubr
sbb
(bad)
sbb
jae
pushf
std
mov
pop
push
enter
pop
or
sbb
push
dec
pop
push
pop
sub
pop
inc
fstp
pop
xchg
std
jp
mov
push
pop
dec
push
pop
scas
push
retf
dec
fisttp
call
mov
scas
mov
or
stos
ficomp
jo
fisubr
cwde
or
lods
push
popf
pop
inc
bound
cld
into
fistp
fld
fcomi
cs
jecxz
cmps
push
xchg
ds
loopne
mov
mov
mov
jg
clc
lahf
mov
add
retf
in
fcomi
xor
stos
add
leave
call
xor
fwait
inc
mov
(bad)
pushf
stc
mov
pop
fcmovnu
xchg
iret
call
int3
popf
lahf
int3
nop
jg
fnstsw
pop
inc
push
bound
fiadd
fisubr
(bad)
mov
jl
cwde
clc
cdq
fadd
ins
push
xchg
and
pop
inc
aam
popa
aam
push
les
mov
hlt
cwde
mov
pushf
rcl
mov
call
mov
loope
fcmovb
jb
mov
fisubr
add
retf
xor
jae
aas
mov
or
arpl
and
push
ret
int3
mov
mov
pop
xchg
ret
fist
fild
pop
shl
jecxz
fcom
je
fadd
jecxz
fsub
fadd
fmulp
loop
ror
ss
jb
loopne
mov
loope
imul
fistp
push
sahf
mov
xchg
jg
pop
jmp
and
pop
pop
rcr
pop
retf
jo
jbe
pop
pop
xor
rcl
fiadd
fisubr
ficomp
lahf
fiadd
dec
fiadd
fisubr
(bad)
mov
xchg
push
(bad)
popf
fidivr
pop
fimul
cmp
inc
adc
retf
jl
pushf
push
retf
mov
cmps
sbb
inc
retf
(bad)
jnp
test
fistp
or
out
jmp
or
mov
dec
jge
stc
psubusb
les
pop
mov
jns
dec
dec
mov
fdivr
retf
fld
pop
push
xor
cbw
pushf
movmskps
enter
aam
clc
aam
cmp
aam
aam
mov
les
scas
out
rcr
xchg
dec
nop
pushf
jl
pushf
cmc
dec
pushf
das
cmp
jno
adc
mov
mov
test
push
pop
inc
test
vshufps
imul
dec
int3
xor
int3
xchg
sbb
lods
xlat
call
cwde
pop
inc
xchg
retf
iret
pop
int3
aas
imul
mov
pop
cdq
lods
pop
sahf
pushf
sbb
dec
cmp
pop
inc
loop
fcmovu
mov
mov
mov
leave
leave
mov
call
ds
icebp
pop
int3
nop
dec
int3
pop
cmp
cmp
popa
push
mov
and
ficomp
xchg
enter
pop
daa
or
ficomp
cmps
enter
in
aad
clc
push
pushf
pop
fcomp
pop
jmp
pop
or
pop
or
pop
inc
sub
or
pop
leave
nop
pushf
mov
jnp
sbb
mov
pushf
push
mov
sbb
scas
sbb
je
fimul
fidiv
fisub
inc
outs
jg
or
pushf
mov
(bad)
out
stos
daa
popf
pushf
cmp
jns
mov
into
lahf
movs
nop
out
rcr
push
(bad)
fcmovnu
xor
pop
nop
fld
fist
fild
fld
jne
fld
fist
movs
fdiv
enter
retf
push
jo
fcmovb
xchg
ficom
cwde
mov
inc
jae
sub
mov
add
jl
mov
ins
and
push
add
retf
inc
fld
inc
xchg
mov
fidiv
ss
aam
and
fist
aam
loope
mov
mov
push
leave
aad
pushf
inc
lock
scas
loopne
aaa
ror
mov
jnp
sbb
call
js
pop
jns
in
sahf
div
mov
and
pop
push
inc
push
shl
lods
fistp
frstpm(287
jg
push
aas
fcmovnb
(bad)
sbb
cld
cs
std
sub
sbb
pop
aas
popf
pop
or
hlt
mov
ret
std
pop
push
push
mov
jmp
xchg
push
hlt
int
lods
add
jnp
pushf
push
dec
int3
movs
in
int3
pop
pushf
int3
inc
jl
loop
int3
add
int3
push
jmp
loope
or
stos
fisub
mov
les
retf
imul
pop
sahf
mov
pop
in
sbb
pop
pop
jmp
sbb
xor
jp
fmul
fsubr
add
or
jmp
fdivr
enter
pop
(bad)
fstp
mov
test
sbb
push
imul
loop
fcmovu
call
aam
fcom
arpl
mov
stos
fimul
pushf
retf
icebp
mov
inc
fdivr
push
enter
ret
cmp
pushf
pop
neg
jns
pop
lock
cmp
pop
gs
pop
arpl
mov
cli
pushf
mov
pushf
fs
mov
pushf
mov
test
imul
sub
pushf
xor
pushf
jo
lods
daa
sahf
pushf
xor
pushf
jp
jmp
(bad)
test
sbb
fcomp
fild
clc
jle
inc
mov
imul
mov
int3
mov
int3
xor
data16
jle
mov
ins
mov
outs
add
sahf
pop
or
sar
pop
mov
push
ficom
fidivr
jno
sub
mov
cdq
push
sbb
pop
xchg
rcr
adc
pop
sbb
retf
inc
clc
cmp
xchg
add
sub
jns
fisub
fcmovb
push
(bad)
add
mov
fisub
(bad)
mov
leave
mov
pusha
mov
pop
je
sbb
fdiv
inc
xor
mov
sar
pop
sbb
sar
fimul
fcmovu
lahf
cwde
rcl
fmul
fcomp
mov
out
mov
scas
lahf
enter
xchg
adc
pushf
or
ss
les
jg
pushf
addr16
pushf
add
je
mov
int3
pushf
xor
aas
jl
pushf
jle
daa
sbb
mov
pushf
xor
cdq
push
sub
add
pop
xor
sbb
arpl
mov
nop
pushf
std
push
movs
cmp
cmp
jl
pushf
std
mov
pop
hlt
ret
neg
ds
add
sbb
push
jmp
pop
mov
stos
adc
aad
lods
rcr
ret
loop
fcmovu
scas
(bad)
fisubr
cmps
adc
movs
mov
pushf
fnsave
ret
pushf
data16
xlat
clc
push
fadd
xchg
pop
fdiv
inc
jecxz
(bad)
popf
stos
dec
xchg
pop
fisub
mov
add
out
int
int3
adc
int3
in
or
ins
sbb
pushf
ss
pop
mov
pushf
push
fmul
fdivr
enter
sbb
pushf
shl
enter
int3
xor
int3
and
xlat
test
mov
int3
in
call
mov
jmp
retf
xchg
enter
xchg
repz
in
out
pushf
fcmovbe
fild
fcmovnu
cmp
inc
pop
fisttp
fstp
je
aaa
popf
sbb
fstp
sbb
pushf
dec
cwde
cmps
retf
xchg
imul
fistp
clc
cmps
fcomp
fsubr
push
mov
les
mov
scas
ficomp
pushf
fwait
pop
pushf
imul
lock
jmp
sub
sbb
dec
retf
jnp
lahf
fdivr
lods
inc
mov
add
fldenv
or
fsubr
mov
xchg
push
add
xlat
stos
les
ins
icebp
push
retf
sub
add
mov
or
sbb
mov
(bad)
ficomp
das
push
pop
pop
sbb
inc
jmp
stc
cmp
in
pushf
mov
add
push
pushf
xchg
aam
or
ja
aam
dec
les
mov
neg
or
mov
ins
push
dec
dec
aam
pop
les
mov
sbb
les
es
rcr
(bad)
lock
leave
in
mov
sbb
cmp
adc
pushf
lods
in
pushf
pop
push
pushf
fstp
pushf
pop
dec
pushf
call
mov
mov
xor
push
push
(bad)
fstp
inc
popf
cwde
xchg
mov
mov
aam
sbb
or
add
dec
(bad)
retf
clc
clc
push
fcomp
jge
or
fstp
fisub
mov
add
adc
mov
cmp
iret
sbb
or
test
sahf
pushf
inc
mov
pushf
inc
or
add
fcmove
dec
ficom
hlt
rcl
pop
mov
sub
inc
mov
icebp
jnp
dec
mov
ins
out
rcr
neg
pop
fdivr
fsubr
fdivr
fdivr
repz
cs
xchg
fdivr
cwde
mov
retf
xchg
call
mov
inc
mov
pop
enter
mov
or
cwde
pushf
inc
or
test
(bad)
pop
retf
outs
call
cmp
fcomp
enter
nop
mov
mov
fcomp
fmul
movs
or
xor
pushf
bound
push
test
mov
mov
pop
pop
call
pop
add
pop
xor
shr
stos
or
dec
sbb
sbb
or
dec
cmp
pushf
fistp
push
xchg
cld
stos
nop
pushf
pusha
mov
sbb
fcomp
fcomp
mov
mov
fiadd
fisub
cmp
push
pop
cli
std
nop
pushf
ds
pop
add
pop
sar
and
pop
push
push
cmp
pop
retf
rcr
std
mov
push
fst
xor
clc
popf
aam
int
mov
leave
mov
pushf
xchg
(bad)
sub
jmp
cmp
mov
mov
int
sub
mov
(bad)
pop
jne
pop
pop
lods
cli
ret
pop
ins
mov
addr16
pop
imul
fstp
sbb
fmul
fsubr
fmul
xor
out
int3
and
int3
and
int3
push
int3
or
cdq
mov
ds
mov
gs
ror
test
pushf
bound
or
mov
pushf
add
inc
outs
mov
mov
mov
mov
sub
pushf
mov
mov
into
mov
out
icebp
sbb
pushf
cmps
lods
mov
pushf
push
cwde
sub
pushf
loopne
pushf
jmp
pushf
mov
pushf
cmc
popa
pushf
cmp
loope
adc
inc
push
fsub
rcr
adc
pushf
xchg
jo
fbld
fistp
fucomi
jg
xor
stos
sbb
mov
aam
(bad)
cmc
adc
mov
aam
push
les
jo
mov
mov
lock
cmp
jnp
mov
out
mov
lahf
mov
pop
dec
pop
push
push
nop
pushf
loopne
pushf
jnp
pushf
mov
pushf
push
cld
pushf
fsubrp
pushf
je
pushf
cmp
pushf
inc
fistp
mov
jmp
adc
pushf
jle
movs
aas
or
pop
cld
mov
mov
fucom
sahf
mov
mov
dec
mov
fidivr
cdq
dec
mov
inc
dec
pushf
enter
ins
popf
cli
pushf
mov
xlat
jmp
pop
sub
fcomp
mov
cli
mov
cmps
pop
retf
retf
addr16
ficomp
mov
dec
jp
cmp
retf
or
loopne
and
imul
cwde
mov
call
push
fistp
pop
test
jbe
rcr
cld
pop
cwde
int
or
rcr
dec
ret
mov
fdivr
inc
pop
retf
xor
and
ins
xchg
cli
sbb
lods
mov
fcmovnbe
sbb
fwait
cli
fist
jmp
jb
int3
add
sub
xchg
fisttp
(bad)
xchg
stos
pushf
neg
rcr
add
fstp
inc
dec
mov
mov
pop
cmp
sub
bound
pushf
enter
aam
or
push
cmp
push
cld
aam
or
out
xlat
imul
pushf
int
(bad)
push
lods
fidiv
cmp
pop
fst
ja
and
pushf
and
pushf
sub
dec
outs
pushf
xor
pushf
rcr
push
push
imul
dec
pop
xchg
outs
mov
(bad)
fcmovbe
outs
ficom
mov
xchg
push
(bad)
jo
pop
mov
aas
adc
mov
fidivr
and
xor
scas
adc
jmp
mov
adc
test
xchg
push
sbb
(bad)
push
cli
enter
aam
adc
jo
js
ins
and
not
pop
push
and
pop
cmc
mov
pushf
fisttp
and
retf
add
mov
pushf
cdq
mov
inc
retf
xor
mov
dec
pusha
les
jmp
mov
sub
fisub
fiadd
fcom
or
iret
pop
fcomp
jo
es
pushf
fimul
fiadd
ins
imul
leave
mov
lea
jecxz
fistp
fcmovnu
(bad)
fucomi
fidivr
fisubr
fisubr
ds
sar
(bad)
sahf
fisttp
scas
fisttp
(bad)
(bad)
mov
ficomp
pop
cwde
out
or
aas
push
push
pop
pop
aam
into
aam
sahf
aam
mov
(bad)
das
aam
paddq
aam
mov
aad
or
pushf
fisubr
jmp
fcmovnu
sub
mov
leave
pop
mov
int3
cmc
outs
lods
outs
sahf
pushf
js
pushf
mov
sar
ds
xlat
std
pop
cmp
mov
sub
repnz
push
mov
lahf
popf
(bad)
(bad)
mov
sbb
dec
fistp
mov
aad
aam
or
shr
jg
add
lea
xchg
leave
aad
pushf
mov
int3
jge
pushf
push
push
cld
mov
pushf
mov
mov
call
fcmovnb
mov
int3
xchg
out
mov
(bad)
mov
fucomi
retf
jp
pop
sub
mov
fld
xchg
(bad)
jmp
dec
mov
sub
retf
jno
cmp
fld
fist
xor
call
int3
aad
int3
xchg
test
adc
push
mov
out
mov
imul
pop
cmp
pushf
ror
pop
xor
push
pushf
scas
or
xor
pushf
push
sbb
jle
mov
pushf
daa
mov
push
sar
pushf
aaa
lds
pop
stc
iret
xchg
mov
(bad)
stos
out
pushf
daa
sar
mov
aad
mov
ins
nop
sti
jnp
xchg
pop
xchg
dec
pushf
inc
sbb
aam
aam
retf
aam
ins
aam
sub
out
in
aam
push
aam
pop
aam
scas
aam
into
aam
out
aam
paddq
les
cmp
or
stos
lahf
pop
(bad)
(bad)
pop
gs
pop
jl
pop
jecxz
pop
push
pop
sub
xchg
xor
pop
imul
fstp
(bad)
add
fiadd
sbb
jle
sbb
rcr
jmp
fcomi
push
mov
les
mov
mov
pop
xchg
pop
cmp
push
loope
jg
cli
jns
cwde
iret
imul
sbb
aam
shl
pushf
pop
cwde
cdq
xchg
pushf
loope
pushf
rol
loopne
inc
mov
inc
nop
pop
push
pusha
pushf
sbb
mov
push
push
cli
and
(bad)
rcr
fwait
ds
rol
js
fimul
inc
adc
imul
jmp
pop
lahf
push
(bad)
mov
rcl
jmp
and
mov
(bad)
iret
push
jb
push
retf
inc
out
mov
pushf
pop
out
(bad)
inc
adc
add
adc
les
stos
lea
mov
or
fidivr
fcom
enter
pop
cmp
pushf
mov
(bad)
cld
retf
movs
jmp
fistp
fistp
(bad)
call
push
xor
cmps
push
(bad)
mov
xor
pop
icebp
jo
mov
dec
mov
pushf
push
add
sahf
pop
shl
ret
aas
mov
fcom
and
aas
dec
push
pushf
iret
mov
mov
fadd
dec
int3
cdq
fistp
pushf
leave
outs
aam
dec
aam
das
aam
mov
stos
int
sti
retf
repnz
pushf
fiadd
(bad)
ins
fcmovb
pop
ficom
fisubr
fisubr
fcmove
outs
fiadd
cs
aam
jg
or
dec
int3
and
int3
jb
int3
aam
int3
retf
ins
in
int3
inc
lods
int3
cs
mov
pushf
push
dec
pushf
loop
pushf
jb
pushf
pop
jnp
push
pop
loopne
pushf
add
aam
cli
les
sub
cdq
(bad)
(bad)
rcl
fistp
sub
fdivr
ret
inc
mov
jbe
mov
mov
pop
(bad)
inc
dec
aam
cmp
jnp
aam
sbb
call
push
les
dec
popf
push
add
jmp
loope
pop
cmp
repnz
sub
fisubr
test
mov
sub
fcmove
jns
ds
push
push
lock
outs
pushf
popf
cdq
adc
mov
jbe
aaa
sahf
push
push
mov
pushf
lea
mov
mov
or
dec
icebp
mov
ficom
loopne
pop
pop
adc
daa
xor
xchg
dec
jg
sub
test
rol
pushf
sub
int3
jmp
fcomp
cmp
fmul
xor
and
mov
mov
push
push
pop
push
mov
or
pop
call
mov
pushf
pushf
cwde
ins
mov
rcr
sub
retf
sub
shl
ret
sub
pop
fild
fstp
mov
out
ins
stos
mov
ficom
fcmovb
or
mov
fisub
aam
iret
mov
mov
push
popf
clc
pushf
mov
sbb
sbb
pushf
test
int3
sub
int3
ss
lods
not
sbb
jmp
pushf
mov
pushf
clc
mov
(bad)
sbb
mov
(bad)
dec
lods
adc
popa
dec
pushf
inc
pop
pop
hlt
loop
rcr
inc
sti
fisubr
ficom
dec
(bad)
mov
inc
int3
inc
mov
pop
mov
fsub
scas
fistp
or
push
jge
js
(bad)
(bad)
mov
xor
leave
jmp
pushf
scas
bswap
dec
pop
int3
clc
pop
int3
cmp
sub
int3
xor
int3
jmp
pushf
or
sbb
pushf
mov
sahf
popf
out
inc
int
jg
repnz
pushf
mov
fnstsw
mov
fidivr
pop
rcr
pop
(bad)
adc
pop
inc
mov
pop
xor
pop
out
pop
and
(bad)
div
call
adc
enter
pushf
(bad)
out
push
pushf
(bad)
iret
pop
mov
pop
dec
dec
pop
sbb
pop
pop
mov
cli
aam
hlt
add
dec
aam
pop
mov
bound
adc
cdq
fmul
fadd
xor
out
(bad)
mov
xor
lahf
adc
pop
pushf
jns
aas
dec
fsubr
je
psadbw
fiadd
lods
push
mov
into
push
or
jmp
test
jae
mov
sbb
(bad)
fstp
pushf
repz
pop
int
(bad)
pushf
ficomp
retf
xchg
pop
or
pushf
test
pop
int3
inc
cmp
xlat
xchg
pop
jp
adc
ficomp
inc
push
mov
leave
add
int3
mov
lods
out
nop
pop
retf
push
adc
pop
add
sbb
jmp
inc
sub
xchg
pushf
mov
jne
pushf
cwde
cmp
mov
cmp
and
cmp
ret
int
sbb
mov
ficom
dec
arpl
push
gs
pop
mov
xor
(bad)
jmp
(bad)
frstor
popf
rcl
stos
pushf
ret
mov
mov
fmul
xor
jmp
push
sbb
aam
sti
aam
or
aad
mov
and
out
jp
push
mov
mov
push
pop
adc
and
aas
sti
pop
iret
fcmovne
in
adc
mov
fisub
fisub
(bad)
fisub
inc
mov
pushf
push
cwde
rcr
dec
pushf
lea
loop
fcmovu
add
adc
lods
mov
xchg
aad
push
pushf
mov
sahf
jl
movs
push
mov
xor
stos
push
pop
int3
fistp
fcmovnu
sti
(bad)
fld
mov
int3
das
jmp
mov
lods
iret
sahf
pushf
xchg
pushf
pushf
sub
mov
mov
sbb
push
or
mov
lea
pop
pop
pushf
hlt
cld
pushf
mov
pop
cs
jmp
jmp
mov
sbb
adc
js
out
pushf
ficomp
ficom
jg
mov
jl
call
fdivr
mov
dec
mov
pop
mov
test
pop
fistp
fild
in
mov
fsubr
mov
pushf
jge
cmp
test
jmp
pushf
cmc
(bad)
xchg
ffreep
out
mov
cmp
shl
fdivr
js
inc
sub
adc
les
mov
inc
ret
imul
dec
call
int3
popa
ins
mov
ins
pop
push
cli
sub
cwde
bound
cmp
enter
pushf
jb
mov
popf
add
nop
mov
sti
pushf
loop
pushf
or
out
popf
ret
cmp
pushf
xor
pop
mov
mov
add
cwde
inc
fsubr
mov
pushf
fcmovu
cld
hlt
jmp
fcmovu
das
int3
fisub
fcmovbe
mov
repnz
cmp
fsubr
fmul
fsubr
iret
fdivr
pop
inc
lahf
mov
pushf
mov
rcr
mov
or
pop
pop
pushf
sbb
out
xchg
ror
xchg
sti
pushf
ins
pop
std
push
mov
pop
das
stos
pop
and
shr
fcom
sbb
pushf
mov
hlt
push
mov
sub
mov
call
pop
pop
sub
retf
sbb
or
int3
(bad)
xchg
test
fistp
std
xlat
sbb
adc
gs
sbb
jns
pushf
mov
mov
int3
fisttp
sbb
int3
idiv
pushf
sub
pushf
push
cmp
jnp
ins
or
(bad)
fcomp
cs
or
mov
pop
(bad)
js
pushf
inc
ret
sub
jno
sub
enter
in
xchg
out
js
pushf
shr
call
inc
fmul
aas
clc
int3
mov
pushf
cld
js
repz
aad
aam
stc
aam
jp
lahf
mov
idiv
stos
clc
pushf
fidiv
ficomp
dec
int3
inc
enter
int3
mov
stos
push
jb
mov
jmp
test
int3
mov
int3
pop
pushf
lods
rcl
pop
pushf
pop
ins
pushf
mov
jo
imul
pop
fcmovnb
sub
sub
mov
inc
jl
adc
adc
les
(bad)
lods
lods
ds
pushf
dec
xor
add
(bad)
ds
fmulp
aam
pinsrw
popa
in
jne
add
scas
pushf
cmp
out
imul
dec
cdq
dec
push
call
dec
mov
push
pop
addr16
pop
jae
pop
ret
adc
pop
test
pop
dec
mov
stos
push
or
inc
popf
pushf
ss
pushf
test
pushf
jge
pop
add
stc
mov
fidivr
ficom
loopne
adc
(bad)
mov
fwait
nop
mov
push
mov
and
leave
mov
pushf
or
retf
push
push
jmp
iret
les
jl
int3
jg
int3
lods
add
hlt
and
mov
int3
jnp
mov
mov
mov
sub
jecxz
pop
pop
pop
repnz
(bad)
cwde
jo
fsub
inc
pop
cld
sti
pop
pusha
cli
or
cwde
or
dec
lods
call
inc
ret
ret
(bad)
fistp
mov
sbb
push
mov
mov
lock
cwde
nop
and
jmp
fucomi
psubusb
inc
push
mov
mov
cmp
mov
xor
fsub
push
fadd
fcom
fsub
int
push
test
xchg
adc
icebp
popf
mov
pop
jl
arpl
pushf
fcmovu
jno
xlat
sbb
aam
push
aam
jno
xchg
sbb
aaa
fadd
sub
mov
ins
loop
pop
sub
retf
cwde
mov
fadd
(bad)
fsub
data16
sub
int3
add
int3
cmps
adc
test
int3
pusha
add
nop
dec
dec
out
int3
push
iret
mov
pushf
sub
xor
fstp
rcr
sbb
fld
mov
pop
shl
add
cmp
xor
in
fstp
(bad)
fstp
inc
(bad)
(bad)
in
fstp
cmp
mov
pushf
lds
mov
mov
mov
mov
mov
std
mov
push
mov
cwde
xor
jmp
(bad)
lea
pop
pop
inc
sub
repz
mov
inc
pop
fistp
(bad)
mov
les
mov
sbb
or
(bad)
and
cmp
pushf
es
push
or
adc
lock
sbb
push
jl
cli
or
sbb
mov
adc
cmp
test
mov
pushf
adc
into
dec
fisttp
cmp
or
hlt
test
mov
aam
jp
xchg
ss
sbb
dec
ficomp
out
or
fdivr
or
mov
int3
sub
mov
dec
dec
jnp
jle
je
pushf
ficomp
fcmovu
stc
jmp
aam
cli
aam
stos
les
dec
mov
add
pushf
imul
sar
push
mov
les
pushf
jmp
nop
mov
jmp
fistp
push
ror
aam
mov
inc
push
cmp
push
mov
clc
sub
leave
mov
fcomp
jno
int3
pusha
cmp
pushf
push
lahf
mov
pop
call
pushf
cmc
(bad)
push
fcmovnu
sar
call
fs
hlt
(bad)
ror
les
popf
pushf
leave
retf
fcmovnu
dec
sbb
cmp
rcr
imul
fwait
aam
mov
sahf
fcmovnb
daa
retf
and
pushf
mov
pop
repnz
(bad)
fimul
cwde
mov
ins
sub
and
pop
push
in
pop
aam
sbb
hlt
sub
mov
xchg
pop
pop
ins
pushf
sub
les
stos
cmp
dec
sbb
sbb
in
pushf
(bad)
fstp
es
mov
sub
fiadd
push
into
aam
paddq
outs
aam
jg
pushf
pop
aam
out
aam
das
aam
lahf
aam
iret
aam
scas
aam
jg
and
das
(bad)
mov
push
add
pushf
into
and
fcmovnb
loopne
sahf
push
(bad)
jno
mov
les
jne
int3
leave
mov
in
js
pop
xor
(bad)
fisubr
fcmovbe
adc
loop
ficomp
add
mov
cld
aam
nop
(bad)
int
pop
sahf
pushf
les
arpl
jecxz
pop
repz
fcmovu
fnsave
daa
leave
fcom
fadd
mov
jg
fmul
fsubr
test
dec
leave
fdivr
jmp
(bad)
int
inc
adc
dec
xchg
out
movs
stos
sahf
popf
sub
xlat
mov
pushf
imul
push
jge
pop
sbb
pop
push
in
sbb
mov
(bad)
pushf
fstp
sbb
cwde
and
fdivr
and
fild
stos
in
fcomp
mov
push
adc
sti
pushf
dec
push
mov
in
sub
icebp
stos
sbb
icebp
inc
mov
inc
pop
int3
and
cmp
loopne
leave
cmp
test
xchg
shl
int3
mov
add
rcr
fs
cld
mov
(bad)
into
fadd
int
fdivr
push
xchg
dec
xor
adc
(bad)
sti
pushf
pop
or
fcmovnbe
mov
adc
aam
fcmovnbe
ret
je
aam
jnp
jp
aam
dec
aam
sub
fistp
loope
inc
cmps
aam
stos
les
mov
xor
call
jp
adc
mov
in
outs
and
pop
pop
ficomp
push
fidiv
pushf
jae
int3
sbb
int3
jmp
lods
stc
nop
sti
mov
fist
sbb
push
mov
push
sar
pop
and
push
(bad)
push
or
aam
cmp
sub
les
stc
cli
fcmovne
mov
fisub
fidiv
or
aam
jns
ja
aam
cmp
xor
sbb
ficomp
aam
pop
aam
jmp
aas
mov
or
retf
mov
fisubr
stos
pop
sub
aaa
xchg
leave
dec
sbb
int3
jl
int3
cs
cwde
pop
int3
out
mov
and
rcr
fiadd
imul
xchg
pop
sbb
mov
dec
mov
lea
push
mov
sar
pushf
adc
imul
jle
int3
push
pushf
fild
jns
pushf
shr
ret
xlat
call
lods
aaa
push
pop
int3
mov
mov
pushf
pminub
pop
fcmovb
(bad)
fiadd
fidiv
fcmovb
scas
cwde
xor
loope
mov
outs
mov
pop
jp
jae
pop
iret
dec
pop
mov
pop
cmp
sub
pop
pusha
push
pop
or
stc
fstp
pop
inc
int
stos
ficomp
push
ins
mov
cmps
sbb
adc
xchg
sahf
pop
ret
pushf
in
fisttp
cmp
ss
ds
call
mov
pushf
sbb
sub
lods
lods
sbb
jl
pushf
add
mov
fidivr
fisubr
fimul
push
outs
aam
mov
sar
mov
outs
ss
ret
popf
fcmovnb
mov
(bad)
fistp
mov
xchg
xchg
add
icebp
retf
sbb
pop
cmp
sub
mov
fld
mov
or
jne
mov
nop
mov
pushf
enter
fwait
pop
cmp
pushf
cmp
in
les
mov
adc
aaa
mov
dec
call
stos
pushf
sub
jmp
fucomi
lods
fdivr
retf
mov
outs
mov
pop
retf
in
fild
fcmovnb
pop
(bad)
cmp
adc
aam
leave
aam
mov
gs
push
fwait
icebp
js
dec
dec
pushf
ficomp
stc
or
and
fcmove
call
sub
and
int3
mov
pushf
jecxz
ins
(bad)
push
pop
and
xor
mov
fwait
retf
pop
push
dec
mov
enter
mov
jns
mov
sub
xchg
leave
add
cmp
int3
shr
int3
jle
int3
cmps
test
popf
js
xchg
push
sbb
pushf
add
ja
out
xlat
in
push
lods
mov
pushf
or
outs
sub
push
fmul
fcomp
cmps
fdivr
xchg
fdivr
aas
fdivr
fcomp
or
cdq
jns
inc
imul
push
pushf
in
pushf
push
dec
pushf
mov
pushf
das
enter
pushf
xor
pushf
fdivrp
pushf
add
pop
xor
aam
sbb
mov
aam
or
les
les
retf
add
add
stos
int
pushf
pop
pop
jmp
push
fmul
fmul
fcomp
fmul
mov
sub
mov
fcomp
or
pushf
cmp
add
imul
call
popa
fsubr
sub
aam
pushf
push
cdq
and
mov
mov
sbb
into
mov
imul
cs
shr
pushf
fimul
fcmovb
pushf
ficom
inc
les
jg
push
cwde
cli
lods
pushf
test
mov
jnp
popf
dec
repnz
mov
push
cli
loop
movs
ficomp
push
push
rcr
fwait
sub
aas
lea
cli
mov
cmps
ins
lods
adc
pushf
out
mov
fimul
fidivr
dec
cwde
mov
or
pushf
jbe
add
push
push
lods
pop
mov
push
les
stos
add
cs
pushf
ds
dec
mov
fsubr
(bad)
fcomp
xlat
push
add
aam
int
or
jnp
mov
ja
pushf
adc
xchg
shl
pushf
ficomp
xor
jae
cwde
lahf
pop
inc
add
outs
int3
dec
mov
adc
pushf
push
pushf
sub
pushf
enter
jle
or
out
pushf
dec
outs
pushf
and
scas
fcmovu
mov
sbb
mov
retf
adc
xlat
fcom
fdivr
fmul
mov
lods
popa
mov
retf
pop
aas
int3
inc
jg
sbb
pop
iret
pushf
push
cwde
add
pushf
sti
adc
pushf
in
jmp
fcmovnu
mov
fld
fstp
xor
jns
inc
lock
adc
mov
les
mov
xchg
xor
pop
fcmovbe
pop
pop
mov
fsub
out
pop
div
pop
mov
pop
add
mov
mov
fild
(bad)
popf
push
in
xchg
adc
lods
xor
sub
cmp
mov
outs
adc
mov
sbb
pop
pop
add
retf
sar
iret
sbb
xchg
loope
mov
hlt
aam
pushf
pop
xor
pushf
lock
mov
imul
mov
pushf
add
pandn
pushf
lds
xor
pushf
sbb
pushf
outs
iret
pushf
xchg
outs
pop
jbe
ret
mov
retf
(bad)
clc
popf
fcomp
fadd
in
fcom
fdiv
mov
jg
dec
(bad)
mov
(bad)
retf
mov
jl
fcmovb
cmp
dec
dec
fidiv
lea
jl
cmp
mov
int
xor
pushf
fistp
lods
pushf
jne
pushf
adc
jmp
fcmovnu
mov
xchg
or
cld
pushf
jb
pushf
movs
dec
cli
fucomip
aad
mov
sub
fmul
stc
fcomp
leave
fdivr
fcomp
inc
sub
jp
xchg
push
pop
cmp
mov
fidivr
hlt
cdq
les
cmp
out
pop
mov
mov
retf
(bad)
fist
scas
mov
pushf
mov
mov
pop
ins
ins
push
cli
push
fisub
sbb
push
mov
sbb
push
(bad)
clc
retf
xchg
xlat
imul
cdq
mov
ins
popa
push
pop
inc
test
fisubr
mov
rcr
cmp
ret
pop
mov
ficomp
ficomp
int3
mov
int3
std
or
jge
lods
cmp
push
test
leave
cwde
out
mov
cdq
or
imul
(bad)
enter
ficom
pop
pop
jecxz
pop
pop
fcomp
pop
dec
cmp
pop
jbe
pop
movs
pop
pop
dec
or
pop
in
jns
sar
(bad)
fimul
fstp
inc
sahf
jmp
rcr
fsubr
rcr
push
dec
mov
xchg
sub
jno
mov
fmul
leave
push
jmp
pop
sub
pop
mov
pop
mov
mov
push
xchg
in
fucom
stos
iret
jno
fistp
fstp
or
dec
add
pushf
or
pushf
shr
outs
in
pop
dec
xchg
(bad)
test
(bad)
fistp
mov
aad
les
pushf
movs
pop
adc
cmp
xchg
mov
ins
mov
stos
dec
iret
mov
add
mov
aam
(bad)
aam
dec
aam
scas
movs
xor
mov
cmp
iret
push
retf
and
popf
pop
xchg
data16
cmp
cmp
(bad)
adc
mov
pop
and
pushf
fisubr
push
nop
les
pushf
inc
cwde
arpl
pushf
push
jo
cwde
sbb
in
lock
(bad)
jmp
mov
xchg
rcl
adc
aam
and
(bad)
push
mov
mov
je
pushf
pop
xchg
int3
retf
and
pushf
sub
iret
out
fild
gs
pushf
nop
pop
mov
push
jmp
push
pushf
lock
test
pop
push
into
jmp
loope
push
jno
inc
mov
fdiv
int3
add
int3
jae
pushf
xchg
sbb
mov
pushf
(bad)
mov
sar
pop
popa
in
pop
stc
popf
pop
hlt
dec
pop
or
mov
jo
fcmovbe
dec
ficomp
cld
stos
aam
fcmovnb
xor
rcr
jp
retf
scas
retf
push
aam
mov
mov
aam
or
mov
les
pushf
scas
cwde
mov
pushf
jp
pushf
jg
pushf
loop
pushf
mov
pushf
mov
stos
add
mov
jbe
mov
jmp
mov
xchg
push
loopne
sbb
jo
(bad)
call
mov
pushf
and
cmc
pop
mov
cmp
mov
pushf
and
pushf
pop
mov
fcmovu
add
push
pop
aam
test
inc
mov
fistp
hlt
xor
push
jno
pushf
scas
inc
aam
mov
int3
stos
or
lock
fidivr
push
icebp
fmul
fsubr
movs
push
out
sbb
movs
clc
aam
enter
aam
sbb
ja
aam
out
jge
les
mov
mov
ret
fcmovne
test
(bad)
call
aad
(bad)
mov
out
imul
cdq
pushf
jle
cmc
test
imul
je
jns
fimul
add
fimul
(bad)
fadd
pop
pushf
ret
dec
nop
pushf
push
imul
rcr
jg
in
aam
sbb
popa
cmp
sub
dec
jns
ret
dec
int3
cmp
mov
fwait
leave
out
test
in
int3
fdivr
ret
mov
(bad)
stos
pushf
inc
jp
push
push
jg
call
jmp
retf
stos
aam
call
add
pop
jp
pushf
mov
sub
aam
dec
les
mov
fiadd
(bad)
mov
gs
fsubr
in
int3
xor
xor
pushf
push
call
cld
imul
fcmovnbe
and
movs
mov
mov
mov
push
push
lods
or
pushf
std
ds
bound
mov
pushf
jmp
pushf
retf
fstp
pushf
inc
cs
rcr
jmp
imul
in
int
mov
leave
fucomip
pushf
out
int3
dec
std
int3
movs
(bad)
fidivr
jmp
pushf
xchg
pushf
pop
push
pushf
sub
xor
cmp
pushf
and
pushf
daa
jg
ficomp
in
fucomi
dec
fdiv
int3
mov
int3
lock
mov
aas
mov
cmps
inc
pop
pop
and
aam
pop
aam
les
ins
cdq
pop
pop
loop
pop
mov
pop
fwait
outs
pop
and
pop
sub
add
in
pop
ficomp
fisubr
fcmovbe
in
cwde
xor
int3
jbe
lods
int
pushf
(bad)
fstp
pushf
test
mov
pop
fiadd
cmp
pushf
lods
cld
pushf
lods
int3
jmp
(bad)
sar
retf
(bad)
pushf
int3
dec
cmp
sbb
pushf
and
loop
fcmovb
cdq
sti
add
cmps
sbb
pushf
hlt
enter
mov
mov
mov
sbb
mov
pushf
fidivr
sub
es
xchg
add
imul
mov
pushf
stc
pop
int3
push
cmp
mov
lods
pop
nop
pop
call
adc
dec
push
enter
sbb
jmp
std
fcmovnbe
pop
retf
les
inc
fucomip
push
fcomp
cmps
stos
aam
fwait
aam
mov
cmp
mov
cwde
adc
in
push
in
pop
popa
cmp
inc
mov
mov
jmp
pushf
mov
pushf
lods
cmp
(bad)
jno
icebp
imul
cmp
xchg
or
push
cli
mov
pop
push
pop
nop
pushf
inc
cmp
fistp
inc
fcom
int3
ins
mov
sub
push
sbb
fwait
stc
jmp
fistp
push
fstp
adc
mov
mov
mov
cwde
mov
pushf
adc
pushf
aas
or
jmp
fucomip
loopne
pusha
fsubr
(bad)
fcomp
int
push
push
mov
int3
mov
int3
in
sbb
dec
leave
mov
cwde
fidivr
sub
jmp
fstp
fcmovbe
sbb
sar
dec
inc
push
mov
aam
or
repnz
aam
sbb
mov
pop
xchg
stos
cmp
leave
test
inc
mov
push
pop
adc
pushf
fucom
aam
(bad)
aam
xlat
(bad)
in
mov
cwde
mov
dec
mov
push
retf
out
cmp
and
push
pushf
fsubr
clc
push
pushf
sti
push
xchg
or
mov
pop
cwde
(bad)
push
sbb
sub
loop
stos
jno
jmp
test
or
fdivr
cld
inc
arpl
push
out
rcr
aaa
sbb
enter
xchg
pop
mov
nop
pushf
in
jmp
fistp
xor
push
or
fisub
(bad)
cwde
(bad)
clc
fisubr
push
jp
popa
sub
ror
out
int3
push
mov
ds
jnp
lods
or
adc
fistp
fist
sbb
mov
cmp
fcomp
push
fdivr
mov
adc
pushf
(bad)
fdivr
mov
lods
sbb
movs
pop
aad
call
add
ds
std
sbb
sbb
aam
or
jle
aam
jl
and
int3
pop
mov
int3
mov
sub
cmp
push
lea
pop
xchg
cmp
jle
fisubr
cwde
fld
lods
or
and
out
int3
pushf
fidiv
(bad)
or
mov
fmul
enter
lahf
mov
pushf
mov
mov
pushf
inc
mov
pushf
loopne
pushf
rcr
fild
(bad)
dec
call
mov
aam
out
aam
(bad)
jmp
aam
lfs
ret
mov
pushf
aad
ficomp
inc
les
retf
jbe
ret
pop
cmp
pushf
jnp
pop
xor
jecxz
pop
mov
pop
xchg
icebp
pop
pop
loope
pop
fist
fistp
pushf
pop
or
(bad)
fild
xchg
fstp
fndisi(8087
and
pop
add
loop
nop
inc
or
fbld
or
xchg
(bad)
call
(bad)
retf
or
int3
dec
add
xchg
mov
outs
rcr
adc
jmp
les
pop
and
hlt
out
fisub
cmp
ds
int3
imul
das
int3
mov
jae
cmp
inc
pop
push
(bad)
pushf
dec
faddp
xor
mov
cwde
or
lods
push
sub
jle
das
mov
adc
rcl
cmp
jmp
aas
pop
shr
pop
ret
jmp
sar
push
out
aam
scas
aam
into
les
and
push
test
das
mov
outs
lods
mov
cld
pushf
xchg
cwde
mov
mov
mov
mov
(bad)
adc
hlt
fcomp
fdivr
enter
push
jecxz
pushf
xchg
retf
mov
push
xor
aam
pop
(bad)
iret
retf
fistp
inc
sbb
mov
pushf
inc
leave
mov
test
sub
(bad)
frstpm(287
call
xlat
mov
rcr
mov
sbb
fcomp
add
(bad)
cmps
jo
shl
ficom
cld
mov
clc
jbe
push
sahf
cmps
pushf
mov
pushf
nop
pop
pushf
xor
dec
inc
pop
jnp
pushf
pop
ja
aas
xchg
cli
rcr
test
sbb
aam
sbb
xchg
dec
(bad)
dec
retf
push
(bad)
pop
xchg
pop
pushf
and
sub
cmp
pushf
pop
cmp
pushf
pop
stos
fcomp
test
cmp
neg
sub
pushf
sub
pop
cmp
pop
push
retf
dec
fistp
aaa
les
sub
mov
mov
mov
stc
pushf
fnstenv
pop
fstp
fisubr
cwde
(bad)
aas
or
or
pop
pop
stos
cdq
retf
push
fisttp
(bad)
(bad)
scas
jmp
mov
add
test
adc
jmp
pushf
push
test
mov
pop
mov
pop
push
jmp
sub
jmp
retf
dec
sub
inc
mov
cwde
cli
pushf
mov
or
cmps
sbb
push
pushf
aam
in
mov
mov
pushf
inc
int3
mov
adc
cmp
(bad)
aad
loop
test
fidivr
cwde
call
aam
lods
aam
popf
mov
mov
pushf
jns
(bad)
bound
xor
scas
fmul
pop
fmul
adc
pop
outs
fcomp
push
out
scas
(bad)
aam
ins
pusha
pop
jmp
mov
dec
int3
clc
add
adc
int3
inc
pusha
int3
pop
jo
test
fistp
add
iret
pop
pop
imul
call
scas
xchg
out
fdiv
loop
push
sub
int3
adc
and
cmp
mov
push
ins
lock
pop
loopne
retf
pop
clc
cdq
fsub
pusha
into
enter
pushf
cmc
inc
mov
push
pushf
xchg
adc
push
xor
call
mov
pop
loopne
jo
inc
mov
sbb
inc
sbb
lock
xchg
mov
aas
pop
leave
or
int3
int
int3
hlt
add
test
lods
retf
aad
pushf
mov
xor
xor
adc
pushf
stos
out
rcr
aad
daa
js
xchg
(bad)
pushf
ficomp
pminub
fisub
mov
ficom
adc
mov
rcl
dec
pushf
inc
or
xchg
ficomp
std
pop
mov
pop
je
cli
mov
loop
adc
fistp
mov
loopne
fsubr
nop
pushf
add
jl
mov
pushf
(bad)
dec
pushf
loope
pushf
jne
imul
test
pushf
popa
pop
pushf
aaa
ins
pushf
mov
pushf
out
pushf
pushf
add
cmp
ret
push
fistp
pushf
adc
das
lods
fstp
pushf
sbb
fcomp
sub
pop
mov
lahf
adc
ins
pushf
jns
jl
int
and
cwde
sbb
cwde
in
fsubr
fdivr
fcomp
mov
pushf
adc
lods
inc
fdivr
imul
xchg
pop
mov
lea
adc
cmp
retf
mov
int3
jo
lods
pop
nop
jmp
(bad)
in
dec
clc
mov
stc
ret
nop
mov
rcr
xchg
adc
hlt
dec
(bad)
fnstsw
adc
mov
cwde
imul
lods
pushf
ret
mov
cmp
pushf
cwde
in
jmp
fistp
lahf
fdivr
ds
outs
stos
fcomp
fsubr
mov
pop
mov
push
mov
inc
push
imul
pop
dec
pushf
scas
cwde
(bad)
cmp
es
pushf
mov
pushf
and
pop
outs
push
xchg
in
retf
cmp
cmp
adc
aad
xchg
mov
mov
out
(bad)
pusha
ins
call
sbb
aam
cmp
jmp
jmp
rcr
retf
call
cmp
and
mov
int3
ins
or
fisttp
cld
fcmovnbe
int3
fisttp
rep
cwde
mov
pushf
inc
pushf
stos
iret
push
cmp
ret
pushf
jae
dec
ins
fist
call
cmp
fcomp
inc
inc
mov
lock
pop
je
jl
fimul
push
cmp
xchg
ins
aam
dec
les
xchg
popf
pop
fwait
push
push
mov
retf
outs
pop
pop
je
dec
pushf
fcmovu
sbb
stos
jmp
dec
retf
fidiv
dec
int3
or
int3
stos
fwait
lods
mov
outs
mov
ret
cld
sbb
pop
xchg
cmps
aam
cli
aam
mov
sbb
pushf
(bad)
dec
int3
sbb
add
cmp
pushf
(bad)
sti
mov
sub
or
adc
pushf
fistp
fcmovnu
in
retf
push
or
and
cmp
ss
int3
mov
arpl
push
pop
jb
pop
push
cmp
fcmovnbe
ficomp
imul
push
aam
ds
pop
les
mov
dec
outs
lods
pop
sahf
pushf
ds
retf
out
stos
iret
call
fidivr
fcmovbe
pop
(bad)
jg
mov
jecxz
fiadd
mov
popa
mov
lods
jle
sbb
mov
int
pop
pop
mov
add
cwde
dec
pop
fdivr
mov
cwde
mov
jmp
fucomi
sub
sbb
mov
out
(bad)
add
fcmovne
jge
xchg
pushf
(bad)
out
mov
sar
es
or
cld
mov
adc
pushf
in
mov
fld
fstp
(bad)
jl
xchg
pop
xchg
mov
pushf
xchg
int3
pushf
and
or
fstp
mov
pusha
mov
arpl
push
pushf
aas
or
xor
test
popf
jnp
and
jge
pushf
adc
dec
xchg
lods
loop
in
fcmovu
imul
mov
in
call
pop
pop
mov
pushf
rcr
cdq
cmp
push
pushf
pushf
sub
pop
sbb
jecxz
mov
cwde
xor
sti
movs
fcmovnu
pop
int3
pop
adc
inc
push
mov
mov
sub
xchg
pop
or
pop
or
loope
cdq
stos
sbb
pop
xchg
mov
pushf
ins
ret
les
xchg
adc
es
pushf
ds
pop
nop
bound
ja
nop
pushf
(bad)
jnp
cwde
fcmovnu
ss
fist
fld
fld
aaa
ret
sbb
retf
addr16
adc
pop
inc
call
ja
aam
cmp
retf
jl
lods
popf
pushf
push
mov
scas
fstp
mov
daa
mov
sbb
outs
cmp
xchg
fld
mov
dec
pushf
push
imul
jnp
mov
cmp
mov
inc
ret
mov
js
push
stos
pushf
(bad)
jnp
test
sti
pop
ficomp
ficom
cwde
mov
imul
pop
mov
pop
lods
mov
xchg
loop
xchg
fsubr
inc
fsubr
xor
call
pop
(bad)
enter
lods
rcr
and
pop
ds
in
mov
enter
aam
mov
pop
neg
pop
dec
retf
ja
xchg
sbb
or
mov
fimul
enter
fdivr
fsubr
in
int3
ins
sub
pushf
push
sbb
fcomip
(bad)
fstp
and
repnz
add
ficomp
neg
mov
fisub
fidiv
fcmovb
neg
neg
ficom
push
adc
fidivr
fnstcw
fisubr
fimul
arpl
pushf
stos
xchg
adc
call
stos
mov
push
pushf
jno
pop
jge
pop
push
sti
pop
jb
pop
and
pop
mov
or
mov
and
int
ret
push
in
push
pushf
sub
mov
fisubr
je
repnz
dec
(bad)
push
aam
mov
shr
les
stos
jmp
hlt
rcr
cmps
pminub
das
fimul
mov
or
aam
sahf
mov
push
adc
ficomp
dec
int3
jp
mov
or
leave
and
pop
xchg
sahf
pushf
push
mov
adc
pop
pop
fmulp
xor
jmp
shl
pushf
pop
pop
pop
ficom
rcl
pop
stos
into
pop
xchg
pop
fisttp
retf
int3
fld
fistp
jle
fcmovnu
(bad)
(bad)
fcmovnb
das
clc
fsub
fsubr
enter
pushf
and
pop
enter
jmp
pop
aam
dec
mov
stos
shr
iret
out
sbb
push
mov
adc
call
in
adc
(bad)
iret
hlt
xlat
aam
xor
mov
lods
mov
add
jbe
fild
sub
retf
scas
fcomi
and
mov
inc
aam
push
les
sub
push
lea
add
sub
sbb
mov
ficomp
jg
pop
aam
dec
les
mov
int3
sbb
int3
mov
int3
add
mov
sbb
scas
fcomp
mov
int
pop
push
xchg
scas
retf
mov
lea
push
pusha
sahf
aam
outs
aam
ds
pop
les
sbb
mov
retf
xor
iret
adc
mov
cli
jmp
jle
les
cwde
popa
mov
ret
(bad)
xlat
or
data16
pushf
jno
jmp
cmp
fcomp
fsubr
dec
fdivr
adc
jb
pushf
lods
int
and
ret
aad
out
jle
in
dec
mov
int3
lods
push
int3
mov
fcom
mov
test
les
shr
fisttp
imul
xchg
in
int3
pop
int3
mov
push
lods
nop
pushf
es
pushf
std
jl
lds
sub
mov
jne
mov
dec
scas
int
iret
adc
pushf
fistp
pop
mov
pop
jp
pop
lea
pop
out
cli
pop
(bad)
ficomp
fcmovu
mov
fisub
mov
pushf
xchg
dec
daa
iret
fist
or
jmp
rcr
fidivr
cwde
js
fmul
mov
jmp
les
cwde
or
fcmovu
xchg
or
sbb
les
sub
je
mov
lods
mov
jmp
mov
pop
pusha
mov
test
mov
pushf
jp
jmp
fistp
pop
(bad)
std
mov
push
sar
mov
clc
push
aam
imul
pop
les
sub
sbb
mov
jnp
les
push
adc
fwait
outs
pushf
inc
adc
call
sbb
push
loop
rcr
cmp
repz
retf
aam
jmp
push
stos
js
imul
je
pushf
stc
imul
cwde
xchg
in
dec
lods
xchg
sub
pop
jg
pop
(bad)
cld
xchg
sar
adc
loopne
int3
je
int3
ror
pushf
and
fild
leave
pushf
loopne
sbb
mov
xor
aam
or
hlt
mov
and
add
into
pop
pop
outs
push
mov
xchg
cmp
push
mov
and
cli
out
hlt
mov
sbb
and
nop
fcmovu
imul
push
jmp
fsubr
pop
fdivr
dec
fmul
fcomp
int
pop
popf
pushf
mov
mov
mov
jno
les
ss
mov
ror
int3
pushf
adc
mov
sbb
in
pop
ins
pop
push
pop
jne
pop
dec
in
retf
pop
pop
scas
fsub
retf
and
lods
pushf
adc
mov
mov
ret
pushf
into
daa
cmps
fisttp
ins
mov
pushf
push
cmp
sub
rcr
in
ficomp
(bad)
fst
(bad)
fdivr
test
mov
mov
enter
in
pushf
jl
sahf
std
pop
mov
ror
fcmovbe
push
ficomp
in
stos
push
sahf
pushf
jbe
pushf
cmp
xor
pop
dec
outs
pop
or
repz
pop
add
retf
(bad)
pusha
mov
cwde
out
(bad)
(bad)
sbb
pop
fisubr
das
cwde
xor
aam
scas
movs
mov
mov
out
mov
out
(bad)
pop
adc
pop
inc
fisttp
daa
xchg
push
ss
rcr
mov
add
cmp
push
scas
mov
retf
mov
fiadd
jae
shl
inc
jo
in
aam
rcl
stos
lock
pop
sahf
pushf
push
rcr
adc
aam
mov
ins
adc
or
dec
sbb
dec
mov
fwait
cwde
retf
test
pop
add
mov
pusha
fucomi
xor
xchg
and
fcmovu
pusha
fidivr
adc
mov
fisub
shr
outs
int3
movs
pop
int3
or
xor
int3
ror
mov
ins
dec
push
pop
daa
out
pop
fcmove
loop
pop
in
mov
bound
mov
push
aaa
mov
pushf
xlat
cs
cwde
push
jmp
int3
add
mov
or
shl
pushf
bound
rcr
shr
ins
sahf
mov
pushf
adc
std
pop
shr
sbb
adc
(bad)
inc
dec
mov
push
dec
pop
rol
pmuludq
les
pushf
pop
pop
retf
loop
(bad)
fidivr
jle
iret
mov
inc
enter
xor
sahf
or
xlat
mov
sar
fisubr
cwde
inc
jmp
pushf
sahf
sbb
cwde
jo
pushf
jns
pushf
pop
(bad)
pop
or
pop
add
scas
pop
pop
test
jne
fcmovbe
(bad)
push
fisubr
cwde
lahf
sbb
xchg
out
pushf
sub
jmp
fcmovnu
adc
fstp
call
mov
fsubr
inc
inc
mov
jg
push
pop
pushf
sub
jmp
fucomi
(bad)
fdivr
dec
test
add
int3
add
push
out
(bad)
jl
mov
or
out
lods
in
nop
pop
ja
fs
fdivr
int3
enter
int3
cwde
scas
pushf
popf
adc
pushf
pop
outs
pushf
loopne
pushf
cmc
push
pushf
cli
in
pushf
jbe
pop
lahf
push
xchg
int
adc
adc
ror
xor
imul
fsubr
(bad)
jl
xchg
pop
aam
sub
pop
or
jmp
aam
retf
les
mov
mov
mov
pop
ins
xchg
pop
cli
loope
ficomp
fisubr
cmp
fcomp
cwde
fwait
xchg
dec
mov
in
pop
pop
adc
cli
nop
pushf
sub
xor
pushf
cwde
pop
fstp
or
dec
int3
cmp
mov
js
jmp
xchg
sbb
pushf
aad
mov
sub
mov
dec
stos
imul
sub
sbb
sbb
dec
mov
sbb
mov
(bad)
aam
pushf
aam
lods
les
xor
pushf
gs
jae
mov
sbb
pushf
add
lods
mov
nop
call
in
mov
sub
ret
fcomp
(bad)
mov
cmp
sub
pop
sbb
retf
outs
fcmovnu
popf
mov
cmp
inc
(bad)
adc
mov
sub
fisttp
(bad)
fild
fcmovnbe
popf
sbb
test
in
daa
inc
in
stos
ja
pop
jmp
fcom
add
out
nop
mov
cmps
rcr
fwait
push
xchg
leave
and
pop
rol
mov
fdivr
push
fcomp
push
fmul
push
ss
sbb
mov
aam
fs
dec
aam
pop
mov
stos
pop
adc
fistp
push
mov
mov
push
fidiv
cwde
jnp
dec
lods
or
enter
xor
ret
mov
add
ror
fcmovb
in
or
scas
fistp
loope
in
imul
mov
pushf
movs
popf
aam
jge
jp
aam
sub
stc
in
(bad)
jmp
cmp
pushf
cdq
jl
xor
pop
add
dec
retf
leave
mov
lods
mov
or
push
ins
jmp
mov
xchg
pop
pop
fisubr
pop
dec
int3
adc
lods
push
nop
jmp
(bad)
fs
and
lods
mov
jb
in
mov
bound
data16
mov
int
pushf
fld
dec
mov
leave
adc
int3
out
mov
dec
cmp
pushf
jge
int3
cmp
ins
cdq
or
cli
sti
pushf
pop
fistp
mov
pop
pushf
mov
mov
pop
adc
ficomp
stos
push
fcomp
fcomp
add
stc
es
push
jmp
push
mov
mov
sub
adc
mov
cdq
fsubr
fdivr
inc
mov
mov
or
mov
mov
mov
lds
cmp
mov
aaa
mov
inc
mov
inc
pushf
cmc
push
pop
mov
inc
mov
int3
xor
int3
xchg
test
push
mov
pushf
in
cwde
(bad)
clc
pushf
cdq
sbb
pushf
and
pushf
shr
pushf
or
pushf
adc
pop
push
ret
neg
pushf
out
push
adc
call
les
retf
mov
int3
xchg
int3
mov
pushf
xor
push
imul
cwde
mov
mov
pushf
aaa
or
ret
sub
in
js
bound
pop
adc
push
pushf
into
push
retf
adc
mov
int3
mov
sahf
lods
aam
pushf
aam
mov
loope
les
ins
pushf
(bad)
out
fist
cdq
cmp
ret
je
ret
cwde
arpl
xchg
fdivr
pushf
nop
fsubr
loopne
retf
mov
pop
adc
sbb
or
or
inc
sar
lods
xchg
pushf
lock
movs
ins
pushf
cwde
cmp
fdivr
inc
jo
xor
mov
ins
pop
push
adc
pop
and
cli
cmp
push
xchg
aam
cs
pop
aam
jle
fmul
test
dec
pop
pushf
dec
out
setl
(bad)
fcmovne
(bad)
sahf
pop
aas
ret
pushf
dec
mov
es
aam
(bad)
push
js
lods
sbb
fist
fnclex
inc
fcomi
jo
xor
mov
sbb
nop
int3
cmp
int3
rcl
mov
push
push
in
retf
xchg
call
lock
add
pushf
mov
mov
arpl
add
call
(bad)
loopne
rcr
mov
hlt
jp
jns
les
mov
jb
push
fidiv
cwde
cli
and
rol
jg
loopne
inc
(bad)
mov
lock
or
pushf
(bad)
adc
cmp
fild
mov
popa
adc
mov
aam
jno
fld
popa
int3
inc
xor
and
ins
xchg
loopne
(bad)
push
jae
or
and
fild
inc
push
push
rcl
bound
aam
adc
xor
les
icebp
sbb
dec
fsub
push
int3
pop
ror
mov
cmp
pushf
adc
aam
nop
mov
cdq
data16
mov
push
pop
mov
sbb
pop
adc
pop
inc
call
retf
cmp
mov
cwde
pop
jmp
jg
fsubr
sub
mov
pushf
mov
add
int3
sub
int3
in
mov
pushf
mov
sbb
pop
pushf
or
repz
push
aam
std
aam
fst
ror
aam
mov
mov
mov
dec
mov
cwde
leave
loopne
pushf
xchg
int3
lods
pushf
dec
lods
mov
jp
int3
or
mov
pushf
icebp
pop
sub
dec
retf
pop
mov
pop
(bad)
fwait
pop
cwde
pop
or
xchg
(bad)
fimul
jnp
pop
aam
mov
stos
jmp
loope
les
mov
inc
fwait
retf
mov
sbb
xchg
fmul
pop
fcomp
mov
jmp
clc
call
call
dec
retf
adc
mov
outs
sbb
pushf
push
repnz
dec
dec
int3
(bad)
ins
int3
out
jl
jnp
pop
call
gs
fcomp
in
(bad)
fdivr
sbb
mov
sbb
jae
pushf
xor
mov
cwde
or
pushf
jmp
fisubr
int
xchg
lods
mov
retf
mov
sub
aam
mov
sahf
pushf
mov
cwde
sub
jge
inc
or
ins
int3
aaa
pop
mov
sub
fwait
es
mov
inc
jge
lahf
inc
adc
or
pop
inc
(bad)
xor
pop
psubusb
inc
push
mov
stos
test
cwde
adc
dec
jle
cmp
fsubr
or
push
mov
aam
retf
les
pop
gs
mov
retf
push
clc
push
fmul
push
adc
std
retf
ja
mov
mov
sbb
push
sub
sti
int3
dec
mov
mov
jl
pushf
push
dec
les
pop
and
xchg
sub
retf
mov
lock
mov
sar
ret
das
test
pushf
outs
or
cli
mov
dec
lods
daa
sahf
pushf
sub
jo
sbb
aam
mov
stos
int3
daa
call
add
ror
fnstcw
pop
pushf
loope
(bad)
(bad)
xchg
call
mov
lds
fisttp
pushf
jmp
pop
les
pop
push
or
mov
pushf
neg
aaa
sbb
fisub
scas
mov
xchg
call
ins
xchg
or
mov
stc
retf
aam
cli
aam
or
pushf
push
sub
sbb
in
imul
pop
enter
or
fcmovu
jnp
mov
cmps
retf
dec
stos
int3
mov
lods
push
nop
pushf
cmp
mov
nop
pushf
or
pop
outs
ret
sub
push
cmp
mov
movs
sub
pushf
fdivr
fucomp
aam
sbb
xchg
and
jge
popf
aam
lods
(bad)
jmp
sbb
jmp
and
lahf
(bad)
das
int
mov
(bad)
fst
mov
mov
fild
hlt
jge
sub
pop
sbb
xchg
pushf
inc
cwde
jp
pop
push
sub
sub
sub
mov
fsubr
addr16
mov
push
sbb
mov
pushf
arpl
mov
cwde
sub
mov
push
sub
ja
sub
gs
pop
pop
outs
mov
fimul
retf
fisub
cwde
inc
or
das
call
jmp
inc
sti
fild
fistp
dec
(bad)
jl
call
pushf
cwde
mov
fsubr
pushf
sbb
or
daa
fdivr
fsubr
fcomp
fcomp
lock
addr16
iret
fmul
movs
xor
call
out
pop
mov
cwde
mov
pushf
leave
mov
jnp
hlt
fidiv
es
icebp
neg
mov
popf
pop
jb
xchg
jle
adc
adc
retf
jae
repz
(bad)
ds
mov
pop
popf
pop
mov
mov
inc
out
sub
fadd
mov
mov
pushf
mov
(bad)
push
pop
or
mov
call
cwde
xchg
std
pushf
push
fstp
dec
mov
aam
int
cmp
js
aam
dec
movs
adc
ret
pop
mov
dec
jmp
lea
push
test
dec
fcmovu
jl
cwde
xor
inc
inc
mov
jmp
data16
xlat
inc
and
pop
adc
sub
inc
fmul
fdivr
cmp
jmp
int
call
push
fstp
fcmovb
fwait
cwde
pop
dec
dec
int3
call
and
sub
iret
mov
fisttp
sbb
fdiv
js
mov
sbb
xchg
push
in
sub
hlt
cmp
test
pop
pop
add
lods
push
sbb
loop
sbb
mov
or
mov
mov
cwde
cmc
popf
jmp
fistp
out
mov
xchg
pushf
xor
fistp
ds
fisubr
outs
fisubr
sahf
pop
mov
pop
fcmovnbe
into
mov
clc
fstp
das
pop
add
call
lods
aas
mov
mov
pushf
jnp
adc
dec
cmc
(bad)
adc
ret
shl
jg
ror
cwde
dec
fsubr
push
pushf
jg
pop
lahf
aam
scas
aam
(bad)
aam
outs
aam
pop
les
sahf
lahf
int3
test
int3
arpl
pop
dec
shr
push
das
add
pop
retf
sub
pop
aas
mov
fsubr
xor
pop
stc
fdivr
std
inc
in
xchg
por
mov
xor
jp
jg
cwde
mov
fsubr
inc
fdivr
test
stos
cwde
arpl
pop
retw
xchg
cwde
pop
lock
repnz
mov
out
rcr
addr16
sbb
enter
inc
pushf
daa
mov
fmul
rol
mov
out
sti
in
fiadd
dec
push
inc
loop
mov
cwde
mov
mov
pop
ret
ret
cmc
(bad)
mov
js
sbb
fsubr
pushf
mov
push
arpl
pop
mov
cwde
mov
pushf
int
pushf
or
scas
std
pushf
xchg
in
pushf
cmp
pop
add
mov
js
cmp
pushf
cwde
dec
adc
(bad)
fisttp
ret
dec
int3
xchg
mov
je
ficomp
ret
cmp
fcomp
inc
and
pushf
mov
fild
popf
pushf
jns
int3
dec
mov
sti
call
mov
sar
popf
frstor
push
pushf
mov
dec
sbb
push
int
loope
les
retf
adc
ret
mov
push
sbb
pop
pop
into
jmp
nop
pushf
ss
pop
(bad)
loop
shl
jp
push
mov
nop
into
lods
ins
popf
pushf
inc
scas
pop
dec
ret
(bad)
fisttp
sahf
mov
cwde
jg
fdivr
fdivr
xchg
xor
shl
or
or
int3
pop
push
int3
idiv
int3
push
inc
fstp
jae
mov
sbb
cld
sti
(bad)
(bad)
adc
pushf
inc
inc
sbb
jl
push
fmul
sbb
sbb
stos
retf
aam
mov
stos
int3
and
fistp
lea
cmp
mov
push
cli
sbb
fcmovu
jmp
movs
loop
jne
cwde
in
gs
or
mov
pushf
cwde
and
int3
repnz
cli
cwde
into
push
dec
mov
adc
pop
pop
pop
hlt
or
mov
pushf
jnp
ror
repz
fsubr
fdivr
push
cs
inc
retf
mov
jno
int3
sbb
int3
push
sti
lods
mov
pushf
sub
pop
dec
pushf
ret
push
push
ins
retf
cmps
fist
jle
mov
into
lods
int3
mov
lods
retf
xchg
pushf
(bad)
in
pop
mov
cwde
mov
into
int3
cmp
mov
retf
mov
adc
sahf
shl
stos
fdivr
xchg
mov
cmp
fimul
jl
lea
stos
les
xchg
dec
fild
sub
bound
addr16
pop
dec
push
dec
sbb
pushf
test
mov
jnp
mov
retf
sbb
sbb
fsubr
cmp
mov
jmp
jmp
jo
mov
pushf
fidivr
cwde
xor
popa
nop
pushf
leave
mov
sbb
jns
mov
fidiv
dec
mov
sbb
mov
pop
sbb
mov
xchg
arpl
push
aas
sbb
mov
mov
pop
sahf
pushf
xchg
pop
pop
das
rcr
xchg
xor
mov
push
and
jp
lods
repz
sti
out
fistp
ficom
fcmove
mov
mov
pop
sub
pop
vsubss
and
iret
aam
retf
mov
je
mov
out
sar
jae
ja
pop
retf
jmp
int3
cmps
pop
int3
sub
call
push
pop
and
fcomp
stos
xchg
or
xchg
sar
pushf
aaa
pushf
sub
dec
cmp
mov
mov
pop
push
mov
mov
adc
test
cld
int3
ds
sub
mov
mov
lods
ins
fistp
push
(bad)
(bad)
fucomi
int
push
lods
push
(bad)
mov
ds
(bad)
sub
push
mov
jle
in
sahf
mov
mov
ficom
les
pop
mov
fdivr
mov
out
fistp
cwde
ins
push
inc
add
ret
loopne
xor
xor
aaa
js
jne
and
fcomp
mov
mov
jge
adc
cs
inc
fcomp
jl
mov
mov
push
push
adc
int3
lods
int3
test
int
push
pushf
mov
pop
push
pop
retf
(bad)
mov
fmul
fsubr
fdivr
xchg
fsubr
popa
into
mov
pop
xor
retf
push
xor
loope
sbb
call
retf
cmp
push
push
fcomp
fdivr
int
enter
pop
fneni(8087
ror
mov
inc
fxch
out
ins
int3
jb
int3
xor
ds
int
inc
fnstsw
xlat
mov
aas
pop
jbe
mov
mov
mov
mov
adc
dec
es
lods
(bad)
mov
aam
aas
les
add
ret
hlt
mov
fcmovb
pop
fidiv
int3
adc
int3
inc
das
lods
sbb
jmp
xchg
and
pushf
fimul
fidivr
fidivr
push
mov
scas
retf
push
mov
(bad)
jle
shr
iret
pop
fiadd
mov
adc
std
test
in
fs
inc
enter
adc
mov
mov
sub
loope
arpl
sahf
fld
jge
int3
loop
mov
sub
pop
mov
das
mov
pop
addr16
retf
push
mov
fmul
cmp
inc
popa
mov
mov
fimul
sub
push
or
xor
fiadd
cwde
je
fcomp
push
fdivr
pop
fcomp
xor
and
ds
cmp
pushf
popa
call
retf
sub
jle
pushf
add
pushf
inc
pop
les
pop
mov
in
sbb
mov
fsubr
ficom
mov
sahf
leave
jbe
pushf
ja
int3
add
xchg
xor
mov
ficom
fisubr
cwde
jne
dec
mov
sub
mov
call
push
cdq
stc
retf
enter
data16
(bad)
sbb
les
gs
(bad)
mov
mov
out
cwde
ins
loopne
nop
and
pop
nop
fsubr
fdivr
fmul
fcomp
cli
push
inc
jmp
adc
ret
pop
pushf
leave
fsubr
fcomp
enter
pop
dec
sbb
add
pushf
popf
jl
sub
aaa
popf
push
add
sbb
cmp
lods
pop
pushf
jae
stc
ins
mov
loope
mov
pushf
adc
out
sbb
cwde
iret
cs
les
pop
ins
dec
pop
addr16
mov
push
jle
mov
sub
fdiv
push
test
call
mov
mov
add
xchg
pop
inc
jno
outs
stos
jbe
pushf
cmps
pop
pushf
imul
xchg
pop
rcl
retf
push
push
pushf
je
pop
mov
stc
adc
mov
aam
jge
nop
pop
imul
out
mov
sbb
outs
sub
movs
les
cmp
ret
add
ret
cmps
xor
push
or
cwde
fdivr
xchg
xchg
adc
or
xchg
inc
pop
mov
dec
out
(bad)
shr
scas
push
push
jge
fiadd
fisub
dec
fisubr
inc
sub
loop
rcr
mov
adc
jge
pop
inc
fcmovne
add
lods
movs
nop
jmp
fistp
push
mov
mov
push
inc
xchg
or
dec
rcr
cmp
lds
add
cmps
ret
sub
lock
daa
cwde
push
aam
pop
les
mov
dec
dec
pop
and
mov
cwde
fiadd
pop
cwde
stc
ins
xor
(bad)
xchg
ret
mov
mov
xor
pop
mov
(bad)
dec
cwde
or
push
retf
inc
pop
int3
pop
ins
mov
lock
ret
mov
pop
in
mov
push
pop
retf
xor
push
fdiv
inc
xchg
retf
inc
cmp
repz
aad
ret
fidiv
mov
sbb
xchg
push
xchg
push
mov
(bad)
fsubr
mov
pop
mov
repnz
pushf
ret
lahf
inc
sti
loopne
(bad)
fiadd
push
mov
rcr
jnp
fcomp
fdivr
add
sbb
jmp
or
out
adc
mov
mov
mov
mov
pushf
iret
fnstcw
pop
fisttp
imul
sub
(bad)
or
cli
call
daa
enter
fsubr
fdivr
int
imul
ret
jbe
mov
hlt
sub
sti
or
mov
inc
fwait
arpl
jle
mov
cli
push
pop
pop
cmc
or
mov
scas
sub
fisub
dec
fisub
(bad)
js
mov
mov
push
pop
out
call
stc
mov
push
sbb
aam
cmp
xchg
pop
aam
imul
pop
jns
aad
ins
cdq
pushf
cli
test
dec
ret
jmp
(bad)
xchg
stc
fcmovbe
sbb
mov
ins
ret
pop
pop
inc
sub
cli
fist
(bad)
mov
(bad)
sub
pop
add
push
mov
pushf
pop
jmp
sar
jecxz
popf
iret
mov
mov
loop
rcr
cmp
xor
ret
inc
mov
fsubr
push
xor
adc
mov
(bad)
call
ds
cli
pop
push
push
inc
mov
add
fcomp
pushf
push
clc
jmp
or
sub
cwde
mov
fdivr
sbb
xchg
fdivr
fcomp
test
leave
call
cdq
mov
scas
fcmovne
(bad)
jmp
add
scas
or
jle
mov
xchg
adc
cmp
out
fmul
push
lahf
ins
push
sbb
push
pushf
add
pop
std
lods
pop
jmp
ficomp
mov
pushf
pop
cwde
sub
daa
cld
pushf
cs
xchg
cwde
jg
fsubr
(bad)
into
int3
pushf
mov
stos
adc
mov
mov
int3
out
mov
inc
jl
enter
sub
dec
pushf
retf
dec
fstp
adc
test
outs
stos
lahf
pushf
sti
mov
(bad)
fisubr
push
icebp
jmp
cmps
mov
fstp
mov
js
retf
mov
mov
pop
xchg
pop
retf
or
rcr
dec
mov
pop
jle
cli
fimul
nop
sahf
pop
add
fist
mov
addr16
mov
dec
(bad)
fcmovnu
mov
cld
or
dec
cdq
sub
in
push
sub
mov
nop
gs
push
pushf
aam
mov
jbe
mov
cmp
dec
jge
aas
xchg
xchg
in
or
adc
jmp
cmps
ret
push
popf
ds
pushf
sbb
push
dec
fucomi
outs
aaa
js
jbe
pushf
ficom
cwde
xchg
cmp
mov
mov
pushf
scas
pop
fistp
sbb
fsub
inc
cmp
sbb
rcr
mov
mov
pushf
mov
add
mov
cs
mov
jmp
fcmovnu
movs
(bad)
fcmovnbe
out
fcmovnu
(bad)
push
into
mul
ror
xchg
test
fsubp
mov
pushf
rcr
call
mov
hlt
cs
pushf
add
retf
imul
dec
neg
push
mov
mov
pop
push
adc
push
pushf
movs
loop
fcmovu
lea
xchg
jle
jnp
fidivr
lock
sbb
into
sbb
fadd
cwde
mov
mov
(bad)
sub
aam
pop
(bad)
loopne
push
pushf
outs
loop
ficom
les
(bad)
addr16
pop
pop
dec
ret
pushf
cs
rol
jge
mov
retf
or
lods
rcr
fimul
cmp
int3
or
int3
les
mov
sbb
mov
out
clc
ja
inc
push
cmp
call
push
mov
call
ds
ror
push
push
pushf
xor
mov
pushf
or
int3
xchg
xchg
fist
in
ins
lock
pop
jmp
pop
mov
pop
pop
pop
sbb
fsubr
fcomp
sti
(bad)
fsubr
inc
fcomp
pusha
fmul
fmulp
mov
jnp
pushf
mov
dec
ret
mov
push
cmp
or
mov
ficomp
cli
cwde
lock
or
aam
fidiv
pushf
in
or
cli
pushf
sub
push
pushf
nop
retf
clc
and
ins
cdq
adc
fwait
cs
loope
pushf
ficomp
ficomp
adc
ficom
or
inc
cdq
aas
(bad)
xchg
call
jmp
nop
hlt
std
(bad)
in
mov
neg
sbb
bndstx
fmul
dec
enter
mov
ins
daa
pop
pop
das
pop
pop
pop
jnp
adc
outs
mov
scas
in
loope
mov
xor
add
xchg
or
xchg
lods
mov
mov
fcmovnbe
fsubr
stos
push
jbe
les
cmp
xor
fimul
nop
pushf
repnz
or
sub
fidiv
ficomp
mov
xchg
pushf
sbb
sbb
mov
in
mov
pop
sbb
pop
pop
sbb
ss
int3
pop
pop
in
retf
push
pop
(bad)
fistp
mov
inc
mov
cs
mov
int3
inc
in
mov
sbb
xchg
pushf
dec
out
fnstsw
or
pop
mov
dec
push
mov
retf
jmp
sbb
pop
mov
aad
dec
mov
frstor
mov
cli
push
fcmovu
inc
popf
sub
nop
out
push
mov
sar
aam
pop
aam
dec
les
mov
push
(bad)
cli
xor
push
dec
pushf
cmp
cmp
sub
mov
sub
je
cwde
or
sbb
add
pop
pushf
push
pushf
adc
inc
mov
enter
fdiv
mov
mov
mov
mov
cwde
pop
lock
mov
inc
pop
retf
lds
mov
out
rcr
xchg
pushf
sbb
fsub
mov
pop
push
pushf
retf
sahf
clc
pop
fdivr
fdivr
int3
cmps
in
mov
mov
mov
pop
fadd
mov
out
mov
fistp
ficom
ins
cwde
mov
pushf
and
jge
or
or
pop
imul
mov
sbb
in
dec
stos
mov
mov
test
sbb
in
ret
pop
fcmovnu
ins
fild
aam
dec
aam
cmp
sahf
jnp
pop
sahf
sbb
or
das
cwde
repnz
push
cmp
ins
mov
pushf
sahf
sbb
mov
cld
js
add
cld
xchg
add
lods
pushf
hlt
iret
pop
xchg
mov
pushf
adc
call
ins
pushf
jnp
pop
dec
loope
pop
gs
sbb
or
mov
(bad)
cmp
mov
mov
pushf
loope
cwde
enter
inc
add
test
nop
jmp
(bad)
inc
or
jp
(bad)
fcmovnu
or
mov
loopne
pushf
hlt
iret
pop
mov
pop
pop
out
retf
cld
mov
push
add
aam
sbb
nop
or
scas
mov
ret
cli
pushf
pop
jmp
push
mov
ret
xchg
aad
ret
pushf
push
clc
outs
fmul
sub
mov
(bad)
stos
mov
pusha
jp
out
(bad)
push
pushf
hlt
call
sbb
in
(bad)
fcomp
inc
xchg
stos
gs
pushf
dec
stos
jmp
fstp
fstp
in
hlt
call
pop
xor
sbb
es
aam
or
mov
imul
mov
mov
jbe
or
sub
repnz
mov
mov
adc
push
fcmovu
cwde
sbb
int3
or
aam
sub
push
cmp
mov
ret
cwde
mov
pushf
ret
sbb
xchg
aaa
inc
pop
mov
adc
xchg
ret
add
int3
fcomp
jge
ror
aam
mov
push
call
mov
retf
fs
repz
movq
pop
mov
pop
mov
mov
push
div
shl
lods
push
pushf
xor
mov
(bad)
(bad)
lds
add
pop
sub
xchg
dec
pushf
lods
pop
pushf
movs
jnp
sub
(bad)
mov
adc
retf
fistp
fcmovnu
jmp
or
mov
pop
cmp
push
dec
(bad)
leave
retf
adc
mov
dec
rcr
dec
int3
pushf
inc
in
imul
addr16
js
fwait
sbb
sub
push
popa
pop
call
or
mov
sbb
mov
fisubr
mov
push
push
int
mov
push
xchg
mov
pop
sbb
mov
inc
int
push
push
pop
stc
sahf
add
xor
pop
ret
in
pushf
fadd
enter
mul
cmps
sub
adc
sbb
call
in
sti
cmp
fisttp
mov
jmp
pushf
jmp
jae
aam
ins
les
hlt
mov
retf
repnz
mov
pop
jnp
pop
mov
retf
sar
inc
add
push
sti
lods
push
popf
pushf
stc
sbb
sar
cdq
dec
pushf
cmps
pop
pop
das
inc
dec
dec
fisttp
mov
cwde
or
loopne
fisubr
out
ret
pop
out
push
pushf
add
pop
or
sbb
jnp
leave
xchg
xchg
jae
fstp
leave
mov
pushf
mov
lods
gs
sub
pushf
adc
(bad)
cli
retf
or
int3
retf
bswap
cmp
int3
lods
outs
int3
movs
jg
xchg
(bad)
int3
push
lahf
mov
mov
iret
mov
(bad)
mov
cwde
xor
pop
jmp
xchg
pop
arpl
pop
scas
inc
retf
add
dec
cwde
or
fcom
fsub
fdiv
inc
mov
fnstsw
call
sub
int3
retf
push
mov
inc
ret
cmps
mov
fimul
dec
adc
add
cs
fsubr
es
cmp
aam
iret
movs
mov
mov
cwde
fwait
(bad)
pushf
(bad)
jg
ja
jae
adc
aam
aas
aam
das
(bad)
sar
loop
rcr
retf
(bad)
pop
mov
jmp
(bad)
das
push
pushf
les
jae
mov
pop
(bad)
sar
retf
xchg
clc
fmul
int
in
popf
pushf
or
sbb
sbb
sbb
scas
call
pushf
push
(bad)
les
pop
retf
push
daa
xchg
add
dec
or
int3
pop
ins
ds
xchg
aam
std
les
or
(bad)
fild
fist
(bad)
lods
cmp
cli
jge
daa
ins
aam
dec
aam
sub
(bad)
mov
leave
shr
pushf
sbb
int3
mov
int3
xor
ins
ins
popf
pop
pushf
or
cmp
daa
sbb
push
or
stos
sti
pop
das
push
shr
hlt
fistp
mov
pushf
test
adc
sti
pop
mov
inc
sbb
mov
jb
and
cwde
inc
jmp
adc
ret
mov
fidiv
nop
mov
dec
jmp
sar
adc
push
(bad)
dec
les
push
mov
fsubr
fdivr
fmul
ins
pop
push
jmp
stos
sub
cmc
mov
fstp
or
pop
xchg
or
imul
or
pushf
dec
cmp
test
icebp
dec
retf
xchg
mov
fcomp
pushf
popf
pop
call
xor
mov
mov
mov
mov
pop
ficom
retf
mov
or
mov
cmp
test
out
mov
sub
xchg
inc
aaa
mov
pushf
xchg
out
fistp
and
aam
fcmovnb
jo
ins
jne
retf
pushf
mov
loopne
fnstsw
pop
retf
mov
xchg
adc
mov
loop
rcr
and
sub
inc
cmps
mov
mov
pop
pushf
pop
pop
mov
and
in
sbb
pushf
fistp
push
int3
repnz
rcr
test
add
pushf
xchg
enter
mov
mov
mov
pop
mov
jge
xchg
push
jmp
(bad)
les
call
mov
mov
mov
in
ins
inc
push
jmp
jmp
pop
mov
push
pushf
push
pop
test
je
jae
mov
fisub
add
call
adc
mov
inc
test
sahf
mov
pushfw
loope
pop
xchg
int
or
(bad)
fistp
ret
mov
fstp
std
fild
push
retf
rcl
loope
mov
stos
test
rcl
popa
mov
pop
adc
mov
or
mov
aad
fimul
cwde
test
mov
push
mov
push
inc
pop
mov
ins
push
pop
retf
or
xchg
xchg
aas
nop
mov
jmp
(bad)
fld
nop
mov
loope
xchg
and
mov
ds
inc
and
jne
int3
std
push
lods
push
imul
sub
(bad)
int
(bad)
lods
rcl
(bad)
out
jge
push
test
lea
jge
outs
ins
fcmovbe
pop
cmp
mov
mov
dec
stos
xchg
sahf
pushf
cmp
sbb
pop
cld
fidiv
in
aad
les
mov
pop
retf
xchg
pop
sub
retf
fmul
push
inc
bswap
pop
mov
pop
in
push
sbb
mov
or
cmps
call
cwde
cli
push
or
pop
jmp
mov
in
pushf
call
clc
mov
cwde
push
sbb
daa
popf
adc
cmp
add
jmp
pop
jno
cmp
xor
pushf
sbb
inc
out
mov
cmp
xor
fild
mov
xor
mov
fistp
add
cmp
mov
dec
pop
retf
loopne
mov
cwde
int3
fwait
dec
ins
popf
in
sti
(bad)
mov
cwde
js
inc
inc
retf
(bad)
mov
mov
mov
lods
dec
push
sbb
mov
es
mov
cwde
mov
call
cli
sbb
jmp
cwde
sbb
cdq
jmp
mov
mov
pop
ds
cmp
ficomp
sahf
mov
xchg
retf
dec
aaa
sahf
shl
xchg
jnp
cmp
call
sub
ret
pushf
lock
mov
popf
jnp
les
xlat
arpl
into
mov
retf
fwait
retf
push
mov
inc
push
aas
stos
mov
cmp
mov
adc
aam
fcmovnb
sbb
sar
cmps
ror
ret
mov
mov
ins
mov
and
and
mov
hlt
cwde
dec
push
fcomp
fdivr
fmul
pop
jne
in
pushf
neg
sahf
test
sti
cli
stos
jmp
push
int3
aad
mov
xchg
adc
or
out
cmp
in
int3
inc
dec
int3
scas
ins
pushf
icebp
js
int
pushf
cwde
jnp
enter
push
pop
mov
pop
xlat
std
jmp
mov
fidiv
loopne
rcr
mov
je
cwde
jnp
fcomp
fdivr
fcomp
mov
out
sub
adc
mov
les
retf
iret
aas
int3
or
icebp
and
or
jg
push
in
(bad)
adc
push
fsubr
push
push
retf
cmc
mov
cwde
xchg
in
fmul
mov
mov
xchg
ret
pop
fistp
scas
mov
mov
lahf
pushf
jns
pop
mov
test
cwde
loope
inc
xchg
retf
xor
loope
aad
dec
pushf
fiadd
mov
sub
jo
push
ss
int
popf
mov
(bad)
pushf
push
pop
and
xchg
mov
fsubr
aad
ficom
int
fisubr
push
pop
jmp
mov
dec
scas
mov
sbb
mov
fcomp
inc
and
out
retf
iret
mov
jmp
jns
mov
add
pushf
sbb
push
retf
mov
data16
ja
cmps
fstp
sahf
inc
(bad)
mov
ins
(bad)
pop
retf
xor
sbb
push
mov
ret
add
ficomp
pop
mov
out
mov
es
push
mov
cld
fmul
cmc
or
xchg
(bad)
aaa
fcomp
fdivr
push
dec
outs
(bad)
out
mov
add
mov
push
aam
outs
les
pop
mov
cs
outs
pop
inc
sar
push
inc
fimul
popf
or
mov
popf
pop
loope
mov
fmul
inc
stc
mov
addr16
or
pop
in
stc
call
mov
pop
push
pushf
sub
ret
test
cwde
ror
mov
test
pop
jmp
and
xor
adc
fdivr
scas
int
mov
push
into
adc
fs
ds
les
jp
pop
daa
loope
push
mov
mov
out
fistp
cwde
and
inc
daa
fwait
sahf
rcr
dec
xor
jl
and
aam
ffree
push
mov
popa
in
pop
in
lock
int
inc
movs
mov
mov
cwde
repnz
pushf
movs
lea
xchg
fld
retf
pop
mov
mov
sub
adc
cld
pushf
popa
in
pop
adc
sub
pushf
in
aad
mov
enter
mov
pop
loop
pop
sbb
jb
out
push
jecxz
aam
sbb
popa
mov
sbb
scas
jg
xchg
fst
pushf
or
outs
cmp
sbb
shl
out
xchg
rcl
mov
pushf
js
mov
pop
push
ret
pop
mov
push
sbb
movs
cmp
aas
aaa
dec
dec
pop
xchg
cwde
mov
popa
imul
jnp
inc
pop
pop
mov
inc
add
pushf
or
ret
inc
mov
(bad)
jnp
int3
fwait
ret
mov
(bad)
(bad)
mov
mov
sbb
jge
jl
and
mov
mov
add
inc
pop
pop
cmps
push
call
into
pop
pushf
gs
fld
out
rcr
mov
scas
sbb
mov
fsub
inc
sbb
pushf
mov
and
push
mov
inc
bound
dec
fdivr
push
mov
cwde
pop
sub
push
mov
outs
(bad)
jle
pushf
fidiv
fstp
outs
sub
repz
mov
out
cwde
dec
std
fcomp
cmp
ficomp
call
xchg
out
fcomip
mov
loope
sbb
sbb
mov
mov
mov
lock
sbb
retf
(bad)
clc
ror
mov
fistp
inc
or
push
cmp
out
fistp
fcomp
pushf
js
mov
mov
pop
mov
ret
mov
(bad)
fimul
or
push
les
pushf
iret
out
rcr
xchg
cld
in
xlat
stos
loop
pop
popa
ret
add
push
test
pop
dec
pop
popf
jl
scas
pushf
xchg
push
loop
cmp
mov
mov
push
retf
and
clc
cwde
xlat
mov
dec
int3
jae
mov
retw
sbb
mov
cmps
mov
sbb
or
sbb
xchg
mov
fsubr
jo
xchg
cwde
dec
mov
mov
cwde
pop
push
fcomp
iret
fsubr
mov
bound
inc
ret
push
mov
mov
lods
int3
pop
jge
cwde
dec
stc
inc
and
pushf
jmp
mov
and
inc
popa
mov
mov
cs
daa
push
jmp
cmp
les
pop
sahf
loope
xchg
fisttp
add
xchg
test
frstor
fdivr
pushf
cmp
rcr
(bad)
mov
mov
test
int
aaa
dec
popf
xlat
push
cmp
cmc
mov
retf
shr
sub
sbb
popf
sub
lea
popf
pop
(bad)
loope
sbb
fistp
dec
movs
nop
pop
movs
ret
pand
mov
dec
pushf
cwde
adc
inc
add
sub
cdq
gs
mov
jecxz
in
aam
or
fistp
mov
stos
in
sbb
fcmovu
push
int3
fisubr
cwde
enter
mov
adc
sahf
mov
lods
int3
xchg
pushf
int3
stos
mov
ret
pop
fild
mov
inc
sahf
mov
dec
mov
jmp
inc
ret
loop
sar
sub
out
ficomp
inc
stos
mov
mov
jmp
popf
pop
mov
leave
mov
inc
ret
fstp
rcr
loop
ror
cmps
dec
fdivr
rcl
mov
and
adc
push
mov
adc
mov
data16
or
sub
(bad)
call
xchg
pop
cs
mov
fidivr
pop
fmul
sti
xor
push
pushf
sub
or
fdivr
inc
adc
xchg
pop
pushf
jg
xchg
sar
cmp
in
jl
ret
lahf
push
pushf
ret
pushf
push
mov
jl
add
hlt
jo
iret
lods
les
dec
sbb
scas
int
jge
fidiv
cwde
jae
inc
dec
stos
xchg
xchg
pop
aaa
ret
cdq
mov
cwde
aam
push
cs
(bad)
stc
retf
mov
into
sub
cmp
dec
pop
xor
mov
aas
cwde
rcr
sbb
repnz
les
sahf
imul
not
push
jae
mov
retf
and
enter
push
mov
ret
pushf
(bad)
mov
push
mov
les
jmp
mov
je
aam
ffree
sbb
pushf
lods
stos
mov
mov
sbb
stos
(bad)
call
push
mov
ret
and
xlat
mov
mov
jp
test
imul
pop
mov
mov
xor
jp
enter
std
mov
inc
sbb
jnp
retf
(bad)
aaa
xchg
test
mov
adc
fcomp
lds
nop
dec
xchg
lahf
adc
ds
dec
push
and
add
inc
push
pop
retf
mov
jne
xchg
adc
cmp
push
out
retf
(bad)
call
mov
dec
xor
and
jge
pushf
dec
mov
call
pop
imul
aad
push
mov
test
mov
ret
mov
xor
jnp
cwde
push
mov
add
inc
push
mov
sub
retf
gs
repnz
jbe
int3
or
mov
sahf
fisub
in
mov
mov
int
lds
adc
ret
fistp
lock
mov
int3
lods
cmp
shl
rol
int3
lds
cwde
jno
enter
aad
mov
xor
cli
ins
jnp
sahf
(bad)
mov
mov
mov
pop
cli
loop
shl
push
movs
mov
imul
retf
mov
pop
retf
rcr
or
sbb
jb
pop
mov
ins
les
xlat
inc
js
sub
outs
ret
pop
cmp
fmul
ss
nop
cmp
xchg
addr16
call
mov
fistp
loop
cdq
rcr
cmp
mov
ins
pop
int3
ret
pop
mov
inc
and
fldcw
mov
inc
retf
pop
dec
mov
pushf
retf
mov
adc
push
mov
loop
rcr
push
sub
mov
push
pushf
or
call
sahf
sub
ret
xchg
fild
pop
inc
enter
mov
inc
fsubr
push
inc
ss
jg
push
fisttp
(bad)
(bad)
mov
sar
stos
addr16
pop
mov
inc
jmp
pop
pop
retf
xchg
mov
fdivr
mov
push
ret
xchg
fstp
pushf
call
push
jl
or
outs
cwde
pop
retf
jno
test
retf
add
or
pop
pop
pushf
push
xchg
(bad)
sar
fist
mov
inc
xor
sbb
ret
adc
cmp
pushf
in
retf
add
xchg
sbb
mov
sbb
mov
jle
pop
ret
mov
mov
mov
inc
or
or
jns
imul
xor
jmp
pop
mov
add
inc
mov
push
rcr
fwait
mov
jl
push
push
mov
and
ret
inc
mov
mov
pop
retf
fdivr
push
add
aam
jmp
ja
or
mov
retf
mov
rcr
mov
ins
jp
cwde
mov
jb
cmp
mov
repz
mov
pop
fiadd
fcmove
cmp
dec
popa
push
mov
sub
or
mov
sub
(bad)
cld
stos
mov
pop
lods
push
sub
aam
fidiv
cwde
sti
xor
ins
push
xor
jp
adc
jnp
mov
pushf
test
into
hlt
scas
mov
mov
in
pop
into
ret
inc
mov
fsubr
mov
xchg
mov
cwde
xchg
or
pop
cld
mov
mov
pop
sub
daa
mov
fsubr
fmul
inc
icebp
mov
ins
mov
jg
aaa
sahf
pushf
jmp
clc
pop
pushfw
(bad)
push
retf
mov
add
inc
inc
pop
mov
dec
cwde
xor
lods
pushf
hlt
pop
jg
fwait
shl
adc
leave
mov
mov
das
mov
enter
cmp
pushf
jl
jge
fidivr
int
stos
loopne
pop
daa
push
dec
in
retf
gs
push
jp
les
mov
retf
mov
push
sbb
movs
sahf
cmps
sahf
xor
mov
add
popf
sub
nop
inc
std
retf
cmp
mov
pushf
ss
hlt
(bad)
les
pop
retf
mov
xlat
push
ret
mov
inc
jnp
cmp
pushf
neg
not
(bad)
loop
ror
push
mov
push
mov
xchg
les
pushf
repz
jmp
mov
mov
fsubr
es
add
adc
mov
fld
cld
mov
inc
aas
retf
enter
jmp
mov
int3
and
les
mov
pushf
inc
pop
ds
cs
cwde
mov
push
call
scas
popf
pop
out
sub
fsubr
mov
pushf
ret
loop
rcr
jmp
inc
mov
pop
call
dec
pop
adc
adc
mov
mov
not
leave
mov
xlat
out
fbld
sbb
mov
inc
icebp
mov
rol
mov
inc
add
lods
ins
pop
popa
ret
in
call
mov
pop
sub
jmp
int3
cwde
jl
inc
xchg
mov
xlat
push
pop
mov
mov
cld
xor
pop
xchg
or
aaa
xlat
push
mov
add
push
fild
xchg
out
mov
aas
ret
(bad)
mov
dec
stos
call
retf
dec
fcmovne
dec
mov
jbe
es
ret
fidivr
leave
nop
loop
mov
rcr
out
mov
popf
pop
add
(bad)
jl
pushf
les
pop
mov
cwde
sbb
movs
mov
pop
ret
addr16
inc
(bad)
mov
add
pop
xor
or
cwde
loop
inc
jge
std
call
repnz
xchg
push
inc
mov
hlt
call
retf
cmps
mov
inc
clc
mov
push
ret
jecxz
jmp
and
cwde
imul
lods
pop
push
ret
adc
enter
cwde
ja
fmul
lahf
inc
sbb
fistp
inc
mov
loopne
(bad)
(bad)
in
mov
cwde
xor
inc
pop
mov
pushf
mov
ret
mov
inc
pop
retf
out
sbb
sub
cwde
ds
fcomp
push
cmp
add
mov
in
cdq
xor
xchg
xchg
mov
pop
xor
aas
mov
ret
mov
xor
test
jmp
push
push
pop
retf
(bad)
sbb
inc
icebp
imul
call
or
push
inc
jmp
mov
(bad)
nop
dec
pop
mov
ds
popa
mov
das
popf
pop
movs
rcl
xchg
sti
mov
pop
lea
retf
sar
inc
pop
retf
cwde
cmp
pop
mov
ss
push
test
inc
call
mov
(bad)
cwde
ss
out
mov
sar
adc
loop
jg
into
cmps
inc
fld
mov
fistp
xchg
mov
or
xor
pop
xchg
xchg
mov
pop
push
fidivr
mov
ret
in
fcomi
or
sbb
push
dec
or
scas
pop
xor
and
push
out
les
lods
sub
fiadd
sub
and
cwde
mov
sbb
add
push
call
push
test
ss
mov
inc
sub
popf
or
dec
fdiv
stos
daa
popf
pop
sbb
dec
mov
inc
sbb
or
pop
fist
jnp
cwde
cmps
mov
call
int3
lods
or
fiadd
push
ret
mov
cmp
inc
xchg
mov
rcr
sbb
fst
cwde
inc
sub
jp
or
mov
mov
mov
mov
rcr
cs
inc
mov
pop
sub
adc
cmp
scas
sbb
and
call
ret
cld
call
scas
mov
inc
ret
jp
jne
sub
inc
loope
xchg
call
out
mov
cmp
mov
(bad)
mov
cwde
cmp
call
out
mov
call
mov
add
xchg
pop
(bad)
call
push
inc
pop
mov
mov
scas
pop
pop
ffreep
cmp
push
or
ss
jl
call
dec
lds
pop
pop
push
jmp
mov
mov
inc
js
in
pop
mov
jle
cwde
pop
fmul
cdq
cmp
mov
cmp
inc
adc
dec
jmp
fistp
fsubr
aas
mov
pushf
fcom
mov
stos
mov
cwde
xchg
fld
xor
sar
xlat
cwde
jg
pop
gs
push
mov
cwde
push
out
(bad)
jp
add
mov
rol
sbb
push
lods
(bad)
jb
out
cwde
sub
or
cwde
aam
pop
test
iret
mov
into
int3
mov
mov
cmc
ret
push
mov
push
push
cld
aam
or
sahf
pop
jnp
adc
out
inc
inc
mov
adc
mov
mov
fimul
cwde
loopne
pop
mov
retf
dec
mov
inc
pop
shr
pop
ja
mov
loope
xchg
in
push
xor
popf
call
xchg
fidivr
mov
pushf
add
ret
xchg
inc
jns
add
popf
pop
scas
push
xchg
sbb
ret
fadd
inc
mov
aad
je
pop
push
mov
retf
cmc
mov
inc
xor
add
mov
inc
test
scas
mov
call
pop
cwde
in
ds
mov
pop
dec
ret
push
mov
cwde
ret
pop
inc
stos
retf
pop
dec
mov
fs
inc
stos
xchg
pop
mov
dec
mov
imul
dec
retf
(bad)
call
pop
fmul
push
and
push
mov
btc
pop
pop
push
iret
jge
mov
bound
dec
ret
daa
mov
sbb
pop
cld
fmul
inc
or
rcl
cmps
add
xchg
shr
dec
sar
inc
js
addr16
popf
pop
jecxz
and
rcr
xor
call
mov
scas
mov
pushf
sub
ret
mov
or
imul
sahf
cwde
in
lea
pop
mov
out
ficomp
cwde
cli
mov
rcr
ret
leave
mov
inc
jo
or
mov
retf
xchg
mov
xchg
mov
inc
ret
jno
mov
or
or
dec
push
into
pushf
xchg
fdiv
dec
adc
aas
enter
pop
mov
mov
pushf
cld
pop
add
idiv
inc
xlat
mov
and
loopne
out
fimul
cwde
inc
ret
inc
jle
dec
pushf
mov
mov
cwde
in
inc
ja
call
xor
inc
lahf
mov
loope
sub
ins
dec
xchg
adc
mov
pop
push
pop
dec
pop
mov
mov
popf
pushf
pop
inc
ret
add
xor
fwait
pop
xchg
adc
mov
popf
fist
mov
push
pop
jne
xchg
mov
cwde
push
adc
mov
or
cmp
add
mov
sbb
sbb
nop
mov
mov
mov
inc
mov
(bad)
int3
mov
bnd
inc
mov
inc
mov
mov
fdiv
jmp
and
inc
mov
cwde
mov
sahf
pop
mov
mov
ret
and
cwde
(bad)
mov
daa
mov
inc
popa
retf
dec
int3
mov
ja
inc
test
cdq
inc
sbb
mov
sar
int
addr16
pop
add
push
mov
xor
call
xchg
fwait
(bad)
aam
(bad)
push
mov
ret
adc
mov
inc
adc
movs
call
xchg
add
jl
retf
jmp
sub
dec
adc
mov
test
inc
sbb
enter
push
cwde
shl
xor
ret
gs
inc
(bad)
mov
jp
(bad)
mov
inc
or
in
mov
out
(bad)
pop
inc
fmul
pushf
pushf
fdivr
ficomp
mov
pop
ret
ret
in
add
shr
pushf
mov
dec
retf
adc
ret
mov
rol
pop
fwait
dec
sbb
ins
mov
mov
add
xor
repz
outs
test
pushf
xchg
inc
and
or
fdivr
inc
dec
retf
scas
lods
pushf
fistp
mov
mov
inc
jnp
dec
cmp
loop
rcr
cdq
inc
or
aam
mov
int3
jl
jmp
loope
cwde
daa
ret
mov
mov
loop
jle
cwde
loope
inc
xchg
mov
outs
or
ret
mov
hlt
cwde
mov
inc
sar
gs
mov
sub
mov
imul
mov
mov
or
pop
adc
retf
xor
ins
cwde
imul
mov
push
call
lock
mov
(bad)
repnz
dec
xor
push
pop
mov
cdq
mov
loope
aad
inc
pop
add
sub
aas
fdiv
inc
push
mov
sbb
cmp
mov
ret
mov
push
ret
jbe
imul
sbb
jns
xor
mov
push
ret
sbb
and
ret
mov
call
into
pushf
stos
fcomp
and
ins
lods
mov
pop
dec
ret
fdivr
inc
sbb
ja
inc
mov
xor
sbb
std
cmps
test
dec
xchg
push
xchg
nop
mov
xchg
ret
(bad)
mov
pop
mov
pop
sub
cmp
sahf
mov
scas
mov
ret
pop
fcmovnu
lods
enter
push
scas
push
mov
jb
js
mov
sbb
fadd
out
jne
idiv
fmul
les
ins
xchg
jmp
fistp
inc
sub
(bad)
xchg
pop
xor
inc
mov
inc
lds
jne
inc
mov
xor
fnstcw
fimul
arpl
or
mov
or
lods
int3
into
in
mov
popf
inc
jmp
pushf
jmp
inc
test
ja
mov
js
call
pop
loope
and
or
fimul
pop
inc
cwde
mov
ss
push
mov
push
movs
mov
cld
cwde
lock
inc
push
mov
inc
mov
jbe
sbb
ficom
inc
ret
arpl
inc
xchg
mov
jb
out
pushf
xor
pop
pop
inc
jne
daa
mov
dec
ret
idiv
inc
sbb
fldenv
mov
mov
pop
push
ret
popf
mov
inc
and
push
ret
ret
cwde
cmps
sub
xlat
aam
cwde
and
inc
mov
mov
ret
pop
mov
xor
pop
push
mov
sub
cwde
jne
inc
adc
sbb
mov
inc
cmp
and
pop
xor
adc
mov
jg
inc
mov
call
sub
lods
xor
push
pop
lea
retf
enter
dec
inc
adc
jno
std
push
mov
stos
(bad)
fisttp
(bad)
cwde
lock
call
retf
cwde
imul
mov
ret
les
pop
mov
cmps
ret
xchg
mov
push
sar
mov
inc
dec
mov
xchg
sbb
pop
pop
mov
sbb
adc
mov
sbb
inc
jae
rcr
mov
inc
std
mov
ffreep
jno
mov
cmps
inc
inc
lds
mov
fdivr
cmc
ret
xlat
mov
inc
scas
mov
(bad)
ret
std
mov
push
sub
les
mov
sahf
cld
jmp
fistp
pop
loop
pop
sbb
mov
fwait
jns
push
int3
jb
mov
arpl
jmp
cdq
mov
mov
sub
pushf
dec
fnsetpm(287
ret
mov
mov
xor
sbb
or
(bad)
inc
cwde
mov
inc
mov
pop
sub
mov
repz
and
call
ins
mov
pop
inc
pop
pop
aad
or
push
rol
mov
out
mov
xchg
xchg
sbb
xchg
fistp
pop
push
cmp
mov
push
mov
retf
fld
icebp
inc
inc
outs
mov
outs
push
call
loop
inc
pop
pop
scas
call
adc
mov
and
cmps
stos
(bad)
pop
(bad)
push
mov
or
inc
call
pop
(bad)
push
inc
pop
mov
popf
push
repz
mov
imul
xchg
jns
push
sbb
fsub
mov
cwde
pop
pop
repz
lods
call
mov
jo
cwde
jb
inc
cmp
pop
xchg
dec
retf
cmp
ret
push
sbb
adc
mov
les
dec
ret
call
sbb
pushf
jmp
mov
ret
int3
fisttp
mov
cmps
mov
xlat
js
pushf
je
push
sbb
aad
xchg
inc
add
and
pop
and
cmp
inc
aas
mov
mov
test
dec
cwde
movs
push
inc
iret
mov
scas
xlat
xchg
mov
or
push
call
push
aad
mov
rol
cwde
add
inc
sub
cdq
ret
aaa
mov
call
add
push
loope
xor
push
ret
fistp
inc
scas
retf
test
mov
rcl
cwde
jo
mov
cwde
cdq
mov
mov
ret
mov
mov
inc
xor
push
ret
push
mov
inc
jbe
stos
cwde
scas
ficom
pop
sbb
arpl
push
push
pushf
dec
xor
pop
lock
mov
imul
mov
inc
fidivr
and
sbb
mov
push
cld
mov
cwde
sahf
jg
mov
pop
mov
xor
inc
push
mov
std
int3
pop
mov
jb
jp
cwde
stc
fld
mov
push
mov
ret
(bad)
mov
fmul
sahf
inc
xor
mov
cwde
or
inc
or
test
retf
pop
dec
fdivr
push
mov
int
and
fwait
aad
int3
pushf
stos
movs
ds
pop
nop
ret
jo
xor
xlat
push
lods
pushf
pop
xchg
ret
mov
into
sbb
stos
adc
adc
inc
cmp
pop
sbb
sbb
inc
add
pop
mov
mov
mov
cwde
cmp
inc
or
mov
jmp
pusha
pop
outs
ret
jno
repz
push
sub
xchg
cmp
inc
jecxz
push
call
mov
push
(bad)
cwde
aad
mov
xchg
ror
mov
cwde
stos
pushf
push
lahf
in
les
jb
push
pop
faddp
aas
mov
inc
pop
mov
mov
cwde
push
(bad)
inc
gs
jmp
jg
xor
jno
bound
xchg
inc
mov
mov
inc
push
mov
(bad)
mov
fwait
adc
test
pop
push
jmp
xchg
mov
mov
mov
or
retf
ret
dec
mov
inc
push
mov
sti
rcr
xchg
pop
mov
sub
pop
pop
mov
sbb
pop
nop
aam
mov
inc
pop
dec
jp
jmp
fwait
int3
pop
repz
adc
mov
xor
test
jb
xchg
fisttp
mov
push
pop
push
mov
ret
loope
jo
dec
and
push
call
mov
xchg
push
inc
sar
ret
push
mov
inc
xor
mov
jbe
and
pop
addr16
mov
inc
jne
jnp
into
push
stos
frstpm(287
mov
xlat
inc
fdivr
sub
fnstcw
xlat
into
adc
test
cdq
jns
dec
pop
dec
adc
mov
fwait
cmp
cwde
fwait
xchg
cmps
mov
pop
xlat
rcr
mov
ret
fwait
xchg
sbb
rol
cwde
ss
les
lock
adc
ins
xchg
pop
mov
cwde
jmp
aam
push
ret
aaa
mov
inc
push
mov
movs
ret
aaa
push
in
loop
outs
cwde
mov
lahf
call
ret
inc
mov
call
fisttp
pop
mov
inc
or
push
xchg
mov
inc
adc
pop
mov
out
push
push
fld
xchg
shl
pop
jmp
pop
pop
xor
sub
add
(bad)
mov
pop
lea
imul
push
xor
ja
push
pop
jmp
ret
ins
mov
int
pop
lods
sub
(bad)
ret
out
xchg
outs
ds
xchg
or
cmp
push
inc
xchg
cmc
fwait
int3
fistp
adc
push
mov
cmp
inc
xlat
mov
pop
les
mov
pop
mov
call
sbb
and
xor
adc
or
push
xchg
xchg
and
push
(bad)
xchg
jb
adc
xchg
pop
inc
enter
sub
arpl
push
push
dec
sub
xchg
sahf
js
inc
mov
pop
call
xor
jae
xor
push
jbe
mov
mov
inc
jnp
inc
arpl
xchg
xchg
xchg
xchg
adc
scas
push
mov
push
fwait
lock
push
rcr
lahf
nop
xchg
call
test
xchg
fucomi
jb
(bad)
mov
push
xor
push
shl
mov
lods
xlat
sbb
dec
jnp
arpl
mov
inc
dec
jnp
xor
xchg
mov
ret
rcl
dec
fwait
cdq
sbb
mov
fwait
nop
xchg
push
sbb
scas
dec
pop
dec
fwait
inc
leave
call
xor
jp
daa
mov
sbb
and
xlat
cmp
ret
xor
cmp
adc
cmp
ret
xchg
push
mov
mov
mov
jle
js
xor
cli
pop
iret
lods
xchg
mov
mov
xchg
mov
xchg
xchg
push
int
mov
xchg
fist
dec
adc
xchg
push
dec
mov
dec
push
jbe
rcl
dec
xchg
dec
pop
fwait
xchg
and
js
mov
out
xchg
and
sbb
pop
aaa
fistp
xchg
or
and
or
push
out
fbstp
mov
mov
ret
cdq
rcr
xchg
push
pop
jno
and
pop
dec
xchg
jb
repz
iret
lods
pop
aas
mov
dec
mov
sbb
cwde
or
fucomi
ds
pop
fwait
rol
sahf
inc
mov
pop
scas
js
adc
xlat
mov
sbb
fild
jnp
ja
mov
adc
aas
dec
cli
sbb
lds
xor
push
retf
ja
pushf
aas
lods
jno
arpl
and
imul
out
xlat
sbb
xchg
arpl
pop
cdq
(bad)
xchg
xchg
loopne
(bad)
sahf
loopne
push
dec
or
jmp
dec
in
adc
jecxz
cdq
inc
loopne
shr
sub
int3
jge
ins
adc
imul
pushf
int3
loopne
fild
cmp
dec
aaa
cwde
xor
push
mov
lahf
retf
sub
xor
add
adc
pop
or
ss
push
aas
sbb
call
and
pop
ja
push
cmp
xchg
sbb
xchg
and
add
dec
pop
xchg
lahf
jmp
push
cmp
clc
pushf
push
push
cmp
dec
cwde
inc
sub
xchg
loopne
xchg
icebp
test
adc
push
cli
adc
push
dec
sub
xor
div
call
sahf
xor
sbb
dec
imul
or
pop
jae
adc
mov
and
shr
iret
int3
in
in
shl
pop
fnstcw
jbe
xchg
test
je
in
jo
push
push
fwait
aad
(bad)
fisttp
je
fs
(bad)
in
in
mov
dec
pop
gs
pop
push
outs
retf
mov
xor
add
inc
cmp
dec
sbb
dec
xchg
push
movs
cmp
loope
pop
cmp
repnz
push
retf
aam
js
sbb
fcomp
mov
mov
pop
in
rcl
lods
dec
addr16
enter
addr16
mov
mov
lea
add
or
fwait
ins
ins
dec
addr16
aad
xchg
xchg
sbb
imul
dec
mov
xor
enter
fsubr
xor
popf
push
ret
sub
pop
ret
push
xchg
push
mov
icebp
movs
push
mov
lahf
lock
inc
mov
xchg
pop
sub
and
aad
adc
pop
pop
int
xor
push
js
mov
mov
test
mov
inc
retf
mov
fcmovb
ror
mov
mov
adc
jo
inc
xor
pop
or
idiv
inc
dec
mov
mov
or
mov
xor
mov
out
push
pop
retf
(bad)
mov
xor
sbb
mov
gs
shr
movs
cwde
(bad)
jmp
pop
inc
push
dec
inc
mov
scas
pop
fnstsw
pushf
inc
adc
in
retf
test
inc
fwait
mov
mov
loop
rcr
mov
ins
fidivr
aad
les
mov
jmp
cld
fcom
inc
sti
retf
adc
mov
pop
ret
(bad)
mov
cld
mov
(bad)
push
cmp
retf
ss
fnstenv
mov
aad
les
mov
jae
repnz
inc
xor
push
ret
loop
fistp
mov
rol
mov
(bad)
mov
aas
cld
pop
mov
cwde
inc
add
call
cwde
ret
mov
mov
out
cld
adc
repz
ret
jnp
jb
pop
in
cwde
loopne
into
pop
push
or
pop
retf
aaa
mov
jnp
hlt
cld
les
mov
dec
or
sbb
(bad)
cld
mov
inc
mov
imul
dec
or
mov
pushf
leave
in
pop
call
imul
inc
js
and
pop
ret
fcomp
xchg
xchg
dec
pushf
adc
out
cwde
test
call
fcmovnu
fcmove
pop
pop
fsub
dec
pop
fcmovnbe
retf
int3
push
pushf
test
or
fwait
je
cld
pushf
cwde
pop
adc
ins
neg
mov
cs
pushf
cmps
call
pushf
fidivr
fistp
adc
adc
int3
push
pushf
mov
push
cld
ins
fst
fcmovu
ror
mov
cmps
in
mov
out
rcr
fsub
pop
mov
pushf
mov
pushf
mov
repnz
ja
aad
(bad)
iret
cmp
inc
rcl
add
fucomi
sub
push
fdivr
in
sub
push
cwde
push
inc
pop
stc
xchg
loop
mov
push
dec
pushf
jl
pushf
cli
pop
pushf
aaa
mov
cmp
daa
setl
dec
pushf
call
pushf
dec
scas
pushf
or
pushf
std
outs
pushf
popa
push
pushf
pop
popf
pushf
mov
fwait
pop
je
mov
push
fcomp
int3
fs
int3
imul
cs
add
stc
fmulp
cli
dec
fld
int3
iret
outs
mov
pop
push
pop
(bad)
int
and
pop
or
mov
pop
mov
pop
out
pop
mov
outs
dec
pushf
sbb
jmp
std
loope
jp
aam
int3
mov
int3
sbb
lods
ss
pushf
cmc
mov
adc
pushf
and
lods
pushf
add
pushf
(bad)
cld
pushf
xchg
int3
jmp
(bad)
scas
pushf
fcomp
dec
xor
aam
cmp
movs
jp
xchg
leave
aam
clc
les
cld
mov
push
pop
mov
pop
add
pop
jg
pop
mov
pop
xlat
mov
pop
mov
pop
addr16
pop
cwde
xor
pop
pop
push
pop
js
pop
test
xor
fimul
jmp
push
out
xor
out
daa
fidiv
aaa
ficomp
xchg
ficom
(bad)
test
rcr
cmp
stc
cmp
xchg
sub
scas
mov
mov
movs
lods
mov
cwde
adc
pushf
cmp
mov
(bad)
fld
inc
aam
sub
sbb
dec
cmp
popa
or
(bad)
fcmovne
adc
imul
int3
push
fcmove
arpl
das
pop
mov
mov
pop
mov
mov
jmp
xchg
scas
add
outs
sti
fsubr
stc
enter
pop
mov
aam
jmp
aam
leave
aam
cdq
aam
mov
xor
mov
retf
sbb
mov
sbb
pop
pop
pop
inc
lea
pop
jg
pop
xor
call
pop
dec
(bad)
fisttp
mov
fdivr
fcomp
mov
xchg
stos
les
retf
pop
jmp
aaa
sbb
adc
mov
jae
int3
mov
lods
lods
int3
xor
int3
and
fidivr
pop
jns
pop
aad
jmp
stos
lods
fidiv
or
loopne
adc
dec
pop
(bad)
(bad)
fcmovnb
fstp
and
fstp
mov
into
ficomp
ss
fdivr
fmul
fdivr
in
int3
xchg
das
int3
jp
int3
retf
dec
outs
int3
lods
jle
sub
int3
in
int3
push
in
int3
xlat
(bad)
mov
int3
mov
int3
xor
int3
mov
mov
(bad)
pop
sub
pop
push
dec
out
mov
lods
fwait
mov
mov
fdivr
int
sub
mov
int3
(bad)
int3
jno
mov
ins
adc
pop
out
pop
cld
lods
test
or
fisubr
fstp
mov
fisttp
fcmovnb
mov
leave
cld
fstp
fild
fist
(bad)
fcmovnu
(bad)
fild
pop
fistp
hlt
in
(bad)
fild
fild
mov
fidiv
jnp
in
ficomp
ficom
fisttp
pop
cmps
sub
pushf
adc
pushf
pop
or
xor
pushf
addr16
cli
push
jno
pop
je
pop
push
or
shr
fisub
ficomp
(bad)
mov
push
sti
fisubr
fdivr
in
lods
inc
sahf
pushf
clc
jnp
movs
sub
pop
push
loop
fcmovu
mov
ficom
sub
dec
sbb
aam
fwait
aam
retf
mov
mov
pushf
lods
fdiv
fsubr
fmul
fsubr
mov
stos
push
fcomp
and
inc
mov
push
jmp
imul
cmps
or
xor
ret
outs
fdivr
inc
add
pop
popf
pushf
inc
retf
pushf
mov
pop
repnz
hlt
sub
or
enter
retf
fild
fneni(8087
pop
fisttp
jl
ret
mov
repnz
sub
sub
test
xchg
jmp
fistp
push
fmul
jb
aam
dec
aam
lods
aam
int
mov
aam
push
aam
dec
aam
jle
test
pushf
pop
cwde
push
sahf
retf
scas
mov
mov
pushf
fcmove
lods
in
nop
pop
mov
rol
mov
sbb
sahf
pushf
dec
scas
jmp
(bad)
sbb
mov
adc
(bad)
pushf
les
pushf
jnp
pushf
dec
jg
ret
iret
pop
sub
cdq
(bad)
test
cmps
retf
repnz
mov
inc
pop
pushf
cmp
pushf
std
por
ds
fcmovnb
outs
(bad)
sbb
int3
pop
mov
(bad)
pop
add
retf
xchg
ds
test
pop
in
cmp
fmul
mov
mov
cli
add
retf
push
sbb
gs
sub
aam
int
or
aam
aas
aam
outs
(bad)
out
and
xchg
pop
ins
mov
pushf
cs
jmp
(bad)
fisubr
in
fcmovu
jmp
mov
fcmove
jmp
or
jae
(bad)
xchg
push
js
mov
dec
mov
ins
mov
retf
mov
sti
jmp
fcmovnbe
or
mov
fisttp
imul
dec
sbb
stc
fmul
xor
sbb
push
push
jmp
dec
stos
aam
pop
aam
jmp
aam
pop
aam
dec
aam
or
jl
aam
sub
xchg
jg
rcr
mov
dec
mov
jnp
out
mov
dec
mov
jl
cmp
mov
jnp
xor
mov
push
jb
mov
sbb
pop
sub
fcom
(bad)
jp
scas
fidivr
mov
push
stos
aam
jnp
mov
ins
pushf
push
pop
inc
pop
pop
(bad)
sub
pop
sahf
mov
mov
jmp
fld
sub
ror
js
gs
pop
imul
(bad)
retf
cwde
xchg
sub
int3
(bad)
fwait
lods
xor
pushf
jne
pushf
fsubr
pushf
loop
pushf
xor
fstp
fcmovbe
int3
fcmove
or
xchg
cmp
mov
jecxz
jmp
int3
sbb
lods
pushf
jg
pushf
daa
fcomp
dec
xor
mov
mov
sbb
push
jge
stc
dec
mov
cmp
pop
cs
push
mov
cwde
lods
in
pushf
ret
std
pushf
cwde
push
pushf
add
pushf
pop
pop
pop
(bad)
(bad)
push
fisub
std
ficomp
mov
cwde
lds
into
(bad)
(bad)
adc
pop
neg
das
mov
call
scas
inc
fdivr
sbb
into
sub
aas
outs
fmul
fmul
jmp
fcomp
outs
lods
pop
nop
pushf
cmp
pushf
fs
pop
sbb
add
fisubr
mov
mov
fcom
into
fcomp
mov
scas
mov
add
fdivr
xor
mov
push
leave
outs
ficomp
lods
sbb
std
fistp
arpl
fiadd
fdivr
pop
inc
lahf
cmp
sbb
mov
outs
mov
out
sar
rcr
push
retf
(bad)
pop
int3
nop
out
int3
xchg
fmulp
push
sahf
int3
out
int3
add
int3
dec
cs
xchg
dec
int3
lea
rcl
mov
jmp
rcr
push
into
movs
fmul
lahf
enter
push
adc
jno
out
mov
into
mov
pop
stos
inc
mov
jge
int3
sub
bound
int3
imul
pop
scas
int3
stc
out
mov
pop
mov
fisubr
fisubr
inc
cmp
or
fcmovu
js
push
push
les
mov
mov
push
cmp
nop
pushf
mov
pushf
arpl
pushf
ja
pushf
(bad)
out
pushf
lods
lahf
pushf
pop
outs
pushf
xchg
pushf
(bad)
ficomp
pushf
or
jmp
push
dec
(bad)
sbb
fidivr
cwde
mov
fdivr
fdivr
out
fcomp
fdivr
fsubr
push
test
aam
stos
les
dec
jnp
(bad)
fwait
jmp
(bad)
pop
retf
fucomi
jmp
data16
ins
fidiv
ficomp
fidiv
fisub
fidiv
fcmovbe
jnp
mov
ficomp
(bad)
leave
fidivr
fidivr
dec
int3
xor
int3
dec
sub
aas
mov
(bad)
jmp
int3
jmp
int3
sbb
int3
out
sbb
dec
sahf
pop
pop
adc
mov
cli
fcmovnu
retf
fcmovu
pop
stos
pop
sbb
jmp
les
aam
mov
xor
aam
stos
aam
push
push
sub
pop
sbb
pushf
popa
jnp
and
(bad)
fcmovnu
fcmovu
pop
cli
fcmovnu
imul
jmp
sar
push
mov
out
(bad)
fistp
sub
push
mov
je
mov
jnp
hlt
pop
pushf
icebp
cwde
scas
sub
pushf
jo
jmp
rcr
mov
fld
jmp
add
sub
xchg
push
sbb
ins
(bad)
jge
add
push
dec
aam
or
pop
adc
pushf
fs
push
rcr
cld
retf
in
mov
sbb
jl
int3
ins
dec
int3
aaa
pop
int3
xchg
lods
int3
retf
or
xchg
pushf
mov
pushf
xlat
lods
jnp
shl
int3
adc
in
cmp
pushf
lods
mov
push
sbb
fcmovu
ficomp
cmps
les
sahf
dec
aaa
shr
xchg
pushf
pop
lods
pushf
adc
ins
pushf
xchg
lods
fistp
call
lods
stos
fmul
fdivr
fcomp
fcomp
fcomp
fsubr
cmp
das
dec
int
int3
popf
pushf
test
sbb
push
fld
fcmovne
ins
fist
fisttp
in
fld
pushf
fcmovnb
pop
frstpm(287
dec
mov
adc
pushf
pop
fcomp
adc
cs
outs
repz
fsubr
loop
scas
push
fcomp
sbb
mov
pop
int3
add
int3
out
mov
(bad)
jle
cmp
mov
int3
mov
ins
push
push
mov
pop
xor
pop
stos
sahf
pop
stos
mov
xor
fcmovb
outs
hlt
icebp
aam
(bad)
aam
das
aam
aas
les
mov
pop
pop
pop
ja
pop
data16
pop
or
pop
in
sahf
pop
push
jle
xchg
or
pushf
add
pop
(bad)
pusha
aam
int
inc
mov
mov
push
clc
fimul
fisubr
fidiv
ficomp
ficom
ficomp
jg
aam
scas
aam
cs
popf
aam
pop
les
lds
xor
inc
cld
int3
add
pushf
int3
in
int3
arpl
mov
lods
sub
pop
rcr
mov
ror
or
int3
pushf
ficom
fiadd
bswap
cwde
or
fsubr
rcr
sub
fdivr
in
lods
or
popf
pop
inc
push
sbb
dec
pushf
add
pop
aad
cdq
sub
leave
int3
aam
lods
aam
ins
mov
xchg
leave
mov
int3
dec
mov
rcr
add
mov
adc
cmp
xor
jmp
pushf
jl
leave
dec
hlt
jmp
les
ins
pop
pop
jmp
fwait
repnz
mov
mov
add
mov
mov
cwde
lds
xor
pushf
rcr
shr
fild
mov
mov
jnp
enter
sbb
ins
sub
adc
dec
(bad)
sbb
push
imul
call
out
retf
pop
fidiv
ficomp
aad
aam
or
out
pushf
ins
fmul
or
fcomp
(bad)
mov
sub
mov
fcomp
fmul
fdivr
fmul
jbe
or
fdivr
(bad)
enter
pop
jmp
pushf
aam
int3
les
pushf
dec
pop
jmp
pop
(bad)
mov
mov
jmp
mov
pop
popf
pushf
and
fld
call
inc
dec
ins
pop
push
jnp
pop
jno
pop
mov
pop
inc
cs
cmp
jg
in
pop
pop
das
pop
loop
pop
push
ficomp
pop
jmp
std
call
add
fisttp
(bad)
push
fmul
js
ds
fsubr
fdivr
call
jle
dec
sahf
pushf
ret
por
fcmovnu
retf
mov
sub
fsubr
dec
mov
pop
push
or
add
mov
cld
mov
sub
xchg
pushf
pop
mov
ins
pop
iret
int3
sbb
test
sbb
fisttp
dec
fist
fistp
sbb
fsubr
cld
inc
into
int3
cmp
fcmove
in
fimul
(bad)
mov
adc
(bad)
imul
retf
(bad)
jmp
and
enter
fwait
es
pushf
fucompp
mov
adc
fimul
cwde
test
dec
int3
jne
mov
pop
imul
jl
test
aam
pop
les
mov
mov
jmp
jo
mov
out
rcr
pushf
sub
push
adc
pushf
fisubr
fidiv
inc
les
and
adc
push
pushf
xchg
jmp
push
cmp
add
cli
xchg
fcmovu
bound
inc
retf
fisub
(bad)
fcmovnu
sbb
fimul
sub
movs
aam
pushf
aam
int3
aam
in
aam
sbb
or
push
cmp
movs
cld
lods
mov
mov
cld
jmp
fcmovu
xchg
in
mov
dec
aad
pop
lods
pushf
pop
pushf
adc
sbb
jns
int3
and
mov
push
sbb
cmp
js
ja
pushf
fcmovbe
ins
fisubr
fcomp
fmul
outs
fdivr
push
fcomp
fdivr
fsubr
fmul
push
inc
mov
mov
pop
mov
mov
ins
mov
jle
aas
outs
pop
mov
pop
mov
pop
neg
push
(bad)
retf
imul
jg
xor
sbb
xor
fsub
enter
add
pushf
add
pushf
xor
pushf
cmps
rcr
sbb
pusha
and
jg
fmul
enter
pop
sub
pushf
dec
ins
aam
cmp
(bad)
sbb
xchg
fst
ret
fcomp
aam
out
aam
mov
loope
aam
add
xchg
xchg
aam
rcl
sub
aam
adc
add
shl
aam
adc
and
mov
push
mov
std
mov
dec
mov
push
jmp
in
aam
lods
(bad)
stos
cmp
test
mov
retf
mov
mov
ror
ins
mov
cs
into
mov
aas
mov
mov
leave
sub
int3
or
int3
push
pop
int3
dec
jmp
int3
mov
(bad)
imul
and
mov
imul
or
pop
leave
sti
pop
ss
pop
call
or
adc
dec
pushf
or
int3
and
int3
call
nop
pushf
mov
pushf
add
mov
ins
int
les
int3
lds
mov
int3
(bad)
stc
int3
int3
leave
mov
fstp
pushf
cmps
pop
pushf
pop
jmp
jg
pushf
sbb
pushf
pop
dec
pushf
mov
fcmovnu
cmp
(bad)
test
mov
fcomp
or
mov
jp
and
(bad)
test
push
fimul
adc
aam
enter
aam
fadd
push
cmp
mov
pop
adc
pop
out
dec
pop
push
pop
pop
popf
jp
mov
pop
xchg
call
fbstp
js
pop
push
fimul
ficomp
(bad)
test
xor
add
fldcw
sub
pop
push
sbb
pop
xchg
call
retf
repnz
pop
fcom
ret
sub
cmp
pushf
cmp
cmp
or
and
pop
cmp
or
call
fcomp
mov
xchg
xchg
leave
inc
sub
lods
xchg
dec
sbb
pushf
and
fcmovnu
pop
ins
clc
sbb
enter
push
cs
pushf
fisubr
cwde
lds
dec
int3
add
repnz
pushf
test
fcomi
iret
sahf
pop
jl
pushf
jo
and
rcl
or
out
sahf
stos
lea
cld
pushf
fcmove
or
leave
popf
fisub
push
popa
dec
fnstsw
pushf
xchg
into
pushf
jmp
(bad)
jle
(bad)
adc
fcomi
in
fcmovnu
(bad)
fist
clc
add
pushf
fsubr
fsubr
aaa
int
push
nop
pushf
sbb
loope
pushf
add
outs
out
mov
push
mov
loop
rcr
sbb
cmps
mov
pushf
rcr
fild
fcomi
outs
out
adc
push
pushf
sti
(bad)
call
repz
loop
sbb
bswap
sahf
dec
scas
int3
push
out
int3
and
int3
inc
jg
cmp
dec
(bad)
mov
aas
mov
out
pushf
pop
cwde
out
ficomp
pushf
and
cmps
pop
jmp
fcmovnu
in
(bad)
(bad)
sbb
dec
enter
xchg
and
fisub
fidivr
inc
jle
jb
aam
cs
std
aam
int
mov
jmp
fisttp
mov
inc
in
aam
push
aam
cs
dec
aam
jle
mov
mov
int3
pushf
ds
rcr
ret
mov
adc
pushf
dec
in
mov
sub
rcr
sub
push
fisttp
ror
test
int3
cwde
int
cmc
push
push
pop
or
mov
pushf
xchg
push
adc
pop
pop
sar
ror
cmp
aam
imul
fwait
aam
or
mov
les
mov
dec
mov
(bad)
les
pushf
aaa
fcomp
dec
sti
pushf
fimul
fcmovbe
dec
cwde
cmps
adc
imul
stos
pushf
mov
(bad)
sti
mov
loopne
mov
cwde
jg
pushf
in
jp
ror
pushf
ret
retf
pushf
lahf
mov
cmp
add
aam
mov
and
aam
dec
aam
fcmovbe
push
aam
sub
int3
cmp
fs
rcr
fistp
mov
daa
stos
add
mov
push
push
adc
mov
mov
xchg
pop
loop
push
repnz
in
pushf
ret
mov
pop
push
fsubr
lods
cmp
rcl
ret
pushf
dec
mov
fimul
push
inc
les
add
sub
nop
sbb
sub
lea
fucomi
ins
fcomi
sub
in
mov
popf
mov
jge
fmul
fmul
xor
bound
fsubr
mov
pushf
in
xlat
movs
mov
mov
outs
inc
add
jbe
mov
cs
idiv
dec
mov
pushf
sub
out
mov
push
mov
ds
(bad)
sub
push
add
push
pushf
jns
jmp
rcr
mov
fcmovnu
into
fistp
stc
mov
inc
les
cmp
push
cwde
mov
nop
pushf
fisttp
mov
pushf
xchg
dec
pushf
(bad)
pop
pop
jp
fstp
pop
out
pop
nop
std
pop
cmp
retf
mov
fsubr
push
fcomp
fdivr
fmul
fcomp
inc
cwde
retf
les
push
(bad)
int3
adc
call
(bad)
xchg
pop
pushf
xor
inc
jl
pushf
jge
aaa
js
inc
cmp
fidivr
adc
ins
or
aam
mov
or
sub
pushf
movs
pop
pushf
lock
pop
cli
pop
jp
retf
sbb
pushf
fidivr
fcmovbe
cli
xor
sahf
mov
mov
cwde
xchg
sti
pushf
mov
jnp
push
mov
fwait
xor
jnp
fsubr
pop
mov
mov
jnp
adc
pushf
inc
cwde
test
mov
push
pushf
nop
pop
pop
xchg
jl
sbb
sub
xchg
ins
pushf
(bad)
out
fucomip
jmp
stc
add
pop
adc
pushf
(bad)
out
add
ficomp
dec
pushf
or
fsubp
loop
(bad)
cmp
pop
pop
gs
jnp
sahf
icebp
mov
inc
fstp
mov
jae
aam
mov
fisttp
imul
inc
sub
ror
xchg
mov
movs
(bad)
push
das
aam
aas
aam
pop
aam
dec
aam
pop
aam
shld
stos
mov
ror
mov
or
movs
cwde
mov
sti
out
rcr
mov
push
jl
sahf
cdq
mov
ins
mov
int
jae
mov
push
mov
scas
pushf
xchg
push
inc
cmc
dec
pushf
hlt
fcmovu
add
and
jge
fs
into
sahf
aam
mov
in
pushf
fcmovnu
jle
push
xchg
outs
aam
ds
push
aam
mov
pop
mov
pushf
ja
adc
sbb
push
jl
push
popf
pushf
cdq
lods
pushf
mov
pushf
leave
lods
fist
cli
cmp
(bad)
lods
pushf
imul
pushf
cli
sub
sub
pushf
jecxz
mov
dec
dec
pop
adc
push
cdq
jne
pushf
inc
pop
stc
ret
pop
xor
push
pushf
push
pushf
pop
mov
sbb
push
pop
leave
fist
shr
jmp
mov
pop
dec
cmp
pop
fstp
cli
dec
ficomp
into
sbb
jg
int3
sti
dec
int3
imul
nop
pushf
sar
inc
call
fnstcw
fwait
or
pop
pop
imul
cli
cdq
ficom
fimul
aaa
adc
mov
push
xor
shr
cmp
or
sub
bound
mov
pushf
std
out
(bad)
dec
dec
fucomi
imul
cdq
pop
jecxz
mov
mov
loop
(bad)
pop
fidivr
cmp
les
stos
xor
sbb
pop
call
int3
rcr
sub
mov
cli
inc
(bad)
push
nop
mov
adc
sti
lods
sbb
and
loopne
pushf
or
pushf
jbe
aam
test
pop
cwde
add
pushf
mov
fisttp
pushf
aad
jmp
(bad)
mov
(bad)
jp
in
call
dec
enter
int3
pop
sub
sub
pop
mov
test
xchg
fwait
int3
bts
mov
fstp
jmp
inc
les
ret
sahf
pop
push
push
imul
call
ins
push
fmul
mov
push
pushf
dec
or
in
pop
mov
pop
int3
push
pop
xchg
outs
pop
mov
retf
data16
mov
ficom
cwde
icebp
(bad)
fmul
retf
fmul
or
lods
stc
and
mov
into
push
pop
mov
pop
test
popa
das
pop
jg
or
sub
clc
std
fsubr
inc
mov
or
pop
int3
imul
outs
int3
mov
lods
mov
mov
pushf
or
pushf
aam
cli
mov
dec
inc
ficom
fimul
jnp
push
pushf
stc
rcr
je
add
fild
sub
fcmovnb
sbb
rcr
fcom
fsub
stos
push
and
repz
inc
les
mov
add
mov
jg
aaa
fwait
leave
sbb
pop
dec
jne
adc
iret
pushf
cmp
push
pop
fdiv
or
mov
fcom
call
xchg
int3
push
popa
pushf
cs
mov
fisubr
adc
dec
iret
ficom
aas
aam
paddq
fiadd
icebp
js
je
pushf
fcmovb
pop
fimul
cwde
test
fsubr
fmul
fadd
push
int
jno
mov
sbb
out
push
adc
sahf
nop
pushf
pop
mov
cmp
ficom
xchg
pushf
push
mov
mov
mov
and
pushf
test
mov
jmp
rcr
fs
fist
fist
(bad)
fistp
fistp
sub
pop
pushf
mov
loopne
aam
pushf
mov
mov
pushf
inc
jge
add
stos
pop
fimul
fcmovbe
int3
cwde
or
dec
int3
ret
ins
int3
out
int3
jle
lods
outs
sahf
pushf
call
ins
mov
add
outs
cli
pushf
push
fdivr
fcomp
stos
fdivr
je
dec
adc
inc
call
pushf
xor
mov
fld
nop
pushf
add
sahf
cli
imul
pop
pop
pop
addr16
pop
jmp
pop
jg
pop
cld
pop
pop
jecxz
pop
ret
aas
or
retf
fld
fucomi
dec
mov
pop
mov
pop
lods
stc
pop
sbb
fsubr
jp
fsubr
push
fnstsw
inc
cwde
add
pushf
movs
pop
pushf
add
fisttp
fucomi
cmp
push
or
mov
mov
hlt
push
aam
clc
aam
enter
mov
pop
mov
leave
cdq
fistp
push
pushf
cwde
add
fdivr
fcomp
fdivr
test
sub
fmul
add
mov
fsubr
test
pop
clc
xchg
fdivr
js
lea
cdq
cmp
cmps
push
movs
jmp
sahf
dec
pop
(bad)
stos
pop
sub
pop
cmp
sbb
icebp
adc
mov
lahf
stos
pushf
scas
cwde
es
jle
pushf
jmp
pushf
aad
pushf
jecxz
pushf
(bad)
pop
pop
push
sbb
cmp
dec
mov
xchg
fcomp
popf
pushf
cmps
ins
pushf
sar
push
mov
add
in
ficom
pushf
jae
loope
fisttp
adc
inc
pop
cmp
pushf
mov
pushf
(bad)
(bad)
sub
xchg
mov
pushf
call
gs
pushf
sub
pop
push
je
or
sar
pop
adc
std
pushf
nop
fmul
rcr
in
push
or
sahf
dec
pushf
int
pushf
inc
jle
ror
(bad)
mov
pushf
stos
jle
sbb
pop
in
pop
retf
jbe
ficom
ficomp
out
jle
aam
(bad)
push
add
jl
aam
adc
rcl
loopne
xlat
and
dec
push
les
sub
in
popa
add
xor
scas
cmps
fcomp
mov
mov
pop
jns
jle
arpl
mov
push
add
aam
aas
aam
dec
les
fwait
loope
pop
pop
scas
pushf
fidiv
iret
ficom
(bad)
adc
(bad)
mov
jmp
fcmovbe
pop
fidivr
mov
in
fstp
lods
daa
ret
push
retf
cmp
pop
sbb
mov
int3
xlat
push
int3
outs
(bad)
rep
int3
lahf
popf
int3
idiv
cdq
nop
pushf
cmp
pop
push
fwait
lea
pop
mov
pop
out
pop
outs
retf
mov
pushf
inc
pop
fcmovnu
mov
mov
aad
cmp
retf
dec
rcl
adc
adc
pushf
ja
pushf
mov
jmp
pop
sti
push
stos
pop
sub
jno
loop
rcr
xchg
pop
pop
lods
push
sahf
pushf
neg
lods
jmp
rcl
fld
fisttp
fist
push
stos
push
pushf
into
push
fisubr
pop
pop
cmp
pop
lds
fdivr
pop
dec
sub
or
fisubr
pushf
sub
pushf
xchg
or
pop
cmp
push
rcr
add
fcmovnu
mov
or
leave
fmul
repz
fsubr
cmps
fdivr
fmul
fmul
fdivr
fsubr
int
ror
cmp
int3
aad
int3
fs
(bad)
in
mov
pop
add
loopne
pop
js
pop
xor
nop
pushf
xchg
ins
jmp
fstp
fcmove
mov
in
fistp
out
nop
push
ins
pushf
cwde
cmp
fmul
fmul
enter
int3
loope
mov
mov
push
push
xchg
loop
sbb
sub
fstp
xchg
xchg
jle
push
pushf
cdq
dec
mov
fidivr
test
sbb
sti
push
into
jmp
mov
out
push
push
push
push
pushf
outs
mov
in
pop
xor
call
test
fsubr
fcomp
inc
fdivr
mov
pop
movs
fdivr
fcomp
fdivr
xchg
(bad)
and
ficom
pop
xchg
fcomp
push
fsubr
jmp
dec
mov
push
add
pushf
or
outs
hlt
js
gs
pushf
fidivr
push
add
ja
aam
pop
(bad)
std
cmp
lock
mov
pop
pop
dec
mov
fwait
pop
push
shl
sbb
xchg
xchg
pushf
fistp
mov
sti
int3
inc
jmp
add
pop
test
aam
or
sbb
pop
fcmovnbe
jne
aam
mov
xor
mov
fwait
mov
xchg
sbb
imul
fdivr
fld
pushf
das
pop
pop
sbb
pop
les
loope
pop
test
sti
fcomi
cmp
push
out
les
mov
fwait
mov
pop
mov
dec
dec
adc
pushf
add
mov
add
push
sbb
mov
int
lods
arpl
jg
pushf
pop
sbb
mov
pushf
mov
pushf
lods
sbb
sub
pushf
(bad)
cs
pop
or
mov
test
rcr
dec
dec
fdivr
repz
int3
int3
push
int3
mov
int3
push
mov
ins
add
pop
sub
pop
mov
inc
fild
fstp
fld
fstp
pand
sbb
fsubr
(bad)
out
mov
fild
pand
fcomi
sahf
mov
fisubr
fisubr
hlt
popa
aam
into
mov
and
pusha
pop
push
pushf
(bad)
call
pop
mov
pop
jne
retf
outs
fist
fild
fucomi
adc
sahf
and
cmp
fist
push
inc
lods
leave
nop
pushf
pop
add
(bad)
fld
scas
fild
(bad)
pop
sbb
xchg
enter
add
lahf
popf
loop
rcr
ds
mov
mov
nop
ins
rcl
jo
jle
pop
dec
and
pop
lds
outs
fld
das
(bad)
fild
fld
(bad)
mov
aad
pop
fistp
xlat
dec
push
pushf
jecxz
pop
out
fistp
cli
inc
fcmovu
ins
outs
ficomp
pminub
(bad)
mov
and
ficom
add
push
push
lea
inc
retf
aam
fwait
mov
push
adc
sti
pushf
stc
fdivr
fcomp
in
ins
les
mov
push
(bad)
dec
pop
enter
mov
inc
cmp
pop
and
rcr
fdivr
add
sbb
daa
cmp
sub
int3
pop
mov
xor
ins
pop
push
add
retf
(bad)
call
pop
popf
imul
test
mov
jmp
add
mov
mov
mov
jb
mov
inc
mov
(bad)
mov
sub
add
in
pop
ja
pop
test
fist
pop
(bad)
or
ret
or
(bad)
call
call
push
pop
pushf
ficomp
cwde
xor
inc
push
retf
jbe
int3
ret
cmp
int3
popa
pop
int3
arpl
jl
rcr
ficomp
mov
sub
mov
mov
mov
or
int3
test
mov
pushf
jp
pushf
mov
pushf
xchg
xchg
jmp
rcr
outs
out
test
dec
push
js
fcomp
add
sub
pop
cli
fmul
fcomp
(bad)
enter
int3
cmp
jmp
(bad)
iret
fcomp
call
fnstenv
pop
xor
fcmovbe
fsubr
fsubr
fcomp
dec
int3
pusha
sub
sub
mov
sti
sub
cwde
jge
ror
leave
mov
int3
pop
or
mov
lods
push
popf
jmp
rcr
dec
pop
fcmovne
fld
out
popf
dec
pop
mov
enter
dec
fist
mov
enter
pop
lahf
in
pushf
stc
fst
jbe
mov
pop
adc
sahf
pushf
dec
int
inc
nop
jmp
(bad)
js
call
pminub
fcmovbe
lahf
(bad)
sahf
pushf
lds
add
cli
sbb
sbb
lods
bound
jns
pushf
jno
pushf
push
ds
mov
mov
fidivr
dec
push
fistp
fist
fistp
je
icebp
fdivr
pop
fdivr
xchg
scas
xor
fbld
setp
into
lods
fdivr
fdivr
fsubr
inc
in
retf
cdq
cs
inc
sbb
jg
adc
popf
pushf
or
in
mov
push
jnp
frstor
std
push
fdivr
imul
outs
fmul
js
std
pop
pushf
ficomp
das
ficom
pminub
adc
aam
pop
xor
mov
mov
mov
push
pushf
in
cwde
add
pushf
sbb
pop
jle
mov
pushf
lods
pop
pop
adc
cwde
mov
outs
and
xor
pop
pushf
lods
ficomp
fwait
cs
pushf
movs
fld
ds
outs
cmp
dec
stos
fmul
(bad)
xor
pop
add
setl
ret
aad
scas
push
pushf
jae
push
ficom
nop
pushf
imul
add
pop
fwait
inc
pushf
sbb
aam
out
aam
paddq
ds
in
les
xchg
mov
cs
iret
fist
ins
pop
es
pop
out
dec
pop
push
std
pop
loop
cli
xchg
fcmovu
sub
cwde
mov
fmul
(bad)
fcomp
fdivr
fcomp
out
lea
sbb
ins
pushf
fidiv
fsubr
fsubr
test
stos
push
fdivr
enter
movs
or
pushf
push
popf
fs
out
pushf
mov
jecxz
rcr
adc
fisttp
(bad)
fisttp
(bad)
or
(bad)
jmp
adc
inc
fsubr
fcomp
inc
lods
mov
sahf
fdivr
fcomp
enter
push
movs
mov
inc
icebp
retf
mov
int3
pop
mov
cmp
int3
lods
jns
cmps
fxch
jno
mov
pop
movs
imul
mov
pop
rcl
pop
loopne
loope
pop
pop
or
shr
or
or
daa
jmp
stos
dec
push
dec
je
pushf
add
jp
int3
push
mov
inc
cmp
pushf
add
mov
stos
fstp
outs
lods
aam
(bad)
aam
sub
mov
leave
lock
mov
mov
pop
repz
push
pop
inc
pusha
mov
leave
and
fnstsw
push
popf
mov
push
pushf
cmp
mov
fstp
fistp
or
int
fcmovne
pushf
fcmovnb
mov
sbb
adc
aam
jge
jae
aam
int
iret
stos
movs
sahf
pushf
cmp
pushf
clc
lea
pushf
neg
xchg
pop
xor
sub
inc
sbb
or
mov
mov
rcr
xor
fistp
mov
sbb
xchg
fsubr
fcomp
aam
into
aam
(bad)
aam
jg
shl
aam
mov
mov
or
aam
jo
ds
call
aam
xor
xchg
scas
mov
adc
mov
sub
mov
dec
jne
adc
jle
jne
scas
sub
out
stos
fsubr
int3
fcomp
enter
pop
mov
les
das
sahf
sti
or
(bad)
cmps
jle
mov
(bad)
out
xchg
jmp
test
in
fistp
fcmovne
jge
rep
fcomi
pop
fild
sahf
push
enter
mov
cmp
test
ins
fistp
and
push
or
ins
fistp
(bad)
leave
retf
call
or
retf
jmp
mov
fsubr
fsubr
sub
push
jp
daa
sahf
pushf
pop
dec
pushf
cmps
cmp
pushf
push
jmp
cs
cmp
adc
pushf
sbb
pushf
call
pushf
xchg
pop
pushf
inc
mov
jmp
pushf
scas
sub
lds
mov
bound
call
pop
test
pop
jmp
pop
sub
pop
jle
pop
bound
pop
xchg
mov
retf
psubb
or
cdq
(bad)
fcomp
mov
fimul
int3
test
mov
cmp
inc
leave
(bad)
mov
sbb
inc
push
ret
call
int3
ror
inc
xchg
cmp
sub
add
fistp
(bad)
xor
push
fdivr
fcomp
fcomp
jmp
mov
sbb
ins
fcmovnbe
xor
add
mov
mov
pushf
ins
scas
pop
cli
fs
loope
ficom
fcmove
pop
cwde
aas
mov
cmp
fmul
sti
imul
stc
int
std
push
push
pop
test
sbb
ficom
mov
sbb
sbb
loope
ins
out
jge
push
and
aam
std
mov
jb
ror
dec
fidivr
into
mov
(bad)
sahf
sub
xchg
adc
scas
nop
pushf
jl
pushf
push
cs
aam
jmp
fcmovnu
pop
dec
fld
iret
or
leave
cmp
mov
mov
sahf
pop
daa
ret
stos
call
ficomp
mov
mov
inc
std
fisubr
fisub
(bad)
jge
sub
fild
or
push
in
fstp
pop
(bad)
fcmovbe
jg
fisubr
scas
aam
outs
aam
mov
out
into
mov
rcl
sub
jmp
add
pushf
fistp
push
sti
fstp
fild
dec
fld
fcomi
sub
jmp
fist
out
sbb
dec
pushf
ficomp
cli
cwde
ficomp
fmul
or
sbb
fsubr
fdivr
dec
int3
sar
and
pushf
std
js
pop
jl
fisub
(bad)
mov
nop
sbb
arpl
cwde
dec
push
fcomp
mov
mov
js
sub
cmp
add
(bad)
sub
mov
inc
retf
xchg
cli
fisttp
arpl
mov
dec
mov
nop
mov
(bad)
popf
pushf
imul
or
sub
pop
sub
push
add
lods
cld
mov
push
sbb
pop
pushf
ins
int
out
pushf
fs
pushf
and
mov
ret
pushf
inc
fld
std
bound
not
sub
int
mov
aam
push
aam
mov
mov
aam
out
movs
out
push
retf
jmp
stc
jg
pusha
out
fstp
(bad)
lahf
rcr
pushf
cmp
mov
iret
dec
pop
adc
jg
pushf
fcom
pop
mov
pop
retf
aaa
fcmovu
inc
iret
fcmovbe
jg
or
cwde
cmp
or
pop
push
sti
outs
cli
adc
aas
(bad)
mov
xor
mov
add
mov
cwde
xchg
xor
pushf
sbb
cmp
cwde
ret
pushf
mov
pop
cmp
test
and
jp
ficomp
fcmovu
lock
fisub
fisubr
fdiv
fcom
fadd
fadd
rcr
icebp
fdivr
push
push
iret
aam
add
(bad)
and
jae
aam
pusha
movs
mov
mov
jno
movs
icebp
pushf
cwde
cwde
add
pushf
rcl
movs
shr
rcr
sub
fstp
in
nop
sbb
in
jg
mov
pop
pop
int
adc
gs
cmp
outs
aas
(bad)
pop
fist
das
sub
shl
ret
pushf
idiv
(bad)
jle
pop
adc
lea
sbb
je
add
mov
ficomp
cwde
iret
in
int3
mov
int3
clc
fisttp
pushf
jle
pop
adc
jb
cli
dec
fimul
gs
outs
jl
mov
sahf
sub
mov
(bad)
mov
sub
inc
cmp
mov
fld
jmp
clc
repz
jmp
out
fsubr
fsubr
retf
ss
push
cli
les
retf
cmp
int3
mov
jle
pushf
es
(bad)
icebp
or
jbe
(bad)
jmp
cmp
pushf
cld
leave
pop
shr
add
add
mov
pushf
(bad)
sbb
in
sub
retf
jb
out
fstp
fild
sbb
fdivr
fsubr
fsubr
aaa
fcomp
mov
int3
data16
sub
int3
adc
int3
leave
cmps
int3
push
xlat
int3
jnp
mov
mov
ja
scas
idiv
mov
sub
mov
sbb
mov
cmp
mov
cwde
mov
sti
(bad)
sbb
in
sbb
test
jle
int3
retf
mov
pop
mov
inc
push
test
pushf
jno
jmp
(bad)
adc
(bad)
fisttp
inc
imul
mov
rcr
out
retf
stos
ficom
fisub
jno
adc
jmp
pop
and
es
push
pop
stc
dec
call
neg
fld
fsubr
jp
in
cmc
or
loop
int3
std
lods
lods
(bad)
adc
mov
pop
addr16
mov
pushf
jns
pushf
cmp
mov
ficomp
pushf
jns
aam
ds
dec
aam
cs
fst
jo
aam
sbb
pusha
mov
xchg
xchg
push
or
icebp
cmp
les
out
pushf
(bad)
ds
enter
ror
push
pushf
push
(bad)
jmp
sbb
dec
int
fstp
imul
inc
aas
mov
scas
mov
cwde
imul
jg
jbe
clc
jns
add
pop
movs
fdivr
(bad)
fdivr
mov
scas
pop
cmp
aam
(bad)
es
aam
(bad)
aam
iret
les
add
retf
fistp
(bad)
rcr
ds
ret
cmp
pop
push
shr
nop
pushf
cli
aas
pushf
movs
(bad)
pushf
push
scas
pop
mov
cmp
fmul
fdivr
sub
jb
inc
push
ins
cdq
mov
std
adc
lods
xor
in
fild
inc
lods
sbb
pushf
cmp
pushf
loope
pushf
in
pushf
cld
fistp
jmp
addr16
fucomi
aas
(bad)
dec
fisttp
mov
int3
push
lods
xchg
sahf
pushf
mov
jmp
(bad)
dec
mov
sahf
fnstenv
mov
pushf
mov
mov
jle
es
jge
pushf
xlat
out
pop
in
shr
push
pop
xor
mov
jge
or
pop
mov
xor
fidiv
fisubr
aaa
push
leave
arpl
push
pop
mov
leave
fdivrp
pushf
stos
int3
int3
test
pushf
sbb
jmp
rcr
pop
(bad)
add
fcomp
enter
sbb
mov
call
mov
call
push
stos
pushf
gs
pushf
fstp
cmp
or
mov
jns
mov
pop
cs
leave
sub
cmp
dec
fsub
fsubr
or
pop
inc
fcomp
sbb
sub
jecxz
mov
push
dec
sbb
pushf
dec
mov
mov
mov
or
sub
test
push
push
mov
sbb
mov
pushf
jmp
adc
inc
mov
retf
popa
ins
nop
pushf
pop
pushf
pushf
xchg
jl
dec
rcr
das
mov
repnz
je
mov
sub
pop
stc
push
cmc
retf
mov
pushf
aaa
sub
jno
int3
add
int3
mov
int3
test
mov
popa
enter
pop
(bad)
lods
pushf
mov
les
mov
mov
pop
in
ins
es
dec
fistp
lods
pushf
jns
sbb
xchg
or
mov
mov
cwde
int3
cld
pushf
adc
cmp
shl
cs
enter
xchg
or
(bad)
pand
cmp
pushf
inc
(bad)
mov
jg
mov
pushf
icebp
iret
mov
pop
test
push
pop
aam
lahf
aam
call
out
aam
jo
mov
aam
pusha
aam
and
pop
retf
jne
int3
movs
jo
jl
lods
popf
sahf
pushf
test
pushf
mov
pushf
nop
out
jmp
rcr
xchg
neg
pushf
adc
pop
sub
pop
jge
pop
add
pop
xchg
dec
pop
jns
pop
or
pop
push
dec
jmp
in
pushf
loopne
push
lock
jnp
pushf
ficomp
fiadd
fimul
es
cmc
dec
pushf
lock
dec
mov
sub
pushf
inc
in
fistp
fist
call
pop
lahf
fwait
pushf
aam
movs
adc
or
cmp
rcr
in
fcmovb
jmp
inc
fcmovnu
inc
dec
fidiv
fcmovb
sbb
and
arpl
xchg
push
mov
pop
jmp
pop
test
jmp
(bad)
(bad)
or
aam
pop
les
lods
dec
int3
ror
mov
pop
and
pop
mov
pop
pop
pop
pop
push
fcomp
pop
inc
sbb
call
int
push
cdq
int3
sar
or
int3
mov
jnp
int3
pushf
call
out
(bad)
popa
test
call
mov
cdq
es
and
cwde
das
xor
pushf
arpl
mov
iret
xlat
mov
push
pushf
xchg
stos
pop
in
retf
stos
neg
pushf
pop
or
mov
push
and
cmp
pushf
ja
adc
mov
outs
enter
fisttp
fist
sub
mov
pop
iret
ins
cli
jbe
hlt
movs
aam
jmp
ror
retf
int3
jecxz
int3
lds
int3
xor
mov
mov
pop
mov
pop
jmp
sub
ins
jecxz
neg
pushf
mov
pushf
nop
sbb
pop
dec
mov
mov
pushf
mov
or
jecxz
clc
jp
dec
fsubr
mov
mov
pushf
(bad)
sbb
retf
inc
dec
fucomi
cmp
in
fadd
inc
cdq
cmp
minps
cli
push
fiadd
les
mov
int3
cmp
int3
inc
ds
int
lods
xor
pop
movs
push
sbb
mov
scas
fcmovu
and
lods
push
pushf
and
(bad)
sahf
mov
fsubr
fmul
imul
retf
popf
pushf
les
daa
dec
pushf
pop
push
pushf
mov
pushf
loopne
pop
adc
jmp
ret
sbb
aas
push
leave
leave
mov
mov
fcom
cmp
popf
pushf
adc
mov
push
dec
push
pushf
das
outs
dec
shr
add
test
nop
pushf
mov
jmp
rcr
mov
fcomi
mov
adc
inc
ficom
add
aam
fcmovbe
xchg
jmp
mov
mov
add
aaa
(bad)
popa
jecxz
out
cmp
pushf
or
mov
in
dec
xchg
mov
leave
cmp
ins
int3
xchg
sbb
push
int3
scas
dec
int3
xchg
jmp
and
sub
int3
fs
call
sbb
add
or
nop
pushf
jle
pushf
das
sub
pushf
out
pushf
test
pushf
push
int3
pop
fcmovu
push
lods
fcmovb
jl
into
fsubr
pop
out
lods
sbb
in
pop
mov
sbb
cmp
iret
xlat
cwde
pop
push
pushf
pop
mov
pop
push
retf
ficomp
pop
pop
mov
pop
retf
pop
pop
pop
jbe
mov
cmp
sahf
xchg
addr16
popf
pushf
cs
clc
ins
pop
mov
push
jl
add
lods
pop
paddb
push
pop
jno
dec
pop
fimul
push
cld
aam
cmp
es
aaa
pop
mov
js
push
sbb
fiadd
mov
hlt
imul
retf
std
sub
xor
daa
dec
pushf
ficom
arpl
pushf
loop
fnsetpm(287
cld
frstpm(287
in
fistp
mov
pushf
sbb
mov
mov
push
dec
(bad)
mov
(bad)
cs
arpl
adc
push
adc
dec
pushf
popa
fsubr
int
pop
(bad)
int3
clc
outs
lods
inc
adc
imul
das
pushf
fiadd
(bad)
out
ret
push
sbb
mov
xor
aas
xor
pop
mov
mov
stos
push
fdivrp
fistp
(bad)
fistp
fcmovnbe
mov
fwait
nop
hlt
adc
pop
jo
mov
int3
jmp
(bad)
lea
rcr
xor
outs
sbb
loope
xor
ficom
fidiv
fisub
fidivr
popa
fidivr
fimul
fisub
fidiv
bound
loop
cwde
xor
mov
xor
jns
mov
jae
loope
daa
xchg
pop
aas
push
in
pop
jno
pop
mov
cli
mov
(bad)
mov
cli
xor
mov
ficom
fisub
loopne
icebp
xchg
or
pushf
int
int3
mov
int3
mov
int3
mov
int3
hlt
ror
add
cwde
xor
mov
lods
sub
(bad)
adc
pushf
mov
mov
out
pushf
sbb
sub
sar
jle
pushf
xchg
mov
(bad)
pop
pop
arpl
cli
stc
fcmovu
xchg
(bad)
fcmovbe
(bad)
fisubr
out
ficomp
pusha
fisub
mov
mov
dec
leave
in
ficomp
int3
mov
cli
or
stos
xchg
(bad)
jge
fidivr
cmp
mov
ficom
cmc
add
sbb
lahf
fdiv
lahf
push
and
pop
movs
pop
push
pushf
mov
pop
jne
pop
lock
pop
xchg
fucomi
stos
fcmovu
dec
fidivr
mov
fwait
cmp
mov
cwde
push
xchg
cmp
fwait
push
fsubr
and
(bad)
dec
int3
or
cmp
push
nop
pushf
data16
pushf
imul
retf
pushf
ror
leave
ficomp
pushf
fistp
pushf
dec
fstp
pop
push
push
sub
pop
arpl
adc
pop
fcmovb
test
inc
or
cmp
cmp
das
mov
lock
(bad)
pop
ficomp
fcmovu
(bad)
cmp
fiadd
mov
ins
sub
xor
fisubr
ficom
mov
sbb
mov
fidivr
cwde
mov
das
retf
(bad)
enter
ins
cdq
sub
pop
mov
add
mov
pop
popf
pop
or
pushf
addr16
lea
cmp
(bad)
add
fidiv
ficomp
std
xchg
(bad)
out
retf
dec
mov
popf
out
out
cmps
int3
int3
xchg
icebp
pop
pushf
sahf
xlat
ja
pop
pushf
std
cwde
and
mov
fild
fcmovnu
leave
mov
inc
nop
pop
call
dec
aam
test
xchg
cli
enter
fwait
add
pushf
out
icebp
sti
(bad)
mov
out
int3
fcomi
cld
fist
fcmovne
sbb
mov
fsub
fsubr
sub
fcomp
fmul
inc
cld
mov
adc
or
pushf
inc
pop
int3
adc
int3
jmp
lods
gs
pushf
jb
pop
add
jnp
fst
mov
(bad)
mov
fidivr
push
(bad)
aas
add
les
mov
push
mov
cwde
call
pushf
ja
pushf
push
push
pop
cmps
jb
out
jno
js
xor
push
pop
push
les
retf
mov
mov
mov
jno
add
mov
inc
mov
jb
push
out
fucomip
add
in
repnz
push
inc
ret
xchg
les
mov
int3
dec
and
inc
xor
inc
sar
out
lds
nop
pushf
cmps
loopne
xchg
rcr
jmp
rcr
or
sub
mov
mov
popa
mov
mov
dec
out
sar
fsub
fadd
fcom
cli
fdiv
fcomp
call
fmulp
ret
jne
int3
push
push
int3
(bad)
in
mov
pop
out
xchg
gs
pushf
pop
jle
lock
push
push
xchg
jo
sbb
pushf
mov
pushf
(bad)
push
pushf
push
popf
pushf
retf
cmp
pushf
ret
mov
pushf
dec
adc
retf
pand
fisttp
fild
fild
fisttp
cmp
adc
jl
mov
sub
push
pushf
xchg
sub
mov
pop
push
pop
scas
mov
cli
jb
hlt
lea
ins
pop
push
cli
neg
fimul
fcmovu
mov
ins
imul
(bad)
clc
(bad)
clc
pusha
fsub
fmul
push
jecxz
aam
sub
jge
aam
sub
ins
or
cli
imul
pop
push
push
jp
pushf
cmp
pushf
cli
sub
stos
add
aad
aam
jmp
dec
push
dec
sti
retf
retf
in
cli
lods
cdq
popf
pushf
movs
ficomp
add
sub
push
mov
mov
or
jl
lods
leave
std
jl
mov
int3
sbb
int3
pop
ins
int3
scas
jge
std
sbb
mov
mov
mov
cwde
scas
dec
mov
mov
stos
fsub
jge
pushf
mov
xor
ficom
ficom
push
jo
loope
aam
jle
sub
add
or
sub
enter
pop
mov
aam
(bad)
in
out
aam
call
jnp
les
bound
pushf
xchg
int
sub
pushf
retf
dec
adc
pushf
int3
sub
fcmovnu
(bad)
rcr
(bad)
mov
mov
pusha
ss
push
ret
jg
pushf
clc
dec
xlat
xchg
sub
jg
or
pushf
sub
dec
pushf
cmp
mov
fild
fist
cmp
fidiv
jle
aam
mov
pushf
inc
aam
mov
cmc
into
aam
sahf
les
retf
cmps
scas
int3
gs
clc
ds
jnp
int3
inc
in
lods
mov
pop
(bad)
pushf
or
aam
pop
aam
(bad)
aam
into
aam
mov
and
sbb
pushf
and
push
pushf
cld
int
pop
adc
jl
jns
sti
xchg
fcmovnu
pop
mov
enter
xchg
int3
imul
xor
or
adc
sti
adc
or
fmul
ins
fdivr
push
push
les
test
inc
retf
mov
pop
fstp
fisttp
out
push
mov
pushf
jge
aam
cli
aam
retf
mov
add
aam
les
retf
out
(bad)
fistp
fld
jmp
int3
fimul
push
pushf
shr
es
jge
pop
mov
pop
dec
retf
nop
pushf
push
push
js
pushf
cmp
add
pushf
mov
stos
or
adc
cdq
pushf
imul
jmp
int3
sbb
cmp
pushf
mov
mov
cmp
dec
jnp
mov
and
pushf
dec
call
sub
pop
pop
imul
ds
cmp
pushf
mov
int3
ret
in
int3
jo
int3
jb
int3
pop
mov
lods
cmp
ds
data16
retf
fisub
cwde
rcr
enter
pushf
adc
sbb
mov
sti
vpand
fld
fistp
(bad)
mov
add
(bad)
sti
jg
or
pushf
pop
pop
aam
retf
pop
mov
push
push
pop
pushf
pop
adc
ficomp
pushf
xchg
dec
pushf
popa
mov
pushf
ja
pushf
(bad)
ficomp
fistp
sub
rcr
jl
pushf
test
mov
fisubr
hlt
sub
ins
lods
aam
ins
aam
sub
mov
aam
mov
and
pushf
add
pushf
push
fcom
mov
ret
ds
fidivr
fcmovb
dec
fisubr
aad
aam
sbb
pushf
mov
jbe
sub
cmp
pushf
dec
mov
fidivr
dec
int3
push
sbb
out
sub
mov
pop
push
jmp
sub
loope
aam
or
pop
fwait
loope
call
and
aam
mov
sar
mov
fiadd
xor
addr16
add
out
pushf
call
pop
fmul
int3
dec
sbb
sub
fist
pop
pop
loop
popf
pushf
xor
inc
cld
dec
ja
loop
mov
sub
cmp
ret
fidiv
fstp
shr
fisubr
mov
fidiv
mov
mov
ins
mov
lahf
or
pop
popf
xchg
xchg
(bad)
mov
ins
cdq
fistp
fcmovnb
mov
fmul
adc
cli
mov
int3
es
jmp
stos
int3
sub
push
dec
int3
dec
sbb
ret
dec
stos
int3
rcr
int3
aad
ins
xchg
jp
imul
or
stos
pop
(bad)
pushf
push
push
adc
call
fimul
fimul
fcmovb
mov
push
dec
(bad)
sbb
mov
fidivr
enter
mov
push
adc
cmp
sub
fcomp
fmul
test
jmp
fmul
xchg
mov
ds
sub
movs
cdq
hlt
not
inc
jmp
loop
aam
mov
int3
dec
aam
leave
aam
mov
and
movs
fs
sbb
test
mov
inc
clc
mov
mov
pushf
mov
jle
pushf
fidiv
stos
fcom
sub
pushf
test
jnp
or
std
dec
pushf
pop
cli
pushf
(bad)
pop
push
push
mov
fisub
adc
mov
pop
aas
mov
xchg
pushf
lea
sub
mov
outs
sbb
nop
sub
mov
ficom
mov
paddq
aam
pop
aam
imul
mov
(bad)
dec
sub
mov
pushf
test
push
push
jmp
push
dec
loopne
pop
out
stos
pop
cmp
fistp
fld
push
loope
xchg
arpl
xchg
mov
mov
icebp
mov
adc
pop
xchg
sbb
nop
pushf
jecxz
pushf
les
and
xor
fisttp
lods
mov
lea
adc
dec
pushf
cld
in
pushf
xchg
nop
xor
pop
pushf
push
jmp
repnz
pushf
in
ds
std
mov
popf
mov
or
jmp
pop
ds
sub
pop
ret
or
and
jmp
ficomp
int3
dec
nop
mov
out
bound
ins
(bad)
out
pop
aam
paddq
aam
aas
aam
(bad)
xor
(bad)
std
aam
mov
dec
mov
rcr
add
aam
mov
jnp
aam
xor
cmps
rcl
push
aam
xchg
aam
inc
aam
push
aam
push
aam
mov
(bad)
lahf
aam
inc
sub
outs
pushf
mov
pushf
jo
sti
xchg
fisttp
fcmovnu
mov
aas
and
push
fisttp
fstp
rcr
loopne
xor
fcmovu
mov
fsubr
push
fcomp
fmul
fcomp
scas
fmul
cmp
aam
sahf
mov
inc
(bad)
ins
mov
pushf
lahf
(bad)
dec
fist
mov
push
idiv
aam
pop
les
cmp
fidivr
test
jmp
pop
hlt
mov
sbb
pushf
jb
or
inc
sub
movs
cwde
mov
imul
jge
jecxz
pushf
and
add
ror
aaa
sbb
pop
mov
ins
int
pushf
push
out
push
or
sbb
bound
push
mov
push
pop
inc
sub
xchg
pop
sahf
mov
pushf
add
xchg
rcr
pop
mov
mov
fndisi(8087
cli
fucomi
retf
fidivr
js
neg
fidivr
dec
fisub
xchg
nop
inc
or
mov
stos
mov
sub
mov
push
pop
(bad)
cmp
pop
scas
sbb
dec
push
sub
arpl
pusha
fidivr
inc
mov
cmp
mov
dec
sub
adc
call
test
repz
inc
test
leave
rol
int3
adc
mov
mov
imul
and
mov
push
xor
(bad)
aam
stos
pushf
sbb
cmp
leave
ss
repz
push
stos
pop
ret
sub
push
mov
cwde
or
xchg
(bad)
cmp
push
test
xchg
cli
les
retf
in
int3
push
cmp
sub
pop
in
int3
aam
int3
shr
mov
pop
or
sbb
pop
pop
adc
pushf
cmp
sub
sub
popf
lods
add
dec
push
mov
pop
out
int3
(bad)
dec
jbe
int3
loop
mov
mov
pop
imul
inc
mov
sti
in
pushf
lahf
cs
mov
pushf
cwde
pop
imul
ins
push
dec
jg
adc
rcr
and
shl
push
mov
or
mov
aam
xor
shr
jo
mov
pushf
pop
and
pushf
xchg
jo
and
pushf
xor
pushf
or
push
pushf
aam
pushf
xchg
scas
pushf
into
out
pushf
sbb
pushf
in
nop
pushf
je
pop
add
pop
arpl
cmp
push
push
mov
xor
pushf
sub
push
mov
loopne
push
addr16
xchg
and
nop
pushf
cmc
scas
jmp
fcmovnu
fstp
add
sub
push
lahf
pushf
pop
pop
pushf
or
(bad)
jmp
fcmovnu
imul
mov
xchg
fcomp
icebp
cwde
jno
pushf
cmps
mov
(bad)
sbb
aas
ficomp
fcmovb
scas
fisubr
div
pushf
imul
sub
add
pushf
inc
out
pushf
fmul
pushf
inc
scas
pushf
outs
jle
adc
fcmovnu
push
(bad)
sbb
mov
push
cli
push
fcmovu
ins
aam
dec
movs
mov
pushf
lds
ficomp
push
test
pop
nop
pushf
mov
fcmovnb
cmp
push
pop
sub
addr16
aam
mov
xor
aam
stos
aam
sub
pop
retf
retf
adc
pushf
loopne
xchg
lock
xchg
les
mov
fwait
mov
or
or
scas
jl
retf
out
rcr
sub
out
fcom
pushf
ror
pop
and
jmp
push
dec
stc
mov
pop
add
pushf
jecxz
aam
jmp
outs
mov
pushf
sbb
shl
pushf
iret
mov
loope
fimul
sub
mov
cmc
mov
pushf
mov
adc
xor
pushf
cmp
fisubr
add
inc
jns
dec
jmp
and
cmc
sti
fidivr
ins
fucompp
mov
mov
popa
sbb
out
ins
fcmove
retf
fidiv
pop
ficom
fiadd
mov
jmp
fcmovbe
jmp
lods
mov
sbb
add
pop
dec
nop
pushf
add
inc
aam
ins
popf
pushf
call
jle
stos
mov
jmp
push
pushf
jl
pushf
lock
sbb
push
or
pop
adc
mov
add
nop
pushf
aam
pushf
(bad)
ds
frstor
aad
xlat
scas
pushf
pmaxsw
movs
fisubr
jnp
push
pop
adc
jp
jmp
inc
or
aad
sub
call
dec
add
les
mov
js
cmp
ficom
and
sbb
nop
nop
pushf
rcr
dec
mov
js
dec
jo
ficom
rcl
es
and
inc
aam
xor
pop
add
push
ffreep
or
loop
ins
push
push
ins
add
int
pop
mov
mov
mov
pop
and
mov
add
mov
push
retf
test
out
fcmovu
sar
fsub
enter
lock
push
pushf
xor
pop
xor
pop
repz
cmp
xchg
(bad)
fisttp
fcmovnbe
pusha
mov
stos
inc
loopne
pushf
repnz
fdiv
mov
mov
push
popa
aam
pusha
mov
ficom
adc
fbstp
jmp
mov
test
fcomp
lods
fsubr
mov
add
je
aam
inc
mov
int3
(bad)
fistp
sbb
mov
or
nop
int3
movs
and
je
int3
outs
scas
int3
inc
lahf
int3
repnz
add
pop
pop
adc
out
adc
aam
xor
js
aam
pop
mov
aad
pop
ficomp
pushf
shr
(bad)
test
jg
popa
dec
out
jo
adc
iret
xor
pushf
cmp
pushf
fs
pushf
inc
lock
xchg
shl
call
mov
(bad)
mov
cs
xchg
ins
pushf
out
pop
and
int3
jno
int3
sub
cs
int3
test
rcr
jg
int3
imul
aas
mov
adc
clc
pushf
mov
daa
fdivr
fdivr
fsubr
mov
cmp
fmul
fcomp
int3
sbb
cmp
dec
pop
or
(bad)
(bad)
iret
push
retf
das
push
pushf
xchg
jecxz
pop
fisttp
retf
xchg
fisttp
fld
sbb
pop
addr16
sbb
lods
nop
pushf
(bad)
mov
mov
pushf
dec
lea
mov
pop
pushf
cli
sub
mov
aam
fcmovnbe
icebp
sub
in
aam
lods
les
mov
push
pop
mov
fcmovb
dec
fimul
fisub
jle
aam
pushf
aam
cmp
pop
sbb
mov
aam
fcmovnb
in
cmp
mov
mov
or
push
sbb
cli
jl
pop
fild
dec
pushf
sub
in
pushf
ficomp
sbb
pop
or
xor
sar
mov
bound
dec
loop
jmp
fisub
ficomp
push
jo
sub
push
adc
mov
pop
pop
xor
retf
cmps
fstp
fist
fcmovnb
mov
call
pop
sub
aad
(bad)
or
(bad)
call
mov
sub
ret
xchg
leave
push
pushf
dec
xchg
retw
mov
fld
fisttp
retf
cli
(bad)
sbb
jmp
dec
(bad)
shr
pop
push
neg
call
sub
add
pushf
ret
fstp
stos
popf
fcom
mov
call
push
nop
pushf
and
(bad)
jmp
icebp
retf
jmp
(bad)
sub
mov
xchg
push
adc
sub
stc
cmp
mov
inc
jo
sub
jmp
inc
sbb
pop
repnz
jmp
nop
pushf
js
pushf
adc
fwait
nop
adc
mov
sbb
aam
sti
aam
dec
aam
push
out
sbb
cmp
pushf
lahf
or
fwait
mov
fdivr
fcomp
dec
lods
nop
nop
pushf
stc
cli
pushf
add
test
pushf
sbb
mov
pushf
add
pushf
mov
inc
fisttp
addr16
pushf
lahf
pushf
mov
fstp
mov
sbb
mov
pop
mov
cld
dec
stc
imul
pushf
neg
(bad)
mov
pushf
iret
std
fist
fneni(8087
ins
fild
xchg
fcomp
fcomp
push
or
mov
jb
inc
mov
push
in
aad
mov
pop
push
mov
xchg
int3
mov
stos
push
adc
pushf
xchg
mov
les
stos
out
popf
pushf
cmp
mov
fdiv
fmul
fmul
fsubr
or
mov
pop
les
pop
(bad)
mov
pop
fisttp
xor
mov
push
iret
les
retf
sti
outs
int3
loope
int3
mov
or
imul
les
jmp
rcr
jl
(bad)
sbb
mov
lods
fidiv
xchg
nop
arpl
icebp
popf
nop
pushf
add
or
pop
lods
pop
les
pop
(bad)
(bad)
mov
add
dec
mov
sti
sub
fstp
pushf
aad
aam
lods
aam
jl
push
cmp
pop
cld
dec
pop
pop
add
lea
push
push
mov
and
int
xchg
mov
pop
pop
mov
fcmovnu
mov
and
ficomp
fisub
cwde
(bad)
popa
dec
int3
jns
int3
and
adc
pop
int3
aad
int3
sub
push
pushf
pop
jge
and
push
sbb
nop
pushf
mov
pushf
sub
jmp
fstp
je
fninit
retf
mov
pop
call
out
pushf
push
pushf
mov
pushf
fistp
or
cmps
int
in
push
pop
call
pop
dec
int3
pop
or
ins
cli
movs
fcmovu
adc
aam
stos
aam
cmp
or
aam
sub
mov
les
inc
sbb
xchg
fwait
and
ins
fist
dec
pop
(bad)
jge
cmp
sub
jle
mov
js
in
pushf
fiadd
fisub
fisubr
aam
or
cli
push
fucompp
aam
sub
pop
call
aam
mov
mov
sub
adc
fstp
xchg
fist
xchg
pop
pushf
adc
les
lods
sbb
pushf
ss
push
mov
(bad)
mov
jmp
dec
retf
int3
and
jmp
push
pushf
add
pop
xor
mov
mov
pushf
sbb
cdq
cmp
cwde
stc
mov
retf
fs
pop
std
int
(bad)
pushf
lods
cmp
add
aaa
fsubr
lods
xchg
fsubr
xchg
into
int3
sar
push
push
jmp
jl
fsubr
fcomp
dec
pop
dec
push
das
sbb
lock
pop
pushf
or
jmp
retf
(bad)
fistp
aad
pop
pushf
shr
jl
retf
pushf
pushf
push
out
rcr
mov
mov
lods
pushf
jno
pushf
fstp
xchg
or
mov
mov
pop
jmp
pop
dec
imul
pop
sub
add
and
mov
fcmovu
cmp
cwde
aam
dec
(bad)
out
and
pop
stos
int3
popa
mov
fstp
ins
and
mov
cmp
push
jnp
xchg
daa
js
aaa
jmp
aam
push
fxch
(bad)
jp
mov
(bad)
xchg
cli
pushf
scas
pop
arpl
pop
pop
dec
pop
pop
pop
retf
(bad)
test
ficomp
and
pop
ss
sbb
stc
push
fnsave
push
(bad)
sti
test
leave
lods
retf
inc
fucomi
stc
fsub
inc
and
ins
imul
ficomp
mov
cmc
cmp
mov
sbb
enter
push
aam
jns
sbb
(bad)
aam
dec
aam
pop
les
pushf
loopne
outs
cmp
fcomi
sub
neg
inc
je
xchg
pushf
cwde
fimul
cmps
jle
(bad)
mov
cmp
fsubr
fmul
fcomp
fcomp
iret
push
mov
push
pushf
ret
ficomp
call
pop
push
sbb
pushf
out
mov
ficom
jns
outs
pop
fisubr
sub
push
dec
ficomp
add
add
push
pushf
icebp
loop
fcmovu
test
test
jp
mov
pop
adc
test
push
sbb
aam
sbb
les
inc
pop
pushf
fcom
mov
mov
pushf
mov
inc
sub
aam
(bad)
pop
pop
aam
retf
rol
nop
pushf
or
pushf
jb
pushf
call
lea
pushf
out
sub
test
pop
call
mov
pop
pushf
mov
stos
pop
ret
sbb
pushf
ins
sti
fisttp
daa
iret
dec
je
push
pushf
stos
in
pop
fistp
mov
ss
pop
adc
pushf
sbb
and
cmp
pushf
inc
mov
xchg
ds
test
dec
shl
or
pushf
mov
pushf
mov
int3
mov
pushf
jl
sub
fimul
adc
aam
std
aam
push
aam
dec
aam
jle
dec
outs
les
pushf
inc
out
rcr
jne
fild
sahf
idiv
push
push
pushf
ficomp
in
fisubr
fidivr
(bad)
fimul
hlt
rcl
and
aam
ffree
jmp
adc
push
scas
pop
out
retf
xchg
push
dec
int3
xchg
sahf
int3
mov
mov
mov
ds
mov
aas
cwde
inc
shr
pushf
cmp
mov
add
push
fisttp
fcmovnbe
(bad)
xor
(bad)
(bad)
out
sbb
jno
psrad
aam
dec
(bad)
icebp
scas
mov
ja
or
cdq
mov
cmp
cmp
add
(bad)
fisttp
out
sahf
jbe
(bad)
pushf
in
out
ins
cli
pop
jmp
add
out
je
mov
fcomp
fcomp
mov
std
int3
or
int3
imul
inc
int
add
pushf
pop
push
mov
ficomp
rol
outs
fild
(bad)
(bad)
fmul
int
jl
pop
dec
pushf
ficom
ficom
imul
cmp
add
adc
aam
dec
mov
push
loop
leave
pushf
push
int3
test
movs
add
adc
xchg
push
pushf
pop
pusha
jmp
rcr
mov
mov
(bad)
(bad)
ficom
fidivr
push
cwde
push
pop
fcomp
fdivr
fcomp
dec
movs
fcomp
sbb
fdivr
sub
fdivr
mov
or
popf
pushf
sti
lods
pushf
out
cs
popf
push
jmp
sar
fisub
ins
add
pop
xchg
pushf
fsubr
pop
cs
sub
adc
retf
ficom
fisubr
fiadd
loopne
push
push
rol
rcr
dec
pushf
pop
int3
aam
cld
aam
mov
leave
cmp
push
mov
add
pop
sbb
(bad)
fstp
fld
iret
pop
loope
push
pushf
xor
pop
(bad)
stos
jmp
cmp
pop
aam
call
mov
sbb
dec
cmp
lahf
sub
adc
repnz
mov
push
pop
out
pop
loop
pop
mov
cli
movs
fcmovu
xchg
fcmovu
add
fimul
fisub
(bad)
fisttp
pop
jnp
pop
fwait
int3
cmp
or
std
popf
pushf
jp
pushf
outs
fistp
jle
xlat
mov
fs
stos
aam
mov
sar
les
jb
pop
leave
dec
pop
sub
pop
imul
stos
pop
mov
cs
xchg
jb
pushf
outs
jmp
xchg
xlat
mov
cmp
jge
mov
cmps
or
(bad)
retf
push
pushf
ficomp
mov
ret
fild
push
pushf
xlat
cmp
pop
jmp
(bad)
sub
fimul
fidiv
cwde
xor
fdivr
adc
jnp
push
xor
pushf
fisubr
jl
xchg
push
and
xor
mov
mov
pushf
fstp
mov
aaa
xchg
pop
jmp
sbb
fistp
fcomi
mov
hlt
retf
fcmovnu
or
popf
fdivr
mov
pushf
and
or
retf
adc
lods
pop
pushf
test
outs
fmul
std
fsubr
mov
fsubr
pushf
xchg
push
add
pop
cmp
dec
mov
cmp
outs
push
sahf
xlat
or
pushf
mov
fcmovnu
(bad)
int3
pop
cwde
fmul
enter
pop
sbb
pushf
jmp
aam
mov
pop
int
add
aam
std
aam
ffree
dec
retf
imul
pushf
int3
push
int3
jmp
lods
inc
nop
imul
jmp
pop
iret
pop
push
sahf
cmovp
in
stos
push
cmp
fistp
daa
xchg
push
addr16
pushf
dec
jg
pusha
scas
dec
sbb
pushf
sub
and
add
js
ror
fldcw
mov
fcomp
fdivr
enter
aam
iret
push
mov
mov
dec
(bad)
fisubr
dec
int3
dec
lahf
lods
jae
jmp
int
iret
adc
movs
mov
lock
pushf
scas
pushf
out
pushf
push
mov
daa
dec
pushf
gs
pushf
pop
das
pushf
stos
pop
jnp
push
pop
adc
les
cwde
popf
pushf
sub
imul
mov
js
aam
pop
stc
mov
mov
mov
into
ins
loope
pop
push
out
pop
xor
pop
leave
das
retf
arpl
sbb
adc
mov
fcomp
fcomp
psubusb
ret
fdivr
test
push
bswap
pop
dec
int3
cwde
das
int3
xchg
out
int3
jle
lods
mov
pushf
idiv
pushf
jmp
pop
rcl
mov
pop
or
pop
and
pop
push
mov
xchg
cmc
clc
push
cli
fmul
xchg
in
aam
std
sub
pop
jge
adc
repz
int3
je
int3
(bad)
int
scas
push
push
retf
mov
fmul
inc
xchg
dec
hlt
cmp
mov
sbb
push
in
retf
iret
sub
fist
pop
pop
mov
jmp
pusha
pop
ficomp
fwait
aam
dec
mov
fdiv
mov
fistp
fild
cmc
fadd
or
push
pop
cli
pushf
pop
enter
fstp
lods
pop
(bad)
int
cld
ret
push
mov
aam
mov
fistp
fstp
(bad)
mov
popf
inc
or
xor
and
sbb
jl
pushf
jg
sti
out
fist
mov
outs
dec
movs
mov
mov
jnp
push
dec
pop
sub
pop
lods
pop
retf
out
call
sub
cli
cld
mov
dec
pushf
sbb
pushf
pop
imul
inc
retf
mov
aad
pushf
lock
pushf
push
fwait
pushf
stc
sti
pushf
mov
pushf
pop
stos
pushf
xchg
jmp
mov
add
or
aam
mov
outs
mov
pushf
jmp
adc
pushf
cli
fdivr
aas
fsubr
fdivr
ret
sbb
fist
jmp
aam
pop
or
stos
cli
jmp
fistp
fistp
pop
clc
mov
dec
mov
mov
pushf
in
pop
(bad)
mov
fcmove
imul
sbb
aas
fimul
jecxz
pushf
out
call
(bad)
cmps
sbb
cmp
(bad)
(bad)
fcmovnbe
dec
(bad)
push
push
jecxz
das
pushf
pop
cwde
nop
ins
pushf
paddsb
pushf
aaa
mov
dec
adc
fiadd
fcomp
fsubr
cmp
call
push
push
pop
mov
aam
sub
not
aad
fs
mov
fwait
std
(bad)
enter
pusha
push
mov
mov
cwde
adc
into
pushf
and
int3
push
outs
int3
mov
int3
xchg
in
int3
arpl
int3
jb
lods
xchg
test
pop
pushf
fidiv
fidiv
std
fisub
fiadd
mov
sahf
adc
pushf
add
jmp
fstp
loop
xchg
xlat
push
fistp
sbb
mov
(bad)
test
nop
pop
iret
ret
pop
(bad)
fisttp
cmp
dec
fimul
jge
cmp
push
mov
cwde
loop
dec
int3
xchg
(bad)
add
call
pushf
fimul
jle
aam
pushf
movs
aas
ins
mov
cmp
(bad)
push
pop
cmps
mov
in
mov
pushf
xchg
pushf
ret
or
mov
xchg
sbb
jle
mov
push
mov
mov
pushf
pushf
mov
retf
pushf
scas
mov
lea
lods
aam
int3
les
adc
pushf
pushf
pusha
push
adc
dec
aam
ins
aam
int3
(bad)
imul
mov
iret
xlat
ror
push
pushf
pushf
jp
add
loop
fcmovnu
cmp
fisubr
dec
push
dec
fcmovu
ret
sbb
imul
mov
pop
and
jmp
fmul
jl
xchg
xchg
loope
xchg
add
cmp
cmp
not
inc
mov
cmp
(bad)
imul
int3
pop
aam
sbb
in
aam
imul
mov
lahf
adc
retf
push
js
aam
dec
les
retf
fidivr
int3
fnstsw
sti
sbb
mov
cmps
or
pushf
lds
retf
fimul
sti
pushf
ficomp
mov
cmp
sub
ficomp
cli
cwde
sbb
or
in
mov
adc
dec
pushf
mov
pop
sub
jne
pushf
std
ins
aam
jl
cmps
cmp
sub
mov
pushf
in
addr16
ror
out
pushf
mov
fisttp
push
sahf
jae
cwde
xchg
sub
jnp
ins
sti
pop
mov
jmp
xor
in
and
aaa
adc
jne
lods
mov
call
mov
jmp
mov
fiadd
fimul
mov
stos
clc
pushf
xchg
fdiv
fisub
dec
pop
int
nop
push
push
pop
lea
mov
sbb
dec
cwde
sti
das
push
ret
test
sbb
xchg
push
fdivr
jmp
mov
fsubr
fmul
fcomp
mov
jg
repnz
adc
ficomp
dec
int3
xchg
or
pop
sub
ss
pushf
lock
xchg
fwait
pushf
add
pop
fbld
pop
push
mov
push
ret
sti
pop
xchg
sbb
push
cmp
mov
cli
jbe
fidiv
fidiv
(bad)
fcmovnu
clc
stos
cwde
mov
inc
inc
cmp
jg
pop
lods
cmp
pop
adc
jnp
fwait
jo
xchg
fidiv
fidiv
fisubr
fmul
gs
mov
pop
xor
pop
retf
lock
rcr
fdivr
int3
int
int3
xor
int3
into
fcmovne
mov
int3
mov
int3
aad
int3
cmp
mov
pushf
mov
in
push
lea
rcr
fistp
stos
aam
ins
aam
or
cwde
add
push
pop
pushf
es
inc
xchg
stos
add
pop
fwait
sbb
push
cmp
repz
mov
les
mov
pop
into
push
jnp
jp
test
or
fild
cmp
pushf
inc
leave
pushf
mov
mov
mov
aas
mov
mov
ins
and
retf
(bad)
mov
cdq
in
movs
xor
pushf
sub
xor
cmp
pop
pop
pushf
mov
pushf
int
pop
sbb
jne
pop
or
pop
mov
fsubr
fdivr
or
bsf
mov
(bad)
mov
jg
fs
mov
fidivr
bound
pushf
js
pushf
inc
lahf
pushf
cmp
mov
mov
pushf
mov
pop
(bad)
lock
ficomp
fimul
(bad)
dec
cwde
ins
pop
fsubr
enter
ds
add
pushf
mov
aam
faddp
add
mov
das
ins
bound
(bad)
out
fild
pop
fist
xlat
sub
mov
fcomi
lahf
fisttp
jg
cdq
outs
mov
enter
int3
(bad)
pop
lods
(bad)
adc
pop
call
ret
pushf
jecxz
sbb
stos
fmul
cmp
pop
mov
das
dec
int
push
dec
movs
out
lods
xchg
rcr
adc
mov
cwde
adc
nop
cwde
in
pushf
or
mov
push
pushf
rcr
pop
dec
(bad)
pop
xchg
ficomp
retf
dec
mov
enter
xor
repnz
(bad)
ficom
scas
hlt
js
test
pop
out
sar
pop
enter
xor
shr
pushf
cwde
pop
mov
retf
ds
lea
mov
pop
imul
fidiv
lods
retf
bound
fiadd
fisubr
fisubr
sbb
cmp
pop
jecxz
rcr
mov
pushf
add
mov
in
pushf
or
push
dec
jnp
fwait
dec
mov
pushf
lods
mov
dec
sbb
popf
pushf
jns
aam
or
cmp
mov
jb
cdq
mov
aam
pop
movs
cmp
pushf
xor
arpl
fld
(bad)
pushf
mov
hlt
or
ds
loop
aam
mov
mov
mov
mov
add
push
test
pushf
xor
pop
mov
in
aad
dec
pushf
fimul
jmp
jb
fisub
fimul
xor
stos
cwde
mov
in
fcomp
adc
jnp
pop
pop
ret
fistp
mov
jnp
adc
mov
jmp
retf
mov
int3
in
int3
inc
sub
jp
int3
and
ret
call
or
fsubr
xor
cli
inc
int
pop
nop
pushf
cmp
pushf
(bad)
dec
pushf
sbb
mov
push
pushf
and
retf
(bad)
or
sub
or
pop
das
fcomp
fmul
fcomp
pushf
fsubr
pop
enter
out
stos
pushf
xor
pop
sbb
mov
push
mov
jns
mov
lahf
repz
cmps
mov
pushf
lahf
nop
and
js
push
pushf
inc
mov
outs
mov
pop
mov
pop
pop
dec
pop
mov
or
aam
mov
je
lods
pushf
xchg
push
jae
adc
cld
pushf
push
enter
xchg
xor
pushf
in
(bad)
cmp
(bad)
sar
inc
jo
jmp
pushf
popf
pushf
outs
call
test
push
mov
push
imul
push
pop
push
ds
sub
push
sbb
sahf
nop
pushf
stos
scas
pushf
stc
mov
fcmovnu
(bad)
mov
xor
pop
add
aam
mov
int3
sbb
mov
clc
cs
pop
push
mov
jmp
mov
fmul
fdivr
enter
(bad)
jmp
ror
aas
jmp
or
push
aam
les
jo
inc
sahf
pushf
(bad)
outs
ficom
fcmove
pop
ficom
fwait
mov
xchg
scas
fisubr
push
push
aam
into
aam
paddq
dec
aam
outs
aam
pop
shr
das
pushf
lahf
(bad)
pushf
fsubr
pushf
cld
aas
pushf
or
add
imul
pop
mov
cli
pop
fcmovu
cdq
pminub
das
ficom
dec
fcmove
pop
cwde
and
enter
push
(bad)
jo
hlt
stos
aam
lahf
aam
add
in
aam
call
push
out
les
mov
lahf
dec
stc
cmps
xchg
fidiv
adc
jle
bound
aam
or
pop
aad
pop
xchg
ds
fimul
xor
pop
cli
out
jmp
mov
fiadd
cwde
scas
inc
fmul
or
inc
sbb
(bad)
mov
in
pushf
cmc
popf
pop
in
loop
fcmovu
call
pushf
ror
fild
out
push
ds
fimul
mov
fisubr
mov
fisub
mov
mov
pushf
pop
adc
aam
outs
aam
jg
sbb
add
dec
pushf
ds
pushf
cmp
pushf
fcomp
imul
setl
ds
(bad)
aas
xor
pop
repnz
leave
pushf
pop
mov
cdq
out
jmp
fstp
fimul
sub
fmul
out
aas
xchg
fcomp
int
jae
int3
jbe
int3
or
cs
xchg
sbb
subps
fcmovu
mov
push
scas
jae
loop
int
pop
aas
int3
(bad)
pop
int3
ss
mov
pushf
mov
aas
pop
jns
pop
inc
outs
cli
js
hlt
(bad)
lfs
fwait
mov
fistp
fistp
fstp
jle
test
in
outs
fidivr
mov
pop
cdq
shl
mov
loop
rcr
int
ficom
ficom
scas
ficom
fimul
cwde
ret
lock
adc
(bad)
pop
pop
sbb
ficomp
into
int3
les
jl
int3
movs
pop
pushf
push
cdq
cmp
pushf
pop
pop
xor
scas
adc
std
or
call
sbb
nop
mov
ds
ror
cdq
jmp
cdq
enter
test
test
lods
int3
mov
lea
popa
sub
das
mov
int3
cmc
in
lods
outs
xchg
pushf
(bad)
int3
sti
and
mov
mov
aam
lods
aam
mov
jne
(bad)
idiv
jp
movs
mov
popa
mov
mov
fstp
sub
dec
jmp
pop
xchg
int3
mov
mov
or
movs
mov
dec
sbb
inc
fcmovbe
ror
test
adc
pushf
out
mov
push
pop
nop
stos
pop
leave
fwait
pop
mov
pop
jns
mov
pop
mov
pushf
inc
mov
dec
push
mov
int3
xchg
or
cld
fxch
in
jns
aam
mov
(bad)
test
push
call
leave
pop
sub
pop
jmp
pushf
ficomp
dec
int3
mov
movs
mov
cmp
mov
pop
mov
push
pop
mov
jmp
add
hlt
mov
jno
xchg
rcr
pop
mov
scas
test
mov
je
gs
or
les
mov
or
mov
enter
dec
mov
test
inc
cwde
retf
push
call
repnz
fistp
retf
pushf
add
fiadd
mov
les
dec
mov
mov
pushf
sub
or
push
fucomi
dec
fsubr
int3
outs
sbb
fnstsw
pushf
shl
lods
mov
pushf
fcmove
pop
fidivr
cwde
ret
xchg
fsubr
fdivr
int
fcom
add
push
push
xchg
jns
and
inc
cdq
(bad)
fistp
nop
(bad)
jmp
fmul
pushf
push
sub
aam
sub
dec
cmp
mov
cwde
ss
push
or
pop
les
ins
popa
pop
retf
and
fdivr
push
fmul
enter
jg
jmp
fisttp
fist
sbb
xor
iret
pushf
inc
inc
adc
sub
popf
adc
jp
in
jne
push
push
add
cmc
call
retf
(bad)
fcmovnu
cmp
(bad)
fdiv
int
shr
int3
add
mov
mov
jmp
rcr
adc
stos
les
(bad)
popf
pop
(bad)
push
inc
sub
or
lock
cmps
ret
inc
mov
fisub
push
in
pop
(bad)
dec
fidiv
fiadd
fimul
fimul
cdq
add
mov
out
fbld
leave
xlat
or
stc
mov
push
pop
jle
pop
mov
lods
imul
sub
test
adc
or
ins
(bad)
push
pop
mov
xchg
adc
stc
pushf
inc
pop
pop
sbb
pop
sub
pop
imul
sahf
mov
fsubr
test
lods
neg
retf
cwd
pushf
ret
test
adc
pushf
fcmove
cdq
ficomp
jns
(bad)
pop
ficomp
adc
pushf
mov
add
loope
add
retf
fst
test
pop
fistp
aaa
imul
jns
shl
ret
pop
popf
dec
push
pushf
in
pop
mov
pop
adc
cmp
cmp
pushf
push
lods
ficomp
test
(bad)
adc
mov
pop
leave
push
or
mov
pushf
pop
cwde
sar
fistp
pop
retf
mov
sbb
scas
jp
or
mov
(bad)
fidivr
xchg
fmul
mov
or
pushf
fistp
pop
fcmovnu
dec
retf
mov
fiadd
cwde
jb
fsubr
mov
stos
or
stc
sahf
pushf
mov
retf
sti
jmp
imul
pushf
fcmovb
mov
mov
pushf
(bad)
ror
fcomp
fdivr
inc
jg
ins
rcr
sub
jmp
lods
or
js
mov
(bad)
sbb
adc
pushf
add
mov
int
aaa
xlat
popa
jp
jge
ficomp
hlt
(bad)
les
mov
in
mov
cs
popf
pop
lods
push
pushf
out
push
out
pop
mov
pop
sbb
pop
adc
retf
sar
cmc
fdiv
push
mov
aam
mov
sub
pop
jle
(bad)
outs
int3
jge
int3
stc
push
mov
add
mov
pushf
jae
add
neg
out
pop
out
outs
pop
xchg
jle
test
fcom
pop
scas
aam
(bad)
aam
pop
mov
fldenv
pop
hlt
sub
add
sbb
hlt
cmp
pop
jno
push
pushf
or
pop
aam
pop
inc
pop
pop
and
fstp
retf
stos
mov
fiadd
cwde
ror
or
pop
mov
aam
cs
push
les
rcr
lods
scas
sbb
cmp
jnp
pop
ss
fcmovu
and
dec
mov
sub
sbb
pushf
aad
mov
cdq
pop
jecxz
sub
sti
push
in
cli
or
fiadd
fisub
int
pushf
sbb
in
loop
ficom
les
cs
jmp
lods
jp
fwait
push
je
fstp
mov
xchg
xor
nop
pushf
mov
jmp
rcr
adc
fist
cdq
mov
dec
int
mov
enter
into
popf
ret
pushf
cwde
fistp
lea
js
into
ds
fidiv
fimul
aad
fiadd
xchg
fwait
cs
lods
lea
jge
dec
push
hlt
ror
repz
pushf
sub
mov
mov
push
adc
mov
int3
cmp
pop
call
push
pushf
push
push
pushf
inc
std
jmp
fstp
jle
les
xchg
mov
or
sbb
int3
or
mov
repnz
inc
fld
pop
fisttp
fld
add
test
pushf
xchg
fdivr
add
mov
leave
ds
push
lods
das
nop
imul
push
pushf
jg
add
pop
test
xchg
jno
mov
add
jle
mov
pushf
dec
(bad)
mov
inc
jle
loope
outs
jbe
pop
or
dec
or
cs
push
mov
push
xchg
pushf
sahf
cwde
cdq
push
pushf
jne
jmp
fcmovnu
idiv
(bad)
or
icebp
js
xchg
pushf
cwde
aaa
adc
mov
mov
sahf
mov
scas
mov
ds
mov
pushf
push
popf
pushf
jnp
pushf
movs
push
pushf
xchg
int
inc
lods
jmp
fcmovnu
jl
(bad)
call
and
les
retf
int
pushf
aad
pop
es
mov
sbb
push
pop
mov
les
mov
call
cs
loopne
pushf
sbb
pushf
rcr
pushf
and
cmp
ds
retf
ins
mov
fidiv
ffree
pop
or
cs
stc
ret
nop
cdq
push
ret
pushf
shr
xchg
push
sub
mov
and
sbb
mov
imul
aam
popf
mov
pop
jmp
jge
xor
ficomp
adc
aam
popf
mov
push
adc
sub
mov
lods
xlat
nop
pushf
test
sub
dec
aam
pushf
je
jmp
fcomip
adc
push
in
mov
sahf
fdiv
out
mov
hlt
fdivr
int
mov
pushf
push
pop
push
push
pop
pushf
cld
pop
shr
cli
(bad)
fisub
ficom
fistp
or
pushf
icebp
mov
adc
add
or
mov
pop
loop
mov
js
mov
xor
mov
mov
rol
pop
mov
cmp
adc
(bad)
lods
push
or
cmps
stos
mov
pop
(bad)
ret
pop
fist
sub
fiadd
push
ret
push
pop
fimul
ins
and
ds
movs
fstp
call
push
xor
push
sbb
cs
jmp
ret
sbb
mov
pop
(bad)
jmp
rcr
jnp
fist
fcomi
sahf
(bad)
jle
sub
inc
(bad)
lds
pushf
pop
pop
test
push
add
mov
dec
(bad)
inc
out
fcmovnbe
movaps
sbb
inc
push
cmp
aam
das
les
test
fisttp
sbb
scas
int
or
int3
cdq
into
mov
pusha
rcr
mov
push
fistp
nop
pushf
das
pop
sti
stos
shl
adc
pushf
sar
stc
dec
mov
aas
pop
sub
jg
inc
fcmovu
inc
pop
(bad)
das
arpl
leave
seto
dec
xor
mov
jmp
(bad)
das
fcmovnu
pop
sub
pushf
loopne
mov
push
pop
fistp
nop
fisub
shl
sbb
ins
fsubr
and
outs
add
(bad)
mov
pop
jg
rcr
pushf
movs
aas
pushf
and
pushf
inc
(bad)
pushf
push
out
pushf
sbb
fist
mov
jmp
sub
clc
setl
(bad)
pushf
or
pushf
mov
jmp
mov
add
je
mov
into
fisubr
push
mov
mov
mov
out
fistp
fcomp
mov
cmp
les
iret
ficomp
mov
pushf
pop
leave
in
setl
(bad)
lods
pop
sahf
pushf
xchg
scas
pushf
inc
sahf
pop
not
mov
in
mov
mov
fidivr
scas
fisub
mov
pop
fistp
fs
outs
pop
push
int3
sbb
dec
pushf
push
fcomp
int3
fmul
nop
inc
in
fidivr
int3
cwde
pop
int3
xchg
outs
mov
stc
dec
fistp
mov
jb
pushf
and
fistp
popf
push
jo
mov
mov
cmp
nop
pushf
mov
pushf
test
dec
xchg
sbb
inc
mov
sub
pop
in
jp
sub
stos
pop
lock
fisttp
fstp
std
clc
dec
fsubr
int
cld
int
sub
(bad)
adc
lods
pushf
and
jb
aam
(bad)
(bad)
lds
lock
lods
or
sti
mov
push
adc
jg
aam
push
aam
push
(bad)
jmp
mov
in
pushf
mov
scas
pop
push
mov
int
dec
fwait
push
ret
mov
fistp
popf
hlt
in
xor
lea
xchg
pushf
imul
sbb
pop
xchg
push
popa
push
retf
jne
adc
popf
pushf
jge
lods
pop
enter
pop
xchg
mov
int3
adc
pop
adc
mov
and
xor
fcmovnb
in
mov
aaa
fmulp
jae
pushf
mov
int3
dec
dec
mov
mov
xor
repnz
add
fiadd
clc
mov
fstp
dec
rcr
sub
retf
xchg
daa
nop
jmp
(bad)
pushf
gs
or
pop
sahf
popf
clc
pushf
pusha
enter
leave
int
addr16
mov
sub
sbb
mov
mov
popf
mov
push
pushf
addr16
mov
mov
pop
leave
and
xlat
sahf
pushf
lock
sbb
jecxz
call
mov
retf
fistp
fcomp
fsubr
inc
xchg
ja
jmp
push
mov
cmc
sub
pop
cli
popf
leave
pushf
cli
sbb
xchg
cld
pushf
sub
movs
sar
call
in
pop
rol
sbb
(bad)
fadd
pop
mov
int3
imul
fdivp
addr16
fucompp
or
sbb
push
cld
les
test
sbb
test
mov
adc
and
sub
inc
xchg
call
push
jmp
cmp
push
(bad)
(bad)
sub
cwde
mov
push
and
jmp
mov
and
jmp
push
pushf
sbb
dec
shl
pop
lock
scas
pushf
inc
pop
pop
test
adc
mov
jmp
shl
xchg
push
dec
xchg
push
pushf
hlt
cmps
iret
pop
jbe
ret
pushf
xchg
mov
inc
pop
retf
dec
popf
lods
mov
pushf
or
pop
aam
and
push
xchg
pusha
in
out
pushf
push
fistp
ror
inc
sbb
inc
mov
dec
push
jmp
pop
fld
std
fistp
sbb
sub
adc
sub
jno
push
fst
test
(bad)
fisubr
in
jmp
(bad)
(bad)
push
xchg
pop
icebp
inc
mov
sub
imul
pushf
xchg
cs
mov
pushf
adc
push
fcmovnu
ret
push
push
(bad)
je
cs
mov
call
(bad)
retf
mov
retf
jne
repnz
test
adc
pop
nop
pop
pop
aad
cli
push
fidivr
mov
fisub
int
inc
les
jns
pushf
fimul
pushf
bound
pop
pop
ret
ret
dec
call
pop
std
sbb
mov
js
popa
int
fisub
lea
lahf
(bad)
ins
nop
pushf
jecxz
mov
loop
xchg
rcr
rcr
jbe
cwde
test
push
out
fnsave
enter
dec
lods
retf
add
lea
lea
hlt
js
outs
jge
fisub
fiadd
fsubr
fcomp
fmul
enter
daa
pusha
jmp
aaa
ficom
nop
pushf
es
scas
aad
fisttp
sbb
cmc
iret
pop
adc
push
pushf
jmp
pop
jmp
push
or
pop
cmp
mov
pushf
inc
dec
ins
push
loop
fiadd
movs
outs
push
retf
push
(bad)
(bad)
fmul
fsubr
fsubr
enterw
fidiv
fstp
iret
ficomp
cld
retf
dec
clc
repz
cli
dec
pushf
cwde
lahf
das
enter
push
pusha
mov
push
clc
mov
inc
fsubrp
or
lahf
shl
lods
cdq
pushf
cmp
bound
adc
stos
cld
mov
push
retf
outs
mov
dec
mov
pop
addr16
cs
mov
or
push
inc
pop
push
pushf
lds
ficom
dec
or
mov
pop
and
retf
daa
mov
aad
mov
mov
pushf
pop
sub
inc
inc
mov
rcr
pop
sbb
(bad)
mov
cwde
cmp
jmp
pushf
sub
inc
push
outs
lods
les
adc
jge
retf
(bad)
repnz
push
fcmovu
push
(bad)
mov
(bad)
(bad)
sub
or
pushf
jnp
pop
and
sub
sahf
push
or
add
pop
test
xchg
dec
mov
pop
pop
rcl
mov
pop
mov
psubsb
movs
fdivr
fmul
fdivr
int
repz
pop
ja
cmp
mov
test
fwait
in
fild
or
pop
mov
dec
push
jmp
sbb
dec
jmp
(bad)
adc
clc
adc
outs
mov
ins
cmps
push
retf
mov
pop
ficom
pop
fisubr
dec
cwde
mov
fdivr
inc
(bad)
mov
push
jmp
mov
(bad)
fadd
call
push
pushf
add
retf
and
xchg
pop
mov
sub
pop
cld
ins
xchg
push
retf
adc
neg
dec
dec
pushf
xchg
push
or
pushf
sbb
rcr
adc
fst
add
adc
fidiv
fiadd
pusha
mov
push
inc
in
pushf
aas
fnstcw
push
pop
pop
mov
retf
dec
mov
hlt
jg
punpckhdq
or
out
int3
arpl
sub
lods
pop
pop
push
retf
mov
imul
xchg
aam
lods
les
adc
mov
ficom
add
push
mov
call
ins
sub
pop
and
cmp
je
mov
lods
ret
dec
jp
bswap
pop
mov
xchg
mov
mov
jmp
mov
inc
ror
mov
out
push
pop
pop
dec
int3
pop
sbb
les
jge
je
xor
retf
sub
or
cmp
jg
mov
ins
ins
out
push
pop
loopne
call
and
fcom
fcmovu
pushf
ins
cwde
cmp
jnp
fnstsw
mov
cwde
xchg
mov
sub
les
retf
les
jl
jno
jge
in
pop
(bad)
dec
mov
enter
fmul
mov
pop
or
sub
clc
cmp
fidivr
mov
stos
ud1
or
xor
mul
pop
sbb
scas
pushf
inc
pop
cmp
pop
mov
xchg
pop
dec
jge
add
aam
lahf
pop
adc
sub
hlt
int
test
pushf
xchg
pushf
(bad)
mov
pop
mov
call
retf
mov
in
ficomp
fidivr
cwde
xchg
into
mov
idiv
addr16
pop
ror
add
js
fwait
mov
pop
inc
inc
stos
pop
popf
fcmovnbe
mov
pushf
pushf
add
mov
fld
sbb
pushf
dec
in
mov
mov
cdq
aam
int3
les
pop
retf
fcomi
sahf
xchg
fs
loop
sbb
cli
mov
push
fild
pushf
xchg
and
mov
mov
mov
lahf
pop
pop
bound
pushf
cmc
ret
fidivr
mov
nop
pushf
and
pop
ds
test
in
pop
pushf
fcomp
cmp
stos
retf
cld
bound
pushf
mov
out
xchg
ret
nop
mov
cld
pop
aad
cmp
mov
pop
fisub
pop
add
sbb
cmps
push
in
sbb
ficom
mov
sbb
add
mov
not
dec
pushf
popa
mov
int3
pop
push
ret
pop
pop
test
inc
fsubr
pop
into
int3
test
mov
jno
mov
sbb
pushf
cwde
mov
inc
cs
jb
ins
lods
mov
push
cmps
mov
mov
pop
inc
sbb
pop
(bad)
out
cwde
and
ins
dec
push
retf
jg
jnp
inc
fmul
or
push
cmp
loopne
pop
adc
fld
inc
fcom
pop
jge
jno
mov
jno
inc
pop
mov
retf
scas
dec
int3
inc
cmp
pop
and
test
add
jns
push
fsubr
ins
stc
push
pop
scas
sbb
fdiv
inc
mov
or
call
popf
jnp
call
adc
scas
fistp
inc
sbb
popf
mov
mov
cwde
inc
scas
dec
lods
pop
sahf
pushf
fmul
push
in
pushf
mov
pushf
popa
ins
int3
scas
jge
dec
push
cmp
pushf
ins
fstp
push
pushf
imul
sbb
out
popf
aam
lods
aam
mov
in
pushf
xlat
inc
(bad)
retf
lahf
jge
nop
ins
int3
mov
mov
mov
sub
mov
add
mov
pushf
movs
cmps
mov
sbb
dec
push
pushf
mov
retf
ss
cmp
jp
int3
in
ins
int3
cmp
pop
pop
mov
pushf
add
mov
aam
bound
pushf
movs
loop
rcr
std
sub
fwait
lea
daa
mov
mov
dec
ins
push
loop
ror
adc
pushf
fiadd
adc
hlt
sbb
or
fiadd
mov
pushf
lahf
xchg
xchg
je
in
pushf
ficomp
fdivr
cmp
or
mov
inc
push
add
xchg
popf
sti
xchg
fistp
sti
fcomp
cld
or
call
loop
rcr
test
lods
sbb
popf
push
adc
pop
inc
adc
inc
shr
shl
adc
mov
pushf
(bad)
lock
stos
aam
in
pop
pushf
mov
cli
xor
pop
mov
push
push
sbb
fidivr
hlt
push
aam
sbb
js
retf
in
pushf
jae
inc
sub
mov
ins
loop
push
test
data16
lods
pop
sbb
das
fdivr
fcom
les
pop
mov
cwde
cld
call
les
test
pop
sbb
xchg
and
pushf
stos
loop
fidiv
fbstp
sti
retf
fistp
sub
(bad)
out
mov
push
push
sti
mov
repnz
sub
mov
sub
fmul
pop
inc
cdq
mov
mov
pop
mov
daa
ficom
aam
sub
pop
cld
aam
in
les
cmp
sub
push
into
int3
push
int3
mov
stos
call
mov
nop
mov
jmp
push
cmp
pushf
(bad)
mov
pushf
jns
adc
int3
repnz
cmp
push
mov
mov
pop
cmp
mov
push
in
dec
retf
fst
ret
mov
pop
pop
pop
mov
dec
mov
pushf
movs
mov
ficom
mov
scas
sar
jge
fisubr
fisub
cld
push
adc
mov
pushf
sbb
mov
push
pop
cmp
xor
mov
nop
mov
pop
not
mov
mov
lods
call
mov
mov
leave
fdivr
sbb
xlat
repz
pushf
stc
int3
les
pushf
jo
ins
fstp
lahf
cdq
inc
pop
inc
sbb
cld
pushf
scas
stos
xchg
sahf
pushf
neg
fcmovu
add
fidiv
jae
bound
adc
lods
pushf
xor
pushf
in
mov
dec
lods
push
xchg
pop
inc
push
xchg
int3
retf
test
js
daa
sahf
xchg
lods
or
mov
fistp
dec
out
sbb
mov
popf
sbb
mov
and
aaa
push
retf
push
mov
fdivr
stc
fsubr
cmps
int
imul
test
mov
jb
ins
mov
jae
mov
fwait
iret
mov
fcomp
fsubr
out
xchg
int3
mov
(bad)
cld
retf
push
mov
fmul
inc
in
fisub
(bad)
or
in
les
sbb
pop
pop
sbb
sbb
int3
mov
aam
in
aam
cld
mov
or
sbb
add
cwde
inc
cld
sti
mov
mov
lods
ds
fcmovnbe
je
cmp
add
ss
leave
hlt
mov
int3
inc
or
cld
pushf
pop
pop
mov
pop
or
xchg
lods
dec
test
pushf
sbb
mov
mov
cmp
rcr
int
mov
pushf
fwait
cmps
(bad)
cdq
iret
pop
mov
ret
pushf
mov
cmp
retf
push
movs
push
mov
sbb
adc
mov
dec
mov
jp
out
hlt
pusha
aam
sbb
hlt
call
js
fmul
xor
popf
in
les
fwait
push
pop
int
xor
inc
sbb
scas
push
push
je
adc
push
cld
pushf
inc
enter
cmp
xchg
mov
mov
nop
loope
adc
js
pushf
xchg
pushf
loop
pop
addr16
push
jne
mov
mov
aad
pushf
out
pop
pop
jb
sub
cld
repz
pop
inc
adc
mov
and
outs
in
fwait
sbb
pop
mov
into
in
pushf
cwde
sbb
rcl
or
dec
push
or
aas
lds
lods
dec
fmul
ret
mov
les
mov
bound
std
xlat
adc
pop
gs
nop
xchg
lods
mov
out
(bad)
inc
or
add
jle
test
das
mov
(bad)
cmps
(bad)
pop
sbb
mov
lods
in
ins
sub
test
int
jg
pop
xchg
loop
shl
adc
mov
lods
mov
aaa
fucomi
fcmovnu
push
push
jno
aam
mov
lods
int3
push
mov
pop
ins
int3
sar
pushf
sbb
retf
xchg
ins
pushf
mov
int
mov
jno
adc
mov
adc
arpl
sub
popf
rcl
int
pushf
adc
push
dec
retf
stos
pop
popf
pushf
mov
call
int3
in
int3
mov
sub
popf
bound
pushf
imul
and
mov
cwde
mov
fmul
cli
fsubr
call
sub
pop
add
loop
test
fidiv
fcomp
ins
icebp
push
std
mov
sar
pushf
xchg
fmul
pushf
jl
or
cwde
cmps
int3
sti
loop
sbb
mov
repnz
pushf
mov
sbb
mov
mov
xchg
hlt
out
call
sub
pushf
out
pop
or
retf
push
rcr
mov
inc
leave
retf
cmc
lods
int3
ins
int3
int3
je
pushf
sti
aad
dec
pushf
and
test
xchg
add
push
push
or
scas
pushf
or
push
pushf
mov
ret
fmul
fdivr
pop
pop
fmul
ins
or
sub
sbb
les
pop
test
pushf
mov
pop
ficomp
inc
mov
cmp
mov
cwde
lea
outs
mov
xchg
mov
sar
xchg
fwait
xor
fwait
mov
adc
xchg
rcr
and
push
retf
xor
xchg
push
and
mov
mov
mov
xchg
mov
push
retf
outs
cmp
mov
daa
adc
inc
test
push
pushf
push
pop
push
cmp
push
push
lods
or
pop
push
push
mov
les
sbb
clc
retf
in
lods
push
xchg
pushf
pop
in
pop
mov
xor
dec
jle
daa
call
mov
cdq
leave
imul
pop
clc
push
into
int3
retf
ja
ins
mov
into
lods
and
out
push
hlt
nop
aad
fnsave
fadd
lahf
cdq
inc
mov
cmc
xchg
or
fcmovnu
pop
int3
pop
mov
outs
mov
push
pop
jmp
mov
or
pop
fnstenv
leave
mov
add
push
jbe
pushf
xor
mov
aad
scas
pushf
scas
fisub
mov
mov
xchg
lods
pushf
jp
jnp
sar
adc
jp
dec
or
clc
pushf
cmp
pop
popf
xchg
into
ret
pushf
mov
xor
mov
adc
sbb
pushf
popf
push
jg
mov
mov
fcmovu
loop
jno
xor
shl
mov
pushf
add
mov
mov
sbb
inc
pop
pop
push
and
jg
push
xchg
jl
jle
mov
mov
mov
pop
mov
mov
pushf
sub
scas
cld
mov
les
mov
mov
xchg
xlat
jb
sub
sub
pushf
pushf
pop
ret
mul
push
jmp
mov
retf
pushf
push
pushf
sbb
rol
mov
jmp
(bad)
xor
push
dec
push
pushf
and
xchg
mov
fcmove
mov
cmp
pop
adc
mov
stos
mov
mov
mov
fsub
xchg
(bad)
mov
mov
dec
or
or
or
adc
xchg
aam
nop
or
ror
push
xchg
clc
xor
jb
movs
in
stos
or
lea
dec
pushf
ja
mov
ror
mov
pushf
int
int3
test
mov
pushf
scas
cmps
jae
ins
sahf
iret
sub
push
mov
mul
clc
add
pop
push
(bad)
or
aas
pop
popa
push
(bad)
jl
push
pushf
ins
ret
xor
fimul
push
mov
jge
(bad)
call
fdivr
ret
push
cli
mov
test
inc
sbb
jae
inc
aam
sub
imul
sub
pushf
jle
iret
pop
repnz
add
xchg
mov
lock
xor
loop
cdq
pushf
add
dec
cmp
inc
xchg
cmp
pushf
in
stos
rcr
dec
clc
pushf
ja
xor
shr
in
push
or
cwde
cld
(bad)
adc
pop
pushf
pop
int
inc
sbb
and
cmp
shl
xchg
leave
hlt
pop
pushf
stos
cmp
sbb
fstp
add
mov
cmp
lods
in
mov
stos
pop
inc
cmp
not
xchg
push
dec
push
mov
pop
mov
push
push
pop
int
pop
mov
movs
fld
clc
cmp
dec
fcomp
fmul
enter
test
nop
mov
dec
pop
add
sar
mov
sub
lea
hlt
xor
push
adc
cld
pushf
clc
push
test
mov
sbb
cmp
cmp
adc
fcomi
popf
xchg
push
inc
cmp
sub
clc
sbb
push
sahf
sbb
loop
mov
pusha
bound
pop
retf
sahf
aam
mov
(bad)
and
adc
or
sbb
popf
pop
add
push
shl
cwde
test
sahf
pop
mov
pop
xor
aas
xchg
jno
adc
ret
mov
cld
pushf
mov
mov
xchg
pop
int3
push
pushf
or
retf
ins
fstp
lods
sbb
mov
sub
dec
aaa
sbb
mov
xchg
jg
inc
or
jbe
or
adc
sbb
call
pushf
push
popf
cmp
cmps
rcr
pushf
ins
lods
cli
mov
arpl
int
pushf
or
mov
ja
call
pushf
test
aam
mov
dec
mov
popf
cmp
dec
mov
jmp
retf
pushf
jmp
stos
les
inc
lods
pushf
inc
xlat
xchg
adc
push
pop
push
pushf
dec
fcomp
int3
or
xchg
mov
xor
mov
pop
ds
mov
in
daa
stos
pop
or
in
rcl
aam
mov
xchg
sbb
cmp
inc
sbb
push
pop
or
loop
stos
rcr
sub
mov
(bad)
fidivr
sbb
fmul
int3
pushf
pop
add
inc
or
lahf
out
sbb
fisttp
cmps
stc
js
out
in
pushf
mov
adc
call
fdivr
icebp
fcomp
adc
js
pushf
ret
push
loope
rcl
cmps
mov
test
inc
or
fdivr
push
test
daa
xor
pop
ret
sbb
cdq
dec
mov
ds
pushf
mov
cmp
or
ja
cwde
hlt
cs
add
xchg
cdq
stos
mov
xchg
dec
ret
pushf
popf
clc
dec
dec
popf
dec
sbb
xchg
adc
into
pop
xchg
cdq
add
sub
pushf
loopne
mov
(bad)
fmul
icebp
sbb
jl
pushf
push
push
pop
jmp
retf
loope
pushf
xchg
pop
adc
out
or
pushf
sub
div
cmp
aad
or
call
mov
ss
addr16
xlat
inc
es
pushf
dec
push
cmps
mov
xor
arpl
and
mov
ja
inc
xchg
mov
pushf
adc
les
cwde
stc
push
inc
xchg
dec
sbb
sar
mov
lods
stc
movs
js
in
pushf
mov
mov
mov
aaa
scas
adc
enter
fistp
push
sbb
mov
pushf
std
cld
les
mov
sub
mov
(bad)
or
inc
retf
mov
adc
imul
retf
lahf
in
retf
xchg
mov
mov
mov
xor
pushf
or
out
cdq
sbb
mov
push
in
pushf
push
stos
inc
sahf
fwait
fwait
repz
sbb
lds
sbb
or
mov
mov
adc
int3
pop
push
add
pushf
loope
push
adc
shr
out
shl
mov
fcomp
sbb
sub
push
push
retf
ret
fisttp
mov
enter
fdiv
out
cdq
dec
pushf
xchg
mov
retf
mov
enter
sbb
mov
mov
popa
or
ret
mov
jno
and
stos
push
ret
pushf
xlat
hlt
fdiv
pushf
icebp
dec
pushf
jl
mov
ds
xchg
fwait
leave
mov
stos
push
adc
(bad)
sbb
sbb
xchg
shl
out
in
dec
pushf
xlat
mov
int
pushf
cdq
mov
ficom
sbb
lds
mov
pop
mov
xlat
push
arpl
dec
sbb
push
ret
adc
or
fistp
mov
test
loop
xchg
xor
cmc
cwde
adc
cs
rcl
or
es
(bad)
mov
call
xchg
inc
inc
mov
ja
rcr
pushf
rcl
mov
xchg
jmp
mov
sbb
jbe
popf
push
(bad)
out
mov
fbld
cmp
xchg
mov
adc
sub
add
mov
lea
aad
js
add
jg
bound
cdq
mov
adc
add
fisttp
dec
push
mov
ins
fadd
retf
xor
jmp
push
jmp
sbb
or
push
dec
ror
adc
mov
mov
popa
jb
popf
mov
lahf
mov
xlat
xor
(bad)
pop
xor
jne
bound
jp
fistp
daa
xchg
adc
adc
mov
and
cmp
js
mov
push
sbb
in
pushf
pop
fmul
stos
int3
mov
mov
mov
jno
pushf
fmul
fcom
jae
xlat
push
sbb
in
add
and
pop
mov
pop
pop
outs
bound
aas
mov
xchg
fiadd
int3
pushf
mov
adc
pop
popf
push
bound
mov
xchg
mov
xor
xchg
mov
add
sbb
data16
mov
push
retf
imul
cld
call
shl
mov
inc
mov
(bad)
push
and
lods
mov
mov
fmul
into
pushf
adc
cdq
add
adc
mov
pushf
jl
pop
jmp
jae
bound
push
inc
rcl
mov
sar
mov
push
int3
pushf
cwde
sub
adc
mov
pushf
adc
in
pushf
xchg
xor
push
xor
push
lods
pushf
ja
mov
mov
enter
xchg
xchg
adc
push
mov
ret
xor
mov
(bad)
fcom
fmul
xor
xchg
loop
mov
out
fucomip
inc
fdivr
push
pop
lods
(bad)
out
stos
aas
popf
pop
sub
mov
pushf
xchg
pop
mov
push
pushf
mov
pop
int3
mov
bound
sbb
pop
push
push
xchg
aam
pushf
les
xchg
(bad)
inc
mov
mov
or
pop
pop
inc
adc
scas
push
mov
jl
push
mov
sbb
mov
sbb
fimul
cwde
or
adc
push
xchg
pop
js
mov
stos
dec
xchg
stos
outs
adc
mov
sub
sub
nop
mov
mov
rcr
(bad)
xchg
shr
sbb
test
add
sbb
bound
pushf
inc
call
(bad)
push
aam
int3
les
mov
push
push
push
(bad)
je
cld
pushf
cwde
add
enter
push
aam
repz
adc
xchg
pushf
push
push
arpl
(bad)
xchg
fmul
push
or
or
cmp
push
pushf
out
adc
fimul
(bad)
push
loope
out
push
mov
push
push
adc
mov
pop
dec
ss
nop
pop
rcl
ss
mov
lahf
push
inc
sahf
test
stos
call
iret
fbld
xor
push
dec
pop
adc
pop
inc
push
sahf
loop
sub
arpl
dec
lods
out
pushf
data16
call
jmp
fldl2t
sahf
pop
cmp
popf
pop
gs
mov
(bad)
test
lods
fistp
mov
sahf
neg
pusha
fadd
mov
sub
addr16
xchg
xchg
push
into
xor
ret
push
shr
int
sbb
mov
cld
cwde
add
pop
neg
mov
push
loope
mov
mov
(bad)
mov
mov
push
retf
xchg
test
jo
mov
js
lods
pushf
adc
inc
sbb
ds
out
pop
cmp
rcl
and
pushf
xor
xor
aam
out
fcom
call
arpl
dec
ret
mov
les
mov
add
fimul
mov
arpl
fistp
sti
cld
cmp
adc
sbb
js
ret
mov
mov
push
xchg
(bad)
dec
push
cld
pushf
shl
push
popf
push
xor
or
iret
mov
xchg
adc
ds
popf
sbb
dec
push
hlt
adc
and
mov
call
pushf
shr
in
inc
pop
test
pop
add
dec
sar
leave
mov
xor
fcomi
call
dec
push
fst
popa
mov
jge
add
cwde
adc
(bad)
cmp
(bad)
adc
or
xor
inc
sbb
cmp
and
pop
xor
jno
cmp
cwde
push
push
inc
dec
mov
ror
rcl
xchg
pop
repz
pushf
cwde
fisubr
or
xchg
push
dec
pop
sbb
pushfw
out
pop
retf
fdivrp
test
jmp
ret
mov
pop
sbb
in
xor
test
int3
add
push
fwait
cmp
pushf
mov
inc
aas
mov
pushf
fsub
or
shr
pop
push
dec
mov
dec
xchg
dec
fmul
js
mov
mov
call
call
pop
loop
fwait
mov
sub
push
ror
xchg
xchg
loope
pop
jecxz
mov
adc
int3
pushf
lock
cs
inc
xor
lods
jne
lock
int3
pushf
or
mov
cmp
pushf
fcmove
xchg
adc
push
pushf
xchg
adc
sub
pop
sti
cmps
cdq
pop
add
clc
mov
enter
or
inc
dec
js
mov
test
pop
rcl
cmp
call
fistp
mov
pop
int3
push
pushf
shl
fist
lods
pushf
or
inc
xchg
or
aaa
xchg
(bad)
mov
jg
sbb
fisttp
lahf
in
cwde
adc
push
icebp
dec
into
dec
stos
push
cdq
stc
mov
mov
dec
xchg
sub
xor
mov
(bad)
dec
mov
xchg
push
popf
jo
es
mov
add
cld
pushf
stc
xchg
frndint
nop
push
icebp
call
into
pop
cmps
adc
je
cld
pushf
xchg
fcom
fild
lahf
cwde
adc
nop
pop
loopne
push
clc
or
sub
out
mov
lahf
sbb
cmps
xchg
call
or
(bad)
(bad)
push
or
pop
sbb
mov
stos
mov
lea
pop
retf
add
inc
lea
adc
loop
popf
rcr
fwait
xchg
sbb
pushf
adc
loopne
inc
pop
cmp
inc
xchg
sub
stos
xchg
or
add
mov
cmp
mov
push
xor
lods
sbb
push
sbb
bound
mov
ficomp
inc
push
pop
dec
push
or
sub
pop
ds
ja
xchg
push
inc
lahf
inc
mov
cmp
ret
xchg
mov
clc
aad
in
adc
adc
scas
push
aad
adc
sbb
movs
xor
addr16
cwde
not
adc
adc
push
add
ret
fwait
xor
mov
fcmovnbe
adc
outs
pushf
mov
outs
enter
mov
nop
stos
xchg
mov
fnstsw
sub
inc
or
hlt
lods
les
mov
xlat
push
mov
les
lahf
push
push
adc
data16
pushf
les
fwait
aad
inc
pop
sub
mov
mov
dec
lahf
pop
ficom
loope
fdivp
fcom
xchg
dec
(bad)
popa
mov
mov
mov
mov
fisttp
neg
pushf
fimul
add
test
mov
cmps
sbb
ja
scas
pop
sbb
fimul
or
dec
mov
cmps
adc
mov
adc
mov
sahf
pop
arpl
int
pushf
or
sbb
pop
pop
push
clc
cli
es
retf
sbb
enter
push
pop
push
mov
ret
cwde
sub
mov
out
(bad)
push
fistp
push
xchg
add
mov
retf
out
in
mov
adc
adc
sbb
xchg
pop
mov
int3
pushf
cmp
call
sbb
pushf
fidiv
mov
pop
sahf
lahf
adc
pop
int3
pushf
inc
inc
sub
xor
bound
xchg
pop
call
sbb
cmps
mov
cdq
out
or
ret
pop
add
int3
pushf
cmp
mov
pushf
cwde
fsubr
rcr
mov
xlat
lahf
fadd
fstp
push
aaa
pushf
adc
loope
push
pop
and
push
pushf
xor
mov
retf
in
bound
mov
(bad)
xchg
or
call
push
cmp
mov
(bad)
ror
pop
pop
pop
cmp
pushf
mov
gs
inc
mov
out
jno
inc
fdiv
stc
inc
rcr
call
sub
add
cmp
xor
rcl
cwde
lea
push
cmp
sub
push
(bad)
mov
mov
adc
popa
inc
fistp
fadd
xchg
and
or
pushf
inc
sbb
push
mov
int3
pushf
xlat
pop
aam
xchg
inc
fidiv
dec
(bad)
dec
adc
push
add
xchg
aad
jb
mov
push
dec
fistp
rcr
dec
xlat
nop
fst
pop
xor
jno
mov
not
ficom
mov
cmps
adc
push
or
cmp
loop
adc
xchg
shl
pushf
jb
es
mov
jae
mov
rcr
mov
push
jnp
sar
ja
ret
lahf
sbb
ret
xchg
push
ret
mov
mov
dec
xchg
push
fsub
sbb
mov
dec
mov
push
mov
ret
mov
cld
pop
inc
push
or
es
jb
jae
jb
js
xchg
into
sbb
sbb
fld
push
out
sbb
test
pop
cmp
(bad)
pop
sbb
xchg
or
out
pop
adc
cdq
cld
mov
inc
pop
call
sbb
xchg
or
inc
push
mov
xchg
cwde
test
push
sbb
xchg
mov
xchg
xlat
mov
cmc
neg
sbb
fwait
bound
sbb
fbstp
mov
loope
xchg
cmp
xlat
pop
add
ficomp
xchg
aad
out
pop
cmp
or
adc
xor
mov
xchg
jbe
mov
mov
enter
add
or
retf
outs
call
cmp
jmp
xchg
cdq
sub
adc
mov
push
pop
xlat
or
ja
sbb
mov
lea
push
pop
xchg
mov
sbb
fwait
loope
mov
mov
mov
popf
test
pop
or
xchg
adc
push
dec
fucomp
or
outs
cdq
sbb
test
jbe
mov
mov
xchg
repz
mov
popf
out
fmul
int3
pushf
arpl
popf
ret
mov
aaa
mov
lea
fild
out
jnp
nop
nop
cdq
push
inc
xchg
or
sub
es
jmp
not
mov
stos
cmp
mov
xchg
xchg
jge
mov
adc
xchg
mov
shl
mov
xchg
js
mov
mov
mov
mov
rcl
dec
fstp
lahf
fld
push
out
adc
lahf
fiadd
sbb
pop
sahf
aaa
sbb
fisttp
jnp
cdq
push
push
lahf
in
mov
inc
enter
pushf
fstp
adc
cmps
fadd
pop
test
xchg
(bad)
pop
push
mov
int3
pop
sbb
push
cmp
or
sub
mov
mov
xchg
pop
push
fwait
inc
pop
bound
adc
out
movs
ror
push
adc
jne
bound
mov
xchg
adc
mov
cld
pop
int3
or
loopne
xlat
ja
add
dec
or
mov
shl
or
stc
mov
sbb
push
mov
dec
mov
fnsave
push
es
pop
adc
addr16
mov
push
jae
cwde
or
xor
xchg
jmp
xchg
ds
(bad)
xchg
rcr
rcl
ss
mov
repnz
inc
fimul
xchg
popf
fs
dec
xor
pop
ret
adc
fiadd
adc
add
sub
xor
pushf
xchg
mov
sbb
mov
adc
lea
loopne
pop
das
loop
(bad)
ficomp
mov
sbb
dec
ret
fbld
add
mov
add
mov
jp
js
pushf
ret
sbb
cwde
(bad)
pop
add
jge
stc
push
sub
xchg
frstor
popf
adc
int
pushf
loope
cwde
enter
sbb
aad
mov
mov
in
ja
ret
push
jae
push
push
fcomp
xchg
fist
mov
xchg
mov
sub
nop
mov
fidiv
cdq
sbb
aaa
test
outs
fsubp
mov
pop
test
mov
add
mov
adc
aad
mov
sbb
mov
mov
inc
mov
inc
cmps
iret
xchg
js
push
pushf
(bad)
sbb
push
cld
push
dec
fwait
bound
aaa
ficom
xchg
mov
fdiv
xlat
push
xchg
clc
sbb
cwde
jb
xchg
sbb
inc
jg
mov
mov
mov
dec
rcl
add
mov
cdq
mov
test
ret
lds
adc
nop
sbb
fcom
ja
nop
adc
js
mov
adc
ret
xchg
or
jb
mov
aas
pop
xor
cmp
xor
mov
push
icebp
mov
adc
inc
mov
aam
sub
xchg
cwde
mov
xor
xchg
cdq
adc
xor
pushf
mov
xchg
cmps
push
out
pop
pop
fs
xchg
sbb
popf
adc
bound
rol
dec
cwde
out
pop
not
inc
imul
out
call
dec
dec
mov
mov
bound
jb
arpl
mov
or
retf
pop
sbb
mov
pop
mov
mov
cmp
mov
test
push
cwde
dec
in
scas
mov
push
mov
int3
(bad)
icebp
mov
mov
mov
sub
fstp
xor
mov
xchg
push
fist
mov
mov
in
mov
inc
jl
pop
cmp
fadd
mov
pop
mov
xchg
jns
pop
out
sar
aam
adc
ja
fwait
cmp
test
daa
(bad)
cdq
popf
fcmove
push
mov
call
stos
sbb
clc
mov
enter
es
pushf
xchg
xchg
xchg
leave
mov
pop
rol
and
mov
out
or
adc
mov
xor
bound
xor
mov
xor
popf
imul
sbb
mov
pop
rol
lock
push
sahf
pop
repz
mov
sbb
xchg
mov
xchg
pop
(bad)
int3
loopne
mov
add
xchg
stc
test
pop
add
push
xchg
pop
adc
sahf
fiadd
cmp
(bad)
mov
cmp
loope
lahf
or
loop
fcom
pop
push
bound
pop
mov
pop
pop
push
cmc
in
or
fild
inc
push
mov
les
pop
push
push
fdivr
fist
pop
mov
out
mov
aam
loop
push
shl
fcmovnu
pop
jg
push
dec
pop
cdq
adc
xchg
adc
mov
ret
das
out
push
int
sbb
push
nop
mov
int3
jnp
xchg
std
mov
call
add
jne
mov
fst
or
adc
dec
sbb
sahf
jae
js
mov
push
sahf
pop
idiv
mov
fstp
xor
call
loop
fwait
ja
xchg
aad
mov
int3
add
lahf
sahf
in
mov
mov
(bad)
sbb
fbld
sahf
cmp
dec
pop
ins
push
mov
xlat
arpl
not
xor
icebp
aad
test
pushf
scas
adc
out
mov
push
push
sbb
mov
fsubr
adc
dec
(bad)
test
mov
sub
pop
add
enter
test
push
pushf
daa
sbb
jmp
xchg
pop
jmp
loopne
sbb
xor
mov
fwait
es
sahf
(bad)
xchg
inc
mov
jnp
mov
pop
xchg
sbb
into
mov
aaa
mov
push
repnz
pop
pop
ret
shl
jb
xchg
mov
bound
mov
loopne
sar
adc
push
adc
sbb
xchg
add
inc
ret
mov
mov
stos
mov
ret
daa
pop
sar
xchg
fidivr
sbb
push
scas
pop
sbb
mov
pop
mov
dec
sahf
or
pop
rol
mov
fadd
add
js
mov
push
mov
int3
jl
je
mov
mov
cmp
mov
mov
pop
jae
xlat
xchg
push
mov
mov
add
sbb
pop
sbb
mov
test
pop
inc
ret
in
sub
fisub
ret
pushf
push
mov
mov
cs
xchg
aam
xchg
pop
fdivr
sahf
pop
dec
nop
mov
cld
stos
adc
adc
push
mov
ret
xor
or
mov
sbb
mov
or
scas
in
adc
add
loop
fsin
ret
mov
inc
inc
jnp
pushf
xchg
pop
inc
xchg
sbb
ss
aaa
ficom
cdq
call
sbb
scas
xchg
pop
sbb
jb
inc
adc
inc
push
dec
adc
adc
aad
popf
xchg
pop
adc
mov
pop
inc
(bad)
mov
pushf
test
pushf
add
mov
push
push
pop
cdq
xor
xchg
fist
xor
mov
sbb
inc
aad
xchg
rcl
adc
nop
mov
in
mov
pop
push
mov
cdq
or
fsubr
mov
push
cmp
aam
sbb
inc
iret
mov
fistp
dec
aad
inc
mov
pop
mov
fnstcw
mov
aam
push
mov
ja
mov
adc
cmp
bound
fnsave
xchg
mov
and
xchg
aad
mov
jb
xchg
mov
cmp
shr
fisttp
mov
mov
add
rcr
ret
adc
pushf
js
mov
pop
add
inc
sbb
xchg
sub
fiadd
cmps
sbb
pop
lahf
fadd
pop
dec
nop
mov
jnp
xchg
ror
nop
push
pop
aad
mov
sub
pop
jmp
adc
mov
and
cmp
sub
nop
sub
inc
fcomp
repz
retf
int
mov
retf
jae
iret
xchg
adc
xchg
push
xchg
sub
rcr
xchg
xor
mov
fmul
cdq
inc
adc
mov
pop
retf
dec
out
adc
lahf
fild
sbb
dec
push
pushf
(bad)
adc
imul
movs
fcomp
xchg
ret
inc
adc
pop
int3
lods
sbb
test
cwde
aad
into
mov
mov
add
push
mov
pop
mov
popf
es
mov
pop
pop
xor
inc
adc
push
mov
mov
nop
fstp
in
sbb
pop
pop
dec
cld
or
ss
sbb
xchg
mov
and
and
ret
mov
lahf
fwait
cmp
xchg
pop
sub
inc
bound
ds
cmp
mov
sbb
ror
and
enter
out
push
xor
sbb
scas
aaa
mov
push
mov
ss
aaa
xchg
xchg
pop
or
sub
fisubr
addr16
sbb
stos
mov
out
mov
pop
dec
fimul
pop
xchg
jg
out
pushf
sti
fstp
sahf
pop
adc
add
jmp
xlat
aad
xchg
ror
int
and
inc
popf
jb
mov
retf
mov
inc
hlt
jg
adc
icebp
mov
mov
pop
fisubr
cmp
cld
adc
mov
or
or
fwait
xchg
lahf
dec
dec
lahf
pusha
ret
mov
xor
add
add
xchg
xor
mov
sbb
fld
mov
pop
fucomi
mov
push
out
cld
mov
pushf
inc
pop
mov
call
inc
das
mov
xchg
rcr
xlat
call
loope
aad
pop
adc
js
mov
mov
pushf
outs
imul
inc
pushf
adc
jb
js
mov
in
pushf
cwde
call
jmp
mov
lahf
aaa
scas
shl
mov
les
call
jge
mov
xor
sbb
cwde
mov
arpl
pushf
es
inc
shl
aam
rol
sahf
sbb
(bad)
push
sbb
push
sahf
stos
call
daa
test
mov
cmp
mov
add
dec
rol
cli
mov
fidiv
mov
cmp
pushf
cdq
neg
pop
or
dec
stos
lods
xchg
pop
add
xchg
xlat
xor
push
bound
dec
aam
push
mov
int3
retf
mov
fcom
inc
repz
ins
cwde
pop
retf
jl
adc
xor
jmp
mov
xor
sbb
jmp
gs
dec
fsubr
dec
(bad)
es
mov
pop
stc
fadd
xchg
pop
lock
jp
jbe
mov
sahf
dec
mov
call
add
mov
aas
(bad)
rcl
xchg
js
mov
push
mov
ret
xchg
mov
scas
shl
bound
xor
jne
mov
scas
pop
and
adc
enter
mov
cmps
xchg
adc
inc
popf
out
lahf
adc
push
shl
pop
(bad)
rcr
mov
aad
fistp
add
mov
mov
or
sbb
dec
xor
mov
xor
(bad)
push
cdq
pop
rcr
dec
(bad)
cdq
dec
mov
pop
cmp
xchg
fwait
adc
out
sbb
(bad)
js
mov
add
adc
repz
inc
adc
fstp
ret
push
jb
dec
fistp
popa
ret
xchg
cdq
ret
mov
mov
mov
dec
sbb
push
call
add
lahf
aam
ret
push
add
add
addr16
adc
fimul
aam
mov
push
pop
adc
push
stos
xchg
popf
fisttp
repz
push
cmp
xor
jo
sub
push
fistp
fcomp
inc
cwde
mov
scas
adc
lahf
adc
mov
fwait
push
mov
aad
les
fwait
and
fistp
sbb
mov
fdivr
ja
mov
add
cmp
sbb
jae
pop
rcl
ja
or
lods
dec
retf
fstp
add
dec
mov
mov
sbb
mov
push
call
or
xchg
sbb
mov
adc
push
pop
fist
mov
nop
lahf
add
pushf
fistp
sbb
stc
sbb
fisttp
xchg
fistp
mov
xchg
mov
lahf
xchg
pop
xchg
cwde
pop
push
mov
in
pop
jne
mov
dec
xor
sbb
mov
retf
add
push
paddb
sbb
fwait
inc
xchg
pushf
cmps
rol
lahf
cdq
push
mov
mov
mov
call
fistp
sar
xlat
sahf
add
xlat
xchg
xchg
jb
sub
fwait
xchg
xchg
rol
pop
shl
pop
cmp
lahf
xlat
push
fwait
test
fcmovb
aam
cdq
dec
push
mov
popf
lahf
int
mov
imul
sbb
xor
mov
mov
enter
in
retf
jbe
and
test
(bad)
pop
push
xchg
rcr
imul
xchg
fwait
xlat
push
pop
mov
fldcw
mov
mov
out
dec
mov
jge
xor
aas
(bad)
pop
push
sbb
push
push
adc
out
lods
ds
xor
(bad)
popf
inc
sbb
bound
ss
fdivrp
xchg
sub
pop
ss
js
or
sahf
xchg
cwde
jno
dec
sahf
inc
leave
mov
push
add
mov
rcr
xor
rcr
mov
cmp
cwde
(bad)
int3
rcr
mov
push
xchg
popf
icebp
pop
add
xchg
adc
xchg
xor
adc
pop
call
ret
popf
imul
mov
fwait
sahf
popf
jno
inc
inc
mov
retf
mov
inc
add
popf
add
popf
push
fmul
mov
sti
loop
rcr
cld
les
or
push
sbb
(bad)
dec
rcr
cmp
mov
fdivr
imul
jmp
cmc
mov
nop
xchg
pop
dec
pop
fstp
sbb
es
not
loope
xlat
addr16
cmp
call
ret
movs
enter
pop
nop
mov
adc
cwde
and
popa
ret
xlat
mov
call
inc
push
mov
push
ret
push
pop
test
xchg
pop
fisub
cdq
mov
push
mov
loop
rol
sbb
mov
adc
pop
cmps
cdq
test
ret
inc
pop
mov
dec
xor
sub
pop
mov
xchg
test
pop
xor
mov
cwde
test
or
cld
leave
dec
out
fild
rcl
fstp
popf
mov
mov
call
mov
aaa
mov
pop
adc
iret
sbb
mov
shl
stos
cwde
mov
clc
jnp
mov
push
mov
rcr
ret
idiv
iret
ret
ror
xchg
popa
mov
pop
enter
jmp
mov
call
inc
inc
mov
mov
stos
xchg
push
mov
les
mov
call
dec
pop
mov
cmp
jbe
xor
inc
xchg
inc
sub
sbb
sub
or
call
lahf
call
sbb
mov
dec
aam
stos
pop
test
xchg
mov
xor
sahf
xchg
iret
enter
mov
retf
pop
fnsave
mov
ret
arpl
int3
sbb
neg
adc
fwait
mov
adc
push
pop
push
mov
loop
ror
xchg
cmps
push
mov
mov
mov
pop
xor
push
pop
jae
sub
cmp
pop
mov
inc
dec
mov
cmp
rcl
rol
push
mov
push
ja
inc
fild
mov
mov
not
xlat
call
call
pop
mov
dec
adc
sbb
pop
cwde
xchg
dec
jb
pusha
stos
sub
ja
leave
fstp
in
rol
pop
call
sbb
call
fwait
inc
sahf
cmp
push
aam
pop
xor
js
xor
dec
(bad)
pop
inc
fadd
mov
mov
jg
aas
mov
push
pop
retf
inc
call
lahf
stos
pop
xchg
pop
lods
add
loope
cwde
xchg
je
pop
fstp
es
push
cmp
xchg
sub
and
lahf
pushf
dec
xchg
mov
jb
mov
rcl
xor
xchg
inc
mov
cli
mov
outs
in
pop
adc
(bad)
mov
inc
mov
retf
loope
and
xchg
fimul
not
or
push
or
adc
sbb
shl
fwait
cdq
push
jg
xchg
(bad)
fcmovbe
pop
popf
scas
xchg
ficom
or
pop
inc
ret
imul
out
fsub
inc
cmp
mov
inc
pop
fwait
stos
adc
mov
les
call
or
mov
xor
ins
in
retf
mov
add
push
pop
sbb
adc
mov
dec
call
pop
fist
ret
inc
nop
dec
aam
xor
mov
pop
xchg
popa
mov
into
mov
pop
dec
into
mov
dec
xor
pop
cmp
push
pop
dec
rcl
xchg
mov
cmp
jge
dec
nop
rcr
nop
aam
push
sbb
inc
and
pop
mov
push
sbb
adc
xchg
xlat
iret
pop
sbb
nop
push
add
fdiv
pop
aaa
fwait
cdq
popf
scas
test
pop
ret
push
push
inc
pop
cli
ret
mov
rol
pop
cdq
sbb
xchg
pop
inc
dec
shl
aad
sbb
mov
js
arpl
ret
push
adc
jbe
mov
sbb
cmp
ret
mov
jecxz
xchg
mov
sbb
sbb
sbb
imul
rcr
xchg
mov
inc
jne
inc
call
cmp
fld
sbb
mov
push
cmp
popa
inc
sbb
push
ret
mov
mov
ret
mov
mov
inc
out
stos
jmp
fcmovnbe
pop
call
pop
ficomp
xchg
sbb
xchg
sbb
push
add
mov
xor
adc
mov
fild
mov
fst
pop
ja
push
lahf
sbb
sti
xchg
sbb
pop
adc
or
cld
or
lahf
cs
pop
fcmovu
xchg
xchg
mov
pop
retf
dec
mov
pop
inc
pop
xor
je
mov
jb
data16
mov
ficomp
pop
cmp
pop
or
mov
lods
xchg
fcmovu
inc
rcr
sbb
or
push
inc
ret
mov
mov
push
(bad)
aad
test
cmp
stos
pop
mov
mov
cwde
push
jmp
xor
xlat
mov
mov
aad
idiv
pop
rcl
mov
fstp
test
pop
xchg
mov
dec
or
dec
ror
ficomp
call
stc
(bad)
(bad)
push
cmps
adc
fcmovnbe
push
mov
ret
pop
mov
push
pop
test
enter
sbb
imul
jb
enter
jns
dec
je
xor
mov
stc
push
retf
sbb
xchg
dec
ja
cmps
sbb
scas
xlat
pop
fidivr
ret
jb
xchg
push
ss
or
sar
fistp
adc
cdq
jb
xchg
pop
inc
mov
ror
rcl
rcr
add
bound
ss
inc
sbb
cdq
cmp
je
les
cwde
sbb
or
pop
jno
lahf
enter
sbb
iret
xchg
cmps
pop
enter
fisttp
rcr
push
inc
xchg
inc
pop
out
ret
mov
mov
push
ins
mov
mov
fadd
inc
std
mov
dec
push
pop
nop
stos
pop
sbb
leave
mov
sbb
into
mov
retf
adc
push
inc
sahf
sbb
push
jb
adc
pop
jb
ret
pushf
ret
pop
xchg
aam
adc
inc
pop
push
pop
jb
xor
or
inc
or
xchg
ja
mov
cwde
mov
fist
shl
pop
push
aad
jb
xor
inc
jg
fistp
retf
xchg
xchg
mov
mov
mov
xchg
inc
call
jb
cmps
pop
mov
lock
fistp
int
cmp
push
adc
adc
adc
inc
dec
fnstcw
pop
pop
pop
push
push
mov
fwait
loopne
sbb
sbb
push
xchg
pop
sahf
fistp
xchg
push
jmp
pop
xor
or
dec
or
mov
nop
sbb
(bad)
(bad)
mov
adc
bsf
inc
sub
pushf
or
icebp
pop
dec
pop
rcl
push
dec
ficom
call
(bad)
push
xchg
inc
nop
cmps
xchg
out
aam
adc
push
int3
rcl
adc
xor
pop
xor
cmp
scas
adc
call
mov
mov
push
xor
js
mov
cmp
xchg
jbe
mov
aam
pop
mov
xor
jbe
mov
cmp
jbe
xchg
xlat
loop
fdivr
fcom
xchg
push
dec
dec
xchg
cmp
adc
mov
retf
sub
fst
repnz
retf
rol
xchg
add
pop
cdq
dec
mov
mov
adc
adc
xchg
nop
rol
mov
jnp
inc
je
xor
xor
mov
cmp
sbb
inc
mov
cmp
inc
fwait
fwait
outs
mov
pop
popf
inc
pop
push
sbb
push
fwait
xchg
iret
inc
cdq
xchg
or
xchg
mov
aas
ror
add
(bad)
mov
(bad)
sbb
iret
push
mov
xchg
sbb
push
ret
inc
pusha
mov
mov
out
ret
(bad)
mov
inc
pop
fwait
mov
rol
cmp
enter
push
rcl
jns
inc
je
xor
or
mov
mov
xlat
cdq
xchg
dec
adc
xchg
mov
mov
popf
lea
pop
mov
sbb
mov
or
mov
mov
cmp
inc
adc
cwde
pop
pop
mov
fcom
(bad)
adc
xchg
xchg
push
lds
push
(bad)
fcom
cdq
dec
xchg
mov
pop
adc
mov
xor
(bad)
dec
or
xchg
push
or
mov
adc
xchg
fistp
lods
fwait
mov
ss
dec
pop
scas
sbb
push
inc
pop
bound
fnsave
cdq
js
add
ret
dec
pop
xor
nop
call
mov
xor
xchg
push
inc
push
fwait
imul
xchg
nop
sub
add
xchg
(bad)
xchg
dec
or
jb
xor
or
ret
fwait
sbb
iret
push
sub
dec
nop
mov
rcl
enter
fist
dec
shl
push
or
inc
fidivr
retf
rol
xchg
retf
mov
(bad)
aam
push
into
push
xchg
pop
mov
sbb
add
or
push
pop
ret
xchg
mov
mov
cdq
fisttp
scas
(bad)
lods
sbb
inc
inc
adc
int3
xor
xchg
shl
rcl
xchg
mov
fcmovb
fcomp
sbb
cdq
leave
xchg
sbb
popf
fimul
xchg
mov
sahf
jl
enter
lods
ror
pop
inc
nop
cmp
xlat
jmp
mov
jnp
mov
add
aas
inc
xchg
xor
xor
cmp
sbb
inc
fcom
pop
enter
and
scas
xchg
lahf
aaa
pop
retf
mov
xchg
aam
lds
pop
adc
inc
and
adc
cmp
dec
adc
sbb
xchg
call
adc
retf
test
stos
push
mov
pop
xchg
ret
les
shl
xlat
scas
dec
xchg
mov
or
mov
push
ffreep
push
aas
inc
cmp
push
mov
sahf
mov
or
bound
aad
jp
stc
idiv
ja
push
lahf
fadd
enter
mov
sbb
xchg
xchg
lds
mov
nop
push
leave
sbb
call
ror
push
mov
xchg
xor
or
leave
mov
mov
fld
mov
push
dec
xor
xor
aas
mov
aaa
xchg
rol
stos
push
cdq
inc
aaa
pop
leave
sub
fisttp
sub
push
(bad)
push
push
push
add
fld
fiadd
fisttp
mov
adc
xchg
enter
mov
sbb
fdivr
pop
xchg
movs
cmp
sub
rcl
enter
xor
test
xchg
pop
xchg
rol
xchg
fcomp
inc
ret
es
xchg
cmps
ins
mov
popa
xchg
cmp
dec
adc
dec
pop
mov
mov
sub
sbb
fisub
(bad)
sbb
and
jmp
adc
scas
retf
xor
enter
arpl
fdiv
ret
das
mov
adc
leave
addr16
cmp
sbb
push
popf
mov
push
xlat
mov
pop
test
pop
adc
gs
xchg
mov
push
xchg
popf
icebp
pop
popf
inc
sti
xlat
js
ss
dec
sbb
int
mov
adc
retf
mov
dec
adc
mov
pop
mul
xchg
xchg
sub
push
add
sub
call
aam
pop
dec
sub
hlt
adc
push
dec
cmp
sahf
xor
cmp
cmp
ds
push
cmps
lahf
jb
sub
push
inc
mov
xchg
loope
(bad)
inc
ror
fistp
inc
or
dec
adc
cdq
jp
pop
stc
(bad)
fs
scas
js
aam
cmp
adc
xchg
dec
fild
push
dec
dec
pushf
inc
cmp
xor
arpl
fdivr
sbb
jns
inc
sub
lods
adc
sahf
cmp
xor
cmp
push
int3
cli
fsub
ja
jbe
push
xchg
fcmovu
dec
in
call
cwde
adc
mov
xchg
inc
jle
std
sub
cmp
nop
pop
call
cmp
pushf
xchg
popf
out
repz
ja
pusha
jmp
test
sbb
pop
dec
in
adc
das
test
gs
mov
hlt
jb
cmp
(bad)
cld
inc
inc
jno
pop
rcr
int3
jmp
std
inc
call
pop
pop
pop
mov
jmp
cld
mov
out
mov
jmp
jecxz
(bad)
cmp
push
paddsb
pop
leave
data16
out
jmp
pusha
add
cmp
pusha
or
pusha
inc
mov
pusha
ret
pusha
retf
sbb
inc
fstp
movs
inc
movs
aaa
adc
inc
and
mov
dec
les
fadd
mov
movs
and
push
jmp
fcmovnbe
mov
hlt
lds
pop
dec
cld
push
cmp
sti
mov
(bad)
jecxz
jecxz
mov
in
pop
xor
mov
int3
ror
jp
rcr
ja
jg
fisubr
jmp
in
bnd
test
mov
outs
cld
cmp
ins
inc
nop
shl
dec
dec
movs
sar
scas
fnstenv
std
int3
jae
lods
pop
sar
mov
sbb
dec
in
xor
ins
out
xor
xchg
sbb
mov
sbb
pop
mov
cld
fsub
add
xor
sub
fiadd
xchg
and
mov
hlt
mov
ror
sbb
sbb
rol
add
push
pop
inc
sub
mov
ja
jmp
add
sbb
cmp
xor
push
in
call
sub
cmp
call
or
mov
xchg
imul
cld
loope
mov
or
pop
dec
cld
clc
pushf
cmp
jns
clc
stos
xlat
adc
jle
(bad)
sbb
sub
repz
adc
cmp
xchg
in
clc
mov
fdiv
out
cmps
pushf
fidivr
cmp
ret
fsqrt
cmps
sbb
push
sub
(bad)
cld
ss
cdq
jmp
lods
or
arpl
lock
sub
pop
(bad)
jbe
lahf
aad
or
pop
or
ins
rcr
int3
(bad)
mov
lods
cmp
fidiv
cmp
inc
(bad)
sbb
dec
repz
sbb
(bad)
lods
xchg
lods
pop
lea
sbb
test
sub
pop
adc
shl
mov
jl
in
push
jle
aam
stos
mov
std
fcomp
jnp
ins
and
pop
push
(bad)
sbb
sub
sbb
or
mov
sub
movs
call
pop
inc
mov
cld
nop
lods
int3
mov
fcmovu
or
sub
and
xor
push
les
xchg
push
fcom
inc
fnstcw
shr
in
test
sub
jmp
lods
xor
xchg
fst
fidivr
mov
jne
dec
int3
pop
movs
sub
sub
xchg
ins
les
ret
lods
stc
lods
frstor
in
loop
pushf
cld
lods
xchg
sub
sbb
adc
xor
rcr
xchg
sub
lods
nop
jp
or
jmp
mov
mov
mov
cli
mov
ficom
stos
int3
nop
cli
xor
or
dec
sub
rcr
dec
mov
mov
(bad)
push
pop
adc
loop
cmps
jl
sub
lods
imul
mov
or
jne
outs
mov
pop
ficom
neg
dec
add
adc
fdiv
inc
jmp
xor
movs
mov
push
sahf
mov
fcom
cmp
cmp
sbb
(bad)
imul
call
lods
mov
or
and
mov
les
imul
arpl
mov
fmul
jl
das
sar
aad
xor
lahf
sbb
mov
push
pop
mov
push
jp
cli
fucomip
iret
sbb
ror
aas
enter
jp
push
xor
dec
cmp
in
retf
outs
fcom
adc
lods
ins
mov
fiadd
jnp
sbb
(bad)
pop
xlat
(bad)
in
xor
pusha
mov
repz
outs
sub
fsub
jl
sub
or
pushf
pop
ins
fstp
mov
add
lods
jmp
ins
push
adc
cmp
je
jg
mov
and
wrmsr
fcom
dec
sbb
sbb
lods
xchg
cmp
or
shr
adc
fcom
mov
out
pushf
jmp
into
fcom
mov
ins
xor
std
dec
call
pop
adc
jae
xchg
or
pop
cmp
call
mov
int3
adc
ficom
sbb
pusha
jg
(bad)
stos
mov
in
pop
rcr
xchg
pop
dec
hlt
adc
xor
enter
sub
test
mov
mov
or
int3
in
mov
(bad)
stc
fcmovnu
xor
call
adc
retf
sti
in
cs
sbb
and
pop
pop
call
mov
cmps
dec
fst
fsubr
popf
pop
int3
mov
mov
xor
in
rcl
lods
and
adc
mov
jbe
test
mov
outs
or
icebp
loopne
sbb
cmp
cli
sbb
popf
lods
add
pushf
push
jp
adc
jge
lods
cmp
test
or
xchg
int3
fnstenv
cmp
repnz
cld
xor
push
jl
sub
cs
movs
fld
ret
ins
pop
pop
ds
sbb
fsincos
jl
fucomi
cmps
int3
sbb
cmp
pop
pop
push
jmp
pusha
mov
inc
sub
or
dec
pop
cmp
loop
sub
add
inc
pop
push
in
(bad)
ins
iret
pop
add
dec
mov
ins
xor
in
jge
dec
int3
mov
lock
nop
push
aad
fwait
or
sub
sbb
mov
ins
jno
(bad)
popf
sbb
sbb
aad
in
sbb
xchg
sbb
sbb
mov
aam
leave
cmp
mov
jmp
test
mov
(bad)
mov
mov
cdq
ds
popf
scas
pop
test
aas
jmp
push
(bad)
xor
lahf
mov
or
movs
push
jp
fcmovnu
fcom
cmp
int3
movs
sti
jne
fsubr
sbb
mov
add
cmp
or
pushf
sbb
ins
int
int3
jae
pop
sbb
stos
and
pop
stc
jge
pop
pop
mov
cmps
fdiv
mov
bswap
enter
and
bound
(bad)
cmp
jo
mov
lock
pop
sbb
lods
icebp
ins
mov
sti
dec
sar
jge
cmp
cmc
lods
int3
lods
cld
hlt
pop
sub
mov
data16
shl
or
xor
lock
sbb
and
cs
ror
xchg
lea
scas
dec
repnz
push
retf
cli
cld
push
cmc
xchg
adc
ins
pop
outs
dec
fidivr
push
push
fsub
int3
jmp
shl
stc
cmp
dec
and
jno
dec
jge
cmp
jp
shl
shl
xor
lods
mov
xchg
jle
or
sbb
fsub
xlat
popf
jmp
jecxz
adc
ja
sub
mov
mov
shr
pop
mov
pop
cmp
dec
cmp
dec
cmp
lahf
mov
sti
sbb
icebp
fadd
dec
lods
or
sbb
ins
hlt
sub
gs
xchg
fdivr
pushf
jb
pop
mov
pop
stc
or
mov
push
dec
or
sar
loope
sbb
inc
pop
push
int3
stos
pushf
mov
lods
aas
mov
cmp
stc
ret
ins
and
mov
jnp
mov
add
mov
or
sbb
lods
xchg
rol
sub
(bad)
mov
lods
test
aam
fucomp
fsubr
cmp
ds
sbb
or
and
int3
push
lods
mov
int3
or
pop
enter
push
push
cld
mov
ja
fs
xor
sub
jnp
add
cmp
popa
ins
ins
push
jb
ins
mov
clc
cld
jecxz
jmp
ret
ins
push
sub
pop
mov
xor
mov
leave
mov
les
repz
sbb
int3
retf
lea
mov
ss
pop
lods
xchg
sub
dec
mov
xchg
fdivr
imul
push
sbb
dec
push
inc
aam
int
xchg
jae
stos
int3
inc
mov
shl
pop
mov
fcom
lea
sub
cmp
pop
sbb
loopne
cli
push
mov
fsubr
ficomp
lods
(bad)
(bad)
fisub
outs
nop
pop
and
pop
sti
push
lods
mov
fstp
call
inc
sub
call
cmc
push
popf
xchg
in
lods
and
jge
(bad)
int
cmp
mov
jg
(bad)
loopne
push
add
xor
jo
mov
dec
pop
cli
in
xchg
call
cld
es
test
aam
in
ror
cli
arpl
aam
mov
(bad)
int3
mov
pop
mov
imul
push
fsub
pop
xchg
lods
inc
in
(bad)
call
sbb
add
aam
pop
adc
ins
ja
(bad)
in
sbb
loop
sbb
pop
scas
cli
shr
fisttp
out
mov
out
or
ins
fisub
pop
in
cmp
gs
jmp
js
lock
mov
icebp
int
jge
pop
sbb
mov
sti
ins
add
pop
mov
aad
int3
bound
pop
sub
popf
mov
aam
cmp
cld
pop
pop
in
shl
mov
into
lods
retf
ficomp
adc
int
std
xchg
fstp
es
lods
in
shr
icebp
lods
cmp
ds
sti
fisttp
ins
fcomp
(bad)
loope
fnstenv
pop
cli
stos
lods
inc
fadd
jl
sub
sti
ins
pop
cmp
sub
ror
dec
sbb
push
(bad)
mov
stos
or
push
mov
pop
mov
sar
retf
dec
xor
lods
or
jecxz
push
bound
ret
xchg
popf
sbb
push
and
inc
loop
int3
out
mov
fidiv
ins
imul
inc
ins
ror
xchg
(bad)
lock
ds
xor
mov
dec
mov
fsub
mov
mov
jp
aaa
mov
pushf
cld
sbb
cli
call
fwait
cmp
pushf
add
ins
or
mov
adc
and
int3
jmp
pusha
or
int3
dec
mov
jl
mov
in
add
ins
sbb
mov
outs
sbb
sub
push
mov
mov
sub
push
mov
shl
cmp
mov
jl
push
cmc
les
mov
ins
retf
jge
les
jl
(bad)
jne
mov
rcr
mov
fcom
pop
ins
mov
popf
movs
sar
int3
push
mov
push
sbb
push
into
sar
sti
mov
pop
adc
ins
and
jae
int3
inc
ins
clc
fldcw
cld
jns
hlt
or
aad
xor
les
dec
popf
cmps
dec
pop
lods
aad
adc
int3
sbb
leave
jl
fidiv
fcomp
lods
cmc
dec
adc
cwde
cmp
jl
cmp
out
call
sbb
or
pop
mov
rcl
ds
jmp
xchg
ins
aas
and
pop
dec
sub
mov
sbb
movs
lods
stos
aam
pushf
sbb
lds
outs
adc
xchg
or
ins
mov
mov
fild
jge
jns
sbb
pop
xor
icebp
pop
push
dec
xchg
mov
cmp
fcomi
push
aad
int3
add
jl
pushf
pop
shl
lods
lods
push
stos
je
pop
ins
cwde
cli
sbb
xlat
adc
cld
sahf
popf
fsubr
(bad)
jge
add
dec
std
lods
neg
add
cdq
fcom
or
cmp
aam
mov
lea
pop
scas
rcr
mov
rcl
sbb
rcl
ret
pop
test
inc
adc
into
cmp
repz
push
jp
ins
addr16
lods
aam
ins
xchg
sbb
sbb
test
cmp
enter
add
jo
leave
sbb
fdivr
dec
(bad)
in
out
mov
dec
jne
xor
scas
sbb
les
call
adc
stos
cmps
lods
mov
pushf
push
mov
lock
xor
(bad)
out
inc
out
sub
jmp
fnstsw
cld
push
adc
jmp
call
fcomp
jnp
add
ds
ins
mov
pushf
adc
sbb
fdivr
pop
cli
test
jne
test
mov
sbb
or
int3
jbe
repz
ss
pop
pushf
push
mov
jge
jmp
push
shl
fs
push
pusha
popf
sbb
(bad)
fistp
fmul
push
dec
icebp
lods
jge
lods
inc
int
nop
aam
into
pop
sub
sub
fmul
cld
sbb
jecxz
ins
and
push
jmp
jle
in
mov
je
mov
or
cld
ret
dec
test
and
cwde
fisub
fdivr
lea
xor
(bad)
sub
out
and
mov
nop
jne
jnp
sub
mov
add
stos
dec
test
or
sbb
jnp
lods
push
mov
jmp
xchg
int3
jb
js
fcomp
fidivr
shl
ds
mov
mov
xchg
mov
mov
(bad)
jmp
rcl
jl
sub
push
lods
lahf
cmp
ror
repnz
call
pop
mov
mov
pop
fnstsw
ins
mov
into
sbb
sahf
shl
int3
xchg
cmp
inc
fbstp
cld
cmp
mov
popf
out
xor
cli
cld
cmps
dec
lahf
int3
movs
mov
pop
aam
hlt
dec
ins
retf
dec
(bad)
in
retf
lods
xchg
scas
sbb
fist
push
push
out
jl
cmp
popa
sar
and
pop
out
push
inc
retf
shl
lods
sbb
cli
cwde
jmp
or
sbb
int3
popf
ins
adc
je
ret
mov
sbb
sbb
int3
(bad)
int3
lahf
ins
mov
cmc
cmp
aad
stc
sub
mov
mov
rcr
or
xor
sub
cmp
jle
rcr
jmp
popf
in
sti
pushf
fimul
xchg
pop
lods
hlt
jge
int3
ret
sbb
fmul
add
mov
inc
clc
pop
popf
pop
push
pop
lods
push
popf
call
out
or
ins
outs
pop
fdivr
sub
mov
sub
sub
mov
ins
dec
dec
ficomp
or
call
adc
cmc
loop
(bad)
cmp
int3
mov
jge
cld
rcl
add
cmp
pop
mov
popf
ficomp
pop
push
dec
cmps
cld
lods
cdq
pop
in
sbb
jmp
sub
ins
loope
pop
pop
sahf
sub
pop
push
mov
mov
jl
pushf
inc
or
mov
jmp
mov
cmp
pop
cmp
fnstsw
cmp
cmp
pop
pop
test
sahf
dec
call
enter
popa
mov
pop
jl
in
sbb
and
pop
bound
ins
jmp
pushf
dec
mov
pop
jl
lods
push
aas
push
or
les
pop
(bad)
dec
xor
pop
(bad)
in
push
pop
movs
jo
pushf
push
sub
jecxz
in
call
popf
push
pop
push
in
sti
jl
pop
mov
sub
cmp
jae
std
out
ins
or
dec
sub
das
pop
ret
cmp
fsubr
ins
in
pop
mov
aas
push
adc
push
(bad)
stc
fstp
vmovups
cmp
xchg
add
leave
int3
aam
sub
stos
in
dec
lods
cmp
jo
jl
jnp
aas
ins
outs
dec
outs
push
bound
mov
pop
(bad)
or
xlat
pop
push
mov
ins
ds
fs
out
pushf
xor
and
mov
sbb
cli
pop
pop
ins
ret
aam
sbb
(bad)
push
js
pushf
adc
mov
pop
jge
xchg
mov
fdivr
fsub
sub
pop
jns
push
or
push
fsubr
jmp
cmp
inc
jmp
into
cld
bound
adc
pop
lods
sub
pop
push
sub
clc
xchg
and
bound
xchg
sti
test
pusha
imul
fstp
fcomp
cs
cmp
call
jmp
fmulp
call
lods
sbb
int3
inc
dec
pop
shl
pushf
xchg
(bad)
fsubr
ins
fmul
adc
ins
pop
or
lahf
fcmovnu
daa
mov
int3
(bad)
add
ret
ds
mov
sar
ins
fdiv
sbb
inc
mov
sar
push
mov
lods
jle
mov
retf
or
int3
adc
(bad)
lods
ficomp
cld
push
push
aad
pop
cdq
in
lock
ss
push
fs
(bad)
in
or
fsubr
or
mov
(bad)
cld
pop
add
in
jmp
leave
ins
sti
movs
xchg
jns
pop
cdq
mov
in
jmp
fcmovnbe
sar
or
pop
(bad)
hlt
aad
bound
pop
jmp
(bad)
cmc
cld
pop
adc
out
movups
pop
inc
sbb
sbb
lock
pop
fdivr
xchg
dec
push
fstp
mov
adc
(bad)
mov
pushf
and
cmc
cld
(bad)
fnstenv
lods
adc
shl
or
fdivr
jl
in
add
xor
push
sbb
cld
dec
mov
jl
jl
aad
pop
aad
push
loop
adc
fild
lahf
dec
in
mov
cmp
jge
int3
sbb
cmp
inc
xchg
cdq
pushf
pop
pop
pop
sbb
cld
mov
mov
lock
rcr
cmps
pop
stos
dec
mov
shl
scas
sar
pop
jmp
sti
loope
xchg
shl
aam
jge
mov
ins
mov
sub
mov
int
loope
loopne
ss
rcr
call
adc
dec
rcl
jmp
mov
test
cdq
pop
dec
cmp
in
jo
popf
sbb
mov
mov
nop
sbb
mov
push
(bad)
ins
lods
pop
jbe
ins
(bad)
int3
dec
push
cs
in
jge
mov
mov
pushf
sbb
mov
icebp
rcr
push
jge
(bad)
fnstcw
fsubr
pop
or
sbb
lock
ins
jg
(bad)
rcl
sub
lods
push
pop
mov
mov
fisttp
sbb
aad
xlat
(bad)
in
sbb
fs
int
data16
inc
fdivr
sbb
jmp
inc
aam
sar
mov
pop
or
mov
and
mov
sti
imul
sub
int3
jne
ficomp
sbb
aam
or
dec
sbb
iret
xor
fist
lods
mov
xor
pop
or
dec
(bad)
push
xlat
cmp
jae
out
mov
fistp
cmp
sahf
leave
jbe
cmp
movs
lods
xchg
pushf
stos
mov
(bad)
cmp
pusha
sub
scas
ins
fstp
mov
mov
mov
rcr
jo
jmp
inc
sub
cld
jle
addr16
pop
pop
mov
mov
fdivr
dec
aam
pop
lods
lahf
mov
cli
clc
jl
mov
ins
adc
fsubr
inc
or
sbb
jae
movs
cmp
mov
sbb
icebp
dec
ins
mov
rcl
(bad)
fistp
fs
pop
jl
dec
je
data16
mov
cli
cld
cmp
int3
mov
sbb
lds
in
pop
jg
pop
sbb
lods
pop
sbb
sbb
sub
cs
xor
push
dec
int3
mov
inc
sub
jmp
pop
sahf
sti
(bad)
pop
aad
xchg
sbb
ds
pop
int
fnstenv
ret
cld
adc
popf
pop
mov
push
sbb
push
jl
xor
pop
jb
das
sub
imul
clc
sub
int3
xchg
or
and
sbb
mov
inc
lods
mov
mul
rol
pop
push
in
int3
sti
jl
sub
fs
loopne
icebp
int3
mov
popa
jge
aad
jl
test
xchg
nop
pop
cld
ins
sti
lods
je
ror
stos
sub
scas
ins
pushf
sbb
fmul
dec
dec
or
push
lods
leave
dec
rcr
lods
pop
cmp
pop
test
fiadd
mov
mov
mov
fnstenv
stos
mov
ror
xor
xor
mov
jle
sar
mov
aad
push
mov
mov
loope
repnz
or
adc
cmp
cli
(bad)
out
sbb
cld
cmp
mov
or
mov
sbb
pop
int3
mov
sbb
out
fiadd
dec
sbb
dec
not
lea
cmp
test
dec
xor
xchg
sti
lods
scas
test
dec
adc
sbb
add
or
ret
dec
dec
call
sub
cmp
sub
in
(bad)
fisttp
test
fmul
mov
jle
add
mov
in
xchg
jge
movs
call
mov
in
inc
aam
mov
fild
jmp
adc
jbe
pop
push
hlt
sbb
cmp
int3
mov
cmps
add
in
std
dec
mov
int3
pop
fistp
(bad)
repz
sti
sub
into
mov
rcr
lock
mov
sar
in
jne
int3
fwait
pop
pop
cmp
dec
pop
adc
mov
sbb
lds
lods
call
mov
mov
lock
ins
inc
out
jmp
pop
fwait
sub
push
lock
inc
call
jmp
or
jmp
xchg
adc
push
cld
sbb
pushf
push
fmulp
in
test
ss
add
cmp
ret
pop
adc
and
je
mov
aam
pop
jne
pop
(bad)
push
ja
shr
out
loopne
in
mov
out
sub
jl
sbb
fcomp
sbb
cmp
mov
cmp
sub
dec
pop
pusha
sbb
shr
xor
cmc
fadd
mov
ins
xchg
call
cmp
stc
add
inc
pop
xor
push
pop
popf
pop
or
dec
jmp
mov
mov
scas
repnz
mov
movs
or
pop
sti
(bad)
jmp
fdivr
pop
push
pop
xchg
clc
mov
dec
adc
fwait
push
push
xlat
aam
aad
aad
aad
aad
ins
mov
into
mov
push
adc
call
mov
(bad)
mov
mov
pop
in
xor
add
mov
cmp
pop
push
mov
adc
jns
int3
ja
and
mov
dec
jmp
(bad)
sti
and
clc
pop
mov
jb
mov
xor
xchg
mov
ins
jae
int3
inc
cld
dec
rcr
data16
aaa
ret
ins
dec
rcl
imul
xor
dec
pop
fst
(bad)
sbb
test
jae
sti
xor
pop
or
in
lahf
push
mov
cli
jp
xchg
add
xchg
mov
rcr
add
push
jmp
or
mov
and
adc
jecxz
out
loope
fmul
add
xchg
fcomp
lods
dec
or
addr16
mov
lods
jnp
dec
sbb
sahf
jne
sbb
adc
ficomp
push
movs
stc
mov
test
cmp
mov
mov
shr
xlat
xor
push
es
sub
mov
outs
mov
push
fsubr
stc
shl
lods
pop
sbb
pop
inc
div
dec
and
xlat
push
ficomp
or
cwde
pop
outs
mov
movs
ins
pop
fs
pop
mov
sahf
cld
aad
in
call
inc
sbb
call
adc
push
sub
(bad)
adc
stc
jb
cmp
movs
rcr
or
ficom
jo
adc
call
je
dec
mov
(bad)
push
imul
scas
ret
push
loop
cmps
cld
adc
push
mov
or
jmp
jno
sbb
rcr
push
cmp
jmp
outs
sti
aas
ins
inc
outs
sti
aam
stos
sti
loope
imul
mov
and
pushf
mov
mov
lods
ss
fstp
icebp
je
dec
sbb
or
out
bound
aam
add
jg
popa
fst
mov
xchg
call
cs
push
sbb
jp
mov
mov
mov
aam
dec
jnp
cmp
mov
in
out
xchg
movs
rol
jmp
retf
lods
mov
rcl
or
ins
cmc
stos
sti
xchg
mov
hlt
call
popf
adc
cmp
dec
retf
xchg
push
push
or
adc
push
cld
popf
lods
lods
xchg
jp
xchg
cmp
fst
adc
sub
mov
call
dec
fcom
xchg
in
ja
cmp
ss
je
js
dec
pop
pop
fdivr
fist
push
aam
arpl
lock
cli
dec
icebp
push
sub
(bad)
sbb
int3
enter
popf
pop
push
fnstenv
jnp
fs
std
(bad)
pop
or
test
cmp
cs
xchg
cwde
(bad)
xchg
mov
pop
dec
sbb
push
dec
or
jmp
mov
pop
lods
adc
mov
les
lds
push
jno
in
call
sub
jg
call
imul
rcr
into
jne
adc
sahf
dec
push
push
fwait
aam
xchg
(bad)
shl
popa
inc
in
adc
mov
repnz
push
xor
push
rcl
mov
or
pop
call
mov
(bad)
cmp
test
adc
fsubr
out
not
jmp
sbb
adc
sar
cld
cld
push
iret
lods
xor
jb
nop
les
int
mov
shr
(bad)
js
scas
mov
cmp
lods
jmp
mov
int3
imul
jb
ds
inc
neg
cld
shl
xchg
push
inc
pop
int3
adc
xor
cmps
push
dec
call
push
adc
mov
xchg
pop
mov
into
sub
sbb
pop
leave
or
cmp
shl
mul
bound
pop
enter
dec
cmps
push
aaa
inc
push
mov
jge
ret
into
or
sahf
or
ins
int3
sub
arpl
(bad)
mov
jne
sar
shr
cld
sbb
cli
pop
dec
lods
test
cdq
les
sub
mov
inc
pushf
les
or
fidivr
sbb
pop
outs
mov
or
pop
mov
jo
push
or
dec
ffree
sbb
sub
pop
repz
repnz
lahf
popf
in
push
or
stos
gs
(bad)
mov
stos
cwde
mov
pop
mov
(bad)
ins
ret
ins
and
pop
popf
clc
xchg
dec
sti
cld
jl
push
in
jbe
imul
lods
add
sub
mov
repnz
jl
mov
ror
fst
int3
mov
mov
dec
hlt
fnstenv
movs
rol
cmp
in
inc
fs
sbb
adc
jns
mov
cli
jb
jmp
(bad)
sbb
mov
aam
leave
mov
jge
push
aas
or
mov
mov
push
sbb
int3
pop
jl
lods
fstp
cld
hlt
and
in
idiv
cli
mov
outs
mov
dec
and
ins
mov
dec
or
xchg
cmp
push
sbb
sbb
pop
jl
cdq
mov
lods
pop
cmp
fidivr
jno
fidiv
imul
pop
fcom
sub
jmp
fidivr
ds
mov
js
jns
push
int3
mov
adc
xchg
sar
pop
pop
pusha
pop
icebp
sub
adc
(bad)
cmp
mov
sub
ret
mov
aad
xor
(bad)
cmp
push
fdiv
into
popf
sbb
jmp
jecxz
je
sti
aam
xchg
hlt
les
add
xlat
call
int3
pop
ins
xor
mov
pop
mov
cmp
fld
pop
in
(bad)
(bad)
sbb
pop
lea
sbb
cmp
mov
(bad)
xchg
dec
cmp
sahf
pop
jb
int3
arpl
pop
pop
dec
jp
cld
idiv
mov
xor
fstp
in
stos
jl
cmp
sbb
in
adc
dec
adc
push
fimul
cmc
int3
test
in
loopne
pop
or
pop
lods
rcr
pushf
int3
or
ins
ror
xchg
mov
sar
sar
hlt
je
test
ins
scas
sar
pop
repz
cmp
hlt
(bad)
adc
mov
lods
ins
(bad)
sbb
mov
push
dec
or
sub
mov
(bad)
cmp
sbb
push
aad
mov
and
int
pop
adc
mov
fcomp
pop
leave
dec
pop
aad
fs
sti
xor
mov
cmp
xor
cli
cmp
sub
call
cmp
(bad)
mov
xchg
rep
repnz
xor
adc
mov
push
ss
jo
cmp
inc
aam
enter
xchg
aas
fdivr
sub
(bad)
fwait
fs
sub
jae
loop
xor
je
stos
mov
(bad)
fdivr
jl
sti
imul
mov
inc
rcl
sub
sbb
cdq
repz
xchg
nop
mov
rcr
inc
aam
pushf
fcmove
shl
call
or
fistp
mov
pop
lock
lods
mov
int3
je
cmps
cmp
mov
int3
ins
les
pop
and
push
pop
cmp
adc
and
nop
popf
jg
dec
cmp
lods
int3
cmp
fwait
xchg
shl
dec
int
cld
jmp
jp
jno
rcr
dec
outs
call
jmp
jo
and
fucomp
inc
fs
mov
clc
rol
ins
dec
mov
out
or
adc
pop
jmp
pushf
cli
jb
fcomp
sub
rcr
inc
cmp
xor
loop
push
fcomp
aas
sti
cmp
rep
repnz
ret
scas
mov
inc
ins
pop
cmp
adc
mov
sbb
cld
int
test
sub
fsub
cmp
stos
int3
aad
push
stc
fsubr
jge
or
cmp
pop
(bad)
dec
pop
adc
ds
jmp
mov
sub
pop
pushf
mov
fsubr
hlt
cld
sbb
les
pop
fstp
ficomp
mov
rcl
cli
lods
xor
sbb
dec
xchg
pop
and
les
sub
push
ja
mov
jnp
mov
pop
push
aam
fld
mov
movs
push
or
push
pushf
jo
in
mov
cmp
call
js
pop
sbb
cld
mov
push
outs
cli
(bad)
dec
mov
pop
dec
rcr
dec
mov
and
fwait
xchg
rol
jno
ins
xchg
icebp
mov
mov
pop
nop
cmp
push
fst
dec
mov
mov
push
mov
adc
sar
mov
add
sub
dec
sar
xor
pop
pushf
pop
aaa
or
jns
dec
imul
cld
and
xlat
inc
mov
cmp
dec
rcl
fmul
jl
dec
call
push
ins
mov
push
lods
int3
and
sbb
call
call
xchg
and
dec
rcl
pop
mov
xor
sar
sub
push
jns
jp
mov
ins
adc
int3
pop
mov
cli
push
or
(bad)
inc
fs
ins
and
and
mov
mov
fcomp
xchg
dec
rcl
pusha
cmp
xor
xchg
repnz
adc
popa
pop
scas
adc
sub
push
dec
fs
fcom
dec
xor
int3
movs
pop
xchg
sub
rcr
leave
adc
ins
sahf
jo
adc
mov
jne
imul
and
sub
push
test
lock
pop
test
rcl
dec
mov
mov
call
pop
mov
cld
sub
pop
jmp
cmps
jl
std
dec
fist
sahf
push
sub
or
mov
int3
add
pop
cld
dec
mov
shl
pop
iret
mov
xor
dec
dec
xchg
mov
ja
repnz
pushf
aad
pop
cli
xchg
fdivr
cs
mov
mov
nop
pushf
push
pop
mov
fcomp
xchg
inc
sbb
fidivr
push
push
mov
ins
pop
push
sub
mov
lock
push
mov
xor
es
sub
add
ins
adc
sbb
pushf
mov
add
dec
and
int
mov
scas
jp
mov
pushf
cmps
(bad)
aam
jne
cmp
ins
push
fcom
push
pop
fnstcw
cmp
ins
jmp
pop
push
jno
(bad)
pop
(bad)
imul
dec
or
xor
(bad)
rcr
adc
pushf
pushf
sbb
or
repz
dec
shl
daa
jmp
and
ror
mov
mov
clc
pop
ror
push
pushf
sub
mov
call
shr
fidiv
xor
cmp
outs
imul
lods
daa
sbb
push
les
pop
inc
pop
sbb
stos
ins
pop
mov
rcr
sti
cmp
sahf
cmps
fcomp
(bad)
lods
jg
in
inc
sbb
jnp
dec
mov
fadd
cld
test
pop
sti
daa
mov
sbb
push
adc
or
jge
repz
dec
xor
xchg
sbb
jmp
mov
pop
sbb
sbb
push
jnp
mov
cld
push
sub
dec
push
mov
aaa
(bad)
jmp
lahf
int3
cs
push
not
jmp
dec
ret
or
call
mov
mov
pop
pop
adc
aam
mov
iret
sub
nop
ror
or
or
lods
fsub
sub
fwait
in
jmp
stc
icebp
pop
repz
dec
dec
fidiv
dec
loop
call
fistp
pop
sar
loope
fwait
adc
cmp
out
inc
aam
mov
push
pop
sahf
xor
sbb
mov
rcr
pop
pop
sar
mov
test
mov
les
adc
imul
sub
call
loope
push
aam
mov
push
mov
std
arpl
sti
mov
sub
inc
xchg
ins
mov
retf
aaa
fmulp
or
lods
xchg
ins
and
sar
jmp
arpl
sbb
fwait
dec
pop
or
ss
gs
sbb
sbb
ins
cwde
cmps
mov
mov
adc
sahf
mov
lods
ins
lods
dec
cwde
or
fdiv
push
mov
mov
sar
adc
sbb
ins
je
mov
fst
mov
cli
test
jp
retf
in
sbb
retf
sbb
xchg
neg
xor
jge
cmp
or
sbb
dec
jg
jle
les
and
or
push
sub
fcomp
int3
aas
sub
push
inc
fwait
lahf
cli
int3
jge
jo
mov
rcl
add
sub
mov
ins
pop
popf
jl
jo
(bad)
mov
cld
(bad)
pop
dec
add
sub
add
lods
sahf
jl
clc
cmp
jo
pop
sti
icebp
stos
jnp
jmp
(bad)
inc
cld
adc
mov
jmp
(bad)
lods
cmp
dec
or
fcmove
je
aad
ret
lods
sbb
shr
jp
mov
nop
mov
push
pushf
test
cmp
std
sub
jge
mov
jl
mov
mov
xchg
jge
adc
cmp
fstp
fdiv
or
rcl
mov
push
pop
xor
sbb
sti
mov
call
fsub
sub
shl
mul
aam
paddsb
xchg
mov
fnstsw
xchg
bound
movs
sbb
pop
ss
pushf
shl
xlat
push
push
ins
jp
mov
cwde
cmp
xor
pop
pushf
mov
sub
sub
sar
or
(bad)
fprem1
icebp
jmp
dec
jo
xchg
sbb
push
aam
loope
mov
aas
dec
jmp
jge
retf
rcl
lock
dec
mov
ficomp
mov
inc
pop
outs
or
imul
outs
imul
cld
test
push
jl
sub
pusha
pop
xchg
pop
or
or
mov
retf
lods
mov
data16
xlat
push
jl
mov
mov
in
or
cmc
push
call
mov
stc
scas
(bad)
add
mov
xchg
pop
mov
scas
jmp
out
not
out
sub
cdq
ds
rcr
je
mov
or
pop
int3
sar
shl
cmp
aam
inc
or
or
pushf
jnp
popf
pop
pop
pop
xchg
call
jae
jo
mov
lock
ins
es
pop
jmp
push
rcl
dec
fwait
cmp
dec
pushf
imul
lods
push
shr
cmp
add
repnz
pop
les
in
mov
fwait
and
test
sbb
sbb
pop
xchg
ret
mov
dec
dec
pop
adc
pop
scas
std
mov
les
fidivr
sbb
aam
int3
dec
push
pop
(bad)
push
sbb
or
lods
loop
sbb
and
xchg
jmp
loope
pop
or
add
leave
aas
jle
jne
dec
mov
jmp
out
pushf
adc
ds
jge
add
(bad)
dec
jne
cs
ins
or
jge
cld
std
mov
cmp
sbb
mov
fcmovu
adc
mov
movs
push
mov
mov
fst
dec
out
fs
int3
push
jmp
lods
and
cmps
mov
push
sbb
xchg
lods
push
aam
mov
fistp
pop
rcr
sub
mov
jl
jl
ins
push
sbb
mov
jmp
pop
out
push
scas
jmp
cld
repnz
ins
xor
cmp
adc
or
sub
ja
stc
jl
movs
or
add
sbb
pushf
sahf
in
fmul
mov
sbb
pop
test
mov
fcom
in
hlt
cld
ror
xor
xchg
ins
popf
dec
jo
test
fdivr
xchg
sbb
in
sub
fistp
push
jnp
xlat
ins
push
dec
dec
xchg
movs
pop
(bad)
mov
inc
dec
xlat
jl
jae
das
fsub
test
lea
mov
sub
xchg
cmp
lods
sub
jp
xchg
inc
sub
aad
jmp
jne
mov
inc
fs
out
iret
fs
(bad)
repz
or
cld
inc
rol
pop
mov
adc
pop
pusha
mov
mov
sub
out
push
ins
inc
mov
cmp
js
pop
jmp
outs
pop
fs
xchg
mov
aam
dec
dec
test
int3
jbe
aaa
add
adc
les
stos
rcr
sbb
les
jl
mov
sbb
in
loop
fs
inc
xchg
test
mov
vorps
pushf
jne
jno
push
mov
mov
aad
aad
hlt
inc
fdivr
pushf
jno
xor
xchg
ins
mov
cmp
dec
icebp
out
aas
test
dec
dec
shr
sub
enter
mov
adc
sub
jg
sbb
mov
jmp
mov
ror
mov
dec
icebp
sbb
ins
sahf
dec
jg
loope
mov
fnsave
(bad)
push
stc
jmp
adc
jecxz
ins
(bad)
cld
sbb
ret
sbb
ins
jmp
pop
aam
push
lods
push
sub
out
aam
repz
cmc
rcl
rcl
rcr
pop
ds
fsubr
arpl
int
xor
pop
data16
loop
sti
xchg
xor
cmc
repz
hlt
lods
inc
mov
or
pop
icebp
fiadd
mov
xchg
sbb
xchg
ins
jno
or
cmp
sub
(bad)
sbb
mov
in
cli
fcomp
call
dec
lods
push
or
sti
or
sti
(bad)
jecxz
test
cld
sub
call
xchg
sub
retf
jne
pop
out
fisttp
fucomp
jmp
test
push
mov
sbb
ja
rcr
jecxz
aas
pushf
push
mov
sti
mov
xchg
pop
outs
shl
inc
mov
stos
push
dec
lods
in
test
cld
inc
jno
sub
push
std
les
jge
cmc
nop
pop
cwde
popf
mov
dec
das
mov
xchg
xchg
and
push
cmp
div
ins
pop
dec
mov
scas
mov
sbb
gs
pop
in
ins
mov
adc
in
sub
push
fistp
xlat
idiv
cli
pushf
xor
mov
ret
in
push
cmp
fstp
in
adc
mov
jl
adc
pushf
xchg
mov
ins
cmps
cmps
fmul
sahf
or
mov
mov
pop
xor
rcr
jmp
data16
cmp
addr16
out
mov
sub
cmp
ins
aam
aam
jb
pop
sub
pushf
lods
or
mov
mov
cld
jge
pushf
push
sub
dec
jb
jns
in
cmp
sbb
xor
lods
leave
mov
ins
dec
push
xchg
push
adc
pop
pushf
popa
lea
int3
xchg
xchg
sar
inc
sub
pushf
in
sub
pop
int3
inc
sub
xor
lea
js
xor
mov
dec
fdiv
in
gs
xor
int
pop
adc
push
cmp
push
stos
popf
pushf
aaa
out
shl
mov
loope
lods
add
ins
adc
popa
ins
and
xchg
dec
sbb
fsubr
dec
mov
ins
loopne
push
mov
pop
mov
leave
in
cwde
mov
(bad)
push
mov
dec
xchg
jne
sbb
pusha
dec
jle
jmp
pop
aas
or
jo
fst
xor
ficomp
mov
mov
jmp
sbb
xchg
outs
or
jbe
xor
int3
inc
cmp
push
(bad)
in
in
jl
sti
cmp
lods
aad
sbb
sbb
or
add
clc
lods
icebp
jge
dec
sbb
sbb
out
mov
add
stc
sbb
mov
(bad)
jae
mov
sti
in
mov
xchg
sub
cld
or
mov
mov
jne
xchg
jnp
fwait
sub
sbb
les
mov
shr
pop
xchg
add
int3
ret
jnp
xor
sti
dec
mov
adc
xlat
jle
sbb
sub
(bad)
xchg
out
in
xchg
mov
cmp
mov
or
inc
fldlg2
and
rcr
xchg
int3
adc
sbb
clc
or
cmp
pop
pop
or
adc
adc
pop
dec
xor
shr
push
jl
inc
cmp
call
cs
gs
mov
mov
lahf
dec
rcr
add
xchg
les
js
stos
push
jo
jmp
fwait
jae
cmp
dec
int3
lock
cmc
sbb
fwait
pop
pop
aas
jmp
sub
inc
pop
mov
ins
inc
jmp
cld
or
fsubr
sbb
xor
lods
pop
pop
sbb
cmp
mov
fisttp
pop
push
jbe
(bad)
sub
or
(bad)
sub
aaa
dec
mov
js
xchg
test
pop
cli
mov
pop
jmp
shl
adc
mov
or
push
movs
cmc
mov
pop
and
pop
push
fdiv
cld
call
stos
push
cmp
pop
pop
mov
dec
sub
movs
inc
mov
cmp
sbb
xor
mov
push
sbb
ins
ds
popa
in
sbb
mov
push
sbb
stc
test
pop
sbb
push
sbb
pop
stc
xchg
mov
pop
aaa
mov
mov
mov
ror
ins
xchg
adc
push
lods
pop
int3
push
sub
aaa
sbb
dec
paddd
jmp
shr
xchg
pop
dec
push
pusha
push
outs
aaa
fcom
add
pop
mov
jno
inc
jmp
gs
popa
and
push
xor
enter
dec
movs
xlat
pop
mov
pop
push
pop
dec
stos
popf
jl
or
and
dec
ins
xlat
nop
stc
shr
mov
iret
out
cwde
lods
pushf
(bad)
cld
mov
leave
push
sbb
(bad)
push
jl
xchg
cld
push
pushf
pushf
dec
push
pusha
fld
adc
mov
outs
frstor
int3
mov
data16
test
sbb
add
xchg
les
lahf
dec
inc
jno
xchg
cdq
retf
push
fimul
xchg
mov
int3
sahf
fldcw
push
jl
xchg
mov
pop
aas
xor
jnp
shl
sub
imul
fwait
mov
mov
sti
mov
into
adc
cdq
sbb
pop
call
outs
push
cmp
sbb
xchg
mov
sub
pop
popf
outs
loope
pusha
adc
mov
push
sbb
cld
(bad)
ins
push
movs
out
lahf
shl
mov
fdiv
sbb
push
enter
fisubr
pushf
scas
rcr
js
dec
jb
lock
pop
enter
xor
mov
stc
pop
xchg
shr
cmp
inc
cli
dec
cmp
dec
lock
ins
sbb
or
xchg
out
xchg
jnp
int3
pop
dec
adc
fidivr
and
pushf
scas
pop
lods
jns
xchg
ins
dec
cmp
test
add
pop
pushf
jge
ins
daa
mov
dec
cdq
test
test
mov
rcr
sub
daa
and
cmp
pop
adc
mov
pop
nop
sbb
cdq
mov
cmp
ins
adc
shr
rcr
jbe
in
pop
xchg
fdiv
sar
rcr
fidivr
mov
dec
out
mov
pop
pushf
fmul
pop
pop
int3
lods
add
mov
(bad)
dec
sbb
dec
int3
into
scas
dec
rcr
cmp
pop
test
fisttp
xchg
pop
xchg
mov
dec
(bad)
call
cmp
jmp
(bad)
sar
jae
xchg
lods
mov
sahf
mov
xor
mov
movs
pop
imul
sahf
cmp
adc
or
adc
push
in
cli
cld
sub
mov
add
fwait
ins
jg
dec
mov
fcmovu
pop
gs
stos
or
push
adc
sbb
imul
sub
iret
dec
or
or
jle
fsubrp
into
fnstcw
adc
pop
cmc
mov
mov
mov
jbe
imul
xchg
ins
fcmovbe
fldcw
in
or
aam
adc
sbb
fwait
xor
ds
fidivr
cmps
pop
lods
xor
jb
cmp
test
cld
aam
int3
push
dec
hlt
mov
push
push
jp
nop
(bad)
call
ss
inc
xchg
test
sbb
pop
repnz
mov
inc
dec
pushf
pop
retf
nop
mov
rcl
push
cld
cmp
sbb
mov
push
cmp
minps
ins
(bad)
or
fimul
mov
(bad)
adc
sub
fwait
mov
pop
repz
mov
cmp
aam
cld
(bad)
fistp
dec
aaa
addr16
push
xor
(bad)
jl
pop
jp
lods
leave
pop
cmp
xchg
mov
rcr
xchg
repnz
mov
fstp
sbb
jl
fisubr
sbb
sub
call
mov
jno
dec
repz
sar
mov
shr
mov
retf
pushf
mov
sbb
or
cmp
jg
xchg
cmc
movs
adc
cli
sar
in
jecxz
mov
and
ins
mov
push
pop
rcr
ins
inc
cld
pop
or
pushf
xchg
xchg
test
rcl
sti
fcmovnu
sti
push
mov
sbb
les
or
in
(bad)
jg
push
int3
dec
mov
push
repnz
stos
lods
iret
inc
fwait
dec
hlt
xchg
xor
mov
or
jnp
pop
xor
fmul
xor
pop
sub
fdiv
push
push
push
fistp
pop
clc
mov
ret
loope
ja
cmp
repz
in
jge
jne
popa
mov
aam
pop
dec
add
adc
mov
push
push
inc
arpl
push
clc
dec
mov
cmp
push
pop
jnp
sub
push
mov
mov
retf
mov
cmp
sub
cmp
pop
sbb
std
mov
aad
push
push
hlt
ins
int3
pop
int3
repnz
je
nop
fnstenv
aad
jbe
push
or
xchg
xor
pop
jnp
sbb
mov
call
cmp
ins
pop
ins
in
shl
lock
sub
jge
sbb
cli
xchg
adc
fcom
fbstp
sbb
iret
xchg
sbb
int3
ins
dec
pop
mov
lods
and
ss
or
arpl
push
push
sbb
jmp
inc
cmp
lods
in
sub
xor
fld
pop
or
arpl
jp
cmp
into
xchg
cmp
retf
cld
dec
mov
pop
int3
sahf
or
mov
test
shl
cmc
pop
addr16
sbb
aad
out
mov
(bad)
sti
push
mov
pop
jns
mov
lods
push
mov
in
xchg
fs
pushf
cmp
cld
ror
jb
sbb
test
jo
pop
scas
pop
cdq
pop
cld
fcmovbe
in
rcr
sub
mov
inc
fs
test
in
sub
pop
sbb
ins
xchg
adc
mov
daa
int3
jecxz
cmps
cmp
xor
sub
lods
xchg
mov
dec
rcl
dec
cs
(bad)
ds
(bad)
lods
xlat
jg
cld
hlt
shr
mov
pushf
int
or
mov
(bad)
fnstcw
push
jae
cmp
xchg
xlat
jl
pusha
xor
dec
sub
mov
mov
cmp
sbb
xchg
or
dec
sub
int3
jno
mov
inc
cmp
(bad)
fcom
sahf
rcr
pop
(bad)
sbb
push
test
jmp
sti
adc
inc
(bad)
pop
test
sahf
xchg
pushf
pushf
mov
mov
shr
aad
mov
sbb
ins
aam
lods
outs
mov
repnz
push
xor
mov
cmp
(bad)
shl
aas
push
call
fnstcw
sbb
call
jns
ror
rcl
(bad)
fidivr
sbb
mov
neg
mov
pop
adc
hlt
lds
inc
fwait
rcr
jp
sbb
push
pop
loop
or
inc
into
fidiv
rcr
pop
jl
lods
inc
pushf
push
dec
sub
ss
not
jp
sbb
sbb
int3
mov
sub
dec
mov
pop
ins
in
jl
lahf
jns
mov
jne
dec
in
sbb
div
into
push
leave
mov
pushf
rcr
hlt
inc
xor
aad
mov
(bad)
jnp
retf
ret
mov
repnz
sbb
pop
repnz
mov
sti
out
int3
leave
and
rep
pop
xchg
ja
jp
jl
jmp
mov
push
and
sub
int3
ins
mov
outs
mov
xchg
cmp
dec
je
mov
adc
int
mov
int3
push
lock
call
mov
xor
jg
push
sub
lea
mov
(bad)
jl
ret
pop
dec
lahf
mov
(bad)
or
push
cmp
retf
lods
push
mov
scas
inc
cld
sub
call
or
(bad)
fstp
inc
sub
pop
mov
mov
lods
aas
ds
cli
in
inc
pop
fbld
pop
jg
add
out
sbb
retf
shl
pop
in
cli
lahf
pushf
jnp
or
inc
jge
cdq
pop
mov
jl
cld
imul
mov
mov
int3
les
sub
fdiv
mov
out
hlt
xor
pop
in
ror
bound
add
test
and
pop
lock
stc
fs
mov
add
xchg
pop
gs
aad
(bad)
fsubr
and
jne
push
adc
dec
pushf
cdq
mov
fwait
lock
push
pop
jecxz
sti
(bad)
adc
fwait
pushf
dec
ins
jno
jl
es
adc
(bad)
pop
jge
fwait
daa
or
shr
mov
dec
sbb
adc
jmp
inc
pushf
std
mov
cwde
int3
dec
int3
mov
mov
mov
pushf
xchg
sub
in
adc
or
xor
mov
cdq
mov
fcom
sbb
pop
sbb
jnp
adc
(bad)
mov
sub
ins
jle
ins
aaa
int3
into
sbb
aam
sahf
cld
xchg
jnp
adc
fstp
fadd
lods
test
ins
adc
js
jge
sbb
push
rol
fcom
into
lods
or
shl
jmp
mov
push
int3
inc
(bad)
fstp
(bad)
aaa
jl
xlat
ins
cmp
xchg
int
(bad)
ins
pushf
out
or
sbb
lods
dec
or
ficom
pop
sub
(bad)
sbb
jb
aaa
adc
inc
mov
jae
mov
push
cld
sub
mov
push
pop
or
sbb
sbb
es
sub
jnp
fcomp
mov
pop
cmp
rcl
fdivr
cld
ret
sub
pop
in
push
sbb
mov
cwde
fidiv
lds
aad
jno
lods
aad
ins
mov
fmul
int3
neg
lods
jmp
sub
std
in
lea
xor
fdivr
sbb
leave
mov
or
or
sub
lods
rol
sbb
dec
out
into
ja
xor
loopne
fld
shr
pop
cmps
pop
pop
mov
nop
push
(bad)
xor
inc
dec
rcl
push
cmc
mov
sti
sbb
cdq
sbb
out
cmp
dec
cld
fimul
dec
fdivr
movs
ins
mov
mov
sub
mov
inc
(bad)
adc
aad
xchg
and
mov
sub
(bad)
lods
(bad)
cmp
(bad)
pushf
cmp
fcmove
or
popf
mov
push
inc
push
sub
cmc
add
xor
xchg
xor
ins
aam
sti
jl
push
shl
cmp
mov
fstp
jbe
mov
sub
push
repz
jmp
sbb
movs
dec
sar
lods
les
rcr
ins
sar
push
xchg
push
fcom
add
daa
lods
mov
js
popf
fiadd
pushf
enter
pop
adc
or
jl
fidivr
ins
sbb
mov
test
mov
mov
xchg
sahf
xchg
mov
repz
(bad)
ss
adc
lods
fwait
or
jmp
pushf
test
push
(bad)
int3
mov
popf
cmps
mov
jae
pushf
pop
pop
pop
movs
loop
cld
sbb
sbb
xor
jb
sbb
jmp
sti
jl
mov
daa
pushf
sar
fiadd
jae
sbb
popf
daa
sti
cli
sub
inc
xchg
aaa
stos
adc
push
sub
sbb
fcomp
sub
adc
enter
call
sub
(bad)
clc
cmp
pop
cmp
mov
add
fsubr
mov
mov
xchg
loop
fistp
daa
dec
shl
mov
arpl
jns
xchg
bound
xor
clc
or
sbb
pushf
sub
fcomp
fs
push
push
xchg
push
sbb
cmp
pusha
xchg
scas
imul
xor
push
cmp
jne
and
adc
test
sub
lahf
ins
or
mov
sbb
push
in
lods
xor
add
stos
mov
xor
cdq
xchg
pop
pop
jg
loopne
push
or
lods
add
jns
pop
int3
push
lods
and
fcmovnbe
jle
popf
iret
push
leave
dec
int3
ret
(bad)
mov
mov
or
mov
in
add
cld
push
xchg
mov
pop
sub
jl
repnz
or
sbb
call
push
ficomp
sub
clc
ins
mov
nop
nop
fsub
fdivr
sbb
sub
cmp
mov
fistp
xchg
mov
mov
pop
or
mov
lods
shr
lods
js
xchg
scas
ds
mov
test
pop
shl
jmp
dec
imul
pusha
pushf
retf
ror
sub
push
mov
dec
mov
pop
mov
sub
mov
scas
or
pop
les
rcr
out
sbb
sbb
stc
cmp
popa
mov
jge
sbb
jo
fild
mov
mov
fcom
dec
sub
rcr
jl
pminsw
ins
les
sbb
mov
dec
push
push
(bad)
xchg
pushf
int3
js
sub
mov
(bad)
loopne
ss
pop
mov
xchg
ins
cmp
lods
sahf
stos
rcr
cld
mov
je
in
retf
je
aad
sub
cld
out
push
xor
pop
push
push
sar
cmp
inc
(bad)
sar
lods
nop
cmp
jp
pop
les
int3
int
(bad)
cmp
les
(bad)
jp
cld
test
popf
and
dec
pop
push
adc
aas
pushf
xchg
jl
lods
add
cmp
int3
ror
in
sbb
int3
sar
jo
mov
adc
fcmovnbe
pop
jmp
nop
int3
adc
mov
mov
test
mov
out
mov
adc
sbb
pop
mov
dec
call
push
mov
ss
inc
mov
mov
aam
test
dec
xchg
pop
jb
sbb
std
mov
sbb
mov
dec
cmp
fdiv
mov
xchg
inc
jnp
mov
lahf
sbb
fdivr
repz
fdivr
mov
mov
cmp
lods
ss
cld
es
cmp
mov
outs
xor
and
cld
fdivr
scas
pop
push
imul
fs
out
jecxz
mov
aam
sub
shr
adc
lods
inc
repz
aas
ficomp
jb
pop
sub
(bad)
repz
push
mov
mov
sbb
push
inc
sub
mov
pop
mov
int3
add
aas
pushf
mov
mov
xchg
add
test
xchg
or
lods
pop
sbb
in
sbb
sub
xor
(bad)
mov
(bad)
jg
xchg
dec
sbb
ins
test
cmp
mov
pop
cmp
popf
adc
ins
ja
bound
cdq
mov
mov
(bad)
xchg
sbb
pop
mov
jae
xor
mov
cli
mov
sub
repnz
fnsave
cmp
cmps
fisub
jmp
push
lods
cmp
lahf
dec
neg
js
test
pushf
pop
mov
fist
or
mov
leave
push
push
js
xor
xor
int
sbb
mov
inc
push
pop
xchg
jnp
pusha
lahf
mov
call
pop
or
add
mov
rol
data16
(bad)
sbb
sbb
aad
ror
retf
sbb
loope
adc
in
push
sbb
jae
jp
fidiv
mov
pusha
icebp
sub
push
dec
into
sub
push
pop
mov
hlt
in
mov
mov
xor
ret
lods
xor
lock
push
retf
mov
jae
(bad)
lahf
(bad)
push
loope
cmp
into
cmc
mov
aam
je
mov
test
fild
fdivr
lods
(bad)
rcr
sbb
or
aas
mov
ja
ins
js
dec
push
mov
fist
adc
pushf
lods
sub
push
(bad)
fisttp
adc
(bad)
lock
mov
mov
and
dec
cmp
sbb
mov
pop
push
sbb
int3
mov
xchg
lahf
int3
outs
mov
(bad)
adc
sbb
jb
rcl
rcr
cmc
mov
sub
lods
pop
cld
push
movs
pop
mov
sbb
cmps
xchg
push
cmp
fstp
mov
cmp
(bad)
cld
adc
inc
jp
int3
call
les
jg
pop
dec
sar
dec
je
jecxz
std
ins
mov
mov
adc
mov
pop
shr
pop
and
sti
xor
out
adc
sub
std
jge
jnp
push
pop
jmp
cmp
adc
sar
mov
xchg
adc
jmp
push
cli
repz
sub
add
adc
rcr
sbb
jnp
push
sbb
inc
mov
aad
je
mov
sub
mov
dec
rcl
aas
(bad)
xchg
ja
mov
xor
lods
(bad)
int3
inc
mov
mov
xor
push
sbb
sub
dec
mov
mov
pop
pop
daa
add
cmp
and
sub
pop
stc
sar
jl
xchg
jg
out
(bad)
xor
xchg
push
sub
ins
cld
or
xor
das
hlt
mov
fstp
popf
push
into
aad
ins
adc
or
(bad)
sbb
test
fwait
std
mov
call
std
rol
ins
leave
clc
call
or
aam
(bad)
mov
dec
push
ss
test
mov
cmc
mov
in
xchg
jae
xor
push
sub
fsubr
stos
pushf
ret
push
ds
gs
adc
push
cmp
popf
inc
xchg
cld
sub
es
mov
jae
fnstsw
xor
pop
xchg
mov
test
fisub
pop
jnp
aad
pop
or
std
sbb
lods
fs
adc
xlat
mov
popf
js
(bad)
xor
stc
(bad)
sti
leave
mov
pop
xor
add
fs
add
shl
(bad)
outs
push
xchg
push
sar
inc
pushfw
sbb
push
add
ficomp
xor
clc
jmp
xor
cli
push
call
idiv
mov
xlat
jo
push
aaa
repz
movs
sub
push
adc
adc
ficomp
push
dec
ror
cmp
xor
xchg
and
push
mov
leave
repnz
mov
in
jp
sub
lock
enter
xchg
cld
call
dec
cli
cdq
mov
mov
loop
xlat
mov
(bad)
sbb
xchg
mov
cmps
mul
xchg
repnz
lods
and
cmc
mov
cmp
sbb
mov
sub
aad
dec
pop
jae
cdq
mov
push
sar
sbb
push
ficom
mov
repnz
cdq
sbb
mov
ja
(bad)
clc
retw
ins
or
push
push
xlat
mov
or
adc
pop
pop
addr16
(bad)
cwde
or
pop
fnstcw
cld
mov
sbb
mov
jp
retf
int
sbb
jle
lds
mov
mov
mov
mov
push
repnz
int3
mov
lock
push
popf
sub
jl
outs
in
inc
mov
mov
push
push
cmp
ins
pop
arpl
repnz
sar
(bad)
adc
mov
xchg
sub
or
jmp
xchg
jno
shr
sar
or
sbb
push
jp
rol
sub
adc
pop
mov
xor
jg
mov
int3
push
cli
dec
cmp
jmp
pushf
test
lods
enter
sbb
jl
loope
sar
(bad)
push
xor
sub
xchg
cmp
mov
adc
lahf
fdiv
mov
inc
dec
int3
jecxz
adc
cmp
stos
xor
xchg
pop
pop
call
fiadd
or
sbb
mov
mov
pushf
mov
fstp
cdq
sub
or
rcl
mov
sbb
push
sbb
adc
sar
adc
cmp
hlt
inc
cld
jge
or
xor
jmp
mov
mov
cld
test
sbb
cld
call
int3
call
pop
xor
jnp
mov
movs
push
mov
jl
ins
add
inc
sar
jne
mov
int3
lods
aad
or
rcr
rcr
cmp
or
mov
jne
adc
pop
dec
in
nop
(bad)
fst
das
sbb
xchg
ret
push
xchg
pushf
jge
stos
sub
inc
dec
dec
lods
sub
ins
jno
inc
dec
aaa
mov
cmp
icebp
loop
and
xchg
mov
ins
(bad)
adc
mov
lods
jg
sbb
repnz
stos
dec
cmp
xor
into
mov
int
dec
push
movs
cmp
fst
push
in
pop
xor
adc
xchg
push
cmp
sub
aad
imul
cmp
out
jmp
lahf
pop
(bad)
sbb
xor
pop
lods
or
neg
sub
xchg
push
popf
mov
out
sbb
fcmovnu
push
pop
jge
test
or
or
(bad)
sbb
gs
mov
pop
push
int3
int3
lods
bsf
fnstenv
or
mov
push
mov
fwait
lock
xchg
cmps
fld
adc
add
jl
sub
pop
ficomp
sbb
or
or
les
sar
loop
adc
(bad)
push
push
xchg
clc
mov
aaa
inc
nop
lock
pop
lods
inc
push
retf
mov
jg
rcr
or
mov
push
test
mov
mov
shl
mov
(bad)
clc
je
and
aad
push
push
mov
int3
dec
fs
mov
test
ds
scas
jp
xchg
pop
pop
jp
cmp
loop
sar
push
popa
fmul
test
stc
ds
fild
pop
sbb
enter
fdiv
push
or
mov
fcomp
fistp
mov
call
mov
clc
popa
lahf
push
adc
not
mov
xor
fidivr
jmp
icebp
sbb
lods
push
(bad)
mov
cmp
mov
sahf
mov
xlat
push
pop
lahf
call
mov
enter
fdiv
add
arpl
mov
sbb
imul
xchg
cmp
xchg
xlat
jge
scas
pop
jmp
mov
inc
aad
inc
outs
mov
jo
adc
aam
push
cld
xor
(bad)
nop
ror
xor
xlat
aad
call
push
mov
fcomp
lods
sub
mov
aas
stos
icebp
ret
(bad)
jnp
push
fisubr
jbe
sbb
fwait
sbb
and
cmp
sub
or
jg
pushf
mov
ficom
pop
cld
mov
sbb
adc
rcr
fstp
push
xchg
pop
xor
pop
xchg
jno
out
sbb
cdq
push
pusha
jnp
test
call
dec
mov
mov
sbb
pop
pop
pop
sub
sbb
cld
mov
jp
mov
int
jl
xchg
mov
(bad)
mov
mov
xlat
(bad)
out
jo
sbb
adc
lods
je
int
movs
(bad)
bound
mov
stos
hlt
nop
aas
icebp
test
cld
lods
jo
add
push
retf
movs
(bad)
adc
pop
lods
xchg
push
xlat
mov
lods
(bad)
call
sub
sub
lods
outs
mov
mov
pop
mov
rcl
or
nop
ss
mov
je
fdivr
add
pop
mov
mov
or
mov
jnp
adc
add
cdq
mov
int3
xchg
xchg
jo
addr16
scas
jle
xchg
mov
cmp
cmp
mov
sbb
sbb
pop
pop
aas
xchg
sub
mov
ret
repnz
nop
dec
cmp
jns
into
xor
jne
lods
sbb
mov
sar
push
pop
ja
ins
nop
int3
xchg
sahf
(bad)
cmc
neg
pop
fcom
test
xchg
jae
pop
sub
int3
push
jnp
into
pop
retf
pop
push
or
cdq
sbb
sbb
jo
pop
mov
adc
cmp
jp
pop
jg
dec
or
adc
sbb
jnp
jmp
out
hlt
call
call
mov
mov
aam
mov
xchg
push
push
inc
mov
cmc
popa
sbb
cdq
mov
inc
mov
mov
mov
jno
and
mov
leave
ffree
rcr
lods
test
movs
mov
lahf
stc
inc
repnz
repz
lock
mov
cmp
jg
sub
shl
iret
xor
jne
ficomp
mov
jne
pop
out
jl
clc
jg
or
mov
pop
jmp
and
ja
sub
pop
shl
int3
adc
(bad)
pop
jbe
and
aas
cld
lahf
adc
call
sbb
jb
xchg
pop
jecxz
adc
or
(bad)
adc
icebp
(bad)
xor
or
or
pop
mov
cmps
xchg
(bad)
int
xchg
push
stc
jnp
xchg
pop
mov
sbb
jl
lods
fcmovnbe
mov
pop
mov
xchg
push
adc
ss
stos
ret
xor
xchg
mov
sub
inc
and
mov
pop
lahf
sbb
pop
clc
jmp
inc
cmp
fs
lock
adc
outs
cwde
mov
fwait
push
adc
enter
xor
dec
or
cmc
int3
adc
adc
lock
fs
fstp
movs
ror
shl
dec
imul
pop
xchg
fwait
sbb
mov
rcl
ret
mov
xchg
fnsave
repz
out
in
fistp
mov
sub
cmp
cli
cli
cmps
mov
cmp
pushf
ficomp
fs
ins
imul
and
jge
sub
jb
cwde
stc
into
retf
push
jbe
xchg
mov
fadd
int3
aad
xchg
dec
pop
or
pop
int3
mov
retf
pop
fidivr
into
(bad)
xchg
sbb
fs
ret
jmp
dec
jecxz
adc
jns
ins
fiadd
popa
into
mov
lods
fpatan
mov
(bad)
push
jp
jno
aam
push
mov
dec
mov
sbb
sar
sbb
ins
icebp
clc
stos
shr
hlt
mov
into
ficom
inc
scas
jnp
sti
xor
in
mov
xchg
jb
ds
pushf
jb
xchg
nop
push
or
pop
cmp
test
mov
mov
adc
mov
jmp
call
ss
mov
add
xchg
xchg
mov
cmp
push
int3
mov
test
inc
and
cld
cmp
dec
adc
sub
adc
pop
or
sbb
stc
loop
icebp
hlt
fcmovu
dec
retf
lock
(bad)
or
jb
and
adc
inc
mov
in
or
push
dec
mov
dec
xchg
pop
(bad)
pop
stc
push
fcom
adc
call
xor
int3
pushf
xor
leave
mov
es
fbstp
repz
icebp
sbb
call
xor
push
mov
inc
popa
mov
mov
ficomp
mov
dec
icebp
xchg
sbb
pushf
dec
xor
cdq
xor
mov
mov
pop
xchg
adc
pop
sbb
(bad)
pop
pop
es
add
shl
repnz
jne
jp
jnp
cli
aam
jnp
xchg
jnp
or
stc
inc
mov
pop
cmp
mov
mov
pusha
xor
push
aam
mov
je
mov
jb
pushf
xlat
mov
push
sti
mov
mov
ins
and
jno
jmp
mov
push
mov
sbb
adc
lods
mov
xchg
aad
hlt
sbb
mov
test
xchg
inc
sbb
xchg
and
push
rcl
icebp
aad
push
pop
hlt
sub
fiadd
mov
adc
xchg
xlat
add
pop
push
add
(bad)
fisubr
in
dec
ins
mov
dec
inc
adc
pop
xchg
rcl
mov
movs
push
cmp
mov
ja
sti
pop
sbb
pop
pop
stos
retf
int3
dec
(bad)
fld
dec
dec
sar
call
or
fidivr
cdq
jp
xchg
xchg
lahf
cld
addr16
call
and
inc
ins
add
popf
push
dec
push
mov
or
repnz
mov
scas
(bad)
or
pop
inc
jae
mov
pop
mov
pop
stos
xchg
in
icebp
sub
enter
xor
jno
fdiv
jne
sbb
les
mov
fnstcw
adc
or
rol
xchg
mov
retf
cmp
pop
or
int3
mov
jp
push
mov
xor
pop
stc
jae
pop
cli
add
sub
xchg
(bad)
lahf
cmps
sbb
call
dec
fidivr
enter
nop
dec
add
pop
shl
mov
mov
test
mov
rcl
xor
dec
call
pop
inc
jg
bound
ror
idiv
xor
mov
lahf
fist
pop
mov
mov
xchg
sub
mov
test
aam
mov
int3
adc
(bad)
mov
adc
jo
adc
sbb
outs
(bad)
xchg
shl
scas
aad
xlat
(bad)
lock
into
sbb
cdq
icebp
lds
into
jno
cmps
jge
mov
mov
mov
sbb
inc
push
data16
imul
cmp
fnstcw
sbb
cwde
int3
js
int3
jnp
push
nop
(bad)
xor
xchg
push
imul
sahf
xchg
jnp
jnp
push
aam
or
inc
push
cld
pop
mov
or
lahf
cmp
mov
xchg
cs
retf
nop
mov
mov
int
shl
sub
xor
sbb
repnz
jnp
xchg
mov
sub
cmp
sbb
fdiv
shl
and
test
fld
out
shl
inc
cmp
ja
jg
xchg
push
xor
bound
bnd
dec
mov
xor
cli
(bad)
cli
and
setg
mov
dec
push
sbb
jno
xchg
fdivr
lods
xor
mov
push
fdiv
int3
mov
fist
dec
xchg
ds
or
rcr
clc
(bad)
popf
lods
int3
mov
aad
aad
xchg
cld
out
jl
push
mov
pop
push
hlt
xor
idiv
adc
ror
outs
fs
ins
imul
(bad)
sbb
adc
sbb
fidivr
std
push
pop
inc
adc
dec
or
push
(bad)
hlt
xchg
push
mov
add
cld
adc
adc
or
cmp
mov
sbb
sbb
in
ficomp
or
jp
mov
jg
fbld
not
mov
les
out
test
or
push
aad
rcr
fidiv
mov
mov
pop
inc
sbb
retf
pop
inc
call
test
std
stos
popa
cli
xor
push
inc
enter
rcl
adc
(bad)
mov
mov
cmp
mov
jmp
sbb
(bad)
mov
(bad)
mov
or
out
add
pop
xor
leave
cmc
cmp
xchg
xor
test
ret
push
in
jo
jne
mov
add
xor
cwde
pop
lods
inc
cld
pop
or
mov
inc
mov
jnp
div
popa
mov
popf
xor
rcr
xchg
dec
xor
les
into
rol
in
cdq
arpl
jp
fcom
gs
sub
add
inc
jle
cdq
adc
sbb
push
mov
xchg
dec
xchg
push
(bad)
adc
sahf
jns
into
cmp
dec
ds
aas
mov
push
xchg
and
sbb
and
rcl
(bad)
cmps
xor
pushf
pop
sbb
xchg
sub
sbb
rcr
mov
or
call
xor
push
dec
fnstsw
adc
lods
push
add
(bad)
mov
xlat
fsubr
xchg
leave
div
cmp
rol
test
pop
pop
mov
js
repnz
icebp
mov
mov
cmp
repnz
xor
mov
pop
mov
xor
mov
push
xor
xchg
popf
mov
dec
ror
lds
fsub
sub
fcmovbe
inc
mov
into
jg
pop
sti
sbb
cmp
xor
xchg
mov
jge
mov
inc
loop
mov
nop
inc
push
jno
cmc
ret
popa
mov
pop
mov
lods
stos
xchg
inc
(bad)
pop
push
dec
stos
mov
jle
mov
idiv
or
xchg
xchg
sti
out
fnstsw
jle
push
rcl
sbb
xor
neg
aaa
mov
call
ss
push
fisttp
sbb
inc
(bad)
adc
mov
mov
mov
push
into
jge
xor
push
push
dec
xor
cwde
into
jne
repnz
mov
sbb
aas
dec
int
or
icebp
ja
push
cdq
test
imul
mov
pop
shl
mov
call
sub
test
sbb
mov
and
call
shr
inc
(bad)
mov
pop
fdivp
movs
dec
popf
shl
mov
es
(bad)
sahf
mov
int3
sahf
or
pop
cmp
imul
stos
mov
cmp
movs
and
int3
mov
sub
sub
adc
push
sbb
cmp
xor
or
adc
add
sub
sbb
cmp
sahf
arpl
fsub
inc
mov
dec
test
xlat
je
(bad)
xchg
arpl
mov
(bad)
jp
pushf
int
sbb
push
xchg
adc
jae
xchg
sahf
mov
aad
(bad)
cmp
repz
ficomp
xor
daa
or
ins
inc
mov
faddp
pop
cmp
jp
stos
bound
shr
push
jno
test
or
lods
dec
jg
mov
sbb
dec
jg
xchg
push
mov
sbb
(bad)
xchg
xor
jb
mov
ja
icebp
fcomp
int3
aam
mov
hlt
push
out
repnz
mov
jb
shr
mov
aad
adc
inc
xor
bnd
sar
mov
les
adc
jae
adc
inc
push
pushf
aaa
mov
cli
push
fist
out
movs
push
(bad)
dec
mov
call
popf
cmp
je
jge
jg
dec
je
test
xor
adc
test
stos
push
retf
mov
sub
pop
sbb
sbb
fbstp
std
sti
test
and
mov
movs
pop
jp
sbb
fdivrp
jmp
mov
adc
cmp
(bad)
std
jns
mov
jo
(bad)
jp
xchg
jno
xor
leave
mov
hlt
dec
jae
push
mov
inc
(bad)
icebp
fisttp
iret
xchg
mov
cs
sbb
jno
adc
mov
nop
aaa
dec
mov
jno
pushf
xchg
scas
sbb
mov
ins
adc
push
pop
xlat
clc
or
adc
fisttp
sbb
mov
jbe
inc
xchg
mov
mov
push
xlat
aad
repnz
sbb
push
push
arpl
cmp
sbb
rcr
dec
mov
dec
push
fst
add
(bad)
adc
fst
lods
int3
arpl
mov
ja
jmp
cmp
xchg
ret
rcr
shl
out
movs
mov
or
sbb
idiv
dec
(bad)
icebp
bound
cmp
dec
inc
push
(bad)
cmps
push
repz
mov
and
inc
push
(bad)
div
mov
mov
stc
mov
sbb
(bad)
fwait
int3
cmp
push
jg
ss
sbb
pop
enter
mov
mov
push
adc
test
das
out
(bad)
xor
je
xchg
rcl
sbb
pop
sti
lahf
stos
mov
pop
not
mov
xchg
inc
sub
test
pop
pushf
push
inc
xchg
int3
fidiv
in
jp
or
push
or
(bad)
inc
adc
pop
fistp
sub
pop
xchg
pop
std
jae
sbb
pushf
sti
jg
inc
fimul
jne
xchg
mov
push
stos
lahf
mov
imul
cmps
jns
sbb
xor
push
jae
xor
aam
shl
repnz
mov
push
xor
or
mov
sbb
xlat
ss
fild
aas
pop
shr
jmp
cmp
loope
xchg
pop
jp
jae
jae
fs
dec
(bad)
cmps
out
idiv
leave
jb
jb
sbb
adc
mov
mov
or
aad
mov
mov
xor
mov
aad
push
inc
ins
jl
add
sbb
ror
call
aas
stos
inc
sub
fist
or
inc
mov
sbb
sar
cld
(bad)
nop
mov
push
pop
sar
mov
mov
ss
shl
xchg
adc
fidivr
sbb
inc
push
mov
into
xchg
fist
fnstenv
pop
mov
fcmovb
xchg
ins
xchg
nop
dec
xor
sahf
or
pop
rcr
enter
jae
dec
shr
mov
xchg
mov
cdq
cmp
pop
adc
call
pop
mov
std
adc
sbb
lds
xor
lahf
sbb
adc
mov
daa
sub
push
push
rcr
push
(bad)
cmp
mov
(bad)
pop
pop
rol
mov
xor
dec
cwde
rcr
adc
test
adc
fst
xchg
sub
stc
pop
popf
xor
shl
loopne
aam
fstp
adc
addr16
dec
xchg
cmp
cmp
int3
cmp
jbe
xor
xlat
std
pop
mov
mul
sbb
jle
cld
push
enter
fidivr
rcl
fwait
and
jge
jle
xchg
jmp
push
aam
or
sar
push
cmp
dec
mov
ja
xchg
add
fadd
mov
pop
cmp
rcl
ror
es
mov
jecxz
mov
pop
mov
mov
jmp
test
mov
push
xlat
adc
xchg
(bad)
stos
fcom
xchg
pop
int3
clc
imul
push
jmp
and
cmp
sub
mov
cmps
inc
pop
add
cmp
push
test
push
aaa
add
pop
inc
call
xlat
xchg
mov
cs
pop
mov
pop
sbb
pop
inc
mov
add
pop
iret
jp
das
inc
fs
jnp
xor
inc
push
mov
dec
jl
rcl
pushf
push
push
mov
pop
dec
stos
sbb
xchg
mov
add
jp
add
push
push
movs
jge
mov
sbb
rol
pop
ss
xchg
cmp
mov
xchg
cmp
fnstsw
jg
sbb
mov
rcr
stc
sub
and
xor
(bad)
clc
lock
or
dec
add
xchg
push
mov
aaa
rol
nop
xchg
cmps
mov
jno
adc
rcr
cmp
pop
adc
adc
aad
stc
test
sbb
(bad)
mov
adc
mov
jl
sub
popf
(bad)
push
cli
mov
pop
movs
inc
lahf
lods
jae
xchg
sar
and
fidivr
stc
int3
lock
adc
jnp
cmp
repnz
ret
mov
jmp
pop
fsubr
mov
rcl
rcl
jne
push
dec
xchg
jge
push
fs
jl
mov
inc
xor
cmp
rcr
rcr
push
xchg
jl
pop
lahf
aas
rcl
daa
hlt
dec
jl
mov
retf
mov
sahf
jno
xchg
xor
push
pop
mov
xor
std
je
and
sbb
push
mov
xchg
stos
add
dec
adc
idiv
fwait
int3
inc
jb
call
popf
(bad)
aad
xor
xchg
mov
mov
inc
pushf
push
(bad)
mov
(bad)
neg
dec
pop
jae
mov
mov
mov
cmp
pop
pop
iret
adc
mov
call
or
cmp
in
mov
sbb
out
xchg
jae
sbb
xchg
out
mov
scas
xor
xor
xchg
and
cld
adc
dec
idiv
mov
jno
imul
pop
sahf
sbb
jb
pop
xchg
cwde
xor
pop
cld
imul
push
dec
xchg
mov
pop
pop
cmp
pop
push
push
pop
push
fistp
cmp
sahf
add
mov
sbb
mov
addr16
mov
rol
repz
add
je
(bad)
mov
mov
mov
jno
sbb
test
jg
cwde
adc
mov
cld
push
cdq
cmp
and
rcl
jp
aaa
or
mov
call
cmp
std
mov
xchg
xor
pop
sub
les
nop
cld
ret
or
adc
cdq
call
test
jno
ficom
call
mov
rcr
mov
xchg
xor
pop
or
pop
mov
sub
imul
sbb
in
mov
call
fcmove
xchg
add
pusha
repnz
(bad)
inc
shl
call
sahf
push
push
fimul
lahf
jl
xor
lahf
mov
jno
pop
adc
push
push
out
mov
xor
ret
mov
lahf
inc
dec
repz
fcmovu
jae
sbb
int
adc
mov
mov
mov
jae
sti
push
xchg
cmp
xchg
xor
cmc
stos
stc
dec
icebp
mov
mov
xor
bound
cmp
mov
or
jp
mov
xchg
rcr
retf
shl
mov
adc
xchg
and
aad
and
cmp
pop
ds
ret
stos
dec
mov
xlat
sbb
jmp
push
pop
aaa
cmp
sub
mov
sbb
jae
int
mov
push
adc
mov
(bad)
jmp
xchg
push
pop
lock
mov
fnstcw
mov
push
sbb
jp
(bad)
sar
xchg
jns
sbb
sub
mov
xchg
pop
pop
clc
pop
mov
adc
mov
xchg
nop
int
sbb
xor
sub
cmp
jb
outs
mov
imul
cmc
jbe
mov
out
fstp
xchg
aaa
push
jmp
pop
cld
add
sar
push
retf
jne
xchg
fcom
mov
push
sub
(bad)
push
out
daa
xchg
push
xor
mov
mov
jp
rcl
or
cmp
xchg
mov
sub
out
mov
jo
ficom
push
xor
call
je
adc
mov
add
jge
xor
rcr
pop
mov
inc
adc
call
mov
cld
mov
(bad)
dec
push
sahf
push
rcl
pop
sub
mov
cmp
mov
outs
je
jle
adc
jne
mov
xor
clc
dec
pop
aam
xchg
(bad)
sbb
stos
dec
in
xor
or
jg
not
aad
push
dec
add
mov
aad
mov
cli
loop
cmp
rcl
mov
sub
call
ficomp
xchg
fstp
cmp
pop
daa
xor
cmps
xor
mov
pop
dec
xchg
aad
adc
pop
sahf
movs
aam
pop
push
mov
sub
push
ja
iret
mov
ret
aam
mov
inc
or
mov
and
jae
mov
jbe
(bad)
dec
test
xchg
push
sbb
ret
rcr
xor
repz
add
sbb
movs
push
sbb
pop
mov
mov
sti
or
je
test
xchg
in
popf
les
and
cld
sbb
cmp
aaa
and
xor
pop
sar
mov
inc
adc
dec
ja
adc
pop
sub
test
ficomp
xchg
clc
or
pop
mov
stos
cdq
int3
pop
pusha
cld
inc
mov
push
lock
std
sbb
adc
int
mov
add
mov
call
icebp
pop
jnp
shl
adc
mov
xchg
es
repnz
mov
sbb
test
pop
int3
pop
imul
call
adc
xor
shl
push
(bad)
idiv
sbb
mov
pop
fstp
sub
cld
mov
jb
dec
ror
mov
aas
pop
ret
ins
test
pushf
xchg
adc
lahf
mov
mov
sub
test
mov
push
jp
mov
mov
aaa
dec
sti
jge
test
call
xchg
dec
retf
xchg
ffree
mov
xor
in
sbb
add
jg
sbb
stos
sar
fimul
xchg
fmul
xor
mov
sar
dec
cmc
xchg
cdq
retf
(bad)
sub
outs
pop
mov
mov
adc
leave
mov
sbb
rol
and
clc
pop
mov
rcl
aad
mov
push
xchg
mov
inc
adc
or
call
push
sbb
jo
cld
cmp
sbb
push
imul
mov
mov
aad
ret
cmp
dec
lahf
dec
xchg
jae
ret
xor
xchg
fwait
and
bound
xor
jg
stos
movs
dec
repz
into
cmc
dec
dec
popf
cdq
jp
repnz
repz
sar
sub
sti
mov
es
mov
mov
in
jl
sub
pop
aam
sbb
dec
mov
ss
dec
fild
aaa
pop
(bad)
les
and
dec
and
xchg
aas
xchg
scas
clc
jae
xchg
jo
jmp
ftst
or
adc
call
inc
rol
aaa
push
cmp
test
and
or
inc
xor
inc
dec
xchg
dec
adc
jno
ins
push
push
sub
lock
je
pop
mov
call
fidiv
mov
inc
leave
mov
sub
xchg
cmps
(bad)
mov
pop
rcl
xchg
out
cld
mul
push
jp
push
mov
imul
mov
xchg
clc
loopne
pop
pop
push
push
mov
sbb
xor
xor
adc
dec
dec
or
stc
push
push
xchg
mov
mov
pop
bound
adc
jmp
cdq
adc
or
jae
jle
call
mov
out
xor
xchg
fdiv
mov
add
push
stc
(bad)
not
push
aad
mov
leave
mov
das
xchg
fdivrp
scas
adc
mov
pop
pop
or
aaa
sbb
adc
lods
int3
xchg
or
pop
push
cmp
jl
inc
out
push
cdq
mov
sbb
dec
add
rol
xor
cdq
pushf
addr16
mov
int
std
ror
jo
add
aaa
xlat
mov
jg
aad
dec
lods
pop
call
sbb
xchg
mov
dec
popf
je
xor
je
cmp
jg
xchg
(bad)
xchg
and
jle
pop
inc
push
call
push
and
push
dec
hlt
cmp
mov
push
cmp
push
std
mov
lods
cmp
dec
jno
jg
xor
or
push
dec
xchg
scas
lds
sub
adc
stos
addr16
rcl
pop
xor
mov
mov
retf
mov
bnd
and
sbb
adc
add
xor
mov
push
fs
push
pop
loop
cmp
fbstp
jmp
dec
pop
call
lds
xchg
dec
and
pop
mov
dec
iret
cld
jb
cmc
call
sbb
xlat
mov
xchg
xchg
aad
xchg
and
js
(bad)
retf
cmp
mov
mov
ret
cdq
adc
leave
or
xchg
sar
pop
mov
sbb
aas
out
cmp
(bad)
dec
stc
and
(bad)
push
imul
call
movs
cdq
xchg
jle
cld
xchg
inc
mov
xor
sbb
sbb
jae
adc
push
jl
sub
adc
dec
jge
aas
mov
dec
dec
push
jle
add
popa
mov
mov
stc
mov
imul
xchg
push
jo
adc
add
popf
xor
mov
cmp
stc
les
cmps
mov
je
push
or
ins
push
call
ins
nop
dec
lock
pop
pop
push
jge
xchg
pushf
cmp
jp
lds
rcr
addr16
xchg
mov
shl
rcl
push
ja
aam
and
ret
cld
xchg
xchg
fs
dec
int3
movs
push
sbb
mov
hlt
pop
xchg
dec
data16
(bad)
xchg
sbb
and
dec
pop
push
jb
mov
mov
push
(bad)
jno
imul
adc
pop
imul
pushf
sbb
sbb
xlat
pushf
xor
cs
sbb
mov
mov
push
adc
push
xlat
stos
sub
cmovs
mov
sub
push
dec
dec
aas
sub
test
nop
call
or
mov
push
dec
add
jecxz
xchg
jne
sbb
lods
sub
dec
nop
rcl
jge
push
or
outs
mov
sqrtps
stos
sahf
call
cmp
jb
or
inc
add
xlat
rcl
or
rcr
pop
mov
pushf
call
js
call
xor
mov
mov
cld
fnsave
cwde
dec
dec
push
jne
ret
sbb
fild
mov
out
jmp
int
mov
xchg
jns
outs
sahf
dec
data16
repnz
mov
xchg
ficomp
aad
adc
mov
fwait
iret
je
sub
xor
aad
inc
es
mov
adc
dec
ss
call
(bad)
(bad)
mov
fistp
mov
xchg
ds
(bad)
xor
int3
dec
cmp
mov
xor
jae
sub
iret
into
rcr
bound
push
aad
call
cmp
sar
mov
rol
inc
pop
mov
(bad)
mov
cmc
sbb
(bad)
sbb
inc
outs
inc
cld
sub
int3
lahf
cmp
jmp
push
mov
retf
call
xchg
cmp
sbb
dec
lock
sub
into
sar
call
jp
jge
mov
inc
pop
sbb
xchg
es
call
fwait
xlat
pop
rol
jl
ret
int3
out
sub
call
jl
ja
dec
dec
fcmovu
pop
cmp
pop
shl
jae
shl
xor
jb
cmp
and
xlat
xchg
ror
jno
fimul
xchg
push
xchg
stc
pop
mul
loope
leave
dec
cmp
pop
mov
adc
and
cld
cdq
push
std
test
fsubr
inc
pop
mov
(bad)
jnp
inc
fst
or
dec
sbb
cdq
xchg
lds
pop
pop
mov
xchg
and
xlat
cld
out
adc
cmp
out
jge
dec
cli
int3
js
push
rcl
add
not
sub
dec
bound
mov
jl
jno
inc
aas
mov
les
popf
xor
int
call
dec
jp
xor
mov
dec
cmc
(bad)
xchg
retf
mov
dec
sbb
pushf
pop
jno
stos
cli
mov
add
mov
dec
neg
cmp
icebp
xchg
mov
sbb
call
mov
xor
pop
int3
xchg
push
or
mov
xchg
call
mov
jb
mov
xchg
(bad)
dec
and
xchg
pushf
mov
aas
push
mov
sbb
pop
ret
sbb
call
or
mov
cli
ret
int3
pop
mov
pop
ss
mov
jp
out
ja
retw
(bad)
jno
pop
call
cmp
adc
ret
sbb
mov
bound
fwait
xchg
adc
push
adc
mov
(bad)
shr
sbb
sar
jmp
jmp
cmp
out
mov
movs
ss
movs
add
rcl
repnz
mov
push
sbb
pop
inc
xor
call
jnp
dec
mov
ret
pop
js
pop
scas
lea
inc
dec
hlt
fidiv
jae
xchg
aas
xchg
fisttp
cmp
repz
call
and
jae
sub
cmp
test
cs
mov
xchg
inc
jecxz
lock
and
cwde
xchg
jmp
xor
adc
xchg
and
inc
out
cmp
(bad)
arpl
ja
dec
xchg
add
cmc
mov
xchg
icebp
inc
mov
xchg
push
ins
mov
aas
dec
push
or
cmp
mov
dec
and
mov
push
mov
cdq
push
dec
push
out
jl
sbb
call
sub
daa
xchg
mov
push
mov
lods
xchg
push
dec
jmp
imul
dec
pop
cmp
mov
jp
xchg
mov
add
jne
xor
jae
adc
(bad)
sbb
call
xor
inc
mov
cli
inc
jb
jg
ror
int3
cmp
xchg
mov
repnz
or
pop
sbb
int3
mov
xor
dec
pop
call
pop
mov
out
(bad)
or
sbb
sbb
inc
push
cmp
adc
mov
iret
inc
aas
sbb
hlt
pushf
mov
cmp
jge
std
fild
jl
shr
inc
nop
retf
lock
mov
or
call
mov
rol
sub
xor
pop
call
ror
ss
xchg
(bad)
call
mov
inc
xor
mov
mov
mov
pop
inc
cdq
jae
mov
call
dec
cmp
(bad)
mov
dec
jnp
mov
imul
jae
inc
scas
adc
rcl
cwde
inc
cmp
dec
push
mov
pop
out
or
xchg
pop
jge
jae
lods
and
push
pop
sbb
push
mov
inc
pop
mov
in
jl
xor
ins
dec
push
cmps
(bad)
fild
sub
mov
sbb
sbb
adc
cmp
jae
pop
sub
and
or
jne
call
retf
not
cdq
call
stos
sti
pop
pop
rol
ret
mov
(bad)
mov
xchg
ja
sbb
bnd
mov
adc
ss
mov
mov
repz
mov
pop
adc
adc
dec
sbb
std
jp
xchg
sbb
cmc
xlat
mov
mov
dec
and
pop
jns
jae
fadd
pop
cmp
xchg
or
sbb
jle
dec
rcr
pushf
cmp
adc
stos
sbb
jb
cmp
cmps
aam
lods
xor
push
sbb
add
cmp
jne
cmp
mov
inc
ror
test
push
pop
cmp
mov
cmp
mov
mov
mov
add
pop
fidiv
xor
dec
pushf
sbb
pop
mov
mov
jo
shl
fwait
sbb
push
jg
cdq
xchg
xor
inc
xchg
(bad)
dec
mov
movs
mov
idiv
push
cmp
sub
xor
mov
(bad)
adc
fucomip
sub
jnp
mov
arpl
pop
ja
nop
sub
or
fidiv
sub
mov
mov
mov
jl
ds
mov
xchg
pop
jle
inc
xchg
jnp
movs
cmc
mov
aaa
(bad)
fyl2x
cdq
mov
cmp
xchg
push
in
sbb
xor
fs
rcr
jmp
popf
sar
rcl
ds
daa
cmps
sub
loop
cli
jp
jae
xchg
ret
cmps
pop
mov
aam
lods
push
clc
shr
push
div
mov
pop
dec
push
dec
xchg
jge
arpl
aas
hlt
call
les
mov
push
dec
sbb
in
cwde
jbe
popf
xlat
add
pop
ficomp
mov
mov
cmp
mov
sbb
mov
mov
lds
iret
aad
hlt
shl
pslld
jmp
dec
(bad)
mov
adc
cmp
or
fisttp
dec
stc
fcomp
cmp
rol
sbb
xor
mov
aaa
or
xchg
js
mov
or
out
nop
and
gs
dec
adc
fs
xchg
int3
push
sbb
pop
sub
jne
ficom
mov
inc
sbb
or
test
adc
pop
adc
stos
sbb
xchg
xor
test
mov
mov
dec
inc
mov
sahf
sbb
arpl
adc
cmc
aad
xchg
(bad)
imul
inc
out
mov
stos
dec
mov
out
xchg
jmp
xchg
test
mov
or
sbb
std
lock
(bad)
(bad)
xchg
fst
lds
mov
mov
adc
dec
test
sbb
fdiv
cwde
retf
xor
pop
xchg
dec
pop
xor
call
jle
ja
dec
pop
push
xlat
es
mov
jae
and
jle
aam
sbb
call
sbb
mov
or
xchg
mov
sbb
(bad)
xor
jbe
lea
or
fcom
inc
aam
cmps
push
ss
popf
inc
inc
and
push
loope
pop
sti
out
jmp
cmp
cmp
rol
lods
jae
mov
int3
dec
mov
mov
cmp
mov
mov
adc
(bad)
mov
fimul
mov
mov
or
rol
push
aad
xchg
jo
std
xor
fs
nop
nop
push
mov
pop
push
mov
fnstsw
mov
pop
out
cmp
cdq
mov
scas
aam
xchg
int
mov
xchg
ret
(bad)
and
pop
inc
fbstp
mov
out
xlat
dec
mov
xchg
dec
sahf
mov
xchg
xchg
mov
les
jb
xchg
sbb
push
imul
pop
jp
pop
pop
mov
aad
or
push
xchg
push
ss
icebp
cmp
or
scas
js
inc
jg
push
dec
jae
call
nop
pop
rcl
aaa
push
xor
xchg
es
xor
xor
or
cld
in
mov
mov
cmp
dec
ss
sbb
and
adc
xlat
fadd
xchg
and
adc
lahf
daa
dec
fidivr
repnz
test
cmps
fidiv
nop
mov
inc
xchg
jge
int3
cmp
(bad)
in
or
aaa
xchg
jo
mov
dec
rol
dec
imul
or
jae
push
aad
xchg
mov
ror
adc
fs
add
mov
sbb
inc
leave
fist
nop
fwait
inc
push
pop
call
test
jmp
jns
stos
pushf
pop
xchg
mov
push
sbb
push
inc
inc
je
call
jno
cld
jne
xchg
sbb
xchg
inc
in
mov
ret
adc
mov
mov
mov
call
sbb
dec
fdivr
mov
mov
sub
jmp
cmp
sbb
xchg
cdq
inc
add
mov
ret
ja
push
cmp
cmp
loopne
shr
jb
xlat
xor
inc
aaa
fimul
dec
clc
data16
dec
adc
fistp
push
xlat
add
int
push
lock
pop
aad
cmp
fld
inc
push
int
mov
cmp
rcl
push
sbb
retf
mov
call
lahf
add
mov
shl
push
dec
push
inc
(bad)
sbb
jmp
and
ins
jo
add
jns
dec
mov
xor
jae
adc
sub
dec
pop
shr
jne
hlt
mov
push
cmp
cwde
adc
jae
xlat
rcl
or
inc
cld
imul
pop
mov
adc
popa
xor
xchg
lahf
sbb
or
test
dec
ficom
(bad)
dec
pop
ds
stc
call
mov
sbb
std
jp
sbb
iret
out
aas
inc
loope
hlt
mov
rol
inc
ins
dec
pop
dec
cmp
jns
mov
shr
aam
shl
imul
iret
xchg
mov
sbb
call
inc
outs
dec
push
adc
ds
mov
adc
mov
call
mov
lahf
jb
fwait
pop
push
cld
sub
dec
mov
sbb
dec
popf
retf
mov
aaa
mov
mov
cs
popf
sbb
mov
add
mov
aad
xchg
aad
sub
fimul
cmp
mov
(bad)
out
xchg
sbb
lock
mov
jl
lds
xchg
mov
(bad)
shr
mov
push
cmp
and
pop
sbb
xor
and
(bad)
sub
out
loop
jl
ror
inc
sbb
jb
dec
mov
inc
xor
pop
jecxz
repnz
outs
and
xor
xor
pop
adc
sbb
dec
aaa
or
pop
and
xor
xchg
adc
sbb
mov
fdiv
mov
add
fiadd
call
scas
mov
(bad)
movs
lahf
ret
fwait
js
inc
dec
push
push
and
rcl
pop
add
cmc
mov
lock
jge
and
dec
dec
popf
mov
out
dec
mov
jp
push
(bad)
jmp
xchg
aad
xchg
push
inc
aaa
push
pop
pushf
in
mov
sar
xor
pushf
adc
sbb
fcmovnu
imul
sbb
rol
xor
mov
repnz
cmp
mov
mov
push
cs
aas
push
adc
pop
and
pop
push
js
mov
pop
adc
rcl
push
push
mov
cwde
push
int3
cmps
jb
mov
inc
mul
xchg
add
adc
pop
jae
sahf
out
dec
add
or
cld
pop
imul
jg
mov
mov
xor
jle
push
xchg
lods
mov
jae
cmp
and
out
or
rol
mov
adc
push
push
pushf
push
mov
adc
cwde
or
adc
test
into
mov
xchg
mov
js
pop
xchg
sbb
lahf
sbb
(bad)
cld
fbstp
push
stc
nop
jg
mov
xchg
sbb
push
mov
fcomip
push
lahf
sub
dec
sbb
fwait
cmps
inc
les
mov
add
xchg
popf
inc
lahf
jl
retf
mov
imul
mov
stos
scas
div
out
mov
ss
mov
or
stc
push
mov
retf
push
mov
test
adc
mov
mov
pop
aaa
pop
pop
movs
sbb
and
sub
rol
jge
dec
push
jg
imul
popf
pop
cdq
inc
fdivp
xchg
jbe
mov
push
sti
sub
jb
inc
jo
dec
mov
mov
push
xor
mov
inc
iret
outs
push
dec
mov
aas
lock
sar
xor
les
stc
jae
imul
adc
aad
inc
int
(bad)
jne
xchg
je
icebp
out
sbb
xchg
mov
xor
jo
hlt
in
pop
push
ja
dec
add
adc
xlat
jl
int
sahf
mov
movs
jne
data16
movs
mov
mov
mov
xor
xchg
rcr
push
ficomp
mov
movs
sahf
cmp
xlat
xor
enter
push
jae
pop
aad
fist
cmp
aad
push
pop
xchg
mov
data16
mov
(bad)
push
xchg
cld
or
or
jle
add
fisttp
loop
cmp
mov
push
fwait
push
test
pop
ins
xlat
pop
xor
int
sti
xchg
jo
xor
xchg
jae
pop
adc
mov
pusha
clc
mov
mov
lahf
jbe
fisub
(bad)
fst
sahf
fsub
push
xchg
push
mov
mov
repnz
jge
fstp
xchg
cmp
xor
jno
sbb
fisttp
out
jmp
pop
add
mov
inc
lahf
mov
xor
jns
(bad)
call
xlat
rcl
fisub
lea
push
adc
dec
jne
jmp
sbb
ret
or
cdq
jl
mov
adc
dec
adc
jl
enter
sub
pop
rcl
ret
pop
rcl
dec
inc
(bad)
pop
addr16
mov
dec
pop
push
stc
xchg
cld
arpl
push
inc
xor
out
nop
sbb
inc
dec
mov
xchg
cs
push
inc
jb
mov
dec
cmp
mov
jle
cmc
lahf
mov
mov
mov
stc
mov
shl
jp
pop
loop
aad
cdq
aam
inc
loope
retf
xchg
or
mov
jnp
adc
xchg
mov
add
cmp
push
push
xor
xacquire
pop
mov
fs
or
nop
or
sbb
jp
jge
xchg
test
mov
sub
fistp
fidivr
cmp
xchg
cld
int3
mov
fcom
cmp
mov
inc
push
jae
mov
inc
cmp
sbb
dec
and
sub
lahf
lahf
daa
mov
sub
ss
fwait
mov
jge
mov
xor
(bad)
inc
mov
js
imul
mov
ss
aas
lods
mov
cmp
mov
xchg
mov
call
push
dec
je
and
pop
jnp
ret
and
or
xchg
rcr
mov
jb
add
sti
xor
cmp
push
mov
mov
adc
push
xchg
imul
and
aas
pop
adc
mov
aaa
sbb
mov
jmp
test
dec
mov
add
mov
pop
add
add
mov
(bad)
aam
mov
mov
lea
push
mov
pop
push
mov
(bad)
cmp
pop
nop
(bad)
jns
pop
dec
fidivr
xor
call
jbe
push
rol
mov
xchg
(bad)
mov
out
xchg
or
cmp
xchg
cmp
pop
xor
aam
dec
aas
pop
aas
lock
dec
sbb
cdq
std
lds
fwait
cmc
jmp
bound
pop
inc
push
xor
aad
xchg
and
sbb
inc
inc
mov
inc
test
mov
mov
lods
mov
sbb
mov
or
cdq
add
mov
fnstcw
(bad)
push
jecxz
xchg
adc
fisttp
push
or
mov
stos
shl
lds
popf
add
inc
sub
std
jns
ret
dec
fwait
push
sahf
xchg
jg
shl
cdq
adc
xor
bound
nop
call
rol
jp
shl
add
and
sbb
leave
out
test
inc
(bad)
add
inc
sbb
cmp
cmp
cmp
sub
ficomp
push
or
mov
push
pop
int
sbb
mov
mov
sbb
movlps
mov
inc
inc
sbb
sbb
adc
cmps
adc
dec
ds
shr
jl
dec
pop
xor
mov
call
jg
mov
mov
fcmovne
test
jecxz
inc
(bad)
push
inc
xor
dec
jp
mov
dec
push
adc
ficomp
jp
retf
icebp
cmc
mov
xchg
repnz
sub
retf
pop
mov
mov
jno
loop
and
call
mov
sbb
dec
push
dec
sbb
cmp
mov
push
pop
xlat
jg
xor
fsub
mov
cdq
ficomp
mov
aad
inc
and
push
mov
xchg
cli
xchg
push
mov
xor
dec
dec
sar
jbe
(bad)
ss
inc
sahf
or
je
sbb
fwait
pushf
ficomp
xchg
jne
dec
repnz
jmp
rcr
jmp
cmp
dec
aad
repnz
jl
pop
dec
inc
jge
mov
dec
pop
adc
mov
cmp
retf
cdq
dec
call
cmps
cmp
ror
bound
rol
cli
call
repnz
pop
push
jge
mov
xor
popf
and
pop
fdivr
cmp
mov
cmp
ins
jo
add
pop
mov
fsub
or
sahf
(bad)
cmp
mov
push
shl
adc
jge
mov
mov
bound
sub
(bad)
cdq
cli
leave
mov
inc
mov
mov
cli
jbe
dec
mov
inc
adc
or
xchg
pop
js
mov
call
hlt
call
rol
xchg
mov
dec
pop
push
arpl
pop
adc
daa
nop
shl
mov
test
xchg
inc
xor
pop
and
call
inc
stc
mov
or
aaa
rcl
test
loop
rol
test
mov
shr
ds
mov
inc
pop
mov
fcmovnb
fisubr
jp
stc
dec
cmp
mov
mov
mov
inc
push
xor
mov
dec
xor
add
or
push
jnp
sbb
mov
cmp
push
push
ins
or
xor
fwait
fwait
movs
xlat
pop
add
(bad)
jbe
popf
mov
call
or
mov
sbb
call
fadd
int
repnz
cmp
cmc
mov
mov
jl
mov
xchg
sub
lods
loop
xchg
in
dec
mov
adc
call
or
inc
mov
adc
data16
push
mov
cmp
clc
ffree
(bad)
shl
xchg
sbb
test
call
aaa
pop
cmp
mov
push
int3
add
jmp
jle
test
ret
xchg
mov
or
dec
mov
sahf
adc
add
push
mov
xlat
jnp
lahf
retf
mov
js
nop
sbb
inc
movs
cs
xchg
(bad)
pop
xor
pop
jo
(bad)
cmp
stos
(bad)
adc
ret
popa
jns
push
xor
xchg
mov
adc
iret
aas
jae
xchg
inc
and
(bad)
mov
call
xchg
jle
mov
adc
call
arpl
push
dec
call
jno
mov
jl
adc
and
xchg
pop
sbb
mov
fistp
xor
jne
fsubp
xor
xor
xor
pop
mov
jg
jae
sub
(bad)
cld
(bad)
inc
xor
add
mov
inc
jae
into
ss
adc
cmp
dec
fidivr
int
mov
cmp
dec
nop
sbb
sbb
pushf
sbb
out
(bad)
cmp
test
jmp
push
xor
(bad)
pusha
jge
inc
pop
loope
test
mov
lock
test
fld
jp
add
iretw
retf
cmps
pushf
rol
call
sub
add
fiadd
or
test
mov
push
pop
inc
loop
xchg
cwde
pop
mov
mov
div
mov
and
call
(bad)
in
lods
adc
imul
push
int
xchg
jo
xchg
cmp
mov
jmp
aam
cdq
jae
mov
dec
(bad)
cmp
cmp
cmp
sub
pushf
xchg
jmp
push
and
dec
icebp
mov
cmp
mul
cmp
inc
xchg
jp
sbb
and
dec
ds
call
cmp
(bad)
mov
in
mov
hlt
idiv
aam
pop
fcomp
pop
sbb
rol
call
jne
inc
data16
test
fwait
add
aas
xchg
sub
nop
pop
repnz
ins
aas
mov
and
mov
mov
sub
pop
xchg
mov
push
imul
sbb
add
rol
and
xchg
cmp
mov
or
or
pop
in
sub
cld
shl
mov
pop
sbb
rcl
idiv
pop
or
nop
nop
mov
push
mov
pop
rcr
xchg
mov
xor
retf
jne
sbb
movs
mov
xor
dec
mov
cmc
sbb
cvtps2pd
sti
sar
mov
cmp
aaa
stos
xor
pop
leave
out
xor
cdq
adc
xchg
or
push
adc
shr
xchg
mov
aad
add
dec
int3
inc
fisttp
cmp
jl
std
retf
shl
cmp
push
push
adc
mov
adc
sbb
loopne
dec
lds
inc
mov
dec
cmp
cmps
pop
rep
sar
dec
dec
call
sahf
cld
test
fmul
pop
aad
jno
xchg
push
xor
mov
add
push
loope
inc
sbb
jmp
cdq
xor
mov
fstp
loope
not
scas
mov
jg
fcom
or
jae
xchg
inc
jae
ret
repnz
ror
inc
outs
xchg
mov
popf
int
dec
lahf
ret
or
int
mov
or
sbb
aad
xchg
xchg
inc
mov
xchg
inc
or
lahf
out
dec
xchg
pop
pop
xchg
adc
xlat
les
lods
mov
call
icebp
nop
or
adc
shl
aas
aad
xchg
pop
mov
pop
mov
js
push
mov
inc
xchg
jae
fisubr
sub
enter
push
cmp
xchg
jb
xchg
lock
mov
push
mov
inc
bound
repz
jmp
and
int
jnp
cmp
sbb
js
adc
test
xor
mov
(bad)
push
xchg
rcr
cmp
lods
or
sbb
mov
dec
nop
mov
cmc
dec
pop
add
jle
xor
call
jle
ror
push
int
xchg
leave
fisttp
mov
jno
mov
xchg
or
imul
scas
fstp
lsl
(bad)
push
pop
cli
xchg
mov
test
cmp
adc
push
lods
cld
cmp
push
mov
xchg
pop
dec
repnz
inc
jle
call
test
mov
fcom
inc
jl
adc
xor
test
push
mov
adc
xchg
xchg
jbe
jp
xchg
mov
xlat
rcr
mov
mov
nop
pop
mov
sub
push
mov
int3
dec
nop
fwait
push
push
jl
inc
ret
sbb
sub
jns
or
popf
test
iret
pop
test
fwait
cs
lahf
bound
xchg
mov
ins
icebp
sub
xchg
mov
dec
aad
sub
jo
cmovbe
inc
dec
xchg
xor
je
repnz
ja
jp
xor
mov
dec
call
or
mov
lahf
dec
sbb
or
cmp
sbb
pop
pop
mov
jg
cli
rcr
ror
sbb
adc
cmp
idiv
call
inc
(bad)
ficom
xor
mov
xchg
imul
or
fstp
or
stos
xor
jge
and
mov
aas
sbb
mov
adc
nop
jp
call
xchg
and
outs
cmp
popa
dec
jg
call
push
lock
mov
add
lahf
mov
pop
jbe
ret
fisttp
add
xchg
push
test
jmp
jp
adc
jo
adc
push
adc
sbb
std
test
and
sbb
dec
fwait
dec
inc
je
push
sub
push
fisttp
and
ror
aas
dec
mov
lock
pop
sbb
sbb
int3
inc
stc
cwde
mov
pop
imul
cli
and
fdivr
outs
inc
rcr
jge
inc
pop
(bad)
iret
xchg
lock
loop
mov
mov
jbe
dec
push
dec
xor
mov
ja
ret
fsubr
jmp
ror
aaa
adc
inc
adc
mov
cdq
jp
adc
mov
pop
or
hlt
inc
jae
xchg
jne
xchg
mov
dec
mov
loope
jp
mov
jp
popf
adc
cmp
xchg
sbb
popf
mov
cli
les
adc
pop
dec
adc
mov
dec
mov
pop
cmps
xchg
mov
push
fwait
inc
dec
xchg
mov
push
stos
push
push
jl
mov
xchg
ficom
retf
fidiv
je
adc
fisttp
(bad)
repnz
mov
ja
dec
sbb
cdq
add
mov
sbb
in
xchg
jmp
add
pushf
dec
push
mov
xchg
sub
xor
add
mov
xchg
iret
or
sbb
fist
xchg
mov
add
dec
adc
push
add
dec
fnsave
jg
test
pop
jae
push
inc
jl
pop
in
dec
and
mov
mov
lahf
sbb
lods
jg
mov
test
jnp
pop
jle
jmp
call
mov
inc
sbb
(bad)
data16
stc
pushf
dec
cmp
adc
repz
add
dec
fwait
jns
mov
mov
xchg
sub
out
ficomp
xlat
clc
dec
xor
inc
mov
popf
sbb
add
(bad)
mov
adc
lock
mov
or
pop
sub
mov
mov
call
dec
pop
xchg
push
add
push
shl
xlat
inc
(bad)
xlat
sbb
ins
dec
mov
pop
xchg
cdq
fdiv
mov
sbb
add
(bad)
das
xor
push
inc
imul
lods
push
stc
jp
movs
not
fcmovnb
sbb
xchg
xor
inc
adc
les
jp
sub
hlt
add
mov
fcmovbe
mov
cs
popf
pop
mov
imul
(bad)
mov
cs
push
xlat
pop
xchg
fnstenv
or
jo
(bad)
jbe
mov
pop
sbb
in
pop
pop
dec
sbb
mov
xor
mov
inc
cdq
dec
cmp
sbb
xor
imul
xor
mov
mov
inc
xor
mov
int
mov
xor
mov
jl
push
fs
adc
mov
call
stos
jne
movs
mov
and
in
push
shr
xchg
jp
hlt
jnp
mov
jns
xchg
add
or
mov
push
pop
push
dec
inc
fidivr
mov
nop
jns
imul
test
jle
xchg
jno
or
test
and
cdq
xor
add
into
add
sub
sbb
cs
fistp
fidivr
xchg
lahf
mov
push
lahf
xor
xor
jecxz
adc
test
add
mov
test
movs
mov
or
xor
xor
pop
int3
cmp
mov
outs
loope
dec
pop
std
xchg
mov
cdq
daa
dec
sbb
xlat
xchg
cs
dec
or
ins
dec
int
mov
sbb
push
inc
inc
sbb
mov
mov
pushf
mov
or
fcom
les
hlt
bound
shl
mov
sar
or
inc
(bad)
out
mov
call
push
jae
test
fnsave
lods
int
and
adc
push
ficom
xlat
hlt
rol
adc
setge
xchg
dec
test
mov
(bad)
jp
cdq
dec
aad
xchg
jle
mov
add
push
lods
fwait
inc
movs
mov
aad
repnz
adc
das
xor
xchg
ror
xchg
dec
or
jp
sbb
xor
mov
mov
xor
push
jge
sbb
add
mov
push
adc
ds
pop
sbb
xchg
mov
mov
mov
xchg
movs
idiv
test
adc
iret
xchg
or
imul
or
hlt
mov
mov
push
mov
fisttp
out
arpl
rol
jbe
imul
mov
aad
add
ret
push
xor
jb
dec
retf
dec
test
and
shl
jns
adc
xor
pop
pop
mov
cld
inc
pop
fmul
rcl
mov
xor
xchg
jns
push
cmp
das
(bad)
mov
retf
popa
adc
push
pop
fdivrp
xor
xchg
mov
ror
std
cdq
sbb
mov
(bad)
fadd
mov
stos
out
out
bound
call
xor
adc
pushf
sub
fst
push
loopne
aam
sar
xchg
adc
mov
inc
mov
mov
das
mov
or
hlt
cs
xchg
jge
sbb
addr16
sbb
mov
add
sbb
add
jo
adc
mov
js
dec
not
movs
popf
jno
shl
bswap
pop
mov
or
ret
push
movs
movs
pop
cmp
cdq
mov
pop
push
adc
xor
jne
repnz
nop
sbb
cmp
push
xor
stos
jp
inc
aad
into
addr16
dec
inc
call
mov
stos
stc
sub
xchg
mov
repnz
inc
xor
jl
inc
or
push
cmp
aaa
lahf
mov
dec
add
cmp
xchg
pop
cmp
pop
call
outs
mov
mov
retf
popa
test
cdq
dec
int
mov
aad
dec
jl
xchg
xor
and
pop
pop
inc
or
ja
test
sbb
mov
mov
jb
pop
xchg
shr
cwde
add
push
dec
pop
sbb
sbb
js
out
sub
add
rol
cmp
fldcw
xchg
fistp
push
sub
leave
xor
dec
rol
jb
dec
push
imul
or
adc
xor
inc
or
xchg
xor
xchg
ror
mov
aad
or
fcmovbe
div
adc
cli
iret
or
xchg
lds
stc
rcl
pop
lock
push
cmp
inc
and
mov
rcl
imul
retf
jle
mov
ret
test
xchg
inc
adc
scas
dec
adc
xor
xor
jb
fiadd
sahf
inc
fiadd
ret
popf
pop
in
stc
daa
xchg
mov
dec
push
ins
inc
inc
iret
or
pop
aad
not
jp
pop
scas
adc
push
dec
lods
mov
dec
mov
mov
sbb
push
std
mov
cmp
mov
stos
mov
ja
jne
push
stos
pop
pop
stc
faddp
xor
rol
lds
mov
mov
xchg
pop
jge
cmp
jbe
iret
inc
or
popf
sbb
add
into
xor
das
scas
mov
call
push
push
push
lods
aas
xor
movs
ficomp
pop
test
dec
fiadd
ret
shr
and
inc
dec
adc
sbb
push
mov
fwait
mov
cmp
lock
dec
jo
xchg
mov
cmp
add
mov
fist
not
jo
call
cli
dec
aaa
sbb
or
pop
mov
inc
mov
shl
mov
aaa
sbb
pop
rcl
arpl
mov
sbb
outs
enter
stc
dec
out
mov
pop
repnz
repz
push
dec
jno
mov
jge
enter
push
inc
jg
xchg
shl
cmp
cli
lods
mov
cwde
ds
sbb
aad
aaa
cmp
in
mov
ror
inc
mov
pop
adc
cmp
hlt
ss
je
mov
popf
inc
xor
es
add
outs
shl
js
sbb
sub
dec
shl
xchg
cmp
cdq
inc
dec
cmp
scas
jge
mov
les
or
leave
xlat
xchg
fwait
adc
arpl
(bad)
lock
jae
mov
adc
xchg
mov
dec
inc
jne
xor
dec
mov
fiadd
adc
mov
mov
push
sub
inc
xchg
out
mov
xchg
mov
std
es
rcl
jns
mov
add
dec
push
push
std
mov
in
inc
(bad)
rcr
push
mov
add
mov
or
frstor
or
(bad)
mov
mov
pusha
ret
aas
lds
or
mov
jle
lahf
ror
jp
mov
xor
(bad)
popf
mov
mov
add
adc
aam
test
cmp
adc
pop
cmp
cmp
or
test
fucomi
call
inc
inc
mov
mov
stos
xor
lds
mov
les
pop
xchg
shl
pop
pop
fmul
xor
adc
sbb
push
xor
pushf
xor
pushf
icebp
retf
mov
xchg
push
cwde
push
hlt
lods
loopne
mov
iret
(bad)
adc
dec
int3
cmps
aam
movs
cmps
mov
scas
adc
inc
add
xchg
mov
dec
mov
lock
cli
neg
add
idiv
add
push
ret
daa
jp
jp
add
mov
test
sbb
xor
and
cmp
ins
xor
mov
mov
ficomp
mov
adc
out
inc
ins
add
add
fistp
sbb
jo
test
sub
call
aas
push
xchg
mov
jbe
mov
dec
mov
scas
cmp
jns
cmp
pop
push
ins
rcl
mov
xchg
push
jae
rcl
scas
dec
ret
cdq
sbb
int
xchg
jns
jb
jnp
cli
cdq
jge
xchg
call
dec
xlat
push
cmp
adc
lods
repnz
inc
dec
inc
sbb
xchg
push
inc
es
push
sub
frstor
sub
jb
(bad)
pop
jmp
sbb
into
dec
sbb
mov
call
jbe
add
xchg
pop
pop
sahf
xor
sbb
pop
pop
mov
iret
cmp
jg
pop
loop
mov
inc
jo
mov
xor
mov
cmp
jb
and
inc
sbb
jp
mov
push
ja
shl
inc
sbb
lds
lahf
jle
mov
jmp
test
cmp
pushf
(bad)
fimul
sahf
clc
xchg
adc
lock
add
jle
sub
aas
(bad)
push
pushf
mov
mov
sbb
xlat
jmp
mov
test
cmp
dec
mov
js
leave
xchg
pop
inc
imul
mov
jae
adc
dec
or
push
mov
jl
stos
fsubr
sbb
xchg
sbb
lds
jo
arpl
dec
aam
dec
push
jne
jle
fiadd
retf
xchg
mov
mov
pop
jb
push
dec
(bad)
sahf
test
sbb
or
xchg
jns
mov
sahf
mov
xor
lods
push
fcomp
repnz
(bad)
mov
mov
adc
push
ins
inc
cmp
mov
fimul
inc
mov
xor
stos
sbb
fmul
jle
xchg
inc
scas
int
stc
mov
pop
mov
test
arpl
test
xchg
cdq
lods
dec
push
jno
add
fld
dec
pop
repz
sbb
cdq
jne
xor
cmc
dec
or
aam
shl
push
out
push
mov
jnp
pop
adc
mov
xlat
nop
iret
xor
xchg
mov
mov
inc
mov
ror
sbb
xchg
sub
mov
cwde
jae
fnstsw
aam
mov
cmp
mov
push
sub
int
sti
ficom
adc
jb
shl
lahf
xchg
pop
jne
sar
pop
push
retf
dec
mov
gs
adc
sahf
mov
mov
shr
mov
into
cmp
adc
or
cmp
fadd
fwait
adc
inc
lahf
dec
dec
sti
stos
dec
cli
and
test
cmp
adc
iret
test
push
call
je
test
repnz
or
mov
jno
call
push
cmps
pop
stos
jmp
cmp
ret
cmp
fcom
dec
call
sbb
mov
mov
jmp
xor
mov
xchg
adc
mov
popf
test
push
into
mov
push
in
push
aaa
sbb
jnp
push
lock
jp
cmp
xor
adc
repz
ror
xor
push
int
mov
jp
ret
fst
xchg
dec
xchg
daa
nop
adc
add
adc
sbb
adc
js
add
adc
or
push
lock
dec
xchg
xchg
sbb
push
dec
pushf
xchg
outs
add
cmp
or
stos
neg
fadd
add
not
(bad)
mov
int3
rcl
cmp
sbb
ficomp
mov
cmc
jnp
cli
cmp
xor
xchg
cld
add
add
ret
xchg
cmp
mov
dec
cwde
fidivr
sub
xor
pop
sbb
mov
fcom
jno
inc
lahf
xor
hlt
xor
jnp
mov
adc
js
and
mov
cmp
cmp
mov
push
pop
in
pop
inc
cwde
aaa
lahf
pop
dec
jo
jge
mov
push
pop
push
adc
or
jae
call
imul
xchg
jnp
sbb
jp
pop
fnclex
iret
pop
or
sub
popf
xor
ins
sar
aam
repnz
mov
cwde
popf
les
fs
(bad)
push
cmp
mov
xchg
push
ins
mov
cld
ss
cmp
pushf
adc
mov
sub
call
repnz
inc
mov
popf
aas
cdq
dec
push
fld
into
mov
outs
nop
cld
mov
test
inc
sahf
not
frstor
ror
jae
mov
mov
(bad)
jb
out
push
aaa
pushf
and
mov
mov
pop
xchg
jmp
mov
cmc
cmp
into
mov
or
sar
sbb
xchg
add
mov
cmp
pop
xor
sbb
aam
cli
fimul
cmp
push
int
fsubr
or
mov
xchg
adc
arpl
push
sbb
adc
les
popf
mov
(bad)
sbb
mov
dec
mov
fcomp
fcmove
mov
rcl
call
mov
mov
stc
pop
xor
popa
retf
mov
jp
pop
jbe
push
lahf
or
fwait
ins
nop
sbb
neg
imul
retf
push
jl
ss
shl
(bad)
rcl
inc
adc
ret
sbb
inc
adc
cmc
pop
add
lods
rol
push
call
outs
add
cmp
test
sub
(bad)
(bad)
jbe
mov
arpl
jno
dec
adc
mov
cmp
inc
jbe
mov
fwait
xor
xor
sbb
pop
dec
fcom
lahf
mov
adc
mov
repnz
in
xor
sar
and
loop
mov
dec
sbb
mov
(bad)
pop
(bad)
pushaw
xchg
xchg
mov
jns
stos
mov
jbe
call
mov
scas
mov
push
loopne
js
mov
mov
scas
inc
js
or
jb
sahf
push
mov
inc
test
(bad)
mov
xchg
cmc
inc
xchg
(bad)
sub
cwde
xor
loope
push
cld
pop
mov
pop
or
stos
mov
mov
pop
pop
test
dec
retf
cmp
jne
mov
adc
adc
js
xchg
sbb
lods
push
rcr
add
jno
mov
pop
fdiv
(bad)
std
xor
std
jae
xor
inc
mov
mov
fcom
das
push
stos
aad
sti
fimul
cmp
xchg
rol
nop
cmp
xchg
mov
pop
call
test
jns
iret
sar
mov
pop
mov
pop
out
or
ss
cwde
cmp
scas
ror
mov
std
and
dec
or
test
shl
dec
push
aad
mov
pop
xor
sar
arpl
mov
or
jle
and
jb
pop
fwait
inc
pop
mov
mov
xchg
adc
je
lea
lock
stc
call
push
jo
cmp
ror
sbb
stos
jp
mov
int
sbb
mov
jl
xchg
add
add
shl
mov
stc
inc
in
inc
cmpxchg
cld
pop
mov
dec
jb
inc
push
or
enter
pop
fistp
call
out
hlt
mov
and
(bad)
nop
in
lea
scas
xchg
nop
dec
add
mov
pop
push
mov
add
jg
dec
repz
nop
mov
pop
adc
stos
push
jle
add
lods
xchg
clc
neg
fld
pop
inc
jns
call
xchg
dec
imul
adc
div
cmp
jnp
xchg
inc
stos
xchg
push
pop
je
jmp
dec
jp
ret
(bad)
cmp
sub
hlt
mov
add
adc
(bad)
cld
jl
dec
pop
cmc
or
aas
adc
(bad)
mov
mov
mov
jbe
(bad)
std
mov
mov
aaa
scas
cmp
jg
pop
pop
pushf
mov
xchg
mov
xchg
xchg
sub
shl
loop
fcomip
pop
cmp
jl
pusha
inc
or
jg
adc
fimul
adc
add
mov
xlat
or
aas
mov
dec
mov
fld
mov
xor
xor
ret
push
dec
mov
pushf
jge
mov
mov
dec
dec
or
outs
ret
cld
mov
jmp
or
sbb
jbe
popa
jp
dec
test
enter
jb
mov
cwde
cwde
inc
pop
inc
bound
xor
mov
adc
lahf
sbb
push
xor
ror
mov
sbb
dec
popf
mov
popa
sbb
xlat
(bad)
pop
xor
add
stos
in
push
mov
js
dec
push
jl
push
stos
cmp
ficomp
mov
mov
adc
call
cmovb
aas
mov
xor
xlat
pop
jae
sbb
cdq
adc
mov
mov
out
popf
push
dec
shr
jbe
push
dec
push
daa
scas
stos
fild
movs
cmp
cli
dec
jae
ss
movs
(bad)
fnstsw
iret
cmp
pop
xor
cwde
sahf
xchg
clc
inc
cmp
dec
sbb
adc
pop
push
fcom
mov
pop
pop
jle
push
xchg
aad
cmp
sbb
or
mov
movs
daa
xchg
pushf
sbb
jae
add
push
and
sbb
ret
ss
ins
ret
stos
clc
jp
(bad)
cmp
inc
aad
sub
inc
ror
jmp
mov
dec
xchg
repnz
push
pop
jle
mov
xchg
or
push
nop
je
jl
rcr
add
add
jl
cwde
hlt
in
test
(bad)
mov
pusha
(bad)
xor
pushf
sbb
cmp
xor
icebp
jne
cdq
adc
imul
mov
push
xchg
fnstcw
test
scas
stc
clc
ret
lods
mov
add
leave
ja
pop
inc
sbb
mov
mov
icebp
push
aad
icebp
dec
mov
add
mov
es
mov
xchg
mov
mov
aam
mov
mov
pop
inc
push
jnp
jno
aaa
inc
fcomp
mov
hlt
inc
xor
pop
push
pushf
mov
cmp
dec
jge
cmp
jg
and
push
jbe
mov
shl
pop
in
inc
jle
adc
(bad)
pop
rcl
mov
sbb
mov
aam
pop
adc
mov
xchg
pop
mov
mov
ret
dec
lahf
aaa
dec
xor
jmp
mov
cmp
(bad)
dec
pop
cdq
mov
iret
jle
lods
mov
cwde
scas
mov
cs
push
lar
adc
rol
cmp
pop
xchg
adc
cmp
pop
pushf
xchg
cwde
mov
ror
(bad)
jmp
mov
ins
xchg
es
mov
mov
hlt
call
push
mov
(bad)
cmp
mov
enter
or
pop
mov
dec
test
add
jmp
push
lea
inc
xor
icebp
int3
xchg
ss
ret
cld
pop
movs
xor
or
inc
xor
and
fimul
pop
mov
xchg
add
cli
add
cmps
fcom
test
adc
jno
xchg
fcom
mov
sti
or
mov
aad
shl
call
sbb
xor
jb
or
add
dec
sbb
jp
mov
stos
clc
cmps
aam
(bad)
nop
std
sbb
xor
pop
mov
sub
cdq
cmp
inc
push
xchg
loope
jp
inc
push
adc
push
mov
mov
jge
xchg
leave
adc
add
dec
test
fisubr
fidivr
cld
lods
add
jle
jae
cmp
jns
out
xlat
pop
mov
xor
mov
sar
mov
mov
mov
pop
inc
fcmovb
jns
call
inc
sbb
xor
std
xchg
push
mov
cs
or
sbb
jmp
inc
rcr
cdq
or
(bad)
ror
mov
xchg
int
repz
lds
cmp
mov
cwde
sar
rcl
repnz
imul
mov
mov
cmp
cmp
lods
cwde
sbb
or
or
xor
mov
fist
jp
pop
push
shl
aas
adc
push
cdq
mov
fiadd
sub
pop
mov
xchg
stc
fld
lock
sbb
cli
mul
mov
sbb
jnp
inc
jge
cmp
ins
mov
hlt
sbb
xchg
icebp
pop
mov
mov
mov
or
(bad)
sub
in
jae
jge
cwde
dec
push
mov
bound
adc
sub
popf
sub
xchg
mov
sub
stos
lahf
mov
xor
xchg
jns
shr
mov
xchg
jb
outs
dec
aas
jnp
sbb
add
ins
dec
push
ja
call
push
pop
leave
mov
xchg
in
inc
dec
mov
push
stos
lods
mov
xchg
mov
push
dec
jo
sbb
xchg
js
ret
mov
cmp
retf
pop
xchg
cmp
sar
push
cmp
mov
lock
sbb
shr
dec
pop
aaa
push
sahf
and
cwde
repnz
cmp
pop
stos
aaa
dec
fisubr
mov
jns
sahf
aad
xor
mov
adc
adc
push
mov
push
cmp
jnp
push
aad
inc
cwde
mov
xor
xchg
aam
std
cwde
push
lock
mov
ja
rcl
add
cmp
mov
push
aaa
cmp
sbb
fiadd
popf
jge
xor
jmp
mov
stc
mov
mov
mov
icebp
lea
call
fldenv
inc
sbb
int
stos
push
xchg
cmps
(bad)
push
mov
xor
mov
mov
jmp
hlt
inc
inc
cs
fmul
adc
xlat
push
xchg
cmp
or
test
jne
pop
rcl
push
stc
cli
arpl
ror
pop
mov
mov
inc
setbe
jge
cdq
mov
imul
sahf
out
sahf
outs
sbb
cmp
pop
push
dec
adc
cmps
std
push
adc
mov
(bad)
push
fcomp
or
push
cmp
and
pushf
mov
add
mov
out
sub
cmp
imul
jp
scas
pop
jg
jg
jbe
test
mov
push
out
push
mov
xchg
xchg
xchg
cdq
fistp
mov
jge
jmp
xchg
or
xor
inc
jl
imul
jg
ss
jmp
mov
cwde
jge
popf
mov
aaa
lea
sbb
xchg
nop
out
rol
cwde
ins
arpl
jmp
cwde
inc
jae
inc
push
adc
stos
sub
fnstenv
push
and
cmp
nop
js
fild
iret
push
imul
neg
xchg
stos
retf
ds
xor
sbb
dec
or
xchg
adc
in
inc
fistp
mov
pop
packssdw
hlt
cwde
inc
jb
sbb
xor
dec
mov
mov
push
sbb
rcr
pop
xor
nop
mov
jmp
or
stc
sbb
xchg
hlt
sub
nop
adc
xor
dec
mov
dec
sbb
push
or
inc
adc
aaa
cs
out
mov
fwait
dec
cmp
nop
mov
xor
cmp
xchg
mov
inc
mov
or
jmp
sub
pop
xchg
jne
push
mov
fsub
inc
sbb
sbb
sbb
rcl
ficomp
js
mov
mov
adc
and
dec
mov
lds
cmp
mov
jae
loopne
retf
mov
cwde
fist
sub
inc
dec
lods
jp
std
mov
out
xchg
inc
ja
js
les
lss
xchg
xchg
or
xor
mov
cmp
push
sbb
dec
pop
mov
fmul
add
xchg
mov
push
push
int3
sar
test
xchg
cmp
mov
lds
sbb
pop
adc
jg
jmp
mov
aad
sub
inc
ret
sbb
lock
cmp
mov
mov
jp
cdq
xchg
mov
shld
ins
outs
cmp
xchg
ja
sbb
pop
jae
repnz
pop
mov
mov
adc
inc
lods
test
repz
xchg
pop
push
inc
dec
scas
pop
or
adc
dec
mov
cmc
nop
cdq
push
aaa
loop
jl
cmp
adc
inc
shl
cmp
lea
xor
push
mov
dec
or
je
push
in
push
xor
adc
cmp
push
xor
outs
dec
xor
xor
pushf
inc
mov
cmps
aad
nop
inc
ja
aam
pop
push
jmp
in
adc
mov
mov
dec
(bad)
(bad)
dec
xchg
jo
(bad)
fst
sbb
outs
leave
push
cmp
xchg
inc
(bad)
ss
idiv
hlt
cmp
inc
dec
dec
lahf
cmp
retf
xchg
push
or
push
xchg
mov
nop
mov
scas
cmp
shr
pop
dec
jo
int3
xchg
mov
pushf
repz
pop
jb
mov
push
and
push
cld
sbb
fwait
ss
or
xor
pop
mov
or
xchg
stc
mov
shr
inc
push
test
xor
mov
sti
rcr
pop
xchg
mov
ins
adc
and
jns
cmps
jl
xor
jp
dec
adc
sbb
pop
xor
inc
add
jle
sub
inc
push
mov
jb
inc
test
jle
mov
sbb
jle
cmp
cmp
imul
cmp
mov
jge
xchg
mov
imul
mov
mov
adc
push
and
xchg
popf
neg
repnz
sub
adc
mov
out
jne
out
push
mov
jb
in
call
jle
cmp
cmc
adc
js
push
xor
mov
cmc
ja
sbb
icebp
cmps
aam
fsub
dec
mov
mov
stc
push
inc
xor
std
pop
lods
sub
mov
(bad)
jmp
mov
hlt
cli
push
aas
push
pop
adc
dec
inc
xor
jge
add
push
cmp
dec
mov
hlt
pop
inc
pop
lahf
inc
mov
dec
sti
xchg
imul
leave
std
ins
loope
call
pop
sub
js
pop
sub
push
mov
mov
mov
aaa
cwde
test
mov
jbe
jge
dec
push
cmp
(bad)
arpl
das
stc
jb
out
push
in
add
aas
mov
cmp
sbb
mov
movs
push
out
ss
adc
mov
pop
idiv
sub
or
cs
push
retf
xchg
aas
pop
shl
in
ja
xor
add
xchg
call
stc
ficomp
xor
dec
cwde
sub
mov
inc
adc
mov
pushf
into
inc
pop
repz
push
lock
xchg
dec
arpl
pop
call
jle
adc
or
adc
stos
push
mov
add
pop
add
pop
sub
retf
call
jnp
adc
xchg
jbe
inc
inc
fisub
adc
popf
repnz
jp
xlat
push
inc
xor
pop
pop
outs
xchg
aad
fimul
xor
mov
xchg
jle
xchg
fwait
mov
dec
jnp
inc
jns
js
imul
cdq
pop
adc
int3
xchg
sahf
dec
retf
cdq
fwait
mov
pushf
push
jae
arpl
jae
imul
call
xchg
stc
int
xchg
jg
xlat
pop
xchg
xchg
mov
sar
push
lods
addr16
xchg
jle
inc
popf
(bad)
pop
cmp
inc
outs
lahf
xchg
mov
mov
int
cmp
inc
icebp
ficom
cmp
or
pop
call
test
jo
idiv
shl
rcl
arpl
pop
(bad)
cmps
cmp
call
pop
mov
push
push
lock
into
and
mov
stos
ins
mov
das
inc
out
nop
jp
cmp
jo
adc
int3
and
imul
mov
movs
mov
push
pop
mov
cli
mov
pop
and
xchg
add
retf
pop
lods
sub
js
popf
sbb
add
into
mov
call
jne
idiv
xchg
pop
sbb
lock
or
jmp
retf
xchg
mov
shr
mov
call
xlat
cwde
or
jnp
pop
inc
cmp
mov
stc
jp
inc
jno
sbb
imul
pushf
push
xchg
cmp
jae
mov
jle
jo
xor
mov
cwde
std
mov
out
adc
rcr
xchg
sub
or
mov
sbb
xchg
xor
adc
jg
inc
push
sbb
clc
xor
dec
rcr
adc
lods
push
pop
std
rcr
inc
adc
jae
mov
fcomi
mov
hlt
lahf
hlt
inc
daa
popf
push
push
fwait
inc
enter
sbb
adc
ins
rcr
jb
adc
lahf
mov
sbb
fst
sbb
jl
or
push
pop
pop
pop
shr
out
hlt
lock
adc
jl
mov
push
mov
adc
adc
lods
xchg
mov
push
sbb
adc
xlat
in
add
xchg
sahf
pop
mov
out
ss
and
push
mov
dec
xchg
sbb
sar
sbb
jmp
sbb
cmp
cmp
mov
mov
rcl
push
ss
arpl
leave
dec
xchg
ins
inc
inc
xor
ret
mov
xor
xchg
push
push
adc
test
scas
xlat
retf
jmp
pop
std
shr
mov
aaa
pop
push
test
(bad)
lds
sub
fwait
rcr
cmp
push
sahf
mov
fcmovnbe
cli
je
out
mov
std
mov
retf
ret
adc
sub
pop
arpl
inc
xor
mov
aas
xchg
mov
pop
push
or
cmp
jnp
fimul
repz
xchg
xor
xor
jnp
inc
mov
ret
jae
test
jno
pop
cld
cmp
pop
sub
call
popf
adc
push
pop
mov
(bad)
pop
mov
mov
mov
aad
xor
and
jnp
adc
mov
idiv
push
mov
nop
aad
mov
fcom
cdq
mov
sbb
or
push
ins
inc
inc
pushf
sub
out
out
inc
fbstp
(bad)
cmp
jbe
arpl
mov
mov
jmp
inc
xor
xor
ins
mov
mov
lock
mov
push
loop
clc
adc
imul
push
add
sahf
sub
cmp
xor
not
sbb
push
dec
cmps
xor
cdq
daa
xchg
hlt
add
das
xchg
retf
mov
mov
cdq
stos
pop
push
mov
xor
ficomp
cli
mov
jae
cmp
jo
sbb
pop
jl
or
arpl
shl
jb
push
imul
mov
imul
fnsave
or
std
pop
popf
pop
scas
xlat
(bad)
inc
cmp
call
xchg
jmp
sbb
push
cmp
adc
inc
dec
mov
cmp
xchg
mov
sahf
mov
inc
std
es
pop
call
push
nop
aaa
das
push
sbb
std
mov
jo
aad
mov
push
scas
mov
inc
push
imul
cmp
scas
dec
sbb
stc
mov
push
ins
push
jae
mov
inc
ja
jmp
push
dec
fisubr
mov
aad
inc
aaa
xor
sar
js
sbb
bound
xchg
sub
push
(bad)
mov
cmp
(bad)
mul
inc
adc
xchg
idiv
jl
test
add
shl
mov
js
xor
dec
test
xor
jl
push
mov
jo
jae
jmp
jp
rol
gs
or
sbb
jae
inc
ficomp
adc
cmp
and
cmp
add
lock
mov
sub
inc
sbb
sbb
pop
mov
mov
inc
stc
sub
lock
xchg
xor
push
cmp
std
cmp
popf
jb
add
jg
jbe
jae
inc
cmp
mov
imul
mov
js
jae
adc
(bad)
pop
push
jns
add
sub
xor
jne
xchg
rcr
repz
(bad)
xchg
pop
sbb
ss
or
push
pop
jmp
scas
mov
inc
sbb
jne
sub
pop
and
inc
push
cmp
int
xor
jns
inc
mov
stos
sbb
shl
mov
cdq
lahf
icebp
cdq
mov
push
xchg
dec
cdq
dec
jb
neg
fisub
in
inc
rcl
cmp
or
repnz
movs
cmp
mov
push
mov
sub
jb
fucomp
fwait
ret
fdivr
inc
pop
cmp
cmp
xor
jb
pushf
or
mov
xchg
push
adc
xor
mov
push
cwde
inc
lods
inc
push
popf
sbb
inc
mov
pushf
mov
adc
mov
outs
fld
adc
and
cmp
mov
cmc
cwde
ror
jne
gs
mov
nop
rol
xchg
fbstp
cmp
imul
mov
lods
pop
imul
popf
push
ja
int3
inc
or
sub
jl
fsub
repnz
je
xchg
into
sub
cmps
pop
adc
mov
ins
inc
icebp
lods
test
dec
inc
mov
movs
(bad)
hlt
lock
sub
jbe
inc
push
imul
sahf
sahf
or
rcl
sti
pop
cdq
stos
int
stc
pushf
xor
xchg
jae
iret
jl
pop
dec
jbe
mov
adc
inc
ficomp
sub
cmp
adc
mov
jnp
adc
mov
neg
jb
pop
jb
mov
sbb
xchg
ja
sub
adc
sti
mov
mov
sbb
cmp
mov
xchg
push
add
inc
jns
pushf
aad
cwde
jp
ficomp
inc
call
ret
or
int3
adc
cmps
jnp
icebp
push
cmp
xor
fwait
clc
stc
scas
adc
push
jae
test
pop
arpl
les
pop
mov
sbb
cmp
sbb
jns
dec
jo
xchg
xchg
xor
nop
sub
in
nop
pop
inc
cwde
add
cmc
adc
sbb
jae
adc
mov
mov
push
jb
add
push
lock
fwait
inc
xor
sbb
aad
add
inc
ins
cmp
xlat
mov
fdiv
ret
neg
mov
test
popf
test
push
mov
sub
push
dec
adc
push
sbb
mov
cmp
mov
mul
xor
jae
cwde
fiadd
pop
mov
jae
inc
adc
test
imul
xor
cmp
xchg
push
stc
xchg
jo
ret
add
repz
add
popf
mov
jo
xor
mov
inc
jb
mov
mov
retf
jbe
ret
sbb
mov
adc
cmp
adc
dec
sbb
xor
inc
fimul
cmp
out
or
xor
push
inc
xor
xchg
aam
adc
pop
mov
sahf
loop
sahf
xor
jge
jmp
test
lahf
js
dec
push
xor
xor
(bad)
xor
repnz
int3
jno
xchg
mov
cmp
(bad)
sub
jb
mov
call
pop
jmp
jl
jge
xor
or
pop
lahf
jae
retf
push
aaa
xor
pop
fwait
iret
xchg
(bad)
mov
dec
or
mov
push
pop
std
mov
test
xchg
ror
je
jge
jne
inc
xchg
mov
mov
imul
stc
inc
aas
or
ret
sbb
sbb
pop
and
cwde
repz
push
jae
pop
imul
into
mov
pop
dec
inc
call
xchg
es
imul
test
mov
retf
adc
sub
(bad)
push
mov
ins
add
lods
cwde
mov
mov
nop
sbb
nop
inc
aaa
cmp
or
mov
jnp
into
push
mov
pop
test
adc
imul
pop
mov
push
lods
inc
(bad)
mov
cld
pop
and
cmp
sub
cmp
js
mov
cmp
(bad)
std
cmps
mov
sbb
sbb
fidiv
mov
loopne
cmc
aaa
pop
inc
cmc
xchg
mov
inc
aad
cmp
push
xor
arpl
(bad)
cmp
xor
push
push
mov
push
daa
int
pop
xchg
pop
cdq
adc
popf
cld
out
cmp
push
sub
xchg
add
mov
adc
mov
lods
js
out
mov
ins
and
push
pop
jg
xchg
push
cwde
mov
sub
xor
aas
dec
jp
or
dec
test
scas
nop
push
daa
cs
(bad)
mov
call
in
aad
jge
mov
jno
call
loope
mov
push
movs
mov
dec
xchg
or
pop
and
xchg
pop
mov
push
xchg
or
dec
push
pop
dec
inc
adc
pop
call
dec
dec
adc
jbe
adc
sbb
pop
sbb
lods
sbb
push
int
pop
mul
call
dec
push
call
inc
cwde
arpl
jb
add
or
jg
js
fistp
out
adc
cmps
xlat
stc
or
cld
call
dec
hlt
sbb
popf
gs
lahf
inc
and
ds
jae
sbb
sbb
ds
mov
sbb
dec
inc
sbb
pop
ins
in
jns
js
xor
sahf
jp
idiv
xor
xchg
cmp
cld
cmp
inc
mov
and
dec
mov
or
mov
mov
mov
stos
repz
ss
imul
pop
dec
mov
sbb
mov
lods
mov
cdq
lahf
rcl
mov
lods
jne
push
xor
mov
aaa
dec
movs
pop
out
(bad)
cdq
jne
push
sub
hlt
or
mov
sbb
xchg
jl
imul
sub
mov
mov
retf
(bad)
fisttp
sub
sbb
mov
ins
aam
dec
in
mov
dec
dec
cmp
add
sbb
cdq
jb
sbb
mov
pop
adc
mov
fld
sub
movs
adc
adc
mov
daa
mov
sub
repnz
push
pop
sub
push
xchg
cmp
jne
mov
dec
push
mov
and
xor
xor
mov
test
je
int3
adc
cmp
ds
inc
js
mov
push
jne
lock
adc
(bad)
je
xor
addr16
fist
cmp
(bad)
xlat
stc
mov
data16
xor
jge
ror
adc
mov
dec
icebp
std
or
mov
or
push
aad
cmp
pop
mov
cmp
int3
jg
cwde
retf
jle
dec
jge
cmp
push
adc
inc
inc
adc
xor
pop
lds
push
fnsave
xor
add
xor
jge
jnp
jg
jl
arpl
mov
sar
mov
lock
or
jo
dec
jno
ja
push
nop
adc
retf
mov
xchg
cmp
pop
div
adc
js
mov
jl
xor
jmp
bound
aaa
cmp
mov
xor
jg
or
lock
int3
inc
jns
test
gs
dec
jne
mov
add
pop
xchg
sbb
cmp
dec
add
push
sbb
mov
std
jno
out
fadd
fstp
mov
(bad)
mov
in
mov
fwait
jb
sbb
pushf
adc
push
xchg
mov
cwde
cwde
pushf
repnz
sbb
shl
aaa
mov
push
jnp
int
jnp
sbb
mov
lods
push
xlat
mov
mov
fnstsw
out
pop
mov
inc
jae
inc
stc
inc
mov
mov
cmc
jae
xchg
in
jns
or
aam
jo
sbb
jg
jle
outs
fsub
aaa
inc
mov
ja
popf
rol
xor
test
pop
xchg
scas
mov
ret
ins
mov
pop
mov
pop
add
xor
adc
ret
lds
cmp
xchg
inc
int3
xor
or
mov
aas
and
jnp
mov
stos
jns
jae
rcl
xchg
(bad)
xchg
push
loope
aad
mov
mov
arpl
pushf
aad
mov
push
dec
nop
push
jae
xchg
pushf
inc
cmp
bound
fisttp
jp
dec
xchg
xchg
es
mov
loope
pop
arpl
cmp
push
add
cmp
cmp
push
mov
lods
and
popf
mov
out
lock
cmp
mov
push
dec
mov
mov
xchg
stos
sbb
outs
mov
mov
pop
mov
dec
shr
add
icebp
aas
pop
inc
cwde
jb
sub
popf
dec
xor
loopne
(bad)
lea
nop
cdq
pop
pop
shr
pop
jae
mov
push
fimul
mov
jb
cmp
int3
push
fst
mov
pop
inc
not
dec
arpl
sahf
jge
pop
cmp
pop
jmp
pop
adc
jmp
dec
movs
mov
pop
pushf
xchg
jno
or
mov
sbb
push
cli
sbb
sub
add
lods
inc
mov
pop
aaa
mov
push
retf
jne
sbb
xor
jg
nop
jge
cmp
adc
xor
jle
mov
and
jns
icebp
mov
cmc
xchg
sahf
xchg
mov
iret
cmp
fwait
xor
push
jl
mov
pop
and
sub
push
cmp
dec
sti
add
lds
bound
push
mov
cmp
dec
push
clc
mov
mov
jl
jl
sbb
fld
sbb
push
jo
ss
mov
dec
inc
jae
sbb
mov
nop
mov
mov
adc
lahf
and
into
sbb
push
and
mov
inc
imul
adc
add
push
fistp
popf
das
xor
pop
adc
(bad)
xchg
fist
xchg
out
adc
or
mov
xchg
mov
sbb
sub
fwait
inc
(bad)
cmp
cmp
jb
enter
iret
sahf
pop
(bad)
and
xor
pop
jne
pushf
and
fwait
push
nop
out
loope
jnp
clc
xchg
inc
or
lods
dec
sti
mov
jae
push
or
sbb
pop
add
pop
mov
dec
cmp
(bad)
out
imul
int
add
inc
ins
xchg
jo
adc
ficom
sbb
add
aas
pop
mov
cmp
mov
test
movs
stc
dec
daa
dec
push
mov
cmps
aaa
call
call
es
je
adc
repnz
mov
add
inc
mov
mov
call
adc
pop
cmp
mov
xor
ins
xor
test
dec
dec
mov
pop
dec
add
div
mov
dec
popf
jp
mov
xchg
repnz
pushf
mov
add
mov
mov
inc
xchg
cmp
fwait
cwde
rcl
sub
repnz
call
(bad)
jb
mov
add
mov
mov
pop
sub
mov
inc
mov
test
sbb
mov
xor
test
mov
xchg
cdq
xor
dec
sbb
std
sub
add
xchg
inc
repz
add
pop
mov
dec
pop
cmc
mov
aaa
mov
cwde
sbb
xchg
aad
xor
dec
jae
mov
mov
inc
icebp
xchg
daa
daa
js
pushf
inc
mov
fcom
mov
loop
xor
mov
popf
movs
repz
inc
xor
cmp
cmp
out
xor
sbb
cmovg
xor
sbb
cs
cmp
xchg
jg
add
fst
push
xchg
(bad)
jle
xor
push
sbb
iret
pop
xchg
lods
xchg
mov
adc
push
xchg
pushf
and
jae
or
mov
cmp
clc
int
rcr
data16
inc
pop
je
ja
inc
mov
lds
push
mov
clc
inc
in
adc
repnz
xchg
cdq
push
gs
add
ret
fimul
jge
mov
dec
push
pop
adc
push
pop
and
rcl
std
push
retf
add
clc
jbe
dec
mov
push
cmp
sbb
inc
push
popf
xchg
pop
lods
lds
jo
add
mov
xor
ins
lods
xor
js
cwde
ins
jb
xor
cmc
cwde
xchg
hlt
aaa
ins
mov
jmp
(bad)
popa
inc
xchg
xchg
mov
xor
and
je
pop
xor
and
stc
sbb
adc
sub
ins
inc
xchg
xor
add
dec
jno
xor
adc
and
xor
fnstenv
outs
lods
call
dec
jge
sbb
daa
mov
fwait
and
lahf
jge
dec
ins
mov
inc
mov
jne
scas
rep
ins
dec
lock
xchg
or
jne
sub
mov
imul
push
adc
int
mov
mov
jl
push
xor
dec
jae
imul
xor
mov
pushf
repnz
nop
push
jle
fdivr
pushf
adc
je
jo
test
sub
adc
sbb
cdq
push
imul
or
repnz
mov
(bad)
push
nop
pushf
inc
push
mov
push
bound
call
push
call
pop
xchg
test
shr
jno
inc
sbb
adc
sahf
lods
aaa
mov
dec
jae
dec
mov
rol
push
dec
jne
(bad)
stc
dec
jl
jg
cmp
movs
jp
sub
sbb
ins
pop
jns
adc
xor
jae
push
sbb
inc
push
jle
pop
call
cmp
es
nop
arpl
xchg
or
out
xchg
xor
icebp
hlt
push
mov
jle
int
std
jnp
jle
daa
sbb
mov
je
into
imul
nop
jge
mov
lods
push
xor
popf
cmp
xchg
xchg
pop
jno
pushf
jmp
daa
xor
test
aaa
int
data16
jne
sbb
inc
push
xor
je
popf
sbb
adc
xchg
aam
inc
push
cmp
(bad)
lock
nop
pushf
ds
cli
inc
ror
add
xor
pop
xor
xchg
jp
mov
out
dec
adc
call
mov
mov
pop
popf
xchg
fwait
add
sbb
xchg
mov
sbb
sbb
pop
les
arpl
inc
aaa
rcr
fisub
jg
and
cmp
arpl
sbb
adc
shl
or
xchg
mov
sbb
pop
mov
out
xchg
xchg
jg
mov
je
pop
dec
shl
lods
and
or
aad
lds
push
cmp
loop
mov
in
dec
jl
push
lock
pop
adc
repnz
daa
jge
pop
jb
xchg
sbb
mov
cmp
push
mov
cmp
mov
mov
xchg
push
sub
add
pop
xchg
jno
mov
xchg
cwde
ss
jb
daa
xchg
add
pop
mov
sbb
cld
pop
inc
fidiv
xchg
cmp
stos
xor
mov
xchg
cmp
idiv
add
cwde
xchg
adc
mov
jnp
mov
sub
mov
or
mov
xchg
pop
cmp
cmp
jae
popf
jmp
dec
sbb
cmp
xor
mov
repnz
push
icebp
daa
pop
mov
adc
sar
mov
jge
mov
jo
sar
std
jno
sbb
jo
fisttp
cmc
jl
cmp
inc
fidivr
nop
jl
inc
cmc
jg
inc
fwait
js
cmc
dec
xchg
xchg
sbb
sbb
int
pop
add
div
test
arpl
mov
sub
xchg
sub
retf
xchg
cmp
sub
jo
xor
xchg
repnz
fwait
cli
mov
repnz
adc
mov
cmp
jno
inc
fiadd
pop
push
lahf
add
xchg
push
ds
inc
mov
cmps
stc
jnp
jb
out
push
dec
scas
fdivr
dec
in
xchg
ret
xor
mov
mov
xchg
es
dec
lods
aaa
mov
xchg
push
xor
cmp
mov
cmps
adc
fwait
cmp
lahf
mov
fwait
jne
pushf
xchg
xchg
not
loopne
aaa
retf
xchg
mov
and
stos
std
fistp
adc
cdq
push
pop
lock
bound
xchg
cmps
call
dec
and
xor
mov
pusha
cwde
popa
and
nop
call
inc
shr
ret
loopne
inc
sar
in
iret
mov
jo
cld
mov
mov
call
js
inc
mov
inc
adc
mov
jmp
push
mov
cwde
pushf
dec
fsubr
add
and
push
pop
inc
ret
test
inc
aam
ret
pop
rol
lock
outs
mov
adc
push
cmc
hlt
sub
(bad)
jbe
mov
mov
lock
mov
pusha
call
je
cmps
inc
cmp
sub
(bad)
add
repnz
mov
std
inc
repz
pushf
aad
or
mov
mov
sbb
inc
aam
inc
pop
sbb
xchg
je
xor
inc
push
push
ret
mov
mov
sub
dec
aad
ret
mov
sbb
int3
or
int
pushf
xor
ret
lock
inc
idiv
test
mov
or
aas
pushf
sbb
push
push
mov
ficomp
cwde
cmp
jmp
mov
enter
pop
call
jecxz
loope
inc
jo
sbb
cmp
test
in
mov
pop
enter
inc
fdivr
mov
mov
mov
mov
cwde
dec
stos
xor
pop
xor
push
aaa
mov
adc
fsubr
retf
xor
retf
xchg
fisttp
cmp
mov
mov
int3
cmp
div
sbb
mov
test
add
ret
fidivr
iret
mov
pop
ret
pop
inc
call
les
xor
mov
mov
clc
mov
fsubr
jae
xchg
mov
fisttp
mov
push
ret
and
fsubr
cmps
inc
jb
or
ret
mov
xor
xchg
push
push
pop
sbb
pushf
sub
fistp
inc
xchg
mov
pop
ret
dec
fcmovnu
mov
les
sub
adc
cli
je
ret
pop
sub
call
cld
mov
inc
les
xchg
mov
inc
enter
out
xchg
ret
mov
shl
leave
std
mov
mov
scas
ret
fistp
inc
aas
mov
test
jp
sbb
jg
jae
inc
call
retf
sar
cld
mov
popf
pop
ret
ficomp
retf
cmp
mov
fadd
dec
mov
ret
mov
cli
fidivr
cwde
push
in
sbb
xor
fsubr
enter
sub
ret
in
es
clc
jnp
dec
int3
ret
xchg
ffreep
mov
aaa
cwde
jp
push
or
sbb
jmp
xor
push
pop
retf
lock
test
cwde
xchg
pop
and
retf
sub
inc
pop
mov
retf
sar
xor
push
aad
push
pushf
(bad)
rcr
rcr
jl
cmps
cdq
push
push
xchg
mov
and
in
inc
test
test
js
push
ret
ret
mov
pop
test
les
mov
inc
(bad)
outs
push
sar
push
mov
mov
push
mov
retf
xchg
mov
push
push
or
call
aam
push
push
inc
ror
cld
mov
pushf
pop
rol
and
sub
xor
pushf
test
pop
lods
push
popa
lods
pop
add
pop
sub
mov
adc
jle
mov
mov
sub
sbb
stos
push
jb
retf
jmp
mov
mov
cwde
jne
push
cvtps2pi
sar
pusha
ret
pop
fistp
xchg
inc
jb
fwait
or
cld
dec
sub
scas
loop
sti
(bad)
cwde
call
jae
sbb
aad
and
mov
mov
ins
jg
retf
pop
fild
fild
idiv
xor
pushf
ficom
cwde
cmp
(bad)
aam
xchg
call
fstp
cli
fmul
xor
sbb
pusha
mov
pop
pop
retf
imul
mov
fmul
call
scas
pushf
mov
cwde
mov
push
std
mov
int3
lods
sahf
xchg
pushf
fucomp
stos
retf
or
pop
and
cwde
xchg
sbb
out
cmp
popf
pop
xchg
xor
push
cmps
sbb
or
ja
adc
shl
scas
mov
xchg
mov
xor
mov
mov
pop
call
shr
pop
mov
pushf
ins
sbb
leave
mov
retf
mov
mov
pushf
daa
pop
jnp
imul
fimul
ficom
cld
cwde
cwde
rcr
or
les
call
imul
inc
dec
retf
cmp
mov
pushf
in
pop
push
adc
fidiv
xchg
leave
sar
call
sar
mov
mov
push
fdivr
call
cmp
push
xchg
dec
mov
mov
mov
push
xchg
xlat
inc
stos
retf
mov
pop
adc
pusha
mov
inc
cmp
xchg
mov
in
dec
pop
cwde
dec
int3
nop
pushf
jmp
repnz
push
clc
jl
aad
xchg
call
retf
xchg
and
(bad)
mov
dec
into
push
pushf
mov
pop
mov
pop
mov
pop
ror
mov
call
ret
pushf
mov
repz
jo
dec
cmp
sub
sbb
gs
stos
ret
aam
lods
push
pushf
ror
cmp
les
add
cwde
or
xchg
sbb
xchg
sub
mov
pop
mov
mov
mov
in
stos
mov
adc
sbb
pushf
fcmovb
cmp
xchg
ins
ficom
sahf
retf
cmps
ins
mov
cli
pop
pop
rcl
retf
xor
(bad)
cmp
sub
sar
push
es
sbb
int3
fist
fisttp
ins
fcmovnb
pop
(bad)
and
aam
ins
aam
jl
mov
movs
mov
dec
xor
pop
push
ins
cld
push
pushf
test
and
jge
(bad)
sar
mov
mov
pop
pushf
mov
mov
stos
cmp
dec
sub
sbb
sar
pushf
xchg
cwde
popf
into
xchg
pushf
xchg
sub
adc
push
cwde
jg
fmul
sub
(bad)
cli
stos
adc
jl
jecxz
ficom
fcmovb
lods
fiadd
jae
bound
pushf
jge
mov
fcomp
ds
cmp
popf
loop
fcmovu
repnz
push
scas
push
push
or
test
outs
cwde
(bad)
retf
fsubr
js
ror
mov
mov
stos
jl
cdq
pop
pushf
ror
pushf
mov
xchg
nop
pop
or
jo
pushf
xchg
pushf
pushf
sub
popf
nop
pop
nop
mov
cld
pop
push
ret
retf
or
sbb
add
mov
inc
mov
mov
mov
pushf
mov
sbb
mov
pop
nop
jne
mov
dec
cld
retf
sbb
in
mov
std
int3
aam
lods
movs
cmp
pop
xchg
dec
pop
mov
inc
cwde
mov
dec
push
fcomp
ins
pop
fdivr
pushf
mov
mov
into
pushf
sahf
pop
xor
(bad)
or
arpl
rcr
ins
mov
or
inc
fldln2
fisttp
push
cld
pushf
xchg
pop
bound
pushf
leave
and
pushf
mov
ret
ret
jmp
mov
popf
pop
add
lods
mov
mov
int3
outs
mov
push
arpl
daa
addr16
js
leave
or
xchg
sub
cmp
call
sbb
cli
into
push
repnz
outs
int3
mov
jl
bound
pop
mov
mov
dec
retf
jp
int3
in
mov
mov
aam
je
jno
repz
cmps
cdq
xchg
mov
call
cs
mov
mov
sti
fild
mov
fcomp
movs
call
retf
aam
inc
pop
retf
lds
aaa
fistp
fwait
je
in
pushf
and
or
mov
push
cld
int3
les
inc
fadd
fucomi
jne
pushf
in
sub
push
push
cwde
mov
mov
in
dec
aaa
push
mov
call
scas
cwde
and
les
mov
cmp
pushf
ja
mov
ficom
int
fist
pop
call
xor
cld
mov
pushf
sbb
adc
sub
ficomp
call
push
dec
sbb
rol
int3
nop
pushf
leave
lods
pushf
mov
mov
(bad)
sbb
adc
mov
or
pushf
pushf
mov
mov
in
stos
sbb
fnstenv
pushf
test
add
inc
xlat
dec
mov
mov
sbb
into
int3
fucomip
mov
xchg
or
inc
(bad)
pop
ret
mov
mov
fisub
clc
mov
int
mov
xor
data16
arpl
jge
retf
cmp
mov
out
rol
in
bound
and
sti
sbb
cld
push
pushf
or
jle
scas
rol
je
cwde
inc
call
push
loop
retf
mov
inc
or
sbb
sub
dec
retf
xchg
mov
fdiv
mov
pop
adc
popa
push
sti
jl
inc
mov
cwde
and
mov
push
xchg
jl
mov
pushf
push
je
cld
pushf
fisub
fisubr
jecxz
push
pop
jge
cmc
mov
mov
inc
mov
fisubr
sub
test
nop
dec
fisubr
stos
sbb
sub
sbb
fcmovne
mov
and
sub
clc
stos
int3
dec
retf
int3
arpl
int3
cs
test
int3
gs
sbb
sbb
lds
add
aam
int
ins
mov
ins
push
aaa
mov
lods
fstp
fcmovnbe
(bad)
fild
fist
cmc
dec
(bad)
(bad)
sub
je
cld
pushf
adc
adc
lods
pushf
ins
jo
imul
pop
sti
fcmovu
jmp
in
inc
imul
cmp
xchg
ins
mov
mov
and
pushf
sbb
stos
sar
fisttp
fld
data16
fcmovnu
popf
sbb
int3
int3
cmp
pushf
push
fisttp
imul
in
(bad)
idiv
mov
(bad)
fsubr
jmp
aam
dec
aam
cmp
adc
pop
sahf
mov
push
pushf
cdq
ins
pop
adc
(bad)
int3
xor
outs
mov
cmp
adc
pushf
dec
push
shr
dec
dec
fistp
pop
fcmovne
ins
sbb
(bad)
int3
xchg
sub
sbb
ret
push
fstp
pop
push
jo
mov
add
fmul
sbb
fdivr
cmps
fcomp
xchg
aam
or
pushf
sbb
pop
mov
pushf
mov
fild
pop
mov
dec
push
cld
pushf
sub
ror
ja
fsub
pushf
lock
pop
lea
jl
mov
pop
out
inc
bswap
sbb
mov
mov
fistp
sub
adc
cld
pushf
xchg
pop
leave
in
int3
pushf
and
int3
cmp
pop
int3
ds
dec
or
jns
mov
pop
dec
sbb
sar
dec
or
pop
fnsave
lods
mov
dec
pop
xchg
cld
pushf
cdq
or
mov
xchg
jb
xor
push
ret
ja
pop
pushf
pop
pop
movs
ins
cli
enter
aam
sub
pop
sbb
int3
nop
pushf
sbb
pushf
call
fcom
pop
call
popf
or
sbb
xchg
sahf
pushf
adc
adc
ficomp
or
dec
sbb
xchg
or
mov
or
push
mov
aas
pop
mov
pop
mov
dec
cmp
xor
fcomp
icebp
dec
(bad)
pop
fidivr
jl
cmp
fist
or
pop
sub
pop
mov
pop
pop
pop
pop
mov
fs
jnp
ins
mov
sub
fsubr
les
pushf
movs
pop
scas
add
adc
or
xlat
shl
pushf
fcmovbe
mov
fnstsw
pop
cwde
pop
and
add
pushf
cmps
sbb
pushf
or
ins
and
sub
ss
pop
stos
jge
inc
(bad)
retf
mov
aam
ins
aam
pop
mov
dec
xor
mov
(bad)
sub
cdq
cmp
pushf
rcr
mov
adc
jns
pop
loopne
pop
std
sbb
ror
push
add
icebp
sbb
mov
pop
or
mov
pop
nop
mov
pop
test
pop
jae
pop
xor
push
popf
pop
inc
lods
retf
mov
or
popf
aam
(bad)
aam
jge
test
aas
pop
mov
sub
daa
cld
sub
sahf
aad
scas
pushf
xchg
fbstp
mov
pushf
lock
mov
pop
pushf
arpl
ret
sub
dec
ins
mov
fstp
cwde
inc
cmp
mov
add
fidiv
fidiv
cmp
pushf
cmp
lea
inc
outs
retf
xchg
jge
adc
jae
int3
add
and
pushf
pop
fdivr
push
sub
retf
aam
jge
stos
(bad)
or
mov
pop
push
cwde
ins
adc
(bad)
sbb
cdq
sub
clc
loop
ror
inc
pop
pushf
aas
jl
mov
pushf
adc
or
dec
fdivr
fcomp
jmp
scas
lods
ins
out
pop
pop
lea
adc
dec
pushf
stos
enter
push
xor
pushf
aad
aam
mov
clc
mov
push
sbb
outs
fdivr
inc
fsubr
dec
and
push
pop
mov
pop
push
cmp
sbb
mov
inc
adc
sub
pushf
ss
pop
jmp
pushf
push
aam
dec
aam
pop
aam
ins
movs
xor
shr
mov
push
pop
(bad)
retf
pop
ins
pushf
add
sub
nop
popf
pop
push
pushf
aam
pop
mov
pop
fistp
cli
xor
hlt
daa
aam
or
mov
mov
pop
xor
nop
ret
xlat
fucomi
pushf
mov
inc
pop
pop
aad
pushf
mov
pushf
dec
cwde
inc
cmp
mov
add
scas
call
jge
dec
ret
fstp
mov
fistp
out
push
push
pushf
fisub
lods
fisubr
ficomp
mov
pushf
or
push
ficomp
sub
lods
int3
sub
inc
xchg
pop
add
mov
imul
repz
dec
mov
sahf
lods
jo
mov
data16
imul
(bad)
pushf
mov
push
adc
aas
in
mov
retf
or
fwait
mov
pushf
and
clc
call
sub
mov
xor
fnstsw
jl
push
pop
ss
pop
pushf
push
pop
xor
adc
cwde
fcomp
aaa
test
push
pop
mov
mov
scas
push
dec
mov
les
cmp
pop
push
push
ja
dec
cmp
mov
adc
xchg
or
mov
xor
mov
pushf
push
sbb
jl
bswap
retf
ins
lods
lea
mov
dec
pop
sbb
mov
mov
pop
push
pushf
pop
fs
pusha
clc
add
xor
cmc
js
and
pushf
mov
add
add
xchg
mov
mov
call
xor
xor
sbb
mov
rcr
add
cmp
fcomp
fmul
fdivr
fs
mov
sub
outs
dec
pushf
lahf
ins
pushf
ret
lods
pushf
push
pushf
pop
in
mov
push
pushf
jmp
sbb
mov
xor
ret
rcr
int
dec
mov
js
jae
pushf
and
sub
fisubr
fcmovu
mov
push
jnp
inc
imul
fdivr
fcomp
jl
enter
pop
mov
test
pushf
retf
pop
int3
mov
int3
ds
add
popf
jmp
mov
fcmovu
lods
(bad)
popf
xchg
(bad)
adc
ins
pushf
(bad)
fmul
enter
pop
adc
pushf
test
adc
ins
pushf
add
pop
ja
idiv
sbb
pushf
mov
fidivr
lods
(bad)
mov
loopne
xor
adc
mov
inc
cdq
push
ret
mov
mov
inc
enter
sbb
and
add
ror
fwait
xor
mov
cmps
(bad)
sahf
adc
xchg
sub
call
in
mov
pushf
mov
pop
pushf
mov
inc
int3
retf
and
iret
fdivr
adc
(bad)
or
dec
pushf
ins
fcomp
dec
ins
xchg
sbb
int3
xor
pop
test
pushf
out
mov
out
fcom
ss
sahf
fldcw
pop
mov
sbb
fisub
cwde
cwde
cdq
inc
stc
fwait
add
sbb
pushf
arpl
sub
ror
mov
jp
js
mov
fimul
arpl
jb
sub
in
adc
sub
or
retf
sub
iret
push
add
nop
mov
lahf
xor
pushf
fidiv
pushf
fidivr
ficomp
add
into
mov
inc
dec
mov
sbb
cmc
mov
xor
pop
ins
dec
mov
aas
lahf
loop
adc
ins
fistp
mov
push
inc
mov
push
pop
retf
xor
or
push
ins
fcmovne
cmp
data16
fild
fld
sbb
je
jnp
fisubr
pushf
sub
aam
imul
fwait
aam
retf
aam
or
not
adc
js
and
add
movs
enter
dec
shr
push
in
retf
mov
jp
call
mov
fcomp
sbb
iret
pop
test
bound
pushf
aaa
pushf
pushf
jae
pushf
retf
stos
dec
imul
sub
adc
imul
sbb
pushf
cmc
js
fmulp
pushf
cmp
ds
xchg
mov
(bad)
jmp
mov
retf
fstp
mov
pop
ret
cmp
enter
pushf
dec
or
fxch
pushf
addr16
imul
fsubr
xor
push
and
cmp
xchg
or
pushf
mov
sti
jecxz
(bad)
fistp
mov
call
xchg
mov
ret
aaa
mov
mov
loop
fistp
(bad)
pushf
dec
mov
push
cld
push
pushf
jmp
pop
push
mov
retf
jb
sbb
cwde
enter
adc
loop
adc
pop
int3
pop
fcomp
enter
lahf
xchg
lahf
mov
fild
lods
fstp
rcl
jle
pushf
pop
in
jmp
in
push
xchg
adc
cwde
add
adc
adc
push
popf
fld
or
cld
push
adc
in
pushf
and
cld
push
lahf
pop
arpl
test
cld
sti
mov
or
(bad)
jl
mov
fidivr
fs
les
pop
push
fiadd
out
iret
(bad)
nop
pushf
ficomp
mov
add
xchg
(bad)
mov
retf
idiv
fidivr
mov
add
aam
jmp
idiv
mov
cmp
mov
pushf
jmp
or
test
mov
int3
sub
xchg
mov
pushf
inc
popf
out
push
lahf
jge
ficomp
(bad)
mov
pop
in
push
sbb
mov
aam
mov
and
aam
pop
aam
cmp
mov
mov
pushf
mov
pop
mov
cmp
adc
loop
rcr
xor
adc
lods
pushf
xlat
fdivr
pushf
and
nop
mov
pop
test
dec
sbb
cwde
cmp
cmp
mov
aaa
neg
xchg
jo
adc
inc
loop
sub
repnz
sbb
fisub
push
scas
or
imul
jne
xor
mov
lods
pop
xchg
mov
test
cmp
mov
(bad)
cld
push
pushf
cdq
sbb
inc
pop
push
fsubr
pop
inc
scas
mov
pushf
mov
mov
out
shl
js
out
pushf
xor
jg
add
sbb
sbb
mov
pushf
sahf
dec
aas
xchg
xchg
xlat
mov
pop
sbb
cmp
mov
bound
stc
pop
mov
loop
sbb
push
lahf
xlat
adc
int3
pushf
cdq
xor
sbb
fidiv
xchg
sahf
or
or
mov
daa
scas
push
cmp
adc
pop
leave
int
pushf
pop
mov
or
pop
int3
movs
dec
int3
les
cli
sub
pop
call
ficomp
lods
pushf
aam
int3
fs
int3
cmp
popf
int3
sar
pop
leave
push
pop
int
hlt
mov
fwait
cwde
lods
fistp
fist
out
xchg
push
je
mov
sti
(bad)
stos
fisub
cwde
push
dec
int3
cld
stos
int3
aam
int3
xor
std
pop
int3
sbb
pop
push
pushf
cmp
aam
ins
movs
xchg
cwde
lahf
lea
pushf
in
fucomp
xchg
fcmovnu
add
fmul
enter
fcomp
pushf
fisubr
rcl
fsubr
call
xchg
pop
push
inc
push
mov
scas
sbb
mov
int3
mov
into
int3
(bad)
in
mov
pushf
arpl
cmp
mov
sub
(bad)
int3
stc
aad
add
mov
add
dec
cld
pushf
cs
lods
cmp
dec
ins
jno
mov
icebp
in
scas
pushf
adc
and
bound
mov
xchg
push
mov
pop
and
int3
jp
sub
fstp
push
jne
inc
sti
mov
dec
xchg
cmp
jne
mov
adc
mov
xchg
adc
jb
adc
pop
dec
adc
cmp
pushf
push
jl
loopne
or
loop
pop
xchg
(bad)
mov
pushf
call
pop
or
je
pop
pop
mov
cwde
push
dec
int3
or
push
pop
inc
in
add
cmp
xchg
out
push
pushf
push
pop
retf
ja
sub
dec
movs
mov
leave
push
sbb
retf
jl
pushf
adc
sbb
mov
or
xchg
mov
movs
xor
mov
pushf
sub
push
add
pop
sbb
sbb
add
pop
add
mov
fsubr
sbb
int3
mov
int3
es
dec
push
pop
(bad)
pushf
jecxz
aam
pop
aam
sbb
pop
jmp
enter
fld
pop
aaa
or
rcr
sbb
stos
adc
mov
inc
mov
fdivr
push
fcomp
fmul
inc
mov
mov
mov
rcl
mov
lahf
out
adc
js
lock
pushf
xchg
sbb
push
enter
jg
js
out
pushf
fisubr
mov
mov
adc
lods
push
pushf
push
ret
fdivr
cwde
hlt
adc
pushf
mov
jl
pop
mov
leave
sbb
adc
or
cmp
mov
mov
nop
cdq
jne
and
xchg
ficom
sbb
fiadd
lods
pushf
cmp
dec
dec
pushf
cwde
fcomip
push
aam
aam
ins
aam
mov
inc
pushf
aam
lods
les
mov
aas
ins
fidivr
or
sahf
sbb
cmp
cld
ins
pushf
jmp
cmp
out
retf
test
cmp
push
sbb
cld
mov
fwait
add
pushf
pushf
cmp
xchg
xchg
jl
pushf
test
mov
out
sbb
clc
fmul
jl
addr16
xchg
rol
in
pushf
mov
pushf
test
sbb
les
cmps
pop
fist
aaa
mov
add
lahf
cmp
pushf
pushf
fistp
cs
pushf
and
stos
xchg
sbb
int
pushf
mov
pushf
test
int3
out
sahf
sbb
mov
pushf
add
push
dec
pushf
ret
sbb
push
sub
fidiv
aam
jl
pushf
repnz
rcr
sbb
js
xchg
or
sti
mov
cmp
pushf
fs
pushf
jbe
inc
xchg
sub
pushf
dec
adc
push
cwde
ret
dec
inc
sub
or
nop
pushf
jns
mov
jl
ss
or
pushf
movs
cld
mov
adc
sub
mov
jb
lods
mov
cs
jge
mov
pop
repz
jae
xchg
int3
push
xchg
int3
push
pushf
sub
leave
cmp
pushf
es
int3
dec
jmp
in
jmp
(bad)
call
ins
aam
pushf
aam
mov
sbb
neg
ins
fsubr
inc
adc
scas
lea
hlt
js
jmp
pushf
or
mov
lods
in
fnsave
push
ins
fistp
fstp
fistp
mov
dec
int3
test
mov
cwde
out
adc
or
aaa
xchg
leave
or
push
(bad)
int3
fnstcw
sahf
sahf
fs
pushf
or
mov
or
cli
sbb
or
adc
sub
lods
dec
pushf
xchg
push
mov
push
push
pop
mov
pop
mov
jmp
xchg
push
and
push
mov
pop
cmp
imul
leave
sbb
inc
xchg
jnp
pop
push
pop
adc
mov
ficomp
loop
pop
out
adc
out
scas
fst
mov
enter
in
bound
mov
or
jb
dec
xchg
xchg
adc
jl
loopne
cmp
fdivr
push
retf
cld
push
ja
movs
cmp
je
popa
mov
pushf
cdq
pop
fld
jge
push
popf
fild
sbb
mov
xchg
ins
aam
pop
aam
dec
aam
sub
ss
pushf
in
rol
ins
pushf
fidivr
pop
popa
push
xor
inc
or
dec
sub
popf
push
loope
push
(bad)
pop
add
or
ret
fsubr
lea
retf
retf
fmul
jge
push
mov
or
ror
sar
in
pushf
cwde
sbb
fmul
cmp
and
ja
xchg
leave
mov
pushf
sbb
push
xlat
cld
mov
push
pop
sbb
cmp
xchg
(bad)
push
push
pop
sub
mov
ss
popf
dec
pop
mov
loope
adc
pushf
mov
in
test
pop
adc
rcr
mov
mov
fmul
lods
mov
or
mov
sbb
xchg
fwait
cld
js
(bad)
sbb
mov
pop
dec
aad
cwde
sbb
xor
pop
test
nop
jmp
(bad)
mov
cmp
es
and
xor
jle
mov
pop
(bad)
pushf
pop
cmp
retf
push
push
pop
jae
fsubr
scas
add
mov
aam
jl
aas
aam
adc
mov
int3
aam
mov
pushf
retf
pop
jmp
idiv
fmul
js
std
or
lahf
dec
pushf
mov
fucomi
fdivr
fcomp
inc
ss
repz
mov
mov
dec
mov
pushf
popf
pop
imul
dec
lods
pop
cmc
int
movs
fild
mov
hlt
lea
int3
cmp
dec
pushf
xchg
xlat
xor
dec
mov
pop
(bad)
int
add
lods
ret
pushf
add
mov
mov
xchg
fld
nop
mov
xchg
mov
adc
int3
pushf
xchg
cmps
popf
shr
mov
add
ror
in
add
pushf
sbb
pushf
test
scas
pop
push
jle
fidiv
inc
ror
jg
scas
fiadd
mov
mov
rol
scas
pushf
dec
push
cdq
xchg
out
mov
mov
adc
or
adc
mov
dec
xchg
(bad)
xor
mov
ja
loop
lds
sub
sahf
xchg
mov
pop
fdivr
ins
test
pop
and
das
mov
into
int3
pushf
dec
xchg
cmp
dec
pushf
out
(bad)
jge
pushf
and
test
add
pop
push
adc
pushf
pushf
inc
fsubr
cmp
sbb
(bad)
push
push
call
sahf
mov
xchg
sub
pushf
js
mov
pop
pop
inc
ins
pop
inc
jge
push
call
or
fcomp
sbb
fmul
push
aaa
sub
fist
mov
jnp
sahf
pop
xchg
sbb
mov
inc
sub
add
adc
pop
cmp
push
cwde
test
enter
pop
fwait
int3
pushf
add
jl
lods
pushf
mov
cld
sub
aad
stos
or
pushf
(bad)
jge
pop
(bad)
ins
fcmovu
dec
mov
jp
sbb
sbb
push
or
mov
cmp
xor
pushf
or
(bad)
cmp
neg
bound
pushf
add
cmp
sbb
xchg
adc
lods
pushf
mov
aam
(bad)
aam
ins
aam
pop
aam
cmp
nop
ror
in
daa
mov
sbb
inc
mov
dec
pushf
pushf
adc
dec
nop
fmul
fcomp
stos
fmul
enter
sti
pushf
ret
ret
call
fldlg2
pushf
jmp
ret
pushf
jnp
ret
sub
xchg
ins
pushf
(bad)
ja
pop
mov
or
pop
cmp
inc
pop
jg
cmp
leave
mov
int3
aad
int3
pop
pop
int3
scas
dec
mov
pop
repz
mov
or
jno
pop
cmp
in
pushf
test
pushf
sbb
push
fcom
xchg
int3
pushf
fnstenv
mov
push
pop
retf
cdq
fcmovne
in
neg
xlat
cmp
pop
outs
dec
ret
pushf
and
cmp
pop
mov
inc
pop
mov
pushf
lahf
fiadd
pop
push
aam
fcmovnbe
mov
outs
mov
aaa
sbb
pop
sub
push
sub
pushf
sar
ret
es
fimul
loopne
sbb
push
ficom
leave
sub
pusha
sti
int3
int
lods
adc
imul
(bad)
out
pop
rol
pushf
fist
inc
fwait
sub
pushf
fisubr
mov
stc
ret
push
daa
sbb
popf
pop
bound
xchg
out
xchg
and
pushf
mov
mov
push
push
sbb
out
mov
adc
ret
mov
mov
inc
scas
mov
loop
(bad)
push
push
mov
dec
sbb
cdq
add
mov
in
xor
add
sbb
mov
sbb
xchg
push
ds
(bad)
pushf
pushf
fisub
xor
pop
sbb
mov
cli
out
fcomp
pushf
push
cwde
fild
sbb
rcr
sub
jge
xor
loopne
popf
mov
hlt
retf
xchg
push
xor
js
(bad)
lods
pushf
ficom
ins
add
in
fistp
adc
xor
adc
or
aaa
push
leave
nop
pop
pushf
imul
lods
int3
stos
int
aaa
jmp
dec
jge
and
pushf
pushf
stos
cmp
aad
int3
push
sti
lods
sbb
jl
pushf
inc
lods
jmp
mov
push
pop
retf
jg
lahf
rcl
dec
push
lea
mov
cmp
sbb
mov
lods
ins
dec
push
retf
push
fcomi
int3
fstp
pop
xchg
mov
pop
pushf
bound
(bad)
out
shl
xchg
pop
test
cwde
cmp
iret
pop
icebp
mov
out
pop
nop
pushf
popa
cmp
das
sub
daa
sbb
mov
push
adc
fistp
nop
idiv
pop
dec
pushf
fisubr
cwde
xor
ins
call
sbb
inc
adc
dec
xlat
jmp
inc
pushf
pushf
pop
fcomp
sbb
pushf
cmp
hlt
jmp
ret
fistp
pop
push
sbb
adc
frstor
call
dec
pop
aam
jge
pop
mov
push
out
and
in
mov
mov
xchg
adc
dec
push
sbb
fistp
cmp
xchg
pop
inc
inc
ins
pushf
mov
pushf
sete
xchg
adc
test
mov
loopne
push
out
sub
jne
dec
cld
xchg
jmp
xchg
pop
pop
loop
rcr
gs
out
jmp
mov
ret
mov
sbb
mov
jmp
or
ficomp
jnp
test
mov
pop
add
pushf
pushf
cmp
popf
cs
cli
mov
in
or
(bad)
mov
lea
sub
xchg
ret
mov
mov
xchg
push
test
nop
jnp
fstp
std
pushf
pushf
xchg
test
cmp
rol
jp
or
ficom
cwde
mov
adc
aaa
int
jmp
add
or
ja
sbb
dec
cwde
sub
sahf
jnp
push
in
ror
loope
xchg
mov
mov
sub
push
dec
pop
mov
popa
mov
lea
nop
mov
retf
in
int3
dec
mov
xchg
add
in
pushf
cmp
push
call
xchg
lahf
loop
daa
ficomp
mov
or
pop
add
pushf
out
mov
fcmovnu
test
mov
ins
pushf
imul
mov
dec
pop
pop
lds
cwde
pushf
mov
mov
push
mov
rcl
xchg
bound
popf
cdq
add
mov
sbb
stos
dec
pop
out
retf
cmps
fld
pop
sub
add
out
push
addr16
pop
inc
dec
pop
pop
retf
fdivr
aas
pop
or
sbb
repz
push
adc
mov
or
pushf
mov
stos
popf
call
sub
xchg
sbb
xor
pop
dec
pushf
pushf
ds
pop
ins
movs
loopne
pop
call
pop
xchg
adc
cmp
mov
pushf
mov
sti
pop
mov
adc
cmp
cmp
neg
bound
(bad)
sahf
pop
pushf
jne
int3
mov
mov
(bad)
cmp
pushf
add
cmp
bound
aaa
mov
mov
rcr
push
ins
jmp
fucomi
mov
stos
les
push
sbb
inc
push
and
bound
pushf
push
xchg
setbe
inc
out
shl
mov
pushf
sub
rol
aas
push
loop
fidiv
fwait
xor
outs
(bad)
cmp
es
or
sbb
mov
pushf
xchg
shr
inc
mov
aaa
popf
xchg
jp
inc
neg
test
mov
leave
sbb
pop
mov
dec
mov
pushf
push
pop
pushf
cmp
xchg
lea
int3
fcomi
popf
mov
hlt
sbb
inc
sbb
add
or
pushf
jg
aam
mov
neg
mov
call
lods
xor
sub
adc
pushf
xor
loop
sbb
push
popf
pop
sub
push
or
ins
sub
push
adc
je
jg
scas
aad
jo
hlt
mov
add
pop
pushf
fsubp
mov
xchg
fdiv
sub
pop
adc
pop
pushf
dec
xor
call
sbb
sub
jne
sahf
push
cdq
adc
mov
mov
mov
adc
frstor
sbb
shrd
mov
stc
pop
pushf
sbb
les
repz
retf
mov
int3
or
pushf
pushf
ins
mov
pop
in
loop
inc
fcmovu
sbb
cmp
aas
push
xor
mov
cmp
stos
push
push
fistp
fstp
(bad)
cmp
enter
push
lea
mov
mov
fwait
rcl
loop
leave
pushf
adc
lods
fist
fimul
add
cmp
pusha
cmp
mov
js
mov
pushf
cmp
aam
mov
sub
pushf
mov
pop
xlat
mov
fsubr
fsubr
enter
pop
mov
mov
mov
pushf
adc
mov
and
pop
add
pop
pushf
add
pushf
outs
dec
adc
xchg
fistp
pushf
cmp
imul
push
sub
pushf
cmp
adc
mov
dec
fwait
mov
ins
cwde
nop
sub
dec
push
sbb
call
xchg
pop
push
sub
fcmovne
sbb
push
or
int3
out
xlat
push
je
fisub
mov
or
sub
pushf
and
int3
(bad)
into
mov
xor
mov
jb
dec
hlt
lahf
ror
loop
fsubr
adc
pushf
loope
in
stos
mov
popf
fiadd
pushf
xchg
sbb
mov
jecxz
push
pushf
xor
pusha
pop
pop
scas
mov
dec
fdiv
loop
rcl
aad
mov
(bad)
aam
jge
pushf
clc
ret
out
sbb
push
pop
fisttp
add
mov
cmps
ins
bound
pushf
in
mov
cmc
mov
test
xor
aaa
pushf
sbb
mov
sub
enter
sbb
pop
sub
cli
mov
pushf
aaa
popf
jnp
xchg
push
xlat
add
sub
adc
ret
jnp
mov
pushf
(bad)
dec
cdq
cmp
sbb
xor
pop
out
fcom
arpl
mov
inc
(bad)
fistp
jb
jge
js
pop
pop
pushf
fidiv
ror
pushf
pushf
(bad)
fdivr
pop
dec
fisttp
cmp
aad
ds
xor
pushf
ficom
pop
cld
aam
or
xchg
(bad)
xor
arpl
xchg
add
dec
adc
aas
cld
pushf
lock
adc
jl
out
fsubr
out
pushf
aam
mov
pop
frstpm(287
lods
push
pushf
push
ret
ja
(bad)
mov
fnsave
push
pushf
cmp
xchg
pop
cmps
push
mov
push
push
in
sbb
fimul
pop
or
jmp
inc
scas
mov
loop
cmps
js
ins
pushf
fisub
fisub
push
push
les
mov
lods
sub
nop
jb
sub
pushf
sbb
int3
mov
lods
pop
nop
pushf
jo
pushf
push
pop
pushf
nop
cld
pushf
sub
pushf
cli
jmp
xchg
sti
pushf
stc
sub
daa
ins
imul
push
aaa
(bad)
fbstp
pop
(bad)
mov
xor
dec
fidivr
sar
xchg
sub
adc
stos
ror
dec
sbb
iret
adc
ret
pushf
push
clc
jle
and
(bad)
(bad)
arpl
pop
adc
lahf
sahf
adc
sub
or
lods
dec
mov
dec
int3
xchg
dec
int3
mov
mov
iret
pop
cmp
add
nop
pushf
push
popf
jmp
fcmovnu
ins
fist
dec
sub
sahf
cmc
or
jae
bound
xchg
cld
mov
and
arpl
popf
popf
popf
adc
jmp
cld
push
lds
adc
aam
mov
out
sub
inc
xchg
cs
mov
es
mov
push
lods
sub
pushf
mov
cmc
mov
pop
mov
cs
fwait
jmp
pushf
les
mov
cwde
ss
jecxz
int3
imul
ja
loope
xchg
jp
neg
pushf
dec
popf
jmp
shl
xchg
xchg
jbe
pop
pushf
ds
out
dec
adc
fist
mov
(bad)
fcmovu
push
sbb
jmp
adc
rcr
es
(bad)
(bad)
in
popf
sbb
cmc
lahf
fidiv
ret
(bad)
pushf
push
pushf
in
sbb
sub
sbb
add
pushf
mov
icebp
fiadd
mov
pushf
pop
pop
mov
mov
pushf
xchg
pop
in
js
inc
pop
pushf
fcmovbe
jge
mov
mov
daa
mov
mov
aaa
xchg
push
loope
push
add
cmp
js
pushf
add
pushf
xchg
dec
fist
sub
cdq
or
inc
sbb
ror
sub
xchg
int3
pushf
add
adc
(bad)
stos
fcmovbe
ins
fistp
add
fimul
mov
push
cmp
popf
loop
lea
xor
push
add
and
pushf
and
pop
mov
(bad)
cld
ret
xchg
or
sbb
pushf
fcomp
int3
jl
test
xchg
mov
popa
in
ret
or
lods
pop
cmp
mov
mov
movs
pop
cwde
fiadd
xchg
lea
fist
fwait
pop
push
pop
add
mov
pushf
add
sbb
push
pushf
(bad)
movs
clc
jl
in
fcomp
fcomp
fcomp
pushf
ins
nop
ins
pop
inc
push
jno
pop
(bad)
mov
popf
js
fistp
int3
les
mov
dec
(bad)
in
pushf
pop
stos
loope
pushf
jb
pushf
lods
pop
and
inc
cdq
not
mov
xchg
cmp
cld
pushf
sbb
call
xchg
pushf
add
in
pushf
cmc
iret
pop
inc
jl
pushf
pop
ins
retf
pop
sub
push
fxch
ins
inc
fcom
jnp
pop
sub
sub
inc
jge
xor
pushf
xchg
pop
in
sbb
push
or
aam
xor
lods
jg
popf
fiadd
sub
outs
sbb
imul
stos
lea
cmp
xchg
sbb
mov
mov
test
xchg
pushf
cmp
adc
pushf
(bad)
cmp
sub
xor
dec
pop
cld
pop
adc
lods
pushf
push
fmul
sti
cmp
shl
nop
loopne
nop
pushf
sub
imul
pop
push
lea
pop
push
pop
pop
jecxz
pop
xchg
pop
pop
les
mov
pushf
and
pushf
gs
push
xchg
cmp
pushf
cwde
or
mov
outs
pushf
sahf
fild
mov
ret
out
lahf
push
dec
adc
ja
popf
sbb
mov
pushf
inc
mov
shl
js
mov
sbb
aaa
mov
pushf
nop
push
mov
pushf
pushf
scas
cwde
xor
mov
fwait
enter
cwde
dec
xchg
cmp
(bad)
adc
call
pushf
cmps
adc
pushf
loope
daa
shl
iret
nop
outs
sbb
in
mov
push
bound
pushf
adc
add
cld
cmp
sub
pushf
mov
sub
dec
xlat
out
push
push
xlat
sub
pushf
aaa
sbb
bound
mov
mov
daa
adc
xchg
sbb
nop
mov
pop
stc
add
mov
cdq
cmp
pushf
and
aam
pop
pushf
push
dec
mov
inc
xchg
fistp
icebp
ins
nop
pushf
pop
popf
pushf
mov
jmp
enter
push
mov
pushf
dec
sub
cmp
loopne
mov
sti
out
pushf
ins
fucomi
icebp
fsubr
dec
add
mov
retf
fisttp
fist
call
or
stos
inc
fisubr
iret
fmul
or
mov
xchg
push
dec
scas
int3
sub
es
xchg
mov
push
adc
mov
fild
sbb
aaa
pop
leave
in
pushf
stos
sbb
ja
mov
mov
pushf
push
in
int3
mov
xchg
leave
(bad)
mov
cmp
push
cdq
push
mov
pushf
ficom
in
sub
adc
inc
pop
pushf
imul
lods
pushf
and
lods
popfw
jnp
sbb
fild
stc
adc
push
pushf
in
sbb
inc
aad
push
adc
sti
pushf
rol
test
sub
(bad)
lea
leave
jge
rsm
pop
dec
pop
fistp
sbb
pop
cmp
mov
mov
mov
dec
ja
adc
dec
pushf
in
fdivr
xor
fwait
adc
sub
(bad)
test
lods
dec
inc
pushf
mov
cmps
(bad)
sbb
cwde
out
popf
jb
pushf
add
pop
add
mov
test
imul
add
xor
bound
xchg
mov
add
(bad)
or
ret
mov
push
cld
push
cmp
sub
movnti
mov
push
xchg
ins
pushf
inc
out
(bad)
sub
xor
push
pushf
lods
bound
pop
jge
adc
mov
and
jo
mov
pop
push
push
and
ficomp
cld
fisub
mov
in
sar
lods
pushf
in
sbb
or
pushf
mov
test
dec
pushf
pop
ins
aam
(bad)
les
jge
inc
pop
lods
aaa
push
add
pop
mov
jnp
xchg
fnstenv
mov
sbb
xor
inc
pop
hlt
push
push
or
dec
int3
ss
int
cmc
push
sahf
push
pop
stc
mov
popf
into
jbe
mov
pushf
adc
mov
mov
cmp
inc
xlat
dec
gs
pushf
mov
cli
mov
cwde
pop
jne
pushf
push
(bad)
sub
sbb
or
xchg
add
cli
mov
or
pop
pushf
jmp
fstp
jmp
sahf
push
cmp
pushf
fimul
lea
fs
mov
mov
pushf
pushf
inc
xchg
not
pushf
sub
mov
inc
int3
loop
cdq
pop
adc
lahf
pop
add
sub
inc
xchg
pop
and
or
sahf
sbb
aaa
cdq
mov
mov
push
dec
pushf
ficomp
cwde
jnp
fdivr
or
mov
pushf
and
xchg
jl
xchg
sub
icebp
or
jg
dec
jge
loope
xchg
and
ret
(bad)
or
mov
fistp
daa
xchg
pop
lock
pop
pop
pushf
(bad)
sbb
jmp
sbb
xchg
or
div
and
pushf
fidiv
mov
mov
adc
aam
inc
push
test
xchg
fcom
fmul
push
xor
mov
inc
or
jmp
adc
xchg
sbb
nop
pushf
les
jmp
nop
pushf
adc
(bad)
ins
fcomi
pushf
pop
mov
fistp
fisub
lea
mov
inc
adc
inc
int3
pushf
lahf
fadd
lods
pushf
in
xlat
push
adc
jbe
push
pushf
and
pop
jge
retf
sar
shl
mov
pushf
imul
jmp
add
push
ins
ins
xchg
pop
pop
outs
cmp
mov
add
ins
fimul
popa
xor
adc
sub
jle
int3
push
sbb
call
shl
or
jmp
xor
in
cmp
xor
loop
test
int
mov
mov
and
add
js
pushf
adc
test
nop
jmp
(bad)
add
sahf
out
xlat
dec
(bad)
xchg
shl
mov
add
pushf
mov
mov
pop
add
pop
test
dec
pushf
popf
sub
(bad)
cmp
or
inc
pop
sub
xchg
ss
pop
push
xchg
cmp
sbb
sbb
sub
mov
out
pushf
dec
xchg
out
pop
retf
pushf
xor
ret
mov
test
push
fucomi
add
popa
ds
aaa
call
lods
fistp
out
int3
cmp
(bad)
shr
mov
xchg
shr
mov
pushf
dec
pop
mov
cmp
mov
test
xchg
pushf
paddb
jl
sti
cwde
mov
push
cmc
in
les
popa
inc
push
fist
mov
fiadd
loope
push
into
ret
mov
xchg
test
lock
dec
mov
xlat
sub
nop
dec
add
ins
xchg
pop
cmp
dec
xchg
test
pop
mov
leave
sbb
ins
lods
xchg
nop
mov
pushf
xor
pop
mov
dec
mov
cmp
ret
jbe
call
push
add
lds
mov
add
addr16
aad
ds
hlt
inc
push
adc
adc
fild
xchg
pop
sahf
out
mov
lods
pushf
mov
pushf
sar
ja
inc
push
cmp
mov
pop
fst
lods
pushf
fcomp
mov
(bad)
int3
adc
jb
pushf
and
xchg
pop
lock
push
pop
and
jnp
fnstenv
sahf
adc
pushf
jp
dec
add
pushf
add
jmp
pushf
movs
lods
aam
pushf
les
push
dec
xchg
push
bound
adc
adc
popf
es
mov
fst
or
push
enter
push
adc
repnz
inc
fidiv
push
hlt
xchg
dec
pushf
push
push
pop
pop
mov
fcmovu
rcr
push
jecxz
sbb
push
out
inc
hlt
shl
push
xor
xor
aam
loope
cmps
mov
sbb
push
sbb
in
fistp
jecxz
aad
aam
mov
sar
dec
pop
pop
xor
pushf
pop
sbb
out
xchg
repz
mov
enter
pop
(bad)
cmp
fcmove
mov
mov
mov
add
push
xchg
push
adc
mov
and
cmp
mov
push
pushf
pushf
dec
fdivr
xchg
sbb
mov
pushf
mov
loope
fmul
cmp
mov
mov
push
adc
pop
pushf
adc
sbb
push
pop
jnp
pushf
gs
dec
retf
mov
lods
aaa
popf
stos
mov
cmp
shl
mov
pop
xor
or
dec
sti
aam
sub
mov
mov
cwde
arpl
ja
push
sbb
mov
stos
fxtract
clc
mov
enter
sub
pushf
out
dec
pop
push
push
xchg
mov
bound
pushf
ret
sbb
jl
pushf
fs
cli
sbb
pop
fistp
or
pushf
jno
pop
dec
ret
sbb
xchg
xchg
cmp
cmp
pushf
xor
int3
mov
mov
sbb
sub
pop
sub
fcom
cmovb
push
push
int3
push
pushf
fiadd
cmp
and
mov
pushf
jne
ins
add
pop
and
sub
rcr
dec
mov
repz
dec
aaa
ins
pushf
int
sbb
int3
dec
sbb
dec
mov
fldcw
ret
pop
sub
mov
pushf
popf
sar
mov
push
inc
stc
mov
cwde
ds
in
push
add
cdq
xor
adc
test
mov
push
push
mov
sub
sbb
inc
lahf
sbb
pushf
xchg
xor
stos
pushf
jl
out
ret
pop
sub
pop
inc
jge
fnstsw
popfw
push
xchg
sub
movs
sbb
iret
cmp
push
rcl
mov
inc
pusha
retf
stos
in
mov
cmp
mov
cdq
xchg
ins
pushf
icebp
ja
add
xchg
aam
xchg
jge
push
ja
adc
mov
pushf
ss
addr16
push
xchg
ficom
fiadd
mov
pushf
cmps
cmp
aas
pop
int3
jbe
int3
xchg
int3
addr16
mov
out
test
test
pop
(bad)
sbb
cmp
push
push
sbb
pushf
mov
int
pushf
mov
pushf
and
mov
sbb
cmp
shl
jecxz
mov
and
cdq
pushf
hlt
inc
push
mov
test
mov
out
shr
adc
push
std
cmps
nop
inc
push
test
mov
push
pushf
sub
xor
mov
loopne
fsub
nop
pushf
mov
jnp
xchg
out
fisubr
(bad)
pop
loopne
aam
cmp
mov
dec
dec
dec
pop
xchg
or
jg
mov
mov
add
mov
imul
cmp
cdq
mov
call
jle
(bad)
or
xor
mov
popa
inc
sbb
sub
fcmovnbe
cld
cmp
add
xchg
test
sti
lods
push
pushf
retf
test
int3
pop
pushf
test
push
xor
xchg
add
lods
pushf
mov
out
fdiv
test
fisub
mov
xchg
adc
xchg
cmp
lods
pushf
gs
xchg
retf
pop
adc
adc
mov
adc
iret
xchg
sub
pop
add
inc
clc
icebp
fdivr
xlat
out
xor
xchg
pop
jae
bound
sub
cmp
or
dec
retf
fistp
(bad)
nop
loopne
push
xchg
adc
lods
out
pushf
sbb
out
jge
xor
(bad)
fmul
ror
mov
jmp
add
pop
lea
lea
inc
push
mov
cmp
inc
gs
pop
outs
sub
fistp
loop
scas
pushf
xchg
push
pop
mov
adc
js
mov
pushf
cmps
enter
xchg
xor
fimul
dec
pushf
call
pop
push
fsub
jo
push
mov
test
sub
sbb
lahf
pop
push
fdivr
mov
sbb
fmul
jl
fdiv
mov
(bad)
stc
int
cmc
inc
adc
retf
lods
xor
mul
sbb
inc
fdivr
xchg
xlat
jb
cmp
hlt
push
push
retf
ins
les
dec
cmp
imul
ins
sub
in
pushf
pushf
pop
in
mov
call
cwde
fcmove
inc
cmp
xchg
pushf
inc
lahf
mov
pop
adc
pushf
sti
sbb
movs
jg
inc
pop
out
fstp
pop
mov
sbb
inc
fisttp
sahf
rcr
sbb
dec
push
aaa
xchg
adc
fcomi
js
data16
pushf
in
mov
stos
fmul
push
sbb
sub
addr16
xchg
and
clc
adc
cmp
cmp
in
mov
sbb
cmps
nop
or
pushf
sub
pop
adc
leave
stc
ins
pushf
pop
dec
mov
loope
sbb
in
fistp
sub
std
cmps
fcmove
xchg
ins
lods
push
pushf
jp
pop
jmp
call
cdq
dec
jo
outs
cwde
shl
gs
push
daa
mov
mov
jne
inc
ror
jge
sub
sub
or
nop
jne
add
pushf
sbb
aaa
fisttp
pop
mul
mov
xor
fdivr
mov
repnz
xchg
(bad)
xchg
jns
sbb
retf
lods
push
pushf
sahf
pushf
retf
add
mov
hlt
xchg
sbb
mov
add
cwde
adc
mov
pushf
aam
int3
xchg
ins
nop
imul
xchg
hlt
pop
xor
adc
xchg
(bad)
jmp
bound
aaa
lahf
cmp
loop
push
leave
out
pushf
inc
jl
adc
dec
pushf
ja
add
mov
fistp
pop
rcr
fdivr
sub
fmul
enter
xlat
outs
cld
pushf
fidivr
xchg
dec
fisttp
xchg
fwait
inc
aam
cmps
push
std
js
ret
mov
xchg
xchg
gs
popf
sbb
cdq
add
xchg
fsub
xchg
mov
idiv
ficomp
dec
int3
mov
xchg
adc
dec
pushf
xor
xchg
adc
pop
push
pop
or
fisttp
fcmovnbe
ins
fstp
fcmovnu
sub
jle
xlat
enter
out
adc
push
fcom
out
pushf
xchg
into
xor
jg
(bad)
(bad)
iret
sbb
dec
add
xor
test
movs
sub
pushf
push
retf
pop
xchg
push
add
jmp
pushf
call
dec
xchg
sbb
lock
fidivr
cmp
pop
adc
jl
test
fldcw
imul
lahf
xor
xchg
add
sbb
pushf
mov
pop
ins
and
(bad)
mov
pop
call
mov
sbb
leave
lods
pushf
mov
pushf
icebp
js
or
cld
les
sbb
add
aam
dec
les
lahf
push
adc
pushf
fisubr
shl
cmps
pop
lea
dec
sbb
mov
xor
sub
pop
pushf
mov
mov
nop
xor
test
ins
fistp
or
pushf
mov
leave
out
pushf
sub
sub
popf
sbb
(bad)
pop
loopne
rol
ret
xor
sub
adc
fcomip
push
add
dec
pushf
cmp
sbb
mov
mov
pushf
adc
push
sub
retf
sub
fcomp
adc
scas
rol
call
mov
inc
cld
aaa
xchg
fwait
and
or
cmp
adc
popf
push
fdivr
push
pushf
jb
mov
leave
push
mov
int3
aam
int3
sti
sub
call
mov
pushf
pushf
lea
push
loop
xchg
out
mov
pushf
retf
iret
cmp
fmul
int3
retf
xchg
mov
js
movs
lea
mov
push
mov
pop
pushf
lea
nop
fisubr
call
pushf
xor
adc
mov
fld
mov
idiv
(bad)
js
mov
cwde
repz
lods
ins
xchg
stos
xchg
fnsave
pushf
iret
mov
pop
or
rcl
ins
pushf
ja
jl
fmul
mov
sub
push
xor
cmp
repnz
cmp
or
add
pushf
inc
mov
mov
xor
inc
or
icebp
lods
sbb
or
aaa
xchg
push
pop
mov
retf
lea
aaa
fmul
gs
pushf
push
fcmovne
repz
dec
adc
popf
lahf
icebp
inc
sub
test
lods
add
pop
lods
pushf
or
cmp
adc
bound
das
nop
pushf
out
lods
pushf
pop
ins
stos
dec
inc
not
out
pop
loope
(bad)
xchg
lea
(bad)
mov
or
sub
pop
not
mov
adc
pop
cmp
lods
pushf
ja
icebp
rol
mov
sahf
push
mov
or
mov
in
pop
mov
popf
cmp
inc
sub
neg
sub
pop
pop
or
in
imul
popf
and
mov
pushf
js
pushf
or
cmps
shr
xchg
shr
inc
xlat
div
sbb
jbe
pushf
je
mov
mov
sbb
xchg
adc
pop
or
pushf
pop
sahf
rol
out
pushf
sbb
lock
pushf
retf
mov
mov
pop
hlt
mov
fnclex
(bad)
dec
sub
iret
or
popa
sub
jg
call
ds
pushf
xlat
int3
sub
cwde
leave
or
pushf
jns
int3
push
ins
int3
xor
pushf
push
pop
sbb
pushf
out
addr16
dec
pop
leave
add
push
pop
arpl
mov
add
pop
popa
dec
pushf
fs
inc
retf
movs
mov
dec
cmp
leave
push
int3
cdq
(bad)
int3
add
shl
add
xchg
push
push
outs
mov
test
or
mov
add
jmp
mov
add
jge
fild
mov
hlt
push
inc
out
ja
adc
sbb
pushf
xor
aaa
cdq
loopne
sbb
in
neg
stos
push
int
or
pushf
mov
push
sbb
lahf
pop
inc
fdivr
sbb
xlat
hlt
xchg
aad
cmps
xchg
stos
(bad)
mov
mov
push
cld
fidivr
sbb
mov
pushf
adc
cmps
pop
icebp
or
mov
pop
sub
in
pushf
mov
dec
cmp
popf
push
loope
push
hlt
fucom
mov
popa
dec
push
lahf
dec
rep
ins
mov
pop
pop
fsub
adc
fstp
xor
fistp
dec
mov
dec
fcomp
mov
je
push
dec
mov
sbb
fiadd
cld
pushf
cmp
push
ss
adc
push
fist
shl
cmps
sbb
loope
pop
cwde
pop
ret
pushf
scas
fcmovne
ins
sub
pushf
(bad)
adc
js
or
push
mov
cdq
sbb
xlat
fcom
xchg
push
mov
addr16
lea
sahf
sbb
mov
leave
movs
sti
pushf
adc
out
mov
xchg
pop
in
(bad)
loop
cdq
xor
pop
dec
pop
cpuid
popf
jo
fistp
or
or
ds
ret
fisttp
add
aaa
push
mov
sub
(bad)
jge
push
jbe
sahf
dec
aam
sbb
or
pushf
mov
pop
add
pop
cmp
push
push
sbb
ror
stc
or
mov
mov
pushf
or
sbb
lahf
cmp
cdq
pop
dec
xchg
mov
xchg
adc
pop
pop
pushf
scas
nop
jnp
sbb
movs
sub
jp
pushf
dec
lods
int3
inc
pop
lods
(bad)
xchg
mov
cmp
xchg
jl
and
pushf
inc
ja
xchg
or
shl
cdq
in
iret
pop
shr
xor
add
pushf
cmc
sbb
and
sbb
fisubr
lea
out
test
pushf
pop
stos
(bad)
mov
int3
aaa
lahf
push
inc
push
aaa
scas
pop
out
pop
mov
fwait
cmp
xchg
adc
dec
lods
jmp
pushf
popa
push
adc
lods
pushf
loopne
pushf
mov
ds
xchg
xchg
xor
push
pop
mov
pushf
icebp
addr16
mov
mov
icebp
addr16
add
mul
fstp
aaa
in
loop
sbb
fcmovnu
retf
(bad)
xlat
sub
icebp
cmps
push
icebp
sbb
pushf
dec
adc
mov
cmp
jns
pushf
(bad)
cld
mov
stc
sbb
pop
cdq
ror
pop
ins
sub
fiadd
sub
ret
mov
dec
fcmovne
or
xchg
fistp
jo
int
pushf
fcmovb
or
mov
cmp
in
fwait
popa
cld
out
pushf
pop
fcomi
addr16
add
dec
mov
pushf
stos
mov
adc
inc
pushf
xchg
push
adc
sub
inc
xchg
not
pushf
jg
sbb
lods
jnp
pushf
test
jmp
push
pushf
mov
aas
pop
cdq
fisttp
push
rcr
dec
pushf
mov
mov
stos
xchg
les
mov
aaa
push
lahf
pop
fwait
lods
pushf
sti
jl
inc
stos
xor
adc
pop
out
rcr
add
call
mov
pushf
ficomp
int3
cwde
jmp
into
mov
retf
cmps
pop
inc
enter
dec
pop
cdq
jo
xor
adc
mov
out
fmulp
nop
mov
or
lahf
fucomp
lahf
(bad)
xor
xchg
pop
inc
inc
dec
pushf
popf
adc
fadd
cmp
dec
sar
adc
sar
ret
adc
dec
bound
mov
test
mov
pushf
cmp
ja
mov
(bad)
loope
pop
mov
out
pushf
ja
aaa
mov
adc
lods
pushf
fs
mov
push
xchg
push
dec
out
dec
pop
push
pop
in
lods
scas
pushf
add
cmp
ins
pushf
cld
pop
adc
add
leave
lock
mov
mov
mov
adc
or
sbb
xchg
idiv
dec
dec
xchg
pop
push
sbb
mov
jno
loop
mov
pop
lea
and
sbb
pop
sub
lahf
(bad)
push
aaa
inc
cwde
idiv
aad
pushf
push
and
pushf
mov
jnp
sbb
xchg
fimul
test
mov
push
sti
pop
nop
pushf
adc
jl
pop
int3
fwait
push
je
sbb
add
rcl
cdq
in
mov
mov
loopne
adc
mov
inc
pop
sub
sbb
inc
cld
sub
sbb
jg
cmp
ja
push
inc
mov
aam
pushf
mov
sbb
mov
leave
arpl
(bad)
cmp
inc
mov
loope
inc
lods
int3
fwait
pop
lods
dec
pop
lods
mov
pushf
mov
mov
sbb
sbb
mov
sbb
mov
xlat
clc
pop
pushf
fidivr
mov
ret
call
pop
sbb
movs
or
and
mov
daa
or
int3
mov
push
ins
inc
cdq
(bad)
test
dec
xchg
pop
adc
sub
cwde
adc
cmp
jae
xchg
cdq
pop
sbb
cld
outs
pushf
(bad)
adc
xchg
sbb
and
xor
pop
lods
pushf
fisubr
pushf
popa
cmp
push
pop
cdq
pop
pushf
mov
mov
shr
daa
lahf
sbb
out
aad
xchg
popf
shl
pushf
ficom
dec
add
lahf
or
loop
sbb
arpl
mov
xor
loop
aam
xchg
leave
xchg
sub
push
pushf
sbb
mov
xchg
test
ins
lods
cdq
mov
pushf
sahf
push
sub
sub
push
arpl
cmps
cld
outs
pushf
sahf
frstor
es
sub
xchg
into
pushf
add
inc
aad
xor
addr16
fsub
mov
mov
mov
mov
dec
add
push
popf
push
bound
pushf
test
popf
dec
cmovb
aaa
push
aad
(bad)
pushf
fistp
or
inc
xchg
aaa
inc
pop
mul
xchg
mov
push
xchg
neg
pushf
in
dec
cld
pop
adc
dec
pushf
ror
sbb
addr16
iret
xchg
pop
cld
xor
retf
xchg
adc
mov
fcomi
in
pop
xchg
je
mov
inc
pop
pop
gs
pushf
movs
pop
aam
sub
pop
loop
adc
adc
sbb
fistp
mov
xchg
pop
pop
mov
scas
xchg
call
imul
(bad)
adc
pop
pushf
nop
cwde
pop
mov
pop
mov
push
push
test
xchg
mov
jmp
xor
mov
mov
sar
iret
xchg
jecxz
push
pushf
ret
xchg
mov
pop
loop
xchg
data16
xor
pushf
lea
xchg
out
xchg
test
pushf
jmp
mov
ins
push
leave
aam
mov
cmp
cwde
pop
adc
sbb
loopne
fdivr
xchg
push
lock
xchg
sbb
nop
mov
xor
ret
sbb
push
adc
sub
fild
cld
pushf
dec
shl
add
mov
out
sbb
adc
test
xchg
push
pop
pop
mov
sub
pushf
enter
pop
dec
sbb
sar
push
sahf
xchg
loop
push
add
pushf
mov
pop
fdivr
or
sub
fidivr
push
arpl
push
lahf
pop
adc
cld
pushf
outs
enter
pushf
or
test
mov
cmp
shl
xchg
lahf
sbb
inc
cwde
pop
out
pushf
inc
int3
aam
pushf
mov
call
pushf
dec
fstp
cmp
lods
pop
ss
sbb
sbb
pushf
retf
(bad)
cmp
mov
pushf
fstp
and
pushf
mov
out
adc
in
inc
cmp
fisub
loop
shl
xchg
pop
pop
sbb
pop
fcom
dec
push
push
or
xchg
cld
mov
sbb
daa
adc
ja
sbb
pop
jg
pushf
and
mov
jae
pushf
popf
fcomp
ins
push
pop
inc
in
push
cdq
loop
adc
or
sbb
(bad)
or
push
mov
shr
or
fcmovb
sti
add
xchg
cmp
pop
add
mov
mov
shl
sub
push
xchg
push
cmp
xor
and
ret
shr
std
pop
retf
ins
cmp
pushf
inc
cmp
jg
rcr
xchg
mov
shl
or
pushf
mov
add
push
inc
sbb
call
fcom
sbb
mov
xor
arpl
and
jl
push
push
fwait
pushf
mov
shr
imul
scas
aam
jo
hlt
push
mov
xchg
adc
ins
pushf
or
add
test
ret
mov
adc
add
pop
mov
sub
push
inc
inc
mov
mov
pop
mov
dec
(bad)
js
pushf
xor
call
pushf
addr16
push
call
adc
xchg
adc
fdivr
jne
cmp
nop
popf
pushf
cwde
pop
pushf
cs
add
mov
mov
mov
pushf
(bad)
push
clc
xchg
adc
xchg
cdq
inc
xchg
test
and
inc
pop
sbb
or
jnp
mov
dec
xor
pop
dec
sbb
aaa
popf
adc
loop
fiadd
xchg
adc
mov
popa
dec
aam
sub
inc
xchg
jne
add
xor
or
sbb
push
loope
pop
push
sti
mov
xchg
mov
mov
pop
jmp
cmp
nop
pop
lock
adc
fistp
adc
sbb
stos
xchg
push
out
cmps
sbb
add
fcom
in
ja
adc
loop
sbb
clc
mov
cwde
je
pop
mov
cmp
pop
lahf
pop
and
adc
jb
push
lods
lods
nop
popf
pop
icebp
cmp
gs
adc
cwde
sbb
push
fimul
add
sub
pushf
inc
adc
cmps
sbb
ja
sbb
adc
sbb
retf
pushf
mov
pushf
ins
cwde
xchg
pop
imul
js
retf
push
(bad)
mov
aam
in
(bad)
into
mov
lahf
pop
inc
push
dec
pop
or
jge
dec
ins
pop
pop
sbb
js
ds
adc
pushf
pop
dec
jne
adc
mov
add
popf
fwait
mov
xchg
pop
cdq
jae
rol
adc
mov
adc
sbb
sbb
jo
hlt
push
aam
ins
aam
mov
jle
mov
aam
cld
aam
pushf
movs
mov
ins
cdq
pop
mov
cmp
cmp
xchg
fld
ds
gs
popf
(bad)
imul
sbb
fmulp
in
pushf
xor
mov
mov
ja
adc
aaa
add
daa
mov
sub
sbb
sahf
xor
cdq
cmp
sbb
lea
daa
add
sub
popf
push
pushf
cmp
sub
call
and
not
and
add
mov
adc
ins
pushf
retf
or
imul
add
xor
call
icebp
mov
mov
aam
sub
arpl
xor
pushf
fwait
dec
pop
cmp
mov
fiadd
push
mov
mov
shl
dec
sahf
pop
adc
pop
nop
pushf
jns
jnp
pop
sub
push
mov
or
mov
mov
pushf
push
push
not
outs
mov
pop
sub
fcomp
ds
mov
cs
call
retf
clc
or
sub
dec
enter
cmp
jg
mov
shr
pushf
arpl
xchg
jmp
adc
mov
(bad)
nop
loopne
adc
mov
xchg
cmp
adc
sub
xor
(bad)
ins
pushf
sbb
sbb
sub
pop
daa
ret
push
out
push
pushf
jb
pop
jmp
sbb
jp
sub
sbb
xchg
mov
sub
scas
enter
stc
xchg
push
push
aam
inc
cmp
data16
pushf
add
in
test
std
js
sbb
pop
pop
ret
pop
sbb
lods
pushf
test
mov
scas
push
cmps
fisttp
xchg
pop
pop
repnz
inc
cdq
pushf
in
addr16
lock
mov
push
es
push
push
popf
out
fwait
daa
ret
pop
in
push
pushf
adc
pop
test
(bad)
fistp
retf
lods
inc
pushf
sar
nop
add
cwde
cmovb
pushf
fimul
adc
sub
mov
pop
sar
sbb
add
or
xchg
dec
fdivp
lahf
push
inc
sahf
call
mov
sbb
loop
push
ja
mov
aaa
pop
loop
lahf
xchg
test
aam
or
in
mov
rcr
out
sub
inc
xchg
pop
repnz
pushf
int
mov
cdq
arpl
cdq
pop
addr16
pushf
outs
mov
pushf
push
cld
sub
pushf
sub
dec
adc
adc
xchg
push
add
jne
or
mov
mov
mov
es
sbb
stc
lea
xchg
pop
ds
push
adc
fistp
adc
push
cmp
mov
adc
pop
pushf
mov
lea
dec
(bad)
mov
pop
lods
sbb
pushf
fisubr
lahf
fst
pushf
pushf
int
mov
jge
add
fild
mov
sahf
or
xchg
popf
xor
fwait
xchg
sbb
inc
pop
mov
mov
jmp
fisttp
int3
cmp
sahf
sbb
dec
push
pushf
es
outs
mov
mov
arpl
in
stos
lahf
aad
sub
repz
jge
push
lock
adc
aaa
xlat
mov
mov
xchg
nop
dec
in
out
xchg
mov
mov
lahf
dec
jp
pushf
jmp
add
jl
in
adc
sbb
xchg
repz
sub
out
mov
cmps
pop
loope
fwait
mov
inc
pop
out
pop
cmp
inc
push
daa
add
mov
(bad)
fsub
mov
and
mov
out
push
sbb
or
cmc
ins
mov
dec
dec
lahf
sbb
pop
fcomp
fsubr
retf
inc
pop
(bad)
aad
jne
adc
int3
pushf
clc
enter
rcl
pushf
loop
fistp
pushf
push
sbb
or
cmp
sub
daa
popf
aam
mov
pushf
(bad)
dec
inc
adc
inc
cwde
aad
fsubr
int3
jp
int3
and
mov
inc
push
clc
adc
xchg
idiv
stc
sbb
fwait
ins
nop
pushf
cdq
sub
sbb
mov
pop
inc
(bad)
jmp
popf
(bad)
fbstp
lahf
cdq
in
xchg
shl
cmps
xchg
nop
stos
icebp
mov
icebp
addr16
or
clc
(bad)
popf
icebp
adc
pop
test
stos
add
mov
add
mov
leave
xchg
mov
fimul
sahf
popa
inc
nop
xor
pushf
mov
loope
pushf
cld
mov
mov
cdq
leave
jbe
xor
int3
jg
int3
rcr
in
int3
jmp
int3
popa
popf
int3
jg
pushf
sub
arpl
xchg
push
or
aas
fld
(bad)
mov
es
mov
mov
pop
fwait
inc
mov
sub
stc
int3
pushf
ret
fwait
dec
push
mov
mov
mov
sbb
sub
lahf
xchg
cld
mov
xchg
pop
inc
sub
lea
xchg
xchg
and
adc
lea
iret
xchg
push
in
push
pushf
xchg
mov
jecxz
or
aaa
mov
out
rcr
pushf
dec
cld
or
mov
shr
pushf
stc
xchg
jl
lock
push
and
xchg
xchg
adc
ds
xchg
out
push
adc
pop
popf
push
mov
je
ins
pushf
fimul
in
sub
push
sbb
push
sub
pushf
fidivr
cmp
or
pop
lahf
daa
jl
pushf
ret
fcmovu
ror
sbb
test
in
adc
sbb
pushf
aas
int3
mov
rol
bound
(bad)
and
dec
fimul
sbb
pushf
scas
pushf
xchg
xchg
push
into
bound
jne
cmp
loop
xchg
or
pop
add
dec
pushf
mov
test
cmp
xchg
sbb
aaa
xchg
sbb
mov
sub
adc
pop
cmp
add
mov
test
mov
push
lock
pop
lods
clc
mov
enter
mov
lea
call
push
pop
pop
int3
pushf
outs
in
les
jg
sbb
jo
pushf
icebp
mov
inc
adc
cmp
(bad)
adc
hlt
push
loop
int
hlt
ins
mov
xchg
cmp
xchg
out
pushf
shl
mov
or
xchg
fdiv
ficom
int3
pushf
fcmove
pushf
dec
adc
cld
pushf
push
mov
popf
adc
push
mov
push
dec
push
jmp
xlat
cwde
pushf
test
nop
mov
mov
cmps
push
mov
mov
gs
sbb
pushf
push
pushf
cwde
cmp
(bad)
neg
sbb
dec
xchg
or
mov
inc
pop
pop
or
aam
pop
mov
dec
sbb
fcom
mov
or
pop
pushf
push
fwait
adc
cmp
not
inc
xor
mov
popa
nop
pop
arpl
lea
adc
cwde
adc
pop
rcr
cmc
call
cmp
lea
fistp
cmp
adc
xlat
repz
xchg
xchg
out
pop
lock
add
cmp
sbb
out
pushf
inc
fstp
mov
mov
and
aas
lods
pushf
pop
addr16
aad
sbb
pop
and
xchg
xchg
xor
sbb
mov
pushf
xor
jno
xchg
cld
les
data16
pushf
xchg
pop
pop
mov
pop
int3
lea
pop
jae
pop
lahf
pop
pop
pop
dec
pop
xor
xor
mov
sahf
and
mov
fld
jo
pushf
cmp
cmp
loope
popf
je
mov
fimul
adc
push
mov
dec
mov
push
pop
dec
in
pop
jno
sbb
inc
xchg
jg
bound
cmp
nop
pushf
test
jmp
fbld
push
sahf
lea
adc
add
lea
sbb
sbb
cwde
pop
fs
pushf
pushf
pop
aam
sub
mov
test
nop
pushf
mov
jecxz
mov
daa
mov
nop
or
xchg
pop
xor
cmp
or
sbb
pop
xor
pop
loope
fsub
pushf
loopne
adc
dec
stos
inc
fwait
pop
push
jl
ins
dec
aam
ins
mov
fadd
adc
xor
aaa
push
popa
mov
add
pushf
aad
mov
xchg
dec
and
sub
fnstsw
(bad)
out
loop
pushf
fucomip
stos
inc
shl
add
aad
mov
pushf
gs
pushf
mov
imul
scas
push
ret
mov
pop
leave
pushf
mov
(bad)
mov
xchg
pop
push
pop
push
dec
scas
pushf
add
cmp
push
cmps
push
enter
xchg
sbb
mov
int3
mov
int3
mov
mov
fwait
cmp
int3
pushf
addr16
mov
add
pop
arpl
mov
mov
cmp
js
pushf
fisubr
push
cmp
pushf
cdq
pop
jmp
mov
jmp
(bad)
(bad)
pop
add
ins
pushf
push
push
test
mov
sub
pushf
fldcw
xchg
aad
pop
xchg
adc
cdq
pushf
mov
clc
cmps
pop
xchg
xchg
xor
cld
pushf
push
mov
cmp
fsub
mov
pop
adc
inc
push
mov
loopne
sbb
add
mov
inc
push
push
push
mov
pop
daa
dec
fild
xchg
mov
sbb
ins
outs
pop
pop
out
or
(bad)
fiadd
xchg
pop
xor
jp
pushf
in
mov
add
cmp
nop
(bad)
dec
bound
mov
ret
ror
dec
mov
int3
pushf
ja
ins
in
stos
sbb
into
xchg
pop
fdiv
pushf
fisubr
xchg
push
add
xchg
cwde
push
or
cdq
loopne
adc
dec
pop
pushf
sar
sub
xor
pop
mov
out
shl
sbb
pop
rcr
inc
cld
scas
pushf
inc
push
out
pushf
mul
cld
jnp
inc
pop
test
js
inc
mov
inc
mov
in
pushfw
iret
pop
stc
rol
fisttp
nop
pushf
int3
mov
clc
mov
shl
xchg
or
pushf
or
xchg
sbb
ins
pushf
call
pop
cmp
jl
mov
dec
jge
xor
mov
shl
stos
pop
add
xchg
test
sbb
lods
bound
ror
fld
adc
pop
cmp
sbb
xchg
rcr
repz
pop
pushf
into
lods
mov
mov
pushf
sbb
js
inc
pushf
pushf
fiadd
sub
enter
xchg
cld
cmps
push
and
adc
sbb
lahf
fistp
pushf
mul
sbb
xchg
fmul
sub
pushf
iret
mov
xchg
mov
lods
cmp
cmps
sbb
addr16
popf
xchg
orps
pushf
fisubr
pop
add
xchg
loope
or
lods
es
ja
add
xor
inc
sahf
mov
pushf
test
cdq
cmp
sar
aad
sbb
pop
mov
in
cmps
push
add
mov
test
imul
int3
stos
call
pushf
pop
in
call
pop
pop
xor
jne
push
lahf
dec
adc
sub
adc
addr16
xchg
adc
push
dec
xchg
sub
call
pushf
fiadd
and
aas
sbb
stos
rcl
dec
fistp
dec
fdivr
dec
call
test
cmp
lods
pushf
punpckhdq
push
pushf
dec
popf
dec
fild
sbb
or
xor
mov
cmp
adc
pushf
push
pushf
cwde
mov
mov
ficom
dec
arpl
pushf
pushfw
sub
adc
mov
pop
aad
inc
adc
or
pushf
cmp
popf
sbb
arpl
mov
pushf
call
shl
es
lods
and
jg
(bad)
fstp
add
ja
add
xchg
loope
cdq
inc
push
or
fwait
rcr
add
rol
push
pop
mov
cmp
out
pushf
jmp
hlt
mov
(bad)
adc
shr
pop
(bad)
leave
std
sbb
les
sbb
mov
bound
xchg
ins
inc
rcl
push
dec
add
push
cwde
add
lods
clc
xchg
fild
addr16
std
ja
sbb
out
sbb
fstp
lea
loop
pushf
dec
ins
mov
sahf
add
pushf
mov
xor
ds
test
ds
dec
rcr
in
push
pushf
jne
jp
mov
pop
jg
adc
mov
pop
xor
mov
and
outs
cmp
push
cmp
add
sbb
push
inc
xchg
or
add
aaa
dec
push
daa
add
adc
aam
or
adc
out
retf
call
daa
lahf
adc
mov
icebp
xchg
xlat
loopne
pop
in
pushf
mov
in
aam
push
pop
out
mov
rcr
push
jae
cwde
fadd
pushf
ss
in
lahf
cmp
aaa
cwde
add
pop
adc
xchg
fiadd
fiadd
and
inc
fcom
push
pop
nop
pushf
and
sbb
fsubrp
pushf
and
sub
cmp
cmp
lahf
xchg
cld
mov
mov
sub
sbb
add
or
sub
pop
inc
add
pop
aaa
pop
xor
xchg
pushf
adc
xchg
dec
data16
pop
jge
pushf
fistp
mov
adc
adc
ret
mov
xchg
xor
xchg
and
jne
pushf
fidiv
lods
and
das
add
pushf
cs
xchg
or
pushf
in
or
out
mov
rcr
mov
mov
daa
xchg
rol
cmps
xchg
xor
cld
ja
into
xchg
sbb
retf
ins
pushf
lock
cmp
iret
jl
adc
ins
mov
lods
sub
adc
pushf
jns
aam
in
aam
cmp
adc
mov
call
ss
xchg
push
xchg
aaa
or
pop
mov
out
mov
dec
pushf
mov
cmp
gs
loope
xchg
push
jg
dec
lahf
test
xchg
xchg
sub
and
out
mov
pushf
mov
lock
arpl
fstp
jmp
sbb
mov
add
test
test
gs
lahf
aaa
sbb
mov
in
pushf
popf
push
mov
inc
sahf
dec
push
jmp
sbb
es
ds
lahf
sbb
fimul
aas
adc
push
pushf
push
pushf
aas
mov
pop
bound
cmp
pop
adc
or
adc
mov
retf
dec
push
pushf
dec
ins
pop
mov
mov
xor
ins
bound
pop
push
push
mov
mov
xchg
push
pushf
es
repz
enter
sub
xchg
cmp
aaa
dec
xchg
clc
scas
mov
mov
dec
mov
inc
test
in
lea
xor
jb
adc
xor
popa
ss
xchg
fnstenv
mov
(bad)
push
add
xchg
adc
fmul
fiadd
leave
jle
pushf
setl
inc
push
not
xor
pushf
cmc
bound
fucomip
bound
sbb
sahf
fsubr
pop
ins
les
dec
fnstsw
dec
ins
pushf
mov
inc
pop
in
push
pushf
pop
jae
cmps
nop
adc
aaa
mov
xchg
enter
loope
pop
inc
push
pop
fbstp
sbb
fistp
pop
loopne
fimul
daa
sbb
mov
loope
fwait
mov
ss
xchg
sahf
cmp
xor
in
push
inc
jge
pushf
sti
in
out
pop
stos
ins
pushf
adc
or
stos
in
lods
fistp
or
cmp
push
cmp
sub
test
sbb
sub
push
test
popf
int3
pushf
xor
fwait
inc
xchg
in
sbb
inc
cmp
pop
jmp
ss
dec
mov
xchg
pop
adc
add
push
leave
aad
pushf
mov
int3
xor
mov
dec
pushf
test
mov
dec
push
mov
inc
xchg
sub
lahf
call
stos
rcr
out
xchg
lock
fdiv
jb
xchg
xchg
adc
inc
mov
retf
sub
std
pushf
les
sbb
fcmovnu
lea
mov
lahf
ficomp
pushf
push
in
sub
pop
xor
inc
adc
out
adc
pushf
mov
pop
cmp
fist
loope
xchg
lea
cmp
xchg
arpl
adc
scas
cmp
adc
push
cmp
xchg
fistp
scas
mov
mov
in
lahf
push
and
mov
not
push
pushf
(bad)
int3
stc
lahf
xor
add
pop
mov
pushf
in
sbb
mov
ret
sbb
or
rcr
mov
pushf
mov
cdq
cld
lods
dec
pop
out
pop
div
add
neg
pushf
jmp
mov
pop
rol
mov
popa
cmp
mov
dec
addr16
pushf
sbb
inc
adc
lea
adc
push
mov
cmc
ret
sar
jge
pushf
shr
fsub
pop
leave
cmp
mov
jnp
mov
or
loopne
pop
hlt
data16
not
inc
imul
pop
add
sar
xchg
add
int3
pushf
call
or
pushf
pushf
jmp
jnp
sub
xchg
adc
pop
mov
mov
mov
xchg
sbb
fabs
xor
pop
ja
icebp
fld
xchg
xor
test
sahf
mov
pop
push
int3
pushf
inc
sbb
jecxz
mov
(bad)
push
cmp
mov
mov
pop
lods
fistp
sbb
sbb
(bad)
enter
pop
cs
pop
test
sub
out
out
push
pushf
push
pop
aam
lea
adc
out
enter
sbb
xlat
arpl
movs
mov
loope
xchg
arpl
xlat
loopne
fmul
cs
pushf
popa
pushf
mov
(bad)
fdiv
xchg
push
xchg
jae
xchg
icebp
addr16
cmps
adc
ja
sahf
xchg
sbb
mov
pushf
bound
popf
push
adc
mov
mov
pushf
js
mov
mov
jge
ja
add
mov
and
adc
xlat
mov
jecxz
fistp
sub
sbb
mov
ficomp
in
pushf
fwait
int3
aam
mov
pop
mov
cs
test
mov
xchg
push
xor
fwait
sar
fist
ror
shr
push
cmovp
pushf
adc
cdq
mov
pushf
jmp
aam
in
aam
lods
mov
sbb
xchg
add
pushf
add
adc
xchg
xchg
in
imul
sahf
or
rcl
mov
inc
mov
pushf
mov
mov
shl
adc
or
fdiv
adc
mov
lahf
cmp
sub
outs
inc
fldlg2
mov
pushf
xlat
aad
mov
jp
ror
scas
mov
rcl
cmp
rol
xlat
sub
xchg
shl
(bad)
xlat
lock
addr16
scas
sahf
shl
(bad)
int3
add
adc
outs
pushf
xchg
push
loope
pop
test
pop
arpl
lahf
push
xor
js
xor
push
fwait
les
dec
ds
xchg
rol
sub
neg
add
jmp
mov
cmp
sbb
mov
push
cmp
(bad)
in
dec
popf
pop
bound
mov
ja
adc
(bad)
push
call
test
xlat
std
stos
rcl
pop
sahf
jb
dec
mov
xor
and
call
mov
cdq
jmp
push
(bad)
dec
sar
xor
sbb
cmp
call
popa
aas
lahf
xor
sbb
ds
outs
pop
fst
cmp
mov
int3
pushf
mov
inc
mov
popf
in
(bad)
lods
ret
pushf
jge
cmps
cmp
adc
xchg
daa
adc
cmp
and
mov
not
pushf
pushf
popf
lods
mov
and
xchg
pushf
lds
push
sub
mov
test
mov
push
cmp
pushf
jnp
xchg
cdq
inc
pop
dec
leave
mov
pop
gs
sbb
nop
pushf
xor
clc
ins
pushf
jno
stos
add
test
mov
push
adc
popf
pop
out
into
push
pushf
popa
sbb
imul
mov
jmp
test
daa
inc
pushf
cmp
cli
lods
pushf
aad
mov
mov
pushf
pop
cmp
adc
sbb
pushf
aaa
ja
xchg
push
cmp
pushf
mov
mov
mov
pushf
fisttp
neg
loope
fcmovb
ins
nop
pushf
inc
mov
cmp
sub
xchg
inc
adc
cmps
xchg
push
xchg
pop
xchg
sub
in
sub
lahf
(bad)
mov
icebp
sbb
lea
clc
mov
add
adc
sahf
fsubr
(bad)
sbb
lahf
sbb
mov
mov
sbb
xchg
adc
test
sbb
pop
pusha
pop
pushf
hlt
or
and
mov
aaa
sbb
cmp
pushf
and
pushf
int3
ret
in
mov
lock
icebp
aaa
fsubr
sahf
push
add
mov
ins
ds
xor
hlt
fiadd
dec
test
sbb
or
inc
push
clc
mov
dec
sbb
inc
adc
xchg
sub
cmp
xchg
jge
pushf
mov
arpl
dec
adc
cwde
inc
sub
fcomi
mov
mov
cmp
(bad)
sub
leave
jl
pushf
or
pop
adc
push
clc
mov
adc
cmp
sahf
(bad)
test
mov
cmps
push
cs
bound
bound
mov
pop
xor
inc
adc
mov
pushf
test
dec
in
(bad)
fcmovnbe
jl
data16
cmp
cmps
ror
push
call
arpl
es
ficomp
push
cmp
test
addr16
mov
mov
mov
fsub
enter
pop
jecxz
mov
cmp
xchg
and
dec
push
cmp
pop
and
mov
and
aaa
pop
leave
imul
pushf
lock
sbb
pop
daa
adc
js
jmp
pushf
inc
adc
and
xlat
xchg
adc
pop
jae
loope
fsub
cmp
xchg
outs
mov
(bad)
(bad)
ret
adc
cmp
pop
dec
cld
sbb
cwde
xchg
aad
int3
mov
add
sbb
aad
(bad)
xchg
ds
inc
push
call
fwait
xor
pop
inc
push
pop
mov
cmp
push
test
cmp
cmovp
add
rcl
lock
pushf
jmp
rcr
out
(bad)
push
mov
daa
dec
sbb
sub
out
adc
or
clc
ja
xchg
xchg
cmp
mov
cmp
aad
or
inc
pop
in
nop
in
addr16
std
ja
cld
mov
push
pop
out
sbb
mov
clc
out
leave
pop
pushf
in
mov
inc
sbb
call
mov
lock
fiadd
pop
shl
nop
bound
pop
test
xchg
xchg
fst
data16
mov
or
add
mov
or
pop
and
lea
jg
push
fmul
adc
cmp
frstor
sub
test
xor
push
mov
fist
pushf
xchg
test
int3
fistp
in
rol
dec
pop
daa
add
dec
ret
cmp
pop
ss
add
xor
arpl
xchg
pop
adc
enter
sbb
out
aad
jl
fcmove
pushf
popa
sub
pushf
adc
popf
adc
mov
pushf
pushf
sub
adc
sar
sbb
fisub
pop
cwde
shl
call
adc
push
cmp
mov
lahf
sbb
pop
not
lea
addr16
pop
test
adc
mov
mov
(bad)
mov
pushf
ja
cld
js
push
mov
(bad)
shl
aaa
xchg
leave
adc
cmps
faddp
shl
xchg
ds
mov
add
pop
(bad)
fcom
pushf
dec
push
test
bound
mov
sbb
push
add
sbb
bound
repz
lahf
push
sbb
ret
pop
jae
push
pushf
pop
pop
pop
sub
rcr
push
add
sub
adc
push
fisub
sub
and
out
adc
xchg
loope
fidivr
dec
sbb
xlat
xchg
pop
add
dec
cdq
pop
adc
int3
pushf
hlt
lahf
fisttp
pop
sub
mov
pushf
jne
xor
mov
jge
bound
jb
pushf
fisubr
or
jmp
mov
xor
test
fdiv
loope
pop
add
sbb
xor
mov
fisub
bound
sub
pushf
cmp
mov
adc
icebp
sbb
adc
cwde
xchg
cdq
cmp
addr16
sar
adc
cmp
mov
ret
fnstenv
mov
ror
nop
pushf
mov
sub
cld
sbb
push
cld
xchg
add
pop
cwde
xchg
add
(bad)
sub
ds
pop
arpl
xlat
xchg
pushf
mov
leave
(bad)
add
ins
sahf
lods
pop
adc
cmp
cmp
mov
pushf
mov
ins
pushf
or
fst
loope
pop
lock
rcl
pop
pop
xchg
pushf
outs
pushf
sbb
xchg
sub
adc
mov
fsubr
addr16
lea
(bad)
jg
inc
push
in
test
mov
add
call
pushf
mov
sub
fucomi
inc
pop
cmp
out
fnsave
ins
fistp
and
pushf
loop
fisttp
mov
add
xchg
pop
adc
or
pop
fisttp
into
loope
xor
sbb
add
call
dec
mov
sbb
nop
xchg
mov
not
sub
xchg
jg
sbb
int
cmc
call
add
inc
push
daa
add
not
or
ds
aas
push
mov
lods
pushf
add
sbb
inc
cwde
cmp
sub
mov
lea
add
hlt
addr16
push
pop
pop
push
mov
pop
jne
loope
xchg
xor
ds
mov
xchg
fld
xchg
fst
add
repnz
ds
shr
cwde
add
pushf
sbb
pushf
outs
inc
dec
mov
dec
sub
ds
aas
pop
mov
pop
cmp
pushf
fisub
mov
cmp
inc
(bad)
cmps
push
sbb
sub
in
addr16
sbb
aam
pop
idiv
daa
ret
call
lods
sub
push
loope
push
xor
cmp
dec
sar
pop
dec
aad
inc
push
test
lahf
mov
inc
push
idiv
aam
pushf
rcr
inc
push
pop
lods
neg
mov
out
sar
pop
pop
adc
pushf
and
outs
mov
or
mov
lahf
push
into
sbb
push
and
add
jl
pushf
mov
mov
inc
fwait
mov
cmovb
not
loope
xchg
mov
popf
push
cmp
hlt
adc
push
cmp
pushf
mov
inc
pop
push
nop
xor
aas
fwait
adc
inc
mov
push
ror
sbb
mov
cmovb
push
xchg
sahf
loope
adc
inc
push
xor
mov
xor
ss
and
ret
test
shl
pop
test
push
jnp
ror
pop
lahf
pushf
pushf
mov
mov
xchg
mov
xchg
sbb
sbb
pushf
xor
inc
fdecstp
ja
icebp
sbb
mov
pop
mov
sub
adc
sbb
inc
mov
and
js
es
pushf
fisub
lods
fisubr
cwde
add
fsubr
bswap
mov
xchg
push
inc
pop
cmp
cwde
jno
inc
pushf
xlat
or
push
pushf
mov
(bad)
frndint
sbb
fmul
mov
neg
pushf
jns
lahf
sbb
(bad)
xlat
or
jne
mov
lea
pop
gs
inc
adc
sbb
sbb
adc
push
shl
mov
cmp
and
push
inc
mov
ja
add
cdq
sbb
shl
mov
cmps
aad
popf
adc
sbb
inc
cmps
mov
mov
or
sbb
mov
stos
pushf
jle
cwde
leave
dec
or
scas
pop
xor
mov
jmp
aad
adc
ret
inc
cwde
stc
js
aam
pushf
fisub
add
pop
pushf
shl
stos
test
and
loope
aam
sub
icebp
sbb
adc
imul
sti
mov
or
mov
mov
sub
sbb
je
sbb
mov
sahf
xchg
push
push
lahf
pop
adc
sub
lea
sbb
xchg
daa
cmps
push
lea
sahf
xor
cmp
pushf
aaa
push
leave
fs
icebp
not
mov
les
stos
push
mov
icebp
stos
pop
cdq
sbb
js
ss
rcl
xchg
pushf
dec
adc
ja
(bad)
pop
add
jg
bound
adc
sbb
xor
mov
pop
mov
je
ret
mov
lahf
bound
sahf
xor
or
sub
in
cmp
fstp
pushf
sub
popf
sub
enter
fidivr
mov
cld
aaa
mov
adc
sbb
xchg
push
sbb
call
cld
cmps
pushf
dec
adc
adc
cdq
or
cmp
mov
push
push
neg
pushf
sub
adc
pushf
push
xor
sahf
loope
xchg
cdq
lods
cmp
ja
inc
xchg
pop
pop
repz
cmp
aad
mov
pop
es
mov
lods
mov
jmp
in
out
pushf
or
cmc
iret
lahf
mov
cmp
dec
cdq
pop
mov
dec
adc
or
sbb
add
adc
cdq
pusha
mov
cmp
cli
sub
cld
push
cmp
hlt
sbb
adc
sbb
fld
lods
mov
repnz
pushf
fwait
enter
(bad)
xchg
aam
pop
daa
lea
mov
std
or
rol
push
test
sbb
sub
adc
popf
push
shl
pushf
fst
int3
imul
fld
test
lods
fistp
and
ds
neg
inc
xchg
or
adc
pushf
sub
sub
push
(bad)
scas
pushf
sbb
call
inc
pop
adc
jnp
xchg
fild
push
cmp
retf
jl
add
imul
mov
jl
jge
sbb
loop
pop
mov
cmp
sbb
adc
sub
push
repz
push
xor
pushf
fidiv
add
xchg
sbb
jns
mov
lods
push
nop
jae
nop
pushf
prefetch
daa
or
mov
das
mov
pushf
iret
lods
mov
aad
hlt
cmp
adc
bound
pop
mov
arpl
lahf
ja
bound
fwait
adc
mov
js
push
sbb
add
sbb
ja
dec
lahf
leave
mov
and
mov
cmp
xchg
pop
xlat
scas
mov
aaa
inc
adc
sbb
out
push
xor
pushf
add
mov
push
jmp
adc
cmp
xor
fisttp
push
xchg
pop
mov
xchg
bound
cmp
xlat
adc
mov
xchg
pop
xor
cdq
bound
call
(bad)
adc
mul
not
pop
pushf
mov
mov
adc
pop
hlt
fmul
clc
mov
ficomp
rcr
sub
ret
adc
cmp
lods
out
mov
cld
pushf
loop
fidiv
xchg
fld
pushf
adc
pop
mov
pushf
sbb
xor
sub
pop
adc
aaa
aad
xor
gs
fadd
xchg
loope
(bad)
cmp
fdivr
bound
arpl
mov
xor
add
pop
ds
xchg
pushf
xchg
adc
into
push
pushf
push
sbb
pop
out
(bad)
lock
push
and
lods
jg
xchg
rol
out
pop
mul
nop
pop
mov
mov
sbb
or
mov
(bad)
inc
xor
fld
xor
pop
repnz
bound
jmp
sahf
add
cld
lahf
bound
add
jmp
xchg
xchg
jb
xor
aam
push
loope
sbb
mov
jo
pushf
inc
popf
out
aad
sbb
cmp
add
cmp
sbb
cmp
in
mov
in
mov
lahf
adc
ds
pop
loopne
pop
pop
mov
rcl
mov
pushf
xor
dec
sbb
cld
shl
cmp
mov
lods
in
out
or
mov
push
test
(bad)
mov
lea
mov
xchg
push
pop
pop
out
push
sbb
sub
ja
adc
leave
enter
sbb
movs
sub
jns
pushf
fisubr
fcmovu
in
ficom
loop
push
xchg
aas
fld
mov
mov
sahf
dec
xchg
push
mov
dec
in
or
adc
ds
(bad)
mov
add
hlt
fidiv
mov
loopne
adc
xchg
ins
icebp
xlat
dec
mov
sub
sbb
fcom
arpl
cmp
pushf
not
cmc
cmp
iret
pop
sub
ret
pushf
push
enter
pop
pop
pop
pop
jae
popf
sub
jae
sar
push
shr
(bad)
fild
lahf
fldenv
ja
xchg
fcmovnb
mov
pop
pop
sbb
lahf
xchg
xor
fs
jge
cmp
pop
rcr
mov
cmp
pop
loope
sbb
pop
adc
add
jl
cmp
cmp
push
or
push
ja
add
inc
cmp
xor
pop
popa
xor
aas
shl
sbb
hlt
add
cmp
ret
pushf
ins
not
mov
pushf
(bad)
or
mov
xchg
bound
push
push
jb
leave
lahf
lods
pushf
jle
mov
js
stc
dec
pushf
fisubr
cmp
pushf
mov
arpl
xchg
add
jae
add
and
sbb
iret
pop
outs
sbb
pop
dec
mov
adc
fiadd
adc
xor
mov
sub
push
xor
mov
and
xor
ds
cwde
nop
add
cdq
sub
xor
fwait
pop
adc
xchg
xor
jae
bound
pushf
test
push
pop
daa
sbb
adc
sbb
jg
mov
push
call
bound
mov
pushf
sbb
inc
adc
lea
out
sbb
mov
sbb
add
xchg
fisub
push
mov
xchg
push
jns
or
loopne
nop
push
pushf
clc
lahf
adc
aas
pushf
(bad)
sub
pop
bound
pop
outs
dec
fistp
xor
adc
cdq
xchg
adc
and
push
call
dec
xor
sar
mov
or
mov
sub
pop
jae
fist
sbb
mov
jmp
aam
cld
bound
fucom
mov
add
mov
or
sbb
push
shl
mov
mov
sub
pop
test
adc
adc
call
pushf
loope
mov
ja
cwde
cmp
hlt
mov
int3
or
mov
bound
lahf
cwde
call
sbb
sbb
std
cmps
push
inc
sbb
inc
call
adc
jae
cdq
or
or
rcr
or
cmp
daa
fild
cmps
adc
pop
cmovge
popf
pop
sub
pop
bound
fwait
mov
add
pushf
mov
sbb
fistp
fist
fstp
or
out
push
mov
dec
ret
enter
inc
push
clc
lahf
xchg
in
mov
mov
xchg
hlt
sbb
mov
in
adc
adc
frstor
sub
adc
cmp
pushf
data16
xchg
stos
lahf
push
sbb
sbb
xchg
call
adc
add
sbb
movsx
mov
cmp
cdq
mov
fwait
xor
(bad)
pushf
sub
pushf
xchg
xchg
ds
sbb
js
xor
call
push
rcl
mov
int
pushf
mov
xchg
cmp
dec
fdiv
adc
pop
add
pop
hlt
into
and
popf
cwde
bound
pushf
or
add
pushf
cmp
aaa
mov
and
sub
sub
sbb
cmp
adc
cwde
sub
pushf
ss
jne
inc
das
mov
mov
xor
sbb
out
adc
sub
out
pop
ficomp
mov
sahf
fxch
es
pushf
not
sub
loopne
sbb
mov
inc
xlat
cmp
dec
mov
pushf
cmp
sbb
lea
sbb
mov
(bad)
rcr
(bad)
lods
mov
xchg
cs
in
pushf
xor
mov
imul
in
pop
ds
pop
dec
pushf
out
xchg
mov
inc
(bad)
mov
outs
cmp
outs
ret
sbb
sbb
test
aam
inc
mov
add
sbb
adc
push
adc
scas
shr
cmp
inc
pop
cmp
push
in
ftst
(bad)
fimul
dec
jecxz
pushf
retf
xchg
dec
sbb
scas
sbb
mov
xchg
out
sbb
stos
fild
xchg
xchg
jmp
sbb
jle
imul
cmp
dec
ja
xchg
fldcw
add
sub
(bad)
sar
rcl
out
pop
cmp
push
pop
cmp
push
rcl
push
jae
fsub
rcr
ja
adc
push
stc
sbb
retf
in
add
pushf
jg
cmp
adc
inc
adc
jl
mov
cmp
pushf
push
(bad)
mov
pop
or
idiv
add
cmp
adc
xchg
jb
add
sbb
ror
ror
and
iret
fimul
stos
shr
in
sub
lahf
adc
or
mov
fisttp
pushf
xchg
xor
dec
ror
xchg
rol
fidivr
jns
pushf
jge
pushf
cmps
int3
fwait
(bad)
mov
fwait
and
cmp
(bad)
in
pushf
inc
pop
or
dec
sbb
xchg
cdq
fimul
mov
push
adc
stos
xchg
(bad)
cld
js
xor
adc
dec
aas
fwait
cmp
outs
sub
inc
sahf
mov
ds
cmp
dec
sar
fild
adc
aad
xchg
leave
addr16
sar
in
mov
push
push
mov
ja
mov
pop
inc
cdq
stc
mov
mov
stc
cmps
push
pop
xchg
aaa
mov
cmp
mov
pushf
pop
sbb
or
aam
dec
sbb
sub
mov
cmp
movs
mov
ret
popf
dec
sub
pop
fabs
sub
xchg
pop
loopne
push
add
pushf
xchg
pushf
and
mov
in
pushf
mov
dec
cdq
div
sahf
idiv
inc
lahf
cmp
adc
xchg
es
call
pushf
add
pop
rcl
pop
aaa
mov
(bad)
xor
dec
xchg
daa
(bad)
adc
pop
xchg
sub
ret
fild
sub
mov
cmp
popf
xchg
cmp
loopne
aad
pop
repnz
loop
xchg
pushf
inc
xchg
cdq
ret
push
inc
(bad)
lahf
call
sbb
dec
pop
cmp
xchg
repz
cmp
stos
int3
addr16
daa
js
ds
pushf
xor
or
xchg
pop
xchg
adc
pushf
pushf
std
into
mov
cmp
xlat
push
lahf
mov
sbb
or
adc
adc
cld
push
bound
(bad)
xchg
xor
sbb
mov
dec
ss
xor
xchg
rcl
add
xchg
xchg
adc
js
mov
nop
xchg
pop
xor
adc
mov
cmp
mov
cmp
addr16
adc
sbb
cli
mov
push
cmp
push
mov
enter
sub
imul
inc
or
ss
mov
(bad)
pushf
xor
mov
push
add
test
push
pop
push
pushf
outs
pushf
mov
mov
sbb
jl
pushf
mov
pushf
lea
cmp
adc
out
in
loope
pop
mov
jb
xchg
pop
add
int3
pushf
xor
nop
popf
pop
int
mov
cmp
(bad)
lods
pushf
fimul
jae
cmp
sbb
xor
pop
adc
mov
pushf
cmp
pushf
xor
pop
mov
jmp
push
arpl
(bad)
lea
pop
push
dec
outs
mov
outs
mov
mov
mov
shl
ret
push
fidiv
in
stc
push
bound
mov
push
(bad)
dec
push
mov
xchg
adc
cmp
gs
xchg
outs
and
cwde
cdq
mov
pop
pop
rcr
cmp
mov
cmp
adc
mov
jg
repz
sbb
push
dec
pop
mul
sbb
cdq
pushf
pushf
cwde
ss
enter
adc
adc
repz
pushf
dec
cld
dec
mov
neg
cmp
mov
push
adc
pushf
(bad)
out
pop
(bad)
rcl
mov
ss
aad
jnp
cdq
fild
lea
lahf
popf
or
mov
jmp
pushf
fsubr
lods
mov
sub
inc
push
jmp
adc
mov
fidiv
pushf
add
adc
sbb
std
jnp
mov
mov
mov
add
dec
adc
xor
jne
adc
int3
pushf
je
inc
mov
daa
pop
sbb
inc
jl
adc
cmp
loopne
fsub
js
push
in
pushf
ficomp
das
sub
adc
sub
enter
out
adc
ret
sbb
in
push
pushf
jmp
retf
dec
out
xchg
mov
inc
push
neg
sbb
fidivr
sbb
nop
(bad)
std
stos
shr
enter
mov
std
addr16
dec
push
out
nop
test
sub
aam
mov
mov
ja
stos
xchg
mov
mov
mov
pop
xchg
daa
mov
cdq
clc
mov
ds
movs
xor
inc
push
retf
jns
addr16
xchg
je
mov
lock
cmp
pushf
aas
fwait
repnz
call
(bad)
sbb
sbb
(bad)
shl
adc
js
jnp
pushf
add
push
cmp
pushf
in
ja
sbb
adc
lahf
xchg
loope
ficomp
sahf
pop
dec
out
mov
shr
sbb
jae
(bad)
out
mov
sbb
lahf
pop
inc
shr
ja
(bad)
fstp
or
push
inc
pop
aaa
or
jl
pushf
mov
loopne
push
repnz
pushf
mov
add
pushf
addr16
adc
jg
dec
(bad)
pop
xlat
arpl
cmps
xchg
ret
aam
xchg
sbb
frstor
mov
into
push
push
push
mov
fsub
ja
xchg
pop
dec
sar
dec
pop
cmp
mov
push
xor
sbb
inc
cld
pushf
adc
bound
adc
aad
mov
adc
sub
aad
sub
es
aam
mov
sbb
mov
pushf
cmc
mov
cmp
mov
xor
sbb
out
pop
in
pushf
ror
aam
lods
les
mov
imul
cwde
sub
adc
ins
sub
pushf
mov
adc
pushf
(bad)
mov
pushf
ss
(bad)
shl
push
push
movs
pushf
mov
mov
cld
or
js
inc
adc
inc
xchg
mov
dec
adc
(bad)
xchg
call
call
cmp
mov
mov
ja
cdq
xchg
adc
nop
test
xchg
xor
xchg
adc
or
mov
sub
jne
sbb
xlat
push
cmp
fild
pushf
mov
fiadd
and
sbb
mov
cld
push
aad
ficomp
fdivp
inc
xchg
daa
mov
lahf
popf
loope
adc
cmps
test
pop
sbb
add
sbb
(bad)
int
pop
shr
or
mov
mov
test
test
fimul
mov
or
xchg
popa
inc
pop
xor
shr
jge
bound
xor
cvttps2pi
inc
xchg
push
sbb
inc
mov
aaa
sbb
mov
neg
inc
fbstp
xor
popa
ss
mov
cmp
mov
xchg
pop
adc
mov
push
mov
pop
call
adc
fisubr
xchg
push
addr16
xchg
fbld
inc
lods
pushf
jg
adc
or
push
push
adc
xor
pop
mov
jg
cmp
in
dec
pop
add
ja
mov
(bad)
fld
sahf
mov
mov
neg
dec
popf
cmp
(bad)
rol
dec
sbb
push
aad
adc
or
stos
xchg
cld
xchg
push
push
rcr
sub
daa
dec
fistp
mov
mov
out
pop
xor
cld
add
pop
xor
aaa
iret
xchg
jp
add
add
ss
(bad)
ss
pop
pop
pop
popa
ss
sub
aas
rcl
mov
mov
add
jg
adc
in
outs
pushf
xchg
pop
inc
inc
cld
pushf
xor
aam
push
cmp
mov
jbe
aad
mov
(bad)
lea
rol
inc
push
pop
dec
(bad)
mov
add
push
xchg
add
out
pushf
aaa
pop
xchg
pop
xor
xchg
add
cld
xchg
(bad)
fist
pop
xchg
and
pushf
int
pushf
icebp
cld
mov
call
loop
xor
pop
(bad)
and
jne
dec
xor
loop
inc
cld
adc
mov
ret
push
mov
add
push
xchg
mov
stos
adc
or
mov
pop
push
pop
ror
(bad)
out
inc
cdq
sbb
cmps
mov
add
popf
pop
loopne
ret
jmp
xchg
fild
aas
push
xchg
shl
pop
sub
loopne
rol
xchg
lahf
cmp
(bad)
pop
mov
push
fist
loop
ficomp
data16
lds
dec
xchg
popf
frstor
push
loope
push
cmps
mov
dec
cwde
cmp
or
aas
pop
xchg
popf
loope
sbb
sub
sbb
mov
cmp
lods
pushf
cwde
fsubp
inc
pop
xor
pop
hlt
fild
sahf
pop
jg
lea
adc
ficomp
sbb
fild
bound
xchg
push
sub
pop
add
pop
cmp
dec
xchg
mov
fimul
sahf
adc
and
pushf
xchg
fsubr
dec
sbb
loop
xchg
outs
sub
pop
xchg
bound
cdq
xchg
pop
popa
xor
gs
aam
fist
pop
adc
push
adc
cmps
mov
mov
cmp
or
xchg
adc
sbb
pop
bound
push
hlt
lahf
mov
aas
fsubp
cmp
push
(bad)
dec
push
jge
bound
push
lea
addr16
push
xor
shl
cmp
(bad)
fstp
pop
arpl
jg
push
pushf
or
xor
mov
sbb
stos
add
ret
push
mov
sbb
sbb
(bad)
inc
sbb
rcr
push
inc
shr
sbb
fimul
lods
test
cmp
xchg
mov
sbb
pop
(bad)
push
sbb
hlt
xchg
sbb
or
stos
push
mov
xor
xchg
adc
sbb
or
inc
lahf
xlat
inc
mov
jp
(bad)
mov
pop
sbb
popf
fiadd
sub
xchg
push
adc
daa
mov
inc
ror
or
inc
cld
ins
loopne
out
push
add
adc
cmps
xchg
(bad)
push
(bad)
fimul
cmp
pop
shl
sbb
nop
cmp
ja
adc
adc
lahf
xchg
lock
ret
fiadd
lods
sbb
xchg
xor
fcomi
mov
ja
lea
(bad)
push
mov
sub
mov
addr16
(bad)
pop
inc
pop
pushf
sbb
sbb
sbb
mov
xor
in
addr16
int
jmp
popf
pop
out
outs
mov
push
sub
dec
pushf
mov
aad
jg
(bad)
adc
sbb
adc
xchg
lahf
adc
mov
cld
call
add
addr16
mov
mov
dec
popf
mov
cmp
dec
shl
lea
imul
fsubp
cmps
pop
and
int
pushf
(bad)
shl
pop
pop
dec
fidiv
inc
mov
pop
fcmovnbe
mov
outs
pushf
adc
lahf
lock
sbb
adc
(bad)
xchg
loopne
shl
push
aam
retf
dec
push
pushf
leave
sub
aam
xor
cwde
pop
loopne
xchg
sahf
xlat
arpl
aam
dec
pop
mov
add
pushf
pushf
mov
pop
sbb
ja
inc
push
pop
sbb
jno
mov
adc
ds
(bad)
mov
outs
mov
(bad)
and
fiadd
mov
test
(bad)
nop
pop
adc
arpl
push
cmp
add
neg
xchg
mov
sar
loope
fnstenv
aad
hlt
sbb
xchg
mov
xchg
cmp
aaa
xchg
add
pop
aas
xchg
add
inc
ror
dec
xor
push
push
arpl
sub
pushf
outs
ja
xchg
sbb
xor
sbb
repnz
cmp
cwde
xchg
repnz
ja
lock
xchg
fimul
pop
add
xchg
pop
sub
inc
adc
or
lods
pushf
dec
mov
call
out
and
call
(bad)
fbstp
addr16
pop
mov
push
inc
fisttp
pop
mov
sub
imul
cmp
dec
pop
aaa
sbb
mov
ss
sbb
clc
aaa
mov
mov
sub
adc
xchg
adc
push
mov
and
cmp
pushf
inc
pop
cld
fiadd
sbb
int
jmp
adc
push
and
int3
mov
or
sub
fiadd
pushf
push
adc
mov
or
test
retf
cmp
xor
dec
pop
or
sbb
(bad)
xchg
pop
lahf
add
cmp
scas
fwait
and
adc
cwde
adc
fdiv
or
mov
adc
jp
mov
sbb
js
mov
loop
rcl
pop
push
sbb
sbb
jecxz
lahf
sbb
rol
lahf
lahf
bound
pushf
cmps
sbb
pop
stc
adc
fldenv
addr16
xchg
adc
dec
push
test
stos
call
loopne
mov
fwait
adc
cmps
xchg
inc
push
out
aad
sbb
mov
pop
(bad)
fld
test
neg
cdq
sub
lahf
nop
bound
xchg
sbb
xlat
mov
sub
cld
(bad)
push
or
adc
pushf
lock
sub
inc
inc
in
pushf
dec
adc
cld
loopne
push
fcomi
scas
ficomp
ins
dec
cmp
xchg
aam
stc
adc
sbb
cmp
xor
ins
repnz
adc
mov
outs
jb
or
xchg
fwait
arpl
mov
xor
adc
xchg
inc
xchg
sbb
pop
pop
mov
mov
push
mov
mov
pop
sub
sbb
cmps
push
call
xchg
arpl
adc
adc
lea
or
mov
fsub
dec
push
cmp
dec
pushf
ins
inc
fidiv
adc
sahf
ja
test
or
pushf
pop
ds
(bad)
lahf
sub
pop
gs
mov
pop
rol
fidiv
mov
sbb
sbb
mov
adc
dec
ds
out
sbb
mov
dec
mov
retf
fcomp
loopne
or
cdq
mov
ss
sbb
(bad)
lahf
cld
ja
mov
es
pop
inc
aam
xlat
mov
sahf
pushf
add
jo
sbb
pop
cmp
sbb
sahf
inc
test
mov
adc
lds
sahf
pop
ret
cdq
sbb
sub
cmc
js
mov
pushf
popa
cmp
cwde
xchg
add
pushf
sub
mov
ja
mov
adc
(bad)
out
xchg
or
fucomip
xlat
sbb
test
mov
pop
cmp
ret
mov
out
rol
dec
adc
add
fstp
pop
dec
pop
push
jg
pop
jmp
aaa
mov
test
fidiv
(bad)
shl
clc
mov
inc
sbb
inc
xchg
xor
sub
aas
push
popa
ss
lahf
ret
shl
pushf
fisubr
jno
xor
leave
push
mov
dec
push
pop
pop
ja
mov
nop
mov
xchg
dec
(bad)
xchg
fmul
xchg
cwde
xchg
push
push
repnz
sub
stos
shl
xchg
push
pop
arpl
cmps
pushf
ret
(bad)
push
cmp
or
ins
sub
bound
gs
pop
pop
dec
pop
dec
push
jmp
sbb
adc
xchg
xchg
(bad)
dec
cmp
shl
sbb
lea
fmul
fwait
xor
ja
loope
sahf
cmp
popf
aas
push
popa
ss
dec
adc
dec
call
mov
pushf
sar
push
lock
pop
aam
ja
add
aad
fisub
or
push
arpl
addr16
inc
push
xchg
not
mov
into
shl
in
mov
adc
adc
fisub
pop
int
pushf
and
pushf
in
mov
cmps
xchg
adc
sub
clc
mov
call
mov
scas
inc
pop
sbb
mov
xchg
arpl
enter
mov
imul
cwde
test
sbb
adc
xchg
les
sbb
mov
loop
shl
aam
(bad)
cmps
pop
push
push
out
push
push
sbb
mov
xor
sbb
and
jge
pushf
arpl
xchg
xchg
xchg
or
mov
push
lea
or
test
add
into
push
clc
inc
aad
mov
and
mov
cmp
cmp
pop
mov
xchg
mov
mov
add
aaa
add
(bad)
fistp
test
xchg
arpl
ss
lahf
cmp
sbb
sbb
and
adc
or
mov
add
mov
std
or
enter
ror
adc
push
aad
push
mov
adc
pop
inc
cmps
mov
mov
ret
mov
xchg
adc
cwde
test
inc
cdq
test
mov
mov
and
xor
xor
sub
ins
sub
pop
push
rol
fcomp
inc
fwait
in
xchg
in
mov
push
cmp
sbb
ror
pushf
pushf
movs
cwde
mov
stos
add
daa
sbb
xchg
mov
mov
push
adc
jnp
ficom
nop
mov
cmc
gs
xchg
jmp
adc
push
or
cmp
xchg
xor
pop
lahf
sbb
xchg
fld
es
push
mov
in
dec
nop
inc
push
push
adc
test
mov
daa
lea
ja
nop
xchg
mov
sbb
pushf
jle
dec
mov
xor
sub
sbb
loope
adc
into
es
pushf
mov
es
loope
push
call
pushf
ja
bound
ss
xchg
xchg
jb
dec
mov
xchg
sub
(bad)
fyl2xp1
addr16
xchg
sahf
or
pushf
add
pusha
cld
cmp
sub
(bad)
xchg
cmp
call
pop
(bad)
hlt
fld
sbb
xchg
cmp
sub
shl
fbstp
push
mov
bound
or
pop
xor
jge
bound
pop
popf
push
xor
xchg
mov
aas
pop
popa
cmp
lea
cdq
retf
cmp
jo
popa
sub
dec
sahf
mov
nop
dec
mov
inc
push
mov
inc
fsubr
xor
adc
mov
or
call
push
in
sahf
sbb
jae
fdiv
rcl
inc
pop
test
outs
mov
adc
out
push
hlt
(bad)
push
inc
pop
and
(bad)
imul
call
pop
dec
or
push
mov
addr16
push
xlat
clc
stos
sahf
pushf
cmp
ret
pushf
aad
movs
fdivr
sbb
xlat
ss
gs
cmp
sub
sub
add
fist
test
popf
and
cmp
iret
sbb
mov
fstp
hlt
mov
xchg
aad
fstp
add
pop
push
loope
sbb
pop
cdq
push
mov
fcomi
addr16
lea
in
adc
push
cmp
push
out
push
or
dec
mov
aaa
adc
dec
xchg
test
pop
mov
add
call
imul
mov
fmul
addr16
push
sbb
ret
pop
or
mov
loop
aam
fisubr
xchg
sti
jmp
jae
sbb
ja
in
imul
(bad)
(bad)
cdq
cld
imul
xchg
pop
(bad)
xchg
sbb
adc
sbb
mov
cmp
dec
pop
out
fdivrp
out
xchg
push
std
sbb
scas
sahf
pushf
std
in
imul
sbb
pop
bound
xor
xor
jne
ret
inc
adc
(bad)
xchg
bound
ds
mov
inc
xchg
jne
jmp
popa
dec
sbb
loope
xchg
lahf
xchg
bound
sbb
pop
mov
imul
push
ss
sbb
pop
aaa
lahf
pop
loope
aad
or
aas
push
mov
pushf
add
adc
loop
(bad)
stc
cwde
push
xchg
push
jne
pushf
jg
out
sbb
call
add
fld
dec
rcr
arpl
xor
cmp
popf
fidiv
sub
add
outs
mov
jg
xchg
pop
addr16
lods
pushf
xor
cmps
(bad)
and
or
push
adc
test
xchg
sahf
(bad)
xchg
sub
aam
sbb
pushf
loope
sbb
std
ja
adc
xchg
cmp
add
ja
ret
push
mov
mov
mov
pop
cmp
add
adc
gs
(bad)
and
stos
add
test
pushf
add
pop
mov
aaa
mov
iret
sbb
bound
sahf
push
and
inc
pop
jne
jmp
shl
fistp
call
out
xchg
xchg
mov
rcl
push
mov
loop
rcr
loop
xchg
fld
mov
scas
daa
pushf
lea
shl
pushf
arpl
jne
mov
add
aaa
dec
push
daa
mov
xchg
xchg
(bad)
loop
xor
rcr
pushf
outs
dec
adc
push
add
cmp
pop
push
add
pop
aad
mov
call
cmp
sahf
cld
pushf
mov
sbb
int3
push
pushf
xor
arpl
cld
pushf
push
stos
les
xor
pop
jmp
mov
mov
mov
aaa
inc
shl
adc
sbb
pop
sahf
pop
pop
nop
mov
test
sbb
nop
nop
adc
xchg
pop
add
sbb
xchg
icebp
scas
cwde
inc
sub
cmp
push
add
pop
xor
xchg
xchg
aad
outs
pushf
sbb
loope
pop
mov
(bad)
push
dec
shl
mov
sbb
pop
sbb
mov
outs
in
dec
ds
xchg
xchg
add
adc
push
xor
popa
jb
dec
mov
lahf
cmp
xchg
(bad)
repnz
ds
xchg
xchg
ins
cmp
mov
add
mov
xchg
push
inc
jge
repz
(bad)
addr16
rcr
inc
adc
xor
iret
adc
bound
sbb
cs
or
(bad)
cld
aad
popf
(bad)
add
xchg
pop
fdiv
dec
mov
adc
pushf
mov
inc
sbb
sub
pop
cmp
push
sub
push
mov
xchg
adc
fild
ds
mov
ret
adc
push
and
lods
cmp
dec
popf
mul
adc
xchg
out
xchg
pusha
inc
jl
lahf
fisub
rcr
cmp
mov
xchg
pop
xor
aaa
pop
lock
bound
adc
add
push
cmps
mov
sbb
xor
stc
fwait
bound
push
xchg
push
dec
mov
adc
sbb
adc
in
out
xchg
cmp
push
int3
sbb
inc
adc
jae
mov
call
daa
(bad)
fdivr
js
ss
int3
int3
aad
mov
sub
pop
xchg
cmp
mov
add
rcl
fwait
jno
sub
push
out
ficomp
sahf
sub
xlat
push
adc
pop
inc
mov
and
push
jbe
xlat
dec
int3
outs
or
push
or
cld
sbb
int
mov
rcl
out
ss
in
ss
and
(bad)
push
ret
cmp
retf
aas
pop
jae
add
inc
xchg
pop
pop
mov
sar
mov
xchg
sbb
fsubr
adc
call
repnz
sub
cmp
loope
push
popa
mov
jge
add
mov
stos
push
mov
mov
pop
mov
sbb
dec
pop
push
shl
inc
call
mov
int
mov
(bad)
(bad)
mov
jg
xchg
pop
sub
fiadd
int3
pushf
sub
cs
loop
pushf
fiadd
cmp
shl
fild
mov
call
icebp
mov
add
test
ja
mov
pushf
out
push
push
(bad)
jle
mov
adc
cmp
dec
mov
mov
adc
fucom
mov
jo
loopne
sbb
sbb
inc
pop
mov
daa
(bad)
sbb
sbb
test
mov
sahf
sbb
sbb
fisub
pop
cmp
xchg
xchg
xchg
pushf
sbb
jl
mov
mov
js
add
xor
xchg
aam
aaa
sahf
jae
add
push
mov
adc
mov
cmp
test
xchg
ja
mov
in
or
mov
out
push
mov
ret
fsubr
mov
xor
loope
stos
sbb
mov
mov
pop
xlat
idiv
cmp
mov
cwde
inc
pop
out
fucom
inc
push
cmp
adc
sahf
cmp
add
pop
dec
adc
scas
fadd
cmc
js
jbe
pushf
aad
mov
push
or
popf
gs
pop
adc
adc
adc
retf
ror
mov
fadd
xchg
hlt
cld
neg
push
aam
add
sbb
iret
adc
lods
sbb
cld
mov
fimul
hlt
mov
inc
aam
mov
adc
cmp
mov
aas
lahf
add
fwait
loop
push
adc
aaa
pushf
neg
mov
xchg
aaa
lahf
pop
add
cdq
xchg
cmp
fucom
mov
mov
pushf
dec
cmp
ja
or
push
cdq
fwait
mov
pop
aad
fnsave
sbb
sahf
push
xchg
fild
pop
aad
mov
ret
pushf
push
enter
mov
xchg
xchg
inc
pop
mov
mov
pop
neg
push
adc
mov
daa
fild
pop
test
pushf
pushf
jno
les
fstp
lds
int3
pushf
push
fwait
mov
sub
inc
push
in
aam
pop
out
sar
iret
pop
mov
pop
dec
enter
ror
inc
pop
sub
add
mov
test
sub
push
xchg
cdq
mov
xchg
sub
fwait
stc
xchg
pop
loopne
pop
cmp
xlat
inc
pop
dec
cdq
sbb
bound
mov
pop
sub
retf
push
cmp
iret
xchg
xchg
sbb
lahf
xchg
lock
int
cmps
adc
ror
cmps
xlat
sbb
(bad)
mov
pop
xchg
pop
sbb
mov
(bad)
sbb
lahf
pop
in
or
leave
mov
ja
icebp
or
out
mov
js
add
pushf
add
mov
pop
adc
pushf
cmc
adc
fwait
mov
ja
lahf
sbb
popf
and
rol
xchg
xchg
add
pop
mov
jmp
mov
out
push
inc
xchg
test
stos
push
cdq
not
lea
push
adc
call
stc
xchg
pop
stc
out
mov
push
popf
out
xlat
mov
xor
dec
call
adc
mov
inc
sar
loope
fsubr
adc
aas
lahf
adc
sbb
mov
adc
inc
xlat
sub
xchg
cmp
fdiv
(bad)
sbb
lea
not
pop
pushf
sub
pop
sub
push
fld
ret
cdq
cmp
ss
aas
fnsave
bound
ror
jp
add
pushf
add
ret
sahf
jnp
push
and
push
push
mov
xchg
mov
sbb
ss
pushf
cmp
cwde
fsub
ds
in
mov
pushf
mov
cs
dec
push
test
pushf
ror
dec
cmp
sub
popf
push
sub
xor
and
push
push
ror
or
add
push
inc
pop
sub
xchg
jae
bound
xchg
fwait
cmp
xor
rcl
fisubr
ja
xor
cdq
xor
mov
inc
pop
xchg
(bad)
adc
(bad)
push
sub
icebp
ja
cmps
adc
xlat
push
sbb
or
das
mov
pop
inc
int3
pop
mov
stc
pop
inc
shr
inc
fnstcw
popf
(bad)
and
xchg
fcom
fucom
xor
sbb
call
adc
sbb
sbb
add
sub
fst
ins
inc
xchg
ds
cld
sbb
cld
pushf
in
adc
xchg
push
icebp
xchg
pop
fdiv
mov
adc
ins
idiv
push
fld
xor
loop
pushf
mov
xor
cwde
mov
ss
xor
sub
jge
adc
sbb
ja
jmp
out
dec
xchg
mov
adc
pushf
inc
sbb
shl
adc
xchg
pop
loope
shr
ss
std
sbb
shr
xchg
js
ja
push
cmp
mov
pushf
in
les
stos
or
shl
mov
lahf
push
inc
adc
mov
inc
mov
popf
push
bound
sub
loopne
xchg
aam
pop
pushf
jecxz
cmp
cs
pushf
js
je
pushf
fidivr
ficomp
lahf
xlat
add
pop
jno
sbb
inc
cmp
ss
mov
mov
adc
ret
fisttp
ds
call
xor
fistp
push
mov
pop
add
cmp
inc
xchg
mov
ficom
mov
neg
ret
mov
es
inc
push
adc
mov
loope
ficomp
arpl
cmp
pushf
pop
sub
xchg
sbb
mov
push
sbb
ss
ja
add
lahf
arpl
shl
jb
add
dec
pop
dec
sahf
sbb
sub
cdq
ret
and
cdq
pushf
inc
fidivr
call
or
out
rcl
fwait
call
push
lea
arpl
lahf
cmp
push
stc
push
pop
int3
mov
adc
sbb
inc
pop
and
xchg
sahf
lea
inc
popf
out
push
sbb
or
xor
sbb
sahf
xchg
arpl
lahf
jne
add
fstp
mov
es
mov
arpl
xchg
ja
icebp
aad
mov
aad
xor
add
loope
xchg
push
sbb
jg
jnp
cdq
test
sbb
aad
pop
sub
ja
lahf
push
dec
push
sub
inc
sbb
addr16
pop
push
sahf
aaa
mov
out
pop
call
inc
adc
pushf
mov
jno
js
pushf
cwde
ins
or
cmp
cmps
ficomp
ja
xchg
adc
mov
addr16
xchg
cdq
fwait
mov
mov
adc
push
push
nop
cdq
push
mov
daa
ret
push
mov
aaa
mov
(bad)
lahf
lahf
xlat
retf
mov
(bad)
adc
mov
sbb
lea
push
cmp
xchg
sub
pop
xor
mov
rcr
xchg
and
push
push
pop
mov
pushf
sub
(bad)
sbb
cmp
mov
fld
mov
dec
push
dec
or
aas
fwait
lock
call
fs
ret
pushf
xor
or
cmps
adc
or
iret
push
lods
lods
ret
pushf
mov
sbb
cmp
popf
push
xchg
movs
bound
ss
pop
loopne
sbb
adc
xor
xchg
loope
xchg
inc
adc
adc
lahf
sbb
ror
pop
and
ror
fwait
cmp
add
pop
mov
loopne
push
gs
out
sub
lds
and
shr
scas
sub
or
pop
bound
int3
xchg
mov
pop
inc
adc
push
sub
inc
xchg
jmp
pushf
push
sahf
mov
add
lahf
fld
mov
pushf
xor
xchg
dec
(bad)
mov
stc
sbb
adc
adc
sbb
mov
sbb
cmp
adc
sub
(bad)
xchg
int3
sbb
icebp
lahf
sub
(bad)
adc
popa
mov
xlat
sbb
sbb
fistp
push
inc
cld
pop
jb
dec
jg
call
retf
ss
cmp
pop
loop
push
sbb
jnp
nop
pushf
lds
pop
sahf
pop
cmp
pushf
mov
cmp
fdiv
mov
pop
mov
add
and
pop
mov
repz
(bad)
pop
or
mov
arpl
mov
sbb
aam
sbb
pop
or
out
fsubp
pop
pop
adc
pushf
cwde
xor
fild
loop
fisub
pushf
into
sbb
push
adc
mov
in
pushf
pop
jb
mov
xchg
lahf
lock
jb
pop
adc
mov
xchg
cmp
mov
xchg
lahf
xor
xchg
push
outs
push
popf
aad
scas
pushf
add
into
mov
adc
mov
mov
add
jg
ret
cmp
pushf
dec
sbb
inc
sbb
mov
sbb
mov
or
mov
xor
mov
cmp
xchg
popa
stos
fstp
mov
nop
addr16
adc
mov
mov
add
xchg
cmp
aad
mov
or
daa
mov
sbb
lock
xor
push
xchg
mov
xchg
pop
adc
cmp
dec
cwde
ss
ja
xor
mov
xchg
aam
inc
cwde
in
push
mov
sahf
jb
icebp
adc
inc
push
dec
fidiv
sbb
xchg
loope
bound
dec
lahf
fstp
mov
push
fwait
div
dec
push
cmp
neg
xchg
popf
mov
pop
pop
mov
pop
popa
lods
pushf
out
les
bound
adc
push
(bad)
pop
dec
ds
and
rol
pop
ja
xor
add
xchg
ror
push
pushf
aam
retf
mov
ret
into
pushf
mov
add
pop
adc
mov
inc
push
in
inc
push
mov
push
adc
shl
js
xchg
dec
not
bound
bound
xchg
outs
sub
call
mov
pushf
sbb
lea
mov
pushf
mov
xor
sbb
xchg
xchg
mov
inc
xchg
ret
mov
aaa
xchg
(bad)
jnp
mov
cld
ret
pushf
(bad)
div
(bad)
push
inc
push
clc
(bad)
(bad)
or
add
inc
xchg
cmp
push
push
daa
dec
push
sbb
stos
pop
mov
lahf
mov
neg
mov
fbld
xchg
and
xchg
xchg
mov
sbb
xor
popf
inc
add
sub
push
sub
mov
xor
ja
xor
es
cmp
xchg
push
add
pushf
in
pop
sbb
jno
jmp
mov
add
dec
adc
xchg
(bad)
ret
fsubr
fstp
sbb
jne
cmp
nop
sbb
or
xchg
scas
or
inc
sbb
mov
rol
loopne
sbb
or
adc
or
adc
jo
add
jg
push
test
xlat
mov
cmp
pop
pop
aam
pop
in
mov
inc
shr
ror
adc
aam
xchg
neg
aad
xchg
rol
mov
test
lahf
pop
lea
mov
iret
fld
ret
pushf
ss
fsub
mov
sbb
fld
adc
fld
cmp
mov
xor
call
loopne
sbb
xchg
pushf
out
mov
cld
imul
push
mov
pop
xchg
test
sub
lahf
sbb
cmps
sbb
xchg
test
jge
stc
ja
add
xchg
rcl
je
pushf
pushf
fisubr
xchg
sbb
sahf
pop
loop
xlat
xchg
aad
and
push
push
ret
adc
xlat
push
arpl
ds
add
mov
mov
xchg
shl
adc
sub
and
mov
xchg
sbb
scas
pop
iret
je
fidivr
ficom
loopne
sbb
cdq
adc
xchg
inc
sbb
mov
pushf
xchg
xchg
inc
push
cmp
push
or
sahf
xor
sub
or
add
adc
inc
xchg
inc
cwde
xchg
loop
imul
pop
mov
aaa
ror
or
sbb
sbb
mov
cmp
inc
lods
pushf
jne
sub
jg
bound
mov
(bad)
nop
add
mov
adc
add
pop
pop
or
inc
fldcw
bound
test
aad
xlat
xchg
xor
lahf
nop
sbb
inc
adc
adc
mov
mov
popa
pop
pop
out
sub
fnsetpm(287
lods
xor
mov
xor
add
xchg
push
sub
mov
xchg
dec
aaa
aam
mov
jo
add
push
aaa
rol
xor
push
dec
(bad)
test
sub
sbb
rcr
ds
pop
cld
pushf
mov
xchg
call
push
push
sti
inc
or
or
fnstcw
xchg
test
xchg
f2xm1
ja
inc
sbb
mov
(bad)
xchg
push
call
or
mov
test
pop
mov
test
nop
xchg
xchg
(bad)
push
mov
ror
arpl
hlt
rol
sub
cmp
xchg
sar
shr
cwde
(bad)
xchg
mov
in
pushf
xchg
or
adc
(bad)
sar
pushf
sub
ss
add
pop
pushf
pop
enter
adc
pop
inc
xchg
cmp
loopne
pop
rcl
jae
xchg
mov
push
fist
adc
mov
mov
imul
jae
push
out
and
pushf
cmp
xchg
ficomp
pushf
adc
sbb
in
pushf
mov
sub
xor
pop
stc
sbb
int
jmp
xor
mov
cmp
mov
jne
inc
mov
push
push
sbb
mov
push
cwde
jns
xor
sbb
xor
js
retf
xor
sahf
push
mov
sbb
cld
pushf
xor
shl
cmps
adc
adc
(bad)
pop
mov
out
sar
inc
push
sbb
pop
sbb
stos
sbb
out
ja
inc
fnstsw
ja
sahf
push
cdq
scas
mov
lahf
cmp
in
pushf
cmp
pushf
das
icebp
sbb
cmp
xchg
push
push
or
popf
loop
fldcw
mov
pop
(bad)
frstor
aaa
fild
mov
adc
adc
mov
bound
push
aaa
stos
pop
leave
sbb
mov
mov
loopne
mov
fmul
sub
mov
dec
call
inc
adc
sbb
xlat
add
(bad)
icebp
mov
ds
mov
aas
pop
adc
bound
addr16
pop
(bad)
push
bound
sbb
adc
xor
or
js
mov
fwait
adc
inc
loope
pop
hlt
sbb
in
dec
xor
fist
(bad)
sbb
xchg
out
xchg
mov
xchg
mov
xchg
push
sub
push
sbb
dec
aad
jnp
pushf
sub
mov
xchg
push
mov
mov
shl
daa
mov
pop
mul
xchg
out
adc
lea
pop
sbb
mov
sbb
int3
std
mov
mov
fdivp
pop
mov
push
mov
adc
sbb
cmp
mov
cmp
jg
add
sub
xchg
xchg
icebp
mov
cld
out
sub
pushf
in
sub
cmp
adc
cmp
loopne
fstp
(bad)
cmp
sbb
popa
mov
pushf
ret
les
stos
adc
inc
xchg
out
push
inc
pop
sub
xchg
fimul
mov
dec
lahf
cmp
ret
call
lea
mov
pop
xchg
aaa
mov
cmp
mov
adc
mov
sub
inc
fadd
mov
test
fist
adc
sbb
pop
mov
push
sbb
clc
mov
aam
(bad)
out
push
fdiv
mov
sbb
mov
xchg
dec
mov
pushf
or
or
cmps
push
or
adc
pushf
adc
add
cmp
fistp
loope
pushf
(bad)
aad
sbb
test
adc
xchg
inc
lahf
fwait
pop
mov
xor
nop
sbb
pop
jae
mov
xchg
cmp
xchg
arpl
xchg
aam
(bad)
xchg
mov
pop
shl
(bad)
fnstenv
cdq
mov
push
bound
fld
xchg
addr16
pop
cmp
dec
sbb
inc
shl
ja
inc
pop
push
adc
cwde
inc
mov
adc
cdq
mov
mov
push
loop
shl
jb
out
mov
nop
fdiv
ins
rcl
pop
aas
nop
aad
mov
retf
sub
xchg
adc
retf
int3
loope
inc
call
mov
xchg
loopne
pop
lods
add
adc
mov
fiadd
call
xor
hlt
nop
mov
push
outs
cld
lahf
pushf
push
mov
cwde
cdq
lds
dec
xchg
out
cwde
pop
arpl
push
sub
cmp
push
xchg
pop
mov
pushf
int3
jp
sub
pop
xchg
fwait
dec
cmp
loope
pop
hlt
nop
pop
push
sub
sar
add
push
add
sbb
jo
loopne
cdq
int
cmp
mov
sbb
cwde
fwait
loopne
push
xchg
sbb
loope
mov
inc
sbb
mov
mov
pop
xor
outs
pushf
mov
sbb
cmp
ja
add
(bad)
push
push
xchg
sbb
mov
dec
pop
call
push
xchg
lahf
mov
mov
call
popf
jg
lea
or
and
mov
ss
aaa
push
add
cmp
(bad)
push
inc
pop
mov
mov
cdq
loop
rcr
sub
mov
xchg
pop
sub
aad
sub
xchg
pop
push
adc
rcl
pop
dec
xor
jp
out
cwde
inc
daa
into
mov
pushf
mov
(bad)
dec
pop
xor
adc
lods
mov
mov
loop
pop
iret
sbb
mov
stos
rol
sbb
sbb
fdiv
pushf
inc
push
scas
fisttp
mov
xchg
pop
mov
inc
xchg
call
dec
sbb
cmps
xchg
mov
stos
lahf
test
ja
sbb
sbb
ds
inc
sbb
pop
aas
fisub
aad
jb
pop
mov
and
mov
lahf
dec
mov
and
adc
mov
push
push
aad
xor
nop
dec
push
sub
push
sbb
stos
push
sub
mov
cmc
xchg
fld
adc
or
retf
mov
out
fucomip
mov
(bad)
add
stc
mov
adc
push
pop
xchg
cmp
sbb
ja
lahf
cwde
cs
lahf
and
aam
ss
test
pop
xlat
popf
sbb
sub
adc
gs
push
test
xchg
addr16
aam
push
pushf
(bad)
int3
mov
(bad)
cld
push
pushf
and
pop
bound
push
add
int
mov
rol
cwde
add
outs
mov
xchg
pop
jmp
test
xchg
add
pushf
dec
xchg
cmp
push
sub
xchg
xlat
pop
pop
jmp
fist
dec
mov
repnz
adc
jmp
cmps
push
sahf
add
mov
call
out
push
mov
mov
cs
push
adc
fwait
mov
mov
dec
xor
cmp
movs
mov
stos
pop
prefetcht0
int
sbb
fisttp
xor
pop
repnz
bound
push
cwde
xchg
add
mov
push
push
fwait
aaa
xchg
pop
or
mov
mov
adc
call
mov
xchg
daa
shl
sbb
pop
out
sahf
inc
push
mov
sbb
cmps
aad
adc
mul
dec
shr
fst
push
bound
cwde
jb
or
popf
ret
shl
rol
mov
inc
xchg
pop
push
or
dec
or
xor
xchg
cmp
rcr
sahf
xor
jecxz
stos
ret
cmp
sbb
push
adc
xchg
fwait
cld
(bad)
rol
or
mov
xlat
call
add
mov
inc
sub
lahf
fwait
or
imul
pop
and
fistp
lahf
cdq
xor
mov
ret
mov
lds
fild
mov
mov
xor
mov
test
sbb
mov
ror
pop
ror
mov
sbb
popf
jnp
adc
mov
or
neg
ret
sbb
fwait
xchg
fiadd
aaa
xchg
xchg
(bad)
ficomp
mov
sbb
mov
(bad)
add
and
aam
push
jmp
adc
mov
fistp
(bad)
pop
push
xchg
pop
sar
xchg
(bad)
sahf
lea
mov
jp
sub
arpl
push
cwde
out
inc
loopne
xor
push
inc
xchg
ficom
mov
pop
pop
ficomp
aad
inc
pop
aad
jb
arpl
xor
sbb
mov
jge
or
fsub
rcr
ret
pop
ret
loope
dec
rcl
ret
mov
inc
mov
ret
push
jae
ret
pushf
enter
clc
dec
xor
pop
xchg
xchg
mov
ret
pop
inc
xchg
or
(bad)
adc
jp
fisttp
imul
xchg
fcom
xchg
sbb
fist
mov
adc
sbb
mov
mov
mov
retf
aad
neg
push
xchg
mov
inc
adc
pusha
ret
mov
mov
xlat
push
push
daa
inc
rcr
xchg
xor
inc
push
sbb
or
fmul
mov
ret
lahf
retf
mov
mov
ret
push
mov
push
out
fmul
cwde
mov
cmp
pop
fabs
cmp
es
xor
sbb
mov
mov
mov
ret
jmp
fcomp
pop
cwde
ret
adc
cwde
xchg
mov
mov
aad
push
mov
mov
retf
or
pushf
add
sahf
pop
je
repnz
inc
ja
inc
call
call
stos
adc
pop
into
push
stos
pop
out
xlat
add
pop
or
aam
sbb
mov
outs
mov
call
add
js
int3
or
call
int3
adc
fist
mov
dec
pop
cmp
pop
jae
mov
les
mov
sub
ret
sar
sub
pop
out
sar
pushf
pop
adc
mov
div
je
imul
sbb
pop
aaa
sbb
mov
mov
inc
push
mov
sub
pop
test
xlat
dec
pop
test
fwait
xchg
adc
mov
retf
fbstp
inc
and
cmp
aad
fistp
dec
sbb
mov
aaa
xchg
fstp
arpl
dec
enter
xchg
xchg
add
mov
adc
dec
mov
mov
repnz
mov
add
pop
mov
aad
inc
fadd
mov
mov
push
aaa
cmps
push
int
cmps
(bad)
pop
(bad)
arpl
cmps
rol
popf
mov
sub
adc
adc
sbb
push
adc
mov
jbe
pushf
add
ret
(bad)
mov
lahf
fucomip
ja
scas
push
sub
pop
adc
or
mov
sbb
mov
mov
xor
mov
adc
mov
xchg
bound
sar
xor
aam
ins
mov
pop
and
jg
sbb
(bad)
mov
jmp
nop
xchg
sbb
sbb
ret
fdivr
or
mov
adc
sbb
mov
push
jne
mov
xchg
push
xchg
mov
sbb
mov
mov
mov
cwde
mov
xchg
ret
inc
mov
xor
xchg
push
es
sahf
dec
mov
sub
inc
sbb
pop
es
mov
jnp
repnz
mov
sbb
mov
test
adc
std
jnp
push
rol
(bad)
mov
int3
sbb
mov
clc
stos
push
cdq
fstp
aam
mov
xchg
mov
popa
ret
push
mov
inc
push
mov
mov
mov
mov
sbb
xchg
adc
sahf
ret
jbe
mov
fisubr
aas
xchg
xchg
mov
xlat
xchg
div
cmp
pop
push
sbb
push
rol
call
pop
inc
inc
mov
mov
jns
and
mov
adc
adc
adc
js
mov
js
cmp
mov
stos
xchg
mov
loopne
fcom
mov
cmps
push
test
xchg
cwde
das
push
inc
mov
dec
jmp
call
cwde
mov
inc
in
jne
leave
cwde
shr
pop
or
sbb
mov
mov
stos
faddp
pop
mov
fdiv
inc
jb
pop
mov
jmp
jno
add
inc
push
add
inc
(bad)
std
mov
mov
or
push
pop
cmps
fild
test
aaa
sbb
nop
mov
dec
fwait
shl
xchg
ret
pushf
add
dec
sbb
mov
xor
cwde
or
mov
adc
sub
adc
mov
mov
inc
mov
idiv
int3
xchg
inc
sar
sbb
sub
mov
neg
(bad)
hlt
out
dec
mov
xchg
ds
jecxz
inc
pop
xchg
cwde
mov
aaa
cmps
push
xchg
or
pop
push
push
outs
stos
pop
mov
cdq
sahf
inc
adc
jp
mov
pop
loope
fcom
xor
cwde
push
xchg
in
mov
mov
xor
cwde
xchg
push
mov
inc
pop
cmc
xchg
rcr
pop
add
and
jb
cwde
pop
movs
inc
inc
mov
outs
inc
popf
cmp
shl
ss
pop
xor
mov
jae
mov
daa
cmps
pop
into
sbb
mov
cdq
pop
mov
shl
xchg
xchg
pop
mov
fild
nop
mov
in
fistp
sbb
push
pop
sbb
sbb
pop
or
stos
push
cdq
pop
into
nop
or
cmp
lea
mov
dec
nop
xor
mov
mov
push
outs
mov
push
ret
push
dec
out
mov
aaa
xchg
pop
fild
adc
and
pop
pop
rol
rol
aam
mov
jp
hlt
mov
cmp
mov
xchg
sub
rcr
pop
(bad)
pop
ficom
repnz
add
cmp
dec
adc
mov
mov
call
mov
xchg
xchg
mov
cmp
pop
retf
jb
into
cwde
mov
call
retf
imul
adc
mov
mov
nop
loope
push
lds
cmp
lods
push
adc
cwde
loope
xchg
mov
mov
call
sbb
lahf
mov
jle
or
rcl
retf
push
add
mov
sub
int3
cmp
fsubrp
cmps
pop
mov
sbb
add
les
fadd
aas
in
les
pop
add
mov
lock
jbe
mov
add
popfw
pop
mov
fimul
cmp
pop
jmp
mov
mov
call
xor
shl
adc
dec
fxtract
ret
mov
(bad)
fadd
les
jo
and
inc
outs
mov
adc
test
push
sub
push
cdq
mov
jg
popf
xchg
js
mov
ret
mov
fistp
fabs
mov
mov
loopne
push
cmp
cwde
nop
adc
mov
pushf
ss
js
mov
cmp
xchg
bound
fadd
aam
push
mov
addr16
fdivr
loopne
dec
int3
pop
push
ret
sub
sbb
ss
test
js
jae
inc
ror
mov
fdivr
test
jne
fwait
adc
mov
push
fild
inc
cdq
clc
xchg
mov
xor
xor
ror
mov
pop
rol
movs
fistp
mov
push
mov
mov
mov
dec
xchg
aad
jb
jno
bound
adc
adc
dec
lock
mov
loopne
fidiv
ror
mov
pop
push
dec
fwait
inc
push
call
bound
sbb
xchg
sbb
push
js
mov
mov
adc
mov
stc
les
or
mov
xchg
push
or
fcomp
inc
push
dec
retf
cmp
cmp
pop
sub
mov
pop
xchg
js
mov
mov
pop
cmps
mov
sbb
inc
mov
bound
push
inc
rcr
push
and
in
pushf
or
ret
leave
mov
jne
inc
sub
call
xchg
pop
mov
cmps
inc
pushf
out
push
mov
sahf
pop
retf
push
inc
jb
out
mov
fisttp
sar
bound
cmp
cwde
push
popa
sub
dec
push
xchg
mov
adc
sbb
mov
aad
lods
jns
pop
mov
cwde
mov
inc
je
movs
call
ret
push
adc
mov
xor
xchg
xchg
xchg
clc
mov
pop
arpl
sar
stc
mov
call
fptan
pop
dec
mov
lahf
lahf
loop
dec
pop
pop
fistp
pop
adc
adc
imul
xchg
or
mov
add
cmp
rcl
add
mov
loope
rcr
outs
mov
inc
mov
cmp
cwde
xor
arpl
xchg
ficom
xor
(bad)
fcom
jb
js
mov
add
pop
retf
jo
rol
mov
mov
daa
ja
xchg
adc
pushf
test
pop
pop
push
ret
in
retf
leave
mov
into
pushf
sbb
dec
mov
lods
sub
aad
das
in
cwde
mov
mov
sbb
imul
cmps
adc
xchg
dec
fsubr
scas
adc
ret
call
push
mov
pop
popf
rol
mov
fwait
dec
pop
fcomp
call
mov
mov
data16
xchg
adc
rcr
sbb
div
sbb
xchg
xchg
mov
test
pop
jg
mov
retf
and
(bad)
stc
addr16
into
and
push
mov
mov
jb
arpl
push
ret
mov
imul
cmp
xchg
es
call
cwde
lods
mov
fwait
cmp
pushf
mov
xor
pop
dec
sbb
sbb
(bad)
call
fcomp
xlat
sar
call
xchg
rol
(bad)
call
aam
sahf
inc
out
mov
adc
aad
adc
mov
mov
jno
inc
jp
movs
fwait
stos
aad
fadd
cmps
aad
fiadd
ja
cmps
xchg
mov
stos
pop
sub
popf
rcl
adc
out
mov
mov
fadd
mov
in
(bad)
das
fstp
xor
fadd
icebp
push
dec
mov
mov
adc
jnp
mov
mov
fisubr
ret
push
mov
sbb
popf
cmp
adc
pop
xchg
xchg
dec
pop
inc
fisttp
adc
adc
jbe
mov
test
adc
cwde
or
mov
or
or
jnp
cdq
(bad)
ret
adc
stos
nop
mov
lahf
in
pushf
sbb
aad
xlat
push
je
xchg
adc
in
les
sub
adc
(bad)
hlt
mov
pop
mov
mov
ins
in
pop
retf
xchg
mov
cdq
xlat
inc
pushf
es
xchg
lahf
pop
pop
not
stc
push
mov
idiv
push
push
aad
dec
(bad)
cmp
push
pop
inc
ret
repz
xchg
sbb
push
call
movs
mov
inc
fadd
mov
arpl
and
retf
pop
mov
mov
mov
or
fwait
mov
adc
sbb
mov
push
scas
sbb
pop
cmps
pop
test
pop
adc
inc
xor
pop
adc
lock
sbb
cmps
mov
in
mov
xchg
sbb
mov
dec
xchg
cwde
sub
call
push
cmp
add
fild
xor
cwde
jbe
mov
lahf
inc
or
pop
scas
test
movs
mov
out
cli
scas
nop
cmp
fsubr
add
test
cld
cwde
cwde
mov
in
mov
xor
dec
pop
dec
fdivr
xor
imul
popf
xor
push
jb
pop
lahf
js
mov
hlt
call
cli
cwde
dec
mov
les
pushf
pop
pop
retf
pop
inc
fsubr
call
jmp
call
cmp
push
jbe
mov
jbe
loop
push
xor
mov
xchg
fcomp
inc
mov
pop
sub
xchg
mov
fstp
inc
jg
ss
pop
retf
ret
xchg
out
push
sbb
or
push
shl
push
cmps
pop
xchg
fmul
test
mov
fst
mov
cdq
inc
push
loope
pop
cmp
xchg
adc
push
pop
inc
push
mov
jb
xchg
cmps
mov
pop
sbb
rcl
pushf
stos
ret
mov
cwde
sub
xor
fist
push
xor
pushfw
push
pop
sbb
fimul
nop
pop
add
xchg
pop
rcr
xchg
scas
adc
mov
into
pop
or
mov
push
enter
adc
fcmovbe
in
xor
sbb
xor
ret
sbb
ret
mov
mov
inc
outs
mov
retf
add
mov
adc
xchg
mov
inc
sbb
mov
push
adc
push
xchg
sbb
mov
fwait
aaa
cmps
xchg
adc
inc
popf
test
mov
xor
jo
loop
shl
fadd
js
aad
mov
push
test
xor
fnstcw
inc
push
fwait
mov
mov
or
xchg
test
ret
push
aaa
sbb
dec
mov
inc
jl
call
fstp
fbstp
push
dec
inc
pop
cmp
lahf
aam
cwde
pop
xchg
pop
xchg
push
mov
pop
cmps
ret
or
mov
ror
pop
mov
sub
mov
aaa
mov
pushf
inc
out
fistp
and
dec
pop
or
mov
push
gs
mov
mov
rcl
mov
cmp
pop
sbb
push
push
sbb
pop
add
mov
ss
or
pop
pushf
fsub
hlt
mov
xchg
ret
je
hlt
(bad)
xlat
sub
mov
and
sub
inc
pop
jg
sar
inc
mov
mov
xchg
ret
push
mov
loop
rcr
imul
adc
adc
pop
push
mov
not
sbb
xchg
pushf
mov
sbb
add
ins
pop
pushf
sub
push
xchg
push
mov
add
icebp
mov
fmul
sbb
int3
mov
dec
push
icebp
ret
mov
popa
cwde
jne
inc
xchg
frstor
cdq
jg
fcom
aaa
push
mov
in
retf
dec
fcmovnu
cld
mov
inc
mov
push
pop
jb
jae
add
ret
mov
mov
sub
call
sbb
mov
test
xor
cmp
pop
mov
movs
cmp
sub
fsub
sub
out
push
dec
fnsave
ror
or
mov
out
rol
mov
mov
js
add
fist
pop
inc
aas
xchg
xchg
add
mov
sahf
pop
pop
sbb
jg
fadd
push
stos
nop
imul
mov
cdq
push
sbb
pushf
int
fsubp
and
nop
addr16
xchg
inc
mov
add
cmp
cmps
pop
rol
cmc
mov
scas
mov
dec
(bad)
dec
daa
pop
inc
test
clc
mov
retf
jmp
pop
fld
pop
push
mov
pop
adc
movaps
stos
(bad)
mov
mov
cwde
addr16
inc
pop
retf
in
in
mov
mov
fwait
add
sub
xchg
adc
mov
pop
pop
push
pop
rcr
sbb
ror
ret
add
call
aas
cwde
fiadd
xchg
pop
fisttp
sub
add
(bad)
ret
retf
fistp
jnp
xchg
retf
xchg
inc
mov
(bad)
cdq
test
mov
fnsave
pop
data16
mov
pop
retf
ret
mov
cdq
repnz
in
cwde
je
inc
sar
xchg
ret
dec
mov
xor
jge
inc
pop
xchg
push
push
add
sub
mov
out
cmps
ficomp
mov
jmp
call
into
jae
adc
sbb
xchg
repnz
push
cmps
pop
cdq
push
mov
fnstsw
add
dec
adc
mov
mov
pop
pop
fsubr
ret
mov
push
mov
icebp
pushf
xor
ficomp
rcl
daa
mov
cmp
daa
sbb
call
fs
dec
mov
cwde
repz
cld
mov
push
mov
test
lahf
inc
jge
inc
call
xchg
cwde
pop
add
lods
int3
adc
or
mov
xor
shl
mov
inc
pop
xor
sar
xchg
sbb
sbb
sbb
mov
mov
retf
mov
jmp
mov
mov
pop
cmp
push
mov
inc
mov
add
pop
pop
xlat
ret
gs
in
xchg
cld
mov
mov
lods
adc
adc
mov
dec
xor
es
rcl
xlat
cdq
inc
fild
jne
or
sbb
dec
or
dec
inc
push
in
pushf
repz
pop
ret
inc
mov
inc
push
mov
add
shl
pop
xchg
xchg
mov
xor
mov
push
lahf
arpl
bound
icebp
popf
adc
icebp
call
cwde
aas
in
xor
fwait
or
cwde
jl
inc
fnstcw
neg
call
xchg
xor
ret
add
inc
or
adc
mov
cmps
aam
xchg
or
dec
rol
adc
xchg
mov
inc
ja
rcr
mov
mov
xlat
aam
pop
mov
sbb
(bad)
loope
fwait
rol
fadd
pop
bound
popf
cwde
adc
xchg
jno
dec
mov
push
pop
ret
mov
enter
ja
rcr
push
adc
pop
cmps
xchg
lahf
push
rcr
mov
stos
fwait
mov
push
ja
lahf
push
into
xchg
sbb
arpl
cdq
lock
inc
mov
push
call
pop
cwde
leave
dec
inc
xlat
mov
movs
mov
mov
fist
jg
rcr
stos
lahf
push
xchg
mov
pop
mov
call
cmp
mov
and
mov
push
rcl
push
ret
mov
not
push
add
cmp
sbb
mov
xor
mov
xchg
jbe
mov
pop
cmp
xor
jg
mov
and
dec
push
pop
retf
push
mov
inc
mov
es
mov
mov
inc
push
mov
retf
cmp
outs
fadd
inc
jnp
mov
inc
shr
repz
mov
inc
xor
hlt
ret
dec
mov
enter
mov
fcomp
mov
inc
xchg
retf
xor
xor
fimul
fst
mov
inc
fsubr
stos
fimul
arpl
dec
in
enter
mov
emms
stos
push
cmp
add
js
mov
cli
les
loop
aaa
cwde
inc
in
pop
mov
cwde
cld
addr16
mov
pop
ret
push
fst
call
xchg
sbb
push
mov
pop
mov
pop
adc
xchg
push
dec
neg
(bad)
push
push
ret
lahf
mov
mov
rol
mov
into
mov
xchg
ror
fidiv
xchg
xor
mov
sar
mov
inc
pop
imul
ficomp
mov
xchg
xchg
cmps
sbb
stos
pop
cdq
xchg
sbb
scas
(bad)
xchg
xchg
pop
fst
xchg
mov
xor
push
xchg
dec
mov
pop
xchg
(bad)
neg
push
test
adc
fidivr
xchg
adc
fadd
popf
aad
and
xchg
pushf
push
in
pop
fld
jb
pop
mov
mov
push
rol
inc
xor
cmps
call
dec
fsubr
call
stos
push
test
out
aaa
in
adc
fdivrp
pop
bnd
jg
xchg
mov
sub
push
cmp
fdivr
setp
outs
push
mov
out
sbb
push
loopne
xchg
mov
inc
pop
cmps
sbb
fcomi
outs
mov
pop
sbb
cmps
(bad)
pop
push
mov
or
cli
ret
in
rcr
mov
jmp
aad
les
mov
in
push
mov
dec
push
cmp
pop
out
adc
push
mov
cwde
pop
sbb
in
jp
enter
jle
neg
sub
pop
mov
out
sbb
nop
or
hlt
push
les
adc
pop
sbb
add
lock
mov
pop
inc
ret
sahf
mov
sbb
adc
jb
sub
pushf
je
popaw
mov
cmp
aad
xchg
mov
ins
in
mov
cwde
out
dec
or
pop
clc
bound
xlat
push
xchg
jae
dec
mov
mov
ja
mov
(bad)
cmp
je
repnz
mov
inc
pop
mov
pushf
mov
movs
les
and
ret
cwde
and
gs
mov
sub
inc
mov
cld
adc
mov
mul
fstp
mov
inc
cmp
cwde
xchg
(bad)
inc
mov
jno
sbb
mov
add
jne
jae
inc
adc
js
mov
xchg
push
ret
mov
mov
xor
push
cdq
ret
mov
hlt
mov
rcl
cmc
ret
mov
fld
pop
pop
inc
jb
pushf
cmp
ret
ret
cwde
or
mov
pop
retf
sub
rcl
cmp
pop
jbe
mov
mov
xchg
ret
mov
pop
xchg
mov
rol
pop
pop
daa
call
outs
icebp
sbb
dec
fstp
push
addr16
pop
not
rcl
ds
aam
adc
mov
mov
fisttp
(bad)
fistp
inc
pop
stos
inc
xchg
pop
test
cmc
mov
cwde
gs
cmp
sbb
popf
int
cmp
ret
fidiv
sub
stos
push
mov
adc
(bad)
mov
stos
popf
fcomp
aaa
push
mov
ret
push
mov
inc
sbb
pop
ret
leave
mov
cwde
sub
les
cdq
popf
pop
jmp
push
cld
fidivr
stc
pop
sub
pop
mov
inc
jne
xor
cmp
mov
mov
jne
adc
xor
dec
pop
xor
push
pop
push
push
push
cmp
mov
xchg
pop
scas
xchg
sahf
dec
ja
call
or
mov
ret
mov
aad
call
stos
xchg
call
inc
pop
inc
fwait
cmp
cwde
cmp
inc
fnstsw
ret
mov
fucomi
int3
mov
into
mov
call
fidivr
ret
fcmovbe
push
mov
adc
pushf
xchg
pop
mov
cmp
cwde
sbb
xor
sbb
popf
bound
sbb
sub
inc
xor
xchg
add
or
pop
mov
push
sub
mov
rol
fild
xchg
xchg
mov
xchg
push
sahf
mov
or
cwde
lds
inc
inc
adc
ret
cld
sub
cdq
pop
xchg
pop
cdq
popf
ds
push
adc
mov
es
jne
sub
inc
in
mov
xor
adc
mov
js
xor
jp
in
mov
sbb
mov
into
mov
pop
ret
xchg
mov
xor
fstp
mov
call
xchg
cwde
in
inc
mov
xchg
ret
ss
cwde
mov
ds
cmp
inc
nop
or
pop
sbb
and
jne
or
mov
inc
sahf
sbb
inc
pop
icebp
adc
shl
popf
sub
fwait
ret
mov
mov
sbb
fwait
sahf
pop
jg
push
mov
ja
pop
sub
adc
fnstsw
adc
adc
call
ret
aaa
mov
movs
mov
stos
xchg
cwde
mov
fs
push
mov
fstp
pop
js
mov
sbb
xchg
jae
inc
xchg
dec
and
jp
mov
call
mov
xchg
mov
call
retf
icebp
mov
inc
call
sti
pop
retf
xchg
mov
test
stos
xlat
mov
mov
sbb
pop
icebp
fadd
out
sbb
les
call
cmps
adc
ret
stos
xchg
(bad)
mov
cli
fsubr
cmps
inc
aad
hlt
call
cmp
xchg
cwde
adc
xchg
jmp
dec
push
inc
pop
pop
ror
xchg
or
inc
xchg
(bad)
ret
mov
aam
inc
adc
icebp
sbb
mov
mov
pushf
loopne
pop
fcomp
inc
js
lods
mov
pop
inc
adc
or
pop
add
mov
(bad)
in
mov
xchg
ret
aad
pop
mov
sbb
ror
pop
in
sub
pop
push
aad
xchg
ret
xlat
jmp
call
jp
aaa
mov
stos
or
fwait
pop
sar
mov
retf
das
cld
mov
out
ret
sar
mov
push
sbb
mov
stos
test
call
les
stos
sbb
push
enter
mov
mov
xor
mov
mov
fmul
mov
pop
icebp
ret
popf
enter
mov
mov
xchg
pop
inc
xchg
pop
sahf
repz
mov
cwde
test
mov
push
call
aad
add
xchg
xor
dec
fcmovbe
push
rcr
mov
pop
sbb
push
pushf
ret
push
mov
ret
adc
inc
fiadd
ret
mov
enter
pop
push
adc
mov
inc
pusha
mov
fst
retf
mov
dec
cwde
cdq
cmps
inc
push
fwait
stos
push
call
stos
pop
ficomp
outs
fmul
push
push
in
les
pop
sub
or
inc
cmp
fcmovnu
mov
fcom
call
adc
jnp
cdq
ror
clc
push
fwait
cmps
jg
stos
xchg
aam
mov
pop
je
xor
dec
pop
aad
inc
push
jne
mov
lds
mov
ficom
pop
repz
adc
xchg
mov
inc
push
cmp
mov
jo
les
ret
mov
pop
dec
mov
push
mov
ror
xchg
test
pop
inc
cmp
pop
xchg
push
mov
and
jbe
mov
xchg
xchg
sahf
inc
mov
call
sbb
ret
mov
sahf
test
mov
mov
ficom
adc
popf
inc
ret
mov
cs
mov
sub
mov
data16
mov
icebp
pop
or
ret
mov
jns
fidivr
shl
repnz
inc
cwde
mov
push
push
and
cwde
xchg
lds
xor
repnz
mov
push
fucomp
les
pop
leave
ret
or
pop
mov
sbb
pop
fistp
xor
push
arpl
adc
sub
cwde
pop
or
mov
mov
popf
bound
pop
dec
ror
pop
dec
ret
repz
sbb
xchg
sbb
in
enter
xor
fsub
mov
sbb
fistp
ret
cmp
shr
mov
inc
idiv
adc
mov
mov
inc
add
addr16
push
xchg
adc
mov
popa
inc
inc
mov
pushf
or
mov
pop
mov
cwde
cmp
fsubr
and
popf
adc
mov
ret
out
fcmovnu
int3
mov
into
mov
sbb
xchg
mov
inc
icebp
mov
dec
aad
scas
push
inc
mov
stc
inc
cmp
mov
mov
mov
movs
nop
xor
mov
push
ret
xchg
mov
sbb
pop
cmp
mov
xlat
fsub
sbb
int3
fwait
push
push
ss
mov
xchg
movs
inc
clc
mov
mov
aaa
sbb
adc
mov
mov
mov
nop
pop
sub
pop
retf
pushf
mov
inc
cmp
ficom
ficomp
adc
xor
add
jb
xchg
stc
mov
mov
pop
xor
mov
ret
out
mov
inc
mov
xlat
fbstp
sbb
pop
mov
inc
stos
cmp
fsub
cmp
adc
mov
pop
in
mov
push
mov
and
inc
mov
lock
aad
inc
pop
pop
push
je
adc
inc
jae
cmc
fwait
jnp
ret
fbstp
sbb
mov
mov
cld
pop
retf
loop
jne
ret
sub
fcomp
push
je
mov
ret
jae
scas
xchg
sbb
adc
push
nop
bound
call
int3
mov
addr16
mov
mov
out
retf
imul
mov
pop
inc
lahf
mov
xchg
add
pop
pop
xchg
jb
dec
mov
sbb
ret
mov
rcl
cmp
mov
movs
cwde
sub
call
add
test
pushf
mov
addps
les
pop
sbb
mov
mov
sbb
jnp
inc
pop
dec
sar
inc
pop
retf
cmp
and
mov
xlat
mov
ja
dec
xchg
inc
test
cld
pushf
outs
pop
or
ds
mov
xchg
leave
mov
pop
jge
out
jno
les
repnz
add
pop
jp
ss
ret
inc
pop
ret
sbb
ret
mov
call
add
cmps
(bad)
fstp
mov
mov
ret
retf
mov
sbb
ds
imul
call
test
mov
mov
pop
adc
adc
push
fsubr
xchg
inc
mov
xor
jb
mov
mov
mov
or
cmp
inc
(bad)
nop
fnstsw
xchg
call
call
mov
mov
add
lods
sub
fld
sbb
in
retf
movs
mov
inc
mov
cmp
adc
shl
fiadd
(bad)
xchg
dec
repnz
mov
sub
pop
arpl
cmp
cmp
xchg
pop
stos
ror
mov
loopne
inc
xlat
mov
outs
add
jmp
mov
xor
dec
push
mov
xchg
pop
add
push
xchg
inc
sbb
push
xor
aas
adc
stos
pop
inc
mov
mov
cwde
sub
cdq
mov
dec
aad
adc
push
jg
(bad)
repnz
jb
xchg
mov
inc
mov
sbb
adc
xlat
icebp
xchg
pop
aad
or
retf
sar
mov
pushf
outs
out
fistp
aad
les
repz
add
retf
mov
and
pop
fwait
ret
sbb
fdivrp
xchg
pop
rcl
mov
mov
popa
ret
loopne
das
fisubr
into
mov
xchg
call
mov
into
mov
(bad)
xor
inc
fisttp
arpl
sub
les
pop
outs
or
mov
pop
add
int
pop
fsub
test
pop
rol
xor
push
add
ret
mov
mov
adc
pop
xchg
adc
mov
call
sbb
push
mov
push
inc
push
mov
fadd
loopne
fcomp
add
shl
mov
cmp
pushf
stos
xchg
call
mov
aaa
adc
xlat
pop
push
scas
ret
call
nop
cmps
fcom
jae
fdiv
sbb
mov
mov
ins
xor
rcr
(bad)
repnz
add
inc
mov
mov
push
call
ret
mov
popa
inc
dec
pushf
int3
mov
or
pop
or
ins
rcr
pop
mov
pop
ss
fldenv
mov
ror
mov
ret
imul
shr
sahf
leave
fisttp
mov
retf
pushf
(bad)
in
mov
push
icebp
sbb
push
sbb
mov
mov
xchg
xchg
bound
push
mov
xor
fild
mov
pop
pop
adc
ficomp
cmp
ret
and
(bad)
rcr
adc
mov
xchg
xchg
adc
dec
push
mov
add
adc
mov
jl
ins
cwde
(bad)
in
pop
and
arpl
loopne
adc
fstp
outs
sbb
cld
add
cmp
retf
enter
adc
in
fisubr
mov
lock
adc
cmps
fidivr
out
int3
push
jno
retf
mov
test
sbb
push
loopne
mov
cwde
bound
call
mov
call
adc
fdiv
inc
mov
iret
call
retf
pop
mov
sahf
in
(bad)
jmp
inc
mov
popf
pop
(bad)
inc
cwde
adc
inc
push
mov
stos
xchg
pop
dec
ret
test
jmp
pop
nop
adc
mov
sub
bound
adc
bound
xchg
ret
pop
rcl
pop
pop
ficomp
nop
xchg
xchg
push
mov
mov
inc
pop
fwait
xchg
xchg
mov
xchg
out
push
mov
enter
mov
daa
xchg
fst
xor
xor
pushf
xchg
pop
mov
ret
xchg
add
sbb
fwait
cmp
repnz
sub
push
and
xchg
sbb
xchg
push
adc
(bad)
fisttp
xchg
loop
push
mov
jae
dec
push
fwait
rcl
pushf
je
xchg
pop
retf
pop
bound
cmp
ret
dec
fisttp
test
cs
not
adc
sbb
popf
xlat
fnstcw
mov
mov
(bad)
xlat
aad
mov
push
mov
adc
fimul
test
add
ret
sar
into
mov
pushf
push
pop
mov
in
cmp
xchg
jne
add
push
mov
in
(bad)
out
stos
aad
pop
outs
ret
into
mov
in
mov
and
fcmovu
cwde
aad
inc
es
mov
mov
xor
mov
repnz
call
cwde
jnp
repz
dec
or
in
in
mov
aaa
ret
adc
fadd
inc
mov
xchg
call
mov
xchg
sbb
and
inc
btc
ret
xchg
mov
cmp
adc
adc
push
mov
push
pop
retf
inc
mov
pop
jp
push
xchg
or
fdiv
pop
xchg
push
xchg
xor
xor
mov
call
pop
cwde
sub
inc
and
pop
stos
push
iret
in
retf
inc
mov
inc
mov
pop
clc
bound
push
mov
fadd
in
mov
dec
push
xor
fistp
rcl
mov
mov
frstor
lahf
xor
xchg
or
ret
mov
sbb
mov
mov
shl
pop
js
jae
xor
xchg
frstor
xor
adc
add
fst
repnz
dec
fst
push
loope
popf
cmp
fnsave
push
popf
ret
pop
ret
dec
push
xor
cwde
fist
and
xor
cbw
fcomp
inc
sbb
mov
fsubr
fisttp
mov
sbb
fmul
xchg
xchg
add
xor
and
mov
mov
(bad)
jmp
mov
aas
adc
dec
mov
and
cmp
mov
out
mov
add
mov
rol
adc
xchg
push
add
mov
out
xchg
adc
push
or
cmp
mov
fidiv
mov
ret
fimul
mov
mov
xlat
shl
fst
adc
ret
xchg
push
call
fadd
mov
mov
cmp
(bad)
sub
mov
dec
sbb
adc
sahf
ret
jb
pop
mov
mov
ins
fadd
inc
push
fwait
dec
sbb
pop
(bad)
rcl
call
movs
enter
mov
pop
sahf
mov
out
push
ret
mov
cmp
(bad)
cld
cwde
mov
xor
call
fcmovnb
mov
mov
inc
ds
or
(bad)
mov
dec
pop
mov
mov
push
and
mov
inc
push
xor
cmc
xchg
jae
dec
xchg
xor
jle
mov
mov
mov
mov
les
inc
call
push
cwde
sub
inc
clc
mov
(bad)
in
pop
mov
sar
push
fwait
jnp
call
mov
in
(bad)
repnz
push
(bad)
daa
adc
dec
push
push
push
cmps
fwait
cmp
scas
addr16
mov
stos
adc
mov
mov
das
in
mov
test
mov
into
pushf
in
add
rcr
dec
mov
jns
int
mov
popf
sbb
pop
xchg
mov
mov
adc
xchg
push
shl
mov
dec
xchg
jg
nop
lds
cmp
pop
xchg
aaa
test
lds
sbb
mov
push
add
dec
xchg
mov
pop
or
mov
aad
push
cmp
mov
nop
dec
cmp
retf
rol
repz
loope
inc
div
pushf
push
call
xchg
js
add
pop
lahf
call
sbb
cmp
cmp
cmp
dec
xlat
pop
aam
es
ror
fiadd
mov
mov
ja
inc
pop
cmp
out
xor
push
push
test
pop
push
ret
data16
lea
pop
jb
data16
xchg
mov
xchg
pop
cmp
pop
stos
xchg
mov
sbb
jne
mov
push
pop
in
retf
mov
(bad)
call
and
xchg
mov
daa
pop
retf
in
sbb
pop
pop
cs
adc
bound
adc
adc
mov
fidiv
dec
pop
sub
mov
or
inc
cmp
xchg
jae
sbb
mov
(bad)
fild
test
pop
push
adc
ficomp
mov
pop
fisubr
int3
sbb
xchg
fwait
inc
mov
lds
xchg
cmp
mov
rcr
ret
daa
pop
push
mov
mov
or
dec
in
pop
jle
adc
or
aad
les
xchg
call
neg
in
les
mov
mov
loope
jno
inc
mov
cs
cwde
xchg
stos
popa
pop
sub
mov
cwde
dec
outs
mov
mov
pop
div
call
sbb
not
push
mov
cmps
sar
aas
test
adc
mov
xor
fst
dec
push
cs
retf
push
mov
inc
scas
mov
pushf
xor
fcmovnu
mov
fmul
jmp
into
mov
mov
mov
inc
mov
and
mov
xchg
cmp
push
mov
mov
pushf
xchg
ret
pop
lahf
fstp
dec
mov
imul
idiv
inc
xchg
mov
mov
fstp
jecxz
pop
mov
lods
xchg
jle
mov
fdiv
call
rcr
mov
xor
das
mov
mov
sbb
stc
dec
push
lods
pop
arpl
cdq
inc
pop
retf
std
cld
mov
add
into
aaa
add
mov
in
mov
retf
aaa
enter
cmps
fmul
pop
(bad)
lock
int3
cmc
fcmovnbe
xchg
mov
xchg
inc
cwde
xchg
mov
cmp
test
loop
xor
push
fwait
loopne
adc
pop
test
(bad)
ja
xchg
xchg
push
fidivr
stos
fadd
jno
and
mov
xor
mov
xlat
pop
mov
add
mov
call
cwde
inc
loop
movs
mov
xchg
fwait
mov
not
sbb
push
mov
sbb
inc
cdq
mov
mov
stos
in
pop
and
mov
fstp
mov
inc
fimul
test
xchg
mov
frstor
sti
mov
inc
dec
mov
add
jmp
sbb
cmp
popf
jbe
mov
mov
dec
lea
pop
cmp
bound
or
and
inc
cmp
inc
in
mov
(bad)
xor
leave
xlat
aam
int
mov
pop
sbb
xchg
sbb
adc
aam
inc
retf
mov
mov
inc
or
ret
sar
inc
sub
mov
dec
push
sub
cdq
clc
inc
pop
mov
cdq
aam
aad
push
adc
sbb
loop
mov
cwde
cmp
call
pusha
in
mov
inc
ins
stos
test
enter
xlat
dec
push
adc
inc
push
rcr
inc
fisttp
push
aad
(bad)
mov
xor
sbb
nop
fst
mov
pop
sub
pushf
js
xchg
scas
mov
or
retf
test
inc
dec
mov
test
xchg
call
neg
test
mov
ret
mov
adc
xchg
rcl
rol
sbb
xor
mov
cmp
cmp
mov
push
pop
hlt
push
jp
push
int3
push
shl
jo
jae
sbb
push
xchg
sub
push
rol
mov
pushf
push
ret
fcmovne
adc
lea
call
popa
pop
inc
sbb
jg
sbb
mov
pop
inc
movs
mov
mov
retf
xchg
mov
inc
fwait
mov
jno
lods
ficomp
mov
mov
(bad)
push
pop
xor
cmp
push
jbe
mov
mov
xchg
pop
pop
ret
outs
mov
pop
dec
fdivr
pop
xchg
mov
dec
mov
mov
ret
pop
mov
xchg
pop
ret
(bad)
jne
jle
mov
xchg
adc
push
popf
cwde
sbb
mov
not
fstp
sbb
pushf
inc
inc
(bad)
pop
ret
mov
mov
inc
jbe
bound
dec
rcl
inc
sbb
pop
pop
pop
jae
adc
and
out
ret
dec
mov
inc
(bad)
mov
or
pop
mov
addr16
les
mov
jo
xchg
repz
out
adc
adc
shl
pop
jle
mov
adc
pop
retf
push
mov
fmul
out
dec
stos
pop
xchg
pop
popa
ret
lock
nop
mov
outs
cld
pushf
loopne
into
cmp
push
mov
dec
adc
fld
xchg
dec
cdq
popf
inc
push
xchg
pop
mov
mov
pop
add
xchg
adc
sti
mov
mov
mov
mov
jnp
mov
sbb
ret
adc
test
cmc
ja
adc
push
pop
mov
outs
push
nop
mov
inc
sbb
ret
mov
jle
mov
mov
inc
pop
sub
rcr
mov
cmp
cmp
xchg
push
mov
pop
jbe
cmps
mov
cwde
mov
sbb
mov
push
paddsb
(bad)
ret
push
mov
cwde
sti
psubusb
in
inc
cmp
pop
pop
shl
push
in
sbb
inc
jno
inc
call
ins
pop
mov
push
aad
xor
mov
enter
mov
jo
test
mov
into
mov
and
adc
push
inc
push
cmp
pop
adc
push
mov
ret
pushf
fcmovne
in
mov
adc
int
mov
xchg
cdq
xchg
cwde
pop
xchg
mov
mov
ficomp
scas
call
addr16
push
push
pop
cwde
add
xchg
fistp
mov
les
dec
push
mov
fnsave
xchg
mov
ffree
add
xor
xchg
dec
xlat
push
ret
rcl
cwde
push
add
mov
ds
aam
adc
fmul
rol
sub
push
pushf
jb
adc
fdivr
mov
int
test
sbb
lahf
mov
push
into
adc
mov
xchg
adc
out
(bad)
inc
pop
mov
pop
pop
mov
pop
call
fnstsw
bound
ret
mov
fcmovu
outs
inc
xchg
mov
cwde
ja
shl
mov
js
adc
xchg
xchg
inc
xchg
inc
push
mov
mov
xchg
lock
sbb
jb
add
lahf
pop
dec
sbb
jnp
cdq
fld
fisttp
cmc
cdq
xchg
pop
repnz
xor
mov
dec
icebp
mov
jl
mov
ss
mov
sub
sbb
aad
(bad)
out
cli
call
cmc
cwde
add
xchg
call
ret
cmp
xchg
xchg
sbb
pop
lock
push
mov
or
pop
retf
js
mov
mov
jno
pop
ficomp
sbb
inc
jecxz
std
retf
imul
push
xchg
jnp
xchg
push
call
pop
nop
mov
in
mov
popf
sbb
xchg
sbb
xlat
pop
loop
nop
cwde
xchg
loop
nop
xor
nop
fld
jb
in
cwde
aaa
mov
scas
fwait
mov
cdq
sbb
inc
push
push
xchg
sub
pop
cdq
arpl
nop
adc
xchg
aad
fidiv
sub
mov
lahf
pushf
push
push
aaa
sbb
mov
fcom
mov
(bad)
retf
ficom
sbb
mov
mov
pop
pop
sahf
mov
mov
push
pop
retf
std
fistp
cdq
adc
call
mov
jmp
mov
push
xchg
scas
xchg
pop
adc
into
xchg
test
fmul
cmps
adc
out
mov
fistp
popa
xlat
pop
adc
pop
arpl
pop
call
ret
pushf
in
push
cwde
repnz
xrelease
fidivr
and
adc
ficomp
mov
das
ret
mov
rol
mov
mov
mov
fcmovb
mov
sub
pop
jno
or
ret
mov
call
mov
xchg
mov
push
in
mov
cwde
xchg
xor
push
aad
inc
call
shl
xor
jo
mov
rcl
add
push
outs
ja
rcr
pop
retf
int3
pop
mov
fmul
mov
or
out
xchg
xchg
mov
dec
inc
repz
and
rcr
mov
repnz
addr16
mov
mov
dec
fimul
(bad)
loope
jb
and
fadd
mov
mov
push
ret
mulps
inc
inc
icebp
mov
test
mov
inc
cmp
ret
and
cmps
xchg
push
mov
adc
call
movs
cwde
add
xchg
mov
and
out
sbb
sbb
adc
call
or
pop
retf
repnz
push
cmps
fild
xlat
pop
rcl
and
(bad)
jg
scas
xchg
and
out
xor
pushf
mov
mov
pop
sbb
sahf
adc
iret
mov
xor
sbb
mov
test
out
in
pop
arpl
adc
daa
mov
add
jp
push
mov
inc
call
pushf
xchg
scas
adc
adc
fsub
into
sbb
call
mov
sub
cmp
nop
inc
push
mov
ret
hlt
hlt
xor
fwait
bound
sbb
pop
mov
inc
pop
in
adc
mov
in
movs
adc
dec
mov
xchg
enter
(bad)
in
pop
push
ret
xchg
mov
inc
int3
mov
pop
pop
ja
aaa
mov
inc
jae
sbb
sub
or
pushf
sbb
movs
fist
inc
cwde
xor
pushf
jae
add
mov
cdq
pop
adc
test
ficom
push
mov
call
cwde
xlat
mov
nop
mov
pop
in
mov
push
test
jl
sbb
mov
xor
mov
pop
call
mov
dec
(bad)
cli
adc
add
test
and
adc
mov
xlat
xor
mov
sub
add
fld
xchg
xlat
aad
push
mov
aaa
pop
arpl
sbb
xchg
retf
pop
jb
xor
jae
add
xchg
rcl
sbb
mov
inc
mov
adc
mov
inc
popf
mov
cmp
xchg
adc
popf
inc
sbb
mov
xor
pop
xchg
popa
fisttp
mov
inc
inc
mov
xchg
pop
retf
je
xor
hlt
jmp
ret
mov
mov
mov
jl
sbb
add
mov
rcr
mov
mov
inc
cmp
rcr
adc
xchg
xor
xor
dec
adc
mov
mov
ret
pop
mov
inc
push
mov
jl
mov
xor
xchg
xchg
xor
adc
mov
xor
fidiv
push
mov
inc
fdivr
popf
pop
xlat
pop
loop
push
or
mov
retf
scas
call
movs
mov
cs
sahf
dec
mov
inc
pop
rol
xor
mov
imul
sbb
push
ret
std
pop
pop
fcom
inc
inc
mov
jp
mov
mov
pop
sub
mov
cmp
(bad)
fwait
pop
int3
mov
sbb
inc
xchg
mov
mov
cld
fstp
push
mov
jae
movs
pop
add
popa
mov
xor
push
mov
push
dec
push
inc
and
push
call
cwde
and
xor
std
push
xchg
cmps
mov
(bad)
nop
mov
mov
inc
xchg
mov
dec
mov
inc
mov
es
cmp
xchg
rcr
xor
jb
sub
popf
mov
pop
test
retf
inc
mov
lods
data16
pop
pop
retf
push
mov
inc
pusha
mov
outs
xchg
div
fisttp
xor
call
mov
mov
xor
inc
pop
xor
mov
mov
int3
push
sbb
inc
pop
cmp
mov
mov
mov
pop
call
cwde
enter
mov
test
ss
retf
add
cwde
dec
cs
mov
xchg
cwde
and
inc
push
mov
sbb
call
fnsetpm(287
std
pop
mov
not
aad
sbb
mov
mov
nop
scas
mov
mov
ficomp
xchg
sbb
sbb
stos
fdiv
int3
pop
sbb
push
sub
cwde
adc
inc
pop
mov
xchg
pop
xchg
ret
adc
fsubr
inc
inc
dec
mov
mov
sub
or
mul
mov
xor
ror
mov
stos
mov
pop
mov
loope
and
xchg
inc
sbb
clc
mov
push
mov
inc
sar
cmp
mov
mov
inc
out
pushf
icebp
pop
rol
mov
inc
fwait
fwait
inc
push
pop
xchg
cmps
pop
sub
test
imul
call
mov
test
cdq
adc
ja
inc
inc
les
adc
cmps
sar
addr16
call
push
add
xchg
fdivp
push
mov
btc
cwde
dec
sub
cmp
add
nop
cwde
xchg
out
cmp
lahf
adc
ficomp
mov
or
cmp
cmps
xlat
adc
aad
lds
ret
jp
jle
aad
les
dec
jne
dec
cmp
inc
xor
inc
xor
pop
jmp
add
ret
mov
adc
in
nop
dec
nop
sub
sbb
pop
pop
fidiv
pop
fcmovnb
rol
pop
lods
mov
shl
push
jo
cmps
cmp
ja
mov
scas
adc
mov
les
retf
iret
in
mov
adc
and
inc
xchg
mov
movs
call
inc
rcr
fld
call
ficomp
mov
jmp
xor
retf
inc
enter
mov
mov
cmp
mov
mov
ja
cdq
push
mov
push
lea
or
neg
push
lds
in
mov
ja
sbb
sub
dec
push
push
fcmovnu
push
xchg
pop
pop
outs
nop
adc
push
ficom
or
daa
xchg
xchg
adc
or
loopne
xor
pop
inc
ret
mov
fs
fstp
dec
(bad)
iret
retf
mov
mov
mov
cmp
out
jp
test
(bad)
pop
(bad)
push
adc
fiadd
or
fnstsw
popf
arpl
sbb
cwde
pop
xchg
pop
inc
and
pop
xchg
ret
add
xchg
adc
push
sbb
mov
add
hlt
pop
frstor
push
mov
jns
cwde
push
cmp
int3
call
not
dec
sbb
rcl
adc
pop
test
mov
mov
arpl
and
sti
stos
inc
popf
pop
mov
sbb
into
mov
add
(bad)
mov
inc
or
lock
pushf
mov
sbb
push
mov
mov
xor
sub
and
cld
mov
mov
xchg
push
adc
adc
sub
sbb
fprem1
ret
mov
aaa
mov
pop
pop
cmp
in
(bad)
fisub
mov
mov
push
sub
or
fwait
xchg
add
sbb
pop
sahf
(bad)
adc
pop
sbb
mov
test
dec
mov
pop
ret
jmp
push
call
lods
jae
add
push
cld
pop
retf
push
adc
cmc
fidiv
xchg
sahf
aam
adc
in
pop
inc
ret
in
inc
arpl
xchg
inc
sbb
dec
push
fist
cwde
xchg
adc
shl
xchg
mov
shl
xlat
dec
xchg
add
mov
lods
adc
mov
out
push
pop
retf
loop
(bad)
cwde
rcl
popf
hlt
pop
bound
rcr
inc
nop
cmp
rcr
jb
inc
pop
sbb
pop
inc
dec
mov
mov
lds
cwde
mov
inc
jmp
ret
push
sbb
adc
mov
inc
sbb
pushf
call
ret
cmp
aas
pop
xor
cwde
fistp
cmp
and
and
imul
cdq
sahf
pop
aad
mov
jne
cs
(bad)
ret
sar
mov
mov
inc
mov
mov
mov
push
push
inc
adc
adc
jbe
mov
mov
out
push
sbb
xchg
adc
push
mov
loop
ror
xor
imul
mov
mov
nop
(bad)
pop
xlat
xchg
lahf
popf
add
mov
lock
sar
nop
pop
add
push
mov
and
mov
aaa
shl
pushf
test
adc
ret
mov
mov
pop
fstp
push
sar
mov
mov
xchg
into
mov
retf
test
icebp
xchg
mov
pushf
mov
pop
je
xor
js
xchg
loop
mov
mov
inc
add
in
pushf
popa
pop
push
ret
add
sbb
sbb
inc
rcl
or
ja
outs
stos
or
xor
fnstenv
sbb
xchg
inc
pop
mov
pop
loope
push
ds
mov
mov
mov
mov
ret
mov
inc
mov
jmp
cmc
xor
xchg
sbb
lods
push
mov
rcl
adc
xchg
push
adc
jp
push
sbb
push
mov
retf
or
pop
retf
xchg
mov
inc
mov
inc
call
push
stos
sbb
jnp
mov
adc
pop
inc
icebp
mov
mov
cdq
test
pop
mov
scas
pop
call
cli
outs
dec
adc
sbb
pop
cmp
aad
inc
pop
xor
xor
mov
cmp
jo
mov
jge
add
cmp
mov
jecxz
jbe
cmps
pop
cmp
das
sbb
test
jbe
xchg
call
adc
sbb
int3
pushf
imul
fstp
ret
mov
mov
xor
nop
jle
mov
repz
pushf
mov
mov
inc
pop
pop
ret
mov
mov
dec
pushf
mov
scas
or
lods
jmp
or
adc
enter
pop
xor
xor
mov
and
leave
mov
inc
fnstsw
adc
retf
mov
cmp
mov
call
and
call
retf
daa
mov
xor
rcl
push
push
ret
adc
inc
popf
stos
xchg
xchg
mov
adc
loope
pop
xchg
mov
fistp
xchg
mov
mov
pop
dec
call
push
sbb
call
mov
call
cwde
inc
inc
inc
out
dec
dec
xor
cwde
push
push
xchg
push
push
sbb
inc
pop
cmp
pop
ret
push
inc
ret
mov
aad
xchg
imul
enter
cwde
adc
movs
call
call
xchg
in
rol
(bad)
or
ss
pop
mov
jne
inc
or
cwde
test
inc
fwait
retf
scas
in
pushf
sbb
push
mov
out
cmp
pop
stc
ret
out
cmp
pop
mov
lahf
pop
int3
or
adc
nop
jb
inc
push
pop
push
inc
jne
call
push
nop
or
sar
cdq
or
mov
push
xor
mov
mov
fist
dec
cwde
xor
jns
cld
adc
call
xlat
out
ficomp
xchg
inc
pop
dec
xchg
pop
adc
xor
mov
ret
call
mov
pop
cmp
mov
adc
sbb
cdq
push
mov
cwde
in
mov
aad
(bad)
test
push
sbb
or
push
xchg
adc
mov
inc
adc
push
cmp
push
cmps
fwait
daa
bound
mov
xchg
push
dec
fwait
push
xchg
je
arpl
sbb
dec
leave
mov
cs
cmp
xchg
ret
sbb
dec
sbb
mov
retf
inc
mov
inc
lea
mov
push
push
push
fcom
dec
mov
cwde
call
adc
fidiv
rol
fiadd
or
nop
out
(bad)
out
mov
fistp
mov
into
fsubr
mov
stos
pop
daa
fwait
sbb
push
rcl
xchg
push
fild
jb
xlat
xor
inc
pop
mov
mov
mov
ret
add
cwde
dec
add
mov
xor
call
jbe
push
ret
push
xlat
ret
mov
scas
fcomi
mov
cld
cwde
and
xor
shl
dec
push
cmp
out
pop
retf
cmps
fistp
in
mul
mov
mov
mov
mov
cmp
pop
adc
adc
mov
pop
xchg
cmps
sahf
inc
xchg
pop
adc
inc
add
retf
or
dec
fmul
xchg
pop
xchg
call
inc
sti
retf
sub
mov
mov
dec
xor
fst
fcom
je
mov
je
lock
mov
aad
ret
mov
or
not
fisttp
mov
inc
test
test
repnz
push
mov
lods
push
fsubrp
ficomp
xchg
jbe
pop
pop
enter
(bad)
adc
fwait
std
pop
xchg
pop
push
mov
ret
sbb
aad
(bad)
imul
push
lods
in
retf
lea
ins
xchg
sbb
push
pop
cmps
pop
fcom
push
mov
inc
pushf
icebp
ret
mov
cdq
int
pop
fisub
(bad)
push
int
test
retf
(bad)
mov
repnz
das
ret
pop
mov
push
sbb
mov
aad
inc
mov
rol
cmp
fwait
cmps
sahf
mov
mov
adc
xor
fidiv
pop
es
rol
ret
adc
popf
inc
pushf
sbb
push
sub
and
mov
push
lahf
arpl
aam
mov
repz
add
mov
(bad)
cwde
inc
popf
cmp
push
arpl
mov
cwde
add
cmp
ret
inc
push
mov
mov
jb
xor
xchg
add
enter
sub
cdq
pop
int
stos
xchg
push
xchg
rcr
mov
(bad)
cmps
mov
(bad)
les
idiv
fstp
or
ja
push
int
fwait
fwait
push
sbb
xchg
fmul
sbb
fisttp
ja
mov
pop
rcl
ss
and
cmp
aam
inc
fisttp
pop
jbe
les
add
sub
mov
pushf
aas
out
fistp
sub
cmp
repnz
xor
mov
out
inc
sub
ret
sar
fwait
xchg
push
inc
pop
mov
mov
sbb
xchg
inc
pop
mov
test
pop
adc
lock
mov
xlat
cs
xor
or
mov
pop
dec
fdiv
xor
cmc
pop
rcr
jmp
mov
and
outs
mov
inc
int
not
cmp
popf
jbe
xchg
fdivr
push
xlat
jmp
sbb
mov
mov
je
xor
or
sub
push
mov
push
mov
les
mov
jge
mov
and
mov
bound
cwde
inc
ret
mov
(bad)
neg
mov
xor
push
or
sbb
ficomp
mov
push
and
xor
push
pop
pop
mov
les
cs
xchg
or
mov
aad
les
mov
xlat
fst
xchg
imul
xchg
sbb
mov
pushf
or
(bad)
pop
fst
pop
cwde
aaa
adc
fistp
fwait
stos
pop
call
adc
mov
xor
paddsb
ret
daa
mov
mov
xchg
or
jne
mov
in
enter
add
lods
sbb
mov
js
mov
sub
sbb
leave
push
mov
cwde
or
call
pop
add
dec
push
pop
xchg
jb
jbe
mov
test
pop
mov
mov
or
sub
mov
int3
mov
dec
fstp
inc
sbb
cmp
adc
hlt
fucomi
ret
popf
pop
loop
int
cwde
xchg
ss
inc
mov
mov
xchg
fcmovu
call
movs
push
xor
jae
sub
pop
jnp
xchg
jne
neg
ret
test
pop
cwde
jmp
lods
dec
fwait
cmp
out
mov
add
hlt
xchg
mov
aam
ret
mov
mov
cwde
xor
call
jg
das
adc
(bad)
xchg
push
xor
js
xchg
push
jp
jbe
mov
ins
sbb
mov
mov
mov
call
ret
jb
aaa
mov
xor
xor
dec
pop
mov
adc
enter
repnz
mov
fwait
imul
xor
push
mov
cmp
fdivr
rcr
xor
repnz
inc
sub
add
aad
pop
into
xchg
stc
xor
mov
xchg
sbb
out
stos
imul
jo
(bad)
inc
ficomp
mov
inc
call
call
nop
(bad)
mov
clc
add
cmp
pop
dec
mov
sahf
xor
xlat
adc
cmps
mov
dec
mov
movs
fwait
fwait
sbb
mov
(bad)
adc
mov
inc
mov
cmp
cwde
not
pop
and
fst
adc
adc
push
mov
int3
sbb
xor
pop
jge
dec
popf
add
cmp
mov
pop
nop
pop
shr
mov
adc
fwait
push
call
cmps
fdivr
cmps
pop
leave
push
dec
in
retf
aas
push
(bad)
sbb
mov
pop
ret
mov
adc
js
mov
mov
push
addr16
mov
fwait
adc
mov
rol
fucomip
mov
out
xchg
sar
mov
mov
imul
mov
fwait
imul
mov
mov
pop
bound
fdivr
adc
jbe
mov
addr16
popa
mov
adc
sbb
test
cmp
(bad)
push
sbb
pop
test
jb
mov
ins
pop
dec
xlat
pop
pop
mov
xchg
adc
test
popa
fcom
inc
loop
push
call
push
mov
cli
pop
retf
mov
mov
or
mov
push
pushf
sbb
sbb
sbb
mov
mov
ret
scas
mov
inc
stos
retf
lock
mov
dec
fstp
pop
aam
push
mov
lods
pop
push
arpl
pop
ret
fdivr
inc
lds
pop
pop
push
mov
call
retf
fwait
xchg
pop
cmps
pop
dec
push
(bad)
push
out
push
sbb
dec
mov
xor
not
mov
in
cwde
dec
cmp
jmp
xchg
call
mov
jecxz
inc
mov
inc
fcom
mov
push
mov
retf
aad
xchg
popa
lods
xchg
mov
jb
sub
dec
mov
cmp
dec
adc
mov
fisubr
sub
push
adc
inc
inc
xor
retf
sbb
inc
repnz
mov
mov
(bad)
push
or
stos
mov
fwait
lea
aad
push
mov
cmp
jo
xor
inc
adc
ret
mov
push
inc
(bad)
mov
setne
push
mov
ret
dec
mov
inc
xchg
rol
lahf
push
add
sub
dec
int3
mov
mov
xor
pusha
mov
inc
bound
xor
jp
cwde
loop
inc
push
mov
iret
adc
outs
in
jne
dec
xor
xor
dec
adc
pop
mov
xchg
adc
adc
pop
adc
mov
inc
cdq
retf
in
in
mov
popf
adc
push
mov
ret
jg
stc
in
mov
inc
and
inc
mov
mov
mov
repnz
dec
cmp
test
fadd
dec
mov
xor
adc
pop
inc
fs
retf
icebp
in
mov
mov
fsubr
inc
dec
fwait
adc
pop
sbb
jb
cwde
xlat
aad
inc
stos
or
pop
test
cwde
mov
cwde
les
dec
scas
pop
add
sbb
inc
pop
hlt
ret
mov
out
fld
(bad)
inc
push
daa
nop
push
push
pop
adc
mov
xchg
nop
shl
mov
aad
adc
dec
xchg
add
mov
xchg
pop
call
mov
shl
push
retf
xor
lahf
xchg
dec
xchg
inc
xlat
mov
sbb
pop
jecxz
aam
in
xor
sbb
mov
ret
sbb
or
push
js
xor
rcr
mov
retf
lods
in
mov
psrlq
bound
mov
iret
pop
inc
aas
fcomp
add
mov
neg
pop
mov
adc
ret
inc
mov
inc
jmp
push
sbb
mov
push
jnp
mov
cdq
lods
fst
mov
fisttp
pop
xor
mov
xor
and
mov
mov
jne
int
sbb
or
pop
fnstenv
not
pop
xlat
mov
(bad)
pop
cmp
push
push
xlat
jb
data16
mov
clc
xchg
in
ror
dec
push
or
call
bound
inc
mov
xor
sub
out
fild
jl
jecxz
cwde
je
xor
call
push
jo
xor
sbb
mov
add
mov
call
ret
inc
mov
into
mov
push
xchg
jmp
adc
ja
mov
nop
pop
xchg
jmp
cmp
jo
adc
mov
push
xor
adc
mov
pop
in
pushf
sbb
bound
clc
ret
mov
mov
in
push
mov
(bad)
push
mov
mov
mov
rol
pushf
mov
mov
ret
sbb
inc
mov
cli
mov
pop
mov
mov
jle
mov
inc
jnp
pushf
and
fist
mov
adc
fistp
into
pushf
cld
psubusb
stos
pop
xchg
cdq
push
sahf
cmps
lahf
push
retf
xlat
adc
pop
add
cmp
sahf
pop
inc
mov
js
xchg
mov
pop
test
enter
outs
pop
mov
and
or
hlt
sqrtps
bound
ins
dec
neg
inc
nop
dec
sbb
ret
mov
cwde
ret
mov
push
mov
imul
sub
adc
add
cmc
mov
repz
inc
mov
mov
fsubr
jecxz
add
dec
cmp
xor
pushf
xor
xchg
push
retf
xchg
xor
xor
(bad)
sbb
cmp
aas
pop
popa
and
dec
(bad)
or
mov
mov
push
cmp
sub
xor
adc
cwde
dec
shr
cmp
xchg
ret
mov
pop
test
mov
sub
cmp
out
xchg
mov
aad
ds
les
std
xchg
fisttp
xchg
outs
cmp
push
es
adc
neg
retf
rol
xchg
mov
call
retf
sar
ret
mov
inc
sub
ret
ins
mov
inc
sbb
fbstp
mov
xchg
pop
shr
popf
stos
xchg
xchg
mov
aas
xor
push
adc
pop
shl
fcom
nop
mov
pop
xchg
sbb
lea
adc
fld
mov
call
cs
inc
int3
lods
xlat
push
add
loope
not
rcl
cmp
mov
cmp
mov
ret
pop
dec
ror
xchg
out
rol
xchg
cmp
dec
jp
xchg
mov
mov
cmp
pop
ret
mov
xor
fwait
pop
push
pop
mov
inc
fcom
mov
cmp
push
jb
adc
repnz
sbb
es
xor
inc
aam
xchg
sub
mov
imul
or
xor
xchg
ds
mov
inc
inc
fnstcw
(bad)
dec
xlat
mov
push
rcr
mov
xchg
cmps
dec
cdq
adc
mov
xor
fwait
inc
xchg
scas
int
stos
adc
pop
adc
mov
inc
shr
ret
sub
mov
fist
test
in
pushf
sbb
les
call
fld
dec
fimul
lock
xchg
cdq
pop
loope
adc
adc
xchg
fnstsw
push
mov
push
jp
retf
(bad)
mov
push
mov
pop
xor
xchg
adc
cld
retf
mov
call
cdq
adc
pop
sbb
push
mov
xchg
scas
lahf
popf
sub
jae
push
stos
fadd
pop
sub
push
hlt
push
mov
cmp
sbb
rcl
push
scas
rol
pop
mov
inc
xor
jnp
mov
test
mov
mov
mov
rol
(bad)
push
mov
sbb
push
push
cdq
cmp
xchg
xor
sub
mov
cdq
jmp
xchg
(bad)
sbb
pop
mov
mov
xchg
nop
mov
cmp
dec
ret
mov
pop
fcmovnu
pop
xor
and
inc
jno
sub
test
push
inc
rcr
pop
push
add
les
pop
pop
ret
(bad)
mov
mov
mov
sub
and
popa
push
xchg
or
sbb
into
fld
and
xlat
mov
inc
jmp
call
jne
pusha
ret
sbb
ret
and
cmp
sub
and
xchg
inc
cmps
mov
push
ret
(bad)
mov
inc
push
mov
sbb
push
sbb
xor
call
data16
mov
pop
retf
rcr
fsubr
inc
push
cmp
rcr
repnz
jmp
cmp
aad
xor
xor
push
mov
dec
int3
dec
sbb
clc
ret
mov
int
xor
pushf
and
bound
push
cs
js
push
fadd
pop
rcl
mov
stos
or
adc
inc
fidiv
pop
xchg
(bad)
sub
adc
cmp
in
push
jge
dec
jg
pop
push
bound
push
pop
add
mov
sub
cmp
xor
cmp
cmp
jbe
xor
rcl
(bad)
call
rcr
fwait
jnp
mov
cdq
fld
inc
push
pop
fst
mov
call
add
dec
inc
push
mov
inc
xchg
call
pushf
xor
ret
push
fucomi
in
mov
inc
into
mov
neg
sbb
lahf
shl
cmp
sbb
(bad)
mov
mov
sub
loope
sahf
push
mov
cmc
inc
fs
adc
cmp
test
enter
sahf
or
cmp
sub
cmps
jb
mov
mov
sub
or
push
ret
sbb
jb
out
cwde
shr
lods
mov
movups
fwait
sbb
rcr
sbb
fdivr
xchg
xchg
dec
push
mov
ret
jge
fsubr
stos
inc
inc
fwait
dec
(bad)
outs
lahf
pop
loopne
pop
nop
fist
test
mov
xchg
push
or
pushf
adc
ficomp
mov
(bad)
loope
pop
inc
xlat
dec
loop
daa
mov
lahf
fld
xchg
neg
test
push
mov
mov
popf
lahf
push
arpl
dec
aad
les
ja
pop
xor
fmul
sahf
je
push
shl
ret
(bad)
pop
sar
sbb
cmp
fwait
mov
xor
not
xor
jbe
ret
nop
or
push
test
xchg
loope
push
add
jmp
mov
push
mov
mov
ret
mov
mov
out
rcl
into
push
mov
call
js
mov
xlat
popa
dec
sbb
push
cmp
inc
sbb
inc
inc
mov
mov
xchg
ret
cmps
imul
mov
xor
mov
stos
adc
stos
push
mov
xchg
rcl
xchg
xchg
mov
xchg
ret
mov
xchg
mov
push
inc
outs
fwait
xor
xchg
pop
shr
xchg
mov
push
mov
pop
out
xchg
adc
mov
ds
push
fld
fcmovnbe
imul
mov
arpl
call
inc
lods
mov
add
mov
pushf
ficomp
fistp
jae
fisubr
xor
pop
inc
cdq
cmp
add
mov
js
xchg
xchg
push
or
or
mov
retf
fwait
sbb
sub
retf
sbb
xchg
and
mov
fsubr
shl
xchg
pop
adc
xchg
xchg
adc
mov
retf
jl
mov
retf
repnz
mov
out
adc
mov
dec
xlat
sbb
test
xlat
ins
std
sbb
sbb
mov
pop
test
xlat
adc
push
xchg
out
xchg
pop
test
pop
adc
pop
jb
xor
js
xchg
cmp
repnz
dec
nop
rcl
in
pushf
mov
add
pop
push
dec
mov
push
adc
shl
lods
call
mov
call
mov
ret
les
inc
mov
popa
call
cwde
scas
mov
xchg
fistp
mov
mov
mov
xchg
mov
inc
adc
stos
aad
mov
push
inc
xchg
fwait
stos
pop
mov
mov
cwde
mov
push
call
mov
lods
ja
inc
push
pushf
pop
adc
aas
dec
dec
(bad)
fild
cwde
icebp
jae
repnz
jge
pop
add
jne
nop
aad
les
popa
call
retf
adc
mov
retf
paddb
icebp
xchg
bound
popf
inc
adc
hlt
xchg
jmp
mov
out
push
xchg
xchg
mov
(bad)
lahf
cmps
push
dec
xlat
pop
push
adc
mov
into
pushf
inc
pop
scas
xlat
cwde
adc
ror
pop
in
ret
pop
mov
inc
js
push
call
mov
neg
call
fld
iret
call
popf
in
sub
xchg
xchg
push
mov
sub
add
jge
rol
pop
push
mov
cwde
xor
cli
mov
mov
in
xor
cmp
xchg
sar
adc
(bad)
push
mov
fidivr
xor
pop
and
pop
xchg
adc
dec
sbb
fld
mov
ja
fistp
stos
pop
cdq
fistp
push
mov
jl
ret
mov
pop
mov
out
pop
xchg
fild
mov
mov
bound
sbb
mov
mov
xor
cmp
push
dec
pop
(bad)
push
push
mov
sbb
bound
inc
mov
call
loop
rcr
mov
ficomp
ret
xlat
mov
inc
btc
call
push
mov
push
sub
fstp
mov
mov
inc
scas
mov
dec
adc
ficomp
fwait
in
xchg
push
stos
sbb
mov
ret
pop
rcr
imul
fsubr
jecxz
cmps
nop
inc
add
mov
faddp
in
push
xchg
adc
mov
call
push
pop
adc
mov
mov
sub
xchg
dec
aad
xchg
inc
push
cmps
adc
idiv
call
aad
xlat
call
inc
sar
sbb
sahf
ret
xchg
xor
jb
loop
nop
adc
jb
inc
retf
pushf
call
cmps
lahf
adc
lahf
sbb
fmul
mov
push
and
xor
mov
ficomp
mov
sub
js
arpl
retf
or
pop
cmps
ret
mov
mov
sar
retf
sub
outs
fidivr
outs
push
mov
je
xor
cmp
inc
jmp
pop
popf
pop
loope
lds
xor
sahf
neg
js
mov
fdiv
neg
jp
inc
ss
and
mov
xlat
adc
mov
fstp
fwait
and
test
push
stc
xchg
push
and
fistp
mov
pushf
push
jo
retf
xor
out
inc
sahf
fist
shl
cmp
sbb
fwait
push
jno
cmp
fstp
inc
fcomp
fwait
push
xchg
xchg
sahf
pushf
ss
mov
ret
xchg
mov
inc
in
dec
cmc
sbb
cmps
ret
xchg
inc
pop
aaa
ret
mov
mov
mov
add
not
stc
sbb
sbb
lahf
inc
inc
fdivr
adc
xchg
sbb
pop
xchg
xchg
sbb
sbb
mov
pop
enter
les
mov
add
sbb
inc
fistp
(bad)
daa
mov
push
pop
xlat
cmps
aam
sbb
add
fst
xor
mov
ss
ror
mov
fwait
mov
(bad)
ss
(bad)
rcl
adc
mov
inc
sar
inc
loope
xor
sbb
jle
ficomp
mov
inc
jmp
pop
js
std
popf
xor
jae
dec
xchg
bound
std
adc
or
push
cmp
add
adc
mov
sbb
out
mov
push
aad
inc
adc
jge
xor
mov
fdiv
ss
adc
push
xchg
fcomp
pop
ret
dec
push
mov
mov
xor
pop
sub
pop
xchg
mov
(bad)
inc
push
outs
lahf
push
add
xchg
pop
mov
push
add
pop
adc
cs
fidiv
rcr
pop
loopne
popf
or
mov
or
sub
dec
fdiv
pushf
sub
xor
sbb
xor
xchg
mov
dec
mov
pop
push
ret
movaps
rcr
xchg
fadd
push
push
aam
fistp
mov
pmaxub
pop
cdq
push
mov
(bad)
mov
pop
and
mov
cs
ins
ret
loopne
test
mov
cwde
or
call
cwde
jns
repz
sbb
inc
jne
push
call
mov
fisubr
pop
mov
mov
ja
inc
mov
inc
repnz
aam
test
call
ja
popa
pop
push
and
std
ret
outs
mov
inc
adc
addr16
cdq
mov
ret
add
mov
je
mov
dec
mov
fdivr
cwde
ret
mov
inc
or
sbb
adc
pop
cmps
pop
sub
push
mov
adc
ficomp
mov
into
in
pop
add
(bad)
adc
aad
adc
mov
ret
mov
push
jo
mov
ja
push
(bad)
push
mov
(bad)
sub
mov
mov
mov
xchg
fistp
enter
cmp
cdq
sbb
pop
mov
mov
sbb
aaa
mov
inc
call
fwait
mov
xor
push
mov
pushf
push
mov
pop
rcr
cwde
add
cwde
xchg
mov
mov
cld
pushf
xchg
pop
mov
sub
xchg
fidivr
sbb
mov
inc
inc
xor
inc
ret
mov
pop
inc
mov
sub
dec
fnstenv
mov
mov
push
pop
jmp
mov
(bad)
sub
adc
outs
adc
mov
fcom
push
sub
adc
push
ins
fwait
pop
xchg
or
add
ss
pop
stos
imul
add
mov
xor
jns
mov
arpl
cmp
shl
js
xchg
mov
ret
cli
mov
pop
adc
xchg
or
jle
mov
xchg
mov
mov
test
fisttp
aad
pop
adc
shr
xchg
cdq
test
push
adc
mov
dec
gs
xlat
and
ds
sub
pop
ret
sbb
adc
push
dec
pop
jp
jb
es
pop
dec
push
test
mov
adc
sub
in
popa
push
sub
lahf
mov
mov
ss
cdq
aam
push
xchg
rcl
lahf
xor
mov
push
mov
loopne
in
mov
pop
retf
aad
pop
(bad)
in
cwde
jae
inc
fs
scas
ret
std
enter
mov
inc
xchg
stc
xchg
sbb
jbe
mov
daa
pushf
sbb
add
dec
cwde
push
ret
mov
inc
push
test
mov
jns
retf
mov
test
ja
mov
popf
xchg
pop
pop
mov
push
mov
sar
push
nop
(bad)
sbb
jg
aad
fld
mov
fld
sub
and
gs
sbb
sbb
adc
dec
pop
xor
adc
xor
inc
aas
mov
or
jno
sub
mov
fwait
dec
mov
dec
pop
and
scas
cld
mov
inc
jb
mov
mov
push
mov
pop
bound
sbb
pop
sbb
shl
dec
pop
mov
sub
rcl
inc
sahf
inc
pop
dec
pop
mov
pop
or
fs
xor
int3
mov
sbb
aam
pop
xchg
push
sbb
ret
xor
xor
xchg
aam
and
ret
inc
mov
fmul
pop
inc
jo
pushf
cmp
ret
mov
es
inc
mov
call
mov
call
or
mov
sbb
sbb
(bad)
call
xlat
fistp
inc
add
ret
loop
mov
adc
xchg
cmp
fidivr
dec
dec
nop
dec
scas
xchg
test
cwde
add
sbb
ret
sbb
andnps
jnp
cdq
nop
mov
xor
adc
add
push
aaa
nop
xchg
add
mov
xchg
mov
sbb
nop
test
pop
cwde
push
mov
pop
jb
clc
mov
and
dec
xchg
sub
pop
call
mov
pop
sbb
(bad)
fisubr
pop
mov
mov
imul
hlt
mov
add
mov
xchg
dec
repnz
mov
fcmovnu
mov
jb
inc
call
inc
add
rcr
jl
mov
scas
pop
sti
mov
mov
push
mov
add
sbb
ror
les
fistp
xchg
mov
(bad)
mul
push
aad
ret
pop
push
fldenv
xlat
mov
fdiv
push
mov
js
sahf
in
mov
xor
push
jnp
mov
mov
les
xchg
mov
pop
(bad)
lds
mov
out
rol
mov
call
xchg
cwde
lahf
aas
inc
cmp
pop
push
mov
int3
retf
mov
fcom
inc
jp
paddsb
ret
popa
pop
ins
fsub
hlt
mov
nop
xor
xor
ss
js
ret
push
pop
dec
mov
in
les
mov
sub
cmc
adc
adc
retf
fdivrp
ret
mov
push
stos
xchg
mov
jns
push
mov
mov
xchg
fsub
jb
aaa
fist
push
mov
add
mov
mov
addr16
xchg
retf
mov
dec
ret
pushf
aaa
cmps
ficom
sbb
dec
mov
jo
lods
stos
jnp
pop
test
push
mov
enter
in
xor
mov
mov
mov
xor
cdq
jo
xchg
mov
mov
inc
es
cmc
rcr
ror
call
adc
cwde
mov
sub
mov
mov
bound
fcom
pop
xchg
jg
pop
dec
sbb
ret
adc
push
push
cmps
fdiv
mov
adc
adc
rol
cmc
call
jge
push
pop
shl
repnz
retf
push
call
sub
dec
fwait
rol
aam
xchg
mov
mov
push
ret
inc
mov
fnstenv
(bad)
rcr
dec
push
out
push
cld
add
mov
mov
aad
mov
fimul
dec
ret
mov
dec
fsubr
and
push
mov
pop
inc
push
jns
mov
fisttp
push
xor
mov
mov
sub
xor
xchg
inc
and
push
jbe
mov
sub
adc
mov
aad
adc
inc
ret
(bad)
cmc
mov
push
adc
adc
(bad)
cmp
fstp
inc
movs
mov
dec
ret
dec
sub
xchg
push
call
aad
jns
jmp
pop
ficom
push
ror
dec
outs
adc
add
test
jge
mov
push
retf
push
je
xor
jo
xchg
adc
push
sub
cmp
jmp
rcr
jb
xchg
mov
shr
fistp
or
dec
rcl
cmp
xchg
mov
pop
ficom
or
cwde
test
daa
dec
xor
dec
sbb
inc
sbb
fmul
dec
push
mov
mov
sub
inc
pop
sub
pop
xchg
cmps
mov
and
xchg
(bad)
push
js
mov
imul
scas
mov
mov
into
xchg
sub
mov
adc
inc
pop
jg
adc
mov
pop
jmp
test
jg
sbb
scas
xchg
push
lock
ja
mov
push
call
sbb
mov
xor
daa
sbb
pushf
mov
push
test
pushf
mov
push
mov
mov
xor
sbb
mov
imul
or
xlat
cmps
xchg
daa
stos
sbb
pop
sbb
fisttp
fcmovne
push
mov
loope
adc
pop
mov
fcmovnu
pop
ret
shl
mov
push
inc
mov
js
ret
xchg
dec
in
add
and
pop
pop
shl
icebp
jne
rol
cwde
lods
outs
xor
aad
inc
pop
or
mov
xor
push
push
scas
dec
nop
adc
lds
jnp
xlat
sbb
ror
xchg
mov
xchg
shr
inc
mov
mov
cwde
test
cmp
xor
pop
(bad)
pop
cmp
sbb
stc
jb
mov
xchg
add
sub
fiadd
mov
mov
xchg
fld
pop
pushf
xchg
sahf
call
mov
inc
cmps
mov
add
mov
sub
scas
aam
and
push
mov
retf
xchg
cmps
popf
test
div
adc
aaa
push
push
sub
lock
dec
mov
retf
rol
ret
mov
dec
pushf
mov
or
add
sub
jno
call
adc
adc
jmp
hlt
mov
enter
(bad)
xchg
sbb
rcr
aad
push
mov
xchg
call
mov
leave
pop
retf
mov
cmp
out
jne
inc
mov
inc
pop
mov
dec
rcr
bound
xchg
mov
rol
sbb
xchg
and
lahf
dec
pop
mov
xlat
add
push
xchg
jmp
sbb
aas
int
aad
pop
inc
mov
sbb
push
dec
test
jmp
fidivr
ins
xor
sbb
lahf
gs
sbb
xchg
mov
mov
adc
js
mov
fwait
mov
ror
fnstenv
mov
push
mov
or
cmp
add
push
or
pop
movs
fcmovbe
mov
cmp
xchg
rcl
mov
inc
call
mov
sub
adc
aad
std
jne
lds
xchg
dec
mov
sbb
adc
fadd
sub
mov
das
inc
xor
jmp
xor
inc
xchg
dec
sbb
sbb
loopne
adc
scas
mov
cdq
cmp
pop
adc
(bad)
mov
sbb
xchg
sbb
mov
std
dec
mov
ja
add
es
cwde
in
fwait
pop
xchg
test
lods
fcomp
test
push
sbb
adc
mov
call
add
cdq
test
ret
push
mov
adc
test
inc
nop
push
sbb
mov
popf
pop
and
loop
pop
dec
ret
fwait
mov
mov
add
inc
nop
xlat
ret
mov
mov
inc
mov
pop
retf
addr16
and
fcom
loopne
push
add
pop
pop
cwde
inc
shl
inc
shl
push
cmp
mov
rcl
int3
pushf
inc
repz
dec
and
mov
pushf
or
fstp
cwde
ret
mov
mov
xchg
adc
fistp
mov
mov
jb
mov
inc
imul
mov
inc
jl
inc
in
mov
dec
mov
xlat
xlat
jb
xor
hlt
ffreep
cmps
ret
mov
mov
inc
lods
retf
loopne
pushf
cmp
jne
xchg
xchg
pop
gs
xor
fimul
test
mov
inc
aad
push
xchg
mov
cwde
shl
stos
sub
out
sbb
pushf
mov
cdq
mov
and
sub
xor
push
xchg
pop
mov
ja
dec
push
lods
adc
cwde
mov
inc
fisttp
mov
rol
fisttp
mov
xchg
push
cdq
pop
loope
adc
div
xchg
adc
adc
push
push
xchg
pop
push
scas
dec
push
adc
mov
mov
in
push
pop
retf
fxch
aad
aad
mov
mov
test
stos
fsub
inc
xchg
mov
or
sar
pushf
xlat
fdiv
aad
aad
push
jb
xor
add
sub
inc
sbb
mov
xor
mov
xchg
jb
add
nop
into
sub
add
fild
ret
mov
mov
inc
jg
push
dec
cld
stos
sbb
dec
adc
sbb
nop
popf
mov
daa
icebp
mov
and
push
call
sbb
outs
xchg
push
mov
int
fwait
pop
call
sbb
sub
pop
idiv
mov
fst
mov
fiadd
sbb
(bad)
seta
add
mov
push
mov
xchg
enter
or
sbb
xchg
inc
inc
mov
call
fldcw
dec
push
rcr
call
bound
call
adc
mov
ins
sahf
inc
pop
cmps
pop
xchg
mov
mov
setp
int
ret
in
jecxz
fs
test
mov
sbb
hlt
or
xchg
pop
or
sbb
pop
mov
fild
jg
adc
and
or
xchg
xchg
cmps
pop
ja
cdq
pop
sbb
xchg
sar
fcmovnu
sar
mov
stos
shl
inc
add
xor
repnz
cmp
scas
xchg
xchg
xchg
dec
mov
push
mov
or
xlat
add
mov
xchg
inc
push
mov
sbb
add
retf
aam
bound
sbb
rcr
nop
cdq
mov
or
xchg
xchg
cs
mov
inc
pop
or
sub
pop
cwde
or
inc
call
add
shl
fbstp
mov
mov
das
fild
mov
mov
outs
in
pop
xchg
ret
xchg
push
xor
pop
rol
mov
xor
rcl
push
mov
adc
sbb
lds
call
cmc
cwde
mov
into
mov
fist
dec
push
icebp
popf
dec
shl
fmul
nop
retf
jp
pusha
mov
in
mov
lahf
dec
not
xchg
xchg
inc
(bad)
mov
mov
pushf
rcr
ret
sub
outs
aam
popf
cmp
sbb
push
test
cmp
mov
inc
inc
repz
pop
mov
ins
mov
fisttp
push
xor
mov
adc
jo
mov
aad
pop
cmp
xchg
pop
and
sahf
pop
imul
pop
call
cld
xchg
pop
std
jge
sub
lock
dec
jns
or
cmp
loop
fldenv
push
arpl
xchg
inc
inc
pop
(bad)
not
pop
call
sbb
push
cmp
cmp
mov
mov
xor
inc
fcom
ret
mov
inc
inc
(bad)
mov
xchg
push
xchg
adc
rcr
js
xchg
dec
mov
fcom
cwde
sbb
add
pop
retf
cmp
popa
push
enter
cdq
adc
push
mov
ret
sub
fadd
mov
mov
jle
mov
or
cmp
mov
push
push
pop
(bad)
push
mov
neg
dec
ins
push
push
xchg
fiadd
mov
repnz
pop
push
dec
mov
icebp
push
rcr
fst
and
mov
push
aaa
ja
push
pop
dec
rol
pop
fidivr
out
push
xchg
dec
pop
push
fnstcw
pop
xchg
adc
jg
pop
and
sbb
mov
xchg
fadd
xchg
sub
adc
sub
test
xchg
xchg
add
xchg
adc
ficom
out
mov
aad
sbb
call
pop
mov
push
pop
ficomp
nop
or
xchg
ficom
bound
ds
lahf
pop
mov
pop
mov
ret
pop
jb
js
mov
mov
leave
loope
pop
rcr
ret
(bad)
push
xchg
push
sbb
push
xchg
dec
push
mov
mov
add
pushf
pop
rcr
push
not
adc
cmp
movs
inc
ss
pushf
mov
mov
xor
pop
mov
xchg
mov
ret
enter
sbb
fs
call
xchg
push
mov
pop
or
in
pop
rcr
dec
ficomp
pop
pop
scas
nop
shl
ins
sbb
pop
enter
mov
(bad)
rcl
xchg
rcl
mov
call
nop
je
arpl
pop
xchg
push
add
sbb
inc
xchg
push
push
je
xchg
shl
mov
inc
pop
add
nop
inc
cwde
popa
adc
call
mov
retf
test
cbw
jbe
xor
sbb
sbb
es
sbb
adc
mov
pop
jae
dec
push
adc
dec
mov
pop
mov
retf
int3
pushf
imul
fwait
sbb
ficomp
fnsave
mov
popf
lea
fmul
mov
mov
jmp
sub
call
aaa
ret
dec
adc
loop
(bad)
ror
imul
cwde
push
dec
inc
mov
dec
xor
inc
pop
add
mov
mov
inc
scas
mov
jp
idiv
into
mov
and
xor
mov
mov
ja
test
(bad)
mov
inc
adc
fwait
push
mov
jb
xchg
push
jmp
fucomip
xor
jl
stc
mov
and
adc
pop
pop
push
push
dec
fwait
mov
push
mov
cwde
inc
gs
sbb
fild
pop
xchg
xchg
xchg
hlt
pop
movs
ret
xor
adc
mov
mov
adc
push
ret
not
xor
mov
xchg
jo
loopne
xchg
push
inc
aad
push
ret
pop
loope
fstp
sbb
fnsave
cmp
sahf
xchg
sbb
pop
xchg
xchg
shl
inc
mov
jo
loop
fwait
pop
inc
push
xlat
jb
and
pop
sub
retf
sar
pop
sbb
pop
arpl
xor
mov
cmps
fidiv
scas
lahf
dec
test
pop
int
jge
jle
mov
sbb
mov
inc
xchg
xchg
ret
mov
inc
mov
pop
dec
cmp
mov
movs
push
cmp
dec
sbb
mov
mov
cwde
jbe
mov
cmps
xchg
mov
adc
xchg
pop
mov
pop
stc
fsub
lahf
pop
adc
xchg
cmp
pushf
ret
xchg
mov
sbb
xor
add
mov
inc
jns
stos
pop
stos
xlat
jnp
mov
(bad)
std
sbb
xchg
icebp
aad
inc
pop
xor
das
nop
bound
lahf
adc
mov
or
mov
aad
cmp
ret
out
jae
mov
sub
pop
mov
ins
not
xchg
pop
and
push
cmp
mov
inc
mov
push
xlat
pop
add
adc
mov
cmp
rol
inc
and
pop
push
cmp
cwde
shl
xchg
in
xchg
xchg
inc
cdq
rcl
cmps
pop
out
fld
sbb
push
mov
faddp
mov
mov
xor
scas
pop
or
(bad)
ret
aam
sub
adc
pop
pop
pop
or
jge
mov
adc
sub
(bad)
push
mov
sbb
or
in
lods
push
fld
sbb
pop
mov
add
inc
xchg
mov
sbb
xchg
lahf
xchg
rcl
push
bound
jle
mov
mov
inc
sbb
fwait
nop
popf
mov
mov
adc
add
test
mov
mov
inc
icebp
fwait
xor
fcomp
(bad)
pop
adc
inc
mov
in
(bad)
fist
cmp
xchg
cdq
xchg
or
aad
ret
xchg
inc
push
dec
enter
cmp
pop
pop
add
mov
xor
dec
sbb
jnp
mov
ja
std
dec
adc
(bad)
xor
xchg
xor
mov
(bad)
mov
and
adc
xchg
pop
push
xchg
jbe
mov
mov
aam
lahf
fdiv
push
inc
rol
or
cmps
fidivr
adc
ret
in
dec
sbb
test
call
mov
adc
pop
ret
push
imul
aaa
ins
cwde
mov
cwde
pop
mov
jne
cld
xchg
sbb
pop
cmps
pop
enter
add
test
cld
xchg
ror
call
dec
fwait
add
call
jae
nop
cdq
pop
in
pop
pop
jno
mov
dec
pushf
dec
fcomi
sbb
sbb
push
mov
jbe
int3
out
fst
std
inc
push
cmp
shr
mov
jb
jb
es
ret
cdq
and
push
ret
adc
mov
sbb
jno
dec
cdq
bound
sbb
inc
pop
cmp
cmp
cdq
mov
dec
pop
xchg
ret
mov
mov
add
sbb
dec
xchg
cmp
ud0
xor
jo
lock
mov
neg
fstp
inc
jne
ret
call
ja
out
ficom
bound
jg
sar
mov
jmp
mov
popf
pop
rol
mov
test
ret
idiv
inc
daa
mov
sbb
push
(bad)
out
xchg
push
push
pop
icebp
xchg
sbb
inc
dec
lahf
push
mov
xchg
pop
xor
bound
pop
cmp
push
es
fadd
pop
or
mov
xchg
push
pop
push
push
mov
sahf
xcrypt-cfb
cmps
popa
pop
es
xlat
xchg
pusha
mov
neg
fstp
jo
mov
in
mov
cmc
fidiv
xchg
jo
mov
je
mov
ret
(bad)
cwde
xor
jb
mov
and
addr16
xchg
push
push
xor
xor
cmp
cmp
sub
mov
jo
xor
cmps
mov
mov
push
mov
adc
adc
adc
aad
xchg
dec
adc
mov
mov
(bad)
adc
inc
aad
push
pop
mov
xor
js
jae
sbb
inc
outs
xor
fnstenv
fcomp
xchg
jle
mov
jg
(bad)
daa
nop
mov
aad
fwait
sbb
nop
arpl
jle
mov
mov
mov
outs
pop
mov
and
add
adc
inc
mov
cmp
dec
xchg
inc
xchg
dec
xor
xlat
sbb
xchg
ror
dec
fld
adc
pop
push
adc
mov
inc
in
dec
call
and
pop
push
mov
mov
addr16
aad
fidiv
cmp
addr16
push
xor
adc
jp
shl
loop
sbb
iret
and
mov
xchg
adc
dec
fcmovb
inc
mov
mov
bound
adc
sbb
inc
bound
or
sbb
fcomp
push
mov
ret
sbb
cmps
pop
sub
(bad)
jns
or
cmps
nop
jmp
sahf
xchg
fisttp
sub
cmp
mov
in
fwait
call
xchg
(bad)
adc
mov
sar
nop
adc
xor
mov
jne
bound
mov
jbe
mov
sbb
fisttp
add
xor
popa
loope
push
jb
xchg
adc
dec
adc
(bad)
fidiv
jbe
xor
cmp
xchg
rol
xchg
ret
mov
sub
cli
ret
cmp
ret
mov
push
cwde
add
inc
fsubr
popf
fisubr
stos
mov
out
nop
pop
addr16
stos
sbb
fisttp
pop
sub
xchg
fistp
ret
mov
pop
add
cmp
out
xchg
push
icebp
jle
pop
pop
mov
test
xor
mov
jb
mov
mov
sub
in
push
xchg
(bad)
mov
pop
xchg
mov
pop
in
sub
aaa
rcl
sbb
push
mov
xchg
aad
shl
rcl
fwait
or
mov
in
ins
push
ret
aam
popa
xor
gs
sbb
sbb
cdq
fnsave
xchg
(bad)
push
inc
adc
dec
sub
adc
inc
pop
mov
pop
repz
lea
enter
xchg
mov
pop
sti
inc
mov
lods
mov
mov
pop
add
pop
stos
fcomp
call
andps
mov
fisubr
xchg
adc
fwait
push
push
iret
pop
push
pop
mov
es
fwait
aam
fmul
setne
xchg
mov
rcr
ret
iret
mov
movs
adc
mov
lds
jbe
test
pop
cmp
adc
xchg
(bad)
rcr
mov
mov
dec
inc
mov
mov
xchg
mov
mov
rol
pop
jmp
sbb
inc
sbb
inc
rcr
mov
cmps
inc
pop
mov
cmc
ret
mov
mov
sti
les
xor
clc
cwde
pop
jmp
sub
xchg
xchg
cmc
mov
mov
cwde
adc
inc
xor
pop
xchg
push
cdq
popf
ja
adc
adc
jnp
jns
inc
loop
xchg
ds
add
cdq
mov
mov
ret
mov
out
xchg
adc
fwait
in
jle
test
ins
adc
fwait
mov
test
xchg
mov
mov
adc
cmp
mov
cwde
cdq
jmp
sbb
stos
pop
cdq
pushf
mov
in
aad
adc
mov
inc
outs
jnp
je
data16
push
pop
retf
pop
enter
add
xchg
adc
mov
cmp
xor
sub
out
pop
pop
mov
inc
fcomip
scas
push
stos
mov
pusha
xor
pop
dec
gs
fldenv
vpmovzxbw
xchg
cdq
ss
bound
mov
pop
je
xchg
push
in
pop
out
adc
les
mov
push
xchg
leave
mov
xchg
adc
pop
mov
add
or
xchg
sbb
pop
js
xchg
shl
fcomp
fiadd
xlat
test
mov
out
xchg
xchg
adc
into
adc
popf
(bad)
mov
call
hlt
pop
mov
cmps
xchg
jp
mov
xor
js
push
rol
call
adc
ret
mov
mov
jmp
xor
jmp
xchg
sbb
add
ret
ret
jne
xchg
gs
mov
ret
aad
sbb
lock
xchg
loope
pop
mov
inc
pop
in
ret
mov
hlt
push
pop
rcr
mov
lahf
add
ficom
fnstcw
mov
inc
push
jg
sbb
xchg
and
imul
mov
push
fst
out
ret
lea
fcomp
jp
icebp
jle
mov
ja
jle
mov
(bad)
cwde
fcom
fidiv
ror
pop
movs
ret
add
jno
lock
push
pop
or
xchg
pop
push
pop
dec
scas
mov
inc
pop
xchg
bound
retf
adc
jb
sub
xor
cmp
inc
mov
fwait
je
adc
xchg
adc
adc
xchg
sbb
xchg
jmp
push
jo
popa
cmps
sbb
adc
mov
jo
lea
rcr
pushf
int3
cwde
test
pushf
cmc
pop
cli
ret
cmp
jnp
mov
xchg
daa
pop
sahf
xchg
adc
pop
cs
cld
pushf
inc
pop
push
loop
rcr
mov
add
xor
frstor
pop
cmp
mov
out
sbb
xor
xor
xlat
ffree
push
and
dec
pop
das
fidivr
nop
mov
pop
aam
les
adc
add
add
pop
mov
xchg
pop
xchg
inc
mov
ret
mov
pop
xchg
xor
fwait
xor
mov
push
fcmove
xchg
mov
daa
divps
in
jnp
cdq
xchg
jnp
cmps
push
inc
nop
pop
push
das
or
mov
data16
stos
pop
retf
out
les
mov
jecxz
xchg
mov
inc
push
fwait
loope
adc
fstp
xchg
jg
fnstenv
mov
mov
enter
cmp
mov
lahf
xchg
or
xchg
sbb
jae
xchg
mov
mov
mov
stos
loope
cwde
cs
call
xchg
push
mov
mov
cld
pushf
xor
loop
rcr
mov
int3
inc
sbb
fist
jg
mov
cwde
mov
inc
or
pushf
push
imul
mov
push
(bad)
in
les
mov
sbb
dec
sbb
ror
fwait
xchg
fadd
fwait
or
or
adc
fnstcw
xchg
nop
mov
rcr
dec
lds
enter
push
cdq
adc
pop
call
aad
pop
adc
xor
xchg
or
pop
fbstp
push
mov
ret
in
sbb
push
pop
pushf
xor
dec
fcmovne
nop
outs
ret
mov
mov
inc
adc
jo
dec
pop
retf
mov
cdq
out
sbb
nop
sbb
fld
xchg
fadd
shr
mov
xchg
mov
push
push
sbb
(bad)
fwait
cmp
cdq
(bad)
stos
pop
mov
push
inc
push
mov
movs
pop
add
push
pop
push
fbld
dec
push
dec
adc
mov
cwde
add
outs
stos
leave
xchg
fistp
test
pop
mov
cmps
sub
shr
adc
push
mov
adc
add
sub
mov
test
adc
push
dec
xor
rcl
pop
pop
fldl2t
cmp
inc
fild
cmp
mov
sub
dec
popf
fs
mov
aad
mov
(bad)
mov
inc
jle
lahf
call
cmp
xchg
pop
mov
pop
adc
fmul
pop
cwde
cdq
push
push
mov
ret
test
xor
xchg
dec
pop
jg
mov
xor
cwde
sahf
cmp
inc
xor
pop
inc
pop
push
sbb
bound
mov
mov
adc
push
sbb
jg
pop
adc
mov
cs
mov
ja
cdq
nop
inc
sbb
stos
xchg
inc
xchg
mov
mov
mov
inc
fbld
outs
xchg
xchg
or
mov
cmc
cwde
xor
fidiv
push
dec
lds
mov
xor
inc
fild
pop
enter
fcmovne
push
call
xchg
and
sbb
xchg
pop
into
pop
cmp
aam
mov
mov
mov
mov
mov
push
xor
inc
(bad)
mov
push
fsubp
dec
aam
adc
stos
pop
mov
test
push
cdq
fwait
lahf
fwait
add
inc
xchg
arpl
sbb
lods
fldl2e
fisttp
xchg
cdq
inc
mov
or
mov
js
inc
push
mov
push
(bad)
push
jp
xchg
adc
fwait
shl
inc
sbb
pop
(bad)
xchg
xlat
inc
xchg
push
(bad)
push
jb
push
cwde
ret
pushf
xor
pop
add
test
nop
clc
xor
test
imul
xchg
lahf
xchg
mov
inc
push
(bad)
fisubr
dec
call
lsl
xchg
inc
outs
adc
xchg
cld
xchg
mov
test
push
xor
push
sbb
xchg
jb
ret
xchg
xchg
xor
hlt
inc
mov
lock
div
xchg
push
cmps
fidivr
add
mov
(bad)
fwait
pop
add
mov
push
adc
mov
mov
push
ret
cmp
adc
mov
adc
pop
ss
out
nop
xchg
cld
mov
fstp
ror
dec
push
dec
dec
ficomp
push
cwde
jbe
xor
daa
xchg
dec
push
cmp
jb
in
mov
outs
daa
fld
mov
mov
mov
pop
hlt
ret
fs
inc
fwait
retf
mov
mov
xchg
stos
xchg
pop
pop
rcl
bound
or
ret
jb
mov
cwde
sahf
loop
fstp
adc
cmp
jge
adc
je
mov
rcr
pushf
addr16
push
adc
jnp
mov
mov
retf
mov
stos
into
mov
mov
pop
mov
das
sbb
lahf
sbb
repz
xor
xchg
ffreep
adc
cmc
outs
push
pop
sbb
xor
pop
push
xor
mov
xchg
adc
push
mov
ret
jbe
sub
ds
mov
hlt
popa
fidiv
ja
xchg
xchg
add
sub
fistp
xchg
loope
xchg
or
push
pop
mov
cwde
jp
inc
inc
fwait
std
test
adc
call
sub
mov
xchg
idiv
int
jmp
push
dec
nop
cmp
push
es
adc
pop
scas
xlat
pop
xchg
mov
pop
mov
mov
call
bound
out
push
mov
rcr
adc
cs
xchg
lahf
rol
xchg
fwait
rcr
adc
dec
fnstcw
(bad)
xchg
es
pop
xchg
fwait
ds
jb
inc
mov
pop
dec
fild
adc
test
cmp
mov
pop
xchg
cmp
xchg
adc
popa
pop
dec
adc
push
pop
rcr
adc
in
mov
pop
retf
int3
sbb
mov
pop
test
(bad)
mov
ret
mov
cmps
mov
dec
xchg
sbb
pop
fisubr
test
adc
push
mov
xchg
mov
stos
pop
mov
pop
fist
mov
ret
jae
jge
sub
(bad)
cmp
cmp
popf
xchg
or
pop
adc
mov
xor
sbb
sbb
pop
adc
push
xchg
shl
mov
(bad)
loope
adc
mov
mov
or
dec
pop
mov
fistp
into
ret
xchg
mov
into
mov
test
push
add
fwait
inc
xlat
pop
loop
sbb
arpl
stos
or
pop
leave
or
sbb
jb
sub
mov
in
mov
daa
mov
xor
call
call
add
push
out
mov
xlat
aaa
jno
rcr
mov
paddusb
push
sbb
push
test
mov
ss
gs
mov
out
addr16
xchg
paddw
push
push
inc
pop
dec
ret
mov
fdivr
xor
and
xchg
xchg
inc
icebp
bound
xchg
xchg
fisttp
cwde
or
cmp
movs
fcmovne
mov
cwde
inc
sti
retf
fsubrp
mov
lds
dec
inc
fisttp
mov
rcr
push
mov
arpl
nop
pop
add
xchg
pop
add
inc
(bad)
mov
jb
daa
bound
adc
xchg
mov
daa
loope
xchg
sbb
jae
inc
pop
es
xchg
mov
popf
and
push
xor
aaa
or
aaa
ret
(bad)
mov
mov
mov
dec
add
mov
xor
and
movs
pop
jb
inc
xlat
xor
pop
add
xor
or
inc
hlt
xor
out
pop
and
cmp
push
sbb
scas
push
sahf
pop
lahf
outs
into
pop
cmps
rol
pop
push
outs
sbb
loopne
pop
xor
not
or
push
add
push
or
inc
mov
das
xchg
bound
push
xor
mov
sahf
lahf
xlat
(bad)
xlat
xchg
je
or
ret
mov
mov
xor
call
das
adc
dec
mov
inc
push
cmp
mov
jp
adc
sbb
call
out
cwde
fbld
jge
sub
pop
inc
mov
in
xchg
xchg
push
test
test
pop
sub
add
mov
(bad)
rcl
cwde
sahf
push
mov
ret
jb
mov
cmp
adc
mov
stos
mov
jmp
push
sbb
push
mov
add
fchs
adc
cwde
xor
pop
push
cmp
(bad)
call
inc
mov
xor
push
pop
jle
mov
inc
sub
dec
rcl
ret
mov
mov
pop
ret
mov
pop
sbb
push
inc
sar
pushf
mov
lahf
fcmovbe
pop
div
pop
push
xlat
aaa
sbb
test
mov
xchg
push
mov
jle
cdq
cmc
mov
aad
mov
mov
pop
icebp
dec
pop
sbb
sbb
mov
mov
mov
mov
mov
jle
mov
inc
pop
movs
jb
add
dec
sub
js
mov
ret
lahf
inc
inc
mov
aaa
call
outs
popf
cmp
xchg
xchg
add
xchg
and
leave
sbb
inc
pop
jecxz
and
call
xchg
pop
xchg
push
adc
ret
js
int3
mov
cld
ins
sbb
addr16
dec
mov
fldcw
pop
adc
xor
jbe
mov
rcl
int
aad
les
mov
xchg
daa
cmp
mov
cwde
rol
jl
lds
ins
adc
call
mov
sbb
xor
cmp
cmps
push
mov
stos
push
ds
les
out
sbb
pop
jecxz
mov
push
cwde
add
sbb
test
adc
push
call
pop
rcl
test
ja
cdq
push
int
sub
mov
sbb
xchg
sub
dec
add
push
mov
ret
mov
push
inc
ss
fwait
stos
pop
(bad)
xchg
push
cmp
fcmovb
cwde
cmps
xchg
xchg
pop
mov
ret
mov
fild
stos
pop
into
pop
sub
out
fisttp
push
push
not
mov
push
sbb
popf
cmp
pop
xor
xchg
mov
shl
xchg
push
mov
cdq
cdq
sbb
shl
inc
fstp
mov
cmp
sbb
pop
push
int3
cmp
add
aad
fsub
std
fst
mov
cmp
adc
(bad)
fld
xor
dec
pop
add
cwde
popa
cmc
rol
neg
xor
jb
xchg
test
jnp
inc
xchg
sbb
popa
(bad)
fisub
mov
adc
xchg
retf
xchg
push
adc
cmps
push
test
jmp
fistp
inc
xchg
or
fsubr
sahf
jle
mov
das
popf
cmp
jb
inc
aam
and
cwde
aad
push
mov
hlt
outs
fimul
test
pop
pushf
cmps
pop
dec
xchg
test
mov
sub
fwait
cwde
xlat
push
adc
cmps
nop
mov
scas
pop
stos
mov
xor
call
xchg
cmp
sbb
push
mov
inc
mov
inc
jns
fwait
call
xchg
sbb
test
out
cwde
sub
xchg
push
sbb
rcl
ret
xchg
prefetcht2
mov
fwait
adc
call
mov
frstpm(287
popa
fucom
stos
pop
xor
xchg
mov
push
xor
xchg
xlat
pop
adc
mov
shr
xlat
xor
aad
adc
inc
out
adc
xchg
mov
sbb
xor
xor
xor
je
mov
xor
cmp
shl
pop
push
pop
pop
cmp
fistp
xor
jo
and
loope
fist
fdivr
mov
mov
rol
push
mov
mov
lds
test
(bad)
divps
ffree
lahf
or
fsubr
mov
jbe
lods
mov
push
xchg
sbb
xchg
jbe
repnz
push
cmp
xchg
pop
bound
mov
dec
sar
mov
xchg
cmp
(bad)
mov
iret
dec
out
sbb
fistp
lahf
mov
fdiv
outs
xchg
dec
fucom
xor
mov
push
pop
xor
mov
in
pop
add
mov
inc
push
mov
retf
cwde
mov
popa
fld
setbe
cmps
pop
or
pop
call
call
adc
popa
sbb
mov
lods
push
xor
adc
xor
and
mov
rcl
push
adc
adc
mov
sbb
outs
xor
mov
push
xchg
pop
xchg
push
or
pop
mov
mov
cwde
outs
ds
push
lahf
push
addr16
ja
int
test
scas
sbb
push
sbb
stos
xchg
pop
pop
mov
pop
pop
mov
adc
inc
aad
(bad)
push
arpl
xor
cmp
test
push
xor
xor
mov
mov
pushf
mov
ficomp
mov
xchg
push
cmps
popf
cdq
pop
mov
cwde
cmp
test
adc
push
fdiv
push
fwait
mov
cwde
push
loopne
pushf
(bad)
pop
xchg
aaa
dec
pop
scas
ja
mov
dec
push
jg
pushf
ja
xor
pop
push
inc
jb
mov
cmps
xchg
idiv
cdq
pop
stos
pop
jp
mov
adc
(bad)
ret
popf
out
push
mov
and
push
push
xchg
jg
pushf
adc
ret
inc
mov
enter
sbb
push
aas
mov
cmps
nop
xchg
sbb
mov
mov
jb
cmp
icebp
movs
pop
push
mov
test
push
mov
stc
xchg
sbb
aaa
ficom
sbb
fwait
adc
pop
bound
sbb
mov
mov
(bad)
xlat
sub
pop
nop
xlat
xchg
jno
loope
sahf
rcl
jae
jmp
inc
sbb
dec
shl
push
ss
xor
xchg
rcr
sub
mov
ficom
loopne
fnstsw
xchg
or
xor
pop
push
push
ret
fwait
xchg
xchg
stc
pop
sub
push
xlat
xchg
popa
inc
rcr
mov
fist
cmp
xchg
cmp
sub
pop
mov
cmps
pop
cmps
mov
jp
pop
mov
mov
pop
jb
xchg
cmps
mov
ds
cmp
fstp
fld
cdq
lahf
std
xchg
sbb
cmps
xchg
aaa
(bad)
push
xor
nop
or
loope
lahf
pop
(bad)
daa
ret
mov
pop
inc
es
aam
pop
add
xchg
xchg
xchg
cwde
es
mov
retf
or
fsubr
fiadd
pushf
stc
pop
jp
ror
fwait
lahf
addr16
pushf
call
sbb
mov
and
adc
rcr
xor
js
mov
xlat
fldenv
pop
cmp
add
nop
mov
in
xlat
add
mov
pop
jo
xor
cmps
mov
fsub
push
xchg
adc
pop
movs
push
mov
mov
xor
pop
adc
fcom
push
adc
mov
pop
das
adc
mov
mov
pushf
xor
jg
ds
mov
xor
cmp
adc
xchg
adc
pop
add
xchg
cmp
aad
cmps
push
cdq
push
(bad)
xchg
and
cmp
cmp
fdiv
or
fcom
adc
(bad)
dec
push
mov
xchg
xor
jbe
xor
jbe
xchg
mov
iret
ret
xchg
cmps
aam
and
cwde
(bad)
in
cmps
imul
and
add
pusha
imul
sbb
ud1
pop
jb
mov
jl
pop
mov
arpl
call
mov
xchg
or
mov
mov
fistp
rcr
adc
add
icebp
setns
ret
cmp
sub
mov
pop
stc
sar
jbe
mov
adc
fwait
les
mov
xchg
call
outs
cmc
sbb
push
xor
aad
xchg
push
(bad)
mov
sbb
or
fistp
dec
pop
pop
xchg
arpl
lahf
mov
scas
loope
sar
popa
push
mov
xchg
aam
xchg
mov
xchg
cmp
fwait
aad
fld
or
dec
stos
call
mov
inc
push
rol
mov
adc
popf
cmp
xchg
cwde
mov
ss
jae
ret
sbb
cmp
lods
pop
inc
jg
xor
adc
dec
shl
add
jae
dec
ror
push
mov
test
push
push
pop
xchg
in
jge
dec
fdiv
movs
pop
add
cmp
adc
mov
in
les
mov
adc
xor
es
xchg
pop
inc
in
popf
fistp
(bad)
inc
nop
or
sbb
aad
fcomp
sbb
jbe
mov
dec
push
push
adc
xchg
sub
pop
mov
sbb
cwde
pushf
pop
icebp
push
aam
fwait
dec
pop
mov
mov
xchg
xor
in
push
xchg
and
xor
ffreep
pop
stos
fmul
xchg
xchg
and
mov
and
adc
out
mov
pop
mov
mov
dec
sub
jbe
xchg
pop
mov
xchg
fst
rcl
push
loope
push
xor
pop
xor
adc
sbb
(bad)
adc
sub
xchg
adc
(bad)
xor
ds
cmp
mov
xchg
(bad)
not
xchg
push
xor
js
repnz
sbb
inc
push
fwait
sahf
inc
ja
dec
ret
push
test
fdivr
pushf
inc
push
mov
fwait
xor
dec
fst
xchg
xchg
add
xchg
cdq
sbb
mov
add
icebp
adc
cmp
mov
daa
lahf
adc
adc
daa
push
push
xchg
stos
xchg
(bad)
mov
mov
sahf
outs
add
adc
xor
push
in
fidivr
xlat
adc
fld
mov
sub
cmps
push
xchg
scas
addr16
lock
pop
push
aaa
push
xchg
mov
hlt
ins
(bad)
out
mov
cs
iret
cmp
xlat
ficom
mov
addr16
shl
sub
xchg
sub
xchg
pop
std
add
cmp
test
fistp
iret
shl
icebp
test
sbb
ret
push
sbb
mov
push
inc
adc
add
mov
push
cmp
(bad)
mov
sar
push
dec
mov
in
lahf
sbb
add
test
xchg
sbb
mov
sbb
mov
cwde
xlat
enter
lahf
pop
xor
adc
stos
sbb
fstp
nop
scas
xor
xchg
call
pop
outs
ds
call
pop
mov
call
jmp
pop
cld
add
call
mov
mov
and
pop
pop
mov
pop
sbb
xchg
in
adc
(bad)
mov
ins
sbb
rsqrtps
sub
sbb
xlat
(bad)
xchg
fwait
cmp
dec
(bad)
pop
pop
daa
and
aaa
stos
pop
cdq
sbb
in
bndstx
idiv
retf
into
mov
inc
(bad)
jae
mov
xchg
shr
rdtsc
push
cmp
pop
push
mov
ss
outs
das
xchg
icebp
pop
inc
push
mov
jle
dec
fldcw
(bad)
mov
mov
sar
fidivr
xor
retf
cmp
test
xchg
(bad)
cmp
cdq
pop
add
(bad)
or
push
xchg
and
lahf
xchg
test
mov
xchg
mov
popa
int
cmp
add
and
push
ss
popf
jp
(bad)
lds
dec
mov
adc
inc
xchg
cmps
ret
mov
xor
call
pop
nop
(bad)
adc
dec
adc
jbe
out
jns
mov
in
dec
(bad)
cmp
adc
sub
mov
cmps
sbb
sahf
sub
xchg
ror
push
mov
ret
push
cmp
inc
push
pop
cdq
aaa
dec
sbb
pop
cmp
adc
xor
out
mov
adc
push
mov
mov
jp
xchg
push
push
push
add
push
mov
xchg
xor
cwde
push
or
das
pop
add
dec
pop
push
xchg
mov
jb
and
ss
inc
fild
dec
push
sub
pushf
cmps
shr
jnp
and
aam
push
cmc
push
sar
xchg
shl
mov
fld
xchg
sbb
xchg
mov
fiadd
sbb
pop
call
push
sbb
les
dec
not
sbb
xchg
xchg
push
sbb
push
loope
xor
shl
fidivr
mov
mov
xchg
(bad)
call
shl
xchg
pop
xchg
adc
ret
mov
adc
jle
mov
pop
add
mov
add
mul
xchg
sub
xchg
cmp
(bad)
sbb
mov
test
xchg
clc
add
and
cmp
aad
xchg
push
fisubr
pop
mov
push
cmp
sbb
xor
xchg
cwde
sub
pop
adc
outs
xor
std
pop
mov
je
xor
(bad)
call
cmp
jo
xchg
inc
mov
pop
shl
cmc
pop
xor
fwait
nop
xchg
mov
jb
popa
das
adc
xchg
dec
push
sbb
(bad)
adc
mov
hlt
add
inc
fisubr
adc
and
mov
adc
(bad)
xor
pop
das
mov
cmp
adc
pop
outs
push
fidiv
adc
fistp
lods
and
call
push
retf
fisttp
sahf
mov
push
sub
rcr
dec
adc
xchg
cdq
add
es
adc
scas
ret
push
mov
idiv
sbb
pop
aam
pop
sub
inc
adc
out
adc
push
repz
cmp
xchg
loop
shl
mov
fcomip
xchg
inc
push
mov
cmp
add
mov
mov
xchg
sub
fst
xchg
call
retf
dec
xchg
test
xchg
pop
loopne
push
sbb
mov
and
mov
icebp
mov
rcl
xchg
shl
jbe
mov
arpl
xor
cwde
out
out
mov
nop
sbb
and
(bad)
xchg
jmp
sbb
push
fiadd
icebp
ror
mov
outs
ret
std
mov
xchg
xor
int
or
or
ret
or
jge
mov
dec
pushf
lahf
fnstenv
fld
mov
ds
inc
sbb
and
call
jb
sub
test
lahf
xor
gs
sahf
xor
xor
arpl
xchg
dec
mov
inc
pushf
xor
xchg
adc
push
mov
ret
popf
rcr
mov
and
xchg
rdtsc
aam
rol
mov
out
mov
push
mov
je
sub
add
fild
xor
dec
sbb
rcr
cmps
push
dec
pop
sbb
xchg
sbb
mov
push
stc
dec
fwait
mov
arpl
aam
cwde
sub
dec
mov
mov
cld
cwde
dec
and
mov
pop
cmp
dec
dec
pop
out
sbb
inc
pop
jae
xchg
push
stos
pop
daa
mov
les
shr
mov
sbb
dec
test
sar
fist
rol
sub
pop
pop
cmps
aad
mov
push
mov
xchg
std
jb
mov
sub
sbb
(bad)
mov
inc
or
push
xlat
mov
push
mov
out
xchg
mov
test
cmc
adc
sbb
xchg
mov
push
xor
mov
in
pushf
test
ret
push
mov
and
pop
popa
popf
fisttp
sbb
push
mov
adc
ret
mov
mov
push
add
test
xchg
mov
mov
add
cmp
cwde
div
xor
fld
mov
mov
aad
push
push
pop
mov
xchg
sbb
arpl
sub
add
adc
inc
mov
shl
mov
xchg
inc
push
sub
inc
pop
pop
or
call
mov
add
fdiv
xchg
jb
les
jle
mov
inc
ficom
adc
arpl
test
into
cwde
adc
inc
lds
bound
push
push
xor
or
mov
cmp
inc
adc
fwait
(bad)
call
mov
je
sbb
sahf
mov
outs
xchg
sbb
sbb
adc
mov
adc
psrlw
fistp
cs
movs
push
leave
mov
shl
pandn
and
(bad)
push
mov
cwde
ret
sahf
dec
ror
sbb
bound
mov
cwde
mov
daa
(bad)
fistp
and
inc
je
arpl
xor
pop
adc
neg
nop
loop
sbb
rcl
dec
lahf
in
call
and
pop
(bad)
(bad)
aad
daa
sbb
sub
not
mov
call
push
mov
ret
cmps
mov
xor
pop
cmp
dec
int3
mov
call
push
pop
adc
xor
xor
rcl
ja
dec
dec
sbb
lahf
xchg
sbb
rol
mov
push
cmps
xchg
cmp
repz
mov
mov
mov
fwait
xchg
xchg
inc
xchg
bound
call
call
iret
dec
(bad)
out
sbb
xor
pop
rcr
mov
jg
xor
xor
cmp
mov
aam
cdq
cs
sbb
in
fidiv
call
sub
cmp
not
pop
sbb
shl
xchg
shl
shr
fwait
fwait
xchg
push
mov
neg
adc
mov
dec
push
cmp
pop
xchg
ret
movs
xchg
inc
bound
ja
push
fld
mov
mov
push
ss
push
jnp
mov
cdq
pop
add
or
cdq
xchg
imul
add
adc
mov
inc
ror
cmp
jg
fucomip
xchg
sbb
xlat
pushf
int3
rcl
dec
xchg
sub
cmps
push
ja
mov
sbb
mov
pop
inc
ret
adc
push
mov
rol
mov
loop
fwait
dec
imul
sbb
mov
fistp
inc
setnp
pop
cwde
push
mov
ret
aam
dec
sbb
cs
sbb
fsub
popa
cdq
mov
add
add
adc
xlat
loope
xchg
sub
xchg
jp
xchg
push
es
(bad)
cmp
call
xchg
or
xchg
aaa
dec
push
call
neg
stc
dec
xchg
pop
sbb
in
movs
sbb
mov
pop
xchg
inc
loopne
xchg
xchg
pop
popf
jg
popf
fcmovu
pop
xchg
pop
mov
xchg
int
mov
pushf
add
ins
sbb
test
add
fnstcw
mov
cwde
(bad)
(bad)
inc
cmps
mov
or
stc
mov
mov
sbb
nop
xchg
xchg
fadd
pop
sbb
idiv
mov
in
sub
mov
sbb
push
add
(bad)
scas
pop
xor
xor
add
ret
dec
aad
pop
mov
mov
mov
mov
adc
cmp
adc
rcl
fwait
inc
sahf
add
adc
mov
cdq
jb
add
mov
cdq
add
add
mov
mov
xor
xor
cmp
sbb
xchg
xchg
inc
in
fild
jg
push
(bad)
adc
pop
inc
xchg
mov
pushf
adc
ret
xchg
mov
xchg
nop
xchg
out
mov
neg
fstp
out
xchg
ret
fistp
dec
lea
call
mov
push
jg
fcomp
add
scas
sub
or
xchg
xchg
xor
adc
mov
call
div
pop
(bad)
xchg
cmps
pop
mov
aam
jae
xor
jbe
xor
xchg
mov
jo
xchg
add
loope
mov
xchg
push
xchg
inc
mov
jbe
xchg
xchg
pop
xor
mov
sbb
ss
mov
xchg
adc
sbb
xor
xor
cwde
retf
ja
dec
mov
cdq
inc
xchg
cmps
cwde
xchg
mov
or
mov
call
ja
ds
xchg
pop
jbe
mov
mov
call
popf
cmps
push
aaa
jnp
or
ret
push
xchg
push
mov
stc
dec
sbb
jno
pop
push
xchg
push
cmp
mov
push
mov
push
push
inc
dec
adc
not
aam
add
mov
inc
imul
(bad)
aad
pop
jae
cwde
in
sbb
dec
mov
mov
ret
mov
daa
fimul
cwde
adc
add
sbb
mov
scas
int
test
xchg
push
rcl
jg
push
nop
push
add
xchg
cs
dec
pop
aaa
cs
aad
sar
xor
mov
sbb
pop
ds
xchg
push
push
lds
pop
sar
pop
adc
inc
cmc
inc
push
mov
setns
fistp
addr16
adc
inc
pop
scas
pop
fucom
and
push
cdq
push
icebp
movhps
adc
out
aam
push
sbb
pop
pop
pop
mov
fdivr
call
loopne
fild
mov
sub
cdq
inc
xor
xchg
(bad)
rcl
aad
aam
or
(bad)
adc
push
add
push
dec
inc
call
fdivr
(bad)
xor
fisttp
test
mov
sbb
xor
xchg
mov
push
xchg
push
shl
(bad)
xchg
dec
mov
dec
pop
mov
mov
sahf
xchg
mov
cdq
fild
pop
xchg
mov
xchg
mov
xor
neg
xlat
js
mov
fwait
and
dec
push
neg
lods
jb
mov
popa
fmulp
xlat
(bad)
(bad)
int
sub
xchg
jle
mov
and
pop
mov
xor
mov
xchg
push
push
adc
push
pop
cmp
fidivr
aad
xchg
adc
pop
push
xchg
xor
rcr
out
fldcw
rol
dec
adc
rcr
add
inc
push
jmp
mov
sub
xchg
xchg
add
dec
mov
pop
inc
imul
ret
cmp
(bad)
es
sar
pop
push
push
arpl
(bad)
js
mov
or
pushf
xchg
xor
lds
adc
popa
push
mov
ds
sbb
xchg
cmps
fisttp
push
stos
pushf
test
out
sahf
sub
and
dec
xchg
pop
xchg
add
ds
mov
data16
dec
sbb
pop
inc
fcomp
iret
shr
mov
mov
push
xor
mul
xchg
xchg
xchg
shl
ins
pop
enter
cmp
push
jae
pop
add
pop
and
div
fiadd
leave
sbb
xchg
out
pop
sub
rcr
pop
xchg
rcr
push
pushf
call
fsubr
mov
adc
push
xchg
out
test
pop
xchg
pop
push
outs
jnp
xor
push
xchg
mov
xor
mov
cmc
ret
shl
add
xchg
outs
fmul
pop
cmp
xchg
cmps
xchg
mov
pop
(bad)
pop
pop
pushf
(bad)
fbld
xchg
pop
pop
test
imul
enter
sub
push
outs
xchg
sub
cmp
xchg
nop
xor
mov
add
and
call
sub
(bad)
cmp
inc
push
cmp
push
xor
and
out
not
lock
lahf
pushf
mov
push
sub
xchg
mov
pop
push
inc
push
mov
(bad)
cmc
adc
xchg
in
movs
push
xor
sbb
sbb
aam
pop
mov
xchg
pop
dec
mov
jo
xor
jbe
xchg
fimul
iret
cwde
dec
cmp
xchg
push
inc
sbb
dec
cwde
sub
aam
adc
fist
test
in
movs
xor
push
arpl
pop
or
stc
or
sbb
ret
shl
mov
sbb
cmps
pop
mov
(bad)
pushf
cdq
sub
push
mov
jb
xchg
push
mov
call
push
stc
and
fnsave
push
lods
sbb
xchg
rcl
push
bound
ds
ja
mov
pop
fstp
cmp
rcl
mov
dec
test
rcl
aad
inc
xchg
xor
ss
shld
inc
push
xlat
nop
adc
add
xchg
xchg
or
mov
push
xor
mov
mov
add
stos
das
ret
iret
mov
dec
and
bound
popf
jg
mov
shl
xor
js
xor
mov
cwde
ret
sub
push
cmp
mov
bound
push
adc
xor
or
mov
imul
outs
daa
xlat
mov
cs
push
psrld
dec
(bad)
mov
inc
xchg
in
fwait
pop
xchg
push
dec
pop
sub
push
mov
adc
inc
sahf
dec
add
inc
xchg
xchg
xchg
mov
push
mov
xchg
shl
jle
es
or
mov
pop
test
sar
dec
push
jae
xchg
inc
sbb
add
mov
xchg
xchg
xlat
(bad)
fimul
test
push
ret
push
mov
inc
out
stos
stos
xchg
pop
xlat
add
cmc
pop
loop
pop
pop
not
adc
cmc
push
adc
mov
fnstenv
push
add
push
cmp
lods
cwde
add
jnp
xchg
adc
fadd
fistp
pop
js
mov
sub
fistp
mov
imul
rcr
mov
ja
clc
add
xlat
std
adc
xlat
xchg
or
xchg
aaa
sete
or
sub
add
pop
enter
sub
xchg
mov
fild
push
mov
cs
push
clc
dec
push
jae
aad
shl
ds
fnsave
mov
pop
mov
push
neg
mov
movs
xchg
jmp
xchg
call
mov
sbb
pushf
jae
sub
pop
dec
pop
test
sbb
inc
ror
mov
call
pop
add
xchg
call
pop
xchg
and
fwait
adc
(bad)
pop
cwde
sbb
gs
mov
dec
pop
dec
out
pop
xor
je
xchg
ficom
fmulp
push
xchg
sar
mov
mov
fucomip
pop
fcom
ss
jb
inc
mov
jbe
mov
rcl
(bad)
add
cwde
xor
loopne
pop
jg
sbb
hlt
setle
outs
cmps
xlat
(bad)
ficom
psrlq
add
mov
pop
pop
cmp
fwait
lahf
sar
xchg
call
fimul
mov
xchg
stc
add
lods
ja
(bad)
loopne
mov
mov
cmp
fild
cmp
es
popf
push
mov
rol
cmp
ss
ins
scas
sbb
(bad)
jp
aaa
addr16
fild
and
mov
inc
mov
push
mov
and
inc
dec
xchg
rcl
int3
cmp
fcmovbe
adc
add
adc
adc
(bad)
dec
mov
nop
mov
jno
jle
mov
ins
mov
push
dec
fst
xchg
xor
jb
xchg
inc
mov
dec
sar
loope
pop
nop
sbb
xor
mov
stos
pop
neg
mul
xchg
sbb
cmp
lahf
add
fist
mov
xlat
cmp
xchg
push
xor
or
cmp
lock
mov
adc
or
mov
sbb
bound
sbb
xchg
jmp
test
pop
cmp
paddusw
pop
mov
ss
js
xor
jbe
xchg
fisttp
rcr
cmps
outs
mov
xor
adc
inc
mov
add
mov
nop
sar
popa
sbb
dec
add
dec
pop
xor
shl
mov
mov
push
(bad)
out
lahf
jae
mov
cdq
repz
mov
pop
mov
ror
pop
push
mov
push
clc
xor
out
push
fcomp
ret
(bad)
mov
bound
std
fnstenv
push
xchg
icebp
popf
call
shl
push
adc
ret
fwait
loope
pop
aaa
inc
mov
mov
test
xchg
cmp
mov
mov
fnstsw
inc
add
aad
pushf
je
mov
loopne
sar
mov
pop
cmps
frstor
dec
xchg
in
pop
xlat
pop
pop
(bad)
sbb
push
adc
push
ja
and
adc
dec
shl
adc
mov
xor
std
aam
inc
loope
fsubp
inc
out
xor
xchg
ret
call
xchg
ja
dec
xchg
or
dec
inc
lahf
dec
adc
push
jbe
arpl
push
cwde
aad
pop
fld
xchg
jmp
lods
xchg
jp
dec
ds
outs
cmc
xchg
xchg
inc
mov
fbld
adc
iret
push
add
mov
aad
call
popf
xchg
sbb
aam
and
outs
push
dec
pop
out
fldenv
mov
pop
xchg
sbb
outs
xlat
sub
call
mov
xor
sub
xchg
mov
push
mov
inc
pop
xor
lahf
xor
add
scas
test
add
mov
in
movups
fcomp
mov
jae
adc
jb
inc
pop
test
xchg
push
fst
sbb
and
pop
pop
xchg
dec
jg
ds
adc
inc
aad
rcr
xchg
addr16
push
mov
popa
inc
push
dec
mov
or
pop
cmp
mov
pop
cmp
mov
xor
test
mov
push
loope
push
sub
sub
fwait
adc
sbb
add
xor
out
xchg
rcl
xchg
out
pop
adc
ret
pop
cmp
inc
push
bound
xchg
loop
xchg
sbb
es
xchg
popf
push
shl
rol
aam
pop
add
dec
inc
pop
iret
adc
aad
jb
xchg
push
retf
sbb
das
push
sbb
xchg
sbb
mov
mov
loope
xchg
jmp
cdq
push
loopne
ror
idiv
xchg
shl
setg
mov
test
pop
mov
fbld
xor
pop
popf
or
fld
mov
pop
pop
cwde
idiv
mov
xlat
xchg
fst
ret
mov
inc
scas
sbb
fcom
pop
es
cmp
inc
push
cwde
push
xchg
rol
push
push
cs
sbb
xor
fsin
pushf
mov
cmps
push
retf
push
xchg
test
ret
mov
xchg
xchg
jnp
ja
mov
xchg
imul
cmp
adc
xchg
dec
adc
(bad)
(bad)
inc
pop
not
adc
shl
add
dec
sbb
shr
mov
cmps
pop
icebp
popa
xchg
cmp
cmps
fdivr
cmc
xlat
xor
loopne
call
inc
mov
jge
ficomp
out
pop
xchg
cwde
sub
pop
sbb
cmp
dec
and
adc
xchg
dec
fwait
pop
xchg
push
jle
mov
mov
cld
inc
cdq
cmp
lock
ror
cmp
adc
outs
dec
dec
(bad)
aaa
mov
icebp
dec
sbb
rol
xchg
adc
xchg
and
pop
sub
xor
mov
inc
mov
xchg
call
pop
nop
xchg
rcr
cwde
arpl
pop
push
scas
addr16
xor
pop
nop
pop
cdq
scas
(bad)
xlat
call
addr16
sbb
xor
cmp
cdq
sbb
ret
mov
imul
dec
aam
xchg
hlt
inc
fdivr
cwde
jg
inc
pop
fwait
sar
dec
lahf
pushf
fild
xchg
push
xor
fistp
xchg
add
sbb
adc
fadd
not
pop
jb
je
xor
sbb
(bad)
mov
and
xchg
dec
push
mov
outs
xchg
dec
add
xchg
fnsave
dec
xlat
call
xchg
fcom
cmp
cld
push
pop
pop
or
adc
xchg
ror
into
in
push
mov
pop
leave
add
lea
sbb
fcmove
int3
mov
inc
lods
test
pop
and
xchg
mov
push
idiv
inc
xchg
pushf
sbb
push
aam
ret
mov
jae
sbb
popa
fwait
inc
dec
ins
xchg
call
push
bound
lahf
ss
jo
outs
ret
push
rol
xor
xchg
cmps
cwde
or
and
xchg
push
cs
pop
adc
inc
js
xor
mov
cdq
(bad)
xchg
push
sbb
sub
pushf
dec
xchg
sub
xchg
sbb
xchg
sahf
loopne
(bad)
mov
mov
xor
jbe
scas
inc
mov
sbb
ins
xchg
or
xchg
lds
mov
sbb
fcomi
sub
mov
fnstenv
daa
sbb
push
push
retf
or
pop
push
sub
test
mov
mov
pop
or
sub
push
adc
mov
arpl
fnsave
mov
sbb
daa
push
bound
cwde
cmp
jbe
xor
add
loop
cwde
mov
rcl
xor
xor
push
push
rol
movaps
dec
xor
fcomp
pop
fisttp
sbb
mov
ret
jnp
pop
cmp
std
ins
adc
test
int
hlt
dec
sar
(bad)
in
xlat
ficom
pop
xchg
ret
push
aam
popa
sbb
pop
pop
rol
push
mov
aam
popf
pop
push
push
mov
push
dec
lea
fcomp
push
sbb
push
xchg
sub
xchg
cmp
mov
sub
jnp
loop
push
cld
push
mov
pop
inc
xchg
or
cld
xchg
adc
stos
push
mov
mov
cwde
mov
push
(bad)
fisttp
setb
fist
out
push
xchg
pop
xchg
neg
xchg
popa
(bad)
inc
lahf
cmps
fld
lods
push
mov
push
mov
push
cwde
jae
pop
xchg
in
pop
iret
xchg
push
xlat
mov
shl
add
adc
outs
fnstcw
nop
cwde
icebp
ins
popf
out
push
sub
xchg
sbb
add
outs
mov
call
jo
pop
xor
ficom
dec
cwde
outs
popa
adc
ds
sahf
es
push
out
sbb
enter
mov
add
add
(bad)
ss
xchg
sub
mov
in
(bad)
test
out
shl
ret
fsubp
dec
adc
xchg
cmp
push
or
in
(bad)
mov
mov
ret
pusha
out
pop
xor
out
(bad)
jg
sbb
add
cs
test
imul
fist
mov
div
out
sbb
add
xchg
pushf
xor
scas
mov
xor
xchg
adc
and
mov
fnstsw
ret
cdq
mov
push
ss
xchg
adc
fidiv
adc
(bad)
sbb
and
xchg
mov
cwde
add
inc
imul
push
call
xchg
lea
ret
inc
fcomi
pop
mov
(bad)
fld
push
xchg
aad
inc
adc
sbb
sahf
cmp
xor
xor
ss
in
xchg
push
xor
pop
xchg
mov
shl
and
sub
lods
fnstenv
fnstsw
mov
cmp
push
fcmove
loop
xlat
inc
sbb
sbb
cmc
(bad)
xor
fsub
jg
push
int3
mov
pop
mov
and
imul
dec
fnstcw
sbb
sbb
out
push
mov
arpl
sbb
dec
dec
call
adc
and
enter
mov
add
nop
inc
out
cmp
dec
adc
jb
iret
dec
fnstcw
xor
lods
pop
mov
xor
adc
cmp
addr16
dec
xchg
jg
push
aaa
sbb
cld
add
xlat
aaa
inc
fwait
adc
mov
inc
or
cmp
cmp
in
xchg
(bad)
ret
lahf
xchg
rcl
pop
aam
xor
cmp
push
pop
jb
loop
push
xor
mov
retf
mov
(bad)
lods
(bad)
mov
pop
test
sbb
pushf
fild
push
pop
pop
cmp
push
xor
add
aam
aad
into
and
out
fcomp
cmp
shl
outs
fiadd
adc
mov
inc
sub
in
cmc
push
jae
pop
xchg
stc
rcr
cs
in
xchg
xor
fisttp
adc
call
jae
adc
push
inc
push
mov
add
adc
push
popa
pop
push
dec
ret
push
hlt
ret
mov
mov
inc
mov
in
icebp
test
pop
pop
and
push
pop
cwde
jmp
pop
pop
xchg
xchg
xchg
ja
rcl
pop
imul
fcmovb
popa
pop
sbb
nop
(bad)
(bad)
pop
sub
push
xchg
pushf
bound
cmp
loope
nop
loopne
pop
add
adc
nop
rcr
xchg
adc
fsub
popf
retf
out
xchg
xchg
push
ret
pop
cmp
add
mov
rcr
inc
out
cmc
adc
sbb
xor
cmp
xchg
xor
xchg
(bad)
xor
jbe
xor
pop
adc
add
mov
add
mov
mov
aas
dec
out
popf
or
fidiv
arpl
xor
inc
fstp
xchg
mov
xor
popf
es
sbb
mov
fwait
push
xor
xor
push
sbb
xchg
lahf
sbb
shl
sahf
pop
xchg
fnstcw
mov
sbb
loopne
nop
sbb
xchg
push
aaa
out
cmp
xchg
js
mov
mov
stos
push
add
pop
hlt
mov
add
pop
pop
aaa
dec
ror
cmp
aaa
add
xchg
pop
lock
xchg
jg
sahf
test
and
or
mov
push
jg
adc
xchg
stos
push
cld
dec
xchg
call
pop
mov
test
xchg
cwde
cmps
ja
xor
pop
dec
pop
push
pop
test
aaa
bound
pop
pop
pop
fnstsw
ror
cmp
shl
popf
mov
adc
sub
push
out
fst
mov
shl
aad
pop
out
shl
mov
mov
pop
xchg
or
fwait
popf
add
shr
mov
arpl
sbb
mov
push
mov
sbb
aas
inc
sbb
mov
int3
xchg
xchg
repnz
mov
adc
pop
fwait
mov
call
dec
push
xchg
leave
mov
push
dec
ins
xor
mov
xchg
jmp
add
fnstenv
loop
aad
retf
pop
mov
mov
add
adc
mov
inc
or
dec
aad
addr16
pop
adc
pop
fisubr
xlat
mov
(bad)
call
xor
or
mov
xchg
loop
fwait
cmp
xor
xor
adc
out
cmps
push
mov
je
cmp
mov
rcl
inc
pop
cmp
fisubr
sbb
xor
pushf
xchg
push
mov
mov
jge
out
xchg
dec
adc
aam
dec
fcom
pop
fst
sar
setno
mov
mov
and
adc
not
es
cmp
ins
pusha
sbb
cdq
sub
shr
(bad)
push
fldcw
(bad)
push
sbb
fwait
mov
push
sub
add
adc
outs
pop
mul
or
and
dec
fcomp
(bad)
push
dec
xchg
neg
add
stos
sbb
outs
push
inc
xchg
cmp
cld
add
in
aad
push
mov
and
mov
arpl
dec
mov
jbe
mov
jb
xor
and
aaa
ror
xor
xor
push
fwait
xchg
cdq
xchg
add
pop
test
push
scas
rcl
push
mov
xor
xchg
sub
xchg
inc
lahf
aas
dec
ja
mov
adc
(bad)
retf
loope
fisttp
xchg
jmp
sahf
test
lahf
cmps
pop
mov
dec
pop
jp
rcr
adc
xlat
pop
jb
mov
arpl
inc
pop
shl
pop
lea
rcr
fist
xchg
xchg
jle
mov
fwait
(bad)
xchg
adc
rcr
xor
push
arpl
pop
loop
shl
inc
push
pop
xchg
ret
push
test
stc
xchg
xchg
lahf
adc
outs
pushf
aaa
lock
pop
cld
(bad)
mov
cmp
cmp
xor
mov
pop
mov
pop
adc
in
mov
out
push
push
push
dec
mov
sub
shl
call
xchg
xchg
xor
bound
mov
out
daa
xchg
jp
xchg
push
inc
outs
push
(bad)
sbb
xchg
cmp
sbb
jne
pop
lahf
ret
ins
mov
lahf
xor
outs
push
or
mov
pop
pop
mov
pop
adc
pop
(bad)
sub
push
mov
adc
sbb
sbb
fnstenv
mov
cmc
adc
push
lock
mov
fist
cwde
or
pop
call
push
inc
pop
aad
cdq
fcmove
xor
(bad)
adc
push
cmp
dec
adc
sub
retf
xchg
fisttp
pop
(bad)
std
pop
xchg
push
xchg
sar
push
iret
mov
cs
call
pop
loope
shl
sbb
xchg
dec
xchg
xchg
xor
or
dec
shr
xchg
lahf
push
pop
jb
jae
rcl
jae
xor
xchg
cdq
dec
and
shr
test
push
pop
xchg
jmp
mov
fisttp
mov
sub
sar
cmp
dec
pop
cmp
aad
add
dec
cmp
shl
adc
rol
sub
mov
fadd
inc
inc
mov
mov
retf
and
loope
fisttp
fcom
pop
call
and
aaa
dec
mov
mov
test
sbb
popf
jg
push
out
dec
shr
ins
pop
or
daa
mov
xor
pop
dec
pop
in
not
mov
arpl
lahf
adc
xchg
inc
xchg
adc
cdq
sub
push
mov
push
sbb
add
fucom
popf
push
jle
mov
call
adc
rcr
inc
shr
adc
sub
test
(bad)
push
push
fldcw
mov
fmul
adc
or
pop
push
jb
loopne
adc
test
ja
dec
jge
pop
push
call
sbb
xchg
inc
fwait
shl
xchg
xor
outs
movs
aad
rol
add
pushf
mov
mov
hlt
aad
cld
xchg
mov
xchg
ja
mov
pushf
dec
xchg
nop
xor
jbe
mov
jb
sbb
xor
xchg
mov
ret
fcomip
or
mov
mov
pop
mul
bound
idiv
mov
xchg
fld
mov
sbb
cmp
adc
push
push
mov
cwde
rol
and
pop
(bad)
xchg
mov
inc
fld
sbb
push
xchg
sbb
sub
xor
push
xor
jge
(bad)
push
mov
outs
fldenv
mov
mov
and
inc
mov
sbb
push
mov
cdq
xchg
fmul
mov
dec
jmp
xchg
sahf
adc
cdq
add
scas
inc
fisubr
inc
push
outs
adc
cmps
sbb
pop
es
dec
pop
lea
sbb
pop
jmp
cwde
inc
mov
add
pop
aaa
bound
mov
outs
cmp
adc
fcom
push
ret
cmc
push
gs
xor
bound
outs
sar
mov
sahf
mov
ret
pop
xor
mov
or
aad
sbb
pop
js
mov
mov
or
call
xchg
sahf
and
inc
(bad)
and
inc
push
in
push
add
popa
xor
std
xchg
xor
dec
pop
push
pop
push
push
xchg
ret
dec
(bad)
xchg
stc
nop
call
pop
mov
(bad)
xchg
pop
scas
inc
loopne
push
dec
xchg
mov
popf
mov
inc
push
movs
cdq
cmp
xor
cmc
pop
popa
repnz
mov
cmp
jb
push
shl
rcr
xor
mov
sub
cmc
inc
push
mov
ja
mov
sbb
dec
shr
push
xlat
arpl
sbb
es
out
xor
pop
push
push
xor
cdq
adc
xchg
add
push
ds
mov
ins
fnstcw
setno
mov
sbb
xchg
div
inc
push
mov
dec
sbb
ds
pop
(bad)
lahf
or
xchg
stc
xchg
xchg
int
or
pop
xchg
cmp
sbb
popf
sbb
(bad)
sbb
call
xchg
ret
inc
mov
adc
dec
fcom
lods
not
cmps
daa
inc
dec
pop
clc
jnp
sbb
popf
pop
sbb
sbb
mov
xor
xchg
push
mov
ret
xchg
out
xchg
enter
sub
cdq
lds
pop
jae
mov
mov
push
cs
sbb
jnp
add
xchg
xor
adc
xchg
cmp
bound
bound
push
xchg
lock
dec
fidivr
dec
(bad)
cdq
xchg
adc
adc
call
push
push
mov
cwde
popf
lock
xchg
push
dec
call
test
adc
call
xchg
and
pop
xchg
arpl
imul
xchg
xchg
sub
xchg
xchg
push
sub
rol
es
popf
dec
push
cmp
fwait
shr
xor
setle
adc
mov
xchg
ficom
mov
jae
dec
fwait
cmp
cmp
dec
adc
popa
adc
xchg
fnsave
fadd
adc
aam
aad
jb
mov
popa
xchg
fild
sbb
cmp
out
call
pop
pop
push
retf
cmc
xor
loopne
sbb
mov
inc
adc
mov
loope
pop
addr16
icebp
add
mov
ret
push
push
rol
adc
adc
sbb
push
dec
pop
xchg
and
xchg
pop
addr16
pop
adc
push
pop
fmul
aam
ds
xchg
add
fistp
rcr
xchg
dec
popf
sub
inc
fsub
loope
sbb
shl
fcmovu
in
cwde
add
inc
push
mov
and
xchg
rcl
xchg
cmc
dec
cdq
sub
xchg
push
mov
mov
adc
adc
xor
std
fadd
pop
push
pop
dec
xchg
xor
fwait
push
pop
loope
sbb
xlat
mov
mov
inc
(bad)
add
push
jle
mov
mov
jno
dec
(bad)
mov
sar
fdivr
dec
xchg
fwait
pop
std
bound
icebp
xchg
loope
sahf
xchg
call
adc
xchg
xchg
jnp
icebp
dec
sbb
mov
and
inc
pop
jmp
xchg
rcr
addr16
test
fdivp
xchg
push
sub
fwait
addr16
adc
fwait
ss
out
fldenv
stos
fldenv
dec
pushf
sub
dec
pop
daa
dec
pop
jmp
jge
sub
push
mov
mov
xchg
popf
or
xchg
iret
lahf
test
pop
cmp
xchg
pop
rcr
mov
sbb
aad
adc
push
and
xor
(bad)
sub
(bad)
es
or
xor
pop
pop
add
ror
sbb
not
xchg
mov
pop
xchg
pop
arpl
push
(bad)
cmp
fild
push
scas
mov
push
push
and
push
jae
inc
pop
mov
aas
retf
outs
repnz
loopne
adc
shl
push
mov
fistp
xor
pop
xchg
pop
mov
sbb
scas
and
daa
xchg
sbb
xchg
xchg
fld
xchg
xchg
xchg
add
pop
push
sub
add
outs
pop
enter
jmp
test
xchg
aas
sbb
ins
pop
mov
xor
imul
adc
xor
pop
popf
outs
mov
pop
fwait
push
xor
daa
push
push
aas
leave
test
adc
xchg
jb
add
in
ror
jg
mov
fistp
ds
loope
cmp
push
rcl
inc
daa
sbb
xchg
adc
cdq
xor
adc
push
test
xchg
sbb
loope
xchg
dec
sbb
addr16
push
xor
arpl
fcomp
bound
inc
mov
mov
cwde
xchg
rcr
mov
out
sub
push
scas
in
test
add
push
inc
retf
shl
xor
popf
adc
pop
add
add
pop
sbb
cmp
add
sbb
adc
pop
jbe
add
pop
repnz
pop
mov
xchg
inc
loopne
sar
xchg
cwde
ret
aad
add
shl
popa
adc
xchg
push
ds
mov
icebp
addr16
jmp
pop
fdiv
sahf
and
xchg
pop
inc
cmp
aaa
xchg
cmp
fld
and
xlat
mov
push
cmp
fwait
pop
xchg
ror
pop
cmps
adc
scas
adc
mov
rcl
aaa
xor
cwde
push
fwait
in
or
xchg
inc
adc
fstp
mov
adc
xor
push
cdq
xchg
into
pop
sub
mov
call
adc
dec
sbb
neg
lahf
sbb
xchg
push
xor
out
sbb
inc
adc
(bad)
xor
test
push
push
fisttp
cmp
call
and
(bad)
ret
mov
push
sub
pop
xchg
popf
sbb
push
fcom
ret
push
and
xchg
mov
ror
push
inc
pushf
test
fdivr
leave
push
(bad)
xchg
dec
pop
scas
push
push
adc
mov
inc
add
xor
and
movs
cwde
addr16
xor
xchg
dec
sub
not
mov
fimul
dec
pop
rcr
inc
push
push
loopne
push
sub
lahf
popa
std
(bad)
addr16
rol
add
mov
adc
and
sub
or
xor
mov
cmp
test
nop
inc
dec
ror
mov
(bad)
sub
in
xchg
cwde
xor
mov
mov
out
push
test
aam
sbb
push
xchg
xchg
mov
mov
adc
inc
sbb
shl
dec
pop
stc
bound
xchg
cmps
shl
add
mov
stos
xchg
inc
shl
hlt
pop
mov
push
mov
retf
cmp
iret
fidiv
(bad)
cs
pop
sub
call
aam
in
test
sbb
aad
call
add
inc
jge
pop
mov
xchg
sbb
adc
mov
push
adc
fwait
cmp
out
adc
sub
sbb
seta
mul
cmp
push
aas
lds
pop
fwait
ss
(bad)
in
push
les
mov
pushf
sub
mov
push
pop
adc
sbb
mov
or
xchg
fcom
push
push
pop
xchg
and
push
(bad)
lahf
xlat
ret
and
push
(bad)
cmc
fld
pop
mov
jne
mov
popf
inc
mov
dec
loope
add
jg
xor
hlt
pop
ds
add
retf
cmp
call
xchg
mov
push
cdq
xchg
xor
sub
imul
cs
pop
xchg
sbb
push
mov
ret
call
xchg
sar
mov
add
es
push
mov
add
sbb
adc
inc
fnstenv
in
xchg
(bad)
sub
mov
neg
inc
sbb
loope
mov
fwait
sahf
loop
xchg
arpl
sar
push
sbb
inc
pop
jae
xor
xor
ss
xchg
cmp
sub
adc
neg
mov
rol
xchg
pop
dec
in
pop
mov
or
dec
cmp
test
dec
fwait
push
sbb
retf
fwait
jge
dec
out
adc
(bad)
mov
ret
fisub
sbb
lds
sub
xlat
adc
mov
pop
daa
xchg
mov
arpl
xchg
rol
xchg
add
mov
sbb
frstor
pop
arpl
cs
inc
cld
mov
sahf
mov
loopne
fistp
sbb
test
lock
fwait
ror
adc
loopne
pushf
popa
adc
add
sbb
test
xchg
sub
stc
icebp
fisttp
sbb
pop
test
stc
pop
xor
repnz
mov
adc
pop
add
sub
xor
fidivr
nop
ret
pop
bound
xor
(bad)
fdiv
xlat
ret
nop
bound
xchg
inc
in
fidivr
shl
aad
adc
inc
push
dec
cmp
adc
ins
mov
lea
outs
xor
mov
aad
add
dec
lahf
cdq
pop
sahf
add
lea
pop
push
outs
test
cmps
xor
xchg
or
mov
push
sbb
lahf
rcl
pop
push
out
xchg
push
xlat
pop
sar
shl
xchg
call
fimul
xor
dec
fsub
mov
sahf
out
pop
pop
scas
std
dec
pop
sub
aam
cwde
and
push
sub
xchg
jb
xor
addr16
push
xor
add
xchg
fnsave
dec
neg
mov
das
adc
push
mov
push
pop
sbb
xchg
jb
add
jne
push
mov
xor
es
xchg
adc
(bad)
repz
xor
lea
fmul
rol
cmp
outs
cmp
das
push
jmp
sbb
fwait
adc
movs
pop
mov
push
dec
inc
sbb
xchg
adc
hlt
shl
mov
fnsave
inc
pushf
jae
xor
jo
mov
rcl
push
jae
stc
fwait
mov
pop
ficom
lods
mov
and
add
add
mov
sbb
push
stc
and
fsubr
xor
mov
es
nop
mov
arpl
push
das
pushf
jb
sub
ss
out
fidivr
jb
push
(bad)
cmp
cmp
dec
pushf
in
xlat
mov
sbb
dec
xchg
xlat
push
mov
mov
sbb
xchg
push
cmp
xchg
push
ret
sbb
xor
unpckhps
inc
shl
sbb
mov
out
sbb
lahf
scas
fnstenv
pop
xor
rol
adc
mov
das
pop
stc
push
sbb
adc
fwait
push
adc
xor
cdq
push
xor
sar
cs
pop
lahf
fwait
mov
cs
lods
fidiv
sbb
aam
jge
cs
adc
fldcw
cmp
push
push
dec
jmp
daa
loope
adc
rcl
ret
xchg
out
pop
xchg
lahf
pushf
add
cmp
xchg
push
xchg
sbb
add
iret
push
out
adc
ja
icebp
dec
fiadd
and
cmp
adc
sahf
xchg
push
xchg
ror
ins
sar
xchg
push
xor
pop
sub
dec
pop
cmp
adc
xchg
xchg
xchg
fidiv
dec
push
mov
sub
pop
scas
mov
mov
sbb
adc
popa
push
aaa
dec
xchg
mov
jno
mul
or
icebp
test
sub
xchg
(bad)
push
fsub
mov
fbld
dec
rcr
mov
sbb
int
push
in
adc
(bad)
out
pop
cmp
das
xchg
mov
fdiv
push
popa
inc
adc
pop
cdq
push
arpl
xchg
cmp
loopne
shr
xor
or
sbb
dec
dec
aam
lahf
cmps
aam
dec
lock
popf
fwait
popf
loope
sbb
clc
xchg
push
xchg
push
xor
inc
dec
setnp
arpl
sbb
adc
mov
sub
jb
(bad)
out
adc
push
cmp
add
pushf
hlt
xchg
ficom
xor
stc
test
cmp
or
inc
xchg
jae
xchg
in
outs
ror
fadd
fdivr
sbb
push
adc
fldenv
(bad)
mov
and
cmp
fcomi
xchg
cmps
out
adc
cmps
cwde
mov
(bad)
js
daa
pop
fdivr
popa
dec
fsubr
sub
inc
adc
dec
pop
iret
mov
sbb
es
push
ds
sbb
cli
fwait
mov
xchg
fdivr
mov
fwait
lahf
pop
cs
lahf
scas
add
mov
mov
cdq
xchg
loope
pop
push
sbb
mov
inc
mov
push
xchg
xchg
loope
fcomi
add
jmp
push
dec
pop
imul
add
add
sbb
pop
loop
xchg
sbb
cmc
xchg
and
xor
add
pop
dec
adc
ret
xchg
icebp
sbb
xchg
es
adc
fwait
xchg
add
out
ret
mov
test
and
sub
mov
mov
xor
call
mov
mov
xchg
ror
cmp
cmp
add
test
pop
ret
lahf
xor
rcl
xchg
call
sub
sub
(bad)
xor
movs
pop
(bad)
mov
cmp
xchg
xchg
and
aam
shl
mov
pushf
pop
adc
jb
arpl
pop
ss
mov
call
adc
pop
lods
xchg
bound
fistp
sbb
fcmovu
mov
arpl
call
mov
in
shl
xchg
cdq
xchg
mov
xor
mov
sbb
sbb
pop
ficom
pop
xchg
fcomip
dec
shr
sar
cld
or
mov
popa
(bad)
pop
sbb
xlat
sbb
retf
(bad)
pop
dec
fwait
push
fist
pop
sub
xchg
ja
adc
loope
xchg
ja
pop
xchg
mov
cdq
iret
push
out
setbe
add
(bad)
into
sbb
hlt
mov
pop
sub
push
push
out
xchg
and
sar
in
cmps
xchg
(bad)
mov
mov
xchg
push
xchg
xlat
jmp
push
not
mov
pop
dec
aad
pop
mov
jp
mov
push
or
(bad)
xlat
in
xor
call
push
outs
xchg
mov
add
bound
mov
popa
xchg
xchg
add
push
test
fidiv
xchg
sub
(bad)
fcomi
fnstsw
xchg
xchg
cdq
es
loop
cdq
mov
sbb
push
pop
nop
xchg
fdiv
mov
pop
arpl
xchg
push
pop
addr16
fwait
xor
pop
add
pop
movs
pop
inc
xchg
jmp
mov
pop
fst
rol
xchg
pop
repnz
add
pop
addr16
sbb
mov
daa
popa
sbb
xor
call
adc
ins
xchg
pop
rcr
fnstcw
fldlg2
setge
xor
inc
adc
dec
gs
adc
fadd
arpl
sbb
fcomi
popa
push
out
push
push
scas
addr16
pop
fwait
xchg
xor
push
cmps
rol
xchg
movs
push
mov
ret
nop
mov
jb
mov
inc
push
mov
xlat
aam
mov
test
sub
xchg
cmp
out
rcl
lahf
or
fstp
aam
lahf
cmps
ror
iret
mov
add
sbb
pop
push
add
jmp
pop
adc
pop
loope
push
xchg
push
sbb
sbb
sbb
outs
lock
push
sbb
mov
mul
xchg
fsub
xchg
sub
dec
shl
xor
and
popf
bound
xchg
mov
add
cmp
mov
call
sbb
es
adc
ret
pop
mov
outs
ficom
iret
sahf
cmp
xchg
adc
pop
push
fst
shl
popa
xor
dec
sbb
adc
push
add
cs
loop
pushf
dec
dec
cwde
adc
lock
push
addr16
push
push
add
xlat
test
test
mov
sbb
adc
adc
inc
aad
mov
sbb
adc
push
nop
stos
mov
xor
loopne
adc
mov
inc
sbb
pop
add
adc
not
xchg
mov
fidivr
mov
dec
push
mov
dec
pushf
lds
or
push
cmp
sub
dec
sbb
test
pop
add
mov
cwde
cmps
retf
mov
pop
adc
fbstp
(bad)
adc
shl
cdq
mov
rcl
repnz
add
cdq
ret
mov
stos
dec
jb
loope
sahf
sub
loop
fisttp
daa
fdiv
mov
sbb
sbb
nop
cmp
push
arpl
fnstsw
sbb
pop
mov
push
inc
fwait
cmp
ins
cli
pop
iret
enter
fwait
test
fdiv
mov
sbb
pushf
jg
mov
push
add
push
sbb
pop
add
inc
pop
mov
mov
in
dec
push
stc
or
xchg
scas
cmps
push
mov
arpl
xchg
push
xor
out
pop
push
pop
mov
inc
xchg
sub
mov
xchg
cmp
loopne
push
mov
or
cmp
fsub
fidiv
fidiv
pop
push
sbb
shl
leave
xor
shr
cld
jbe
inc
arpl
pop
or
add
xchg
push
and
inc
dec
jge
mov
std
push
adc
sub
adc
sub
xor
(bad)
popf
(bad)
sar
pop
in
pop
jae
inc
sahf
xchg
push
test
push
and
adc
popa
pop
xchg
fld
mov
pop
mov
inc
call
rcr
add
addr16
add
loopne
fdivr
pop
(bad)
out
cmp
std
fsub
sbb
lahf
dec
in
cmp
in
(bad)
xor
add
bound
fnstenv
cdq
xchg
ds
sbb
mov
popa
sbb
push
dec
inc
pop
ins
(bad)
fsub
xor
cmp
xchg
shl
sar
xor
gs
sbb
xor
push
js
or
mov
fmul
fwait
cwde
ret
call
xchg
xlat
rol
mov
sbb
fwait
ds
add
pop
adc
pop
fisub
cwde
jbe
inc
mov
fmul
cmps
(bad)
xor
sub
popf
mov
mov
mov
(bad)
nop
and
shl
std
dec
pop
jmp
xchg
xlat
addps
fcomi
cs
xchg
add
mov
std
setge
psrlq
dec
fwait
sub
add
shr
bound
sub
nop
xchg
(bad)
out
push
xor
hlt
push
mov
push
dec
push
mov
jnp
add
sbb
push
xchg
xchg
cdq
pop
xlat
call
push
pop
adc
cmp
ja
mov
cmp
adc
(bad)
dec
fwait
xchg
xchg
lock
xor
fcom
(bad)
cld
push
cmps
test
adc
mov
popf
fwait
and
bound
xchg
not
push
inc
and
mov
fdivr
popf
add
and
pop
jno
outs
cmp
cmp
out
call
sar
add
sub
push
inc
jnp
les
inc
mov
fsub
pop
inc
pop
mov
jae
xor
out
mov
push
add
pop
cmp
ficomp
push
xchg
inc
cdq
xor
dec
dec
fmul
pop
dec
xchg
call
outs
mov
pop
mov
pop
add
shl
les
xchg
shl
shl
sbb
push
aaa
dec
push
adc
sahf
xchg
int
or
add
xchg
xor
push
mov
push
pop
mov
and
add
test
rcl
lahf
xchg
cld
test
ins
sahf
inc
adc
fidivr
inc
rcl
cmp
add
xchg
mov
push
mov
or
pushf
es
sbb
mov
aad
adc
mov
mov
xchg
loop
sbb
sbb
fidiv
adc
or
cmp
sub
dec
pop
xchg
xchg
xor
cmp
iret
push
out
adc
fld
add
cmp
nop
mov
nop
add
sub
mov
add
(bad)
push
sub
xchg
push
lahf
push
loope
sbb
jno
adc
test
xlat
mov
xchg
sbb
fsubrp
(bad)
fld
hlt
sahf
dec
xchg
fimul
xor
jg
mov
cdq
gs
dec
push
adc
inc
sbb
xchg
and
icebp
cdq
dec
and
(bad)
mov
ror
loopne
pop
jp
loope
sbb
pop
or
cdq
and
adc
rcl
sbb
adc
and
(bad)
xchg
lahf
cmps
loopne
inc
dec
pop
xchg
pop
and
xor
popa
push
push
jmp
loop
xchg
mov
je
add
xchg
mov
sub
inc
adc
loope
mov
fiadd
xor
mov
push
pop
adc
sahf
cmp
in
pop
imul
cmp
pop
cmp
jbe
rol
sbb
lods
(bad)
jb
bound
pop
inc
sbb
out
cmp
call
or
es
xchg
xchg
xor
mov
push
fiadd
sbb
push
mul
mov
mov
xchg
mov
sbb
xchg
nop
outs
push
or
pop
push
sub
inc
push
pop
mov
or
pop
xchg
cs
nop
cmp
popf
fwait
rcr
xchg
mov
sub
imul
xchg
or
adc
clc
or
adc
mov
xor
sub
xchg
xchg
and
pop
jg
xchg
adc
adc
mov
mov
xchg
fisub
sahf
or
cmp
adc
cmp
mov
cmp
popa
ror
mov
xor
cmp
int
dec
inc
(bad)
sub
jne
mov
ror
retf
in
xchg
sub
xchg
sbb
psrld
(bad)
push
out
xchg
xchg
std
test
cmps
sbb
dec
adc
push
scas
cmps
pop
ds
(bad)
push
mov
mov
add
clc
push
push
mov
mov
or
shr
mov
inc
push
mov
outs
pop
mov
call
stos
push
enter
add
dec
fdivr
rcr
inc
ror
mov
push
out
pop
xor
inc
dec
sub
and
int
dec
xchg
sbb
cmp
xlat
mov
sub
pop
aaa
xchg
mov
dec
ror
push
pop
xor
dec
adc
adc
push
loop
mov
xchg
xchg
cmps
push
cdq
fwait
in
psubusw
xor
test
sbb
xchg
push
arpl
pop
sbb
sar
pop
mov
sbb
xchg
lds
cmp
and
xchg
mov
pop
aam
aad
(bad)
aad
das
push
xor
adc
adc
mov
and
out
dec
pop
sub
inc
popf
cmp
mov
push
push
lahf
push
mov
bound
push
cmp
xchg
nop
sbb
adc
sub
loope
xchg
jmp
daa
mov
mov
fnstenv
xchg
adc
push
aad
std
dec
xchg
inc
push
scas
mov
push
fwait
add
mov
sub
or
dec
push
xor
je
add
lea
add
dec
sahf
mov
adc
pop
daa
xchg
adc
cdq
cmp
adc
cdq
cld
outs
xchg
sub
dec
pop
out
(bad)
jno
sub
xchg
jno
inc
fstp
pop
adc
xlat
scas
cmps
pop
cmp
mov
cmp
setno
adc
(bad)
xchg
dec
sub
xchg
mov
pop
pop
pushf
mov
aad
and
xchg
sbb
push
push
adc
std
pop
jg
mov
inc
fstp
pop
mov
pop
push
sbb
pop
xor
sbb
adc
xchg
addr16
adc
xor
cmp
inc
(bad)
out
sbb
pop
stc
fucompp
xchg
pop
xor
jle
int
xor
mov
mov
push
rcl
mov
jmp
(bad)
loope
adc
push
xor
loopne
popf
cmp
sbb
pushf
xchg
ret
fld
dec
pop
lahf
pop
xchg
add
sbb
push
adc
add
xchg
dec
sub
sbb
xor
rol
(bad)
xlat
sub
adc
std
fcom
xchg
add
in
fisttp
xchg
(bad)
fisubr
mov
mov
xor
(bad)
push
idiv
lock
xchg
and
sub
and
push
iret
pop
mov
sar
stc
mov
loope
xchg
push
adc
sub
cli
adc
je
xchg
cmp
sbb
mov
mov
aas
dec
xchg
cs
or
cmp
(bad)
stos
or
adc
shl
das
fsub
dec
xchg
dec
or
nop
mov
jmp
fbld
(bad)
nop
cmp
fiadd
pop
xchg
call
xor
test
add
aam
fiadd
dec
scas
rol
out
adc
inc
mov
xor
xchg
xchg
push
sub
out
pop
cmp
dec
xchg
sub
xchg
sub
dec
(bad)
cmps
sbb
and
lahf
shl
mov
xchg
adc
cdq
sub
jg
mov
cli
pop
xchg
push
arpl
xchg
mov
cwde
out
fwait
sbb
xchg
sbb
dec
jae
xor
fwait
call
ror
sbb
xchg
aad
dec
pop
call
pop
push
sbb
loopne
pop
xchg
or
stc
scas
sahf
scas
sbb
cmp
cmp
out
fisttp
adc
ret
adc
xchg
jmp
not
mov
add
fild
imul
lock
adc
loopne
sbb
add
cmp
fbld
dec
push
cmp
out
pop
dec
popf
xchg
lahf
and
loope
dec
xchg
sub
jb
or
pop
xor
push
loop
adc
sar
xchg
loope
pop
mov
xchg
inc
sbb
ror
push
fsubr
push
xchg
iret
pop
div
add
in
xchg
call
cdq
out
push
call
out
pop
xchg
icebp
xchg
push
lock
xchg
xchg
fstp
add
adc
sbb
xor
not
dec
popf
add
xor
mov
dec
sbb
pop
xor
popa
mov
outs
retf
mov
mov
xchg
mov
mov
adc
shl
push
dec
mov
pop
mov
cmp
add
push
sub
sbb
inc
fimul
fcmove
pop
cmp
loope
sbb
es
xchg
cdq
mov
xor
xor
fwait
mov
popa
fwait
pop
xor
jg
mov
aad
fwait
pop
loop
pop
and
out
shl
sbb
sahf
jbe
rcl
push
ds
bound
cmp
xchg
fsubr
dec
shr
movhps
unpckhps
add
pop
pop
cmp
add
xchg
sbb
adc
pop
scas
push
push
jg
lahf
call
mul
test
addr16
test
in
(bad)
mov
call
xchg
mov
aad
rol
or
xor
fcomip
jb
mov
cmp
xchg
fwait
loopne
push
mov
xchg
lds
add
lds
nop
mov
pop
cmp
cmp
dec
sbb
or
xchg
sub
dec
dec
pop
out
sbb
sub
dec
pop
pushf
(bad)
cmp
xchg
adc
pop
setnp
sub
and
lods
mov
xor
rcl
sbb
loopne
fst
in
sbb
adc
loopne
sbb
outs
cdq
dec
sbb
bound
push
pop
sahf
bound
popa
cli
(bad)
push
xor
out
fwait
sbb
mov
mov
mov
and
pushf
sub
popa
cmc
xlat
xor
push
adc
sbb
das
fwait
jb
sbb
pop
sub
jge
mov
xchg
mov
(bad)
das
pop
icebp
popf
mov
adc
xchg
rdtsc
xchg
movs
shl
push
loopne
lahf
mov
loopne
push
or
xchg
xor
neg
mov
cwde
jg
mov
cwde
fild
dec
fisttp
shr
and
jge
mov
fldenv
fimul
cwde
xchg
adc
cmp
push
cmp
call
call
fwait
out
(bad)
xor
(bad)
xchg
adc
(bad)
je
cmp
push
mov
aam
fwait
inc
push
aad
inc
fstp
sbb
adc
push
fbstp
retf
int
mov
fdiv
adc
mov
mov
jmp
aam
sub
add
popf
xchg
inc
adc
jb
rcl
movups
pop
jmp
fiadd
xchg
outs
not
push
ficomp
xor
mov
adc
inc
pop
pop
rol
(bad)
sbb
addr16
xlat
in
pop
push
inc
sbb
sub
lahf
pop
mov
cmp
xchg
mov
inc
push
xor
inc
adc
inc
push
cmp
cmp
test
adc
cld
adc
(bad)
xchg
ret
fcomp
and
daa
cmp
adc
xchg
rcr
out
fwait
xor
out
push
mov
and
pop
xchg
xchg
call
adc
popf
ret
sbb
dec
ffree
xchg
dec
lea
fcomp
xchg
sub
pop
cmp
xchg
pop
sbb
fwait
loope
sbb
adc
lahf
sbb
and
pop
out
push
scas
loopne
shl
push
push
aam
push
bound
mov
sbb
sbb
out
cmp
push
out
push
outs
dec
in
test
addr16
and
cwde
xchg
mov
adc
mov
adc
(bad)
cmp
dec
sub
sub
in
popa
fld
or
pop
adc
mov
daa
push
inc
ror
and
mov
xor
pop
cmp
inc
dec
pop
xchg
mov
pop
hlt
xchg
cmps
cmp
xor
push
clc
mov
pop
stc
outs
(bad)
xchg
in
rol
setae
mov
bound
sbb
jmp
nop
cmp
repz
xchg
jmp
xchg
popa
aad
ins
lahf
or
adc
xchg
cdq
xor
mov
and
xchg
xchg
nop
mov
adc
xor
daa
ins
fimul
xchg
sahf
mov
dec
pop
or
cdq
dec
push
daa
xor
out
aad
push
out
xchg
push
inc
fidivr
sbb
dec
pop
ss
popf
sub
ficomp
cmp
inc
ret
fld
popf
mov
inc
popf
dec
cmp
in
push
push
xor
(bad)
bound
mov
adc
sbb
sbb
fwait
xor
xchg
pushf
dec
xchg
xchg
xchg
cdq
popa
cmp
adc
add
or
es
sbb
scas
pop
outs
(bad)
cs
sub
(bad)
xchg
xchg
mov
add
cs
pop
xor
out
fldcw
mov
pop
add
jge
jae
popf
mov
adc
std
fnstenv
pop
jle
sar
add
cdq
mov
sub
rol
out
push
xor
dec
xchg
stc
mov
push
pop
xchg
adc
fwait
sahf
adc
aam
mov
fistp
push
(bad)
xchg
cmp
push
loop
push
dec
jne
xor
nop
mov
mov
loopne
lahf
xchg
aad
pop
fsubr
jb
add
rol
sbb
lds
sub
inc
pop
xor
mov
push
ret
aad
xchg
hlt
dec
pop
pop
sbb
sub
xchg
push
dec
pop
pusha
call
xchg
inc
pop
push
into
cmc
mov
mov
adc
dec
sahf
xchg
add
call
mov
xchg
cmps
out
dec
pop
jmp
mov
adc
stos
pushf
inc
xchg
cmp
test
push
mov
dec
xchg
fwait
pop
xor
aas
shl
jb
mov
aad
adc
fiadd
ja
dec
cmc
aad
outs
pop
rcr
pop
mov
cs
shl
int
push
inc
add
scas
push
inc
adc
mov
lds
xlat
mov
out
fnstcw
push
xor
xchg
pop
inc
push
fwait
loop
pop
dec
mov
or
xchg
add
push
inc
push
mov
pop
xchg
xchg
xchg
xchg
xor
mov
mov
bound
test
and
push
xchg
fcom
call
popa
push
inc
retf
pop
pop
cmps
sub
pop
xchg
addr16
push
ficom
mov
push
(bad)
adc
mov
cs
sbb
xchg
sbb
bound
xchg
(bad)
call
push
cmp
ss
pop
popf
mov
pop
cld
shl
arpl
ficom
scas
(bad)
push
push
xchg
in
add
fwait
pop
cs
out
shl
adc
pop
lahf
dec
fist
pushf
sbb
pop
pop
inc
fwait
push
and
mov
ss
adc
adc
dec
add
fwait
nop
popa
cmp
adc
sar
nop
dec
push
rdtsc
cwde
das
pop
xor
or
pusha
shl
adc
adc
gs
xor
sahf
adc
mov
lahf
mov
fild
adc
sbb
mov
loopne
lahf
in
(bad)
mov
lods
mov
lods
push
xchg
pop
mov
xchg
popa
iret
sahf
xor
(bad)
sbb
xor
push
jmp
xor
xchg
(bad)
lahf
rol
push
sbb
dec
push
loope
in
xlat
aad
arpl
jg
dec
(bad)
pop
xlat
bound
sbb
fild
push
and
or
push
pop
adc
mov
sbb
loope
adc
cmc
pop
xor
adc
push
inc
xor
xor
cwde
aaa
cvtdq2ps
add
jmp
dec
sahf
dec
sub
xchg
xchg
les
dec
pop
mov
pop
sbb
adc
out
call
nop
xor
out
push
sub
and
adc
fstp
push
sbb
sub
(bad)
std
dec
lahf
cmc
ins
shl
or
sub
mov
inc
xchg
pop
mov
mov
adc
push
sub
jae
repnz
dec
ss
mov
adc
(bad)
xor
cmp
fmul
out
pop
mov
sub
popf
in
test
sbb
inc
xchg
xchg
mov
shr
sub
cdq
mov
xchg
or
sub
test
icebp
int
mov
cwde
popa
xchg
adc
lahf
adc
std
pop
xor
fdivp
pop
sbb
mul
imul
xchg
fidiv
mov
mov
mov
push
sbb
sub
mov
adc
jg
or
maxps
popa
aam
xchg
in
push
inc
mov
loop
shr
inc
push
call
mov
arpl
pop
not
ret
pop
pop
adc
call
mov
mov
xor
pushf
cmp
and
pop
cmps
pop
bound
dec
xchg
xlat
push
enter
add
xchg
and
shl
xchg
jb
inc
movs
xlat
xor
add
mov
push
fadd
xlat
lds
neg
adc
or
daa
jge
mov
cmp
push
push
mov
add
cmp
(bad)
fwait
push
in
(bad)
(bad)
xchg
daa
in
xchg
shl
daa
mov
fs
xchg
rol
xchg
addr16
shl
cmp
test
popf
not
jmp
bound
dec
pop
xchg
dec
mov
dec
add
xchg
in
dec
xchg
sub
idiv
mov
cmp
xchg
cmp
adc
push
fld
xor
iret
pop
dec
dec
adc
pop
pop
dec
sub
inc
pop
dec
and
adc
push
cs
fwait
pop
movs
xchg
mov
je
xor
(bad)
lods
xchg
mov
add
xchg
xchg
scas
xchg
mov
xchg
xchg
cmps
cmp
pop
ret
push
out
pop
xchg
(bad)
shl
xor
cmp
cmp
xchg
pop
xchg
fdiv
xor
daa
setb
inc
pop
(bad)
fwait
out
rcl
out
adc
inc
sbb
jb
daa
into
sbb
push
push
pushf
xor
adc
mov
mov
adc
pop
xor
adc
leave
and
daa
(bad)
fwait
adc
xchg
xchg
add
ror
call
mov
iret
cs
es
dec
push
sub
fwait
xor
cmps
test
aaa
xor
sub
dec
shr
bound
aaa
outs
cwde
dec
fnstcw
xor
xchg
stc
inc
cwde
mov
fstp
jg
xchg
loope
pop
cmp
mov
and
test
push
xchg
ja
mov
sbb
pop
pop
inc
sub
xlat
add
xchg
push
xor
xor
xchg
pop
adc
pop
cdq
retf
or
cmp
push
arpl
iret
shl
dec
adc
and
add
sbb
jb
arpl
xchg
pop
xchg
sbb
ror
ret
(bad)
mov
in
popf
hlt
xchg
xlat
call
xchg
fisub
add
ja
mov
neg
mov
fisttp
mov
cmp
ss
add
arpl
pop
xor
jge
dec
addr16
xor
or
xchg
push
dec
and
mov
mov
neg
xchg
bound
(bad)
mov
clc
add
jg
xchg
inc
into
int
pop
adc
rol
xchg
adc
jg
push
retf
mov
ret
xchg
daa
xor
xchg
xlat
xor
or
imul
xchg
pop
loopne
xchg
cmps
sahf
mov
adc
inc
sbb
push
push
adc
lock
ror
nop
aaa
push
adc
popa
xchg
xchg
add
pop
out
fnsave
dec
inc
adc
mov
mov
adc
sbb
push
mov
std
aam
pop
xchg
fnstenv
mov
es
inc
xchg
dec
xchg
xlat
pop
adc
es
adc
loop
sbb
aam
inc
adc
sar
push
xchg
fsubr
dec
shr
push
rol
mov
sbb
psrlw
xchg
cmc
aas
call
cmp
mov
push
aam
fdiv
pand
outs
cwde
dec
push
out
movs
adc
mov
fwait
nop
push
xchg
xor
fimul
adc
and
cmp
inc
dec
popf
pop
mov
adc
adc
inc
aam
dec
fld
shl
pop
xor
(bad)
fldcw
pop
inc
push
pop
sahf
sbb
sbb
xchg
xchg
ds
add
das
adc
inc
out
mov
xchg
sub
adc
daa
retf
dec
sahf
bound
cdq
xor
xor
retf
aad
cmp
cmp
push
jle
mov
popf
vmovhps
(bad)
add
sahf
aaa
sub
cmps
pop
pop
push
add
or
push
push
xchg
cmp
int
pop
pop
push
push
add
retf
or
or
cmp
mov
iret
pop
adc
xchg
neg
xchg
xchg
xchg
add
xchg
xchg
mov
out
sbb
out
xchg
jae
sahf
inc
retf
jae
loop
sahf
movs
out
xor
inc
dec
jne
mov
cmp
fmul
ret
lods
lock
push
pop
push
daa
push
push
xchg
sbb
sbb
add
xor
popf
aas
sub
ds
xchg
popf
xchg
sbb
pop
loope
fisttp
ret
pop
ds
xchg
xchg
aaa
inc
xchg
dec
and
xchg
into
dec
adc
fdiv
dec
pop
sub
dec
(bad)
push
rcl
mov
icebp
dec
adc
push
cmp
push
mov
adc
pop
cmp
mov
pushf
cmp
loope
sbb
jmp
xchg
scas
les
push
mov
or
jg
addr16
dec
xchg
fwait
lahf
lock
sbb
out
rol
adc
xor
xchg
clc
push
fisttp
dec
scas
call
inc
or
std
dec
pop
in
fidivr
jno
cmps
aaa
mov
pop
adc
in
xorps
fist
adc
xchg
push
sbb
push
div
scas
popa
call
ins
call
pop
cmp
jmp
cs
sbb
cmp
xchg
es
xor
ror
cmp
mov
aaa
jecxz
dec
pop
test
pushf
or
or
xchg
pop
inc
sbb
sbb
aaa
(bad)
pop
dec
sub
pop
fdiv
ror
shl
std
shl
das
nop
jb
loope
pop
jae
ds
mov
dec
pop
add
jmp
adc
cmp
push
add
mov
push
xchg
sub
inc
pop
cwde
mov
cmc
(bad)
scas
inc
xor
in
xchg
fwait
mov
loope
pop
out
fild
adc
pop
adc
mov
xor
cmp
inc
retf
mov
loop
pop
sub
xchg
xchg
adc
icebp
maxps
scas
ror
js
xchg
mov
xor
inc
dec
xchg
pop
mov
call
xchg
pop
pop
mov
xchg
xchg
xor
adc
popa
lds
dec
dec
aad
not
loop
push
inc
dec
xchg
(bad)
fwait
push
xor
dec
push
pop
pop
cmps
sbb
xor
lahf
inc
retf
(bad)
rcr
bound
dec
pop
sub
pop
xchg
xor
mov
(bad)
in
fild
adc
adc
stos
pop
cdq
inc
ds
popf
mov
sbb
pop
push
rcr
inc
aas
lahf
sub
(bad)
push
cmp
xor
push
in
fsub
cdq
xchg
lahf
sar
xchg
push
push
shl
or
call
xchg
xchg
popa
cmc
xchg
arpl
(bad)
cmp
cmp
popf
xor
sbb
push
in
pop
fwait
jg
aas
retf
push
or
popf
add
fld
and
daa
retf
xor
daa
divps
loopne
(bad)
adc
pop
int
dec
lahf
xchg
ds
mov
mov
xchg
popa
fwait
push
arpl
fsubr
cmp
(bad)
sbb
lods
push
xchg
adc
popf
lahf
dec
pop
xchg
mov
pop
push
dec
clc
xor
inc
ror
xchg
loope
pop
pop
mov
adc
push
add
ds
daa
call
dec
fdivr
pop
mov
ficom
popa
cmc
pushf
loop
push
xchg
cwde
pop
fsubp
mov
cmp
loopne
pop
mov
lahf
xor
iret
pushf
dec
mov
adc
push
or
push
xchg
pop
push
push
xchg
adc
pop
sbb
test
cmp
sbb
jae
scas
retf
xor
inc
mov
xchg
pop
mov
rsqrtps
es
gs
jg
push
add
sub
sbb
dec
xchg
stc
popa
adc
mov
out
xchg
mov
fbld
cmp
aam
inc
pop
aaa
xchg
adc
fs
pop
adc
jb
add
cs
(bad)
mov
ret
xchg
inc
daa
adc
rol
pop
inc
sbb
fwait
xchg
jg
mov
mov
jae
push
jg
push
icebp
dec
pop
mov
xlat
sub
fwait
(bad)
sbb
mov
inc
mov
popf
xlat
pop
adc
mov
neg
xchg
nop
or
xor
es
or
mov
push
bound
xchg
cmp
std
add
pop
or
cmc
jne
mov
shl
dec
pop
scas
adc
mov
mov
inc
fst
sar
fidivr
xlat
popa
xchg
fidivr
dec
loopne
lahf
dec
not
ds
add
cmp
repnz
xor
test
mov
xchg
dec
jge
jae
pop
mov
adc
pop
sub
pop
and
jle
adc
push
xchg
push
pop
mov
xor
mov
dec
dec
call
push
loop
push
mov
dec
hlt
pop
dec
dec
xchg
outs
call
cmp
push
mov
push
adc
cmp
rdtsc
shl
test
fild
sub
xor
mov
inc
inc
sbb
retf
push
rcl
sbb
out
sbb
nop
cmp
rcr
test
lahf
cs
pop
mov
fistp
cmp
std
jne
inc
sub
cmps
push
dec
cmc
pop
repnz
push
leave
mov
xchg
cmp
mov
fild
and
xchg
mov
aad
push
cdq
dec
push
rcl
clc
mov
xor
push
in
sbb
fidiv
adc
fld
aam
xchg
(bad)
cld
sbb
inc
and
pop
pop
mov
push
jae
mov
ret
xchg
inc
dec
push
mov
mov
bound
sbb
xor
xchg
setne
inc
xchg
adc
lods
pop
fidiv
push
int
dec
fwait
sbb
push
inc
sahf
dec
sub
inc
adc
adc
in
cdq
push
ret
aad
call
xor
dec
sbb
mov
mov
mov
xchg
mov
push
mov
shr
dec
adc
mov
in
pop
mov
cmp
mov
sbb
xchg
popa
lahf
mul
cmp
pop
mov
push
scas
dec
xchg
stc
mulps
outs
imul
adc
adc
inc
pop
push
fimul
mov
sbb
xchg
adc
push
cmp
xchg
sahf
mov
(bad)
ja
xor
or
cmp
lds
retf
retf
mov
xchg
cdq
cmps
push
push
fstp
(bad)
mov
mov
cmp
std
sbb
sub
mov
xor
shr
scas
pop
outs
push
aad
mov
sub
shl
jg
cmps
daa
les
sbb
mov
jmp
in
dec
push
cmp
jbe
inc
add
fsubp
std
pop
loopne
sahf
xchg
cwde
ds
loope
pop
pop
xchg
sbb
push
mov
ret
cwde
push
(bad)
mov
cld
inc
push
xchg
push
loope
sbb
scas
xchg
fwait
sbb
sub
scas
mov
std
ins
adc
sub
daa
xchg
sbb
adc
sbb
sub
cwde
lods
lahf
mov
sub
xchg
ss
or
sbb
cs
loopne
adc
lods
in
adc
mov
retf
add
adc
mov
jae
sbb
jb
arpl
pop
(bad)
aad
mov
stc
add
nop
push
ds
xchg
sbb
cld
test
popa
xchg
out
pop
icebp
add
xchg
popa
adc
maxps
orps
add
(bad)
aas
mov
pop
fild
xchg
inc
push
dec
std
push
mov
sub
fwait
pop
adc
add
fisub
push
setae
loop
aad
(bad)
cli
pop
xor
gs
pop
mov
loop
adc
icebp
sbb
adc
dec
xor
call
in
movhps
mov
cmp
sahf
xchg
push
fwait
iret
pop
aaa
cld
xchg
(bad)
lock
xchg
add
mov
popf
bound
dec
inc
aad
cdq
pop
xchg
push
dec
xchg
push
adc
mov
cld
push
inc
daa
aad
shl
ja
dec
adc
jle
ret
sbb
cmps
cwde
pop
push
adc
cmc
add
cmc
xchg
adc
xchg
xchg
and
pop
loope
xchg
enter
or
push
xchg
adc
sbb
mov
out
adc
dec
xchg
push
xor
add
dec
fdivr
sub
and
sub
xchg
inc
shl
xor
ret
sbb
sbb
ret
xlat
hlt
(bad)
aam
push
or
pop
stc
xchg
cwde
popa
push
xchg
cmp
fisttp
daa
xor
adc
xor
out
xchg
div
ret
fnstcw
cs
sbb
push
cmp
outs
outs
fnstenv
das
push
mov
loop
fimul
retf
sbb
stos
fsubp
dec
xchg
adc
sar
xor
mov
xchg
mov
mov
xchg
sbb
xchg
xchg
sbb
aas
pop
mov
or
(bad)
mov
adc
pop
fdiv
adc
sar
popf
sbb
scas
push
mov
loop
xlat
mov
mov
mov
jb
pop
aaa
lds
push
mov
or
mov
arpl
add
fwait
rcr
adc
jae
adc
dec
mov
mov
lds
xor
mov
fwait
xor
xchg
push
dec
pop
pop
sub
lods
(bad)
sahf
pop
sbb
xchg
sbb
or
adc
add
popa
dec
lahf
sub
push
adc
bound
xor
push
xchg
inc
push
fcom
pop
push
sbb
and
ror
aad
or
mov
adc
sub
cmp
cdq
lahf
pushf
mov
push
mov
fdiv
push
psubd
xor
scas
dec
mov
mov
pop
nop
lea
mov
ss
outs
das
rol
jb
arpl
rcl
jg
fist
scas
popa
xlat
mov
sbb
dec
aam
loop
lahf
ret
pop
dec
out
lods
xlat
sbb
shl
push
loope
push
sub
jne
mov
pop
xlat
and
xchg
mov
fistp
xchg
daa
adc
cmp
xchg
cwde
aaa
xchg
adc
sbb
cdq
retf
cdq
add
popf
mov
fisubr
lods
push
adc
fild
js
cmp
push
jge
rcl
xchg
add
mov
pop
inc
push
inc
fwait
pop
add
xchg
cmp
adc
lods
xchg
loope
fnsave
xor
cmc
push
sbb
inc
xchg
int
dec
neg
xchg
inc
mov
sbb
adc
add
sahf
push
rcl
sbb
adc
hlt
pop
mov
fisttp
ret
xchg
inc
neg
xchg
cmps
out
dec
push
xchg
pop
pop
nop
xchg
xor
xchg
(bad)
mov
shr
sbb
add
pop
aas
lds
fwait
cdq
loop
sbb
fild
push
dec
fwait
(bad)
xor
pop
movs
push
bound
in
xchg
add
bound
popf
xor
dec
adc
call
fdiv
lahf
loopne
sbb
popa
mov
mov
shr
push
fnstcw
ret
nop
ss
(bad)
iret
adc
not
xor
sbb
inc
cdq
xchg
push
mov
xchg
dec
xchg
fwait
mov
inc
cwde
(bad)
or
adc
popf
ja
xor
call
xchg
and
inc
pop
pop
fdiv
push
adc
push
and
sub
dec
adc
fsubr
add
ja
cdq
push
push
adc
pop
mov
sbb
ret
icebp
into
sbb
jno
add
cmp
or
cmp
sbb
cs
popf
dec
mov
cwde
ss
mov
fdivr
test
loope
cdq
js
xchg
xchg
dec
aam
enter
fist
mov
jmp
sub
aam
push
xor
xchg
mov
xlat
lea
loopne
push
xchg
push
cmp
xor
scas
pop
scas
push
adc
add
fwait
aam
push
sbb
cmp
mov
retf
xchg
pop
xchg
nop
xor
lahf
push
mov
pusha
rol
dec
outs
xchg
adc
add
push
xor
loop
pop
mov
lock
mov
push
xor
ficom
fwait
aaa
xor
xchg
mov
push
pop
jb
ret
(bad)
inc
test
rol
adc
call
sbb
xor
inc
ret
jg
mov
lods
int
sub
push
test
pop
out
sbb
jae
push
iret
pop
xchg
inc
call
dec
rol
shl
push
enter
jae
adc
outs
xchg
or
aaa
mov
sbb
adc
sahf
cmp
xchg
adc
fwait
mov
pop
jae
jno
dec
sub
adc
cdq
mov
xchg
and
fstp
mov
rcl
pop
popf
jp
mov
mov
cmp
mov
mov
xchg
push
ja
xor
out
(bad)
inc
rcl
mov
adc
pop
mov
aad
outs
push
cmp
(bad)
repnz
loopne
fiadd
addr16
xor
push
cmp
or
mov
sbb
mov
mov
mov
call
sub
inc
dec
shl
xchg
mov
mov
popf
aas
rol
sub
fsub
dec
sbb
jg
pop
(bad)
call
stc
mov
sub
mov
sub
xchg
es
out
xchg
adc
xchg
adc
loope
aad
in
xor
(bad)
push
dec
in
rol
or
jno
rcl
adc
pop
mov
aam
push
es
repnz
xor
pop
add
leave
xor
fcom
xchg
xchg
int
sbb
xor
xchg
cmp
jg
pop
add
mov
cmp
push
xchg
popf
add
iret
pop
div
add
aad
pop
loope
rol
xor
inc
dec
gs
adc
pop
leave
xlat
xor
inc
fimul
fst
pop
xchg
add
cs
pushf
sub
and
loope
sbb
out
xlat
mov
ds
fidiv
mov
es
add
fisttp
std
adc
and
int
sub
call
jb
mov
pop
xchg
pop
cmp
shl
push
int
dec
dec
shl
xor
adc
or
out
inc
xchg
xchg
sbb
add
xchg
push
xor
adc
sbb
outs
push
xchg
shl
in
push
popa
cmc
xchg
xchg
sahf
dec
dec
push
adc
push
jnp
loop
pop
push
mov
xchg
cmps
adc
xchg
nop
mov
popa
fwait
pop
xor
add
pop
shl
push
or
(bad)
xchg
fnsave
inc
stos
or
not
pop
dec
sub
pop
es
jns
mov
sbb
xchg
sbb
xor
popf
mov
adc
xor
daa
sbb
xor
ret
adc
sbb
(bad)
fdiv
pushf
popf
sbb
add
cmp
aad
cmp
and
xor
add
pop
push
iret
cmp
sbb
(bad)
lods
jmp
test
ja
adc
xchg
inc
mov
dec
(bad)
repnz
add
sbb
xchg
pop
pop
add
xchg
pop
outs
inc
mov
mov
mov
cmp
inc
sbb
push
add
inc
rcr
xor
add
cwde
dec
cld
sbb
jne
mov
neg
pop
xchg
inc
xchg
(bad)
cmp
daa
mov
xor
adc
or
ficomp
aaa
scas
xchg
bound
add
pop
rol
cmp
popf
lods
(bad)
cmc
push
xor
or
loope
adc
xchg
jmp
ror
ja
or
xchg
and
mov
pop
sbb
pop
xor
xchg
pop
mov
popf
cmp
add
fiadd
int
xchg
xlat
jb
aaa
movs
shl
lods
adc
dec
sub
inc
sbb
loope
adc
fisubr
sar
adc
pop
cmp
fcomip
dec
xchg
(bad)
push
push
adc
cs
mov
ss
adc
cmp
pop
mov
ror
ins
pop
es
addr16
push
xchg
fisub
mov
adc
mov
cdq
pop
cmps
pushf
mov
inc
sbb
adc
sub
mov
or
hlt
dec
xlat
xchg
push
and
clc
movhps
or
nop
es
xlat
mov
int3
xor
lea
xor
jg
mov
lock
fcomi
test
mov
xor
xchg
pop
or
add
xchg
xchg
xor
xchg
popf
push
pop
cdq
dec
dec
adc
adc
push
int
sbb
sbb
inc
test
xor
mov
mov
aam
fwait
adc
push
or
adc
xchg
inc
push
mov
pop
mov
xchg
(bad)
push
out
sbb
adc
xor
imul
mov
in
adc
(bad)
xor
mov
lahf
sbb
dec
xchg
aas
iret
jae
outs
ret
jb
loopne
push
mov
outs
(bad)
mov
jno
adc
mov
push
mov
add
xchg
pop
arpl
pop
sbb
cmp
inc
fdiv
arpl
push
dec
(bad)
cli
adc
and
inc
mov
xor
add
aam
pop
add
dec
and
fwait
sbb
(bad)
sbb
fnsave
dec
dec
pop
sbb
pushf
test
scas
cwde
dec
mov
xor
pop
fwait
push
adc
int
pop
xchg
dec
lahf
mov
aas
shl
stos
adc
push
xchg
pandn
dec
push
repz
(bad)
out
adc
sbb
pushf
sub
push
fiadd
xor
and
pop
xchg
aad
std
shl
xchg
cmp
xchg
lock
push
dec
sub
sub
jb
add
adc
lds
push
sub
loop
rol
xchg
pop
mov
fld
push
push
iret
cmp
xchg
mov
pop
ret
xchg
or
in
fld
and
cdq
neg
popf
cmps
aam
dec
lahf
mov
cs
push
out
pop
jmp
fidiv
ins
fild
test
arpl
aaa
popa
sar
or
bound
pop
cmp
ret
call
jae
dec
neg
xlat
(bad)
xor
dec
pop
hlt
push
mov
sbb
push
or
cli
pop
adc
pop
xchg
int
bound
xchg
cmp
ret
push
div
pop
dec
xchg
div
test
dec
pop
mov
or
xchg
mov
not
call
fadd
inc
enter
sahf
dec
std
pop
xor
pop
push
push
push
sbb
sbb
addr16
adc
xchg
and
push
sbb
mov
xchg
mov
pop
xor
es
lds
gs
xchg
loop
shl
mov
push
jg
xor
adc
cmp
(bad)
arpl
xchg
xor
(bad)
fldenv
pop
xor
push
jmp
mov
cdq
mov
push
mov
lea
inc
inc
das
fimul
dec
and
jb
loopne
pushf
pop
push
(bad)
cld
push
xchg
xor
cmp
fwait
pushf
xor
ins
repnz
scas
loopne
xchg
and
adc
out
xchg
add
dec
lahf
(bad)
inc
jno
outs
(bad)
lock
aaa
mov
stc
jecxz
sub
xchg
sbb
jne
retf
rcl
pop
xchg
leave
push
pop
and
xchg
sbb
aas
(bad)
daa
pop
pop
mov
xlat
mov
jb
sub
sbb
xchg
sub
ds
add
dec
sahf
dec
inc
adc
pop
popf
inc
pop
xor
popf
(bad)
dec
pop
xchg
and
popf
loope
mov
xchg
in
out
fmul
int3
cmp
inc
adc
dec
xchg
mov
xor
adc
outs
adc
and
push
jmp
push
pop
jb
jae
mov
sbb
pop
pop
adc
sbb
fucom
fwait
xchg
cmps
push
mov
jb
add
lock
es
sar
xchg
xchg
rcl
mov
(bad)
sar
and
xor
cmp
dec
lahf
mov
mov
mov
push
mov
cmp
cmp
imul
xchg
mov
outs
(bad)
mov
add
ds
add
xchg
mov
fstp
xchg
xor
push
xor
test
adc
push
sar
sub
adc
cmp
xchg
pop
and
xchg
fdiv
fnstcw
add
loope
pop
in
nop
xor
jae
cmp
xor
mov
adc
inc
dec
ror
dec
dec
shr
fwait
xchg
mov
loopne
adc
xchg
addr16
adc
pop
punpckhbw
(bad)
call
push
(bad)
mov
push
xchg
xor
or
and
into
adc
mov
fwait
push
xor
out
xchg
pop
pop
xchg
push
aaa
xchg
nop
xor
push
jmp
mov
pop
xlat
jb
add
adc
xor
dec
adc
inc
fld
lods
sub
cwde
sub
push
xchg
in
push
xchg
mov
aas
shl
popa
push
push
fst
push
fist
aad
pop
xchg
lea
jg
pop
sub
iret
push
out
sahf
or
pop
xor
push
dec
neg
repnz
add
xchg
xor
jge
mov
nop
dec
xchg
dec
repnz
in
or
mov
cmc
mov
push
aas
dec
test
pop
xchg
and
fisttp
pop
aaa
push
cwde
xchg
xor
sbb
add
cmp
sbb
adc
cs
ins
fld
or
mov
dec
aad
xor
mov
sbb
fild
adc
dec
mov
daa
pushf
rcl
adc
sbb
mov
fcomp
bound
adc
out
sbb
adc
cmp
lahf
pop
xor
shl
push
(bad)
mov
(bad)
push
fldenv
mov
arpl
fwait
xchg
dec
xchg
aas
inc
outs
or
or
dec
sbb
add
jb
jno
mov
pushw
(bad)
(bad)
fidiv
out
dec
(bad)
lods
xlat
iret
(bad)
dec
pushf
stc
xchg
pop
xor
sbb
imul
fild
pop
add
sbb
xor
xlat
cmp
push
mov
pop
mov
xlat
or
mov
xchg
(bad)
sbb
dec
dec
lahf
xchg
loopne
fwait
lods
pop
mov
or
mov
pop
mov
xchg
adc
sbb
fsubp
cmps
adc
pop
mov
mov
xchg
ret
xchg
aaa
jno
xor
cdq
sbb
jge
mov
or
mov
xor
mov
hlt
or
sbb
ss
add
stc
pop
dec
outs
pop
add
shr
xchg
jge
mov
pop
xchg
fwait
sbb
aaa
mov
sbb
xor
jne
rol
dec
cmc
pop
add
adc
xor
aaa
popa
aad
aam
inc
(bad)
bound
pop
adc
daa
sub
sbb
fcmovb
xchg
xor
xchg
dec
jne
pop
popf
add
or
adc
les
pop
pop
cmps
daa
retf
neg
jge
add
not
lahf
retf
dec
pop
iret
aam
jle
jae
xchg
mov
sub
out
sbb
pop
outs
add
dec
popf
push
mov
ins
sbb
loop
xchg
movs
cmp
sbb
xor
adc
mov
xchg
dec
pop
out
push
push
fwait
aas
gs
sbb
bound
add
sub
fdiv
cdq
adc
pop
jb
aas
lahf
xchg
dec
in
repnz
jno
dec
not
and
mov
cmp
stc
xor
sub
cmp
pop
hlt
add
push
xchg
neg
xor
xor
adc
adc
int
adc
aas
dec
addr16
pop
xor
add
add
ror
pop
das
xchg
dec
pop
xlat
xor
dec
popf
sbb
or
xchg
mov
or
inc
pushf
daa
cmp
pop
xchg
std
jecxz
aaa
jecxz
inc
sahf
idiv
xchg
ss
nop
inc
or
outs
cdq
fwait
xor
sbb
loope
sar
loope
ror
jae
aad
nop
jae
(bad)
xor
xchg
adc
or
push
pop
mov
pop
scas
push
xchg
nop
inc
push
es
cmps
(bad)
sub
sbb
xor
adc
dec
data16
push
push
icebp
pop
mov
lahf
mov
adc
mov
pusha
popf
xchg
dec
xor
fild
daa
xor
jge
xor
fucom
neg
cmp
jmp
cli
pop
scas
(bad)
ds
xchg
xchg
aad
xor
mov
(bad)
sub
dec
fmul
inc
or
jb
pop
aaa
inc
cwde
push
dec
stc
xor
neg
lea
js
out
adc
daa
adc
push
add
dec
and
dec
push
dec
addr16
pop
scas
ret
xchg
xchg
push
xchg
fdivr
mov
push
push
or
pop
dec
adc
cs
adc
push
out
dec
cwde
hlt
add
xchg
jae
pop
xchg
fild
inc
sbb
push
xchg
cmps
push
xor
mov
scas
out
mov
mov
lahf
sbb
dec
ss
popf
sub
adc
or
popf
xor
popf
inc
mov
mov
clc
push
xor
and
xchg
mov
xchg
xchg
push
xor
(bad)
cdq
dec
out
fucomi
xor
and
xchg
push
dec
lea
inc
adc
scas
pand
kmovw
(bad)
mov
jg
adc
addr16
and
xchg
xlat
and
mov
aaa
dec
xchg
sbb
add
or
jb
loopne
cwde
sub
aam
and
ror
add
adc
pop
fsubr
or
inc
mov
ret
popf
div
pop
xchg
cmc
mov
arpl
(bad)
mov
in
nop
xor
clc
or
pop
sbb
rcl
xchg
lock
inc
iret
mov
mov
cdq
cmp
out
sar
dec
push
cmp
mov
mov
push
iret
xlat
mov
and
push
mov
mov
mov
and
push
adc
retf
adc
shl
cdq
leave
and
lods
daa
sbb
mov
jle
xor
inc
sbb
xchg
iret
popf
aaa
xor
xor
or
out
pop
jb
popa
xchg
jmp
xchg
outs
xchg
fsub
(bad)
pushf
mov
adc
push
cdq
lods
mov
inc
dec
xchg
push
dec
stc
inc
(bad)
scas
dec
sahf
mov
mov
(bad)
mov
outs
mov
adc
fwait
test
dec
sub
cld
push
mov
repnz
mov
loop
cdq
mov
cdq
xchg
add
xchg
inc
or
mov
inc
push
cs
pop
ds
bound
cmps
out
push
push
xchg
adc
xchg
xchg
xor
fisttp
sub
popf
mov
inc
adc
mov
adc
fild
pop
push
dec
sub
call
xchg
f2xm1
inc
push
mov
pop
cmp
xlat
mov
or
test
sbb
push
aaa
jne
mov
stc
inc
fwait
or
jg
adc
pop
sbb
push
pop
cdq
leave
xor
cmp
mov
cmp
sbb
dec
(bad)
adc
popf
xor
add
pop
mov
xchg
mov
pop
out
fnstsw
fild
pop
(bad)
call
xor
add
cs
fidivr
aad
xchg
call
ror
pop
cmp
xchg
pop
and
cmp
in
dec
aam
fbld
test
mov
cmc
push
pop
popf
ja
or
fsub
lahf
pop
call
adc
aaa
das
xchg
dec
dec
adc
sbb
repz
inc
dec
jae
adc
sub
ret
fisubr
xor
out
push
(bad)
aaa
or
or
pop
aas
lods
xchg
es
xchg
inc
adc
out
jge
arpl
or
sub
sbb
adc
mov
xchg
xor
xchg
jp
add
aad
jecxz
mov
(bad)
jecxz
aaa
maxps
dec
fwait
pop
xor
xchg
push
mov
fwait
int
sub
xor
data16
fsub
xchg
sbb
mov
aam
dec
gs
sahf
ds
out
cli
call
xchg
aas
dec
pop
push
pop
mov
std
push
jno
xor
retf
(bad)
add
in
sahf
mov
sbb
outs
pop
jg
aad
inc
adc
mov
push
pop
adc
dec
sbb
xchg
pop
(bad)
int
xchg
xor
pop
adc
fldcw
jne
iret
adc
sbb
mov
add
pop
gs
daa
lods
pop
mov
or
mov
xchg
popf
popa
shl
rcl
fwait
sahf
cmp
ret
cwde
mov
cli
push
xor
and
push
mov
adc
ret
sahf
div
cwde
xchg
lahf
pop
cs
fiadd
xlat
aaa
inc
xchg
jae
jno
dec
add
sub
call
sub
cmc
lods
sbb
pop
mov
pop
sub
sbb
(bad)
xchg
push
mov
retf
xchg
add
popf
xchg
scas
test
jecxz
cmp
pop
mov
in
sahf
es
movs
adc
ret
in
xchg
outs
jne
ret
arpl
adc
mov
lahf
fld
adc
xor
popf
loope
popf
mov
xchg
mov
cdq
cmp
adc
aaa
ins
cli
xchg
xor
add
or
cmp
mov
mov
and
daa
paddusw
inc
xchg
or
inc
pop
bound
repnz
sbb
sbb
cmp
adc
iret
mov
adc
fiadd
cli
sbb
fidivr
mov
mov
push
fnstcw
inc
fld
sbb
xchg
cs
pop
mov
push
xchg
xor
cmp
sub
mov
pop
lds
dec
and
xchg
pop
jg
xor
mov
cmp
fwait
nop
xor
xor
adc
mov
adc
push
bound
push
mov
xchg
mov
and
mov
xchg
sbb
mov
xor
test
xchg
aas
jmp
adc
xor
aaa
adc
push
pop
jle
xchg
fnstsw
mov
imul
xor
sbb
jecxz
daa
popa
push
inc
pop
out
fidivr
inc
rol
or
ror
(bad)
in
push
xchg
xchg
jb
das
sub
fwait
stos
push
js
mov
adc
dec
sbb
xchg
cmp
aad
into
mov
into
and
inc
retf
mov
xchg
test
test
mov
lea
mov
and
cdq
jb
ret
popf
test
pop
mov
scas
adc
sub
iret
xchg
sub
or
cmc
xchg
push
(bad)
pop
sbb
or
xor
or
add
fsubr
and
xor
or
lods
xchg
pop
mov
jmp
cmp
adc
mov
outs
pop
icebp
fisttp
ja
mov
sar
sbb
repnz
xor
pop
pop
dec
das
fadd
ja
mov
xor
pop
sar
pop
mov
loop
shr
dec
sbb
and
call
adc
push
and
sbb
bound
gs
cmp
and
xchg
xchg
(bad)
ror
(bad)
push
fmul
xchg
aaa
dec
push
or
push
mov
fld
sbb
call
cmp
out
pop
mov
scas
xchg
pop
(bad)
xchg
sbb
xchg
dec
(bad)
mov
sub
in
lock
fiadd
icebp
dec
rol
daa
push
xor
pop
xchg
mov
inc
pop
daa
cmp
jmp
hlt
jb
mov
adc
pop
mov
cmp
sbb
or
push
add
sar
add
movs
push
push
inc
mov
adc
xor
pop
fistp
add
add
sahf
push
inc
sub
xchg
xor
popf
ror
mov
sbb
mov
cdq
pop
jg
mov
pop
xchg
xor
mov
mov
cmp
jmp
shl
adc
enter
dec
or
arpl
push
inc
and
pop
lock
mov
and
call
mov
push
out
xchg
sar
push
or
jle
mov
div
iret
adc
adc
fdivr
or
inc
fyl2xp1
loop
out
sbb
cwde
ret
pop
out
sbb
retf
push
ds
sub
add
sbb
push
fcmovnb
aam
xor
mov
cmp
mov
sbb
popf
mov
aas
inc
test
mov
fdiv
les
xor
mov
dec
sbb
pop
dec
inc
call
xchg
jmp
and
sub
fimul
out
sbb
cwde
(bad)
xchg
cmp
aas
sbb
lods
sbb
xchg
rcr
fisubr
nop
pop
in
outs
xlat
out
inc
xchg
add
fimul
pushf
test
jb
add
cwde
dec
(bad)
fisttp
pop
cwde
mov
rol
xchg
rcl
popf
sbb
adc
mov
push
hlt
pop
mov
aam
xchg
sar
cmps
adc
jecxz
aaa
mov
sbb
adc
popa
sahf
xchg
cmc
or
mov
cmp
pop
mov
xor
or
sub
xchg
cdq
and
or
test
int3
sub
lea
mov
xchg
ja
aas
sar
push
rcr
out
push
inc
enter
xchg
push
lock
pop
out
pop
xchg
inc
std
inc
adc
es
adc
in
xchg
fst
outs
scas
popf
iret
(bad)
mov
or
shl
dec
lea
fnstcw
loope
adc
hlt
push
cmp
arpl
xchg
aas
mov
sbb
fimul
sub
xor
sub
and
int
or
push
push
jb
rcl
shl
or
jne
mov
cli
xchg
sbb
xor
outs
push
sub
fstp
add
lock
lahf
cdq
mov
push
jg
mov
call
mov
pop
cdq
ret
and
adc
adc
loopne
sbb
scas
push
sbb
cmp
dec
popf
xchg
sbb
xchg
lahf
xchg
xor
push
mov
adc
cmp
sub
xor
js
test
mov
pop
pop
sbb
pop
sbb
jno
ret
pop
jb
repnz
xchg
add
aaa
cmp
ja
mov
lds
xor
xchg
mov
rcl
idiv
cld
inc
xchg
dec
sbb
mov
pop
or
dec
jae
add
dec
test
push
pop
xor
jnp
scas
inc
push
cwde
xchg
cld
mov
xchg
cmc
or
dec
push
xchg
dec
cmp
scas
push
sub
xchg
dec
dec
pushf
out
push
loope
fsub
push
dec
xchg
xchg
dec
(bad)
fnstsw
push
add
jmp
and
xchg
add
popf
popa
sbb
arpl
hlt
jb
xor
into
dec
xchg
and
out
push
push
sbb
aad
push
fiadd
ja
xor
pop
xchg
pop
loop
shl
cmp
bound
adc
out
cdq
outs
dec
dec
fwait
add
scas
daa
les
mov
push
mov
shr
stos
pop
push
adc
cmps
xchg
push
pop
jb
jno
mov
fidiv
int
cmp
imul
xor
mov
mov
aam
xchg
shr
test
sbb
pop
int
cmps
aaa
dec
add
jb
loopne
sbb
lahf
dec
ror
pop
xor
arpl
call
xchg
add
icebp
call
addr16
push
arpl
dec
ins
pusha
pop
cmp
nop
mov
push
jne
mov
xchg
mov
push
xor
push
xchg
loope
pop
gs
retf
sbb
xor
int
sub
pop
scas
ret
fsubr
pop
adc
adc
pop
scas
and
dec
push
or
mov
out
aad
rcr
add
jg
push
ds
inc
inc
in
pop
mov
inc
sbb
inc
and
call
pop
xchg
jb
aaa
dec
aam
fnstsw
fsub
inc
shl
dec
or
shr
adc
pop
mov
xchg
loope
ffreep
adc
loope
ror
and
fucom
jecxz
inc
retf
(bad)
shr
out
fnsave
pop
push
lahf
sbb
mov
add
sar
(bad)
bound
(bad)
mov
jae
sar
into
cld
shl
cmp
sahf
cmp
bound
mov
xchg
popf
(bad)
mov
add
jae
aad
push
out
pop
jae
adc
(bad)
fidivr
int
sub
mov
aas
xchg
test
mov
xor
(bad)
inc
inc
lds
push
mov
pop
mov
(bad)
sbb
lahf
inc
sbb
xchg
xchg
and
adc
arpl
inc
mov
iret
sahf
dec
xchg
push
outs
mov
sbb
cs
adc
ds
pop
mov
or
push
aam
ret
mov
push
xor
add
mov
add
adc
inc
cmp
adc
xor
push
adc
aaa
out
push
mov
push
xchg
popf
xchg
ror
fisttp
mov
xchg
mov
ret
push
sub
lahf
imul
cwde
sub
aad
int
fwait
outs
retf
ror
test
cmp
fild
jnp
add
(bad)
cld
sbb
repnz
outs
cdq
(bad)
or
push
inc
dec
sbb
scas
aad
into
jg
mov
sahf
xor
or
xor
daa
sbb
mov
xor
mov
jmp
pop
aaa
mov
ret
xchg
daa
mov
xor
xchg
sahf
xchg
mov
xor
sub
jge
jae
mov
popf
(bad)
(bad)
lahf
push
iret
sbb
es
jnp
xor
movs
pop
pop
xchg
bound
xchg
mov
cdq
sub
loope
pop
push
fwait
not
xchg
inc
and
arpl
inc
fmul
jmp
repz
out
cdq
push
xor
ins
xchg
pop
cmp
lahf
retf
xchg
push
inc
pop
jg
cwde
add
mov
(bad)
inc
xchg
cmp
mov
add
mov
out
cli
fwait
xor
(bad)
push
dec
dec
push
out
adc
daa
out
xchg
daa
jne
ret
add
lahf
sar
sbb
cmp
sahf
loopne
adc
shl
or
aad
aas
adc
sahf
push
sbb
xor
mov
push
xor
fisub
inc
xchg
mov
popf
xlat
add
or
ss
xchg
sub
fmul
js
jae
xchg
aas
rol
movs
adc
bound
sbb
adc
xchg
test
or
fsubr
(bad)
cli
adc
sahf
xchg
lahf
bound
xchg
aam
pop
sub
popw
push
popf
out
mov
and
sar
jecxz
inc
retf
jno
xor
jne
mov
mov
pop
imul
aas
xchg
imul
rcl
cmc
out
sahf
out
sar
popa
das
xchg
or
xchg
sub
pushf
mov
or
fdiv
pop
mov
dec
fiadd
pop
xor
sub
mov
push
in
pop
div
lods
mov
adc
lods
pop
aas
retf
addr16
xchg
cmp
pop
iret
cwde
dec
adc
dec
not
and
mov
mov
xor
mov
xchg
arpl
fld
or
xor
inc
out
mov
mov
aas
xchg
js
daa
mov
shl
ds
pop
inc
ret
cmc
push
xor
pop
push
ror
inc
fnstsw
dec
add
loope
adc
loope
push
push
inc
adc
cld
jecxz
sub
mov
sub
xchg
sub
push
sub
xor
pop
adc
xchg
sbb
repnz
sbb
dec
cmps
xchg
xchg
dec
xor
fwait
adc
aas
fiadd
mov
push
xor
rol
inc
fisttp
adc
pushf
cmp
sbb
xchg
xchg
sahf
bound
push
xchg
call
push
or
pop
push
retf
push
xor
gs
push
mov
xor
xchg
test
xor
in
inc
xchg
push
shl
push
icebp
jmp
mov
sbb
push
rcl
es
lahf
(bad)
mov
dec
jno
rcl
mov
loopne
(bad)
in
push
aaa
dec
pop
lea
(bad)
mov
push
mov
adc
or
jmp
jge
xchg
pop
cmps
daa
lds
nop
sub
fidivr
scas
xlat
lahf
fist
push
lea
stc
pop
xchg
sahf
addr16
sub
pop
out
xchg
add
push
aaa
outs
nop
sub
call
aam
xchg
mov
xlat
mov
and
push
mov
xchg
scas
in
repnz
cs
cdq
add
cs
shl
jecxz
(bad)
fist
in
push
or
popa
fistp
inc
inc
sahf
sub
fwait
mov
adc
lahf
push
xor
push
sbb
or
fwait
out
push
lea
inc
dec
add
cdq
lods
loopne
pop
cmp
xchg
lea
add
jb
add
fidivr
and
neg
and
xchg
mov
xor
xchg
test
mov
(bad)
(bad)
retf
mov
mov
scas
loopne
push
es
mov
xchg
xchg
xor
dec
jno
rcr
cwde
mov
push
mov
sahf
sub
sbb
push
push
ffree
sbb
jg
dec
cmc
xlat
mov
xchg
dec
add
push
xchg
rcr
daa
fstp
(bad)
loope
pop
call
sbb
xchg
adc
outs
adc
and
(bad)
es
div
iret
xchg
mov
adc
mov
xchg
adc
and
push
sbb
push
dec
neg
or
push
mov
xor
in
inc
fwait
dec
jg
sub
hlt
or
out
adc
lods
fnstcw
int
fstp
lahf
add
fdiv
fiadd
and
push
out
pop
mov
push
jne
mov
pop
sub
adc
inc
pop
dec
iret
pop
push
(bad)
cmp
xchg
enter
pop
sahf
(bad)
shl
xor
es
sub
fiadd
pushf
xor
icebp
(bad)
mov
data16
sub
neg
xchg
pop
inc
loope
sbb
pop
xchg
loope
xchg
or
pop
fwait
aam
adc
add
push
inc
sub
loope
xchg
sbb
xchg
addr16
aas
ror
inc
jae
xchg
push
ds
adc
mov
int
and
adc
sar
push
bound
pop
push
xchg
xor
out
cdq
push
jno
pop
pop
stos
push
inc
cmps
pop
inc
sbb
daa
cdq
sub
push
int
mov
aam
(bad)
sbb
xchg
pop
xor
add
jno
jg
push
adc
lea
xor
sbb
xchg
pop
(bad)
xchg
cmps
shr
aas
inc
dec
push
dec
dec
fisttp
pushfw
cdq
dec
jge
jae
or
rol
jmp
push
(bad)
cmc
push
mov
(bad)
fcomi
xchg
lahf
and
pop
and
pop
sbb
xchg
sub
aas
lods
lea
push
push
push
aaa
mov
add
mov
std
xchg
and
cmp
addr16
push
mov
int
dec
addr16
(bad)
clc
pop
fisttp
xchg
loope
adc
shl
dec
in
outs
pop
cmp
xchg
mov
xchg
jae
shl
dec
jnp
inc
adc
adc
pop
mov
push
sbb
adc
adc
sbb
cmps
xlat
in
inc
adc
test
xor
or
loop
xchg
dec
outs
pop
bound
xor
adc
outs
sbb
fbstp
lock
sub
xchg
out
xchg
jg
xchg
push
loope
pop
dec
ror
xchg
ja
adc
int
push
cdq
inc
or
call
xor
or
mov
jmp
shr
pop
xchg
dec
fstp
sbb
sbb
int
or
push
inc
mov
mov
push
xchg
outs
dec
inc
nop
sbb
or
ss
gs
aad
xchg
shl
mov
out
pop
cmp
stc
(bad)
(bad)
sbb
xchg
mov
aas
lahf
out
xchg
daa
add
nop
xor
in
cdq
fdiv
(bad)
and
adc
scas
pushf
aas
mov
dec
push
or
xor
mov
xlat
aaa
loop
inc
dec
neg
xchg
loopne
push
in
lahf
mov
or
and
(bad)
retf
xchg
sub
inc
xchg
in
adc
inc
sub
fdiv
mov
xor
sbb
inc
fiadd
scas
fimul
mov
xor
cmp
adc
xchg
lahf
and
pop
popf
rcl
inc
push
loope
jne
mov
pop
add
push
pop
pop
add
popf
cdq
int
fidiv
xchg
push
mov
push
mov
adc
inc
mov
pop
scas
test
shl
(bad)
fimul
rcl
xor
mov
dec
adc
xor
xchg
xchg
in
pop
inc
inc
jae
scas
inc
in
inc
pushf
loope
mov
push
xor
fisttp
mov
cmp
xchg
cmp
cwde
shl
dec
in
fisttp
cmp
pop
test
icebp
jne
mov
mov
adc
fnstenv
int
dec
sub
xor
ss
(bad)
xchg
fbstp
pushf
(bad)
pop
mov
sahf
add
push
xchg
rol
aas
pop
sub
inc
xchg
sbb
jge
add
adc
arpl
lea
jge
loop
xchg
mov
jmp
and
sbb
push
cmc
inc
sbb
loopne
push
fwait
sub
popf
popf
sbb
sub
cmp
pop
xor
xchg
xchg
xchg
lahf
cmp
or
loope
jle
mov
adc
push
fistp
pop
add
push
cmps
js
adc
mov
pop
dec
test
mov
imul
add
xor
idiv
push
adc
retf
std
lods
pop
iret
aam
jb
mov
pop
push
adc
add
pop
(bad)
dec
mov
popf
ret
aas
pop
loop
xchg
dec
in
inc
rcl
aas
dec
(bad)
or
fisub
pop
dec
mov
inc
sbb
std
loop
lods
cmps
fisubr
movs
pop
pop
shl
mov
mov
push
ret
jae
add
cmp
ss
push
jns
sbb
add
popf
jmp
fmul
adc
test
or
in
sbb
xchg
fimul
cdq
xchg
pop
mov
icebp
push
lods
xchg
or
fs
aaa
test
push
inc
adc
scas
lds
cmp
call
popf
aaa
inc
ror
sub
pop
sbb
aaa
dec
ror
push
scas
les
loop
mov
xlat
jae
pop
out
xchg
sub
rol
lods
popa
add
in
fnsave
fs
mov
pop
fadd
xchg
and
xchg
adc
jb
add
aad
leave
add
adc
pop
ds
add
xchg
dec
dec
cdq
lea
push
or
adc
loop
popf
adc
xor
sbb
dec
push
mov
aas
xchg
enter
fistp
fistp
add
jge
xor
add
aam
aam
das
adc
movs
add
sbb
xor
out
cli
adc
xor
mov
call
or
mov
push
jb
loopne
(bad)
lock
out
nop
xchg
rol
adc
cli
sbb
addr16
popf
arpl
xor
inc
sar
sbb
xor
int3
jae
sbb
add
pop
push
and
jg
xor
fistp
cdq
mov
jle
xor
add
push
dec
mov
or
jmp
cmp
jecxz
daa
mov
jge
adc
adc
mov
xchg
xor
xchg
and
sbb
mov
pop
or
call
stos
cdq
in
inc
fistp
adc
adc
mov
pop
popf
ins
fisttp
rcl
shl
sbb
lahf
and
add
call
push
loope
push
mov
sbb
popa
sbb
fucom
iret
xchg
pop
push
loope
xchg
xchg
loop
aad
mov
xor
cdq
mov
sbb
lods
hlt
xchg
mov
xchg
jns
mov
adc
scas
cmp
dec
push
xchg
xchg
pop
xor
mov
es
jae
popf
aaa
bound
dec
jae
xor
pop
fwait
pop
mov
pop
pop
lea
stc
add
xchg
cwde
inc
add
jg
mov
xchg
sbb
fidiv
lock
xor
imul
aas
lods
in
call
pusha
pop
mov
or
adc
mov
scas
mov
add
outs
sbb
mov
mov
jne
rol
mov
add
rcl
sbb
popf
sbb
dec
out
pop
or
adc
cli
sbb
cwde
mov
cld
xor
ret
popf
test
mov
out
push
ret
adc
jge
arpl
push
jle
sbb
pop
add
arpl
xchg
adc
cmp
sbb
sar
pop
ror
add
aaa
ja
mul
xchg
outs
mov
inc
xchg
fwait
shl
inc
ficom
sub
div
dec
adc
popf
lea
lea
xor
sbb
rcl
xor
vhsubpd
mov
bound
sub
push
mov
adc
out
(bad)
cli
nop
cmp
xchg
(bad)
and
aas
dec
sub
hlt
pop
mov
dec
pusha
cdq
jb
xor
ins
data16
jae
nop
(bad)
pop
cmp
add
pop
pop
popf
or
cdq
mov
sar
pushf
arpl
inc
pop
or
sbb
pop
jge
ret
aam
dec
xor
mov
nop
or
cmp
xor
xchg
pop
xchg
xor
addr16
int
cmps
test
mov
lds
adc
and
sub
jae
add
push
mov
dec
test
xchg
dec
cld
inc
push
loope
scas
fwait
or
push
xchg
and
pop
mov
sub
xor
xchg
pop
loope
cdq
push
scas
dec
loopne
shl
dec
xchg
push
xor
sbb
bound
sbb
pop
ja
mov
dec
inc
pop
iret
aam
xchg
xchg
xlat
scas
dec
leave
push
xchg
icebp
or
in
xchg
stc
scas
pushf
aas
dec
gs
push
push
push
pop
pop
loope
adc
xchg
add
sbb
nop
addr16
pop
(bad)
xchg
cwde
ds
pop
clc
or
mov
out
lahf
movs
push
iret
and
loope
xchg
in
mov
adc
hlt
out
pushf
or
test
jb
arpl
pop
or
push
cmp
and
or
jns
aas
dec
addr16
push
and
push
dec
jns
outs
mov
cdq
bound
pop
arpl
xchg
lds
neg
xor
add
shl
cdq
mov
loopne
push
cdq
shr
pop
or
sbb
loope
push
xor
sub
inc
pop
sbb
fimul
pop
in
aad
push
loope
push
xor
fld
cdq
mov
push
xor
outs
push
add
cs
xchg
pop
push
xor
mov
pop
adc
popf
or
sub
jbe
jae
push
outs
mov
popf
std
jmp
sub
pop
xchg
inc
xchg
call
xor
add
test
scas
xchg
pop
fsubp
lahf
pop
mov
pusha
pop
or
fisubr
jge
arpl
cdq
sbb
(bad)
shr
cmp
sbb
pop
cdq
popf
mov
aas
inc
jg
xchg
and
push
add
add
xor
ret
xor
movs
xchg
dec
(bad)
xchg
cmp
fnsave
loope
xchg
xchg
xor
mov
retf
mov
add
jae
pop
out
dec
fadd
out
lock
outs
int
fwait
inc
loope
pop
push
mov
push
mov
lds
iret
adc
leave
lock
adc
scas
sbb
loop
sbb
pmulhw
push
pop
add
fimul
inc
pop
adc
add
add
out
cwde
popa
pop
xchg
enter
mov
cmp
shl
xor
neg
mov
mov
mov
dec
cld
cmp
aaa
jne
rol
fsub
push
mov
aas
pop
sub
pop
jae
shl
retf
call
pop
xor
retf
and
push
mov
stc
inc
push
clc
loop
aaa
jecxz
aas
pusha
int
cmps
cmp
loopne
pop
xchg
fisttp
xor
pmaxub
adc
jg
pop
jg
call
rol
xchg
mov
in
inc
fidivr
pushf
xchg
jmp
daa
shr
push
rol
or
adc
ja
xor
cmps
xchg
add
adc
(bad)
push
pop
popf
in
out
pop
sbb
mov
xchg
outs
retf
jge
jb
add
dec
jmp
(bad)
mov
daa
out
adc
popa
(bad)
aad
inc
in
popf
(bad)
(bad)
pop
adc
mov
mov
lock
loop
xchg
loope
(bad)
adc
cmp
mov
xor
inc
inc
inc
xchg
mov
xchg
dec
pop
mov
call
out
jb
arpl
nop
fwait
push
in
inc
adc
xor
cmps
call
aad
inc
(bad)
or
adc
ficom
int3
inc
dec
test
mov
pushf
push
mov
jle
sbb
add
mov
retf
xchg
add
xlat
aas
retf
pop
cwde
mov
sbb
adc
dec
push
xchg
cdq
retf
cld
inc
push
cmc
out
pop
inc
retf
ins
cdq
sbb
inc
xchg
push
mov
rol
pusha
pop
bound
bound
push
ds
push
mov
das
inc
dec
(bad)
jae
mov
fdiv
outs
outs
push
or
stc
repz
pop
sahf
ja
or
mov
dec
fst
add
fcomp
scas
inc
push
push
push
popf
lock
test
fnstsw
or
cli
push
outs
dec
aas
xchg
mov
aad
shr
lea
out
rol
or
jno
xor
pop
and
dec
out
popf
mov
adc
xor
pop
inc
retf
mov
push
xchg
sar
cmp
sbb
or
fild
mov
sar
cmp
mov
xchg
mov
loopne
(bad)
lods
sbb
fwait
xchg
dec
push
das
pop
mov
fbstp
inc
sbb
loope
ror
jmp
xor
jae
jmp
stc
jmp
or
(bad)
sahf
cmps
shl
inc
xchg
xchg
push
in
cmp
xchg
jp
jg
pop
scas
loope
sbb
mov
push
dec
mov
jae
sbb
lods
pop
mov
or
pop
jge
xchg
xchg
mov
adc
mov
xor
jno
sub
push
sbb
mov
mov
pop
push
mov
call
aam
push
pop
or
fdiv
loop
inc
inc
add
cdq
dec
jno
ret
shl
pop
push
dec
stc
or
cmp
xchg
sbb
adc
hlt
jecxz
sub
cli
into
xor
(bad)
sahf
push
into
stc
inc
cdq
cmp
push
aas
retf
xchg
pop
xchg
mov
or
xor
call
adc
xchg
dec
in
pop
xor
add
loope
push
mov
jb
xor
aas
cdq
sub
jge
xlat
add
add
sbb
jg
xor
jns
mov
loop
inc
dec
test
xor
loopne
pop
dec
outs
pushw
cmp
and
inc
cld
popf
pop
adc
or
rol
inc
(bad)
mov
pop
fisub
push
scas
test
sbb
loopne
pop
inc
xchg
popf
xchg
fsub
mov
nop
imul
pop
mov
xchg
xor
in
or
pop
pop
popf
cmps
push
xor
test
pushf
or
lea
cs
adc
test
int3
sub
fwait
in
pop
mov
fstp
mov
adc
add
mov
aas
xchg
inc
retf
lods
fcomp
bound
push
sub
pop
sub
ins
mov
mov
inc
cmp
xlat
fisubr
fld
xchg
xchg
popa
imul
rcl
xor
cmp
add
sbb
lock
fadd
in
xchg
jle
ret
sbb
and
sahf
mov
adc
xchg
call
push
xchg
jle
jno
adc
cmps
aaa
dec
std
or
sub
xchg
arpl
ds
add
repnz
xor
ins
xchg
out
fldcw
loope
(bad)
shr
mov
lock
adc
mov
add
popf
inc
xchg
push
push
jge
rcl
adc
in
adc
xchg
pop
xchg
loope
pop
xchg
scas
retf
sbb
fild
jno
jae
add
outs
pop
scas
cmp
dec
out
fdivr
sbb
xor
pop
push
mov
xchg
pop
scas
ret
xor
sub
xchg
cmc
int3
js
mov
sbb
adc
add
inc
(bad)
pop
xchg
adc
xchg
loopne
adc
iret
add
sbb
out
push
inc
mov
sub
inc
sbb
and
aas
mov
sbb
xchg
inc
aad
sbb
push
xor
or
xchg
cmps
xchg
aas
sbb
in
xchg
push
mov
popf
or
mov
pop
jmp
fimul
shl
inc
fmul
xor
xchg
dec
neg
inc
jne
xchg
mov
fiadd
les
xchg
cdq
lods
push
push
in
push
mov
jge
xor
pop
push
sbb
cli
push
icebp
xlat
adc
xchg
mov
jg
test
push
adc
xchg
out
shl
add
xor
or
xchg
sub
jae
adc
xchg
icebp
mov
push
adc
xchg
jae
adc
xlat
sub
mov
pop
and
push
pop
cmp
xchg
xor
bswap
cwde
cs
cs
repnz
mov
mov
jge
jno
mov
dec
xor
mov
xchg
(bad)
enter
ins
cli
pop
mov
test
xlat
xor
or
mov
aas
les
or
lea
adc
(bad)
arpl
das
sar
pop
sbb
pop
mov
or
mov
xchg
mov
test
mov
xchg
mov
pop
fdiv
add
cmp
xchg
sbb
pop
(bad)
sbb
xchg
cmps
xchg
xor
cmp
ss
pop
mov
or
add
cwde
sub
not
outs
repnz
mov
loop
mul
pop
iret
nop
aaa
xor
pop
lea
push
neg
xor
adc
sbb
int3
daa
dec
push
push
inc
cmp
fisttp
and
pop
dec
jb
sbb
movs
push
dec
xchg
pop
imul
dec
mov
push
push
mov
or
adc
inc
sub
iret
shr
loope
sar
out
xchg
es
inc
frstor
mov
out
adc
aad
cdq
sbb
lock
popf
add
hlt
add
push
mov
loopne
adc
outs
pop
cmp
mov
adc
scas
sbb
jge
aas
sbb
fst
xor
out
xchg
or
rol
mov
sbb
xor
(bad)
in
xchg
xor
xchg
push
mov
ror
add
popf
std
loop
daa
and
movs
pop
outs
std
or
push
pop
popf
xor
test
mov
scas
fmul
inc
cmp
fsub
or
cmp
sbb
ds
push
inc
les
mov
int3
xchg
ins
(bad)
scas
add
jge
and
push
pop
xor
xchg
add
(bad)
out
xor
mov
mov
cmps
pop
or
jno
xor
mov
pusha
sbb
std
inc
push
sub
or
mov
nop
xor
cmp
pop
inc
dec
out
xchg
pop
shl
cwde
mov
in
sbb
or
loope
push
cmp
clc
xchg
lahf
(bad)
xchg
add
out
xchg
jb
bound
push
and
les
adc
outs
fwait
aas
mov
xchg
push
imul
push
xor
add
pop
daa
pop
push
or
push
mov
outs
push
scas
dec
cdq
popf
in
jmp
aas
inc
push
pop
adc
pop
jmp
(bad)
loopne
pop
or
xor
sbb
lods
(bad)
xchg
out
adc
cmp
out
xchg
out
pop
pop
push
popf
inc
cwde
lea
outs
add
push
sbb
sub
push
iret
xchg
xchg
and
mov
push
push
sub
lea
daa
aam
neg
and
inc
inc
lidtd
in
xchg
aas
leave
in
or
retf
sub
inc
adc
push
sub
inc
add
add
ret
xchg
mov
sub
push
cmp
pushf
inc
dec
pop
xor
leave
invd
xchg
mov
mov
fdiv
xchg
push
test
adc
retf
sbb
inc
out
pop
dec
and
pop
iret
adc
add
ja
xor
arpl
xor
push
push
popf
loope
xchg
dec
sub
sahf
inc
lods
jne
xchg
xor
mov
cmps
aaa
retf
mov
ror
out
pop
cmp
fst
fwait
sar
mov
jge
and
pop
fidiv
pop
mov
loop
xchg
or
call
cmps
xchg
sub
cs
(bad)
cmp
stos
pop
mov
lahf
daa
cmp
(bad)
inc
fstp
adc
mov
inc
lods
call
call
retf
cwde
mov
addr16
xchg
arpl
xor
in
pop
xor
(bad)
sub
xor
cmp
out
adc
dec
cmp
jg
or
and
mov
mov
mov
in
icebp
pop
cmp
pusha
adc
cdq
arpl
push
push
and
loope
sar
icebp
inc
aad
lahf
mov
push
sahf
and
sbb
jecxz
or
mov
dec
popa
push
(bad)
mov
pop
cmp
xchg
xor
gs
aam
lock
mov
xchg
(bad)
fild
(bad)
xor
fstp
scas
test
dec
add
(bad)
xchg
and
sbb
jp
xchg
mov
es
cdq
mov
cmp
sar
pop
and
sub
push
add
jmp
cmp
xchg
arpl
jb
add
push
cmps
js
adc
sbb
inc
adc
adc
sbb
adc
add
and
add
push
idiv
adc
add
and
xor
push
xor
dec
add
xchg
push
xchg
out
push
inc
or
sbb
and
sbb
cmp
sahf
dec
iret
xchg
xor
xchg
outs
in
cdq
(bad)
fdiv
imul
push
sub
dec
pop
out
cdq
leave
cs
jmp
pusha
sbb
cwde
loope
(bad)
mov
sub
push
ret
aaa
mov
cmp
sbb
mov
(bad)
es
fld
inc
fbstp
pop
mov
push
mov
lock
dec
pop
push
rol
xchg
ds
bound
nop
xchg
xchg
sbb
xchg
mov
cld
inc
nop
inc
push
lea
loop
or
test
and
aas
retf
out
adc
movs
sar
dec
ins
adc
ds
mov
add
jmp
fldenv
inc
xchg
popf
popa
pop
aas
inc
add
or
sahf
(bad)
mov
cmp
jb
jecxz
or
or
pop
mov
repz
arpl
or
mov
repnz
repnz
in
pop
xchg
mov
jmp
xor
jae
or
or
inc
bound
xchg
pop
xchg
adc
retf
clc
inc
xchg
popf
adc
add
or
add
adc
(bad)
and
sub
cs
cwde
dec
pop
shr
inc
bound
fsubr
imul
fmul
push
hlt
and
sub
fs
sub
and
sbb
std
dec
pop
xchg
xor
xchg
sub
push
lea
cs
fild
push
add
dec
shl
inc
in
xchg
xor
push
popa
adc
xchg
popa
out
adc
aas
frstor
dec
add
or
or
cwde
mov
mov
jge
loopne
xchg
dec
out
sbb
fistp
sbb
call
hlt
rcr
aam
pop
xchg
outs
retf
arpl
jmp
iret
fnstsw
add
aam
dec
pop
and
mov
sbb
loop
es
xchg
outs
retf
dec
mov
xor
scas
popa
fwait
scas
xor
xchg
mov
jb
lock
dec
adc
pushf
mov
adc
push
sbb
sbb
mov
pop
add
lds
push
dec
clc
ss
add
adc
pop
fbstp
nop
pop
pop
mov
cmp
ffreep
push
mov
push
jmp
loope
xchg
push
xor
ror
lahf
push
push
xor
out
push
arpl
fnstcw
jge
xchg
cmps
test
pop
out
push
lea
xor
mov
and
scas
mov
jge
ret
xlat
daa
out
pop
pushf
inc
mov
jb
sub
(bad)
sub
jae
pop
outs
cmp
setae
xor
push
sbb
fmul
fidivr
push
xlat
scas
ja
cwde
jg
sahf
sub
sahf
add
out
adc
add
pop
xchg
sub
inc
mov
adc
dec
adc
loopne
and
push
mul
fnstcw
xchg
scas
push
pop
xchg
or
cmp
dec
sbb
nop
loope
push
pop
adc
xchg
pop
scas
aaa
inc
jle
jae
or
loope
jne
mov
imul
shr
xchg
push
jmp
fcomi
mov
int
xor
pop
cs
sbb
xchg
mov
es
mov
cwde
mov
cmp
xor
test
cmp
sbb
xchg
mov
jge
hlt
mov
mov
xlat
xchg
add
push
mov
cmc
out
shr
xlat
jge
add
mov
inc
push
mov
sbb
or
and
push
mov
pop
xor
in
cdq
push
scas
inc
cld
cmp
sbb
dec
mov
xor
sub
jae
sub
mov
xor
(bad)
xchg
and
fisub
(bad)
fcom
xor
and
sbb
mov
xor
fstp
loopne
cwde
or
call
push
push
(bad)
loopne
xchg
jg
cwde
scas
cld
repnz
push
or
xor
mov
jecxz
cmp
jg
call
add
(bad)
out
push
inc
dec
daa
sbb
enter
fiadd
jecxz
mov
sbb
jg
mov
mov
in
sbb
leave
push
aad
pushf
push
mov
adc
mov
in
out
sbb
dec
pop
ficom
xor
xchg
xor
pop
cmp
push
out
ror
mov
ror
push
push
dec
clc
cmp
out
fsubr
in
jmp
push
mov
and
cmp
xchg
inc
dec
ja
mov
lods
loopne
rcl
inc
es
aas
mov
push
lods
sub
fwait
mov
or
lea
xchg
dec
cmp
pop
add
fwait
test
cs
push
pop
xchg
cmp
xchg
aaa
neg
idiv
icebp
loop
out
push
cs
xchg
mov
hlt
repz
mov
sbb
ins
mov
push
adc
cmps
adc
xor
cmp
in
xchg
es
pusha
adc
leave
pop
aad
or
mov
hlt
jecxz
outs
loopne
sbb
loop
inc
dec
addr16
lahf
cs
(bad)
loopne
sar
in
(bad)
cwde
es
pop
xchg
(bad)
add
dec
lahf
xchg
xor
sbb
push
xor
jl
mov
mov
lea
or
mov
popf
cld
call
fwait
jecxz
mov
add
fcomip
scas
dec
mov
xchg
lock
(bad)
fsubr
adc
xor
lahf
adc
pop
add
push
mov
sbb
dec
hlt
repz
mov
xlat
add
inc
iret
pop
mov
call
push
dec
in
cdq
(bad)
cld
add
aas
lds
mov
lock
dec
(bad)
movs
sub
cmp
ret
xchg
loopne
aad
fst
es
hlt
adc
xor
ror
mov
pop
xchg
add
and
outs
loop
mov
scas
sub
jge
mov
pop
jg
sbb
add
push
xchg
xor
add
pop
sub
rcr
shl
outs
js
call
ja
jbe
xchg
fcmovu
ja
fisubr
adc
nop
ror
xchg
stc
dec
dec
lods
pop
mov
xor
push
push
lock
lods
mov
adc
ffreep
push
and
aaa
mov
xchg
jns
adc
repz
sbb
lods
mov
fwait
add
cld
mov
int3
xchg
sahf
xor
mov
mov
repnz
push
cmp
add
lock
clc
dec
mov
jb
jg
add
xchg
scas
out
pop
dec
mov
cwde
push
push
pushf
mov
mov
cmp
cmp
(bad)
test
sub
jae
dec
rol
sub
dec
jae
add
xchg
push
dec
jle
pop
inc
mov
aam
mov
xor
ds
les
or
jmp
xor
push
fnstcw
mov
mov
mov
and
mov
ret
mov
xchg
mov
xor
cmp
daa
test
(bad)
push
pop
xchg
repz
xor
pusha
sbb
mov
aas
retf
not
cmps
addr16
pop
cmps
mov
jl
pop
hlt
icebp
shl
jne
into
js
loope
inc
sbb
outs
nop
jne
test
and
pop
or
mov
or
mov
inc
mov
sub
lods
mov
lods
push
cld
mov
pushf
dec
pop
adc
xor
and
jl
pop
retf
pushf
dec
jl
xchg
std
mov
in
retf
pushf
mov
cmp
push
add
xchg
in
xor
push
ss
xor
adc
mov
sbb
or
mov
sti
dec
mov
fucomp
imul
push
pushf
jp
adc
lahf
pushf
bound
aaa
inc
outs
jge
adc
cli
xchg
in
imul
clc
pop
sbb
jae
add
call
add
mov
xor
pop
cmps
pushf
std
inc
lods
jns
push
or
push
adc
ds
jg
sbb
daa
popf
out
pop
enter
mov
jge
sar
pushf
div
cmp
push
mul
sbb
mov
push
or
push
push
inc
xor
xchg
jno
sub
out
xor
or
xor
cmp
sbb
jnp
pop
rcl
mov
and
mov
fimul
mov
mov
pusha
sti
lods
push
jmp
sti
adc
sar
cld
scas
sahf
pop
dec
mov
sbb
mov
xor
sbb
ja
xchg
repnz
push
inc
push
or
out
adc
cli
sub
and
push
or
push
dec
pop
mov
dec
jecxz
and
retf
pop
sbb
cld
rol
sti
sub
or
pop
repz
std
int3
lods
sahf
ror
sbb
cwde
call
movs
cld
test
jne
push
xor
aaa
adc
sub
dec
sbb
xchg
fidivr
or
xchg
push
push
mov
xor
ror
(bad)
mov
jle
fmul
clc
ds
xchg
mov
aad
mov
aad
aad
sbb
inc
inc
dec
mov
into
aad
inc
int
cmp
fmul
sbb
or
sbb
clc
int3
cmp
out
lahf
pop
inc
cld
xor
ins
dec
loopne
shr
pop
sahf
push
dec
sub
pop
test
int3
sahf
shr
dec
mov
add
rcr
sbb
sbb
rcl
push
enter
lods
pushf
sub
in
inc
push
imul
jne
push
jge
lea
dec
scas
loopne
xchg
outs
dec
int3
dec
sti
sbb
arpl
fstp
sahf
fwait
dec
int3
mov
and
mov
(bad)
lods
setle
or
les
or
sti
cmp
into
mov
sar
xchg
xchg
xchg
jne
cmps
jmp
cld
cmp
mov
pop
jg
push
(bad)
push
pop
rcl
adc
mov
push
cld
and
sbb
das
or
jge
xchg
mov
pop
fbstp
cli
inc
xchg
out
push
ins
in
call
repnz
ss
xchg
jp
sbb
jb
sbb
shr
sub
movs
div
repz
sti
fxch
mov
push
test
mov
aas
cld
aad
lods
mov
std
call
adc
(bad)
into
mov
lods
lock
and
xchg
xchg
lahf
sbb
mov
cs
push
out
cmp
or
sbb
sbb
cmp
cmps
repnz
cli
pop
loop
jmp
mov
jle
fstp
sti
mov
pop
mov
jb
jmp
dec
ficom
int
cmp
je
pusha
sbb
in
in
jmp
loope
fcmovnbe
fidiv
mov
icebp
pop
cmp
(bad)
sbb
sbb
jb
ins
jno
adc
aas
pop
ins
out
bound
mov
cli
jl
fwait
jmp
xor
sub
ins
or
or
sub
mov
and
pusha
or
dec
sahf
hlt
add
xor
mov
mov
sub
jecxz
call
idiv
push
cmp
test
fisubr
scas
rcl
mov
mov
cmps
push
push
pop
test
rcr
(bad)
mov
xor
xor
cld
push
xor
lahf
hlt
or
jmp
adc
jbe
sar
xor
dec
sbb
mov
mov
(bad)
mov
(bad)
cmp
jno
call
fcmovu
int3
jp
mov
push
mov
lahf
into
or
dec
ja
xchg
sub
out
das
pop
call
jne
push
pop
xchg
cmp
in
push
xlat
clc
pop
loopne
cmp
sub
mov
push
in
pop
mov
mov
jecxz
inc
cwde
mov
sub
fnstcw
ror
jmp
dec
cmp
imul
pop
or
jp
mov
sub
(bad)
sbb
push
adc
mov
mov
fimul
jb
ja
pop
adc
adc
fidiv
sbb
call
pop
in
mov
push
pushf
imul
iret
fstp
push
int3
data16
(bad)
fidivr
(bad)
ffree
sbb
movs
inc
mov
scas
or
fld
call
pop
cld
call
sbb
cmps
je
jl
(bad)
mov
push
dec
sbb
sub
sti
or
push
repz
cmp
sbb
push
cld
push
xor
jmp
cmp
cmp
sbb
sti
jle
jecxz
out
jmp
cld
fs
mov
dec
nop
add
out
push
iret
jecxz
jae
cmp
or
retf
in
sub
push
mov
pop
rcr
mov
or
int3
les
xor
pop
jecxz
out
jmp
jl
push
xchg
imul
sbb
ret
in
icebp
int3
inc
mov
xchg
xor
mul
fwait
inc
sbb
pop
bound
push
ja
cld
sbb
sti
sahf
dec
sbb
mov
(bad)
mov
xchg
dec
push
aam
in
adc
jl
mov
in
stc
xchg
sbb
lds
or
or
shl
cs
fwait
push
aam
push
xor
mov
sbb
sub
dec
fldcw
cmc
(bad)
push
mov
not
xor
pop
lods
jmp
jp
ins
dec
retf
dec
xlat
dec
push
fnsave
in
jne
aad
xor
inc
pop
stos
aad
pushf
call
sar
pop
xor
xchg
mov
lods
pop
rol
mov
cli
cmp
call
xor
(bad)
pushf
stc
loop
adc
sar
call
sub
ins
movapd
push
cmps
int3
xchg
int3
fidivr
call
jecxz
mov
push
mov
mov
es
pop
scas
cmp
pop
push
push
xor
mov
mov
sub
push
imul
mov
jle
sub
jmp
adc
sbb
pop
mov
cmp
pop
mov
dec
sbb
xor
hlt
or
aam
sbb
jb
pop
pop
(bad)
pop
or
rcr
mov
xchg
xor
pusha
popf
ret
jo
fwait
into
mov
gs
and
inc
lahf
push
in
push
jns
pop
mov
pop
sbb
ds
inc
or
push
ins
repz
outs
imul
fstp
rcr
or
and
or
shr
jmp
mov
cld
addr16
adc
fcom
mov
xchg
mov
push
or
aaa
imul
sbb
mov
mov
or
(bad)
inc
mov
cmp
out
mov
mov
adc
pushf
mov
jmp
sar
dec
ins
ror
xchg
outs
cs
repnz
pop
and
jmp
mov
xchg
fwait
xchg
shl
pop
lahf
mov
call
aad
pop
(bad)
jo
imul
not
dec
xchg
mov
xor
dec
cmps
push
(bad)
fstp
fbld
sub
les
in
arpl
adc
adc
xchg
lods
call
or
cmp
jbe
in
stos
add
sbb
mov
std
outs
xlat
pusha
inc
pusha
jl
sub
pop
je
dec
mov
pop
sub
ror
lock
mov
hlt
fs
sbb
cmps
bound
ins
push
shl
shr
repnz
ret
mov
sbb
mov
(bad)
xor
dec
aad
push
pop
pushf
add
adc
clc
ins
or
les
sbb
jne
call
pop
jp
fwait
es
adc
shl
aam
xor
cmps
lahf
pushf
sub
loope
adc
push
push
pop
pop
scas
nop
adc
sub
jo
ins
or
xor
shl
add
push
nop
stos
or
aam
xor
mov
push
rcl
xor
mov
adc
mov
ror
pop
sbb
(bad)
sahf
ret
aas
scas
xchg
out
pusha
inc
ret
stc
pop
adc
mov
ins
into
lods
add
fs
nop
gs
cmp
enter
fs
mov
xchg
test
popa
pop
mov
aad
adc
push
hlt
rcl
or
test
clc
shr
test
pop
or
sbb
cmps
(bad)
push
(bad)
fwait
inc
sbb
fs
(bad)
iret
in
mov
mov
rcr
inc
pop
or
cmp
cmp
(bad)
shl
sub
adc
or
xchg
or
xchg
in
and
xchg
clc
or
pop
inc
sub
int3
pop
enter
sbb
test
(bad)
ficom
pop
sbb
pop
jmp
push
int3
xor
mov
mov
dec
jl
dec
push
ins
mov
fst
pushf
push
data16
push
fst
fnstenv
fidivr
icebp
into
fstp
ficomp
push
jbe
sti
sbb
sbb
aam
outs
cmp
sub
popa
cwde
repnz
aas
sub
push
(bad)
ror
loopne
mov
add
push
mov
sbb
enter
cmc
into
cmp
pop
sbb
or
iret
fsub
lods
sar
rcr
push
imul
movs
adc
mov
mov
int
leave
std
iret
iret
(bad)
mov
aas
outs
fld
in
ins
adc
xchg
push
lahf
int3
push
mov
dec
pop
test
lods
add
inc
jmp
jmp
jecxz
jecxz
lods
mov
int3
imul
adc
movs
in
lds
adc
or
sbb
xor
adc
aas
in
movs
jnp
mov
jge
xchg
mov
inc
dec
fincstp
out
pop
out
call
push
fs
into
and
repz
add
sbb
and
cld
outs
sub
cmp
adc
adc
(bad)
pop
test
sbb
in
push
ins
pushf
movntq
out
sbb
shr
stos
pop
sbb
jae
ins
pushf
lods
das
gs
cmps
pusha
fwait
outs
mov
jmp
out
push
icebp
adc
sbb
into
js
data16
in
fsubp
jl
and
xchg
jmp
push
mov
hlt
sbb
lods
dec
or
dec
movs
(bad)
mov
cmp
cmp
fdiv
sbb
call
mov
test
scas
aaa
lods
xor
pushf
push
push
pop
not
adc
add
xchg
adc
cmps
adc
ret
mov
dec
ficomp
pop
leave
ror
xchg
shl
(bad)
push
sahf
pop
test
sbb
jbe
jge
rol
adc
sbb
(bad)
sub
(bad)
clc
cmp
test
sbb
dec
jnp
xlat
enter
push
push
jp
jl
cli
lods
jp
jmp
sub
push
or
fstp
jp
pop
js
inc
repz
cdq
cmp
pop
cmp
xchg
fcmovnbe
sub
mov
jnp
(bad)
mov
pop
adc
fwait
rcr
aad
out
or
jae
mov
inc
cmps
pop
lods
call
imul
(bad)
data16
and
ret
dec
call
rcr
pop
xchg
dec
(bad)
mov
in
jnp
push
sti
push
jecxz
jecxz
mov
push
jbe
test
dec
out
sbb
imul
push
sbb
call
mov
and
pushf
pushf
fbld
push
xchg
rcr
ins
push
jl
test
sar
nop
pushf
mov
xor
sbb
or
push
(bad)
adc
push
jmp
fdivr
or
add
cdq
cmp
add
into
(bad)
fimul
rep
pop
clc
jno
sbb
ins
add
js
jge
enter
ins
or
xchg
add
ja
not
fnstsw
dec
pop
call
jmp
push
sub
aad
push
pop
clc
in
mov
sbb
mov
into
sbb
ffreep
pop
ins
xor
mov
iret
sub
pop
lods
mov
pop
je
cli
pushf
jl
repnz
lahf
int3
les
enter
adc
cwde
ins
sbb
aas
jl
into
ins
iret
test
mov
out
mov
int3
xchg
mov
rep
and
sub
repnz
pop
xchg
push
fs
in
and
lahf
je
fild
mov
(bad)
adc
jmp
jmp
sub
cmp
inc
cld
pushf
and
repz
das
sbb
clc
jne
push
jp
std
sbb
mov
sub
in
stc
sub
and
aad
sub
stos
repnz
mov
pop
mov
push
pusha
jmp
mov
fwait
push
neg
mov
mov
xlat
xor
pop
test
pushf
xor
pusha
(bad)
fs
fld
mov
inc
xchg
adc
ins
cwde
adc
pop
test
push
jnp
in
ja
ficomp
adc
rol
retf
mov
sbb
clc
dec
push
ins
adc
mov
rcr
xlat
sbb
in
adc
xor
cwde
xor
xchg
dec
push
xor
jae
push
pop
clc
ss
pop
mov
sahf
cmp
pop
xlat
xchg
jmp
xchg
retf
scas
daa
scas
and
sub
pop
test
lods
js
ins
pop
sahf
pop
jmp
aad
push
movs
out
sbb
xchg
and
pop
pop
icebp
lods
lods
cmc
pushf
xchg
sar
cmp
mov
ins
imul
pop
repz
mov
fnstsw
pop
add
pop
pop
int3
fwait
pushf
cld
ins
lock
es
pop
lods
cmp
pop
or
sbb
or
pusha
push
dec
mov
cmp
adc
or
pop
test
mov
pusha
xor
sbb
shl
movs
pop
js
mov
cld
fcomp
cmp
mov
sbb
dec
fisubr
pop
ins
pop
sbb
or
in
mov
shl
aad
push
xor
cmp
pusha
pop
lods
sub
sub
(bad)
fnstsw
je
call
or
jp
outs
out
aas
ins
das
pushf
mov
ja
cli
repz
sti
and
mov
sbb
vpsubusb
stos
jl
push
shl
or
arpl
aad
int3
mov
mov
xor
pop
cld
ret
pop
cmp
fwait
mov
ficomp
shl
leave
pop
cdq
pop
pusha
fidiv
les
cmc
sbb
and
mov
push
sbb
mov
stos
adc
dec
mov
lea
cmp
jmp
cld
add
in
push
pop
movs
pop
fsub
iret
in
lahf
jmp
cdq
int3
jp
inc
push
sbb
add
sub
dec
mov
cmp
nop
sbb
std
fdivr
lods
jmp
add
mov
dec
cmp
fidiv
pushf
mov
xlat
lock
add
iret
pop
in
fs
xchg
mov
ins
enter
jae
lock
sub
pusha
outs
jp
test
adc
xchg
rol
ins
outs
and
cdq
or
pushf
out
cmp
sti
xor
(bad)
mov
sti
stc
shr
push
mov
call
lods
(bad)
int3
add
dec
movs
dec
and
mov
(bad)
or
clc
movs
lahf
scas
(bad)
lea
or
pop
cmp
data16
sub
movs
push
sti
mov
xchg
lock
into
pop
rol
shl
pushf
pop
cmc
xor
stc
fcomi
pop
mov
pushf
or
ins
test
xor
adc
adc
sbb
xchg
ins
ja
adc
push
push
fwait
pop
mov
cmp
jl
xchg
sub
fcomp
fist
js
mov
lods
sahf
sar
cmc
ffree
cmp
mov
pop
mov
xor
aam
push
int
mov
in
js
aad
jecxz
push
cmp
cld
sub
xchg
sub
dec
pop
rcl
adc
push
sbb
jecxz
sub
push
add
dec
(bad)
call
aam
adc
cmps
ror
or
cld
mov
or
stos
sbb
call
ja
sahf
jl
push
js
cwde
bound
leave
cmp
fimul
mov
fst
adc
in
xchg
cmp
mov
xor
aaa
pop
addr16
adc
into
ficom
mov
pop
cld
sbb
mov
movs
inc
jnp
les
pushf
add
mov
fisttp
inc
int3
into
push
mov
cdq
jae
push
pop
jmp
sub
jmp
xor
sahf
xchg
and
mov
xchg
cdq
les
pop
xor
cld
fstp
call
jne
pop
iret
and
sub
sbb
movs
mov
adc
cld
adc
sbb
cld
fs
test
pushf
int
pop
stos
in
mov
mov
mov
aas
scas
mov
hlt
adc
mov
mov
jns
(bad)
xor
pop
call
or
cmp
cwde
sbb
clc
sti
dec
or
bound
adc
pop
jbe
mov
sub
js
scas
sbb
xchg
pop
cli
sub
imul
cmp
(bad)
xchg
sbb
xor
call
out
push
daa
ja
ss
pushf
mov
ins
mov
push
(bad)
mov
jmp
in
fs
sbb
out
mov
mov
adc
inc
push
cmp
add
push
sti
into
in
inc
jecxz
rcr
mov
leave
pop
dec
fimul
pop
jmp
fimul
and
sbb
xor
jecxz
mov
icebp
stos
sbb
mov
cwde
iret
mov
push
les
in
push
fild
xchg
call
outs
mov
sbb
xchg
mov
push
pop
sbb
or
sbb
sbb
sub
mov
sbb
stc
mov
sub
outs
sbb
ror
mov
xor
sub
popf
jp
ins
es
adc
cmc
jmp
ret
(bad)
pop
cmp
xor
rcr
dec
cmp
cli
jl
call
adc
inc
mov
pop
stos
clc
push
fcomp
mov
or
dec
xor
(bad)
pushf
rcr
leave
push
mov
adc
jne
jmp
mov
sbb
mov
mov
retf
int3
in
mov
mov
mov
test
jge
aam
pop
cld
div
push
fdivr
outs
push
je
push
mov
(bad)
lahf
fcomp
dec
pusha
xchg
sbb
inc
sub
sub
push
mov
mov
aas
cmp
fidivr
sbb
sbb
das
aad
mov
push
imul
mov
stc
pushf
inc
push
les
xor
pop
in
std
add
outs
sub
mov
jp
sbb
inc
shl
pop
mov
cmp
in
or
jl
call
aad
pushf
mov
dec
mov
aad
push
fst
add
sub
pop
and
dec
imul
pop
add
mov
sbb
sbb
or
jmp
mov
push
sahf
repz
mov
inc
mov
cmp
adc
dec
(bad)
mov
clc
sbb
scas
fsubr
imul
pop
ja
fdiv
pop
cmp
pop
cli
stc
pop
mov
pop
mov
jl
int3
pop
shr
fs
jb
xchg
xor
xchg
aam
fstp
pop
lods
or
pusha
mov
lods
cld
and
fisttp
and
int3
sbb
pop
nop
sub
scas
lods
dec
or
sub
js
mov
pusha
cmp
push
test
rcl
xor
push
pop
push
sar
in
cmp
fisub
mov
sub
xchg
lods
jno
and
sbb
fstp
mov
imul
call
cld
repnz
dec
aad
(bad)
fst
fucom
pop
mov
jl
cmp
addr16
xchg
mov
cmps
xor
sar
and
lock
mov
jno
dec
mov
jmp
or
xchg
imul
into
jnp
dec
(bad)
int
pop
dec
pushf
aad
xor
lods
mov
cwde
dec
jl
movs
dec
mov
inc
into
(bad)
sahf
cmp
jg
out
stos
pushf
xlat
sub
movs
pop
in
mov
out
dec
pop
(bad)
(bad)
sbb
mov
jbe
inc
mov
ja
pushf
int3
add
test
mov
(bad)
fidivr
xchg
pusha
aas
int3
cmp
aam
push
adc
ror
stos
scas
rcl
arpl
ins
rol
xor
int3
adc
mov
pusha
jnp
or
ds
push
xchg
or
call
aad
aad
aad
pop
setae
shl
in
sbb
jmp
dec
push
push
cmp
je
ss
cli
mov
fsub
lods
aas
or
jg
mov
ss
fdiv
cmps
in
push
mov
int3
pop
(bad)
aam
or
cmps
fimul
adc
xor
fnstenv
ds
or
dec
sbb
adc
or
xchg
xchg
(bad)
jne
pop
jmp
cmp
pop
and
cli
adc
and
into
cmp
push
mov
lods
jae
repz
pop
lods
sar
inc
fcomp
push
sar
loop
ja
ficom
mov
aam
jb
xchg
dec
int
(bad)
mov
xchg
adc
jp
push
sub
jl
sbb
fs
jno
fwait
mov
shl
int3
jp
stos
out
lahf
cli
sbb
push
call
adc
out
outs
rol
pushf
xlat
sub
adc
xor
rcl
out
inc
adc
fst
xor
out
mov
mov
dec
or
sbb
adc
xor
ficom
je
aam
sbb
into
fisub
mov
xchg
lods
mov
push
mov
clc
dec
(bad)
int3
hlt
aad
hlt
sbb
xor
xchg
ins
stc
sub
sbb
lods
mov
push
leave
push
int3
pop
mov
jmp
add
mov
lods
jmp
ja
cmp
aad
push
fstp
adc
or
ins
pushf
sar
push
lods
or
sbb
add
int3
popf
push
push
push
aas
pop
out
mov
pushf
mov
inc
xor
iret
sub
xor
push
or
mov
shr
push
call
fisub
call
cmp
and
pop
fcomp
or
sub
test
pop
aad
push
aam
pop
xchg
push
adc
jbe
mov
outs
iret
jecxz
loopne
jnp
lods
call
mov
fsubrp
loop
stc
inc
lock
xchg
mov
fisttp
pop
or
cmp
into
rcl
(bad)
leave
sahf
(bad)
aam
pop
movs
xor
cmps
retf
(bad)
and
sti
mov
into
movs
ror
cmp
cmp
lods
and
mov
pop
lods
push
shl
int3
cmps
popa
jl
ja
sar
pop
(bad)
cmp
clc
iret
xchg
sar
mov
pusha
cmp
mov
and
fcmovu
lods
pop
mov
outs
mov
fs
sbb
push
cmp
dec
xlat
xor
mov
fild
jbe
or
aad
push
fistp
rcl
dec
add
xlat
cmp
or
cmp
sbb
push
mov
cmp
lock
pop
mov
(bad)
or
aad
aad
lock
std
call
and
cli
cmc
stc
push
jl
mov
adc
mov
pop
push
xchg
xchg
pop
adc
mov
loope
std
jmp
adc
jnp
scas
push
jle
rcr
push
cld
pop
jne
call
or
rcl
sub
jmp
push
push
pop
pop
sbb
push
pop
ror
scas
(bad)
xchg
jp
jmp
jge
aam
jmp
dec
stos
pop
pop
xor
daa
jne
idiv
xchg
cli
bound
icebp
pop
rcr
add
fld
dec
shr
jge
sti
sbb
mov
sub
aad
stos
sub
leave
scas
push
aam
lods
aaa
add
clc
adc
daa
mov
movs
xchg
pushf
hlt
xchg
adc
pop
xchg
sbb
pop
mov
sub
outs
mov
(bad)
shl
lods
neg
aam
mov
retf
jbe
ret
or
sbb
jnp
xor
fmul
mov
mov
dec
stc
jmp
push
mov
in
xchg
scas
add
push
dec
hlt
sbb
out
xchg
int
push
les
icebp
fstp
cld
push
cs
xor
nop
mov
dec
popf
sbb
jmp
xchg
pop
aam
std
sbb
sti
aad
icebp
addr16
adc
pop
sbb
or
push
dec
mov
cli
je
pop
jmp
inc
aam
lods
dec
or
cmp
dec
imul
xor
je
lods
test
sbb
popa
icebp
cmp
and
(bad)
cmp
iret
xchg
mov
jo
div
mov
mov
fidivr
xchg
adc
pop
pop
pop
mov
inc
cmp
pop
mov
xchg
adc
or
mov
sti
cld
test
je
sti
or
push
hlt
shl
ds
(bad)
cld
daa
fldenv
in
ja
(bad)
fnsave
pop
mov
fcom
in
adc
dec
(bad)
pop
xchg
mov
jmp
fmul
push
hlt
cmp
sar
iret
xchg
int
lods
test
cmp
adc
sbb
cmp
mov
int
cmp
sub
jo
repnz
sub
cmp
mov
imul
arpl
(bad)
call
iret
fmulp
fstp
or
ret
popf
mov
sub
loopne
mov
nop
hlt
or
jg
adc
xor
inc
int3
xlat
pushf
mov
jns
push
jbe
mov
mov
jle
adc
call
data16
retf
stos
rcr
jge
or
ins
xchg
cld
pop
sbb
mov
ins
mov
aam
int3
fild
push
ficom
push
ror
cli
(bad)
repnz
js
mov
fisubr
in
(bad)
stos
sbb
je
mov
fs
(bad)
mov
into
and
stc
fwait
mov
mov
(bad)
dec
dec
outs
cmps
pop
mov
scas
mov
fisttp
dec
jg
fadd
jae
lahf
jmp
popf
sbb
jmp
pop
jmp
dec
jl
jo
shl
stos
rcl
pop
fcmovbe
push
pop
(bad)
pushf
inc
cld
shl
adc
jmp
les
(bad)
push
popf
or
fsubr
pushf
icebp
mov
lods
jmp
aaa
call
iret
fcomp
sahf
data16
jl
mov
push
pushf
call
adc
int3
mov
aad
sbb
in
push
or
jmp
sub
jmp
xchg
adc
(bad)
mov
push
pop
sbb
mov
pop
(bad)
ficomp
lods
xlat
push
cmp
sbb
sbb
enter
push
push
cmp
(bad)
test
cmp
jp
jno
lods
sar
leave
pop
push
loop
jae
sub
data16
xchg
xchg
dec
(bad)
in
or
repnz
mov
ficom
cld
ror
sbb
ins
retf
int3
xor
sti
js
int3
out
mov
outs
and
pop
cdq
adc
pop
retf
push
ret
push
mov
aad
dec
lods
rcl
pop
inc
pop
pushf
mov
jl
(bad)
sub
mov
or
cli
xchg
sbb
ja
mov
daa
pop
rcr
push
dec
adc
mov
dec
(bad)
fist
fcomp
jecxz
jecxz
mov
mov
dec
pop
mov
cmps
iret
fstp
xlat
sub
into
aad
xor
int3
and
ds
cld
inc
cmps
div
leave
ss
int3
push
sahf
(bad)
rcr
push
rcr
mov
pop
popf
mov
add
(bad)
sbb
pushf
call
sub
mov
rcr
pop
dec
fst
pop
push
jne
cmp
(bad)
pop
rcr
and
pop
je
mov
jle
cdq
shl
pop
popa
into
cs
fcomp
cld
jnp
cmp
xor
ss
push
jle
xchg
and
cli
scas
repnz
jnp
rcr
clc
xlat
in
nop
xchg
fiadd
repz
fnop
xchg
in
push
or
ret
in
lods
xlat
sub
repnz
shl
sbb
cwde
sbb
ins
cs
pop
ins
mov
test
cmc
add
xor
daa
dec
fcomi
xor
ins
mov
pusha
pop
cmp
call
jb
mov
clc
mov
fs
pushf
ret
mov
aas
cmps
aaa
mov
mov
jge
rcl
xchg
adc
mov
adc
aad
xor
pop
fidivr
jne
jno
(bad)
sbb
(bad)
neg
aam
fwait
in
stos
popf
or
out
pushf
sbb
dec
ins
sub
clc
push
jmp
push
into
ds
pop
(bad)
in
dec
out
xchg
call
xor
cmp
rcl
cmp
and
inc
enter
sbb
test
fcom
call
iret
scas
pop
imul
aad
rcl
(bad)
hlt
sti
sbb
mov
popa
inc
push
fisubr
push
lods
(bad)
js
fistp
cld
pop
(bad)
leave
sbb
gs
popf
sahf
dec
pushf
xor
adc
jmp
jl
out
jmp
out
cmp
pop
push
sub
rol
cmp
push
jp
inc
push
fs
ins
xchg
loope
imul
rol
cld
call
ja
nop
(bad)
pop
mov
in
xor
int
mov
fstp
push
or
push
sbb
out
mov
ficomp
(bad)
outs
sub
xchg
mul
(bad)
ins
rol
push
mov
push
dec
pushf
rcr
rcl
mov
(bad)
sti
stc
or
push
int3
adc
pop
mov
scas
mov
jns
aam
test
shl
jnp
ins
aas
cld
adc
xor
fstp
jp
pushf
test
jmp
mov
inc
jp
jnp
sbb
fwait
nop
mov
leave
jp
ja
pop
scas
push
(bad)
cmp
(bad)
ffreep
mov
(bad)
(bad)
mov
cmp
push
scas
pop
push
ja
pop
pop
xor
in
popa
pop
mov
rcr
inc
imul
cmp
into
cmp
mov
sbb
sbb
in
nop
sub
repnz
pushf
repnz
or
fisttp
jp
jns
lahf
mov
daa
sub
(bad)
mov
adc
sahf
lods
add
fistp
sar
pop
jmp
cld
cmps
lods
mov
pushf
test
(bad)
pop
outs
loope
sbb
call
ss
sbb
pop
sti
dec
pushf
sbb
arpl
lods
xchg
mov
test
sahf
xchg
in
mov
ins
dec
cld
mov
imul
mov
xor
aaa
fucomi
or
int
mov
fidivr
popa
ins
push
xchg
loop
jnp
ins
jle
pop
sahf
pop
sbb
jmp
(bad)
mov
not
jmp
sar
push
test
ins
in
pop
and
xor
pushf
mov
xor
out
mov
jns
push
ins
sbb
mov
retf
pushf
push
or
jmp
pop
shl
lods
icebp
push
or
ins
int3
clc
xor
aam
rcr
mov
cli
jl
call
pushf
out
sub
sub
push
fwait
jmp
cmp
push
rcr
xchg
popf
int
(bad)
inc
mov
xchg
sbb
ss
xchg
xchg
stos
sbb
fs
dec
mov
loop
push
in
hlt
xchg
lods
rol
ret
xor
movs
sub
out
sbb
sbb
jmp
leave
pushf
(bad)
jle
movs
adc
ficomp
ror
es
adc
push
aaa
jnp
sti
sub
out
xlat
pop
push
pop
aad
cmp
sti
xor
mov
mov
not
mov
je
into
mov
dec
aam
scas
outs
shr
fstp
hlt
mov
sub
ret
mov
adc
xchg
jecxz
jecxz
dec
cmp
ins
imul
mov
mov
mov
adc
cmp
inc
icebp
adc
pop
imul
pop
xchg
hlt
cmp
push
sub
fmulp
cmp
mov
lds
aam
imul
cmp
mov
pop
(bad)
aas
mov
mov
mov
pop
int3
adc
in
je
jae
sbb
or
in
jmp
jecxz
inc
inc
enter
int3
dec
cmps
inc
sbb
in
scas
ds
mov
cmps
pop
in
sbb
out
les
inc
fiadd
pushf
push
ss
inc
fdivrp
mov
or
cld
push
inc
outs
push
rcl
xchg
or
aas
movs
gs
test
jno
test
lods
or
mov
xlat
fisubr
pop
call
retf
mov
mov
dec
(bad)
cmp
jmp
or
js
ret
aam
sbb
add
cld
xor
cmps
lods
cwde
shr
outs
fnstsw
xchg
cld
fidiv
fwait
int3
and
cmp
sub
fst
enter
test
sbb
mov
dec
cmps
aaa
push
je
leave
mov
cmp
imul
hlt
pop
popa
or
repz
inc
mov
pop
jl
sbb
adc
jle
outs
cs
movs
inc
shr
pushf
lock
sti
mov
and
aad
(bad)
(bad)
mov
jle
sub
push
fistp
dec
test
push
stc
sbb
clc
pop
movs
mov
mov
mov
ja
cli
lods
dec
ret
mov
movs
xchg
inc
scas
pop
mov
sar
fimul
fs
pop
dec
jmp
out
dec
ins
push
sub
sbb
pop
stc
jge
aad
jnp
movs
jecxz
dec
mov
ret
lahf
imul
or
es
cld
and
cli
sub
fs
fs
std
les
or
fisttp
aam
fdivp
rcl
aam
outs
pushf
mov
dec
in
xchg
add
rcl
mov
pop
rcr
jmp
or
ins
dec
cmp
frstor
cld
mov
xlat
in
shr
xlat
imul
sbb
cmps
sbb
jge
(bad)
into
xchg
fisttp
adc
push
sbb
push
mov
mov
pusha
fimul
shl
(bad)
adc
adc
fs
dec
and
sub
ins
fcom
pusha
gs
fcomp
sbb
pop
stc
clc
sahf
call
aaa
test
mov
cmp
jecxz
sbb
out
loop
dec
iret
int
stc
fisub
jnp
cmps
cwde
or
mov
xchg
pop
jecxz
sub
jg
mov
aad
pop
call
push
stos
sbb
pop
aam
(bad)
pop
fsincos
push
into
test
sub
ins
not
lods
pusha
aaa
pusha
pop
inc
and
mov
jmp
icebp
cld
(bad)
xor
dec
inc
into
mov
cmp
sbb
jmp
sahf
mov
sbb
and
out
xor
add
outs
leave
outs
add
and
fsubr
adc
sbb
lods
je
pop
sbb
repnz
repz
push
fld
into
pop
pushf
test
push
xchg
push
sahf
adc
xor
movs
push
push
xchg
xchg
mov
mov
lahf
pop
movs
repnz
cld
mov
stc
loope
fs
adc
pop
cmp
mov
pushf
or
push
rcl
les
sbb
(bad)
cmp
or
pusha
push
adc
mov
shr
enter
mov
adc
repz
int3
inc
cld
mov
push
xchg
dec
fdivp
cwde
push
push
pop
mov
push
neg
jne
popf
dec
scas
mov
xor
out
cmps
sub
leave
test
pusha
cmp
ficom
pushf
fisttp
cli
sahf
mov
pop
ins
sub
and
adc
lods
mov
ficom
lea
mov
push
pop
test
ret
mov
cmp
jp
int3
hlt
adc
xchg
ja
mov
shr
dec
jo
pop
cli
and
push
dec
sbb
jnp
jae
fidivr
sbb
sub
je
out
dec
cdq
xchg
cmp
sub
xlat
lds
pushf
int3
sbb
cmp
cld
fdiv
or
std
clc
jmp
jmp
mov
push
sub
push
das
and
mov
fcomp
ja
jmp
push
psubusb
repnz
pop
xchg
ficomp
adc
xchg
rcl
xlat
loopne
push
popf
push
adc
jge
mul
pop
out
rol
stos
mov
sbb
or
stos
ret
cwde
dec
and
adc
cdq
aaa
push
xor
sub
dec
hlt
neg
aam
sbb
pop
imul
fdivr
mov
xchg
push
xchg
adc
lock
(bad)
mov
(bad)
push
cli
rcr
(bad)
fstp
push
xchg
into
(bad)
shr
sbb
arpl
mov
jno
arpl
retf
dec
retf
adc
(bad)
sbb
mov
add
mov
call
call
xor
rcl
fisttp
pop
imul
shl
cmp
shr
dec
sbb
nop
xchg
in
xlat
fisttp
shl
sub
cmp
add
dec
mov
jle
call
adc
push
lods
pop
cmp
pop
rcl
dec
adc
cmp
in
shr
mov
jmp
call
mov
clc
test
mov
enter
ins
rol
aad
jnp
int3
adc
fcomp
sbb
hlt
jecxz
mov
xor
test
adc
(bad)
pushf
jmp
sahf
lods
jno
fwait
test
repz
lea
pop
push
sbb
or
imul
xchg
mov
pop
push
sbb
clc
jne
mov
jns
mul
dec
cwde
xor
fxch
lods
xchg
mov
pop
ins
xchg
ins
cwde
hlt
xor
push
dec
dec
daa
sbb
sub
cmp
cdq
cld
jns
jmp
push
cmps
jmp
lods
mov
push
dec
pop
fcomp
cmp
dec
or
stc
adc
mov
cmc
fcom
inc
int3
shl
bound
icebp
dec
rcl
pop
push
jmp
sbb
retf
(bad)
adc
cdq
jmp
jmp
jmp
stc
push
fld
lods
pop
mov
pop
mov
mov
movs
cmp
outs
push
out
out
mov
push
shl
jg
int3
xchg
int3
mov
pop
rcl
(bad)
xor
cmp
fcomp
loop
ficomp
push
xor
sbb
or
dec
push
pusha
fld
mov
cmp
adc
out
adc
inc
pop
(bad)
pop
push
lock
fwait
mov
cmp
addr16
fsubrp
mov
fwait
jns
jbe
aam
int
xchg
mov
iret
xchg
jno
aas
stos
adc
sub
xor
push
jns
push
lods
and
pushf
jae
cmp
pop
or
mul
mov
rcl
pushf
mov
popa
jmp
or
jl
mov
hlt
pushf
out
adc
lods
hlt
vcvtps2pd
sbb
dec
aad
add
add
xchg
mov
or
rol
mov
ds
iret
jmp
mov
push
cld
pusha
mov
or
fcmovb
xchg
dec
sbb
or
mov
add
xor
adc
xlat
pop
inc
clc
xor
imul
xchg
lahf
cmp
push
mov
fst
shl
mov
push
pop
pop
mov
gs
adc
adc
mov
int3
sbb
repnz
mov
and
cmp
mov
in
pop
fisttp
mov
mov
push
fcomp
fisub
push
push
pop
int3
mov
pop
pop
mov
fld
sar
imul
sbb
dec
mov
cdq
mov
fistp
daa
call
fwait
retf
adc
ins
adc
mov
ficomp
pop
and
jg
and
es
mov
addr16
and
pop
test
(bad)
(bad)
pushf
mov
cs
ins
fisubr
enterw
inc
mov
pushf
xchg
jp
jnp
rcl
or
clc
mov
lahf
xor
cmp
cmp
ficom
repz
mov
push
ins
(bad)
cmc
ss
xchg
sbb
pop
mov
in
hlt
pop
idiv
mov
add
ds
dec
pushf
out
shl
mov
or
imul
aas
enter
(bad)
push
test
cmp
jbe
mov
cmp
repz
cmp
xchg
mov
mov
rcr
sub
(bad)
mov
jp
leave
cli
ficom
das
into
ds
push
mov
aam
loop
js
cld
xchg
pop
or
in
lock
ror
imul
data16
mov
mov
cwde
in
movs
adc
scas
lock
or
cwde
xchg
aam
push
mov
lods
cmp
ss
lock
or
or
fisttp
cs
xor
outs
pop
into
jmp
inc
jmp
clc
and
xchg
mov
(bad)
mov
or
push
fcomp
jnp
mov
push
aad
mov
xor
and
in
pop
stos
cdq
je
pop
xchg
push
hlt
dec
pop
nop
aam
adc
aaa
jg
int3
ja
sub
shl
xchg
dec
sub
fstp
push
int
cdq
pop
pop
bound
fdivr
ins
jl
lock
push
push
sbb
mov
stos
cmp
or
cld
retf
cs
pop
leave
and
push
xchg
xor
sti
cmp
cmc
mov
je
inc
jmp
test
lods
shl
jl
fstp
sbb
push
(bad)
mov
push
xor
aas
aaa
cld
xor
ficomp
out
iret
sar
cmps
faddp
lods
aad
hlt
push
arpl
aad
mov
pusha
ins
hlt
or
gs
(bad)
fyl2x
push
xchg
pop
jb
cmp
mov
sahf
sub
cmps
cmp
neg
push
cli
push
jb
fidiv
shl
mov
into
pop
rcr
mov
lods
iret
push
stc
(bad)
jno
jns
mov
shl
arpl
sar
or
pop
in
jmp
inc
in
sti
mov
sti
adc
push
dec
stos
mov
nop
adc
mov
or
sub
mov
sbb
xor
pushf
sbb
or
inc
adc
push
into
sbb
sub
enter
adc
nop
pop
mov
jl
sti
xor
(bad)
dec
mov
jo
jle
inc
int3
in
jp
dec
in
xor
fisttp
int3
cli
adc
jbe
test
imul
pop
dec
adc
ja
xchg
sbb
mov
cld
mov
pop
mov
pop
out
pop
xor
lds
xor
sub
jnp
push
mov
and
jnp
jmp
cmps
fnsave
ss
fcom
fbstp
xor
rcr
mov
daa
pop
pop
pushf
out
sbb
fst
shl
pop
xchg
xchg
pop
add
outs
add
test
rcl
enter
aad
add
scas
push
stc
fsubr
push
fwait
sbb
lahf
dec
lods
icebp
(bad)
leave
jne
pushf
clc
push
sub
or
cli
adc
stos
adc
jb
push
sbb
add
mov
jmp
test
call
pop
fisub
(bad)
adc
idiv
nop
jecxz
call
ins
mov
pop
nop
pop
push
call
imul
jae
call
sbb
daa
cdq
rcr
fimul
in
sti
push
add
(bad)
(bad)
mov
cmc
fstp
sti
mov
out
out
std
movs
push
mov
dec
mov
add
sub
fdiv
jno
push
cli
mov
es
mov
cmps
cmp
cld
add
out
inc
sbb
push
sbb
sub
(bad)
mov
push
mov
test
xchg
inc
aam
repnz
xchg
pop
mov
cmp
shl
dec
fs
jbe
cwde
aam
cmp
sub
in
sub
sar
sbb
shl
sar
or
cld
mov
sub
sar
bswap
sbb
mov
lods
mov
sbb
mov
int3
mov
pushf
adc
scas
mov
nop
xchg
push
(bad)
push
adc
mov
lods
mov
sub
mov
fisttp
rcl
and
and
sub
push
fs
sti
mov
jo
or
shl
xor
sbb
inc
xor
mov
sub
mov
jp
fs
jnp
test
fwait
mov
and
sub
shl
xchg
imul
mov
jmp
pop
leave
ds
mov
jnp
cmp
in
dec
ins
xchg
arpl
test
pop
ror
push
or
push
xchg
lods
mov
mov
sbb
ficomp
xchg
lock
and
aad
sbb
or
or
fnstcw
and
xchg
cdq
and
in
pop
popf
rcr
jmp
(bad)
sar
mov
das
ins
push
sub
(bad)
fnsave
cmp
jmp
cld
mov
xor
and
jge
in
fcomp
push
out
rcr
mov
pop
dec
xor
fdiv
mov
ss
out
mov
adc
push
cmp
mov
(bad)
adc
cld
and
fcom
scas
xor
into
dec
or
test
sbb
sub
fmul
add
xchg
jle
arpl
fdiv
fs
(bad)
es
push
into
repnz
in
xor
adc
ins
repz
fild
test
je
add
je
cli
xor
lods
ret
repnz
xor
sbb
in
mov
daa
rcr
jne
sub
mov
cwde
mov
pop
cmp
mov
pop
int
sub
nop
fcmove
xchg
into
inc
fdivrp
sub
jae
int
repnz
mov
fst
dec
cmps
iret
(bad)
out
sbb
lahf
sahf
push
cdq
jo
pusha
shr
jae
int3
in
xchg
inc
adc
jns
(bad)
pop
(bad)
repz
pop
pushf
mov
sbb
mov
repnz
pop
ficom
lods
fldcw
adc
and
loope
sub
mov
inc
mov
mov
rol
popf
in
and
sti
jae
sub
jecxz
inc
stc
aad
mov
xchg
sub
jno
xchg
div
scas
lahf
adc
stos
cmp
movs
jg
mov
pop
xchg
sub
ss
xchg
or
fld
daa
fwait
jmp
mov
aas
jno
fdivrp
or
cld
fist
or
pushf
call
cmp
mov
repz
icebp
fiadd
enter
sbb
cdq
push
pushf
shr
mov
aas
(bad)
xor
dec
(bad)
into
mov
lods
mov
enter
sbb
pop
pop
pop
add
jle
mov
pop
into
push
sub
call
jge
dec
(bad)
mov
arpl
aas
rcr
inc
sub
repnz
pop
test
xor
or
pop
jmp
jmp
div
dec
sub
xor
cmps
cld
xlat
or
mov
pop
icebp
jmp
cmp
pop
pop
fidivr
test
aam
(bad)
sbb
push
xchg
xor
xor
jne
jmp
(bad)
push
test
mov
mov
or
rcl
sar
imul
xchg
lock
adc
cld
rcr
in
aad
rcr
rcl
sbb
lods
shl
data16
dec
pushf
cmps
into
test
dec
lahf
ds
sar
jb
aad
into
aas
(bad)
cmp
dec
ds
inc
lods
push
pushf
pop
shl
call
sti
push
aad
jae
mov
mov
mov
dec
xchg
in
fwait
(bad)
pop
arpl
sbb
rcr
mov
pop
jmp
sub
dec
in
mov
fs
es
sbb
xor
imul
rcl
pop
les
fst
cwde
adc
jmp
cdq
cmp
mov
aad
sub
pop
adc
neg
sub
mov
cwde
sbb
push
jg
jo
(bad)
in
jbe
pop
jmp
stos
call
(bad)
jmp
fcmovu
shr
pop
lods
rcr
repnz
pop
addr16
adc
pop
push
je
pusha
mov
mov
mov
(bad)
mov
cli
xchg
mov
imul
enter
add
mov
call
mov
sub
and
push
jb
mov
retf
xchg
pop
and
sub
call
sbb
xchg
push
or
sbb
sbb
cdq
int3
(bad)
mov
mov
mov
popf
push
pop
mov
fcomp
fwait
rcl
mov
sbb
add
mov
mov
icebp
mov
add
pop
push
or
(bad)
fild
jb
jne
xchg
xchg
xor
push
adc
hlt
dec
dec
int3
sub
xchg
les
mov
ins
stc
iret
dec
test
retf
sar
les
(bad)
cld
arpl
xchg
inc
sbb
sbb
cmp
cmp
pop
inc
add
std
xchg
sbb
push
sbb
mov
jecxz
jmp
sub
cmp
loopne
sub
mov
mov
mov
(bad)
cdq
es
mov
and
xlat
icebp
mov
not
lock
pop
cli
imul
adc
pop
xchg
pop
je
sahf
arpl
xor
leave
jle
(bad)
ror
mov
int3
and
pushf
retf
in
ret
xor
jp
xor
lods
adc
jns
xlat
call
sub
xchg
retf
popa
jno
mov
jle
cli
or
fcmovne
test
lahf
ds
jl
jge
mov
cmp
div
xchg
sahf
adc
aad
push
jmp
fist
sbb
xchg
cdq
inc
loopne
pop
scas
pop
inc
cmp
test
fsub
mov
xchg
fwait
or
pop
(bad)
mov
cli
push
(bad)
xchg
push
call
call
mov
shr
lods
sbb
push
xor
sbb
jp
dec
lods
jge
jae
pop
or
xchg
push
test
test
xchg
js
call
dec
xor
push
pushf
sub
sar
sar
sub
cmp
adc
popa
sub
int3
inc
div
call
adc
pop
je
push
xor
aam
call
repz
rol
cdq
aad
cmc
icebp
push
and
std
sub
sbb
push
ins
pop
cmp
call
in
enter
jae
shl
sar
dec
lahf
repnz
arpl
fs
xor
aaa
loop
fdivr
adc
and
push
sti
lock
or
push
mov
push
sti
fist
xor
call
hlt
push
jmp
sbb
sar
fcmovnb
cdq
sub
sbb
xchg
cmp
jg
icebp
cdq
xor
dec
stos
mov
repz
jl
add
adc
xchg
out
lea
out
stc
mov
outs
mov
adc
rcl
xlat
and
jmp
xor
jmp
nop
sbb
jo
sbb
jns
das
sub
rcr
mov
stc
mov
lods
movs
sbb
jbe
add
pop
push
clc
mov
out
xchg
lods
xchg
ins
iret
pushf
add
inc
ja
pop
ss
fldenv
outs
(bad)
sbb
call
sti
push
lods
jp
sub
sbb
pop
mov
stos
mov
aam
inc
int3
dec
push
jae
in
sar
xchg
pop
dec
inc
pop
and
dec
fist
pop
mov
mov
fisub
mov
fcmovnbe
fistp
pop
es
in
and
pop
aas
cmc
aaa
mov
or
sbb
add
not
les
pop
jno
call
iret
sbb
xchg
mov
xchg
cli
mov
xchg
cmp
cdq
inc
fstp
jg
jo
or
inc
mov
sub
push
sbb
aas
or
arpl
jge
add
dec
xchg
push
pop
popf
or
jp
int3
ret
cld
xchg
in
xchg
ja
adc
sub
jmp
out
adc
lods
add
push
fdivr
enter
in
push
lock
test
mov
inc
sbb
adc
push
ins
xor
in
ret
jle
sbb
sub
adc
mov
adc
jge
or
fwait
mov
repz
cmp
pop
(bad)
jp
sub
xchg
cld
jae
ficom
daa
ffree
rcl
mov
inc
sbb
lahf
out
mov
xor
sbb
ret
pushf
add
push
jmp
push
data16
fwait
inc
jle
rcr
std
test
aam
mov
push
pusha
scas
mov
scas
ins
shl
pop
mov
mov
icebp
mov
push
leave
test
push
pop
fwait
enter
sti
mov
(bad)
movs
lahf
xor
sbb
adc
sbb
xchg
mov
mov
mov
mov
fs
jbe
icebp
xchg
or
pop
cwde
or
hlt
pop
xchg
or
fidivr
sbb
je
cmp
pop
adc
sub
sbb
aam
cmp
ins
pop
pop
push
cld
arpl
mov
dec
ret
sbb
clc
mov
mov
pop
daa
mov
arpl
fcmovne
xchg
lods
pop
mov
scas
mov
pop
rcr
int3
mov
pop
sbb
push
pop
xchg
push
push
or
data16
mov
lock
xchg
adc
hlt
push
or
idiv
(bad)
cwde
arpl
jnp
push
idiv
mov
pushf
call
inc
ret
not
or
sub
push
sub
or
jmp
sbb
fadd
mov
xor
push
cmp
push
mov
call
sbb
inc
cmp
ins
(bad)
and
cmp
rcl
push
mov
xchg
mov
inc
fdivp
sub
xchg
sbb
xchg
adc
pop
fmul
icebp
lods
mov
pushf
rcr
rcl
xchg
nop
xchg
xor
dec
sbb
stos
inc
mov
xor
pushf
push
sbb
push
(bad)
pop
lods
xor
aad
aaa
dec
sti
mov
mov
aad
sub
jmp
out
mov
cmp
sti
stos
in
and
fsubr
pop
enter
mov
gs
fld
jns
repnz
out
xor
movs
js
jae
fwait
outs
sbb
daa
fcomp
cmp
add
(bad)
arpl
jle
adc
cmp
test
adc
sqrtps
ffree
rcl
inc
or
aad
jmp
mov
push
xchg
jno
mov
mov
sbb
jmp
aad
sar
pop
leave
xor
mov
adc
and
pushf
(bad)
jo
adc
lods
je
scas
stc
push
xor
stos
jnp
fwait
push
push
fdiv
rcl
xor
dec
pop
sbb
call
shl
addr16
adc
cmp
popf
sub
mov
mov
adc
jo
mov
jmp
mov
inc
jno
mov
mov
adc
shr
scas
adc
pop
aad
pop
mov
jmp
and
mov
add
mov
call
mov
mov
(bad)
jb
pushf
jne
push
fldcw
mov
cmps
pop
mov
dec
mov
dec
push
icebp
clc
neg
or
push
adc
call
mov
out
xchg
push
jne
and
jp
stos
lahf
imul
fucomp
int3
or
aaa
loop
pop
mov
adc
jp
jno
jb
aam
idiv
out
test
inc
dec
xchg
jno
fidiv
hlt
pop
cmp
jmp
sub
sbb
ins
fsubr
imul
cwde
mov
sbb
call
sahf
adc
fnsave
jmp
adc
push
mov
or
sahf
int
test
jae
mov
scas
jns
(bad)
xchg
mov
fcomp
int3
pop
sahf
ret
sar
push
(bad)
adc
fidiv
pop
xchg
sar
xchg
pop
es
push
push
adc
xor
(bad)
fild
adc
cdq
pushf
adc
adc
ins
shr
mov
jg
enter
mov
cmp
mov
mov
mov
dec
jp
dec
test
cmp
cwde
or
stc
xor
push
(bad)
jmp
gs
cld
daa
pop
pushf
sbb
aam
push
sbb
rcl
mov
aad
and
xchg
adc
jo
push
arpl
mov
pusha
iret
xor
pop
xlat
mov
out
jp
aad
mov
(bad)
int3
or
aas
jns
jle
sti
js
mov
shr
and
out
cld
mov
into
xchg
adc
sub
jo
(bad)
pop
mov
sar
push
jecxz
xor
inc
cmc
jne
pop
sar
aas
mov
mov
pusha
pop
outs
fimul
mov
mov
mov
pop
mov
or
adc
mov
sub
sub
push
cld
xor
inc
mov
adc
adc
fdiv
sbb
mov
pop
pushf
ret
in
frstor
ins
mov
dec
mov
repnz
fwait
in
mov
mov
stc
lods
cmp
jp
push
in
mov
inc
popa
mov
fnsetpm(287
(bad)
cld
or
jl
ret
mov
adc
in
int
(bad)
cmp
stos
call
cld
or
(bad)
mov
rcr
das
jae
mov
lods
arpl
jb
(bad)
pop
jmp
test
pop
fst
movs
jno
test
push
ret
cmp
inc
and
shl
sub
rcl
fnclex
mov
sbb
sbb
jmp
sub
adc
ret
dec
cmp
xlat
push
add
rcl
adc
jnp
or
push
adc
push
repz
jno
popf
mov
int3
bound
jo
sbb
mov
ja
sbb
sbb
call
dec
dec
xchg
ins
cmp
mov
pop
pop
push
into
idiv
cmp
sti
clc
dec
push
sbb
test
stos
push
push
sahf
sti
sub
jg
pop
fwait
sub
mov
cld
dec
push
fstp
arpl
adc
dec
std
int
dec
(bad)
push
push
dec
inc
or
pop
mov
mov
dec
aas
pop
add
div
mov
dec
pop
and
mov
jb
repz
xor
mov
adc
cmps
cmps
xor
lahf
mov
ins
cmc
mov
xchg
imul
xor
sbb
jp
mov
ja
mov
mov
aam
cwde
repz
xlat
fist
mov
inc
push
call
jne
out
inc
mov
sti
mov
pop
push
jp
test
icebp
jnp
(bad)
mov
cld
aad
inc
push
repnz
or
pop
push
push
push
jo
cmp
and
jecxz
sbb
mov
movs
xchg
outs
fucomp
sub
not
sbb
pop
and
pop
mov
movs
sbb
aad
fwait
adc
cwde
pop
dec
push
sar
xchg
mov
lfs
xchg
rol
or
pop
xchg
jbe
clc
lods
push
push
jecxz
pushfw
sbb
test
jmp
pop
loope
out
retf
sub
pop
fs
sahf
jl
adc
ins
repnz
xor
jb
fcomp
movs
pop
mov
xchg
cmp
not
sbb
or
icebp
(bad)
std
cmp
imul
rol
push
jge
call
out
mov
jmp
fdivr
and
enter
rcl
or
dec
jmp
dec
(bad)
sbb
xchg
push
aam
xchg
sbb
mov
aad
adc
aam
fs
xchg
out
pop
adc
cmp
jae
mov
sub
adc
enter
icebp
cmp
test
rcr
fbstp
in
mov
adc
pop
ins
(bad)
in
and
rol
iret
push
cdq
push
jbe
mov
mov
pusha
repnz
and
jns
xlat
repnz
push
aad
xchg
adc
cmps
mov
adc
xor
and
sbb
pop
xchg
int3
xor
test
jmp
jns
dec
and
lahf
sub
cmp
jne
mov
push
jmp
sub
rol
hlt
int
ficomp
xchg
xor
mov
les
sub
js
sub
mov
loop
adc
mov
rcl
icebp
push
xor
push
clc
sub
push
into
cmp
test
mov
aaa
cli
mov
call
pop
jne
sbb
hlt
dec
div
movs
sbb
scas
cmp
jmp
js
xchg
pop
xchg
sbb
mov
mov
(bad)
push
sbb
imul
or
loopne
pop
stos
cmp
xchg
sbb
nop
sbb
dec
repnz
jp
jp
mov
push
sar
or
and
mov
(bad)
in
jle
jg
push
pop
cmp
les
test
call
cld
jmp
mov
jae
sbb
std
(bad)
sbb
in
jmp
jecxz
inc
fst
or
int
push
shl
xor
int3
mov
mov
dec
inc
into
inc
ffreep
lods
inc
addr16
call
push
lock
sbb
dec
adc
cmp
lock
jno
pushf
push
cmp
push
add
dec
sbb
sahf
adc
ja
imul
lods
mov
pop
fisttp
sub
pop
fnsave
xor
xor
sub
push
arpl
pusha
(bad)
les
fistp
or
push
xor
mov
out
fs
(bad)
cli
int3
pop
adc
sbb
popa
shl
push
xchg
fistp
push
inc
mov
rcl
inc
fistp
aad
or
jmp
ss
pop
test
mov
lods
jmp
call
pop
xchg
pop
dec
mov
jo
push
inc
in
mov
cmp
xlat
inc
sbb
outs
in
(bad)
jne
push
(bad)
cmp
adc
fiadd
dec
fs
sahf
imul
es
xor
mov
hlt
repz
sbb
xchg
fwait
adc
cmp
add
push
loop
jmp
fcomp
rol
fnsave
rcr
mov
lods
jecxz
out
fwait
jl
int3
rcl
pop
inc
or
inc
mov
sbb
sbb
xchg
adc
fsubr
nop
dec
mov
pushf
std
rcl
mov
out
mov
mov
jmp
xor
rdpmc
pop
push
pop
jo
cdq
aam
inc
lods
call
inc
push
cmp
xlat
dec
les
fdiv
rcr
sub
aaa
push
imul
aas
pop
fisttp
xlat
sub
sti
repz
sbb
fwait
sbb
loop
movs
adc
or
adc
jp
xchg
lods
sub
ret
mov
xchg
sbb
xor
popf
(bad)
enter
jl
sti
mov
pop
dec
fsub
shl
out
mov
lods
(bad)
pushf
ins
push
cwde
sbb
sbb
clc
(bad)
call
out
pop
arpl
mov
or
call
out
sub
inc
sub
int3
cmp
je
aas
push
std
or
xchg
out
fst
popf
into
ficom
adc
ins
fldcw
fidiv
ficomp
lods
sbb
pushf
dec
push
into
dec
iret
pop
dec
mov
pop
push
sub
pushf
mov
int
leave
pop
fnstsw
sbb
pop
sbb
push
cmp
mov
into
jo
pop
pop
in
hlt
rol
ffreep
dec
cmps
into
push
dec
mov
sbb
rcl
and
mov
jae
dec
fnstsw
mov
ds
jbe
mov
movs
pop
stos
mov
jmp
repz
rcr
(bad)
xchg
(bad)
mov
rcl
add
scas
cmp
xchg
lods
xor
or
jno
leave
shl
ds
sbb
in
jg
xchg
mov
xchg
xlat
call
mov
jl
dec
pop
sbb
xchg
jmp
pusha
mov
dec
aad
sbb
(bad)
ret
adc
pushf
(bad)
cmp
pop
pop
clc
sbb
push
in
push
jne
ins
shl
dec
xchg
mov
shl
int
sar
mov
sbb
in
stos
pop
adc
dec
xchg
mov
xchg
cmp
test
mul
mov
sahf
mov
mov
nop
scas
push
mov
pusha
inc
outs
xor
sbb
push
rcr
dec
mov
js
pop
call
lock
adc
stos
(bad)
fbstp
sti
repnz
inc
sbb
cmc
mov
mov
mov
mov
call
dec
mov
sbb
ins
push
ss
jle
dec
adc
push
jae
popf
shl
gs
pop
fdivp
sbb
push
xor
rcr
dec
lahf
sbb
xchg
pop
ficom
enter
test
sub
jg
pop
sar
(bad)
call
aad
rcl
adc
lods
aad
ficomp
inc
loopne
pop
or
sbb
stos
stos
pop
pop
hlt
mov
push
sar
and
fistp
pop
fstp
mov
mov
stc
cmps
adc
rcr
mov
loop
fs
out
cdq
jl
mov
(bad)
test
mov
jge
fst
iret
mov
mov
fst
dec
mov
jae
pop
pusha
sbb
pop
mov
fimul
cdq
call
fist
sbb
rcl
pop
xchg
sbb
push
jbe
adc
sar
(bad)
shr
mov
or
inc
inc
repz
jmp
repz
lods
pop
mov
inc
mov
fst
enter
dec
dec
jmp
(bad)
push
neg
rcr
iret
mov
test
mov
ficom
mov
aad
push
bound
loop
sbb
in
sub
adc
outs
fs
sbb
mov
into
xor
jnp
mov
mov
into
es
lahf
jmp
mov
jecxz
aaa
push
rcr
clc
lods
ds
in
stos
xchg
mov
xor
sbb
fs
adc
pop
mov
mov
fdivr
sahf
int
(bad)
cmp
in
into
shl
int3
rol
stc
mov
push
mov
jecxz
mov
fs
xchg
iret
ds
mov
adc
xchg
fucomp
xchg
fwait
mov
sar
mov
adc
inc
adc
mov
sbb
pop
inc
pushf
inc
pop
(bad)
fistp
mov
bound
clc
cmp
stos
pop
jmp
fisubr
loopne
adc
adc
jl
pop
or
inc
xchg
ficom
xor
mov
push
arpl
pop
pop
out
mov
mov
push
mov
mov
rcr
enter
push
adc
arpl
xor
aas
int
ds
rol
push
test
or
shl
int3
dec
dec
push
pop
dec
or
jg
ins
xor
stc
mov
rcr
repnz
test
lahf
push
call
call
jg
push
jmp
jmp
or
rol
cmps
stc
stos
xor
fstp
jmp
or
inc
adc
dec
shl
fld
mov
lods
push
bswap
gs
(bad)
stc
in
mov
inc
scas
adc
mov
nop
test
mov
mov
lods
pop
lods
or
rcl
int3
retf
test
mov
ja
sbb
jl
sub
push
jmp
int3
loop
mov
and
sub
fistp
cdq
popf
in
adc
(bad)
movs
jle
jo
push
aaa
jo
mov
cmp
imul
lahf
les
out
dec
ins
iret
mov
adc
adc
or
les
fistp
sbb
outs
or
(bad)
ror
push
fwait
ds
aad
cmc
mov
mov
fistp
jmp
std
pop
or
sbb
in
fist
push
sbb
rcr
mov
jg
cmp
stc
mov
sbb
and
popf
les
pushf
(bad)
nop
sbb
adc
dec
bnd
jae
push
mov
shl
pop
or
add
xchg
(bad)
scas
jae
stos
stos
xchg
not
xor
(bad)
or
js
pop
out
fidiv
mov
mov
test
ret
mov
fidiv
push
cmc
dec
clc
inc
popf
adc
sbb
xabort
or
arpl
call
xor
out
(bad)
mov
mov
push
cmp
mov
into
and
adc
aad
pop
push
xlat
mov
or
and
sti
sbb
lods
cmps
lods
data16
mov
pop
xlat
retf
loop
jg
push
xor
push
sbb
clc
sar
clc
pop
repnz
es
push
sti
lods
push
sub
rcr
dec
sub
add
clc
adc
adc
shr
ins
xchg
pushf
or
jle
rcl
jo
xchg
mov
adc
cdq
stc
call
(bad)
fisub
jne
not
stos
adc
rol
pop
dec
jp
stos
sbb
xchg
(bad)
cs
iret
leave
hlt
retf
ret
into
and
mov
or
ffree
adc
xchg
call
dec
lahf
ror
mov
xor
mov
xchg
mov
pop
push
jp
mov
ins
sbb
into
adc
std
pushf
jbe
push
repz
or
cmp
sbb
cli
push
loop
jae
into
push
arpl
mov
rcr
fbld
jne
jnp
ret
cld
mov
mov
(bad)
ins
jmp
sbb
ins
shl
cmp
fidiv
mov
adc
or
and
arpl
out
pop
jnp
pop
js
or
sub
sbb
enter
leave
add
sahf
(bad)
clc
out
pop
mov
movs
push
jne
push
mov
push
nop
movs
mov
enter
jns
cmp
repnz
push
rcr
test
aad
(bad)
fst
pop
sub
hlt
xchg
pop
xchg
stos
push
aam
addr16
(bad)
adc
dec
test
pushf
into
fild
push
test
sbb
fisub
pop
or
push
fcom
mov
out
jb
sbb
pop
xor
push
push
pop
xchg
sub
clc
push
push
push
adc
ins
xchg
mul
pusha
ds
sar
sti
pop
mov
jl
sbb
or
adc
js
jmp
jno
mov
out
test
xlat
and
adc
pusha
mov
jmp
mov
cmp
mov
out
test
xor
mov
call
mov
jne
push
mov
mov
or
cmp
inc
xchg
repnz
mov
cmp
in
mov
inc
bound
mov
pop
punpckhdq
in
mov
popf
jmp
div
push
loopne
xchg
sbb
adc
or
push
add
adc
and
xchg
out
sub
test
ins
push
push
out
test
fs
outs
jecxz
inc
je
fst
popa
int3
repnz
je
push
aam
inc
cld
dec
ror
lods
cmp
aas
mov
pop
mov
pushf
sbb
fs
and
mov
xchg
ds
pushf
pop
or
cmp
xchg
or
jmp
enter
push
int3
fs
add
mov
sub
jno
mov
(bad)
sub
js
cmp
dec
mov
mov
call
or
and
mov
loop
inc
mov
xlat
push
xchg
sbb
push
sub
call
lahf
loope
adc
inc
shl
jmp
das
fstp
sbb
hlt
adc
dec
push
mov
xor
push
shl
jae
jl
(bad)
out
test
dec
jge
jg
cmp
dec
(bad)
icebp
fidiv
shl
repz
call
adc
mov
into
sub
lds
mov
test
out
imul
mov
xchg
jbe
xor
shr
jnp
mov
inc
pop
pop
stos
sar
pop
add
mov
sub
sub
ins
mov
sub
call
sbb
mov
fwait
sbb
xchg
xchg
lahf
xchg
cmp
push
into
push
sub
jae
pop
stos
pop
mov
jne
jnp
mov
ss
ja
cmp
xor
rcl
mov
fnstcw
popf
sub
mov
or
pop
xor
jg
rcl
jecxz
fs
sub
call
cld
mov
hlt
push
fwait
push
xor
out
jne
hlt
cld
call
mov
xchg
aas
imul
cdq
push
mov
mov
inc
xlat
cmp
sub
das
shl
ss
push
mov
mov
shl
adc
ror
int
mov
popa
(bad)
repnz
(bad)
ds
popf
call
xor
daa
stc
retf
shl
push
mov
xchg
ret
sahf
ss
dec
fadd
jmp
mov
xchg
jb
aaa
xchg
int
arpl
lods
and
push
into
pop
jnp
push
dec
sti
leave
mov
jns
sbb
jp
pop
or
hlt
imul
and
pushf
data16
arpl
bound
mov
test
popa
xchg
jp
sbb
std
sbb
sbb
jmp
int3
iret
add
push
dec
aas
retf
push
shl
ficom
push
xchg
jnp
addr16
adc
call
mov
push
std
dec
xchg
sbb
sbb
pushf
dec
cwde
pop
xor
mov
cwde
mov
(bad)
repz
lock
out
dec
fwait
repz
dec
xor
(bad)
pop
xor
(bad)
lock
adc
mov
push
sbb
sbb
leave
pop
iret
inc
clc
rcl
gs
lods
es
mov
(bad)
cmp
nop
mov
pop
in
sbb
mov
adc
rcl
ins
or
fs
jae
movs
adc
mov
in
adc
jle
xchg
sbb
retf
sti
fnstsw
sbb
fs
sbb
loope
push
inc
fs
xchg
adc
loopne
adc
mov
call
fcmovu
push
shl
mov
shl
pop
outs
xchg
mov
clc
mov
ja
mov
data16
mov
adc
ja
lods
jmp
fnstcw
dec
jae
jmp
cdq
pushf
mov
das
mov
ss
fidiv
sub
push
inc
fistp
hlt
sub
cs
sar
in
loop
arpl
cmc
dec
mov
ret
push
adc
push
push
or
inc
shl
push
cmps
jl
xor
mov
test
fst
pop
call
cmp
daa
adc
add
adc
sbb
stc
aaa
sbb
mov
ins
rcl
add
lahf
mov
fdivr
inc
or
adc
mov
mov
pop
mov
pop
mov
je
xchg
cdq
les
add
cmc
jmp
sahf
repz
jecxz
repz
jp
add
cmp
pop
xor
mov
(bad)
(bad)
mov
mov
jecxz
lahf
pop
cdq
inc
dec
fisubr
cmps
jp
mov
mov
jmp
ja
sbb
mov
outs
fild
sti
xlat
xchg
test
push
mov
clc
xchg
in
rcl
lea
cmps
pop
mov
adc
push
xchg
jmp
iret
idiv
mov
aaa
ja
stos
pop
mov
mov
xchg
mov
fst
pop
add
mov
scas
mov
ins
xor
div
sbb
xlat
test
xor
aam
outs
es
pushf
or
jae
stos
mov
test
jmp
ds
bound
cdq
dec
ror
aam
pop
cs
ja
ror
mov
fs
repnz
adc
xlat
xchg
test
scas
or
cs
push
mov
(bad)
mul
ror
test
sbb
mov
in
sti
adc
loop
call
pop
mov
or
dec
aas
enter
mov
bound
(bad)
cmp
adc
xchg
repnz
adc
pop
stc
xor
and
and
ins
push
inc
pusha
pop
int3
cmp
(bad)
jae
call
or
cmp
mov
sbb
out
fist
(bad)
or
xchg
inc
lock
sub
xchg
dec
fidiv
call
xor
mov
enter
dec
adc
(bad)
mov
add
call
xor
sti
adc
xor
outs
add
lods
cwde
fistp
pushf
or
xlat
movs
dec
out
sahf
mov
jnp
sti
ds
and
push
stc
aaa
jne
mov
mov
imul
loop
pop
inc
jle
sub
mov
imul
sar
ficom
and
dec
fstp
push
pop
sbb
cli
jne
cmp
mov
sbb
inc
xor
add
out
retf
pusha
push
adc
mov
jmp
xchg
inc
mov
sbb
in
or
adc
popf
retf
cdq
mov
adc
xor
shl
and
jo
(bad)
ficom
aaa
ret
add
iret
or
call
js
jno
imul
aam
idiv
and
or
call
inc
mov
sbb
fdiv
movs
push
sahf
fdivrp
fstp
int
mul
jne
pop
stos
cwde
or
mov
cld
sar
xchg
push
pushf
sbb
loope
adc
push
fcom
mov
or
int3
push
dec
pop
movs
push
lods
movs
jb
push
push
out
rcr
into
sbb
dec
out
shl
sbb
or
jmp
add
jg
mov
movs
lahf
(bad)
xor
jge
nop
mov
push
(bad)
in
or
mov
sbb
and
jge
sbb
jmp
loopne
aas
jg
nop
int
iret
sbb
jmp
mov
ins
pop
sbb
mov
gs
(bad)
dec
cs
xor
cld
push
add
or
xor
fimul
push
xchg
jmp
daa
int3
adc
pop
mov
hlt
cwde
jmp
call
sbb
lahf
push
jg
jbe
arpl
lods
ins
hlt
adc
push
mov
lods
pop
push
jb
push
push
mov
stos
push
dec
into
sbb
enter
rcl
fwait
and
push
pop
xchg
cmp
dec
mov
jns
and
mov
ins
clc
imul
enter
adc
ficomp
cmp
xchg
(bad)
push
pop
sbb
into
cmp
stc
xor
pop
pop
or
mov
push
mov
xor
fist
push
dec
rcr
adc
mov
ds
rcl
mov
pop
xchg
sar
dec
(bad)
out
data16
(bad)
inc
cwde
jl
push
pop
sub
and
mov
lods
nop
push
push
cmc
in
xor
mov
jg
in
ins
inc
xchg
fs
fs
jl
xchg
push
pop
shl
adc
mov
call
mov
js
xor
or
mov
lds
sub
bound
pop
mov
icebp
rcl
pop
aas
inc
fbld
lds
xchg
je
push
mov
adc
sub
fwait
or
mov
sub
mov
xchg
add
xor
sbb
imul
fimul
and
shl
aam
dec
ins
idiv
dec
ins
xchg
lock
out
sahf
jns
repz
jnp
dec
popf
iret
adc
mov
mov
pop
int3
fadd
int3
sbb
push
sub
jmp
retf
cld
dec
pop
jle
sbb
and
push
test
xchg
mov
mov
(bad)
aaa
es
mov
call
inc
dec
into
push
pushw
mov
out
cdq
add
sbb
(bad)
push
mov
xor
mov
jl
rcl
xor
push
dec
cld
loope
popf
mov
shl
ror
push
pop
mov
repz
hlt
cld
fst
(bad)
(bad)
push
fiadd
int3
sub
sub
cwde
add
xchg
ja
cmp
mov
mov
in
sbb
(bad)
lods
jnp
(bad)
sbb
sti
jle
jmp
test
in
stos
lock
xchg
push
push
mov
adc
sbb
push
cmp
call
or
cmp
sahf
inc
stc
stos
stc
dec
fsub
dec
je
push
repz
popf
pop
mov
mov
pushf
jmp
fsubrp
sub
jo
aam
into
mov
lds
adc
mov
and
fistp
jmp
xor
xchg
imul
or
loopne
xor
mov
pusha
icebp
mov
push
push
popw
or
mov
jb
add
pop
cli
inc
loop
add
pop
cmp
fnsave
push
and
pop
xchg
sbb
xor
mov
push
xchg
sbb
sub
jb
xor
pusha
jp
imul
mov
lock
ficom
call
or
out
sti
stc
adc
leave
mov
cmp
mov
cli
xor
(bad)
aaa
mov
xlat
pop
ja
jnp
nop
mul
inc
ds
dec
push
mov
pop
cmc
xchg
mov
sbb
js
call
inc
(bad)
hlt
xchg
clc
pop
mov
int
sub
cwde
pop
fnstsw
mov
mov
in
addr16
sbb
popa
pushf
push
repz
lahf
push
mov
(bad)
xchg
aas
sub
jl
sbb
jns
pop
sub
pop
loopne
xor
jg
pop
xor
shr
mov
mov
lahf
cmp
sbb
repz
fnstcw
sbb
adc
int3
xor
or
enter
sbb
mov
in
xor
mov
pop
pop
mov
outs
ins
pushf
dec
adc
iret
add
jge
in
sbb
push
pop
in
cmp
xor
test
shl
pushf
out
cmp
adc
sbb
jnp
push
xchg
fcom
mov
nop
sub
cmp
jbe
sub
lea
rol
jmp
clc
mov
adc
test
cmp
jg
pop
jnp
jmp
jnp
cmps
pushf
mov
adc
xchg
or
sahf
mov
xchg
cmc
imul
mov
pushf
xchg
mov
shr
pop
xor
dec
sub
mov
or
mov
sti
cmp
movs
loop
repnz
cld
pop
sbb
mov
movs
jnp
mov
sbb
xor
pop
movs
push
xor
std
inc
mov
fnstsw
into
icebp
pop
ds
adc
into
movs
mov
pop
rcr
loop
(bad)
icebp
lods
shr
mov
xchg
push
mov
in
aam
fld
enter
xchg
call
and
adc
or
aad
or
cmp
jp
aad
rcr
xchg
pop
mov
(bad)
out
retf
test
inc
or
xor
xor
xchg
fdivr
pop
dec
xor
test
cdq
sub
or
das
or
(bad)
cdq
sbb
mov
pop
inc
sbb
jbe
pushf
mov
jg
std
jns
pop
fcmovnbe
xor
mov
ss
pop
xchg
mov
and
test
xchg
mov
mov
jge
enter
dec
mov
jae
pop
in
stc
sti
rol
or
fstp
mov
test
movs
and
jne
mov
aad
ja
aam
in
sub
fstp
mov
pop
ja
mov
push
xor
ffree
lods
popf
mov
cmc
xlat
mul
hlt
sti
xor
jecxz
sub
pop
mov
bound
push
pop
rcr
jb
xlat
ss
inc
dec
and
je
add
mov
mov
jo
mov
out
call
rcr
push
ds
lahf
je
pop
push
jmp
add
sbb
mov
pop
pop
xchg
fdivr
dec
loop
(bad)
lock
lahf
call
lock
fisub
sbb
sahf
int
(bad)
fdiv
add
mov
sti
inc
scas
ja
stos
adc
xor
pop
hlt
mov
(bad)
fidiv
xchg
jl
nop
in
mov
pop
cld
movs
xchg
cmp
xchg
sbb
out
mov
mov
mov
inc
in
inc
popf
call
and
fcomip
imul
dec
xlat
mov
rcr
mov
push
pop
fist
xchg
mov
dec
or
mov
pop
ret
mov
cmp
in
xchg
pop
(bad)
xchg
aad
das
rcl
mov
shl
aaa
jg
jge
mov
xchg
xor
inc
jbe
cmp
fisubr
mov
push
xor
sahf
xchg
rcl
ins
fidiv
dec
add
lahf
adc
mov
retf
jp
jnp
and
push
inc
adc
jb
mov
mov
fisttp
xchg
enter
pop
dec
hlt
pop
pop
sub
sbb
hlt
mov
sub
mov
jmp
data16
inc
pop
sar
enter
adc
dec
lods
(bad)
mov
sub
mov
cmps
int3
cmp
sbb
stc
les
sbb
cmp
sub
pop
push
(bad)
test
fnstenv
movs
sbb
mov
(bad)
or
ret
aad
add
adc
pop
pop
push
add
jo
pop
push
push
rcr
mov
sub
xchg
fcmovu
cmp
popf
dec
push
cpuid
retf
mov
pop
stc
jnp
mov
mov
push
aam
sahf
mov
lods
pop
mov
enter
movs
shl
scas
fdiv
mov
jb
enter
xor
iret
test
mov
push
stc
pop
dec
xlat
fnsave
mov
and
ss
dec
repz
hlt
sub
pop
je
pop
xchg
adc
cmps
call
fisub
ficomp
jbe
adc
cdq
ficom
add
fisttp
lods
dec
xor
(bad)
imul
mov
fstp
push
cld
xor
push
aas
out
xor
inc
jg
jge
cmp
mov
call
repz
lock
push
jo
xlat
aad
or
push
pushf
mov
jno
mov
xor
mov
(bad)
fstp
aam
leave
js
test
xor
scas
mov
aad
push
xlat
push
rcl
je
jno
in
mov
sbb
push
jnp
imul
pop
or
mov
adc
mov
push
jns
fsub
push
xchg
fdiv
scas
iret
arpl
ss
xchg
and
cmp
idiv
(bad)
hlt
fnstcw
add
fidivr
stos
icebp
sub
xchg
ss
push
push
cmp
cld
(bad)
jae
rcr
xor
cmp
clc
mov
dec
inc
fadd
lods
mov
call
stc
aaa
dec
mov
mov
nop
jnp
pop
xchg
pop
xchg
sbb
lock
fst
inc
jge
enter
outs
or
adc
xchg
sahf
test
sbb
cmp
mov
out
xor
mov
pop
jg
mov
mov
xor
repnz
aam
ins
cmp
xor
cmp
shl
jae
fnstsw
adc
xchg
rcr
add
cwde
mov
mov
es
fadd
cmp
aad
inc
push
pop
mov
jmp
in
mov
mov
jl
rcr
xor
sub
push
mov
in
inc
xchg
xchg
jno
jmp
xor
dec
jnp
and
cwde
(bad)
ficom
std
rcr
icebp
daa
shl
movs
xor
sti
mov
mov
dec
xchg
mov
clc
lods
arpl
pop
jge
pop
mov
jbe
cmp
mov
cmp
mov
mov
dec
fist
fld
jmp
cdq
stos
(bad)
sar
jecxz
into
pop
inc
cmp
pop
lea
cmp
pop
repz
inc
adc
adc
fistp
mov
xchg
sti
(bad)
xor
pop
dec
mov
fist
mov
cmp
pop
ja
inc
adc
mov
stos
adc
cli
pop
cmp
icebp
jno
call
push
jnp
ret
adc
jae
jl
cmp
mov
mov
pop
xchg
adc
add
adc
jns
jg
push
pop
(bad)
pop
pop
or
cmp
mov
mov
jb
mov
pop
xor
jno
pusha
ror
xchg
mov
repnz
pop
jae
neg
sub
jb
imul
or
push
stos
(bad)
movs
cmp
jle
aad
inc
(bad)
pop
or
cmp
jp
mov
in
test
pushf
cs
mov
in
mov
fwait
pusha
rcr
inc
xor
hlt
jecxz
pushf
dec
pop
fnstcw
in
sbb
cdq
sub
mov
sub
cmps
dec
push
retf
and
jne
imul
adc
enter
xchg
jb
(bad)
rcr
mov
mov
fild
ror
xor
mov
mov
popf
into
leave
ja
(bad)
mov
mov
sub
ror
or
sbb
sub
adc
cmp
adc
cmp
mov
fs
mov
mov
(bad)
xchg
mov
mov
call
pop
pop
dec
adc
adc
stc
fcom
jp
nop
mov
clc
hlt
fsubp
sbb
stc
pop
jne
ins
mov
add
jge
inc
jl
push
sub
jbe
pop
sbb
push
mov
pop
jp
test
nop
movs
icebp
shl
pushf
xchg
repnz
test
push
pop
cmp
inc
jmp
and
adc
cmp
fnstenv
sahf
fidivr
xor
push
movs
aas
mov
mov
add
mov
rcl
or
push
imul
xchg
mov
sbb
or
xor
in
aas
mov
add
xchg
or
lods
xchg
xchg
mov
jg
and
lahf
sti
jge
inc
dec
(bad)
push
xchg
mov
clc
cmp
sti
sbb
test
cwde
push
jb
jnp
sbb
imul
push
shl
pop
stos
pop
movs
sahf
aaa
mov
mov
ins
jl
jae
mov
inc
pop
xor
mov
(bad)
pop
sar
je
cmps
push
add
mov
cmc
adc
cmp
push
fst
(bad)
lods
mov
test
sbb
sbb
rcl
dec
xor
push
icebp
stos
sub
jb
cmc
or
sar
xchg
push
fs
jl
add
pop
push
mov
lock
movs
adc
sti
jnp
sbb
sahf
rcl
cdq
aam
jnp
xchg
rcr
jmp
cmps
mov
inc
ja
jmp
test
(bad)
fisttp
fdivrp
push
mov
mov
mov
mov
retf
mov
xor
sbb
pop
jns
popf
sbb
jbe
mov
jg
cmp
cmp
mov
fist
(bad)
rcl
and
std
dec
mov
cwde
or
sub
fst
adc
in
es
ret
mov
dec
mov
sub
fwait
into
jb
shr
fxam
pushf
popf
mov
or
xchg
mov
sar
frstor
push
sar
mov
mov
pop
jnp
or
jmp
stc
inc
mov
pusha
mov
fmul
jl
cld
jp
clc
arpl
rcl
pop
xor
fisttp
mov
pop
push
sbb
pop
enter
jmp
popa
call
sub
out
lahf
(bad)
iret
mov
jmp
int
fxtract
jno
fwait
jne
pop
ds
xor
xchg
(bad)
js
sbb
pop
adc
fistp
(bad)
adc
pop
aad
call
jb
stos
cmp
sub
adc
mov
cld
sbb
jnp
dec
xchg
ins
into
repnz
dec
jb
xchg
push
pop
scas
(bad)
sub
pushf
fst
push
(bad)
push
pop
mov
lahf
push
pushf
imul
xchg
push
popf
fcom
ins
loopne
mov
xchg
jmp
xor
mov
scas
jg
imul
movs
push
mov
clc
stc
cwde
mov
call
stos
icebp
jo
push
(bad)
cmp
(bad)
mov
mov
pop
int
xchg
push
push
add
fimul
mov
shl
sub
mov
cld
inc
(bad)
sti
jnp
mov
cmp
jb
mov
jp
jae
cmp
adc
push
mov
jae
aas
les
cmp
cwde
fs
pop
lods
sub
sub
xor
dec
pushf
jbe
shl
mov
xchg
test
movs
fistp
xor
adc
adc
(bad)
xchg
xchg
ds
(bad)
fyl2x
push
int3
xchg
jp
sbb
fsubr
xor
shl
xchg
xchg
mov
cdq
pop
push
cmp
retf
pop
cdq
fisub
rcr
mov
mov
and
ja
sub
push
ja
cmp
fmul
dec
jmp
mov
xor
popf
or
push
sbb
retf
cwde
neg
ficomp
aad
and
hlt
div
jge
enter
xlat
xor
cli
hlt
daa
adc
inc
dec
xchg
fisubr
dec
push
hlt
mov
or
mov
cld
jnp
mov
jp
xor
faddp
cmc
push
rol
mov
add
pop
pop
call
mov
sub
cmp
jb
xor
hlt
mov
mov
push
xchg
mov
shr
push
jno
sbb
mov
xchg
xchg
rcr
cdq
jae
sahf
hlt
shl
mov
or
mov
jmp
retf
mov
popa
imul
xchg
pusha
push
jp
push
adc
into
ror
dec
adc
int
dec
pop
fsub
in
(bad)
adc
sbb
dec
xor
fnstsw
add
jle
or
push
fnstsw
xchg
jg
sbb
sti
pop
jnp
les
jno
cmp
pop
pop
cmp
dec
xchg
push
std
jno
stos
push
adc
into
rcr
(bad)
jl
test
mov
inc
pop
mov
fidivr
cli
ret
jmp
or
cmp
jnp
sub
adc
ds
mov
ins
cmp
mov
mov
sti
pop
ficom
cmps
push
adc
push
sbb
clc
shl
mov
clc
jns
inc
xchg
jae
dec
xchg
xchg
sar
xchg
mov
push
jae
mov
and
fwait
mov
mov
aaa
pop
mov
dec
repnz
push
fstp
xchg
push
jmp
sbb
jae
ss
neg
cmp
(bad)
mov
shl
push
jbe
loope
jne
(bad)
jl
lds
mov
xchg
mov
into
jo
sbb
cmp
inc
call
mov
pop
or
(bad)
pop
dec
add
inc
into
mov
sbb
mov
stc
sub
xor
pop
push
aaa
stc
jne
or
popf
push
adc
xor
dec
sbb
in
lock
mov
aad
call
or
aad
push
inc
out
mov
(bad)
inc
mov
inc
icebp
sti
aaa
dec
bound
loop
fst
sbb
or
jno
fdivr
idiv
int
iret
sbb
mov
sti
adc
fcom
add
push
jmp
aad
(bad)
cmc
(bad)
shl
push
pop
sub
push
jg
or
stc
push
test
into
or
xchg
push
rcl
pushf
and
scas
ss
dec
jecxz
jecxz
jecxz
xor
jo
jle
popf
or
sbb
jnp
dec
aad
xchg
je
sbb
mov
pop
sub
mov
jmp
cmps
inc
aam
push
mov
dec
mov
sub
fwait
mov
mov
and
jg
mov
adc
xchg
jb
jmp
daa
mov
jnp
into
adc
push
cmp
sti
stc
arpl
inc
mov
mov
and
cwde
jo
jbe
push
mov
push
ja
call
pushf
jb
scas
aam
mov
in
fstp
ficom
std
sbb
dec
(bad)
jbe
test
cmp
sbb
call
adc
xor
fmul
lahf
mov
cmc
outs
retf
pop
ss
cmp
dec
arpl
mov
pop
adc
pop
push
shl
shl
mov
pop
dec
cli
mov
movs
push
ins
scas
or
jle
je
aad
gs
(bad)
ins
mov
or
das
push
je
rol
ror
dec
retf
call
lods
lock
fs
test
xchg
cmp
fiadd
cmp
mov
adc
jp
test
pop
cmp
mov
pop
call
push
sbb
call
dec
rcl
ficom
pop
push
mov
popf
cdq
jnp
fidiv
cmc
call
adc
mov
jmp
push
or
xlat
pop
icebp
jmp
scas
sar
ds
xchg
xchg
push
mov
aad
sbb
out
xchg
mov
or
mov
mov
out
pusha
adc
push
cmp
push
hlt
sti
ret
vcvtpd2ps
(bad)
aaa
sti
mov
cmp
fdiv
shl
test
shl
mov
sbb
(bad)
fld
pushf
xor
xchg
mov
jmp
push
cmps
shl
sahf
mov
sbb
sbb
aad
xor
cwde
js
in
dec
sbb
push
sub
add
pop
jge
pop
stos
xor
repz
xchg
mov
mov
cdq
ficomp
std
inc
xor
je
mov
daa
fidivr
sbb
(bad)
(bad)
adc
jmp
inc
in
aas
gs
call
dec
aad
das
dec
mov
mov
push
sub
sub
jmp
mov
sbb
stc
mov
fs
jb
adc
pop
dec
lock
mov
idiv
repnz
jae
dec
cmp
call
mov
jmp
push
dec
fcmovbe
retf
aaa
enter
mov
jb
pop
mov
add
add
mov
pop
leave
push
adc
xchg
pop
sbb
retf
ins
ss
sbb
popf
dec
test
xor
or
fisttp
inc
sbb
add
jne
shl
mul
fnstsw
sbb
inc
rcr
into
sub
cli
jmp
jp
xor
rcl
jnp
sbb
xchg
mov
mov
cs
pop
call
aam
inc
and
idiv
adc
mov
pop
pop
hlt
aaa
push
ror
xchg
pop
jp
xchg
rcl
xchg
es
sbb
fldenv
hlt
cdq
xchg
repz
fwait
inc
pop
shr
sub
mov
jae
test
cmc
outs
xor
dec
cwde
and
or
retf
inc
ficom
xchg
fidiv
retf
or
pop
pop
movs
ins
push
push
aam
addr16
rcr
cld
dec
fsubr
rcl
jg
mov
out
sub
scas
stc
(bad)
out
xchg
push
mov
xchg
rol
test
xor
mov
xchg
pop
mov
sbb
call
pop
test
xor
mov
(bad)
fcmovne
pop
pop
stc
cld
mov
push
popf
adc
cmp
dec
adc
cmp
pop
aas
sbb
aad
bound
add
jb
mov
push
mov
xchg
ret
adc
pop
aaa
mov
aad
push
adc
mov
xor
clc
sar
dec
nop
xchg
clc
sub
jge
mov
push
push
jmp
ret
idiv
nop
fidivr
shl
dec
mov
outs
into
shl
imul
(bad)
mov
jp
push
aaa
sbb
dec
test
cmp
adc
pop
pushf
sbb
rcr
int3
mov
sub
cli
ror
out
jbe
adc
adc
stc
clc
repnz
or
sti
nop
adc
(bad)
dec
hlt
sbb
sbb
inc
mov
push
mov
ficom
dec
rcl
scas
sbb
(bad)
dec
push
and
mov
or
leave
sbb
xchg
clc
adc
inc
lahf
fadd
mov
xchg
adc
ficomp
fstp
cmps
aaa
xchg
sar
pop
cmp
clc
sbb
pop
jp
xchg
pop
or
push
xchg
adc
fidiv
(bad)
cli
pop
push
push
mov
dec
icebp
xchg
pop
mov
xchg
movs
(bad)
movs
sar
sub
mov
and
(bad)
pop
imul
jmp
xor
daa
cdq
sbb
fiadd
shl
lock
sbb
pop
fistp
push
adc
push
aas
adc
shr
mov
in
push
sbb
cmp
repnz
frstor
shl
pop
adc
jnp
sub
aad
idiv
fst
cmc
lock
aaa
imul
pop
out
push
jne
adc
mov
jmp
mov
mov
(bad)
xor
mov
mov
hlt
bound
mov
and
into
push
sti
pop
fisttp
lock
dec
mov
dec
div
mov
(bad)
mov
pop
fstp
cmp
icebp
add
adc
push
mov
inc
movs
xor
mov
xlat
mov
int3
out
sbb
js
jb
jge
stos
mov
rcr
into
(bad)
pop
and
ficomp
in
ret
sub
jmp
mov
inc
rcr
out
(bad)
fistp
loop
pop
fs
push
test
jae
xchg
push
jno
mov
imul
sti
sbb
jmp
inc
push
sbb
rcl
add
adc
pop
pop
clc
call
push
mov
push
shl
sub
pop
sti
inc
stos
dec
fscale
fdiv
adc
jnp
mov
jnp
push
push
and
sbb
stc
push
jbe
test
sbb
rcl
call
xchg
add
test
je
nop
push
nop
push
mov
repnz
aaa
and
(bad)
out
pop
jge
ss
les
nop
push
cmp
pop
cmps
repnz
lahf
jmp
jbe
inc
xor
lahf
cmp
mov
enter
push
rcl
mov
nop
cmp
iret
add
inc
dec
mov
sbb
mov
sub
jle
and
ss
xlat
sar
pop
in
dec
fsubr
dec
xor
fstp
cmps
xchg
cmp
push
pop
(bad)
jnp
test
add
cdq
test
leave
xchg
arpl
dec
fstp
pop
daa
inc
nop
xchg
mov
mov
clc
sbb
ja
dec
sbb
mov
mov
dec
mov
fdiv
sub
addr16
fwait
bound
(bad)
fild
inc
sahf
adc
sti
jge
fwait
bnd
mov
dec
sub
rcl
dec
ins
shr
pop
pop
jno
mov
adc
mov
push
xor
call
jmp
lods
rcl
mov
sub
add
push
mov
test
mov
jg
aad
cmp
mov
addr16
cld
or
stc
mov
lods
(bad)
cmp
mov
stc
mov
aam
mov
xchg
adc
adc
fwait
jnp
out
pop
dec
mov
pop
sbb
jae
lods
ret
(bad)
stos
mov
aam
lahf
push
sub
sub
jns
(bad)
js
inc
adc
cmps
mov
je
fst
xor
mov
lea
mov
and
inc
rcr
push
pop
clc
cs
(bad)
xchg
dec
out
(bad)
repz
jae
popf
mov
data16
pop
push
cmc
ss
xchg
mov
jnp
sbb
jnp
mov
xor
pop
xchg
mov
dec
add
popf
arpl
stc
xor
out
fadd
add
xchg
push
lahf
int
mov
push
neg
adc
pop
dec
push
or
push
ss
cdq
jb
cmp
pop
lahf
dec
call
mov
and
shl
and
out
mov
dec
xchg
xchg
sbb
(bad)
idiv
jo
aam
ds
imul
xlat
pop
pop
and
mov
fwait
mov
mov
inc
in
fwait
shl
imul
not
xchg
lock
mov
lahf
fnstenv
sbb
loop
xchg
xchg
push
jae
adc
stos
jo
sbb
sbb
xchg
sbb
xor
sbb
sub
fs
push
idiv
ficom
xchg
jno
in
dec
lahf
movs
shl
pop
aad
push
rcl
mul
push
enter
fidivr
or
pop
adc
aaa
mov
call
mov
push
cdq
xchg
jbe
mov
pop
jp
shr
(bad)
xor
std
mov
xchg
dec
lods
enter
sub
enter
je
jmp
sbb
add
cwde
jecxz
jecxz
inc
or
sbb
mov
scas
jg
inc
(bad)
pop
lds
xchg
iret
pop
cld
push
mov
xor
aam
fwait
mov
adc
push
mov
cli
mov
icebp
jnp
mov
pop
push
cdq
ror
dec
jecxz
cwde
mov
mov
mov
mov
xchg
add
sub
dec
fistp
clc
jns
sahf
in
lock
push
mov
nop
cdq
nop
fnsave
jecxz
pop
mov
ficom
repnz
dec
sub
adc
rcl
adc
dec
and
adc
(bad)
xchg
sub
inc
jmp
add
push
jmp
jnp
rcr
inc
mov
(bad)
fld
not
mov
cmps
ja
fidiv
adc
outs
shl
or
je
or
js
and
push
mov
int
pop
je
nop
sub
or
add
call
rcr
pushf
div
stos
sbb
cld
add
dec
mov
jb
retf
jmp
push
mov
pop
mov
push
and
sti
push
jl
adc
adc
aad
mov
push
int3
jno
pushf
aad
xchg
les
jns
push
push
fst
jnp
imul
call
sti
mov
movs
dec
les
push
and
mov
movs
aas
add
xchg
inc
shl
call
jnp
rcr
sbb
jmp
cmp
mov
pop
(bad)
fwait
in
popa
pop
xor
cmp
cwde
push
add
dec
mov
inc
inc
je
sub
mov
popf
js
push
adc
stos
pop
fidiv
mov
sbb
mov
fcomp
dec
sbb
scas
xchg
push
retf
sar
call
idiv
jl
mov
xchg
clc
stos
mov
clc
xchg
loop
xchg
pop
test
out
mov
dec
(bad)
rol
pop
fst
loop
(bad)
arpl
mov
neg
pop
sar
sub
cmp
cmp
push
sub
mov
mov
wrmsr
fdecstp
push
adc
xchg
and
in
xchg
pop
cwde
pop
pop
stc
and
mov
pop
ret
lahf
leave
(bad)
jmp
mov
pop
(bad)
popf
or
sub
popf
mov
shl
jmp
mov
inc
pop
sbb
nop
jno
inc
mov
repz
push
std
push
jp
pop
lahf
aad
retf
pop
into
or
int
lds
xchg
(bad)
enter
(bad)
sbb
nop
cmc
outs
xchg
dec
fs
push
repnz
cdq
adc
rcr
rcr
clc
nop
js
shl
jo
mov
ret
dec
pop
mov
jl
fnstcw
fcomi
test
jb
stos
mov
adc
sbb
jg
outs
add
push
nop
mov
fst
dec
fst
sub
jb
shl
outs
sub
xchg
adc
mov
cmp
aas
mov
jle
xor
mov
(bad)
mov
shl
mov
shl
stc
mov
jb
sbb
adc
fidiv
push
cli
xchg
or
push
push
shl
adc
hlt
mov
sbb
sbb
push
test
call
mov
mov
hlt
aad
cmp
sar
jo
arpl
mov
adc
dec
xor
mov
or
shl
popf
lods
pop
xchg
mov
pop
mov
lea
rcr
imul
(bad)
les
add
cmp
push
adc
test
test
push
call
mov
into
push
aas
push
cmp
pop
ret
ror
mov
push
sbb
push
in
(bad)
ds
pop
fstp
xor
jecxz
enter
(bad)
aad
push
addr16
fucom
in
neg
dec
nop
push
inc
xor
call
div
stos
out
fidiv
mov
sbb
shl
aad
ret
lds
pop
jmp
mov
cld
fcomp
rcr
inc
loopne
sbb
sub
sar
or
pop
sbb
cmps
lahf
adc
into
test
push
int
mov
call
jns
fstp
mov
sbb
(bad)
xchg
xchg
shl
and
push
enter
sti
cmp
jecxz
xchg
lahf
sbb
clc
mov
pop
xchg
sbb
test
loop
pop
sub
stc
xchg
fcmovu
jae
mov
std
mov
lahf
jl
pop
sbb
sbb
mov
pop
(bad)
fcom
sbb
sahf
mov
sbb
or
movs
pop
pop
push
sbb
cmp
ffreep
xor
mov
imul
xchg
mov
cs
pop
scas
shl
outs
mov
dec
jae
dec
(bad)
into
loop
iret
adc
jno
or
or
sub
movs
xlat
mov
retf
inc
jge
iret
ja
(bad)
ds
cmps
pop
popa
add
(bad)
sub
mov
(bad)
sbb
add
push
mov
enter
jmp
mov
test
lahf
scas
xchg
jle
add
pop
cdq
sahf
aad
fistp
rcl
jb
popa
test
daa
xchg
sahf
jnp
push
fisttp
test
mov
jmp
repz
cmp
xchg
cmp
mov
cwde
inc
mov
or
jl
test
pop
call
retf
xchg
push
push
push
loopne
pushf
shr
mov
nop
push
push
adc
pop
jbe
dec
xchg
xor
stc
not
sti
loope
push
or
scas
pushf
dec
cli
add
xor
clc
shl
and
dec
mov
xor
pop
dec
push
nop
push
rcl
jmp
push
inc
mov
mov
xchg
pop
call
repnz
movs
call
xlat
arpl
js
push
mov
inc
xchg
jge
pop
xchg
or
scas
sbb
ja
cmps
mov
out
in
pop
cmc
fs
outs
cwde
fild
cmp
cmp
je
jmp
imul
xchg
and
jo
fchs
mov
xlat
mov
aaa
rol
test
neg
sbb
mov
sahf
pop
add
not
lahf
(bad)
(bad)
mov
push
push
pop
call
xor
adc
sbb
call
jmp
aad
mov
rcl
out
ficom
fptan
adc
cld
jp
push
dec
cs
xor
pop
push
or
ins
pushf
push
dec
pushf
outs
xchg
pop
adc
sub
int3
xor
inc
sahf
xchg
int
sub
pop
lock
mov
xor
mov
jg
(bad)
jnp
sbb
nop
sbb
fist
or
out
dec
pop
xchg
jp
jns
pop
shl
pop
xor
inc
xchg
mov
call
push
dec
xor
adc
push
pushf
fcomp
sub
mov
loop
cwde
test
sti
adc
xchg
test
call
push
xlat
xor
sbb
repnz
xor
stc
mov
neg
stos
sahf
fstp
dec
sbb
mov
stos
push
pop
fsubr
adc
adc
rcl
push
mov
sbb
mov
cmp
rcl
sbb
lock
sub
sub
push
enter
dec
xor
xlat
push
dec
sbb
cmp
das
pop
fidivr
sahf
pop
loopne
(bad)
mov
pop
iret
fwait
mov
test
mov
cdq
pop
adc
out
int3
fmul
lods
add
cld
adc
lds
rcl
fdivrp
mov
and
repnz
pop
push
rcl
cmp
shl
cdq
push
movs
jno
ficom
bnd
xlat
mov
mov
movs
ds
pushf
nop
sbb
add
push
xchg
dec
fst
fnsave
jle
retf
sbb
adc
rcl
pop
pop
cmp
sbb
push
sbb
call
aaa
mov
push
popa
sub
pushf
hlt
sub
call
mov
fidivr
arpl
and
xlat
(bad)
fnstcw
and
ror
ficom
mov
mov
rcl
mov
dec
sub
or
aam
test
and
add
pop
jo
loopne
adc
sar
push
(bad)
fsubr
adc
rcl
push
dec
cld
aaa
addr16
cmp
jmp
dec
push
pop
xor
sub
hlt
not
adc
xchg
pop
dec
pop
aad
test
retf
push
and
pop
aaa
sbb
sbb
adc
xchg
imul
cwde
adc
pop
jl
das
dec
arpl
rcr
adc
push
inc
cli
cmp
icebp
cmp
fwait
mov
mov
(bad)
fisubr
push
and
mov
fst
lods
push
pushf
int
jmp
dec
pop
mov
les
pop
shr
fldcw
cwde
sbb
shl
pop
sbb
or
or
sahf
mov
jmp
mov
inc
cmp
mov
xchg
push
jp
sub
aad
xchg
leave
push
lock
mov
pop
pushf
xor
jp
imul
push
mov
mov
movs
xchg
jo
data16
dec
add
loop
cld
ins
(bad)
pop
and
cmp
inc
ficomp
rol
mov
sbb
fs
dec
xor
sub
rcr
fs
jge
fwait
je
hlt
dec
out
push
push
rcr
cmp
cmp
in
rcl
mov
std
mov
gs
xchg
daa
push
mov
cmp
xlat
mov
pop
shr
mov
adc
mov
fistp
add
adc
inc
dec
push
push
xlat
out
dec
js
aad
test
mov
adc
fidiv
addr16
scas
popa
aad
adc
jle
sub
and
xchg
sbb
popf
mov
gs
pop
mov
aad
out
dec
jg
shl
(bad)
mov
shl
iret
add
inc
fs
cmp
pop
rcr
xchg
pop
stos
(bad)
mov
jae
adc
fcomp
lods
adc
sahf
xlat
ds
enter
sub
pop
sbb
ficom
inc
mov
adc
out
std
shr
mov
jmp
icebp
imul
xchg
nop
rcr
cmc
dec
adc
xchg
out
sub
inc
mov
pop
std
fcomi
lahf
pop
mov
adc
bound
pop
pop
jmp
rcr
xchg
xchg
xlat
cli
sbb
fwait
mov
cmc
(bad)
mov
neg
dec
ret
mov
pushf
add
rol
adc
jae
les
stos
aas
mov
sahf
idiv
movs
xchg
popf
sub
cs
repz
cmp
cdq
inc
lods
fmul
adc
pop
push
jecxz
(bad)
mov
pop
mov
adc
fimul
dec
sub
(bad)
cwde
push
in
xlat
push
and
enter
sub
or
push
xchg
jns
test
mov
jge
mov
dec
jae
pop
int
mov
hlt
jge
push
mov
adc
(bad)
xchg
mov
pop
sbb
cli
into
jmp
mov
and
sbb
xchg
ret
inc
jp
es
mov
push
sub
dec
sbb
mov
mov
mov
sbb
ficom
pop
addr16
sub
cmc
cmp
mov
(bad)
cmp
nop
fcom
fyl2x
xlat
cld
adc
pop
xor
jmp
pop
jmp
sbb
call
stos
cmps
pop
aam
pushf
fld
push
xor
xchg
xor
jg
dec
dec
aad
mov
mov
sub
rcl
cld
pop
int3
cmp
pop
int
ins
shr
jae
xor
stc
test
pushf
jb
ficomp
or
clc
(bad)
cdq
fstp
xchg
push
xchg
mov
cld
push
aad
xchg
bound
scas
jmp
dec
sub
enter
dec
rcr
xor
fs
push
clc
aad
dec
fnstcw
fst
mov
repz
xor
add
pop
repz
mov
xchg
call
shl
push
loopne
adc
adc
int3
fcmovnu
frstor
jae
mov
xchg
xchg
fcomp
dec
add
enter
mov
push
stos
cmp
fst
push
test
adc
test
ja
(bad)
call
(bad)
daa
int
mov
adc
xchg
xchg
stc
xchg
xchg
jb
jnp
pop
sahf
mov
adc
pusha
fistp
mov
rcl
mov
adc
push
pop
push
ficomp
stc
inc
adc
pop
cld
or
vshufps
adc
mov
pop
call
xchg
in
int3
dec
jnp
out
cwde
jecxz
jecxz
jmp
jecxz
add
xchg
int
retf
jmp
or
push
mov
add
sbb
lahf
jp
adc
xor
hlt
jnp
adc
sahf
fist
hlt
or
aaa
jae
sub
cmp
stos
lahf
xlat
push
lahf
or
jne
mov
or
cmp
sbb
xchg
adc
mov
shl
mov
push
(bad)
adc
int3
adc
xchg
aad
mov
or
adc
dec
and
stc
pop
ret
jmp
jg
mov
inc
mov
mov
hlt
call
mov
jb
outs
sar
dec
push
test
jl
retf
lahf
enter
xchg
xlat
fistp
inc
mov
mov
dec
or
pop
inc
jp
mov
scas
mov
mov
dec
(bad)
cwde
sbb
xor
and
push
out
rcl
adc
mov
(bad)
adc
push
xor
adc
dec
lds
cmps
push
jle
push
sbb
push
clc
lods
pop
sbb
arpl
and
dec
lahf
rcr
push
hlt
add
fsubr
pop
cmc
cmp
into
aas
icebp
sar
(bad)
mov
xchg
(bad)
xchg
repz
jnp
fstp
mov
adc
idiv
xchg
lods
sbb
mov
in
adc
pop
rcl
nop
rcr
out
push
mov
rol
aam
jecxz
shl
ins
sar
jno
ds
dec
sti
xor
push
mov
outs
rcr
push
iret
cmp
pop
pop
adc
js
lahf
pop
shl
ret
movs
xlat
mov
daa
ja
(bad)
dec
scas
jl
aam
pop
pop
call
call
in
retf
mov
ja
fist
not
movs
xlat
and
(bad)
pop
dec
push
fwait
cdq
repz
mov
test
mov
inc
fwait
ins
mov
push
rcl
xor
dec
mov
add
cwde
les
retf
clc
fbld
jmp
call
aam
push
imul
nop
jb
push
call
pop
loop
fst
aas
sbb
int3
push
mov
pop
(bad)
sbb
mov
ss
int3
ds
sbb
aam
sbb
cwde
inc
cmp
sbb
or
push
jg
loop
fist
ins
push
pop
pusha
mov
call
cmp
mov
arpl
fstp
sar
add
ficomp
pop
sar
movs
fisttp
mov
push
xchg
aad
out
mov
fst
shr
pop
jg
push
ss
cmp
ffreep
mov
xchg
fisub
popf
mov
jmp
cdq
and
push
mov
xor
fwait
call
push
mov
(bad)
mov
mov
push
sbb
xor
int
cmc
dec
push
ror
sbb
mov
mov
pop
retf
arpl
push
clc
jne
sub
aaa
xchg
inc
sbb
int
into
lahf
in
mov
jno
cwde
dec
push
push
fstp
cmp
adc
cmc
or
pop
sbb
jne
aas
mov
mov
out
push
or
cwde
int
xor
adc
add
jp
inc
cdq
xlat
jp
pop
xchg
push
jmp
pop
enter
(bad)
mov
adc
add
scas
jge
xchg
pop
xchg
cli
pop
icebp
mov
sub
leave
sub
repz
sub
push
sbb
out
mov
jl
int3
aas
adc
js
pop
ja
jmp
ficom
push
test
sbb
adc
iret
psubsb
shr
rcr
stos
in
shl
pop
adc
jp
xor
jnp
mov
xor
inc
pushf
xor
jo
add
ror
add
call
xor
push
loop
imul
pop
js
jge
fs
push
inc
fstp
add
shl
mov
sbb
ins
mov
sahf
fidiv
aam
push
rcr
and
push
pop
sar
ja
into
(bad)
aas
adc
(bad)
aam
or
cmp
rcl
pushf
jg
jmp
int
fs
sbb
xor
jnp
pop
jo
jmp
adc
xor
or
jl
test
mov
mov
imul
call
push
sbb
pop
push
push
mov
pop
sub
loopne
in
adc
rcr
xchg
sbb
clc
lea
nop
dec
lock
lods
and
mov
pop
shl
shl
sub
mov
push
mov
out
jne
xlat
retf
pop
xor
jecxz
mov
fistp
jne
mov
sbb
pop
lods
cmp
add
adc
cmps
dec
mov
push
imul
rcr
mov
jecxz
popf
or
cmp
mov
sahf
mov
inc
push
mov
mov
pusha
pop
pusha
adc
mov
fidivr
xchg
data16
sub
rcr
aaa
pop
sbb
xchg
add
cmp
adc
sbb
sar
sub
daa
enter
xlat
fdiv
loopne
push
lods
cmc
sub
mov
adc
xor
mov
cmp
mov
xor
aad
daa
mov
or
sbb
cmp
fstp
xor
xchg
ret
pop
inc
add
mov
into
cmp
pop
jb
aad
push
aam
pushf
or
fcom
aad
add
adc
cmp
mov
sbb
add
in
adc
shr
xchg
sbb
pop
ja
pop
push
dec
dec
push
jmp
aas
mov
jae
fcmovbe
cmp
shl
adc
imul
rcl
mov
fnstsw
adc
jae
mov
jecxz
or
push
stc
mov
cmc
pop
pop
xor
xor
cdq
(bad)
sbb
xchg
xchg
jb
fwait
push
popa
aad
fwait
sbb
pop
push
xchg
dec
mov
xchg
push
not
(bad)
movs
dec
adc
xchg
pop
ficom
fsubp
mov
cmp
xor
adc
mov
aas
fisubr
xchg
rcl
test
mov
mov
lahf
fld
sub
push
rcl
pop
rcr
cmps
popf
mov
rcr
loopne
nop
adc
push
xchg
(bad)
jl
ss
sbb
pop
aaa
dec
add
jle
fiadd
mov
call
imul
pushf
and
lds
sbb
sbb
sub
iret
pop
mov
cs
push
loop
sbb
pop
sbb
or
adc
out
dec
rcr
sbb
mov
into
jae
ss
push
and
push
ror
mov
add
pop
cmp
mov
into
pop
cmp
sar
movs
popf
or
lods
sar
lods
out
sar
mov
jno
xchg
inc
pop
(bad)
stc
sbb
sub
fisttp
push
ror
dec
aas
aas
cmp
(bad)
sub
adc
push
rcr
xchg
adc
xchg
sar
jnp
int
mov
dec
(bad)
sbb
rcl
xor
sbb
pop
sbb
leave
popf
arpl
shl
lahf
cwde
add
pop
jmp
cmp
add
ror
loop
retf
out
mov
call
push
sahf
in
aaa
sbb
cld
add
xchg
jbe
scas
adc
aaa
and
popf
mov
mov
mov
mov
mov
inc
pop
add
mov
das
xor
(bad)
sbb
push
popa
push
rol
test
sub
shl
sbb
mov
push
jmp
add
push
push
adc
leave
enter
sbb
movs
sbb
mov
push
rcl
adc
sbb
xor
mov
push
sbb
jo
sbb
xlat
push
pushf
arpl
jp
xchg
cdq
inc
arpl
mov
rcl
sbb
and
not
jne
mov
xlat
sbb
sbb
lock
(bad)
lahf
jns
(bad)
dec
mov
push
pushf
sbb
lods
sbb
pop
imul
fstp
rcl
mov
ins
pop
push
mov
or
adc
xchg
xlat
rcr
adc
xor
movs
xor
fst
sbb
not
imul
(bad)
add
pop
jne
push
jmp
stos
call
adc
mov
push
push
push
push
mov
nop
xchg
call
movs
sbb
mov
jne
jnp
mov
dec
fcmovnu
or
bound
xchg
les
cdq
xor
xor
xor
std
inc
frstor
popf
fst
test
push
js
fsubr
lahf
rcl
call
mov
push
daa
push
pop
test
scas
adc
test
in
in
mov
pop
pop
pop
icebp
mov
dec
rol
xchg
push
rcr
sbb
or
pushf
adc
push
mov
sbb
add
xchg
sbb
imul
sbb
hlt
pop
push
push
into
xchg
mov
sbb
mov
movs
pop
add
(bad)
jmp
push
shl
xchg
fcmovnbe
mov
enter
fistp
fs
dec
stc
(bad)
pushf
push
iret
cmp
sti
sbb
jnp
jmp
(bad)
sub
dec
adc
xor
jle
div
dec
xor
pop
fistp
(bad)
loop
pop
fs
jo
push
popa
ins
adc
mov
mov
adc
add
jno
mov
popf
push
gs
adc
xchg
sub
scas
aam
push
fist
xor
or
rcr
out
fidivr
or
inc
es
lea
adc
pop
xor
xchg
xchg
(bad)
std
mov
cld
movs
pushf
inc
mov
fwait
mov
out
mov
neg
sbb
call
pusha
sbb
aad
inc
fimul
(bad)
xchg
jmp
add
sbb
mov
push
push
adc
int
stc
dec
shl
ficomp
lds
xchg
adc
dec
add
lahf
or
mov
jl
rcl
push
push
dec
lahf
inc
jb
jmp
popf
cmc
outs
ss
jb
ins
push
or
add
sahf
jo
fwait
xor
jnp
rcr
dec
rcr
or
jnp
rcl
mov
pop
fdivr
mov
ja
loop
xlat
fnstenv
cmp
push
(bad)
rol
pop
mov
inc
mov
ins
xchg
or
xchg
dec
xlat
mov
int
fld
mov
cld
pop
fwait
adc
stc
in
cmp
daa
push
dec
fidivr
push
mov
mov
mov
mov
pop
xlat
push
daa
lods
mov
xchg
call
aad
jmp
cli
test
adc
xor
sbb
iret
das
adc
stc
add
adc
(bad)
not
pop
fucomp
pop
and
sub
sub
pop
sbb
pop
jnp
cli
sbb
sbb
adc
enter
xchg
popf
mov
popf
push
push
xchg
mov
pop
xchg
pop
push
std
(bad)
pop
pop
int
sub
sbb
sub
bound
sbb
inc
dec
inc
adc
push
fidiv
or
loop
mov
pop
repnz
(bad)
pop
ds
dec
sbb
rcl
mov
pop
clc
sbb
xchg
and
rcr
mov
sbb
xor
fistp
iret
or
fs
pop
outs
inc
dec
dec
xchg
pushf
mov
sbb
inc
push
xchg
aad
(bad)
sub
mov
mov
into
xor
hlt
enter
nop
ds
cld
sub
mov
aad
cmc
mov
test
jb
dec
sub
fisttp
pop
xchg
push
xchg
sub
mov
cli
dec
nop
dec
push
fnstcw
sar
add
sub
out
adc
mov
jne
push
pop
and
adc
in
xchg
jns
cmp
mov
pop
inc
mov
cmc
sti
(bad)
inc
mov
call
test
rcr
pop
or
xor
adc
pop
test
sub
movs
xchg
mov
mov
aad
imul
je
rcl
ficomp
xchg
push
xor
fadd
xchg
fisttp
pop
inc
jae
jbe
mov
push
xor
sahf
fnstsw
xor
cmp
xlat
mov
enter
test
rcl
out
fwait
push
cmp
movs
clc
fwait
xchg
pop
cmc
int
fidivr
add
sbb
push
and
xchg
and
push
pop
push
stc
popa
(bad)
pop
and
ss
xor
push
xor
fs
cld
outs
lea
mov
stc
(bad)
fidiv
cwde
add
shl
xor
js
pop
or
fnstcw
sbb
test
sbb
push
add
loop
ss
pop
daa
int
(bad)
mov
mov
xchg
push
ret
clc
ficomp
fld
arpl
fmulp
xor
mov
cdq
add
jno
adc
imul
jnp
rcr
and
adc
inc
pop
push
push
fisub
xchg
cmp
push
push
mov
into
aas
(bad)
call
xchg
cmp
lahf
(bad)
sbb
popf
inc
mov
push
xlat
cmp
mov
dec
xchg
cmp
cdq
pop
stc
sbb
jbe
fidiv
xchg
ret
call
call
xchg
add
hlt
mov
jp
(bad)
(bad)
mov
cmp
movs
call
mov
mov
adc
mov
call
mov
mov
and
sbb
retf
pushf
push
mov
push
push
mov
imul
jmp
and
xor
fs
mov
jg
repnz
ficomp
sub
cmp
dec
xchg
push
sbb
es
fwait
mov
push
jle
dec
sti
adc
not
add
xchg
mov
sbb
pop
repnz
stos
movs
sbb
(bad)
mov
nop
icebp
sbb
mov
xchg
jl
pop
ins
fisub
lock
adc
aad
inc
hlt
call
or
inc
pop
test
cmp
jmp
mov
addr16
repz
sar
out
cmc
outs
adc
jp
loop
mov
popf
bnd
into
ja
cmp
cmp
xchg
ret
dec
adc
jbe
test
mov
imul
cmps
int
push
js
inc
pop
mov
mov
rcl
jmp
jmp
dec
jecxz
jmp
inc
sub
enter
fmulp
dec
cdq
cwde
cld
cmp
sahf
fs
adc
jle
mov
xor
xlat
(bad)
or
mov
xchg
movs
mov
pop
dec
rcr
int
out
ficom
fcmovbe
xor
inc
mov
sub
or
adc
rcl
fstp
pushf
pop
shl
mov
sub
mov
fistp
jne
xchg
inc
int
adc
jmp
cld
aad
hlt
jge
push
aaa
xor
(bad)
not
pop
adc
xchg
outs
push
stc
clc
int3
das
sbb
push
(bad)
rol
xchg
inc
arpl
xor
mov
sub
mov
jno
(bad)
cmp
mov
mov
shl
adc
into
adc
mov
test
call
xchg
imul
jae
mov
daa
cwde
sub
cmps
(bad)
mov
xchg
mov
sbb
mov
aam
mov
mov
cmp
xchg
mov
ficom
mov
mov
sti
sbb
sbb
inc
aas
popf
adc
je
xchg
out
mov
aam
xchg
lahf
clc
inc
push
push
popf
fs
add
sahf
mov
(bad)
sbb
popf
jmp
mov
into
and
stc
rcl
push
fcmovnbe
push
pop
mov
hlt
not
sub
add
cmp
aas
sub
out
pop
stc
cmp
jnp
dec
adc
lahf
xchg
repnz
scas
(bad)
nop
adc
ror
mov
ror
and
dec
shl
js
(bad)
sar
mov
sub
std
idiv
mov
dec
adc
cli
adc
pop
shl
loop
jl
cdq
out
sar
add
(bad)
sub
sub
int3
pop
into
(bad)
adc
and
cwde
pop
lods
je
or
lods
mov
cmps
stc
mov
rol
out
mov
and
xlat
pop
shl
(bad)
xor
sti
cmp
mov
jmp
xchg
jecxz
das
push
pop
sbb
aad
pop
cmp
sub
sbb
in
sub
stos
xchg
ret
ffree
popa
into
sbb
pop
push
cmp
ins
rcr
push
mov
xchg
jl
rcr
sbb
outs
jmp
xchg
mul
mov
pop
mov
mov
pop
ficomp
jnp
push
push
cmp
push
sub
(bad)
fild
in
pop
push
repz
dec
dec
push
or
int3
xor
pop
mov
pop
jmp
jbe
(bad)
fs
ss
fprem1
xchg
fdivr
jae
adc
mov
in
sahf
inc
push
pop
out
mov
pop
mov
and
pop
push
cmp
std
adc
cmp
adc
sbb
(bad)
adc
lock
mov
fistp
adc
adc
int3
retf
jp
pop
movzx
jb
cdq
jmp
sbb
xor
pusha
imul
pop
sti
inc
fild
enter
call
sbb
fcom
(bad)
cdq
mov
sub
pop
xchg
div
dec
pop
jo
push
shl
or
pushf
aaa
mov
mov
mov
bound
push
aas
sbb
popf
aaa
shl
repz
jp
call
int
clc
dec
mov
pop
add
cmp
push
mov
jg
sti
fcomp
mov
(bad)
add
mov
sbb
sbb
mov
push
hlt
call
xor
push
xchg
setle
cmc
push
fiadd
xchg
jmp
in
stos
lahf
mov
pop
adc
jae
(bad)
mov
push
retf
and
enter
rcl
shl
mov
aad
xchg
xchg
push
inc
cmp
xchg
cmp
push
pop
stc
mov
(bad)
fild
sbb
fistp
out
mov
cmp
jl
sub
popf
push
rcr
sbb
xor
lea
mov
and
ins
cli
inc
xor
(bad)
jl
sub
adc
test
xchg
call
movs
fidiv
push
cmp
sbb
xchg
mul
fwait
cmp
adc
mov
push
sbb
jnp
xor
mov
cld
mov
mov
push
aaa
jb
fisubr
lods
add
xor
lds
in
sub
cdq
sub
adc
sbb
pop
pop
add
nop
(bad)
adc
jmp
cwde
add
xor
jl
xchg
push
sub
in
jbe
and
mov
(bad)
xor
mov
jmp
pop
adc
pop
adc
mov
fisttp
pop
sub
faddp
cmc
mov
push
retf
std
clc
xchg
xlat
pop
rcr
xchg
fsubr
mov
mov
xchg
mov
xchg
sbb
mov
sbb
pop
push
shr
jl
adc
fstp
arpl
int
sbb
adc
stos
out
mov
xor
adc
test
out
pop
inc
pop
adc
sbb
call
aam
adc
fimul
fwait
test
mov
or
lahf
ins
ja
pushf
dec
rcr
loop
push
push
(bad)
push
into
dec
rcl
push
push
and
out
adc
rcl
pop
out
mov
xlat
fwait
repz
jle
sub
pushf
js
ret
mov
mov
ins
cli
mov
enter
push
rcr
push
xor
call
stos
lock
sbb
out
fst
inc
mov
ret
hlt
sub
popa
les
jl
(bad)
sbb
xchg
hlt
push
pop
cmp
retf
cli
js
and
ss
mov
or
cdq
pop
push
mov
fst
pop
imul
xchg
xor
in
scas
jge
xlat
dec
xchg
sub
mov
push
pop
push
aad
adc
pop
fimul
(bad)
mov
mov
mov
mov
xchg
jl
(bad)
push
pusha
cmp
rcl
xchg
fld
adc
mov
stos
cmp
inc
dec
(bad)
xchg
jp
xchg
aad
inc
mov
adc
pop
movs
push
popf
mov
jg
fdivr
icebp
jmp
ins
ja
je
sub
adc
inc
aam
cmps
xlat
push
js
mov
int3
sub
mov
sti
sbb
gs
mov
or
add
dec
mov
not
mov
mov
fcmovu
cmp
and
ror
adc
loopne
pop
mov
test
ror
stc
rcl
int
into
stos
fs
(bad)
jne
mov
push
call
dec
daa
jmp
ins
loop
or
popa
cmp
ret
pop
cdq
mov
sti
ss
push
loope
gs
mov
cmc
dec
mov
icebp
jnp
fdivrp
inc
fstp
xor
dec
xor
dec
xlat
adc
pop
or
imul
call
jnp
ficom
lahf
test
fidiv
push
sbb
mov
cmp
xchg
push
cmp
jne
fcmovbe
shl
mov
rcl
in
(bad)
push
fist
test
fistp
les
mov
adc
xor
mov
mov
pop
rol
cmp
int
in
cmp
pop
jnp
dec
hlt
pop
push
inc
fwait
std
fcom
pop
rcl
stos
mov
or
hlt
ret
push
sar
and
push
adc
pop
push
clc
imul
adc
not
add
not
shl
cmp
je
lahf
mov
push
mov
loopne
(bad)
inc
call
fild
jmp
jecxz
popa
jne
mov
mov
xlat
push
push
dec
push
xchg
xchg
sbb
(bad)
pop
and
add
and
push
jb
stos
retf
cmp
fwait
xchg
mov
mov
scas
or
jl
pop
jns
fs
xchg
mov
and
push
sub
jo
xor
pop
xor
ret
pop
pop
stc
mov
dec
pop
push
(bad)
sahf
dec
cdq
push
mov
test
cmp
rol
push
pop
enter
hlt
jae
stos
pop
mov
sbb
mov
xchg
push
mov
or
and
into
call
push
ja
aas
pop
and
loopne
xchg
pop
ret
lahf
addr16
(bad)
mov
push
jmp
lock
stos
popf
cmp
arpl
xchg
cdq
mov
stos
mov
int
jl
je
fdiv
dec
xor
loopne
sbb
icebp
xor
adc
fwait
dec
je
dec
xor
adc
test
aad
adc
pop
test
fisttp
jmp
inc
adc
adc
or
sub
xchg
mov
push
ret
push
adc
mov
sbb
adc
push
pop
shr
sub
loope
cmp
xchg
mov
xor
jnp
dec
stc
or
xchg
mov
mov
pop
sahf
adc
pop
cwde
aad
cmp
imul
pop
movs
jp
mov
jnp
not
pop
jmp
inc
fisubr
xor
cmp
push
xor
cmps
mov
xlat
jne
mov
dec
shr
pop
stos
lahf
fnsave
and
shr
push
ret
adc
pop
test
xor
and
prefetch
fld
mov
mov
je
in
pop
in
xchg
jecxz
jmp
repz
jle
ds
mov
mov
mov
pop
adc
push
pop
pop
out
mov
dec
inc
sar
imul
pop
jmp
push
xchg
sbb
push
or
fwait
or
pushf
push
pop
xor
dec
push
xchg
fcmovne
sbb
cmp
or
xchg
mov
fnstenv
fwait
pop
adc
out
inc
call
xor
xchg
gs
jb
ficomp
mov
je
into
jg
ja
or
test
call
adc
inc
dec
pop
mov
mov
mov
jne
ficomp
add
aad
pop
lock
clc
cs
pop
push
fistp
xor
sub
mov
inc
pop
jae
test
mov
push
aaa
dec
fstp
sti
or
xlat
pop
adc
mov
xchg
mov
pushf
mov
ror
dec
scas
cmp
ror
xor
mov
pop
mov
(bad)
push
jmp
call
(bad)
stc
push
std
or
add
jmp
into
cwde
in
mov
mov
aam
mov
loop
mov
in
mov
and
xchg
jnp
rcr
mov
gs
push
pop
aaa
xchg
ja
xchg
dec
sbb
mov
mov
pop
aad
rcl
aaa
repz
test
push
jno
aas
xchg
std
adc
(bad)
fisub
xchg
cmp
fcomip
into
xchg
sbb
test
stc
jne
pop
and
(bad)
fldcw
jo
jnp
imul
(bad)
hlt
sbb
ret
jp
sub
dec
fadd
jno
int
cdq
xchg
fwait
add
inc
sbb
sub
xchg
inc
mov
push
rcr
jg
mov
jg
sbb
mov
fst
or
ret
jmp
push
sti
push
xlat
cli
aad
cmc
bound
into
(bad)
sbb
fisubr
pop
mov
inc
ss
xchg
fisttp
dec
sbb
sub
and
fs
jge
test
rcr
push
mov
cmp
xor
das
es
(bad)
cmp
lock
sub
sbb
and
mov
std
xchg
sub
(bad)
movs
mov
xchg
adc
pop
fst
jae
jmp
frstpm(287
jae
call
inc
push
test
out
dec
xor
hlt
push
mov
call
dec
(bad)
jnp
fwait
loop
jp
pop
mov
sbb
xchg
adc
daa
mov
mov
mov
out
sti
aad
dec
lea
mov
retf
call
push
div
xchg
mul
rcr
mov
stc
jne
mov
adc
mov
adc
(bad)
popa
adc
push
lods
sbb
mov
pop
inc
pop
jl
into
adc
jmp
push
cmp
js
pop
inc
xor
bnd
popf
ror
mov
ret
or
inc
(bad)
jmp
fisubr
push
enter
aad
jmp
pop
and
pop
rcl
sub
enter
adc
fst
sbb
pop
push
pop
cwde
adc
pop
mov
add
inc
sbb
mov
xor
test
cmp
and
xor
aam
adc
mov
aad
out
sbb
loop
jae
movs
xor
adc
dec
sub
test
jge
push
cmp
pop
or
mov
fstp
push
jb
mov
test
jge
mov
pop
inc
sti
mov
cmps
ja
sbb
mov
ins
(bad)
ins
adc
xor
call
neg
(bad)
jl
mov
push
adc
daa
mov
scas
mov
pop
loop
jnp
jmp
loope
call
mov
or
fcomp
dec
mov
mov
pop
adc
dec
enter
dec
jno
into
jb
cmc
jmp
push
dec
or
(bad)
ja
clc
pop
push
push
nop
aad
inc
adc
jmp
packssdw
adc
mov
bound
outs
xchg
sbb
fidiv
or
jo
(bad)
jnp
fst
shl
sbb
rol
xor
sub
aad
repnz
pop
lock
in
xchg
sub
xchg
mov
jmp
and
fistp
les
aam
dec
jae
mov
xchg
pop
cmc
jmp
fpatan
mov
cli
cmps
inc
cwde
enter
stc
pop
popa
jp
cmp
mov
repnz
cld
mov
xchg
inc
aaa
aad
jmp
rcl
sbb
mov
data16
adc
stos
xchg
mov
nop
loop
push
mov
dec
dec
cmp
push
cs
neg
mov
xor
mov
jmp
out
pop
dec
cmps
add
pop
xchg
pop
and
int
test
(bad)
es
pop
aas
rcr
rcr
inc
mov
aaa
aas
rcr
pop
loopne
mov
fbld
jbe
nop
push
sti
push
or
xchg
and
ins
(bad)
je
add
aam
fisttp
dec
fst
jl
popf
cmp
jmp
inc
xor
(bad)
sbb
clc
enter
call
push
xchg
cmp
jmp
pusha
cmp
adc
ret
push
in
add
mov
pop
je
mov
sbb
adc
aam
xchg
ret
retf
mov
inc
xor
enter
mov
imul
mov
xchg
jg
pop
es
jg
push
mov
sbb
pop
jmp
stos
shr
jae
xchg
jp
fst
repnz
stos
adc
mov
mov
mov
nop
je
je
pop
jl
or
sbb
scas
stos
ss
aaa
adc
pop
arpl
shr
mov
ins
jae
jle
pop
xor
imul
pop
loop
(bad)
mov
adc
push
movs
aad
cwde
adc
(bad)
ficom
mov
push
cmps
fsub
dec
adc
ret
jnp
mov
in
jno
mov
pop
jns
xor
nop
ds
(bad)
mov
xor
jmp
mov
mov
test
rcr
icebp
mov
add
stc
pop
rcr
pop
or
jae
retf
out
mov
push
inc
pop
mov
jmp
xor
inc
fnstsw
xor
adc
inc
push
fs
jl
fsub
pop
jb
pop
mov
adc
(bad)
idiv
mov
fidivr
fsubr
mov
pop
add
call
daa
dec
stos
pop
dec
sahf
xchg
fst
(bad)
popf
pop
std
cmp
xchg
jae
mov
push
mov
pop
es
pop
rcl
nop
xchg
push
push
sbb
add
jns
pop
dec
div
push
pop
pop
xchg
pop
dec
cmp
retf
push
aam
mov
test
stos
(bad)
(bad)
jmp
cwde
sub
dec
dec
mov
out
push
stos
aad
cmp
push
cmp
pop
mov
dec
xchg
adc
sar
aad
or
adc
adc
push
pop
dec
push
rcr
mov
sar
xchg
inc
adc
xchg
adc
into
xchg
pushf
call
dec
mov
dec
mov
sar
shr
mov
xchg
cwde
daa
ja
clc
retf
fild
mov
outs
test
xchg
and
je
fistp
push
push
xlat
push
ret
call
pop
(bad)
not
sbb
stos
(bad)
fcmovnu
jo
(bad)
fmul
pop
icebp
sub
jmp
push
cmp
pop
clc
jnp
in
sti
cwde
mov
rol
inc
xchg
adc
xchg
and
cmp
jne
mov
push
mov
sbb
jnp
fwait
jle
adc
pop
push
rcl
adc
hlt
jno
jmp
cmp
aad
mov
sti
sahf
aad
inc
sub
mov
adc
icebp
enter
push
pop
push
jmp
push
rcr
mov
mov
popf
sahf
mov
fsub
aad
fstp
test
test
clc
enter
jbe
sar
push
jg
popf
push
hlt
lahf
imul
or
xor
mov
arpl
retf
std
mov
fnstsw
adc
adc
xchg
adc
int
in
mov
dec
jbe
jmp
jae
retf
jg
add
mov
xchg
jb
dec
mov
xchg
std
test
cmc
push
fisttp
push
jmp
lahf
xchg
cmp
push
jbe
loope
mov
(bad)
in
jbe
popa
imul
push
sbb
jb
cmp
push
into
pop
(bad)
xchg
call
aam
in
sub
ins
lahf
jb
cdq
dec
les
cmc
dec
mov
fistp
adc
dec
nop
xor
push
mov
imul
jns
sbb
sbb
hlt
xchg
and
mov
add
mov
xchg
ins
adc
jmp
pushfw
mov
loopne
mov
rcl
xchg
pop
(bad)
int
jno
sub
jge
mov
jmp
mov
jno
aad
into
js
adc
cdq
push
push
ins
ja
mov
sbb
mov
out
mov
sub
lahf
test
sub
jb
aad
sti
xlat
sub
sti
aam
sti
push
pusha
imul
pop
pop
or
fcom
dec
xchg
dec
push
add
pop
dec
sbb
jmp
fcmovnbe
je
int3
sbb
jnp
and
retf
or
sbb
adc
cdq
jl
xor
cmp
hlt
imul
jle
mov
mov
dec
je
sar
ss
sbb
leave
cmp
dec
pop
xchg
ficom
mov
push
rcr
pop
imul
xlat
push
ins
adc
pop
mov
inc
pop
mov
pop
xchg
fdivr
xchg
pop
mov
repnz
enter
movs
push
(bad)
mov
dec
xchg
adc
stos
repnz
jge
dec
jg
sbb
xor
popf
pop
jmp
jg
sbb
mov
jmp
popf
xor
movs
in
(bad)
ds
enter
jmp
mov
sbb
hlt
imul
ja
sbb
nop
nop
jns
rol
xor
shl
fistp
push
nop
mov
fs
clc
or
fcom
fnstsw
mov
xlat
adc
rol
mul
repz
jnp
sub
(bad)
fstp
call
mov
pop
mov
(bad)
jnp
in
sahf
rol
(bad)
sar
jns
pop
sbb
add
mov
pop
repnz
dec
repnz
mov
clc
dec
cld
inc
(bad)
cdq
xor
cmp
hlt
push
(bad)
xor
mov
xor
pop
btr
leave
aad
jno
jb
jp
imul
jmp
test
dec
push
fwait
mov
enter
jb
fs
test
push
push
mov
push
rol
ja
or
push
lahf
div
movs
pop
pop
mov
push
inc
push
in
mov
(bad)
(bad)
(bad)
jbe
pop
sub
dec
into
js
scas
(bad)
cwde
xchg
mov
push
sti
rcl
push
sar
and
jmp
div
mov
xor
pop
in
mov
call
cwde
mov
dec
xor
pop
or
xlat
fadd
pop
sbb
mov
adc
pop
adc
aad
(bad)
fs
cmp
push
add
jnp
mov
or
test
adc
pop
ret
adc
cmp
(bad)
lahf
dec
jae
imul
pop
aad
(bad)
sbb
xor
pop
adc
ficom
add
pop
in
ret
jmp
mov
jae
sub
popf
xchg
dec
aaa
ror
sar
stc
sub
push
call
mov
push
ins
call
popf
fiadd
push
stc
bound
xor
push
aas
add
mov
(bad)
aas
in
sub
cmp
mov
xchg
mov
rcl
push
mov
jmp
scas
add
pop
int
push
mov
call
adc
mov
push
dec
adc
mov
fld
pushf
xlat
(bad)
xor
push
mov
sbb
icebp
ins
mov
pop
shr
je
js
push
ficom
mov
or
das
int
call
sub
fs
and
push
cdq
mov
adc
inc
or
inc
pop
fs
sub
pushf
xchg
nop
call
pop
pop
push
cmp
nop
jmp
dec
nop
cmp
fs
jae
popf
xchg
mov
xor
cmps
mov
test
push
in
fs
addr16
sub
(bad)
aam
nop
xchg
mov
pop
inc
fnstsw
mov
mov
mov
cmp
ja
jle
xchg
fisubr
loop
xchg
pop
pop
int3
repz
xchg
sbb
xor
arpl
mov
jae
adc
call
mov
pop
(bad)
aas
scas
retf
shl
sbb
xor
mov
cmp
mov
call
lahf
push
push
jp
lock
(bad)
clc
pop
mov
retf
xchg
enter
mov
jg
xchg
mov
mov
pop
inc
cmp
enter
mov
mov
mov
mov
sub
fstp
sar
xor
xchg
fwait
push
aaa
aad
(bad)
fld
lods
mov
pushf
cmp
xor
and
lock
pop
lock
mov
aas
daa
outs
lods
jo
mov
fcom
stc
lods
mov
cmp
test
xchg
adc
call
sbb
jge
adc
pop
pop
inc
aaa
pop
mov
cld
rol
rcr
(bad)
ja
int
rcr
sbb
inc
mov
repz
pop
js
stos
pop
aad
dec
dec
xchg
call
mov
sub
ds
cmp
xlat
adc
mov
sub
imul
jle
jp
jae
sbb
leave
and
push
xchg
push
ins
mov
nop
dec
ficom
pmaxub
pop
inc
sti
call
sbb
int3
inc
pop
iret
popf
pop
pop
or
sbb
sbb
pop
movs
cmp
mov
fwait
pop
pop
mov
push
mov
mov
jb
call
sti
xor
imul
test
sbb
jmp
ins
xchg
nop
sub
or
shl
mov
push
push
cwde
xor
pop
xchg
sbb
and
cwde
test
xchg
inc
inc
cwde
pop
div
push
dec
cmp
cld
push
fnstsw
xor
xor
adc
push
mov
into
and
cld
pop
call
mov
(bad)
jnp
fwait
mov
fcmovbe
pop
sbb
js
rol
push
xlat
adc
xor
scas
cdq
es
jecxz
pop
sbb
cli
pop
sbb
and
mov
rcl
std
push
pushf
sbb
shl
fdivp
mov
ret
sar
fdiv
dec
xchg
jmp
jecxz
inc
sbb
pop
push
dec
hlt
mov
cmp
ret
pop
mov
add
daa
popf
mov
data16
mov
fst
and
fnstcw
mov
mov
push
sar
push
or
mov
ja
push
rcl
sbb
inc
dec
pop
xor
jmp
stc
mov
adc
call
mov
fdiv
pop
stos
lahf
jmp
jl
lock
sub
test
dec
(bad)
(bad)
stos
jae
clc
inc
adc
fbstp
cmp
fidiv
dec
add
push
sub
pop
mov
ret
lods
clc
adc
mov
test
xchg
jle
dec
adc
jg
(bad)
xchg
push
dec
mov
lahf
xchg
mov
iret
adc
xor
mov
xchg
or
(bad)
mov
fistp
push
dec
xor
mov
dec
jnp
in
sub
or
push
xchg
ret
mov
mov
out
(bad)
cld
mov
loop
clc
dec
ror
lahf
sbb
push
test
test
fwait
sbb
fcomp
cmp
aad
dec
mov
retf
xchg
jne
sbb
shl
aad
adc
jmp
ja
xchg
enter
xor
int3
cmc
mov
jg
jae
arpl
xchg
lock
pop
xchg
call
xor
mov
(bad)
and
sti
xchg
jne
xor
push
jb
rol
pop
xchg
or
dec
rol
sahf
xchg
sbb
out
sub
ror
jnp
xchg
or
pushf
xchg
retf
js
mov
dec
aaa
xadd
push
jns
push
retf
sbb
xchg
or
clc
xchg
push
aad
aad
ror
cmp
push
push
aad
scas
rcr
stc
int3
add
jae
dec
fimul
std
shl
ja
cmp
mov
icebp
in
cmp
xchg
stc
jmp
scas
fs
cwde
shl
and
pushf
std
sti
sbb
movs
jae
sub
mov
jb
(bad)
shl
nop
(bad)
aad
rcr
push
pop
pop
loopne
mov
xchg
mov
int3
les
stc
pushf
push
das
(bad)
cmp
int
jmp
mov
mov
pop
pop
mov
cmp
clc
push
push
cmp
pop
mov
ins
push
jle
fiadd
sbb
or
dec
mov
push
loopne
pop
jae
or
xchg
cmp
stc
xchg
push
jp
mov
rcr
daa
xchg
xor
inc
sub
add
xchg
mov
lock
sbb
aad
lods
mov
rcr
div
(bad)
mov
gs
jbe
jno
movs
inc
(bad)
call
fcmovu
mov
sbb
mov
adc
cwde
dec
jl
(bad)
lock
mov
mov
ins
je
inc
add
fwait
cmp
pop
cmps
adc
mov
inc
push
not
in
inc
mov
jbe
adc
je
pop
inc
mov
arpl
lds
fidivr
jmp
xchg
test
fs
nop
push
rcr
mov
lea
jnp
dec
push
push
push
sbb
jno
cli
sub
mov
stos
push
call
cdq
lea
adc
dec
adc
dec
outs
fimul
jae
mov
jno
mov
rcr
rcr
adc
mov
gs
jbe
icebp
jmp
sbb
xlat
xor
or
stc
cmp
sar
xor
pushf
les
div
mov
push
xor
adc
ins
mov
icebp
scas
lock
int
clc
dec
push
je
mov
adc
cmp
sti
adc
adc
lock
pop
into
push
cdq
xlat
adc
sbb
xchg
mov
fwait
xchg
mov
mov
mov
jb
sar
dec
mov
sub
jne
pop
jg
cwde
rcl
push
pop
pop
push
fcom
pop
cmps
adc
sub
push
retf
shr
jae
push
jle
mov
push
mov
dec
test
xchg
pop
cmp
xchg
enter
jp
into
fst
mov
out
dec
mov
out
out
mov
sar
mov
ffreep
pushf
(bad)
mov
dec
cld
xor
imul
push
adc
xchg
out
aaa
sbb
mov
pop
clc
clc
test
in
mov
aaa
pop
pop
(bad)
mov
or
loop
jae
mov
mov
mov
jmp
push
mov
lahf
xor
push
retf
test
std
inc
push
(bad)
jmp
pushf
push
mov
pop
aad
push
jmp
and
sbb
dec
enter
inc
adc
push
mov
outs
into
(bad)
fstp
sub
mov
mov
mov
ror
arpl
fdiv
dec
mov
push
mov
rol
push
push
push
pop
ds
xchg
dec
mov
ret
sub
dec
pop
stos
jno
lods
cmp
mov
pop
cmp
sbb
push
jae
mov
mov
(bad)
pop
cmps
push
push
mov
jbe
adc
jb
and
js
adc
imul
mov
dec
dec
xchg
push
sbb
pop
lods
loop
ss
mov
xlat
lock
adc
push
mov
sbb
sbb
bound
dec
mov
ds
clc
sub
add
sub
sti
jnp
cmp
repz
movs
jae
stc
dec
jmp
xchg
adc
push
js
stc
push
ins
lock
out
in
stos
mov
(bad)
cmps
pop
cmp
adc
mov
push
(bad)
aas
icebp
ja
ficom
mov
pop
dec
pop
cli
call
jge
jbe
jno
mov
popa
into
xor
adc
imul
or
cmp
pop
jnp
popa
jl
pusha
mov
repz
jmp
push
adc
retf
xor
mov
push
(bad)
jmp
sahf
sbb
pop
pop
xor
mov
adc
fsubr
cmp
xor
call
clc
call
adc
adc
cld
pop
jg
adc
ret
shl
push
jge
mov
xchg
adc
cmp
pushf
(bad)
pop
adc
pop
mov
div
cmp
bound
stos
sti
adc
adc
mov
pop
imul
fnsave
mov
dec
mov
(bad)
adc
sbb
jle
push
push
sbb
jnp
movs
push
(bad)
mov
sar
les
mov
sbb
xchg
inc
lock
or
push
sub
jp
push
stos
in
sbb
mov
xor
push
pop
loop
mov
call
xlat
bound
mov
lea
mov
xchg
adc
push
out
pop
mov
pop
mov
add
adc
pop
call
push
mov
and
xor
(bad)
adc
xor
int
mov
(bad)
(bad)
mov
dec
add
push
enter
mov
aaa
fidivr
inc
into
jl
mov
loopne
xor
jae
or
repnz
xor
cmp
xchg
mov
mov
mov
inc
or
mov
sbb
fstp
ja
push
imul
jl
es
fnstcw
or
repnz
jnp
mov
sub
in
sub
dec
mov
fst
mov
adc
adc
ja
jecxz
mov
into
aam
int
pop
sbb
call
sbb
adc
sar
mov
mul
mov
xchg
aad
and
pop
aaa
stc
nop
push
mov
dec
mov
adc
mov
cwde
jo
pop
push
pop
push
sbb
xchg
mov
push
pop
mov
or
mov
xlat
pop
jo
and
ret
les
jbe
mul
sub
jmp
fist
jae
dec
pop
jno
xchg
pushf
shl
add
sbb
pop
dec
jae
pop
fistp
or
(bad)
mov
mov
ficomp
data16
fidiv
into
adc
cdq
sbb
mov
ds
adc
xchg
sbb
sub
jmp
inc
mov
pop
mov
xlat
jle
inc
fcom
mov
ja
cwde
xchg
push
shr
xchg
(bad)
neg
fidivr
pop
inc
in
rcr
dec
fnstsw
fisttp
fmul
rcl
stos
sbb
push
sbb
call
sub
or
cmp
gs
push
mov
mov
mov
fstp
jg
jmp
out
rcl
cmp
push
(bad)
scas
je
dec
and
jg
jo
fcmovne
test
sub
pop
mov
sbb
mov
mov
xchg
adc
ret
(bad)
fiadd
pop
xchg
pop
enter
test
outs
mov
sbb
mov
xor
mov
push
or
not
dec
fadd
jo
xchg
sar
aam
sub
mov
mov
dec
pop
dec
(bad)
cwde
add
xchg
dec
mov
cwde
push
sahf
sbb
push
data16
(bad)
pusha
push
pushf
push
mov
rcl
mov
push
pop
mov
sbb
call
push
jnp
ja
lock
gs
sbb
xchg
pop
sbb
mov
jbe
ds
loop
xor
adc
jl
mov
ficom
fisub
(bad)
jnp
ja
sti
cld
xchg
jmp
inc
inc
fnstsw
dec
ss
xlat
adc
xor
aaa
dec
xchg
pop
sub
into
xor
cmp
jno
clc
and
or
jg
or
jmp
adc
xchg
xchg
inc
nop
cmp
pop
not
ds
pop
cwde
cmp
dec
adc
jb
or
test
mov
sbb
in
je
hlt
mov
rcr
or
es
xchg
je
rcr
jl
adc
mov
pop
jmp
push
cmps
(bad)
stc
sbb
cmc
(bad)
js
xchg
test
adc
sbb
fsubr
push
xchg
push
clc
pop
mov
mov
jno
mov
push
or
pushf
mov
jns
dec
sahf
loopne
cmp
jae
cdq
rcr
xlat
cmp
aaa
cmp
pop
inc
lods
push
xchg
sbb
fidiv
es
mov
mov
adc
inc
pop
sbb
repz
jmp
or
dec
loop
jmp
std
rcl
in
xor
pop
sti
pop
push
xchg
clc
pop
mov
cld
push
mov
jno
or
daa
out
sti
mov
inc
mov
mov
sbb
js
inc
pop
dec
cmps
sub
adc
stos
mov
push
xlat
push
inc
sbb
repz
xlat
aaa
lea
inc
pop
(bad)
cmp
mov
mov
(bad)
xchg
mov
pop
xor
ret
pop
adc
xchg
mov
lods
aas
daa
int
mov
clc
inc
mov
jg
sbb
les
sub
mov
out
jne
xchg
adc
fadd
push
lods
nop
repnz
std
add
fcom
fcom
sbb
ds
dec
pushf
popf
xchg
call
std
mov
push
mov
imul
mov
dec
xlat
das
cwde
fst
jmp
dec
dec
adc
adc
cdq
inc
xchg
cmc
cdq
mov
arpl
pop
xor
pushf
dec
push
mov
(bad)
mov
pop
hlt
sbb
test
ret
xchg
mov
dec
pop
mov
mov
xor
into
mov
arpl
pop
sbb
cwde
je
fwait
or
pop
pop
stc
jmp
cmp
xchg
retf
std
adc
cmc
sub
jg
call
into
test
mov
pop
hlt
out
jo
mov
xor
call
pop
mov
dec
mov
xlat
pop
push
xchg
push
push
dec
pop
cmp
mov
mov
lods
shr
fist
les
xchg
call
xor
(bad)
adc
rcl
or
and
xchg
adc
sbb
pcmpgtb
movs
nop
cmp
stos
out
sbb
adc
xchg
adc
fist
sub
add
jmp
das
into
repz
pop
add
je
push
adc
sub
pushf
fisub
sub
data16
lahf
cmp
mov
pop
or
(bad)
xchg
push
add
stc
inc
jo
push
cmp
adc
std
lock
into
pop
cmp
pushf
aam
rcr
stc
sbb
pop
mov
out
mov
cmps
sar
xor
jl
fdivp
mov
inc
rcl
xor
icebp
ins
(bad)
clc
mov
mov
ret
dec
cld
inc
adc
sbb
fidiv
push
pop
call
rol
push
pop
lahf
push
pushf
ss
rcr
aas
xor
(bad)
aam
mov
cmp
xor
shl
dec
push
sub
pop
and
mov
ins
mov
cs
sub
fisub
dec
push
or
std
sub
mov
xchg
ss
pop
retf
mov
fistp
stc
test
mov
daa
xchg
xor
mov
ret
push
xlat
cmp
push
popa
test
ja
stos
dec
mov
(bad)
pop
xchg
dec
mov
cmp
xchg
mov
neg
cmp
(bad)
xchg
push
outs
adc
stos
js
sbb
xchg
dec
bound
adc
lds
fwait
push
and
xchg
adc
ins
pop
(bad)
sub
ins
fld
pushf
cmps
ficomp
mov
mov
pop
rcl
nop
jnp
movs
ds
jmp
loop
lahf
jge
cmp
outs
pushf
adc
aad
aad
xchg
xchg
fistp
adc
mov
mov
sub
fbstp
xor
fidivr
retf
dec
pop
xchg
cmp
mov
aad
pop
ja
mov
into
adc
inc
nop
test
push
in
je
push
dec
mov
push
or
pop
jecxz
inc
retf
push
clc
mov
int3
jg
int3
add
into
aas
icebp
mov
rol
add
stos
cmp
xor
or
hlt
xlat
pop
push
(bad)
xchg
in
push
stc
and
ficomp
pop
jge
rol
jnp
int
adc
clc
cmp
sbb
or
rcl
sar
cdq
push
(bad)
(bad)
push
idiv
repz
(bad)
mov
int
xchg
dec
jg
(bad)
out
ss
dec
sbb
sbb
pop
inc
push
and
sti
cmc
ja
(bad)
sbb
es
xor
sahf
jg
dec
pusha
mov
icebp
inc
mov
call
xchg
xchg
sbb
cld
bound
fcom
sbb
outs
fiadd
adc
adc
cmc
test
lahf
pop
sbb
in
mov
sbb
popf
pop
into
xchg
mov
inc
mov
ret
pop
mov
mov
xchg
cwde
call
int
mov
data16
je
dec
push
hlt
jmp
hlt
dec
jge
xlat
sbb
sahf
push
push
jno
jmp
sub
cmp
inc
shr
push
adc
mov
mov
jnp
sub
rcr
aaa
sub
xor
movs
cmps
adc
mov
jae
adc
pop
xor
cmp
call
pop
out
sub
int
sbb
mov
arpl
mov
fnsave
lods
aam
loope
push
add
xor
push
fstp
xchg
test
xchg
out
shl
inc
stc
xchg
and
into
pop
inc
sbb
clc
pusha
stc
mov
push
inc
stos
mov
push
fidiv
sub
mov
mov
xor
inc
sbb
xchg
mov
ins
adc
add
in
lahf
gs
fcmovnbe
xchg
inc
nop
pop
into
xor
call
movs
and
nop
fsub
mov
xor
aad
mov
enter
sbb
cmp
push
mov
dec
sub
push
fnstsw
(bad)
pop
rcr
inc
retf
dec
in
pop
xchg
out
dec
mov
or
cmp
hlt
and
popf
xchg
or
xor
aam
add
cmps
and
rcl
add
mov
xor
xor
aas
or
rcl
mov
jmp
add
lods
sbb
sar
xlat
pop
push
xchg
push
sub
mov
pop
ja
pop
mov
pop
push
out
dec
xor
pop
repnz
adc
cmc
test
clc
mov
out
mov
mov
ins
mov
pop
cmp
test
shl
sub
xor
ret
sub
pop
jbe
add
mov
bound
and
dec
jge
int
push
jae
lods
(bad)
repnz
jle
xchg
js
cmps
je
xchg
sbb
cmp
xor
cmp
mov
daa
cs
or
mov
ins
mov
xor
ret
fstp
xchg
sub
jecxz
xchg
jno
icebp
mov
arpl
shl
mov
(bad)
sbb
(bad)
adc
mov
aaa
adc
mov
jp
call
pop
(bad)
sub
sub
and
sbb
mov
jecxz
pop
push
test
pop
adc
cmp
add
adc
not
fst
shl
ret
jle
cmps
mov
mov
ss
sbb
mov
jle
dec
inc
push
sbb
mov
dec
inc
je
mov
pop
(bad)
xchg
mov
jno
imul
shl
mov
dec
cmp
cmp
pop
sbb
push
xlat
sbb
sub
ficomp
pop
pushf
push
in
or
(bad)
fmul
int
jae
ret
and
out
mov
fs
outs
sahf
add
and
inc
push
push
jmp
pop
xlat
mov
ss
cwde
mov
mov
sbb
inc
mov
push
(bad)
stos
rep
cdq
movs
fs
adc
mov
mov
sbb
ins
adc
inc
ss
cmp
hlt
mov
aas
lahf
popf
mov
dec
push
es
push
cmps
pushf
xchg
shl
call
push
mov
jp
jp
jmp
dec
push
xor
pop
icebp
jp
push
mov
jae
pop
fs
rcl
shl
push
adc
aad
inc
cmps
push
dec
fwait
in
mov
adc
mov
stos
fcmovne
pop
mov
cli
push
jns
out
fs
js
xor
(bad)
push
adc
repnz
pop
popa
mov
out
mov
mov
arpl
inc
mov
adc
mov
push
cmc
push
cld
cmps
or
mov
hlt
push
ss
dec
adc
mov
mov
or
ins
repz
sar
pushf
sub
(bad)
push
inc
ret
int
lock
call
or
cs
xlat
call
cs
push
adc
sub
inc
xchg
jg
push
push
jmp
arpl
cmp
div
ja
mov
call
pop
(bad)
jb
cmp
mov
cwde
fdiv
nop
push
je
fxtract
inc
pop
dec
push
cmp
sbb
adc
sbb
jb
sub
pop
out
pop
cmp
sar
cwde
loope
dec
push
push
(bad)
xlat
in
mov
sahf
stos
shl
or
stos
jg
jg
dec
or
pop
daa
retf
mov
cli
dec
fwait
xlat
pop
lahf
jp
jl
(bad)
inc
sti
int3
xor
jae
or
or
popf
pop
dec
pushf
(bad)
xor
adc
stos
inc
adc
mov
push
daa
stos
fidivr
or
mov
ret
(bad)
mov
iret
movs
int
xor
shl
dec
ficomp
push
pop
es
(bad)
(bad)
xchg
jb
xchg
jg
sahf
mov
mov
inc
xchg
fisub
shl
mov
jp
push
(bad)
push
jae
imul
rcr
xor
add
adc
xchg
enter
xchg
test
int
pop
mov
(bad)
ror
jmp
mov
mov
mov
mov
sar
popa
sub
mov
sub
pop
jp
push
ret
xchg
std
(bad)
pop
sbb
call
ret
jge
add
aam
pop
push
mov
or
push
push
into
mov
jmp
into
xchg
lahf
cdq
cmp
pop
dec
mov
xchg
cmp
movs
movs
cwde
mov
dec
bound
sar
pop
fidiv
in
repnz
je
aad
cmp
rcl
adc
mov
ins
fild
into
adc
mov
aaa
push
popf
cmp
jno
inc
mov
xchg
jg
pop
pop
add
stc
test
push
jne
push
pop
pop
nop
push
push
cmp
xchg
dec
mov
shl
xchg
shl
inc
pop
mov
pop
mov
dec
pop
lock
sbb
retf
add
sbb
xchg
adc
xor
loope
jo
and
push
or
mov
in
pop
push
xchg
fld
sbb
adc
or
mov
ins
dec
adc
shl
mov
mov
std
mov
cmp
int3
call
in
mov
dec
shl
outs
cli
cmp
pop
xchg
inc
imul
sbb
gs
cmp
mov
stc
int
mov
sbb
pop
adc
rcr
jo
mov
mov
sbb
mov
sub
mov
dec
pop
cli
pop
mov
(bad)
adc
hlt
ret
(bad)
(bad)
loop
mov
dec
jae
mov
into
sbb
cld
in
push
fstp
adc
jl
call
shl
iret
call
push
aad
sbb
lahf
dec
xor
idiv
rcr
xor
dec
mov
xlat
push
adc
fisubr
inc
push
shl
loope
mov
int3
pop
sar
(bad)
shl
mov
neg
adc
neg
lds
adc
xchg
outs
lock
jmp
lahf
mov
adc
xchg
xchg
mov
push
cmp
jno
xchg
(bad)
fist
(bad)
pop
jp
push
jp
dec
gs
adc
shl
mov
out
mov
dec
dec
cmp
fcomp
jg
mov
dec
mov
adc
jnp
pop
push
(bad)
(bad)
xor
jbe
adc
call
mov
cmp
sub
mov
pop
adc
mov
mov
cwde
push
pop
hlt
xchg
push
jmp
mov
xchg
pushf
fnsave
lock
sar
and
adc
repnz
rcr
out
jmp
ss
bound
dec
cmp
xor
pop
cmp
call
jno
adc
paddusw
xor
or
xchg
mov
add
and
sbb
retf
aas
std
adc
jnp
shl
aas
pop
ficom
push
fst
inc
popa
pushf
push
xchg
mov
mov
mov
stc
sub
popf
pop
(bad)
xor
pop
mov
mov
ds
push
lock
lock
sbb
dec
cdq
adc
in
xor
aad
or
mov
inc
push
pushf
mov
rcl
stos
fsubp
loopne
mov
fisub
inc
pop
test
jmp
xchg
dec
sbb
jl
and
rcr
push
sahf
sub
xchg
jb
fnstenv
mov
dec
pushf
stos
mov
fiadd
mov
xchg
jae
jbe
pop
jae
inc
ror
xor
movs
mov
sub
fs
mov
es
xor
mov
int3
call
hlt
mov
enter
push
stc
daa
mov
and
mov
test
cmc
dec
test
lahf
inc
push
rcl
fcomp
xchg
add
adc
arpl
adc
(bad)
or
aas
cmp
dec
mov
xor
sar
fisttp
pop
arpl
mov
sub
inc
sub
cmp
dec
jo
neg
dec
pop
jge
push
or
sub
jle
test
sbb
pop
pop
mov
popf
cmp
(bad)
dec
mov
xchg
mov
sbb
sub
mov
sar
stos
mov
repnz
in
adc
stos
ins
pop
cmp
pushf
(bad)
jae
push
out
push
inc
xor
aam
lahf
mov
and
adc
fcmovnb
mov
pop
add
sbb
sbb
(bad)
bound
cdq
add
xchg
cmp
mov
push
mov
mov
fadd
dec
iret
xchg
push
push
adc
mov
rcl
rcl
js
out
aad
rcl
lock
ficom
js
call
sbb
push
sbb
push
je
cmp
adc
stos
or
cmp
pop
sbb
retf
dec
sub
cli
mov
fist
je
jmp
imul
ror
adc
push
movs
rcr
push
enter
mov
or
adc
(bad)
ds
xchg
sbb
xor
sahf
mov
adc
cwde
pusha
cmc
dec
fmul
pop
lahf
xor
dec
icebp
xchg
xchg
cdq
push
shl
stos
add
mov
add
rcr
xor
shr
pop
(bad)
add
fnstsw
test
and
fbstp
jno
mov
sub
xchg
ror
scas
jl
mov
or
fisttp
adc
jno
xlat
adc
es
call
cdq
or
add
aaa
out
push
cmp
mov
jle
sbb
ss
hlt
fdivr
mov
ja
jmp
inc
fild
cdq
mov
rcr
inc
xor
xor
mov
sub
mov
fsub
push
add
fucomp
xor
jle
inc
sub
pop
pop
pop
call
xor
cld
adc
sub
sub
mov
dec
(bad)
cli
pop
xchg
xor
jo
mov
sar
xchg
xchg
jnp
mov
das
cmp
sbb
mov
mov
jno
fstp
mov
mov
jmp
xchg
aaa
mov
arpl
pop
call
sub
add
lahf
adc
mov
(bad)
pop
xor
int
pop
mov
push
ret
cmps
xor
mov
in
mul
js
cmp
pop
shl
push
arpl
(bad)
aad
cmp
mov
jmp
aaa
aad
xor
mov
enter
jmp
fist
pop
sbb
pop
cmp
xchg
clc
dec
sub
ins
jne
imul
pop
pop
mov
pushf
cmp
popf
jge
adc
xchg
pop
mov
adc
cmp
neg
jle
int
mov
sbb
rol
jle
xchg
shl
lahf
jae
aas
mov
mov
imul
xor
jg
xchg
mov
cdq
mov
mov
sub
div
call
inc
and
xchg
jp
push
pop
out
sar
pop
jae
mov
repnz
xchg
mov
mov
out
mov
nop
hlt
cmp
push
rcl
jmp
rcr
es
test
xor
mov
mov
pop
xlat
ds
xor
jmp
leave
push
loop
mov
pop
push
sbb
pop
loop
or
jo
push
adc
imul
mov
xor
call
mov
rcr
mov
out
mov
test
push
xchg
mov
mov
mov
sub
clc
mov
adc
je
xor
pop
inc
fsubr
imul
fimul
fimul
bnd
aas
mov
lock
mov
mov
cmp
dec
repz
sbb
cwde
test
sbb
adc
add
mov
push
dec
mov
arpl
aam
pop
cld
sub
or
ins
jnp
cmp
pop
(bad)
nop
xchg
push
pushf
and
(bad)
sub
dec
xlat
sahf
push
jbe
dec
mov
jge
cdq
stos
sub
rcr
or
test
mov
push
fwait
mov
inc
(bad)
sub
pop
lock
xchg
mov
mov
je
loop
add
mov
cmp
mov
scas
aad
cmp
jns
mov
cmp
rcr
call
stc
adc
jb
xor
aaa
cmc
sbb
mov
adc
jp
jmp
xchg
jp
push
jae
ficom
xchg
pop
sub
mov
xor
lods
xor
cmp
and
push
daa
dec
lock
push
xor
in
call
dec
lods
adc
xchg
mov
mov
sbb
cmp
mov
(bad)
fnstsw
and
jb
pushf
pushf
adc
std
js
xchg
mov
(bad)
rcl
div
add
rol
pop
call
call
pop
popa
pushf
cmp
sar
push
inc
dec
jnp
ficomp
out
inc
repnz
jmp
sbb
mov
xchg
outs
call
test
xchg
rcl
ins
rcl
mov
sbb
adc
sahf
xchg
fidiv
or
outs
pop
push
repz
cld
jle
inc
dec
pop
xlat
enter
xchg
cmp
xchg
cdq
mov
fnstenv
xor
es
or
bound
push
pushf
inc
mov
je
pop
sbb
pop
xlat
lahf
sbb
call
std
xchg
into
jmp
jne
mov
mov
sbb
xchg
jo
xchg
mov
push
pop
or
dec
cwde
mov
jge
jb
stos
cs
mov
into
cld
arpl
loopne
cmp
inc
pop
and
imul
enter
je
cmp
dec
cmp
jae
jmp
cmc
pop
xchg
hlt
mov
popf
aam
xchg
pop
adc
mov
sub
sbb
and
sub
xchg
imul
mov
push
out
sbb
(bad)
inc
dec
dec
adc
lods
mov
or
mov
xchg
xchg
adc
adc
dec
xchg
sar
div
jnp
div
xchg
cmp
dec
aam
fistp
mov
arpl
adc
mov
add
aam
sbb
(bad)
or
jno
mov
jg
jmp
pop
adc
lods
shl
push
push
and
adc
(bad)
mov
mov
mov
add
into
rcl
xchg
repnz
add
loopne
mov
xor
mov
push
xor
fnstcw
pop
cmp
jns
sbb
adc
pop
(bad)
jb
mov
push
push
enter
mov
std
dec
adc
test
xor
dec
adc
pop
mov
xchg
aas
je
test
rcl
add
push
aad
arpl
jle
dec
sub
out
push
mov
xchg
call
mov
push
mov
test
xchg
int
push
je
sub
fldpi
mov
cmp
sbb
cdq
repz
inc
lock
sub
and
inc
dec
jp
sbb
or
mov
push
xor
push
adc
mov
xchg
repz
jnp
dec
call
(bad)
xor
xchg
adc
out
movs
cmp
jmp
inc
mov
sbb
cdq
mov
jle
(bad)
repnz
mov
jmp
xchg
iret
fidivr
xor
pop
pop
push
mov
ffreep
cdq
cmp
mov
pop
fstp
sbb
movs
jno
mov
xor
xchg
adc
mov
clc
mov
into
ja
sbb
push
push
js
fisub
clc
or
je
popf
push
cs
fisubr
ret
call
xor
neg
cmp
mov
arpl
repz
mov
and
cld
xor
jne
mov
mov
aad
mul
rcr
mov
test
cmp
pop
repnz
imul
sbb
movs
mov
repz
fsub
xchg
aaa
(bad)
sub
rol
add
mov
ss
xchg
adc
adc
fcomp
jp
jae
mov
inc
lahf
jae
jl
fs
movs
icebp
inc
sbb
pop
push
and
jmp
call
push
lahf
cmp
xor
aaa
sti
sahf
pop
dec
outs
sbb
pop
fst
popf
mov
pop
stos
push
push
xchg
js
adc
dec
sbb
adc
ss
push
mov
adc
adc
pop
pop
aam
add
jnp
pop
js
sub
pop
jo
fwait
test
xchg
mov
dec
mov
jmp
mov
push
lsl
adc
sub
cmp
lock
scas
dec
sbb
cwde
mov
add
dec
xchg
cdq
add
fcom
adc
sbb
or
ins
push
pop
pushf
mov
inc
sahf
jno
jg
mov
out
std
sbb
mov
xor
adc
lock
imul
(bad)
dec
inc
mov
clc
adc
jbe
mov
adc
sbb
aad
inc
sahf
xor
out
mov
adc
out
fld
xchg
aas
les
repz
push
shl
inc
imul
imul
mov
cmp
or
jae
aaa
push
fiadd
mov
pop
adc
jecxz
pop
sar
iret
mov
push
dec
popf
xchg
clc
fnstsw
mov
jp
xchg
jmp
dec
pop
call
lahf
jge
jnp
ficom
mov
bound
sbb
push
pop
sub
in
pop
fs
loop
lahf
aad
aaa
mov
mov
jp
stc
jae
inc
lock
rcr
jl
clc
retf
mov
xor
adc
cmp
push
mov
into
mov
stc
mov
jb
stos
xchg
inc
adc
mov
ror
dec
std
xchg
sbb
mov
mov
ja
push
ins
jg
sahf
mov
test
xchg
mov
inc
sub
fistp
adc
dec
xchg
push
cli
mov
fwait
aad
xchg
or
fnsave
xor
xlat
fiadd
fimul
(bad)
mov
jae
mov
jnp
mov
cmps
inc
fldenv
clc
ret
repz
sahf
inc
test
xlat
adc
add
cmp
xlat
(bad)
sbb
cmp
or
sub
mov
(bad)
mov
aad
cmc
sbb
dec
div
dec
dec
(bad)
sti
sbb
dec
sub
jmp
xchg
xor
pop
nop
or
mov
shl
(bad)
push
jle
mov
xchg
mov
mov
(bad)
out
push
mov
mov
dec
inc
xor
(bad)
jae
test
inc
pushf
or
jg
pop
push
xchg
pop
sahf
xor
mov
xchg
retf
mov
push
adc
xor
and
addr16
mov
cmp
push
or
dec
mov
adc
clc
retf
mov
sbb
and
scas
mov
aam
jge
jb
push
inc
push
dec
sbb
mov
ficomp
or
xor
stc
sbb
mov
arpl
pushf
nop
lods
(bad)
jmp
push
sub
mov
xor
mov
mov
test
fbstp
push
retf
mov
dec
jge
jno
adc
fdivr
cmp
dec
ret
pop
fisubr
enter
pusha
call
stos
(bad)
int
adc
mov
dec
pop
sbb
mov
lahf
icebp
mov
inc
pop
xchg
nop
je
jae
mov
mov
ins
adc
jns
fst
adc
ss
xor
imul
jp
icebp
into
jb
stc
sub
rol
ss
pop
jo
push
jmp
dec
pushf
rcl
adc
push
cwde
adc
jnp
sub
ror
push
shl
xor
add
pop
xor
pop
rcr
mov
cmp
dec
or
int3
aam
aad
inc
js
xchg
call
adc
adc
iret
mov
idiv
sub
outs
jp
push
cdq
scas
adc
fst
push
xor
fst
sahf
and
pop
add
jmp
mov
mov
shl
mov
add
cmp
sahf
fcom
sbb
mov
xchg
push
mov
shl
jae
dec
sbb
pop
cmp
sbb
(bad)
xor
retf
out
call
xchg
enter
xchg
push
enter
dec
xchg
in
mov
jmp
in
ror
(bad)
daa
lods
dec
pop
lahf
icebp
repnz
adc
jg
imul
pushf
push
mov
mov
daa
cdq
jp
xor
fnstcw
sbb
pop
(bad)
cmp
not
aad
xchg
adc
and
and
(bad)
aas
ror
outs
mov
or
(bad)
dec
sbb
push
xchg
push
add
cmc
jl
dec
aaa
clc
dec
xchg
out
aam
stos
(bad)
fnstsw
mov
rcr
aad
inc
and
call
and
push
pushf
xor
cli
les
push
pop
push
pop
loopne
cli
cmp
rol
mul
sbb
mov
nop
(bad)
mov
aam
mov
xor
ror
pop
adc
xor
aaa
adc
jg
mov
loope
ins
jo
mov
jnp
stc
retf
repz
dec
fiadd
pop
mov
jnp
pop
cli
push
ret
push
jp
cdq
adc
dec
ror
add
push
mov
dec
loop
push
push
adc
xor
adc
repz
adc
dec
adc
aam
call
fnsave
fdivr
jns
sub
adc
mov
xor
pop
cwde
inc
pop
or
dec
cld
sub
pop
(bad)
jmp
push
push
ss
cmp
sub
push
imul
call
inc
pushf
pop
or
mov
mov
xor
mov
lahf
mov
lea
call
mov
retf
cmp
sub
es
xchg
je
pop
mov
jno
mov
xchg
icebp
mov
and
xor
mov
jae
out
mov
pop
aad
inc
loopne
stc
icebp
xor
pushf
(bad)
sar
jp
shl
cmp
ror
sub
sbb
outs
inc
and
xchg
jae
pop
pop
push
push
out
fistp
mov
cdq
cwde
adc
aam
and
mov
repz
xchg
call
test
push
hlt
mov
and
and
ror
cmp
aad
arpl
call
mov
fcomp
out
sub
xchg
rcr
shl
pop
rcr
or
test
mov
jmp
xchg
or
rcl
cmovnp
shl
shl
arpl
and
call
sar
mov
mov
in
dec
push
cmp
inc
fist
xchg
loopne
xchg
xchg
imul
xchg
add
dec
call
enter
xor
xchg
mov
repnz
pop
nop
jno
call
sbb
fisttp
xchg
imul
aaa
cmps
dec
xlat
jne
icebp
mov
je
cmp
fstp
fiadd
inc
rol
shl
pop
sub
mov
or
leave
adc
fidiv
imul
popf
xor
mov
push
push
clc
aad
xchg
pop
fst
adc
push
into
nop
xchg
(bad)
sbb
xor
fist
(bad)
jl
xchg
push
jp
adc
test
out
dec
loop
leave
sbb
push
add
pop
jns
ss
hlt
lds
retf
xchg
loop
into
add
mov
sbb
stc
imul
inc
adc
dec
aaa
xlat
jle
push
stos
sahf
sub
add
pop
mov
jns
adc
mov
dec
mov
fwait
cmp
rcl
or
adc
sub
ins
shr
pushf
xchg
pop
sbb
xor
shl
mov
adc
sub
mov
push
xlat
jp
movs
sbb
shl
test
adc
or
mov
sbb
push
lods
push
jbe
sbb
ss
gs
aas
imul
aas
aaa
mov
cmp
hlt
cmp
test
inc
aaa
je
adc
mov
repnz
jl
xchg
mov
push
sbb
pop
rcl
mov
and
ss
xchg
push
jp
stos
mov
inc
mov
xor
xchg
dec
(bad)
xchg
pop
dec
add
fiadd
adc
push
inc
fisub
sti
imul
loope
div
leave
dec
xchg
push
pop
push
mov
addr16
push
inc
mov
mov
mov
aas
dec
movs
sahf
stc
in
xor
mov
push
mov
xor
stc
cbw
jo
stc
movs
dec
mov
loope
sbb
nop
inc
dec
mov
(bad)
adc
adc
lahf
push
je
pop
pop
mov
mov
loop
adc
xchg
adc
cmp
cdq
addr16
retf
and
rcl
sub
ret
pop
nop
dec
hlt
cmp
lds
into
stc
push
cmp
or
mov
and
push
pop
pop
cmp
rol
pushw
xchg
dec
stc
dec
xchg
mov
popf
sub
aaa
push
add
inc
jae
cdq
ja
inc
mov
call
retf
jmp
and
lds
xchg
hlt
sbb
dec
fidiv
mov
mov
inc
sar
cld
aad
pop
mov
xchg
inc
mov
jp
sub
call
mov
rcl
scas
mov
inc
mov
add
add
dec
pop
pushf
sahf
jecxz
push
lds
xchg
sbb
push
jle
mov
xchg
push
ror
nop
jbe
dec
and
xchg
and
inc
ror
mov
ficomp
xchg
lock
sar
cmp
jae
sbb
idiv
aaa
pop
mov
push
icebp
pushf
mov
mov
pushf
dec
mov
retf
stos
cmp
adc
mov
mov
(bad)
pop
out
and
mov
ss
jbe
sar
xor
js
mov
xchg
xor
mov
outs
sbb
dec
mov
dec
cdq
xchg
(bad)
cdq
cmps
push
adc
dec
call
nop
pop
mov
adc
sub
or
rcl
xchg
daa
repz
jbe
call
ror
sub
aaa
xchg
cmp
aad
xor
add
mov
dec
jns
jmp
inc
dec
adc
call
dec
dec
in
mov
cld
jbe
pop
push
mov
jns
push
dec
cmp
pop
imul
fwait
cmp
mov
dec
das
iret
(bad)
scas
jg
cmp
test
jbe
mov
cdq
popf
add
jmp
dec
xchg
es
hlt
lds
push
call
dec
je
call
dec
call
adc
jge
sbb
xor
xor
mov
ror
xchg
push
mov
sub
fadd
aad
push
adc
sbb
fidiv
mov
jmp
xchg
xchg
inc
aad
out
dec
push
(bad)
dec
push
push
push
aas
pop
movs
test
enter
adc
dec
push
fisub
out
pop
xor
cmp
mov
loop
sbb
jae
out
daa
and
call
shl
(bad)
fbstp
jnp
mov
iret
(bad)
jne
inc
inc
sub
stc
cmp
mov
add
push
jne
repz
cwde
adc
xor
mov
inc
cmp
shl
loope
aas
xor
in
xchg
sub
cmp
mov
rcl
daa
pop
push
xchg
xchg
fadd
pop
sti
and
xchg
pop
mov
dec
sub
popf
iret
js
ret
inc
adc
nop
shl
mov
jno
cmc
xor
jl
mov
div
sbb
push
mov
jmp
lock
ja
mov
in
call
not
cmp
cli
mov
jge
fidivr
jns
pop
push
jnp
dec
jo
enter
jge
jbe
pop
int3
call
rcr
pop
rcr
mov
jmp
inc
rcr
sub
mov
pop
pop
inc
nop
call
dec
or
or
std
inc
push
xor
mov
call
mov
mov
call
popa
(bad)
pushf
mov
xchg
shl
aas
inc
ss
sub
mov
frstor
clc
adc
out
fwait
add
inc
repnz
push
scas
arpl
dec
cli
faddp
je
cdq
xor
addr16
mov
xchg
cmp
xchg
xchg
sbb
jbe
ds
xor
ins
xchg
xchg
jb
xchg
call
sub
push
test
test
jae
mov
xchg
dec
cmp
(bad)
cld
pop
int
mov
sbb
adc
mov
push
jno
imul
lock
push
gs
mov
dec
dec
mov
xchg
cmp
or
and
pop
xchg
inc
clc
inc
enter
imul
push
cdq
push
mov
out
mov
ds
adc
test
inc
sbb
rol
mov
xchg
mov
mov
or
jp
sbb
(bad)
inc
fnstenv
fist
mov
or
aaa
push
push
dec
fimul
pushf
push
inc
jae
sbb
test
jp
jbe
std
jnp
inc
ficomp
bound
ss
jbe
fidivr
inc
xor
push
fwait
dec
sub
pop
sub
xchg
mov
sbb
xchg
rol
pop
aas
stc
stos
fiadd
inc
(bad)
mov
mov
push
call
push
dec
mov
pop
pop
jno
push
int
adc
cmp
mov
cmc
idiv
and
dec
mov
ds
(bad)
icebp
pop
jmp
rcr
pushf
inc
js
test
mov
test
rol
or
cli
sub
cmc
push
pop
xchg
inc
fild
call
jbe
inc
retf
cmp
call
push
std
arpl
jbe
add
shl
pop
lahf
xor
ins
push
pop
adc
bound
push
jns
push
jnp
dec
jnp
cmp
adc
mov
cmp
pop
cwde
xchg
lock
mov
add
inc
sbb
inc
mov
xchg
adc
mov
imul
sbb
sbb
mov
push
loope
mov
or
into
xor
jnp
mov
inc
xchg
repz
scas
js
mov
sahf
mov
fnstcw
push
int3
xchg
jle
shl
sbb
cli
jmp
mov
jp
sbb
sbb
lahf
sub
movs
out
push
hlt
xor
adc
xchg
mov
pop
adc
adc
inc
hlt
jno
mov
xchg
mov
xor
aad
sub
jp
dec
mov
mov
sbb
dec
clc
pop
dec
push
xchg
pop
jb
mov
repz
adc
mov
mul
mov
test
xor
(bad)
call
jae
cmp
aas
test
and
pop
or
adc
stc
pop
push
push
arpl
mov
sbb
sub
repnz
enter
dec
icebp
(bad)
call
mov
fld
pop
sub
dec
cmp
lahf
daa
(bad)
sub
aam
pop
adc
aam
retf
int3
jbe
push
imul
or
(bad)
retf
std
rcl
sub
shl
arpl
sar
xor
add
push
shl
or
mov
cmp
jmp
das
cmp
mov
aas
enter
mov
xchg
dec
imul
(bad)
or
fucomi
jnp
test
adc
push
jbe
rcr
mov
sbb
(bad)
ins
pop
mov
and
call
(bad)
stos
in
rcl
nop
loopne
(bad)
imul
pushf
sahf
mov
mov
cmp
je
mov
cmc
aaa
jl
or
fst
jp
mov
jb
sar
dec
xchg
mov
push
xchg
add
popf
popf
mov
cwde
(bad)
cdq
pop
push
inc
jo
into
sar
test
jb
jle
jp
daa
pop
and
retf
mov
mov
rcl
jg
cld
mov
(bad)
xlat
loop
xchg
cmps
sbb
cmp
dec
and
jl
add
inc
xchg
cdq
add
pushf
ficom
cmp
jno
adc
cmp
aaa
popa
sub
call
jl
into
adc
push
call
pop
neg
rcr
enter
push
lahf
adc
jnp
out
xchg
neg
add
shr
sub
hlt
cmp
sbb
mov
sub
xor
inc
lods
dec
or
xor
aaa
jecxz
fsubp
jae
stos
sbb
pushf
not
inc
push
or
inc
mov
addr16
push
xchg
sbb
cdq
adc
pop
pop
sbb
inc
mov
jp
mov
mov
push
jne
stos
xor
mov
cmps
inc
jbe
stc
fist
adc
add
jne
pop
push
fcomp
jmp
xchg
mov
aaa
inc
dec
sbb
repz
dec
jno
adc
cmp
dec
jns
mov
pop
repnz
dec
int3
(bad)
push
call
sub
jo
movlps
loope
aaa
jae
cmp
mov
retf
call
inc
xor
pop
inc
out
or
loope
mov
test
js
add
cld
jns
stos
dec
jnp
jb
call
jne
out
push
sbb
mov
jae
dec
fcmovbe
aad
rcr
imul
xchg
inc
push
pushf
jge
jae
pop
cmp
nop
std
sub
mov
sbb
pop
aad
pop
pop
pop
push
pushf
lahf
ret
sar
ficom
and
enter
sti
(bad)
mov
xor
sbb
adc
mov
stos
jno
sbb
pop
arpl
dec
push
cmp
sub
mov
fcmovu
add
or
dec
aas
dec
(bad)
retf
mov
std
mov
fwait
ins
mov
sbb
cwde
fs
mov
mov
mov
mov
xchg
jnp
mov
pusha
push
pop
out
sti
push
adc
xchg
dec
add
sti
push
loop
mov
adc
mov
dec
sti
mov
xchg
fldcw
pushf
xor
mov
dec
rcl
mov
mov
mov
sbb
aaa
cdq
xor
dec
imul
call
mov
add
stc
into
jmp
dec
cdq
jl
ss
cdq
xor
repnz
(bad)
gs
mov
(bad)
xor
xor
sbb
pop
pushf
xchg
jge
popf
or
int3
adc
rcl
pop
pop
rcl
pop
fild
xchg
adc
mov
adc
cmp
sbb
jge
xchg
mov
ja
push
(bad)
into
inc
sahf
cwde
inc
dec
xchg
mov
cmovl
push
call
push
or
mov
mov
jmp
sbb
iret
inc
dec
pushf
or
push
sbb
cmp
push
pop
hlt
dec
fwait
mov
pop
mov
mov
sbb
stc
repz
loop
arpl
mov
mov
fs
xchg
(bad)
xor
xor
in
cwde
inc
xchg
xchg
mov
xchg
nop
pop
adc
jge
cmc
adc
cmp
out
mov
sbb
xchg
inc
leave
mov
push
sub
jo
es
out
push
call
mov
push
adc
or
call
retf
mov
mov
xor
or
adc
repnz
xchg
mov
sbb
test
loop
and
(bad)
fidiv
test
dec
icebp
jmp
adc
xor
movs
push
pop
dec
std
xchg
jae
fcmovu
push
fsubr
fimul
inc
rol
push
mov
adc
mov
into
adc
mov
push
inc
pop
loope
sbb
mov
push
dec
test
rcr
icebp
cwde
push
inc
adc
je
push
sub
dec
cmp
mov
fistp
cmp
sbb
fwait
out
pop
test
(bad)
xchg
push
mov
xor
lods
repnz
sti
pop
fstp
cdq
dec
pop
stc
mov
cmp
push
std
xchg
mov
ins
fimul
xchg
pop
or
xor
shl
sub
adc
pop
pop
test
shl
pop
jmp
stc
pop
js
jns
push
jnp
mov
cli
(bad)
mov
pop
loope
and
xchg
mov
neg
fwait
jl
jp
jns
dec
push
rcl
dec
adc
sub
dec
inc
enter
jae
(bad)
xchg
mov
fidiv
ja
ror
fisub
and
call
cwde
mov
dec
js
sbb
ficom
int
cdq
mov
das
sbb
dec
sar
aad
push
and
ror
mov
jnp
rcr
js
aad
dec
test
jp
push
mov
xlat
mov
mov
adc
sub
adc
jbe
call
js
jns
dec
pop
leave
inc
or
shl
sub
adc
sbb
xchg
mov
inc
test
mov
rcl
fadd
fiadd
cmc
loop
cmp
fmul
pop
cmp
sub
add
sbb
pop
sbb
hlt
xchg
xchg
adc
outs
dec
cld
xlat
pop
push
out
fsubr
dec
sar
sub
push
cmp
jmp
dec
sar
sbb
call
add
rcr
or
sbb
cmp
pushf
inc
mov
(bad)
nop
cld
xor
dec
sbb
jmp
aam
mov
xchg
dec
sub
sub
cmp
into
(bad)
ds
shr
pop
jbe
xchg
into
cmp
xchg
xchg
lods
sar
xlat
adc
or
adc
sbb
pop
enter
call
lock
pop
inc
(bad)
fdivp
mov
dec
mov
adc
jp
mov
mov
or
mov
inc
jg
cmp
test
loop
arpl
inc
(bad)
mov
mov
dec
inc
aam
xchg
sbb
dec
aam
adc
cmp
pop
mov
inc
mov
cmp
adc
test
call
adc
push
adc
cmps
into
daa
dec
adc
xchg
xchg
(bad)
xchg
mov
es
pop
in
cli
push
dec
pop
sar
mov
and
pop
aad
dec
jmp
mov
sub
inc
push
mov
cli
dec
xor
das
idiv
(bad)
jnp
out
nop
and
adc
arpl
and
push
movs
jns
out
mov
cmp
pop
jae
imul
call
es
dec
xchg
call
into
test
xor
inc
idiv
cmp
xchg
mov
mov
sub
rol
push
xchg
or
mov
inc
sbb
xchg
test
pop
push
xchg
jmp
mov
fnstsw
mov
je
fcom
adc
mov
data16
data16
mov
retf
pushf
xor
push
xchg
neg
inc
sbb
hlt
(bad)
jmp
sub
jo
sbb
lahf
xchg
sub
fwait
xor
inc
sbb
dec
ja
xchg
idiv
jbe
ss
xor
jg
xchg
dec
sub
imul
je
pop
or
lea
aas
xor
dec
call
fiadd
pop
dec
push
movs
adc
mov
icebp
add
dec
push
mov
xchg
lods
push
jne
adc
mov
push
push
mov
mov
xor
inc
pop
mov
inc
xchg
jo
xor
daa
sub
inc
mov
outs
ror
dec
stc
dec
cdq
(bad)
(bad)
loope
xchg
xor
add
rcl
dec
push
leave
mov
sub
or
push
cmp
push
mov
jge
or
sbb
stc
imul
(bad)
fistp
add
repnz
dec
xchg
movs
fwait
dec
push
xchg
aad
out
sub
out
call
push
pop
pop
dec
cmp
jb
pop
sti
pop
cmp
dec
pusha
repz
pushf
push
rcr
jae
mov
jmp
retf
cmp
mov
cmp
inc
jl
mov
hlt
mov
cmp
mov
daa
dec
dec
cmp
adc
push
out
(bad)
push
xchg
mov
pop
mov
sbb
pop
test
(bad)
inc
inc
adc
xchg
dec
mov
dec
out
jne
imul
div
push
test
push
nop
test
dec
in
retf
jb
pop
add
jl
ja
mov
fisttp
mov
mov
call
adc
xor
and
sbb
cmp
or
cmp
(bad)
rcl
mov
aam
mov
or
sbb
call
cmp
lea
pushf
adc
(bad)
jbe
pop
stos
xor
clc
mov
call
mov
fs
lea
mov
into
(bad)
xchg
nop
pop
pop
and
dec
loop
adc
(bad)
cmp
test
aaa
movs
pop
fmul
std
div
je
aad
dec
or
pop
pop
pop
mov
fbstp
and
loop
mov
out
ret
xor
shl
out
stos
adc
dec
call
pop
xchg
loop
inc
mov
sub
lahf
aaa
loopne
mov
add
daa
jnp
in
ffreep
jg
xchg
out
mov
mov
jle
into
rcr
call
ds
fidivr
xchg
fsubr
inc
push
(bad)
adc
jns
aam
cdq
mov
push
xchg
push
mov
push
jl
xchg
push
pop
jno
dec
dec
pop
mov
adc
and
inc
lock
mov
add
ret
add
xor
mov
loop
loop
xor
dec
ins
inc
jns
call
lock
(bad)
stc
pop
mov
inc
jg
imul
and
or
mov
nop
sub
sbb
rcl
inc
fwait
cmps
call
pop
push
mov
aad
adc
jnp
sbb
xor
pop
pop
mov
shl
(bad)
jae
ss
adc
push
sbb
sbb
inc
shl
call
cdq
pop
movs
xor
(bad)
icebp
cmps
xchg
jns
push
fimul
fistp
sub
inc
sbb
rcr
xor
hlt
dec
div
test
sbb
out
and
jmp
add
outs
cmp
mov
es
pop
cwde
(bad)
ss
outs
dec
mov
and
in
mov
mov
jo
xchg
adc
stos
sbb
cwde
jno
sbb
pop
pop
jge
dec
ins
push
or
mov
dec
sbb
xchg
push
inc
adc
push
mov
xchg
adc
mov
or
adc
xchg
lods
mov
dec
out
mov
adc
mov
jp
popa
ret
sti
sbb
xor
adc
mov
call
xor
mov
dec
xor
(bad)
mov
aaa
js
int
sbb
xchg
push
aaa
(bad)
or
mov
pop
dec
pop
xchg
pop
sub
popf
xchg
test
push
inc
xor
call
jo
out
dec
sar
sbb
ret
rcl
arpl
mov
mov
sub
inc
dec
xor
sti
mov
push
xchg
jecxz
and
sbb
or
cli
dec
sbb
push
ss
jbe
ret
aas
mov
ror
jae
xor
and
jb
push
mov
sbb
xchg
test
sbb
les
adc
movs
jb
mov
inc
cmp
inc
xchg
xchg
sbb
jnp
jp
mov
leave
div
sub
dec
pop
pop
fst
pop
jg
call
and
inc
xchg
pop
ss
ds
mov
xchg
xchg
sbb
(bad)
leave
mov
ds
and
lds
sbb
xchg
dec
rcl
jo
mov
scas
ror
out
add
mov
cld
arpl
in
sub
add
cmps
cmp
ffree
add
push
arpl
push
adc
mov
imul
sbb
sub
sbb
int3
out
addr16
aad
xchg
push
(bad)
mov
aad
xchg
(bad)
clc
or
cwde
xchg
sbb
jp
jmp
jae
out
aam
mov
addr16
fnstcw
call
bound
ror
rcr
push
add
fimul
mov
mov
pop
sbb
pop
pop
dec
xchg
mov
movs
in
push
inc
pop
push
xchg
movsx
cmp
ficom
xchg
imul
cmp
dec
mov
js
inc
adc
retf
dec
aaa
stos
(bad)
sub
xchg
ja
retf
push
imul
pop
mov
rol
popa
pop
push
xchg
adc
shl
adc
push
loop
xchg
xor
fist
fdiv
retf
jbe
xor
ficom
add
sbb
adc
dec
fbld
fdivr
arpl
xlat
pop
je
rcr
mov
sbb
or
test
jmp
fmulp
mov
repz
xor
mov
mov
mov
add
fucomi
jo
lea
pushf
ds
pop
xchg
xchg
pop
dec
enter
aad
add
xchg
mov
adc
sahf
stc
push
popf
adc
shl
ret
sbb
fdiv
adc
inc
jbe
rcr
xor
sar
mov
sub
jnp
lock
sbb
pop
xor
aad
sbb
inc
rcl
mov
mov
call
xchg
call
mov
jo
mov
xchg
(bad)
jno
pop
mov
retf
mov
mov
sub
cld
call
sbb
stos
div
xchg
call
pop
mov
jo
push
mov
sti
pop
pop
pop
push
aad
dec
sbb
fst
in
push
inc
xor
and
loop
xor
call
cmp
add
leave
mov
dec
shr
pop
adc
cmp
pop
sub
mov
mov
jge
cmp
xchg
mov
jo
aad
push
jmp
inc
push
dec
push
ret
sbb
mov
mov
mov
js
imul
xor
dec
fimul
cdq
sbb
sbb
jle
push
sbb
cmp
xchg
mov
and
(bad)
movs
xor
dec
test
mov
iret
cwde
mov
jl
cmp
xor
dec
pop
loopne
fcomp
push
push
fdivr
fisttp
(bad)
ror
pushf
call
xchg
mov
pop
pop
pop
xlat
push
mov
dec
in
push
call
leave
inc
adc
inc
pusha
retf
outs
adc
mov
stos
repnz
in
dec
fidivr
fist
dec
retf
call
dec
xchg
sbb
call
mov
xchg
push
ficomp
dec
dec
cli
mov
or
and
arpl
dec
xchg
ret
adc
or
mov
add
mov
xchg
pushf
xchg
add
ror
jae
pusha
out
(bad)
xor
xor
or
call
mov
clc
jo
or
call
xchg
(bad)
dec
cwde
push
xchg
xchg
clc
mov
adc
mov
aaa
or
xor
dec
mov
test
lahf
into
sbb
(bad)
cdq
dec
sub
dec
xchg
xor
fnsave
cmp
mov
dec
adc
enter
dec
adc
in
dec
inc
mov
mov
xor
cmp
xchg
sar
push
mov
dec
rcl
ss
daa
xchg
pop
pop
dec
xor
ficomp
neg
out
xchg
mov
arpl
retf
loop
imul
ja
xor
js
cmp
mov
out
loope
dec
rcr
or
pop
dec
test
les
inc
mov
sar
dec
mov
sub
mov
dec
or
dec
push
or
push
fldenv
xor
dec
adc
repnz
popa
mov
mov
pushf
jnp
sub
xchg
call
xor
adc
dec
fiadd
mov
add
push
and
jb
mov
add
lock
adc
imul
jae
imul
mov
sbb
cmp
jno
call
jae
xor
popa
jmp
mov
push
fiadd
dec
push
cmp
xchg
jbe
lds
dec
pop
add
mov
mov
cmps
adc
xchg
jbe
mov
sbb
or
cdq
cdq
and
mov
mov
dec
aad
xor
hlt
call
mov
lahf
call
mov
jno
daa
fisub
out
jmp
inc
and
jb
sub
inc
(bad)
and
xor
out
int
mov
dec
xchg
jno
mov
retfw
sbb
cmp
les
or
xor
sub
mov
cs
pop
fist
fdivr
inc
dec
mov
mov
fs
test
adc
pop
imul
mov
icebp
cmp
fnstenv
xchg
xchg
add
push
pop
enter
mov
aas
mov
cmp
das
pop
pushf
cdq
fisttp
mov
xchg
pop
xchg
or
adc
push
push
adc
and
repnz
dec
jno
pop
pusha
xchg
dec
lock
mul
adc
add
rcr
xor
ret
jl
mov
or
add
shl
out
lahf
clc
fidiv
aaa
cmp
jb
mov
mov
and
xchg
fsub
sbb
add
fs
fiadd
mov
cdq
push
and
pop
push
sbb
inc
xor
les
push
cmps
mov
out
rcl
sbb
(bad)
and
mov
mov
aad
push
inc
rcr
pop
cwde
inc
xor
or
and
add
ficom
pop
xchg
pop
mov
pop
mov
pop
scas
neg
mov
jbe
adc
dec
jb
lahf
xor
and
bound
mov
mov
aas
out
pop
in
xor
and
xchg
cmp
xchg
mov
mov
jl
jl
jp
cmp
hlt
inc
or
mov
xor
ret
arpl
dec
and
nop
sbb
mov
adc
jo
std
and
shl
and
aaa
ficomp
xor
mov
jmp
mov
pop
mov
push
cmp
inc
jnp
jns
ret
adc
or
push
fbld
push
inc
mov
xchg
fcmovnbe
mov
je
clc
xor
adc
(bad)
sub
dec
mov
jp
inc
leave
or
not
push
call
call
pop
xor
adc
cmovp
jp
adc
dec
cdq
jns
stc
retf
jg
stos
xchg
cmp
mov
leave
neg
push
jb
xor
or
push
fdivr
rol
ret
repz
sti
call
xor
xchg
xchg
imul
nop
rcl
mov
lock
out
retf
or
xchg
std
out
mov
outs
inc
xchg
mov
dec
xchg
stc
outs
xchg
loop
imul
adc
mov
mov
or
xchg
pop
ss
stc
mov
mov
dec
xor
xor
xchg
and
stc
shl
sbb
cmp
lock
xchg
dec
adc
xor
inc
shl
and
jp
lds
stc
xchg
pop
div
jp
xchg
mov
jl
(bad)
jnp
sbb
shl
xor
mov
jnp
dec
(bad)
xchg
fdiv
mov
push
add
rol
movs
xchg
test
scas
daa
enter
adc
xchg
dec
push
mov
icebp
sbb
jae
(bad)
pop
out
mov
adc
pop
leave
fidiv
inc
mov
dec
mov
inc
jnp
xchg
adc
inc
dec
ror
mov
dec
cmc
xchg
mov
repnz
out
ret
xchg
ds
pop
les
add
or
xchg
sub
(bad)
(bad)
(bad)
push
pop
call
fldcw
mov
adc
sti
xchg
out
in
pop
dec
lds
es
lahf
pop
call
(bad)
icebp
inc
inc
add
repnz
xor
cmp
mov
mov
push
movs
push
test
scas
inc
movs
inc
call
mov
jo
mov
mov
retf
mov
mov
js
test
sbb
ss
cdq
push
daa
mov
sub
sbb
adc
adc
imul
jnp
test
jbe
push
clc
inc
xchg
fld
pop
mov
mov
sti
ja
pop
dec
mov
jmp
mov
mov
pop
das
enter
pop
mov
outs
call
ret
pop
sbb
aad
dec
retf
call
xchg
push
sbb
lahf
out
or
mov
inc
fistp
jbe
retf
call
pop
cmp
fidivr
into
pop
jmp
cmc
pop
jl
retf
cli
mov
(bad)
pushf
ficomp
or
call
dec
clc
xchg
jp
div
dec
xchg
inc
leave
test
hlt
adc
mov
call
inc
inc
jnp
jb
jecxz
cwde
fs
xor
inc
fcmovnbe
mov
mov
loope
retf
mov
out
inc
mov
push
inc
mov
(bad)
out
mov
mov
push
cmp
mov
jo
and
nop
jb
pop
xor
xor
xchg
fild
xchg
xchg
cmp
shl
mov
add
xorps
sub
add
jp
jmp
xchg
fwait
repz
add
pop
pushf
xor
adc
pop
cmp
xchg
retf
(bad)
pushf
mov
dec
cmp
call
lods
ds
mov
clc
mov
retf
pop
call
push
mov
pop
xchg
adc
adc
imul
mov
fldenv
scas
sbb
or
dec
xchg
mov
pop
js
push
fidiv
lea
retf
imul
retf
cld
pop
dec
je
jbe
pop
ds
xchg
jp
pop
cmp
loopne
dec
pop
mov
cdq
dec
(bad)
sub
(bad)
dec
pop
pop
cmps
xor
dec
fisub
dec
add
int
mov
xchg
jb
adc
mov
std
jns
add
fisttp
test
xor
push
adc
xchg
adc
into
mov
cmp
addr16
mov
mov
clc
movs
scas
popf
ss
xlat
jecxz
ret
and
adc
mov
ficomp
xor
sbb
dec
xchg
pop
cmp
call
loop
jge
leave
inc
mov
inc
les
je
inc
xor
rcl
and
fwait
lods
retf
into
mov
loop
push
mov
push
dec
jle
dec
inc
lahf
call
jb
jp
push
add
xchg
mov
dec
sti
jne
ins
mov
das
mov
sub
sbb
or
mov
shr
push
xchg
sbb
mov
push
mov
pop
shl
inc
cmp
xor
sbb
mov
sub
stc
rol
adc
ss
xor
xchg
xlat
xchg
and
mov
mov
adc
xor
rcl
sar
jae
mov
stc
mov
cmp
out
push
push
dec
xchg
adc
jmp
and
shl
call
inc
pop
and
loop
inc
add
push
xchg
push
push
mov
and
jo
dec
xchg
jae
(bad)
sbb
rol
repz
ret
pop
sbb
inc
hlt
test
pop
inc
mov
dec
xchg
xchg
sbb
loopne
je
mov
jae
sbb
cmp
jp
fisubr
cld
dec
pop
int
lock
mov
call
(bad)
mov
fnstenv
int
mov
cmp
bnd
cdq
pop
pop
data16
sbb
mov
sbb
dec
inc
rcr
bswap
mov
repz
fisubr
xchg
add
adc
xchg
leave
fistp
push
data16
mov
lds
mov
or
mov
rol
xchg
inc
inc
mov
xor
shr
inc
hlt
mov
call
fld
mov
cdq
call
mov
call
sbb
mov
adc
inc
icebp
daa
inc
adc
lea
jbe
mov
cdq
pop
test
mov
mov
mov
push
push
loope
xor
or
aaa
jne
jge
cdq
enter
mov
sar
inc
sti
xlat
out
push
xor
inc
repz
and
(bad)
stc
push
sbb
retf
jns
pop
data16
dec
sahf
pusha
mov
push
cli
lea
cs
pop
cs
xor
mov
pushf
jnp
pop
dec
mov
jge
jo
loop
jp
outs
les
pop
dec
jp
pop
les
retf
adc
jl
sub
inc
jl
push
fisubr
fs
pushf
movsx
test
mov
call
mov
pop
mov
mov
cmp
xor
shr
xchg
jl
dec
push
(bad)
push
jae
cmp
pop
inc
jg
mov
call
mov
(bad)
xchg
mov
cmp
sbb
dec
lea
lods
stc
push
push
jae
mov
and
mov
mov
sbb
xor
xor
pop
xlat
(bad)
inc
push
mov
test
xchg
pop
js
jp
sti
adc
sub
inc
mov
dec
lea
adc
xchg
call
jecxz
dec
xchg
cmp
dec
xchg
out
call
(bad)
stc
inc
shl
sbb
pop
mov
cmc
stos
movaps
(bad)
daa
jb
jg
pop
xchg
cli
cs
fisttp
je
sti
out
js
les
cmp
test
fs
inc
dec
dec
xor
int
stos
push
push
or
pop
and
outs
data16
jl
dec
and
cld
push
fnstsw
retf
and
mov
push
jg
retf
xor
xchg
cdq
enter
test
jl
xor
pop
push
adc
retf
mov
fadd
xor
nop
and
xchg
adc
icebp
pop
cmps
shl
cli
pushf
or
dec
xor
cwde
fiadd
aaa
and
mov
fiadd
lock
ds
mov
daa
xor
inc
je
shl
push
xchg
xchg
in
adc
stos
xchg
xchg
loopne
icebp
ror
mov
popf
call
gs
cmc
shl
xor
mov
aad
dec
xchg
stc
jp
cmp
jecxz
pop
hlt
icebp
or
cld
call
push
inc
and
call
hlt
nop
jbe
dec
ins
or
fstp
sbb
sbb
dec
xlat
adc
int
dec
sbb
dec
imul
cmp
mov
cmp
fist
push
pop
mov
ins
and
loop
sar
jp
(bad)
aaa
push
stos
mov
pop
dec
sub
(bad)
xchg
mov
mov
dec
pop
xchg
mov
pop
ret
arpl
jae
fdivr
call
jne
jnp
sar
mov
lock
call
push
cmp
call
js
jb
cmps
sub
pop
rcl
adc
xchg
lods
call
inc
dec
adc
adc
pop
adc
sbb
fwait
jae
dec
sbb
(bad)
jg
call
xchg
mov
inc
(bad)
fstp
(bad)
mov
movs
sbb
ret
retf
mov
or
sub
mov
loop
cs
dec
mov
jle
mov
mov
or
mov
bound
xchg
mov
mov
mov
clc
out
xchg
neg
cmp
dec
mov
fisubr
lahf
nop
jge
mov
dec
sbb
push
pop
mov
jge
or
mov
pop
dec
stc
fmulp
scas
mov
dec
ror
jb
cld
xchg
cmp
cmp
mov
mov
xchg
pop
stos
push
and
add
jmp
pop
fnstcw
or
stos
inc
mov
xor
pop
or
dec
mov
cmp
jne
dec
inc
jb
rol
mov
xchg
xor
aad
push
dec
rcr
push
mov
sub
sub
xchg
fs
xor
cmp
jno
sbb
iret
dec
mov
pop
xor
jnp
dec
fiadd
xchg
mov
dec
and
fdivr
pop
addr16
dec
repz
and
sbb
or
sbb
cdq
jg
jno
stos
adc
xor
mov
shl
mov
sub
lock
mov
mov
push
inc
inc
call
call
nop
dec
out
sbb
xchg
cld
test
repz
or
pushf
dec
mov
loop
std
arpl
mov
xchg
retf
or
mov
dec
das
dec
pusha
add
aad
jb
push
dec
pop
pop
dec
jg
pop
mov
mov
adc
inc
xchg
pop
xor
mov
jg
shl
out
retf
jns
xchg
cmp
push
mov
fdivr
xchg
pop
xchg
dec
dec
std
push
push
je
in
sar
sub
scas
mov
jp
sti
add
add
xor
sbb
pop
mov
inc
(bad)
sti
mov
call
call
jne
retf
aad
dec
lahf
xchg
sbb
sbb
fisub
jp
popf
cmp
push
xor
nop
xor
mov
cmps
sub
fnstenv
test
stos
pushf
pop
mov
dec
xchg
movs
call
loope
out
xchg
iret
and
mov
and
nop
(bad)
hlt
ror
imul
or
mov
push
sbb
call
test
jmp
ds
std
jp
pop
arpl
ficomp
loop
dec
mov
push
cmp
sbb
inc
or
cld
punpckhdq
mov
sbb
ins
push
cs
scas
dec
mov
lods
adc
or
xchg
loop
mov
jb
sbb
mov
pop
cmps
dec
xchg
push
cdq
sbb
bound
scas
mov
aam
cmp
adc
(bad)
xor
into
xor
xor
mov
out
xor
retf
daa
jp
or
mov
pop
dec
cmp
pop
out
cwde
pop
inc
(bad)
call
jae
adc
fwait
pop
mov
jne
sub
call
and
sbb
mov
xchg
jb
cmps
xor
xchg
ds
loop
mov
mov
fcomp
sbb
out
mov
add
jmp
icebp
lea
push
xor
mov
mov
adc
or
dec
mov
pop
pop
ds
(bad)
cdq
mov
(bad)
sbb
push
xchg
call
cmp
cmp
enter
push
ret
outs
mov
out
push
and
(bad)
jne
xchg
mov
mov
cmp
jl
sar
xor
loope
jno
mov
dec
push
call
inc
arpl
sbb
adc
data16
gs
xchg
(bad)
xor
inc
dec
push
adc
fcmovbe
std
cmp
aaa
push
push
fld
mov
std
in
mov
mov
repz
cwde
or
push
mov
rcl
xor
aad
dec
cmps
xor
mov
add
adc
sar
call
sbb
sbb
(bad)
fistp
xchg
rol
pushf
not
pop
xchg
mov
add
jl
retf
dec
movs
ss
movs
test
mov
cmp
mov
icebp
push
inc
jo
dec
and
retf
sahf
lock
rcl
cmp
sbb
sahf
dec
dec
fdivr
adc
dec
mov
into
jmp
stc
adc
mov
pop
ins
cmp
mov
xor
jo
xor
cmp
pop
adc
sahf
push
adc
(bad)
dec
inc
sbb
add
mov
dec
add
cmp
xor
jmp
repnz
cmp
mov
mov
dec
jecxz
jae
cwde
mov
aam
cwde
cmp
sahf
mov
mov
xchg
or
jb
sbb
pop
dec
or
mov
inc
mov
mov
in
aad
rcr
mov
inc
mov
fld
test
push
pop
inc
mov
xchg
and
loop
movs
test
cmc
inc
xlat
jne
mov
scas
push
and
clc
ror
dec
xchg
(bad)
mov
pop
mov
and
aad
jle
retf
cwde
std
into
loopne
jne
ror
xor
adc
aas
test
cmp
test
mov
cmp
pop
cmp
or
out
adc
push
and
xchg
jnp
lods
mov
push
pop
adc
inc
dec
into
es
push
(bad)
xchg
mov
jae
cwde
neg
ds
mov
add
cs
xor
shl
out
push
cwde
fstp
adc
xchg
arpl
dec
jnp
push
in
pop
add
mov
xor
inc
inc
dec
and
mov
dec
inc
movs
(bad)
pop
je
xchg
mov
iret
mov
mov
arpl
xchg
(bad)
pop
aam
inc
mov
adc
mov
inc
sbb
hlt
push
pop
xchg
mov
cmp
cwde
push
cmps
inc
jb
cdq
push
out
sbb
addr16
adc
xchg
dec
mov
shl
push
adc
pop
sbb
pop
idiv
push
jns
dec
(bad)
xchg
dec
pop
shl
pop
mov
dec
dec
cmp
(bad)
mov
dec
xchg
aas
lock
mov
call
mov
and
push
nop
xchg
(bad)
js
mov
fisubr
(bad)
cdq
retf
in
inc
sub
sbb
in
dec
ficom
pop
xchg
jl
imul
push
xor
pop
mov
mov
mov
ss
mov
sbb
retf
xor
add
stos
mov
push
sbb
dec
mov
repz
add
bound
jbe
jae
sbb
aad
xor
imul
jp
xor
mov
icebp
mov
sub
repz
sti
xchg
mov
test
ret
inc
shl
cld
mov
fisttp
adc
mov
pop
cmc
and
(bad)
dec
xchg
xor
mov
cmp
push
jge
xchg
inc
xchg
xchg
sbb
mov
call
inc
jl
fild
pop
(bad)
pop
xchg
dec
data16
movs
mov
xchg
dec
mov
int
mov
jns
dec
pop
cmp
pop
xchg
sbb
cmp
add
pop
cmp
jge
adc
jno
mov
cs
xchg
or
call
jl
stos
mov
inc
push
or
cmp
xor
movs
pushf
xchg
or
fnstcw
test
adc
jno
pop
mov
mov
outs
jne
js
dec
inc
pop
pop
mov
jl
pushf
call
pop
adc
loopne
lea
fst
dec
sbb
inc
jae
jmp
arpl
aam
sbb
xor
xor
retf
dec
xchg
jl
sar
mov
fimul
lahf
adc
jne
inc
inc
adc
stos
popa
cmp
mov
inc
xchg
mov
xchg
fild
enter
pop
xchg
adc
inc
push
cdq
mov
or
jmp
xchg
pop
dec
adc
ja
inc
pop
cmps
ja
push
dec
xor
bound
jno
lock
sbb
cmp
adc
dec
ins
(bad)
push
adc
test
mov
lods
adc
cmp
mov
sub
lds
loop
adc
dec
sbb
out
(bad)
les
or
out
mov
jnp
mov
xchg
mov
inc
pop
jle
test
or
test
cmp
mov
fwait
xchg
ficomp
mov
sbb
mov
fisttp
sar
pop
mov
fild
xor
call
push
inc
fs
mov
or
mov
push
loope
loop
sbb
push
adc
adc
adc
pop
adc
pushf
mov
mov
sub
dec
fld
jl
jae
mov
xor
sbb
fiadd
call
jno
mov
mov
(bad)
pushf
call
retf
std
mov
lds
test
sbb
jecxz
xor
cwde
mov
pop
push
xchg
pop
xchg
icebp
jp
pop
dec
(bad)
xchg
push
rcr
xchg
dec
adc
cmp
pop
int3
pushf
adc
mov
lds
jle
adc
(bad)
mov
mov
ret
clc
imul
inc
dec
fst
push
jnp
push
test
adc
dec
pop
into
int
mov
push
jecxz
das
aam
inc
adc
mov
dec
out
cmp
mov
inc
fst
xor
add
xchg
sub
sbb
mov
mov
add
push
mov
repnz
add
in
xchg
cmp
(bad)
jp
addr16
xchg
sbb
cmps
rcr
movs
xor
stos
adc
pop
jbe
mov
(bad)
pop
mov
adc
mov
sub
sub
adc
call
call
mov
mul
sub
sbb
scas
add
push
dec
push
jecxz
push
adc
pop
imul
mov
pop
retf
pop
(bad)
call
sbb
fidiv
push
(bad)
jl
push
call
mov
jl
mov
fidivr
xor
rcl
stos
retf
push
jmp
push
inc
mov
dec
jg
jns
dec
mov
into
mov
push
push
push
xchg
dec
scas
jle
movs
or
sbb
mov
add
test
fcomip
mov
pop
inc
cdq
mov
dec
jnp
xchg
and
sub
out
out
es
ds
dec
mov
xchg
fcmove
sbb
inc
call
push
call
mov
cmp
jge
dec
xor
adc
xchg
loope
aad
int
mov
cmp
or
add
or
mov
mov
dec
push
mov
dec
and
pop
and
sbb
xchg
cmp
(bad)
dec
repz
or
je
pop
cld
adc
aas
cmp
mov
shl
fist
cmp
sub
inc
xchg
cdq
adc
pop
jp
push
jnp
push
fnsave
aam
dec
imul
(bad)
jnp
(bad)
inc
push
dec
mov
cmp
dec
xchg
sar
cmc
rol
ror
cdq
adc
push
gs
mov
sbb
jl
repnz
aaa
pop
sahf
jecxz
mov
fld
call
ror
mov
inc
pop
sub
cld
loop
or
shr
(bad)
call
pop
and
stos
xchg
add
call
and
xchg
and
jne
jae
push
sbb
pop
inc
mov
rcr
push
shl
pop
xchg
sar
not
cwde
call
mov
movs
mov
pop
xchg
cmp
push
adc
ficomp
xor
pop
test
cmp
daa
popf
push
xor
arpl
pop
not
sbb
or
fdivrp
mov
xchg
retf
mov
imul
aad
mov
inc
mov
xchg
pop
cmp
mov
cwde
dec
stc
enter
inc
icebp
xchg
(bad)
pop
dec
add
mov
xchg
dec
push
mov
push
mov
(bad)
inc
enter
mov
inc
push
adc
pop
cmp
xchg
jae
push
pop
dec
inc
aad
cdq
sahf
pop
adc
lahf
icebp
inc
push
retf
enter
enter
pop
dec
sbb
ror
stos
or
dec
mov
jl
dec
ret
sbb
inc
xchg
or
pushf
cmp
and
jb
mov
retf
xor
mov
rol
pop
mov
fdivr
fimul
les
(bad)
push
jo
addr16
retf
inc
adc
call
sbb
xor
cmp
xor
inc
jb
call
(bad)
fnstenv
out
mov
rcl
pop
mov
adc
or
and
fsub
call
adc
call
ds
mov
ja
pop
into
and
sub
push
mov
pop
xchg
mov
mov
pop
mov
aad
pop
and
mov
fidivr
pop
pushf
adc
fnclex
std
jae
mov
adc
ins
mov
inc
sbb
call
push
es
jo
ficom
pop
data16
pushf
pop
pop
dec
xor
mov
push
aas
leave
xor
cld
push
iret
cwde
dec
mov
ins
push
sbb
sbb
lock
dec
aam
(bad)
pop
aam
mov
xor
xor
test
call
mov
loop
not
jmp
lock
mov
ds
xchg
daa
xor
mov
mov
add
pop
adc
mov
xchg
add
sub
sar
mov
pop
mov
jbe
cmp
xor
aad
out
inc
mul
fistp
dec
loope
jae
dec
jae
xchg
xchg
mov
scas
xchg
retf
icebp
jnp
fmul
(bad)
mov
dec
xchg
mov
adc
outs
push
and
xchg
pop
mov
dec
ror
div
rcl
mov
mov
xor
jo
add
dec
pop
push
clc
push
jns
mov
or
dec
sbb
xchg
xlat
mov
stc
cmp
sub
leave
and
cld
daa
dec
jae
inc
mov
call
sbb
aam
dec
push
stc
call
repz
mov
xchg
jmp
(bad)
nop
inc
mov
or
and
pop
push
stc
hlt
adc
frstor
jb
dec
and
retf
fsubr
cmc
mov
xchg
sub
xor
jo
call
popf
fdivr
scas
xor
mov
mov
aaa
(bad)
sub
push
mov
mov
mov
fcom
mov
xchg
mov
retf
nop
jp
pop
jae
mov
(bad)
fist
add
test
mov
dec
sbb
ret
cmp
inc
xchg
push
sub
xlat
xor
not
sub
(bad)
pop
push
ss
jno
jp
jl
aam
mov
dec
ja
call
mov
inc
(bad)
mov
jb
arpl
dec
shr
jb
out
jbe
dec
mov
mul
sub
jne
sbb
in
retf
dec
fisub
cmp
xor
jle
ret
int
xchg
mov
aam
xor
dec
js
or
sbb
movs
xor
stos
in
aad
imul
xchg
inc
data16
cmp
call
jmp
sbb
repnz
mov
xor
xchg
jae
mov
inc
ror
mov
jbe
dec
les
clc
or
sub
out
aaa
or
cmc
retf
mov
mov
mov
fisttp
xchg
xchg
sbb
call
(bad)
test
adc
push
mov
xor
adc
xchg
adc
cmp
pop
pop
mov
xchg
inc
mov
arpl
push
or
xor
pop
js
or
ror
mov
clc
push
cmc
xlat
pop
jbe
aaa
cdq
push
or
jp
pop
mov
leave
push
lods
xchg
xor
retf
enter
dec
xchg
sbb
jae
dec
dec
rcl
retf
in
movs
call
sar
cmp
mov
mov
mov
mov
inc
call
adc
aad
call
movs
fidivr
pop
leavew
xchg
xchg
sahf
mov
or
aam
jnp
aas
xchg
sbb
scas
cmp
mov
adc
aam
into
sbb
jae
and
mov
test
xor
cli
push
or
and
call
rcl
dec
jg
dec
sahf
pop
mov
adc
dec
mov
daa
inc
retf
xchg
dec
es
mov
shl
loopne
int
push
pop
pop
pop
cmp
adc
inc
mov
push
rcr
sti
pop
ret
sub
fistp
xor
push
push
pop
test
pop
mul
adc
xchg
pop
adc
iret
rcr
aad
xlat
frstor
push
jmp
ja
jmp
movs
out
dec
sbb
xlat
cmp
fcom
sbb
test
sbb
fistp
nop
or
rcr
push
jl
inc
xchg
ror
shr
mov
mov
sbb
dec
push
in
sub
hlt
inc
pop
xchg
in
mov
pop
repz
shl
fwait
xchg
arpl
not
sbb
inc
pop
adc
dec
or
leave
retf
mov
sub
outs
mov
sbb
popa
mov
call
dec
mov
xor
pop
inc
icebp
bnd
pop
adc
mov
sbb
icebp
push
loop
cld
mov
push
xchg
shl
adc
push
mov
sahf
cld
call
sbb
ss
in
adc
mov
adc
xchg
push
dec
mov
adc
mov
jne
aad
fild
mov
or
xlat
mov
or
xor
sub
xchg
xor
adc
rcr
cmp
inc
fiadd
sahf
mov
repz
sbb
dec
cwde
mov
enterw
pushf
sbb
imul
out
inc
push
and
sbb
add
nop
call
or
pop
call
or
test
push
popf
mov
cmc
dec
push
aam
sbb
adc
dec
pop
or
sbb
mov
sbb
push
pop
neg
not
mov
repnz
mov
inc
fldl2t
xchg
jbe
arpl
xor
(bad)
mov
dec
popa
dec
mov
ret
xchg
jbe
dec
pop
mov
sbb
ror
or
mov
mov
hlt
jno
mov
adc
add
nop
pop
mov
push
mov
test
rcr
sbb
inc
pop
bound
add
rol
adc
mov
cmp
loope
adc
add
mov
into
pop
sub
div
cwde
cmp
jo
pop
sub
mov
sub
js
push
dec
sub
pop
cli
call
addr16
pushf
xchg
mov
mov
cmp
jns
test
dec
sbb
lds
push
dec
and
mov
xchg
adc
mov
dec
fstp
pop
mov
pushf
fimul
fidiv
dec
xchg
or
xor
in
jbe
mov
sub
jp
(bad)
dec
es
dec
inc
jno
call
jl
inc
into
push
or
aaa
sub
dec
dec
icebp
fisttp
xor
loop
(bad)
mov
bound
xor
mov
sub
adc
dec
jb
shr
rcl
jbe
lods
xchg
mov
nop
jno
cli
jmp
mov
and
call
mov
mov
mov
push
mov
cmp
dec
shl
ror
fld
adc
in
aam
div
(bad)
sub
icebp
jb
or
mov
push
pop
sub
dec
rol
stc
bound
mov
ss
xchg
sub
clc
call
xchg
cwde
inc
retf
pop
loop
push
retf
cmps
mov
(bad)
sbb
xchg
dec
xchg
mov
or
mov
pop
mov
xchg
xchg
inc
push
imul
cmc
cli
mul
pop
push
sbb
mov
xchg
xor
call
pop
push
fld
mov
sbb
or
mov
mov
inc
cmp
shl
sbb
dec
popf
xor
bound
adc
xor
jle
mov
fcmove
xchg
inc
jle
mov
pop
xchg
dec
shl
pop
inc
dec
ss
lock
jns
aad
aad
aaa
outs
dec
xchg
pop
bound
or
jno
mov
sar
rcl
push
mov
repz
pop
xchg
call
jae
or
pop
dec
jmp
dec
mov
inc
ss
dec
cmp
fmul
sbb
dec
sbb
cwde
(bad)
scas
jp
call
sbb
adc
js
aad
xchg
push
mov
xchg
pop
aad
jbe
dec
ret
(bad)
loopne
jnp
push
adc
loope
adc
jge
cmp
xchg
movs
or
inc
cwde
addr16
aad
cwde
std
(bad)
fild
retf
jns
xchg
push
xchg
sub
dec
popf
(bad)
clc
pop
dec
dec
mov
cs
js
jmp
(bad)
sar
clc
jp
adc
cmp
mov
dec
iret
cmc
mov
cmp
pop
jb
stc
popf
jg
mov
hlt
and
fwait
bound
mov
inc
pushf
xchg
xchg
cmp
inc
xchg
mov
sbb
mov
and
xlat
(bad)
and
cld
jnp
jo
push
aad
adc
xchg
xor
and
loop
mov
mov
and
and
sbb
ror
ret
shl
fisubr
out
mov
cwde
call
push
sti
arpl
neg
push
pop
or
xor
int3
cmp
inc
pushf
xor
jbe
adc
rcl
and
or
fldcw
aad
inc
push
dec
gs
mov
ret
dec
xchg
sar
mov
xchg
dec
jae
mov
mov
cmp
xlat
dec
mul
fwait
in
aam
mov
cmps
inc
mov
push
daa
rcr
xchg
stos
std
cmp
nop
sub
adc
and
push
scas
xor
hlt
outs
hlt
inc
push
jnp
dec
xor
loop
xchg
mov
mov
mov
pop
hlt
icebp
push
out
dec
xchg
loop
sbb
sbb
shl
mov
test
jo
pop
pop
cwde
sahf
and
sar
fcom
pop
mov
cmp
sar
inc
adc
add
or
adc
xchg
xor
pop
leave
push
sbb
pop
pop
adc
mov
std
jp
push
xchg
push
dec
jno
xor
test
inc
pop
inc
(bad)
div
mov
je
dec
xchg
inc
js
xlat
xor
xor
cmp
push
lds
xor
dec
push
sar
adc
retf
fld
ret
dec
jle
push
adc
pop
mov
xchg
mov
mov
xchg
sahf
cwde
(bad)
inc
pop
cdq
stos
cmp
cwde
hlt
cmp
clc
daa
xor
neg
mov
jl
pop
mov
ds
dec
pop
pop
xchg
sbb
aam
add
js
inc
and
or
adc
lods
xchg
sub
adc
xchg
xor
sbb
mov
mov
pop
pop
cdq
fadd
push
push
call
test
ret
xor
inc
repnz
mov
pop
retf
or
mov
inc
mov
inc
dec
aam
hlt
adc
mov
cmps
fisubr
inc
sar
pop
mov
aam
dec
jbe
jae
jae
call
retfw
xlat
mov
fadd
enter
sbb
jbe
dec
mov
xlat
stos
mov
sub
mov
xor
pop
mov
les
or
dec
cmp
mov
push
call
sbb
inc
push
xchg
cdq
cwde
mov
mov
popf
or
cmp
adc
push
xchg
sbb
mov
cwde
sar
or
dec
push
pop
ror
xor
add
pop
jo
mov
imul
xchg
mov
mov
xchg
add
movs
push
call
add
mov
push
pop
loope
mov
sahf
rol
pop
mov
outs
retf
xchg
adc
push
push
adc
lds
xlat
inc
scas
call
or
jp
fidivr
add
or
push
pushf
pushf
(bad)
or
dec
imul
sbb
or
test
dec
mov
(bad)
dec
ret
dec
test
inc
fistp
jmp
dec
push
and
and
aam
push
jne
mov
(bad)
std
jp
hlt
inc
sbb
out
pushf
sub
call
push
call
xchg
inc
sub
push
jmp
push
(bad)
push
jbe
and
push
repnz
jmp
mov
or
jae
or
inc
(bad)
call
adc
pop
enter
xchg
push
clc
sar
dec
xor
ret
pushf
test
neg
mov
mov
outs
jbe
add
loop
fisubr
push
xchg
mov
cwde
inc
icebp
push
mov
inc
jle
or
pop
jns
retf
pop
pop
push
push
mov
jg
pushf
push
dec
xor
dec
mov
pop
mov
and
leave
sub
sub
xchg
xor
xchg
xchg
cmp
inc
aam
sub
retf
xor
jp
pop
aad
movs
jns
dec
leave
pop
xchg
loop
mov
pop
xor
dec
test
add
pop
inc
xlat
ficomp
sbb
aas
dec
fwait
in
inc
jge
mov
lods
out
mov
mov
gs
sbb
xchg
mov
clc
xchg
jmp
out
inc
dec
inc
inc
sbb
push
jns
dec
fnstenv
movs
mov
fs
cmp
mov
pop
adc
pop
mov
xchg
push
fmul
xor
mov
movs
test
dec
mov
call
mov
jbe
sbb
dec
inc
sti
pop
sbb
xchg
cmp
mov
out
(bad)
xor
lock
sbb
jmp
xor
xchg
add
xchg
xor
jno
inc
pop
and
adc
jb
adc
mov
xor
sahf
dec
mov
outs
dec
shr
cmp
mov
enter
or
cmp
xor
adc
sub
jp
or
cdq
rcl
neg
cmp
(bad)
mov
and
push
cwde
mov
dec
enter
pop
and
out
sub
test
retf
jl
pop
dec
fstp
call
mov
mov
aaa
adc
aam
push
fld
addr16
dec
(bad)
leave
cmp
js
pop
pop
mov
xchg
mov
test
js
dec
and
call
rol
sub
dec
push
or
mov
dec
les
dec
jae
mov
fadd
or
ss
fsub
(bad)
xchg
xchg
push
retf
stc
push
xor
inc
pop
(bad)
mov
aaa
inc
call
or
inc
loope
cmp
sbb
iret
mov
and
and
arpl
jno
cwde
pusha
pop
sbb
sub
pop
ror
and
adc
mov
rcr
cmp
sar
(bad)
push
dec
inc
clc
xchg
fst
mov
or
cwde
jp
push
jae
aaa
sbb
inc
push
jb
push
xor
pop
xor
les
out
pop
cdq
xor
pop
mov
sbb
xchg
xor
push
addr16
cld
dec
cmp
push
into
fsubrp
cdq
js
adc
mov
mov
lahf
ret
inc
repz
sbb
sbb
xchg
xchg
cmp
rcl
rcr
addr16
ds
inc
xchg
pop
pop
xchg
fsub
cwde
push
mov
dec
aam
jae
mov
aas
xor
or
dec
adc
xchg
jae
clc
sbb
shr
adc
fidivr
mov
inc
stc
pop
pop
push
mov
dec
pop
jns
push
push
idiv
dec
repnz
enter
call
pop
int
xchg
mov
and
lock
mov
xor
dec
pop
jge
pop
inc
lock
mov
add
je
aam
inc
imul
or
and
(bad)
(bad)
outs
jo
pop
mov
das
jge
sahf
mov
xchg
les
rcl
retf
push
ficom
inc
movs
mov
xchg
xchg
push
adc
lock
inc
adc
xor
cmp
jmp
xchg
call
adc
repnz
or
icebp
xchg
and
ret
sbb
into
retf
fst
pop
xchg
mov
fwait
fs
adc
sbb
fidiv
jge
call
clc
mov
inc
mov
stc
cmc
adc
inc
clc
loop
dec
adc
push
bound
push
sbb
sbb
dec
iret
rcr
cmp
sub
or
dec
or
pop
or
mov
fimul
stc
test
mov
jge
dec
cmp
pop
xlat
inc
pop
mov
mov
dec
loop
xor
push
dec
jmp
mov
xor
dec
je
xchg
xor
ror
xchg
or
hlt
sbb
(bad)
mov
push
sahf
xor
out
xor
hlt
add
sbb
int
xchg
pop
mov
xor
enter
pop
push
mov
inc
xor
jp
push
adc
mov
repz
dec
adc
sbb
push
add
mov
mov
fimul
ret
cmp
out
fisub
dec
test
dec
or
jp
jnp
fadd
addr16
push
ret
mov
stos
es
cwde
dec
mov
mov
push
xchg
xor
xchg
jg
pop
adc
and
stc
push
adc
aad
popf
leave
jo
dec
mov
mov
dec
adc
xchg
jg
xchg
push
sub
stos
inc
xchg
pop
xchg
lahf
cdq
inc
pop
cdq
xchg
or
adc
dec
dec
mov
xchg
int3
dec
fmul
dec
out
pop
mov
dec
push
ficom
pop
pop
adc
adc
inc
xchg
ret
pop
(bad)
mov
pushf
ficomp
jp
inc
mov
xchg
dec
pop
mov
and
cmp
call
shr
mov
mov
xchg
sub
adc
add
mov
dec
push
call
dec
call
mov
mov
pop
js
dec
or
aam
push
loope
pop
jp
xchg
stc
dec
inc
xchg
data16
inc
mov
sub
push
pop
jl
dec
xchg
test
mov
xchg
aad
xchg
dec
lahf
popf
or
cmp
ret
call
or
je
xor
mov
jnp
std
mov
call
ins
jae
stos
sti
push
(bad)
mov
or
xchg
(bad)
inc
loopne
push
loop
enter
dec
fldenv
xor
push
pop
dec
sbb
inc
clc
clc
rcr
aaa
mov
dec
int
inc
dec
fimul
dec
mov
xlat
dec
xchg
pop
mov
aaa
jb
test
out
repnz
mov
dec
sbb
push
sub
fiadd
sbb
mov
popf
push
aam
pusha
push
cs
pop
xchg
fiadd
dec
push
call
call
nop
mov
shr
or
mov
inc
inc
xlat
xor
push
and
jns
fisttp
cmp
push
dec
sbb
cmp
adc
and
mov
xor
std
test
or
fs
pushf
dec
movs
push
adc
fnstenv
lahf
loop
cli
cmps
pop
test
ss
cmps
inc
aam
xchg
fst
inc
pop
aaa
inc
leave
dec
dec
mov
jb
cmp
push
xchg
adc
(bad)
cwde
xor
dec
or
cmp
clc
dec
push
push
cmp
repnz
xchg
pop
clc
push
call
jp
push
dec
add
push
mov
mov
pop
push
sbb
and
leave
xchg
mov
or
fcomp
inc
fnstcw
pop
jge
xchg
sti
or
call
(bad)
fld
jmp
test
nop
iret
dec
dec
pusha
sar
adc
dec
fwait
test
cld
adc
mov
hlt
jno
mov
nop
or
jo
dec
pop
add
mov
add
mov
lahf
lock
jle
mov
in
icebp
dec
sahf
adc
aas
mov
push
cmp
cmp
xlat
mov
mov
cmp
jno
jne
repz
aad
xchg
dec
dec
imul
jae
sbb
add
xchg
ret
adc
rcr
pop
neg
test
sahf
pop
into
jno
pop
xchg
dec
lods
neg
pop
int3
adc
jle
loopne
adc
ret
call
fbld
jg
jns
fld
pop
mov
sti
push
cmp
cwde
gs
fs
pop
sbb
mov
mov
inc
dec
pop
or
cmps
fisubr
movs
pop
push
enter
and
not
mov
cwde
mov
push
call
dec
fidivr
xchg
push
shl
mov
dec
pop
xor
or
jp
ds
unpcklps
pusha
data16
lea
jp
mov
push
sahf
shl
adc
mov
hlt
call
loopne
lock
sbb
push
and
mov
in
into
aam
dec
ins
movs
cwde
fdivr
neg
mov
sub
pop
mov
mov
adc
ficomp
xor
jo
(bad)
div
mov
repnz
add
aas
loop
popf
retf
cli
loopne
push
push
jae
push
push
xlat
shl
sbb
inc
jns
cmp
sar
cmp
sti
fmulp
adc
outs
xor
dec
mov
call
aaa
adc
data16
enter
mov
call
call
ret
xchg
adc
inc
lds
xor
or
aam
fstp
sbb
xchg
xor
push
ja
inc
push
mov
inc
push
cmp
cmps
out
cwde
rcl
cs
and
outs
add
scas
sbb
loopne
inc
pop
fcmovu
add
pop
xor
dec
push
mul
dec
pop
and
or
clc
dec
mov
call
or
dec
dec
sbb
xor
pop
jae
sbb
inc
ins
push
stos
jl
cmp
dec
jp
ja
sbb
dec
inc
jmp
jmp
mov
dec
imul
shl
xchg
jne
fidiv
fs
lahf
fld
jp
pop
leave
xor
xchg
pop
adc
xchg
jb
xor
mov
imul
pop
mov
mov
push
inc
push
sbb
call
xchg
clc
xor
dec
retf
lea
jl
push
dec
ins
aad
retf
and
bound
sbb
mov
jno
push
inc
jo
dec
imul
dec
fdivrp
into
sbb
call
in
lds
sbb
jo
xchg
mov
test
pop
mov
pop
cmp
cdq
mov
add
retf
call
aas
adc
ficomp
xor
mov
lock
repnz
jmp
or
mov
mov
pop
xchg
test
pop
xor
pop
icebp
xor
hlt
xor
push
mov
jle
xchg
add
sbb
adc
ds
in
sbb
pop
jne
mov
or
fwait
inc
cli
pop
call
loope
mov
aad
inc
leave
sbb
sbb
mov
sbb
adc
inc
jle
mov
pop
imul
stos
(bad)
mov
sub
data16
inc
sbb
rcr
mov
or
cmp
nop
repz
popa
retf
call
jmp
cmp
into
xor
mov
dec
push
pop
sbb
test
test
dec
adc
sub
mov
jge
js
(bad)
xchg
mov
jl
jg
mov
fwait
push
push
xchg
(bad)
sub
adc
not
adc
test
popa
xchg
cmp
xchg
mov
push
jmp
jo
inc
jns
mov
mov
xchg
popa
xor
push
pop
adc
jo
aaa
xchg
je
or
mov
adc
push
jno
inc
jo
xchg
dec
pop
push
pop
mov
adc
jp
stos
mov
jp
seto
mov
jl
dec
dec
xchg
cmp
mov
xchg
stc
push
push
mov
inc
fisub
mov
mov
(bad)
lds
mov
mov
(bad)
push
inc
sbb
inc
push
retf
push
mov
ins
adc
fsubr
std
push
dec
cwde
xor
and
xchg
pop
xchg
xchg
cmp
inc
repz
inc
aam
test
xchg
mov
cwde
aam
or
fnstenv
loop
sbb
mov
arpl
jg
adc
lea
cwde
sbb
sbb
inc
mov
stc
xchg
sub
pop
push
mov
dec
adc
xchg
cmc
das
arpl
test
nop
mov
retf
xchg
clc
push
call
sbb
pop
inc
sar
call
or
fadd
xor
mov
lahf
jp
or
mov
pop
mov
in
lock
sbb
mov
xchg
jge
push
adc
fisubr
inc
mov
or
fiadd
ficom
jp
fdiv
movs
mov
pop
movs
xchg
dec
mov
repnz
mov
mov
aad
inc
cmc
cdq
pop
jbe
jns
xchg
mov
fcom
inc
pop
retf
ja
into
cmp
xchg
(bad)
push
mov
fst
mov
sbb
mov
mov
sahf
sbb
cdq
dec
retf
xchg
push
call
clc
call
rol
enter
scas
in
mov
push
mov
mov
mov
sub
or
inc
in
mov
sub
loopne
add
cwde
mov
das
inc
cwde
sbb
pusha
jns
push
dec
xchg
cmp
shl
arpl
sbb
jl
dec
out
mov
jae
xchg
xchg
dec
adc
pop
sub
call
xchg
pushf
std
adc
lods
mov
sub
daa
leave
pop
fist
shrd
sbb
dec
hlt
xchg
pop
call
xor
popf
neg
aad
mov
dec
xor
mov
jmp
sahf
pop
dec
mov
push
jb
or
push
jbe
mov
movs
(bad)
jbe
sbb
pop
fisttp
xchg
cmp
pop
out
call
mov
cmp
pop
xchg
dec
ror
ret
movs
xor
add
out
retf
push
push
fnstenv
enter
arpl
or
jae
dec
fidiv
jp
cmp
(bad)
rcl
jle
dec
pop
ins
sar
aad
jp
mov
stos
jg
mov
mov
jno
das
add
cld
jg
xchg
loopne
pop
push
jo
jp
mov
pusha
out
mov
or
dec
mov
idiv
dec
loop
cmp
aad
inc
idiv
mov
jmp
xlat
and
pop
loop
in
or
and
dec
stos
inc
pop
sub
out
or
(bad)
ror
jmp
imul
adc
fwait
data16
daa
xor
mov
pop
jp
push
ret
add
xchg
hlt
arpl
sbb
popf
les
sbb
jbe
rcl
push
dec
inc
push
fnsave
jmp
popf
mov
aad
retf
sbb
mov
sahf
mov
xor
aad
xchg
shl
mov
push
hlt
aad
push
pop
and
push
cwde
call
xchg
rol
(bad)
jp
cmp
push
mov
cmp
pop
adc
leave
mov
adc
sub
clc
cmp
jo
mov
mov
sub
imul
iret
inc
hlt
adc
es
pop
pop
mov
push
pop
adc
fnsave
cmp
inc
xor
xor
les
stos
pushf
xchg
mov
mov
sbb
and
adc
stos
jl
call
cmp
mov
push
stc
cdq
adc
dec
jae
mov
cli
icebp
inc
pop
fidivr
mov
mov
push
aaa
pop
fldcw
mov
pop
ror
add
sbb
sbb
pop
xchg
cwde
je
push
sbb
inc
dec
xor
push
movs
dec
test
retf
test
loope
pop
fadd
inc
cmp
xor
int
cmps
jg
sbb
xor
daa
adc
push
sub
movs
inc
adc
xchg
fbld
mov
dec
not
sub
ss
repnz
mov
push
lock
xor
loope
adc
(bad)
dec
mov
cld
fist
mov
out
pop
cmp
sbb
mov
or
inc
dec
cmp
mov
jge
mov
retf
mov
shr
mov
test
mov
lahf
xchg
sub
pop
call
loop
mov
xchg
mov
loop
out
mov
rcl
or
int
cmp
shl
push
adc
cmp
push
fnstenv
(bad)
jbe
push
inc
enter
mov
xor
cmp
mov
xchg
jmp
inc
cdq
lods
dec
dec
mov
sbb
arpl
adc
xchg
adc
(bad)
pop
mov
dec
xchg
jb
test
cmp
push
push
cmp
or
adc
dec
rcr
pushf
shr
mov
jno
add
lds
cld
jnp
cmp
xchg
adc
mov
dec
stc
xor
adc
dec
or
sbb
cmp
push
add
dec
outs
jnp
mov
jl
inc
and
dec
sbb
popf
mov
mov
jns
mov
inc
add
adc
dec
retf
call
xor
jns
fwait
xor
jge
loop
sbb
dec
ror
mov
mov
xchg
mov
pop
dec
sub
repz
out
dec
ds
lock
pop
jbe
push
xchg
push
ret
mov
push
xchg
inc
fcomp
mov
dec
outs
rol
pop
mov
mov
pop
fcos
mov
sub
sub
mov
dec
xchg
inc
call
inc
xchg
fs
out
xchg
xor
pop
movs
xchg
xchg
add
cmc
push
dec
in
lds
cmp
dec
out
(bad)
lea
jl
sub
mov
idiv
mov
push
std
int
dec
push
ja
pop
out
mov
xlat
clc
xor
mov
hlt
adc
in
rol
adc
inc
dec
in
inc
call
dec
gs
xor
mov
xchg
arpl
mov
sub
mov
sbb
mov
ds
ror
dec
adc
jp
or
add
call
push
mov
shl
out
xor
fdivr
jae
rol
adc
push
and
popf
mov
xchg
and
sahf
jns
sbb
and
ficom
jge
fcom
pop
mov
dec
mov
adc
add
fcmovbe
xor
add
sbb
call
mov
sbb
mul
inc
inc
adc
rcr
lahf
and
mov
xor
xchg
retf
xchg
hlt
lahf
xchg
xor
xchg
fdivr
fmul
mov
mov
and
stc
shr
or
cmp
mov
mov
jg
mov
xchg
pop
inc
cwde
loope
and
and
mov
pop
sbb
mov
add
inc
adc
mov
pop
jnp
inc
pop
fistp
push
push
sbb
(bad)
dec
sahf
mov
pop
fnsave
mov
sbb
push
(bad)
push
push
pop
or
pop
dec
xchg
inc
into
test
sbb
aad
or
mov
pop
jmp
pushf
jnp
dec
jmp
ret
jo
int
cmc
inc
je
pop
lods
mov
mov
inc
dec
jo
mov
das
std
scas
mov
cmc
dec
xchg
aaa
test
pop
dec
cmp
adc
or
adc
mov
imul
mov
jg
icebp
xlat
mov
aaa
cmp
test
dec
lahf
mov
popf
je
sbb
pop
aam
cmp
push
pop
push
test
popf
mov
rcr
push
movs
jb
int
push
pop
mov
cmp
aas
inc
adc
out
push
(bad)
push
jp
xlat
mov
in
mov
repnz
xchg
adc
push
and
call
jnp
mov
ret
adc
mov
mov
leave
call
mov
push
adc
call
xchg
imul
jp
pop
or
sbb
call
sub
sbb
mov
pop
sub
xchg
sbb
and
xacquire
or
jle
mov
mov
mov
data16
push
jle
mov
pop
dec
ficomp
or
or
lock
cmp
ret
jp
jnp
mov
mov
imul
mov
inc
call
jbe
xchg
or
xchg
cmp
cmp
ins
adc
mov
add
fldcw
int3
mov
frstor
adc
aas
inc
fidivr
call
dec
sub
mov
sahf
mov
pop
push
xor
cmp
mov
inc
xchg
or
call
mov
mov
xchg
aaa
mov
cmp
pushf
add
xchg
mov
jbe
data16
fldcw
or
aad
jb
mov
mov
mov
pop
dec
stos
repnz
sub
xor
dec
jb
xchg
fcmovnu
xor
mov
pusha
scas
jl
cmp
je
cmps
stc
fmul
jle
xor
icebp
loope
push
sbb
ds
and
iret
mov
xchg
fwait
jg
fnstsw
mov
push
sub
pop
mov
pop
inc
lods
mov
sti
cmp
mov
push
ds
shl
adc
rcr
inc
adc
fsubrp
and
test
xchg
aad
cmps
pop
mov
mov
test
or
fiadd
pop
jmp
pop
pop
cmp
add
xor
cmp
fild
xor
rcl
dec
adc
mov
shl
loop
call
xchg
xchg
shl
pushf
mov
les
pop
pop
xor
repnz
dec
push
out
dec
scas
add
dec
loop
outs
stos
imul
lahf
adc
sbb
push
push
pop
xchg
retf
jg
xor
cmp
rol
jnp
mov
adc
sub
add
add
sbb
or
mov
push
imul
adc
mov
dec
icebp
std
ja
sbb
or
faddp
lahf
jno
popf
xchg
adc
icebp
pop
xor
jmp
pop
nop
mov
ret
cwde
enter
mov
cdq
pop
je
imul
mov
leave
and
es
xchg
xchg
adc
mov
cmps
inc
sahf
push
xchg
sbb
adc
xchg
cmc
mov
int
pop
xchg
out
add
call
or
pop
nop
cli
jbe
(bad)
imul
pop
retf
mov
les
dec
jg
or
sbb
jae
adc
mov
ror
mov
jp
mov
jae
sbb
pop
test
(bad)
shl
inc
xchg
jno
fild
xchg
push
jo
neg
ss
add
nop
inc
fmul
aam
data16
sti
mov
outs
push
ds
mov
loopne
mov
inc
pop
cmp
addr16
pushf
mov
pop
test
dec
aad
div
mov
adc
hlt
sti
loop
mov
loop
js
sub
ss
nop
mov
rcl
inc
push
dec
mov
inc
pop
or
retf
and
call
dec
mov
div
call
sar
or
xchg
jbe
mov
jbe
jp
leave
xor
pop
js
jnp
or
sbb
inc
push
sbb
jmp
rcr
xchg
xchg
add
push
mov
cmps
adc
pop
out
mov
and
xor
xlat
add
dec
cwde
nop
pop
dec
and
sub
scas
jge
mov
nop
mov
jb
inc
inc
mov
add
xchg
push
dec
fwait
sub
sub
sbb
fisub
adc
dec
adc
clc
add
ret
jg
arpl
cs
fstp
push
fcmovu
daa
pop
stos
jge
es
pop
xchg
or
inc
aaa
push
adc
xchg
mov
pop
stc
test
mov
dec
mov
xchg
ficom
dec
cmp
stos
ficom
cmp
cmc
lock
stos
push
xchg
inc
pop
sbb
outs
push
xchg
inc
arpl
mov
popf
repnz
dec
push
call
clc
add
imul
dec
xor
mov
cwde
inc
fxch
cmps
push
mov
xchg
repnz
aas
mov
sub
stos
sbb
adc
pop
pop
jge
shl
neg
cmc
or
dec
mov
pop
enter
xchg
pop
inc
mov
rcr
pop
je
popf
adc
push
push
mov
mov
mov
mov
rcl
push
loopne
inc
mov
sahf
lods
jae
push
xchg
mov
xchg
sub
ficomp
add
cmc
add
pop
inc
sub
add
xchg
icebp
js
mov
dec
inc
fidivr
mov
std
(bad)
push
mov
adc
mov
stos
ds
jb
lahf
lahf
sbb
mov
popf
xchg
push
aaa
and
pop
ret
jge
mov
adc
js
mov
lahf
add
dec
adc
dec
ds
sbb
lea
outs
retf
fisubr
dec
out
retf
mov
outs
add
pushf
ror
cs
adc
jns
lahf
adc
pop
lea
fist
mov
icebp
not
cli
dec
jnp
repz
jge
test
adc
mov
lea
inc
retf
pop
or
call
mov
jbe
fistp
sbb
xchg
xchg
aaa
adc
je
ja
pop
jle
xchg
pop
adc
xchg
sahf
pusha
fimul
and
pop
mov
sahf
push
fmul
cmp
xlat
mov
adc
mov
inc
cmp
xchg
add
dec
aad
mov
add
xor
xchg
xchg
inc
jp
adc
iret
popf
imul
mov
adc
jle
in
xor
dec
stos
and
pop
sar
cld
add
xchg
outs
pop
leave
mov
xchg
pop
adc
shl
enter
sahf
call
into
xchg
pop
lods
mov
pop
fnsave
iret
gs
xchg
push
mov
xchg
mov
adc
sbb
lea
ins
cmp
adc
cmps
push
in
cmp
lods
pop
xchg
mov
cwde
retf
icebp
jnp
pop
mov
stos
lock
mov
dec
pop
jae
xlat
retf
mov
adc
jb
pop
add
(bad)
push
jbe
retf
push
jae
sbb
test
cdq
icebp
mov
sbb
pop
pop
pop
mov
fucomp
nop
xchg
cdq
xchg
lock
push
hlt
xor
sbb
mov
dec
loopne
call
sbb
xlat
loop
mov
mov
adc
push
ficom
mov
fisttp
fldenv
mov
lahf
mov
mov
push
fisttp
cs
adc
sbb
in
stc
pop
bound
jp
popf
mov
sbb
stc
mov
pop
aas
clc
or
mov
in
cmps
ds
iret
add
fstp
clc
scas
push
inc
(bad)
and
test
call
hlt
dec
das
aam
jbe
adc
push
sti
inc
call
sub
add
adc
push
mov
call
dec
sbb
stc
inc
adc
fimul
sub
inc
call
fidiv
mov
mov
mov
mov
adc
jle
and
popf
sbb
mov
lahf
inc
xlat
dec
not
ret
enter
mov
pop
sbb
fidiv
fisttp
(bad)
or
pop
push
dec
mov
inc
sub
call
retf
sub
xchg
or
test
lods
jo
div
push
jno
jg
fld
mov
mov
push
adc
cmp
jmp
hlt
cli
popf
or
out
xor
cdq
imul
cwde
adc
es
xchg
test
pop
stos
retf
inc
iret
or
pop
dec
scas
adc
cmp
pop
repz
push
dec
jnp
pop
lods
mov
adc
out
adc
pop
fdivr
int
arpl
mov
mov
pop
js
mov
cmp
or
imul
nop
ds
xchg
sub
nop
fcom
fldenv
neg
fsubr
cmp
or
call
jp
out
inc
(bad)
xchg
pop
xlat
push
iret
aad
xchg
sub
inc
mov
(bad)
pop
pop
shl
mov
xchg
fld
jo
add
adc
adc
jns
(bad)
sbb
mov
frstor
xor
sbb
mov
call
mov
inc
jp
dec
cwde
push
loop
repnz
inc
pop
ror
add
ja
pop
adc
loope
aad
call
dec
or
dec
dec
sbb
ja
or
sbb
shr
int3
dec
dec
nop
pop
pop
or
jle
dec
cmp
pop
les
ret
dec
or
add
xor
mov
xchg
ins
jo
inc
dec
fimul
pop
or
scas
jbe
xchg
scas
dec
jbe
dec
push
or
push
scas
pop
mov
dec
scas
adc
std
mov
ret
jbe
addr16
sub
sbb
es
stos
movs
push
pop
sbb
retf
aas
jns
dec
fldcw
mov
inc
or
call
or
push
js
dec
arpl
daa
mov
inc
dec
adc
aaa
cmp
imul
adc
add
leave
xchg
stc
jl
dec
cmp
sub
sub
inc
inc
xchg
out
es
sahf
pop
test
fst
fisttp
dec
ins
xchg
sbb
mov
adc
xor
lahf
mov
sbb
stos
loopne
(bad)
mov
out
nop
mov
jp
sub
mov
mov
xchg
pop
ja
rcl
enter
enter
std
mov
cli
sbb
or
fimul
std
sub
mov
fidiv
inc
fstp
cmp
or
std
dec
mov
fisttp
sbb
mov
mov
push
dec
adc
fistp
mov
pushf
fstp
repz
push
mov
mov
or
xchg
fcomp
push
call
dec
xchg
xlat
push
fld
arpl
push
cmp
(bad)
xor
or
inc
ja
pop
sti
jl
add
cmp
pop
popf
mov
xchg
cmp
sbb
ficom
xchg
pop
mov
xor
addr16
mov
dec
push
iret
pop
ficom
out
mov
test
jmp
or
hlt
cmp
lea
add
fisub
lock
retf
dec
or
pop
test
cld
je
leave
adc
movs
push
xchg
and
daa
pop
dec
cwde
pop
fidivr
retf
dec
mov
mov
mov
ins
mov
cdq
inc
stc
inc
popf
cmp
nop
bound
fwait
jae
cwde
outs
sub
iret
pop
sub
rol
pop
loope
call
mov
cmp
ins
push
and
pop
mov
add
adc
loop
mov
in
and
rcr
pop
adc
retf
mov
cmc
push
sub
jp
mov
cdq
dec
sbb
jb
pop
mov
mov
arpl
lock
cwde
pop
xchg
fsub
sub
scas
mov
push
test
clc
or
cmp
push
lods
jmp
arpl
cmp
or
ret
std
call
xchg
out
sbb
adc
mov
mov
adc
cmp
xchg
popa
mov
inc
jg
sub
mov
sahf
rcl
fiadd
xor
push
lahf
call
loopne
cmp
dec
cmp
pop
xchg
xor
sahf
sahf
push
or
jp
dec
stc
dec
cmp
retf
inc
dec
or
pop
mov
cmp
fistp
sti
cmp
xor
push
retf
sahf
dec
call
cmp
pop
mov
inc
mov
mov
mov
adc
outs
mov
pop
popf
enter
jl
push
jle
inc
call
or
call
sub
dec
sbb
idiv
dec
jbe
jmp
dec
int
test
pop
mov
ja
xchg
xchg
mov
mov
push
sbb
lahf
sbb
adc
imul
mov
jp
xlat
cmp
iret
cwde
jp
cmp
movs
repnz
hlt
xor
(bad)
mov
call
and
jmp
cld
jbe
out
or
xor
mov
xor
mov
jno
pop
pop
inc
popa
je
lock
div
je
fisub
ret
rcl
cmp
mov
stc
call
clc
and
popf
dec
sahf
mov
sub
lea
mov
or
dec
dec
cld
cmp
push
dec
sbb
popf
(bad)
mov
mov
scas
cmp
retfw
popf
pushf
dec
xor
ins
mov
fidivr
xchg
mov
xchg
scas
adc
pusha
inc
mov
cs
xchg
cmp
call
push
fisubr
and
mov
mov
rol
shr
jle
jp
jge
sbb
enter
call
push
cdq
or
neg
sub
dec
mov
dec
stos
loop
pop
dec
mov
cmp
jns
maxps
add
mov
xchg
mov
lods
inc
je
adc
js
retf
loop
jp
xchg
scas
pushf
xor
aaa
mov
sbb
pop
std
call
aad
int3
dec
mov
xchg
or
pop
adc
push
data16
dec
mov
adc
and
call
push
sbb
(bad)
mov
push
sbb
test
sbb
lahf
sbb
repz
sub
cwde
jae
xor
pop
cld
rcl
(bad)
in
sub
and
mov
dec
cmc
dec
jge
or
pop
bound
mov
jle
pop
cmp
ficomp
cdq
sahf
xor
add
dec
push
add
sbb
test
ror
cmp
daa
inc
dec
inc
bound
dec
imul
mov
mov
retf
xchg
pop
or
mov
or
cmc
mov
je
imul
push
ja
sub
cmp
adc
and
mov
rol
dec
(bad)
dec
sbb
sbb
out
ret
xor
mov
fild
xlat
aam
cld
mov
(bad)
pop
jmp
mov
push
jnp
push
jge
pop
xlat
xor
div
adc
imul
fdiv
loopne
mov
stc
retf
mov
or
lea
int
cmp
pop
pop
xor
push
mov
mov
mov
nop
jae
int3
not
imul
ffree
sahf
dec
mov
jle
mov
cmp
cmp
stos
fwait
in
mov
or
mov
cmp
xchg
pop
mov
(bad)
ror
jbe
xchg
pop
loope
xor
xchg
jae
clc
sti
mov
jne
adc
xchg
adc
jg
scas
(bad)
mov
dec
pop
or
or
cmp
sbb
mov
fidiv
adc
inc
clc
stos
adc
out
test
ins
retf
je
push
cmp
retf
(bad)
clc
inc
xchg
cmp
push
and
mov
jbe
mov
aad
int
test
retf
mov
sets
adc
xchg
pop
or
test
repz
inc
sub
test
sahf
fmul
xchg
nop
dec
push
sbb
mov
js
or
xchg
add
in
xor
push
out
loop
pusha
cdq
xchg
dec
mov
adc
push
sbb
mov
stos
xchg
mov
and
(bad)
scas
mov
dec
lahf
scas
xor
lahf
mov
inc
nop
xor
mov
pop
push
cwde
sahf
cwde
mov
push
jge
push
dec
mov
sti
dec
xor
adc
cmp
dec
aaa
sar
sbb
fcomp
push
(bad)
scas
pop
loope
ss
pop
dec
xchg
aad
daa
or
inc
jbe
and
(bad)
mov
xlat
mov
xchg
pop
arpl
cmp
sub
xchg
rol
cmp
icebp
mov
dec
mov
out
xchg
inc
outs
retf
fld
rcl
cld
fcomp
movs
inc
xchg
push
push
sbb
js
xor
jl
dec
dec
adc
mov
retf
xchg
imul
jl
retf
xchg
cli
dec
call
sbb
mov
xor
cld
jp
pop
add
pop
or
mov
jecxz
add
push
clc
mov
cmp
push
jo
mov
test
lahf
xor
fisttp
jno
xor
stos
push
das
jmp
dec
shr
pop
fisub
(bad)
hlt
retf
fnstcw
bound
mov
(bad)
pop
mov
cdq
jge
add
sub
fsubp
mov
call
sbb
retf
cwde
inc
jl
rcr
jmp
call
mov
mov
(bad)
jg
inc
push
inc
xor
mov
mov
jecxz
cwde
jae
loopne
sbb
sub
jg
push
dec
mov
pop
inc
sbb
xor
jno
sbb
inc
jae
dec
(bad)
mov
push
or
add
mov
mov
pop
test
mov
pop
imul
fisttp
sahf
aas
out
push
xchg
jmp
stos
test
popf
push
xchg
nop
pop
mov
lock
mov
xchg
jp
mov
rcl
fiadd
mov
cmp
adc
cmp
cmp
xor
inc
mov
mov
dec
rol
add
out
not
mov
sub
push
aaa
div
and
sbb
mov
aad
jbe
dec
cdq
dec
cmp
inc
je
mov
push
call
xor
jp
pop
js
into
sub
push
add
sar
ret
xor
ss
sti
xchg
pop
push
std
mov
inc
sbb
adc
xor
sar
mov
(bad)
(bad)
call
inc
fimul
cmc
jmp
ror
dec
mov
cmp
mov
mov
aaa
xor
mov
je
mov
daa
sbb
mov
pop
cli
adc
not
cmp
sub
jle
push
dec
shr
pushw
pop
mov
xor
push
ret
pop
push
lds
add
or
mov
jb
pop
jp
sbb
enter
mov
call
mov
pop
mov
jo
add
dec
xchg
sti
jmp
adc
inc
xchg
and
out
lock
mov
stc
and
jne
cmp
mov
xchg
push
jno
mov
les
or
cdq
sub
test
fisttp
sbb
mov
mov
xor
loop
mov
inc
push
inc
cmc
inc
cmp
xchg
cmc
mov
and
adc
add
xchg
sbb
adc
mov
fdivr
lods
dec
xchg
jb
lahf
jae
xor
xor
mov
jo
mov
cmp
ficomp
inc
sbb
call
daa
(bad)
mov
pop
xchg
inc
mov
ja
jno
sbb
mov
arpl
jbe
sub
push
popa
dec
mov
mov
sub
inc
push
or
sub
adc
idiv
adc
cs
xlat
mov
mov
xor
adc
addr16
and
retf
sbb
xor
xchg
or
retf
push
sbb
mov
gs
rol
xchg
pop
imul
mov
mov
ins
mov
aad
or
pop
xlat
dec
imul
(bad)
scas
dec
dec
lahf
fcom
repnz
pop
push
mov
cmp
aaa
or
retf
xor
mov
fst
fiadd
pop
dec
dec
rcl
fimul
je
inc
lock
jno
scas
mov
(bad)
cmc
ds
mov
push
xchg
ja
fiadd
cmp
push
arpl
add
xor
pop
mov
push
imul
cs
cwde
cmc
mov
in
push
loopne
jmp
or
enter
or
cmp
jnp
adc
pop
outs
jae
scas
inc
xor
mov
mov
cmp
fisubr
cmps
fistp
repnz
adc
mov
adc
ins
inc
mov
push
loop
jae
adc
inc
scas
xor
lahf
shr
mov
jmp
fld
js
mov
sbb
mov
test
mov
sub
cmc
sahf
jnp
sbb
test
mov
fs
push
fld
(bad)
mov
loop
mov
pop
jle
dec
call
inc
clc
mov
cmp
push
mov
mov
sar
call
imul
xchg
push
aas
dec
mov
inc
pop
test
and
pop
arpl
inc
pop
fwait
sbb
fucom
push
icebp
shl
adc
push
xchg
mov
popa
mov
add
jle
push
cmp
adc
push
rcr
dec
aaa
in
push
cmp
xor
fcom
adc
ja
mov
xchg
cs
xchg
sar
inc
adc
push
rcr
call
jl
push
mov
dec
dec
mov
retf
pop
repnz
retf
mov
or
std
sbb
xor
hlt
into
xchg
out
xor
jge
dec
fsub
mov
in
mov
inc
rcl
add
mov
clc
dec
push
pop
sub
cmps
xchg
jg
ins
mov
call
pop
xor
leave
enter
xchg
push
push
int
inc
(bad)
sub
bound
sub
call
mov
xlat
xchg
jle
pop
push
rcl
inc
cli
inc
repnz
mov
inc
push
mov
adc
fucom
inc
pop
and
ret
rcr
popf
cdq
cwde
pop
scas
cmc
mov
mov
pop
hlt
rcr
adc
mov
xchg
sbb
iret
inc
shl
sahf
nop
xlat
add
mov
cmc
stos
es
or
aad
cmps
pushf
mov
jmp
adc
push
pop
dec
xor
mov
jns
xchg
pop
adc
push
or
add
sbb
mov
xchg
inc
out
xor
add
mov
or
xchg
jno
inc
repnz
mov
je
xchg
mov
sbb
ins
mov
jp
fistp
hlt
out
dec
mov
xchg
cmps
rcl
xchg
loopne
cmp
mov
movnti
xchg
jae
push
sub
adc
mov
lock
xchg
call
push
adc
test
stos
push
cmp
jge
jmp
add
xor
dec
aad
xchg
push
nop
mov
cld
xor
stc
inc
mov
xor
sbb
adc
fldcw
xor
cld
xchg
push
jo
and
inc
retf
ins
jb
mov
push
stc
mov
inc
sbb
mov
mov
sub
addr16
xlat
xchg
mov
xor
jnp
mov
sbb
cmp
mov
jmp
jg
fcomp
stos
pop
sub
mov
iret
jae
xor
aas
cdq
ins
dec
pop
std
cmp
xor
dec
add
fwait
inc
mov
mov
rcr
pop
arpl
pop
lods
repz
scas
dec
adc
sbb
fcom
push
(bad)
inc
not
mov
adc
ja
dec
stc
xchg
cwde
div
inc
xor
fisubr
stc
inc
sbb
ficomp
sysret
push
push
sahf
push
adc
push
jmp
add
mov
adc
mov
pop
dec
mov
sbb
xor
inc
pop
mov
add
adc
pop
xchg
mov
sbb
jge
sbb
(bad)
inc
and
push
aad
inc
(bad)
pop
pop
neg
inc
mov
mov
out
ficom
push
sbb
ja
push
enter
adc
cmp
ds
stos
or
stc
inc
std
loope
mov
pop
imul
sub
mov
out
push
mov
fcomip
loope
adc
stos
ds
sar
std
dec
shr
push
stc
mov
cli
inc
add
dec
or
sbb
jl
dec
push
imul
adc
xchg
adc
inc
repz
es
dec
fild
push
xchg
adc
adc
dec
sbb
(bad)
fdivr
enter
adc
adc
ss
test
mov
into
hlt
pop
mov
inc
aam
mov
xchg
inc
xor
mov
call
push
pop
scas
push
fcom
push
inc
dec
rcl
pushf
daa
lock
jmp
cmp
push
call
mov
neg
mov
inc
push
imul
jb
lahf
dec
push
mov
push
push
push
xor
sbb
cld
arpl
pop
xchg
pop
jb
inc
jo
stos
stos
movs
sbb
sbb
push
(bad)
dec
jl
mov
push
out
adc
inc
jge
scas
jno
mov
loopne
js
jnp
jge
stc
retf
shl
pop
xchg
sbb
repnz
xchg
pop
dec
xor
pop
inc
xor
ror
inc
add
jge
ins
pop
mov
sbb
mov
cmp
pop
aas
inc
sbb
xchg
jle
xchg
push
jp
pop
jae
icebp
jp
pop
cmp
push
out
stc
lds
cmp
sbb
dec
mov
sub
outs
sahf
(bad)
out
stos
jle
mov
cmp
push
loope
(bad)
ins
jae
cmp
cmp
retf
out
sbb
mov
inc
xchg
push
dec
mov
adc
cmp
push
jno
push
loopne
ss
call
cld
sbb
dec
loopne
xor
fwait
cmp
push
or
cmp
inc
mov
les
fwait
rcr
lock
(bad)
fnstsw
in
cmp
fist
add
push
mov
inc
mov
(bad)
or
or
xor
repz
rcl
xor
sub
mov
out
call
dec
or
push
cmp
retf
rcr
mov
(bad)
scas
push
sbb
dec
imul
xchg
and
test
xchg
not
jp
fld
dec
aaa
ror
mov
ja
test
cmp
nop
cdq
and
xchg
dec
mov
lahf
add
shr
inc
xchg
mov
arpl
sbb
jno
test
pop
and
cwde
adc
xor
pop
and
mov
push
adc
cmp
adc
mov
sbb
cmp
pushf
sahf
sbb
adc
ss
fimul
pop
xor
fcom
inc
mov
(bad)
lock
sti
(bad)
mov
stos
mov
cld
mov
add
ficom
xor
(bad)
and
xchg
pop
mov
pop
dec
test
clc
retf
add
ins
ret
pop
mov
xor
dec
mov
nop
imul
stos
push
mov
sahf
lds
or
jp
xchg
mov
clc
(bad)
out
inc
lock
push
xchg
pop
mov
call
rcr
fimul
sbb
or
or
sti
cmps
fidivr
fdivr
pop
fild
fild
mov
lahf
dec
jns
arpl
div
sbb
xor
cwde
push
add
sahf
aad
dec
pop
lahf
xor
adc
mov
out
dec
add
or
nop
jne
std
dec
popf
dec
xchg
inc
test
sub
das
mov
ficom
mov
cmp
in
dec
jl
add
cs
cmp
xchg
fcomp
mov
jns
pop
mov
ret
sti
(bad)
pop
mov
inc
dec
fimul
and
in
stc
xor
retf
cmps
push
call
mov
mov
mov
pushf
ds
ins
or
xchg
jno
ficomp
push
mov
test
ds
das
shr
cmp
lock
adc
popf
sbb
push
dec
mov
cdq
ror
mov
mov
jae
pop
push
dec
adc
stos
mov
mov
gs
ja
shr
push
les
mov
dec
add
retf
loope
adc
mov
and
mov
pop
or
nop
int3
aaa
dec
sbb
xchg
xchg
or
mov
dec
xor
cmp
pushf
out
push
pushf
adc
or
repnz
cwde
fild
hlt
scas
jnp
push
add
(bad)
icebp
aas
loop
pop
jnp
push
fsubr
push
push
xor
cmp
cmp
mov
call
loopne
jge
mov
sbb
cwde
mov
jp
lock
cmc
push
push
jle
sbb
cmp
mov
or
xchg
aam
pushf
retf
int3
sar
jae
pop
sbb
cmps
mov
das
or
call
or
inc
idiv
pop
out
add
add
cmps
mov
dec
mov
dec
fstp
and
mov
sbb
pop
call
mov
inc
ja
or
mov
pop
dec
in
mov
inc
mov
pop
mov
aam
mov
push
push
in
push
and
lods
shl
rcr
push
sub
ja
and
nop
dec
(bad)
mov
(bad)
pop
(bad)
jg
aas
retf
dec
lock
call
mov
adc
xor
(bad)
cli
jmp
push
cmp
mov
cmp
cmp
push
inc
call
add
ins
pop
inc
sub
sbb
retf
rcr
and
pop
cmp
bound
push
adc
rcr
arpl
imul
add
jle
stc
pop
mov
pop
and
dec
jb
adc
sbb
add
ins
inc
sbb
cmps
pushf
sbb
push
sub
stc
push
push
outs
mov
adc
jmp
lds
jnp
mov
retf
fist
or
or
in
mov
idiv
packuswb
cwde
sub
dec
mov
fbld
sbb
adc
lahf
dec
cmp
xchg
fdiv
xlat
hlt
aas
sub
pushf
iretw
dec
(bad)
outs
dec
jle
dec
adc
xchg
fiadd
jp
pop
retf
adc
fiadd
outs
(bad)
dec
aas
jmp
sbb
addr16
xlat
or
and
mov
adc
xchg
dec
imul
jmp
imul
stos
pop
jns
sub
fcmovnbe
cli
push
mov
mov
iret
adc
jl
adc
ja
cld
test
xchg
mov
scas
dec
popf
aad
ds
int
mov
jbe
lea
mov
xchg
sbb
icebp
cmps
pop
pop
push
bswap
pushf
inc
jns
dec
mov
fmul
push
jne
cwde
cmp
lea
mov
dec
dec
loope
fcom
stos
pushf
push
mov
dec
dec
or
push
(bad)
dec
adc
sub
call
and
xchg
push
mov
mov
call
pop
cmovg
or
pop
repz
pop
dec
fdiv
fstp
adc
cmp
sbb
cmp
lea
cs
popf
jmp
mov
fimul
dec
mov
out
pop
dec
cmp
jno
cli
fiadd
pop
inc
mov
dec
pushf
mov
pop
sti
xor
neg
pop
mov
jl
jl
hlt
data16
dec
xor
adc
jae
lock
dec
mov
jbe
ins
dec
inc
pop
into
jp
cs
sbb
pop
retf
or
adc
adc
retf
leave
jp
clc
dec
xchg
js
mov
or
aam
mov
dec
pushf
sub
aaa
ins
mov
jl
dec
aad
xchg
cwde
shr
push
retf
int
jae
in
jp
xchg
daa
jp
fsub
pop
test
in
mov
arpl
imul
nop
pop
inc
cmp
xchg
call
outs
mov
cwde
stc
xor
adc
aad
adc
scas
or
repnz
or
push
adc
rcr
ror
nop
pop
test
add
jae
jl
mov
mov
in
mov
fwait
jmp
push
dec
push
cmp
pushf
rcr
push
pop
sub
lods
pop
pop
(bad)
imul
xchg
xchg
into
cmps
fucomi
push
pop
hlt
adc
inc
and
inc
jo
pop
in
call
pop
dec
int
dec
cmc
leave
inc
(bad)
pushf
popa
sbb
sbb
pushf
fucomip
add
cmp
mov
sub
or
xchg
cmc
cmp
aas
adc
dec
push
pop
jb
jmp
mov
jmp
or
into
lea
inc
adc
dec
sbb
out
stos
jnp
pop
fst
and
in
xchg
arpl
mov
mov
pop
add
dec
ss
jle
jbe
call
mov
popa
test
mov
(bad)
cmps
sbb
retf
jns
retf
jp
jl
mov
pop
dec
sbb
pop
mov
pop
sar
fwait
aas
pop
jnp
dec
pushf
stos
inc
mov
mov
pop
dec
add
pop
sub
xchg
inc
out
dec
jg
pop
jae
adc
inc
jl
leave
pop
into
mov
adc
jle
js
push
dec
fcomp
mov
sbb
sti
shl
dec
inc
sbb
cmp
dec
or
mov
inc
js
jae
gs
dec
cmp
dec
jae
imul
adc
cmp
jl
ja
mov
int
ret
push
int3
stc
inc
cmp
mov
fsubr
in
test
loopne
lock
ss
dec
lea
push
(bad)
jno
pop
adc
unpcklps
into
inc
mov
jmp
dec
dec
sub
rcr
adc
jnp
pop
inc
(bad)
fisttp
cmp
aaa
dec
stos
aad
mov
push
pop
add
aas
xchg
retf
jmp
mov
dec
dec
dec
pushf
push
retf
xchg
xor
lahf
mov
mov
add
jae
pop
mov
das
retf
dec
sbb
aas
sbb
fld
dec
jae
fiadd
(bad)
popf
adc
ror
sub
pop
inc
int3
xchg
not
mov
or
sbb
mov
or
sbb
clc
ret
dec
mov
(bad)
fucomi
jmp
mov
dec
adc
mov
sbb
dec
les
add
adc
nop
stc
xchg
ds
inc
dec
pop
inc
(bad)
cld
dec
das
pop
push
mov
call
inc
dec
xor
jne
mov
idiv
lahf
retf
pop
das
xor
push
mov
ficomp
mov
test
dec
cli
repz
mov
cmp
dec
lock
dec
add
mov
push
mov
pop
inc
jnp
(bad)
mov
lahf
call
dec
adc
xchg
popf
inc
nop
pop
dec
aad
cmps
mov
clc
retf
scas
test
dec
pop
dec
xchg
fimul
cmp
dec
fiadd
pop
dec
frstor
push
xor
jb
sbb
pop
adc
push
aad
inc
sbb
inc
fwait
mov
call
dec
arpl
dec
or
and
jns
stc
call
push
sbb
xor
mov
xchg
sbb
mov
jl
jl
ins
dec
dec
push
jae
mov
fcomi
xchg
adc
loopne
mov
xchg
sbb
sbb
add
inc
sahf
inc
scas
dec
jle
dec
(bad)
popf
ror
jb
test
sti
dec
fnclex
cwde
ds
dec
sub
adc
mov
arpl
cdq
dec
test
shl
fst
sbb
shl
xchg
sbb
or
ss
mov
cmp
jne
jae
push
mov
pop
add
imul
mov
mov
lock
mov
xor
pop
(bad)
push
mov
pop
cmp
mov
dec
mov
xchg
sahf
xchg
cwde
aaa
test
jns
dec
cmp
pop
call
dec
ret
sbb
imul
xor
sub
or
mov
ins
shr
xchg
mov
inc
sahf
xor
iret
fld
retf
xchg
pushf
loop
add
dec
or
mov
dec
nop
xor
sbb
retf
inc
fidivr
imul
jle
mov
cmp
outs
mov
jno
in
ror
xchg
jo
push
push
xor
add
repz
fstp
(bad)
ret
adc
pop
cmp
sub
sub
rcl
xchg
cmp
fucomi
retf
fimul
test
retf
ja
jae
cmps
mov
jp
das
(bad)
aaa
jnp
push
pop
add
enter
xor
push
inc
dec
pusha
lds
xchg
out
sbb
mov
pop
int3
push
leave
pop
fisttp
xchg
ins
dec
sbb
lods
mov
mov
and
mov
push
ror
dec
mov
cmp
sub
ficomp
stc
rcr
sbb
das
sbb
mov
dec
jp
or
stos
sub
ja
test
xchg
shr
push
push
pop
add
mov
mov
push
adc
mov
push
int
fcmovbe
aaa
fistp
jnp
pop
pushf
lahf
retf
pop
call
sbb
test
test
mov
xchg
jl
(bad)
and
nop
rcl
pop
sub
cmp
loop
hlt
mov
imul
ins
inc
dec
pop
sahf
lahf
or
mov
dec
xor
sbb
or
dec
or
fidivr
mov
xor
fmul
xchg
and
iret
xor
jo
sahf
xor
jmp
xchg
jecxz
add
les
jno
mov
ins
inc
shr
retf
fisubr
mov
sub
xor
cs
xchg
xchg
cdq
sub
mov
stc
inc
js
mov
mov
sub
enter
pushf
nop
or
mov
xor
cmp
cld
pop
hlt
push
cmp
lahf
imul
mov
pop
sub
lea
push
jbe
retf
dec
mov
movs
ror
cmp
xchg
dec
cs
mov
fsubrp
push
xor
mov
cmp
out
jmp
iret
jae
or
sub
call
xchg
std
mov
xchg
call
rcr
dec
ror
mov
mov
mov
(bad)
fimul
sbb
fsubr
and
mov
nop
push
pop
mov
mov
cmp
rol
retf
push
inc
mov
jmp
ficomp
fld
mov
push
rcr
repnz
inc
(bad)
cmp
cmp
pop
enter
mov
push
fmul
add
aad
aad
out
mov
jnp
push
cwde
pop
add
cmps
mov
repz
cld
sti
sbb
xchg
iret
add
and
inc
push
jo
loopne
push
adc
xlat
arpl
push
xchg
inc
xchg
out
cmp
add
lahf
sbb
adc
xchg
jg
mov
out
sbb
dec
xchg
push
call
scas
mov
mov
ror
dec
jbe
stos
adc
mov
sub
inc
fdivp
into
adc
or
cmp
mov
add
and
push
mov
pop
stc
inc
scas
xchg
xlat
xchg
imul
xor
pusha
inc
mov
jl
mov
push
les
ins
mov
ja
push
mov
jge
lahf
inc
retf
je
mov
xor
(bad)
xchg
mov
cmp
sbb
fild
jne
adc
dec
mov
in
cmp
sbb
sbb
fisttp
retf
jle
sbb
inc
shl
call
pop
xchg
ins
mov
enter
iret
js
inc
push
pop
test
mov
out
push
adc
and
jg
(bad)
js
mov
cmp
dec
or
pop
mov
stos
(bad)
mov
scas
add
add
rcr
inc
fdivp
mov
sub
div
pop
les
cmp
ret
inc
add
sbb
dec
jns
das
dec
push
aad
xchg
mov
stos
xchg
adc
mov
pop
sub
adc
xchg
mov
call
dec
dec
mov
std
add
mov
dec
mov
call
mov
cwde
sub
sbb
stc
push
dec
mov
sub
(bad)
aam
rcr
push
adc
xchg
loope
icebp
js
adc
inc
jae
dec
jne
mov
es
push
out
ds
in
or
dec
jae
mov
pshufw
xor
xlat
std
adc
pop
mov
jg
sbb
inc
dec
push
in
sbb
aad
jae
cwde
std
loope
adc
(bad)
mov
out
xlat
sbb
cmp
adc
add
ds
cwde
mov
xchg
popf
cld
cmps
sbb
lds
push
pop
jecxz
xor
nop
mov
ds
jne
mov
lahf
or
gs
out
pop
ror
addr16
dec
clc
dec
(bad)
ror
sub
jp
xchg
idiv
fsub
jnp
fwait
pop
add
sbb
test
lods
test
rol
push
call
sbb
dec
xchg
cmp
sub
(bad)
pop
data16
dec
sbb
dec
pushf
int3
sbb
ds
dec
mov
xor
jg
mov
inc
sbb
loopne
pop
lods
pop
dec
call
cmp
fwait
int
pop
pop
dec
test
aas
out
scas
lahf
ds
dec
xchg
cmp
jle
add
dec
mov
call
xchg
jp
mov
pop
xchg
and
xchg
mov
and
mov
mov
addr16
js
sti
(bad)
jmp
iret
mov
pop
imul
jo
popa
mov
dec
pop
mov
xor
aas
push
out
cmp
cmp
sti
pop
adc
jnp
push
push
mov
push
xor
jo
lea
mov
(bad)
cmp
dec
mov
dec
mov
loopne
jmp
mov
push
sub
pushf
cmp
cwde
xchg
xchg
sbb
sti
adc
push
cmp
sbb
cmp
or
daa
std
jp
pop
es
push
inc
adc
call
dec
pop
push
scas
xchg
xor
pusha
daa
popf
inc
push
mov
cmps
fisubr
dec
jae
xchg
hlt
outs
dec
stos
push
jbe
outs
push
xchg
adc
cmp
xchg
push
pop
jnp
push
(bad)
(bad)
jo
sbb
cmp
(bad)
add
xchg
imul
call
aaa
mov
push
repz
jno
lock
mov
jp
ds
push
cmp
cmp
sahf
fwait
xchg
faddp
cmp
sahf
bound
aaa
push
mov
push
jg
xchg
jmp
or
jno
dec
jae
mov
or
ins
addr16
movs
xchg
xchg
mov
pop
imul
ins
or
sbb
nop
repz
jg
pop
pushf
mov
aaa
(bad)
jae
cmp
popa
stos
sti
adc
into
loop
sbb
jo
dec
dec
sti
mov
lahf
fld
cmp
adc
push
pop
cmp
cmp
sbb
dec
loopne
repz
fild
aas
dec
pop
adc
inc
xchg
into
cmps
mov
pop
int
mov
fcomp
fisttp
sbb
pop
xchg
jmp
nop
sbb
ror
add
push
adc
add
js
dec
inc
push
mov
repz
cld
cmp
jmp
mov
mov
mov
test
push
je
push
lahf
sbb
xchg
scas
xor
dec
lea
shl
retf
sbb
xchg
or
jl
mov
iret
adc
pushf
cwde
in
lea
jae
push
xor
dec
nop
adc
or
push
xchg
mov
adc
sub
mov
sbb
or
jge
cmp
xor
dec
jnp
sahf
push
xchg
aas
push
jno
xchg
jg
dec
inc
xchg
cmp
push
inc
call
pop
shl
mov
xchg
sbb
out
jbe
dec
in
dec
or
xor
mov
adc
lea
pop
mov
jp
out
push
(bad)
adc
retf
retf
inc
pushf
or
mov
jae
pop
cwde
int3
cmp
mov
push
retf
(bad)
xor
(bad)
push
push
imul
(bad)
ret
dec
(bad)
push
sahf
xchg
out
adc
pop
sub
dec
xor
hlt
popf
idiv
dec
cmps
pop
jns
xchg
es
add
cmp
fidivr
sub
mov
adc
dec
dec
pop
cld
inc
sbb
jmp
pop
ins
or
retf
inc
fnstcw
mov
jmp
xor
retf
adc
xchg
sbb
stos
xchg
xchg
push
sahf
and
jge
mov
mov
add
cmp
arpl
mov
mov
outs
push
sbb
mov
mov
(bad)
push
xor
add
mov
addr16
xchg
jge
xor
arpl
push
push
xor
push
pushf
mov
jmp
mov
sub
dec
dec
sbb
hlt
mov
(bad)
jle
std
dec
push
call
pop
adc
dec
and
(bad)
pop
mov
adc
sysenter
int
loope
sbb
xor
push
pop
dec
push
dec
out
mov
sti
sub
mov
mov
push
cdq
rcr
es
nop
cs
jle
dec
fmul
enter
mov
sbb
lahf
imul
jae
ja
and
add
fisttp
add
fnsave
popa
sub
xchg
adc
fld
xor
int
pop
mov
pop
pop
and
out
retf
mov
call
arpl
pop
leave
sbb
clc
stos
xor
je
adc
retf
push
stos
xchg
fisubr
inc
pop
retf
not
xchg
jp
pop
xchg
push
retf
cwde
sti
push
pop
inc
imul
pop
cmp
jb
mov
cmp
mov
add
popf
push
retf
xchg
pop
loopne
popf
fidivr
mov
sub
popa
mov
mov
sbb
les
push
sahf
sbb
cmp
pop
inc
pop
pop
or
dec
mov
dec
jp
adc
push
and
(bad)
pop
jp
pop
xor
pop
push
rol
mov
xchg
aaa
call
not
xor
cmp
dec
fisubr
jl
call
mov
sub
retf
or
pop
dec
lods
pop
lea
push
mov
dec
sub
(bad)
push
adc
std
or
xchg
fisttp
xor
daa
dec
mov
add
rol
jmp
jp
pop
xchg
sti
retf
nop
pop
pop
jae
pop
cmp
ss
inc
fld
arpl
stos
lock
pop
mov
mov
cmp
add
retf
call
pop
pop
pop
mov
shl
dec
mov
adc
fld
sbb
popf
pop
cmp
cmp
dec
fist
mov
jbe
push
mov
sbb
sbb
push
xchg
dec
dec
mov
jae
adc
push
sub
add
sbb
stos
xchg
push
xchg
jl
sbb
retf
dec
xchg
sbb
pushf
rcl
data16
in
pop
jnp
mov
jbe
dec
dec
int
mov
or
test
push
mov
std
call
push
retf
sbb
cmc
stos
push
jle
sub
xor
cs
js
or
not
push
fstp
inc
mov
inc
stc
jp
leave
dec
sub
mov
mov
out
pop
sbb
sub
or
fild
sbb
push
sbb
cmp
adc
pop
mov
aaa
pop
mov
adc
fisub
inc
xchg
lahf
cmps
call
adc
ins
jae
test
xor
pushf
sbb
dec
ret
jge
cmp
mov
mov
xchg
retf
pop
mov
sbb
jmp
fistp
loopne
cwde
dec
pop
lods
pushf
jnp
fist
call
jge
dec
push
adc
nop
fimul
dec
mov
sbb
iret
mov
imul
aad
out
enter
stos
pop
mov
mov
repnz
inc
xchg
push
mov
cs
mov
dec
call
cmp
in
fwait
ins
fidiv
xor
pop
pushf
xlat
rcl
dec
push
fcomp
inc
xchg
aas
stos
repnz
pop
sti
mov
pop
mov
cwde
mov
call
sbb
pop
mov
mov
scas
pop
ret
(bad)
jmp
pop
jg
jle
xchg
mov
mov
push
adc
adc
adc
or
cmp
inc
xlat
inc
sbb
jp
jp
sbb
cmp
outs
dec
pop
xchg
sbb
mov
pop
pop
mov
dec
pop
pop
xor
jmp
cmps
call
sahf
inc
xlat
jp
mov
xchg
sbb
aad
jg
stos
push
(bad)
cmp
hlt
iret
dec
movs
fisttp
pop
nop
cmp
cwde
int
sbb
inc
fst
dec
add
cwde
mov
stos
cmp
sbb
xchg
adc
pop
aad
dec
ror
jmp
mov
or
stos
mov
jb
add
inc
adc
push
int
sar
std
dec
in
sbb
jg
fdivrp
scas
adc
into
inc
retf
cs
jns
ins
mov
inc
mov
call
sbb
mov
mov
dec
push
inc
push
sbb
adc
pop
or
mov
mov
inc
xor
cmp
cdq
retf
adc
jmp
retf
dec
adc
push
pop
add
jge
dec
lods
xchg
sahf
nop
jle
(bad)
mov
xchg
cmp
adc
sub
out
mov
mov
xchg
pop
inc
dec
dec
aad
add
cmps
sbb
or
mov
and
sub
inc
mov
aaa
pop
cwde
pop
sti
sbb
xchg
mov
rcr
mov
stos
js
aad
sbb
nop
test
push
inc
ins
jg
js
dec
sub
push
inc
adc
fbstp
mov
dec
sbb
pushf
sbb
ret
mov
cmp
dec
adc
pop
xchg
retf
mov
popf
jae
popa
aaa
repz
cmp
xor
stc
mov
pop
cmp
or
pop
dec
stos
and
sub
imul
sub
mov
popf
mov
fistp
pop
lds
sub
jge
sbb
aas
mov
add
lods
inc
sahf
xchg
mov
jae
inc
dec
xchg
aad
add
pushf
xchg
std
fistp
add
mov
pop
mov
pop
popf
repnz
push
arpl
mov
push
xchg
sti
inc
retf
fwait
pop
cmp
jp
adc
sahf
cmp
pop
mov
push
xchg
inc
sbb
adc
cs
cwde
push
ja
mov
xchg
jg
mov
dec
rcl
pop
sahf
(bad)
jae
cwde
sub
xchg
shl
push
stos
mov
out
xchg
fcomp
loop
cmp
jne
popf
and
nop
jp
dec
xchg
dec
mov
mov
dec
push
jns
xchg
test
inc
ficom
loop
xchg
adc
pop
rol
fwait
stos
xchg
test
add
jnp
pop
pop
cmp
push
sub
sbb
maxps
push
and
cmp
pop
int
push
dec
jg
nop
jle
scas
xchg
mov
rcl
icebp
mov
pop
sbb
stc
xchg
or
mov
or
and
bound
mov
pop
push
mov
cmp
ffree
dec
dec
sbb
daa
push
call
js
xchg
sub
lea
add
retf
pop
sti
push
sub
outs
dec
call
adc
pop
cld
push
jbe
retf
inc
call
sub
call
adc
mov
adc
fcmovnu
adc
mov
adc
mov
adc
cld
jae
sub
cwde
sbb
jl
cdq
stc
xor
sbb
sbb
retf
fist
push
retf
jnp
stc
push
pop
pop
add
jl
jae
sub
push
or
inc
xor
out
jge
jp
pop
push
xlat
pop
or
(bad)
xchg
mov
sahf
ins
jbe
or
jle
retf
mov
ret
mov
mov
cmp
lods
inc
retf
push
sub
inc
mov
arpl
adc
push
push
mov
dec
pop
cmps
cmp
sub
adc
pop
xor
fisub
lds
mov
mov
push
mov
cld
fwait
js
enter
pop
mov
aas
add
das
cmp
lahf
inc
mov
std
sub
adc
call
push
dec
cdq
or
pop
jmp
xchg
lock
mov
cdq
inc
sbb
dec
fmul
push
je
mov
pop
fwait
inc
mov
ins
imul
push
xchg
out
push
std
push
rcl
pop
inc
dec
outs
cwde
adc
xchg
outs
sub
xchg
rsm
xchg
xchg
push
jle
dec
xchg
sbb
mov
xchg
bound
cmp
loop
ds
and
ja
jl
adc
mov
std
xchg
retf
inc
pushf
pop
sti
mov
pop
pop
push
repnz
sbb
xchg
inc
fstp
sahf
pop
inc
pop
push
xor
pop
or
(bad)
cwde
push
add
jge
jmp
inc
ror
sbb
(bad)
jge
cli
xor
push
fwait
mov
repnz
dec
xor
iret
push
dec
(bad)
mov
and
inc
push
mov
test
xchg
pop
pop
jl
lods
sub
mov
dec
loope
stos
mov
test
or
inc
ror
add
bound
loop
shl
sbb
rcr
fidiv
retf
push
push
jnp
popf
nop
mov
mov
retf
adc
dec
dec
dec
imul
into
pop
imul
sbb
dec
lds
sbb
fist
shl
pop
inc
jp
div
sbb
sbb
push
push
mov
cmps
in
nop
sub
cwde
test
dec
loopne
xor
or
fst
das
xchg
mov
sbb
dec
in
ret
cmp
or
test
neg
ror
sub
adc
(bad)
fidivr
adc
arpl
inc
sub
stc
jp
pop
xchg
dec
pop
mov
pop
or
dec
mov
loope
div
test
dec
nop
sbb
(bad)
adc
(bad)
fstp
pop
mov
mov
jge
scas
nop
fdivr
pop
xchg
popf
add
mov
push
jnp
cmp
xchg
fld
pop
xchg
call
mov
mov
int3
sbb
mov
mov
stos
jge
push
jmp
xchg
lods
std
mov
sub
ficom
adc
pushf
jmp
sbb
pop
and
sahf
sbb
push
into
add
pop
jns
sub
mov
arpl
retf
(bad)
sbb
dec
(bad)
sbb
stos
sahf
xchg
les
in
push
jmp
popf
pop
fisub
ud1
xor
mov
jb
xchg
repnz
and
ficom
push
dec
sar
test
xchg
xchg
cmps
lahf
jns
pop
xchg
mov
sbb
aas
xor
test
adc
push
jno
add
push
jae
mov
jge
mov
jne
fistp
sub
mov
xlat
fimul
sbb
mov
lods
inc
xlat
or
push
mov
jnp
xor
mov
inc
(bad)
mov
mov
ja
jae
mov
push
sahf
sar
push
sahf
and
push
dec
pop
cs
adc
push
pop
inc
adc
mov
jle
push
sub
mov
xchg
dec
pushf
mov
lea
sbb
sub
mov
mov
jbe
or
aaa
stc
pop
fcomp
mov
test
sbb
sub
leave
or
adc
dec
jl
pop
adc
mov
cmp
fistp
pop
or
xchg
(bad)
dec
popf
xchg
pop
adc
inc
mov
jo
mov
clc
pop
sbb
dec
push
adc
dec
lods
retf
sub
mov
pop
daa
dec
mov
imul
addr16
cld
rcl
xchg
mov
pop
shl
xchg
pop
nop
sub
call
or
fisttp
call
sub
sbb
adc
retf
jg
adc
mov
out
sub
movs
pop
xchg
and
mov
dec
cmp
mov
mov
sbb
scas
jbe
dec
push
dec
xor
imul
cmps
pushf
call
fistp
mov
mov
sbb
fidivr
inc
shr
lods
pop
movd
das
push
retf
mov
call
pop
xchg
pop
jb
jg
mov
in
pop
push
fsub
call
jp
fldcw
stos
aam
mov
mov
imul
fidiv
xchg
sti
dec
pushf
cli
xor
aad
popa
sbb
sub
mov
call
sbb
dec
cmps
sahf
pop
pushf
aad
jns
lods
add
xchg
dec
xor
lahf
push
mov
inc
sbb
inc
sbb
das
push
lahf
and
and
xlat
jl
ret
dec
mul
mov
mov
cld
dec
jg
push
push
adc
or
(bad)
jp
sub
nop
mov
xchg
jmp
sbb
xor
cdq
sbb
push
retf
cmp
push
fcmovbe
out
jp
sbb
rcr
dec
mov
fmul
pop
(bad)
cmp
ins
xchg
xor
rol
ror
push
ret
aam
mov
xchg
ret
pushf
loope
ds
pushf
adc
inc
mov
inc
ja
jle
xor
adc
push
stos
adc
pop
je
or
std
pop
jle
and
adc
mov
nop
cmps
sbb
pop
xlat
jecxz
pop
int3
ret
mov
fnsave
dec
pop
pop
rcl
push
popf
push
stc
push
pop
pushf
retf
cmp
dec
push
adc
pushf
inc
pop
adc
cdq
int
mov
pushf
push
ror
and
mov
push
nop
push
xchg
xor
sbb
push
fdivr
mov
leave
adc
cwde
sub
jne
cmp
retf
int3
dec
mov
popf
inc
push
mov
rol
sbb
adc
jl
inc
into
sbb
adc
and
jae
pop
call
mov
sbb
mov
fwait
stos
mov
mov
imul
mov
pushf
dec
pop
xchg
pop
ficom
mov
les
iret
push
loopne
mov
cwde
jo
int3
pop
adc
outs
mov
mov
mov
cmps
fidiv
jle
stc
fiadd
push
cmp
xor
je
adc
cmp
xchg
xor
jne
retf
mov
daa
fld
ficomp
sub
nop
xlat
push
fld
jmp
sbb
jp
aad
movs
sbb
mov
mov
push
retf
int
push
xchg
ds
pop
repz
cmp
inc
xchg
jmp
push
aaa
mov
xchg
sbb
adc
sub
clc
aas
mov
frstor
sbb
push
cmp
xchg
push
and
push
jmp
nop
xchg
pop
cmp
push
mov
imul
or
call
rcr
adc
add
xchg
dec
outs
mov
jg
push
adc
push
push
mov
ins
pop
fdivr
sub
pop
lods
call
cmp
rcl
cmp
pushf
pop
nop
push
pop
push
dec
aas
shl
pushf
cmp
xor
mov
inc
fsubr
das
dec
pop
lea
add
jmp
xchg
adc
sub
(bad)
loop
shr
mov
retf
int
fiadd
push
aad
and
pop
mov
mov
mov
inc
dec
aam
mov
mov
sbb
pop
mov
fidiv
cmp
mov
cmp
mov
adc
mov
ins
call
pop
repz
cwde
mov
pop
jle
dec
gs
push
ret
fwait
ins
add
sbb
jns
lods
add
scas
mov
cwde
jmp
dec
pop
push
mov
inc
pushf
fisubr
jmp
pushf
pop
mov
retf
fistp
adc
mov
sub
dec
ja
cmp
aad
arpl
aam
xchg
pushf
int
ss
loope
aam
jo
int
pop
stc
retf
adc
das
sahf
clc
sar
pop
hlt
add
mov
xchg
pop
aaa
stos
mov
pop
ficom
sub
dec
xchg
stos
xchg
fcmove
ss
jb
aas
ret
sbb
lea
pop
mov
inc
std
sub
push
ds
mov
jge
arpl
push
mov
gs
pop
xchg
int
adc
inc
xor
jmp
dec
inc
pop
pushf
mov
inc
fwait
sahf
(bad)
dec
mov
mov
push
adc
sub
cld
or
arpl
pop
pop
mov
ins
mov
pop
and
sub
ss
aas
rdpmc
mov
nop
mov
rcr
nop
sbb
ja
int
ret
pop
xchg
aam
adc
ret
mov
mov
sbb
adc
xchg
xchg
pop
push
sub
scas
push
dec
ret
adc
mov
jmp
xchg
rcr
pop
or
pushf
cmp
add
dec
push
pop
cmps
mov
outs
xchg
cmp
xchg
sub
popf
or
das
pop
or
xchg
cmc
dec
leave
(bad)
int
xchg
cmp
inc
adc
cwde
pop
xor
stos
pop
mov
dec
cmps
pop
sbb
push
pop
mov
pop
jne
jae
cdq
push
mov
mov
shr
and
dec
int3
inc
fst
mov
jae
mov
or
pop
inc
xor
ins
push
mov
ror
mov
stc
and
neg
mov
call
shl
sbb
test
mov
xlat
mov
cmp
jae
jp
sahf
or
pop
adc
pop
ret
aad
sbb
jg
push
sbb
das
pop
adc
push
xor
call
dec
out
retf
outs
jne
cmp
je
mov
test
call
mov
loopne
aam
mov
or
rol
cmp
inc
cli
jb
inc
push
adc
push
xor
push
es
jg
inc
xor
or
pushf
adc
xchg
or
ret
or
mov
or
ds
hlt
xor
(bad)
push
sahf
mov
pop
xchg
jnp
pop
popf
stc
jns
xchg
jge
dec
mov
sbb
je
aaa
cs
cmp
pop
pop
mov
xchg
sbb
pop
ret
pop
sbb
dec
gs
adc
popf
add
or
cdq
pop
call
cmp
xchg
xchg
std
jb
call
xchg
xchg
xchg
mov
fild
jb
mov
push
mov
call
out
cdq
xchg
push
jle
dec
add
out
mov
pushf
test
idiv
and
xor
repnz
or
sbb
jns
fsin
sbb
aaa
inc
leave
jo
pop
xor
push
jl
and
xchg
xor
mov
jne
sub
pop
cmp
jne
loopne
xor
mov
sub
dec
gs
ror
fwait
jnp
outs
retf
push
pushf
or
inc
push
aas
pop
or
xchg
popf
jmp
jp
dec
sub
xlat
stc
jns
dec
adc
push
push
mov
mov
push
ficom
(bad)
in
mov
mov
dec
cmp
push
dec
call
mov
push
imul
adc
jnp
mov
mov
mov
jae
cmps
or
call
inc
fisubr
lods
mov
jno
xchg
mov
mov
lods
xchg
and
xchg
arpl
cld
or
sahf
lods
jge
mov
cmp
imul
inc
sar
sub
dec
dec
pop
and
dec
sbb
sar
adc
or
push
sahf
lea
push
sub
xchg
inc
xchg
xor
jno
stc
cmps
jl
out
sbb
push
pushf
call
mov
div
push
sub
sub
jae
mov
cmp
mov
adc
jo
jno
in
inc
mov
fwait
and
adc
push
out
imul
sahf
jge
xchg
jge
mov
push
call
inc
in
nop
sbb
icebp
mov
xchg
sbb
adc
mov
pop
and
jg
xchg
mov
push
fldcw
pushf
jmp
repnz
fstp
dec
cmp
retf
ficomp
mov
pop
xor
cmp
mov
(bad)
(bad)
xchg
sti
mov
nop
cmp
xor
mov
inc
lods
xor
aas
idiv
pop
pushf
or
jns
pop
add
pop
cmps
nop
mov
dec
int3
pushf
lock
test
imul
pop
and
jbe
inc
jp
cmp
mov
rcr
inc
pusha
fmul
pushf
mov
xchg
aad
dec
or
sbb
adc
dec
jle
dec
cwd
inc
(bad)
test
add
or
sub
push
sbb
hlt
pop
cmp
dec
pop
jge
sbb
push
xchg
mov
lea
repz
mov
pop
stc
cmps
push
push
rcl
pop
sti
jnp
mov
push
pop
push
sti
and
xor
les
push
pop
or
fisub
cmp
cwde
jge
loopne
sbb
stos
adc
adc
in
add
sti
sub
js
into
mov
lods
inc
pop
and
cmp
adc
push
or
push
mov
nop
mov
sub
mov
inc
sub
push
les
mov
and
or
cmp
inc
pop
xchg
adc
xor
pop
xchg
xchg
push
add
xchg
adc
cmp
loopne
test
mov
test
mov
pop
cmp
shl
rol
or
pushf
inc
sbb
xchg
mov
pushf
in
test
lods
jp
retf
pop
int
out
push
sbb
dec
int
pop
and
jnp
mov
adc
cmp
sbb
dec
mov
pushf
adc
cmp
(bad)
xchg
(bad)
icebp
aam
pushf
dec
mov
jge
into
jne
pop
adc
mov
mov
pop
sub
fwait
mov
cmp
stos
fimul
fucomi
sub
jge
(bad)
mov
add
cmp
in
enter
sbb
inc
js
or
adc
sbb
or
sub
call
adc
dec
xor
mov
cmp
jge
pop
inc
ror
mov
(bad)
gs
mov
xchg
je
rcl
sub
inc
pop
cmp
dec
push
retf
or
adc
pop
cmp
pop
jbe
jl
js
mov
xchg
ja
mov
or
inc
xlat
sti
stos
rcr
adc
add
xchg
cmp
mov
mov
xchg
inc
or
adc
cmp
xchg
xchg
neg
pop
or
and
aas
jo
mov
shr
push
aad
test
adc
xchg
mov
mov
pop
push
mov
push
adc
mov
mov
fbstp
stos
int
xchg
std
enter
cmc
loop
aad
adc
mov
fstp
mov
or
jb
stc
jae
inc
stc
xor
pop
xor
jg
jl
jl
pop
jb
inc
adc
retf
push
mov
sbb
jge
pop
repnz
jae
xor
mov
int
push
lock
sbb
jge
cmp
jg
cmp
inc
cmp
aaa
data16
daa
cmp
fucom
pushf
xchg
push
push
jno
inc
sar
xchg
adc
xor
retf
mov
fnsave
jmp
inc
and
xchg
cmp
inc
cmp
mov
sub
adc
or
push
inc
jge
and
pop
mov
pop
ins
sbb
push
jge
daa
jle
imul
cmp
adc
sbb
sub
fnstcw
jb
movs
xor
dec
aaa
aas
or
nop
adc
out
mov
imul
push
aaa
xchg
popf
pop
xchg
jg
jae
xchg
and
dec
sahf
pop
in
adc
cmps
std
mov
xor
push
jae
mov
xchg
pushf
mov
cmp
jnp
dec
hlt
in
rcr
xchg
jns
stos
cwde
push
aad
jmp
xchg
xchg
xlat
mov
jle
fwait
dec
pop
mov
scas
mov
cmp
cld
xchg
adc
nop
mov
sbb
cmp
mov
adc
cmp
adc
xlat
adc
and
pop
adc
jge
xchg
repnz
sbb
sti
add
mov
jge
dec
cdq
stos
pop
mov
mov
in
mov
jbe
add
ds
out
inc
jne
cmp
mov
xchg
test
jmp
and
push
ret
xor
push
xchg
xor
cmp
push
xor
ret
cmp
cmc
dec
xor
xchg
xor
mov
add
data16
dec
pushf
dec
jmp
fistp
sbb
sahf
int3
and
aas
clc
mov
xchg
cwde
iret
jge
data16
push
jnp
imul
xchg
pop
dec
ins
and
jo
push
popf
fist
int
sbb
cwde
aad
pop
xchg
mov
daa
hlt
retf
cmp
and
or
call
xor
dec
push
gs
push
xchg
sub
(bad)
or
not
sub
sub
cmp
cmc
ret
call
mov
cmps
mov
push
cdq
dec
test
aas
jmp
stc
jp
mov
cs
jno
js
out
xchg
call
or
pop
inc
mov
daa
cdq
pushf
adc
and
dec
sbb
out
mov
sub
push
sbb
push
mov
fimul
inc
mov
not
inc
push
add
sbb
sbb
arpl
mov
data16
mov
jle
cmp
inc
mul
pop
bound
push
adc
js
int3
mov
(bad)
std
push
xor
jb
push
xor
call
ja
icebp
mov
dec
ins
xor
fwait
xchg
adc
fcmovnu
dec
push
sub
cmps
push
sbb
lahf
fimul
call
jno
xchg
push
cmps
pushf
fcomip
or
test
jae
mov
push
mov
pop
mov
call
cmp
xor
pop
push
push
add
mov
loope
pop
repz
inc
or
add
xchg
pushf
dec
adc
retf
aaa
dec
sbb
pushf
inc
aaa
push
(bad)
add
xor
stos
gs
dec
xchg
sbb
mov
mov
xchg
mov
pop
jnp
loop
xlat
mov
sbb
push
mov
(bad)
sahf
in
shl
sub
fwait
push
xchg
or
idiv
imul
ror
fimul
push
inc
fimul
shl
daa
mov
daa
mov
mov
not
adc
aad
nop
xlat
add
xchg
jns
xor
jae
push
pop
cmp
int3
test
xor
test
xchg
jb
aaa
jnp
push
pop
dec
jno
dec
push
rol
push
shl
mov
nop
aas
cdq
pushf
ja
dec
jb
xchg
push
div
ficom
out
or
pop
sub
and
aaa
dec
hlt
test
out
cmp
add
xchg
dec
jno
cmp
and
push
lea
mov
sbb
in
data16
xor
mov
lahf
pop
jp
jge
ror
sub
std
cmp
(bad)
and
xor
sti
cld
daa
imul
ins
out
cli
jns
mov
aam
mov
jmp
jnp
jbe
out
call
mov
pop
dec
xchg
pop
xor
inc
xlat
sub
in
jne
lea
fidivr
nop
fnsave
cmps
jge
jp
push
in
mov
and
leave
fistp
repnz
(bad)
fimul
shr
pop
dec
fisttp
mov
pop
jge
js
jp
ss
popa
(bad)
loope
xchg
pop
nop
inc
cmp
test
mov
rcl
dec
inc
sub
push
pop
xchg
mov
xchg
repnz
dec
mov
cmc
dec
mov
xchg
inc
ficomp
js
dec
data16
mov
sahf
in
scas
dec
adc
imul
mov
out
pop
mov
push
sub
and
inc
push
sbb
mov
je
inc
jge
cli
jmp
out
lock
sub
sbb
adc
in
(bad)
sub
xchg
jmp
push
pop
or
dec
push
mov
lods
clc
cdq
dec
add
nop
jp
sbb
cmp
ror
adc
std
aaa
mov
sbb
jno
ret
stc
sub
xor
inc
shr
pop
push
xchg
dec
cmps
(bad)
jle
cwde
ins
lods
adc
push
fucom
fwait
clc
mov
push
cmp
pushf
std
inc
mov
js
push
cld
cmp
dec
test
adc
nop
jne
pushf
or
imul
sti
or
mov
ret
push
inc
das
adc
mul
sub
aam
add
add
aaa
xchg
push
adc
ins
inc
xor
out
fdivr
pushf
adc
cmp
sbb
jg
scas
push
jmp
adc
push
xchg
neg
jo
xchg
jbe
test
pop
inc
inc
fwait
cld
cmp
sbb
inc
mov
push
sub
jns
fld
ins
test
(bad)
scas
sbb
sbb
inc
aad
cmp
daa
pop
cmp
inc
sti
push
sbb
xor
mov
pop
cmp
fcom
xchg
cmps
jle
(bad)
out
xchg
cmp
cld
add
jnp
mov
lea
add
lds
cmc
dec
jbe
push
aad
and
sbb
pushf
mov
mov
sbb
pushf
inc
sbb
cmp
rcr
out
pop
pop
pop
adc
jo
add
adc
adc
in
std
daa
mov
out
lock
adc
mov
jae
imul
jge
xchg
and
sti
dec
adc
xchg
mov
jge
dec
fwait
(bad)
adc
fisttp
push
call
sbb
fiadd
push
cmp
stc
xor
adc
xor
inc
fisttp
xor
add
cmp
mov
dec
jne
sti
pop
dec
mov
and
cs
cmp
add
sbb
leave
push
jge
push
mov
mov
call
mov
pop
cmp
xchg
cmps
xchg
mov
jge
mov
mov
not
pop
dec
shr
repnz
xor
jb
daa
cmp
hlt
stc
or
pop
xchg
pushf
jb
add
xchg
pop
cmp
fwait
pushf
add
sub
mov
sahf
inc
xchg
cmp
sbb
mov
mov
push
repnz
sub
icebp
jns
sbb
jns
ja
sub
jae
jno
dec
xchg
imul
and
adc
fst
or
js
jne
int3
ja
and
dec
clc
dec
or
mov
pop
jnp
push
stc
cmp
mov
mov
idiv
loop
mov
pushf
jb
test
call
pop
fdivr
outs
xchg
pop
cmp
sbb
inc
jmp
adc
xchg
lock
adc
inc
jo
test
sbb
adc
dec
mov
aas
pop
enter
add
test
xchg
sti
je
imul
(bad)
or
inc
lods
movs
adc
ins
not
push
idiv
fwait
fwait
push
adc
outs
dec
sbb
jmp
stc
xchg
mov
jae
and
out
pop
fdivr
outs
dec
mov
fisubr
dec
mov
xchg
cmc
inc
pop
scas
into
push
data16
push
out
cld
pop
cmp
aad
adc
pushf
mov
dec
not
or
sbb
adc
nop
mov
xchg
mov
xor
sub
mov
push
retf
jle
out
mov
jg
sbb
cdq
sbb
push
mov
idiv
out
stos
xor
or
sub
sbb
inc
pushf
push
jno
xchg
fnsave
inc
aad
int
mov
xchg
dec
pop
fcom
jle
mov
xlat
xchg
pushf
(bad)
bound
fild
call
and
xchg
mov
cdq
pop
pushf
inc
hlt
push
dec
ret
mov
sub
mov
mov
mov
sbb
pushf
inc
xchg
hlt
jns
pop
jnp
fild
sbb
mov
ja
fnstsw
aam
xchg
or
xchg
mov
adc
and
add
fwait
arpl
mov
fimul
jl
push
cmp
mov
xor
adc
and
push
test
inc
mov
or
xchg
in
push
popf
lock
dec
repz
pusha
adc
push
add
pop
pushf
cwde
jl
push
mov
mov
xor
xchg
mov
mov
adc
sub
call
xor
inc
pop
out
pushf
fcomip
sbb
mov
pop
mov
neg
pushf
inc
pop
ja
mov
pop
xor
rcl
jp
xor
dec
mov
mov
mov
arpl
cmp
or
push
sbb
jge
mov
sbb
pop
sub
adc
pushf
mov
xor
push
or
pop
cmp
inc
pop
mov
lahf
popa
inc
jne
scas
mov
popf
pop
jae
mov
push
mov
sbb
pop
mov
xchg
out
xchg
fisttp
mov
mov
and
sahf
inc
sbb
ficomp
pop
je
xchg
clc
in
pop
jae
repz
retf
inc
lahf
cld
sbb
pushf
dec
aaa
add
scas
cmp
xchg
outs
dec
mov
int3
movs
cli
dec
sub
nop
dec
xor
popa
cmp
jnp
xor
xor
xchg
outs
sbb
aas
call
jae
jle
lock
and
ja
pop
cmp
mov
dec
rol
(bad)
cmc
mov
jp
nop
pop
sbb
js
sbb
mov
add
and
jno
xor
mov
ror
out
or
xchg
ss
ret
cld
adc
pop
out
sbb
sub
lahf
mov
dec
jne
pop
mov
cmp
(bad)
bound
icebp
(bad)
pop
es
add
or
sbb
adc
sub
mov
fiadd
cmps
lock
jge
js
jb
scas
dec
sbb
jg
sbb
mov
push
push
sahf
mov
mov
fnsave
movs
jmp
call
nop
jb
and
mov
push
mov
and
lea
xor
out
push
(bad)
stc
xchg
xlat
and
lods
push
mov
mov
inc
int3
jg
movs
xchg
dec
cld
ja
push
call
ss
mov
xor
dec
xor
xchg
xchg
ins
xor
pushf
inc
cmps
cdq
icebp
cmp
cmp
out
lods
aas
fidiv
mov
sbb
jae
lds
push
mov
push
jae
sub
test
ss
jbe
aaa
lods
pop
push
mov
bound
xor
fstp
xchg
push
jnp
dec
push
cmp
mov
and
hlt
jae
jmp
adc
dec
adc
dec
sub
jge
stos
mov
pop
pop
xchg
in
or
mov
popf
cmp
cwde
mov
cwde
pop
push
popa
dec
jg
mov
mov
cmp
nop
push
fwait
adc
mov
jp
mov
fwait
aam
cld
or
repz
ja
lds
adc
pushf
mov
ins
mov
push
ret
xchg
arpl
inc
mov
retf
dec
xchg
dec
mov
dec
cmc
dec
aam
xchg
mov
dec
fwait
mov
jne
jg
jb
sbb
pmovmskb
cdq
test
lods
xchg
mov
pop
adc
bound
lea
neg
xor
repz
shl
cli
jle
mov
jo
pop
push
ds
sub
stos
sub
mov
shr
scas
aas
push
xor
sub
jb
xchg
add
es
xchg
mov
xchg
aaa
leave
pushf
dec
or
(bad)
pop
inc
inc
sahf
adc
daa
lods
cmp
or
dec
or
dec
adc
ja
adc
mov
daa
pop
cs
mov
or
mov
(bad)
call
es
push
ss
bound
inc
mov
das
pop
cmp
lock
mov
(bad)
push
ret
adc
mov
mov
push
sub
and
call
shr
inc
xor
fadd
sbb
rcr
push
pop
and
test
(bad)
or
mov
jg
mov
loopne
mov
pop
jp
nop
pop
pop
jne
sub
daa
jno
outs
and
scas
inc
call
push
sbb
mov
or
jbe
daa
outs
pushf
out
shl
repnz
xchg
rol
push
call
cmps
call
ja
jmp
int
dec
cld
(bad)
xor
dec
xchg
push
fwait
outs
add
cmp
dec
jno
mov
jno
retf
xchg
and
aaa
(bad)
xlat
es
add
pushf
pushf
push
jnp
int3
inc
adc
pop
xchg
or
and
pop
mov
aas
add
fiadd
sub
xor
or
sub
xchg
push
shl
cld
xchg
sbb
cmps
cmp
test
sbb
fcomp
mov
pop
sbb
push
mov
fdiv
cmps
cwde
and
dec
aam
sbb
xchg
xchg
enter
and
call
jg
xor
inc
or
xor
add
ins
jmp
jle
xor
cmp
or
pop
cmps
xchg
and
push
fmul
out
inc
adc
xor
mul
cmp
xlat
mov
sti
xor
mov
adc
mov
outs
fwait
div
push
mov
mov
cmps
neg
xor
xchg
pushf
mov
jae
adc
pushf
or
repz
pushf
arpl
jb
jae
pop
lahf
mov
cwde
mov
push
aaa
and
adc
mov
nop
or
sub
mov
aad
push
mov
lods
call
ret
xchg
xor
xchg
pop
mov
adc
sbb
mov
xchg
bound
inc
push
sbb
jge
in
lahf
sahf
cmps
lahf
lods
shl
sbb
lock
xlat
cmc
and
adc
call
rol
pop
xchg
lahf
pop
fwait
xor
icebp
mov
mov
jb
and
sub
aaa
cdq
pop
xor
xchg
xor
adc
mov
mov
sbb
xor
mov
cli
pushf
sub
ja
imul
(bad)
in
cmc
inc
aam
push
mov
xor
xor
sbb
xchg
fwait
and
and
and
cli
pop
inc
lods
fsubr
cli
push
adc
sbb
xor
cmp
hlt
je
cli
xchg
(bad)
retf
push
jge
xchg
pop
mov
adc
adc
mov
lods
das
fild
ret
adc
int3
and
js
inc
or
cld
test
imul
dec
xchg
cwde
arpl
xlat
mov
fisub
push
dec
dec
mov
das
adc
daa
shl
push
int
jne
scas
lahf
cmp
pushf
pushf
xlat
stc
jo
mov
mov
or
lahf
call
dec
mov
shl
xchg
dec
and
pushf
push
cmp
pushf
dec
lods
cmp
jg
int3
jp
adc
mov
push
(bad)
loope
sbb
jb
inc
or
adc
adc
or
jb
mov
aad
adc
dec
xor
adc
pop
ja
xor
add
test
not
aaa
and
jl
push
mov
jmp
add
jle
cli
mov
mov
pusha
mov
pop
jl
add
das
sbb
xchg
fiadd
pop
dec
adc
mov
jae
xor
test
xchg
push
dec
and
jns
mov
mov
cmp
mov
push
sbb
popw
dec
adc
mov
repnz
sub
arpl
hlt
mov
xor
cwde
mov
cmp
jmp
xor
push
ficom
xchg
add
pop
idiv
(bad)
sbb
in
push
stos
pushf
cmp
call
sbb
dec
adc
push
aad
mov
dec
mov
xchg
mov
sbb
xchg
adc
es
mov
cmc
out
mov
inc
mov
xchg
cmp
bound
or
mov
push
mov
mov
sar
(bad)
sbb
push
adc
sbb
jge
aaa
and
xchg
mov
pop
das
ficom
inc
mov
sbb
int
adc
adc
push
add
jb
jno
mov
pop
jae
dec
sub
mov
and
jnp
repz
sbb
idiv
hlt
repz
xchg
mov
inc
adc
mov
xchg
jge
sub
xor
lods
sbb
xchg
pop
aaa
lds
fwait
je
neg
pop
adc
mov
bndldx
aas
pop
clc
inc
or
jo
lock
sbb
jge
sbb
lock
inc
push
push
pushf
sbb
nop
out
cmp
jns
lock
lods
jb
pop
xchg
inc
cmp
jmp
push
xchg
daa
xor
shl
fdivr
xchg
loope
outs
jno
cmps
pop
es
sub
cld
sub
js
xchg
xor
inc
ds
fbstp
iret
sub
mov
adc
ss
push
loopne
cwde
dec
mov
push
repz
popa
sbb
sub
ins
ret
adc
mov
inc
fiadd
dec
sub
sbb
nop
cwde
xchg
lahf
icebp
or
mov
dec
repnz
jnp
sbb
xor
and
cli
ror
inc
sbb
xchg
cmp
xor
sbb
xchg
adc
sbb
adc
mov
inc
dec
icebp
(bad)
or
mov
xchg
jge
add
cmp
xchg
mov
pop
pushf
mov
xor
pushf
iret
cmp
mov
aad
inc
call
sbb
fild
push
xor
repz
add
mov
inc
pop
inc
inc
fidiv
dec
or
jnp
jno
add
adc
sbb
inc
inc
jae
mov
adc
add
mov
pushf
mov
fwait
cli
pushf
sub
push
cmps
repnz
repz
mov
xor
sbb
mov
mov
sbb
loopne
pop
or
xor
mov
cmp
cmp
aad
arpl
push
sbb
add
movs
div
or
dec
idiv
sti
pop
loope
sbb
mov
inc
or
pop
pushf
sub
pop
mov
adc
sbb
jnp
bound
and
or
mov
jl
call
pop
pushf
push
cmp
mov
adc
out
xlat
cmp
call
adc
jno
push
inc
lahf
div
fidivr
jb
jne
adc
inc
call
fisub
dec
jbe
jne
cmp
jg
(bad)
mov
sub
pushf
mov
mov
ins
in
dec
fwait
mov
or
xchg
loope
xor
icebp
xchg
push
xchg
(bad)
fimul
pop
idiv
nop
test
arpl
pop
jb
(bad)
daa
cmp
jbe
xor
int
popf
xchg
aas
call
pop
test
push
xchg
jp
int
ss
push
mov
cmp
out
cdq
xor
pop
mov
jl
adc
push
or
stos
pushf
mov
cld
out
xor
pushf
retf
lahf
fnstenv
mov
pushf
outs
push
jp
scas
mov
cmp
mov
inc
dec
mov
inc
mov
lahf
rcl
aad
data16
mov
jge
lds
mov
loope
mov
pusha
fisub
dec
jno
mov
sub
cwde
cmp
sub
mov
jp
or
pop
mov
pop
xchg
jb
and
jns
xor
add
and
jp
xor
call
sbb
dec
push
push
aas
sahf
loopne
ss
cwde
or
popf
int
in
pop
cmp
sbb
fild
push
fistp
fst
xor
mov
jmp
aaa
std
std
mov
arpl
xchg
sbb
nop
cmps
lea
jo
or
fsub
sbb
pushf
inc
mov
jb
mov
xchg
mov
sbb
sahf
xor
push
loop
xchg
jmp
dec
sub
inc
mov
or
xchg
dec
sub
loop
fidiv
push
jge
xlat
jae
mov
sub
push
adc
ret
aad
repnz
xor
(bad)
lods
repnz
xchg
adc
popa
mov
addr16
push
dec
push
dec
mov
out
aam
mov
arpl
xor
xchg
cld
push
pop
fiadd
cmp
inc
fisub
sahf
in
pop
adc
sbb
ins
sub
cmp
xor
jne
(bad)
shl
cld
push
daa
xchg
push
adc
jae
xor
inc
jg
push
mov
pop
sbb
mov
sbb
xchg
add
bound
mov
mov
or
cmp
jns
jle
dec
sub
sbb
push
mov
nop
mov
push
xor
pop
mov
cdq
dec
(bad)
pop
mov
nop
xor
stc
inc
adc
push
push
pop
in
xchg
mov
mov
cmp
push
sub
mov
sub
sbb
pushf
xor
push
adc
mov
fdivrp
jae
push
test
xchg
inc
and
pusha
adc
mov
adc
mov
jnp
add
add
ror
call
ror
jnp
dec
test
scas
and
inc
push
sbb
mov
sbb
sub
adc
xor
cmp
or
push
mov
repnz
jl
xor
add
push
mov
popa
adc
cli
shl
div
pushf
xor
inc
xchg
fimul
inc
pop
inc
(bad)
loope
sbb
sti
ret
mov
jle
ins
sub
cmp
mov
mov
push
cmp
mov
pop
cli
inc
cmp
repz
mov
scas
cdq
mov
sbb
lds
add
add
mov
mov
outs
adc
jne
xchg
pushf
dec
cmc
inc
hlt
mov
inc
ror
stc
dec
cwde
bound
sahf
jmp
pop
xor
cdq
lahf
pop
in
xor
mov
aad
pushf
push
repnz
push
push
loopne
fldlg2
in
pop
in
sar
jmp
popa
dec
movs
xor
jne
and
test
sbb
jle
pop
fidiv
cs
rol
fsubp
out
inc
xchg
ss
aaa
outs
adc
xor
jg
ror
jae
fisttp
sbb
add
mul
jns
dec
out
cmp
scas
cdq
(bad)
inc
mov
out
mov
(bad)
mov
adc
mov
and
inc
xchg
lock
out
idiv
mov
popa
sub
and
scas
adc
mov
pop
push
add
dec
pop
mov
jno
(bad)
xchg
mov
xchg
or
pop
int
xor
ret
jb
xchg
scas
dec
sbb
int3
test
inc
mov
mov
dec
and
loope
outs
sahf
jmp
add
mov
daa
push
or
cs
cld
aas
xchg
nop
inc
pop
inc
ja
xor
and
or
out
jle
mov
or
inc
adc
xchg
xchg
scas
push
(bad)
add
mov
pop
call
adc
pushf
jge
mov
xchg
cmp
jp
pop
daa
sub
mov
push
or
cmp
sahf
mov
mov
mov
xor
cld
adc
xor
in
stos
repz
cli
cmp
cmp
cwde
pushf
sub
mov
rcr
mov
mov
cmp
push
dec
ds
lock
xor
mov
mov
jg
scas
mov
out
bound
mov
add
out
rcl
push
aas
mov
push
lock
ficomp
jmp
daa
xor
inc
xchg
call
bound
mov
mov
out
inc
push
dec
inc
call
pop
mov
jb
fcomip
jb
add
rcl
jg
aam
lahf
pop
repz
aas
pop
arpl
pushf
xchg
inc
mov
inc
fiadd
loop
cdq
pop
cs
call
xor
call
js
mov
adc
repnz
test
sub
or
push
bound
aas
xchg
push
and
adc
jnp
dec
loop
clc
jmp
pop
mov
fwait
mov
lahf
lds
popf
cmps
cmps
dec
xchg
popa
cs
cmp
mov
mov
pop
inc
fisttp
xor
add
pop
adc
pop
xor
inc
lahf
daa
sahf
loop
adc
dec
js
call
out
fisttp
xchg
add
lods
jne
xchg
and
jp
sub
es
xchg
idiv
inc
pop
xchg
xchg
xor
shr
adc
push
push
adc
dec
pop
fadd
push
mov
mov
aaa
arpl
nop
int3
xor
aas
dec
jnp
add
jmp
cmp
add
clc
out
inc
jg
jecxz
jmp
outs
fsubr
call
mov
xchg
mov
bound
push
xchg
xchg
cwde
hlt
dec
mov
mov
lds
popa
jae
jmp
pop
push
popf
out
pop
mov
test
adc
xlat
cld
not
(bad)
cmp
ja
xchg
mov
sahf
call
call
xchg
push
push
out
aaa
jge
adc
jne
mov
adc
mov
xlat
xor
aaa
adc
jge
mov
and
mov
xor
loop
daa
lods
cmp
mov
xor
and
sub
rol
dec
cwde
jge
inc
sbb
call
add
xchg
sahf
mov
jae
jne
cwde
inc
clc
es
pushf
idiv
pop
mov
pop
and
(bad)
mov
adc
sbb
mov
xor
mov
adc
nop
in
add
pushf
pop
jbe
imul
mov
pop
cdq
dec
das
(bad)
mov
push
in
lea
xchg
aas
fisub
inc
add
adc
pop
lock
mov
mov
sahf
repz
nop
xchg
xor
popf
icebp
out
push
xchg
jno
mov
(bad)
jae
es
cmp
fcom
jmp
pushf
inc
cli
adc
xor
iret
pushf
cmps
xchg
xchg
cmps
shr
push
mov
cld
mov
repnz
mov
(bad)
repnz
jae
popf
push
sbb
dec
adc
aad
add
movs
(bad)
jmp
pop
aaa
inc
nop
sub
in
add
lods
sbb
call
jae
xchg
mov
dec
push
mov
popf
ds
bound
div
adc
mov
jp
inc
inc
sar
push
sub
cmp
jmp
out
xchg
and
jg
xchg
int
xor
and
scas
and
mov
imul
pushf
add
pop
xchg
add
pushf
mov
pop
sub
mov
xor
fcomp
xchg
aaa
xchg
in
mov
add
in
aaa
jecxz
and
pop
jae
ror
(bad)
repz
push
or
lods
data16
mov
xchg
(bad)
adc
int3
test
test
mov
cmp
pop
aaa
lods
xlat
xchg
xor
loop
mov
add
popf
pop
pop
arpl
push
movs
aam
mov
imul
aam
clc
mov
outs
jmp
xchg
scas
retf
sub
jmp
dec
fild
mov
push
sahf
adc
or
push
popf
jb
jge
add
mov
xchg
mov
xchg
dec
ins
jns
inc
call
push
add
add
xchg
mov
rcl
mov
pop
adc
jne
int3
adc
xor
mov
jmp
jo
sbb
ror
sbb
and
jae
push
add
mov
adc
sub
hlt
sbb
aad
xchg
mov
mov
add
ficomp
cmc
push
out
sbb
xor
inc
test
out
mov
scas
dec
sub
cmp
pop
aad
adc
arpl
mov
arpl
mov
inc
mov
mov
cmps
xchg
cmps
test
outs
ss
imul
push
scas
mov
mov
pop
pop
and
ficomp
jb
mov
add
or
adc
data16
in
scas
jmp
sub
sahf
jecxz
xchg
mov
push
jnp
adc
div
jp
hlt
call
test
jb
loope
in
pop
push
push
xchg
ss
mov
dec
cmp
sahf
push
xchg
add
lahf
dec
jmp
jmp
call
pop
adc
call
mov
adc
test
dec
pop
loopne
sar
sbb
push
push
out
retf
into
mov
bound
sbb
scas
xchg
push
mov
sbb
xchg
pop
call
cmp
call
out
pushf
add
xor
sub
iret
fild
xchg
mov
lds
xchg
sbb
pop
(bad)
cmp
adc
outs
mov
ret
sbb
push
stc
adc
jb
add
call
dec
in
push
and
not
cmp
sub
xchg
repz
jb
and
sub
cmp
fidivr
mov
fidivr
adc
or
ds
xlat
mov
adc
xor
and
and
iret
fstp
adc
clc
ffree
pop
icebp
xor
xchg
arpl
cmp
outs
sub
pop
cmp
rol
int3
adc
cmp
ds
pop
xchg
lahf
scas
mov
push
mov
call
inc
aaa
rol
fidivr
jle
sub
cmp
inc
sti
rcr
loope
aaa
imul
sub
lahf
ds
fimul
mov
call
imul
test
fnsave
fist
mov
shl
mov
and
sahf
cmp
imul
sub
xchg
gs
pop
pop
push
push
cmp
push
(bad)
dec
arpl
sub
inc
adc
mov
push
div
lahf
sbb
mov
popa
adc
int3
stos
push
loopne
xor
add
sub
or
bound
scas
call
add
xor
xor
push
push
jg
jp
loopne
sar
mov
and
ret
shl
cmp
mov
jb
or
lahf
in
int3
addr16
add
int3
xchg
sbb
sbb
fsub
ja
jl
push
xchg
fidivr
retf
sub
mov
cs
xor
mov
lahf
xchg
out
out
sub
jnp
add
pop
aaa
dec
lock
jmp
rcr
push
xchg
mov
mov
lods
dec
int3
mov
sti
jae
and
xor
mov
pushf
mov
add
add
adc
fisttp
jecxz
fwait
sbb
stos
adc
pop
icebp
dec
pop
fwait
mov
(bad)
lea
aad
jbe
mov
loopne
mov
inc
dec
fisub
enter
out
std
inc
pushf
cwde
jge
cs
loop
sub
inc
cmp
in
movs
cdq
into
inc
adc
or
mov
hlt
outs
jne
aad
aad
aad
aad
hlt
push
hlt
pop
div
mov
daa
mov
rcr
inc
sbb
sub
aad
ins
rol
adc
ror
aaa
sar
dec
adc
adc
cmp
ins
push
xchg
ins
pop
jl
mov
push
popf
pop
xchg
sbb
call
xchg
cdq
ins
leave
jl
dec
hlt
and
ret
inc
dec
or
dec
aad
aad
xor
jb
cli
aad
aad
out
loopne
nop
aad
aaa
push
arpl
scas
call
aad
xchg
arpl
pushf
dec
inc
adc
(bad)
mov
xchg
mov
bound
xor
xchg
loop
test
jb
jp
jbe
mov
lds
repz
or
push
jp
sbb
inc
iret
add
push
ja
mov
scas
sahf
mov
test
xor
xor
rcr
add
fld
or
push
pop
adc
int3
inc
cli
pop
loop
jmp
out
retf
xlat
rol
repnz
imul
data16
inc
ins
inc
ins
xchg
ins
xchg
ins
add
push
pop
jl
mov
sbb
inc
test
rol
call
call
sbb
sbb
add
jp
(bad)
or
xchg
push
pop
push
jmp
fmul
xor
sbb
cdq
cld
pop
jg
push
int3
(bad)
push
mov
or
jbe
or
push
adc
sbb
cld
xchg
cmp
int3
xor
retf
fnstsw
call
inc
(bad)
adc
add
add
jp
mov
dec
fdivr
dec
and
fimul
xor
aad
aad
dec
mov
pop
ss
push
jno
movs
into
pop
cmps
aam
ins
bound
fdiv
cld
pop
dec
idiv
jmp
repnz
sbb
(bad)
call
rcr
pop
push
pop
aam
or
movs
xlat
call
ds
fwait
pushf
pop
lock
inc
jbe
retf
(bad)
dec
or
inc
int3
(bad)
mov
cdq
cld
sbb
cdq
mov
push
int3
clc
call
ja
sbb
out
(bad)
cld
test
pop
push
mov
add
mov
sar
lods
mov
or
es
daa
outs
sbb
xchg
mov
sar
mov
cdq
or
out
inc
jb
sbb
jmp
sti
sbb
sti
lods
or
or
sub
sahf
pop
int3
setle
sub
nop
lods
imul
dec
add
into
fisubr
lds
ror
pop
dec
mov
mov
adc
push
pop
pop
dec
loop
jecxz
addr16
jns
or
fsub
mov
cld
aam
adc
mov
xor
adc
neg
cli
lods
mov
(bad)
jmp
sbb
jp
lods
mov
das
pop
test
cmp
fcomp
mov
or
lea
cmp
sar
pop
mov
int3
int3
popf
cmps
dec
fnstenv
dec
pushf
ins
mov
cmp
cld
ss
or
fwait
dec
push
jmp
inc
(bad)
aam
jl
pop
ins
fmul
popf
adc
pop
popa
fsubr
add
ins
call
clc
cmp
sub
sub
(bad)
fistp
fst
lahf
jl
mov
jae
sahf
shl
xchg
sbb
in
fstp
int3
outs
jl
sbb
pop
fdivr
popf
arpl
clc
fadd
cmp
sti
inc
dec
test
cld
jle
or
push
jge
test
ins
dec
cld
sar
lea
int
loop
fcom
cmp
sbb
jbe
ror
or
sub
fdivr
int3
popa
dec
xor
fidiv
cmp
sbb
mov
out
sbb
dec
out
aam
int3
ret
jge
fstp
sbb
mov
stos
cmp
pop
xchg
fcomp
ss
or
jmp
pop
cmp
daa
popf
mov
pop
mov
xchg
jl
sbb
mov
stos
lods
fistp
mov
adc
sub
cmps
cdq
int3
cmp
in
sub
ret
sbb
(bad)
sti
std
mov
mov
shr
cmp
fsub
int3
jge
lea
and
mov
shr
(bad)
dec
sbb
lods
dec
sbb
rcl
jl
sub
or
pop
jp
xchg
jmp
cmp
enter
(bad)
ins
mov
int
popf
add
or
push
int3
fwait
sub
rcl
mov
jnp
fcom
or
ds
outs
adc
push
dec
jle
call
sbb
inc
cmp
mov
je
call
sahf
outs
clc
cld
dec
lods
out
ins
push
pop
gs
or
popf
scas
ins
(bad)
cld
sar
dec
jmp
cmc
mov
cmp
push
int3
movs
cmps
pop
mov
mov
xor
jmp
jmp
lods
mov
jmp
xchg
pushf
fisub
in
jae
cmp
xor
es
mov
call
cld
retf
pop
pusha
push
mov
or
rcl
fidivr
cmp
pop
int3
lods
call
mov
push
adc
adc
in
pop
cmp
push
cli
int3
arpl
call
int
retf
aas
shl
lods
mov
into
push
cld
add
stc
pushf
cli
xchg
sbb
pop
int3
sbb
(bad)
push
stc
cld
imul
mov
jmp
xor
jnp
push
shr
ins
sbb
dec
mov
aam
ds
data16
pushf
loop
loopne
xor
or
pop
mov
movs
sub
popf
pop
sar
cmp
jp
sbb
call
push
fstp
pop
mov
cmp
add
push
imul
fsub
ins
fdivr
fadd
cld
add
ins
neg
je
outs
jnp
mov
lods
adc
jmp
push
pushf
pop
test
retf
popf
rcr
xor
fdivr
lea
cmps
rcl
push
mov
not
loope
xor
mov
cmp
test
fistp
mov
sub
mov
add
sbb
call
dec
test
int3
pop
pop
sti
mov
adc
cmp
cmp
pop
dec
jl
lods
ds
inc
jg
push
gs
mov
dec
mov
aad
(bad)
jge
xchg
int
daa
add
xchg
imul
(bad)
lods
dec
sub
fst
sbb
scas
sbb
ret
pop
pop
jl
inc
sub
jmp
fwait
lahf
imul
cld
jmp
pop
cld
sbb
sbb
out
sub
lahf
aam
pusha
dec
(bad)
pop
push
push
clc
and
jne
push
ins
mov
aas
int3
rcr
retf
lea
mov
cwde
pusha
mov
int3
jbe
or
sar
push
dec
cmp
cmp
push
jecxz
cdq
mov
jl
call
sub
shr
fmul
fwait
stos
jnp
stos
jle
(bad)
lahf
das
les
and
ins
dec
cld
push
pop
xchg
rcr
cmp
jl
mov
in
push
pop
stos
dec
ins
jnp
xchg
dec
int3
sbb
mov
xor
imul
sub
or
sti
or
xchg
fsub
fcom
aam
dec
sbb
(bad)
stc
pop
or
fisubr
sbb
outs
sub
dec
jge
pushf
fwait
sar
in
sbb
ins
in
aam
sbb
int3
rcr
ja
clc
jecxz
xor
rcr
or
sub
cmp
jl
adc
sbb
sti
mov
fcomp
lods
inc
sub
jg
pop
das
jmp
imul
cs
fcomp
cmp
pop
shl
dec
mov
jne
lds
pop
sub
jle
dec
inc
in
ret
ror
ins
call
test
(bad)
mov
lods
xchg
cmp
sti
stos
fcomp
inc
(bad)
sti
mov
daa
mov
push
pop
and
test
js
scas
repnz
(bad)
fcomp
fidiv
cwde
pop
pop
jp
xor
popf
pop
int
call
imul
(bad)
(bad)
pop
aad
fsubr
lods
mov
ins
dec
ins
cmp
les
dec
pushf
fwait
or
stos
add
push
jmp
ffree
sbb
out
xor
call
mov
out
push
pop
cs
or
sti
mov
mov
shl
aad
fmul
lea
int
lods
push
enter
jmp
in
sub
(bad)
fdiv
jge
cmp
ins
pusha
sbb
stos
xor
or
mov
sub
xchg
adc
jg
mov
fdivr
int
dec
call
ret
jle
(bad)
std
aam
sub
cmp
cli
mov
movs
xor
sub
sub
mov
xchg
lods
xor
(bad)
loopne
and
hlt
aam
or
ss
pop
mov
mov
leave
aam
pop
mov
in
lock
aad
jp
aam
fwait
mov
out
cmp
mov
push
popf
pop
stos
mov
fcmovnu
js
lods
inc
cld
add
sbb
and
lock
sub
push
lods
dec
dec
sbb
sahf
out
push
cmc
popf
repnz
cld
xor
sub
mov
sti
cmp
jno
aad
xor
loop
movs
rcr
push
push
iret
clc
outs
sbb
lods
aam
gs
dec
jl
sahf
hlt
mov
shr
push
ja
mov
fcom
hlt
in
sub
sar
lea
lahf
push
pop
mov
cmp
pop
xlat
fucomi
mov
aam
sub
jae
xchg
fidivr
jg
fistp
dec
outs
imul
sub
lds
sbb
mov
rcl
movs
fmul
jge
std
scas
rcr
push
dec
pop
int3
or
mov
rcr
stc
lea
sbb
jmp
rcl
mov
adc
out
pop
adc
lods
cmp
std
test
mov
fdivr
sbb
pop
sbb
dec
sbb
jnp
sbb
mov
jge
retf
(bad)
fisub
mov
shl
dec
sti
mov
pop
inc
push
fldcw
pop
xor
test
mov
dec
mov
jnp
popf
fiadd
mov
dec
std
test
lahf
aam
mov
push
push
jmp
sub
dec
std
pop
call
int3
not
popf
cld
out
mov
sub
repz
push
fsubr
pop
pushf
mov
sbb
jo
jl
fist
lods
retf
sub
adc
ret
fsubr
icebp
push
pop
das
mov
add
aam
cmp
sub
fwait
(bad)
sti
or
sbb
mov
scas
sar
mov
or
repz
inc
into
adc
pop
iret
pushf
fdiv
fistp
cli
ins
outs
mov
stos
xor
sub
mov
fdivr
sub
xchg
pushf
in
mov
pop
cli
in
inc
pop
xchg
fdivr
pop
mov
outs
jl
arpl
imul
cld
jle
adc
fs
push
rol
or
sub
adc
int3
mov
jmp
fsubr
pop
repnz
sbb
jg
and
(bad)
cmp
pop
add
jnp
sbb
sub
ins
or
dec
popf
out
in
dec
pushf
in
inc
sub
mov
inc
mov
pop
cdq
mov
cmp
(bad)
cmp
jbe
daa
mov
pop
push
stos
sbb
fnstenv
mov
pop
sbb
jmp
fmul
imul
dec
or
stos
repnz
(bad)
lods
and
out
adc
imul
jge
dec
ins
ss
fstp
sub
jmp
fimul
mov
(bad)
ret
jb
aad
(bad)
fnstcw
sub
hlt
dec
adc
mov
inc
dec
sbb
jg
sbb
fdivr
dec
int
jp
gs
in
repnz
lea
mov
fcom
ins
call
mov
(bad)
fsubr
push
mov
jp
retf
jnp
lods
sbb
in
popf
fsubr
neg
shr
nop
les
in
aad
imul
or
sbb
mov
fcom
ins
adc
inc
test
sar
jp
mov
sbb
and
fisubr
sbb
sub
shl
jge
iret
stos
int
mov
mov
fiadd
movs
aas
sbb
cmp
in
jg
mov
dec
mov
dec
cmp
in
pushf
les
pop
rcpps
loop
int3
xchg
sub
sub
dec
pop
xchg
dec
shr
cmp
pop
push
pop
fdivr
push
sbb
int
(bad)
int3
sar
fdivrp
fstp
pop
push
mov
fdiv
or
sub
stos
arpl
fnsave
outs
out
mov
cs
out
pop
jmp
aam
int
in
fadd
and
mov
sub
popf
push
pop
popa
stos
fstp
ins
xor
xchg
cld
std
cmp
lea
bnd
mov
push
ja
mov
sub
cli
inc
fmul
ficom
(bad)
mov
mov
or
loop
ins
sbb
xor
add
and
imul
mov
fdivr
jmp
or
mov
(bad)
lea
ror
mov
rcr
lods
aad
dec
jmp
fwait
mov
sbb
fdivr
ds
jmp
or
(bad)
sbb
mov
pop
jnp
push
jmp
sti
(bad)
sub
fcom
jge
mov
stc
mov
cmp
test
dec
enter
xchg
sbb
ins
sbb
call
popf
stc
ins
dec
(bad)
clc
aam
paddb
and
ret
dec
push
sbb
pop
xchg
pop
int3
jge
sti
jmp
(bad)
or
mov
psubsw
fistp
fmul
ja
inc
mov
mov
and
dec
sbb
addr16
add
adc
jnp
fwait
ror
lods
das
fsubr
stc
push
(bad)
fmul
aam
sbb
jmp
test
mov
dec
fcomp
pop
lods
addr16
pop
stos
pop
inc
pop
ins
aad
mov
lods
lea
fdivr
jo
cld
sbb
sub
retf
dec
stos
or
fld
dec
shl
pop
mov
js
sti
sar
neg
int3
pop
ins
xchg
sub
fcmovnbe
das
mov
daa
rcr
fdivr
sar
scas
mov
push
pop
adc
outs
in
push
aam
dec
adc
fmul
cmps
pop
push
pop
jmp
scas
fmul
or
inc
cmp
mov
movs
mov
test
pop
int3
jl
cmp
in
aam
sbb
or
jle
or
in
bound
push
pop
inc
(bad)
aad
cmp
pop
sbb
cld
or
dec
and
(bad)
scas
jle
cdq
mov
mov
mov
cmps
ins
ins
jo
pushf
das
mov
mov
std
cmp
fdiv
int3
scas
ins
jbe
es
xlat
jmp
movs
pop
stc
fcom
pop
push
fucomp
sbb
push
ud2
or
pop
mov
sub
daa
or
dec
cli
or
popf
adc
ins
add
outs
add
sub
mov
dec
mov
pop
rol
popa
cld
adc
fucomp
arpl
add
sbb
mov
cmps
sti
mov
stos
inc
jmp
into
pushf
xchg
pop
jmp
jp
push
lahf
lock
lods
fdiv
mov
mov
fimul
outs
fwait
mov
jecxz
fmul
pop
pop
xor
lods
pop
dec
cli
lods
adc
ins
push
jp
push
sub
nop
sbb
gs
int3
sub
sub
sti
fild
test
jmp
fbld
inc
push
movaps
mov
fnstenv
cmp
neg
into
xor
dec
js
idiv
std
into
(bad)
mov
fcomp
push
push
cmps
jmp
aaa
lods
imul
aam
jmp
mov
push
mov
arpl
mov
cmp
sar
mov
popa
(bad)
fisubr
rcr
out
cmp
scas
jns
push
ja
int
test
fsubr
js
fist
sti
dec
bound
repz
push
int3
mov
fadd
int
popf
test
call
mov
sti
jge
sahf
mov
scas
fdivr
mov
fwait
dec
fcomp
ror
aas
pop
jns
mov
or
setns
cmp
in
mov
xchg
mov
ins
mov
mov
sbb
hlt
jge
fmul
ins
or
mov
ins
sahf
sub
in
mov
jl
jge
push
xlat
fdivr
add
push
frstor
mov
ret
or
push
stos
and
cld
dec
mov
xchg
sti
pop
leave
cmp
outs
pop
fadd
cwde
pusha
jne
lds
dec
ja
mov
mov
lods
lea
icebp
jecxz
sub
aam
arpl
dec
shl
repz
jmp
mov
mov
pop
fisub
fdivr
fwait
mov
sub
fmul
retf
adc
push
sti
sub
or
(bad)
in
mov
aas
fmul
dec
dec
ins
push
sub
push
sti
iret
(bad)
in
imul
lods
push
xor
outs
std
dec
pop
lods
sti
popf
pop
dec
xor
sbb
es
shr
jmp
sbb
cld
fmul
sbb
push
mov
pushf
push
cmp
or
dec
in
mov
not
sbb
pop
cmp
mov
jecxz
mov
pop
sub
ins
inc
lods
frstor
int
(bad)
xchg
pushf
jne
shr
xchg
jl
sbb
retf
test
sub
cmp
mov
aad
dec
mov
xchg
int3
(bad)
mov
jmp
std
hlt
push
ins
mov
daa
popf
lahf
mov
lods
fiadd
fsub
or
nop
mov
ins
nop
cmp
jmp
es
sbb
pushf
or
xlat
or
mov
int3
bound
(bad)
stos
sbb
mov
pop
pop
das
and
push
(bad)
rcr
add
mov
fst
add
repnz
sub
lods
inc
mov
ret
pop
sbb
inc
mov
fmulp
mov
mov
xchg
sbb
jnp
cmp
push
fist
rcl
inc
lods
std
jl
retf
mov
aad
neg
sub
mov
outs
ja
push
fucomp
(bad)
jae
std
mov
int3
fcmovnbe
jo
pop
cmp
sub
movs
mov
enter
je
add
mov
cld
mov
rcl
sbb
fisttp
or
fistp
aad
mov
imul
lea
fcomp
loopne
aas
lahf
dec
fmul
movs
std
sbb
test
sbb
sub
pop
retf
fdiv
pop
and
loop
sub
call
in
cmp
or
stos
pop
sbb
xchg
shl
(bad)
push
fwait
pop
mov
scas
sbb
imul
lods
push
push
mov
mov
enter
add
jle
sbb
je
ficomp
scas
jmp
cmp
sub
jl
out
pop
cmp
and
or
cmp
fcom
mov
pop
movs
retf
int3
push
cmp
jno
call
jmp
jne
xchg
mov
(bad)
ins
mov
mov
push
jmp
ret
das
adc
mov
sub
jmp
ret
in
outs
sub
or
jge
jmp
mov
fmul
out
jge
int3
jmp
aam
retf
in
mov
pop
sbb
ins
mov
mov
call
neg
jo
lods
fisubr
hlt
pop
fistp
cld
jnp
fdiv
fwait
or
(bad)
sub
add
(bad)
mov
mov
ins
pop
sub
dec
lock
ins
movs
fcom
int3
fidivr
pop
out
call
mov
lahf
(bad)
cld
outs
sbb
fdiv
cmp
jmp
sub
sub
push
int3
mul
jnp
lods
sub
sbb
pop
loopne
cmp
cmps
xchg
fucom
sub
jmp
mov
pop
sti
aam
cmp
mov
fldcw
in
out
(bad)
std
jo
xor
inc
fcomp
mov
imul
fmul
or
lods
fwait
cmc
sub
sub
cld
sar
lods
in
call
mov
hlt
ficom
jl
pop
loope
xor
sbb
fsubr
call
mov
aam
fild
dec
sub
mov
xor
push
jmp
dec
or
lods
lock
sti
out
sar
in
jl
mov
cmp
std
loopne
frstor
call
fcom
ins
add
fcomp
in
jns
push
retf
(bad)
lods
lea
test
mov
dec
inc
xchg
nop
rep
mov
call
mov
repz
outs
jl
cwde
push
rcr
sbb
pushf
pop
sub
mov
int3
sbb
mov
mov
pop
ins
fsubr
aam
add
xor
lods
push
int
imul
xor
in
fdivr
fwait
sti
pop
sub
mov
inc
cld
sub
lahf
push
jl
fxch
xor
mov
push
ja
std
add
pop
pop
out
pop
xchg
sbb
sub
aam
(bad)
fistp
popa
cs
mov
ins
sbb
push
(bad)
js
hlt
pop
fdiv
mov
jo
fmul
cmp
mov
imul
fs
sbb
mov
mov
nop
in
scas
fwait
inc
ins
fst
sbb
pop
icebp
sbb
push
xor
imul
or
cli
jnp
and
pop
retf
test
dec
std
sub
lods
mov
push
or
dec
fcomp
fisubr
popf
sub
dec
inc
cmp
fmul
pop
mov
fcomp
fs
jl
fiadd
int3
dec
inc
cmp
popf
fwait
xchg
int3
pop
ret
sbb
sahf
cmp
jmp
into
fst
push
int3
std
mov
xchg
lods
push
jge
dec
hlt
mov
popf
sbb
lods
add
cdq
sub
leave
sbb
fucomi
or
lods
lods
stos
jge
std
or
rcr
cmp
stos
fisttp
sbb
jns
loop
mov
lods
in
aam
and
pop
pop
adc
adc
mov
lea
inc
add
das
mov
fdivr
dec
mov
fcmovu
dec
cmp
in
push
mov
adc
and
push
jb
fadd
movs
lods
in
fcomp
sbb
mov
mov
cmp
sti
fs
jns
pop
call
pushf
out
inc
int
shl
sahf
fs
sub
xchg
cld
add
pop
xchg
std
pop
mov
mov
or
pop
pop
fmul
stos
jnp
(bad)
or
sbb
outs
aam
jmp
cmp
cli
mov
pop
push
mov
or
out
push
dec
push
int
int3
jecxz
retf
test
fwait
pop
stos
jl
pop
fcom
outs
cmps
dec
inc
fmul
ss
dec
push
mov
call
fmul
or
sbb
jmp
ins
mov
mov
std
fisub
stos
jmp
mov
dec
fld
cld
and
sub
imul
and
cmp
sbb
pop
cmp
adc
and
test
xor
cli
jle
movs
fadd
std
mov
fmul
pop
lods
cmps
mov
or
xor
or
cli
neg
int
sahf
sbb
dec
imul
or
shl
sub
dec
pop
int3
sbb
inc
cmps
cs
lods
xlat
sti
cld
movs
lods
test
test
pop
out
sti
das
xor
rol
pop
ins
dec
cdq
pushf
mov
inc
dec
aad
and
(bad)
cld
fdivr
adc
sbb
pop
cmp
fsubr
in
lods
jl
or
jp
fs
sti
xchg
sub
jmp
lods
pop
adc
into
jnp
fmul
sahf
lods
lods
mov
cld
sbb
jae
dec
fcomp
lock
jle
mov
lds
pop
mov
jmp
or
fcomp
ins
ror
in
push
pop
imul
ins
fcomp
int
ja
in
jb
aas
popf
or
out
mov
sti
jno
lahf
ins
push
pushf
fstp
fcomp
jmp
(bad)
or
stos
ret
cld
in
pop
fst
mov
popf
adc
fnstcw
inc
mov
in
fcomp
in
mov
mov
dec
ds
mov
es
retf
xor
int
jge
sbb
lods
ret
data16
(bad)
jb
data16
pop
or
fstp
stc
sbb
xor
pop
mov
push
fsubr
je
adc
nop
scas
sub
dec
sahf
hlt
xor
pop
pop
pinsrw
lock
or
and
call
iret
push
enter
push
xor
mov
loopne
stc
pushf
adc
sbb
xor
inc
ins
stos
mov
or
sbb
adc
int3
out
xchg
mov
(bad)
rcl
fdiv
aas
pop
das
mov
dec
jmp
dec
pop
jmp
cmp
jl
fwait
pop
imul
push
sub
int
jge
cld
sbb
fpatan
daa
or
(bad)
iret
mov
inc
(bad)
xor
mov
stc
cmp
jl
mov
ins
mov
sar
cli
mov
neg
aam
cli
cmc
mov
and
dec
lods
jp
or
mov
sti
fwait
mov
(bad)
jo
sub
sbb
pushf
dec
jge
push
inc
lahf
jb
(bad)
sub
ins
imul
ins
out
dec
sub
mov
into
sub
adc
push
ins
loope
fwait
xchg
fwait
cli
lock
out
mov
fdivr
outs
cs
int
test
inc
pop
add
mov
aam
retf
dec
int3
fadd
ins
bound
retf
add
sub
mov
sti
sbb
test
sub
adc
sbb
lods
mov
cmp
jnp
cld
jmp
push
movs
mov
mov
retf
sub
dec
jmp
stc
jmp
loopne
and
mov
pop
popf
xor
mov
mov
adc
ins
pushf
ds
dec
inc
push
stc
sbb
aam
std
retf
sub
ins
(bad)
shl
pushf
xlat
or
sahf
retf
or
push
rcl
int3
stos
cld
jmp
sar
mov
sub
int3
clc
(bad)
adc
cmp
popf
mov
adc
jl
jmp
shl
dec
or
aaa
mov
and
rcl
mov
cld
fwait
gs
mov
lods
xchg
fsubr
jne
pop
sahf
outs
fcomp
or
call
mov
sub
fdivr
loop
dec
add
imul
dec
jle
pop
aas
or
ins
movs
lea
mov
sti
fcom
mov
push
call
sbb
jle
inc
rcr
int
pop
fsubr
dec
ret
pop
fcomp
sub
dec
jmp
sub
xor
rol
(bad)
lds
call
clc
in
icebp
pushf
scas
cmp
inc
jp
mov
cs
push
xchg
imul
sahf
xor
jge
mov
sub
jmp
sbb
pop
inc
popf
(bad)
cmc
dec
pop
test
std
rol
daa
sub
adc
pop
cwde
dec
jl
push
mov
jmp
inc
rcl
mov
sub
or
adc
fsubr
xlat
jl
sub
fisttp
adc
mov
aam
sar
mov
xor
fdivr
in
jmp
mov
out
into
ror
mov
pop
adc
fs
mov
fsubr
lods
stc
dec
sub
ins
pop
mov
mov
(bad)
jmp
pop
ins
icebp
in
jg
or
jl
sbb
int3
mov
inc
inc
pop
adc
ins
cmps
sti
xchg
retf
cmp
add
stos
push
(bad)
mov
aas
lods
pop
rol
fcmovu
pop
call
sar
fcomp
std
repnz
sub
jmp
retf
cmps
rcr
fdivr
ds
push
mov
pusha
cmp
mov
fwait
pop
jecxz
ret
sbb
jmp
or
push
mov
jl
movs
fcomp
mov
dec
fdivr
jmp
sbb
push
pop
aas
test
popf
data16
dec
ds
mov
popa
jle
or
jne
data16
xor
(bad)
lods
lods
add
addr16
or
das
pop
jae
mov
sbb
mov
mov
imul
ins
out
ficomp
sbb
pop
xchg
sti
popa
pushf
sbb
imul
mov
ins
sub
mov
xchg
or
adc
sub
mov
and
sbb
std
(bad)
test
fsubr
push
(bad)
jnp
mov
cs
shl
sbb
jmp
retf
fdiv
stos
(bad)
cmp
cld
push
push
lea
push
sbb
mov
jmp
retf
ds
int3
fisttp
mov
or
std
dec
or
dec
(bad)
inc
sbb
(bad)
in
jbe
mov
mov
jl
add
sbb
sub
mov
inc
sbb
xchg
enter
(bad)
pushf
fsubr
and
fucomp
cmc
pop
std
pop
fmul
pop
mov
dec
mov
das
jp
outs
movs
ins
stos
popa
rol
imul
je
jge
cli
adc
fcom
sub
pop
inc
pop
into
nop
push
and
shl
fwait
mov
fcom
imul
lods
or
fmul
cmp
fcom
fstp
pop
sar
int3
(bad)
ins
popf
push
xor
xchg
cmps
ins
push
mov
jl
mov
hlt
mov
sub
fcomp
xchg
fucomp
fsubr
mov
push
dec
scas
call
mov
mov
rcr
sahf
outs
push
ins
xchg
cs
outs
fcmovnu
fmul
sbb
dec
and
fs
or
(bad)
ins
xor
sub
ror
xchg
cmp
lods
loopne
fdivr
(bad)
out
int3
push
leave
push
mov
dec
sbb
jge
cmp
push
dec
pushf
sti
jne
int3
into
(bad)
sbb
pop
lds
lods
pop
mov
mov
aas
mov
fdivr
sub
mov
mov
mov
ficom
jge
popf
adc
xchg
jl
not
ins
jle
(bad)
mov
dec
int3
loope
outs
mov
mov
pop
retf
int3
push
cli
imul
xor
push
aam
(bad)
pop
ja
int3
pop
popf
jno
sub
mov
mov
mov
cmp
push
rep
and
test
sbb
dec
out
jle
push
inc
or
jnp
imul
fmul
in
push
out
cmp
test
fwait
jnp
jmp
dec
sub
sub
fstp
mov
outs
cwde
jle
fcom
aam
push
jmp
jae
stos
push
fidivr
int3
sbb
cmp
lods
or
dec
jl
add
push
aad
cs
call
pop
fdivr
fwait
xlat
or
mov
das
shr
mov
xlat
pop
cmp
jne
mov
mov
(bad)
les
lds
loope
xor
aaa
push
fcmove
jno
call
ror
das
outs
call
cs
or
dec
fimul
das
jl
popf
sbb
dec
or
sbb
dec
(bad)
fcomp
and
dec
sbb
(bad)
scas
call
call
out
cmp
out
stc
dec
iret
into
fdiv
push
mov
mov
outs
or
cmp
jge
int3
addr16
push
inc
mov
pop
pushf
pop
push
fcom
cld
int3
mov
shl
lods
sbb
or
pop
cmp
sub
cld
into
gs
sbb
in
scas
dec
push
dec
ficom
pop
and
icebp
(bad)
neg
das
ror
sub
lea
jbe
xor
mov
jl
push
xor
xor
inc
int
std
mov
sub
pusha
mov
cmp
pop
dec
inc
fimul
retf
inc
fcomp
std
mov
(bad)
(bad)
in
dec
jmp
gs
jecxz
push
xor
imul
int
jbe
ror
shr
pushf
(bad)
pop
scas
add
and
mov
fcom
std
pop
jecxz
addr16
mov
popa
sti
inc
jmp
pushf
lea
int3
xchg
in
push
or
loope
lods
and
stos
icebp
lods
dec
mov
ror
xor
pushf
mov
xchg
jle
pop
inc
imul
sbb
sub
jmp
imul
xor
call
sbb
jns
sahf
scas
jae
(bad)
jmp
pushf
jnp
sbb
(bad)
cmp
(bad)
imul
retf
mov
cli
retf
test
sub
ins
and
pop
jmp
mov
mov
sbb
int3
sti
jecxz
pop
jl
jmp
shl
fld
rcr
sub
fcomp
lods
mov
iret
imul
mov
or
inc
aam
mov
dec
sahf
mov
lods
bound
rol
in
out
jge
mov
into
or
dec
out
pop
xchg
repz
pop
pop
in
cmps
fdivr
jl
jbe
mov
out
stos
and
xchg
(bad)
stc
retf
dec
or
outs
stos
push
xor
inc
std
inc
mov
sub
rcr
fdivr
sub
(bad)
push
pop
sbb
fcomp
out
stc
ficomp
jb
maskmovq
jmp
dec
dec
dec
ins
icebp
mov
adc
fstp
dec
push
and
mov
mov
sub
int3
lock
std
sti
dec
ins
in
mov
push
mov
jbe
int
ror
cwde
into
(bad)
inc
outs
jge
retf
inc
mov
cmps
pushf
sbb
ins
add
adc
sub
inc
ficomp
pop
add
mov
lods
mov
test
push
and
into
fild
imul
in
fdivr
pushf
loop
call
mov
jmp
jmp
cmp
sub
(bad)
loopne
xchg
push
inc
rcl
cmp
sbb
in
(bad)
(bad)
dec
cmc
lods
imul
dec
sbb
fist
int3
jmp
mov
mov
jmp
cli
xchg
mov
aam
nop
xadd
fsub
pop
mov
daa
jmp
cmp
cmp
sub
in
repz
fnsave
push
movs
in
out
movs
sbb
shl
sbb
pop
stos
sbb
inc
mov
push
push
fmul
int
cmp
fadd
cli
cmp
or
outs
mov
rcl
cmp
sbb
imul
movs
sbb
scas
outs
aas
ds
push
cmp
or
lods
dec
std
mov
xor
dec
push
cmp
pushf
add
dec
test
fistp
jae
jmp
fdivr
push
ins
sbb
pop
inc
test
(bad)
in
xlat
(bad)
hlt
sti
sbb
std
retf
cmp
xchg
(bad)
jl
pop
push
xor
fsubr
fsub
pushf
sbb
push
(bad)
pop
fadd
dec
cld
popf
jmp
push
sbb
pop
sub
cs
jle
daa
ins
int
sbb
fstp
sahf
in
pop
lods
pushf
dec
ins
pop
mov
je
fadd
int3
push
imul
inc
cli
(bad)
jl
jge
lods
fadd
scas
pop
cs
enter
je
inc
(bad)
shr
fsubr
mov
out
mov
dec
lds
inc
popa
fcom
push
pop
mov
pop
mov
adc
jge
mov
xor
dec
xor
xor
ins
mov
cmc
sti
sar
push
sub
cdq
pushf
clc
sub
dec
mov
in
aad
mov
fcomp
lods
rcr
fsubr
or
dec
pop
lods
mov
sbb
fsubr
call
mov
sub
mov
test
scas
or
addr16
fdivr
push
std
pop
xchg
sbb
or
test
cmp
mov
sbb
(bad)
cmp
call
ror
adc
dec
stos
sub
fdivp
sbb
jecxz
jns
sbb
cld
loopne
fcom
or
lods
xor
sar
fstp
push
scas
ins
retf
std
or
imul
int3
stos
fadd
or
popf
cmp
dec
bnd
pop
sbb
aaa
add
fdiv
cli
fdiv
pushf
sar
outs
pop
(bad)
es
and
pop
fnstsw
lods
or
retf
inc
dec
ret
pop
adc
xlat
js
aas
jp
std
sbb
xchg
push
aad
sbb
inc
fstp
sbb
dec
test
xchg
das
dec
outs
xchg
dec
push
jmp
fcomp
movs
jge
jae
outs
out
rcr
add
sbb
mov
imul
lds
fdiv
push
stos
fdiv
pop
or
sbb
pop
fsub
push
jnp
mov
cmp
or
cmpxchg
fcom
lods
imul
pop
mov
ins
fdivr
in
fwait
out
jae
add
sar
stc
sub
xchg
pop
fsubr
sbb
in
iret
ins
mov
shl
ins
icebp
push
sbb
rol
fstp
pop
fsub
or
imul
(bad)
fsubr
std
loope
jg
cwde
cld
fsub
dec
repnz
dec
ins
inc
ficomp
mov
or
ins
push
imul
scas
fmul
aam
jg
aam
or
test
and
ins
ins
push
mov
cmc
in
fs
rcr
sbb
jl
(bad)
cmp
mov
aas
fidiv
cmp
dec
mov
push
mov
fmul
mov
ror
add
sbb
or
adc
and
fadd
fwait
sbb
mov
(bad)
mov
aaa
sbb
or
aad
dec
imul
(bad)
ds
mov
sti
jmp
lods
ret
(bad)
rcl
outs
sbb
pop
mov
fdivr
jl
dec
pop
dec
cmp
cmp
hlt
push
sbb
dec
rol
ja
xchg
gs
rcr
push
fdivr
inc
in
push
fdivr
mov
jmp
(bad)
(bad)
cmp
stos
sub
cmp
ret
push
adc
or
hlt
in
sbb
pushf
test
mov
in
mov
fmul
or
sti
sub
jl
fadd
or
aam
loopne
popf
mov
cmps
sbb
mov
dec
inc
cmp
jno
das
repz
dec
(bad)
fcomp
in
fdivr
jnp
dec
dec
mov
mov
shl
sbb
ins
ds
sbb
mov
aam
sti
clc
lods
cmp
loopne
add
out
ficom
dec
lods
xchg
fcomp
mov
push
or
test
int3
mov
int3
iret
in
(bad)
xor
pop
lock
jl
mov
sbb
aad
fadd
jge
pop
(bad)
mov
mov
mov
fcomp
cld
cdq
imul
fcomp
pushf
fsub
sbb
push
scas
fadd
cli
lea
fxch
not
sar
imul
inc
jmp
(bad)
mov
stos
cld
dec
sti
int3
push
dec
mov
pop
pop
jne
ins
push
in
pop
sbb
sar
jle
in
cmp
jbe
mov
cmc
retf
fsubr
mov
sbb
sbb
dec
stos
xchg
repz
pop
jge
pop
push
sbb
xor
cs
outs
mov
daa
fisttp
xor
ja
popf
pop
and
(bad)
mov
lods
(bad)
aam
mov
xor
or
je
mov
sti
sti
push
push
fcomp
fcomp
cld
mov
cdq
cmp
fdiv
int3
mov
or
inc
(bad)
fsubr
hlt
sbb
std
cmp
call
aam
popf
ins
into
cmp
sbb
cmp
fisub
stos
push
pop
fisttp
jmp
add
sbb
in
popf
dec
sub
ss
std
xchg
(bad)
fsubr
pop
loope
lea
imul
xchg
mov
jo
loop
or
inc
pop
pop
cmp
sub
lods
and
mov
enter
inc
leave
int3
and
sub
pop
out
ins
call
std
mov
jmp
in
call
outs
(bad)
sbb
popa
sahf
sub
ffreep
pop
call
add
ins
sbb
and
cld
call
or
inc
cmp
fdiv
ds
sub
sub
cld
push
and
and
sub
nop
into
mov
fidiv
pop
add
scas
mov
stc
pop
fcomp
ds
push
in
xor
shr
mov
pop
lods
xor
mov
or
cmp
mov
aas
sub
imul
loop
jecxz
ins
popf
pop
mov
or
dec
push
pop
sub
ss
ins
addr16
push
mov
cli
hlt
or
aam
fadd
stc
std
dec
fcmovu
mov
loop
push
int3
pop
call
pushf
dec
dec
lahf
popf
push
sbb
aas
jge
mov
sahf
cmp
sbb
(bad)
out
push
test
fsubr
fmul
dec
lds
mov
ret
or
in
jl
cmp
sbb
fdiv
push
cld
adc
repz
or
sub
pop
mov
jl
aaa
lods
xor
fnstcw
or
outs
shr
fcomp
and
inc
mov
cld
jge
sbb
and
lea
scas
cmp
dec
pop
dec
(bad)
sbb
pop
int3
jbe
mov
pusha
retf
out
int3
int
les
or
lods
add
or
cmp
popa
cmp
mov
sub
les
ret
in
cdq
push
xchg
data16
lods
and
mov
pop
fstp
cmp
jns
pushf
into
stos
push
cs
dec
test
int
cmp
sti
push
lahf
dec
mov
xor
fnstsw
sub
stos
xchg
jnp
retf
dec
jmp
sub
pop
pusha
arpl
mov
in
movs
pop
cmp
lds
stc
pop
enterw
mov
xor
pop
sub
in
adc
mov
fwait
je
mov
lods
fnstsw
rcl
pop
adc
in
lods
jge
or
repz
(bad)
clts
aam
mov
pop
ins
lods
ins
(bad)
mov
mov
dec
ins
pop
cmp
fmul
add
mov
fsubr
or
cmp
jmp
in
jmp
push
fistp
aas
pop
dec
(bad)
outs
rcl
sbb
sti
cs
cmovnp
fwait
jle
in
fstp
lahf
scas
add
ss
lea
stos
ins
jmp
xor
jle
pop
push
jnp
fmul
sub
ins
sub
jo
rcl
popf
pop
sub
sbb
dec
rcr
and
stc
out
sti
(bad)
in
mov
xchg
pop
pop
daa
retf
push
sub
mov
lods
fsub
aad
pushf
dec
or
rcr
mov
ror
fwait
inc
fcmovnbe
xchg
sbb
mov
or
gs
clc
fsubr
jbe
int3
fsubr
movntps
mov
loop
sbb
add
(bad)
jnp
int3
mov
jne
mov
cmc
aad
mov
cmps
dec
push
retf
inc
sub
add
std
mov
imul
cli
mov
popf
fsubr
dec
mov
es
fsub
inc
retf
mov
int3
inc
in
out
and
dec
jge
sub
cmp
push
ror
jle
sahf
or
cmc
int
jge
sbb
pop
fmul
retf
loop
or
faddp
cld
jo
lods
mov
dec
sbb
fwait
pop
cli
rcr
sti
adc
mov
sbb
jl
hlt
add
jmp
dec
dec
mov
(bad)
and
sub
stos
rol
rcr
jmp
mov
jge
push
fdiv
pop
pop
in
aad
jle
stc
pusha
sbb
jbe
dec
dec
fdivr
pop
ds
hlt
pop
cmp
fmul
jno
adc
popf
push
scas
lods
scas
sub
loope
mov
inc
lods
sbb
add
fwait
rcl
adc
sbb
in
jp
mov
enter
and
mov
lahf
fucomip
jmp
ins
sbb
mov
pop
jl
repz
(bad)
das
ins
cmps
in
mov
sbb
cmp
cwde
in
cmp
pop
xor
ins
paddd
ins
mov
repz
fcom
fwait
pushf
mov
mov
fmulp
in
call
int3
test
pop
std
jmp
mov
ins
out
mov
cmp
js
jp
sbb
fcom
lods
(bad)
cmp
ins
or
outs
dec
fwait
aam
cld
outs
int
(bad)
mov
jno
out
or
(bad)
mov
ins
fdiv
cmp
xchg
(bad)
out
pcmpeqw
fsub
cmp
sti
pop
sub
sti
out
or
cmp
mov
pushf
lahf
jge
dec
movs
in
fdiv
cmp
fwait
cdq
fsubr
push
mov
mov
adc
fcomp
push
sub
movs
loop
outs
movs
pop
enter
ins
in
cmp
frstor
call
or
mov
push
fld
ss
xchg
jle
mov
dec
mov
pushf
mov
push
mov
imul
ins
pop
jge
mov
es
fcomp
imul
retf
and
mov
pop
pushf
pop
ins
fwait
jmp
adc
fcomp
cdq
das
xchg
fdivr
fwait
or
cld
jmp
loope
ins
ins
jns
mov
xchg
rcl
(bad)
push
pop
aad
dec
cld
push
fsub
jp
retf
mov
outs
dec
sahf
jmp
(bad)
cmp
mov
dec
rcr
cmp
mov
jno
leave
jge
sub
sub
mov
mov
loope
cmp
retf
rcr
jmp
sbb
dec
dec
outs
ficomp
mov
sbb
inc
sub
dec
imul
int3
and
ins
push
jge
fcomp
push
adc
sahf
int3
jle
(bad)
or
scas
pop
xor
pop
mov
dec
xchg
fnsave
mov
push
lods
int3
push
shl
xor
mov
fldcw
sub
dec
fadd
sub
jg
into
mov
ds
sbb
pop
(bad)
sbb
fadd
push
xor
aad
int3
jo
and
std
cmp
int3
aam
mov
loope
pop
push
int3
mov
mov
stc
or
push
fdivr
push
sub
ins
fsub
fnstsw
cmp
pushf
imul
mov
hlt
test
push
ins
aam
neg
mov
jge
mov
and
pushf
imul
clc
jae
fstp
cmp
int
arpl
lea
icebp
dec
popf
fwait
int3
mov
pop
jo
fmul
or
mov
dec
jb
dec
cmp
or
test
xor
lahf
lods
sub
daa
mov
jg
adc
sbb
scas
or
clc
mov
por
fistp
cmp
fmul
lods
push
cld
mov
test
test
cmps
sbb
jge
cmp
sub
dec
outs
popf
fs
leave
push
enter
outs
aam
push
cld
aad
ins
stos
lods
(bad)
test
aaa
sub
dec
inc
sbb
xchg
dec
jge
ins
inc
lods
push
mov
ret
fdivr
(bad)
mov
aam
dec
cmps
or
std
sbb
ds
mov
ins
rcl
pushf
add
fcomp
ja
ret
fwait
std
fmul
and
ins
repnz
cdq
jle
add
repnz
in
outs
sbb
add
fdivr
jl
daa
ficom
popf
add
xor
fmul
shr
fcomp
xchg
cmp
push
sbb
fwait
jae
add
mov
cmp
push
ins
push
(bad)
fcomp
push
sbb
lea
mov
jnp
push
dec
adc
shr
int
lods
mov
lea
aam
ins
push
loopne
push
pop
push
daa
sbb
shl
fistp
or
popf
pop
xor
arpl
push
mov
mov
sbb
stos
hlt
retf
lock
mov
fnstsw
or
mov
sbb
pushf
mov
cmp
pop
fcomp
dec
jge
pop
or
pop
clc
fimul
sbb
cs
push
mov
xor
jmp
into
aam
lods
cdq
mov
or
js
inc
pushf
mov
sub
sti
xchg
ins
cdq
out
fsub
jmp
or
(bad)
push
sbb
in
ins
ins
ja
pop
and
dec
ins
jne
push
push
out
mov
not
shl
mov
out
mov
fsubr
(bad)
in
xor
(bad)
jmp
imul
jecxz
jle
adc
jl
mov
fdivr
pusha
adc
and
pop
pop
cmp
fisttp
sbb
rcl
(bad)
fcomp
push
fcmovbe
cmp
ret
stos
lods
jp
lods
fsub
sbb
aam
ins
in
iret
sbb
dec
pop
pop
stc
jge
fisubr
fld
les
(bad)
popf
push
ins
dec
mov
das
(bad)
sar
int
leave
pop
pop
sub
mov
or
int3
nop
xchg
lods
mov
push
aam
cmp
mov
pushf
mov
mov
daa
sub
fimul
stos
dec
dec
retf
cmps
imul
inc
in
and
pop
out
ins
popa
sbb
stc
dec
fnstenv
pushf
or
mov
mov
cmp
movs
sti
sub
into
pop
aaa
fst
int
cmp
dec
jmp
popf
in
out
repz
or
ds
jne
inc
(bad)
fild
out
push
push
fnsave
jmp
push
sbb
sbb
mov
and
adc
lods
pop
inc
sti
cld
retf
adc
fsubr
pushf
test
aaa
ins
clc
cmp
pop
(bad)
rol
inc
ins
fsubr
cmp
xor
and
push
enter
xor
popf
es
mov
sub
cld
push
add
jmp
les
adc
sti
ins
inc
pushf
sbb
push
adc
push
cmp
pusha
cmp
dec
sbb
jmp
cdq
jne
jmp
mov
aaa
fisttp
lods
cmp
vrcp28sd
rcl
pop
retf
popf
sub
mov
mov
mov
fdivrp
lea
sbb
addr16
inc
cdq
sbb
in
xchg
mov
fdiv
aam
ins
in
int
ins
dec
push
pop
jo
mov
mov
data16
xchg
lds
not
mov
sar
jl
sbb
sbb
cmp
ins
(bad)
push
dec
aad
jae
jl
lods
mov
loope
js
(bad)
dec
popa
fcomp
ins
into
lods
cs
adc
imul
imul
mov
cmp
repz
mov
push
fsubrp
fdivr
sub
mov
mov
or
call
out
movs
cmp
mov
lods
push
scas
xchg
shr
fisubr
xlat
mov
dec
sub
jmp
lods
sahf
cmp
sbb
(bad)
aam
std
rcr
popa
dec
sbb
loop
aam
lods
inc
pop
sti
sub
sahf
add
or
sbb
shl
sti
cmp
sub
dec
mov
sbb
sbb
call
push
pop
lahf
nop
sahf
retf
leave
jl
div
jecxz
movs
or
push
dec
cwde
fcomp
sub
jl
in
push
jge
sti
fnstsw
in
add
add
std
stos
lods
cld
in
mov
mov
ins
aad
sub
and
xchg
ins
sbb
ins
fld
shl
(bad)
(bad)
or
jp
popa
sub
ins
mov
test
ret
jp
sbb
imul
push
ins
bound
dec
jmp
cmp
sti
push
or
faddp
dec
js
mov
fsubr
in
add
jbe
sub
sub
ret
cmps
stc
push
jge
ins
mov
xchg
mov
mov
jmp
or
scas
aad
mov
adc
aam
xor
fs
dec
not
xlat
mov
lods
and
jl
call
clc
jo
int3
js
cmp
fisttp
pop
xchg
push
xor
jl
mov
repnz
pushf
pop
popf
iret
lods
sub
push
inc
fnsave
nop
mov
mov
mov
(bad)
xor
cld
idiv
xor
add
cmp
lods
sbb
das
sti
shr
das
in
mov
ins
into
ror
movs
xchg
cmc
nop
sahf
popf
pop
rcr
cmp
xor
xchg
jle
adc
sbb
xchg
cmp
jno
ds
adc
push
jl
in
leave
dec
int3
nop
popf
add
xchg
lea
mov
xchg
push
cli
lahf
int
icebp
adc
repnz
dec
lods
movs
repnz
int3
cli
lods
add
mov
int3
cld
ins
jecxz
fmul
pusha
dec
and
ds
inc
fidiv
mov
mov
pop
in
jmp
sti
ror
mov
inc
fmul
sub
pop
loopne
cmc
fmul
cmp
repnz
sti
jmp
jecxz
fdiv
mov
push
push
jl
or
int3
mov
or
xchg
stos
aas
cld
xor
dec
shl
or
or
push
or
not
imul
mov
mov
xchg
sub
pushf
ins
sbb
mov
inc
int3
push
cmp
loope
mov
add
push
(bad)
xor
sbb
fstp
cmp
adc
mov
xchg
pop
frstor
repnz
ins
cwde
cmp
sbb
jne
xor
fstp
push
int
cmp
adc
ins
pop
scas
sbb
pushf
shr
cmc
mov
sbb
ins
xchg
cmp
sub
cmps
sti
shl
mov
loope
jbe
lods
mov
cld
out
clc
ins
icebp
mov
mov
inc
mov
sub
enter
inc
pop
jns
sbb
cwde
add
ins
imul
hlt
movs
mov
ror
scas
push
mov
pushf
aad
push
push
and
outs
into
retf
dec
dec
int
dec
xchg
into
cmp
int
xchg
push
pop
or
sub
mov
inc
mov
outs
hlt
aam
inc
cld
cmc
xor
cmp
xchg
xchg
lods
(bad)
fild
add
sbb
pusha
cmp
outs
mov
outs
mov
in
jge
cmp
int3
in
fs
mov
pushf
cs
cwde
rcl
test
adc
(bad)
pushf
jg
mov
mov
lods
xchg
dec
data16
pop
ja
xor
movs
shl
stc
push
in
fisubr
imul
or
outs
lods
(bad)
fwait
sbb
fnstsw
in
jmp
lods
adc
jge
movs
aas
cmp
push
cld
leave
dec
int3
lock
psllq
(bad)
mov
and
popf
aaa
sbb
mov
stc
out
pop
rcr
jp
mov
jmp
cmp
sub
(bad)
jmp
jl
mov
dec
pushf
adc
int
mov
or
dec
(bad)
pop
dec
jge
(bad)
sti
mov
popf
or
mov
idiv
scas
cmp
aad
pop
or
xor
mov
push
jg
hlt
dec
xchg
push
push
jmp
int3
in
mov
push
dec
dec
push
mov
xor
rcl
into
xor
adc
aam
dec
int3
push
or
sbb
movs
fnstsw
jmp
je
pop
rcl
and
sti
lea
popf
dec
neg
lods
and
pop
pop
mov
xor
sbb
and
repnz
fadd
mov
jl
pop
sar
cli
les
hlt
lods
cmp
test
mov
outs
data16
(bad)
(bad)
shl
push
inc
aad
or
xchg
call
in
sub
(bad)
pop
jl
int
int3
psrlw
fcomp
lea
adc
int
fsub
icebp
lods
sub
cwde
mov
mov
xlat
jg
aad
push
test
rcl
in
sbb
fistp
cli
retf
sbb
and
dec
mov
jp
int3
and
sbb
mov
or
or
mov
fidivr
jmp
or
neg
call
push
ins
inc
dec
jecxz
pop
repnz
int3
dec
push
sub
sti
cld
mov
push
lock
sub
imul
jns
and
mov
sahf
fs
mov
loop
inc
mov
pop
pop
xor
fld
stos
mov
cmps
or
lods
cmp
inc
call
fldcw
sbb
repnz
dec
clc
sbb
or
xchg
lea
outs
das
bound
mov
icebp
sti
fldcw
jno
aas
movs
pop
mov
adc
fcmovnu
ficomp
lods
into
int3
xor
mov
push
rol
pushf
sar
xchg
ins
cwde
int3
or
fnsave
jp
mov
jns
fwait
xlat
mov
daa
sbb
cmps
dec
pop
sub
jnp
dec
cmp
(bad)
cld
test
in
xchg
cmps
or
xchg
dec
(bad)
into
add
push
int
pop
cdq
or
ret
push
xchg
pop
jmp
aad
sub
mov
mov
ficomp
jl
pusha
and
lods
jbe
jmp
clc
mov
hlt
imul
(bad)
shl
nop
sbb
sub
mov
icebp
js
pushf
pop
push
call
fbld
fs
inc
inc
xlat
ins
xchg
pusha
push
push
mov
pop
jnp
aaa
dec
int
test
shl
xor
mov
mov
jmp
dec
ins
mov
jl
call
(bad)
mov
lods
(bad)
pop
cli
fisubr
mov
fisttp
cmp
jg
aam
ret
loopne
loopne
sbb
mov
cmp
jmp
jns
or
shr
add
cmp
jmp
int3
xchg
adc
jg
aaa
pop
xchg
mov
pop
test
cmp
scas
adc
clc
jg
pop
mov
sbb
cmp
sub
cdq
fdiv
xchg
frstor
hlt
popf
cs
lahf
cmp
ins
sub
cmp
pop
(bad)
int3
adc
pop
jmp
xchg
mov
add
pop
jle
popf
pop
dec
lods
ret
mov
into
mov
in
mov
mov
int3
shl
sub
sbb
clc
mov
aaa
push
hlt
xchg
xor
(bad)
cld
push
cmp
cmps
push
mov
ret
dec
dec
int
dec
fs
dec
or
add
pop
pop
ins
cld
(bad)
cmps
adc
xchg
jmp
sbb
push
out
fsub
push
fidiv
or
into
push
fnstcw
js
out
cli
sbb
xchg
mov
iret
cmc
pop
(bad)
or
sbb
push
mov
imul
cld
pop
sbb
xchg
sub
je
jns
in
sbb
dec
aaa
fsubrp
loopne
sti
bound
mov
clc
and
ja
and
jge
shr
fdivr
rcl
stos
sbb
sub
pop
xor
pop
repnz
inc
xchg
nop
or
pop
mov
loopne
sbb
mov
mov
sbb
daa
jmp
dec
mov
cld
pop
sbb
push
sbb
je
ins
mov
pop
call
cld
adc
pop
sub
mov
retf
adc
dec
adc
jae
mov
iret
movs
mov
sti
mov
push
mov
ficom
jno
ins
mov
mov
inc
push
sahf
cld
mov
sbb
rcr
adc
movs
mov
cmp
dec
rcr
cmp
mov
sbb
mov
mov
xchg
mov
mov
dec
mov
pop
fwait
nop
call
inc
cmp
outs
add
les
lods
pop
jns
aad
cmp
xlat
jge
mov
xchg
test
mov
or
ficom
stc
jbe
fwait
int3
adc
mov
in
test
adc
jmp
xor
cmp
mov
cmc
lods
fnstcw
adc
or
jmp
fsubr
cmc
mov
out
mov
jmp
int3
xchg
in
retf
or
sar
xchg
mov
ret
in
mov
cmp
jmp
sbb
mov
xchg
movs
(bad)
mov
xchg
or
or
outs
adc
stos
test
int3
push
retf
pushf
mov
rcl
push
clc
ja
int3
sbb
mov
lods
mov
leave
nop
jp
(bad)
loopne
or
movs
xchg
jl
jae
sti
int3
mov
push
test
lods
test
jmp
std
jmp
sub
xor
mov
inc
fs
outs
leave
push
cwde
loopne
mov
dec
mov
or
mov
arpl
xchg
push
es
cmp
int3
call
sub
adc
lahf
mov
fimul
inc
clc
pop
call
aad
cld
jae
(bad)
xor
lods
sbb
pushf
pop
fwait
enter
sub
mov
xlat
cmp
jg
div
sub
aas
sbb
fcom
xor
mov
nop
in
sub
lea
sar
pop
jmp
push
sbb
loop
mov
bnd
xor
pusha
repz
aam
cmp
xchg
mov
dec
cmp
shl
std
adc
(bad)
sti
inc
cmp
and
cmp
ds
adc
in
(bad)
or
les
fnsave
pop
ins
ror
std
jne
movs
cwde
leave
movs
xchg
mov
or
sti
mov
fbld
inc
fdivr
sbb
pushf
dec
adc
dec
inc
pop
dec
fcomip
cmp
add
icebp
cmp
int3
fdiv
cs
cld
jne
lahf
dec
test
cmp
sbb
icebp
mov
into
mov
movs
push
mov
cld
ret
sbb
rep
jg
mov
int3
repz
clc
or
stos
mov
pushf
adc
icebp
sub
pop
clc
cmp
adc
dec
loop
xlat
inc
ss
rol
lods
retf
push
dec
test
sub
mov
call
sar
sti
lahf
jmp
fcmovnu
jmp
cmp
les
shl
pushf
or
das
cli
xor
cmp
pop
in
lds
xlat
sti
loopne
lock
ja
cdq
cs
in
xor
inc
dec
jnp
inc
data16
cmp
loope
dec
push
ss
or
imul
cld
jmp
cmps
jmp
add
or
int3
popa
test
and
mov
icebp
jmp
in
cwde
cmp
xchg
dec
fsubrp
ficomp
xchg
jae
ins
xchg
pushf
ins
push
aam
int3
and
mov
shr
aad
ins
mov
pop
sub
int3
pop
ret
sbb
(bad)
data16
dec
ds
popf
sbb
stos
stc
mov
mov
xlat
aad
xchg
cmp
jae
sbb
xchg
popf
(bad)
pop
ficomp
mov
jge
xchg
pop
sar
xor
cmp
stc
xchg
ret
push
sar
mov
jae
pop
in
fdivr
je
bound
push
sar
or
pop
retf
pop
int
pop
xchg
sbb
rcr
pop
ficom
pop
repnz
xchg
mov
xchg
lods
mov
lods
push
mov
mov
adc
mov
dec
adc
sahf
out
mov
push
mov
lods
icebp
push
shr
pop
aam
add
out
pop
movs
fdiv
sahf
clc
je
sbb
cmc
ins
mov
dec
pop
jmp
les
into
call
retf
mov
adc
mov
push
fimul
fdivr
cli
aaa
loopne
inc
and
adc
stc
xchg
cdq
sahf
xchg
cdq
and
mov
xchg
mulps
(bad)
fimul
mov
adc
aaa
out
or
push
lds
stc
dec
pop
int
dec
add
aam
cmps
sub
test
daa
mov
cmps
mov
fsubr
jo
aas
sub
jl
out
mov
mov
js
mov
xchg
clc
sahf
lods
cmp
push
jb
aad
lea
pop
ins
test
ficomp
mov
jo
xchg
cmp
push
jbe
or
pop
jne
or
push
fstp
or
mov
int3
push
inc
inc
call
test
xlat
jb
sub
adc
pop
mov
mov
(bad)
cdq
int3
mov
cmps
(bad)
mov
mov
hlt
cli
or
mov
ins
sbb
xlat
in
mov
ror
out
faddp
fdiv
sbb
fs
or
cwde
call
cmp
in
ret
jecxz
pushf
pop
inc
movs
or
jp
mov
movs
mov
pop
push
dec
sbb
stc
mov
sub
int3
icebp
mov
cmps
sub
pop
dec
sub
hlt
lods
lfs
in
and
pop
sbb
iret
adc
rcr
jmp
jle
sahf
test
dec
pushf
int
xchg
mov
int3
stc
ins
xor
cmp
ficomp
jmp
sbb
inc
int
popf
pushf
imul
jne
test
mov
adc
mov
dec
and
add
jp
sub
jl
push
and
shl
ins
ffree
cld
mov
(bad)
fld
ins
test
inc
int3
mov
pop
cmp
or
call
aam
lea
shr
pop
or
loopne
inc
enter
mov
movs
scas
stc
jle
nop
dec
nop
jnp
(bad)
pop
jo
dec
in
addr16
rcr
stos
lods
sbb
fild
imul
test
lods
inc
dec
mov
push
fwait
push
jns
or
aam
int
(bad)
lods
jl
sub
ins
cmc
mov
ficomp
imul
or
pushf
jno
jae
dec
les
loope
repz
pop
pop
xchg
dec
fist
mov
adc
inc
dec
test
retf
inc
adc
ds
lods
fnsave
xor
ret
popf
fistp
std
dec
rcr
dec
rcr
lea
popf
test
xlat
sub
daa
or
lods
fisttp
sti
jge
push
jl
mov
jmp
out
fdiv
or
popf
in
(bad)
xchg
std
push
cmp
mov
sbb
fdivr
push
jge
lods
ds
jno
rcr
jl
fsubr
cmp
clc
mov
rcr
iret
outs
jl
dec
cs
adc
popf
or
retf
cmp
aam
jae
push
mov
int3
jge
in
cmp
push
mov
lahf
imul
enter
jg
pop
sbb
mov
loop
adc
sbb
jge
popf
jg
in
xchg
sar
ins
fsubr
sti
mov
mov
sar
es
(bad)
rcl
dec
cmp
mov
pop
adc
stos
call
mov
xchg
fmul
loope
retf
pop
out
fild
mov
cmp
addr16
fisubr
bound
fsubr
add
sbb
nop
stc
lods
pop
jnp
push
pop
int3
call
repz
rcl
mov
lea
int
sbb
pop
fidivr
dec
sub
mov
xor
fimul
mov
cmp
push
mov
stc
mov
data16
inc
mov
cld
nop
or
retf
mov
sbb
repnz
rcr
jmp
fimul
ret
mov
outs
int3
push
std
fs
lods
retf
iret
dec
call
sub
xor
sub
lods
mov
call
dec
xor
das
cmp
mov
jns
(bad)
hlt
cmps
pushf
add
ja
mov
imul
rcl
cld
sbb
fild
enter
ret
or
fsubr
das
or
xchg
jmp
cmps
mov
mov
add
lahf
int
ds
sahf
and
sub
adc
rol
sbb
sbb
jp
stos
lods
imul
push
mov
pop
xchg
jge
mov
mov
retf
fnstsw
cmp
cmp
dec
xlat
push
fdivr
jge
ins
aaa
dec
and
jbe
rcr
(bad)
fwait
ret
cmp
mov
sub
mov
fsubr
pop
scas
dec
push
cs
int3
es
xor
(bad)
add
adc
ror
cmp
pushf
fst
rcr
mov
xor
jnp
sub
jb
in
lods
cld
mov
inc
stos
ins
lock
lea
test
ficomp
retf
cmp
push
fucomi
mov
retf
cmps
or
dec
mov
pop
ins
push
lods
mov
pxor
repz
lods
cmp
and
or
fcomp
sub
jnp
mov
mov
jmp
sti
sbb
jl
int3
pop
std
sti
sub
cmc
dec
popa
rcr
sahf
and
sti
jmp
fdivr
pop
or
mov
push
mov
fwait
cmp
sbb
mov
pop
pop
dec
(bad)
mov
jge
fcomp
cmp
sti
mov
xor
aam
in
sub
adc
mov
rcr
pop
shr
sbb
sbb
inc
jle
mov
dec
lds
mov
pop
cmp
pushf
mov
fdivr
(bad)
jecxz
lds
aam
mov
xor
lahf
dec
push
into
in
xor
and
(bad)
(bad)
mov
int
mov
adc
ins
push
cmp
inc
int
lods
out
shl
cld
ficom
cs
(bad)
pop
mov
sbb
push
fsubr
mov
nop
mov
fistp
mov
sbb
mov
sub
cwde
cmp
mov
(bad)
retf
adc
int3
or
idiv
std
loop
ins
sbb
mov
cmc
fcom
out
sbb
jmp
pop
(bad)
jnp
jae
mov
(bad)
mov
mov
inc
std
aam
cmp
or
lods
sub
push
std
jp
mov
int3
jns
and
adc
jp
dec
mov
jmp
cmp
cmp
xchg
ins
in
fcomp
pop
(bad)
ins
push
sub
jge
dec
push
int3
ins
add
jg
cwde
sti
packssdw
jp
pop
push
lods
stc
rcr
gs
shl
in
retf
fmul
mov
imul
lods
mov
gs
fnstcw
(bad)
shr
rcr
hlt
ds
(bad)
clc
lods
and
call
sbb
pop
mov
cli
fcomp
push
in
push
jmp
sti
ds
(bad)
sub
dec
sbb
cmp
mov
pop
shr
sub
sti
xor
sti
cmp
xchg
add
cld
jnp
rcr
sbb
and
add
addr16
std
xchg
iret
fcomp
push
pop
push
sti
sbb
cmp
out
mov
jnp
ins
pop
fsubp
ins
lods
ja
neg
fsubr
jbe
cmp
stos
ins
cdq
jnp
cmp
sub
pop
push
adc
(bad)
pop
mov
(bad)
rcl
ins
fadd
mov
cmp
fsub
dec
ins
mov
sbb
repnz
add
jne
fadd
mov
test
xor
sbb
mov
lock
fsubr
out
icebp
inc
push
cmp
mov
mov
or
call
dec
aam
or
fisttp
push
aaa
imul
stos
mov
xlat
ins
cmp
loope
mov
mov
out
nop
rol
dec
(bad)
sub
jmp
xchg
ins
jl
aaa
scas
fisttp
mov
ins
lods
or
pop
mov
sbb
fcmovnbe
fs
or
fisub
xor
enter
into
push
out
push
pushf
cmp
lock
movs
push
dec
sar
mov
inc
sub
push
fdivr
add
in
or
fldl2e
jmp
sub
mov
mov
outs
push
lahf
lods
pop
pop
dec
inc
push
(bad)
dec
stos
mov
jae
mov
(bad)
retf
lods
cld
adc
dec
in
xchg
ficomp
push
ds
aam
mov
mov
push
fcomp
pop
sub
mov
in
imul
inc
aam
cs
dec
sti
in
cmp
lods
lahf
in
sbb
jnp
dec
sti
pushf
das
int3
dec
push
stos
in
retf
call
movs
scas
mov
(bad)
xlat
lods
test
pushf
sti
les
pop
xchg
push
rcr
push
(bad)
fcmove
scas
aam
mov
mov
(bad)
fidivr
jae
sbb
pop
or
sbb
rcl
cmp
int
std
ins
push
mov
inc
sub
pop
ins
ret
lods
into
dec
fsub
mov
int3
sbb
pushf
xchg
call
xchg
and
pop
fisub
fnsave
out
fidiv
fcomp
and
sub
sbb
jmp
repnz
adc
or
sub
(bad)
sti
fdiv
dec
enter
and
adc
out
in
aad
jmp
js
in
fdivr
or
lahf
mov
int
cld
push
stos
retf
jmp
pop
dec
jle
jns
jl
xchg
and
cmp
lahf
test
sti
dec
jmp
dec
pushf
jne
lds
std
adc
jl
dec
sahf
ins
imul
adc
dec
ins
mov
xchg
ror
lods
rep
cmp
pushf
mov
or
adc
jno
rcr
fisub
xchg
fdiv
dec
push
pushf
mov
movs
pop
dec
enter
adc
lock
mov
fild
test
sbb
sbb
sub
(bad)
cli
lahf
ret
pop
mov
fdivr
std
jb
pop
mov
pushf
lods
into
xor
pop
icebp
fmul
sbb
pop
fcomp
sbb
add
aam
popa
jge
sti
push
or
mul
psubusb
sti
dec
sbb
lods
icebp
sub
ins
loope
mov
dec
fdivr
xor
sub
mov
sti
aam
mov
int3
pop
lods
rcl
dec
jnp
fwait
mov
(bad)
push
add
aam
rcr
push
fmul
mov
jnp
dec
sub
cmp
inc
mov
fnstsw
push
push
fmulp
ins
mov
jmp
lea
shl
fisttp
fsubr
xchg
or
sub
xchg
jae
fdivrp
test
enter
call
cld
jne
out
movs
mov
scas
pop
outs
sar
pop
call
jge
mov
(bad)
ins
fidiv
jle
push
das
(bad)
shl
nop
sub
fmul
sub
fcomp
dec
aaa
inc
scas
dec
push
test
cmp
cmp
add
push
imul
sub
cld
xor
sbb
lods
sub
ins
or
sbb
jl
mov
adc
cmp
pop
sbb
pop
pop
fcom
sub
scas
shl
int3
mov
cmp
mov
lds
dec
push
pop
fnstsw
int3
daa
sbb
aad
dec
(bad)
arpl
sar
jmp
lods
cmps
lea
ins
mov
fidivr
sub
imul
and
test
push
les
dec
jl
sub
push
shl
and
ins
jle
sub
cmps
mov
mov
lods
bnd
mov
dec
rcl
xchg
dec
retf
stos
push
jmp
mov
sub
ins
push
(bad)
fnsave
rcr
pop
mov
or
stos
fimul
and
fcomp
int
aas
fdivr
pop
imul
fmul
mov
stos
sbb
in
mov
mov
jp
pop
mov
repnz
sub
or
sahf
in
std
sar
fiadd
dec
sbb
mov
or
cmp
fdivr
pop
mov
call
adc
mov
idiv
call
jmp
sti
(bad)
aam
int3
ror
fdivr
inc
ins
movs
fisub
xor
cmc
pop
popf
cli
shr
add
push
add
mov
dec
and
mov
ins
mov
cmp
or
xor
cmp
pop
sub
inc
fst
mov
sbb
push
fmul
(bad)
stos
mov
sbb
fldcw
setbe
fnstsw
sbb
(bad)
cli
pop
les
jmp
scas
jl
cld
out
lea
add
lahf
xchg
xor
call
jl
sbb
imul
or
lods
sub
or
fisubr
xchg
aam
sbb
mov
dec
pop
repz
push
aaa
in
nop
call
push
cli
gs
adc
pop
int3
sbb
xor
push
jge
jmp
stos
repz
lods
fcomp
pop
pushf
mov
ins
mov
xchg
cmp
mov
jl
lods
adc
jo
and
lods
clc
dec
scas
pop
mov
jmp
jl
mov
mov
imul
in
push
dec
sub
push
push
ins
imul
sar
lods
pushf
enter
push
inc
add
mov
fsubr
inc
mov
rcl
dec
push
lods
cmp
jle
pop
and
or
mov
out
call
xchg
fmul
mov
out
jmp
jp
cmc
shl
sbb
stos
inc
and
pop
mov
mov
cmp
int3
push
jnp
jmp
shl
mov
jge
int
(bad)
popf
stc
cmp
sub
mov
shl
pushf
(bad)
fsubr
xchg
lods
into
ins
and
cld
bound
(bad)
ins
push
fmul
jp
mov
pushf
dec
lea
sar
fstp
imul
stc
and
cmp
sub
int3
(bad)
adc
stos
popf
cld
repz
(bad)
xchg
cmp
pop
xchg
sub
retf
jbe
add
cmp
adc
sahf
popf
aas
lods
cs
push
xor
(bad)
mov
mov
adc
mov
sub
int3
test
cs
push
addr16
dec
inc
lods
pop
fdiv
dec
clc
push
(bad)
or
ins
in
test
mov
cld
fcomp
adc
lods
and
cmp
sbb
aam
jl
mov
fild
fs
shr
test
repnz
jb
sbb
lahf
mov
push
sbb
mov
bound
or
fist
pushf
hlt
cmc
jmp
ficom
mov
dec
pop
mov
jle
in
ror
push
rol
fisubr
es
or
in
rcl
push
lods
(bad)
repz
icebp
cs
adc
jg
(bad)
aad
(bad)
(bad)
shl
sbb
sbb
rcl
xlat
sub
jno
push
jge
out
shr
push
mov
ret
sub
dec
rcr
ins
xchg
lods
mov
in
and
sahf
popf
hlt
sub
lods
or
arpl
jl
pushf
sub
cmp
sbb
in
ins
ins
addr16
repz
adc
lods
retf
cmp
sub
mov
mov
lods
pushf
add
ins
cli
pop
jl
sbb
clc
lods
cld
adc
xlat
pop
popf
cmp
dec
fcom
jl
dec
int3
mov
or
push
rcr
fsubr
in
lea
dec
sahf
pop
xlat
ins
cmp
mov
pop
mov
fldcw
jp
xor
jg
das
jge
sbb
int
lods
fmul
in
add
sub
sti
push
(bad)
rep
pop
pop
sub
int3
int
push
fisttp
or
sbb
int3
lahf
pushf
sbb
add
aam
shr
push
adc
cmp
aam
popa
aam
in
loopne
out
lods
xchg
pop
test
sub
ins
mov
(bad)
jge
ins
retf
dec
xchg
call
gs
pushf
inc
mov
xchg
jl
mov
cwde
jmp
jg
adc
nop
(bad)
dec
fsubr
mov
sub
clc
pop
cld
call
in
scas
(bad)
clc
nop
lock
bound
push
shl
or
inc
sbb
add
or
sub
fcom
dec
inc
sub
push
cmp
pop
jmp
sbb
aam
sub
jnp
mov
popa
pushf
xchg
sub
rcl
mov
pop
inc
dec
mov
mov
adc
cdq
sub
pop
fcom
xor
sar
mov
pop
sbb
ins
fisttp
push
jmp
jnp
sbb
int3
int3
jb
mov
into
pushf
das
aam
or
test
cmp
mov
push
jl
inc
cmc
iret
or
(bad)
mov
pop
imul
sbb
xor
loop
inc
movs
sahf
(bad)
mov
mov
hlt
push
sbb
int3
dec
push
js
sar
sbb
and
loop
xlat
int3
call
fisttp
fwait
les
int3
fisttp
out
sbb
cwde
dec
and
nop
or
fild
fmul
cld
cmp
fnstsw
sub
lods
push
sti
jl
pop
pop
and
into
sar
hlt
(bad)
repnz
mov
int3
aad
daa
jbe
cmc
jns
xchg
xchg
jp
push
sub
mov
out
pop
pop
adc
leave
rcr
add
mov
jmp
data16
fs
rcl
cld
add
cmp
mov
xchg
mov
xchg
sbb
xchg
push
jne
sub
jmp
dec
pop
ss
imul
outs
shl
ds
jne
lods
adc
mov
mov
sti
fiadd
sub
enter
test
jb
push
sub
out
movs
aas
push
cmp
rcl
outs
fld
aaa
aaa
jp
popf
les
sub
pop
out
mov
jl
ins
scas
pushf
aam
inc
in
xchg
push
rcr
into
(bad)
cli
pop
pop
sbb
call
xchg
mov
outs
cmp
xchg
mov
sub
xchg
in
mov
pop
es
hlt
sahf
call
adc
xor
pop
dec
fisttp
cmp
xchg
adc
ror
fidivr
popf
dec
mov
in
je
out
mulps
cld
sar
jmp
pushf
sub
sub
popa
inc
push
fs
scas
ret
push
movs
adc
outs
pushf
mov
dec
iret
sub
mov
repnz
push
xchg
lahf
ds
mov
or
ins
lea
sahf
jp
mov
push
rcl
call
cld
dec
fstp
mov
cmp
cmp
pusha
fsubr
cld
jp
cmp
sbb
in
add
call
cmp
das
push
adc
adc
cmp
in
fisubr
cmp
adc
scas
lods
mov
(bad)
scas
jo
inc
mov
cmp
fsubr
mov
mov
rol
aas
xchg
pushf
dec
retf
cmp
pusha
add
int3
cmps
or
fmul
rcl
pop
dec
mov
les
adc
les
es
in
pop
sbb
ins
cmp
fld
aam
push
hlt
pushf
ja
dec
pop
jnp
je
push
paddb
aad
cmp
das
mov
sahf
imul
cwde
neg
loopne
jno
lahf
fwait
lods
mov
aam
fisub
stos
and
call
jae
fst
retf
loopne
fsub
push
adc
sbb
ss
jg
mov
xor
xor
stc
mov
retf
push
mov
mov
lea
xor
aam
mov
inc
dec
fst
mov
stc
stos
fstp
sbb
mov
sbb
or
cmp
shr
and
les
mov
ins
outs
jle
mov
mov
mov
movs
mov
adc
pop
adc
fadd
ss
mov
js
adc
mov
dec
mov
sahf
fcom
jl
sub
ins
push
(bad)
jmp
jae
pop
cmp
jmp
inc
movs
lds
mov
mov
lods
pop
xchg
sti
jl
out
and
es
(bad)
or
cwde
xchg
xor
sar
das
jge
dec
pop
ins
fcom
cmp
clc
cmp
sbb
dec
stos
mov
push
pushf
(bad)
int
dec
popf
(bad)
int3
int3
retf
inc
dec
movs
jl
pop
fnstenv
pop
cmp
call
lods
add
pop
outs
sbb
add
repz
sub
xchg
lods
cdq
fidiv
cmp
add
push
mov
cld
ret
pop
out
and
pop
mov
ins
mov
mov
idiv
cli
xor
mov
xor
adc
pushf
les
add
lods
icebp
fwait
stos
mov
int3
adc
mov
call
jle
add
inc
push
inc
(bad)
mov
retf
dec
dec
fidivr
sub
push
aad
xor
add
rcr
mov
adc
cmp
mov
shrd
les
mov
div
mov
jp
cli
push
jnp
sar
adc
push
pop
xchg
stc
mov
test
aad
jb
in
sbb
int3
jmp
mov
cmc
dec
rcr
dec
stc
or
cmp
dec
daa
cmp
jp
ins
bound
mov
aam
sbb
mov
int3
into
pop
call
rcr
dec
dec
ins
mov
div
xor
popf
cmp
(bad)
call
stos
xchg
test
mov
mov
stc
movs
mov
and
cs
mov
mov
jmp
es
sbb
cmp
cmp
push
stos
enter
fsub
sub
dec
in
fdivr
pop
int
out
mov
and
test
cs
fdiv
sbb
pop
push
pop
adc
scas
mov
repnz
cwde
mov
in
sar
cmc
jp
test
pushf
jno
inc
arpl
ds
lds
and
adc
xor
into
or
(bad)
dec
pop
pop
cmp
ins
lods
mov
jbe
lea
mov
fimul
mov
pushf
shl
leave
aam
shl
aam
push
outs
scas
int3
jmp
std
xlat
mov
fidiv
retf
fisub
cli
in
sti
ret
cmp
dec
jo
je
jae
(bad)
mov
xor
lahf
and
sub
es
retf
fdivr
mov
out
(bad)
out
stos
jecxz
jecxz
mov
jne
or
xchg
int3
rcr
lock
xchg
std
jne
cmp
dec
sub
cmp
or
sti
or
aaa
pop
jle
mov
fsubr
int
ins
jmp
sbb
div
inc
stos
mov
sbb
cmp
aas
lods
adc
data16
fiadd
pop
pop
nop
cmp
push
sti
cmp
fcomp
dec
int3
retf
fsubrp
mov
pusha
mov
lods
inc
ins
pop
jae
stos
fs
add
push
jl
pusha
jno
inc
cld
aam
adc
stc
sub
in
fdiv
je
jnp
xlat
jg
jmp
mov
enter
mov
pop
lock
(bad)
lods
sbb
in
paddq
dec
sbb
cmp
mov
pop
jle
adc
sahf
jl
dec
jp
jg
jmp
out
sbb
int3
pop
xchg
mov
fist
mov
cld
pop
jp
leave
pop
sub
fcmovnbe
sub
mov
in
rcr
or
repnz
cld
pop
xchg
clc
xor
int
movs
cmp
pushf
popf
in
adc
pushf
sub
nop
popf
mov
and
pop
cmp
mov
cmp
(bad)
mov
shl
add
sar
pushf
fidivr
pop
ret
sbb
jmp
cmc
push
idiv
push
aam
mov
cwde
enter
lods
push
pop
inc
xchg
mov
push
sbb
shr
dec
in
in
cmp
sahf
push
mov
les
shr
shl
movs
lods
lods
xchg
pop
cld
int
inc
mov
push
lods
pop
sbb
in
jmp
push
adc
movs
popf
and
fcom
(bad)
sub
ret
jle
mov
pop
sub
jo
push
aad
neg
movs
test
fs
dec
sub
cli
push
pushf
out
pop
adc
jae
push
lods
jmp
outs
or
imul
sbb
xchg
aam
pushf
mov
or
ins
outs
sub
loope
loope
hlt
mov
push
push
or
adc
shl
sub
jge
push
mov
sbb
fdiv
sar
stc
pushf
sbb
jmp
int3
lahf
fsubr
lock
adc
dec
or
or
sbb
rcl
dec
int3
add
mov
jb
(bad)
(bad)
fisubr
ins
xchg
jae
xchg
repz
(bad)
popf
xchg
or
lods
into
leave
mov
push
inc
xchg
stos
dec
inc
into
enter
movs
adc
movs
pop
dec
popa
inc
mov
cmp
pop
mov
daa
and
inc
les
call
pop
push
mov
rcr
stc
movs
fyl2x
lods
push
xchg
pop
lods
(bad)
adc
mov
jl
dec
mov
sbb
jnp
sbb
ins
add
or
adc
sub
fs
push
dec
xchg
jge
sahf
jg
(bad)
cld
lahf
cmp
mov
mov
inc
xchg
xchg
sbb
jnp
fdiv
scas
ins
cwde
jge
std
lods
xchg
cmp
mov
aad
cmp
cmp
loopne
dec
int3
(bad)
aam
lods
fs
outs
or
or
ds
sar
js
jbe
(bad)
ins
jl
jns
add
jl
int3
push
jnp
nop
ss
in
jae
scas
rcr
jl
push
rcl
cmp
push
(bad)
test
mov
or
sbb
rcr
ss
hlt
pop
int3
ss
cwde
pop
adc
es
ficomp
aad
sbb
mov
loope
pop
adc
fmul
pop
dec
jl
test
pusha
scas
test
out
cld
xor
sbb
jmp
sub
jb
imul
repz
fs
pusha
not
cmp
ss
add
fdivr
outs
pop
pushf
ins
or
cmp
pop
mov
shl
jbe
ins
fiadd
sbb
jle
or
pop
xchg
pop
mov
lods
adc
xor
jge
test
mov
fdivrp
popa
(bad)
push
fcmovbe
adc
push
cld
push
xchg
xchg
or
sbb
fisubr
scas
mov
repz
test
cwde
mov
int3
shl
fild
fnstsw
in
pop
jecxz
jecxz
and
fcom
cld
jnp
sbb
dec
pop
sbb
jns
push
das
ins
mov
ins
pop
(bad)
and
into
int
dec
add
dec
adc
jmp
sub
pop
hlt
push
rcr
imul
mov
aam
push
pop
lods
daa
jnp
push
int3
ins
push
cmp
ins
jnp
lds
sbb
in
rcl
sar
push
repz
adc
and
sub
int
fistp
xchg
jmp
pushf
inc
sub
jne
std
ins
lea
lahf
int3
mov
int3
sub
retf
sbb
jnp
lods
sub
or
inc
call
pop
retf
jl
sub
mov
jns
lods
leave
jmp
mov
sahf
rcr
jmp
xchg
cmp
movs
cld
out
push
push
xchg
add
cmp
pop
mov
mov
in
ins
ficom
dec
int3
test
lods
and
sbb
mov
mov
sbb
retf
sbb
scas
pushf
xchg
sbb
lds
mov
pop
or
or
sbb
retf
inc
or
cmp
xchg
sbb
mov
xor
mov
dec
out
ficomp
lods
mov
push
sti
and
sbb
pop
or
mov
out
fmul
imul
or
jl
or
jnp
jae
(bad)
aam
adc
shl
int
shl
mov
xchg
fwait
sub
mov
in
int3
push
loop
fistp
aad
jmp
fnsave
fsubr
int
fstp
pushf
mov
movs
icebp
rcl
push
jl
sbb
sub
gs
fnstsw
dec
popf
push
pop
pop
fnsave
add
lahf
push
sti
pop
jne
(bad)
jp
shl
push
test
cmp
pop
popa
enter
ins
pop
ret
int3
mov
xchg
in
fcom
inc
mov
pushf
cmp
jmp
(bad)
shr
cmp
adc
sbb
rcl
pop
sbb
mov
nop
adc
mov
pushf
outs
fcomp
ficomp
ins
nop
ds
in
adc
fisttp
fsub
mov
push
sbb
(bad)
mov
lea
push
pop
push
pushf
fcomi
(bad)
aam
xchg
jl
sahf
jmp
mov
lods
xchg
pushf
popf
int3
or
in
shl
sbb
pop
sub
dec
pop
inc
fdivr
sbb
mov
ins
rcl
or
out
mov
sbb
jge
add
mov
push
or
in
inc
jp
fcom
ins
aas
pushf
mov
push
outs
mov
sbb
xor
mov
cmp
in
shl
mov
xor
pop
popf
jns
clc
sbb
stos
lods
cli
clc
push
clc
mov
push
mov
imul
jno
xor
jecxz
ds
mov
in
js
jb
pop
call
xor
mov
sti
jecxz
add
pop
dec
loopne
or
ins
dec
mov
(bad)
and
fsubr
mov
in
sbb
fucomp
into
inc
pop
or
std
pop
int
xchg
dec
fdivr
fwait
xor
retf
sbb
mov
aam
(bad)
pop
jmp
push
popf
push
inc
and
jns
pushf
aad
hlt
mov
ins
or
je
cmp
js
cli
mov
lods
enter
mov
js
ds
aaa
jl
adc
mov
into
ficomp
push
push
push
push
xchg
and
xor
test
add
stos
push
mov
push
sub
mov
pop
or
jge
push
movs
inc
jecxz
cdq
fstp
fdivr
mov
int3
jle
mov
sbb
popa
shl
inc
jp
aas
shl
ins
call
aam
push
lods
in
sbb
mov
xchg
cmp
and
mov
jp
mov
mov
or
inc
jno
or
lods
mov
(bad)
xchg
repnz
adc
sahf
adc
adc
or
imul
jg
or
pop
add
pop
repz
fidiv
mov
mov
mov
dec
std
mov
and
sahf
ins
mov
mov
xor
rcl
icebp
dec
jl
mov
pushf
lock
shl
mov
rcl
pop
mov
xchg
mov
dec
mov
adc
and
fild
loopne
adc
adc
mov
into
ss
(bad)
(bad)
rcr
cmp
fisubr
inc
sbb
int3
xor
cs
or
push
fcomp
ss
sti
stos
lock
mov
in
adc
mov
fdiv
jle
mov
int
in
push
lods
xor
lahf
stos
fsubr
or
mov
pop
outs
push
call
xor
pop
jo
xchg
enter
push
cld
sub
mov
cmp
push
shl
pusha
fsubr
ror
ficomp
clc
loop
mov
ja
jge
cmp
mov
ror
pop
inc
popf
rcr
sbb
out
lods
shr
pop
stos
fsubr
sbb
cmp
or
mov
xchg
sub
daa
pop
and
jbe
repz
push
fdiv
in
test
cdq
push
mov
ins
ds
push
jl
pop
mov
sub
cmp
pop
test
sbb
pop
sub
xchg
jns
jle
pop
cld
stos
lods
xchg
lods
ret
pusha
(bad)
(bad)
adc
(bad)
xchg
push
rcr
adc
(bad)
mov
mov
push
ins
aad
sbb
mov
mov
mov
ror
push
dec
into
add
jnp
fimul
test
cdq
push
sbb
sub
xchg
xor
xor
fwait
mov
push
sub
jl
mov
(bad)
icebp
lods
push
pop
jle
ins
sbb
cmp
dec
lahf
sbb
mov
jmp
adc
not
mov
pushf
sbb
lods
sub
ret
popf
jmp
(bad)
aaa
test
sbb
adc
lods
loopne
cmp
lds
retf
fcom
sbb
mov
pop
inc
ins
pop
sbb
mov
dec
fistp
int
das
push
lahf
in
adc
addr16
sahf
iret
mov
ds
sbb
aam
add
mov
scas
mov
inc
rcl
aas
sahf
imul
jg
xchg
popf
mov
dec
adc
mov
sub
lods
sub
jmp
mov
jnp
das
sar
cmp
xchg
mov
push
clc
daa
nop
add
xchg
jmp
call
call
aaa
rol
sbb
dec
cmp
xor
push
fst
xchg
jmp
std
jmp
shr
cld
fcom
ins
in
xor
(bad)
cmp
mov
lods
enter
ficomp
stos
sub
jmp
js
(bad)
sbb
cld
and
inc
in
jmp
inc
sti
xchg
jae
push
and
mov
mov
jns
fiadd
cmp
fstp
popa
pop
call
adc
adc
mov
loope
push
xchg
lock
div
(bad)
push
ins
fstp
loope
sub
in
int3
stc
sub
jmp
pop
adc
mov
(bad)
repnz
in
mov
or
int
repnz
cli
loop
fmul
ins
fidivr
pop
ins
mov
ins
cmp
pop
adc
jl
(bad)
mov
cli
movs
dec
ja
pop
pushf
pop
int3
xor
pop
add
xchg
les
in
mov
push
popf
(bad)
repz
fidivr
push
mov
push
in
ret
or
int3
mov
sbb
popf
in
push
lods
lea
adc
arpl
mov
push
icebp
mov
jmp
int3
lds
dec
cmp
aam
mov
fcomp
sub
dec
dec
fucom
ins
mov
push
mov
sbb
jecxz
sub
repnz
les
pushf
leave
ss
xlat
jmp
movs
or
xchg
pushf
aaa
rcl
je
sub
inc
in
sbb
je
repnz
stos
inc
popa
pop
retf
mov
jne
ins
cmp
arpl
les
sbb
in
not
loop
mov
cmp
xchg
lods
mov
sar
(bad)
xor
mov
sti
loopne
aam
clc
sub
popf
pop
sti
cld
mov
jp
fdiv
lea
or
sar
fcomp
cmp
call
dec
mov
rcr
sbb
fwait
mov
pop
jnp
lods
(bad)
jl
dec
jle
ins
jb
sub
repnz
mov
xor
push
pushf
(bad)
mov
push
jmp
mov
shr
xchg
pushf
aam
push
ja
add
or
xchg
jmp
je
aas
lods
cli
cld
in
jne
out
push
adc
mov
ins
jnp
sbb
or
aam
retf
test
test
inc
pop
jl
ins
and
jns
dec
in
pusha
(bad)
fcomp
push
fisttp
jp
jl
sbb
or
repnz
fwait
adc
pop
jns
sub
(bad)
pushf
pop
mov
push
ds
lods
test
cmp
jne
pop
sbb
rcl
sti
in
xchg
dec
into
pop
hlt
jmp
rcr
push
fisttp
jl
inc
int3
fild
(bad)
mov
push
(bad)
mov
add
je
(bad)
lods
sar
cmp
cld
sub
out
add
inc
cmp
fld
xchg
or
(bad)
lock
sbb
(bad)
(bad)
sbb
ins
test
lahf
std
cld
int
out
iret
mov
lds
mov
dec
or
aaa
in
adc
lods
aad
pop
cs
pop
and
mov
dec
sbb
pop
mov
push
push
ficom
fcmove
ficomp
fsubr
das
lods
fisttp
mov
int3
fld
cli
into
mov
sbb
fsubr
push
jge
push
mov
dec
lea
mov
sbb
xchg
cmc
fist
cld
or
jmp
shl
add
mov
dec
test
adc
mov
cmps
jns
jmp
dec
dec
ins
cmp
fidivr
das
(bad)
test
aad
mov
popa
test
sar
int3
(bad)
sahf
retf
aam
adc
pop
dec
sahf
sbb
in
aad
loop
pushf
fcomp
jmp
sub
sti
movs
int3
fwait
cmps
or
lods
call
fsubr
(bad)
fisubr
ds
cmp
scas
jne
pop
ins
mov
push
mov
loop
fld
cmc
rcl
sahf
push
mov
cli
pop
or
fistp
aad
sub
ins
or
retf
test
pushf
dec
sbb
fcomp
int
pop
or
rcr
ds
les
out
push
inc
pop
test
jl
mov
fdivr
fndisi(8087
dec
lods
cmp
sub
push
jmp
pop
lods
cmp
ins
clc
fst
pop
scas
jmp
ret
and
imul
sub
outs
ins
xchg
(bad)
fmul
mov
int3
sbb
rcr
mov
fcomp
dec
int3
cmp
cmp
cmp
cmp
adc
lods
pop
sub
retf
(bad)
lahf
mov
ds
(bad)
in
aam
pushf
ss
pushf
test
pop
aas
sti
clc
mov
xchg
shl
rcl
pop
lods
cmp
cmp
cwde
mov
inc
fmul
add
sub
xchg
sub
mov
ds
jbe
int
ds
setle
pop
cwde
or
call
repz
sub
ins
lods
cmp
sbb
xlat
or
bound
jnp
adc
dec
daa
movs
sub
movs
int3
fcomp
adc
ins
mov
aaa
cdq
push
sbb
mov
adc
sti
push
(bad)
xor
adc
jl
stc
jnp
fdivr
pop
mov
dec
xchg
int
fs
fmul
sbb
fisttp
repz
and
jl
xor
dec
jae
dec
ins
sbb
pop
adc
(bad)
dec
pop
ds
push
jge
loop
mov
push
jmp
sub
fdivr
fisttp
push
ins
push
pop
jmpw
fwait
int
mov
daa
aaa
adc
dec
push
or
sbb
mov
jae
(bad)
bound
popf
addr16
rol
pop
xor
mov
enter
mov
movs
xlat
mov
pop
jmp
push
ins
jmp
stos
dec
je
stc
fild
inc
inc
dec
sub
cli
sti
mov
ins
ret
sub
fs
js
popf
fcomp
outs
mov
and
pop
pop
popa
std
lea
or
fs
pop
or
inc
jmp
sbb
cmp
dec
stos
or
pop
sbb
mov
not
mov
adc
jl
mov
fistp
push
push
sub
adc
pop
cld
in
xor
std
jmp
mov
sar
cld
xor
push
or
dec
jg
add
add
xor
dec
pop
in
jmp
mov
cmp
out
mov
mov
mov
lea
xlat
pop
test
aam
dec
xchg
popa
pop
mov
sahf
out
fidivr
mov
cdq
int3
pop
scas
push
sar
clc
mov
ror
and
dec
cld
jl
mov
into
sub
call
lods
sub
pusha
mov
jmp
or
fidiv
mov
call
xchg
pop
xor
in
fcomp
sbb
xlat
or
ins
cmp
lods
sub
in
call
lods
rcl
mov
jae
mov
dec
popf
sub
mov
leave
jecxz
jmp
out
out
movs
pop
or
rcl
mov
xor
jl
mov
dec
inc
pop
aad
dec
fidivr
repz
sti
xchg
sbb
mov
xor
aaa
int
call
outs
in
std
fld
push
push
mov
dec
fs
mov
(bad)
ja
or
fcomp
mov
push
ins
int
dec
and
pop
imul
sub
stc
mov
and
sub
sub
mov
cmp
lock
sub
arpl
loope
jl
adc
inc
inc
or
pushf
xchg
ins
mov
jne
les
sub
jmp
xor
outs
xchg
mov
push
jmp
lods
mov
mov
hlt
or
pop
xor
push
call
lea
pop
dec
int3
sar
sub
mov
sbb
sahf
ja
pushf
mov
loope
dec
jmp
stc
or
fstp
sbb
rcr
jge
pop
xchg
int3
jp
mov
pop
call
repz
and
sub
pop
add
movs
cmp
loope
mov
lods
fcom
cmp
jmp
mov
cld
sbb
lods
push
aam
cdq
sub
pop
pop
sbb
icebp
into
sub
or
sbb
and
cmp
call
ins
shl
neg
fwait
pop
int3
in
or
pushf
mov
mov
mov
retf
add
adc
dec
jecxz
repz
xchg
adc
jl
mov
push
out
shl
mov
or
fcomp
mov
rcr
lods
and
add
in
sti
dec
pop
imul
clc
mov
cmps
xchg
scas
inc
lods
in
mov
mov
(bad)
fwait
rcr
mov
test
fsub
push
sbb
cli
(bad)
loope
adc
aad
cmp
push
xchg
mov
lods
cmp
aam
dec
retf
jmp
scas
rcl
xchg
cld
pop
sub
addr16
cli
pop
icebp
clc
add
cld
or
push
jmp
(bad)
mov
cmp
aam
jge
in
ja
ins
jo
or
not
lods
scas
or
sti
dec
nop
jmp
jne
xor
mov
rep
pop
sub
ins
lock
movs
adc
xchg
dec
fcom
adc
test
and
pop
sti
inc
int3
loope
push
in
push
push
addr16
mov
cmp
int3
jnp
sbb
stos
cmps
jl
fcomp
addr16
rcr
or
inc
mov
shl
in
enter
jecxz
cld
mov
pop
dec
sar
pop
or
in
adc
ins
shl
lock
dec
sbb
fstp
fcmovu
cmp
lock
enter
push
sub
stc
jmp
mov
mov
dec
pushf
jne
cld
mov
mov
xor
call
jmp
imul
pop
hlt
mov
lods
call
lock
shl
dec
sahf
call
mov
add
lods
mov
jae
dec
pop
in
cmp
test
lods
aaa
aam
dec
inc
int3
jge
fsub
xchg
sbb
(bad)
sbb
jl
aam
lods
mov
(bad)
cmp
icebp
and
ret
pop
aad
jl
push
cmp
fisttp
jb
arpl
sbb
mov
pop
add
test
jg
adc
mov
neg
icebp
imul
cmp
lods
neg
fld
jl
daa
adc
out
lock
lods
cli
mov
cld
sti
inc
and
sahf
stc
retf
cmp
stc
sbb
sbb
(bad)
jmp
mov
cld
sub
aam
push
cld
imul
or
fdiv
shr
sub
lea
mul
or
xchg
xchg
sar
or
sbb
or
adc
mov
push
sub
pushf
or
lods
call
cmp
ins
bound
and
aam
imul
pop
or
fdiv
lods
inc
pop
call
scas
fadd
mov
jmp
aaa
pop
and
fdiv
sbb
fdivr
push
mov
into
cmp
(bad)
sbb
mov
and
dec
jmp
mov
lock
xor
les
xchg
cmp
xlat
jl
lods
mov
xchg
mov
lods
retf
fdivr
jge
imul
not
ffree
dec
sub
aaa
aam
pushf
adc
dec
std
sub
and
mov
(bad)
lods
xchg
dec
cmp
or
mov
ins
test
mov
les
out
js
mov
ins
into
cmp
fdiv
or
hlt
or
pop
fcomp
ins
ja
pop
xchg
mov
xor
ds
cmc
cld
xlat
repz
out
lods
xor
lock
stos
ret
stc
jmp
ins
push
sub
loope
jl
lahf
int3
push
dec
stc
push
dec
pop
imul
xchg
jmp
sti
sub
dec
stc
mov
jno
mov
fdiv
in
cld
test
shl
lock
jo
ins
mov
mov
out
sti
addr16
scas
lods
cdq
mov
dec
out
mul
mov
push
or
mov
test
hlt
dec
jp
pushf
sbb
cwde
sti
rcr
inc
scas
push
or
adc
adc
or
popa
inc
push
cmp
ja
inc
ins
mov
jl
(bad)
inc
lods
push
mov
push
mov
cli
std
(bad)
mov
fmul
sub
jl
sahf
pushf
fstp
popf
je
xor
push
faddp
ins
inc
dec
lea
jge
mov
ficom
sub
xor
sbb
mov
mov
shr
ins
jnp
dec
jne
lods
fdivr
pushf
aad
pop
fsubrp
loopne
mov
ficomp
imul
fwait
lea
dec
jmp
clc
div
push
push
push
dec
gs
je
mov
fwait
sbb
arpl
(bad)
pop
jl
sbb
ficom
test
aad
leave
ret
lahf
cld
aad
push
sub
mov
cmp
sub
repz
repz
dec
fsub
in
and
push
stc
jno
(bad)
push
lods
or
test
arpl
pushf
jmp
div
nop
out
dec
add
mov
fs
mov
cli
scas
adc
jae
sti
mov
sub
call
pop
(bad)
int
push
out
xor
push
out
and
dec
jbe
fs
push
neg
jg
pop
sub
mov
pop
test
gs
mov
push
push
cdq
lahf
ins
or
xchg
and
cmps
fstp
sub
add
lea
sub
sar
fwait
in
test
call
jecxz
mov
fs
mov
nop
mov
aad
cmp
dec
(bad)
icebp
or
or
mov
sub
int3
xchg
pop
clc
mov
push
ins
jbe
outs
aad
add
jnp
rcr
cld
aad
sbb
into
in
dec
add
ret
push
mov
into
mov
push
mov
repnz
hlt
es
aad
stos
inc
lods
cmc
fstp
adc
cs
test
mov
es
lods
enter
(bad)
mov
fmul
sbb
int
ds
cmc
fdiv
fidivr
mov
pop
and
sar
mov
sub
call
idiv
dec
pushf
cmp
xchg
retf
clc
pop
mov
sbb
aad
fs
aaa
xchg
movs
je
mov
popf
xor
mov
test
mov
ins
mov
mov
mov
mov
push
data16
or
fst
in
dec
pop
idiv
mov
push
fdivr
cmps
in
inc
shl
sbb
mov
(bad)
jne
cli
inc
add
push
std
mov
sbb
xor
push
mov
lods
dec
sahf
arpl
cld
jmp
je
xor
mov
lods
mov
shl
push
sar
call
iret
shl
sub
rcl
pop
stc
movs
fcomp
or
lods
adc
lods
hlt
les
mov
leave
dec
ror
sbb
sbb
sti
(bad)
pop
sti
stc
fistp
cmp
in
les
enter
push
pop
lods
dec
fnstenv
push
aad
dec
popa
jge
(bad)
mul
ficomp
dec
mov
push
mov
pop
ds
pop
adc
add
aas
(bad)
push
scas
dec
and
push
pop
push
mov
pop
fwait
je
int3
adc
clc
fcmovu
repnz
loop
mov
scas
adc
rcr
mov
jle
call
xchg
sar
sti
jle
sub
cmp
rcr
pop
pop
sahf
and
imul
jle
stc
sbb
call
mov
sbb
data16
rol
dec
aad
outs
shl
ficom
cmp
push
push
aad
cdq
cld
fisub
out
adc
or
rcr
xchg
sub
cmp
push
xchg
dec
pop
adc
int3
and
in
xchg
pop
adc
leave
jnp
mov
adc
dec
iret
push
cmp
pop
mov
cld
ret
or
pop
xchg
inc
pop
push
call
xchg
sti
sti
cmp
pop
cli
test
ret
dec
xchg
hlt
push
loopne
sbb
pop
sti
ins
test
jge
lea
loop
icebp
or
push
pop
cs
dec
mov
mov
cld
aam
int3
addr16
sar
stos
or
(bad)
pop
mov
daa
or
mov
popa
pop
mov
jo
je
pop
test
jp
(bad)
fwait
ds
jecxz
inc
neg
pushf
mov
fistp
dec
test
sub
int3
push
repz
push
and
jge
shl
ror
ins
out
jbe
jmp
ret
sub
mov
and
popf
mov
aad
sbb
fdivr
retf
cld
xor
sub
loop
push
dec
popf
push
sub
jmp
jge
mov
dec
push
jne
pushf
cmc
int3
imul
cmp
lods
pop
push
pop
xlat
jl
hlt
sahf
dec
pop
nop
mov
dec
xchg
mov
inc
int3
cmp
xor
add
pop
ret
xor
xor
push
int3
cmp
push
sbb
dec
cld
into
xchg
pushf
es
xlat
jae
xchg
fidiv
fs
fs
test
cmp
fiadd
sar
outs
(bad)
push
fdivr
call
ror
fcom
fst
(bad)
jne
sar
aad
aad
sub
(bad)
fadd
pop
fisub
outs
enter
push
sub
mov
jl
dec
cld
pop
cmc
cmp
fstp
call
xchg
cmp
in
arpl
fistp
push
aas
out
shl
arpl
mov
xor
fidiv
sbb
cld
ins
sbb
sbb
ins
xlat
adc
test
fimul
pushf
cdq
(bad)
cdq
mov
fcom
adc
jge
ins
movs
dec
xchg
mov
jmp
sbb
idiv
ja
mov
test
adc
or
fistp
jge
pop
push
cli
repnz
sub
xor
jl
jl
adc
in
fisubr
jp
cld
mov
and
jnp
imul
arpl
cmp
add
xor
jns
mov
cmp
lea
repnz
jl
mov
ficom
(bad)
fcom
dec
sbb
ins
cwde
fs
jge
dec
(bad)
mul
cmp
sti
loop
(bad)
sub
mov
pop
jne
xor
jae
popa
int3
or
imul
cmp
pop
xchg
fwait
cli
and
ror
js
jl
ins
retf
jmp
jmp
out
inc
jmp
stos
cmp
rcr
add
dec
mov
jno
ja
or
pop
adc
jle
cwde
mov
stos
jmp
addr16
mov
jg
fwait
dec
jle
ins
cmp
aam
mov
shl
in
fdivr
sub
retf
dec
popf
fs
lahf
xchg
(bad)
rcr
cmp
xor
lock
shr
or
(bad)
pop
mov
repnz
push
sub
ins
sar
popf
les
mov
adc
rcl
aaa
into
sti
xor
div
stos
imul
shr
sbb
jl
or
cmp
loop
push
xchg
fstp
jae
sub
xchg
ins
fimul
xor
sbb
adc
jp
outs
push
icebp
or
sub
shl
mov
add
mov
and
push
cmp
pushf
jmp
mov
mov
mov
fnstsw
aad
ret
(bad)
sbb
cwde
sbb
cli
mov
(bad)
scas
mov
cs
rcl
call
movs
in
jecxz
cld
push
push
mov
movs
sbb
xor
fsubr
mov
pushf
mov
je
cmps
sbb
std
std
dec
pop
cdq
xor
out
jmp
fistp
std
repnz
ror
iret
push
stc
into
adc
cmp
mov
pop
aas
jp
jecxz
fcomp
jge
ins
nop
ja
call
imul
sbb
sti
mov
dec
jmp
shl
fsubr
sub
cmp
mov
out
repz
sbb
(bad)
movs
mov
jle
xchg
scas
out
cmp
mov
rcr
int
cld
xlat
sbb
or
push
pop
cli
dec
mov
jmp
lods
fsubp
xchg
dec
inc
push
ins
int
int
int
int
pop
gs
push
pop
sbb
adc
sub
push
fcom
dec
dec
ins
push
jge
push
es
and
in
fdivp
stos
sbb
push
lahf
mov
sahf
and
into
aad
adc
xor
mov
pop
dec
(bad)
pop
sbb
push
in
sar
cmp
jl
(bad)
pop
shl
mov
sbb
mov
xlat
xor
mov
mov
stos
jno
call
push
pushf
push
icebp
pop
jp
sbb
cli
sbb
ins
jae
adc
ss
inc
in
enter
xchg
pop
lods
leave
inc
xchg
dec
stc
into
popa
cdq
push
xchg
jae
test
cmp
xchg
data16
lea
dec
jnp
into
cmp
sar
cmp
shl
(bad)
jno
adc
sbb
in
xchg
xchg
lods
aaa
aaa
(bad)
xchg
sahf
add
(bad)
sahf
fild
add
adc
or
and
adc
test
pop
hlt
jmp
sahf
stos
icebp
mov
(bad)
jecxz
jmp
cmp
inc
call
(bad)
rcr
movs
outs
xchg
movs
ror
movs
add
movs
or
xor
cli
sahf
cmp
cmps
sbb
sbb
aaa
stc
jmp
jbe
mov
cld
iret
mov
pop
mov
pop
jns
pop
cmp
cdq
cmps
sbb
pop
jmp
pop
mov
jmp
aas
mov
aad
or
add
jl
sub
push
fcomp
pop
call
lock
mov
cwde
movs
mov
btr
inc
adc
cmp
push
sbb
in
inc
mov
jp
mov
jnp
pop
sbb
pushf
sbb
dec
push
fs
lods
shr
fsincos
fsubr
or
push
push
cmp
sub
imul
popf
mov
sbb
cs
mov
(bad)
into
test
mov
sub
xchg
mov
sub
mov
fistp
rcl
sbb
into
xchg
push
shl
mov
(bad)
movs
jp
mov
dec
pop
mov
push
nop
mov
cld
call
(bad)
(bad)
(bad)
pop
scas
xor
or
pop
sbb
pop
cld
daa
ds
add
jns
jbe
leave
repnz
into
aad
cmp
push
pop
rcl
or
sub
dec
inc
into
push
jge
nop
sub
cmp
ins
cmc
int3
movs
mov
pop
pushf
xchg
xor
lods
jb
xchg
mov
(bad)
fiadd
sbb
imul
mov
xchg
repz
pop
mov
gs
in
(bad)
cli
loop
loop
jmp
fdiv
jmp
or
cwde
int
pop
pop
cld
sub
adc
jb
fimul
xchg
rcl
add
cmps
inc
fst
push
icebp
cmp
cmp
ins
xchg
mov
idiv
movs
pop
pop
call
repnz
les
cmp
pop
cs
fcmovnu
cmps
adc
push
sbb
mov
sbb
adc
sahf
dec
rcr
sbb
xchg
(bad)
cmp
fs
mov
push
cmp
nop
xchg
ficomp
mov
aad
in
ret
xchg
pop
adc
adc
inc
sbb
push
pop
lds
xchg
xchg
push
ficomp
and
add
(bad)
jns
mov
mov
lea
ror
aaa
adc
xchg
ja
xchg
loop
push
arpl
cmp
pop
sbb
addr16
cld
and
fcmovne
adc
iret
out
leave
adc
mov
jl
repnz
xchg
jl
mov
inc
xor
ja
fs
xchg
sbb
adc
fistp
lds
(bad)
cmp
scas
ror
mov
fdivrp
lock
inc
mov
sbb
mov
adc
in
aad
stos
test
mov
mov
pushf
sahf
mov
cmp
or
xlat
int
fnstcw
ins
sahf
adc
mov
hlt
mov
jge
imul
xchg
dec
lods
add
mov
cdq
repz
sub
jecxz
xchg
xor
add
sti
movs
mov
mov
cmp
repnz
les
int
xchg
xchg
jmp
dec
add
ret
inc
call
mov
dec
in
adc
push
xlat
jae
fnstsw
hlt
xor
aad
cmp
adc
push
sar
push
and
xchg
mov
sar
dec
push
sbb
stc
fst
sbb
cmp
dec
mov
ds
cld
cmps
and
aam
lods
bound
push
rcr
fidiv
pusha
fwait
jecxz
daa
shl
adc
dec
sbb
or
push
out
lods
mov
sbb
cli
lods
cmp
dec
pusha
cdq
pushf
inc
rcl
pop
pop
add
pop
aam
(bad)
adc
push
lods
hlt
rcl
inc
int
lods
mov
cmp
call
cwde
dec
or
push
cmp
fiadd
aad
dec
test
dec
aam
les
aaa
fcmovnbe
shr
or
(bad)
out
sbb
lods
fiadd
adc
mov
jb
rcl
mov
jnp
push
cmc
std
sti
clc
div
hlt
repz
lahf
(bad)
sbb
jg
sar
pop
fcomp
lods
outs
sbb
jmp
jp
push
jmp
jle
push
sub
clc
pop
fiadd
cmp
int3
das
ret
popa
mov
and
pop
sbb
pop
xlat
pusha
push
jmp
pushf
mov
test
jo
mov
xchg
add
xchg
in
repz
popf
push
shl
mov
xor
jbe
aam
jge
(bad)
xchg
mov
inc
jmp
sbb
and
jae
scas
jmp
xor
or
xor
push
fs
data16
dec
pop
cli
lds
xor
sti
xlat
sub
dec
push
mov
adc
pop
int3
sti
rcr
xor
je
push
pop
push
inc
mov
cmc
jmp
mov
xchg
aad
inc
sbb
mov
popf
jl
pop
int
push
xchg
aam
sbb
adc
or
aad
nop
xlat
stos
push
dec
push
pop
out
xchg
es
xchg
fst
jge
fucom
adc
dec
fwait
mov
pop
push
push
popf
xchg
jmp
and
idiv
and
push
pop
or
sbb
adc
mov
mov
enter
pushf
add
lds
dec
mov
clc
cmp
mov
xchg
shl
repz
add
adc
xchg
xor
adc
pop
(bad)
out
shl
xchg
cmp
sar
in
mov
call
inc
mov
mov
mov
int
fdivr
mov
xchg
(bad)
xor
jmp
add
push
fiadd
pop
cmp
or
mov
sbb
mov
xor
push
mov
fidivr
push
cmc
fld
adc
icebp
mov
idiv
cli
jno
pushf
out
mov
fldenv
shl
push
mov
sbb
mov
mov
rcr
cld
jmp
or
mov
retf
lock
jnp
shl
jnp
mov
clc
mov
fwait
push
inc
cmps
push
or
(bad)
sar
push
test
popf
pop
jecxz
cld
popf
adc
(bad)
mov
stc
inc
mov
xor
inc
jl
mov
adc
cli
sbb
call
xlat
mov
pop
mov
xor
pop
dec
or
mov
xor
xchg
mov
cmp
sti
(bad)
repnz
loop
aaa
xor
sbb
aad
cmp
sti
push
mov
rcr
push
(bad)
push
xchg
ror
(bad)
rcr
cwde
mov
mov
fadd
mov
fidiv
pushf
cwde
add
movs
xor
(bad)
xlat
cli
xchg
dec
inc
fnstcw
inc
mov
sti
popf
sbb
adc
(bad)
call
(bad)
mov
pop
out
ds
xor
mov
pop
jae
and
mov
fnstenv
mov
rcl
mov
xchg
sub
ret
repnz
sbb
pop
lahf
pop
push
mov
pop
pop
xchg
inc
sahf
cld
mov
xchg
push
cmp
int3
out
xchg
pop
cmp
push
xchg
cmp
sti
popa
or
(bad)
sar
sbb
dec
xor
push
pop
ss
dec
int3
jecxz
js
mul
pop
lahf
xchg
call
shl
pop
inc
sub
pop
add
xlat
jg
fisubr
sbb
mov
mov
pop
mov
imul
out
lods
dec
push
fdiv
push
push
in
fild
xor
outs
push
ds
sbb
fdivrp
loop
lahf
ret
dec
or
cmp
test
neg
xor
xlat
cmp
add
adc
jnp
dec
jae
jle
fst
popf
cmp
jbe
jp
push
or
ins
call
clc
cmp
nop
push
stos
cmc
push
adc
jp
pop
or
ins
adc
lods
aam
mov
scas
lock
pop
sub
mov
das
xchg
cli
mov
cmp
out
dec
inc
and
popf
pop
mov
jo
mov
mov
jp
mov
xchg
sbb
pop
shr
enter
jnp
dec
ficomp
push
gs
sbb
pushf
cmc
push
jns
xchg
popf
imul
pop
mov
jo
jno
jg
push
(bad)
mul
loop
jae
inc
jnp
pop
rcl
mov
fsub
sbb
test
les
xchg
nop
rcl
inc
push
pop
sti
call
fisub
ja
icebp
mov
pop
jae
sbb
stos
cmp
adc
das
ret
(bad)
cmp
jp
out
mov
xchg
out
fist
jns
sbb
ins
lock
stos
pop
mov
adc
int
cmp
aad
mov
fmul
push
xchg
cmp
mov
jge
cld
(bad)
or
ins
fidiv
(bad)
fidivr
mov
inc
mov
movs
push
xchg
mov
ja
fnstsw
cwde
sbb
icebp
xor
cld
in
add
xchg
bound
xchg
sbb
or
pop
mov
mov
pop
dec
ds
jg
push
push
or
mov
push
into
push
jg
jp
mov
push
fst
mov
aad
sbb
xchg
std
pop
xor
and
mov
ins
push
cmp
and
aad
jbe
inc
xchg
fwait
push
adc
fisttp
in
push
add
aad
adc
mov
inc
push
xchg
(bad)
xchg
cmp
jbe
js
mov
xchg
lods
mov
mov
mov
pop
leave
call
sbb
dec
pop
xor
xchg
je
jno
cmp
int3
into
adc
jl
xor
mov
daa
xchg
sbb
pushf
push
out
mov
sti
and
sub
in
pusha
jg
shr
inc
jg
rol
inc
repnz
sbb
mov
mov
popf
dec
hlt
inc
into
hlt
push
into
ss
cdq
call
xchg
inc
ror
dec
out
cld
inc
repz
and
or
xchg
mov
popa
div
jnp
sub
xchg
stos
inc
mov
pop
xlat
shl
mul
push
scas
ins
mov
rol
sti
pop
mov
int
div
es
xor
pop
fst
cmp
push
stc
add
xchg
pop
xchg
mov
idiv
jnp
sbb
mov
dec
mov
div
mov
and
and
std
call
call
leave
call
xor
push
push
jp
mov
mov
scas
inc
ficomp
arpl
cli
call
jmp
sar
add
call
mov
in
sar
sbb
xor
mov
scas
adc
cmp
xchg
fstp
fs
aaa
not
xchg
mov
rcr
sbb
mov
mov
xchg
cld
popa
xor
mov
test
xchg
push
into
enter
xchg
cmp
out
dec
adc
xor
mov
pop
clc
mov
iret
dec
push
xchg
xchg
mov
jmp
loope
push
cmp
jl
(bad)
mov
lahf
push
push
inc
ficomp
mov
fisttp
mov
inc
xlat
sbb
aad
div
sub
push
aad
aad
not
mov
je
push
test
dec
cmp
lea
pop
in
sbb
cmp
xchg
lea
jae
inc
jge
xchg
jg
sbb
sub
sbb
push
sahf
in
ss
inc
adc
sub
push
outs
cdq
nop
cmp
cmp
xor
mov
pop
jmp
jae
sbb
sub
rol
pushf
stc
jmp
mov
ins
(bad)
jp
ret
xor
push
cmp
mov
imul
add
inc
xor
jnp
cdq
inc
adc
dec
xchg
scas
push
pop
cmp
jmp
mov
in
xlat
div
sti
fcomip
dec
sar
(bad)
mov
out
aad
aad
xchg
inc
adc
xor
mov
push
cdq
hlt
nop
sub
dec
mov
dec
mov
mov
mov
inc
adc
loope
scas
not
jmp
sub
fisub
or
push
pop
dec
mov
call
aaa
xor
mov
or
mov
and
lahf
ret
push
cmp
mov
daa
sub
arpl
mov
call
jae
sub
cwd
mov
pusha
lock
sub
xchg
push
push
xchg
(bad)
hlt
das
or
pop
and
xchg
adc
xchg
imul
fstp
or
pushf
jl
shl
pop
xor
sar
inc
fnstsw
sbb
or
sbb
dec
pop
inc
shl
cmp
lahf
dec
clc
rcl
and
jg
clc
lods
mov
cmp
pop
ins
inc
jae
dec
jge
cmp
inc
sub
sub
push
imul
xor
clc
fcomi
test
xor
je
adc
(bad)
mov
pop
jne
mov
add
sbb
jae
pushf
sub
cmp
movs
jge
or
mov
gs
jle
enter
xchg
test
pop
inc
sbb
jne
xor
les
call
mov
loop
jnp
mov
bound
adc
xor
cmp
rol
jne
int
push
push
in
retf
bnd
ss
dec
push
mov
push
adc
mov
(bad)
pushf
rcr
adc
xor
hlt
ret
aaa
inc
mov
scas
sbb
test
mov
cmps
inc
jb
call
add
mov
inc
pop
sbb
xchg
stos
push
xchg
pop
cdq
call
mov
jae
mov
adc
sahf
fdiv
gs
or
ds
icebp
mov
daa
cs
push
(bad)
scas
sbb
sub
jae
push
mov
sbb
add
adc
adc
adc
fs
mov
mov
sub
cmp
mov
mov
mov
rcl
cmp
popa
xor
icebp
enter
rcr
pop
arpl
xchg
mov
pop
arpl
jno
dec
(bad)
lea
frstor
xchg
sbb
sar
xor
es
sbb
into
not
or
add
mov
mov
inc
mov
sub
cmp
add
fimul
neg
inc
(bad)
fdivr
sahf
pop
mov
mov
sbb
in
xchg
dec
push
mov
sub
xchg
mov
or
aad
xchg
aaa
pop
sub
sar
mov
jle
lods
sub
jo
push
ds
iret
xchg
jnp
mov
or
lahf
xchg
adc
inc
cmp
pop
sahf
jp
sbb
add
cmp
cdq
sbb
sar
test
out
pop
inc
dec
(bad)
cld
out
stc
rcr
and
jne
mov
push
mov
out
ins
cmp
outs
mov
sar
xor
cmp
inc
pop
call
push
pop
push
xchg
pop
call
loop
cmp
jle
or
ins
xor
fwait
push
fs
loopne
dec
xchg
xor
aad
aad
mov
popf
inc
int
xchg
adc
jns
rol
rcl
dec
pop
or
clc
and
in
dec
mov
sbb
jle
ds
fs
cmp
cli
sti
jno
cmp
jb
pop
mov
mov
cmp
xor
call
mov
in
(bad)
hlt
xchg
or
xor
fdivp
mov
mov
mov
lahf
xor
dec
mov
(bad)
sub
stos
imul
pop
dec
out
and
dec
xor
loop
pop
mov
not
xor
push
scas
call
mov
movs
nop
push
mov
xor
cmc
neg
ds
iret
cmp
pushf
xchg
jmp
pop
sub
pop
les
jp
inc
push
xchg
lods
bnd
mov
sahf
xchg
mov
cmp
sbb
dec
fimul
shl
pop
ror
push
test
push
loopne
fdivr
enter
push
pop
sbb
pop
mov
xchg
push
dec
xchg
add
xchg
xchg
dec
mov
jb
cmp
inc
mov
sar
pop
mov
mov
loope
jl
iret
daa
inc
or
inc
retf
push
xchg
xor
(bad)
pushf
mov
xchg
fistp
aaa
call
add
ret
sahf
mov
push
enter
cdq
aad
cli
sbb
stos
jmp
xor
xchg
mov
jg
sbb
dec
imul
mov
fnsave
push
aad
not
rol
pop
adc
pop
test
dec
mov
lock
mov
mov
adc
push
mov
jne
stc
outs
and
mov
scas
xchg
xchg
jbe
sbb
add
push
cmp
sti
pop
test
dec
ficom
popf
adc
push
pop
push
push
mov
xchg
fcomp
shl
inc
dec
sub
jge
dec
sbb
xchg
arpl
ficom
clc
pop
push
cmp
jp
fst
hlt
sar
nop
daa
dec
repz
pop
int3
cmp
popf
nop
xchg
xlat
mov
inc
jle
mov
test
(bad)
xchg
(bad)
xchg
pop
pop
idiv
sbb
das
xor
xor
adc
or
xchg
mov
fisttp
adc
sub
add
mov
xlat
rcl
jp
repz
adc
pop
xchg
cmp
pop
dec
cmp
call
push
mov
xchg
ja
div
push
stos
mov
mov
inc
pop
mov
push
cmp
lods
mov
mov
and
mov
sbb
push
mov
sub
nop
imul
xor
sahf
mov
cmp
cdq
mov
nop
push
cld
out
sar
xchg
out
sub
je
sbb
lahf
bound
push
push
call
xlat
adc
ins
in
ins
mov
jp
pop
or
jns
mov
inc
nop
mov
and
repnz
mov
dec
lock
cdq
push
fnstenv
mov
xor
loopne
mov
push
mov
enter
fstp
mov
(bad)
sahf
mov
adc
sar
out
or
call
xor
fcmovbe
mov
jns
push
fst
push
sti
daa
mov
pop
mov
pop
faddp
aad
pop
aam
dec
jp
fwait
dec
cwde
cmp
fcom
and
pusha
into
sbb
dec
inc
cdq
mov
mov
mov
call
cmp
lods
sbb
cwde
lahf
not
js
push
mov
xor
cdq
cmp
outs
out
dec
push
das
xchg
jge
mov
jb
push
ret
dec
sbb
popf
or
cli
xchg
leave
shl
daa
mov
not
mov
test
jmp
fistp
push
into
aad
sbb
clc
jge
xlat
inc
pop
xlat
fcmovb
aas
add
sbb
xchg
cmp
in
mov
dec
repz
rcr
inc
enter
mov
jb
nop
aad
push
cmps
mov
sub
js
popf
pop
dec
cwde
ret
mov
ins
push
fisub
jnp
lock
pop
mov
movs
jae
push
aad
dec
pusha
push
pop
stos
xor
pop
xchg
sahf
or
cmp
mov
rcl
mov
mov
dec
sbb
mov
fidivr
sub
call
dec
xchg
jns
jge
call
(bad)
(bad)
mov
gs
int3
cmp
jo
cmp
dec
xchg
icebp
or
mov
mov
mov
jbe
mov
dec
bnd
cdq
xchg
mov
call
repnz
jg
hlt
rcr
push
xchg
push
jnp
dec
js
jp
sub
daa
xchg
sub
jbe
cli
dec
jmp
xor
sbb
inc
and
shl
cmp
xchg
push
sub
adc
icebp
call
pop
call
call
stos
ret
sbb
xchg
push
xchg
mov
xchg
push
jnp
out
cmc
dec
inc
mov
outs
ficom
adc
aam
mov
xchg
ror
cli
mov
pop
mov
fnstenv
xchg
xchg
inc
xor
mov
sub
arpl
mov
mov
mov
sub
xchg
cmp
push
jb
cmp
mov
inc
mov
jo
repnz
dec
inc
pushf
push
cdq
mov
push
mov
call
(bad)
xor
cmp
push
xchg
or
fisttp
mov
pop
inc
cmp
xchg
fcom
fcom
push
ss
mov
mov
fdivr
sti
xor
xchg
xchg
shl
(bad)
lahf
dec
dec
pop
sbb
popf
xor
mov
scas
mov
stos
push
ss
gs
test
sahf
(bad)
nop
mov
pushf
cmp
mov
inc
or
pmaxub
ficom
cmc
mov
pop
mov
(bad)
push
aad
xchg
adc
lahf
adc
dec
sub
dec
sub
push
inc
xor
psadbw
push
stos
into
sbb
rcl
rol
jae
imul
movs
mov
ret
inc
adc
xchg
iret
out
mov
test
sbb
pop
call
cmp
xlat
dec
xor
sbb
jb
cld
dec
bnd
push
jo
cmp
neg
dec
(bad)
bound
pushf
push
lahf
adc
fmul
arpl
cmps
adc
jae
mov
sti
div
ja
mov
aad
aaa
ins
fdivrp
jns
pop
xor
mov
inc
fwait
mov
dec
cld
sbb
nop
mov
sub
mov
or
or
xlat
jp
mov
fistp
inc
sbb
stc
xchg
cdq
ja
xchg
mov
pop
mov
push
mov
xchg
sub
das
arpl
dec
xchg
mov
mov
dec
popf
(bad)
bound
mov
pop
aam
sti
test
data16
push
jle
or
mov
adc
call
stc
or
lock
mov
aad
jo
mov
push
inc
xor
dec
or
pop
mov
in
fld
shl
lea
xchg
xor
xchg
xchg
mov
mov
stc
inc
jnp
push
dec
mov
jle
inc
repz
push
test
int
cmp
sub
aad
dec
fstp
sbb
jmp
shl
mov
xchg
pop
shl
inc
xor
pop
push
mov
out
mov
mov
(bad)
xor
xchg
rcl
push
popa
sub
sahf
pop
add
pop
mov
fs
rol
push
jl
or
fdiv
loopne
rcr
rol
jae
xlat
mov
aad
xor
pushf
(bad)
clc
jae
fiadd
dec
mov
xchg
inc
sub
daa
jp
jno
dec
enter
push
inc
aad
jbe
push
jmp
adc
dec
mov
pop
mov
cld
call
data16
jno
xor
cmp
sbb
repz
dec
lahf
mov
mov
push
mov
pop
mov
jns
leave
pop
or
jp
cmp
inc
xchg
push
call
enter
ins
sbb
sahf
clc
inc
cmp
mov
xchg
sbb
add
retf
cli
(bad)
out
jns
dec
cmp
daa
enter
mov
mov
aad
xchg
or
ret
xor
mov
pushf
movs
xor
mov
test
jle
add
pushf
push
jmp
sbb
mov
dec
inc
jnp
rol
xchg
mov
stos
maskmovq
mov
imul
repnz
jae
imul
ret
mov
call
movs
jb
inc
mov
shr
sti
adc
test
inc
stos
mov
pop
or
push
cdq
std
mov
inc
push
push
jp
pop
inc
mov
mov
out
fisttp
clc
call
or
stc
xchg
cmc
mov
mov
pop
push
stc
out
dec
lock
xchg
pop
xchg
inc
cdq
push
addr16
push
cmp
popf
mov
ret
mov
frstor
clc
pop
cmp
test
adc
inc
jl
fild
push
jl
push
mov
pop
stos
jle
rcr
rol
test
jae
punpckhdq
lahf
hlt
and
xor
mov
stos
fnstenv
dec
cdq
cmp
mov
cdq
test
pop
jae
or
mov
or
mov
pushf
push
mov
aad
fidivr
sub
push
mov
inc
dec
push
call
xor
mov
mov
out
cdq
(bad)
mov
or
inc
adc
mov
icebp
xor
mov
sbb
fnsave
sbb
aas
inc
bnd
lahf
cld
or
ret
xor
mov
pop
cmp
les
or
jnp
xchg
jno
sbb
(bad)
enter
mov
push
test
stos
mov
sub
mov
xlat
test
dec
sbb
dec
imul
(bad)
sbb
jno
pop
test
or
pop
push
xchg
popf
dec
dec
(bad)
or
fild
sub
pop
cmp
adc
sbb
bound
pushf
jl
inc
adc
xchg
outs
popf
pop
inc
je
dec
jo
jg
inc
pop
add
jnp
mov
ret
inc
jle
call
cwde
mov
mov
dec
retf
ds
leave
inc
les
mov
cmp
mov
call
xchg
ins
mov
jo
sub
sbb
adc
xor
pop
xchg
adc
scas
xor
popf
push
pop
lea
mov
fcmovbe
pop
cmp
mov
inc
inc
outs
sbb
fdiv
adc
mov
dec
test
push
cdq
cmp
sub
inc
dec
sbb
enter
mov
push
xchg
pop
cli
xor
mov
dec
dec
add
dec
not
jmp
retf
inc
lods
xchg
push
fmul
inc
cmp
mov
mov
sub
add
xchg
pop
jns
call
mov
adc
mov
or
dec
mov
sub
test
dec
pop
adc
inc
adc
or
xchg
jbe
pop
sub
xchg
jnp
stos
mov
add
popf
dec
int3
or
push
dec
jno
mov
cmp
fist
mov
ror
scas
inc
xchg
mov
jbe
div
xchg
push
sbb
jo
jle
mov
dec
or
dec
call
out
sbb
rcr
jecxz
xor
xchg
inc
mov
rcl
jnp
xchg
sbb
jle
(bad)
mov
xchg
fcom
into
inc
shl
mov
xor
mov
mov
jns
leave
pop
hlt
lea
add
cmp
xor
dec
mov
adc
dec
or
mov
adc
inc
das
inc
test
pop
xchg
jb
jbe
mov
lock
xor
xchg
jne
mov
pop
fild
ficom
lds
bound
adc
and
push
test
rcl
cs
inc
adc
inc
fisubr
mov
inc
ins
mov
or
inc
xor
mov
pop
jns
sbb
fist
xor
or
sub
daa
mov
fdiv
(bad)
jnp
cdq
cmp
inc
(bad)
addr16
sub
adc
rcl
(bad)
and
fs
or
push
int3
std
xor
mov
jns
icebp
mov
test
mov
imul
xchg
push
push
adc
jp
sub
or
pop
dec
cmp
outs
mov
inc
xchg
mov
out
(bad)
adc
shl
out
out
retf
aas
scas
popf
ja
or
push
mov
push
inc
adc
dec
mov
fisttp
sbb
xlat
xchg
dec
adc
jp
mov
mov
dec
push
stc
retf
pushf
mov
retf
test
mov
push
dec
add
push
sar
idiv
pop
dec
mov
iret
dec
xor
call
push
ret
push
jmp
fisubr
retf
xor
or
repnz
jle
push
mov
dec
jle
mov
cwde
cmp
dec
lods
enter
mov
sub
cdq
fwait
pop
call
movs
imul
pop
add
jbe
mov
dec
adc
jp
cli
mov
pop
xchg
dec
sbb
or
xor
(bad)
cmp
stc
mov
fcomp
jb
ret
jl
stos
std
inc
lea
outs
lar
sbb
sbb
adc
iret
jle
mov
div
cmp
or
fwait
inc
mov
shl
cmp
jg
popf
xchg
cld
add
mov
and
dec
mov
xchg
inc
jp
fild
or
sbb
imul
pop
inc
and
test
inc
mov
inc
adc
dec
rcr
sub
jae
mov
inc
pop
mov
pop
cmp
retf
pop
dec
stc
pop
cmp
push
neg
jns
inc
int
or
jb
popa
pushf
jno
rcr
adc
in
sbb
xlat
stc
hlt
cs
xchg
dec
std
sbb
mov
into
shl
shl
repz
test
mov
call
rcl
mov
mov
mov
xor
jp
sbb
push
cmp
stc
outs
retf
pop
sub
call
cmp
mov
mov
and
dec
in
hlt
push
fld
xchg
adc
pop
jp
lahf
mov
jle
sti
(bad)
in
mov
xchg
(bad)
and
cmp
std
mov
inc
clc
test
or
mov
jb
xor
call
xchg
aam
neg
or
les
mov
xchg
cmp
sbb
sti
dec
adc
mov
mov
das
push
dec
mov
or
lahf
add
fist
mov
mov
cld
sahf
ja
push
aad
xchg
call
add
arpl
jns
jmp
xor
fs
cli
xor
ror
adc
dec
inc
pop
rcl
ret
pop
sub
test
pop
ror
dec
adc
sahf
push
dec
sbb
xor
pop
mov
repnz
jp
mov
push
xchg
(bad)
(bad)
cmp
mov
inc
adc
mov
(bad)
cdq
dec
cdq
or
xchg
push
mov
xchg
pop
xchg
xor
sub
or
push
or
ds
sbb
mov
stc
(bad)
mov
mov
ds
push
repnz
fcomp
xchg
inc
imul
out
mov
sbb
jge
xchg
mov
inc
jle
fisttp
hlt
aad
xchg
or
sub
mov
sbb
dec
mov
pop
aad
imul
pop
mov
das
or
inc
pushf
scas
add
push
push
loop
mov
dec
lods
or
lods
lea
pop
sbb
xchg
dec
rep
ficomp
or
dec
imul
ja
cli
xchg
xchg
call
imul
rcl
sbb
dec
pop
scas
push
sti
xchg
mov
cld
adc
mov
mov
cmp
adc
mov
and
sub
je
adc
dec
rol
push
inc
jle
retf
aaa
xor
sbb
vmovq
mov
xor
add
xor
mov
sti
imul
dec
jge
stc
(bad)
mov
mov
pop
lds
(bad)
pop
sbb
movs
fisubr
movs
dec
cmp
scas
les
pop
add
data16
mov
inc
cmp
hlt
xchg
fsub
mov
mov
cdq
retf
mov
aaa
xchg
sbb
jae
or
add
out
stc
nop
call
lds
test
lea
retf
pop
jl
jmp
cmp
push
mov
retf
xor
mov
cdq
xchg
mov
lahf
adc
repnz
jle
lods
push
pop
jecxz
adc
xor
sbb
jns
mov
push
push
rcr
sub
cmp
jns
pop
mov
or
xchg
jp
arpl
lods
and
rcr
jnp
cdq
pop
sti
lahf
(bad)
mov
cdq
jl
pop
adc
fldenv
nop
icebp
les
cmps
mov
scas
dec
inc
fisttp
xor
xchg
rcl
out
stos
fsincos
aaa
or
jmp
dec
sbb
dec
pop
add
mov
stc
pushf
arpl
imul
inc
pop
inc
lahf
ja
pop
movs
fnstcw
xchg
sahf
or
shr
retf
ror
mov
jle
mov
sbb
popf
in
jnp
fst
jmp
leave
or
push
push
jge
mov
test
mov
dec
push
aad
idiv
mov
jb
sbb
xchg
dec
add
adc
icebp
jno
dec
mov
mov
fcomp
push
js
mov
fidivr
jnp
xchg
xchg
rcr
sti
mov
jnp
adc
xor
jae
test
jg
xchg
or
xor
push
lahf
repz
push
mov
push
or
jbe
push
mov
jb
std
(bad)
neg
stos
xlat
in
mov
lahf
repnz
adc
dec
pop
mov
mov
mov
cmp
push
or
jl
mov
xor
ror
mov
add
jmp
nop
icebp
mov
mov
out
xor
adc
mov
sti
or
sub
sub
cwde
ficom
dec
inc
pushf
out
xchg
loop
or
fcmovu
adc
sbb
mov
stos
fiadd
fld
mov
dec
stos
das
dec
fisttp
push
pushf
mov
fst
inc
xchg
sub
test
jge
into
mov
dec
push
dec
pop
jae
dec
xchg
pop
pushf
sbb
fnstcw
sar
mov
or
pop
pop
sub
sub
push
jle
pop
dec
dec
push
dec
int3
ret
adc
xor
sub
sar
inc
xchg
mov
jo
mov
test
xchg
adc
dec
cs
cmp
call
mov
fistp
psubsw
aas
sbb
dec
xchg
hlt
(bad)
mov
aad
out
push
aam
xchg
xlat
sbb
jg
mov
call
ja
rcl
sbb
cmp
js
test
(bad)
push
adc
mov
dec
fstp
cmp
adc
idiv
jg
rcr
or
int
stos
ins
mov
cmp
mov
test
push
jmp
(bad)
pop
xor
mov
div
cld
inc
pop
lods
pop
dec
pop
or
or
push
fisub
not
inc
add
icebp
je
or
push
lahf
inc
in
jae
pop
fcmovnu
(bad)
jmp
cmp
popf
push
xor
jge
sbb
push
mov
retf
jne
mov
std
div
pop
xchg
loop
jnp
push
int
dec
call
sbb
cwde
cmp
mov
ja
mov
sti
inc
cmp
pop
adc
jl
inc
leave
inc
dec
mov
inc
push
pop
and
sahf
mov
dec
cld
jo
mov
xlat
sbb
mov
sub
adc
mov
inc
fdivr
dec
cmp
(bad)
sbb
push
sbb
repz
stos
mov
or
adc
sahf
jne
mov
pop
inc
dec
push
(bad)
(bad)
xchg
into
addr16
jns
popf
jno
stos
aam
pop
push
movs
mov
cdq
ins
cdq
mov
mov
jbe
test
adc
mov
out
pop
in
lock
jle
ret
cmp
push
or
inc
jle
cmp
mov
stos
pop
pop
out
cmp
sti
aam
fisttp
fwait
bound
int3
or
pushf
dec
repnz
sbb
ror
mov
pop
test
mov
pop
xchg
push
scas
scas
pop
aas
mov
loopne
pushf
dec
xlat
dec
call
mov
mov
shl
mov
es
adc
sahf
(bad)
xor
popf
cs
adc
dec
mov
arpl
inc
cmp
sub
jp
fcom
jae
mov
push
cmp
jne
pushf
ss
mov
lods
sbb
mov
and
nop
jb
xchg
std
loop
fwait
sbb
gs
enter
or
retf
adc
stc
mov
dec
iret
cmp
fnstsw
mov
mov
es
adc
fwait
mov
aad
sub
inc
fbstp
sti
dec
jl
dec
popf
xlat
ror
shl
jg
xchg
lods
adc
ins
sar
mov
add
push
fidiv
adc
pop
pop
ror
dec
add
dec
xor
lahf
icebp
jae
mov
mov
ret
push
dec
or
mov
popf
mov
ins
add
sub
fisubr
rcl
cld
cmps
mov
inc
ds
push
test
pushf
add
jns
mov
mov
clc
sub
cmps
sbb
test
scas
(bad)
fmul
jns
inc
xchg
pop
pushf
mov
cmp
call
jge
icebp
int
jp
in
mov
mov
icebp
fidivr
push
rcl
fmul
adc
cwde
scas
sub
xor
xchg
dec
test
fimul
jle
inc
int3
inc
sub
pop
pop
sbb
cmp
inc
mov
bound
dec
xchg
(bad)
fcom
push
xor
imul
inc
adc
sahf
test
ins
mov
dec
mov
add
int
fsub
nop
dec
xor
add
xchg
xchg
push
and
adc
or
xor
cmc
sti
retf
cwde
mov
cmp
sub
pop
cdq
imul
xor
stc
jp
xchg
mov
inc
fisub
or
cmp
xor
jg
repz
sub
xchg
ds
nop
xor
sbb
scas
adc
xchg
xor
push
mov
mov
pop
pop
adc
(bad)
loopne
sub
mov
pop
(bad)
aaa
push
mov
mov
mov
rcr
icebp
cmp
xchg
cmp
cdq
mov
mov
jnp
inc
std
push
repz
jp
fimul
sub
out
xchg
adc
adc
shr
jae
dec
retf
mov
sbb
inc
cmp
jmp
cmp
mov
cld
cmp
jne
jp
push
fstp
inc
mov
mov
xor
jle
adc
push
sbb
adc
popa
push
add
hlt
adc
scas
inc
fcom
jl
mov
stc
sbb
dec
xchg
adc
push
clc
mov
jle
or
cmp
cmp
xor
adc
ja
(bad)
clc
jp
mov
das
adc
dec
pop
pushf
shl
dec
jno
test
aas
mov
test
in
jnp
push
push
retf
ret
clc
mov
jp
fwait
xor
mov
mov
popf
adc
mov
call
jl
lods
popf
sar
dec
mov
inc
inc
jnp
sbb
sbb
adc
icebp
jbe
cdq
je
xor
jle
jbe
mov
in
test
es
ss
cmps
jne
fcmovne
dec
sbb
arpl
mov
lds
xchg
fcomp
pop
push
pmaddwd
dec
inc
js
jb
xor
mov
push
adc
psrlw
push
adc
sbb
icebp
test
js
shl
sbb
imul
js
aaa
push
push
jbe
jae
cwde
mov
outs
pop
icebp
icebp
aaa
inc
inc
je
pop
mov
mov
xchg
sbb
cmc
mov
pop
rcl
pop
cmp
adc
call
cmp
or
mov
mov
jg
sbb
sbb
sbb
or
call
xchg
cmp
fimul
cmp
jp
jae
xchg
sub
pop
xor
stc
pushf
push
std
add
arpl
out
mov
or
js
div
mov
cld
jge
shl
aad
clc
jae
pop
cmp
cmp
cwde
dec
imul
adc
dec
cmc
push
out
call
mov
pop
push
repz
(bad)
and
out
push
fsubr
push
imul
xchg
sbb
jle
es
push
xchg
cmp
mov
add
mov
xchg
rcr
(bad)
mul
jnp
cdq
jnp
xchg
sub
push
push
fwait
repnz
repz
xchg
(bad)
pop
inc
mov
ror
xor
lock
jl
inc
xor
mov
adc
push
pop
jb
xor
xor
push
rcr
fmul
fsubr
out
mov
pop
inc
(bad)
mov
bound
pop
or
fwait
div
popf
jp
dec
nop
mov
xor
fnstenv
pop
call
mov
pop
sbb
imul
(bad)
mov
sbb
mov
mov
clc
scas
fist
mov
cmp
std
mov
lock
call
xchg
jno
mov
cmp
xor
xchg
dec
pop
pop
mov
test
push
jb
push
or
xchg
xor
xor
pop
dec
call
aas
sub
xchg
adc
lea
push
mov
jb
nop
inc
mov
mov
mov
(bad)
sub
push
mov
es
xchg
mov
sbb
ret
dec
jg
call
jle
jge
sbb
push
fld
ja
sar
(bad)
adc
mov
ret
jno
aad
movs
mov
stc
jb
add
cmc
mov
cmp
and
xchg
(bad)
and
mov
rcl
bound
push
xor
fstp
jb
rcl
push
mov
adc
jno
sbb
js
repnz
call
jp
sbb
std
sar
popf
dec
xchg
test
push
jl
clc
xor
mov
xchg
xchg
dec
jne
push
cmp
mov
cmp
xchg
jo
pop
ins
mov
xchg
adc
aam
push
sub
aad
aad
dec
cdq
clc
xor
sub
adc
pop
xchg
(bad)
mov
mov
xchg
xchg
mov
adc
outs
movs
mov
mov
push
add
rcl
push
pop
mov
mov
mov
not
inc
sbb
and
and
ja
mov
push
jb
sbb
popf
push
hlt
push
jno
sbb
ins
fstp
or
xchg
sub
idiv
xchg
fidiv
mov
std
popf
cmp
fcmove
dec
test
sub
dec
(bad)
mov
(bad)
mov
xchg
ret
mov
push
xchg
lods
xchg
cmp
rol
shl
jns
xchg
pop
xor
inc
jp
aam
pop
sahf
in
jb
test
jbe
mov
inc
pop
dec
pop
pop
xchg
fstp
push
dec
int3
shl
mov
mov
inc
sbb
or
sub
fsubr
popa
fcom
mov
pop
cli
push
xchg
sar
aaa
xchg
push
lock
jmp
pop
cld
clc
and
bound
jae
repnz
jae
test
sbb
aas
mov
xchg
lods
frstor
xchg
inc
dec
mov
inc
lods
dec
xor
imul
jle
xchg
pop
mov
daa
js
cmp
xlat
jp
aaa
outs
iret
stc
pop
jno
fwait
cmp
cmps
sbb
cmps
ja
sbb
aam
minps
pop
pop
ds
cwde
out
lahf
mov
mov
js
adc
ss
inc
sahf
inc
es
adc
sahf
addr16
or
not
and
or
add
jno
cdq
mov
cmc
xor
std
mov
sar
adc
jle
sbb
inc
jl
ss
ins
pop
cmp
fimul
jb
xor
pop
clc
xor
pushf
add
xchg
inc
sti
or
cmc
add
daa
xchg
add
and
xor
mov
mov
mov
jge
hlt
push
adc
jecxz
hlt
inc
xlat
pop
push
sub
pushf
into
pop
sbb
call
sub
push
fwait
ss
rcl
aam
outs
lods
ja
cmp
std
push
xor
xchg
repz
(bad)
xor
pushf
jle
lock
sub
or
ja
out
imul
jge
rcr
and
cmp
mov
mov
sbb
jae
bound
or
fadd
sub
dec
mov
jno
inc
jl
sbb
outs
dec
icebp
cmps
mov
aas
sbb
lahf
add
mov
push
sahf
dec
cmc
push
sub
mov
xchg
jb
xchg
aaa
cmps
(bad)
das
cwde
pop
cmp
loope
sbb
popf
cmp
push
mov
mov
xlat
jg
mov
icebp
pop
mov
mov
mov
idiv
fdiv
sbb
xor
adc
jne
or
iret
aas
daa
pop
pop
mov
int
pushf
(bad)
mov
mov
scas
add
mov
mov
repz
or
ja
dec
jnp
sub
or
mov
call
mov
xchg
xor
call
xchg
nop
fisttp
jb
inc
push
ret
lods
jle
cmp
jnp
pop
iret
cdq
dec
call
mov
xchg
xor
mov
cwde
xchg
or
rol
mov
pop
cs
lods
push
sub
xor
call
add
jp
pop
mov
xchg
icebp
aaa
xchg
int3
inc
jb
adc
cmps
adc
ret
dec
imul
mov
outs
pop
lock
jb
inc
pop
(bad)
lahf
xor
lock
xchg
lea
sub
jnp
or
ds
rol
in
das
cmp
pop
cmps
pop
mov
mov
cmps
mov
popf
inc
call
pop
fadd
mov
sbb
mov
mov
jb
fbstp
aas
sbb
sub
mov
jmp
jns
jg
mov
mov
in
cmp
lds
dec
(bad)
gs
aad
repz
add
repz
inc
xor
jae
lods
cmp
cmp
(bad)
ficom
pop
ins
inc
dec
mov
inc
xchg
cmp
data16
inc
inc
cmc
lods
pop
mov
sub
add
jno
in
inc
aad
aad
inc
sti
cli
rol
pusha
pop
or
rcl
pop
js
inc
pop
mov
mov
xor
lods
or
ret
xor
xor
js
jmp
mov
xchg
lahf
jb
mov
adc
sbb
nop
xor
sbb
aam
cmp
fbld
fistp
cmp
cmps
icebp
xor
xchg
xor
scas
mov
push
fwait
fwait
jg
cmc
mov
mov
push
xchg
push
cmps
js
jb
icebp
fwait
aas
xchg
mov
ins
xchg
mov
lock
scas
nop
mov
arpl
sbb
xor
popf
inc
jns
int3
test
aas
push
fidivr
xor
push
mov
bnd
ret
imul
xchg
cmp
and
frstor
jns
ss
lods
pop
jnp
jl
pop
inc
cmp
mov
fnstsw
inc
jno
push
inc
mov
inc
popf
gs
mov
(bad)
jp
cld
cli
push
pop
mov
sahf
xchg
xor
cmp
ins
cmp
ja
ror
inc
push
not
inc
sbb
out
iret
aaa
pop
aaa
mov
mov
pop
cmps
js
jb
push
test
push
jo
sbb
jno
ja
jg
jae
neg
mov
popa
mov
or
dec
mov
or
out
push
int3
hlt
jg
add
adc
out
stc
push
cmp
cmp
xchg
jbe
js
test
inc
push
mov
add
mov
shl
jae
mov
cmp
xchg
cdq
inc
mov
dec
sti
div
inc
push
inc
sbb
add
mov
cld
(bad)
mov
jns
(bad)
out
adc
pop
jae
sub
cmp
aas
lods
outs
mov
outs
(bad)
(bad)
clc
fild
cmp
jg
fisubr
cmp
sub
cmps
repnz
mov
xchg
popa
sub
cmp
xchg
ins
xchg
xchg
dec
idiv
inc
jno
xor
out
aad
jge
cmp
and
mov
out
sbb
xchg
inc
shl
clc
loopne
ja
add
add
jbe
jb
mov
sub
push
pop
jmp
sahf
popa
cmp
mov
sbb
mov
dec
mov
fidiv
pop
mov
lahf
cdq
pop
inc
xor
sub
fwait
scas
and
mov
inc
mov
pop
js
clc
add
outs
in
scas
ja
cmp
test
push
sub
sub
hlt
repnz
hlt
push
pop
adc
or
(bad)
xor
xor
in
daa
add
jne
int3
adc
pop
mov
mov
adc
in
mov
sahf
cmp
aas
jns
sub
xor
aam
dec
cmps
xchg
cmp
repz
scas
idiv
das
test
xlat
sbb
dec
pop
cmps
dec
fidivr
cmps
sti
in
cmc
xchg
or
iret
push
sbb
mov
sbb
sti
xchg
mov
and
xchg
sub
mov
inc
(bad)
push
xchg
rcr
js
lds
lds
cmps
xor
pop
scas
jl
push
sub
xchg
aam
sbb
mov
(bad)
cs
mov
(bad)
cmc
inc
aad
xor
add
xchg
adc
sbb
mov
sar
nop
sub
(bad)
add
jmp
stc
jne
enter
jmp
cmc
push
cmp
xchg
jb
mov
(bad)
enter
mov
int
fadd
mov
push
xchg
sbb
je
enter
push
ins
mov
movs
fidiv
fcmovbe
shl
shr
(bad)
and
leave
lods
mov
mov
lock
ret
cmp
cmps
int3
mov
inc
dec
jns
inc
cli
int3
icebp
sahf
jb
xchg
in
loope
mov
xchg
dec
out
rcr
or
push
test
pop
or
outs
inc
les
test
pop
mov
mov
dec
fisubr
xchg
xchg
lea
es
test
pushf
int3
fwait
rol
cmp
add
lods
pushf
fs
pop
dec
mov
pop
sub
xlat
gs
dec
mov
lods
sub
and
mov
mov
cmp
imul
int3
rcr
cmp
xchg
pop
cmp
js
sti
mov
sbb
mov
popf
cmc
push
imul
or
js
mov
popa
aas
ret
or
mov
mov
mov
mov
add
and
into
push
pushf
mov
ss
and
push
fidiv
imul
retf
push
dec
out
test
mov
xor
xor
cmp
jmp
adc
jbe
push
jmp
or
jmp
jp
retf
imul
sub
dec
test
sbb
stc
or
mov
sahf
pop
and
pop
or
jb
mov
fidiv
pop
mov
jno
adc
fistp
inc
sbb
mov
pop
mov
(bad)
adc
xchg
mov
(bad)
cli
add
jge
add
in
fcmovne
adc
adc
pop
lods
test
fsubr
aas
fdiv
xor
(bad)
les
jp
mov
mov
and
jl
push
jae
jae
int3
fsub
fcmove
test
dec
rol
fwait
xlat
stc
ret
push
shl
cmp
mov
lock
rcr
ins
(bad)
mov
int3
repnz
movs
cdq
sbb
mov
jns
test
aas
sbb
adc
test
mov
enter
jns
cmp
mov
popa
lahf
cmp
xchg
bound
jg
pop
xchg
imul
push
imul
js
adc
mov
repnz
mov
jg
(bad)
ret
test
fcomip
mov
mov
dec
mov
mov
cli
mov
sbb
test
(bad)
retf
int3
neg
out
idiv
enter
push
out
(bad)
iret
pop
push
cmp
jp
stos
pop
pop
cmp
mov
mov
mov
add
(bad)
mov
cmp
and
cmp
hlt
aad
push
jl
or
cdq
sbb
mov
push
imul
push
out
xchg
dec
cwde
int3
sub
int3
or
jns
pop
cmps
mov
fs
and
xor
idiv
mov
aaa
cmp
mov
xchg
xlat
pop
test
push
push
adc
mov
xchg
fucomp
int3
bound
bound
jns
jns
sub
mov
push
mov
push
push
mov
imul
xchg
lahf
ss
pop
pop
mov
enter
icebp
leave
fild
jg
lahf
icebp
push
lods
mov
xchg
aas
sbb
clc
shl
mov
jns
mov
js
imul
enter
xor
repnz
xor
mov
dec
xchg
out
outs
cs
fwait
mov
mov
push
xor
stc
jmp
into
or
scas
clc
mov
xchg
mov
jne
jns
jns
mov
inc
cdq
pop
rcr
cs
mov
sub
jns
xchg
and
clc
mov
mov
clc
test
jae
xor
mov
adc
xlat
inc
cli
push
xor
pop
adc
imul
outs
and
fnstcw
dec
iret
xchg
js
adc
sub
psubb
cmp
pop
ja
loope
int3
ss
push
sub
int
cwde
fnstenv
into
aaa
dec
sub
sbb
or
adc
fst
mov
cmp
gs
sti
mov
xchg
aam
mov
and
push
arpl
dec
mov
xchg
cmp
xchg
movs
leave
and
xchg
mov
mov
sahf
cmp
xchg
add
and
sub
cmps
mov
das
cmp
test
adc
pop
test
(bad)
cmp
div
pop
sub
cmps
iret
mov
(bad)
or
inc
or
pushf
jmp
stc
div
cli
sbb
imul
dec
leave
mov
test
cmp
out
add
sbb
mov
push
lods
mov
add
retf
fcom
sub
jle
mov
mov
stc
jne
sub
mov
adc
xchg
fidivr
and
lahf
xor
push
addr16
mov
iret
jmp
cmps
cmp
mov
sbb
cmp
add
popa
sbb
js
dec
cmp
xlat
and
aaa
inc
xor
mov
push
sbb
leave
outs
inc
cld
jmp
test
cdq
push
cdq
dec
inc
or
adc
mov
dec
pushf
mov
loop
jl
add
cmp
leave
cmp
mov
jns
xchg
xchg
xor
dec
push
adc
cmps
test
je
dec
mov
cdq
in
xor
xor
mov
mov
fsub
test
sub
mov
mov
cmc
cwde
inc
push
xor
pushf
sbb
cwde
cwde
push
cmps
adc
mov
retf
mov
push
mov
clc
sub
xchg
xchg
inc
test
mov
adc
ret
cmp
jecxz
inc
xor
pop
sbb
inc
xor
mov
cli
xchg
aam
leave
xchg
add
retf
or
stos
fadd
push
sbb
and
dec
dec
pop
sub
inc
push
xchg
fcomp
jmp
rcl
add
mov
dec
nop
fsub
iret
adc
test
mov
retw
cdq
inc
ds
mov
lds
dec
(bad)
inc
fistp
and
mov
or
cmp
xchg
repz
jns
pop
scas
lds
bound
aas
xchg
cli
lds
xchg
popa
dec
and
cmp
inc
adc
fwait
xchg
mov
inc
cmp
sub
xor
xchg
xchg
pop
test
ss
bound
xlat
push
cdq
stc
cmp
pusha
lds
fs
test
inc
mul
mov
mov
push
inc
mov
imul
xchg
xor
loop
mov
arpl
push
mov
pop
push
fcom
pop
rcr
mov
iret
sar
xor
or
imul
dec
cmp
leave
pop
sub
xchg
xor
sub
push
retf
push
sbb
dec
sub
push
push
mul
pop
sahf
ins
push
ficom
or
inc
mov
lds
fwait
ret
(bad)
pop
or
mov
inc
fisubr
xor
cli
mov
(bad)
ror
outs
sub
xor
mov
fmul
sbb
jg
(bad)
xor
or
fmul
shl
aaa
cli
dec
jge
cmps
mov
call
adc
pop
mov
jmp
push
test
int
mov
push
adc
and
cmp
push
cmp
adc
push
int
movs
mov
cdq
pop
hlt
ret
cmp
xchg
inc
and
mov
hlt
fild
xchg
mulps
(bad)
out
call
loope
shl
cli
in
(bad)
sub
jns
add
or
ins
jb
xor
das
ds
or
cmps
cmp
xchg
fcmovne
or
fwait
jns
xchg
lahf
xchg
inc
cmps
xchg
mov
xor
mov
fisub
(bad)
bound
jle
sbb
fdiv
mov
popf
pop
push
cld
pop
stos
mov
mov
neg
mov
div
fld
mov
sbb
icebp
or
jmp
fdiv
cdq
je
or
shl
dec
dec
stos
pop
push
mov
lahf
repz
xchg
cmp
sahf
dec
cdq
sub
and
aaa
imul
or
sbb
mov
(bad)
xchg
xor
mov
jg
or
add
inc
mov
jge
ret
stc
push
cmps
and
mov
push
jmp
jmp
jo
lds
(bad)
shl
pusha
adc
adc
jl
add
loop
mov
jp
fst
repz
les
aaa
out
mov
sub
cdq
rcl
cmp
xchg
pop
mov
jb
sub
xchg
lods
dec
cmp
push
enter
cdq
jmp
pop
mov
enter
cmp
sub
mov
fwait
mov
xchg
cmp
mov
pop
ret
loop
xchg
xor
jp
pop
sbb
push
or
xor
repz
mov
stc
push
sahf
and
add
je
inc
cs
lods
popa
pop
push
sbb
sbb
mov
lods
nop
cmp
cmp
xor
stos
inc
xchg
mov
in
nop
movs
pop
popa
lods
shr
xchg
cmovns
in
jno
test
cdq
pop
aam
popf
push
push
loop
mov
sub
aam
jae
add
push
lods
pop
inc
sbb
fcomp
xchg
test
mov
mov
pop
sub
iret
mov
xchg
mov
das
js
xor
mov
lods
push
xchg
cli
mov
cmp
imul
pop
push
lock
pop
inc
cmp
lods
add
cmp
cli
mov
mov
test
sar
push
sahf
mov
xchg
in
mov
fisttp
(bad)
nop
xor
inc
pop
cmp
repz
jmp
and
pop
mov
inc
scas
enter
ss
imul
mov
xor
das
inc
call
sub
lods
enter
dec
xchg
cmp
jge
mov
fisttp
aas
add
daa
add
call
test
jae
imul
xor
bound
inc
ret
adc
mov
jns
sbb
sbb
pop
xchg
ret
(bad)
or
lods
inc
mov
enter
cmps
lods
sub
ins
sub
fnstcw
sbb
add
sbb
arpl
push
mov
inc
inc
lahf
fcomp
add
sbb
mov
dec
cmp
xor
les
sub
retf
shl
sub
sahf
lock
pop
sbb
es
hlt
mov
dec
jmp
jecxz
mov
stc
mov
sbb
jns
mov
xchg
cmp
mov
addr16
out
mov
out
rcl
fmul
pop
push
push
jmp
sub
sbb
outs
jns
jns
or
repnz
xor
mov
ss
sahf
inc
cdq
fwait
repnz
xchg
add
sar
idiv
fld
jbe
clc
shl
movs
rcr
outs
imul
(bad)
xor
mov
mov
popa
sub
and
in
vpaddq
mov
adc
push
lods
out
and
mov
test
aad
add
and
scas
cmp
lds
lahf
and
test
test
enter
push
in
cs
sbb
add
jnp
add
jb
pop
ret
in
js
mov
mov
push
not
push
test
pop
mov
pop
dec
sahf
inc
jb
xor
mov
mov
adc
mov
xchg
or
(bad)
shl
sbb
and
push
pop
cmp
jg
in
out
or
jae
adc
cmps
test
sub
inc
xchg
xchg
mov
add
xchg
out
and
cwde
(bad)
(bad)
js
sahf
popa
cmp
sub
or
xchg
fnstenv
int
mov
stc
aas
fldenv
stc
jne
cmp
jmp
out
add
fnstsw
cmp
repnz
or
and
in
add
push
and
mov
dec
and
repnz
lds
push
and
add
inc
(bad)
stos
push
ret
retf
nop
xor
rdtsc
div
inc
xchg
mov
mov
test
jmp
jmp
and
ret
inc
stc
scas
or
loop
rcr
and
(bad)
call
push
ret
sub
enter
adc
test
jne
xchg
xchg
enter
push
enter
jns
xchg
xor
pushf
sbb
sahf
xor
pushf
sbb
sbb
(bad)
imul
test
mov
popf
popa
pop
adc
dec
pop
mov
das
adc
sub
lods
repz
push
inc
jge
pusha
inc
inc
loopne
push
sti
aas
in
pop
mov
adc
jmp
sti
jbe
cmp
inc
aam
cmps
jmp
xchg
xor
push
push
bound
jb
scas
cmp
xchg
push
jecxz
test
jns
cmp
rcl
jg
push
not
mov
ins
cmp
outs
dec
push
fcmovnu
push
dec
push
call
inc
or
xchg
add
xchg
int
mov
add
add
out
push
les
add
add
jae
jge
or
daa
mov
ret
ins
fimul
add
xchg
jmp
add
or
add
retf
xchg
stc
hlt
scas
call
imul
or
add
sub
or
sub
retf
daa
stos
daa
sub
lds
push
pop
cmc
imul
sub
jae
pop
mov
test
leave
movs
sub
push
mov
push
sbb
or
dec
cdq
lds
or
mov
lds
enter
jb
(bad)
idiv
push
dec
jle
xchg
mov
xor
inc
out
sub
cmc
(bad)
push
inc
cmp
add
inc
mov
inc
fstp
inc
adc
idiv
out
cdq
jl
(bad)
jb
test
int3
mov
push
int3
(bad)
movs
push
jmp
jp
cdq
aad
add
pop
aad
neg
add
dec
lods
jbe
sbb
pop
aaa
ret
xchg
cmp
(bad)
test
cmps
movs
imul
dec
imul
call
mov
ins
add
push
adc
call
imul
ins
pop
movs
or
xchg
ds
sbb
dec
pop
outs
jl
in
pop
in
sahf
cmp
ins
sub
sub
call
mov
test
dec
or
in
imul
jo
and
sub
push
mov
out
pop
ins
int3
into
std
in
repz
aam
sub
retf
dec
sbb
int
fdivr
cli
or
pushf
dec
lods
fwait
out
jge
ror
sbb
retf
mov
(bad)
cmp
push
and
sti
call
pop
lods
sti
cmp
fwait
jnp
dec
lea
(bad)
cmc
retf
mov
ins
fwait
cli
dec
lea
mov
lods
popf
frndint
mov
pop
mov
rcr
push
lods
dec
pop
in
(bad)
out
in
and
retf
cli
lahf
pushf
pop
les
add
std
jnp
dec
jge
jmp
cld
push
aad
sahf
jne
ins
outs
fwait
pop
stos
sbb
sbb
push
pushf
pop
shl
pop
pusha
sbb
jo
aaa
xchg
ds
scas
pop
(bad)
out
fldenv
das
repnz
dec
or
das
jmp
pop
pop
sub
fmulp
or
lods
inc
add
sti
stos
stos
loopne
clc
sti
lea
in
dec
mov
dec
int3
sbb
popf
dec
sbb
jne
ret
add
cmp
dec
(bad)
ficomp
or
pop
sbb
retf
push
mov
hlt
ins
jge
fisttp
ficom
clc
sbb
cli
sub
jnp
in
imul
pop
shl
fmul
sub
std
jmp
sbb
sbb
dec
mov
cmp
cld
inc
xlat
sub
or
rcr
jge
cli
jge
pusha
mov
add
retf
int3
clc
sar
popf
into
int
jle
mov
pop
cmc
iret
push
push
pushf
mov
pop
outs
xchg
movs
(bad)
ds
fsubr
dec
out
dec
dec
test
push
sub
sbb
call
shl
popf
jge
pop
lods
ret
in
jle
cmp
imul
cs
shr
das
sbb
call
dec
push
or
jmp
sahf
fsubr
mov
push
push
ucomiss
in
sbb
jmp
add
mov
ins
lds
pop
call
fdivrp
dec
cld
or
pop
jmp
dec
mov
mov
in
std
dec
ror
fisubr
int3
pop
into
fstp
mov
pop
popf
hlt
or
jmp
jmp
push
pop
xchg
(bad)
cs
sahf
in
mov
sti
ins
pop
lahf
icebp
stc
enter
jmp
jl
mov
fisub
ins
shr
cs
jmp
bound
cmp
imul
pop
push
push
mov
jge
sbb
pop
xor
pusha
outs
mov
cli
repnz
sbb
repnz
or
dec
sub
mov
mov
xchg
dec
sub
retf
cld
std
ins
xchg
sbb
mov
imul
push
ins
sbb
mov
sbb
dec
sbb
test
popf
cs
jg
jnp
mov
cld
imul
int
dec
ins
mov
idiv
mov
sbb
cli
lods
and
frstor
pop
pushf
cli
cmp
fnsave
fiadd
sub
retf
jmp
add
lock
(bad)
fwait
mov
sbb
leave
(bad)
jmp
jge
nop
cmp
mov
lods
mov
int
xlat
out
xor
cli
jne
mov
cmp
inc
adc
pop
sar
push
add
mov
xlat
dec
popf
scas
xor
mov
out
mov
jmp
je
lea
pop
dec
push
cmp
popf
add
push
ffree
jo
aaa
retf
pushf
push
dec
nop
sbb
mov
mov
pop
jl
inc
mov
or
call
fnsave
dec
push
fwait
mov
adc
or
ficomp
rol
retf
ror
(bad)
lods
shr
jmp
pushf
int3
dec
cmp
pop
fwait
mov
dec
jge
inc
(bad)
pop
fisttp
pushf
scas
in
jge
std
jo
push
rcr
call
inc
mov
inc
sbb
pushf
dec
imul
jno
push
mov
dec
aad
cmp
adc
test
stos
fwait
or
push
out
stos
pop
push
fwait
cmc
mov
je
and
pushf
cli
fwait
aam
sti
stos
int3
int3
push
fld
jl
cmp
int
cld
icebp
jl
mov
mov
stos
fcmovnbe
ror
mov
sub
xor
xor
cmps
lods
cld
sbb
sub
sbb
sti
sbb
sub
fs
or
inc
add
rcr
fstp
sbb
cli
and
xor
xchg
pop
xor
jbe
ror
aam
sub
in
mov
cwde
inc
pop
push
push
icebp
in
inc
aam
rcl
in
sbb
std
dec
dec
sar
retf
rcr
call
pop
adc
fmul
dec
in
clc
dec
(bad)
(bad)
jl
xor
mov
cmp
jge
jnp
or
dec
lods
push
mov
adc
cmp
popf
call
mov
inc
mov
into
test
or
fidiv
adc
xchg
xchg
ficomp
xchg
pop
loope
js
shl
call
aam
clc
fidivr
arpl
jge
jp
js
mov
fisttp
in
lods
in
sbb
jg
sub
ins
jmp
ja
xchg
pop
jno
cmp
movs
sub
sbb
loopne
int
push
hlt
or
pushf
jge
jmp
cmp
sti
jl
or
push
pop
dec
or
pop
scas
pop
stos
movs
sbb
push
in
adc
pop
in
arpl
cld
sti
mov
adc
sti
sti
mov
mov
xchg
fnstsw
adc
ja
inc
push
push
lds
retf
fwait
or
rcl
int
aad
push
das
jg
lods
aas
cmp
and
lods
cmps
stos
mov
adc
cdq
cld
(bad)
jmp
in
cmps
push
ins
or
fcom
pop
lods
jp
ins
leave
call
xlat
(bad)
push
mov
cld
ins
cmp
jle
pusha
(bad)
loop
sbb
lods
(bad)
mov
hlt
rcr
mul
dec
push
and
popf
imul
or
push
jo
(bad)
call
pushf
mov
enter
dec
ficomp
mov
lods
btc
test
sbb
sbb
int3
mov
ror
cmp
mov
in
add
fs
out
ds
dec
sub
lods
mov
test
sub
mov
sti
retf
xor
(bad)
fisttp
add
int
xchg
das
mov
cld
sbb
fstenv
add
xor
jns
add
mov
mov
inc
sti
push
popa
sub
jmp
adc
daa
cli
mov
inc
xchg
xchg
push
movs
jp
jp
jp
sti
retf
(bad)
shl
lods
cmp
sar
sti
lahf
sbb
lea
fisttp
in
fcomp
in
cmp
mov
mov
fimul
sbb
cmp
lods
or
shl
mov
rol
rol
js
lods
dec
jge
sbb
in
divps
sbb
stos
pushf
clc
enter
cwde
pop
test
dec
test
je
xor
sub
pushf
jmp
xchg
dec
pop
(bad)
jecxz
push
ins
fist
jmp
jmp
mov
jnp
xchg
int3
xor
push
inc
scas
rcr
lods
popf
cmp
movs
fstp
fs
adc
jp
pop
inc
jp
mov
cld
jp
les
mov
test
mov
jne
jle
jo
sahf
dec
xlat
add
neg
mov
faddp
aaa
sub
stc
fucomp
aad
movs
ficomp
sbb
call
push
jle
sar
mov
std
push
inc
sbb
sub
inc
shl
dec
fisttp
mov
and
popf
int3
leave
aaa
mov
mov
mov
mov
mov
push
int
pop
fs
in
ins
push
stos
sbb
test
or
or
push
sbb
push
retf
ror
cmp
jp
pop
movs
das
pusha
cmp
push
sar
pushf
jmp
jo
inc
int
fld
fisttp
sti
retf
test
loop
in
std
cmp
jmp
adc
inc
sbb
add
int
ins
ret
or
in
js
pop
(bad)
cld
int3
mov
push
jmp
retf
mov
dec
stc
xor
ss
mov
and
rcr
pop
push
sbb
pop
sbb
sub
cdq
sbb
pop
into
imul
aam
int
mov
sub
jge
lea
outs
int3
pop
jge
in
mov
sub
adc
test
add
movs
cmp
cli
jmp
lods
push
xchg
cs
sub
rcl
aaa
or
jl
cwde
fcmove
dec
(bad)
fist
cmps
ret
cmp
jmp
not
call
rcl
push
mov
cmp
outs
ffree
test
ins
sti
mov
imul
pop
outs
out
xchg
ss
push
mov
mov
jle
dec
enter
adc
lock
sub
jl
pop
mov
mov
mov
inc
and
das
(bad)
fnsetpm(287
pop
sub
fwait
mov
cli
sahf
ret
sbb
mov
push
jb
out
dec
pusha
pop
sub
rcr
pop
mov
xor
and
fcom
sub
cmp
pop
and
or
cmps
jo
push
mov
mov
xor
pop
mov
shl
lods
cdq
popf
mov
xchg
les
mov
mov
mov
lock
or
ds
mov
sbb
enter
cld
sub
xor
mov
push
mov
adc
jg
xchg
or
les
shr
in
jb
ins
cdq
mov
mov
pushf
dec
sub
clc
stc
stos
sti
je
cmp
pop
jmp
aas
adc
(bad)
dec
leave
cmps
xchg
arpl
sahf
sbb
sub
ret
dec
popf
test
add
enter
or
fcmovu
sbb
popf
jle
mov
jl
cmp
js
mov
dec
inc
pop
test
jno
hlt
shl
rcr
aad
pop
or
fnstcw
mov
xor
test
push
cwde
stc
pop
dec
or
xchg
add
pop
in
inc
adc
adc
pusha
xor
adc
jb
pop
retf
call
in
sbb
cld
rcl
xchg
mov
sbb
sub
jmp
(bad)
leave
cwde
xor
mov
adc
sub
adc
aam
jp
inc
movs
mov
ja
fstp
pop
dec
mov
aam
adc
jp
call
lods
fs
jmp
popa
xchg
es
pop
sbb
pop
jge
xlat
mov
idiv
mov
mov
pop
fisub
or
fdiv
mov
imul
xlat
out
ficomp
es
or
and
jbe
push
mov
call
or
mov
std
mov
movs
pop
pop
aam
cmp
shr
mov
push
stos
mov
inc
dec
xchg
lods
or
mov
sub
(bad)
mov
test
sbb
or
mov
adc
(bad)
and
outs
or
ins
ret
adc
lods
push
enter
adc
dec
sbb
retf
xchg
push
lahf
add
add
hlt
mov
dec
cmp
rcr
mov
mov
movs
retf
pop
push
xor
push
or
hlt
mov
mov
push
jbe
stos
mov
icebp
jge
bound
mov
in
push
adc
scas
imul
popf
or
cmp
mov
movs
aas
add
xor
js
nop
mov
xchg
jae
or
jge
xchg
ins
add
hlt
outs
(bad)
xor
push
inc
xor
jge
enter
(bad)
clc
mov
xchg
push
push
ja
cmc
cmps
or
mov
arpl
push
mov
bound
or
xor
xor
inc
sti
mov
mov
(bad)
jb
(bad)
mov
sub
jmp
mov
shl
xchg
popa
adc
xchg
adc
call
and
jg
sub
shl
inc
call
in
cmp
cmps
out
bound
sbb
pop
push
inc
outs
scas
call
(bad)
out
xor
jg
jmp
push
push
nop
xor
sbb
in
sbb
fiadd
in
push
xchg
or
push
and
xchg
jo
lock
jecxz
jns
adc
in
add
mov
pop
jecxz
ins
test
popf
fld
xchg
test
mov
jno
jecxz
fst
sub
adc
and
xchg
dec
call
and
jbe
adc
or
fmul
mov
mov
mov
mov
sub
push
add
pop
inc
pop
test
xor
jge
mov
dec
sahf
xor
pop
pop
cmp
in
mov
adc
fmul
lea
mov
xchg
aam
ins
mov
clc
xor
adc
xchg
in
cmp
daa
mov
pop
mov
enter
dec
jo
(bad)
mov
jns
push
test
jb
sbb
mov
sbb
stc
sbb
cmp
pop
sbb
adc
push
sbb
imul
xchg
xchg
sbb
call
rcl
add
pushf
cdq
ret
xlat
movs
repnz
jge
sub
dec
jmp
scas
push
add
jb
push
xchg
xchg
(bad)
mov
loopne
(bad)
adc
jae
push
dec
call
adc
(bad)
xchg
xchg
fiadd
daa
cld
call
xchg
aas
js
push
mov
jmp
push
aaa
xor
vmwrite
aad
or
cli
jb
movs
jns
fdiv
ins
adc
jns
sub
mov
dec
lea
hlt
iret
mov
xchg
loop
xchg
mov
sbb
lds
add
lock
push
pop
fcomp
hlt
pop
iret
xchg
hlt
adc
repnz
mov
pop
xor
neg
mov
or
lahf
enter
js
jns
cld
mov
mov
cmps
xchg
and
das
fdivrp
cmp
or
sahf
test
sub
sar
retf
in
cmp
jae
mov
xor
jmp
mov
das
lods
add
test
mov
inc
sub
dec
cld
shr
or
int3
in
mov
fwait
mov
mov
inc
xchg
rcr
hlt
xchg
mov
jl
ret
cmp
push
mov
xchg
or
(bad)
daa
add
adc
dec
mov
imul
sub
xchg
sub
ror
sahf
ror
pop
pop
push
mov
fwait
xchg
jmp
cmp
jl
cmp
ficom
sub
mov
sbb
xchg
xor
lea
test
mov
int3
jbe
pop
rol
mov
out
repnz
mov
test
push
and
ror
lea
fdivr
mov
sub
adc
push
hlt
xor
sbb
sbb
pop
fimul
xor
or
(bad)
mov
in
enter
aam
les
in
mov
in
inc
dec
std
xor
or
mov
push
repnz
push
ss
cmp
lods
ss
pop
jb
mov
mov
dec
push
inc
pop
mov
dec
rcl
inc
adc
xchg
push
pop
add
int3
mov
popa
stc
(bad)
sbb
repz
mov
fldenv
es
pop
sub
repnz
jmp
xchg
sbb
repnz
sbb
out
xchg
dec
call
fdiv
fwait
adc
mov
(bad)
cmp
cmp
imul
test
adc
fwait
int3
dec
outs
add
(bad)
jmp
dec
retf
and
gs
(bad)
cld
(bad)
mov
mov
xor
mov
shr
pop
rcl
mov
mov
aas
not
cmp
mov
jae
pop
movs
inc
push
mov
xchg
xor
jp
stos
lods
xchg
cmc
jnp
adc
dec
pushfw
jno
cwde
lock
adc
xchg
sbb
mov
jno
clc
call
cdq
hlt
(bad)
jo
cmc
enter
dec
sub
jnp
dec
das
cmp
int
or
push
adc
repnz
xor
or
hlt
adc
jmp
add
scas
or
mov
mov
inc
mov
outs
lds
bound
loope
xchg
stos
jnp
test
push
xor
or
ins
punpckhbw
adc
and
sbb
jo
xor
inc
stc
in
enter
add
jae
shr
pop
retf
hlt
xchg
inc
cmp
rcl
xchg
hlt
in
shr
sbb
in
xor
xchg
aaa
inc
or
jb
into
mov
out
adc
mov
mov
and
mov
mov
sbb
jmp
jns
mov
and
mov
ins
frstor
sahf
cmp
and
mov
es
sbb
push
dec
push
mov
add
lahf
or
out
in
or
mov
mov
lea
push
ror
dec
mov
xchg
call
mov
pushf
inc
fsub
jl
fdivr
in
dec
or
adc
enter
cli
xor
es
cdq
and
imul
mov
(bad)
int
mov
scas
push
in
push
fmul
xchg
iret
mov
cmp
adc
cmp
mov
das
(bad)
iret
in
dec
xor
ins
(bad)
jno
hlt
ret
in
mov
fidiv
aad
out
push
xor
adc
ja
ret
test
in
and
imul
fadd
imul
ja
repnz
or
les
add
ja
and
dec
loope
cmp
inc
loope
scas
mov
mov
add
xchg
push
loopne
adc
call
sub
movs
mov
call
mov
imul
push
push
jecxz
xor
mov
xchg
mov
cld
ins
mov
daa
sti
in
pop
xor
jp
dec
daa
mov
xchg
(bad)
mov
sub
jp
in
ds
cmp
inc
rcr
aad
add
jmp
je
aas
movs
pop
dec
mov
jmp
jge
ret
mov
jb
arpl
cld
xchg
push
mov
lock
dec
sbb
mov
xchg
loopne
(bad)
mov
mov
cmp
xchg
in
mov
or
mov
mov
dec
and
push
or
lds
sbb
mov
test
ja
nop
call
sub
dec
adc
fist
sar
mov
add
jp
(bad)
aad
sar
popa
dec
dec
in
cmps
(bad)
sub
mov
push
inc
ss
repz
xlat
xlat
sti
dec
mov
in
(bad)
jnp
(bad)
into
cmp
lea
mov
mov
scas
cmp
mov
sub
and
jbe
das
cmps
enter
jl
addr16
dec
mul
pushf
jno
popf
mov
inc
mov
jo
mov
sbb
dec
lock
xchg
mov
xchg
fwait
inc
cmp
and
mov
nop
add
mov
pushf
cwde
movs
fistp
fcmove
in
dec
lock
jg
dec
jmp
add
mov
cdq
repz
mov
sbb
mov
inc
jnp
stc
mov
inc
push
sbb
in
or
rcr
mov
shl
mov
aaa
in
ja
ja
mov
jbe
fistp
inc
xlat
dec
pusha
shl
xor
mov
mov
add
xchg
enter
popf
add
arpl
cmp
(bad)
pushf
push
cdq
mov
xchg
cmp
int
mov
(bad)
fnstsw
outs
out
pop
push
push
mov
jg
loop
rcl
mov
outs
aam
push
lea
movs
add
or
sub
push
add
and
imul
and
inc
mov
dec
mov
not
jne
and
fbstp
or
call
fsubr
mov
outs
mov
push
dec
jno
jb
iret
imul
cmp
dec
push
cdq
mov
sbb
sub
popa
sbb
inc
aad
and
cld
cmp
sub
cmp
sub
add
jb
rol
add
sbb
dec
mov
mov
mov
call
std
inc
jne
in
mov
xor
push
retf
mov
js
je
mov
sbb
or
(bad)
in
mov
jb
mov
test
xor
lahf
call
push
(bad)
sbb
add
cmp
fcmovb
mov
popf
mov
jmp
inc
stos
enter
sub
add
stos
pushf
in
inc
aaa
inc
inc
cmps
mov
or
jl
push
mov
mov
cmp
cli
mov
call
mov
sub
pop
jmp
sbb
inc
gs
repnz
rcr
dec
inc
ror
ret
mov
xor
xor
movs
test
das
xor
xor
add
lods
rol
cwde
arpl
mov
sbb
les
stos
leave
jae
mov
fistp
mov
call
stos
push
ss
jns
pop
cdq
idiv
lods
jmp
cld
inc
xchg
sbb
inc
pop
add
lock
add
sar
inc
and
(bad)
xchg
jmp
loopne
pop
mov
inc
nop
cld
lods
pop
mov
pop
hlt
daa
adc
and
xchg
retf
jae
pop
xor
xchg
mov
mov
enter
cmp
call
lds
mov
xor
push
clc
and
cmp
inc
pop
imul
sub
dec
add
test
mov
sub
cmp
xlat
and
dec
aas
enter
xchg
or
dec
movs
mov
sub
popf
inc
sbb
enter
es
inc
in
cmp
test
fwait
pop
inc
popf
(bad)
aas
sub
xchg
call
aam
mov
inc
jp
test
ja
outs
stc
and
lahf
(bad)
ins
or
dec
(bad)
mov
outs
(bad)
or
cmc
in
gs
mov
jmp
sbb
inc
ss
xor
or
cmps
mov
retf
mov
and
jno
push
mov
jg
push
imul
mov
inc
xor
ins
test
sub
xor
sub
out
ins
icebp
inc
arpl
inc
xor
sbb
or
pop
xor
inc
and
hlt
mov
mov
mov
cdq
enter
push
jne
pop
sbb
addr16
fidiv
cdq
hlt
mov
clc
xchg
add
xor
mov
ds
fwait
and
or
call
pop
jmp
fst
test
das
out
inc
pusha
xchg
push
sbb
aad
mov
dec
lahf
inc
dec
out
jg
sub
inc
ja
mov
mov
jnp
or
out
dec
inc
add
xchg
or
mov
rcr
cdq
pop
sub
dec
enter
cld
loopne
loopne
cmp
inc
jmp
cmp
add
ror
or
lds
sub
lock
xchg
bound
addr16
or
call
xchg
push
std
jnp
pop
cmp
ja
add
ret
mov
and
outs
inc
jbe
inc
call
pop
xor
adc
sub
mov
xor
inc
xlat
mov
scas
sub
nop
jmp
(bad)
into
or
fwait
lock
pushf
stc
mov
sbb
nop
mov
imul
bound
sub
mov
es
test
sub
(bad)
leave
dec
sub
add
sub
in
dec
xchg
call
sbb
sub
call
retf
mov
(bad)
push
sbb
and
(bad)
sti
ss
cmps
or
call
cdq
fcom
cdq
mov
xor
ror
lods
sub
leave
aas
and
fucomip
aam
sbb
shl
aam
xchg
(bad)
shr
mov
adc
lods
pushf
scas
xor
push
or
movs
aaa
jns
and
cmps
mov
adc
ficomp
or
inc
sub
sbb
enter
test
and
(bad)
xor
inc
enter
xor
or
dec
or
stos
mov
sahf
or
aas
ja
xchg
add
fwait
lahf
mov
jl
ins
into
jns
ss
push
push
inc
dec
dec
dec
adc
cmp
mov
mov
in
sbb
jecxz
and
lds
call
cdq
lahf
add
sti
push
dec
inc
mov
jnp
pop
pop
stos
fs
mov
bound
jbe
jge
add
add
dec
cdq
xor
ret
call
fadd
sbb
out
cmps
neg
or
out
fidiv
push
cld
jle
xchg
sub
call
or
dec
or
push
push
mov
out
cdq
push
mov
inc
dec
xor
add
jb
imul
test
bound
nop
out
aaa
aad
ret
push
in
sbb
lods
jb
iret
shl
jns
or
out
xor
mov
jmp
mov
or
movs
ret
jg
(bad)
or
fidiv
add
dec
adc
mov
mov
mov
push
mov
mov
ds
push
sub
xchg
pop
jae
icebp
ins
push
outs
and
loopne
pop
test
icebp
dec
xor
cmp
sub
jns
dec
loop
jbe
hlt
jns
sbb
xor
inc
popa
mov
(bad)
add
jmp
adc
in
mov
and
or
cmp
mov
hlt
push
lock
pop
dec
mov
inc
fdivr
call
sub
imul
(bad)
shr
mov
fld
in
lea
jp
sbb
in
inc
xor
pop
out
xlat
into
mov
fiadd
mov
inc
call
or
push
or
dec
or
outs
jp
jb
inc
cmp
inc
cpuid
fsubrp
(bad)
imul
ss
clc
inc
aas
lods
sub
call
in
cs
mov
sub
pushf
inc
cmp
sub
dec
cld
cmp
or
jmp
stc
mov
(bad)
bound
(bad)
push
and
jbe
ins
push
cld
xor
bound
xor
mov
jg
call
dec
call
inc
in
(bad)
out
imul
aaa
lds
arpl
dec
push
cmp
jmp
xor
and
inc
pop
aas
inc
stos
imul
pop
in
cmp
inc
mov
stos
int3
jg
push
xchg
sbb
adc
xor
lock
es
pop
inc
mov
js
cmp
arpl
adc
or
inc
in
test
sbb
hlt
loopne
add
or
mov
or
cmps
lock
cld
cdq
push
dec
sub
or
mov
arpl
xor
(bad)
push
cmp
and
sbb
addr16
test
jg
and
(bad)
or
imul
clc
iret
mov
inc
fwait
xor
call
sbb
cdq
call
and
in
jae
fcom
outs
mov
cdq
add
add
ds
enter
cmps
(bad)
test
or
mov
retf
add
dec
and
(bad)
mov
daa
test
mov
xchg
(bad)
inc
cwde
xor
dec
dec
pop
mov
and
push
push
in
push
push
clc
sbb
mov
aad
lahf
pop
pop
orps
sub
jg
lods
bnd
sub
xor
shl
mov
sbb
xchg
movs
push
and
sar
sub
aaa
push
dec
jle
repnz
sub
je
xor
enter
loopne
adc
jg
pop
fdiv
xchg
inc
xor
cdq
aam
mov
mov
ror
aam
push
in
jmp
xor
inc
cld
and
test
jg
popa
ret
dec
xchg
push
mov
jne
(bad)
and
pop
and
dec
add
mov
adc
sub
push
cdq
call
and
jae
xchg
ss
add
xor
cmps
ja
mov
(bad)
mov
sbb
cli
pop
or
dec
mov
mov
movs
test
loope
inc
repnz
jns
inc
xchg
xchg
pusha
pop
in
jecxz
mov
es
pushf
test
clc
xchg
mov
imul
stc
dec
push
cmc
cdq
or
bound
inc
into
cwde
int3
add
mov
scas
add
mov
dec
inc
pushf
cmp
ret
dec
fcmovu
mov
out
push
and
inc
daa
sbb
jno
xchg
sub
aas
or
push
mov
pop
(bad)
fiadd
sbb
bound
inc
adc
imul
lock
or
pop
loopne
daa
imul
inc
adc
mov
push
jecxz
cmps
cdq
test
and
adc
lock
inc
cmp
pushf
pop
pushf
mov
push
stos
sub
add
test
xchg
cmps
imul
arpl
jne
mov
stos
icebp
(bad)
dec
dec
call
ja
add
clc
jns
neg
or
jmp
call
pop
push
adc
jb
adc
lea
mov
cmp
dec
push
sub
jo
outs
sbb
sub
or
sar
mov
fistp
mov
popa
xor
jmp
cdq
and
inc
cmps
ja
cmp
pop
fwait
inc
icebp
and
nop
pop
iret
push
(bad)
sbb
xchg
dec
jae
bound
mov
mov
stos
in
add
mov
inc
or
out
push
outs
in
scas
push
sub
add
mov
cmp
or
jbe
pop
ret
aaa
inc
xchg
mov
jno
test
jnp
cmp
or
retf
fdiv
in
add
add
mov
push
lds
jmp
adc
sbb
int3
mov
outs
movs
mov
cmp
sub
mov
dec
das
dec
loopne
lds
or
in
es
shl
enter
cwde
lds
je
dec
push
mov
mov
xchg
xor
and
(bad)
sbb
imul
repz
fcomp
cld
xchg
add
dec
outs
cmp
dec
jo
cmps
mov
dec
xor
inc
add
jecxz
sub
cmp
mov
add
push
push
arpl
aas
jbe
ret
push
cmp
(bad)
icebp
push
inc
add
mov
rcr
cmp
mov
(bad)
mov
iret
cmc
jge
ret
pop
push
movs
shl
mov
out
(bad)
out
xchg
rol
inc
mov
ds
(bad)
jmp
push
pop
and
push
(bad)
mov
mov
outs
test
sti
mov
out
add
div
out
mov
enter
pop
dec
sbb
pop
pop
inc
movs
jmp
jae
mov
and
adc
adc
into
dec
int3
mov
add
sub
and
sahf
pushf
add
or
icebp
xor
xchg
push
add
int3
cmc
jp
inc
mov
hlt
xchg
or
or
xchg
mov
inc
sbb
cdq
dec
mov
(bad)
xor
pop
cmc
jl
pop
add
cmps
mov
call
inc
inc
leave
jle
aaa
sar
gs
inc
hlt
dec
jnp
push
sub
add
cmp
js
sahf
mov
pop
mov
pop
pusha
or
repnz
rol
call
xchg
call
xchg
xchg
add
hlt
cmp
call
es
jmp
bound
adc
mov
xor
clc
add
jns
inc
lock
std
int
xchg
cdq
jbe
retf
in
cmp
mov
popf
add
test
daa
inc
sbb
not
mov
retf
js
jne
les
sub
bound
fwait
das
or
test
(bad)
aas
pop
mov
sar
jle
mov
xor
(bad)
mov
pushf
icebp
call
adc
icebp
inc
or
inc
arpl
and
pop
sbb
gs
stos
hlt
call
or
mov
in
pop
fcmovb
or
mov
pop
adc
in
ja
imul
pop
cmp
xor
or
sbb
mov
mov
xchg
and
scas
inc
iret
fdiv
call
fwait
dec
fwait
push
jae
xchg
or
nop
push
clc
loop
sbb
dec
js
test
xchg
dec
inc
and
jne
dec
cmps
call
test
cmps
popf
mov
mov
xchg
adc
inc
pop
xor
mov
and
test
fdivr
aam
push
lock
jbe
call
lock
mov
cdq
mov
sbb
cld
add
inc
test
sub
xchg
pop
mov
(bad)
mov
xlat
mov
arpl
dec
cdq
pushf
add
mov
xor
es
and
mov
mov
lea
pushf
jg
stos
adc
bound
in
mov
out
xchg
hlt
jb
ja
push
lock
call
daa
xchg
stos
push
cwde
aas
fidiv
bnd
inc
pop
lods
call
(bad)
ss
aas
push
fsave
jg
xchg
push
add
xor
lods
or
pushw
cmp
xchg
jo
jno
aam
xchg
add
lds
cld
push
sub
test
add
xor
inc
dec
imul
movs
test
je
dec
cs
push
inc
enter
xor
cmp
add
mov
outs
dec
cmp
cmps
xor
mov
sub
jmp
call
mov
cwde
or
inc
lods
adc
jl
sub
adc
xchg
stos
push
mov
pop
or
out
mov
add
and
retf
mov
jle
mov
sbb
fidiv
mov
jae
shl
bnd
repz
cmps
aaa
or
pop
or
sub
xchg
or
inc
fdiv
push
stos
or
cmp
cli
cmp
add
dec
cmp
enter
push
daa
cdq
sbb
jp
xor
in
mov
cmps
push
out
sub
or
sub
popf
or
pop
push
pop
or
xchg
inc
dec
or
sub
cld
cmp
daa
push
fisttp
fsubr
sub
cdq
dec
dec
dec
mov
fcom
aaa
aaa
cld
or
or
div
cmp
adc
sbb
es
mov
in
mov
mov
hlt
sub
mov
mov
xchg
xor
out
cdq
lods
loopne
fcom
retf
sub
or
mov
cmp
aaa
ss
bound
lock
ret
mov
jne
cmps
adc
or
cdq
cmp
mov
jb
inc
mov
cld
mov
inc
loop
jnp
mov
mov
lods
mul
sub
inc
cld
sub
ins
inc
xor
mov
xchg
jo
jns
ret
adc
gs
es
je
mov
sbb
popf
bound
mov
aad
lods
fcom
dec
xchg
daa
(bad)
hlt
push
aad
hlt
mov
mov
dec
cmp
xor
jbe
xor
lods
in
cli
mov
std
xchg
sub
loop
dec
push
inc
out
add
xchg
inc
hlt
stos
loop
data16
ins
or
mov
pop
hlt
sub
or
mov
sub
cli
loope
sub
scas
lea
hlt
sbb
mov
out
ret
dec
jno
inc
pop
ret
fsubr
lods
movs
jne
inc
loopne
imul
test
sub
out
mov
push
xchg
les
dec
mov
cmp
cwde
push
sbb
cmps
mov
mov
xchg
inc
in
in
lds
dec
mov
lock
jle
push
ret
inc
idiv
pushf
cmps
inc
dec
outs
stc
dec
xlat
jbe
test
sub
cmp
and
dec
sbb
dec
cdq
pop
lock
in
pop
mov
cmp
ficomp
mov
mov
xchg
or
sub
jne
inc
adc
cdq
js
out
sub
mov
cmc
aaa
test
icebp
mov
pop
jbe
inc
push
mov
dec
xor
out
ins
adc
adc
sub
sub
cmp
push
call
push
call
cmp
add
cdq
cmp
ja
add
mov
imul
adc
sbb
movs
test
bound
in
mov
add
inc
(bad)
xchg
add
or
call
fisub
cmp
add
ins
call
int3
arpl
inc
add
scas
arpl
test
cmp
mov
add
dec
std
mov
and
adc
dec
(bad)
cld
mov
enter
pop
push
cld
ret
loopne
test
out
shl
outs
mov
jbe
cmp
xchg
dec
xchg
popa
or
bound
scas
inc
xor
jb
fidivr
adc
adc
jb
inc
popf
lods
or
arpl
mov
mov
xor
movs
in
xor
mov
test
fs
ficomp
imul
loop
jo
mov
jo
pop
dec
inc
dec
aam
nop
js
jl
push
inc
jp
xchg
hlt
call
call
push
cmp
xchg
xchg
nop
cmp
in
(bad)
pop
dec
xor
stc
inc
mov
cmp
popa
ins
dec
sub
mov
in
dec
mov
in
mov
push
add
nop
mov
and
dec
int3
push
dec
lea
in
or
jp
clc
jb
test
pop
sbb
les
imul
push
dec
data16
xor
rcl
mov
sub
jp
jl
in
ss
inc
cld
dec
jg
(bad)
fbld
or
in
xor
inc
sub
inc
aas
push
in
pushf
inc
jb
nop
cmp
enter
push
imul
adc
hlt
xor
or
cwde
push
fidivr
cmps
mov
push
or
sub
pcmpgtw
es
adc
es
xchg
mov
xchg
mov
clc
cmp
ret
xchg
add
jl
lds
clc
xlat
add
sbb
jae
in
adc
aas
and
mov
or
mov
inc
or
mov
add
sub
jno
or
jg
push
jne
cwde
je
pop
mov
movs
les
xchg
inc
mov
inc
push
xchg
sub
mov
aas
or
int
loopne
push
jmp
adc
and
dec
or
mov
out
cmp
adc
sbb
call
adc
mov
cmp
clc
out
ins
pop
call
add
fmul
sub
in
pop
mov
out
arpl
push
into
ror
sub
dec
ss
and
iret
arpl
xor
sub
(bad)
xchg
pop
(bad)
iret
xor
daa
pop
cmp
stc
pop
out
pop
stc
test
scas
(bad)
cmp
pop
stos
push
in
mov
ins
dec
or
jl
dec
sub
or
and
xor
push
push
in
lds
out
pop
fnstcw
lods
push
cli
sub
sbb
mov
add
push
add
or
loop
aaa
scas
adc
dec
les
or
or
and
xchg
dec
jge
nop
pushf
add
and
cs
fdiv
dec
lods
jns
js
in
ds
mov
ret
int
xchg
sbb
scas
nop
scas
dec
push
lahf
or
or
mov
sub
sub
sub
cdq
mov
and
into
inc
add
sbb
pop
sub
mov
call
xchg
out
adc
adc
repz
mov
loop
push
test
cdq
shr
das
dec
fiadd
mov
pop
dec
fwait
ds
xlat
sbb
out
xor
push
or
mov
retf
jne
add
dec
fidivr
push
push
xchg
and
fisub
out
add
les
and
mov
jp
cmp
sub
mov
pop
jnp
pushf
jmp
xchg
pop
lods
mov
jns
xchg
loopne
ins
cmps
lds
test
arpl
imul
adc
sub
add
mov
aam
xchg
cdq
int3
xor
and
and
int
push
test
inc
dec
sbb
test
dec
dec
mov
call
mov
add
test
pop
or
xchg
imul
jns
pushf
iret
adc
dec
lods
cmp
inc
div
mov
lds
cmps
cmp
loope
xchg
jmp
test
xchg
or
cld
jns
fs
and
cmp
std
aas
stc
mov
test
test
xor
jne
inc
dec
icebp
adc
jb
jmp
sub
retf
imul
xor
xchg
nop
or
add
sbb
addr16
daa
(bad)
and
xchg
inc
es
add
mov
mov
bound
pop
pop
and
adc
rep
inc
es
add
jbe
mov
mov
jmp
mov
xchg
leave
dec
pop
(bad)
ss
xchg
sub
xchg
stos
xchg
push
push
fsubr
bound
test
bound
sub
mov
shl
jge
mov
dec
xchg
add
dec
iret
xchg
push
in
daa
sub
std
es
dec
mov
sub
imul
and
adc
aam
clc
sub
loope
push
call
xchg
gs
push
or
imul
xchg
mov
cli
and
test
xor
mov
ss
dec
sbb
xchg
bound
mov
es
push
adc
and
push
sbb
xchg
jmp
outs
stc
add
cld
xchg
(bad)
out
scas
cmp
or
out
movs
(bad)
or
fwait
pop
ja
lods
mov
stc
out
call
and
idiv
aaa
adc
sub
into
arpl
leave
jb
ins
mov
retf
mov
out
pop
push
lock
mov
xchg
xchg
add
(bad)
hlt
ss
mov
(bad)
mov
and
fild
inc
mov
jns
mov
aam
hlt
jbe
aam
(bad)
push
xor
sbb
add
dec
mov
iret
mov
mov
mov
inc
rcr
mov
sbb
loopne
jle
je
loop
fwait
pop
add
add
cdq
aam
stos
inc
call
jb
ss
fwait
pop
mov
adc
mov
dec
xlat
aas
ds
arpl
sbb
es
sbb
add
aas
lock
cwde
imul
xor
scas
mov
or
psubb
sti
lock
add
lods
push
mov
cmc
xchg
ret
jne
das
lea
mov
sub
into
cmp
nop
jns
sbb
mov
sub
mov
retf
jo
lock
les
scas
inc
popa
inc
loopne
mov
hlt
inc
mov
mov
data16
clc
pop
test
xor
aaa
in
gs
cmp
pop
push
xor
and
inc
cmps
loopne
(bad)
clc
inc
pushf
iret
add
lock
inc
push
push
dec
xor
mov
or
sbb
popf
std
inc
cmp
xor
lea
stos
pop
out
pushf
ja
or
daa
cmps
sbb
inc
test
mov
cdq
mov
sbb
sub
(bad)
mov
loope
cmp
cmp
mov
(bad)
sbb
aaa
daa
jb
cmp
in
mov
daa
xor
xchg
jl
dec
pop
add
sti
sub
enter
dec
dec
outs
imul
push
mov
jp
pop
repnz
or
sbb
fwait
addr16
ja
push
sub
or
cmps
add
or
push
xor
jae
dec
call
cwde
sub
pop
(bad)
jl
js
dec
clc
mov
cmp
sub
lock
push
add
sbb
sub
cmp
(bad)
push
pop
pop
adc
add
xchg
xchg
mov
lock
xchg
in
mov
jmp
jno
add
ds
adc
loopne
mov
sub
add
lods
js
jb
arpl
test
sub
(bad)
jbe
xor
push
daa
scas
cmp
hlt
jo
or
popa
scas
shl
mov
jns
call
hlt
arpl
adc
mov
aaa
out
outs
dec
inc
mov
jg
mov
in
xor
jmp
es
out
retf
or
xor
adc
sbb
add
popa
enter
add
inc
mov
scas
push
sbb
xor
js
clc
add
jae
add
hlt
jo
sbb
outs
fisttp
mov
call
and
jb
iret
fwait
hlt
cmp
mov
dec
jmp
das
repnz
lea
adc
call
adc
mov
loop
mov
call
cmp
push
cmp
dec
sbb
jns
(bad)
mov
icebp
pop
movs
hlt
and
les
call
and
xor
jb
cmp
out
mov
repnz
inc
out
aaa
adc
sahf
test
sub
adc
jg
and
lock
sti
js
xchg
pop
dec
pop
pop
(bad)
jb
out
jns
lock
xchg
add
cdq
adc
movq
or
out
push
in
sub
xor
stos
out
dec
dec
and
pop
pop
gs
or
shl
mov
fmul
or
mov
(bad)
xchg
inc
xor
js
mov
movs
pop
std
out
mov
add
or
test
jge
fidivr
mov
pushf
jns
loopne
lea
adc
mov
ret
jb
jnp
jne
sub
sbb
add
clc
xor
or
in
pop
hlt
mov
add
jg
inc
pop
add
xchg
shr
xchg
scas
lahf
mov
int
lods
call
and
or
int3
add
cmp
add
add
jmp
iret
cmc
mov
or
jne
fstp
cmp
sub
mov
push
push
or
add
xchg
push
mov
mul
inc
xchg
jmp
iret
fisubr
iret
bnd
pop
pushf
xchg
dec
sbb
xor
test
mov
mov
or
hlt
jbe
out
ds
sub
fiadd
pop
mov
aas
fwait
adc
pop
lods
adc
pop
jmp
test
fld
adc
arpl
mov
add
sub
xchg
mov
lahf
loopne
into
sbb
loope
inc
imul
sbb
jg
dec
jge
sbb
pop
jmp
loopne
dec
and
pop
repz
mov
adc
lods
or
cmps
sub
pushf
xor
and
cdq
das
inc
dec
xor
aam
cmp
add
das
clc
mov
in
idiv
outs
cdq
xchg
cmp
(bad)
scas
mov
in
and
loop
in
in
hlt
fbld
(bad)
js
out
mov
inc
add
inc
pop
aas
in
jnp
call
dec
(bad)
addr16
nop
movs
xor
ror
sub
js
cmp
push
daa
shl
cli
js
lods
loop
retf
int3
enter
inc
scas
push
cwde
xchg
cld
ja
xor
and
sbb
mov
dec
pop
or
jne
xchg
adc
dec
enter
mov
mov
inc
push
sbb
push
into
jo
sub
loope
lods
jge
pop
fs
sub
sbb
fistp
hlt
jns
mov
cld
or
cs
stos
int3
pop
(bad)
popf
popf
jmp
sbb
dec
out
jge
mov
jmp
cs
jnp
dec
in
les
int
push
or
mov
cmp
dec
cmp
test
shl
std
dec
imul
int
adc
mov
jge
in
inc
dec
aad
push
int3
lea
retf
repz
fcomp
lods
outs
sub
or
jge
sbb
push
pop
sbb
leave
call
popf
cmp
gs
fdivr
into
(bad)
mov
outs
adc
or
jl
(bad)
and
fiadd
sti
or
lahf
fsub
ins
lods
ins
cld
sti
in
jmp
pop
loope
mov
(bad)
push
sub
mov
mov
push
outs
fdivr
sti
xchg
in
sbb
ins
mov
jmp
pop
je
sbb
std
lahf
adc
cmp
sahf
jg
pop
(bad)
aam
fstp
mov
fmul
add
jmp
std
test
dec
imul
adc
inc
lea
or
ins
cmp
mov
retf
fidivr
cmp
push
pushf
sub
retf
pop
mov
push
in
cld
mov
cli
mov
lods
retf
push
cmp
sbb
repz
sbb
fstp
sti
sub
aam
out
in
jnp
push
sub
(bad)
int3
cld
pop
stos
dec
dec
sbb
mov
(bad)
lods
mov
cmp
pop
in
shl
sub
int3
cmp
fmul
lea
push
gs
fsubr
sub
mov
or
mov
pop
pop
jnp
(bad)
sbb
fdiv
dec
fs
fmul
in
sti
sbb
sbb
out
sbb
lods
sub
fsubr
in
popf
add
inc
fcmovnb
ror
mov
std
or
add
cmp
shl
(bad)
imul
test
in
push
push
lods
inc
mov
movs
jl
cli
pop
aaa
cmp
movs
sar
in
jb
sti
mov
fmul
or
lea
std
aam
ins
cmp
ror
pop
adc
jb
call
sub
imul
fs
mov
dec
fstp
dec
pop
jnp
pop
ds
popf
ins
inc
mov
cmp
mov
sbb
call
cmp
xchg
cld
lods
ins
bound
push
sub
and
mov
jge
or
cld
dec
ficomp
std
setnp
sub
int
ins
sahf
sub
lods
test
dec
mov
adc
and
add
std
pop
cmp
and
movs
fsubr
pushf
(bad)
sbb
int
stos
cmp
xchg
cmp
inc
ins
mov
and
cmp
mov
or
mov
jl
sub
pop
push
sbb
jmp
mov
sub
xchg
ins
lock
jle
inc
lea
pop
pop
clc
lods
pop
pop
jo
cs
dec
ror
jnp
xor
sbb
xchg
fcmovbe
outs
push
retf
cs
xor
into
cmp
sub
dec
(bad)
pop
stos
xchg
fidivr
nop
xchg
sti
ret
loopne
jge
or
stos
stos
mov
dec
sub
sbb
ror
inc
mov
rcr
in
dec
sti
enter
mov
dec
aas
ins
repz
inc
cs
call
aad
mov
jmp
or
xchg
pushf
inc
sub
fwait
lods
enter
dec
pop
push
nop
push
sahf
(bad)
adc
sbb
movs
sub
idiv
jmp
pop
ds
sahf
fidiv
imul
pop
sub
les
jmp
leave
mov
xor
sub
outs
dec
mov
test
sbb
(bad)
mov
stos
fwait
ins
mov
int3
cmp
mov
imul
sbb
dec
cmp
ins
xchg
loope
fisttp
lahf
das
test
sub
sahf
popf
or
dec
ret
pusha
dec
repz
xchg
dec
sbb
pop
inc
retf
clc
sti
dec
jb
xlat
sti
fistp
nop
test
mov
mov
or
rol
scas
ins
test
mov
retf
cmp
in
in
mov
shr
jge
int
cli
push
out
mov
mov
and
std
aam
ds
clc
retf
sub
cli
or
fwait
xchg
mov
sub
sti
sub
fwait
loope
call
mov
push
js
ins
cmp
sub
add
dec
loopne
lea
retf
jns
(bad)
sahf
mov
sbb
in
ins
sub
sbb
adc
or
pop
ss
cmp
jns
lds
and
jle
mov
jnp
or
dec
mov
into
ficom
jo
pop
jmp
push
lods
arpl
fst
cmp
call
add
mov
or
jnp
cmp
jmp
sbb
int
rcl
loopne
mov
dec
popa
mov
pushf
add
lea
(bad)
and
lea
sub
cmp
out
out
sbb
sub
inc
cmp
cmp
imul
mov
aas
inc
jmp
ins
xchg
call
jp
mov
dec
cmp
mov
popf
mov
mov
mov
pop
jb
sub
mov
jl
xor
cs
frstor
(bad)
push
mov
retf
dec
lods
sar
outs
sub
xor
xlat
xor
les
ins
fst
push
sti
mov
push
enter
imul
pop
jge
mov
mov
and
imul
icebp
imul
jne
aad
loop
xor
mov
ds
mov
movs
jnp
jl
cmp
xor
pop
leave
pop
(bad)
test
push
sbb
cmp
ins
popa
cwde
jne
mov
int
out
jl
ss
ins
outs
pop
pop
jmp
dec
fstp
jno
sti
pop
(bad)
clc
mov
lds
adc
retf
stos
mov
sahf
xchg
inc
xchg
jmp
cmc
mov
popa
imul
pop
mov
jmp
jge
sub
dec
jns
daa
jge
sti
bound
xchg
ss
lods
in
xor
mov
sbb
jns
dec
jo
sbb
or
mov
in
mov
and
test
sub
dec
movs
push
ins
sub
(bad)
icebp
xor
pop
popf
cmc
pop
jnp
sub
lods
push
cmc
jge
retf
stos
aad
mov
fucomi
movs
dec
(bad)
xor
(bad)
or
adc
stos
mov
into
fst
mov
fisttp
in
stos
jne
pop
into
sub
lea
lods
mov
or
mov
sub
xor
mov
test
jae
lds
jp
jle
jo
xlat
xchg
or
add
outs
loopne
dec
xor
in
push
or
rcr
in
sar
into
mov
in
rcl
cmp
sahf
sbb
test
mov
ror
push
inc
xor
push
popf
and
pop
(bad)
mov
adc
jmp
push
nop
mov
std
dec
cs
cmp
nop
add
or
mov
lock
cmp
(bad)
and
push
fdivr
out
test
imul
sub
mov
sbb
dec
les
lods
outs
in
retf
xchg
loop
popf
jl
loope
fdivrp
pop
pop
pop
adc
shl
test
in
push
ret
jns
fwait
loopne
loope
and
ds
in
pop
sub
cs
fidivr
mov
enter
leave
or
scas
fist
pop
jno
jge
mov
push
ja
sbb
xchg
dec
pop
jge
mov
into
sub
lods
sub
inc
(bad)
ins
sbb
mov
popa
mov
loop
lea
int
cdq
pop
movs
cmc
mov
jmp
sub
mov
fstp
xor
or
push
push
cmp
xchg
mov
jnp
std
xlat
pushf
push
push
sbb
mov
pop
sbb
xchg
pop
retf
jge
jl
loop
cld
mov
int
(bad)
std
mov
(bad)
push
rcr
mov
jecxz
mov
imul
mov
repz
call
mov
xchg
push
cmp
adc
cmc
call
enter
stos
stc
cmp
pop
jne
loopne
shr
mov
sahf
mov
or
cmp
or
pop
push
stc
pop
pop
aas
cmp
mov
sub
lods
dec
and
enter
(bad)
or
retf
lods
ins
aad
cmp
mov
mov
cli
mov
jnp
aaa
and
or
or
jo
(bad)
fisub
cdq
fld
pop
and
push
or
add
js
fcom
pop
jno
pop
movs
(bad)
pop
jg
cdq
outs
ins
mov
mov
retf
rcr
(bad)
js
sbb
inc
dec
pop
sbb
jp
fcom
fcmovnb
cli
mov
push
sbb
iret
lods
leave
repz
jbe
dec
lea
jns
fld
mov
pusha
pop
lods
adc
xor
mov
dec
mov
push
mov
enter
fs
mov
push
cmp
mov
xor
sub
shl
mov
mov
jp
xchg
adc
popf
xchg
hlt
xor
loope
pop
push
jg
dec
inc
push
cld
or
jle
inc
mov
inc
xchg
jmp
cmp
mov
mov
stc
ja
sub
pop
jecxz
dec
lods
mov
pop
mov
jle
pop
test
in
dec
xchg
mov
xor
out
js
aas
push
xchg
jg
jl
dec
ins
int
fwait
dec
mov
mov
dec
mov
jne
dec
(bad)
aam
inc
mov
pop
pop
sbb
fnsetpm(287
scas
mov
js
shr
lods
cmp
pop
popa
cmp
jno
pusha
or
dec
sbb
mov
mov
jno
in
sbb
outs
xor
test
or
sti
pop
fist
jmp
stos
or
mov
test
fisttp
test
shr
sub
mov
push
adc
adc
(bad)
cld
ror
clc
inc
dec
(bad)
mov
int
cmp
mov
inc
sub
sahf
push
aaa
in
mov
shl
enter
sti
mov
or
xchg
mov
in
cs
jg
pop
(bad)
jae
(bad)
cwde
pop
shl
jl
pop
ja
sbb
aas
test
lods
fnstcw
stos
sbb
fisttp
jp
xor
add
iret
cmps
popf
fcmovnbe
repnz
jns
sub
(bad)
dec
daa
jae
std
mov
jge
fwait
add
jnp
pop
(bad)
mov
xchg
xor
sbb
or
jns
pop
popa
push
neg
(bad)
pop
adc
retf
enter
inc
sub
pop
loopne
and
sub
sub
add
fisttp
sbb
xchg
int
and
cmp
cmp
(bad)
dec
fwait
pop
repnz
(bad)
inc
repnz
dec
cld
cmp
pop
pop
xor
or
jge
or
icebp
jmp
cs
add
inc
(bad)
test
sbb
dec
pop
popf
push
(bad)
pop
dec
ds
ins
jmp
sbb
add
xchg
xchg
mov
addr16
push
lds
inc
adc
jl
fwait
out
js
jge
aas
outs
or
inc
xlat
sbb
adc
dec
(bad)
loop
pop
inc
mov
mov
jge
loope
daa
popf
rcr
mov
cwde
dec
rcl
ins
mov
out
sar
fnstsw
addr16
ins
mov
sbb
inc
inc
xchg
adc
ins
sub
xchg
out
inc
xlat
sbb
sbb
mov
scas
xor
dec
cmp
mov
fild
cmp
int3
call
pop
add
pop
cmp
js
sub
shr
lods
inc
inc
sub
in
sbb
addr16
retf
sahf
fidiv
sub
call
mov
xlat
fiadd
jle
add
xor
in
push
fstp
pusha
cmc
iret
cli
in
repz
xor
push
or
rcr
mov
mov
jo
jle
jae
pop
xchg
repnz
or
push
pushf
adc
jae
fwait
pop
nop
pop
fwait
pop
lods
das
adc
daa
mov
jne
pushf
leave
cmp
retf
or
ins
lods
in
sbb
and
adc
sbb
pop
stos
push
xchg
ins
sub
jmp
rol
jle
sbb
sub
fstp
adc
dec
lea
(bad)
and
jmp
mov
mov
xchg
dec
lock
ret
mov
ss
lahf
mov
inc
sti
pusha
jo
rol
lods
mov
inc
jmp
cmp
jne
cmp
jno
dec
(bad)
pop
lods
adc
mov
jl
lods
jmp
sub
sbb
retf
call
xor
dec
int
lea
idiv
pop
jge
push
xor
jmp
push
sub
daa
sub
sbb
and
jmp
mov
or
xor
into
mov
lods
sbb
inc
mov
sbb
sub
cmp
mov
push
aaa
pop
dec
and
cld
imul
retf
mov
mov
or
fnstenv
dec
adc
fwait
cmp
cmp
sbb
lea
dec
jg
sub
fidivr
popa
jo
mov
mov
ficom
popf
jge
push
push
pop
push
fcmovnbe
icebp
sub
sbb
es
hlt
sbb
or
in
das
pop
pop
mov
lods
test
mov
fdivr
jmp
call
test
and
push
xchg
cmp
mov
sbb
call
or
jp
sar
and
push
add
idiv
cmp
inc
jno
dec
cwde
mov
enter
and
or
mov
mov
mov
sub
ins
mov
cld
adc
call
test
cmps
or
pop
xor
shr
lds
or
jmp
add
jmp
sbb
sub
retf
leave
test
adc
mov
clc
or
popa
mov
xchg
add
or
jge
push
and
aas
test
inc
jge
aaa
fwait
or
cmp
iret
jns
lds
mov
call
cmp
test
int
xor
nop
push
outs
lahf
add
cmp
xlat
retf
std
(bad)
iret
xlat
dec
xchg
add
(bad)
lods
lahf
shr
popa
mov
dec
fisttp
and
push
or
aam
std
clc
sub
push
mov
stos
aad
push
pop
cmp
and
sub
jnp
mov
and
jnp
lahf
(bad)
in
dec
enter
adc
push
leave
xchg
fisubr
shr
call
(bad)
mov
daa
je
sbb
cmps
out
cli
out
vmwrite
mov
push
(bad)
arpl
cmp
sub
ins
scas
push
xor
mov
push
arpl
add
mov
ret
sbb
jle
mov
and
(bad)
xlat
cmp
sti
ss
outs
dec
rcr
mov
xlat
xor
stos
xor
mov
jge
inc
inc
mov
sbb
sbb
popa
popa
lahf
mov
or
mul
mov
mov
pop
mov
(bad)
ds
rcl
bound
fst
push
movs
xor
sbb
fld
xchg
sub
pop
jnp
bound
test
loope
xor
sub
scas
mov
xor
or
cwde
pop
ret
fnstsw
jno
xchg
repnz
(bad)
cmp
ins
mov
repnz
push
inc
ss
pushf
jle
hlt
mov
cwde
or
adc
xlat
pop
add
cmp
mov
sub
jns
fcmovne
xchg
icebp
cmp
push
cdq
push
pusha
bound
jl
aad
jge
jmp
pushf
sar
neg
dec
add
(bad)
lods
sbb
jae
mov
xor
mov
push
stos
jl
aam
xchg
aas
mov
test
jmp
mov
pop
push
fcomp
push
in
cmp
cmp
aaa
jbe
test
inc
pop
xchg
and
jl
ins
push
xchg
leave
jp
out
arpl
inc
pushf
push
sbb
jo
(bad)
push
scas
pop
pop
jge
sahf
test
mov
mov
mov
aaa
ret
popf
pusha
inc
cwde
cmps
into
sbb
xchg
push
mov
loopne
(bad)
adc
or
(bad)
jp
dec
mov
jmp
fld
sbb
dec
pop
add
cmp
(bad)
clc
pop
ins
rol
in
pop
add
cdq
clc
inc
pop
mov
(bad)
es
icebp
add
cmp
mov
and
pusha
mov
fistp
mov
fisub
pusha
lock
inc
xor
in
movs
push
out
sar
cld
mov
pop
sbb
xor
pop
cdq
shl
or
mov
xor
xchg
gs
cli
dec
scas
dec
add
rcl
addr16
arpl
mov
lods
(bad)
in
xor
mov
sub
rcr
push
dec
push
adc
mov
in
dec
rcl
pop
mov
pop
shl
loope
mov
xor
fsub
scas
push
fisttp
xchg
or
lock
mov
xor
xchg
dec
imul
fistp
icebp
dec
loope
clc
fst
and
rol
push
xchg
lods
push
lock
xchg
mov
bound
mov
in
cs
cmp
imul
retf
mov
cmp
inc
mov
dec
adc
fadd
xor
movs
fild
std
xchg
call
in
rcr
in
inc
mov
call
push
xchg
shl
(bad)
sbb
push
ins
jl
stc
mov
jno
jnp
xchg
mov
cmp
loop
leave
int
add
mov
and
xor
int
sub
ja
sbb
mov
mov
or
lods
icebp
add
or
jmp
adc
fnstenv
movs
or
mov
call
push
dec
dec
push
cmp
ds
xor
jp
and
adc
sub
ja
or
mov
(bad)
jecxz
cld
dec
(bad)
adc
jl
xchg
mov
pop
cdq
nop
mov
popf
jg
clc
and
fcmovnb
mov
fld
xor
mov
scas
mov
rol
sbb
in
xchg
sbb
jne
cmp
sbb
pop
mov
lds
(bad)
jae
xor
ret
(bad)
cld
dec
cwde
or
jmp
push
call
jge
in
add
jb
pop
call
ins
int3
popf
push
rcr
(bad)
pop
inc
jbe
or
rcl
sar
aaa
cmp
cmps
xchg
or
dec
dec
inc
dec
(bad)
mov
lea
ret
lods
mov
mov
pop
dec
pop
popa
push
xchg
cmp
mov
or
scas
jmp
adc
pop
mov
enter
push
pop
dec
sti
es
push
int3
out
scas
ins
mov
push
or
pop
mov
lods
xor
xrelease
lock
mov
sub
iret
mov
cs
add
(bad)
adc
xor
dec
jg
movs
loopne
pop
dec
sbb
jmp
test
into
mov
fidivr
and
ja
mov
mov
adc
xchg
(bad)
push
add
xor
mov
cld
xchg
dec
ja
mov
sub
pop
or
jae
ins
test
mov
mov
call
mov
les
cmp
dec
xchg
es
in
or
push
cmp
outs
out
mov
or
out
push
aaa
sub
cdq
(bad)
into
pop
xchg
push
mov
mov
(bad)
arpl
bound
inc
sub
adc
mov
call
adc
push
test
xchg
sub
jns
xor
lods
pop
jecxz
out
fs
mov
lea
gs
push
pop
push
push
add
jo
mov
in
jno
ins
ss
repz
xchg
sub
nop
mov
inc
outs
stos
push
pop
and
mov
add
adc
push
jb
int3
lahf
mov
ja
xchg
xor
mov
xor
xor
xor
test
cmc
pop
neg
test
rol
into
ds
mov
jbe
jnp
mov
sti
repz
sub
jb
imul
adc
fdiv
es
adc
cdq
mov
or
mov
and
cmp
cmp
cmp
jge
rol
addr16
clc
mov
and
jge
fisttp
sti
jo
movs
adc
dec
sub
or
inc
stos
mov
in
inc
sbb
lods
xchg
ins
das
hlt
xchg
out
add
cmp
pop
xchg
loop
lds
mov
jae
lahf
loopne
jbe
cmp
mov
ins
loop
in
cwde
jl
fistp
and
add
add
xor
and
jge
(bad)
fsubr
cmp
cwde
xchg
pop
inc
pop
xor
loope
cmp
pop
mov
cs
and
ja
inc
inc
xchg
cmp
retf
xchg
sbb
fld
xor
dec
mov
cmp
pop
std
inc
xor
jmp
jle
cdq
into
xchg
push
inc
(bad)
and
cld
call
mov
mov
dec
out
push
pop
les
cmp
pop
push
mov
sbb
ins
daa
cmp
cmp
or
sub
sbb
cmp
jb
ins
mov
cmps
sub
retf
outs
sub
stc
jmp
dec
mov
xchg
xor
in
mov
sbb
mov
iret
push
bound
or
or
and
mov
call
aam
xchg
cmp
je
sbb
ins
mov
cmp
std
mov
mov
out
cdq
ss
imul
loope
dec
ds
push
jge
loop
mov
fst
scas
pop
mov
clc
push
cmp
jl
mov
stc
sbb
sub
ret
icebp
xor
rcl
cmp
mov
sbb
sbb
jl
push
push
cmp
in
cmp
inc
clc
dec
cld
xchg
retf
loopne
test
mov
or
jae
loopne
push
lods
ins
inc
cmp
sahf
add
std
sbb
add
jge
mov
mov
sub
retf
adc
outs
pushf
adc
lock
mov
push
and
test
mov
or
inc
add
not
add
pop
sub
and
sub
or
fsubr
imul
loopne
inc
sub
sub
lods
xchg
add
xchg
xchg
xor
int
imul
cmp
bound
dec
dec
mov
popa
sbb
mov
iret
adc
into
xchg
push
stos
stc
mov
in
sub
ret
jmp
test
loop
les
xchg
jb
scas
push
inc
stc
add
sbb
int
cmc
fcom
enter
stos
add
sti
cmp
inc
fisubr
jno
idiv
ret
or
jmp
mov
nop
cdq
cmp
adc
mov
cmps
jl
cmp
sar
sahf
xchg
cs
aas
cmp
sbb
mov
jg
pop
les
std
into
ins
jo
push
mov
cld
xor
aaa
pop
adc
(bad)
in
and
test
loope
aaa
push
enter
and
push
test
and
int
jp
xor
mov
ins
sub
and
jne
fistp
pop
in
sahf
or
into
dec
iret
jmp
jbe
push
fyl2x
repz
cmps
idiv
call
mov
push
jecxz
mul
inc
sbb
dec
xor
int
or
add
clc
pop
mov
sbb
xlat
mov
dec
lahf
stc
pop
mov
cmp
inc
xor
cmps
mov
inc
sbb
and
push
rol
push
idiv
out
ja
cmps
or
sub
jae
dec
xor
adc
call
xor
mov
cdq
hlt
movs
inc
sub
repnz
dec
test
jbe
cmp
fcomi
cmc
clc
cmp
jge
sbb
lods
pushf
and
or
ficomp
pop
push
lea
xor
dec
jmp
sub
adc
cli
jae
sbb
xchg
sub
test
sub
test
cmp
xchg
xchg
or
mov
lea
mov
int
mov
adc
outs
lods
inc
jb
xor
stos
shl
adc
call
jge
sub
mov
xor
sbb
and
pop
cmp
jnp
pop
cmp
push
(bad)
sub
push
pop
or
add
mov
mov
mov
mov
jnp
outs
(bad)
mov
jle
pop
cdq
aas
xchg
dec
jle
ja
popf
or
cmp
cmp
hlt
sub
cmp
push
xor
rcr
sub
sahf
push
cld
ins
sbb
sub
xchg
xchg
cmp
scas
(bad)
call
and
add
cmp
mov
sbb
sub
xor
inc
jo
imul
and
xchg
call
lahf
or
(bad)
push
test
pop
jo
imul
out
fistp
xor
jmp
test
push
or
xchg
push
dec
push
lock
lods
pop
in
xchg
nop
sbb
movs
mov
push
inc
aas
xchg
jg
xchg
push
mov
lods
push
repnz
gs
jbe
test
and
mov
add
es
push
adc
inc
or
or
aaa
lea
mov
int
sub
out
repz
jns
mov
dec
dec
imul
xchg
test
sar
cmp
lea
mov
clc
mov
mov
int
jg
cmp
and
xchg
jae
push
jnp
mov
adc
fstp
jl
cs
jle
inc
pop
xchg
aad
mov
hlt
mov
xchg
sub
xor
cmp
inc
lahf
cmc
jno
or
in
aad
retf
xchg
rcl
jecxz
jl
sbb
adc
cmp
jecxz
xchg
mov
in
mov
push
je
or
cmp
dec
pop
test
pop
sahf
leave
push
sahf
push
call
nop
sub
or
sbb
clc
ins
cli
fistp
xchg
jecxz
xchg
mov
js
mov
dec
inc
jno
cmp
ins
pushf
and
xchg
ins
ins
inc
adc
mov
dec
or
jmp
push
loop
icebp
inc
fsubr
or
mov
inc
test
jae
push
pushf
cld
xor
fsub
cmps
cmc
pop
cmc
mov
mov
xor
stc
pusha
mov
hlt
mov
adc
mov
and
mov
popa
cwde
in
mov
adc
sub
sub
dec
xchg
sbb
jl
cmp
sub
jb
mov
js
fisubr
ins
popa
cdq
mov
dec
pop
jns
mov
adc
mov
dec
in
inc
xor
adc
jns
xchg
add
jl
sti
inc
sub
rcr
outs
loopne
and
sub
ficomp
hlt
lods
sbb
inc
push
pushf
loope
mov
sub
jmp
aas
(bad)
test
pop
pusha
pusha
in
loopne
cwde
jae
(bad)
rcr
cmc
or
call
inc
es
xor
jecxz
fisttp
sbb
dec
xchg
xchg
add
inc
push
ins
fnsave
ja
sbb
jae
xlat
cmp
inc
sub
sbb
sbb
jmp
call
lods
adc
sbb
icebp
ja
cld
call
mov
jae
pop
scas
bound
sub
js
jle
pop
inc
test
jae
shl
idiv
xchg
mov
(bad)
jmp
add
inc
sahf
push
mov
outs
adc
mov
xchg
add
movs
dec
sub
sbb
jl
ins
mov
pushf
xchg
icebp
mov
loopne
cld
cmp
lock
cli
jmp
ins
mov
arpl
inc
aad
jge
or
mov
or
and
dec
cli
ins
pop
fst
(bad)
fimul
loopne
(bad)
jmp
lods
int
mov
mov
mov
cmp
cmp
jns
arpl
imul
in
xchg
lods
push
or
mov
mov
mov
add
mov
xchg
in
adc
push
xchg
in
mov
in
stos
push
xlat
cmp
xchg
mov
push
mov
push
push
ins
sbb
sbb
pop
or
xchg
dec
xor
inc
mov
cmp
cwde
push
aad
jg
ret
xor
push
invd
loopne
lods
test
loope
inc
ins
mov
adc
int
jmp
adc
xor
xor
xchg
mov
adc
lods
movs
sub
das
xchg
or
jge
in
pop
inc
and
push
and
pushw
sub
add
pusha
dec
sbb
loopne
ins
into
ja
xchg
xor
idiv
pop
add
xor
lds
pop
fsub
push
outs
add
into
inc
xchg
or
fiadd
ret
sbb
ds
dec
pop
mov
cmp
xchg
cld
dec
repz
cmp
push
cmp
mov
stos
test
sbb
das
hlt
leave
dec
mov
pop
fucomi
cwde
sub
lea
data16
and
ret
pop
mov
xor
add
adc
jmp
jo
mov
mov
inc
mul
sub
icebp
aas
stos
and
xor
repz
cmp
xchg
lahf
mov
xor
jmp
jg
dec
inc
sub
jo
popa
loopne
gs
dec
and
pop
add
jnp
call
js
test
lods
pushf
inc
xor
push
iret
(bad)
cwde
daa
inc
inc
pop
imul
retf
sahf
gs
add
mov
pushf
and
daa
int
ja
loop
into
(bad)
inc
popf
sub
add
nop
mov
pop
pop
sbb
jns
shr
mov
call
jo
ja
call
mov
js
xor
xor
jl
daa
or
inc
es
jge
stc
ins
movs
xchg
icebp
loope
js
aas
jl
ficomp
hlt
xchg
inc
dec
push
(bad)
out
xor
cmp
pop
mov
push
fs
or
or
mov
dec
ins
jl
pop
xchg
mov
push
adc
pop
ret
ins
xchg
or
icebp
xchg
push
sbb
push
iret
sub
jae
cdq
mov
mov
add
retf
pop
or
retf
mov
push
dec
repz
mov
sbb
xor
add
lea
jp
hlt
pop
xor
xchg
icebp
js
jnp
jbe
sbb
movs
out
and
inc
out
enter
push
aas
and
jne
arpl
daa
mov
movs
mov
adc
arpl
aaa
aad
cmps
pop
pop
aaa
pusha
or
in
pop
jbe
pop
xchg
cld
jl
jge
lods
(bad)
xor
push
sbb
scas
stc
cmp
cmp
or
sahf
cmps
xchg
(bad)
hlt
mov
push
int
inc
mov
jle
stos
dec
inc
inc
sub
lods
jge
mov
pop
sub
xchg
out
sti
cmp
call
in
mov
and
jmp
xor
pop
pop
mov
lds
hlt
jno
mov
sub
mov
dec
mov
bound
add
inc
jne
sub
rcr
xor
jbe
xchg
xor
xor
sar
cmp
out
in
add
rol
sub
int
jge
arpl
repz
xor
lea
mov
pop
aas
repz
nop
xchg
dec
std
cmp
cdq
aad
loope
and
sti
add
xchg
jb
sbb
mov
in
sub
cld
test
jg
in
mov
lds
jg
popa
pushf
and
daa
in
arpl
adc
cmp
xchg
adc
lds
jl
cmp
cmp
mov
and
lods
aaa
div
jnp
inc
lods
retf
cld
lea
icebp
pop
sub
inc
dec
test
inc
jmp
inc
invd
add
iret
rol
div
mov
inc
pushf
mov
(bad)
repnz
adc
hlt
test
or
aaa
mov
lahf
dec
or
jno
cmp
dec
add
mov
jg
add
leave
and
or
cmp
test
adc
cmp
and
xchg
pop
mov
iret
pushf
in
xor
add
lahf
hlt
jbe
and
jae
xor
mov
sub
daa
push
cmps
mov
inc
xchg
xchg
sub
je
xchg
loop
xchg
inc
push
bound
mov
lea
pop
movs
pop
int
sub
daa
mov
addr16
inc
ds
cld
mov
mov
int
cmp
pop
ds
and
lock
inc
jno
jns
pop
popa
xchg
inc
es
inc
in
enter
stc
xchg
jb
sub
dec
in
inc
pop
ret
or
inc
outs
push
cmp
jae
hlt
or
xchg
test
push
sub
arpl
mov
xchg
xchg
icebp
std
mov
inc
in
pop
cmp
and
scas
pop
int
call
and
sub
xchg
ret
lods
inc
mov
sbb
mov
retf
mov
in
cwde
and
test
pop
cwde
and
sub
(bad)
aad
mov
dec
mov
ins
into
in
jp
push
call
addr16
or
jge
sub
ja
cmp
mov
mov
dec
gs
pop
enter
movs
push
pop
das
sar
loopne
pop
clc
mov
cld
outs
push
cmp
adc
jnp
jle
adc
test
aad
aas
in
push
jl
mov
fild
ss
inc
lock
xchg
mov
inc
cmp
sbb
mov
js
mov
xchg
or
push
hlt
dec
call
jbe
inc
and
xor
xchg
clc
rol
shl
neg
ins
xor
in
xchg
stos
and
jge
call
aaa
push
pmulhuw
push
dec
mov
lds
inc
cmp
adc
popa
(bad)
jmp
in
cmp
push
sub
sub
inc
movs
popa
push
loope
add
pushf
sub
pushf
xor
jp
call
cmc
mov
cmps
sti
add
fwait
jmp
jge
cmp
jns
cmp
push
cdq
add
test
scas
push
xchg
lahf
stos
call
daa
inc
push
sbb
jmp
mov
adc
repnz
(bad)
lock
jecxz
xor
lahf
add
(bad)
sub
mov
xor
dec
pop
enter
inc
inc
push
je
pop
add
(bad)
and
mov
daa
mov
cmps
stc
cmp
scas
cs
sbb
mov
mov
das
jl
test
nop
push
inc
ins
js
loop
test
ds
sbb
out
push
or
cmp
cmp
add
push
in
lea
cdq
cmp
cld
sub
or
push
sar
and
mov
in
data16
shl
mov
std
push
or
push
dec
inc
pusha
dec
adc
std
pusha
dec
jle
scas
sbb
mov
xchg
xor
int
addr16
push
sub
and
sbb
out
sub
es
call
imul
fistp
aaa
sbb
mov
daa
sub
jl
les
jne
mov
and
push
sbb
dec
jecxz
loopne
ss
jl
loop
loope
mov
pop
cmc
dec
div
icebp
dec
cmp
loop
adc
sub
outs
movs
inc
in
mov
xlat
adc
mul
punpckhwd
cmp
mov
mov
scas
(bad)
hlt
stc
imul
jae
lods
(bad)
loop
xor
ret
sbb
jg
push
aaa
shr
cld
ss
ss
(bad)
retf
pop
in
mov
xor
pop
push
imul
cld
jge
nop
lock
sub
in
push
call
adc
or
dec
sub
fisubr
or
cmc
mov
xchg
mov
adc
xchg
data16
xchg
les
or
lods
mov
push
into
lods
(bad)
retf
mov
push
lock
push
pushf
ins
sub
sub
add
mov
in
bound
push
inc
or
lods
mov
mov
push
push
push
(bad)
cmovae
pop
data16
call
in
sub
inc
mov
div
scas
or
sbb
shl
cmp
jno
xor
daa
jle
cs
xor
cmp
sahf
fldenv
lods
ja
(bad)
(bad)
jle
in
inc
lods
xchg
add
adc
fdivr
aaa
dec
add
imul
les
(bad)
icebp
retf
in
inc
xchg
dec
fs
lea
add
mov
es
dec
jno
jne
and
mov
dec
mov
mov
in
icebp
xchg
or
stos
pop
sub
bound
adc
mov
inc
pop
sbb
enter
pushf
pop
mov
add
in
pop
or
jns
cld
sub
and
cld
outs
sahf
and
rol
cmp
enter
push
sti
inc
(bad)
out
ror
popa
pushf
add
sbb
(bad)
mov
retf
or
and
in
or
jne
lods
dec
test
in
in
(bad)
lods
adc
sbb
lods
or
cmp
imul
lea
lahf
(bad)
in
add
add
mov
aaa
jno
in
(bad)
add
or
sub
mov
mov
add
cmc
mov
dec
fdivr
mov
in
dec
jle
mov
push
push
std
jmp
shl
(bad)
push
or
dec
mov
and
enter
aam
sub
punpckhwd
lea
ret
or
jbe
test
dec
cmp
out
out
popf
test
or
mov
sub
mov
ins
jo
add
add
cli
call
enter
cwde
xor
push
pop
call
test
jb
std
cmps
push
in
mov
pop
sub
cdq
mov
cdq
in
push
hlt
xor
lea
pop
push
aas
dec
dec
cld
stc
mov
sbb
cmp
jmp
pop
dec
mov
add
pop
sbb
dec
push
inc
arpl
lea
jg
sbb
dec
es
dec
popa
pop
add
cwde
imul
outs
push
push
bound
sub
mov
aas
imul
sbb
es
retf
and
and
out
mov
pop
cmp
adc
mov
mov
sti
cs
imul
inc
and
test
adc
cwde
or
ret
cmc
jg
popf
loopne
stos
fiadd
ins
popa
out
dec
inc
dec
jle
dec
add
es
mov
ret
xchg
aaa
cmp
push
push
es
push
loop
out
xchg
jmp
daa
mov
add
push
or
xor
jp
int
inc
fs
or
jge
xchg
in
gs
cmps
or
or
sbb
cdq
mov
fnstcw
xchg
inc
or
jge
daa
mov
ret
or
cmp
sub
inc
push
addr16
adc
mov
sub
retf
std
add
pop
pushf
in
call
(bad)
stc
xchg
stos
and
imul
xchg
mov
hlt
ret
and
xchg
pop
push
loope
cmp
(bad)
dec
inc
cmps
xchg
mov
xor
cmp
pushf
sub
loope
push
add
pop
ins
call
mov
ds
js
idiv
rol
mov
in
jle
dec
cmp
scas
sub
push
xor
push
adc
sub
mov
pushf
push
cmp
mov
ss
int
sub
sub
sub
sub
out
push
and
ret
ins
rcr
call
xchg
jge
sbb
in
stos
cwde
fcom
dec
rcr
xchg
scas
pushf
xor
sub
sbb
lods
jno
sub
jg
cmp
lds
adc
jmp
add
or
dec
mov
xchg
movs
fld
sbb
xchg
pop
cmp
mov
dec
or
xor
sub
in
cli
ds
fs
ins
stos
popf
sub
jnp
and
jne
mov
and
and
fcmove
push
fadd
lods
sbb
xor
mov
outs
cmp
mov
hlt
mov
and
lahf
ja
call
lock
mov
int
jp
sub
and
push
cmps
cmps
mov
bound
sub
and
pop
xor
repnz
jmp
ror
scas
sub
sahf
mov
add
mov
cmp
or
hlt
jle
cwde
or
mov
push
psrad
dec
add
outs
imul
jns
test
ss
mov
inc
mov
mov
(bad)
ret
stc
cmp
stos
(bad)
call
daa
push
inc
int
cmp
cmp
icebp
inc
mov
mov
mov
mov
(bad)
bound
mov
mov
lds
hlt
in
or
out
call
retf
mov
inc
mov
aas
adc
popa
lods
sub
pop
or
xchg
adc
cmp
call
ins
jle
inc
aas
jae
add
and
jns
icebp
sub
sti
mov
icebp
sbb
call
jp
jg
das
add
pop
(bad)
xchg
mov
addr16
inc
inc
or
out
lds
cmp
jb
mov
mov
xchg
outs
push
mov
adc
sbb
in
hlt
jge
outs
jae
dec
and
mov
cmp
hlt
xchg
pushf
sub
out
jg
mov
int3
in
mov
out
pop
scas
sub
inc
fs
sbb
xor
popf
mov
int
arpl
sub
into
rcr
push
outs
push
div
sbb
in
xor
push
std
xchg
and
ins
imul
aam
cwde
inc
mov
add
push
lods
lods
popf
add
and
mov
rsqrtps
scas
mov
and
inc
mov
aaa
ja
outs
xor
nop
add
clc
xchg
xor
adc
or
retf
push
dec
pushf
outs
pop
push
xor
jecxz
add
enter
test
lea
inc
mov
(bad)
sahf
clc
gs
in
cld
sahf
push
loopne
lods
mov
out
cmp
xor
adc
rol
dec
scas
xchg
jns
loope
sti
push
sbb
mov
neg
and
mov
mov
not
adc
fistp
cmp
cmp
xchg
xor
sar
out
or
jl
inc
ret
loop
inc
pop
enter
cwde
jecxz
and
ja
retf
dec
scas
mov
and
inc
sub
test
pop
push
xchg
mov
mov
inc
or
rol
out
mov
pop
mov
mov
cmp
stos
jle
loopne
imul
add
mov
adc
sub
xchg
pop
mov
xor
gs
out
imul
idiv
add
out
cmp
ss
test
mov
out
jns
call
xchg
stc
mov
call
adc
imul
lds
mov
cwde
sub
pop
loop
jae
pop
xor
es
adc
dec
xor
xchg
int3
sub
hlt
pop
cmp
inc
adc
xor
daa
clc
jae
jae
mov
add
and
pop
ss
add
fwait
pop
mov
add
jge
jp
call
mov
xor
inc
aam
or
leave
stc
add
fldenv
aas
push
inc
int3
xor
mov
cmp
movs
cmp
mov
(bad)
pop
mov
aaa
xchg
icebp
xor
(bad)
and
push
cmp
inc
loope
test
sub
in
imul
cmc
mov
dec
scas
test
push
xchg
mov
xlat
xchg
in
cwde
inc
add
inc
ins
or
jb
pop
dec
xchg
fdiv
bound
xchg
and
mov
iret
das
sbb
xor
inc
jecxz
jle
adc
adc
lea
(bad)
lds
test
fcmove
lods
loope
imul
lods
and
out
xchg
fld
mov
rol
pop
jge
push
ret
out
pop
loope
scas
and
jns
xor
sahf
pushf
hlt
mov
(bad)
cdq
les
cdq
int3
push
outs
cmps
dec
and
lods
mov
mov
mov
xor
imul
call
dec
xor
js
(bad)
cld
gs
xchg
rol
out
xchg
mov
enter
rep
mov
xor
sbb
in
jo
mov
inc
lea
mov
scas
stc
xchg
xor
jo
inc
jl
mov
ja
inc
mov
jb
dec
jno
dec
pop
jb
pop
fcom
popa
cmp
mov
sahf
cmp
lods
sbb
movs
mov
repnz
rol
or
aaa
xlat
xchg
mov
imul
int
or
stc
hlt
out
(bad)
loopne
push
pop
xchg
mov
out
sub
addr16
jo
lock
cmp
stc
jecxz
inc
cmps
loope
or
iret
jmp
pop
and
ja
mov
test
inc
jl
and
int
dec
sbb
cmp
cdq
adc
dec
xchg
and
xor
nop
pop
dec
(bad)
(bad)
pop
lock
in
aas
mov
sbb
jmp
mov
add
add
ds
mov
sbb
dec
cmp
sbb
bound
pop
jp
add
jecxz
xchg
hlt
pop
mov
pop
push
mov
cli
cwde
cmc
push
inc
cwde
xor
dec
pushf
in
pop
ss
inc
cdq
push
sahf
sub
cmp
mov
cmp
inc
out
mov
inc
or
jno
pop
xor
xsave
mov
inc
pop
dec
jge
or
lods
rdpmc
mov
inc
cmpxchg
lahf
add
ret
neg
pushf
adc
xor
cmp
inc
or
add
pop
pop
mov
or
push
jmp
mov
inc
or
and
xor
push
jo
dec
cmp
dec
out
stos
ss
sbb
add
sub
(bad)
(bad)
jge
call
das
aaa
dec
hlt
lahf
xor
jl
or
dec
cwde
or
lds
add
arpl
cdq
sar
inc
adc
dec
or
neg
imul
sbb
cmp
mov
hlt
out
xchg
in
xor
jge
xchg
call
mov
mov
pop
aad
mov
ret
jmp
hlt
jb
push
mov
imul
imul
jmp
cmp
mov
xchg
mov
ret
inc
lea
add
jbe
sub
lods
cmps
jo
adc
out
pop
dec
inc
nop
push
loop
test
ja
dec
pop
push
cmp
push
jg
sbb
sbb
mov
ret
jns
xchg
push
stc
or
mov
adc
fbld
into
pop
cmp
adc
ss
jb
push
ins
mov
pop
sub
xchg
xchg
into
ja
xchg
xchg
xor
iret
stc
cdq
ins
xor
mov
push
and
aad
mov
jmp
add
ja
shl
mov
cmp
lea
cmp
or
lds
mov
pop
out
push
aam
lea
inc
shld
pop
cmp
mov
in
push
pop
or
push
jp
dec
jae
es
add
sub
push
sbb
mov
push
inc
xchg
cmps
call
call
or
mov
aaa
sbb
or
or
sub
xchg
into
xor
pop
pop
lahf
sub
xor
inc
ja
xchg
push
sub
xchg
std
cmp
inc
mov
adc
hlt
imul
add
or
int
pop
shl
cld
jno
in
mov
or
inc
jns
mov
ds
jns
in
pop
out
cld
aaa
add
addr16
jns
hlt
mov
jb
dec
sbb
xchg
fs
out
fmul
mov
loopne
mov
ret
xchg
sub
and
fwait
call
inc
cwde
xor
jg
aaa
cdq
repnz
les
in
jae
push
sub
clc
or
ins
mov
and
xor
sbb
sub
sub
test
push
fwait
out
imul
push
sbb
jno
pushw
test
call
loop
dec
adc
inc
dec
push
jp
push
xchg
xor
and
mov
in
js
loop
push
sub
xor
mov
add
cld
cmp
or
jnp
inc
add
jg
jns
or
xchg
sbb
arpl
out
mov
jp
cdq
push
cli
loop
dec
call
sub
call
cmps
cli
adc
out
stos
call
fld
mov
pop
aaa
dec
sbb
xchg
std
jl
and
inc
jg
sub
sub
mov
cld
js
dec
sub
sub
push
in
add
popf
xchg
and
jbe
das
adc
and
das
jp
push
inc
ja
sub
xchg
out
sub
xor
add
cdq
or
loopne
xchg
push
pop
adc
enter
mov
add
daa
dec
icebp
jbe
cmps
int3
js
imul
aaa
xchg
ins
jle
mov
sub
and
pop
xchg
aaa
add
mov
xchg
push
int
ss
add
add
int
jle
out
jnp
clc
loop
cmc
xchg
mov
lds
dec
adc
sub
push
pop
popa
das
add
lds
loope
xchg
inc
inc
mov
adc
inc
add
cs
jb
adc
jno
aas
jge
push
push
arpl
outs
sub
dec
xor
adc
call
mov
dec
jge
(bad)
mov
std
sbb
jbe
in
pop
lods
stos
out
loop
and
sub
inc
in
jne
cmc
stos
test
mov
call
cmp
inc
sbb
or
repnz
xor
out
js
inc
lods
imul
call
mov
xchg
mov
cmp
psllq
dec
retf
cmp
in
ins
push
dec
inc
mov
inc
lds
mov
jge
test
sbb
cld
sbb
jae
xchg
loopne
sbb
push
add
inc
sbb
adc
xor
mov
lods
gs
pop
shr
out
xchg
sub
shl
mov
push
pushf
int3
jb
jae
mov
loope
adc
mov
push
or
test
xchg
jg
loope
jno
es
aaa
add
fwait
in
leave
and
push
push
mov
mov
ret
cmp
xor
ficomp
mov
inc
and
cmp
ss
aad
xor
dec
inc
add
mov
and
jmp
pop
je
sbb
push
dec
jbe
outs
outs
rol
mov
mov
xor
adc
push
outs
mov
ror
sbb
mov
xchg
inc
mov
in
cld
xchg
xlat
cs
adc
mov
test
cmc
fld
and
jg
push
pop
push
sbb
sbb
daa
xchg
out
cdq
xlat
sbb
and
sbb
retf
pop
adc
pop
jg
ds
xchg
mov
jg
mov
ss
retf
xchg
cmp
clc
add
mov
imul
lds
(bad)
lods
jo
pushf
out
pop
pop
pop
jnp
jns
adc
mov
cmp
jno
cmp
inc
stc
xor
and
lds
dec
pushf
arpl
mov
mov
mov
jbe
cmc
lds
clc
cmp
mov
dec
pop
pop
rol
cmp
cld
outs
and
inc
mov
pop
cwde
loop
xor
sub
int
ret
lock
jns
add
adc
add
xor
arpl
jae
push
jbe
or
call
cmp
out
add
shl
jno
inc
mov
xor
adc
(bad)
cmp
stos
lods
mov
mov
loopne
dec
xor
sar
out
clc
inc
cmps
(bad)
xchg
fisttp
in
add
cdq
push
pop
test
loope
sbb
sub
jae
mov
in
bound
push
outs
cmp
out
jle
int3
jne
std
mov
xchg
jl
out
outs
cwde
jle
es
jns
mov
daa
jp
cmps
lods
mov
sub
and
cmp
cdq
fstp
xor
in
test
cs
cwde
into
xchg
mov
dec
mov
xor
fsubr
imul
call
mov
or
in
ds
dec
lea
dec
loop
xor
ret
mov
in
popf
xchg
cmp
xchg
jbe
pop
movs
mov
aaa
jle
jge
inc
je
pop
hlt
cmps
pop
xchg
or
cmps
iret
inc
add
gs
push
out
push
loopne
imul
add
cmp
inc
(bad)
out
mov
les
and
or
popa
xor
jle
jnp
inc
jmp
mov
sub
push
scas
mov
test
btr
mov
mov
in
enter
xchg
imul
out
jmp
call
add
stc
push
shl
inc
xor
jg
popa
push
mov
sub
mov
mov
mov
jo
loop
fwait
iret
les
(bad)
rcr
or
mov
mov
lods
ins
jbe
mov
jg
ret
call
icebp
jnp
push
stc
mov
mov
in
lods
out
ins
jne
cmp
cmp
ins
addr16
or
lods
dec
sahf
jno
inc
mov
and
inc
add
inc
jae
(bad)
test
or
bound
xor
out
inc
mov
inc
and
xlat
cmp
or
jns
shl
jl
sahf
sbb
es
std
lock
ret
dec
cdq
cmps
xor
enter
shr
lock
in
pop
imul
xor
or
call
movs
or
xor
arpl
cmp
mov
pop
in
imul
outs
mov
xor
pop
pushf
les
pushf
pushf
or
jmp
sub
ins
cmc
xchg
lahf
(bad)
outs
mov
fwait
outs
mov
cdq
cmp
call
repz
data16
push
outs
call
out
in
dec
daa
push
mov
sub
in
inc
into
xchg
popa
bound
daa
test
call
(bad)
iret
fwait
lods
aam
(bad)
jne
sbb
in
div
adc
push
or
test
and
mov
in
mov
pop
mov
sbb
mov
int
add
int
loope
pop
xor
dec
adc
ss
retf
cmp
fisubr
inc
inc
or
es
popf
push
mov
jae
into
stc
adc
jo
icebp
pop
arpl
lds
stc
and
dec
push
popf
mov
xor
mov
jae
inc
mov
cmp
in
and
daa
jp
inc
in
sbb
cmp
xchg
push
aas
rcl
jp
xor
cmp
dec
test
lock
mov
in
test
call
inc
jg
loope
lahf
in
lds
rol
jle
jae
mov
stos
mov
add
call
adc
pop
xor
lahf
popf
push
aad
cmp
and
call
cmp
push
xchg
scas
xchg
ret
cmp
xchg
dec
daa
or
sbb
add
call
cmp
jo
mov
jge
mov
pop
loopne
add
add
out
mov
out
and
jns
call
neg
jle
arpl
mov
imul
push
call
mov
sub
xchg
dec
xor
(bad)
sub
data16
lock
add
inc
pop
(bad)
mov
jl
dec
push
lock
or
nop
inc
push
fsubr
add
cs
into
push
cmp
and
jbe
lock
adc
dec
test
inc
cmp
add
loopne
jbe
hlt
repz
push
hlt
xchg
inc
xor
lock
xchg
or
mov
ds
into
inc
cmp
out
mov
hlt
dec
jge
ja
loopne
and
inc
call
popf
pop
lods
loop
retf
js
xchg
push
sbb
sbb
cmp
scas
mov
daa
ja
dec
adc
dec
xor
fdiv
cmp
int3
add
retf
mov
sbb
inc
lock
fiadd
mov
adc
loop
lods
push
and
inc
clc
stc
sbb
(bad)
mov
int3
xchg
mov
xchg
out
les
sbb
aaa
ds
test
stos
sub
stos
neg
mov
mov
or
scas
mov
push
jbe
lahf
(bad)
std
inc
and
mov
mov
cdq
in
les
outs
stos
sbb
mov
cmp
or
mov
add
pop
jl
inc
sbb
test
bound
cmp
cdq
xchg
loopne
les
fbld
lock
into
xchg
sbb
xchg
pop
add
xor
mov
mov
xchg
add
pop
call
arpl
xor
sbb
jg
jae
xor
and
call
xchg
jne
xchg
jne
jge
or
mov
hlt
sbb
cld
pushf
fsubr
and
cs
pop
dec
jbe
out
add
jge
pop
push
ss
rol
test
push
dec
idiv
jbe
das
or
mov
sub
imul
aam
imul
mov
mov
push
add
arpl
push
cmp
jmp
adc
bound
push
mov
jmp
icebp
les
out
mov
mov
push
popf
stos
push
stos
lahf
sbb
xor
mov
xor
(bad)
int
sub
es
test
mov
add
mov
push
jmp
ja
dec
test
jns
in
jns
add
inc
mov
xor
xor
loope
jae
cld
xor
daa
mov
add
jg
(bad)
rcl
pop
pop
cmp
pop
in
inc
jmp
inc
or
ins
aas
xchg
dec
fs
or
lods
in
ins
inc
jle
xor
dec
jbe
fs
xchg
popa
jno
dec
dec
lock
jb
cmp
sbb
pushf
dec
jecxz
lahf
adc
addr16
in
xchg
jne
popf
pop
and
mov
mov
cmp
mov
ins
in
jns
in
jl
dec
ja
ins
jmp
lahf
cdq
pop
and
shl
sbb
fcom
adc
or
dec
ret
test
into
mov
jp
idiv
out
call
push
and
xor
xor
cmp
out
ss
loop
adc
test
sbb
repnz
ins
cmp
inc
inc
sub
jge
sub
int3
xor
outs
xor
push
and
inc
ja
es
xor
mov
cmp
xchg
enter
push
or
mov
in
jge
call
dec
inc
mov
dec
out
jge
in
hlt
lea
inc
pop
iret
xor
and
dec
and
xor
inc
out
sbb
xor
cmp
ret
xchg
adc
sub
jp
xchg
push
pop
call
adc
inc
cli
inc
dec
pushf
call
bnd
test
jp
mov
scas
(bad)
out
dec
and
lods
sbb
jns
hlt
xor
inc
loopne
jmp
mov
pop
adc
mov
xchg
mov
cmp
cmp
hlt
ret
or
shl
shl
ja
push
jno
es
pop
lds
shr
pop
jl
aas
stos
mov
daa
int
inc
in
dec
ror
inc
mov
sub
sub
out
imul
pop
sahf
push
mov
mov
loope
std
aaa
fcomp
mov
xchg
xchg
loop
and
inc
fnstsw
loope
sub
sbb
call
clc
mov
arpl
aas
movaps
es
aam
sub
icebp
and
or
xchg
stc
std
mov
call
jmp
in
lods
mov
cmp
add
add
xor
pop
mov
push
xor
out
xchg
sbb
pop
mov
jmp
pushf
sub
push
jae
lahf
es
inc
loope
out
xor
stc
sub
xchg
sti
imul
movs
mov
test
mov
mov
pusha
test
pop
sbb
cmp
inc
cli
xchg
js
movs
movs
jge
in
inc
ficom
mov
int3
aam
stc
cld
stc
repnz
push
aaa
sub
aam
fld
push
fsubr
xlat
movs
das
xchg
out
jg
pop
fwait
pop
pop
popf
int
pop
aas
into
sub
dec
push
sti
out
movs
ins
ins
jmp
jo
fcomp
or
stos
pop
das
pop
pop
pop
lods
or
fist
stc
in
fmul
or
sub
pop
lods
lahf
jge
cmp
int3
push
push
mov
dec
pop
cmp
jbe
jae
movs
pushf
ror
lahf
lock
add
loopne
mov
pop
push
imul
fcomp
repnz
cwde
cmp
cmp
mov
scas
or
sbb
adc
ror
pop
fbstp
scas
test
sahf
xor
fcomp
push
clc
pop
gs
xlat
xchg
mov
cld
fimul
and
imul
fcomp
mov
inc
test
ret
fcomp
cmp
rol
int3
das
lods
(bad)
inc
jecxz
push
(bad)
je
ja
in
sbb
pop
scas
dec
das
add
rcr
fdivp
dec
test
mov
stos
mov
xor
fmul
xor
(bad)
mov
gs
xor
jne
mov
aam
sti
sub
pop
or
fcom
loope
jg
retf
fcomp
pop
sbb
push
in
xor
jb
jmp
(bad)
out
pop
push
retf
mov
cli
or
adc
into
jne
in
lods
sub
cmp
in
leave
shr
fcomp
pusha
dec
test
icebp
fdivr
fistp
ins
sub
addr16
xlat
sbb
mov
pop
cld
shr
pop
sbb
or
jb
cdq
(bad)
mov
jmp
in
xor
add
mov
xor
fdivr
pop
jnp
dec
nop
push
push
pop
xor
sbb
out
call
jmp
jnp
pop
sbb
cmp
mov
jle
lods
xor
lods
pop
inc
cmp
jnp
xor
in
(bad)
jge
or
retf
xor
(bad)
or
rcl
mov
sub
outs
ds
repnz
cmp
dec
cs
jl
pop
dec
jne
fmul
sub
fdivr
or
adc
sti
lahf
cdq
(bad)
out
mov
stos
popf
int3
sub
lods
mov
add
addr16
int3
(bad)
sti
dec
sub
adc
sub
lock
retf
push
lds
fdivr
fdivrp
sbb
lods
jle
pop
loopne
stc
fild
fcomp
lahf
mov
mov
stos
cmp
popf
fmul
pop
jl
xor
or
sahf
dec
stc
in
pushf
mov
int3
pop
out
lea
pop
or
fcom
cmp
pop
pop
cmp
imul
fisttp
in
nop
pushf
mov
cmp
sub
fnstsw
imul
adc
sbb
stos
cmp
lea
lods
int
jno
push
imul
cmp
ins
dec
mov
pop
cmps
std
fwait
ins
ins
cmp
(bad)
jnp
pop
adc
ins
fmul
retf
outs
fcmovnu
mov
sbb
sbb
in
ret
jl
mov
cmp
mov
test
sub
or
sub
int
mov
cmp
adc
scas
cli
dec
in
push
xchg
stos
fstp
int
imul
sbb
fimul
fidivr
mov
out
shr
fisubr
mov
mov
lods
ins
cld
sti
into
sub
(bad)
lods
jmp
stos
popf
in
sbb
sbb
(bad)
shr
rcr
fwait
aad
sbb
pop
cmp
fild
mov
mov
sbb
int
aam
or
int3
push
scas
push
dec
in
movs
lock
test
jnp
popf
fwait
mov
ins
mov
or
cld
stos
ins
icebp
jl
in
retf
push
pop
mov
rol
(bad)
sbb
push
std
int3
imul
int3
lods
pop
ins
aam
mov
int
popf
cli
inc
push
icebp
jmp
adc
sub
ds
pop
cmp
sbb
mov
push
xchg
xlat
sub
or
mov
cmp
dec
(bad)
jne
sbb
lods
cs
cmp
in
sub
fimul
jmp
fidivr
jle
icebp
mov
mov
dec
adc
dec
sti
sbb
dec
pop
pushf
aad
popa
sbb
sub
sar
in
dec
imul
sti
mov
push
pushf
fs
fisubr
out
ins
cmp
jle
shl
mov
fisubr
push
jl
dec
fimul
pusha
cmp
or
sbb
ss
xor
add
xchg
retf
xchg
jp
cmp
cs
push
cmp
dec
(bad)
adc
cs
call
pop
pop
(bad)
dec
int3
mov
addr16
movs
mov
mov
pop
fs
jbe
in
mov
mov
retf
lea
push
or
sub
sbb
xor
sti
ins
jmp
mov
adc
cmp
cmp
movs
inc
cmp
push
pop
clc
in
pop
sub
mov
(bad)
sbb
pop
popf
sub
sahf
in
sar
dec
stos
out
jae
int
push
sti
pushf
mov
or
dec
gs
dec
in
cli
jnp
jmp
jge
fs
stos
push
fimul
dec
push
pop
push
dec
pushf
fnstsw
fild
outs
pop
ds
sti
sbb
out
mov
shl
pop
cmp
ror
(bad)
into
cmp
enter
pop
xor
pushf
cmp
xor
dec
xchg
std
shr
sub
fistp
jge
pop
mov
cmp
xor
ss
mulps
(bad)
bound
btr
push
cmp
in
call
dec
or
outs
fs
in
loop
and
dec
sbb
or
xchg
mov
xchg
adc
sub
sbb
dec
test
jecxz
shr
mov
pop
push
xor
aas
imul
shr
les
lods
jl
cwde
dec
sub
mov
jmp
les
call
in
jge
rcr
cmp
jecxz
mov
lahf
in
mov
mov
(bad)
int3
lods
popf
sbb
inc
and
xor
jecxz
push
sbb
stos
cmp
popf
pop
mov
adc
inc
(bad)
dec
push
mov
sub
imul
jl
cmp
pop
fdiv
out
cld
push
pop
shl
sbb
mov
sub
jg
xchg
inc
inc
popf
pop
fdivrp
call
jl
xor
dec
mov
in
inc
jmp
sub
jmp
jnp
mov
fisubr
and
das
cdq
(bad)
jne
xchg
cld
adc
ds
xlat
in
push
fstp
jg
idiv
in
xlat
ror
lahf
dec
fisttp
jg
sbb
ror
mov
push
mov
sbb
mov
ins
call
jge
adc
out
rol
push
cmp
fild
jl
fnstsw
pushf
push
push
push
adc
fild
xchg
pop
retf
ror
into
cmp
xor
or
int3
(bad)
lods
leave
jmp
stos
pop
std
adc
test
pushf
jb
fstp
int
rcr
lods
mov
mov
mov
mov
jmp
mov
and
pop
add
adc
mov
pop
repz
sbb
push
push
dec
shr
sub
cld
fisttp
add
mov
(bad)
repnz
stos
mov
fstp
jge
retf
mov
sbb
inc
mov
or
jmp
loopne
or
push
mov
mov
xlat
mov
or
pop
sti
js
jge
inc
mov
rcr
adc
jge
lea
mov
mov
jge
xor
cld
pop
fcmovne
jmp
ins
sub
icebp
mov
popf
int
out
popa
mov
sbb
sub
mov
cld
jge
stos
push
lods
ins
jge
ficom
mov
js
xor
shl
push
call
fs
push
jle
cld
mov
ficom
ret
scas
in
jo
jnp
popf
adc
xor
sbb
test
pop
cld
jnp
shr
xor
int
(bad)
push
repz
leave
sub
fistp
sti
jge
sbb
sub
pop
push
push
in
mov
pop
jnp
mov
in
in
xchg
jmp
sub
pop
push
sub
cli
sbb
inc
leave
jecxz
mov
fimul
jp
or
push
jnp
mov
dec
stc
xchg
pop
cmp
(bad)
jg
add
lods
pop
pop
ss
ror
js
repnz
(bad)
(bad)
(bad)
sahf
mov
movs
mov
lods
sbb
push
in
and
push
cld
xor
ins
inc
and
fwait
cld
fstp
push
inc
pop
test
mov
retf
xor
test
imul
lods
or
pop
pop
jge
(bad)
sahf
xor
cli
fwait
push
in
push
mov
sbb
stos
imul
test
loope
xor
stos
sub
jne
fcom
fidivr
jle
mov
popf
adc
mov
int3
dec
pop
fistp
call
jecxz
cld
jecxz
icebp
ins
imul
lods
shl
pop
cld
mov
enter
test
fwait
dec
repnz
inc
mov
xchg
jnp
aad
lahf
call
sar
retf
lock
dec
fcmovne
ror
pop
aam
mov
mov
mov
lods
mov
pop
dec
dec
pop
jmp
ins
lds
cwde
in
cmp
xchg
sbb
test
fidivr
jns
cwde
cmps
mov
mov
movs
xchg
jne
xchg
lods
in
fisub
or
fwait
mov
(bad)
fstp
in
fs
pop
leave
cwde
fisubr
inc
mov
loop
dec
jnp
movs
in
or
mov
int
ds
nop
outs
les
(bad)
cmp
mov
pop
cmp
mov
mov
mov
mov
mov
sub
cmp
inc
pop
ficomp
adc
inc
sbb
and
int
xchg
xor
push
push
dec
call
jae
lahf
sar
jp
mov
xchg
mov
cmp
sub
mov
idiv
push
shl
mov
jecxz
jo
loopne
aas
les
sub
int
mov
push
rcl
mov
stos
adc
sbb
(bad)
mov
dec
pushf
inc
fs
inc
or
push
pushf
jmp
fs
inc
mov
push
pop
fnstsw
in
(bad)
mov
and
stos
mov
push
sub
jl
jle
jmp
jge
jge
dec
repnz
and
sbb
imul
movs
cmp
fadd
(bad)
retf
pop
lods
xor
mov
(bad)
cmp
add
idiv
shr
mov
ret
and
(bad)
shl
jl
push
test
cld
lock
movs
in
sbb
jmp
call
mov
aam
int3
outs
or
and
cli
fistp
or
jl
scas
movs
rcr
cmp
call
mov
mov
sti
popf
pop
retf
ins
ins
lds
test
mov
jnp
ins
data16
rcr
dec
dec
sub
sub
retf
push
xchg
rcr
mov
out
pushf
stos
dec
test
fs
popf
pop
inc
popf
dec
jecxz
push
(bad)
sbb
pop
rcr
push
fdivr
push
or
gs
(bad)
(bad)
mov
scas
pushf
call
and
push
and
jns
mov
xlat
and
mov
hlt
bound
push
mov
jp
movs
rol
inc
sub
or
test
enter
mov
ffree
(bad)
sub
sbb
mov
pop
dec
xchg
sti
lock
es
mov
xor
jno
sbb
jnp
fimul
jl
cmp
push
out
sub
pop
xchg
(bad)
jp
in
push
cmp
cld
rcl
push
cli
neg
push
mov
add
add
sbb
dec
sbb
jp
or
rol
test
jl
movs
leave
fadd
mov
(bad)
fmul
mov
lods
shl
mov
bound
popf
in
sub
pop
outs
fwait
cmp
mov
mov
sub
std
out
mov
imul
mov
stos
push
ins
je
test
fbld
adc
mov
sub
ret
call
add
adc
stos
jmp
(bad)
dec
sub
sbb
fwait
push
mov
pop
mov
cli
mov
shr
fwait
mov
dec
aaa
pop
sbb
sbb
lea
and
movs
cld
sar
push
leave
or
jb
push
stos
mov
xor
jmp
sub
push
mov
lods
jmp
push
dec
int3
sub
sbb
rcr
pop
stos
scas
adc
and
mov
mov
(bad)
lods
ins
mov
mov
sbb
pusha
push
(bad)
fnstsw
fcom
outs
loopne
stc
mov
sti
arpl
je
fwait
push
sbb
lea
push
(bad)
jge
ror
push
add
jmp
popf
jmp
sbb
push
sbb
shr
push
jl
sub
fcmovnbe
xchg
out
mov
push
mov
cmp
test
sti
int
leave
ins
aas
mov
loop
ins
cmp
call
sbb
mov
pop
cld
stos
out
add
xchg
cmc
jmp
cmp
xor
(bad)
fmul
cs
dec
and
js
xchg
mov
enter
adc
push
push
enter
push
pop
sti
sahf
jbe
jl
or
mov
pushf
jg
and
in
xchg
loopne
(bad)
shl
mov
push
aaa
jnp
sbb
test
mov
mov
mov
xchg
xor
nop
push
ror
cmp
push
ja
outs
(bad)
xchg
xor
push
add
inc
rcl
or
fucomi
sbb
daa
push
(bad)
std
ins
into
add
mov
enter
jmp
dec
popf
call
pop
cmp
inc
popf
ffree
sbb
sar
adc
ret
jmp
loope
fldenv
or
mov
call
sub
dec
rol
push
or
imul
lods
(bad)
hlt
pushf
xchg
popf
mov
stos
lods
retf
jge
retf
ins
sbb
sbb
and
movs
pop
imul
mov
shr
mov
cld
jmp
outs
or
call
shl
cs
add
neg
ret
pop
jge
paddsw
mov
mov
jno
mov
rcr
icebp
mov
test
sub
sbb
inc
inc
sub
pop
cmps
pop
in
(bad)
mov
push
fcos
ds
sti
(bad)
jmp
jecxz
retf
jle
ins
sub
xchg
sub
jge
repz
cli
cmp
push
jbe
xlat
call
in
jl
leave
rcr
push
xchg
jp
mov
nop
jl
cld
fs
loop
int3
mov
xchg
mov
adc
mov
into
lods
sub
sub
dec
cmp
pop
lods
(bad)
lahf
pop
xor
or
out
int
outs
mov
(bad)
imul
popf
cmp
fstp
daa
xchg
sbb
ror
mov
shr
stos
pop
jns
popf
and
lock
sbb
sti
stos
repnz
jl
mov
adc
fld
cld
shl
mov
test
jmp
fwait
sbb
cmp
add
mov
or
ins
jb
jmp
sub
lock
shl
call
pop
cmp
std
xor
scas
inc
in
loopne
jmp
mov
mov
nop
seto
int
push
fwait
pop
lea
jns
mov
sar
xchg
in
in
push
xor
(bad)
loopne
dec
inc
int3
fdiv
ins
rol
cmp
call
push
scas
mov
xor
jge
lock
fild
fs
(bad)
jne
cld
pop
out
les
pop
adc
push
mov
sti
ror
cld
dec
(bad)
sbb
rcl
pop
int3
sar
push
mov
sbb
lahf
lock
in
aas
adc
sub
mov
adc
and
mov
sub
and
sbb
xor
pusha
std
inc
mov
and
stos
jge
xchg
dec
in
push
inc
dec
mov
call
mov
sbb
xchg
cmp
inc
sbb
jp
jmp
shr
adc
push
popf
inc
imul
mov
loopne
jmp
int
out
pusha
test
jmp
add
sbb
cmp
lods
xor
movs
and
iret
dec
xchg
pop
(bad)
lods
arpl
(bad)
mov
lea
push
mov
fiadd
jo
push
inc
mov
repz
fwait
daa
fstp
xor
retf
mov
loop
leave
aaa
popa
js
in
in
pop
sti
and
popf
xor
add
ins
stc
(bad)
jge
jbe
and
rcr
add
dec
lds
sti
test
sub
sub
xchg
or
enter
mov
cs
int3
(bad)
pop
sbb
dec
popf
int
cmp
popa
dec
std
cmp
fstp
xchg
pusha
adc
cmps
out
sub
enter
sub
inc
push
jno
cmp
lea
jmp
dec
imul
in
cmp
sub
add
icebp
jb
pop
call
lgs
dec
xchg
xor
icebp
loope
out
dec
pop
sbb
xor
leave
sahf
and
push
nop
jbe
imul
jnp
mov
repz
cs
arpl
push
outs
fdiv
xchg
cmp
xchg
fsubr
xchg
cmc
daa
jb
cdq
repz
sbb
sbb
out
pushf
xchg
adc
inc
pushf
or
xchg
popa
mov
and
lods
mov
rcr
movs
push
(bad)
shl
loop
mov
push
je
fiadd
add
jle
shl
push
in
repz
or
inc
sub
push
inc
sub
xchg
cdq
dec
jo
mov
push
stos
mov
leave
dec
cmp
adc
aaa
out
sub
dec
or
pop
stos
and
inc
mov
xchg
popf
cmp
ret
addr16
add
mov
(bad)
adc
inc
sbb
jl
xor
inc
jo
cmovp
pop
fistp
cld
inc
dec
xchg
cdq
ss
ffreep
fmulp
fst
xlat
mov
cli
fwait
jl
sbb
xor
outs
aas
daa
mov
add
test
fcmovne
jo
jmp
aas
mov
sub
adc
nop
sub
jge
rcr
sar
(bad)
jno
stos
dec
daa
cmp
aam
xchg
jmp
sub
pop
add
inc
cmp
sub
call
repz
inc
lods
xlat
cmp
movs
mov
and
jg
div
sbb
gs
xor
test
in
lods
test
ja
jnp
stos
xchg
xor
adc
cmp
pop
stos
fnstsw
push
cmp
retfw
pop
push
sbb
das
icebp
or
jb
jg
jae
pop
push
or
sbb
cdq
cs
test
push
jmp
fiadd
cld
jg
xchg
mov
xor
lea
pop
pushf
xchg
rcl
inc
int3
push
aad
push
or
xchg
mov
sbb
dec
xor
pop
(bad)
aaa
dec
adc
(bad)
push
xchg
xor
xor
pop
sbb
dec
pop
or
or
and
iret
clc
sahf
mov
cs
ss
mov
popf
rol
mov
aad
popa
daa
in
lock
sbb
(bad)
popf
xor
jge
jno
mov
je
xchg
stc
xor
scas
mov
sti
ret
das
push
xchg
in
lahf
push
mov
jl
int3
adc
jmp
adc
dec
or
push
mov
iret
mov
ins
loope
jb
push
(bad)
std
jns
rol
xchg
jle
jg
xchg
push
cmp
fistp
cmps
and
scas
add
lods
(bad)
aam
ja
adc
icebp
or
popa
hlt
out
lahf
pop
sub
ins
ins
in
pop
or
out
mov
add
sbb
rcl
rcl
push
sub
dec
pop
push
mov
xor
jge
ins
xor
cmp
addr16
mov
pushf
sbb
inc
push
xchg
cld
cmp
sti
int
dec
enter
jns
fisttp
xor
inc
sub
daa
inc
aas
xchg
test
or
mov
pop
cld
call
sbb
and
std
repnz
aas
popf
adc
mov
pop
and
data16
sub
in
add
fwait
sub
not
add
pop
pop
push
repnz
mov
jmp
out
and
popf
pusha
sbb
adc
jmp
das
pushf
inc
ja
add
stc
sbb
dec
sar
ins
mov
adc
jp
imul
xchg
push
or
rcr
hlt
scas
xor
mov
sti
rcr
dec
loop
ret
aas
jbe
pop
inc
add
fstp
adc
mov
add
sbb
fisttp
jne
adc
sbb
mov
add
jmp
sbb
sub
pop
jge
or
add
fwait
pop
les
js
or
cwde
push
push
cs
pop
sbb
test
sub
and
fwait
into
dec
push
jl
push
jecxz
xchg
cmp
int
ss
sub
sti
pop
inc
fucom
loope
dec
mov
xlat
sub
jg
mov
daa
sbb
xchg
scas
or
xor
sub
pop
mov
or
in
xor
dec
ja
adc
jl
inc
adc
(bad)
cld
ficomp
push
and
mov
loope
ret
xchg
sbb
ror
mov
cmp
cdq
lock
adc
xor
arpl
out
dec
mov
mov
push
imul
sbb
push
dec
dec
in
loope
out
fidivr
push
cmp
mov
adc
mov
inc
cld
stc
push
mov
jg
adc
cli
adc
lods
mov
pushf
mov
fs
sti
in
outs
fmul
rcl
jo
lods
bound
loope
or
mov
je
jp
scas
addr16
loopne
xchg
add
mov
lea
std
arpl
xor
mov
sub
pushf
pop
std
mov
ds
jae
jb
jae
xor
inc
jae
xchg
shl
add
pop
pop
add
rol
pushf
icebp
fucom
jge
rcr
and
mov
mov
xchg
dec
push
pop
or
xchg
or
xchg
and
xchg
hlt
sbb
mov
xchg
aas
mov
je
sbb
ins
jge
hlt
inc
stc
mov
xlat
mov
int
pop
sbb
dec
add
cwde
cld
jge
in
mov
add
pop
loopne
and
arpl
clc
cmp
rcl
aas
mov
fidivr
js
cmp
lea
pop
and
dec
aaa
popf
lahf
(bad)
sub
ficomp
xchg
cli
pop
mov
jns
rol
call
mov
sub
adc
xchg
xlat
mov
cld
lea
dec
leave
sub
in
jp
repnz
mov
lods
xor
add
cmp
push
iret
sub
mov
dec
or
cli
push
jne
fild
(bad)
and
sbb
mov
ret
fwait
jnp
fs
out
mov
xchg
sbb
iret
repnz
enter
cs
sbb
push
sbb
cmp
cmp
sub
lods
in
xor
or
ds
cwde
lods
shl
cmp
add
pop
push
dec
add
cld
sub
test
dec
sbb
ss
fcmovne
xchg
xchg
jae
xor
and
pop
sub
sbb
icebp
pop
sub
xchg
xchg
fs
pushf
and
jge
enter
dec
sub
sar
mov
mov
data16
mov
xchg
mov
cmp
lods
sbb
pop
xbegin
cmps
push
push
popf
sub
cmp
add
push
test
test
(bad)
mov
adc
cld
fsub
dec
lods
ins
test
mov
ror
push
adc
xor
(bad)
xlat
push
adc
lea
cmpps
repz
sub
aas
xor
sub
pushf
jle
xor
xchg
ss
bound
mov
ret
xchg
cmp
ins
int
push
sub
int3
pushf
push
push
mov
pop
jmp
cmp
cmp
sub
sbb
dec
loope
sti
add
jns
sti
popa
pushf
neg
out
mov
lds
xchg
les
mov
jg
push
mov
and
mov
dec
lea
cmp
mov
push
imul
ret
sti
(bad)
sub
outs
in
xchg
push
pop
or
xchg
arpl
adc
popf
daa
pop
gs
outs
xchg
push
popf
adc
sub
jl
pop
int
int
in
cdq
pop
xchg
mov
mov
mov
or
adc
fistp
xchg
in
xchg
pop
or
sbb
shl
xor
or
ret
jp
adc
cmp
lock
popa
cmp
or
jae
sbb
adc
in
ins
add
inc
enter
ror
sbb
jns
lea
sar
xor
in
loope
stos
xchg
add
pop
xor
dec
dec
or
repz
jmp
xchg
cli
mov
or
sahf
jl
adc
cmc
xchg
movs
mov
imul
xor
popf
xor
xor
push
call
xlat
loop
sbb
sbb
inc
or
ret
out
imul
(bad)
xor
(bad)
cmp
aas
jmp
not
pop
icebp
jns
inc
out
dec
cld
ss
mov
mov
adc
fwait
mov
lock
jmp
mov
or
(bad)
jmp
jb
(bad)
push
(bad)
popa
xor
sub
mov
xchg
mov
fs
sbb
(bad)
(bad)
cmp
jae
xchg
jl
pop
sub
push
pop
mov
cwde
div
mov
pop
hlt
jnp
sub
ret
add
call
xor
scas
pusha
xchg
ss
shr
jae
sbb
cld
idiv
stc
xor
mov
jns
lahf
adc
mov
jns
stos
lea
aad
int3
jmp
mov
dec
pushf
jae
mov
mov
jb
sub
mov
in
add
int3
in
out
xchg
cmp
pushf
sub
mov
or
ja
pop
mov
lods
push
sbb
leave
in
mov
pop
mov
inc
cmp
mov
lahf
cmps
cmp
in
mov
aad
mov
mov
btc
mov
pop
xor
jp
adc
mov
push
mov
xor
imul
into
xor
dec
sbb
xchg
jge
ds
sti
add
sbb
adc
mov
cmp
icebp
inc
push
addr16
stos
sub
jp
sbb
cmp
cmp
xlat
adc
xchg
jmp
in
mov
push
or
popf
in
adc
mov
push
xor
sbb
xor
in
fucom
xor
jle
inc
ins
jmp
sbb
popw
popf
cmp
rol
ja
adc
add
add
adc
retf
mov
lds
adc
and
fldcw
(bad)
les
or
sbb
popf
mov
jbe
and
add
dec
popa
aad
mov
pushf
dec
mov
inc
shl
test
sbb
sub
sbb
mov
ror
pop
mov
loop
hlt
scas
clc
out
xchg
out
mov
jbe
sti
icebp
dec
xchg
xor
std
aaa
xchg
xchg
inc
shl
(bad)
mov
sub
cmp
(bad)
and
ss
jo
sub
xor
imul
dec
or
fcomp
add
sbb
loop
cmps
mov
mov
or
test
mov
dec
mov
cs
pop
mov
xchg
(bad)
loopne
inc
dec
mov
adc
push
pushf
pop
and
sub
imul
gs
aad
cmps
or
in
mov
in
gs
pop
imul
fsubp
pop
pop
fwait
dec
repnz
es
dec
and
cmp
or
cmp
movs
xchg
mov
in
cwde
adc
inc
mov
add
sbb
pop
mov
out
neg
ins
mov
in
mov
test
mov
out
mov
jl
jns
(bad)
ret
mov
mov
cmc
xor
pop
loop
ficomp
or
mov
retf
es
inc
xchg
sbb
lea
and
jg
out
stos
mov
es
adc
or
mov
dec
aas
dec
pop
mov
xchg
pop
adc
dec
push
jl
fist
pop
dec
cmp
and
jbe
ret
popf
lock
pushf
pushf
mov
lods
in
add
mov
add
lods
mov
in
cmp
pushf
fwait
mov
inc
or
push
(bad)
cmp
cmps
or
out
jne
lods
xchg
mov
mov
mov
iret
pop
xor
popa
sbb
fldcw
cmp
ror
bound
mov
sub
xchg
lea
ja
lock
out
cdq
mov
push
cdq
jge
dec
xchg
jge
callw
pop
je
dec
add
mov
shl
xchg
fcomi
lahf
sub
add
loop
jge
sub
push
into
mov
mov
ins
sub
out
(bad)
ret
sbb
mov
outs
mov
inc
sbb
xchg
lock
xchg
fidiv
mov
ret
sub
ffreep
in
js
movs
pop
neg
out
lods
xchg
xchg
or
outs
push
and
stc
ins
mov
js
cmp
push
pop
retf
stos
cmp
test
sar
ins
repz
sub
rcl
fcmovbe
das
push
cmp
push
xchg
cmp
jmp
jae
push
add
push
add
xchg
push
daa
or
jmp
xchg
lods
mov
mov
shl
bound
in
cs
jg
or
int3
xchg
movs
xor
sar
das
xchg
adc
mov
dec
cmp
sbb
cmp
add
mov
lods
mov
mov
push
push
bnd
mov
xor
pop
sub
cld
lods
cmp
out
mov
scas
xchg
mov
inc
add
in
loop
jge
out
sub
mov
and
pop
inc
fild
sbb
jg
and
(bad)
and
mov
xchg
stos
add
jecxz
inc
jg
mov
cld
mov
in
cmp
ret
in
test
mov
ds
dec
pop
(bad)
and
sbb
mov
and
jmp
sbb
(bad)
ss
retf
in
gs
mov
add
dec
test
mov
ret
push
ins
ja
movs
mov
aas
arpl
mov
sbb
dec
xchg
mov
inc
(bad)
retf
ds
sbb
xlat
mov
lahf
xchg
xor
mov
call
sbb
popa
enter
xor
jo
xor
icebp
xchg
mov
test
dec
dec
dec
mov
or
push
iret
jle
mov
retf
hlt
xchg
dec
cmp
ret
sub
ret
or
test
sbb
pushf
outs
adc
cmp
int3
sub
bound
out
sub
pop
xchg
or
loopne
out
pop
cmp
adc
xchg
xchg
mov
mov
pop
mov
sbb
sahf
mov
(bad)
jmp
cdq
in
xor
arpl
jmp
inc
dec
ins
mov
xor
push
pop
dec
mov
ret
push
addr16
inc
imul
xchg
popf
(bad)
repz
sub
pop
cmp
fldcw
inc
pop
call
dec
(bad)
es
test
outs
jb
sbb
ror
adc
xor
(bad)
ins
push
leave
clc
aaa
cmp
je
int3
(bad)
xchg
mov
add
push
jb
or
pop
jbe
xor
pop
dec
push
add
mov
int3
dec
imul
push
mov
mov
or
(bad)
aaa
ins
push
call
xor
and
stos
adc
push
jmp
sub
and
out
jle
ja
xchg
or
sbb
xchg
cmp
add
mov
retf
add
sahf
push
mov
push
imul
iret
stos
xchg
mov
or
pop
out
ja
add
and
lods
cld
push
pop
not
sbb
or
or
leave
daa
add
or
test
aas
ins
int
cdq
add
dec
aam
mov
mov
jp
add
cmp
enter
mov
lods
sahf
imul
ins
mov
ret
add
add
xchg
cdq
fcmovb
or
ins
inc
outs
stc
xlat
inc
ins
fiadd
mov
adc
mov
std
sub
dec
sbb
sbb
bound
lods
ss
pop
cmps
lahf
adc
pop
mov
bound
mov
sub
stos
push
xchg
mov
inc
xor
sub
test
aas
xor
enter
rol
ret
mov
dec
push
mov
mov
jb
mov
fdivp
into
sub
dec
push
rcl
mov
mov
sbb
inc
pop
inc
ror
add
dec
mov
mov
and
sbb
sub
lea
(bad)
faddp
neg
or
std
aad
mov
aad
(bad)
ins
pop
xchg
inc
inc
inc
test
dec
aaa
xchg
ds
outs
pop
inc
imul
push
jecxz
xchg
adc
stc
test
cmp
cmps
xor
inc
push
cmp
cmp
push
xlat
fcmovne
scas
mov
inc
mov
outs
mov
fist
and
ss
cmp
daa
ror
sub
inc
je
stc
mov
mov
repnz
mov
add
es
mov
in
dec
push
lods
push
xchg
test
jae
repnz
and
in
clc
pop
jecxz
lds
add
jnp
push
outs
sbb
sbb
repnz
xor
inc
dec
cdq
mov
rcl
push
sub
or
or
lea
mov
xor
loopne
cmc
out
movs
lods
jp
and
add
ror
push
mov
addr16
xchg
ins
loopne
fldcw
sub
imul
xor
shl
mov
ins
sbb
add
sub
ror
and
push
mov
test
lea
pop
and
(bad)
in
xchg
xor
cld
lock
jae
jae
cmp
xchg
sbb
mov
push
jmp
add
sbb
mov
and
popf
ins
loop
sub
xlat
(bad)
xor
inc
hlt
dec
xor
sbb
cmp
cs
push
not
push
sbb
xor
sbb
sub
mov
cmp
es
add
cmp
daa
xchg
hlt
daa
jb
jmp
sub
sbb
mov
xor
ja
or
lods
or
out
imul
mov
push
arpl
arpl
mov
mov
mov
xor
ss
(bad)
hlt
push
jle
outs
lea
add
or
mov
pop
cmp
loopne
add
dec
iret
pushf
jae
ins
push
lahf
jl
sbb
inc
add
inc
mov
ss
jmp
or
jo
neg
mov
test
inc
scas
(bad)
sub
cmp
rcr
jmp
mov
cmp
cmp
into
xor
push
mov
out
call
adc
cmp
xor
dec
mov
push
movs
movs
or
inc
cmps
mov
aaa
arpl
inc
dec
mov
xor
mov
cmp
div
cmp
jp
sahf
jg
mov
cld
xlat
fst
sub
lods
inc
bound
or
ins
cmp
lahf
mov
dec
sub
es
fyl2xp1
and
or
(bad)
pop
xor
fs
cmp
mov
test
je
adc
xor
cmps
jmp
xchg
xchg
lock
outs
pop
sahf
and
test
bound
add
imul
in
nop
jno
in
lahf
mov
lock
or
xchg
ins
aaa
adc
test
cwde
dec
adc
data16
ins
push
fadd
shr
add
in
mov
adc
out
sbb
cld
jno
mov
int3
xchg
or
adc
mov
mov
pop
jne
ss
inc
aaa
jmp
add
loopne
and
mov
popa
xchg
inc
or
inc
dec
pusha
mov
bound
out
jecxz
in
std
ins
dec
shl
out
cdq
dec
inc
mov
gs
and
add
int3
sbb
mov
jo
pop
in
loope
imul
xchg
leave
jnp
jp
xchg
jle
rcl
and
dec
sub
int
xchg
fidiv
dec
retf
aaa
and
sub
xor
js
and
enter
sbb
add
mov
and
loopne
jo
jae
pop
rcl
scas
in
lds
mov
adc
js
xor
imul
pushf
dec
mov
mov
fincstp
stos
jecxz
push
dec
retf
dec
xor
cmp
and
arpl
imul
xchg
sub
xor
int
mov
jne
add
pop
sbb
xor
test
adc
ja
addr16
mov
mov
mov
mov
add
inc
call
mov
mov
aad
xchg
push
add
popa
push
dec
psrad
or
and
sub
xor
jg
popf
inc
jle
popa
dec
or
mov
xor
popf
inc
cmp
loope
aaa
mov
popa
adc
jb
dec
dec
xchg
seto
dec
ja
and
mov
outs
fld
rcl
retf
aas
enter
repnz
sbb
dec
lea
aaa
loop
sahf
jbe
cmp
call
mul
mov
xchg
jl
inc
cmp
push
outs
fisttp
push
inc
movs
jns
sub
pop
xor
push
icebp
call
test
cdq
mov
add
stos
and
mov
sub
scas
inc
sbb
cld
xchg
push
mov
dec
sub
test
jb
jl
xor
rcr
and
pop
push
dec
dec
jge
or
imul
call
das
mov
inc
xchg
xchg
add
lods
fwait
mov
int3
push
sahf
mov
test
adc
cdq
jns
js
jp
push
pop
pop
xlat
pop
push
rcl
add
lods
lahf
(bad)
cmp
rcr
mov
mov
xchg
mov
add
in
xchg
xchg
jnp
(bad)
mov
push
lea
loope
repz
ret
ror
xor
jmp
std
and
ret
sub
pop
outs
(bad)
and
cdq
shl
dec
mov
push
ins
xchg
inc
mov
and
sub
loopne
jge
push
test
div
inc
nop
sub
dec
lock
and
dec
push
in
in
or
push
adc
jp
inc
and
dec
jnp
aam
add
inc
cmp
mov
and
lods
(bad)
dec
enter
outs
sub
imul
test
sbb
push
ins
cmp
and
jle
xlat
iret
pop
jp
and
pop
or
mov
jle
fstp
fistp
not
inc
jb
ret
xchg
push
adc
mov
push
jbe
xor
mov
lock
mov
adc
inc
test
mul
push
xor
ins
jo
or
jo
xchg
fsub
dec
xchg
jo
xor
sbb
mov
aaa
jns
mov
mov
adc
xchg
test
mov
out
shl
mov
pop
bound
mov
jbe
arpl
xchg
and
out
pop
mov
into
mov
sbb
xchg
fdiv
outs
cdq
test
add
inc
cmp
xchg
in
mov
mov
icebp
ja
mov
retf
sahf
outs
add
push
cmp
test
mov
mov
adc
sahf
xor
cmp
and
test
dec
call
dec
out
adc
mov
iret
xor
mov
or
test
jb
xchg
ja
xor
sub
sbb
and
xor
cmp
shl
cmp
cmc
div
(bad)
sbb
jno
mov
sbb
cmp
add
cmps
sbb
adc
outs
sub
into
push
icebp
mov
push
inc
fs
movs
lahf
push
fsub
clc
daa
cld
jns
repnz
inc
in
push
push
jge
sub
dec
aaa
pushf
pop
out
mov
mov
add
jle
cmc
cmp
mov
push
popa
inc
mov
jno
adc
add
repnz
add
jno
inc
push
js
jg
add
scas
jmp
add
xor
mov
ja
fwait
cwde
repnz
inc
xor
test
mov
mov
arpl
out
xchg
or
adc
loope
sub
test
ss
mov
mov
in
jle
mov
test
push
repnz
push
inc
aad
adc
cld
ss
in
jns
test
xchg
adc
dec
int3
add
jle
stos
mov
mov
xor
daa
ds
cmp
pop
cwde
mov
dec
inc
in
add
inc
mov
sub
inc
xor
jmp
addr16
cmp
jecxz
sbb
add
push
in
mov
leave
test
xchg
mov
movs
xor
icebp
jge
enter
aad
int
dec
dec
leave
jmp
jg
xor
push
dec
cmp
pushf
add
mov
bound
ss
or
mov
jp
ret
push
fs
mov
xor
les
cmovge
ror
loopne
dec
mov
xchg
add
cmp
push
in
loopne
fild
xchg
sbb
out
daa
fdivr
(bad)
push
in
imul
sbb
cld
xchg
push
lea
aas
pushf
sbb
stc
xchg
movs
fsub
cld
adc
xchg
in
dec
idiv
xchg
add
inc
vmptrld
std
out
imul
repz
jne
xor
jge
adc
add
mov
cmp
pop
or
xor
add
cmp
shl
mul
mov
in
push
arpl
inc
mov
mov
popf
ret
in
mov
mov
sub
test
pop
xchg
icebp
and
push
sbb
stos
xchg
cmp
mul
ds
sbb
ja
retf
dec
pop
mov
arpl
mov
xchg
sbb
jmp
dec
sub
js
adc
inc
mov
out
dec
das
push
test
xchg
outs
cmc
mov
xchg
cmp
imul
cmp
cmp
test
loope
xor
pop
scas
lea
aas
out
dec
mov
or
js
xchg
rcl
outs
adc
dec
test
loopne
cmps
sub
test
icebp
arpl
out
pop
jp
xor
out
mov
pop
js
xchg
inc
sub
mov
and
dec
sar
das
in
cdq
sbb
cmp
or
out
gs
add
bndldx
mov
pop
sahf
iret
mov
int3
jl
call
(bad)
dec
mov
js
cmp
loope
or
les
inc
adc
loope
inc
or
or
adc
out
jb
and
popa
(bad)
xchg
loope
sahf
mov
int
jp
out
ds
outs
or
pop
mov
iret
pop
add
add
popf
arpl
sub
sbb
xchg
mov
push
loop
test
dec
(bad)
xor
push
dec
pop
jb
es
loope
cmp
sbb
inc
jo
(bad)
inc
xor
in
jmpw
call
xchg
add
xchg
push
mov
or
hlt
push
ss
mov
mov
(bad)
(bad)
inc
sti
cmp
add
in
jno
push
pop
cmc
mov
pop
push
out
mov
cmps
test
pop
push
scas
std
data16
cmovge
jno
inc
mov
add
dec
inc
hlt
push
scas
mov
loop
fld
lahf
int
out
jo
xchg
or
push
adc
mov
push
ins
cmc
xchg
inc
enter
jmp
dec
and
push
sbb
fild
pop
sbb
jg
xchg
add
mov
xor
hlt
lods
pop
es
mov
xor
inc
jb
dec
inc
nop
bound
or
repnz
jo
(bad)
mov
dec
mov
nop
dec
cmp
mov
add
fldenv
aas
test
mov
out
ret
xchg
nop
adc
ja
imul
inc
jo
xor
mov
inc
ret
ret
pop
sub
jno
es
outs
sbb
outs
push
sub
call
mov
mov
enter
adc
xchg
cdq
add
in
xchg
push
xchg
push
xchg
(bad)
in
dec
fs
daa
add
aas
mov
and
inc
arpl
inc
in
dec
daa
and
cs
mov
adc
lahf
and
pop
add
pop
mov
cmc
or
or
in
lahf
repnz
xor
out
das
pushf
xchg
cwde
call
add
or
bound
outs
stos
jnp
xchg
idiv
mov
jbe
in
or
cmp
xchg
adc
in
lock
push
xchg
and
(bad)
mov
icebp
xchg
jp
(bad)
cmps
out
inc
sti
cmc
lods
xor
adc
add
or
ficomp
inc
pop
shl
dec
test
jp
jne
and
pusha
hlt
pop
aas
mov
jmp
jmp
adc
(bad)
xchg
sub
cmc
and
inc
sbb
push
test
data16
push
retf
mov
in
das
clc
mov
inc
jns
inc
loop
push
cmp
ja
pop
fstp
inc
sahf
pusha
xchg
cld
xor
sahf
adc
test
aaa
cdq
jae
sbb
adc
test
sub
sbb
mov
in
sub
test
sbb
jb
es
push
adc
or
push
jb
xchg
inc
xor
xchg
push
mov
mov
ja
mov
cli
int
jb
adc
sub
inc
pop
(bad)
loope
and
push
(bad)
out
mov
xor
div
lods
jno
mul
jns
sbb
jle
add
push
hlt
add
cs
fs
div
cmp
and
or
jbe
mov
inc
pop
mov
sbb
push
aam
xor
push
inc
in
mov
inc
mov
dec
sub
jbe
mov
es
mov
ror
and
pop
mov
lea
fmul
in
cdq
push
loope
shr
(bad)
sar
mov
push
xor
jne
push
inc
jmp
inc
mov
jg
push
loopne
(bad)
ds
pop
popa
mov
ja
mov
inc
les
fst
push
mov
sbb
loope
cmp
inc
dec
xchg
loope
in
jb
and
sub
loopne
inc
test
stos
mov
xchg
inc
inc
inc
and
dec
xchg
(bad)
jp
test
mov
mov
push
jg
cld
mov
xor
not
inc
repnz
in
sub
sub
icebp
outs
and
aam
dec
shl
cld
mov
inc
rcl
outs
cmps
neg
inc
push
jb
mov
inc
mov
mov
mov
mov
ja
lea
idiv
add
mov
sbb
add
sbb
and
scas
and
dec
jle
sbb
jl
sbb
scas
cli
inc
bound
loopne
mov
outs
mov
xor
push
std
add
in
test
sahf
push
arpl
cs
xchg
inc
jb
stos
lods
jbe
pushf
mov
or
sahf
iret
fidiv
shr
adc
loope
mov
or
mov
sbb
inc
scas
jge
loope
adc
mov
inc
inc
inc
adc
mov
sbb
and
lods
xor
pop
out
jnp
mov
push
or
stos
adc
mov
push
xchg
mov
ins
xor
pop
ja
ret
sub
mov
lods
pop
dec
xlat
fistp
sar
mov
arpl
xchg
adc
mov
push
xchg
pop
sar
cli
dec
sbb
js
mov
sub
cmp
cdq
inc
int
cwde
movs
cmp
rol
fsub
xchg
cmc
out
loop
inc
ret
push
mov
sub
cs
add
scas
mov
lods
sti
aad
mov
xchg
add
in
xchg
and
adc
mov
es
jae
inc
ss
lahf
out
sbb
arpl
loop
mov
jb
sbb
mov
mov
cli
xchg
popf
adc
in
jbe
retf
add
loope
(bad)
in
pop
mov
and
xchg
cli
cmps
arpl
fist
xlat
test
push
inc
xor
daa
mov
mov
pop
mov
pop
or
inc
dec
scas
mov
mov
dec
mov
scas
xor
aas
cdq
push
mov
add
and
movs
loop
mov
icebp
paddusb
(bad)
jno
push
mov
mov
lea
and
push
sbb
mov
inc
enter
dec
inc
add
sub
cdq
and
xor
xchg
ret
cdq
test
xchg
js
lea
push
not
inc
and
add
xor
not
sti
pop
out
fwait
cmp
mov
push
mov
pusha
leave
popf
in
add
aaa
test
imul
adc
not
arpl
adc
add
mov
mov
xchg
inc
xlat
sub
or
xchg
jmp
test
sbb
push
push
adc
enter
out
jo
out
call
add
mov
push
aad
and
pop
test
push
outs
in
xchg
out
or
fiadd
xchg
pop
sbb
cmp
pop
xor
jle
rcl
xor
add
pop
mov
mov
dec
sbb
cmp
inc
push
jns
pop
in
jg
sub
inc
adc
mov
adc
cld
push
and
jge
mov
mov
stos
mov
(bad)
ror
or
fwait
xchg
dec
outs
mov
xor
stos
ja
push
xchg
out
add
xor
dec
jne
mul
dec
cwde
mov
xchg
push
(bad)
fisttp
mov
pop
jmp
loop
sahf
dec
and
mov
fstp
add
xchg
or
jbe
iret
xor
jno
inc
sub
jl
rcl
dec
and
cmps
mov
mov
or
in
jb
or
mov
add
sub
test
leave
jb
repnz
inc
fst
call
fs
xor
imul
mov
dec
dec
popa
dec
add
int3
cmp
cmp
xchg
dec
pop
mov
dec
es
mov
and
lock
cmp
jb
inc
test
jnp
dec
mov
push
adc
mov
xchg
ror
(bad)
in
inc
rcl
and
mov
sti
addr16
lods
inc
test
xor
sub
gs
or
loop
push
lods
ja
xlat
hlt
popa
xchg
icebp
jg
mov
mov
cs
inc
jno
add
lea
pop
mov
(bad)
xchg
pushf
push
jnp
add
fwait
sbb
pop
shl
mov
or
xor
scas
lock
sub
mov
iret
js
push
push
xor
stc
inc
adc
aaa
fwait
je
scas
ja
inc
repz
dec
xor
outs
mov
enter
lock
sbb
inc
sub
loope
jae
mov
je
push
push
mov
inc
cmp
stos
cmp
sbb
adc
ins
lock
(bad)
mov
mov
xchg
cmp
mov
arpl
sbb
sbb
push
and
ret
jno
xchg
cld
in
sbb
outs
and
pop
inc
fnsave
xchg
dec
neg
dec
sbb
push
inc
test
jae
xchg
sub
sub
dec
xor
cwde
test
ret
push
aas
add
popf
jmp
and
push
daa
add
mov
and
jo
push
dec
mov
xchg
and
cmps
dec
sub
jno
adc
cmp
add
push
bound
add
push
or
mov
inc
and
jle
mov
xchg
adc
and
scas
cdq
cmp
loopne
cwde
add
cdq
mov
movs
neg
add
and
pop
mov
xchg
mov
(bad)
push
enter
mov
sbb
jae
loope
imul
jbe
push
mov
(bad)
fwait
ror
sub
out
lahf
xchg
jg
mov
xlat
cmp
sub
inc
push
xor
jecxz
or
pop
imul
sbb
mov
dec
aaa
or
mov
adc
pop
sub
dec
dec
adc
bound
nop
int3
jg
xchg
call
repz
out
or
out
mov
xchg
dec
lahf
or
adc
push
ja
push
out
inc
xlat
ins
xchg
sub
stc
xchg
xchg
adc
sub
retf
or
jno
imul
xlat
dec
sti
lea
mov
nop
lock
xchg
push
adc
mov
leave
sub
bound
scas
ja
sbb
mov
pop
stc
inc
test
xchg
sub
mov
stos
mov
daa
xor
sub
pop
sub
or
loop
clc
dec
sbb
mov
(bad)
out
sar
jmp
jae
loope
daa
retf
xchg
dec
ins
dec
pop
iret
or
rcl
dec
jno
mov
push
shr
cmp
adc
adc
lods
out
and
lods
or
add
les
push
mov
dec
mov
test
pop
mov
adc
pop
add
idiv
dec
imul
in
add
aas
push
sbb
add
push
xlat
inc
adc
popa
call
nop
dec
sub
mov
inc
test
popa
inc
push
dec
bound
imul
add
movs
and
jle
adc
arpl
pop
scas
mov
inc
xchg
(bad)
lds
clc
(bad)
pushf
pushf
leave
jge
cmp
dec
cmp
cld
test
jl
div
outs
jb
sub
(bad)
dec
hlt
mov
jmp
pop
mov
pop
inc
aaa
aad
in
test
mov
inc
push
or
icebp
lods
add
nop
cmp
add
sub
popa
add
(bad)
xlat
mov
inc
cs
or
(bad)
clc
jns
lods
and
add
loop
dec
lods
(bad)
mul
jns
pop
xor
mov
mov
test
jl
jne
jnp
xor
pushf
pop
or
inc
sbb
dec
popf
jne
cmp
xor
cmp
dec
out
and
jns
daa
inc
sub
aas
push
iret
jne
in
xchg
push
push
icebp
aas
loope
popa
or
je
add
(bad)
out
jbe
push
pop
repnz
in
xchg
sub
add
std
jg
add
lahf
pop
mov
sub
xchg
imul
sahf
xchg
lock
js
out
jge
mov
call
xchg
mov
push
mov
(bad)
jno
push
adc
cmp
dec
and
mov
sbb
cmc
ins
les
cmp
mov
xchg
mov
cmc
pop
std
xor
xchg
push
int3
pushf
xchg
mov
sbb
add
dec
test
jg
lods
fbstp
add
and
jnp
js
lahf
ret
lods
adc
in
dec
out
sbb
mov
adc
jae
(bad)
ja
out
mov
and
jge
pop
pop
aaa
dec
xchg
push
ret
test
cmp
int3
arpl
dec
arpl
icebp
inc
inc
aaa
int3
mov
add
ins
push
ret
lea
and
pop
mov
mov
xor
inc
xchg
cdq
scas
fisub
cld
mov
pop
cmc
loopne
xlat
or
jg
mov
cmps
rcr
xchg
add
dec
sbb
dec
dec
out
in
aad
sbb
mov
in
mov
or
push
dec
xor
cli
cmps
mov
mov
mov
cmp
mov
ror
or
jg
sub
adc
mov
and
cmp
cmp
or
mov
cmps
mov
cmp
clc
dec
mov
movs
dec
sbb
div
mov
test
neg
pushf
sub
loop
dec
xor
and
(bad)
ins
test
xor
dec
mov
xchg
pushf
xor
push
push
cmps
out
xchg
pop
sti
aas
ja
gs
sub
test
inc
out
xor
cmp
dec
hlt
test
dec
int3
cmp
add
pushf
cmp
xchg
cmp
adc
js
je
outs
cmp
mov
call
or
sbb
xchg
cmps
jno
push
mov
mov
mov
or
daa
es
(bad)
in
retf
jge
inc
xlat
popf
mov
int3
jge
js
test
cmovge
jns
gs
repnz
pop
daa
or
pop
pop
sub
rcl
bound
daa
dec
and
mov
add
retf
xchg
xchg
jg
push
clc
in
dec
dec
clc
jg
mov
cli
pop
sbb
mov
out
xchg
xor
sbb
adc
xchg
fs
sbb
in
pop
pop
pop
jmp
pop
and
mul
add
dec
mov
mov
sub
out
mov
scas
je
idiv
outs
sub
mov
mov
mov
mov
cmp
sbb
shl
xchg
(bad)
push
or
inc
xor
xor
dec
mov
inc
(bad)
(bad)
cld
xor
push
sub
(bad)
mov
jae
mov
dec
lahf
jmp
test
xor
mov
jnp
rcl
dec
rcl
push
popa
mov
das
mov
jmp
xor
aaa
mov
xchg
xchg
mov
cmps
mov
ret
push
ja
enter
mov
adc
sub
sbb
call
cmp
mov
and
mov
xchg
mov
adc
dec
jge
jnp
jb
out
ror
xor
jno
neg
lahf
out
icebp
add
dec
pop
mov
data16
das
jae
xor
add
dec
mov
adc
sub
add
add
lods
(bad)
lods
sub
mov
pushf
dec
jb
shl
je
clc
xchg
and
push
pop
dec
call
in
ins
ja
mul
xchg
pop
mov
inc
mov
dec
neg
arpl
stc
inc
movs
(bad)
call
loop
iret
loop
rol
lahf
loopne
stos
int
loope
cmp
jle
loopne
sub
mov
test
dec
fnstsw
sub
sbb
lods
imul
cdq
dec
ja
dec
int
outs
cmps
or
cmps
inc
mov
scas
mov
push
fisubr
ds
out
inc
inc
js
xlat
std
adc
in
inc
xor
jae
mov
imul
mov
sub
nop
leave
add
sahf
int3
xor
push
dec
arpl
inc
je
sar
add
jns
inc
mov
pop
(bad)
jae
test
cmp
jno
in
loopne
sub
add
nop
lods
cmpxchg
xchg
adc
lock
div
mov
aas
sbb
out
mov
outs
mov
xchg
sub
push
dec
out
jmp
cli
jbe
bnd
in
mov
pop
push
in
push
sbb
dec
sub
ret
cmp
jns
push
add
dec
jns
inc
jno
push
cdq
cmp
sysenter
dec
int3
stc
dec
xor
ds
out
aaa
jb
aaa
jns
mov
xchg
fistp
into
or
arpl
add
adc
ds
mov
cmps
daa
jne
cmp
loopne
inc
jbe
xchg
push
inc
arpl
aad
and
pop
inc
inc
add
imul
stos
inc
out
nop/reserved
dec
xchg
inc
jbe
cmps
xchg
fisttp
es
enter
mov
jmp
adc
jg
cmc
imul
pop
pushf
addr16
jg
inc
pop
(bad)
jb
push
into
sub
xor
sub
idiv
push
sub
sub
xchg
jge
inc
sti
test
aad
(bad)
or
mov
xor
mov
push
xchg
inc
bound
clc
(bad)
mov
out
dec
or
push
dec
push
aas
push
xchg
cmp
pop
mov
(bad)
outs
inc
or
outs
cmp
jg
push
out
mov
(bad)
adc
xchg
icebp
pop
aaa
aas
and
or
sub
gs
cld
mov
popa
frstor
jb
mov
bound
arpl
push
ds
xor
mov
and
pop
mov
jno
dec
lods
cmps
ret
mov
sbb
xchg
es
fwait
test
dec
push
call
dec
sbb
out
jg
dec
xchg
call
xor
xchg
ret
sbb
jmp
push
pop
or
scas
mov
(bad)
cmps
inc
pop
outs
in
add
test
jo
popa
clc
inc
inc
dec
add
call
(bad)
daa
jl
cmp
mov
sbb
retf
out
or
push
ins
inc
xor
pop
sbb
lahf
div
cdq
stos
mov
popa
push
movs
loop
test
mov
cmp
not
fsubr
xchg
jge
ds
sti
xor
cmp
adc
jno
loop
push
xchg
test
inc
and
push
mov
fsub
jl
(bad)
cmp
mov
inc
popf
pop
out
mov
jg
jno
cs
sti
arpl
mov
mov
mov
xchg
cmp
bound
mov
mov
shr
(bad)
in
pop
outs
mov
fadd
mov
xchg
dec
fwait
add
sub
icebp
xlat
mov
pop
sbb
inc
jg
sbb
mov
loop
cmp
cdq
(bad)
xchg
add
mov
mov
mov
out
out
add
fisubr
xchg
aas
xchg
leave
sub
jns
mov
xchg
xchg
xor
fld
repz
pop
lahf
scas
jb
aaa
inc
xchg
push
arpl
push
jno
mov
sub
movs
add
xor
(bad)
dec
mov
jae
lahf
push
push
outs
jns
and
mov
cmps
ds
lea
pushf
pop
push
and
jle
inc
xor
push
jge
fwait
pop
mov
mul
loopne
mov
sbb
push
mov
mov
neg
adc
xor
push
add
sbb
sub
push
outs
add
push
daa
(bad)
sub
scas
cmc
out
sbb
mov
maxps
test
add
mov
xchg
jns
and
push
inc
and
add
add
bound
and
mov
mov
dec
jge
sbb
mov
daa
inc
sbb
and
and
add
adc
(bad)
dec
lods
int
lds
loop
getsec
scas
fwait
es
das
in
jmp
jns
xchg
adc
sbb
in
retf
iret
sbb
mov
adc
popf
pop
cs
loopne
adc
mov
xor
xchg
dec
(bad)
jg
inc
cmp
into
outs
adc
in
div
jecxz
jnp
popa
sbb
popa
xor
xchg
sub
out
or
cmp
mov
fbstp
inc
and
aas
aaa
jge
test
xor
xchg
and
out
push
daa
jle
sub
aas
out
aas
xchg
aam
and
and
xor
dec
icebp
jl
xor
loope
iret
adc
jno
fwait
daa
mov
js
push
mov
xchg
daa
loop
stos
xchg
pop
fnstenv
ror
push
adc
out
mov
popf
sub
push
stos
xchg
xchg
push
sbb
fcom
inc
jbe
arpl
cmp
inc
stos
loope
adc
inc
push
shl
add
inc
jb
push
mov
push
arpl
add
outs
ja
aaa
test
and
xor
inc
das
adc
cmp
xor
xor
in
xchg
clc
ins
jecxz
mov
xchg
add
mov
xchg
xchg
dec
mov
out
mov
xchg
and
lahf
mov
cmps
scas
loope
xor
mov
cmp
pusha
lds
cmp
cwde
pop
xchg
push
dec
jne
dec
adc
jmp
inc
dec
add
loopne
and
fisubr
cmovs
call
jae
xchg
ret
jne
push
mov
sbb
mov
xchg
and
daa
and
mov
add
in
jbe
lods
loop
loop
add
(bad)
daa
add
dec
inc
mov
stc
add
xchg
xchg
cmc
call
pop
mov
or
pop
mov
mov
fwait
cmp
in
push
pop
cmp
bound
dec
pop
push
jbe
add
dec
(bad)
jbe
out
mov
cmp
arpl
xchg
push
test
enter
cwde
test
mov
push
dec
sbb
and
ins
dec
mul
adc
in
call
mov
and
daa
cmp
mov
push
add
xchg
jb
cs
dec
pop
arpl
xchg
punpckhwd
xchg
cmp
aas
push
test
imul
aaa
hlt
mov
push
mov
push
cdq
xor
fwait
sbb
sub
dec
int3
add
sbb
and
jp
bound
int3
in
popa
dec
ja
pop
xchg
xor
or
xchg
mov
jge
push
mov
inc
xchg
push
test
or
int
push
mov
movs
aaa
pushf
imul
push
mov
jb
dec
xchg
popf
ret
ret
imul
sahf
jle
mov
shr
psubb
out
sub
nop
mov
jle
lea
xchg
mov
mov
pusha
mov
mov
jo
xchg
dec
push
dec
inc
out
mov
or
adc
or
adc
sub
lahf
add
sbb
sub
mov
jle
out
shl
dec
xchg
push
popf
outs
(bad)
mov
cmp
clc
or
or
(bad)
dec
div
imul
dec
popf
push
jae
pushf
and
and
cmp
inc
mov
jg
inc
mov
xchg
inc
movs
outs
inc
mov
js
add
xor
pop
arpl
push
addr16
icebp
pop
arpl
loope
pusha
aaa
sbb
and
sub
add
scas
sar
add
movs
loop
les
dec
outs
mov
mov
cdq
bound
sub
aas
daa
lods
or
into
call
ss
xor
or
iret
add
loopne
sbb
fisubr
mov
repz
pop
ja
div
jbe
pop
arpl
mov
aam
inc
push
or
neg
or
mov
movs
inc
and
sbb
mov
iret
lods
cdq
lods
inc
mov
ss
mov
add
out
or
add
xchg
in
repz
and
outs
(bad)
dec
test
div
popa
sub
or
shl
xor
add
cli
xor
rcl
out
int3
add
or
dec
dec
cmps
out
bswap
xchg
mov
mov
jo
or
jmp
ds
or
push
lahf
aas
arpl
add
pop
adc
xor
or
divps
xchg
ret
inc
icebp
repnz
sti
ins
dec
sub
push
call
fidiv
loope
inc
mov
dec
aam
cmp
jnp
loop
cmps
neg
push
movs
lahf
dec
and
add
mov
push
es
sbb
hlt
cmp
or
lods
jno
inc
fnsave
mov
dec
push
dec
and
and
jnp
mov
inc
pop
jl
sub
fistp
mov
dec
xchg
cwde
inc
mov
mul
adc
mov
mov
(bad)
call
jp
repnz
dec
retf
add
iret
shl
fwait
sub
cmp
and
bndldx
jl
mov
add
mov
inc
mov
xor
mov
xchg
jbe
arpl
pop
xchg
sbb
add
inc
and
mov
or
scas
mov
jp
inc
pop
jnp
scas
adc
jl
jp
cmp
and
add
loope
xchg
jp
and
mov
ja
std
jae
sbb
cmp
pop
cmps
mov
clc
mov
push
and
jne
aaa
(bad)
cmp
jb
(bad)
loope
pop
inc
xchg
xor
sub
icebp
jmp
cmps
adc
xor
ins
pop
out
pop
or
xor
inc
adc
sbb
sbb
ds
sub
mov
and
out
jge
out
sub
mov
mov
jge
out
repz
sub
dec
bound
sub
inc
sub
inc
cs
arpl
adc
aaa
out
fs
push
test
inc
jmp
adc
aad
scas
test
aaa
xor
add
xchg
jnp
mov
(bad)
and
xchg
cld
jbe
push
repz
add
jmp
fsubrp
ss
fnsave
add
mov
xchg
cwde
loop
dec
and
jge
cmp
daa
popf
cdq
inc
push
(bad)
aas
pushf
inc
inc
dec
lods
popa
sub
dec
pop
stc
xor
push
jno
daa
cdq
mov
mov
or
jge
push
inc
pop
dec
or
jae
out
adc
xor
pop
xchg
adc
mov
bound
mov
out
sbb
xchg
inc
adc
(bad)
and
ja
push
es
outs
cmp
fadd
and
fdiv
out
sub
xchg
cmp
es
inc
mov
scas
jno
sbb
outs
test
push
stos
jg
bound
cmp
mov
test
int
inc
xor
cmp
add
mov
and
mov
or
mov
cmp
xchg
mov
mov
dec
test
or
sub
out
jb
inc
cmp
cs
sbb
or
mov
outs
add
lahf
and
iret
dec
xchg
jns
inc
iret
xor
cli
xchg
pop
(bad)
jns
pop
outs
push
cdq
fild
add
sar
dec
push
scas
cmp
dec
add
ins
sub
push
ret
inc
dec
xor
adc
xor
pop
(bad)
iret
cmp
in
xor
inc
sahf
cmps
mul
out
mov
mov
loop
adc
loopne
js
clc
imul
xor
mov
and
cld
pop
in
call
inc
cdq
mov
in
in
and
je
mov
add
std
cmp
mov
in
inc
mov
pop
ja
dec
xchg
setnp
sub
cdq
aam
add
or
aas
and
jnp
mov
pop
xchg
sub
adc
push
movs
jb
inc
inc
dec
inc
xchg
jge
std
mov
es
and
cmp
in
int
jbe
repz
xor
or
bound
mov
add
mov
arpl
lea
add
inc
dec
xchg
push
mov
or
cmp
cmc
rcl
inc
pop
sbb
out
gs
jge
pop
pushf
jmp
xlat
sbb
add
sahf
or
scas
xchg
cmp
xchg
ins
cmps
in
add
xchg
test
sbb
popf
nop
or
sar
lds
push
inc
xchg
es
cld
imul
das
outs
mov
mov
adc
scas
mov
and
or
and
mov
retf
aas
push
fwait
inc
xchg
pop
mov
push
test
mov
mov
out
mov
adc
and
cmp
sbb
inc
and
push
push
cmps
fldcw
sub
mov
fcom
test
xchg
push
jp
mov
mov
xor
retf
dec
push
dec
cld
sub
jno
sub
loopne
sbb
outs
movs
push
mov
push
mov
mov
mov
mov
lea
cmps
cs
icebp
jnp
cmp
push
fdiv
ins
addr16
mov
pminub
add
xor
add
jle
lds
push
in
ds
xor
mov
mov
mov
stc
mov
xor
or
bound
or
hlt
inc
cs
pushf
cs
add
out
bound
inc
repnz
aam
sbb
mov
aas
mov
push
jbe
shl
sbb
xchg
loope
push
(bad)
xchg
mov
outs
repz
pop
ins
ins
xor
es
mov
sbb
pop
leave
out
inc
or
inc
xor
cmp
cmp
jbe
mov
xchg
xor
adc
push
or
inc
sbb
popa
push
loopne
add
mov
jb
iret
lods
arpl
daa
pop
mov
adc
mov
push
sub
mov
mov
test
fiadd
xor
and
dec
loope
mov
aas
ja
fsub
enter
xchg
and
fdiv
arpl
retf
add
sbb
xchg
inc
jp
sbb
mov
clc
les
sbb
rcr
dec
leave
test
fbld
ins
pusha
mov
fist
nop
jmp
bound
(bad)
fsubr
cmp
ja
jae
jmp
dec
retf
inc
scas
xor
fidivr
mov
rol
cmps
movs
jp
pusha
mov
aaa
jo
dec
pop
lods
retf
adc
pop
push
jmp
mov
hlt
ja
adc
mov
out
sti
cmp
push
sti
enter
frstor
retf
push
retf
imul
fst
push
jae
fnsave
push
and
cmc
xor
sbb
push
lods
mov
(bad)
or
dec
mov
jecxz
dec
jle
jne
xlat
ror
retf
call
adc
and
mov
shl
sar
mov
(bad)
fadd
ss
add
push
push
movs
cmp
and
jg
fwait
mov
mov
aas
push
ds
cld
sub
aas
adc
mov
mov
or
ins
(bad)
test
test
jb
fs
dec
fwait
imul
std
int
cmp
sbb
jp
sbb
mov
add
(bad)
ins
cld
pushf
jge
int3
lods
xchg
mov
sbb
ret
xor
dec
lods
or
in
in
jmp
dec
lods
push
in
movs
dec
cmp
(bad)
ret
adc
nop
mov
test
dec
fucomp
adc
and
mov
stc
cmp
lock
std
sti
fsubr
sbb
lods
ins
mov
icebp
dec
(bad)
sbb
retf
mov
push
into
std
jge
cmp
int
pop
and
fmul
sub
dec
push
pushf
int
shr
cli
cmp
mov
fstp
popa
fwait
dec
in
jnp
sbb
jmp
cmp
pushf
bsr
jmp
lea
imul
repz
sti
pop
push
ins
stos
cmp
cli
retf
fisubr
popf
pop
ins
ficomp
xor
das
cli
jmp
fwait
retf
lods
mov
ficomp
int
sbb
xchg
xchg
sub
rcr
pop
std
fwait
jle
mov
pop
sbb
dec
pop
cli
pushf
adc
ds
into
in
xlat
fisttp
test
jg
push
cmp
test
inc
cli
int3
lahf
ins
lods
rol
popf
int
jge
fcmovnu
stos
mov
aam
mov
mov
shr
push
retf
sub
(bad)
sti
cld
pop
in
int3
int
pop
mov
pusha
pop
pushf
jmp
cs
mov
lea
fstp
or
sbb
pop
dec
jns
fdivr
das
jmp
rol
sub
stc
cmp
(bad)
into
stos
dec
dec
int
add
fstp
ds
push
ficomp
pop
sbb
pop
sbb
pop
jle
int3
out
sub
push
aad
dec
fcmovbe
jnp
ds
call
or
push
dec
mov
sub
jmp
pop
popf
les
fistp
ficom
dec
fisttp
sbb
(bad)
popf
cld
pop
sbb
sub
cmp
fisttp
fsubr
mov
jmp
and
jg
cld
pop
or
stos
cmp
(bad)
cmp
pop
aam
push
pop
mov
dec
pop
popf
jle
pop
mov
pop
dec
hlt
int3
jmp
out
pop
aam
mov
retf
mov
jge
(bad)
mov
ins
cs
btc
int3
cli
sbb
or
pop
jge
fmul
std
iret
sbb
popf
jg
jmp
cmp
sbb
lahf
dec
int
sahf
sbb
adc
fsubr
sti
jle
pop
imul
fmul
cmp
jmp
mov
or
cld
leave
xor
fcomp
pop
(bad)
fnstsw
mov
push
cmp
sub
retf
mov
das
sub
push
lea
or
xlat
test
sub
xchg
push
and
int
pop
lea
push
or
in
sbb
(bad)
pop
int3
add
cmp
sub
mov
pushf
jmp
mov
cmp
lods
call
pop
jmp
das
stos
mov
leave
in
jl
push
cmps
call
pop
mov
or
aam
mov
sti
pop
ds
int3
retf
pop
adc
int
sar
or
ins
dec
pop
popf
cmp
jmp
xchg
cmovle
call
push
stos
jnp
jnp
fcmovu
fdiv
mov
ds
sub
punpckhwd
mov
inc
pop
pop
das
cmp
scas
jle
sbb
cmp
push
(bad)
retf
fldz
int3
mov
(bad)
sub
cmp
sahf
stos
mov
les
repnz
jbe
cmp
call
sbb
jnp
out
jp
jge
pop
xor
mov
enter
cmp
(bad)
popf
mov
sub
das
cmp
dec
cmp
fcomp
fcomp
pop
stos
mov
pop
fneni(8087
jp
daa
jmp
fimul
jmp
aam
or
sub
cmp
dec
mov
xor
cdq
lods
int
dec
push
pop
fdiv
jmp
out
ds
cld
int3
pop
pop
imul
fwait
mov
jnp
aad
lahf
fdivr
lea
mov
dec
in
sti
jnp
mov
cmp
jmp
sub
popf
loop
scas
into
cs
rcl
or
lods
movs
call
les
leave
arpl
cli
mov
aam
iret
lods
or
fsubr
jl
mov
sbb
popf
or
mov
jo
jge
push
int3
int3
or
shr
popf
pop
jnp
jnp
sub
iret
aam
pop
fidivr
fwait
ins
sbb
jp
or
ins
lods
retf
lock
mov
fcom
sti
sub
jo
fwait
push
ins
stos
sub
jle
dec
jmp
stc
inc
aam
fisttp
cld
dec
cld
sbb
cmp
iret
(bad)
shr
sbb
mov
in
and
les
jmp
sub
pushf
jnp
lea
cmp
jecxz
imul
pop
je
(bad)
cld
xor
call
scas
in
sahf
sub
aas
mov
push
out
in
ins
stos
lea
sti
icebp
fsubr
popf
fstp
adc
out
int
jnp
push
retf
idiv
pop
push
sub
pop
lods
or
sti
fistp
std
lods
loopne
aam
push
stc
fisttp
ins
sub
ins
mov
into
lods
fdiv
fucomi
dec
(bad)
or
adc
jmp
fsubrp
inc
call
sub
jnp
fidivr
rcr
sbb
or
sbb
jmp
ins
push
iret
fsubr
retf
outs
cdq
or
lea
mov
or
stos
fcomp
cmp
pop
push
jnp
push
rcr
jp
mov
cdq
into
sahf
sbb
mov
imul
sub
mov
cmp
addr16
outs
mov
lods
or
pop
cli
stos
int
rcr
shr
jmp
dec
das
(bad)
shr
fisttp
mov
add
push
lea
rcr
shr
arpl
call
aad
mov
sahf
das
or
fchs
aaa
jle
std
cli
or
int
or
cmp
shl
psrlw
scas
sub
std
imul
mov
dec
lods
jle
fst
stos
cli
pop
xor
pusha
sub
retf
fsubr
add
(bad)
(bad)
pop
mov
retf
push
sbb
(bad)
(bad)
pop
adc
popf
lods
sar
stc
(bad)
push
mov
clc
adc
ins
or
lods
pop
pop
sbb
into
in
inc
mov
(bad)
xlat
sar
push
and
adc
lock
lea
fsubr
lods
mov
jg
outs
and
sub
sub
sar
mov
pushf
cs
xor
pushf
jp
dec
xchg
dec
cmp
nop
cmp
stos
lock
sti
jp
lods
inc
std
mov
mov
pop
mov
shl
iret
dec
jg
rcr
push
(bad)
int3
dec
(bad)
mov
lahf
fnstsw
sbb
in
xchg
aas
lods
mov
int3
dec
sbb
lods
cmp
or
mov
aam
jg
xchg
cmp
nop
sbb
(bad)
scas
sbb
and
push
(bad)
jmp
ins
ins
jnp
sub
(bad)
dec
mov
sub
mov
outs
fwait
popf
fdivr
retf
jmp
sub
push
pop
dec
jnp
leave
sbb
ds
ins
lock
adc
jg
fcomp
lahf
out
or
push
mov
scas
xlat
mov
aas
je
push
adc
cld
cmp
or
fwait
addr16
sar
or
sub
fild
fnstsw
call
sbb
sub
sub
cmp
mov
iret
loop
adc
inc
dec
call
retf
bsr
das
cwde
jge
leave
pop
inc
nop
(bad)
dec
ins
mov
dec
xor
out
sbb
jmp
outs
mov
dec
iret
add
imul
retf
fucomip
sbb
push
push
mov
(bad)
cmp
mov
aam
sbb
dec
xor
xor
call
movs
mov
std
pop
jle
(bad)
pop
push
and
mov
jl
fisub
fmulp
cdq
sbb
ds
fisubr
ins
push
inc
imul
or
dec
xlat
dec
rcr
(bad)
int3
sub
cs
das
call
cli
sbb
fst
push
in
mov
ins
sti
mov
call
sub
call
cli
int3
mov
sbb
mov
jp
jge
rcl
gs
jmp
int
cs
xlat
fisubr
in
aad
sahf
pop
outs
mov
shr
in
ins
sti
imul
scas
ror
mov
aaa
lds
sbb
mov
jnp
add
inc
xor
mov
add
pop
lea
fistp
in
int
or
and
pop
or
add
jle
lea
xor
cmp
jmp
cmp
jp
movs
in
sbb
pop
ins
dec
pop
cmp
int3
cs
cmp
in
icebp
aaa
ins
into
lods
adc
dec
xor
outs
leave
cmp
outs
lods
call
(bad)
sub
(bad)
pop
fxch
push
mov
outs
sbb
scas
(bad)
fldl2t
sub
sub
xor
pop
test
pushf
or
into
mov
mov
inc
jmp
mov
stc
pop
pop
pop
pushf
sub
(bad)
cmp
imul
pop
sbb
test
popf
std
lahf
jmp
iret
sub
sbb
retf
sub
imul
aas
das
aam
mov
(bad)
pop
sbb
jns
mov
stc
fsubr
cmp
scas
pop
lods
(bad)
call
out
or
in
cli
sbb
(bad)
cld
pop
std
jle
scas
int
push
imul
mov
(bad)
call
push
ins
mov
enter
mov
(bad)
jg
imul
ins
int3
ficom
retf
pushf
lods
cmp
(bad)
rcl
pop
fidiv
in
stc
stos
ins
imul
or
int3
fwait
dec
aas
ds
gs
sbb
jmp
aam
fucomi
in
jnp
or
mov
cmp
pushf
sahf
ds
cs
sub
int3
lods
or
mov
leave
imul
icebp
repz
jmp
fwait
sub
aad
jmp
por
int3
push
mov
out
push
pop
retf
sbb
call
retf
or
dec
push
outs
push
push
imul
retf
pop
pop
into
dec
push
xor
sbb
push
xchg
mov
pop
fadd
std
ins
(bad)
jno
or
imul
pop
lahf
push
push
rcl
inc
lods
shl
ins
cmp
(bad)
(bad)
lahf
dec
sbb
shr
retf
fadd
fisubr
lods
outs
dec
out
pop
push
mov
fidivr
push
lods
clc
cmp
sbb
xor
pop
sbb
pop
ins
mov
sbb
cld
mov
pop
int3
pop
pop
mov
jp
jge
ins
sbb
sbb
push
mov
out
sub
inc
rcr
jmp
int3
mov
into
push
pop
pushf
cmp
stos
std
pop
test
jmp
pop
retf
(bad)
in
fsubr
pop
pop
mov
(bad)
jns
mov
cs
rcl
mov
mov
mov
call
cs
inc
lds
sbb
shr
dec
popf
push
cmp
fsubr
sahf
mov
into
cmp
or
lods
pop
fcmovne
fucomp
dec
fmul
fisubr
out
jo
std
jns
ins
pop
pushf
fimul
dec
fs
mov
test
mov
lea
mov
fcomip
jge
inc
movs
dec
add
mov
sbb
ins
rcr
sub
std
lods
cmp
pop
mov
mov
jge
popf
mov
jp
mov
lea
data16
lods
int3
or
scas
xchg
les
sub
fstp
xlat
jnp
mov
sbb
jl
mov
mov
popa
inc
je
jmp
pop
ins
mov
dec
fstp
(bad)
mov
call
fwait
dec
lods
cs
pop
sub
fld
mov
retf
ins
mov
mov
mov
iret
outs
sbb
mov
shl
(bad)
lea
jbe
int3
mov
or
int3
dec
bound
sbb
retf
dec
into
cmp
and
dec
popf
das
sbb
leave
mov
ror
pop
ja
add
in
fld
call
lea
jmp
or
in
pop
push
retf
mov
pushf
aas
mov
push
into
jl
inc
fcmove
popf
sti
sbb
cmp
push
sub
mov
ins
pushf
(bad)
fsubr
adc
aad
dec
mov
test
mov
sub
pushf
fs
jl
(bad)
mov
mov
enter
or
jp
mov
fstp
sbb
mov
aam
sub
pushf
jmp
fstp
jnp
dec
cld
(bad)
sti
push
push
cmp
adc
ins
dec
sti
int
popa
jmp
ficomp
jl
pop
sbb
jmp
add
jb
out
jnp
cli
fadd
dec
in
or
std
in
(bad)
je
sbb
cld
ds
leave
xchg
scas
test
ins
in
sbb
pop
jno
xor
stc
popf
sti
dec
mov
scas
jge
mov
sbb
pop
cmp
pop
mov
imul
dec
(bad)
fucomp
sub
sbb
mov
in
ins
sbb
scas
int3
dec
ins
xchg
sub
lods
mov
inc
pop
stc
cmp
sbb
jmp
jmp
xor
mov
mov
enter
sbb
jl
cld
cmp
imul
mov
pop
les
ror
push
push
jmp
dec
fsubr
pushf
mov
mov
jge
sti
pop
push
cmp
jle
repnz
pop
std
cld
mov
inc
imul
pop
pop
sbb
cmp
sbb
push
ror
nop
fdivr
mov
pop
pop
movs
xchg
sar
mov
sahf
xor
mov
enter
sub
pop
jmp
pushf
lock
adc
repz
cmp
mov
mov
stos
mov
sub
outs
fcmovbe
popf
cli
cld
or
dec
(bad)
(bad)
in
cmp
lock
adc
or
pop
inc
hlt
nop
fstp
ins
mov
or
jl
pushf
shl
rcr
stos
stc
pop
into
int
lods
ficomp
scas
fucom
test
scas
lahf
or
jb
pushf
jp
add
out
sbb
enter
lods
add
ins
push
in
in
sub
or
in
(bad)
inc
dec
xor
pushf
sub
lods
ds
retf
add
rcr
cdq
mov
jge
mov
sar
aad
stos
aas
sub
bound
mov
dec
or
into
sbb
popf
stos
or
fbld
sti
fdiv
in
mov
mov
call
call
cmp
idiv
sub
mov
mov
or
cwde
outs
stos
mov
imul
mov
lods
pop
cmp
pop
out
pop
cld
iret
das
jb
call
inc
imul
jge
sbb
xlat
pop
in
mulps
jbe
cmp
aam
in
popf
cmp
mov
push
or
adc
sub
mov
pop
xchg
ror
dec
call
stos
cs
cmp
fstp
mov
xchg
jne
inc
repz
sbb
mov
les
xchg
lock
push
imul
push
mov
lds
int
enter
sti
leave
sahf
popa
mov
sub
int3
or
outs
xor
push
sub
int
js
mov
sbb
int3
(bad)
imul
fcmovnbe
xchg
sub
jmp
mov
ins
popf
stos
std
out
dec
pop
and
cld
mov
sti
mov
mov
xor
pop
jmp
sbb
not
popa
(bad)
test
push
fwait
jl
sub
ja
cmp
lods
or
int3
dec
(bad)
retf
push
ins
jle
sbb
cdq
cmp
xchg
aam
mov
(bad)
into
mov
stc
lahf
mov
rcr
dec
mov
or
std
aad
sbb
sbb
cmp
cmp
ins
and
push
mov
push
cld
retf
fwait
and
ds
test
shl
sub
mov
cmp
neg
fmul
pop
ins
std
out
push
inc
in
sahf
int3
xchg
cmp
sbb
mov
fcmovb
int
stos
popf
dec
and
imul
jge
xor
sub
pop
fstp
les
rol
iret
dec
cmp
mov
jnp
adc
add
movs
sahf
or
or
cli
test
or
bnd
int3
mov
lea
mov
movs
js
mov
ds
xchg
call
in
mov
lods
(bad)
repnz
fcmovnb
or
and
jl
xlat
or
push
jmp
clc
pop
sbb
in
mul
out
fisttp
ret
fs
mov
lea
fadd
pop
mov
arpl
imul
(bad)
sbb
fstp
mov
mov
mov
stos
fwait
ret
in
inc
scas
xchg
and
ror
pop
cmps
pop
dec
pop
pop
dec
ds
push
int3
jmp
int
pushf
cmp
(bad)
mov
aam
sub
sbb
push
fimul
jmp
adc
ror
sub
mov
pop
jne
push
dec
dec
int3
sahf
iret
out
mov
leave
mov
pop
stc
push
pushf
les
mov
dec
sub
mov
shr
(bad)
jmp
pop
mov
mov
jl
jecxz
cli
jl
sub
int
xor
add
sbb
push
push
mov
jmp
mov
xchg
(bad)
push
gs
jnp
mov
gs
cs
ins
adc
cmp
mov
cmp
rcr
mov
mov
repz
push
js
mov
and
xchg
or
enter
ss
in
cli
mov
jl
push
pushf
mov
adc
or
or
fld
xchg
cmp
imul
(bad)
sub
pop
cmp
lods
std
jmp
sub
int3
xchg
jle
popf
es
xor
sbb
cmp
pusha
mov
cs
mov
cmp
mov
imul
ror
or
call
pop
lea
fisttp
pop
jbe
push
pop
aam
cmp
pop
int3
jno
push
(bad)
ins
mov
test
ins
fisttp
xchg
ins
les
lods
cld
push
nop
pop
or
mov
mov
cmp
sahf
or
pop
cwde
sahf
sbb
test
cmp
cmc
int
shl
(bad)
rcr
cmp
retf
jg
mov
scas
addr16
nop
(bad)
int3
test
jnp
retf
std
jl
jge
cmp
or
push
lock
mov
pop
mov
int3
mov
fstp
pop
imul
imul
jl
push
xchg
in
inc
sbb
cmp
popf
jge
sti
sbb
xor
cmps
scas
pop
sahf
lea
dec
pop
test
fld
lods
imul
fist
gs
cmp
stc
add
pop
sbb
cs
(bad)
push
sub
int3
ins
cmp
add
sbb
sar
pushf
icebp
sahf
rol
jnp
and
add
xchg
(bad)
mov
push
out
mov
fistp
cmp
rol
mov
sahf
or
stos
in
int
mov
jnp
fucomi
mov
ds
cwde
test
jne
mov
in
or
adc
add
add
mov
push
int3
sbb
pop
jle
enter
call
popf
loope
push
inc
fwait
pushf
repz
arpl
stc
jnp
cmp
in
rcr
inc
ds
fs
scas
pop
cld
out
mov
or
in
sub
mov
pop
sar
sbb
in
scas
add
in
pop
mov
pushf
popf
mov
je
int3
in
pop
shl
xor
mov
adc
movs
fdivr
fld
ins
ins
inc
mov
call
imul
ins
mov
mov
dec
movs
je
mov
mov
fisubr
cmp
pop
cld
pop
(bad)
fild
push
sti
lods
in
scas
sbb
(bad)
dec
jge
sub
ins
push
dec
jnp
xchg
xlat
fcom
in
xchg
mov
pusha
sub
cmp
or
lea
sub
jge
jmp
lods
into
cmp
mov
enter
push
sub
std
pop
ret
xor
jmp
pop
int3
std
jmp
mov
rol
sub
push
and
xchg
leave
jmp
retf
xlat
fst
cmp
push
jecxz
aaa
sti
jmp
mov
fwait
mov
test
xlat
push
es
sbb
push
in
jp
(bad)
jl
sbb
dec
or
jge
cld
mov
jge
call
div
mov
jno
jg
or
dec
xor
push
nop
cld
jns
call
pop
lods
shr
lea
aam
cld
mov
ret
scas
test
sar
nop
sti
mov
ins
(bad)
pop
push
retf
shr
add
jno
(bad)
ror
or
mov
mov
hlt
cdq
jl
push
fs
or
fwait
sub
mov
loop
mov
jge
cmp
sbb
dec
stos
sub
div
in
sbb
mov
inc
pop
sbb
fisttp
fnstsw
jnp
(bad)
xor
mov
and
dec
ret
xchg
mov
ret
aam
test
pop
test
or
pop
cmp
fild
(bad)
jmp
mov
pushf
sti
xchg
sbb
jmp
xor
xor
mov
mov
into
pop
pop
lds
aaa
pop
test
out
(bad)
icebp
jnp
sbb
popf
cmp
pop
jge
rcl
cmp
jg
sti
dec
popf
jge
or
jp
in
sbb
int3
push
mov
xchg
(bad)
and
adc
sbb
or
pop
dec
xor
bound
in
ins
dec
sub
or
dec
xor
or
fs
push
and
fisttp
mov
add
cwde
psllw
leave
lods
ja
sti
fld1
mov
sub
int
(bad)
add
mov
jne
aad
shr
xchg
cmp
dec
(bad)
(bad)
sub
pushf
mov
xchg
(bad)
(bad)
in
(bad)
ror
cmp
jb
loop
in
test
pop
(bad)
daa
pop
xchg
mov
push
inc
sub
pop
fist
cmp
pop
int
jle
push
arpl
sub
mov
outs
jl
pop
jmp
pop
fisttp
imul
or
int
pop
sar
je
mov
push
push
pop
lock
pop
fst
not
movs
mov
adc
sar
and
ins
pop
dec
inc
jmp
stos
mov
mov
stc
mov
or
test
dec
(bad)
mov
hlt
lea
mov
pop
pop
stc
sub
imul
aad
jmp
mov
je
sub
lods
rcl
ins
retf
inc
scas
leave
sbb
push
jnp
(bad)
add
pop
into
jecxz
sbb
sbb
and
test
and
xchg
test
sbb
push
das
sbb
push
sbb
lds
sti
popf
out
stos
or
mov
in
jmp
in
lods
inc
xchg
jge
das
fwait
nop
popf
stos
in
fsub
sub
xchg
pop
retf
scas
mov
mov
loop
int
or
mov
push
cmc
cmp
jo
pop
inc
jmp
xchg
clc
dec
pop
ins
pop
(bad)
push
inc
jns
sti
(bad)
bound
pop
adc
mov
push
jmp
mov
std
fnstsw
sub
pop
sahf
pop
fcmovnbe
sbb
pop
cmp
sub
mov
add
leave
sub
and
scas
shl
out
xlat
push
sub
out
cli
lds
into
ins
cmp
jmp
ds
jp
rcl
(bad)
pop
pop
leave
loopne
mov
jge
ficomp
das
push
sbb
je
popf
mov
or
cmp
or
lea
push
data16
sub
lea
mov
mov
sub
jae
xchg
dec
test
in
jae
loopne
pop
mov
test
jbe
adc
inc
ds
xchg
dec
rcl
xchg
sbb
mov
cmp
xor
adc
int
(bad)
shl
and
sbb
cli
dec
lds
leave
imul
or
rcr
push
ins
movs
repnz
js
jns
mov
int3
int
rcl
and
pop
(bad)
ss
sbb
and
pushf
in
lahf
mov
loope
jge
test
cmp
xor
mov
or
pop
cmp
adc
pop
mov
and
or
sbb
and
or
ds
push
mul
cli
shl
stos
sbb
int
and
push
jp
outs
lods
xchg
cmp
(bad)
pop
sar
jmp
hlt
lods
jecxz
mov
outs
ret
sbb
aaa
or
(bad)
cli
call
ins
add
cmp
mov
ficom
cs
int
or
lods
push
cld
lods
cs
push
push
sti
pop
std
pop
stos
sub
sbb
(bad)
dec
call
mov
sbb
jae
sbb
nop
sbb
lods
inc
sbb
leave
sbb
shl
sahf
fisub
push
sub
or
inc
jmp
add
dec
int
enter
lds
(bad)
push
pop
or
inc
out
push
mov
int
ins
fld
sub
jp
int3
sub
mov
adc
clc
mov
bound
xor
mov
ins
stos
pop
push
aam
jmp
pop
pop
push
mov
xor
out
lods
xor
dec
pop
popf
and
jge
(bad)
scas
call
or
jnp
sub
mov
mov
aaa
sbb
(bad)
sahf
adc
sbb
push
fisub
out
retf
push
loopne
inc
retf
jge
pop
test
mov
lods
outs
sbb
cmp
pop
shr
retf
ins
or
out
dec
lods
int3
popf
add
test
sub
in
dec
std
cmp
(bad)
jp
lock
fst
retf
cs
or
int
stc
dec
push
pop
cmp
adc
jmp
add
pop
lock
dec
out
xchg
inc
imul
add
cmp
pushf
mov
fld
pop
push
(bad)
cmp
ins
idiv
sub
jge
cmp
xor
mov
xchg
mov
bound
push
cmps
dec
mov
pop
dec
xchg
mov
into
mov
(bad)
aaa
mov
es
icebp
test
test
mov
out
fld
pop
adc
mov
dec
lds
pop
mov
test
(bad)
shl
sub
mov
lock
std
pushf
cmp
fisttp
jnp
cmp
or
mov
or
lahf
jle
out
ins
cli
add
jmp
(bad)
ficom
stos
jmp
mov
sahf
dec
sbb
cmc
jge
push
push
out
mov
xor
mov
cmp
dec
dec
sbb
pop
ds
cld
adc
dec
pop
aad
test
(bad)
sub
push
mov
push
pop
inc
xchg
mov
cdq
test
inc
push
push
sbb
pop
sub
adc
imul
push
sub
or
mul
adc
push
push
retf
jns
call
outs
cwde
dec
fndisi(8087
gs
cmp
cld
sub
in
mov
icebp
sub
test
push
or
mov
cmp
test
or
imul
das
clc
(bad)
pushf
jno
dec
mov
adc
ds
(bad)
imul
scas
mov
fidiv
into
jecxz
dec
add
std
fst
push
sub
rol
lods
cmp
aaa
xlat
cpuid
add
ja
cmp
inc
jns
jp
or
into
popf
mov
test
stc
ins
mov
pushf
mov
dec
jge
xchg
fnstcw
mov
stos
inc
jmp
sub
xlat
movs
imul
sub
inc
push
sub
jmp
popa
idiv
dec
cmp
cmp
not
jns
(bad)
xchg
(bad)
pop
xchg
and
add
adc
sub
call
aad
popf
push
xchg
push
dec
add
inc
jnp
mov
add
(bad)
mov
pop
fimul
imul
xlat
call
repnz
dec
lods
xor
and
or
mov
lock
push
jne
sbb
inc
xor
adc
sbb
call
not
push
pop
out
cli
jge
xchg
xlat
ds
fwait
or
cmc
vpshuflw
shl
dec
ins
enter
idiv
adc
pop
dec
mov
imul
or
(bad)
pop
cli
mov
dec
jg
pop
xchg
fiadd
sbb
sar
aam
mov
cmp
clc
jns
outs
mov
(bad)
cmp
sbb
cmp
adc
mov
lock
clc
xchg
inc
adc
mov
out
not
mov
enter
and
dec
cmc
stc
(bad)
xor
jg
ins
cmps
adc
imul
pop
(bad)
xchg
imul
xor
jb
dec
aad
pop
add
mov
shl
pop
rcr
mov
pop
fistp
sbb
dec
pop
popf
ja
xor
xchg
mov
push
sbb
sub
call
push
sbb
push
sbb
nop
pop
sub
out
lea
ins
adc
loopne
pop
sbb
xor
pop
push
push
sbb
pop
ja
sub
clc
rol
stc
dec
mov
xchg
ret
adc
retf
and
rcl
pop
xchg
jge
ins
lahf
lds
push
neg
aas
add
fnstcw
cmp
mov
cmp
inc
jns
enter
lea
icebp
ret
mov
push
or
movs
jp
push
addr16
sbb
fidivr
int3
or
sub
outs
mov
mov
sbb
frstor
int
inc
cld
mov
fnstcw
daa
ins
xchg
xor
lahf
mov
mov
out
out
xor
scas
xchg
or
(bad)
loopne
inc
push
test
cmp
mov
or
mov
and
in
mov
popf
fucom
and
inc
jnp
dec
xchg
sub
or
lahf
dec
movs
int3
sti
jne
repnz
sub
xor
mov
inc
mov
add
les
cmps
sahf
mov
jns
mov
jg
mov
stc
mov
push
test
push
mov
sub
in
pop
add
dec
clc
popf
call
cmp
imul
cmp
cwde
inc
cmp
or
mov
mov
rcr
mov
xchg
pop
repz
(bad)
jp
dec
rcl
jge
cmp
dec
fstp
mov
xchg
jb
pop
mov
jae
shl
jge
sbb
mov
aad
cmp
aad
pop
scas
scas
test
int3
cmp
xor
xchg
fcomp
out
daa
popf
xchg
ja
adc
outs
shr
ins
sti
xchg
cmp
sar
inc
xchg
xor
call
loop
mov
xchg
rol
inc
int3
fcmovu
cmp
add
mov
xor
int3
gs
mov
cmp
jmp
or
cmp
jge
xor
cli
xchg
test
xchg
fild
cmp
pop
or
push
push
imul
push
and
mov
enter
cdq
push
aam
mov
xchg
jmp
popf
shl
sub
retf
jmp
ja
aaa
das
hlt
push
inc
(bad)
in
cmp
pop
add
xchg
fistp
je
outs
push
retf
push
rcr
or
xlat
inc
fistp
call
adc
neg
mov
cmps
in
sub
movs
cdq
sti
jmp
mov
dec
in
push
popf
fnstsw
push
in
push
lds
lods
stc
add
pop
in
fstp
stc
ins
popf
or
cwde
cmp
aas
fsub
and
imul
sub
mov
out
fwait
mov
sbb
pop
or
neg
or
cs
add
lds
xchg
aas
mov
push
cmp
call
mov
call
ins
xlat
xor
jbe
xchg
pop
jge
sbb
lahf
fst
push
push
arpl
cli
mov
adc
ins
push
enter
dec
neg
mov
mov
sbb
stos
add
retf
mov
dec
jp
aam
cmp
pop
sti
sub
ja
mov
jge
repnz
and
sbb
jmp
out
retf
inc
mov
test
shr
popf
xchg
xor
sti
pop
lods
mov
sbb
cdq
jae
and
mov
popf
push
sub
mov
xor
ins
std
mov
es
fld
sub
sbb
dec
push
popf
ret
adc
ins
jo
ret
inc
mov
ficom
mov
icebp
mov
and
pushf
adc
(bad)
push
adc
add
jmp
inc
mov
(bad)
pop
sahf
jl
mov
out
cwde
mov
lea
pushf
(bad)
fcmovnb
mov
cmp
mov
popa
fbstp
(bad)
cmp
(bad)
rcr
retf
leave
mov
ins
enter
into
fst
out
fwait
rcr
rcl
jmp
adc
jge
cmp
pushf
lods
dec
daa
dec
adc
je
xchg
(bad)
rcl
dec
ror
out
cwde
add
xchg
pop
cmp
shr
sbb
pop
int
in
adc
adc
je
jle
or
int
sbb
dec
pop
pop
xor
div
icebp
movs
test
dec
popf
sub
jp
mov
cmp
push
sub
popf
mov
cmp
or
push
mov
xor
mov
cmp
or
icebp
call
adc
out
jnp
mov
add
and
out
dec
sub
xchg
std
fdiv
pop
fnstsw
pushf
(bad)
aas
dec
in
jno
(bad)
jns
pop
adc
stos
dec
jo
adc
repnz
cmps
jae
repnz
cld
or
cs
cdq
lods
(bad)
imul
fwait
popf
cld
outs
xchg
mov
dec
cld
mov
sti
push
mov
and
lods
xor
sbb
mov
mov
mov
dec
xor
mov
sar
mov
pop
pop
mov
out
xor
in
adc
or
or
mov
retf
cmc
scas
mov
jnp
ret
js
enter
mov
push
out
xor
scas
sub
fild
cmp
mov
ins
add
ja
sbb
pop
(bad)
int
add
ret
adc
stos
jp
cmp
mov
xchg
cmps
in
jae
repnz
mov
icebp
mov
dec
lock
test
jl
in
inc
fwait
lahf
pop
mov
adc
mov
fdivr
imul
pop
icebp
pop
test
cdq
cmp
jge
push
jo
or
xchg
movs
and
jmp
lods
test
mov
pop
pop
mov
dec
mov
xor
push
js
pop
jae
sbb
popa
sbb
pop
(bad)
sbb
enter
push
gs
es
add
in
mov
hlt
pop
or
nop
(bad)
sbb
cld
and
mov
inc
adc
outs
xchg
mov
mov
adc
sub
sub
dec
ss
dec
mov
jnp
mov
sub
lea
loope
dec
add
and
sbb
in
push
lock
es
dec
push
shl
adc
fstp
pop
mov
fcomp
sub
push
or
cmp
mov
push
pop
sbb
in
cdq
or
pop
aas
movs
lock
cmps
jge
jp
inc
jg
outs
out
fld
push
add
jmp
mov
push
mov
mov
cli
mov
test
mov
cmp
sbb
sub
ja
jp
mov
icebp
xchg
xchg
xor
scas
in
inc
ss
retf
cdq
stc
xchg
or
jbe
or
add
mov
test
add
mov
xchg
cmps
inc
dec
dec
dec
dec
xchg
xchg
jmp
cmp
xchg
add
cs
adc
cli
dec
xor
jbe
ficom
jge
bound
pop
jns
jmp
inc
dec
mov
stc
push
xchg
xchg
adc
scas
dec
jnp
dec
test
cmp
fwait
jge
(bad)
clc
cmp
aad
jno
push
mov
std
mov
pop
jg
dec
rcr
nop
pop
jmp
call
loope
imul
cld
ret
adc
cmp
cmps
jecxz
push
mov
sti
sub
jno
dec
xor
mov
leave
ins
int
pop
xchg
fbstp
mov
pop
(bad)
xor
jns
sbb
(bad)
jo
ins
adc
mov
jno
sub
jge
retf
sahf
in
fld
xchg
and
push
jmp
ins
push
cmp
xchg
(bad)
mov
sub
test
xor
fsubr
fld
ror
push
sbb
cmp
dec
mov
add
add
clc
imul
sub
fdiv
adc
int3
sbb
lock
cs
std
lea
lock
sti
xchg
aaa
jge
or
je
adc
xchg
(bad)
fst
mov
cld
jg
sbb
sbb
mov
and
jb
inc
stos
jmp
rcr
pop
pop
dec
and
fisttp
jnp
(bad)
imul
data16
cmp
push
xchg
jge
xor
inc
mov
pop
pushf
add
pop
stos
scas
xor
jge
and
mov
shl
jae
icebp
cmp
add
cdq
jmp
cs
retf
ss
mov
or
into
lahf
mov
add
fldenv
sub
fs
inc
inc
sub
or
push
test
call
daa
mov
js
inc
push
je
aaa
dec
ror
xor
sbb
es
arpl
shl
pushf
mov
cwde
fscale
lods
es
(bad)
lods
push
sbb
jnp
scas
jb
int
das
cli
or
mov
ficom
imul
push
jl
shr
movs
mov
(bad)
fisubr
or
(bad)
lahf
xchg
jb
xor
test
fwait
into
retf
push
iret
mov
rcl
dec
dec
jge
push
cmps
scas
stos
aad
jge
out
pusha
adc
rol
sbb
push
outs
add
daa
or
sub
jo
push
scas
aaa
cli
test
mov
push
gs
ss
jp
lods
mov
lea
fs
mov
add
aad
lods
mov
pop
mov
cmp
not
push
test
add
jl
cs
xor
mov
dec
ins
xor
mov
mov
inc
ficomp
imul
or
bound
push
stc
push
test
dec
(bad)
mov
loope
into
jne
dec
mov
and
mov
(bad)
jl
mov
pandn
or
or
outs
movs
sub
pushf
aaa
out
cmps
test
hlt
add
dec
adc
(bad)
mov
mov
(bad)
mov
mov
xlat
xchg
and
inc
pop
std
xlat
call
stc
sub
btc
xor
aas
stc
jg
mov
fnstenv
mov
popf
loop
push
ins
pop
shl
adc
nop
gs
sbb
and
daa
cmp
pop
ds
sub
xchg
cdq
mov
adc
pop
sub
add
ret
mov
cmp
test
cdq
xor
gs
sbb
mov
pop
pop
mov
mov
scas
icebp
out
or
ins
adc
lahf
lods
push
jne
sub
lahf
mov
cmp
fild
sub
fild
xchg
jle
or
dec
xor
xor
xchg
xchg
xchg
jnp
xlat
gs
fcomp
(bad)
addr16
shl
mov
xor
movs
jg
sub
and
ja
dec
sbb
div
inc
test
mov
or
mov
sti
lods
retf
jno
pop
xchg
jmp
or
inc
imul
std
sub
push
(bad)
mov
and
sar
sbb
jae
lds
into
pop
xor
addr16
jg
push
and
push
and
mov
adc
loopne
push
pop
xor
ds
ss
adc
ins
jg
rol
jne
call
lea
int3
push
xor
pop
loop
pushf
lock
sbb
jno
pusha
xchg
or
iret
jb
and
hlt
push
xor
out
out
dec
jecxz
adc
mov
dec
adc
mov
add
stc
jp
jmp
lods
das
fisub
dec
fstp
sub
jg
inc
aas
(bad)
cwde
xor
fisub
fwait
enter
xor
js
(bad)
sbb
sysenter
pop
nop
add
cmp
xchg
mov
into
mov
popa
sub
ss
sar
popa
xchg
xor
lock
dec
cs
xchg
nop
push
xor
iret
pop
xor
lea
pop
mov
pop
sti
bound
stc
addr16
or
push
clc
or
sub
repnz
lds
cli
imul
ins
call
icebp
fs
push
div
out
sahf
es
mov
inc
and
add
or
js
push
fnstsw
int3
hlt
push
add
sbb
pop
xchg
pusha
xchg
test
fisttp
cmp
cmps
test
cmp
pop
lock
or
(bad)
es
dec
pop
(bad)
iret
and
mov
daa
jns
test
nop
mov
mov
not
cwde
xchg
lods
xor
addr16
cs
jno
sbb
aaa
out
mov
loope
mov
repnz
into
mov
pop
add
leave
sub
xor
mov
gs
into
in
enter
dec
jno
xchg
push
cmp
inc
sub
sbb
dec
mov
jns
sahf
ins
aas
stc
fiadd
scas
adc
cld
mov
sub
and
ins
loopne
mov
ss
pop
sbb
mov
dec
jmp
adc
mov
xchg
pop
push
dec
out
lea
scas
inc
call
out
or
or
ja
mov
pushf
add
xchg
imul
(bad)
mov
mov
dec
adc
shr
mov
(bad)
cmp
mov
pushf
test
inc
adc
and
mov
or
ins
out
ret
mov
xchg
jp
ins
add
push
not
scas
sub
lea
add
sbb
push
xor
inc
inc
es
xchg
scas
cmp
mov
jge
add
xchg
sbb
icebp
add
outs
jae
inc
ror
(bad)
add
cmp
mov
outs
or
xchg
dec
cld
xchg
rdmsr
fbld
mov
sub
test
nop
sub
dec
in
and
push
inc
in
outs
mov
paddsw
lahf
jl
cs
mov
pushf
pop
and
mov
repz
fcomp
xchg
mov
(bad)
aaa
add
int
(bad)
stc
inc
clc
cld
(bad)
sbb
loope
ja
cld
jno
fld
lds
daa
cmps
xchg
mov
inc
sub
pop
pop
cmp
jbe
into
xor
xchg
lahf
xor
xor
retf
shr
je
and
enter
sbb
stc
call
pushf
and
lea
inc
jbe
and
add
in
jbe
ficom
cmp
in
outs
mov
outs
jbe
dec
ja
push
ror
mov
sbb
ss
mov
xchg
lods
scas
xor
out
sub
pop
lods
jne
in
sub
and
inc
adc
retf
bound
push
cwde
mov
cld
nop
es
nop
adc
mov
dec
dec
in
cld
cmp
sbb
add
aaa
les
sub
aas
dec
xor
out
pop
jg
mov
xchg
or
mov
stos
aaa
cdq
cmp
(bad)
lock
inc
loopne
int3
cdq
jno
mov
scas
jb
jbe
push
push
cmp
pop
and
imul
adc
xchg
jmp
iret
ds
sbb
out
scas
push
icebp
mov
or
add
cld
push
cmp
arpl
dec
and
hlt
rcl
xlat
add
out
mov
add
cmp
je
add
popa
and
fild
hlt
xor
jno
push
into
(bad)
jae
mov
call
xor
or
pop
cmp
jnp
add
mov
or
add
sub
jle
mov
mov
pop
adc
or
xchg
or
mov
jae
ret
out
add
inc
pushf
shr
retf
loopne
scas
dec
je
fbstp
mov
mov
and
or
addr16
imul
mov
xor
push
sbb
push
sub
xor
pop
push
sub
enter
imul
pop
mov
daa
or
and
xor
dec
push
cdq
mov
in
push
test
pop
mov
arpl
sbb
or
fsub
(bad)
int3
cmp
aam
cmp
cmps
lods
pop
lds
add
jg
cmp
jne
stos
push
addr16
lods
in
pushf
xor
add
mov
sub
mov
and
pushf
mov
jle
mov
or
pushf
or
mov
dec
pop
pushf
or
mov
cmps
sbb
xchg
mov
xor
jl
add
inc
mov
ss
and
enter
dec
mov
cmps
in
push
sub
aas
(bad)
stos
sbb
jae
shl
scas
je
cdq
(bad)
xchg
movs
pop
fsubp
pop
aad
sbb
sub
fst
ret
pushf
xchg
fdivr
leave
sbb
mov
inc
add
retf
dec
pop
or
jno
and
or
sub
movs
jl
mov
(bad)
mov
imul
push
dec
dec
mov
test
retf
pop
xchg
mov
xlat
mov
aaa
add
pop
jmp
mov
xchg
xchg
push
(bad)
add
or
dec
cmp
inc
lock
sbb
test
sbb
ret
add
xor
ja
push
movs
ja
pushf
stc
mov
sbb
push
push
cdq
stos
(bad)
sbb
add
enter
arpl
add
mov
push
mov
sbb
mov
xor
inc
bswap
int
(bad)
fstp
out
jp
xlat
out
mov
mov
lods
mov
js
sbb
jle
or
repz
es
jmp
jg
add
enter
lods
in
inc
mov
inc
push
inc
add
leave
jge
pop
cmp
push
mov
jbe
jb
into
js
mov
lahf
add
mov
aam
inc
pusha
jns
dec
dec
gs
or
clc
fwait
xchg
inc
daa
icebp
cmp
push
push
dec
and
(bad)
mov
out
inc
xchg
cmps
movs
add
ins
gs
mov
outs
inc
inc
(bad)
out
lea
mov
repz
jl
nop
sbb
bound
inc
in
gs
loope
aam
xor
std
jge
push
ds
push
daa
xor
add
cwde
inc
xor
mov
fs
dec
mov
dec
in
mov
add
xchg
xchg
push
sub
inc
out
xor
or
movs
daa
in
mov
xor
cld
xchg
aam
cs
cmp
in
bound
adc
fild
dec
sahf
cmp
(bad)
out
cmp
cld
scas
retf
sub
add
mov
pop
xchg
mov
inc
stc
xchg
or
loope
xchg
fs
retf
jg
adc
test
call
xchg
sti
push
inc
popf
test
stc
xchg
test
sub
xchg
xor
pop
mov
sti
sahf
sbb
dec
lods
xchg
pushf
stc
call
in
xchg
mov
push
adc
push
stc
mov
mov
sub
data16
lea
(bad)
daa
xchg
pushf
push
adc
add
sub
mov
mov
or
inc
cmp
dec
addr16
push
pop
pop
out
das
and
mov
rol
sbb
vcmpss
or
sub
imul
jns
push
cli
int
push
sub
add
iret
push
mov
mov
add
inc
mov
push
sub
icebp
mov
xchg
daa
xchg
mov
retf
xor
je
xor
xor
cmp
cmp
pushf
dec
mul
mov
push
or
imul
es
cmc
inc
ins
mov
add
jl
xchg
pop
cld
aas
jmp
neg
push
cld
test
mov
call
jmp
cmp
dec
out
lea
mov
push
test
fwait
imul
lock
into
xchg
jl
lea
or
scas
mov
aad
xlat
add
arpl
sbb
outs
inc
out
test
inc
outs
aaa
jp
mov
mov
mov
and
jbe
out
lahf
mov
sbb
fisttp
(bad)
cmp
cmp
mov
xchg
xor
xchg
retf
inc
jno
push
daa
mov
dec
pop
sub
adc
aaa
mov
mov
mov
clc
xor
add
dec
add
xchg
mov
lahf
dec
jbe
int3
ja
enter
pushf
jns
pop
xchg
mov
cmp
out
lahf
xor
adc
or
inc
or
aad
push
popa
lods
call
retf
and
out
mov
cdq
sub
add
bound
xor
fdivr
pop
adc
fbstp
ja
popa
dec
jns
push
idiv
sub
fdivr
sahf
add
or
shl
ret
ins
mov
leave
and
push
mov
sub
aaa
inc
mov
mov
or
adc
add
jmp
int
mov
xor
(bad)
cmp
mov
cmp
xchg
pushf
call
jb
int
mov
xlat
mov
push
test
add
sub
fld
test
fiadd
cmp
int
jno
popa
adc
leave
cmps
mov
sub
loopne
dec
daa
cmp
cmp
lea
bound
adc
cdq
rol
cmp
xchg
push
in
clc
jle
push
push
ret
xor
inc
sub
repnz
add
inc
xchg
sbb
dec
dec
mov
out
in
cmp
mov
inc
cmp
adc
imul
stos
xchg
mov
scas
jnp
sbb
push
sar
js
popa
lods
stos
mov
mov
sub
mov
cld
je
mov
xor
sbb
imul
js
lock
test
mov
aas
(bad)
and
(bad)
data16
test
scas
outs
or
test
aas
mov
sub
jns
xchg
adc
push
iret
stos
dec
mov
ins
sbb
mov
cs
inc
pushf
mov
movs
dec
mov
inc
out
dec
es
mov
out
pop
or
call
push
icebp
in
ret
sti
retf
fcom
push
shr
cmp
mov
cmp
shl
call
lods
out
jbe
or
sub
ins
push
pop
jmp
stos
mov
dec
ins
pop
lahf
out
clc
(bad)
cld
xchg
(bad)
jmp
scas
cdq
scas
lea
stc
aaa
rol
or
mov
or
inc
cmp
fucom
loop
hlt
sub
scas
cmp
cmp
pushf
loop
sub
cld
lahf
loope
inc
or
shl
or
repz
lahf
jns
nop
mov
retf
mov
imul
push
or
jnp
loopne
sbb
lods
pop
sti
pop
fisttp
cmp
bnd
ds
lods
add
xchg
and
popf
cld
rcr
inc
cld
add
in
pop
mov
jae
jmp
cmc
sub
lock
std
imul
sub
xchg
inc
jnp
sbb
ficomp
ds
pop
sbb
stos
fist
sbb
dec
mov
inc
mov
or
cli
(bad)
data16
popa
sub
jne
fwait
ins
loop
sub
retf
imul
fdiv
sbb
add
mov
in
mov
dec
ins
sub
mov
popf
jne
(bad)
mov
stos
push
lods
cmp
xchg
jmp
je
lea
cmp
mov
(bad)
jmp
mov
cmp
cs
loop
push
loop
cld
sbb
call
(bad)
loopne
mov
pop
ja
lahf
in
sub
not
scas
out
xchg
inc
cmps
ins
in
iret
mov
mov
dec
pop
jmp
dec
cmp
mov
fistp
pop
sbb
inc
ins
sbb
sti
nop
xor
cmp
idiv
jbe
mov
or
retf
fdivr
adc
iret
adc
pusha
ins
pop
dec
jg
dec
add
bound
sar
cs
call
adc
pop
sub
test
or
sti
mov
cmps
mov
cwde
clc
mov
sbb
in
sar
ins
(bad)
sbb
mov
iret
mov
inc
arpl
lods
dec
sbb
shl
cld
outs
or
mov
stos
test
xor
cmp
sbb
lea
jp
jmp
or
adc
xchg
popf
add
call
fs
mov
pushf
test
icebp
xchg
sar
arpl
arpl
dec
aas
js
sub
mov
cdq
leave
stos
ret
lods
push
xor
inc
pushf
mov
sub
dec
and
sbb
cmp
dec
mov
repnz
xor
xor
or
aam
std
ret
leave
push
hlt
mov
es
xchg
arpl
pop
arpl
cs
mov
and
fsubrp
dec
mov
push
push
shl
mov
loope
mov
bound
xor
mov
sbb
jnp
mov
xor
sbb
cmp
add
add
fisubr
arpl
daa
iret
out
or
adc
xor
mov
pushf
push
hlt
mov
outs
adc
into
call
lahf
mov
mov
jg
cmp
fst
enter
inc
clc
pop
pop
dec
add
sub
outs
dec
repz
dec
nop
cmp
jg
lods
ret
in
stos
sub
shl
mov
cmps
hlt
(bad)
in
ret
(bad)
dec
and
jno
xchg
adc
mov
add
mov
test
jp
fcmovbe
or
xchg
adc
cmp
mov
jp
vmwrite
mov
sti
outs
cmp
push
pop
jbe
es
pushf
or
jl
mov
dec
test
dec
jne
xor
hlt
fs
pop
inc
jge
push
loop
cmp
int3
mov
in
xchg
jne
jae
cdq
call
pushf
loop
jl
xchg
pop
dec
rcr
in
cmps
call
xchg
lahf
rcl
or
(bad)
mov
lahf
jg
fisttp
push
int
lods
cdq
sbb
mov
js
mov
push
bound
out
lea
inc
dec
inc
pop
mov
mov
dec
mov
pop
push
jae
xchg
sahf
mov
dec
aad
retf
dec
cmp
adc
jnp
pushf
(bad)
mov
int
add
mov
adc
mov
cmp
test
fld
cmp
loop
xor
out
and
sbb
fdivr
mov
fild
out
fwait
ret
loopne
sub
pop
ins
popf
repnz
xchg
loopne
repnz
sub
repnz
inc
test
aad
lea
ins
jl
xor
mov
pop
mov
loop
fwait
cdq
add
mov
call
cmp
lods
sub
inc
retf
(bad)
fisttp
jg
add
mov
dec
xchg
add
mov
ja
call
lods
aad
xchg
fwait
inc
rcr
sbb
fbld
inc
xchg
(bad)
repnz
pop
and
or
xor
push
scas
mov
add
out
test
xor
int
dec
shl
xor
adc
mov
bound
lods
cmp
test
dec
je
nop
push
inc
mov
sub
sbb
jge
out
in
or
aas
push
data16
sub
dec
dec
dec
int
inc
repnz
adc
pop
mov
or
sahf
adc
clc
call
ss
shl
mov
mov
int
and
shr
pop
cmps
xchg
mov
xchg
mov
stos
lea
dec
aaa
ret
or
(bad)
jnp
mov
in
pop
mov
pop
or
mov
test
sbb
xor
add
gs
add
loope
xchg
out
mov
mov
repnz
and
push
dec
cmp
add
pop
mov
pop
mov
jmp
stos
push
div
dec
out
jbe
jg
add
pop
loop
mov
cmp
and
arpl
and
stc
or
mov
popa
inc
ror
pop
rcr
test
inc
jo
pop
nop
enter
sub
(bad)
mov
lods
mov
add
sbb
ss
mov
xor
inc
pop
adc
sti
cmp
add
mov
fld
retf
call
inc
cmp
repnz
cmp
pop
inc
retf
neg
int
mov
xchg
push
sbb
fwait
cmp
or
mov
sub
popa
dec
push
inc
xchg
mov
rcl
dec
mul
push
cmp
mov
push
adc
das
mov
cld
out
or
xchg
mov
dec
mov
mov
add
xchg
xor
pop
inc
cmp
stos
mov
lods
and
in
xor
mov
loopne
fstp
xchg
hlt
xchg
in
fxch
and
adc
inc
in
rcr
xor
inc
fmul
lods
retf
dec
cmp
or
into
das
pop
in
dec
pusha
cli
sub
scas
sbb
int3
mov
out
into
mov
inc
js
lds
xlat
sub
mov
addr16
es
in
cli
lods
xor
icebp
mov
sub
mov
cmps
outs
add
ds
mov
mov
retf
pop
jb
fistp
sti
cld
retf
jle
jl
prefetch
or
(bad)
dec
push
pop
inc
pop
inc
inc
jns
(bad)
cmp
jnp
cmp
inc
call
imul
mov
fmulp
in
pop
mov
fwait
in
pushf
and
fs
cmp
fist
cmp
dec
adc
retf
imul
movs
cmps
dec
rcr
fdivr
cmp
inc
jne
jne
call
aam
lock
sub
ror
pushf
xchg
xor
and
ret
(bad)
lock
(bad)
cld
push
and
add
mov
retf
stos
rcl
mov
xlat
xchg
into
push
fstp
ins
cmps
xor
lods
dec
outs
into
or
call
mov
data16
pop
call
push
sbb
sub
pop
(bad)
lahf
ins
mov
dec
sti
arpl
into
cmp
push
(bad)
push
push
mov
add
mov
lock
push
dec
add
cmp
add
sbb
into
adc
clc
outs
cld
xchg
mov
(bad)
jne
cmp
pop
cmp
and
aam
in
dec
stc
pop
ins
out
sbb
jo
in
cmp
mov
out
in
sub
lea
jnp
scas
cmp
(bad)
in
cmp
pop
shr
mov
pop
mov
inc
into
cmp
xlat
and
je
sub
pop
and
pop
out
sbb
std
cmps
jbe
jnp
out
sbb
in
mov
mov
in
ins
add
inc
idiv
fbstp
push
sbb
cli
cmp
cmp
sbb
cmp
sbb
(bad)
lahf
int3
fisttp
jg
jge
bound
stos
out
sub
test
pusha
or
int
test
jne
xor
jg
mov
int3
or
int
sub
cwde
lahf
adc
adc
shl
(bad)
sbb
fwait
pop
neg
mov
or
cdq
imul
xchg
in
cmp
jge
mov
into
lock
pop
add
cmp
mov
sti
adc
fnstcw
jge
mov
int3
stos
sub
or
pushf
in
out
and
fld
dec
pop
pop
dec
mov
pop
popf
push
loope
pop
mov
add
rcr
repz
mov
lock
(bad)
jae
jbe
mov
mov
rol
mov
jnp
lock
sub
or
mov
nop
dec
dec
into
std
js
dec
popa
mov
add
sub
retf
jo
loopne
bound
repz
outs
lods
ja
add
mov
xor
inc
pusha
sub
xchg
sub
or
ss
sbb
inc
mov
stos
mov
push
mov
sti
outs
pop
cmp
popf
int
int3
loopne
nop
mov
dec
push
xchg
mov
push
xchg
ss
aad
in
cmp
std
lods
sub
mov
mov
loope
jle
push
sub
popa
mov
sbb
xor
ss
lea
stos
imul
cld
in
imul
int
leave
mov
int
in
or
or
cmp
int
sub
lods
popa
stos
je
cld
push
mov
push
pop
out
inc
ds
mov
stc
and
cmps
and
lsl
aaa
and
xor
rcr
call
or
add
push
or
fsubr
retf
mov
inc
lea
aaa
push
pop
push
jb
loop
(bad)
pop
or
dec
hlt
and
add
mov
in
fst
loope
cmp
je
cmp
stos
mov
fs
xchg
loopne
mov
pop
or
xor
fimul
mov
jge
lods
pop
das
mov
ins
mov
out
call
addr16
xor
int
sub
int3
or
outs
in
mov
imul
push
sti
push
mov
mov
xchg
sbb
jmp
add
sti
in
inc
mov
mov
icebp
add
dec
out
sub
xchg
pop
lock
cmp
and
imul
das
mov
hlt
mov
stos
dec
sbb
sub
daa
add
jae
inc
imul
imul
out
scas
mov
add
(bad)
(bad)
inc
imul
mov
sub
aas
outs
(bad)
fcomp
jnp
cmp
adc
jmp
into
comiss
sti
vmovaps
mov
out
cmp
lea
push
xchg
ds
test
pop
retf
lock
push
stc
mov
shr
lock
repnz
stos
imul
fsub
mov
jmp
retf
lock
adc
xor
ja
cs
sar
in
cmp
(bad)
std
cld
out
mov
out
mov
and
mov
cmp
xchg
dec
sub
jne
dec
in
pop
dec
sahf
xor
or
sbb
fwait
pop
xor
pusha
movs
sub
push
adc
sub
mov
enter
xchg
das
ret
inc
add
sbb
and
push
add
imul
movs
mov
and
icebp
les
cmp
pop
inc
sub
mov
cmp
stos
les
je
or
das
rcl
stos
sbb
imul
pop
ins
and
mov
in
or
fld
fwait
mov
jmp
imul
div
mov
cs
xchg
inc
cmp
mov
and
cld
scas
mov
clc
mov
lock
adc
sub
popa
and
(bad)
cmp
cmp
add
popf
pushf
adc
call
fiadd
mov
cmps
or
shl
ficomp
pushf
stos
retf
or
push
push
inc
cmc
sub
jmp
sbb
push
xor
ss
mov
xchg
sar
push
xor
loope
sbb
pusha
in
cdq
jmp
push
cs
add
add
clc
jg
dec
ucomiss
pop
daa
pcmpgtd
lahf
sub
out
pop
mov
popa
adc
lods
lock
dec
mov
mov
ss
cwde
cs
pushf
mov
mov
aas
pushf
lahf
jl
mov
pop
mov
mov
xor
fistp
mov
mov
nop
popf
arpl
ins
ss
ret
mov
add
add
and
and
imul
gs
ret
(bad)
xor
mov
xchg
inc
cmp
mov
add
popa
add
lods
mov
dec
sbb
out
fbld
xor
dec
js
repnz
sub
in
imul
iret
xchg
packsswb
dec
mov
push
push
pop
and
das
sbb
xor
add
mov
shl
dec
ficom
jle
je
arpl
mov
je
jae
int3
sub
idiv
cmp
xlat
lock
ds
mov
fbstp
ins
stos
dec
jl
sub
mov
mov
pop
lods
retf
sti
sti
(bad)
cs
mov
sub
dec
fs
fs
into
xchg
aas
iret
push
(bad)
lahf
leave
pop
popf
sub
cld
test
outs
cmp
dec
jmp
push
fmul
stos
sahf
ins
ins
stc
rcl
add
call
pop
pusha
out
sub
lods
ins
fidivr
jg
(bad)
jo
fucom
xlat
ror
fwait
int3
fistp
iret
cs
ins
push
ins
or
mov
jmp
mov
outs
mov
sbb
imul
mov
les
cmp
lahf
and
in
mov
or
cmp
mov
pop
(bad)
pushf
or
mov
fwait
push
ins
mov
sbb
pusha
mov
mov
shl
imul
jge
pop
push
and
xchg
cmc
jmp
or
pop
jnp
lea
mov
mov
dec
xlat
mov
jle
outs
or
lea
(bad)
ins
ret
mov
jae
clc
test
in
popf
push
pop
loop
test
pop
retf
std
(bad)
dec
jnp
fisubr
mov
cs
pushf
sub
fsubr
(bad)
fwait
sub
pop
popf
jmp
sbb
pop
in
ficomp
pop
mov
ins
imul
test
int3
in
mov
pop
push
mov
cmc
cld
fdivr
pop
jle
or
sti
dec
pop
push
stos
hlt
cld
dec
push
fld
ins
pop
fs
std
sbb
mov
cmp
add
mov
scas
fidivr
popf
pop
cmovl
dec
jl
dec
jp
sub
xor
lods
ins
add
mov
dec
mov
and
adc
ins
std
pop
leave
cmp
(bad)
dec
mov
mov
pop
jmp
mov
mov
dec
scas
(bad)
fsubr
(bad)
jmp
sahf
adc
int
fwait
or
or
push
aaa
mov
int3
dec
or
mov
sahf
ins
into
retf
mov
retf
sbb
cmp
mov
sti
mov
cmp
pop
sbb
mov
(bad)
in
cmp
fwait
call
pop
and
cmp
sub
movs
cmp
popf
out
jmp
sar
fmul
retf
pop
stos
adc
int
sbb
mov
mov
add
jno
sbb
arpl
adc
sti
ins
sbb
retf
mov
ins
mov
fcomp
frstor
mov
mov
retf
mov
pop
cld
sbb
ins
sub
mov
cmps
mov
not
xor
outs
ins
pop
dec
jo
lods
rcr
aas
sahf
cdq
stos
ficomp
cli
mov
xor
data16
das
cmp
mov
int3
cmp
popf
lods
ds
mov
or
jmp
test
popf
cld
lods
in
ins
fwait
nop
test
int
pop
or
(bad)
sub
add
std
jmp
xor
and
fsubr
cmovnp
pop
call
not
sbb
jl
lods
retf
mov
out
les
jmp
int
cmp
fidiv
setnp
pop
enter
dec
in
enter
leave
aam
pop
call
fisttp
dec
imul
pop
outs
push
(bad)
in
mov
and
push
cld
sbb
cmp
lds
sub
pop
imul
sbb
push
cmp
aas
fwait
(bad)
sbb
jge
cmp
or
cs
fdivr
jmp
jb
sub
das
fs
arpl
jmp
enter
retf
cmp
sub
stc
icebp
cmp
and
mov
cmp
rol
lea
jnp
or
outs
pop
jae
pushf
pop
sbb
push
sub
mov
or
pop
retf
call
pop
or
mov
addr16
mov
jle
popf
(bad)
int3
push
(bad)
scas
jl
jl
retf
outs
int3
sbb
add
sub
sbb
lahf
jge
fdivr
lods
sbb
ds
je
jmp
push
in
push
jnp
imul
fiadd
pop
jns
imul
mov
jb
fisubr
sub
push
idiv
or
push
into
add
pusha
dec
sub
rcr
(bad)
mov
ds
or
sar
out
popf
pop
shl
ficomp
stos
lea
shl
mov
dec
std
push
cmp
ins
jnp
call
ficom
sub
mov
cld
cli
stos
mov
sbb
pushf
fidivr
jo
std
outs
ficom
jge
outs
repz
cmp
pop
mov
outs
mov
cmps
sar
xor
sbb
pop
sbb
(bad)
cmp
pop
sub
xlat
(bad)
dec
jmp
mov
shr
sub
cmp
mov
fidiv
sahf
mov
ins
push
sub
dec
ins
std
in
in
int
or
sbb
dec
lods
lods
imul
cs
aad
xor
cmp
std
sti
shl
popa
xlat
adc
rcr
mov
pop
sub
pushf
cli
lods
ds
shl
push
lea
test
and
test
outs
call
aas
sub
mov
or
(bad)
ds
jmp
pop
dec
stos
jp
leave
stos
cmp
retf
int3
ret
dec
sbb
jp
cli
cmps
int3
pop
cwde
sti
das
sbb
xor
retf
cmp
int3
mov
push
imul
shl
push
(bad)
push
ficomp
pop
test
leave
fbstp
sbb
dec
lea
sbb
pop
cld
enter
cmp
inc
adc
jns
add
nop
cmp
iret
dec
or
xor
sbb
dec
mov
(bad)
pop
lea
outs
cmps
sub
or
jnp
sub
add
dec
(bad)
xor
mov
sub
xchg
popf
push
pop
clc
fmul
std
cld
fwait
pusha
mov
sbb
aad
push
aaa
imul
sub
lea
test
sti
aam
sub
add
aam
ficomp
dec
fidiv
ins
stos
out
adc
cwde
or
inc
inc
mov
dec
mov
adc
iret
stos
mov
push
(bad)
jmp
push
pop
and
xchg
mov
mov
sbb
into
ins
cmp
inc
push
jl
sbb
scas
or
push
sub
call
retf
fs
fistp
sbb
mov
sbb
loope
fmul
mov
sub
xchg
fmul
retf
push
in
shr
sbb
fcmovnu
scas
pop
shl
sbb
in
pop
sub
sbb
stos
push
mov
(bad)
fsub
or
add
xor
xchg
sub
sti
cld
jp
adc
push
retf
sahf
pop
fsubr
stos
push
mov
dec
out
jo
lods
call
jbe
call
mov
shr
mov
hlt
fmul
jge
adc
and
into
sub
pushf
rcl
sti
or
fmul
jge
(bad)
sbb
mov
dec
adc
aam
mov
xor
mov
dec
iret
xchg
imul
sti
pop
retf
out
pop
packsswb
jmp
mov
dec
outs
mov
mov
push
rcr
pop
mov
mov
aam
push
sub
cld
fisubr
cmp
mov
in
fcomp
lods
and
dec
shl
cmp
test
pop
fimul
fsubr
jle
push
sub
fdivr
std
fwait
dec
imul
dec
scas
lea
mov
pop
lods
sbb
xchg
jnp
int3
xor
out
into
dec
push
imul
push
int3
xchg
retf
ins
or
jl
dec
neg
mov
popf
jge
ins
pop
dec
fisubr
repz
jecxz
xchg
rcr
fstp
jmp
mov
fistp
pop
into
psubd
fwait
mov
nop
cs
(bad)
lahf
pop
mov
or
test
call
fdivr
stos
std
fldcw
pop
inc
out
dec
jnp
std
or
dec
movs
int
cmp
fidivr
sahf
fdivr
push
sbb
(bad)
sub
shr
pop
shl
xor
fcompp
int3
mov
ja
aam
aam
in
fisttp
dec
or
fist
test
rcl
mov
jns
jno
and
or
sub
aam
push
sbb
mov
and
sahf
push
jb
in
lods
pop
dec
dec
int3
jns
cs
fisttp
adc
nop
mov
or
into
cmp
lods
sbb
inc
mov
fimul
jl
xchg
pop
pop
fidivr
lods
packssdw
mov
nop
rcl
jbe
lea
pop
aam
cmp
sub
mov
pop
pop
ins
sbb
cmp
or
push
jns
rcl
sub
dec
in
out
pusha
mov
jecxz
outs
cmp
lods
sbb
jnp
fmul
sti
mov
shl
mov
jnp
mov
cdq
lahf
movs
ret
inc
stos
dec
(bad)
mov
xchg
push
bound
cs
stos
mov
dec
in
test
cs
or
pop
shl
rcl
sbb
clc
lock
jg
(bad)
pop
lock
and
sub
or
push
aam
test
push
jmp
jmp
ins
jecxz
jg
movs
(bad)
cli
sahf
mov
pop
and
js
pop
dec
leave
mov
jo
fldcw
fisubr
sub
fsubr
sub
pop
mov
dec
lea
or
sbb
fmul
sub
pop
jl
in
fdivr
int
fucomi
cld
mov
inc
(bad)
fmul
fcomp
aas
fmul
push
mov
imul
sub
pusha
jne
xchg
(bad)
mov
lea
test
fdivr
movs
pop
ins
call
retf
das
mov
les
pop
dec
sub
fdivr
jmp
or
cmp
rcr
outs
ins
or
call
mov
jnp
sti
iret
dec
fisubr
sbb
into
fcmove
add
pop
shr
fneni(8087
es
int3
int
sbb
lea
popf
mov
xchg
sub
xor
(bad)
sbb
jg
cmp
popf
(bad)
jge
sahf
lods
idiv
jne
mov
sbb
stos
popf
xchg
jmp
dec
aas
lods
test
call
push
lea
xor
sub
pop
std
mov
(bad)
fld
jns
and
push
iret
enter
sub
pop
ins
pushf
lahf
jmp
pushf
cmp
adc
sti
dec
cmp
cli
push
jmp
mov
fmul
lahf
sbb
imul
in
fdivr
scas
jp
shl
jmp
dec
xchg
dec
lods
pop
sbb
nop
cld
pop
inc
lea
adc
mov
fimul
pop
outs
cmp
ror
pop
ins
jae
jp
push
fild
call
push
mov
fcomp
rdtsc
call
jp
fsub
aaa
or
mov
or
jb
aad
fdiv
adc
fcomp
sti
(bad)
push
adc
sbb
add
loope
and
sub
(bad)
mov
repz
das
fimul
fstp
jge
stc
jo
pusha
mov
rcr
cmp
pop
ins
cli
fsubr
cmp
into
xlat
dec
out
repnz
or
sbb
arpl
fstp
sub
and
out
cli
fsubr
fwait
pop
dec
scas
push
inc
mov
pop
sbb
xchg
push
fdiv
sub
call
test
int3
nop
dec
sti
scas
out
jmp
call
sbb
fsub
cmps
dec
jg
jmp
push
call
ins
out
cmp
hlt
dec
xlat
mov
pop
adc
(bad)
aam
sbb
add
ror
scas
cmp
and
call
adc
mov
(bad)
nop
retf
fbld
(bad)
scas
stos
jge
test
dec
pushf
jmp
and
rcr
pop
jmp
adc
outs
shl
jmp
or
dec
lods
call
sub
xor
mov
push
inc
sbb
cmc
mov
sahf
cmps
jnp
adc
push
sbb
or
mov
fcom
fmul
(bad)
out
xchg
nop
fdiv
ror
cs
cmps
jae
mov
scas
cld
lea
pop
cmp
fcmovnbe
cdq
dec
add
fsubr
retf
fsubr
push
mov
sub
xor
dec
mov
(bad)
mov
or
fiadd
inc
fadd
mov
lods
inc
push
jmp
daa
(bad)
sbb
lahf
int3
sbb
outs
test
and
jo
sbb
push
push
jnp
pusha
pop
sbb
pushf
push
fadd
fsubr
popf
cmp
icebp
in
fstp
add
add
test
xlat
mov
jmp
(bad)
aam
dec
fnstcw
lods
sbb
retf
dec
pop
retf
aas
push
shr
fld
dec
fcom
iret
ds
sbb
int3
popf
hlt
adc
push
mov
inc
jl
das
fsubr
nop
(bad)
neg
pop
sub
mov
enter
fdivr
(bad)
jmp
call
(bad)
das
(bad)
mov
sub
ins
adc
pop
fistp
or
mov
push
jo
fsubr
inc
outs
mov
scas
sub
mov
pop
dec
jge
shl
mov
pop
int3
pop
cli
mov
sti
push
lods
test
lea
or
lods
add
or
or
jp
nop
dec
lods
ins
in
lea
fld
imul
adc
pop
lods
pop
rol
sub
in
sbb
pop
imul
ins
stos
lea
pop
ret
(bad)
push
mov
jge
sub
sbb
pop
mov
cwde
cmp
cmp
mov
pushf
retf
jnp
fsubr
jl
lods
call
std
add
scas
mov
mov
fst
mov
call
cmp
(bad)
fmul
sbb
into
shl
call
scas
loopne
fstp
enter
outs
dec
mov
movs
fsubr
lods
cld
imul
jnp
add
jb
fdivr
pusha
imul
cmp
out
push
pusha
xchg
call
jns
int
sbb
jmp
int3
rcr
or
pop
cs
sbb
sub
inc
repz
std
jmp
cmc
in
int3
dec
mov
stos
pop
sbb
cmp
test
dec
mov
fmul
dec
dec
fcmovnu
pop
retf
jg
int3
or
push
sti
fucomp
popf
iret
mov
lods
push
push
retf
rcr
stos
mov
in
arpl
nop
jmp
sahf
adc
lea
mov
ds
aam
jnp
sti
iret
push
jmp
retf
int3
cld
enter
das
ins
push
cmp
mov
mov
pushf
test
mov
mov
addr16
pop
dec
into
pop
imul
or
cld
fadd
sub
sbb
fmul
push
ficomp
imul
popf
sub
sbb
sbb
dec
ins
(bad)
jle
sbb
mov
scas
adc
sahf
std
sbb
leave
lods
ins
and
mov
cmc
in
popf
sti
sahf
lds
ficomp
dec
ds
ins
(bad)
ror
pushf
cmp
xor
aam
mov
inc
scas
jne
jnp
int3
cmp
push
aad
xchg
pop
std
pop
cmp
fwait
ins
jecxz
scas
and
mov
mov
outs
loopne
imul
jle
mov
jns
jmp
pushf
cmp
dec
sub
(bad)
bound
dec
pushf
push
mov
adc
fsubr
cli
fcmovne
ins
scas
cmp
jmp
pop
push
sbb
std
ins
rcl
mov
stc
pop
jmp
pop
sahf
pop
gs
sub
pop
out
pusha
add
(bad)
in
psrlq
pop
sbb
fidivr
icebp
in
sbb
leave
pusha
and
pop
cmc
fisubr
pop
das
or
stc
pop
cs
adc
std
imul
jg
jecxz
dec
sub
int
push
pop
fcmovnu
xchg
test
and
sub
sub
outs
int
mov
fdivr
cli
ins
or
sub
gs
fdivr
fcmovnu
test
das
dec
push
popf
mov
dec
fisubr
or
sahf
sbb
push
pop
int3
jge
(bad)
in
sar
lea
cs
das
sub
sbb
lods
pop
dec
out
lods
mov
imul
adc
mov
mov
dec
movs
jge
daa
ret
cmp
scas
or
lea
or
mov
out
dec
sub
or
cli
and
into
fcom
lods
sub
cs
addr16
sar
stos
pop
sbb
jnp
(bad)
pop
sbb
pushf
fwait
mov
fldcw
out
pop
pop
pop
cmp
sbb
sbb
aad
mov
mov
pop
mov
add
push
ins
fs
sti
or
dec
sub
fisttp
popf
jnp
dec
sub
push
jmp
(bad)
jnp
cmp
dec
push
(bad)
dec
jge
inc
dec
je
sub
(bad)
cld
ds
mov
out
sbb
sti
jmp
iret
in
push
mov
dec
mov
cmp
dec
mov
mov
mov
sub
or
sti
lods
loopne
inc
dec
in
ins
jmp
ficomp
pop
pop
in
std
neg
cs
or
add
aas
sbb
imul
and
xchg
ja
or
pop
mov
mov
jle
xchg
mov
call
js
sub
push
pusha
mov
outs
dec
std
fisubr
aam
mov
cmp
pop
sbb
adc
mov
xchg
ins
stc
sti
jno
ret
pop
fwait
in
test
jp
ds
inc
std
es
or
pop
jle
mov
jmp
xor
mov
push
mov
push
ins
dec
in
mov
fcmovnbe
ss
ins
push
lods
out
fild
mov
or
(bad)
bound
shr
std
lods
mov
(bad)
in
fwait
pushf
pop
push
pop
ins
dec
pop
std
dec
hlt
mov
stos
movs
pushf
test
test
dec
mov
cs
push
push
mov
xchg
mov
mov
int3
jmp
std
sub
cmp
popa
xlat
inc
in
int3
or
fldcw
outs
aas
imul
retf
cs
int3
pop
or
das
popf
fwait
cwde
mov
pop
aad
jnp
sti
fcomp
push
mov
in
sub
test
push
pop
mov
mov
inc
mov
into
stos
in
iret
or
std
mov
dec
jnp
call
in
int
push
movs
sahf
ins
push
(bad)
jmp
dec
pop
(bad)
mov
(bad)
(bad)
jle
pop
cmp
arpl
(bad)
repz
dec
fucomi
and
imul
icebp
repz
push
outs
rcr
sbb
pushf
sub
mov
sbb
dec
imul
xchg
fwait
lods
fistp
pop
xchg
push
sub
adc
mov
ins
std
loope
sub
dec
fisttp
(bad)
pop
mov
adc
and
in
sbb
or
dec
pop
ins
aam
mov
jmp
mov
pop
lods
rol
mov
fwait
data16
adc
or
adc
ror
pop
pop
mov
sub
fild
dec
clc
int3
loop
jge
xchg
lds
loope
shl
mov
mov
xor
scas
push
fisttp
in
mov
test
sbb
pop
and
outs
int
fsubr
rcl
jnp
sbb
inc
sbb
mov
ror
xchg
out
idiv
adc
pushf
sti
sbb
dec
cs
sub
sub
jl
int
int3
call
shl
rcl
in
or
cmp
ds
mov
dec
(bad)
inc
dec
rcl
pop
hlt
popa
xchg
repnz
into
outs
sub
xchg
add
outs
xor
dec
clc
jge
sbb
push
mov
push
sub
jbe
sbb
and
dec
push
addr16
cmp
jl
(bad)
cli
test
into
pop
dec
retf
pop
(bad)
outs
mov
jle
xor
cmp
fst
sbb
mov
ror
ror
rcl
fdiv
mov
pop
rcr
stos
pop
mov
movs
jae
adc
(bad)
(bad)
fldln2
into
or
cmp
jb
fst
mov
stos
sbb
stos
imul
gs
cmp
jmp
sbb
sbb
sub
into
leave
adc
ret
pop
adc
mov
cmp
dec
dec
adc
push
mov
jecxz
adc
jmp
or
adc
ins
sub
neg
imul
mov
pop
jne
jp
jmp
fld
lods
popf
cmp
push
in
dec
mov
mov
jo
movs
ds
test
stc
sub
(bad)
push
pop
pop
imul
mov
adc
pushf
(bad)
jmp
jmp
out
push
push
dec
retf
retf
xchg
jl
outs
push
stc
jmp
dec
retf
inc
mov
loop
cmp
cs
movs
sbb
sbb
cmp
ins
or
leave
rcl
mov
mov
or
sbb
fucomp
pop
pop
pop
jge
hlt
inc
repnz
lods
or
jge
pushf
retf
push
popf
jl
test
xor
lods
add
xor
sbb
pop
jge
sub
in
int3
out
adc
sub
jns
sbb
jp
retf
mov
dec
loopne
jmp
sub
fsubr
rcl
sar
cmp
sub
inc
int3
or
dec
ret
lahf
out
jmp
int3
ror
mov
mov
jle
imul
nop
pop
fmul
(bad)
adc
fwait
sar
dec
fnstsw
(bad)
into
mov
push
cmp
sub
lods
outs
sub
movs
adc
ds
dec
xchg
pop
xor
sub
inc
test
shr
jne
or
outs
loopne
pop
shl
jp
or
sbb
push
push
mov
mov
(bad)
sub
pop
test
pop
mov
fisttp
pop
rol
sbb
cmp
jge
fsubr
retf
sbb
mov
jnp
std
jmp
sub
scas
mov
les
pop
push
jmp
jg
les
dec
fiadd
popf
cmp
add
stc
jmp
call
mov
into
xlat
pushf
push
or
in
push
retf
add
loop
int
rol
push
sub
lea
cmps
ins
sti
scas
mov
mov
xor
adc
pop
sti
or
jl
call
repz
sti
dec
xor
or
add
adc
mov
lea
shr
test
jle
out
push
xor
mov
inc
dec
add
rcr
xlat
sub
leave
sti
in
(bad)
push
inc
fidiv
or
(bad)
xchg
sub
sub
je
lahf
xor
and
pop
push
push
sub
imul
pop
enter
daa
dec
or
lods
lea
sbb
ds
pop
out
ins
rcl
(bad)
es
push
out
scas
mov
gs
ffree
adc
stc
xchg
jmp
pop
dec
push
xor
lods
popf
pop
fsubr
cmp
inc
add
ret
cmp
fst
daa
nop
or
mov
sbb
mov
pop
aas
push
xchg
push
(bad)
sar
aad
or
(bad)
aad
inc
pop
jb
xor
leave
cmp
push
jp
and
cmp
mov
cmp
(bad)
stos
sub
mov
jmp
lods
lods
mov
mov
sub
dec
ret
pushf
sbb
mov
sub
jmp
cmp
sbb
in
cwde
rcl
pusha
fstp
xchg
fidivr
jnp
enter
aaa
fwait
sbb
daa
mov
aaa
movs
scas
ins
sar
retf
xchg
jne
pop
loop
pop
loopne
sbb
dec
pop
xlat
mov
fmul
int
arpl
sub
add
push
cmp
lods
push
dec
mov
ret
jbe
sub
fidivr
arpl
push
sub
sbb
int
mov
pop
or
ficomp
sbb
xchg
cwde
push
push
mov
push
ds
pushf
pushf
fs
xor
adc
(bad)
ds
jecxz
inc
ins
fs
movs
or
in
dec
jge
fsub
movs
(bad)
pop
mov
shl
add
pop
inc
mov
imul
xor
add
call
test
push
xor
add
adc
mov
inc
mov
test
in
jo
retf
ret
(bad)
popa
mov
or
xor
jl
cmp
int3
ds
mov
pop
stos
mov
mov
inc
jecxz
ins
sub
dec
cmp
jo
into
je
in
pop
daa
mov
into
dec
xor
sbb
clc
ins
in
xlat
or
sub
sbb
mov
int3
adc
(bad)
jl
pop
xchg
dec
das
aad
mov
sbb
cmp
ds
or
xlat
sbb
push
push
jp
sub
pop
call
mov
sti
xchg
mov
dec
pop
mov
std
stos
xchg
jg
adc
inc
sahf
mov
lods
shl
mov
inc
pop
ins
add
dec
call
jge
clc
mov
pop
cmp
xor
test
pop
push
out
fcomi
sbb
mov
cmp
nop
int3
mov
sbb
retf
pop
jg
inc
rol
xchg
jge
movs
enter
push
xchg
pop
fiadd
repz
daa
sbb
sahf
test
and
dec
call
adc
xor
imul
aad
repz
(bad)
(bad)
mov
fimul
arpl
int
nop
mov
jl
sub
int3
push
(bad)
sbb
adc
ror
adc
sub
movs
mov
aam
(bad)
sahf
stos
std
lods
add
repnz
call
inc
fs
(bad)
stc
imul
jb
and
fwait
int3
dec
popf
aas
jp
jecxz
(bad)
xchg
rep
repnz
mov
xor
ins
push
push
sbb
xchg
stc
push
jmp
fild
sbb
xor
mov
jae
movs
jo
cmc
in
cmp
repz
jb
sbb
adc
mov
jle
cmp
mov
jno
mov
in
test
(bad)
pop
movs
ins
and
sbb
or
int3
sbb
das
mov
jle
sub
test
sti
push
mov
fcom
pop
rcr
in
push
jnp
or
or
cmp
into
or
sub
sbb
cmp
sbb
popf
xor
lahf
jne
arpl
fnstenv
retf
popf
int
test
xchg
push
push
pop
or
sbb
pop
mov
leave
(bad)
(bad)
sti
mov
sub
in
idiv
pop
dec
repz
mov
gs
(bad)
mov
cli
cmp
jl
ins
fisttp
xchg
xor
enter
add
jmp
(bad)
sub
cmc
inc
retf
dec
lds
xor
lods
add
out
daa
sbb
mov
(bad)
sbb
sub
imul
pop
pop
test
fcmove
sbb
fwait
mov
call
jge
ins
jbe
imul
sti
sbb
sub
cmp
adc
cmp
pop
dec
ins
jnp
mov
xchg
aaa
pop
pop
lods
pusha
shl
dec
loope
lahf
ret
cmp
call
and
sbb
sbb
xor
mov
push
or
or
push
push
(bad)
lods
pop
adc
pop
out
lds
and
outs
rol
push
rcl
and
inc
mov
cmp
jp
inc
jp
cmp
mov
ins
xor
pop
add
xchg
xor
popf
(bad)
ins
xchg
jmp
dec
je
add
cmps
js
cmc
movs
jg
cmp
mov
in
(bad)
sti
mov
pop
jmp
lods
mov
pop
push
pop
jl
ins
push
cld
stos
fwait
in
cmps
(bad)
dec
push
mov
popf
std
xchg
adc
jne
sub
cli
dec
pop
mov
iret
lods
in
mov
popf
ins
loop
mov
pop
dec
mov
out
mov
enter
in
mov
popf
pop
sub
cmp
popa
out
enter
pop
adc
or
sub
loopne
test
and
es
out
or
es
dec
or
fmul
stc
sbb
dec
(bad)
out
jp
bswap
ins
or
sbb
pop
mov
add
ds
imul
std
rcr
push
in
mov
cld
retf
test
lods
jmp
aas
scas
or
aad
out
pusha
cmp
adc
or
les
pushf
(bad)
pusha
retf
retf
cmp
push
sbb
sub
cmp
or
lods
sub
or
and
add
inc
or
push
das
jo
outs
sti
fnstcw
dec
jg
sbb
jle
mov
(bad)
push
dec
fisubr
in
outs
ds
int3
pop
sbb
cmp
dec
fmul
push
int
ds
xchg
mov
jl
jmp
dec
adc
cmp
sub
in
popf
pop
sbb
mov
cmp
cld
xchg
push
mov
int3
jge
mov
jnp
daa
loope
sub
jnp
lock
hlt
in
ds
mov
cmp
or
sub
or
stc
or
cmp
scas
aam
retf
in
jmp
pop
sub
ins
dec
mov
int
cmp
sbb
xor
das
pop
or
cld
jmp
addr16
imul
cmp
sbb
add
addr16
mov
push
push
scas
xor
cmp
add
in
jae
xor
xchg
push
fs
mov
cmp
mov
mov
push
imul
stos
sbb
fistp
jmp
fimul
sar
sub
push
gs
fdivr
fstp
pop
jmp
std
fwait
ins
pop
ins
fnstsw
scas
fisttp
sbb
mov
mov
das
(bad)
xchg
iret
pop
xchg
call
xchg
sbb
aad
jne
xor
mov
jecxz
iret
bndstx
pop
add
xor
push
fmul
fistp
mov
into
dec
in
dec
cli
mov
lods
pop
sti
fcmovu
ins
pop
fdivrp
fwait
sub
sub
fisttp
cmp
imul
ins
pop
fwait
sti
mov
lahf
call
sub
sub
mov
push
add
movs
movs
and
mov
cmp
icebp
mov
add
dec
pop
mov
mov
xchg
sbb
fwait
jae
aas
sbb
js
into
mov
jmp
fsubr
aas
push
pushf
gs
sbb
or
sub
pop
fnstsw
inc
push
mov
fsubr
cld
mov
out
sbb
mov
popf
mov
or
xor
scas
sbb
cmp
ss
ret
fidiv
mov
sbb
(bad)
aas
jo
xchg
imul
inc
movs
sbb
outs
(bad)
stc
mov
push
mov
jmp
mov
mov
mov
lods
popf
mov
pop
fucomi
jp
push
mov
stos
mov
cwde
fnstsw
pop
cli
mov
sti
mov
clc
jge
mov
sub
sub
pop
sbb
or
xchg
not
and
int
ins
scas
sbb
jmp
mov
or
retf
mov
pop
pushf
pop
call
sub
dec
outs
test
fistp
jle
stos
mov
dec
std
fsubrp
sahf
ins
cmp
stos
enter
jl
mov
aas
imul
(bad)
std
xchg
jns
rcr
imul
out
sbb
sbb
dec
movs
cmp
cmp
inc
mov
call
push
mov
mov
pop
jl
mov
mov
or
es
cmp
in
or
pop
pop
aad
call
pop
adc
std
jg
push
std
imul
cli
dec
lods
into
mov
out
inc
fmul
or
dec
cli
sbb
dec
push
jge
pop
lods
retf
pushf
ins
add
imul
ins
mov
xor
dec
add
es
sti
out
test
or
cmp
lods
adc
sub
cdq
outs
or
xor
ret
mov
cmp
in
xor
pop
xor
pop
push
mov
jne
sbb
pop
fs
push
ds
fcmovnbe
sub
dec
fnsave
retf
ins
jns
mov
sahf
out
mov
or
fistp
lds
in
dec
dec
sub
cmc
(bad)
pop
mov
mov
pop
push
int3
ins
loop
std
inc
cmp
adc
dec
jg
das
cmps
call
mov
push
jo
test
cmc
add
adc
aas
push
and
aas
scas
lods
sub
cli
test
jge
mov
fdiv
jp
push
cmps
jnp
rcl
mov
mov
sub
xlat
jmp
loop
shl
arpl
imul
popf
dec
mov
scas
pop
cmps
push
mov
mul
fisttp
pusha
pop
dec
mov
jmp
mov
xchg
cdq
(bad)
(bad)
xchg
pusha
in
cmp
mov
fisub
mov
fcomp
sti
sub
mov
cmp
int3
pop
outs
mov
and
xor
adc
in
pop
outs
pushf
cmp
xchg
or
arpl
sbb
adc
lds
mov
push
add
add
jp
pop
dec
ret
dec
lods
clc
call
xor
inc
mul
xchg
cmps
dec
and
dec
(bad)
mov
sahf
pop
outs
pop
lea
cmp
in
aas
movs
movs
lods
mov
mov
(bad)
fcomp
in
(bad)
dec
pop
fstp
inc
fmul
xchg
cdq
sbb
mov
push
lock
cmc
mov
cmp
sbb
or
push
not
scas
cmp
sub
out
sub
ss
xchg
aad
or
cmp
lahf
out
dec
jmp
cld
fwait
xchg
sbb
push
cmp
pop
jmp
cs
xchg
push
mov
stos
mov
loope
enter
sti
jl
sbb
pushf
xor
adc
nop
jnp
cmp
cmp
pop
repnz
pop
xchg
push
cmp
dec
sbb
arpl
fnstcw
mov
imul
test
jge
aaa
push
inc
loop
mov
in
scas
sahf
push
rol
add
pop
dec
lods
scas
fisttp
mov
jmp
sti
cdq
sbb
push
cdq
xor
adc
jge
dec
(bad)
jmp
inc
pop
mov
test
pop
shl
inc
enter
pushf
inc
jns
out
cwde
jge
les
lds
push
push
ins
pop
call
xor
ins
ds
jbe
pushf
lods
sti
jnp
jmp
xor
fwait
jmp
xchg
or
das
mov
lods
dec
or
call
mov
cmp
stc
fadd
cdq
mov
fild
sub
ret
inc
lods
or
ss
sub
cmp
inc
les
jle
hlt
stos
ins
mov
in
cmc
mov
xchg
(bad)
or
cli
lea
mov
cmp
lahf
cmp
loop
cmc
xor
jno
pop
adc
repnz
movs
call
add
es
jg
ds
cld
push
div
adc
or
fldenv
sahf
pop
in
pop
mov
cmc
mov
xchg
xchg
loop
cdq
jbe
mov
into
test
pusha
loop
xlat
hlt
shr
push
xor
mov
sub
aaa
sbb
push
out
mov
add
jbe
xor
mov
pop
jmp
mov
adc
pop
and
fcom
push
lods
sbb
out
add
int
sbb
inc
sti
fstp
add
leave
mov
pop
fs
cmp
scas
loop
std
mov
ror
xor
nop
js
mov
push
inc
mov
sub
jae
adc
sub
outs
xor
dec
repnz
enter
ret
in
stos
lods
int
cmps
pop
loop
pop
and
inc
clc
hlt
daa
sbb
sub
add
xor
jmp
test
xchg
jmp
mov
ss
mov
ss
mov
lods
imul
add
mov
bswap
push
or
lock
dec
push
stos
ds
popf
mov
mov
xchg
(bad)
mov
test
jmp
stos
ret
jge
lahf
xchg
cmps
ret
and
pusha
cmp
pop
pop
sub
pop
lock
add
jo
xor
mov
test
popa
and
mov
mov
pop
in
aas
test
mov
or
mov
outs
jne
mov
cmp
out
jb
inc
xor
jbe
inc
dec
xchg
add
div
dec
inc
aam
inc
ja
xchg
jno
adc
loope
pop
or
(bad)
mov
fsubr
pop
dec
aas
fmul
fcmove
dec
jp
jle
gs
xchg
sub
ds
or
mov
ror
jle
or
cld
pop
sbb
mov
rol
rcl
lods
mov
jge
sbb
lea
cld
pop
sbb
ror
(bad)
dec
int3
push
cmp
cwde
adc
loopne
in
jg
retf
hlt
fbld
pop
aas
jmp
pop
xchg
sti
mov
pop
shr
fsubr
mov
jns
das
fisubr
push
pop
imul
(bad)
ins
fmul
pop
sub
in
jle
cmp
hlt
dec
cs
or
fwait
aam
jnp
push
lods
mov
int
lods
sbb
jmp
popf
cmp
loopne
adc
mov
xchg
sub
(bad)
into
xlat
ret
dec
arpl
pop
push
inc
push
popa
loop
js
stc
cs
imul
sbb
(bad)
(bad)
jmp
in
call
outs
loop
push
and
xor
cs
retf
dec
sbb
fdiv
sub
stc
or
dec
psubq
jmp
adc
jmp
pop
(bad)
cmp
sub
pop
mov
std
pushf
stos
sbb
int
shl
lods
pop
imul
sbb
inc
scas
out
inc
jge
jp
jp
sub
stos
cmp
bound
pushf
ret
sbb
xchg
adc
or
mov
int
(bad)
mov
scas
fnstcw
outs
jg
dec
stc
dec
lahf
jmp
cmp
pop
pop
call
push
cli
aad
fisttp
pop
sbb
cmp
cmp
sub
scas
rcl
(bad)
jge
sub
imul
(bad)
fstp
dec
or
jge
arpl
call
adc
fcmovbe
push
outs
mov
mov
add
pop
call
lahf
repnz
add
jmp
sub
sbb
cmp
icebp
push
mov
aam
jno
mov
imul
lods
sbb
mov
int3
pop
lea
inc
jp
fisubr
jnp
pop
or
aam
sub
push
sbb
int3
dec
cmp
sbb
mov
int
loope
clc
dec
sbb
movs
(bad)
mov
into
lods
jge
jmp
imul
int3
cmp
ins
retf
add
mov
retf
add
push
cmp
jb
and
or
sbb
or
pop
or
ins
lea
xor
pop
dec
sahf
sahf
cmp
or
outs
in
sbb
pop
or
lods
mov
fisubr
(bad)
or
pop
jge
imul
cmp
sbb
cmp
int3
movs
ins
sbb
in
fstp
or
int3
xchg
inc
mov
cmp
fld
mov
hlt
loop
and
cld
(bad)
mov
in
pushf
push
cmp
inc
push
or
mov
int3
aam
shr
or
lahf
and
outs
mov
jmp
rcr
cld
mov
fdivr
sti
cli
cmp
sub
frstor
aam
mov
dec
retf
sub
push
mov
ins
mov
pushf
lea
in
push
push
mov
xor
neg
mov
(bad)
push
aas
lods
mul
and
sbb
lods
mov
pusha
mov
xchg
arpl
push
cmp
cld
scas
mov
fcomp
cmp
xor
sbb
cld
(bad)
mov
cmp
(bad)
cli
cmp
std
jmp
ret
push
jle
sub
cli
sub
cmp
outs
int3
pop
fwait
cmp
jnp
int
lods
(bad)
fs
dec
sbb
pushf
push
lods
mov
add
lea
aad
sub
inc
in
jge
pop
mov
cmp
ins
xchg
loop
xor
sub
push
mov
cdq
ret
inc
xchg
mov
mov
pop
jae
cmp
pop
fsubr
(bad)
mov
push
aas
xchg
push
fdivr
cld
or
lods
outs
movs
pop
or
cmp
mov
rcl
jge
loop
idiv
xor
sbb
int
fcmovne
fisubr
mov
cdq
cli
sti
cmp
scas
pop
ret
add
mov
not
or
in
into
mov
call
test
test
jne
push
pop
mov
push
mov
pop
and
fsubr
fidivr
mov
or
mov
popf
mov
sbb
pop
pop
int3
std
scas
add
sbb
sar
dec
lea
stos
test
test
into
test
cmp
mov
xchg
jge
repnz
call
xchg
mov
push
xchg
stos
in
fs
fwait
xor
data16
repnz
and
fld
mov
lods
out
stos
iret
popf
mov
movs
lea
sbb
in
(bad)
ds
nop
pop
or
or
hlt
mov
fld
stos
sti
or
cwde
ins
jl
ins
aam
lods
sbb
ret
jo
add
hlt
xlat
adc
int
or
aad
arpl
repnz
loope
pop
xchg
ins
(bad)
mov
or
fadd
push
inc
sahf
mul
inc
cmp
fdivrp
lahf
jg
fcomp
pop
popf
or
push
lods
sub
push
jl
jle
dec
jmp
pop
ins
mov
inc
jp
dec
sbb
addr16
lods
pop
pop
dec
int
xchg
and
rcl
pop
add
out
xor
pop
test
push
dec
push
mov
push
out
int3
ins
and
hlt
(bad)
ds
cmps
jb
mul
dec
iret
test
cs
fsubr
das
ins
mov
mov
dec
gs
sbb
xchg
dec
sbb
popf
pop
(bad)
stc
mov
push
ins
pop
fwait
jnp
dec
pop
test
sub
popf
imul
cld
cmp
inc
daa
push
mov
lods
movs
mov
nop
mov
ins
adc
mov
dec
cmp
push
out
scas
dec
in
mov
sub
fist
add
jb
adc
add
ret
cli
int3
scas
push
xor
sar
(bad)
xchg
dec
or
fidivr
outs
cs
(bad)
pushf
in
fcomp
ins
std
mov
aam
int
cld
arpl
in
dec
cld
enter
dec
jbe
shl
sub
xchg
push
mov
in
dec
mov
add
scas
mov
push
clc
cli
mov
jmp
add
retf
inc
push
mov
xchg
cld
push
pop
bound
retf
mov
lods
jnp
sbb
jecxz
aam
sub
pop
sbb
mov
std
mov
mov
sbb
mov
mov
ja
dec
leave
popf
ror
xor
jg
ins
dec
xor
jecxz
mov
fisttp
imul
pop
mov
push
fild
fisttp
hlt
fcos
jmp
mov
jmp
or
pop
jns
mov
mov
loope
push
mov
ins
movs
in
popf
test
lahf
stos
cmp
pop
popf
dec
sub
push
stc
pop
lea
add
dec
dec
mov
scas
pop
xchg
xchg
(bad)
(bad)
jae
idiv
call
cmp
and
iret
in
sbb
add
cmp
mov
or
xchg
(bad)
push
shl
stos
pop
cli
mov
lods
jnp
jae
push
adc
sti
ja
mov
arpl
push
jmp
dec
idiv
jle
push
mov
inc
mov
int
call
jae
fidivr
or
scas
sub
jp
inc
stc
mov
pop
mov
pop
and
add
add
fs
les
mov
pop
ds
pushf
or
loopne
int
cmps
loopne
outs
push
mov
push
or
fwait
and
mov
fild
sub
pop
jle
sub
loop
xor
mov
xor
add
pop
inc
push
and
lahf
xor
mov
mov
inc
ror
adc
dec
test
cmp
sbb
mov
fwait
sub
cmp
adc
jnp
popf
rol
or
jp
call
adc
mov
or
inc
loopne
in
dec
or
pop
xchg
adc
mov
dec
inc
das
mov
jb
aad
call
jno
cmp
jle
dec
cs
jo
mov
jl
lods
push
std
mov
lods
adc
add
sbb
out
xchg
cmp
call
lds
loope
xchg
arpl
xchg
dec
bnd
nop
and
arpl
inc
stos
mov
retf
movs
dec
cmps
push
adc
add
sti
xor
dec
xor
arpl
jne
aad
lods
outs
sahf
jle
stos
repnz
mov
ins
les
jmp
ror
mov
mov
ins
inc
lods
sub
ins
icebp
mov
stc
or
ins
clc
mov
xchg
dec
in
loop
dec
mov
jg
push
push
inc
hlt
aad
pop
in
ins
fs
pop
and
aas
fsubr
lods
sbb
mov
test
mov
fstp
fiadd
inc
cld
dec
xchg
push
retf
xchg
xor
xchg
movs
inc
aas
hlt
add
pop
or
or
xor
addr16
mov
xchg
xor
or
dec
push
or
ds
sub
or
test
jmp
push
xchg
xor
cmp
out
jbe
or
lods
mov
cwde
loopne
(bad)
pop
dec
or
add
retf
mov
pushf
pop
or
dec
pop
push
stos
lods
add
sub
inc
ins
jge
in
sti
in
mov
fwait
add
fxch
stc
ins
dec
sbb
cmp
or
popf
adc
dec
sar
lock
sbb
inc
cli
sub
mov
mov
gs
outs
mov
jp
leave
adc
in
mov
loopne
mov
retf
mov
sti
into
lods
mov
shr
sbb
aam
cs
fisttp
sahf
mov
shl
dec
pop
and
lea
imul
xor
popf
and
(bad)
fild
pop
adc
sub
jmp
lea
cmp
push
mov
lahf
(bad)
mov
leave
stc
pusha
add
xchg
pushf
fwait
repnz
ret
sub
jb
mov
repz
hlt
cmps
and
sar
cwde
loop
fadd
stos
sbb
dec
fcom
int
or
sbb
cmp
out
mov
imul
retf
sbb
dec
or
push
mov
pop
cmp
std
jnp
or
push
frstor
(bad)
jmp
pop
lahf
sar
(bad)
push
test
mov
imul
adc
or
fmulp
jl
pop
retf
sbb
mov
fs
and
and
int3
sub
std
xlat
mov
sub
test
sahf
shr
loope
dec
shl
test
into
cdq
outs
in
jmp
(bad)
ins
cli
pop
fwait
ins
mov
aam
fisubr
mov
push
int3
pop
rol
xlat
imul
in
rcr
sub
fld
jmp
inc
or
mov
scas
sbb
pop
pop
lods
ins
lods
lds
out
xchg
bound
call
(bad)
jl
scas
cmp
xor
xchg
daa
(bad)
jl
cld
xor
jo
dec
stos
mov
or
cmp
fsubr
jge
scas
outs
(bad)
aas
or
jl
mov
mov
fmul
fwait
ds
mov
mov
dec
dec
sbb
fucomp
retf
jge
inc
sbb
pop
jecxz
cmp
addr16
js
fs
xchg
pop
mov
pop
lds
fst
sub
movs
mov
or
ins
cmp
add
std
cmp
fdivr
xchg
popf
cwde
or
sar
pop
stos
dec
jg
int3
sbb
mov
jp
pop
or
fld
dec
sti
jle
out
mov
jnp
pop
int3
cmp
ins
in
mov
cmp
sahf
sahf
int
sub
lods
sub
rcr
dec
lods
mov
cmp
ror
arpl
hlt
jg
cli
push
or
add
push
lahf
imul
cli
xchg
push
sub
adc
int3
ins
adc
jns
jnp
mov
test
add
xor
adc
cmp
dec
aam
or
in
pop
or
int
mov
sbb
cli
fwait
scas
ins
retf
jmp
sub
mov
jnp
(bad)
adc
inc
(bad)
ins
xchg
loopne
mov
pop
jmp
fstp
sbb
arpl
xlat
mov
push
mov
dec
xor
sub
dec
jmp
add
stos
sbb
retf
pop
pushf
mov
cwde
ret
adc
mov
out
fild
(bad)
pop
ror
dec
jle
fisubr
cld
clc
int3
lock
fmul
fisttp
fisttp
sbb
(bad)
jnp
push
or
jmp
outs
fisubr
int3
shr
adc
jb
push
pop
(bad)
call
pushf
mov
adc
test
leave
jmp
aad
ret
pop
out
arpl
xor
sbb
call
arpl
loope
mov
sti
into
push
mov
jl
stos
fdivr
scas
dec
pop
sti
sub
or
jl
mov
scas
pushf
retf
push
mov
pop
cmp
push
dec
test
ds
and
out
lods
mov
and
fisub
pop
jl
sbb
pop
jecxz
pop
jnp
sbb
inc
aas
jnp
dec
sub
sbb
movs
mov
cmp
dec
mov
pushf
sbb
inc
unpckhps
ins
in
dec
iret
cmp
mov
mov
inc
ficom
sub
fistp
pop
ins
fidivr
jmp
push
cmp
jle
mov
int
jnp
outs
sub
ins
ds
test
cld
or
retf
adc
pop
cmp
mov
popf
xchg
jge
int3
sbb
ins
in
mov
dec
xor
or
cmp
enter
imul
stos
nop
add
cmp
add
lds
mov
cmp
push
icebp
xchg
jne
hlt
jmp
push
(bad)
sbb
lahf
into
fucomi
stc
sub
cld
(bad)
pop
jmp
jp
ds
in
or
or
sub
std
dec
mov
jge
sub
push
push
pushf
imul
push
dec
sti
(bad)
dec
std
cmps
inc
out
xchg
mov
sti
jne
or
arpl
mov
sub
test
ins
icebp
lods
out
ret
sub
pop
arpl
jne
mov
xchg
repnz
sahf
lock
jbe
mov
fstp
xor
test
in
call
fisubr
jmp
dec
fcomp
fwait
dec
ds
jge
push
addr16
jge
jnp
ins
std
pop
lds
mov
pop
mov
iret
dec
or
push
(bad)
loop
sbb
ret
pushf
inc
lock
mov
xchg
sbb
and
dec
lahf
inc
test
pop
scas
test
in
mov
bnd
fdivr
bsf
cmp
pushf
mov
fs
jl
dec
sahf
pop
stos
fcmovu
popf
outs
int
sti
sub
push
call
cmp
push
out
push
(bad)
push
enter
jne
loope
pop
int3
add
icebp
lea
stos
sub
icebp
mov
repnz
ins
cwde
mov
add
sbb
pushf
xlat
xor
cmp
mov
or
add
out
mov
cmp
pusha
and
jle
mov
(bad)
cld
cli
fdivr
jnp
pop
into
cld
pop
pop
call
push
fmul
sbb
mov
das
jmp
sub
and
jmp
nop
sub
adc
iret
add
dec
sti
cld
pushf
cmp
addr16
add
mov
ret
loop
lods
mov
or
test
jmp
stc
add
jmp
in
mov
imul
out
mov
adc
fidivr
sbb
sub
lea
cmp
in
sahf
push
cld
fstsw
call
movs
fcomp
int
int
(bad)
stos
mov
retf
loop
inc
fst
pop
sub
mov
neg
(bad)
cmp
dec
mov
push
lds
icebp
fsubr
cld
sub
inc
or
enter
cmp
imul
inc
daa
sub
cdq
aas
fdiv
jg
sbb
ins
cs
pop
pusha
push
aad
dec
lods
jle
push
push
gs
imul
std
push
mov
std
fstp
or
ror
cmp
sub
sbb
mov
lahf
fistp
leave
and
enter
mov
mov
(bad)
in
stc
push
jecxz
sub
mov
cmp
xchg
imul
aam
cli
jmp
adc
in
mov
ror
or
fmul
std
lea
pop
mov
pop
sub
xlat
pop
push
jmp
or
jl
cmp
mov
or
jmp
mov
pop
imul
xchg
cmp
xchg
pusha
xchg
add
out
(bad)
pusha
js
mov
or
cmp
push
jnp
pop
cs
fdivrp
retf
sub
stos
cmp
cmp
popf
ds
dec
jl
(bad)
fnstenv
ror
fistp
lods
mov
jmp
movs
ret
pop
sti
or
cli
pop
inc
inc
pop
call
push
jmp
inc
test
inc
cmp
test
cmp
inc
xchg
jae
cdq
cmp
addr16
ja
inc
(bad)
pop
sub
inc
imul
(bad)
lea
pusha
fbstp
in
push
jge
push
data16
fwait
sti
lods
sbb
xor
(bad)
mov
lock
bound
xor
push
jb
dec
add
clc
jmp
idiv
ror
push
or
cwde
sti
xchg
iret
or
inc
out
inc
cmp
cmp
dec
ret
in
cmp
mov
lods
ret
rcr
push
stos
fwait
cmp
push
inc
ins
jge
or
sub
loop
mov
mov
aad
daa
lods
shl
jbe
jge
mov
bnd
mov
inc
jmp
fmulp
in
std
sub
lock
inc
mov
xchg
(bad)
fbstp
sbb
stos
stc
sub
dec
dec
adc
fwait
pushf
fwait
pop
cs
jmp
push
lahf
ins
dec
inc
aaa
xchg
fs
lahf
add
jl
mov
ja
in
xlat
aad
xor
ja
call
and
cmps
scas
test
hlt
pop
in
pop
xchg
or
stos
gs
stos
in
pushf
scas
sti
jnp
sub
push
dec
popf
or
ins
and
pop
add
pushf
sub
add
xor
inc
pop
gs
lods
sub
inc
fsubr
nop
popf
xor
cmp
fdivr
div
inc
cmp
cvtps2pi
stos
xor
push
call
retf
sub
mov
mov
mov
cmp
lods
hlt
mov
(bad)
lods
mov
in
adc
adc
out
and
cmps
mov
dec
push
dec
sub
xchg
adc
jl
loop
arpl
mov
jecxz
ret
int3
pop
adc
cmps
stos
nop
or
int
sbb
pop
pop
pop
sub
int3
sub
mov
cli
(bad)
push
cs
dec
fld
std
jb
sti
jl
mov
jnp
imul
mov
ins
repnz
shr
stc
cs
jne
outs
cmp
aam
mov
sbb
jbe
ds
sti
pop
idiv
test
pop
pop
mov
xchg
or
cs
xor
imul
or
retf
lods
(bad)
sub
mov
daa
mov
std
movs
jb
ds
test
inc
ins
jg
mov
jg
adc
add
add
mov
jge
fucom
mov
mov
jle
pop
shl
cld
ret
test
sbb
xlat
addr16
pop
mov
dec
jb
ror
dec
and
fldcw
push
int
jne
cmps
push
bound
sub
jo
mov
cs
idiv
jl
jno
neg
cwde
jmp
or
icebp
lds
fbstp
(bad)
(bad)
fisttp
jmp
loopne
loopne
jno
shl
fxch
enter
sub
or
adc
push
jo
lahf
sub
(bad)
cmps
popa
mov
loopne
or
jge
xor
push
dec
pushf
ror
call
out
xor
lea
nop
or
out
dec
cmp
das
jl
cmp
jl
call
cld
outs
xchg
mov
cmc
pop
sti
and
ins
sub
mov
push
pop
cmovl
mov
and
mov
or
xchg
mov
sub
xor
jnp
or
(bad)
popf
jae
mov
pop
mov
sbb
dec
addr16
nop
mov
(bad)
xor
ins
fld
in
mov
cmps
in
dec
mov
adc
fadd
das
mov
xor
pop
sub
pop
pop
test
dec
outs
add
ins
in
in
or
or
(bad)
jle
pop
fisttp
pushf
lock
fnstsw
and
push
sbb
xchg
shr
cld
in
mov
int3
mov
mov
mov
(bad)
fistp
ins
add
out
lea
mov
popf
mov
and
cmp
cld
pop
sub
fsub
push
call
retf
xchg
test
inc
mov
fmul
pop
dec
mov
pushf
pusha
imul
sub
movaps
or
cmps
xchg
or
xor
sbb
in
mov
dec
and
push
xor
add
icebp
stos
dec
xchg
fucomi
das
xor
push
push
out
push
fnstcw
push
repz
or
sbb
call
jae
sub
cmc
pop
xchg
aas
sub
xor
fwait
in
loope
pop
lahf
mov
jle
and
and
sub
pop
aaa
mov
jl
cld
cli
cmp
clc
mov
and
mov
loope
mov
popf
add
icebp
ret
cmps
inc
in
xor
mov
inc
jge
arpl
adc
adc
add
xor
call
popa
xor
push
or
outs
lahf
pop
sbb
jecxz
ret
pop
imul
sub
stc
and
cld
cmp
lock
in
and
retf
ds
aaa
cmp
push
ins
je
jnp
sti
pop
stos
dec
mov
(bad)
test
(bad)
push
pusha
xchg
stc
js
jp
jbe
retf
cmp
pushf
ror
daa
mov
test
dec
sbb
out
adc
jp
adc
jle
cmp
ficomp
adc
pop
ja
inc
pop
cmp
mov
sti
or
and
retf
and
mov
pop
(bad)
sbb
outs
outs
fstp
xchg
mov
jns
ds
cmp
pop
dec
sub
jle
pop
cmp
mov
pop
in
add
mov
dec
(bad)
xchg
pop
mov
ficomp
or
lahf
retf
inc
pop
cmp
xor
neg
jnp
jle
mov
or
(bad)
jno
cwde
ficomp
mov
ds
push
sub
pop
in
cmps
loope
xchg
fstp
inc
fistp
out
mov
inc
jl
ds
pop
aas
(bad)
pop
popf
pop
pop
mov
in
ror
or
mov
jecxz
mov
push
pusha
pop
in
daa
pop
dec
sbb
mov
mov
sub
jmp
stos
scas
pop
retf
dec
xlat
mov
jnp
jge
rol
stc
jmp
inc
sub
mov
enter
jle
clc
cmp
sub
outs
mov
shl
(bad)
shl
ret
pop
dec
cmp
mov
push
xor
and
test
xchg
mov
jnp
pusha
(bad)
cs
jle
jno
test
rcr
mov
sub
jle
mov
add
stos
scas
jmp
ins
mov
jnp
jnp
stc
ret
(bad)
sti
cwde
and
outs
ss
and
int3
or
(bad)
mov
push
das
movs
and
or
push
push
cmp
pusha
jmp
jo
xor
cmp
scas
mov
mov
outs
xchg
cmp
inc
scas
cmp
in
or
outs
les
retf
xchg
fs
imul
in
data16
ins
mov
pop
pop
lea
out
jecxz
lods
int3
(bad)
adc
ins
clc
aaa
retf
adc
jmp
scas
sbb
dec
or
sahf
into
ins
ins
cmp
sahf
sbb
fadd
push
mov
sub
repz
clc
repz
mov
cwde
xlat
lahf
sbb
sbb
dec
sti
dec
cs
xchg
repnz
dec
cmp
dec
clc
pop
fild
push
aas
arpl
jge
call
mov
or
repnz
retf
adc
dec
pop
sbb
pop
clc
sbb
hlt
call
jmp
jle
(bad)
fidivr
cdq
retf
jmp
ds
aas
sti
fisub
jmp
pop
fisttp
pop
jnp
dec
fnstenv
dec
adc
adc
xchg
loopne
loope
jne
or
aaa
push
iret
fist
inc
push
clc
mov
mov
pop
ss
mov
data16
neg
pop
pop
sub
dec
sbb
mov
call
mov
ja
test
jnp
mov
mov
je
inc
pop
and
sbb
jmp
mov
inc
xor
mov
mov
xchg
mov
dec
mov
xor
outs
(bad)
push
popa
fadd
add
pop
xchg
inc
adc
in
mov
mov
push
sub
cmps
and
mov
std
sahf
ror
xchg
rcl
and
sbb
mov
retf
(bad)
je
stos
stos
lds
and
pop
mov
mov
clc
push
jne
jmp
jl
pop
xchg
jge
jnp
repz
aad
inc
mov
fs
inc
mov
(bad)
xor
enter
mov
push
into
and
into
ss
sahf
nop
sbb
das
xor
call
adc
imul
lock
inc
jno
lahf
sbb
xchg
lds
xor
sbb
mov
jl
into
pop
pop
pop
or
pop
jae
xchg
cmp
clc
pop
push
sub
adc
mov
push
mul
je
movs
fcomp
mov
and
pop
retf
mov
fld
dec
mov
call
push
mov
or
or
movs
out
push
mov
push
sbb
lds
sub
hlt
sar
dec
jge
jae
or
jb
popf
and
pop
mov
sti
xor
(bad)
cmc
jl
test
stos
ss
or
mov
sub
xlat
xlat
xchg
mov
jg
cli
clc
jne
push
cmp
jno
xor
xor
shr
mov
fimul
push
dec
pop
mov
dec
jle
pop
es
cdq
mov
inc
xchg
add
jae
fild
clc
xor
imul
addr16
(bad)
mov
dec
mov
cmp
data16
mov
pandn
sti
xchg
pop
xlat
xchg
je
or
add
imul
sbb
enter
sbb
in
dec
sub
inc
jb
push
mov
mov
cmps
cmp
cmp
push
je
retf
enter
retf
test
xchg
loop
xor
stos
xchg
add
adc
lea
push
sub
or
xchg
xchg
xlat
dec
sub
mov
push
repz
jns
sbb
sahf
std
pop
xlat
sbb
jg
mov
pop
dec
pop
mov
pop
push
xor
(bad)
cmp
sbb
xchg
inc
add
cmp
add
sahf
pop
pop
xchg
and
jns
push
sbb
pop
inc
mov
repnz
dec
ins
fcomp
mov
push
imul
mov
and
stos
or
popa
xor
scas
pop
xchg
nop
pop
inc
outs
push
sub
hlt
mov
neg
sahf
iret
retf
outs
mov
mov
add
pop
sub
dec
cmp
in
call
add
jnp
and
xor
aaa
into
sbb
rcl
cmc
jns
add
cmp
(bad)
cdq
hlt
stos
cdq
fist
cld
das
pop
ror
push
sbb
loope
test
(bad)
and
gs
mov
fcmove
jnp
inc
aas
push
clc
mov
xor
xchg
mov
inc
into
in
inc
js
sub
cmp
mov
js
imul
mov
call
outs
lods
jbe
jle
and
or
sbb
sti
sub
sbb
jge
inc
loopne
das
cmp
jb
xchg
daa
pop
mov
cmp
pop
inc
pop
fcomip
aaa
fwait
test
xchg
xor
mov
pop
(bad)
or
ss
loope
fs
sti
add
dec
mov
mov
cld
clc
out
jp
fptan
cmps
dec
pop
or
cld
jge
dec
jnp
mov
dec
rol
stos
mov
movs
cmp
xor
push
dec
mov
mov
scas
xor
push
sar
fistp
repz
dec
mov
and
aaa
xchg
retf
adc
daa
push
cmp
add
mov
inc
push
mov
into
scas
add
mov
pop
jo
mov
xchg
xor
add
shr
sbb
aaa
ins
inc
imul
mov
pop
jb
les
cli
aaa
dec
push
pop
pop
add
ds
sbb
jno
xchg
xor
stc
add
clc
mov
repnz
push
or
scas
jb
aas
mov
cs
dec
dec
ds
pop
mov
in
aas
adc
add
xchg
pop
ja
xchg
mov
mov
add
sub
mov
cwde
xor
pop
retf
mov
or
(bad)
sub
ret
sub
daa
push
jns
or
enter
dec
inc
inc
loopne
fdivr
mov
cdq
js
iret
cmp
lds
test
pop
sbb
or
loop
or
sub
cmp
mov
sbb
xchg
sbb
jb
push
jp
cmp
adc
push
xor
aad
movs
clc
xchg
add
add
ins
pop
imul
adc
xchg
dec
jbe
aaa
xchg
sar
inc
scas
fwait
mov
adc
ins
cmp
aaa
mov
cmc
mov
push
les
sub
jnp
mov
adc
je
jmp
mov
fidiv
mov
sub
jnp
jnp
dec
ret
sti
sub
push
popf
jno
jp
lods
repz
sbb
pop
js
outs
cmp
ins
repz
pop
pusha
jg
fmul
xchg
jp
cmp
jbe
mov
lds
xor
push
out
cmp
pop
inc
stos
mov
dec
xor
pop
xor
xchg
push
leave
shl
mov
aad
inc
into
mov
daa
fbstp
xor
fwait
xchg
xchg
jbe
inc
je
iret
dec
inc
out
std
test
jae
mov
jne
jmp
dec
mov
xchg
data16
mov
push
mov
jo
push
cmps
cmps
jl
fucomip
rcr
xchg
dec
sbb
add
dec
mov
mov
jmp
or
stc
xor
ss
push
ins
bound
dec
xor
mov
inc
xchg
test
jp
mov
jmp
cmps
cmc
mov
mov
and
pop
mov
retf
and
fucomip
or
add
pop
mov
pop
mov
ins
mov
repnz
dec
inc
jge
test
jns
repz
mov
and
out
sub
scas
test
cli
pop
pop
xor
cmp
das
xchg
xor
fistp
inc
ret
add
call
pop
(bad)
xchg
mov
sbb
jle
dec
fnstenv
sbb
ja
push
xor
xchg
cdq
jmp
pop
pushf
jmp
aas
cmp
loop
test
sbb
mov
add
sbb
mov
mov
dec
sahf
mov
ja
retf
shl
jle
test
call
fwait
cmps
inc
xchg
xchg
fs
pop
or
daa
sub
iret
xchg
sahf
mov
sub
jp
pop
loope
ret
lock
jecxz
sbb
xchg
out
imul
rcr
ret
mov
sbb
aas
inc
push
fild
xchg
dec
sub
imul
pushf
cmps
inc
fs
sti
xor
ret
dec
mov
adc
into
push
xor
in
inc
push
pop
stos
mov
xor
ja
mov
cmp
clc
stos
hlt
mov
lds
pop
sahf
fucomi
rol
(bad)
jp
pop
inc
call
add
lea
mov
jno
mov
fistp
mov
js
arpl
push
sub
sub
ss
mov
bound
xor
xor
xchg
stos
fbld
loop
call
cmp
clc
pop
push
dec
or
scas
ss
jbe
dec
pop
sti
sbb
out
mov
pushw
cmp
inc
ret
int3
mov
xchg
mov
adc
shl
dec
mov
outs
mov
aas
push
and
dec
test
cmp
mov
jae
push
enter
popf
sub
rol
popf
mov
or
fistp
adc
dec
loopne
retf
js
cmp
in
mov
fimul
add
sahf
fsubr
pop
ds
aas
inc
dec
mov
adc
jae
xchg
(bad)
jle
add
push
or
ss
xlat
pminub
addr16
mov
sbb
(bad)
mov
icebp
adc
add
mov
icebp
lea
imul
xor
jl
jmp
mov
das
sbb
cwde
push
sbb
fucomi
ja
(bad)
pushf
jne
pop
ficomp
dec
test
mov
xchg
mov
les
lods
adc
shl
cmp
imul
cld
int3
jmp
loopne
imul
cmp
jmp
sub
hlt
mov
stos
lahf
sar
pop
fwait
jmp
pop
cmp
push
push
stc
dec
in
mov
cmp
sbb
cmps
mov
lds
mov
dec
iret
jns
(bad)
fsubr
popa
mov
or
ins
sti
fcomp
(bad)
cmp
push
repnz
in
repnz
sbb
pop
pusha
sub
lock
mul
(bad)
jmp
in
call
cmp
inc
pop
sub
mov
pop
(bad)
jmp
scas
aam
out
test
sub
pop
cdq
loopne
scas
add
mov
jge
mov
mov
(bad)
fsubr
inc
inc
aad
xlat
jge
ins
fdivr
push
out
mov
scas
jg
xchg
and
push
xlat
repz
cli
cli
scas
(bad)
rcl
fldcw
dec
popa
call
jns
adc
pop
pop
mov
imul
js
add
jmp
idiv
out
sbb
or
adc
ins
xchg
or
idiv
mov
or
test
fmul
loop
fdivr
lods
lea
sbb
pushf
call
aas
or
push
(bad)
icebp
pop
jg
sbb
hlt
inc
into
arpl
xlat
dec
dec
inc
data16
dec
and
or
push
or
iret
jmp
fcomp
xchg
push
lea
fdivr
jg
test
sbb
stos
inc
sbb
clc
fdiv
movs
sbb
cs
fnsave
fmul
sub
dec
fimul
jmp
inc
popa
add
out
jb
adc
pusha
out
aaa
inc
stc
sub
retf
(bad)
fsubr
call
ret
sti
(bad)
jp
(bad)
fisubr
pushf
fmul
add
lock
fwait
outs
pop
fmul
jbe
repz
cmp
mov
vpaddusb
and
fdiv
push
(bad)
cmp
add
ret
scas
call
add
into
inc
sbb
adc
retf
dec
icebp
stc
imul
or
push
pop
outs
fdiv
jbe
ds
sub
sub
jo
push
cmp
mov
jl
test
ret
fcmovne
fmul
ja
sub
ins
sub
or
inc
dec
lahf
fmul
mov
sub
test
inc
out
stos
jge
shl
jmp
test
dec
mov
mov
scas
push
and
inc
pop
jl
xor
sbb
inc
movs
bnd
xchg
imul
sbb
jmp
mov
xchg
clc
jo
mov
call
mov
retf
in
cld
fdivr
pop
add
jmp
gs
mov
out
xlat
retf
fadd
or
mov
or
movs
aam
and
ja
std
adc
push
jb
jmp
repnz
add
(bad)
or
fs
stc
rcr
ror
sbb
popa
ds
fnstsw
inc
sub
ins
into
call
call
aas
aam
addr16
cmp
dec
cmp
shl
jno
pop
push
push
sub
push
sub
dec
sar
adc
fsub
pop
mov
sbb
sbb
cmps
stos
fsubr
fcom
test
xlat
push
sti
jge
enter
fiadd
cmps
sbb
add
(bad)
jae
lea
xchg
hlt
fsubr
sti
sub
ror
add
pop
fistp
sahf
retf
mov
call
mov
inc
jmp
pop
ror
das
or
cmp
rcl
push
aad
int3
cs
mov
fcmovbe
cwde
dec
xchg
push
sbb
mov
(bad)
stos
jl
fmul
inc
fstp
dec
sub
nop
or
and
int3
xchg
inc
mov
sbb
mov
inc
mov
outs
sbb
shr
lea
and
fstp
fstp
or
lods
loopne
xchg
shr
sbb
fdivr
and
lock
pop
test
cmp
(bad)
push
repz
mov
add
out
sbb
fadd
retf
test
div
mov
mov
rcr
sti
adc
jg
push
in
add
xor
adc
test
pop
jo
add
jbe
cmp
into
add
add
and
mov
and
rol
or
xor
pop
shr
retf
fsubr
sbb
pop
add
iret
lds
mov
xor
push
shl
inc
push
pusha
jmp
out
mov
test
xor
aam
xor
sbb
popf
push
fmul
outs
test
mov
repz
mov
lahf
leave
in
inc
fadd
and
fstp
retf
(bad)
shl
outs
fmul
cmp
sub
pop
fsubr
sub
int
psubw
push
leave
ret
mov
aas
and
mov
push
pushf
mov
ins
mov
dec
outs
jns
and
test
jmp
xor
sbb
cmp
iret
mov
sub
and
jo
inc
cmp
cmp
sbb
repnz
pop
ret
es
cs
jmp
aas
lods
stc
jge
and
jae
mov
mov
stc
scas
aam
pushf
dec
sbb
push
call
add
ss
fs
jnp
in
retf
fsubr
or
add
xchg
rcr
mov
sbb
xor
sbb
or
imul
scas
movs
add
in
leave
fdiv
jb
cwde
fdiv
icebp
sub
dec
in
stos
aam
sub
shl
or
sub
mov
mov
std
(bad)
ficom
cld
mov
dec
cmp
lahf
scas
mov
jle
sbb
xor
fdiv
mov
stos
fisttp
fmul
adc
fwait
sbb
sti
in
fcomp
je
cmp
inc
imul
push
adc
or
push
lahf
jle
fcomp
xlat
add
data16
jmp
fcomp
sub
retf
call
sub
test
lods
pop
inc
aaa
lahf
ins
sub
pop
in
clc
jmp
fdivr
mov
jnp
jne
(bad)
mov
in
jmp
dec
pop
jge
fsubr
test
jbe
jmp
mov
pop
out
test
ror
push
dec
outs
lods
fld
call
into
dec
jb
clc
(bad)
pushf
sbb
cmp
ins
mov
imul
dec
mov
neg
push
dec
pushf
xor
lods
in
and
mov
pop
pop
fwait
shr
fldcw
jmp
fsubrp
lahf
retf
or
mov
and
out
outs
stos
pop
sub
lods
sbb
aam
jg
mov
sub
ins
mov
sbb
fadd
cs
ja
xchg
mov
fisttp
add
pop
push
sub
dec
pop
sbb
mov
cmp
push
lods
cmp
cmp
push
inc
mov
pop
cli
pop
cs
cmp
mov
loope
shr
mov
or
or
mov
lods
mov
scas
out
int3
pop
out
sub
pop
imul
jge
pop
test
pop
sub
cmp
stc
das
or
dec
sub
sbb
xchg
out
enter
fwait
lea
fstp
(bad)
mul
fldenv
fsubr
mov
out
inc
into
ss
mov
aas
push
std
push
mov
push
fwait
push
fild
jnp
pop
mov
jle
push
sub
nop
mov
jge
fistp
sti
pop
shl
imul
(bad)
hlt
out
jo
daa
fsubr
(bad)
in
mov
test
sti
scas
mov
mov
js
test
fsubr
outs
cwde
dec
jle
adc
mov
pop
add
(bad)
mov
pop
xlat
mov
jmp
sbb
sbb
data16
outs
mov
icebp
sbb
xor
fmul
or
mov
fsubr
inc
push
pop
jge
jle
icebp
out
leave
out
dec
fmul
mov
mov
jns
fwait
mov
mov
and
shl
or
pop
jnp
mov
mov
sbb
daa
fisttp
xor
fadd
or
bnd
push
(bad)
imul
sti
stos
add
inc
or
dec
lods
mov
push
ins
jmp
adc
dec
lods
xor
jmp
stos
ror
stos
clc
fsubr
sub
push
jge
jp
ror
fdivr
pop
std
retf
jnp
or
fsubr
(bad)
sti
imul
lahf
sbb
std
or
ins
outs
push
mov
xchg
jmp
imul
or
mov
cmp
ins
(bad)
scas
push
int3
cli
outs
jp
jnp
(bad)
loope
popf
add
jge
mov
fdivr
scas
mov
jne
loopne
mov
pop
jnp
sti
cmp
jns
scas
aas
jno
in
outs
fsubr
mov
adc
jg
sbb
xchg
cmp
in
jge
ror
sub
shl
xor
leave
mov
jmp
ins
or
sbb
rcr
in
loopne
aam
fyl2x
out
jnp
popf
mov
sti
or
pop
cmc
lods
pop
pop
popf
pop
popf
ins
cmp
push
jmp
sbb
dec
sub
cdq
and
fdiv
jl
sub
xlat
ins
ficomp
dec
pop
fcmovne
jmp
xlat
pop
inc
pop
fwait
aam
(bad)
sub
or
cmps
or
sbb
lods
dec
(bad)
jns
mov
lea
mov
(bad)
cmp
jmp
iret
sbb
rcr
loopne
jnp
sbb
mov
push
pop
sti
stos
ins
retf
fld
retf
jge
shl
cmp
in
int3
jmp
ds
sub
fdivr
dec
jle
(bad)
jmp
lahf
call
cwde
int3
ins
push
sub
das
push
clc
mov
mov
test
std
imul
pop
repz
retf
mov
into
jmp
fistp
call
das
mov
pop
cmp
xchg
ins
(bad)
jmp
or
addr16
cmp
or
cld
popf
call
test
int3
stos
add
imul
cld
mov
mov
mov
pop
fwait
jmp
ins
mov
sub
sub
jmp
(bad)
push
popf
in
push
cmp
clc
stos
and
fwait
xchg
dec
fwait
jp
aas
lods
retf
mov
jmp
fwait
sub
sbb
(bad)
pop
(bad)
(bad)
mov
pop
jl
call
cmp
(bad)
popf
clc
mov
movs
cli
hlt
les
fwait
sti
jl
popf
lods
sub
stos
call
iret
test
pop
fld
xor
scas
or
pop
xor
mov
push
sti
test
aam
test
mov
sbb
cmovp
push
lods
ins
aam
mov
pop
gs
pop
dec
dec
pop
pop
test
jg
in
or
mov
ins
add
outs
inc
fidivr
outs
sub
gs
or
imul
sti
(bad)
sbb
jge
mov
dec
shl
sar
sub
dec
(bad)
int3
push
dec
int
jg
fsub
jle
jmp
jne
int
xor
rcl
sbb
int3
ins
jo
mov
jmp
ds
dec
loop
stos
imul
test
dec
into
lods
int3
sti
jge
and
lea
leave
fdivr
jge
cdq
sbb
in
stos
lock
ins
cli
push
pop
cmp
mov
pop
lds
mov
ins
mov
pushf
jmp
pop
mov
rcr
jp
jmp
data16
repz
fmulp
ds
shl
mov
int
bndstx
pop
loope
sub
jmp
or
mov
add
int3
in
mov
repz
and
ins
adc
outs
mov
dec
popf
stc
fisub
das
pop
out
(bad)
in
mov
popf
jmp
ins
pop
mov
push
(bad)
pop
into
out
push
jmp
sub
jle
fmul
jnp
or
cmp
cs
pushf
(bad)
cmps
jg
fmul
mov
and
pop
call
pop
xchg
outs
push
das
ins
jp
fimul
leave
es
loopne
int3
std
dec
lods
pop
or
sbb
ret
fwait
mov
mov
sbb
or
ficomp
(bad)
mov
fidivr
outs
cmp
inc
rcr
sbb
in
sbb
mov
test
gs
dec
push
cmp
sbb
lea
jns
sub
sti
into
mov
mov
mov
push
in
mov
fucom
rcl
cdq
fdivr
out
sbb
pushf
std
lods
pop
mov
lods
stos
push
lea
push
fcomp
(bad)
ins
and
dec
mov
jl
add
fstp
retf
sub
push
dec
cmp
sub
and
ins
aam
int
pop
ins
sbb
jl
cmp
pop
push
push
sbb
sahf
mov
sub
scas
aad
sbb
sti
mov
pop
jle
mov
push
rcr
cmp
fnstsw
push
popf
scas
sbb
sbb
or
pushf
popf
jl
jge
retf
pop
int
fcom
and
sub
dec
mov
dec
pop
scas
mov
ds
pushf
inc
stos
add
ror
pop
fnstenv
sahf
mov
jge
jmp
sbb
xchg
fist
cmp
movs
mov
xor
into
mov
sbb
push
mov
or
mov
pop
adc
call
mov
xchg
outs
or
sar
lods
add
xor
push
push
daa
dec
sar
mov
int
shl
aam
dec
pop
jge
pop
jg
scas
sti
in
stos
jg
call
sbb
cdq
enter
aam
or
dec
push
dec
jge
jg
sub
pop
repz
in
popf
pop
push
jne
sub
clc
pop
mov
int3
adc
outs
mov
add
popa
fist
shl
fdivr
movs
cld
gs
sub
imul
xor
mov
jmp
or
inc
or
mov
lods
pushf
adc
dec
or
adc
sub
cmp
into
into
adc
sbb
leave
push
pop
pop
(bad)
mov
(bad)
in
inc
jge
mov
xlat
clc
mov
pop
sbb
mov
sbb
aad
jo
cmp
fmul
lahf
pop
xor
adc
xor
dec
int3
ins
dec
cmp
call
pop
out
and
cmp
pop
and
mov
lea
push
push
jno
push
add
mov
adc
les
pop
push
xor
movs
xor
xor
loopne
shr
mov
fs
xchg
jno
xor
mov
pop
or
hlt
jmp
xchg
cmp
pop
in
cmp
imul
in
xchg
mov
into
in
nop
mov
dec
leave
ins
shl
dec
lds
push
or
mov
sbb
lea
shl
or
push
xlat
je
(bad)
shr
jne
jb
push
or
cs
dec
cmp
sar
adc
mov
sub
ins
pop
shl
mov
leave
and
(bad)
out
arpl
loope
jge
imul
ds
arpl
shl
jns
icebp
(bad)
xchg
or
jle
sub
popf
xchg
fisttp
(bad)
pushf
pop
int3
mov
jae
sub
add
jmp
pop
std
adc
js
jnp
fidivr
mov
xchg
(bad)
fcmovnu
adc
pop
xchg
pushf
or
jle
nop
scas
jnp
(bad)
xchg
pop
mov
fild
pop
leave
dec
imul
(bad)
(bad)
fst
and
sbb
fs
xchg
adc
or
hlt
jl
dec
std
push
aaa
fstp
pop
sbb
pop
mov
fdivr
pop
in
imul
inc
ins
dec
test
adc
std
imul
call
ins
test
ins
cmp
jns
fwait
xor
mov
lods
dec
cmp
push
push
dec
clc
stc
fidivr
push
fld
aaa
mov
arpl
jnp
mov
and
sbb
pushf
rcl
aam
pop
push
shr
sti
(bad)
sub
clc
imul
jmp
dec
pop
or
pop
cmp
clc
rcr
pushf
icebp
xor
jle
std
jbe
fisttp
inc
jo
(bad)
mov
xchg
add
or
cdq
inc
push
jne
loope
sbb
cmp
mov
rcr
sbb
xlat
ja
sbb
jae
push
mov
call
mov
mov
sbb
xchg
test
out
addr16
inc
or
push
call
xchg
mov
sub
add
dec
mov
inc
pop
push
mov
es
push
adc
cdq
xor
xchg
das
fidiv
mov
or
xor
pop
inc
jnp
push
adc
adc
sbb
sti
adc
das
not
aas
repz
inc
cmps
pop
sbb
cs
out
mov
sbb
xor
nop
pop
nop
jbe
pop
xchg
jns
lods
sub
fldcw
jecxz
add
sar
aaa
ds
shl
inc
(bad)
popf
hlt
jbe
ficomp
mov
push
mov
fistp
dec
cld
pop
cmp
jp
jae
mov
out
jbe
pop
int
push
pop
sub
in
rcr
mov
push
outs
outs
inc
or
xchg
std
mov
pop
adc
sbb
add
sahf
and
(bad)
rcr
add
ins
cmc
pusha
scas
mov
sbb
pop
push
push
les
xor
sub
sbb
mov
dec
out
adc
cmp
leave
add
jecxz
xor
push
fild
xchg
inc
or
ins
ins
fwait
int3
fisttp
fcom
das
call
cmp
pop
loopne
add
push
inc
pop
jp
jl
shl
inc
cmp
loop
sbb
(bad)
adc
xor
add
popf
mov
mov
cmps
dec
fwait
lods
xlat
or
out
jl
dec
lods
push
addr16
ins
inc
xchg
pushf
mov
jl
mov
(bad)
sahf
addr16
pop
movs
call
and
scas
lods
xor
pop
test
pusha
mov
push
add
sti
pop
shl
mov
fnstsw
adc
cwde
mov
fnstsw
inc
dec
jb
jge
mov
enter
cmp
jg
iret
or
pop
fucomp
sti
jecxz
xchg
movs
cmp
jnp
jp
retf
jge
icebp
jmp
cld
shl
(bad)
mov
bound
test
xchg
loopne
sti
mov
sbb
pop
jl
sub
cmp
pop
rcl
in
inc
fisttp
pop
xor
xchg
xchg
fidiv
inc
int3
jg
xchg
adc
adc
jae
sub
mov
lods
stos
jb
mov
cmc
ins
ins
jl
call
cmp
aam
or
add
xor
push
das
xchg
arpl
scas
int
out
xchg
pop
cmp
inc
sti
sbb
jns
sub
and
sbb
fldcw
mov
shl
mov
inc
rcl
mov
(bad)
call
lods
adc
retf
jp
or
add
test
in
repnz
ret
ss
jmp
mov
leave
(bad)
ror
(bad)
loop
push
pop
pushf
mov
ds
icebp
sbb
cld
mov
or
dec
or
sti
xor
jecxz
cmp
dec
inc
adc
clc
cmp
fnstenv
adc
lods
push
fnstsw
xor
or
pop
pop
push
pop
push
dec
push
mov
cli
mov
sub
pop
(bad)
loop
add
jl
sahf
xchg
into
inc
mov
lods
ss
push
or
popf
mov
mov
mov
(bad)
xchg
rcr
sti
sbb
ss
sbb
ins
sub
rcl
fwait
cmp
sahf
xchg
sbb
mov
outs
jmp
jp
in
cli
aas
push
mov
jb
int
cmp
in
adc
nop
mov
inc
xor
out
sbb
not
mov
(bad)
mov
test
pop
movs
call
cmp
fnsave
pop
dec
movs
push
jb
ret
mov
mov
stos
sbb
push
pushf
stc
mov
sti
or
ins
pop
outs
xchg
add
dec
loope
push
xor
aad
jg
or
out
lods
mov
aam
mov
jno
or
jmp
pop
jp
or
pop
std
ss
(bad)
pop
gs
lods
popf
xchg
sar
dec
mov
test
pusha
ins
add
enter
fs
add
mov
cmps
bound
(bad)
jmp
jmp
pop
retf
fs
in
jno
imul
mov
ins
pusha
push
mov
je
xchg
sbb
mov
cmp
cmps
aam
sbb
mov
int3
es
imul
ins
stos
push
or
mov
xchg
mov
fsub
mov
add
xchg
out
add
lods
or
mov
xchg
pop
mov
adc
cmc
imul
mov
mov
push
mov
dec
pusha
adc
(bad)
cmp
fbstp
lods
aaa
mov
sahf
mov
sbb
sbb
or
ror
lods
pushf
lea
mov
jmp
imul
scas
xor
xchg
mov
mov
mov
ss
or
or
into
push
dec
mov
xchg
iret
cld
stos
dec
xchg
pushf
xchg
lods
(bad)
call
dec
or
mov
cs
outs
dec
lds
leave
xchg
test
inc
adc
pop
mov
mov
in
(bad)
sub
or
call
lea
pop
sub
sar
imul
int3
ds
pop
std
xlat
(bad)
rcr
push
xlat
mov
inc
mov
repnz
pop
pop
aad
outs
leave
xchg
xor
or
sub
(bad)
int
xchg
xor
cmps
lea
pop
stc
or
sbb
adc
push
mov
sbb
stos
aad
sub
lods
ds
(bad)
sub
mov
mov
les
mov
(bad)
imul
dec
mov
add
mov
pop
xchg
cmp
xchg
call
jg
fwait
sbb
jge
sbb
or
popa
add
dec
outs
add
jp
mov
call
push
dec
cmp
add
movs
jle
cmp
inc
pop
mov
ja
stos
dec
lods
cmps
or
sti
(bad)
or
push
shl
rcr
push
jmp
sub
inc
pushf
es
ret
mov
sbb
int3
push
sar
sahf
mov
fnstcw
dec
pop
aaa
cld
or
jmp
cmp
imul
imul
add
sbb
dec
mov
jmp
into
fwait
packsswb
mov
imul
sbb
inc
pop
cld
arpl
jns
sbb
sbb
xchg
sti
adc
dec
push
push
mov
int
lds
enter
inc
xchg
jecxz
mov
popf
sbb
aad
call
(bad)
mov
dec
lods
sbb
pop
fwait
(bad)
cmps
cmp
sub
ja
ins
sti
in
jl
or
imul
pop
shl
mov
xlat
jb
pop
cmp
lods
dec
cld
xor
outs
sahf
sbb
or
sbb
pushf
pop
push
repnz
mov
dec
sti
push
pop
sbb
(bad)
stc
dec
lods
adc
sbb
or
xchg
mov
dec
push
stos
jl
xchg
pop
inc
lock
dec
outs
dec
(bad)
pop
in
(bad)
fisub
push
mov
fisttp
sub
repz
or
popw
cmp
mov
sbb
out
fidiv
sbb
lods
or
sahf
dec
cmp
(bad)
outs
ins
mov
(bad)
fwait
dec
(bad)
sbb
push
xchg
xor
outs
jp
cld
retf
xchg
(bad)
jl
jl
pop
xchg
ret
jp
imul
mov
mov
mov
push
cs
ins
push
cmp
or
add
mov
iret
fiadd
dec
add
ret
in
jo
stc
aas
ds
sti
lock
mov
cmps
out
rcl
lods
ins
imul
ficom
mov
ficom
sub
mov
mov
cmp
jp
dec
dec
ficomp
sub
lods
push
pushf
pop
dec
jo
xchg
jno
cmp
movs
pop
jl
adc
jmp
fidivr
cmp
jnp
test
mov
fs
ins
cs
loop
pop
xchg
mov
stos
jns
mov
or
fnsave
fistp
imul
sbb
lods
adc
call
arpl
sbb
(bad)
sbb
lds
cwde
aaa
lods
rcr
lods
stos
push
xor
out
push
adc
(bad)
jge
sti
jle
std
aam
jge
jecxz
xchg
jmp
sbb
in
cwde
mov
push
fs
xor
fwait
or
sub
nop
adc
retf
mov
stos
outs
mov
xchg
mov
call
sub
in
adc
dec
sti
scas
cmp
int
jnp
dec
inc
cs
jg
push
cld
rol
mov
enter
mov
mov
mov
hlt
lds
cli
or
dec
popf
sbb
shl
mov
retf
push
cmp
pusha
out
xchg
push
dec
or
push
mov
or
stos
je
lea
(bad)
rol
xchg
mov
and
inc
in
push
jnp
imul
pop
lods
push
(bad)
in
retf
cmp
sbb
into
dec
pop
outs
jmp
adc
or
sbb
nop
std
rcl
retf
lods
daa
or
cld
push
xor
xchg
adc
cdq
mov
lods
mov
or
lea
int3
outs
mov
je
fistp
das
mov
cmp
(bad)
or
sub
dec
dec
or
jp
pop
rcr
mov
fwait
lods
sbb
jge
stc
out
(bad)
jp
or
cmps
fcmove
mov
shl
mov
ficomp
(bad)
and
push
mov
fmul
push
stos
cmp
jnp
in
lods
pop
das
or
ins
mov
pusha
dec
sar
mov
sub
call
popf
dec
jge
shl
dec
gs
jmp
jmp
jl
je
jo
mov
fnstcw
xor
pop
sbb
(bad)
mov
retf
xor
leave
or
emms
int3
xor
mov
push
aas
mov
sahf
fwait
stos
mov
dec
mov
mov
fs
mov
imul
outs
fcom
dec
or
mov
(bad)
cmps
lahf
pop
outs
mov
retf
mov
stos
mov
retf
lods
into
imul
(bad)
popa
sub
dec
mov
xchg
not
mov
sbb
cdq
jp
or
sar
dec
iret
mov
jge
stc
jnp
pop
popf
mov
jge
or
jl
push
jle
or
fimul
outs
sub
push
ins
aaa
sbb
sbb
dec
call
sbb
nop
mov
jno
push
adc
sti
repz
pop
adc
push
int3
jp
scas
jnp
pushf
jmp
fidivr
sub
sahf
pop
retf
(bad)
pop
pop
cmp
cmp
and
mov
mov
test
outs
(bad)
and
ficomp
jl
pop
cwde
cmp
dec
xchg
dec
(bad)
pop
mov
(bad)
stos
jnp
cld
ret
fs
mov
dec
pushf
rcl
(bad)
push
pop
pop
or
push
(bad)
rcl
jle
xor
hlt
pushf
in
mov
jl
push
(bad)
(bad)
fadd
xor
dec
push
aam
int
lock
xor
stc
fwait
cld
dec
inc
fistp
sti
jl
pop
loop
out
imul
jnp
clc
(bad)
adc
mov
mov
das
pop
add
jns
dec
and
ror
jl
mov
cmp
fimul
push
cmp
jnp
mov
dec
imul
dec
push
sub
cmp
(bad)
pop
xor
adc
mov
(bad)
call
cmp
(bad)
repz
cmp
(bad)
fisubr
mov
pop
fcmovne
fnstcw
adc
jnp
or
inc
out
dec
adc
mov
pushf
retf
pop
xchg
or
aam
mov
jle
sbb
jmp
sbb
cmp
cmp
ror
pop
call
sub
ja
dec
mov
pushf
(bad)
stos
cmp
retf
pop
imul
repz
std
pop
stos
fstp
in
fwait
in
inc
pop
fs
outs
mov
mov
pop
add
daa
jecxz
mov
cmp
(bad)
cmp
clc
fst
jl
out
fnstsw
repz
mov
sar
jmp
pop
clc
aas
ins
movs
jmp
sub
dec
cmp
lods
push
pop
cld
shr
jnp
sub
dec
fist
jp
ins
jp
pop
jo
in
in
mov
sbb
pop
sar
fwait
ins
in
push
xchg
pop
sahf
outs
dec
sub
dec
pop
xchg
dec
call
dec
inc
stos
int3
push
pop
fidivr
(bad)
inc
sbb
popf
cmp
into
fmul
or
xor
push
(bad)
jmp
ins
add
sbb
cmp
sbb
sbb
or
ss
xchg
retf
cli
aas
and
jmp
or
fsubrp
cld
mov
xchg
outs
retf
cmp
call
(bad)
mov
pop
cli
into
imul
retf
dec
jmp
fmul
fistp
pushf
dec
cs
mov
jl
mov
je
rcl
loope
(bad)
xlat
cld
ror
xor
scas
add
jp
inc
movs
dec
jmp
or
lahf
sub
xchg
shr
sub
mov
sti
test
rcr
mov
lahf
(bad)
xor
stos
sbb
push
sub
push
ins
dec
dec
cli
sbb
fst
cld
mov
jl
into
fdivr
jmp
lds
stos
das
mov
xor
fnstenv
retf
ss
mov
xlat
cmp
inc
nop
or
test
test
sti
pminub
push
xlat
add
inc
sbb
push
(bad)
fcmovu
in
cli
fcmovu
push
pushf
push
aad
mov
(bad)
xor
or
enter
sub
cmc
ins
dec
pop
mov
push
das
jg
fwait
iret
jge
ror
xchg
in
or
and
xlat
jmp
sub
mov
imul
cmp
mov
retf
adc
mov
cwde
loop
rcr
int
daa
pop
mov
out
push
(bad)
repz
(bad)
mov
fdivr
int3
or
test
iret
out
in
mov
jge
or
cmp
movs
sbb
sbb
adc
and
ins
or
jle
mov
pop
lods
jnp
enter
fisub
mov
dec
jle
int
push
sub
stc
ss
cmp
cli
adc
mov
jle
loop
mov
mov
sbb
or
mov
std
mov
movs
or
xchg
fsub
mov
sub
mov
stos
mov
and
in
sahf
jp
cmp
pop
fstp
xchg
jl
out
fstp
jo
leave
popf
push
xchg
mov
mov
(bad)
cvtps2pi
ins
push
dec
or
pushf
mov
jge
adc
int3
into
int3
fs
imul
pop
push
cld
push
into
stos
lods
int
add
imul
int3
dec
ins
cmp
sub
cli
outs
xchg
sbb
push
stos
cmp
(bad)
les
frstor
mov
jge
mov
jb
popf
pop
fwait
loopne
or
rcl
mov
ins
aad
fcomp
mov
out
shr
pop
or
ja
mov
dec
loope
sti
add
scas
clc
icebp
sbb
or
sub
std
fnstcw
mov
out
ins
ins
ins
cmp
pop
stc
into
push
fdiv
add
std
cmp
pop
push
aaa
mov
leave
jmp
(bad)
not
stos
pop
dec
mov
dec
pop
xchg
sbb
add
mov
pop
jnp
retf
jmp
dec
popf
cs
sub
mov
shr
ss
(bad)
mov
into
dec
shl
jge
call
stos
scas
jecxz
mov
xchg
shl
ins
lods
mov
cmp
cmp
jl
aam
sbb
jns
mov
jp
sub
cli
pop
shl
dec
mov
ret
hlt
or
int
movd
adc
sbb
fsub
lods
jle
call
aam
into
stos
jl
neg
ror
sub
pop
dec
mov
in
into
push
sbb
sbb
pop
das
(bad)
push
mov
cmp
out
jb
pop
sub
jno
or
outs
pop
dec
push
mov
arpl
in
popf
pop
(bad)
sub
jl
out
cmp
adc
imul
fstp
fimul
scas
ins
sbb
sub
xchg
in
jp
into
mov
sub
mov
add
push
dec
push
loope
or
(bad)
pop
lods
in
(bad)
push
cs
jge
movs
xchg
cmp
ds
dec
mov
or
mov
mov
and
(bad)
stos
pop
jnp
fdiv
cli
add
ins
in
jl
stos
punpckhdq
push
mov
jnp
out
cmp
ds
fld
sahf
or
dec
retf
pop
pop
lods
mov
stc
jle
(bad)
ds
retf
aas
pop
cld
jno
pop
inc
pop
vpmuludq
shl
scas
stos
mov
mov
jl
xchg
jg
pop
popf
jae
int3
ins
std
imul
mov
jg
dec
ficomp
pop
mov
ds
push
pop
ficomp
mov
lods
jp
clc
out
dec
popa
fisubr
cli
hlt
jl
popa
mov
dec
sub
push
cmp
cmp
sub
fidiv
fistp
sbb
cmp
imul
(bad)
mov
pop
sub
or
out
loope
sub
(bad)
idiv
pop
dec
sub
jae
(bad)
mov
sar
mov
fimul
rcl
pusha
leave
cli
mov
push
into
loop
in
call
ins
iret
or
(bad)
(bad)
sbb
pushf
out
imul
jmp
sub
lods
inc
mov
mov
int3
in
xchg
sbb
sbb
cs
or
out
dec
(bad)
int3
sbb
adc
imul
sub
int3
aad
jge
and
into
sbb
push
cmp
(bad)
imul
jecxz
jmp
dec
retf
push
jmp
pand
push
bound
pop
pop
aad
sub
pushf
sbb
fimul
test
outs
adc
pop
dec
into
push
lahf
call
sub
popa
cmp
push
dec
lods
cs
jmp
out
das
jnp
mov
in
mov
push
or
stos
or
(bad)
(bad)
pop
lea
mov
mov
push
jmp
cmp
sub
frstor
fcomp
(bad)
cld
ins
in
cmp
outs
jmp
ja
jmp
fwait
popf
jp
mov
ds
sub
popf
ins
pop
push
das
pop
add
jmp
jmp
or
int
jmp
and
dec
cmp
dec
lods
pop
fimul
dec
fcmove
loope
add
mov
frstor
push
in
movs
inc
cmp
in
inc
xchg
test
ja
pop
sti
fnstenv
mov
int
or
jns
rol
imul
pop
dec
cmp
cwde
shl
and
lods
mov
pushf
xor
sbb
jl
call
pop
es
fidivr
adc
std
mov
loop
lods
adc
push
int3
push
cmp
mov
retf
int
sbb
ins
xor
add
cmp
pop
lahf
fcmovne
fisttp
shl
ins
cld
inc
repz
push
std
(bad)
sbb
mov
fsubr
add
mov
pop
lea
jnp
sub
sbb
or
imul
jle
dec
sbb
xor
jp
fdecstp
jmp
sub
jmp
les
cmp
or
rcr
cld
cdq
out
pop
sub
add
cmp
push
cmp
cli
adc
jg
stos
xchg
push
pop
cmp
popf
or
jle
mov
dec
sub
stos
inc
pop
xor
dec
sti
push
pop
inc
mov
dec
fnstsw
(bad)
cmp
add
scas
call
ret
popf
fild
lahf
sbb
jp
mov
jg
fisttp
fisub
lods
sbb
pop
loopne
cmp
ds
test
dec
jmp
sub
iret
or
dec
aad
retf
jle
xchg
mov
fld
or
fdivr
stc
ds
jp
push
jns
out
jle
sub
les
mov
sub
mov
pushf
ficomp
push
(bad)
(bad)
mov
sub
dec
mov
pop
mov
sar
call
repnz
aam
fwait
dec
jle
jl
arpl
push
pop
jmp
mov
fistp
mov
jmp
add
mov
neg
jmp
sub
fdiv
mov
jmp
push
movs
mov
or
movs
pop
dec
mov
cmp
mov
pop
std
aam
std
jmp
mov
ror
push
mov
retf
rol
ins
aas
pop
xchg
sahf
int3
mov
ds
sbb
pushf
dec
fsub
int
lock
sar
ins
in
lods
mov
pop
pop
push
jmp
mov
int3
pop
in
dec
sar
xor
(bad)
std
fldcw
popf
fisubr
into
sub
out
retf
int3
xor
pop
jle
jmp
into
xor
and
cli
shr
adc
fisub
add
mov
mov
mov
pop
mov
or
lods
(bad)
push
mov
jmp
outs
ins
pop
scas
sbb
mov
pop
pop
in
test
cs
jmp
mov
(bad)
sahf
jnp
mov
lods
jge
pop
stos
jl
jg
test
aam
or
retf
pop
sar
mov
mov
sbb
pop
and
scas
jnp
jno
pop
gs
pusha
cdq
dec
rol
cmps
xchg
pop
sub
jg
stc
ins
mov
or
cli
(bad)
movs
call
stos
fdiv
fcmovne
jp
cmp
and
ror
pop
retf
(bad)
out
imul
(bad)
lods
aam
lock
sbb
aaa
into
imul
fstp
int3
bound
leave
sbb
in
sbb
mov
push
sbb
pop
test
jnp
jge
mov
pop
mov
cli
add
pop
mov
dec
sti
or
cs
sti
outs
mov
mov
out
cmp
fucomi
ror
pop
aad
cmps
jge
mov
into
ror
jo
sar
fisubr
jmp
(bad)
jmp
push
retf
aad
sti
and
out
fistp
lods
scas
ins
loopne
das
in
push
scas
or
mov
cmp
ror
push
loope
fcmovb
mov
mov
call
mov
ds
push
ins
stc
push
pop
dec
fs
jmp
in
ins
das
sub
dec
mov
cmp
sub
in
inc
pop
or
ins
add
ins
fcmove
mov
jle
pop
push
outs
mov
cmps
dec
pop
cld
movs
xlat
jnp
push
jge
sbb
fld
iret
sub
mov
fdivr
into
sub
pop
mov
mov
cmovl
or
into
sbb
pop
adc
sub
jmp
outs
pop
dec
add
dec
push
jl
mov
lock
mov
push
aad
call
adc
scas
aam
mov
dec
das
xor
jne
fsubr
mov
sbb
sub
push
addps
neg
jmp
mov
lods
ins
in
int3
dec
test
pop
cdq
call
mov
sub
sbb
mov
pop
mov
fidivr
int
mov
pop
pop
out
ret
pop
sbb
fsubr
pushf
mov
std
sbb
pop
stc
ror
cmp
sub
sub
outs
push
mov
ins
cmp
fisttp
(bad)
js
sub
scas
inc
pushf
iret
fsubr
sbb
retf
fstp
shr
cmp
sub
sbb
loope
cld
jns
pop
pusha
test
jge
fcomp
push
sub
push
cmp
pusha
dec
clc
outs
int3
xor
fld
adc
mov
mov
popa
dec
sbb
into
xor
call
dec
jle
sub
in
lods
dec
or
lock
shl
push
std
fnstcw
adc
ds
fld
ins
cmp
jl
fstp
call
mov
lods
fistp
test
std
fidivr
dec
mov
cmp
stc
mov
jle
fcomp
popf
cmp
xor
je
out
jge
fsubr
sub
fsubr
dec
nop
or
cmc
inc
mov
ins
mov
fucomp
fiadd
jmp
or
stos
or
sbb
outs
cmp
movs
das
fidivr
jmp
rcr
(bad)
rol
sbb
addr16
jo
mov
jl
inc
jmp
cmp
pop
push
dec
jnp
jmp
fwait
cwde
xor
movs
lods
comiss
pop
jmp
dec
stos
arpl
sbb
jmp
dec
xor
fst
aad
ins
cli
loop
mov
push
mov
pop
popf
fstp
int
scas
xchg
pop
jle
xor
dec
push
(bad)
cmp
pop
sbb
jae
in
dec
ins
pop
dec
imul
sbb
mov
fcomp
fild
mov
dec
pop
jo
fdiv
mov
int3
jmp
fnstcw
dec
pushf
mov
call
push
enter
test
(bad)
in
mov
rcr
loopne
pop
fistp
outs
cli
sub
fisttp
fs
jp
rep
jmp
fsubrp
cld
(bad)
call
xchg
inc
pop
leave
mov
imul
ficomp
fld
mov
in
mov
ficomp
cmp
pusha
pop
stos
sbb
pop
fstp
dec
inc
(bad)
aam
shl
xchg
sbb
shl
cmp
sbb
dec
sub
cdq
das
ins
sti
sub
in
fwait
gs
shr
imul
sub
mov
(bad)
jmp
ins
scas
or
sbb
out
or
fcom
jmp
mov
(bad)
stc
rcr
fdivr
jnp
add
call
dec
aad
or
push
pop
add
mov
pop
in
stc
ds
std
jmp
xor
fsub
xor
push
mov
sub
loopne
mov
jmp
call
cmp
mov
cmp
cdq
fsubr
int3
mov
adc
fwait
dec
xchg
fadd
sbb
lods
cld
fdivr
or
jno
sbb
es
lahf
sti
int3
ins
dec
ins
cli
or
dec
push
or
push
or
cmp
sub
mov
mov
add
jg
sbb
stos
aas
sbb
ins
cmp
jp
out
popa
ins
test
fdiv
stc
pop
dec
(bad)
jo
sbb
xchg
test
jg
push
sub
mov
aam
or
data16
inc
jmp
test
push
lods
cmp
mov
dec
push
xor
popf
(bad)
sub
inc
shl
fistp
outs
jmp
ins
scas
pop
int3
sbb
push
scas
pop
adc
cmp
sti
mov
fdivr
dec
ficomp
inc
call
in
dec
pop
lahf
sbb
(bad)
fdivr
aas
int3
shl
lods
lahf
aas
(bad)
jb
imul
fcomp
push
dec
xor
mov
retf
(bad)
or
adc
or
jmp
xchg
(bad)
fidivr
pushf
rcl
sbb
ror
outs
js
jo
jnp
loope
mov
(bad)
dec
scas
push
outs
fcomp
jg
btc
jp
sbb
(bad)
in
or
push
sbb
or
xchg
xchg
fdivr
pop
jle
imul
push
into
adc
ja
cld
sbb
sbb
sti
jg
test
rcl
cmp
aaa
retf
shr
in
dec
fnstcw
leave
(bad)
fsubr
lods
jnp
gs
sub
mov
cld
mov
dec
sub
into
or
push
adc
fidiv
mov
xchg
add
sub
mov
int
stos
adc
sbb
pushf
ss
loopne
sti
js
jb
in
jnp
cdq
jl
(bad)
or
daa
aam
pushf
or
lods
xchg
fwait
loope
out
aam
or
sti
sbb
pop
pop
(bad)
ror
sbb
outs
cmp
(bad)
pop
or
ins
pop
mov
sub
ret
dec
aam
fnstcw
loope
imul
cmp
shr
and
or
fst
sbb
fdivr
mov
cmp
fsubr
xor
(bad)
mov
test
pushf
mov
fstp
sbb
call
sahf
dec
or
dec
pop
fst
cli
adc
pusha
lods
cdq
int3
xor
mov
add
les
dec
jle
mov
jno
cld
in
jmp
sub
jl
ins
rcr
aam
jle
mov
push
sub
mov
cmp
loope
fisttp
popf
and
jmp
shl
push
adc
icebp
fisttp
fsub
xchg
fisttp
sbb
sbb
pushf
fsub
(bad)
(bad)
fcmovu
jmp
aas
js
mov
mov
in
sub
mov
push
cmp
pop
shl
mov
fs
lods
inc
in
aam
neg
dec
mov
stos
out
pop
aad
push
push
fmul
dec
or
(bad)
iret
rcl
pop
inc
adc
mov
int
rcl
fdivr
leave
pop
or
in
fmul
fwait
int
nop
mov
jl
fs
aad
call
int3
out
outs
cs
(bad)
sub
paddsw
mov
(bad)
push
or
jne
sub
outs
mov
aam
cli
ds
sahf
dec
pop
fistp
rcr
in
rol
test
stc
stc
xchg
mov
fld
rcr
imul
sbb
ins
pop
fnstcw
lods
push
sar
rol
popf
mov
sbb
sub
(bad)
imul
ds
mov
or
hlt
mov
not
jmp
inc
nop
hlt
mov
call
pop
fsubr
jnp
jmp
dec
popf
sbb
inc
lods
imul
pusha
or
and
fcomp
loopne
mov
in
cmp
aad
sub
sub
ins
sub
jl
int
rcr
outs
fcom
das
add
fnstsw
dec
aam
pop
stc
or
mov
sub
int3
call
pop
fwait
adc
pop
sbb
lods
aam
(bad)
mov
(bad)
push
fsubr
das
and
jmp
loopne
push
aas
lods
dec
(bad)
sbb
mul
pop
fsub
dec
(bad)
cmp
outs
fisub
inc
fnstenv
push
lods
test
call
aad
mov
jge
fdivr
fwait
dec
ins
fdiv
cmps
mov
das
sub
(bad)
mov
std
mov
(bad)
aad
xor
push
pop
jl
enter
pop
and
jno
test
dec
outs
sbb
jp
repnz
pop
mov
ds
jl
mul
in
pop
add
add
mov
in
inc
or
scas
inc
fadd
stc
scas
sub
pop
(bad)
jp
sbb
mov
hlt
out
mov
sub
mov
fsub
sar
pop
sbb
fdivr
pop
fadd
sub
mov
imul
(bad)
mov
and
pop
pop
push
jge
cmp
xor
lea
(bad)
mov
lahf
mov
(bad)
pop
fidiv
sub
jle
mov
div
mov
mov
add
pop
cmp
jg
sub
shr
ins
mov
sbb
int3
inc
cli
dec
(bad)
cmp
fsubr
(bad)
mov
dec
lods
dec
movs
push
aam
cmp
imul
adc
add
push
neg
add
fwait
pop
mov
lea
push
(bad)
sbb
call
pop
rol
out
or
or
sti
sbb
cmp
enter
(bad)
and
jmp
imul
push
dec
rol
cld
jp
sbb
pop
rcr
shl
imul
aas
scas
sbb
adc
pop
jle
nop
xchg
pop
dec
push
jmp
shr
or
sub
dec
cld
leave
aas
fcmovnb
mov
jl
sti
jo
pop
pop
adc
pop
retf
fcmovb
or
scas
sbb
and
lods
out
pushf
test
cmp
call
dec
scas
sbb
inc
pop
aas
jmp
jmp
sub
nop
(bad)
fisub
inc
jmp
push
or
pop
jl
icebp
fistp
sbb
inc
dec
add
(bad)
pop
adc
sbb
jo
mov
mov
int3
fimul
test
into
int
fs
(bad)
dec
cli
shl
fsubr
add
jmp
clc
ret
jne
pop
aas
sbb
add
jp
clc
push
jle
lods
xorps
push
ficomp
aam
das
enter
jmp
popf
loopne
sub
sbb
das
dec
lods
repnz
or
cdq
inc
inc
int
cmp
or
lods
pop
mov
outs
rcr
pop
int3
int3
pop
mov
jmp
cmp
arpl
lods
mov
(bad)
cmp
(bad)
or
(bad)
ins
pop
mov
lods
(bad)
(bad)
push
and
dec
jnp
out
cmp
sar
adc
mov
rcr
popa
dec
cmp
das
pop
stc
(bad)
sbb
pop
idiv
fdivr
leave
in
dec
cld
stos
fcomp
or
cmp
dec
xor
jl
stc
xor
mov
jg
call
pop
sahf
jl
dec
sbb
jnp
dec
scas
adc
lds
cmp
mov
sub
(bad)
imul
mov
(bad)
jl
hlt
dec
pop
pop
xchg
push
mov
mov
pop
lahf
test
jmp
mov
out
retf
push
or
fsubr
mov
push
and
mov
stos
mov
xor
sub
mov
fsubr
dec
jb
sti
mov
pop
sahf
fdivr
jnp
loopne
fdiv
pop
popf
jnp
pop
fdivr
sbb
mov
xor
xchg
xor
mov
jae
or
dec
xor
fmul
int
dec
int3
or
nop
ins
adc
xor
fwait
in
test
adc
mov
outs
clc
sbb
adc
mov
sbb
sar
or
jmp
movs
data16
shr
add
sbb
scas
fsubr
jp
inc
lea
pop
fwait
mov
cmp
sti
out
pop
pop
jmp
clc
dec
lea
dec
mov
pop
shr
das
cdq
cmp
cwde
lods
or
ds
sbb
sti
das
fdivr
fisub
fcomp
iret
sbb
outs
pop
pop
and
faddp
inc
sub
fistp
icebp
cmp
scas
dec
stos
xor
fidivr
int3
sbb
xchg
inc
retf
faddp
(bad)
aas
jmp
loop
mov
pop
jg
push
dec
pop
or
adc
mov
ins
int3
aad
ins
push
in
aas
jmp
cmp
pop
idiv
aam
cmp
xor
mov
in
jnp
sub
lahf
aam
inc
mov
fcomp
dec
jg
xchg
and
adc
stos
sub
push
ins
(bad)
sti
mov
test
pop
add
call
fiadd
ds
push
mov
mov
jle
retf
cs
mov
in
jmp
ds
popf
mov
jo
pusha
lds
sub
xchg
mov
pushf
dec
and
jl
movs
adc
mov
in
lods
push
fmul
pop
pop
dec
mov
xchg
push
sub
jecxz
into
fwait
(bad)
lods
mov
mov
enter
(bad)
cdq
mov
mov
fcom
dec
pop
mov
hlt
jg
fild
fsubr
shl
mov
(bad)
cmp
mov
add
jg
sub
dec
mov
add
std
or
sbb
dec
mov
push
cmp
stos
pop
lods
adc
sbb
fldenv
scas
(bad)
and
xor
aas
pushf
lods
jmp
xor
sbb
fdivr
sub
lock
popf
ins
mov
sub
sub
cmps
fcom
ds
cmp
pop
sbb
aaa
fdivr
mov
mov
fmul
daa
arpl
inc
neg
push
in
daa
fdiv
mov
in
jmp
outs
(bad)
icebp
fwait
clc
sub
fsub
iret
cmp
dec
into
push
cli
pushf
inc
int
fisubr
xchg
cs
(bad)
jge
js
mov
push
sahf
(bad)
cwde
lods
cmp
stos
inc
pop
mov
fcom
push
iret
dec
sahf
sbb
fwait
out
outs
stos
push
inc
or
sbb
scas
ret
jecxz
imul
xchg
fsubr
loope
mov
fmul
jmp
push
cmp
ins
paddq
pop
sbb
adc
pop
ret
sub
mov
movs
mov
xor
fdivr
and
shl
push
jnp
fdivr
mov
stos
cmp
jns
push
adc
scas
imul
mov
pushf
fadd
hlt
rcr
mov
cmp
fdivr
push
jno
mov
xchg
neg
sbb
mov
adc
loope
mov
jnp
mov
sbb
inc
and
or
cs
pop
sbb
sbb
mov
js
inc
sbb
fisttp
ins
test
shl
leave
test
aam
ja
lods
test
call
ficomp
fsubr
aas
fmul
fistp
jnp
sbb
outs
pushf
rcr
cmp
push
aaa
jle
int3
fidivr
inc
pop
and
cmc
fiadd
jl
jns
inc
pop
test
fsubr
mov
jp
retf
inc
pop
loopne
repz
jmp
aam
shr
std
shl
sub
push
loop
lds
fmul
push
cli
stos
or
push
jl
mov
fmul
enter
sbb
(bad)
loope
fmul
xor
push
leave
or
push
pop
xchg
or
retf
cli
test
call
inc
out
add
xor
xor
push
sahf
in
fdiv
retf
stos
(bad)
mov
ds
mov
aad
pop
ins
dec
cmp
xchg
fdivr
cmp
fcomp
jbe
sbb
je
xchg
sbb
mov
(bad)
call
xchg
inc
enter
mov
mov
data16
fadd
mul
cmps
fadd
sahf
pop
jg
iret
mov
sub
lods
aaa
pop
into
jnp
mov
ss
pop
mov
pop
or
sbb
ss
mov
sub
stos
ds
ins
sub
jmp
shr
clc
fdivr
pop
movs
js
fcom
cmp
mov
fidivr
fsubr
pop
push
ret
add
push
aas
push
mov
mov
jg
push
cmp
repz
fisubr
add
or
les
inc
jp
fdivr
sub
sbb
lea
pusha
jmp
jno
enter
push
ds
jmp
pop
stos
xchg
mov
rol
sub
test
stc
popf
cmc
out
ins
jecxz
jmp
call
jae
sti
data16
pop
and
(bad)
lahf
lods
jnp
mov
add
jge
sub
test
rcr
push
bound
je
cmc
xor
int3
xor
add
(bad)
cli
adc
sbb
into
out
fcomp
inc
pop
mov
jne
je
push
jmp
in
or
sbb
adc
dec
mov
test
shl
ins
es
sub
(bad)
jg
fadd
int
lock
outs
outs
push
fsub
or
bound
retf
pop
cwde
lods
aam
push
stos
loop
int
fsub
ja
jmp
xor
popf
and
or
xchg
dec
fist
pop
pop
fcomp
imul
pop
pop
inc
fcom
cmps
xor
sbb
fld
mov
call
sbb
jp
mov
fsubr
pop
(bad)
mov
lods
jae
es
sub
mov
cmps
and
push
push
aaa
stos
dec
pop
rcl
jmp
and
fadd
fs
nop
test
jno
outs
pop
scas
jnp
mov
pop
stos
fcomp
inc
cmp
into
xlat
sbb
or
fdivr
sbb
push
cmps
jno
or
pop
repnz
mov
jnp
ins
sbb
push
movs
adc
mov
mov
and
fdiv
aam
cmp
cmp
xor
fbstp
cmp
fdivr
(bad)
xchg
in
in
pop
ret
sub
mov
mov
jle
and
mov
cli
out
jns
fsubr
(bad)
pop
mov
fisttp
pop
aad
(bad)
fs
repnz
fsub
retf
test
aam
push
pop
stc
fdiv
fisub
push
ins
out
sbb
aad
int3
inc
je
sub
cmp
inc
lods
push
cmps
sub
push
fadd
out
clc
stos
sbb
and
dec
call
push
mov
out
jge
fcmove
imul
mov
daa
or
push
shl
rol
pop
enter
dec
cmp
mov
mov
fild
lock
sub
sbb
add
cmps
jg
fadd
push
in
fsub
(bad)
out
mov
(bad)
fsub
cmps
loopne
jmp
xchg
cli
dec
(bad)
fmul
mov
fadd
movs
sbb
push
xchg
fcom
sar
jmp
inc
dec
out
(bad)
test
dec
fdivrp
lods
dec
rol
mov
jb
imul
popf
sbb
pop
retf
into
ficomp
loop
imul
push
cmp
sbb
out
fsubr
std
jne
push
sar
outs
(bad)
fmul
pushf
fimul
or
pop
inc
data16
rcl
inc
push
or
push
mov
dec
aam
jl
sub
lods
push
ret
fisttp
cmp
les
rcr
sbb
and
loope
add
enter
mov
xchg
lods
xchg
fld
rcr
adc
in
rcr
fcom
(bad)
mov
mov
stos
ins
or
sbb
imul
int
fiadd
mov
push
mov
jae
stc
push
jmp
dec
scas
lock
pop
fnstenv
cmp
fdivr
adc
push
popf
mov
mov
iret
inc
xor
dec
mov
mov
xor
stos
push
and
bound
(bad)
fld
fsubr
or
out
cld
fsubr
cwde
loope
cmc
xor
fdivr
cmp
vrcpps
fbstp
mov
mov
call
jnp
(bad)
adc
or
mov
ins
push
aad
iret
fdiv
ror
pop
add
fsubr
lahf
(bad)
push
cmc
adc
fmul
sub
mov
pushf
cmps
and
sti
fcmovbe
rcl
shl
cli
sar
mov
(bad)
outs
into
stos
sbb
cmps
jne
fdivr
or
sbb
xlat
pop
ins
cmp
cdq
aad
sbb
xor
pop
mov
(bad)
out
cmp
lods
pop
mov
int3
scas
jmp
jb
fsubr
sub
dec
lods
pop
ins
mov
fsubr
xchg
std
sub
popf
pop
aaa
mov
jmp
ja
inc
xchg
mov
pusha
or
ins
das
popf
jbe
stc
xlat
cmp
and
adc
dec
fimul
jmp
fmul
in
mov
fistp
pushf
stos
(bad)
pop
retf
shr
xchg
sub
jl
lods
and
push
mov
(bad)
push
rcr
jl
jmp
sbb
mov
cmp
fsubr
fmul
jp
pop
jnp
stos
leave
fsubr
repnz
sahf
mov
mov
adc
pop
fdiv
(bad)
cmc
lahf
scas
xchg
dec
daa
pop
cmps
xchg
cld
or
mov
push
cs
pop
lock
aam
or
lods
jbe
inc
fmul
mul
xchg
adc
sub
retf
jmp
pop
rol
sbb
fs
cwde
and
adc
dec
dec
rcr
test
xchg
loopne
cmc
ins
cli
or
and
ins
jecxz
fcom
or
(bad)
jmp
frstor
or
jmp
pusha
dec
mov
fadd
pop
cwde
ds
sbb
(bad)
call
retf
sbb
and
xlat
mov
cmp
(bad)
cdq
jle
fidivr
clc
push
sbb
lock
out
ins
cmp
test
push
add
fsub
mov
or
fnsetpm(287
fsubr
mov
pop
lods
fdivr
push
sbb
xchg
mov
cli
mov
loope
ficomp
imul
mov
mov
pop
xor
aaa
mov
mov
pop
fimul
scas
fldcw
retf
mov
fmul
(bad)
mov
sub
push
cli
xor
lods
pop
pop
ficom
(bad)
popf
xchg
cld
xlat
mov
add
rcr
(bad)
fild
sti
inc
pop
push
outs
lods
fwait
or
xchg
gs
xor
push
pop
or
fadd
inc
mov
fdivr
aaa
push
lods
popf
cwde
mov
sub
mov
dec
not
fsubr
sbb
lds
sub
sti
cld
sar
mov
idiv
adc
aam
add
mov
int
pop
(bad)
(bad)
mov
lods
or
or
mov
adc
into
fdivr
lock
pop
adc
jmp
mov
pop
test
outs
lahf
loopne
fmul
or
pop
fdivr
clc
rcr
ins
es
cmp
ror
push
push
xor
int3
dec
adc
xor
xor
(bad)
mov
fmul
push
ficom
imul
fmul
jg
ds
push
std
test
adc
xchg
push
(bad)
pop
addr16
push
sub
fdiv
jmp
mov
retf
clc
mov
add
inc
(bad)
jb
pop
test
sti
dec
dec
mov
fsub
pop
out
cli
repz
aam
xor
mov
pop
inc
mov
mov
cmp
push
cmp
pop
jo
jbe
aam
(bad)
mov
sub
mov
pop
test
or
fcomp
imul
call
jmp
fiadd
fcom
or
lods
clc
test
xor
pop
scas
fsubr
mov
(bad)
shr
movs
and
fdivr
clc
scas
out
fadd
inc
stos
add
rcr
jmp
jg
iret
imul
pushf
mov
lods
and
push
rcr
mov
mov
add
ds
pop
je
iret
and
rcr
mov
call
ja
xlat
scas
(bad)
fnstenv
lea
iret
sbb
jp
retf
inc
(bad)
test
fnsave
(bad)
fsub
jae
lahf
pop
xchg
mov
cmp
fmul
(bad)
pusha
sbb
xor
ins
and
adc
fist
call
fsub
or
fsubr
sbb
jp
push
fdivr
in
rcr
popf
dec
sub
leave
mov
mov
inc
inc
icebp
loope
and
fsubr
push
pop
dec
sbb
stos
into
in
fsubr
xchg
clc
mov
mov
aad
ins
jg
mov
js
add
jbe
cs
lea
push
cmp
pop
je
jp
or
lock
jns
shr
fsubr
cdq
clc
mov
push
lods
out
shl
fs
fsubr
and
cld
stc
pop
jl
fcomp
pop
fsub
aad
sub
fldcw
out
fcomp
or
leave
std
adc
fisubr
fisubr
(bad)
fcom
repz
sub
outs
sbb
stos
lahf
stos
rcr
int3
xor
test
inc
inc
mov
mov
in
outs
mov
fnsave
(bad)
dec
mov
push
jp
dec
sub
fdivr
xchg
lahf
sar
stos
lock
(bad)
sbb
mov
push
(bad)
mov
test
fcomp
cmp
and
push
xor
test
fdiv
into
and
(bad)
lds
sub
mov
iret
mov
div
lods
into
(bad)
cmps
mov
inc
fsub
jmp
push
imul
cmp
int
xchg
popa
ins
sbb
or
mov
addr16
(bad)
in
or
push
xchg
popf
adc
je
fdiv
pop
mov
jae
xchg
push
push
div
xchg
repnz
lods
jnp
cmp
adc
push
fdivr
mov
repnz
inc
gs
add
psubq
jmp
je
pop
fcom
stos
rcr
das
fadd
mov
dec
lods
cmp
fisub
dec
data16
xchg
mov
adc
pop
inc
out
mov
ds
mov
mov
shr
fidivr
cs
push
ja
add
push
push
(bad)
fsubr
scas
int3
or
xchg
(bad)
idiv
mov
fimul
outs
out
mov
data16
ja
jb
fdiv
xchg
es
retf
int3
add
test
(bad)
add
out
fmul
or
loop
test
fisubr
inc
imul
mov
(bad)
xor
fmul
rol
retf
fsubr
aaa
test
(bad)
adc
movs
imul
mov
sub
xchg
int3
cmp
ja
cmp
out
mov
inc
jb
jbe
dec
mov
xor
pop
pop
sub
cmp
pusha
jp
adc
fdiv
xor
popf
xlat
xchg
fcomp
and
fcom
xchg
sahf
ins
pop
mov
call
lds
cli
sbb
jmp
pushf
ficomp
mov
cs
sbb
pop
fadd
fmul
mov
xchg
fcomp
lock
push
gs
fdiv
pop
shr
fadd
shl
adc
js
add
iret
sbb
lods
mov
sti
push
stc
in
fucomip
(bad)
sub
push
xor
imul
adc
aam
cmps
and
inc
lods
into
pop
cmp
jp
mov
adc
aam
xlat
scas
stos
dec
cmp
cdq
fadd
outs
inc
ins
xchg
(bad)
mov
jmp
hlt
dec
dec
cmc
adc
addr16
sti
retf
fidivr
push
jno
fsub
rcl
and
add
test
sbb
sub
xor
es
fmul
xchg
inc
jns
fsubr
pop
pop
popf
pop
cmps
xor
fcomp
(bad)
stos
jg
xchg
xchg
cmp
dec
xchg
xor
inc
push
aas
ins
sbb
push
and
jmp
mov
(bad)
frstpm(287
adc
call
pop
sahf
outs
daa
fmul
(bad)
sbb
fsubr
cmp
push
dec
jb
sbb
or
fsub
movs
inc
ins
(bad)
mov
stos
or
pop
xor
cmp
adc
jnp
adc
nop
ins
or
fdecstp
(bad)
xchg
mov
xchg
fadd
mov
jmp
mov
push
jb
jecxz
(bad)
or
js
mov
fdivr
sbb
lods
and
sti
ins
sub
or
jp
retf
sbb
sti
inc
movs
out
ss
pop
or
aad
enter
xor
imul
lea
rcr
rcr
dec
inc
(bad)
leave
xchg
imul
jmp
adc
xchg
mov
je
fisub
not
cdq
push
js
dec
fdivr
inc
int
add
add
call
sub
mov
out
mov
nop
cmps
fmul
or
sti
mov
cld
sbb
xchg
lahf
sbb
fadd
xchg
sti
fist
imul
xor
call
out
int3
addr16
xchg
dec
fnstcw
cmp
pop
mov
ss
fsubr
xor
int3
jp
sbb
test
movs
imul
(bad)
pop
cmc
adc
mov
inc
inc
stos
sbb
in
push
ret
sbb
pop
aam
add
xor
fsub
repz
fimul
fcom
adc
fdivr
stos
ror
pop
ins
push
popf
lods
fdiv
mov
and
mov
push
sbb
inc
sbb
sub
nop
test
ins
(bad)
shl
fmul
xchg
and
xchg
fs
cmc
out
pop
jp
jge
push
jb
lock
js
(bad)
test
mov
mov
enter
(bad)
mov
and
loope
dec
mov
das
inc
xor
ins
call
fdivp
xchg
neg
or
mov
jge
sbb
fcom
lock
add
cmp
pop
or
movs
sub
lahf
jg
fidivr
xor
int3
or
fs
dec
retf
sbb
movs
neg
cdq
fwait
push
rcr
pop
out
jmp
xchg
or
or
jge
pop
add
mov
repnz
jg
imul
out
test
sub
dec
adc
jne
imul
jg
ret
and
mov
pop
fcomp
call
not
call
retf
sbb
add
push
addr16
jbe
mov
lods
pop
in
or
aam
lock
fdiv
std
movs
(bad)
cwde
mov
jbe
push
cmp
adc
xor
ja
xor
ss
dec
fsubr
test
xchg
inc
ficomp
repnz
cdq
stos
pop
mov
je
stos
lods
gs
call
cmp
xchg
icebp
push
sbb
mov
sub
push
mov
inc
and
push
mov
jp
xchg
icebp
dec
dec
ficom
test
and
cmps
push
lods
outs
std
and
loop
mov
sub
rcr
jle
ins
push
xchg
and
mov
rcr
jbe
shl
jl
sub
push
xchg
sbb
aas
call
mov
or
mov
pop
xchg
fdivr
aad
fdiv
jb
sbb
retf
jle
(bad)
popf
nop
ins
sub
outs
rcr
jnp
xchg
dec
out
lea
mov
inc
xor
dec
cmp
iret
sbb
dec
lods
(bad)
pop
mov
mov
mov
sbb
aam
outs
les
in
push
inc
sbb
(bad)
stc
imul
and
cmp
dec
adc
mov
push
adc
test
sub
push
fdivr
addr16
fdiv
jg
fdivr
outs
test
cmp
dec
lods
mov
ins
clc
in
repnz
cmp
test
daa
dec
dec
sbb
sub
fmul
imul
lods
fisttp
mov
fdivr
xor
fwait
push
int3
movs
fdivr
cli
jmp
sbb
inc
call
mov
out
test
add
cmp
and
jmp
sbb
cs
retf
fsubr
jbe
inc
fdiv
or
mov
fadd
jg
imul
mov
pop
icebp
lods
loopne
pop
mov
fsub
jp
push
call
pop
adc
jne
sub
nop
dec
or
xor
daa
aaa
fsub
js
int3
cmps
xchg
ins
mov
push
enter
adc
jne
lods
aas
xor
fs
sbb
pop
jns
jge
out
fimul
popa
imul
push
adc
ja
sub
not
test
loop
mov
jmp
xchg
push
in
fwait
ss
leave
pop
repz
mov
xchg
shl
fmul
ror
out
lods
pop
pop
test
fcomp
jmp
jle
imul
xchg
fsub
mov
fcom
cmc
add
fisub
fadd
mov
or
mov
push
pop
fdivr
in
sub
imul
pop
mov
fsubr
bound
test
sbb
xor
fdiv
not
mov
addr16
rcl
(bad)
pop
sub
push
out
rcr
jmp
test
fsubr
dec
stc
sub
cdq
fadd
pop
push
ins
out
xor
test
neg
lods
jne
(bad)
stos
imul
das
push
aaa
xlat
pop
mov
fldcw
adc
or
push
xchg
bound
fmul
jo
sub
and
sub
dec
jl
xor
int
fdiv
retf
pop
lods
(bad)
and
push
mov
pop
push
ret
or
fdiv
inc
jbe
icebp
push
sahf
dec
int3
mov
push
loopne
inc
mov
outs
fdiv
and
xor
call
fdiv
idiv
clc
movs
(bad)
push
inc
ins
outs
push
out
aam
pop
dec
fsubr
nop
aam
xchg
xor
jge
pop
pushf
xlat
repnz
adc
jle
sbb
jmp
jge
aaa
ror
lods
mov
cmp
adc
popa
or
das
arpl
dec
sti
je
adc
fs
jmp
jge
outs
out
mov
loope
iret
lea
jl
cmps
pop
es
movs
fcomi
hlt
fadd
pop
out
sub
outs
js
jmp
cmp
leave
push
fmul
xchg
stos
sti
cmp
pop
in
fcomp
jge
repz
out
jmp
nop
test
or
cmp
add
xchg
fisubr
xchg
push
mov
adc
sub
mov
out
ficomp
cmp
pop
gs
mul
pop
std
dec
add
cs
adc
int3
cmps
ror
mov
hlt
(bad)
cmps
fcmovnu
je
mov
fiadd
push
pop
out
fsub
cmp
mov
adc
out
fs
push
leave
cld
push
(bad)
daa
imul
mov
outs
stos
dec
and
push
push
jge
fdiv
je
shl
fsub
xchg
ret
sub
dec
retf
xchg
les
stos
cmp
sti
dec
jae
fcom
cmp
sub
fcomp
or
or
sub
fld
and
(bad)
mov
cmp
fdiv
(bad)
dec
movs
(bad)
test
in
ins
cmp
push
inc
into
mov
jle
mov
stos
inc
cmp
jl
clc
xchg
cmp
fs
shl
loope
fsubr
fld
popf
(bad)
lods
(bad)
sub
cmp
xchg
dec
stos
sbb
fisubr
cmps
js
mov
sahf
fmul
inc
or
les
mov
jmp
jp
ds
fmul
in
nop
pop
sbb
fsubr
mov
mov
mov
mov
jg
call
test
mov
jne
and
(bad)
mov
jmp
push
cli
sbb
jae
pop
add
not
fstp
dec
cmp
inc
out
dec
inc
jmp
cld
clc
dec
call
movs
cli
pop
jle
lods
push
dec
fcom
test
stos
adc
fs
fistp
(bad)
jnp
jl
test
pop
and
push
fsubr
fmul
mov
clc
fmul
stc
ror
hlt
cmp
inc
pop
ficomp
ds
xlat
mov
sub
sar
mov
fiadd
fdiv
aam
stos
mov
clc
rcr
xchg
inc
fld
or
jge
mov
(bad)
mov
pushf
popa
in
loopne
shr
push
sbb
out
ds
iret
sbb
(bad)
jnp
inc
cmp
sbb
shl
fsub
or
mov
addr16
and
fdiv
outs
push
mov
pusha
ret
imul
jl
fcmovnb
xor
call
cmp
jnp
sub
retf
jmp
shl
cmps
fimul
fsub
mov
jmp
stos
xor
sti
sbb
js
call
sbb
push
outs
sbb
mov
jns
lods
xor
shl
scas
fs
sbb
aad
pop
sbb
add
sahf
fistp
cdq
jge
lea
jmp
(bad)
repnz
dec
ret
or
pop
pop
inc
int3
sbb
fmulp
jl
add
mov
pop
lock
int3
mov
cmp
add
jmp
pop
cmp
in
sbb
inc
add
sub
sub
fsubr
sub
mov
fucomip
push
cmp
scas
push
jg
lods
or
in
mov
cdq
ss
ins
ins
cmps
lea
fsub
jne
mov
in
popa
enter
(bad)
in
leave
dec
int3
xor
xor
test
xchg
fldcw
dec
pop
or
adc
and
mov
inc
retf
dec
push
movs
xchg
fdiv
sahf
jg
push
pop
in
fcomp
sub
pusha
stos
nop
push
lods
push
mov
fsubr
sub
and
or
fadd
scas
push
rol
(bad)
mov
add
fadd
mov
hlt
inc
mov
rcr
and
mov
fcmovb
pop
push
cld
and
sbb
nop
aam
cwde
push
cmp
pop
ins
loopne
fdivr
ficom
mov
or
int3
jg
push
nop
int3
jb
inc
iret
leave
sub
mov
cmp
fst
push
loope
shrd
iret
push
out
fist
repnz
lock
bound
dec
or
mov
fld
add
lahf
(bad)
test
xchg
cli
xor
cmp
mov
das
mov
xor
inc
mov
inc
aam
cwde
jg
icebp
or
jle
fisubr
int3
outs
ins
lahf
sub
cmp
mov
adc
fdivr
call
fdiv
enter
mov
bound
mov
jmp
das
aam
push
jne
test
mov
fdiv
xchg
out
loope
cmps
sbb
and
and
push
fdiv
xchg
jo
int3
jle
in
push
enter
pop
out
jmp
iret
cli
out
in
fwait
or
pop
aam
movs
imul
mov
mov
cdq
lods
xchg
fwait
fs
lock
retf
(bad)
push
ins
fmul
fbstp
int
sti
push
sar
mov
ins
packssdw
xchg
mov
add
lahf
movs
dec
or
std
arpl
mov
add
lods
mov
outs
push
aam
mov
iret
and
push
inc
into
popa
dec
fcomp
rcr
xchg
xor
inc
ds
inc
aam
fs
fdiv
adc
inc
fsub
add
inc
fadd
dec
sub
out
cli
jp
cmp
inc
rol
sbb
sub
fdivr
adc
ret
pop
push
push
sub
cs
mov
addr16
mov
test
dec
fsubr
mov
sub
dec
inc
push
xchg
fdiv
sar
iret
pushf
xchg
lahf
and
pop
rcr
pop
out
fdivr
addr16
adc
xor
pop
fidivr
(bad)
addr16
rcr
push
les
icebp
(bad)
add
jmp
xor
or
push
dec
dec
cmp
inc
pop
imul
ret
cli
xor
in
fdiv
inc
(bad)
jbe
or
dec
adc
pop
int
dec
fcomp
add
mov
wbinvd
add
ins
mov
sub
lods
imul
sub
(bad)
pop
and
call
shr
push
jmp
enter
sub
inc
jns
loope
cmp
retf
sub
dec
lods
mov
addr16
jl
cwde
dec
pslld
cmp
mov
jmp
ins
scas
sbb
add
test
shl
or
ins
pop
and
ja
fisub
repz
fcomp
nop
inc
int
mov
push
push
sahf
ja
cmp
dec
das
jae
or
pop
outs
(bad)
call
fadd
sti
jecxz
and
cld
or
inc
mov
ret
fdiv
std
or
mov
out
and
jnp
cmp
leave
loopne
pop
xchg
(bad)
fdivr
inc
add
in
fdiv
(bad)
sub
loop
cmps
mov
idiv
cdq
outs
fisttp
pop
cmp
push
fcmovu
ins
sbb
mov
dec
dec
mov
call
dec
push
push
clc
push
xchg
sub
iret
jp
aam
pop
(bad)
(bad)
sti
xchg
mov
xchg
into
not
popa
push
push
jbe
adc
mov
ret
adc
jo
mov
dec
sbb
sub
in
aam
pop
push
cli
sahf
fidiv
jbe
shr
fdivr
push
jl
leave
scas
neg
mov
nop
xor
fdiv
fisttp
sbb
adc
out
fdiv
(bad)
fsub
fimul
mov
xchg
push
lea
fist
out
cmp
cwde
(bad)
sub
test
sub
pop
add
xchg
rcr
pusha
imul
sbb
cld
pop
fimul
(bad)
mov
(bad)
(bad)
dec
adc
int3
xor
leave
inc
leave
dec
sahf
das
not
nop
adc
fdiv
adc
lock
int
jnp
mov
jae
adc
scas
je
xor
mov
sub
xchg
xor
push
fcom
mov
jl
push
idiv
xchg
jo
push
les
adc
add
fs
pop
shr
sahf
in
imul
(bad)
mov
mov
rol
std
pop
mov
or
aam
ins
movs
das
xchg
push
xchg
fmul
inc
xor
outs
sbb
cmp
pushf
inc
movs
mov
cmc
mov
shl
into
pop
scas
adc
xor
iret
lods
arpl
push
push
fcom
shl
mov
xchg
pushf
pop
sahf
in
outs
arpl
int3
cli
inc
xchg
pop
scas
stc
fmul
cmp
push
inc
sti
add
jle
movs
pop
xor
mov
cmp
pop
fild
add
ror
sub
addr16
fsubr
enter
(bad)
cmps
xchg
clc
loop
shl
lahf
gs
fsub
pop
mov
or
pop
or
fdiv
les
pop
xchg
outs
ins
ins
ss
rcr
sub
dec
add
aam
out
jecxz
push
push
xchg
jo
aas
fsub
stc
scas
xchg
shl
fmul
pop
dec
pop
in
xlat
psubd
ds
aaa
sti
push
xchg
mov
fcomp
ins
ficom
loopne
mov
test
ins
fdiv
in
and
add
fsub
mov
pop
cs
sub
les
add
and
mov
lahf
int3
xor
jns
jecxz
shl
dec
loope
imul
push
or
pop
adc
fsubr
loopne
clc
jb
aam
inc
add
ins
scas
mov
je
jbe
arpl
fst
pop
aaa
fdiv
sbb
pop
ins
adc
xchg
(bad)
fdivr
mov
addr16
dec
push
xor
mov
add
cmps
retf
push
test
jnp
cmc
xor
mov
lea
adc
fcmovu
movs
xor
loope
fdivr
inc
sar
or
mov
imul
pushf
movs
mov
call
int3
jmp
pop
inc
pop
fiadd
mov
or
fstp
fcom
aas
pop
jae
sar
outs
out
stc
fisttp
es
mov
or
pushf
mov
pusha
clc
and
stos
inc
inc
jmp
pop
(bad)
fwait
imul
sub
shl
add
inc
adc
aam
adc
mov
sbb
xchg
gs
repz
fsub
jle
outs
int3
sub
in
jmp
jmp
sti
or
inc
icebp
ins
fcomp
scas
jb
aam
outs
sub
aam
jl
mov
in
mov
fcomp
fcomp
pop
stc
or
pop
jl
fadd
push
xchg
ret
fld
popf
fsubr
xor
inc
mov
fcomp
stos
je
mov
fcomp
loopne
pop
adc
outs
cmp
and
push
fadd
stos
inc
pop
mov
sbb
call
loopne
in
aam
js
inc
fdivr
rol
call
adc
jl
stos
or
inc
mov
jb
fmul
push
std
je
sbb
jle
pop
into
sbb
fmul
dec
in
rcl
stos
(bad)
pop
jl
cmovne
sti
push
pop
ficom
sbb
jmp
mov
sbb
es
inc
jo
dec
clc
mov
int3
push
movs
(bad)
ror
es
mov
ficomp
fdivr
sbb
or
xchg
mov
(bad)
jecxz
xlat
pop
pop
dec
mov
push
clc
jae
inc
push
dec
mov
sti
or
push
push
cs
fimul
rol
mov
fstp
in
sbb
mov
cmps
xchg
mov
sub
fcom
ror
adc
inc
jge
push
pop
inc
sub
jmp
pop
adc
aam
(bad)
jbe
xor
repz
dec
fdiv
neg
fwait
push
mov
fsubr
(bad)
loop
xor
jle
sbb
retf
icebp
mov
(bad)
mov
sbb
cmp
dec
and
fstp
jb
in
mov
int3
push
sub
jbe
or
(bad)
es
cmp
sahf
(bad)
fadd
int3
(bad)
cs
add
mov
lods
xor
bound
loope
push
lahf
movs
dec
in
je
mov
ret
aaa
fadd
xor
sub
pop
neg
pusha
jle
or
mov
mov
jecxz
or
fdivr
rol
ins
sub
test
sbb
(bad)
pop
mov
cmc
xchg
fimul
arpl
jp
xchg
fadd
loop
stc
sbb
xchg
add
jle
mov
lods
test
lods
mov
push
push
pop
adc
call
xor
fmul
pop
movs
stos
jmp
mov
retf
lahf
fmul
pop
sti
pop
or
bound
ds
out
mov
fmul
stc
push
icebp
mov
push
in
lods
stos
loop
adc
ss
clc
adc
sti
icebp
shl
lods
xchg
in
stos
push
scas
int3
fdiv
inc
cmps
dec
cs
jmp
lods
push
mov
adc
fcom
dec
inc
dec
fadd
jno
imul
aad
or
inc
loop
mov
mov
dec
(bad)
sti
lock
pop
mov
fisub
jecxz
inc
inc
mov
(bad)
push
and
repz
repnz
js
pop
fs
es
loopne
int
add
clc
push
fsubr
dec
mov
cmp
adc
cmp
aam
leave
call
ins
sub
popf
jge
icebp
sbb
add
hlt
mov
dec
int3
fmul
cmp
sub
imul
cmp
stos
je
das
ficomp
ror
(bad)
div
lahf
jp
mov
jle
jmp
sbb
fcomp
je
gs
sahf
leave
mov
ja
nop
rcr
les
sbb
(bad)
cmp
ins
and
push
aam
mov
push
repnz
lock
sub
pop
or
mov
scas
fsub
aas
xor
retf
fmul
fisub
pop
das
cmp
icebp
sub
dec
outs
sti
cmp
pop
jo
add
push
push
dec
sbb
rol
stos
inc
mov
fwait
push
cwde
jno
clc
stc
out
aam
outs
sbb
sbb
nop
stos
jns
cmp
or
test
sahf
fmul
inc
xchg
or
sub
aas
ds
dec
test
cmc
js
fsubr
or
jmp
sbb
loope
aam
fstp
mov
pop
sbb
dec
cmp
mov
cld
sub
or
and
mov
out
sub
rcr
pushf
outs
cli
jno
(bad)
fadd
jo
and
jecxz
jae
mov
cmp
mov
or
jmp
leave
push
mov
push
test
or
adc
add
inc
fadd
neg
call
mov
or
je
add
add
addr16
fsubr
fmul
ds
adc
popf
jmp
fsub
push
ficom
int3
add
sub
dec
shr
cli
fsub
(bad)
cdq
xor
xchg
cmp
jo
mov
or
stc
das
xchg
cli
fsubr
aad
jne
daa
mov
retf
lock
jmp
hlt
cs
das
(bad)
aaa
mov
jp
imul
leave
in
add
fs
out
fsubr
cs
(bad)
xor
call
je
sbb
xor
inc
pop
stos
(bad)
sbb
mov
or
jnp
fdivr
scas
ror
mov
adc
es
push
(bad)
cli
ins
sbb
outs
sub
js
jne
cdq
imul
mov
fwait
jp
jmp
(bad)
sub
int3
xchg
push
push
mov
int3
pop
sub
pushf
push
sbb
in
jg
icebp
dec
fsubr
das
sub
pushf
mov
fimul
or
fdivr
cs
dec
and
cwde
inc
or
and
pop
fcomp
push
dec
or
mov
jmp
clc
int
std
mov
xchg
mov
outs
lods
outs
mov
in
(bad)
inc
sub
imul
add
shr
fsubr
dec
dec
std
mov
pushf
lods
enter
sbb
pop
jb
jp
add
sti
shr
imul
and
shl
ss
adc
xor
pop
shr
and
aam
mov
pop
pop
mov
pop
dec
stos
rcr
les
add
mov
pop
jo
fsub
mov
stos
call
test
stc
fisttp
cmp
pop
retf
add
nop
or
ja
push
xchg
fdivrp
fdivr
dec
jne
mov
jmp
addr16
loopne
shl
mov
pop
fisub
push
mov
mov
popf
stc
dec
or
(bad)
rol
fdiv
lods
and
(bad)
sahf
(bad)
jl
or
sub
cmps
pop
push
add
enter
dec
leave
(bad)
lods
pop
inc
mov
int3
jge
aas
sti
pop
ins
cmp
cmp
adc
nop
push
cmp
jmp
sar
mov
pop
add
dec
imul
or
aam
mov
adc
addr16
sub
jmp
mov
jbe
pop
dec
mov
add
dec
add
fcomp
outs
ins
adc
fsub
lea
in
or
sbb
movs
mov
mov
mov
sar
cmc
sbb
mov
(bad)
xchg
or
xor
mov
fadd
jle
pop
inc
retf
cmp
ficom
fiadd
and
jge
jmp
jae
push
rcl
fcom
sahf
pop
out
(bad)
call
movs
cs
ins
mov
lahf
pop
sub
aad
sub
(bad)
mov
xchg
cmp
ret
add
mov
repnz
ret
icebp
pusha
out
int
lods
(bad)
ins
out
mov
shl
mov
cs
jmp
push
and
mov
pop
jb
sbb
mov
mov
rsm
aad
mov
(bad)
fcomp
imul
sbb
stos
fisubr
in
sub
mov
sub
inc
cmp
sbb
fcomp
mov
call
add
call
xor
add
popf
or
fcom
out
int3
sti
call
pop
iret
int3
push
mov
cmp
(bad)
push
in
int3
sbb
push
es
fisubr
pop
mov
ins
aad
lods
jge
rcr
sahf
cmp
fidivr
sub
in
stc
jnp
rcl
or
jne
fldcw
xor
inc
stos
sar
add
fdiv
mov
fcomp
lods
lahf
dec
cmps
pop
mov
dec
aas
inc
cmp
sti
jbe
int3
xchg
fadd
jmp
mov
lea
jns
jmp
or
sbb
in
fsubr
fwait
dec
fdiv
(bad)
sub
sub
paddq
shl
pop
imul
jmp
push
mov
fsubr
inc
xor
nop
aad
lods
sysret
and
idiv
dec
call
shl
aad
fsub
(bad)
(bad)
fmulp
sbb
int3
adc
push
es
or
pop
loopne
fsubr
xchg
push
jecxz
xchg
or
imul
fnstcw
(bad)
inc
aad
pop
fist
out
mov
pop
fs
xchg
and
pop
rol
call
sub
sbb
and
mov
arpl
xor
shr
add
leave
inc
jge
fmul
mov
je
mov
int
fsubrp
jmp
dec
fnsave
cmc
cmps
(bad)
shl
mov
or
add
fsubr
out
mov
movs
fcom
sbb
mov
arpl
pop
or
lods
enter
push
(bad)
fiadd
mov
or
sti
mov
fsub
adc
jmp
jbe
pop
fdivr
add
fcom
mov
cmp
or
(bad)
popf
div
imul
in
dec
jnp
outs
add
inc
int3
dec
scas
stc
cmp
fimul
retf
jp
gs
std
jmp
retf
shr
fwait
repnz
or
push
not
adc
push
add
ret
jg
dec
add
nop
leave
dec
rol
sti
out
sti
mov
xor
mov
call
fcom
lea
inc
iret
fst
neg
hlt
mov
mov
push
loope
mov
cmp
push
cli
or
add
cmp
lods
sbb
aad
ins
jbe
ins
(bad)
xchg
lock
fs
jl
aam
mov
pusha
xchg
mov
call
pop
sti
add
dec
mov
sub
mov
mov
lods
dec
push
cmp
pop
fcomp
fdivr
push
lahf
shr
push
jo
mov
pop
mov
lods
lods
inc
jae
fdivr
or
cmp
fcomp
sbb
xchg
jmp
(bad)
push
and
rcr
mov
cmp
imul
xlat
cmp
push
repnz
pop
ins
repz
jmp
dec
fdiv
xor
mov
test
jns
adc
addr16
lods
call
push
pop
push
call
ins
fst
stos
jmp
mov
inc
and
(bad)
sti
push
aad
into
(bad)
xor
pop
bnd
(bad)
push
push
sub
or
adc
mov
dec
push
dec
dec
push
loope
cmp
adc
xor
ins
mov
sub
pop
(bad)
outs
sub
xor
fadd
mov
sub
fwait
shl
imul
lahf
fadd
jmp
sub
cmps
mov
(bad)
aas
jbe
push
xor
cmps
test
push
push
jnp
pop
lods
fldcw
sub
fmul
(bad)
std
hlt
ins
xchg
inc
lods
add
ror
rcr
pop
lock
iret
and
retf
fdivr
push
and
pop
pop
shr
pusha
cdq
sti
sub
mov
cmp
out
jnp
loopne
or
jb
or
dec
out
fsubr
cmp
fsubr
std
jge
dec
hlt
sar
push
in
fsub
dec
fisubr
pop
mov
jle
mov
cmp
xchg
or
lods
pop
out
pop
or
call
and
jno
out
ficom
push
pop
mov
cmp
fsub
cmp
mov
daa
and
dec
clc
test
repz
loop
movs
add
jge
popf
add
or
jae
sti
sti
inc
jb
mov
adc
and
jmp
test
add
mov
dec
fmul
xor
ins
lods
pop
dec
sub
sbb
sbb
mov
sub
fsubr
mov
scas
adc
xor
clc
add
fwait
mov
mul
cmp
add
(bad)
fcom
icebp
jo
outs
pop
jg
jmp
sub
xchg
sub
(bad)
in
pop
mov
sbb
outs
mov
in
neg
(bad)
or
pop
shl
call
and
out
scas
pop
mov
push
fcomp
sbb
or
sub
jmp
test
mov
push
lods
pop
loopne
pusha
in
sub
xor
push
lods
daa
paddusb
jecxz
(bad)
fsubr
(bad)
inc
(bad)
mov
or
pushf
lahf
mov
jmp
or
popf
mov
cmp
ins
jl
xor
mov
jmp
mov
imul
push
dec
fcmovnu
pop
sti
dec
fstp
sbb
jp
adc
mov
sbb
ficomp
ins
fadd
pop
cs
or
lods
or
or
or
int
fsubr
add
push
mov
lods
popf
imul
(bad)
fsub
in
lock
cs
sahf
pop
sti
(bad)
shl
mov
inc
mov
in
fcom
ins
jae
or
ds
sbb
popf
(bad)
aam
dec
mov
pop
adc
fadd
xchg
cmp
or
mov
sbb
loopne
mov
mov
mov
push
or
adc
bound
stos
xor
movntq
out
push
sub
sub
(bad)
(bad)
sbb
add
gs
pop
sub
call
add
popf
sbb
dec
sahf
pop
jle
fmul
stos
dec
jge
mov
push
std
fsubr
push
sbb
jmp
shr
fcomp
or
sub
call
cli
or
lahf
sbb
sbb
in
inc
sbb
lods
and
or
push
sbb
daa
adc
ins
cmp
fst
(bad)
sahf
sub
sar
xchg
dec
fdivr
pop
dec
jmp
sar
out
or
mov
mov
int3
dec
mov
mov
ds
fsubr
inc
sub
lock
enter
popf
jb
or
jmp
sti
sub
add
xchg
(bad)
lods
mov
fimul
cdq
cmp
lea
(bad)
mov
pop
fsubr
iret
or
js
adc
push
mov
rol
sbb
mov
pop
push
push
pop
adc
jo
inc
sbb
cld
std
fdivr
(bad)
sahf
cwde
mov
jmp
jge
jp
outs
sub
test
sub
jg
push
icebp
sbb
mov
sub
fnstcw
mov
mov
pop
faddp
mov
fsub
adc
cmp
mov
std
sub
push
fdivr
mov
xchg
lods
outs
push
pop
fsubr
fwait
or
pop
jmp
int
cmp
mov
fwait
pop
sti
adc
mov
ror
pop
sub
dec
test
pushf
ins
into
retf
sub
fucomp
call
push
mov
cmp
mov
cmp
xchg
adc
fsubr
scas
sub
mov
std
mov
ret
and
fisttp
sti
popf
cdq
ror
jmp
push
cmp
pop
retf
repnz
mov
es
ds
and
pusha
jns
jle
outs
dec
pop
pop
fsubr
aad
ins
iret
jp
cmp
stos
cmp
rcr
stos
ins
scas
dec
outs
test
push
dec
pop
cmp
test
loope
jmp
aas
sbb
mov
pop
ins
jl
push
ins
or
jo
(bad)
pop
and
(bad)
fldcw
neg
xor
popf
fsubr
xchg
mov
sti
bndldx
std
jl
mov
sub
cmp
shr
jmp
mov
mov
ins
lock
into
pop
pop
dec
popf
pusha
jle
cmps
das
push
pop
mov
lods
inc
aas
sub
fist
ins
pushf
enter
movs
pop
iret
and
pop
rol
sub
hlt
inc
sahf
int3
das
in
xchg
sahf
(bad)
cmp
add
nop
dec
cli
pusha
sub
push
popf
movs
add
push
jle
push
fist
or
rcr
jmp
jmp
cmp
dec
popf
fmul
stc
mov
fmul
and
fistp
pop
mov
popf
fsubr
cli
jl
lahf
mov
sbb
aam
enter
faddp
ret
sbb
sub
jl
mov
push
push
fadd
lea
mov
pop
por
cmp
sub
fcom
imul
cmp
mov
mov
cmp
sbb
aam
jmp
sti
fmul
pop
popf
sbb
dec
outs
stos
push
cmp
fldenv
(bad)
neg
add
sbb
jecxz
or
int3
ds
lahf
ins
sbb
clc
sub
das
sar
cld
lahf
jle
mov
jns
cmp
js
jge
stos
stos
mov
paddsw
outs
out
mov
lods
cld
mov
or
jge
fdivr
dec
jp
or
inc
mov
sti
scas
popf
xchg
sar
lods
stos
int
inc
mov
jnp
ds
cli
test
and
test
fsubr
retf
dec
sbb
inc
dec
cmp
mul
ds
(bad)
sbb
push
or
or
jle
(bad)
dec
shr
mov
inc
in
aad
lods
dec
sbb
and
xchg
adc
daa
mov
bound
nop
test
mov
ins
in
inc
loopne
sub
push
mov
xor
stos
or
aas
cmp
mov
lahf
jp
shl
pop
jo
mov
shl
mov
mov
mov
or
jmp
lea
jp
sub
fsubr
pop
sti
jmp
cs
cmp
jge
out
pusha
fmul
push
fsubr
pop
or
dec
mov
cmp
aas
ds
iret
data16
cld
pop
fadd
lds
stos
fmul
jp
imul
inc
test
cli
jge
mov
sbb
fcmovbe
ins
pop
jmp
jo
or
loop
lods
cld
int3
dec
in
pop
sbb
adc
int3
out
pop
cmp
sar
lods
icebp
lea
daa
jmp
push
pop
pop
das
cmp
shr
pushf
dec
aam
push
mov
into
test
mov
pop
jecxz
fsubr
fcomp
cdq
retf
fldcw
into
dec
popf
sti
dec
jo
sub
cmp
or
add
push
cmp
fdivr
jge
fsub
push
nop
rcr
(bad)
std
dec
aam
das
sub
mov
fsubr
fstp
jnp
jmp
fdivr
loope
sbb
mov
or
sbb
jo
or
jnp
or
or
ins
fdivr
mov
jmp
xlat
and
dec
sub
cmp
mov
pop
sti
fnstsw
(bad)
lods
sub
mov
cs
cmp
out
pushf
jl
(bad)
adc
fadd
stos
jg
sbb
ins
sub
retf
jecxz
sub
sbb
dec
xchg
bound
pop
popf
ds
and
pop
(bad)
mov
or
push
mov
das
dec
and
lock
push
pop
aaa
aas
(bad)
cli
jmp
fdiv
call
fcom
push
std
pop
add
aaa
cs
stos
shl
sti
add
jne
fcomp
lea
mov
or
jl
adc
dec
retf
cli
call
retf
(bad)
push
int3
mov
jnp
jl
push
loopne
or
mov
int
mov
fdivr
mov
cli
fsub
sbb
fs
clc
out
pop
aad
cs
lea
mov
test
dec
outs
push
test
push
int3
in
jmp
push
repz
mov
sbb
pop
ins
popf
bound
fadd
leave
stos
mov
or
nop
mov
push
cmp
mov
stc
shr
mov
pop
pop
loope
fsubr
mov
or
dec
sbb
ds
rcr
sub
fdivr
inc
mov
add
call
mov
xor
stos
into
fimul
(bad)
stc
pop
std
jnp
jmp
ds
sub
fcomp
fwait
mov
retf
lods
jnp
mov
ds
into
mov
popf
nop
mov
retf
dec
mov
cmp
jmp
aaa
int
mov
sub
mov
ds
scas
cmp
lods
mov
pushf
repnz
fisub
int
mov
sahf
stc
(bad)
cmps
push
clc
mov
fs
sbb
fiadd
ins
popf
aaa
jb
sar
sbb
fsub
pop
push
popa
daa
dec
jmp
fmul
sub
jle
pop
dec
jmp
cwde
(bad)
fisub
outs
sbb
cmp
lods
mov
out
jmp
leave
fisub
pushf
mov
rol
xchg
or
sbb
push
sbb
dec
dec
lods
mov
call
dec
test
ret
sbb
sub
hlt
cmp
sbb
int3
int3
pop
lods
pop
out
cld
lahf
dec
(bad)
fdivr
cdq
fstp
stc
sahf
jmp
dec
sub
(bad)
std
mov
push
ins
les
aad
pop
out
cmp
call
(bad)
sub
cmp
popf
mov
dec
lods
imul
and
pop
mov
ds
icebp
out
lods
jo
fmul
mov
dec
cld
push
cli
xchg
repnz
jb
or
(bad)
test
fidivr
sub
or
pushf
push
or
scas
jl
sub
adc
mov
popf
pop
pop
sbb
inc
fadd
(bad)
jle
sbb
push
fidivr
fwait
and
mov
sub
mov
cmp
fst
pop
call
enter
jge
ins
xor
mov
stc
dec
cmp
mov
stos
outs
into
je
sahf
ins
cld
cmp
js
or
xor
push
repnz
push
jge
leave
fmul
dec
sahf
jg
jbe
sbb
repz
retf
outs
sbb
mov
add
(bad)
sub
or
jno
div
sbb
pushf
and
(bad)
icebp
aam
mov
pop
add
lods
dec
(bad)
jg
fstp
dec
mov
or
fdivr
stos
lods
pop
fild
push
in
mov
jl
(bad)
cld
mov
cmp
fisubr
out
pop
movs
pop
jmp
ret
push
adc
lods
sbb
mov
stos
mov
int3
mov
dec
jl
fstp
lahf
test
loope
push
or
mov
mov
sbb
(bad)
mov
mov
cmp
ficomp
fsubr
sub
lods
imul
or
retf
push
mov
ins
in
movs
lahf
outs
cdq
push
inc
or
fisubr
sub
jb
jl
add
push
retf
dec
fnstsw
std
in
sbb
jmp
popf
mov
sub
sbb
(bad)
aam
fsubrp
add
cmp
fs
stc
rcl
lock
fidivr
cmc
mov
mov
push
fdivr
stos
pop
cmp
xchg
dec
mov
sub
(bad)
jmp
ds
cmp
int3
pusha
xlat
(bad)
push
jnp
shl
stc
fdivr
fcmovu
sbb
cmp
fmul
test
cwde
dec
(bad)
(bad)
in
ds
xor
pop
lock
and
lds
fsub
jl
scas
fwait
lahf
sbb
gs
cmc
int3
je
in
jp
retf
mov
pushf
cmp
bound
pop
fisubr
fdivr
pop
mov
lods
dec
mov
or
adc
pushf
iret
dec
push
pop
fstp
fucomi
nop
or
int3
cmp
out
sbb
xchg
pop
mov
loop
fsubr
scas
iret
push
clc
or
lock
mov
sbb
inc
xchg
pop
cmp
ins
call
retf
fld
cld
jmp
mov
cvtpi2ps
aam
or
das
dec
jp
int3
sbb
sbb
dec
rcl
pusha
dec
ins
call
cmp
push
(bad)
sar
mov
imul
cmp
dec
fisttp
in
push
sbb
mov
dec
aam
cmp
jle
dec
pushf
rcl
outs
scas
cdq
rcl
cs
sbb
dec
adc
inc
fsub
jp
mov
fwait
shr
sahf
sbb
fmul
lods
xlat
cld
scas
mov
in
sti
retf
lahf
dec
shr
nop
mov
push
pop
jns
test
mov
add
ins
pusha
lahf
jmp
and
push
mov
push
ds
jge
pop
fucomp
jl
mov
lods
pop
pop
fcomp
fwait
lea
push
jl
aad
int3
ds
leave
out
dec
pop
sub
pop
mov
dec
adc
xor
fdivr
(bad)
idiv
neg
pop
lahf
cmp
mov
int3
jmp
ds
movups
cmp
cmp
(bad)
mov
jg
lods
fimul
or
rcr
sub
xchg
movs
pushf
int3
jmp
sahf
minps
dec
jg
jge
loope
int3
fwait
lods
(bad)
cmp
xor
dec
jnp
stos
ins
out
popf
imul
cmp
aas
test
cmp
sub
das
sub
and
fmul
jmp
pop
cmp
in
fst
call
sbb
int3
xchg
ins
fidivr
jmp
fbstp
shr
mov
into
jnp
aam
(bad)
fsubr
xor
popf
cmp
jg
test
shr
(bad)
fmul
dec
dec
iret
sbb
pop
ds
clc
jp
pop
adc
fcmovnu
lods
pop
sbb
(bad)
int3
xor
push
xor
pop
ins
cmp
(bad)
scas
fdivr
xchg
push
jmp
(bad)
ror
lods
stc
push
fucomip
sti
into
push
jns
imul
arpl
mov
ficom
pop
or
call
jnp
ins
(bad)
fistp
dec
mov
stos
das
lods
inc
jne
mov
push
into
dec
ror
mov
test
cmp
scas
fisubr
xchg
fisttp
inc
cli
std
clc
fstp
inc
sub
aas
cmp
push
jge
mov
out
or
mov
add
sbb
fwait
nop
cmp
test
(bad)
and
test
sbb
or
neg
std
mov
sbb
pop
xor
fdivr
sbb
pop
sti
sub
mov
or
clc
sub
push
jecxz
(bad)
cmp
std
fstp
sahf
call
pop
push
pop
sub
jle
pushf
fnsetpm(287
test
lea
sub
mov
fcmovnb
jmp
or
ficomp
stos
movs
fsubr
mov
sti
cld
add
fisub
ins
xchg
das
dec
retf
lea
popa
mov
fs
ja
lods
popf
sub
fsubr
sti
sbb
fadd
dec
call
cmp
or
pop
jmp
dec
rcr
mov
rcr
jmp
mov
test
dec
stos
lods
or
fmul
sbb
push
jl
sar
stos
dec
in
fwait
dec
pop
xor
jmp
adc
mov
or
sub
ins
cmp
cmp
sub
cli
dec
aam
jo
dec
push
pop
(bad)
into
add
dec
xlat
sub
cmp
pushf
push
inc
(bad)
mov
or
adc
mov
mov
sbb
fimul
rcr
stos
(bad)
sbb
mov
fld
cs
imul
scas
sar
push
xchg
push
clc
jo
or
pop
xor
dec
xor
xor
pop
into
popf
or
xor
xchg
and
jno
fsub
das
mov
dec
lods
mov
into
(bad)
fistp
jmp
push
fadd
or
sub
ror
push
fisubr
mov
sub
cmc
mov
jmp
or
mov
in
mov
retf
dec
enter
(bad)
mov
fisub
aam
lods
and
pop
imul
jecxz
or
and
outs
dec
int3
xchg
call
scas
jge
into
(bad)
(bad)
aaa
ins
xchg
pop
fdivr
mov
cdq
mov
jmp
pop
dec
adc
sti
cs
jg
(bad)
in
stc
mov
clc
pop
mov
int3
lea
jg
xor
adc
mov
mov
pusha
sahf
lea
mov
jp
imul
les
pop
dec
fidivr
and
fdiv
(bad)
(bad)
jmp
shr
fsubrp
fcom
fadd
(bad)
jo
shr
push
dec
lods
cli
dec
sub
dec
mov
test
aam
or
add
jle
mov
mov
ficom
ins
std
push
cmp
mov
jno
lods
retf
neg
pop
nop
push
push
jmp
xchg
pop
jmp
ror
fsubr
mov
stos
cli
push
lock
(bad)
sub
das
jmp
lods
out
call
das
imul
add
(bad)
getsec
pop
push
test
stos
call
fdivr
pop
add
ins
adc
sbb
or
sbb
fimul
(bad)
test
fcom
lods
pop
sahf
or
out
jmp
sub
push
mov
cvtps2pd
or
jmp
jp
sar
jmp
jmp
lods
in
lods
(bad)
sbb
pop
call
std
pop
or
dec
mov
lea
add
sbb
sti
fdivr
btc
or
jmp
fdivrp
pop
mov
(bad)
fdivr
add
mov
aas
mov
sahf
cmp
ins
(bad)
stc
pop
dec
or
mov
leave
rcl
jmp
cld
or
fcomp
sub
js
stos
cmp
pop
xor
pop
in
mov
lods
dec
pop
in
sti
shl
fldcw
int3
dec
jge
pop
(bad)
into
pop
int3
ds
mov
retf
sbb
xlat
popf
into
(bad)
mov
imul
ficomp
pop
pop
adc
or
imul
ins
popf
pop
fsubr
fstp
pop
fmul
cmp
cld
stos
lods
gs
int3
fwait
in
jnp
fmulp
sub
imul
mov
or
cwde
mov
fldcw
(bad)
jns
(bad)
lea
shr
or
inc
jmp
aas
cmp
mov
jmp
stc
std
int
imul
popf
sub
fadd
into
dec
and
out
sbb
mov
jmp
shl
not
fmul
sbb
pop
(bad)
sbb
out
stc
lods
pop
cs
cli
cmp
push
int3
ins
pop
iret
popf
jmp
ins
push
jge
adc
(bad)
scas
dec
mov
(bad)
loope
cmp
push
lods
jmp
jl
sbb
mov
ins
test
jp
pop
jge
retf
xchg
loope
shr
fstp
ror
call
fsubr
pop
dec
pop
int
sbb
ds
sub
outs
fdivr
pop
or
clc
scas
repz
xchg
dec
stos
rol
sbb
mov
cs
pop
pop
cs
jmp
mov
ins
fsubr
in
pushf
std
sti
cmp
pop
js
inc
dec
or
sub
mov
test
cs
int3
mov
adc
mov
call
lods
push
cld
jl
or
mov
jp
dec
pop
fdivr
pop
fnstsw
popf
outs
sar
lods
neg
sahf
imul
sbb
jns
sar
add
adc
not
mov
pop
dec
mov
mov
jmp
fstp
sub
or
cmp
lock
rol
pop
jmp
imul
nop
jmp
jl
or
and
fdivr
jmp
pop
xchg
out
push
imul
popa
or
sub
lods
push
add
rcr
mov
fdivrp
jo
mov
cmp
aam
scas
dec
call
xor
mov
and
mov
cwde
das
pop
jl
push
push
stos
sub
ins
out
cmp
and
jl
or
ins
lea
jle
jl
(bad)
outs
add
sbb
stos
dec
fucomi
cs
inc
(bad)
sub
sbb
cli
dec
push
mov
pop
sub
fs
or
mov
pusha
cs
lods
shr
fldl2e
sbb
xor
pop
int3
in
adc
mov
popf
adc
add
fcmovnb
lea
mov
into
cmp
ins
mov
cdq
lock
sub
(bad)
mov
push
imul
sub
pop
sbb
ins
xor
sub
fld
mov
mov
push
outs
mov
mov
pop
or
push
(bad)
mov
shl
retf
call
or
fnstsw
push
fistp
pop
pop
shr
imul
retf
mov
lea
jmp
stos
stos
call
mov
fcomp
cmp
das
mov
std
mov
arpl
shl
scas
repz
sahf
add
lods
sbb
sbb
dec
pop
pop
aad
and
ror
sbb
fmul
pop
pushf
fsubr
aas
stos
into
sub
mov
dec
retf
jmp
jmp
mov
test
fsubr
std
loopne
das
mov
sub
sbb
ins
jno
cld
je
push
nop
pop
pushf
or
rol
das
sbb
ins
pop
cmp
or
sahf
pop
pushf
inc
fdivr
dec
mov
fcmovnu
or
pop
mov
push
dec
push
dec
int3
scas
or
mov
pop
fldz
mov
fucomip
lods
or
sahf
sbb
(bad)
imul
lock
in
mov
js
int
dec
sahf
retf
and
shr
push
mov
xchg
push
sbb
push
fcomp
cmp
cld
sub
lods
dec
mov
dec
clc
sti
mov
or
or
cmp
jnp
(bad)
jp
(bad)
retf
pop
jle
push
in
jmp
(bad)
fcomp
inc
pop
out
imul
push
sbb
int
retf
aam
jnp
jo
sar
or
cld
fisubr
fwait
cmp
mov
pop
push
sub
lods
pop
int3
mov
mov
ins
(bad)
retf
jnp
push
sti
ins
dec
jnp
mov
pusha
cdq
xchg
dec
in
mov
pop
mov
jnp
int3
lods
outs
sub
dec
scas
and
jae
fistp
sti
dec
jmp
fcmove
push
aaa
lods
pop
inc
stc
sti
inc
jnp
in
or
dec
lea
mov
sub
pop
ins
jnp
pop
push
xchg
cld
mov
fbstp
adc
cmp
popf
pop
jg
(bad)
pop
into
fcomp
std
push
dec
xor
jl
sub
sti
cld
add
outs
sub
fcom
scas
stos
std
or
pop
pop
sbb
mov
sahf
frstor
(bad)
jmp
cmp
rcr
lahf
sbb
pop
in
push
cld
lods
cmp
ins
jg
sbb
loop
std
stos
lods
in
push
mov
fisttp
xor
sahf
pop
push
adc
sbb
stos
pop
int3
jmp
popf
das
jnp
push
mov
pop
adc
cmp
jge
jmp
fist
inc
sub
jge
and
push
or
jnp
push
cmp
cmp
pop
in
lea
dec
mov
call
sar
into
jmp
cmp
mov
(bad)
int3
dec
jnp
jle
ds
(bad)
mov
jl
mov
xor
sar
mov
or
inc
jge
neg
mov
inc
sub
mov
ins
retf
mov
pop
test
push
dec
in
lods
sbb
fcomp
mov
inc
outs
fwait
xlat
dec
mov
ror
push
jmp
jl
retf
(bad)
dec
ins
jge
jl
dec
mov
dec
mov
pop
fimul
mov
inc
sbb
(bad)
es
popf
mov
inc
push
sub
rcr
cli
dec
push
and
in
jae
mov
into
int3
(bad)
sti
sbb
mov
pop
in
jge
dec
or
sub
(bad)
fsub
sahf
lods
jmp
cmp
pusha
push
jo
(bad)
int
(bad)
mov
ins
rcl
aad
pop
sbb
call
jnp
sub
lods
dec
mov
out
cmp
mov
pop
lods
push
ins
(bad)
(bad)
loop
push
mov
jb
xor
retf
xchg
mov
outs
jl
ret
cli
cmp
pop
sub
pop
lods
jno
jmp
cmp
in
ror
push
sub
jnp
sahf
(bad)
shr
push
ds
cs
outs
fwait
jae
lods
stos
push
dec
lea
scas
mov
out
enter
rcr
jg
fistp
int3
sbb
lods
dec
jnp
xor
jp
pop
jmp
stos
pop
cli
sub
cmp
mov
mov
sbb
stos
sbb
shl
or
mov
jmp
popa
sbb
jle
dec
push
sub
scas
bound
repnz
aam
or
jnp
ins
pop
jp
outs
jo
ret
sar
jmp
vaddsubps
cdq
or
xor
das
shr
call
cmps
lods
outs
imul
lods
fsubr
jp
les
sahf
retf
stos
cs
ja
mov
jnp
mov
lods
enter
adc
int3
push
mov
sub
mov
das
xchg
mov
movs
adc
mov
ss
(bad)
sub
dec
jl
fs
fwait
imul
push
jbe
mov
aaa
sub
xchg
or
push
enter
jbe
dec
jmp
fidivr
mov
ja
cmp
cmp
aam
enter
cvtps2pi
sahf
sbb
sbb
mov
cmp
pop
ret
outs
(bad)
xor
fstp
mov
shr
pop
outs
mov
fistp
clc
call
ds
aam
imul
aas
into
jnp
ins
in
pusha
(bad)
jmp
inc
jge
push
jle
shl
push
pop
mov
sub
into
dec
sub
lock
cmp
call
add
jp
icebp
cs
ins
dec
out
out
retf
sar
inc
or
mov
jl
test
(bad)
(bad)
fisttp
lods
sahf
mov
movs
(bad)
jle
call
pop
lea
(bad)
in
call
outs
lods
pop
or
xchg
stos
mov
lods
fcomp
dec
dec
pop
push
call
fimul
pusha
ins
push
sub
scas
outs
mov
cmp
pushf
outs
fxch
jl
aas
loop
jmp
stc
aad
dec
mov
pop
cmps
rcl
mov
out
ins
data16
sbb
mov
int3
push
dec
sub
mov
sar
push
xchg
ins
sub
outs
cld
sub
add
and
fsubr
sbb
icebp
push
adc
retf
mov
imul
hlt
fwait
loop
fcom
sub
and
cli
in
fcmove
dec
fdiv
cmp
or
dec
sub
cmp
add
outs
jl
mov
pop
jnp
sti
iret
lods
loopne
jmp
sti
jmp
clc
dec
(bad)
xchg
int3
dec
ins
jge
outs
retf
jmp
movs
popa
cmp
jge
sub
pop
pop
sbb
or
int3
sbb
dec
stos
jle
outs
scas
cmp
cmp
pop
cs
mov
push
popf
add
out
inc
lods
mov
or
push
das
mov
jle
dec
cmp
sbb
int
fisubr
jg
and
outs
jmp
mov
inc
sub
cld
mov
mov
sar
int
mov
fisttp
dec
pop
mov
xor
loopne
push
fstp
adc
nop
rol
xlat
or
jmp
jge
fisttp
fisttp
ds
inc
xor
aam
ds
dec
cli
jl
popf
call
mov
push
cld
int3
add
test
or
mov
lea
imul
xor
jle
rcr
retf
jo
push
push
add
jnp
fwait
outs
int
ficomp
(bad)
sbb
mov
cs
mov
adc
inc
xor
sub
int3
into
imul
lds
jp
lea
or
cmp
test
int
inc
dec
sbb
movs
ficom
jmp
sbb
or
mov
jmp
dec
call
inc
out
jge
jecxz
or
sbb
stos
jge
pop
lds
dec
retf
pop
(bad)
dec
and
das
jmp
call
int3
test
loope
into
std
mov
mov
lea
pop
sbb
rol
sahf
int3
fisubr
dec
rcl
sti
cld
dec
pop
fwait
add
push
fdiv
in
jmp
pop
sub
mov
ins
in
ds
inc
pop
or
into
cs
cmp
mov
push
jp
fwait
lea
push
dec
jle
(bad)
cmc
popf
sbb
mov
aad
fisttp
stos
mov
int3
ds
sbb
das
fisubr
fwait
dec
jge
dec
dec
or
adc
mov
dec
sahf
sbb
jg
loop
int3
fisubr
mov
fs
in
cmp
fs
mov
cmp
mov
fwait
push
fsubr
daa
mov
and
mul
retf
ds
dec
mov
retf
stc
fnsave
popf
fimul
sti
sbb
jns
push
cs
sbb
fwait
mov
xchg
mov
loopne
imul
leave
sbb
(bad)
cmp
add
or
(bad)
stos
leave
jl
push
or
adc
retf
fidivr
in
popf
cs
imul
xlat
cmp
jmp
xlat
sbb
lea
popf
cli
xor
sbb
jnp
std
mov
lahf
fidivr
xor
pop
mov
push
push
(bad)
retf
cmp
cs
adc
mov
or
mov
mov
(bad)
jnp
lods
nop
movs
dec
popf
cmp
cli
into
js
retf
mov
mov
push
iret
fwait
in
mov
ret
gs
add
cld
int3
push
das
or
jge
retf
mov
shl
cli
jl
cmp
xchg
mov
test
xor
dec
ins
cmp
(bad)
xchg
(bad)
addr16
or
mov
nop
stos
cmp
popf
push
sti
sub
jle
or
inc
out
lods
cli
sbb
sub
lods
push
inc
cmps
fst
pop
and
mov
or
repz
or
imul
pop
clc
das
movs
inc
retf
call
dec
sub
pushf
sbb
fst
mov
sbb
fidivr
call
nop
fs
aam
push
imul
cwde
enter
aas
mov
jl
fucom
sbb
push
inc
sbb
jmp
pop
push
mov
outs
addr16
cmps
fnstsw
pop
mov
jl
fisubr
enter
xchg
jge
fnstenv
in
mov
outs
fidiv
pop
xor
mov
data16
mov
mov
ins
mov
mov
pushf
add
ficom
std
into
push
aas
push
aaa
enter
dec
mov
stos
dec
push
mov
jmp
jge
jmp
ins
retf
test
ret
pop
mov
xchg
sbb
not
and
mov
fdivr
cli
mov
les
sbb
ds
mov
out
dec
clc
sub
pop
sti
mov
jmp
addr16
cmp
(bad)
or
imul
test
int
sbb
and
ficomp
sar
les
mov
xlat
lods
mov
fs
cld
mov
adc
ds
xor
arpl
sbb
sbb
loopne
fdiv
in
mov
sbb
and
cmp
add
sbb
lods
arpl
cs
lods
in
retf
lock
mov
push
xor
dec
leave
xlat
je
fwait
in
push
jl
iret
sub
enter
fmul
xor
out
inc
jl
pop
pop
mov
(bad)
mov
cmp
int3
mov
fcmovnbe
adc
sahf
sbb
push
sar
outs
or
fst
in
mov
and
in
stos
xchg
sbb
mov
shr
mov
jmp
fnsave
mov
jge
jl
and
adc
not
dec
or
int
cmp
popf
pusha
dec
in
sub
or
mov
mov
mov
dec
and
fsubr
jl
lahf
gs
fimul
ret
cmp
jb
rcl
push
push
pop
jge
pop
scas
lods
int3
cmp
jns
int
aaa
or
enter
cld
push
fcmovnbe
popf
movs
aam
xchg
nop
jl
or
pushf
mov
stos
pop
imul
mov
lods
mov
(bad)
add
mov
sbb
mov
xchg
ins
mov
sbb
pusha
lea
mov
xchg
outs
or
fstp
mov
push
xor
sub
mov
mov
nop
(bad)
jo
push
(bad)
(bad)
jge
aas
jecxz
mov
cmp
ret
mov
out
stos
mov
mov
sbb
in
push
mov
and
mov
dec
and
ins
dec
lea
jl
arpl
clc
mov
loop
push
push
retf
adc
inc
adc
mov
les
dec
sub
adc
pop
(bad)
lock
adc
mov
fidiv
ins
pop
retf
push
adc
or
push
bound
fwait
enter
jge
cmps
sbb
push
sub
dec
in
popf
xchg
pop
inc
pop
xchg
mov
in
retf
push
mov
int3
int
or
mov
pop
addr16
ins
or
retf
aam
cmp
or
pop
lea
arpl
or
clc
mov
lock
gs
or
lods
sbb
jp
cmc
fcmovu
(bad)
fnsave
mov
mov
loope
in
jle
movs
xor
repnz
test
int3
xor
jmp
cwde
mov
inc
dec
jmp
pop
adc
std
test
xchg
arpl
les
mov
pop
mov
xchg
or
mov
jnp
nop
sbb
rcr
loope
sub
inc
mov
jnp
add
cmps
push
or
lods
jbe
push
(bad)
lahf
adc
pop
popf
jb
and
pop
or
stos
pop
dec
mov
call
js
rol
mov
shl
cmp
inc
jns
loopne
sub
lods
pop
jne
sti
mov
or
adc
div
sub
ror
ss
dec
in
fcom
pushf
dec
inc
dec
aaa
lock
add
fistp
lock
js
inc
std
clc
or
pop
loop
cmp
in
adc
pop
or
std
(bad)
(bad)
push
inc
into
es
mov
jnp
in
jmp
retf
enter
cld
mov
daa
mov
pop
je
cmp
ins
dec
inc
push
in
scas
mov
sahf
ins
mov
enter
pop
dec
xchg
pop
sub
loope
mov
push
and
pop
cld
pandn
sbb
imul
cwde
and
fwait
inc
sub
push
out
repz
xchg
jmp
sbb
(bad)
push
(bad)
xchg
pop
int
adc
idiv
sbb
iret
pop
adc
dec
sub
pop
jnp
fs
xor
leave
lods
mov
std
mov
mov
fild
cmc
push
and
sbb
hlt
jp
stos
call
sahf
idiv
sbb
cmp
sub
test
aas
ins
je
pop
jl
cmc
mov
sahf
mov
jle
sbb
pop
loop
in
push
jnp
scas
jae
sbb
push
ins
pop
jno
inc
int
fisub
js
jp
push
push
push
mov
cmp
adc
retf
cdq
dec
xchg
(bad)
mov
inc
mov
je
int
cwde
pop
fidiv
mov
jne
mov
sub
mov
lahf
call
int3
push
ss
inc
push
outs
jnp
int
push
fstp
cdq
ins
pop
fld
inc
repz
push
cwde
sub
sub
lock
lods
dec
mov
fsub
in
pop
jp
mov
cmp
xor
cmp
shl
adc
adc
(bad)
jne
pop
mov
push
sbb
xor
sar
or
repz
sti
pop
ja
mov
pop
nop
jns
sub
fwait
repz
add
and
and
jo
push
(bad)
dec
cmp
xchg
mov
fcomi
sbb
enter
cmp
push
mov
xlat
loop
dec
or
daa
or
and
addr16
pop
xchg
dec
lea
push
test
sbb
cdq
sub
aam
mov
ja
idiv
xor
fs
adc
xor
cmp
stos
lahf
mov
ja
call
or
in
bound
sub
mov
dec
mov
rcl
jge
clc
pop
jne
xor
xchg
jp
pop
sbb
xor
mov
pop
jl
jge
mov
pusha
mov
sub
mov
add
push
or
xor
jl
sbb
or
mov
cmp
retf
cmp
outs
fidiv
pop
xor
jb
cmp
dec
or
jno
mov
mov
dec
aad
js
cmp
lods
cwde
or
popa
push
pop
pop
mov
xchg
dec
push
outs
test
adc
aas
mov
mov
pop
outs
(bad)
mov
push
push
sub
lods
mov
in
push
push
jl
pushf
jg
popa
xchg
jecxz
movs
pusha
and
push
cmp
mov
jmp
nop
push
sub
mov
mov
loopne
cmp
adc
mov
retf
mov
inc
fstp
test
in
push
ins
loopne
retf
mov
sar
into
jo
lea
lock
fld
mov
add
popa
sbb
and
clc
push
push
push
(bad)
pop
pop
sub
adc
or
in
ret
adc
sbb
ins
push
pop
not
cwde
inc
mov
lock
cmp
inc
(bad)
or
push
xor
inc
mov
jns
je
rcr
mov
fst
mov
sahf
and
dec
mov
cld
push
popf
and
in
shl
lea
add
xor
sub
int3
addr16
xchg
mov
add
in
sub
fisubr
mov
xor
int3
mov
sbb
not
cmp
lea
mov
pushf
(bad)
mov
arpl
sub
loop
cmp
je
shl
dec
cs
stos
xlat
pop
xor
in
mov
mov
mov
int3
ins
jb
daa
push
test
add
(bad)
xor
push
sbb
xchg
pop
(bad)
ss
addr16
push
cmp
inc
xchg
push
movs
push
cld
ja
push
xchg
cmp
pop
fnstenv
cmp
ret
in
inc
mov
cmp
call
inc
pop
push
rcr
mov
inc
sbb
pop
add
adc
or
in
xchg
jns
ret
ins
hlt
jo
sbb
and
mov
sub
shl
loopne
push
repnz
loopne
shr
push
call
xor
xchg
xchg
pop
sbb
es
(bad)
lahf
jl
mov
mov
dec
dec
mov
rcr
jne
cmp
mov
pop
out
push
jecxz
or
rcr
add
addr16
pop
sbb
idiv
push
xchg
add
jg
mov
cdq
xchg
cmp
in
push
mov
hlt
ins
rol
xchg
pusha
inc
jnp
sub
sbb
and
cmp
ret
sahf
push
dec
adc
xor
cmp
push
dec
lea
cmp
push
cmp
pop
jg
fs
fwait
shl
sub
lods
cli
or
xchg
cmps
mov
mov
sub
in
pop
(bad)
cmc
test
fimul
cmp
push
cmps
mov
jge
cmp
add
pop
(bad)
adc
sbb
dec
dec
mov
call
imul
jmp
and
pop
mov
repnz
in
sti
cmp
out
jle
neg
int3
mov
ins
add
dec
fistp
sti
shr
leave
adc
popf
pop
inc
add
sub
adc
lahf
das
pop
pop
es
rcr
sar
shl
or
jmp
xor
ds
sbb
in
or
ror
jb
pushf
nop
scas
js
pop
xor
jp
and
lods
jp
pop
mov
es
int
push
sub
repz
sahf
xor
xchg
test
sub
inc
or
and
sub
cmp
leave
mov
test
or
mov
dec
inc
or
out
ins
dec
cdq
lods
mov
pushf
addr16
xchg
jl
or
sbb
dec
popf
call
pop
test
mov
mov
bound
sub
xchg
hlt
mov
sti
in
das
fmulp
cmp
cld
sub
call
test
fsubr
test
adc
and
dec
jp
(bad)
imul
cmp
out
mov
retf
lods
jnp
mov
in
fsub
shl
fsubr
push
sbb
pop
sub
stos
popf
add
int3
adc
fldcw
lods
in
mov
sub
mov
bound
int3
sbb
fisub
pop
int3
mov
outs
or
cli
jo
retf
sbb
lods
jmp
sub
add
sti
leave
sub
fwait
jl
jo
jmp
jle
mov
dec
mov
ins
imul
inc
cs
fstp
pushf
stos
mov
fld
sbb
aas
popa
aam
stc
or
(bad)
push
lahf
mov
mov
xchg
retf
clc
sbb
xor
push
outs
mul
mov
pop
jo
cs
(bad)
fwait
pop
jne
int3
mov
or
dec
sub
sti
dec
ins
retf
(bad)
lea
fdivr
fidivr
mov
or
jle
cs
lods
sti
stos
jb
sbb
int
push
aad
push
mov
dec
dec
ins
out
sahf
dec
rol
jmp
sbb
pop
popf
int3
gs
sub
pop
(bad)
mov
inc
jl
sbb
aad
leave
int
mov
scas
int
xchg
push
ja
fdivr
test
aaa
retf
pushf
in
scas
in
outs
jl
fcmovnbe
pop
jae
jp
adc
sub
int3
inc
pop
gs
mov
add
xchg
dec
or
sbb
lods
es
pop
dec
aas
push
jle
mov
pop
or
wrmsr
sti
shr
pop
sar
ds
(bad)
sbb
mov
daa
sbb
pop
mov
jp
aas
mov
push
jbe
xor
cmp
jle
dec
sbb
ins
pop
fcomp
cmp
lea
pop
jl
ror
fmul
sti
mov
imul
stos
ins
mov
fsubp
stc
ja
sub
iret
pop
fmul
push
ins
cmp
fisubr
iret
cmp
jp
std
sbb
cmp
lods
lea
sbb
shl
sbb
mov
dec
fcom
lods
js
dec
mov
aam
dec
dec
fwait
cmp
std
imul
cs
xlat
shr
mov
sbb
or
cli
sbb
in
mov
mov
les
mov
xchg
aas
sub
sahf
jl
mov
sub
add
js
sbb
imul
outs
(bad)
fisttp
cmp
fwait
mov
mov
push
lods
int
dec
cs
fidivr
xchg
popf
(bad)
aam
mov
push
jp
pop
dec
scas
jle
adc
aas
dec
fisubr
push
popf
pop
lods
ret
jle
mov
fcomp
repnz
jl
dec
or
and
mov
imul
or
mov
xchg
sbb
sbb
lods
sbb
mov
mov
rcl
push
fcomp
jnp
je
aad
pop
add
push
cwde
cmp
ficomp
mov
mov
movs
pop
in
sbb
or
repnz
jmp
jae
call
sub
repnz
rol
pop
pop
cmp
xchg
(bad)
retf
cmp
mov
outs
dec
mov
mov
sbb
mov
aad
int3
and
dec
cmp
jle
das
dec
jecxz
fdivr
adc
mov
jmp
pop
jno
loopne
std
add
xor
jmp
fcom
pop
popa
ror
sbb
jo
aas
pop
retf
fsubr
add
pop
or
fld
or
mov
push
push
fsub
pop
int
sbb
iret
mov
aam
mov
rcr
cmp
sbb
pop
pop
push
pop
dec
jne
sbb
scas
mov
rcr
jmp
dec
fwait
or
dec
rol
mov
or
pop
jmp
pop
or
dec
mov
jo
call
lds
pop
xchg
sub
test
mov
fdivrp
cld
add
xor
fnstsw
mov
jp
ds
mov
in
push
pop
jle
pushf
cmps
loop
repnz
popf
out
iret
mov
add
daa
pop
sti
retf
scas
dec
jl
mov
dec
sbb
fxam
lea
imul
jp
cli
lods
std
sahf
mov
das
jnp
cs
test
lahf
and
mov
cli
pop
mov
ret
ins
jl
pop
jle
sub
cli
add
js
fsub
clc
mov
bswap
pop
or
xor
sub
icebp
mov
in
rcr
aam
mov
retf
add
outs
js
leave
sbb
mov
lods
fdivr
sub
out
pop
jmp
aas
jbe
adc
pop
cmp
sahf
mov
aam
mov
retf
push
fcos
in
test
fiadd
ins
fnstcw
daa
sbb
push
xchg
inc
clc
mov
loop
cmp
(bad)
cmp
pop
sahf
ins
pop
mov
in
test
int
and
mov
mov
shl
call
lods
fmul
cmp
mov
sti
dec
das
shr
shr
into
sub
dec
pop
stc
sbb
adc
jmp
int3
mov
aad
mov
xor
(bad)
leave
out
cld
int3
test
arpl
fdiv
cmps
data16
push
fcom
loopne
dec
repnz
sub
sbb
xchg
out
je
mov
shl
rcr
jmp
ss
xor
movs
mov
push
out
add
enter
push
(bad)
push
sub
cmp
lea
or
inc
cmp
sbb
adc
inc
out
les
int3
push
fisttp
or
fdiv
std
mov
out
lods
pushf
ja
and
cmp
enter
pop
mov
fmul
into
jnp
sahf
out
adc
in
mov
stos
imul
out
icebp
mov
or
or
jb
lea
fidivr
stc
pushf
repz
ror
mov
or
dec
shl
rcr
fdivr
cmp
ins
dec
lock
ss
stos
aad
pop
bound
fcom
cmp
mov
sub
cmp
cli
retf
cs
push
inc
int3
or
mov
pop
dec
das
(bad)
shl
sub
pop
repz
popf
and
inc
or
sti
pop
cmp
adc
mov
and
fdivr
icebp
call
fnstcw
lahf
jl
pop
mov
fsub
pop
or
xlat
movs
aas
(bad)
sub
lods
shl
sbb
out
sub
sub
cmp
jmp
push
clc
mov
leave
outs
(bad)
stc
aaa
jns
xor
fdiv
jmp
jnp
fistp
cld
adc
sbb
or
dec
iret
aaa
jle
push
call
imul
mov
ss
sti
test
sub
cmps
xlat
jns
push
pop
jle
(bad)
mov
push
stos
fcom
lods
sub
test
and
mov
or
pop
mov
jl
jbe
xor
push
or
sub
ds
dec
jo
mov
pop
sbb
retf
mov
pop
mov
xor
outs
ins
or
aas
fs
inc
jmp
(bad)
lods
js
jae
fsubr
mov
cmp
mov
(bad)
mov
jge
shl
dec
sti
mov
sub
mov
sub
fsubrp
sti
leave
and
jg
fmul
mov
fdivr
mov
jp
stos
dec
add
or
adc
outs
pop
retf
sti
cmp
das
imul
pop
dec
ins
sub
lea
cmp
cmp
jmp
stc
popf
push
out
push
mov
dec
(bad)
sub
iret
sbb
aam
push
(bad)
int3
dec
jmp
scas
jle
fwait
(bad)
repz
fcom
dec
sub
cld
sbb
mov
ror
sbb
leave
out
add
popa
pop
sbb
jo
in
add
fcmovu
iret
sahf
pop
mov
fcomp
into
lods
out
jns
xor
cli
fdiv
popa
lea
int3
retf
int
cmp
iret
sti
fadd
cli
mov
(bad)
ins
fcomp
in
fadd
xor
(bad)
lods
aam
int3
imul
dec
popf
jl
sbb
fmul
ror
adc
int3
lods
fwait
pop
pop
xor
or
jmpw
mov
fsubr
pop
dec
dec
mov
in
ins
dec
jp
xor
mov
ds
faddp
scas
in
int3
stos
cmp
std
push
int
sahf
outs
dec
lods
pop
sub
sbb
ins
sub
adc
lods
scas
sbb
jl
jp
dec
fwait
int3
sbb
out
ins
sub
ins
leave
lods
inc
add
cdq
mov
outs
pushf
js
scas
ins
ins
mov
das
lea
sbb
fcmovu
out
mov
push
movs
cmp
pop
xor
leave
sbb
or
out
(bad)
fdivr
jp
lock
scas
pop
int3
ret
pop
pop
dec
fld
jnp
mov
pop
out
aad
jmp
add
jecxz
adc
fisubr
pop
cs
mov
cmp
popf
mov
or
sbb
test
push
into
(bad)
mov
sar
(bad)
fistp
mov
jmp
lods
cmp
cmp
popf
int
mov
mov
cdq
dec
les
rcr
fwait
sbb
jb
stos
pop
mov
dec
fnsave
jo
sti
push
inc
fcomp
lahf
cmp
(bad)
in
iret
int
ds
dec
cmps
dec
push
sbb
aas
sbb
ds
in
aas
fcmovu
mov
(bad)
sbb
std
(bad)
mov
sahf
int3
retf
in
pop
dec
(bad)
pop
popf
lea
movs
mov
(bad)
movs
cmp
sahf
pop
cmp
push
ins
sub
mov
int3
stc
cmp
pop
sbb
ins
outs
jl
sub
push
mov
ficomp
push
cs
sub
pop
lods
and
loopne
inc
adc
xchg
or
stos
enter
cmp
imul
cli
stos
sti
retf
faddp
sub
mov
dec
in
les
jl
int
or
ffree
retf
cmc
pop
std
out
dec
or
imul
jmp
mov
jge
(bad)
out
lock
std
fimul
mov
sti
pop
dec
sbb
les
retf
sahf
(bad)
stos
call
pushf
pop
lods
lea
sbb
jle
or
imul
call
fwait
pop
fld
retf
jecxz
mov
outs
scas
push
sub
je
leave
add
loop
fidivr
ins
in
mov
lea
(bad)
mov
cmp
jmp
pushf
in
pushf
enter
pop
xchg
out
and
or
ins
xchg
aas
mov
lds
(bad)
lods
outs
mov
xor
in
xlat
mov
sti
pop
sti
fimul
mov
or
or
sub
cs
sar
xchg
shl
mov
ins
inc
sbb
pop
pop
ins
mov
fstp
mov
call
lea
int3
sbb
mov
xchg
loopne
and
jle
mov
std
lea
mov
pushf
in
js
cmp
lea
jge
xor
or
pop
dec
push
inc
jmp
cmp
push
inc
sub
jge
lods
popf
jge
or
in
int
test
pop
call
lods
fsubrp
int
gs
fsubr
sbb
retf
lods
sti
mov
js
std
(bad)
bnd
jle
sbb
inc
xlat
xor
mov
pop
int3
mov
push
fnstsw
das
cs
sti
mov
lods
popf
outs
dec
or
pushf
cld
cmp
add
sti
in
popf
popf
or
sbb
pop
sbb
ins
dec
cmps
fild
push
daa
push
dec
xchg
popf
or
xor
fcmovnbe
cmp
jl
pushf
stos
sub
lods
jge
adc
sub
daa
jmp
mov
les
pop
in
leave
pop
cmp
stos
cmp
gs
ror
fistp
fstp
add
mov
sbb
add
loope
mov
lea
dec
cld
mov
mov
lods
rcr
js
mov
sbb
sar
mov
or
pop
mov
std
pop
in
aad
lock
sahf
mov
in
or
cmp
in
js
pop
imul
mov
adc
sub
sbb
inc
stc
push
retf
lods
inc
fisttp
xchg
cmps
sti
sbb
or
push
fs
or
lods
xchg
lods
ins
add
es
adc
jnp
shl
xor
jmp
push
mov
sub
or
retf
xor
sub
sub
push
and
sbb
(bad)
pop
mov
pop
scas
cmp
(bad)
jmp
jns
push
add
mov
lods
cli
loopne
add
je
sub
sti
sahf
dec
sub
popf
push
sub
jno
popf
push
(bad)
pop
ja
jno
fiadd
test
in
mov
sub
div
xchg
push
cmc
daa
xchg
and
dec
lock
arpl
das
push
pop
jmp
xchg
test
mov
jecxz
jno
vsubsd
clc
(bad)
fdiv
jle
xlat
fild
jge
jmp
clc
xor
add
or
mov
sbb
push
dec
retf
xor
cdq
mov
sar
mov
sbb
out
dec
cs
fwait
lock
sub
std
mov
sbb
fmul
dec
or
std
xor
ret
push
int3
fdivr
imul
scas
pop
add
inc
fcom
cdq
imul
cmp
nop
ins
sbb
int3
or
(bad)
imul
pop
inc
push
lds
fsubr
cwde
mov
mov
jle
dec
jmp
adc
or
fmul
repnz
xlat
icebp
aas
call
and
scas
cs
mov
cwde
add
aam
sub
mov
sub
popf
mov
xchg
sbb
sub
outs
lods
mov
std
paddw
xlat
or
pushf
jnp
lods
add
aam
stos
imul
cs
fsubr
mov
inc
std
inc
sub
push
imul
pop
jmp
ror
push
cld
mov
int
clc
fst
aas
dec
fcomip
push
fst
fs
fmul
aas
fadd
pusha
jle
(bad)
not
ins
outs
inc
jg
dec
push
mov
es
fcom
sub
pop
cmp
or
out
push
fadd
enter
and
ins
stos
jae
xchg
adc
cmp
xlat
call
stos
movs
pop
fcom
sbb
fmul
pop
xchg
adc
xor
pop
fsub
lods
retf
inc
shl
inc
int3
repnz
movs
jnp
ror
add
fdiv
mov
xchg
sbb
or
lods
mov
sbb
mov
fdivr
outs
sub
cli
iret
dec
jp
aas
fst
xor
ins
mov
shl
mov
fwait
inc
jmp
mov
and
lds
ds
push
(bad)
cmps
shl
aam
push
adc
fdiv
movs
cmps
mov
sbb
fdiv
xor
cmp
jp
add
fdivr
sar
daa
or
cmps
push
fmul
mov
xchg
pop
(bad)
jge
ja
lock
add
fmul
dec
shl
jns
lea
das
fsub
mov
adc
sti
lahf
pusha
loope
rcr
in
fsub
inc
rol
xchg
jge
sbb
stc
cmp
dec
sti
daa
mov
ins
cmp
lods
in
dec
pushaw
fldcw
ins
outs
fadd
xchg
mov
jno
sub
stos
cmp
dec
mov
rol
xchg
fcomp
sti
js
int3
popa
jmp
push
(bad)
ss
pop
pushf
push
mov
fisubr
jbe
mov
mov
lea
xor
imul
nop
test
(bad)
in
stos
and
mov
repz
sub
std
ins
sub
(bad)
sbb
sub
pop
jp
and
mov
inc
add
mov
fcom
jl
stos
mov
xchg
test
jns
lea
jmp
(bad)
pop
(bad)
aam
(bad)
neg
leave
adc
ror
adc
outs
add
dec
jg
adc
fmul
push
outs
lods
repnz
pop
clc
rol
xchg
stc
sar
mov
dec
imul
lods
fadd
test
pop
push
int3
ret
xor
sahf
in
jmp
(bad)
popa
aam
in
repnz
arpl
(bad)
jge
movs
push
mov
mov
nop
add
sar
shr
loope
adc
je
fpatan
(bad)
adc
adc
dec
pop
cmps
dec
into
(bad)
in
fmul
mov
mov
pop
push
xor
mov
(bad)
adc
call
adc
dec
sbb
sar
inc
fsub
or
data16
cs
retf
mov
fdivrp
fmul
or
push
mov
mov
xchg
pop
(bad)
rcl
pusha
(bad)
push
or
sub
cwde
popf
push
fsub
xor
fadd
push
mov
fadd
push
mov
rol
xchg
sahf
out
in
cmp
sar
mov
or
fucomi
mov
mov
xor
movs
and
push
das
inc
sbb
pop
scas
daa
aas
lods
arpl
jmp
push
jle
or
sub
aam
cli
pop
shl
aam
shl
mov
hlt
scas
fld
rcl
dec
fmul
(bad)
fcomp
js
inc
mov
sub
dec
scas
or
sub
cdq
jge
fdiv
sbb
ins
clc
mov
into
out
add
jbe
mov
push
mov
hlt
ror
dec
cdq
adc
cmp
dec
outs
aam
test
push
arpl
ins
movs
shl
xor
ds
push
loope
inc
fsubr
push
nop
sti
daa
mov
retf
fsub
lea
dec
dec
mov
test
fadd
(bad)
pop
inc
or
repnz
cwde
add
adc
call
jg
sbb
add
cmp
lahf
sub
sbb
and
xor
jmp
(bad)
in
fadd
hlt
mov
jmp
je
mov
(bad)
out
frstor
mov
outs
lods
or
mov
push
dec
(bad)
mov
stc
add
fadd
mov
outs
shl
or
jno
xchg
mov
jecxz
or
neg
and
loopne
pop
stc
fcom
aad
mov
mov
pop
dec
fcom
test
push
mov
popa
cli
movs
ja
sbb
or
xchg
xchg
xlat
jecxz
pop
sub
dec
adc
dec
jmp
nop
in
(bad)
fwait
sub
retf
call
ins
loopne
ds
xor
fdivr
(bad)
cmp
dec
lods
sbb
cmc
and
sti
xor
cs
mov
pusha
shl
clc
hlt
pop
stos
push
pop
fsub
and
xor
mov
scas
jmp
int3
adc
shl
sbb
ds
shl
xchg
fsubr
sub
inc
out
(bad)
xchg
fsubr
int3
test
repz
dec
fwait
dec
(bad)
fdivr
sub
dec
(bad)
add
mov
fdiv
add
movs
xchg
(bad)
int3
push
mov
push
retf
cmp
pcmpgtb
in
and
fwait
adc
pusha
int3
sub
and
(bad)
adc
push
ror
add
daa
mov
cld
jb
xor
fcom
mov
out
fs
mov
int
in
adc
dec
aam
das
jno
fsubr
in
addr16
std
(bad)
sti
leave
int3
mov
into
sbb
fisubr
int3
cld
in
test
dec
in
pop
(bad)
fadd
mov
push
icebp
fadd
and
mov
fdiv
outs
inc
jne
movs
cdq
repz
js
jp
inc
cmp
dec
cli
push
pop
mov
add
mov
xchg
mov
fsubr
leave
into
add
pop
cmps
sbb
dec
fmul
out
loopne
hlt
sbb
fdiv
jae
outs
daa
fs
xchg
js
cmp
sub
aad
fsubr
scas
mov
mov
cli
arpl
push
fsubr
fidiv
int3
les
sbb
cmps
inc
(bad)
out
ins
call
sti
data16
ficom
fsubr
xchg
dec
pop
mov
dec
(bad)
ins
lahf
push
in
inc
fs
(bad)
sar
and
popf
ins
arpl
retf
icebp
ins
fild
jae
(bad)
cmps
push
daa
dec
fadd
mov
push
dec
jl
fdivr
cmps
pop
(bad)
sbb
mov
es
cmp
ret
fmul
cmp
cdq
xchg
mov
jo
(bad)
and
pop
or
inc
int
inc
lds
int
gs
fcomip
sub
js
aam
movs
in
mov
fmul
push
fisubr
xor
(bad)
loop
mov
push
rcr
inc
xchg
xchg
fisubr
ins
pop
or
mov
adc
repnz
rcl
pop
xor
scas
icebp
jo
xor
mov
ins
cmc
int3
pop
lock
fcom
test
cli
into
sub
push
jne
sbb
aaa
mov
(bad)
call
das
in
dec
fdiv
pop
out
pop
push
xchg
push
fsub
mov
xchg
call
inc
in
movs
dec
cmc
int3
ficom
xchg
adc
fsubr
jecxz
clc
call
into
sbb
cmp
fmul
bound
in
int3
into
ds
push
jle
cmp
in
push
sbb
test
fdivr
mov
inc
xor
sub
pop
and
aam
in
(bad)
mov
lea
test
and
mov
mov
mov
pop
fdivr
jb
js
(bad)
pop
loopne
mov
fdivr
mov
adc
jbe
bnd
rcr
aas
cmp
mov
jmp
fucomi
popa
rcl
popf
cmp
jmp
fcomp
jl
cmps
add
test
jnp
imul
cmp
data16
mov
pop
jo
adc
inc
or
jne
mov
imul
jmp
push
mov
retf
sbb
push
data16
(bad)
mov
or
jmp
(bad)
in
sub
xor
push
mov
mov
mov
fsub
push
dec
adc
(bad)
dec
(bad)
jl
push
ins
xchg
xchg
xor
jmp
clc
fcomp
push
ins
sub
fpatan
leave
or
cmps
jns
dec
(bad)
mov
hlt
and
xor
(bad)
ror
sbb
mov
iret
dec
cld
xchg
pop
scas
aam
add
mov
clc
pop
fwait
xchg
dec
pop
fcom
pop
arpl
pop
das
adc
mov
fcmovne
popa
inc
std
out
fdivr
push
aam
enter
int3
and
inc
mov
(bad)
sbb
in
adc
and
xor
scas
rcr
or
inc
leave
xor
outs
in
cmp
hlt
mov
mov
jb
fdiv
add
test
je
fucom
imul
push
stos
fmul
jne
outs
fadd
push
sti
cmps
push
loop
movs
fsubr
mov
mov
dec
int3
add
jae
rol
lahf
in
fdiv
inc
dec
pop
adc
neg
fdivr
inc
stc
fsubr
push
jns
jno
out
jl
add
das
popa
xor
mov
sub
cmps
or
mov
mov
aaa
jecxz
fyl2xp1
mov
fidivr
lods
data16
mov
fisttp
fsub
jno
sbb
lock
jecxz
(bad)
dec
sti
xor
std
pop
fdiv
jmp
inc
cdq
fsub
int3
sub
dec
fist
pop
enter
rcr
pop
fiadd
mov
jge
std
les
mov
das
push
add
pop
sub
jle
fdivr
dec
pusha
dec
imul
xor
sbb
out
pop
fdiv
int3
adc
popf
cs
sbb
cli
imul
fcomp
jecxz
leave
in
dec
sub
popa
int3
aam
je
pop
mov
stc
pop
test
loope
(bad)
outs
fdiv
clc
es
mov
test
or
mov
adc
xchg
ins
aam
out
mov
test
jbe
jp
rcr
fild
and
mov
sbb
(bad)
movs
lods
imul
jo
fbld
jbe
sub
pop
data16
loop
in
fdiv
stc
mov
mov
daa
cli
dec
lock
fdivr
(bad)
mov
add
(bad)
xor
jno
fs
out
cmp
and
mov
in
loop
loope
retfw
ficomp
mov
aam
xor
(bad)
addr16
fcomp
in
in
fimul
fsub
or
sahf
outs
fcomp
jle
les
mov
and
aam
jmp
mov
sbb
(bad)
ins
adc
cld
imul
push
fsubr
mov
dec
arpl
sub
pop
fmul
mov
dec
clc
(bad)
shl
push
or
popf
ret
cmp
lods
fsubr
enter
popa
mov
push
adc
retf
and
lahf
cmp
jb
xchg
pop
mov
inc
(bad)
ror
cmp
or
test
stc
mov
std
sub
aad
mov
pusha
adc
fadd
cmc
jnp
test
cs
and
xor
lods
cmp
push
or
lods
fdivr
je
adc
push
clc
cs
mov
rcl
cld
(bad)
iret
ds
mov
or
rcl
std
mov
(bad)
enter
call
mov
inc
outs
icebp
and
(bad)
cmc
test
rol
ds
pop
pop
xchg
mov
lods
call
lock
rcl
sbb
add
(bad)
in
(bad)
fadd
popa
les
imul
adc
mov
int3
xor
xor
push
add
test
sub
(bad)
fild
stos
jbe
fdiv
pop
popf
mov
adc
das
push
xlat
call
mov
adc
mov
jb
aaa
imul
mov
dec
cli
dec
fmul
stos
adc
pop
mov
pop
mov
add
xchg
gs
fdivr
sbb
add
cmp
outs
in
dec
sub
mov
adc
push
pop
test
mov
mov
fmul
inc
nop
xor
xor
sub
rol
push
aad
cmp
xchg
cmp
push
jl
mov
imul
in
sbb
push
sub
push
cli
or
cmp
aam
int3
stc
das
sbb
dec
mov
out
or
lds
cmp
push
add
inc
aam
fisub
inc
add
in
ja
or
xchg
popa
xchg
xchg
mov
(bad)
aam
jne
fcom
pusha
aad
mov
xlat
inc
aam
sbb
fmul
xor
imul
stos
xchg
xor
int3
xchg
dec
fdivr
add
dec
int3
nop
gs
(bad)
fchs
mov
int
adc
popa
retf
in
not
fsub
cmc
movs
popf
push
dec
fcom
pusha
or
repz
mov
test
push
sub
dec
(bad)
int3
mov
or
jns
or
push
(bad)
mul
push
add
test
adc
push
mov
sbb
xchg
fstp
xchg
das
jp
clc
adc
xchg
pop
inc
jnp
add
mov
loopne
cmp
sahf
dec
xor
pop
bound
call
fmul
es
pop
cmc
xor
ret
xor
sbb
sti
aas
jmp
and
dec
clc
or
adc
dec
pop
popa
addr16
pusha
in
in
cmps
std
retf
(bad)
pop
jecxz
fcom
icebp
jne
inc
sub
cmp
and
sbb
sub
cli
sub
mov
sti
(bad)
sti
popf
jl
call
sahf
(bad)
mov
shl
aad
jmp
mov
iret
std
push
call
fsubr
jmp
test
rol
pop
mov
rcl
iret
sbb
fmul
imul
lods
sbb
add
mov
push
shl
adc
push
add
sub
stos
repnz
test
xor
in
ins
xlat
in
mov
sar
add
sbb
stos
sbb
test
scas
xchg
push
xchg
xor
fmul
ret
dec
je
iret
enter
add
sub
pop
sbb
adc
fsubr
adc
xchg
loopne
repz
or
inc
clc
fsub
int3
ins
cs
push
movs
jmp
fimul
fsubr
inc
mov
es
xchg
rcr
imul
out
fs
aaa
icebp
dec
lea
outs
adc
test
mov
jmp
adc
mov
push
retf
add
lods
call
lahf
(bad)
cmp
sub
jne
rcr
xor
fdivr
push
or
jns
or
cli
sahf
mov
fsubr
shl
cmp
out
sub
cli
loope
inc
rcr
xchg
imul
dec
jbe
pop
mov
int3
jmp
add
inc
or
cld
jp
push
rcr
xchg
jl
fnstcw
mov
and
push
repnz
pop
push
cmp
fsubr
enter
call
push
fimul
fdiv
outs
cmp
mov
arpl
ficom
dec
xchg
xor
fsubr
xor
cmp
jmp
mov
adc
jl
ins
inc
jo
xor
test
sbb
jmp
mov
inc
dec
ss
fdiv
lea
push
ins
aad
pop
or
mov
dec
inc
stos
call
or
leave
sbb
xchg
out
rcl
data16
test
jl
icebp
stos
jge
lods
inc
adc
fldenv
lods
out
pop
sahf
adc
push
cs
adc
dec
shl
repnz
xor
aam
lea
xor
cmps
xchg
fdiv
ss
add
mov
sbb
les
jnp
mov
daa
pop
fmul
jns
dec
fdivr
ss
lods
ret
mov
and
pop
push
inc
pop
xor
mov
push
dec
pop
int3
ins
pop
jmp
xchg
sub
cmp
xchg
fcom
fcmovb
add
mov
out
call
data16
and
mov
mov
push
mov
adc
sub
push
out
xchg
dec
stc
fsub
pusha
in
and
shl
mov
dec
jge
push
jno
mov
fdivr
or
jg
fwait
or
fsubr
xor
int3
sub
push
push
repnz
sahf
or
and
and
sbb
popa
xor
test
aaa
mov
out
scas
pop
dec
sbb
retf
hlt
icebp
sti
ins
sub
std
dec
sub
jmp
pushf
add
fmul
add
pop
push
adc
rol
mov
aas
cli
rcl
add
cmp
pop
stc
add
pop
int3
mov
jnp
inc
sbb
dec
xor
in
fsub
in
scas
bound
test
mov
xor
push
push
lahf
lods
fsub
arpl
sti
cmps
jecxz
repz
or
aam
xchg
mov
cmp
cmp
out
aam
stc
ds
test
adc
or
rol
cld
inc
push
ins
push
xchg
or
xor
call
xchg
xchg
loopne
iret
mov
jno
jmp
js
push
pop
inc
fmul
xor
jnp
fdiv
shl
sbb
jns
mov
aam
stos
sub
pop
cwde
int3
jge
xchg
sar
icebp
and
hlt
xchg
and
(bad)
fdivr
outs
lods
xor
das
dec
fdivr
or
inc
cli
gs
add
lahf
std
rol
jecxz
imul
les
mov
dec
push
lods
push
in
adc
dec
push
test
ds
xor
shr
add
ins
sub
jl
inc
retf
or
sbb
sub
mov
(bad)
push
sub
jge
sbb
sti
retf
push
lods
fdiv
repnz
xchg
std
rol
push
out
(bad)
in
test
imul
sti
daa
mov
dec
inc
lods
cld
xchg
mov
lock
fsubr
loop
retf
retf
pop
sbb
and
add
fsubr
popf
shr
pop
push
(bad)
clc
je
aam
push
mov
mov
das
movs
retf
fmul
add
push
cmp
mov
jmp
ins
in
jg
std
or
xor
ins
(bad)
outs
mov
rcr
pushf
inc
inc
(bad)
mov
(bad)
int3
call
nop
mov
and
sbb
lods
add
push
retf
fdiv
adc
jp
pop
cmps
ins
scas
fild
push
jns
leave
ins
sbb
stos
test
aad
xchg
fcomp
int3
adc
xor
push
cmp
nop
mov
add
repnz
fadd
std
clc
jo
add
mov
and
sti
and
jle
mov
xlat
sub
jg
fmul
arpl
ins
jmp
in
mov
aam
std
jge
ds
jl
mov
into
lods
fs
fst
cli
(bad)
add
mov
mov
pop
fdivr
inc
gs
imul
or
int3
fdivr
rcl
cwde
and
retw
cmp
scas
fadd
push
dec
call
bound
jbe
sub
sub
jmp
lods
add
and
sbb
push
sar
xor
mov
stos
lods
test
mov
mov
mov
int3
loop
mov
pop
sti
sub
pop
fwait
ins
xchg
or
rcl
adc
mov
or
cdq
mov
xor
movs
jnp
(bad)
or
pop
adc
pop
stos
mov
mov
ds
fcmovnb
mov
fcomp
scas
xchg
jecxz
xor
fadd
mov
sti
sbb
hlt
lds
sbb
pop
outs
adc
outs
ds
and
sbb
xchg
aam
repz
cld
adc
or
fild
xor
icebp
mov
push
and
inc
std
fild
mov
sbb
jp
fdiv
push
mov
lods
add
lahf
sub
xchg
in
fwait
movs
add
ficom
int3
adc
in
dec
outs
mov
adc
pusha
jl
xchg
add
xchg
xlat
movs
sti
je
cmp
mov
(bad)
mov
mov
mov
aad
lahf
ret
(bad)
fsubr
loop
cmp
push
out
jne
cmp
mov
mov
sub
push
aam
jge
imul
pop
and
push
jecxz
in
dec
int3
inc
je
jge
movs
retf
mov
pop
gs
(bad)
bound
xor
xchg
into
inc
loope
lahf
xchg
sahf
ins
mov
xlat
push
or
std
enter
in
lods
fadd
adc
mov
je
fidivr
or
xchg
fstp
sub
mov
repz
mov
popf
jb
pop
cmp
xlat
lds
push
out
int3
sub
pop
aad
sub
mov
push
and
fdivr
and
scas
shl
sub
fcomp
(bad)
out
xchg
cwde
std
xor
fdiv
je
adc
inc
test
sbb
add
mov
cmps
push
sbb
mov
call
dec
adc
mov
xchg
out
mov
dec
push
fadd
pop
dec
fdivr
sub
dec
pop
mov
mov
test
push
cs
data16
lods
das
shl
sbb
sbb
int
sbb
inc
push
fmul
adc
jmp
jl
add
cli
call
ins
call
shr
das
cmps
xor
cmp
int3
jb
fwait
xchg
pop
pop
dec
ficomp
cwde
fcom
jl
sub
add
lods
lods
int
std
pop
aas
dec
rcr
pop
aad
mov
loope
pop
sahf
outs
out
into
pop
push
bts
mov
sar
fadd
ror
dec
pop
jg
cmp
(bad)
icebp
leave
out
or
lods
xor
push
sub
xor
(bad)
mov
cmp
adc
in
push
fsub
sbb
push
jns
mov
jmp
aaa
shl
sti
dec
jo
ins
pop
pop
aas
int3
retf
imul
fimul
fsub
mov
cmps
(bad)
fdivr
mov
imul
mov
dec
sub
push
pop
cli
fcom
hlt
loope
cs
in
jmp
fmul
js
jbe
xchg
test
movs
into
lods
jg
push
iret
cmps
out
int3
sub
pop
sub
pop
mov
mov
mov
cdq
cmp
sub
cmp
rcl
mov
fcom
or
pop
stos
cmp
test
jp
push
xchg
mov
fcom
ror
mov
fmul
popa
sbb
fsubr
xor
and
adc
jmp
jle
mov
jno
imul
add
retf
mov
mov
lea
xchg
fs
mov
mov
mov
sbb
fsubr
sub
pushf
call
lea
cmp
mov
into
pop
fistp
fsubr
popf
xchg
shr
sub
imul
(bad)
(bad)
cdq
push
mov
in
or
adc
imul
mov
inc
and
outs
fsub
stos
fimul
pop
or
les
sbb
jo
push
adc
(bad)
out
jl
std
sbb
aas
mov
popf
ficom
fmul
and
mov
clc
scas
imul
sar
popa
aam
push
js
mov
dec
imul
dec
stc
jmp
ja
lods
jmp
sti
ins
nop
xor
mov
xor
or
push
dec
movs
shr
fsubr
ds
cmp
mov
pop
dec
and
jp
aam
mov
call
call
dec
stc
shl
out
xlat
sub
nop
ret
fdivr
sub
pop
push
jge
repz
dec
rcl
dec
mov
xor
pmulhuw
sbb
cmp
scas
pop
lock
lods
fisubr
jge
lods
loopne
or
sbb
scas
fsubr
add
popf
mov
xor
cmp
jmp
aaa
fadd
int
push
int3
pop
cwde
cmps
aam
ficomp
jmp
ins
popa
imul
pop
push
mov
js
xchg
iret
fdiv
inc
and
xor
xor
mov
pop
popf
aas
inc
sub
dec
stos
pop
das
mov
mov
pushf
out
cs
push
retf
lods
adc
fdivr
mov
outs
lahf
cmp
xor
lods
in
pop
mov
movs
pop
inc
cmps
imul
jecxz
scas
or
lods
jg
call
and
cmp
(bad)
bound
fadd
mov
mov
push
cmps
shr
in
ficom
imul
sbb
cld
dec
cli
call
pop
mov
sub
xor
jae
cdq
adc
xor
pop
retf
pop
sub
repz
add
cmp
mov
out
push
sub
fcom
xchg
lea
mov
(bad)
sub
cmp
aam
push
ins
pop
mov
jmp
pop
sti
mov
popa
shl
push
jmp
cmp
arpl
fmul
cmps
pop
pusha
fmul
push
add
mov
xchg
jp
aas
cdq
jo
(bad)
cmp
and
hlt
fcom
lock
in
int3
pop
mov
push
push
dec
pop
jo
leave
fcom
loop
mov
jmp
adc
daa
frstor
aam
scas
stc
jns
lods
or
cmp
pop
pushf
data16
mov
jmp
fdivr
mov
call
fisttp
mov
pop
inc
mov
int
lea
lods
xlat
sbb
dec
mov
iret
int3
sub
mov
push
mov
ins
jo
lea
rcl
pushf
pop
cld
jmp
ds
inc
dec
fsub
pop
cld
xor
push
jecxz
rcl
or
cs
lahf
mov
stos
sti
mov
aas
dec
sub
dec
mov
jp
ret
pop
inc
sbb
jnp
fiadd
leave
int3
cmp
or
int3
outs
retf
fild
xchg
pop
sub
sub
retf
and
jne
adc
fwait
and
dec
idiv
xchg
cwde
dec
and
lods
stos
pop
sbb
xlat
mov
inc
test
stc
in
dec
or
jmp
aas
mov
xor
ficomp
lods
or
cmp
jle
(bad)
iret
sbb
or
dec
(bad)
rol
pop
jno
sbb
push
enter
fwait
retf
aad
or
jecxz
out
cmps
cli
sbb
ror
mov
fsub
outs
pop
fdivrp
lods
cmp
cld
fadd
cmp
sub
jmp
int3
iret
push
fsubr
pop
sbb
(bad)
jno
jmp
jns
ins
jo
sub
push
(bad)
jmp
std
sbb
fsub
cmp
and
pop
add
pop
int
mov
mov
(bad)
sbb
xor
jl
jp
mov
sti
scas
or
cmp
fidivr
or
mov
pushf
or
sub
mov
repnz
sbb
aam
lea
iret
leave
outs
push
prefetch
sbb
fidivr
popf
pop
fsub
stos
cmp
mov
jg
jbe
fisttp
pop
std
sub
ror
add
iret
xor
aas
and
ret
mov
in
int
aas
or
std
dec
push
mov
pop
loope
cmp
imul
lods
push
dec
or
and
stos
std
leave
xchg
mov
cmp
fwait
ja
mov
jg
push
loope
test
mov
dec
pop
pusha
fsubr
idiv
mov
fdivrp
or
test
dec
pop
call
js
into
mov
fsubr
and
cmp
jle
aad
or
cmp
(bad)
xor
test
lods
int
not
sbb
rcr
sar
mov
xor
stos
adc
cmp
sub
jle
fwait
stc
jmp
adc
mov
aad
pop
fmul
sub
rol
sahf
cmp
(bad)
jmp
jnp
out
js
int3
pop
fisttp
push
daa
fnstsw
push
jmp
lods
out
xchg
push
test
ins
jns
pushf
fmul
push
ins
sbb
fsubr
popf
jmp
or
rcr
or
fld
inc
xor
pop
ins
(bad)
or
nop
mov
pop
add
test
sbb
rcr
pusha
mov
fsubr
mov
lods
add
jmp
xor
pop
dec
aam
sbb
or
ret
mov
jle
mov
mov
jmp
sbb
pop
mov
sub
js
ds
int3
pop
popf
mov
fild
aam
sbb
mov
int3
(bad)
mov
sar
jmp
mov
into
jnp
loop
cmp
or
sub
shl
ins
fwait
jl
int3
(bad)
out
fcomp
fimul
cwde
xchg
xchg
popa
jmp
push
jae
jne
cld
fmul
ins
add
stos
mov
in
inc
bound
pop
in
fmul
jmp
jmp
gs
out
dec
movs
ins
std
lock
shl
ins
out
cmc
pop
shr
mov
sahf
rcl
std
ret
push
(bad)
cwde
ds
push
ins
int3
popa
push
fdivrp
mov
and
pop
mov
scas
gs
ret
aad
mov
cmp
int3
in
dec
and
mov
jle
(bad)
out
jp
bound
ret
ror
push
iret
outs
dec
clc
mov
std
dec
sub
or
ins
xchg
and
fisttp
ins
jo
iret
jge
fldenv
jnp
mov
ins
cmp
pop
fcomp
jge
and
jmp
or
ds
dec
idiv
push
ins
mov
fucom
mov
adc
cmp
fcom
fisubr
jnp
jg
fdivr
pop
add
inc
add
gs
lock
pop
jp
int3
int
xchg
iret
stc
retf
mov
mov
scas
call
cmp
mov
iret
out
pop
imul
or
enter
rcr
lahf
out
dec
ins
or
psubq
cmp
sub
rol
fmulp
push
das
int
dec
popf
ins
lods
pop
pop
in
fwait
cwde
mov
cmp
sub
scas
in
cs
add
mov
mov
fcmovu
cld
mov
sub
cmp
fimul
pop
pusha
sub
sahf
imul
pop
fnstsw
sbb
push
fmul
dec
add
cmp
(bad)
popa
retf
fdiv
sti
sbb
fdivr
fcomp
cli
popf
fisubr
xor
out
adc
gs
(bad)
imul
sub
mov
ds
sti
ds
rcr
fstp
jl
ja
pusha
sbb
imul
mov
fcomp
sub
(bad)
ins
or
stos
rol
mov
ins
retf
sbb
sbb
std
mov
sti
dec
cs
clc
pop
clc
int
mov
xlat
push
adc
sub
popa
mov
adc
cs
out
or
int3
sub
jp
pop
call
mov
shl
dec
iret
scas
or
hlt
sbb
and
mov
scas
fsubr
mov
dec
dec
outs
dec
mov
jnp
fadd
or
fdivr
into
sub
mov
ins
push
mov
dec
push
fstp
aam
mov
adc
daa
pushf
fxch
xor
cdq
sbb
lahf
in
(bad)
push
cmp
pushf
dec
in
in
mov
stos
sahf
fsub
cs
dec
ins
mov
mov
ds
scas
int3
ins
xor
cmp
mov
stos
fidivr
push
mov
push
imul
aam
pusha
jmp
or
call
sub
jns
int
(bad)
dec
pop
jne
jne
fsubr
pop
cld
cmp
mov
sub
popf
mov
mov
jle
mov
out
fsubr
pop
add
dec
imul
jg
mov
add
ficomp
sbb
sbb
sub
ins
pop
push
pop
xor
pop
out
sbb
inc
jl
popf
psubusw
in
fsub
or
(bad)
(bad)
pop
pop
sub
outs
retf
(bad)
jle
pushf
scas
call
fsubr
stc
adc
stos
jnp
fistp
cmp
int3
stos
fisttp
dec
jp
ins
rep
pushf
dec
jl
mov
cli
sbb
lods
ins
pop
mov
sub
dec
int3
or
jl
outs
push
out
fwait
jnp
dec
mov
fldcw
ins
pop
retf
ins
inc
mov
rcl
lock
leave
or
pop
sbb
xor
lods
pop
ds
or
or
pop
push
sub
jb
aam
pop
popf
in
or
mov
call
icebp
mov
outs
idiv
std
out
lods
sti
mov
or
push
mov
shl
sbb
int
cs
sbb
not
jp
or
cld
pop
cmp
jnp
std
cmp
mov
sbb
aam
cmp
cld
sub
adc
fmul
or
lods
leave
dec
dec
push
sub
or
jns
retf
cmp
xor
in
int
or
pop
retf
vmovups
(bad)
out
fcomp
cmp
pop
push
sbb
lods
adc
fadd
mov
in
lods
mov
pop
scas
ins
pop
pop
std
sbb
sub
mov
popa
inc
lods
ficomp
pusha
imul
cld
fcom
jmp
cmp
cli
retf
mov
inc
sbb
fcomp
in
dec
lods
or
retf
les
dec
sbb
jp
jl
mov
sub
in
and
pop
into
and
pop
mov
lods
ins
sbb
imul
fmul
retf
pop
jmp
pusha
stc
pop
sbb
jne
jge
mov
mov
aam
pop
js
sahf
push
repnz
lahf
xchg
retf
sti
pop
mov
aas
mov
(bad)
push
arpl
imul
fistp
dec
mov
pop
mov
mov
and
cmp
(bad)
shr
fmul
cmp
int3
rcr
cmp
pop
clc
fstp
mov
pop
cs
sub
jnp
int3
jmp
dec
mov
repnz
add
xchg
cdq
call
lock
pop
lahf
imul
xor
stos
clc
or
sub
push
sub
stos
call
jmp
xor
cld
aas
icebp
ins
(bad)
or
loope
ins
into
ins
sbb
std
ror
cmp
fidiv
mov
retf
mov
mov
sbb
dec
adc
push
cld
push
rcl
cs
or
ins
sub
dec
call
retf
jle
jle
inc
cmp
or
stc
das
jge
fsubr
mov
ins
mov
mov
enter
cs
sbb
cmp
iret
add
fsubr
fisttp
scas
cmp
cmp
fwait
retf
pusha
push
jmp
sub
sub
movs
out
fistp
jl
call
clc
pop
or
dec
loopne
rcl
sbb
enter
mov
or
pusha
or
mov
std
popf
mov
pushf
dec
enter
loope
test
jl
mov
pusha
mov
or
sub
ins
mov
scas
ins
cdq
mov
mov
retf
adc
fcom
popf
ds
mov
sub
mov
mov
dec
enter
mov
or
ins
mov
mov
aad
pop
jg
sbb
fsubr
fwait
push
push
lods
mov
pop
add
std
sbb
inc
fsubr
lods
cld
fwait
pushf
pop
stc
shl
push
pop
stos
in
loopne
cmp
jmp
cmp
icebp
(bad)
dec
outs
ins
sub
jmp
retf
cwde
mov
push
or
(bad)
ins
jge
aam
fimul
fwait
or
jmp
pop
das
retf
mov
jge
fisubr
push
cmp
mov
sbb
shl
test
fst
aam
jmp
jmp
cmps
test
cmp
adc
lock
std
aad
dec
mov
mov
sub
fidivr
sbb
jle
pop
fcmovnbe
(bad)
dec
jp
dec
nop
mov
sbb
dec
pop
out
jp
pop
sti
into
dec
ins
jmp
sub
jg
mov
scas
or
cld
sbb
pop
mov
scas
test
cli
fadd
push
jle
popf
cld
push
sti
jo
inc
dec
fsubr
(bad)
jmp
push
and
or
mov
mov
into
pop
jo
cmp
int
sbb
dec
lahf
sub
pop
pop
sti
(bad)
sbb
cs
imul
cmp
jge
dec
cli
leave
mov
(bad)
pop
pushf
fwait
int3
cmp
clc
stos
jnp
into
sbb
aam
cs
pushf
push
cmps
fsubr
popf
jg
pop
mov
jge
std
mov
xchg
inc
dec
rol
ins
dec
add
lods
sub
sbb
pop
mov
or
leave
or
ds
sti
mov
mov
lods
mov
sub
stc
push
adc
xlat
lock
or
sbb
enter
dec
dec
dec
fmul
fstp
(bad)
adc
sbb
cmp
fdivr
and
pop
popa
cmp
jmp
in
sti
jl
cmp
cmp
icebp
jo
mov
inc
and
lahf
or
dec
mov
pop
nop
sub
mov
pop
sti
shl
cmp
dec
lahf
int
pushf
cmp
sar
(bad)
push
stc
pushf
cmp
mov
sbb
pop
pop
fmulp
std
cld
jl
dec
fidivr
push
mov
jnp
jle
mov
lock
int
nop
sbb
push
leave
sbb
stos
rcr
mov
ds
dec
cli
into
in
imul
aam
retf
dec
mov
pop
les
cmp
sub
(bad)
jmp
int3
ins
mov
sub
dec
mov
push
cs
sti
sbb
out
cmp
inc
dec
pushf
cld
push
lahf
pop
fdivr
aas
mov
in
dec
mov
popf
cld
test
push
ins
retf
mov
jle
lods
xchg
push
sub
imul
iret
fcmovnu
out
in
call
movs
jne
ficom
fnstenv
adc
sti
in
mov
ins
outs
pop
aad
lea
adc
push
cmc
add
pop
jecxz
(bad)
mov
stos
lods
dec
mov
or
jmp
push
inc
or
and
mov
cmp
sti
mov
das
push
fs
mov
ins
fstp
mov
stos
ror
sub
imul
cmp
das
pop
cli
(bad)
cdq
sbb
js
or
lods
repnz
sub
jmp
mov
mov
xlat
pop
fdivr
or
push
cmp
pop
in
dec
cmp
(bad)
and
mov
out
dec
in
mov
fld
cmp
(bad)
cli
popf
cdq
jns
mov
ins
jo
push
sar
mov
test
cmp
and
mov
dec
inc
mov
int
cmps
inc
sbb
scas
fcmovnbe
iret
add
call
push
or
mov
(bad)
push
retf
pop
cmp
sub
int3
or
sti
or
fisubr
pop
cmp
fnstsw
jge
sbb
mov
mov
(bad)
scas
lods
jmp
sahf
pop
add
ins
into
dec
pop
cmp
push
stos
cld
ins
sub
mov
cmp
int3
fmul
pop
fwait
aas
mov
(bad)
jge
call
movs
pop
pushf
sub
pop
int3
pop
out
adc
xor
(bad)
jmp
in
dec
into
or
mov
cli
mov
in
aas
call
(bad)
sbb
fcomp
fstp
pop
jge
xchg
(bad)
scas
rcl
shr
mov
in
ds
cs
rcr
fcmovne
ins
int3
dec
lea
fs
mov
pushf
lds
(bad)
stc
dec
jo
push
scas
push
aas
shr
cdq
xor
inc
outs
stos
fmul
stos
int3
scas
imul
fsubr
mov
rcr
sbb
sbb
pop
jmp
fistp
outs
sbb
pop
stos
lea
sub
adc
dec
cmp
mov
fdivr
mov
cmp
jge
mov
(bad)
add
pop
fcomp
jnp
ins
jmp
aad
xor
std
dec
pop
sti
dec
pushf
lahf
mov
mov
test
sar
sti
iret
jmp
cmp
adc
int3
fnstcw
into
sub
and
or
add
(bad)
add
dec
ffree
(bad)
cmp
in
jmp
call
sbb
sbb
imul
jae
pop
out
dec
sub
int3
sbb
adc
sbb
mov
hlt
fldcw
push
adc
das
stc
in
sub
jmp
jge
lods
test
into
jmp
mov
(bad)
ficomp
mov
(bad)
std
mov
popa
push
cmp
jge
ins
mov
inc
push
push
in
mov
mov
push
les
dec
ss
ins
mov
or
adc
lds
push
mov
faddp
push
ins
pop
sub
jge
mov
call
push
mov
push
sti
sbb
mov
mov
lea
(bad)
call
jmp
jp
mov
push
cmc
fsubr
mov
retf
push
loop
sbb
ins
sbb
sub
ds
rep
or
jl
sbb
into
mov
retf
dec
outs
and
mov
iret
in
fcomp
sti
(bad)
popf
mov
and
pushf
or
mov
sbb
lods
mov
mov
outs
or
mov
push
(bad)
mov
jl
sbb
mov
sbb
and
fs
mov
std
push
mov
xor
das
mov
pop
or
ins
fstp
mov
pop
push
(bad)
retf
dec
dec
or
out
lods
cmp
pusha
mov
aam
sub
jmp
pushfw
nop
sbb
das
int3
imul
add
and
test
mov
jo
dec
js
int3
mov
fnstsw
in
(bad)
das
pop
mov
mov
in
idiv
sub
rcr
pop
jge
mov
ins
es
ficomp
cmp
mov
pop
or
sub
cmp
arpl
in
movs
fld
add
jnp
test
dec
cmp
mov
mov
ror
dec
pop
rcl
retf
or
shr
cld
jb
lods
fwait
(bad)
jge
loop
jecxz
dec
out
aam
dec
sbb
shr
std
mov
sbb
and
mov
shr
retf
ins
pushf
push
cmp
cmp
fnstsw
int3
mov
stos
fst
into
clc
lea
mov
dec
jnp
jl
push
in
rcr
or
lods
shr
cmp
lea
inc
jl
sar
ins
cmc
shr
shr
mov
pop
int3
mov
pop
popf
jge
call
dec
add
retf
lods
int3
fcmovnbe
data16
sbb
rcr
rol
sub
adc
(bad)
sub
jmp
fwait
loopne
dec
sub
jg
stos
cmp
pushf
sub
jnp
sbb
imul
pop
stos
push
cs
rcr
call
and
leave
call
fsubrp
fwait
scas
sbb
sub
mov
mov
inc
cli
sbb
jle
lahf
mov
lods
pushf
lods
pop
dec
scas
cmp
xor
aaa
fistp
nop
mov
push
enter
bound
aas
jl
push
fstp
jns
xor
inc
xor
push
sub
out
add
adc
xchg
ror
sbb
pop
sar
mov
lea
in
cmp
ficomp
or
jle
cmp
mov
cmp
jg
in
pop
cld
lock
sbb
fidivr
jl
std
push
fs
into
dec
fwait
test
jnp
ret
cmp
ficomp
xor
or
dec
int3
in
mov
xor
ds
sbb
lods
int
pop
pop
mov
sbb
pop
fmul
loopne
dec
mov
mov
lock
push
sbb
dec
(bad)
push
lahf
rcr
sti
adc
(bad)
in
scas
pop
sbb
jg
sbb
jmp
ds
sbb
ins
sar
jmp
clc
std
(bad)
lea
pop
retf
cmp
imul
or
xor
gs
stos
ret
fsub
jg
pop
sbb
lds
int3
std
jp
pop
mov
dec
call
lahf
jns
aaa
mov
ds
in
pushf
push
mov
sbb
ins
sbb
cld
fnstenv
ror
or
jo
ds
push
rol
and
sbb
jbe
pop
lahf
adc
scas
sar
jmp
shr
jp
jmp
lahf
jmp
push
jae
sbb
dec
cmp
mov
call
jbe
enter
cmp
sbb
lods
push
sub
pop
popf
pop
cmp
pop
mov
mov
cmps
xchg
das
pop
pusha
mul
jmp
jo
mov
cmp
mov
rcl
or
imul
mov
dec
stos
int
jge
sub
mov
scas
adc
mov
ins
mov
cmp
nop
sub
xchg
scas
das
aas
std
fsubr
add
pop
mov
mov
inc
into
mov
scas
ins
retf
les
stos
fidivr
pushf
push
(bad)
jmp
loopne
cmp
pop
int
in
sbb
dec
push
in
push
cld
lods
(bad)
es
mov
das
sub
fst
xchg
pop
cmp
dec
cld
mov
int3
fiadd
sbb
jg
dec
fcomp
call
push
test
or
popf
into
aad
inc
fisubr
clc
sbb
call
mov
or
mov
push
or
dec
pop
push
cmp
mov
ins
sub
sub
pop
arpl
fwait
pop
(bad)
cdq
retf
(bad)
int3
push
cmp
mov
fistp
retf
les
xchg
cld
retf
pop
dec
pop
dec
fstp
lea
mov
test
add
fisttp
xchg
jl
dec
cmp
pop
sub
pop
cmp
pop
sahf
push
pushf
xor
mov
repnz
lods
dec
push
retf
sub
aad
cmp
leave
lea
jmp
vshufps
cmps
mov
dec
mov
test
int3
fwait
mov
and
pop
mov
gs
out
test
push
fsub
cmp
sbb
pop
mov
in
retf
data16
mov
enter
lods
femms
jp
loopne
aas
or
adc
pop
stc
fistp
lods
in
lods
pop
push
cld
call
(bad)
cmp
dec
call
scas
mov
in
pop
or
jl
sub
jp
push
imul
ins
retf
mov
fcom
pop
cmp
ror
sub
cmp
mov
fist
inc
pop
or
test
retf
mov
or
jnp
rcr
lods
pop
mov
push
cmp
cmp
ds
aas
dec
aam
imul
or
dec
hlt
add
mov
nop
cdq
jmp
sub
mov
dec
jge
fs
ins
mov
push
clc
sahf
(bad)
stos
sbb
pop
jmp
stos
xor
cmps
jge
adc
push
jg
pop
push
jecxz
ins
jge
ret
aad
or
push
mov
fs
jl
sbb
mov
int3
push
jle
aas
repz
mov
fwait
push
ins
std
cld
cli
pop
mov
stos
loopne
mov
add
fmul
ins
jge
retf
sahf
lea
fcomp
in
mov
jmp
jns
addr16
mov
les
cmp
in
ds
cs
ins
push
je
pop
(bad)
mov
ins
int
jl
mov
int3
ret
(bad)
retf
in
sbb
xchg
adc
pop
ds
sbb
sub
hlt
lods
das
and
xor
sub
dec
repz
pop
std
cli
or
dec
arpl
retf
mov
cmp
lods
jle
ins
outs
stos
jp
jl
mov
jmp
aad
stos
int3
mov
fidivr
into
mov
popf
cs
ins
cld
pop
lahf
mov
mov
mov
pop
(bad)
mov
pop
repnz
pop
in
int3
nop
sar
ror
jle
mov
or
ss
shr
xor
fsubr
dec
imul
mov
push
pop
jge
jmp
sub
outs
push
push
sbb
cmps
cmp
jb
jb
(bad)
int3
ins
dec
sar
gs
or
cs
test
jb
jp
leave
fstp
cmps
cwde
push
dec
mov
push
cld
sti
ins
movs
sub
sbb
dec
push
ins
pop
jge
push
hlt
pop
mov
sahf
dec
cld
test
les
lods
test
pop
xchg
push
stos
cmp
(bad)
icebp
loope
push
pop
pop
mov
xchg
popf
push
jge
int
dec
mov
pop
iret
cdq
xor
adc
mov
jle
mov
test
out
jl
jl
pop
out
adc
cmp
pop
sbb
fistp
frndint
nop
dec
dec
popf
push
cmp
jnp
pop
or
ficomp
ficomp
sbb
aam
mov
mov
pop
cli
inc
test
retf
pusha
pop
and
pop
mov
fmul
xor
mov
sub
call
and
enter
jo
sub
mov
out
jl
add
and
(bad)
mov
xchg
ins
inc
loop
lea
cmp
or
std
jb
in
pop
adc
dec
pop
ins
pcmpeqw
xor
in
sti
push
stos
lods
scas
int3
pop
ds
mov
xor
aaa
jmp
cwde
push
sbb
fst
imul
cli
jl
out
rol
mov
mov
push
or
sub
aad
retf
aas
stos
dec
into
or
push
(bad)
jmp
retf
scas
sub
dec
(bad)
in
(bad)
mov
ficomp
popf
xchg
jnp
mov
shl
retf
jge
pop
pop
(bad)
or
adc
xchg
jmp
in
fwait
outs
pop
dec
test
and
movs
outs
dec
into
and
std
pop
(bad)
jge
call
mov
push
cld
jmp
xchg
or
mov
pop
rcr
pushf
pop
(bad)
cmp
std
or
fnstsw
popf
xor
int3
pop
(bad)
jmp
fnstcw
neg
repz
xor
pushf
sti
lods
fwait
stos
jno
cmp
call
int
mov
hlt
movs
or
retf
cwde
leave
and
movs
jmp
in
nop
sub
mov
lods
mov
pop
adc
jecxz
push
sti
inc
lahf
jl
inc
sub
mov
pushf
iret
or
ret
xor
cmp
(bad)
jmp
xchg
xchg
push
mov
mov
lock
mov
sub
in
mov
sbb
add
xchg
(bad)
jge
adc
stos
sti
mov
(bad)
mov
mov
rol
adc
xor
mov
sbb
and
adc
adc
in
sub
jmp
push
test
cdq
lods
outs
dec
sbb
jmp
dec
lahf
(bad)
cmps
mov
pop
xlat
and
rcr
int3
jmp
push
loop
(bad)
sti
in
push
mov
imul
inc
(bad)
mov
stos
es
and
dec
cmp
lea
sbb
cmp
sar
dec
jnp
mov
xchg
jb
stos
test
ins
mov
adc
hlt
cli
cmp
scas
pop
test
pop
pop
lea
mov
jmp
(bad)
call
mov
fs
sub
mov
fs
jmp
stc
cmp
mov
ret
cmp
fcom
das
sub
sub
ds
dec
mov
enter
push
bsf
mov
repnz
in
dec
std
mov
jl
(bad)
cmp
fimul
sub
adc
push
int3
push
ror
test
lahf
dec
cmp
jl
cmp
shr
jo
mov
xchg
les
jge
pushf
(bad)
or
dec
mov
pop
fwait
sub
dec
sti
mov
pop
xchg
(bad)
sar
mov
pop
pop
xchg
sbb
(bad)
push
sar
jbe
out
(bad)
mov
sbb
cmp
pop
sub
mov
pop
ja
cli
cmp
pop
jmp
(bad)
xchg
jmp
mov
out
pusha
jb
push
inc
sub
push
sbb
arpl
cli
or
sbb
sahf
movs
loopne
mov
ins
push
jmp
jne
mov
movs
in
ficomp
fstp
inc
gs
push
cmp
adc
fld
int3
lea
sbb
pushf
jmp
cmp
int
xchg
in
ror
sti
mov
mov
gs
mov
loope
xchg
add
inc
sub
lods
jmp
and
adc
aam
lods
int3
mov
pop
sub
mov
cmp
(bad)
or
inc
je
mov
aaa
mov
nop
jp
sahf
call
hlt
lods
push
lods
push
sbb
sbb
(bad)
fwait
pushf
xchg
sbb
xor
xor
mov
sti
out
pop
out
popf
sbb
jno
std
sub
nop
or
adc
imul
cmp
sub
aaa
or
stc
ins
jne
push
stos
ror
jb
mov
outs
retf
mov
and
xchg
mov
cwde
ins
ror
fnstsw
lods
xchg
push
aam
ins
imul
adc
push
aad
add
dec
popf
psadbw
sbb
cld
mov
std
dec
je
sar
mov
lahf
pop
mov
in
inc
adc
fild
repnz
push
add
int
mov
mov
stc
mov
push
cmp
bswap
enter
cmps
add
mov
mov
int
cdq
dec
in
cs
mov
repz
aaa
fisttp
dec
push
dec
dec
ins
loope
sub
sbb
lods
mov
loop
xor
xor
mov
cmp
pop
cld
bound
arpl
jmp
aam
retf
std
lods
mov
shl
sti
retf
or
adc
or
sub
sbb
or
pushf
jnp
aam
jge
mov
add
lea
pusha
or
fucomp
sti
mov
cmp
(bad)
jnp
mov
fwait
dec
aaa
or
xchg
dec
cli
jge
hlt
in
mov
add
fninit
jnp
pop
sbb
rcr
sub
sub
(bad)
retf
mov
cmps
jbe
xor
rcl
lods
into
into
sbb
sub
rcl
ins
imul
jnp
mov
lods
cmp
(bad)
fisubr
xchg
aam
in
int
into
loopne
push
movs
cmc
jl
cmc
xor
mov
mov
mov
sti
xor
call
shl
dec
maxps
dec
retf
pop
(bad)
cmp
in
in
cmp
and
pop
push
rcl
pop
xchg
push
outs
xlat
mov
fistp
lahf
xlat
mov
std
mov
stos
or
cs
mov
mov
mov
mul
in
int
fwait
scas
pop
fwait
std
in
sub
xlat
cmp
and
fs
fld
pop
cmp
or
push
add
lea
jns
sub
add
jo
sub
mov
(bad)
jne
cmp
test
std
ds
sub
rcl
xchg
hlt
sbb
mov
cmps
sbb
adc
jne
cmp
mov
int3
sub
jmp
sahf
test
test
in
test
fistp
mov
ss
jg
test
cmp
mov
or
ins
rcr
mov
xor
(bad)
and
popa
(bad)
call
jp
mov
leave
ja
int
inc
jae
adc
adc
retf
dec
jg
mov
cmp
xor
sub
mov
stos
int
push
sahf
sbb
jbe
in
pop
cld
rol
call
fnsave
dec
push
jecxz
mov
(bad)
icebp
jb
imul
clc
xchg
pusha
out
sbb
jns
aam
repz
movs
popa
in
(bad)
xor
mov
les
jl
sub
mov
sbb
inc
popa
ins
in
clc
inc
inc
es
popf
xchg
pop
lock
imul
cli
adc
jbe
lea
jmp
xlat
in
cmp
int
retf
mov
sub
jmp
ja
jge
mov
ins
(bad)
jbe
ins
jle
jmp
add
int
pushf
xor
dec
jmp
(bad)
xchg
js
ins
sub
stc
mov
aad
cs
sbb
out
sub
ss
jb
arpl
int
fst
mov
pop
pop
add
adc
xchg
add
cld
lahf
adc
mov
adc
ins
ss
std
mov
fcmovnu
push
in
mov
jp
jp
mov
jl
jge
movs
lock
mov
jmp
in
jb
rcr
movs
mov
dec
jecxz
cmp
into
jo
sub
int3
inc
(bad)
mov
cmp
(bad)
cs
mov
pop
push
adc
inc
sub
xchg
dec
push
mov
movs
mov
cdq
in
nop
ins
shl
jno
sub
idiv
inc
lahf
fwait
or
mov
push
pop
cmp
popf
pop
mov
jns
out
sbb
mov
push
sub
inc
popf
ins
into
out
bound
mov
xchg
or
and
jmp
or
cmp
push
jae
pop
aad
cmp
pop
cli
sar
imul
adc
add
stc
mov
add
ss
jne
mov
xchg
cwde
xchg
fstp
mov
movs
dec
(bad)
mov
shl
fcmovbe
stc
sbb
int3
mov
xor
mov
jne
and
int
call
jbe
adc
or
pop
push
mov
inc
je
lods
xlat
in
inc
xchg
xchg
dec
bound
xchg
nop
sub
mov
inc
jle
lock
inc
in
pop
in
test
lods
sbb
es
mov
int3
mov
fisubr
cdq
cmp
adc
jmp
cmp
pushf
cs
mov
mov
xor
ja
bound
and
pop
inc
inc
dec
mov
or
sub
aas
lods
leave
sub
enter
je
add
sub
call
loop
cmp
xor
sub
fild
pop
(bad)
xlat
cmp
add
jge
out
int
xor
fstp
or
and
lahf
nop
shl
(bad)
fwait
xor
xor
jg
aaa
hlt
sahf
and
outs
jl
popf
xor
mov
cmp
push
add
mov
jmp
xor
fadd
jecxz
cmp
mov
jl
xor
push
or
(bad)
cli
add
lea
ds
pop
(bad)
sbb
ins
xchg
mov
popa
xchg
pop
add
sar
inc
xor
fcmovb
push
mov
pop
jp
or
jl
stos
mov
test
pusha
inc
in
xchg
mov
in
fwait
mov
nop
jne
xchg
push
stos
inc
cmp
lds
sti
xor
pop
xchg
sub
pop
out
cmps
pop
cmp
pop
aas
mov
in
sub
(bad)
fisttp
push
es
call
fcom
mov
push
into
pop
cdq
or
push
outs
jg
mov
xor
add
lods
gs
lods
jp
inc
push
push
out
aam
pop
cli
jge
jnp
xor
pop
xor
jg
pop
xchg
jae
loopne
(bad)
fwait
dec
adc
push
mov
pop
push
call
jbe
lock
and
add
add
sub
pushf
in
ds
pop
lea
mov
pop
mov
dec
or
cmps
clc
icebp
pop
and
call
loop
sbb
icebp
(bad)
or
das
mov
ins
repz
xchg
cmovp
pop
pop
lea
in
push
sbb
dec
sub
(bad)
jle
fst
popa
mov
mov
push
xor
cwde
mov
movs
xor
sahf
cmp
mov
out
add
sub
jl
and
lock
mov
or
call
and
lock
fwait
xchg
cmp
add
or
sub
pop
fsubr
or
in
and
mov
jl
sbb
fist
or
sbb
enter
jmp
ins
dec
outs
inc
fimul
jne
mov
imul
sbb
pop
loop
ret
push
adc
xchg
adc
pop
pop
lea
xor
push
in
lock
mov
push
dec
rcl
or
sub
mov
cmps
sbb
bound
pop
test
xchg
aaa
dec
jl
in
shl
(bad)
(bad)
in
push
and
jg
dec
push
(bad)
imul
popa
idiv
jns
xor
in
(bad)
cdq
mov
ja
jbe
mov
jmp
and
cmp
push
or
lock
add
push
xor
push
ret
retf
mov
jmp
sahf
ret
adc
mov
dec
or
pop
scas
or
and
sbb
cs
stos
push
sbb
imul
sub
adc
xchg
dec
scas
cmp
inc
inc
xchg
ret
popa
ins
pop
cmp
push
popa
sbb
mov
xchg
mov
sbb
into
pop
xchg
arpl
push
and
mov
cmp
sbb
xchg
jp
ins
mov
xor
sbb
iret
mov
mov
movs
push
ss
sub
rcl
(bad)
cld
xchg
pusha
movs
popf
sahf
cmp
cmp
ficom
xor
adc
call
test
jmp
cmp
pop
xchg
mov
sub
jl
ds
jmp
ror
test
cmp
je
push
push
xor
scas
jmp
sub
ss
mov
popf
mov
popf
or
(bad)
aaa
cli
cli
clc
push
xchg
xor
loopne
pop
jmp
js
mov
movs
in
in
sbb
inc
xor
data16
dec
push
scas
fld
jmp
cmp
cmp
pop
pop
fcomip
pop
aad
pusha
push
mov
pop
add
xchg
xchg
xor
lods
out
bnd
xchg
push
xchg
xor
retf
xor
fild
or
push
aad
ret
inc
push
push
fcomip
dec
leave
add
xor
inc
cld
imul
(bad)
cmp
cli
das
aas
ins
inc
xor
ins
pop
adc
mov
fiadd
pushf
mov
ins
dec
lock
or
mov
cmp
adc
mov
mov
cmp
movups
daa
sbb
xlat
jns
mov
popa
sub
mov
imul
or
push
and
ins
mov
xchg
int
retf
inc
lahf
loope
in
packssdw
xchg
fwait
xor
ins
mov
(bad)
push
sbb
popa
inc
xlat
mov
daa
mov
cmp
xor
repz
mov
push
test
xor
mov
jb
push
push
add
or
pop
dec
sbb
ror
and
sti
lds
leave
fdiv
xor
mov
mov
mov
cmp
das
cmp
inc
ds
shl
push
xchg
neg
dec
aaa
aaa
sbb
repnz
sar
sbb
fsub
and
fs
sub
cmp
add
ds
fistp
out
pop
jne
adc
les
retf
in
test
xor
xchg
test
jmp
sbb
mov
push
bound
jo
cmp
scas
or
add
pop
pop
cwde
xor
mov
stos
sub
mov
mov
sub
inc
pop
xchg
pop
mov
cmp
xchg
shl
fdiv
lods
aas
push
dec
mov
movs
ins
jle
sahf
sbb
xor
fidiv
xor
pop
out
addr16
push
ins
ins
shl
and
pop
sti
or
push
fwait
aaa
adc
pop
imul
pop
push
cmp
repnz
clc
(bad)
jbe
inc
pushf
pop
dec
leave
and
mov
out
pop
sbb
lods
inc
dec
pop
push
cmp
lock
jne
adc
pop
cdq
(bad)
loopne
ss
pop
jp
dec
sub
and
jp
add
sub
inc
push
nop
fcmovu
fidivr
ret
push
mov
pushf
xchg
mov
mov
push
mov
bound
mov
es
retf
or
mov
jmp
push
jg
or
aaa
mov
mov
into
jno
pop
mov
(bad)
fbstp
or
lods
inc
stos
or
jne
aas
bound
dec
mov
jl
cmp
and
xchg
arpl
inc
and
mov
and
js
mov
push
jp
aas
jmp
or
add
mov
jp
neg
xor
outs
pop
sbb
push
test
pop
loop
gs
ss
mov
mov
mov
or
pop
test
xchg
test
or
dec
or
mov
inc
add
inc
xchg
xchg
rcl
mov
retf
sbb
sbb
xor
xchg
sub
xchg
jnp
adc
mov
fimul
pop
fild
out
sub
mov
xchg
ret
mov
sub
stos
pop
inc
test
add
leave
mov
ret
clc
das
mov
outs
mov
mov
cmp
pop
inc
inc
jecxz
xchg
mov
mov
xor
push
cmp
mov
iret
add
cld
mov
bound
xchg
mov
push
xchg
cmp
lds
into
ins
nop
mov
inc
(bad)
xchg
adc
cli
call
lds
jnp
xchg
push
retf
nop
or
sub
into
sbb
aaa
(bad)
dec
xor
aas
shl
xchg
sbb
lock
sub
sar
js
ror
retf
dec
jne
xor
and
jns
ret
ss
idiv
mov
test
xchg
cmp
mov
mov
js
lea
hlt
sub
or
je
xchg
sub
mov
and
push
mov
jl
scas
xchg
retf
mov
ja
lea
mov
push
fistp
mov
mov
cld
popa
stos
retf
cmp
mov
pop
xchg
sub
out
mov
out
xor
movs
call
ret
repnz
adc
inc
jg
sub
push
pop
cwde
sub
fist
aaa
xchg
xchg
add
pop
xor
loop
pop
stos
shl
inc
sbb
cmp
inc
scas
sar
rcl
ds
cdq
sub
add
jb
push
or
push
cmps
push
sbb
xchg
dec
inc
mov
cmc
jmp
or
jnp
cmps
pop
adc
inc
cli
inc
repz
lock
xchg
pop
inc
retf
dec
aas
das
fist
or
sub
sub
push
push
and
aas
fstp
sbb
ficomp
mov
pushf
push
lods
mov
push
arpl
sbb
push
test
lss
jmp
repnz
add
jo
mov
mov
adc
lods
test
imul
outs
outs
imul
clc
das
data16
in
in
mov
test
inc
inc
iret
inc
push
das
fild
mov
mov
sbb
test
xchg
mov
test
add
pushf
imul
clc
scas
(bad)
xor
sub
fisub
xchg
dec
jp
js
js
pop
mov
sbb
cmps
or
enter
test
mov
add
mov
loope
dec
and
mov
xchg
lods
or
cmp
sti
jp
add
xchg
(bad)
jp
cmps
jb
lahf
dec
fdiv
test
retf
cmp
inc
fwait
leave
and
pushf
cmp
scas
or
repnz
sub
sub
clc
inc
mov
mov
inc
xor
add
mov
mov
push
mov
sbb
add
dec
js
ret
sti
in
inc
pop
cmp
push
jns
test
pop
je
cmp
sahf
inc
adc
iret
int
fistp
sbb
shl
mov
cmp
dec
stos
test
mov
mov
cwde
sbb
cdq
jl
mov
pop
mov
dec
mov
aas
push
dec
repnz
sbb
loop
or
frstor
inc
ja
mov
mov
ins
adc
xor
cmc
sub
sbb
dec
pushf
mov
sub
dec
cmp
popf
cdq
cmp
or
jbe
shr
bound
or
(bad)
(bad)
or
jle
arpl
cli
push
jmp
data16
cmp
jp
aad
pop
add
in
shl
jl
cmps
pop
xchg
in
or
aas
inc
cmp
(bad)
mov
inc
dec
pop
xchg
cmp
mov
mov
jae
jl
mov
push
pusha
mov
push
adc
mov
aas
mov
fstp
ret
mov
dec
retf
popa
fidivr
jno
jg
ss
dec
push
clc
aaa
in
cmp
xchg
push
enter
push
cmps
mov
clc
mov
cmp
lahf
dec
je
jnp
cmp
dec
adc
sub
dec
ss
xchg
mov
cdq
into
add
fwait
pop
stos
retf
adc
aaa
fwait
rcr
ja
cmps
inc
daa
dec
dec
push
add
imul
cmp
std
stos
xchg
bound
icebp
inc
pop
jnp
iret
hlt
sti
inc
pushf
cdq
loopne
jno
sbb
cmp
std
mov
dec
mov
cmp
dec
jmp
cmps
jp
(bad)
or
loop
stos
xlat
in
daa
idiv
cld
adc
mov
sahf
aas
fidiv
std
hlt
jbe
fwait
pop
repnz
mov
shl
xchg
xchg
(bad)
cmps
push
push
cmp
xchg
dec
add
jo
xlat
jae
xlat
xor
cmc
xchg
mov
retf
add
cld
mov
ss
movs
push
mov
add
mov
mov
dec
movs
addr16
imul
cmps
lea
mov
popf
aas
jae
sub
mov
add
mov
and
mov
cmc
jb
shl
sbb
test
xchg
or
mov
(bad)
jle
xor
xchg
clc
jae
mov
or
or
jb
and
xchg
dec
scas
outs
lahf
imul
jl
movzx
sti
or
cmp
sub
(bad)
jno
add
sub
aad
cmp
and
dec
jb
popf
inc
(bad)
mov
push
dec
bound
add
push
test
sti
jno
adc
repnz
sub
outs
scas
xchg
test
add
cmps
xor
mov
data16
xor
ret
movs
push
shl
mov
sti
in
jae
jle
mov
jp
mov
sar
jae
in
inc
xchg
dec
test
inc
dec
jle
xchg
inc
cli
push
nop
test
mov
xchg
retf
mov
stc
xchg
xor
dec
fdivr
add
mov
inc
or
ds
lea
movs
test
mov
inc
mov
lahf
out
mov
dec
xchg
xchg
data16
xor
loop
inc
xchg
es
xchg
xlat
dec
test
test
pop
inc
fisttp
pop
mov
cmp
mov
dec
inc
inc
jb
mov
repnz
es
pop
aas
pop
fwait
add
inc
push
daa
xchg
mov
xor
xor
fs
jne
ss
mov
arpl
inc
xchg
xor
mov
das
inc
xchg
xchg
stos
das
std
enter
sahf
mov
into
push
cmc
mov
xchg
or
ins
dec
repnz
jbe
aas
cdq
xchg
or
sub
dec
sub
in
mov
sar
pop
sub
pop
mov
mov
cld
xchg
jb
scas
push
pop
xor
add
popa
and
call
xchg
and
xchg
dec
pusha
aas
mov
xchg
(bad)
out
xchg
or
test
dec
cmp
mov
or
xchg
xchg
mov
mov
(bad)
mov
inc
mov
cld
retf
outs
movs
stos
pop
mov
mov
push
and
outs
cmp
adc
inc
int
push
xor
mov
lods
mov
and
mov
sbb
or
or
sub
fwait
push
and
cvtpi2ps
fxch
cmp
cli
int3
outs
imul
fisttp
pop
pop
dec
lods
into
mov
arpl
mov
in
pop
fisubr
cld
fsubr
cli
inc
iret
cmps
mov
jl
out
aaa
add
jp
xor
rcr
lds
fmul
call
ror
fadd
(bad)
adc
(bad)
imul
push
addr16
sub
or
popa
pop
fcomp
adc
adc
xchg
mov
or
popf
clc
and
xor
add
push
lahf
fmul
mov
pop
into
fsubr
mov
out
stos
or
fwait
pop
push
xlat
push
mov
call
xchg
xchg
mov
std
fisttp
mov
fcmovb
int3
cmp
sahf
sbb
test
(bad)
int3
je
sbb
dec
mov
mov
popf
cs
mov
scas
pop
fcomp
sub
push
mov
stos
or
cmp
pop
sub
pop
sub
jo
int3
call
sbb
add
and
fidivr
fdiv
sub
cwde
gs
fmul
sbb
sub
mov
jle
int
dec
push
ins
movs
fsubr
cs
popa
fstp
ds
push
pop
loope
xlat
(bad)
mov
cmp
lea
mov
and
test
outs
(bad)
dec
dec
mov
iret
pushf
pusha
mov
fdivr
cmp
sub
loopne
scas
fsubr
inc
(bad)
lahf
idiv
adc
rcr
in
adc
mov
fiadd
pop
jns
dec
fdiv
fdivr
(bad)
pop
mov
outs
(bad)
sub
stos
dec
fcom
pop
mov
mov
pop
ins
test
mov
fcmovbe
sbb
jo
icebp
jne
push
test
lahf
aam
mov
jnp
aas
int3
cli
sahf
(bad)
out
(bad)
scas
mov
dec
cli
mov
fdivr
sahf
dec
fwait
cs
rcr
or
add
dec
jge
aam
ds
push
int3
cli
mov
fisubr
rcr
fcom
(bad)
or
fdivr
adc
in
mov
jg
int3
inc
push
sbb
outs
fsub
push
jmp
fmul
nop
dec
call
call
imul
cdq
int
mov
sbb
or
fmul
sub
jo
imul
xor
(bad)
lock
mov
sbb
popf
fmul
frstor
jns
lods
adc
pop
aas
cmp
call
fisubr
sub
sahf
jmp
fmulp
imul
or
fistp
fcomp
or
pusha
in
lahf
cs
cld
sbb
sahf
fdivrp
fnstsw
shrd
pop
lahf
pop
test
(bad)
sbb
std
sahf
fdivr
jnp
in
or
fstp
mov
mov
dec
inc
cmp
fistp
iret
fsubr
sbb
or
fdivr
dec
fnstcw
push
test
jmp
fistp
aam
pop
mov
xor
cmp
nop
fdivr
fcmove
(bad)
push
fnstcw
fdivr
imul
jmp
sub
inc
cmp
(bad)
jge
pushf
test
call
lods
int3
or
idiv
call
cld
int3
dec
stos
int3
mov
fstp
sti
sar
cmp
popa
cmp
jle
mov
adc
add
out
test
pop
pop
add
mov
repz
fmulp
jmp
jns
and
sti
ds
pop
das
rcl
in
stc
int3
mov
(bad)
outs
pop
jmp
fmul
pop
outs
cmp
adc
call
mov
mov
retf
cli
jmp
sar
cmp
jl
mov
ds
mov
or
cs
(bad)
mov
inc
cmp
cmp
shr
sbb
int3
fmul
retf
push
pop
pushf
retf
(bad)
outs
aad
scas
ins
dec
fdivr
adc
sub
pop
jnp
dec
sub
fadd
sbb
fwait
mov
pop
cdq
pop
inc
cld
pop
jmp
add
or
xor
jae
(bad)
cmp
retf
lahf
ins
pop
jmp
dec
dec
stc
mov
mov
pop
in
sub
pushf
fcom
fidiv
sti
psllw
js
int3
mov
cmp
mov
test
ror
in
(bad)
ficomp
retf
jle
sub
mov
data16
sbb
imul
and
sahf
pushf
cmp
or
push
cmp
lods
ds
lods
into
sahf
sbb
pushf
jle
cmp
ins
push
pop
(bad)
fdivr
out
lahf
ficomp
mov
sub
int3
sub
in
jmp
mov
or
pop
jmp
mov
fstp
outs
fcmovb
(bad)
in
fdivr
sub
sub
dec
fnstsw
pop
sbb
dec
cmp
fsubr
dec
das
pop
jmp
mov
jp
out
nop
retf
or
ins
imul
cmp
mov
push
or
jl
pop
mov
cmp
push
pop
sub
ins
mov
outs
popf
dec
pop
cld
push
mov
cmp
pushf
fst
push
lods
sub
ins
jb
dec
push
in
paddq
cld
cs
fcomp
jge
mov
inc
add
js
into
aam
mov
sti
jp
sahf
jns
add
int
in
mov
fisub
(bad)
ins
fs
cmp
(bad)
std
or
sbb
outs
scas
dec
dec
or
mov
pushf
jmp
sub
repz
mov
fsub
in
sbb
clc
mov
adc
xchg
aad
jmp
jmp
push
(bad)
jl
dec
pop
cs
int
sub
sti
in
xor
int3
pop
retf
mov
cld
lods
jmp
pushf
fisttp
mov
dec
ins
imul
jl
scas
rcr
clc
lea
jae
lahf
(bad)
shr
mov
aam
push
das
mov
arpl
sysenter
retf
ds
sub
imul
push
sahf
movs
ror
xchg
mov
fimul
sub
jmp
dec
jne
stos
dec
cld
cmp
mov
(bad)
jmp
stos
sar
lods
pushf
mov
aam
mov
shl
out
dec
(bad)
jmp
push
sub
mov
stos
jmp
mov
sti
popf
sub
fisttp
fmul
mov
(bad)
mov
fsubrp
in
jnp
or
retf
int3
(bad)
hlt
cmp
sbb
int
adc
fsubr
test
(bad)
out
rol
jg
sbb
dec
push
ins
stos
jnp
pushf
(bad)
ret
dec
popa
jp
mov
xchg
mov
movs
inc
sub
pop
fwait
(bad)
out
mov
pop
in
ins
dec
jmp
sbb
ds
jo
xchg
cs
call
pop
fucomi
dec
lods
and
sub
fwait
mov
lea
pop
call
sub
pop
lods
fdiv
mov
jl
sub
ins
jge
sbb
in
mov
sub
ins
popf
sbb
les
pop
or
jmp
cli
cmps
int3
scas
lods
mov
sahf
rol
sbb
jmp
cli
int3
into
mov
mov
dec
lods
pop
dec
scas
pop
mov
ds
mov
pop
pop
mov
dec
dec
(bad)
pop
sbb
push
sbb
push
pop
jge
fidiv
sbb
dec
jle
inc
subps
aad
mov
jnp
in
cs
lock
cmp
jmp
out
imul
mov
mov
or
adc
mov
mov
sar
or
inc
int3
jo
sti
or
xchg
sub
mov
jp
cmp
dec
push
mov
cmp
call
imul
retf
popf
pop
pop
sub
pop
sbb
dec
inc
int
retf
or
pop
arpl
in
ins
pop
cmp
ins
jl
ds
inc
mov
fwait
sub
push
fdiv
ficomp
sbb
pop
jl
cmp
pop
dec
cdq
call
pop
fisttp
std
int3
mov
ror
std
stos
std
(bad)
cli
and
rcl
out
fsubr
jp
jge
sahf
pushf
std
pop
fwait
or
ins
cmp
sub
popf
cwde
in
rol
lods
add
or
lods
sti
int
ins
pusha
fwait
stos
pcmpeqw
shl
mov
neg
rcr
popf
lods
dec
or
mov
ins
dec
lea
lods
les
sbb
(bad)
imul
or
sti
sub
fnstsw
retf
ins
sbb
lods
inc
pop
push
pop
dec
sbb
pushf
sbb
xor
dec
int3
sub
and
ss
sahf
dec
dec
cmp
sbb
mov
nop
pop
add
sbb
push
clc
dec
loop
fs
imul
jge
jnp
call
or
cwde
aad
shr
cmp
lods
jae
sub
sbb
mov
or
lea
adc
dec
adc
inc
imul
outs
inc
lea
pushf
scas
lock
or
retf
jnp
test
sub
sub
dec
xor
xor
xchg
jl
std
stos
cli
mov
test
dec
imul
or
sub
xlat
(bad)
std
ret
cwde
sar
fst
dec
jne
cs
pop
aas
test
call
mov
aad
sti
inc
mov
fisttp
mov
sub
ret
or
push
or
(bad)
dec
(bad)
pushf
dec
mov
mov
cmp
dec
adc
jmp
cmp
(bad)
push
cmps
push
jb
xchg
mov
jle
dec
lahf
jp
enter
sub
fiadd
int
xlat
adc
cmp
xlat
push
pop
sub
fsub
aad
mov
stc
scas
jmp
dec
add
shr
inc
mov
ins
repz
sbb
cmp
fwait
(bad)
in
or
jp
or
jmp
cwde
repz
sti
pop
(bad)
ds
pop
dec
sbb
cmp
adc
icebp
xchg
mov
in
cmp
out
retf
mov
cmps
sbb
sbb
jmp
aad
cmp
or
cmp
mov
outs
jge
jnp
mov
pop
jle
mov
(bad)
and
vcvtpd2ps
sbb
xor
retf
mov
pop
sub
and
push
mov
ins
cli
xor
in
push
out
repnz
push
push
add
pop
push
inc
lods
(bad)
or
cli
dec
mov
ficomp
ja
jge
scas
ror
push
ins
cld
push
mov
mov
ss
(bad)
inc
fisttp
pop
rcr
xlat
pop
imul
into
leave
and
int
fs
xchg
mov
retf
add
icebp
loop
sub
(bad)
jge
pop
sbb
cs
sbb
or
cmp
sti
cmp
push
cmps
jnp
mov
dec
mov
js
int3
sbb
movs
or
jle
iret
lods
mov
or
pop
jmp
call
ins
stos
jmp
loop
pop
mov
cmp
imul
aad
jl
jae
pop
fistp
cmp
(bad)
pop
push
or
mov
sbb
push
aam
ins
jge
in
dec
fstp
stos
xor
dec
cs
jmp
sub
adc
push
retf
lds
jmp
pop
fisub
or
mov
xor
int
(bad)
je
jbe
mov
cdq
xchg
in
sbb
sbb
push
std
dec
sub
imul
sbb
lahf
cmp
hlt
jmp
and
cmp
pop
stos
dec
fstp
shl
ror
int
int
add
sbb
mov
fimul
or
inc
push
test
mov
cs
adc
sub
mov
sub
jmp
(bad)
fistp
pusha
mov
sbb
(bad)
rcl
sub
mov
(bad)
mov
mov
inc
push
dec
cmp
jl
ins
jns
xchg
jb
lock
adc
std
je
mov
sbb
(bad)
cmp
pop
stos
sti
dec
addr16
cmp
or
ins
daa
mov
mov
ja
dec
daa
push
ins
xchg
cli
or
int3
in
popf
nop
ret
test
test
dec
cmp
jae
out
sbb
icebp
je
xor
mov
dec
int
xchg
lahf
rol
cmp
dec
ret
js
ins
cld
mov
out
sub
enter
jmp
mov
sti
adc
cld
mov
dec
jl
jl
ror
lahf
jl
in
mov
adc
jmp
mov
adc
sub
cld
mov
ins
mov
dec
and
add
pusha
push
lods
ss
test
inc
and
sahf
xchg
pop
sub
into
test
cmp
pop
xchg
dec
xor
sub
ins
jb
in
jo
push
sbb
es
dec
or
les
or
lock
xor
fxch
xchg
dec
pushf
pop
test
cli
imul
jmp
sub
push
call
data16
movs
pop
test
push
das
scas
push
call
jae
outs
sub
add
call
xchg
sti
sbb
mov
ror
fs
mov
pushf
xor
adc
lods
jae
in
call
ins
jecxz
mov
jo
add
mov
or
nop
xchg
in
rcr
push
xchg
xor
aad
adc
pop
fdiv
sbb
sahf
sbb
call
nop
jl
pop
sbb
shl
push
xchg
xor
jp
aas
adc
es
mov
inc
(bad)
cld
lods
adc
fist
jns
mov
fnstsw
mov
pop
or
cmp
add
pop
(bad)
ins
add
cdq
mov
call
into
dec
sub
rcl
jl
movs
dec
fs
loopne
cmp
inc
movs
xor
mov
and
call
jg
jge
arpl
dec
and
ins
or
pop
adc
or
enter
xchg
lods
dec
mov
popf
iret
(bad)
mov
and
mov
sbb
js
cmps
loope
dec
pop
lods
ja
mov
jmp
into
mov
lea
jne
jp
push
xor
sbb
adc
lea
add
cmp
xor
and
push
inc
or
mov
dec
jecxz
ret
fcmovnbe
jne
cmp
mov
inc
xor
xchg
push
xor
push
mov
shr
push
jp
cdq
lea
bound
or
sar
mov
mov
cmc
test
or
dec
mov
sti
jno
xor
pop
xor
cmps
mov
sub
pop
(bad)
ins
mov
das
aaa
jo
test
jg
jnp
add
enter
popf
idiv
or
inc
adc
test
xchg
in
clc
call
xor
call
(bad)
popf
(bad)
jp
xlat
push
leave
ret
xor
and
repz
mov
xor
std
jl
popf
pop
sbb
mov
(bad)
mov
sbb
sub
enter
nop
push
js
or
cmp
vminps
xchg
cmp
ret
mov
xchg
enter
ss
popf
xor
fist
mov
enter
sbb
sbb
jae
fldcw
aad
shr
xor
daa
inc
lods
jle
retf
dec
pop
dec
loope
jae
pop
and
and
pop
jae
xor
jl
hlt
or
fst
cmp
jmp
xchg
xchg
movs
jb
sbb
xchg
in
xor
or
bound
inc
dec
lods
mov
jo
mov
and
mov
jbe
sbb
or
pushf
ret
scas
add
sbb
xor
out
and
mov
cld
mov
or
lea
lds
pop
scas
outs
xor
push
push
mov
enter
pusha
dec
dec
xor
mov
sbb
xor
enter
dec
sub
or
fwait
popa
xchg
aaa
stos
mov
jb
popf
cdq
shl
mov
ja
fdivr
jne
mov
mov
jge
dec
movs
lods
scas
or
shr
outs
iret
retf
xchg
(bad)
aas
dec
push
or
sbb
jns
xlat
mov
(bad)
mov
push
cwde
dec
xchg
cdq
jge
outs
dec
push
jecxz
push
mov
cld
push
mov
jge
add
mov
inc
in
and
jmp
out
xchg
push
pop
mov
lods
pushf
rcr
dec
outs
aas
in
aas
push
mov
sti
xor
cmp
sub
sub
(bad)
bound
dec
cdq
sbb
adc
pop
jne
js
jle
pop
cdq
ins
fild
adc
jl
jp
or
and
jo
push
inc
dec
pop
mov
lods
fidiv
retf
jp
dec
adc
sub
nop
dec
or
mov
mov
or
test
das
mov
sub
shr
jne
and
shr
ret
mov
xchg
rol
pusha
jb
mov
dec
mov
xchg
push
test
out
mov
pushf
jnp
dec
lods
ins
xor
push
es
xchg
mov
xchg
sub
inc
mov
sub
outs
ss
jp
xchg
js
add
lods
int
repz
push
dec
xchg
adc
mov
mov
mov
mov
scas
jns
or
ins
sub
sub
mov
xor
add
popa
daa
in
pop
pop
ret
sbb
add
cmp
mov
(bad)
ficomp
setg
xor
in
xchg
fs
mov
inc
xchg
sub
pop
cdq
lahf
jo
dec
xor
dec
push
gs
shr
jmp
ins
dec
push
cdq
push
bound
mov
cmp
lahf
mov
pop
push
jae
cmp
mov
nop
adc
test
test
repz
iret
sbb
mov
jb
add
sub
sub
dec
dec
repz
call
lods
mov
dec
lahf
or
lock
mov
xor
adc
dec
inc
cmp
inc
or
(bad)
pop
mov
xor
and
dec
lahf
hlt
mov
xchg
jnp
into
dec
lods
je
xchg
xor
cmp
adc
add
inc
les
fistp
pop
sbb
mov
std
int
mov
or
lock
dec
jnp
sbb
or
ins
div
cli
fwait
sbb
dec
jp
cmp
(bad)
jne
leave
xor
push
inc
mov
jb
ins
xchg
ss
cmp
inc
cli
fsub
jnp
scas
lods
push
push
jae
leave
scas
(bad)
std
ret
sub
jge
inc
retf
cli
sub
mov
mov
pop
sti
jecxz
cdq
jecxz
pop
xor
dec
je
icebp
xchg
sbb
and
push
(bad)
jge
push
xchg
stos
cmp
xchg
dec
inc
and
xchg
xor
jg
pop
push
pop
loop
cmp
jns
jne
xchg
push
adc
pop
int
inc
ins
dec
ds
jb
adc
pop
mov
dec
aad
xor
movs
or
dec
aaa
jnp
inc
dec
or
sub
mov
aas
mov
stos
xchg
sbb
clc
cld
dec
nop
icebp
das
(bad)
outs
or
mov
fisub
push
popf
repz
jle
(bad)
pop
sbb
into
pop
shr
jl
push
mov
sbb
inc
in
sti
cmp
pop
mov
dec
mov
iret
es
cwde
push
and
outs
xor
mov
and
mov
aad
xchg
inc
mov
retf
js
mov
pop
inc
clc
xchg
cs
std
add
jne
mov
pop
in
xor
sbb
adc
mov
xchg
cld
mov
push
xchg
cwde
pop
xor
xor
fnstenv
ret
scas
sub
mov
(bad)
jge
push
imul
cwde
arpl
xchg
dec
mov
sub
cmp
imul
xor
xchg
xor
sub
pushf
nop
mov
jnp
neg
mov
sbb
mov
mov
pop
mov
cmp
lods
data16
sub
sub
add
scas
dec
mov
inc
popa
sub
data16
jb
inc
adc
mov
cmp
xchg
adc
mul
movs
pop
add
inc
or
mov
add
mov
xor
mov
mov
cmp
cdq
loopne
sub
icebp
sahf
shr
adc
cmc
sbb
adc
cmp
inc
and
aaa
pop
sub
lods
jl
jl
mov
dec
call
add
mov
sbb
stos
inc
add
or
sbb
imul
mov
hlt
movs
ins
(bad)
js
je
shl
inc
neg
repz
mov
enter
call
jge
test
test
dec
mov
cmp
adc
cmp
rcr
into
mov
jecxz
mov
or
dec
inc
mov
dec
cld
inc
jmp
and
and
mov
idiv
or
daa
push
mov
dec
in
mov
pushf
mov
movs
mov
(bad)
xchg
mov
(bad)
repnz
add
add
xor
push
xchg
stc
inc
repnz
pop
ret
inc
add
ins
jne
pusha
or
imul
add
cmps
xchg
jns
push
fs
mov
and
mov
int3
push
add
das
sbb
shr
imul
xor
xchg
sub
mov
pop
sub
dec
xor
mov
inc
push
xor
cli
jnp
js
adc
imul
sub
push
xor
sub
dec
mov
outs
xchg
jae
aad
call
and
xchg
and
in
mov
pusha
ret
pop
dec
xor
(bad)
das
sub
mul
cmp
push
mov
sbb
jb
stos
aas
cmp
jo
mov
test
cmp
xchg
lock
int3
mov
inc
mov
enter
jo
loope
ja
inc
in
inc
test
lock
dec
int3
mov
jg
cmp
fwait
movs
scas
jne
ins
dec
jp
xchg
ret
or
mov
div
mov
mov
mov
pop
sahf
push
adc
cmc
mov
in
(bad)
lahf
arpl
adc
xor
sub
sub
sahf
aaa
or
mov
inc
loope
and
jns
fwait
adc
fs
sub
out
and
push
lahf
call
or
cmc
jno
xchg
cmps
mov
inc
sbb
mov
cmp
sbb
ffreep
jge
add
xor
das
scas
js
enter
arpl
test
inc
cs
and
xchg
xor
dec
xor
sub
pop
out
cmps
xor
addr16
pop
outs
add
das
add
xor
or
adc
dec
inc
dec
rol
xor
add
add
jns
ret
shr
jg
mov
stos
inc
xchg
and
or
xchg
push
repz
inc
mov
adc
adc
(bad)
mov
popa
mov
stos
mov
xor
mov
or
mov
mov
ret
xor
inc
mov
or
sub
mov
inc
sub
add
cmp
jecxz
sbb
dec
cmp
or
mov
adc
inc
sub
shl
mov
xchg
xor
jp
mov
mov
lods
cmp
sbb
sub
jle
jae
(bad)
mul
inc
dec
cmp
mov
test
cmp
test
cmps
mov
mov
pop
jb
pop
ret
mov
jl
(bad)
sti
call
(bad)
cmp
jle
adc
jns
icebp
push
mov
xor
ret
repnz
stos
jge
test
addr16
add
cmp
es
into
stos
inc
xor
repnz
fldenv
dec
pop
mov
xor
clc
fs
aas
push
(bad)
dec
sti
dec
fisubr
or
arpl
cdq
inc
add
enter
mov
(bad)
into
cmp
add
or
arpl
inc
mov
shl
mov
inc
xor
outs
inc
loopne
fcmovnb
add
sub
inc
(bad)
call
int
sbb
or
dec
fstp
dec
repz
xchg
adc
adc
add
xchg
idiv
mov
in
cdq
stos
jb
iret
mov
or
xchg
stos
popa
push
das
sahf
and
inc
sti
cli
popa
inc
int
mov
out
mov
jecxz
ds
fwait
xchg
adc
lahf
add
inc
sbb
cmps
add
cld
mov
out
addr16
cld
jmp
pushf
inc
inc
mov
add
jp
mov
dec
mov
xor
or
inc
dec
lahf
iret
inc
jne
push
aas
cmp
aas
lods
imul
pop
mov
adc
mov
iret
xchg
cmc
imul
test
mov
stos
and
push
out
sub
mov
dec
out
cmp
xchg
sbb
leave
cmp
sub
inc
jle
int3
scas
sub
sbb
xor
in
lods
imul
sbb
fcomp
fwait
sub
sti
cld
lods
fdivr
inc
xor
(bad)
add
sub
test
pop
mov
push
pop
mov
fdivr
cmp
imul
leave
dec
lods
stos
fcomp
das
mov
xchg
ds
xor
cmp
mov
jns
psubb
jl
mov
fyl2xp1
xor
out
fadd
xchg
or
mov
dec
fdiv
mov
pop
dec
push
lahf
aam
or
(bad)
fmul
pop
jp
lods
mov
jmp
ins
mov
sub
sub
retf
mov
push
jmp
pop
dec
pop
(bad)
pushf
jle
mov
in
mov
adc
ss
sbb
ret
and
aam
mov
mov
cmp
dec
push
cli
mov
jmp
out
shr
pop
sbb
push
adc
mov
outs
push
pusha
outs
pop
loopne
pop
out
jl
test
jp
fmul
lahf
mov
or
loop
push
aam
lds
pop
sub
or
(bad)
test
pop
fsubr
inc
jmp
bound
adc
cmp
mov
pushf
sti
and
jnp
fmul
out
mov
das
lods
dec
stos
mov
xor
ret
repz
(bad)
sub
out
movs
iret
fsub
movups
or
lahf
xchg
fs
dec
(bad)
imul
mov
clc
std
test
popf
or
pop
push
ins
push
rcl
jno
fdiv
pop
jo
lods
adc
fcom
dec
xor
test
ins
sub
dec
scas
fstp
outs
(bad)
clc
std
fdivr
and
fcomp
call
icebp
movs
pop
fdiv
mov
int3
leave
into
std
jmp
or
(bad)
dec
or
pop
pop
mov
(bad)
or
sbb
movs
or
lea
cld
add
xor
fmul
shr
leave
push
pop
sub
int3
mov
cs
ds
fdivr
pop
das
fmul
test
fmul
adc
pop
xchg
stc
jns
ds
fdiv
mov
ins
pusha
cmp
nop
in
add
fmul
test
jno
leave
call
aas
fdivr
(bad)
jbe
xor
lods
mov
jno
pop
fucomip
or
fisttp
leave
fdivr
pusha
or
(bad)
retf
or
mov
pop
sub
fwait
pushf
cs
lea
stos
or
cld
nop
jae
fdiv
sar
push
push
cmp
fsub
fcmovu
mov
ins
sub
push
pushf
mov
dec
cli
mov
lahf
or
mov
fcmovu
lock
aaa
rcr
dec
mov
clc
jl
nop
jnp
lahf
into
mov
jmp
das
mov
mov
xchg
rcl
loope
xchg
cs
jns
xor
addr16
adc
xor
mov
cld
adc
mov
dec
jp
dec
sub
jns
mov
ficomp
outs
mov
mov
in
test
lods
dec
lods
xor
mov
pop
jbe
sar
fcom
xlat
sahf
push
dec
sbb
das
mov
pop
lods
dec
or
jg
or
sbb
pop
sbb
pop
pop
mov
push
cmp
aam
sbb
push
fdivr
jg
jge
(bad)
loop
fdiv
(bad)
pop
pop
pushf
bound
cmp
xchg
cli
mov
mov
ficomp
pop
sbb
(bad)
and
pmuludq
cdq
pop
loopne
xor
retf
fmul
call
jmp
or
jge
int3
mov
push
inc
ins
(bad)
cld
lahf
jb
lahf
mov
cdq
rcr
sub
call
mov
int3
scas
lahf
stc
cli
and
fst
dec
(bad)
retf
pushf
pop
cmp
call
ja
sbb
xchg
sub
cmp
pop
pop
in
nop
mov
cli
mov
iret
sahf
pop
sub
inc
adc
js
jo
or
add
push
ds
(bad)
(bad)
fcom
(bad)
mov
mov
or
jge
fmul
pop
push
out
jp
jmp
outs
fs
dec
retf
pop
dec
sbb
adc
jnp
jmp
jge
int
push
mov
dec
aaa
mov
inc
out
fdiv
retf
out
fstp
sbb
int3
test
rcr
int
dec
pop
ror
xchg
push
repz
aam
cli
or
(bad)
jmp
fild
fcomp
stos
sbb
aas
sti
cmp
mov
inc
shl
fcmovu
shl
sub
jo
fmul
inc
pop
push
sar
dec
sub
stc
(bad)
iret
retf
pop
pushf
std
scas
cmps
jmp
mov
dec
das
mov
sar
fld
lea
cmp
dec
scas
push
aam
cmp
frstor
imul
cli
stc
int3
mov
jp
pop
retf
jle
or
aas
push
pop
push
xchg
int3
ficomp
or
out
into
mov
dec
sbb
adc
pop
aam
sub
jmp
push
outs
sub
fcmovnbe
mov
push
ins
cdq
cmp
fisttp
pop
xchg
lods
sti
cld
jp
inc
shr
mov
jo
jmp
stos
retf
scas
jle
jnp
mov
fs
mov
stos
jmp
lea
rcr
add
mov
adc
imul
mov
enter
in
sbb
mov
or
aas
ins
push
jmp
lods
push
mov
mov
inc
cs
mov
lahf
or
jmp
clc
aad
in
push
sahf
ss
add
or
adc
dec
int3
or
mov
or
into
out
mov
mov
stos
in
test
lea
sub
fnstsw
les
stos
push
push
int3
add
sti
dec
dec
mov
popf
adc
mov
cmp
dec
xor
(bad)
fcomp
add
sbb
int3
das
outs
dec
leave
int
ins
fidivr
cmp
stos
pop
ds
mov
or
sub
(bad)
stos
sbb
lods
cli
test
(bad)
ror
pop
jg
sahf
sbb
lods
call
mov
push
icebp
outs
mov
lods
jle
pushf
(bad)
dec
or
imul
call
or
js
(bad)
push
push
fdivr
jge
fcmovne
out
retf
mov
pushf
sub
pop
ins
sub
std
ficomp
loop
test
lods
ror
adc
fnstsw
cmp
push
aas
stc
pop
or
scas
sbb
lods
jg
fmul
outs
in
sub
pop
ds
retf
jp
(bad)
xchg
call
sti
mov
cmp
sbb
popf
cs
fld
fcomp
mov
ds
xchg
stos
and
call
ficomp
shr
int3
iret
int3
jle
stos
outs
pop
mov
push
out
fcomp
call
sbb
lods
cmp
sub
fisttp
ins
mov
int3
ins
or
sub
stc
cmp
pop
ja
clc
test
(bad)
fsub
or
mov
js
imul
stos
fisubr
int
fidivr
or
(bad)
mov
fmul
cmps
pop
jo
sti
sbb
pusha
das
fwait
enter
imul
mov
or
cmp
int
mov
lds
jmp
xor
mov
or
(bad)
fsub
lods
stos
cmp
dec
mov
push
int3
call
int3
fsubr
ins
(bad)
mov
push
dec
test
mov
mov
fwait
sti
push
aam
cmp
sbb
sti
mov
test
jle
arpl
popa
sub
fsub
pop
push
fcomp
mov
mov
jle
rol
jmp
sbb
sbb
cmps
stos
fistp
jmp
dec
pop
fwait
outs
sahf
or
fdivr
cli
fistp
fsubrp
popf
push
ins
enter
jg
jmp
dec
(bad)
push
adc
inc
sbb
fmul
das
mov
sub
push
cmp
pop
iret
lea
rol
hlt
sub
jo
shr
iret
int
pop
sbb
aas
mov
ficomp
stos
xor
jle
sti
mov
dec
mov
sti
mov
pop
(bad)
int3
stos
cmp
nop
dec
pop
or
sub
cmp
mov
sub
pop
cs
or
fadd
pushf
sub
cli
cwde
int3
xor
jmp
sbb
in
cmp
jp
fsubr
jle
push
dec
xor
dec
sar
hlt
push
jl
mov
mov
int
pmullw
push
jl
lods
scas
sub
fsubrp
xor
dec
neg
adc
ins
push
push
in
sub
lea
or
fs
int3
je
mov
daa
popf
sbb
in
aad
fmul
pop
pop
cmp
sahf
jg
jnp
mov
stos
aam
mov
fs
jp
into
jle
std
mov
dec
lods
outs
aam
cs
mov
jle
sti
dec
sar
fisttp
or
int
sub
lods
out
(bad)
int3
imul
fsubr
mov
(bad)
dec
call
mov
(bad)
fbld
cs
in
fsubr
(bad)
jmp
in
scas
adc
ss
sbb
bswap
push
repz
dec
and
stos
or
push
xchg
stos
stos
sbb
imul
(bad)
call
dec
(bad)
pop
sbb
imul
cdq
jp
mov
dec
test
push
sub
sahf
pushf
call
imul
rcr
popf
addr16
in
dec
jmp
pushf
sbb
sti
sahf
adc
pop
call
sbb
loopne
pop
mov
fsubp
retf
(bad)
sub
and
or
aam
sub
lods
sub
ds
cmp
mov
or
loopne
fadd
mov
sbb
sar
lea
push
popf
fdivrp
int3
mov
lods
idiv
or
ins
retf
push
ins
(bad)
imul
fwait
lods
into
mov
sar
pop
int3
leave
mov
fxch
pop
jne
jmp
stos
mov
cli
mov
imul
jge
inc
stos
ins
mov
(bad)
lea
aam
out
jge
ror
mov
dec
cld
pop
sti
cmp
fst
gs
aaa
jne
pop
jmp
mov
out
out
(bad)
lods
std
imul
cdq
call
mov
outs
pop
cmp
repnz
dec
and
aas
pop
(bad)
fstp
in
pop
push
sbb
dec
mov
cli
(bad)
or
retf
sub
pop
fwait
add
cld
test
(bad)
mov
dec
aas
(bad)
dec
int3
mov
mov
es
dec
in
lds
cmc
sub
retf
mov
cmp
fucomi
mov
cld
cs
stos
fwait
lods
in
fcomp
sbb
push
or
cmp
sub
rcr
std
(bad)
fsubr
jmp
jmp
or
ins
hlt
pop
or
shl
dec
sub
fdivr
call
pop
mov
fidivr
ror
mov
(bad)
sub
call
lods
pop
std
lods
mov
or
ret
mov
add
dec
push
(bad)
aas
shl
jmp
xlat
pop
dec
popf
push
jmp
pop
lahf
in
retf
cs
(bad)
dec
mov
in
mov
dec
pop
out
mov
data16
lock
dec
int
sbb
outs
sub
jge
jmp
cmps
or
cmp
ins
rol
loop
cmp
dec
pushf
rcl
sub
mov
pop
xlat
call
mov
retf
cmp
imul
sbb
leave
sbb
scas
into
jl
cli
mov
fimul
ins
imul
pop
lods
fcmove
std
lea
cmp
mov
xchg
push
loop
pop
adc
cmp
shr
int
icebp
in
lock
test
int3
sbb
(bad)
pop
fnstcw
jmp
jmp
sub
fidivr
dec
popf
cmps
outs
sbb
push
fdivr
mov
sub
aas
scas
std
add
add
stos
jmp
in
in
cs
ss
mov
push
xchg
cmp
push
jb
fsubrp
dec
jle
pop
or
cs
pop
pop
or
cmps
add
test
dec
xor
lods
mov
or
push
test
cdq
les
fnstenv
fdivr
fcmovnu
dec
sub
aas
int
pop
call
mov
scas
mov
pop
(bad)
lock
push
call
pushf
stc
pop
into
jmp
pop
jge
cld
lahf
cmp
sub
add
sub
pop
pop
xchg
push
ins
(bad)
adc
sti
or
xor
retf
cwde
xchg
mov
pop
add
shl
lea
int
popf
sub
pminub
add
mov
(bad)
rcl
in
popf
push
mov
sub
ror
mov
arpl
mov
int3
fidivr
lods
sti
xor
ins
or
aaa
pop
dec
sbb
sti
jge
mov
(bad)
mov
outs
aam
retf
(bad)
mov
push
adc
sub
mov
pushf
dec
pop
jl
std
mov
inc
sbb
test
mov
jmp
fwait
cld
nop
cli
lods
jge
cld
(bad)
sahf
pop
and
ret
loopne
cmp
shr
sti
or
popf
cmp
rol
iret
sbb
mov
jno
cmp
sar
pusha
into
lods
int3
fistp
or
outs
sar
fistp
jmp
adc
sti
sti
mov
lods
mov
mov
jge
jg
fimul
addr16
(bad)
cmp
jae
sub
into
movs
dec
sti
mov
rcr
sbb
stos
mov
test
sti
mov
rcl
movsx
push
cli
fnstsw
pop
or
fisubr
pushf
push
stos
add
(bad)
retf
pop
jmp
push
cld
mov
cmp
lods
mov
cmp
mov
sbb
pushf
into
cmp
scas
ins
rcr
(bad)
imul
mov
fcmovne
push
mov
cs
or
jnp
test
int
xchg
mov
dec
psrlq
mov
scas
loopne
inc
push
jbe
(bad)
ja
pop
sbb
push
push
lods
dec
dec
push
or
or
mov
fsubr
mov
pop
outs
jae
fwait
int3
call
cli
pushf
fld
ds
mov
(bad)
pop
adc
ret
mov
jmp
xlat
push
ins
sbb
stc
arpl
pop
mov
push
dec
push
stos
ret
fisubr
and
cs
jp
int3
dec
mov
jmp
inc
jge
mov
cld
test
out
sti
stos
mov
imul
fisubr
add
test
stc
sti
or
push
cli
inc
dec
pop
scas
popf
jnp
jnp
dec
int
pop
daa
rol
mov
jp
fistp
or
in
icebp
mov
ja
mov
dec
and
std
cli
cmp
dec
lea
in
je
push
les
lock
fwait
jl
std
pop
fisttp
jnp
shr
int
cmps
int3
mov
mov
jge
ins
adc
dec
mov
ror
repnz
or
fld
jl
fistp
inc
mov
sub
xor
fadd
pop
dec
in
mov
sbb
jge
test
fimul
cmp
pop
retf
dec
(bad)
ins
scas
test
icebp
sti
jmp
pop
sbb
dec
aad
sbb
call
ficomp
push
fwait
lea
pop
stos
fistp
add
jecxz
cmp
pop
aaa
xchg
fadd
mov
in
cwde
push
(bad)
xchg
stos
inc
or
aad
jge
ins
fld
xchg
dec
xchg
dec
mov
sub
push
js
lea
fisttp
mov
dec
jge
add
sbb
sar
jecxz
imul
lea
aaa
push
mov
mov
es
adc
stos
sub
pop
pop
pushf
jle
or
sub
jge
push
xchg
inc
pushf
sbb
xchg
cmp
cli
jp
stos
push
dec
out
pushf
ins
mov
scas
jle
pop
inc
pop
cmp
pop
cmp
in
sub
imul
dec
test
es
ins
jge
xchg
push
xchg
adc
clc
cmp
xor
or
stos
push
fidivr
(bad)
(bad)
cmp
cli
shl
inc
lods
call
(bad)
xchg
add
dec
push
mov
ror
and
push
cli
sub
pop
stc
lods
mov
jle
in
inc
call
dec
or
sbb
dec
sbb
cmp
or
push
(bad)
pop
in
pop
sub
not
mov
les
sti
jnp
retf
pop
movs
xchg
mov
push
cmp
call
mov
in
popf
add
(bad)
mov
push
arpl
fstp
jl
inc
cmp
not
ins
sbb
mov
les
mov
fwait
cs
pop
ins
lods
retf
dec
jp
aas
mov
push
or
fwait
daa
mov
mov
movhps
pusha
xchg
dec
pushf
xor
out
push
push
mov
scas
mov
xor
imul
test
ror
into
mov
retf
(bad)
(bad)
int3
pop
std
or
int
hlt
shl
pop
jge
jnp
inc
lea
jecxz
cmps
cmp
mov
ret
inc
sahf
cmp
in
lods
inc
cli
fpatan
sar
movs
add
cld
fwait
pop
in
cld
mov
mov
fwait
ret
repz
aad
xor
test
outs
loopne
jge
ds
and
aam
sbb
dec
fdivr
and
mov
mov
ds
sti
stc
dec
bnd
dec
push
popf
and
fdiv
add
in
fwait
retf
sbb
add
cli
int
push
adc
sbb
scas
fwait
cli
aam
push
xchg
xor
dec
ja
ja
int
outs
jb
pop
imul
xor
pop
dec
jb
enter
imul
jno
mov
stos
sub
fwait
lods
icebp
sbb
cli
int
push
scas
jbe
or
out
sbb
inc
outs
das
out
add
pop
std
cwde
pop
jge
pop
ret
clc
mov
pushf
or
pop
jae
lods
daa
add
push
lods
xchg
mov
mov
push
sahf
shl
(bad)
push
call
pop
lahf
mov
hlt
xchg
and
xlat
out
cmp
push
fwait
retf
psraw
adc
pop
popa
mov
outs
jmp
xor
or
mov
into
sbb
add
fld
stc
sbb
xchg
rol
adc
(bad)
fisub
into
mov
ss
sbb
movs
inc
out
and
jecxz
jecxz
sub
addr16
or
(bad)
lea
pop
lahf
scas
pop
dec
xchg
inc
(bad)
pop
lock
sub
cs
(bad)
pop
fwait
in
lea
cmp
pop
jnp
in
int
cmp
push
sbb
les
add
pop
not
mov
push
mov
aad
push
shr
fstp
cmp
ins
mov
pop
aas
dec
jnp
sbb
sub
(bad)
push
scas
call
cmp
fcom
into
ficom
shl
std
leave
popf
cmp
push
aam
sub
imul
cli
mov
or
push
(bad)
or
dec
add
shl
push
mov
adc
test
sbb
(bad)
or
jae
adc
leave
ficom
push
sub
xor
js
inc
fs
fiadd
jmp
cmp
dec
leave
jnp
dec
dec
and
mov
cwde
xchg
ins
xor
jmp
and
and
and
inc
clc
jl
jnp
cli
xor
ins
les
sub
dec
fwait
sub
ins
call
stos
pop
push
arpl
cli
out
hlt
cld
out
jmp
jmp
push
dec
leave
mov
sbb
loope
inc
fwait
sub
idiv
mov
mov
or
cmp
mov
and
jmp
add
xor
imul
in
in
xchg
add
or
mov
ins
add
sub
ds
lahf
mov
mov
mov
scas
mov
push
gs
mov
mov
pop
(bad)
ins
rcl
sub
mov
adc
loop
xchg
mov
mov
ss
cld
xlat
cdq
aad
(bad)
sbb
shr
arpl
lods
push
aad
push
jo
jmp
dec
je
jbe
cmp
lods
xchg
leave
nop
lds
dec
pushf
sbb
push
jl
pusha
jnp
sbb
push
rol
sbb
jne
aaa
mov
and
cli
enter
xor
repz
xor
retf
mov
xchg
mov
rcl
dec
push
mov
mov
jo
and
xchg
in
lods
sbb
mov
mov
ficom
adc
inc
leave
movs
xor
div
mov
xor
mov
inc
dec
add
stos
(bad)
inc
(bad)
call
push
add
push
xchg
jae
lods
sub
pusha
cmp
mov
push
or
sub
push
dec
and
into
fucomi
or
test
adc
dec
xchg
test
movs
out
in
rol
rol
pop
and
je
xor
cmp
nop
push
ret
jge
push
int
cmp
mov
retf
xchg
mov
in
shl
mov
pusha
clc
dec
and
popf
inc
in
and
push
inc
loopne
adc
hlt
jmp
mov
xchg
fld
adc
dec
lds
pop
mov
xlat
imul
mov
lds
inc
sub
xchg
add
sbb
and
jbe
in
pop
pusha
pop
jl
shrd
push
or
jmp
pop
cs
fst
push
mov
call
hlt
test
call
add
and
cli
arpl
pusha
lods
dec
test
fnstenv
pushf
shr
test
ins
mov
in
out
dec
in
mov
popf
je
hlt
and
jb
in
(bad)
repnz
loopne
icebp
dec
in
jge
xor
mov
dec
int
adc
push
int3
sbb
idiv
push
inc
dec
pop
jmp
jns
pop
lea
dec
mov
jmp
pusha
pushf
pusha
into
cs
fidiv
xchg
or
lea
test
cmp
mov
xchg
data16
sub
es
push
mov
cmp
xor
xor
pop
sahf
fist
pop
or
or
pushf
mov
popf
lahf
jg
fld
pop
popf
and
sub
jo
fstp
inc
and
ss
jmp
and
mov
xchg
ins
iret
and
in
pop
add
ficom
dec
dec
retf
cmp
and
sbb
call
xor
fmulp
adc
arpl
mov
dec
mov
cwde
fucomp
or
mov
cmp
mov
or
pop
push
mov
shl
xor
out
loope
lods
fs
sub
inc
mov
jge
sbb
mov
pop
movs
jg
div
idiv
(bad)
pop
jno
cs
(bad)
pop
es
enter
je
mov
jg
sub
mov
leave
xor
out
lock
dec
or
test
sub
cld
sub
arpl
jp
jo
jg
xor
(bad)
jmp
xlat
mov
js
stc
cmp
enter
(bad)
repnz
fcmovu
(bad)
(bad)
hlt
xchg
sbb
test
adc
or
cli
mov
dec
out
ins
ja
cli
jp
retf
mov
adc
pop
push
jb
(bad)
int
xor
dec
mov
inc
pop
sub
adc
sbb
mov
fisttp
jbe
or
xchg
push
pop
cld
fist
sbb
or
sub
cmps
inc
retf
mov
mov
adc
push
jp
arpl
out
(bad)
jnp
push
nop
cmc
push
pop
pop
xchg
inc
arpl
add
sub
cld
sbb
add
iret
xor
push
or
dec
xchg
xor
jnp
sbb
mov
std
dec
xlat
mov
xor
xor
(bad)
call
(bad)
mov
pop
adc
sub
aam
pop
cwde
int
shl
(bad)
aam
mov
mov
xor
jnp
pop
fidiv
dec
cld
sti
adc
mov
(bad)
mov
mov
pop
jbe
dec
fild
(bad)
push
sbb
xchg
xor
(bad)
(bad)
in
repnz
fsubr
loopne
lea
xor
mov
call
cmp
icebp
shr
mov
mov
adc
mov
ffree
push
std
mov
mov
sub
xor
dec
or
adc
les
stos
das
push
add
jb
xchg
jb
xchg
adc
inc
dec
add
cmc
xchg
adc
cmps
das
pop
ds
mov
stos
bound
adc
inc
sub
add
mov
sub
hlt
popf
dec
sti
cmp
cs
mov
iret
xchg
imul
mov
pop
push
jp
call
mov
rcl
neg
aaa
pop
or
add
pop
mov
xchg
or
and
push
pushf
pop
mov
push
inc
xchg
retf
or
or
add
dec
push
mov
cmp
pop
nop
cmp
dec
enter
cmp
into
cmc
cmp
xchg
out
mov
jae
add
sub
cmp
jmp
adc
call
inc
jns
sbb
aaa
mov
cmc
enter
lods
fild
xor
push
xchg
push
lock
or
and
mov
sbb
jae
outs
cs
fidiv
mov
leave
ja
pop
add
sub
pop
xchg
sbb
sbb
push
sub
pop
dec
add
jno
mov
daa
xchg
pushf
ds
inc
cdq
sbb
push
nop
push
add
lds
xchg
mov
or
sub
xchg
and
aas
inc
outs
mov
mov
aaa
cmp
add
dec
mov
mov
sub
sub
mov
cld
mov
mov
scas
pushf
add
push
jnp
rcr
mov
jnp
(bad)
cli
push
or
xor
sbb
inc
xchg
xchg
dec
les
lea
retf
sub
out
(bad)
mov
pop
gs
mov
xchg
sar
cmp
cmps
or
jno
psraw
push
lea
ins
and
sub
fdivr
mov
xchg
inc
(bad)
cdq
fld
mov
inc
pop
cmp
test
test
mov
les
sbb
scas
aaa
dec
push
mov
jp
push
push
adc
lods
and
inc
jno
dec
fcom
sbb
rcr
jge
enter
sub
inc
lods
in
bound
dec
push
mov
cmp
or
mov
dec
or
call
adc
xchg
pop
pop
or
es
out
adc
mov
iret
mov
out
xchg
or
aas
cli
cmc
mov
and
cmp
xor
sti
mov
pusha
nop
add
loopne
pop
sbb
call
pop
xor
xchg
sbb
jbe
fmul
cwde
in
pop
pop
sbb
(bad)
ins
sbb
pushf
add
pushf
pushf
mov
int3
mov
clc
pop
sar
cmp
or
sbb
or
pop
mov
dec
dec
xchg
pop
jb
jmp
mov
cdq
call
rcr
xchg
dec
inc
cmp
pop
inc
xchg
adc
out
sti
das
or
std
sub
(bad)
ss
lea
mov
push
(bad)
push
clts
enter
push
dec
div
jae
lea
sahf
daa
xor
add
cmps
inc
out
xlat
xor
scas
dec
call
mov
in
cdq
sbb
shr
fist
rcl
(bad)
scas
jp
and
xchg
push
fimul
xchg
pop
push
sbb
cwde
test
push
mov
push
sub
test
int
jae
xchg
xchg
mov
es
dec
stos
cmp
dec
sub
mov
repnz
lods
add
xchg
push
movs
repnz
mov
fdivr
jp
pop
pusha
dec
lock
or
jnp
mov
or
mov
push
call
ss
daa
js
adc
xchg
sub
xchg
dec
lahf
stos
into
jmp
inc
ins
dec
aaa
dec
add
sbb
outs
arpl
pushf
xchg
inc
inc
xchg
cmp
jb
rcl
jg
add
xor
inc
femms
dec
out
imul
jp
ret
mov
pop
pushf
cld
sub
mov
dec
and
xor
mov
sub
push
inc
pop
xchg
ins
ins
dec
xchg
sub
data16
dec
int3
or
fiadd
mov
add
icebp
daa
leave
repz
retf
ror
lods
mov
fnsave
push
fbstp
icebp
test
xchg
std
cmp
push
int
aas
jmp
mov
in
data16
cmp
lods
pop
inc
jne
ror
jae
jae
shl
push
(bad)
xchg
push
scas
push
call
mov
popa
sbb
xor
fdivrp
mov
mov
scas
fmul
repz
mov
lods
adc
push
pop
dec
sub
lods
(bad)
imul
pop
movs
out
add
pushf
inc
ja
cdq
add
jno
sub
lea
jmp
sbb
add
aam
and
daa
dec
and
fdiv
aas
inc
mov
neg
inc
push
adc
inc
jp
out
push
mov
retf
int3
mov
pop
fild
cwde
push
punpcklwd
push
push
xor
dec
scas
call
xchg
xchg
iret
sti
lahf
ins
mov
cmps
dec
inc
jmp
xchg
inc
pop
mov
cwde
lods
inc
mov
jge
nop
inc
xor
inc
sub
jmp
sti
dec
popf
sti
sub
sbb
push
pop
push
stos
cmps
or
aaa
mov
lods
pop
(bad)
repz
jp
fmul
dec
xchg
scas
inc
ins
shl
mov
xor
aaa
cmp
jl
ins
push
mov
mov
push
mov
jg
jne
mov
or
mov
icebp
sbb
in
jb
sub
movs
xor
gs
pop
or
dec
adc
pop
cmp
mov
loop
out
(bad)
movs
or
test
mov
lock
ja
inc
xchg
push
adc
and
adc
loopne
xchg
sub
aaa
bound
dec
lods
or
ds
inc
xor
fidivr
pop
or
std
xor
mov
or
or
fcomp
int3
(bad)
in
test
mov
(bad)
adc
lods
jg
mov
outs
push
sbb
xor
adc
add
std
xor
ret
mov
ins
icebp
js
jle
mov
and
test
cmp
icebp
shl
mov
adc
jg
push
xor
inc
xor
push
mov
loop
sbb
loop
sahf
inc
pop
xchg
mov
mov
stos
add
push
movs
(bad)
xchg
es
cmp
(bad)
add
dec
xchg
xor
push
sub
pop
ret
retf
sbb
inc
cld
inc
int
pushf
int
sub
xchg
mov
or
ret
jnp
test
sub
mov
fwait
call
xor
aaa
mov
pop
popf
(bad)
cmp
or
add
mov
push
in
mov
cwde
xchg
mov
and
sbb
mov
cdq
iret
sub
push
in
xchg
int3
dec
or
dec
jl
mov
es
cmp
iret
sub
cmp
ret
ins
push
sbb
loope
inc
mov
and
mov
dec
sbb
es
push
mov
and
xor
push
clc
ss
fdiv
xor
js
in
movs
push
jle
loope
int
push
inc
les
mov
pusha
ret
aad
jmp
repz
in
jnp
gs
adc
out
mov
pusha
outs
sub
mov
je
or
xchg
cmp
daa
xchg
scas
je
adc
mov
fistp
dec
cwde
dec
dec
mov
retf
js
inc
inc
push
fsubr
sbb
inc
inc
xchg
mov
mov
xor
rcr
lods
sbb
mov
dec
(bad)
es
inc
aas
push
mov
outs
outs
cmp
dec
popa
stos
cmp
cmps
push
cmp
adc
aam
lods
div
jne
inc
lods
hlt
dec
cmps
mov
cmps
(bad)
cmp
aas
adc
lods
mov
mov
ins
sub
sbb
in
mov
cli
enter
fbld
xchg
xchg
out
ins
or
arpl
jp
ret
jmp
popf
xchg
push
pop
cmc
jnp
pushf
dec
cmp
sub
adc
out
pop
(bad)
jp
cmp
int3
inc
or
mov
dec
sub
dec
mov
jns
sub
pushf
arpl
inc
cmps
add
aaa
and
sub
xchg
div
pop
inc
jmp
pop
in
mov
test
mov
xor
(bad)
in
push
xor
xor
mov
cmp
iret
sti
sub
mov
add
pop
es
loope
loope
fcomp
add
fild
mov
in
ins
mov
sbb
dec
add
pop
arpl
mov
xor
jno
jmp
sbb
jmp
pop
jp
cmps
out
pop
loop
mov
inc
cmps
cmp
adc
enter
mov
sub
(bad)
cwde
call
mov
xor
jo
sbb
xchg
sbb
ins
dec
and
int3
mov
cld
mov
mov
inc
xor
ds
repz
dec
add
jl
sahf
pop
mov
push
sub
mov
mov
cmp
push
and
stos
cld
mov
daa
nop
push
sbb
add
dec
ret
hlt
jg
pop
ins
pop
jp
inc
das
cmps
push
in
jge
aas
inc
data16
mov
sbb
fbstp
mov
in
cmp
xchg
mov
sbb
mov
jmp
cmp
lahf
inc
push
int3
es
mov
mov
inc
inc
inc
mov
daa
cmp
push
xor
adc
mov
inc
pop
push
ins
retf
jo
pusha
mov
dec
sub
sub
jmp
jmp
fwait
mov
sbb
mov
pop
xor
in
loope
clc
bound
mov
xor
call
xchg
add
jae
push
je
jmp
sub
pushf
mov
out
fimul
add
push
mov
sar
xor
lock
sub
fidivr
and
or
jne
sub
push
imul
xor
or
popa
outs
add
dec
(bad)
adc
int3
adc
ret
jnp
push
loop
icebp
jne
lock
adc
iret
cmc
cmps
ss
xor
or
inc
jg
mov
xchg
std
rcl
(bad)
push
add
inc
xor
jae
pop
adc
xchg
pop
data16
inc
sub
pop
mov
push
out
mov
mov
mov
call
and
popa
mov
dec
inc
mov
add
out
in
lds
or
(bad)
mov
push
repnz
dec
or
(bad)
mov
out
sub
inc
inc
ins
mov
mov
and
in
push
push
xor
pop
xor
aaa
mov
popf
mov
neg
imul
imul
int3
sub
sbb
xchg
xor
pop
inc
xor
imul
lods
adc
jb
push
test
ret
or
inc
mov
ret
outs
push
cmp
cmp
das
sbb
popf
ins
inc
aad
sbb
mov
repz
fwait
or
push
sahf
arpl
xchg
mov
test
mov
outs
jge
dec
mov
inc
xor
cdq
and
lock
pushf
and
mov
retf
in
jno
xchg
mov
and
(bad)
ins
and
out
bound
push
and
test
sti
das
jae
clc
stc
jg
xlat
mov
addr16
inc
ja
ds
mov
outs
iret
xchg
jp
cmp
cmp
aas
jbe
jbe
jnp
xchg
aaa
mov
ja
cmps
cmp
popa
inc
cmp
dec
mov
mov
and
inc
inc
rcl
cmp
xor
loopne
stos
stos
gs
xchg
jg
or
dec
mov
cmps
jo
lods
in
mov
cdq
ss
int3
inc
test
cs
(bad)
mov
arpl
add
add
xchg
pop
cmp
(bad)
in
xchg
mov
enter
loopne
mov
xchg
ret
cdq
or
xor
(bad)
stos
bound
mov
inc
fwait
xor
push
in
sub
or
popf
pop
fild
mov
not
mov
push
jg
dec
ss
imul
or
mov
jae
fnstcw
mov
movs
es
and
sub
ret
sub
jge
daa
xor
mov
xor
cmps
mov
jbe
pop
mov
cmp
push
shr
xor
in
cwd
das
push
out
(bad)
cld
xor
arpl
add
inc
jmp
add
dec
pop
xchg
fist
push
or
inc
sbb
test
cmp
into
test
xchg
jne
add
les
or
js
ret
sub
fld
js
mov
stos
pusha
mov
in
inc
pop
aaa
ja
cmc
cdq
xor
and
xor
aas
mov
mov
or
push
inc
mov
adc
inc
in
sub
pop
add
test
popf
or
jae
jle
pop
arpl
push
shr
xchg
push
mov
sub
cmps
fndisi(8087
jb
adc
adc
mov
push
aaa
mov
loop
mov
dec
push
shl
add
shl
add
cld
ret
mov
xor
popf
enter
lahf
jmp
inc
mov
xchg
and
std
mov
cmp
sbb
daa
cmps
dec
fld
xchg
test
inc
jl
sub
fadd
popf
xor
sbb
sbb
push
not
out
aad
mov
(bad)
retf
mov
aad
dec
aas
loop
cdq
xchg
stc
repnz
test
mov
xor
sub
mov
xchg
adc
iret
dec
add
stc
mov
cmp
clc
je
stc
jg
xor
mov
std
icebp
cmp
lahf
ret
xor
mov
pop
inc
ret
cmp
sub
(bad)
mov
out
push
jl
mov
adc
fmul
movs
inc
int3
cmc
xchg
push
push
inc
xchg
mov
or
(bad)
pop
cmp
stos
pushf
and
test
stos
ins
jmp
sbb
dec
xchg
cs
imul
sub
xchg
sbb
push
ficom
fiadd
in
sbb
xor
int3
jmp
mov
ss
das
imul
fs
jnp
pop
sub
sbb
inc
js
lds
pop
push
stc
call
fwait
mov
aam
jnp
out
icebp
je
cmp
mov
or
pushf
pop
int3
jl
jno
(bad)
loopne
sbb
dec
sub
add
scas
mov
cld
retf
jle
jl
prefetch
or
sbb
loopne
mov
pushf
jns
rcl
cmp
retf
int3
inc
push
call
jge
ret
mov
(bad)
retf
pop
bnd
out
in
enter
cmp
std
cmps
das
(bad)
xchg
sti
cdq
lock
fld
xchg
dec
lods
or
imul
xchg
mov
movs
cld
int3
pop
push
pushf
lods
cld
push
sti
jne
in
push
and
inc
fidivr
mov
xor
ror
pushf
xchg
enter
into
inc
ins
ret
jmp
fwait
imul
clc
cld
outs
sbb
sub
mov
mov
pop
mov
daa
mov
in
repz
int
dec
outs
mov
fwait
adc
lock
scas
cmp
cmp
int3
cld
pop
mov
ret
cli
jo
jo
sbb
sub
pop
cmp
sub
dec
adc
arpl
std
cmp
lock
sub
mov
add
mov
mov
dec
bound
xor
fimul
fld
cmp
dec
cmp
xor
mov
and
add
stc
pop
ins
ds
retf
clc
int3
jo
in
xor
pop
dec
out
push
arpl
out
ficomp
xor
aad
mov
fs
cmp
out
mov
mov
add
jne
out
aaa
and
cld
in
xchg
jmp
icebp
sbb
sbb
js
jnp
lea
jg
mov
mov
in
ins
mov
inc
idiv
fbstp
push
sbb
imul
and
ds
outs
sar
(bad)
gs
lods
fisttp
jg
jge
hlt
jle
int3
lods
in
aam
pop
lods
inc
dec
rcl
data16
pusha
or
int
ror
stc
add
in
jnp
das
fidiv
cld
pop
lds
cli
out
pop
int
outs
out
ficomp
arpl
jnp
xor
xchg
pop
neg
arpl
push
sar
fmul
popa
imul
mov
(bad)
cs
mov
out
(bad)
xlat
sbb
les
sbb
imul
sti
mov
cmp
outs
fabs
mov
das
mov
stos
sub
rol
mov
out
mov
dec
pop
push
dec
pushf
fwait
mov
inc
adc
fnstenv
add
pop
shl
fwait
jnp
or
lock
scas
and
mov
ret
mov
jnp
push
lock
pop
fisubr
push
sub
in
dec
dec
and
mov
or
dec
cmp
or
int3
rep
lods
rcl
inc
xchg
jmp
fstp
into
inc
cmp
bound
lock
or
xchg
sti
sbb
sub
imul
push
mov
sti
outs
cmps
cmp
popf
int
or
call
push
call
mov
dec
add
push
shl
int3
cld
std
lods
push
sub
clc
retf
in
adc
cmp
iret
sbb
push
cmc
hlt
sbb
xor
xor
sbb
add
sub
add
jl
popf
mov
inc
lock
sbb
int
in
or
or
fwait
int
jns
dec
lods
dec
ret
or
ja
cmp
xchg
pushf
cmp
add
sbb
adc
cmp
lods
jle
jo
ficomp
pop
in
cmp
add
push
xchg
or
xor
mov
test
loopne
push
add
or
mov
cmp
retf
sub
pop
cmp
ss
mov
pushf
jmp
ret
cmp
ja
call
dec
xchg
lods
jg
movs
inc
mov
jge
xor
mov
jb
sbb
cdq
jmp
shl
outs
shr
cmp
ss
jnp
cmp
repz
cs
mov
fxch
mov
mov
jo
lahf
xor
cld
xor
fdivr
(bad)
movs
pushf
out
xchg
jae
mov
sbb
pop
ja
xchg
mov
xor
aad
clc
or
(bad)
je
ficom
add
mov
sbb
sub
sub
xchg
pop
stos
mov
xor
jmp
mov
sbb
out
scas
lods
push
cwde
add
sti
add
xor
mov
ins
popf
xor
adc
mov
call
cdq
in
mov
out
aas
(bad)
cld
js
sbb
sbb
adc
dec
clc
jmp
push
adc
add
jp
stos
ret
aaa
addr16
in
ins
shl
fcomip
fiadd
call
fs
das
cs
popa
or
test
mov
(bad)
(bad)
ins
clc
pop
add
mov
ficom
pop
retf
lods
dec
neg
dec
(bad)
out
dec
cmp
cmp
leave
sbb
mov
add
xor
sbb
and
push
cmp
(bad)
ins
jmp
pop
adc
enter
imul
repnz
xor
or
sbb
sbb
cmp
inc
and
shl
dec
mov
cld
call
or
pop
aaa
mov
movs
push
inc
sub
cmp
cmp
jb
jmp
pop
push
sub
sbb
mov
ja
shr
xor
loope
push
add
aam
dec
(bad)
shl
popf
pusha
mov
out
icebp
mov
and
or
loopne
push
sbb
enter
jae
adc
jmp
mov
(bad)
call
stos
pop
jnp
sbb
dec
dec
or
das
mov
cmp
mov
sti
dec
out
dec
repz
clc
into
iret
rcr
leave
pop
xor
lock
imul
scas
pop
cs
mov
rol
cmp
hlt
pop
xor
call
mov
out
stos
mov
cmp
xor
dec
mov
inc
(bad)
cmp
jnp
fimul
aaa
mov
(bad)
shr
dec
orps
sbb
mov
pop
mov
sub
mov
call
out
lds
sub
not
iret
pop
push
sub
or
sahf
jge
pop
dec
cdq
cmc
(bad)
lods
xchg
popf
pop
cdq
aaa
mov
fimul
cld
ret
xor
sbb
imul
daa
enter
ret
mov
out
nop
aam
fist
nop
stos
int3
aas
lea
gs
mov
(bad)
lods
ret
sub
cmp
jmp
mov
sub
cmp
(bad)
sub
push
icebp
add
mov
jmp
and
fnstsw
(bad)
or
pop
fwait
sub
mov
repz
retf
mov
ins
sub
lahf
sahf
(bad)
jmp
fnstsw
jmp
sbb
cmp
pushf
jge
xchg
sbb
sahf
jp
call
ds
add
retf
rcr
jl
dec
lods
mov
fistp
dec
mov
cmp
cmps
pop
icebp
jns
sbb
push
pop
adc
cmp
mov
adc
fmul
int
sub
retf
in
shl
scas
inc
mov
(bad)
cmp
add
jge
popf
sbb
add
mov
retf
adc
rcl
fimul
ins
sub
dec
or
sub
lods
js
clc
repnz
cmp
mov
sbb
push
jge
shr
add
cld
dec
lods
sti
xchg
fwait
cmp
stos
outs
dec
mov
jno
hlt
cdq
sub
sbb
push
jle
or
sti
cmp
ret
aad
mov
cld
retf
sbb
shr
or
call
lods
sbb
pop
sahf
sub
pop
inc
mov
jge
cmp
test
cld
(bad)
outs
adc
shr
scas
hlt
mov
hlt
and
in
xchg
sub
popf
fisubr
in
sbb
xchg
je
lods
mov
sbb
fmulp
or
mov
icebp
sbb
ret
aam
dec
in
ds
push
mov
sub
ds
mov
int
or
movs
pcmpeqb
jge
jge
aas
dec
fs
iret
jge
in
hlt
and
cld
int
push
je
sti
in
sub
jg
jle
fisttp
or
jmp
jmp
lea
push
or
(bad)
mov
outs
aaa
mov
jmp
jp
pop
pop
popa
mov
test
inc
jp
mov
jge
inc
sub
sbb
mov
aaa
lock
dec
ins
jg
jns
lods
aas
nop
jmp
or
int
ins
lock
or
jp
sbb
fdivr
js
pop
in
jb
in
cdq
cmp
inc
popa
or
pop
popf
pop
xor
fcomp
cmovl
imul
adc
cmp
inc
sar
xchg
call
js
xchg
(bad)
add
pop
sub
jnp
(bad)
and
mov
xor
or
push
cdq
pop
in
bnd
push
dec
cmp
arpl
add
xor
iret
or
push
pop
xor
cwde
mov
sub
sbb
cs
in
lea
mov
dec
cs
nop
push
add
or
mov
call
or
pop
mov
(bad)
nop
xchg
cs
in
jge
adc
lock
xchg
cwde
sbb
push
xor
ins
fld
mov
lock
mov
jge
mov
int
cwde
ins
enter
push
or
mov
push
inc
loopne
mov
(bad)
and
test
push
fs
inc
lahf
sub
hlt
sub
xchg
cmp
adc
push
retf
sbb
in
xchg
pusha
cmp
jge
cwde
cmp
and
and
scas
ror
popf
in
sti
sbb
jg
mov
xor
fadd
pop
lds
mov
ins
(bad)
js
sbb
cmc
sbb
int3
aaa
lods
std
fld
cwde
call
repnz
(bad)
loopne
push
lahf
sbb
xor
enter
hlt
loop
(bad)
sub
sub
inc
sbb
sbb
jl
xor
iret
jp
clc
and
(bad)
in
mov
jge
cld
cmp
ins
mov
mov
mov
hlt
add
push
clc
lahf
hlt
pusha
lods
ss
ins
dec
add
cdq
mov
dec
jge
lods
xlat
stos
mov
push
dec
hlt
test
in
(bad)
mov
fs
xchg
lods
fisttp
mov
fs
ins
je
pop
xchg
out
icebp
(bad)
mov
mov
in
pushf
jmp
lods
add
or
mov
sbb
packuswb
mulps
xor
popf
inc
int
in
xor
sbb
lods
add
idiv
fs
aad
jae
mov
cmp
sti
mov
adc
mov
xchg
(bad)
sub
inc
mov
and
dec
popa
cmp
imul
loope
add
sub
xchg
(bad)
push
mov
sahf
push
push
or
ins
(bad)
cmc
sbb
int
cmp
jg
mov
(bad)
pop
loopne
sbb
jne
retf
lea
dec
add
cmps
pushf
mov
por
push
jge
or
in
cmps
retf
lods
jae
mov
sti
xchg
iret
sub
mov
inc
call
pop
or
dec
cmp
(bad)
adc
lock
fdivrp
pop
push
jmp
add
hlt
test
retf
dec
cmp
hlt
pop
sbb
int
add
idiv
cmps
fisttp
cmp
push
push
aas
pop
sti
jp
xor
jb
pop
sbb
in
mov
js
sbb
addr16
xchg
jl
xor
jge
push
cdq
dec
pop
in
mov
in
jno
aam
sbb
push
add
or
and
jo
clc
adc
test
bound
xchg
(bad)
sbb
pop
jp
sti
and
ds
popf
(bad)
fisubr
xchg
jl
fimul
sti
mov
fstp
lahf
xchg
pop
(bad)
in
pop
ins
sahf
and
xchg
loopne
mov
mov
nop
sbb
test
sub
or
pop
rcl
jge
movaps
jmp
movs
retf
and
sub
ins
mov
cld
push
stos
xor
and
in
cmp
cmp
jb
dec
dec
push
xchg
ret
lahf
fcmove
(bad)
xchg
pop
mov
xchg
lea
pminub
loope
sbb
xor
hlt
mov
repnz
jl
fcomp
bound
xor
inc
cmp
sub
pop
call
pushf
ins
xchg
xlat
cmp
and
icebp
sbb
cmp
sbb
pop
mov
lods
jl
mov
xor
push
retf
xchg
hlt
jl
jge
std
or
cld
inc
or
mov
mov
mov
mov
add
mov
xchg
jl
arpl
hlt
call
aas
psubsw
fist
in
imul
jge
and
lock
in
pushf
lea
sub
test
dec
dec
stos
or
jl
cmp
repnz
in
sbb
xlat
fistp
mov
add
sbb
fcomp
pop
lods
popf
push
mov
nop
add
test
jno
sub
cmp
retf
daa
fwait
sbb
push
in
sbb
ins
call
mov
mov
and
ja
jns
pop
loope
mov
pushf
adc
or
mov
rcl
repz
cs
call
ror
pop
pop
(bad)
in
mov
sbb
stc
out
pop
imul
or
mov
xchg
in
cdq
dec
xchg
into
sub
cwde
push
jmp
repz
sbb
call
pop
bswap
sub
retf
push
in
mov
push
lea
sub
pop
shr
(bad)
movs
pop
dec
pop
mov
adc
fsubr
jge
cs
jnp
ret
and
mov
in
jge
lods
fdiv
sbb
retf
clc
cdq
push
hlt
je
or
xor
jnp
jge
push
sbb
sub
out
pmuludq
idiv
repnz
dec
dec
stos
sbb
imul
cmp
mov
xor
sti
jge
sar
retf
sti
cmp
mov
shl
sub
push
pop
or
lock
out
jnp
cli
cli
pop
in
or
aaa
and
mov
inc
rcr
jmp
push
dec
push
sahf
je
jl
sbb
lods
xor
fild
jecxz
leave
dec
sub
lea
sahf
jmp
cmp
movs
push
cld
lds
cmp
(bad)
(bad)
sub
popf
cs
cmp
cmp
ret
sbb
jle
sub
rcr
mov
cs
fcomip
inc
push
jne
sbb
ins
adc
call
aam
cmp
scas
mov
test
inc
xchg
sbb
push
xlat
paddusw
pop
sbb
retf
int
stos
mov
clc
mov
lods
lea
sar
test
sbb
dec
xchg
jle
out
ins
cmp
int
popa
mov
sub
cld
int
cmp
shr
push
pop
std
dec
jmp
ins
jl
in
push
lods
pop
push
hlt
stos
push
mov
inc
loop
mov
out
int3
or
loope
pop
loope
dec
shr
cmp
int3
fld
mov
mov
hlt
sub
cmp
mov
pop
int3
sub
ss
mov
jge
lods
aam
cmp
outs
jnp
jnp
mov
sbb
sbb
sub
jmp
xlat
pop
fst
test
retf
imul
nop
hlt
sbb
popf
rol
sti
in
mov
lods
dec
rcr
call
push
fisttp
mov
int
ins
cmp
in
push
es
xchg
jnp
sbb
xchg
in
add
adc
xchg
jge
ud2
fwait
mov
jg
clc
fst
or
pop
sub
cmp
sbb
jnp
fld
pop
call
mov
mov
inc
mov
jl
mov
sub
sub
nop
jbe
dec
hlt
and
ins
ins
stos
leave
das
fnstsw
mov
inc
fs
sbb
int3
outs
into
mov
retf
xchg
sbb
pop
push
dec
loop
stos
paddw
retf
mov
fucomip
push
jo
push
jmp
xor
sti
or
into
popf
nop
adc
sahf
xchg
outs
sub
aam
xchg
sbb
add
retf
mov
cmps
iret
(bad)
dec
hlt
dec
or
ret
pop
push
mov
pusha
push
leave
jmp
(bad)
loop
push
lahf
push
dec
mov
jno
enter
loope
cmps
addr16
sub
sub
dec
mov
lds
std
into
push
stos
pop
push
call
call
popf
adc
fmul
mov
cmc
or
mov
mov
lods
fbstp
rcl
sbb
int
test
push
xchg
hlt
popf
dec
mov
retf
daa
jecxz
jmp
scas
std
dec
mov
repz
adc
xor
mov
mov
sbb
cmc
jnp
mov
add
sahf
fnstsw
mov
jg
mov
popf
mov
fadd
out
hlt
xor
jl
mov
mov
or
add
sub
jg
sbb
jle
sti
rcl
jl
mov
hlt
popf
inc
inc
add
dec
mov
mov
dec
stos
call
rcr
dec
sub
fistp
cmp
imul
rol
aaa
popf
fucomp
mov
dec
mov
dec
jge
sbb
ins
jmp
inc
sub
ds
setge
cmps
call
push
hlt
xor
push
sub
jo
hlt
(bad)
jnp
je
mov
inc
or
retf
cmp
imul
cmp
es
dec
repz
shl
imul
pusha
fstp
repnz
call
enter
in
imul
arpl
in
in
out
lahf
popf
cmp
dec
daa
or
icebp
mov
frstpm(287
push
adc
hlt
mov
in
pushf
push
int
iret
dec
xchg
add
dec
dec
jmp
hlt
or
outs
(bad)
mov
add
pusha
in
mov
cmc
mov
imul
ret
lds
sbb
sbb
sbb
repz
cmp
loop
shl
ret
fucomip
push
hlt
(bad)
push
mov
in
repnz
loopne
jl
lods
cmp
sahf
lods
add
in
iret
jl
sar
cmp
repz
inc
jecxz
and
int3
lock
test
stc
aas
jge
push
sbb
scas
xor
dec
add
ins
fsubr
inc
xchg
cdq
pushf
lahf
inc
stos
(bad)
pusha
data16
jmp
in
or
mov
cli
jmp
dec
retf
jno
aas
jnp
ins
jle
xchg
aas
fimul
mov
jecxz
jae
and
sbb
sbb
dec
fisttp
mov
addr16
scas
xlat
sbb
mov
stos
ror
or
pop
loop
call
pop
test
fwait
in
sbb
sub
scas
adc
mov
repnz
jge
fist
pop
frstor
ins
stc
mov
cmp
pop
mov
pop
pop
xor
adc
add
pop
mov
cmp
jmp
mov
std
cmp
sbb
call
adc
dec
sti
mov
jae
jg
mov
xchg
nop
mov
test
or
sub
mov
call
cmp
mov
hlt
ret
pop
fadd
retf
sub
hlt
fstp
stc
data16
es
fs
not
daa
dec
or
cmp
push
pop
stos
cmp
shl
xor
sub
mov
hlt
push
sbb
dec
xor
lea
pop
or
inc
in
push
cli
sub
in
mov
cmp
pop
push
add
cwde
(bad)
enter
call
clc
ds
(bad)
adc
add
pushf
sbb
std
push
or
ds
sub
icebp
lock
sbb
std
cs
es
ins
inc
jmp
sahf
xlat
mov
hlt
es
push
and
or
sbb
stos
repnz
inc
xor
sti
ss
sub
test
pop
push
xor
xchg
es
sbb
std
hlt
int
fidivr
int
jmp
ins
add
popf
jge
add
outs
sub
mov
cmp
pop
mov
fld
xor
xchg
in
jbe
push
test
bound
jne
ds
cwde
hlt
mov
loope
xchg
dec
(bad)
mov
mov
arpl
hlt
dec
sub
pop
cld
dec
rcr
push
mov
dec
fnstenv
pushf
pushf
or
int
fld
cdq
mov
call
and
aad
(bad)
jmp
sub
movs
in
or
aaa
in
aas
push
pop
dec
mov
pop
int
xlat
dec
xchg
inc
jg
mov
dec
dec
cmp
(bad)
(bad)
sbb
arpl
add
sti
cwde
in
cmp
(bad)
test
xor
pop
imul
pusha
xchg
out
dec
xchg
cs
adc
sbb
inc
jbe
pop
pop
xchg
movs
pop
(bad)
sti
in
dec
and
out
cmp
push
mov
or
retf
sar
sbb
hlt
aad
inc
call
mov
or
lods
fisttp
cmp
or
mov
ins
and
mov
sti
sub
lock
shl
push
xor
mov
mov
lock
dec
neg
test
test
mov
pop
xor
jnp
ja
addr16
xlat
hlt
inc
push
bound
mov
cmp
or
in
stc
(bad)
mov
mov
pop
(bad)
fwait
in
sbb
jecxz
ins
call
mov
sbb
retf
mov
or
stc
or
arpl
sub
scas
(bad)
mov
mov
sbb
sub
lods
xchg
jp
push
sub
int3
icebp
fld
rcl
pop
or
loope
add
enter
push
xchg
xlat
stos
call
dec
push
cmp
std
in
out
sahf
inc
xor
stos
call
in
retf
sub
in
cs
jae
sbb
xlat
pop
out
bound
addr16
mov
lods
add
lds
shr
std
outs
(bad)
mov
dec
das
fmul
pop
hlt
sub
pop
stos
ins
lods
ds
stos
or
sbb
mov
into
xlat
int
mov
or
in
mov
mov
dec
jmp
and
es
xlat
sub
fidivr
in
out
push
jg
outs
in
xlat
clc
fstp
jle
cmp
in
rcl
pushf
aas
sbb
popf
in
iret
and
js
push
mov
and
push
jecxz
mov
ins
sbb
jnp
lods
xchg
or
sub
je
shl
imul
scas
sbb
in
jg
stc
pop
ins
push
int3
fisubr
fldenv
push
je
retf
fadd
cmp
ins
sub
and
mov
xchg
lock
test
mov
dec
retf
out
loope
fnstenv
dec
aaa
pusha
jo
push
out
loopne
mov
sub
in
xchg
mov
retf
mov
test
mov
cld
jle
popf
jmp
mov
lds
or
inc
add
and
sub
cs
pop
cmp
neg
sub
pop
cmp
lock
mov
adc
loop
daa
or
jnp
pop
mov
mov
jne
jl
das
or
ins
mov
loope
pop
xchg
or
xchg
jmp
adc
lahf
add
inc
push
adc
bound
jb
inc
jmp
xorps
into
xchg
adc
adc
stos
jl
shr
dec
mov
pop
fld
rcl
shr
dec
in
push
xchg
dec
sub
sbb
fimul
cmp
xchg
jne
jge
dec
xchg
dec
lock
sub
inc
mov
mov
ins
cmp
loop
push
loope
lea
ds
jp
sub
sbb
mov
xor
cmc
add
pop
pop
xchg
jo
not
jl
pop
dec
xor
pop
enter
sub
aam
push
cmp
stos
int
hlt
mov
cmp
lea
or
mov
movs
mov
jge
(bad)
stos
dec
js
shl
xchg
pop
xchg
mov
xchg
ins
cdq
sbb
(bad)
enter
cwde
das
sbb
aas
in
(bad)
(bad)
cmp
js
sub
std
stos
mov
add
inc
ror
movs
jge
and
pop
jmp
rol
mov
pop
jo
cld
ins
cli
sti
in
ins
shl
dec
adc
fiadd
(bad)
mov
cmc
push
cmp
mov
sahf
hlt
jl
popf
(bad)
js
jge
stos
into
mov
mov
retf
or
sub
sbb
dec
xor
fmul
loop
cdq
lods
jl
cli
ret
sub
xchg
mov
pushf
(bad)
pop
loope
jle
dec
push
std
scas
pop
dec
test
mov
mov
sbb
sub
popa
fwait
gs
dec
lods
dec
mov
mov
jge
(bad)
in
push
xchg
ret
xor
(bad)
fimul
iret
jns
rcl
call
push
mov
lods
(bad)
dec
or
ins
pop
push
ret
xchg
adc
mov
cmp
or
add
xchg
and
mov
in
or
mov
push
(bad)
mov
in
cwde
mov
ror
fdivr
arpl
test
dec
jl
cmp
jmp
cld
add
lock
ror
sti
stos
dec
aam
ds
mov
xchg
sahf
jmp
jo
leave
xchg
push
in
sti
retf
call
mov
mov
aas
(bad)
lods
adc
mov
clc
cmp
test
and
lea
jne
dec
outs
ficom
sub
cli
pop
jmp
std
add
mov
sar
dec
push
sbb
push
or
(bad)
ins
jp
sar
into
pop
lods
test
sub
inc
pop
pop
inc
xor
ds
or
mov
xchg
cdq
repnz
cld
in
add
xchg
or
dec
lea
in
adc
xor
enter
ret
cmps
call
dec
push
pop
(bad)
movs
inc
adc
xchg
adc
adc
lods
add
fwait
lea
jmp
jl
in
push
dec
add
inc
xchg
pushf
sbb
ins
xchg
jae
ins
jl
xchg
jo
cmp
sub
cld
dec
or
sbb
loop
sti
sahf
sub
jmp
dec
imul
cld
add
xor
sar
sub
cmps
fwait
jae
jl
test
add
sti
dec
lea
mov
jne
sbb
int
fst
mov
push
mov
push
pop
pop
scas
mov
dec
adc
lods
push
mov
enter
jp
cmp
cld
(bad)
in
outs
add
out
enter
pop
dec
int
xchg
mov
lods
ja
xor
fidivr
cmp
inc
daa
ins
pusha
ror
mov
sub
fisttp
pop
pop
push
and
mov
in
cmp
jle
mov
and
dec
mov
dec
mov
xor
jne
adc
popf
movs
cdq
stos
xchg
mov
rcr
sbb
sahf
cmp
jnp
cmp
jecxz
xor
(bad)
int3
ins
stos
int
imul
in
cmp
pop
sti
packssdw
mov
xchg
dec
push
(bad)
retf
push
jge
mov
les
dec
addr16
hlt
jmp
pop
and
test
sbb
jmp
mov
test
adc
mov
sbb
ficomp
shl
test
ja
out
leave
jge
cmp
icebp
pop
pop
sub
fld
les
outs
sbb
mov
jge
call
push
pop
stos
sub
lods
or
dec
pushf
jbe
lock
cmp
dec
shr
hlt
inc
xor
pop
fwait
xor
(bad)
mov
icebp
mov
cmp
call
std
cmp
das
sbb
cmps
push
(bad)
in
js
cwde
ficomp
in
push
push
(bad)
out
call
dec
loopne
dec
(bad)
aas
mov
and
sar
gs
popa
sahf
and
jne
or
pop
sbb
pop
mov
in
sbb
jmp
push
cli
sbb
ins
xchg
mov
xchg
mov
out
pop
mov
subps
stc
adc
adc
fidiv
test
sbb
retf
cmp
inc
adc
arpl
pushf
cmp
inc
scas
mov
dec
es
mov
sub
xlat
sub
inc
es
or
dec
dec
cmp
neg
inc
retf
dec
retf
pop
cs
sbb
or
mov
sbb
xor
in
arpl
push
or
inc
cmps
loopne
jl
dec
ret
adc
aam
dec
fnstsw
(bad)
cld
xchg
movs
or
jle
jmp
std
pop
pop
mov
inc
in
pop
push
int3
mov
or
adc
cmp
jecxz
dec
lods
repz
pop
sbb
arpl
repz
in
call
adc
jb
rcr
int3
aaa
xchg
and
imul
mov
jnp
(bad)
mov
fs
sub
call
pusha
jnp
mov
aad
popf
sub
lea
test
lock
mov
ret
pushf
and
mov
xor
inc
mov
jmp
sbb
stos
cmp
sahf
cmp
jl
pop
push
add
std
call
mov
jge
mov
push
mov
cmp
movs
mov
jne
cmp
fdivr
lea
sbb
enter
lea
aas
fwait
inc
cld
add
rcl
cmp
call
sub
push
mov
clc
mov
into
cld
ficomp
cdq
cmp
pop
pop
xor
push
push
sar
ds
lods
or
pop
inc
inc
sub
lds
in
call
pushf
(bad)
fcmovnu
sub
faddp
cmp
jbe
xor
dec
cmp
mov
lea
sub
sub
jmp
stos
dec
aaa
add
cmp
iret
test
jmp
pop
inc
ins
sub
push
dec
addr16
push
shl
add
nop
add
fs
into
sbb
inc
pop
sbb
movs
rsqrtps
push
mov
aas
sahf
jmp
jmp
sub
adc
mov
pop
dec
cs
int3
mov
in
in
pop
cmp
frstor
pop
jmp
inc
and
sbb
sub
mov
xchg
inc
or
cmps
call
push
adc
out
out
std
mov
sbb
into
or
cmp
retf
pushf
cvtps2pd
jl
and
mov
xchg
je
cmp
cwde
mov
push
les
mov
dec
mov
lods
sti
sub
fbstp
xchg
and
jle
pop
scas
jb
ficom
movs
lahf
xchg
pop
ins
sahf
jp
in
dec
dec
idiv
sar
(bad)
mov
into
movs
cli
fisub
inc
dec
xor
fist
ds
ins
cmp
or
in
and
mov
mov
adc
push
add
in
jae
fs
ins
fwait
push
dec
pop
pop
dec
push
cli
xor
movs
or
mov
retf
repnz
inc
movs
xchg
xchg
stos
sub
dec
adc
push
jl
test
push
(bad)
ja
inc
push
or
cld
xor
inc
inc
dec
mov
into
sub
mov
cmp
sub
popa
popf
mov
push
mov
pushf
(bad)
into
ins
mov
cmp
xchg
shr
xchg
mul
mov
inc
sbb
gs
pop
dec
rol
std
pop
jle
push
inc
mov
pop
sbb
mov
or
mov
fstp
std
dec
push
seto
rsm
pop
and
ins
xlat
xchg
sub
push
daa
imul
jbe
loopne
sahf
jo
sbb
ins
lods
mov
mov
stos
mov
int
or
inc
xchg
rol
cmp
sti
sub
cmp
jge
and
cmps
cmp
pop
mov
dec
xor
int
ret
imul
jbe
das
or
leave
cld
dec
std
mov
inc
in
inc
test
or
in
gs
shr
sbb
push
or
retf
dec
pop
lods
out
mov
mov
dec
dec
jmp
push
lea
lods
cmp
push
sti
push
int
or
sahf
mov
test
pop
inc
imul
cmp
aad
sub
imul
cmp
push
out
mov
or
lods
sbb
cmp
xor
nop
mov
out
aaa
jl
cmp
lock
mov
sbb
fstp
stos
sbb
mov
jg
and
dec
popa
mov
dec
stos
jne
stc
icebp
pop
test
(bad)
and
aas
shr
sub
sbb
sahf
add
std
call
(bad)
outs
(bad)
jmp
outs
sbb
aaa
sub
push
mov
popf
xor
nop
(bad)
xchg
jg
hlt
sti
sbb
jmp
push
mov
mov
pop
mov
push
int3
pop
sbb
ret
ss
sub
call
or
cdq
sbb
mov
adc
mov
jge
lea
lods
sub
call
mov
rcl
mov
in
cmp
jl
jbe
into
xchg
and
mov
mov
retf
pop
xchg
mov
scas
stos
and
ds
pop
sub
sbb
mov
je
mov
jbe
jle
pop
pop
fisttp
sbb
cdq
pop
or
bound
jnp
xor
mov
cwde
sub
int3
mov
cmps
xor
mov
dec
xchg
sbb
sbb
mov
stc
popf
or
fmul
push
fistp
jmp
xchg
xor
jo
and
(bad)
cwde
repz
fisttp
or
push
or
lods
ins
bound
pop
and
or
ffree
mov
out
jp
mov
mov
jle
jge
sub
or
or
in
push
or
or
aam
fisttp
cmp
sbb
stos
rcl
ins
jo
ins
adc
push
xor
mov
retf
aas
sbb
mov
sub
imul
sbb
lea
or
call
dec
ins
mov
aaa
xchg
rcr
ds
ins
mov
mov
daa
dec
push
loope
(bad)
pop
xchg
mov
jl
sbb
and
cmp
jg
xchg
mov
push
xor
mov
inc
ss
pop
jae
jnp
cld
lea
cmps
pushw
xor
pop
cs
cmp
jg
sbb
jno
fstp
inc
sbb
ret
xchg
cld
pop
and
jnp
outs
mov
cmp
out
cld
dec
(bad)
popf
fistp
jmp
test
sti
std
nop
idiv
mov
sbb
inc
loope
pop
mov
lea
ja
adc
ss
ret
aas
adc
cld
add
ins
mov
jmp
mov
arpl
dec
jg
adc
call
add
fstp
in
ins
call
and
rol
inc
sbb
bound
scas
mov
dec
ss
or
mov
push
(bad)
ins
outs
jmp
inc
xor
mov
fwait
jl
shr
sub
xchg
mov
xchg
push
mov
popf
sbb
sbb
sbb
ss
cmp
je
mov
ret
hlt
xchg
cmp
popf
(bad)
inc
cmp
imul
hlt
retf
push
lock
lahf
cmp
retf
bound
in
nop
mov
pop
xor
fldcw
sub
jo
jmp
pushf
pop
ins
or
mov
fld
sub
cmp
dec
dec
jmp
or
inc
rol
xchg
adc
mov
mov
mov
mov
jp
fptan
sub
adc
pop
enter
aaa
cld
js
xchg
je
sub
imul
add
mov
mov
aas
or
sti
inc
jge
mov
cmp
mov
mov
rcl
pop
xchg
sub
test
xchg
ss
sbb
sahf
fs
lods
jmp
cmp
sub
sbb
int3
test
xchg
clc
addr16
cmp
fsubr
jmp
jnp
stc
push
push
fwait
or
cli
sbb
jmp
fnsave
jne
dec
(bad)
pushf
loope
inc
(bad)
pop
outs
jae
add
mov
or
cmps
test
inc
test
in
sbb
sti
push
call
std
scas
sub
mov
push
rcl
imul
test
int3
int
fstp
nop
adc
add
dec
or
leave
pop
xor
cs
into
push
ja
jl
adc
jg
or
fwait
jp
adc
inc
mov
xchg
mov
cli
ins
imul
pop
in
and
jle
sub
fisubr
sub
cmp
jl
dec
pop
inc
pop
std
mov
in
int3
fcmovb
or
popf
push
data16
cdq
cmp
aam
in
enter
(bad)
repz
enter
sar
pop
fwait
pushf
adc
adc
outs
xor
je
pop
scas
sti
mov
jne
fnstcw
je
std
(bad)
cmp
jno
pop
mov
daa
pop
pop
(bad)
into
loop
jge
(bad)
xchg
xor
daa
stos
rep
pop
popf
jl
add
fmul
push
sti
xchg
jge
xor
add
lods
sub
mov
leave
rol
or
mov
movs
or
sub
jo
rcr
cli
dec
xchg
xor
xchg
popa
cmp
cmp
and
or
lods
push
xchg
aad
(bad)
pop
jnp
lahf
sub
dec
call
out
shl
retf
pop
or
fwait
int
jns
and
fsubr
push
int
dec
jl
pushf
cli
lods
sub
push
sti
outs
push
push
push
jl
stos
mov
stos
or
daa
imul
and
cmp
jp
sbb
ins
push
xor
fadd
push
push
xor
(bad)
loop
push
cmp
stc
jp
push
mov
sub
mov
movs
fistp
iret
jle
mov
adc
hlt
xor
cmp
push
fstp
mov
lods
inc
ret
idiv
fs
fs
mov
loop
pop
inc
mov
sahf
lea
pop
jl
cmp
jle
outs
imul
mov
cs
or
(bad)
jmp
mov
int
mov
sub
popf
sub
test
pop
push
jle
jmp
push
call
hlt
rcl
add
mov
fs
sub
(bad)
jae
cmp
dec
in
jp
lods
xor
test
pop
jno
cld
mov
mov
mov
inc
xchg
outs
ja
xchg
fistp
xlat
stos
push
test
div
leave
cmp
popf
dec
call
(bad)
jmp
daa
mov
xor
scas
jge
into
pop
dec
cmp
xor
xlat
clc
sbb
lods
or
inc
movs
in
push
pop
cmp
pop
push
fwait
push
add
xor
adc
les
push
sbb
fbstp
jl
dec
sub
inc
push
push
into
inc
mov
jg
test
mov
or
stos
dec
adc
sub
xor
scas
icebp
lods
pushf
cmp
xchg
adc
sbb
int3
cmps
test
ins
fwait
in
ja
ret
mov
test
fs
and
push
cmp
adc
out
mov
aaa
sub
neg
mov
mov
xor
mov
xchg
dec
cmp
aaa
and
sbb
imul
mov
out
push
pusha
and
jmp
int
(bad)
cmp
ins
inc
mov
sbb
sub
inc
or
test
ins
adc
call
inc
sbb
cmp
and
or
mov
cmp
cld
pop
jb
sbb
lahf
lods
stos
jle
pop
jl
lea
sti
push
cmp
adc
(bad)
into
pop
sub
shr
loope
fnclex
lods
jb
hlt
jp
or
imul
cs
jno
jp
jb
rcr
stos
mov
pop
sbb
stc
adc
cmp
jae
pop
or
cmp
cmps
mov
push
(bad)
cmp
ins
jmp
or
jno
mov
mov
lea
push
loopne
and
in
jmp
dec
stc
ins
mov
mov
cmp
scas
jl
stc
mov
add
sub
pop
ss
add
jmp
inc
sub
add
pop
xchg
adc
outs
stos
push
jge
mov
enter
dec
rcl
fadd
xor
sbb
stos
jge
cmc
test
xchg
sbb
xor
pop
gs
mov
or
mov
fsubr
pop
or
cs
retf
jge
ror
call
hlt
es
(bad)
jno
dec
mov
mov
jl
inc
loop
in
or
jg
xchg
xchg
xchg
arpl
mov
dec
mov
hlt
(bad)
imul
fmul
lods
mov
(bad)
and
dec
idiv
xchg
or
stos
fnstsw
sub
xchg
jecxz
xchg
inc
cmp
test
ins
mov
es
sub
test
(bad)
loope
out
add
sbb
cmp
pop
ins
xchg
(bad)
mov
out
rcr
cmp
rcl
cmp
(bad)
sbb
fdiv
jnp
mov
xor
ins
push
mov
pushf
bound
out
mov
sbb
enter
pop
pop
hlt
mov
pop
push
xor
xchg
cmp
add
pop
jb
cld
stos
mov
sbb
call
dec
mov
call
pop
sti
push
popf
scas
div
hlt
push
(bad)
xchg
hlt
lock
mov
push
cwde
sub
popf
int
mov
mov
movntq
mov
stos
push
cmp
inc
call
dec
mov
lea
sbb
xor
int
jge
mov
xor
lea
retf
addr16
cmp
jge
mov
retf
xor
mov
adc
cmp
dec
adc
mov
iret
xchg
in
cmp
fisubr
daa
mov
std
sbb
in
retf
in
lahf
sti
popf
aas
and
ins
jnp
xchg
lods
pushf
movs
inc
ins
in
xchg
mov
cmp
xchg
mov
loopne
lahf
jno
pop
jae
icebp
sub
xor
sbb
(bad)
retf
xor
sub
lods
mov
xchg
mov
pushf
mov
xchg
or
ds
push
adc
push
sar
jecxz
pop
fldl2t
retf
xchg
ins
stos
xchg
cmps
add
inc
mov
fcmove
cmp
mov
push
fs
mov
or
add
sbb
retf
call
movs
in
cmp
push
sub
add
das
out
sti
ja
adc
mov
adc
mov
xor
cld
xchg
xor
aad
adc
jns
pop
add
and
call
fimul
addr16
sbb
bound
pop
mov
or
lea
jl
adc
sti
(bad)
fist
mov
pop
call
lods
mov
sub
(bad)
dec
sti
int3
pop
ret
(bad)
mov
cmpps
jne
sti
in
ins
inc
pop
mov
inc
cmp
push
jnp
call
or
push
push
push
inc
inc
gs
arpl
imul
cld
aaa
and
retf
jnp
cmps
imul
sbb
sub
aam
sbb
mov
repz
pop
and
aam
outs
mov
shl
and
cmps
cwde
div
dec
into
movs
addr16
push
pop
and
xchg
sub
inc
mov
scas
cmp
pop
mov
ja
inc
sahf
sbb
clc
mov
ret
call
pushf
dec
pop
jmp
gs
inc
jmp
or
addr16
scas
push
push
enter
push
jle
mov
(bad)
sub
mov
fmul
cmp
xchg
movs
sub
xchg
pop
cld
call
push
pop
aaa
nop
aaa
mov
pop
fidivr
test
pop
sub
es
mov
xchg
hlt
cmp
popa
test
cmp
or
jae
or
sahf
xchg
jmp
lods
jl
inc
mov
sub
jge
cmp
mov
lods
rcr
pop
xchg
rcr
and
cs
sahf
sub
call
std
xchg
add
fwait
push
mov
pop
cmp
jo
xor
adc
aad
test
adc
pop
ds
mov
jp
repnz
lods
sbb
cmp
pop
mov
mov
or
mov
add
jmp
int3
pop
test
lods
mov
xchg
cmp
add
fldenv
cmp
cld
jp
jp
movs
sti
sbb
je
adc
imul
cmp
push
inc
ins
int3
xor
push
add
pop
sub
dec
xchg
fidivr
push
dec
fs
pop
lahf
sbb
mov
addr16
cs
add
jle
jl
imul
cmp
mov
sbb
cwde
call
cmp
jmp
dec
shl
addr16
aaa
(bad)
xor
mov
lods
std
stos
xor
sub
int
jmp
rcl
add
push
imul
mov
inc
cld
ja
sbb
mul
push
cmps
jno
pusha
sub
div
jmp
lds
push
ss
sbb
into
dec
mov
mov
dec
cmp
outs
or
pop
cmp
mov
and
lahf
iret
in
test
mov
mov
jge
fcmovnbe
jecxz
cs
sbb
push
xchg
jo
cld
test
mov
pop
mov
shr
pop
mov
scas
test
mov
dec
mov
jns
sbb
jae
and
mov
mov
arpl
add
dec
enter
pop
test
(bad)
shr
and
out
cmp
adc
repnz
mov
pop
mov
fdivr
fiadd
sti
(bad)
push
cmp
or
dec
dec
aam
out
inc
lods
sbb
enter
xchg
pop
retf
test
pop
mov
and
jl
out
jge
push
and
jo
scas
outs
pop
dec
jnp
push
arpl
push
push
push
into
jae
inc
cmps
xor
xchg
ret
pop
mov
out
and
dec
mov
xlat
jb
movs
jmp
mov
mov
loopne
jae
std
je
pop
add
cld
daa
jmp
mov
mov
int
fisttp
fdivr
imul
pop
lods
ret
add
cmp
scas
sub
or
ret
cmp
test
mov
add
mov
pop
ds
xchg
(bad)
push
sub
cmp
fisttp
sti
and
inc
or
sbb
dec
add
pop
jg
mov
sbb
popa
(bad)
ror
call
loope
mov
sub
jge
sub
sub
sbb
daa
loope
in
inc
inc
sub
cmp
das
out
adc
and
sbb
icebp
xor
div
xor
outs
inc
stc
xor
xor
aaa
jp
(bad)
xor
adc
push
mov
test
test
pop
xchg
xor
push
sbb
mov
mov
add
(bad)
retf
cdq
and
push
mov
dec
xor
xor
cmp
push
adc
xor
inc
jmp
mov
stos
aad
ds
mov
(bad)
loope
test
pop
inc
jbe
movs
cmp
mov
cld
dec
mov
ret
and
jl
mov
and
fcom
lods
mov
add
mov
xchg
sti
out
imul
jl
jmp
mov
adc
int
sahf
jnp
aam
mov
aam
ror
test
outs
xor
sbb
mov
xchg
or
or
mov
dec
mov
mov
fidiv
cmp
mov
(bad)
mov
lock
fld
mov
jnp
mov
aaa
jns
hlt
movs
dec
pop
retf
inc
retf
les
sub
loope
cmps
popf
push
pop
push
dec
sahf
lods
cmp
cmp
sub
daa
push
loopne
xchg
jg
pushf
stos
ins
(bad)
xchg
pop
ins
cmp
mov
fstp
mov
mov
cmp
std
jl
jne
dec
or
pusha
mov
mov
sbb
jl
inc
stc
xchg
jns
push
dec
inc
ror
jmp
add
inc
outs
imul
inc
fmul
int
sbb
cdq
sub
pop
ins
lea
and
inc
stc
shl
popf
mov
in
scas
jle
adc
cmp
xor
popa
shr
sub
repnz
sbb
mov
fistp
cli
jl
sbb
jae
cmp
test
push
lods
sub
sub
pop
jmp
cmp
add
sbb
or
fadd
sti
cs
mov
adc
btc
mov
lods
nop
int
jecxz
sbb
dec
dec
in
push
aaa
test
in
inc
les
aam
fiadd
pop
scas
popw
sbb
pushf
sbb
and
xchg
mov
pop
pop
sbb
jae
push
adc
push
cmp
pushf
cwde
aaa
sbb
fwait
pop
stos
cli
pop
in
and
test
xchg
pop
int3
(bad)
sub
pop
scas
jp
cmc
dec
pushf
and
or
leave
icebp
mov
sbb
(bad)
push
jb
sti
test
mov
lea
dec
jnp
dec
ins
arpl
nop
jb
mov
inc
ficomp
stos
lods
call
call
cmp
sbb
imul
cs
fdiv
fistp
sub
std
adc
cmp
push
fidiv
cmc
pcmpeqw
adc
jl
jecxz
adc
adc
add
retf
or
int
cmp
push
adc
retf
push
sbb
sar
pop
aas
retf
arpl
push
inc
inc
cdq
ficomp
push
xlat
jb
sbb
pop
push
xor
stos
ror
inc
lods
inc
cmp
lods
sub
int
push
push
add
jnp
jp
sbb
sbb
mov
out
jp
jb
fisub
movs
cmp
sti
popf
arpl
pop
push
fisub
ror
dec
test
out
fcomp
mov
ins
fcomi
jge
repz
mov
or
lods
mov
scas
int
lods
cmc
mov
icebp
scas
in
jl
xor
xchg
lods
stos
fwait
push
inc
cmp
add
xor
mov
and
jg
inc
loopne
jno
pop
pop
pop
sub
cli
mov
dec
inc
in
stos
mov
xor
mov
add
add
lods
stos
push
sub
fimul
ins
sub
xlat
sahf
ret
stc
xchg
lods
inc
jmp
int3
xchg
idiv
cli
mov
push
popa
jae
scas
jb
adc
jns
fwait
push
and
movs
sub
ja
xor
dec
pushf
push
ffree
ds
push
popa
inc
pusha
pushf
sub
int
aad
popf
aas
jb
jbe
add
pop
(bad)
popf
sbb
pop
sbb
jnp
xor
out
cdq
in
dec
sub
jae
xchg
out
(bad)
retf
add
pop
push
mov
or
mov
fistp
add
pop
fistp
cdq
sahf
sti
ins
dec
shr
mov
sbb
adc
int
mov
xlat
cmp
fstp
in
add
and
push
push
or
cs
pop
lods
sbb
dec
adc
scas
push
dec
xlat
xchg
mov
and
sbb
stos
sbb
(bad)
mov
sbb
sbb
lods
mov
pushf
sbb
pop
mov
in
fs
in
cmp
sub
scas
cli
(bad)
ins
pop
imul
(bad)
sbb
cwde
je
loope
dec
mov
(bad)
popa
lock
stos
lods
retf
sub
pop
clc
stos
push
retf
mov
sbb
imul
dec
cmps
(bad)
je
(bad)
(bad)
cwde
int3
mov
mov
inc
and
mov
push
jecxz
jnp
test
dec
lock
cdq
dec
sti
xchg
(bad)
cmp
mov
aaa
push
mov
dec
popf
mov
inc
shl
xchg
rol
fild
xchg
mov
dec
loope
andnps
(bad)
cmp
push
and
jp
retf
es
sub
cmp
mov
and
cmovl
fidivr
loope
daa
cld
mov
nop
dec
mov
sbb
rol
fsubr
dec
and
int3
loope
inc
loop
mov
retf
cmp
lahf
into
inc
add
sti
inc
call
xor
fidiv
int
ret
push
cmp
movs
or
in
scas
push
xor
dec
jge
arpl
jle
cmp
mov
popa
cmp
retf
int
and
pop
lods
outs
xor
in
xlat
loopne
sub
xchg
(bad)
cmp
xchg
gs
hlt
addr16
or
mov
or
(bad)
mov
arpl
add
mov
rcr
jmp
add
hlt
mov
jae
gs
xor
jmp
cs
les
call
push
daa
xor
xor
daa
int
aaa
pushf
outs
push
xchg
fst
clc
xchg
sbb
outs
int3
sbb
xchg
cmp
cmp
outs
je
jge
icebp
and
in
xor
mov
jbe
imul
in
sub
mov
mov
sar
out
ins
ja
mov
xchg
inc
pop
(bad)
dec
outs
jl
pop
cld
xor
rcl
add
jmp
xor
retf
mov
mov
push
sub
retf
out
outs
sub
test
push
mov
xchg
dec
ja
dec
cmp
sub
cmp
aad
push
push
loopne
jmp
cmp
loope
mov
mov
popa
cld
fwait
dec
cmp
sub
dec
inc
xchg
cmp
loop
jg
fsubr
mov
inc
sub
ss
aad
fistp
xchg
mov
cld
pushf
icebp
arpl
dec
and
call
or
jne
ins
sub
inc
mov
pushf
mov
pop
sbb
fnstenv
dec
sub
sub
lock
lods
sub
lahf
dec
inc
aam
test
push
mov
lea
xor
loop
jmp
xchg
pusha
int
adc
sbb
sbb
jge
mov
in
pop
jp
mov
pop
dec
rol
xor
dec
ins
add
iret
cs
fadd
fwait
ins
int
pop
fnstsw
mov
gs
inc
aaa
loope
jns
adc
jl
xor
jno
jno
fcom
dec
ins
sbb
pop
popf
xor
inc
dec
push
fisubr
aaa
add
xchg
push
pushf
mov
mul
out
dec
nop
imul
ds
inc
int
inc
cmp
in
add
aam
fstp
retf
cs
sub
inc
mov
cmp
xchg
imul
dec
cmp
mov
test
push
dec
std
fld
stos
pop
cdq
sub
add
mov
inc
dec
sub
outs
or
repnz
cmp
lea
ins
xor
xor
lock
cli
popf
mov
push
pop
mov
aaa
out
int3
lods
loop
push
sbb
add
arpl
mov
lods
rcr
sub
pop
mov
pop
jl
fnsave
lahf
test
retf
xchg
adc
movs
out
xor
sbb
cmp
addr16
dec
sbb
xchg
imul
scas
ins
push
ins
pop
push
sti
leave
add
cmp
or
lahf
pushf
ror
cmp
jle
or
jns
lods
push
cmp
icebp
sbb
mov
or
out
sahf
dec
dec
in
into
(bad)
pop
xchg
dec
push
in
mov
ja
stos
cmp
in
push
inc
jo
(bad)
cld
bound
jnp
jno
call
retf
lea
xor
cmp
inc
ja
jo
and
sbb
pop
add
fsub
std
sub
inc
aaa
stos
and
ins
or
xchg
aam
loopne
sub
dec
fisttp
push
sbb
dec
cmp
lea
pushf
aad
cmp
popf
cmp
cmp
into
dec
call
pop
sbb
ins
fwait
lods
cmp
xchg
or
enter
sahf
loopne
rcl
rcl
xchg
inc
mov
dec
mov
push
cli
fucomi
jl
cmp
xchg
into
cmp
dec
push
adc
mov
(bad)
popa
stc
jp
sub
or
pop
push
mov
xor
fld
gs
js
mov
pop
sbb
sahf
(bad)
mov
in
ins
sahf
arpl
aaa
mov
in
push
jg
push
sub
loop
mov
sub
sbb
pop
or
xchg
jns
test
hlt
sbb
mov
out
sub
std
inc
js
shl
inc
jg
push
mov
inc
xor
dec
push
sub
dec
or
jns
mov
imul
mov
sub
jb
xchg
clc
push
mov
dec
mov
xchg
add
jae
aam
cld
xor
or
jo
std
ss
dec
fstp
leave
in
cmp
aas
jmp
mov
push
ss
xchg
fbstp
jg
mul
call
mov
or
xchg
shr
(bad)
jge
mov
pop
je
push
in
add
add
sbb
retf
mov
dec
loop
and
push
sbb
sahf
addr16
dec
ds
or
in
sbb
adc
cmps
xchg
out
mov
xchg
dec
in
ins
sub
or
mov
scas
cmps
ss
jmp
xor
jnp
(bad)
ins
add
lea
mov
stos
sti
popf
in
shl
pop
sub
fcmovnu
mov
jl
add
daa
adc
xchg
sbb
sub
call
sahf
mov
xchg
loopne
xchg
(bad)
in
inc
popf
xor
mov
(bad)
clc
jge
push
ins
pop
in
fisttp
das
cli
push
inc
imul
pusha
or
xor
std
cmp
mov
nop
mov
lods
into
je
(bad)
sub
fcmovnu
aam
lods
cmp
arpl
add
sbb
inc
das
mov
xchg
ret
dec
xor
cs
dec
pop
dec
mov
push
or
sbb
popf
jmp
sahf
scas
arpl
xor
dec
mov
cdq
(bad)
out
ins
inc
fnstcw
aaa
mov
sub
mov
mov
xchg
fisttp
lods
xchg
jg
cmp
xchg
outs
mov
call
cmp
jmp
sbb
outs
fisubr
dec
mov
pop
push
cmp
dec
ds
dec
les
pop
inc
fwait
cmp
aaa
add
jp
sbb
inc
call
sbb
cmp
loopne
add
jl
xor
stos
push
jmp
push
arpl
nop
jmp
dec
sub
int
xor
retf
xor
push
jl
sub
mov
loopne
and
sbb
(bad)
pop
xor
sub
ins
xor
sub
or
adc
add
and
mov
sub
jnp
mov
inc
xchg
add
mov
cmp
jae
adc
cmp
or
jl
lods
out
push
adc
inc
jge
cmp
cmp
je
mov
jnp
ss
mov
pop
mov
retf
mov
cmp
stos
sub
sub
inc
pop
pushf
shl
jmp
loopne
xlat
hlt
mov
cmp
aaa
pop
aam
sahf
sbb
fwait
(bad)
inc
pop
mov
push
out
loope
(bad)
sub
xlat
push
xor
retf
xchg
mov
lods
pop
test
mov
pusha
aaa
icebp
cmp
shl
xor
sbb
jge
mov
popf
mov
repnz
pop
inc
add
ins
fsubr
mov
mov
js
in
std
add
jne
push
xchg
pop
fwait
dec
push
mov
dec
push
call
jae
fucom
or
lods
push
sub
outs
stos
mov
lea
sub
adc
sub
cmp
cmp
push
mov
inc
test
sahf
jmp
pop
sub
sub
lods
jmp
cmp
dec
test
xchg
(bad)
int3
in
retf
sbb
cmp
std
pushf
outs
leave
xchg
cmp
test
jnp
or
mov
push
sub
mov
push
sbb
mov
int
and
or
nop
dec
add
call
and
inc
out
aad
cli
jge
outs
inc
imul
mov
mov
push
das
jl
push
dec
jo
movs
out
sub
adc
jmp
ret
xor
jg
dec
call
dec
sti
sub
inc
addr16
lahf
fs
sub
clc
and
mov
cmp
xchg
je
sbb
dec
jmp
ds
and
pop
xchg
xor
dec
sti
mov
jge
outs
enter
adc
ins
lods
cli
outs
or
add
cmc
daa
adc
push
sub
mov
jae
int
adc
clc
call
or
cld
aas
fisubr
das
xor
enter
jl
(bad)
movs
(bad)
aaa
add
sub
mov
push
push
inc
lods
xor
adc
pop
retf
int
arpl
hlt
iret
or
xor
hlt
push
sub
shl
and
fstp
sahf
fcomp
dec
ret
loopne
xor
sub
ins
adc
sub
pop
sbb
outs
mov
scas
sbb
jl
cmp
sbb
repnz
cli
add
fisttp
inc
clc
cmp
pop
shr
(bad)
imul
cmp
adc
mov
jae
add
jne
xchg
popf
lock
mov
ss
mov
push
imul
or
in
scas
loop
jbe
xchg
fnsave
sbb
mov
cmp
mov
or
cmp
imul
test
mov
and
sub
mov
jae
(bad)
fisttp
xchg
out
sub
bound
shl
sub
sbb
jmp
and
mov
shr
ins
hlt
mov
fwait
pop
lods
sbb
pushf
or
loopne
push
mov
pushf
out
stc
jg
cmp
cmps
(bad)
cld
xchg
repz
inc
fwait
stos
mov
ds
ins
repnz
es
popa
xchg
mul
das
inc
add
dec
dec
add
jg
(bad)
retf
stc
(bad)
mov
fwait
lea
push
fwait
jmp
dec
mov
xor
in
mov
mov
inc
add
outs
inc
mov
adc
lods
push
mov
fisttp
sub
imul
mov
loopne
xor
mov
pop
mov
in
sub
mov
mov
xor
bnd
mov
test
arpl
push
pop
sbb
cmp
(bad)
data16
jl
xchg
jp
mov
mov
aam
popa
inc
pusha
xor
gs
mov
jp
pop
sub
das
loop
sub
(bad)
push
fwait
dec
(bad)
stos
lods
jp
aaa
iret
jg
mov
jmp
or
add
and
inc
mov
ins
push
fnstenv
mov
push
sub
adc
cdq
cmp
retf
cmp
xchg
sti
xor
jge
out
lods
dec
sti
scas
jmp
not
cmp
dec
pop
jle
cmps
out
pop
aaa
arpl
jb
loope
retf
pop
or
dec
ss
or
gs
inc
cmps
data16
sbb
std
cli
in
and
jg
xlat
mov
int
dec
(bad)
cli
dec
jge
pop
add
int3
sub
mov
dec
scas
call
pushf
mov
imul
or
jge
dec
mov
mov
mov
jns
(bad)
mov
fld
pop
adc
(bad)
mov
ins
xor
xlat
xchg
inc
dec
xlat
test
pop
pop
dec
pop
iret
neg
xor
mov
sub
dec
adc
pop
sbb
xor
jns
jl
fdivr
fld
mul
push
and
jecxz
fld
xchg
inc
stos
bound
in
and
mov
popa
rol
popf
pop
mov
lea
pop
mov
inc
fbld
dec
ds
sub
or
push
lds
int3
int
sbb
fild
or
cmp
inc
psadbw
add
repz
push
dec
out
mov
xchg
xchg
mov
fidivr
or
mov
or
mov
test
dec
cmp
ins
add
jl
mov
or
xchg
sbb
idiv
mov
push
pop
push
call
inc
ds
dec
and
es
shl
jns
aaa
add
cmp
aam
popf
lea
jge
cmp
call
test
push
pop
cmovge
mov
out
xchg
loope
sub
xchg
jnp
dec
jmp
(bad)
arpl
stos
pushf
sub
sub
jns
mov
sahf
leave
xor
sar
xor
mov
lods
xor
sub
sahf
fs
xchg
jmp
jecxz
into
test
fisttp
int3
ins
inc
lods
jmp
push
mov
sti
cmp
cmp
push
out
inc
fsubr
retf
jmp
int3
std
sbb
fs
das
out
mov
pop
or
imul
xor
push
(bad)
jmp
push
add
mov
(bad)
int
popf
xor
mov
xor
mov
mov
enter
clc
mov
cmp
out
inc
dec
push
sub
not
mov
in
aaa
stos
(bad)
icebp
lods
mov
push
jne
fcom
out
pop
or
loope
mov
mov
cvtps2pi
jmp
addr16
inc
mov
and
cdq
xor
inc
sbb
push
dec
jo
call
adc
mov
jmp
or
sub
loope
std
imul
test
ds
xchg
psubq
in
inc
jmp
sub
sar
retf
std
dec
retf
or
xchg
push
xchg
mov
push
inc
dec
ins
pop
stos
mov
xchg
jmp
ins
lea
pop
push
cs
daa
fnstcw
popf
loopne
push
or
nop
imul
mov
cmps
movs
ret
fucomip
mov
retf
mov
mov
pop
cmp
xlat
outs
cmp
lods
mov
ins
adc
inc
mov
and
mov
sbb
aaa
out
pop
fwait
pop
out
fdiv
sti
mov
rcl
fsincos
sbb
dec
arpl
cdq
inc
mov
cmc
fisubr
std
add
mov
pop
xchg
cmp
xchg
mov
nop
daa
push
xor
xchg
ret
mov
mov
inc
xor
aad
xor
cwde
sti
xchg
loope
or
lods
retf
pop
stos
mov
jle
mov
sahf
dec
jle
fs
or
jge
test
sahf
cmp
cmp
sub
neg
jle
stos
push
cmc
jb
nop
in
pop
jmp
inc
int3
cmp
pop
push
out
ins
movs
inc
pushf
dec
dec
jge
outs
fs
sub
add
out
std
int3
addr16
and
sub
inc
movs
push
sti
xchg
pushf
out
mov
sbb
mov
pop
mov
std
dec
ror
jae
xchg
repnz
sub
ins
int
dec
cmp
js
les
icebp
ins
mov
stc
outs
inc
out
int3
fwait
pop
mov
xor
push
cld
add
mov
xchg
or
sbb
dec
arpl
xchg
std
xchg
sbb
dec
pop
dec
jge
pop
mov
clc
adc
push
outs
and
jecxz
jp
push
fdivr
push
inc
shr
out
stos
mov
or
fst
mov
scas
push
cmc
cld
sub
push
cli
sahf
sbb
cmp
cmp
into
mov
mov
xchg
cdq
mov
jge
jle
pop
pop
loopne
mov
fdiv
mov
adc
rcr
hlt
mov
sbb
int3
push
fdiv
pop
jno
xor
in
sub
jge
push
sti
mov
and
jp
ins
push
and
ins
mov
or
ja
mov
pusha
cmp
jle
popf
mov
addr16
int3
fisubr
arpl
mov
mov
loope
enter
inc
ins
xor
mov
sub
(bad)
outs
aaa
or
pop
cmp
mov
or
jmp
adc
mov
sub
ja
clc
out
stos
sub
stos
push
pop
imul
mov
dec
ss
push
movs
jno
cmp
shl
shl
int
add
or
sub
adc
or
push
in
sbb
pop
popf
mov
(bad)
lods
xchg
dec
ins
mov
dec
fld
jp
lods
adc
aam
pushf
or
(bad)
retf
aam
jae
fbstp
movs
push
sahf
adc
int
push
retf
xchg
mov
jge
and
es
test
sub
fwait
stos
popf
rol
pop
xchg
aad
sti
push
dec
std
sahf
jle
rcl
dec
jmp
dec
out
jp
mov
out
rcr
push
hlt
int
or
sub
dec
push
mov
lock
popa
cld
das
dec
icebp
(bad)
push
jp
jl
pop
popf
mov
push
cmp
mov
dec
xchg
rcr
mov
mov
(bad)
in
pop
(bad)
or
inc
jno
mov
jl
cmp
sar
inc
aad
mov
out
xchg
hlt
stos
pop
in
inc
cmp
inc
mov
mov
push
and
movs
mov
movs
inc
and
pop
cmp
cmc
xor
xchg
lahf
pop
mov
arpl
in
dec
(bad)
cmp
das
adc
sub
cs
jp
rol
in
pushf
ficomp
mov
xchg
fwait
sbb
dec
sbb
lahf
mov
es
dec
xor
jns
jo
pop
xor
push
xchg
pop
dec
mov
stos
not
mov
push
xor
jne
push
xor
mov
dec
cli
pop
adc
lds
jmp
mov
dec
dec
sbb
std
cmp
fucomp
hlt
push
addr16
call
scas
mov
(bad)
in
inc
pop
jmp
jmp
mov
xor
test
lea
adc
rcr
jl
mov
out
cmps
jmp
push
lds
cmp
es
pop
sub
movs
fstp
sub
push
push
jae
add
pushf
fstp
add
sbb
imul
sub
inc
jecxz
sti
sbb
and
push
pushf
call
sub
mov
push
dec
loop
in
rcl
fisttp
sub
jp
ss
icebp
clc
in
sbb
outs
sti
push
stc
in
sbb
mov
into
jge
mov
xor
push
popa
push
ja
or
cmps
in
arpl
push
in
leave
jle
mov
adc
push
mov
inc
std
xor
fist
push
ror
and
or
mov
xor
xor
adc
imul
inc
(bad)
mov
or
push
mov
lods
xchg
imul
adc
imul
push
dec
mov
mov
mov
loopne
dec
pop
ins
xchg
out
adc
xor
ja
pop
test
mov
or
fmul
sbb
retf
sub
fisttp
dec
scas
ins
cld
cmp
std
sbb
xchg
pop
int3
(bad)
pop
cmp
leave
jmp
pop
fs
in
(bad)
jg
or
pop
pop
jmp
mov
or
xor
iret
sti
adc
sti
std
jmp
in
mov
aam
mov
lods
jno
fnstcw
mov
mov
in
aaa
stc
mov
hlt
stos
or
lods
cmp
scas
adc
adc
rol
(bad)
imul
(bad)
xor
lock
jnp
ret
or
push
push
int
iret
dec
cmp
fidivr
sbb
jle
sahf
ins
icebp
adc
aaa
cmp
ja
lods
ins
retf
push
sub
adc
adc
out
test
adc
dec
cld
jp
cmp
sbb
jnp
or
push
mov
int
push
cld
cmp
cmps
std
aad
mov
add
jo
in
ins
in
xchg
loope
outs
dec
inc
or
jae
out
and
xor
std
or
fwait
mov
je
jge
int3
ins
imul
lock
in
pop
jecxz
int3
adc
stos
mov
outs
pop
push
add
not
mov
push
xchg
sbb
inc
inc
shl
mov
pop
dec
xlat
cmp
inc
mov
jp
cmp
fisubr
ins
mov
jo
shl
sti
cmp
pop
inc
mov
xchg
push
ror
adc
xor
sub
dec
jl
test
jge
lea
inc
in
mov
sti
bound
data16
ja
ja
and
scas
add
cs
(bad)
pop
xor
pop
out
jo
shr
stos
fwait
push
mov
mov
sub
adc
js
xor
(bad)
imul
and
and
or
adc
xor
ins
imul
mov
lods
lea
mov
fstp
pop
lods
dec
and
inc
sub
sbb
addr16
adc
mov
fisubr
mov
jmp
int
inc
mov
add
(bad)
jns
sbb
int
fisubr
inc
movs
ret
scas
call
jge
jnp
cli
loope
or
jle
add
ror
dec
repz
xor
pop
add
xchg
jmp
mov
mov
mov
repnz
lahf
push
sbb
mov
jnp
sub
out
rcr
retf
xor
int3
add
pushf
popf
sub
pop
push
out
xchg
adc
sub
stos
sbb
or
jb
xchg
xor
inc
cmp
dec
jl
out
popf
inc
pop
pop
fisub
cmps
and
cli
leave
data16
jecxz
push
pop
ins
sbb
pop
push
or
pushf
arpl
imul
loop
dec
jnp
shr
in
mov
retf
into
mov
movs
jl
and
aad
pop
loop
push
ins
dec
ret
mov
scas
cmp
bound
and
pop
pop
mov
out
add
scas
cmp
push
cmp
outs
sbb
call
cmp
mov
aad
and
arpl
mov
cs
jo
cmp
mov
adc
mov
sbb
icebp
sub
add
push
cmp
xor
sti
sahf
rcr
pop
inc
inc
sbb
push
mov
xchg
ror
sahf
pop
and
call
mov
xor
mov
imul
es
dec
add
cmp
mov
arpl
dec
push
xor
pop
dec
mov
xor
mov
sbb
add
enter
mov
loopne
mov
and
and
(bad)
popa
in
lock
les
mov
dec
jae
sub
mov
addr16
mov
sub
outs
dec
mov
je
popf
jne
mov
xor
jl
movs
popf
xor
in
int3
sbb
ins
or
mov
jae
call
sbb
pop
or
cmp
jge
icebp
movs
jmp
shl
call
push
dec
xor
xchg
dec
aad
xchg
xlat
dec
mov
sahf
stos
jns
fist
and
pop
ds
sub
cli
jg
jl
std
retf
or
sub
(bad)
adc
mov
cs
inc
pop
sub
pop
lods
inc
sti
shr
pop
cld
popa
pop
rcl
dec
jg
mov
jle
and
jmp
jmp
xor
pop
cmc
outs
fisub
imul
out
jb
sbb
pusha
cmp
fwait
dec
cmp
sbb
and
sahf
inc
xchg
call
adc
leave
mov
int
jo
jns
or
add
call
scas
sbb
or
mov
idiv
mov
add
cs
mov
aaa
push
stc
jae
pop
fnstsw
pop
fwait
loopne
jp
mov
add
test
fstp
dec
ins
out
adc
loop
and
popa
jb
mov
rcl
push
lods
add
sar
aam
pop
aam
sbb
cld
fidiv
cld
sub
pop
sbb
idiv
ja
jnp
loope
jge
ds
fidivr
sbb
in
ins
in
into
fsubr
mov
imul
push
sbb
mov
pop
ficomp
stc
sub
jmp
sub
dec
daa
repz
retf
cli
mov
in
fimul
in
mov
fdiv
ins
pop
jmp
or
lods
sti
fcmovne
inc
pop
pop
or
and
(bad)
les
pop
retf
ftst
dec
and
cs
addr16
retf
xor
pop
mov
movs
sbb
and
popf
sbb
xor
cs
es
cmp
enter
mov
push
sti
outs
rcl
mov
repnz
jmp
scas
fiadd
dec
fcomp
push
cmp
pop
xor
aad
lods
push
adc
pop
sahf
jns
mov
lods
dec
ins
sbb
rcl
shr
lods
fistp
std
mov
int
ins
popf
lea
cmp
xlat
pop
stos
fild
pop
fwait
cmp
popf
jge
push
imul
ins
xchg
mov
cmp
sbb
jg
or
lods
loop
bound
mov
pop
xor
ins
stc
std
imul
test
jmp
in
into
popf
pop
or
mul
pop
call
ins
lea
imul
(bad)
cdq
push
sub
outs
lds
(bad)
fiadd
inc
adc
sbb
or
mov
mov
ror
fisttp
mov
dec
cmp
repnz
dec
ds
int
xlat
in
push
lods
pop
ss
mov
push
dec
cmp
stos
arpl
iret
mov
sub
mov
and
(bad)
ins
mov
push
mov
cld
test
addr16
popa
jmp
fucomi
jnp
ret
jmp
sub
sub
pop
ret
mov
shl
lea
adc
ficomp
in
retf
mov
hlt
retf
pop
fistp
ror
jle
jge
pop
or
sbb
shl
imul
fmulp
rcr
jb
out
dec
idiv
les
int
mov
xchg
jp
fdivr
sub
(bad)
jo
dec
lods
mov
mov
pop
fst
in
stos
fisttp
cmp
jmp
inc
int3
pop
dec
pop
aas
sbb
push
shl
imul
stos
aaa
pop
retf
int3
ja
retf
lea
retf
ret
xchg
pop
or
sub
ds
dec
std
sbb
jmp
dec
or
or
cmp
cmp
int
int3
int3
jle
fstp
std
(bad)
cmp
mov
pop
jmp
sbb
fsubr
cmp
push
pop
push
fwait
rol
lahf
push
cmps
sub
pop
mov
push
fidivr
mov
cld
sbb
adc
pop
mov
out
jnp
loope
(bad)
ja
sub
daa
(bad)
enter
jmp
cli
pushf
popf
call
inc
adc
mov
pop
mov
sbb
pop
lods
fwait
jmp
mov
in
dec
es
dec
xchg
sub
sub
aad
add
aam
in
stos
int
or
pop
(bad)
cmp
jle
idiv
cli
std
cmps
pushf
xor
xlat
sub
dec
push
out
ins
fnstsw
jmp
jmp
pop
or
mov
push
or
in
stos
jne
dec
dec
mov
fbld
imul
leave
cld
xor
jge
fwait
pop
dec
call
jns
push
ins
mov
outs
dec
mov
shl
dec
mov
add
and
adc
stos
daa
add
pop
jbe
popf
int3
(bad)
cmp
jbe
ins
fld
sti
cli
dec
sub
ss
xor
cmp
jge
imul
pop
movs
mov
push
mov
xlat
je
pop
fndisi(8087
(bad)
lea
sahf
lods
es
jecxz
in
into
or
xchg
xlat
cwde
sub
cmp
xchg
mov
dec
lea
sbb
xchg
les
loop
stos
lods
sbb
inc
cdq
jne
cmp
shl
xor
in
xor
sub
mov
mov
mov
stos
(bad)
add
inc
aaa
ret
jg
cld
rol
test
adc
movs
xchg
addr16
cmp
cmp
sti
cmp
dec
pushf
jmp
inc
fs
mov
sub
dec
(bad)
pop
cmp
lods
sub
movs
mov
push
sti
jle
sbb
sub
and
in
in
mov
inc
sub
jl
push
in
jnp
fcmovnbe
out
imul
ret
cmp
cmp
test
movs
pop
cld
push
iret
cmp
xchg
mov
les
iret
push
movs
or
out
cmp
or
ins
dec
retf
je
adc
add
rcr
sbb
ror
imul
push
and
add
fisttp
fidiv
fnstenv
ins
sub
push
scas
fstp
mov
pop
sub
mov
sub
lahf
jae
dec
loope
sbb
jl
xchg
mov
pop
mov
inc
mov
cdq
jg
ret
cmc
pop
pushf
xchg
cmp
aas
xchg
aad
test
adc
pop
adc
(bad)
std
lahf
jnp
ja
push
mov
icebp
(bad)
addr16
out
in
jl
enter
mov
add
and
fadd
add
jg
nop
stos
jae
adc
dec
retf
sbb
sub
cmp
pushf
imul
push
adc
adc
mov
mov
enter
out
and
stos
mov
pop
adc
xchg
push
dec
pop
xchg
movs
retf
cmp
inc
cld
in
cmp
mov
dec
daa
or
jae
outs
dec
std
arpl
add
in
es
ins
sbb
loopne
shl
or
or
rol
in
jne
jae
push
cmp
mov
ins
mov
jnp
mov
ss
cmp
mov
in
adc
pushf
adc
add
dec
mov
in
xchg
dec
sbb
sbb
mov
add
inc
rol
cmp
add
mov
and
test
jnp
pop
sbb
xor
push
lahf
and
mov
dec
loopne
xor
jge
(bad)
cmp
mov
lahf
stc
and
enter
inc
mov
dec
shr
push
mov
jns
jl
cmp
cwde
or
push
es
or
ret
adc
outs
cmp
mov
inc
cmps
enter
enter
(bad)
xlat
push
retf
call
lds
xchg
imul
int
xchg
loope
fstp
in
fwait
xchg
and
in
mov
add
xor
push
or
nop
or
jnp
ficom
pop
jg
loopne
push
xchg
mov
mov
(bad)
push
mov
push
mov
jbe
mov
cmp
call
cmp
popf
xor
scas
std
mov
or
push
cld
cmp
in
ins
popf
cmp
pop
inc
jmp
sbb
jge
leave
push
dec
jl
mov
sbb
pop
cdq
pushf
dec
sbb
jb
sar
sub
shr
ins
or
jmp
daa
lods
int
fidivr
sbb
mov
xchg
lods
fucom
imul
sbb
jmp
dec
sbb
mov
aad
mov
fwait
rcr
pushf
cli
or
ins
fld
jnp
stos
scas
sub
dec
aad
rol
xlat
lea
jmp
jle
ffree
lods
or
cmp
rcr
sti
cmc
jl
push
call
jnp
mov
ins
int
in
hlt
xor
cmc
stos
xor
cmp
in
shl
ds
outs
lods
pushf
sub
in
mov
(bad)
(bad)
fmul
sbb
ret
push
pop
scas
pop
jnp
outs
adc
push
nop
lea
pop
mov
or
mov
fcomp
sbb
mov
(bad)
sar
popf
(bad)
jnp
mov
iret
push
jns
push
lods
std
enter
in
fstp
mov
cmp
cld
stos
jo
inc
push
pop
xor
lods
ins
sub
jo
fnsave
dec
call
pusha
mov
adc
pop
cdq
jnp
sub
xchg
jmp
push
lods
cmp
in
pushf
rcr
sbb
xchg
fcom
lods
inc
xor
frstor
mov
cmps
in
lock
sbb
sbb
clc
cmps
out
daa
outs
jmp
stos
lahf
cmp
add
rcl
sbb
pop
jnp
or
in
movs
pop
mov
cmp
pop
xor
outs
cld
shr
jl
sub
pop
pop
imul
lods
popa
pop
shr
fstp
jge
shl
neg
pop
push
add
(bad)
in
imul
jae
stc
cmc
call
das
ficomp
dec
ror
idiv
dec
add
fsubrp
jl
call
or
clc
nop
cmp
jb
and
sub
lods
xchg
fst
cmp
pop
xor
outs
mov
(bad)
jmp
pop
jmp
sub
xlat
jns
sbb
jbe
retf
adc
lahf
xchg
shl
pop
mov
enter
push
inc
mov
popa
push
pushf
aaa
rol
xchg
jge
rep
mov
lahf
(bad)
jo
jmp
sbb
out
bound
mov
sub
imul
cwde
fsubrp
push
xor
jge
add
dec
aaa
out
xchg
in
or
dec
inc
xchg
sbb
jo
repz
ret
xchg
test
mov
pop
lea
dec
push
ss
sbb
jecxz
stos
stos
aam
mov
popa
or
mov
shr
jmp
dec
out
add
dec
fadd
mov
or
gs
adc
mov
fistp
dec
pop
in
outs
ss
mov
mov
mov
jae
and
mov
jl
lea
mov
ror
test
adc
sbb
sub
aaa
mov
add
inc
jno
sti
mov
mov
inc
stos
es
jle
adc
lods
cmp
scas
dec
or
adc
inc
pop
push
xor
bnd
mov
pushf
pop
adc
stos
add
das
in
jo
xor
xchg
pop
dec
dec
push
adc
push
push
enter
or
cmp
jg
dec
cmp
sti
adc
xchg
jae
mov
pop
lea
repz
int
ss
jno
(bad)
rol
inc
cmp
jae
sub
xor
in
fs
leave
out
jg
mov
(bad)
and
sti
xchg
lock
mov
or
inc
addr16
xchg
cld
pop
aad
cli
xchg
mov
arpl
jmp
sbb
xchg
cmp
cmp
outs
jecxz
mov
jp
lds
dec
ficomp
mov
xchg
inc
out
pop
fmul
push
call
std
mov
jg
sbb
mov
dec
dec
(bad)
sbb
fwait
mov
jge
dec
in
or
pop
sbb
pop
or
hlt
add
or
sub
push
mov
xchg
cld
sub
push
sub
in
adc
lahf
or
(bad)
push
lahf
push
mov
mov
pop
in
xacquire
xchg
push
fimul
loope
fist
mov
push
js
enter
ins
mov
mov
pop
mov
xchg
cdq
fistp
mov
lods
cmp
inc
adc
cwde
pushf
jg
nop
jg
sub
pushf
mov
ror
bound
rol
mov
push
scas
outs
and
inc
inc
fstp
fbstp
pop
test
xchg
mov
imul
or
out
in
sahf
add
xchg
jge
push
mov
pop
mov
push
and
popf
jnp
dec
push
xchg
(bad)
dec
mov
inc
std
jnp
mov
xor
add
add
pop
dec
test
mov
xchg
mov
inc
mov
sub
dec
xchg
and
add
xor
(bad)
cdq
sbb
jns
dec
iret
into
test
loop
sbb
dec
inc
imul
sub
mov
mov
push
cmp
cmp
inc
test
inc
push
dec
dec
bound
xor
ret
sub
scas
xchg
dec
push
cmp
dec
addr16
push
inc
cmp
je
in
and
das
jbe
and
mov
loopne
sbb
mov
inc
or
push
pop
das
cmps
lea
movs
cmps
push
aaa
cdq
pop
xchg
jne
sub
mov
scas
add
cli
iret
xor
cdq
cli
dec
and
stos
sbb
loop
mov
lea
jb
fisttp
mov
jl
dec
pop
jg
pop
pop
jmp
sub
mov
in
std
mov
int
cmp
jle
ins
inc
sub
ins
pop
jns
push
dec
in
mov
into
dec
jl
fstp
fdivr
or
jmp
shr
mov
pop
sub
fadd
dec
test
in
mov
cmp
and
dec
or
cld
cmp
sub
iret
int3
cmp
xor
pop
ins
lea
and
in
lods
push
fisttp
sti
dec
dec
loopne
cmc
(bad)
movs
sbb
imul
cli
cs
sahf
jge
sbb
fwait
int
pop
pop
pop
pop
das
aam
jmp
pop
dec
dec
lods
pop
mov
sbb
ds
into
jmp
in
hlt
fmul
enter
jmp
fmul
sub
popf
mov
fsub
imul
sbb
iret
lods
ins
jp
(bad)
(bad)
fucomp
push
sub
(bad)
loop
imul
into
int3
imul
push
sub
fild
sar
ins
call
into
pmaxub
pop
jle
cs
(bad)
stos
sbb
vphaddudq
pop
add
jnp
(bad)
fwait
nop
repz
jg
fimul
sbb
cli
dec
fs
in
popf
fstp
mov
dec
sub
ins
cmp
or
ins
lock
call
pop
arpl
bound
mov
stos
push
sbb
rcr
mov
jg
int
sub
dec
jmp
pushf
jle
fdivrp
clc
cld
push
xlat
out
jl
xor
cs
pmaddwd
inc
ds
call
lods
jge
fcmovu
add
das
sti
sub
dec
retf
sub
(bad)
int3
jle
add
and
xchg
mov
fistp
in
ins
jmp
mov
enter
push
dec
pop
ins
imul
int
shr
mov
push
cli
sub
retf
or
mov
jge
call
mov
pop
fmul
in
sahf
cmp
fistp
mov
jo
sahf
cli
mov
aas
or
aaa
in
fstp
mov
fisttp
popf
cmp
ins
std
lods
sti
jge
jl
in
stos
fmul
pop
pushf
out
pop
stos
mov
sbb
ins
fstp
outs
jle
stos
leave
cmp
scas
shr
and
in
jmp
sub
pop
dec
or
adc
mov
or
sbb
cmp
aad
push
into
popf
stos
add
call
retf
cmp
cs
ins
pop
std
paddusb
mov
sti
cli
out
or
imul
pop
sbb
scas
push
std
into
hlt
mov
fcomp
leave
jle
cmp
jmp
outs
clc
mov
sub
or
jne
sbb
cs
out
ins
inc
sbb
mov
fwait
pop
mov
lods
or
sub
ins
adc
retf
int3
lea
sbb
das
fisttp
sub
jmp
test
cld
pop
fldcw
lahf
mov
jb
dec
cld
fwait
jmp
leave
(bad)
lods
mov
stos
ja
fsubr
sbb
mov
std
test
jnp
nop
mov
jns
imul
or
std
not
mov
pop
push
(bad)
push
and
ins
int3
or
int
movs
test
sbb
fild
mov
pop
dec
pop
ret
add
dec
mov
fs
retf
cli
jle
mov
pop
mulps
repz
int3
jmp
jmp
clc
sbb
lods
sti
ins
jl
dec
sub
sub
cmp
or
fxch
lods
lods
(bad)
push
dec
popf
jmp
jmp
jb
mov
ins
xor
jmp
mov
fwait
lods
stos
add
cs
nop
scas
jle
jb
lea
cld
jmp
std
jl
sti
sahf
lods
jp
pop
pop
jnp
cs
aam
std
sub
je
pop
ss
jl
jmp
cld
mov
mov
shl
popf
or
xor
sub
ret
ins
(bad)
or
lea
sbb
mov
int3
xchg
retf
pop
sti
jmp
mov
inc
cmp
jge
jp
jmp
or
mov
dec
(bad)
ds
shl
inc
int
jge
xchg
mov
inc
xchg
mov
sub
adc
ins
jp
lods
pop
pop
cmp
in
pop
cmp
mov
push
dec
mov
push
xchg
aas
mov
mov
in
(bad)
(bad)
or
sub
pop
sub
(bad)
fmulp
lods
int3
jle
mov
aad
mov
jle
setb
fistp
das
in
jg
sti
jp
mov
aad
ins
jmp
add
nop
cmp
xor
stos
mov
jmp
mov
cmp
mov
or
mov
mov
jnp
sbb
pop
ficom
pop
sbb
shl
das
mov
clc
in
repnz
aas
imul
push
dec
push
mov
mov
in
jnp
imul
rcl
movs
adc
fwait
lea
pop
sbb
hlt
(bad)
pop
in
pop
sub
jp
dec
or
xor
sbb
xor
(bad)
out
push
ds
sahf
xchg
call
xchg
out
xor
int3
lods
or
les
mov
jmp
mov
sti
inc
retf
add
xchg
or
dec
mov
in
test
jle
cmc
int
push
mov
mov
mov
repnz
xor
mov
lea
mov
push
mov
fdivr
dec
ds
fstp
xor
mov
xor
in
mov
mov
pushf
imul
ins
mov
cmps
call
popf
add
sahf
sbb
jge
call
pop
jns
std
ret
addr16
loopne
or
js
dec
jo
popf
popf
jo
mov
int3
loop
dec
or
outs
mov
fistp
add
fldcw
imul
inc
not
jecxz
enter
popf
or
push
popf
pop
mov
adc
aaa
jo
pop
sbb
int3
xlat
push
hlt
jae
ds
jl
jp
xchg
lea
pop
xor
in
and
mov
shl
xchg
lea
jno
jmp
bt
and
ret
jmp
ja
jg
dec
jmp
int
(bad)
push
shl
mov
cmps
scas
adc
dec
stc
jp
push
lock
and
ds
ins
mov
inc
cmp
and
cmp
adc
push
jge
xor
push
fcomi
ds
js
dec
hlt
shl
add
sbb
jge
mov
jb
jp
push
xchg
xor
popf
mov
in
out
adc
ins
push
pop
mov
shr
lahf
xchg
nop
lahf
mov
or
ja
add
push
ins
data16
pop
xchg
int
cs
cmp
mov
dec
push
jns
sbb
or
xor
out
pop
mov
out
jb
and
pop
xor
jmp
cli
dec
jo
addr16
mov
(bad)
daa
xchg
retf
jl
jl
jne
jno
sti
jbe
pushf
inc
push
(bad)
cmc
mov
fwait
mov
lahf
icebp
cmp
sbb
or
mov
mov
mov
loopne
in
push
fucomp
in
cld
cmps
out
lea
xor
and
dec
aas
mov
sub
test
mov
mov
test
mov
popa
hlt
inc
and
inc
or
pushf
lods
xor
pop
or
clc
cmps
or
jecxz
mov
mov
ret
add
retf
cmp
shr
int
loop
int
test
push
int
sbb
cmp
mov
(bad)
ss
add
ins
nop
add
dec
cmc
jne
mov
pop
fbld
mov
cmp
rcr
sbb
cmp
lea
jmp
jb
int3
pop
ins
xor
jne
arpl
ret
pop
stc
call
pushf
icebp
addr16
mov
xor
nop
clc
push
jmp
jg
cs
cs
not
sub
mov
or
jecxz
and
(bad)
mov
adc
aas
movlps
xor
dec
cmp
sub
mov
or
int
mov
sub
jae
ja
jb
in
dec
add
mov
mov
nop
and
mov
mov
in
and
mov
jmp
inc
mov
jle
xor
xor
xchg
outs
jmp
rcr
call
scas
xor
add
lods
cmp
repz
(bad)
data16
repnz
test
sbb
cmp
mov
lock
loopne
sysret
pop
push
sbb
xchg
lds
jecxz
ficom
push
inc
gs
loop
mov
or
pushf
adc
scas
in
jl
jge
mov
and
nop
pop
pop
test
pop
mov
add
and
jge
and
ficom
pop
mov
int3
cmc
aaa
std
sti
mul
sub
loopne
cs
fist
loopne
dec
add
add
lods
and
sbb
mov
arpl
data16
jecxz
push
in
push
iret
lods
xor
cld
popa
sub
aad
and
xor
or
ficomp
inc
jge
mov
sub
test
or
jae
clc
xlat
popa
ret
ds
or
nop
mov
ss
inc
in
sbb
sub
dec
mov
jns
cli
cmp
lahf
dec
xor
and
popf
(bad)
stos
mov
out
jnp
add
dec
loop
and
or
cmp
inc
fbstp
sbb
arpl
stos
inc
stc
out
or
ret
dec
addr16
xor
adc
mov
add
inc
stos
fbstp
push
push
leave
inc
jle
mov
xor
and
jmp
mov
jge
aas
stos
out
or
pushf
inc
push
mov
call
push
fbld
in
add
shl
push
cmp
inc
stc
jp
push
mov
test
popa
es
popa
inc
movs
dec
ror
fidiv
aaa
mov
push
or
out
aam
push
arpl
push
adc
cmp
mov
jge
aas
push
imul
sbb
or
aaa
mov
jbe
add
jl
jmp
stos
das
pusha
inc
movs
icebp
popa
imul
sbb
dec
shl
add
fwait
adc
into
aas
pop
mov
cwde
xchg
xchg
add
xchg
add
add
jbe
mov
outs
aas
bound
mov
and
sub
jae
mov
dec
lods
dec
mov
xchg
mov
mov
popf
mov
std
stc
loope
push
test
dec
out
and
cmp
cmc
cmp
std
jb
mov
or
sar
jp
adc
inc
adc
xchg
int
cmp
push
mov
and
add
mov
jne
dec
outs
inc
ds
jmp
test
aad
shl
jno
inc
mov
or
sub
fcomi
gs
iret
jnp
ss
sbb
fild
cdq
pop
push
std
xor
ss
test
aam
and
int
mov
adc
xor
sub
data16
inc
sub
idiv
add
retf
and
cmp
or
stc
xor
mov
addr16
int3
adc
loop
inc
fwait
arpl
mov
pop
lods
nop
inc
and
adc
jnp
movs
add
cli
xchg
iret
cmp
jnp
arpl
push
cmps
push
mov
push
cmovbe
in
dec
dec
push
stos
sub
add
pusha
pop
out
bound
lods
add
ins
jecxz
add
fwait
and
add
jmp
jae
pushf
daa
(bad)
leave
dec
call
mov
mov
xor
test
xor
push
mov
add
sti
bound
call
rcr
and
mov
push
sbb
in
sub
movs
xchg
gs
push
es
pop
xor
(bad)
mov
adc
sti
dec
sub
imul
mov
sbb
out
mov
or
jg
mov
mov
sbb
in
add
sbb
dec
ret
adc
test
loopne
jb
pop
xor
pusha
call
push
fwait
cmc
jns
sbb
mov
jl
mov
xchg
lods
dec
sub
dec
mov
(bad)
in
or
sbb
call
mov
mov
in
fucomi
mov
ds
not
mov
call
mov
push
(bad)
sbb
pushf
jmp
pop
pop
pop
dec
jo
jge
jmp
(bad)
sti
ins
jecxz
shr
push
jno
pop
data16
scas
mov
dec
sub
or
or
inc
pop
neg
mov
add
jnp
sar
xor
aam
jns
imul
dec
dec
dec
sub
sub
frstor
sbb
lods
inc
pop
imul
sbb
sub
iret
aam
mov
sahf
lods
jns
ds
fst
pop
in
std
cmp
or
cmp
sahf
lods
in
dec
imul
out
cli
popf
jno
fsubr
or
ret
push
into
cmp
jge
test
lods
iret
popf
pushf
std
mov
mov
cs
lods
cli
jg
cmp
pop
out
retf
mov
sub
ret
jl
sub
push
or
fmul
out
aas
lods
ds
dec
call
lea
call
pop
dec
(bad)
pushf
outs
pop
cld
or
(bad)
das
dec
inc
int3
lods
imul
adc
jp
jmp
push
cmp
popa
cmp
cmp
stc
aad
ins
mov
(bad)
and
aas
fcomp
int
dec
(bad)
inc
fstp
popf
in
push
mov
iret
rcr
jmp
lea
push
sub
pusha
add
pop
sti
sbb
ins
mov
push
fdiv
jmp
or
popf
rol
fdivr
aad
push
pop
push
sub
cmp
fstp
movq
push
pop
pop
ins
and
lea
test
jge
sub
out
popf
and
int3
pop
push
jl
dec
mov
ficomp
mov
mov
mov
sub
dec
push
fnstsw
clc
in
outs
cli
jmp
ins
push
cmp
retf
imul
fwait
cs
fisttp
cmp
pop
(bad)
in
xchg
pop
lods
jp
rcr
shl
or
fsubr
(bad)
fsubr
dec
dec
dec
cdq
adc
sbb
imul
jl
xor
fmul
mov
stos
std
fdivr
lock
fsubr
dec
cld
out
retf
imul
pop
lock
ins
fidiv
int
sbb
cs
scas
pop
sahf
gs
fwait
lahf
jmp
push
pop
dec
xchg
scas
int
mov
fdivr
sbb
dec
cli
(bad)
pop
retf
out
dec
shr
sahf
outs
cli
fcomp
mov
dec
in
mov
fsub
fsubr
lock
mov
ins
push
int3
or
jmp
inc
mov
aas
scas
mov
aam
ret
push
inc
pushf
push
leave
loop
sbb
aam
or
lahf
int3
sbb
sub
aas
lods
mov
ins
retf
out
sub
jl
leave
loopne
pop
lahf
xchg
pop
lods
stos
fcomp
mov
iret
fwait
jmp
in
sahf
jnp
fsubr
sbb
dec
fld
std
int3
xlat
loope
lock
out
adc
mov
sbb
sub
int
ficom
ud2
lea
fsubp
aam
retf
mov
mov
mov
outs
cmp
cs
push
or
rol
or
dec
outs
jnp
jnp
and
or
fmul
retf
fdivr
dec
cmp
push
push
fcomp
cs
cmp
shr
loope
(bad)
(bad)
cmps
jg
jnp
fsubrp
mov
les
jmp
jge
imul
push
(bad)
popa
mov
jl
or
jp
(bad)
stos
mov
cli
loop
push
add
int
push
(bad)
sbb
sub
das
fidivr
jno
cmp
pop
(bad)
fdivr
pop
int3
jo
nop
fmul
fsubrp
pop
fmul
jmp
cmp
cwde
aam
ds
dec
or
lods
pop
cmp
int3
test
cmp
test
test
cmp
imul
mov
jmp
jmp
(bad)
imul
pop
std
jmp
jle
lods
fimul
sbb
outs
mov
cmp
inc
into
jl
pop
cmp
mov
int3
mov
jge
imul
fnstcw
stc
sbb
fsubr
fisttp
jl
pop
in
sub
mov
mov
inc
inc
jmp
lods
dec
scas
fcmovnbe
test
push
stos
adc
jle
movs
pushf
push
push
ins
fstp
stos
dec
(bad)
js
imul
inc
mov
scas
mov
fidivr
popf
popf
fdivr
jle
jns
push
pushf
sbb
and
call
lods
jl
pop
dec
dec
fdivr
int3
stos
jnp
sbb
mov
cld
lea
pop
fdivr
pop
sub
mov
jnp
lods
fwait
rol
dec
push
sbb
stos
rcr
inc
jl
sbb
cmp
rcl
pop
imul
lahf
dec
pop
mov
add
in
mov
mov
lea
(bad)
ins
outs
test
outs
dec
(bad)
jp
fcomp
int3
dec
into
in
pop
popf
sbb
(bad)
jle
mov
aas
sar
dec
or
dec
sub
imul
aad
sub
sbb
in
mov
or
fwait
clc
mov
nop
jle
mov
mov
shl
jg
fst
push
imul
dec
dec
stos
in
stos
int3
out
cwde
xor
dec
push
mov
fmul
mov
sub
shl
push
ds
jp
cli
out
mov
out
sbb
in
lea
dec
das
fdiv
fcomp
lods
dec
sti
pushf
ins
jp
mov
cld
xor
repz
sub
rcr
fwait
leave
cld
(bad)
nop
sbb
push
lods
mov
sub
inc
into
lods
int3
dec
scas
cmp
(bad)
lahf
sub
lods
dec
dec
std
fild
jnp
cs
lahf
push
lods
sar
push
mov
mov
pop
pop
lods
rcr
ficomp
outs
sar
sbb
cmp
mov
jmp
mov
mov
lea
ins
ds
(bad)
fdivr
cld
cmp
jle
dec
out
fsubr
fwait
lods
in
ficomp
xchg
int
adc
popf
mov
ds
and
dec
dec
ds
mov
cmps
mov
dec
test
cwde
test
fisttp
fcomp
push
cmp
sbb
mov
fisubr
dec
sub
mov
push
aam
sbb
jl
push
mov
adc
pop
stos
arpl
sbb
dec
fiadd
push
dec
mov
cli
enter
or
sub
in
push
sti
mov
jle
iret
int
(bad)
(bad)
push
sbb
cwde
pop
jle
adc
test
push
fstp
cld
stos
aaa
std
shl
nop
nop
retf
dec
pop
dec
int3
int3
or
cmp
lods
leave
jmp
adc
out
retf
pop
ficomp
pushf
outs
or
aam
leave
push
pushf
pusha
mov
lahf
jl
loopne
pop
push
imul
push
ins
cld
pop
jnp
mov
push
outs
sbb
mov
stc
aam
scas
fwait
retf
cs
test
xchg
fs
mov
lods
sbb
dec
fwait
into
sub
jp
mov
pop
(bad)
jl
ins
add
aaa
fcom
mov
mov
push
(bad)
enter
or
fstp
adc
sub
push
sbb
lods
scas
call
outs
stos
pop
cli
cmp
push
lods
fcmovnu
jnp
mov
fstp
mov
pushf
dec
nop
pop
int
cs
fistp
loopne
sbb
mov
pop
mov
xlat
fcomp
sbb
scas
fild
cli
fs
rcr
(bad)
push
retf
sub
retf
mov
fisub
idiv
cmps
clc
mov
or
aad
sbb
popf
int
call
out
lods
pop
fst
adc
retf
sbb
push
pop
scas
pop
push
jmp
popf
or
ins
xor
(bad)
lods
push
jmp
ficom
adc
add
pushf
in
outs
xchg
dec
rcr
mov
pop
lahf
pop
ins
int3
cmp
jl
xor
(bad)
mov
hlt
mov
or
xchg
sti
movs
jmp
lods
or
sahf
mov
sub
imul
dec
cmp
imul
pop
dec
in
scas
adc
pop
in
or
inc
aam
jl
sbb
ins
jmp
or
fistp
sub
stc
les
ins
hlt
and
mul
inc
jl
pushf
mov
or
aad
fist
and
in
sar
jmp
pop
ds
ret
mov
fdivr
pop
dec
test
push
test
dec
int
sub
fstp
pop
sbb
call
fxch
ds
ja
xchg
shl
dec
cmp
mov
repnz
cs
pop
or
lods
rcl
pop
fstp
push
call
pushf
jmp
stos
mov
jge
aam
test
out
in
or
cs
mov
bound
popa
sar
in
jnp
xor
and
dec
or
fisttp
out
and
(bad)
cmp
jmp
cld
jg
push
int3
or
jp
inc
fldcw
rcr
ins
(bad)
or
xchg
jbe
and
call
(bad)
jmp
and
xchg
hlt
sahf
sbb
ror
sbb
loope
pop
int3
push
xor
aad
and
in
dec
outs
dec
idiv
dec
aad
sub
in
call
das
in
test
cmp
sbb
ins
in
(bad)
int3
sub
push
loope
popf
jnp
cs
lea
ins
scas
ss
pop
popa
int
aam
xlat
fcmovbe
retf
adc
cmp
cdq
mov
jmp
inc
cli
sbb
fstp
inc
fcmovu
sub
ret
sbb
mov
add
ficom
sti
repz
xchg
mov
pop
mov
enter
push
cwde
icebp
ins
pop
imul
(bad)
loope
iret
arpl
rcl
dec
push
sub
aaa
in
jge
movs
inc
pushf
shl
mov
popa
in
sbb
add
js
xchg
fbstp
pop
cmp
(bad)
jno
or
xor
push
sub
jbe
jns
add
adc
adc
in
add
sub
push
cld
imul
cmp
sub
xchg
out
fild
retf
mov
outs
xchg
xlat
sbb
out
xor
hlt
fdiv
popf
cld
and
sub
lahf
jge
in
adc
or
push
or
ins
cmp
icebp
cli
retf
shl
cmps
or
push
rcl
mov
sub
xchg
push
add
or
lods
sbb
jnp
jl
int
sbb
pushf
pop
ja
(bad)
fild
jge
sbb
stos
cs
mov
sub
lods
test
into
call
inc
enter
sbb
neg
gs
into
add
push
add
repz
fldcw
(bad)
jl
out
sahf
sub
lods
mov
pop
jmp
ins
(bad)
sub
xor
sub
inc
jnp
test
sub
enter
inc
icebp
(bad)
jnp
fs
std
into
jp
(bad)
pop
stos
mov
or
sub
mov
outs
in
dec
out
stos
pop
xchg
xchg
ins
sbb
ins
xor
jecxz
(bad)
xor
mov
(bad)
fneni(8087
mov
movs
jge
sar
jno
mov
sbb
jnp
or
mov
lds
shr
mov
sub
sti
lods
call
hlt
sahf
mov
outs
ss
fcomp
aad
cmp
les
bound
xor
pop
ss
fadd
pop
aam
jmp
ins
retf
lods
xchg
mov
push
mov
in
cmp
push
pop
gs
xor
(bad)
adc
out
inc
jae
ins
popf
and
pop
sti
xchg
xor
xor
jge
pop
test
ins
add
or
aaa
fs
push
mov
push
dec
in
(bad)
sub
bound
sub
(bad)
xor
xchg
add
cmp
push
add
retf
pop
(bad)
cmp
loop
xchg
xor
mov
xor
mov
ss
jno
icebp
loop
(bad)
(bad)
sahf
popa
sbb
push
in
xchg
mov
mov
lea
int
test
sbb
xchg
movs
pushf
jmp
imul
pop
sub
or
or
push
in
mov
cmps
mov
pop
cmc
xlat
xor
xor
cwde
jl
shl
dec
mov
cdq
sbb
das
je
jle
loop
mov
push
stc
xor
pop
mov
loopne
test
push
data16
push
test
push
and
int
add
mov
cmp
cmp
int
jns
or
xor
sub
aas
fld
aas
add
xchg
push
adc
shl
sub
imul
pop
jecxz
sub
lods
outs
or
mov
adc
gs
cmp
jnp
stos
out
lahf
pusha
cmp
movs
xlat
and
xchg
jecxz
mov
pop
add
daa
xchg
repnz
das
repz
ror
dec
loopne
jl
ret
jl
out
aas
push
xor
xor
loope
mov
scas
nop
out
sahf
jbe
popa
mov
pop
movs
push
xor
cmp
push
pop
das
adc
jge
movs
rol
imul
movs
cld
gs
bsr
lods
cmp
ins
mov
loop
sbb
add
jae
xchg
xchg
jl
test
adc
mov
mov
call
pop
rol
push
or
sub
mov
jb
or
mov
pop
pop
cmp
push
or
fwait
aas
cmp
pop
xchg
loop
sbb
pushf
pop
mov
test
mov
out
and
cmps
sub
stos
pop
pop
cmovs
xchg
cmp
popa
movs
imul
inc
pop
fisub
daa
xchg
push
mov
cmp
sub
cld
mov
xor
nop
mov
xchg
ja
mov
cmps
mov
and
(bad)
cs
sbb
sahf
aad
mov
ja
(bad)
cmp
popa
dec
push
addr16
cmp
ja
ja
cmp
icebp
add
cmp
inc
xchg
test
inc
jbe
jl
add
cmp
mov
jbe
sub
jl
jne
out
mov
ja
and
popf
cmp
push
and
sbb
xor
xor
jg
aaa
imul
icebp
adc
(bad)
sbb
and
ins
cs
aaa
inc
sbb
les
sub
pop
nop
jae
sbb
(bad)
mov
test
in
xor
stos
sbb
pushf
or
adc
mov
adc
jge
inc
out
outs
sub
dec
adc
sub
aad
adc
and
cmp
jmp
add
pop
jp
in
icebp
mov
xchg
and
cmps
jmp
aas
mov
(bad)
(bad)
aas
shl
jbe
pushf
sbb
mov
mov
dec
xchg
ret
jns
or
and
(bad)
sahf
dec
ins
lods
daa
inc
lods
sub
cmps
daa
pop
jns
fidivr
clc
inc
sbb
cmps
dec
mov
loopne
(bad)
add
push
hlt
loope
js
and
sahf
sub
push
or
mov
mov
in
fwait
ss
stc
xchg
pop
std
imul
inc
movs
mov
pop
loop
fucomip
sbb
push
fiadd
pop
cmc
mov
push
dec
sub
lsl
jno
mov
and
(bad)
or
test
loop
mov
xchg
pushf
lods
cs
sti
xchg
sub
in
dec
in
sbb
add
loop
es
in
mov
sub
mov
mov
bound
ss
xor
jp
dec
cmp
ret
loopne
sbb
mov
in
outs
jg
loop
int3
mov
inc
bound
rol
dec
adc
cmp
jb
pop
or
inc
mov
repz
cmp
out
leave
out
in
mul
mov
std
add
es
push
inc
xor
mov
cmp
pushf
mov
fnstsw
dec
fidiv
imul
dec
sbb
lods
ins
popf
nop
jmp
cmp
pushf
ins
mov
das
cli
pop
mov
xchg
or
dec
imul
(bad)
sahf
fidiv
cmp
pushf
imul
inc
pushf
mov
(bad)
icebp
aam
popf
sbb
ins
retf
sub
cmp
pop
in
jmp
jecxz
or
test
pop
fcomp
cdq
pop
(bad)
jl
sub
sbb
sahf
sub
stos
fwait
push
dec
or
add
fs
pop
lahf
fstp
std
retf
pop
mov
ins
out
sub
cs
das
fsub
mov
out
neg
into
int3
dec
int3
outs
(bad)
adc
retf
pop
int3
mov
scas
pushf
xlat
sbb
or
(bad)
jp
dec
loopne
sbb
int3
pop
pop
dec
retf
fsubr
scas
mov
aas
fcomp
lahf
mov
lods
pop
mov
clc
or
pop
dec
stos
pop
sbb
pop
mov
sbb
mov
xlat
adc
sbb
retf
pop
jb
in
push
lods
fmul
dec
(bad)
scas
cli
cld
sahf
or
dec
pop
rep
jge
test
mov
ret
pop
imul
dec
out
dec
fsub
push
sti
sbb
addr16
push
push
dec
fcomp
fstp
cli
lods
xor
sbb
dec
retf
das
jge
jae
fdivr
cmp
dec
sbb
lods
outs
sub
fimul
test
aam
stos
dec
stos
sahf
fdivr
cmp
mov
or
fs
jmp
jnp
cmp
popf
dec
fucomp
pop
push
sbb
lods
jle
retf
jb
push
pop
fmul
adc
fisttp
pop
in
inc
in
mov
lods
ins
ins
retf
pop
sar
clc
ficomp
dec
xor
jle
jno
(bad)
(bad)
jmp
sub
leave
(bad)
cmc
aam
cmp
imul
ds
pushf
pushf
int
aas
mov
push
fld
cld
(bad)
push
adc
sub
inc
mov
dec
(bad)
jns
retf
std
in
mov
int3
lods
sub
inc
cmp
mov
repz
fmul
jge
ins
sbb
das
fstp
mov
dec
xchg
(bad)
rcl
ins
pushf
cmp
or
cs
jge
or
cmp
mov
fisubr
mov
fcmovb
cmp
pushf
mov
aam
fistp
out
sub
cmp
cmp
pop
ds
out
jbe
fsubr
jmp
aas
stos
pop
pop
mov
xchg
mov
stos
pushf
cs
sti
jmp
jbe
fwait
dec
imul
xchg
pop
mov
sub
leave
iret
sbb
push
dec
pop
sub
and
scas
cdq
dec
xlat
or
std
mov
and
jle
(bad)
(bad)
pop
mov
cmp
les
fmul
cli
int
jnp
aaa
jmp
dec
ins
mov
mov
ins
stos
aam
cmp
mov
ins
retf
dec
mov
xchg
sbb
stos
sbb
and
les
pop
dec
sbb
mov
ins
cmp
xlat
in
push
cs
jmp
adc
sbb
data16
sti
mov
push
int3
(bad)
fstp
retf
mov
aam
jmp
jmp
jl
sbb
fwait
retf
dec
mov
add
jae
lods
jl
push
or
daa
jl
popf
pop
loop
aas
cld
(bad)
ins
cs
loop
mov
fisttp
stos
adc
sub
popf
test
sbb
std
dec
retf
fnstsw
fs
xor
popf
ins
cs
out
jbe
mov
stos
outs
mov
ins
sbb
mov
das
je
cmp
cwde
loopne
and
sbb
ss
pop
xor
mov
in
call
mov
jg
int3
fxch
sbb
std
cmc
rcr
xchg
in
pusha
dec
cmp
lods
ficom
dec
stos
mov
push
cmp
add
fisubr
shl
push
push
ror
popf
scas
pushf
sub
(bad)
sbb
cmp
or
mov
cs
in
stc
mov
adc
xchg
adc
aad
es
xlat
dec
xor
fwait
leave
sbb
int
push
ficomp
pushf
sti
pushf
fstp
sub
sbb
fstp
cs
into
add
or
pop
call
mov
sbb
xchg
test
(bad)
pushf
stc
retf
mov
(bad)
adc
sbb
loop
retf
bound
inc
sub
aam
mov
sahf
push
test
test
jnp
stos
fucomp
rcr
mov
ins
sahf
sub
mov
xor
push
jle
lods
sbb
fimul
dec
inc
sbb
dec
mov
mov
push
out
xchg
call
enter
div
jnp
ror
mov
jne
or
ins
add
dec
dec
xor
fist
je
ja
mov
stos
fst
and
retf
dec
jge
mov
pusha
and
or
int3
add
xor
fnstsw
sar
mov
pop
mov
sbb
dec
sar
jle
psraw
mov
out
inc
dec
or
into
cmp
in
sbb
xchg
outs
jmp
lods
or
mov
xchg
xchg
ficom
ret
(bad)
sbb
shl
cmp
xor
call
sbb
or
and
dec
clc
ds
jle
sub
or
jb
mov
sbb
jge
dec
push
fmul
in
and
lods
mov
ins
sti
scas
pop
cmp
call
or
mov
gs
add
out
arpl
cli
jmp
aas
dec
adc
lea
mov
mov
dec
adc
nop
call
xlat
jl
retf
xchg
call
aad
xor
idiv
push
sbb
call
push
mov
and
xor
jge
shl
push
call
mov
std
xchg
iret
cs
(bad)
jb
jecxz
dec
pop
jecxz
pop
mov
cdq
mov
xor
fs
and
dec
fst
das
mov
xchg
and
jmp
mov
fisttp
iret
and
popf
js
jb
or
enter
ja
mov
lods
pop
out
and
aad
scas
js
push
mov
push
ds
push
add
mov
jno
xchg
hlt
mov
js
out
cmp
mov
pop
(bad)
scas
fidivr
ret
shr
sub
std
sub
pop
mov
sbb
adc
pop
gs
ins
mov
dec
mov
mov
and
shr
repnz
xchg
lds
in
xchg
fistp
mov
loopne
cmp
xchg
mov
enter
cmp
jp
sti
in
adc
jl
pop
fimul
adc
push
xchg
shr
inc
aas
inc
out
rcl
daa
sahf
pop
call
rcr
enter
cmp
mov
pop
in
add
jne
jne
add
adc
adc
cmp
push
cs
push
inc
ins
enter
test
inc
jnp
sub
ins
bound
sub
mov
in
loopne
xor
cmp
pop
imul
push
stc
dec
stos
pop
and
scas
mov
mov
dec
sub
(bad)
sbb
jne
(bad)
xchg
ins
fdivr
lods
int
fisubr
jp
movs
sbb
aad
lock
call
or
repnz
dec
call
push
fiadd
sti
push
adc
stc
outs
push
pop
push
sbb
pop
(bad)
leave
jmp
cwde
mov
inc
ds
cmp
cmp
xchg
jmp
inc
fcmovbe
rsqrtps
mov
lds
fisttp
cdq
ins
ins
ss
push
pop
inc
add
pop
scas
dec
pop
clc
clc
popf
fld
int3
sbb
scas
out
sub
int3
ficomp
ins
jmp
jge
fst
fdivrp
pop
popa
into
sbb
mov
sbb
or
(bad)
stc
pop
jl
int
stos
lods
xor
in
sub
jnp
cld
pop
sti
imul
int
sbb
pop
adc
fmul
sbb
ds
call
(bad)
fisubr
repz
mov
pushf
int
jnp
add
aaa
sub
retf
push
sti
out
lods
cs
mov
shr
pushf
xor
sbb
push
sub
cmp
ds
retf
ins
shl
mov
mov
and
sub
inc
jnp
int3
xor
jmp
mov
rcr
dec
imul
pusha
nop
mov
inc
movs
dec
dec
out
add
sub
dec
in
push
frstor
cmp
ret
adc
lea
or
mov
or
dec
sahf
pop
ins
neg
cli
(bad)
fmul
sub
mov
(bad)
loop
fcmovnu
psubsw
loopne
in
test
cdq
mov
cld
int
clc
sub
push
ins
mov
push
cs
(bad)
retf
xchg
mov
and
aad
cs
loop
lea
mov
out
data16
mov
loopne
(bad)
int
sub
sub
push
int
ins
ds
sbb
cmp
pop
cmp
bnd
cmp
jp
ins
jmp
cld
jecxz
xchg
fmul
sbb
rcr
popf
(bad)
in
out
lds
mov
retf
mov
xlat
ret
sti
push
iret
jnp
cs
jnp
je
sub
dec
cmc
mov
ss
arpl
frstor
test
adc
pop
push
pop
rol
ins
shr
inc
mov
fistp
imul
retf
jmp
dec
dec
pop
fwait
(bad)
mov
push
in
lods
scas
pushf
sub
fld
scas
call
pop
jno
nop
lods
push
js
feni(8087
or
std
lods
sbb
sub
(bad)
(bad)
jno
(bad)
in
and
(bad)
cmp
ins
xor
jb
or
dec
retf
cmp
pop
lods
out
fwait
sub
and
fisubr
jnp
lods
and
movs
sbb
cld
mov
xor
aas
stos
fisttp
or
xchg
dec
mov
popf
(bad)
in
enter
sbb
xlat
cmp
ja
pop
inc
fidivr
loopne
imul
or
int3
int
std
ins
jnp
xchg
enter
push
cld
neg
inc
fdiv
sbb
data16
ret
retf
das
mov
push
xchg
pop
xchg
jmp
int
in
fisubr
xlat
(bad)
push
pusha
jns
ins
sbb
push
dec
test
shl
jne
pop
stos
cld
fdiv
fnstsw
int3
imul
(bad)
or
pop
jmp
test
dec
call
cwde
mov
mov
mov
mov
test
mov
into
sti
xor
jle
xor
pop
mov
pop
int
fistp
scas
mov
fsub
mov
pop
aad
clc
pop
stos
jne
add
shr
les
dec
popf
cs
mov
frstor
sahf
int
push
mov
jae
ins
(bad)
cmp
xchg
std
sbb
fidivr
dec
(bad)
outs
push
aam
jmp
repz
lea
mov
das
add
sbb
mov
loopne
leave
xchg
sub
(bad)
jmp
jg
pop
cmp
jmp
xchg
push
push
cld
mov
hlt
in
jl
mov
mov
mov
js
fsubrp
ins
jo
ins
in
movs
lea
int
popf
scas
sahf
nop
or
aad
leave
scas
jns
pushf
adc
call
inc
dec
mov
mov
popf
or
lock
retf
stos
cmps
xchg
sbb
sbb
jl
sub
jge
push
mov
ds
mov
hlt
jnp
out
ret
pop
(bad)
sbb
mov
and
loopne
sub
sbb
into
jo
jp
xor
jge
inc
or
sbb
push
dec
std
dec
mov
sti
pop
adc
(bad)
or
sbb
mov
repnz
cmp
es
(bad)
shl
sub
jp
sbb
mov
stos
xchg
cmp
(bad)
outs
dec
fild
lods
repnz
loopne
mov
inc
cmp
ret
enter
leave
mov
(bad)
out
xchg
(bad)
and
xchg
push
sub
xor
and
out
jnp
sti
cmp
mov
sbb
jmp
cmp
adc
jae
fimul
sbb
mov
scas
lahf
test
xchg
arpl
(bad)
ja
into
js
das
jl
pop
push
lods
mov
in
fst
push
xlat
aas
(bad)
sbb
add
xor
sub
mov
popf
inc
add
sbb
sbb
popf
pop
cld
cmp
call
aam
xlat
sar
inc
ins
pop
jo
lock
mov
or
hlt
xchg
ss
sub
int
loope
popf
push
cdq
sub
adc
cld
call
fs
dec
fwait
sbb
ja
mov
cmp
xchg
and
sbb
ins
loop
jmp
cmp
cmp
outs
or
pop
cs
(bad)
stos
out
sbb
bound
ret
cmp
addr16
pop
adc
cmp
aaa
adc
mov
add
dec
ret
idiv
loope
add
adc
sbb
dec
sti
jl
mov
mov
cmp
test
add
in
xchg
xchg
mov
sub
sub
je
or
inc
jns
push
jnp
aaa
dec
mov
daa
outs
adc
into
pushf
mov
arpl
ins
lock
mov
cmp
aaa
sbb
dec
fnstsw
cwde
push
sbb
cmp
or
cs
and
pushf
sub
add
jne
sub
sbb
in
ss
cmc
imul
push
or
adc
dec
popf
pop
jo
add
call
es
mov
gs
and
fwait
not
fwait
xor
mov
adc
in
aad
and
in
or
cdq
ins
and
lock
out
mov
add
cmp
daa
and
inc
xchg
loope
jl
fwait
clc
xor
pop
push
lea
enter
pop
aaa
cmps
test
sar
retf
repnz
and
icebp
dec
inc
call
xchg
daa
cmp
lds
arpl
in
es
xchg
push
mov
jecxz
test
mov
xor
pop
scas
hlt
in
push
aaa
cmp
jne
push
jmp
dec
inc
sub
sahf
dec
sbb
dec
add
mov
mov
mov
inc
mov
add
popf
cld
imul
push
test
(bad)
sub
jle
push
rol
and
das
lods
pop
adc
jp
dec
retf
add
ss
ret
sbb
lods
pop
fnstcw
sub
pop
sub
inc
xor
stos
cmps
push
inc
mov
jnp
xchg
adc
add
lods
or
jmp
(bad)
cli
add
sti
out
ficomp
push
pop
int3
dec
jnp
leave
outs
in
jmp
jge
push
ins
ins
sub
cmp
lahf
sar
ins
into
sub
lods
fidivr
stos
xchg
repz
mov
fisttp
outs
int3
imul
pop
fwait
ins
hlt
dec
push
pop
fmul
jmp
aad
sbb
sar
das
clc
ffree
or
ja
fdiv
push
or
(bad)
stos
pop
(bad)
mov
fimul
jle
sbb
fisttp
sbb
in
jmp
stc
cmp
std
push
dec
hlt
(bad)
lods
pop
cs
pop
jp
fistp
jge
mov
mov
sub
shl
pushf
stos
scas
dec
fnstsw
cli
jmp
and
int
mov
mov
dec
sahf
cdq
pop
mov
std
in
or
out
fsub
mov
push
dec
mov
cmp
int3
pop
push
scas
push
mov
pop
out
pushf
popf
and
in
lods
jnp
jmp
aam
popf
dec
push
or
retf
ins
sbb
int3
dec
outs
jl
lods
fldcw
into
cmp
int
dec
int3
mov
fist
dec
std
repnz
or
retf
ins
call
mov
lods
jle
retf
dec
or
cmp
adc
pusha
push
imul
cli
lea
int
lods
jmp
popf
sbb
push
cmp
jmp
mov
mov
popf
fwait
int
fimul
fsubr
sub
push
push
sub
popf
pop
cld
mov
jl
adc
int3
dec
sbb
jns
(bad)
scas
idiv
pop
into
or
xor
cdq
sbb
xor
cs
push
jmp
jle
fucomp
jp
outs
cli
sar
inc
push
push
sti
sti
fistp
cmp
cmps
sti
dec
outs
into
das
leave
mov
sub
fwait
pop
jnp
fdivr
mov
cmp
ins
sbb
mov
sbb
ins
fisttp
lea
retf
sar
out
jmp
mov
or
or
stc
das
out
ins
in
retf
sub
fsubr
imul
jle
ins
std
dec
sub
fwait
jl
fimul
sahf
inc
jmp
pop
mov
das
add
clc
rcl
sub
pop
(bad)
pushf
pop
sub
int3
imul
pop
sub
mov
or
jl
sub
(bad)
mov
out
pop
(bad)
cmps
dec
jge
in
fld
cmp
lahf
mov
sbb
icebp
es
(bad)
(bad)
shr
cli
inc
sar
mov
cmp
jge
mov
cmp
push
pop
push
lods
mov
cs
xchg
fs
xor
sbb
call
sbb
sub
std
fcmovu
ins
pushf
sbb
lea
jmp
sahf
fisttp
pop
pop
adc
ins
pop
or
sbb
cmp
sti
mov
or
mov
aas
fcmovnu
sbb
jge
cli
push
int3
(bad)
sbb
cmp
out
xor
inc
hlt
fnstcw
dec
adc
pop
jmp
or
fstp
cmp
outs
sub
cmp
jle
sbb
loop
(bad)
mov
fnsave
movs
icebp
jmp
loop
ins
sub
cli
fdivrp
xchg
fst
test
pop
cmp
test
imul
in
leave
ret
out
loope
dec
mov
pop
mov
int3
(bad)
fst
cmp
push
je
ins
jge
sub
loopne
aaa
xchg
jle
cs
scas
clc
mov
jmp
popf
retf
pop
(bad)
pop
pop
cmp
stos
lea
ins
retf
jl
loope
popa
push
inc
cmp
fild
jecxz
sub
ror
lea
int
retf
cmp
mov
popf
cmp
mov
fs
add
dec
scas
rcr
dec
das
jmp
fisttp
pop
sub
lock
pusha
addr16
(bad)
retf
pushf
cs
bound
cdq
leave
xor
dec
add
sbb
pop
sbb
ret
hlt
ror
sub
in
test
sar
imul
mov
shl
(bad)
dec
rcr
popf
jnp
dec
sub
pop
add
shr
mov
push
xchg
lods
and
pop
int
imul
add
mov
pop
or
jnp
sbb
and
sub
mov
aam
or
mov
sbb
pushf
mov
je
jl
shl
pushf
ins
mov
je
sub
fcomp
je
push
fidivr
mov
xchg
push
or
mov
in
cmps
push
mov
cs
pop
aad
mov
pop
out
xchg
fwait
in
jmp
mov
jnp
pushf
jg
rol
pop
ss
(bad)
fisubr
jo
sti
popf
mov
fwait
leave
mov
cld
jmp
sahf
test
pushf
popf
fstp
retf
ins
mov
ss
ss
scas
out
mov
push
mov
mov
mov
rcr
jle
fs
lahf
sub
into
cwde
fwait
add
mov
js
je
sub
ins
int
bound
in
mov
dec
js
sbb
sti
dec
pop
push
pop
dec
cli
sbb
loope
xor
dec
rcr
sbb
pop
test
ins
imul
jl
cmove
mov
push
in
push
cwde
push
pop
xchg
push
pushf
movs
fwait
(bad)
mov
inc
jge
fstp
jp
adc
adc
call
lods
shr
sbb
stos
cs
add
jnp
(bad)
jmp
mov
outs
stos
mov
popf
dec
in
and
in
ja
ins
in
adc
dec
ins
push
cmp
jl
shl
fld
sub
dec
cmps
pop
out
mov
xchg
out
xor
jl
loope
add
call
clc
xchg
in
pop
lods
imul
pop
imul
push
mov
mov
sbb
push
mov
sbb
enter
cmp
ss
jnp
sbb
repnz
jmp
int3
cmp
sahf
mov
sbb
int
push
das
jp
pop
inc
inc
sbb
aas
scas
lock
lock
jae
loopne
xor
inc
pop
fcomi
ins
push
repz
cmp
(bad)
test
pop
mov
mov
addr16
sbb
(bad)
and
jle
inc
sti
mov
sbb
std
into
jb
push
xchg
sub
dec
fs
popf
fucomi
jo
or
cmp
mov
sbb
jno
stc
jge
and
inc
pop
into
mov
fistp
and
int
pop
pop
xor
cmp
out
dec
xor
inc
(bad)
call
rol
pop
jno
xor
pop
pop
mov
xchg
and
fwait
movs
sub
inc
add
push
not
or
inc
xor
mov
aaa
in
aas
mov
in
or
ja
push
movs
pusha
push
mov
aas
outs
not
jo
loopne
push
cwde
sub
cdq
jl
int
hlt
add
dec
idiv
bound
(bad)
ins
inc
add
cmp
int
es
cmc
fwait
sbb
jnp
lahf
ds
icebp
add
jbe
pop
push
ja
xchg
lods
xchg
lea
hlt
fstp
xor
addr16
cmp
xlat
xchg
(bad)
jg
not
mov
xchg
jnp
popf
std
mov
dec
sbb
imul
push
push
cmp
xlat
jg
xor
dec
cmps
jb
dec
push
les
push
or
push
xor
hlt
fcomip
imul
jb
add
jle
adc
rcr
push
fbld
je
pop
popf
adc
ins
dec
xor
push
sbb
xor
xor
mov
mov
in
xchg
scas
loope
sbb
aam
in
gs
sub
rcl
xchg
and
stos
fistp
stc
adc
mov
pop
cvtdq2ps
and
mov
mov
jl
ins
dec
sub
jno
test
lock
sahf
jp
jp
movs
iret
xchg
(bad)
and
hlt
loop
jb
mov
add
imul
push
into
stc
cmp
sbb
add
mov
add
nop
sub
dec
lods
jecxz
in
xchg
or
sub
push
aad
dec
mov
ficomp
int
push
dec
fsubr
mov
(bad)
adc
dec
cmp
push
imul
mov
fdivr
mov
dec
int3
fwait
pop
and
sbb
call
mov
pop
(bad)
imul
stos
mov
out
or
sbb
sub
ds
sbb
mov
mov
fs
hlt
bswap
dec
and
push
(bad)
imul
sbb
jmp
sub
cmp
std
imul
add
std
(bad)
in
retf
dec
(bad)
pop
cmp
rcr
xor
mov
mov
ja
add
loopne
aaa
fistp
mov
imul
push
xlat
pop
popf
and
pop
jp
int3
sbb
(bad)
stc
and
or
pushf
outs
ins
fdiv
mov
call
sub
lea
int
inc
js
jge
sbb
daa
int
pushf
mov
aad
xchg
out
add
add
adc
sahf
pop
jle
div
jmp
ret
sub
popa
sti
pop
xor
adc
(bad)
add
fwait
sub
mov
fisttp
push
sbb
mov
or
cs
repz
in
loope
loop
sbb
lods
call
push
jl
idiv
adc
cld
fcomp
nop
cmp
cs
inc
xchg
pop
(bad)
mov
cwde
leave
sub
or
and
call
ja
mov
test
or
jl
mov
test
or
adc
fidivr
in
mov
dec
fucomp
or
pop
push
cli
dec
call
lea
cmp
lods
sahf
fiadd
inc
xlat
pop
in
ins
jmp
fadd
lods
std
mov
not
sahf
cld
or
sti
pop
sub
shl
jl
(bad)
jle
xchg
cld
imul
add
pop
sbb
mov
fimul
jns
and
pop
inc
mov
adc
sub
fist
sti
dec
lea
(bad)
jo
mov
mov
ins
stos
jge
out
mov
sub
fwait
lods
or
pop
mov
rcr
ss
lock
sbb
lods
lods
jnp
xchg
cmp
enter
stos
(bad)
jle
daa
scas
call
jge
and
lea
shr
lods
sbb
dec
or
fwait
pop
mov
dec
jmp
call
jns
dec
sahf
iret
pop
or
xchg
ins
movs
mov
sbb
xchg
fist
(bad)
popf
xor
xchg
test
xchg
lods
enter
cs
push
cmp
sbb
leave
mov
mov
pop
mov
and
jne
pop
xor
cmp
sti
loop
cmp
pop
nop
retf
fisubr
imul
int3
dec
inc
or
mov
(bad)
call
inc
sbb
xor
jg
fild
test
out
hlt
xor
int
xor
mov
pop
add
(bad)
xor
not
ins
(bad)
jle
mov
(bad)
cmp
ins
xchg
adc
daa
loopne
daa
dec
pushf
cdq
cmp
xchg
xor
popa
sbb
mov
or
cmp
lods
imul
inc
outs
nop
or
(bad)
jmp
jge
cwde
cld
mov
pushf
call
jns
push
push
dec
adc
cdq
es
mov
inc
mov
out
jg
push
das
hlt
aas
cmp
mov
les
in
hlt
inc
sub
loop
adc
rol
pop
imul
cwde
cmps
pop
mov
push
dec
inc
std
in
mov
hlt
sub
jbe
int
cmp
pushf
into
mov
jl
add
cmp
fldenv
dec
int
mov
in
cmp
sub
hlt
dec
pop
inc
popf
sub
xor
mov
cmp
add
ss
mov
ins
xor
jge
sub
outs
ret
pop
hlt
jmp
push
push
adc
stos
xor
icebp
jb
sbb
imul
lea
aaa
nop
mov
inc
aas
xlat
aas
adc
outs
dec
add
out
sub
lods
mov
jb
cs
hlt
mov
ds
push
ins
cmp
repnz
call
mov
jno
push
rol
lock
jbe
addr16
pop
stc
cmp
push
sbb
xchg
outs
adc
xchg
js
ds
cld
jo
addr16
test
fmul
sub
cdq
pop
pop
jae
pop
and
push
xchg
pop
pushf
sbb
sub
mov
mov
mov
xor
fsubr
test
mov
xchg
or
ins
mov
inc
iret
or
mov
pop
in
rcl
inc
jp
pop
out
jne
and
call
xor
add
jl
cmp
ins
dec
in
add
adc
and
push
inc
fdivp
or
rol
stc
cld
jbe
lea
outs
cwde
jnp
in
push
add
addr16
inc
cmp
xchg
dec
retf
or
dec
out
sbb
fistp
dec
lods
movs
lds
mov
mov
(bad)
je
inc
(bad)
dec
mov
lds
loope
in
sub
pop
mov
cld
repnz
mov
sbb
sti
push
jae
and
data16
aam
vmovups
pop
lock
inc
out
inc
push
jge
std
cmc
mov
push
(bad)
jp
mov
pop
mov
xchg
shr
xchg
(bad)
es
in
add
sub
xchg
js
mov
shr
jnp
mov
ret
out
or
jb
mov
lods
mov
les
sub
aaa
pop
push
cmp
call
jb
es
rcl
pushf
pusha
outs
sub
imul
jmp
and
mov
cmps
cmps
xor
mov
inc
xor
jae
(bad)
sub
dec
jp
test
xchg
mov
pushf
push
pushf
mov
outs
inc
das
xchg
cmps
pop
(bad)
mov
xchg
out
movs
ret
cmp
and
sub
in
arpl
jmp
sub
stos
lock
mov
xor
in
ins
dec
sub
adc
test
or
sbb
fwait
int
xchg
hlt
sub
imul
dec
out
fwait
cwde
inc
xor
mov
scas
inc
outs
sbb
sbb
in
ss
xchg
xchg
push
outs
sub
dec
cmc
mov
lods
sti
and
je
xchg
call
mov
pop
fild
mov
ss
cmp
jmp
addr16
push
pop
int
cdq
cmp
sar
cmp
jg
mov
out
out
dec
cmp
dec
cmc
cs
adc
push
bound
test
aad
fistp
pop
sbb
lods
sti
ins
aam
scas
jmp
mov
adc
mov
ins
les
int
xor
pop
(bad)
pusha
ds
in
cs
jmp
cmp
mov
scas
imul
ds
outs
sti
stc
int
ss
ret
stc
sahf
lods
ror
sti
out
mov
inc
punpckhdq
aad
ins
fstp
lods
pushf
mov
adc
cmp
inc
xchg
fld
ins
xchg
ds
xchg
aaa
sbb
ins
mov
add
jecxz
pusha
sbb
dec
clc
cwde
sti
sub
sti
aas
mov
cmc
(bad)
jo
int
jl
push
or
in
jecxz
sub
sar
dec
pop
(bad)
xchg
(bad)
cld
aas
mov
cmp
lods
or
and
sbb
lock
sub
ss
add
cmp
in
pop
fucomp
inc
in
or
sub
rol
popf
sbb
or
adc
push
clc
jge
aad
pop
into
pop
mov
(bad)
sbb
(bad)
cs
push
jge
jo
add
push
cmp
test
or
jnp
pop
or
fnstsw
jge
mov
shl
lods
cs
pop
movs
int
add
fldcw
int3
push
jmp
jmp
add
ins
ja
pop
mov
in
add
cmp
or
sbb
shl
adc
xor
ds
scas
lock
arpl
sbb
mov
mov
int3
sub
mov
popf
dec
pushf
dec
dec
fdiv
leave
std
int3
iret
ins
mov
in
xor
dec
dec
(bad)
cmp
mov
gs
dec
fcmovu
out
cli
sbb
or
mov
cs
dec
push
sbb
jg
mov
imul
jmp
mov
sbb
fiadd
or
leave
into
dec
jle
jb
sbb
(bad)
sbb
mov
dec
in
xor
sub
sahf
xor
in
dec
lods
sbb
push
push
fisttp
loope
xchg
adc
pop
retf
fldlg2
lea
fidivr
lahf
dec
add
xor
(bad)
pusha
or
sbb
addr16
jmp
ins
mov
cmp
lds
dec
adc
lods
(bad)
pop
jne
aad
in
jno
arpl
jmp
popf
sbb
not
pop
push
pop
lea
jge
repz
mov
in
xor
xchg
jl
inc
out
push
adc
mov
mov
aaa
mov
iret
ret
cdq
repnz
leave
inc
add
adc
cmp
push
popf
std
mov
jle
je
push
pop
ins
clc
ror
std
sub
lahf
cmp
movs
pop
inc
cmp
shr
jnp
jge
fdivr
inc
push
jmp
sbb
mov
and
xor
stos
(bad)
aaa
mov
mov
adc
jl
out
xchg
mov
jge
xchg
cld
add
clc
lea
mov
sub
mov
or
push
jno
iret
inc
dec
sub
sbb
cdq
adc
push
ins
arpl
cmp
pushf
cmps
retf
sub
scas
lds
lods
stos
stc
jmp
adc
(bad)
jmp
add
mov
daa
push
jno
dec
mov
push
(bad)
out
jp
idiv
fcom
(bad)
fcomip
mov
push
mov
and
(bad)
push
cdq
or
test
cwde
pushf
icebp
mov
mov
mov
jge
or
sti
ds
ja
mov
pop
repnz
out
push
pop
cli
pop
(bad)
cwde
dec
jae
jne
arpl
jno
rol
pushf
rcl
fwait
inc
pop
sbb
test
js
(bad)
mov
mov
dec
loope
sbb
aas
idiv
daa
jg
mov
repnz
in
mov
adc
mov
ficom
push
call
test
mov
out
push
push
sahf
cdq
dec
and
ret
jp
cmp
inc
or
adc
pop
out
cmp
in
xchg
xchg
xor
stos
inc
or
in
pop
and
rcr
jmp
push
aaa
in
adc
mov
ins
ret
js
sub
push
jns
dec
int3
neg
outs
dec
mov
add
inc
cmp
enter
loopne
retf
jp
icebp
xchg
mov
addr16
xor
push
mov
and
into
pop
mov
imul
ret
inc
pop
mov
aam
pop
pusha
pop
cmc
cmp
pop
daa
sub
es
fs
data16
fwait
addr16
pop
add
(bad)
mov
push
mov
fsub
pop
addr16
iret
movs
loop
mov
xchg
call
push
(bad)
out
mov
(bad)
jl
inc
mov
inc
test
pusha
pop
loopne
sbb
and
lods
push
out
push
loopne
out
sbb
pop
lods
mov
outs
xor
test
jecxz
in
std
sub
out
push
mov
jge
movs
pop
fisttp
retf
sub
std
popf
fs
jle
lods
fisttp
cs
ficom
loop
(bad)
mov
out
push
dec
call
cdq
stc
lock
cs
sbb
int
clc
(bad)
or
pop
scas
sbb
fdivr
jge
(bad)
push
imul
in
xchg
or
fmul
int3
jmp
dec
cmp
into
fdivr
rol
or
dec
ins
mov
jmp
cs
and
mov
std
jmp
jnp
jmp
push
idiv
dec
js
pop
jae
pop
jne
in
call
cmps
fsub
push
outs
in
daa
repnz
jge
jae
cmp
dec
lea
in
rol
cmp
stos
dec
std
jmp
ins
mov
mov
ins
mov
dec
mov
pop
pop
mov
xor
popa
or
mov
into
xor
dec
and
mov
test
lahf
pop
(bad)
cmc
mov
ror
lods
pop
cld
je
ret
cmp
sbb
cmc
mov
out
std
ja
loope
xor
stc
stc
mov
ins
sub
xor
sub
mov
cmp
cmp
sbb
dec
outs
in
adc
inc
mov
int3
movs
in
(bad)
cmp
sub
fistp
outs
pop
and
dec
pusha
xchg
int
xchg
inc
loope
xchg
xchg
sub
inc
std
mov
out
mov
mov
je
aas
ja
mov
(bad)
aad
add
loop
fisttp
stos
ins
dec
xor
stos
fisttp
sbb
adc
ins
jmp
dec
ret
movs
cmp
xor
xchg
mov
pop
pop
and
inc
bsf
mov
fwait
pop
inc
pop
mov
xchg
lock
cdq
dec
mov
cmc
jnp
cmp
loope
dec
push
ins
sub
mov
xchg
out
mov
int3
int
mov
lea
or
clc
jmp
lods
pop
xchg
popa
cmc
sbb
cs
movs
lea
mov
xor
sbb
add
lea
into
outs
scas
mov
sbb
imul
mov
sbb
xchg
out
push
cli
push
mov
sti
fld
and
lahf
pop
or
jl
fmul
fld
sbb
pop
popf
es
cmp
pop
nop
repz
dec
in
cmp
sahf
arpl
and
add
mov
and
cmove
add
pusha
jge
pop
imul
stos
cmp
add
dec
loop
fcmovbe
add
loopne
iret
jno
push
cld
sbb
aas
dec
xor
jmp
sbb
pop
popf
cmp
push
add
sub
or
mov
test
or
(bad)
(bad)
ins
out
push
push
cmp
das
adc
add
icebp
push
sub
adc
xor
and
inc
inc
pop
jnp
pushf
xor
inc
mov
(bad)
in
loopne
xchg
test
cmp
fld
test
test
out
stos
add
iret
dec
and
es
add
fnsave
push
push
ret
sub
std
mov
and
inc
mov
out
cmp
add
mov
sub
jp
inc
sub
jge
out
fs
test
aam
out
into
call
lahf
outs
xor
cmc
dec
add
add
cmp
loope
inc
jl
fild
mov
sub
mov
and
cld
sahf
fbstp
pop
std
sub
push
add
add
mov
mov
inc
xor
je
ds
sub
in
mov
add
out
mov
mov
xchg
nop
add
and
mov
mov
sbb
popf
lds
sub
dec
dec
pop
scas
sub
popf
mov
jne
add
xchg
jnp
mov
jge
out
fnstsw
push
cwde
dec
jo
and
std
jne
mov
mov
sti
sbb
dec
sub
popf
ins
jo
loopne
push
lock
out
nop
aas
jnp
sub
xchg
mov
popf
out
mov
imul
(bad)
mov
out
push
pop
cmp
test
imul
push
xor
outs
pusha
and
movs
lock
pop
(bad)
aaa
dec
test
repnz
ss
inc
dec
outs
aad
adc
cmp
xor
and
or
mov
dec
mov
pusha
adc
mov
scas
and
dec
cmp
mov
out
mov
mov
adc
in
push
pop
or
jl
sub
add
repnz
jg
jg
xor
push
mov
jp
or
daa
(bad)
lea
mov
mov
arpl
sub
sub
mov
aas
lds
pop
jmp
xchg
xor
dec
shr
pop
inc
xchg
jmp
loope
stos
xor
imul
xor
jmp
mov
ins
or
aas
scas
lods
std
cmp
mov
sti
sub
pop
les
ins
loop
stc
jg
sub
out
mov
jecxz
or
jge
clc
xor
mov
and
xchg
cmp
addr16
vpminub
mov
mov
xor
and
dec
fild
rcl
push
xchg
cmp
jae
sbb
dec
dec
jo
lea
mov
ja
and
xchg
jge
inc
dec
mov
and
js
xor
sub
xor
sbb
dec
cmc
xchg
repnz
lea
mov
add
mov
cld
ins
jbe
scas
sti
cmp
jge
fisub
mov
aas
mov
cld
xor
mov
aaa
mov
bound
adc
nop
std
adc
icebp
cmp
mov
scas
ret
pop
mov
sbb
test
xor
mov
mov
jae
dec
push
lahf
sar
daa
xchg
jbe
mov
pushf
mov
js
lods
fadd
lods
xchg
and
sahf
jge
test
gs
mov
inc
mov
cmp
jecxz
cld
jb
es
lahf
jnp
xor
bound
xor
dec
sub
and
cmc
jge
in
in
push
xchg
mov
outs
je
cdq
xchg
dec
adc
sbb
loopne
loope
and
add
mov
xor
pop
pop
add
fdiv
mov
dec
(bad)
int
pop
imul
cmp
push
retf
pusha
or
fsubr
push
imul
out
pop
jge
outs
sub
ins
es
rcr
push
sub
mov
int3
mov
push
dec
stos
pop
aad
cdq
ins
cwde
fmul
sti
mov
or
dec
sub
retf
sbb
sti
das
pushf
add
inc
and
ins
fadd
addr16
sub
jmp
ins
dec
push
out
in
and
add
adc
mov
and
aam
push
test
leave
test
imul
pop
js
shr
mov
jle
int3
call
shl
sbb
cmp
fdivr
xlat
mov
std
sbb
outs
or
aas
sub
add
and
in
retf
push
call
jo
mov
mov
into
mov
aas
or
lea
ja
adc
mov
sahf
mov
loope
popa
xlat
jns
int3
sti
jmp
jecxz
fidivr
sbb
int3
in
retf
cld
out
or
mov
imul
cld
sti
cli
sahf
fdivr
imul
dec
push
mov
das
sbb
mov
stos
popf
scas
jge
aam
jb
retf
sti
ja
sub
in
test
or
xchg
xlat
scas
jg
pop
(bad)
fwait
dec
std
dec
xchg
pop
jge
xor
cdq
sahf
fisubr
push
aas
lods
imul
rcl
outs
or
pusha
mov
leave
adc
mov
sub
or
jb
mov
std
int3
inc
ror
scas
jl
mov
mov
lock
push
mov
(bad)
fmul
mov
test
fcomp
das
fwait
pop
shr
sbb
into
dec
pop
inc
addr16
stc
std
push
fdivr
jg
jmp
dec
ret
popf
or
stc
sub
cli
(bad)
repz
repnz
mov
mov
inc
xchg
sahf
cmp
rcr
lods
sbb
lods
fsubr
shl
fcmovnu
cmp
jnp
in
jg
cli
or
and
ins
pop
stos
stc
dec
mov
jle
pop
test
ds
sar
fldcw
jmp
ins
mov
aad
lods
ds
pop
pushf
psubb
mov
pop
lock
int3
lea
dec
cmp
sti
ins
pop
(bad)
call
sahf
(bad)
or
fcmovne
retf
out
fdivr
mov
(bad)
jl
mov
mov
fldcw
pop
sbb
ins
stos
mov
jg
adc
fcomp
cs
dec
mov
pop
(bad)
out
fsubr
std
loope
pop
movaps
sar
mov
sbb
pop
sbb
push
jge
paddb
popf
mov
jecxz
pop
or
leave
or
cmp
jnp
mov
aas
ins
jmp
(bad)
cli
mov
inc
mov
sti
inc
retf
fsubr
fmul
mov
cmp
pusha
fwait
mov
cmp
xchg
xchg
mov
dec
(bad)
fldenv
add
jnp
fidivr
mov
or
mov
mov
stos
(bad)
sub
inc
adc
sti
mov
mov
in
cmp
fdiv
outs
cmp
and
leave
mov
call
ds
scas
stc
int
cmp
or
jnp
dec
sti
pop
dec
dec
sub
inc
int3
rcr
pop
cs
lock
imul
inc
test
push
out
leave
dec
fcmovnbe
ss
ins
and
iret
std
data16
jnp
sti
imul
and
mov
sub
pop
in
(bad)
fnstsw
pop
sbb
fild
push
scas
int
jnp
jmp
fimul
int3
shl
dec
jecxz
jns
pop
sub
shr
inc
lods
test
scas
(bad)
call
or
loopne
(bad)
popa
aam
or
ins
fcom
imul
(bad)
jmp
fdivr
outs
ins
dec
pop
shr
cmp
frstor
jle
ds
sub
cs
fsubr
sbb
sti
push
mov
sub
ror
push
mov
pop
fld
sub
sub
aas
adc
mov
outs
fimul
sub
out
or
scas
leave
jns
lods
dec
fcomp
sub
pop
sahf
sub
dec
outs
pop
in
(bad)
inc
imul
fimul
pop
clc
mov
fadd
outs
test
iret
aad
push
int3
pop
cdq
ins
in
adc
mov
push
mov
or
pop
call
fcomp
fcomp
popf
mov
out
pop
cmp
lods
xor
fcomp
jge
sti
retf
adc
loope
dec
scas
popf
clc
fstp
aam
sahf
mov
imul
out
or
cmp
pop
mov
mov
pop
retf
push
call
aam
inc
loop
cmp
loop
push
fmul
(bad)
cmp
fidiv
pop
rcl
(bad)
or
jnp
or
retf
fstp
sti
cli
jo
out
mov
(bad)
sets
or
jbe
jg
sbb
imul
mov
cmp
ins
and
pop
ficom
ins
stos
in
or
iret
mov
repnz
jno
push
lahf
call
jnp
mov
scas
jno
mov
jns
fsub
jle
mov
popf
or
fdiv
sub
push
pop
mov
adc
cmp
in
sti
mov
mov
mov
push
cld
test
adc
test
sub
retf
push
jnp
jmp
das
inc
call
fwait
dec
dec
lods
mov
sub
into
jge
(bad)
retf
popf
pop
into
sub
xlat
nop
out
xor
mov
sbb
pop
push
jmp
fmul
mov
std
push
ficom
dec
mov
pop
imul
lods
mov
add
jmp
dec
cmp
jmp
cs
popf
cmp
pop
ds
fsubr
and
das
pop
mov
jp
mov
mov
daa
jp
and
scas
jmp
mov
pop
add
or
fs
movs
jnp
inc
push
mov
or
lods
es
imul
retf
fisub
in
push
pop
fsubr
pop
push
mov
imul
aas
push
cmp
push
popa
mov
stos
fimul
sbb
sub
popf
outs
sub
lea
sti
sub
jmp
sbb
sbb
das
sub
push
(bad)
add
into
mov
imul
mov
cli
scas
fwait
mov
in
lods
int3
sbb
jmp
mov
pop
mov
sub
(bad)
adc
lock
bnd
adc
stos
cmp
ror
lahf
sti
sahf
das
mov
fcmovu
fisub
fimul
stos
mov
inc
clc
and
fmul
(bad)
cli
sub
pushf
sahf
movs
pop
sub
aam
ins
cmp
jge
push
loopne
lahf
sub
cdq
add
or
push
mov
pop
ins
mov
lods
stos
pop
cmp
mov
gs
fisttp
aas
sbb
mov
and
das
pop
mov
scas
call
lods
idiv
push
loopne
or
leave
mov
or
in
mov
mov
(bad)
sub
pop
pop
sub
leave
aas
fild
out
mov
cmp
ret
bound
(bad)
loop
jo
mov
cld
adc
lods
lods
cli
pusha
mov
sbb
(bad)
mov
push
pop
sbb
inc
push
sbb
mov
std
cld
jge
call
pop
jge
fisubr
enter
pop
jnp
out
jp
std
sbb
cmp
mov
pop
mov
fisubr
fucomip
ins
xchg
mov
xor
jle
mov
aam
mov
jp
outs
nop
mov
pop
pop
sbb
ror
das
mov
sti
pop
xor
or
ficomp
or
mov
scas
jmp
out
scas
mov
sub
add
or
pop
ds
xor
push
mov
mov
dec
cli
stc
jg
pushf
pop
sbb
sbb
fsub
out
imul
or
ins
ficom
mov
mov
in
ins
repnz
call
sub
sti
cmp
mov
sbb
ins
adc
pop
sahf
mov
sbb
lods
mov
mov
dec
loopne
mov
mov
fisubr
jmp
cld
rol
ret
sbb
or
jmp
sub
dec
mov
cli
dec
out
pushf
pop
cmp
imul
rcl
jmp
mov
inc
aas
xchg
(bad)
ins
popf
pop
jnp
ja
or
sbb
sahf
mov
pop
lods
jmp
mov
mov
(bad)
fistp
ror
lods
mov
les
add
jmp
inc
mov
jle
or
jbe
mov
lock
sti
dec
fnstsw
retf
retf
jmp
pushf
repnz
jmp
xadd
repz
cli
pop
std
adc
mov
fstp
push
ins
arpl
stc
lods
mov
dec
outs
or
mov
retf
push
push
pushf
jl
out
mov
mov
ins
(bad)
cmp
mov
arpl
jnp
dec
ins
and
lods
pop
retf
fucomp
ins
out
sbb
ss
push
mov
xor
stos
sti
pop
cmp
ja
cs
add
minps
nop
and
jnp
pop
add
sbb
ja
mov
xchg
ins
xor
adc
fsubrp
mov
test
iret
lods
imul
sbb
mov
retf
fsubr
sub
adc
mov
mov
addr16
ficom
ins
fwait
mov
enter
or
adc
fidivr
xor
or
lea
mov
dec
pavgw
cdq
sbb
mov
mov
int
pushf
and
xchg
jl
inc
sub
out
sti
fdivr
mov
(bad)
call
cmp
popf
sub
cmp
in
mov
pop
fnstsw
jl
mov
xchg
in
icebp
imul
or
sub
mov
pop
stc
neg
fcom
pop
fcom
(bad)
adc
pushf
jmp
push
test
fs
outs
loopne
and
jb
mov
adc
sub
stos
(bad)
and
cmps
(bad)
mov
push
mov
mov
gs
fadd
(bad)
neg
fcomp
(bad)
jp
sub
call
push
mov
fistp
lods
mov
adc
fld
mov
adc
mov
pop
fs
jmp
jge
jb
sub
(bad)
test
mov
pushf
test
cmp
out
aam
pusha
outs
mov
movs
(bad)
dec
xchg
fidivr
mov
pop
jg
dec
pop
sbb
adc
into
ror
mov
pop
cdq
cli
std
adc
pop
mov
retf
sub
in
mov
call
and
popa
sti
lahf
rcr
idiv
mov
adc
adc
dec
or
jae
fucomp
inc
jne
dec
push
push
test
in
test
inc
loopne
sub
cmp
(bad)
add
pop
and
xor
jmp
add
xor
add
(bad)
aaa
mov
ins
sbb
daa
or
dec
(bad)
shl
fcmovbe
dec
push
cld
arpl
(bad)
and
adc
sub
mov
sub
mov
mov
(bad)
ins
pop
sub
and
call
mov
cli
ret
fwait
pushf
nop
inc
dec
xlat
arpl
orps
jge
test
adc
push
dec
sbb
fimul
dec
cld
push
sub
fisttp
(bad)
std
(bad)
fsubr
sub
push
cmp
retf
idiv
push
fcom
mov
ja
jno
mov
sub
inc
call
xchg
fsub
push
inc
outs
push
jb
push
xor
inc
inc
loop
test
test
mov
mov
shl
push
and
sbb
sti
sub
or
fwait
mov
add
sub
fsub
pop
inc
dec
in
ins
pop
fstp
retf
mov
(bad)
cmp
pushf
outs
xchg
push
loopne
retf
ins
es
rcr
or
(bad)
movs
in
ins
out
sub
xor
ins
lds
dec
pushf
jmp
fmul
jg
mov
std
xor
pop
cmp
adc
ds
dec
or
cs
sbb
push
jecxz
bound
test
xchg
xchg
inc
dec
ss
fsub
in
mov
enter
std
inc
fsub
cmp
add
std
mov
inc
rol
dec
jge
loop
sub
loopne
adc
mov
nop
js
ins
std
test
adc
jns
xor
inc
inc
cmc
adc
inc
mov
adc
scas
call
(bad)
sub
cmp
rol
and
inc
ds
xor
dec
jae
out
mov
jno
pop
cmp
gs
mov
sub
hlt
aas
popa
xchg
xor
nop
(bad)
mov
gs
xchg
dec
and
not
mov
jnp
add
or
lds
loop
adc
bswap
iret
push
retf
dec
imul
in
xchg
les
addr16
loopne
dec
test
loop
or
cmc
mov
out
sbb
adc
jl
std
add
std
or
hlt
cdq
stos
dec
lea
cld
adc
and
jb
fsub
ss
sbb
mov
mov
sub
add
mov
dec
cmps
push
mov
test
add
test
adc
(bad)
pushf
add
test
es
push
mov
lea
fsubr
dec
cdq
hlt
into
mov
add
and
mov
fsubr
stos
retf
cmps
fcomip
pop
mov
fwait
xchg
mov
pop
(bad)
movs
call
pusha
int3
jmp
inc
lea
jp
loop
pop
jns
cmp
pop
ror
add
cdq
out
std
aas
fsub
sbb
imul
mov
jno
popa
inc
jg
xchg
or
add
pushf
ss
test
mov
test
pop
repnz
jno
xchg
rcl
add
pop
mov
leave
jne
movs
fs
shr
mov
pop
lods
mov
cmp
in
out
cmp
lea
shr
sar
push
add
sub
idiv
ja
and
mov
sbb
(bad)
bound
pop
test
mov
jl
gs
or
popa
cmp
jbe
pop
cmp
mov
cld
adc
or
jp
pop
outs
pushf
inc
out
cmp
cmp
adc
movs
xor
mov
lods
jmp
mov
arpl
and
or
sbb
jbe
push
and
test
mov
xchg
inc
mov
xchg
push
loope
outs
mov
cmp
scas
and
fmul
clc
lahf
jg
pop
fcomp
mov
cmp
adc
jp
lods
inc
mov
xor
sub
stos
jmp
mul
xchg
pop
std
dec
fdivr
mov
out
cmp
pop
inc
jb
sub
arpl
add
pusha
xchg
test
pushf
fwait
test
lea
mov
xor
dec
cmp
(bad)
sub
mov
push
cmp
jl
or
(bad)
int3
loop
jmp
hlt
mov
(bad)
std
sub
jnp
ds
lods
jg
add
out
loope
pusha
aas
sahf
enter
pop
sub
je
jno
sub
lds
lods
mov
mov
rol
mov
cmp
inc
sti
gs
ds
sub
or
sbb
mov
jge
adc
repnz
fst
lock
imul
pop
push
lods
loopne
retf
jle
lock
fmul
push
pop
or
ins
lea
jge
dec
rcr
mov
xchg
mov
dec
fsubr
pop
pushf
lea
fisubr
xor
aas
retf
(bad)
inc
scas
mov
pop
fist
imul
ds
out
mov
test
inc
push
dec
mov
cmp
add
ins
out
pop
xchg
jge
mov
cli
std
cwde
mov
icebp
nop
xor
mov
mov
ins
mov
(bad)
fld
mov
cmp
shl
sub
loop
(bad)
mov
xlat
jl
fidivr
(bad)
aad
xchg
push
or
dec
jge
sti
sub
lods
outs
jmp
dec
std
push
mov
mov
adc
pop
retf
mov
and
xchg
sub
cmc
rcr
jno
jl
cmps
add
sbb
sub
lods
jecxz
push
jmp
and
add
sbb
mov
push
inc
inc
mov
jge
std
pop
das
(bad)
stc
mov
in
pop
cs
inc
mov
or
mov
fs
imul
xor
repz
sbb
and
sub
sub
xchg
sub
rol
jl
jp
xchg
int3
cmp
sti
sbb
idiv
aam
in
dec
or
mov
sbb
cmp
fimul
xchg
movs
mov
pop
sbb
inc
fisubr
int3
inc
pop
fisttp
jle
ror
pop
pop
inc
sub
retf
out
popf
or
stc
dec
jnp
jge
call
rcr
sub
popf
jl
sbb
fwait
lods
sbb
cmp
mov
cmp
scas
jg
int
dec
mov
(bad)
lea
fisubr
hlt
popf
and
pop
xor
ins
dec
sub
hlt
loop
mov
xchg
pop
mov
sbb
rcr
imul
mov
or
dec
arpl
sub
outs
and
and
sbb
outs
jmp
or
push
jg
jo
fbstp
out
and
xchg
push
ins
lods
movs
ins
dec
cmp
sbb
fs
lahf
cmp
mov
je
in
aaa
mov
mov
in
aas
mov
jge
movs
jl
adc
idiv
xchg
add
mov
push
loope
mov
dec
ins
xchg
lods
lahf
pop
inc
cmp
in
jno
fcmovu
mov
ss
enter
push
jbe
ins
fcmovnu
jle
jnp
sub
daa
pop
xor
(bad)
add
pop
pop
repz
mov
inc
adc
loope
idiv
pop
jae
ror
je
mov
in
add
mov
test
sbb
jp
jp
cmp
aaa
and
(bad)
popf
xchg
dec
in
cmp
loope
mov
(bad)
xor
es
sbb
or
dec
aas
test
pop
call
inc
and
idiv
jmp
outs
out
xor
aaa
ds
cmp
scas
push
xor
loope
jge
xor
push
mov
and
adc
leave
pusha
dec
sub
pop
inc
add
mov
push
mov
mov
popf
ins
xchg
cld
mul
call
jae
cmp
sbb
cld
(bad)
pop
rcr
mov
out
lds
inc
sub
inc
jge
inc
xor
sbb
lock
cmp
dec
mov
xchg
jno
mov
out
dec
mov
add
xor
or
movs
xor
push
enter
in
inc
lea
std
xor
aas
xor
or
inc
xor
inc
sbb
or
xchg
ror
cmovp
mov
mov
xchg
push
mov
cmp
bound
mov
jne
es
jle
add
outs
sbb
inc
test
jns
xchg
pop
mov
inc
test
movs
hlt
clc
call
sar
xchg
mov
ss
sub
icebp
mov
ins
mov
ss
cwde
inc
add
xchg
mov
mov
jl
push
add
(bad)
mov
cdq
int
data16
mov
mov
out
cmps
(bad)
and
loopne
out
ret
push
out
ret
jb
loop
xchg
cmp
cmp
jl
and
mov
xor
gs
add
imul
jmp
jecxz
mov
sbb
pop
test
shr
fistp
add
fnsetpm(287
(bad)
loopne
mov
push
add
xchg
cdq
iret
pop
ins
outs
cmp
jmp
dec
cld
push
fst
in
(bad)
jle
test
mov
fstp
push
stos
sub
ja
pop
mov
pushf
xchg
sub
mov
jp
sbb
dec
sbb
mov
aaa
movs
popf
xor
fild
iret
mov
or
addr16
or
dec
fiadd
or
test
pushf
aam
outs
cmp
ds
push
mov
out
or
pop
ds
mov
inc
stos
add
idiv
popa
or
add
loopne
mov
ins
in
push
mov
mov
call
mov
inc
xchg
inc
mov
jne
jg
mov
push
inc
inc
ins
out
xchg
lea
push
clc
jmp
nop
pop
pop
fistp
sub
add
mov
loopne
mov
ins
or
les
sub
sub
icebp
mov
mov
adc
sub
jl
clc
das
jg
jle
sbb
cmp
sbb
mov
add
push
out
push
lock
mov
aas
pop
div
or
int
push
cdq
mov
pop
adc
cli
pop
or
mov
pop
sbb
mov
or
sub
stc
int3
shl
sub
pop
push
jg
xor
jmp
xchg
sub
or
xchg
repz
cs
dec
daa
and
in
push
imul
jbe
jl
outs
fld
xchg
sbb
out
fld
add
jmp
mov
xchg
ja
shr
fwait
idiv
mov
(bad)
aad
movs
xchg
push
lock
cld
push
loop
sub
adc
dec
sbb
loopne
sbb
or
mov
sbb
es
mov
rcl
lea
cwde
sbb
std
stos
sub
pop
add
fmul
ins
in
mov
sub
aaa
popa
loop
bnd
imul
sbb
mov
(bad)
fist
fiadd
cmp
addr16
push
pop
in
shl
dec
or
jbe
mov
js
js
aas
mov
rcr
mov
cld
mov
xchg
or
shl
pop
dec
cmp
or
ins
sub
in
imul
pop
or
mov
dec
adc
jl
retf
pop
pop
aaa
mov
add
shl
mov
xchg
push
add
pop
add
jb
push
imul
jp
sub
xor
mov
arpl
lahf
push
mov
jb
ss
cdq
xor
dec
dec
movs
mov
test
ret
sub
adc
(bad)
lock
add
lock
pop
in
nop
inc
(bad)
mov
mov
inc
arpl
push
arpl
pop
ficomp
enter
hlt
mov
call
(bad)
repz
pop
loope
xchg
es
mov
fsubr
popa
es
out
inc
ds
in
dec
add
inc
fdivr
push
std
xchg
test
bnd
cmovp
in
mov
test
jle
adc
lsl
pop
sbb
call
push
inc
xor
pop
fcom
stos
out
shr
pop
mov
mov
fwait
pop
add
adc
mov
int3
enter
add
mov
dec
push
pop
or
retf
dec
xchg
mov
adc
adc
pop
xchg
fmul
(bad)
or
lahf
cmp
popf
add
fnstsw
and
cld
dec
jns
sbb
jl
lea
fisttp
or
loop
cmp
pushf
push
sbb
mov
cmps
fldenv
jmp
jge
fild
mov
pop
mov
out
push
(bad)
clc
add
push
sti
add
fbld
cmp
(bad)
mov
dec
or
pushf
fcomp
popf
pop
into
outs
push
jnp
(bad)
jl
imul
adc
or
mov
or
(bad)
(bad)
ss
cdq
stos
push
ss
nop
jmp
jmp
in
mov
lea
ins
mov
add
push
fsubr
jns
aaa
enter
aaa
test
push
std
outs
ret
rcr
xchg
cmp
lea
into
sbb
sahf
pushf
mov
push
xchg
sbb
xor
das
jl
ins
(bad)
mov
out
outs
stos
adc
lods
push
or
ror
gs
sbb
popa
lds
push
cmp
pop
sbb
mov
jge
sti
in
add
push
cmp
xchg
mov
loop
add
pop
adc
adc
push
add
ret
add
mov
add
enter
enter
push
rcr
xor
cmp
add
or
or
scas
call
pop
aam
fld
pop
push
xor
pmuludq
popa
neg
retf
or
push
loop
rcl
std
push
cmp
je
pop
cmc
jmp
dec
cmp
xor
cmp
mov
inc
pushf
xor
fs
jmp
pop
hlt
mov
mov
in
push
ins
jmp
mov
dec
cwde
jl
adc
xchg
or
jns
pop
mov
ds
iret
xchg
add
adc
push
loopne
ins
jne
mov
or
bound
fild
dec
or
lods
fucomp
cld
inc
or
dec
jns
jae
push
jae
mov
mov
into
jmp
push
xor
in
cdq
mov
dec
lods
or
enter
or
add
inc
jmp
lahf
icebp
sub
mov
jl
pusha
clc
cdq
dec
ins
arpl
xor
ss
mov
and
mov
inc
sbb
pop
lock
push
sar
and
cmc
dec
jnp
xor
mov
and
sub
mov
mov
inc
popa
mov
inc
test
inc
dec
pop
add
popf
or
xor
xor
mov
jae
aaa
inc
repz
cwde
lds
jmp
adc
call
add
adc
cmp
div
and
cwde
add
movs
push
(bad)
enter
mov
inc
jo
push
push
cmp
rol
cmp
icebp
mov
or
inc
call
sbb
or
fld
xlat
adc
add
or
push
xor
pop
out
mov
pop
les
cmp
inc
xchg
xchg
div
cli
loopne
popa
cmp
dec
popf
sub
loope
pop
call
mov
and
out
fild
pushf
xchg
jmp
xchg
std
ja
mov
inc
ins
xchg
lods
clc
mov
cdq
fbld
in
popf
adc
xchg
punpcklwd
outs
cwde
mov
outs
(bad)
xor
icebp
cmp
dec
sbb
sub
out
fiadd
stos
mov
push
(bad)
pop
sbb
sahf
sbb
in
loopne
dec
jmp
ins
retf
lahf
fisubr
mov
call
ins
retf
mov
cld
or
fsub
jl
ds
pop
dec
jno
cmp
(bad)
(bad)
push
into
mul
aad
push
in
fsubr
shr
loopne
mov
cmp
mov
jmp
sbb
jmp
and
fstp
outs
(bad)
sub
fsubr
mov
lea
dec
sti
in
into
jge
jp
mov
mov
pop
loop
mov
sub
scas
jmp
sub
fsub
jmp
jl
add
lods
xor
out
sub
dec
xor
dec
int
push
cmp
dec
dec
sbb
int3
ficomp
out
sahf
dec
(bad)
mov
jmp
lods
in
(bad)
ficomp
push
nop
jmp
or
aam
int
push
stc
cld
mov
scas
or
ins
jnp
dec
into
jmp
fdiv
mov
ins
out
stc
int
sbb
jg
ins
ds
push
cmp
sahf
dec
ins
ucomiss
fucomp
and
int3
push
push
sub
fnstenv
int
sub
lods
jecxz
sbb
cmp
(bad)
cli
pop
fmul
jle
pop
pop
fwait
ins
popf
sbb
mov
sbb
sbb
sub
mov
dec
mov
dec
shr
sbb
push
jmp
pop
rcl
aas
sub
stos
out
imul
dec
sub
jmp
push
stos
mov
jmp
jmp
clc
int3
dec
adc
ds
push
popf
cmp
cmp
stc
mov
sub
pop
xor
jmp
stos
or
mov
(bad)
sub
cwde
push
push
repnz
std
call
sub
xchg
mov
addr16
pop
push
aam
(bad)
ins
sbb
mov
mov
sbb
stos
sub
mov
test
outs
sub
pop
sub
push
pop
call
stos
fnsave
mov
fwait
jle
test
mov
fsubr
sub
cmp
pop
stos
jmp
sti
lods
or
outs
sub
out
in
sbb
imul
mov
out
sti
dec
inc
int3
pop
pusha
and
sbb
push
test
mov
fld
std
inc
dec
pop
cmc
jnp
jnp
fdivr
ds
stos
into
jnp
pop
rol
sub
and
or
fmul
dec
sbb
popf
imul
push
jle
shl
and
xchg
mov
fs
pop
add
scas
inc
jge
test
and
nop
jmp
shl
in
out
pop
fnstsw
jle
sub
jge
jnp
jnp
pop
stos
push
fisttp
into
pop
call
aas
aam
sbb
or
push
add
mov
fisubr
fisub
sbb
cmp
nop
xchg
xchg
jl
sub
clc
mov
dec
mov
je
mov
lods
pushf
leave
mov
and
aam
popf
xor
jmp
ins
fistp
pushf
sub
sbb
dec
mov
sbb
mov
call
in
fwait
mov
jmp
and
int
mov
adc
xor
adc
add
fwait
dec
in
and
(bad)
xchg
cmp
jl
das
mov
cld
ins
rcr
(bad)
in
mov
aad
push
jecxz
fisttp
cmp
mov
movs
add
mov
loopne
(bad)
pop
cmp
inc
mov
cmp
mov
xor
pusha
popf
mov
pop
xor
icebp
pop
pushf
fst
jns
int3
dec
or
cmp
mov
jmp
int3
or
stos
int
xor
pop
jl
adc
mov
and
sub
outs
xchg
xor
xchg
cwde
pop
cli
(bad)
retf
fwait
in
loop
push
xor
iret
adc
and
add
sub
xchg
mov
sub
repz
in
and
or
push
int
mov
fbld
xor
fs
lods
imul
push
dec
or
adc
jl
sub
cmp
test
or
push
dec
xchg
jns
cmp
pop
pop
icebp
retf
mov
fisttp
dec
mov
xchg
xor
mov
fbld
jmp
push
in
cmp
test
int
xchg
adc
mov
stos
pop
arpl
pop
loop
in
repnz
ins
mov
and
jge
mov
ret
std
cli
xchg
add
xor
sahf
mov
add
fild
mov
push
adc
fiadd
ins
xor
ins
xor
inc
call
adc
icebp
mov
sar
jge
jmp
fwait
retf
pop
test
loope
imul
cmp
test
int3
into
add
mov
jo
cmp
stos
adc
popf
mov
mov
xchg
lea
dec
ins
fnstsw
add
jg
hlt
mov
mov
cmp
inc
mov
pushf
and
cmp
mov
jge
push
inc
pop
jmp
fisttp
push
and
pusha
push
ret
cmp
dec
ja
sub
cld
sahf
mov
push
mov
fxch
cmp
sbb
jl
and
add
mov
push
das
mov
cmp
xchg
dec
sub
pop
pop
clc
cmp
push
retf
popa
add
pop
mov
sub
pop
push
in
stc
mov
lock
(bad)
test
dec
xor
outs
aas
push
ja
inc
stos
loope
sahf
ret
add
in
or
mov
cmp
(bad)
xlat
ins
aas
jge
fiadd
add
cs
in
xchg
jl
mov
xchg
pop
push
fsubrp
xor
inc
sbb
add
pusha
cmp
outs
stc
and
mov
push
dec
dec
ds
test
repz
and
nop
pop
arpl
(bad)
cld
xchg
dec
adc
mov
stos
arpl
movs
xor
test
jmp
cmc
jmp
mov
xor
out
int3
mov
sub
mov
adc
loop
sti
sub
xchg
not
cmp
pop
xchg
lods
sub
jge
add
xchg
lea
jns
je
lods
ins
dec
or
mov
outs
push
stc
pusha
push
push
mov
xor
mov
arpl
xchg
in
push
or
sub
mov
loopne
dec
inc
jmp
mov
sub
enter
addr16
lea
enter
mov
and
daa
sub
jge
xchg
mov
in
sub
pushf
gs
fs
cmp
mov
jg
sub
jnp
add
retf
mov
jne
add
mov
outs
push
mov
cdq
pop
xor
(bad)
lods
cmp
push
repnz
dec
mov
mov
inc
jne
int3
hlt
push
pop
mov
rol
cmp
push
enter
push
loop
shl
jb
inc
enter
or
in
mov
dec
sub
xchg
sub
cdq
push
in
sub
dec
and
or
jg
cld
stos
dec
xor
mov
xchg
or
adc
mov
pop
mov
mov
loopne
outs
adc
addr16
jecxz
dec
xor
push
xor
jg
mov
push
sub
pusha
addr16
addr16
test
test
push
jl
jg
pop
push
ss
add
or
add
sub
mov
sub
mov
rol
push
aas
inc
jmp
jns
pop
retf
(bad)
jl
adc
and
and
mov
and
mov
dec
aas
mov
pop
popf
pop
ds
push
push
dec
mov
xchg
jmp
loopne
addr16
xchg
cwde
jp
jl
jnp
jns
cdq
je
xor
loopne
or
addr16
xchg
push
mov
xchg
cwde
sub
(bad)
sahf
xlat
inc
cmp
js
mov
jmp
je
cs
rcr
cmp
cmps
adc
mov
daa
mov
xchg
pop
push
mov
or
mov
dec
mov
sub
jl
in
repz
mov
sub
inc
fiadd
lock
mov
ss
xchg
or
imul
fbstp
cmps
shr
ror
inc
xor
retf
fadd
imul
jmp
cmp
arpl
jg
ins
in
cmp
and
push
pop
xlat
jb
dec
pop
mov
scas
jmp
or
sbb
popf
pop
jg
ficom
xchg
stos
sti
xchg
data16
pop
mov
out
rcr
sbb
mov
(bad)
jge
imul
leave
pop
mov
ins
lds
aad
dec
mov
or
lods
sub
mov
shl
arpl
jmp
mov
mov
lods
mov
out
dec
xor
mov
or
mov
stos
std
cld
ins
imul
int3
(bad)
jbe
aaa
sub
pop
lds
(bad)
mov
lds
dec
lods
(bad)
out
sub
inc
fwait
cmc
or
dec
out
cmp
sub
inc
inc
cmp
neg
xor
xlat
jecxz
dec
repnz
push
or
mov
(bad)
retf
in
std
xchg
test
xor
aas
(bad)
retf
test
xchg
xor
mov
in
xchg
dec
ja
data16
xor
add
push
inc
sub
cmps
mov
sub
lea
loop
leave
enter
popf
dec
push
iret
mov
and
ins
push
and
fldenv
sti
add
and
imul
dec
shr
bound
mov
push
dec
xchg
popf
xchg
out
call
push
into
mov
ds
or
ret
vmread
mov
push
daa
dec
lods
xor
add
test
jmp
push
xchg
xor
dec
cmp
jle
dec
imul
dec
mov
push
repz
push
pop
pop
push
shl
sub
xchg
loope
data16
adc
stos
dec
mov
mov
push
js
inc
cs
mov
rcl
(bad)
cmp
daa
xor
inc
adc
pop
mov
mov
cmp
push
or
xor
or
scas
sbb
xchg
fwait
xlat
ja
xor
sbb
scas
loope
cdq
mov
sub
repnz
mov
mov
test
or
jmp
test
jl
cmp
add
mov
mov
ret
dec
movs
jmp
loope
lahf
sbb
pop
mov
int3
push
mov
int
nop
xchg
inc
into
xchg
sub
scas
push
mov
push
add
popa
mov
mov
and
lds
mov
push
pushf
xor
paddsb
pop
retf
xchg
loop
xor
push
je
add
or
imul
mul
scas
xchg
out
mov
pop
leave
lods
xchg
cmp
iret
in
pop
dec
pop
mov
adc
jmp
ins
call
add
(bad)
shl
mov
sub
sahf
xor
jo
test
movs
in
cwde
jno
in
or
xor
stc
push
aaa
fs
pop
sbb
jbe
dec
jo
push
fimul
(bad)
out
sbb
ins
sbb
lods
loopne
cld
cmp
sub
push
cmp
sbb
dec
movs
jge
or
icebp
imul
dec
adc
mov
cmp
or
sub
aam
not
fld
or
inc
inc
push
jns
jmp
loop
mul
mov
in
pushf
dec
mov
in
dec
btr
adc
and
adc
(bad)
cld
imul
xor
pop
add
push
js
push
push
pop
push
or
mov
push
jecxz
cmp
cli
sahf
mov
mov
or
retf
sub
shl
xlat
push
sbb
or
ins
dec
mov
sub
leave
ins
stc
pop
mov
in
xor
sar
mov
mov
jbe
mov
mov
add
call
loopne
push
add
or
ss
fbstp
sbb
jbe
std
jge
dec
push
jne
pop
pop
das
pop
jb
imul
xchg
enter
xchg
mov
lods
cmps
inc
mov
test
ja
cmp
xor
or
enter
sbb
xchg
inc
mov
mov
cmps
rcr
aam
cld
cmp
or
sbb
cmp
jg
and
movs
lock
int3
das
lods
cmc
inc
push
xchg
arpl
inc
rcr
fwait
arpl
shl
int
cwde
xchg
and
sbb
(bad)
jge
sub
shl
dec
jl
mov
mov
or
cli
xor
cli
sbb
jb
cwde
sbb
dec
icebp
jge
mov
dec
sub
inc
mov
inc
movs
rcr
push
fwait
ins
pop
into
outs
cmp
dec
ins
in
inc
pop
mov
scas
jp
fwait
add
pop
fdiv
pop
ret
jmp
aas
push
js
fisubr
mov
dec
ins
push
pop
pop
lds
nop
call
push
aad
xchg
adc
pop
cs
int
out
xchg
arpl
adc
inc
shr
imul
sbb
or
sbb
dec
cmp
sar
popf
pop
xchg
dec
cmps
mov
and
in
frstor
push
or
retf
int3
adc
inc
pushf
adc
icebp
adc
inc
push
xor
sbb
sbb
dec
dec
adc
inc
loope
pop
mov
push
dec
mov
lahf
mov
mov
cld
add
int
pop
mov
mov
fidivr
dec
pusha
jo
popf
inc
or
xor
es
das
push
daa
push
lahf
dec
mov
mov
scas
out
push
fwait
mov
dec
int3
xchg
mov
sub
mov
mov
pop
out
arpl
fiadd
leave
add
call
ret
mov
xor
das
push
jo
ret
mov
xor
addr16
aad
inc
scas
call
rsqrtps
jmp
or
out
add
cld
out
pop
dec
repnz
inc
fistp
fstp
sti
mov
mov
sbb
push
sbb
jp
adc
mov
cmp
enter
test
xor
push
push
ret
adc
push
test
inc
shl
call
or
dec
fisttp
xchg
in
push
pop
ins
mov
pop
adc
sbb
jge
lods
int
outs
fisttp
add
push
mov
sub
cmp
xchg
push
ins
mov
inc
inc
add
dec
movs
imul
inc
inc
or
sbb
pop
imul
dec
mov
push
push
or
jl
inc
pop
cld
inc
mov
mov
in
cdq
shl
rcl
adc
adc
imul
adc
fidivr
shl
and
jb
jno
cli
jp
xor
dec
mov
div
mov
xchg
pop
jnp
pop
rcr
mov
dec
fisubr
jl
sbb
in
cs
ins
sub
ds
inc
cs
mov
lods
into
cmp
retf
ss
or
xchg
cli
pop
dec
cmp
or
inc
adc
sub
lods
add
es
jle
dec
push
les
dec
adc
cld
das
mov
push
loopne
sbb
aas
fdivr
xor
nop
jp
loope
xor
dec
mov
fwait
dec
(bad)
push
push
cmp
in
cs
lahf
inc
std
xchg
xchg
std
inc
imul
and
fstp
out
sbb
test
pop
xchg
jmp
pop
or
sbb
mov
mov
cli
cs
adc
inc
mov
shl
hlt
fadd
call
loopne
adc
xor
ins
sub
mov
inc
ret
mov
mov
mov
adc
and
jge
sub
aaa
cmp
push
jl
xchg
mov
mov
push
add
mov
mov
lea
push
mov
test
repz
pop
mov
inc
ds
mov
sbb
into
loopne
jge
ror
mov
stos
sti
in
push
pop
mov
cmp
xlat
jecxz
aad
or
je
push
add
sub
mov
in
mov
jmp
loope
and
push
xchg
aas
lods
inc
jg
mov
xchg
add
xchg
mov
lahf
mov
mov
icebp
loop
mov
sub
sti
aad
jecxz
push
rol
movs
xor
and
mov
inc
or
lods
inc
lock
aaa
xchg
dec
xchg
outs
inc
or
jo
loopne
sub
fnsave
lahf
pop
inc
add
rol
sub
mov
cmp
aad
sub
adc
dec
scas
push
fwait
mov
(bad)
mov
sub
inc
or
xchg
dec
or
mov
shl
lea
and
imul
mov
mov
fbstp
div
adc
sbb
enter
in
xchg
xchg
call
inc
sar
pop
rcr
popa
jnp
out
test
test
lea
push
mov
mov
sub
ss
push
daa
inc
in
jl
mov
xchg
mov
jge
cmp
jb
call
stos
fwait
jge
rcr
pop
lods
jmp
aaa
xchg
xchg
mov
jne
xchg
inc
cmp
(bad)
add
or
iret
add
adc
push
aas
mov
mov
push
push
lea
mov
pushf
je
outs
and
mov
jae
ja
repz
mov
lods
push
dec
ins
sub
mov
inc
or
(bad)
and
inc
mov
dec
dec
mov
xchg
stos
and
popa
pop
or
mov
cli
jb
sub
pop
sbb
in
and
sub
inc
cdq
pop
mov
cmp
jl
xor
ja
sbb
hlt
push
(bad)
or
dec
mov
xchg
into
ins
dec
ror
inc
dec
dec
push
push
pop
pop
ficom
xchg
xchg
test
stos
leave
pop
daa
mov
icebp
push
sbb
inc
mov
out
jnp
ja
pushf
inc
(bad)
es
sti
push
xor
test
adc
in
push
xchg
or
sbb
repz
or
sub
push
sbb
mov
jp
xchg
lea
and
retf
in
mov
add
pushf
xor
and
scas
mov
mov
xchg
xchg
ins
popf
fnstsw
dec
pop
into
(bad)
xor
icebp
mov
cdq
outs
pop
pop
out
popf
xor
(bad)
in
mov
retf
add
add
cdq
mov
mov
call
jl
jne
mov
jp
mov
mov
out
mov
cvtss2si
mov
pop
outs
cmp
inc
lds
push
sar
loope
inc
xchg
pop
(bad)
jns
push
xor
mov
(bad)
or
cld
mov
inc
pop
cmp
stos
sbb
sub
inc
(bad)
je
xor
enter
stc
mul
pop
jge
fwait
div
adc
lahf
or
mov
pop
int3
loopne
xor
rcl
xchg
jg
setl
pop
outs
aas
fbstp
nop
outs
outs
arpl
and
out
sub
jge
lock
nop
cld
sub
dec
icebp
add
mov
aaa
cld
aaa
xor
outs
cmp
ret
dec
inc
sub
pop
mov
xchg
fimul
clc
push
cmp
call
ins
mov
xor
popf
sbb
pop
leave
mov
iret
jns
call
dec
inc
pop
sbb
xchg
xor
addr16
and
adc
mov
xor
lods
sbb
jp
out
xchg
dec
icebp
aam
test
adc
pusha
pop
mov
adc
(bad)
adc
nop
mov
call
fld
aad
cmp
cmp
sub
add
push
jl
pop
arpl
jmp
loope
ins
sbb
cmp
xchg
or
sahf
pop
dec
xchg
sbb
or
lock
jb
retf
pusha
std
push
sahf
push
int
pushfw
fsubr
push
dec
jle
cld
out
ss
cmp
lahf
xchg
add
int3
mov
dec
pop
ins
mov
mov
jae
adc
pop
mov
les
mov
rol
lods
js
xor
xor
add
xor
xor
dec
inc
lods
and
inc
popf
xor
call
ins
and
popa
cmp
jns
inc
scas
clc
neg
mov
and
add
cmp
in
or
push
cmp
or
xor
jge
dec
inc
lods
rcr
pop
mov
std
sub
popw
sbb
adc
push
mov
mov
add
jp
cdq
cmp
jb
pop
lock
jo
(bad)
popa
xchg
adc
sbb
lock
repnz
push
cmp
xchg
dec
ror
xlat
sub
inc
aaa
mov
arpl
lods
into
jmp
pushf
inc
push
icebp
test
or
jne
xchg
popa
add
mov
fisubr
sar
mov
je
call
mov
lds
mov
inc
pushf
test
repz
iret
(bad)
xchg
pop
dec
or
cmp
or
fisub
sbb
xchg
or
and
pop
das
or
pushf
add
xchg
jge
mov
xchg
jl
int
jno
sbb
popf
mov
pop
jno
mov
sahf
jmp
addr16
out
cmc
fbstp
aam
ins
mov
adc
jl
movs
stos
popf
cld
mov
inc
lea
lahf
imul
jns
push
xor
cli
cdq
pop
movs
cld
mov
xchg
(bad)
ins
xchg
pop
dec
(bad)
cmp
pop
jecxz
sbb
mov
shl
pop
(bad)
out
or
ins
jg
pop
dec
in
jmp
fisttp
xchg
mov
(bad)
dec
xchg
out
lahf
or
pop
dec
imul
mov
pushf
mov
jge
inc
fs
mov
ret
fs
xor
mov
push
mov
ror
ss
xlat
sub
cmp
inc
ror
mov
aas
mov
add
dec
ins
loope
xchg
or
fs
out
and
or
xchg
mov
add
xchg
or
inc
lock
sub
dec
sbb
ja
sahf
push
adc
lock
arpl
cmp
push
mov
lods
or
ins
sub
xchg
enter
test
in
sbb
ret
fnstsw
cmp
stc
call
repnz
jb
xchg
imul
dec
xor
aam
cmp
jge
sahf
adc
cmp
icebp
cmp
mov
xchg
sub
nop
mov
or
pop
add
mov
sti
mov
in
pop
cdq
dec
fndisi(8087
retf
adc
push
sbb
ja
xor
cmp
xor
sar
mov
mov
mov
and
(bad)
jp
jae
pushf
and
jl
push
jge
popa
shl
rcl
test
xor
inc
xchg
fst
jmp
mov
push
out
pushf
cmp
ja
inc
add
dec
mov
and
pop
dec
pop
call
and
mov
cmp
mov
lahf
repz
and
mov
push
mov
pushf
(bad)
dec
sub
ds
cmp
call
sbb
aaa
dec
movs
inc
sub
xchg
cmp
mov
lahf
pop
lahf
and
add
jo
jecxz
(bad)
sar
in
sbb
lods
in
int
pop
xchg
loope
les
push
mov
xchg
lahf
das
call
mov
mov
inc
das
dec
mov
cdq
test
movs
adc
sahf
mov
push
rol
scas
dec
cmp
cdq
mov
in
pop
cli
ins
jmp
lea
movs
out
pop
es
dec
retf
mov
icebp
call
pusha
cmp
pop
xchg
pusha
push
cdq
popa
cs
jecxz
int
cdq
popf
cli
or
into
mov
in
ins
popf
pop
jb
dec
mov
adc
push
or
inc
aas
ins
imul
push
lock
pop
daa
pushf
mov
and
neg
(bad)
push
mov
iret
sbb
jnp
pushf
imul
icebp
xor
hlt
xchg
mov
push
adc
and
inc
or
mov
xor
aad
retf
sar
aam
loopne
nop
movs
int
loopne
add
loopne
aaa
sub
fcmovnu
loop
aas
xchg
outs
inc
cmps
xor
es
cmp
cmp
mov
bound
lds
pushf
inc
pop
push
repz
inc
mov
lea
push
and
or
add
aaa
jg
fnsave
xchg
retf
in
mov
dec
pusha
ja
mov
or
dec
scas
sbb
(bad)
xor
out
mov
cmp
and
lods
popf
inc
mov
test
mov
or
jge
(bad)
or
popa
ja
lock
adc
pop
cmp
stos
sub
and
mov
cld
mov
jno
mov
dec
and
sub
inc
dec
pop
jge
in
pushf
inc
cli
push
xchg
imul
sub
mov
mov
cmp
movs
mov
jae
cmp
test
mov
cmp
mov
int
and
ror
je
fcomp
inc
imul
pop
jbe
xchg
ins
fucomip
inc
and
push
push
and
pop
mov
sbb
(bad)
call
(bad)
out
push
ss
dec
int3
neg
sbb
xchg
lods
push
cld
nop
jae
dec
xor
adc
pop
pop
push
cmp
add
xor
bound
or
adc
ins
imul
sub
add
fcmovnbe
mov
rcr
arpl
xchg
pop
ins
or
rcr
add
xchg
or
add
in
icebp
lods
xchg
retf
retf
inc
fdivr
and
sub
xchg
mov
mov
dec
scas
ja
push
dec
cmp
mov
js
ret
mov
push
fld
dec
ss
dec
mov
adc
sub
mov
fcmovne
sbb
lahf
cmp
mov
xchg
pusha
inc
pop
xor
mov
(bad)
cld
jg
fwait
pop
lea
jb
int
push
ret
mov
scas
cmc
push
sub
retf
add
js
aas
xor
popf
cli
sub
push
xchg
push
imul
loope
xchg
cmp
test
add
nop
jecxz
and
popf
lods
lods
ss
cmc
cmp
outs
sbb
xor
mov
xchg
ins
int
cmp
cwde
add
cmp
pop
mov
jbe
aaa
lods
out
mov
int3
aas
in
add
sub
fcom
fisttp
inc
push
out
dec
pushf
je
nop
outs
shl
ins
mov
xchg
dec
pushf
ret
nop
push
dec
arpl
inc
sub
push
cwde
dec
push
cmp
xor
outs
pop
xchg
cmc
cmp
pushf
sub
inc
add
sub
cmp
cmp
fist
or
out
xlat
sub
sbb
mov
lods
fisttp
(bad)
gs
push
pop
push
lock
scas
xchg
xor
mov
or
inc
sti
or
pop
xor
pop
mov
aas
dec
xor
hlt
lea
(bad)
push
sar
cmp
mov
inc
rcl
mov
add
and
dec
inc
dec
retf
add
cdq
or
in
mov
mov
retf
pop
in
repnz
pushf
push
adc
mov
pop
sbb
sbb
mov
ja
jge
sbb
int
push
std
call
mov
inc
ret
mov
pop
pop
imul
push
loope
jge
jmp
mov
push
mov
push
lock
fisttp
push
xchg
clc
cmp
mov
ins
or
sti
cmp
ds
jmp
or
lods
std
push
pop
sbb
in
sbb
fadd
aad
std
popf
mov
mov
aam
jnp
into
sbb
mov
cmp
std
sbb
jp
sub
pushf
icebp
outs
mov
adc
ins
sti
ins
push
cmp
or
mov
or
repz
clc
fstp
cmp
movs
(bad)
in
out
inc
les
(bad)
xchg
mov
dec
popf
popf
sahf
in
test
daa
cmp
sbb
inc
sbb
outs
mov
or
jnp
loopne
lods
add
stc
pop
cmp
mov
sti
and
cmp
(bad)
int3
mov
jmp
(bad)
or
jae
imul
sub
in
imul
cli
outs
lahf
cli
pusha
fwait
mov
push
ficomp
fsub
btc
lods
cmp
jmp
scas
lds
mov
or
not
mov
pop
repz
dec
popf
lods
sbb
jo
pop
cs
xor
ins
jmp
std
mov
jnp
mov
in
int
ins
fstp
fs
push
pop
fwait
mov
cmp
cmp
xchg
adc
mov
fild
cld
sbb
jmp
je
sti
pop
scas
mov
fninit
shr
psubusb
pop
lds
ficom
jecxz
add
pop
into
lods
or
aad
popf
fistp
xchg
push
pop
stos
ins
pop
pop
popf
stos
in
sbb
in
pop
jmp
cmp
pop
adc
sbb
lock
ins
retf
sub
(bad)
or
push
push
cwde
push
scas
mov
cmp
sub
mov
sbb
sub
popf
outs
cmps
mov
and
test
(bad)
adc
mov
mov
jge
mov
(bad)
cli
jnp
xor
jp
mov
pop
scas
lods
loop
lea
pushf
or
call
lahf
rcr
mov
imul
lods
or
fild
rcr
mov
pop
push
pushf
adc
inc
neg
mov
mov
js
out
xor
test
push
cld
test
xchg
ror
mov
fnstsw
xchg
pop
fmul
dec
mov
sbb
sahf
mov
stc
ins
mov
pop
mov
in
imul
fistp
pop
int3
ins
jnp
mov
xchg
fistp
push
jl
or
sbb
imul
lea
mov
sbb
imul
jne
jg
lock
pop
mov
ins
xor
es
scas
not
cmp
stos
jmp
dec
sub
cmp
in
test
push
retf
push
popf
jmp
pop
sbb
pop
lods
pop
jmp
lea
jne
or
lods
mov
xchg
dec
imul
(bad)
sbb
test
sub
dec
mov
adc
out
cli
or
ds
sar
push
jne
std
ror
jl
lods
cs
dec
call
sti
dec
fistp
popf
or
dec
push
jg
enter
fimul
in
mov
mov
mov
cwde
(bad)
jmp
fld
dec
out
aas
fisubr
dec
jbe
out
push
sbb
jle
sar
fstp
or
into
pop
cmp
cmp
or
cmp
pop
fwait
call
dec
std
(bad)
repz
enter
pop
or
sub
jne
std
mov
sbb
(bad)
mov
dec
icebp
out
movs
mov
lods
inc
cli
pop
sub
add
dec
cld
fwait
mov
cli
and
sbb
mov
lahf
(bad)
hlt
stos
or
mov
jge
in
test
add
jle
push
dec
and
mov
pop
(bad)
out
push
jns
mov
xchg
jl
add
mov
sub
mov
ins
mov
sahf
cmp
dec
sbb
sbb
jnp
jne
or
ins
lahf
dec
pop
loop
mov
fsubr
daa
xor
and
adc
fiadd
push
inc
pop
mov
cmp
retf
xchg
lea
iret
jmp
in
movs
ins
repz
popf
fidivr
add
or
call
cmp
mov
sub
fistp
mov
jmp
jnp
sahf
(bad)
mov
into
mov
js
sub
mov
push
or
cmp
in
dec
mov
pop
cmp
fisubr
cld
test
mov
lock
ins
movs
iret
mov
inc
inc
nop
jecxz
pop
and
and
out
push
cli
mov
mov
jnp
(bad)
ret
ins
outs
adc
scas
cmp
cdq
pop
push
sub
sti
mov
in
mov
je
sbb
mov
inc
jmp
cmp
pop
xchg
jnp
pop
and
fwait
sbb
jl
push
cwde
loopne
les
inc
test
cmp
sbb
jge
pop
pushf
sbb
movs
pop
mov
cli
mov
pop
cmp
dec
int3
int
push
jmp
sub
sub
mov
push
mov
out
pop
jle
sbb
cld
mov
mov
jnp
or
xor
sbb
mov
into
add
cwde
movs
push
lods
hlt
cmp
std
sbb
sub
mov
scas
loopne
and
fwait
mov
jmp
mov
cs
jnp
stos
mov
cli
mov
mov
add
mov
fisub
or
test
or
pop
imul
push
mov
(bad)
aas
retf
sti
lods
sub
fmul
in
cld
outs
and
ins
add
popf
inc
pop
mov
sbb
imul
mov
pop
ins
cmp
mov
xor
retf
push
lods
aas
push
pop
arpl
test
call
pop
lahf
call
nop
(bad)
push
cmp
mov
add
pop
pop
pop
gs
xor
inc
ins
sti
dec
ror
sub
lea
sub
test
arpl
pushf
xchg
dec
adc
jg
jmp
pop
mov
cmp
mov
sbb
xchg
dec
int
xor
or
mov
ins
mov
mov
pop
or
fstp
aad
int3
sti
test
nop
pop
pop
out
ret
fnsave
pop
sub
mov
inc
sbb
push
dec
jmp
lds
fs
inc
aas
xchg
lahf
lods
les
xor
enter
fnstenv
adc
sbb
sahf
push
jo
sahf
imul
inc
sbb
sub
jne
push
sbb
pop
cwde
xor
mov
xor
fidivr
mov
fidivr
sbb
push
faddp
cld
pusha
aaa
pop
dec
mov
sub
mov
fldenv
mov
sti
(bad)
in
jp
fwait
jnp
dec
or
push
test
mov
mov
push
pop
repz
push
jge
add
lods
mov
jnp
mov
aas
cld
add
cmp
ror
ins
sub
(bad)
(bad)
scas
push
sets
repnz
test
ins
sbb
mov
int
dec
clc
mov
mov
sub
push
jle
imul
fstp
dec
or
imul
mov
lea
sub
mov
or
mov
xchg
inc
mov
jge
xchg
push
or
arpl
sbb
xchg
popf
jo
cmp
mov
add
sahf
cmp
std
add
(bad)
push
retf
popa
call
mov
fist
adc
es
adc
sub
push
lods
push
xor
push
movs
sub
stos
sbb
sbb
mov
pop
int3
jae
pop
ret
cs
shl
xor
mov
cdq
mov
xchg
jge
sub
pop
(bad)
aaa
and
bound
test
not
dec
cmp
sbb
retf
or
dec
cmp
jg
or
jmp
lea
loopne
or
sub
in
pop
mov
ins
cmp
mov
jl
fild
jg
fs
sub
cmps
nop
loope
jnp
dec
or
cmp
pop
int3
sbb
es
xchg
adc
or
push
mov
stc
std
pushf
ins
jp
pushf
fwait
ins
pop
mov
push
mov
cmp
dec
cmp
cmp
jnp
sbb
push
pushf
inc
mov
ror
cld
ds
mul
jp
stos
retf
or
mov
call
cmp
pop
clc
mov
ins
or
imul
cli
repnz
cmp
mov
jp
sub
push
aad
dec
jmp
scas
sbb
mov
ror
cmps
cli
mov
xchg
ret
push
je
cdq
sbb
(bad)
scas
hlt
jmp
pop
pushf
(bad)
jle
in
movs
popf
arpl
pop
ret
push
push
sbb
test
or
push
jmp
push
fstp
ret
pop
sub
shl
mov
out
mov
das
pop
jmp
sbb
pop
xchg
xlat
cmps
dec
or
mov
add
rol
sar
imul
adc
cld
jae
mov
sub
inc
jl
loop
call
pop
cmp
fst
dec
outs
push
sti
fidivr
fst
push
jge
dec
(bad)
dec
dec
int3
cmp
int3
dec
cmp
movs
sbb
int
fisubr
sti
popf
mov
out
jle
(bad)
xchg
xor
pavgw
push
cmc
or
cld
sbb
mov
in
mov
mov
mov
mov
(bad)
mov
sbb
adc
push
adc
dec
add
inc
lods
jecxz
push
pop
dec
sbb
shl
or
(bad)
jo
push
ja
mov
pushf
jmp
in
sbb
mov
outs
fisub
xchg
xor
jo
out
mov
push
enter
in
adc
aam
xchg
stos
mov
lods
xchg
sub
lea
in
and
jmp
and
pop
xchg
sbb
ins
sub
jns
fwait
push
xchg
cmp
jl
mov
int
or
jmp
in
sbb
in
aaa
stos
fild
xor
popf
mov
sbb
xchg
adc
fs
sbb
sub
int
aaa
movs
cs
xchg
mov
or
xor
pushf
shl
jnp
push
stos
xlat
lods
mov
pop
xchg
call
jbe
adc
cmp
clc
sub
int3
mov
jmp
jae
movs
jae
sub
sbb
mov
int
loope
fs
mov
fs
lea
ins
mov
sbb
pop
mov
cld
mov
fs
test
xor
loop
mov
out
mov
mov
aaa
inc
pop
xlat
lds
jns
add
ror
inc
stc
stos
push
cmc
aas
jo
lock
fldcw
mov
mov
fwait
sub
push
cmp
lock
mov
dec
push
jae
(bad)
mov
sub
mov
pop
cmp
pop
and
mov
outs
jmp
adc
into
int
mov
sbb
and
or
in
std
xor
xlat
sbb
ja
neg
popf
adc
lods
xchg
popa
and
fbstp
lahf
push
jae
cmp
xor
push
sahf
push
or
std
jb
inc
retf
adc
shr
adc
xor
fidiv
je
iret
ds
loopne
inc
pop
jmp
sub
jecxz
sahf
jle
sar
stos
retf
test
int
mov
jmp
pushf
sub
outs
std
loopne
scas
sbb
popa
dec
jnp
pushf
push
mov
jmp
sti
jle
fstp
xchg
or
int
lea
pop
iret
mov
dec
shr
pop
adc
(bad)
cld
sbb
and
jb
jnp
lods
dec
dec
pop
stos
je
dec
and
fstp
in
or
stos
jge
cmc
ja
dec
jne
into
iret
sbb
(bad)
xchg
shr
lods
mov
push
je
push
xchg
enter
lods
fcomp
sub
or
sbb
les
mov
push
sbb
(bad)
pop
(bad)
push
mov
sti
push
mov
push
in
jo
repz
sub
shr
cld
(bad)
sub
popa
dec
pop
popf
pop
popa
cdq
call
mov
sbb
(bad)
adc
retf
out
test
xchg
jnp
pop
or
sbb
inc
call
lods
xor
cmp
xchg
icebp
jbe
xchg
mov
cld
adc
std
sub
std
sti
push
mov
sar
push
out
out
xchg
fs
test
enter
mov
mov
sub
jg
xchg
outs
mov
mov
add
mov
or
outs
or
xor
push
and
popf
cmp
mov
inc
(bad)
lahf
dec
sub
sbb
sbb
push
push
in
mov
lods
jmp
cmc
aaa
fs
ret
test
lock
clc
xchg
push
hlt
adc
jno
sub
imul
cmc
cmc
scas
int
lods
push
fwait
jl
fdivrp
pop
jns
pop
ja
mov
div
ss
cmp
out
das
xor
(bad)
fnsave
fcmovu
push
xchg
xchg
or
sub
dec
outs
jecxz
jge
in
push
ficom
stos
(bad)
dec
aam
outs
in
xor
xchg
lods
inc
push
ins
dec
mov
por
jmp
ret
lods
jg
sub
mov
das
aam
sbb
(bad)
pop
xchg
pop
or
(bad)
into
jge
repnz
in
add
mov
dec
retf
adc
jecxz
fstp
sti
dec
sub
jbe
in
rcl
and
lea
push
jnp
jle
push
cmp
pop
lods
sub
sbb
dec
mov
xor
fimul
xchg
outs
sbb
xchg
dec
sbb
in
cmp
sub
lea
fistp
shl
lods
mov
pop
mov
jmp
add
lock
xor
ins
fisubr
idiv
sbb
mov
es
dec
popf
cmp
pop
inc
mov
cmc
je
cmp
mov
jo
popf
mov
and
push
in
cmp
int3
and
xchg
clc
je
sar
loope
sub
out
test
sbb
add
add
shl
out
lea
add
popf
sti
inc
cwde
jnp
and
pushf
push
std
ds
stc
lods
jp
xchg
or
sub
sbb
mov
cmp
(bad)
std
dec
out
mov
in
into
cmps
and
inc
sbb
shr
test
lahf
and
pushf
(bad)
cmp
inc
dec
in
fistp
xor
(bad)
or
idiv
xchg
or
dec
je
ins
xchg
push
pop
ss
add
jbe
xor
inc
in
sbb
fidivr
(bad)
retf
add
mov
push
push
out
not
aas
sub
jno
adc
jo
or
fcmovnu
xor
push
jg
(bad)
(bad)
mov
fld
mov
mov
or
pop
out
popf
std
ins
lds
cmc
push
sub
mov
sbb
(bad)
mov
mov
dec
(bad)
shl
je
ins
je
dec
push
gs
inc
jecxz
jmp
fsin
pop
aad
popf
popf
jmp
add
jnp
lods
lea
mov
jmp
loope
xchg
int3
sti
int
out
xchg
pusha
repnz
jmp
test
or
bnd
imul
pop
(bad)
aaa
mov
mov
or
cmp
lea
fist
call
call
shl
ins
dec
(bad)
ds
push
jl
arpl
pop
nop
test
(bad)
xchg
fs
lods
fstp
xor
lods
outs
add
xor
push
jl
(bad)
mov
(bad)
pop
add
push
movs
mov
ds
rcr
jl
mov
popf
sbb
sub
repnz
xchg
jns
cmp
ins
jge
icebp
sub
(bad)
loope
mov
cmp
dec
adc
cli
mov
aas
jl
pop
push
xchg
xor
sti
lahf
and
dec
in
mov
pop
sub
into
pushf
cmp
adc
sbb
shl
cld
pop
pop
xchg
cmp
fwait
into
rcl
mov
ror
lods
xlat
pop
cmp
(bad)
dec
dec
popf
add
sub
fst
push
(bad)
nop
lods
lahf
mov
inc
popf
aaa
aaa
adc
push
push
dec
jg
and
jo
lahf
jns
sub
mov
dec
mov
push
loopne
ds
aas
mov
jl
jge
outs
in
push
out
mov
inc
rcr
js
dec
mov
pusha
cmp
stos
cmp
call
add
sub
pop
pop
dec
sub
es
sbb
repz
pop
add
std
leave
xchg
leave
cwde
leave
mov
xor
aad
(bad)
ins
inc
jmp
stc
cli
ins
and
mov
ror
jnp
push
out
xchg
ficom
shr
or
mov
scas
jp
and
or
enter
in
xor
(bad)
jmp
push
fldln2
cwde
je
lea
mov
and
sbb
cmp
mov
stc
pop
jge
cld
mov
(bad)
in
push
cmp
outs
shl
jnp
sbb
popa
aaa
sub
in
sbb
test
mov
xchg
xlat
in
jae
xlat
arpl
scas
in
sti
scas
jmp
fbstp
les
jl
dec
dec
cwde
bnd
shl
add
jmp
mov
jnp
push
int
in
cli
movs
and
popf
aad
aam
(bad)
sti
(bad)
lods
fs
lahf
jmp
xchg
cwde
sti
xchg
jmp
cmps
xchg
out
stos
sbb
popf
enter
sub
dec
movs
shl
xchg
imul
call
test
pop
jne
jnp
les
(bad)
stos
outs
cs
cmp
push
mov
fld
outs
xor
fstp
pop
xchg
mov
leave
outs
add
aas
add
dec
sbb
stos
test
mov
adc
int
inc
leave
loop
xchg
aaa
(bad)
(bad)
(bad)
mov
pop
enter
jns
in
outs
aam
aad
add
cs
jae
sbb
les
pop
int
sub
jmp
sahf
sbb
jmp
cs
sub
xchg
sub
fiadd
adc
fidiv
(bad)
push
test
sbb
cdq
sbb
(bad)
icebp
nop
dec
lahf
mov
push
fwait
pop
loopne
sbb
pop
sub
fild
test
cld
nop
jl
mov
fidiv
adc
mov
add
cmp
arpl
adc
gs
test
sbb
and
push
adc
push
in
xchg
or
xor
mov
push
cmp
jecxz
mov
mov
xor
inc
xor
pop
xchg
mov
call
dec
sbb
vmulsd
push
jbe
push
mov
shr
jg
frstor
inc
or
std
mov
cmc
pop
aad
bound
adc
jecxz
scas
jnp
jnp
jmp
std
arpl
dec
jne
dec
mov
ins
sti
fcomp
jmp
lods
adc
pop
dec
cwde
adc
mov
mov
ds
mov
popf
or
jge
jns
jmp
sub
enter
cs
cmp
cld
dec
mov
scas
fbld
sub
sub
repnz
fist
nop
jge
arpl
push
pushf
dec
adc
or
jg
inc
mov
test
inc
div
cli
out
cld
dec
repnz
dec
call
fwait
inc
out
test
push
into
xor
xchg
xor
jmp
jmp
inc
jge
xchg
add
repnz
and
sub
push
popf
rcl
ret
sub
fiadd
jecxz
cli
sub
(bad)
sbb
push
mov
pop
dec
sub
std
test
pushf
add
sub
xor
nop
and
test
xor
sbb
int
sbb
lods
leave
push
fwait
pop
inc
adc
call
push
rcr
gs
outs
enter
push
dec
mov
pop
jl
fimul
icebp
in
int3
sti
pop
dec
ss
(bad)
jmp
mov
push
mov
psraw
inc
cld
loopne
inc
adc
dec
dec
retf
shl
pop
in
data16
in
(bad)
gs
dec
(bad)
es
xchg
ror
cmp
shr
outs
xchg
rcr
push
test
test
pushf
cld
nop
push
pop
jnp
add
arpl
(bad)
xor
sbb
fistp
sub
mov
in
cdq
cmp
mov
ror
imul
fstp
jge
mov
sbb
std
lea
fwait
push
sub
jg
sbb
sub
out
jp
lods
or
in
(bad)
int3
sbb
clc
sbb
xchg
call
dec
push
mov
in
mov
mov
jae
jae
cmp
ins
(bad)
(bad)
push
lods
aaa
cmp
cmps
mov
je
(bad)
jmp
int
rcr
call
jl
xchg
inc
jle
xchg
mov
rcl
std
mov
pushf
loope
cmp
in
xchg
ror
mov
cmp
cwde
or
ins
stc
xchg
xchg
xor
sub
into
mov
mov
push
outs
test
push
and
fild
cmp
sub
stos
and
sbb
fbstp
mov
bound
hlt
cmp
enter
lods
xor
xlat
jle
(bad)
aam
dec
idiv
mov
dec
mov
shl
add
jnp
int
ficomp
aad
mov
clc
dec
push
push
or
cld
add
sti
out
stc
pushf
sub
call
test
ret
cs
mov
lea
push
inc
pop
test
div
xor
shl
mov
or
shr
sbb
sbb
push
pop
xchg
call
fisttp
mov
cs
ret
int3
stos
fwait
mov
mov
std
push
popf
push
ss
xchg
jle
xor
xor
push
push
ds
or
fistp
jg
js
cld
int3
sub
lahf
imul
dec
imul
stc
and
mov
cmp
scas
in
fst
das
into
scas
inc
sar
out
sar
mov
mov
sub
dec
aad
retf
xor
add
outs
aas
cmp
mov
mov
ret
xchg
cld
push
loop
rol
std
dec
lods
fscale
pop
jmp
fwait
test
into
jo
mov
lea
mov
sub
jg
shr
rcr
fs
sti
ins
lea
lods
jb
cdq
push
ret
mov
add
retf
popf
xchg
sar
dec
ds
frstor
mov
cmp
or
or
xchg
lods
mov
ret
mov
adc
cmp
fwait
pop
out
mov
mov
in
push
sbb
call
int
fld
sub
or
sbb
scas
outs
movs
(bad)
sub
push
lods
jl
pop
lock
popa
xor
cmp
lods
push
dec
mov
jle
(bad)
(bad)
lods
or
mov
inc
xchg
inc
sbb
jle
dec
xor
nop
fisubr
sbb
pusha
add
stos
fs
mov
out
(bad)
and
int3
mov
in
dec
lea
test
and
push
and
sub
dec
jno
aad
imul
addr16
sbb
sub
(bad)
out
xchg
xchg
jnp
adc
dec
push
sar
cmp
push
adc
sti
test
in
inc
or
fnsave
jbe
shld
mov
inc
retf
mov
jne
jmp
dec
cmp
sbb
add
push
les
and
in
and
out
mov
(bad)
lods
call
xchg
les
push
or
mov
outs
jno
pop
push
cli
mov
cmps
movs
lea
pop
in
sub
test
or
jmp
outs
jge
imul
fistp
cwde
outs
dec
das
js
(bad)
push
arpl
sti
inc
(bad)
sbb
(bad)
ret
shr
xor
gs
mov
and
jo
leave
xchg
adc
jg
dec
sar
adc
ret
add
mov
imul
jg
mov
sub
sti
and
or
xor
scas
int3
push
xlat
lods
es
fisub
mov
push
fwait
push
aas
cwde
xor
in
in
cdq
clc
push
stos
enter
and
repz
int
sbb
mov
cmp
xchg
push
in
mov
fwait
push
(bad)
int3
mov
pop
dec
out
sub
push
stos
out
sub
cmp
icebp
rol
push
mov
pop
fisubr
aas
xchg
imul
inc
push
nop
push
mov
sti
xchg
imul
clc
add
pop
sbb
pushf
retf
popf
movq
and
sub
pusha
js
cmp
sbb
mov
in
out
xor
sbb
es
into
and
and
mov
adc
push
xor
jmp
das
(bad)
(bad)
sbb
dec
mov
fistp
scas
sbb
sub
xchg
pop
les
popf
shl
fs
mov
sub
pop
ret
mov
add
push
mov
in
and
out
xor
mov
fisttp
stc
pop
cld
out
jb
mov
cmp
xor
addr16
lea
pop
rcr
test
dec
or
sbb
cdq
cmp
clc
int
shr
cmp
cld
add
jp
xor
push
cmp
xchg
xor
mov
imul
push
adc
aad
scas
mov
std
jmp
arpl
jo
and
sbb
fwait
loop
inc
ror
inc
jo
sbb
in
retf
loope
dec
mov
push
push
push
push
arpl
cmp
push
sbb
(bad)
ror
push
mov
jle
out
xchg
lods
pop
lods
add
xchg
xchg
cwde
mov
sub
ds
cwde
aam
shl
lods
or
retf
fnstsw
sbb
or
sbb
std
lods
scas
mov
mov
test
and
sbb
ret
(bad)
xlat
std
out
xor
mov
(bad)
enter
repnz
sahf
scas
ds
sbb
outs
mov
ror
mov
sbb
dec
jmp
mov
stc
dec
aaa
mov
pop
push
pusha
cmp
cmc
and
and
addr16
scas
push
cmp
inc
push
cld
pop
lods
fucomi
scas
xchg
xor
mov
jl
(bad)
cdq
loop
sahf
mov
adc
sti
pop
push
inc
aad
out
lea
leave
mov
or
xchg
es
dec
mov
jmp
inc
(bad)
cmp
pop
lea
add
lods
mul
inc
stos
ins
push
xchg
stc
adc
mov
sub
(bad)
adc
push
cmps
repz
pop
jb
movs
cmp
dec
fld
cld
mov
in
mov
dec
adc
fsub
ins
or
pop
fidivr
popf
ds
(bad)
dec
mov
pushf
push
test
rcr
ins
sub
push
mov
pop
psrlq
loopne
push
mov
add
fist
push
pop
leave
jg
int3
xor
xor
std
ret
or
or
push
sbb
push
(bad)
ror
jmp
sti
mov
pop
aad
ds
int
mov
fstp
dec
adc
shr
movs
mov
lods
xlat
mov
add
pushf
lea
js
addr16
inc
jl
mov
ins
mov
pop
out
sbb
push
jge
ins
pop
cli
ins
xchg
jnp
shl
and
hlt
jp
xlat
mov
add
mov
jge
mov
shl
mov
adc
ins
xchg
inc
add
sbb
or
ins
mov
retf
cmp
push
repz
mov
(bad)
push
fstp
std
push
into
sub
dec
dec
push
pop
sub
mov
jl
xchg
fisubr
aas
test
xchg
loopne
adc
rcr
pop
scas
hlt
ins
std
popf
arpl
nop
sar
lods
aaa
ret
retf
mov
pop
pop
in
fidiv
lahf
jb
fidiv
cmp
pusha
dec
sub
sar
es
(bad)
xchg
jg
ret
shr
mov
cld
ds
stos
sbb
ss
ss
dec
sbb
fstp
pop
adc
lods
inc
mov
sub
retf
pop
cmps
fwait
push
lods
in
cmp
cmps
js
(bad)
pop
jnp
or
add
mov
(bad)
(bad)
jmp
sub
adc
jo
fstp
or
mul
ins
push
fnstsw
mov
xchg
les
dec
ss
xchg
sbb
ret
retf
dec
mov
mov
ins
sete
and
movs
mov
movs
imul
dec
mov
pop
mov
fwait
sub
fsubp
in
mov
add
dec
lods
in
add
lods
(bad)
loop
push
jmp
jle
shr
ins
push
popf
fild
cmp
ret
mov
dec
cmp
pop
jp
pop
mov
mov
mov
sub
out
ror
dec
rcr
mov
inc
sar
add
call
loope
mov
lock
mov
pop
pushf
sti
popf
pop
dec
inc
loop
mov
gs
nop
push
add
mov
push
xchg
(bad)
imul
clc
dec
sub
out
cmp
in
(bad)
rep
mov
xor
ds
pop
jb
call
jge
call
lds
int3
pop
mov
pop
lea
rol
xchg
and
sub
cmp
cmps
arpl
mov
ins
idiv
dec
cmp
stos
fs
sub
jne
movs
pop
mov
mov
mov
dec
pop
stos
dec
call
int
inc
int
fimul
cmp
jge
add
(bad)
or
ins
mov
aam
sbb
cmp
jne
sub
stc
sub
arpl
dec
push
test
ins
pop
movs
cmp
and
call
dec
xor
fsub
fstp
ds
dec
dec
cmc
jmp
dec
and
push
mov
push
cmc
add
(bad)
aam
lods
mov
fist
in
shr
jg
jmp
sbb
dec
cmp
in
(bad)
imul
push
in
adc
mov
fist
push
adc
push
outs
mov
mov
add
sub
cli
fsubr
stos
pop
jge
cmp
lods
fstp
popf
pushf
test
out
pusha
in
mov
imul
mov
sub
stos
jnp
outs
loopne
cmp
pop
mov
int
fwait
ins
add
imul
xor
pop
pop
shr
icebp
dec
jp
call
aad
and
or
or
inc
add
jmp
push
in
sbb
pop
add
mov
sti
cld
aaa
mov
pop
(bad)
jl
xchg
xor
lea
xlat
fst
sbb
js
leave
(bad)
aad
fstp
imul
jno
pop
ins
sub
sub
mov
push
cmp
fdiv
jno
jnp
or
frstor
scas
mov
outs
mov
mov
nop
call
adc
cld
inc
test
out
psubd
adc
mov
sub
xor
pop
ror
lea
fcmove
popf
imul
in
push
retf
pop
push
pop
adc
cmp
sub
sub
sti
lods
std
jl
aaa
push
mov
pop
push
pop
xlat
sub
lea
xchg
aaa
mov
jno
fs
in
mov
xchg
call
sti
fisttp
popf
dec
jns
jnp
mov
sub
dec
push
add
mov
add
lds
jmp
mov
push
cmp
stc
adc
cmp
fs
cmp
stc
add
fwait
addr16
stos
mov
dec
cdq
sub
inc
imul
cmp
outs
mov
jmp
add
dec
lgs
xchg
xor
(bad)
add
sti
mov
sbb
mov
jmp
sub
sub
dec
xchg
push
inc
sti
pop
sub
ret
repz
sub
xchg
sub
cmp
sti
sub
mov
pop
fidivr
or
pushf
sub
xchg
clc
mov
popf
sub
pop
clc
lahf
jns
or
sti
popf
jo
fnstsw
mov
loope
sub
je
ja
pop
mov
xchg
int3
ret
and
movs
iret
mov
sbb
push
popf
dec
(bad)
cld
loop
loop
ds
test
fdivr
mov
std
lods
repnz
ss
and
lock
into
adc
pop
mov
ds
xchg
out
es
jnp
pushf
cmp
jecxz
(bad)
jns
fcomp
lods
inc
es
stos
fistp
mov
mov
mov
push
movs
pop
outs
lea
cmc
jge
mov
mov
aaa
or
or
xchg
leave
dec
shr
vpacksswb
aad
dec
push
cld
mov
push
add
cmp
sbb
mov
int
int3
and
sbb
es
adc
lea
xlat
cmp
xchg
mov
pop
pop
add
(bad)
sub
mov
jmp
repnz
setp
jge
sti
dec
pop
sub
cmp
jne
or
mov
dec
cld
cwde
in
mov
mov
mov
xlat
inc
dec
sub
shr
out
les
int
(bad)
push
jp
mov
ss
fnstsw
xlat
imul
(bad)
and
pop
pop
dec
jmp
sar
mov
(bad)
fisubr
fmul
ds
mov
bound
outs
and
mov
adc
ret
addr16
fiadd
cmp
mov
loop
cmp
sub
mov
jnp
mov
sub
shl
pop
xchg
sbb
std
push
sub
push
hlt
add
mov
stos
icebp
or
xor
sbb
std
stos
in
mov
and
mov
shl
dec
pop
sbb
enter
or
mov
push
inc
or
arpl
jbe
jg
jnp
mov
cs
mov
mov
(bad)
sbb
stos
sbb
pop
cli
or
push
pop
mov
add
(bad)
fistp
or
(bad)
mov
jle
cdq
int3
lods
adc
lds
cmp
cld
dec
lods
cmp
retf
dec
add
sbb
dec
mov
cmp
add
jp
jge
and
jg
clc
ret
jno
jge
sub
and
in
aam
mov
sub
cmps
jp
xchg
mov
pushf
sub
sub
(bad)
sbb
stc
sub
sar
int
ror
xchg
out
pop
sbb
sub
cmp
sbb
jmp
dec
push
xorps
adc
jnp
xchg
mov
fsubr
inc
xor
sahf
fwait
sbb
(bad)
int3
dec
mov
movs
mov
jg
sub
popf
inc
out
cmp
out
inc
mov
mov
xchg
sar
int3
mov
pop
(bad)
leave
or
in
jo
xlat
call
stos
add
push
push
int3
retf
imul
jg
ret
pop
pop
cmp
pop
imul
(bad)
pushf
lods
jmp
push
xchg
adc
jge
pop
dec
in
in
stos
rcl
mov
int3
adc
jmp
out
not
pop
mov
ja
scas
jno
loop
inc
or
dec
dec
in
stc
mov
push
mov
push
pop
push
push
push
cmp
lods
(bad)
int3
mov
imul
push
mov
cli
cld
addr16
inc
out
cmp
arpl
mov
dec
sub
mov
and
mov
pushf
sbb
call
mov
sbb
pop
outs
cmp
xchg
add
push
jp
cmp
or
mov
dec
xchg
shl
aas
inc
popf
and
and
or
sbb
mov
aad
ret
pop
jmp
jecxz
mov
lods
xchg
xor
ins
mov
cmp
(bad)
stos
sbb
mov
ja
stos
clc
and
sbb
dec
sahf
mov
dec
jge
xchg
popf
es
mov
sub
jae
int
mov
dec
les
lods
ins
arpl
sub
push
xchg
sbb
in
cs
lds
pop
stc
cmp
pop
jns
in
ficom
jle
mov
lea
(bad)
gs
fs
mov
push
jmp
xchg
sub
out
(bad)
and
mov
pop
stos
sbb
mov
lahf
cmp
lods
adc
std
sti
push
mov
shr
sub
leave
sub
repz
xchg
push
sbb
cwde
or
jmp
aaa
std
mov
icebp
cmp
or
popa
in
pushf
inc
daa
jmp
fiadd
test
fld
ins
push
add
mov
xor
mov
sbb
mov
mov
mov
fcom
std
or
int
std
add
out
inc
mov
jmp
dec
ins
pop
xchg
imul
mov
pushf
scas
ins
dec
rol
(bad)
out
gs
mov
push
mov
fld
push
(bad)
jp
jno
sbb
lods
cs
mov
pop
inc
cmp
(bad)
add
ret
push
enter
lea
mov
cld
fild
cmp
outs
call
sub
fidiv
(bad)
popf
push
and
pop
nop
xchg
movs
mov
mov
cld
sbb
enter
dec
es
cmp
pop
pop
in
jle
shl
scas
xchg
fwait
lds
xchg
ins
mov
inc
adc
pop
dec
not
cld
fcmovne
dec
adc
fdiv
pop
pop
jmp
outs
cld
aad
sar
call
fild
ror
dec
pand
aam
std
mov
test
mov
les
cmp
test
cmp
mov
xor
in
mov
call
fwait
dec
jle
mov
cs
jmp
in
lods
push
std
mov
add
and
imul
jnp
push
fwait
std
jl
adc
xlat
mov
(bad)
fstp
inc
data16
int
dec
imul
je
rcl
xor
adc
aaa
sbb
jo
call
sub
repnz
inc
xor
stos
mov
mov
lea
jecxz
or
mov
mov
xchg
sbb
sub
sbb
xor
mov
xor
stc
lods
push
pop
jno
pop
push
(bad)
pop
dec
sub
ficomp
dec
sbb
scas
or
sbb
cli
push
xlat
ror
sbb
pop
jle
jl
mov
(bad)
in
adc
dec
mov
test
sbb
jbe
outs
fld
push
sub
dec
repz
aas
out
imul
call
jb
jecxz
int
jns
push
jnp
or
xchg
or
sub
retf
leave
mov
xor
mov
shr
and
push
ret
jns
fisttp
fistp
in
jle
retf
mov
mov
jmp
scas
cld
push
sub
mov
fdivr
fwait
popf
cli
mov
mov
push
enter
pop
fstp
pop
dec
ins
fist
sbb
mov
cs
jle
push
jl
mov
push
mov
std
popf
ins
int3
sahf
pop
adc
lock
clc
fist
push
and
dec
jge
xor
test
in
in
cmps
mov
dec
rol
dec
int
pop
xor
jl
mov
add
push
(bad)
fidiv
(bad)
adc
scas
cmp
pop
aam
imul
fimul
fs
arpl
lea
(bad)
aam
sbb
pop
cmp
mov
or
cmc
dec
mov
rol
into
call
inc
aad
rol
loop
ins
jmp
ror
xchg
dec
mov
push
jl
jg
jle
aam
in
fistp
cmp
out
jmp
jmp
mov
(bad)
lahf
mov
retf
dec
mov
into
dec
or
pop
retf
sti
retf
test
es
(bad)
adc
or
dec
repz
dec
xor
mov
add
or
cmps
lock
repnz
fsubp
fld
dec
int
ins
cmp
stos
pop
push
jle
call
test
dec
int3
sub
fsubr
fnstsw
dec
xchg
shl
xlat
call
scas
stc
add
fnstenv
mov
inc
pop
sbb
call
call
sub
adc
push
retf
shl
mov
jmp
in
int
cmp
pop
dec
inc
jb
mov
lods
jnp
fnclex
arpl
sub
sbb
cs
ds
cwde
mov
loop
fstp
push
or
jnp
or
jle
clc
push
ss
jge
or
mov
and
jnp
jmp
add
pushf
cs
pop
nop
xchg
imul
lea
fwait
int
cmp
sti
push
int3
ss
sti
retw
push
jge
mov
icebp
add
xchg
pop
xor
dec
in
jnp
or
mov
add
inc
aad
gs
dec
imul
test
mov
xor
mov
jge
sub
sahf
or
xchg
or
fwait
xor
stc
jmp
or
xchg
or
scas
daa
push
rol
sti
jnp
pop
sbb
cld
in
and
xchg
jge
fst
sbb
or
add
dec
jnp
pop
sub
retf
push
das
stc
mov
fisttp
sbb
test
scas
mov
les
and
ret
cdq
ds
mov
popf
jl
inc
pop
int
mov
std
dec
fstp
or
xchg
sub
pop
pop
dec
add
sub
mov
push
out
sub
arpl
sti
xchg
add
test
stc
jmp
imul
dec
lods
and
(bad)
in
scas
sub
in
sar
into
mov
adc
sub
in
ds
mov
mov
lea
pop
retf
arpl
inc
call
lock
jmp
dec
shl
and
add
mov
inc
xor
push
mov
fisub
adc
pop
das
push
jmp
sub
aad
pop
cmp
pop
jne
in
dec
loopne
sub
fnstcw
and
mov
cmp
jb
fdivr
stos
shl
repnz
cli
fwait
cmp
dec
test
int
mov
in
mov
mov
leave
rcr
stos
jne
imul
sbb
fidivr
cmps
jbe
bound
mov
in
cmp
ins
pop
sub
sti
lds
and
push
lods
out
mov
mov
stos
fadd
stc
mov
xchg
jge
in
lea
cld
fld
std
pusha
sub
popa
sub
sahf
aad
cmp
pop
dec
cs
dec
cmp
xchg
mov
aam
sub
ins
std
lods
sub
dec
es
call
adc
stos
adc
cli
fimul
shr
shl
inc
pushf
popf
inc
push
jmp
mov
lods
mov
jo
fmul
push
outs
lods
jb
or
push
cs
sar
jnp
jge
mov
push
scas
test
pop
adc
nop
data16
cli
stc
xchg
repz
add
nop
popf
cmp
aaa
outs
mov
jge
inc
dec
loopne
out
mov
gs
lods
mov
bound
dec
cli
retf
sti
ins
jne
mov
shl
ss
push
add
lea
sub
pop
std
in
pop
push
shl
sbb
sbb
popa
scas
clc
(bad)
pop
inc
push
ins
enter
cld
int
push
pushf
dec
sbb
dec
idiv
fucom
mov
xor
clc
sbb
(bad)
mov
add
push
loope
dec
sub
dec
push
(bad)
cs
iret
pop
fcos
sbb
mov
call
push
jnp
in
fwait
pop
dec
xchg
cmp
dec
stos
and
shl
push
jmp
push
sahf
fmul
sahf
cmp
pushf
scas
popf
mov
sub
fnstsw
mov
jmp
fistp
push
call
jmp
jl
dec
pop
or
sti
sbb
ins
dec
pop
(bad)
sub
fwait
sbb
fs
xchg
in
cmp
mov
gs
(bad)
xchg
pop
pop
jp
cmp
lea
mov
cld
fwait
imul
adc
mov
xchg
shl
lock
dec
lods
scas
mov
or
nop
mov
shr
shl
into
fistp
sbb
rcr
imul
pop
jnp
std
into
or
sub
iret
mov
sbb
mov
jge
out
sub
aaa
xchg
(bad)
mov
sub
ins
lods
scas
out
sub
mov
or
fisttp
cmp
cmc
pop
aad
jmp
fcmovnb
out
cmp
leave
loop
mov
(bad)
or
pop
cmp
pop
dec
push
sub
cli
std
int3
sbb
int
pop
stos
lods
cmps
jge
mov
cli
and
dec
dec
in
mov
popa
push
add
inc
retf
lods
fst
sub
hlt
das
int3
stos
sbb
add
int
jnp
push
sahf
rcr
pop
pop
sub
ds
jp
jne
scas
jg
adc
int3
jo
stos
(bad)
dec
xor
add
and
cli
hlt
mov
cmps
pop
push
inc
sbb
jmp
clc
hlt
int
sbb
ror
iret
xchg
mov
pop
dec
int3
ins
retf
cli
mov
jl
push
jg
inc
inc
fs
retf
aam
cld
jnp
imul
inc
dec
sahf
aad
lea
xlat
popf
lods
mov
pop
std
dec
ret
cmp
shr
jno
jp
mov
int3
sahf
(bad)
in
mov
popf
(bad)
xor
adc
out
cmps
mov
retf
mov
outs
hlt
xor
aam
or
movs
std
xor
dec
pop
sub
sbb
dec
jp
sbb
push
or
imul
fldenv
int3
retf
das
mov
mov
jnp
rol
(bad)
jecxz
rcr
cli
pop
sahf
mov
dec
push
out
mov
cmp
inc
xor
ret
jge
mov
clc
jnp
sbb
jmp
outs
mov
or
xchg
fldcw
push
in
pushf
fcmovnbe
pushf
sti
push
mov
aam
sbb
mov
les
test
or
mov
rcr
les
std
loop
bound
lods
in
out
ins
add
mov
pop
cmp
cmp
xlat
(bad)
mov
dec
leave
ficom
mov
sbb
dec
jle
je
mov
or
fwait
stos
sub
inc
pusha
cmp
sub
mov
imul
imul
ins
popf
fistp
shr
sbb
cmp
mov
mov
jg
in
fucom
lock
pop
pop
or
mov
sbb
test
jnp
push
jle
test
ins
les
mov
lods
int
ins
aam
mov
fs
movs
mov
out
jge
fstp
shl
std
in
sub
ins
loopne
outs
and
icebp
loop
mov
sahf
lods
mov
ins
cmps
inc
cmp
sbb
adc
icebp
cli
int3
sub
mov
push
retf
push
pop
pop
push
in
mov
xchg
dec
fisub
loopne
sub
in
mov
sub
mov
xchg
dec
push
ss
and
lahf
sbb
(bad)
mov
cmp
out
or
cmp
les
sar
aas
lea
jge
nop
sbb
test
lods
int
or
ds
imul
(bad)
mov
les
in
dec
push
jmp
ficomp
fld
mov
add
ficomp
dec
sub
mov
dec
adc
push
push
push
jne
cmp
cmps
lds
and
cld
or
dec
pop
jle
imul
fisub
sbb
adc
lods
or
fidivr
cmp
jle
(bad)
fist
pop
push
movs
lock
or
ds
out
clc
loop
je
fstp
lock
cmp
in
sub
xor
sbb
das
in
mov
jnp
mov
push
jl
std
inc
dec
and
dec
mov
mov
fwait
retf
jle
call
int3
cmp
dec
dec
mov
xlat
ret
ins
mov
mov
rcr
push
ret
sbb
sub
mov
retf
fstp
jne
loopne
movs
xchg
push
dec
idiv
mov
lods
mov
or
and
aas
mov
mov
jl
stos
es
fisttp
pop
shr
into
or
pop
rcl
shl
fucomi
push
lods
icebp
or
xor
push
jno
das
sbb
lods
fwait
sbb
stos
scas
test
std
int
mov
or
scas
pusha
jmp
mov
lea
(bad)
lods
mov
ret
pop
mov
add
mov
mov
in
mov
sahf
dec
mov
pop
dec
loope
je
gs
fwait
sub
push
ror
mov
into
fwait
cmp
mov
ss
sub
push
sbb
pushf
mov
sahf
inc
dec
int
mov
mov
fisttp
mov
cmp
pop
pop
dec
pop
data16
sbb
add
aam
sbb
fidivr
pop
jnp
pop
push
dec
call
mov
in
(bad)
int3
lods
fstp
ds
retf
lods
cmp
ins
lods
outs
fs
mov
mov
fstp
shl
cld
loop
in
out
mov
push
leave
jmp
add
call
inc
dec
mov
push
sub
mov
in
lea
shl
jmp
dec
lods
sub
dec
into
dec
popf
les
sub
add
jnp
out
jge
popf
or
mov
sbb
add
arpl
mov
xabort
ss
jle
shl
lea
(bad)
cmp
or
call
(bad)
jnp
in
in
cmp
aaa
push
ds
stc
(bad)
mov
inc
cmp
or
cmp
ins
mov
sti
pop
mov
out
mov
pop
mov
das
not
cmp
sti
shl
int3
cli
sbb
sub
sahf
mov
cmp
mov
mov
ins
shr
xlat
mov
cli
les
je
mov
push
mov
sti
scas
out
ffree
ins
add
in
sbb
movs
dec
ins
mov
sahf
xor
mov
mov
xchg
sbb
sub
add
inc
adc
mov
imul
leave
mov
lods
popf
sub
mov
sbb
inc
addr16
xor
das
in
bound
dec
push
jecxz
lods
xor
mov
jnp
outs
mov
lea
mov
jge
stc
cmp
lahf
fdivr
psubq
sub
sahf
imul
jmp
push
ins
rcr
jnp
sub
adc
pop
mov
outs
lods
jne
movs
push
pop
jle
movs
lds
cmp
(bad)
mov
or
mov
push
inc
cmp
pop
pushf
and
cmp
imul
(bad)
call
dec
mov
imul
sahf
sub
jl
mov
cli
mov
repz
fmul
pop
fidivr
inc
jmp
or
(bad)
mov
pop
pop
or
(bad)
mov
push
mov
inc
fwait
mov
mov
rol
retf
jge
arpl
ins
scas
jle
pop
pushf
or
(bad)
mov
rcl
jmp
mov
xchg
ss
push
in
adc
xchg
jmp
adc
das
jle
mov
or
mov
in
jnp
fcmovnu
pop
fbld
in
push
mov
inc
sub
pop
add
out
cmp
int3
sub
into
sub
(bad)
cmovg
pop
fwait
mov
or
inc
mov
ds
cmp
stos
jp
pop
imul
add
xchg
mov
cmp
adc
lods
jl
in
cli
in
outs
adc
cld
sub
movs
mov
push
or
into
repz
mov
mov
sti
mov
cld
sti
or
int3
dec
loop
jl
ins
imul
std
add
sbb
pop
into
mov
cli
setl
popf
cmp
(bad)
lods
loop
push
or
cmp
xor
sahf
pop
xor
retf
jb
(bad)
imul
and
sbb
iret
jmp
cmp
lods
mov
int3
fsub
lods
add
pop
pop
dec
push
ins
dec
mov
sar
ror
into
push
mov
imul
lea
xchg
and
or
dec
xchg
xchg
clc
out
inc
or
je
cmp
ret
loopne
sbb
stos
std
ins
jnp
(bad)
sar
cmp
sub
(bad)
icebp
int3
cs
mov
inc
jnp
lods
bound
dec
and
lods
cdq
std
sub
jg
sahf
call
std
imul
sbb
(bad)
mov
lods
sbb
dec
outs
dec
sub
lea
xlat
ror
sub
xchg
pop
std
arpl
push
jmp
nop
popf
std
mov
pop
sti
jle
push
in
imul
push
lock
pop
pop
mov
sti
popf
mov
push
sahf
sbb
dec
int
pushf
sbb
fdivr
cmp
imul
fs
dec
xchg
in
push
fisttp
std
fstp
cmp
in
stos
sub
dec
mov
loope
inc
lock
sbb
mov
(bad)
sub
pop
into
mov
aaa
jnp
scas
das
sbb
out
mov
jmp
sub
jg
fwait
mov
aam
scas
mov
pop
jle
mov
lea
mov
fsub
jle
arpl
inc
mulps
retf
out
mov
or
or
scas
jne
mov
adc
pop
in
mov
xor
push
sti
sub
dec
repz
and
push
retf
sub
mov
jg
pop
sub
pop
push
push
mov
mov
movs
mov
fimul
aam
sbb
cmp
mov
xchg
jl
in
imul
add
aaa
pusha
int
imul
push
fcomi
stos
adc
or
cmp
shl
lea
retf
jp
int3
stc
pop
fidivr
sti
pushf
or
lods
dec
dec
sbb
cld
jl
scas
ins
cdq
pop
dec
jg
jp
sbb
pushf
mov
shl
rcr
jmp
adc
int3
outs
retf
(bad)
nop
or
mov
add
aad
fnstcw
rol
jmp
rcl
jge
cld
xlat
outs
mov
(bad)
jnp
(bad)
fsubr
pop
fcmove
sub
jp
dec
push
pop
pop
fcomi
mov
push
out
pop
and
mov
pop
jmp
ins
push
(bad)
call
rcl
ins
fld
clc
pop
test
jl
imul
or
in
sbb
sbb
cmp
ficomp
sbb
sar
push
mov
out
mov
(bad)
jle
push
cmp
retf
and
into
push
imul
popf
shr
aaa
cli
pop
pop
mov
les
ins
cmp
adc
call
jne
sub
sub
mov
mov
outs
pop
sti
push
sbb
cmp
dec
(bad)
xchg
lea
dec
sbb
mov
(bad)
xlat
mov
jmp
(bad)
pop
retf
rcl
pop
mov
out
adc
loop
lock
push
xchg
sti
ins
jnp
cs
and
xlat
repnz
pop
push
add
or
jmp
sub
mov
sti
rcr
sub
add
fldcw
fwait
dec
lds
cmp
cmp
lods
shr
outs
(bad)
sub
mov
mov
pop
pop
stos
arpl
out
into
ins
mov
pop
aam
mov
dec
stos
jl
push
fisub
jns
mov
jmp
stc
pop
sti
sbb
ja
fcmovu
inc
inc
int
push
mov
test
(bad)
add
or
popa
(bad)
sbb
sub
ins
jmp
imul
mov
outs
mov
fucomp
mov
in
xchg
jnp
mov
xor
pop
fcomi
fstp
sti
fcmove
xchg
mov
dec
mov
inc
retf
jg
or
ins
add
pop
dec
mov
mov
(bad)
fucomi
cmp
mov
jb
dec
lods
pop
or
pop
outs
adc
(bad)
out
mov
in
inc
lods
pop
scas
int
mov
mov
ins
fisttp
int3
stos
pop
or
lds
cmp
lods
(bad)
out
fcmovne
jle
cmp
bound
retf
jp
(bad)
mov
mov
(bad)
(bad)
adc
or
outs
idiv
adc
pop
add
pop
ins
js
sahf
pop
mov
pop
enter
jmp
ds
xchg
jle
push
mul
jmp
jge
lods
pop
fstp
ror
stos
pop
pop
shl
add
fiadd
in
inc
xor
repz
pop
mov
sbb
add
mov
test
add
rcl
or
stos
adc
jmp
(bad)
ins
stos
ds
pop
pushf
jg
xlat
outs
int
mov
sbb
aad
in
push
cmps
dec
xchg
push
sar
cmp
fld
ins
loopne
outs
jl
fwait
push
sti
call
cs
or
int
cli
sbb
cld
sub
jo
jnp
pop
outs
sub
movs
aam
mov
or
daa
sub
or
mov
cmp
idiv
dec
jnp
rcl
or
ds
jb
sbb
out
and
popf
(bad)
pusha
fcom
push
inc
mov
sbb
cmp
or
sub
push
aam
popf
cmp
sbb
ja
iret
jnp
outs
int
sbb
dec
dec
int3
aad
rcr
pushf
mov
pop
fnstcw
lea
mov
jmp
push
in
jl
mov
jae
jp
fdivr
mov
sti
retf
sahf
dec
pop
sub
ins
out
test
pushf
cmp
sbb
sub
imul
cmp
shl
lea
ret
pop
sub
cld
mov
fsubr
jle
push
sbb
arpl
jmp
out
jge
or
es
add
into
enter
(bad)
jecxz
ja
into
retf
sbb
lea
popf
mov
push
sbb
push
sub
int
ins
lods
and
lods
push
popf
lea
fsubr
cs
sahf
sbb
ds
std
sbb
ins
or
dec
loopne
jb
push
int3
push
stos
fidivr
jo
std
cmp
daa
int
hlt
or
fs
cs
jle
cmp
sbb
jmp
mov
ss
(bad)
lods
jge
sbb
jmp
fisttp
std
ds
cs
fstp
or
sub
das
fisttp
sbb
bound
shr
icebp
inc
sub
dec
lds
jmp
mov
iret
sbb
dec
int
mov
cmp
mov
in
popf
or
pop
fcmove
cmp
aam
cmp
into
mov
ret
outs
out
ins
aas
xchg
imul
loopne
retf
in
(bad)
sbb
mov
sbb
fld
pop
bound
ja
cdq
adc
fsubr
sub
jle
fwait
jge
add
inc
cmp
(bad)
mov
out
xchg
loopne
or
imul
and
retf
ins
mov
cli
push
cld
(bad)
call
int3
imul
sub
pushf
mov
iret
pop
(bad)
into
int3
pop
dec
cmp
stc
jmp
lods
retf
mov
mov
sahf
jp
cmp
retf
pop
sbb
inc
loopne
enter
fwait
(bad)
mov
(bad)
push
fst
or
dec
pop
mov
mov
aam
pop
jnp
popf
aad
inc
jl
inc
(bad)
jmp
stos
sbb
in
pop
test
dec
stos
fwait
stc
ret
in
sbb
sti
stc
or
jnp
cli
imul
into
mov
push
mov
mov
or
jp
add
int3
mov
jg
popf
inc
fstp
(bad)
(bad)
or
rol
stos
mov
lods
xlat
mov
push
dec
sbb
out
out
ds
mov
pop
xor
popa
int3
std
sbb
mov
in
sti
adc
mov
movs
mov
mov
xchg
dec
mov
lods
pop
std
mov
jnp
push
inc
lods
aad
in
movs
pop
sub
iret
iret
out
jge
push
in
push
mov
aam
lods
jnp
mov
pop
mov
pminub
cmovl
movs
adc
pop
jo
jne
aam
or
or
pop
hlt
dec
lods
fwait
mov
in
int3
lds
into
ds
sbb
std
dec
mov
rcl
or
sbb
mov
sbb
xchg
stc
or
cmovge
mov
lods
ficom
fwait
imul
pop
pop
int
dec
sahf
pushf
jmp
jnp
add
stc
scas
in
fimul
jge
fiadd
mov
cmp
outs
pop
dec
movs
sbb
fcom
sahf
sub
dec
enter
sbb
jp
out
ins
stos
ins
outs
jmp
mov
fild
cli
mov
sub
adc
ins
dec
in
sbb
sti
mov
scas
cmp
outs
pop
pop
imul
mov
call
mov
sub
cld
sar
dec
call
cmc
push
jmp
int
sub
int3
dec
cli
jge
mov
sub
and
pusha
gs
test
push
jo
ins
mov
jl
popa
dec
cmc
xchg
pop
in
jmp
lea
mov
fucomi
mov
dec
dec
mov
aad
fmul
fimul
outs
xchg
ror
fcmovb
jl
fcmovnu
(bad)
mov
addr16
cli
mov
es
(bad)
loopne
aas
lods
mov
(bad)
aad
jecxz
sub
mov
iret
jmp
popf
add
(bad)
fucomip
lahf
repz
std
cld
jmp
sbb
sbb
leave
outs
out
ret
lods
les
jp
je
sub
mov
cld
sub
sub
cli
pop
dec
pop
mov
push
sbb
pop
aam
mov
pop
sbb
cmp
mov
or
pop
cmp
aad
ins
and
jp
ror
pop
sahf
aam
jnp
scas
sbb
retf
pop
mov
or
lea
add
ficomp
mov
sub
fs
sub
cmp
aas
cli
mov
mov
out
neg
(bad)
int3
imul
push
inc
sbb
pop
lods
pusha
out
into
push
repnz
or
push
mov
ins
jnp
ret
jmp
fisubr
or
jle
mov
fnstsw
jmp
ror
pop
cld
mov
pop
(bad)
shr
adc
sbb
sbb
jmp
or
pop
test
mov
imul
cmp
mov
stos
inc
into
xchg
leave
and
loope
pop
jmp
dec
dec
dec
enter
pop
cmp
call
cmp
jmp
mov
lods
cmp
push
retf
push
cld
mov
in
dec
fnstenv
pop
and
out
mov
push
mov
mov
sti
sub
out
mov
pop
jmp
outs
(bad)
lods
sar
dec
jge
into
iret
lds
jmp
aaa
fisubr
cmp
push
fsubr
imul
mov
push
push
test
dec
imul
in
lods
in
ins
pop
ins
fild
mov
ret
sub
jb
ja
fstp
stos
sbb
shl
jle
sti
pop
cmp
in
not
dec
rcr
sub
pushf
fs
hlt
lods
cli
jge
not
sub
(bad)
es
fnsave
icebp
mov
std
sti
pop
sub
jle
mov
sub
jnp
scas
jmp
ins
leave
mov
pushf
rcr
cs
popf
outs
add
fnstsw
inc
push
adc
icebp
sbb
lds
ror
pop
in
and
pusha
stos
int3
jge
cmp
or
dec
(bad)
into
pushf
push
ror
rol
int3
fstp
mov
jl
cs
ins
pop
fwait
pop
dec
call
push
jp
lea
push
shr
ins
lea
sahf
or
pop
cmp
mov
jnp
inc
jmp
cld
mov
mov
lahf
aaa
cmp
mov
lods
mov
imul
int3
aaa
stos
lea
sub
xchg
mov
(bad)
jecxz
jmp
ins
popf
sbb
mov
pop
ins
dec
(bad)
shr
lods
rcr
shl
sbb
push
ins
in
arpl
fcomp
pop
outs
retf
fwait
add
aaa
dec
fs
jmp
jnp
fstp
jb
lea
(bad)
in
arpl
jp
pop
fwait
mov
xor
jnp
dec
dec
data16
jae
and
push
fwait
sub
retf
in
fidivr
mov
enter
cld
push
retf
rcl
jnp
mov
push
mov
xchg
stc
lods
adc
mov
arpl
in
popa
inc
(bad)
mov
and
sub
sbb
push
pop
dec
push
addr16
jmp
jnp
cmp
dec
sub
dec
imul
in
xor
(bad)
nop
push
pushf
mov
adc
mov
push
pop
gs
push
popf
add
push
jecxz
mov
mov
inc
dec
fst
or
fistp
nop
adc
test
mov
sub
mov
sahf
in
jmp
stos
clts
pop
in
leave
rcl
(bad)
dec
leave
cdq
cmp
ins
xor
rcl
sub
ror
or
ins
out
pop
into
pop
stc
adc
jmp
mov
scas
push
std
jmp
and
pop
imul
or
dec
pop
int
xor
add
dec
outs
stc
inc
pop
lahf
adc
push
into
xor
mov
retf
or
call
push
fstp
push
mov
popf
sbb
jmp
inc
lods
fisttp
push
int3
or
in
jnp
lods
dec
leave
jecxz
sbb
cli
or
in
push
pop
pop
int3
mov
pop
loopne
pop
push
or
outs
jg
in
dec
or
cmps
popa
jmp
sub
out
cmp
pop
or
out
fwait
mov
ins
sbb
jge
mov
mov
fsubrp
pop
dec
pop
or
or
imul
fsubr
cld
cmp
sbb
int3
pop
cmp
jnp
repnz
scas
mov
(bad)
shl
stos
sti
xor
jg
jecxz
pusha
std
popf
je
jae
dec
pop
fcomp
pop
pushf
out
ret
ss
cmp
in
outs
or
ret
dec
mov
in
mov
inc
dec
sub
test
push
sbb
pop
push
jmp
jg
and
xchg
bound
in
cwde
jle
sbb
and
not
xchg
sbb
mov
jge
jae
pop
mov
dec
mov
ror
xor
aad
mov
add
push
dec
jns
not
sbb
mov
pushf
in
test
movs
or
ss
ins
xchg
jo
fdiv
popf
sub
cmp
int
pusha
push
add
pushf
fisub
cli
push
ins
pop
sub
cmp
into
push
lea
mov
loopne
lahf
cmp
xlat
dec
ins
mov
and
imul
dec
popf
lods
retf
or
jge
fsubrp
test
cmp
retf
fs
ror
or
push
mov
mov
(bad)
mov
xor
in
enter
fsubrp
mov
mov
jge
retf
push
pop
jmp
stos
jo
bound
mov
dec
retf
scas
inc
pop
xor
into
ins
in
stos
jnp
mov
les
inc
pop
dec
jge
mov
pushf
add
dec
mov
dec
jp
scas
cmp
psubusw
ins
in
pushf
push
mov
dec
scas
push
sub
cmp
cmp
push
ficom
nop
pop
xor
fucomip
dec
mov
pushf
or
out
dec
fisttp
jmp
imul
std
out
lds
lea
pop
rcl
xor
jnp
call
cmp
test
int3
pop
sti
std
das
int
stos
mov
pop
push
fstp
in
cmp
movs
mov
or
shl
fimul
cmp
push
popf
cli
or
stos
ds
sar
sti
sbb
inc
outs
aam
scas
mov
pop
dec
sahf
xlat
fsubr
int
pop
mov
sti
gs
in
cmp
(bad)
fwait
int3
lods
stos
ins
jmp
into
popa
mov
into
retf
dec
in
mov
jae
mov
sbb
or
pop
in
jge
pop
cli
retf
cmp
dec
sbb
and
sbb
mov
mov
pop
mov
fs
jle
add
lods
mov
std
adc
sub
lods
push
cmp
clc
call
ins
adc
mov
sar
jmp
sti
jmp
mov
sbb
in
jl
sbb
jbe
xchg
out
stos
pop
dec
push
imul
xor
fwait
sar
cs
add
jp
fild
mov
mov
push
fisttp
fwait
int3
cmp
sbb
cli
gs
ins
out
adc
xor
mov
sbb
cmp
out
xchg
and
jno
dec
mov
jge
loop
sbb
add
pop
aas
sti
mov
add
icebp
jg
cmps
xor
jge
outs
add
and
push
rcl
arpl
sub
arpl
leave
sbb
xchg
iret
outs
ds
jl
ja
jmp
dec
mov
lahf
and
lahf
(bad)
jae
in
pushf
cmp
sbb
ins
(bad)
sub
mov
push
mov
ins
and
push
xchg
xor
and
mov
push
sbb
jp
or
ficomp
int
xor
xchg
imul
loope
fidiv
mov
xchg
daa
mov
cld
xor
add
(bad)
ins
inc
mov
mov
or
or
mov
jne
call
out
(bad)
hlt
or
adc
dec
iret
int3
aam
mov
mov
jge
jnp
xchg
mov
das
push
pop
scas
xor
retf
pop
xor
in
dec
cmp
sahf
pushf
xchg
into
ds
in
xor
pop
jmp
xchg
cld
int3
dec
sahf
loopne
and
fistp
cmp
fisttp
or
jnp
cdq
pop
cmp
jle
je
mov
mov
jae
movs
sub
pop
aas
lods
jno
lahf
mov
ret
lods
and
sub
sub
push
stc
outs
push
cmp
xchg
pop
xlat
inc
sbb
mov
cmc
and
inc
js
dec
mov
mov
jp
xlat
lea
jge
push
loope
shl
into
or
dec
and
xchg
jg
sar
popa
sbb
push
out
mov
jmp
jl
dec
cdq
jmp
loop
inc
mov
pushf
aaa
in
xor
fistp
and
stc
cdq
sub
pop
mov
mov
jge
mov
popa
cmp
dec
xor
stos
adc
ins
inc
popa
sub
adc
ins
pop
nop
dec
int3
icebp
test
pop
jnp
fbld
sub
pop
cld
test
and
in
xchg
jmp
pop
(bad)
xor
xor
mov
sub
repz
dec
icebp
sub
push
(bad)
ds
ja
ja
pop
int3
mov
jmp
pop
sub
mov
outs
sbb
sub
ins
es
loopne
aas
enter
adc
aas
or
dec
jb
arpl
repz
js
push
mov
fisttp
cmp
fs
mov
cli
push
inc
hlt
cmc
fwait
jg
fild
xchg
into
mov
pop
mov
push
aaa
out
out
ret
int3
sub
(bad)
add
jp
mov
push
pop
inc
inc
mov
mov
cmp
dec
stos
xchg
in
lahf
jb
inc
out
outs
iret
outs
or
imul
or
in
repz
jp
lahf
cmp
sub
xor
sti
(bad)
mov
std
sti
lods
retf
ret
sti
push
jns
into
sbb
mov
int3
icebp
xor
cmc
xor
jecxz
call
inc
push
ret
data16
xor
(bad)
scas
inc
jb
fs
aad
into
sub
mov
cmp
loop
add
mov
xor
imul
neg
lds
xor
cmp
xchg
cmp
call
mov
(bad)
lahf
pushf
(bad)
xchg
ds
cli
aaa
in
cmp
adc
hlt
ret
push
xor
mov
repnz
addr16
jbe
rcl
jmp
div
inc
and
add
movs
psraw
rcl
jp
adc
pop
sub
std
pop
popa
jg
mov
ret
dec
sub
data16
xchg
test
movs
js
inc
out
sub
mov
add
or
cwde
imul
adc
or
imul
push
xor
test
mov
retf
nop
fsub
fmul
inc
xchg
mov
cmp
dec
loopne
inc
sbb
shl
(bad)
in
cmc
fsubp
aam
cli
inc
scas
aam
sar
sti
push
pop
add
clc
aam
in
xchg
jg
inc
(bad)
jmp
popa
dec
push
in
icebp
pop
fmul
sub
(bad)
xchg
test
retf
jno
in
add
mov
repnz
xchg
(bad)
arpl
cli
sbb
clc
jmp
test
std
nop
pop
rcr
stos
mov
fcom
fmul
sti
inc
fdiv
fstp
jno
mov
outs
add
fdiv
mov
mov
xchg
jle
fadd
cli
(bad)
sub
test
mov
out
outs
int3
mov
or
mov
aam
call
in
or
out
imul
leave
int3
loop
add
mov
adc
cmp
dec
loope
fdivr
sti
push
mov
icebp
add
push
(bad)
push
gs
adc
fmul
(bad)
fnstsw
clc
mov
cld
push
jmp
mov
ins
sbb
fstp
sub
fcomp
stos
shl
neg
or
lods
sub
mov
in
mov
rcr
fcom
or
mov
dec
jge
icebp
sub
aam
fimul
fsub
dec
jge
mov
sub
scas
int
fistp
mov
int
xor
sbb
and
iret
imul
mov
ins
sbb
mov
sahf
cdq
or
fdivrp
lock
inc
movs
cmp
das
(bad)
(bad)
and
sti
fcmovu
sbb
cmp
pushf
cmp
int
sub
pop
fmul
clc
ins
add
push
sub
stc
xor
mov
cdq
out
mov
shrd
pop
sahf
cmp
pop
fldcw
mov
push
data16
mov
xchg
ins
or
dec
pop
mov
mov
sub
jns
(bad)
mov
fisubr
sbb
push
movs
mov
ds
sub
lods
dec
mov
ja
clc
fist
fdivp
lods
fdiv
pop
into
mov
or
fcom
int3
in
fdivrp
out
int3
call
fisttp
dec
ret
fidivr
jmp
daa
iret
pop
ror
add
retf
sti
in
mov
js
pop
ret
pop
fstp
fs
inc
sbb
mov
xchg
imul
(bad)
outs
out
fcomp
and
outs
sbb
int
jmp
pop
lea
xor
fmulp
pop
or
cmp
pop
(bad)
aas
mov
sbb
adc
and
pop
or
fmul
pushf
sub
sti
scas
clc
mov
cli
add
out
fsubr
lea
mov
mov
mov
call
cli
adc
push
jmp
pop
fsubr
sbb
or
dec
loopne
jnp
call
fdivr
dec
ins
pop
pop
sub
cwde
shr
mov
sbb
fidivr
push
stc
das
fdivr
fimul
retf
out
sub
fcomp
inc
jmp
push
fld
pop
push
ins
lea
sahf
int3
fcompp
dec
pop
mov
jno
xor
fucomi
das
popf
repz
int
pop
dec
dec
fsub
test
or
fwait
sar
in
lods
test
mov
test
fimul
pop
push
xor
mov
out
dec
fsub
sub
mov
or
pop
cld
push
pop
mov
cli
sub
add
sbb
lock
sbb
fdivr
fwait
outs
stos
sub
sti
dec
and
dec
scas
jl
sub
cmp
pop
scas
enter
fdivr
ud1
popf
lods
jp
jns
jmp
cld
jmp
fdivr
cdq
ds
lods
stos
push
pop
das
jge
inc
jnp
push
lea
adc
sub
jmp
lock
lods
adc
or
xlat
(bad)
jg
sti
xor
imul
cmp
(bad)
lods
pop
or
std
outs
dec
ins
jle
push
jmp
outs
cdq
lahf
dec
cli
in
jmp
in
mov
pushf
pop
mov
pop
push
xor
inc
(bad)
mov
rcr
jge
mov
jl
stos
jmp
or
mov
(bad)
and
mov
pop
push
fist
xlat
enter
lahf
idiv
ds
mov
(bad)
shr
mov
xchg
pop
ins
pop
mov
cmc
imul
imul
pop
jg
lahf
pop
fwait
dec
nop
cmp
ja
jge
sub
dec
inc
mov
popa
test
sub
in
mov
lods
in
(bad)
sbb
jmp
in
pop
or
and
std
push
aas
ins
sahf
mov
pop
or
jl
rsm
xor
sub
mov
int
jecxz
add
in
call
imul
jbe
movs
jle
setl
dec
pop
retf
pop
xor
adc
fcmovnu
add
fidivr
push
call
push
addr16
scas
rcr
sub
pop
popf
hlt
fmul
cld
in
rol
xchg
dec
xor
je
cld
cs
aam
sbb
jmp
fucomp
or
es
jns
fdivr
lods
pop
push
pop
popf
dec
mov
cmp
enter
jecxz
or
iret
(bad)
fcmove
jecxz
idiv
mov
inc
jge
aas
repz
sub
mov
ins
jmp
jge
inc
fild
lods
mov
pop
lods
popa
daa
dec
xchg
outs
xor
add
(bad)
in
lods
sbb
dec
pop
dec
dec
jmp
push
jmp
or
lea
jnp
jg
dec
mov
fdiv
add
inc
imul
dec
mov
in
sbb
scas
mov
fdiv
stos
fstp
int3
daa
lods
push
sub
ss
lahf
cmp
aas
pop
fisttp
retf
fs
dec
mov
and
outs
cs
rcr
gs
std
pushf
mov
cld
push
jl
sbb
sti
pop
lods
push
jno
mov
in
mov
ds
test
outs
mov
pop
pushf
shl
sbb
or
sti
cmp
pop
scas
jmp
lods
jmp
jge
fsubr
ins
gs
lea
cmp
push
pop
(bad)
mov
ins
enter
xor
scas
(bad)
mov
xchg
sub
xlat
mov
fisub
sbb
fwait
std
xor
mov
in
jge
or
int
cli
mov
sub
jbe
stos
mov
ins
shr
pop
mov
pop
sub
mov
pop
ins
or
jge
jae
stos
mov
pop
imul
fstp
sub
cmp
mov
aam
std
sbb
fisubr
sbb
retf
(bad)
jle
mov
mov
mov
and
in
ins
lea
sbb
ins
fistp
aam
retf
push
sub
mov
dec
cmp
outs
in
int3
ins
mov
mov
pop
push
mov
outs
scas
test
sbb
ins
sub
mov
xchg
or
into
fwait
or
imul
cs
pop
pop
mov
or
loope
xor
arpl
leave
mov
pop
fiadd
pop
imul
dec
dec
fistp
int3
inc
dec
shl
mov
push
jmp
mov
pop
cmp
(bad)
sahf
dec
pop
shl
push
sbb
stos
push
pop
cli
ins
popf
dec
cwde
call
sub
mov
repz
enter
std
jle
or
push
int
push
mov
hlt
loope
mov
inc
pop
xor
aas
sub
jp
scas
sbb
dec
jl
mov
mov
jno
retf
in
std
add
test
sub
add
(bad)
mov
scas
cmp
mov
sub
sbb
push
sub
clc
mov
pusha
aas
sahf
jnp
adc
das
call
push
test
sub
cmp
loopne
(bad)
int3
sub
rcr
sti
dec
push
jge
std
out
shr
rcl
push
pop
or
pushf
cmp
enter
cli
mov
jmp
or
push
cmp
mov
jg
mov
jmp
iret
dec
fistp
adc
stc
xlat
es
or
mov
push
sbb
mov
mov
ins
mov
mov
sub
(bad)
cmp
sub
ror
lods
or
mov
setnp
int
mov
ror
ins
cmp
add
das
jge
jmp
pop
retf
pop
ja
stos
sbb
jmp
pop
mov
pop
xor
mov
mov
cmp
push
pop
mov
sbb
sbb
jnp
mov
ss
fcmovnb
jge
(bad)
mov
lods
rcl
push
fisttp
or
in
push
call
sub
mov
pop
ficom
shl
mov
int3
repz
mov
int3
sbb
cmp
(bad)
jmp
add
mov
addr16
stos
mov
sti
in
ins
pop
cs
fs
sbb
sbb
out
cdq
popf
mov
outs
dec
cmp
dec
or
ror
mov
(bad)
(bad)
and
in
xchg
int
aad
cmp
push
jecxz
xchg
mov
jp
dec
pop
mov
push
mov
sub
imul
pop
or
std
in
popf
mov
push
add
sub
(bad)
mov
sub
stc
stos
std
out
push
mov
inc
pop
outs
jmp
ins
mov
cmp
retf
pop
push
push
out
popf
fistp
ins
mov
aaa
mov
inc
lods
or
jl
lods
xor
out
aas
mov
xchg
add
cmp
cmp
rcr
cmp
push
fwait
mov
push
cmp
cmp
retf
push
cmp
sbb
rcr
(bad)
cld
in
push
xor
jl
push
cmp
mov
mov
cwde
repz
stos
stos
scas
stos
jle
and
xchg
ins
rol
cmc
rcl
xchg
jg
mov
gs
jmp
rcr
jmp
cld
jno
out
(bad)
fidiv
sbb
mov
mov
dec
cmp
test
out
imul
pop
xor
mov
(bad)
repz
loop
std
lock
cmp
push
clc
mov
xchg
mov
jge
xchg
pop
mov
fild
push
(bad)
mov
or
shr
xor
sub
mov
sub
dec
out
mov
cs
dec
xor
int3
loope
stos
push
leave
add
pop
fsubr
sub
aad
sbb
fwait
stos
pop
lds
or
jl
out
gs
pushf
cs
cdq
cmp
ds
je
sbb
dec
mov
xchg
pop
ins
fimul
retf
jp
sbb
call
sbb
cmp
jmp
sti
jge
mov
mov
sbb
pop
jg
or
jbe
jle
pop
in
ins
outs
xchg
pushf
cdq
lea
pusha
in
loope
cmp
sar
fwait
adc
sbb
inc
inc
xchg
add
pop
mov
dec
les
std
xchg
jbe
dec
mov
sub
dec
out
cmp
xchg
add
inc
adc
cmp
es
pop
in
jecxz
adc
add
cmp
push
ds
add
lods
adc
in
sbb
mov
lldt
xlat
lahf
xchg
ins
mov
mov
or
sbb
in
sti
cmp
mov
mov
fs
xchg
xchg
jl
push
(bad)
call
test
xor
jg
fisttp
xchg
cli
sbb
pushf
retf
jo
mov
movs
in
pushf
or
push
popf
dec
ins
push
push
adc
dec
jnp
sub
mov
and
pop
dec
fwait
popf
scas
sbb
call
jno
jnp
mov
pop
retf
xor
or
sbb
cmp
imul
add
mov
cld
and
in
add
sub
cmp
pop
mov
jno
sbb
jnp
stos
cmp
push
pandn
sub
rol
test
cld
mov
mov
(bad)
jmp
pop
xchg
mov
sbb
push
mov
cld
mov
pop
jge
add
add
out
pop
sub
mov
aaa
push
test
arpl
nop
add
pand
sbb
in
scas
adc
dec
adc
or
enter
xlat
jmp
or
sbb
jg
xchg
fcom
and
and
in
test
jl
sti
dec
xor
in
bound
or
sbb
mov
xor
lahf
sahf
xor
ror
xchg
loop
pop
call
(bad)
cld
jl
leave
ror
sbb
and
hlt
cmp
mov
or
jns
popf
pop
mov
icebp
adc
mov
(bad)
mov
(bad)
rol
retf
xchg
jle
mov
add
xchg
mov
icebp
push
pop
lahf
sbb
xchg
aas
adc
mov
into
or
sbb
loopne
sbb
sbb
cmp
lock
out
hlt
xor
mov
mov
div
arpl
mov
mov
push
cmp
mov
dec
xchg
dec
mov
cld
mov
pop
shl
cmp
and
mov
enter
jp
push
cdq
cmp
mov
inc
xchg
mov
push
out
dec
rcr
pop
in
fwait
jge
test
mov
lea
add
mov
xor
dec
mov
shl
push
bound
pushf
add
lock
pushf
sub
mov
adc
sub
enter
jae
mov
push
(bad)
xor
cmp
mov
and
fnstsw
xor
pop
mov
mov
leave
inc
mov
cmp
fcom
and
out
daa
xor
fbld
jo
jnp
xor
cmp
mov
sbb
shl
test
inc
or
or
jl
xchg
outs
add
in
loopne
pop
cmp
mov
or
sbb
adc
sbb
xor
cmp
jb
dec
pop
push
mov
push
ror
push
cdq
xchg
stos
int
arpl
and
cmp
push
jbe
push
ss
xor
jno
jbe
inc
out
bound
and
ja
mov
bound
enter
sti
push
pushf
sti
cwde
pop
sbb
push
or
fldenv
adc
lock
lea
push
lock
push
mov
and
mov
inc
js
mov
sub
jl
fcmovnu
xor
out
push
push
(bad)
jae
je
in
int3
hlt
inc
xchg
jns
xchg
sar
hlt
jp
cmp
mov
and
and
std
or
pop
adc
(bad)
out
aaa
out
daa
cmp
xor
js
dec
lock
sub
in
sub
pop
jno
and
mov
pusha
shl
add
imul
and
popa
mov
loop
push
or
mov
div
pop
xor
jge
xor
xor
call
bound
ja
rol
sbb
outs
cmc
lea
or
test
cmps
mov
(bad)
jbe
push
or
jae
sbb
enter
xchg
sti
add
dec
adc
inc
scas
jmp
mov
and
dec
mov
push
hlt
xchg
xchg
xchg
jno
ss
push
pop
mov
push
ret
dec
push
jo
movs
jb
out
out
sub
push
aad
mov
cld
add
dec
mov
in
mov
cmp
ins
sub
in
xchg
shr
or
fistp
and
cs
fild
cs
xor
cmp
cwde
ss
mov
cmp
push
aam
ret
(bad)
sbb
sbb
sbb
xor
adc
xchg
dec
cmps
push
and
inc
jnp
jns
mov
lods
(bad)
xchg
xchg
cdq
push
out
pushf
in
sub
xchg
cmps
push
mov
or
pushf
cwde
mov
xchg
dec
pushf
mov
addr16
dec
ficom
pushf
add
push
hlt
sbb
addr16
sub
or
xchg
or
int
mov
(bad)
dec
mov
or
(bad)
out
popa
dec
fcom
push
jmp
cmp
addr16
lahf
jns
pop
or
xchg
pop
bound
sub
ret
iret
bound
ins
in
std
add
xor
mov
push
into
and
sbb
inc
dec
or
mov
ret
push
call
es
movs
inc
jns
add
mov
call
adc
inc
or
adc
xor
mov
mov
jg
lock
dec
cmp
lods
add
push
xchg
or
xchg
bound
pop
repz
cmps
aaa
inc
cmps
jge
aaa
sub
sbb
in
or
hlt
add
data16
test
ret
xchg
jns
sub
cs
data16
xor
es
arpl
into
retf
lea
(bad)
out
mov
cmp
addr16
lods
outs
pop
lods
iret
div
pop
sub
inc
jns
leave
dec
xor
in
and
adc
mov
into
mov
mov
push
mov
stos
or
xor
lea
ret
lahf
and
or
jecxz
jne
lods
add
or
and
addr16
inc
mov
sbb
rcl
loope
cmp
mov
icebp
or
mov
and
out
inc
test
out
xor
adc
mov
and
bound
cmps
mov
xchg
je
repz
mov
js
jg
mov
ret
dec
cmp
jmp
in
stc
xchg
ja
ret
mov
popf
ins
cs
sbb
inc
gs
mov
add
pushf
in
add
dec
and
mov
inc
jg
or
mov
xchg
std
gs
dec
sub
add
loope
gs
inc
dec
or
test
out
add
int
es
das
loope
test
xor
int
adc
xchg
mov
inc
mov
adc
in
cmps
mov
jp
loope
sub
popf
and
mov
inc
sub
mov
pop
add
in
xor
cmp
push
daa
arpl
(bad)
inc
xchg
cmc
push
jp
dec
movs
jb
adc
mov
mov
cmp
out
mov
xlat
push
jmp
and
cmp
add
sub
stos
cmp
mov
jg
arpl
out
cmovae
push
test
sub
mov
mov
cmp
cld
mov
sub
mov
or
out
add
repz
lods
mov
iret
adc
inc
and
add
in
out
icebp
out
cmps
sub
xor
mov
cvtdq2ps
ss
aaa
sub
mov
dec
stos
pop
adc
jle
arpl
or
or
movs
in
mov
pop
fidivr
arpl
(bad)
jne
pop
jne
and
sahf
mov
add
dec
jbe
pop
xchg
mov
and
in
adc
pop
inc
dec
lahf
mov
fs
jmp
pop
(bad)
adc
mul
shl
inc
sbb
ja
gs
or
add
stos
test
(bad)
data16
daa
fcom
push
retf
sti
jge
lock
cmps
jns
shr
mov
mul
cmp
addr16
mov
or
xor
arpl
aam
loop
ret
int3
adc
pop
cmp
and
dec
push
retf
fisubr
rcr
jae
mov
jmp
mov
or
adc
push
nop
mov
dec
sub
dec
mov
dec
outs
fild
push
pop
pop
scas
sbb
sub
jne
sub
and
ins
icebp
enter
scas
sti
fwait
lea
aaa
cmp
stos
adc
xor
mov
sub
pop
cs
add
(bad)
sub
inc
sahf
shr
hlt
popf
add
lahf
mov
dec
or
cld
sbb
mov
mov
mov
mov
mov
jle
rcl
mov
pop
mov
out
jns
mov
sub
outs
pop
mov
xor
icebp
jns
sbb
imul
sub
(bad)
sbb
pop
lock
sub
retf
pop
in
movs
es
in
mov
(bad)
cmp
aam
retf
jge
popf
sbb
(bad)
xchg
jb
xchg
loop
mov
retf
adc
sbb
ins
subps
xlat
lods
lea
push
(bad)
cmp
pop
sti
sbb
outs
jge
call
mov
jg
pop
into
movs
push
fwait
cmp
outs
test
push
lods
stc
sbb
nop
hlt
sub
lea
push
or
sti
cmp
popf
aad
mov
mov
sbb
lock
mov
pop
invd
call
pop
sub
sub
cld
iret
(bad)
enter
pop
sar
(bad)
out
cld
outs
cwde
adc
jl
shl
in
hlt
and
inc
mov
popf
push
or
sbb
dec
ds
xor
inc
cwde
pop
mov
lods
stos
lock
mov
xchg
pminsw
pushf
push
out
ja
jnp
sbb
pop
(bad)
call
cmp
(bad)
pmullw
in
sti
das
mov
fs
imul
cld
int
push
adc
sub
iretw
fcom
cmp
adc
push
call
or
xchg
or
scas
fnsave
push
outs
mov
outs
or
clc
mov
jl
nop
sbb
cmps
sub
mov
xlat
pop
sbb
stos
mov
lock
and
or
push
mov
daa
or
jge
rcr
(bad)
out
jo
push
ins
jbe
or
mov
loope
sub
sbb
cmp
mov
mov
cwde
xchg
mov
sbb
jmp
pop
sbb
mov
dec
dec
imul
dec
fwait
hlt
(bad)
ror
sti
cld
jecxz
cmp
xchg
stos
jne
in
pop
sub
and
pushf
and
leave
scas
lock
dec
xor
pop
fimul
jb
pop
in
repnz
lea
dec
(bad)
cmp
push
push
adc
mov
mov
xchg
xor
jae
mov
push
mov
add
or
cdq
push
jo
adc
popf
cs
in
lea
pop
inc
rol
sbb
mov
in
ror
add
sbb
mov
sbb
pop
mov
or
repnz
or
fwait
hlt
push
stc
cmp
dec
lahf
jp
jo
jno
cmp
lahf
repnz
jp
push
outs
mov
sti
stos
pop
dec
mov
pop
push
cmp
fadd
dec
jg
into
sub
call
sub
enter
fimul
arpl
inc
out
outs
mov
pop
popf
js
and
shl
hlt
push
cwde
popf
icebp
cmp
sbb
(bad)
inc
dec
(bad)
xor
aad
xchg
pop
add
fs
mov
cmp
cmp
xlat
mov
sub
mov
adc
pop
push
ror
dec
sub
popf
int
xchg
cwde
enter
hlt
or
mov
popf
in
sbb
jl
test
mov
mov
mov
adc
cdq
mov
pop
frndint
cmp
jmp
sub
push
xor
push
sub
(bad)
mov
or
ins
dec
mov
mov
imul
mov
enter
shl
hlt
pop
or
or
sub
mov
jl
paddusw
pop
mov
shl
xlat
ins
test
xchg
icebp
sub
sub
pushf
movs
scas
lods
sbb
dec
or
aad
fstp
mov
(bad)
or
pop
sub
push
adc
cdq
sbb
ins
add
adc
push
aad
or
jns
push
imul
sti
pop
std
cs
int
sub
imul
in
sub
push
inc
xchg
retf
and
mov
adc
jmp
dec
cmp
mov
jmp
jmp
arpl
sahf
push
arpl
cs
int
mov
cmp
jg
mov
(bad)
push
inc
mov
mov
test
jo
aaa
jne
cmps
pop
mov
pop
jmp
push
jge
or
(bad)
in
or
pop
shr
xchg
cwde
sub
mov
sub
jmp
mov
ins
jp
adc
fcomip
fdivrp
std
pop
outs
jmp
sbb
cwde
call
dec
cmp
hlt
sbb
mov
xor
idiv
cmps
fisttp
cmp
push
push
aas
pop
sti
jp
xor
jb
pop
sbb
in
mov
ins
inc
mov
lods
retf
mov
mov
lahf
push
scas
dec
pop
loopne
les
in
or
mov
jo
(bad)
stc
or
xor
(bad)
icebp
daa
pusha
jae
xchg
(bad)
sbb
pop
jp
sti
and
ds
popf
(bad)
fisubr
xchg
jl
fimul
sti
mov
fstp
jmp
inc
lea
adc
adc
(bad)
sbb
mov
fsubr
(bad)
loope
mov
out
mov
adc
adc
movaps
jmp
movs
retf
and
jge
test
cmc
jmp
push
mov
mov
jecxz
leave
es
icebp
in
mov
jb
dec
arpl
ret
lahf
fcmove
(bad)
xchg
pop
mov
xchg
(bad)
cld
ficom
mov
cld
(bad)
sbb
xor
hlt
adc
pop
sti
jl
sbb
xor
inc
lods
pop
adc
bound
call
fwait
pop
xchg
sub
pop
stos
ins
sub
mov
sbb
jecxz
push
pop
mov
lods
jl
aas
jg
xchg
dec
bound
pop
sbb
mov
sub
sar
prefetch
or
retf
mov
retf
retf
mov
(bad)
fisttp
arpl
stos
and
(bad)
js
fstp
in
in
or
sar
pushf
xchg
jge
and
lock
in
mov
sti
and
fs
xchg
dec
mov
cmp
jmp
cmp
pop
sub
fwait
(bad)
fstp
in
pop
sbb
sbb
jb
ror
mov
jg
add
arpl
jno
sub
retf
ret
js
in
add
gs
cmp
mov
mov
clc
lea
in
push
pop
in
push
cmp
xchg
(bad)
stos
cmp
shl
push
mov
test
push
shl
push
popf
mov
hlt
jnp
pop
pop
mov
sbb
dec
pop
lods
or
out
ror
cld
xchg
dec
into
(bad)
jg
into
imul
repz
cmp
cmp
mov
pminub
rol
movs
push
hlt
in
ins
or
or
repnz
std
popf
dec
or
daa
inc
test
in
in
mov
or
lahf
iret
pop
pop
xchg
pop
movs
in
pushf
jge
nop
push
mov
sbb
mov
lods
inc
or
dec
arpl
push
stos
mov
std
dec
mov
fwait
aad
push
call
xor
fwait
mov
push
adc
lods
push
arpl
xor
mov
retf
sti
cmp
sbb
hlt
or
pop
dec
mov
mov
jnp
cli
pop
in
xor
dec
mov
sub
ins
sub
and
or
add
hlt
cmp
inc
fsub
int
dec
or
lea
mov
cmp
cmp
mov
(bad)
xchg
or
enter
fcmovb
sub
fwait
sbb
mov
inc
dec
pop
repz
pop
repnz
fadd
outs
sbb
adc
adc
cs
fcomip
mov
dec
sub
sub
cmp
retf
pop
call
jl
fdivr
mov
jnp
aad
or
push
cmc
push
std
sbb
ror
jnp
int
(bad)
mov
sub
mov
push
rcr
(bad)
dec
xchg
jle
ins
cmp
int
and
call
cmp
rcl
push
ins
pop
std
dec
jmp
ins
jl
in
lods
(bad)
pop
ret
sar
in
sub
out
int3
or
(bad)
jae
or
inc
push
pop
ins
fwait
pop
cmp
sub
jnp
jo
hlt
dec
fwait
call
xchg
out
push
push
sub
ret
in
xchg
jge
(bad)
pushf
movd
imul
jmp
aas
sub
out
xchg
mov
ret
retf
jnp
pop
imul
push
hlt
sbb
rcl
repnz
stos
sti
in
mov
lods
dec
rcr
call
sub
pushf
mov
sbb
in
dec
or
sbb
sbb
hlt
fdivr
aas
mov
std
cmps
jg
jmp
int
lea
pop
fwait
pop
scas
sbb
sub
pushf
(bad)
fisubr
and
cmp
sbb
cld
les
popf
pop
mov
popa
jne
in
setge
sar
fidiv
jl
pop
pop
mov
sbb
stos
jbe
div
inc
cmp
repz
fnstsw
stc
pushf
jno
push
daa
iret
fs
call
sbb
scas
outs
dec
into
mov
jmp
xchg
sbb
xchg
push
sbb
adc
add
inc
mov
dec
and
jmp
sar
sbb
mov
lea
adc
pushf
out
std
sti
cmp
dec
hlt
mov
pop
out
mov
repz
mov
push
fmulp
loop
aad
dec
aas
mov
push
jmp
cmovns
retf
fisub
lods
xor
xor
or
jg
cmp
lds
loop
int
stos
pop
call
imul
push
fcomp
fmul
mov
cmc
or
mov
mov
lods
fbstp
rcl
sbb
int
test
push
xchg
hlt
popf
dec
mov
rep
shl
int
jmp
scas
std
adc
retf
sbb
lods
mov
jb
sbb
push
jmp
mov
bound
jge
cmp
dec
sahf
fisttp
stc
std
xchg
call
inc
sbb
sar
hlt
std
out
jae
jg
hlt
outs
aad
mov
rol
inc
sub
adc
inc
dec
jle
sti
ficom
es
enter
hlt
dec
mov
mov
sub
call
enter
inc
fistp
outs
pop
sbb
test
sar
xor
sub
dec
lods
sti
out
cs
aas
(bad)
dec
mov
cmc
pop
inc
jns
cmc
fcmovnb
add
mov
xor
pushf
shl
hlt
xor
out
shl
lea
jnp
aas
mov
sub
or
pop
into
cmp
imul
dec
outs
loope
xchg
mov
repz
and
add
enter
xchg
imul
in
jo
and
pusha
push
jns
out
fidiv
sar
ret
jmp
ror
addr16
xor
in
in
push
ins
mov
cld
dec
shl
jno
xor
add
push
int
xchg
hlt
mov
in
into
push
cmp
out
add
dec
and
or
outs
(bad)
mov
add
pusha
sub
pop
cmc
in
pop
sub
mov
sbb
daa
dec
pop
mov
sbb
jecxz
dec
dec
xchg
sub
mov
mov
aaa
lods
sbb
sahf
popa
aad
(bad)
iret
cmc
jl
dec
jl
sbb
call
adc
call
sbb
imul
jge
fst
sbb
dec
xor
fadd
ss
dec
(bad)
scas
and
jl
arpl
cmp
mov
cmp
bound
push
pop
inc
pop
push
popf
das
cmp
pop
pop
ror
and
xchg
and
sbb
dec
fisttp
push
mov
aad
lahf
add
fadd
pop
stos
enter
rol
cmp
lahf
xchg
fnclex
hlt
pop
imul
pop
cmp
in
imul
ins
bound
test
repnz
bswap
test
mov
aaa
adc
bound
inc
ins
rcr
pop
retf
in
mov
mov
dec
mov
stos
das
cmp
pusha
xor
xor
sbb
inc
inc
lods
call
nop
rol
arpl
(bad)
ror
ret
mov
sbb
imul
mov
test
cmp
ret
hlt
ret
pop
fadd
retf
sub
hlt
fstp
stc
data16
es
fs
not
daa
dec
or
cmp
push
pop
stos
cmp
rol
call
pop
pop
test
dec
hlt
lea
pushf
or
std
(bad)
xlat
int3
pop
sub
mov
mov
repz
mov
fistp
movs
ins
lds
hlt
ds
(bad)
call
pop
dec
dec
not
mov
ds
outs
icebp
pop
sbb
add
pop
push
and
ins
movs
inc
pop
mov
ret
adc
or
clc
lock
pop
mov
push
out
stos
bound
test
loope
cld
ror
mov
or
dec
es
rcl
pop
cld
(bad)
std
hlt
int
cmp
movs
nop
mov
test
push
mov
and
mov
cmp
(bad)
mov
cmp
inc
pop
mov
or
or
call
jl
mov
xchg
dec
mov
jl
cld
hlt
enter
sti
adc
addr16
xor
sti
dec
lea
adc
fwait
pop
hlt
add
dec
aas
fxtract
(bad)
pushf
or
sbb
(bad)
cmovp
sbb
push
aad
rcr
retf
sub
movs
sbb
mov
(bad)
in
aas
mov
pop
cs
push
sub
cmp
ins
add
jg
xchg
xor
pminub
sbb
test
call
and
xor
fucomi
push
xchg
hlt
loope
cdq
lea
xchg
jp
clc
push
out
xchg
cs
into
retf
jbe
sub
fcmovnbe
mov
popf
nop
sbb
je
mov
out
dec
(bad)
xor
push
sbb
aas
sbb
out
xlat
call
cmpxchg
popf
lea
sub
pop
or
in
mov
jg
ins
jno
(bad)
stos
sti
sub
lock
in
push
xlat
add
mov
cmp
jge
mov
sub
mov
in
xchg
inc
add
jecxz
sub
jmp
mov
xchg
push
mov
xchg
mov
mov
lods
push
in
inc
js
push
xor
inc
push
(bad)
xlat
in
sbb
ds
sub
stc
mov
mov
hlt
or
retf
xchg
or
or
(bad)
into
ds
adc
mov
mov
mov
sub
lods
xchg
jp
push
sub
int3
icebp
fld
rcl
pop
or
loope
add
enter
push
xchg
xlat
stos
call
dec
push
cmp
std
in
out
sahf
inc
mov
pop
jl
or
jmp
sub
in
cmp
in
imul
fidiv
mov
xor
xor
xor
or
xchg
rol
dec
lods
cld
add
sbb
mov
mov
mov
and
pop
stos
clc
fiadd
push
push
retf
popf
pop
jnp
inc
mov
fst
pop
sbb
stos
aad
sahf
out
add
mov
sub
mov
mov
sub
jnp
in
jne
cs
pushf
sahf
jle
imul
mov
inc
ret
loope
and
sub
dec
xchg
xlat
out
test
add
mov
push
and
(bad)
sub
fdivr
cs
aas
jp
stc
das
lods
cmp
call
gs
cmp
xchg
jl
fisubr
mov
jmp
dec
int3
pop
outs
cs
sbb
cmps
push
mov
or
jge
(bad)
xor
(bad)
in
pop
outs
repnz
and
mov
outs
out
sar
inc
mov
sub
xchg
mov
adc
cmp
add
into
mov
fnstcw
rcl
fmulp
push
push
cmp
push
jmp
imul
sbb
in
pop
sti
xchg
shl
or
cmps
pop
pop
pop
pop
dec
sbb
(bad)
sub
retf
(bad)
cs
jp
push
das
mov
aam
cmp
or
inc
sbb
push
lods
mov
aaa
mov
push
ret
mov
in
push
int3
or
shl
in
scas
pop
sub
jl
fimul
adc
or
imul
dec
dec
mov
fcomp
sub
lahf
or
dec
daa
enter
adc
dec
test
mov
or
mov
jmp
(bad)
mov
push
adc
adc
lahf
stos
sub
jge
add
retf
jmp
fistp
fld
jne
sub
mov
or
push
arpl
mov
stc
fwait
sub
push
fdivr
ds
dec
pop
sti
jp
push
sbb
pushf
js
mov
pusha
sbb
stc
sti
clc
dec
fild
or
push
mov
push
lahf
out
jl
cmp
xor
ror
inc
cdq
dec
sub
les
cs
fmulp
cmc
stos
and
mov
push
push
push
and
jge
sub
xor
cmp
nop
aaa
fistp
push
or
shl
sub
stos
or
or
mov
icebp
aam
out
dec
in
(bad)
cli
push
cdq
sti
dec
(bad)
cld
shl
sbb
lods
jmp
fld
sub
lea
adc
fld
mov
sub
stos
xor
pop
mov
cmps
imul
enter
popf
call
fcmovnb
in
scas
cs
aad
pop
pop
dec
hlt
sbb
int3
aam
mov
dec
sub
add
add
rcl
fisub
mov
jnp
iret
arpl
xor
sahf
pop
adc
lea
arpl
aam
pop
mov
(bad)
push
dec
sbb
pop
fisttp
xchg
sub
xchg
sbb
pop
aas
dec
out
test
lods
jnp
ret
mov
pop
jp
add
lods
nop
or
sbb
sub
sub
cmp
std
lahf
xchg
rcr
pushf
movs
or
mov
jmp
int
push
jo
cdq
fdivr
repz
add
imul
sbb
ins
stos
(bad)
(bad)
test
sbb
test
pop
jmp
mov
(bad)
loop
dec
in
int3
lods
sti
jns
mov
or
dec
mov
(bad)
jg
adc
push
mov
or
retfw
aas
sub
(bad)
pop
add
int
pop
jle
(bad)
sbb
mov
(bad)
sbb
lahf
or
call
push
adc
push
mov
imul
mov
stos
inc
aam
fwait
imul
and
sub
xor
push
mov
push
(bad)
int
scas
popa
dec
push
and
shl
lods
and
or
pop
imul
inc
sub
jl
int3
xor
sub
pop
ja
je
into
sbb
retf
dec
out
ror
sti
or
aas
scas
dec
into
sahf
mov
inc
mov
stc
sbb
stos
scas
test
retf
mov
or
sar
cmc
dec
cld
cmp
inc
jb
pop
sub
or
retf
inc
cmps
pop
out
or
mov
pop
lea
stos
imul
fdiv
lods
jle
jp
cld
call
sbb
sbb
cmp
in
pop
cmp
mov
in
cs
push
push
sub
out
jmp
sbb
sbb
call
loope
lods
sbb
mov
je
fimul
or
adc
setle
mov
or
leave
fs
push
inc
aam
loop
push
popf
loop
cmp
sub
or
fstp
shr
ds
dec
scas
outs
xchg
in
int3
jp
lahf
sbb
sbb
jl
shr
pop
jae
sbb
outs
sahf
dec
sbb
leave
into
stos
fild
jge
dec
adc
les
mov
cmp
cmp
xlat
imul
fyl2xp1
call
imul
mov
jp
pop
mov
loopne
ins
or
int
sub
adc
pop
test
sbb
push
pop
std
sub
jl
adc
loope
fdiv
(bad)
retf
test
shl
stc
jge
outs
rcr
ret
sub
iret
or
dec
stos
dec
jmp
in
lahf
psubsw
xor
sub
xor
xor
fstp
pop
scas
mov
sahf
call
scas
in
iret
imul
add
mov
jo
mov
aam
push
pop
enter
jg
es
int
fisubr
push
sbb
xor
sahf
sbb
pushf
mov
cmp
push
jno
ins
add
clc
into
push
or
sbb
mov
jns
stos
int
mov
(bad)
int3
aam
cmp
xchg
jg
cmc
in
mov
lahf
sub
mov
jp
jmp
xor
pop
div
dec
ja
lods
mov
scas
aas
push
push
and
int3
leave
cmp
outs
or
sahf
adc
ins
mov
in
pop
sti
and
jnp
js
push
popa
fcmovnu
sub
test
retf
mov
push
inc
mov
sbb
clc
or
and
pushf
or
push
movs
adc
jmp
outs
fstp
jmp
push
mov
clc
lds
push
sub
(bad)
sub
int
lods
(bad)
sub
lods
pop
or
call
ins
hlt
(bad)
inc
mov
test
or
or
test
xchg
fwait
dec
imul
int3
jo
mov
pop
mov
stos
fwait
les
or
xchg
mov
push
pusha
hlt
dec
adc
pop
inc
lods
stos
mov
scas
mov
arpl
jae
fisub
jnp
mov
(bad)
push
jnp
mov
jne
mov
mov
(bad)
pop
xchg
adc
shr
lods
push
leave
stos
test
dec
fnstsw
or
(bad)
in
dec
pusha
mov
sti
pop
inc
or
stos
mov
pop
iret
cmps
fmul
sbb
fmul
sahf
pop
inc
fisttp
std
pop
sbb
mov
push
mov
movs
int3
imul
fst
aad
das
stc
(bad)
mov
mov
cwde
or
or
ins
jmp
jle
in
pop
mov
pusha
imul
jle
mov
in
xor
stos
std
or
imul
test
jle
cmp
lods
cmp
jnp
xchg
ficomp
jge
pop
retf
mov
sbb
cs
sahf
or
out
cmp
xor
cld
inc
cmp
cmp
stos
in
fldl2t
jmp
dec
sub
push
das
popf
pop
out
fld
jg
imul
cdq
pop
fwait
and
fsubr
ins
outs
pop
adc
cmps
dec
std
sbb
or
jmp
cwde
fwait
pop
arpl
ret
aaa
shr
add
adc
mov
es
fnop
(bad)
mov
adc
stos
dec
xchg
mov
jnp
pop
fisub
xchg
mov
push
das
and
test
icebp
retf
sbb
mul
dec
fst
pop
inc
sti
lock
push
pop
inc
pushf
adc
fnstsw
in
(bad)
sub
outs
sub
mov
mov
icebp
mov
push
jmp
scas
jbe
jno
push
cmp
(bad)
push
aaa
push
jl
imul
dec
fucomip
mov
ins
rcr
sti
sub
call
jg
jl
cwde
fimul
add
shr
(bad)
popa
(bad)
dec
ins
inc
push
cmp
(bad)
cs
fdiv
sbb
pop
das
cmp
fisttp
dec
fsub
sti
mov
(bad)
push
jns
outs
push
xor
xchg
test
xor
test
arpl
mov
aas
mov
mov
mov
out
cwde
add
ret
sahf
mov
sbb
pop
dec
icebp
out
dec
retf
mov
cmp
test
mov
mov
inc
retf
jns
neg
lods
add
pusha
scas
mov
movs
dec
cmp
pop
push
mov
(bad)
mov
pop
sahf
mov
std
(bad)
jnp
pop
ins
xor
jmp
outs
in
test
sbb
mov
sbb
mov
daa
pop
jmp
(bad)
cmp
fdivr
lea
imul
jl
scas
std
pop
sbb
cmp
ins
sub
ds
pop
scas
les
pop
xchg
mov
into
dec
mov
cmp
mov
sbb
ins
mov
xchg
inc
scas
sahf
adc
or
leave
rol
in
in
popf
lock
dec
into
data16
outs
ror
cmp
adc
jecxz
data16
movs
mov
fnstsw
mov
hlt
mov
ins
fmul
fsubr
adc
lock
int3
sub
clc
int3
addr16
shr
aas
or
pop
mov
jge
push
inc
clc
cld
pop
jl
or
mov
push
pop
sub
fdiv
cmp
aam
call
mov
movs
or
xlat
jl
movs
mov
sbb
fnsave
adc
les
cwde
outs
push
fsubr
(bad)
call
sbb
add
adc
stos
dec
xor
pop
push
inc
stos
mov
mov
int3
repnz
push
xchg
movs
aam
loopne
fidivr
dec
jg
adc
sbb
call
dec
movs
push
or
ins
rcr
and
clc
movs
dec
sbb
retf
pop
lahf
test
pushf
stos
sar
cmp
add
loope
push
sbb
cmp
dec
call
jmp
aam
cmp
fadd
int
add
mov
xchg
push
sti
pop
ins
mov
in
sar
mov
sar
jne
sbb
fstp
sbb
sub
in
movs
int
ins
shl
mov
or
out
aam
mov
loopne
sbb
(bad)
ins
jno
dec
jge
shl
mov
cmc
inc
or
jl
sbb
mov
ds
mov
mov
fild
jl
cmp
cld
sub
jg
mov
xor
test
fisttp
or
(bad)
cmp
mul
mov
lock
loopne
or
adc
aam
cld
scas
call
fcmovnu
cmp
mov
retf
pop
rcr
jnp
sti
dec
mov
call
ffreep
fucomip
push
int3
(bad)
pop
sbb
mov
adc
xchg
jecxz
hlt
pop
repz
in
lea
fdivr
pop
rcr
mov
fadd
sub
sbb
fs
mov
inc
jge
jae
aam
push
lods
ret
retf
les
pop
aam
mov
int3
out
sar
fwait
sub
cld
aaa
or
lods
pushf
loopne
aam
dec
cmp
sti
loop
mov
fld
sbb
jns
mov
pop
mov
mov
hlt
(bad)
mov
push
push
lods
jge
mov
add
or
pop
or
xchg
fcom
sbb
pop
aam
sub
call
xor
clc
call
or
jle
ret
clc
aaa
sbb
mov
movs
mov
dec
ret
shr
pop
mov
popa
inc
xchg
std
and
inc
ds
sti
ins
dec
and
cmp
sub
lods
sbb
clc
movs
mov
pop
ds
and
dec
out
fdivr
int
neg
fidivr
xor
idiv
pushf
sbb
jle
fstp
add
clc
lea
xchg
repnz
dec
scas
scas
pop
fdiv
dec
retf
dec
mov
out
hlt
int3
add
std
xchg
mov
in
or
fcmovb
imul
pushf
fbld
or
outs
outs
xchg
fcomp
ins
std
(bad)
dec
(bad)
retf
fisubr
pop
int
into
mov
loopne
fsubr
lods
clc
pop
std
jg
ins
or
cs
sbb
or
sub
les
mov
pop
mov
jecxz
lods
mov
iret
(bad)
dec
pushf
lahf
outs
push
int
ins
ds
iret
push
loop
sti
push
lock
test
outs
jmp
lods
lahf
out
mov
aam
imul
cmps
lea
dec
(bad)
mov
loop
jle
js
retf
test
cs
sbb
adc
std
add
jge
jae
sub
in
pop
cmp
out
aad
leave
imul
loopne
mov
sbb
ficomp
stc
pushf
aam
retf
scas
xor
xchg
loope
sbb
mov
mov
lock
cli
xor
xchg
idiv
repz
fwait
outs
dec
dec
ins
out
cmp
cmp
pushf
mov
div
jmp
cs
mov
clc
add
pop
pop
lock
int
shr
add
jl
stos
mov
enter
mov
xchg
out
pop
out
(bad)
aam
push
pop
mov
rcl
mov
inc
pop
sar
fcomp
mov
aam
sbb
lock
xor
xchg
or
pop
sti
mov
rcl
test
add
loopne
ds
loopne
pushf
pop
int
xlat
jmp
or
fdiv
out
pop
or
push
cdq
pop
fdiv
dec
addr16
or
lock
push
aam
sahf
fwait
imul
dec
je
push
rep
rol
mov
pop
iret
sahf
mov
fmul
enter
sbb
std
push
mov
dec
call
outs
js
hlt
adc
dec
add
jo
(bad)
and
xlat
loopne
(bad)
(bad)
loopne
into
retf
retf
cli
sti
mov
hlt
xor
leave
aaa
int3
lock
fimul
mov
fcomip
in
pushf
out
mov
lods
cld
sar
mov
rcr
movs
call
mov
lods
lods
push
adc
jp
mov
xchg
repnz
int3
mov
stos
adc
jb
sbb
mov
sbb
int
adc
sbb
int3
sub
sub
jmp
dec
lock
pop
push
in
pushf
imul
lock
sub
jmp
dec
jo
lods
adc
sbb
pop
adc
and
fnstcw
iret
rcl
mov
pushf
lock
push
sbb
lock
ins
fcmove
mov
sub
std
iret
xlat
retf
xchg
or
call
xor
dec
das
ins
jmp
lock
dec
mov
dec
stos
ds
loopne
xchg
shl
mov
lock
mov
mov
adc
hlt
loop
out
ds
sbb
inc
fldln2
jl
lea
mov
inc
dec
mov
add
enter
stos
(bad)
pop
mov
fs
enter
fwait
jnp
stos
(bad)
pop
add
fdivr
out
(bad)
outs
pop
mov
jnp
out
mov
(bad)
sbb
mov
out
lock
sub
inc
lods
jl
lock
sbb
xchg
and
pop
scas
mov
jns
pop
pusha
sub
enter
popf
fs
mov
mov
jns
outs
fidiv
stc
ret
cli
lods
repz
xor
sub
ret
rcr
xchg
jp
pop
iret
pop
mov
pop
sbb
dec
or
ficom
xchg
lock
adc
imul
cmp
pop
sub
stos
dec
enter
fld
sbb
cs
ins
pop
push
out
jge
lock
sbb
add
mov
lock
ds
int
cmp
sub
or
cdq
loopne
bound
shl
jnp
scas
cs
or
or
sbb
lea
lock
test
(bad)
stos
sbb
sub
mov
jl
lahf
pop
lock
scas
jle
lea
lock
fidivr
xchg
stos
pushf
or
cmp
inc
lock
jg
mov
jge
lock
xchg
mov
mov
dec
cld
dec
out
out
or
fimul
loopne
mov
push
pop
jle
(bad)
mov
push
pop
sbb
cwde
aad
loopne
aaa
xlat
cdq
ror
fnstcw
cli
push
jbe
or
mov
xor
adc
pop
fidivr
cwde
lock
fnstenv
lock
adc
and
lahf
test
cmp
mov
(bad)
lods
cmp
das
sub
pop
call
jbe
out
arpl
dec
push
inc
sbb
dec
iret
sbb
pop
fcmovu
fstp
cwde
int
sbb
mov
mov
outs
adc
stos
int
mov
push
(bad)
lock
mov
cli
retf
jae
pop
pop
(bad)
lock
sti
cmp
scas
imul
cmp
int3
sbb
jge
dec
jle
pop
sub
mov
popf
cmp
dec
cmp
xchg
repnz
sub
push
jg
cmp
inc
lock
jl
das
pushf
stc
in
aam
cdq
ins
shl
outs
push
or
inc
loopne
mov
(bad)
mov
stos
pop
fdivr
test
lock
fistp
movs
dec
or
ret
mov
push
lock
jb
jp
sub
out
retf
lods
pushf
mov
retf
jmp
test
mov
mov
fsubr
mov
aaa
inc
lock
cmp
std
clc
int3
lods
imul
scas
fdivrp
pop
mov
adc
dec
rcpps
jnp
int
lods
lods
mov
pop
pop
icebp
pop
mov
pop
clc
nop
repz
jg
cmp
shl
adc
push
push
jp
jnp
pop
lock
mov
fisttp
jnp
sub
push
into
mov
adc
mov
mov
inc
push
mov
retf
call
sti
lods
jle
(bad)
mov
fcom
int3
dec
pop
pushf
lea
call
inc
cmp
push
jge
mov
stos
imul
stos
pop
out
call
sub
cmp
sbb
mov
push
mov
(bad)
js
mov
lock
lea
dec
jnp
jmp
sbb
call
lock
(bad)
cmp
dec
pop
pop
lods
mov
pop
loopne
fscale
sbb
out
fiadd
push
js
loopne
pushf
movs
cmp
pop
scas
push
rol
push
ror
retf
fs
in
xchg
or
cmp
lahf
loop
add
pushf
out
dec
mov
mov
push
inc
in
jle
inc
dec
loopne
mov
ficomp
and
adc
bnd
nop
or
loopne
call
int
dec
cmp
push
mov
and
cmp
dec
dec
mov
or
rcr
lock
loopne
lods
mov
or
ss
pop
aam
ficomp
out
lock
jno
repnz
xchg
out
mov
jmp
out
lock
icebp
cdq
dec
jno
div
dec
or
jnp
ins
cmps
pop
sub
cmp
(bad)
xchg
sbb
out
and
loopne
or
sub
jp
sti
stos
or
pop
sbb
xor
lock
jno
sbb
int
or
stos
ins
(bad)
sahf
test
mov
sti
sbb
mov
or
jg
jnp
lods
mov
sbb
shr
mov
aam
mov
out
pushf
fidivr
lods
sbb
jge
adc
movs
add
pop
setb
fwait
mov
sub
inc
(bad)
stc
mov
mov
lea
dec
mov
lahf
enter
dec
pusha
and
mov
cs
std
out
leave
lock
pop
ins
push
movs
fsubp
call
add
dec
jle
sbb
repnz
cmp
or
retf
dec
mov
xor
jnp
das
loopne
lds
or
pop
sub
ds
shl
mov
ins
cmp
call
xor
lock
jno
dec
fwait
pop
jmp
clc
popf
hlt
test
ds
idiv
lock
test
lock
stos
dec
out
in
sbb
ins
inc
js
test
pop
mov
outs
cmp
jmp
fwait
gs
fst
es
adc
mov
fidiv
adc
les
jmp
inc
enter
fprem1
mov
xchg
sbb
dec
push
popa
pop
sub
cld
pop
lahf
or
cmp
mov
or
in
stc
or
jbe
fcmovu
xor
push
loopne
xchg
lock
mov
or
xlat
and
enter
ret
sbb
or
add
or
push
dec
lock
cmp
pop
out
ds
sub
jnp
jecxz
dec
lock
fidiv
div
mov
adc
or
jge
adc
sbb
inc
loopne
sbb
cwde
out
int
fsubp
sbb
cld
sub
lods
add
pop
lods
sahf
call
jns
add
pop
xlat
or
sbb
in
pop
xchg
iret
pop
xchg
pop
cmp
cmp
fimul
or
loopne
(bad)
pop
jb
mov
xchg
imul
jmp
sub
pop
sbb
pushf
lea
jbe
rcr
(bad)
in
repnz
add
dec
lock
mov
pop
lock
ror
push
push
scas
loopne
pop
icebp
or
ficomp
mov
lods
in
fldenv
xchg
sbb
mov
ins
lahf
aad
mov
mov
int
lods
add
xchg
shr
loopne
mov
jmp
scas
int
cmp
inc
sub
lea
movs
jne
xor
jnp
jmp
ins
int
test
lahf
xlat
sti
dec
outs
add
cli
fsubr
fistp
dec
push
sub
das
sbb
jno
sti
stos
mov
dec
dec
stc
ss
imul
loopne
sbb
push
lds
retf
out
cwde
inc
out
jle
pushf
clc
mov
lock
ins
dec
div
ret
movs
lock
retf
iret
sar
push
jp
aaa
mov
mov
out
push
lea
lods
cmp
cwde
lock
rol
mov
mov
retf
push
cld
mov
lock
sti
outs
mov
sbb
lods
pop
cdq
adc
xchg
int
lods
jnp
retf
lahf
imul
pushf
stos
fstp
pop
mov
cmp
fst
pop
ret
xor
jns
femms
mov
sti
fmul
sub
adc
sbb
push
outs
ret
jle
inc
fstp
lock
xchg
iret
sti
xchg
out
test
push
pop
push
push
cmp
das
lock
jnp
loopne
xchg
cmp
rol
popa
pop
mov
jnp
das
fsub
or
int
or
adc
jns
fcom
call
fldcw
jle
mov
test
das
loopne
or
add
sbb
dec
mov
push
cmp
jmp
cmp
(bad)
pop
pop
lahf
es
call
call
xchg
jnp
adc
fldenv
bnd
jl
dec
lahf
lock
pop
in
scas
cmps
jmp
rol
or
push
mov
cmp
jno
lahf
mov
mov
clc
sar
sti
mov
dec
sub
mov
call
mov
inc
int
fidivr
sbb
lock
push
mov
or
pop
mov
jo
adc
sbb
pop
jecxz
mov
enter
fiadd
jmp
outs
out
fsubr
nop
sub
xchg
mov
dec
xchg
in
adc
pop
es
fmul
daa
push
sar
fcom
inc
lock
pop
das
lock
enter
pushf
add
(bad)
mov
pop
mov
clc
das
jmp
(bad)
adc
cld
jnp
lock
sbb
dec
dec
test
sbb
push
add
xchg
lods
sti
retf
lea
jle
outs
sar
sub
ins
jbe
jmp
cld
out
xchg
repnz
pop
jmp
ins
std
outs
lock
pop
sub
loope
fcomip
std
cmp
inc
push
in
(bad)
call
test
mov
cli
push
adc
fstp
inc
dec
pop
cmps
cmp
in
or
xchg
movs
movs
and
mov
je
or
lock
mov
ds
cld
cmp
std
fdivp
fstp
mov
inc
push
dec
sub
and
sbb
pushf
pop
cmp
xlat
adc
pop
mov
sbb
mov
out
push
clc
push
jb
jle
pop
xchg
ins
lock
pop
out
push
or
sbb
movs
pop
iret
out
xor
jae
or
ds
mov
adc
dec
scas
xchg
and
std
or
mov
adc
pop
jmp
mov
xor
or
pop
cmc
popa
jns
cmp
test
push
iret
dec
adc
in
test
cld
outs
xor
test
in
repnz
lock
mov
(bad)
test
ficom
test
mov
lock
push
dec
mov
xchg
ds
add
xchg
(bad)
dec
scas
pop
lock
enter
mov
lahf
fsub
stos
mov
push
movs
or
jmp
jp
cmp
in
mov
mov
lods
sbb
outs
or
adc
stos
lea
sti
scas
cmp
cmp
mov
lock
dec
or
sbb
icebp
popf
or
(bad)
loope
jle
(bad)
mov
mov
jnp
dec
int
lock
fidiv
or
in
sub
xor
stos
or
adc
fidivr
mov
sub
les
or
xchg
sbb
jne
jnp
sub
xchg
out
sub
cs
(bad)
scas
ror
sbb
cmp
ret
in
inc
jl
or
sub
sbb
stc
pop
mov
fcomip
push
jge
pop
fsubrp
les
push
lods
std
cmp
push
out
push
sub
or
daa
fdiv
scas
mov
or
loopne
cmp
je
sbb
push
cs
or
lea
mov
bswap
jg
push
mov
fistp
mov
or
(bad)
mov
imul
jl
jmp
shl
enter
cmp
loopne
aas
xlat
push
fimul
outs
clc
je
loopne
sbb
mov
stos
xchg
cmp
fild
cld
(bad)
lock
sahf
out
dec
out
test
enter
lea
mov
adc
pop
or
sbb
lods
xor
jle
push
jnp
push
cli
sbb
lea
jl
paddsw
aas
xchg
hlt
out
arpl
push
mov
loopne
push
mov
rcr
jmp
mov
out
dec
xor
mov
pop
mov
adc
sbb
std
inc
mov
add
cmp
aad
rcr
jg
(bad)
mov
loopne
xchg
jo
out
enter
cmp
pop
mov
adc
push
loopne
mov
cmps
outs
pop
aam
out
sti
fnstcw
lock
int
or
lock
cs
cdq
pop
pushf
in
mov
das
mov
call
retf
mov
ds
arpl
dec
xchg
retf
lock
mov
pop
fmul
mov
loopne
mov
aam
inc
cs
(bad)
cld
test
int
fild
cdq
mov
hlt
sbb
out
sahf
(bad)
in
push
out
inc
in
add
cmp
xchg
sbb
xor
jle
sar
add
dec
add
ins
adc
lahf
inc
cmp
pop
retf
cmc
jmp
pop
mov
sub
jge
ror
add
dec
popf
sub
mov
imul
in
mov
ror
jp
pop
dec
pop
sahf
cmp
adc
pop
pop
or
jo
pop
cmp
pop
pop
sbb
fcmovu
sahf
ret
adc
lock
mov
ins
or
fcom
xchg
jl
(bad)
cli
or
mov
int
or
xor
pop
dec
adc
mov
or
in
push
pusha
xor
mov
mov
in
retf
dec
loope
mov
fs
mov
test
or
push
outs
or
pop
cmp
loopne
lock
sbb
mov
inc
cmp
retf
jne
jo
push
lock
jp
inc
call
cmp
lock
lock
or
fstp
pushf
adc
sbb
push
add
sti
add
iret
and
xlat
adc
pusha
lds
pop
jae
ds
movs
popa
inc
adc
xchg
movs
xchg
stc
sahf
dec
sub
movs
cmp
pop
dec
xor
push
cld
mov
adc
or
push
push
leave
loopne
pusha
bound
fcmovu
dec
sar
mov
int3
cmp
or
or
add
mov
dec
test
xrelease
cli
add
repnz
out
xchg
or
aas
adc
cdq
dec
shr
fnstcw
mov
lahf
shl
or
das
mov
mov
(bad)
mov
ds
fisubr
pop
or
cmp
mov
lods
fmul
std
cmp
(bad)
shl
test
call
call
addr16
fmulp
jmp
outs
xchg
fbld
jmp
push
arpl
mov
retf
xchg
jle
sub
scas
fnstcw
(bad)
dec
lock
mov
mov
mov
or
popf
loopne
mov
cmp
lock
xlat
cld
or
mov
jl
jle
xor
or
lock
add
push
test
xchg
push
lods
fs
mov
mov
jmp
jnp
dec
jae
or
gs
xor
dec
retf
call
fwait
dec
fisub
fisttp
push
cmp
pop
(bad)
sti
cmp
mov
(bad)
or
mov
fisubr
retf
push
push
mov
xchg
adc
jns
lock
xchg
mov
cmp
mov
pop
adc
cmp
push
(bad)
push
add
pmuludq
retf
sbb
lock
rcr
jle
pushf
loopne
outs
xor
push
bound
cld
fbld
call
add
jno
jg
push
fist
adc
mov
lods
sbb
lock
pushf
or
les
push
cs
lock
call
dec
xor
dec
mov
sbb
test
mov
or
mov
push
mov
push
int3
jmp
or
movs
enter
mov
lock
int3
mov
fist
sub
xchg
outs
retf
enter
or
std
loopne
dec
pop
ftst
call
imul
jo
adc
mov
enter
retf
pusha
rcl
fucomp
pop
or
pushf
std
push
xchg
ins
xchg
loopne
je
loopne
lock
jl
cld
jns
lods
push
lock
je
into
mov
js
loopne
xor
push
adc
pop
cli
adc
cmp
fmul
cmp
int
iret
lock
push
cmp
mov
mov
xlat
clc
push
sub
(bad)
pop
cdq
xor
hlt
pusha
mov
mov
call
neg
test
xchg
retf
mov
lock
pushf
repnz
call
aad
pushf
sti
or
jmp
adc
idiv
jle
lock
shl
push
xchg
cmp
dec
call
std
mov
stos
jnp
sbb
popa
inc
mov
push
inc
(bad)
in
cmp
out
jmp
jecxz
cmp
(bad)
jbe
lock
std
adc
pop
neg
mov
into
fucomp
test
scas
out
mov
pop
iret
mov
mov
dec
sub
inc
test
mov
ficomp
dec
dec
mov
sub
inc
xchg
pop
lock
ds
pop
sbb
push
(bad)
adc
gs
enter
test
push
popa
mov
and
(bad)
pop
(bad)
test
dec
arpl
lods
sti
test
das
pusha
lock
fwait
sub
push
mov
mov
xchg
scas
adc
pop
loopne
das
call
fidiv
sub
lock
mov
push
pop
clc
shl
lock
xor
je
popf
imul
fwait
lock
scas
cmp
fidivr
or
sub
lods
std
lea
xor
imul
adc
sub
leave
gs
nop
mov
jle
aaa
clc
or
or
lods
repz
lock
xor
enter
pop
sub
mov
mov
repnz
inc
dec
jmp
pop
fisttp
cmp
mov
mov
add
mov
retf
in
aaa
ds
in
cmp
mov
pop
lock
retf
jl
sub
enter
mov
retf
fnstcw
dec
add
pushf
add
mov
dec
sti
clc
mov
ret
xchg
jmp
adc
adc
push
mov
sub
dec
push
popa
leave
cmp
mov
fucomip
inc
(bad)
sub
aas
jmp
mov
mov
and
int
lock
jns
push
mov
mov
inc
dec
xchg
movs
pop
sub
xor
aad
cdq
or
imul
scas
enter
hlt
sub
aad
jl
mov
mov
clc
popa
pop
inc
add
sbb
pop
ss
outs
add
imul
retf
mov
sub
jmp
adc
push
std
dec
mov
sahf
(bad)
lock
add
xchg
jnp
mov
add
test
(bad)
out
xor
jns
out
lahf
adc
(bad)
out
enter
mov
mov
mov
out
lahf
or
mov
icebp
test
das
outs
cs
lods
leave
lock
cmp
push
jge
pop
and
lahf
cs
mov
mov
cmp
inc
jge
mov
mov
movs
fidivr
cmc
xchg
xchg
dec
sbb
or
int
pop
mov
sbb
icebp
scas
mov
adc
in
or
mov
aaa
ficomp
in
lock
(bad)
pop
movs
inc
pop
push
hlt
pop
jp
cmp
add
js
call
jnp
push
sbb
dec
stos
and
cmp
pop
cmp
xchg
pop
jl
(bad)
lock
in
shr
(bad)
loopne
call
inc
sti
sub
sbb
sub
in
sti
ja
or
or
ficom
add
mov
mov
push
fs
js
popf
cld
das
fistp
arpl
pop
sahf
mov
retf
(bad)
and
lock
cmp
push
sbb
leave
lock
rcr
cwde
jmp
fcomip
jle
push
push
call
mov
jmp
ret
xchg
fmul
lods
mov
or
adc
or
fimul
retf
mov
lahf
sbb
mov
or
fstp
jle
mov
dec
leave
stos
loopne
pop
enter
lock
xchg
imul
jae
loop
or
xchg
pop
stos
inc
fisttp
scas
mov
mov
mov
stc
lds
fistp
mov
(bad)
faddp
pop
dec
ds
data16
jmp
in
adc
lods
mov
dec
(bad)
in
loop
mov
pushf
jmp
(bad)
je
imul
or
test
pop
adc
cmp
popa
jnp
ret
mov
jl
jl
jne
xchg
cwde
mov
pushf
sti
js
mov
sbb
xchg
imul
sub
dec
pop
jle
scas
pop
mov
mov
sbb
lock
mov
sub
add
mov
mov
xlat
fs
cli
iret
push
lock
or
lods
iret
mov
mov
les
loopne
cmp
(bad)
pop
aam
mov
stos
pop
ds
xlat
inc
out
mov
cmp
mov
jg
into
inc
shl
lock
mov
pop
cs
aaa
cld
lahf
push
movs
lods
ds
pop
pushf
das
mov
push
sbb
popa
(bad)
fucomp
test
sahf
ds
mov
mov
sbb
pop
out
jge
call
xchg
sbb
and
fcomi
or
jne
mov
(bad)
imul
ins
pop
int
dec
inc
std
push
loopne
rcl
lock
adc
into
js
test
enter
int
cld
sbb
lock
ja
mov
lock
pop
cmp
cmps
lock
cmp
aaa
mov
sbb
fsubr
out
pop
jl
push
es
lea
call
or
mov
lods
pop
pop
(bad)
lock
mov
pop
fdiv
pushf
clc
sbb
shl
mov
cld
fwait
js
jp
scas
cld
lods
lock
jmp
dec
push
sub
icebp
cld
inc
lods
push
inc
mov
pop
ficom
jno
aad
out
mov
shr
jge
mov
or
mov
mov
mov
out
sbb
sbb
clc
sub
imul
cs
dec
and
pop
(bad)
cmp
imul
outs
scas
jle
movs
jae
fdivr
sbb
push
movs
lock
int
or
pop
pop
mov
aam
lods
into
mov
fstp
aaa
dec
aam
jge
jmp
(bad)
mov
sbb
adc
push
es
dec
lock
sbb
mov
jno
dec
push
cld
xlat
pop
dec
sar
lods
pop
mov
sub
hlt
pop
loopne
jge
mov
pop
(bad)
addr16
out
lahf
xchg
leave
pushf
(bad)
sbb
in
fidiv
iret
inc
not
jmp
pop
iret
lock
jle
ins
dec
sub
mov
dec
sbb
(bad)
pushf
mov
lock
lahf
pop
cmp
or
mov
pushf
push
dec
xor
stc
adc
lock
cmp
mov
jmp
aam
sub
pop
ins
and
mov
loope
sbb
pop
pop
cwde
(bad)
jmp
pop
lods
das
pop
pop
cmc
xor
idiv
push
fnstcw
int
adc
jmp
sbb
mov
adc
loopne
sbb
pop
mov
fistp
stc
sbb
push
dec
xadd
mov
inc
in
adc
in
ins
das
cmp
fistp
clc
int3
test
pop
lock
iret
xchg
dec
push
cwde
out
push
outs
repnz
fmul
pop
fistp
mov
mov
hlt
int3
lock
adc
in
mov
sbb
in
(bad)
and
adc
neg
sbb
arpl
pop
lock
mov
call
add
push
mov
lods
mov
in
sbb
jle
(bad)
out
rcr
lahf
daa
test
sub
fdivr
sbb
inc
lock
mov
cli
fwait
cmp
sub
sti
or
jne
pop
sbb
ins
imul
scas
call
pop
lock
std
int
(bad)
loopne
pop
mov
ins
push
adc
int
cmp
jns
sub
retf
(bad)
out
push
dec
jo
push
hlt
mov
sub
in
call
cmp
mov
cmp
adc
out
sub
fistp
mov
loopne
retf
dec
imul
div
sub
jb
in
in
push
sub
inc
pop
hlt
pop
out
mov
rol
(bad)
push
std
call
aad
enter
or
xor
cmp
mov
cld
push
lock
shl
jmp
or
cmp
mov
ror
sub
mov
pop
scas
stc
cmp
lock
retf
add
mov
ret
repnz
lock
xor
cmp
in
sbb
fidivr
loopne
mov
or
jge
mov
push
ins
idiv
mov
loop
popf
sub
cli
hlt
fisttp
call
mov
ins
fldenv
jp
mov
clc
inc
sub
ds
nop
loopne
ins
fisub
sbb
(bad)
lock
ins
push
or
(bad)
pop
fsubr
mov
std
arpl
fstp
sub
pop
aas
loopne
jle
dec
mov
int
dec
mov
mov
adc
pusha
jp
fstp
and
fdivr
lea
lock
sar
xchg
int
push
rcr
mov
popf
jl
adc
xchg
sbb
repnz
mov
int3
jecxz
fcmove
arpl
cmp
lock
dec
fdivr
mov
mov
sub
sbb
mov
bound
sbb
sbb
lahf
pop
adc
lock
add
push
and
int
cli
ds
jae
fisub
mov
jne
repz
sbb
in
sub
lods
adc
cwde
adc
aaa
mov
loopne
pop
dec
loop
retf
xchg
out
cmp
and
sbb
fnstcw
mov
retf
call
jp
dec
add
dec
push
fisub
jg
mov
popa
adc
pop
repnz
(bad)
lods
adc
aad
cmc
fnstcw
outs
mov
enter
xor
and
xor
(bad)
jge
js
aaa
cmp
xor
xchg
adc
mov
sub
pop
lods
or
lock
out
jnp
lock
outs
push
mov
jl
hlt
fdivr
scas
push
enter
stos
lods
cwde
loope
xor
inc
ds
dec
jns
jmp
or
sub
adc
(bad)
out
mov
adc
mov
jle
aad
push
rcl
cmp
pop
(bad)
or
mov
cld
mov
jno
repnz
xor
lock
push
pop
or
jmp
std
jbe
(bad)
jmp
loopne
pop
jnp
lahf
outs
mov
xor
xchg
jl
lea
cmp
pop
retf
or
dec
rcr
xchg
lock
je
das
dec
xchg
adc
pop
pop
cmp
add
jo
ins
je
call
std
das
pop
push
sub
pop
jnp
and
imul
rcr
aam
out
mov
(bad)
int
lea
push
xor
push
fwait
aaa
dec
mov
inc
xlat
dec
cmp
push
call
jbe
loopne
out
xchg
xchg
sbb
lods
cdq
or
push
std
sub
shr
xchg
mov
stos
sbb
jb
cmp
ret
mov
mov
out
inc
lock
in
cmp
idiv
cmp
call
popf
xchg
sub
repz
mov
sub
or
mov
fisubr
pop
imul
mov
adc
(bad)
jl
out
loopne
loopne
jnp
fwait
sub
cmp
icebp
inc
cwde
sbb
ds
and
jl
loopne
fbld
loope
fsubr
int
mov
not
ins
retf
test
pop
mov
call
out
sahf
or
jecxz
push
cdq
lock
fdivr
jmp
jmp
loopne
lahf
xor
ror
jmp
and
or
lock
push
push
pop
in
js
push
ins
loope
pop
int3
adc
lahf
jmp
mov
cld
adc
lock
xor
pop
adc
sbb
lahf
out
clc
jl
sub
scas
jmp
mov
jnp
xchg
or
lock
sar
sbb
jge
sar
pop
and
in
aam
call
cli
retf
xor
call
pop
push
push
mov
sub
cmp
icebp
cmp
jmp
mov
mov
mov
fdiv
adc
das
scas
(bad)
retf
mov
fsubr
cdq
lea
sti
dec
cmp
jmp
pop
pop
fdiv
xchg
out
sub
sub
call
cdq
std
loopne
mov
movs
ret
cli
jnp
cs
mov
lods
jmp
fisttp
shl
xor
out
lahf
add
in
push
or
pop
jnp
sub
add
mov
stos
loopne
fcomip
and
movs
mov
out
cmp
jl
jmp
cs
mov
int
scas
push
mov
sub
jmp
fcmovbe
dec
mov
sub
pop
test
adc
cld
in
xchg
dec
push
(bad)
out
push
dec
jmp
outs
sbb
retf
lds
mov
adc
fsub
test
(bad)
jmp
push
repnz
ror
mov
popa
in
and
enter
inc
lahf
in
sahf
push
loop
fwait
jle
adc
xor
std
clc
sub
addr16
stos
mov
jecxz
pop
jmp
lahf
(bad)
xor
mov
mov
jnp
sti
pop
or
cmp
lea
pop
or
adc
mov
lock
shl
pop
xchg
lock
pop
jne
pop
cli
iret
(bad)
out
fisttp
and
xchg
pop
fcmovb
pop
lods
addr16
jnp
loopne
cmp
lock
and
or
lock
nop
mov
std
push
adc
jge
sbb
pop
cmp
mov
outs
mov
(bad)
sub
loopne
popf
jne
sbb
mov
and
dec
or
(bad)
shl
repz
or
jo
push
cld
hlt
mov
jmp
call
jnp
(bad)
int3
push
mov
cmp
in
jnp
lods
dec
jle
jle
or
arpl
dec
sbb
test
adc
or
lea
das
ins
jl
pop
(bad)
fsub
inc
pop
das
aam
lods
leave
pop
cmp
jnp
iret
rcr
scas
ror
sti
repnz
push
ins
retf
test
mov
fisttp
inc
loop
call
in
mov
in
fmul
lock
dec
mov
mov
mov
pop
sbb
push
loopne
jl
hlt
(bad)
out
lea
mov
cld
enter
lock
fsub
xchg
(bad)
lock
pushf
shl
loopne
mov
mov
in
lahf
(bad)
cmp
retf
push
or
std
fimul
pop
mov
cmp
test
jle
iret
mov
add
lock
(bad)
repnz
call
lea
cmp
in
fwait
sub
loopne
dec
push
popf
or
cmp
xor
call
inc
push
pop
test
mov
fadd
stc
pop
int
fstp
xlat
scas
lock
lock
mov
das
sbb
sub
jns
loopne
xor
loopne
push
pop
mov
cmps
lea
std
jns
loopne
cmp
mov
xor
pop
call
lea
stos
cmp
lock
or
in
fwait
retf
push
adc
aam
cmp
lock
mov
lock
(bad)
retf
out
imul
mov
adc
dec
mov
mov
(bad)
out
das
pusha
arpl
shl
or
repnz
lock
or
xor
fucom
fwait
lock
out
ins
cli
retf
sub
popa
mov
ds
or
jp
xor
sub
jnp
and
mov
popa
mov
jmp
pop
sub
xor
cdq
cld
nop
xlat
and
mov
mov
add
ret
sbb
int
add
jge
out
je
mov
scas
lods
cmp
push
xchg
adc
pusha
inc
pop
sub
add
shl
imul
jg
push
aam
pop
pop
push
rcr
sbb
jnp
sub
cmp
jl
inc
in
push
pop
or
lods
jmp
dec
mov
loopne
fidiv
sbb
imul
xchg
sar
mov
sti
mov
retf
(bad)
in
jg
loop
mov
jp
out
dec
call
aad
mov
sbb
xor
push
mov
xchg
cmp
jmp
sbb
scas
stos
cs
or
shr
addr16
loopne
sahf
lods
jg
lock
sti
outs
jo
out
cmp
in
mov
sbb
lea
push
stos
lock
dec
movs
lock
inc
dec
ds
loopne
sbb
fild
mov
outs
cs
enter
loopne
jo
call
jno
ins
stos
fist
out
mov
jmp
lock
cli
dec
push
jge
test
cmp
xor
dec
mov
pop
jmp
cli
mov
sbb
enter
scas
adc
fwait
cmps
sub
xor
or
(bad)
pop
retf
sbb
imul
lahf
pop
hlt
stos
or
pop
stos
pop
rcl
jge
lahf
or
out
jnp
mov
mov
lock
pop
jp
xor
lods
xor
jge
cwde
out
pop
dec
dec
leave
aaa
retf
fwait
leave
or
push
push
das
mov
rcl
add
mov
outs
jmp
mov
lea
cld
jnp
dec
push
sti
fist
pop
xor
mov
das
jg
or
jnp
inc
sbb
dec
(bad)
ins
sub
mov
inc
shl
ud1
shl
cmp
ror
dec
retf
jecxz
mov
dec
hlt
dec
dec
stc
pop
push
int3
mov
lahf
mov
jno
or
call
or
lods
inc
outs
std
loop
stc
sti
cmp
mov
lock
push
dec
jg
cmp
out
mov
mov
lods
fwait
cmps
dec
push
dec
adc
mov
lahf
dec
idiv
sbb
or
sub
arpl
jo
(bad)
leave
pop
test
pop
iret
inc
pop
dec
xchg
sbb
leave
jmp
adc
enter
pop
mov
scas
iret
jo
lock
push
push
cmp
pop
sbb
adc
ins
jmp
retf
xchg
lock
inc
lock
mov
jp
iret
aaa
mov
mov
fucomip
call
shr
sub
(bad)
sahf
fist
pop
iret
or
test
or
mov
stc
int3
mov
fld
jge
push
pop
pop
enter
scas
dec
mov
xor
sbb
stos
dec
fild
ror
dec
loopne
fcomp
lea
mov
jle
fistp
xchg
or
sti
mov
cs
ret
ds
fstp
clc
fwait
mov
in
sub
xchg
aaa
pop
dec
lock
shl
mov
adc
mov
mov
or
dec
cld
fcomip
sub
inc
pop
pop
push
fisubr
push
cmp
mov
mov
sbb
add
cmp
das
mov
mov
add
and
call
mov
pop
lock
push
jle
lea
(bad)
cmp
leave
lock
lahf
xchg
inc
dec
lods
adc
stos
loope
cs
lods
and
mov
jmp
xor
aaa
sar
or
xor
popa
mov
std
sbb
std
mov
loopne
call
loop
idiv
inc
fmul
mov
pop
das
pushf
push
and
push
pop
adc
lock
rol
xchg
xchg
dec
jns
sub
sti
loopne
mov
fisubr
jle
jo
stc
xlat
jnp
stos
(bad)
sub
das
jge
or
in
push
lock
dec
xlat
pop
in
ror
dec
cli
loopne
adc
push
sti
gs
in
jl
jmp
or
mov
sub
dec
fisttp
sti
cs
lahf
(bad)
out
stc
stc
jnp
pushf
push
les
mov
out
push
add
mov
ficom
push
and
mov
xchg
dec
push
mov
or
out
add
sbb
mov
das
pop
mov
push
cld
mov
cmp
fidiv
ret
lds
cmp
mov
es
outs
jle
or
ins
fwait
or
shl
lock
mov
repnz
shl
mov
out
fimul
jp
mov
aad
enter
aaa
int
fwait
lock
cmp
fiadd
adc
fwait
das
std
out
fstp
or
sub
daa
sti
mov
cmp
fldlg2
icebp
push
xchg
leave
in
clc
lds
(bad)
jle
push
lock
enter
std
rcr
in
(bad)
stc
ins
mov
leave
push
iret
lock
sbb
and
pop
dec
xor
call
mov
jno
fiadd
mov
adc
loopne
or
clc
das
mov
cli
out
pop
ins
(bad)
scas
add
cmp
and
leave
lock
fild
xchg
fwait
imul
repnz
out
in
jmp
mov
or
lock
or
jnp
mov
out
repnz
hlt
pop
push
fstp
pusha
or
push
fcom
in
std
fld
push
in
outs
outs
cld
cmp
les
loopne
pop
xchg
mov
loopne
cmp
pop
jmp
pop
jnp
cmp
dec
adc
nop
dec
jo
hlt
rol
jnp
icebp
iret
fwait
out
pusha
stos
sahf
or
jmp
fucomip
cdq
nop
pop
push
xchg
add
inc
ds
sbb
jle
test
sbb
ror
cmp
add
pop
dec
clc
inc
inc
movs
pop
or
adc
mov
xor
xchg
test
push
cmp
sbb
lock
inc
mov
dec
movs
mov
dec
out
sbb
bound
into
fwait
fs
mov
mov
mov
xchg
call
lods
sti
fs
lods
jae
idiv
jge
and
xchg
mov
push
mov
icebp
(bad)
mov
std
xor
ja
push
mov
lods
popf
and
dec
stc
mov
les
call
mov
pop
fdivr
sti
out
jge
loope
mov
int
out
cs
cwde
or
add
lods
jmp
mov
pop
mov
fdiv
leave
aaa
retf
hlt
or
fsub
retf
stos
aad
inc
shl
lahf
pop
ss
jae
add
out
cmp
xor
xlat
cmp
cli
stos
pop
xor
cmp
sub
or
adc
enter
xchg
lock
cmp
lock
fs
inc
inc
pop
pop
mov
xor
jnp
mov
cmps
mov
dec
mov
fsubr
xor
cs
cs
add
pop
rcr
dec
fwait
in
xor
xlat
(bad)
lock
mov
sti
pop
outs
mov
adc
xchg
test
idiv
or
lods
sbb
mov
push
jnp
or
sbb
shl
inc
mov
and
imul
mov
cmps
lea
clc
xor
aas
mov
sbb
sub
loopne
and
loope
jp
dec
lock
(bad)
cmp
dec
mov
jmp
jl
pop
and
hlt
aam
call
std
pminsw
aas
mov
inc
cmc
jno
jmp
mov
outs
push
jo
jmp
cmp
lods
lock
pop
jnp
pop
(bad)
int
cld
mov
pop
or
cdq
mov
popf
xor
sbb
sbb
hlt
ds
mov
sbb
mov
jnp
mov
dec
cmp
mov
pop
pop
repnz
pop
mov
and
gs
aaa
cmp
imul
cmp
adc
push
loopne
inc
cmp
into
mov
hlt
in
push
mov
(bad)
cmc
jle
cli
or
lea
mov
mov
push
ins
pop
dec
je
lock
or
add
repz
cvtps2pd
lock
mov
rol
out
std
lods
pushf
cmps
loop
inc
or
retf
lock
adc
mov
shr
std
dec
sti
es
ja
dec
adc
pop
or
pushf
fnstcw
enter
mov
mov
adc
mov
das
sub
leave
or
ins
or
adc
fcmovnbe
lock
int
mov
loopne
cmp
add
lock
in
aaa
push
(bad)
lock
adc
cmp
push
out
pushf
or
jle
mov
shr
out
out
cmp
mov
sbb
sub
ds
lea
jle
jne
xchg
pushf
lock
jp
in
sub
mov
adc
xor
movs
mov
sbb
ds
push
repz
or
or
mov
fwait
ins
xor
mov
sub
dec
pop
(bad)
out
movs
scas
pushf
pop
int3
sti
mov
retf
rcr
cmp
data16
scas
or
fld
push
pop
cli
jmp
sbb
mov
pop
int3
push
std
pop
adc
ins
cmp
mov
fcmovne
int
cmp
pop
or
pop
mov
inc
mov
pop
mov
fimul
jmp
pop
jge
sbb
add
push
in
sub
(bad)
lods
stos
fidivr
out
fdivrp
mov
push
int3
mov
jnp
outs
scas
cli
lahf
pop
scas
fsubr
mov
cmp
stos
jns
or
fimul
fimul
jmp
jg
sbb
fmul
jl
leave
push
push
mov
or
cli
mov
dec
stos
ins
fisttp
idiv
jmp
or
jle
call
mov
cmp
lods
mov
jg
sahf
jge
movs
shr
sbb
pop
pop
mov
lods
fnstsw
in
cs
repz
pop
jg
dec
ficomp
pushf
pop
mov
pop
jl
fisttp
lods
jnp
mov
popf
(bad)
std
sub
sub
lods
iret
(bad)
mov
fld
fidivr
push
jb
dec
or
into
xchg
sub
iret
scas
pop
popf
lods
jmp
cmp
dec
mov
push
adc
xlat
xlat
fmul
pop
push
pop
mov
int3
cld
jle
out
int
(bad)
sahf
jp
cmp
ins
mov
ins
rcr
scas
ins
int3
sti
in
jg
clc
xor
push
sahf
stos
dec
dec
jnp
mov
add
retf
mov
adc
(bad)
cmp
sbb
fwait
rcl
sub
ins
pop
add
sahf
fnstcw
pop
cld
stos
in
(bad)
std
push
scas
and
sbb
adc
mov
mov
pop
ins
out
cmp
dec
pushf
cmp
or
jne
int
adc
cli
jmp
out
cmp
in
scas
pop
popf
fstp
adc
mov
fbstp
or
mov
dec
(bad)
stos
sti
(bad)
stc
cld
cmp
mov
pop
cdq
sub
sub
aam
pop
pop
retf
call
sub
rcl
or
call
call
cs
sahf
dec
test
cmovl
lahf
add
aam
or
fistp
lods
int3
mov
out
sbb
mov
add
daa
mov
ret
cmp
(bad)
jl
sub
sti
mov
test
fwait
pop
(bad)
lods
fdiv
int
sbb
jnp
fidivr
pop
cli
mov
(bad)
mov
jl
jle
icebp
pop
popf
jmp
pop
or
mov
imul
test
(bad)
inc
push
popf
sbb
sahf
fmul
test
dec
cmp
jmp
cmp
dec
sti
(bad)
fmul
cs
pushf
fucomp
dec
mov
in
outs
xchg
icebp
mov
cld
sub
int3
jmp
and
les
outs
sub
dec
into
sbb
cmp
scas
jmp
jmp
test
mov
mov
jle
jmp
test
sub
and
imul
hlt
pop
mov
mov
sbb
fstp
lahf
fcom
fdivr
retf
in
fistp
jg
lock
cmp
stos
and
sti
aam
sbb
sub
push
adc
(bad)
addr16
je
call
push
inc
sbb
dec
dec
ficom
push
les
sahf
xor
mov
dec
(bad)
xor
sbb
adc
sti
ins
pop
fucomp
jmp
mov
lea
data16
push
dec
fs
pop
pop
out
cmp
mov
lods
sbb
jle
xchg
hlt
jge
push
mov
mov
ins
retf
pop
xor
sbb
int
pushf
or
cs
dec
jmp
inc
mov
sub
fwait
or
and
ins
mov
imul
outs
and
iret
mov
fwait
jo
push
pop
test
xchg
aam
rcl
imul
out
sahf
jmp
or
stos
pop
jl
push
iret
cld
push
jbe
jge
mov
int
sub
mov
ins
cld
mov
sbb
jnp
jmp
mov
ins
sub
push
mov
lea
add
pop
mov
sar
imul
daa
sbb
in
call
add
mov
retf
fwait
mov
out
adc
mov
lods
jge
pop
mov
dec
mov
push
aas
adc
sti
jo
jne
loope
pop
(bad)
mov
mov
mov
(bad)
rcr
jbe
retf
adc
dec
mov
enter
add
(bad)
shr
cmp
or
aad
fld
adc
repz
mov
lock
or
mov
out
fwait
mov
loope
sub
leave
xor
sub
fldenv
cmp
xchg
leave
adc
fwait
std
cmp
sub
test
sbb
cld
hlt
ins
push
popf
push
scas
add
adc
or
mov
sbb
push
sbb
pop
push
pusha
clc
ins
cmp
sar
sti
fwait
stos
pop
sub
fnstsw
push
or
add
lea
inc
mov
lea
fdivrp
enter
shl
dec
into
lea
push
outs
push
sbb
jl
ja
cmp
imul
sar
fisubr
pop
pushf
push
nop
jge
inc
lea
std
scas
les
sub
or
and
(bad)
mov
xchg
(bad)
out
mul
add
ins
sti
xchg
loop
rol
sub
xchg
push
mov
and
push
jmp
jp
pop
bnd
call
push
stc
int
outs
nop
les
dec
inc
mov
mov
int3
push
(bad)
cld
sbb
ins
adc
dec
pop
popf
ds
pop
sub
call
out
push
jns
cmp
jle
sbb
pop
in
xor
lock
inc
cmp
movs
clc
pushf
jmp
pop
loope
cmc
in
aas
call
pushf
mov
daa
retf
mov
mov
pop
xor
mov
popf
dec
out
fs
(bad)
inc
jl
jmp
imul
in
es
in
nop
(bad)
mov
repnz
stc
in
push
xor
or
jae
xor
push
mov
pop
fisttp
xchg
ss
pop
xor
orps
and
or
xor
pushf
in
cs
cwde
hlt
inc
ins
mov
movs
pusha
jbe
cli
ins
jb
mov
pushf
call
call
(bad)
sub
js
sbb
or
inc
test
add
ret
aad
fcmovne
and
jno
pop
icebp
aas
fadd
xchg
rcr
push
fcmovbe
mov
popa
pop
adc
push
jle
mov
daa
neg
jmp
inc
sub
jbe
and
mov
fadd
hlt
mov
or
cmp
ds
jmp
dec
push
cmp
test
or
xchg
xchg
inc
mov
xbegin
pushf
shl
movs
mov
jne
dec
test
or
pushf
int
and
(bad)
retf
lock
mov
xchg
or
(bad)
icebp
jae
mov
pop
or
cmp
dec
push
add
jnp
test
lahf
jl
sti
sbb
cmp
stos
into
xor
mov
int3
cmp
imul
inc
inc
jg
sbb
add
arpl
or
inc
dec
test
call
xchg
jl
(bad)
mov
push
dec
(bad)
mov
das
test
xchg
add
push
mov
popf
mov
pop
sub
mov
lock
cmp
xchg
out
ins
aaa
fcomp
aas
div
jl
in
ins
cmp
mov
mov
loop
mov
or
fsub
jg
popf
movs
jmp
shl
pop
addr16
shr
sub
add
or
jmp
hlt
call
cdq
sub
xor
into
cwde
add
or
mov
sub
jae
xchg
in
mov
pop
push
lds
cmp
data16
add
clc
and
(bad)
cmp
adc
mov
mov
stos
lea
xchg
jmp
push
out
mov
inc
lock
or
js
pop
rol
dec
or
in
std
add
mov
sub
dec
(bad)
adc
push
int3
dec
hlt
arpl
into
xchg
pop
int3
(bad)
dec
mov
pop
inc
mov
dec
fcom
inc
fbstp
lea
stc
call
pop
hlt
jns
mov
xor
jbe
mov
ins
sbb
dec
mov
jb
(bad)
in
(bad)
(bad)
and
aas
xor
ja
inc
hlt
xor
sbb
inc
pop
adc
adc
xor
inc
popa
cmp
sbb
icebp
(bad)
call
push
stc
push
cmp
addr16
shr
push
jl
cmc
lods
jle
jne
and
xor
popa
adc
xchg
enter
cmp
jl
in
push
cmp
or
test
int3
xchg
test
dec
inc
addr16
in
enter
xor
xchg
mov
pop
mov
xchg
dec
test
sbb
push
test
xchg
mov
mov
mov
dec
sub
mov
jbe
pushf
jno
mov
or
adc
ja
sbb
sub
mov
mov
das
xor
lods
sub
adc
out
cmp
mov
mov
enter
and
cmp
in
add
das
or
push
js
pop
jle
ins
push
push
pop
aad
mov
jb
xchg
in
pop
std
into
add
test
lods
pushf
add
pop
sbb
push
sti
sbb
dec
or
mov
add
mov
out
jmp
gs
pop
xchg
mov
dec
retf
ss
cmp
pop
les
ret
or
ins
fst
sti
loope
jge
dec
ins
add
or
popf
adc
push
in
mov
in
mov
lea
mov
les
ins
pusha
jle
outs
adc
mov
xor
aad
xchg
jl
mov
and
ins
mov
mov
mov
int3
mov
in
gs
nop
pop
xchg
out
rol
cld
or
sbb
adc
bound
jl
mov
mov
cmp
dec
push
int3
dec
into
out
dec
inc
imul
cdq
mov
cmp
scas
pop
fdiv
shl
cmp
stc
mov
ins
enter
add
sub
pop
push
xchg
cmp
fwait
in
mov
frstor
aas
pushf
push
pusha
and
mov
ins
sbb
in
movs
call
in
mov
xor
bound
nop
fbstp
mov
push
shl
rcl
int3
test
into
jb
icebp
pop
popa
fmul
adc
jne
in
jmp
mov
mov
es
jmp
add
into
(bad)
hlt
adc
mov
das
pop
pop
pop
adc
jl
pushf
jmp
add
test
ror
ficomp
lods
push
pop
movs
je
je
cld
sar
jne
and
jmp
mov
inc
cmp
(bad)
cmp
push
out
sahf
not
adc
jne
adc
cmp
arpl
xor
mov
aad
(bad)
ficom
clc
adc
cmp
stc
daa
mov
loopne
jo
push
sbb
nop
xor
jno
aam
movs
lock
lock
in
mov
sbb
rcr
xchg
pop
scas
test
sbb
xchg
xchg
jl
xchg
(bad)
in
push
dec
test
add
out
mov
dec
sub
jl
clc
in
push
hlt
dec
xor
call
(bad)
test
stos
aas
mov
inc
mov
xor
imul
add
push
ror
hlt
test
ss
shl
mov
stos
movs
test
or
rcl
fdivr
xor
cmp
lock
pop
inc
sub
mov
pusha
inc
push
cdq
sbb
adc
adc
add
jo
mov
add
sub
mov
mov
adc
mov
js
mov
je
fiadd
hlt
pushf
inc
pop
mov
movs
in
popf
lods
jp
(bad)
mov
aaa
fdivr
fdiv
mov
lods
mov
lahf
pop
mov
loope
sbb
mov
inc
xor
scas
call
int3
adc
cdq
xchg
cld
in
sub
add
movs
push
push
int3
add
in
enter
fimul
xchg
or
imul
popf
xchg
(bad)
jns
call
bound
mov
or
ins
daa
dec
mov
and
mov
ds
push
int3
inc
jae
xchg
xchg
and
gs
cdq
inc
or
mov
mov
sub
aas
and
xor
cmp
xchg
pop
mov
mov
jl
ror
or
sbb
out
cmps
inc
xchg
adc
mov
sub
(bad)
mov
in
mov
aam
aam
cld
sbb
jmp
call
fimul
js
ficomp
popf
lea
dec
movs
push
pop
scas
mov
or
imul
jg
push
rol
sbb
bound
in
imul
mov
pop
push
or
mov
pop
icebp
sub
inc
mov
loop
xor
push
mov
mov
mov
cmp
lock
mov
cld
jp
mov
and
xor
add
xor
es
pushf
xchg
bound
push
imul
sub
add
inc
cdq
dec
jl
add
jno
adc
xor
push
(bad)
enter
ss
popa
hlt
inc
mov
mov
cmp
mov
(bad)
daa
div
clc
xor
adc
adc
dec
xchg
call
mov
xlat
push
mov
mov
mov
pop
lock
push
in
mov
movs
xchg
xor
or
shr
sbb
pop
xchg
shl
sbb
sub
and
gs
ret
or
push
jno
pop
adc
xchg
cmp
inc
popa
aam
jnp
dec
ret
in
clc
call
add
push
or
fsubr
mov
sbb
xchg
gs
inc
fist
mov
call
inc
jg
enter
fwait
xor
inc
or
sub
addr16
xchg
or
aas
fsub
inc
bound
fmul
imul
xchg
add
cmc
or
mov
cmp
in
jl
arpl
inc
add
or
mov
adc
ins
nop
xchg
out
call
pop
or
cmp
dec
xchg
enter
sbb
cmp
pop
aaa
ja
or
(bad)
inc
and
cmc
gs
sub
adc
loope
gs
mov
xchg
add
pushf
xlat
and
cmp
stos
mov
(bad)
push
xchg
adc
xchg
push
rcl
int3
adc
push
add
mov
movs
les
fs
mov
movs
or
add
clc
enter
push
xlat
and
test
mov
in
imul
add
add
(bad)
and
retf
movs
ins
mov
or
call
std
xchg
in
icebp
cmps
inc
mov
in
les
in
mov
pop
nop
jmp
cmps
mov
add
add
in
xor
in
and
mov
inc
mov
push
pop
mov
add
mov
or
rcr
movs
hlt
add
cld
sub
out
adc
jmp
loop
(bad)
add
pop
ins
and
call
push
or
jmp
ss
cmp
inc
jle
lods
outs
or
add
rol
add
adc
jne
mov
sbb
mov
cmp
cmp
pusha
xchg
imul
mov
xchg
mov
and
rcr
bound
or
cwde
ss
shr
js
enter
and
in
or
js
hlt
xor
fcomip
sbb
adc
mov
arpl
fwait
fwait
sub
scas
arpl
dec
cwde
sub
ficomp
jle
jns
push
cmps
(bad)
adc
mov
adc
mov
mov
scas
mov
sub
mov
xor
xchg
in
jnp
or
mov
jnp
mov
xchg
or
das
xchg
mov
retf
mov
sub
jp
push
jb
nop
jae
mov
pushf
mov
adc
aaa
out
xchg
or
add
push
enter
jb
and
jmp
adc
mov
jns
int
xchg
pop
pushf
add
hlt
js
idiv
xor
jno
fdivr
loop
or
xchg
push
inc
imul
jl
hlt
call
mov
inc
inc
mov
cmp
jl
jne
fsubr
sbb
aad
ror
fdivr
cld
mov
cld
mov
nop
add
dec
cmps
mov
in
out
stos
ret
cwde
out
mov
jno
mov
inc
sub
arpl
sub
cdq
mov
mov
sbb
lods
call
out
or
mov
pop
mov
inc
push
inc
movs
cmp
cmp
cmp
inc
jl
push
push
jns
fwait
add
loop
xchg
pusha
dec
or
mov
xchg
inc
add
aaa
call
pop
inc
push
mov
mov
arpl
pop
jmp
pop
movs
int3
call
rcr
sbb
xchg
std
mov
loop
add
aas
sub
mov
pusha
cld
mov
sbb
scas
sub
mov
inc
mov
xchg
test
int3
dec
ins
mov
enter
jge
movs
xor
jp
sbb
ins
sub
inc
dec
sbb
cmp
jecxz
mov
cli
jbe
jg
mov
call
addr16
cmp
cmp
mul
push
test
out
dec
dec
adc
cwde
arpl
outs
ss
pop
jecxz
inc
ss
out
and
and
cmp
mov
mov
dec
into
dec
push
test
push
sbb
jmp
mov
ret
dec
in
js
cmp
pop
cdq
sbb
dec
dec
inc
in
xchg
and
inc
(bad)
sbb
mov
jo
das
stos
bound
sbb
cmp
ret
arpl
repnz
ja
mov
add
das
inc
or
les
sbb
imul
mov
push
cli
xchg
hlt
in
mov
cmp
pop
test
push
xchg
clc
loope
adc
sbb
enter
dec
dec
add
daa
inc
or
sbb
in
fiadd
xor
js
lea
hlt
stc
cmps
movs
cs
scas
mov
movs
mov
mov
dec
call
sbb
test
or
das
cmp
dec
sub
pop
push
xor
test
cmp
cmp
dec
enter
dec
scas
add
sub
pop
mov
ret
adc
es
ja
es
in
fs
into
dec
mov
movs
mov
aaa
sbb
lock
pusha
xchg
mov
xor
leave
mov
fwait
cmp
popa
add
rcr
call
cmp
cmc
pusha
test
sub
bt
bt
push
pop
cmp
jmp
dec
sbb
jo
cmps
mov
cmps
cmp
ror
icebp
mov
js
xchg
push
adc
popf
ret
fisttp
mov
arpl
cmp
jmp
es
push
(bad)
in
jae
xchg
cmc
cmp
loope
inc
pushf
sub
push
mov
scas
inc
bound
pop
cmps
mov
test
scas
repz
lahf
ja
jns
jle
cmp
in
arpl
shl
pusha
xor
ins
lods
dec
jmp
dec
addr16
ret
loope
inc
addr16
mov
addr16
pop
std
sbb
xchg
add
pusha
cmp
jmp
pusha
lea
ja
or
jmp
movzx
mov
mov
push
pushf
push
ret
scas
push
ins
jmp
or
ins
nop
mov
xchg
push
(bad)
sbb
pop
js
lods
adc
xor
call
inc
cdq
push
and
pop
add
add
fxch
rol
dec
jne
inc
push
mov
das
push
test
out
pushf
ja
push
mov
in
dec
shl
shld
mov
ror
adc
test
mov
rol
mov
cmp
call
sar
shl
aam
mov
add
and
inc
sub
mov
lea
cmp
push
shrd
movzx
cmc
mov
clc
clc
bt
sub
pusha
lea
jno
push
rep
pusha
movsx
bswap
mov
pushf
mov
push
lea
jmp
mov
pusha
push
push
push
lea
jmp
popf
cmc
pop
in
cmp
push
in
loopne
cmps
arpl
jne
fsub
push
xchg
cs
push
mov
test
dec
arpl
aas
pop
xchg
add
imul
popa
cmps
jo
xchg
xor
repnz
adc
pavgw
scas
inc
cdq
imul
imul
dec
call
hlt
fdivr
xchg
adc
mov
pop
pop
push
les
dec
pop
pushf
outs
mov
jmp
sbb
and
movs
pop
je
(bad)
sbb
push
out
push
inc
imul
ss
fsub
dec
pop
sub
cmps
je
and
sbb
outs
enter
inc
jns
adc
je
sub
lods
shl
and
(bad)
and
popa
out
fisttp
(bad)
ins
mov
popa
xchg
mov
sbb
xchg
mov
xchg
sub
or
mov
cmc
shl
pushf
call
add
std
xor
call
fs
add
add
add
add
add
jbe
add
fs
or
add
add
add
add
or
ja
adc
add
add
add
add
gs
sbb
add
add
add
add
jbe
add
add
add
push
mov
adc
mov
push
ret
cmp
adc
xchg
mov
inc
imul
lods
call
imul
dec
neg
mov
ror
aas
test
sti
sbb
jne
mov
mov
mov
dec
push
xlat
push
rcl
dec
cwde
jmp
cmp
int3
(bad)
out
stos
pop
jle
jbe
xchg
push
adc
jo
mov
and
jne
lea
ret
mov
jg
xchg
movaps
(bad)
and
pop
mov
(bad)
cli
mov
xchg
and
adc
repz
cmp
vpavgw
sbb
push
and
xlat
pop
je
add
out
cmp
inc
test
(bad)
adc
sub
dec
jne
jne
shl
jmp
ret
or
dec
jo
mov
xor
fild
jo
inc
push
fmul
in
pop
xchg
sbb
test
(bad)
push
add
sub
sbb
xchg
pop
inc
sahf
mov
(bad)
sub
(bad)
push
mov
dec
gs
jnp
iret
icebp
or
pop
xchg
and
cmps
pop
cmp
and
mov
mov
push
pushf
lea
jmp
cmps
jmp
cmp
jb
into
out
js
cmp
repnz
test
dec
mov
pop
mov
(bad)
xchg
add
pop
imul
repnz
fmul
cld
mov
fcomi
cmps
dec
mov
repz
jne
(bad)
pop
pop
push
and
mov
add
and
mov
pusha
pushf
lea
ja
cmc
imul
bt
bt
test
add
push
mov
pusha
pushf
lea
jmp
mov
clc
lock
pop
mov
enter
jle
lds
dec
cmp
out
addr16
scas
cmp
mov
(bad)
mov
push
(bad)
pushf
add
push
dec
rcl
aaa
enter
push
jmp
mov
dec
nop
and
enter
ins
dec
cwde
dec
adc
or
icebp
(bad)
fidiv
and
cwde
pop
cmp
repnz
add
clc
xchg
sbb
enter
sub
sub
je
dec
push
gs
out
inc
pop
out
xchg
(bad)
es
fdivr
outs
cmc
mov
push
cmps
push
and
inc
xor
jae
je
add
add
add
xchg
int
jmp
aad
repz
addr16
adc
daa
jl
sbb
hlt
inc
xchg
cdq
cmp
pop
sbb
es
jl
mov
call
push
mov
jp
popa
mov
retf
add
imul
(bad)
sbb
repz
cmps
test
cmovnp
inc
sub
int
fidiv
inc
pop
test
dec
mov
stos
hlt
push
mov
pusha
lea
jmp
mov
mov
mov
push
mov
pushf
not
push
lea
call
sbb
push
icebp
cmp
pop
xor
jno
inc
stos
bnd
mov
xor
cmp
aaa
and
inc
mov
dec
addr16
daa
push
test
dec
push
retf
out
rcr
jno
lods
movs
fistp
movs
fisubr
inc
ins
mov
in
je
inc
lea
call
jp
shl
test
clc
adc
pop
jo
ja
das
hlt
mov
xchg
push
scas
and
jg
xor
dec
pop
mov
mov
sbb
pop
cmp
imul
sahf
repz
mov
xor
sub
push
sub
fiadd
in
pop
mov
mov
mov
or
imul
aaa
retf
leave
push
stc
lods
sbb
mov
cmc
movs
xchg
popf
mov
jg
jecxz
or
xlat
pusha
pop
enter
inc
mov
and
iret
mov
daa
add
mov
pusha
pushf
push
mov
mov
lea
jmp
shl
cwde
repnz
cli
xchg
lods
int3
cli
and
and
xor
jg
out
lods
stos
mov
xchg
push
imul
lea
pop
mov
pop
icebp
cld
jp
pop
clc
aas
push
pop
shl
xchg
clc
adc
dec
out
pop
fs
lock
sbb
pop
jbe
pop
movs
out
aaa
adc
pop
push
add
sub
jnp
fwait
or
lds
fdivr
mov
dec
add
xor
aad
pop
sub
sti
xchg
sbb
shl
repnz
sbb
sbb
add
pushf
adc
lea
jne
pushf
push
lea
call
pusha
lea
jb
pusha
mov
push
ret
xchg
mov
mov
mov
data16
push
inc
aam
lods
xchg
mov
inc
pop
cld
pop
aam
xchg
xchg
inc
shr
xchg
or
test
sub
add
movs
(bad)
out
mov
outs
scas
mov
std
shl
dec
aas
sar
std
xor
lds
stos
push
xchg
mov
xor
(bad)
lock
push
rcr
ins
call
sbb
ror
add
add
add
pushf
pusha
mov
pushf
lea
jmp
mov
mov
lea
je
push
bswap
lea
lea
pusha
call
(bad)
gs
hlt
cmp
cmps
call
shl
dec
cli
movs
(bad)
pop
mov
add
lods
ins
mov
push
call
sbb
pop
and
or
pop
and
pop
adc
int
inc
jo
or
dec
int3
adc
add
xchg
mov
add
aas
popa
xchg
vmovsd
ja
fst
sub
std
hlt
cmp
into
(bad)
mov
mov
jmp
pop
mov
mov
add
adc
call
fxch
out
gs
cmp
dec
mov
add
cmps
iret
jecxz
sbb
popa
imul
inc
pop
movs
jmp
add
or
leave
(bad)
and
sti
xchg
mov
daa
inc
retf
xor
adc
jp
data16
ret
imul
nop
sbb
dec
hlt
int3
std
and
mov
and
fnop
iret
pop
pop
enter
jnp
aas
dec
retf
stos
arpl
cmp
xchg
xchg
mov
call
mul
mov
or
mov
dec
jge
mov
push
mov
jbe
add
mov
js
dec
jae
pushf
mov
push
lea
jmp
add
dec
outs
arpl
inc
ins
ins
outs
arpl
mov
pusha
push
lea
jmp
imul
mov
bt
cmp
call
jmp
lea
push
mov
mov
mov
mov
pusha
push
ret
pop
shl
cmp
fisub
stos
into
and
lock
hlt
adc
adc
rol
rcl
adc
lods
push
mov
arpl
lock
cmp
lea
fdiv
sbb
jmp
sbb
in
mov
push
inc
out
push
call
pop
mov
jmp
shl
and
je
jg
cmc
sub
aaa
add
in
test
pushf
lea
jne
pushf
push
mov
jmp
test
or
std
lods
shr
cmp
pop
ret
loope
(bad)
mov
pop
int3
pushf
cli
inc
enter
dec
js
bound
ret
imul
xchg
inc
outs
(bad)
mov
pop
mov
or
dec
in
shl
pop
sahf
mov
imul
mov
pop
js
pop
enter
hlt
cmc
stos
sub
adc
dec
dec
leave
mov
fcomi
fcomi
add
jecxz
sub
ins
or
add
cmps
call
mov
push
pusha
lea
jmp
call
push
pushf
lea
ja
jne
push
mov
push
imul
pusha
clc
add
mov
pushf
lea
jmp
mov
pushf
lea
jmp
std
retf
xor
cmp
ds
ret
aam
add
dec
(bad)
in
jl
mov
fisubr
sahf
mov
xor
std
stc
xor
inc
pop
xor
mov
or
mov
aas
mov
(bad)
retf
std
cmps
push
rol
aam
sahf
dec
mov
stos
in
push
test
or
add
pusha
jae
dec
pushf
cmc
lods
xchg
mov
pop
ja
movs
shl
fadd
in
push
adc
inc
or
fs
jb
pushf
push
pushf
pusha
push
ret
lahf
aaa
imul
or
cmp
in
lahf
aas
daa
or
xor
aaa
and
dec
mov
gs
leave
jmp
in
and
or
jb
mov
add
inc
outs
mov
pusha
mov
pop
jo
(bad)
sbb
push
dec
jle
and
(bad)
cld
int
mov
test
test
jg
jb
(bad)
pop
dec
mov
ret
xor
aaa
mov
aam
mov
fcomp
push
dec
mov
add
int3
data16
psrlq
cmps
ret
in
movs
xchg
stos
mov
ret
xchg
arpl
push
stos
mov
mov
xor
mov
sbb
mov
inc
jo
fdivrp
sbb
jbe
les
xchg
push
(bad)
add
stc
push
sbb
adc
sub
and
pop
push
rcl
rcl
and
cdq
stc
cmp
in
push
mov
mov
jmp
push
fisttp
and
cmp
fs
pop
out
inc
mov
push
mov
pop
mov
test
and
mov
movs
jge
aam
sub
aam
fidivr
xchg
push
test
mov
fnstsw
xchg
and
and
or
pop
pop
in
jbe
jge
popa
jge
cdq
popf
test
cmp
push
pop
sbb
cmp
adc
stc
cmp
loope
sbb
dec
or
ret
dec
gs
jg
inc
mov
jl
mov
lds
sbb
(bad)
imul
xchg
mov
mov
mov
(bad)
movs
clc
repz
jl
push
cs
push
(bad)
loop
das
sahf
adc
ss
(bad)
cmp
add
data16
rcl
inc
add
idiv
cmp
retf
repz
mov
stos
xchg
xor
mov
pop
shl
push
ins
je
mov
dec
push
push
aaa
movs
int3
push
pop
xor
arpl
or
gs
mov
cmp
sbb
fxch
and
mov
jge
and
std
sbb
xchg
mov
(bad)
fiadd
fimul
push
lea
call
pusha
mov
push
lea
jmp
pusha
jmp
pushf
mov
lea
jne
clc
sub
shl
shl
mov
clc
add
neg
cmc
cmp
shl
mov
bt
test
pushf
mov
mov
lea
je
cmp
clc
call
in
cmp
leave
outs
mov
rep
push
jne
jns
sbb
push
movs
aad
inc
mov
mov
neg
loop
sub
mov
(bad)
scas
cmc
jge
cmp
dec
pop
push
(bad)
out
adc
fisttp
sbb
mov
rcl
dec
jl
sti
cmp
mov
movs
(bad)
jecxz
and
imul
sbb
add
jb
pop
sub
mov
lea
imul
inc
cdq
pop
mov
mov
mov
inc
icebp
push
in
mov
pop
movs
xchg
mov
mov
std
cld
test
imul
mov
or
add
cmp
sar
hlt
cs
in
sbb
push
mov
adc
icebp
adc
fld
fild
sti
cmp
mov
mov
push
shl
dec
cmc
jno
shr
int3
xchg
add
mov
pop
jns
jae
inc
and
adc
mov
je
popa
mov
shr
xor
into
pop
jg
push
pop
lahf
(bad)
in
pop
movntps
adc
xor
add
xchg
mov
jmp
imul
pop
xchg
mov
add
into
nop
sbb
lock
pop
xor
cmp
xor
mov
stos
push
test
hlt
es
add
out
pop
xor
inc
push
jae
sub
jmp
jno
shr
inc
(bad)
in
adc
in
cmps
adc
push
add
cmp
xchg
dec
scas
or
jp
fldcw
pop
dec
rol
xor
xor
jecxz
mov
in
mov
mov
clc
sub
mov
ror
aas
pop
jno
push
inc
and
aaa
dec
push
clc
mov
cmc
not
stc
sub
cmc
test
test
cmp
lahf
movsx
jmp
pusha
call
mov
pop
std
cmp
push
xchg
fmul
add
sbb
data16
mov
pop
jge
fsubr
lock
(bad)
in
fwait
xchg
lock
test
pop
pushf
jge
or
jle
mov
adc
add
ins
mov
adc
mov
jp
je
jecxz
dec
(bad)
gs
cmps
mov
lds
mov
mov
push
xchg
mov
mov
in
lea
xchg
call
leave
push
xchg
aad
jnp
mov
shl
sti
sbb
xchg
add
addr16
in
sar
jo
or
cmp
adc
shl
inc
outs
xchg
inc
bound
cli
lods
icebp
es
mov
outs
leave
imul
call
xor
cmps
test
dec
adc
fidivr
pop
add
xor
(bad)
push
(bad)
leave
jge
cmp
jmp
movs
xor
jl
cmc
jg
stc
xor
scas
in
adc
dec
pop
mov
loopne
jne
out
push
lea
jne
push
xor
bsf
mov
add
neg
cmc
add
mov
rcl
shl
mov
stc
push
mov
test
test
push
lea
je
cmc
pushf
bt
sub
stc
sub
jle
cmp
jmp
sti
xchg
leave
(bad)
cmp
(bad)
stos
retf
call
mov
adc
popf
ss
mov
push
jmp
stos
pusha
leave
xchg
sub
pushf
call
aas
push
xchg
ds
mov
inc
or
inc
daa
xchg
xor
or
pop
ja
idiv
push
xchg
cmp
popf
aad
or
xor
das
add
jl
cmc
add
call
ja
inc
(bad)
cmp
mov
pop
or
push
std
sbb
inc
push
test
dec
add
not
sub
int3
jl
in
mov
out
or
sar
pop
xor
xor
jnp
dec
add
xchg
xor
ja
fstp
cld
out
dec
jne
fisttp
cmp
jmp
xor
aas
(bad)
fnstsw
(bad)
cmp
shld
mov
gs
mov
ja
sbb
jae
fdiv
int
pushw
shl
sar
or
stos
mov
fdiv
inc
les
repnz
push
mov
cmp
dec
push
cmc
inc
mov
fbld
int3
call
mov
push
jo
dec
mov
dec
out
sub
imul
xchg
and
mov
movs
pushf
xchg
mov
xor
hlt
pop
jmp
in
sbb
pop
jb
test
jmp
sbb
retf
fist
push
inc
push
inc
mov
lea
jmp
and
add
adc
shl
int3
pop
mov
dec
(bad)
cmp
xor
xchg
pop
loopne
imul
fwait
sbb
pop
aas
and
cmp
test
ins
mov
pop
clc
stc
data16
dec
push
fbld
ins
mov
adc
pop
jp
mov
adc
mov
repz
rol
out
push
js
(bad)
or
cmp
popf
(bad)
in
adc
or
out
jle
push
mov
loop
xchg
sub
imul
lahf
jecxz
add
cmp
jae
push
cld
cmps
and
or
xor
pop
popf
mov
rcr
pushf
jmp
cmp
imul
dec
xchg
loopne
push
mov
push
in
int
std
rcr
lds
clc
push
lea
jmp
jmp
sub
dec
out
shl
inc
outs
or
jle
int3
fstp
mov
ins
(bad)
jl
imul
popf
mov
cs
mov
xor
not
out
jb
pop
ret
pop
cs
jmp
rcl
push
xor
loopne
loope
xchg
scas
cwde
push
pop
mov
or
ss
mov
and
data16
mov
inc
cwde
push
ds
outs
xchg
lods
ret
or
xor
and
pop
dec
xor
sbb
or
enter
bound
cmp
ret
sub
sbb
cmc
es
jb
call
jb
mov
shl
or
sbb
pop
and
movs
int
imul
sub
adc
ror
outs
xor
push
addr16
sub
jmp
add
or
mov
push
stos
or
pop
pop
jae
push
cmp
mov
repnz
jmp
std
mov
imul
adc
adc
rcr
sub
icebp
inc
lahf
mov
lods
xchg
mov
or
fwait
push
inc
in
push
jecxz
leave
xor
mov
dec
out
ds
sbb
add
push
fsub
sbb
xor
(bad)
mov
nop
mov
(bad)
bswap
push
mov
in
sbb
dec
pop
xor
cmp
fild
cmp
jnp
jne
push
lea
jo
pushf
pusha
lea
call
pusha
pushf
push
lea
jmp
push
or
push
inc
clc
test
adc
ret
stos
idiv
dec
or
inc
data16
dec
mov
push
push
sbb
sahf
push
push
es
xchg
nop
mov
dec
mov
xchg
loopne
fadd
or
adc
pop
(bad)
or
pop
das
in
sbb
sbb
xlat
inc
pop
fist
popf
mov
and
push
repnz
xchg
and
fisub
repnz
outs
jae
hlt
dec
jae
test
add
mov
xchg
mov
es
xchg
jmp
bound
hlt
inc
test
sar
arpl
cmp
xor
lods
jo
jg
add
das
pop
jg
rcr
or
rol
lds
rol
adc
cmp
pop
test
mov
mov
test
aaa
jmp
adc
mov
jne
sbb
mov
dec
scas
jne
lds
rcr
bound
cmps
int
add
cmp
sti
jp
xchg
(bad)
cwde
sahf
js
nop
sti
aam
icebp
rol
or
dec
fld
hlt
js
ret
stos
(bad)
iret
sub
and
imul
or
mov
sbb
jg
cmp
cmp
push
outs
and
popa
mov
(bad)
clc
stos
jl
pusha
lahf
mov
lahf
inc
sbb
jmp
dec
imul
aaa
pop
mov
fdivp
sbb
sub
ror
mov
outs
movs
dec
aad
push
(bad)
xor
ja
(bad)
jmp
dec
arpl
je
cmp
stos
sbb
mov
mov
call
call
retf
add
or
arpl
repz
or
div
sbb
mov
shr
and
dec
pop
inc
lock
stc
cdq
je
cmp
in
xchg
inc
push
xor
daa
add
(bad)
and
mov
sbb
rcl
fs
and
aaa
ss
adc
jnp
xor
out
push
add
fidiv
mov
rol
pop
and
loope
std
sub
aas
push
xchg
clc
clc
add
jbe
jne
pushf
pushfw
pop
stc
pusha
rcr
call
test
pop
add
pop
jge
dec
loope
and
in
lea
loope
pop
lea
and
adc
mov
cmp
dec
xchg
paddsw
test
inc
and
pop
(bad)
into
xchg
mov
call
popf
(bad)
lds
push
mov
ret
jecxz
inc
popa
imul
(bad)
arpl
shr
or
mov
sbb
fs
xchg
inc
dec
nop
pop
sbb
pop
int3
or
xor
sahf
mov
mov
adc
cmp
in
out
xor
sbb
xor
leave
pop
pusha
enter
call
in
push
ins
mov
fdivp
call
and
cmp
dec
or
adc
jae
jno
cmps
ret
(bad)
add
mov
xchg
inc
mov
loop
cmp
xchg
mov
std
sbb
jne
and
stc
sub
inc
inc
adc
jbe
test
sbb
lods
mov
push
out
xchg
inc
fidiv
jge
(bad)
pop
mov
cdq
inc
dec
ins
ins
(bad)
sub
push
jg
xchg
(bad)
(bad)
es
xlat
in
or
mov
loop
and
cmp
add
out
and
mov
push
pushf
mov
mov
mov
call
push
push
mov
jmp
lea
jne
pushf
jmp
add
pop
pop
jbe
popa
push
gs
jns
je
ins
inc
jb
outs
jb
pushf
sub
pushf
call
lea
jb
pusha
cmp
bt
cmp
jmp
jae
das
pop
cmp
push
or
rcr
xlat
ins
push
xchg
iret
sub
xchg
icebp
pop
ins
aaa
and
dec
movs
sti
and
shl
aas
mov
gs
aad
adc
ficomp
jmp
mov
sub
cld
pop
cmp
push
outs
lea
xor
inc
or
(bad)
adc
fidivr
push
int3
shr
inc
ret
pop
dec
aaa
test
push
and
aam
jnp
adc
mov
retf
jmp
push
stc
mov
add
retf
inc
jle
(bad)
lock
cmps
sub
jo
cwde
les
imul
or
push
mov
xor
mov
xchg
xchg
stos
push
fwait
adc
jg
xor
ins
shl
adc
xchg
mov
adc
or
int3
jecxz
jmp
mov
es
jge
mov
mov
jae
ror
dec
stos
int3
clc
ss
js
aam
sbb
inc
int
dec
sub
cmp
xor
pushf
mov
lea
jmp
inc
mov
jmp
xchg
jmp
or
cmp
scas
leave
push
jns
leave
out
mov
mov
iret
aam
push
imul
adc
(bad)
mul
fdiv
ror
mov
in
shr
or
jo
shr
(bad)
adc
fsubrp
(bad)
cmp
add
xor
pushf
xor
mov
out
cmp
(bad)
mov
loope
in
or
jb
inc
(bad)
cmps
ja
dec
mov
popf
mov
jns
sbb
add
push
cwde
in
cld
cmp
xor
movzx
mov
not
mov
cwde
seto
lea
pusha
mov
mov
pushf
mov
pusha
push
ret
icebp
mov
ins
neg
inc
aam
sbb
dec
dec
loopne
inc
das
xchg
iret
sub
add
xchg
outs
aaa
and
xor
mov
cwde
cmp
mov
aas
add
jns
cmps
sub
xchg
mov
push
jecxz
cmc
push
mov
pushf
or
cmps
xchg
cmp
fbstp
cdq
pop
pop
lahf
(bad)
xlat
cmps
push
call
add
cmps
mov
mov
bound
mov
add
call
retf
xchg
mov
push
sub
lahf
mov
imul
mov
mov
xchg
stc
rcl
(bad)
xchg
jecxz
jl
jmp
cdq
imul
call
(bad)
xchg
jg
cmp
mov
jmp
push
jmp
hlt
xchg
inc
pusha
mov
cmp
mov
clc
inc
mov
dec
repnz
call
inc
out
aaa
popa
stc
leave
ins
test
daa
ins
dec
cmc
xor
fisubr
or
pop
push
push
cwde
jmp
ror
jg
and
inc
fcmovnb
int
and
test
sub
shr
rcl
add
int3
dec
or
dec
xchg
xlat
xchg
call
adc
sub
and
(bad)
cs
cwde
outs
lods
inc
(bad)
mov
mov
popa
enter
jle
in
in
fs
call
int3
adc
inc
bound
dec
ins
enter
ror
mov
adc
pushf
push
call
push
pop
mov
push
push
ret
pusha
cmc
imul
bt
add
pusha
pushf
push
lea
jmp
add
add
outs
int
or
repz
(bad)
out
or
add
fild
xor
ds
or
xchg
mov
or
or
push
sbb
(bad)
shr
xchg
test
in
je
mov
push
xchg
adc
jmp
call
cld
shl
icebp
jne
gs
jmp
mov
push
mov
repnz
in
dec
pop
outs
jge
iret
std
sbb
dec
jnp
cs
xlat
rcr
jmp
imul
inc
push
cmp
push
cmp
jb
dec
pushf
pop
or
pushf
iret
into
fidiv
repnz
push
mov
scas
jo
mov
(bad)
jp
mov
ror
pop
(bad)
(bad)
mov
pop
xor
jmp
iret
fcom
sub
mov
(bad)
int3
dec
lahf
fwait
pop
out
or
adc
sbb
xor
int3
mov
or
imul
je
stos
fimul
adc
sbb
xchg
inc
sub
add
dec
outs
popa
fs
gs
jne
arpl
add
out
je
ret
mov
repnz
push
cmps
bound
addr16
pop
popa
ss
fld
xlat
test
clc
sti
jns
xchg
jb
aam
mov
dec
fcomi
sar
movs
ds
xchg
jecxz
fwait
xchg
dec
mov
pop
rcr
test
jns
in
in
and
sbb
inc
push
add
idiv
inc
push
fwait
push
push
jb
mov
sub
mov
jae
or
rcr
sbb
add
or
lahf
dec
pop
lds
cmp
cmp
fmul
xchg
das
mov
fldcw
push
mov
shr
stos
mov
or
test
dec
jl
ss
push
add
fidivr
sbb
loope
clc
call
pop
xchg
jecxz
test
pop
stc
ds
stos
cmp
or
out
sbb
out
mov
jne
sbb
sbb
jne
call
jmp
call
push
pop
mov
pushf
mov
push
ret
pushf
cmp
mov
jmp
pushf
bt
clc
push
popfw
push
pushf
inc
pusha
mov
push
mov
adc
lea
push
push
ret
or
push
cmp
sti
and
sbb
imul
pop
mov
out
add
push
cmc
(bad)
fmul
mov
lds
mov
sub
cmp
jb
push
adc
adc
and
out
cmp
out
mov
sbb
sar
mov
pop
cmps
stc
and
into
dec
push
clc
aam
push
cmp
jo
stos
int3
in
(bad)
adc
inc
cmp
xchg
fs
ja
stc
mov
inc
add
push
mov
bt
call
scas
pop
jb
cmp
xor
fld
icebp
setnp
cmp
pop
sar
(bad)
inc
fbstp
jns
sub
icebp
fcomp
jle
mov
fucomp
fmul
(bad)
xchg
push
in
dec
and
sub
mov
retf
push
jo
out
push
(bad)
gs
and
iret
(bad)
or
mov
hlt
adc
pop
add
mov
inc
in
xor
sub
jmp
push
jg
clc
dec
add
aaa
pop
js
arpl
dec
mov
jmp
sub
sbb
and
mov
adc
pop
add
jecxz
arpl
jmp
jae
xor
push
cwde
sbb
fisub
mov
add
and
cdq
mov
nop
cli
add
mov
jge
loope
call
or
cmc
cmps
mov
stos
xlat
stc
sbb
pop
and
adc
pop
das
xor
mov
jle
xor
das
push
out
popf
add
aaa
(bad)
or
fs
hlt
add
shl
mov
rcr
or
sbb
sub
lea
and
clc
push
and
adc
or
imul
jmp
inc
or
lea
jmp
xchg
xor
cmp
xchg
inc
sti
test
inc
xlat
cmc
retf
cli
or
mov
retf
imul
int
leave
sub
sbb
adc
cmp
in
cwde
cmps
and
mov
daa
mov
cmp
lock
imul
inc
out
jne
icebp
mov
xor
pop
xor
dec
xchg
mov
add
inc
fwait
sub
pop
cvtps2pi
das
dec
jns
retf
shl
sti
pop
dec
mov
ss
xchg
jmp
cmp
je
inc
pusha
jp
mov
push
jmp
out
call
outs
jmp
outs
add
pusha
fstp
cmp
rol
mov
mov
ficom
dec
(bad)
scas
jae
mov
movs
(bad)
or
inc
pusha
jb
retf
fdiv
adc
out
int
push
pusha
mov
stos
push
lea
jmp
jmp
adc
push
cmp
cmp
inc
arpl
sub
ss
mov
jge
stos
daa
ret
outs
pop
xor
clc
mov
push
and
loop
test
fstp
add
lds
fwait
and
std
or
mov
lods
xchg
(bad)
fimul
aaa
pop
into
mov
pushf
pushf
mov
mov
lea
jmp
pushf
lea
je
pushf
mov
bswap
sets
mov
lahf
lea
pusha
pushf
mov
pusha
mov
push
pushf
push
pop
pushf
pushf
push
ret
ds
ins
adc
lea
jmp
iret
sub
not
in
inc
xchg
out
lods
pusha
or
(bad)
jb
jmp
mov
xor
add
push
in
pop
xchg
lds
dec
repnz
int3
rcl
lea
mov
clc
xchg
xor
stos
shl
lds
std
push
mov
into
and
cs
xchg
cmp
out
push
xchg
cdq
sbb
imul
adc
push
dec
nop
push
stos
test
mov
inc
pusha
push
pushf
lea
jmp
lea
clc
mov
call
jmp
call
pushf
call
stos
not
not
mov
lea
jmp
and
adc
or
cmp
movs
(bad)
call
pop
mov
(bad)
and
cmp
mov
loope
adc
mov
outs
das
cmp
js
scas
mov
icebp
push
sbb
add
out
and
and
xchg
jp
add
push
pop
jnp
dec
imul
dec
xor
mov
nop
call
idiv
and
push
pop
stos
enter
icebp
or
add
sbb
not
pushf
lea
clc
clc
call
dec
movs
or
pushf
push
add
rcr
shl
sbb
dec
in
movs
mov
movs
inc
(bad)
inc
dec
popa
dec
int
fptan
inc
xlat
jle
outs
data16
add
cld
jl
sbb
(bad)
retf
dec
push
lods
jae
fdiv
push
ja
push
enter
loope
dec
mov
(bad)
fstp
jno
in
or
xchg
xor
add
mov
pop
test
inc
pusha
mov
jmp
pop
sub
add
inc
jmp
pop
sar
(bad)
in
in
jno
arpl
pop
jmp
ror
mov
cld
es
pop
jp
test
jmp
xor
cmp
test
cmp
pushf
not
bt
stc
bt
mov
test
bt
mov
jmp
mov
lea
call
jb
push
push
push
lea
jae
stc
stc
stc
cmp
sub
pusha
push
lea
call
pushf
lea
jae
setg
not
mov
pushf
inc
pusha
inc
push
call
mov
cs
jae
inc
repz
retf
jne
scas
shl
mov
shl
xor
push
jbe
jmp
imul
mov
outs
jl
bound
sub
out
iret
pop
pop
mov
pop
std
sub
call
jo
adc
pop
pop
jmp
push
mov
call
aad
sub
mov
xchg
and
add
or
popf
rdtsc
nop
jo
pusha
pusha
mov
jmp
es
clc
adc
jp
sub
(bad)
adc
fdiv
mov
and
xchg
jle
add
in
push
push
stos
pop
inc
addr16
mov
cmp
jge
mov
sbb
neg
add
jae
popa
addr16
outs
js
add
stos
adc
(bad)
mov
jp
and
sub
addps
out
dec
jl
xor
mov
cmps
enter
out
in
addr16
nop
mov
mov
xor
shl
xor
jns
sub
in
(bad)
xlat
xchg
shrd
add
pop
loope
dec
sbb
int
arpl
movs
movs
mov
in
dec
dec
inc
hlt
push
cwde
lahf
stos
clc
aas
push
and
fisubr
mov
push
aad
or
jmp
or
mov
xlat
jmp
repz
push
sbb
inc
push
sbb
popf
ins
jbe
cmp
mov
dec
aas
in
adc
mov
or
jl
fimul
xor
dec
bound
mov
jae
sub
lods
cmp
jmp
push
lods
adc
cmp
inc
clc
lods
shr
sub
jmp
add
test
cwde
fisubr
push
pusha
es
jbe
and
push
jecxz
jb
ins
or
sar
inc
lods
jne
sub
stos
scas
sbb
stos
sti
xor
add
xor
mov
mov
popf
cmp
ins
or
fild
pop
movs
pop
sub
in
cmp
popf
dec
mov
fadd
inc
fnstenv
ins
dec
sub
jnp
frstor
xchg
xor
sub
add
jnp
adc
inc
addr16
mov
ins
fldenv
inc
add
neg
push
cmp
add
mov
pop
pop
adc
ja
lahf
int
jle
test
dec
fdiv
fcomp
loopne
adc
fmul
push
push
js
jo
cmps
dec
ror
xor
ds
pop
jp
ret
sbb
leave
ins
ja
std
outs
or
sbb
cmp
retf
int3
loopne
mov
and
inc
fisttp
push
mov
sub
and
dec
fstp
in
add
into
outs
outs
inc
fxch
outs
hlt
push
sbb
sub
dec
add
repnz
dec
jl
enter
pop
mov
ret
ja
adc
loope
jmp
popf
repz
pop
cmp
sbb
mov
fld
stos
pop
inc
sbb
or
nop
or
xchg
mov
fcomp
sbb
pop
jno
loopne
dec
sub
in
jp
sub
std
dec
inc
jmp
icebp
fild
cld
mov
stc
and
dec
push
inc
xchg
jle
je
mov
dec
fs
or
dec
data16
pushf
sbb
inc
jge
xchg
les
xor
repnz
in
add
or
adc
adc
fiadd
xchg
mov
or
cmp
in
loopne
repz
or
xchg
xor
fcomp
jl
inc
shr
jo
fs
enter
jnp
cld
fidiv
pop
mov
adc
xor
pop
out
inc
push
(bad)
adc
xor
outs
push
adc
push
ins
sbb
js
aam
xchg
aaa
repz
icebp
outs
rol
stos
dec
bound
fs
ret
add
sub
(bad)
jg
inc
xor
jne
dec
outs
iret
fbld
addr16
imul
pushf
cmp
dec
popa
sti
jmp
adc
test
pusha
(bad)
out
mov
stos
inc
jmp
imul
sub
jbe
or
push
addr16
jle
jns
es
jl
push
add
cmc
out
pop
sbb
out
cmp
mov
jmp
adc
xor
dec
xchg
retf
pop
jg
fpatan
add
pop
mov
inc
sub
jnp
imul
enter
and
test
or
push
lea
je
setle
mov
bswap
mov
jmp
push
jmp
mov
mov
lea
jnp
pusha
pushf
mov
mov
mov
pushf
mov
lea
jmp
mov
push
pushf
pusha
mov
lea
jmp
aam
sahf
sbb
dec
add
dec
push
sub
push
in
adc
sub
sbb
mov
retf
and
in
adc
mov
outs
jl
mov
(bad)
nop
cmp
inc
cmc
add
sbb
imul
sbb
imul
mov
cmp
lock
sub
out
ins
push
push
pop
fild
cmp
rcr
adc
cs
mov
push
pushf
stos
pusha
mov
mov
pushf
lea
jmp
in
mov
cmp
or
jmp
pop
adc
jmp
xlat
mov
out
adc
sbb
mov
retf
push
jmp
int
push
push
pop
pop
loop
iret
outs
dec
jo
and
push
add
(bad)
fdiv
sub
xchg
sub
mov
and
(bad)
sub
aam
std
xlat
cli
push
cmp
addr16
add
jg
out
push
xor
call
jge
stos
in
cmp
push
add
mov
sete
inc
mov
setb
not
mov
call
pushf
mov
mov
call
and
sbb
scas
ins
and
ret
push
jmp
fbld
and
sub
push
icebp
movs
call
cmc
stos
push
dec
in
xor
lds
mov
mov
clc
daa
push
sbb
adc
pop
inc
inc
xchg
mov
dec
pop
and
xchg
xchg
or
xlat
sbb
mov
mov
or
in
pop
xor
scas
in
adc
mov
mov
sbb
lea
jl
clc
mov
sub
pop
cmps
xor
jl
push
xchg
fiadd
dec
data16
xchg
inc
loopne
mov
fistp
imul
mov
xchg
add
adc
lahf
lea
xor
mov
push
test
sub
mov
push
fmul
(bad)
hlt
sub
jo
adc
mov
sti
or
xchg
lock
mov
push
pop
imul
inc
add
clc
add
fcmovu
imul
js
repnz
adc
popf
inc
in
test
mov
popf
push
mov
aam
sahf
sbb
retf
adc
jae
call
out
jle
ret
sub
mov
mov
sbb
add
pusha
call
(bad)
jmp
sbb
or
mov
jbe
mov
(bad)
push
adc
retf
rol
pop
aam
push
jecxz
mov
cwde
push
(bad)
jae
or
or
idiv
cmps
outs
mov
sbb
jns
inc
inc
xor
adc
in
mov
and
into
retf
ss
inc
add
cld
(bad)
out
jno
not
adc
lock
maskmovq
idiv
and
mov
cdq
sbb
sbb
pop
ja
iret
repz
adc
dec
nop
(bad)
pop
mov
aad
call
or
ins
and
call
cwde
mov
popf
push
mov
inc
in
test
nop
inc
outs
icebp
jmp
mov
cmp
inc
es
in
aam
inc
loope
fnstcw
hlt
mov
mov
in
and
jg
xor
mov
adc
lea
cmp
bound
and
pop
mov
xor
pop
call
push
mov
push
js
push
xor
outs
sub
xchg
ins
mov
retf
mov
(bad)
jmp
add
inc
das
jo
js
push
xor
loop
push
push
and
sar
pop
xor
mov
cli
daa
fbstp
lds
lock
mov
add
mov
adc
sbb
popa
mov
out
adc
pop
xchg
mov
aaa
mov
push
sbb
xchg
jne
call
jmp
call
jmp
sub
jo
sub
cmc
push
bt
cmc
cmp
jmp
push
or
push
xor
adc
(bad)
hlt
mov
fist
and
loopne
popa
dec
adc
adc
fwait
inc
nop
and
jb
jmp
lods
mov
push
dec
(bad)
call
cmc
jmp
mov
jmp
cmp
sbb
js
lods
sar
js
aas
pushf
les
mov
fisttp
mov
js
fstp
sub
ror
mov
test
test
mov
xor
test
jno
call
dec
ins
call
adc
pop
cmp
jns
mov
inc
add
daa
pop
lock
jne
dec
scas
adc
loop
mov
in
imul
mov
xor
test
(bad)
push
sbb
push
scas
cdq
jbe
and
push
adc
mov
div
and
and
sub
adc
pop
mov
push
test
mov
cmc
loop
sub
pop
in
mov
jmp
jg
fwait
(bad)
std
xor
test
xchg
or
shr
hlt
jmp
or
sub
xchg
mov
dec
xchg
mov
mov
adc
call
loope
cmp
jno
push
out
pop
fiadd
das
gs
jo
dec
(bad)
leave
and
mov
mov
cmps
sbb
inc
int3
push
sub
push
push
inc
pusha
sti
jg
cmp
mov
or
aam
fs
jp
pushf
lea
ja
cmp
add
rcr
cmc
not
mov
push
cmp
lea
jle
pushf
lea
jb
push
stc
call
jmp
aad
or
cmp
retf
jge
out
(bad)
push
jmp
aas
jp
pop
data16
ja
jnp
sbb
sbb
and
sub
jecxz
adc
push
mov
mov
mov
lods
int3
or
pop
ins
mov
shl
cmp
rcr
mov
sbb
xchg
hlt
dec
mov
adc
add
cmp
leave
push
or
jmp
mov
sbb
mov
out
lahf
fld
jle
sub
pop
xor
das
fcomip
sbb
arpl
jmp
mov
jecxz
std
rol
out
aaa
pop
daa
add
loopne
xor
jecxz
mov
into
fmul
mov
icebp
or
ret
xor
push
cmp
(bad)
rep
test
xchg
(bad)
xor
retf
es
mov
clc
enter
cmp
adc
cmp
fiadd
mov
test
push
sub
xor
pop
call
ds
loop
adc
aam
leave
pop
push
pop
pop
cmp
les
retf
pop
push
sub
cmp
pop
cld
jmp
test
inc
jmp
jae
sbb
sbb
sbb
lods
sub
popa
xchg
mov
jecxz
sub
sbb
in
inc
pushf
into
inc
fmul
cmp
cmp
stc
dec
adc
sub
jmp
add
push
dec
cmp
pop
dec
adc
sub
pop
mov
push
jno
or
imul
test
jbe
fadd
and
movs
jle
and
cmp
mov
outs
rcl
std
pop
sub
ror
fs
fisubr
add
or
cdq
movs
mov
push
dec
stos
adc
cmp
and
add
jle
hlt
sbb
mov
or
inc
in
xchg
dec
aaa
scas
dec
shl
cli
sub
lea
add
stos
push
(bad)
int
sub
test
sahf
data16
inc
jnp
xchg
movs
mov
daa
lock
out
or
xor
aad
call
pop
dec
cs
in
leave
add
push
inc
adc
enter
and
daa
rcr
cwde
cwde
cmp
fcomp
xor
out
int
imul
dec
call
ins
lods
xor
cmps
mov
lea
sub
(bad)
sub
inc
test
ret
sti
je
daa
pop
and
xor
lea
jecxz
mov
ficomp
das
and
clc
pop
int3
dec
xor
jnp
sbb
hlt
stos
mul
cmp
mov
icebp
add
pop
jge
mov
or
(bad)
jmp
pushf
lea
jne
jmp
ins
retf
cmp
add
or
(bad)
enterw
fist
add
dec
out
jno
imul
shl
xor
add
cmp
dec
in
jae
(bad)
cld
xlat
xchg
fisubr
inc
ficomp
lods
dec
imul
ficomp
in
jmp
mov
sbb
mov
imul
fwait
cdq
add
repz
test
xor
sub
and
out
inc
lahf
lds
das
arpl
lods
cmp
pop
daa
push
in
mov
mov
push
jg
jae
js
adc
aas
pop
test
pop
pushf
aam
(bad)
loop
(bad)
pop
loope
mov
xchg
mov
fadd
pop
lock
data16
or
pop
dec
lock
inc
loop
cmps
adc
call
pop
pop
int
sub
gs
cli
jbe
sub
loope
mov
sub
mov
leave
fisttp
inc
pop
ins
xchg
mov
dec
push
inc
stos
xlat
(bad)
call
xchg
mov
(bad)
leave
fcomi
jns
and
or
ins
mov
jp
fild
sbb
stos
pop
pop
xor
ror
mov
sbb
test
and
test
xchg
(bad)
(bad)
xlat
int3
les
push
inc
jo
das
call
mov
das
dec
push
outs
xchg
ret
std
sub
imul
add
xchg
mov
add
pop
and
xor
cmp
nop
sbb
dec
mov
(bad)
dec
hlt
aad
paddq
lahf
push
xchg
test
jns
int
lds
jae
dec
mov
mov
mov
cmc
sub
stos
leave
loope
pcmpeqw
cli
xchg
(bad)
(bad)
sbb
jmp
mov
mov
add
cmps
ret
jns
ret
out
adc
fisub
lds
mov
or
in
sbb
and
pop
lods
pop
(bad)
xor
int
jae
pop
and
jnp
enter
aam
and
xchg
(bad)
jg
aad
dec
mov
add
jbe
dec
jne
inc
gs
outs
jae
je
outs
outs
add
sub
and
sar
pop
jns
and
sti
pop
shr
call
loopne
shr
dec
adc
stos
test
stc
lods
or
cmc
movs
ret
mov
rol
sub
ins
xchg
lods
mov
popa
pop
enter
mov
and
jmp
xor
es
sub
add
adc
cmp
inc
add
adc
jbe
sub
fdivr
xchg
mov
cwde
jp
lea
add
inc
mov
mov
xor
fldcw
int
or
(bad)
xchg
out
mov
adc
jmp
test
cmps
xor
xor
mov
fstp
mov
mov
fmul
mov
sbb
or
cmps
dec
cld
or
pop
cmp
cdq
lahf
mov
pop
mov
jge
(bad)
cmp
stc
test
pushf
mov
sub
pusha
call
mov
movzx
bswap
not
pop
pushf
pusha
push
mov
push
ret
or
cmp
adc
dec
add
test
jmp
mov
stc
sbb
mov
xor
(bad)
(bad)
mov
shr
jno
stc
loope
sbb
int3
data16
push
mov
mov
sbb
jbe
xor
mov
cld
add
sub
fld
in
cdq
in
mov
daa
cmp
sahf
xor
pop
outs
test
lds
aam
add
cmp
xor
sbb
push
ins
ret
adc
lods
inc
mov
lds
or
xor
rcr
mov
repz
push
and
int3
jp
xchg
inc
mov
sbb
sbb
stos
mov
jmp
pop
dec
inc
jle
imul
sub
jbe
loope
leave
mov
and
aas
dec
pop
jnp
scas
aad
adc
cmp
out
mov
sub
and
jmp
bt
push
bt
bt
cmp
mov
call
push
mov
pushf
pushf
pushf
mov
pushf
pusha
lea
jmp
pushf
mov
not
movzx
mov
bswap
not
bswap
mov
jmp
out
mov
cmp
aam
xor
or
xor
sub
mov
aad
shl
imul
ret
pushf
shrd
fidiv
das
fstp
shr
or
cld
adc
ret
mov
mov
fcomip
jne
daa
pop
and
sbb
mov
callw
inc
fdiv
mov
nop
mov
inc
dec
out
in
test
call
push
lea
jb
cmc
test
cmp
stc
cmp
pushf
jmp
call
jmp
pusha
not
mov
push
not
jmp
mov
jg
push
mov
pushf
mov
pusha
push
push
push
lea
jmp
rcr
arpl
iret
jge
rol
stc
ja
sbb
pop
je
or
adc
popf
out
cwde
and
fimul
stos
imul
inc
dec
loope
ds
pop
ret
cmps
dec
adc
cvtdq2ps
and
(bad)
repnz
push
lahf
mov
iret
lods
ins
add
jle
inc
rcr
lahf
dec
jge
dec
ins
jae
aas
jno
sbb
mov
arpl
cmps
xchg
xor
inc
outs
add
mov
into
xchg
push
sub
mov
fwait
sub
pop
xchg
iret
add
dec
jae
iret
sti
and
test
dec
mov
data16
sub
sub
outs
mov
sub
jb
popf
(bad)
aaa
and
and
or
ds
or
mov
nop
in
sbb
mov
sbb
sahf
(bad)
loopne
sbb
sub
gs
cmp
std
lods
int
xchg
ret
pop
sbb
ja
fdivr
lods
xchg
sbb
sub
out
cmp
sub
jmp
xor
cmc
pop
lea
gs
xor
fs
ins
add
call
pushf
mov
lea
je
bt
cmp
push
clc
sub
mov
call
lea
jne
jmp
in
cmp
cmp
push
jmp
cdq
mov
xchg
aas
das
popa
div
mov
pushf
pop
pop
fnstsw
inc
pop
ret
and
imul
mov
enter
sbb
outs
pminsw
inc
sbb
repnz
stos
inc
loope
ss
cmp
hlt
sub
repnz
push
or
push
mov
and
bts
adc
and
push
jmp
and
jecxz
mov
xchg
xchg
and
jno
adc
pop
cdq
ins
fmul
sbb
push
push
xor
mov
and
psubw
push
add
aaa
mov
jnp
cmp
les
(bad)
jns
push
xchg
daa
loop
pop
ds
and
mov
sbb
xlat
sub
(bad)
inc
outs
xchg
mov
nop
daa
cmp
push
sbb
neg
(bad)
adc
fdiv
jle
dec
data16
jle
jns
cs
cmc
jp
seto
dec
mov
aas
xchg
shl
pop
popa
mov
daa
aas
pop
jge
call
icebp
ds
xor
or
xlat
call
cmp
outs
int
mov
sub
mov
mov
aaa
and
add
mov
jle
cmp
imul
mov
sbb
sbb
mov
inc
xlat
inc
addr16
xor
jle
push
mov
pop
and
mov
xchg
addr16
inc
fwait
pop
idiv
mov
xor
cmps
pushf
outs
or
cdq
sbb
pop
adc
mov
pop
sbb
jmp
lock
sub
or
(bad)
movnti
sub
sub
sub
pop
sub
push
retf
mov
xchg
sahf
pop
outs
neg
or
xchg
gs
data16
mov
lds
push
loop
int
mov
jns
mov
out
pop
ins
mov
and
call
pusha
lea
ja
call
das
(bad)
repz
stos
ror
or
cmp
inc
xor
pushf
popa
and
push
(bad)
ins
mov
mov
mov
(bad)
jae
std
or
xchg
nop
jo
jl
sub
dec
leave
(bad)
xor
cwde
add
daa
in
cmp
out
cmp
rcr
adc
mov
or
in
cdq
xchg
jge
pop
(bad)
inc
mov
adc
shr
jp
out
adc
mov
repz
in
mov
fyl2xp1
cdq
test
mov
imul
repnz
push
rcl
xor
int3
ror
sbb
pop
dec
jle
das
int
adc
push
cdq
(bad)
xor
sub
mov
addr16
lods
rol
aaa
addr16
xor
fcom
sahf
(bad)
and
cmp
or
shld
mov
pusha
stc
cmp
pushf
lea
jne
sbb
sub
daa
xor
neg
mov
test
add
inc
mov
pushf
stc
mov
test
lea
jns
pushf
push
lea
je
stc
cmp
cmp
cmc
sub
jmp
pusha
pushf
stos
pushf
push
push
lea
jmp
mov
push
jmp
in
jp
pusha
mov
pusha
pushf
pushf
mov
pushf
lea
jmp
clc
cmp
pushf
lea
ja
stc
pushf
pushf
imul
cmp
push
pusha
bt
add
push
mov
lea
jmp
jmp
add
xchg
lods
push
jno
cdq
scas
xchg
stos
xor
adc
loope
outs
popa
jg
(bad)
jmp
adc
neg
inc
or
inc
das
out
mov
mov
xchg
dec
data16
stos
and
jae
mov
jno
cmp
or
(bad)
cwde
xor
stos
das
cmp
dec
loop
adc
aam
jb
pushf
mov
inc
mov
sahf
inc
aad
add
cld
imul
retf
xor
xor
mov
rcl
in
aaa
das
fst
lea
push
mov
sbb
sti
addr16
in
mov
xchg
into
mov
pop
aad
jmp
outs
jne
fwait
mov
rol
sub
retf
mov
or
(bad)
mov
fld
and
sbb
and
shr
imul
leave
mov
cmp
pop
aaa
adc
cmp
repnz
mov
push
adc
sahf
push
xor
lods
loopne
cdq
cmp
lds
scas
pop
push
inc
dec
xchg
icebp
pmaddwd
test
mov
sub
jp
or
jg
not
movsx
mov
push
jmp
lea
jne
lahf
call
iret
lahf
add
loop
sub
mov
out
adc
loopne
mov
into
jne
jl
xor
sub
loope
std
imul
int3
or
retf
push
leave
or
xchg
mov
jnp
xchg
sbb
les
(bad)
div
xchg
popa
push
test
rcl
mov
js
fimul
cs
xchg
or
mov
and
and
adc
add
mov
sbb
push
lea
jmp
jmp
jo
inc
xor
shl
dec
repz
fistp
pop
mov
inc
(bad)
fidiv
push
xor
pop
ss
or
pop
nop
cdq
test
mov
jne
lds
jno
rcl
retf
mov
inc
outs
pop
fwait
sbb
popf
test
pushf
repnz
jmp
jmp
xlat
mov
(bad)
imul
or
test
pop
mov
outs
mov
cmc
and
xchg
inc
pop
out
xor
adc
daa
aaa
sbb
xchg
cmp
and
sar
movzx
xchg
inc
das
stos
mov
sub
push
cmc
pushf
hlt
add
push
test
adc
setle
dec
popa
mov
jg
or
xlat
sar
push
xchg
fldenv
vmovaps
fwait
dec
inc
add
fsub
in
cdq
jl
enter
sub
cmp
rcl
clc
les
adc
mov
in
and
mov
inc
sbb
out
aaa
and
xchg
movs
scas
or
ror
in
retf
test
out
outs
scas
inc
xchg
cmp
ja
sub
or
sbb
lods
push
adc
repnz
out
bound
retf
mov
pcmpgtb
dec
enter
test
sbb
ror
sbb
jae
fnsave
cmp
(bad)
adc
pushf
test
cmp
inc
jne
aam
test
sbb
lock
lods
push
jo
push
test
or
dec
pop
repnz
dec
cmp
add
add
sbb
xlat
test
pusha
das
add
sbb
pop
ret
push
mov
iret
jecxz
cmps
vpsllq
inc
popa
mov
iret
dec
repz
dec
push
jle
sbb
push
mov
outs
adc
cdq
xchg
cmps
in
cmp
or
or
mul
arpl
cmp
ja
sbb
fcomp
(bad)
je
sub
pushf
dec
je
cs
je
sbb
test
mov
pop
push
or
push
aam
mov
mov
(bad)
and
dec
pop
xor
sub
mov
mov
push
dec
ds
mov
aad
adc
inc
(bad)
or
push
dec
or
retf
lods
xchg
bswap
cdq
pop
int3
pop
mov
mov
jo
cli
loope
out
push
push
xchg
loopne
adc
cmps
int3
loopne
inc
outs
add
cmp
(bad)
arpl
mov
or
retf
jmp
daa
iret
jge
inc
shl
inc
cmc
sar
xchg
xchg
lock
sub
cli
mov
lods
and
cmps
loope
mov
sbb
xor
mov
xchg
pusha
shl
test
gs
mov
les
test
inc
cdq
sbb
or
cmp
test
daa
jae
rcr
data16
jp
mov
lock
test
mov
clc
mov
or
scas
sti
xrelease
call
inc
dec
lds
ret
push
and
imul
test
pop
jp
rol
sub
sbb
test
sbb
cdq
pushf
inc
cmp
loope
(bad)
outs
(bad)
sbb
inc
jns
out
ins
call
xchg
jb
adc
addr16
test
cdq
adc
bound
or
loopne
mov
and
add
adc
test
adc
cli
adc
pop
loopne
lods
test
pop
retf
sub
shl
cs
test
sub
pusha
pushf
lea
jmp
call
out
aas
xor
or
cmp
mov
out
movs
pop
push
xor
jmp
jmp
mov
imul
pop
sub
adc
fist
or
outs
mov
mov
(bad)
out
bound
cmps
dec
xor
fwait
dec
sbb
push
push
pop
imul
add
push
jno
stos
mov
out
dec
nop
add
fdivr
mov
and
int3
aaa
xor
adc
cli
test
into
jbe
div
mov
jb
int3
pop
mov
push
icebp
adc
mov
jg
and
xchg
test
xor
add
scas
clc
mov
and
and
sbb
leave
cmp
inc
jmp
rcr
xor
std
mov
fild
xchg
and
pop
into
popf
cli
add
sbb
sar
stos
rol
inc
repnz
add
pusha
(bad)
movs
push
xor
add
sti
mov
stos
std
pusha
cwde
stc
retf
aas
imul
aaa
pop
aas
lods
loop
jae
stc
sbb
popf
fild
sbb
cmp
xchg
jg
xchg
jge
adc
add
dec
movs
sti
mov
mov
inc
mov
shld
not
mov
js
push
sub
pusha
clc
mov
call
jmp
ins
call
iret
out
lods
test
sub
pop
mov
lock
hlt
movs
int3
dec
add
adc
nop
outs
sub
jo
rcl
lods
push
add
jno
je
fstp
aaa
dec
loop
pusha
(bad)
lods
neg
pop
push
rcr
and
jns
sbb
adc
dec
pop
jg
retf
loope
adc
gs
mov
mov
push
lods
data16
psubb
dec
adc
lea
jae
pushf
pusha
pushf
lea
jmp
push
mov
adc
mov
pop
lods
aam
mov
sti
jp
mov
pop
ss
jl
imul
jle
int
rol
pop
in
push
xchg
mov
jne
iret
add
or
outs
inc
sbb
jnp
pushf
inc
cmp
bt
lea
jge
not
pusha
call
jns
pusha
pusha
mov
mov
call
test
aas
aaa
cmp
add
mov
cmps
lea
push
sub
ja
xchg
sbb
out
out
out
jp
in
ret
sbb
enter
cld
and
int
(bad)
pusha
daa
sbb
fisubr
jmp
push
jge
xchg
mov
in
adc
and
dec
and
mov
push
ret
cld
sub
or
retf
movs
xor
or
pop
sti
sub
jmp
test
mov
mov
lods
add
je
mov
test
adc
inc
imul
sti
dec
repnz
sbb
outs
je
sahf
mov
loopne
fwait
out
xchg
(bad)
mov
pushf
stos
mov
push
pushf
lea
jmp
pop
mov
cmp
aas
jmp
add
jp
out
dec
mov
repz
es
data16
xchg
xor
or
das
xchg
fs
xchg
movs
in
push
inc
sti
mov
add
test
cwde
sub
shl
bound
dec
fstp
pop
or
cmp
push
xor
lock
dec
and
pop
inc
push
movs
pop
sbb
(bad)
adc
xchg
mov
out
inc
adc
cmps
xor
or
(bad)
mov
pusha
out
mov
mov
mov
popf
sub
jbe
inc
inc
lds
fstp
call
cld
test
int
adc
sub
js
into
(bad)
add
test
(bad)
and
sbb
cwde
mov
push
mov
mov
lea
jmp
call
jle
in
cmp
mul
rcr
mov
stos
adc
out
xchg
mov
push
push
out
adc
jecxz
push
int
and
mul
cs
pushf
neg
imul
sbb
fnstsw
add
mov
movs
sub
shr
shr
mov
std
xor
fs
retf
xor
ins
test
jge
push
sbb
pusha
mov
pushf
mov
mov
pushf
pusha
push
lea
jmp
and
jmp
mov
out
push
and
retf
je
pop
in
pop
pusha
mov
push
enter
ret
clc
je
fs
(bad)
mov
and
std
jno
jecxz
pop
outs
adc
xchg
mov
std
packuswb
push
stos
sbb
fdivr
mov
add
sti
cmp
mov
jo
sbb
fwait
pop
and
push
je
cwde
mov
js
sbb
popa
nop
inc
pop
sub
dec
ret
and
jbe
pusha
inc
sub
rol
mov
lea
rcl
stc
mov
rcr
cmc
add
cmc
shr
call
push
and
jne
iret
mov
in
xchg
addr16
jnp
xchg
call
inc
(bad)
popf
jmp
cmp
cmps
push
jp
test
sbb
jno
add
add
pusha
ins
leave
pop
cdq
stos
mov
sahf
xchg
inc
fidiv
loope
cmp
stc
jge
in
cdq
mov
cwde
add
js
cmp
push
sub
lods
mov
sbb
popa
cdq
xchg
inc
fiadd
cmps
and
mov
cmp
jno
and
push
jne
mov
or
out
movs
out
push
scas
sbb
inc
add
mov
sbb
addr16
cdq
aas
push
mov
rol
cmp
cmps
pop
mov
xchg
jae
scas
or
jmp
jmp
or
aad
and
lds
push
push
push
mov
and
call
adc
push
ins
cli
or
fsub
pop
cpuid
mov
cmp
aad
sbb
rol
cmp
xchg
inc
and
aam
cdq
bound
into
ss
mov
addr16
inc
ror
loope
sahf
in
jecxz
in
cmp
add
pop
test
sub
das
cld
in
cli
pop
fcomp
xor
pop
mov
mov
retf
repz
add
call
fs
jae
sete
push
pushf
mov
jmp
not
pushf
call
outs
enter
or
cmp
sub
out
push
push
and
ficomp
xor
mov
mov
sbb
or
xchg
inc
outs
aam
arpl
inc
fcmovu
mov
test
push
xchg
pop
call
call
loop
outs
mov
pop
sub
ret
sbb
xor
mov
int
mov
jmp
out
jbe
jg
mov
add
jnp
or
sub
(bad)
adc
sbb
sub
lea
jne
pusha
call
pushf
push
pushf
mov
mov
lea
jmp
xor
cmp
or
cmp
mov
neg
call
lods
jmp
js
or
cli
pop
add
push
(bad)
retf
push
and
cdq
push
mov
pop
les
xor
jp
add
and
mov
mov
pushf
add
dec
cmp
mov
or
dec
(bad)
retf
jl
sub
stos
fidivr
in
adc
retf
in
mov
xchg
retf
(bad)
(bad)
push
push
or
inc
sti
xchg
mov
retf
or
nop
jmp
cmp
loopne
xor
cmp
inc
or
outs
mov
mov
xchg
dec
inc
xor
enter
jmp
(bad)
sbb
add
cmp
fiadd
fs
lods
loopne
bound
push
adc
xchg
mov
pushf
lea
jne
lea
bswap
xor
lea
setne
cmc
shrd
mov
xor
shr
pushf
add
dec
mov
clc
cmc
mov
jmp
push
mov
push
lea
jmp
mov
mov
bswap
pushf
setno
lea
pusha
pusha
jmp
add
cmp
cmp
inc
shl
stos
imul
ins
int
std
(bad)
sub
pushf
neg
push
mov
mov
jo
movs
int3
cli
sub
adc
xchg
push
add
retf
or
pop
or
pop
out
cli
xchg
retf
mov
sbb
mov
pop
in
mov
adc
sub
inc
pop
xor
cwde
and
pop
pop
jge
sbb
aas
cmp
pop
cmp
cmp
call
xor
dec
xchg
loope
test
pop
cmp
or
adc
inc
das
sub
cmp
pop
jne
and
xor
xor
pop
push
sbb
and
mov
iret
data16
xchg
call
xchg
js
jmp
ret
inc
jo
xchg
scas
adc
sub
or
dec
rcr
mov
xchg
pop
add
scas
pushf
imul
mov
and
(bad)
cmp
mov
mov
cli
call
jle
sbb
jnp
outs
fld
inc
enter
jae
push
shl
mov
jp
cmc
popa
xor
sub
jge
xor
pusha
push
stos
cli
loop
and
mov
cmp
je
xlat
leave
inc
jne
xor
arpl
push
mov
and
add
sub
outs
push
pextrw
push
mov
push
pusha
es
adc
arpl
push
cmps
push
repnz
lock
gs
mov
mov
dec
js
aam
fs
cwde
mov
out
jbe
inc
jae
inc
cmp
mov
movs
clc
or
loope
(bad)
and
mov
arpl
mov
cmp
cmc
pop
popf
xor
and
sbb
push
inc
or
test
inc
sbb
jge
push
or
retf
fisttp
fnstsw
sbb
inc
cwde
inc
mov
jecxz
push
(bad)
out
gs
scas
ins
xchg
push
fcom
int3
pop
mov
mov
and
cs
hlt
cmp
mov
popf
fdivr
xor
pminsw
mov
ret
out
ins
test
push
jge
sti
dec
pop
gs
pusha
cmps
or
xchg
push
lea
jle
push
pusha
lea
jmp
call
xchg
push
inc
cmp
jnp
mov
mov
loope
mov
xor
jne
push
xor
outs
nop
mov
xor
mov
repnz
popa
call
cmp
jno
stc
enter
ins
retf
xlat
sbb
push
sub
sbb
(bad)
xchg
sbb
call
jae
jmp
ror
inc
adc
test
lds
push
sar
sub
mov
loopne
pop
movs
pop
cmp
xchg
fstp
add
and
pop
inc
cmp
cmp
mov
out
sbb
add
jae
and
mov
cmps
or
mov
adc
test
call
push
sbb
or
mov
popf
out
xor
outs
xchg
es
push
sar
inc
lods
int
sub
mov
popa
sti
jp
push
and
push
mov
xlat
inc
cmp
push
ss
push
add
test
cwde
or
sub
test
and
inc
pushw
sub
sbb
pop
shl
push
outs
movs
or
cmp
jb
push
add
(bad)
mov
adc
in
or
rcl
pop
hlt
pop
cmp
jecxz
pop
fcom
and
out
push
and
cdq
lods
out
jnp
cdq
fsub
jg
and
fcom
ins
xchg
ret
dec
mov
sub
lahf
loopne
xor
mov
inc
ins
add
dec
iret
mov
push
jmp
push
sub
test
cmp
pushf
mov
pushf
push
lea
ja
bt
pushf
pusha
imul
bt
call
test
jmp
jge
mov
cmp
push
inc
out
adc
push
jbe
(bad)
cmps
shl
cmc
dec
and
repz
sub
fisttp
xchg
loopne
add
fxch
shr
sbb
jecxz
cmp
pop
jl
mov
hlt
data16
ja
js
int3
fiadd
loop
push
stos
lea
call
jmp
jmp
mov
pushf
mov
pop
(bad)
mov
add
mov
out
into
push
jle
jmp
mov
add
mov
ret
ror
sub
int3
sbb
push
arpl
loop
dec
mov
int3
lods
clc
inc
pop
stos
shl
cmp
test
ins
or
pop
xchg
movs
xor
arpl
push
adc
cs
(bad)
stc
mov
add
std
(bad)
add
xchg
scas
push
xlat
inc
adc
shl
jg
ret
repz
aaa
add
icebp
cmp
jl
mov
cmp
jg
sub
jae
adc
icebp
and
bound
or
mov
imul
pop
repz
fstp
shr
loopne
pop
adc
push
xlat
or
sbb
lock
sbb
mov
daa
bound
mov
sub
bts
add
add
sar
mov
and
cmp
clc
rol
mov
cmc
pushf
repnz
call
call
push
jne
mov
or
mov
jmp
sar
in
inc
in
jecxz
xor
mov
test
lds
mov
call
(bad)
and
stos
xchg
mov
aaa
std
inc
cdq
leave
retf
das
push
(bad)
stc
jne
lock
jmp
retf
ss
jmp
aas
popf
mov
xor
call
mov
inc
cmp
mov
repnz
pop
shr
inc
out
push
sbb
mul
adc
mov
fist
aaa
shr
ret
loopne
shr
ds
out
sar
xlat
mov
jp
mov
(bad)
xor
inc
mov
hlt
cmc
ja
sub
mov
xor
scas
xor
inc
push
pop
ins
popf
leave
out
and
shl
add
push
push
aam
retf
pop
ins
inc
cmp
dec
(bad)
xchg
lds
je
and
push
adc
mov
or
aam
je
sub
sub
push
in
fild
fdivr
and
js
imul
xchg
test
push
inc
inc
or
xchg
pop
ret
mov
pop
and
sub
data16
cmps
repz
pop
jl
push
pop
cmp
cmp
adc
fistp
iret
cmp
sub
push
jbe
push
mov
fidiv
and
sub
repnz
out
xchg
jg
and
mov
pop
outs
rcl
or
mov
in
mov
sub
aad
or
and
test
cdq
sbb
push
xchg
out
stc
in
or
dec
jno
lahf
mov
out
cwde
sbb
dec
nop
cmp
clc
sub
cmp
xchg
scas
cmp
cmps
push
push
sub
jmp
test
(bad)
dec
inc
nop
xchg
mov
hlt
cmc
in
popf
sub
mov
cmp
int
into
(bad)
imul
pop
ins
les
mul
xor
push
xchg
(bad)
in
xor
sub
ds
(bad)
movs
jo
xchg
fld
retf
imul
sub
ret
sub
aaa
and
into
ja
inc
arpl
mov
addr16
out
and
pusha
xor
adc
in
cdq
jl
pop
ss
add
or
pop
xchg
and
jecxz
sub
cmp
xor
xor
bound
js
mov
mov
sub
and
loop
call
mov
(bad)
in
inc
jp
fs
push
scas
int
inc
fistp
cmps
adc
sub
jmp
xchg
sub
seto
mov
scas
mov
lock
mov
push
mov
in
xchg
xchg
mov
mov
and
mov
xchg
test
dec
sbb
jle
mov
sub
add
xchg
xlat
jno
mov
cmp
sbb
xor
hlt
movs
mov
dec
xchg
mov
add
mov
push
sahf
ja
aas
push
pop
in
jae
xchg
or
and
jne
mov
xor
push
in
mov
(bad)
sub
inc
rol
adc
push
hlt
fistp
out
sbb
jge
int
add
out
jbe
or
aad
pop
stos
fild
scas
loop
clc
test
mov
clc
es
mov
nop
in
or
movs
int
retf
icebp
outs
stos
pop
aaa
dec
mov
xor
or
mov
add
xor
std
mov
ds
icebp
ins
xchg
push
je
out
push
push
mov
pushf
pushf
lea
jmp
lea
ja
pusha
lea
call
push
pushf
call
fisttp
aas
dec
cmp
pop
mov
ja
mov
push
aaa
mov
out
scas
call
fist
adc
jecxz
or
dec
out
std
or
cmp
pop
sub
push
scas
das
sti
cs
jnp
jge
fsubr
repnz
adc
ror
(bad)
mov
icebp
popa
mov
jmp
pop
mov
xor
mov
arpl
cmp
cmc
jno
in
cmp
ds
stos
ficomp
adc
jecxz
cmc
sub
aas
pop
xchg
pop
cmp
test
sub
jns
in
mov
pusha
adc
dec
and
(bad)
xlat
sub
mov
and
mov
pop
daa
push
jae
mov
je
mov
movs
mov
sub
call
(bad)
add
cmp
lods
ror
aas
shr
fwait
jg
retf
outs
mov
(bad)
fld
mov
cmc
pop
cmp
jmp
sub
movs
xor
sbb
fucomp
sub
stc
loope
jo
jbe
and
and
into
jl
pop
addr16
stc
fcomp
arpl
mov
sub
mov
mov
mov
mov
lock
dec
push
xchg
scas
aam
scas
sub
sbb
js
and
adc
fwait
cmp
sti
and
aas
out
fisttp
dec
sub
inc
jmp
sbb
call
jecxz
imul
sub
call
aas
int
fdiv
imul
mov
clc
or
mov
outs
or
ret
dec
fld
rcr
adc
sbb
(bad)
stos
rol
cmp
mov
daa
xchg
dec
cmp
lds
dec
addr16
sbb
jne
ins
mov
ss
fld
(bad)
cld
lahf
int
cmp
in
pop
out
jle
ret
stos
sub
ret
ins
push
stos
xchg
fnstsw
retf
jb
test
sbb
sti
ret
or
lds
(bad)
mov
pop
and
or
je
or
inc
fs
call
jns
into
mov
pusha
pop
mov
sub
xor
mov
es
mov
xlat
call
dec
pop
xor
xor
jo
sub
dec
mul
aas
dec
cmp
cmp
sub
cmp
sbb
xor
(bad)
jo
stos
mov
mov
mov
mov
adc
(bad)
js
jnp
or
push
arpl
mov
(bad)
je
push
add
pop
and
jecxz
loope
test
clc
xchg
and
push
mov
mov
(bad)
xor
sbb
dec
mov
(bad)
jmp
mov
jge
cld
dec
jge
pop
sar
push
mov
(bad)
pop
out
imul
cwde
or
xor
popa
inc
and
cmp
and
or
in
cwde
inc
push
dec
loop
add
cdq
pusha
or
jl
aad
in
inc
gs
shr
das
inc
dec
pop
jmp
jl
pop
xchg
mul
dec
cmp
repnz
dec
pop
push
or
jmp
mov
sbb
jne
das
push
dec
icebp
paddusw
fidivr
jns
repnz
cmp
out
in
or
data16
out
out
or
mov
call
xchg
mov
or
and
lahf
imul
dec
cmp
mov
dec
cli
mov
mov
pop
cmp
push
cmp
mov
rcl
xor
lods
sub
mov
cmp
call
lods
jae
add
mov
jbe
sbb
xchg
(bad)
xor
add
mov
pushf
lea
call
jmp
dec
jns
dec
cmp
mov
aas
iret
arpl
xor
cmps
mov
cmp
je
sbb
mov
mov
shr
cmp
and
push
xor
aaa
or
stc
test
sbb
mov
inc
sbb
and
mov
aad
retf
xor
adc
jo
mov
jno
movs
int3
ins
scas
addr16
push
sahf
icebp
add
shl
and
pop
data16
xlat
inc
in
dec
cmp
jnp
leave
xchg
(bad)
mov
sub
iret
sub
leave
adc
and
in
repnz
call
pop
xlat
retf
or
aam
mov
pop
mov
into
ins
and
mov
mov
jo
mov
dec
sub
lock
mov
movs
dec
push
and
es
mov
mov
cmp
popf
scas
fist
mov
mov
mov
sub
cs
and
pushf
mov
lea
jae
clc
call
call
jmp
add
out
mul
jo
xlat
xchg
ror
push
add
retf
xchg
dec
test
call
push
mov
push
sbb
aam
in
push
and
adc
or
out
adc
mov
cmp
cmc
out
scas
ror
sub
mov
xchg
mov
fldcw
out
and
jne
pop
sbb
cdq
add
push
shl
cmp
sbb
mov
shr
or
pusha
xor
(bad)
cmc
leave
fs
data16
inc
sbb
adc
inc
and
cmp
adc
mov
mov
lea
jmp
call
push
pushf
pushf
push
pushf
lea
jmp
push
or
or
fdiv
pop
cmps
sbb
call
ror
pop
jbe
sub
push
mov
cmp
fdiv
sub
lods
jp
sbb
mov
enter
dec
bound
jle
mov
push
mov
enter
cmp
mov
arpl
bsr
sti
(bad)
xor
mov
sub
jbe
ins
and
cmp
lds
jo
xchg
outs
adc
lods
xchg
push
pop
gs
lock
pop
test
cmp
addr16
dec
rcl
mov
loope
mov
repnz
movs
es
add
lods
mov
(bad)
outs
popf
cmp
aaa
xchg
cs
bound
pusha
mov
leave
jecxz
das
pop
jnp
int
jecxz
mov
inc
inc
and
cs
fidiv
push
cmp
jmp
mov
inc
push
icebp
pop
int3
loope
cmc
call
test
inc
jmp
aaa
push
jae
shl
xor
or
dec
sub
rol
(bad)
fcom
cmps
mov
test
add
sub
jmp
dec
hlt
and
fisub
sbb
mov
mov
retf
lock
test
test
sub
mov
int3
sub
add
push
icebp
idiv
mov
sub
aaa
ret
xor
lea
stc
(bad)
xchg
cmp
mov
cmp
sub
mov
sbb
out
inc
ret
adc
mov
xchg
out
mov
daa
xchg
dec
xor
adc
sbb
sbb
jb
sar
push
enter
mov
fist
mov
xchg
push
cs
cmc
xchg
mov
stos
jne
vpmullw
push
mov
pop
sbb
shl
in
push
cmp
addr16
int
mov
retf
sub
dec
and
lods
popf
lods
jae
jae
or
cmp
xchg
mov
adc
lds
movs
lods
sbb
in
fdiv
outs
xor
push
sub
inc
sbb
cwde
data16
in
scas
out
push
dec
jnp
rcr
shr
or
popa
xor
mov
or
xchg
call
or
outs
and
xchg
mov
cmp
sahf
xlat
dec
mov
and
and
inc
jmp
pop
xor
dec
add
add
or
sub
inc
and
dec
pop
cmps
sti
mov
shl
and
jnp
sar
pop
daa
or
es
add
and
cmp
cmp
adc
daa
loope
jge
loop
push
jp
mov
mov
mov
fmulp
and
or
pop
setb
mov
push
aaa
sbb
call
shl
add
test
push
xchg
nop
xor
mov
std
cmp
mulps
push
and
mov
mov
push
xchg
adc
push
mov
pushf
lea
jmp
mov
call
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
dec
mov
cmp
(bad)
cli
mov
push
jo
push
cmc
in
fcmovnu
and
push
cmps
vpcmpeqb
push
dec
mov
dec
sub
fist
imul
push
pop
aaa
jg
hlt
fdivr
jg
xchg
not
loope
inc
inc
sub
mov
cmps
dec
clc
xchg
push
and
jbe
(bad)
repnz
or
xchg
jecxz
and
not
ret
fild
aaa
push
cmp
dec
sub
daa
cmps
shl
hlt
pop
int3
scas
add
xchg
sbb
test
aad
push
jl
aam
sub
clc
mov
jno
sbb
ins
nop
pop
cmp
and
or
inc
out
dec
dec
pop
scas
mov
repz
cmp
not
sub
xor
or
add
xchg
lds
call
push
div
repz
push
push
js
ret
and
call
arpl
and
dec
push
cmp
rcr
sub
or
dec
pop
fimul
xchg
jne
shl
adc
xor
rcl
jae
push
push
int
mov
lea
mov
std
cli
jno
xor
jnp
out
push
push
xor
repz
repz
push
cwde
mov
pop
inc
dec
push
jo
scas
mov
cmp
sti
inc
cdq
mov
ud0
pop
call
repnz
call
push
lock
std
std
and
dec
mov
ret
je
out
(bad)
(bad)
rcr
dec
ss
jmp
or
jge
or
adc
cmp
pop
pop
lds
in
sub
test
outs
or
sti
add
aam
ss
mov
xchg
push
xchg
lods
xor
fistp
movs
mov
js
mov
int3
push
rol
sub
or
add
pop
push
dec
fnsave
pop
xor
cmp
push
push
mov
fld
cmp
out
scas
(bad)
adc
mov
sti
lock
and
mov
aad
jns
add
or
scas
mov
nop
push
fdiv
pop
mov
add
adc
inc
and
lods
sbb
dec
popf
jmp
clc
in
and
data16
pushf
(bad)
call
bound
or
push
cmp
ficom
cli
adc
leave
hlt
je
icebp
jecxz
push
xchg
out
inc
movs
push
cmp
jb
sbb
in
loop
pop
dec
inc
inc
xchg
inc
pushf
mov
mov
sbb
xchg
cdq
adc
mov
mov
push
lea
pop
lea
pusha
jmp
inc
call
sub
call
add
add
add
add
add
add
add
add
add
push
add
push
add
push
add
add
add
add
add
cli
xchg
into
mov
add
and
push
scas
in
sar
pop
or
pop
popf
ds
loopne
fldcw
mov
mov
xchg
dec
repnz
xor
jno
dec
xchg
jmp
push
dec
repnz
int
or
test
jbe
jbe
adc
mov
pusha
call
mov
sahf
pop
mov
data16
dec
sbb
mov
call
test
inc
or
xchg
mov
fidiv
pop
xlat
inc
and
xor
mov
in
cmp
jecxz
aad
sbb
add
aas
mov
sbb
push
(bad)
cmp
jbe
or
mov
mov
sbb
sub
jns
and
push
dec
(bad)
jle
add
stc
inc
cli
mov
xchg
sti
imul
jns
out
cld
rol
sti
lods
ret
xchg
popa
popf
sbb
mov
mov
pop
cwde
add
imul
ds
ss
out
mov
mov
ja
dec
sub
(bad)
sub
xor
sbb
jne
(bad)
fidivr
iret
mov
test
mov
add
jbe
pop
lahf
cmp
push
cmp
push
pop
cmp
iret
dec
mov
enter
inc
inc
mov
xchg
sub
sbb
lods
sbb
dec
mov
out
mov
outs
stos
(bad)
test
cli
add
pop
xlat
shl
iret
jnp
mov
repz
inc
mov
fidivr
rol
into
or
(bad)
ss
mov
in
push
aas
sahf
xor
test
or
pop
pop
xchg
shl
jmp
ins
test
add
jmp
jge
add
cmps
xchg
push
fld
fcomp
scas
sbb
sub
xchg
imul
lea
mov
sub
inc
xchg
dec
inc
clc
inc
and
xor
gs
jno
fs
mov
xor
adc
ret
mov
or
dec
out
sbb
cmp
icebp
imul
ja
cmps
mov
jp
sub
or
mov
rcr
push
and
outs
test
sbb
push
xor
mul
jnp
jp
movs
sub
xchg
imul
xor
clc
dec
(bad)
sahf
gs
shl
sahf
retf
enter
int
das
sbb
pop
out
aaa
hlt
dec
call
dec
xchg
lea
adc
mov
inc
dec
jbe
daa
mov
cmp
leave
xchg
cli
lea
sub
jmp
mov
ja
sar
and
mov
mov
cmps
retf
pop
or
mov
jnp
std
sbb
call
and
imul
xchg
shl
aaa
std
mov
sub
ret
into
xor
aam
loope
inc
cld
add
inc
fs
and
mov
mov
jmp
sub
mov
sbb
inc
test
lods
les
std
adc
mov
pop
nop
shl
inc
xchg
pop
bound
pop
mov
js
lods
inc
cmp
retf
fbld
sbb
xchg
test
rol
jp
and
or
push
xor
cdq
xchg
push
(bad)
cmp
stos
and
xor
aaa
mov
loope
and
adc
jne
or
mov
je
test
shr
mov
aam
mov
fcmove
fbstp
push
into
ins
xor
mov
bound
jmp
mov
pop
or
mov
add
adc
and
jg
pop
bound
fst
fidivr
mov
mov
aaa
push
retf
mov
fmul
cmp
mov
loope
aam
add
test
retf
mov
xor
ret
xchg
rol
out
jmp
push
mov
mov
pop
sbb
sub
out
dec
mov
or
fsub
fwait
push
aad
or
xchg
movs
icebp
dec
cmps
fs
xchg
nop
sahf
cmp
sub
adc
repnz
(bad)
mov
fld
retf
mov
and
out
fistp
movs
xchg
fiadd
mov
mov
jmp
test
call
mov
lods
dec
dec
std
adc
movs
int
mov
and
cmp
stos
lahf
(bad)
pop
add
or
xchg
or
jnp
fsubr
mov
xchg
and
mov
or
sbb
add
inc
mov
addr16
in
push
in
sub
adc
mov
stos
add
lea
lahf
xchg
sbb
sub
jp
lock
sbb
xor
mov
cli
sahf
cli
jno
shl
je
iret
mov
rcr
mov
pop
and
mov
aad
xchg
nop
mov
out
sub
pop
dec
fisubr
adc
lea
jmp
cwde
push
shr
test
add
aas
js
push
das
int3
cmp
mov
fsubr
mov
dec
adc
ret
aam
sti
lock
xchg
adc
push
mov
ret
cmc
adc
nop
(bad)
cmp
xchg
int
mov
or
fisub
jecxz
loope
leavew
adc
es
dec
xor
(bad)
sbb
fsub
int
fsub
jns
xor
jo
mov
or
outs
hlt
xor
pop
or
test
push
js
mov
xchg
out
fwait
aaa
and
rcr
push
push
jmp
xchg
movs
loope
pop
push
adc
retf
add
adc
stos
cdq
adc
sub
add
or
ret
xchg
inc
cmp
in
push
push
fsub
add
mov
out
sub
outs
ja
jl
jmp
inc
(bad)
loopne
jbe
mov
mov
iret
call
loope
mov
sub
retf
nop
out
sub
dec
sub
cmp
ret
ins
rcr
jno
lods
mov
sbb
imul
mov
add
cmp
(bad)
xchg
shl
mov
(bad)
push
popf
cmps
or
scas
sar
and
xor
scas
xchg
loop
xlat
add
inc
retf
jno
inc
fcmovu
(bad)
popa
fadd
jecxz
sti
sub
stos
ins
mov
pushf
inc
cmp
je
mov
sub
xor
out
das
outs
fprem
inc
jp
fld
retf
psubusw
das
test
fisub
pop
icebp
mov
push
pop
xor
xor
test
cmp
pop
cmp
aas
and
push
xor
add
sbb
xchg
mov
inc
pop
cmp
aad
daa
outs
xchg
movzx
aad
out
in
or
adc
jbe
xchg
fistp
je
cmps
lods
std
jb
mov
mov
jecxz
cli
xchg
or
lea
or
mov
sbb
jbe
int
(bad)
mov
fcom
les
cmc
(bad)
je
(bad)
and
inc
xchg
leave
cmps
or
fisubr
test
mov
add
loopne
out
sub
xchg
sub
cmp
sub
dec
sbb
cmp
fs
add
sbb
push
js
int3
sub
cmp
test
dec
sbb
pop
jge
adc
ret
aas
xor
out
lds
enter
xchg
fild
test
cmp
jbe
int
data16
jle
ds
lea
sub
fwait
ss
xchg
push
call
jae
adc
jns
inc
fld
mov
adc
push
adc
movntps
shr
cmp
jl
jmp
xlat
sub
inc
push
fs
or
mul
sbb
mov
add
sbb
mov
ins
push
mov
dec
jl
daa
mov
popf
int
lock
xor
(bad)
movs
out
push
mov
sbb
mov
push
imul
dec
push
pop
popf
scas
sub
dec
enter
xchg
cmp
xchg
add
fld
push
hlt
ins
fwait
sar
xchg
je
stc
les
mov
sub
add
loopne
ins
popa
jmp
cmp
cld
and
fsub
sbb
and
outs
xor
mov
imul
or
dec
dec
push
idiv
push
in
cmp
neg
xchg
ror
xchg
in
adc
mov
xchg
sub
xor
or
mov
imul
fs
sub
(bad)
and
push
jb
cwde
xchg
aas
(bad)
xchg
sub
xor
faddp
inc
pop
js
fs
cmp
pusha
mov
adc
test
mov
dec
cmp
idiv
sbb
mov
dec
cs
cmp
ret
sub
jecxz
popa
je
loopne
xchg
into
and
xor
dec
fwait
inc
push
out
jl
(bad)
sti
inc
retf
aad
cli
les
stos
dec
and
push
inc
ret
cmps
aaa
cmps
lock
out
xor
repnz
loope
inc
fwait
lock
adc
gs
cmp
fnstenv
loopne
cmps
adc
inc
repnz
xor
or
jmp
cmp
jp
sub
cld
sbb
add
pop
pop
dec
push
sbb
pop
pop
and
pop
mov
into
addr16
push
ds
sub
push
fcmovne
in
sahf
add
xchg
mov
shl
mov
aad
aad
pusha
ds
dec
jecxz
fistp
into
mov
xor
cmp
jg
scas
and
sbb
popa
sbb
sbb
aam
dec
dec
pusha
jbe
mov
js
push
mov
ret
loopne
adc
arpl
pop
jmp
jmp
add
add
xchg
and
push
in
pop
pop
hlt
jb
lahf
daa
test
jnp
cld
dec
shl
add
dec
mov
popf
fld
loopne
mov
xchg
mov
stos
ret
jle
xor
pop
fwait
push
push
push
jb
inc
xor
ret
test
and
xlat
jo
and
retf
imul
xor
mov
loope
(bad)
cmp
sub
xor
int
mov
jmp
xlat
jp
inc
sub
stos
mov
in
mov
shrd
enter
sbb
mov
xchg
pop
data16
pop
add
movs
stos
dec
adc
lahf
mov
fucomip
mov
sbb
adc
dec
bound
ret
not
push
xor
mov
in
fs
sbb
sbb
mov
frstor
ret
bound
mov
xor
out
outs
jge
outs
mov
rol
jno
sbb
cmps
lds
add
xchg
push
pop
stos
and
add
lock
out
mov
into
leave
inc
mov
(bad)
out
ins
mov
jmp
fidiv
dec
xchg
in
adc
xchg
mov
push
dec
pop
outs
mov
bound
(bad)
push
cwde
xor
sub
pavgb
xchg
dec
mov
fadd
add
repnz
pushf
stc
shl
call
jmp
sub
mov
not
push
lds
jge
not
shr
pop
and
mov
adc
out
cmp
mov
mov
daa
xchg
mov
imul
dec
pop
jmp
jno
inc
jmp
dec
jbe
stc
xchg
jae
push
adc
xlat
mov
mov
mov
or
pop
(bad)
pop
sbb
add
mov
mov
pop
xor
call
xor
call
cld
inc
pusha
mov
push
jmp
pushf
pushf
mov
xchg
pusha
jmp
xchg
bound
or
into
in
push
(bad)
call
scas
ret
push
xor
cld
push
add
neg
bound
(bad)
stc
mov
int
sbb
inc
hlt
or
fadd
cmp
nop
stos
aam
inc
xchg
or
push
sahf
jnp
inc
arpl
stc
movs
retf
cmc
pop
popf
das
ret
push
ins
adc
and
cli
or
push
mov
in
pop
sti
gs
stos
cmp
mov
iret
scas
lahf
or
dec
fcmove
sbb
icebp
call
and
fist
mov
or
enter
xlat
adc
mov
dec
xchg
test
loopne
imul
hlt
ja
inc
xchg
call
mov
inc
push
jl
aaa
xor
mov
mov
lea
je
jmp
push
mov
pushf
jmp
lea
je
pushf
add
mov
call
jmp
push
lea
ja
push
inc
setg
inc
lea
push
inc
sub
cmp
xchg
call
neg
bt
stc
pushf
not
sub
je
cmc
sub
cmc
std
jmp
push
mov
jecxz
jae
dec
jno
mov
popa
out
gs
call
imul
xor
mov
inc
inc
movs
pop
add
fdivr
and
mov
mov
fwait
push
xor
pusha
mov
pusha
mov
pop
mov
pop
jge
retf
out
push
movs
or
mov
outs
or
int
pop
xlat
add
mov
enter
xor
retf
js
add
or
out
(bad)
jae
jno
lahf
shl
movs
cs
xchg
xlat
dec
cmc
or
xlat
xchg
pop
jmp
out
xor
ret
cmps
inc
pop
mov
xor
sub
push
xchg
ret
les
add
sbb
das
leave
outs
push
ja
sub
cmp
dec
imul
lahf
clc
es
push
clc
add
clc
ret
cmp
mov
add
or
clc
sbb
js
sbb
dec
lods
retf
mov
push
mov
adc
lahf
inc
and
mov
mov
bound
test
outs
out
in
nop
cld
push
inc
mov
mov
pop
ins
scas
push
ret
fild
mov
xor
fwait
leave
pop
fiadd
cdq
clc
cmp
ret
or
mov
imul
sub
pusha
rol
and
jb
push
ja
fistp
fdivr
test
xor
add
je
dec
or
adc
pop
retf
aad
add
outs
lahf
mov
push
call
mov
or
cmp
jmp
inc
pop
out
adc
xor
retf
pop
outs
and
in
mov
mov
mov
inc
pop
rcr
fidivr
cmp
aam
and
int3
sbb
gs
jns
fisubr
aaa
jo
enter
dec
mov
sub
push
cmp
sbb
jae
mov
lods
into
out
es
test
std
movs
lods
jge
pop
mov
cmp
push
xor
xchg
cmp
sbb
mov
int3
cld
leave
cmps
mov
jmp
push
popa
icebp
mov
inc
icebp
in
inc
jbe
jo
xor
inc
daa
stos
cmps
fistp
mov
pop
dec
jecxz
mov
call
loope
repz
repnz
push
test
ret
mov
pop
dec
and
sub
jno
mov
adc
push
xchg
xchg
aaa
(bad)
sbb
hlt
and
cmp
push
mov
icebp
ss
ds
mov
jmp
pop
pushf
push
jmp
adc
call
repnz
push
je
ret
mov
inc
repnz
fsubr
adc
fdivrp
and
sub
xor
iret
pop
add
dec
mov
push
and
shl
movs
cmp
lds
adc
pop
popa
dec
mov
call
mov
and
xor
and
pusha
xchg
bound
adc
mov
add
addr16
pop
jb
cwde
inc
clc
and
cmp
add
shr
(bad)
out
sbb
mov
push
(bad)
sbb
repnz
sbb
xor
dec
fwait
push
scas
jb
pusha
pop
mov
cwde
adc
outs
or
lds
fisubr
or
push
xor
mov
sub
lea
popa
(bad)
stc
and
rcl
mov
jno
int
test
shr
lock
jo
inc
addr16
xchg
jp
repz
sub
int
and
sbb
(bad)
call
dec
cld
es
xor
cdq
mov
fcomp
jnp
mov
call
cwde
push
std
scas
cdq
rol
loop
lock
inc
dec
movs
add
std
push
jl
dec
gs
sub
mov
(bad)
scas
in
sub
cdq
mov
or
push
(bad)
fwait
jg
repz
push
retf
ficom
aam
mov
call
mov
call
cmp
add
repnz
mov
not
(bad)
jne
repz
jecxz
ins
icebp
jmp
fld
js
ficomp
xchg
dec
cwde
(bad)
pop
xor
fcom
mov
rcl
push
jbe
(bad)
loop
xor
test
fsubr
push
pusha
(bad)
not
push
lods
pushf
clc
rol
sbb
neg
push
not
pushf
adc
sub
not
call
jmp
call
adc
inc
imul
into
jbe
lods
aam
or
sar
sub
pop
stos
mov
sbb
retf
stc
lods
jne
push
mov
js
push
fcom
cmp
movs
ret
or
pop
xor
repz
imul
(bad)
call
inc
xchg
ins
outs
push
stos
xchg
stos
bound
cwde
sbb
push
mul
pop
add
aad
das
leave
jb
push
in
add
adc
mov
mov
add
sub
sbb
sti
clc
mov
cmps
out
(bad)
shl
fist
sub
xchg
stos
shl
and
out
outs
sbb
xchg
ror
out
gs
sub
or
cdq
inc
popa
icebp
adc
jns
shl
pop
xor
jae
mov
pop
mov
push
or
pop
sub
mov
and
push
int
jno
push
rol
and
add
adc
push
bound
std
out
ss
cld
addr16
inc
call
jo
aaa
mov
mov
push
iret
aad
rcr
sbb
cwde
dec
fwait
sub
cmp
out
push
adc
clc
js
shl
stos
(bad)
cmp
in
and
xor
xor
adc
lods
adc
add
push
mov
call
es
pop
or
jmp
dec
addr16
push
mov
(bad)
pop
cwde
ins
jp
outs
xchg
out
retf
sar
rcr
fidiv
iret
fbstp
lods
out
nop
out
cmc
aaa
lock
int3
mov
dec
loopne
jae
popa
or
jmp
add
fsub
dec
xchg
jns
das
(bad)
mov
push
std
mov
int
mov
mov
push
dec
mov
lea
into
aaa
int
ss
and
push
pop
pop
out
mov
(bad)
call
pusha
fs
mov
pop
pushf
lods
pop
fisttp
fadd
(bad)
hlt
pushf
scas
sti
mov
test
lea
loopne
push
scas
pusha
jl
test
int
sub
adc
mov
mov
fidiv
mov
jns
imul
sub
pop
loopne
outs
sub
sbb
out
sub
dec
cmp
and
mov
pop
fst
and
and
dec
jmp
cmp
out
cmp
js
sbb
xchg
std
outs
pop
lahf
mov
sub
mov
mov
sti
repz
shr
scas
scas
xor
mov
sub
hlt
jg
lock
fild
inc
std
or
stc
push
out
cmp
pop
adc
adc
or
pushf
push
lahf
add
loope
jnp
dec
pop
out
aas
shl
adc
lds
pop
add
pusha
scas
sbb
loope
xchg
data16
stos
add
in
dec
pop
movs
enter
xor
and
cmp
adc
int
xor
(bad)
xor
or
daa
mov
test
mov
and
cmp
imul
xchg
and
addr16
out
in
int3
dec
push
or
mov
or
sub
idiv
lods
sub
xchg
call
xlat
out
push
into
mov
movs
add
gs
(bad)
sahf
or
add
sti
xchg
mov
cmps
adc
dec
dec
and
lds
inc
fmul
add
push
lods
dec
fisub
jbe
test
dec
mov
sar
sbb
lea
add
push
sbb
sub
ftst
xchg
add
mov
popf
daa
imul
enter
stos
xor
mov
addr16
sbb
inc
cmp
push
test
in
in
cld
ds
mov
adc
push
jbe
adc
stc
inc
test
jno
push
mov
pop
out
pop
or
psubsw
arpl
jne
enter
cwde
push
adc
sbb
in
lods
clc
push
sti
in
aad
jne
out
cmp
int3
bound
cmp
jg
dec
xchg
out
jl
mov
lock
cmp
dec
retf
dec
xchg
out
cmp
(bad)
jmp
imul
xchg
jnp
lahf
scas
mov
jg
pop
fstp
dec
add
push
test
push
into
(bad)
xor
jb
rcr
cmp
push
(bad)
xchg
icebp
push
mov
sub
(bad)
inc
mul
ss
int3
or
pusha
dec
das
xchg
inc
adc
add
rol
inc
in
std
adc
ret
daa
popa
(bad)
mov
gs
dec
xchg
sbb
sbb
pop
mov
lods
xor
cmp
inc
push
push
cmp
ret
into
fs
mov
stc
sahf
dec
mov
cmp
inc
pop
inc
cmps
push
fnstcw
test
rcr
lock
cdq
xor
jo
sub
cmp
retf
cmps
imul
jle
shl
mov
mov
cmp
imul
les
push
pusha
test
ret
adc
pop
fisub
lods
xchg
fbstp
movs
imul
dec
add
sub
pop
call
addr16
push
push
pop
ror
fwait
hlt
or
push
jge
into
add
or
jno
fsub
add
(bad)
adc
leave
call
sbb
sbb
mov
jns
dec
push
imul
stos
out
adc
ja
test
test
jno
lea
mov
fisub
jne
inc
push
pushf
xor
xchg
mov
shl
sbb
push
push
stos
and
stos
(bad)
outs
jb
add
mov
jl
in
mov
mov
dec
inc
mov
mov
inc
aas
in
mov
mov
int3
mov
ds
adc
inc
aas
aam
sub
fnsave
sub
int
or
ffree
mov
add
data16
push
adc
(bad)
(bad)
xchg
mov
pop
add
cmc
xor
mov
pop
mov
xor
aaa
or
mov
jl
sub
jge
xor
mov
xor
mov
leave
cmp
mov
dec
fldcw
mov
int3
imul
xor
jge
inc
xchg
repz
mov
cdq
or
inc
pop
shl
mov
nop
and
js
inc
mov
inc
daa
mov
pop
loop
ins
popf
push
dec
repnz
mov
aas
adc
sub
aaa
jge
in
mov
pop
ret
adc
int
popf
loope
out
sbb
cmp
(bad)
fwait
loope
pop
test
sbb
pop
hlt
push
repnz
or
jnp
xchg
gs
cmp
xor
aas
gs
jae
mov
(bad)
bndstx
push
test
dec
or
jp
or
dec
out
adc
rcr
in
dec
lea
xor
je
push
faddp
xchg
mov
or
add
inc
push
ja
pop
clc
xchg
sub
adc
dec
test
daa
ins
fadd
mov
stc
sub
mov
and
imul
push
cwde
es
jmp
push
call
not
ret
mov
(bad)
test
push
call
inc
rcl
repz
add
lock
imul
mov
push
mov
jns
mov
mov
outs
adc
pop
ss
mul
mov
jmp
jecxz
js
imul
or
adc
cmc
in
add
data16
mov
cld
fs
push
int3
jnp
and
inc
xor
push
fadd
ins
loopne
cmc
leave
popa
dec
adc
in
test
test
dec
aas
pop
push
cli
fsub
or
add
push
popa
mov
(bad)
adc
pusha
lods
inc
xchg
and
cdq
jg
fldcw
std
lahf
mov
leave
repz
add
sub
sahf
push
adc
xchg
clc
mov
sub
(bad)
daa
push
and
sbb
xchg
jp
xchg
fldenv
jo
jne
aas
jg
lods
out
(bad)
mov
push
mov
push
repnz
test
cmp
shl
rcr
xor
cmp
movs
call
mov
cmps
retf
sbb
sub
ins
lahf
or
js
and
sbb
and
imul
test
inc
pop
mov
shl
ror
adc
jb
test
sub
jne
scas
inc
pop
inc
adc
pop
stos
loop
outs
xchg
(bad)
aam
enter
loope
dec
xchg
aam
inc
pop
fwait
repz
sbb
dec
xchg
daa
mov
in
add
mov
fild
xchg
retf
push
lea
push
fstp
mov
push
into
aam
stos
fisubr
test
xchg
shl
pop
stos
retf
scas
dec
xor
pop
sub
push
mov
fstp
add
enter
ret
cdq
mov
nop
mov
xchg
adc
in
pop
push
neg
fistp
mov
mov
loop
jnp
cmp
and
mov
sbb
jbe
sar
xor
adc
call
(bad)
imul
xchg
cmc
shr
dec
nop
bound
cmp
stos
dec
sub
mov
call
shl
shl
push
lea
das
jae
sbb
mov
mov
fdiv
xchg
sti
pop
cmps
(bad)
addr16
and
inc
mov
jns
push
sub
arpl
or
ins
scas
into
mov
int3
out
pop
je
sti
inc
pop
adc
ja
and
cmp
ret
leave
popa
movs
fnop
add
aad
icebp
pop
adc
dec
jmp
sbb
inc
sar
and
ja
jge
stos
jle
lea
or
push
jno
push
and
test
sub
or
jecxz
loope
cld
shl
add
xchg
pop
(bad)
sbb
adc
and
xor
xchg
jg
jp
fisttp
arpl
inc
fwait
dec
mov
sti
iret
cmp
pop
aam
mov
and
std
popf
aaa
sbb
adc
imul
sub
jo
xchg
jecxz
dec
dec
lea
add
int
das
ret
outs
mov
pushf
adc
mov
loope
mov
stos
mov
inc
mov
sbb
loopne
jmp
push
mov
pop
(bad)
in
leave
retf
ret
dec
outs
adc
aaa
jne
push
jg
adc
xor
sub
add
out
mov
dec
popf
aas
imul
sahf
jb
popf
inc
pop
cmps
fist
ins
int3
in
mov
aad
cmp
pop
adc
add
sub
js
xor
mov
cmp
loopne
popf
pop
lock
or
sbb
jg
mov
scas
cli
mov
ja
push
mov
jmp
dec
lahf
xor
inc
fst
mov
mov
lea
inc
mov
stos
out
mov
retf
sti
test
daa
ret
dec
fbld
addr16
cmp
or
(bad)
ja
push
add
fcom
cmp
xchg
push
scas
inc
pop
adc
loopne
inc
pop
scas
or
dec
mov
hlt
mov
fsubr
(bad)
xchg
xchg
pop
push
jecxz
jnp
xor
mov
loopne
pushf
ficomp
ins
sub
lods
or
inc
clc
mov
movs
inc
outs
retf
movs
fwait
mov
fs
shl
xor
pushf
addr16
mov
pop
push
pop
mov
iret
ror
add
fld
adc
les
icebp
stos
ins
or
add
fsub
mov
xchg
jne
add
mov
jns
dec
sar
mov
fnstsw
push
cmps
pop
push
push
retf
inc
clc
mov
jle
dec
push
jle
dec
fcomp
nop
push
lock
std
pop
mov
inc
mov
mov
push
jmp
jg
mov
dec
hlt
mov
adc
sar
sub
les
scas
sti
mov
pop
cs
adc
(bad)
js
dec
imul
stos
sar
or
jg
in
fcomp
mov
push
les
sub
jns
dec
pop
mov
xchg
frstor
adc
sahf
or
jg
cmp
jnp
push
sahf
or
and
jp
dec
mov
add
inc
adc
push
inc
push
cwde
dec
xchg
jne
xchg
dec
out
aam
popf
stc
pop
or
popf
pop
mov
ret
and
adc
push
mov
sti
cmp
fisttp
daa
push
in
stc
call
mov
repnz
out
lods
shr
xchg
imul
fbstp
in
xchg
fisubr
push
xlat
shr
dec
fldln2
mov
lods
cmp
(bad)
pushf
ss
arpl
jmp
mov
je
popa
fnstenv
outs
rol
cmp
xchg
jge
shr
sbb
sbb
and
outs
add
cs
pop
push
sub
popf
mov
sub
and
xchg
jecxz
push
sbb
sti
ins
jnp
inc
popf
cmp
movs
mov
bound
in
pushf
ret
dec
xlat
shl
pop
arpl
inc
fwait
dec
cs
pop
sbb
loopne
(bad)
ror
test
inc
test
call
(bad)
sub
jg
repz
xor
arpl
jmp
in
movs
pop
sub
neg
xchg
sti
add
stc
cmp
in
mov
neg
jo
jnp
mov
adc
cmp
iret
dec
push
jae
cmp
cld
dec
xlat
mov
xor
leave
inc
mov
jg
mov
add
arpl
mov
stos
xor
je
adc
mov
(bad)
mov
push
psraw
push
mov
test
ja
pop
push
and
repz
repz
movs
retf
xor
xlat
call
jmp
dec
sbb
xor
sahf
xchg
add
jmp
mov
inc
xor
es
lock
out
std
or
movs
movs
addr16
push
mov
inc
push
and
pop
fdiv
mov
dec
inc
rol
fst
fisubr
jl
pop
push
mov
int
fmul
adc
xchg
fld
cmp
inc
add
push
push
call
mov
sbb
xchg
and
xchg
pop
arpl
call
pusha
cmp
push
mov
sub
mov
mov
fnstcw
mov
lods
xchg
in
mov
movs
xor
not
ret
loope
aas
int
sbb
mov
retf
sbb
dec
dec
in
push
inc
fs
dec
adc
fs
repz
call
push
and
dec
pop
xor
stos
adc
leave
sub
lahf
or
push
in
xor
mov
movs
lea
mov
adc
out
int
fs
rol
mov
popa
sti
mov
fsubr
cli
sub
mov
jo
add
xor
fisubr
xchg
mov
xchg
popa
dec
stos
pop
dec
sub
dec
push
in
jne
push
push
adc
pop
push
je
je
sbb
iret
ds
cmp
in
ror
mov
retf
push
push
psraw
stc
cmp
mov
jb
and
cmp
icebp
jecxz
or
or
sub
jle
pop
ds
int3
push
push
(bad)
or
jae
inc
icebp
dec
in
xor
push
mul
int
aaa
adc
sbb
test
jle
ja
push
cli
mov
xchg
xchg
bound
mov
mov
xchg
add
add
pop
sbb
adc
sub
sahf
mov
lds
in
cmp
shr
xor
mov
rcr
sbb
push
jae
xchg
leave
outs
dec
jo
sar
push
push
fisub
(bad)
push
and
fidivr
pop
pop
cmp
push
ds
fimul
cmps
jmp
jno
xchg
push
xor
call
inc
push
retf
or
cmps
inc
shr
stos
popa
lea
lds
and
jl
aam
mov
mov
out
jle
pop
ds
cmps
cmp
jnp
sbb
jno
mov
sub
push
push
push
fadd
xor
sbb
cmp
dec
sub
xchg
jl
push
pushf
es
adc
aam
and
sub
in
js
adc
or
sti
push
daa
in
sub
test
and
aam
and
or
dec
dec
stos
dec
sub
mov
dec
shr
or
add
jns
xor
std
inc
cmovnp
xchg
in
jo
jns
popf
retf
fild
mov
push
outs
mov
pop
xchg
imul
call
int
jmp
stos
es
je
mov
jecxz
add
(bad)
push
inc
(bad)
or
sub
nop
ja
ret
push
and
loopne
sti
pop
ins
mov
or
push
push
xchg
mov
mov
add
add
pop
ror
mov
xlat
adc
jno
or
movs
or
push
mov
out
shr
xor
aaa
xchg
jle
xor
and
and
jge
leave
lods
inc
xchg
fdivr
retf
xchg
and
dec
xchg
(bad)
xor
enter
adc
nop
daa
adc
dec
xor
js
mov
mov
dec
lods
cld
push
or
std
retf
push
push
enter
les
lea
pop
mov
pop
pop
cmp
out
adc
mov
nop
push
and
pop
mov
outs
and
js
push
mov
into
and
repnz
push
test
inc
repnz
shr
sub
xchg
div
sub
jle
and
adc
mov
xchg
repz
jmp
sti
mov
xor
cmp
mov
xchg
pop
arpl
xlat
ret
bound
push
rcr
push
xchg
jmp
add
xchg
inc
add
idiv
setno
mov
cli
inc
shr
int
jge
or
outs
adc
scas
in
ret
enter
add
into
sub
dec
cmps
dec
lahf
xchg
paddusb
push
call
retf
xor
mov
ror
jae
fldcw
cwde
sahf
mov
es
mov
enter
cld
(bad)
ds
sti
jmp
cmp
div
fimul
cmp
es
ret
inc
(bad)
push
loopne
dec
fdivr
retf
test
pusha
cld
fidiv
jle
popf
inc
cmps
mov
mov
fs
hlt
sub
aad
jg
or
loop
das
out
sub
pop
or
inc
dec
(bad)
scas
sub
and
pop
int3
cmp
jns
ins
dec
into
in
pop
mov
mov
jns
pushf
pop
mov
sti
mov
sub
fild
pusha
lods
outs
test
xor
(bad)
outs
aam
fs
imul
mov
mov
mov
xlat
fild
inc
mov
call
div
xor
stos
inc
in
gs
xor
pop
lock
xchg
cmp
not
je
call
pop
jo
ds
call
inc
sbb
jp
in
repz
cmps
sbb
xchg
add
pop
cwde
lods
nop
and
lods
jmp
pop
call
pop
mov
lods
inc
sahf
aam
lea
jae
call
dec
jge
jg
or
and
outs
(bad)
and
xchg
cld
jge
(bad)
xchg
jae
leave
fnsave
in
nop
int
call
adc
shl
jg
rcr
retf
and
mov
inc
and
popa
scas
or
mov
sahf
xchg
mov
mov
loop
sub
pop
inc
(bad)
das
jae
dec
cmp
mov
fiadd
and
jb
das
cmp
arpl
fs
jne
pushf
jmp
jmp
in
inc
jg
or
(bad)
and
js
dec
sbb
xor
pop
rol
cmp
popa
iret
popf
fisubr
popa
repz
ret
push
jno
mov
icebp
or
dec
imul
out
imul
neg
sub
ins
or
in
cdq
movs
jmp
scas
jnp
cmp
loop
mov
cmp
sbb
ins
jns
cmps
inc
xor
outs
pop
mov
jnp
jge
cmps
sub
and
mov
xor
xchg
fsub
outs
fldcw
aas
nop
data16
add
push
movs
xchg
adc
dec
(bad)
daa
clc
cmp
add
jb
adc
and
(bad)
mov
and
cmp
repz
out
das
icebp
inc
out
loop
xor
mov
add
xor
out
jae
push
movs
mov
dec
adc
mov
hlt
or
shl
retf
es
mov
in
and
pop
adc
inc
push
xchg
dec
scas
imul
loope
movs
int
xchg
cmps
scas
imul
mov
push
rol
std
jo
or
xchg
xchg
(bad)
aas
retf
sbb
cmps
std
mov
push
ss
sub
mov
repnz
outs
dec
xor
mov
cmp
repz
push
add
(bad)
add
mov
nop
in
mov
dec
lods
bound
in
movzx
mov
adc
or
jl
lock
pop
out
ss
xadd
hlt
and
mov
cmp
jl
mov
push
stos
and
adc
jg
pop
and
(bad)
mov
inc
jne
pop
leave
jp
fdiv
inc
jo
sub
mov
mov
rcr
shr
lea
sub
sbb
push
cdq
pmuludq
nop
mov
add
stos
sbb
jmp
test
int3
call
sti
mov
inc
js
cdq
(bad)
in
cdq
add
and
or
mov
out
popf
cdq
mov
inc
hlt
xchg
sub
mov
scas
pusha
xor
jp
xor
aam
test
and
stc
cmp
push
and
mov
add
call
dec
loop
popf
xchg
(bad)
in
mov
sar
add
or
jp
out
mov
rol
lods
fs
cld
js
fcomp
inc
xchg
aas
pushf
xchg
and
xor
ss
jno
loop
hlt
repnz
inc
cwde
scas
xor
mov
in
or
mov
fdiv
ret
add
and
add
ret
pop
or
and
jge
adc
cmp
in
out
jmp
xchg
push
jb
ror
or
mov
dec
cdq
cmp
call
pop
pop
mov
add
mov
inc
jae
inc
ret
add
scas
xchg
sahf
fcmovb
inc
and
dec
push
ret
add
adc
or
push
sub
sub
xchg
mov
mov
jecxz
mov
sub
xchg
movs
push
jo
jecxz
pop
shl
mov
int
nop
js
enter
call
retf
push
ins
jle
mov
adc
aam
ss
out
bound
pop
popf
loop
pushf
mov
pushf
mov
lea
call
call
xchg
mul
cmp
add
scas
out
push
mov
dec
fwait
mov
rcr
or
(bad)
test
mov
inc
ja
arpl
test
cmp
mov
adc
mov
mov
(bad)
nop
arpl
cdq
mov
or
jmp
fcom
shl
or
scas
or
jmp
push
sbb
ins
cmc
adc
int
out
(bad)
pop
xchg
xor
aaa
jmp
pop
call
push
shrd
sbb
add
jmp
sbb
push
fld
jb
sbb
js
fstp
mov
jp
adc
and
jmp
xchg
push
(bad)
sbb
sbb
dec
test
rcr
jbe
xlat
push
pop
(bad)
scas
add
pop
bswap
or
mov
mov
stc
mov
mov
sahf
lea
fild
xchg
cmp
jnp
retf
jmp
dec
pop
imul
xor
dec
popf
push
lea
je
jne
push
pushf
pusha
pushfw
pop
rcr
setge
cmc
mov
pushf
jmp
pop
imul
test
mov
dec
add
loop
and
stos
sub
xchg
xchg
rol
push
sbb
adc
push
sbb
jp
(bad)
sub
imul
les
dec
not
leave
ror
lods
hlt
pop
xor
jg
retf
std
mov
arpl
outs
hlt
mov
les
pusha
mov
repnz
inc
jb
mov
iret
sub
xchg
jmp
mov
lea
jb
pushf
lea
call
pushf
jmp
mov
lea
call
mov
lea
call
push
push
push
adc
jmp
scas
push
ins
test
out
or
pop
jnp
mov
xchg
mov
dec
ss
shl
retf
stc
push
push
rol
and
ds
and
mov
popf
xor
ds
lds
mov
push
(bad)
mov
mov
xor
sti
fwait
pop
push
pop
dec
xor
pop
mov
loopne
sub
and
cmp
fwait
push
xchg
es
or
imul
or
aaa
push
sbb
xor
mov
xchg
cdq
dec
or
outs
test
aaa
out
adc
das
push
int
in
or
xor
mov
mov
sub
test
pop
jae
fsub
cmp
xor
jns
push
js
pusha
inc
test
out
into
mov
jno
push
sbb
mov
push
addr16
xchg
jae
outs
out
pop
mov
xor
mov
mov
push
jnp
in
pop
cmps
add
xchg
cmp
in
(bad)
addr16
or
add
push
jns
mov
dec
fiadd
loop
arpl
pop
sub
hlt
ja
push
dec
mov
in
mov
cdq
test
cdq
pushf
push
mov
lods
in
daa
daa
dec
(bad)
popa
xor
sldt
sub
das
mov
inc
inc
std
fsub
ja
adc
nop
push
std
sbb
push
xor
cwde
mov
dec
push
or
or
jmp
jmp
not
clc
call
dec
movs
js
stos
pop
xchg
pop
out
or
cdq
loop
add
mov
dec
jp
inc
int
jmp
inc
bnd
lahf
cmc
adc
xchg
ret
into
xlat
int3
ja
adc
and
inc
sbb
inc
jns
mov
mov
dec
inc
aad
xchg
pop
push
push
mov
mov
pop
mov
ds
cmp
in
jle
repz
xchg
int
adc
inc
jmp
test
cmc
sub
mov
cmp
push
mov
add
sub
inc
(bad)
sbb
jmp
out
movs
inc
sbb
retf
push
jmp
pop
mov
mov
inc
stos
fucomp
sub
push
jno
div
dec
jb
call
and
or
mov
inc
into
repnz
push
push
call
(bad)
push
sub
xchg
add
add
fisub
push
cmp
dec
pushf
add
cmps
mov
mov
aas
gs
mov
imul
pop
nop
xor
push
popa
test
(bad)
mov
push
addr16
popf
mov
cmc
sbb
sub
pop
cwde
sub
cli
mov
movs
mov
pop
adc
pop
or
es
bound
je
jecxz
mov
pop
test
mov
test
js
push
add
leave
fbstp
jle
mov
enter
xchg
jmp
scas
xchg
cmp
add
es
mov
add
pop
(bad)
leave
std
and
cmp
(bad)
push
xchg
sub
lods
mov
ss
sbb
sahf
fld
mov
pop
lods
push
mov
(bad)
mov
xchg
out
jle
adc
inc
sub
out
dec
mov
call
mov
adc
push
inc
ds
push
into
(bad)
pop
ins
jge
mov
arpl
icebp
call
mov
call
push
pusha
lea
jne
call
adc
mov
push
pushf
jmp
pushf
sub
add
push
pusha
or
pusha
pushf
call
shld
bsr
mov
neg
sub
sub
mov
rol
lea
lea
clc
sub
jmp
jmp
imul
add
and
out
sbb
data16
pop
out
into
aaa
or
mov
or
pop
push
or
lods
and
mov
sbb
cmp
cmp
push
jmp
imul
jecxz
pop
pop
js
(bad)
mov
push
pop
sub
pop
mov
sbb
lock
ja
or
jmp
cmp
sti
dec
jmp
ins
and
mov
movs
pop
js
xor
cmp
jp
add
adc
mov
out
aaa
and
imul
dec
clc
stos
into
cli
jmp
outs
push
jg
xlat
push
lea
dec
(bad)
xchg
in
imul
dec
pop
in
mov
add
inc
inc
mov
rcr
or
jo
push
sbb
rcr
cli
mov
adc
mov
and
adc
mov
movs
push
cmp
mov
and
push
jle
(bad)
xor
pop
push
aam
and
cmp
jle
mov
and
fwait
jmp
xor
cmp
aaa
and
ds
cmp
sbb
fnstsw
xor
jp
mov
das
fcom
outs
stos
inc
mov
stos
jmp
lds
push
or
pop
retf
push
in
clc
mov
xchg
leave
pop
mov
ins
ror
push
xchg
inc
xchg
mov
mov
ret
jmp
dec
mov
mov
js
mov
dec
cmc
jg
or
aaa
pop
mov
ror
cmc
out
xor
adc
sbb
test
jmp
push
adc
push
push
lea
jae
jmp
ret
out
mov
inc
jne
push
ja
fincstp
xchg
sub
mov
mov
pop
adc
mov
neg
idiv
mov
mov
mov
stos
loope
dec
fild
xor
into
call
mov
or
pop
in
jno
xchg
(bad)
fidivr
cli
lea
jne
sub
mov
pusha
sub
stc
movsx
lea
pushf
sub
stc
push
pushf
call
push
jmp
adc
sbb
pop
pop
mov
fimul
aas
out
neg
int3
ins
fisub
lahf
adc
movs
lods
jmp
outs
mov
jbe
xlat
movs
fnstsw
loopne
mov
rcr
inc
sbb
lahf
fimul
and
pushf
inc
sbb
xlat
fcom
leave
inc
cmp
sub
xchg
(bad)
push
pop
dec
and
(bad)
fild
(bad)
out
pop
push
(bad)
outs
inc
cdq
call
ror
scas
push
inc
push
push
add
xchg
sbb
dec
inc
pusha
xor
icebp
or
dec
test
enter
inc
xchg
pop
pushf
push
mov
mov
push
fistp
int
fcomp
xlat
dec
fiadd
xchg
cmps
dec
pop
enter
jecxz
pop
repz
jns
out
sub
jo
ins
dec
pushf
cmps
in
xchg
ins
pop
arpl
sbb
clc
xchg
cli
pushf
pop
pop
adc
inc
sub
pop
push
out
sub
leave
pop
sbb
cmps
pop
mov
sar
sbb
int3
jbe
in
dec
lea
mov
je
fisubr
adc
fisttp
cli
repz
jmp
mov
add
pop
xor
mov
sbb
lea
daa
pop
and
cmp
xlat
jmp
les
inc
dec
pop
sub
leave
pop
mov
sub
mov
cld
sar
sbb
cmp
imul
mov
and
cmp
ror
dec
ret
scas
movs
cmp
pop
sbb
inc
sbb
ror
push
mov
pushf
cwde
dec
arpl
int3
lea
shl
xchg
mov
push
sbb
jge
jmp
and
retf
(bad)
push
loope
sub
nop
les
(bad)
jb
xchg
neg
mov
jnp
cmp
pushf
push
bswap
addr16
push
mov
clc
js
repz
mov
and
jl
hlt
pop
cmps
adc
std
sub
aas
rcr
rol
nop
jno
lods
xlat
icebp
adc
dec
mov
pushf
jmp
sub
push
popa
nop
stc
pop
adc
je
pop
das
rol
std
test
fisttp
lock
mov
retf
fidivr
xor
fsub
stc
iret
cmp
fabs
pop
sahf
dec
adc
mov
mov
sub
push
jae
stc
pop
call
out
mov
sbb
mov
pop
(bad)
xor
or
data16
dec
aas
lock
in
xor
dec
push
cmp
mov
inc
arpl
mov
jo
ret
inc
xchg
add
pop
push
(bad)
sbb
or
push
data16
mov
call
mov
retf
sbb
fidivr
(bad)
ficomp
mov
mov
fcomp
dec
int3
pushf
xor
cwde
sbb
pop
iret
mov
xor
mov
mov
adc
cdq
retf
int3
(bad)
call
adc
das
retf
int3
retf
sub
sbb
inc
mov
retf
jl
dec
mov
int3
fiadd
pop
(bad)
and
sbb
push
jecxz
retf
push
inc
in
retf
push
ss
fwait
pop
xchg
dec
mov
push
js
sbb
js
ficom
pop
retf
jmp
pop
and
fwait
out
pop
out
xor
push
sub
add
lods
push
mov
xchg
leave
clc
mov
push
cmp
rcr
popa
inc
les
fidiv
js
hlt
int
pop
fdiv
push
dec
jmp
arpl
fxch
dec
adc
fmulp
loop
cmp
pop
jge
pop
leave
adc
or
icebp
pusha
les
popa
jl
dec
mov
fisttp
lods
push
nop
mov
lods
cmp
ret
dec
mov
fild
adc
mov
cmp
adc
retf
adc
push
xchg
ss
stc
xlat
fcmovnu
dec
out
fistp
fstp
into
in
pop
scas
fdivr
jnp
cs
int
outs
fsubr
mov
pop
aaa
js
sbb
js
daa
sub
pop
fistp
inc
stos
mov
sahf
dec
rcr
push
leavew
jecxz
jo
sbb
xchg
inc
dec
or
fist
dec
aam
frndint
fwait
adc
pop
adc
or
cmp
dec
sti
fcomp
repz
ret
mov
ret
or
ficomp
pusha
dec
xor
mov
mov
aam
or
int
rcr
and
mov
fnstcw
js
sbb
js
test
cmp
pop
bound
fwait
mov
(bad)
push
lods
ss
jo
aam
xchg
add
mov
cmps
ret
dec
imul
push
mov
retf
xor
xchg
aam
sbb
dec
fs
fimul
rcr
cmp
ja
cli
pop
stos
pop
sbb
test
xlat
mov
dec
mov
int3
fidivr
push
(bad)
stos
inc
mov
mov
stos
repnz
(bad)
in
fist
push
push
pop
jp
dec
inc
dec
or
cmps
test
pop
pop
int
push
pop
fcom
int
rcl
int
ss
sbb
mov
fisttp
sbb
jecxz
retf
xchg
xor
cmps
ret
nop
(bad)
mov
dec
xor
fisub
adc
jmp
stos
pop
dec
dec
out
dec
mov
adc
push
(bad)
push
fmul
xchg
movs
dec
push
int
adc
stos
lods
adc
jo
fisttp
add
loope
jecxz
retf
mov
mov
nop
leave
inc
sub
fist
dec
aad
pushf
fcmovbe
sti
cmps
arpl
pop
int3
mov
(bad)
test
lock
adc
ficomp
pusha
or
mov
mov
aam
push
fnstsw
push
add
jnp
cli
or
mov
ficomp
cmps
add
pop
or
pop
ja
clc
sbb
mov
fist
daa
pop
fistp
dec
pop
dec
sub
pushf
(bad)
sub
sbb
pop
stos
int
sar
sbb
retf
sbb
stos
retf
xchg
shl
popa
nop
(bad)
sbb
pop
stos
int
sar
sbb
retf
sbb
shl
sub
inc
retf
shl
jecxz
retf
xchg
das
in
mov
pop
gs
pop
js
sbb
add
jecxz
retf
xchg
aad
cmps
gs
(bad)
pop
les
int
aad
movs
sbb
retf
jmp
jecxz
retf
xchg
rol
nop
(bad)
call
pop
fistp
sbb
retf
stos
jae
cmp
xchg
shl
popa
nop
(bad)
sbb
pop
stos
int
sar
sbb
retf
jbe
jecxz
retf
adc
and
retf
xchg
pop
inc
cmps
call
pop
outs
int
sbb
sbb
jecxz
retf
xchg
sbb
fbstp
outs
int
sbb
sbb
jecxz
retf
xchg
sub
shl
sbb
sbb
jecxz
retf
xchg
sbb
cmps
stos
nop
pop
shl
dec
inc
rcr
stos
push
pop
dec
loopne
pushf
bound
ficomp
pusha
dec
xor
mov
mov
push
inc
adc
pop
mov
jmp
fcmovnb
jle
jl
adc
pop
pop
aam
cmp
push
fdivr
sbb
cmp
xchg
adc
mov
int
nop
(bad)
push
pop
xchg
js
sbb
js
enter
retf
xchg
push
cld
cmps
loope
(bad)
popa
jl
je
lock
xchg
mov
fistp
and
dec
int
or
retf
adc
jecxz
retf
xchg
dec
sub
fst
fmul
pop
inc
js
dec
les
sbb
enter
pop
jge
pop
pop
cmp
sbb
enter
cmps
retf
mov
fcmove
cmps
stos
add
retf
push
ror
dec
frstpm(287
ret
dec
sub
fwait
cs
sbb
call
pop
xchg
(bad)
js
sbb
fld
(bad)
xchg
stc
sbb
dec
rol
pop
push
in
or
mov
dec
mov
pop
shr
clc
sbb
ja
fild
pop
fistp
dec
es
neg
cmps
xchg
or
arpl
pop
repnz
pop
push
je
sbb
push
push
out
sbb
pop
xchg
js
test
retf
jecxz
fwait
push
xchg
aas
xlat
cmps
into
nop
push
pop
loopne
mov
push
dec
jo
rcl
inc
mov
(bad)
xrelease
nop
pop
jbe
fstp
dec
mov
int3
push
or
(bad)
fcmovne
adc
push
xchg
out
sbb
dec
jbe
pop
retf
pop
inc
xchg
ret
fwait
stos
jbe
jecxz
retf
xor
(bad)
mov
push
bound
rcr
scas
push
xchg
ins
dec
aas
sbb
dec
pop
call
mov
xor
sbb
sbb
fsub
push
dec
sub
gs
push
xchg
add
xchg
leave
retf
jmp
stos
and
cmp
ficom
adc
out
xchg
fld
sub
pop
push
les
dec
out
xor
jmp
fwait
sbb
jb
repnz
xchg
cwde
mov
push
(bad)
mov
cmps
pop
loopne
and
push
cwde
pop
pop
mov
mov
xchg
mov
(bad)
mov
jmp
pop
mov
fwait
pushf
fstp
xchg
sbb
dec
leave
xor
pop
fst
mov
jb
mov
int3
fisttp
sbb
push
fisubr
add
(bad)
xchg
inc
dec
push
pop
xchg
hlt
ret
dec
test
fstp
jl
dec
mov
int3
fxch
push
lods
and
dec
pop
aam
xor
dec
les
mov
mov
loope
mov
nop
mov
push
mov
retf
jl
push
dec
mov
aaa
sbb
rcl
fist
into
movs
add
loopne
dec
jmp
rol
mov
mov
call
retf
sub
pop
ret
ret
das
aas
lods
add
push
fisub
call
stos
xor
push
int
pusha
or
pop
mov
sbb
mov
fs
stc
mov
outs
scas
fistp
pop
or
push
js
mov
test
xchg
pop
fistp
xchg
cdq
xchg
ficomp
pop
push
pop
cmc
sbb
pop
pop
dec
jb
dec
std
dec
sbb
push
mov
pop
retf
mov
ffree
neg
lods
clc
adc
mov
pop
stos
loop
les
sub
sti
inc
int3
test
cmc
add
cmps
call
pop
test
jbe
fcomi
push
test
sbb
fsubr
dec
sti
(bad)
xchg
pop
sti
sti
mov
xlat
adc
retf
jecxz
fstp
push
(bad)
dec
int
dec
mov
aad
retf
lea
mov
mov
push
sub
xchg
ret
dec
inc
xlat
fcmovnu
mov
mov
fld
jns
stos
ret
cmp
stc
ret
push
xchg
fcmovnu
retf
xchg
dec
pop
xlat
fmul
push
xlat
jecxz
fist
(bad)
nop
addr16
and
pop
fdivr
pop
dec
int
fstp
dec
dec
mov
push
push
inc
and
mov
stc
ret
push
repz
mov
xor
hlt
or
jmp
mov
dec
jecxz
shr
retf
push
xchg
xor
adc
leave
xchg
fld
stos
pop
jmp
pusha
(bad)
push
mov
ror
and
(bad)
int
dec
inc
fcomp
mov
inc
dec
int
fld
repz
shl
stos
ret
cmp
int
jmp
imul
int
outs
repz
fcmovnb
js
sbb
retf
jae
jecxz
retf
xchg
cwde
pop
cmps
sub
lods
ret
inc
aam
mov
(bad)
rol
inc
cwde
(bad)
das
retf
repnz
cmp
retf
sub
xchg
jmp
and
stos
fcmovne
fwait
out
pop
dec
fist
jmp
fst
in
retf
push
fcmovb
retf
cwde
call
nop
(bad)
mov
lods
ret
mov
adc
dec
ret
fnclex
imul
dec
test
pop
stc
enter
mov
cmps
cs
(bad)
mov
lods
iret
mov
mov
(bad)
(bad)
fcomp
cmp
push
or
retf
rcr
stos
je
cli
add
fistp
pusha
stc
push
mov
cmps
leave
das
mov
push
push
adc
imul
jmp
std
adc
out
adc
gs
hlt
push
mov
xchg
leave
sub
push
cmp
cli
xor
pop
xchg
mov
es
mov
or
mov
push
aas
adc
xchg
repnz
and
pop
imul
push
and
mov
xor
sub
push
cmp
inc
xor
xchg
push
cli
es
pop
rol
pusha
popa
push
mov
mov
xor
adc
sub
aad
cli
gs
pop
test
mov
(bad)
fstp
stos
mov
pop
xchg
cs
and
imul
(bad)
inc
pop
fld
pop
(bad)
stos
ret
sbb
sub
(bad)
mov
loope
out
lock
cli
dec
ficom
inc
mov
mov
jmp
fist
(bad)
mov
pop
xchg
js
sbb
js
movs
stos
jecxz
retf
xchg
push
cmps
stc
nop
(bad)
lahf
cmp
int
fs
sbb
js
push
add
retf
or
jns
xchg
stos
pop
cmps
sub
cmps
ins
nop
mov
dec
ins
sbb
js
test
retf
loop
mov
dec
jge
push
out
nop
rcr
xor
clc
pop
js
retf
xchg
pop
inc
outs
retf
push
or
pop
mov
jp
fndisi(8087
fdivr
pop
sbb
inc
pop
retf
ret
lods
fdivr
and
jmp
adc
add
aad
mov
pop
inc
xor
jb
dec
cmp
xor
idiv
cmp
xchg
cmp
fcmovnu
cmp
ss
(bad)
dec
call
test
neg
xchg
jbe
pop
aaa
dec
cmps
mov
pop
push
mov
(bad)
fiadd
(bad)
dec
sbb
int
xchg
cmp
fcmovnbe
ja
repz
xchg
in
addr16
add
into
test
lods
push
fadd
or
retf
jno
ret
fst
dec
ficomp
int3
fst
xchg
fdivr
adc
dec
xchg
inc
mov
mov
push
rcl
cmps
gs
(bad)
xchg
rcl
sub
sub
push
inc
fiadd
push
cmps
fcomp
mul
pop
pop
fsubrp
retf
mov
(bad)
push
cmp
out
int3
pop
jmp
cmc
mov
mov
dec
fcomp
push
push
rcl
mov
adc
add
fisub
push
out
push
push
push
fild
dec
and
aad
aam
jae
cmp
fisttp
(bad)
les
mul
es
dec
enter
nop
cdq
adc
cli
push
rcl
push
and
dec
pop
leave
pop
ret
dec
push
pop
int
xor
push
xor
push
jl
lods
clc
mov
pop
pop
stos
add
(bad)
fadd
xchg
dec
neg
fwait
addr16
into
popf
adc
fsub
dec
sti
fistp
scas
lahf
adc
mov
lods
out
pop
rcr
fsubp
dec
sti
(bad)
scas
cmp
lahf
dec
les
fisttp
fistp
into
out
popf
lods
repz
pop
in
dec
stc
dec
sti
sti
fist
test
bound
fstp
pop
out
fcmovbe
int3
(bad)
mov
retf
(bad)
retf
mov
mov
pop
add
pop
mov
or
mov
fimul
scas
mov
stos
lods
or
idiv
pop
(bad)
fdivr
stos
jmp
shr
fcmovu
dec
mov
push
xor
push
and
lds
pop
push
dec
sub
pop
push
pop
dec
leave
jecxz
fnstsw
pop
stos
dec
mov
pusha
dec
ja
pop
nop
xor
xor
dec
fistp
jb
adc
clc
push
ja
pop
nop
inc
jns
iret
push
sub
inc
pop
add
xchg
aam
mov
sbb
xchg
mov
retf
cmps
test
ss
xchg
or
scas
dec
sbb
js
sbb
jecxz
retf
xchg
into
or
xor
neg
(bad)
leave
jg
push
mov
fxch
retf
pop
fist
pop
cwde
pop
pop
mov
pop
hlt
ja
je
pop
ror
int
cwde
pop
dec
(bad)
push
fstp
jle
or
push
sbb
xchg
fiadd
xchg
(bad)
stos
pop
adc
pop
cld
int
fld
xchg
sbb
js
xchg
push
retf
pop
int
aad
sub
(bad)
adc
mov
fwait
mov
push
sbb
inc
pop
popf
xchg
call
pop
lods
hlt
jnp
xor
xor
(bad)
or
les
hlt
fs
jecxz
not
jmp
xchg
les
(bad)
pop
aad
pusha
push
xchg
xchg
pop
or
in
mov
pop
bound
dec
jne
daa
push
xchg
ret
pop
mov
aam
xchg
adc
call
push
mov
pop
cli
xchg
push
pop
xor
xchg
add
cmps
add
mov
push
ins
fsub
sbb
adc
cmp
dec
retf
mov
xchg
sub
addr16
in
sar
add
fcomi
sahf
pop
mov
jp
pushf
cmp
mov
test
je
mov
xor
dec
push
sbb
xchg
pusha
xchg
sub
add
sbb
js
or
frstor
movs
(bad)
pushw
mov
mov
cmp
mov
sbb
adc
leave
cmps
(bad)
test
aad
enter
rcl
js
fstp
scas
mov
pop
xlat
adc
push
call
adc
stos
or
pop
js
rcr
jb
jecxz
xchg
xor
cmps
dec
sbb
fstp
movs
pop
pushf
mov
aam
lods
dec
jne
fxch
jns
cdq
(bad)
add
jnp
cwde
cmps
add
jo
and
pop
jl
or
push
xchg
add
fdivr
pop
rol
jae
rcr
and
xor
call
pushf
xchg
adc
push
in
jg
dec
call
jl
call
xlat
sbb
dec
mov
cmps
loopne
clc
sbb
dec
popf
mov
out
dec
dec
and
xchg
rcl
test
adc
jno
int
mov
mov
or
xor
(bad)
enter
rcr
cmps
pop
push
mov
int3
rcl
mov
pop
fist
or
mov
sbb
lea
cmp
int3
mov
dec
push
sub
lea
je
add
xchg
xor
call
inc
or
mov
fnsave
push
lahf
mov
or
dec
test
into
cld
popf
mov
pop
sbb
fbstp
or
sub
pop
mov
adc
cmps
pop
(bad)
jno
call
mov
pop
jbe
not
adc
and
mov
mov
arpl
dec
xlat
aam
push
inc
(bad)
or
std
hlt
mov
fld
je
or
(bad)
aam
lahf
pop
mov
jp
xor
cmc
repnz
jb
stos
push
jge
xchg
mov
mov
pop
loop
test
pop
dec
push
xlat
mov
sbb
xchg
pop
adc
cld
ja
jge
sbb
cmp
adc
dec
(bad)
out
repz
aam
out
call
in
je
retf
xchg
push
xchg
fcmovnb
cmp
pusha
je
jl
push
or
jno
adc
cmp
sbb
sbb
xchg
dec
ds
dec
mov
les
jmp
ja
xchg
cld
sar
push
push
cmp
mov
push
outs
dec
mov
rol
and
(bad)
adc
jb
mov
jp
cmp
enter
call
mov
call
dec
iret
js
je
cmc
jge
xchg
lock
fucom
jg
les
into
(bad)
scas
std
in
push
mov
(bad)
test
dec
xchg
sbb
push
mov
or
dec
repz
mov
ror
aam
mov
inc
cmc
test
push
fcmovnbe
fisubr
push
jp
or
lock
mov
push
sbb
push
in
pop
adc
fsubr
inc
push
fsubr
sbb
out
fucomp
lods
pop
add
aas
adc
test
mov
mov
xchg
out
add
popa
sbb
xor
repz
mov
sub
mov
jg
mov
or
xor
xchg
fcmovnu
enter
pop
add
jl
push
mov
aam
sub
push
push
mov
mov
mov
xchg
jns
pop
cmp
frstor
jmp
mov
into
push
mov
mov
lods
lock
dec
cmp
mov
jl
lds
ins
(bad)
gs
sbb
lds
jl
gs
push
mov
sbb
out
pusha
mov
outs
or
lods
loopne
cmp
iret
std
ins
jmp
lahf
fild
ds
imul
sbb
(bad)
mov
xchg
in
sbb
test
lahf
adc
test
in
mov
cld
xor
movs
outs
push
lods
sbb
inc
repz
dec
push
mov
lods
fs
int3
or
jns
lods
ds
mov
fucomi
cli
ret
jbe
mov
xor
inc
jo
jge
lods
and
sbb
jmp
dec
pop
mov
std
sub
leave
loop
stos
lods
push
adc
mov
scas
mov
cli
xchg
add
cmc
lods
cmp
scas
mov
pop
dec
adc
push
jno
jmp
inc
(bad)
mov
or
inc
and
mov
test
sbb
shr
fnsave
mov
lahf
inc
(bad)
sub
mov
mov
cmp
sar
pop
and
stos
cli
mov
dec
mov
cmp
shl
adc
lahf
or
inc
call
push
or
xlat
cli
iret
dec
lods
(bad)
mov
push
icebp
push
pop
mov
inc
lock
stos
stc
lahf
adc
push
mov
push
xchg
mov
jns
cmp
ins
adc
jg
lahf
inc
iret
xchg
push
adc
iret
lods
das
out
jns
or
inc
xchg
xchg
xchg
and
pop
and
scas
inc
adc
fidiv
in
lahf
mov
mov
aas
jmp
mov
outs
outs
adc
sbb
or
leave
sub
mov
inc
lahf
jmp
in
into
ret
mov
sub
mov
inc
stos
xlat
mov
loope
and
lahf
popf
int
push
mov
lods
outs
jnp
xor
scas
sar
ins
mov
scas
mov
push
xchg
lds
cmp
add
cmps
lahf
icebp
xchg
fisttp
cmp
dec
fistp
sbb
icebp
inc
adc
push
or
sub
test
cmp
repz
lahf
inc
cli
inc
scas
pushf
lea
lods
lods
add
aaa
jae
mov
and
iret
shr
add
imul
pop
bound
mov
lahf
out
out
xor
retf
pop
mov
lahf
addr16
iret
xlat
popaw
fwait
pop
xchg
clc
mov
jae
outs
and
lahf
inc
mov
add
or
jp
iret
lods
xchg
int
sbb
sub
mov
adc
jb
adc
hlt
sub
lahf
add
mov
mov
ins
cdq
test
pop
jg
lahf
popf
pop
push
aas
ins
and
jae
shl
repnz
scas
jmp
dec
pop
cmp
push
push
jbe
in
add
jp
mov
inc
bound
daa
sbb
xchg
pop
stos
mov
test
push
jmp
addr16
pop
in
and
push
ror
jg
xor
aas
push
jnp
dec
daa
cli
cmp
in
lock
or
push
jbe
in
loopne
push
mov
xchg
lahf
xor
repnz
sbb
mov
pop
rcr
icebp
loop
lahf
nop
ins
pop
cmp
lahf
out
into
in
outs
stc
outs
cld
outs
pop
mov
lahf
ins
(bad)
mov
fild
jae
lahf
pop
movs
inc
ins
test
cld
repnz
sub
cs
mov
sub
lahf
stc
cld
outs
pop
pusha
jl
xlat
inc
lahf
retf
imul
sbb
clc
lahf
je
or
push
lahf
ins
xor
mov
dec
dec
pop
outs
lock
push
ins
sub
out
daa
sbb
sub
dec
xchg
and
lahf
in
add
cld
clc
scas
dec
sub
in
inc
outs
jae
lahf
cmp
adc
xchg
adc
in
fistp
cmp
lahf
add
outs
shr
sbb
daa
aaa
or
dec
lods
and
jl
movs
lahf
jae
push
lods
(bad)
jmp
cli
push
or
movs
sbb
stos
mov
or
add
loope
mov
lods
or
lahf
cmp
add
fsubrp
sti
sbb
mov
cdq
pop
daa
pop
mov
stc
sar
(bad)
push
or
xchg
mov
mov
cmp
sub
ins
sub
out
dec
jmp
retf
aas
or
stos
mov
or
lods
add
ret
test
(bad)
mov
es
int
push
pop
mov
xor
sub
fcomp
jmp
imul
sbb
inc
stos
push
cli
dec
mov
pop
or
sbb
aaa
pop
stos
mov
sub
fisttp
mov
or
dec
mov
mov
mov
out
test
or
sub
pop
ins
cmp
xchg
xchg
mov
xor
rol
sub
jg
lahf
cmp
retf
xchg
jbe
mov
cmp
pop
pop
fild
retf
jp
xchg
(bad)
imul
mov
dec
test
retf
sbb
lds
data16
jnp
mov
mov
(bad)
push
mov
pop
add
sbb
ret
add
sbb
mov
lods
ins
cld
mov
outs
hlt
lahf
cs
cdq
adc
pop
jmp
mov
jp
pop
push
inc
fwait
cmp
mov
mov
and
xchg
dec
mov
(bad)
or
inc
stos
mov
dec
inc
ret
pop
add
stc
adc
stos
(bad)
iret
push
iret
lods
jno
mov
lahf
add
sub
lods
lea
nop
pop
push
aas
mov
sbb
lds
dec
sub
push
mul
push
imul
sub
sbb
ins
adc
fld
stc
push
test
jno
dec
mov
leave
or
mov
js
aas
push
or
push
dec
ins
cmp
xchg
xchg
mov
jmp
(bad)
jmp
sub
xlat
xor
or
adc
jo
mov
pop
retf
mov
ss
stos
cmp
or
add
mov
mov
mov
addr16
ja
jno
mov
sub
sub
mov
inc
mov
ins
push
pop
mov
dec
or
xchg
dec
ins
sub
adc
pusha
sub
dec
in
out
and
dec
outs
adc
jmp
push
enter
cwde
call
movs
inc
mov
pop
lds
cmp
mov
push
jp
iretw
ins
shl
mov
mov
xor
jns
xor
stos
pop
js
pop
aas
mov
fild
jnp
mov
mov
fdivr
dec
imul
(bad)
mov
test
jge
iret
shl
mov
stos
daa
aaa
inc
pop
mov
dec
jecxz
lea
cli
lahf
in
sub
sbb
imul
loopne
or
pop
or
lahf
outs
sbb
pop
into
sub
adc
imul
sbb
pop
(bad)
lods
ds
popf
xchg
retf
imul
mov
lods
in
loopne
lahf
popf
imul
pusha
lahf
add
or
lods
gs
retf
dec
test
adc
xchg
jge
and
stc
lahf
in
xchg
lods
and
out
ret
lahf
dec
in
jp
xor
pop
mov
pop
jb
fild
mov
sub
lods
pop
cmp
pop
or
retf
jns
jmp
cmp
mov
or
ret
add
stos
retf
add
fbstp
dec
in
cmp
add
mov
add
inc
inc
ret
outs
loope
(bad)
lahf
cld
jns
lods
out
fs
sbb
sub
sub
imul
push
mov
cmp
iret
mov
or
stc
rcl
jmp
sub
mov
pusha
dec
cmp
xchg
add
and
sub
aam
stos
xor
mov
leave
ror
add
and
add
mov
in
mov
dec
xchg
inc
cmp
das
daa
stos
iret
mov
shl
or
inc
lahf
popf
imul
repz
stos
popf
(bad)
pop
inc
push
jmp
div
loop
retf
mov
movs
sub
dec
test
or
dec
clc
or
test
ins
jbe
mov
xor
pop
int3
aas
retf
cmp
sub
xor
(bad)
and
or
aaa
jge
popa
stos
mov
into
mov
outs
out
fwait
lahf
xchg
sti
(bad)
jmp
jae
xchg
inc
movs
cli
nop
sbb
movs
jbe
or
mov
sub
pop
call
pop
mov
xlat
mov
mov
mov
jmp
or
sbb
mov
add
cmp
xor
mov
jnp
fs
sbb
xchg
mov
jmp
addr16
arpl
and
outs
pop
lods
(bad)
lahf
xchg
repnz
fst
leave
mov
mov
xchg
call
stos
ins
jmp
ret
mov
push
sub
scas
lods
jns
adc
dec
test
out
inc
call
push
adc
jg
cmp
fwait
pop
movs
js
add
ins
dec
mov
xor
stos
inc
pop
mov
dec
add
lods
(bad)
xchg
js
iret
xchg
js
popf
lods
loope
cmp
lahf
mov
lods
add
mov
mov
aad
xchg
mov
mov
mov
push
retf
mov
in
and
adc
stos
mov
(bad)
sbb
push
hlt
mov
scas
cmp
cmp
aaa
inc
push
and
ret
leave
pop
add
lahf
repz
or
mov
add
xchg
jp
ins
iret
imul
push
mov
sbb
add
cmp
and
cdq
leave
aas
cmp
jae
outs
xor
retf
(bad)
icebp
push
adc
and
aaa
xchg
aas
call
lds
ja
lods
sar
dec
sbb
lods
cmps
mov
repz
jmp
test
out
ret
test
push
xor
daa
add
bound
inc
add
or
ret
mov
mov
dec
sbb
xor
add
out
push
stos
fs
inc
add
pop
push
sub
and
mov
stos
mov
sub
lods
or
mov
lods
retf
sbb
lods
sahf
stc
in
lea
cmps
lahf
add
bound
adc
outs
lock
jmp
cmp
loopne
outs
lock
pop
lahf
fisttp
adc
mov
lea
outs
test
lahf
and
dec
pop
or
(bad)
sub
rcr
and
jg
outs
inc
lahf
or
sub
in
pop
mov
lahf
and
retf
lods
clc
mov
jg
lahf
scas
mov
hlt
test
lahf
call
inc
outs
pop
mul
aas
or
cmp
and
je
or
jl
dec
hlt
mov
jb
fbstp
dec
addr16
cdq
pusha
fidiv
jmp
lahf
xor
call
dec
es
add
idiv
pushf
pop
dec
imul
int3
retf
imul
pop
mov
int3
inc
clc
or
inc
adc
or
mov
mov
push
pop
call
jno
fild
sahf
loop
test
push
loop
test
hlt
mov
sar
mov
repz
fimul
inc
mov
mov
jp
or
imul
mov
jmp
sub
and
sub
push
jmp
jmp
sbb
fild
dec
stos
dec
fnstcw
push
mov
fild
jno
xchg
cli
jg
push
clc
mov
in
push
lahf
mov
das
loopne
out
iret
adc
pop
sar
mov
nop
xchg
out
cld
test
lods
sub
and
out
cmp
daa
int3
lock
mov
stc
mov
hlt
sbb
or
test
sub
sbb
push
inc
add
or
add
imul
sub
mov
mov
pop
bound
sub
push
xlat
mov
pusha
pop
lods
js
mov
jle
mov
xchg
ja
inc
int3
pop
jl
mov
int3
push
sub
cmp
dec
neg
inc
lods
lods
fsub
out
cmp
aaa
int3
aaa
sbb
pop
push
jno
xchg
(bad)
scas
push
add
ret
test
pop
cmp
aas
mov
xchg
(bad)
lods
xor
call
pop
dec
cmp
cmp
mov
push
pop
es
push
dec
retf
ss
cdq
ret
jmp
sub
data16
mov
mov
lds
dec
push
xor
popa
(bad)
cmp
dec
xor
sub
ins
aas
movs
mov
dec
mov
cli
icebp
imul
cmps
mov
movs
mov
xor
or
jbe
outs
addr16
lods
ds
or
pop
xchg
imul
jmp
push
mov
(bad)
fldl2t
stc
sbb
inc
xchg
xchg
int3
(bad)
xlat
pusha
push
ins
dec
and
mov
daa
push
cmp
xchg
int3
bound
sbb
int3
stc
sbb
cdq
or
fwait
out
jge
aas
ins
stos
cmp
add
inc
int3
jno
dec
or
mov
jmp
mov
sbb
jbe
adc
sub
test
dec
lods
in
test
mov
ret
cmp
mov
adc
sub
dec
push
xchg
mov
mov
or
(bad)
jmp
dec
sub
sub
xchg
es
mov
loopne
sbb
push
call
inc
stos
cli
test
cli
xor
lds
js
pop
cmp
cdq
movs
jp
int
imul
daa
in
or
xchg
xchg
xchg
mov
jmp
lahf
push
iret
push
stos
mov
cs
in
mov
aaa
loopne
maxps
xchg
xchg
mov
sbb
addr16
push
fild
add
cmp
and
std
outs
or
adc
data16
lds
sub
push
mov
jg
sub
in
sbb
gs
call
loopne
lahf
inc
iret
paddw
and
ret
out
adc
and
push
mov
call
lods
in
sub
lahf
pop
and
(bad)
xor
lods
ds
popf
dec
(bad)
lahf
cld
call
push
lahf
add
lock
lahf
test
cmp
sub
cmp
xchg
lods
dec
sub
inc
cmp
cmp
lahf
popf
imul
pusha
lahf
add
test
xor
fidivr
mov
cmp
scas
sbb
xchg
sub
cmp
ret
call
lods
gs
adc
sbb
fnstenv
outs
in
popa
pop
es
lahf
shr
pop
ins
cs
lahf
in
dec
scas
mov
hlt
adc
lahf
sub
iret
imul
call
inc
outs
add
psubw
lahf
mov
sti
gs
lahf
cld
mov
in
jne
mov
push
pop
or
dec
jo
jge
test
fwait
lahf
xchg
dec
(bad)
(bad)
mov
mov
lahf
jae
outs
sub
lock
jae
push
lods
lea
inc
cmp
dec
and
cld
mov
lods
gs
adc
lods
and
push
jnp
cwde
in
lahf
sar
movs
inc
outs
add
imul
jbe
mov
push
pop
or
sub
in
sbb
or
ins
(bad)
retf
sbb
add
lods
add
lahf
sbb
pop
(bad)
lods
ds
popf
xchg
retf
imul
mov
lods
in
loopne
lahf
popf
imul
sbb
test
lahf
in
add
outs
in
xchg
lods
and
out
ret
lahf
dec
rcr
add
jl
sbb
lods
and
data16
fistp
xchg
or
lods
cld
popf
push
cmps
jae
lahf
or
aad
ret
and
iret
lds
lods
lahf
stc
cld
outs
pop
and
jmp
lahf
pop
xchg
test
pop
in
jmp
lahf
and
in
std
mov
call
lock
push
cmp
nop
lahf
mov
out
dec
lods
outs
loopne
jae
lahf
add
sub
loopne
cmps
lahf
loop
retf
pop
outs
lock
dec
lahf
xchg
pushf
lods
mov
lahf
push
jmp
sub
mov
cmp
cmp
test
lahf
call
outs
out
sub
lahf
adc
das
fidivr
in
xor
iret
sub
(bad)
and
lahf
cmp
lods
pop
or
ins
xchg
outs
lea
xchg
stc
lods
sub
pop
hlt
inc
outs
add
xor
dec
lods
mov
lea
rcr
jmp
cmps
lahf
in
shr
adc
lods
out
shl
sub
call
sub
cdq
lahf
test
lahf
mov
xchg
lods
dec
sub
push
cli
xor
and
lahf
xchg
jmp
inc
cmp
iret
std
ins
jmp
lahf
fild
cld
mov
outs
ds
cmps
lahf
jg
iret
lods
out
and
mov
fisubr
xchg
outs
sub
add
ja
adc
or
lahf
cld
mov
lods
gs
adc
adc
std
sbb
mov
in
in
inc
lahf
xor
shr
pop
ins
cwde
fidiv
push
retf
or
lods
in
popf
xchg
inc
iret
paddw
and
ret
out
adc
pop
arpl
aas
pusha
lahf
add
test
shr
mov
push
mov
push
out
sub
outs
jo
in
dec
mov
cmp
cmp
test
lahf
call
outs
out
sub
ret
out
adc
adc
std
sbb
mov
in
in
inc
lahf
xor
shr
pop
ins
dec
cmps
in
lahf
in
add
bound
fwait
lahf
mov
lock
jmp
cmp
loopne
outs
lock
jg
lahf
std
arpl
lahf
(bad)
push
sub
outs
mov
lahf
in
dec
mov
cmp
lahf
outs
cmp
test
lahf
call
outs
out
sub
lahf
adc
sub
lock
lahf
pop
dec
cs
ins
xchg
shr
inc
test
lahf
loopne
jae
outs
sub
lock
cmp
lods
pop
or
lahf
iretw
gs
outs
add
mov
stc
lods
sub
pop
hlt
inc
outs
add
psubw
lahf
mov
sti
gs
lahf
cld
mov
in
mov
sub
lods
push
pop
or
sub
in
sbb
or
lods
out
lahf
repnz
mov
lahf
sbb
lock
outs
lock
ret
inc
cmp
pop
jp
movs
lahf
jae
iret
sub
(bad)
aas
sbb
lods
gs
call
mov
outs
lock
inc
lahf
sub
ds
lahf
loopne
jg
iret
stc
lods
in
xor
sti
gs
and
out
scas
sub
scas
dec
or
xor
(bad)
gs
sbb
popa
push
pop
or
data16
lds
ins
adc
iret
lods
sbb
mov
or
jle
(bad)
mov
outs
rcr
and
lahf
bound
lods
add
sbb
adc
sub
lea
out
lahf
mov
or
push
lahf
lock
jae
iret
cdq
lahf
stc
lods
cld
mov
adc
outs
xor
(bad)
in
sub
dec
sub
push
mov
sub
stc
lods
cmp
test
je
or
ins
adc
iret
lods
sbb
mov
or
jle
(bad)
mov
outs
rcr
jg
add
or
daa
pop
clc
push
jmp
xchg
sub
loopne
aam
mov
mov
lods
in
cmp
add
mov
and
loopne
cld
ins
dec
mov
push
xchg
call
clc
sub
push
xchg
add
adc
retfw
pushf
jl
cmp
jbe
dec
cli
ins
pop
pop
lods
push
mov
add
fcomi
push
mov
fstp
add
repnz
pop
mov
mov
fcom
pushf
(bad)
js
pop
xchg
xor
xchg
pushf
gs
aam
int3
adc
or
fwait
ins
sar
mov
(bad)
pop
dec
ins
fidivr
ins
jl
xchg
ins
and
cdq
jl
jnp
mov
or
cmp
jl
push
retf
imul
mov
(bad)
sub
clc
retf
ds
pop
dec
shr
jmp
inc
ror
dec
pushf
cmp
fidivr
push
stos
cdq
mov
pop
mov
sub
cmc
mov
fimul
or
pop
fimul
or
pop
pop
imul
movs
movs
or
sbb
es
cmp
jl
enter
sub
jo
xchg
inc
mov
sbb
cmp
mov
fcomi
aad
sub
(bad)
lea
xlat
mov
shl
mov
ficom
leave
dec
pop
push
mov
shl
mov
pop
add
dec
xchg
sub
mov
sti
dec
pop
xchg
mov
repz
cmc
mov
pop
push
pop
sbb
sub
or
inc
aam
mov
mov
sbb
jecxz
cli
pop
stos
cmp
push
adc
push
lods
sub
push
aam
pop
mov
aaa
ds
push
mov
sub
fild
enter
ins
pop
in
sbb
lods
sbb
pushf
xor
or
call
pop
cli
sbb
fidivr
cmp
mov
ins
daa
mov
sbb
stos
push
mov
fwait
call
pop
cli
js
mov
xchg
cmps
int3
pop
sbb
or
fcmovb
leave
sbb
jnp
js
retf
fidivr
dec
int3
cmp
mov
loope
dec
jnp
(bad)
enter
mov
and
cwde
jecxz
retf
pop
fwait
jg
retf
aam
test
hlt
clc
push
jmp
mov
stos
call
test
test
mov
mov
push
es
mov
aam
mov
cs
jne
xlat
push
div
cmp
adc
mov
les
sbb
sub
cmp
dec
fstp
mov
mov
fwait
mov
dec
or
mov
mov
stos
mov
in
jmp
ret
out
stos
lock
and
out
sub
pop
add
lahf
xchg
sbb
and
cld
mov
and
out
lock
popa
dec
inc
jmp
mov
sub
mov
or
mov
aam
sub
in
addr16
pop
adc
mov
sahf
out
lock
mov
stos
lock
rcr
or
lock
mov
inc
nop
in
mov
repz
mov
inc
sbb
nop
ja
loop
nop
lock
das
jno
fwait
pop
push
xor
mov
fmul
cld
and
mov
cmp
dec
fstp
test
cmp
mov
add
int
and
cmp
in
adc
dec
push
(bad)
jp
xor
pop
dec
(bad)
loope
(bad)
jns
mov
nop
mov
lock
stos
lock
shl
mov
dec
lods
clc
jp
xlat
mov
push
imul
rcr
sbb
rol
dec
and
fstp
mov
mov
lock
push
push
in
in
movs
push
inc
xor
sbb
ins
(bad)
jg
and
jmp
movs
pop
dec
das
ss
sbb
xchg
sbb
pop
rcr
fdivr
push
nop
cwde
in
cld
xchg
in
mov
push
adc
in
inc
sbb
mov
xchg
mov
mov
cmp
sbb
mov
jb
push
bound
sbb
dec
jns
lds
mov
cmp
mov
int
push
in
ret
out
mov
lock
dec
jb
sbb
mov
stos
mov
jbe
data16
mov
ficomp
adc
lods
stc
jecxz
clc
mov
mov
imul
push
mov
push
lock
movs
lock
pop
bound
sbb
mov
xchg
scas
lds
loop
mov
mov
fiadd
sbb
leave
fdivr
push
adc
fsqrt
xlat
xchg
lods
pushf
xchg
xor
xor
js
xor
push
xchg
imul
fwait
aad
push
sbb
enter
loopne
stc
pop
mov
sbb
adc
fwait
add
enter
cld
stc
mov
push
stos
xchg
sbb
imul
mov
sbb
mov
dec
(bad)
mov
pop
inc
xchg
sbb
mov
ja
addr16
pause
int
aas
lahf
cmp
fidiv
int
jnp
adc
cmp
push
mov
xchg
mov
sbb
fwait
lahf
fs
jb
push
nop
dec
mov
cmp
mov
mov
push
call
push
sbb
rcl
mov
push
mov
nop
push
lock
push
bound
in
call
and
call
xchg
jg
push
mov
repz
sbb
(bad)
lods
imul
(bad)
push
mov
nop
xchg
repz
imul
mov
fcmovne
nop
adc
jmp
push
or
mov
xor
mov
fstp
mov
fist
pop
or
mov
into
test
mov
jecxz
mov
sbb
jge
dec
sbb
push
push
cld
adc
jmp
cmp
nop
dec
mov
xor
inc
push
push
dec
jp
scas
paddusb
pop
xchg
xchg
push
jns
(bad)
xor
dec
shl
shr
xchg
das
rcr
fadd
dec
sbb
dec
out
push
mov
mov
nop
dec
imul
call
mov
inc
(bad)
arpl
pop
pushf
xor
xchg
xor
inc
not
dec
call
xchg
cmp
icebp
fld
mov
add
pop
sub
sbb
(bad)
sub
pop
and
fidiv
mov
ds
pushf
test
dec
mov
or
fmul
sbb
sbb
mov
nop
xchg
gs
mov
xchg
and
pop
ss
pop
dec
pop
add
test
movs
mov
cmp
xchg
les
dec
ret
shl
fstp
lea
aad
xchg
popf
clc
sbb
dec
loop
mov
push
or
dec
mov
ror
xor
adc
mov
fwait
sbb
loop
mov
sbb
sbb
sbb
movs
mov
sar
ficomp
fwait
mov
sbb
xchg
xchg
pop
inc
mov
push
adc
xor
push
int
nop
cmps
xchg
(bad)
adc
nop
mov
mov
push
sub
call
(bad)
mov
push
ins
fist
jnp
adc
mov
sub
push
xchg
add
fwait
lahf
call
mov
shl
push
xchg
pushf
icebp
pop
mov
sbb
out
dec
sub
mov
and
stos
adc
(bad)
pop
sbb
addr16
ret
aam
mov
fld
fwait
rol
icebp
dec
xchg
stos
fisub
and
push
pop
xchg
nop
mov
pop
cwde
pop
pushf
dec
stc
sar
fs
cmps
inc
push
push
xchg
sahf
js
mov
stos
push
not
mov
mov
push
rcl
test
dec
mov
cmps
sub
fsubr
fld
dec
or
cmp
sbb
push
lock
mov
nop
lods
sbb
sub
nop
adc
mov
pop
or
push
idiv
and
es
fcom
mov
mov
and
rcl
sub
inc
pop
stc
or
dec
fmulp
lods
cmps
bound
out
sbb
xchg
fcom
sar
push
mov
pop
fdivr
pop
movs
fisttp
cli
inc
mov
imul
xchg
sub
pop
dec
sub
pop
js
mov
neg
mov
xchg
dec
mov
cmps
cdq
sbb
sbb
ror
adc
sbb
scas
paddusw
dec
jecxz
das
test
jmp
aam
jnp
mov
adc
or
add
add
xor
sbb
dec
shl
xchg
inc
sbb
sub
popa
add
ret
dec
cmp
popa
push
adc
test
and
mov
nop
ret
mov
xchg
rcr
out
jp
jmp
cmovp
rol
push
sub
stos
call
lods
push
jp
xchg
fsubp
and
add
retf
pop
call
call
dec
sub
push
pop
push
in
(bad)
test
shl
int
sub
dec
sahf
pop
pop
loopne
jmp
ja
mov
nop
in
jns
arpl
push
cmc
shl
sbb
xchg
mov
fcomp
push
pop
dec
mov
mov
add
in
pop
jp
xchg
xchg
fidiv
sub
push
pop
cwde
dec
mov
mov
nop
xor
ds
scas
sahf
mov
sub
jo
xchg
fiadd
push
pop
nop
loope
fmul
sub
sar
rol
or
mov
xlat
call
sbb
dec
dec
pusha
xchg
sub
mov
xchg
stc
dec
mov
dec
or
ins
pop
nop
cld
mov
push
out
adc
sbb
cmp
push
call
fdiv
add
fiadd
push
adc
mov
jp
add
nop
sub
dec
pop
out
sbb
cmp
push
lahf
sbb
xchg
adc
dec
sbb
scas
xor
pop
lock
mov
sbb
mov
popf
sbb
retf
inc
pop
mov
xchg
aam
xchg
adc
sbb
pusha
fidiv
iret
enter
aad
fdivp
jecxz
inc
xlat
xchg
sbb
imul
xor
nop
mov
sbb
je
cld
ret
xchg
stos
nop
icebp
push
cmp
push
sahf
adc
daa
out
mov
inc
pop
adc
dec
adc
cdq
push
mov
jmp
(bad)
push
bound
xchg
call
scas
aam
push
sbb
xor
mov
inc
sbb
pop
(bad)
dec
(bad)
out
into
(bad)
push
call
add
scas
test
xchg
sbb
sbb
nop
pushf
lahf
pushf
inc
jae
lea
xor
jmp
sahf
mov
mov
dec
jle
dec
xchg
fcmovb
xchg
push
popa
push
inc
cmp
mov
sbb
xchg
mov
mov
push
lock
push
xchg
xor
imul
add
pusha
ficom
add
lock
lahf
and
inc
mov
sub
sahf
in
mov
sahf
xor
loop
xor
inc
fwait
xor
and
add
mov
inc
fldcw
pop
jo
mov
push
xor
push
sub
outs
mov
xchg
mov
sbb
and
mov
and
sbb
push
fwait
inc
add
dec
ficom
je
mov
mov
jge
mov
pop
mov
pop
dec
nop
in
cwde
shl
dec
lods
imul
pop
push
push
adc
or
mov
fbstp
xchg
(bad)
in
cmps
add
inc
push
cmp
rcl
mov
or
nop
xchg
sahf
lahf
inc
push
mov
sbb
xchg
push
repnz
fild
sbb
pop
dec
adc
inc
inc
xchg
std
mov
pushf
into
test
jp
dec
sub
sbb
sub
test
sbb
mov
icebp
iret
adc
rcl
sbb
xor
bound
fstp
cmps
sar
test
int3
xchg
sbb
cmp
rcl
jno
mov
lods
and
pop
cs
fistp
nop
cmp
push
and
call
pop
rol
lods
pop
aam
int3
mov
sbb
pop
retf
call
pop
jmp
ficomp
fcmovnbe
push
lods
retf
aam
int3
sbb
cmp
cld
dec
int3
shl
test
pop
pop
mov
pop
dec
sbb
pop
in
push
mov
xchg
pop
sbb
mov
push
fiadd
stos
fistp
adc
xor
rcl
pop
(bad)
mov
push
(bad)
leave
xchg
scas
es
rcl
cmc
mov
sub
arpl
pop
push
push
mov
aad
push
pop
xchg
xor
mov
loope
sbb
pop
push
or
push
push
call
xchg
div
fwait
arpl
cmp
mov
mov
js
sbb
sar
sub
push
pop
mov
test
jmp
xchg
sub
dec
sub
fcmove
ja
repnz
lods
pop
adc
push
scas
fst
scas
stos
pop
cmp
lahf
fsubr
pop
pop
arpl
inc
inc
pop
xchg
pop
cmp
inc
out
sub
cmp
push
rcl
rol
mov
push
xchg
pop
lds
inc
mov
and
push
inc
push
mov
fimul
aad
aaa
push
xchg
push
ss
neg
repz
adc
adc
stc
dec
sbb
xchg
sahf
(bad)
pop
dec
xchg
xchg
sahf
mov
xchg
push
pop
mov
xor
sbb
enter
pop
fcomp
sub
add
pop
xchg
mov
cmp
inc
pop
mov
iret
xchg
dec
mov
int
mov
xchg
aam
cdq
mov
push
js
sub
mov
rcl
pop
push
lds
xchg
push
sar
jge
mov
xchg
mul
mov
mov
cmp
cmc
pop
test
pop
xchg
(bad)
jp
inc
lea
and
inc
aad
out
sub
xchg
mov
scas
(bad)
pop
pushf
es
lds
fidiv
sub
and
cwde
xchg
aam
jmp
repz
cmp
adc
out
sbb
cmps
or
push
xchg
xchg
pop
daa
aad
ss
pop
mov
pop
cmp
cmps
inc
shr
jmp
out
or
ror
and
ja
mov
xlat
adc
arpl
ds
fwait
push
shr
daa
dec
xor
daa
sbb
push
pop
cli
fisub
div
ror
add
mov
cmp
cmp
cs
xchg
xor
mov
iret
push
add
addr16
inc
mov
fcmovnb
scas
cmp
dec
stos
pop
ret
rol
fidivr
inc
sbb
sbb
mov
ja
xchg
inc
mov
sub
out
pop
and
pop
enter
stos
pushf
inc
jge
pop
dec
cmp
cli
xlat
sbb
sahf
sbb
inc
pushf
loope
mov
pop
jbe
ret
fwait
mov
push
popf
xlat
xchg
aam
xchg
js
mov
xchg
pop
aam
pop
sbb
adc
jmp
aas
dec
daa
push
mov
push
sub
sar
ss
fbstp
pop
jns
mov
push
(bad)
aam
add
adc
pop
push
inc
lock
sahf
dec
ficomp
sbb
xchg
fdiv
push
pop
mov
div
cdq
xor
xchg
mov
popf
pop
fxch
sbb
lds
out
adc
mov
dec
pop
add
shl
rcr
sub
pop
shl
sub
cmp
inc
xchg
inc
mov
rol
xor
cdq
xchg
adc
or
sar
mov
ret
xchg
inc
in
pop
xchg
(bad)
cmp
dec
dec
xchg
xchg
(bad)
cli
xchg
in
mov
mov
adc
in
xchg
mov
adc
inc
push
sbb
sbb
xchg
fistp
adc
pop
push
mov
test
(bad)
fmul
retf
pop
push
out
retf
mov
hlt
sbb
lahf
adc
or
cdq
sbb
call
push
lds
dec
pop
arpl
pop
sti
push
xchg
cmp
adc
xchg
xchg
push
push
xor
push
mov
jne
adc
cmp
push
xchg
aad
jp
mov
jb
cmp
in
mov
lahf
xor
xchg
xchg
add
mov
mov
pop
adc
xchg
adc
mov
jbe
adc
adc
imul
dec
mov
xchg
mov
pop
mov
daa
mov
mov
cli
out
xlat
scas
cmp
dec
add
cmp
mov
push
and
mov
and
aam
call
jae
cmp
xor
or
dec
addr16
mov
xchg
ret
jle
ins
dec
mov
rcl
iret
push
lahf
dec
shr
jmp
rcr
mov
dec
pop
dec
pop
pushf
xchg
fist
xchg
sub
inc
dec
mov
cwde
pop
fldenv
dec
in
mov
inc
mov
sub
jge
sahf
and
jnp
mov
or
pop
ficom
add
(bad)
adc
inc
push
pop
mov
add
xchg
adc
or
fcmove
leave
(bad)
stc
inc
sub
(bad)
inc
mov
iret
and
dec
add
push
les
sbb
jae
dec
push
xor
shr
xor
push
pop
push
adc
mov
lahf
clc
cdq
je
adc
dec
fisttp
arpl
jp
mov
(bad)
cmp
adc
mov
inc
pop
in
sbb
jae
push
xchg
and
nop
adc
mov
and
mul
pushf
cwde
pop
sub
outs
mov
out
rol
push
cwde
xchg
loopne
fist
es
adc
xchg
es
lahf
sahf
lods
dec
jmp
mov
xchg
xor
cmp
not
stos
mov
(bad)
dec
push
mov
pop
iret
pop
cmp
retf
mov
sbb
sub
and
cmps
inc
sbb
pop
mov
lahf
(bad)
pop
push
dec
ja
ficom
mov
adc
pop
rcr
sub
outs
pop
out
popf
stc
gs
mov
and
pop
cmps
mov
inc
mov
addr16
pop
mov
jnp
rcr
dec
or
adc
sbb
mov
mov
pop
cmp
aaa
push
imul
inc
iret
fcom
xchg
adc
call
pop
mov
inc
xchg
nop
retf
out
or
cli
adc
shl
imul
enter
mov
jne
(bad)
pop
jg
xlat
dec
mov
push
xchg
mov
daa
(bad)
jmp
cmp
fstp
fdivr
sar
inc
test
out
aam
pop
mov
dec
xlat
xchg
loop
push
call
shl
popa
fidivr
jmp
rol
adc
mov
fst
pushf
xchg
adc
arpl
push
dec
gs
mov
push
push
jge
dec
ror
shr
repz
test
push
stos
dec
push
push
mov
pop
(bad)
and
adc
push
dec
inc
ficomp
sbb
and
xchg
jae
addr16
sbb
rcl
adc
aad
pop
leave
push
pusha
sbb
sbb
pop
xchg
sub
cmp
pop
mov
repz
dec
pop
sub
(bad)
push
call
repnz
mov
sbb
add
push
fnstcw
out
shl
cmc
xchg
add
fsub
xlat
movs
pop
xchg
test
inc
cld
sbb
dec
dec
aam
inc
sahf
out
sahf
cld
out
int
sbb
inc
pop
arpl
add
push
cmp
xchg
add
mov
jmp
pushf
out
xchg
mov
test
retf
pop
xchg
lock
pop
pop
ret
lds
ret
sbb
mov
(bad)
sbb
pop
add
repz
fucomi
mov
xchg
mov
bound
adc
inc
cld
repz
ret
push
loop
sar
retf
xchg
mov
mov
mov
or
add
push
sbb
out
mov
inc
xor
mov
pop
jae
add
dec
xchg
or
int
jae
lods
repz
sbb
fild
fbstp
ret
fisttp
xchg
jo
inc
xchg
bound
xor
out
aad
inc
xchg
shr
dec
xchg
cmp
xchg
out
aas
xchg
mov
mov
push
xor
nop
adc
ficomp
inc
aam
daa
cwde
and
pop
mov
pop
mov
fidivr
sbb
dec
ins
dec
lods
push
xchg
cdq
int3
pop
lods
and
fldcw
push
aaa
xchg
inc
addr16
fsubr
push
fcomp
dec
inc
inc
xchg
mov
(bad)
ds
xlat
adc
sahf
sub
ret
(bad)
xor
retf
(bad)
cmp
sub
jae
sub
xchg
fist
frstor
inc
fist
pop
mov
adc
sbb
in
xlat
or
imul
push
or
nop
inc
dec
pop
push
aad
cmp
cwde
cmp
xlat
push
sbb
pop
iret
mov
xor
pop
test
sub
mov
or
fisubr
push
sub
mov
cmp
retf
aam
cmp
adc
cmp
mov
sbb
jae
cmp
mov
cwde
mov
shr
into
jmp
mov
leave
aaa
xchg
inc
push
mov
sahf
cmp
sub
push
adc
out
adc
retf
arpl
inc
aam
dec
pushf
mov
fcom
adc
sub
pop
jge
rol
inc
(bad)
push
or
jo
push
aam
inc
test
rcl
or
loop
push
jge
push
jae
rcr
jae
fist
ds
adc
mov
stos
add
cld
shl
sub
jp
inc
loop
(bad)
lock
mov
pop
xor
dec
popf
pop
inc
mov
out
fwait
xchg
xchg
shl
inc
mov
cmp
cwde
fcomp
xlat
xor
cwde
cmp
les
std
pop
pop
add
cwde
scas
xchg
xor
xlat
nop
(bad)
jmp
jo
pop
fdivp
sbb
xchg
arpl
xlat
dec
mov
inc
loopne
sbb
mov
cdq
sub
ins
jbe
inc
inc
dec
mov
xor
pop
xchg
xchg
mov
jle
jp
push
add
and
fld
outs
dec
push
jge
fidivr
popf
mov
xlat
fucomp
mov
sbb
adc
sbb
mov
push
leave
pop
jp
push
test
stos
fld
hlt
mov
stos
pop
add
enter
mov
call
inc
jbe
sti
cld
int3
push
or
gs
sbb
lods
popf
or
movs
xchg
dec
xchg
cwde
fwait
or
lahf
int3
mov
xchg
lods
sbb
adc
int3
push
xchg
xchg
hlt
int3
sti
int
call
fisub
cmp
aam
cmp
jbe
imul
cmp
sti
(bad)
push
movs
xchg
mov
mov
sbb
xlat
push
ja
mov
test
retf
push
push
inc
jnp
enter
mov
call
push
aaa
test
leave
sub
xchg
cmp
mov
retf
sbb
adc
inc
sbb
xchg
xor
in
mov
sbb
cmc
ss
xchg
push
inc
jne
dec
retf
dec
in
clc
pop
push
adc
pop
jl
int3
retf
repnz
daa
aam
dec
cmp
ret
dec
mov
fsubrp
pushf
sti
lods
adc
jns
pop
test
xlat
xor
fcom
pop
fstp
cdq
stos
lock
call
movs
xchg
jns
fld
mov
jmp
xchg
or
pop
and
fistp
push
fstp
pop
and
jge
adc
mov
jns
sub
bnd
(bad)
cmps
push
pop
dec
push
fmul
jne
leave
dec
mov
cmc
xor
data16
push
jg
cld
mov
jmp
mov
sbb
imul
fwait
ins
es
fmul
mov
ficomp
jne
out
mov
sbb
xchg
test
xor
and
cmps
mov
movs
xor
into
fidiv
jne
cs
cmps
mov
adc
(bad)
fisttp
icebp
xlat
sub
retf
or
int
stc
push
jne
popf
leave
in
js
sbb
mov
call
dec
push
or
mov
xchg
xor
or
mov
xor
lds
imul
mov
imul
ins
sti
and
cmp
fsub
mov
sub
sbb
mov
hlt
ins
inc
or
cwde
jecxz
call
test
jne
fidivr
imul
adc
mov
test
(bad)
sbb
adc
shl
(bad)
addr16
rol
imul
dec
js
loop
dec
cmc
data16
mov
dec
xchg
test
repnz
pop
mov
cmp
enter
xchg
lds
imul
xor
xchg
aad
pop
aas
sbb
sub
pop
xchg
pop
in
mov
stos
xlat
push
stc
cmps
fcomi
push
jp
pop
cmp
pop
cwde
inc
jecxz
mov
jnp
push
rcr
fisttp
xchg
clc
mov
mov
pop
pop
jg
push
inc
dec
pop
mov
imul
ficom
xchg
outs
shr
xor
jnp
and
pop
cdq
ins
std
push
cmp
mov
imul
sbb
sar
push
fwait
movs
fwait
imul
fsub
mov
jne
push
pop
test
push
adc
or
adc
movs
dec
imul
push
cwde
push
fcmovne
jle
movs
xor
fist
imul
cdq
push
sbb
xchg
fwait
test
inc
imul
cmps
cwde
sti
dec
std
fist
jecxz
mov
xchg
mov
shr
pop
pop
sbb
je
jmp
cmps
in
sar
fucomip
ror
fsubr
aam
inc
ficomp
cs
fwait
js
xchg
xchg
fnstcw
jo
(bad)
ins
fxch
dec
test
or
inc
outs
mov
or
inc
leave
mov
fisttp
pop
jnp
cmp
or
mov
mov
mov
jmp
nop
test
mov
cmps
add
cmp
stc
sti
arpl
retf
pop
test
jns
push
movs
pop
dec
push
retf
xchg
mov
dec
push
icebp
sbb
addr16
xlat
leave
retf
aaa
push
aaa
dec
adc
mov
imul
clc
mov
addr16
mov
jnp
rol
int3
pop
mov
jns
test
les
les
mov
dec
(bad)
imul
pop
mov
stos
stos
dec
(bad)
cmp
xchg
into
pop
xchg
ins
push
fwait
leave
(bad)
cmps
mov
ins
cmp
movs
jne
jl
push
xchg
xchg
in
push
cmps
mov
fidivr
(bad)
movs
xchg
ret
stos
pop
mov
cmps
xchg
mov
fstp
dec
push
stos
call
mov
call
push
cmp
xor
(bad)
fwait
cdq
jbe
ret
adc
mov
stos
sar
dec
sub
cmp
fwait
jae
dec
sub
shr
fmul
(bad)
je
sub
jb
dec
test
fldcw
dec
stos
or
sbb
mov
fmul
popa
mov
lods
sub
push
(bad)
push
xlat
mov
xor
xchg
sub
fwait
out
xor
in
shl
ja
mov
xor
retf
rol
sar
shr
push
(bad)
fld
or
leave
pop
rep
jle
cmps
xchg
retf
cwde
sar
mov
(bad)
cdq
popf
cmp
jmp
inc
pop
fldcw
xchg
test
out
retf
dec
mov
retf
stos
bound
cmps
rcr
sahf
inc
jge
dec
cwde
ror
rcr
mov
or
jl
out
pop
imul
call
fisubr
xlat
dec
(bad)
dec
mov
and
mov
jae
mov
loop
imul
ficomp
(bad)
push
xchg
push
shr
shr
std
fld
retf
sbb
xchg
dec
mov
ret
xchg
sbb
stos
rcl
cmp
sar
mov
xlat
test
retf
mov
fcmovnu
sbb
test
push
jl
push
retf
sbb
fs
ins
bound
pop
dec
call
dec
retf
call
jp
mov
cmp
push
retf
sbb
fs
sub
pop
mov
sti
stos
sbb
rcl
fs
or
pop
dec
sub
add
sti
add
aas
xchg
lahf
push
jmp
mov
inc
lahf
stc
sti
stos
(bad)
xchg
call
retf
cmp
sbb
stos
out
call
inc
jge
call
clc
iret
call
loop
call
out
mov
mov
push
stos
inc
mov
ror
or
test
ins
dec
mov
mov
(bad)
pop
(bad)
dec
xchg
call
(bad)
pop
fsubr
stos
mov
cli
js
loop
sub
or
mov
cmp
push
pop
inc
jge
(bad)
je
sbb
fs
dec
bound
sar
fld
sub
cdq
xchg
pop
pop
stc
push
sti
dec
(bad)
sbb
int
sbb
retf
test
cmp
jb
js
push
mov
pop
sbb
repz
cmp
add
mov
aam
push
sub
loopne
fcmovnbe
fwait
push
cmp
xchg
or
mov
dec
inc
jmp
in
mov
xchg
pop
inc
jmp
in
mov
je
inc
jmp
in
mov
push
jnp
jmp
in
mov
xor
inc
jmp
fldenv
fbstp
jmp
in
mov
rep
call
jg
fstp
inc
(bad)
pop
cmp
gs
pop
sahf
dec
sbb
pop
stos
fcmovnbe
cmp
push
mov
repnz
pop
sub
sbb
aam
ror
int3
jmp
call
mov
or
pop
lods
je
sbb
clc
sahf
test
cld
dec
sub
stos
call
push
sbb
repz
repnz
call
enter
std
fistp
je
sub
mov
mov
sub
test
pop
outs
push
mov
sub
cwde
ror
push
dec
pop
fs
ror
inc
xor
jnp
nop
ja
sti
imul
lock
fucomp
bswap
xchg
push
mov
mov
test
xchg
sub
int3
xchg
dec
pop
cdq
fs
retf
pop
lahf
or
pop
outs
sbb
fs
xchg
stos
fcmovnbe
jl
cld
movs
xchg
or
test
loop
in
rcl
fisttp
dec
sub
rcl
test
out
retf
inc
stos
dec
sti
retf
rcl
test
out
retf
stos
ja
ins
sbb
jb
js
jge
sub
sahf
retf
mov
lea
test
out
retf
pop
stos
popf
lds
adc
shr
or
mov
jl
jnp
xlat
mov
cli
dec
pop
ror
retf
fisttp
mov
rcr
mov
aad
pop
push
in
movs
sahf
or
sar
mov
fldcw
push
push
lds
(bad)
sahf
push
pop
mov
mov
jmp
movs
adc
jge
(bad)
jecxz
ds
retf
or
dec
nop
pop
or
rcr
dec
cli
dec
pop
aad
imul
cmp
adc
sahf
jle
sub
sub
push
pop
mov
adc
sub
sahf
call
xor
add
mov
mov
mov
loop
jmp
call
mov
into
sub
jns
jns
(bad)
pop
dec
out
sbb
sub
imul
sbb
pop
jnp
cmpxchg
imul
pop
sub
xchg
cdq
mov
aaa
and
clc
(bad)
(bad)
aas
mov
cdq
pop
mov
cli
fidivr
aas
add
xchg
push
cmps
les
stos
pushf
out
rcr
fcmovnb
mov
inc
jge
pop
ins
jecxz
pop
retf
jl
jge
stos
pop
pop
mov
mov
mov
xlat
cmp
mov
stos
pop
out
rcl
fstp
dec
inc
jge
stos
fimul
mov
cmp
clc
mov
push
sti
inc
mov
sub
(bad)
mov
jmp
cwde
test
fs
jo
ret
retf
jns
test
je
pop
stos
or
rol
sar
dec
stos
sti
out
rcr
jmp
bound
cmc
scas
mov
dec
push
fld
jnp
adc
push
dec
inc
dec
and
sbb
(bad)
fs
xor
mov
cli
dec
sub
test
push
inc
(bad)
adc
push
(bad)
adc
nop
pusha
pop
or
lock
mov
sbb
fst
cmp
sub
shl
fstp
fwait
or
sahf
sbb
ins
sti
retf
pop
or
fcmovnb
mov
xchg
ins
sti
retf
jl
mov
fneni(8087
mov
or
mov
jmp
test
ror
nop
add
cli
dec
sub
shl
jmp
test
ffreep
nop
and
fs
xor
push
sub
pushf
push
imul
jmp
lds
pop
ret
dec
mov
sub
popa
mov
cmp
xchg
add
sbb
stos
xlat
mov
cli
add
out
cdq
xchg
pop
pop
stos
sbb
mov
pop
jns
js
or
push
mov
sbb
test
stos
mov
xchg
jb
sbb
push
loope
js
rol
sbb
xor
test
loope
loope
cmp
mov
loope
icebp
adc
adc
add
inc
xchg
xlat
icebp
rcr
mov
mov
retf
jns
mov
retf
daa
retf
imul
call
or
retf
pop
retf
dec
or
retf
push
test
inc
xchg
rcr
bound
cwde
out
push
sub
sbb
cmp
or
jbe
cwde
outs
push
sti
loope
adc
loope
aad
or
mov
pop
mov
pop
cmp
sar
mov
sbb
push
cmp
sub
xlat
pop
jnp
ret
push
cmps
sbb
pop
pop
sar
xchg
int3
jp
push
xchg
pop
imul
push
xchg
in
call
sahf
push
(bad)
xchg
or
push
or
mov
test
in
inc
(bad)
cmc
xchg
mov
adc
imul
hlt
mov
addr16
data16
cmp
pop
and
retf
inc
daa
jmp
push
dec
pop
xchg
xor
cdq
cmp
mov
aam
test
mov
out
jnp
stc
mul
pop
clc
fwait
cmp
push
out
xchg
pop
and
add
and
push
xchg
push
push
sbb
sub
aam
shr
adc
mov
inc
mov
jmp
sub
sti
cmp
jmp
mov
xchg
jl
xchg
movs
xor
or
add
inc
addr16
jmp
add
pop
xchg
push
pop
xchg
mov
stos
out
sahf
jnp
push
test
sub
and
add
sti
aam
mov
mov
(bad)
fld
mov
arpl
fcmovu
push
adc
sahf
or
pop
aad
cmp
mov
push
sbb
pop
pop
bound
xchg
xchg
mov
dec
ds
cmps
fwait
outs
inc
jmp
mov
retf
mov
stc
sbb
(bad)
xchg
xchg
sbb
sbb
jb
enter
sbb
div
ret
mov
ss
xchg
rcl
xchg
je
call
(bad)
mov
cwde
stc
mov
xchg
test
fwait
mov
inc
aam
call
push
push
rcr
jp
int3
mov
mov
int3
push
aad
dec
xchg
ret
dec
mov
mov
repz
test
retf
fnstenv
xor
inc
test
push
fs
rcr
int3
retf
ja
jg
push
jne
test
or
mov
(bad)
push
sbb
mov
pop
mov
xchg
lahf
pop
adc
mov
(bad)
push
xor
pop
gs
adc
pop
cli
fucomip
fimul
xchg
xor
push
push
cwde
mov
push
pop
loope
retf
stc
mov
cdq
sub
leave
mov
inc
mov
xor
mov
std
fwait
fs
push
xor
mov
(bad)
fs
jge
adc
stc
xchg
push
gs
adc
fidivr
or
sbb
(bad)
push
sbb
xchg
movs
retf
adc
mov
arpl
in
inc
call
int3
test
push
aaa
movs
or
inc
pop
jbe
not
mov
ja
mov
enter
cld
dec
int
xchg
mov
ins
and
jae
sub
mov
fcmovne
sahf
sub
mov
mov
movs
jl
in
inc
cmp
jae
lock
(bad)
cmp
bound
push
dec
pusha
push
hlt
sbb
push
out
pop
inc
pop
push
leave
rol
pop
inc
stc
xchg
cwde
sub
jae
dec
rcl
cmp
xor
mov
push
jnp
or
jbe
sub
pop
sub
in
and
int3
and
jbe
sub
add
xor
sub
aad
mov
sub
cmp
xchg
adc
mov
test
mov
xlat
or
repz
pop
mov
dec
out
jnp
sub
push
pop
xchg
je
xchg
sub
mov
mov
fsubr
cmc
fisub
cld
xchg
aad
sbb
cmp
fnstcw
jne
inc
xlat
push
mov
inc
cmp
pop
jl
push
arpl
push
mov
addr16
inc
retf
leave
repz
imul
mov
mov
push
retf
mov
adc
xor
push
lds
push
call
js
loop
dec
adc
inc
in
dec
aaa
leave
add
js
retf
rcr
push
outs
cmc
inc
jmp
repz
xchg
add
cmp
out
fadd
sbb
repnz
sub
push
stos
push
rcl
in
clc
mov
ret
ret
inc
cmp
and
mov
mov
mov
xor
xchg
mov
dec
pop
mov
repz
test
push
adc
sub
dec
cmps
jbe
retf
cdq
bound
sbb
cmps
xchg
xchg
ja
push
(bad)
xchg
jb
mov
fnstcw
cmp
retf
inc
add
stos
pop
out
mov
inc
inc
(bad)
adc
js
loop
mov
xchg
(bad)
dec
mov
cdq
sub
out
dec
js
loop
jmp
dec
adc
loopne
add
stos
bound
lds
pop
mov
aaa
mov
or
inc
(bad)
repz
push
and
xor
ret
and
mov
fs
xor
cmp
fidivr
mov
dec
pop
mov
iret
dec
cmp
aaa
ja
aam
aam
test
cmps
in
push
cmp
dec
aas
inc
adc
nop
fisub
xor
adc
or
xchg
sbb
inc
cmp
inc
stos
jle
xchg
fcom
cmp
stos
push
inc
cmps
inc
retf
mov
sar
mov
pop
sub
sbb
cli
mov
xlat
or
jmp
sub
dec
dec
cwde
sti
inc
jge
or
cdq
sub
retf
sbb
jge
mov
lods
push
sbb
sub
add
sub
cmp
jge
pop
mov
cmp
dec
scas
push
call
inc
jge
dec
cdq
or
ins
scas
push
call
jl
jge
xchg
xor
push
mov
mov
dec
mov
add
iret
dec
aaa
mov
inc
jge
pop
test
push
mov
je
lods
and
xchg
cwde
rcr
xchg
jne
fcomp
retf
std
retf
popa
pop
fcmovnu
mov
inc
lahf
mov
dec
xor
fs
(bad)
ficomp
outs
retf
pusha
call
sbb
mov
sbb
movs
add
xor
adc
xor
sub
xchg
mov
outs
jnp
xor
inc
les
push
pop
mov
dec
xlat
sbb
jl
mov
int3
mov
mov
mov
lea
adc
retf
push
cmp
call
cmp
stos
ficom
mov
ss
mov
test
inc
popf
jmp
(bad)
dec
sbb
cmp
retf
mov
cdq
push
stos
xor
cmps
mov
and
(bad)
pop
push
jmp
ror
ja
jno
fistp
push
mov
mov
test
adc
pop
cmps
push
int
push
ficom
dec
mov
inc
fs
jns
sti
int3
lock
jo
cwde
retf
cmp
add
call
xor
adc
pop
sbb
daa
sbb
jbe
push
jbe
fwait
test
mov
jns
dec
pop
test
retf
sbb
pop
pop
fsubr
mov
lods
test
aaa
push
pop
or
retf
call
fcom
sub
mov
mov
jns
leave
dec
lds
xchg
mov
test
push
test
mov
sbb
pop
sub
xchg
sub
hlt
or
sbb
xchg
push
aaa
jo
imul
add
test
cmps
rcr
sub
ins
mov
pop
retf
mov
add
out
inc
retf
sub
xchg
mov
out
shr
jno
add
sub
sub
test
fst
push
sub
in
mov
jp
sub
xchg
and
xor
add
and
push
test
jno
ret
lock
test
mov
add
aas
out
mov
inc
or
xchg
stos
xor
xchg
and
(bad)
in
in
scas
test
aaa
out
xchg
jmp
loopne
stos
pop
push
mov
add
sbb
push
xchg
sub
test
xor
mov
shl
iret
ins
test
xchg
inc
sub
mov
popa
loope
add
pop
mov
stc
(bad)
retf
mov
in
inc
popa
cmp
dec
add
call
push
lahf
mov
inc
xor
add
mov
stos
add
arpl
in
dec
jb
outs
xchg
scas
xor
jno
sar
pop
ins
ins
push
aaa
cmp
xchg
mov
sub
das
pop
loope
or
jns
cli
mov
inc
ss
pop
scas
sub
sbb
dec
into
push
sub
mov
int3
retf
pop
daa
xchg
push
xchg
dec
stos
xchg
stos
lahf
outs
sub
push
xchg
dec
sbb
xchg
aaa
jae
out
in
aaa
adc
call
xchg
and
xchg
inc
xor
add
jne
imul
shr
mov
jne
adc
sub
xlat
daa
inc
ret
push
test
out
cmps
add
hlt
xor
xchg
and
loop
xchg
arpl
mov
add
mov
sub
sub
pop
push
(bad)
(bad)
and
int3
pop
in
hlt
lods
ret
stos
leave
lds
or
sub
scas
add
xor
push
iret
xchg
pop
test
push
xchg
mov
sbb
mov
stos
imul
ffreep
mov
mov
add
rep
fild
push
aaa
dec
pop
lds
inc
xchg
test
mov
mov
add
(bad)
jno
test
fwait
pop
add
ins
(bad)
iret
xor
mov
fld
addr16
xchg
aas
(bad)
sbb
stos
push
dec
xchg
fwait
sbb
cmp
mov
jno
mov
neg
mov
sbb
imul
call
jmp
sbb
mov
fcomp
push
sti
in
scas
es
call
loope
dec
inc
ret
and
push
jne
fiadd
jmp
int3
nop
add
sbb
sbb
or
cmp
mov
push
push
inc
pop
call
dec
xor
mov
repz
mov
icebp
scas
test
pop
leave
or
cmovs
std
inc
mov
xchg
dec
adc
xchg
pop
and
cs
xlat
out
lahf
fild
test
test
and
cmp
sub
es
lods
sti
xchg
scas
clc
xor
lds
mov
loop
mov
aas
arpl
xchg
leave
or
call
sahf
sub
inc
in
push
xor
mov
jns
mov
adc
xchg
jge
inc
xchg
das
sub
cmc
jecxz
loope
add
mov
cli
inc
(bad)
xchg
xor
pop
popa
add
inc
fadd
sbb
jge
inc
pop
xchg
add
sbb
int
xor
scas
push
mov
dec
add
xchg
mov
xchg
fisttp
sbb
inc
and
inc
xchg
jnp
mov
pop
pop
pop
call
shl
leave
cmp
int
aaa
mov
ret
scas
ja
data16
das
(bad)
mov
sahf
xchg
scas
stc
cli
mov
xlat
ret
dec
mov
add
ja
inc
mov
sahf
jae
(bad)
and
xor
xchg
or
(bad)
xor
or
or
test
pop
mov
cwde
xor
pop
push
(bad)
(bad)
adc
mov
cmp
outs
adc
and
adc
int3
adc
aaa
ss
dec
mov
sub
jmp
cmp
aaa
adc
xchg
jmp
leave
cmps
mov
xchg
fs
cmp
adc
aaa
add
push
or
aas
pop
loop
scas
ja
dec
xchg
call
lahf
leave
dec
xchg
call
xchg
leave
dec
jmp
ins
add
xchg
or
or
cdq
leave
or
mov
xchg
das
cdq
or
add
sub
pop
or
mov
or
dec
cmp
pop
cmps
dec
sbb
fst
push
loope
aas
xor
lahf
mov
add
jae
xchg
pop
add
cmp
or
dec
dec
fwait
adc
dec
mov
sbb
mov
mov
arpl
(bad)
pop
ret
vpcomq
mov
dec
clc
mov
xchg
cmp
adc
xchg
pop
aas
ins
cs
out
ret
push
push
in
push
ret
ror
call
(bad)
push
inc
mov
leave
stc
xor
pop
jnp
out
ror
clc
pop
rep
vfrczss
dec
adc
pop
aas
ins
pop
rol
cmp
xchg
ret
fild
pusha
cdq
push
add
dec
pop
rol
dec
sub
jb
jecxz
jb
lahf
fild
jmp
sub
aas
scas
mov
pop
inc
cs
mov
fcmove
adc
add
outs
stc
stc
pop
loope
xchg
or
xor
call
mov
cmp
jg
fwait
dec
push
sbb
ret
adc
fbstp
js
push
or
inc
adc
inc
loop
lds
mov
push
fnstsw
xor
imul
and
ret
mov
jb
and
mov
xchg
daa
sbb
xor
mov
test
sti
arpl
mov
mov
jge
(bad)
jge
jecxz
push
cli
movs
stos
mov
jecxz
ja
mov
add
xor
mov
inc
add
data16
inc
jae
rcr
xchg
jle
sahf
add
add
lea
dec
mov
mov
xchg
mov
cmovo
repz
(bad)
in
or
inc
dec
jmp
pop
sub
outs
mov
div
xor
lds
daa
push
sub
or
mov
loope
inc
imul
xchg
into
pop
and
daa
call
or
fild
cli
mov
retf
and
pop
loope
adc
xchg
retf
pop
mov
xor
jmp
shl
and
xchg
lahf
push
pop
inc
push
or
sbb
sub
retf
sub
xchg
lods
xor
daa
add
xor
dec
add
mov
mov
lock
mov
push
and
pop
test
inc
mov
stos
or
jg
push
dec
mov
ss
mov
or
test
dec
xor
or
jne
dec
iret
or
inc
xor
icebp
mov
push
ret
movs
mov
into
hlt
and
movs
mov
das
and
test
mov
ror
jecxz
sub
mov
sub
push
sub
aaa
cdq
(bad)
dec
xchg
mov
mov
loope
jae
and
adc
xor
sub
loope
pop
(bad)
in
inc
jp
jge
add
sub
push
or
xchg
lahf
or
inc
sub
xor
fldenv
dec
aas
cmp
jle
(bad)
xchg
dec
cmp
shr
sub
ja
mov
mov
jp
xchg
cmc
arpl
mov
stos
sub
leave
mov
cmp
inc
xchg
push
mov
inc
jnp
gs
jg
xlat
aaa
mov
xchg
retf
inc
jbe
and
inc
dec
arpl
stos
sub
xchg
mov
fwait
icebp
stc
lods
js
push
shr
inc
fwait
movs
jmp
xor
and
leave
inc
inc
mov
jb
inc
mov
jmp
dec
mov
daa
pop
jmp
push
xchg
and
mov
ja
popf
repz
stc
xchg
js
jae
add
jg
dec
sbb
sub
rol
dec
or
jno
scas
sub
jge
add
xchg
repnz
inc
lods
add
neg
aas
and
push
sub
inc
jp
xor
les
ja
scas
sub
sar
inc
inc
arpl
xchg
shl
jge
outs
imul
xor
pop
sar
pushw
ss
cmp
cdq
add
scas
ss
mov
or
in
inc
aaa
in
or
mov
movs
es
adc
xor
imul
retf
xchg
mov
push
jno
inc
push
push
sub
dec
sti
lods
pop
jb
inc
cmp
xchg
xor
test
das
adc
inc
jmp
scas
push
xchg
aaa
xchg
cmp
and
int3
or
movs
mov
cli
xor
cmp
xchg
iret
jno
xor
outs
adc
rcl
mov
(bad)
jecxz
mov
mov
pop
dec
xor
sub
or
xor
mov
pop
mov
out
mov
cld
inc
ins
movs
push
(bad)
js
mov
(bad)
int3
pop
add
adc
clc
cmp
push
or
(bad)
int3
xor
jns
iret
out
das
test
or
sbb
dec
push
(bad)
or
xor
xor
pop
push
and
fnstcw
mov
cmps
mov
ins
mov
mov
sub
sbb
push
daa
mov
mov
push
mov
dec
sub
hlt
mov
cli
stos
jl
and
iret
in
jno
iret
sub
popf
jp
or
es
or
inc
add
xchg
(bad)
mov
mov
imul
mov
call
inc
imul
push
mov
or
leave
jmp
or
rol
ret
mov
test
repz
xchg
add
shr
mov
jmp
inc
xchg
push
mov
and
cdq
loope
arpl
repz
out
(bad)
pop
jmp
(bad)
mov
sub
mov
into
jb
push
pop
ret
xchg
mov
sub
rep
iret
push
jae
es
adc
cli
mov
fwait
jne
ins
xchg
cmp
in
mov
nop
add
push
stos
or
fs
mov
icebp
cmp
mov
xchg
cmps
fs
cmc
loope
imul
movs
js
add
mov
xchg
inc
daa
dec
mov
(bad)
(bad)
jb
mov
stos
jg
(bad)
and
jns
mov
push
inc
and
aas
in
dec
cdq
or
jno
xchg
mov
sub
gs
dec
jne
push
mov
pusha
lds
push
dec
cbw
cmp
jmp
dec
xchg
sub
arpl
mov
push
gs
mov
lds
xor
xor
lea
add
sub
mov
sbb
mov
mov
and
dec
cdq
sbb
ja
test
push
xor
mov
mov
repz
xor
xchg
xchg
int3
pop
xor
jmp
mov
ror
test
add
loopne
xchg
jle
and
cmp
dec
mov
mov
push
loope
retf
xlat
mov
cmp
mov
out
ss
cmp
call
clc
sbb
inc
out
hlt
fs
ja
xor
aam
adc
jge
mov
xchg
pop
ins
shl
es
ja
add
pusha
dec
mov
aaa
jecxz
repnz
ss
pop
pop
mov
mov
scas
es
pop
retf
cmps
cmp
repz
scas
or
pop
sahf
mov
add
push
pop
lods
ins
inc
mov
idiv
mov
push
or
(bad)
mov
movs
pop
sub
push
push
dec
dec
mov
xchg
cdq
dec
jmp
sbb
iret
mov
inc
xchg
das
test
pop
ret
inc
test
and
or
sub
mov
jmp
daa
mov
dec
xchg
ret
sub
stos
das
push
ins
in
push
or
mov
xchg
pusha
dec
jbe
in
lds
cmp
call
push
mov
jae
xor
jae
and
lds
xlat
push
ins
hlt
das
stos
jp
loope
sbb
and
sub
in
arpl
sbb
mov
sbb
mov
mov
stc
loope
xchg
fucomip
inc
sub
test
mov
adc
addr16
movs
scas
or
test
inc
sti
xchg
xchg
inc
sbb
and
adc
scas
sub
call
jnp
mov
xchg
xor
call
and
xrelease
test
xor
iret
sub
cmp
mov
mov
inc
sti
ret
and
lahf
add
adc
pop
xor
cmp
sbb
les
(bad)
out
cld
popf
das
icebp
scas
stc
jae
(bad)
jno
inc
inc
aas
sub
jnp
fild
xor
xchg
mov
push
int3
dec
lock
mov
(bad)
push
mov
mov
push
mov
jle
xchg
les
loope
jb
and
or
jg
hlt
add
jg
lods
and
or
or
fwait
shl
bound
xor
adc
dec
(bad)
fild
add
pushf
iret
imul
dec
add
sahf
repz
stc
xchg
mov
xor
idiv
and
mov
movs
cmp
clc
jge
(bad)
in
dec
mov
xchg
xchg
xchg
push
and
mov
retf
xor
stos
dec
add
int
xor
or
call
or
xor
xchg
pop
mov
inc
mov
shr
ins
aaa
sub
or
mov
jo
inc
and
cmp
sub
push
and
stos
cmps
in
push
movs
stc
jb
inc
stc
pop
xchg
add
cmp
mov
aad
push
lods
inc
xor
and
sub
stc
xchg
scas
(bad)
mov
sub
ja
cmp
push
jge
cmp
mov
aaa
ret
les
jmp
ja
add
jmp
inc
ins
mov
inc
add
jmp
sbb
mov
out
int3
xor
dec
sbb
daa
mov
enter
dec
jns
sbb
inc
pop
mov
push
xchg
mov
mov
lods
cdq
imul
adc
inc
add
test
jecxz
mov
add
and
xchg
ret
xor
mov
cmp
arpl
push
cli
pop
xchg
xor
mov
or
movs
jmp
xor
sbb
sub
pop
mov
jmp
icebp
push
mov
test
cmp
pop
test
mov
sub
cmps
jmp
loop
jp
leave
jmp
pop
sbb
xor
or
adc
xchg
in
jle
loope
push
mov
add
loope
leave
fs
push
call
mov
movs
inc
jns
jb
arpl
xchg
xchg
inc
movs
or
call
fs
in
inc
mov
mov
sahf
and
mov
les
xchg
test
(bad)
icebp
stos
xchg
and
test
mov
jbe
movs
fild
jae
xchg
mov
jno
daa
xor
jnp
aas
mov
imul
out
or
add
icebp
ret
(bad)
lea
outs
inc
inc
inc
mov
push
popf
aas
icebp
pop
leave
or
cmp
xchg
inc
stos
js
add
mov
clc
jg
outs
or
pop
adc
pop
push
jge
xor
outs
adc
sbb
jno
add
pop
out
push
xor
or
sub
pop
or
mov
out
adc
or
lods
xor
mov
scas
repz
push
and
jge
imul
ss
add
cmp
retf
xchg
xchg
fbld
xchg
and
popf
cmp
js
lea
push
and
sbb
mov
jno
xchg
mov
sbb
scas
and
xchg
mov
and
arpl
stc
ret
xchg
jae
aad
ja
and
mov
stc
popf
and
dec
inc
ins
mov
adc
cmp
or
mov
pop
addr16
ficom
add
call
or
adc
sub
movs
mov
and
out
pusha
pop
pop
sahf
or
xchg
and
xor
lds
popa
enter
daa
idiv
lods
cdq
imul
lds
mov
leave
dec
xlat
mov
jne
jmp
or
push
mov
(bad)
sub
loope
sar
fst
push
ins
(bad)
xchg
repz
add
xchg
inc
sub
push
leave
das
pop
fild
mov
mov
ret
arpl
sub
add
cmp
jp
leave
or
xchg
or
repz
ja
xor
cmp
sub
rcl
push
jp
cmp
mov
sbb
add
jo
jae
aas
and
call
push
pop
mov
retf
pop
xchg
call
test
stos
mov
stos
iret
sbb
add
xchg
mov
mov
inc
push
or
sbb
fnstsw
jno
loope
jb
inc
inc
lahf
les
or
xor
in
or
or
sub
sbb
aas
stos
add
psrlq
jae
add
pop
jg
test
mov
jns
lea
repnz
ret
data16
add
and
inc
outs
cmp
adc
adc
cmp
scas
sub
xor
mov
aaa
sub
inc
(bad)
imul
ins
repnz
add
stos
cmp
mov
mov
bound
cmp
or
call
stos
idiv
cmp
xchg
call
mov
cmps
push
inc
imul
and
stc
inc
mov
or
pop
popf
xor
scas
sahf
call
ja
hlt
cmps
mov
not
imul
jmp
mov
scas
jmp
sub
push
or
pop
retf
ret
push
loope
jns
js
jae
xor
jae
pop
loope
icebp
xor
adc
jecxz
pop
ins
popf
pop
pushf
pop
aad
aam
pop
pusha
pop
mov
cmp
std
mov
ins
mov
lods
div
ror
fadd
xchg
test
xchg
int3
mov
leave
lods
mov
fwait
cmp
mov
int3
jns
cwde
pop
inc
add
sub
cmp
pop
cmp
inc
(bad)
sbb
rcr
fs
mov
push
int3
outs
pop
in
push
movs
cmp
ins
mov
mov
lods
mov
fcom
xchg
mov
sub
mov
ins
push
dec
jo
pop
ror
jo
mov
(bad)
leave
jmp
mov
lods
cmps
shr
push
retf
or
jns
pop
jp
jmp
pop
mov
enter
dec
(bad)
fidiv
lods
outs
aaa
pusha
fild
idiv
inc
fild
cmp
cmp
fild
ins
pop
pop
hlt
add
out
gs
xchg
and
mov
in
pop
out
cmps
xchg
ds
dec
pop
pop
fistp
dec
lods
mov
ins
test
call
aam
push
movs
sbb
cmps
xchg
sbb
sti
dec
pop
stos
jae
mov
mov
inc
pop
test
call
push
leave
(bad)
cmps
xchg
jbe
jbe
add
pop
mov
or
cmp
shl
xchg
cmps
pushf
out
(bad)
sub
test
xor
stos
nop
cmp
jmp
cmps
adc
jl
stc
dec
popa
sbb
test
ret
or
cwde
cdq
dec
jle
aam
je
sbb
inc
mov
aad
xchg
sub
inc
je
shl
retf
mov
lods
dec
dec
sbb
xchg
scas
cmp
je
mov
add
cmp
js
xchg
push
stc
sbb
cmp
dec
cmc
inc
xchg
test
or
js
cmp
sti
dec
cli
fs
or
mov
mov
test
cmc
add
mov
popf
int3
mov
call
xor
lea
sbb
test
mov
int3
ja
push
inc
xchg
pop
cmps
mov
out
(bad)
fistp
push
cmp
mov
stos
cmps
ss
push
mov
mov
push
push
cli
mov
call
dec
or
shl
or
inc
jp
nop
int3
popf
js
cmc
xchg
dec
xchg
ret
push
mov
jns
aad
sub
test
sbb
mov
sub
inc
or
xchg
cwde
cdq
fmul
pop
retf
mov
shl
fsubr
ins
inc
mov
enter
xchg
imul
pop
jae
mov
sar
mov
push
test
adc
fs
sbb
sti
int3
pusha
mov
push
(bad)
sbb
pop
xlat
inc
jg
test
mov
jge
mov
pop
loopne
add
lock
fstp
int3
mov
retf
in
xchg
lods
mov
fwait
jmp
sahf
retf
imul
fimul
cmp
les
sbb
mov
stos
retf
call
in
mov
jl
in
xchg
cmp
sub
fistp
call
fld
leave
sbb
mov
sbb
sbb
sbb
jbe
fsubr
or
jl
jbe
cld
pop
jbe
jl
aaa
fdivr
lods
sub
pop
ins
cmp
or
mov
adc
mov
cmps
cld
mov
test
cdq
in
fisubr
in
ficomp
fdiv
out
dec
in
call
mov
or
jbe
push
call
fsub
test
push
cmp
test
aad
cwde
mov
mov
lods
push
in
call
inc
jl
sbb
adc
hlt
(bad)
in
aam
les
movs
rcl
xchg
sbb
fs
and
leave
inc
or
push
xchg
jl
fistp
nop
cs
retf
sbb
outs
aaa
pop
sbb
jmp
daa
ds
lods
shr
fsubp
pop
fucomip
mov
nop
das
out
aas
les
pop
pushf
outs
out
pop
jg
(bad)
ficomp
mov
out
mov
cmp
xor
inc
sbb
push
cmps
cli
pusha
xchg
inc
jo
sub
mov
rcr
add
and
xor
and
jmp
push
sbb
fidiv
repnz
push
sahf
add
pop
sbb
fidiv
rep
out
or
fcom
je
xchg
pushf
mov
les
fist
push
pushf
gs
jne
xchg
push
ret
mov
(bad)
xchg
mov
push
mov
push
outs
xchg
mov
jmp
fisub
(bad)
shl
out
imul
daa
popf
inc
pop
inc
jmp
fist
jmp
rol
lods
ret
mov
sbb
mov
pop
js
cwde
push
mov
jbe
call
push
sbb
ss
sbb
mov
sub
in
push
push
jmp
cmps
cmp
inc
pop
ins
dec
lds
push
pop
mov
movs
ficom
and
fcom
je
and
mov
adc
les
je
cdq
lods
inc
xchg
mov
in
adc
add
mov
adc
shl
and
mov
pop
mov
ins
or
mov
jmp
loop
xor
dec
adc
sbb
loopne
jmp
cmp
loop
mov
xchg
mul
push
jb
pop
cwde
bound
int3
and
mov
fdiv
rol
mov
jp
mov
jno
mov
call
in
cwde
stos
add
lock
shr
cmp
call
fiadd
xor
les
mov
jns
fistp
xchg
mov
fisttp
ficomp
dec
aas
les
sbb
dec
xchg
ins
(bad)
sbb
pusha
cli
faddp
popf
into
pop
mov
push
sahf
lods
xchg
mov
pop
jle
pop
jp
xchg
push
ins
pop
dec
popf
pop
cwde
ds
dec
cs
call
sbb
sbb
std
stos
xor
lods
pop
jecxz
jmp
fcomp
mov
leave
ins
mov
test
mov
dec
loopne
rol
dec
fdiv
int3
hlt
sbb
adc
inc
rcr
fdiv
in
in
ret
lods
aad
push
in
cli
cmc
call
in
mov
sbb
cli
jbe
push
enter
jbe
dec
jbe
jl
mov
pop
pop
shr
aaa
test
jmp
(bad)
cmp
lods
inc
out
or
cmp
or
push
test
cmp
mov
call
jl
push
in
jge
fsubr
cmp
pop
fld
jns
mov
leave
adc
jl
lods
jl
fmul
sbb
jl
fs
push
test
les
imul
aam
jns
cli
push
sbb
cli
or
fstp
jmp
or
mov
fwait
test
mov
jmp
fisttp
sti
jl
sub
xor
mov
and
dec
xchg
lods
cld
fcmovu
pop
test
inc
ins
fs
test
or
movs
push
sahf
jl
movs
loop
push
jns
scas
pop
imul
jmp
int
fidivr
push
mov
xor
cmpxchg
push
lods
test
sub
aas
push
cwde
jl
dec
cld
pop
adc
(bad)
sbb
cmp
mov
or
or
xlat
inc
add
adc
xchg
ja
out
addr16
std
push
hlt
out
jo
out
sub
mov
rcl
lock
outs
cmps
and
sbb
xchg
inc
jbe
ins
push
inc
cmc
inc
cmps
pop
ss
and
in
jbe
cli
in
test
into
sbb
in
and
dec
test
gs
push
pusha
or
and
jl
and
fnstsw
push
dec
fcom
les
in
sbb
call
and
add
jl
loopne
ret
lods
xor
adc
jae
arpl
or
les
lods
repnz
mov
lock
popa
in
sbb
mov
inc
jl
cli
xchg
ret
jl
jecxz
pop
(bad)
cmp
sar
mov
mov
sub
push
ins
sar
inc
ins
adc
pop
sbb
push
mov
inc
adc
lock
sar
aam
sti
mov
sti
fist
stos
repnz
pusha
pusha
loope
leave
icebp
jnp
dec
mov
sti
sbb
add
adc
and
xor
xor
ins
lods
jb
nop
xchg
leave
mov
shr
inc
repnz
adc
and
xor
and
mov
dec
shl
pop
loopne
repz
adc
adc
and
xor
push
outs
push
fs
mov
aam
shl
(bad)
hlt
in
call
xor
gs
fisub
movs
or
aad
(bad)
cmc
mov
push
jbe
pop
push
ins
das
fldcw
fbstp
mov
lods
and
push
jle
add
jl
adc
jl
push
imul
adc
pop
ins
loope
pop
shr
jl
push
sbb
cli
push
mov
or
or
loopne
mov
cli
fcom
or
sub
shr
sub
cmp
cld
daa
push
fnsave
pop
cld
inc
jne
ins
push
imul
fwait
lods
ja
sub
retf
adc
jl
sti
fcomi
xlat
jmp
or
sbb
or
out
call
push
sub
jl
fdivr
dec
mov
sub
imul
jl
lods
or
pop
add
icebp
daa
cli
sub
mov
push
clc
mov
in
rol
out
jl
mov
fisub
lods
dec
mov
jno
sbb
jno
jl
sub
in
push
lods
sahf
mov
sub
enter
cmp
clc
lods
lods
jmp
sbb
pop
mov
pushf
mov
test
ret
rcl
jmp
fnsave
inc
jmp
xor
sbb
jl
and
pop
(bad)
jl
ret
add
lock
mov
or
lods
inc
mov
mov
sbb
pusha
adc
into
cwde
lods
jmp
repz
clc
fsubr
mov
mov
pop
sahf
push
cmp
mul
xchg
popw
lods
jno
les
ret
stos
push
mov
call
(bad)
in
mov
jl
je
movs
cli
aad
xchg
sbb
cwde
rol
mov
xchg
fld
gs
push
mov
jl
lods
lock
jl
sub
mov
push
ins
stos
in
cli
lods
xchg
aam
pop
mov
les
jmp
shl
jmp
jl
add
adc
dec
test
xor
sub
adc
stos
je
(bad)
les
xchg
mov
mov
ins
push
add
je
xor
mov
or
pushf
ins
jecxz
adc
les
jl
and
sbb
dec
cld
je
loopne
xor
lea
les
jl
test
add
mov
into
rcr
fild
ins
out
pop
call
in
or
sub
cmp
stc
aad
pop
cwde
push
fimul
ins
push
retf
pop
cdq
js
inc
sbb
fisttp
fsubr
sbb
jl
sbb
(bad)
mov
jns
jmp
ins
xchg
shr
xchg
mov
lods
clc
ss
call
fadd
sbb
call
adc
loop
mov
movs
xchg
pop
push
mov
dec
add
hlt
sub
aam
les
jl
xchg
test
sub
fs
push
mov
pop
cmps
loop
mov
xchg
mov
call
lods
pop
ja
sahf
jle
ins
mov
mov
pop
pop
call
sahf
inc
mov
bound
cmp
mov
loop
adc
inc
cmps
cld
pusha
in
xchg
jo
sbb
pop
rcr
(bad)
mov
mov
mov
sbb
xchg
push
rol
adc
pop
(bad)
(bad)
xchg
fdiv
repnz
mov
arpl
adc
xchg
sar
xor
fild
fdiv
movs
mov
aam
add
xor
push
jecxz
(bad)
fcom
in
cmc
mov
ret
jmp
mov
jl
cli
mov
mov
xor
pop
jmp
inc
retf
lods
ja
inc
xchg
(bad)
dec
add
lods
out
shl
lods
sbb
sub
sbb
mov
sar
jbe
mov
sbb
push
jb
inc
cld
fsubr
inc
ss
stos
es
or
pop
sbb
push
(bad)
lods
mov
push
sub
cmp
aas
sub
sbb
and
adc
(bad)
(bad)
dec
ins
pop
sub
pusha
xor
inc
jmp
push
adc
add
or
dec
mov
pusha
fnstenv
stos
xchg
bound
jae
arpl
inc
ret
xor
or
push
call
bnd
jne
movs
ret
mov
pop
mov
imul
ror
out
xchg
cli
pop
add
retf
loope
movs
xor
jmp
call
sub
jl
ja
daa
sbb
jo
fst
add
mov
dec
push
jl
ja
mov
sbb
sub
out
jmp
sbb
scas
mov
cmp
inc
outs
mov
jl
call
jmp
mov
ficomp
imul
call
ins
sbb
cmp
jl
stc
pop
adc
lods
adc
repnz
out
mov
test
fs
mov
cld
movs
jmp
mov
les
push
aam
in
pop
hlt
test
adc
xor
dec
push
fcom
gs
call
call
sbb
jmp
jecxz
adc
sbb
push
jl
sub
hlt
(bad)
loop
(bad)
cli
jbe
jns
pop
outs
rcr
jbe
xor
cli
jbe
jl
mov
mov
idiv
sub
dec
call
sbb
enter
pop
adc
jl
sub
pop
lods
mov
popf
cdq
inc
mov
ins
mov
jl
jl
sbb
adc
pop
jbe
fnstcw
fmul
mov
cmc
hlt
imul
hlt
imul
jl
pop
sbb
sub
cmp
dec
ficomp
imul
mov
mov
fwait
retf
jmp
test
mov
sti
enter
mov
sub
cmp
mov
dec
and
mov
cdq
pop
dec
mov
jns
in
xchg
jp
cmps
sub
sbb
pop
and
sbb
mov
sahf
ficomp
in
fmul
clc
and
cmp
jns
pop
jl
cld
enter
dec
test
or
data16
arpl
outs
push
outs
dec
das
jae
ins
in
call
add
neg
and
pop
xlat
sbb
mov
ficomp
jmp
cmp
mov
pop
inc
in
call
in
clc
pop
add
pop
xor
out
in
and
cmps
pusha
dec
(bad)
int3
mov
jecxz
jo
jecxz
push
xchg
data16
or
mov
inc
jle
test
clc
push
ins
jmp
rcr
shr
call
in
test
loopne
gs
xor
adc
sti
mov
dec
jns
loop
test
sbb
pop
push
lods
pop
and
mov
sub
cli
rcr
ins
xchg
pusha
jl
cld
xchg
jae
adc
and
add
loop
shl
lods
in
pushf
mov
mov
xor
sbb
inc
and
add
ficom
push
mov
mov
dec
jl
or
jmp
push
cld
or
jno
lods
dec
mov
sbb
shr
mov
sub
mov
mov
pusha
enter
retf
cmp
inc
loopne
sbb
adc
loope
ins
icebp
imul
pop
jl
dec
fisub
cmp
and
ficomp
bound
retf
(bad)
fiadd
repz
jmp
push
and
call
cmp
xchg
sbb
in
pop
lock
adc
cdq
push
pop
sub
je
popa
adc
in
call
hlt
sub
adc
xor
add
and
test
xor
cli
push
xchg
jmp
in
shl
in
das
sbb
inc
call
lods
cmp
inc
jns
jb
add
or
icebp
sub
test
push
sbb
ftst
jmp
inc
inc
mov
dec
ror
sbb
retf
sbb
sub
int
mov
lods
mov
call
sar
mov
fcmovb
(bad)
call
sahf
sbb
adc
adc
jl
pop
aaa
in
enter
sbb
test
inc
lock
jmp
or
mov
fdivr
mul
ficomp
sti
sub
jbe
pop
sbb
push
adc
call
jle
jl
mov
call
cwde
lods
inc
dec
jmp
or
push
cmp
mov
test
mov
mov
pop
sti
xchg
pop
dec
add
cmp
push
sbb
dec
jecxz
push
jno
cld
dec
popa
or
jnp
sub
data16
popa
sbb
adc
add
mov
call
mov
or
dec
inc
sub
mov
sbb
lods
cmp
mov
xchg
xchg
dec
push
ins
mov
or
stos
cld
adc
les
and
and
fnstcw
out
mov
cmp
dec
mov
cli
dec
dec
jmp
mov
dec
lods
and
jl
mov
call
movs
cmp
pusha
mov
mov
fsubr
nop
xchg
or
call
xchg
push
repz
out
xor
inc
mov
imul
dec
jbe
push
rol
adc
icebp
es
jl
mov
mov
cmp
jmp
jecxz
mov
call
jne
fwait
push
lods
xchg
push
test
sbb
cmp
fxam
test
(bad)
(bad)
call
in
mov
dec
stos
lods
mov
dec
mov
rol
loop
sub
cmp
dec
mov
mov
dec
retf
and
adc
mov
jl
test
je
bound
jl
out
or
lods
shl
rcl
sbb
mov
cmc
sub
push
loopne
sbb
lods
xor
xchg
in
movs
mov
mov
mov
sbb
ret
jl
stos
rep
adc
inc
lods
cmp
mov
test
lods
cmp
(bad)
or
fiadd
pop
fisubr
enter
cmp
mov
aad
movs
adc
(bad)
sar
mov
pop
movs
jecxz
sub
dec
stos
mov
jp
sbb
test
fmulp
dec
add
jbe
test
jl
sbb
pushf
stc
sbb
enter
ja
leave
addr16
lods
daa
dec
cdq
pop
or
pop
sub
imul
cmps
ins
xchg
lods
dec
jbe
sub
cmp
or
inc
ss
clc
fsub
push
les
sbb
sbb
or
pop
sub
mov
lods
js
sbb
dec
pop
lods
mov
retf
mov
sbb
sbb
dec
out
fs
mov
xchg
repz
push
call
ins
cwde
ds
cld
dec
je
outs
inc
cmp
scas
and
push
emms
loopne
hlt
es
jl
push
xor
xchg
call
add
dec
lods
jo
sbb
call
pop
inc
(bad)
jno
and
push
mov
cmp
inc
pop
push
xchg
cmp
adc
xchg
jl
mov
ret
jecxz
mov
inc
lods
ficom
test
in
hlt
or
jl
push
jge
jl
gs
cmp
lds
cmc
mov
rcr
inc
push
jl
(bad)
les
(bad)
lods
(bad)
dec
mov
pop
mov
daa
rcl
pop
addr16
out
arpl
xlat
(bad)
xor
lods
and
cmp
dec
rcr
ret
mov
mov
and
out
cdq
push
mov
sbb
out
ins
ss
call
out
push
inc
sbb
lods
retf
enter
sub
and
test
xchg
cmp
sbb
out
ins
and
and
add
sbb
adc
fsub
sbb
loope
stos
mov
pushf
adc
add
repz
fcmovnbe
mov
mov
and
jae
fsubr
cmp
and
adc
repnz
stc
add
mov
sub
ja
sar
push
mov
cld
and
add
sahf
icebp
mov
pushf
sbb
adc
mov
jno
loop
mov
inc
out
adc
sbb
jl
sbb
fld
cld
jmp
and
push
cmp
sbb
loope
test
out
push
adc
push
pop
aam
ret
ret
loope
nop
test
jl
xchg
call
cwde
lods
call
out
cmp
dec
jmp
mov
sub
xchg
retf
retf
ret
retf
rcr
or
stc
jmp
repz
lods
add
or
lods
mov
cdq
or
cmps
jl
imul
cld
test
movs
in
fdiv
or
in
hlt
clc
(bad)
call
push
popf
xor
retf
movs
call
aad
cmc
ins
adc
sbb
pop
push
pop
test
retf
or
jl
mov
xchg
pop
jl
sbb
mov
(bad)
xchg
xlat
(bad)
cmp
lods
test
fidivr
fcomp
and
sbb
and
cli
jo
mov
jl
cmp
sbb
sub
xor
dec
pop
jl
fisttp
jns
sbb
add
test
clc
fldcw
mov
sbb
cmp
sbb
mov
jl
mov
jecxz
pop
pop
cli
fisttp
push
sbb
sub
cmp
dec
imul
jnp
xchg
sbb
cmp
lods
shr
mov
(bad)
jmp
cdq
cld
stos
imul
push
cs
sti
adc
movs
adc
fstp
jmp
mov
mov
pop
xchg
dec
cwde
pop
sti
jmp
nop
jle
sti
sbb
or
or
clc
pop
call
mov
sar
scas
sub
jle
(bad)
sbb
cwde
lods
jmp
mov
push
fisttp
out
jle
aam
(bad)
cwde
sub
fcomp
pmaddwd
out
data16
leave
or
aas
lods
push
dec
sti
cmps
outs
sahf
xchg
ja
lods
into
push
outs
or
or
lahf
aas
jmp
imul
jmp
iret
adc
sub
xchg
out
xrelease
data16
adc
mov
fidiv
mov
jne
jle
mov
jnp
lods
call
dec
clc
jne
lods
sub
sub
pop
adc
mov
ins
les
movs
or
xchg
call
pop
push
sbb
mov
ret
les
and
jmp
lock
sub
fisubr
cmp
in
lods
pop
ret
xchg
add
add
jl
clc
mov
pushf
push
lock
xor
jns
mov
rcl
jmp
ins
jecxz
stc
mov
inc
inc
fnsave
cld
popa
les
pushf
clc
inc
lock
mov
add
lock
pop
sar
jle
jle
mov
nop
mov
or
sar
test
push
mov
fwait
xor
dec
cld
ins
loope
adc
imul
pop
push
add
clc
adc
in
add
sbb
sbb
jb
fs
jmp
sbb
rcr
ret
cli
sub
hlt
push
inc
les
leave
jmp
das
adc
lock
add
mov
cmc
popa
sbb
inc
outs
xor
or
add
sbb
xor
cdq
adc
push
mov
jne
adc
and
inc
in
(bad)
lods
fs
in
mov
ja
idiv
lods
test
stos
and
xchg
or
jp
xchg
out
pusha
pop
pop
imul
and
cmp
inc
cld
les
inc
dec
loop
jbe
loope
mov
dec
retf
cli
test
into
xchg
cli
or
jmp
(bad)
lea
pop
dec
cld
pop
cmp
sbb
push
call
mov
fucomi
dec
jmp
sti
fidiv
sbb
ins
idiv
sbb
mov
jl
dec
ins
sub
icebp
sbb
js
xchg
pop
imul
jmp
dec
test
and
sub
jl
sub
inc
cli
jle
pop
imul
jbe
lods
sbb
push
out
jge
cmp
lods
or
jno
mov
jmp
cdq
mov
call
stos
xchg
imul
cwde
adc
stos
lods
cmp
lods
(bad)
fdivr
or
sbb
or
mov
mov
push
lods
fadd
out
or
lods
or
out
jno
fcom
and
mov
cmp
or
sbb
ja
out
loopne
mov
call
sbb
dec
sbb
push
xchg
sbb
lods
lods
(bad)
jle
inc
jo
(bad)
dec
sbb
lods
lods
adc
es
sbb
hlt
cmp
jl
mov
cmp
sub
jns
jl
mov
push
add
ret
mov
xchg
jmp
mov
rol
or
inc
jl
call
xchg
or
sub
hlt
sub
scas
jmp
loopne
inc
push
fld
and
in
repz
dec
xchg
hlt
xchg
xor
pop
jle
cmp
pushfw
xor
jne
in
aas
cld
add
or
add
int
adc
test
or
(bad)
add
mov
xlat
sub
fadd
and
pop
rcl
push
xchg
arpl
mov
lods
ret
adc
inc
fdiv
jecxz
add
ficom
sbb
and
stos
movs
fidivr
add
ins
fs
mov
in
mov
sub
stos
stos
out
fwait
push
mov
dec
or
jl
or
mov
mov
push
jl
dec
cmp
loop
xchg
out
xor
mov
mov
dec
push
sub
pushf
push
call
test
fsubr
mov
retf
test
dec
mov
sub
sbb
xchg
mov
call
inc
fisubr
ss
es
add
mov
mov
cmp
call
and
add
test
sbb
ins
sbb
sub
mov
xchg
lods
out
sar
xchg
mov
cmps
mov
fstp
push
cs
iret
ds
sti
sbb
xor
lods
sub
adc
ins
add
aam
pop
xchg
enter
sbb
lods
push
push
dec
mov
(bad)
push
mov
xchg
scas
sbb
mov
movs
adc
add
push
or
fidiv
add
fist
jb
adc
repnz
add
int
loopne
push
jl
cld
push
mov
jecxz
fadd
movs
push
pop
inc
dec
push
jl
mov
mov
(bad)
fcmovbe
in
cwde
adc
les
dec
jbe
jl
mov
aad
lods
in
push
pop
fild
repz
jmp
sahf
jecxz
jmp
inc
neg
les
pop
ret
fsub
aaa
cld
mov
push
ja
mov
xchg
or
xlat
call
iret
arpl
or
sub
push
cmp
dec
call
push
add
(bad)
mov
ret
ins
mov
int3
enter
add
mov
push
loop
push
pop
or
jmp
cmp
mov
xchg
xor
test
sar
sbb
push
in
push
aam
and
pop
add
clc
imul
jl
int3
movs
add
sahf
jns
les
inc
ins
icebp
or
loope
adc
dec
add
or
lods
rol
sub
jl
pushf
xchg
pop
or
fadd
arpl
push
bound
jne
fisub
sbb
mov
leave
repnz
(bad)
and
pusha
bound
popa
adc
lods
adc
push
sub
fidivr
push
sbb
jl
adc
in
movs
icebp
mov
movs
rcr
mov
fbld
adc
jp
pushf
and
adc
push
(bad)
sti
fild
sahf
jmp
cld
jmp
in
sbb
and
cmp
pushf
lods
mov
push
jg
outs
jmp
aas
mov
sbb
sar
out
cmp
sbb
push
lods
scas
mov
push
popa
mov
pop
lods
outs
and
repz
mov
push
xchg
pop
push
sub
int
dec
cmp
call
mov
xchg
out
or
ret
lods
cwde
stc
jmp
pop
ror
or
leave
enter
sbb
mov
adc
jns
pop
pop
sbb
cld
and
cmp
dec
lods
cmps
push
mov
sbb
lods
xchg
clc
lods
call
int3
(bad)
fcomp
enter
hlt
jl
lods
and
xor
pop
jne
xchg
cmp
sbb
pop
lds
push
push
in
jl
sub
lods
(bad)
jbe
xchg
fsub
out
pop
cmp
pop
aaa
les
xchg
push
jl
inc
cli
xchg
jl
lods
mov
pop
xlat
xor
sbb
lods
sub
fdiv
add
sub
pop
or
sbb
cmp
pop
retf
mov
fstp
jmp
jl
ficomp
call
xchg
pop
jge
jp
push
call
stos
movs
les
fisubr
jmp
sbb
jl
fistp
pop
clc
imul
dec
jnp
pushf
sbb
fwait
xchg
fimul
stos
retf
mov
retf
imul
adc
shr
sub
sbb
jl
or
out
sub
call
xchg
cwde
jnp
jne
mov
pop
mov
mov
cwde
push
stos
mov
pop
scas
mov
mov
ins
sbb
(bad)
call
cld
mov
jl
(bad)
(bad)
mov
cld
ja
pop
rcr
jl
das
retf
aaa
jl
daa
aas
jmp
fstp
shl
xchg
jg
jbe
aas
ficom
mov
in
jle
push
push
push
jnp
iret
pop
push
(bad)
in
imul
out
call
clc
movs
add
add
add
adc
gs
inc
inc
and
push
xor
xor
loop
inc
jmp
push
retf
pop
aam
les
rcl
mov
xor
pop
adc
mov
sar
mov
mov
ins
inc
push
fist
push
add
int3
repnz
and
pop
cmp
les
dec
inc
sbb
ins
xor
jl
sbb
inc
mov
adc
fadd
mov
icebp
dec
mov
push
int3
mov
xchg
adc
or
and
outs
call
add
jl
call
mov
loopne
lods
cmp
sahf
sub
pop
sbb
mov
sti
push
pop
shl
fdivr
xchg
mov
inc
clc
adc
sbb
push
sbb
(bad)
in
cwde
jb
xchg
call
sbb
mov
in
movs
pusha
lods
add
clc
iret
xchg
add
push
shr
rcl
add
rcr
or
inc
jl
je
dec
enter
or
movs
loop
aam
loope
lods
adc
loop
add
imul
out
out
xor
pop
jb
in
mov
push
inc
mov
inc
mov
and
mov
ins
xlat
es
push
sub
lods
cmp
aaa
push
pop
dec
mov
lods
sbb
sub
ss
pop
pop
mov
xchg
jl
sub
callw
inc
xchg
into
sbb
mov
out
sub
movs
rol
mov
pop
inc
sbb
(bad)
lods
jnp
or
stos
ins
mov
xchg
retf
pop
cmps
(bad)
mov
jmp
sub
(bad)
sbb
out
cmp
or
fs
rcr
cld
in
stc
cmp
mov
lods
mov
inc
jbe
ja
ret
shl
je
in
cmps
jl
adc
js
mov
push
push
adc
iret
in
sub
lods
add
mov
mov
out
call
sub
sub
int
retf
jns
lods
hlt
mov
mov
inc
adc
movs
mov
test
jl
fisttp
call
in
in
inc
jno
sub
jp
dec
cmp
jl
imul
pop
mov
lods
mov
test
lods
inc
cmp
add
loopne
push
frstor
shl
jge
sbb
ins
pop
sbb
cdq
cmp
jl
shl
cmc
jo
aad
pusha
jmp
lods
mov
xor
pusha
ins
jmp
dec
ins
jns
mov
nop
sbb
enter
rol
clc
lock
ins
mov
push
aas
jo
add
xchg
loop
jo
data16
call
lods
push
mov
dec
(bad)
mov
xchg
dec
jl
addr16
jge
nop
int3
clc
xor
jl
jl
repz
fs
sub
adc
and
lods
sahf
mov
leave
hlt
fwait
push
call
lods
loopne
in
or
mov
lods
mov
sbb
pop
sub
jl
jl
loope
test
movsx
lods
xor
pop
and
je
mov
push
mov
bound
jl
(bad)
mov
cwde
ror
or
dec
clc
jecxz
cmp
pop
cmp
mov
ins
arpl
pop
push
cld
mov
mov
ins
pushf
es
int
and
popa
pop
movs
je
and
popf
sahf
daa
cmp
cmp
pop
jmp
retf
sub
mov
call
imul
pop
mov
dec
sub
or
fstp
movs
adc
dec
add
in
inc
dec
mov
sbb
fisttp
call
sbb
sub
ins
mov
add
or
jl
bound
xchg
inc
pusha
arpl
jmp
je
jmp
mov
dec
push
sbb
and
sub
jle
push
jl
push
cmp
inc
sbb
sti
(bad)
fsub
test
dec
aas
jmp
dec
cwde
xor
sub
pop
fld
outs
or
movs
inc
movs
jl
call
js
in
push
mov
ss
mov
lods
push
adc
test
ficomp
outs
push
lods
fdivr
mov
retf
call
daa
cwde
out
add
out
psubusw
aas
fnstenv
retf
fstp
mov
inc
mov
push
jl
mov
jl
mov
inc
mov
adc
inc
cmp
into
shl
mov
ja
sahf
bound
(bad)
adc
sbb
jl
and
add
adc
and
les
dec
pop
into
cwde
hlt
add
in
adc
(bad)
jne
xchg
movs
(bad)
lds
mov
fist
data16
jge
jl
cmps
mov
(bad)
or
pop
lods
jecxz
ficomp
xchg
inc
lods
addr16
rcr
ja
je
cmps
retf
pop
mov
jmp
sbb
dec
ins
pop
lods
jae
dec
arpl
mov
ins
inc
mov
call
movs
loop
push
mov
cld
ss
clc
adc
cmp
sbb
jmp
dec
cmp
mov
movs
lods
cmp
sbb
in
test
retf
add
pushf
push
dec
push
(bad)
(bad)
xchg
mov
pop
fs
xor
add
aas
jmp
(bad)
out
ret
ror
shl
outs
push
sbb
xchg
inc
inc
movs
mov
adc
add
repnz
mov
shl
cmc
ret
cmps
adc
mov
push
add
jb
fist
push
or
mov
jae
and
cmp
sbb
fcom
rol
(bad)
ret
push
jno
popa
lods
inc
inc
pop
xor
push
push
sbb
dec
add
loopne
jp
rcr
mov
sbb
(bad)
dec
ins
pop
call
mov
and
push
mov
call
mov
shr
pop
jecxz
ret
pop
das
jbe
jbe
nop
out
mov
fisub
mov
mov
mov
jle
mov
dec
mov
xlat
sbb
xor
lds
loop
sbb
call
fistp
lods
sub
xchg
sbb
fiadd
jl
fnstenv
mov
in
fcmovbe
mov
jecxz
ins
repz
out
pop
dec
dec
pop
cmp
jl
fild
and
fist
xor
call
push
fcomp
sbb
enter
xchg
push
mov
jl
fcmovnbe
pusha
in
mov
adc
xor
jl
mov
xchg
adc
movs
sbb
pop
pop
lods
mov
pop
push
test
inc
xchg
push
sbb
sbb
jl
je
mov
sub
neg
cmps
lods
inc
sahf
stos
addr16
pushf
cmps
sbb
jl
push
pop
out
neg
lods
sub
jl
fsubr
in
jl
or
fcom
call
retf
imul
lods
out
cdq
fstp
xchg
jmp
sbb
dec
dec
cmp
push
jl
jne
test
jbe
pop
mov
mov
xchg
pop
adc
jl
add
push
sbb
cmp
jecxz
fldenv
cmp
cmc
stos
inc
pop
dec
repnz
sub
dec
dec
shr
cli
sbb
ds
sbb
ins
or
jne
pop
call
leave
sbb
jl
pop
outs
loop
test
test
cwde
mov
movs
js
ins
shr
retf
dec
mov
jl
inc
sub
sahf
cmp
sub
push
jl
neg
jl
out
scas
movs
xlat
dec
fsubr
mov
cmps
into
jne
movs
fisub
jl
out
cld
addr16
jne
or
sub
retf
lock
or
das
shl
jl
aas
fcmovnb
jl
mov
adc
push
stos
push
pop
jle
je
inc
fstp
mov
jg
cmc
jl
ficomp
scas
mov
rcr
lods
jne
or
iret
and
cmc
(bad)
(bad)
inc
out
int
int3
adc
jmp
sub
fisub
jecxz
xor
int
inc
push
jmp
repz
sbb
mov
sbb
mov
sub
pop
push
add
xor
imul
jnp
(bad)
lock
mov
mov
retf
xchg
inc
repz
jmp
out
push
outs
sti
xor
add
icebp
xor
dec
loope
ins
out
in
call
inc
jl
loope
shl
popa
dec
mov
sbb
cld
sub
mov
dec
jge
jl
popa
(bad)
ins
or
xchg
pop
inc
add
cmp
mov
shl
shl
ror
lods
mov
mov
lods
xor
fild
loope
inc
icebp
out
outs
imul
and
xor
xor
call
test
push
mov
sbb
adc
cld
test
push
adc
loopne
push
or
sbb
pop
loopne
ret
jl
test
add
mov
fisttp
ins
clc
mov
mov
popf
mov
and
in
hlt
mov
adc
mov
fwait
xor
cmp
in
push
or
push
push
fcmovbe
adc
jl
mov
or
pop
or
mov
cli
sbb
jl
ss
arpl
adc
add
aaa
and
push
cmp
adc
push
addr16
xor
sti
ins
and
(bad)
sti
inc
fisttp
add
push
hlt
jl
cli
dec
sub
nop
mov
(bad)
in
out
jl
cmp
fistp
pusha
mov
mov
push
fwait
sbb
dec
mov
(bad)
or
(bad)
sbb
out
sub
dec
lods
test
sbb
sub
(bad)
cmp
ja
loop
sub
jl
int3
rcr
sbb
loop
xchg
jge
test
retf
fstp
js
in
dec
iret
mov
cmp
sub
or
jle
lods
dec
dec
dec
lods
fcmovne
jecxz
int
sub
sbb
sbb
cmc
lahf
lods
aas
mov
xchg
jl
or
lods
mov
jl
sbb
mov
fcom
cmp
sbb
inc
lods
sbb
cmp
call
dec
lods
adc
jl
cld
push
push
or
clc
inc
clc
lods
fidivr
lods
mov
adc
lods
add
xlat
push
dec
cmp
rcr
pop
test
rcr
pushf
out
fist
dec
sbb
aaa
(bad)
out
ins
fbstp
pusha
pop
out
dec
or
lods
shl
dec
(bad)
test
out
in
xchg
out
push
hlt
pop
loop
mov
sbb
jl
(bad)
sub
loopne
sbb
adc
jmp
inc
adc
les
data16
pushf
lods
icebp
push
mov
jl
mov
xchg
call
or
loopne
mov
adc
push
push
xor
xchg
sub
idiv
scas
dec
adc
xor
adc
lods
cmp
push
jl
dec
push
lods
mov
sbb
pop
xor
in
iret
retf
out
movs
daa
mov
fst
icebp
test
inc
adc
mov
xor
bound
and
jb
xchg
jmp
pop
jl
mov
(bad)
dec
jl
daa
xchg
loope
stos
cs
jp
xchg
mov
(bad)
imul
mov
mov
pop
xchg
lods
push
sub
add
cld
lods
push
ins
adc
xor
inc
shl
ins
xchg
lods
mov
fucomi
add
adc
mov
fwait
and
imul
jl
sbb
les
mov
jmp
mov
mov
push
and
loopne
sbb
lds
(bad)
stc
lods
fnstcw
pushf
test
jl
lods
pop
dec
(bad)
cmp
cdq
(bad)
clc
shl
call
movs
es
pop
ffree
dec
or
mov
pop
add
arpl
sub
cmp
push
movs
adc
mov
ins
xchg
adc
inc
ins
pop
mov
hlt
dec
xor
dec
mov
inc
ret
sbb
add
aas
cld
push
std
fistp
fisubr
scas
hlt
xchg
ins
std
adc
into
push
xchg
pop
cs
retf
dec
lods
pop
mov
mov
sbb
test
sahf
and
dec
les
lods
push
sbb
(bad)
fist
mov
call
xchg
cmp
cld
lds
and
xchg
outs
scas
and
mov
sbb
and
sti
push
mov
sbb
inc
repz
sbb
jl
test
hlt
pop
and
sbb
in
push
pop
push
(bad)
ficom
jbe
movs
popf
pop
mov
(bad)
push
adc
(bad)
(bad)
in
fiadd
test
retf
xchg
repz
jecxz
fcmovnb
call
fimul
fcomp
sub
fadd
mov
js
cld
mov
test
xchg
mov
fcom
jbe
or
aam
adc
ss
es
sbb
pop
cmp
adc
cmc
xchg
mov
pop
aad
jb
lds
fsubr
bound
movs
lods
xchg
push
mov
cli
and
ficom
inc
xor
and
jns
out
xchg
lods
and
jbe
pop
aam
or
loope
inc
xchg
hlt
jns
mov
out
push
mov
sbb
inc
inc
sbb
mov
movs
sahf
jmp
arpl
sbb
jl
push
and
adc
add
repnz
jl
and
test
repnz
jge
lods
fst
push
bound
movs
push
movs
or
retf
xor
ficom
ins
add
icebp
and
fistp
mov
mov
mov
xor
pop
scas
sar
sar
cld
cli
test
in
adc
call
iret
mov
ins
cmps
call
ins
inc
sbb
loop
(bad)
(bad)
dec
imul
faddp
into
outs
sub
(bad)
lods
sahf
mov
popa
cld
das
pop
pop
or
lods
in
fwait
push
test
in
add
dec
push
aam
jae
cmp
xchg
jne
inc
arpl
movs
test
jns
jmp
fist
mov
pop
or
sbb
dec
sub
sbb
or
jecxz
sbb
ins
call
add
mov
and
cmp
push
jl
(bad)
cwde
fist
mov
jl
js
les
lods
shl
les
xchg
les
jl
mov
push
sar
push
xchg
push
pushf
mov
xchg
mov
pushf
mov
sbb
sbb
jl
and
cmp
xchg
sub
xchg
mov
xlat
out
and
sbb
pop
fsubr
movs
popf
adc
jecxz
(bad)
jl
mov
mov
push
lods
jns
movs
mov
cmp
cmp
jmp
stc
jl
call
jns
cmp
dec
jl
sbb
call
je
jmp
fldcw
mov
or
xchg
in
mov
dec
cmps
lods
adc
ds
fdiv
call
jp
cwde
sbb
push
mov
clc
fisubr
pop
outs
fimul
cmp
sbb
or
xlat
lods
out
or
inc
(bad)
fs
test
mov
inc
retf
inc
fcmove
fcmovu
cli
aaa
fisub
daa
cmps
or
jmp
lods
idiv
sbb
outs
imul
scas
cmps
clc
ins
cmovns
dec
xchg
sbb
cli
xor
aas
retf
push
dec
pop
push
pop
dec
stos
cmc
add
sbb
inc
outs
sbb
jg
xchg
jl
jne
int3
jne
pop
gs
inc
mov
sub
add
hlt
fistp
aam
leave
(bad)
enter
sahf
xchg
dec
out
mov
je
dec
push
jecxz
adc
cdq
xor
jle
inc
inc
push
add
cld
jecxz
pusha
leave
mov
mov
nop
jmp
jae
sbb
mov
xor
dec
and
add
test
repnz
shl
mov
movs
adc
pushf
sbb
dec
fcomp
xor
jle
fadd
loope
inc
retf
rcl
ins
sti
rol
mov
sub
push
cmp
dec
sub
lock
mov
cmp
mov
(bad)
sbb
sub
dec
xchg
inc
lock
jmp
mov
sbb
jo
stos
sar
push
mov
mov
and
pop
(bad)
cmp
movs
sub
icebp
sbb
movs
adc
xor
mov
in
clc
jb
mov
add
jl
ret
mov
pop
rol
jle
xchg
sbb
push
shl
push
xchg
(bad)
add
and
popa
add
jno
loop
and
xor
jmp
dec
movs
sbb
fld
aam
adc
inc
and
xor
push
sahf
push
gs
jne
xchg
mov
cld
bound
aad
pop
in
loopne
mov
in
loop
push
push
cmc
mov
cmp
aad
call
jmp
out
sbb
jge
pusha
add
mov
test
or
(bad)
xlat
data16
inc
lods
icebp
mov
sbb
movs
(bad)
out
add
mov
sbb
mov
out
shl
sbb
mov
stos
mov
xor
test
or
adc
sub
(bad)
outs
lods
and
pop
dec
imul
in
dec
aaa
sbb
sub
stos
shl
aas
ja
imul
lods
xchg
cmp
ror
dec
int3
sbb
jp
leave
lock
arpl
lods
xor
stos
push
mov
outs
cli
inc
xor
dec
std
out
(bad)
inc
mov
pop
mov
test
sbb
clc
(bad)
dec
adc
or
jmp
dec
jl
jl
mov
stos
pop
ins
into
jno
lods
js
call
mov
sbb
mov
jl
xchg
mov
lods
dec
sbb
in
add
popa
cmp
fwait
push
not
dec
(bad)
pop
inc
adc
cdq
jl
ret
aas
xor
xchg
lods
cmps
sbb
cmp
out
mov
mov
mov
xchg
mov
jl
test
adc
pop
mov
lods
adc
push
dec
sbb
ins
mov
cwde
push
mov
cmp
jl
pop
clc
int3
mov
rcr
jl
mov
les
push
inc
mov
mov
in
xchg
cmp
jbe
cmp
dec
call
int3
out
jmp
xor
mov
add
cmps
mov
mov
call
test
nop
sbb
and
mov
sbb
lods
xchg
add
cdq
aam
add
jl
mov
mov
mov
cmp
call
pushf
repz
push
rol
retf
js
or
or
loope
mov
pop
lods
inc
je
lods
jl
push
mov
pop
fs
jl
cmp
dec
and
cmps
dec
adc
call
jb
jmp
push
jge
jl
inc
jl
inc
inc
push
sub
mov
pop
ret
inc
lods
repz
loope
shl
std
cli
cmp
mov
jle
jle
jne
(bad)
stos
adc
push
ins
imul
push
dec
sbb
or
lods
retf
mov
call
push
dec
hlt
cmp
jmp
repz
leave
mov
cdq
in
push
mov
jl
ficomp
dec
fidivr
or
jl
call
enter
icebp
cwde
jl
mov
jl
push
jl
adc
jl
(bad)
out
shl
push
int
sti
sub
sbb
mov
lods
imul
fnstsw
xchg
sub
pop
test
clc
mov
iret
shr
sub
inc
lods
mov
dec
sbb
retf
push
mov
cmp
push
push
lods
dec
xor
daa
sbb
push
ins
push
adc
dec
and
adc
mov
push
fnstsw
xchg
sbb
pop
lods
push
and
stos
lock
lods
dec
(bad)
sbb
xor
sahf
bound
ret
sbb
in
in
adc
sar
and
xchg
pop
mov
add
jne
xchg
pop
mov
(bad)
fadd
push
les
les
mov
jl
test
daa
mov
adc
pushf
xchg
xlat
mov
pop
sub
jmp
sahf
jecxz
mov
rcr
jmp
cli
clc
xchg
sbb
mov
std
mov
cmp
or
ins
jae
push
arpl
pop
inc
push
cli
inc
mov
and
lods
push
shr
mov
cmc
mov
aad
lds
mov
movs
arpl
bound
xchg
jne
xor
gs
pop
adc
add
jge
sbb
in
aam
mov
jl
icebp
ja
inc
test
push
mov
cwde
frstor
or
sbb
ret
mov
mov
jae
or
jns
lods
ficom
icebp
fcom
push
dec
cdq
repnz
sti
loop
test
add
xchg
das
and
pop
repnz
adc
and
inc
inc
pusha
xor
and
add
icebp
outs
sahf
loope
fisubr
shr
mov
dec
mov
adc
mov
inc
xchg
push
mov
into
inc
lods
xchg
lods
dec
jp
dec
scas
dec
mov
aas
adc
das
jl
jne
test
mov
jbe
into
ins
in
movs
mov
ins
sahf
sub
mov
clc
pop
enter
lods
fistp
mov
cs
cmp
arpl
push
adc
(bad)
sti
add
mov
jmp
jae
jl
les
cdq
lods
or
test
pop
mov
adc
jl
xchg
dec
stos
mov
popf
ret
cli
mov
cwde
mov
rcl
jecxz
cld
repz
call
xchg
sbb
lods
inc
call
in
pop
movs
and
sbb
push
mov
push
imul
mov
imul
mov
jl
mov
inc
cmp
pop
inc
not
jl
push
mov
(bad)
(bad)
fdiv
pop
les
mov
(bad)
xchg
out
not
or
sbb
jl
mov
xchg
push
jbe
mov
call
adc
sbb
xchg
imul
ins
push
and
jmp
stc
lods
jmp
mov
pop
jl
dec
movs
or
push
mov
jl
pop
jl
fsubr
das
sbb
in
pusha
ins
enter
mov
dec
and
jl
js
or
inc
pop
pushw
in
dec
lods
xchg
cmp
jmp
test
loop
xlat
fucomip
adc
sahf
stc
mov
dec
cmps
jl
sahf
or
addr16
mov
ins
aaa
ret
sub
into
add
add
fmul
fidivr
aam
out
mov
jne
retf
push
pminsw
lods
fcom
inc
pop
movs
inc
jne
les
fadd
das
mov
push
jp
aad
add
dec
adc
jne
pop
pop
test
inc
push
dec
xor
aam
adc
stc
movs
hlt
or
in
movs
les
xchg
ret
leave
test
add
shr
cdq
in
push
xor
mov
pop
dec
out
add
jl
sbb
out
(bad)
jmp
add
ret
hlt
and
stos
sub
sbb
mov
pusha
mov
adc
add
jl
sti
mov
xchg
push
cdq
ins
jb
sar
stc
icebp
shr
out
adc
jl
push
lock
sti
add
retf
fisub
and
shl
dec
fstp
jnp
inc
jle
jle
out
jl
or
xor
popa
retf
and
adc
lock
mov
jmp
in
xchg
in
pop
mov
fnsave
in
int
mov
sub
call
dec
dec
jl
fucom
sbb
icebp
inc
or
movs
and
push
mov
int
lods
adc
jb
cli
and
xchg
data16
ret
rcr
jl
rcl
repnz
add
and
lock
jmp
jl
mov
cwde
popa
repz
loop
add
mov
test
push
sahf
icebp
les
mov
and
xchg
jne
(bad)
in
push
aam
pop
sbb
adc
and
in
call
jne
rol
mov
ins
xchg
jl
jl
(bad)
(bad)
in
mov
mov
int
test
(bad)
in
loop
and
inc
xchg
shr
fsin
sub
outs
mov
lock
mov
dec
lods
or
sub
cmps
adc
cmp
cli
and
pop
cmps
or
dec
jbe
jge
(bad)
sub
(bad)
dec
je
pop
rcl
ins
arpl
jmp
sbb
mov
ins
xchg
mov
loop
out
sti
push
sbb
cmps
call
call
fcmovnb
pusha
xlat
pop
mov
pushf
sbb
jmp
inc
sub
jg
dec
cmc
cmp
jmp
sbb
and
test
sbb
cmp
lods
mov
mov
ins
jge
cwde
sbb
out
mov
sahf
sbb
aam
pushf
movs
jno
or
mov
adc
retf
retf
fwait
sbb
cmp
retf
inc
pop
lods
dec
retf
cwde
mov
push
push
cwde
mov
cmc
fdivr
test
mov
sbb
mov
pop
movs
loop
push
adc
out
jl
fst
or
ret
jl
jecxz
fucom
enter
pushf
push
inc
sub
dec
call
lods
pushf
adc
mov
lods
hlt
gs
push
jmp
cmp
jns
jns
mov
jo
jmp
pop
aaa
mov
or
mov
into
mov
cld
rcl
cmp
adc
xchg
mov
in
enter
sub
mov
or
mov
pop
sbb
shl
scas
push
jo
cmc
lods
xchg
in
lds
lods
sbb
adc
out
pop
xchg
shr
pushf
push
jns
sbb
retf
mov
jo
add
pop
lods
inc
xlat
or
cmp
xchg
mov
fldcw
mov
ret
loop
fist
lods
lods
fiadd
adc
xor
mov
add
mov
cld
cmp
jns
mov
dec
jl
sbb
enter
jnp
in
dec
out
jbe
sbb
jl
loope
ins
(bad)
cmc
or
jl
in
mov
inc
xor
inc
sbb
push
ins
jb
or
jp
mov
sbb
mov
ret
pushf
loop
dec
sbb
pop
jl
das
mov
das
adc
repnz
and
jecxz
in
fist
or
mov
jl
fcmovnbe
cmp
adc
and
xor
lods
cmp
sbb
imul
mov
mov
dec
stc
jnp
jmp
jl
dec
pop
inc
jl
sub
jge
jl
jmp
jns
sbb
out
jl
sahf
mov
xchg
cmp
fidivr
or
cli
xchg
fstp
jmp
jns
jl
fistp
dec
pop
fdivr
sub
or
lods
clc
test
test
test
fidivr
dec
adc
cmp
or
idiv
not
jl
rcl
mov
cmps
jl
mov
jl
xchg
aaa
inc
dec
ret
sbb
clc
mov
pop
jbe
sub
push
sbb
mov
test
les
mov
retf
push
or
or
hlt
push
pop
sub
sbb
pop
push
loop
xchg
mov
cs
push
popa
pop
mov
cli
popa
inc
scas
xor
sbb
test
outs
cld
call
jl
inc
xchg
sub
sbb
jecxz
jmp
mov
jge
and
shl
jge
dec
call
add
fadd
inc
call
dec
xor
jne
test
sbb
push
fist
jbe
xchg
and
mov
cmc
dec
xchg
inc
lods
push
les
mov
jl
dec
sub
push
dec
repz
call
pop
or
sub
rcr
cmp
dec
pop
cld
ret
mov
jbe
xchg
fbld
push
mov
mov
arpl
ss
fcom
push
adc
shl
add
shl
lds
movs
pusha
xchg
jb
test
bound
inc
cmp
cmp
adc
es
stc
stos
cdq
rcl
clc
loope
xor
imul
push
dec
xacquire
sub
push
test
test
jbe
mov
push
test
mov
fidivr
scas
leave
pop
rcr
bound
sub
fiadd
xor
jmp
push
stc
add
fdiv
loope
arpl
fdiv
sbb
push
pop
xor
sti
adc
je
rcr
and
push
mov
cdq
cmp
clc
pop
xchg
scas
test
(bad)
mov
aas
sub
ret
arpl
ins
and
pop
test
xchg
push
jl
inc
or
jae
pop
pop
(bad)
icebp
dec
jle
lods
sub
movs
arpl
fcom
retf
or
xor
and
jl
jmp
sbb
xchg
leave
lods
mov
pushf
sbb
mov
imul
jle
sbb
lods
or
jl
loop
fbstp
sbb
mov
sbb
js
cwde
mov
jl
or
outs
mov
sbb
sar
sar
jl
jecxz
repz
cdq
adc
call
push
fs
mov
fist
hlt
(bad)
in
hlt
test
movs
sbb
and
inc
inc
sbb
cli
jne
mov
mov
lds
jl
sbb
adc
es
les
jns
adc
sbb
les
(bad)
cmp
push
sub
and
pop
(bad)
ret
xchg
call
(bad)
dec
ins
xlat
jle
or
mov
pop
mov
rcr
fs
sbb
inc
lods
call
ins
or
test
out
popa
sub
les
lods
imul
cmp
inc
push
das
retf
ins
push
test
hlt
gs
lods
out
enter
mov
ds
cwde
cli
test
jns
jl
cld
dec
pop
js
lods
mov
push
dec
jns
ins
fdivr
sub
outs
movs
mov
jle
imul
jl
xlat
mov
(bad)
cld
mov
cmps
sahf
cld
xchg
outs
cld
lods
jns
movs
sbb
scas
lods
push
les
pop
retf
aaa
mov
pop
sar
into
jle
jle
mov
out
mov
adc
xchg
(bad)
fiadd
paddusw
cld
ss
dec
es
inc
push
sar
dec
repz
fld
in
xchg
sbb
aam
outs
push
inc
inc
jg
adc
jmp
lahf
push
aam
sbb
pop
ins
movs
mov
sbb
iret
clc
xlat
xor
or
and
shr
sbb
out
inc
jecxz
sbb
inc
adc
jge
test
add
enter
xchg
adc
jae
inc
mov
arpl
push
enter
test
out
dec
and
add
nop
sbb
sub
(bad)
je
push
mov
(bad)
inc
sti
xor
clc
add
sbb
mov
push
loopne
loope
shl
dec
mov
test
stc
xchg
adc
push
and
popa
sti
xor
inc
add
push
push
mov
mov
xor
jo
sbb
ins
pop
add
sbb
adc
shr
mov
inc
sar
sar
push
dec
inc
mov
out
out
call
inc
xor
mov
rcl
xor
sahf
inc
jmp
jb
retf
mov
sbb
frstor
loop
bnd
faddp
adc
shl
jle
push
retf
jle
aam
push
out
sbb
arpl
push
loop
popa
ret
mov
repz
clc
movs
in
test
push
loope
fidivr
jle
jne
ins
adc
aam
push
enter
adc
jb
pushf
xor
sbb
mov
xchg
movs
fidivr
aad
lds
ins
fsub
push
aas
cli
ins
xchg
(bad)
cli
hlt
xchg
inc
cli
lods
push
mov
ins
jmp
in
dec
sbb
jle
adc
dec
adc
aad
add
aas
int3
vmovsldup
sbb
aad
inc
and
push
pop
nop
cmps
sub
dec
inc
shl
sbb
jl
xchg
sahf
xchg
cmp
adc
(bad)
imul
mov
pop
fwait
mov
stos
jle
jne
pop
aaa
retf
mov
sbb
jmp
or
ja
sub
xchg
xchg
cmp
sbb
push
cmps
ins
jl
fdiv
cwde
xchg
test
aas
(bad)
mov
xchg
cli
jns
dec
das
jl
enter
sub
ins
retf
data16
pop
rol
mov
imul
mov
xchg
pop
jl
jl
mov
rcl
mov
(bad)
lods
xor
mov
mov
lods
or
sahf
jl
jl
pop
outs
idiv
in
fidivr
ins
cwde
fst
enter
mov
or
in
or
mov
in
movs
popa
add
mov
sbb
and
lods
sub
sub
in
jnp
in
push
jl
test
lods
sar
lods
mov
mov
or
sbb
xchg
dec
jp
jl
pusha
movs
in
popf
jo
ret
ja
out
adc
cdq
dec
xlat
call
mov
pop
sub
sbb
jo
cmp
adc
jl
cld
rol
ror
pop
add
mov
out
mov
sbb
and
adc
dec
rol
in
clc
adc
jle
in
leave
xchg
sbb
iret
jmp
aad
jl
outs
mov
addr16
scas
xor
mov
call
mov
mov
push
add
push
jne
cmp
stc
mov
repnz
mov
push
or
xchg
stos
push
or
and
jmp
xchg
cmp
fld
not
imul
mov
adc
cmp
in
mov
jl
repnz
mov
xchg
ins
ins
out
loop
sar
pop
loope
jl
jbe
mov
sbb
pop
adc
in
jne
push
fs
or
xchg
pop
ins
push
out
jmp
mov
mov
inc
cld
mov
ins
movs
adc
ret
rol
test
stos
jae
ins
cmp
push
xor
mov
or
jecxz
lods
add
xor
repz
adc
and
mov
sub
in
dec
cmp
add
jecxz
stos
stc
mov
fimul
imul
sbb
cli
sbb
mov
ficomp
mov
call
pop
pop
dec
fstp
jns
hlt
ins
fmul
stc
cld
jns
jmp
test
mov
mov
repz
or
or
sbb
jbe
fcomp
jbe
jbe
adc
icebp
mov
rcr
(bad)
inc
cmp
lods
sbb
mov
jl
jl
xchg
xchg
ja
addr16
push
pop
inc
dec
aaa
xor
sar
not
fidivr
(bad)
icebp
outs
and
adc
ins
outs
mov
jl
int
es
scas
loopne
xchg
sub
push
es
xchg
movs
movs
fld
neg
mov
loop
sub
mov
xchg
dec
in
test
and
mov
push
jle
aad
aaa
and
iret
xchg
cmp
pop
(bad)
call
add
jo
push
mov
sbb
jge
lds
sbb
das
popa
cmc
add
loop
sbb
int
dec
xlat
sbb
push
adc
add
xchg
hlt
add
push
gs
movs
pop
in
ret
call
sub
cmp
pop
sbb
les
mov
pop
mov
xlat
mov
sub
cmp
fstp
mov
test
xor
push
fdivr
or
sub
retf
mov
cdq
jbe
add
mov
test
inc
xchg
lods
adc
es
jae
push
int3
push
arpl
cmc
stos
push
pop
in
test
lds
fidiv
movs
mov
jb
jne
gs
push
bound
aam
inc
cld
adc
hlt
dec
adc
icebp
paddq
ror
sahf
ins
xchg
pop
test
repz
in
adc
lock
repz
push
ret
dec
mov
mov
cmp
pop
inc
pop
xor
mov
sbb
sbb
jl
adc
ret
add
mov
jb
cmc
cmp
bound
inc
jne
sub
add
and
fadd
and
icebp
inc
or
push
sar
arpl
sub
sar
push
xchg
dec
xor
mov
sbb
jl
mov
ins
mov
xchg
sbb
push
pusha
jl
les
xor
and
movs
push
(bad)
in
push
cmps
sbb
adc
mov
pop
aas
in
mov
iret
ror
add
mov
scas
xchg
adc
dec
push
jl
dec
dec
mov
outs
arpl
jl
pop
push
push
sbb
sub
ds
cwde
cs
and
sbb
clc
(bad)
dec
leave
push
adc
or
mov
jl
fisubr
add
lods
cmp
shr
dec
aaa
ins
or
repz
fmul
test
cwde
mov
xchg
push
pop
cmp
jl
nop
cmp
sub
pusha
jl
or
(bad)
out
mov
mov
ror
sbb
lods
add
ins
jns
jbe
inc
mov
mov
mov
xchg
movs
movs
repnz
mov
les
sbb
rcr
jns
ins
cli
cmc
push
(bad)
aad
gs
idiv
xchg
jl
sbb
cli
aad
jl
fnsave
push
mov
pop
lods
ss
push
mov
xchg
xchg
cmps
ror
(bad)
sbb
je
pop
ficom
fsub
push
les
ja
test
(bad)
imul
push
movs
in
xchg
sub
test
push
inc
mov
dec
test
enter
fsub
ret
mov
push
int3
movs
mov
lods
push
push
sbb
push
aas
dec
lock
cs
cli
lods
(bad)
push
mov
pop
cwde
push
dec
mov
js
push
movs
pop
push
cmp
test
dec
outs
push
jle
sub
jle
div
lods
(bad)
ins
mov
popf
cmps
sti
xchg
adc
xchg
xchg
push
pop
inc
fwait
aaa
lods
jmp
pop
mov
into
call
adc
lods
sbb
add
jl
xchg
or
sbb
mov
int3
psubsb
fld
das
pop
cmc
jle
jle
sbb
repz
in
out
mov
sbb
sub
push
mov
call
(bad)
adc
(bad)
sbb
lahf
js
scas
adc
pop
pop
push
les
xor
iret
sti
and
dec
repz
xchg
sub
ret
ret
sbb
and
add
pushf
inc
adc
xor
mov
outs
add
repnz
jl
xor
adc
retf
jb
pop
push
push
cmp
in
ins
(bad)
inc
jo
adc
js
add
pusha
shr
mov
and
cmp
lock
adc
push
fxch
mov
scas
call
add
sub
pop
xor
movs
shl
jp
push
mov
mov
and
pop
cli
inc
movs
xchg
push
stos
mov
sbb
mov
or
jl
rcr
(bad)
adc
div
out
popa
pop
pop
and
sbb
fcmovu
cmp
retf
sub
out
icebp
mov
add
adc
shl
shl
sahf
loopne
jmp
outs
add
adc
or
ret
popa
clc
jecxz
jno
out
add
fs
loope
sbb
or
les
aam
xor
out
add
or
inc
outs
mov
push
lods
xor
adc
jno
stos
ins
in
fadd
mov
jmp
loope
xchg
das
cli
leave
cld
or
mov
and
pop
lods
test
fisubr
jb
add
jmp
retf
pusha
call
ins
in
dec
inc
popa
call
ficom
mov
(bad)
popa
cli
push
sub
mov
ins
fs
cli
sar
mov
jbe
call
sahf
xchg
sub
pusha
sbb
imul
jnp
loopne
add
fwait
shl
mov
mov
ins
inc
jmp
push
sbb
sti
jmp
in
addr16
mov
jbe
xchg
sbb
pop
in
loopne
shl
mov
mov
lods
xor
mov
mov
mov
adc
cmp
(bad)
mov
jl
lods
mov
jl
mov
or
call
jl
push
mov
mov
in
mov
xor
xchg
pop
jbe
pop
push
in
jae
cld
loop
js
pop
outs
jl
lods
cwde
sbb
fsubr
in
mov
dec
push
pop
outs
jnp
push
ins
sub
cmp
pushf
push
das
sbb
cli
inc
pop
xchg
popa
loop
movs
dec
adc
or
cdq
sub
ins
xor
mov
xchg
dec
nop
in
outs
repnz
test
dec
jl
mov
les
jno
mov
call
ins
dec
nop
jo
call
ins
sub
mov
jecxz
sbb
sbb
lock
add
adc
jmp
(bad)
jmp
fs
jo
jl
mov
faddp
fsub
push
mov
xor
mov
aad
in
lods
push
out
jno
sbb
loop
mov
jne
mov
sub
loopne
mov
adc
dec
ins
pushf
in
test
test
xor
adc
mov
mov
pushf
lods
in
repnz
cli
jo
les
jl
in
mov
mov
jl
dec
xchg
movs
sbb
(bad)
mov
dec
push
call
mov
(bad)
aaa
test
sbb
xchg
or
test
rcl
(bad)
cmp
(bad)
jl
jo
add
fs
sbb
cmp
out
lods
ins
and
inc
push
mov
dec
jmp
bound
push
ins
int
lods
xchg
mov
inc
mov
dec
ret
sar
jb
add
adc
in
sub
lods
jmp
jb
dec
xor
jl
xor
ret
xchg
push
pop
adc
ins
repz
or
sbb
fucomi
dec
retf
jl
pop
sbb
or
sbb
lods
dec
dec
mov
rcr
cmp
lods
fsubr
fimul
ins
mov
sbb
aaa
jp
imul
les
pop
dec
jbe
sar
jl
jmp
test
mov
mov
(bad)
movs
outs
lods
call
adc
fcomp
mov
mov
fidivr
pop
pop
dec
sbb
sbb
adc
or
out
xchg
(bad)
jl
lods
cmps
test
test
mov
pushf
daa
sbb
xor
push
jl
dec
(bad)
jo
inc
jl
xchg
xchg
enter
rcr
call
jl
sbb
sbb
lods
in
cwde
aad
mov
les
push
push
fimul
mov
movs
adc
(bad)
mov
adc
sbb
movs
inc
and
loope
xchg
das
adc
ins
xor
adc
xchg
clc
mov
cs
lods
ds
jle
arpl
pushf
inc
sbb
jg
pop
mov
hlt
push
inc
inc
sbb
mov
cs
lods
xchg
loopne
push
mov
mov
jge
ins
and
popf
xor
in
and
and
xor
sbb
scas
loopne
cmp
clc
mov
inc
ja
cwde
xchg
sbb
call
add
cwde
sub
jo
jl
call
not
sub
repz
cmp
jmp
std
shl
xchg
and
adc
push
ret
lods
ins
inc
mov
imul
adc
jae
in
int
fist
lds
movs
adc
sar
jne
mov
gs
in
clc
push
jb
inc
in
cmp
add
jl
mov
out
jl
pop
xchg
fild
cld
xor
jl
push
dec
pop
sbb
mov
add
repz
shr
sar
jl
pop
push
mov
sbb
jl
(bad)
fsub
rol
ret
mov
mov
int3
jb
fsub
push
jle
jle
push
inc
call
and
mov
icebp
adc
loope
nop
rol
call
sbb
jae
jno
shr
inc
outs
pop
and
adc
add
loopne
push
les
movs
xchg
cli
mov
sub
and
fistp
jns
cmp
call
cs
dec
push
ins
out
retf
mov
mov
cmp
sub
jae
jle
xchg
outs
icebp
pop
pop
xchg
sub
movs
cmps
xor
mov
cs
imul
test
test
loop
mov
jl
cli
(bad)
jl
sbb
lods
xchg
cmp
mov
lods
mov
jl
add
cwde
mov
js
adc
out
pop
pop
jle
sub
or
ret
loopne
std
pop
dec
ins
test
jl
jl
push
ins
mov
cmps
lods
jae
cmp
mov
and
cmp
enter
adc
and
inc
mov
jbe
sbb
hlt
cmc
xchg
mov
je
les
adc
xor
pushf
inc
pop
(bad)
test
xchg
movs
and
pop
mov
aad
in
cmc
fwait
push
xchg
jns
ins
mov
mov
sbb
jl
pushf
xchg
pushf
cmps
cmp
xchg
(bad)
jl
mov
cmp
jl
push
mov
and
xchg
dec
cmps
jnp
xchg
mov
(bad)
cmp
jl
out
jecxz
pop
not
fmul
sbb
shl
mov
inc
dec
xor
mov
lods
lds
fsubr
inc
pop
jge
ret
ins
ds
gs
pop
out
or
in
push
outs
icebp
hlt
add
dec
pop
mov
mov
sbb
pop
or
fsub
not
(bad)
mov
xlat
outs
pop
cmps
out
ins
sahf
push
xchg
movs
push
scas
pop
push
push
jl
cli
inc
in
aaa
shl
jmp
imul
out
(bad)
into
leave
fidiv
movs
pusha
jl
out
data16
movs
sbb
(bad)
movs
inc
mov
(bad)
cmc
fstp
aad
push
test
movs
aas
mov
cli
gs
mov
ins
adc
outs
data16
push
mov
dec
movs
fstp
xchg
clc
test
sub
fidiv
scas
cwde
repz
retw
or
jge
jl
mov
in
data16
jmp
adc
and
mov
jl
lods
repnz
inc
ja
imul
mov
mov
push
xor
or
cmc
shl
push
(bad)
mov
rcr
dec
data16
mov
call
sub
xor
imul
outs
outs
mov
sar
sbb
popa
leave
sbb
push
mov
dec
jno
repz
xchg
cmc
nop
dec
jo
add
jl
mov
cmps
call
push
jl
stos
cli
mov
retf
test
loop
push
or
sbb
rcr
out
mov
pusha
ins
loopne
cmps
lock
jge
and
xor
xor
movs
cmp
xor
adc
stos
and
test
xchg
in
fcom
les
mov
add
pop
mov
push
movs
jmp
rol
cld
sbb
mov
sbb
ins
(bad)
sbb
xchg
inc
call
or
cmc
icebp
(bad)
inc
call
jl
push
add
xor
dec
and
imul
ins
adc
cmps
hlt
add
in
sbb
sbb
jle
mov
push
mov
push
std
sti
cmp
jbe
or
mov
jo
jl
cmps
pop
mov
imul
out
push
test
and
jge
sbb
retf
pusha
mov
test
sub
add
jl
sbb
mov
jl
arpl
ins
mov
mov
loop
xchg
mov
mov
xchg
fisttp
adc
push
cli
outs
in
(bad)
jns
cmp
iret
test
jmp
cld
xchg
jl
call
lods
and
push
idiv
fwait
lods
cmc
jno
xchg
sub
call
pop
xor
enter
lods
sbb
sbb
data16
push
jl
les
popa
out
in
cdq
push
in
test
mov
lods
mov
push
push
jl
or
dec
mov
dec
out
call
xor
xor
lods
ror
pop
inc
nop
pushf
xchg
pusha
out
in
in
add
ins
inc
lock
loopne
test
fimul
mov
mov
mov
in
test
add
mov
xchg
cmc
push
call
enter
lods
jo
cmp
sbb
lods
push
call
les
loop
dec
mov
sbb
loop
(bad)
sbb
mov
xchg
cld
xor
ja
and
int3
push
push
mov
xchg
dec
mov
sbb
ja
and
sbb
xchg
mov
add
lds
cmp
ins
shl
hlt
out
xchg
out
hlt
int3
in
in
les
xchg
pop
in
adc
mov
dec
sbb
and
mov
xchg
mov
xor
in
enter
dec
cmp
jl
jl
inc
jno
test
mov
ins
dec
cmc
pop
cli
in
movs
sbb
dec
sbb
xchg
dec
lock
in
loop
cmp
test
jae
call
adc
jl
and
fstp
jp
jl
je
mov
fbstp
shl
mov
cmp
push
call
add
inc
mov
and
sbb
inc
jl
fistp
mov
mov
inc
and
sub
mov
xchg
mov
mov
dec
shr
loop
pop
repnz
pop
adc
pop
lods
cwde
jae
shl
arpl
sub
(bad)
mov
ins
ror
sbb
ins
call
mov
imul
dec
cmp
sub
or
retf
mov
jl
mov
inc
pop
push
dec
sar
sub
push
or
jmp
mov
sbb
sbb
cld
enter
mov
call
enter
cmp
js
jo
mov
sub
fst
(bad)
dec
mov
cmps
sar
ja
call
aaa
fsub
pop
adc
idiv
rcl
icebp
(bad)
adc
cmps
push
jl
fild
inc
jmp
push
js
fcomi
call
call
fisub
jne
sar
push
xchg
sub
xor
adc
hlt
fnsetpm(287
sub
mov
out
sbb
xlat
stos
test
je
fs
call
in
stos
xchg
xor
std
cmp
or
out
adc
jl
cmp
retf
sbb
stc
add
mov
and
mov
loope
bound
outs
fisttp
lock
cmp
dec
fisubr
push
in
inc
mov
popa
cld
test
mov
cmc
lds
mov
lods
lds
pop
popa
mov
inc
call
out
and
adc
mov
sub
popf
gs
mov
mov
rcl
addr16
sahf
adc
mov
(bad)
sbb
lods
sub
fisubr
pop
imul
les
xchg
push
xchg
push
out
std
inc
push
leave
call
es
mov
in
cwde
aad
xchg
call
push
fs
inc
lods
test
dec
jne
lods
repnz
gs
push
mov
inc
fsub
jb
adc
push
call
and
aam
outs
les
popf
mov
movs
icebp
lods
xchg
ror
rcr
sbb
adc
ins
jl
add
data16
mov
rcr
mov
lods
xchg
mov
mov
ins
xor
adc
sbb
jle
sar
jl
ror
and
jb
repnz
jmp
leave
in
fst
cmp
icebp
loop
or
add
adc
xor
mov
push
xchg
int3
adc
sbb
xor
pop
lock
shr
sbb
xchg
lock
inc
mov
sbb
(bad)
mov
mov
sbb
push
scas
jl
mov
sub
pop
lods
mov
lods
push
inc
xor
popa
add
into
jl
pushf
and
push
cmp
dec
sub
jle
mov
push
icebp
lods
mov
ds
pushf
mov
aam
add
jl
push
loop
rcr
inc
ret
dec
mov
dec
jl
mov
sbb
fsubr
fsub
mov
jl
mov
mov
push
push
pop
fcmovnbe
dec
jns
call
idiv
rol
lds
outs
repnz
ins
add
adc
jl
lods
in
repnz
sbb
xor
dec
addr16
and
mov
cmp
and
sbb
mov
lods
jecxz
stos
repz
adc
add
inc
hlt
cmc
xor
dec
fst
test
jns
jl
adc
pop
aam
in
add
lods
inc
cmps
movs
jmp
jne
mov
jl
pop
lds
cmp
push
fist
fisub
xlat
ss
in
mov
data16
cli
xchg
xchg
(bad)
lods
mov
jl
enter
out
mul
pop
or
pop
jge
daa
jl
sbb
les
pop
addr16
lods
ja
xchg
pop
xchg
xor
cmps
adc
stos
shr
sbb
mov
and
out
popa
sbb
ret
imul
out
cs
js
ds
pop
sbb
dec
mov
sub
aam
pop
xchg
test
(bad)
or
outs
sub
jne
cld
mov
or
lods
sbb
xchg
push
mov
push
sahf
jle
outs
or
jl
inc
mov
push
daa
jl
js
ins
in
in
movs
mov
lods
(bad)
into
cmp
xchg
(bad)
xchg
jbe
push
out
cmp
(bad)
popf
push
pop
or
cmovge
jl
in
aad
lds
xchg
lods
movs
ins
xchg
das
popf
test
or
ins
clc
mov
outs
les
mov
and
je
cmc
fs
push
mov
loopne
rcl
repz
sti
mov
in
ret
jl
int3
xchg
out
or
or
in
xchg
arpl
xor
ins
and
add
popf
rcr
sbb
jmp
xor
sbb
in
jbe
mov
and
sub
push
jle
lods
lods
jo
shl
and
mov
dec
xchg
and
popa
dec
dec
push
sbb
enter
mov
add
clc
lock
ror
outs
iret
sub
dec
out
mov
adc
cwde
add
and
test
sar
cli
jmp
or
inc
xlat
sbb
sub
dec
jl
pusha
mov
and
adc
pop
pop
shr
push
sbb
push
ret
ins
cmp
sub
nop
movs
jne
sti
stos
mov
mov
xchg
lock
adc
cmp
xor
frstor
xor
sbb
ret
pushf
sar
shl
call
inc
cli
icebp
push
cmp
and
jl
sub
movs
(bad)
(bad)
movs
fdiv
in
jb
fisub
ins
adc
hlt
imul
sbb
or
and
ins
sahf
sub
out
int
xor
jl
add
hlt
in
jne
movs
retf
lods
xchg
cli
push
imul
xor
inc
jne
mov
(bad)
gs
mov
inc
popa
and
sbb
loopne
add
mov
xchg
mov
cmp
pop
xor
lods
out
or
cmps
rol
or
les
ins
mov
imul
mov
mov
call
jmp
movs
dec
dec
sti
sbb
aaa
cmp
movs
inc
lods
add
pop
cld
outs
mov
ins
lods
call
xchg
in
mov
adc
cmp
dec
lea
movs
sbb
dec
pop
cdq
dec
push
cmp
adc
je
mov
add
pop
dec
pop
fld
fsubr
addr16
ins
pop
sub
daa
mov
cli
add
xchg
aaa
repz
enter
(bad)
jnp
push
mov
dec
and
out
imul
loopne
sbb
ins
mov
dec
ins
popa
mov
cli
mov
cdq
mov
push
push
lods
in
dec
enter
fcomp
int
fild
fisttp
push
sbb
mov
adc
sbb
dec
sbb
push
pushf
add
pop
cmp
fsub
shr
lods
pop
in
xchg
lods
mov
lods
imul
and
sbb
and
pop
inc
pusha
ins
cmp
sbb
(bad)
dec
sbb
int3
call
or
inc
lods
movs
enter
inc
test
ror
cmp
in
mov
lods
and
add
ins
out
adc
ins
fst
adc
cld
xchg
inc
xchg
fidiv
mov
sbb
xor
push
lods
pop
shl
push
mov
push
or
nop
sub
dec
rcr
xor
enter
lods
call
lods
in
add
fst
mov
ins
ja
shr
add
adc
ret
sbb
or
ins
mov
or
das
inc
ins
push
jno
ins
cmp
sbb
mov
in
ins
jecxz
rol
sbb
ret
lods
test
mov
jl
je
or
jl
push
test
xchg
fs
jl
stos
fld
pop
shl
mov
popa
jl
loope
outs
rcr
imul
adc
or
movs
call
and
cli
(bad)
fadd
jb
pop
(bad)
fistp
mov
sub
ins
cld
xchg
mov
xchg
(bad)
call
sub
adc
mov
cld
pop
cmp
jo
mov
loop
jae
or
jmp
sahf
ins
xchg
mov
sbb
into
rcr
fcomp
je
cmp
les
pop
sbb
imul
lods
or
fidivr
stos
call
sbb
jns
push
jl
jbe
aaa
push
ins
jmp
leave
sbb
adc
imul
cmp
mov
test
lods
cwde
add
inc
sub
pop
sar
sub
cmp
add
lods
mov
fsubr
fidivr
push
jl
fcomi
mov
(bad)
sbb
mov
dec
adc
xchg
data16
ins
push
mov
call
push
pop
cmc
frstpm(287
fcmovbe
in
fimul
fsub
test
sbb
fsub
adc
fimul
and
hlt
inc
out
in
arpl
xlat
jo
jl
(bad)
mov
movs
scas
dec
mov
ins
test
cmps
je
xchg
fs
lods
push
retf
retf
xchg
xor
ja
std
push
push
addr16
dec
push
inc
movs
adc
jle
sahf
mov
pop
(bad)
dec
scas
jmp
call
aas
pop
inc
push
not
out
mov
retf
rol
shr
xchg
lahf
cmp
xchg
sbb
and
push
dec
mov
add
popa
xor
aad
ins
push
call
out
sbb
hlt
retf
mov
call
ins
cwde
imul
hlt
cdq
or
jle
enter
sbb
jecxz
mov
mov
dec
inc
mov
lods
ss
es
or
leave
and
in
xchg
mov
lds
mov
loop
arpl
xchg
push
rol
jne
nop
gs
rol
call
push
adc
add
lods
in
dec
aam
sub
push
sbb
icebp
movs
call
rcr
fidiv
and
inc
mov
add
jne
ins
retf
(bad)
xchg
outs
ins
push
in
in
adc
fst
jmp
adc
fsub
in
fidiv
icebp
in
lds
movs
pop
fld
(bad)
hlt
leave
jne
sbb
xchg
(bad)
shl
fmul
mov
or
xchg
and
add
out
into
push
arpl
movs
jae
and
dec
adc
lock
loopne
push
rcr
push
mov
nop
pop
sub
and
inc
rcr
xchg
out
ds
push
xor
dec
adc
jg
jp
mov
(bad)
in
pop
xor
jmp
mov
push
mov
xchg
dec
mov
adc
sub
mov
sbb
fisttp
leave
fstp
fmul
jnp
jne
and
dec
adc
jbe
cli
enter
pop
test
cwde
jl
jecxz
in
js
bound
dec
fld
cmp
and
jl
push
in
sbb
in
and
lods
mov
les
jmp
jo
ja
out
jl
jo
ret
mov
pop
lods
add
popf
fstp
and
fist
arpl
xchg
mov
rcr
jecxz
repz
adc
xor
inc
mov
test
mov
(bad)
fcom
in
fadd
inc
dec
lods
test
xchg
push
movs
repnz
lds
mov
mov
es
lods
ss
inc
xchg
jo
sbb
data16
push
cwde
xchg
pop
cmps
cmps
mov
cmp
pushf
(bad)
adc
cwde
lods
aaa
out
inc
neg
cld
ja
sbb
ins
sbb
cmp
dec
pop
xlat
loopne
adc
dec
movs
adc
sahf
jl
push
jl
push
mov
dec
cmps
cmp
in
jl
pop
dec
sub
das
sbb
push
mov
outs
mov
out
(bad)
in
push
mov
cwde
cmps
ins
xchg
outs
pop
adc
jle
ja
xchg
push
jne
cwde
sbb
mov
jns
scas
pop
jl
sbb
adc
cmps
into
dec
ss
stos
fidivr
es
out
pop
cmc
sub
(bad)
rcl
test
fisub
test
jne
adc
sbb
add
aam
les
mov
enter
mov
inc
outs
nop
and
xor
adc
pop
add
repz
pop
jecxz
rcr
mov
call
jae
test
(bad)
and
call
call
sbb
add
movs
outs
in
mov
jge
jl
xchg
xor
jb
pop
push
inc
sbb
ret
adc
push
call
mov
mov
sub
ins
inc
nop
cmp
imul
mov
mov
js
mul
sar
sar
loopne
jne
adc
add
fistp
jle
nop
ins
dec
mov
scas
xor
movs
rol
fistp
mov
cmc
jno
scas
sub
jne
sbb
mov
pop
shr
rcl
xor
movs
sti
add
inc
icebp
push
or
inc
fisttp
adc
xor
mov
push
int3
push
cmp
pop
lock
mov
ret
repnz
int3
popa
xor
or
fucom
mov
sbb
add
shr
xor
inc
and
stos
push
adc
inc
and
bound
jb
inc
sbb
test
mov
mov
movs
retf
movs
ret
in
rol
xor
fstp
inc
dec
ins
mul
ja
ret
push
cmp
call
cli
sbb
jb
cld
int3
inc
fisub
push
sub
push
pop
and
sbb
stos
inc
jbe
hlt
xor
popa
pop
mov
mov
jbe
mov
dec
outs
call
in
sbb
mov
ffreep
cli
in
mov
xchg
mov
sbb
sub
dec
sbb
imul
xchg
mov
stos
mov
xor
out
retf
(bad)
(bad)
fist
jmp
(bad)
mov
pop
or
mov
aaa
dec
lods
cmp
jns
jl
addr16
pushf
inc
sub
ins
frstor
fstp
pop
or
and
retf
jmp
sub
call
push
jno
fldln2
mov
lods
call
lods
sbb
js
in
lea
iret
dec
cmc
rcr
jmp
sub
ins
jmp
dec
call
xor
jno
xor
jl
pop
loop
cmps
mov
out
ins
iret
xlat
xchg
shl
sbb
or
jl
pop
out
cld
xchg
mov
dec
in
sahf
xor
stos
push
loop
lods
sub
or
inc
enter
xchg
mov
stos
xor
mov
or
or
mov
stos
(bad)
jl
loopne
lock
push
pop
call
imul
outs
loopne
jge
mov
call
lods
fidiv
in
sub
call
les
sbb
ja
cs
sbb
mov
ffreep
lods
cmp
pop
adc
cmp
rcl
sbb
dec
lock
loop
xchg
addr16
pop
in
imul
mov
xchg
cld
and
loop
repz
fistp
push
mov
cmc
aad
in
fistp
mov
cmc
inc
arpl
dec
mov
jl
push
lods
sub
sbb
sbb
les
in
pop
jl
imul
mov
sub
jl
mov
imul
test
xchg
in
js
mov
push
or
je
adc
sbb
popa
bound
je
(bad)
(bad)
cmps
adc
mov
cdq
xchg
sbb
dec
das
rcr
cmps
mov
rol
dec
pop
loope
pop
icebp
xchg
test
in
add
push
jae
imul
fist
ret
pushf
push
sub
jb
xchg
jl
ins
or
scas
mov
push
mov
loop
repnz
add
cwde
pop
and
sbb
jl
xor
push
inc
stos
or
jmp
imul
sub
mov
pushf
lods
fsubr
pop
fcmovu
mov
call
dec
or
sbb
ins
or
stc
push
test
fcmovne
push
test
in
ficomp
cld
mov
sub
lds
js
sar
test
push
add
sbb
or
call
fsub
mov
enter
cwde
sbb
push
ins
push
fisttp
js
mov
jl
in
ficomp
fcom
les
lods
push
dec
dec
push
sbb
sbb
sbb
sbb
sbb
gs
lods
inc
in
fcmovbe
adc
(bad)
fsub
aam
mov
les
fs
adc
movs
xchg
cld
xchg
fadd
jns
lods
ja
jmp
sahf
addr16
push
retf
std
int3
push
inc
pop
push
inc
aaa
or
daa
fimul
pop
outs
mov
mov
fistp
mov
out
out
(bad)
push
subps
(bad)
cwde
aas
pop
dec
pop
pop
(bad)
cwde
jg
(bad)
mov
lahf
mov
iret
jmp
cmps
pop
(bad)
fild
fist
xchg
push
and
xor
inc
cmp
xchg
jl
fcmovb
fcom
loopne
lock
xor
inc
ficom
popa
jno
cmp
(bad)
fidiv
fadd
les
mov
pushf
repnz
add
adc
inc
shl
xchg
push
ret
xchg
cwde
repz
push
dec
add
cmp
gs
xchg
aad
jmp
call
loope
dec
daa
daa
sbb
add
data16
ins
hlt
inc
ins
popf
xor
fwait
lods
push
call
xchg
data16
push
inc
rcr
es
fcomi
mov
call
xchg
ffreep
movs
leave
mov
cmp
fild
in
and
sbb
inc
inc
and
and
adc
xchg
ins
hlt
or
jb
aam
ins
inc
lods
mov
dec
movs
adc
test
pop
and
enter
jmp
add
jl
fdiv
je
dec
sbb
cld
retf
repnz
shr
sbb
fcom
jb
pop
mov
mov
push
xor
xor
in
push
adc
xchg
sbb
pusha
push
leave
shr
(bad)
fs
fxch
shr
xchg
adc
and
push
push
mov
pop
sub
movs
arpl
adc
cmp
cmp
dec
fcom
shl
mov
xor
dec
jl
mov
sub
jl
or
fst
xor
ret
push
outs
push
jl
xchg
dec
jmp
ins
adc
xchg
xor
cld
cld
push
(bad)
mov
mov
mov
jle
jae
call
ja
pop
dec
xor
adc
cs
in
test
ret
push
movs
cmp
std
xchg
clc
jns
ins
cmp
test
xor
movs
inc
and
jl
retf
adc
dec
inc
sub
or
movs
mov
dec
xlat
ins
fisttp
mov
xor
push
out
cld
ins
mov
jns
call
addr16
pop
push
xchg
xchg
sar
rcl
retf
xor
fild
fdiv
jecxz
pop
adc
retf
lods
xor
inc
mov
xchg
jl
sbb
call
aam
in
add
and
jl
xchg
cmp
push
xchg
sbb
in
sub
sbb
aad
cmc
mov
ss
push
je
xchg
outs
xchg
xchg
cmps
lods
dec
mov
(bad)
mov
cld
div
pop
je
aaa
dec
imul
ins
sub
lods
test
mov
push
jl
sbb
jns
cmp
(bad)
dec
xlat
adc
out
adc
push
pop
push
aaa
(bad)
xchg
push
lods
nop
cmp
mov
mov
mov
dec
lods
jge
ds
out
(bad)
mov
mov
jl
ins
pop
cld
push
movs
test
cmp
sub
ins
xchg
mov
push
jl
pop
(bad)
scas
cwde
xchg
jmp
clc
add
cmp
dec
data16
push
jl
ficomp
(bad)
cmc
stos
out
cmp
cmp
xchg
mov
movs
and
sub
cli
sbb
in
sbb
mov
xor
mul
outs
push
and
jg
add
jecxz
or
scas
fsub
arpl
iret
sbb
(bad)
out
or
add
and
sub
adc
ins
inc
in
pop
xor
add
adc
cld
icebp
movs
shl
mov
rcr
in
out
jl
cmp
inc
adc
adc
jo
mov
dec
loopne
pop
mov
nop
data16
mul
mov
adc
fild
adc
call
add
rcl
jne
sbb
call
sub
pop
pop
out
push
xor
mov
test
cdq
xor
jl
sbb
mov
jmp
call
cdq
sub
or
les
pop
pusha
push
adc
inc
push
cmp
ror
aam
mov
mov
loopne
sti
stos
adc
mov
adc
jmp
sahf
xchg
jae
call
call
jecxz
adc
dec
and
pop
sbb
and
inc
in
loop
xor
add
sbb
aam
mov
mov
add
and
mov
and
add
or
push
js
ins
cmc
bound
aad
fs
and
das
jl
call
or
jmp
mov
icebp
sbb
out
jl
mov
shl
mov
shl
nop
jl
jmp
rcr
cmc
in
or
cmp
mov
ja
sbb
pop
stos
mov
mov
jmp
(bad)
push
sub
sti
dec
jl
or
sbb
cli
jl
sub
mov
pop
mov
dec
jne
in
ror
movs
and
xchg
jae
cld
daa
pop
mov
stos
jmp
mov
(bad)
sbb
cld
or
sbb
or
mov
push
dec
or
retf
js
in
stos
neg
mov
mov
adc
ja
or
fwait
inc
pop
loop
les
push
sub
movs
dec
out
sbb
cmp
jl
les
xchg
lods
inc
call
in
and
fldcw
pop
sbb
mov
xor
inc
cwde
mov
ins
sub
cmp
lods
push
and
popf
adc
sbb
loopne
ret
ins
add
lods
in
ins
pop
jl
lock
cwde
pushf
mov
pop
cwde
mov
iret
xor
cmp
lods
test
ds
sub
cld
mov
inc
sbb
sub
call
pop
test
mov
mov
pusha
shr
adc
out
mov
mov
mov
daa
or
mov
cmps
or
mov
push
mov
jl
fadd
cmc
sbb
and
mov
nop
add
stos
sar
cdq
inc
ja
and
cmp
cmp
int3
out
gs
push
jbe
outs
cld
retf
mov
mov
dec
jbe
repz
sbb
jge
sbb
call
sbb
stos
cmp
retf
xchg
movs
jmp
dec
sub
or
pop
dec
ret
pop
jno
ja
jl
ins
retf
cmps
popa
cmp
mov
lods
dec
jmp
pop
or
test
sub
leave
jl
mov
inc
mov
or
in
mov
addr16
add
retf
retf
or
call
mov
inc
add
mov
xchg
cmp
div
ins
or
cmp
lods
mov
sub
ja
ins
test
push
add
inc
aaa
sbb
std
(bad)
sti
fild
call
fst
fstp
push
sbb
or
cli
mov
fcomp
retf
lods
stos
dec
enter
pushf
jp
push
pop
push
mov
sub
sbb
test
fcomp
leave
je
test
cwde
imul
sub
les
lods
call
enter
pop
and
mov
dec
jl
cmp
sub
xor
jl
not
(bad)
mov
adc
jl
push
dec
inc
in
inc
daa
inc
push
push
not
pop
out
(bad)
adc
jl
les
jbe
cmp
mov
push
sahf
sbb
jmp
sahf
or
pop
aad
lds
mov
movs
retf
out
(bad)
push
rcl
inc
retf
(bad)
and
fadd
in
aam
les
mov
movs
cld
xchg
xchg
test
ja
je
addr16
call
inc
retf
inc
xor
push
nop
aaa
add
daa
(bad)
pop
in
loop
xchg
pop
retf
lods
jmp
inc
jns
rcr
outs
sub
sbb
xlat
(bad)
lods
pop
and
pop
outs
mov
adc
cmps
movs
call
test
retf
xor
fild
jbe
rcr
(bad)
fdiv
add
adc
xchg
jno
xchg
(bad)
cmp
sbb
xor
push
pop
jb
xchg
inc
sbb
das
dec
call
arpl
sbb
jl
fsub
repz
and
inc
pop
push
(bad)
fcom
sub
bnd
in
test
push
loop
xor
call
mov
mov
xlat
ins
xchg
sbb
fild
add
in
loopne
les
xchg
dec
lods
imul
xchg
data16
pop
mov
add
out
sbb
in
and
loop
lds
retf
jmp
jae
jne
shr
push
repnz
push
out
inc
push
xor
imul
hlt
mov
in
in
ins
lods
aam
into
mov
frstor
and
in
fisub
rcr
xor
and
add
mov
repz
push
sbb
dec
ret
jl
fnstsw
jl
les
push
dec
inc
mov
adc
add
loop
rol
push
jge
mov
jno
jb
bound
call
adc
jl
cwde
icebp
loope
shr
adc
inc
int
jb
adc
fs
repnz
push
leave
or
adc
and
and
push
sbb
shr
arpl
lock
jae
rol
mov
pop
add
pusha
mov
mov
xor
and
sbb
xchg
fistp
mov
lahf
sbb
jecxz
push
jg
outs
push
jl
fisttp
das
call
(bad)
pop
pop
cmc
out
sbb
mov
and
into
test
idiv
mov
sub
or
sbb
push
lods
stc
rcl
dec
out
mov
adc
push
shr
ins
jae
or
sbb
enter
mov
js
push
icebp
pop
movs
les
sar
pusha
jl
frstor
imul
mov
xlat
xchg
cmp
mov
xchg
jmp
push
add
lods
or
pushf
xor
push
sbb
les
mov
shr
add
and
xor
inc
fist
arpl
cmp
ret
pop
rcr
cwde
add
adc
and
xor
sbb
cmp
je
je
movs
(bad)
cld
fnstsw
fadd
inc
ja
mov
mov
jl
xchg
mov
(bad)
lods
in
call
ss
data16
mov
lods
cmps
fidivr
(bad)
(bad)
xor
sti
out
imul
jl
js
xlat
sbb
lahf
ins
mov
inc
lods
pop
push
cwde
call
xchg
xchg
or
push
cmps
ret
jl
xlat
xchg
(bad)
dec
sub
call
adc
out
cmp
dec
push
sub
popf
or
push
in
(bad)
cwde
out
cs
xlat
or
add
or
or
jl
mov
mov
daa
pushf
pop
pushf
pop
pop
mov
(bad)
outs
popf
(bad)
pop
mov
cmps
jmp
shl
push
fiadd
es
in
fcom
push
(bad)
in
lds
mov
int3
push
fimul
or
xchg
(bad)
out
in
adc
loop
pop
push
aam
mov
adc
cmc
neg
je
fs
dec
pop
xor
sbb
pop
(bad)
jecxz
lods
rcr
sbb
fadd
je
repnz
loop
jg
and
(bad)
pop
ins
lahf
cld
ret
xchg
scas
in
fdiv
aam
iret
repz
add
rcr
cld
icebp
movs
jno
ficom
(bad)
mov
lods
loope
sub
and
jl
cld
retf
xchg
loop
or
lods
dec
sbb
sbb
lods
mov
ins
inc
sub
cmp
sub
xor
pusha
pop
mov
pop
sub
(bad)
fidivr
aas
mov
outs
jbe
pop
sbb
sar
in
shr
loopne
adc
jge
outs
clc
lock
adc
sbb
jne
sbb
pop
loopne
add
pop
inc
repz
xor
push
push
jg
test
lods
pop
scas
mov
(bad)
shr
loope
ins
stc
out
add
call
xor
fidivr
and
inc
fistp
push
les
push
int3
nop
jb
mov
sbb
mov
ror
adc
inc
loop
loope
stos
jno
fs
and
arpl
call
sub
retf
adc
and
push
xor
bound
inc
sbb
jb
push
pop
je
dec
test
sub
fdiv
mov
mov
mov
jge
jl
and
stos
fldcw
bound
jmp
sub
call
inc
aam
push
jnp
call
mov
call
call
lods
in
jo
call
rol
out
mov
shl
inc
adc
test
movs
add
jecxz
cli
outs
in
lods
cmc
sbb
cmc
hlt
out
cmp
sti
ss
mov
jnp
mov
pop
xchg
sar
mov
rol
sbb
(bad)
push
sbb
dec
and
lods
loop
pop
lods
mov
pop
sbb
cmp
sub
data16
or
in
xor
or
dec
sub
bt
dec
push
pushf
test
mov
mov
ja
aaa
mov
ret
jmp
xor
sub
dec
lods
mov
stc
mov
mov
mov
xchg
call
ins
jmp
xchg
sbb
or
inc
and
enter
jl
mov
inc
cwde
xchg
or
jmp
jle
mov
and
lods
adc
dec
lock
or
ins
mov
sbb
rcr
sub
cmp
lods
fimul
pop
jl
pop
nop
repnz
inc
sub
mov
cdq
lods
add
lods
push
pop
popa
cld
xor
inc
inc
inc
mov
jl
xchg
mov
pushf
mov
js
in
xchg
sub
out
not
loopne
jl
mov
lock
xor
sbb
(bad)
mov
push
cmps
frstor
les
and
mov
es
pop
mov
scas
in
cmc
inc
mov
or
shl
ins
mov
xor
(bad)
ja
sub
dec
in
xchg
arpl
xor
pop
lods
retf
add
mov
movs
aam
sti
pop
(bad)
enter
add
sar
movs
(bad)
stos
pop
xchg
ror
jns
pop
sbb
test
stos
xchg
mov
jle
popf
dec
cmp
retf
mov
test
xchg
push
jnp
ins
or
sbb
xchg
add
push
ins
cld
dec
jnp
mov
lods
xchg
idiv
ins
fdiv
loope
mov
fiadd
jle
cld
adc
jl
push
retf
sub
mov
xor
mov
jae
sub
stos
jb
or
or
sub
mov
push
ret
loop
out
mov
test
cmp
in
or
outs
push
pusha
cmp
(bad)
fld
cwde
hlt
push
cmp
push
jecxz
or
sti
fist
mov
sbb
enter
(bad)
mov
push
sbb
push
ins
js
fild
aaa
jbe
call
dec
pop
out
(bad)
ins
(bad)
lods
dec
mov
cmp
mov
jmp
sahf
sbb
jmp
sahf
or
pop
push
jmp
fcmovb
fdiv
xchg
test
xlat
inc
lods
push
cmp
mov
pushf
and
add
aam
les
cld
xchg
xchg
test
(bad)
call
fild
push
inc
jmp
push
daa
retf
push
stos
pop
cmp
pop
pop
dec
retf
pop
call
jle
out
mov
(bad)
fmul
faddp
out
stos
(bad)
cmp
pop
jmp
mov
aas
fisttp
pop
test
jmp
scas
xchg
iret
cdq
push
sbb
pusha
xchg
pop
mov
mov
mov
dec
(bad)
sbb
adc
and
in
adc
inc
lods
and
xchg
call
jl
pushf
mov
rcr
loop
add
adc
sbb
adc
add
sbb
mov
push
in
adc
sbb
les
test
(bad)
fadd
les
mov
shl
js
xchg
(bad)
mov
pop
push
jl
jmp
ficom
(bad)
mov
sub
dec
iret
adc
pop
fsubr
les
(bad)
or
xchg
mov
jbe
imul
jns
jne
movs
inc
mov
ss
(bad)
push
push
xchg
fisubr
mov
sbb
sbb
jl
adc
jae
push
arpl
fist
xor
hlt
add
in
call
push
mov
jmp
fild
add
mov
mov
mov
sar
jecxz
cli
add
in
push
pop
in
adc
push
sar
xor
loope
ins
rcl
xor
sar
xchg
fld
and
push
jl
leave
fcom
jmp
sar
inc
adc
xor
lock
and
push
sub
arpl
mov
sbb
fadd
push
xchg
rol
push
xor
and
adc
add
fstp
ret
loopne
shr
jg
outs
lods
pop
movs
pop
les
das
movs
lods
dec
pop
pop
cmp
mov
out
ficom
out
mov
(bad)
jl
mov
retf
outs
jae
ficomp
dec
arpl
sahf
mov
xor
and
sbb
cmp
sar
dec
jl
sub
pushf
js
mov
dec
cmp
push
shr
cli
mov
(bad)
mov
in
test
out
int
mov
rcl
rcl
sti
loope
mov
icebp
xchg
ja
adc
xchg
push
pop
jl
(bad)
and
movs
les
dec
sbb
sar
repnz
add
call
jl
jns
arpl
jae
xchg
push
sub
pushf
rcr
repz
adc
je
inc
push
les
pushf
xchg
mov
xor
lods
jbe
cli
hlt
jl
adc
call
test
rcl
jl
jl
aad
(bad)
cmc
test
push
mov
sbb
inc
fadd
sbb
dec
jbe
xchg
cmps
(bad)
in
(bad)
dec
or
call
in
pop
cmp
sbb
ins
addr16
in
xchg
adc
pop
sub
mov
push
ins
adc
jmp
adc
imul
inc
xchg
ins
sub
test
popf
xlat
mov
cmps
cs
ja
addr16
push
pop
aaa
mov
pop
retf
(bad)
jmp
fadd
data16
ss
fcom
push
aam
mov
aad
lds
test
scas
pop
xor
mov
into
popf
mov
movs
out
not
(bad)
fld
and
adc
mov
rcr
ret
call
retf
arpl
(bad)
push
sbb
in
sbb
pop
out
inc
loop
shr
inc
xchg
pop
adc
inc
pop
(bad)
xor
cld
add
icebp
int3
loope
or
pop
rcr
pop
jl
adc
sbb
leave
iret
imul
inc
pop
jle
out
pop
push
sbb
or
add
inc
and
adc
lock
mov
adc
sbb
push
sub
fcom
cmp
jl
inc
imul
xor
adc
out
ins
add
iret
mov
fdivr
push
lahf
rcr
cwde
(bad)
loopne
movs
jne
xchg
enterw
add
into
adc
xlat
lods
clc
scas
and
or
push
xor
cmp
inc
pop
cmc
push
in
jno
outs
cmp
shr
in
movs
add
and
dec
xor
add
les
and
push
sbb
push
xchg
pop
pusha
jl
mov
mov
stos
shl
loopne
shl
adc
sar
retf
jle
jne
call
call
mov
loope
push
shl
push
cli
add
and
adc
inc
rol
in
jne
les
xor
in
cs
movs
movs
cli
cld
xchg
jmp
in
stos
cli
ins
clc
retf
out
cmp
cli
les
cli
add
jmp
jle
je
lods
lods
fdivr
and
adc
sbb
stos
add
lods
dec
jns
icebp
or
retf
lods
clc
loope
jp
rol
hlt
sbb
adc
push
mov
pop
push
outs
lods
adc
cwde
xchg
adc
sbb
call
in
pop
cmc
sub
pop
mov
mov
push
jl
fwait
pop
push
in
dec
retfw
loop
fld
xchg
jmp
cmps
data16
or
in
jns
jl
in
das
scas
mov
jl
or
sbb
jl
(bad)
pushf
imul
out
fimul
pop
lods
mov
jmp
sub
cmps
cmp
fiadd
xchg
lods
in
cmp
fs
fbstp
js
mov
mov
jp
lods
fwait
jmp
je
sub
pop
jmp
mov
in
jmp
sub
or
inc
sbb
jle
cmp
sub
add
xor
pop
retf
jno
data16
dec
jge
jbe
mov
loop
inc
in
ins
sub
lods
in
out
pop
ds
lods
jmp
jb
cmp
sbb
push
test
mov
sbb
enter
jl
add
mov
lock
jl
pop
jns
inc
sbb
jl
mov
mov
dec
sub
pop
ret
jl
imul
pop
push
pushf
inc
mov
mov
ins
cmp
inc
sub
pop
jl
les
enter
cmp
pop
jo
fadd
jo
pop
call
dec
into
mov
int3
shl
mov
cmps
adc
ja
add
call
inc
out
mov
cld
jno
push
and
inc
xchg
shr
in
fidiv
cmp
mov
xor
sbb
cld
test
scas
nop
out
retf
or
ins
nop
add
call
ins
sti
(bad)
jmp
mov
push
and
test
sbb
in
inc
ins
mov
iret
jl
jnp
push
jl
call
out
movs
dec
jmp
mov
lods
or
cdq
fldl2e
lods
mov
pop
sub
sub
xchg
ins
xchg
retf
jl
enter
mov
mov
sub
pop
test
dec
icebp
mov
pop
in
stos
add
sub
mov
retf
inc
ins
je
inc
mov
push
jl
add
or
repnz
ret
sahf
push
sbb
retf
adc
push
das
xchg
sar
sbb
sbb
dec
jns
xchg
sub
fdivr
adc
shr
push
jl
mov
jmp
sahf
dec
neg
(bad)
push
cmp
(bad)
in
ficomp
jbe
push
cld
or
ss
neg
push
push
(bad)
cmc
lods
in
out
xlat
sbb
int3
mov
sar
push
pop
cmps
inc
jmp
fiadd
in
shl
xchg
addr16
jmp
or
mov
fadd
sbb
cld
aaa
inc
inc
pop
daa
retf
ret
push
jecxz
pop
push
cmps
cs
cmp
dec
pushf
inc
sbb
mov
dec
adc
(bad)
pop
fisubr
or
mov
sbb
xchg
cld
(bad)
je
scas
mov
mov
aad
je
lods
nop
mov
cmp
add
inc
ficom
popa
jno
xchg
mov
aaa
loope
icebp
mov
xchg
dec
cmp
push
sbb
test
push
repnz
xor
call
fcmovbe
fsub
add
adc
pop
fild
test
test
les
fidiv
xchg
mov
in
push
mov
inc
ja
cwde
test
jl
fdiv
pop
ja
js
jl
pushf
sbb
xchg
sub
cmp
pop
mov
mov
mov
jge
dec
(bad)
sbb
data16
repz
inc
jecxz
ss
jns
es
push
rcr
push
jl
repz
mov
sbb
ret
das
and
mov
cdq
xchg
mov
pop
jne
gs
jae
inc
les
adc
push
call
xor
adc
loop
mov
jmp
rol
xor
push
in
fdiv
enter
push
ret
jl
call
ffreep
jmp
sbb
arpl
ficomp
push
jl
fnclex
fcmovbe
call
fsub
bound
xor
push
jl
xchg
cwde
rcr
mov
cmp
ds
test
inc
sbb
cdq
xor
jl
mov
mov
add
and
xlat
rol
sar
nop
add
adc
fadd
pusha
sbb
push
xchg
inc
sbb
pop
fbld
cli
adc
(bad)
fsubr
(bad)
iret
mov
fdivr
jg
mov
jmp
movs
lods
or
mov
jb
out
adc
fisubr
pop
stc
fsubr
mov
xor
jl
mov
push
test
inc
sub
and
push
pop
push
adc
push
cdq
sub
sbb
sahf
fnsave
push
inc
js
xor
xchg
push
add
pop
stc
loope
frstor
pop
xchg
sub
js
int
jl
mov
mov
stos
xchg
xlat
pushf
(bad)
jmp
push
or
cmps
dec
jl
sar
lods
mov
mov
jl
ja
loope
icebp
pop
add
xchg
xor
clc
inc
enter
lods
fidiv
xchg
retf
shl
(bad)
test
ficom
enter
and
jae
push
pushf
push
call
ret
fcmovnbe
mov
add
xchg
adc
xor
inc
xchg
push
pop
je
test
adc
mov
(bad)
sar
hlt
xchg
add
lods
inc
les
test
jne
lods
movs
retf
mov
xor
nop
jl
xchg
mov
push
(bad)
fidiv
mov
fst
jl
sbb
pop
xchg
(bad)
(bad)
loop
(bad)
(bad)
cwde
pop
idiv
pop
les
sbb
mov
fist
addr16
retf
xchg
nop
xchg
dec
test
cmps
pop
xor
(bad)
mov
lods
daa
cmp
loope
adc
lods
sbb
xchg
in
movs
cmp
lods
mov
mov
push
out
xchg
fiadd
addr16
mov
daa
ds
pop
sbb
idiv
sar
jmp
dec
pop
cmps
fist
pop
jle
push
sbb
cli
ss
in
xchg
es
pop
push
frstpm(287
jmp
pushf
mov
push
and
cdq
in
(bad)
(bad)
into
xlat
adc
jl
les
add
call
sbb
out
int
lods
arpl
xor
or
push
shr
ret
mov
mov
bound
adc
icebp
aas
or
mov
cmp
jno
test
popa
jg
inc
outs
dec
and
mov
sub
lahf
out
lods
mov
mul
scas
and
dec
sbb
cli
in
dec
adc
sbb
jmp
add
or
sbb
jl
jmp
adc
inc
data16
data16
cdq
fistp
pop
(bad)
int3
pop
inc
pop
dec
push
out
mov
push
pusha
jo
repz
cmps
mov
loop
pop
cwde
repnz
and
in
fsub
dec
cld
ror
mov
and
adc
outs
int
movs
sbb
or
sbb
cmp
pusha
xchg
mov
jns
and
stc
sbb
xor
call
leave
and
mov
push
rol
mov
sub
and
add
adc
xor
and
jb
inc
xchg
lods
mov
popa
ret
int3
xchg
loop
add
fnsave
xor
icebp
inc
fs
mov
jae
xor
push
mov
inc
rcr
(bad)
jb
les
jbe
sbb
jl
fs
test
(bad)
mov
jl
dec
push
(bad)
loopne
pusha
pop
xor
popa
and
test
adc
add
push
jne
in
jl
adc
fs
jle
fld
dec
rcr
out
sbb
jl
lods
mov
sub
and
ja
clc
fdiv
adc
mov
jne
mov
or
sbb
push
cmps
cmc
pop
inc
push
imul
jnp
shl
stos
outs
mov
call
jmp
xchg
sti
repnz
or
loope
sbb
rcl
(bad)
sub
jl
loop
loop
mov
pop
das
pop
ins
jle
(bad)
jl
push
fnstenv
add
lods
mov
inc
inc
cmps
shl
out
fucomp
popf
lods
in
(bad)
fxch
lods
in
retf
loopne
jb
mov
jmp
pop
cmp
movs
and
mov
imul
pop
lods
dec
push
loop
rep
cld
xchg
push
daa
call
push
imul
lods
out
pop
ins
adc
jl
add
popa
sub
jns
std
sbb
dec
mov
push
out
test
sub
sbb
adc
leave
xchg
jl
mov
jb
mov
cmp
push
ins
and
dec
or
xchg
jl
mov
mov
cli
mov
inc
mov
popa
cli
mov
adc
jl
cmp
pop
ins
sbb
jo
xchg
lods
jns
mov
(bad)
iret
jl
dec
imul
mov
call
push
clc
mov
xor
pop
mov
mov
(bad)
sar
ja
lock
inc
in
add
fst
pop
jmp
fs
xchg
mov
push
loopne
loop
out
xor
mov
mov
out
jl
jle
mov
outs
int3
movs
lods
fs
rcl
mov
sar
int3
dec
mov
ja
sahf
mov
or
xor
adc
movs
mov
pop
stos
pop
inc
clc
dec
mov
dec
(bad)
fstp
call
fwait
cli
mov
shr
lods
jmp
imul
shl
stc
out
dec
dec
sbb
je
lods
dec
mov
cmp
data16
popa
jge
sbb
xchg
lods
jp
test
mov
mov
xchg
push
sbb
stos
xor
mov
jnp
mov
imul
xor
mov
sub
xchg
lods
push
sub
jl
add
dec
retf
cmp
push
xchg
inc
inc
lods
push
sub
les
xchg
in
push
fcom
enter
fisubr
xchg
loop
sub
pop
clc
adc
test
xor
add
mov
out
dec
enter
jne
adc
sar
fucom
les
pop
sub
mov
dec
aaa
adc
jl
adc
(bad)
sbb
in
fimul
cmps
fcom
push
sbb
les
sbb
lods
cmc
dec
xlat
in
aad
mov
mov
sbb
sbb
sbb
les
dec
in
ja
(bad)
les
movs
xchg
cld
push
push
retf
push
iret
aaa
jmp
pusha
mov
mov
fwait
loopne
mov
scas
in
jmp
adc
and
or
jg
mov
push
cmp
js
inc
jl
pushf
push
sbb
adc
mov
dec
mov
cmc
sbb
mov
shr
or
jl
fisub
fdiv
push
les
sbb
sbb
add
push
mov
sbb
jmp
fst
(bad)
nop
push
cdq
inc
sbb
pop
push
outs
lea
lods
mov
in
xlat
cmp
imul
call
call
fcomp
or
fiadd
cwde
cmp
data16
mov
inc
mov
cwde
imul
ror
dec
lods
push
(bad)
retf
mov
mov
xchg
jne
movs
mov
mov
in
clc
push
sbb
call
fcomi
push
jns
fsub
aam
xor
mov
loop
loop
xchg
shr
je
pop
fs
push
in
dec
inc
xor
jne
adc
loop
icebp
jnp
and
pop
rol
or
mov
mov
adc
jno
push
inc
mov
and
repnz
(bad)
movs
jns
popa
jbe
mov
pop
and
adc
jmp
sbb
cmp
sbb
jl
jmp
loopne
inc
pushf
rcr
sti
loope
and
mov
add
lock
fmul
ret
in
clc
rcl
mov
push
nop
push
xor
sbb
sbb
cmp
adc
sbb
movs
sbb
fistp
scas
scas
test
sub
sbb
outs
pop
adc
aas
adc
cli
pop
lods
loopne
ror
inc
out
faddp
into
mov
mov
jae
sahf
jge
jle
push
jl
cdq
data16
jl
pusha
test
dec
mov
dec
xor
ins
imul
add
fisttp
repnz
leave
ret
mov
sar
xor
push
push
loope
jbe
sar
jno
xchg
or
ja
sti
popa
mul
dec
lods
repnz
out
dec
(bad)
movs
lods
xchg
mov
mov
out
(bad)
fsubr
add
mov
out
sbb
fucomi
ret
loop
dec
movs
movs
cld
ins
cld
adc
xor
xchg
fcmovu
arpl
jae
push
pop
xchg
(bad)
fcmovnbe
cmp
lods
test
mov
push
pushf
fs
je
test
xchg
fsub
aam
in
jl
enter
push
and
jne
pop
xchg
aam
xchg
jl
dec
jo
aaa
mov
push
mov
repz
mov
jle
and
call
(bad)
mov
sbb
xlat
jmp
aaa
push
jl
retf
push
fisttp
mov
ret
xchg
cwde
xchg
mov
fstp
mov
cld
pop
sub
repz
or
std
mov
test
mov
shl
push
(bad)
addr16
(bad)
push
daa
retf
pop
call
push
call
xchg
lods
mov
sbb
sbb
mov
push
pop
(bad)
jmp
fsub
(bad)
outs
cld
movs
les
out
pop
inc
(bad)
hlt
jmp
sahf
pop
aam
(bad)
fidiv
fdiv
fadd
mov
repz
mov
popf
mov
fisub
inc
out
(bad)
ficom
or
mov
xchg
fadd
cld
inc
les
int3
adc
or
jl
mov
sar
ins
cmp
jl
pop
cld
inc
add
ins
movs
mov
in
test
sub
fsub
cmp
out
mov
inc
shl
lods
fidivr
or
out
inc
adc
sbb
mov
sub
cmp
jae
jl
outs
mov
outs
imul
lods
das
mov
mov
cwde
lods
loop
std
jo
(bad)
(bad)
fmulp
sub
mov
cmc
out
cmps
fsubr
call
adc
(bad)
jle
jle
les
push
fld
jno
sbb
push
sub
arpl
mov
sar
dec
mov
arpl
adc
mov
fst
and
and
stc
push
pop
inc
or
nop
jb
sub
rol
cmp
pop
dec
adc
push
loop
inc
out
mov
into
mov
leave
jp
jl
arpl
jae
mov
sbb
xchg
call
stos
xor
xchg
inc
jecxz
mov
adc
adc
jb
ins
sub
jl
add
je
int
sub
push
mov
pop
mov
fs
cmp
dec
pushf
or
int
add
adc
jl
dec
dec
sbb
inc
pop
(bad)
xor
inc
pop
icebp
in
or
dec
fs
loope
outs
pop
cmp
out
call
stos
je
test
pop
mov
mov
mov
mov
les
jl
in
out
shl
cld
jne
cld
ja
sub
cli
jmp
lds
push
mov
dec
in
and
push
popa
mov
mov
fwait
nop
push
adc
movs
jne
lods
push
retf
ins
or
or
xchg
adc
inc
mov
or
dec
lods
popa
dec
jns
fistp
in
mov
xor
sbb
mov
cli
or
jmp
or
xchg
sub
adc
(bad)
xor
xchg
mov
ins
cmp
leave
cmp
dec
lods
dec
cld
xchg
cli
(bad)
mov
cld
mov
pushf
retf
lods
mov
es
inc
mov
sbb
jo
pop
xchg
call
cmp
push
and
mov
xchg
mov
cmp
xlat
dec
push
inc
in
and
jmp
sar
mov
pop
fs
jl
test
movs
mov
and
imul
and
sbb
dec
dec
lock
mov
ins
mov
dec
lods
xlat
call
out
push
mov
ins
cmp
jbe
fimul
mov
push
mov
add
cmp
mov
fwait
pusha
lods
clc
pushf
enter
or
lods
outs
ins
mov
sbb
clc
sbb
push
fsubr
add
loop
test
or
sti
or
mov
xchg
ja
push
les
pop
push
in
jle
cld
jno
push
jl
inc
push
es
call
lds
aad
mov
ror
ins
pushf
nop
movs
push
leave
dec
cmp
mov
dec
lahf
jl
pop
cli
ficom
dec
pop
mov
cmp
sbb
data16
popf
sub
jl
xor
jl
or
in
sub
aam
sub
les
test
mov
ss
lods
ror
test
call
jno
sub
enter
or
ret
push
sub
cld
fs
popa
mov
call
test
sub
sbb
cli
(bad)
pop
loopne
pop
xchg
jmp
inc
repz
jl
imul
ins
dec
mov
sbb
mov
lods
shl
sub
cmp
loope
(bad)
icebp
lods
fwait
add
mov
inc
mov
outs
sub
push
dec
sar
push
fwait
push
call
fcmovu
outs
pushf
mov
call
adc
sbb
enter
fisttp
sbb
dec
push
or
sbb
or
rcr
fcmove
fdivr
mov
cwde
pop
pushf
dec
jmp
outs
mov
popf
js
dec
mov
fdivr
mov
mov
sahf
dec
les
mov
imul
xlat
push
dec
(bad)
(bad)
xchg
fidiv
fisubr
push
fadd
cld
sbb
daa
pop
(bad)
neg
lods
(bad)
dec
div
mov
out
les
mov
xlat
cmc
dec
aad
mov
dec
mov
pop
cmps
fadd
xchg
mov
add
hlt
(bad)
(bad)
aam
les
movs
jmp
je
inc
les
mov
adc
push
std
cmpps
hlt
sbb
je
sahf
in
call
cmp
retf
lods
pmulhuw
push
cmp
sbb
cli
or
fist
add
mov
test
adc
jb
mov
shr
les
push
pushf
jae
add
rcl
repz
sub
test
ins
cmp
fst
jmp
sbb
push
mov
xchg
jl
les
mov
push
pop
push
jl
movs
call
sbb
adc
sbb
sub
cmp
pop
test
pop
ss
jecxz
sbb
inc
rol
jl
in
and
outs
xchg
mov
test
lods
gs
push
call
xor
adc
hlt
arpl
in
in
and
aam
cmps
mov
inc
movs
xor
xchg
and
add
test
cld
je
mov
imul
push
outs
adc
mov
icebp
mov
push
dec
fdiv
jae
fbld
inc
jno
xor
and
adc
je
loop
rcl
fadd
mov
popa
fsub
xor
dec
pop
bound
sbb
adc
add
icebp
or
inc
rcr
pop
sub
jno
jle
and
mov
push
call
repz
add
call
add
xor
shl
jb
mov
jle
fdivr
and
jo
or
push
movs
push
lods
sub
sbb
jae
ins
cmp
cmps
dec
add
inc
loop
inc
iret
jl
mov
xor
lods
call
xchg
mov
pop
aas
lods
das
stos
jl
test
cld
out
(bad)
fiadd
jle
mov
jl
pop
sahf
clc
in
(bad)
dec
mov
jle
outs
adc
pop
jecxz
dec
inc
sbb
sbb
jle
inc
adc
mov
push
and
xor
ja
sbb
mov
mov
dec
add
mov
loope
mov
xlat
fst
popa
xchg
leave
mov
das
in
xchg
jl
cmps
lods
jno
int
adc
mov
shr
sbb
push
mov
call
mov
mov
jb
bound
mov
ret
(bad)
repnz
aaa
xor
mov
mov
mov
rcr
add
adc
and
xor
push
fisub
test
xchg
mov
aam
hlt
leave
add
xchg
xor
jl
push
rcr
test
ins
mov
cmps
jecxz
mov
in
add
or
push
jl
pop
es
inc
mov
cmp
xchg
jmp
or
or
xchg
in
(bad)
sbb
sub
loop
cli
div
fld
pop
iret
pop
call
aaa
jno
inc
pop
mov
mov
ja
retf
xchg
in
test
fidiv
retf
push
push
dec
pop
cmp
cwde
sub
popf
or
mov
mov
jo
ds
pop
cmps
out
xchg
sbb
adc
lods
or
in
repnz
jne
pop
pop
movs
adc
out
enter
(bad)
jl
cmps
pop
ins
xchg
pushfw
inc
out
std
ss
es
push
mov
mov
ret
mov
sar
push
fadd
enter
adc
sbb
mov
movs
pushf
test
sbb
mov
stos
lods
adc
dec
add
or
ret
pop
mov
(bad)
fist
psrld
inc
pop
mov
jl
fdiv
rcl
cli
ret
aam
das
cld
add
int3
push
aas
or
int
push
add
rcr
cld
mov
popa
pushf
push
pop
xor
and
push
hlt
add
out
pop
pop
mov
mov
idiv
inc
pop
xor
adc
add
(bad)
scas
cmp
mov
pop
push
(bad)
push
cwde
(bad)
js
aas
add
das
jne
fimul
cwde
iret
xor
test
retf
push
sbb
pop
mov
sub
enter
nop
mov
int3
shr
shr
jle
outs
or
mov
test
sbb
mov
imul
cdq
les
test
adc
and
pusha
ja
cdq
sbb
mov
dec
loopne
pop
pop
shr
lock
repnz
push
out
jl
adc
and
sti
shl
cmps
mov
or
int
aas
fild
dec
ins
mov
rcr
(bad)
pop
mov
xor
sbb
push
sbb
outs
sahf
sub
outs
push
and
stos
xor
lods
call
add
inc
adc
cld
and
sub
mov
adc
sbb
enter
iret
jl
dec
dec
in
sbb
fs
in
out
ins
fild
shl
xchg
add
mov
cmps
inc
jl
retf
ficomp
sbb
shr
mov
sub
lods
and
jl
add
jmp
mov
inc
clc
es
mov
mov
push
fstp
fcomi
fdiv
xlat
sti
lods
cmps
les
push
jl
(bad)
sbb
sbb
mov
jmp
dec
cmp
dec
jl
sub
je
and
mov
test
mov
in
pop
xchg
cmp
jl
call
jl
pop
sbb
(bad)
popf
loope
jl
ret
mov
in
or
lods
cwde
rol
repz
cmp
mov
xchg
mov
lods
xchg
call
mov
pop
std
daa
push
jno
inc
cli
sub
cdq
call
xchg
pop
cmps
data16
push
(bad)
call
movs
out
pop
idiv
inc
in
loopne
xor
arpl
popf
les
jl
pop
xchg
lods
loopne
xchg
and
(bad)
cwde
call
in
xchg
cwde
lods
add
add
shr
or
lahf
shr
outs
mov
cwde
lods
nop
mov
sub
or
jo
ins
cli
push
dec
sbb
pusha
mov
add
mov
out
jo
add
out
sub
or
lods
mov
cmp
ja
test
mov
shl
rcl
in
test
dec
inc
(bad)
sbb
mov
adc
jno
ss
es
add
in
aad
inc
sbb
and
arpl
rol
iret
mov
jne
jl
xor
jl
inc
mov
lods
xchg
mov
xor
xchg
mov
dec
lods
cmp
ret
mov
lods
jmp
add
push
jl
push
adc
sbb
inc
je
or
jno
dec
dec
or
push
jl
xchg
popa
or
xlat
lods
xchg
cli
(bad)
or
test
push
cmp
dec
pop
sbb
test
in
call
xor
sbb
or
xlat
xor
inc
cmp
jo
pop
enter
xor
jle
aaa
in
mov
xchg
mov
jl
add
adc
sbb
stos
jmp
cmp
mov
retf
push
cli
lods
fiadd
cld
jmp
cwde
lods
sbb
or
ficomp
push
mov
jp
push
cld
test
cmp
les
sub
(bad)
push
ins
pop
sub
sahf
cwde
imul
mov
clc
pushf
call
out
mov
sbb
mov
lods
ins
push
call
data16
popf
cmp
jmp
call
out
neg
fcmovnb
call
ficom
in
(bad)
fsub
push
cld
xlat
fadd
cmc
(bad)
in
(bad)
aad
lds
xchg
ins
test
jmp
sahf
xchg
inc
mov
adc
hlt
jmp
(bad)
retf
shl
test
inc
fs
cld
aaa
inc
inc
or
xchg
jns
lods
push
sahf
cmp
retf
fld
jle
push
mov
lds
std
test
or
outs
int
cmps
in
test
and
test
adc
clc
adc
lock
lods
adc
xor
arpl
push
inc
(bad)
jb
mov
ret
in
pop
add
adc
fcom
jecxz
add
and
rcl
pushf
cmp
sahf
push
jns
jne
xchg
mov
lds
cmc
ficom
fsub
push
je
mov
or
test
and
adc
in
jle
outs
sbb
repz
ins
pop
call
dec
clc
dec
hlt
cwde
and
movs
adc
cmp
call
nop
imul
cmp
sbb
jle
aam
rol
lods
mov
movs
pushf
xchg
out
pop
jne
test
adc
retf
or
in
cmp
mov
cmp
inc
outs
test
lods
je
dec
rcr
in
sti
xor
imul
add
call
sbb
loope
mov
push
mov
and
xchg
jae
arpl
mov
mov
dec
call
rcr
ret
popa
dec
mov
sub
(bad)
add
jl
add
nop
sub
sbb
std
ins
push
pop
mov
xchg
clc
adc
(bad)
loopne
fsubr
ror
rol
or
icebp
mov
push
fild
xchg
shl
push
add
xor
push
fcmove
and
pop
fdivr
arpl
xchg
out
jae
ins
or
cmps
sbb
sub
jg
sbb
outs
sar
aas
lods
pop
xchg
jmp
(bad)
fsubr
fidivr
push
sbb
mov
jle
sub
pop
shr
and
dec
ret
ds
and
mov
hlt
repnz
loop
movs
std
add
repnz
jl
sbb
mov
call
out
push
mov
mov
lods
jno
int
inc
mov
or
dec
xchg
lods
add
int
sbb
in
shr
mov
fcmovnbe
(bad)
fdiv
add
adc
xchg
push
jl
pop
jb
cmp
mov
fadd
loop
fild
ficom
fsub
xor
inc
mov
jae
xchg
push
mov
ret
push
jecxz
add
and
inc
sbb
les
dec
movs
sbb
(bad)
(bad)
int3
in
jl
enter
and
mov
mov
lds
movs
call
xlat
lods
push
in
cwde
push
xlat
cld
ss
test
sbb
jl
mov
cld
mov
(bad)
fwait
push
call
mov
pop
int3
daa
cmp
ja
retf
inc
xchg
jl
push
ja
xchg
inc
js
mov
lods
(bad)
call
jl
lods
push
dec
push
cwde
cmp
cs
sbb
idiv
cld
out
xlat
ins
out
pop
mov
call
xchg
mov
lods
push
pop
cmp
cld
daa
les
sbb
in
fdiv
(bad)
je
(bad)
mov
mov
cmps
xchg
les
sahf
cmp
ss
push
fcomi
push
aad
(bad)
mov
jmp
into
pop
push
(bad)
leave
xlat
add
jl
mov
cli
movs
jl
jl
cli
movs
je
xlat
push
jl
push
popf
and
adc
xchg
add
repz
divps
cmp
xchg
lods
jae
mov
popf
inc
pop
and
adc
add
xlat
loop
rcr
mov
pusha
sbb
jg
cmp
out
ror
mov
ins
movs
div
in
ret
sbb
in
jbe
fst
jl
add
mov
or
sbb
mov
cmp
fcom
cld
dec
push
xor
dec
adc
aam
lahf
pop
fistp
jle
jle
les
(bad)
jl
loopne
fdivr
js
outs
dec
fdivr
(bad)
das
(bad)
jl
dec
call
add
sub
out
lods
ins
test
and
inc
jle
std
scas
(bad)
mov
jl
jo
xor
nop
lods
mov
loope
ret
adc
mov
inc
sbb
sub
add
mov
fsubr
loope
aas
icebp
imul
cdq
mov
inc
leave
add
out
jb
dec
and
push
mov
pusha
push
sbb
rcl
sbb
loop
cmp
repnz
cld
lods
push
adc
add
inc
inc
mov
dec
shr
shl
loope
push
icebp
adc
adc
mov
cld
dec
inc
ret
pop
shr
mov
in
cmp
and
stos
or
mov
jl
adc
adc
add
ret
shl
loope
ror
call
imul
leave
mov
ins
cmps
cmp
or
sbb
dec
push
sbb
lods
call
inc
sbb
adc
les
in
adc
sbb
in
das
xor
ja
sti
push
mov
lahf
jmp
sahf
aad
sar
jle
retf
cmc
imul
push
mov
fistp
push
jl
fild
jl
pop
bnd
(bad)
jmp
jmp
cmps
sti
ins
xchg
push
dec
or
sbb
jl
jl
mov
clc
retf
cmp
(bad)
adc
jmp
sub
mov
cmp
dec
inc
pop
xor
imul
push
lods
mov
mov
repz
ins
dec
sub
mov
imul
pop
cmps
loope
shr
ins
mov
or
jne
jmp
push
ror
cmp
pop
loopne
mov
pop
daa
mov
aaa
jl
cli
cmp
call
sub
mov
add
cmp
mov
jl
adc
and
or
push
mov
jecxz
cwde
sub
sub
lods
dec
add
shl
ins
cmp
cld
sub
mov
lock
jmp
pusha
cmp
sbb
sub
sub
dec
cli
jl
fwait
inc
fxch
jl
mov
cli
lods
lds
dec
dec
fldcw
mov
mov
sbb
adc
mov
dec
pop
nop
cmp
out
mov
xchg
mov
xchg
test
pop
sbb
out
(bad)
in
dec
mov
ja
jmp
xchg
fucom
mov
push
jl
xor
aad
mov
push
jmp
mov
pushf
mov
in
pop
lods
cmp
call
push
leave
inc
mov
ins
mov
and
push
jmp
mov
inc
mov
loopne
xor
ins
mov
fwait
cmp
(bad)
jns
jmp
dec
stos
retf
je
push
call
out
sbb
das
jl
mov
jle
lods
dec
mov
mov
sub
mov
pop
lods
popa
repz
fidiv
mov
imul
(bad)
xchg
es
mov
ins
sbb
jl
cmp
add
push
or
sbb
fcmovu
push
outs
ins
push
sbb
sar
jnp
imul
mov
or
ficomp
mov
call
mov
mov
or
stc
jl
mov
ret
cwde
popa
pop
test
clc
mov
inc
test
cwde
sbb
pop
pop
mov
sbb
adc
xchg
xchg
imul
sbb
enter
pop
xchg
ins
push
les
inc
sbb
shr
pop
fimul
or
sti
push
push
pop
lods
mov
sbb
inc
call
adc
std
fistp
neg
inc
aas
ins
pop
call
shr
cmp
dec
pop
mov
inc
(bad)
(bad)
hlt
out
xchg
call
dec
mov
jp
dec
xchg
xor
jp
add
mov
aas
add
or
mov
test
ja
bound
repnz
xchg
dec
lock
shl
mov
xchg
dec
fist
inc
fisttp
xchg
mov
hlt
fild
dec
push
sbb
(bad)
jns
in
push
xchg
add
xchg
mov
pushf
(bad)
pop
out
pop
out
mov
cdq
jl
jns
xchg
test
lods
sbb
fld
js
mov
pop
jns
xbegin
sub
ins
pop
imul
inc
nop
imul
test
push
inc
mov
inc
sbb
jecxz
in
cdq
aad
(bad)
lds
fdivrp
xchg
adc
gs
jmp
mov
add
and
or
arpl
xor
add
xor
dec
and
sbb
fadd
push
inc
cld
ret
in
cwde
mov
(bad)
push
mov
xor
dec
or
in
shl
or
loop
bound
cmp
and
adc
dec
out
jl
cmc
sbb
jl
sub
or
and
clc
in
lods
pop
adc
add
rol
fbstp
cwde
nop
rcl
xor
add
sahf
pusha
and
push
bound
sub
repnz
and
jle
fcom
mov
xor
out
test
push
fdivr
das
and
lahf
inc
call
jae
outs
mov
lods
aas
fld
retf
psubusw
mov
jl
push
fcmovnu
mov
dec
rcr
and
jle
fsubr
lods
and
cmp
pop
ds
push
cs
imul
push
cld
movs
(bad)
loop
mov
sar
std
ret
out
sahf
mov
jmp
sahf
xor
jb
outs
movs
loopne
cmps
and
fidivr
mov
mov
int
je
or
je
int
or
imul
or
inc
rol
cmp
and
pop
xor
push
pop
cwde
jb
push
dec
mov
in
dec
mov
adc
jl
or
cmp
ins
sar
sar
repz
adc
and
les
pushf
fs
je
test
movs
test
fcmovb
fcom
in
fadd
inc
dec
push
mov
test
stos
aad
std
call
mov
mov
xchg
in
call
sbb
push
jl
dec
(bad)
sbb
sbb
pop
jl
in
cwde
daa
pop
cld
aaa
les
mov
mov
dec
push
jmp
(bad)
cld
mov
pop
fwait
inc
dec
out
retf
cmp
mov
mov
fsub
mul
mov
ins
test
fisub
adc
pop
push
into
rcr
or
push
nop
out
(bad)
cli
(bad)
pop
(bad)
mov
mov
sub
sbb
mov
sbb
in
jmp
aad
jl
fidiv
jne
push
fsubp
inc
loop
xor
hlt
call
les
movs
(bad)
ins
xchg
call
pusha
jl
seto
and
adc
out
loop
jecxz
shr
popf
mov
push
jns
and
dec
arpl
push
jecxz
inc
pop
pop
and
adc
out
call
outs
nop
mov
mov
jg
push
adc
cmc
sbb
(bad)
sbb
ins
lahf
cld
add
sbb
jl
in
movs
mov
or
cmp
iret
sbb
sbb
adc
loopne
(bad)
retf
mov
cmp
and
sbb
inc
push
test
outs
data16
sbb
jmp
mov
stos
mov
cwde
loop
imul
outs
loop
pop
leave
dec
jl
scas
pop
das
inc
iret
or
or
out
int3
fdivrp
mov
mov
mov
and
loopne
jl
jl
push
xlat
fsubr
mov
rcr
(bad)
loopne
in
call
mov
into
fiadd
fidiv
ins
sub
sbb
jle
(bad)
dec
das
loope
outs
add
iret
adc
xor
push
push
inc
(bad)
jmp
jo
mov
rcl
sbb
mov
sub
fisub
inc
repnz
adc
mov
and
and
arpl
sbb
jnp
cmp
les
mov
jl
sub
ins
loope
pop
cli
out
sbb
loop
xchg
ins
sbb
dec
add
push
or
pushf
push
cli
loop
jl
and
lods
xlat
xor
ror
mov
retf
adc
mov
in
mov
jl
retf
sbb
inc
in
sti
cdq
push
pop
mov
fs
in
jl
rol
pushf
icebp
adc
or
push
adc
mov
add
stos
push
stos
data16
cmps
test
inc
mov
or
xchg
sbb
cmp
sbb
pop
sbb
cld
push
outs
mov
lods
stos
jbe
sbb
es
push
lods
push
fcmovnu
jmp
data16
cmp
jl
jbe
jl
data16
xchg
sbb
or
mov
in
push
fst
test
dec
mov
mov
mov
dec
mov
sbb
lods
ficomp
cld
dec
xlat
inc
or
lods
lock
add
icebp
je
loope
dec
xor
xchg
in
in
jl
call
mov
pop
fwait
sub
call
lods
lods
das
call
xchg
sbb
jl
daa
pop
sbb
jmp
pop
arpl
inc
aad
xchg
adc
ins
xchg
xchg
retf
dec
inc
sub
cld
out
sbb
xlat
jl
mov
xor
jl
sbb
sub
dec
sbb
in
cmps
sbb
js
sbb
fistp
int3
lock
loopne
jl
or
mov
retf
jl
mov
xor
mov
cmp
call
mov
mov
in
xor
cld
add
lods
mov
or
fwait
push
test
add
or
call
stos
pop
sbb
push
fdivr
cwde
mov
movs
pop
test
add
xchg
inc
aaa
pop
call
ins
xchg
pop
xor
call
inc
call
jle
cld
sbb
mov
cld
out
lds
mov
fcom
imul
test
jne
lahf
lods
push
mov
int
pushf
mov
(bad)
out
les
ins
dec
jl
mov
ins
cmp
stos
in
sub
dec
and
hlt
ins
push
mov
dec
xor
sbb
add
dec
and
mov
add
ins
fs
jmp
sbb
cmp
sub
mov
mov
pusha
test
mov
jp
repnz
mov
cmp
lods
or
in
in
xor
retf
dec
retf
cmp
xchg
or
jl
adc
jno
pop
mov
pop
lods
rol
(bad)
mov
sub
mov
mov
movs
inc
or
aaa
sbb
cs
sti
fild
call
fimul
cmp
les
sbb
mov
retf
push
enter
pop
jp
push
mov
sub
sbb
cld
test
stc
fld
leave
mov
cdq
sahf
cwde
mov
pop
call
fisubr
fmul
clc
cld
js
call
test
cwde
mov
retf
sar
test
fimul
fdiv
xlat
(bad)
(bad)
sbb
sbb
cld
cmp
addr16
les
or
sbb
(bad)
out
(bad)
ins
(bad)
mov
mov
mov
ss
out
pop
push
data16
mov
mov
jmp
sahf
mov
pop
test
pop
inc
jmp
adc
xchg
(bad)
aam
ja
(bad)
(bad)
fisub
inc
je
fs
push
pop
inc
sub
push
stos
lods
jmp
pop
mov
or
xchg
(bad)
hlt
sub
stos
mov
sbb
mov
loope
ret
call
adc
arpl
fimul
jne
vpaddb
add
sub
mov
jns
xor
in
mov
add
pop
sbb
clc
and
jmp
and
out
push
out
and
mov
sahf
cwde
data16
and
pop
mov
push
xchg
sbb
cmp
test
xchg
ins
daa
pop
inc
jmp
jns
out
jbe
mov
sub
sahf
push
dec
test
enter
clc
mov
cmp
ror
imul
fist
inc
adc
mov
sbb
ins
es
push
nop
cdq
push
pushf
cmc
repz
aad
lds
sar
mov
inc
adc
test
ins
mov
add
in
push
aam
cwde
mov
movs
jmp
jae
test
cdq
in
pop
je
fs
mov
and
in
call
shr
add
pop
repz
xchg
faddp
sbb
inc
adc
inc
icebp
xchg
arpl
jns
ins
inc
mov
xor
imul
push
repnz
shl
dec
xchg
ins
and
cld
push
bound
mov
ins
and
sbb
movs
or
jno
loope
sbb
jl
dec
call
xchg
jmp
sahf
fdiv
push
pop
enter
mov
test
jmp
ins
shr
mov
shl
ins
pop
jo
mov
dec
push
rol
add
xor
cmp
push
movs
adc
and
repnz
out
movs
add
and
lahf
data16
push
xchg
outs
pop
pop
cli
dec
sbb
pop
or
add
(bad)
sbb
inc
dec
out
in
dec
ins
mov
in
imul
test
sahf
and
mov
jmp
pushw
pop
cdq
cwde
jmp
loop
rcl
repnz
in
push
ret
push
dec
mov
(bad)
in
jns
dec
mov
cmps
mov
adc
rcr
mov
sbb
jno
test
je
jl
sub
dec
mov
adc
lods
fiadd
retf
mov
fisubr
arpl
ret
ins
cmp
loopne
mov
stos
jae
fld
jbe
and
repz
cli
ret
cld
mov
(bad)
jns
mov
cdq
inc
jns
ret
fwait
dec
jae
inc
jns
shl
jne
pop
test
xlat
fist
(bad)
stos
out
cmc
test
inc
fist
data16
sbb
cmps
xchg
sub
xchg
(bad)
jl
cmps
pop
and
pop
pop
cmps
daa
pop
or
sub
xchg
jl
push
cmps
xchg
mov
std
(bad)
sbb
je
out
int
in
fwait
cmp
lods
mov
push
xor
dec
or
in
sub
stos
jl
mov
fcom
addr16
push
int3
inc
pop
or
pop
out
pop
pop
fcomi
jmp
fdiv
push
out
jl
in
fadd
je
push
scas
rol
fdiv
in
aad
cld
mov
movs
mov
sub
call
jl
pushf
add
cmp
jge
jl
psrld
adc
pop
push
add
jl
das
dec
push
sbb
ret
mov
adc
inc
in
ins
xor
enter
inc
mov
mov
jg
bound
sbb
add
shr
sbb
popa
iret
xchg
push
sti
inc
mov
adc
dec
lock
rcr
pop
mov
out
fsub
sub
inc
js
dec
sbb
in
push
add
cwde
(bad)
ins
fidivr
in
lods
scas
mov
fstp
jg
outs
out
pop
(bad)
cmp
add
mov
jno
rcr
and
jno
fcomp
add
push
into
adc
mov
xor
scas
out
sahf
sahf
pusha
idiv
push
jo
and
ins
mov
scas
rcr
shl
mov
and
popf
xor
push
cmp
push
pusha
xchg
jl
mov
dec
into
mov
mov
sar
icebp
jle
lods
add
out
xor
and
jl
out
xchg
xor
and
in
pop
mov
dec
shl
repz
fbstp
add
nop
jno
and
push
mov
jae
mov
hlt
sbb
shl
loope
sbb
jecxz
repz
mov
sub
push
in
sbb
inc
sub
in
in
pop
push
mov
add
or
sbb
lods
xchg
sbb
dec
cmps
dec
pop
sub
jl
loope
or
xchg
sbb
sbb
popf
cmp
adc
jl
pop
fild
adc
xor
pop
mov
fiadd
cli
push
add
or
sbb
aad
in
push
sbb
push
imul
inc
movs
mov
mov
pop
lods
retf
add
fisttp
out
in
mov
pop
lods
or
sbb
cmp
push
sub
push
jl
cmp
cmp
dec
ins
pop
mov
mov
sbb
adc
cmp
cld
pop
lods
call
inc
adc
dec
in
inc
stos
add
inc
mov
ins
xchg
loope
sub
and
mov
cmp
sbb
pop
das
sbb
push
cmp
hlt
dec
jbe
xchg
adc
sbb
jno
adc
call
dec
ins
push
xchg
stos
(bad)
lods
inc
push
(bad)
or
aas
jl
jl
out
aas
xchg
xchg
pop
out
jmp
les
addr16
ja
inc
xchg
pop
xchg
sub
lods
cmp
push
out
mov
mov
call
jl
sbb
in
fs
dec
sub
pop
test
push
mov
enter
cmp
adc
mov
lods
xchg
mov
mov
jl
xor
or
mov
ret
enter
mov
lods
out
shl
add
adc
cmp
jns
jl
mov
pop
fucomi
add
jl
xchg
pop
pop
lods
mov
idiv
cmps
sbb
ja
lock
fwait
add
sahf
(bad)
jl
pop
xor
inc
xchg
jbe
ja
jmp
es
jl
cmc
out
data16
xchg
cdq
dec
cli
and
cmps
xchg
jl
test
das
and
rcl
mov
and
cdq
jl
cmps
pushf
lods
fiadd
push
loopne
mov
mov
xor
jb
xchg
sbb
jl
xchg
ins
(bad)
sti
cmp
xchg
stos
pop
nop
cmp
imul
cmps
out
xchg
inc
(bad)
cli
dec
clc
je
ins
imul
adc
jl
mov
sbb
sbb
pushf
mov
mov
xor
jl
dec
cmp
pop
lods
jmp
loop
data16
mov
push
cdq
test
in
out
cmp
jl
retf
fcmove
jmp
sbb
imul
out
sahf
neg
or
or
mov
sub
in
sbb
jb
out
retf
ins
pop
inc
js
pop
sub
mov
push
dec
inc
neg
adc
cmps
lods
jmp
xchg
fist
inc
in
ficomp
pop
in
fimul
neg
out
(bad)
(bad)
lods
mov
mul
sahf
push
pop
inc
mov
sbb
ins
(bad)
sbb
push
test
sahf
xchg
ja
addr16
xchg
call
sbb
aaa
inc
inc
ins
xchg
jmp
or
lahf
imul
stos
into
out
dec
mov
adc
lds
cmps
dec
dec
ret
and
call
xchg
cmp
lods
add
outs
in
lea
lods
jno
sbb
and
in
ret
outs
cmp
jns
push
xor
arpl
mov
cmp
cmp
adc
sbb
loopne
in
inc
fld
outs
hlt
sbb
jl
mov
mov
aaa
cld
cld
push
push
jl
les
mov
sar
loopne
inc
mov
jl
call
ins
cmp
dec
or
ja
jle
jl
mov
cdq
add
inc
ins
inc
mov
es
jl
fidivr
dec
cmc
sbb
aad
repz
(bad)
mov
movs
jecxz
xchg
mov
mov
ret
lods
mov
add
pop
in
mov
xchg
movs
sbb
jae
arpl
dec
sbb
xor
adc
cld
add
add
cdq
rol
cdq
ret
out
push
add
jb
add
and
jns
sub
sti
xor
imul
pop
adc
inc
repnz
ja
sbb
into
pop
mov
in
outs
ins
push
mov
inc
bound
adc
popa
call
pop
fdiv
xchg
jmp
sbb
cwde
inc
fdiv
and
mov
pop
mov
(bad)
lock
js
dec
add
sbb
fdiv
dec
cmp
in
movs
sub
retf
push
sbb
mov
adc
test
push
mov
fbstp
pop
xchg
ror
sbb
cli
sub
pop
pusha
and
test
pop
xor
jl
dec
das
fisubr
inc
push
bsf
retf
mov
xor
mov
repz
sbb
adc
add
outs
adc
loop
fdivr
ror
sub
cs
ret
mov
fimul
mov
mov
mov
sub
lods
bound
push
xlat
out
or
cmp
push
xchg
sar
sub
push
loop
lahf
mov
out
mov
mov
call
dec
push
add
xchg
add
jl
fiadd
mov
ret
mov
add
adc
and
xor
push
mov
sbb
fisub
jecxz
add
adc
and
xor
inc
fist
fdiv
xchg
int3
movs
mov
mov
les
hlt
in
xchg
add
call
cli
push
out
gs
xchg
call
(bad)
or
sbb
push
ss
cmp
inc
dec
mov
sbb
jl
jl
xchg
mov
(bad)
mov
cld
test
mov
aaa
fild
push
xchg
addr16
ja
xchg
mov
mov
(bad)
pop
std
nop
xlat
mov
sar
(bad)
lods
nop
cmp
mov
cs
or
pop
jge
(bad)
ins
mov
std
cld
hlt
ror
cld
xchg
jl
call
mov
xchg
sbb
jl
das
sbb
xchg
call
jmp
xor
mov
jns
jl
mov
mov
test
jl
aam
into
dec
xlat
xor
mov
out
jmp
push
jl
jmp
push
jo
jl
add
repz
mov
das
xchg
jne
and
mov
loope
mul
jmp
dec
stc
adc
outs
pop
ret
mov
sbb
jl
ret
sub
add
fcom
scas
cmp
dec
add
iret
mov
sbb
popa
push
push
js
inc
and
adc
lods
cwde
ror
sbb
out
adc
sub
jo
sbb
jl
loop
inc
pusha
mov
sbb
lods
out
jecxz
enter
imul
scas
dec
enter
push
lods
call
imul
pop
loopne
pop
dec
in
fdivr
das
fdivr
(bad)
pxor
clc
imul
fisub
lods
xor
into
inc
or
sti
push
push
pushaw
nop
scas
sti
sahf
call
cmc
xor
mov
mov
mov
push
lock
adc
and
je
inc
pop
into
ins
jne
movs
fisubr
mov
fcomp
(bad)
jle
mov
or
int3
adc
sbb
xor
inc
inc
push
push
mov
cmp
mov
mov
rcl
fdivp
add
repnz
adc
loop
xor
loop
and
xor
or
jno
movs
xchg
push
sub
shl
mov
push
rol
rcl
lods
fsub
repz
mov
cmp
outs
out
inc
push
jl
dec
dec
cmp
mov
cmp
hlt
jns
mov
dec
in
pushf
jbe
mov
shr
loope
and
or
sub
cmp
xchg
dec
mov
adc
mov
pop
fdiv
add
xor
call
inc
test
xor
out
ss
movs
in
pop
aad
push
ins
in
pop
cmc
inc
pop
clc
push
imul
push
jnp
sbb
mov
in
push
xchg
ins
stos
bound
ins
inc
mov
retf
dec
push
fld
jmp
ins
fld
sti
mov
jge
or
or
mov
sbb
xchg
lods
fwait
dec
mov
or
lods
mov
pop
scas
push
lods
rol
xor
sbb
or
mov
push
add
ja
jl
lods
fiadd
test
imul
sbb
shl
xchg
out
cld
stos
dec
ins
in
int
fild
cmp
mov
jns
jl
loop
xchg
(bad)
sbb
in
sbb
mov
in
pop
popa
xchg
push
adc
add
sbb
ins
dec
add
stos
xor
jl
in
stos
(bad)
dec
and
jl
jns
shr
pop
inc
sbb
jl
and
sahf
sbb
addr16
ja
xchg
cmps
pop
xor
mov
retf
(bad)
pop
cld
sub
dec
adc
mov
call
adc
push
js
mov
cwde
mov
jl
lock
cmp
cmp
out
fs
pop
sbb
or
call
movs
call
repnz
mov
dec
sub
cmp
lods
cld
retf
pop
pop
xor
dec
push
jge
pop
lods
cdq
pop
inc
mov
jl
call
jl
test
cwde
retf
call
dec
nop
or
(bad)
pop
and
aaa
leave
lock
idiv
sub
ror
popa
ss
push
shr
xchg
in
aad
mov
mov
mov
lea
jl
jns
pop
jl
dec
mov
mov
in
call
ins
sbb
add
push
adc
adc
iret
cmp
mov
ins
out
outs
(bad)
leave
jnp
xchg
out
in
dec
lea
push
dec
sbb
xchg
lods
cli
pop
or
jmp
fs
inc
ja
ins
loop
adc
mov
mov
sbb
xor
sub
dec
lods
mov
sbb
cmp
mov
sub
lods
xchg
push
movs
jp
cmp
call
mov
jae
jl
lods
mov
sub
jl
jmp
cli
push
xchg
mov
mov
push
in
clc
test
(bad)
xchg
mov
sub
mov
out
sbb
ins
push
sbb
(bad)
retf
neg
fs
movs
test
out
aas
push
mov
push
xchg
mov
sbb
in
ja
int
std
aad
movs
ret
push
xchg
inc
inc
inc
sbb
or
idiv
jne
jae
loopne
test
sahf
xor
and
sbb
in
xchg
aas
das
adc
outs
inc
inc
jns
mov
popa
lea
in
cmp
out
push
mov
sub
and
and
sbb
jl
or
adc
jae
adc
in
mov
arpl
push
into
push
arpl
fcmovnbe
popf
cmp
mov
fild
mov
(bad)
mov
push
loopne
lods
sub
das
loop
mov
mov
sbb
fistp
imul
jl
imul
mov
lods
sub
sbb
push
aas
pop
lods
jecxz
add
aad
call
ins
mov
push
xchg
jmp
jecxz
jne
gs
push
rcr
adc
popf
hlt
pop
in
aam
mov
rcl
out
jl
stos
test
fisub
adc
jle
jne
fdiv
rcl
mov
rcl
xchg
sti
jb
arpl
push
and
int3
xor
pop
and
mov
repnz
mov
shl
dec
mov
add
jb
or
push
jno
xor
clc
pushf
and
add
icebp
nop
fsub
jmp
fs
mov
test
int3
xchg
push
dec
jno
cwde
imul
js
pop
inc
jge
xor
pop
adc
loopne
and
rol
push
cmp
mov
sbb
sbb
pusha
inc
call
and
xor
and
adc
add
jmp
rcl
iret
adc
int
push
mov
bound
lahf
fmul
ret
outs
add
pop
adc
or
and
das
add
stos
pop
inc
dec
bsf
dec
out
sbb
mov
scas
adc
sahf
inc
sub
add
out
sbb
rep
pusha
neg
sbb
jae
ret
or
lods
xchg
dec
push
jb
push
in
mov
sub
lods
inc
pop
or
dec
xchg
mov
mov
adc
and
pop
outs
add
lods
fisubr
cld
fst
int
fstp
push
jmp
fidiv
test
mov
jb
cmp
mov
rcr
inc
xchg
or
and
xor
inc
cmp
pop
(bad)
mov
aas
sbb
(bad)
cld
jecxz
add
adc
and
xor
popf
inc
leave
fs
je
sbb
leave
xchg
jl
test
hlt
mov
adc
inc
push
les
jne
sbb
in
fsub
aad
pop
in
push
sbb
aam
push
dec
jge
push
push
jle
pop
data16
(bad)
ins
(bad)
popa
jo
sbb
neg
retf
daa
in
aaa
sbb
xchg
push
pop
lods
(bad)
xchg
xchg
push
cmps
xchg
mov
(bad)
pushf
xlat
mov
mov
dec
mov
push
scas
arpl
push
lods
cmp
jmp
or
fcom
mov
push
inc
(bad)
movs
add
xlat
movs
movs
xchg
cli
xlat
cmps
leave
xchg
sbb
outs
or
jle
inc
in
ss
jecxz
push
mov
loop
fcmovnbe
fcmovb
call
fadd
cs
mov
and
hlt
fcmovnbe
ficom
out
out
in
mov
mov
stc
adc
repz
or
pop
div
sbb
xor
xchg
adc
loop
sbb
pop
sub
sub
dec
adc
push
bound
(bad)
and
add
sar
fsub
jno
fbstp
inc
fistp
adc
shr
mov
enter
cmp
jo
sub
xor
jne
fadd
push
cld
ffreep
iret
ins
sahf
(bad)
sub
xchg
dec
pop
jg
jl
mov
iret
clc
aas
fild
and
xor
pop
movups
fsub
xor
out
stos
inc
sbb
mov
into
push
pop
add
cmp
in
mov
sar
fdiv
add
and
inc
jns
pop
push
cdq
ins
(bad)
popa
mov
jno
setno
pop
mov
jmp
loope
jg
or
add
sbb
ins
out
and
and
test
ins
pusha
in
nop
sbb
jne
sbb
jb
shl
push
shr
mov
adc
pop
xor
inc
repnz
add
sbb
inc
fld
arpl
jae
jmp
rol
ins
jbe
jl
repz
sbb
out
push
mov
inc
jl
rol
dec
loope
movs
loop
(bad)
lods
cld
jmp
pop
sub
and
in
sub
xor
das
ins
mov
sbb
cmp
movs
enter
jl
test
out
movs
into
jmp
dec
movs
in
inc
and
and
stos
push
inc
aam
mov
bound
add
shl
cmp
(bad)
jecxz
outs
push
pop
cmc
in
stc
push
(bad)
sbb
mov
jnp
jecxz
ds
jecxz
stos
pop
inc
(bad)
push
int3
mov
push
retf
sbb
xchg
sti
adc
iret
or
mov
or
mov
push
sub
ja
cmps
movs
cli
adc
jmp
adc
shr
or
or
lods
jecxz
jbe
out
xchg
psrlw
adc
fld
in
ja
jl
jl
fst
jl
or
stos
jnp
call
out
and
dec
ins
or
jno
popa
mov
dec
push
idiv
sbb
and
pop
loop
sub
jmp
pop
pop
fdivrp
add
sbb
mov
mov
lods
jae
sbb
dec
pop
out
pop
pop
sbb
add
cli
jmp
cmp
ret
push
jbe
addr16
ja
or
in
das
mov
jecxz
push
mov
xor
mov
jmp
call
cmp
fcomp
sub
dec
in
adc
jl
cwde
ja
mov
aas
mov
loopne
call
adc
nop
mov
cli
or
push
ins
jo
dec
mov
mov
or
mov
ins
retf
jmp
or
ins
pop
dec
inc
call
dec
lods
lock
jno
out
jl
ret
in
mov
jl
push
mov
cmp
pop
les
xchg
sbb
out
mov
pop
mov
jle
data16
jl
mov
(bad)
dec
jle
rcr
data16
mov
ja
and
es
push
sbb
push
lds
data16
mov
xchg
pushf
mov
test
jne
gs
xchg
call
sbb
and
aaa
sbb
fiadd
and
add
sub
sbb
xor
ins
retf
push
shr
les
mov
adc
jl
sbb
mov
ret
push
in
(bad)
into
call
mov
mov
dec
test
mov
call
or
fisttp
mov
adc
aas
xor
pushf
lods
pop
out
mov
push
push
lods
inc
push
xlat
jns
lods
retf
inc
and
dec
add
call
or
sbb
lods
stos
mov
dec
outs
popf
and
retf
fidiv
cmc
sbb
mov
xchg
dec
cmp
sbb
or
jge
inc
cmp
sbb
inc
call
inc
lods
xchg
in
and
int
(bad)
imul
adc
push
xlat
xchg
push
lods
push
(bad)
in
(bad)
stos
aad
mov
test
ins
xchg
jmp
inc
test
push
stc
mov
aam
sbb
mov
jle
mov
cmc
repnz
fbld
ins
outs
xchg
ficomp
pop
in
outs
adc
pop
sbb
dec
loopne
jge
jmp
out
in
pop
sahf
push
es
inc
scas
xor
push
bound
jg
and
fidivr
scas
mov
xchg
add
inc
jbe
pusha
pop
sbb
push
rcr
jmp
sub
or
mov
jl
cmp
and
or
add
sahf
enter
mov
pop
cmp
into
test
mov
int
rol
test
jl
mov
(bad)
ss
arpl
sbb
mov
push
ja
mov
add
into
mov
out
ficom
pop
fld
js
mov
enter
out
in
xchg
jns
je
lods
test
leave
push
jl
jecxz
and
ror
inc
lods
es
or
fst
push
cld
jmp
lds
mov
repz
fist
push
inc
xchg
and
xchg
add
ins
mov
lods
movs
mov
xchg
inc
leave
test
je
rcr
xchg
fst
inc
mov
mov
test
arpl
adc
cdq
mov
test
ror
fsub
imul
aam
inc
pop
and
dec
dec
adc
rol
pop
repnz
fadd
mov
mov
sbb
or
(bad)
call
fcomp
popa
pop
add
enter
ins
rcl
sar
mov
cwde
mov
js
xor
push
and
jmp
in
push
lock
shr
mov
test
test
and
push
adc
inc
(bad)
out
fcmovu
fcmove
xchg
sti
mov
scas
cmc
xchg
in
push
adc
int3
jb
pop
bound
shl
movs
aas
push
adc
test
sbb
ror
jne
(bad)
out
cld
dec
fcomp
into
les
enter
out
add
repnz
cmp
jle
mov
sbb
dec
ins
mov
sbb
ret
mov
jb
push
push
xlat
test
jne
cwde
std
add
xchg
dec
imul
mov
or
addr16
aas
repnz
xchg
jl
loope
(bad)
cmp
shl
popf
mov
int
(bad)
fnsave
push
push
mov
xor
mov
jge
or
jl
ret
sbb
call
inc
pop
jae
push
xchg
xchg
xor
mov
dec
jmp
adc
sbb
jle
sbb
pusha
jl
sub
push
jmp
sbb
fistp
push
js
ss
inc
mov
push
je
data16
xchg
stos
cwde
cmp
mov
call
pushf
pop
inc
call
pop
push
mov
mov
xchg
mov
push
mov
in
(bad)
pushf
xlat
mov
call
loopne
lods
cmp
imul
push
push
jl
repnz
test
or
test
call
aad
jl
pop
mul
ins
out
pop
dec
lea
xchg
jl
sbb
call
(bad)
test
xor
pop
cmp
fisubr
xchg
lods
je
mov
test
adc
add
jecxz
stos
ret
mov
ja
sti
xchg
das
fild
jae
sbb
inc
aas
dec
xor
sub
aam
dec
push
repnz
pop
pop
sar
jne
sbb
outs
fbld
or
outs
and
js
lahf
jle
les
or
outs
cwde
shr
shr
sub
retf
rcr
cli
and
xlat
adc
add
enter
rol
rcr
les
ins
pusha
mov
push
pushf
xor
scas
pop
and
adc
(bad)
pop
out
cli
(bad)
in
adc
call
or
pop
retf
jg
fisttp
outs
out
cdq
pop
out
pop
dec
retf
aas
call
sbb
test
sete
inc
sub
(bad)
out
push
(bad)
cmp
pusha
pop
into
jo
dec
push
ins
and
nop
sbb
in
mov
mov
lods
movups
and
xor
aas
fnstsw
lahf
aam
xchg
sar
sbb
loope
inc
loop
pusha
add
adc
dec
and
nop
in
inc
mov
rcr
push
cld
shl
jb
loopne
loop
xchg
out
adc
shl
adc
and
ja
sar
mov
mov
ins
or
sbb
shr
loop
stc
retf
inc
call
sbb
cmp
cmps
mov
or
jl
pop
adc
out
push
das
add
out
jns
and
and
xor
push
sub
fs
sbb
jl
lock
bound
cmp
mov
pusha
xchg
cld
add
pop
popa
mov
sti
hlt
push
and
sub
retf
(bad)
push
out
sub
int3
lods
movs
sbb
int3
aad
pop
in
les
cmc
imul
jl
call
cwde
inc
out
sahf
push
fcmovnu
jl
lods
push
jmp
sti
push
or
cli
sbb
bound
lods
sbb
inc
sbb
jl
mov
adc
rcr
ret
sti
fidiv
jl
or
mov
or
lods
sbb
adc
and
jl
fwait
cmp
in
ins
push
sbb
sbb
jmp
lods
outs
or
fld
aaa
jl
jmp
sub
call
inc
stos
and
mov
js
lods
push
pop
cli
sub
or
inc
clc
loopne
imul
jle
out
jl
(bad)
mov
pop
push
lock
mov
inc
jl
inc
in
out
imul
ja
test
xchg
jl
cmps
gs
rol
loop
clc
pop
fcmovbe
jne
lods
out
test
or
mov
push
fcomi
inc
ins
xlat
sbb
jl
or
lods
sub
dec
stos
bound
mov
fsub
xchg
xor
sbb
dec
loop
retf
mov
pusha
ret
jl
sbb
sbb
into
call
xor
sbb
and
ins
mov
sbb
lods
add
pop
mov
jl
fmul
les
mov
pop
xor
jl
cmp
in
mov
xor
cmp
mov
xchg
nop
push
dec
pop
mov
mov
idiv
inc
pop
mov
mov
and
xor
xchg
adc
clc
aad
inc
in
popa
lds
adc
dec
or
ins
pop
mov
dec
adc
ins
dec
pop
and
retf
mov
fsubr
sti
jp
hlt
mov
push
pop
add
mov
aam
mov
mov
xchg
ins
mov
sahf
and
jge
cli
lods
(bad)
fiadd
retf
fistp
hlt
dec
jl
jp
push
xor
mov
retf
dec
cmp
or
inc
and
sahf
addr16
jmp
push
push
jl
cwde
pop
test
xor
sahf
or
jmp
call
cmp
cli
(bad)
mov
pop
loope
jl
jmp
movs
push
retf
ds
adc
(bad)
sub
fdivr
xor
movs
mov
sti
aad
inc
call
push
cld
mov
sbb
(bad)
cld
cwde
movs
add
xor
cwde
ds
push
xor
dec
imul
(bad)
dec
jns
sbb
cmp
inc
lods
adc
in
xor
inc
sbb
sar
mul
fisub
push
inc
cld
out
ss
or
in
(bad)
aad
mov
movs
mov
lea
mov
xor
shl
ins
xchg
sbb
call
gs
mov
clc
push
std
mov
sub
and
aaa
jl
std
fiadd
xchg
aas
lea
out
(bad)
add
frstor
jl
inc
(bad)
fcomp
out
je
dec
in
fsubr
aas
je
dec
pop
in
enter
sbb
dec
(bad)
dec
mov
push
pushf
jo
or
dec
loopne
lods
add
inc
cbw
popa
pop
jno
xchg
cmp
rol
jl
fidiv
fcom
les
add
mov
ja
arpl
inc
sar
ja
or
pop
cmp
les
or
jne
xchg
pop
movs
fcmovnbe
(bad)
fadd
push
mov
mov
sbb
mov
push
mov
sbb
(bad)
xchg
cmc
cmp
jl
(bad)
fdivr
add
hlt
push
test
jmp
dec
jo
ins
or
mov
ins
inc
push
ss
push
retf
push
xchg
cli
in
lods
xchg
aad
mov
lods
movs
add
xchg
dec
test
jne
gs
ja
leave
sbb
jecxz
and
add
(bad)
les
ret
xchg
clc
je
dec
fs
leave
push
mov
sbb
xor
lods
or
test
fstp
ret
push
repz
imul
dec
push
mov
xor
fcom
inc
sub
xor
repnz
int3
add
ret
mov
adc
mov
sbb
movs
fdivr
or
push
mov
icebp
fsub
rcl
rol
push
pop
xchg
les
popa
sub
push
sub
and
hlt
inc
lock
not
push
mov
mov
jo
pusha
rcl
pushf
(bad)
push
adc
mov
and
xor
inc
loopne
inc
iret
sbb
scas
fsub
pop
lahf
aam
sar
aam
loope
pop
data16
sbb
lods
dec
xor
jl
loop
jb
das
xchg
(bad)
fldenv
paddq
loop
mul
dec
sbb
mov
in
mov
pop
lods
loopne
mov
outs
jl
sbb
or
nop
ds
xchg
pop
shl
jbe
icebp
push
sar
dec
xchg
inc
ja
pusha
sub
sbb
mov
jne
mov
sbb
inc
fldcw
mov
rcl
in
xchg
mov
or
and
sbb
jl
cld
icebp
xor
add
jl
inc
push
je
dec
rcl
mov
jl
pushf
loop
repnz
mov
xor
lods
inc
out
push
pop
jae
cld
adc
dec
mov
or
repz
adc
dec
sbb
bnd
(bad)
in
in
movs
fwait
sbb
cmp
fcmovb
fcom
in
hlt
pop
movs
ficomp
pushf
inc
push
cld
adc
xchg
push
jl
mov
(bad)
cmc
fmul
test
fild
xchg
sbb
sbb
jl
les
pop
mov
(bad)
mov
pop
dec
daa
mov
fild
ja
xchg
mov
(bad)
cli
sub
scas
mov
out
in
imul
inc
xlat
dec
pusha
jl
push
popf
(bad)
mov
cld
xchg
ja
addr16
sbb
mov
lds
mov
cld
xchg
dec
jl
xchg
jbe
push
pop
inc
mov
jle
xor
aad
lods
inc
dec
add
lods
fcomp
xor
test
shl
repz
mov
into
push
xchg
jmp
dec
dec
inc
int3
xor
fst
ret
int3
jecxz
fistp
ret
movd
sub
pop
cmp
arpl
dec
push
pop
inc
mov
lods
add
repnz
loop
rcr
ret
sar
xchg
outs
dec
sub
inc
fdiv
jg
and
add
dec
loope
rcl
fadd
mov
mov
mov
and
mov
jl
sbb
lods
lock
call
sbb
jl
pushf
nop
mov
cmp
(bad)
jg
adc
pop
clc
add
push
fucomip
iret
lahf
sahf
mov
dec
sub
out
pop
outs
(bad)
sbb
dec
add
adc
aas
mov
das
sbb
mov
inc
dec
pop
push
push
out
xchg
fistp
pusha
mov
outs
mov
ror
lods
test
and
rdtsc
mov
push
fstp
popa
fstp
jno
jmp
mov
mov
stc
in
sbb
adc
es
sub
inc
jmp
push
fiadd
cld
mov
rcl
ret
jne
movs
adc
xor
repnz
dec
push
adc
adc
xor
ins
es
mov
xchg
jmp
add
loope
icebp
cwde
lods
adc
mov
in
call
jl
jmp
cli
in
lods
mov
retf
out
and
test
pop
dec
jns
push
jl
mov
scas
sbb
lods
popa
sbb
sbb
sub
rcr
or
arpl
cld
xchg
fsub
sbb
pusha
jl
push
add
fbld
push
stos
sbb
add
jne
xchg
fcmovu
movs
cli
cld
(bad)
sbb
adc
test
clc
cmp
in
cmps
sbb
pop
call
mov
es
stos
fdiv
inc
in
inc
push
movs
call
mov
jmp
sar
xchg
ins
push
mov
jl
retf
push
movs
pop
mov
and
ins
jle
sbb
jge
ins
fiadd
xchg
add
ins
outs
mov
dec
loope
pop
push
fldcw
xchg
sbb
enter
popa
les
jl
inc
movs
jl
jbe
xor
push
sbb
jl
in
push
sti
adc
lock
movs
loop
call
ins
in
jl
mov
mov
push
pop
lods
xchg
mov
addr16
sub
cli
in
inc
add
sbb
lods
sub
mov
das
jns
jle
mov
pop
mov
ins
ror
adc
mov
test
pop
cli
pop
lods
sbb
aaa
and
push
push
sbb
js
pop
sti
ja
lock
cmc
add
pop
lods
mov
cld
(bad)
pop
cmp
out
jl
push
lock
cmp
dec
cmp
mul
dec
jl
clc
jo
ins
fsubr
pop
loopne
jmp
jmp
mov
cdq
stos
ins
jl
sbb
jl
pop
ins
stos
sbb
fcom
pop
sbb
call
xor
sbb
sbb
push
loop
cmp
and
jl
xor
mov
mov
or
mov
sbb
xor
jl
mov
test
(bad)
jno
cld
push
pop
jl
cli
inc
jl
sti
mov
imul
mov
jo
clc
jl
mov
daa
dec
xlat
pop
sub
add
mov
data16
jl
frstor
es
sub
repz
push
pop
(bad)
aad
popa
in
jno
sbb
movs
cmp
xchg
sahf
xchg
jne
jl
gs
inc
aaa
sub
mov
lods
inc
out
xchg
in
dec
xor
jmp
push
stc
fimul
dec
jno
aam
fwait
popa
shr
imul
movs
retf
or
cli
fst
inc
in
push
stos
stos
xor
mov
or
push
dec
mov
out
or
mov
or
inc
mov
or
sub
jle
jmp
fwait
inc
xor
adc
or
les
lods
pop
call
xchg
mov
ins
sbb
stos
ins
mov
mov
pop
pop
fiadd
(bad)
jl
in
imul
jmp
sbb
movs
movs
xchg
mov
in
ins
pop
call
ficomp
fmul
cli
cld
enter
(bad)
retf
ins
stos
mov
pop
push
dec
mov
pop
sbb
or
cwde
xchg
in
ins
pop
cdq
jl
sbb
jmp
(bad)
fcomp
mov
sub
(bad)
dec
test
call
fcmovbe
in
fidivr
cmps
fcom
ja
test
sbb
add
lods
(bad)
cmp
xchg
in
pop
xchg
ins
or
sub
dec
vucomisd
mov
cld
test
paddq
std
lods
stc
push
mov
sbb
jl
xchg
inc
test
mov
out
fild
push
jbe
and
sub
pop
mov
fisttp
pop
cmp
push
or
out
ds
daa
cld
pop
lods
imul
ins
sbb
pop
sub
adc
sbb
scas
sub
dec
cmp
pusha
enter
test
mov
mov
sbb
pop
test
int
rol
mov
mov
adc
xor
push
or
ret
sub
test
(bad)
push
ins
push
(bad)
cmp
loopne
ja
xchg
lods
gs
test
mov
lods
mov
jbe
push
jl
jmp
jl
mov
dec
dec
jl
mov
ja
xchg
xchg
test
fcmovb
fsub
or
pop
mov
cwde
mov
cdq
inc
dec
in
loop
jmp
sbb
lods
mov
mov
ins
inc
(bad)
out
es
leave
rcl
push
push
mov
popf
jmp
lds
xchg
mov
push
jl
xchg
inc
int3
xor
adc
or
jecxz
in
aam
mov
cwde
movs
pop
xchg
fild
ret
push
mov
inc
cdq
mov
pusha
jl
and
test
ret
adc
xchg
push
or
loopne
and
repnz
ret
mov
xchg
dec
adc
push
sub
movs
inc
sbb
and
pop
add
mov
clc
xchg
shr
and
xchg
push
push
cmp
imul
movs
sar
and
sub
push
jmp
inc
in
sub
push
mov
or
in
or
loopne
fcom
rol
sahf
out
les
jo
pusha
dec
(bad)
sbb
and
adc
jl
cld
cmps
inc
call
fistp
and
jle
cld
(bad)
in
call
jl
push
mov
popf
aas
pushf
das
adc
and
pmaddwd
(bad)
inc
out
mov
fiadd
pop
into
loop
mov
sbb
int
loop
mov
jle
add
pop
call
mul
mov
xchg
(bad)
cs
xchg
out
mov
push
push
xchg
fisubr
xchg
mov
mov
jno
xor
mov
ja
push
mov
cmp
shl
pop
lods
or
div
test
or
mov
xchg
popa
xor
jmp
frstor
mov
(bad)
xlat
pusha
jl
out
adc
xor
pop
inc
fist
jae
sub
or
mov
ret
sub
cmps
repz
dec
jge
lods
dec
push
jl
jle
sbb
push
jl
jmp
push
fcmovnbe
js
hlt
fild
mov
gs
fcom
(bad)
mov
push
into
dec
es
ins
pop
imul
clc
jbe
mov
cmp
lods
sub
push
mov
push
sub
push
call
sbb
jl
gs
push
loopne
mov
pop
in
dec
arpl
pop
ret
adc
out
mov
in
xor
movs
movs
mov
jl
fst
dec
out
and
fs
loopne
xchg
test
test
inc
fidivr
push
push
in
movs
cmc
cld
in
sbb
jl
in
movs
xchg
in
ins
lods
test
pop
inc
mov
dec
hlt
mov
lods
pop
mov
or
(bad)
sbb
ficomp
xor
add
repz
jecxz
jl
out
dec
jmp
mov
pop
mov
xchg
lods
jae
push
inc
das
js
in
adc
aas
and
fidivr
ror
ret
mov
push
mov
sub
jmp
(bad)
jg
xor
xchg
sbb
dec
add
jle
movs
and
movs
sbb
enter
xchg
rcr
sub
inc
mov
pop
add
loopne
iret
mov
sbb
ja
pusha
clc
imul
xchg
xor
les
add
scas
or
movs
mov
iret
sbb
sub
outs
add
pop
cwde
aas
add
movs
dec
pop
xor
cmc
xchg
jl
movaps
cmp
push
ins
out
enter
fidivr
jo
retf
sub
mov
int3
loopne
(bad)
lods
adc
pop
and
inc
data16
popa
repnz
sbb
mov
leave
ffreep
sub
fdivr
icebp
fld
add
adc
and
push
inc
inc
and
push
adc
jne
call
xchg
in
shl
loop
and
inc
repnz
popa
pop
adc
jno
fs
jae
xor
push
icebp
imul
mov
pop
and
inc
or
lods
in
cmps
xor
and
cmc
mov
fiadd
dec
sub
lea
lods
bound
jb
cmc
mov
pop
cmp
jmp
xchg
pop
or
les
fs
jl
jl
je
mov
cld
test
mov
enter
sbb
aam
pop
cld
hlt
mov
call
mov
call
call
lods
jmp
or
pusha
cmc
sub
dec
and
xchg
add
mov
mov
mov
mov
test
adc
dec
push
cli
xchg
dec
sub
jb
cmp
push
lods
and
bnd
cmp
lods
adc
outs
adc
add
cmp
xchg
icebp
jl
push
mov
xor
push
pop
jl
dec
adc
add
sbb
lods
xlat
ror
loopne
stos
mov
lods
xchg
jmp
push
call
jmp
ins
mov
jns
sti
ins
mov
nop
or
sub
jl
cli
push
and
sbb
sbb
mov
mov
in
loopne
mov
cld
inc
or
ins
add
stos
sub
out
loop
cmp
lods
clc
pop
pop
jl
pop
movs
cmp
daa
in
push
jl
inc
jmp
lods
addr16
dec
dec
rol
loopne
clc
mov
pop
mov
ins
lock
movs
pop
inc
xlat
adc
add
test
imul
push
or
call
lds
js
push
inc
xchg
xlat
mov
push
xchg
mov
loopne
xchg
xchg
sbb
data16
loop
out
inc
iret
pop
sbb
in
int
clc
lods
jmp
out
jmp
mov
aad
xchg
push
and
lods
adc
cli
mov
sbb
ins
push
and
icebp
dec
clc
pop
in
in
loopne
rcl
and
dec
dec
mov
sti
sbb
adc
jl
mov
cmp
mov
push
mov
xor
adc
jl
mov
jmp
inc
pop
push
out
call
ins
lds
popf
cmp
inc
cmps
sub
sbb
xor
call
push
xchg
mov
ror
jl
and
jbe
xchg
jnp
mov
jns
push
sbb
aam
inc
pop
cli
adc
pop
fisubr
xchg
jmp
inc
repz
call
mov
push
stos
dec
js
lods
in
in
mov
mov
lods
inc
loop
mov
xor
xor
cmc
inc
jl
mov
pop
push
lods
mov
dec
call
ret
jl
cmp
cdq
mov
push
jl
test
and
cmp
jmp
and
icebp
pop
ins
retf
sahf
pop
and
ficomp
jl
push
hlt
out
call
sub
enter
dec
popf
rcr
movs
xchg
jp
push
pop
jmp
push
dec
shr
fst
not
jmp
xchg
jl
sbb
imul
call
push
pop
arpl
push
outs
into
push
and
loop
sar
loop
xchg
arpl
dec
ret
mul
dec
push
clc
xchg
xchg
xor
dec
jmp
(bad)
sbb
xchg
dec
outs
sub
add
pop
in
xchg
aas
and
rcl
arpl
fild
sahf
fld
ds
dec
je
pop
cmp
cmp
sahf
(bad)
in
in
push
mov
sahf
push
sbb
loop
rcr
call
adc
and
mov
icebp
loop
mov
inc
ja
mov
test
icebp
mov
adc
test
sbb
xchg
call
loop
jno
push
ins
sbb
mov
dec
xchg
jns
(bad)
dec
out
fucom
in
in
stos
adc
push
les
cld
sub
test
and
xchg
cmp
inc
popf
and
daa
jbe
mov
sbb
xchg
cmps
add
mov
cmp
into
fld
or
hlt
mov
(bad)
dec
cwde
jns
cdq
mov
iret
jl
push
xor
cdq
or
call
retf
cmc
push
leave
in
aad
adc
sbb
push
jne
cld
adc
jp
jl
and
repz
hlt
(bad)
in
aam
(bad)
aam
sar
xchg
les
pusha
sbb
ret
jbe
jl
ss
mov
repz
sbb
rcr
std
out
jns
jae
packsswb
lods
test
inc
sub
test
adc
shl
dec
adc
mov
add
test
sbb
adc
adc
adc
jb
call
fdiv
xchg
enter
sub
adc
popa
ins
cwde
rcl
cdq
js
push
push
in
sub
xchg
add
add
jl
shl
mov
jo
and
inc
jl
xor
les
stos
adc
mov
scas
(bad)
(bad)
jg
mov
xor
pop
jl
fcom
pop
aas
aam
jno
pop
xchg
xchg
sbb
pop
jl
rol
add
call
sbb
dec
xchg
out
adc
mov
ret
imul
and
lods
jl
jmp
ror
mov
aaa
sbb
sbb
push
outs
dec
popa
mov
fcomip
lods
mov
jns
out
fst
nop
inc
imul
push
mov
cli
mov
scas
ins
loopne
push
pop
lods
xchg
(bad)
rcr
(bad)
movs
add
int
ficom
out
pop
test
mov
test
cmps
loopne
xor
dec
ret
jl
call
and
out
push
test
cld
arpl
jecxz
ret
sbb
mov
dec
mov
sbb
inc
and
jecxz
push
inc
sbb
mov
lods
mov
jl
(bad)
hlt
sub
int
dec
inc
mov
cwde
int
in
xchg
jl
in
mov
nop
(bad)
fst
out
jl
push
pop
ss
fadd
dec
in
test
lods
push
mov
dec
lods
ins
push
es
fnsave
sbb
retf
ins
cmps
je
sbb
mov
neg
std
inc
push
dec
out
sbb
in
pop
or
mov
add
(bad)
push
imul
cmp
mov
jl
cs
inc
int3
aaa
ds
pop
fidivr
push
push
sbb
cmp
jle
mov
ins
fdivr
jl
movs
inc
xchg
mov
in
ins
push
clc
js
add
fisub
sub
sbb
sub
add
cmp
dec
ins
imul
pop
rcl
prefetchwt1
push
fdiv
and
das
mov
or
aas
shl
sub
sti
cwde
ret
mov
sub
jl
mov
in
movs
and
jg
loope
mov
mov
shl
fsubr
jno
inc
popa
jge
push
inc
mov
push
sbb
dec
add
clc
loopne
sar
sub
pop
pop
cmp
pop
jl
or
jl
call
iret
sbb
adc
jl
push
out
jle
fdivr
add
sbb
pop
shr
push
das
imul
xor
sbb
inc
(bad)
xchg
jl
leave
imul
cld
inc
pusha
inc
call
mov
ins
aas
rcr
add
ins
pop
push
(bad)
clc
adc
lahf
sbb
inc
cdq
push
adc
jl
ffreep
jns
sub
mov
inc
sar
push
icebp
sbb
in
fidiv
rol
loopne
mov
outs
das
and
inc
ins
popa
repnz
in
adc
mov
shl
shl
push
fdiv
add
arpl
cld
and
mov
pop
inc
rep
test
push
jmp
mov
jge
jb
inc
jmp
xor
jl
pop
fldcw
add
dec
jl
mov
sbb
mov
pop
loopne
and
dec
push
call
pop
ret
in
pop
jl
mov
jl
movs
in
movs
mov
push
ins
in
cli
sub
add
unpckhps
xchg
int
xor
pop
gs
add
retf
sbb
jmp
cld
pop
lods
mov
cmc
(bad)
call
push
es
dec
mov
jnp
cmps
inc
or
bound
push
mov
jl
jmp
xor
jbe
adc
add
lods
call
rcl
sbb
lods
in
xchg
sbb
ins
cmp
xchg
lods
inc
push
pop
xor
and
jl
add
mov
lock
and
dec
pop
or
lods
sar
jecxz
push
cmp
jl
fisttp
mov
pusha
xchg
mov
stos
in
int
das
leave
ins
dec
mov
ins
xor
adc
pop
mov
in
ins
sbb
dec
nop
cmps
jge
jl
stos
and
push
mov
(bad)
(bad)
jo
out
out
out
in
mov
test
or
ss
jecxz
imul
pop
lods
out
mov
mov
in
int
das
and
inc
lods
mov
ja
jl
fisub
xchg
in
xchg
add
data16
jo
ins
fcmovb
dec
pop
cli
jl
out
mov
mov
sub
lods
jmp
ins
push
mov
push
sbb
call
out
sbb
imul
retf
pop
jmp
mov
out
(bad)
jo
nop
pusha
iret
sbb
mov
call
xchg
jmp
sbb
mov
add
sub
lods
and
sbb
lods
in
mov
in
outs
dec
jl
sbb
or
add
lods
call
pop
push
enter
test
sbb
cld
js
jl
dec
xor
or
xlat
ins
mov
jl
inc
adc
sahf
jno
pop
neg
mov
jp
sbb
dec
inc
adc
push
sub
sub
and
sbb
in
inc
lds
jle
jle
out
sbb
std
xor
pop
mov
adc
inc
or
jge
dec
inc
jmp
hlt
(bad)
xor
ins
mov
dec
out
inc
cmp
int3
mov
inc
add
ins
(bad)
xor
dec
xlat
dec
in
loopne
and
pop
push
fst
outs
das
loop
pop
sbb
ins
dec
mov
fs
fisubr
adc
xchg
call
cmp
sbb
sbb
retf
nop
push
push
xor
sbb
or
mov
loop
mov
sar
push
sar
ja
inc
(bad)
mov
and
adc
mov
imul
in
add
xchg
adc
out
ret
aas
ins
xchg
sbb
inc
sbb
sbb
cli
in
dec
jmp
adc
or
imul
scas
ds
xchg
push
push
and
jae
(bad)
push
arpl
xchg
fild
and
add
fnstsw
les
mov
movs
mov
je
fs
inc
push
les
test
call
in
es
jo
jl
cs
pop
mov
sbb
mov
push
xor
pop
mov
adc
out
mov
(bad)
jl
mov
push
mov
outs
jnp
xchg
adc
ins
data16
rol
jbe
and
out
test
xor
test
jmp
or
jecxz
cmp
cmp
dec
xchg
les
lods
ficom
in
cmc
pushf
push
pop
push
fild
push
fdiv
les
push
imul
mov
addr16
sbb
mov
cmps
dec
loop
in
sar
mov
mov
sbb
xor
call
push
sbb
ins
xor
push
lock
cmp
push
je
cmc
in
mov
cwde
mov
cld
movs
push
sbb
mov
pop
gs
adc
inc
xchg
xor
fiadd
mov
repz
jl
push
cdq
push
xchg
jecxz
test
dec
je
ret
inc
clc
xor
jns
and
ficom
add
imul
jle
sbb
das
loope
cmp
jae
cmp
sub
sbb
push
and
repz
not
cmc
repnz
call
mov
mov
jb
push
enter
and
in
rcr
js
xchg
jle
mov
pop
shr
dec
mov
mov
jno
sub
sbb
or
cmp
fcomi
adc
add
fcom
rcr
xlat
mov
(bad)
mov
fdiv
les
xor
adc
add
repz
fistp
cwde
dec
js
xchg
sbb
mov
pop
ins
and
sbb
push
cmps
pop
das
inc
punpcklwd
sbb
shr
out
loope
mov
dec
sahf
and
inc
fadd
out
jge
pop
movs
inc
test
mov
arpl
outs
ins
push
frstor
xor
cmp
push
sar
inc
push
push
cmp
add
xchg
pop
mov
popa
push
jno
cmp
in
(bad)
jl
icebp
sbb
xchg
lods
push
icebp
loop
shl
cmps
mov
inc
sbb
jl
call
sbb
or
hlt
stos
test
mov
mov
arpl
or
sbb
jmp
sub
fild
adc
push
jl
fld
dec
xchg
jl
pop
test
sub
jl
lods
pop
add
and
push
popf
gs
jne
test
xchg
cwde
dec
movs
sbb
lods
lds
jl
jns
test
ja
xchg
push
inc
sbb
mov
call
adc
inc
mov
cmc
movs
add
or
lods
(bad)
dec
xlat
stos
mov
in
mov
adc
sbb
jl
xlat
jl
(bad)
jmp
xchg
push
adc
pop
stos
ds
out
xchg
lock
jns
xchg
les
jl
pop
int
push
fadd
cmc
adc
les
jns
jne
mov
or
scas
pop
lods
aam
mov
movs
mov
pusha
sub
inc
into
mov
fisubr
aad
pop
sar
movs
adc
out
sbb
jae
add
sbb
lods
pop
repnz
mov
dec
data16
call
dec
mov
jb
mov
xor
fadd
outs
pop
icebp
push
call
mov
xchg
(bad)
ins
cmp
inc
pushf
xor
xchg
add
cld
mov
sbb
jl
aam
jg
jo
outs
call
inc
xor
sbb
sbb
ins
dec
iret
sub
inc
jns
(bad)
jl
dec
lahf
out
mov
dec
pop
fmul
pop
inc
aas
das
sbb
pop
dec
cld
jmp
bswap
out
or
add
and
les
jns
jo
imul
jecxz
dec
rcr
loopne
jg
lods
pop
inc
mov
mov
movs
mov
push
cdq
push
shr
xor
mov
jne
movs
pusha
push
nop
in
cmps
mov
loopne
sahf
lock
shr
push
pop
mov
jb
adc
shr
dec
loope
inc
icebp
inc
sbb
sahf
and
adc
jae
xor
push
cmp
ret
in
outs
loop
jb
jns
cmc
repz
mov
jmp
mov
xchg
leave
lods
mov
mov
push
popf
xchg
stos
leave
jle
setp
inc
push
call
xchg
sub
lods
je
fldenv
test
stc
out
jmp
in
movs
hlt
pop
adc
sub
int
jecxz
push
pop
fs
lods
xchg
jp
test
stos
xor
and
pop
aad
jb
stc
cld
push
jl
dec
push
sub
mov
ss
es
sbb
dec
out
ins
inc
fldz
jmp
push
sbb
sbb
imul
lods
xor
and
jecxz
pop
add
call
mov
xchg
push
lods
popa
fiadd
imul
and
lock
fneni(8087
retf
mov
xor
das
neg
stos
nop
in
in
jl
push
sbb
dec
inc
sar
add
mov
adc
pop
xchg
mov
enter
fild
xlat
retf
lods
jbe
or
aaa
xor
jmp
int3
adc
pusha
sub
sbb
sti
enter
das
scas
mov
mov
xor
cld
and
jle
add
pop
loopne
shl
popa
adc
inc
pusha
sbb
test
jbe
jl
or
pop
or
fldz
sub
daa
cmp
sar
push
sbb
pusha
addr16
or
xchg
les
cmp
in
adc
mov
mov
sub
sbb
jl
loopne
mov
fld
push
lock
pop
push
dec
pop
pop
push
mov
aas
js
xchg
mov
mov
dec
leave
shr
mov
lahf
test
sub
mov
sbb
iret
or
retf
pusha
pop
push
loop
pop
inc
fild
in
sti
cmp
xchg
movs
xor
pop
mov
mov
inc
xor
sbb
call
mov
xchg
pop
aaa
sbb
jl
mov
mov
mov
lods
call
mov
xchg
mov
or
pop
dec
cld
cmp
jle
dec
xor
jge
neg
(bad)
sbb
clc
sub
mov
inc
inc
cmp
xor
pop
jl
pushf
xor
sbb
sti
lock
add
adc
clc
sbb
jne
and
arpl
pop
jmp
jne
lods
gs
xor
or
mov
jl
and
add
xchg
jl
jno
jo
ins
fcmovb
cmp
sub
push
mov
xchg
lods
int3
xor
stos
loopne
inc
leave
xchg
push
sbb
jge
add
pop
retf
dec
nop
sub
jl
sbb
pop
or
and
sub
inc
jmp
xor
jno
in
and
ins
dec
xchg
adc
push
ja
dec
sar
jl
mov
pop
add
call
mov
pop
xchg
fdivrp
or
dec
and
sahf
push
sbb
test
loop
xchg
int
jmp
and
push
cmp
pop
dec
std
movs
push
cmc
add
xlat
xchg
lods
mov
popf
dec
nop
cmps
stos
sub
and
add
in
test
xor
ja
pop
test
mov
xor
aaa
lods
(bad)
daa
push
(bad)
jl
loopne
sub
sbb
lea
mov
dec
jge
jecxz
idiv
xchg
jl
pop
lahf
sub
cmps
dec
mov
xlat
jns
lods
xor
mov
dec
daa
jns
enter
adc
sahf
outs
xchg
xor
popa
fild
rol
loope
icebp
pushf
adc
xor
push
fsub
les
ret
adc
jl
les
pop
mov
mov
mov
mov
push
xchg
(bad)
hlt
sbb
add
sar
(bad)
dec
xchg
sbb
fidivr
pop
pop
mov
dec
int
cmp
ins
or
xlat
sbb
sub
pop
mov
test
std
sti
outs
enter
lods
retf
pop
ds
movs
mov
ins
dec
inc
sbb
gs
test
imul
inc
inc
cmc
cmp
in
aad
lds
xchg
mov
gs
les
jns
mov
adc
sbb
lods
mov
cld
(bad)
les
fcom
fs
jecxz
fadd
sar
and
add
sbb
ret
in
test
or
mov
sbb
jae
arpl
fsub
sub
xor
std
mov
sbb
test
inc
push
ret
mov
sti
xchg
mov
sbb
bound
js
xor
push
adc
add
and
pop
sbb
cmp
ins
loope
sub
jno
mov
sbb
or
call
nop
mul
les
cld
ja
cmps
sbb
sbb
out
jl
sahf
xlat
sbb
ficom
inc
xor
and
and
jne
lods
(bad)
mov
mov
test
xchg
mov
adc
sbb
cli
push
adc
pop
in
inc
shrd
(bad)
(bad)
call
mov
loop
push
cmp
shr
rcr
outs
adc
out
pop
fld1
inc
jge
push
out
(bad)
pop
idiv
bound
jb
cs
push
ret
sub
push
cmp
ins
std
inc
or
xlat
jecxz
out
(bad)
lea
rol
mov
aaa
movs
push
in
xchg
int
lods
inc
mov
and
out
and
retf
fnsave
shl
mov
and
pop
inc
repnz
push
(bad)
lods
(bad)
(bad)
or
xchg
loop
mov
add
sbb
mov
fbld
mov
inc
jae
ficomp
in
movs
sub
jle
jl
mov
dec
test
jmp
cmp
mov
(bad)
jmp
hlt
fild
cld
inc
outs
or
jns
ins
fsub
retf
in
mov
mov
es
pushf
inc
pop
data16
dec
test
mov
int
call
lods
daa
loop
rcr
push
dec
cli
ins
addr16
or
mov
xor
mov
push
mov
sbb
in
mov
std
add
ins
pop
loop
dec
lods
test
push
dec
lods
xchg
outs
cmp
cmp
inc
loopne
mov
pop
jl
(bad)
imul
mov
icebp
push
cmp
jl
or
mov
cmp
sbb
fs
daa
sbb
push
fisttp
movs
cmps
xor
add
in
push
aam
movs
pop
sub
test
mov
pushf
xor
dec
and
adc
data16
pop
jecxz
shr
mov
ja
cwde
xchg
sti
adc
push
mov
cli
jl
pop
pop
adc
add
mov
aas
mov
pop
mov
fcom
(bad)
fcmovu
push
fadd
cld
call
icebp
mov
mov
clc
mov
jg
cmp
fiadd
xor
dec
or
lock
jne
loopne
out
cli
mov
ins
xchg
jns
adc
pop
mov
inc
inc
movs
sbb
push
out
xchg
sbb
xor
dec
jg
(bad)
mov
aas
inc
add
repz
out
lahf
shrd
xor
xor
dec
sbb
in
mov
pop
jl
into
mov
gs
jge
cmp
nop
sbb
dec
out
mov
lods
dec
jno
adc
lods
enter
jns
mov
clc
(bad)
fbld
and
sbb
pusha
shl
loope
mov
inc
rol
(bad)
adc
in
call
bound
inc
jecxz
popa
adc
xchg
pop
xchg
mov
call
loop
icebp
add
adc
out
imul
push
mov
xchg
(bad)
fsubr
push
jecxz
xchg
inc
repz
jmp
add
jl
adc
hlt
in
loop
mov
cmp
mov
mov
jl
sbb
xchg
fistp
jbe
inc
ins
jns
ret
push
mov
cdq
test
pop
and
enter
jl
push
and
fcomp
cdq
cmc
xchg
pop
cmc
je
lods
jmp
fldenv
or
in
call
or
pop
inc
sub
test
jp
loopne
rcr
pop
(bad)
sahf
inc
push
sub
loopne
inc
push
sbb
shr
xor
cmp
inc
inc
jge
inc
mov
adc
add
loope
loopne
inc
ror
mov
sar
mov
jl
mov
or
popa
mov
push
adc
add
out
test
jno
cld
mov
das
imul
sbb
jo
jl
push
imul
cli
(bad)
jbe
pusha
pop
inc
inc
mov
test
inc
jnp
inc
sbb
xchg
jl
into
mov
mov
(bad)
iret
popa
pop
sbb
scas
mov
jmp
fistp
cli
call
ins
xchg
sbb
lods
mov
push
jl
ja
enter
cld
pop
jl
rcl
pop
jmp
and
(bad)
mov
cli
lods
test
jl
in
retf
call
jmp
adc
sbb
pop
push
dec
cli
ins
inc
sbb
sbb
and
xor
ins
adc
dec
dec
sub
xchg
or
push
cmps
mov
fidiv
push
pop
mov
sbb
inc
push
sub
pop
or
adc
sub
ror
mov
jl
arpl
push
aaa
test
aaa
jno
dec
loopne
push
hlt
sbb
add
add
jl
mov
jne
enter
jl
jl
pusha
sbb
ins
push
je
inc
sbb
xor
jl
mov
pop
dec
jl
inc
lods
retf
sbb
jb
sub
sbb
xchg
mov
mov
jl
cmp
inc
sub
test
lods
into
fs
ins
pop
retf
int
mov
dec
jo
jl
mov
ret
push
ins
xchg
push
inc
jle
nop
jl
daa
sbb
mov
(bad)
rol
test
inc
adc
or
sbb
loop
aad
popa
lds
xchg
sbb
adc
push
sti
movs
adc
fs
xor
rcl
call
imul
adc
pop
push
push
fsubr
ins
sbb
mov
mov
jmp
mov
inc
adc
sbb
fs
lock
leave
inc
je
sub
out
fstp
sbb
ret
imul
inc
inc
stc
ret
(bad)
mov
call
cld
or
push
popa
nop
ins
xor
or
mov
mov
jmp
mov
addr16
jp
pop
jl
jl
icebp
loope
jl
push
xchg
arpl
retf
fmul
mov
jmp
jmp
pop
jns
imul
pop
mov
or
dec
in
ret
in
dec
call
mov
repnz
daa
add
jl
pop
ret
push
xchg
xchg
in
sahf
inc
std
adc
dec
xchg
jl
in
mov
sbb
nop
inc
or
sbb
fisub
test
test
xor
sbb
in
mov
mov
sbb
mov
popa
adc
and
jl
adc
out
jl
aam
(bad)
cld
aas
les
push
(bad)
outs
mov
out
cmps
cld
add
adc
pop
test
fist
push
jns
adc
ins
pop
call
xchg
push
add
fbld
jb
fcom
jl
retf
sbb
xchg
fisub
repz
into
in
sbb
test
mov
push
jns
aam
cld
jmp
in
fidivr
xchg
mov
dec
in
sbb
jl
les
mov
rcr
xchg
mov
xchg
jns
mov
inc
fsub
push
cli
cmps
(bad)
mov
pop
push
loop
ins
sub
dec
ins
mov
sbb
cmps
ficomp
jb
outs
and
xor
sbb
ja
lods
fistp
in
xor
lods
mov
dec
cmps
sbb
jns
xchg
sbb
cmp
lods
shl
push
aad
(bad)
mov
movs
xor
xchg
lods
rol
leave
jl
fld
push
ins
sub
adc
add
test
aam
lods
mov
clc
movs
add
call
repz
jecxz
inc
xchg
mov
data16
test
pushf
repz
inc
cwde
xlat
sub
sar
xchg
jle
dec
dec
arpl
push
xor
and
adc
add
cmp
inc
add
lea
out
in
imul
mov
(bad)
repnz
push
test
adc
inc
lock
mov
shr
mov
sti
mov
loopne
loop
popa
cmp
push
inc
inc
or
pushf
adc
adc
and
ror
sbb
inc
jmp
mov
push
pop
in
mov
mov
cld
jg
outs
mov
sar
pop
sbb
(bad)
out
mov
cld
into
in
cwde
mov
scas
int3
sahf
jno
xchg
cmp
sar
scas
dec
loope
and
and
loop
push
cs
and
outs
push
inc
lods
push
mov
sbb
je
xchg
in
xchg
mov
or
les
jmp
mov
jno
lods
popa
sahf
int
jno
mov
cmp
xchg
mov
hlt
out
sbb
pop
loope
lea
(bad)
jl
push
and
dec
and
jns
dec
fcmovu
outs
pop
xlat
lods
in
test
lods
fnclex
mov
mov
test
xchg
sbb
sbb
cmp
repz
int
out
cmp
jbe
sbb
push
clc
mov
test
out
in
mov
add
repz
out
into
out
and
sub
fnsave
mov
ins
retf
outs
aad
lods
cmc
mov
outs
call
shr
clc
(bad)
out
sbb
jl
mov
neg
in
loop
mov
mov
jl
or
lods
dec
test
add
jl
cmp
mov
mov
popa
jns
push
lods
enter
mov
lods
sub
xor
retf
data16
fiadd
es
cld
push
je
in
test
xlat
or
mov
adc
aam
sub
stos
scas
mov
ins
movs
mov
xchg
pushf
je
mov
leave
xor
int
adc
xchg
fstp
ficomp
mov
(bad)
mov
arpl
mov
test
pop
jle
xchg
sbb
fcmovbe
clc
ret
mov
enter
xchg
jmp
push
dec
cwde
xor
adc
add
ins
jae
jl
mov
push
outs
call
or
mov
jmp
loopne
sbb
jl
lahf
cmp
mov
nop
fnstenv
repnz
jge
dec
fisttp
iret
xor
sub
mov
(bad)
iret
stc
out
jg
cwde
lods
pop
mov
sbb
add
(bad)
xlat
sbb
xor
out
and
lods
jle
cld
xor
fdivrp
cmp
cmp
and
and
sbb
enter
jbe
ins
test
and
jl
pop
pop
rol
movs
lock
cmps
jge
mov
rcr
xor
jmp
cli
and
inc
jno
pop
cmp
mov
mov
sbb
add
pop
adc
pop
push
in
sti
jno
cmp
pusha
mov
lods
rcl
mov
adc
jmp
sbb
sbb
and
xor
dec
add
mov
ret
dec
dec
sar
retf
jecxz
repz
add
dec
jl
adc
int
sub
in
sahf
cli
mov
add
jo
stos
ja
lods
adc
in
cdq
jns
xchg
das
clc
cli
inc
movs
xchg
push
jl
mov
xchg
add
les
test
leave
cld
adc
sbb
shr
push
gs
mov
(bad)
jmp
mov
lds
aad
and
in
movs
jne
add
sbb
dec
or
sbb
loope
xor
pop
sbb
je
push
pop
sbb
movs
test
jne
push
jl
fist
xor
inc
jbe
or
fldcw
adc
sbb
ja
lods
fcmovbe
fadd
mov
sbb
sti
aad
pusha
lods
cld
inc
les
cmp
dec
xor
adc
sub
dec
data16
mov
jne
jle
pop
mov
cmp
sub
mov
lods
mov
jg
jnp
(bad)
jl
fisubr
mov
jl
(bad)
loop
das
stos
xchg
cmc
jl
mov
jl
shr
cmp
xchg
mov
(bad)
in
sbb
(bad)
(bad)
dec
iret
(bad)
mov
mov
pop
dec
out
in
push
sbb
daa
inc
sti
in
mov
add
fst
dec
out
inc
call
outs
mov
or
cld
xchg
pop
dec
and
adc
sbb
xchg
out
xor
sub
fdiv
movs
push
dec
ins
cmps
pusha
out
and
aaa
mov
lods
shr
sbb
dec
ror
cmp
sti
in
push
push
mov
mov
jl
pop
movs
lods
sahf
adc
dec
nop
jge
lods
test
aas
sbb
stos
lods
outs
pop
loopne
mov
enter
mov
test
add
aas
mov
pushf
lods
call
cli
jl
clc
xor
jl
loopne
dec
outs
sbb
adc
and
mov
pop
dec
xor
add
jmp
fcmovu
enter
add
mov
dec
push
ins
add
mov
idiv
fsubr
or
movs
cmps
mov
ins
addr16
push
pushf
pop
add
(bad)
sti
mov
xor
ja
test
lods
push
cmp
cmp
mov
popa
sub
fstp
movs
push
fwait
add
ficomp
sub
popa
hlt
fwait
pop
xchg
dec
hlt
xchg
pop
push
mov
xlat
mov
(bad)
retf
stos
and
je
jl
lock
test
or
mov
sbb
popf
sub
adc
fyl2xp1
push
inc
xor
sahf
inc
cwde
stc
and
mov
xor
push
mov
enter
rol
push
lods
loop
mov
and
int3
push
push
icebp
mov
push
mov
cld
jnp
inc
mov
ins
fdivr
repnz
mov
or
in
dec
dec
clc
call
call
cmp
inc
test
mov
add
xchg
jbe
ins
div
lods
fstp
xlat
out
data16
push
movs
or
cmps
test
daa
loopne
hlt
fnsave
iret
aam
imul
in
nop
ins
inc
push
mov
daa
fstp
mov
sbb
ins
push
jecxz
imul
ds
lods
jle
ins
sbb
adc
inc
outs
lods
in
push
jl
(bad)
out
cmp
pop
dec
push
je
dec
jns
imul
loopne
cld
cld
inc
nop
ror
dec
(bad)
test
fst
xchg
sbb
sbb
in
or
cmp
gs
mov
(bad)
cmc
call
push
xchg
sbb
pop
pushf
aaa
pop
inc
fist
fadd
mov
cmp
pop
adc
xchg
mov
in
or
and
outs
pop
cmc
aad
sbb
stos
ins
idiv
jge
pop
outs
dec
shl
mov
ss
push
es
pop
cmc
(bad)
in
xchg
ins
aad
lds
mov
jl
movs
jo
jb
test
retf
sbb
mov
adc
call
hlt
lods
aam
enter
mov
test
movs
add
test
cwde
je
js
fist
repz
adc
jecxz
enter
mov
cmp
pop
sbb
adc
cmc
jl
repnz
arpl
in
and
repnz
rcl
ins
lods
ret
mov
loop
cmp
bound
inc
outs
pusha
xor
std
and
in
add
ffree
mov
xor
jno
in
lds
mov
in
fsub
add
lock
rcr
adc
or
movs
fisubr
pusha
pop
ins
inc
in
dec
xor
les
mov
fistp
ret
adc
lods
retf
aas
call
btc
(bad)
sbb
add
jl
into
sub
sahf
jl
or
and
push
jl
jmp
retf
pop
retf
dec
cmp
rcr
retf
sub
sbb
xlat
in
cdq
in
loopne
mov
jmp
in
addps
sahf
fst
call
dec
mov
mov
test
sete
mov
(bad)
xor
lods
fadd
and
jl
(bad)
frstor
ret
clc
fcmovbe
fdiv
add
or
xor
push
sbb
arpl
sub
jae
xchg
mov
dec
cld
ret
(bad)
pop
add
cld
adc
push
push
fsub
inc
test
cmp
mov
in
hlt
cwde
cmp
xchg
and
outs
inc
call
outs
pop
cmc
stos
data16
in
push
cmc
or
test
mov
sahf
sbb
jbe
sub
jo
xchg
lods
sub
inc
fidivr
icebp
fisubr
(bad)
loopne
push
xchg
sub
clc
inc
icebp
adc
or
or
cmp
sub
dec
mov
pop
neg
xlat
push
(bad)
jmp
push
in
xchg
fnsave
xchg
and
cmp
jns
movs
sbb
mul
(bad)
lods
mov
mov
ficom
ss
les
mov
aad
or
jl
jne
fcom
jne
push
jne
movs
inc
fisubr
xor
mov
dec
and
dec
cmp
mov
nop
jl
sahf
retf
int
adc
push
js
inc
xor
mov
movs
into
fadd
push
cwde
push
ret
ficomp
mov
out
pop
jae
mov
inc
pop
xor
enter
movs
fdiv
bswap
rcr
dec
ret
mov
mov
jb
push
in
fadd
les
mov
loope
popf
shr
pop
mov
jl
xchg
cmp
adc
lock
rcr
enter
adc
pop
push
push
mov
xor
and
imul
(bad)
(bad)
lahf
loopne
scas
daa
sbb
(bad)
fstp
push
outs
retf
pop
sti
dec
dec
in
aas
or
jl
add
ins
xor
ins
inc
adc
and
ins
mov
xchg
clc
das
inc
retf
ret
push
clc
in
pusha
movs
inc
aas
jo
pop
add
sbb
sbb
jle
dec
mov
mov
adc
mov
inc
mov
hlt
js
jno
ins
call
sub
mov
and
out
loope
popa
jmp
add
adc
jmp
sahf
loope
(bad)
jmp
out
ins
in
mov
pusha
inc
shr
repnz
xor
inc
in
mov
fcmovb
jae
gs
cmp
xchg
ret
pushf
rcr
retf
jl
rep
call
mov
adc
and
inc
or
dec
sbb
mov
lods
and
movs
in
fisttp
test
adc
into
fist
call
fsub
or
pop
jecxz
jns
add
test
inc
leave
sbb
fst
jmp
pushf
test
int3
sub
movs
dec
pop
mov
push
lds
adc
mov
stos
add
push
retf
push
sbb
push
mov
shl
jmp
inc
xchg
jne
mov
cld
pushf
mov
call
jl
lods
jmp
push
push
xor
push
cli
lock
loopne
retf
sar
nop
mov
lods
or
sbb
inc
pushf
out
(bad)
xor
rcr
(bad)
mov
pop
cli
data16
out
lods
sub
iret
test
lahf
jmp
data16
clc
jbe
jg
pop
dec
outs
inc
pop
in
fldcw
jl
pop
in
lods
sub
stos
dec
xchg
loop
or
ins
pop
or
pop
imul
sub
lahf
lods
imul
lods
fild
cmps
mov
aaa
sbb
popa
retf
cli
out
ret
sbb
push
jl
jmp
div
sbb
jl
(bad)
pop
in
daa
dec
scas
sbb
cli
jmp
aaa
in
ins
pop
inc
cli
push
xlat
iret
jmp
addr16
lods
pop
ja
jl
mov
xchg
stos
lods
or
cld
push
out
sbb
data16
sbb
cmps
pop
sbb
(bad)
mov
and
cmp
xlat
sub
in
repnz
inc
imul
and
mov
jl
mov
jmp
dec
nop
mov
cmp
adc
xor
lods
or
cwde
stos
ins
sub
nop
lods
popa
dec
inc
mov
mov
ins
push
enter
loop
xor
mov
iret
sbb
cmp
and
jl
jp
mov
idiv
cmp
dec
xchg
lods
lods
sbb
pop
int
in
xor
mov
jmp
dec
lods
inc
clc
sbb
cld
out
and
ins
test
add
jl
dec
mov
jl
sub
pop
sbb
cmp
sahf
xor
jne
movs
out
inc
(bad)
sti
push
cmps
sti
mov
cmc
pusha
xchg
jo
and
pop
mov
mov
fucomi
shl
and
repz
sti
inc
push
jmp
in
ins
push
aad
pop
jl
(bad)
movs
ficomp
ins
push
retf
sbb
loopne
rcl
jl
hlt
mov
add
inc
aam
push
outs
clc
mov
cmp
nop
movs
and
enter
xor
mov
dec
sbb
cmp
ins
pop
test
or
jl
loop
sbb
cmp
jl
int
or
jl
add
or
jmp
(bad)
lods
jle
and
mov
in
xchg
dec
dec
ins
popa
in
sahf
cmps
jno
sbb
inc
and
mov
shl
xchg
dec
ins
rcl
stos
mov
dec
cmps
sbb
push
sbb
sbb
xchg
loop
xchg
fcmovnb
mov
loope
seto
xor
out
push
not
std
dec
out
sar
mov
push
push
aad
mov
test
(bad)
ins
fsub
xchg
ficom
shl
push
in
mov
mov
xchg
mov
jmp
ins
pop
fisubr
pop
dec
sbb
cs
ds
or
jle
and
in
mov
jge
jl
out
(bad)
aam
(bad)
pop
das
les
mov
cmp
scas
fstp
push
sbb
xor
pusha
jecxz
and
fidivr
add
and
jl
push
mov
mov
and
rcr
jl
add
out
fldl2t
cmp
outs
sbb
je
xor
fnstcw
imul
cmps
call
lods
xor
fs
fldl2t
in
cmps
cmp
inc
sub
pop
lods
aad
cmc
dec
push
push
jns
sbb
fwait
jns
(bad)
retf
lea
sbb
mov
loop
xor
mov
push
pop
push
adc
pop
fdiv
xchg
(bad)
lods
xor
jmp
jns
dec
mov
imul
ss
jl
(bad)
push
lods
cmp
je
cmc
push
ins
aad
shr
mov
retf
pop
call
rcr
push
inc
xchg
xor
js
ins
cwde
add
jne
cwde
js
pop
push
test
pop
xchg
out
or
fimul
add
push
jle
xchg
inc
jl
ins
and
arpl
sbb
out
or
pop
jecxz
not
cmp
sbb
jl
ret
cld
jae
arpl
out
in
add
xchg
jecxz
sbb
shl
add
ret
push
sahf
xchg
xor
and
(bad)
dec
(bad)
add
jecxz
xchg
in
and
fist
clc
icebp
shr
in
mov
fsub
add
popa
sti
push
in
rdtsc
in
and
mov
add
cmp
aas
sbb
mov
lods
push
in
or
fnstsw
mov
fsubr
mov
xor
lods
xor
les
into
les
mov
mov
outs
mov
mov
and
mov
jle
sbb
out
sahf
in
xchg
mov
in
out
cld
ins
in
fwait
push
mov
call
inc
arpl
(bad)
jae
pop
sbb
push
int
call
push
les
iret
adc
mov
push
adc
and
icebp
sbb
lods
adc
adc
push
cmp
and
test
cmp
icebp
movs
pusha
sbb
dec
xor
lods
fucom
sub
inc
call
jl
test
mov
les
in
scas
dec
and
inc
adc
movs
jne
sbb
fidiv
outs
call
add
ss
ins
lds
push
rcl
mov
es
jl
push
out
into
and
mov
das
and
lods
neg
mov
popa
cmp
cmps
and
xchg
ret
ins
xlat
fadd
push
lods
neg
in
pop
dec
les
sbb
je
sbb
mov
sub
pusha
ins
addr16
popf
inc
mov
loopne
aas
inc
lods
int
es
into
push
mov
adc
mov
ins
lds
test
inc
jle
inc
clc
cmp
cld
pop
data16
sbb
cld
pop
dec
push
je
lods
xchg
sbb
cwde
adc
add
test
mov
mov
into
nop
xchg
sti
add
jae
enter
xor
fsub
inc
adc
loop
rcr
pop
jb
(bad)
int3
push
das
or
mov
add
jl
sbb
sar
mov
les
jp
sbb
jno
push
add
mov
sbb
rcr
mov
push
inc
jo
lods
push
lods
inc
sbb
inc
and
sbb
in
dec
mov
outs
adc
add
inc
adc
jmp
mov
dec
adc
clc
in
out
pop
push
in
push
xor
call
sbb
push
out
(bad)
pusha
push
lahf
ins
jo
mov
fcomp
sub
mov
add
jmp
add
push
adc
jo
stc
aad
loop
inc
pop
sar
add
popa
call
xchg
or
add
call
add
dec
push
and
scas
pop
popa
popa
(bad)
cs
mov
push
sar
bound
pop
add
or
and
jl
scas
xchg
jae
and
sbb
dec
mov
mov
ret
mov
leave
repz
add
lods
sahf
dec
cld
mov
lods
fst
repz
adc
ds
push
jl
push
and
ins
xor
mov
fmul
movs
clc
jb
movs
or
les
fcmovbe
ins
in
(bad)
hlt
pop
imul
lods
inc
mov
gs
fcomp
jmp
fist
mov
add
cmp
icebp
mov
loope
mov
dec
call
shl
mov
mov
push
dec
jmp
fisubr
push
push
psubd
pop
mov
call
sbb
sbb
add
aas
xchg
lods
mov
adc
jl
add
cmp
in
xchg
pusha
rol
ficom
xor
in
loopne
push
adc
and
sbb
mov
enter
cmp
jl
popa
jge
pop
cmc
lahf
fldz
dec
jge
sub
cli
cmc
jg
fist
mov
dec
data16
sbb
sub
sbb
fmul
jbe
or
in
lods
je
xchg
jl
xchg
jne
mov
sbb
or
movs
mov
cld
jl
outs
movs
stos
in
or
jg
fwait
dec
xor
sbb
stos
ins
mov
loop
out
jle
and
jl
neg
pop
ins
mov
dec
in
or
fbstp
data16
jbe
sbb
jmp
push
sti
scas
sub
mov
xchg
jl
xchg
(bad)
fstp
call
call
sub
dec
or
(bad)
sbb
fidivr
sub
add
push
out
mov
hlt
cmp
xchg
pop
mov
lods
enter
mov
cmp
pop
dec
push
pop
inc
lods
js
push
call
xor
and
fidivr
push
mov
adc
call
lods
xor
jl
rcl
in
mov
lods
dec
mov
dec
pop
lods
hlt
test
dec
jae
dec
cld
ins
jl
mov
lods
adc
sub
add
jmp
add
or
cmp
inc
mov
xchg
jl
jmp
or
js
xchg
push
cmp
sbb
jge
or
jl
pop
mov
ins
xor
ja
sbb
nop
add
xor
out
in
arpl
mov
cmps
jmp
mov
fdiv
inc
imul
jl
cmc
fsub
xor
lds
inc
mov
pop
movs
out
popa
xchg
sbb
test
gs
mov
jl
push
rcl
adc
mov
and
cmp
push
mov
sbb
movs
retf
stos
lock
loop
push
mov
loopne
pop
sub
retf
pop
fs
stc
mov
mov
add
imul
mov
fnstcw
(bad)
leave
xchg
jl
cmp
and
cdq
inc
or
lods
fst
jmp
stc
mov
lods
sbb
popa
in
test
jno
or
jmp
mov
lds
inc
movs
sahf
cmp
jne
pop
dec
xchg
pop
mov
xchg
loope
add
enter
ins
push
clc
imul
call
ins
test
jge
lock
jl
mov
sbb
iret
xchg
in
push
xlat
jl
loop
dec
cwde
cmp
add
inc
jl
inc
dec
dec
pop
jl
clc
call
dec
sub
cld
jmp
mov
popf
hlt
in
lahf
les
cli
xor
test
or
mov
jl
fdiv
in
aam
les
mov
rcl
std
movs
push
in
push
rol
inc
lods
(bad)
dec
inc
(bad)
sbb
ins
ds
dec
mov
fidivr
sub
mov
out
fmul
das
les
outs
lods
jg
cmp
fmul
out
push
jl
fist
fidiv
fadd
in
fdiv
mov
(bad)
sub
fadd
and
inc
mov
sbb
aas
pop
lods
rol
(bad)
call
fdiv
cld
adc
sbb
jl
and
xchg
outs
sbb
(bad)
shl
imul
xor
jmp
dec
or
test
adc
ss
loop
inc
mov
test
daa
mov
out
push
in
arpl
adc
lods
xchg
dec
or
cld
cmp
jl
out
in
add
sbb
bnd
lods
cmp
pop
es
arpl
jae
push
ss
lods
push
or
mov
jl
pop
jbe
jl
fnsave
ins
mov
mov
xchg
dec
mov
fsub
cld
mov
js
les
adc
hlt
sbb
mov
les
mov
sbb
xchg
adc
test
sbb
les
xor
add
and
jmp
(bad)
xchg
jecxz
rol
ret
pop
out
lea
ins
xor
push
ret
mov
lods
adc
fucom
add
aam
jae
mov
sahf
xchg
arpl
push
sbb
fsub
repnz
push
aam
ret
sti
mov
add
push
lods
rol
shl
mov
cld
xchg
sub
mov
lods
inc
sub
fcomip
or
in
rol
aam
adc
nop
dec
jl
data16
push
mov
fld
fistp
mov
mov
sti
lds
ror
dec
aas
inc
jl
cli
pop
push
(bad)
daa
sbb
lods
in
fdivr
outs
in
enter
dec
cld
sub
(bad)
ds
jl
ficom
in
clc
push
xor
push
inc
jbe
std
ins
test
pop
popa
jl
in
add
sub
idiv
in
shr
jmp
or
cli
pop
cmps
and
dec
or
or
xchg
mov
pop
icebp
push
frstor
adc
data16
jp
xchg
inc
jl
and
sar
xchg
clc
mov
ffree
jmp
repnz
add
inc
cmp
outs
lods
mov
fadd
ret
pop
pop
rcl
jecxz
cld
repz
js
and
xor
inc
pushf
push
mov
mov
and
sbb
cwde
and
pop
push
les
test
test
and
mov
lods
in
mov
lods
inc
and
cmp
inc
mov
mov
jnp
mov
inc
hlt
clc
xor
pop
js
fadd
je
addr16
xlat
xchg
xchg
ret
cmps
lods
mov
pop
(bad)
push
ins
xlat
(bad)
out
cmp
dec
sub
sti
out
and
ja
sahf
xchg
mov
sbb
aaa
loop
into
loopne
retf
mov
ficom
rcl
ins
cmc
pushf
in
sbb
dec
mov
dec
mov
add
inc
jecxz
xor
sub
hlt
in
aam
push
js
pushf
jl
sahf
mov
cli
inc
push
daa
dec
jl
test
jl
rol
mov
enter
cmp
fidiv
fdivr
inc
pusha
sbb
mov
cmp
ins
xchg
setge
pop
call
cmp
loope
ins
mov
dec
dec
daa
sbb
and
add
jl
mov
push
push
mov
mov
push
outs
lods
inc
jg
xor
lahf
pop
push
jmp
mov
in
loopne
dec
scas
stos
fistp
out
cmp
fadd
sbb
enter
retf
jl
lods
mov
outs
dec
lahf
push
jmp
cld
iret
(bad)
fild
sbb
jle
jle
cld
inc
jne
jle
mov
jo
loop
lock
add
inc
sbb
xor
scas
test
fs
in
cmp
in
adc
jno
xchg
mov
shr
ror
icebp
in
push
mov
cld
loope
or
pop
fdiv
in
push
mov
ret
pop
jb
repnz
adc
and
push
mov
fsub
cld
mov
mov
in
repz
jecxz
mov
sahf
mov
bound
int
lods
rcr
mov
dec
mov
out
hlt
ins
sbb
(bad)
lods
retf
xlat
sbb
pop
jb
xchg
mov
(bad)
enter
in
(bad)
hlt
fadd
jle
jne
movs
xor
fist
gs
cmc
mov
jne
and
mov
mov
xchg
lds
cmc
sub
icebp
in
sub
lods
push
pop
loope
push
mov
push
push
jmp
mov
sub
xchg
outs
lods
rol
inc
mov
movs
repnz
and
ins
add
pop
push
jl
(bad)
sar
retf
rcr
jp
sbb
cdq
pusha
pop
jl
push
out
pop
inc
or
sbb
push
jo
pop
xchg
adc
add
fistp
fisub
(bad)
iret
mov
mov
jl
lahf
popf
jmp
adc
outs
pop
jbe
mov
jne
ins
adc
call
inc
push
dec
dec
sbb
comiss
sbb
sbb
jl
pop
xchg
pop
cwde
cmp
pop
cwde
das
cmps
sub
imul
dec
mov
pop
in
or
shl
sbb
pop
(bad)
fwait
jl
sbb
ins
(bad)
repnz
out
std
cli
jo
dec
or
idiv
mov
in
daa
pop
outs
sub
in
ins
push
push
ret
addr16
lods
jg
or
cwde
ja
ret
das
outs
sbb
(bad)
jl
sti
(bad)
mov
in
das
mov
aam
xlat
jne
outs
lock
mov
lods
pop
sbb
mul
shr
xchg
mov
sahf
sub
adc
out
or
pusha
sbb
cmp
cmp
ins
adc
pop
push
push
push
sub
mov
inc
push
stos
in
adc
mov
mov
and
jp
call
cld
add
jl
lods
sub
fmul
adc
ins
pop
in
loop
push
jns
cld
jecxz
dec
pop
sbb
jl
in
out
push
nop
ins
mov
call
ins
xchg
dec
call
xchg
cmp
out
pop
call
fiadd
jmp
jl
push
pop
sti
adc
loop
inc
mov
and
out
inc
(bad)
fwait
aam
sub
jecxz
ja
jo
fiadd
pop
mov
repnz
shl
data16
dec
push
sub
leave
fild
jl
in
pop
mov
ins
adc
inc
popa
and
push
inc
sbb
ins
lods
and
push
hlt
jle
(bad)
cmp
mov
jmp
mov
jl
push
sub
mov
sub
movs
sub
test
fs
lock
push
leave
pop
add
and
xor
(bad)
leave
inc
cli
ret
or
test
sbb
adc
add
jl
mov
xchg
mov
mov
cdq
shr
mov
pushf
pop
lods
imul
out
mov
ins
cli
fsubr
fcmovb
retf
ins
stos
mov
pop
enter
les
mov
mov
fldcw
std
xor
inc
xchg
jns
pop
pop
dec
jmp
fimul
in
fimul
cld
pop
add
push
ins
push
clc
enter
and
dec
mov
jl
pushf
mov
xchg
mov
popf
cmp
(bad)
call
pop
out
sbb
dec
xchg
sub
sahf
jmp
dec
out
mov
xlat
movs
ins
test
lods
push
dec
mov
mov
cmps
adc
cld
xchg
enter
xchg
xchg
adc
mov
mov
dec
cmps
sbb
retf
lods
mov
retf
push
cmp
mov
cmp
jl
fwait
push
sbb
lods
sar
out
fimul
call
xchg
dec
fcomp
dec
jl
call
fdivr
adc
and
imul
mov
loopne
add
adc
popa
sub
shl
fisub
fdiv
push
les
loop
add
adc
inc
adc
mov
pop
jecxz
fld
and
inc
fist
fcom
hlt
xchg
jl
mov
test
jle
out
das
jbe
xor
push
dec
mov
xchg
sub
bound
iret
push
call
push
sub
mov
cld
cld
xchg
cmps
adc
repz
jl
lods
push
fdivr
call
lods
test
je
ficom
push
push
mov
retf
js
mov
pop
xchg
cld
dec
fadd
gs
cld
sub
and
fiadd
ins
aam
(bad)
shl
mov
movs
fst
adc
je
fs
push
mov
push
(bad)
out
ins
ret
xor
cmp
ret
jl
clc
ret
ficom
sub
mov
repnz
loop
retf
rcl
(bad)
mov
and
push
pop
(bad)
in
ins
push
xor
ins
adc
mov
xchg
lods
jb
shl
shl
mov
and
mov
and
inc
mov
and
mov
popa
push
call
ror
adc
xchg
sbb
push
(bad)
dec
and
add
sbb
add
jl
pop
aas
loop
fistp
fimul
test
(bad)
test
fcmove
call
test
sar
pop
xchg
dec
pop
ds
cs
pop
jl
mov
xlat
adc
fst
or
in
push
lods
jno
or
pop
(bad)
mov
lods
pop
inc
fisttp
inc
out
mov
pop
sbb
inc
ins
push
(bad)
pop
loope
icebp
xlat
imul
xor
popf
daa
inc
push
ins
test
or
ja
dec
adc
sar
call
les
call
fst
popa
fcmovbe
(bad)
pop
inc
lods
adc
das
xor
jae
sbb
test
bndstx
or
pop
jae
in
ins
pop
sub
loope
jnp
loopne
cld
jmp
xchg
jl
mov
jbe
jl
mov
les
xchg
adc
mov
inc
sbb
jl
mov
daa
sbb
sahf
int
into
jns
ins
call
fdiv
mov
out
(bad)
ins
sub
xchg
sub
cld
mov
cmps
cdq
inc
jns
jl
fwait
and
cli
pop
jl
jns
(bad)
ins
sbb
pop
sbb
es
dec
ficomp
cmc
jne
fisubr
aad
lds
movs
jecxz
xchg
sbb
outs
cdq
push
pop
inc
cli
xor
add
in
aam
les
mov
movs
pop
cwde
pop
mov
test
je
push
pop
sahf
mov
and
enter
repz
ins
ret
ins
into
fdiv
or
arpl
jl
pop
fsubrp
xor
and
adc
repnz
out
retf
dec
mov
xchg
jl
fadd
inc
prefetch
mov
sub
jl
jmp
retf
cmp
fild
push
and
adc
jae
sbb
sar
fadd
jl
les
call
pop
mov
xor
and
push
test
pushf
dec
out
scas
jl
fcmovu
mov
iret
sti
in
in
retf
add
pop
in
out
jle
call
lods
sub
out
jl
frstor
jl
and
xchg
sbb
adc
lock
sahf
cli
(bad)
xor
jl
dec
retf
push
test
pusha
jo
xchg
mov
in
push
ins
shr
mov
shl
jmp
loop
lock
adc
and
inc
scas
dec
push
xor
popa
mov
xchg
jno
mov
shl
loope
sub
sub
shr
xor
push
push
inc
(bad)
jmp
mov
mov
in
sbb
repnz
adc
and
xor
mov
xchg
pop
mov
mov
add
rcr
lods
push
and
or
cmp
call
call
cmp
lods
dec
movs
clc
jl
enter
mov
jl
sahf
cli
adc
and
dec
inc
jl
mov
test
dec
xchg
jl
stos
test
les
hlt
ins
add
push
and
inc
fmul
cmps
or
or
sbb
adc
in
mov
sbb
push
jmp
movs
stc
icebp
ss
push
sub
sbb
or
jne
jo
sbb
sbb
mov
dec
xchg
cld
mov
jmp
pop
call
les
lods
xor
jp
ins
xor
mov
push
jl
mov
mov
mov
jl
ftst
push
movs
mov
mov
clc
xor
stos
mov
add
out
push
mov
mov
stos
and
cmp
mov
(bad)
jns
in
and
ins
mov
push
jge
call
aas
jns
pop
xchg
pushf
das
sbb
jns
sbb
adc
jbe
xchg
(bad)
adc
jl
mov
pop
sub
movs
cmps
in
lods
pop
mov
in
scas
pop
jle
dec
mov
jnp
(bad)
push
outs
in
pop
or
stos
or
out
sub
mov
idiv
push
pop
jmp
fwait
inc
jl
ins
popf
aaa
test
or
jl
inc
dec
or
sbb
ja
sahf
xchg
dec
aas
ja
mov
outs
jl
or
test
dec
mov
and
pop
out
lahf
les
sbb
lods
not
(bad)
out
lods
rol
out
inc
sbb
xlat
sub
out
cmp
daa
dec
sbb
test
mov
push
xor
dec
dec
cmp
mov
lods
cwde
in
sbb
dec
add
xchg
ror
cdq
cmp
cmp
fcmovne
xor
sbb
sbb
dec
loopne
cld
sbb
lods
fist
clc
mov
cmp
inc
mov
in
mov
iret
lods
stos
or
pop
push
xor
clc
inc
mov
dec
sbb
ins
jmp
add
push
pop
les
adc
fist
cmp
ror
jl
mov
dec
mov
shr
pusha
xchg
clc
inc
(bad)
call
retf
nop
(bad)
ja
sub
rcl
cmp
sbb
leave
mov
imul
in
dec
mov
xlat
inc
jl
fsub
imul
inc
add
xor
jle
dec
in
mov
sbb
mov
enter
pop
movs
call
mov
sbb
je
in
jne
mov
mov
mov
sbb
je
jl
inc
sbb
jl
fwait
push
jl
jmp
jno
and
pop
outs
mov
or
sub
inc
in
and
mov
ins
dec
push
fcmovu
outs
ins
push
sbb
mov
jmp
sahf
call
cli
mov
retf
call
fimul
pop
sbb
mov
mov
fldl2e
mov
cdq
fimul
dec
lods
cmp
sub
sahf
mov
pop
enter
test
js
xchg
les
pop
lods
cmp
sub
in
push
or
out
(bad)
(bad)
movs
dec
movs
in
in
sub
push
movs
xchg
inc
sbb
jmp
push
sub
out
sbb
(bad)
(bad)
lods
mov
adc
loop
test
jo
adc
jle
nop
sbb
mov
test
outs
pop
sub
hlt
xor
sbb
ret
add
xchg
test
sbb
out
pop
push
std
xor
xchg
jns
xchg
test
outs
sti
mov
inc
and
(bad)
pop
aam
idiv
dec
les
jg
xlat
test
lods
add
sar
inc
(bad)
jl
ficom
fdiv
push
adc
add
shl
adc
mov
pop
jb
adc
mov
inc
fldl2e
xor
lods
jl
fadd
rol
add
and
inc
mov
inc
test
jl
fdiv
add
dec
gs
movs
imul
and
cmp
es
pop
pop
out
(bad)
cmps
jnp
add
sbb
std
push
cmp
mov
lods
cmp
mov
lods
retf
dec
push
pop
stos
dec
mov
popf
dec
mov
xchg
push
lods
inc
cld
pop
test
push
push
cwde
dec
out
pop
cmp
in
sub
aad
sbb
jmp
pop
or
movs
retf
jne
neg
fcom
je
xor
out
jge
sbb
hlt
jl
mov
fbstp
in
je
fs
adc
inc
(bad)
jl
out
xlat
das
sbb
jl
add
dec
or
xlat
xchg
mov
mov
sub
jae
call
popf
inc
mov
pop
repnz
jl
movs
mov
ret
imul
jb
shl
mov
mov
xor
adc
in
clc
loope
jmp
mov
xchg
and
adc
sub
fild
and
add
jno
rol
in
fsub
mov
and
dec
daa
int3
lods
xchg
call
dec
dec
xchg
daa
sbb
sar
lock
lods
ror
call
sbb
loopne
ins
scas
sub
and
outs
sar
xchg
call
ror
pop
in
je
fst
sbb
(bad)
fimul
lods
lock
popf
add
xchg
adc
cli
inc
lods
mov
jo
call
xchg
out
mov
pop
idiv
shr
ins
xchg
fstp
jl
cli
cdq
jl
loope
(bad)
int
or
clc
add
ficom
fsub
xor
sub
inc
dec
ret
in
bound
push
cmp
xchg
dec
mov
ret
mov
add
jl
fsub
xor
fstp
inc
push
jne
data16
in
cmp
inc
cli
mov
js
sar
imul
cmp
lods
rol
fcmovbe
test
(bad)
mov
arpl
jmp
mov
ret
aad
pop
in
cmc
fild
ficom
in
in
inc
add
cmp
int
mov
(bad)
dec
cmps
sbb
mov
stos
inc
daa
push
inc
out
jle
pop
push
aam
dec
mov
cmp
adc
out
sub
jl
sbb
or
xlat
push
jl
xor
dec
mov
(bad)
cmc
mov
mov
bound
push
inc
je
pop
fild
push
push
out
(bad)
fcmovb
arpl
cmp
aaa
xchg
push
sar
sbb
int3
lds
mov
movs
xchg
adc
dec
test
gs
pop
push
pop
jle
les
outs
js
fnsetpm(287
pusha
les
inc
dec
dec
adc
fs
sbb
xor
adc
mov
enter
sub
mov
sbb
adc
sbb
aam
fdivrp
add
repnz
push
ret
fisub
jb
bound
(bad)
movs
inc
test
fidivr
icebp
loope
cli
sar
psubusb
leave
fadd
jl
push
popa
jo
jl
and
cld
adc
sbb
pop
loopne
jl
lods
rcr
mov
cdq
mov
inc
dec
call
mov
jmp
inc
pop
xor
adc
or
push
add
int
jl
mov
mov
jl
jne
adc
sbb
ins
cli
cmc
fistp
test
call
out
imul
or
sbb
xor
add
inc
mul
pusha
and
cli
sbb
inc
out
push
adc
jl
in
sbb
jo
fild
clc
add
xor
call
add
sub
shr
shr
loope
lock
in
add
and
loopne
xor
xor
push
in
call
cli
xchg
mov
mov
rol
in
sbb
xchg
adc
and
push
pushf
jae
sub
sbb
mov
aad
ins
ret
sbb
or
mov
lods
xlat
retf
mov
aad
aaa
rep
sub
jle
fistp
loop
xchg
pop
add
jmp
dec
jb
xlat
add
and
inc
(bad)
push
ud1
jl
mov
cwde
sbb
shl
test
mov
mov
mov
les
test
or
sbb
cmp
lds
jns
sub
test
leave
pusha
sub
push
fld
fs
es
xchg
mov
lods
sbb
fisubr
mov
push
pushf
retf
mov
xchg
jl
jl
popa
test
inc
sbb
adc
loopne
jp
jl
adc
add
inc
mov
jo
sbb
pusha
jl
popf
mov
inc
cli
xor
jl
out
mov
mov
lods
dec
stos
jl
mov
ins
mov
stos
lahf
sbb
jg
lods
outs
int3
pop
inc
call
out
popa
cdq
dec
pop
or
popw
cli
in
popa
pop
sbb
jbe
fidivr
pcmpeqw
fs
(bad)
cmc
push
out
adc
nop
mov
lods
retf
sbb
sub
fidivr
dec
cmp
out
dec
sbb
les
or
cmc
jnp
in
call
pop
clc
lahf
dec
pop
pop
sbb
das
nop
jl
mov
jns
jne
in
das
jns
push
mov
call
movs
xor
ja
xchg
ins
xchg
pop
pop
add
(bad)
(bad)
in
or
jmp
out
outs
das
in
xchg
dec
lods
jg
dec
cmp
movs
push
int
sub
pop
jl
sti
lahf
imul
jne
lods
or
ins
test
inc
dec
data16
sub
sub
call
or
dec
movs
xchg
repnz
pop
in
push
xchg
lods
push
js
lods
mov
jl
xlat
add
stos
jg
jmp
mov
mov
dec
cld
cmp
xor
dec
sbb
pop
lods
lods
xchg
call
lods
add
sahf
imul
mov
ins
mov
sbb
cmp
loopne
hlt
sub
xor
in
jl
enter
mov
js
sar
jmp
pop
ror
sub
sbb
and
fdiv
xlat
mov
lds
jl
push
xor
pop
push
aaa
retf
inc
mov
ja
fcmovnbe
movs
mov
jbe
shl
push
sbb
pop
ss
add
stos
loopne
mov
lds
fwait
xor
inc
gs
mov
pop
pushf
push
sbb
xor
and
sbb
(bad)
or
aam
adc
jl
inc
jge
leave
jl
loopne
call
cmp
and
popa
pop
sub
stc
retf
movs
push
and
fs
lods
adc
mov
adc
inc
popa
inc
pop
clc
out
sub
les
push
and
mov
ret
movs
aas
xchg
lods
loope
icebp
push
aad
or
lods
fistp
mov
jnp
imul
mov
sbb
call
ficomp
call
push
je
dec
fcmove
sub
sbb
(bad)
stc
mov
mov
cdq
jmp
fimul
cmp
cld
cwde
fcomp
or
call
enter
test
in
js
push
pushf
sub
sahf
neg
int
(bad)
call
add
addr16
sbb
daa
sbb
pop
sbb
mov
mov
data16
mov
js
jl
in
stc
add
jne
adc
out
test
adc
gs
jle
xchg
in
loopne
push
aad
ins
ja
cwde
std
sub
add
mov
dec
push
inc
lods
retf
and
cs
adc
jmp
or
sar
into
daa
(bad)
jne
pop
fsubr
pinsrw
das
pop
or
lahf
ins
scas
neg
(bad)
jmp
fdiv
mov
adc
call
fadd
les
sbb
ins
xor
xchg
mov
pusha
repnz
call
mov
retf
mov
rcl
loopne
(bad)
jl
ja
jle
jl
test
in
ret
adc
sbb
aam
xchg
aad
push
sbb
push
les
mov
inc
mov
dec
ins
cmps
mov
pop
push
sbb
mov
sub
out
(bad)
inc
lods
retf
cmps
sbb
cmp
push
cmp
cmp
in
jae
lods
cdq
mov
mov
lods
mov
ins
es
push
push
je
cmc
in
aad
retf
lods
jge
sbb
ins
movs
fist
gs
fcmovbe
push
xchg
xor
adc
jbe
sbb
cli
add
push
jl
mov
ficomp
fcom
inc
in
jl
push
sahf
sbb
jge
jl
repz
ret
imul
sbb
repz
cmp
arpl
fdivrp
push
adc
push
fst
sar
add
fdiv
loop
mov
ins
mov
mov
xchg
jmp
inc
loop
xor
and
adc
add
icebp
and
add
in
call
push
pop
and
call
xor
adc
loope
and
outs
adc
xchg
popf
shl
jno
shl
xor
nop
and
adc
sbb
add
dec
(bad)
jl
call
(bad)
mov
jl
lock
fdivr
mov
les
stos
loopne
das
pushf
pop
pop
pand
mov
pushf
fmulp
into
rcl
mov
sahf
into
out
xchg
pop
jle
in
or
jl
les
cmp
shl
loop
jl
push
int3
push
mov
std
sbb
(bad)
in
mov
mov
int
sbb
in
lock
add
in
inc
sub
cld
jmp
jno
sbb
mov
mov
cmp
or
jl
inc
jl
dec
int
icebp
ins
pop
xchg
adc
dec
sbb
inc
sbb
in
sub
xchg
jl
mov
aam
js
(bad)
push
sbb
mov
pop
push
xchg
arpl
fld
mov
mov
call
mov
adc
sahf
dec
jl
clc
add
mov
cmp
inc
ins
in
imul
sahf
and
push
call
cmps
ins
or
mov
dec
idiv
pop
mov
pop
aaa
jl
ins
ret
out
sub
mov
call
inc
cmps
jle
push
retf
sbb
mov
mov
sbb
out
in
outs
loope
shl
(bad)
jp
mov
cwde
cmps
in
cld
xchg
add
ja
lods
addr16
mov
pop
(bad)
idiv
mov
mov
jne
cwde
or
mov
push
jge
ins
sub
ds
fadd
mov
cmp
dec
in
pop
xor
jl
xchg
js
imul
aam
les
jmp
jne
mov
add
and
out
mov
jle
mov
les
jl
jmp
fcom
add
repnz
cmp
cmp
enter
jl
add
inc
out
ins
cmp
js
jl
shl
jno
cwde
push
dec
inc
inc
call
enter
ins
jbe
jl
shr
mov
ficomp
mov
call
xchg
call
add
mov
pop
inc
(bad)
ret
jg
pop
lahf
sbb
push
cmp
and
popa
cld
push
iret
leave
mov
cmp
pusha
pop
out
sbb
(bad)
call
sbb
cwde
mov
xor
fadd
mov
pusha
out
sbb
outs
add
and
retf
sbb
jle
jle
jle
in
enter
frstor
mov
and
scas
js
loopne
add
test
fld
mov
mov
add
repnz
and
arpl
xchg
lods
mov
pavgb
sbb
mov
jl
lods
in
ret
jl
lods
jecxz
or
push
mov
lods
lods
sti
cmp
jl
ret
lods
pushf
dec
pop
mov
fiadd
adc
pop
pop
pop
adc
lods
rcl
jb
in
nop
scas
pop
lods
adc
xor
xor
gs
jne
mov
or
lds
lods
cmp
pop
loop
sub
imul
cmc
cmc
(bad)
test
sbb
fyl2x
ins
push
mov
push
or
jmp
enter
or
xor
sbb
das
xor
call
jl
loopne
in
clc
sub
nop
int
add
outs
jne
push
dec
pop
sub
push
sahf
push
pop
sbb
mov
pop
fadd
pop
fldcw
add
jl
imul
call
ss
dec
loopne
dec
or
jbe
sbb
call
ss
pop
les
outs
lods
dec
mov
stos
aas
push
movs
sbb
xchg
mov
mov
rcr
(bad)
xchg
push
ins
add
sbb
cld
movs
pop
out
out
mov
jl
cld
stos
sbb
sbb
jl
into
jl
pop
cmp
lahf
lods
dec
idiv
ins
xchg
(bad)
call
pop
or
or
test
xchg
jl
out
jno
cli
ins
mov
dec
jl
fisttp
fwait
mov
das
jmp
mov
outs
xchg
cmps
or
call
fcmovne
(bad)
retf
dec
push
xlat
jmp
stos
mov
lea
jl
mov
(bad)
jl
sbb
mov
push
jl
cwde
or
adc
in
sub
cdq
cmp
dec
push
call
pop
ret
retf
push
push
jl
sbb
dec
dec
sbb
ins
pop
les
out
lods
call
dec
out
fnstenv
out
stos
cmc
enter
or
cmp
cmp
hlt
imul
pop
lods
jl
dec
jl
or
and
pop
adc
mov
mov
sbb
xor
inc
mov
cwde
sti
(bad)
shr
dec
add
sub
fcomp
pop
retf
fidiv
jl
sbb
sbb
xor
mov
mov
jl
push
mov
cmp
pusha
mov
mov
(bad)
stos
shl
data16
inc
(bad)
push
out
or
jge
jl
in
dec
adc
inc
and
mov
jl
jnp
test
xor
fist
inc
pop
aam
dec
and
cli
adc
jmp
dec
stos
lock
loopne
inc
les
jl
xlat
mov
fs
or
adc
mov
add
loop
lock
inc
mov
xchg
push
mov
les
mov
push
fstp
sbb
mov
out
test
fdiv
rcl
jns
loop
sub
mov
sbb
mov
jnp
imul
fisttp
cmp
cli
retf
ror
fidivr
fcomp
mov
pop
mov
enter
pop
or
stc
fucompp
fcomp
mov
cdq
les
imul
or
call
enter
test
sub
pop
dec
popf
test
sbb
adc
lods
movs
xlat
ficomp
adc
sbb
jle
xchg
push
pop
cmp
aaa
daa
cwde
mov
aam
int
sbb
fdiv
xchg
fidiv
push
jmp
xchg
es
in
aad
out
in
jns
sbb
mov
xlat
xchg
into
jl
mov
mov
jmp
pop
cmps
rcl
hlt
retf
aam
mov
xchg
repz
iret
movs
movs
push
sub
push
rol
bound
mov
and
jl
mov
jl
mov
xchg
out
jl
mov
dec
fisubr
jg
ror
fild
stos
jns
popa
popf
and
mov
rol
sub
jl
or
sti
dec
jno
fild
cmp
jns
fucom
in
dec
loop
cmps
fild
cmp
fild
mov
jbe
push
jl
fild
cmp
push
ins
xor
inc
dec
je
movs
in
ins
pop
mov
pop
adc
fadd
les
test
popf
xchg
sbb
mov
mov
aad
ins
in
sahf
mov
xor
retf
jg
push
lods
cmps
push
or
fwait
add
inc
(bad)
jge
mov
lods
(bad)
push
and
mov
gs
out
out
sub
scas
(bad)
jne
adc
sbb
inc
adc
in
data16
jmp
push
jl
les
sbb
lods
xchg
push
and
cmps
push
mov
jl
push
aad
cli
lds
les
sbb
mov
jl
mov
adc
jl
in
dec
sbb
rcr
test
jl
cmp
pushf
cli
lods
into
inc
adc
add
repz
shl
dec
ins
mov
mov
xchg
fadd
cld
inc
les
fninit
(bad)
adc
add
shl
ret
mov
adc
and
push
clc
pop
out
sbb
or
jae
adc
add
icebp
inc
in
retf
rcl
sbb
adc
loop
jb
jno
lods
inc
out
and
icebp
inc
and
fst
shr
test
pusha
loopne
mov
sbb
or
sbb
aam
adc
in
movs
out
cwde
or
les
scas
or
pop
xor
ins
lods
loopne
outs
sbb
cli
dec
adc
jl
les
pop
sbb
pmaxsw
fcmovu
fmul
mov
sbb
sahf
xchg
pop
mov
shl
pop
pop
xchg
dec
test
inc
sbb
push
xlat
mov
std
push
dec
test
pop
int
pop
sar
sbb
ins
rcr
test
(bad)
fadd
adc
fiadd
push
popa
les
sbb
mov
fwait
xor
lods
ret
loope
js
icebp
mov
test
call
xor
push
je
bound
and
mov
mov
ret
das
cmp
add
adc
and
inc
ficom
arpl
cmp
lods
rcr
pop
jecxz
repz
mov
xor
inc
pushf
push
pop
je
test
add
add
jl
in
jbe
mov
cmp
xchg
js
movs
sbb
(bad)
aad
mov
mov
push
sar
fdiv
inc
les
enterw
ins
cmp
sbb
lods
cmps
retf
jecxz
sub
rcr
push
pop
loop
fist
mov
aaa
fiadd
push
out
addr16
sbb
mov
leave
cmps
xlat
or
pushf
(bad)
stos
(bad)
mov
test
jl
pop
das
sub
xor
test
out
mov
inc
sbb
test
(bad)
pushf
push
test
mov
or
inc
ins
ss
sbb
ins
push
lods
cmp
inc
dec
aad
pop
dec
lds
shl
xchg
dec
fild
gs
push
jne
inc
fimul
inc
pop
fadd
outs
jle
(bad)
aam
test
les
test
je
enter
inc
mov
xor
jne
shr
jecxz
shr
in
dec
mov
into
test
sbb
cmp
lods
fsub
add
repnz
loop
or
mov
mov
sbb
movs
adc
out
repnz
sbb
das
and
fstp
arpl
jl
pushf
push
dec
dec
add
inc
enter
das
rcl
fs
sbb
nop
jl
aas
cwde
test
mov
mov
in
test
fidiv
sbb
mov
ins
jg
cwde
push
jo
pusha
(bad)
jl
lahf
pop
ins
xor
mov
dec
nop
inc
iret
adc
add
inc
push
jl
out
lods
ins
mov
out
enter
dec
nop
adc
mov
int3
lods
inc
push
mov
leave
nop
or
add
ror
ins
(bad)
xor
xor
inc
cs
out
xchg
fldenv
mov
jg
sti
and
loop
icebp
call
adc
jl
sbb
inc
mov
pop
mov
ret
shr
loop
add
adc
and
xor
inc
push
mov
jae
cmp
xchg
sbb
lods
mov
pushf
sar
dec
sub
jl
ror
jecxz
ins
lods
sub
call
mov
cli
xchg
ins
cmp
popf
lods
in
cld
ret
inc
dec
sar
dec
cld
jecxz
mov
and
lods
fiadd
mov
ret
cmp
mov
lods
(bad)
imul
hlt
fidivr
jle
lods
xor
cwde
retf
jne
bound
movs
mov
clc
dec
lds
inc
inc
mov
mov
cld
rol
jl
or
rcr
leave
mov
adc
cmp
push
push
and
xchg
cli
ins
adc
call
shl
pusha
push
cwde
stc
push
push
or
xor
jl
sbb
leave
sub
cmp
mov
cmc
out
call
jmp
pop
lods
dec
mov
fist
jp
mov
cmp
in
push
es
aas
add
sbb
mov
rcl
or
in
outs
ins
ss
dec
inc
call
lods
popa
sbb
data16
pusha
jbe
nop
or
les
cmps
out
or
jecxz
add
jl
sbb
ficomp
(bad)
(bad)
jmp
out
in
mov
pop
test
fiadd
fs
cmp
push
pop
dec
or
dec
jl
sbb
pusha
pop
pusha
aaa
mov
inc
jb
push
cmp
in
inc
addr16
lods
jnp
out
ja
cld
ja
sbb
mov
xchg
inc
pop
cmps
ins
push
data16
mov
pop
lods
call
out
retf
imul
push
lods
loop
iret
mul
jne
and
jl
sub
inc
mov
or
rcr
movs
loop
mov
(bad)
sub
sbb
call
fadd
adc
ins
cmp
jle
mov
dec
pop
movs
sbb
into
fldcw
or
lods
lock
in
fisttp
sub
jl
mov
sub
fisubr
pop
push
imul
xchg
jno
push
jno
sbb
rep
xor
fdivr
fucomip
adc
loopne
mov
in
xchg
fld
sub
in
dec
or
loop
(bad)
les
lods
pushf
xchg
fcmovnb
and
mov
lods
fstp
jl
pop
dec
pop
retf
or
aam
mov
xlat
inc
and
je
cmps
sbb
inc
stos
movs
ja
push
addr16
pusha
daa
jl
dec
jo
test
(bad)
fdiv
ret
lods
jbe
shl
jl
fwait
push
mov
xchg
push
jl
fiadd
aad
jle
jle
inc
test
sbb
pop
lods
inc
cmp
sub
or
hlt
mov
call
lock
sub
lahf
xchg
push
mov
pop
sub
dec
movs
or
xchg
mov
call
mov
(bad)
mov
lods
add
cmp
inc
cmp
sbb
popa
sbb
cmps
fnstenv
mov
mov
xchg
out
and
ror
dec
data16
pop
sub
mov
adc
sbb
ins
add
mov
jnp
imul
dec
push
cmp
sub
sbb
or
call
retf
stos
les
push
pop
pushf
dec
jmp
sahf
enter
(bad)
fucompp
fcomp
leave
cld
mov
mov
pop
pushf
dec
pop
sub
mov
jmp
std
mov
jge
test
in
mov
jl
les
cmp
test
pop
pop
xchg
fild
sbb
popf
dec
aaa
sbb
pop
cmp
mov
mov
jl
pushf
(bad)
pushf
mov
adc
repz
xchg
gs
data16
push
(bad)
inc
mov
push
fcomi
call
retf
xlat
mov
movs
cmp
jl
jne
les
mov
les
sbb
jmp
in
mov
inc
lods
xchg
fadd
addr16
jmp
push
dec
push
and
inc
xchg
jmp
fidiv
inc
and
jle
adc
mov
nop
das
daa
cld
dec
les
jg
or
out
pop
cld
adc
xor
jo
nop
mov
jl
fild
fisub
fdiv
inc
in
fsub
mov
or
fcom
and
xor
jb
mov
fnstcw
test
ins
and
loop
inc
jns
jle
in
xchg
sbb
push
jbe
ins
add
mov
arpl
cmp
dec
push
pop
lods
jbe
dec
inc
test
test
inc
lds
mov
sub
dec
in
aad
retf
and
mov
mov
and
or
add
and
lods
cmp
scas
mov
cmps
popf
inc
pop
out
into
push
xchg
mov
mov
pushf
inc
push
ss
mov
push
ins
pop
fcomi
movs
(bad)
in
push
sbb
lods
push
mov
movs
ficom
test
fiadd
xor
add
mov
dec
fsubr
pushf
test
fs
sbb
(bad)
jl
xchg
lods
xor
xchg
sbb
rol
ret
call
cmps
sbb
aas
ja
dec
arpl
mov
pop
adc
jecxz
loop
(bad)
rcl
std
ret
mov
xchg
ins
imul
jb
jl
mov
xor
cmp
sub
push
cmp
mov
pop
xchg
sar
popa
jb
push
push
cdq
xor
and
adc
adc
or
pop
rcr
loopne
fs
mov
inc
shl
pusha
inc
sbb
cld
add
and
or
lock
out
pop
iret
mov
jmp
mov
outs
sbb
dec
dec
fidivr
stos
das
rcl
pop
(bad)
fsubr
faddp
into
sbb
mov
xchg
fmul
pop
aam
mov
sbb
ds
ret
mov
test
in
cli
(bad)
in
dec
or
lods
popf
mov
xor
sar
js
lock
and
ins
in
pop
inc
je
push
jns
sbb
ins
jno
xchg
pop
mov
fcmovnbe
push
loope
icebp
not
pop
add
push
inc
mov
dec
lock
mov
sbb
jmp
ret
jl
mov
adc
sbb
lods
(bad)
mov
or
sbb
pushf
add
and
mov
cmp
call
xor
fist
sub
(bad)
fucomp
lds
sub
aad
inc
in
fadd
push
pop
mov
cld
jbe
inc
mov
sbb
sub
jl
dec
mov
out
mov
pushf
(bad)
sbb
pop
out
or
div
ins
pop
inc
in
pop
cwde
aaa
ins
inc
out
outs
mov
les
jl
retf
xchg
in
xchg
sbb
(bad)
pusha
cmps
mov
pop
call
dec
ins
xlat
sub
xchg
ins
cld
ja
in
fst
ror
fsubr
xor
pop
std
inc
test
out
cmp
xchg
(bad)
stos
loopne
loopne
xchg
push
push
xchg
jbe
pushw
push
js
es
xchg
push
pop
push
mov
mov
dec
jle
and
test
xchg
sbb
lods
inc
fsub
les
pop
enter
hlt
outs
pop
aam
fdiv
lods
je
shl
inc
sbb
jl
lods
and
pop
adc
dec
add
repz
ret
sbb
mov
clc
mov
jae
arpl
in
fdiv
and
add
loop
rol
ret
stos
fisub
xchg
ficomp
push
ins
inc
rcr
out
clc
movs
and
add
sbb
mov
mov
mov
adc
sbb
popa
jl
sbb
jl
xor
sub
push
cwde
sar
jle
ret
jecxz
mov
std
mov
pop
sti
lods
nop
push
js
mov
fld
sbb
jle
pop
push
movs
inc
scas
cwde
dec
mov
(bad)
fild
xor
outs
jno
jl
je
mov
jmp
sbb
lods
loopne
add
imul
shl
pop
mov
or
cld
loopne
jle
lock
sbb
xor
mov
cld
loope
add
xchg
xor
mov
dec
inc
shr
out
sbb
xor
and
push
pop
in
int
xchg
xchg
int3
mov
lods
ret
loop
add
outs
xchg
and
(bad)
arpl
mov
adc
or
dec
out
cmp
mov
sub
dec
push
dec
retf
cmp
stos
lods
shr
push
mov
sbb
mov
jl
sub
rcr
jbe
hlt
repz
add
mov
fadd
and
je
xchg
pop
mov
les
mov
dec
adc
add
sbb
movs
cwde
enter
call
sbb
aad
pop
jl
in
ins
pop
adc
jns
dec
icebp
mov
pusha
mov
cdq
mov
mov
loopne
mov
mov
pop
shr
cmp
pushf
lods
leave
inc
push
rcl
repz
push
push
add
sbb
cld
call
adc
(bad)
or
call
fst
(bad)
lods
int
jl
test
sub
add
push
push
jp
pusha
sbb
push
cld
aad
jg
call
mov
fwait
lods
sub
(bad)
dec
jl
inc
mov
outs
xchg
jl
call
xchg
xchg
les
or
mov
out
dec
inc
pop
and
fdivrp
retf
(bad)
(bad)
dec
into
jmp
mov
mov
ins
dec
imul
out
dec
jl
int
mov
in
or
and
loopne
sbb
addr16
dec
cld
ja
or
sub
(bad)
xchg
inc
mov
stos
mov
inc
push
pop
push
add
inc
sbb
(bad)
lods
sub
call
sbb
lods
retf
scas
mul
fisubr
pop
dec
out
sbb
outs
mov
jg
sbb
or
cmp
test
sub
xchg
mov
jle
or
call
ins
pop
pop
cli
jge
or
lods
fild
fidivr
mov
ins
push
aas
sbb
test
jl
call
lods
or
outs
pop
inc
mov
or
push
addr16
pop
lock
mov
dec
jge
out
cdq
jl
push
cmp
lods
out
test
jb
push
sub
nop
lods
ja
lods
shl
mov
out
mov
retf
jl
mov
jecxz
mov
or
push
ins
and
call
inc
sub
in
clc
pusha
pop
movs
in
cwde
jo
pop
nop
jle
jle
jle
inc
cmps
sbb
xchg
shr
loopne
pop
lock
lds
movs
in
sub
mov
pusha
jl
cmp
(bad)
cli
lock
pushf
push
mov
retf
call
mov
push
movs
sbb
aas
adc
lods
jmp
leave
lods
cmp
sbb
or
xor
xor
inc
sbb
add
sbb
ss
xchg
jns
scas
and
pop
and
outs
sub
pop
dec
sar
clc
pop
les
cmp
or
fcmovu
retf
fisubr
jp
push
les
cmp
enter
jmp
test
lods
jns
test
mov
sub
sbb
or
cwde
clc
(bad)
in
fimul
pop
sbb
push
ins
push
clc
mov
ins
pop
sub
dec
addr16
jmp
stc
daa
add
sbb
sbb
jl
adc
fdiv
xchg
(bad)
inc
fdiv
les
mov
loope
test
movs
jnp
in
fcmovb
jne
gs
mov
(bad)
sub
push
sbb
lods
clc
aam
xchg
push
(bad)
mov
ja
les
dec
xchg
adc
movs
dec
fdiv
outs
push
sar
mov
inc
sahf
inc
(bad)
sbb
icebp
and
ins
adc
aaa
cdq
(bad)
adc
das
mov
jl
mov
jl
pop
popf
add
push
fidiv
xor
mov
add
mov
inc
jl
jl
jno
inc
test
push
popf
icebp
adc
push
test
out
push
loop
adc
xchg
mov
mov
clc
adc
arpl
sub
sbb
ins
inc
and
into
daa
jno
test
es
les
stc
mov
and
inc
mov
or
ret
pop
cld
ja
and
sbb
sbb
xchg
jo
data16
popf
sub
xor
cmc
retf
and
cmp
cmp
inc
mov
aaa
sub
(bad)
scas
pop
out
inc
hlt
les
push
popf
mov
sub
pop
stc
mov
or
push
pop
xchg
cdq
lods
push
sbb
fimul
ins
pop
cmc
pop
mov
mov
xchg
sbb
dec
mov
cld
(bad)
dec
cmp
in
adc
gs
dec
pusha
in
pushf
lods
adc
pop
in
aam
(bad)
sar
xchg
fild
inc
mov
movs
sbb
jmp
mov
lods
arpl
push
je
inc
sbb
add
xor
adc
pop
add
fdiv
loop
jecxz
sar
mov
xchg
ror
or
ret
fisttp
inc
mov
xor
sbb
xchg
mov
in
movs
icebp
pop
rcl
mov
sahf
mov
xor
sub
ret
cmp
jb
and
adc
push
add
mov
rcl
loopne
inc
mov
call
sub
jmp
inc
pop
inc
jmp
xor
jmp
adc
cmc
data16
xchg
iret
out
pop
mov
lahf
mov
jg
push
dec
pop
pop
call
sbb
(bad)
sbb
jl
cld
js
cmp
call
pop
sahf
mov
mov
sbb
dec
ins
mov
pushf
ds
push
mov
fimul
pop
in
test
call
and
lods
(bad)
test
retf
and
sbb
push
xchg
in
ror
jbe
cmp
(bad)
icebp
sbb
les
sbb
inc
mov
leave
and
imul
dec
(bad)
call
xchg
sub
jl
adc
popa
popf
inc
add
push
arpl
pop
out
sbb
fwait
pop
adc
lods
mul
dec
xchg
cwde
lods
test
movs
xchg
mov
aam
dec
cld
adc
aam
cmp
gs
jne
mov
mov
(bad)
aad
in
test
ins
or
es
inc
jl
test
mov
(bad)
out
(bad)
pushf
out
test
pop
mov
mov
aaa
xchg
inc
pop
push
jmp
cmps
sahf
ja
mov
les
enter
ja
imul
sbb
push
fisttp
sub
inc
in
stos
cmp
dec
daa
sub
pop
or
jmp
loop
add
cmps
int
xchg
push
mov
push
retf
push
dec
test
add
mov
lods
push
sub
cmc
inc
enter
inc
fadd
mov
call
gs
push
mov
clc
and
add
in
popf
les
or
imul
in
fdiv
les
add
or
ret
int3
mov
or
sbb
nop
xor
mov
retf
mov
ja
leave
jl
fidivr
jl
mov
dec
push
mov
(bad)
mov
xchg
mov
call
paddw
add
push
cwde
adc
pop
push
sub
jns
ins
fadd
mov
js
mov
lock
jmp
sbb
push
push
xchg
outs
mov
inc
jg
(bad)
in
out
in
xor
and
out
cld
in
jle
mov
cmps
stos
add
imul
lods
cld
push
xor
out
lods
clc
mov
dec
sbb
lods
cdq
mov
and
in
jl
dec
inc
mul
jge
xor
scas
push
jecxz
pusha
pop
(bad)
cmp
movs
mov
and
out
adc
(bad)
lock
or
adc
inc
mov
cld
jno
icebp
mov
shr
icebp
bnd
xor
scas
(bad)
cmp
mov
ret
loop
adc
call
inc
ret
jae
adc
repz
sub
cmp
mov
jns
or
jbe
mov
jl
inc
sub
popa
sbb
pop
call
mov
pop
fwait
mov
mov
jecxz
repz
add
adc
xor
inc
sar
fs
push
ins
test
xchg
jmp
sbb
mov
sbb
add
push
(bad)
fld
ins
push
jne
jle
movs
shr
dec
xor
enter
movs
and
aad
sub
in
aam
rcr
(bad)
mov
xchg
cmc
dec
out
in
imul
adc
jl
adc
imul
aam
nop
in
dec
jo
push
dec
inc
int3
and
jl
fcom
(bad)
out
jns
test
iret
sbb
jl
pop
mov
fidivr
in
and
fldl2t
add
loopne
stc
fst
or
popf
dec
leave
sbb
add
mov
sbb
pop
pop
outs
adc
ins
loop
cmc
stos
(bad)
sbb
push
or
xchg
call
(bad)
lods
das
ss
push
push
movd
jbe
push
mov
in
cdq
fisub
mov
pop
(bad)
sbb
mov
out
dec
outs
popa
push
fs
fidivr
cli
rcl
jne
jne
movs
or
daa
sbb
loopne
xor
jl
pop
jl
mov
ins
sbb
ja
sub
or
jmp
lods
jle
pop
(bad)
push
in
cmps
sbb
wrmsr
mov
(bad)
hlt
test
pop
out
xor
stos
outs
das
mov
inc
lods
(bad)
mov
dec
jl
int
jl
push
retf
sbb
fisttp
pop
sub
sbb
in
ins
cdq
jl
jg
sti
(bad)
mov
pop
out
jl
pop
mov
push
(bad)
or
pop
add
js
mov
or
sbb
retf
cwde
out
outs
cmp
lods
jl
xor
or
cld
adc
or
sbb
mov
enter
mov
mov
mov
dec
imul
cmp
mov
lods
lods
shr
jl
call
jl
add
lods
dec
dec
xlat
mov
lahf
sbb
sti
add
fwait
ss
jmp
xchg
call
push
lods
inc
inc
dec
push
pop
sbb
test
rcl
add
data16
mov
push
shr
es
add
sbb
fdiv
aad
pop
jbe
sbb
jl
xchg
dec
loop
cmp
jne
add
out
and
cdq
add
lods
and
aam
rol
les
pop
fdiv
stc
inc
loopne
jmp
xchg
fidiv
fdiv
add
adc
jl
pop
cmp
xor
mov
repz
ins
mov
not
push
stos
jl
les
sbb
cmp
mov
sbb
jmp
movs
xchg
jl
or
outs
sbb
lds
test
mov
mov
movs
sbb
enter
lds
adc
or
(bad)
movs
adc
xchg
lods
mov
pushf
push
sbb
inc
inc
div
jl
sub
cld
jmp
in
adc
fimul
pop
test
gs
push
mov
xor
loop
hlt
in
cmps
cmp
inc
rcl
ds
xchg
adc
dec
dec
add
rcr
into
movs
adc
out
(bad)
sbb
add
movs
daa
xchg
outs
sbb
dec
(bad)
aaa
dec
cld
mov
popf
(bad)
sti
adc
push
cld
call
mov
mov
or
imul
mov
inc
in
loop
adc
jl
(bad)
pop
cwde
push
adc
pop
loop
xchg
in
ret
jl
pop
mov
push
in
fbld
or
cwde
lods
ret
(bad)
sar
bound
lods
add
xor
cmp
mov
pop
mov
xchg
sub
stc
outs
neg
movs
movs
les
xor
mov
lds
sub
jb
mov
dec
lods
cmp
aaa
retf
lods
inc
in
sub
add
pop
lods
ss
es
push
xchg
push
imul
dec
pop
out
fsubr
pushf
gs
call
xchg
cmps
aaa
jl
and
loop
ret
vpminub
call
ret
mov
mov
adc
les
inc
add
sbb
and
mov
repnz
loop
xchg
rcr
mov
adc
test
sub
push
ret
dec
inc
fsub
mov
retf
jmp
xchg
into
loope
dec
ror
shl
arpl
add
pop
push
adc
inc
shl
ret
xchg
ficom
jb
dec
add
lock
loopne
push
icebp
rol
loope
mov
shr
mov
sub
pusha
jno
push
popa
test
inc
into
and
sbb
inc
add
js
iret
mov
pop
(bad)
ror
jg
inc
pop
mov
das
call
(bad)
mov
into
push
popf
mov
sahf
leave
mov
pop
outs
out
dec
out
imul
push
call
nop
mov
pushf
in
cmp
dec
mov
cli
fcom
loopne
cdq
int
sbb
lods
add
mov
les
mov
pop
sub
mov
ror
shr
ffree
loopne
hlt
fidivr
loop
popa
test
fcmovu
jle
mov
xchg
sbb
mov
push
adc
std
and
sbb
jl
in
pop
adc
pop
cld
mov
pushf
ror
jb
fild
sar
push
ins
sub
(bad)
in
jl
xchg
aam
hlt
sub
outs
jo
fdiv
xchg
lods
push
pop
jne
test
xchg
call
rcl
retf
in
dec
int
sbb
outs
sub
mov
sbb
jl
jl
data16
(bad)
fadd
cmps
sub
(bad)
mov
neg
pop
xchg
pop
daa
(bad)
fiadd
push
fisub
ja
jmp
mov
or
test
or
dec
addr16
arpl
pop
call
inc
in
fidivr
cwde
pop
std
fimul
cwde
out
(bad)
call
mov
cmps
push
mov
jbe
cli
enter
inc
clc
cs
ss
sbb
shr
push
or
ds
push
aad
(bad)
dec
data16
mov
test
inc
mov
ror
add
aam
(bad)
jmp
je
xchg
sbb
ins
test
call
ins
sbb
mov
jl
cli
jecxz
in
xor
lods
shl
jae
arpl
jl
push
add
cwde
shr
ret
mov
xlat
jb
bound
sbb
sbb
dec
add
lods
xchg
fmul
mov
mov
dec
and
sahf
push
(bad)
sbb
jne
fadd
lock
mov
add
mov
mov
aas
dec
shl
pusha
lods
ficom
inc
or
retf
lods
push
and
dec
dec
out
or
lahf
repz
js
(bad)
lods
fidivr
iret
dec
cs
in
in
push
ins
test
cmp
dec
push
pop
pop
sbb
enter
jl
jl
mov
add
adc
and
push
ins
xor
fiadd
dec
das
loope
sub
mov
call
loop
mov
loopne
shl
repnz
or
loopne
call
push
pop
popa
in
lds
ins
mov
int
sar
inc
loope
mov
adc
repz
jl
sbb
(bad)
in
and
cmps
sbb
xchg
in
fs
pop
ret
or
loop
jne
sbb
sbb
jl
fcom
les
inc
mov
lods
mov
leave
or
xchg
je
retf
test
jle
mov
jl
dec
dec
shl
sbb
push
sub
arpl
push
call
cmp
pop
xchg
mov
and
movs
les
xor
inc
pushf
ins
push
cwde
and
test
add
push
dec
jle
pop
rcl
jl
xchg
mov
sbb
popa
shr
push
fiadd
and
cmc
scas
loopne
dec
rcr
mov
jo
sbb
push
lods
inc
in
xor
pop
out
movs
cmp
mov
pop
iret
jl
mov
jns
sbb
pushf
jmp
push
jecxz
push
mov
cdq
push
ins
outs
push
cli
lods
sar
fstp
popf
jl
jmp
enter
sbb
aas
sbb
lods
add
lods
pop
mov
or
dec
loopne
ror
ins
mov
es
sbb
loopne
femms
sbb
dec
push
sahf
out
pushw
pop
xchg
pop
xchg
fisubr
jmp
mov
(bad)
hlt
(bad)
cld
(bad)
pop
sbb
call
(bad)
sbb
push
fild
movs
fcomp
jmp
daa
lods
loop
or
call
aaa
mov
jl
xchg
lods
fs
addr16
jns
stos
cld
or
or
sbb
cmps
mov
fiadd
sub
mov
ins
adc
or
aaa
pop
lods
int
inc
sbb
jnp
xlat
imul
pop
sbb
jl
sub
lods
ret
mov
pop
inc
fwait
ret
das
pop
loop
fnsave
stos
jl
sbb
das
pop
lods
fisttp
push
mov
push
outs
data16
sti
jmp
mov
in
in
sbb
xor
lods
or
jl
mov
jne
push
jl
movs
dec
jg
sbb
ins
jmp
xchg
pop
call
jno
ins
fld
das
imul
test
mov
jl
fistp
inc
mov
sbb
mov
rcr
inc
out
inc
pop
cmp
clc
dec
sar
xchg
mov
loop
lods
fsubr
push
iret
fsub
jbe
and
hlt
jmp
xor
lods
fistp
mov
pusha
fnstcw
out
fmul
mov
mov
stos
mov
sbb
jne
ficom
ja
sbb
inc
jnp
daa
out
xor
sbb
call
push
nop
xchg
jmp
push
in
and
cmp
ins
push
sub
aad
jl
dec
rcl
fiadd
test
push
lock
and
jl
ficomp
stos
mov
pusha
mov
ror
jmp
push
mov
lods
f2xm1
or
add
dec
test
mov
inc
fst
add
imul
mov
pop
inc
mov
mov
call
clc
in
push
push
call
pop
inc
jmp
call
enter
pop
sub
test
fistp
fsubr
in
clc
hlt
data16
push
sbb
pop
xlat
movs
jbe
sbb
jl
xchg
fimul
sub
fisub
push
out
adc
jl
cld
sbb
mov
les
mov
inc
les
sbb
mov
sbb
sar
lods
ins
sub
jne
ficom
inc
fstp
add
adc
std
cmps
or
push
fs
xchg
imul
movs
dec
pop
xchg
jle
jle
jle
jne
sbb
pop
sahf
jmp
push
je
inc
jl
xor
inc
(bad)
movs
and
push
pop
pop
inc
adc
or
add
fld
(bad)
fdivr
out
sbb
daa
fist
fidiv
fadd
aam
pop
cld
mov
pop
or
or
inc
pop
popa
mov
call
fcmovb
fcom
loope
add
xchg
fsub
xor
(bad)
(bad)
cld
jb
enter
push
jl
repnz
add
sbb
cmps
dec
and
jl
fist
push
arpl
jae
shl
les
loope
hlt
loopne
les
test
imul
arpl
mov
jns
dec
out
inc
sub
cld
or
jle
test
add
fs
je
add
hlt
jns
ins
cmp
aad
pop
mov
fs
hlt
and
or
loopne
inc
or
or
push
das
sbb
jno
loopne
and
push
imul
dec
sbb
adc
call
sbb
dec
push
or
mov
test
and
add
aad
inc
lods
les
dec
out
and
xor
popf
mov
or
ficomp
xchg
ret
jl
pop
mov
sbb
adc
inc
pop
xor
pop
sub
(bad)
repz
mov
cmp
xchg
lods
pop
inc
sbb
sbb
shl
call
adc
pushf
mov
add
cmps
rcl
mov
mov
enter
push
jmp
(bad)
xor
add
and
out
add
loopne
push
shl
mov
out
mov
xor
sbb
xor
add
(bad)
mov
sbb
lods
cmp
jns
ja
jle
cmp
inc
ror
bound
fsubr
sub
cmp
dec
mov
jl
mov
xchg
dec
out
jl
in
retf
cmps
call
push
cmp
or
lock
adc
inc
lods
inc
mov
cmp
sub
in
ins
cmp
out
in
lds
lods
or
in
jl
cmps
mov
ret
pop
repnz
and
xor
jl
mov
sbb
xchg
xchg
jl
int3
mov
in
ret
sbb
in
pop
add
mov
fadd
or
neg
movs
mov
les
(bad)
hlt
int3
add
and
pushf
gs
jne
loope
jno
(bad)
test
push
fst
cmps
jle
(bad)
cmc
mov
cmp
inc
jmp
xchg
(bad)
xchg
xchg
cmps
aam
ja
(bad)
in
fcom
out
idiv
dec
push
pusha
in
push
sbb
les
mov
popf
(bad)
mov
sbb
mov
daa
sub
pop
sbb
call
int
(bad)
std
add
inc
xchg
lods
xchg
jbe
push
mov
cwde
clc
inc
les
sahf
or
movs
fimul
pop
cmc
lods
fsub
aad
lds
test
inc
test
mov
hlt
jmp
pop
std
aam
sbb
outs
push
(bad)
(bad)
sub
fiadd
and
jle
adc
in
fdiv
jecxz
mov
mov
fdiv
les
xor
les
fstp
loop
mov
mov
cld
mov
mov
mov
out
adc
icebp
or
mov
cld
mov
cwde
jns
in
mov
jmp
adc
mov
sbb
xlat
das
lods
mov
push
or
pusha
fwait
inc
test
cmp
pop
or
push
jl
mov
loopne
adc
sbb
jo
mov
dec
lods
scas
jns
(bad)
cli
jl
lahf
pop
sbb
sub
pusha
mov
outs
mov
nop
pop
out
jbe
stos
out
sbb
lods
mov
mov
fist
stos
popf
pop
add
and
inc
sub
sbb
lods
jo
addr16
nop
cld
sub
sbb
mov
and
jecxz
in
sbb
lock
lods
sbb
and
inc
xor
jno
xchg
in
xchg
mov
shr
adc
popf
and
xor
cmovb
xor
xchg
bound
sub
in
ffree
in
(bad)
rcr
mov
push
jl
add
retf
lods
arpl
in
push
out
scas
and
push
cli
ins
mov
call
mov
lods
inc
jmp
dec
sbb
sbb
mov
aas
outs
xor
fcmovnb
fcmovbe
push
scas
cld
repz
jl
cmp
inc
dec
mov
sub
iret
neg
ffree
outs
stc
fidivr
rcl
xor
xor
inc
cwde
add
data16
test
test
xchg
mov
(bad)
add
out
out
imul
inc
adc
and
sbb
jl
push
mov
or
pusha
cli
push
fcomi
sbb
adc
lods
add
cli
out
lods
loop
sbb
dec
sbb
inc
sbb
jg
cmc
sub
dec
push
dec
push
dec
pop
pop
fistp
imul
movs
ficomp
je
fdivr
das
cld
test
mov
cli
dec
mov
pinsrw
das
pop
stos
push
stc
pop
or
and
dec
loop
cmp
cld
das
pop
stos
jl
ins
out
cdq
dec
sub
jno
pusha
jl
pop
arpl
pop
sub
inc
rcr
call
push
jbe
into
xchg
out
sbb
mov
sbb
mov
dec
in
outs
mov
jl
call
xchg
imul
call
loopne
sar
mov
or
sti
in
ja
addr16
xchg
and
jno
lods
fsub
pusha
sbb
aas
mov
jl
or
sbb
in
bnd
out
mov
out
aas
ret
lods
dec
pop
xlat
retf
mov
inc
lods
(bad)
mov
mov
jl
mov
stos
jmp
outs
sub
imul
clc
vmaxss
push
pop
loopne
or
adc
add
ror
lods
popa
(bad)
jl
push
sbb
(bad)
out
sub
sti
jl
cmps
pop
pop
or
lods
lods
or
cwde
or
data16
jmp
cwde
retf
inc
push
xlat
sbb
dec
cmp
sbb
sbb
in
sbb
fs
shl
ins
cdq
jl
enter
jp
daa
call
lods
mov
sbb
lods
loopne
xor
imul
cmp
loop
mov
(bad)
sbb
mov
(bad)
out
fst
test
(bad)
pop
add
cmps
sbb
cli
xchg
lods
sti
adc
push
inc
or
jecxz
pop
push
out
inc
dec
push
pop
out
mov
lods
nop
jbe
mov
repz
pop
inc
jne
cmps
jl
dec
movs
shl
lock
fiadd
call
or
add
adc
in
hlt
jl
fs
call
dec
dec
jo
sbb
jecxz
dec
mov
rcr
leave
loopne
hlt
xor
pop
jmp
leave
push
fs
shl
jno
fst
sbb
stc
mov
or
mov
call
ins
sbb
movs
xchg
cli
(bad)
pop
call
mov
sub
sbb
sahf
fmul
pop
mov
fmul
enter
mov
or
fcmovnu
call
test
jl
mov
in
ficomp
mov
sbb
sti
aad
enter
test
js
mov
sbb
or
and
mov
stos
sbb
adc
adc
out
fimul
outs
or
call
cld
sbb
mov
popf
inc
sbb
lods
daa
sbb
test
sbb
nop
fidivr
dec
inc
les
mov
jmp
push
jle
test
int3
mov
dec
push
xor
jl
sub
dec
aas
jmp
adc
mov
(bad)
mov
push
pop
popf
pusha
ins
nop
pop
popf
mov
out
and
outs
jl
enter
and
xor
(bad)
push
jl
xchg
mov
and
xor
push
shl
xor
fcmovnb
fcmovbe
call
fadd
and
xor
arpl
push
ret
mov
jbe
rep
pop
xchg
and
adc
cmp
loopne
inc
lock
call
xchg
jmp
mov
inc
cmp
xor
sub
in
test
movs
mov
call
mov
test
mov
xor
mov
call
xor
inc
scas
mov
sub
adc
in
xchg
fdiv
inc
in
fwait
push
call
adc
loopne
push
adc
xchg
cmp
paddusw
adc
jl
(bad)
push
jmp
mov
retf
mov
add
push
mov
mov
enter
(bad)
test
je
or
sbb
inc
cld
sbb
pop
mov
shl
cli
mov
push
ins
mov
retf
push
pushf
inc
adc
xor
adc
pop
add
add
loop
jl
jo
ret
jl
mov
fs
jb
fsub
aam
rcr
les
mov
pushf
mov
mov
xchg
xchg
call
sub
push
arpl
inc
in
xor
and
adc
mov
shr
mov
cld
mov
and
jo
call
pusha
inc
mov
imul
push
cld
add
in
fcomp
iret
in
call
ret
cwde
(bad)
jg
fsubr
jne
movs
dec
cld
aas
push
sub
repnz
mov
mov
lods
fidivr
retf
scas
pushf
push
sbb
jl
push
add
js
dec
nop
dec
das
adc
mov
jecxz
std
cmp
lods
clc
(bad)
jl
or
mov
pop
mov
pop
lods
loopne
lock
push
adc
fnsave
retf
clc
popa
mov
adc
sbb
dec
shl
fcom
loope
icebp
sbb
les
int3
and
or
add
pop
mov
pop
rcl
ins
pop
repnz
lods
pop
std
and
inc
push
arpl
cwde
in
mov
clc
xlat
(bad)
test
jmp
mov
sub
mov
hlt
sar
adc
push
jmp
xchg
fild
vzeroall
fcom
in
push
sbb
in
fdiv
inc
aam
push
cld
les
xchg
cmps
sbb
(bad)
(bad)
(bad)
out
idiv
ins
outs
aaa
jbe
jl
addr16
ja
xchg
inc
mov
xchg
mov
(bad)
ins
xlat
pop
pusha
out
mov
sub
dec
out
test
pop
mov
js
mov
jl
mov
fcmove
mov
call
(bad)
lods
adc
sbb
shr
xchg
cmp
mov
es
loop
fist
fiadd
fdiv
in
cs
in
sbb
fild
push
mov
and
hlt
pushf
in
aam
les
mov
xchg
pop
test
outs
pop
push
fild
jle
and
adc
pop
add
repz
sahf
dec
mov
xchg
sahf
cld
cmp
jae
(bad)
push
scas
rol
xor
aas
sti
inc
repnz
sbb
push
arpl
mov
xor
ins
and
pmaxsw
push
ins
push
clc
clc
shr
or
lods
xchg
loop
icebp
xor
inc
and
aas
jp
jl
fadd
push
jle
lods
(bad)
bound
jns
sbb
cmp
dec
push
lods
pop
pop
and
push
out
xchg
(bad)
iret
outs
inc
sbb
mov
lahf
lods
pop
jl
or
pop
outs
shr
push
or
dec
mov
iret
outs
lods
fild
dec
lods
das
retf
ins
mov
(bad)
cld
test
clc
adc
inc
cwde
xor
fisub
ds
pop
push
nop
mov
sar
dec
add
or
bound
loopne
and
mov
(bad)
shl
add
in
icebp
mov
adc
xor
in
inc
add
push
in
jl
(bad)
(bad)
loopne
jb
or
jecxz
mov
ret
test
dec
shl
jl
sbb
les
jae
out
jns
jl
or
sbb
mov
inc
idiv
push
dec
sbb
dec
in
lods
push
or
lods
jmp
cmc
sub
in
and
mov
call
xchg
jecxz
inc
fst
gs
sbb
int3
jb
sar
xchg
push
mov
(bad)
js
in
xor
and
push
lods
icebp
xor
fadd
mov
gs
test
jno
rcr
push
(bad)
movs
std
and
cdq
adc
in
rcr
push
enter
mov
cli
pusha
sbb
jecxz
sbb
sbb
push
(bad)
test
scas
cmc
jns
lahf
sbb
push
(bad)
adc
clc
fsubr
pop
cli
lods
sbb
inc
ins
cwde
or
cld
sbb
call
mov
jmp
stc
push
hlt
gs
push
inc
imul
btc
pop
cdq
ficomp
xchg
jl
(bad)
xchg
stos
leave
out
loop
into
dec
jmp
fiadd
out
into
outs
or
popf
sbb
xchg
lods
fs
cmp
or
jmp
ss
inc
in
fmul
scas
sub
movs
mov
jecxz
pop
xchg
cmp
(bad)
sbb
push
ins
test
in
sbb
adc
pop
call
xchg
lods
or
daa
ror
mov
call
imul
addr16
xchg
fst
mov
mov
sub
sbb
loop
mov
sbb
cld
sub
xlat
adc
sbb
lahf
pop
jmp
out
(bad)
call
call
stos
movaps
lods
in
mov
stos
imul
repnz
jne
sub
dec
retf
sbb
ins
fisttp
pop
jl
(bad)
test
inc
aaa
fldz
sbb
adc
mov
lds
or
xchg
ins
js
pop
mov
mov
or
dec
outs
shl
jl
mov
lods
jl
jl
test
inc
or
imul
pop
jg
mov
enter
int
or
sbb
outs
sbb
cmp
iret
sbb
je
clc
fsubr
fbld
jl
(bad)
ins
(bad)
jmp
push
mov
lods
sar
cwde
or
jne
nop
jl
mov
repz
gs
rcr
mov
jl
sbb
mov
jnp
and
cmps
pushf
ja
add
push
(bad)
jl
ins
ficomp
call
(bad)
inc
loopne
loop
mov
add
fisub
movs
cmp
sbb
mov
mov
mov
sub
xchg
out
loopne
sbb
jne
inc
push
inc
call
retf
ja
cwde
in
call
call
jl
pusha
jecxz
sub
out
scas
and
sbb
and
jl
push
call
leave
pop
popa
mov
into
add
sub
mov
stc
ror
sub
sbb
add
sbb
test
lods
xchg
les
ins
cli
mov
sbb
ins
push
loop
xor
call
fucompp
enter
sbb
cwde
movs
movs
mov
mov
mov
pushf
sbb
call
mov
je
(bad)
sub
ins
or
xlat
test
fidiv
xchg
dec
ja
addr16
sbb
(bad)
dec
ins
lods
sbb
fidivr
cmps
fimul
xchg
fadd
push
fidiv
test
fiadd
in
sbb
in
(bad)
sub
fcmovnbe
mov
movs
in
fcmovnb
jne
xchg
lods
cwde
mov
sub
outs
fld
(bad)
add
adc
ins
ds
les
dec
dec
jl
sub
imul
stos
inc
xorps
pop
inc
xor
fmul
and
pop
jg
adc
(bad)
scas
jne
fmul
ffreep
dec
or
rol
enter
sar
xor
fild
popa
fdiv
in
fcom
(bad)
rcl
test
ficom
or
mov
jb
cmp
mov
dec
loop
add
lods
and
dec
adc
jl
je
xchg
outs
test
in
outs
jecxz
in
xlat
xor
rcr
movs
sub
test
in
ret
or
js
jl
dec
loop
jmp
(bad)
(bad)
mov
mov
sub
je
test
sbb
jl
pop
lock
fcom
in
hlt
mov
call
jl
push
dec
bound
sub
sbb
add
sbb
lds
mov
data16
out
les
sbb
ja
xchg
jns
ins
mov
adc
mov
mov
sbb
jl
lds
xchg
push
test
jne
gs
(bad)
push
in
imul
and
pushf
hlt
pop
in
aam
or
test
mov
sbb
push
ins
test
je
sub
iret
cmp
xor
sbb
cld
dec
in
ficomp
fcom
ret
les
test
mov
js
pushf
and
add
repnz
fcmovbe
sti
ret
mov
fist
lods
(bad)
mov
and
inc
cwde
and
pop
test
add
shl
fcom
rcl
ret
cld
mov
mov
jno
popa
sbb
jmp
and
add
lock
popf
loopne
rol
lods
shl
mov
cwde
movs
mov
call
inc
out
pusha
adc
add
loope
rcr
mov
call
or
mov
scas
adc
lock
shr
xchg
shr
jl
xchg
pop
test
out
mov
sbb
(bad)
into
sar
scas
cwde
sahf
mov
mov
dec
cld
movs
nop
mov
int3
push
or
in
inc
cmp
mov
mov
je
dec
shr
lock
add
sbb
and
sbb
popa
jl
push
jl
cmps
or
sar
cmp
loope
icebp
retf
fist
fisub
arpl
fdiv
je
xchg
mov
ret
mov
in
fcom
and
xor
push
push
jl
(bad)
add
mov
mov
shr
xchg
rcl
push
xchg
je
xchg
pop
movs
mov
jne
jmp
hlt
pushf
add
fiadd
gs
fild
kxorw
in
inc
aaa
or
push
add
mov
scas
xchg
mov
(bad)
pushf
out
neg
pop
hlt
les
mov
jl
fist
cld
out
lods
or
fisttp
pop
pop
fild
js
mov
out
int
clc
dec
mov
mov
movs
jne
cld
cmp
std
or
jmp
mov
cmps
mov
sbb
xchg
pushw
cwde
push
pop
inc
(bad)
(bad)
push
push
push
fild
pusha
cmc
cs
in
lds
mov
push
jl
dec
xchg
fsub
hlt
(bad)
aam
les
popf
movs
pop
xchg
cli
test
imul
lods
inc
in
enter
dec
jge
jl
rcl
ret
pusha
jl
sahf
xchg
mov
retf
push
or
(bad)
cmp
loop
sub
ret
mov
mov
fcom
pop
clc
fdiv
and
add
pop
mov
mov
push
movs
mov
sahf
cmp
mov
ins
nop
mov
or
pusha
lods
pop
pop
inc
sti
xor
adc
add
dec
inc
out
mov
mov
jns
sbb
lods
dec
xlat
test
in
push
mov
sbb
clc
cmp
pop
mov
ret
xchg
mov
or
sbb
jl
push
or
repnz
pop
not
lods
fidiv
and
inc
push
pop
jo
or
mov
jmp
sbb
std
jl
or
mov
out
adc
mov
push
sbb
popa
adc
adc
icebp
xor
mov
lods
inc
shr
add
sbb
outs
in
add
ins
call
in
mov
push
add
jb
xor
call
sbb
sub
or
sbb
dec
popf
cmp
or
sbb
or
xor
sbb
call
or
lods
jo
pop
xchg
lods
mov
ret
lods
ins
mov
gs
arpl
repz
out
jl
add
adc
jb
mov
inc
pop
mov
mov
xchg
sbb
in
cwde
adc
mov
loope
in
clc
rcl
xor
add
gs
inc
outs
fnsave
jne
and
adc
pop
loopne
rol
repz
mov
js
in
mov
push
in
test
in
jbe
jl
out
retf
pop
test
jmp
jg
enter
lods
pop
sbb
dec
jns
aas
inc
jl
jl
divps
nop
(bad)
stos
sbb
cmc
sub
jle
movs
sub
dec
call
bound
in
or
cli
push
jl
pop
test
out
lods
into
jns
mov
scas
enter
pop
fld
jmp
lods
or
xchg
call
sub
sub
xor
jmp
ss
push
dec
push
mov
loop
xchg
pop
fistp
jecxz
push
cmps
sbb
cmp
sbb
jl
mov
jge
in
xchg
push
test
pop
inc
pop
lock
lods
call
push
mov
retf
adc
in
pop
addr16
ja
call
xor
cmps
sti
test
pop
mov
in
pop
jl
in
mov
lods
into
mov
out
ret
pop
fsubp
cmc
sbb
out
push
test
nop
mov
mov
jne
mov
or
out
jecxz
or
lahf
sub
mov
das
cmp
aas
rol
movs
dec
push
jl
in
stos
pop
cld
pop
inc
lods
aas
xchg
or
lods
cmp
das
ins
cdq
js
ins
(bad)
add
pop
mov
in
sbb
dec
dec
cmp
sbb
ror
mov
mov
lods
lods
call
or
outs
jl
in
les
or
outs
dec
jl
js
fistp
push
iret
dec
cmps
sub
xor
xchg
pop
out
mov
in
rcl
nop
enter
hlt
add
mov
jmp
cmps
sbb
mov
ins
fild
fimul
mov
out
xlat
cmp
or
pop
adc
fisub
lods
add
fnsave
out
dec
movs
xabort
mov
jo
cmp
adc
mov
mov
push
adc
in
dec
rcl
shl
out
test
sbb
push
mov
mov
stc
fist
mov
lock
sbb
movs
jl
or
jle
jle
fsubr
fnstcw
leave
and
popa
sbb
lods
xor
adc
inc
jl
sub
sbb
sbb
retf
sbb
mov
jb
pop
pop
push
ins
cmp
sub
sbb
cli
iret
fcomp
fcmovu
retf
enter
call
lods
pop
sahf
mov
sub
or
stc
fisubr
les
pop
jns
imul
fisubr
fcomp
or
mov
test
js
cmp
push
sbb
out
call
jl
jge
sbb
sbb
push
loope
push
ss
popf
jle
loop
xchg
mov
mov
push
sbb
cmps
mov
sbb
dec
pop
pop
dec
xor
sahf
dec
je
add
pop
das
nop
jl
inc
addr16
scas
aaa
mov
movs
sub
clc
jo
fiadd
xchg
sbb
adc
shl
fadd
adc
sar
loope
fcomi
fiadd
fcom
and
(bad)
fdiv
inc
in
inc
bound
ror
aam
cmps
movs
mov
dec
jecxz
adc
xchg
in
mov
leave
mov
or
jecxz
add
jbe
jns
jge
retf
je
lods
push
dec
test
jl
and
sbb
and
jp
pop
out
jmp
push
jl
je
ins
sbb
and
jbe
(bad)
addr16
lods
xchg
mov
lods
repz
aam
in
enter
jl
xor
dec
push
push
call
xchg
or
lds
aad
in
cmc
fadd
push
je
cmp
pop
fisubr
sbb
pusha
loop
outs
mov
jb
test
ficom
addr16
jbe
mov
cmp
sbb
or
les
mov
cmc
fcmovnb
in
and
cmps
or
xchg
mov
movs
retf
inc
sbb
jl
xchg
mov
push
sbb
lods
xor
lods
adc
sbb
mov
(bad)
retf
mov
dec
test
je
fs
jl
pop
or
add
and
push
jl
jmp
ficom
push
or
inc
sbb
jl
call
adc
mov
ret
mov
jb
jl
inc
cwde
inc
repz
xor
adc
popf
icebp
ins
loope
ins
shr
mov
mov
xor
loop
inc
xchg
dec
xor
add
lock
arpl
push
sbb
in
ins
mov
test
mov
push
in
fadd
inc
and
and
jmp
inc
mov
js
jno
mov
lahf
fsub
adc
(bad)
in
fdivr
out
rcl
sbb
pop
push
mov
lods
retf
mov
sahf
mov
mov
push
lods
jmp
nop
pop
cs
push
cmp
push
je
std
dec
in
jo
inc
sbb
in
pop
nop
adc
mov
ins
dec
cli
ins
shr
sbb
lock
mov
adc
std
xor
sbb
les
jno
or
adc
rcl
dec
and
sub
jb
sbb
fsub
ret
repnz
loop
or
mov
xor
pop
jae
sbb
xchg
push
mov
shr
jecxz
fcomip
fiadd
adc
in
cwde
inc
addr16
fs
call
sbb
sbb
(bad)
(bad)
aam
hlt
fcom
add
daa
int
int3
jne
or
fidiv
in
push
fidivr
es
les
jbe
pop
xchg
les
pop
out
fcom
cld
fstp
daa
aaa
les
addr16
xchg
push
jl
fcmovnbe
(bad)
fdiv
sbb
fldcw
jl
dec
push
mov
enter
or
clc
retf
sub
pop
cmp
dec
repz
out
dec
mov
(bad)
in
movs
imul
xchg
je
jbe
jns
call
cmp
push
push
fild
xchg
jns
push
aad
adc
mov
pop
xchg
lods
jecxz
ds
jne
ficom
inc
dec
ret
adc
fsub
aam
les
xchg
pushf
test
outs
pop
push
fild
jle
and
adc
add
jns
fsub
ret
inc
mov
mov
je
xchg
sahf
inc
add
sbb
and
push
scas
pop
xor
adc
repnz
in
ret
into
cmp
jb
sub
push
sbb
ficomp
pop
clc
icebp
dec
loope
rcr
mov
bound
jne
movs
xor
cld
mov
xchg
dec
sbb
sar
lods
(bad)
jne
shl
push
pop
and
lods
dec
add
cmp
lods
iret
sbb
les
jle
les
jl
inc
lea
loopne
xchg
loopne
loopne
jge
lods
in
pop
scas
in
sub
lods
mov
or
lods
fild
jmp
rcl
xor
or
add
jmp
adc
and
shl
out
aam
inc
les
adc
xor
iret
jno
mov
xchg
shr
shr
loopne
shl
add
xor
and
jno
xor
mov
ror
sbb
mov
fidiv
push
add
jb
das
in
mov
pop
ret
rol
xlat
dec
repnz
and
xor
pop
jae
xchg
sbb
xchg
mov
mov
xor
fst
push
mov
or
ins
mov
mov
push
stos
add
xchg
or
je
jb
fdiv
shl
push
bound
sbb
dec
pop
and
inc
xor
xor
push
into
adc
dec
add
in
ins
shl
aam
xchg
in
add
adc
push
dec
xor
fcom
add
jmp
jne
mov
cmp
sbb
in
jle
pop
pusha
push
pop
push
sbb
inc
(bad)
jmp
sub
out
call
iret
sbb
loop
lahf
(bad)
fcmovnu
jg
outs
mov
aas
cmp
mov
aad
test
ins
into
cmp
mov
sbb
dec
or
ret
stos
out
jbe
jns
mov
mov
jmp
dec
cmp
mov
cdq
mov
adc
scas
outs
mov
dec
enter
loop
jle
stc
outs
std
jmp
mov
push
sbb
sahf
or
dec
scas
mov
pop
les
call
in
jbe
in
jle
dec
dec
xchg
pop
xchg
cli
mov
pop
out
mov
push
sahf
sbb
push
jl
scas
imul
ins
and
je
jl
pop
mov
and
mov
jl
push
in
(bad)
pop
jl
stos
cmps
addr16
mov
sbb
jge
sbb
sbb
ins
mov
xchg
push
push
sahf
xlat
sbb
or
mov
lods
sbb
inc
into
inc
jmp
(bad)
cli
jmp
sbb
or
dec
cmp
sub
xchg
lods
retf
or
(bad)
sub
in
pushf
inc
jl
cmp
sbb
cmova
or
out
cli
dec
pop
pop
mov
shr
jl
leave
jne
jl
call
mov
jl
jl
sbb
mov
js
jo
sbb
fwait
lods
pop
js
sbb
jl
out
xor
jmp
and
adc
xlat
retf
jl
adc
jl
jl
lea
(bad)
sbb
dec
jl
cmps
jg
outs
enter
jmp
jecxz
or
cwde
pop
xlat
scas
lods
sbb
mov
jp
jne
jl
js
push
pop
jmp
jns
cdq
jl
lods
fdivr
mov
(bad)
mov
jge
ins
push
mov
jge
or
jl
fwait
popf
dec
mov
sub
sbb
out
ins
not
xlat
jnp
(bad)
out
cmps
mov
xchg
mov
pop
imul
mov
cmp
cmps
dec
pop
xchg
pop
jbe
sub
es
add
mov
clc
lds
movs
cld
shl
rcl
lods
push
aam
cli
movs
shl
aam
mov
out
sbb
dec
jl
cmp
adc
stc
adc
mov
movs
and
ins
push
mov
cld
mov
sbb
jl
out
stc
loope
or
cwde
xor
adc
ins
push
retf
call
cli
call
mov
fmulp
enter
mov
in
sbb
sub
retf
mov
loop
sub
ins
pop
sbb
mov
sahf
pop
pop
dec
sar
ins
cmp
push
and
loope
and
ss
and
out
out
in
in
jmp
push
in
push
ficomp
cmps
retf
shr
cs
sbb
fisub
sbb
push
fs
cmp
jle
jl
push
inc
scas
cdq
xor
mov
pop
sub
sahf
add
xlat
aaa
lods
jg
daa
repz
inc
jmp
sbb
pusha
mov
mov
not
jl
loopne
hlt
out
jmp
pop
ffreep
(bad)
jb
pop
sbb
dec
ins
ror
loop
sub
add
fiadd
push
jae
cmp
xrelease
sub
dec
dec
ins
popf
movs
cmp
lods
rol
push
aam
hlt
adc
jl
lods
jbe
rol
cdq
jbe
dec
mov
inc
aam
mov
sub
mov
mov
je
inc
call
retf
dec
dec
movs
sub
cmp
dec
daa
call
dec
mov
sbb
call
jmp
lea
pop
lods
pop
bound
or
mov
mov
lods
mov
les
sub
mov
sub
lods
xlat
retf
loop
out
out
pop
test
test
or
adc
dec
leave
sbb
mov
dec
adc
pushf
in
aam
pop
les
movs
pop
xchg
jmp
call
fidiv
mov
mov
mov
cwde
push
jl
mov
sbb
pop
add
repnz
inc
ret
in
int3
test
sar
jb
adc
jne
cld
and
adc
xchg
add
ror
sbb
jl
sar
ja
mov
jno
popa
ret
mov
mov
lods
and
sbb
push
rol
fadd
mov
push
clc
nop
inc
dec
add
and
pusha
repnz
loop
mov
xor
adc
imul
add
iret
mov
xchg
sti
scas
sbb
xchg
(bad)
ins
jg
mov
sub
inc
(bad)
ror
lods
cmp
int3
(bad)
mov
out
jnp
data16
fidivr
mov
inc
sbb
and
into
in
ins
ds
push
cs
push
jl
and
mov
nop
sub
in
popf
dec
cmp
bound
sbb
movs
out
inc
push
cmp
dec
outs
or
xor
inc
inc
ins
xlat
sbb
mov
xchg
push
jl
dec
cmps
dec
dec
mov
icebp
loop
push
adc
sub
jle
(bad)
ins
push
pop
mov
cld
mov
ficomp
call
jl
pushf
and
inc
jmp
jecxz
ja
ret
addr16
pop
rcr
jecxz
add
adc
shl
inc
push
in
fsub
xchg
daa
cld
mov
retf
or
push
in
add
push
pop
fild
div
in
push
pop
push
jl
out
inc
push
sbb
(bad)
xchg
pop
(bad)
(bad)
jl
out
fstp
hlt
les
mov
inc
(bad)
ja
xchg
cmps
mov
out
or
sbb
shr
fdivr
pop
les
mov
cwde
mov
enter
call
sbb
les
ficomp
imul
mov
jl
loop
std
dec
rcl
adc
lods
mov
fiadd
ss
push
in
ret
loop
push
fcomi
sub
in
lds
movs
inc
cs
jne
gs
and
fadd
aam
les
or
push
mov
sub
xchg
add
rep
jecxz
popf
rcr
mov
sahf
mov
test
xor
adc
mov
dec
jbe
jl
mov
mov
xor
(bad)
stc
cmc
faddp
call
out
mov
cs
dec
in
test
jl
cmp
cdq
popa
pop
jecxz
inc
sub
fsubr
rol
fld
push
mov
dec
push
mov
inc
or
dec
cmp
ins
jmp
push
sub
out
retf
ins
fistp
lods
xlat
mov
fild
(bad)
retf
out
pop
lahf
or
fist
mov
div
mov
jl
pushf
push
scas
stos
sbb
nop
fsub
rcl
loopne
rcr
fistp
jl
out
push
xlat
and
cli
inc
adc
lods
jno
rol
cmp
ins
sub
sar
add
dec
adc
sbb
inc
call
ficom
fadd
in
jle
(bad)
ror
add
and
mov
mov
jl
scas
ret
lock
adc
lods
add
pop
adc
and
dec
ins
push
mov
mov
xchg
jl
push
(bad)
cmp
sbb
ret
int
pop
mov
push
xchg
jl
add
cld
pushf
sub
mov
stos
ret
cmp
sbb
adc
fdiv
jmp
dec
shr
jle
cld
shl
clc
mov
dec
mov
inc
and
popa
loop
out
push
hlt
xor
adc
add
push
mov
ror
sbb
outs
sahf
adc
pusha
int3
push
mov
inc
aad
cmp
xor
pop
and
(bad)
fimul
mov
mov
aaa
sbb
lods
mov
dec
in
aas
fld
repz
inc
sbb
push
call
stos
test
in
pop
retf
imul
dec
enter
call
jge
jl
retf
cmp
sub
ins
mov
ins
cdq
lods
test
mov
stos
mov
fldcw
pop
sub
ret
mov
rcr
es
out
popa
pop
jns
pop
in
xchg
mov
inc
cld
(bad)
cld
jbe
jl
mov
jl
jl
mov
pop
cmp
and
dec
cmp
push
mov
adc
pop
cld
scas
outs
cmps
jl
outs
arpl
pop
sbb
mov
addr16
ins
ja
xchg
jo
xchg
sbb
jl
mov
jo
cli
sbb
retf
movs
imul
lods
clc
mov
mov
jmp
mov
dec
sbb
sbb
sub
sbb
dec
lods
in
out
cmp
out
and
cli
pop
loopne
std
sbb
dec
imul
cmp
cld
fwait
outs
jle
pop
stos
repz
pop
out
paddusw
out
stos
(bad)
fisttp
outs
and
mov
jno
out
sbb
jge
cwde
pop
mov
lods
pop
adc
fwait
movs
enter
jnp
pop
rcr
mov
push
mov
inc
mov
imul
mov
dec
xor
inc
jmp
mov
loop
sahf
in
push
dec
lods
cmp
aaa
test
lods
xchg
sbb
sti
sbb
jns
fist
or
loopne
in
mov
lods
cmp
sbb
js
jl
push
cwde
lods
push
mov
mov
or
pop
xor
out
lods
jmp
pop
out
cmps
sbb
fld
rol
adc
cld
sti
shl
(bad)
cmp
or
push
xchg
inc
and
jo
xor
sub
push
fist
mov
push
mov
jmp
push
push
ins
fcmovb
mov
lahf
fs
mov
ins
pop
fs
(bad)
cmp
movs
sub
adc
push
stc
ins
push
je
inc
test
sbb
aad
out
ins
lods
or
and
adc
mov
test
in
jne
xor
(bad)
sub
fimul
call
cmp
pop
sbb
or
mov
pop
mov
fmul
pop
ins
cmp
or
stc
sar
leave
test
mov
pop
fstp
xchg
cwde
sub
clc
call
fidivr
movs
push
mov
fucom
movs
sbb
cmp
adc
(bad)
ins
pop
fnstcw
cmp
aaa
daa
les
sahf
sub
(bad)
imul
cmps
cld
or
xchg
xchg
jbe
dec
mul
push
inc
sbb
es
push
cmc
(bad)
in
aad
out
lods
mov
xlat
movs
sbb
cld
(bad)
push
gs
push
les
mov
je
adc
cmps
in
fcmovbe
lods
xchg
fadd
mov
movs
mov
movs
test
je
pop
fs
ja
push
push
mov
int3
dec
push
and
jle
adc
add
inc
add
out
jne
fcomp
das
les
push
mov
iret
ins
call
popf
add
pusha
pop
pop
jo
mov
rcr
lock
inc
in
fsub
in
fadd
loope
(bad)
jecxz
cmp
jmp
in
push
jl
pushf
jb
mov
mov
ret
loop
dec
inc
mov
xor
mov
mov
xor
lods
fdiv
add
and
inc
pushf
push
pop
fild
rol
sbb
fidivr
add
movs
rcl
cmp
push
les
or
imul
lods
push
sbb
repz
push
fisub
stos
ins
and
push
cmp
jl
fadd
xchg
(bad)
test
push
mov
(bad)
mov
cmp
jns
ins
cld
outs
lea
sbb
pop
adc
push
sbb
sbb
aad
jl
daa
aaa
je
inc
arpl
push
or
xchg
adc
mov
ins
lods
xchg
inc
jge
mov
and
mov
movs
movs
fld
xchg
test
pushf
inc
mov
sbb
cmp
adc
sub
jle
push
xchg
sbb
dec
test
cmp
sahf
repz
mov
pop
lods
(bad)
in
ins
pop
inc
shl
cld
cwde
mov
lods
rcl
bound
inc
pop
xor
and
push
jl
jmp
repz
mov
jecxz
mov
sbb
xchg
push
sbb
jl
mov
fst
mov
lock
rol
pop
mov
jo
push
inc
fidivr
sub
cli
inc
repnz
rcl
add
call
out
jne
movs
fbld
iret
shr
pop
jg
push
pushf
outs
inc
sub
fcom
sbb
or
aas
das
jne
fcomp
(bad)
in
inc
out
das
cmp
mov
scas
mov
mov
sbb
movs
inc
nop
xchg
outs
lods
pop
les
ds
push
mov
retf
std
dec
cld
dec
nop
sbb
adc
mov
sar
les
mov
push
jl
cmps
inc
idiv
jno
sub
out
movs
jmp
adc
and
in
fadd
in
inc
bound
lods
mov
cmp
loop
popf
repnz
adc
addr16
adc
sbb
call
jl
dec
jmp
push
adc
and
inc
daa
cld
push
aam
pop
cld
je
xchg
idiv
mov
pop
jne
movs
ficomp
xchg
add
out
inc
sbb
push
jne
jl
jmp
(bad)
pop
mov
(bad)
fdiv
push
les
mov
jbe
in
xchg
xor
pop
lods
shl
retf
inc
ficom
ja
xchg
pop
cmps
(bad)
cli
out
fdiv
or
sub
(bad)
fnstsw
mov
pop
test
sbb
jbe
enter
jl
pop
clc
fisttp
fisubr
push
sbb
sbb
dec
push
les
jl
or
cdq
retf
test
xchg
std
mov
or
mov
mov
es
push
push
nop
push
pop
cmc
(bad)
in
aad
or
mov
movs
ins
xchg
mov
test
gs
ins
dec
retf
and
jmp
sahf
leave
in
les
popf
mov
movs
fist
in
fcom
test
adc
mov
repz
(bad)
dec
shl
sub
sbb
ins
int
cmps
dec
rol
ret
mov
sub
jb
push
and
and
sbb
enter
jle
out
repz
(bad)
dec
cwde
ins
push
sbb
mov
sub
sbb
pop
fcomip
(bad)
inc
rcr
dec
rcr
mov
aas
inc
adc
jo
pusha
loop
fild
push
pop
mov
inc
dec
lds
sbb
clc
cwde
jg
mov
leave
or
(bad)
das
fisubr
nop
lahf
dec
mov
imul
shr
mov
and
out
lods
rcl
inc
xchg
popa
dec
jno
xlat
in
movs
(bad)
xchg
fild
call
add
and
loop
push
sbb
pusha
jl
cld
icebp
in
movs
dec
add
mov
lock
mov
les
inc
stos
jno
push
sub
lods
icebp
cmp
xchg
out
pop
mov
jb
cmp
enter
in
pop
rcl
fsub
repnz
mov
adc
and
xlat
pop
arpl
test
fstp
or
push
mov
mov
inc
call
shr
shl
bound
push
ins
cli
enter
or
shr
add
or
add
icebp
adc
loope
xor
inc
pop
shr
fs
mov
je
mov
sbb
popa
les
push
aam
inc
in
and
inc
and
and
dec
jl
cmp
aaa
dec
push
ins
and
fisubr
ins
mov
pusha
cld
push
or
pop
sbb
inc
dec
push
xor
cwde
and
pop
shr
out
loop
jmp
iret
imul
call
and
jl
dec
clc
aas
or
or
loop
in
sub
pop
imul
sbb
pop
pop
fidivr
cwde
scas
aad
sahf
jle
xchg
in
das
mov
cmp
ins
dec
push
jmp
or
cld
lods
test
jle
adc
mov
push
call
dec
push
add
jecxz
or
push
mov
jl
stc
mov
jle
popa
cdq
sbb
sbb
bnd
xchg
lods
in
movs
fwait
sbb
cmp
test
dec
pop
jl
pop
pop
mov
lods
daa
pop
scas
retf
ret
jp
fadd
pop
mov
mov
mov
dec
xchg
mov
cmps
cmps
stos
sub
(bad)
mov
mov
jl
mov
idiv
or
mov
je
fidivr
or
cwde
scas
cwde
sbb
call
and
sbb
ret
retf
sub
dec
mov
jmp
imul
mov
fisubr
mov
loope
jmp
call
sbb
xchg
mov
pop
js
cwde
cwde
mov
add
test
or
cwde
dec
call
out
retf
cmp
xchg
or
stos
xlat
mov
pop
in
retf
or
mov
aas
adc
enter
add
sbb
jg
fmul
fimul
sub
das
mov
lods
add
call
call
dec
sub
dec
imul
jae
sahf
jle
mov
jl
nop
mov
call
mov
adc
inc
out
xlat
sub
xchg
jl
sti
ja
inc
add
jl
daa
pop
sbb
adc
outs
and
(bad)
sub
jbe
inc
or
ss
es
mov
adc
(bad)
in
adc
ficom
mov
call
mov
adc
add
lock
sbb
cmps
mov
outs
ins
data16
jl
xchg
fdiv
test
inc
je
push
fs
cmp
mov
mov
sar
xchg
mov
sbb
movs
retf
loop
push
call
sub
sbb
xchg
fcmovu
jmp
stos
ins
call
fsubr
les
jl
je
or
stc
jmp
leave
call
mov
imul
sbb
mov
mov
pushf
mov
add
pop
ins
dec
in
pop
cmp
sub
or
fdiv
out
xlat
mov
xchg
jmp
lods
push
sub
daa
ins
pop
mov
pop
dec
(bad)
sbb
(bad)
mov
push
jl
inc
fidiv
test
(bad)
fsub
aad
out
lds
call
gs
xchg
(bad)
ficom
cmps
hlt
fst
aam
mov
cwde
xchg
les
stos
push
scas
addr16
and
push
and
inc
and
pop
adc
push
cs
add
inc
(bad)
dec
sub
fimul
fisub
cld
out
les
int3
das
pop
or
(bad)
ins
mov
out
jmp
neg
(bad)
nop
retf
shl
retf
xor
popa
(bad)
push
sbb
(bad)
test
cmp
push
je
mov
add
int3
mov
pop
sar
retf
frstor
ins
xchg
mov
add
pushf
xor
push
(bad)
shl
hlt
sbb
adc
dec
push
jl
and
pop
test
movs
mov
aad
in
in
dec
add
retf
cdq
data16
mov
fldenv
lods
push
lds
jecxz
pop
push
fist
push
repz
(bad)
jbe
sbb
jl
push
cmp
mov
in
xchg
in
je
mov
adc
sbb
loop
iretw
addr16
push
fild
ja
pop
es
push
sbb
(bad)
adc
cmps
jne
jle
mov
(bad)
mov
sbb
push
jnp
cmp
adc
xor
jl
jmp
outs
cmp
lods
dec
in
pop
call
pop
movs
mov
push
adc
pusha
xor
mov
sbb
and
push
sahf
xchg
lds
dec
xor
test
jae
sbb
(bad)
(bad)
cld
push
dec
sar
call
icebp
add
rcr
sar
jmp
fadd
in
fsub
adc
cwde
call
sbb
mov
shr
shl
nop
adc
jo
js
arpl
out
xor
out
inc
sbb
mov
xor
ins
shl
(bad)
(bad)
inc
cld
mov
dec
lahf
icebp
sub
mov
xchg
fdiv
pop
popa
jle
pop
push
sbb
xor
adc
test
idiv
shr
adc
sbb
nop
fisttp
outs
jp
cld
pop
xlat
sub
sbb
sbb
ret
lods
pusha
or
std
push
mov
mov
xchg
mov
mov
not
adc
and
je
dec
sbb
ins
out
and
mov
rol
rcr
loope
add
add
and
(bad)
adc
mov
mov
adc
add
ja
sbb
xchg
inc
shr
jecxz
repz
or
xor
add
test
xchg
jl
idiv
(bad)
(bad)
in
hlt
out
adc
ins
inc
(bad)
popf
push
ins
test
popf
xchg
ins
movs
mov
lds
aad
cmc
mov
pop
fist
jbe
push
cmps
call
(bad)
mov
daa
(bad)
fiadd
ja
les
pop
out
mul
mov
or
push
fisubr
call
sbb
je
dec
ficomp
imul
cwde
test
leave
jbe
pop
data16
jns
sub
push
sti
xchg
cmc
pop
lods
in
aad
lds
lds
lods
push
mov
jmp
inc
retf
and
enter
dec
aam
pop
mov
ins
mov
stos
je
outs
mov
xor
sbb
push
dec
push
in
mov
ja
jo
ins
add
add
in
idiv
or
push
xor
ins
outs
xchg
jecxz
fadd
add
test
sub
push
cwde
mov
jle
jle
jne
pop
js
lods
fisubr
fcom
fisttp
pop
and
adc
dec
add
cmp
(bad)
loopne
sub
das
push
mov
aas
nop
mov
out
out
dec
sub
adc
into
pop
sbb
neg
outs
sbb
sbb
jl
or
lods
loopne
jg
rcl
loopne
lock
pop
add
and
mov
out
ins
scas
pop
popa
or
out
sbb
push
arpl
shl
ins
(bad)
push
xchg
iret
mov
lods
rcr
cmps
loop
in
or
cld
out
sbb
add
xchg
adc
xor
mov
jo
nop
or
mov
xor
add
and
inc
mov
bound
dec
sbb
loop
xchg
push
jb
jmp
push
xchg
add
adc
and
xor
mov
ret
lods
pop
aam
dec
popa
mov
push
cmp
pop
xor
mov
js
push
add
dec
hlt
mov
mov
in
ret
gs
adc
pop
xchg
out
ins
int
test
retf
sub
cld
or
sbb
push
sbb
xor
cld
ja
fist
cli
add
(bad)
cld
icebp
adc
shl
or
sbb
add
lods
pop
popa
mov
aam
push
in
inc
add
in
and
adc
(bad)
mov
mov
inc
rol
loopne
add
xchg
jecxz
movs
sbb
mov
cwde
jo
test
xchg
call
xor
and
enter
adc
or
sbb
iret
push
cmp
les
pop
jl
lahf
ins
(bad)
mov
pop
jl
cmp
pop
lods
inc
dec
pop
aas
loop
das
iret
mov
pop
cmps
cvtdq2ps
aad
out
pushf
fimul
shr
sbb
into
mov
jns
sahf
cmp
outs
ins
mov
cmp
jns
pop
jl
cwde
call
cmp
ins
sub
adc
mov
clc
inc
mov
les
dec
push
lods
sahf
stc
retf
jl
pop
or
pop
mov
push
call
xchg
iret
mov
sbb
sbb
pop
fcmovnb
sub
xlat
lods
imul
pop
dec
aas
call
sbb
daa
outs
imul
inc
push
mov
ja
push
ins
mov
sbb
jl
xchg
mov
movs
mov
mov
sbb
jns
jns
cmp
retf
lods
or
cmp
mov
in
pop
sbb
stos
inc
pop
imul
ficom
js
ins
adc
jmp
cmp
dec
mov
cwde
into
pop
cmc
sub
cmps
sub
cmps
lods
call
sub
lods
into
sub
lods
push
pusha
fwait
pop
repnz
pextrw
stos
or
mov
push
mov
test
mov
jl
cwde
mov
cld
stos
push
jl
lods
lock
mov
pop
cmp
push
imul
cdq
lods
cmp
sbb
lods
popa
out
push
enter
dec
jle
xlat
pop
lods
or
jg
xchg
jl
data16
ins
enter
mov
call
pop
jmp
xor
xchg
mov
or
mov
jl
pop
dec
jmp
mov
lods
mov
idiv
(bad)
jecxz
cmps
pop
stc
xchg
cmc
fcomip
dec
gs
xchg
cmp
mov
(bad)
imul
(bad)
fs
sub
(bad)
call
jbe
cld
mov
push
mov
(bad)
ins
push
fidiv
movs
jmp
xor
outs
jl
enter
mov
fstp
movs
inc
hlt
jl
mov
shr
add
dec
in
fs
mov
popa
fs
outs
mov
sbb
jl
mov
mov
jns
jl
adc
cmp
mov
outs
sub
cld
dec
rcl
imul
loop
push
call
or
fcmovnu
test
jl
jbe
pop
mov
push
pop
sbb
sub
(bad)
stc
mov
leave
jmp
call
ficomp
dec
sub
sbb
fsubr
mov
sbb
or
mov
sbb
ins
or
xlat
movs
mov
pop
cmps
in
cdq
xchg
pop
xchg
ja
mov
sbb
jl
fisub
jmp
sub
out
sbb
mov
cmps
out
jl
xchg
or
pop
inc
(bad)
mov
sbb
mov
cmps
ret
test
mov
and
sbb
cld
cmps
jne
ret
int
add
(bad)
int3
mov
mov
xchg
je
ja
fs
inc
lods
mov
xor
lods
mov
adc
fist
in
pusha
std
inc
xchg
push
sti
ds
repz
cdq
inc
mov
daa
pop
into
(bad)
fistp
pop
push
pop
fstp
lahf
pop
jecxz
jl
pop
push
add
adc
sbb
dec
adc
dec
push
jl
fadd
mov
sbb
mov
jmp
(bad)
pop
(bad)
(bad)
xor
sar
add
aam
xchg
cld
xor
inc
mov
xchg
pushf
mov
outs
in
push
cdq
push
call
shl
inc
call
add
hlt
fcom
push
jl
fist
aad
cmc
int3
push
jbe
push
les
mov
push
pushf
cmp
push
sub
call
xchg
dec
sub
lods
cld
mov
leave
cmps
jecxz
out
jno
test
push
adc
sub
or
xchg
loop
mov
fcmovnb
fcmovbe
test
mov
sbb
or
in
call
mov
xchg
mov
es
cld
ja
fadd
cmc
cld
xchg
xchg
aad
lds
cmps
mov
call
in
out
lods
retf
or
xor
and
retf
mov
jl
ins
mov
pop
add
data16
mov
pop
push
inc
popf
xchg
call
mov
fdiv
jecxz
sar
fist
dec
lods
and
adc
cld
jmp
mov
mov
les
inc
sbb
push
jl
data16
mov
loope
shr
xchg
mov
mov
sbb
jl
ins
inc
jecxz
xor
adc
add
mov
xchg
shr
mov
push
jo
fs
sbb
and
adc
add
push
and
adc
ret
scas
bound
sbb
pop
outs
loope
shr
xchg
std
dec
mov
aas
sbb
pop
push
sub
and
lock
out
loopne
rcr
faddp
adc
fwait
sahf
nop
lods
fstp
xchg
outs
jo
sbb
pushf
mov
mov
push
imul
rol
pusha
push
push
xchg
std
pop
in
and
ins
mov
pop
mov
popa
call
add
sub
dec
out
mov
movs
adc
jmp
(bad)
mov
hlt
or
adc
push
lods
mov
lods
jmp
push
(bad)
mov
or
or
or
inc
ins
neg
xchg
(bad)
(bad)
std
add
xor
mov
sbb
pop
in
push
cmps
xchg
xchg
cli
hlt
sub
int
jl
mov
(bad)
mov
pop
(bad)
fiadd
push
ja
xchg
mov
xlat
fcomi
fimul
test
cmp
cmp
js
ins
in
fsubr
clc
enter
sub
pop
pop
xchg
imul
pop
ror
inc
lods
fldcw
jbe
std
fsub
je
inc
retf
es
push
fild
fcomi
push
xchg
sbb
jl
push
ins
retf
call
xchg
call
test
cmp
pop
lods
and
add
(bad)
fcom
(bad)
aam
pop
cld
movs
mov
inc
lods
je
fs
in
and
sub
jecxz
cdq
shr
or
jns
movs
clc
ins
xor
dec
dec
cmp
aaa
dec
push
shl
or
jb
cs
ins
jne
fcmovu
xor
enter
dec
adc
ffreep
mov
mov
in
ficomp
movs
xor
pop
cmp
jl
dec
sub
lock
sbb
loopne
aas
sub
pop
lods
pop
sahf
add
test
sub
jl
push
jg
fadd
in
fsub
les
xchg
jbe
ins
js
fisubr
push
out
pop
xlat
outs
mov
icebp
fcmovne
cmps
add
mov
int
imul
and
dec
and
aas
jmp
jmp
in
pusha
mov
pushf
mov
shl
xor
fild
xchg
ficom
fadd
cld
(bad)
fsub
je
xchg
fidiv
in
fiadd
xchg
add
adc
mov
sbb
xor
push
pop
cmps
outs
dec
mov
out
(bad)
cmc
xor
mov
repnz
sub
or
ret
pop
push
mov
mov
arpl
in
arpl
jnp
enter
sbb
sub
pop
imul
call
data16
sbb
pop
adc
push
jl
jmp
je
mov
test
jl
lods
in
sub
arpl
jge
mov
jle
push
ins
fld
sub
add
js
mov
mov
pushf
lds
mov
enter
jmp
in
lods
aam
and
jl
ins
sub
and
pusha
imul
push
ins
scas
pop
mov
movs
imul
jns
pop
ins
pop
sbb
aas
in
loopne
sahf
or
pop
pop
ins
(bad)
sbb
into
inc
jl
daa
mov
pop
cdq
sbb
ja
xchg
jle
ret
lods
retf
jns
out
mov
call
mov
out
inc
xchg
cmp
call
lods
push
push
retf
push
fwait
jmp
call
lods
enter
jl
cmp
mov
or
(bad)
call
(bad)
sbb
(bad)
pop
jl
sub
pop
(bad)
jl
pusha
outs
daa
arpl
in
loop
aaa
dec
(bad)
mov
ret
addr16
jp
xchg
push
mov
inc
dec
and
or
cli
ret
lods
test
data16
call
or
loop
stos
das
sub
mov
sub
out
in
(bad)
cmp
dec
retf
jns
stos
imul
(bad)
stos
mov
jmp
test
sub
or
and
sub
adc
leave
out
inc
cmp
lea
jl
out
dec
adc
push
jl
repz
cmovg
retf
out
mov
jnp
test
sub
(bad)
jl
in
pop
dec
cwde
aas
ins
sar
mov
xchg
in
sbb
mov
lods
retf
neg
mov
mov
dec
outs
mov
pop
mov
fsub
jl
scas
(bad)
movs
sbb
lods
clc
setle
fsub
jmp
mov
sbb
xchg
loop
cdq
jl
jl
jl
and
pop
les
ret
js
sbb
or
jne
mov
imul
sbb
sub
cmps
dec
adc
xchg
fist
out
ins
data16
mov
daa
pushf
pop
adc
adc
or
cmps
(bad)
daa
xchg
sbb
cli
sub
jmp
pusha
push
int3
cmc
retf
mov
xor
xchg
jmp
gs
xor
and
loopne
add
ins
(bad)
in
add
inc
cmp
pop
mov
adc
sbb
test
jno
xchg
or
mov
rol
lds
call
sbb
or
xchg
cli
(bad)
pop
dec
adc
sub
xchg
jmp
mov
push
movs
sub
lods
fmul
stc
mov
sbb
lods
ins
nop
dec
push
mov
shr
imul
sbb
cmp
loopne
loop
not
out
(bad)
retf
pop
xchg
fild
inc
cld
dec
fdiv
pop
xchg
fidivr
pop
fdiv
out
sub
or
sub
xchg
jl
jne
ss
retf
test
pop
aad
(bad)
sub
movs
fadd
gs
call
adc
cmps
in
sbb
(bad)
enter
cmp
fisttp
test
fs
push
push
pop
inc
jge
addr16
and
call
add
inc
repz
fcmovu
fdivr
push
cld
jecxz
mov
ds
retf
jle
mov
ins
pop
push
pop
add
sar
(bad)
ror
fsubr
adc
neg
xor
nop
mov
shl
loopne
fs
mov
cmp
mov
mov
int
sbb
(bad)
repnz
inc
mov
popa
call
jecxz
repz
adc
xor
les
pushf
test
dec
(bad)
out
mov
les
mov
movs
xchg
lods
lds
call
fadd
les
xchg
je
cmps
mov
(bad)
mov
jbe
out
jl
push
mov
cmps
or
dec
push
or
cmps
add
shr
jecxz
xchg
jl
mov
(bad)
adc
cmp
lods
imul
pop
sbb
jbe
jl
call
stos
dec
push
inc
ins
xchg
stos
addr16
sub
ja
and
rcr
push
sub
cli
jns
in
jl
xchg
test
call
retf
test
mov
gs
push
jle
sbb
inc
jl
dec
out
and
add
in
sub
sbb
xor
call
sbb
push
dec
push
xchg
sbb
jl
les
jae
cwde
lods
push
mov
jnp
in
sub
pop
nop
ret
push
xchg
(bad)
push
pop
cwde
out
jl
xor
lock
inc
loope
(bad)
call
mov
mov
inc
repz
pushf
adc
sbb
loopne
mov
js
pusha
jl
ret
xchg
sub
push
out
outs
inc
xchg
fnsave
sub
adc
add
out
push
pop
fistp
jle
or
and
mov
cmp
pop
jg
fld
outs
push
sub
fisttp
clc
shr
sbb
leave
or
jno
sqrtps
(bad)
fadd
pop
out
jle
call
shl
mov
scas
mov
mov
sbb
jl
pop
pusha
in
sub
dec
push
lods
test
push
push
enter
pop
in
xchg
jl
call
cli
ins
loopne
push
ins
xor
shr
shr
pop
test
jl
add
adc
and
inc
sbb
sub
shr
cmp
dec
shl
lods
or
add
adc
out
fisubr
add
jl
or
inc
mov
xchg
lods
mov
ret
loope
and
pop
dec
inc
jl
sub
jl
in
and
in
hlt
sbb
in
and
call
in
aad
push
in
cmc
les
push
jl
xchg
cwde
push
pop
mov
mov
xchg
rcl
neg
pop
fsub
inc
les
ja
xchg
(bad)
fcmovbe
fdiv
sbb
sub
pushf
js
cwde
jbe
test
enter
ret
or
dec
cmp
dec
mov
imul
sbb
xor
retf
lods
leave
sbb
inc
data16
xor
dec
mov
jns
push
(bad)
inc
dec
cld
pushf
push
imul
mov
dec
xchg
push
lods
jecxz
dec
inc
inc
dec
out
inc
ins
in
aam
les
mov
movs
sar
je
jno
ins
mov
inc
jl
jle
sbb
adc
leave
add
mov
ret
mov
test
sahf
cdq
jae
mov
inc
jns
dec
xlat
sbb
imul
in
pop
ja
add
push
in
fsub
sbb
loope
add
mov
push
setbe
push
(bad)
pop
cmp
cwde
inc
das
inc
sbb
stos
adc
cmc
dec
sbb
shr
jno
jl
outs
xor
mov
jg
mov
(bad)
xchg
jne
leave
not
sbb
lahf
dec
icebp
xchg
lods
jmp
scas
repz
adc
xlat
and
mov
outs
in
loop
or
cmps
int
loop
xchg
mov
fild
out
sbb
ja
call
add
and
ins
inc
addr16
call
push
test
ins
mov
cmp
test
rcr
lock
jmp
sahf
push
push
pop
popa
jmp
nop
jb
ja
push
sbb
sar
ficom
lahf
push
cmp
xor
mov
jne
dec
loop
or
sbb
xlat
mov
jecxz
xor
push
inc
fist
mov
jae
adc
and
push
cld
cld
test
jmp
sub
mov
mov
int
adc
jae
mov
xchg
sbb
out
pop
lods
inc
push
inc
sbb
or
out
and
sub
jl
mov
cmps
lods
add
sti
inc
add
je
pop
fcmovbe
test
cwde
shl
shl
xchg
add
js
and
inc
mov
mov
jne
adc
dec
add
loopne
test
lds
adc
(bad)
outs
mov
dec
push
test
xor
and
into
mov
sbb
(bad)
sbb
out
pop
cdq
fisttp
aad
mov
ins
lahf
dec
daa
call
sbb
aas
sbb
cmc
das
cli
aad
pop
sbb
pushf
setp
out
hlt
ret
ins
into
push
push
or
and
sbb
push
stos
sbb
imul
jns
call
sub
lods
push
sbb
test
or
push
fcmovnu
arpl
lods
call
cs
ss
fadd
les
dec
sbb
mov
jl
dec
cmp
mov
mov
(bad)
cli
jle
jle
outs
loopne
mov
jl
call
pop
cmp
push
inc
push
pop
out
ins
jmp
dec
push
inc
mov
push
pop
mov
pop
jle
push
xchg
je
xchg
mov
jmp
sub
outs
enter
dec
pop
rep
test
add
jns
lods
call
xlat
mov
enter
repnz
sahf
(bad)
test
inc
jbe
sbb
jl
sbb
cmp
lods
cli
scas
push
xchg
cmp
inc
(bad)
mul
sub
dec
xor
ret
dec
fisubr
jl
sbb
imul
jmp
cmp
in
enter
out
mov
out
push
mov
sbb
sbb
sbb
imul
in
cmp
lods
jnp
jmp
jns
mov
lods
jnp
xchg
jmp
lods
cmp
movs
enter
xor
pop
xchg
ins
aas
enter
xor
sar
mov
lods
(bad)
xchg
dec
rcr
mov
retf
mov
sbb
cwde
cld
outs
adc
or
enter
int
fisttp
test
call
pop
sbb
or
not
nop
mov
xchg
ja
inc
inc
addr16
jle
and
imul
idiv
(bad)
(bad)
jl
cli
adc
aam
jmp
in
movs
push
movs
(bad)
es
cmc
jo
mov
mov
lods
and
jne
mov
mov
sbb
sar
lock
enter
add
push
mov
pushf
xor
mov
xchg
adc
jl
out
mov
cmp
cmp
jl
shr
mov
mov
sbb
or
or
lods
call
int
cmps
sbb
test
xor
mov
sbb
or
outs
jl
push
cmp
retf
div
pop
test
dec
jl
addr16
push
rcr
and
sahf
jmp
dec
cmps
sar
xchg
sbb
sub
fdiv
es
neg
push
cmc
out
inc
push
sar
mov
out
mov
lods
or
inc
mov
adc
in
xor
jmp
loop
mov
sbb
jl
fistp
inc
retf
xor
dec
push
adc
inc
sbb
jl
popf
int
add
ja
xchg
int
jecxz
(bad)
aaa
(bad)
pop
dec
jg
jmp
mov
emms
call
lahf
pushf
mov
call
pusha
or
out
ror
lock
sbb
xor
mov
jl
ins
mov
add
les
enter
adc
cmps
arpl
push
arpl
sbb
outs
and
sbb
mov
movs
into
jmp
jno
mov
mov
call
ins
dec
inc
dec
(bad)
lods
(bad)
test
ficom
test
sub
dec
xor
jnp
les
lods
xor
dec
scas
or
lods
cmp
sbb
dec
lods
lods
jecxz
cdq
push
jae
dec
cmp
cmp
lods
aaa
pushf
inc
mov
data16
push
fs
repz
ss
mov
push
pop
cmc
cld
ja
xchg
call
lds
sbb
jmp
pop
mov
inc
call
lods
xlat
fcom
fsub
aam
les
mov
les
mov
inc
pop
jl
sbb
loope
mov
outs
scas
and
push
mov
dec
jae
cwde
arpl
push
fild
xor
and
les
mov
ror
fstp
jl
push
mov
fidivr
enter
jl
and
jl
mov
in
sbb
mov
inc
jo
mov
mov
ins
fadd
fcom
jne
movs
and
adc
inc
xchg
clc
inc
movs
iret
fmul
push
cmp
and
dec
jg
inc
outs
push
or
or
imul
add
fadd
xchg
cld
out
in
fcmovu
popa
in
retf
int3
scas
adc
sahf
loopne
outs
aad
in
jle
dec
clc
mov
push
ds
add
mov
ins
jle
std
mov
push
jo
sbb
mov
out
scas
dec
xchg
adc
sub
push
loope
and
lds
push
lods
or
icebp
mov
add
push
or
sbb
out
pop
inc
push
dec
mov
movs
and
call
sti
fist
inc
dec
test
out
hlt
movs
je
(bad)
out
in
pop
adc
and
jl
ins
sbb
cmc
sbb
dec
jecxz
push
inc
sbb
les
jl
cmps
in
or
inc
adc
shl
jmp
xchg
push
xlat
loope
mov
push
jl
fstp
fimul
pop
push
dec
test
fmul
sbb
je
cmp
imul
je
test
push
fld
ins
cld
fwait
test
mov
xchg
fldz
jl
push
mov
es
adc
in
mov
pop
into
or
shr
imul
cmp
test
sbb
and
ror
cdq
xchg
and
aas
dec
(bad)
sbb
push
sbb
cmp
outs
and
(bad)
and
bound
dec
(bad)
sbb
rol
jmp
shr
cmc
rcl
ins
mov
mov
out
call
movs
dec
sbb
jno
pop
das
sahf
dec
sbb
mov
lods
popa
fisubr
stos
xchg
dec
movs
ret
mov
adc
cwde
or
mov
js
loope
xlat
icebp
xchg
retf
idiv
pushf
adc
and
xor
aas
ja
imul
mov
cwde
and
xchg
out
jno
pop
fbstp
sbb
movs
into
adc
and
mov
nop
pushf
mov
inc
inc
dec
sar
dec
test
jno
pop
jb
jmp
sar
inc
xchg
jge
js
ins
loop
shl
and
ret
movs
jne
rcr
mov
inc
sbb
out
inc
jge
or
mov
test
push
mov
jl
inc
sahf
xchg
stos
mov
mov
lods
cwde
xchg
push
xor
mov
add
add
push
fisubr
push
xor
sahf
jge
ror
cmp
popa
jmp
dec
add
pop
mov
sbb
rcl
mov
in
hlt
mov
ja
adc
and
ins
enter
sbb
test
ins
mov
xchg
cwde
add
fsub
mov
(bad)
fprem
rcl
sti
mov
or
sub
cmp
push
push
jmp
ja
not
test
jbe
call
mov
lods
outs
aas
popf
leave
sbb
mov
lods
jae
sbb
or
pop
test
fiadd
pop
into
xor
mov
cdq
adc
(bad)
dec
lods
mov
loop
push
dec
in
inc
cmp
test
lods
jge
dec
test
cs
jl
mov
test
fs
cmp
data16
(bad)
sbb
pop
cmps
ins
adc
jl
(bad)
(bad)
sbb
cld
cs
neg
mov
mov
lods
adc
aaa
cmp
xor
xchg
mov
cld
xchg
test
push
stos
mov
lods
mov
data16
jo
mov
ret
jmp
outs
ins
jle
or
in
push
or
sub
cli
mov
mov
dec
in
jo
call
sbb
mov
push
cld
ja
retf
mov
in
pop
scas
test
or
int
mov
cli
fwait
test
mov
xchg
(bad)
xchg
lods
mov
sbb
xchg
(bad)
imul
fstp
lods
inc
and
sbb
mov
stos
lods
call
in
test
add
cmp
lods
pop
add
and
mov
je
pop
jl
fidivr
add
cmp
pop
push
frstpm(287
ins
mov
jbe
test
sbb
dec
cmp
lods
loop
mov
out
or
outs
push
lods
mov
retf
sub
pop
(bad)
fdiv
dec
lahf
adc
sbb
lods
rcl
sub
addr16
aaa
sbb
pop
or
out
fsqrt
call
fidivr
or
add
and
xor
mov
mov
out
and
or
call
nop
jne
jle
mov
mov
loopne
lock
pop
add
pop
mov
push
jl
fsub
popa
test
je
cmp
mov
lods
pushf
pop
sti
pop
aam
pop
test
mov
sub
movs
mov
lods
jnp
pop
inc
ins
int3
xchg
movs
cmps
mov
push
pusha
movs
sub
pop
dec
fs
dec
fiadd
aam
pop
mov
mov
pop
cmps
fucomip
ror
mov
xchg
cmp
push
and
(bad)
dec
dec
sbb
inc
imul
dec
pop
sbb
xchg
push
xchg
retf
mov
push
je
fimul
jnp
out
ret
jns
retf
sti
xchg
mov
push
mov
sub
fwait
sbb
inc
mov
mov
push
cdq
push
je
(bad)
dec
ret
mov
dec
push
xlat
cmp
leave
push
lahf
ret
test
ins
xchg
(bad)
retf
ror
push
mov
pop
lods
lods
cmp
sbb
add
call
int
ror
retf
pop
pushf
xchg
test
push
js
mov
retf
(bad)
xchg
mov
fwait
dec
sbb
aas
xor
dec
cs
fist
dec
das
mov
sar
stos
pop
int3
mov
in
lahf
xchg
xlat
push
mov
ins
jp
retf
push
not
dec
out
inc
xor
push
ins
ja
push
test
pushf
jmp
pop
pusha
sar
push
leave
adc
pop
fst
cmps
cmp
wrmsr
jnp
div
push
fld
sub
leave
sub
fldcw
mov
jno
fs
leave
sahf
xlat
jmp
jb
xlat
fsubp
test
in
fs
cmc
xchg
out
pop
mov
test
icebp
cmp
push
mov
push
into
cmp
lds
pop
mov
inc
push
jb
xchg
lods
(bad)
jp
mov
inc
cmc
inc
(bad)
dec
(bad)
ficom
mov
jl
xlat
push
sub
mov
pop
mov
sbb
in
jae
xchg
daa
stc
fcmovnbe
fwait
lods
and
or
aad
mov
or
jle
cdq
push
(bad)
rcl
xchg
inc
movs
test
retf
outs
retf
int3
inc
push
arpl
sti
cmp
pop
(bad)
pop
push
sar
dec
pop
fcomp
xlat
inc
cmps
call
cld
push
(bad)
lods
cmps
icebp
jmp
jb
or
jns
pop
jp
jmp
pop
aad
enter
dec
aad
imul
sub
in
test
push
int3
pop
lods
ins
loop
mov
mov
test
fcom
mov
sbb
cmp
mov
sbb
ins
mov
cli
test
outs
dec
mov
pop
fnstcw
mov
mov
mov
cmp
cmc
sub
out
push
imul
loope
out
mov
add
mov
fdivrp
mov
mov
(bad)
cmc
mov
jbe
push
cwde
push
cwde
sbb
mov
aam
ffree
pushf
jbe
movs
push
push
lahf
int3
imul
pop
fsubrp
push
push
outs
test
movs
retf
out
rcr
sbb
icebp
mov
sti
pop
stos
rcl
test
call
cmc
cmps
jae
push
or
mov
retf
aam
mov
fcomp
(bad)
mov
xlat
push
adc
dec
mov
(bad)
in
pop
loopne
clc
mov
jle
in
sbb
test
aam
cmp
jnp
sar
adc
dec
fst
ins
mov
enter
pop
mov
mov
mov
call
mov
mov
int3
fcom
mov
repz
lods
ins
pop
stos
xor
lods
fwait
pop
sub
fild
call
shl
repz
sbb
cmp
pop
sbb
lds
sti
mov
jle
das
xchg
push
push
inc
and
icebp
xchg
add
mov
cmps
or
retf
fistp
stos
pop
clc
pop
jnp
cmp
lods
dec
popa
dec
xchg
fwait
pop
mov
popf
retf
xchg
push
jb
or
retf
ins
pusha
out
cli
mov
sar
cmp
jmp
jb
das
xchg
fwait
shr
push
sub
sub
mov
or
stos
fwait
add
popa
lods
lock
pop
push
loope
jno
sub
jmp
xor
or
lods
lods
dec
loope
jmp
mov
pop
cmp
cmp
das
mov
imul
adc
dec
pop
jp
ins
add
cmp
in
fild
dec
mov
in
shr
pop
jmp
cmp
fldcw
cmp
sbb
mov
test
jmp
xchg
fist
and
xchg
xchg
mov
jnp
dec
js
mov
mov
in
ins
stos
and
cdq
inc
jbe
dec
addr16
jae
push
mov
add
retf
mov
sbb
out
fcom
mov
les
push
xchg
test
mov
push
sbb
call
fs
pop
daa
aaa
jnp
mov
sub
scas
mov
jne
mov
xlat
pushf
test
fidivr
sub
sub
fld
test
cmp
ja
mov
out
pusha
or
fidivr
xchg
xchg
scas
hlt
xchg
fimul
sub
jns
mov
scas
push
loope
leave
imul
mov
dec
push
sub
xor
dec
pop
rcr
sbb
stos
pop
(bad)
xchg
lahf
push
fld
popf
mov
xchg
iret
pop
shr
dec
imul
sub
adc
push
inc
push
push
push
push
pop
push
ror
shl
mov
mov
xchg
lds
(bad)
sti
pop
jnp
jmp
xchg
sar
jl
stos
mov
aas
test
or
or
mov
push
cwde
sub
cwde
and
cld
cmp
mov
pop
lods
popf
xor
sti
and
push
lods
pop
jl
popa
ins
icebp
xor
or
les
push
sbb
lods
jge
pop
in
dec
pop
aas
lods
fidiv
pop
test
loope
inc
addr16
adc
pushf
loop
sti
jb
xchg
jnp
dec
mov
xchg
mov
jge
(bad)
adc
dec
addr16
aaa
inc
dec
popf
bound
(bad)
dec
xchg
in
outs
cmp
je
lods
mov
int3
mov
dec
in
fimul
sub
movs
inc
cmps
or
vmovaps
cmc
or
adc
ja
jecxz
mov
mov
(bad)
mov
add
pop
jecxz
jmp
into
test
pop
mov
mov
stos
adc
xor
mov
push
xor
scas
mov
repnz
icebp
sbb
out
mov
dec
cmp
out
mov
in
push
inc
in
inc
sar
mov
and
push
adc
rcr
jo
mov
pusha
mov
jae
mov
mov
push
mov
jge
push
pop
in
mov
mov
dec
push
jb
push
cmp
dec
and
cmp
aas
cmp
retf
cwde
jle
mov
push
outs
lock
out
push
push
dec
lods
lds
test
jae
sub
in
imul
adc
lods
pop
jg
inc
cwde
add
sub
lods
sub
bound
test
xor
push
jl
lods
sar
push
mov
inc
test
dec
dec
(bad)
jb
mov
enter
lods
popa
dec
push
xchg
(bad)
shl
popa
and
xchg
(bad)
aas
cmp
ins
imul
rcl
mov
or
es
pop
aaa
xchg
or
aas
dec
mov
pop
xchg
aas
(bad)
icebp
ins
mov
cmp
mov
daa
xchg
jb
inc
mov
pop
ins
pop
xchg
cmps
or
push
in
iret
push
sub
push
xor
cli
fsubr
dec
push
push
outs
lods
jbe
push
ins
ret
mov
fs
inc
outs
outs
cmp
outs
cmp
sub
fist
imul
mov
outs
inc
pop
ins
cmp
xchg
xor
xchg
in
add
jnp
jo
outs
test
jnp
int
add
pop
es
mov
outs
jg
xchg
xor
xchg
nop
pushf
pop
jl
cmp
sbb
in
das
inc
jns
pop
ret
push
or
sahf
es
pop
xchg
mov
rcl
xchg
jb
xor
sub
pop
xchg
xchg
repnz
outs
xchg
inc
fisubr
sti
inc
shl
les
xchg
dec
sbb
pop
stos
nop
mov
xor
dec
test
xchg
lods
cs
(bad)
xor
inc
test
jae
ds
icebp
hlt
fld
xchg
pop
lods
sbb
mov
jno
ret
add
mov
mov
lods
lods
popf
inc
xchg
sti
inc
mov
imul
jge
movs
fld
push
push
mov
push
add
aaa
sbb
or
cmp
mov
in
push
lock
dec
cmc
xchg
movs
dec
mov
push
dec
xchg
fstp
sub
loop
movs
sbb
mov
popf
push
leave
adc
push
cmc
imul
cwde
aad
push
xchg
xor
cmp
cld
mov
fst
add
sar
enter
cmp
popa
pop
int
mov
ins
aad
cmp
mov
repnz
icebp
les
or
mov
jbe
loope
movs
cmp
jmp
stc
sbb
mov
out
mov
or
inc
push
push
test
lods
test
dec
lods
pop
cmp
push
cdq
lods
dec
arpl
add
clc
sbb
lods
cld
add
jne
imul
lods
pop
sbb
cmp
lods
cmp
xor
lods
cld
fs
or
lods
mov
sti
adc
sub
xchg
stos
pop
mov
and
aam
in
aam
addr16
lods
in
cmc
dec
sbb
inc
jae
fcmovb
test
icebp
lods
push
arpl
sbb
inc
mov
mov
lods
xor
ja
lods
iret
sbb
loope
pop
sbb
sub
sbb
cmp
or
(bad)
lds
lods
xchg
out
sbb
and
lods
push
pop
xor
mov
mov
mov
rcr
cmp
or
fwait
push
in
sbb
in
adc
sbb
or
test
pop
jge
int3
dec
push
(bad)
data16
test
xchg
jecxz
jne
cmp
test
(bad)
inc
or
mov
call
xor
fisub
mov
cli
ds
imul
pop
sti
jp
leave
retf
outs
out
in
add
ss
mov
sub
setg
popf
dec
jbe
inc
iret
fild
sbb
pop
cmp
rcr
iret
shr
fstp
jmp
(bad)
mov
outs
cmp
in
in
int3
xor
inc
push
out
xchg
xor
ds
sub
lahf
cmc
mov
gs
outs
test
in
dec
mov
push
lods
or
lahf
mov
adc
ret
stos
lods
dec
push
sahf
stc
mov
sub
dec
mov
inc
push
icebp
lea
inc
xchg
inc
sti
sub
jne
push
add
pop
stos
out
mov
outs
pop
jecxz
ret
stos
idiv
or
jecxz
cmp
push
retf
iret
sub
imul
and
jg
test
lods
and
and
xor
jmp
js
xchg
call
and
lods
sub
outs
mov
adc
jbe
cmp
jae
lahf
in
in
and
sub
jns
test
lods
and
and
push
sti
and
call
in
addr16
add
adc
dec
cmp
lahf
popf
imul
popa
sbb
out
lahf
test
in
in
cmp
push
push
push
iret
xchg
jnp
stc
lahf
in
inc
ins
call
inc
lahf
(bad)
(bad)
mov
inc
lahf
test
shr
lods
icebp
ret
out
lock
cld
test
add
and
sub
retf
inc
daa
adc
lods
and
outs
mov
lahf
sub
and
sub
out
adc
lahf
lods
sbb
(bad)
(bad)
mov
jbe
add
hlt
mov
in
retf
add
jge
retf
aas
push
popf
(bad)
retf
mov
adc
lods
xchg
test
lahf
in
popa
inc
lahf
cmp
push
or
mov
mov
stos
mov
add
jge
retf
aas
push
lahf
cmp
retf
sub
in
dec
out
call
popa
or
mov
jecxz
stc
lahf
in
and
mov
stos
lods
sbb
cld
sub
pop
and
add
xchg
dec
test
or
retf
mov
adc
lods
cld
mov
or
mov
adc
or
loope
shl
mov
mov
and
add
xchg
dec
test
or
retf
mov
adc
lods
jge
dec
cmp
cs
sub
imul
xor
lahf
ret
mov
lods
popf
xor
popf
sub
iret
and
sub
pop
dec
cs
cmp
retf
mov
adc
lods
dec
cmps
lahf
loop
clc
adc
pop
arpl
frstor
hlt
sub
iret
mov
sbb
and
inc
stos
jl
lods
sub
cmp
in
lods
hlt
jecxz
xchg
add
cld
div
retf
inc
or
fs
retf
pop
add
cld
ret
dec
add
pop
outs
jns
es
sub
lahf
in
in
dec
mov
sub
push
add
test
int3
ja
push
mul
and
xor
cs
in
inc
leave
or
push
xchg
test
lahf
in
jne
retf
mov
lods
popf
xor
push
adc
and
xor
xor
xor
out
pop
ret
dec
(bad)
push
lods
in
sbb
inc
lahf
xchg
pushf
test
xchg
cs
lea
and
ins
mov
mov
lahf
sbb
sbb
sub
shl
lods
out
mov
stos
test
retf
test
dec
imul
fidivr
imul
div
or
lods
cmp
lods
loopne
mov
push
dec
cmp
and
lods
push
cmp
mov
cmc
lahf
loopne
int3
icebp
xor
and
mov
jmp
inc
setg
shl
lods
hlt
jecxz
xchg
jecxz
adc
inc
gs
dec
or
ret
dec
(bad)
push
lods
in
sbb
cmp
out
outs
cmc
lahf
and
lods
and
in
cld
fwait
imul
int3
dec
iret
pushf
lods
inc
sbb
lods
xchg
dec
sar
lods
cmp
cs
jecxz
sti
inc
lock
dec
ds
stc
lods
or
lods
in
out
and
push
mov
mov
adc
lea
xor
cmps
outs
adc
out
scas
sub
xor
and
mov
(bad)
fcmovnu
pop
lods
lea
jp
push
mov
lea
out
ret
dec
addr16
lods
das
popf
pop
stos
and
mov
lahf
xor
jmp
jg
push
lahf
cmp
push
push
push
icebp
lods
outs
pop
mov
pop
lods
out
mov
ins
xchg
daa
(bad)
xchg
shr
lahf
push
jp
and
and
sbb
sub
push
loop
lods
out
mov
retf
xor
jne
mov
lahf
sbb
lods
or
lods
out
mov
stos
loop
add
scas
js
lods
loope
mov
inc
jmp
and
adc
lahf
sub
iret
sub
imul
lahf
call
xor
jecxz
xchg
add
test
or
lods
in
jae
lahf
or
cmp
in
in
sbb
popf
sbb
jg
loopne
mov
js
loope
(bad)
in
aas
ins
call
outs
retf
dec
std
and
lahf
cwde
push
into
add
jo
in
dec
aas
imul
(bad)
pop
lods
lea
inc
push
mov
mov
stos
loop
ret
push
ins
jmp
lods
sub
lahf
or
lahf
in
cmp
xor
popa
aaa
in
scas
jmp
lods
and
in
int3
setno
lods
dec
sub
popf
loop
lock
outs
sbb
call
cmps
lahf
and
lahf
and
in
and
pusha
lahf
hlt
test
mov
retf
out
(bad)
push
in
dec
scas
mov
hlt
adc
lahf
sub
iret
add
outs
ds
(bad)
lahf
in
mov
sbb
neg
test
hlt
inc
outs
add
psubw
mov
dec
inc
cmp
outs
lock
lahf
pop
and
(bad)
scas
or
lods
push
in
ins
rcr
cld
and
sbb
ins
jl
push
test
in
cmc
xchg
or
mov
aad
pop
clc
sub
in
sbb
ins
lods
pop
popa
int3
push
cmp
and
dec
call
sbb
dec
das
and
(bad)
cli
adc
movs
sbb
shl
mov
in
add
or
test
cli
les
out
xchg
leave
ja
mov
lock
lods
cmp
xchg
push
inc
lods
jmp
scas
loope
xchg
cmp
pop
cmp
lods
mov
lods
fistp
sub
lods
push
inc
sbb
(bad)
lahf
imul
inc
xchg
sub
data16
xchg
lods
cld
sbb
neg
shl
lods
out
push
cmp
fld
les
dec
bound
test
mov
stos
sbb
mov
add
inc
push
xor
mov
inc
and
icebp
mov
sbb
sbb
loope
ret
test
addr16
test
xchg
aaa
sbb
mov
push
push
les
add
js
ins
cmps
adc
not
loopne
ret
xchg
pop
cs
mov
dec
jl
dec
push
jbe
cwde
bound
retf
jecxz
fnstcw
mov
mov
mov
sar
cmp
dec
sbb
in
push
pop
retf
jno
add
dec
mov
int
inc
adc
sub
cli
pop
cmp
pushf
(bad)
sti
pop
mov
fwait
xchg
pop
cmp
dec
cmps
cmp
icebp
push
add
das
int
arpl
dec
dec
js
imul
jmp
mov
cmp
outs
arpl
jno
dec
mov
int
jns
add
icebp
add
ds
xchg
bound
sbb
loopne
shr
jno
scas
mov
int
mov
or
add
xchg
fdivr
loop
stos
adc
mov
or
ins
sahf
mov
jp
in
mov
mov
mov
dec
imul
rol
dec
(bad)
jmp
dec
sub
cmp
pop
psrlq
inc
mov
or
rcl
ja
dec
sub
or
xchg
push
rcr
stos
loopne
inc
scas
imul
pop
sub
in
mov
or
push
lods
stos
pop
mov
rcr
or
lds
movs
jmp
push
mov
mov
aaa
mov
sbb
and
mov
ins
and
cmp
or
jbe
mov
stos
out
repz
and
(bad)
int3
rcl
sub
jbe
cmp
pushf
retf
pop
sbb
sbb
test
mov
xchg
loope
icebp
pop
lahf
stos
mov
shl
loop
xchg
clc
data16
mov
lea
adc
sbb
sbb
or
pusha
mov
push
inc
scas
xor
add
adc
lods
stos
test
idiv
sub
cmp
cmp
pop
sar
movs
pop
movs
test
pop
lds
pop
inc
push
xor
inc
inc
and
lds
xchg
sar
dec
push
out
mov
shl
aas
mov
dec
sub
mov
arpl
mov
xchg
lock
cmp
xor
push
mov
adc
xchg
shr
add
int
mov
mov
or
ins
rcl
push
int3
and
(bad)
mov
pop
aaa
adc
mov
test
(bad)
mov
callw
push
xchg
mov
push
mov
test
mul
retf
sbb
popa
cmps
jl
lea
sbb
daa
sti
sub
aad
leave
lds
sbb
(bad)
bound
xchg
retf
or
or
xchg
fisub
in
cmc
adc
jp
sub
push
push
and
add
and
xor
mov
push
lods
in
rcr
movs
push
cmp
in
mov
pop
cli
ror
jmp
add
pop
mov
pushf
mov
jl
aam
mov
push
and
stos
retf
shr
sub
and
push
fwait
mov
push
ins
pushf
lea
movs
aas
stos
(bad)
lods
cmps
mul
xlat
(bad)
and
pop
dec
jns
int
or
pushf
loop
(bad)
mov
xchg
push
push
push
lods
test
xor
int
or
stos
test
ret
jns
fwait
stos
rcr
cmp
es
cmp
or
test
rol
jno
int
in
stos
(bad)
ins
call
jle
scas
dec
jmp
pop
int
popf
dec
dec
mov
xchg
rol
cmp
mov
shl
pop
inc
xchg
retf
lods
xor
dec
sub
xchg
push
outs
jle
loop
xor
rol
push
or
mov
adc
cmps
cmp
xchg
adc
sub
adc
fistp
fs
pop
jbe
dec
jl
sar
out
mov
inc
stos
mov
(bad)
or
inc
stos
fild
mov
das
rol
dec
mov
lock
add
sbb
xchg
aaa
fs
mov
in
imul
aas
dec
mov
arpl
and
mov
out
int3
inc
or
mov
cwde
xchg
add
cmp
mov
mov
outs
call
sbb
push
or
je
scas
pop
jnp
jecxz
aas
mov
mov
clc
sbb
imul
das
mov
enter
shl
mov
pop
pushf
mov
mov
mov
xchg
jecxz
inc
inc
mov
and
mov
ficomp
retf
pop
add
inc
mov
mov
xor
mov
cwde
cmp
inc
shl
mov
imul
enter
inc
inc
mov
and
mov
fidivr
cmp
and
cmp
cmp
mov
xchg
jecxz
inc
inc
mov
lods
sbb
nop
sub
fistp
repnz
ror
or
sbb
pop
inc
imul
int
jge
pop
mov
xchg
sub
jae
stos
dec
(bad)
std
popa
shr
push
mov
or
dec
sahf
jae
shr
dec
stc
jp
ins
sub
lods
xchg
xor
fimul
int
sbb
sbb
add
xchg
clc
sub
push
rol
dec
mov
mov
ins
mov
lods
sti
sbb
lods
cld
mov
sub
pop
pop
mov
pop
sbb
mov
jmp
add
shl
adc
lods
movs
popf
dec
sti
and
mov
fldcw
sub
pop
adc
dec
das
popf
push
sub
retf
je
inc
sub
sti
lods
cmp
jl
pop
mov
xor
push
xchg
(bad)
bound
adc
sbb
sub
lods
enter
in
ret
cli
xor
or
aad
stos
sub
das
dec
jge
jae
cdq
rcl
jb
mov
dec
fld
xchg
fisttp
and
mov
sub
xchg
mov
xchg
in
ins
out
jae
xor
lods
xor
inc
jne
push
dec
ins
movs
push
ret
adc
cmp
sti
stc
push
mul
stos
jne
mov
fist
popa
xchg
pop
push
sub
xchg
fsubr
adc
cli
push
les
pop
pop
jae
dec
mov
dec
inc
push
ins
xchg
ret
mov
xchg
lods
out
sbb
xchg
adc
mov
sbb
pop
ins
stos
mov
mov
push
fidivr
xchg
jno
lock
sar
inc
fnstcw
xor
mov
(bad)
dec
lds
push
test
es
push
icebp
addr16
xchg
jle
mov
add
adc
cmp
ins
push
clc
xor
xchg
pop
cmp
mov
mov
xchg
push
jnp
aas
inc
inc
jg
xchg
sub
dec
push
pusha
xchg
push
mov
xchg
pusha
fldcw
not
xchg
scas
hlt
xchg
aaa
stos
push
jmp
xlat
xchg
scas
jns
mov
fnstsw
mov
push
pop
mov
push
sub
xor
inc
pop
xchg
xchg
or
push
xchg
ja
popf
jecxz
scas
mov
or
or
inc
test
mov
add
(bad)
clc
xor
mov
mov
add
rcl
xor
dec
mov
mov
xlat
repnz
imul
hlt
fild
fs
xchg
or
or
neg
pusha
sbb
sti
sub
xchg
sub
lods
out
iret
xchg
inc
xchg
sbb
or
jmp
xchg
popa
test
sbb
add
retf
mov
loopne
lods
cmp
pop
jnp
or
or
mov
int3
rcl
xlat
addr16
cmp
sbb
push
pop
pop
cdq
xchg
gs
int3
pop
mov
arpl
sbb
retf
popf
rcr
lods
cmp
(bad)
ror
adc
adc
shl
xor
sti
nop
sbb
pushf
rol
pop
int3
xor
(bad)
sbb
fcmovnbe
loopne
lds
mov
sahf
sbb
stos
sbb
add
pop
sbb
push
hlt
mov
pop
sbb
pushf
mov
mov
fsubr
adc
pop
sti
xor
aam
(bad)
fcom
dec
push
daa
aam
dec
dec
adc
jl
pop
out
push
(bad)
adc
mov
cmp
rol
mov
lods
out
loopne
inc
shl
shr
pop
pop
xlat
retf
push
mov
push
sbb
ins
call
add
cs
pop
push
in
xchg
sbb
retf
sbb
ret
ficomp
lods
cdq
test
retf
sbb
mov
jp
xchg
mov
(bad)
pop
sti
nop
adc
sti
popf
xchg
push
push
push
dec
push
sub
imul
push
mov
into
cli
fcomp
ins
repz
sbb
dec
test
sbb
pop
mov
movs
pushf
es
pop
add
push
jecxz
push
loope
ja
mov
jns
cmp
xchg
hlt
sti
popf
les
pushf
cmps
cwde
push
std
mov
ret
sbb
mov
pop
scas
adc
fstp
pop
pop
pop
cmp
pop
mov
arpl
bound
xchg
sbb
cdq
sub
push
or
inc
inc
jmp
test
push
cdq
(bad)
mov
dec
mov
mov
push
xchg
xchg
lods
and
sti
pop
mov
call
test
mov
fist
int
dec
push
jmp
mov
pop
xor
push
mov
xchg
lods
test
test
cdq
dec
sbb
xchg
adc
pop
dec
fst
jb
dec
call
jbe
dec
test
mov
cmp
push
call
xor
aas
jnp
xchg
icebp
fsub
dec
fiadd
in
sbb
out
mov
sbb
add
xchg
jmp
push
mov
cmps
sbb
fcomp
in
fidivr
jb
mov
mov
pop
mov
fucomi
stc
int3
pop
sub
(bad)
pop
sbb
(bad)
daa
inc
push
jns
ret
mov
pop
inc
rcl
int3
adc
cmp
add
push
mov
push
pop
fwait
aad
in
xchg
dec
push
xchg
rcr
cmp
(bad)
pop
mov
fcmovnbe
inc
pop
adc
(bad)
pop
pop
mov
fsubrp
sbb
xchg
push
sub
aad
sahf
xchg
xchg
(bad)
cmc
retf
ficomp
mov
rcl
cmp
sahf
sbb
jp
call
mov
stos
xchg
gs
mov
xchg
mov
adc
push
sub
sub
nop
dec
popf
imul
sahf
push
sbb
dec
jp
test
pop
aaa
ret
data16
aad
sbb
fs
mov
push
test
push
pop
popa
push
sub
push
lock
cmp
les
movs
ficom
adc
aam
les
shl
stos
mov
out
adc
(bad)
pop
dec
pop
(bad)
xlat
xlat
fwait
outs
aam
ret
jecxz
pop
ficom
outs
scas
xchg
mov
call
icebp
mov
mov
aad
mov
fwait
push
je
jb
sub
into
jmp
adc
cli
stos
sbb
int
push
mov
ret
cmps
xchg
push
stos
aad
hlt
les
push
pushf
pop
stos
adc
pop
retf
sahf
pop
ret
fninit
sbb
retf
mov
xchg
dec
push
out
ror
popf
pop
push
push
push
aas
push
dec
outs
ret
popf
fcmovne
dec
mov
inc
ror
adc
imul
enter
popf
or
bound
mov
xlat
xor
fwait
sbb
fistp
into
pop
in
aad
mov
and
cwde
pop
mov
pop
dec
xchg
fist
fild
push
mov
xchg
lock
in
lahf
movs
ss
pop
das
leave
sbb
sbb
push
sbb
retf
push
inc
inc
mov
mov
out
ror
fnstcw
pop
mov
push
mov
outs
stos
imul
mov
sbb
std
sbb
test
nop
lock
push
retf
push
stos
sbb
sbb
mov
sbb
push
xchg
sbb
(bad)
fild
pop
fdiv
cmps
pop
pop
stos
cwde
ret
sbb
pop
cmps
mov
xchg
sbb
in
and
mov
call
pop
inc
sbb
or
push
lahf
adc
into
dec
std
inc
sub
mov
sbb
inc
aad
add
xchg
repnz
pop
push
popa
in
xchg
or
cmp
sahf
add
add
test
mov
dec
xchg
sbb
test
nop
mov
sbb
xchg
xchg
call
(bad)
jae
fild
sbb
fidiv
mov
push
sbb
pop
idiv
fisttp
dec
sbb
mov
dec
pop
loop
mov
fist
std
retf
pop
push
push
push
imul
retf
dec
pop
pop
mov
mov
std
cwde
dec
jp
test
sbb
aaa
dec
push
dec
xchg
ret
(bad)
aad
rcr
adc
dec
inc
call
not
ret
cmp
out
or
add
stos
xlat
inc
jae
fisttp
mov
mov
mov
xchg
pop
xchg
and
ja
stc
push
sbb
test
nop
xchg
aaa
sbb
daa
push
xor
mov
pushf
push
ror
dec
rol
sub
xchg
ja
xchg
pop
cdq
retf
cmp
loopne
pop
lods
mov
idiv
mov
sbb
les
cmp
xchg
sbb
cli
es
ficom
ficom
test
dec
push
fild
cmovnp
push
fcom
sbb
inc
sbb
adc
push
fiadd
(bad)
(bad)
pop
dec
sti
mov
call
push
cwde
gs
cmp
ret
iret
mov
mov
into
pop
xchg
nop
daa
(bad)
adc
mov
retf
push
mov
add
cli
scas
sbb
lock
nop
inc
cmp
cli
in
mov
aaa
bound
and
or
cld
or
inc
fwait
adc
pop
pushf
(bad)
mov
sbb
fwait
js
pop
adc
lds
pop
push
js
retf
sbb
xchg
adc
mov
pop
sahf
aas
adc
push
jl
push
scas
xchg
fisttp
mov
popf
iret
nop
shl
fwait
rep
(bad)
pop
xchg
out
nop
pop
(bad)
pop
xchg
rep
push
add
fst
push
pop
aad
push
stos
sbb
push
push
mov
(bad)
fst
adc
push
stos
pop
push
shl
pop
pop
mov
push
ffree
nop
adc
pop
js
stos
push
ret
sbb
dec
sbb
sahf
js
stos
adc
xchg
push
pop
mov
sbb
rep
lahf
adc
push
push
fdivr
ret
adc
pop
shr
pusha
stos
cwde
push
sbb
aad
pop
sbb
ret
fst
pop
sub
xchg
test
xchg
sbb
(bad)
xchg
fisttp
dec
popf
sbb
sbb
(bad)
call
xchg
inc
popf
aaa
enter
nop
xor
xchg
jge
pop
jo
lods
ins
pop
fisub
dec
dec
fild
or
imul
push
test
loop
adc
ret
jo
scas
cwde
fimul
inc
cmp
fwait
dec
retf
pop
sub
pop
mov
inc
adc
pop
sub
int
adc
xchg
jecxz
push
mov
mov
push
push
mov
push
cld
xor
and
adc
xor
ror
int
scas
jmp
cmps
jo
push
push
inc
mov
push
out
fs
mov
mov
or
fisttp
daa
dec
data16
repz
cmp
mov
or
xchg
stc
sbb
pop
cmp
or
push
retf
scas
push
jo
cmp
test
nop
loope
sbb
fist
(bad)
int3
rcr
sbb
mov
pop
(bad)
retf
sub
fimul
(bad)
js
fwait
xchg
pusha
pop
xor
fild
dec
retf
mov
adc
sbb
mov
sbb
fnstcw
push
sbb
jne
or
and
push
rcr
xor
dec
pop
(bad)
int
stos
lahf
mov
iret
xchg
dec
fdivr
sahf
pop
xchg
inc
push
mov
pop
lods
stos
mov
adc
inc
lahf
push
ins
push
fwait
xchg
pusha
pop
inc
xlat
mov
cmp
push
xchg
or
adc
fcmovu
pop
xchg
xlat
xor
pop
cwde
nop
pushf
inc
xchg
mov
(bad)
mov
cwde
fdivr
sahf
jo
xchg
jae
je
dec
sbb
push
sar
nop
rcr
push
push
retf
push
push
pushf
push
(bad)
adc
push
pushf
repz
push
in
nop
fistp
mov
sbb
push
sbb
jmp
push
repz
dec
ficomp
(bad)
stos
push
sar
lods
adc
inc
push
adc
sbb
xlat
mov
push
stos
aam
mov
dec
push
rol
mov
leave
ror
(bad)
pop
mov
ret
cmp
pop
fstp
sub
mov
leave
mov
jmp
rol
push
stos
fcmovnb
rcl
inc
fstp
xchg
inc
or
xchg
repz
out
add
xchg
into
adc
test
out
rol
inc
pop
call
test
out
adc
push
sbb
pusha
stos
rcl
ins
int
pushf
pop
fnsave
ret
sahf
xchg
mov
cli
stos
push
pushf
dec
inc
pusha
pop
dec
(bad)
movnti
ins
cld
mov
retf
mov
pop
ret
mov
inc
inc
mov
rol
add
call
jmp
ret
fwait
adc
pop
ins
dec
jnp
test
(bad)
cmps
popf
sbb
adc
cmp
cwde
push
cld
xor
(bad)
(bad)
xchg
mov
pusha
push
xchg
xchg
in
call
inc
dec
jmp
dec
or
pop
xor
xchg
hlt
jp
pushf
sbb
sahf
and
inc
loopne
fidivr
inc
inc
mov
loope
cdq
aam
hlt
sbb
pop
sub
(bad)
in
adc
inc
push
inc
xlat
(bad)
mov
sar
mov
adc
dec
sbb
aam
push
adc
mov
mov
sub
mov
or
cld
sahf
in
sar
retf
xchg
call
fmul
movs
pop
aas
add
or
fs
mov
stos
inc
shl
mov
(bad)
imul
cmps
or
loop
retf
and
in
clc
daa
cli
retf
mov
pushf
fwait
push
call
cwde
adc
push
cwde
jl
sub
retf
stos
aam
fwait
xchg
fucomi
adc
push
push
ret
add
call
inc
adc
aad
and
mov
fcomi
fwait
xor
sbb
or
fld
inc
adc
mov
gs
push
push
push
xlat
imul
push
sahf
mov
ins
fst
push
push
pop
cwde
rcr
sahf
push
mov
cli
push
add
sbb
fild
xchg
repz
push
nop
sahf
pop
pop
rcr
stos
sbb
retf
fsubrp
jb
(bad)
cmps
pop
mov
leave
pop
stos
aam
test
sbb
mov
call
stos
xchg
ret
pop
stos
inc
ret
push
pop
into
mov
mov
mov
aam
leave
je
push
sbb
fnop
lock
pop
(bad)
stos
rol
inc
(bad)
pop
push
push
sahf
inc
sbb
leave
neg
dec
adc
aad
stc
test
rcl
repz
nop
pop
jmp
xchg
push
mov
jmp
aam
jae
rcl
xor
push
pop
mov
dec
fisub
sbb
repz
nop
aad
cmps
popf
stos
mov
inc
pop
sbb
repz
nop
(bad)
leave
(bad)
pop
nop
ret
ret
push
push
loop
pop
sbb
inc
loop
adc
test
out
ret
mov
push
rcr
mov
push
cli
stos
fsubr
ret
push
push
gs
push
sbb
sbb
repz
nop
fstp
mov
dec
mov
stos
push
ret
sbb
inc
push
fimul
repz
push
mov
call
retf
fstp
push
ret
adc
sbb
xchg
add
in
pop
imul
push
aam
push
rol
mov
(bad)
dec
retf
rcr
jecxz
jbe
pop
inc
pop
lods
xchg
mov
adc
pop
jbe
pop
popf
repz
push
nop
sahf
fistp
push
xchg
pop
gs
push
fimul
mov
ds
pop
sbb
push
push
push
ret
sbb
retf
int3
push
or
cmp
ror
repz
push
mov
mov
lds
int3
pop
dec
fs
stos
sub
arpl
sbb
jb
test
nop
pop
sub
fisttp
jmp
lahf
ret
xchg
stos
pop
ret
fwait
push
cmp
sbb
fistp
repz
push
sbb
adc
sbb
push
pushf
or
fidiv
or
aam
mov
inc
pop
sbb
repz
out
ret
clc
push
cwde
xchg
and
sbb
neg
mov
test
pop
fstp
mov
jo
ret
shr
xchg
call
sbb
test
xor
xlat
xchg
nop
and
xchg
xchg
sbb
fmul
pop
stos
daa
xor
xchg
mov
mov
pop
fs
sbb
dec
leave
sbb
pop
repz
nop
xchg
enter
fst
mov
jmp
fidivr
fcom
shl
int
mov
sbb
repz
push
xchg
sahf
fwait
cmp
push
xchg
push
mov
cli
stos
sbb
pop
ret
pop
push
imul
sbb
inc
aad
push
rcr
sbb
push
pushf
jno
pop
rcr
cwde
mov
fdivr
lahf
mov
push
sar
int
mov
inc
cmp
aad
test
push
nop
sahf
sbb
sahf
xchg
mov
cli
stos
sbb
pop
stos
mov
push
push
pop
inc
xchg
sbb
pop
push
stos
adc
push
mov
dec
aam
xlat
sbb
push
sahf
xchg
mov
cli
rol
xchg
xlat
cwde
aad
repz
push
ror
into
mov
in
rcl
push
adc
or
lahf
js
mov
rcl
jmp
push
inc
jmp
stc
xor
stc
sahf
push
mov
cli
stos
sbb
retf
adc
fld
adc
inc
xchg
sbb
repz
nop
sbb
mov
call
xchg
repz
push
pop
mov
xchg
mov
mov
adc
retf
push
sbb
retf
sbb
fisub
push
adc
sahf
adc
push
js
mov
push
shr
int
or
inc
jmp
nop
sbb
mov
call
retf
push
not
cli
push
nop
sahf
cmp
fstp
mov
stos
push
shr
mov
sub
sbb
ret
push
inc
pushf
adc
pop
fisttp
jmp
call
lahf
rcr
mov
sbb
fsub
pop
sbb
out
stos
rcr
xchg
xor
cwde
pop
xchg
fidiv
mov
sahf
inc
push
sbb
retf
sbb
push
sahf
jae
paddusb
sub
push
fst
sahf
mov
sbb
test
fsubr
push
cmps
leave
adc
push
cdq
inc
push
popf
sbb
fs
xchg
cmps
nop
pop
pop
cmp
ret
push
mov
sbb
mov
pop
sbb
push
adc
adc
xchg
push
sahf
sahf
ficomp
sahf
pushf
mov
cli
stos
fadd
test
pop
pop
xchg
cmc
sbb
repz
pop
cmc
repz
pop
mov
call
retf
xchg
ja
fld
call
sbb
repz
sbb
stos
mov
pop
pop
push
jno
sbb
adc
pop
ret
sbb
jmp
push
pop
ret
xchg
stos
movs
ret
ficom
inc
nop
sbb
push
int
sahf
call
dec
xchg
xbegin
and
adc
sahf
sbb
mov
(bad)
push
int
inc
dec
mov
dec
push
jmp
rol
shr
xchg
inc
push
sbb
xchg
sbb
repz
nop
pop
aaa
mov
call
xchg
repz
push
(bad)
cwde
retf
pop
daa
nop
pop
pop
aad
pop
mov
cli
push
push
daa
inc
xchg
fdivr
push
mov
rep
jmp
fwait
pop
repnz
rcl
dec
fidivr
hlt
fs
adc
sbb
test
retf
pop
pop
leave
call
and
xchg
(bad)
and
jmp
faddp
pop
stos
push
adc
mov
sbb
leave
fdivr
popa
fs
push
push
sbb
popa
push
aad
les
popf
repz
mov
shl
out
adc
push
adc
ret
push
adc
js
mov
aam
sar
ror
sbb
fs
rcl
ret
ret
push
push
sahf
mov
cdq
adc
imul
repz
rol
xchg
mov
dec
test
pop
pop
fldcw
cli
stos
fnstenv
sbb
test
push
adc
xchg
pop
inc
sahf
adc
mov
rcl
ror
cmps
pop
sbb
xchg
repz
push
rcr
push
mov
cli
push
xchg
stos
adc
addr16
xchg
pop
push
repnz
retf
addr16
pop
xchg
ja
xchg
repz
push
ja
push
fild
dec
push
sbb
ret
push
xor
rol
push
push
adc
pop
cwde
sahf
out
push
call
nop
sbb
sbb
sahf
sbb
repz
pop
push
fs
pop
leavew
sbb
(bad)
not
sahf
je
xchg
repz
pop
je
push
fnsave
pop
dec
es
sbb
cdq
ret
es
pop
sahf
pop
sbb
cdq
pushf
jo
mov
jmp
pushf
inc
push
fcmovnb
push
sahf
sahf
mov
(bad)
repz
sbb
dec
sahf
adc
push
dec
dec
jmp
pop
ss
cdq
ret
dec
push
fstp
cwde
sbb
push
fbstp
pop
dec
call
push
imul
sub
mov
push
mov
jl
fcom
leave
xchg
mov
mov
push
adc
sar
mov
sti
dec
fistp
or
push
xchg
push
nop
adc
or
fwait
mov
cli
push
loope
pop
rcr
jmp
sub
push
repz
xchg
sub
push
nop
mov
call
loopne
(bad)
pop
push
push
(bad)
loopne
pop
mov
cli
push
pop
daa
(bad)
xchg
fdivr
fcmovnbe
mov
inc
xlat
fstp
mov
push
push
aad
ror
daa
mov
fdivr
sahf
mov
xlat
pop
sbb
push
fadd
nop
fisttp
sub
add
(bad)
nop
pop
pop
jae
paddusb
mov
fisubr
fwait
cmc
fdiv
stos
push
adc
pop
cmp
rol
cli
stos
pop
mov
push
mov
add
sbb
sar
fstp
data16
jmp
cmp
xchg
leave
dec
push
sahf
movs
std
test
nop
ret
xchg
push
xor
sbb
fmul
push
push
ins
push
fist
ficom
cli
push
jmp
(bad)
rcr
dec
fidivr
jp
push
call
push
mov
cli
push
fld
pop
sahf
sbb
dec
push
xchg
sbb
pop
push
mov
out
jle
test
dec
jno
mov
ds
dec
cli
ret
sub
inc
out
push
call
rcr
mov
std
ret
sub
mov
mov
cmps
ret
aad
add
xchg
mov
and
pop
mov
push
sbb
les
jp
test
mov
inc
les
push
ret
cmp
mov
pop
or
cmp
inc
idiv
test
mov
loop
adc
jo
scas
call
ins
and
stc
inc
sub
mov
in
adc
mov
pop
xor
outs
mov
push
sub
les
mov
sbb
inc
aam
add
xor
ret
xchg
mov
scas
push
mov
sub
xor
sahf
push
andps
ins
nop
cdq
and
xchg
cli
sbb
lahf
loopne
sbb
ins
nop
sbb
adc
sbb
push
loopne
fwait
dec
std
cmp
jne
xchg
outs
xchg
sbb
(bad)
and
push
ins
xchg
adc
mov
cli
sbb
stos
sbb
ret
xchg
in
push
adc
mov
cli
sbb
stos
cwde
out
ret
push
in
push
xchg
ins
sahf
adc
sbb
or
cdq
cli
sbb
push
xlat
cmp
xchg
adc
fild
mov
addr16
push
and
or
nop
sbb
pop
pop
xor
and
push
sub
and
loopne
addr16
sti
or
sbb
push
xor
and
adc
fwait
sbb
pop
icebp
push
pop
idiv
jmp
pushf
lock
pop
out
xchg
lahf
in
push
adc
stos
xchg
out
rcl
adc
gs
and
pop
push
sbb
fcomi
xchg
pop
fninit
hlt
test
jmp
xchg
pop
inc
mov
fldz
sbb
and
pop
cli
sbb
adc
retf
lock
loopne
sbb
mov
retf
sbb
ins
xchg
adc
push
cli
sbb
stos
sbb
ret
xchg
in
push
adc
daa
xchg
sub
mov
pop
not
pushf
mov
push
out
sbb
push
jp
fisub
adc
imul
nop
adc
dec
add
pop
rcr
lock
mov
adc
cwde
pop
mov
mov
sub
int3
and
push
ja
mov
or
addr16
sahf
repnz
ror
push
inc
add
cmp
push
aad
sahf
xchg
repnz
gs
lahf
sub
cmp
addr16
sbb
loope
call
sbb
out
inc
lock
push
cmp
adc
nop
sub
push
sub
gs
pop
imul
pop
ja
jnp
out
xchg
adc
adc
mov
test
mov
sub
mov
dec
sub
je
sahf
sbb
(bad)
loope
xchg
idiv
push
pushf
inc
test
adc
sub
or
addr16
popf
jmp
sbb
pop
mov
and
imul
nop
xchg
jmp
adc
sub
mov
sub
test
jne
fist
adc
cmp
xchg
test
adc
loop
addr16
lahf
jmp
push
sbb
out
call
retf
ja
test
adc
sub
dec
addr16
nop
jmp
push
adc
mov
or
test
mov
pop
sar
mov
mov
inc
addr16
xchg
jmp
push
pop
div
pushf
cli
push
in
test
mov
dec
xchg
sub
mov
adc
loope
xchg
div
adc
test
mov
jmp
adc
pop
inc
addr16
push
jmp
xchg
adc
adc
cmp
sahf
test
fisubr
and
cdq
jmp
push
pop
idiv
inc
fstp
and
xor
push
addr16
sbb
pop
push
call
sbb
cmp
xchg
test
adc
ret
nop
adc
adc
lods
cmp
fwait
mov
cmp
sbb
xchg
imul
std
push
xchg
mul
push
mov
loopne
lahf
loopne
pushf
stos
push
add
push
adc
loope
xchg
div
adc
ins
mov
call
cwde
sbb
(bad)
jne
push
test
dec
xchg
pop
push
and
mov
push
dec
sahf
sub
jp
mov
aaa
and
pop
retf
rcl
adc
test
add
dec
out
adc
pop
vmovapd
mov
retf
and
cmps
lods
cwde
repnz
loop
retf
(bad)
xor
xchg
jge
adc
es
imul
add
jmp
pop
shl
arpl
mov
int3
ja
loopne
sub
and
fucomi
fist
and
mov
push
and
mov
leave
sub
fmulp
push
mov
jmp
xchg
xchg
int
in
arpl
cmp
retf
pop
cld
nop
movs
stos
aad
mov
pop
stos
js
retf
jns
nop
and
stos
xchg
jne
adc
sub
jmp
push
out
mov
push
mov
adc
lods
cmp
pop
sub
and
pop
mov
fcmovnb
sbb
sub
xchg
fdiv
neg
and
or
dec
(bad)
imul
pop
lods
xchg
stos
test
sbb
push
aaa
pop
call
repz
adc
xlat
call
pop
daa
or
mov
(bad)
out
push
gs
scas
retf
es
inc
leave
addr16
int
ret
retf
xchg
jae
sub
popa
xor
xchg
stos
xor
fld
jmp
mov
xchg
pusha
int3
cwde
ja
mov
fisttp
adc
bound
js
retf
out
nop
out
retf
pop
loopne
stos
and
xchg
pop
adc
adc
and
repz
push
daa
mov
pop
xchg
js
retf
imul
mov
pop
fidivr
pop
in
enter
fwait
cs
jb
jp
loope
push
dec
mov
pop
stos
xchg
stos
loop
(bad)
xchg
mov
mov
mov
mov
movs
jge
push
cmp
popa
pop
sub
pop
das
cmp
or
ret
js
mov
fld
xchg
gs
cdq
fldenv
adc
sub
sar
retf
mov
div
mov
mov
dec
sbb
daa
enter
pop
das
cwde
mov
cmp
or
xor
push
push
es
sub
aad
test
mov
push
call
test
imul
adc
sub
cmove
fld
lods
pop
lods
js
pop
in
or
jno
fld
xchg
dec
and
adc
lods
push
out
mov
mov
xor
push
mov
nop
addr16
pop
out
stos
daa
rcr
push
jmp
push
xchg
and
push
stos
adc
add
push
pushf
xchg
sbb
mov
mov
fstp
sub
cld
int3
sbb
cmp
or
mov
rcl
or
stos
imul
sbb
dec
pop
scas
(bad)
adc
jl
push
adc
outs
fnstcw
sbb
(bad)
ret
sbb
push
outs
(bad)
cmp
ret
pop
(bad)
inc
lods
sub
sbb
adc
push
and
sar
xchg
je
(bad)
lods
aam
sbb
push
(bad)
pop
icebp
rcr
adc
(bad)
mov
pop
sbb
pop
pop
ret
(bad)
(bad)
not
stos
sbb
xchg
retf
shl
fxch
push
les
fstp
int
jmp
iret
fxch
aad
cli
stos
adc
adc
ror
pop
ficom
fst
mov
dec
mov
pop
out
mov
ficomp
cwde
ficomp
push
jle
push
stos
fstp
iret
push
aam
(bad)
cmp
adc
jg
xor
sbb
sahf
push
lds
xlat
pop
rcr
adc
pop
fnstcw
(bad)
shl
mov
retf
fstp
pusha
not
mov
cmp
rcl
(bad)
out
mov
dec
inc
rcr
aam
cwde
mov
pop
sahf
js
stos
fld
sbb
retf
inc
aad
fst
sbb
sbb
(bad)
unpcklps
mov
push
jecxz
nop
xchg
ds
(bad)
push
xor
fstp
lea
push
inc
mov
fdiv
retf
push
pop
ror
(bad)
push
push
ret
jmp
adc
add
repz
jecxz
rcr
mov
jae
arpl
xor
and
inc
loop
rcr
mov
jb
bound
xor
and
inc
loope
rcr
mov
jno
popa
mov
xor
and
inc
loopne
rcr
mov
jo
pusha
mov
xor
and
add
call
out
ret
fistp
inc
lahf
mov
outs
ret
pop
mov
inc
pop
mov
out
ret
fidivr
inc
sahf
mov
outs
ret
pop
mov
inc
push
mov
in
ret
fnstsw
inc
lea
pop
ret
dec
mov
inc
or
mov
lds
pop
pushf
ret
mov
inc
dec
mov
sbb
or
sti
cwde
jmp
inc
retf
mov
fwait
ret
mov
inc
dec
mov
sbb
or
inc
retf
call
jp
push
inc
dec
mov
sbb
or
inc
leave
mov
cdq
ret
mov
inc
dec
mov
sbb
or
inc
enter
test
cwde
ret
mov
inc
dec
mov
sbb
or
inc
(bad)
mov
xchg
ret
xchg
inc
inc
mov
popf
icebp
sbb
add
inc
cmp
pop
cmps
ret
xchg
mov
inc
push
mov
es
push
mov
inc
aad
lds
xchg
mov
inc
push
mov
and
xchg
pop
aam
adc
les
mov
movs
mov
inc
fs
xchg
fmul
push
inc
add
repz
dec
cwde
rol
inc
mov
dec
fbld
dec
pushf
dec
lods
fistp
lahf
rcr
fsubr
fdivr
push
(bad)
dec
retf
scas
push
mov
ret
dec
(bad)
dec
pop
cwde
xchg
xchg
inc
jb
inc
jb
push
dec
cwde
inc
xor
mov
ret
dec
fwait
mov
ror
mov
aad
test
mov
call
adc
dec
cwde
sahf
lock
retf
sar
mov
call
inc
cwde
xor
inc
adc
out
ret
fistp
inc
lahf
mov
outs
ret
pop
mov
inc
pop
mov
out
ret
fidivr
inc
sahf
mov
outs
ret
pop
mov
inc
push
mov
in
ret
fnstsw
inc
popf
mov
ins
ret
pop
mov
inc
sbb
pop
in
xor
dec
in
imul
mov
inc
pop
mov
sub
sbb
or
sti
jmp
fstp
stos
ret
fwait
mov
inc
pop
mov
sub
sbb
inc
fidivr
stos
ret
call
pop
mov
sub
sbb
inc
fnstcw
test
cwde
jns
inc
pop
mov
sub
sbb
inc
fdivr
test
cwde
mov
inc
pop
mov
sub
sbb
inc
xlat
mov
cmps
ret
xchg
mov
sbb
inc
pushf
push
sbb
repz
aam
inc
push
fwait
inc
xor
jbe
retw
push
mov
push
adc
push
adc
rol
push
mov
movs
dec
cwde
xchg
test
gs
(bad)
retf
jbe
dec
sbb
in
inc
(bad)
mov
inc
je
fs
and
adc
inc
repz
ret
ret
mov
mov
jae
arpl
xor
inc
sbb
pop
ret
mov
inc
jb
bound
xor
inc
icebp
mov
rol
mov
inc
jno
popa
call
and
mov
push
or
inc
cmc
aam
js
jne
mov
fucom
xchg
cmps
outs
(bad)
cmc
outs
xlat
imul
sbb
xchg
fwait
enter
jmp
xchg
loopne
mov
mov
cmps
sbb
push
retf
test
sbb
cmps
es
mov
neg
xchg
sbb
pop
inc
push
cdq
mov
stos
cmp
sbb
enter
mov
jnp
adc
(bad)
jmp
jmp
test
retf
(bad)
inc
out
js
push
call
test
cmc
data16
cwde
mov
push
xchg
rcr
xchg
mov
js
xchg
sub
cmp
mov
push
enter
out
test
cwde
in
js
cmp
add
pop
cmps
sbb
inc
mov
test
cwde
jb
aam
push
mov
adc
jbe
addr16
xchg
jb
dec
or
pop
(bad)
je
adc
xor
mov
cwde
push
mov
test
dec
fmul
mov
sbb
shr
ret
mov
fwait
out
sbb
dec
mov
mov
xchg
mov
mov
mov
or
jne
lds
pushf
cdq
aad
sbb
in
gs
popf
sbb
pop
iret
js
repnz
repnz
loopne
fwait
push
std
push
lea
xchg
adc
cmp
test
sbb
hlt
aad
cmc
aam
push
movs
pop
push
add
shr
dec
mov
and
pop
ret
sub
push
jmp
push
std
mov
into
dec
ffreep
sbb
les
call
push
xchg
out
mov
cdq
cdq
cwde
pushf
pop
sbb
mov
cdq
test
jecxz
lds
push
mov
push
dec
stos
jmp
in
enter
xchg
jb
js
push
fadd
aam
mov
test
xchg
push
mov
push
fcomp
test
push
lahf
mul
adc
mov
icebp
cmps
cmc
in
movs
loopne
xchg
pop
inc
jecxz
ds
test
xchg
pop
jecxz
jmp
cmp
mov
pop
(bad)
sbb
add
xchg
mov
repz
hlt
rcl
sahf
push
push
aad
retf
push
fnstsw
inc
jbe
retf
popa
enter
test
repz
xchg
add
adc
or
popf
xchg
and
rcr
push
into
cwde
sar
mov
mov
jecxz
inc
sbb
test
push
ror
pop
xchg
xlat
push
arpl
xchg
push
sahf
push
push
shl
mov
mov
jle
rcr
stc
cwde
cs
mov
int3
and
and
mov
pop
popf
or
mov
sbb
pop
ret
xchg
xchg
addr16
pop
fcomp
add
aas
adc
int3
test
mov
aam
push
jno
jl
mov
hlt
mov
jbe
fdiv
xlat
sbb
ja
(bad)
jp
dec
loop
fsubr
cli
and
ins
xor
mov
sub
push
(bad)
ror
sub
pop
cmps
xchg
push
mov
push
cmc
ret
dec
or
and
mov
mov
cmps
fs
xchg
mov
dec
pop
sub
stc
imul
add
arpl
mov
dec
dec
rcr
push
adc
push
leave
imul
retf
jns
test
outs
sub
mov
not
jne
(bad)
mov
inc
pop
xor
pop
dec
xchg
cdq
adc
mov
rcr
cmps
ss
stos
pop
daa
add
sbb
fs
xchg
mov
mov
jns
pop
push
enter
(bad)
dec
xlat
and
rol
pop
mov
xchg
sbb
stos
aas
cwde
enter
lea
sahf
in
test
mov
cli
xchg
xlat
cmc
fistp
sahf
imul
push
jnp
fistp
pushf
push
mov
clc
daa
adc
call
xchg
mov
sbb
(bad)
dec
aas
call
push
pop
xchg
push
push
sbb
xchg
fcmovnb
pop
movs
enter
out
lods
cmp
mov
push
leave
sbb
aas
call
nop
mov
repnz
icebp
xchg
das
pop
pop
imul
lahf
xchg
or
ficomp
mov
(bad)
cdq
push
pop
loope
gs
movs
shr
daa
push
neg
les
jns
push
(bad)
jbe
imul
call
sbb
js
jp
fdivr
push
cmp
test
and
cld
xchg
fwait
push
xchg
retf
sbb
mov
(bad)
cmp
xchg
push
sbb
test
xchg
call
sub
loopne
push
aad
jae
sub
jle
(bad)
enter
push
jae
mov
and
ins
pop
sub
xchg
pop
mov
push
inc
mov
leave
push
ja
inc
xchg
pop
ret
cmps
cmp
push
cwde
pop
sbb
cmc
push
pop
mov
add
mov
inc
movs
lea
xor
pop
xchg
pop
jecxz
mov
ficomp
push
add
and
xchg
mov
push
xchg
cs
fistp
test
xchg
adc
(bad)
mov
sub
inc
jne
inc
mov
xchg
aad
xchg
iret
jae
or
xlat
ja
dec
xchg
cmps
cmps
cmp
mov
xor
ins
inc
cmp
adc
adc
fwait
leave
data16
call
test
mov
in
xchg
lahf
or
mov
cmps
enter
and
adc
fdiv
int
sbb
aad
gs
rcr
add
sbb
nop
imul
dec
cmp
inc
xchg
pop
(bad)
jmp
test
stos
mov
pop
xchg
sbb
inc
pop
and
adc
dec
nop
inc
mov
jbe
das
xchg
ja
xor
test
mov
mov
pop
dec
sub
dec
add
out
fiadd
lods
loope
loopne
aad
cld
jmp
mov
mov
ror
jns
xor
mov
(bad)
mov
push
inc
push
ret
mov
cmp
push
cdq
shr
adc
iret
call
jns
xor
cdq
call
jns
(bad)
out
idiv
push
or
repnz
sbb
(bad)
dec
jns
push
clc
or
push
cmps
pop
fcomp
fidivr
mov
jecxz
pop
(bad)
dec
pop
(bad)
xchg
nop
mov
sub
jbe
fcom
dec
pushf
add
cdq
bound
ror
sbb
pop
aam
xor
neg
xchg
pop
xor
pushf
push
nop
(bad)
pop
mov
mov
sbb
pop
inc
mov
ds
xchg
pop
mov
xchg
xlat
push
inc
pop
test
sub
cdq
pop
cmp
push
cmps
not
movs
push
inc
push
or
enter
cs
xchg
leave
xchg
sub
cmp
xlat
xchg
mov
mov
dec
dec
cdq
test
(bad)
rcl
call
push
push
enter
xchg
ror
(bad)
rcl
test
pop
call
or
fcomi
push
test
push
dec
sbb
sub
(bad)
arpl
cmp
in
pop
add
test
aam
shl
jns
dec
fld
or
sbb
jns
retf
nop
fstp
leave
test
loop
mov
rcr
push
sbb
(bad)
dec
xchg
push
mov
fwait
fwait
mov
pop
mov
fist
mov
(bad)
dec
inc
(bad)
sti
sbb
push
imul
sbb
je
sub
inc
leave
mov
sbb
sub
mov
fisub
mov
cdq
test
xchg
pop
and
xchg
xlat
adc
ja
pop
fst
adc
rcl
fcom
or
shl
pop
xchg
adc
fs
push
mov
(bad)
rol
sbb
pop
push
faddp
lahf
sub
mov
xchg
(bad)
loope
popf
add
add
push
into
sbb
cli
fmul
sub
xchg
fstp
popf
mov
out
retf
inc
mov
push
fnstsw
retf
sar
or
nop
dec
adc
sbb
adc
mov
xchg
adc
out
adc
inc
cmps
push
xor
cli
test
xchg
pop
repnz
retf
adc
mov
xchg
rcl
push
xchg
fdiv
mov
adc
test
push
xchg
dec
or
les
movs
xchg
cmp
xor
pop
xchg
ficom
fs
adc
nop
cmp
mov
lahf
mov
cdq
xor
shl
xor
fdiv
push
aad
xlat
(bad)
cdq
dec
inc
fxch
loop
pop
pop
(bad)
stos
sbb
mov
mov
mul
pop
add
pop
retf
pop
xor
fwait
inc
inc
movs
add
inc
inc
(bad)
ret
cwde
mov
sbb
push
jl
xchg
inc
adc
push
mov
pop
xchg
xchg
push
iret
push
sti
stos
pop
sahf
cmp
gs
adc
popa
stos
push
or
inc
cmp
sar
(bad)
fisubr
pop
adc
add
fcomp
(bad)
xchg
jne
aad
mov
mov
rcr
not
ss
movs
sbb
js
push
aad
push
jmp
push
or
retf
cdq
mov
ror
cmp
adc
adc
mov
fstp
stos
aam
push
pop
sbb
pop
repnz
mov
xchg
push
xchg
test
sar
mov
dec
leave
lahf
adc
pop
push
add
sar
mov
cdq
and
cwde
sahf
dec
xchg
cmp
adc
fisttp
mov
cli
push
stos
pop
mov
shl
mov
xchg
sbb
loop
pop
leave
mov
int3
ficomp
fstp
push
push
xchg
adc
fs
adc
jge
aad
inc
ficomp
cwde
ins
push
xchg
lahf
repz
push
ffreep
pop
jmp
push
(bad)
push
mov
pop
fisub
pop
aad
mov
cmps
inc
das
sbb
pop
or
inc
pop
mov
test
repnz
ds
adc
xchg
mov
cmp
retf
xchg
rcr
push
add
popf
outs
ss
ja
cwde
pushf
mov
pop
pop
repz
aad
rcl
rcr
mov
adc
daa
inc
movs
jl
movs
enter
pop
pop
fcom
fdivr
mov
rcl
movs
adc
imul
in
cmc
arpl
mov
(bad)
adc
outs
cmp
xlat
xchg
fist
fs
push
mov
push
lahf
test
cmc
out
outs
inc
xor
gs
loop
inc
sbb
mov
mov
daa
out
inc
push
jmp
lea
pop
fistp
loope
cmc
in
xchg
dec
jmp
aad
xchg
cmps
mov
pop
es
inc
push
aad
adc
jg
adc
hlt
(bad)
xchg
fs
mov
xor
push
cmp
out
mov
shl
fwait
inc
stos
dec
push
or
jl
dec
xchg
and
xlat
push
dec
loopne
jecxz
dec
cwde
pop
sbb
sbb
xor
test
jbe
lahf
daa
in
adc
xor
xlat
movs
(bad)
mov
jg
sahf
xor
mov
push
(bad)
popf
adc
fiadd
cmp
call
sbb
int3
cmps
pop
xor
daa
popa
cmp
into
in
xchg
or
xlat
mov
or
inc
xchg
xchg
js
push
sbb
xor
mov
mov
in
ss
sub
bound
fwait
pop
mov
aad
neg
push
pop
pop
mov
dec
pop
lahf
mov
pushf
inc
js
fistp
mov
inc
icebp
jmp
stc
mov
pop
xchg
cmps
xor
jb
retf
clc
dec
fwait
xchg
ret
test
call
call
xchg
mov
fwait
or
push
and
mov
cmps
xor
cmps
test
cdq
shl
sbb
popa
xchg
xchg
mov
jg
int
daa
fild
xchg
imul
xchg
retf
out
dec
in
sbb
dec
mov
ds
sbb
pop
cwde
cmp
jecxz
iret
adc
mov
pop
cmc
call
sbb
or
sbb
dec
sbb
stc
leave
sub
and
ror
(bad)
retf
adc
pop
iret
fsincos
mov
pop
inc
cwde
dec
xchg
mov
gs
pushf
inc
mov
cdq
test
test
cmp
push
fmul
pop
sti
stos
xlat
mov
pop
xor
fdiv
inc
xchg
scas
mov
sub
push
xor
jge
cmp
les
inc
sbb
ret
aad
ja
mov
cdq
cmps
sbb
outs
mov
int3
dec
pop
cwde
pop
sbb
fisttp
loopne
push
sub
shl
sar
sub
int3
lods
add
scas
cwde
in
aam
mov
add
aam
jno
inc
in
fcom
rep
popf
mov
retf
mov
(bad)
movs
mov
xchg
or
sbb
mov
cmp
mov
push
lods
addr16
neg
movs
lds
test
ja
stc
cmp
push
add
mov
aas
pushf
or
xchg
retf
dec
sbb
and
rcl
test
push
sub
cmc
mov
lds
mov
iret
push
bound
fisubr
jecxz
mov
shl
cmps
imul
test
test
cmps
retf
iret
sbb
ins
jae
fsubr
cmp
xchg
push
pop
test
jns
pop
cmps
imul
rcr
pop
loop
mov
aaa
stos
ss
ins
mov
cmps
inc
test
push
jmp
popf
bound
adc
fistp
adc
dec
imul
mov
fwait
push
adc
mov
enter
fs
jp
push
cwde
cwde
mov
jecxz
ret
pop
mov
xlat
mov
mov
ror
jns
sbb
test
xchg
cmps
mov
(bad)
cmps
out
mov
or
jge
leave
adc
sbb
xor
leave
fsubr
cmp
fbstp
fdivr
fmul
fadd
xchg
(bad)
adc
dec
xchg
dec
xlat
push
cwde
enter
test
push
jns
cdq
xlat
adc
jecxz
stc
xchg
pop
push
mov
sbb
fwait
inc
xchg
cmps
mov
mov
call
xchg
xchg
nop
ret
nop
fs
sar
mov
jg
mov
xchg
xchg
xchg
cwde
sbb
fimul
cwde
test
push
(bad)
stos
xchg
inc
(bad)
dec
lahf
jp
loope
lahf
push
jb
inc
(bad)
or
or
mov
mov
out
xlat
xchg
enter
pop
xchg
or
loope
and
cdq
xchg
out
inc
xlat
dec
xor
(bad)
jg
pop
cwde
mov
ret
jbe
fst
adc
xchg
cwde
enter
mov
fimul
jb
push
test
and
mov
lods
or
mov
aas
vorps
ja
xlat
das
xlat
push
call
cmps
xchg
add
not
or
adc
add
loopne
mov
rcl
fld
fstp
cli
ret
enter
sahf
ja
jns
dec
mov
test
inc
sbb
xchg
test
cld
lea
jbe
mov
mov
push
(bad)
adc
stos
js
mov
outs
pop
inc
push
jnp
xchg
push
sbb
test
retf
js
adc
pop
inc
pop
cwde
test
fnstsw
cwde
dec
fcom
fnstcw
jle
xor
mov
call
ret
sar
adc
mov
sar
pop
adc
pushf
add
inc
cmp
dec
xor
cmp
xchg
pop
pop
sbb
xchg
mov
mov
xchg
lahf
fisubr
push
aad
push
(bad)
dec
sub
ficomp
mov
js
and
call
mov
jp
and
xchg
xchg
iret
or
xor
jbe
inc
into
aas
iret
adc
mov
sahf
(bad)
mov
jae
xchg
fstp
mov
or
imul
jnp
adc
daa
sub
data16
adc
xchg
dec
xchg
shl
pop
in
sahf
mov
push
mov
mov
xchg
adc
popf
cmp
dec
pop
push
pop
jno
imul
fisubr
clc
(bad)
sub
or
mov
jmp
icebp
pushf
xchg
hlt
add
(bad)
sahf
push
fld
jnp
mov
adc
fwait
or
mov
add
aas
scas
pop
mov
fidivr
call
fsub
mov
inc
push
(bad)
mov
popf
jb
pop
mov
mov
sbb
xchg
pop
xor
inc
shl
mov
pop
pop
xor
repz
cdq
jne
cwde
pop
(bad)
dec
mov
cdq
cmps
cmc
push
pop
fidiv
push
xchg
push
enter
out
fxch
mov
leave
mov
out
lahf
jb
scas
daa
inc
xor
test
repz
dec
and
mov
mov
add
sbb
mov
pushf
push
pop
xchg
jae
cmp
xchg
test
fisub
ja
push
call
or
out
add
call
fwait
daa
sbb
dec
adc
mov
mov
call
es
pop
mov
sbb
rcr
bound
cmp
mov
test
popf
xor
call
test
daa
pop
dec
sbb
(bad)
dec
pop
mov
mov
jp
lods
adc
mov
pop
neg
fwait
xchg
rol
mov
adc
dec
aad
xor
add
push
push
adc
sbb
adc
(bad)
sahf
js
fbld
pop
aaa
fwait
inc
lahf
pop
mov
mov
fistp
cmp
push
pop
xchg
ja
sbb
aam
shl
xchg
scas
xor
mov
fldcw
pop
inc
push
xchg
mov
(bad)
and
dec
sti
mov
fst
mov
pop
test
out
jle
fwait
pop
cmp
call
pop
inc
(bad)
in
ror
push
push
call
cwde
sahf
clc
push
test
mov
pop
clc
jbe
mov
xlat
adc
xor
fldenv
jb
(bad)
cmps
jp
and
fstp
imul
push
fidivr
sbb
or
fcomi
jecxz
mov
mov
mov
jne
xchg
sti
pop
jg
aam
xchg
push
mov
lock
push
and
sbb
dec
jl
lds
(bad)
std
outs
shl
xchg
mov
es
scas
sar
(bad)
fdivr
(bad)
mov
sbb
push
lods
mov
leave
leave
mov
mov
xchg
cdq
pop
push
mov
leave
fst
fwait
out
xlat
mov
retf
fnstcw
retf
fnstcw
retf
fnstcw
retf
fld
mov
pop
leave
test
sbb
xor
pop
fwait
shr
pop
mov
aad
pop
mov
(bad)
mov
sbb
test
(bad)
test
outs
push
cmps
add
push
mov
dec
cmp
fistp
cmp
fstp
push
lds
inc
loop
aad
ret
(bad)
retf
rcr
sub
sahf
cld
inc
pop
ret
xchg
cdq
sbb
and
xchg
jns
xchg
pop
ret
or
loope
sar
fisubr
ficom
push
movs
xchg
in
repz
sbb
mov
xchg
inc
retf
push
fnstenv
mov
inc
xor
jae
cwde
dec
mov
dec
fst
push
xchg
ficomp
je
ja
pop
stc
mov
and
jl
lahf
xor
retf
xchg
pop
dec
sbb
rcl
movs
mov
repnz
pop
fsubr
or
push
xchg
cdq
cmp
or
mov
imul
stos
loope
push
fdiv
(bad)
call
out
cld
jmp
bound
rcr
aam
out
xor
fisttp
imul
push
shr
leave
cmps
or
xchg
jns
je
xchg
imul
pop
xor
pop
add
shl
push
aad
push
push
gs
stos
jmp
push
mov
sub
out
pop
rol
jge
push
push
int
aaa
pop
and
xchg
mov
mov
cmp
xchg
nop
aad
retf
push
xchg
ja
cmp
sbb
ret
mov
sbb
pop
push
sbb
callw
popf
jb
js
push
adc
mov
and
dec
xlat
(bad)
xchg
xor
add
scas
fcom
xchg
es
into
idiv
pop
pop
cmps
and
push
or
push
push
mov
call
inc
push
push
sub
pushf
and
cwde
leave
fwait
xlat
xchg
pushf
(bad)
pop
mov
cdq
jnp
int3
mov
jo
xchg
xchg
fwait
jmp
dec
mov
sahf
mov
fldenv
enter
sub
dec
mov
lock
push
sbb
dec
cwde
ror
cdq
xor
pop
int3
dec
push
pop
adc
daa
pop
add
fist
xlat
aad
adc
aad
aad
mov
dec
sbb
push
sbb
mov
mov
xchg
int
adc
cmps
icebp
stc
nop
mov
xchg
mov
sbb
leave
inc
pop
jnp
push
(bad)
imul
inc
xchg
jbe
shl
mov
retf
sub
not
ja
cmp
dec
push
sub
call
xor
shl
mov
jp
push
sahf
pop
lock
aam
out
sub
pop
enter
fnstenv
xchg
jmp
or
je
nop
addr16
mov
xlat
aad
xor
and
sbb
cwde
mov
mov
mov
xchg
(bad)
xor
sahf
stc
mov
push
popa
inc
addr16
test
dec
pop
out
pop
sbb
inc
pop
out
mov
dec
fidivr
xor
int
jmp
lea
retf
movs
popf
adc
pop
adc
fcmovnu
rcl
sbb
xchg
jae
jne
cld
fwait
mov
cmp
lahf
aad
aam
aad
adc
adc
xchg
movs
adc
cmps
stc
test
es
sbb
or
in
jmp
cwde
inc
pop
sub
aad
push
and
and
aaa
sub
pop
sub
xchg
in
stos
mov
je
daa
jl
sbb
(bad)
(bad)
jae
shl
add
imul
idiv
push
push
iret
sar
stos
xchg
call
dec
stc
add
scas
xchg
aaa
mov
xor
sbb
retf
sar
xor
mov
mov
sbb
xchg
loop
sub
pop
pop
sbb
aam
fcmovnu
push
pop
repz
push
push
aad
out
loop
adc
in
sbb
and
xchg
adc
out
push
adc
nop
sti
sub
fidiv
pop
dec
xchg
mov
clc
push
sti
cmps
fiadd
xor
cmp
adc
imul
dec
enter
mov
js
idiv
xchg
gs
add
sub
pop
or
add
sbb
fimul
sbb
rol
xchg
fcom
outs
popf
mov
fwait
je
js
pop
fwait
mov
rol
repz
fstp
gs
sbb
cli
jp
(bad)
cwde
fld
jno
leave
push
push
rol
and
nop
push
push
fbld
jecxz
fcmovnb
pop
jae
cmps
lahf
cdq
push
pop
aad
iret
test
test
push
pop
imul
stos
push
cwde
popf
pop
adc
pop
cdq
faddp
test
ror
cmp
movs
ret
fwait
push
pop
iret
call
inc
sbb
cwde
stos
popf
cs
xchg
mov
mov
retf
sbb
gs
xchg
push
push
dec
xchg
in
push
inc
xor
inc
adc
(bad)
jge
in
gs
fist
mov
sbb
xor
mul
push
mov
mov
call
xor
scas
popa
fcmove
cdq
inc
jnp
cwde
jle
inc
xor
dec
not
push
jmp
cwde
mov
mov
fsubr
out
ins
cmp
test
fwait
out
or
inc
ss
xlat
xchg
(bad)
cmp
aam
test
aad
aad
sbb
(bad)
retf
jne
cmp
arpl
pop
mov
retf
dec
ret
shr
dec
dec
leave
stos
mov
mov
push
xchg
ja
out
mov
dec
adc
ds
pop
inc
push
sbb
push
inc
aad
adc
(bad)
retf
cdq
test
scas
cmp
inc
xlat
cs
adc
mov
test
fild
push
xchg
mov
dec
mov
fist
cmc
shr
push
call
mov
sbb
js
retf
fst
(bad)
test
call
hlt
xchg
movzx
and
sbb
fstp
push
mov
aaa
xchg
adc
and
sbb
call
sbb
cmp
setnp
imul
fs
mov
rol
cmc
push
mov
mov
fiadd
pop
dec
push
aaa
pop
push
leave
aam
mov
fs
enter
leave
xchg
cwde
retf
mov
mov
pop
cdq
xchg
jae
nop
cli
cwde
inc
stos
pop
xor
fldenv
aad
fidivr
call
fcmovb
push
(bad)
jle
add
ret
pop
xlat
movs
test
retf
xchg
sar
out
std
jbe
push
mov
xlat
inc
cdq
sbb
repnz
sbb
mov
jbe
inc
xor
mov
ficom
cmps
popa
std
enter
fdiv
pop
cmps
or
iret
cmc
ficomp
(bad)
jp
sbb
push
xchg
sbb
frstor
xor
fdiv
clc
or
xchg
cli
mov
or
xor
xor
jbe
repz
dec
inc
and
cmp
sbb
xchg
mov
xchg
jo
retf
cmp
xchg
cli
dec
xlat
shl
sahf
jge
xchg
inc
mov
loope
fcmovnbe
ud1
mov
fwait
sahf
sub
pop
sbb
(bad)
pop
mov
inc
dec
stc
inc
push
dec
cmp
push
jbe
adc
mov
sbb
dec
lea
pop
sahf
or
(bad)
fcom
lods
(bad)
adc
push
dec
cld
retf
aaa
mov
pop
call
js
std
data16
fistp
push
xor
mov
dec
idiv
in
aas
js
not
addr16
inc
push
add
push
jmp
inc
push
cmps
mov
push
pushf
pop
dec
fwait
or
mov
add
pusha
movs
pushf
js
mov
mov
sbb
dec
(bad)
imul
iret
sti
xor
push
jp
arpl
cmps
cmc
dec
sbb
aad
(bad)
js
pop
or
rcr
mov
xlat
ins
or
fstp
mov
pop
pop
inc
cmc
(bad)
sub
rcl
pop
mov
ja
mov
(bad)
fxch
push
aas
xchg
sbb
sbb
aas
call
test
fild
pop
cmp
fcom
mov
add
test
jae
mov
add
mov
cmp
mov
xchg
fwait
add
sbb
cdq
pop
sbb
adc
push
(bad)
movs
push
push
loopne
int3
out
call
idiv
pop
nop
cwde
push
sbb
das
jge
ja
ja
out
cmp
mov
adc
ds
test
push
adc
cwde
movs
fiadd
mov
fcom
push
mov
dec
sbb
mov
(bad)
call
pop
js
dec
cwde
cwde
pop
inc
cdq
ror
stos
je
movs
cmps
call
inc
xor
xchg
popf
rcr
not
ja
mov
adc
jne
js
retf
arpl
xchg
inc
fst
or
cmp
sbb
xchg
push
test
adc
fbstp
push
cdq
push
push
fcomp
mov
call
movs
jne
xchg
jl
aad
fst
push
fist
mov
rcl
mov
call
xchg
or
sub
pop
jbe
fnstsw
retf
cmc
(bad)
ror
push
xchg
mov
push
push
ret
jae
inc
js
jmp
cli
xchg
jae
inc
push
xchg
clc
push
inc
cmp
mov
fld
mov
cli
ja
cdq
fild
mov
sbb
push
fcomp
movs
xor
mov
dec
out
inc
inc
sbb
lock
enter
ins
mov
xlat
inc
mov
dec
aam
out
jl
call
pushf
cdq
arpl
int3
mov
mov
pop
cmp
pop
pop
and
sbb
fstp
je
into
fwait
or
mov
sub
sbb
jmp
fstp
push
into
sbb
mov
sub
cdq
imul
fsub
cmps
push
jbe
retf
cdq
out
push
pop
iret
xchg
sti
retf
sbb
sahf
mov
and
es
mov
mov
sar
adc
jns
pop
sub
out
lahf
(bad)
pop
aam
sbb
push
fld
fsub
pushf
shl
fmul
cmp
(bad)
xchg
adc
outs
mov
enter
jno
mov
adc
ret
int3
xchg
and
popa
xchg
cmp
inc
sahf
jp
fidiv
dec
sti
(bad)
jae
(bad)
jnp
inc
jno
and
fimul
add
repz
enter
dec
push
js
xor
in
sub
cld
adc
loope
jmp
fidiv
xchg
dec
fdivr
mov
dec
out
mov
xlat
fwait
arpl
movs
(bad)
aad
addr16
sbb
sbb
sbb
adc
and
cmp
aam
pop
into
sbb
ficom
add
sbb
sbb
mov
sbb
push
mov
xchg
push
aad
push
(bad)
jl
ja
sub
pop
sbb
cmps
cdq
sub
sbb
dec
jno
inc
pushf
es
fistp
retf
loopne
adc
cli
out
xchg
push
cmps
hlt
xlat
xchg
call
push
mov
mov
out
(bad)
pop
push
pop
ja
out
push
popf
push
or
jne
inc
push
cmp
cmps
cmps
inc
push
push
sbb
cmp
xchg
xchg
cli
and
push
xchg
mov
xchg
jnp
inc
jle
fist
push
pop
push
xchg
push
cmc
mov
dec
push
scas
call
pop
ss
dec
movs
popf
fwait
test
inc
push
sbb
adc
nop
xchg
cmp
xchg
ja
gs
cdq
xor
adc
xchg
xlat
or
xchg
mov
fsub
aad
cmp
cmps
mov
cdq
sbb
(bad)
xchg
push
sbb
xchg
and
rcl
call
stc
sahf
push
std
pop
pop
push
mov
adc
sbb
jb
xor
pop
xchg
pushf
dec
pop
add
inc
out
pop
sub
push
inc
aam
sbb
xor
xchg
push
dec
mov
movs
push
sbb
mov
sub
adc
mov
pop
test
dec
push
fnstcw
cdq
mov
not
dec
cmp
lock
add
call
sbb
add
cmp
mov
mov
imul
mov
xchg
aaa
fstp
adc
fnstcw
pop
fwait
sbb
cwde
call
dec
push
cmps
rol
pop
(bad)
cmp
xor
pop
cmps
call
sub
clc
fwait
jecxz
sbb
xor
nop
repz
imul
out
xor
xchg
mov
pushf
mov
fidivr
arpl
jge
or
sbb
push
mov
ja
push
ds
cmc
out
sar
xchg
jbe
ja
aaa
xor
or
fisttp
call
pop
push
test
xor
xor
jno
mov
pop
mov
cmc
xchg
cmps
push
jp
pop
xchg
inc
cwde
test
inc
xor
xchg
push
ja
add
add
adc
aad
rcl
adc
or
sbb
cmp
push
inc
clc
mov
enter
xor
retf
push
(bad)
jp
lods
mov
retf
mov
sbb
jne
cmp
xchg
dec
pop
inc
daa
pop
inc
xlat
and
or
sub
repz
xor
xchg
xchg
jge
mov
mov
fs
js
xor
je
movs
xor
idiv
mov
cwde
xlat
adc
mov
mov
cmp
lds
sbb
stos
jae
sbb
xor
adc
pop
jg
sti
data16
fwait
push
sbb
push
mov
call
ret
pop
cmp
push
inc
pop
mov
pop
cmp
outs
xchg
cmp
push
inc
fst
int
sub
xor
adc
sub
push
test
fistp
push
mov
std
(bad)
cmp
mov
push
out
call
sbb
popf
mov
adc
sbb
fisttp
sub
inc
pop
inc
mov
call
out
pop
xchg
cmp
mov
and
bound
mov
inc
aas
sub
sti
fnstenv
aad
xor
mov
xchg
sbb
sbb
test
xchg
nop
jg
sbb
sbb
xor
fiadd
or
call
sbb
sbb
lds
cmps
sbb
es
sub
inc
neg
repnz
adc
ja
jmp
jno
sbb
mov
mov
sbb
inc
sbb
mov
fwait
test
stos
sar
xchg
xor
js
inc
inc
cmp
cdq
mov
push
mov
(bad)
in
add
jne
(bad)
mov
sar
cmp
(bad)
cmc
mov
fnstsw
lds
jg
mov
ror
push
movs
icebp
rol
push
xchg
sub
sbb
xor
ins
in
adc
adc
enter
sbb
adc
xchg
push
adc
pop
fld
mov
xchg
retf
(bad)
push
ror
push
sti
stos
adc
int3
out
inc
fstp
leave
hlt
imul
and
test
sahf
mov
sub
lahf
shl
int
hlt
xor
pop
jbe
mov
dec
pop
pop
ja
jbe
call
mov
test
sbb
xchg
xchg
mov
xchg
mov
dec
xchg
in
push
xor
pop
es
retf
outs
inc
je
rol
dec
in
adc
sbb
into
adc
jecxz
mov
mov
aas
add
sbb
pop
fsubr
fwait
inc
jns
push
add
fstp
adc
ror
cmp
mov
sti
push
loop
pop
or
xchg
sub
call
ror
stos
adc
sbb
ss
cmp
int
aaa
sbb
pop
inc
aas
imul
pop
and
push
sbb
xor
or
loopne
ror
fincstp
fbld
fmul
aam
dec
mov
and
inc
xor
push
ja
fdiv
mov
jmp
mov
adc
or
push
xchg
rol
(bad)
fxam
xchg
adc
cmp
adc
fistp
stos
adc
ret
adc
mov
xlat
inc
daa
pop
and
sbb
jle
xchg
jns
fld
adc
mov
nop
cmp
add
adc
stc
push
das
daa
pop
int
push
mov
out
adc
cmc
pop
xchg
outs
fwait
rcl
jmp
cmps
xchg
mov
ins
adc
xlat
nop
mov
xor
and
cdq
fld
cmp
adc
jb
xchg
fdivr
xlat
push
mov
pop
adc
outs
rol
mov
lds
inc
or
mov
mov
(bad)
sub
pusha
cwde
push
fimul
(bad)
xchg
test
pop
(bad)
jb
sub
(bad)
fcomp
ret
mov
pop
push
cdq
jne
pop
xor
aam
cmp
mov
ss
inc
fadd
cmp
jne
dec
call
lods
rol
cmp
add
mov
pop
cdq
add
(bad)
test
retf
out
push
nop
push
loope
sbb
call
xor
cmp
ja
ficomp
mov
nop
cmp
push
dec
pop
fnstcw
push
jp
inc
pop
xchg
mov
push
xor
mov
and
(bad)
int
inc
sbb
idiv
pop
leave
xchg
push
mov
xlat
or
xor
push
(bad)
sar
pop
cdq
cmp
xchg
test
test
jnp
aaa
xchg
jg
cdq
fsub
pop
cdq
hlt
fs
mov
xlat
mov
ret
sub
adc
int
pop
cmp
call
pop
rol
mov
xchg
xor
pop
push
push
sub
frstor
inc
aam
xchg
sub
dec
fstp
xor
jnp
push
xor
test
outs
sub
adc
push
enter
stos
mov
jns
movs
sbb
fidivr
xchg
pop
fwait
mov
movs
dec
cld
aaa
pop
pop
dec
fcmovnbe
in
xchg
mov
push
cmps
test
mov
in
ret
xor
lea
ins
test
push
in
clc
nop
jecxz
push
test
daa
(bad)
cmc
or
cmps
repz
ror
or
push
sbb
dec
lahf
push
sbb
std
stos
push
rol
call
mov
mov
cmc
xchg
pop
fidiv
inc
mul
dec
fisub
sub
adc
push
add
popf
add
ror
push
enter
xchg
mov
test
add
int
test
xchg
xchg
push
adc
fcmovnbe
outs
xchg
lods
push
mov
aad
mov
cmps
cmps
mov
call
adc
retf
or
sbb
cwde
push
pop
pop
push
icebp
pop
push
pushf
adc
push
pop
pop
(bad)
pop
sbb
sbb
add
mov
scas
pop
xchg
adc
xor
hlt
xor
repz
mov
mov
mov
out
xchg
mov
sbb
in
xchg
or
shl
lods
sbb
sbb
shl
fwait
sbb
add
pop
jbe
or
mov
adc
les
pop
push
js
or
neg
mov
dec
inc
pushf
xchg
leave
fcomi
test
lahf
lds
dec
add
sub
sub
mov
fdivr
test
or
push
dec
xchg
cld
xor
xchg
icebp
xchg
test
jg
sti
int3
dec
ins
jg
nop
lods
sub
mov
outs
lahf
sbb
xchg
adc
pop
call
bound
(bad)
jg
pop
jo
test
cbw
pushf
mov
pop
lahf
iret
js
fstp
mov
sbb
cmp
enter
xor
sbb
sbb
cdq
push
stos
sbb
mov
jb
dec
cmps
aas
dec
mov
push
jmp
inc
adc
dec
fwait
dec
fcmovnb
(bad)
mov
cmp
dec
js
push
js
popf
add
mov
test
lds
ss
xchg
mov
push
pop
aaa
out
mov
arpl
xchg
add
cmp
fnstsw
iret
pushf
sbb
pop
sub
dec
cmp
out
xchg
(bad)
cli
push
popf
mov
pop
(bad)
out
hlt
icebp
sbb
mov
push
pop
cmps
(bad)
fchs
addr16
stos
xlat
in
mov
cli
mov
(bad)
push
sbb
pop
call
test
retf
mov
jae
dec
jmp
dec
sbb
xchg
push
aas
add
mov
sbb
cwde
inc
mov
daa
sahf
sbb
sbb
sbb
pop
jle
daa
sahf
or
retf
shr
and
aaa
in
push
pop
or
aad
cmp
pop
sub
cmps
pop
fstp
(bad)
dec
push
fistp
xchg
imul
adc
int
cmp
cmc
xchg
pop
fbstp
mov
mov
pop
cmc
sbb
popa
mov
mov
add
inc
sbb
mov
or
sbb
mov
inc
mov
repnz
jo
lea
or
stc
jo
out
dec
mov
mov
fcmovu
aam
(bad)
inc
pop
sbb
or
cdq
retf
push
ret
mov
inc
fist
pop
xchg
xor
cld
fist
cvtdq2ps
aad
sbb
nop
popf
xchg
fidiv
or
add
aad
sbb
retf
and
jb
push
pop
loopne
push
inc
inc
jmp
pop
imul
inc
in
push
push
mov
(bad)
sub
add
rol
repz
xchg
int3
out
adc
(bad)
outs
inc
sbb
mov
mov
push
push
push
xchg
nop
pop
push
push
ret
push
(bad)
sahf
call
out
in
sbb
aad
jnp
mov
aam
pop
pop
xlat
push
sahf
cmc
sbb
jb
push
push
sub
aad
cmp
push
cmp
push
push
jo
xchg
pop
sbb
mov
xlat
push
cld
mov
xlat
loope
sbb
in
sub
pop
jb
loopne
xchg
retf
sub
aam
xchg
push
sbb
or
in
lods
push
xchg
inc
sbb
mov
retf
inc
inc
push
xchg
inc
fstp
pop
sahf
inc
imul
popf
test
clc
(bad)
cmp
mov
and
pop
sbb
sbb
fs
pushf
call
adc
push
add
sbb
ret
pop
push
adc
cwde
pop
add
push
pop
fmul
sbb
out
fs
xchg
push
call
gs
mov
mov
dec
xor
push
cdq
ret
xor
sbb
fcomp
loopne
push
dec
mov
ret
sbb
adc
adc
push
and
push
dec
imul
adc
(bad)
stos
imul
push
cmp
sbb
inc
cmp
or
test
out
cmp
dec
sbb
jb
cwde
xchg
dec
loopne
push
dec
mov
pop
push
sbb
in
das
push
retf
push
mov
in
jge
push
test
adc
into
hlt
or
pop
pop
adc
or
cmps
adc
cli
in
push
push
jmp
ret
jmp
js
xchg
inc
or
pop
repz
push
rcr
push
push
rcr
inc
pop
nop
mov
xchg
or
pop
mov
pop
mov
popf
rcr
mov
(bad)
sub
ret
retf
fsubrp
scas
in
jno
test
xor
pop
xchg
sahf
sub
in
push
push
rol
mov
mov
xchg
sub
fwait
mov
pop
mov
push
push
shl
pop
push
sbb
push
retf
adc
pop
pushf
xchg
in
sbb
pop
pop
fild
pop
js
mov
sub
shl
out
in
push
push
(bad)
cli
cmps
sbb
jecxz
adc
push
sub
pop
ficomp
fistp
fwait
mov
stos
pop
sbb
cdq
jmp
test
adc
add
(bad)
mov
dec
pop
retf
pop
fistp
or
out
pop
push
(bad)
fs
push
or
(bad)
(bad)
and
ret
cdq
inc
mov
mov
sbb
push
sbb
nop
xchg
cmp
sahf
sbb
neg
repz
retf
dec
mov
aad
(bad)
push
in
push
push
shl
pop
inc
pop
adc
arpl
sub
push
jb
cwde
xchg
lahf
je
int3
cwde
sbb
inc
retf
fucomip
mov
pop
push
push
sahf
int
fldlg2
pop
shl
xchg
pop
push
adc
sahf
push
shl
mov
in
outs
push
push
dec
push
push
(bad)
mov
dec
cmp
(bad)
retf
pop
xchg
in
call
movs
jb
loopne
push
lds
jnp
mov
aad
out
cld
push
push
jbe
xchg
xchg
pop
push
sbb
jbe
das
push
retf
dec
cmps
push
fisub
(bad)
repnz
push
push
rol
mov
mov
xchg
push
sbb
pop
cwde
pop
push
loopne
push
dec
and
stos
fwait
xchg
dec
fisub
and
das
push
retf
aad
pop
pop
call
pop
daa
lahf
rcl
(bad)
jmp
xor
xchg
cwde
xchg
sub
in
push
push
ror
mov
mov
adc
cmps
mov
and
pop
pusha
pop
lods
sar
cdq
ja
je
aad
mov
add
mov
mov
push
retf
call
push
adc
cwde
xchg
(bad)
icebp
push
push
adc
adc
outs
dec
xchg
or
retf
ror
xlat
ret
push
push
ret
push
leave
adc
mov
cli
push
rcl
rcl
int
push
pop
shl
mov
jmp
js
mov
mov
retf
pop
push
push
call
xlat
adc
jmp
pop
ret
push
sub
push
ret
rcl
and
mov
sbb
fs
push
jo
jae
je
push
push
mov
xor
rcl
sbb
push
xchg
aaa
inc
test
sbb
(bad)
sti
int
daa
pop
pop
inc
sti
sbb
xchg
mov
bound
xchg
cli
stos
sbb
retf
pop
stos
xchg
repz
mov
mov
pop
(bad)
pop
fnstenv
(bad)
push
mov
inc
mov
rol
cwde
xor
adc
pop
mov
cli
stos
rol
retf
sbb
pop
ret
push
push
adc
cwde
xchg
adc
mov
cli
stos
aam
mov
xlat
popf
repz
pop
retf
out
pop
test
adc
or
pop
mov
jge
stos
push
out
outs
(bad)
adc
xlat
sbb
nop
sahf
push
dec
ins
sub
push
nop
push
sbb
js
mov
push
push
and
(bad)
(bad)
leave
adc
xchg
pop
in
pop
push
movs
fs
xchg
(bad)
nop
xchg
sub
int
(bad)
dec
fild
popa
push
sub
jo
push
mov
mov
sbb
fs
pop
mov
sar
in
xchg
pop
gs
push
call
cld
push
dec
sbb
imul
sbb
das
push
retf
sub
push
fnstenv
(bad)
or
call
retf
nop
stos
loope
pop
push
jno
pop
sbb
fild
or
jmp
stos
(bad)
in
fst
inc
xchg
sbb
inc
clc
in
push
popa
push
inc
fstp
pop
pop
inc
fcomp
ficomp
fnsave
push
xchg
arpl
in
sbb
push
retf
adc
lods
push
mov
dec
sbb
fs
pushf
jbe
pop
(bad)
out
in
push
push
call
(bad)
test
in
jae
cwde
aad
fs
jbe
sar
arpl
xor
dec
sbb
shl
mov
int
mov
sbb
and
xlat
push
adc
fst
jg
retf
pop
push
push
xlat
xchg
jg
push
pop
sahf
loopne
call
push
dec
mov
icebp
dec
adc
mov
enter
pop
adc
enter
push
inc
inc
pop
sbb
push
mov
cli
stc
fwait
inc
fistp
(bad)
out
loopne
push
dec
(bad)
jmp
aad
ret
aam
inc
xchg
push
mov
inc
mov
cwde
nop
pop
ss
call
stos
xchg
ret
xchg
jp
fldcw
hlt
mov
fidiv
(bad)
pop
push
arpl
dec
push
sub
adc
(bad)
sub
push
test
xchg
es
shl
mov
out
cdq
aad
push
pop
mov
rcl
aad
pop
dec
sar
push
rol
adc
fcom
sub
fnstcw
mov
fsub
adc
pop
pop
inc
fstp
(bad)
inc
sahf
mov
mov
cwde
pop
mov
xchg
sahf
movs
sbb
js
mov
stos
push
rcl
lods
mov
push
dec
push
frstpm(287
adc
sbb
dec
or
cmps
int
in
sub
dec
popf
cmps
sub
inc
mov
pop
sbb
dec
jmp
fwait
aad
call
add
adc
cmps
retf
sbb
std
fdiv
jmp
pop
ret
cdq
push
std
fdiv
mov
fmul
adc
mov
rol
cmps
pop
push
mov
fdiv
pop
push
adc
fadd
pop
rol
int
mov
(bad)
inc
pop
push
fmul
fst
push
xchg
mov
cwde
xchg
push
repz
push
mov
or
out
pop
movs
adc
push
out
push
xchg
mov
call
enter
xchg
(bad)
mov
stos
pop
ret
adc
sbb
push
push
push
inc
push
sbb
repz
nop
fwait
test
push
popf
repz
nop
aad
mov
call
dec
nop
adc
mov
call
retf
pushf
jne
adc
daa
pop
retf
pushf
push
aaa
inc
(bad)
sbb
inc
aaa
sbb
sahf
nop
sub
fdivr
retf
pop
gs
push
xchg
pop
jbe
dec
fcmovnb
mov
push
add
rol
sbb
dec
jbe
push
push
lds
fwait
mov
nop
gs
fnsave
cmp
pop
pop
jmp
ficom
sbb
sahf
push
inc
or
popa
call
ja
pop
mov
cdq
inc
pop
fstp
inc
and
dec
pop
xlat
rcl
pop
inc
nop
inc
pop
push
pushf
nop
stos
sbb
cmp
mov
stos
neg
cwde
cdq
pop
js
push
sbb
xchg
xor
pop
jmp
in
pop
inc
repz
rcl
xchg
fdivr
xchg
push
xchg
sbb
and
call
js
retf
push
mov
adc
repz
nop
nop
and
(bad)
test
retf
sbb
scas
rol
push
rcl
int
adc
or
call
loop
rol
retf
push
mov
mov
fisttp
push
push
mov
sar
retf
sbb
(bad)
inc
or
xchg
cmps
(bad)
pop
retf
push
mov
mov
jle
retf
xchg
pushf
push
add
hlt
adc
push
mov
nop
mov
fwait
js
mov
push
sbb
ret
aad
rcl
inc
adc
ficomp
mov
ficomp
pushf
mov
cli
stos
sbb
dec
adc
xchg
sbb
mov
stos
push
ret
nop
mov
shl
cli
stos
sahf
aam
adc
mov
cli
stos
pop
(bad)
retf
pop
stos
scas
ret
xchg
push
sahf
push
push
les
ficomp
push
mov
push
mov
dec
sub
fnstenv
rcr
cwde
sbb
retf
pop
xchg
loope
sbb
push
not
movs
adc
pop
div
push
shl
ror
jmp
sbb
call
js
retf
push
xchg
leave
ficom
push
sahf
lock
js
mov
stos
adc
(bad)
int
test
inc
(bad)
sbb
repz
push
push
sahf
fcomp
sahf
xchg
mov
cli
push
push
adc
pushf
adc
lods
nop
fdiv
push
push
dec
lods
xlat
ret
adc
push
shl
push
mov
rcr
cmps
sbb
adc
stos
nop
sar
int
fs
push
inc
std
sbb
repz
push
push
sahf
xchg
sub
not
je
test
nop
pop
push
mov
mov
(bad)
test
retf
xchg
gs
ret
(bad)
push
lahf
sahf
cmp
fcomip
cwde
xchg
cmp
push
sbb
mov
dec
fxch
jmp
push
inc
push
xchg
ret
retf
push
ficomp
pop
xlat
adc
rcl
nop
rcr
pop
jb
dec
mov
jmp
ret
push
push
adc
jmp
push
sahf
loop
fwait
js
mov
fst
sbb
sbb
sbb
fs
adc
ret
retf
sahf
or
pop
js
mov
sbb
dec
push
mov
nop
sub
fdivp
cwde
pop
sub
push
sbb
addr16
retf
xor
pop
pop
xchg
stc
sbb
cwde
pop
stc
repz
popf
mov
call
hlt
js
mov
fwait
rcl
imul
leave
cli
stos
pop
jecxz
sbb
add
sbb
repz
push
rcr
call
retf
sbb
test
inc
test
iret
push
cs
lahf
rcl
ins
pushf
sbb
dec
rcr
xlat
push
fiadd
sbb
sar
sbb
retf
aad
cmp
pop
push
outs
inc
push
sbb
repz
nop
pushf
mov
aam
dec
gs
sahf
pop
sbb
repz
xchg
pop
repz
adc
pop
mov
pop
xchg
pushf
sub
pop
pop
ret
xchg
lea
fstp
aas
adc
dec
popf
inc
int3
inc
inc
sti
dec
sub
mov
cwde
inc
jne
movs
mov
xor
popa
mov
inc
cs
mov
pop
sbb
dec
mov
inc
push
mov
xchg
ret
ret
cwde
and
(bad)
mov
sbb
jnp
stos
cwde
(bad)
inc
cmp
(bad)
mov
inc
mov
loopne
adc
ret
jle
lods
fisub
or
cmp
enter
daa
push
inc
test
adc
inc
mov
inc
btc
call
ret
cli
mov
inc
mov
out
push
pop
inc
ret
je
mov
xor
into
ret
std
mov
cwde
mov
call
aad
add
xchg
call
pop
cwde
mov
xor
ret
fdivr
inc
xchg
mov
and
push
mov
inc
pop
mov
lods
and
or
and
pop
test
mov
inc
loop
adc
scas
mov
push
ins
adc
fwait
mov
mov
in
adc
mov
pop
xor
outs
mov
push
sub
les
mov
sbb
inc
aam
add
xor
ret
xchg
mov
inc
pop
retf
jmp
mov
jns
test
xlat
cwde
pop
ss
gs
mov
out
mov
jns
inc
push
dec
ss
xchg
mov
sbb
shr
sub
cmp
push
fiadd
mov
pop
or
cmp
mov
popf
and
jmp
aam
mov
push
inc
add
push
sbb
pop
sub
(bad)
addr16
sti
adc
jb
addr16
pop
jmp
rcl
add
int3
push
push
adc
xor
sbb
test
int
sub
mov
sub
fucomi
sub
jge
sub
push
addr16
(bad)
jmp
push
add
inc
cmp
rol
pop
sub
dec
push
sub
dec
movs
push
out
pop
pop
adc
xlat
push
imul
xchg
mov
imul
test
add
pop
pop
retf
pop
mov
pop
and
fcom
inc
test
mov
sub
push
sahf
push
jmp
push
fdivp
retf
out
pop
mov
loopne
fst
inc
aad
sbb
sub
loope
push
idiv
inc
xor
sbb
arpl
fisubr
loope
pop
pop
ja
cmps
loopne
aad
add
mov
shr
rcl
pop
jmp
xchg
fistp
xchg
pop
pop
adc
mov
push
js
test
int3
mov
hlt
sub
mov
push
call
ins
sbb
mov
or
sub
ins
iret
fwait
out
rcr
aad
dec
push
sbb
push
fwait
loope
fisttp
adc
push
xchg
mov
push
div
xchg
push
addr16
pop
fisttp
loope
push
div
ficom
adc
pop
imul
push
fldcw
fcom
retf
cs
sub
and
fbld
xchg
pop
pop
loope
pop
mul
in
rcr
arpl
dec
push
addr16
aad
fcomi
add
push
push
test
inc
out
rcl
sar
xor
sub
and
and
loop
inc
and
adc
fld
sbb
pop
mov
pop
hlt
mov
push
retf
jmp
mov
sub
cmp
mov
xlat
cmp
rcl
setae
rcl
ins
mov
and
jmp
fsub
pop
lock
cmp
dec
rcr
inc
test
push
test
adc
sbb
push
xchg
push
out
ret
aam
push
push
ins
sahf
fucomip
mov
pop
pop
not
push
xor
mov
aam
xor
pop
xchg
and
jae
pop
call
adc
cmp
cli
(bad)
(bad)
sub
(bad)
adc
inc
cli
pop
in
xor
aam
dec
add
xor
in
std
pop
jmp
pop
adc
cvtpi2ps
gs
push
aam
push
inc
shl
xchg
rcl
adc
repnz
ins
inc
test
adc
into
pop
fisubr
pop
fdiv
fisub
mov
sbb
addr16
fucom
retf
cmp
push
into
pop
retf
out
loope
fst
ja
jl
adc
adc
sbb
imul
jno
adc
cmp
out
mov
loope
pop
test
sbb
pop
clc
sub
shl
loope
aad
lds
adc
adc
mov
jae
nop
pop
jmp
fld
shl
pop
sbb
inc
ret
adc
adc
adc
retf
mov
test
sbb
test
jmp
call
fwait
pop
sbb
xchg
adc
xlat
xchg
sar
pop
push
dec
call
dec
or
inc
test
arpl
mov
cmp
fadd
push
xchg
adc
shl
xor
pop
ja
xchg
test
repnz
fiadd
pop
lock
scas
adc
into
fnstcw
and
sbb
addr16
sub
sbb
mov
retf
pusha
cmp
fild
imul
mov
push
pop
test
jmp
push
aad
stos
fwait
repnz
push
pop
int
cmp
push
sbb
addr16
retf
fistp
cmp
push
(bad)
adc
dec
cwde
fistp
pop
sub
cdq
ja
sbb
loope
rcl
ja
je
adc
mov
pop
and
pop
jmp
xlat
push
lea
adc
xchg
xchg
(bad)
int3
retf
mov
mov
addr16
mov
call
sahf
out
fst
adc
lods
cmp
pop
mov
cmp
fadd
and
jae
mov
loopne
cmp
mov
sub
out
jb
dec
fstp
inc
ds
fabs
xor
pop
ja
pop
jae
fcmovnbe
add
int3
mov
and
pop
fild
addr16
sub
sbb
(bad)
sbb
xor
or
inc
sub
addr16
push
push
adc
mov
adc
or
mov
or
adc
nop
pop
jmp
push
(bad)
idiv
inc
xor
int
sub
outs
repnz
jae
jmp
popf
fsubr
push
ja
pop
sub
mov
mov
jmp
push
shl
retf
out
push
call
(bad)
xchg
lods
adc
nop
pop
jmp
addr16
sbb
pop
loope
push
jmp
adc
cmp
push
sbb
or
jmp
xchg
pop
fyl2xp1
fucomi
arpl
push
fdecstp
add
pop
mov
push
mov
sbb
mov
adc
stos
push
sub
push
loope
pop
test
arpl
pop
fcmove
pop
retf
out
pop
pop
adc
adc
aad
ret
dec
push
sub
xor
(bad)
jae
push
pop
div
fstp
mov
pop
mov
mov
sub
icebp
arpl
mov
loope
shl
mov
push
or
adc
inc
or
push
addr16
xlat
jmp
push
sbb
dec
mov
pop
push
popa
jae
nop
push
jmp
push
(bad)
mov
push
loopne
pop
cdq
push
inc
adc
mov
push
les
retf
inc
mov
mov
push
pop
push
les
push
ror
inc
aam
xlat
inc
mov
inc
std
sub
fstp
cmp
addr16
cmp
push
mov
imul
xor
pop
add
icebp
mov
fld
lods
push
dec
xchg
mov
mov
mov
pop
in
dec
mov
or
adc
sahf
sub
imul
enter
lods
xor
(bad)
cdq
push
push
or
nop
data16
cwde
push
outs
mov
fcmovnu
inc
pushf
mov
cld
mov
enter
pop
mov
pop
retf
jmp
pusha
movs
pop
push
mov
nop
in
mov
push
popf
fld
(bad)
int3
stos
clc
xor
dec
in
(bad)
js
retf
xchg
ins
mov
mov
pop
xor
pop
es
or
and
and
nop
out
jl
pop
push
adc
call
xlat
cmps
push
js
pop
and
mov
fld
mov
(bad)
test
retf
pop
sbb
in
retf
sub
sti
js
retf
daa
int3
retf
(bad)
pop
xchg
in
cwde
xchg
xchg
adc
call
pop
mov
fwait
and
(bad)
and
mov
or
je
lods
fisttp
adc
test
loop
retf
out
xchg
movs
mov
sub
push
repnz
daa
enter
pop
cmps
ror
add
ins
push
js
call
push
pop
outs
or
popf
add
ins
xchg
push
retf
ss
pop
sub
mov
in
nop
fnstcw
retf
sub
retf
test
jp
leave
in
cld
mov
lods
push
adc
mov
pop
mov
fnstsw
js
sub
push
(bad)
fld
es
(bad)
loop
stos
div
js
retf
xchg
jl
es
in
xor
pop
push
dec
or
or
cs
scas
xchg
stos
fidiv
mov
dec
sub
in
int3
stos
sbb
fwait
gs
in
xchg
imul
sbb
xlat
and
pop
js
retf
movs
lods
retf
cs
sub
dec
fs
push
sbb
imul
and
stos
fs
pop
arpl
push
aas
aaa
nop
out
pop
cmps
pop
push
mov
xchg
test
cwde
jle
cmps
mov
mov
inc
fist
int3
push
in
loopne
stos
mov
mov
repz
mov
and
mov
mov
in
push
xchg
repnz
and
stos
ins
shr
sub
out
push
or
rcl
pop
jecxz
retf
stos
mov
jmp
daa
nop
dec
js
retf
jmp
call
add
test
retf
mov
push
das
mov
pop
pop
js
call
inc
retf
cmps
lods
retf
cld
call
(bad)
out
nop
js
retf
imul
pop
imul
or
pop
gs
lods
sar
retf
stos
scas
sub
arpl
pop
fnstcw
stos
adc
(bad)
std
mov
mov
mov
leave
sub
lea
cdq
stos
push
sub
sbb
test
enter
or
arpl
int
ins
dec
xor
cmp
mov
int3
mov
enter
pop
scas
xchg
stos
mov
jl
mov
fild
adc
out
retf
push
jmp
sub
call
pop
retf
lods
mov
pusha
int3
cwde
sub
mov
fcomi
mov
leave
sub
jmp
xor
or
stos
pop
push
push
mov
lods
mov
pop
push
js
retf
ror
or
ret
jmp
pop
sbb
loope
jmp
mov
cwde
mov
cmps
sbb
xchg
scas
mov
in
stos
sti
inc
pop
lods
push
rcl
sub
cld
mov
mov
cwde
int3
or
rol
pop
mov
in
pusha
mov
loopne
inc
mov
daa
lods
push
sbb
push
jmp
mov
movs
test
mov
or
cs
mov
pop
call
pop
popa
cwde
int3
nop
js
pop
loopne
stos
push
clc
xlat
or
js
retf
or
daa
daa
mov
leave
bound
icebp
cmp
dec
js
retf
push
retf
sbb
in
xchg
and
mov
mov
fisttp
int3
stos
pop
mov
sub
or
pusha
leave
jecxz
into
repz
push
jmp
aaa
add
dec
add
inc
mov
mov
stos
lods
push
jle
sub
das
pusha
and
adc
mov
mov
sub
mov
nop
in
test
or
adc
enter
or
retf
xor
in
adc
or
add
dec
cmps
or
call
pop
cmps
mov
mov
hlt
ficom
jbe
pop
jne
cdq
mov
jns
dec
pop
es
cld
scas
jp
fmul
stos
stc
dec
pushf
pop
int3
(bad)
addr16
outs
adc
in
mov
jns
retf
mov
enter
pushf
sub
movs
jbe
dec
cli
pop
sbb
mov
repz
cdq
(bad)
fstp
lahf
(bad)
jns
(bad)
test
add
fist
js
push
fcomp
les
mov
cwde
call
test
int3
dec
aam
sub
ins
mov
sbb
sub
dec
mov
pop
int
ins
pushf
mov
xchg
call
jnp
(bad)
(bad)
xor
ins
cmp
jl
retf
mov
jmp
fcmovnu
sub
dec
movs
pop
mov
retf
addr16
mov
pop
jmp
xchg
pop
push
dec
jle
je
fist
xor
pop
fistp
cwde
out
xchg
(bad)
mov
dec
ins
pushf
or
fcmovne
aad
mov
dec
ins
pushf
or
fcmovne
aad
mov
imul
or
push
stos
fidivr
pop
stc
in
imul
push
sub
data16
jl
mov
fdivp
movs
movs
sub
fs
xlat
or
dec
cmps
xchg
cli
or
ins
ja
daa
pushf
push
dec
dec
pop
repz
mov
sti
aaa
stc
mov
pop
sbb
dec
xchg
push
fcomp
mov
lds
pop
xchg
push
or
mov
movs
pop
mov
mov
hlt
scas
sar
aad
sbb
inc
mov
mov
jmp
jecxz
cli
stos
adc
mov
push
adc
adc
sub
push
pushf
retf
pop
mov
aaa
xchg
into
pusha
mov
sub
test
mov
test
dec
jmp
cmp
mov
sub
call
pop
cli
sbb
fiadd
cmp
mov
ins
popa
mov
stos
out
push
cmp
fwait
jmp
fcmovnbe
stc
retf
push
js
mov
pop
cmps
int3
sbb
xchg
sub
fisubr
sar
and
retf
fidivr
dec
lods
cmp
mov
pop
imul
out
sub
mov
jmp
pop
fwait
add
retf
aam
test
clc
sbb
nop
(bad)
stc
xor
jbe
mov
add
jg
stc
push
addr16
fstp
xchg
fcmove
aam
stos
adc
leave
mov
neg
mov
rcl
mov
mov
cmp
push
dec
sbb
pop
pop
imul
jnp
dec
add
dec
mov
mov
mov
push
stos
cmp
in
mov
sahf
gs
in
ret
adc
mov
sahf
mov
pop
adc
pop
cmp
and
out
dec
imul
adc
push
dec
mov
nop
push
ret
shl
pop
mov
or
mov
fidiv
sub
retf
adc
adc
in
ret
adc
ret
adc
push
in
adc
sbb
jmp
mov
nop
cwde
in
cld
and
imul
nop
out
jp
xchg
(bad)
push
bound
nop
in
ret
or
test
pop
cmp
test
fist
cmp
nop
dec
mov
cmp
clc
mov
test
je
imul
test
lds
test
sub
xchg
in
out
gs
inc
repnz
dec
(bad)
adc
mov
mov
dec
imul
ja
frstor
aaa
mov
adc
xchg
mov
push
xor
rol
sbb
dec
ja
adc
nop
mov
nop
ret
cld
xchg
repz
or
in
sub
push
inc
xor
mov
xchg
enter
mov
es
ficomp
das
aas
enter
fwait
sbb
aaa
dec
sar
xor
mov
fcom
ret
in
retf
cdq
mov
push
in
or
mov
sbb
mov
call
test
mov
aas
pop
jo
ret
sbb
aad
mov
jb
push
dec
push
ins
and
fisttp
sbb
mov
rcl
idiv
sub
mov
xchg
sbb
jmp
cmp
sbb
lahf
mov
sbb
nop
int
and
mov
mov
mov
sbb
mov
stc
iret
clc
push
mov
nop
mov
jmp
add
or
jmp
inc
xor
push
push
pop
mov
xchg
pop
lds
push
sar
mov
fimul
sbb
adc
mov
and
not
fldenv
or
pushf
xchg
xor
mov
nop
inc
sbb
adc
push
pusha
fmul
jmp
xchg
jno
xchg
push
in
dec
xchg
adc
cwde
inc
nop
cld
and
arpl
fwait
sbb
mov
sbb
fld
mov
mov
inc
adc
inc
stos
xchg
cdq
fldenv
fcomp
ja
rcr
adc
ficom
push
xchg
pop
fcmovne
inc
jnp
adc
cwde
mov
push
push
nop
sar
xchg
xchg
ret
nop
adc
mov
dec
xor
cmp
mov
sbb
push
dec
fwait
sbb
fcmovnb
push
dec
push
sbb
sbb
mov
xchg
push
in
inc
adc
nop
mov
dec
mov
mov
nop
mov
dec
dec
or
xchg
lea
push
sbb
inc
mov
mov
mov
push
in
pop
nop
stos
lock
out
call
nop
sbb
xchg
out
stos
sbb
addr16
out
sbb
push
repnz
sbb
fisttp
pop
or
dec
mov
in
mov
scas
xor
dec
dec
sbb
mov
mov
sbb
push
daa
call
jo
sub
cld
nop
xor
mov
jae
and
ins
fmul
pop
fwait
push
mov
inc
pop
mov
or
mov
cdq
xor
jbe
xchg
adc
shr
sbb
dec
popa
push
push
sub
adc
dec
in
nop
xor
inc
data16
cdq
daa
mov
(bad)
mov
shl
adc
aaa
inc
not
clc
dec
call
repz
icebp
fisttp
fnstsw
sub
inc
fistp
mov
sbb
retf
pop
outs
lahf
fsubrp
xor
dec
ret
hlt
dec
loopne
pop
fldenv
test
cmp
dec
or
jmp
pop
lock
out
pop
xor
dec
pop
scas
rcr
retf
fimul
sub
ins
dec
lods
aam
dec
rcl
jge
jo
fstp
dec
lea
cmc
or
outs
push
sahf
adc
pushf
cmp
or
cmp
push
repz
cmp
jne
out
jbe
aaa
push
(bad)
rcl
xchg
mov
sbb
loop
dec
xchg
add
rcr
sbb
jp
push
cmp
movs
sub
rcr
pop
and
mov
mov
lock
inc
and
or
out
mov
call
lahf
adc
nop
push
inc
pushf
dec
cmps
and
mov
dec
sbb
or
push
xchg
mov
ins
(bad)
dec
stos
jnp
adc
sbb
lds
call
mov
shr
push
sub
xchg
pop
mov
aam
sub
out
push
sub
and
stos
fs
fild
addr16
fldenv
adc
dec
xchg
xchg
fidivr
pop
mov
nop
adc
arpl
cmp
stc
shl
pop
cmps
mov
sahf
sbb
mov
cmps
push
rcl
or
push
push
rcr
add
popf
cmps
not
fild
mov
xchg
xlat
xlat
sbb
push
loope
nop
pause
out
cmp
in
nop
in
retf
adc
fwait
mov
sub
pop
test
pop
rcl
sar
mov
shl
(bad)
fwait
mov
adc
sar
jecxz
cmp
lods
inc
cmps
mov
nop
and
sub
call
push
cwde
sahf
repnz
gs
stos
pop
adc
mov
xchg
xor
or
inc
aaa
call
dec
sub
retf
rcr
call
cs
xor
add
sbb
sbb
jne
addr16
pop
mov
cdq
xchg
ins
fisttp
shl
shl
pop
popf
retf
in
pusha
pop
fcmovnu
push
imul
jnp
xchg
pop
aaa
(bad)
shl
sub
sbb
loop
push
sbb
nop
in
stc
mov
pop
lahf
mov
rcr
push
jae
xchg
xor
mov
pop
pop
mov
stos
popa
data16
pop
stc
dec
cmp
mov
pushf
mov
xlat
mov
mov
shl
dec
cld
and
dec
pushf
inc
shr
xchg
frstor
pop
mov
sub
shl
mov
jae
call
pmaxub
and
scas
xor
push
dec
enter
dec
rep
cwde
stos
add
mov
cdq
dec
fcmovb
mov
jb
in
ficom
shl
sbb
inc
lock
mov
push
out
mov
inc
adc
in
sbb
mov
and
and
dec
fisttp
sbb
out
fdivr
ja
aas
push
repz
sbb
xchg
xchg
nop
test
adc
imul
mov
fdivp
nop
repnz
dec
cmp
pop
jg
nop
ret
sbb
cmp
in
repz
imul
push
rcl
ficom
in
fdiv
cmp
lea
mov
rol
nop
call
xlat
jecxz
jne
dec
mov
test
ret
jns
sub
dec
jecxz
lahf
cmps
jbe
jo
inc
mov
cld
fucomi
mov
push
cmps
push
out
stos
arpl
out
sbb
push
mov
mov
xchg
nop
add
fiadd
push
out
or
fstp
pushf
inc
rol
or
sar
sbb
fisub
lahf
out
inc
fld
push
pop
sbb
sbb
mov
xchg
nop
add
faddp
sbb
cmp
jp
pop
pop
xchg
and
dec
or
fcmovu
jmp
mov
sbb
vminss
cdq
enter
aad
pop
repz
rcl
inc
fwait
sbb
imul
stos
push
pushf
add
cld
xchg
pop
nop
cs
adc
push
test
rol
fcomip
out
sub
mov
push
sbb
ret
pusha
scas
popa
and
mov
dec
dec
fimul
sbb
push
nop
push
pop
aam
ss
cmp
lahf
icebp
nop
and
cdq
xchg
xor
add
sbb
addr16
mov
out
into
xchg
push
dec
fwait
sbb
adc
lds
fst
fisub
test
retf
push
add
mov
inc
fwait
sbb
imul
sbb
mov
movs
scas
sahf
mov
xchg
mov
inc
ficomp
xchg
(bad)
aam
(bad)
frstor
cmp
fmul
dec
sbb
jae
mov
adc
xchg
int3
sbb
bnd
ds
fnstenv
(bad)
pop
aaa
orps
add
repz
adc
add
xor
xchg
ret
mov
pushf
popf
cmp
xchg
nop
inc
in
sbb
inc
mov
jae
int
xor
push
xchg
stos
nop
and
mov
push
jb
enter
int
adc
ret
sbb
push
cwde
sub
pop
rol
dec
sbb
mov
and
pop
sbb
add
cmp
fidiv
mov
nop
add
mov
pop
push
fstp
and
addr16
lods
sbb
sti
push
push
test
xchg
push
adc
(bad)
xchg
shr
out
add
dec
sbb
push
rcl
mov
xchg
jae
pop
nop
or
xchg
mov
xchg
or
sbb
push
sbb
xchg
fild
stos
adc
adc
aaa
and
push
rcr
cmps
int3
and
mov
mov
sbb
sub
mov
sbb
test
int3
xchg
sbb
fwait
dec
cmc
inc
rcl
dec
sub
mov
retf
dec
mov
sti
into
out
add
ja
cwde
adc
inc
mov
mov
call
cmp
push
push
icebp
fistp
fcmovu
mov
lods
fcmovbe
cwde
int3
cld
and
pop
jl
pop
fsub
pop
xchg
push
fstp
jmp
fmulp
ins
nop
sar
int3
fs
js
int3
loopne
int3
rcl
test
stos
pop
retf
fwait
pop
test
sbb
pop
dec
in
pop
lahf
pop
or
cmp
sbb
clc
jmp
fcom
jmp
sbb
stc
mov
popa
(bad)
push
xchg
scas
add
jmp
adc
mov
aad
xchg
push
or
xchg
loope
cmp
mov
push
or
daa
sbb
push
xchg
call
xchg
loope
fwait
sub
fisttp
fstp
push
js
sbb
push
xchg
sbb
push
pop
ret
pop
repz
jmp
add
das
dec
sub
mov
repnz
pop
mov
push
pop
push
lds
pop
or
mov
xchg
ss
xchg
pop
arpl
push
inc
cwde
pop
xor
retf
in
stos
imul
test
mov
rcl
rol
cmps
mov
mov
pop
arpl
adc
pop
adc
push
push
dec
(bad)
fimul
pop
sahf
or
cmp
xchg
jmp
xchg
push
fcmovu
and
add
pushf
sbb
xchg
mov
cmp
inc
fistp
lahf
lds
adc
and
sbb
xor
dec
pop
ficomp
sbb
pop
xchg
iret
jnp
xchg
cmp
pop
into
push
push
xchg
xchg
into
pop
push
push
inc
cmp
inc
fndisi(8087
sbb
imul
push
inc
sub
and
xchg
pop
dec
stos
icebp
pop
push
mov
mov
ror
xchg
push
push
mov
or
stos
xchg
dec
and
push
xchg
cmp
xchg
add
ss
mov
dec
sbb
xchg
and
adc
mov
adc
dec
cli
xchg
mov
rcr
push
pop
pushf
or
and
push
test
and
mov
pusha
(bad)
mov
pushf
imul
xchg
pop
leave
jae
push
aaa
sbb
daa
aad
adc
push
dec
pusha
sbb
dec
jmp
ror
mov
ja
nop
adc
sbb
mov
xchg
xlat
ja
jg
(bad)
xchg
mov
ds
xor
pop
call
or
call
pop
cli
or
test
add
mov
fwait
cmp
cmp
lea
xchg
mov
push
xchg
push
lock
pop
xchg
mov
adc
cwde
mov
fcmovnbe
scas
cmp
iret
dec
aam
dec
stos
pop
pop
shl
fcmovnu
mov
inc
jb
sbb
mov
sub
xchg
cwde
mov
push
fist
xlat
push
(bad)
bound
sbb
jl
ds
pushf
sahf
jge
pop
dec
cmp
jns
fwait
sbb
xlat
sbb
shl
test
ins
lahf
push
xor
xchg
mov
push
aam
cli
sbb
mov
pop
test
add
adc
push
dec
or
ins
pop
push
add
ret
mov
ss
ror
mov
and
dec
sub
adc
js
lahf
adc
pop
mov
jmp
inc
xchg
(bad)
repz
sbb
dec
push
cmps
adc
pop
pop
mov
push
xchg
pop
popf
sbb
jp
cwde
aam
lds
lds
cmp
xchg
loope
pop
xchg
pop
lock
jb
sub
push
fwait
loop
adc
sub
pop
pop
jecxz
call
nop
mov
sar
mov
aad
xchg
idiv
jno
ret
xchg
aaa
aas
push
dec
fistp
xchg
popa
cdq
popf
in
mov
dec
dec
xchg
xor
mov
xchg
mov
adc
iret
(bad)
pusha
xchg
stc
(bad)
call
xor
mov
sbb
xchg
push
pop
push
adc
fstp
inc
xchg
push
add
fdiv
push
pop
mov
mov
call
adc
mov
repz
sar
xchg
call
push
push
movs
add
dec
sub
pop
sub
pop
ins
push
xchg
mov
adc
mov
xor
push
inc
add
cdq
jl
clc
xlat
mov
xchg
enter
stos
push
mov
daa
mov
pushf
aaa
sbb
loop
popa
sbb
jle
cli
in
sbb
mov
mov
pop
jmp
cmp
mov
clc
sar
push
scas
jp
dec
(bad)
xchg
dec
scas
adc
pop
inc
pop
mov
mov
(bad)
mov
repnz
hlt
or
shr
data16
int
jae
add
push
cmp
xor
icebp
push
mov
rol
pop
mov
pop
popf
sbb
call
sub
mov
jmp
or
addr16
xchg
arpl
jle
ins
xchg
inc
sahf
mov
mov
push
ds
lods
mov
call
xchg
out
pushf
ins
sar
pushf
fcmovnbe
retf
rcl
mov
pop
pop
xchg
mov
push
mov
(bad)
dec
call
fst
mov
dec
or
jge
sahf
daa
and
push
(bad)
push
or
nop
xor
sub
jp
inc
jno
inc
cld
dec
sbb
mov
xchg
ja
hlt
fs
fld
fcmovne
leave
fnsetpm(287
stc
cdq
sub
push
dec
ins
popa
enter
sbb
cmp
xchg
push
fcom
jae
(bad)
int3
call
xchg
lods
xchg
fs
pop
pop
adc
ret
xlat
xchg
lahf
loop
je
not
push
(bad)
sub
mov
(bad)
xor
mov
jmp
mov
pop
loopne
sbb
sbb
dec
push
xchg
add
sbb
repnz
mov
sbb
jmp
call
jns
xchg
out
fisttp
sbb
xchg
adc
xchg
xor
adc
sbb
mov
xchg
movlps
mov
xlat
jmp
add
mov
fst
pop
push
jb
pop
push
pop
cmp
rcl
mov
sub
psrlq
sbb
sbb
mov
ds
cdq
fidivr
pop
inc
cld
adc
add
pop
rol
lods
popf
imul
mov
and
pop
lds
inc
dec
sub
pop
out
ds
mov
jnp
pop
sahf
adc
or
adc
cld
sbb
or
(bad)
push
pop
add
aaa
sahf
sub
and
sahf
pop
fdivr
dec
aaa
adc
fidivr
mov
inc
pop
nop
out
or
jecxz
inc
shl
ror
fld
shr
fldcw
inc
xlat
enter
inc
cwde
sub
into
xchg
pop
cs
lds
cmp
enter
adc
pop
shr
mov
mov
inc
xchg
pushf
ins
fstp
fdivr
stos
rcr
nop
aam
pop
inc
cld
fwait
loope
ficom
out
push
mov
fisub
xchg
fisttp
shl
fiadd
imul
outs
nop
adc
ja
cmp
jmp
ins
mov
push
sub
shl
pusha
fwait
jmp
lods
push
inc
dec
pop
push
retf
(bad)
(bad)
pop
imul
push
inc
fidiv
cmp
inc
(bad)
push
add
xchg
and
addr16
push
mov
imul
aad
pop
leave
push
cmps
sbb
movs
sbb
pop
xor
sbb
pop
pop
enter
inc
call
adc
mov
jno
(bad)
in
adc
mov
sbb
dec
pop
xchg
(bad)
cdq
bound
idiv
sub
xlat
movs
adc
inc
cld
repz
mov
jmp
dec
pop
pop
and
push
cmp
xchg
add
mov
imul
inc
pushf
bound
int
mov
xlat
inc
push
loope
rcl
stos
fistp
out
mov
mov
pop
out
pop
lahf
call
lahf
sbb
jl
(bad)
sbb
lds
repz
push
lock
cmp
inc
sbb
sbb
push
ret
stos
mov
pop
xchg
dec
mov
fisttp
aam
inc
or
mov
sbb
jbe
sbb
inc
adc
jae
test
(bad)
sbb
or
pop
pop
and
push
cmp
fld
or
fist
and
bound
or
push
aad
inc
xor
mov
or
xchg
jmp
ficomp
push
xchg
mov
mov
fidiv
xchg
aam
add
jmp
and
ins
dec
lods
xchg
xchg
cmp
pop
inc
and
adc
les
fidiv
inc
fst
xchg
inc
sub
mov
pushf
and
test
dec
inc
xchg
mov
lahf
(bad)
lea
adc
in
in
or
retf
(bad)
add
sub
sub
fcomi
(bad)
fst
sub
mov
or
cwde
sbb
dec
sti
cmc
in
jnp
mov
pop
xor
sub
mov
hlt
fstp
inc
nop
inc
dec
cmc
pop
push
rol
mov
or
test
push
jp
shr
pop
push
pop
mov
cmps
xor
stc
test
add
dec
xor
mov
mov
mov
sub
mov
sbb
aam
mov
push
xchg
sahf
adc
mov
mov
jp
cdq
add
push
icebp
mov
in
sbb
dec
jnp
rcl
jecxz
stos
es
mov
or
xchg
cwde
push
iret
dec
cwde
xor
sahf
and
arpl
sbb
jnp
sub
sar
retf
adc
aam
sbb
pop
adc
sub
pop
or
cdq
or
xor
(bad)
call
aam
cdq
xor
(bad)
(bad)
cmp
popf
shr
sub
push
jge
push
cmp
adc
xchg
and
in
jae
push
xchg
cmp
push
test
pop
sbb
push
push
stos
xchg
add
inc
ror
not
(bad)
inc
xchg
(bad)
out
inc
retf
fst
pop
or
xchg
popf
pop
lahf
mov
in
xchg
mov
xchg
cdq
cdq
push
cmp
rcr
mov
lods
cwde
cmp
or
les
gs
stc
add
cwde
lds
arpl
fadd
scas
xchg
ficomp
xor
inc
inc
jg
xchg
mov
inc
out
sbb
mov
xor
mov
sbb
sbb
push
xor
pop
xor
stos
or
jae
ss
xchg
fnstcw
outs
xchg
push
jge
fimul
xchg
jg
popf
xchg
(bad)
jmp
mov
mov
sbb
sbb
imul
stc
sti
mov
retf
fnsave
out
mov
sbb
pop
xor
movs
xchg
jbe
mov
jmp
ins
sar
lods
mov
sub
ins
pop
(bad)
cmp
std
stos
xchg
mov
dec
cwde
pop
dec
or
sub
fadd
(bad)
js
stos
retf
or
xchg
jmp
sbb
test
int
mov
retf
pop
sti
and
adc
fsubr
mov
or
out
test
cmp
push
sub
or
sbb
push
fcmovnu
sub
retf
mov
sub
xchg
mov
call
mov
pusha
cmp
push
dec
push
jl
clc
imul
jb
pop
sub
(bad)
xchg
or
stos
pop
sub
sub
dec
cdq
mov
leave
push
pop
(bad)
jns
fdivr
cmc
jmp
xchg
adc
xchg
int
mov
aad
push
or
cmp
imul
or
leave
jge
jno
mov
adc
and
xchg
popf
aad
mov
pop
fs
add
data16
xor
xlat
cwde
pushf
dec
std
fist
je
sub
stos
xor
leave
mov
fsubr
jb
pop
cld
xchg
push
pop
jb
inc
cmc
mov
cdq
add
jmp
in
dec
push
aas
sbb
push
test
dec
std
mov
fistp
je
push
retf
mov
sbb
pop
mov
shl
add
mov
enter
pop
cli
mov
lock
lods
daa
cmps
retf
sar
fmul
mov
push
fsubr
mov
dec
mov
test
sbb
mov
xchg
push
sub
or
rcl
fcom
lahf
fstp
adc
in
fmul
shl
adc
(bad)
mov
mov
fld
push
push
mov
xchg
mov
xor
retf
dec
mov
dec
dec
dec
jo
dec
pop
push
test
mov
(bad)
xchg
adc
xchg
dec
xor
push
dec
pop
push
xchg
pop
sbb
and
mov
sub
sti
retf
aad
push
dec
jne
mov
jne
dec
cwde
cmp
dec
div
hlt
stc
cmps
xlat
sahf
pop
out
aad
ror
push
leave
(bad)
cmps
xchg
jmp
retf
in
cmp
fsub
scas
adc
call
cwde
mov
mov
(bad)
mov
loop
pop
fstp
out
xchg
xlat
cmp
out
test
fisub
dec
pop
and
(bad)
cmp
jmp
je
cmp
pop
or
mov
int
retf
retf
bound
mov
aas
mov
xlat
push
test
int3
dec
aad
or
(bad)
retf
cmps
dec
stos
retf
(bad)
bound
movs
mov
ins
fld
push
add
pop
shl
mov
pop
mov
stos
lods
or
ret
inc
(bad)
sbb
mov
pop
inc
stos
lahf
sbb
mov
sahf
inc
stos
scas
or
inc
fisubr
cwde
mov
lods
or
fcomp
iret
sahf
sti
mov
test
gs
fst
dec
fistp
mov
push
ins
stos
ret
(bad)
inc
fcmovne
bound
pop
enter
push
mov
inc
aam
sbb
repz
lea
test
stos
and
fwait
push
(bad)
mov
inc
pop
pop
stos
ret
xor
cwde
mov
popf
call
cmp
inc
(bad)
test
mov
aad
pop
enter
push
mov
dec
add
sub
stos
pop
jp
clc
push
sbb
pop
or
js
(bad)
js
jae
call
jae
and
jnp
pop
jo
outs
iret
pop
dec
ins
mov
mov
sbb
push
jae
cmp
fwait
mov
inc
imul
pop
nop
inc
sub
imul
mov
push
sbb
jns
mov
mov
push
fstp
shl
sbb
ja
mov
rcl
stos
push
sti
push
addr16
ja
ficom
mov
sbb
fcomp
mov
sub
add
stos
mov
xchg
retf
xchg
adc
push
stos
iret
mov
retf
push
or
and
push
cdq
mov
sbb
(bad)
pop
pop
dec
xchg
inc
mov
cli
push
bswap
cmps
(bad)
std
mov
push
add
cmps
sub
data16
pop
xchg
popa
mov
cdq
push
pop
jl
jno
dec
add
mov
ins
je
cmp
dec
je
repnz
ror
xchg
mov
mov
add
sub
push
test
cdq
sub
mov
in
fwait
retf
xchg
xchg
repnz
jbe
sar
or
pop
ins
int
mov
jmp
push
cdq
adc
sub
sbb
test
mov
mov
leave
jnp
mov
push
add
js
loop
or
stos
push
into
nop
adc
add
iret
push
ja
push
test
mov
cmp
retf
xor
add
mov
pop
cmp
retf
imul
pop
adc
push
cmp
pop
out
xchg
push
cmp
bound
retf
test
retf
adc
rol
bound
sahf
mov
dec
jg
or
push
mov
cmps
inc
retf
mov
jns
es
or
mov
test
retf
inc
xchg
pop
stos
push
ret
mov
cwde
in
stos
rcr
xor
mov
call
ins
jmp
ret
repnz
sub
xchg
jp
stos
add
gs
pop
shr
mov
xor
pop
mov
and
clc
mov
push
sbb
xor
push
cmp
nop
inc
pop
sub
mov
push
fstp
loop
pop
pop
mov
clc
xchg
mov
push
or
jae
stos
call
xchg
mov
call
cmp
je
adc
dec
mov
cwde
inc
push
test
stos
mov
stos
out
fldz
fild
mov
test
stos
ret
rcr
fstp
repz
retf
leave
or
sbb
and
sar
or
in
jmp
repz
std
xchg
push
sub
xor
pop
cmps
adc
aad
sub
les
in
test
push
xchg
in
mov
fwait
xor
aaa
shr
push
leave
fwait
xor
mov
fwait
test
push
push
movs
das
dec
addr16
dec
rcr
mov
dec
sar
jb
mov
pop
cld
in
cdq
addr16
jno
retf
mov
push
(bad)
dec
outs
je
out
pop
pusha
pop
push
leave
retf
add
dec
jecxz
jg
nop
or
(bad)
push
leave
dec
in
cmps
pop
sub
push
leave
dec
jecxz
leave
dec
sub
xchg
mov
leave
ror
push
(bad)
pop
shr
xchg
fcmovnu
sub
in
ja
mov
ror
hlt
dec
cmp
jns
pushf
jmp
add
imul
ret
inc
nop
mov
cmp
jg
aaa
xchg
mov
shr
call
test
retf
fucomp
jb
dec
mov
mov
cmp
addr16
ja
pop
pop
imul
gs
neg
imul
icebp
ja
out
pop
mov
fwait
jns
pop
test
mov
xchg
cmp
addr16
mov
(bad)
fwait
test
mov
sbb
cdq
sub
mov
cdq
jns
add
mov
ret
cmps
mov
clc
mov
mov
leave
inc
xchg
mov
dec
ror
xchg
pop
nop
aad
xchg
push
dec
sbb
push
leave
test
push
and
cmp
push
inc
sbb
sub
mov
pop
push
dec
inc
xchg
cmp
push
inc
sbb
sub
jns
sbb
inc
stos
es
test
inc
outs
add
out
enter
mov
shr
add
push
push
jmp
push
call
js
loop
fidiv
test
xchg
cwde
jg
push
icebp
jle
push
retf
fst
inc
stos
push
sbb
test
mov
pop
mov
sahf
cmc
mov
or
cmp
inc
je
sbb
mov
xor
sbb
aad
test
js
fist
adc
div
js
push
mov
pop
push
test
sbb
neg
mov
pop
or
or
jno
sbb
or
jae
push
out
lods
mov
pop
fs
add
test
sbb
push
test
fs
jne
test
popa
addr16
ja
sbb
nop
cdq
pop
addr16
push
cmp
cdq
xchg
push
or
addr16
push
inc
(bad)
jns
cwde
or
xchg
in
test
jns
xchg
cdq
in
addr16
xor
jmp
leave
jns
cmp
mov
mov
test
pop
call
retf
mov
add
xchg
adc
and
imul
fwait
push
xlat
sahf
in
pop
push
sar
pop
pop
out
aam
int3
cmp
imul
mov
cdq
push
push
xor
pop
fiadd
mov
out
mov
cmp
push
out
sbb
retf
mov
retf
jo
sbb
dec
cmp
test
repz
test
mov
stos
xor
xchg
and
call
cmps
pop
retf
retf
(bad)
iret
xchg
test
push
pop
adc
inc
retf
mov
xor
sub
push
xor
pop
(bad)
in
xchg
dec
and
jo
lea
test
adc
mov
pop
cmp
repz
mov
mov
enter
ins
bound
pop
adc
dec
sub
push
pop
bound
lds
call
iret
push
outs
pop
push
test
cmp
pop
dec
(bad)
or
cdq
sub
push
sbb
sbb
add
inc
sub
cmp
mov
ret
clc
mov
cmp
jmp
sub
fld
(bad)
(bad)
xchg
rcr
imul
mov
jmp
pop
out
fst
mov
mov
jbe
push
stos
xor
mov
fwait
mov
mov
aam
fdivr
mov
nop
test
mov
sbb
dec
cmp
les
pop
rdtsc
js
cmps
test
scas
adc
xchg
retf
mov
mov
loop
cmps
fild
mov
call
push
mov
dec
pop
cld
jns
dec
fld
dec
push
xchg
cmp
xchg
cmps
jmp
mov
ja
imul
jmp
sbb
es
jno
inc
addr16
fcomp
nop
aaa
push
sbb
jo
sbb
add
movs
push
add
mov
sub
repnz
mov
mov
loop
mov
addr16
inc
cld
loope
rol
mov
retf
mov
pop
dec
ret
(bad)
dec
scas
nop
test
mov
jns
adc
xchg
retf
stos
(bad)
mov
loop
sub
mov
push
mov
retf
mov
push
dec
lods
dec
mov
stos
adc
xchg
fs
mov
stos
fistp
jmp
lods
sbb
jp
inc
sahf
jb
mov
cmp
or
ficomp
and
ficomp
aam
or
mov
jmp
mov
aam
iret
jns
cli
dec
inc
cmp
jns
stos
jnp
cmps
cmp
xor
cwde
dec
cmc
or
xchg
js
or
ja
cmp
ficomp
adc
fsub
test
in
movs
(bad)
cmc
xchg
out
adc
pop
jmp
pop
retf
movs
pop
fs
dec
sbb
ja
adc
xor
aaa
pop
ins
mov
movs
add
xor
test
mov
pop
popa
xor
push
icebp
fwait
or
xchg
in
mov
fist
pop
nop
dec
adc
loope
stos
das
out
repz
test
lock
out
mov
inc
movs
sar
popf
jmp
retf
mov
lods
fwait
jnp
push
mov
test
cmps
cdq
fwait
mov
push
mov
cli
retf
and
retf
(bad)
iret
mov
inc
retf
test
mov
mov
pop
mov
retf
leave
repz
cmp
int3
loop
call
fucomi
mov
cdq
sub
push
sti
fwait
push
cmp
push
ror
pop
scas
lea
scas
push
inc
sbb
aam
cmps
outs
(bad)
cld
jmp
jnp
push
xor
jmp
lods
sbb
dec
div
xor
stos
cdq
out
frstor
sar
push
mov
add
test
test
mov
pop
pop
pop
push
dec
jp
das
and
add
add
test
push
test
xor
mov
pop
push
fild
cdq
stos
pushf
rcl
mov
sub
lods
rcr
mov
rcr
push
sub
mov
call
iret
leave
ins
push
sahf
mov
xchg
xlat
push
les
pop
xor
jle
fild
cmp
sbb
(bad)
mov
jbe
daa
inc
push
jns
mov
jle
inc
rcr
rcl
movs
mov
repnz
pop
addr16
imul
pop
cli
ror
add
fnsave
inc
cmc
jbe
addr16
pop
int
xchg
mov
cmp
call
aad
(bad)
mov
dec
sahf
aam
retf
jl
dec
add
mov
arpl
mov
pop
daa
je
jecxz
inc
dec
mov
fdivr
xor
mov
stc
fmul
or
mov
in
xor
mov
cmp
sbb
lods
outs
stc
fadd
lea
fwait
cmp
imul
dec
sub
stc
fsubr
sahf
mov
inc
cmp
ins
mov
dec
mov
push
mov
std
in
inc
or
or
dec
mov
jl
add
sub
or
fwait
lods
in
dec
add
pusha
or
aam
test
fadd
sbb
loopne
fsub
lods
in
xor
fsub
and
or
daa
inc
push
dec
lods
test
jmp
lods
or
inc
or
retf
or
xor
jl
dec
popf
xlat
or
mov
xor
jae
or
mov
pusha
test
loop
fs
out
fwait
mov
dec
jmp
lods
or
inc
or
xchg
cmps
aaa
(bad)
sbb
mov
cmp
lods
outs
stc
fsub
mov
or
addr16
mov
(bad)
stos
sub
pop
jmp
sbb
xchg
lods
and
icebp
add
(bad)
stc
sub
and
mov
mov
jns
test
jmp
fdiv
inc
or
leave
retf
inc
addr16
sbb
add
into
out
cmc
xor
(bad)
ins
cdq
test
cli
dec
dec
mov
xor
xchg
sbb
inc
ja
cmp
stc
jmp
inc
cs
mov
xchg
sbb
inc
push
jns
lods
mov
addr16
sar
pop
in
add
std
or
or
adc
retf
push
je
push
outs
inc
cli
mov
fsub
add
(bad)
int
sbb
clc
or
dec
in
pop
cmp
or
shr
jl
add
retf
pop
and
jecxz
jg
mov
jne
xlat
xchg
mov
(bad)
sbb
stc
or
sbb
ud1
(bad)
fsubr
mov
call
pop
dec
jbe
call
cmp
pop
fdiv
lock
fcmove
cli
js
test
and
(bad)
jl
out
push
jg
or
add
or
loope
jecxz
arpl
add
dec
stos
and
or
sbb
call
cmps
jle
or
stc
push
shl
mov
call
aaa
push
addr16
xor
imul
mov
mov
and
push
fdiv
lock
and
ror
sbb
mov
mov
shl
cmp
dec
sbb
cmp
jge
repz
sub
js
push
jg
pop
fsub
and
call
cmps
xor
or
mov
pop
dec
or
cmp
sub
sbb
call
ret
and
loopne
repz
sbb
pop
xor
int3
out
or
sub
lods
mov
(bad)
lods
out
fsubr
loopne
fcom
ins
sbb
call
aas
ja
mov
adc
xor
mov
mov
fistp
pop
stos
call
add
mov
std
lock
outs
call
mov
int
add
loop
jmp
enter
xor
pop
fsub
std
inc
ins
mov
pop
sbb
arpl
stc
mov
jl
out
dec
pop
lods
cmp
in
and
ret
shl
push
mov
add
mov
stos
dec
adc
mov
std
ds
or
xchg
or
mov
(bad)
xchg
fldenv
call
pop
jg
cmp
lock
stos
adc
xlat
jmp
sbb
stos
mov
gs
adc
fcomp
pop
push
ds
jg
sbb
aas
mov
test
push
test
or
lea
lods
scas
leave
xor
outs
scas
jl
leave
dec
adc
xchg
mov
dec
adc
xchg
jmp
push
push
push
dec
mov
lds
mov
icebp
sub
pop
add
push
lods
pop
mov
pop
cmps
inc
ins
xor
cmp
jmp
out
loopne
sub
fld
ret
sub
fsub
dec
sbb
popf
mov
mov
dec
jnp
jbe
test
mov
imul
inc
shl
pusha
test
push
xchg
cmp
xor
mov
call
ja
stc
fadd
in
sub
dec
movs
fsub
(bad)
or
or
pop
dec
ins
jno
inc
jmp
test
pop
test
and
shr
inc
dec
push
xor
sub
xor
mov
and
xor
jle
outs
and
fdivr
mov
mov
dec
dec
in
pop
sub
popa
xchg
call
dec
ins
int
sub
test
xor
sub
pop
dec
xchg
scas
push
or
sbb
sbb
or
mov
fdiv
cmp
ss
in
mov
in
mov
lds
stc
fsub
ins
out
loopne
pop
pop
stos
call
jmp
mov
jp
fmul
fisub
out
or
outs
clc
fdiv
cs
mov
stos
test
cdq
lods
outs
leave
stos
(bad)
xor
cmp
dec
inc
push
mov
lock
clc
mov
push
lods
lds
pop
sbb
fyl2xp1
fsub
out
push
pop
fwait
imul
aas
or
or
mov
xchg
mov
fs
shr
fsub
mov
std
push
lods
xchg
lods
lds
cmp
arpl
fsub
sahf
adc
popf
adc
jg
fldcw
jmp
call
fsubr
std
cmp
lock
cld
pop
ficomp
add
daa
sub
lods
mov
paddd
lock
push
ins
xor
js
dec
mov
cs
mov
in
ins
pop
or
pop
fs
and
in
into
imul
jbe
lea
jns
dec
and
nop
movs
adc
xor
and
test
and
inc
mov
pop
lods
adc
test
fsubr
fistp
mov
icebp
pop
fcomp
es
jmp
js
dec
or
nop
ficomp
jp
fadd
gs
cmp
pop
cmp
xchg
mov
(bad)
lods
jg
or
pop
js
ja
cli
jmp
jp
mov
clc
sub
mov
mov
lds
cmp
inc
push
pop
lods
xlat
hlt
imul
lods
add
int
xlat
or
sti
dec
pop
add
mov
pop
test
popf
push
add
fdivr
cmc
lock
lods
call
pop
or
imul
clc
dec
jmp
(bad)
std
es
cs
div
mov
clc
or
jne
imul
fadd
enter
pusha
cmps
xor
test
fisubr
lods
pop
jl
or
cmp
(bad)
cld
sub
inc
push
jl
stc
fdiv
xor
sub
call
out
sbb
mov
cmc
cmp
sbb
enter
inc
sbb
ins
mov
pop
gs
add
push
cwde
stos
jb
add
ins
sub
out
mov
call
dec
dec
call
icebp
fadd
test
jnp
loop
lock
sub
aas
jl
mov
inc
or
repz
mov
sub
mov
loop
nop
fldcw
cli
dec
or
mov
fimul
lea
popf
in
dec
dec
aas
imul
pusha
pusha
adc
bound
pop
sbb
sbb
mov
not
push
call
or
ja
pop
in
pop
pop
loopne
adc
fisubr
or
cs
sbb
jl
pop
inc
int
lods
xchg
int
or
jmp
cmp
lods
out
lods
dec
and
and
(bad)
dec
sub
xor
cmp
jmp
cmp
int
or
mov
outs
or
dec
scas
pop
or
cmp
xor
mov
js
(bad)
xor
sub
cmp
cmp
mov
loop
sbb
jl
jnp
mov
cmp
and
jl
fdiv
lock
inc
cwde
xchg
push
loopne
pop
mov
ret
int
addr16
lods
pop
dec
clc
or
or
(bad)
out
xchg
mov
outs
mov
mov
test
int3
popf
test
fdivr
sbb
mov
xlat
lahf
inc
stc
lods
(bad)
or
or
dec
lds
push
mov
dec
mov
call
fsub
and
loope
pop
mov
mov
pop
lods
inc
in
scas
dec
lea
push
xchg
cmps
scas
mov
fincstp
push
fdiv
cmp
sbb
lds
push
scas
sahf
dec
lods
arpl
cmp
(bad)
sub
pop
stc
imul
cmp
sti
inc
addr16
mov
lods
pop
fldl2t
or
bound
lods
cwde
fwait
daa
leave
mov
lods
pop
pop
imul
pop
fadd
in
sbb
jne
jns
mov
fwait
inc
mov
jl
mov
dec
cmp
mov
scas
clc
or
mov
stos
popf
mov
in
sbb
call
mov
setne
mov
lods
fisttp
imul
jnp
scas
stos
mov
gs
fadd
nop/reserved
aas
cmp
mov
retf
js
cmp
dec
push
loop
fadd
cmovo
out
int
stc
or
pop
push
out
cmp
add
ins
jp
call
cmp
jp
call
add
ins
call
popf
cdq
or
test
cmp
and
lock
test
pop
int
mov
jecxz
mov
jne
test
mov
fsub
add
pop
ins
push
jl
int3
and
inc
xchg
cmp
ja
or
mov
fmul
loope
pop
retf
addr16
addr16
int3
fistp
jmp
ror
sub
jns
jmp
cmp
or
mov
xchg
push
mov
mov
jns
int3
js
xchg
call
xor
fdiv
in
push
cmp
dec
cwde
cmp
push
lods
jmp
pop
and
dec
sub
inc
aad
inc
arpl
test
ret
int3
iret
jns
or
dec
fldcw
ror
inc
jl
imul
lods
fmul
dec
inc
push
and
jp
jge
test
fisubr
dec
xor
pop
adc
dec
popf
mov
jle
mov
sbb
int3
idiv
mov
scas
ja
xchg
xor
pop
icebp
aas
or
cmp
mov
xchg
xor
fld
inc
fwait
sub
sti
jbe
dec
lea
and
fdivr
jae
ins
adc
js
lds
sub
jb
adc
int
in
jl
mov
mov
ja
int3
imul
jns
xchg
push
mov
push
sub
xchg
scas
inc
xor
xor
jnp
xor
xor
pop
adc
push
adc
sub
mov
in
push
push
mov
dec
adc
fild
int
dec
mov
icebp
xchg
xor
dec
xchg
dec
add
out
xor
and
aas
sub
inc
arpl
sub
test
mov
push
mov
add
pop
es
sbb
enter
outs
mov
xor
int3
xchg
push
and
pop
or
mov
int3
push
test
addr16
lods
or
jno
jmp
sbb
mov
or
mov
xor
mov
push
lods
and
inc
dec
pop
icebp
jge
add
dec
mov
(bad)
mov
xchg
xchg
push
mov
fdiv
jmp
cmp
in
loopne
mov
sub
mov
fadd
mov
xchg
xchg
lods
xor
add
mov
cmps
xlat
mov
arpl
push
test
inc
lods
aaa
inc
sbb
test
inc
aad
ret
inc
or
aas
jnp
jg
xchg
add
int
stos
inc
loope
sar
jg
or
ror
adc
inc
pop
sbb
push
xor
inc
xor
xchg
add
add
sub
xchg
mov
aaa
mov
mov
jg
movs
aaa
js
push
stos
jmp
imul
sub
ds
xchg
and
sbb
fcom
lds
aas
add
shr
out
dec
iret
or
adc
pop
out
jo
js
mov
test
sbb
pop
sub
fdivr
dec
pop
inc
cmp
movs
xor
add
loope
popf
int3
mov
cli
add
fisub
js
arpl
mov
xor
lahf
mov
pushf
xchg
jae
imul
adc
cli
and
fsubr
dec
jns
pop
sbb
xchg
mov
mov
mov
add
sub
aaa
mov
int3
movs
lods
pop
jge
add
xchg
dec
test
rcr
fmul
sbb
imul
mov
mov
sub
mov
mov
(bad)
and
sti
xchg
adc
inc
cli
mov
jns
and
in
mov
data16
mov
ror
lock
dec
sub
test
jne
outs
jbe
dec
inc
lods
aaa
in
fdivr
xlat
push
fild
or
inc
ss
dec
ret
cmp
mov
add
or
sub
mov
dec
mov
jl
fcomp
adc
int
xchg
scas
jno
add
cmp
jb
mov
xor
pop
loop
loopne
outs
xor
int3
inc
rcr
pushf
movs
pop
mov
jmp
push
mov
stos
mov
mov
jmp
int3
push
jmp
int3
adc
add
lahf
mov
out
sub
fidivr
repnz
mov
mov
fisub
shr
int
stos
mov
add
jge
popf
loop
jae
mov
(bad)
mov
jbe
lods
jb
mov
mov
xchg
mov
xor
push
leave
(bad)
icebp
push
mov
pop
iret
push
in
test
xchg
add
inc
and
or
fwait
mov
lods
das
jmp
lods
cdq
call
out
jae
bnd
jmp
xor
js
pop
sub
es
cmp
inc
sbb
or
(bad)
sbb
sbb
xor
mov
repz
mov
cmp
add
bound
xor
fiadd
mov
jmp
sbb
mov
leave
mov
cs
mov
sar
dec
sub
(bad)
or
sar
push
pop
mov
dec
mov
sub
stos
and
mov
bound
adc
xor
into
fadd
push
stc
add
xchg
inc
hlt
jno
pusha
and
and
int
lock
add
mov
out
lock
mov
inc
fdiv
mov
push
push
mov
dec
arpl
rcl
or
aaa
and
add
push
xor
and
nop
mov
dec
xlat
int
fyl2xp1
fcom
sub
xchg
mov
or
sahf
dec
push
fiadd
and
pop
push
or
scas
inc
aaa
mov
stc
fadd
pop
mov
mov
jp
pop
out
ins
lea
inc
dec
jg
lods
jle
xchg
pop
aas
cmps
call
(bad)
mov
cmp
lods
pop
fsub
sbb
mov
rol
dec
fdiv
imul
dec
test
fadd
stos
test
or
xchg
call
mov
mov
inc
mov
bound
mov
cmp
dec
mov
mov
jb
out
adc
push
jmp
xchg
xor
mov
push
or
cmp
and
mov
add
imul
jl
inc
movs
or
xchg
push
scas
xor
add
adc
jbe
sbb
imul
sub
add
es
mov
mov
fcom
sub
inc
not
js
and
cmp
daa
aas
fmul
fdiv
mov
inc
fdiv
fld
aaa
mov
fstp
sub
popa
les
loope
leave
dec
push
add
or
fsub
out
or
jae
mov
lods
outs
dec
mov
mov
arpl
call
cmp
das
or
mov
sub
ja
es
inc
loop
dec
and
aas
imul
cmp
inc
arpl
lods
repz
int3
out
adc
jmp
int3
sahf
and
fidiv
enter
pushf
cmp
arpl
fadd
out
mov
xchg
push
ss
xor
mov
pop
mov
jg
mov
xchg
and
push
adc
mov
xchg
ret
mov
imul
fild
mov
ja
jbe
lods
loop
xchg
fbld
sar
sbb
kunpckwd
bound
inc
std
mov
push
mov
popa
inc
arpl
xchg
pop
xor
pop
inc
(bad)
xor
mov
ret
pop
xchg
cmps
and
and
dec
in
xchg
ret
jmp
icebp
fdiv
jg
or
cmp
iret
dec
scas
xchg
sub
xor
mov
sub
or
inc
cmps
or
ja
ja
inc
ins
mov
lods
add
sub
mov
or
lods
aaa
jns
or
jne
jmp
fdivr
pop
lea
ret
pop
inc
fsub
add
mov
push
fist
or
ror
cwde
push
mov
xchg
pop
idiv
mov
inc
aas
bound
sub
repz
rcl
mov
add
dec
jmp
lods
dec
(bad)
fbld
and
jmp
mov
pushf
adc
popa
mov
addr16
ins
mov
add
push
shl
or
jne
and
push
mov
xor
jle
loopne
mov
fnsave
pusha
push
int3
shl
es
mov
jge
mov
push
(bad)
xor
iret
ror
xchg
aaa
and
mov
mov
or
dec
xchg
stos
mov
add
loopne
sbb
mov
xchg
sub
cdq
scas
and
pop
push
iret
xchg
jno
mov
popf
jae
adc
add
xor
(bad)
mov
or
cmp
cli
rcl
mov
imul
jl
sbb
sub
cmp
cmp
mov
(bad)
pop
mov
(bad)
outs
and
dec
outs
call
leave
pop
push
es
jne
lods
and
adc
gs
or
sar
pop
xor
jbe
or
(bad)
mov
mov
xchg
xchg
pusha
pushw
xor
nop
xor
pop
scas
rol
push
test
inc
jmp
call
dec
pop
lds
jnp
jmp
mov
xchg
push
repnz
push
(bad)
dec
push
sub
dec
jns
pusha
or
dec
mov
frstor
xchg
shl
add
xchg
or
mov
bound
popa
push
push
dec
test
out
sub
mov
push
das
aas
out
dec
mov
xor
outs
adc
jb
cld
pop
fmul
cmp
fcomp
lock
nop
add
or
or
call
mov
test
jae
data16
mov
fs
je
test
sbb
stos
cdq
and
inc
pop
mov
xchg
mov
(bad)
ror
xor
jmp
fdivr
or
fdivr
lods
push
mov
fbstp
add
inc
loope
jb
stos
daa
(bad)
addr16
daa
int3
and
jmp
push
or
inc
int3
inc
mov
add
cmps
int3
add
pop
outs
cld
arpl
cdq
fdivr
add
cdq
mov
xor
jg
jo
(bad)
sub
push
mov
push
stos
xor
das
jbe
pop
sahf
cmp
lods
cmp
scas
sub
fisttp
aaa
inc
xchg
test
mov
sti
jmp
or
pop
(bad)
xchg
pop
loop
pop
fdivr
call
int3
test
mov
xchg
int3
sub
dec
retf
xor
dec
mov
pushf
adc
xor
push
es
mov
add
push
sub
xchg
jmp
int
imul
xchg
mov
cdq
mov
cdq
in
fdivr
xchg
loope
out
out
xor
fsub
mov
mov
and
dec
mov
or
sub
and
mov
xor
sbb
push
pop
pop
sub
call
out
and
mov
or
cmp
xchg
mov
aaa
jp
bound
dec
in
pop
jp
dec
xor
mov
xchg
in
stos
push
mov
push
push
out
stos
add
mov
dec
or
inc
fadd
ins
bound
xchg
sar
or
cmps
mov
aam
adc
imul
jne
xchg
int3
lds
sub
dec
jl
jns
in
js
mov
pop
lock
add
jb
js
add
lahf
leave
jg
std
cdq
sbb
js
call
xor
or
in
int3
add
sub
fdivr
icebp
fdivr
cli
push
xchg
(bad)
call
addr16
ja
nop
jle
lods
aas
ins
xor
iret
dec
xchg
ins
cld
jns
ins
vmovaps
test
retf
mov
cmp
add
movs
call
rep
lds
inc
es
(bad)
loop
cli
bound
aaa
push
fdivr
test
stos
xor
popf
cs
and
jmp
dec
out
fsub
xchg
push
data16
inc
xchg
movs
fcomp
cmp
inc
int
aaa
mov
outs
fadd
sbb
fbld
scas
sub
(bad)
jmp
inc
adc
mov
sub
loope
mov
(bad)
mov
into
sbb
leave
mov
jecxz
int3
xchg
push
lds
jbe
dec
and
fcom
and
fmul
dec
or
add
and
mov
cmp
push
data16
push
jmp
fsubr
aaa
pop
repz
aad
dec
cmc
and
push
mov
loopne
fsubp
test
xchg
sbb
les
sbb
adc
bound
mov
fst
out
mov
fdiv
xchg
retf
add
adc
xchg
div
or
test
fdivr
lods
mov
icebp
mov
sub
xchg
shr
in
(bad)
int3
outs
aas
push
cs
lods
jge
fadd
addr16
add
dec
xchg
jl
in
clc
int3
ds
dec
test
sahf
push
cmp
push
fdivr
xor
retf
add
jbe
mov
pop
mov
fmul
lods
add
sub
int3
stos
clc
sub
test
retfw
mov
fisttp
pushf
rcr
jns
dec
cli
les
rcl
adc
repz
fldcw
push
mov
jge
ins
loope
pop
(bad)
repnz
pop
pop
cdq
fist
mov
ficomp
pop
xchg
mov
pushf
adc
aam
sub
dec
or
sbb
sub
mov
popa
pop
xor
pop
mov
mov
ins
sbb
fistp
in
sub
mov
aas
ins
out
cmp
dec
retf
mov
retf
imul
pop
fisubr
sbb
enter
retf
and
mov
jo
pop
jmp
adc
call
push
cdq
or
pop
push
pop
cmc
fwait
cwde
outs
xor
(bad)
mov
fimul
mov
adc
push
imul
leave
ror
pushf
dec
sbb
sbb
lds
cmps
fcom
les
stc
(bad)
enter
in
push
xchg
push
mov
jnp
sub
mov
mov
sti
sti
sub
(bad)
cli
add
jne
pop
dec
xchg
cmps
xchg
push
jne
mov
fist
dec
pop
push
pop
mov
pop
aaa
push
mov
pop
mov
dec
xchg
cmps
fcom
mov
pushaw
pop
pop
xchg
imul
add
mov
add
sub
or
aad
fwait
sti
mov
popf
add
retf
cli
stos
or
mov
adc
shr
aad
mov
aaa
cmps
into
cli
mov
sub
test
sti
inc
stc
xor
mov
jmp
xchg
push
pop
rcr
cmp
mov
sub
call
pop
cli
sbb
fiadd
cmp
mov
ins
popa
mov
stos
out
push
cmp
fwait
jmp
fcmovnbe
stc
retf
push
js
mov
pop
cmps
int3
sbb
xchg
sub
fisubr
sar
and
retf
fidivr
dec
lods
cmp
mov
pop
imul
out
sub
mov
jmp
pop
fwait
add
retf
aam
test
clc
sbb
nop
(bad)
stc
xor
jbe
mov
add
fsubr
sub
fstp
aam
ret
adc
mov
neg
les
out
rcl
leave
sbb
ins
cwde
dec
cli
fistp
fsubr
fdivr
fmul
fsubr
add
iret
push
mov
mov
mov
xor
push
lock
push
lock
mov
sahf
sbb
popa
adc
pop
mov
pop
in
adc
repz
imul
je
out
dec
call
cmp
shr
mov
or
mov
pop
nop
mov
call
ret
adc
dec
fwait
pop
dec
imul
nop
adc
sbb
or
cmp
stc
mov
pop
cld
xor
xchg
or
neg
pop
nop
aaa
push
adc
das
pop
shl
test
push
leave
mov
mov
(bad)
mov
pop
sahf
xlat
pop
mov
cmp
sbb
mov
cdq
sahf
cmps
nop
test
scas
cmc
xor
cwde
adc
push
push
inc
sbb
out
mov
adc
mov
rcl
dec
or
dec
loop
jns
mov
mov
imul
pusha
dec
mov
adc
out
sbb
cmps
mov
xchg
loop
out
cmp
xchg
adc
mov
inc
nop
cld
imul
(bad)
mov
in
lock
inc
xor
adc
xchg
xchg
jmp
jnp
xchg
sahf
clc
or
dec
das
enter
ret
sbb
lahf
mov
ret
sbb
rcr
fcom
nop
in
mov
mov
push
fucomp
fistp
ins
mov
mov
mov
pop
sbb
fwait
sbb
aad
mov
jb
push
loop
push
mov
mov
inc
push
sub
ficomp
nop
sub
push
mov
pop
dec
mov
xchg
pop
fcomp
lahf
sbb
sbb
pushfw
shl
inc
mov
pop
iret
lods
mov
mov
mov
cld
call
push
sbb
iret
nop
out
mov
pop
bound
push
out
repz
xchg
repz
out
mov
adc
sub
mov
xchg
loop
push
out
ret
pop
push
fcom
in
push
xor
push
adc
inc
mov
xor
dec
xor
rcr
sbb
xchg
out
sbb
mov
sbb
enter
loopne
pop
inc
sub
not
add
cmp
pop
nop
cld
xor
adc
shl
sbb
(bad)
fldenv
dec
test
push
inc
cmp
inc
lds
xchg
sti
sbb
cmp
nop
nop
cmps
inc
lahf
pop
fimul
push
int
jnp
mov
test
and
nop
cld
dec
dec
xchg
imul
sbb
fbld
sub
fwait
push
ret
sbb
fistp
mov
shr
dec
cld
push
sbb
adc
nop
out
mov
ret
mov
loop
shr
ret
nop
out
mov
shl
mov
xchg
inc
push
scas
xor
jae
push
pop
fwait
mov
dec
sar
mov
in
nop
mov
mov
add
nop
and
mov
push
xchg
push
jge
repz
mov
sbb
fild
dec
lock
mov
nop
cld
gs
mov
call
xchg
neg
xchg
sbb
dec
sbb
fist
push
dec
mov
adc
fimul
sahf
cld
and
xchg
bound
push
xchg
dec
and
xchg
fmul
pop
push
mov
pop
mov
push
push
aas
(bad)
pop
cdq
shl
push
adc
dec
jp
mov
jb
and
daa
dec
adc
sub
mov
nop
xchg
test
aad
rcr
pushf
pop
inc
lock
pop
cdq
dec
pop
pushf
cs
es
pusha
xchg
jnp
inc
cmps
not
dec
call
pop
cmp
icebp
(bad)
pushf
out
dec
mov
push
jbe
ret
cwde
sub
fwait
(bad)
shr
and
sbb
mov
outs
fisubr
xor
push
dec
ds
fsubr
scas
ja
mov
icebp
nop
ret
out
jp
cmp
in
ss
sahf
pop
pop
adc
or
mov
clc
retf
cs
fstp
mov
lods
mov
dec
js
adc
pop
fist
xchg
je
aad
cmc
xchg
fistp
out
rcr
sbb
in
xchg
push
push
(bad)
mov
out
jbe
aaa
imul
cmp
xchg
cdq
retf
xlat
sbb
call
fcomp
pop
push
rcr
xchg
sub
ficom
fwait
mov
ffree
pop
cmps
xchg
scas
inc
xor
jno
inc
push
fnsave
out
mov
mov
nop
add
cwde
adc
inc
jecxz
adc
or
mov
sub
xchg
(bad)
push
enter
xlat
fwait
stos
jnp
xor
dec
sbb
(bad)
rcr
push
push
fwait
mov
and
dec
pop
nop
mov
mov
push
pop
pop
mov
push
fstp
and
sub
and
stos
lds
(bad)
pop
sar
aam
cs
cdq
fidiv
push
xchg
neg
jmp
pop
in
addr16
push
in
jae
sbb
cwde
aad
stc
(bad)
shl
pop
jmp
cmp
mov
stos
push
sub
dec
or
push
(bad)
rol
sbb
call
push
mov
mov
and
call
dec
nop
pop
nop
sahf
lods
fst
in
icebp
nop
int
push
cs
or
xchg
inc
fimul
fst
sbb
fmul
mov
xchg
pop
ror
jnp
xor
(bad)
test
leave
or
xchg
push
fistp
cmps
mov
adc
mov
ret
fdiv
es
push
xchg
sahf
dec
outs
fst
or
movs
ror
mov
popa
pop
fdiv
mov
pop
xchg
aam
dec
mov
sub
cmp
dec
push
call
cs
mov
in
sbb
adc
sbb
mov
sbb
xchg
out
fstp
jecxz
rcl
pop
popf
adc
in
pop
fist
aam
jnp
cmp
jne
adc
xchg
sbb
pop
popf
mov
fistp
mov
mov
pop
inc
lahf
mov
neg
dec
js
inc
sbb
sub
stos
popa
fdiv
pushf
mov
cmp
(bad)
xor
mov
xchg
mov
repnz
xor
pop
mov
pushf
rcl
vunpckhps
rcl
inc
shl
push
nop
in
ret
neg
fldcw
sbb
loop
iret
and
fld
retf
call
cwde
repz
sub
aaa
push
pop
cmps
in
fisubr
shr
shr
jmp
sar
add
mov
sahf
in
aas
sbb
push
scas
ja
dec
push
inc
shl
sbb
xor
mov
mov
push
dec
scas
xor
imul
xchg
inc
sbb
dec
mov
or
push
lds
mov
dec
jg
dec
mov
mov
ret
push
in
in
ret
adc
push
cmps
fimul
lock
daa
cmc
push
jmp
rol
mov
inc
test
xlat
mov
xlat
adc
jns
xlat
and
mov
ror
xchg
ins
mov
cld
(bad)
fisttp
push
lea
push
mov
lea
push
cmp
aas
dec
fcom
cmp
fidivr
add
fst
pushf
pop
rol
dec
in
xchg
nop
or
push
adc
ficom
jae
push
and
cmp
pop
jp
mov
cmp
nop
dec
aas
fiadd
nop
stos
test
iret
adc
pop
dec
xchg
ffreep
sbb
jb
mov
fs
imul
mov
mov
enter
aad
mov
jecxz
jbe
ret
sbb
cli
mov
and
cld
cwde
xchg
pause
and
push
cmps
mov
daa
adc
fisttp
push
xlat
mov
scas
push
xor
sbb
pop
popa
lock
addr16
ja
loop
add
push
push
out
jecxz
jg
sbb
nop
dec
jno
mov
push
aas
xchg
aad
pop
dec
ret
sbb
sbb
repz
xchg
sbb
imul
pop
ret
sbb
cmps
pushf
xor
inc
lea
cmp
jg
xchg
scas
clc
sahf
mov
fcomp
jle
outs
dec
mov
adc
popa
push
inc
inc
fcom
xchg
adc
push
inc
stos
sub
and
scas
inc
lahf
mov
mov
cs
ja
pop
push
xchg
mov
jb
fs
jmp
jb
aaa
jg
adc
mov
pushf
in
cwde
rcl
and
mov
xor
inc
cmps
xor
push
mov
add
mov
push
aaa
xchg
fldl2e
jg
pop
cmp
mov
push
dec
cmp
hlt
push
nop
sub
test
dec
sbb
jmp
and
sbb
jg
adc
inc
cdq
sbb
mov
nop
pop
test
aas
fmul
aaa
jecxz
push
cmp
add
lods
lahf
test
push
leave
fst
push
scas
mov
ja
adc
lahf
dec
mov
ds
mov
cmps
ins
sbb
sbb
inc
ror
call
xor
cmps
sahf
mov
push
add
mov
mov
and
mov
int3
xor
adc
popf
xor
and
in
inc
push
cmps
rcr
sar
inc
ret
dec
mov
sbb
sbb
retf
mov
pop
stos
ja
and
cmc
rol
dec
sub
jecxz
jne
ffree
dec
mov
sar
mov
cmp
dec
ja
rcl
jno
mov
lods
stc
ret
mov
mov
xchg
push
nop
mov
sar
xor
push
sbb
pop
(bad)
call
jmp
rcr
cmp
or
in
pop
cwde
call
mov
ins
sbb
aam
int3
movs
xchg
inc
sub
pop
int3
adc
shl
retf
pop
(bad)
sbb
pop
sahf
in
add
pop
mov
lahf
push
mov
not
mov
push
ficomp
mov
push
cmp
mov
adc
into
(bad)
jmp
(bad)
and
push
pop
aaa
shl
sub
rcl
xchg
xchg
add
mov
jg
cwde
xor
sbb
push
cwde
or
inc
sbb
mov
arpl
fwait
xchg
add
fisttp
cmp
js
sbb
inc
xchg
cmps
rcr
mov
push
xor
mov
cdq
scas
sbb
push
xchg
das
dec
sub
jmp
inc
cmp
arpl
pop
sub
gs
jmp
mov
jnp
movs
xchg
mov
aaa
mov
lahf
pop
cmp
iret
in
mov
js
(bad)
cmp
pop
xchg
add
mov
push
stos
pop
arpl
out
adc
nop
push
pop
push
jae
stos
or
xchg
mov
xchg
jb
xchg
xchg
lds
xchg
fwait
mov
add
sbb
cwde
mov
xchg
jmp
dec
xchg
rcr
add
push
inc
xor
stos
sbb
enter
pop
pushf
sbb
push
adc
xor
pop
add
sbb
test
inc
adc
jnp
xor
imul
xor
ret
xchg
xchg
ins
call
push
inc
js
dec
sar
xchg
je
mov
popa
xchg
push
test
scas
push
and
ss
mov
pop
ret
xchg
mov
xor
dec
xchg
xchg
push
mov
inc
xchg
add
dec
sub
(bad)
xor
js
inc
test
sbb
xchg
imul
aad
add
ret
cs
jnp
xor
daa
dec
repz
mov
adc
fcmovbe
xchg
mov
and
pop
adc
pushf
idiv
dec
test
xchg
daa
pusha
aad
rcr
dec
pusha
mov
jmp
out
or
ror
mov
push
push
sbb
xlat
pushf
xchg
cmp
int
push
push
xchg
mov
dec
pop
(bad)
mov
pop
mov
mov
(bad)
pop
rcr
sti
imul
mov
mov
fstp
sub
out
not
sbb
and
std
pop
test
xchg
fmul
mov
sbb
aam
dec
stos
pop
adc
jnp
pop
mov
pop
aam
inc
xor
jbe
les
sbb
push
pop
xchg
sub
push
(bad)
cwde
xor
xor
fstp
cli
pushf
sbb
mov
cmp
fistp
cli
xlat
out
cmp
sahf
cmps
rcr
call
jecxz
or
push
mov
je
xor
jns
shl
aaa
push
retf
ins
adc
imul
test
aas
dec
adc
mov
ins
push
push
xchg
aas
retf
adc
scas
ja
mov
pop
dec
pop
(bad)
sub
adc
push
call
dec
adc
jo
ror
inc
or
mov
lahf
add
sbb
fdiv
cdq
adc
pop
mov
push
jge
xchg
xchg
pop
popf
mov
leave
cwde
xchg
push
mov
mov
sahf
sbb
xor
dec
pop
cmp
pop
mov
mov
add
pop
xchg
inc
neg
xchg
pop
mov
call
xchg
cmp
shr
xchg
xchg
push
mov
aad
xchg
or
es
ror
xchg
(bad)
sub
cdq
js
mov
fwait
dec
dec
aaa
xchg
mov
bound
mov
adc
sbb
inc
mov
or
cmp
adc
mov
add
push
add
js
xchg
adc
mov
inc
fcomp
mov
jmp
not
adc
ss
pushf
loope
rol
jb
push
sub
push
inc
movs
iret
adc
sub
dec
pop
xchg
xor
jno
pop
rcl
lds
mov
adc
retf
inc
xor
push
sbb
jl
xlat
scas
pop
dec
dec
push
xchg
xchg
mov
push
mov
inc
sbb
inc
fadd
loop
and
cli
jne
sbb
dec
pushf
push
call
xchg
pop
xchg
adc
stos
adc
adc
dec
pop
push
lock
xchg
add
adc
pop
pop
mov
cmp
shr
sahf
add
in
cmp
add
push
cmp
sbb
repnz
xor
mov
rol
mov
xor
inc
aam
or
lea
push
mov
sbb
mov
addr16
xchg
arpl
jle
ins
stc
ret
mov
mov
add
push
test
lods
adc
call
popf
out
aam
rol
lods
mov
call
rcl
push
and
arpl
push
(bad)
dec
fs
pop
push
mov
dec
out
adc
fidiv
jge
sahf
and
push
push
push
push
sub
nop
xchg
mov
neg
pop
sub
sahf
adc
out
pop
retf
inc
nop
(bad)
adc
xchg
out
(bad)
(bad)
mov
mov
inc
loop
fcmovne
dec
fisub
dec
lock
or
mov
pop
inc
dec
pop
push
pop
xchg
retf
jge
xchg
mov
(bad)
int3
xchg
push
xor
rcl
pop
and
xchg
pop
or
xchg
stos
lahf
scas
je
pop
inc
push
push
fcmovnbe
xchg
aaa
popa
xchg
dec
adc
in
(bad)
mov
mov
sbb
arpl
sbb
inc
sbb
push
pop
xchg
adc
sbb
mov
pushf
nop
pop
or
and
jg
fst
jo
xchg
sub
jb
push
sbb
sbb
not
xchg
xor
adc
mov
mov
xchg
and
ret
pop
lock
cmp
loope
sahf
pop
xchg
(bad)
mov
push
loop
push
xchg
jb
or
cmp
sub
mov
popa
std
fidiv
and
sbb
mov
repz
xor
jb
movs
pop
out
movups
shl
std
pop
lahf
rcr
xchg
pop
cld
mov
gs
fdivr
jnp
sti
pop
cmps
dec
es
pop
jmp
add
xlat
jnp
mov
sahf
lahf
adc
dec
or
retf
jmp
push
sub
push
jmp
pop
adc
push
adc
push
dec
pop
dec
sub
xchg
inc
fidivr
mov
inc
enter
or
sub
adc
test
outs
shr
pop
fld
pop
enter
cwde
push
pop
jnp
add
not
dec
cmp
fstp
sub
mov
sar
mov
dec
mov
fstp
fsubr
mov
shl
push
ficom
aam
out
pop
mov
or
mov
fisub
stc
add
xchg
rcr
(bad)
imul
push
adc
sbb
arpl
out
xchg
xchg
xchg
shr
outs
adc
push
lds
mov
lea
pop
imul
dec
push
in
arpl
push
mov
fisub
dec
push
xchg
pop
cli
dec
xchg
cli
addr16
push
fiadd
cmp
imul
pop
leave
sbb
sbb
sbb
pop
test
pop
pop
aam
test
call
adc
not
div
(bad)
push
adc
sub
psubusw
xor
cdq
cdq
mov
xchg
cs
fadd
xlat
mov
mov
iret
shr
mov
mov
jmp
inc
pop
mov
xor
push
xchg
cmp
cmp
addr16
mov
fwait
pushf
int
hlt
call
std
mov
cmp
out
test
inc
ret
retf
call
jae
in
mov
fistp
add
repz
push
imul
xchg
rcl
push
adc
push
inc
cld
sbb
ret
push
(bad)
sar
sub
xor
cmp
inc
cwde
or
cmps
inc
xchg
ja
fist
add
mov
inc
xor
cs
dec
pop
push
xlat
ret
or
dec
pop
inc
lods
push
sbb
(bad)
sbb
push
inc
fist
push
fisttp
fnstsw
jbe
inc
bound
sub
aad
arpl
rcl
sahf
ret
sbb
push
and
push
sbb
adc
(bad)
fisttp
jno
sbb
push
cld
add
faddp
mov
shr
movs
xchg
int3
out
sub
ret
(bad)
sbb
push
xchg
add
mov
pushf
dec
pop
xchg
xchg
dec
aaa
(bad)
repnz
sbb
push
push
dec
xchg
push
retf
iret
(bad)
shr
loope
inc
xchg
dec
inc
push
xchg
sbb
adc
mov
sub
jb
jae
fcmove
mov
adc
retf
in
mov
pop
adc
pop
sub
aad
push
out
(bad)
dec
pusha
push
or
cmp
ret
push
mov
rcr
add
mov
xor
sbb
fisubr
mov
or
fidivr
stos
mov
mov
jmp
jmp
ffreep
aam
imul
mov
inc
cmp
jae
cdq
dec
push
xor
sar
pop
adc
into
aad
es
cdq
xchg
leave
xchg
push
push
xor
outs
xchg
sahf
icebp
xchg
sbb
dec
daa
adc
pusha
retf
test
aam
loop
pushf
mov
mov
sub
inc
jge
ror
or
sbb
sbb
adc
arpl
push
add
les
dec
outs
sub
push
(bad)
nop
adc
(bad)
xchg
or
stc
push
stc
ret
pop
mov
push
stos
add
rcr
iret
not
inc
jge
and
inc
sahf
call
inc
push
icebp
popf
xor
inc
push
fld
mov
sbb
cdq
cdq
cdq
push
mov
push
xchg
cwde
pop
fcmovnbe
rcr
mov
pop
mov
inc
push
sti
cwde
pop
xchg
add
inc
ss
xor
sahf
sbb
or
mov
lds
mov
nop
movs
mov
mov
jae
inc
pushf
add
xor
fld
inc
xchg
mov
push
xor
iret
fnstenv
adc
jae
stc
outs
push
mov
pop
(bad)
xchg
arpl
popf
mov
pop
fucomp
mov
aaa
addr16
cwde
ficomp
pop
call
leave
movs
jp
push
mov
aam
fwait
movs
xor
add
rcl
clc
mov
test
pop
(bad)
inc
cmps
xchg
test
aam
rcr
push
mov
sbb
fwait
cmp
mov
sti
sub
(bad)
pop
aad
mov
out
lods
repz
je
mov
int3
jns
icebp
mov
cdq
(bad)
xor
pop
pop
xor
fsub
pusha
push
std
addr16
es
add
xchg
lea
outs
lea
pop
xchg
xchg
xchg
jmp
add
xchg
lea
outs
lea
pop
xchg
xchg
xchg
mov
pop
jo
aam
jl
sbb
arpl
lods
mov
sbb
aam
call
rcr
test
lods
push
js
cmc
jbe
movs
mov
mov
jecxz
out
and
fsubr
sti
or
cmp
int3
pop
retf
push
xchg
mov
mov
loopne
test
xchg
in
mov
cmp
ins
cmp
test
fild
loope
or
aad
cli
cdq
lods
test
inc
aad
test
push
mov
cmps
and
pop
xchg
add
mov
int3
or
push
xchg
inc
xchg
push
out
out
or
adc
(bad)
movs
lahf
and
push
xor
mov
ja
xor
mov
or
leave
stc
mov
cmps
cmp
xchg
enter
mov
jmp
aas
sbb
in
adc
pop
inc
movs
ror
clc
(bad)
cmc
xor
xor
xchg
sbb
shr
cmp
mov
int3
mov
fcmovnbe
mov
test
in
sti
stc
iret
push
sub
sahf
pop
cmp
fwait
out
mov
mov
cmps
or
xchg
push
cmp
js
rcr
dec
xchg
test
push
lahf
push
cli
jb
sbb
xchg
jnp
sbb
inc
in
jge
rcr
gs
in
mov
mov
push
jl
mov
out
push
adc
push
xchg
sbb
mov
stc
xchg
dec
test
repnz
bound
mov
lods
adc
push
push
cmps
cmp
ins
cs
mov
clc
or
(bad)
mov
push
mov
push
test
mov
xchg
mov
mov
das
and
aas
mov
enter
cmps
out
mov
stc
push
xchg
sbb
cwde
inc
inc
jmp
xlat
in
add
add
adc
xchg
scas
xor
inc
sbb
aam
ins
sbb
jne
mov
push
data16
add
push
(bad)
cmp
in
mov
mov
das
xchg
ror
int3
es
aas
push
loopne
add
(bad)
cmp
fwait
(bad)
rcl
repnz
jns
enter
sti
es
ins
xor
fnstenv
jl
fwait
mov
(bad)
fs
pop
test
ret
imul
test
aas
dec
stc
push
pop
inc
cmp
pop
fld
jne
pop
sbb
pusha
mov
cmps
js
jbe
mov
mov
mov
pop
inc
sbb
movs
sbb
mov
in
sub
and
adc
imul
jmp
stos
shr
adc
and
adc
mov
push
fimul
dec
adc
pop
movs
add
fist
repnz
or
push
sbb
xchg
push
dec
inc
cmps
test
mov
cmps
sar
sub
mov
cmp
dec
sbb
pop
cmps
cmps
popf
mov
adc
sbb
ret
das
adc
sbb
push
xchg
push
in
add
mov
xchg
sub
retf
adc
jns
repnz
mov
inc
mov
(bad)
mov
xchg
pop
sub
sub
push
aas
dec
xchg
aam
jle
movs
ret
je
push
jae
int
jb
add
mov
in
sub
fst
pop
xchg
sbb
mov
cmp
inc
pusha
sub
or
mov
inc
outs
inc
scas
in
xor
cmps
mov
or
mov
dec
mov
cdq
movs
adc
add
and
test
jno
stos
ss
pop
cmp
mov
push
aad
xor
cmp
mov
leave
mov
xor
xchg
les
daa
inc
ins
mov
clc
stos
mov
xchg
or
in
mov
mov
xchg
mov
pop
mov
retf
push
(bad)
cli
int3
xchg
mov
xchg
enter
js
out
mov
retf
push
or
mov
cmps
mov
stc
or
movs
fs
inc
mov
xlat
xchg
jae
nop
inc
jae
pop
dec
gs
pop
fs
xor
cdq
arpl
pop
mov
adc
inc
add
mov
in
ins
dec
and
and
test
into
sti
leave
cmps
mov
gs
(bad)
mov
addr16
enter
enter
inc
pop
js
push
push
sbb
xlat
mov
xchg
iret
ss
xor
aaa
sahf
ss
xlat
test
cli
sbb
add
mov
sub
ret
psrld
fcmovnb
ret
dec
shr
push
out
xor
cmp
push
push
call
inc
gs
cs
xchg
test
and
mov
jnp
addr16
add
addr16
movs
pop
mov
jmp
mov
aaa
fs
or
dec
mov
pop
jmp
xchg
and
(bad)
hlt
inc
or
sub
outs
cmp
inc
adc
inc
push
test
dec
dec
cmc
in
mov
call
nop
pop
xor
adc
or
xor
ja
mov
mov
pop
stc
int3
(bad)
mov
mov
or
cmps
scas
imul
rcr
inc
jbe
fstp
lods
dec
pushf
aad
cmp
adc
mov
and
cmp
test
pusha
lods
xlat
leave
imul
dec
popf
jo
or
pop
mov
jl
cmp
mov
adc
in
and
sub
pop
sbb
mov
rcr
mov
jmp
sti
mov
mov
lods
lds
pop
cmp
sar
mov
retf
xchg
retf
sahf
leave
fild
mov
cmp
ficomp
sub
push
inc
sti
mov
fnstsw
sti
mov
mov
push
mov
retf
mov
mov
cmps
(bad)
xor
aam
rol
in
test
dec
pop
call
in
cwde
xlat
arpl
jmp
xchg
retf
pop
or
test
pop
xchg
test
mov
retf
sti
ror
mov
fisub
ins
xor
and
adc
pop
xchg
sbb
mov
xchg
pop
xchg
int3
push
(bad)
fsub
int3
test
pushf
push
pop
rcr
push
fcmovbe
fcom
aam
aad
aam
(bad)
push
sar
and
sbb
pop
push
fcmovnbe
cmp
xchg
sar
aam
mov
sbb
pop
(bad)
push
clc
jmp
mov
push
ja
pop
push
fcmovnbe
ficom
fistp
in
fidiv
jbe
pushf
push
stc
enter
fst
mov
push
test
adc
rcl
push
xor
sar
sbb
jb
(bad)
leave
adc
xchg
aam
add
adc
rcr
rol
out
aad
pop
das
mov
jp
repnz
xlat
call
aad
in
add
sbb
mov
add
rep
sbb
jp
aam
dec
mov
mov
xor
mov
sbb
jecxz
(bad)
push
xor
sbb
outs
enter
sub
xchg
aam
pop
push
test
in
jle
das
pop
std
fcmovu
fsubr
pop
(bad)
add
test
sub
rcl
cmc
push
jo
mov
idiv
add
sar
js
jbe
push
sbb
pop
pusha
fcompp
pop
popa
pop
add
jmp
in
push
pop
pop
(bad)
fild
fcmovnu
and
adc
fisttp
fprem1
adc
je
call
(bad)
into
mov
fdiv
les
pushf
mov
push
adc
(bad)
xlat
das
mov
pop
ret
lock
fnstcw
push
nop
mov
(bad)
cdq
cmp
adc
sub
or
lahf
scas
mov
aaa
in
inc
les
pop
aam
pop
outs
fisub
jl
cmp
push
pop
sbb
aad
bound
pop
fild
pop
push
mov
pop
in
jo
pop
cmps
out
fadd
inc
les
pushf
je
xchg
push
mov
test
pop
push
pop
jl
fs
les
cli
xlat
adc
jbe
adc
rcl
retf
jmp
pop
adc
and
fidiv
mov
imul
jg
or
pop
pushf
das
pop
pop
fdivr
dec
imul
mov
pop
cli
cmc
push
aaa
mov
push
loope
fnstsw
call
retf
pushf
push
pop
or
mov
mov
ins
ret
sbb
and
movs
ins
sahf
cmp
inc
push
fadd
mov
adc
shl
pop
inc
push
fsub
xor
dec
int3
mov
mov
mov
jns
xchg
repz
mov
adc
(bad)
xchg
xchg
mov
test
xchg
push
pop
nop
cmp
fsubr
aam
or
jmp
les
cmp
mov
scas
add
mov
retf
dec
inc
mov
jecxz
or
jle
pop
cmp
cli
js
fbstp
add
ds
sbb
fmul
div
ss
mov
mov
retf
sbb
or
mov
mov
aam
ror
aam
fcmovu
pop
fcmovnb
loop
pop
mov
sbb
jbe
call
shr
ficomp
cli
add
dec
cmps
icebp
mov
mov
cmps
retf
lods
sar
adc
ins
mov
sbb
(bad)
nop
adc
xchg
ins
std
cli
dec
and
add
push
in
cmp
inc
fcomp
int
ins
cwde
dec
pushf
out
neg
fldenv
add
fld
pusha
add
call
adc
fsubr
push
cmps
lods
aam
mov
mov
pop
sub
inc
stc
retf
(bad)
mov
(bad)
fcomp
fisub
sub
fldl2e
dec
fist
out
clc
cmp
aam
stos
xchg
cwde
mov
sbb
dec
xchg
rcr
in
pop
(bad)
push
or
mov
adc
lods
rcl
shl
fdivr
sbb
cmp
hlt
rcr
test
fcom
leave
and
nop
lods
sub
xchg
inc
psubq
imul
adc
shr
cdq
cmps
adc
fcomp
retf
retf
jbe
and
and
nop
int
sti
ficom
fcom
sbb
push
fisttp
stos
repz
add
sub
pushf
mov
aam
imul
lods
enter
pop
lods
jmp
cmp
shr
inc
push
in
fcom
push
cmp
xchg
(bad)
xor
mov
jo
xor
pop
imul
sahf
mov
cmps
lahf
xor
xor
mov
int3
jl
aam
aam
mov
sbb
push
fst
fcomp
push
mov
(bad)
retf
sbb
mov
mov
cdq
sar
cmps
sub
xchg
pop
lds
sbb
retf
cmc
xor
movs
int3
ins
imul
cmps
fadd
cli
bound
rol
sbb
fsub
stos
enter
test
mov
pop
adc
je
pusha
push
rcl
xor
add
int3
js
lds
push
adc
fwait
scas
fcomp
sbb
fdivr
ins
sub
fwait
mov
cli
aas
xor
fadd
adc
pusha
inc
xor
movs
push
(bad)
push
(bad)
fsub
scas
and
jmp
js
rep
dec
sahf
pop
in
mov
shr
jl
pop
jnp
mov
int3
mov
int3
mov
in
out
enter
push
(bad)
xchg
fcom
popf
jmp
jnp
inc
faddp
pop
das
jmp
fldcw
mov
sar
push
les
stc
xchg
nop
les
push
fsub
mov
fdivr
cmp
fmul
pop
cmp
xor
dec
cwde
adc
jl
aam
rcl
adc
xor
test
in
cwde
int3
cdq
inc
fiadd
std
fiadd
das
gs
adc
cmps
or
cld
les
out
xchg
shr
sbb
fidivr
push
mov
shl
fnsave
mov
or
sahf
adc
stc
nop
xchg
cmp
dec
pop
mov
xor
fidivr
cwde
(bad)
enter
fmul
shl
into
ins
sbb
push
mov
retf
leave
sahf
ret
mov
fucomp
push
js
jl
add
jnp
stc
leave
fs
sbb
mov
adc
fmul
int
(bad)
fcomp
pop
pusha
pop
jo
pushf
scas
shr
lods
fdivrp
repnz
or
(bad)
pushf
retf
push
pop
dec
mov
xchg
or
jmp
mul
out
mov
pop
mov
(bad)
push
xchg
jns
retf
out
add
jne
cmp
sar
stos
sbb
in
or
push
sar
pop
mov
mov
adc
or
sahf
fimul
inc
or
adc
push
jmp
call
stos
stos
test
cdq
pop
sbb
fimul
shr
cmps
inc
cdq
mov
sar
test
fwait
mov
push
int3
cwde
in
inc
mov
test
mov
xchg
push
daa
daa
xor
shl
sub
mov
pop
aad
push
pop
mov
push
and
push
pushf
int3
pushf
xchg
jmp
lods
int3
push
fwait
retf
adc
sbb
push
push
jecxz
push
or
push
cli
pop
ficomp
push
das
pop
shr
dec
fwait
ret
cwde
push
xlat
int3
dec
pop
pop
inc
adc
mov
xchg
mov
sbb
fcmovnbe
fmul
sbb
pop
mov
clc
adc
cmps
(bad)
pop
dec
lahf
push
xchg
push
fucomi
push
xchg
fcom
fcomp
ror
sbb
pop
push
pop
ficomp
retf
push
jb
cwde
rcl
fstp
pop
lahf
sbb
adc
pushf
push
fnstenv
sbb
adc
pop
ins
test
ret
aam
push
call
fist
adc
ret
rcr
lock
push
mov
cwde
adc
neg
inc
adc
nop
ret
dec
fild
je
jl
push
dec
xlat
push
fimul
cwde
lods
clc
nop
dec
(bad)
push
sbb
xor
div
ret
xlat
dec
pop
adc
or
pop
fwait
sbb
pop
leave
jmp
jmp
dec
lds
dec
pop
cmps
jmp
cdq
add
pop
je
ja
xchg
popa
pop
inc
mov
inc
fstp
mov
push
fist
adc
push
push
pop
int3
popf
cmps
call
sbb
mov
or
test
pop
pop
jl
mov
test
sbb
data16
ins
cdq
xchg
sbb
xchg
sbb
adc
ret
dec
cdq
mov
cwde
sbb
adc
mov
pushf
adc
ret
xchg
mov
xchg
(bad)
rol
push
jg
fwait
adc
sahf
mov
fld
jnp
sub
sbb
adc
dec
icebp
call
fwait
pop
cmp
pop
inc
fnstsw
call
mov
test
fst
shl
pop
xlat
fprem
ins
adc
retf
int3
dec
mov
push
pop
lods
pop
sub
pop
ret
jb
ffreep
pop
test
mov
jmp
bound
jne
retf
mov
retf
test
pusha
retf
fnstenv
call
pop
push
or
dec
cli
sbb
xlat
cmp
sbb
mov
inc
pop
push
push
sbb
dec
rcl
xchg
mov
pop
jmp
leave
fcmovu
push
sbb
cmc
fcmovnbe
fwait
push
cmp
fist
lahf
ret
cwde
sbb
xchg
push
mov
dec
ins
fwait
mov
sbb
sbb
sbb
sbb
push
xchg
push
ror
pop
dec
repnz
into
(bad)
pop
mov
pop
sbb
test
ins
jae
mov
mov
jl
das
fsubr
or
push
xor
mov
mov
fstp
cwde
sbb
pop
mov
sbb
pop
jb
inc
ror
push
adc
pop
pop
pop
dec
dec
fidiv
dec
push
xchg
pop
bound
cwde
cmp
or
push
mov
dec
jp
adc
pop
mov
mov
add
mov
add
inc
call
mov
clc
rcl
call
retf
cmps
xor
inc
sbb
mov
xchg
jmp
xchg
adc
cmp
mov
je
push
pop
adc
pop
push
mov
mov
ror
pop
push
pop
(bad)
stos
retf
ficomp
call
mov
sbb
fwait
xchg
cmp
fwait
adc
(bad)
fmul
or
inc
adc
fisttp
inc
xchg
enter
cmp
sbb
loope
pop
jae
cmp
mov
fwait
cwde
pop
sbb
inc
retf
fwait
out
popf
mov
xlat
jle
(bad)
mov
sbb
adc
inc
push
imul
dec
inc
pop
mov
mov
cwde
push
adc
test
addr16
pop
pop
adc
call
mov
fwait
and
adc
(bad)
and
iret
sbb
pop
or
push
pop
adc
mov
xor
cli
data16
sbb
fs
jnp
call
sbb
pushf
sbb
sbb
int3
sub
fstp
cmps
fsub
mov
mov
xchg
ins
gs
shr
sbb
adc
sbb
xchg
(bad)
pop
sbb
cmps
mov
xchg
push
pop
pop
fwait
mov
mov
mov
pushf
jmp
pop
jl
fsubr
mov
shl
sbb
pop
addr16
jl
adc
ds
fcomp
fisubr
push
ret
xlat
pushf
sbb
pop
sbb
pop
outs
aam
cwde
test
inc
retf
fadd
lods
sbb
nop
(bad)
call
xchg
ins
adc
sbb
int
push
sti
call
retf
mov
int
sahf
cli
fsubr
dec
pushf
fdivr
nop
fisub
rcr
push
xor
int3
jo
(bad)
aaa
pop
sbb
adc
sbb
xchg
push
xchg
cmp
popf
retf
pop
sub
sbb
les
inc
retf
aad
retf
int3
in
or
mov
pop
jb
cmp
pop
test
int3
cmp
jl
lods
call
xchg
(bad)
push
sbb
dec
push
push
sub
pop
push
mov
jmp
in
xchg
pop
sti
repz
jge
xchg
jmp
imul
cmp
and
or
fst
adc
sub
shr
mov
or
pushf
mov
push
jecxz
pop
adc
push
jb
aad
push
fistp
inc
push
dec
lahf
sbb
fcom
pop
repz
pop
fdivp
ficomp
sub
lahf
push
inc
pop
(bad)
sahf
arpl
dec
test
dec
aad
movs
retf
dec
push
sbb
pop
pop
dec
ret
pop
mov
mov
cmp
xchg
ret
cdq
xor
(bad)
push
test
(bad)
js
pop
imul
push
adc
cmps
enter
movs
inc
mov
push
aam
xchg
add
rcr
adc
push
mov
dec
xchg
popf
push
movs
adc
cmps
sub
es
xchg
add
cmp
pop
sbb
xchg
xor
in
dec
cmps
inc
xor
jno
(bad)
cmps
mov
dec
out
xchg
aas
fdivr
mov
jmp
movs
setge
pushf
or
mov
bound
cwde
out
dec
sbb
mov
or
inc
cmps
mov
pop
pop
mov
test
adc
in
push
sbb
dec
adc
test
loopne
repnz
aad
movs
(bad)
cdq
mov
mov
inc
pop
in
movs
and
jns
and
dec
mov
pop
xchg
jne
fistp
fimul
out
pop
pop
mov
dec
ins
je
test
lods
dec
push
das
cmps
jl
push
xchg
inc
aad
lahf
fistp
and
call
pop
mov
fwait
movs
(bad)
aam
sbb
mov
push
cld
push
jb
out
pop
add
mov
sahf
cwde
cmps
rcr
dec
or
push
movs
es
pop
or
clc
cmps
daa
rcr
xor
add
mov
mov
push
push
rcr
xor
cwde
cmps
retf
mov
rcl
push
test
cmps
pop
outs
dec
jmp
xchg
inc
mov
xchg
dec
stos
sbb
or
sub
adc
xchg
pushf
jmp
fmul
mul
cwde
pop
push
inc
aam
sub
xchg
or
cmp
xchg
int3
sbb
stos
std
mov
cmp
dec
pop
dec
pop
jbe
dec
cwde
adc
fdivr
int3
cwde
call
jmp
pop
shl
enter
retf
int3
add
ds
mov
pop
lock
ins
mov
sbb
dec
mov
lods
jl
pop
sub
pop
or
dec
mov
fidiv
fsub
pop
aaa
push
movs
pop
sti
dec
jne
ss
jbe
xchg
jl
outs
pop
mov
mov
mov
or
mov
sbb
imul
mov
int3
xor
pushf
mov
ret
sub
dec
in
mov
rcr
pop
cwde
ret
fcmovu
test
test
addr16
lock
repz
inc
shr
sub
jl
test
jmp
sub
fdiv
push
imul
dec
test
int3
js
cmp
add
push
movs
daa
jbe
idiv
pop
jge
pop
jmp
clc
sti
xor
jl
scas
or
pmaxub
pop
xchg
mov
pop
rol
es
ja
cmp
xor
xor
jecxz
aam
mov
adc
mov
or
xlat
and
fild
(bad)
push
in
mov
arpl
out
daa
jo
pop
movs
pop
and
dec
sub
pushf
stos
cli
inc
dec
aam
dec
int
mov
jo
inc
xor
inc
mov
sbb
xchg
(bad)
hlt
xchg
iret
inc
jnp
into
fs
in
jnp
mov
inc
push
test
pop
(bad)
cmp
xchg
pop
stos
fs
mov
lock
loopne
sub
enter
cs
movs
pop
rol
stos
sar
rol
mov
(bad)
mov
inc
cmp
fstp
push
aaa
jecxz
ret
out
inc
test
xlat
xchg
push
retf
nop
add
add
fsub
mov
pushf
jge
int3
lock
loope
sub
fwait
mov
inc
fnstcw
jnp
jmp
dec
mov
into
fdiv
cmc
cmp
cmp
sbb
sbb
js
push
call
pop
xchg
and
fwait
push
aam
pop
pop
cmp
pop
mov
fdivr
arpl
xchg
test
xchg
cmc
lock
iret
shl
stos
pusha
js
fiadd
neg
cmp
cli
jecxz
fucomi
fidiv
test
(bad)
cli
shr
jl
fsubr
inc
xor
pop
dec
push
retf
push
fstp
xchg
addr16
push
push
sti
fs
les
xchg
stos
ss
mov
mov
jge
mov
mov
fwait
cwde
xchg
mov
xchg
pop
sub
jl
leave
das
inc
pop
sbb
and
xor
push
jp
xchg
sti
pop
test
pop
jmp
stc
dec
sbb
retf
enter
imul
inc
cs
add
inc
adc
xchg
add
scas
ss
push
jecxz
dec
call
pop
arpl
dec
pushf
sar
movs
int3
jle
mov
push
test
ret
sbb
sbb
pop
mov
cli
dec
test
call
or
dec
jmp
mov
pop
fist
mov
mov
inc
dec
aam
jmp
add
nop
rol
jns
jmp
mov
jle
and
sahf
jg
ficomp
sbb
mov
out
jnp
pushf
in
cli
fs
test
jo
jmp
pop
pop
pop
cmp
sbb
mov
lods
adc
lods
ins
neg
mov
inc
fcmovbe
fisttp
daa
lahf
mov
cmps
in
mov
inc
sbb
push
leave
jnp
pushf
cs
add
in
pop
push
lods
mov
adc
adc
sar
sbb
int3
out
aaa
dec
or
sub
pop
sar
mov
imul
int3
mov
dec
sub
clc
mov
fcom
and
(bad)
push
outs
add
(bad)
call
sar
sar
stos
sbb
push
xchg
addr16
inc
int3
pusha
ja
fcomip
shr
xchg
jge
les
dec
movs
pop
in
or
and
ror
cmp
in
outs
push
dec
sti
dec
and
outs
mov
(bad)
sub
scas
leave
dec
pop
dec
lods
out
jbe
test
adc
cmp
push
cmp
scas
ror
xchg
or
rcr
fmul
aaa
mov
lods
aad
xor
idiv
or
push
sbb
rcl
cli
pop
dec
sub
sti
fcmovne
stos
fwait
jnp
imul
or
fcmove
fdivr
dec
cmp
fcomp
or
jmp
ins
cdq
mov
pop
retf
dec
cmp
sbb
or
retf
and
jns
mov
cmp
adc
cmps
xchg
jne
lds
test
xchg
sub
inc
fwait
addr16
clc
into
fidiv
jge
jmp
test
lods
int3
pop
dec
aas
gs
pop
jnp
ins
adc
pop
retf
or
popf
jmp
push
cs
and
pop
ret
adc
mov
sar
fwait
setge
xchg
mov
add
dec
sbb
leave
push
aaa
retf
jbe
xchg
sub
pop
and
dec
pop
fbld
movs
in
jg
popf
enter
(bad)
sbb
fcmovnb
movs
mov
dec
pop
inc
and
ins
fisub
adc
pop
mov
(bad)
pop
cdq
sbb
pop
call
dec
sub
dec
or
mov
or
jl
pusha
hlt
jne
mov
lods
cmp
pop
inc
mov
add
iret
ja
inc
xchg
mov
dec
jecxz
pushf
ins
paddq
aas
in
lods
shl
jmp
sub
test
mov
dec
ds
fadd
outs
jl
xchg
mov
sub
cmp
push
pop
jl
cld
movs
pop
mov
cs
arpl
jp
frstor
push
and
pop
test
pop
inc
sbb
fdiv
aaa
mov
out
retf
fbld
fsubr
call
int3
shr
test
sahf
mov
add
xchg
jp
ret
inc
jbe
aam
test
sub
xchg
pop
test
test
lock
cld
dec
lods
les
std
mov
test
pop
pop
or
push
cmc
pop
int3
pop
dec
dec
mov
retf
(bad)
ucomiss
sbb
movs
push
in
ds
jl
aam
xchg
sti
js
enter
data16
int3
cld
dec
and
pop
jmp
(bad)
fsub
sub
leave
lods
fild
xlat
in
cmp
cwde
mov
(bad)
sub
add
jbe
push
nop
xchg
and
std
xlat
or
aaa
movs
rcr
sub
nop
ficom
dec
pop
mov
xor
mov
inc
pop
neg
lock
xchg
lods
inc
int3
iret
mov
pop
popf
fisttp
dec
dec
sar
sbb
jmp
or
push
das
sbb
call
outs
addr16
rol
inc
call
sbb
inc
mov
mov
in
rcr
push
(bad)
pop
mov
fdiv
xor
mov
mov
push
push
lds
sub
popf
mov
int3
or
retf
pop
out
inc
imul
inc
fsubr
mov
into
push
jmp
mov
dec
ror
mov
loop
dec
js
(bad)
pop
mov
mov
ja
sub
pop
or
mov
sar
aam
mov
push
pushf
and
mov
mov
inc
sub
add
xor
dec
mov
inc
pop
jl
mov
test
mov
mov
stos
fldcw
movs
pusha
fbld
int3
cmp
(bad)
xlat
fstp
cli
xchg
cmp
sub
cwde
cmp
outs
jp
and
dec
fucomip
cmps
jmp
mov
fild
sbb
and
int3
mov
inc
pop
sbb
pop
add
cmp
lods
push
jg
push
fcomp
cli
add
(bad)
sti
test
pop
cld
les
out
lahf
fstp
pusha
arpl
shl
les
adc
test
mov
cmp
or
inc
dec
pop
(bad)
into
dec
dec
xchg
retf
inc
lods
ins
dec
inc
ins
cs
aam
pop
pusha
cmp
int3
(bad)
aaa
push
inc
enter
fidivr
fist
jecxz
ds
mov
ds
lods
cmp
mov
mov
das
push
mov
sub
mov
mov
xchg
cmp
repnz
sar
aad
jp
rcl
pop
mov
imul
daa
clc
adc
and
xchg
jnp
mov
aas
test
sahf
ret
les
pop
mov
cmp
jmp
in
push
inc
jmp
mov
rcr
ins
int
adc
mov
mov
(bad)
stos
shl
xor
xlat
int3
pop
fidiv
leave
(bad)
inc
pop
sbb
add
pop
pop
jle
shr
mov
sti
ja
loopne
push
aam
xor
mov
int3
xor
(bad)
ret
and
pop
fcomp
sbb
inc
mov
fistp
cmp
pop
or
adc
sbb
xlat
push
mov
mov
inc
popf
fsub
fcomp
cld
pop
push
lock
inc
fld
jp
sbb
jl
dec
out
sub
mov
jo
and
scas
ins
into
cmp
or
int3
rcl
xchg
lea
movs
fwait
pop
pop
mov
jge
pop
and
stos
jo
sbb
add
push
mov
jmp
hlt
mov
in
adc
loopne
sbb
fsub
js
mov
fwait
div
dec
adc
in
mov
sbb
or
ins
push
inc
mov
xor
in
mov
push
jge
mov
leave
sub
ins
popa
push
mov
mov
mov
sar
xchg
enter
imul
fcmovu
pop
nop
enter
or
lods
adc
fstp
cs
(bad)
mov
mov
jns
inc
lods
dec
pop
pop
int
lods
(bad)
cmps
mov
fistp
inc
fwait
mov
sub
sub
pop
xchg
sti
dec
shl
fnstenv
cdq
pop
and
aam
je
leave
mov
jo
fcomp
cwde
mov
std
pop
lds
add
xor
jl
fild
fisub
mov
xchg
ins
jle
inc
mov
cmp
retf
pop
jmp
xor
aad
add
inc
ins
iret
dec
xor
test
sbb
jo
ror
popa
jae
mov
lea
push
fadd
iret
into
aam
sbb
movs
jo
mov
fmul
mov
mov
inc
stc
push
push
(bad)
hlt
adc
push
adc
fbstp
jg
rcl
pop
xchg
ins
sbb
push
push
paddw
dec
fucom
dec
add
ins
clc
mov
outs
mov
lods
fsub
in
dec
test
bound
or
aas
lds
sar
pop
call
int3
adc
mov
mov
inc
sar
cmp
inc
call
inc
ds
xor
retf
push
stc
dec
ins
mov
xor
cdq
mov
sub
(bad)
fwait
aam
add
aas
iret
cmp
adc
test
xlat
(bad)
sub
mov
repnz
mov
add
nop
call
push
push
stc
pop
js
pop
dec
fs
cmp
dec
(bad)
daa
cmps
pop
scas
mov
idiv
enter
pop
jmp
rcr
ja
test
pop
out
xor
imul
popf
in
sbb
lods
dec
dec
dec
(bad)
fs
call
jl
aam
cld
mov
in
pop
push
cmc
jg
sbb
ins
pop
sbb
not
mov
imul
mov
iret
jmp
adc
or
xchg
add
xchg
sbb
jnp
pop
add
dec
push
sbb
jp
jge
call
and
pop
ror
dec
(bad)
push
jne
fwait
cmps
loop
int3
int
xor
pushf
outs
(bad)
xor
mov
in
repz
mov
int
cld
call
int3
jmp
aam
(bad)
movs
jae
cld
out
in
dec
push
ror
lods
pop
(bad)
(bad)
js
inc
xor
cwde
pop
or
js
fstp
xor
push
sbb
idiv
cmp
pop
jp
jnp
jnp
inc
ds
sbb
data16
mov
jmp
js
push
adc
pop
cmps
lods
push
sub
rcl
push
jbe
fcom
jp
cmp
or
add
fidiv
xchg
ret
fcomp
pop
cs
jne
(bad)
test
pop
jo
js
xchg
cwde
lds
cmp
inc
adc
scas
mov
mov
pminub
sbb
pusha
fcomi
pusha
loopne
mov
dec
xor
add
jge
rcr
test
in
nop
movs
call
in
fwait
cdq
cld
fnstcw
fstp
int3
gs
dec
shl
mov
cmp
push
(bad)
push
jbe
into
mov
dec
pop
ins
ror
pushf
pop
dec
or
xchg
mov
dec
add
nop
or
pop
out
popf
sbb
call
movs
loop
lds
pop
and
jl
sub
aam
aam
mov
jmp
adc
cld
mov
stos
mov
call
ret
aaa
fcmovnb
cmp
dec
xor
add
popa
fdivr
inc
ret
mov
mov
jno
stos
push
jns
test
pop
pushf
jo
retf
inc
push
mov
mov
mov
aaa
add
mov
mov
jmp
movs
mov
mov
js
leave
jne
mov
jo
xor
pushf
cs
adc
dec
fist
sub
ins
inc
enter
fstp
push
aas
push
dec
movs
(bad)
sbb
jge
sub
dec
pop
adc
mov
(bad)
adc
test
pop
inc
xchg
sti
jge
repnz
outs
into
pop
ficomp
iret
movs
xchg
ins
sub
mov
rcl
call
shr
push
sar
stos
dec
jne
dec
push
sub
faddp
fwait
movs
pop
lea
cli
dec
cli
jmp
pop
sbb
pop
cld
mov
shl
test
pop
call
or
dec
sub
mov
mov
mov
jmp
jl
clc
rcr
push
in
xor
jl
push
or
imul
cmc
sbb
push
dec
sbb
sbb
mov
pop
add
retf
push
ss
int3
(bad)
mov
gs
fldlg2
call
cld
jbe
dec
jno
cwde
retf
fld
dec
xchg
dec
out
ret
inc
dec
es
push
mov
imul
xor
fcmovne
add
aam
xor
dec
jecxz
pop
push
push
or
test
ficomp
jmp
fadd
mov
pusha
mov
test
pushf
lods
test
dec
jns
inc
inc
fwait
ins
shl
cmps
add
jmp
cmp
mov
sbb
fld
adc
adc
push
loope
movs
mov
xor
adc
ins
jbe
into
xchg
dec
pushf
pop
jo
shl
cld
adc
sbb
pop
ins
mov
sahf
fstp
push
pushf
xor
mov
stc
xor
push
popa
push
fs
leave
das
pop
addr16
(bad)
sti
jl
push
cli
jge
psrlw
in
sbb
pushf
ret
sbb
pop
idiv
inc
mov
jmp
xchg
es
es
sbb
dec
and
jl
pop
in
lods
and
lock
loop
cmp
test
mov
dec
neg
cmp
pop
test
fsubr
inc
aaa
loopne
xor
mov
dec
retf
gs
iret
jmp
inc
dec
add
pop
mov
jo
mov
sub
dec
push
push
dec
xchg
dec
xchg
sbb
dec
fst
dec
sub
pushf
fwait
clc
dec
sbb
mov
fs
neg
fidiv
cwde
fiadd
mov
lods
add
ins
rcr
leave
inc
fnstcw
sub
dec
retf
ins
pop
retf
mov
sbb
mov
int3
add
lock
adc
jmp
xlat
ficomp
pushf
jne
pop
sub
push
mov
dec
cmp
test
or
pop
adc
cmc
mov
jb
mov
push
aam
call
arpl
in
dec
pusha
inc
hlt
mov
test
adc
inc
cs
inc
pop
cmc
movs
sbb
sbb
sbb
push
stos
mov
mov
ret
movs
pop
pop
add
fisub
push
(bad)
adc
outs
ficomp
outs
ins
push
dec
pop
inc
cld
inc
jge
in
mov
lods
jecxz
push
dec
retf
mov
inc
mov
xchg
call
call
inc
arpl
test
sub
iret
inc
gs
test
cmp
in
adc
(bad)
pop
xor
retf
fld
lods
push
push
int3
mov
test
dec
dec
xchg
test
sbb
(bad)
(bad)
movs
into
daa
bound
fcom
inc
push
popf
out
dec
mov
cmps
das
pop
dec
mov
jae
(bad)
sub
jp
mov
lea
sbb
sub
inc
fcmovb
xlat
mov
hlt
push
xchg
xor
aaa
lods
test
xchg
inc
add
cwde
sub
dec
inc
lods
ja
push
addr16
(bad)
jae
aas
aam
and
rcl
xchg
gs
or
mov
sub
mov
imul
dec
ins
push
sub
and
lods
push
xor
in
sub
jp
cwde
mov
mov
inc
out
out
sar
add
rcl
mov
rcr
jmp
mov
les
sbb
ficomp
ds
mov
out
cmp
mov
dec
mov
dec
mov
or
lods
ins
inc
call
in
adc
mov
cwde
movs
pop
hlt
sbb
push
int
or
xchg
jmp
in
movs
fsubr
add
clc
fsub
sar
mov
in
fidivr
sahf
test
sub
(bad)
aaa
ja
push
add
int
leave
xor
hlt
gs
mov
in
lods
fild
push
sub
lods
fucomp
aam
mov
ins
ins
cmps
xchg
lods
cmp
outs
jno
inc
adc
je
sub
pop
in
ret
jb
jns
test
mov
rcl
dec
pop
inc
dec
ins
retf
pop
test
fcmovb
sbb
inc
mov
push
ficomp
dec
arpl
bound
sbb
popf
stc
xor
jmp
jl
mov
cmps
pop
hlt
mov
xchg
xor
push
shl
hlt
fld
popf
jge
sub
arpl
mov
jmp
sbb
popf
add
lods
mov
aam
pop
out
mov
pop
mov
xlat
pop
add
pop
add
or
cmp
push
arpl
mov
jno
lods
(bad)
retf
xchg
xor
fabs
mov
mov
call
stos
std
jp
add
int3
dec
out
ror
dec
movs
adc
sbb
jle
cwde
jp
add
and
push
xor
sahf
int3
arpl
pusha
pop
or
(bad)
add
in
addr16
repnz
xchg
adc
jne
movs
xchg
movs
rcr
ja
mov
sbb
push
inc
jb
les
pop
int3
mov
in
xchg
stos
mov
std
cmp
rol
sbb
cmp
shr
jmp
fadd
test
jb
loopne
inc
add
rcr
push
sbb
jge
inc
mov
mov
ficomp
push
add
dec
push
fcmovnu
fdiv
mov
out
pop
xchg
mov
test
aas
mov
sti
mov
call
and
add
sub
retf
push
mov
mov
js
sti
and
or
mov
mov
sub
imul
sbb
xlat
push
dec
scas
jmp
loope
jmp
mov
jg
adc
call
cli
pop
test
call
push
jb
es
xchg
pop
movs
mov
popa
push
jbe
lods
xchg
or
movs
std
int3
jmp
jg
(bad)
dec
loopne
mov
mov
mov
ins
cmps
call
dec
std
call
push
cdq
je
pop
into
pop
sub
push
icebp
call
mov
addr16
lock
jl
push
xchg
mov
fcomp
sbb
adc
pushf
dec
les
retf
mov
push
fwait
pusha
std
retf
daa
dec
mov
ret
mov
mov
int3
rol
aam
and
or
test
mov
sub
mov
in
rcl
adc
cmp
add
add
ret
xlat
cwde
out
fist
not
xchg
inc
mov
shl
and
pop
fst
neg
mov
cld
ja
(bad)
jmp
cli
(bad)
rol
jl
mov
jnp
ds
push
mov
fiadd
push
or
pop
cli
xlat
dec
push
or
mov
ret
or
inc
dec
fwait
sub
dec
pop
push
jb
(bad)
cmps
push
xchg
sub
stos
mov
icebp
and
push
sub
mov
stos
ret
jnp
dec
enter
mov
pop
xlat
sbb
(bad)
adc
int
fst
sbb
outs
cmp
mov
pushf
fst
test
pushf
pushf
ss
and
test
retf
sub
(bad)
cmp
pop
bndstx
cmps
cwde
fstp
inc
ror
mov
lahf
pushf
fst
js
add
popf
push
outs
in
cmp
ins
pop
and
addr16
mov
pop
rcr
adc
push
fcom
les
push
inc
ins
sub
push
jl
push
retf
pop
jnp
adc
ins
or
fcomp
cmp
outs
inc
(bad)
test
adc
pop
shr
xlat
scas
iret
jp
mov
(bad)
ffreep
push
dec
in
pop
dec
mov
es
pushfw
mov
ret
rcr
mov
mov
xor
cld
call
adc
adc
xchg
cmp
arpl
push
test
push
dec
js
aad
or
mov
adc
pop
je
push
(bad)
mov
mov
adc
shl
adc
sbb
xchg
sbb
sbb
mov
add
jne
xchg
mov
(bad)
fwait
cwde
fcomp
xlat
mov
pop
fist
add
cli
inc
fiadd
mov
ins
push
pop
and
cdq
int3
jo
imul
mov
sbb
stos
inc
jmp
mov
sbb
and
mov
ret
xchg
dec
shl
mov
mov
fsubr
sar
stos
pusha
ret
sbb
fcmovnbe
addr16
aam
xchg
mov
xchg
pop
pop
pusha
push
push
leave
xchg
jbe
xchg
enter
ret
fst
xchg
nop
hlt
mov
and
ret
push
sbb
xor
pop
xchg
nop
sub
sbb
jns
nop
xchg
leave
adc
mov
imul
fisubr
pop
push
cld
jo
pushf
hlt
cwde
sbb
dec
cmps
pop
mov
mov
or
cdq
js
inc
sar
sub
mov
inc
pop
push
call
inc
fst
or
mov
sbb
jl
rcl
cmp
ret
mov
cwde
lods
xchg
test
mov
adc
out
add
imul
mov
or
hlt
test
inc
call
dec
leave
test
sar
fidivr
pop
js
xor
int3
das
dec
mov
adc
shl
sub
or
pop
shl
cs
jnp
jmp
mov
sti
(bad)
fmul
out
sub
push
enter
ret
fs
sbb
dec
aam
in
jmp
mov
mov
adc
xchg
shr
sub
rcr
inc
(bad)
mov
and
add
jge
mov
(bad)
fld
lea
adc
mov
cli
ss
popa
jl
test
(bad)
and
(bad)
into
jecxz
mov
xor
push
pop
mov
fadd
or
mov
in
add
dec
sub
sbb
add
add
mov
sar
xor
outs
xchg
jmp
xor
daa
cs
lods
pop
adc
push
mov
(bad)
mov
jmp
cmp
fstp
inc
push
pop
jg
mov
clc
lds
pop
and
and
ins
dec
mov
and
js
and
jae
pop
pop
and
sbb
jmp
aam
pop
clc
xchg
(bad)
xchg
movs
xchg
inc
xchg
xchg
mov
xlat
sbb
mov
mov
mov
lahf
les
sub
mov
repz
jmp
push
pop
push
dec
jnp
lods
aas
out
mov
retf
mov
dec
xor
ss
push
pop
push
(bad)
mov
and
xchg
jno
mov
sub
pusha
or
mov
ror
ret
ins
(bad)
out
fidivr
(bad)
xchg
ins
push
int3
shl
daa
cmp
test
test
pop
(bad)
xchg
sub
call
sub
sbb
retf
and
or
dec
xchg
mov
mov
mov
fucomp
jecxz
push
test
popf
retf
xor
test
mov
xchg
adc
jmp
movs
sahf
mov
aad
and
aaa
cmp
push
hlt
jmp
add
in
fcmovnu
mov
mov
jmp
mov
pop
mov
mov
cmc
jge
aad
les
pop
sub
aad
and
push
jl
push
rol
adc
jmp
mov
xchg
jl
mov
call
pop
push
fwait
xchg
repz
nop
push
push
pushf
out
leave
ds
mov
icebp
bound
cmps
test
ds
push
jnp
cmps
sbb
sub
push
daa
mov
sbb
xor
into
mov
mov
ja
pop
test
shl
pop
or
pop
and
jmp
ss
repz
cwd
sub
ret
xchg
xor
dec
in
(bad)
mov
or
xor
retf
xchg
stos
cwde
xchg
fwait
sbb
or
jmp
(bad)
push
rcr
xchg
(bad)
dec
out
sbb
jnp
xchg
xchg
out
dec
imul
aad
(bad)
ss
sahf
mov
add
rcl
pushf
mov
movs
push
mov
shl
fisubr
pop
rol
xchg
mov
adc
pop
and
xchg
mov
adc
lahf
xchg
out
mov
dec
and
inc
add
cs
cmps
out
xlat
neg
out
ret
push
cmp
and
xchg
hlt
xor
retf
in
scas
(bad)
in
pop
aad
stos
into
jp
jne
hlt
xchg
dec
(bad)
push
mov
sar
out
jnp
out
pop
pop
mov
outs
shr
imul
rcl
sub
dec
pop
cmp
push
fiadd
hlt
pop
adc
mov
sti
and
pop
pop
mov
cwde
pop
push
mov
(bad)
rcr
add
addr16
push
dec
jo
inc
inc
(bad)
cwde
pop
inc
nop
mov
outs
dec
pop
add
test
xchg
fisttp
mov
push
dec
cwde
inc
int3
jnp
neg
xchg
dec
ror
mov
add
sbb
jmp
cmp
mov
adc
imul
jmp
mov
movs
jmp
shl
aam
sub
icebp
mov
aaa
das
ficom
push
xchg
xor
adc
push
and
xchg
in
(bad)
sti
pop
pop
test
fisubr
push
ret
or
fwait
cs
xchg
add
call
loop
ins
sbb
out
pop
ror
loop
inc
ds
push
mov
push
in
mov
dec
or
jbe
hlt
shr
push
inc
pop
sbb
add
repnz
retf
adc
fstp
int
dec
out
jp
enter
sbb
sub
jmp
mov
dec
dec
std
retf
push
push
dec
jnp
ret
mov
dec
call
xchg
mov
mov
imul
sbb
test
xchg
jl
retf
mov
dec
(bad)
std
cdq
out
push
jmp
cmp
inc
shr
or
add
mov
popf
or
inc
mov
sub
pop
ins
pop
js
inc
call
mov
push
or
test
push
fistp
ficomp
retf
nop
sub
sbb
dec
inc
fcmovne
ins
adc
xlat
pushf
daa
lahf
inc
mov
mov
add
jecxz
jmp
dec
int
call
dec
xlat
add
stos
out
mov
call
mov
push
or
loop
sbb
imul
or
and
hlt
stos
jmp
jmp
push
or
dec
jno
jmp
push
adc
sbb
dec
cwde
cwde
popa
mov
pop
movs
je
fldenv
push
push
out
sbb
aad
add
push
xchg
mov
mov
cmps
sti
movs
push
pop
jb
fmul
pop
cmp
cmc
mov
int3
je
cmp
push
hlt
jge
ss
mov
sbb
test
pop
(bad)
xor
mov
int3
pop
ss
cmp
ins
jmp
adc
shl
adc
in
outs
arpl
pop
imul
push
or
inc
pop
sbb
add
jb
retf
inc
adc
sar
cmp
xchg
cwde
dec
les
push
cs
das
xchg
sbb
adc
or
xchg
or
adc
(bad)
push
xchg
lods
shl
xchg
push
fstp
dec
dec
mov
dec
add
ret
sbb
xlat
je
jmp
test
nop
outs
jae
jne
mov
pushf
xchg
push
jmp
fstp
popa
jge
mov
inc
fwait
cwde
fistp
mov
stc
push
sub
add
inc
pop
mov
push
mov
bound
xor
lea
ret
xchg
ds
cmp
fs
add
jnp
xchg
mov
clc
imul
nop
pop
jmp
xchg
push
xchg
jecxz
jno
dec
imul
push
dec
xchg
cmp
xchg
xchg
sbb
push
xchg
test
sbb
out
rcl
push
push
jns
mov
pop
jl
int
mov
push
mov
mov
and
xchg
cmp
fild
cmp
mov
nop
test
push
js
push
xchg
std
adc
inc
test
xchg
xor
mov
sbb
ss
hlt
push
xchg
lds
xchg
inc
jne
sar
or
inc
fwait
jns
mov
mov
pop
addr16
pop
shl
adc
retf
in
into
cmp
sbb
sbb
cmp
push
imul
xchg
dec
mov
pop
lahf
xchg
in
test
call
jnp
jp
rcr
out
scas
push
sbb
xor
sub
mov
mov
(bad)
jle
stos
and
(bad)
xchg
inc
pop
jle
fwait
ret
adc
bound
mov
push
sahf
lods
sti
pop
adc
(bad)
int
mov
ret
jmp
test
pop
cmps
sti
pop
dec
mov
fisttp
sbb
push
imul
repz
hlt
add
cmp
mov
cdq
pop
adc
mov
test
retf
xchg
cmps
push
xlat
int3
daa
pop
and
(bad)
mov
leave
mov
xchg
dec
add
lock
fist
mov
out
jl
and
xchg
push
and
sbb
int
push
test
cmp
lods
xchg
xchg
push
adc
fistp
cmp
int
or
je
pop
pop
out
mov
fstp
mov
(bad)
cld
mov
mov
or
jl
cli
arpl
pop
or
adc
dec
aam
loopne
fcmovne
inc
mov
rcl
xchg
pop
mov
cmp
loope
or
cmp
mov
pop
sub
add
xchg
hlt
sti
mov
sti
push
or
dec
xchg
or
imul
mov
sbb
repnz
dec
int3
push
push
hlt
ficomp
sub
jmp
jmp
stc
out
mov
adc
or
outs
xor
jns
inc
or
push
dec
pop
or
push
ja
mov
inc
jnp
pop
enter
jl
add
pop
into
sub
loope
dec
movs
cmp
jne
fist
pop
ins
pop
and
pop
adc
xor
mov
sbb
sahf
xor
hlt
pop
sub
(bad)
pop
push
sub
fimul
and
sar
pop
mov
pushf
pop
stos
cwde
add
sahf
leave
shl
ficomp
pop
dec
cld
xor
sub
mov
pusha
movs
mov
mov
add
sbb
test
idiv
lods
inc
sbb
call
cwde
mov
inc
cwde
jmp
dec
ficomp
pusha
push
push
xchg
ror
or
(bad)
cmp
mov
dec
imul
(bad)
xor
sbb
pop
aaa
cmp
adc
test
dec
cli
pop
or
add
sbb
aas
ss
xor
fdivr
int
adc
adc
push
or
pop
pop
rcl
arpl
jmp
loop
push
icebp
fadd
pop
jle
mov
jae
dec
repz
shl
xlat
sbb
into
enter
mov
in
xchg
add
pusha
dec
pop
sub
movs
sbb
pop
and
shl
sub
add
bound
ror
sar
add
aad
movs
test
retf
shr
neg
imul
mov
das
sbb
pop
daa
cmp
pop
outs
adc
sbb
cmp
ficomp
aad
ss
pushf
xchg
cmp
fnsave
pop
cmp
push
mov
xchg
add
mov
ds
push
movs
dec
mov
jp
inc
pop
xchg
cmps
xor
call
sub
(bad)
lahf
mov
jnp
pop
scas
fldenv
jl
pop
jmp
or
popa
sbb
dec
and
sub
aas
retf
sbb
aam
sbb
movs
cmp
int3
(bad)
dec
jle
pop
sub
ret
sbb
lea
dec
push
pop
leave
jmp
in
or
ret
fwait
cwde
aaa
out
cmps
daa
jecxz
call
aad
push
in
jnp
sar
(bad)
sub
jl
ficom
push
xchg
aam
in
jp
fisub
xchg
pushf
xlat
sbb
xchg
fstp
sbb
mov
repnz
dec
dec
aas
rcr
inc
cmp
push
clc
cmc
(bad)
(bad)
jle
adc
clc
rol
mov
ja
pusha
stos
jb
mov
adc
mov
dec
sahf
adc
sbb
mov
cwde
jg
add
lods
mov
fdivr
xchg
aad
jmp
sub
xchg
push
pop
xchg
or
jb
mov
stos
cmp
xchg
(bad)
push
fmul
adc
int
not
fwait
dec
shr
pop
cmp
imul
ror
sub
sub
push
test
sub
jmp
inc
xchg
xchg
ficomp
jnp
imul
call
pop
sbb
or
lods
aam
sbb
mov
pop
dec
(bad)
pop
mov
push
adc
or
mov
sub
jbe
xchg
and
jmp
sbb
fisubr
mul
xchg
pushf
mov
adc
call
mov
jnp
arpl
lahf
ret
jecxz
fisubr
pop
mov
mov
hlt
lods
and
jp
or
(bad)
pop
int3
cli
clc
fisub
mov
push
mov
fiadd
add
inc
stos
mov
and
pop
mov
data16
in
(bad)
rol
test
fadd
sub
mov
repnz
scas
and
leave
jbe
clc
daa
sub
sbb
daa
push
adc
retf
(bad)
ja
sti
adc
mov
fbstp
test
pop
push
and
int
sbb
stc
(bad)
jmp
sbb
mov
inc
or
aam
push
sub
mov
addr16
icebp
inc
cmps
jge
ja
ja
dec
fcomp
cmps
outs
pusha
push
div
push
pop
inc
push
sbb
and
test
shl
push
push
test
pushf
pop
aaa
retf
iret
repz
or
add
and
pop
mov
dec
not
pop
neg
push
sub
ins
cmp
loopne
xor
mov
xor
hlt
pop
pop
fldenv
dec
rcl
inc
test
call
clc
sub
cdq
cmc
pop
popf
fwait
pop
xchg
or
mov
rol
push
ins
mul
int
mov
pushf
push
bound
add
out
push
mov
mov
fimul
sub
ror
aad
fcomp
pop
push
jl
fistp
push
les
inc
les
(bad)
fiadd
push
or
inc
push
pop
(bad)
arpl
push
(bad)
mov
push
cmp
arpl
fild
lea
jmp
push
retf
jp
xchg
jns
mov
inc
ficomp
inc
nop
adc
js
jne
push
mov
push
ja
jmp
retf
inc
xchg
dec
das
mov
dec
pop
adc
inc
push
pop
xor
and
les
cmps
pop
data16
call
jg
mov
test
xchg
std
xchg
cdq
pop
xor
or
mov
xor
dec
test
xchg
mov
js
mov
inc
fimul
push
outs
mov
xchg
mov
xchg
fiadd
int3
test
nop
xchg
xor
lahf
daa
jmp
fucomip
ja
bound
cmp
xor
mov
shr
repnz
add
mov
mov
sbb
sbb
sahf
sbb
inc
jmp
mov
lahf
jnp
pop
pop
fs
fisttp
mov
stos
nop
stos
cmc
xor
ja
pop
pop
sahf
outs
or
sbb
jnp
mov
cwde
jno
push
push
mov
or
or
sbb
pop
mov
div
mov
mov
mov
repnz
sbb
pushf
push
or
fidiv
arpl
mov
pop
push
push
nop
mov
sahf
lahf
mov
push
cmc
adc
pop
test
aad
xchg
out
add
jg
test
dec
push
ins
push
inc
xchg
ror
add
mov
dec
in
enter
push
out
or
mov
lahf
push
pop
stos
shl
add
xchg
call
stc
stos
es
mov
cmp
inc
fxch
fldcw
xor
pop
inc
or
mov
sahf
cwde
mov
(bad)
adc
dec
pushf
pop
test
repz
jg
je
pop
or
movs
out
xchg
imul
(bad)
xchg
and
fwait
cs
fs
es
(bad)
in
pop
adc
pop
fiadd
fld
jbe
retf
xlat
mov
in
les
neg
jp
mov
int
mov
pop
inc
mov
sbb
mov
mov
imul
cwde
push
mov
pop
jbe
dec
xchg
popa
mov
pop
jns
shl
sub
push
mov
je
xchg
mov
mov
and
jp
mov
stos
pop
dec
mov
jmp
mov
xchg
mov
retf
imul
call
dec
movs
pop
ins
movs
mov
inc
imul
mov
push
mov
rcl
cmp
call
mov
or
cmp
cmc
imul
mov
jae
(bad)
stos
mov
pop
test
(bad)
pushf
sbb
mov
jmp
test
and
and
(bad)
jg
xlat
fistp
popf
cs
inc
repnz
cwde
mov
fist
les
nop
(bad)
ret
push
sar
mov
pop
mov
add
hlt
mov
push
neg
jp
cmp
xchg
jmp
call
cli
lods
xchg
(bad)
fisttp
lods
sub
xchg
jmp
push
dec
in
and
mov
icebp
fadd
ja
adc
jbe
movs
sbb
int3
sub
adc
mov
dec
mov
retf
or
adc
or
sbb
cli
sbb
pop
pusha
mov
cld
stos
stos
mov
inc
pop
xchg
dec
call
les
pop
sbb
ror
mov
popf
test
mov
pop
mov
pusha
rcl
test
push
pop
pop
mov
jl
xchg
call
test
(bad)
fst
or
push
rcr
pop
inc
sbb
int
imul
cs
mov
inc
imul
ficom
(bad)
xor
inc
xchg
shl
fistp
fistp
stos
out
jmp
push
dec
and
arpl
test
xchg
dec
sbb
aad
pop
mov
in
fdiv
test
adc
(bad)
sbb
mov
mov
mov
hlt
jl
mov
pop
pop
les
fdivr
or
call
or
sbb
stos
xchg
bound
sbb
jp
xor
inc
add
jmp
dec
jl
scas
jns
jns
xchg
imul
sbb
fistp
pop
js
into
repz
cmp
sar
je
or
repz
inc
pop
sbb
cmps
xchg
xchg
fwait
xor
mov
je
fpatan
nop
mov
push
gs
stos
add
cmp
push
push
cmp
mov
aad
test
iret
fcmovbe
ins
inc
xor
in
mov
sbb
ja
add
jp
mov
cwde
cdq
sbb
jecxz
adc
pop
sbb
add
adc
retf
fist
xor
enter
dec
xor
sbb
dec
xchg
cmps
jmp
jp
xor
push
mov
cmp
retf
xorps
std
cmps
pop
mov
push
push
mul
cmp
mov
mov
popf
pop
mov
cmps
xor
rcr
xchg
aad
aas
out
mov
jp
or
push
fbld
inc
aad
add
ins
or
pushf
inc
dec
mov
jbe
sar
ficom
mov
adc
loop
pop
scas
push
adc
mov
out
sub
cmp
mov
xchg
movs
hlt
retf
push
fcom
test
fimul
mov
fs
sub
mov
repz
stos
(bad)
ins
or
jmp
nop
pop
jnp
add
iret
push
add
push
mov
sbb
xchg
push
mov
mov
cmp
add
add
adc
es
pop
rcl
xchg
aaa
fmul
lods
int3
xor
sbb
mov
push
jnp
pop
(bad)
dec
mov
leave
dec
or
(bad)
cs
dec
jbe
test
mov
movs
daa
nop
xchg
adc
int3
jnp
into
std
mov
imul
mov
not
ss
dec
loopne
jmp
imul
add
mov
out
in
pop
leave
pusha
frstor
stc
inc
rcl
dec
cmp
cdq
sub
fidiv
cli
js
mov
pop
shl
aad
push
scas
mov
stos
dec
lahf
mov
fwait
cld
pop
pop
imul
cmp
jnp
hlt
es
mov
cli
and
nop
sbb
retf
int
fdiv
jp
ficomp
rcl
retf
test
add
ficomp
ins
int
stos
pop
shr
inc
sub
sti
push
fidivr
sub
je
enter
leave
sbb
sbb
mov
nop
ret
jb
mov
imul
retf
xchg
into
xor
or
xchg
fldcw
dec
mov
fbld
movs
rcr
test
sub
mov
mov
sub
jg
fnstsw
jge
adc
sub
or
push
pop
cmp
clc
pop
pop
xchg
inc
mov
inc
ret
add
jae
xor
cs
or
ja
sbb
or
lods
rcl
test
xchg
fsub
sahf
cmp
jl
mov
jl
cmc
pushf
or
pop
add
and
jge
gs
push
nop
stos
dec
sar
dec
fld
xchg
pop
xchg
or
stos
stos
call
imul
les
cmp
scas
and
add
jecxz
sbb
cmp
ins
lods
pop
sub
test
jbe
in
mov
inc
sar
and
ret
int3
mov
test
leave
cmp
mov
mov
mov
pushf
sub
pop
cmp
(bad)
mov
mov
scas
ret
sahf
mov
sbb
jb
(bad)
cmps
cld
adc
sbb
fldcw
or
mov
sbb
std
or
shl
das
stos
fiadd
ret
ja
in
lahf
retf
push
ret
test
mov
std
sbb
jnp
jb
retf
adc
xchg
fidiv
mov
mov
push
ins
cmp
inc
lods
sti
test
in
daa
dec
jmp
xchg
mov
xor
xchg
mov
clc
and
mov
jne
rol
pop
xor
(bad)
jmp
cmp
lods
ins
dec
mov
sahf
cdq
sbb
jae
(bad)
push
pop
jle
dec
xchg
sbb
mov
imul
mov
jmp
inc
sbb
push
(bad)
cli
jo
retf
mov
fwait
pop
xchg
xchg
movs
stc
inc
jnp
or
inc
rcr
fisttp
call
xchg
fild
stos
xchg
push
into
ins
sbb
mov
int3
adc
mov
(bad)
(bad)
mov
sub
pushf
jae
cmps
inc
enter
sar
in
push
mov
stos
pop
mov
and
mov
pop
es
stos
and
mov
adc
cmp
xor
aam
rcr
cdq
jp
add
lds
sbb
retf
out
mov
loopne
ss
xor
sahf
arpl
arpl
fisub
aad
repnz
xor
and
and
inc
jb
and
daa
xor
retf
pop
jle
cmp
fidivr
inc
in
cmps
pop
les
fmul
mov
dec
push
stos
je
fwait
repnz
out
inc
add
aaa
dec
mov
pop
cmp
mov
dec
xchg
lds
test
div
and
mov
pop
push
sub
and
test
fild
mov
inc
xchg
sbb
pusha
fisubr
out
sub
push
xlat
addr16
xlat
mov
stc
ficomp
popa
sbb
lds
ficom
pop
push
mov
cmp
mov
call
jmp
mov
je
pusha
(bad)
imul
jg
mov
or
pop
ins
pop
fidiv
or
push
cmp
sahf
cmp
cmps
test
jp
pusha
push
shr
aaa
shl
adc
sbb
pop
call
jno
sahf
adc
push
(bad)
jno
cmp
xor
call
popf
jnp
push
dec
lods
sbb
je
out
inc
mov
or
mov
sub
mov
call
(bad)
mov
scas
cld
cmps
in
jae
sub
mov
cmp
faddp
pop
mov
bound
fcom
aam
sub
(bad)
jl
xlat
push
fcom
fisttp
pop
(bad)
xchg
test
retf
rcl
xchg
sar
xchg
je
ror
xchg
rcl
push
push
xor
(bad)
pop
xchg
jns
jge
je
fiadd
push
adc
jno
adc
push
test
push
rcl
jnp
popa
mov
mov
adc
cld
jmp
in
mov
jecxz
add
fcmovnbe
jo
imul
in
imul
outs
jmp
fnstenv
jnp
xchg
mov
and
mov
add
dec
or
push
mov
sub
push
sbb
fs
test
ror
pushf
mov
pushf
adc
add
fistp
add
jmp
stos
mov
ja
push
retf
jg
cmc
rol
mov
aam
pop
arpl
mov
jp
popf
shl
xchg
inc
fsqrt
push
fucomp
inc
add
fwait
ret
dec
sbb
into
je
int
mov
jns
xchg
sub
in
jg
fcmovnbe
push
pop
add
call
pop
scas
xor
inc
dec
int3
sub
rcr
sbb
pop
retf
add
sub
mov
pop
lods
xlat
xor
mov
rcl
aam
xchg
inc
ds
dec
stos
add
fisttp
mov
mov
inc
jecxz
jl
push
rcr
or
lods
xchg
and
mov
mov
cmp
test
mov
(bad)
mov
pop
aaa
ficom
dec
lods
jmp
rcr
bound
sub
pop
popa
push
mov
mov
test
inc
add
loop
mov
fisttp
cmp
jecxz
sti
push
pop
xor
mov
push
cmc
fbld
and
xchg
mov
stos
(bad)
cmp
retf
jbe
test
adc
add
jle
mov
fadd
nop
push
cmps
and
inc
in
pop
pop
mov
in
ja
retf
xchg
cmp
cmps
or
and
imul
lds
jp
xchg
xchg
dec
adc
aad
enter
sti
aam
push
cwde
jmp
or
pusha
dec
xor
adc
mov
dec
(bad)
cmp
stos
pusha
mov
push
imul
and
ja
dec
test
sub
pop
xchg
dec
and
test
mov
pop
je
pop
jmp
int
mov
cdq
mov
sahf
xlat
test
(bad)
sub
add
popa
pop
sbb
jmp
mov
sub
sbb
test
dec
shl
nop
adc
bswap
adc
mov
mov
pop
cli
loop
test
lods
arpl
aas
pop
xor
popf
mov
mov
aad
inc
mov
aad
dec
pop
xchg
stc
cmps
popa
retf
pop
data16
into
sub
mov
pop
dec
ja
jp
ficomp
cmp
jp
sub
movs
cmp
test
fidiv
mov
add
fisubr
jle
retf
mov
and
rcl
pop
xchg
mov
adc
sahf
jl
ja
inc
xchg
sbb
jecxz
push
das
adc
fldcw
or
mov
out
inc
jmp
test
js
sub
dec
push
test
pushf
sbb
icebp
sbb
fcomip
nop
cmp
fstp
out
adc
or
adc
shl
idiv
push
bound
lods
push
pop
psubb
div
mov
out
xchg
int
mov
xchg
adc
jg
mov
popf
add
hlt
lea
int
inc
push
lods
push
sbb
inc
adc
test
push
out
nop
push
pop
lahf
out
lahf
jle
xchg
or
in
xor
leave
outs
(bad)
ins
cmps
fidiv
aas
dec
and
cmp
mov
out
ret
and
or
ss
pop
push
dec
xchg
mov
push
dec
pop
jmp
lea
fucomi
push
jae
cmps
int
retf
mov
mov
xchg
sub
mov
jmp
mov
or
mov
(bad)
xchg
pop
faddp
mov
or
ret
pop
dec
imul
xchg
(bad)
xchg
stc
push
xchg
fist
mov
mov
retf
pop
rcr
sub
rcr
push
cs
in
jp
sbb
(bad)
out
xchg
xchg
pop
xor
repz
stc
pushf
lahf
jmp
ret
sbb
xchg
(bad)
mov
(bad)
and
xor
push
add
pop
test
scas
dec
xchg
inc
xchg
packsswb
ret
mov
pushf
ftst
xor
jae
cmps
scas
xor
pop
lock
retf
xchg
push
mul
ror
jmp
dec
ror
iret
les
inc
jmp
sti
mov
push
adc
push
test
fadd
in
and
mov
dec
ficomp
mov
pop
pop
sar
xchg
xlat
jmp
fst
jp
lods
dec
fwait
push
daa
push
inc
vmwrite
push
jmp
mov
dec
jae
mov
mov
fnstcw
ret
cdq
mov
sbb
mov
cmp
xchg
push
mov
dec
cmp
jp
fisttp
mov
leave
mov
dec
sub
pop
cmps
lods
scas
pop
fcmovnu
and
fst
push
fwait
cmp
pop
push
fwait
shr
jmp
inc
in
ret
sub
pop
sbb
fwait
cmp
retf
loope
in
stc
sub
lahf
adc
cmc
sbb
rep
ficom
cmp
sar
sub
fist
dec
pop
inc
ret
mov
cmps
jecxz
sub
mov
js
xchg
retf
push
xchg
lock
push
mov
(bad)
xlat
push
mov
aad
mov
gs
pop
cli
popf
cdq
in
cli
jge
out
push
cmp
pop
les
push
leave
aaa
fidivr
pop
mov
mov
sbb
mov
add
scas
mov
cmps
pop
pop
loop
fst
rcr
rcr
shl
aam
add
sub
out
retf
adc
sub
out
retf
adc
sub
fstp
sub
jmp
mov
push
sbb
inc
test
pop
ins
stos
jb
or
jmp
mov
aad
lods
retf
dec
jl
shl
mov
jg
mov
bound
mov
pop
aad
jl
ja
mov
ja
or
mov
out
movzx
ja
aad
push
mov
dec
mov
fcmovnb
xor
mov
call
out
jmp
and
inc
jno
aad
loopne
cdq
clc
add
cmp
push
mov
mov
mov
(bad)
jmp
mov
or
addr16
pop
mov
mov
cmp
daa
xchg
lds
push
mov
adc
leave
fild
pop
or
mov
nop
addr16
push
sbb
sbb
pop
or
jp
push
rcl
test
call
push
and
retf
call
cmp
mov
jns
cmp
pusha
xchg
or
inc
test
pop
mov
jnp
in
mov
and
cmp
cmp
cmps
or
mov
jae
sbb
xor
sahf
stos
int3
cdq
(bad)
adc
pop
mov
or
out
pop
pop
sbb
imul
mov
int3
mov
and
stc
dec
out
(bad)
mov
add
and
push
lahf
or
or
mov
mov
fwait
shr
sbb
mov
mov
pop
sub
inc
push
loop
fadd
pop
pop
mov
push
in
popa
mov
(bad)
ja
loopne
addr16
mov
mov
sahf
std
fwait
jmp
push
inc
fmul
push
ror
(bad)
shld
pop
adc
xchg
shr
mov
cmp
loop
inc
int3
mov
inc
xor
push
adc
mov
and
and
push
addr16
popf
(bad)
repz
adc
stc
(bad)
inc
mov
jmp
sti
outs
xchg
jp
dec
mov
fcmove
pop
test
xor
xor
stc
jmp
push
adc
xlat
push
nop
fist
int
dec
sbb
jmp
ins
ret
call
sub
fild
push
adc
popa
xchg
dec
and
xchg
jae
call
nop
jmp
loope
mov
pop
mov
test
cmps
adc
bound
rcl
lods
dec
daa
mov
sub
cmp
mov
and
sbb
add
pop
mov
sbb
stos
push
imul
ins
sub
jge
pop
pop
mov
inc
push
fistp
idiv
aam
pop
mov
shl
iret
add
xchg
aaa
xchg
icebp
pop
out
push
xor
imul
mov
int
ins
sti
xor
scas
clc
mov
bound
rcr
xchg
ja
rol
sti
pop
les
mov
xchg
scas
aam
xor
mov
pop
js
cwde
not
sub
push
pop
imul
sahf
and
sti
in
cli
pop
inc
pop
test
mov
mov
pop
pop
sbb
xchg
xor
fcomp
stos
aad
cmp
cmp
xchg
xchg
xor
xor
mov
dec
scas
cld
mov
inc
imul
jo
or
mov
inc
mov
push
mov
jmp
mov
inc
out
dec
xor
xchg
adc
pushf
test
rcr
cwde
add
xchg
bound
xchg
aaa
mov
push
jmp
(bad)
jae
cli
pop
icebp
in
pop
retf
fistp
adc
stos
push
(bad)
fs
dec
sti
push
fnstcw
dec
push
or
bound
lahf
clc
fistp
mov
clc
mov
jnp
pop
push
scas
pop
fist
icebp
add
add
xor
inc
add
stos
jne
inc
inc
mov
xchg
not
adc
push
mov
aam
inc
sub
sub
popf
stc
fstp
ds
mov
mov
xor
inc
cdq
jo
mov
aaa
dec
ins
lahf
xchg
pop
fistp
jmp
jmp
not
cwde
inc
add
loope
ja
dec
pop
push
inc
sbb
mov
int3
xor
fldpi
xchg
sbb
in
ins
ss
(bad)
int3
jmp
pop
fmulp
(bad)
fild
jb
inc
ficom
sbb
aad
mov
popa
mov
xchg
stos
les
xchg
mov
(bad)
(bad)
rcr
je
adc
mov
xlat
dec
sbb
push
adc
pop
leave
shr
sbb
jecxz
outs
sbb
aad
call
retf
sbb
sub
xchg
clc
stc
pop
mov
fwait
stos
mov
stos
add
mov
daa
xchg
sbb
push
mov
add
pushf
aam
cmp
cmp
push
stos
pop
cmp
mov
stos
repz
xchg
hlt
mov
lods
sub
js
sub
cmps
adc
push
mov
retf
int
retf
test
inc
dec
cwde
jne
push
lods
test
movs
ds
mov
inc
mov
mov
je
shl
cmps
sahf
stos
mov
aam
lods
sub
mov
iret
sti
imul
stos
sbb
inc
lea
xchg
cmc
sbb
cwde
sbb
addr16
adc
jmp
cmc
enter
sti
sub
mov
push
adc
sub
cmc
push
xchg
nop
xlat
mov
sbb
dec
js
retf
ins
inc
sbb
cmc
mov
fldcw
lds
jmp
pop
dec
push
into
xor
adc
arpl
lds
or
retf
pop
xlat
loope
push
lahf
ret
pop
cli
iret
hlt
mov
xor
cli
sbb
stc
mov
mov
dec
jno
or
aaa
popf
dec
cmp
ficom
daa
pop
mov
pushf
lea
shl
mov
xor
mov
cli
repz
es
push
mov
ret
mov
jmp
mov
es
xchg
dec
jle
pop
std
popa
pop
rcl
and
fistp
stos
mov
jno
mov
call
push
xchg
sbb
es
or
push
pop
inc
out
fistp
xchg
leave
sti
mov
pop
stos
jno
stos
mov
dec
mov
pop
push
ror
fdiv
rol
fistp
xchg
retf
pop
je
add
jmp
lds
and
out
or
push
fist
test
xor
iret
xchg
jle
jmp
(bad)
stos
mov
xchg
retf
das
movs
mov
enter
pop
lahf
xor
sub
xor
sub
push
mov
loope
pop
ss
jl
inc
xlat
iret
xlat
int
sbb
aam
jmp
push
sar
push
rcl
xchg
daa
mov
xchg
ret
dec
js
int3
xlat
mov
pop
arpl
ror
sub
fnstcw
mov
cmc
adc
xchg
cli
movs
xlat
int3
pop
mov
mov
sub
sub
fimul
jb
jnp
push
ror
sbb
push
lods
push
mov
mov
pop
ds
icebp
mov
outs
cmp
fistp
inc
adc
(bad)
cdq
and
(bad)
retf
test
(bad)
mov
pop
rcl
xchg
dec
pop
idiv
pop
jge
sub
nop
in
stc
iret
inc
jae
mov
outs
ins
jbe
call
in
add
push
sbb
stos
leave
add
mov
in
movs
dec
inc
mov
in
shl
fcmove
push
movs
arpl
in
(bad)
mov
jmp
neg
shl
retf
fimul
sahf
jl
ficomp
les
lahf
pushf
fistp
adc
pop
lahf
iret
sbb
sub
and
neg
push
sub
test
mul
push
dec
push
aad
fcom
add
scas
pop
(bad)
push
call
std
and
arpl
fnsave
xor
es
xor
es
jge
test
jp
sub
repz
cmp
mov
ins
(bad)
bound
fsub
xchg
sbb
push
inc
mov
fcom
sar
sbb
mov
ficom
pop
cmps
sti
pop
pop
in
(bad)
fidivr
inc
jmp
or
imul
shr
stos
sub
aas
lock
mov
fistp
pop
js
or
aad
test
stc
push
daa
mov
retf
mov
pop
lahf
sbb
jns
push
ins
loopne
inc
or
jg
jp
push
retf
cwde
sbb
cmp
inc
les
cli
ins
cdq
mov
out
vshufps
sbb
fld
push
sbb
les
pop
ret
or
cwde
retf
call
cld
pop
sahf
je
lahf
jmp
push
nop
xchg
adc
or
sub
sub
and
dec
mov
dec
call
fs
popa
jo
retf
jne
push
push
pop
dec
adc
in
ds
fild
push
fbld
imul
inc
sahf
ins
pop
popf
rcr
pushf
or
ss
pop
xchg
hlt
push
nop
mov
into
mov
inc
mov
xchg
pop
adc
fist
xchg
dec
mov
push
cmps
adc
xchg
and
jne
retf
nop
nop
adc
mov
fidivr
or
mov
ret
lods
sub
sbb
cwde
push
jo
mov
nop
cmp
call
jo
add
xchg
ins
dec
sbb
xor
retf
mov
xchg
mov
dec
retf
leave
mov
xor
retf
mov
cmp
sbb
inc
jecxz
sub
mov
pop
retf
leave
ins
push
mov
cld
shl
int
sbb
daa
cld
outs
sub
sti
xchg
pop
pop
xor
xchg
aas
repz
xor
mov
pop
dec
dec
stos
outs
int
sbb
xchg
and
xchg
lea
dec
cmp
adc
mov
jge
enter
push
adc
mov
pop
loope
int
push
aad
shr
movs
cmp
mov
idiv
ret
push
push
push
xchg
fbstp
adc
xchg
sahf
inc
(bad)
stos
mov
mov
js
xchg
inc
(bad)
xor
daa
out
fldenv
mov
popf
fcomp
jle
push
ret
fcomp
idiv
push
fldenv
fcmovbe
push
lock
jp
clc
(bad)
addr16
in
cmc
push
pop
imul
retf
ja
xchg
fsub
cmp
and
stc
popa
pop
ror
pop
frstor
fmulp
out
repnz
pop
xor
shl
push
xor
jmp
data16
mov
pop
sbb
mov
mov
lods
(bad)
pop
push
pop
pop
mov
inc
push
xchg
and
cmp
sub
pop
retf
fstp
cwde
push
mov
xor
les
cld
int
mov
add
inc
ja
aad
lock
(bad)
or
mov
(bad)
repnz
test
dec
adc
dec
add
and
bound
inc
xchg
ds
mov
jno
icebp
sti
and
fnsave
and
pop
icebp
aaa
(bad)
(bad)
pop
or
leave
nop
pop
int3
pop
mov
pop
add
scas
mov
jmp
dec
push
and
push
cld
pop
inc
mov
sbb
pop
jb
and
(bad)
fldenv
dec
fistp
push
fxch
xchg
retf
arpl
mov
pop
fcom
rcl
cmp
shr
test
pop
loop
sub
std
jne
call
xlat
or
call
enter
sub
mov
out
shr
push
mul
loope
jns
or
loope
nop
xchg
loope
fist
push
bound
imul
sub
adc
call
jno
popa
mov
cmps
add
and
dec
shl
xor
sbb
outs
xor
sti
cmp
cmp
adc
adc
push
mov
aad
inc
cmc
push
leave
pop
stos
ret
fnstcw
xor
in
inc
sar
fstp
rcr
adc
js
loopne
mov
not
iret
addr16
dec
into
or
cld
xor
sub
pop
loope
movs
pop
into
mov
mov
inc
add
jge
iret
fs
mov
dec
push
jnp
inc
inc
jns
not
pop
cmps
pop
fist
inc
mov
cli
sub
rol
jnp
dec
cmp
add
mov
mov
sbb
shl
cmp
jge
inc
fcmovbe
aam
cld
jge
pop
rcl
daa
or
mov
rol
lock
xchg
dec
gs
sub
div
mov
adc
xor
fstp
fcomp
mov
cli
mov
std
xchg
dec
pop
mov
jmp
mov
bound
push
nop
fstp
push
lods
test
jmp
stos
retf
xchg
test
push
push
fs
sti
sti
bound
test
test
pop
adc
mov
sbb
pop
ret
adc
adc
fs
xor
test
(bad)
shl
out
fbstp
fwait
ret
fisttp
push
nop
nop
rcl
xchg
and
ret
aad
clc
push
shl
mov
lock
sub
int3
test
adc
jmp
(bad)
and
pushf
and
xchg
sub
adc
xor
mov
test
pop
mov
adc
rol
xor
sbb
stos
retf
xchg
ficomp
cmp
stc
outs
sub
and
mov
jns
pop
shl
add
mov
cdq
sub
mov
cmovno
pushf
sub
push
fcom
dec
icebp
and
ret
jb
fimul
push
adc
adc
adc
jno
xchg
cmp
daa
push
mov
nop
xor
dec
and
fnstenv
call
cs
mov
mov
pop
mov
data16
jmp
or
mov
dec
pushf
sub
rol
fdivr
mov
retf
jecxz
sbb
test
shl
(bad)
rol
call
xchg
xor
inc
ror
add
xchg
cmp
xchg
out
and
outs
mov
movs
call
jp
jnp
std
dec
dec
mov
pop
adc
pushf
xchg
je
cmp
pop
xor
dec
call
cmp
cmc
and
shl
pop
add
jp
shr
cli
fidiv
add
mov
popa
or
inc
(bad)
xchg
sar
push
jg
jo
pop
pop
push
shl
and
pop
push
pop
mov
mov
(bad)
shl
mov
or
jecxz
stos
add
mov
xchg
inc
outs
ins
sbb
stc
pushf
add
cmp
push
mov
shl
adc
cwde
xchg
mov
adc
xchg
idiv
sbb
mov
pop
inc
das
pushf
add
pop
jge
bound
push
sbb
jne
adc
cmp
or
xchg
sbb
data16
cmps
and
sbb
test
mov
loop
pop
sbb
jne
(bad)
mov
push
shl
jnp
pop
jnp
xchg
sahf
pop
or
loope
imul
mov
mov
inc
fcmovnbe
mov
fiadd
mov
dec
dec
add
jp
dec
shl
sar
fld
mov
les
sub
add
jae
mov
sub
mov
or
dec
xchg
int
mov
cwde
push
out
mov
cli
fwait
lea
pop
push
jne
sub
adc
pop
fcmovu
arpl
popf
lods
sub
mov
mov
cmp
push
stos
sub
clc
mov
fiadd
out
or
dec
mov
pushf
data16
sar
xor
std
jmp
ja
sbb
fstp
sub
loope
sti
push
call
jecxz
jmp
xadd
mov
add
shl
jnp
pop
call
fsub
pop
jae
retf
loop
jg
lahf
push
loope
sbb
(bad)
hlt
mov
jnp
fadd
dec
rcr
je
adc
mov
xlat
cmp
adc
popa
ins
shr
xor
sbb
pop
addr16
push
mov
mov
mov
ds
ins
sub
xchg
sbb
pop
cmps
imul
das
(bad)
inc
out
sbb
mov
inc
mov
imul
and
xchg
leave
sub
repz
stos
clc
mov
gs
adc
(bad)
mov
call
ins
sub
push
pusha
test
push
push
fs
nop
sti
mov
mov
sub
dec
out
fcmovnbe
add
(bad)
and
adc
xor
inc
stc
jge
daa
popa
sbb
test
daa
jno
rcr
jmp
rcl
and
cli
sub
ins
push
lds
aas
fistp
(bad)
xchg
rcl
xlat
pop
sti
mov
or
xor
mov
xchg
fcmovnbe
push
adc
pop
xor
aad
mov
ror
add
ffree
mov
cwde
sbb
fwait
sbb
push
push
imul
stos
xchg
jmp
xchg
add
repz
jne
jb
lahf
inc
mov
xchg
hlt
pop
sbb
div
sub
clc
sub
mov
cs
fwait
arpl
mov
fstp
mov
inc
jge
sub
push
pop
int
add
sub
sahf
lahf
inc
jge
imul
add
hlt
mov
stos
mov
ficom
xor
pop
mov
or
neg
add
xchg
jle
xor
xchg
mov
add
fcom
bound
fidivr
popa
mov
outs
mov
xlat
mov
or
push
fist
xchg
hlt
sti
pop
pop
jb
pop
bound
retf
jg
jne
shr
test
fcmove
aad
or
loopne
or
jne
xchg
stos
sub
lock
sbb
push
push
loopne
loope
mov
pop
jnp
jns
stos
pop
mov
int
mov
cmp
push
and
and
dec
pop
mov
adc
lods
cdq
sub
stos
sub
aad
pop
dec
mov
pop
inc
push
xchg
fld
adc
mov
sbb
push
in
and
inc
pop
dec
fdivr
mov
pop
aad
aad
ror
push
aad
cmp
mov
dec
sbb
test
rcl
nop
pushf
icebp
sub
mov
daa
pop
lea
mov
sbb
mov
pop
imul
ror
jmp
jl
mov
lods
cld
push
ds
pop
sub
jae
pop
inc
mov
mov
sub
ds
test
xchg
and
fstp
dec
sete
loop
cs
test
sbb
out
pop
shl
popa
add
nop
fstp
aad
out
xlat
push
pop
mov
mov
loope
mov
rcr
(bad)
stc
fisubr
les
iret
call
pop
retf
push
lods
inc
mov
icebp
cli
rcr
dec
or
mov
mov
xchg
pop
or
fsubrp
mov
jge
cmp
mov
pop
aam
sbb
(bad)
pop
jge
mov
(bad)
mov
add
sub
aam
xor
mov
fadd
stos
int3
mov
ds
adc
movs
xor
into
jmp
sahf
xor
mov
in
mov
ds
lahf
test
push
call
mov
mov
adc
ds
jecxz
push
ret
jmp
sbb
push
lea
cmp
push
dec
pop
dec
jmp
mov
mov
imul
xor
jo
daa
jp
mov
jl
push
lea
jmp
push
movs
xor
mov
mov
and
out
mov
push
mov
(bad)
not
mov
cmp
xlat
out
stc
dec
lock
xor
mov
pushf
je
test
adc
fs
in
rcr
adc
pop
jg
xchg
call
popa
cwde
in
sbb
jg
retf
ret
rcr
call
repz
mov
dec
jle
pop
sub
call
push
fisubr
jle
xlat
xor
mov
dec
and
sub
mov
mov
mov
shl
xchg
mov
not
pop
mov
fild
inc
jl
rol
jmp
adc
pop
outs
or
jmp
pushf
fs
push
lods
iret
out
mov
shr
pop
mov
aas
shl
aaa
pop
pop
or
mov
ret
pop
mov
gs
rcr
mov
test
sub
shl
lock
shl
test
movs
mov
test
ins
jb
jp
and
sub
mov
nop
push
xchg
adc
xchg
mov
outs
(bad)
pop
pop
jl
pop
(bad)
pop
and
sub
sti
gs
fwait
test
sub
mov
popa
imul
push
xchg
push
pop
ret
int3
lods
mov
xchg
test
sbb
jae
jnp
stos
push
xchg
shl
and
inc
imul
mov
neg
in
fst
fidiv
call
into
mov
ins
or
sbb
mov
fbld
stos
rcr
cmp
out
pop
cmp
test
pop
fst
push
in
rcl
pop
(bad)
pop
jno
stos
(bad)
sar
fld
sub
jmp
mov
(bad)
shl
stos
(bad)
cmp
inc
fucomip
dec
sar
popa
rcl
xchg
cli
loopne
shl
adc
or
mov
int3
sbb
popa
shl
mov
daa
fsubrp
shr
adc
imul
hlt
rcl
push
scas
in
mov
rcl
adc
out
nop
pop
cmp
imul
adc
sti
mov
outs
rcl
test
xor
mov
or
aam
fldenv
mov
mov
xchg
hlt
test
sar
cmps
mov
outs
hlt
rol
shl
popa
pop
sub
fst
sub
lock
(bad)
dec
ss
out
add
fcomp
popa
stos
fisub
(bad)
stc
mov
or
push
cld
mov
loopne
or
test
push
in
mov
lea
jmp
repz
xchg
add
popa
xchg
popa
push
jmp
pop
loope
adc
arpl
nop
imul
jmp
lods
movmskps
cmp
push
inc
jge
or
push
pop
imul
sub
lds
sbb
popf
push
sbb
mov
fs
mov
rcr
dec
rol
das
jp
ficomp
push
pop
xor
mov
dec
out
call
xchg
mov
mov
pop
jecxz
ins
ficomp
cmps
shl
sub
(bad)
leave
and
gs
fistp
ins
pop
xchg
scas
sub
or
retf
sar
into
xor
jmp
js
stc
mov
fist
mov
fucomip
jecxz
sbb
aad
sub
fistp
fstp
jge
fs
ror
outs
fistp
or
xchg
sbb
sub
aas
(bad)
sub
and
(bad)
push
(bad)
ins
(bad)
sbb
fist
cmps
adc
retf
lock
sahf
rol
in
into
jmp
stos
mov
mov
sub
(bad)
fimul
ffreep
fucomip
rcr
sahf
rcr
sub
ins
add
stos
pop
adc
dec
mov
rcl
shr
sbb
fild
add
rol
sbb
jb
ss
sub
mov
imul
outs
xchg
rcr
pop
outs
in
dec
adc
fdiv
xor
or
aad
test
jo
mov
sub
and
push
fsubp
mov
scas
rol
shl
mov
mov
push
pop
rcl
mov
sub
test
vpsllw
mov
jnp
daa
jb
or
dec
and
xchg
ror
pushf
xor
xchg
test
cld
sub
fidiv
cmp
fstp
test
cmp
pop
pop
pop
sbb
lds
fisub
cmp
fistp
retf
shr
push
cld
xchg
popa
mov
ja
pusha
test
and
adc
sub
stos
jp
cdq
(bad)
(bad)
leave
gs
into
stc
and
je
retf
cmp
xor
ins
aas
imul
movs
ret
stc
les
adc
lahf
sub
les
cs
stos
mov
fld
cmp
(bad)
and
fs
mov
pushf
movs
xchg
mov
packssdw
fwait
xor
cmp
add
aam
enter
jnp
std
push
test
mov
adc
add
jo
pop
ss
push
fldenv
mov
or
mov
fwait
push
(bad)
xor
arpl
jle
pushf
lds
mov
stos
cmp
test
stc
mov
fidiv
in
iret
data16
add
(bad)
loop
popf
push
fbstp
retf
ficom
loopne
rcr
les
neg
fst
mov
inc
fild
sti
nop
mov
sub
ins
pushf
cmp
icebp
call
ror
test
in
pushf
das
jne
xor
or
pop
(bad)
adc
inc
into
dec
jno
pop
mov
jae
shr
pop
shr
jnp
in
dec
repz
cmp
fstp
arpl
or
mov
xchg
push
sbb
xchg
cmc
mov
sub
pop
xchg
jp
lods
mov
lahf
les
hlt
bound
mov
inc
pop
mov
mov
add
loopne
sub
xchg
rcl
push
mov
mov
mov
mov
arpl
cmp
mov
std
mov
cmc
xchg
pop
inc
mov
sub
mov
(bad)
jnp
cmp
mov
icebp
xor
clc
mov
loopne
adc
ins
adc
dec
iret
fistp
fdivr
cmp
sub
out
(bad)
pop
add
jne
daa
push
cli
fcomp
ffreep
push
jmp
shl
xor
push
mov
cmp
and
and
jecxz
pop
enter
push
sbb
mov
loop
fsubr
pop
fld
push
pop
and
imul
imul
cs
mov
xchg
mov
sbb
xchg
mov
cmc
nop
jp
sbb
fwait
or
and
lea
xchg
mov
ss
mov
sbb
call
sub
test
ret
or
mov
sbb
add
les
add
adc
rcr
adc
test
push
push
jp
push
loopne
loope
aaa
and
xchg
test
sub
and
sub
hlt
xchg
neg
xor
mov
pushf
mov
push
push
push
jg
add
addr16
xchg
or
lahf
into
cmp
pop
(bad)
fisttp
retf
test
push
pop
add
sahf
cmp
push
pushf
test
mov
push
out
mov
mov
in
cmp
loop
ss
sar
add
mov
test
(bad)
mov
aad
in
imul
sub
lahf
cmp
retf
mov
dec
add
xlat
push
out
lods
xor
jmp
pop
addr16
sbb
test
xchg
clc
cmps
inc
push
ins
jmp
inc
jmp
and
(bad)
push
daa
lods
push
call
daa
call
daa
ret
jmp
sub
add
pop
inc
dec
loopne
sti
in
sub
fimul
shl
cmps
jle
out
inc
stos
cwde
inc
test
scas
or
sub
rcl
shl
mov
xchg
std
push
xor
daa
pop
(bad)
jp
jge
sbb
jecxz
lock
imul
ficom
test
fisub
push
in
imul
mov
int3
(bad)
fmul
mov
dec
fist
mov
cwde
adc
imul
stos
lahf
xchg
xor
push
sahf
xor
sub
stos
mov
test
dec
sub
ror
jmp
mov
cmp
pop
ds
(bad)
aad
pop
jno
mov
das
shr
jmp
repz
pop
out
dec
push
fisttp
iret
in
nop
sub
hlt
push
(bad)
xchg
pop
scas
adc
adc
bswap
jle
out
mov
enter
inc
out
lahf
push
stos
and
cmp
adc
cmps
pop
push
push
movs
imul
enter
mov
sub
pop
mov
pop
sub
adc
cmp
into
in
scas
cmps
pop
mov
pop
jns
mov
dec
and
out
add
fistp
fisub
mov
popa
or
popa
mov
test
outs
pop
adc
adc
push
shl
addr16
cli
sahf
and
xchg
sbb
fisttp
test
daa
jae
adc
mov
outs
(bad)
shr
(bad)
jl
scas
xchg
sub
or
fild
(bad)
mov
push
mov
cmp
mov
dec
pop
in
push
inc
xchg
rcl
inc
aam
into
clc
push
and
sti
pop
mov
inc
ds
leave
fdivrp
repz
mov
rcr
(bad)
arpl
(bad)
es
pop
out
xlat
mov
cmp
imul
test
stc
shl
sub
sbb
mov
fs
in
icebp
xchg
not
pop
jbe
mov
mov
and
jmp
pop
xchg
pop
adc
ret
cmc
inc
pop
push
pop
outs
es
or
add
dec
dec
mov
loopne
test
mov
lds
lock
cmp
xlat
(bad)
cdq
arpl
add
mov
repnz
mov
mov
inc
mov
loop
test
jge
xor
nop
mov
scas
adc
xchg
xor
push
pop
xchg
rol
scas
mov
jmp
mov
mov
(bad)
and
jle
lds
xor
adc
aam
lock
push
mov
call
and
push
std
das
nop
imul
out
sbb
xlat
idiv
xchg
adc
adc
bnd
lock
cli
push
add
mov
test
sar
sbb
sub
push
pop
test
dec
icebp
fild
and
add
fild
std
push
cld
mov
sbb
mov
pop
cmp
neg
xor
inc
jmp
xchg
pop
pop
xchg
xchg
dec
jle
and
inc
xchg
xchg
dec
jle
arpl
mov
xchg
dec
ja
test
push
fsubr
sti
sub
cmp
lahf
push
sub
inc
stos
adc
or
movs
sub
mov
cmp
fnstenv
inc
cmps
sub
nop
retf
xchg
pop
aas
pop
dec
mov
mov
stc
xchg
xchg
sti
cmps
pop
call
aam
mov
ja
pop
movs
gs
sub
nop
push
mov
dec
push
sub
nop
mov
shr
pop
push
push
dec
add
pop
push
and
jg
cmp
add
stos
push
sbb
add
fimul
addr16
imul
adc
shl
mov
sub
lock
push
add
shr
rcr
stos
ret
xchg
add
pop
push
fild
cmp
add
pusha
cmp
or
out
hlt
mov
or
(bad)
fisttp
pop
hlt
pop
sub
stos
or
ins
stos
sti
mov
mov
and
fwait
out
inc
dec
enter
pop
mov
mov
add
sub
jge
pop
lock
jmp
xchg
sbb
sub
cdq
in
fist
add
jecxz
and
imul
nop
pop
aad
daa
mov
push
cmp
mul
or
stos
das
jmp
mov
cmp
ret
sbb
push
pop
arpl
mov
(bad)
pop
mov
mov
movs
xchg
ss
test
mov
lea
and
xor
outs
cmps
enter
rcl
or
mov
mov
mov
addr16
out
xchg
cwde
jle
pop
test
mov
jns
aad
outs
(bad)
push
in
je
or
dec
adc
popa
(bad)
mov
clc
rol
cmc
cmp
mov
jmp
nop
xchg
(bad)
sbb
cs
data16
xchg
fnstcw
sar
sub
xor
addr16
push
lahf
daa
jg
pusha
cmp
bound
popa
push
pop
push
int3
sti
pop
pusha
shr
mov
and
popf
popa
push
fwait
daa
push
mov
into
out
jnp
lock
xor
mov
fs
push
pop
or
mov
test
loope
mov
sbb
jg
sbb
shr
cmp
sub
cmc
in
and
std
xor
in
dec
mov
and
loop
mov
push
aam
(bad)
and
mov
mov
sub
(bad)
jge
aaa
idiv
aam
sbb
loop
jecxz
in
xchg
push
push
mov
cmp
pop
test
and
mov
ins
sbb
pop
cdq
pop
push
push
movs
dec
xchg
jge
mov
(bad)
dec
(bad)
xor
sub
mov
push
cmp
inc
mov
out
fcmovnu
jp
jge
(bad)
cdq
pushf
hlt
cmp
xor
fxch
aam
push
fmul
lahf
jp
xchg
(bad)
sub
push
fidiv
xor
popa
popf
adc
js
out
dec
stos
add
out
push
mov
imul
pop
std
cmp
(bad)
movs
(bad)
rcr
ja
icebp
sbb
fisub
sub
or
in
loopne
xor
cmps
loope
imul
cmps
nop
cld
jp
or
inc
push
pop
iret
pop
add
test
inc
out
repz
inc
add
popa
pop
mov
sub
pop
xor
pop
or
xor
outs
pop
test
jo
or
dec
call
int
(bad)
fcmovne
ds
add
fisttp
fs
pop
dec
mov
xor
or
push
outs
pslld
push
out
bound
rcl
jne
jl
call
sbb
and
fisub
push
fs
call
jmp
sbb
fcmovu
jecxz
adc
addr16
lods
pop
(bad)
call
mov
lods
and
xchg
jp
stc
xor
sbb
mov
fidivr
pop
sti
lods
mov
mov
sbb
sbb
in
loopne
mov
dec
mov
xchg
mov
leave
pop
adc
xor
mov
sub
vpmaxsw
sub
pusha
inc
lods
sub
add
stc
xlat
stos
xor
(bad)
jp
rcr
add
push
sbb
outs
in
and
xchg
ja
les
mov
xchg
arpl
jle
ds
imul
pop
sub
dec
or
sahf
sub
xor
push
adc
data16
xchg
daa
inc
or
inc
fsubrp
sub
jmp
dec
and
mov
adc
into
sub
out
push
loope
sbb
in
jne
fnsave
cli
fwait
xchg
fld
ja
xchg
shr
loope
(bad)
mov
mov
jge
jmp
cdq
or
fst
fist
jmp
jp
iret
add
sub
jmp
stos
dec
jae
sar
add
fwait
cmp
fmul
repz
xor
gs
mov
adc
mov
mov
xchg
mov
adc
xor
push
and
push
cs
pop
fimul
dec
adc
mov
jne
push
movs
sbb
test
push
pop
stos
push
xchg
scas
dec
sbb
aad
gs
mov
sbb
mov
jns
sbb
shr
fild
aad
push
fnstcw
mov
fnsave
in
std
repnz
in
out
fstp
push
sub
dec
jmp
jp
scas
pop
stos
stos
loopne
fsub
test
nop
fdivr
add
dec
shr
std
pop
mov
cli
outs
ins
mov
pushf
mov
fisubr
push
push
sahf
xchg
inc
fcmovne
out
fcmove
adc
call
cmps
jmp
test
lock
push
iret
(bad)
mov
aam
loopne
dec
les
out
in
(bad)
inc
test
cld
daa
mov
mov
test
pop
or
(bad)
fcmovnu
ds
push
jmp
pop
mov
pushf
mov
add
sbb
fstp
inc
mov
jp
popf
lock
scas
dec
leave
stos
pop
sti
xchg
xor
inc
mov
adc
mov
or
ins
jmp
(bad)
shr
rol
mov
sub
lods
mov
jno
test
xor
or
adc
fwait
lods
or
xor
out
ss
stos
out
jp
xor
mov
rol
call
movs
in
dec
push
adc
cli
dec
adc
outs
pop
nop
inc
inc
push
jno
out
mov
(bad)
and
lods
enter
fldenv
fisubr
push
in
clc
(bad)
and
cmps
pop
inc
mov
mov
imul
popf
sbb
cmp
arpl
popf
iret
hlt
fmulp
push
mov
mov
ret
sub
jl
dec
test
sbb
les
and
rcl
ja
add
mov
lods
cmp
mov
jmp
retf
int
sbb
fidivr
xor
clc
pushf
or
fucomp
test
call
sbb
popf
jo
jae
add
fidiv
fsqrt
xchg
cld
aas
pop
dec
movs
jmp
loope
jne
dec
and
loope
pop
cld
xor
inc
ds
sbb
jmp
test
loopne
(bad)
jmp
jmp
(bad)
(bad)
pop
xchg
data16
retf
xchg
jmp
pusha
or
ins
pop
imul
in
rcr
xchg
aad
adc
adc
xor
or
cwde
sbb
sahf
in
xchg
push
jbe
push
fidiv
loope
sbb
(bad)
cli
jmp
dec
pop
cmps
jmp
sti
mov
fld
dec
push
add
jmp
push
ja
pop
jns
stos
fisttp
icebp
and
adc
cs
adc
mov
pop
sbb
mov
sub
retf
arpl
cmp
retf
xchg
mov
pop
out
outs
add
dec
or
cmc
sub
mov
loopne
retf
jl
cmp
stos
push
jl
mov
rcl
rol
push
push
nop
push
jmp
test
fldcw
fwait
out
call
mov
adc
jnp
ja
pop
push
xchg
stos
adc
sti
clc
mov
mov
mov
and
sbb
mov
retf
pop
push
lahf
cs
addr16
xchg
add
cmp
test
sti
retf
push
or
mov
push
in
mov
clc
aad
cmp
pop
pop
aad
mov
dec
mov
sub
adc
mov
sbb
retf
dec
adc
cld
pop
and
xchg
add
xor
rcl
je
inc
ret
pop
test
dec
dec
adc
js
retf
adc
retf
das
mov
pushf
popa
(bad)
ja
mov
loop
xchg
ds
or
inc
adc
or
xchg
jns
cmp
dec
add
dec
popf
mov
test
mov
pop
pop
fcomi
(bad)
stc
aad
imul
fistp
mov
inc
in
sbb
or
fdivp
test
pop
outs
mov
inc
xrstors
push
jmp
sbb
push
pop
loopne
pushf
and
in
repz
lds
pop
cmp
fs
pop
pop
rcr
pop
gs
(bad)
mov
push
jle
dec
pop
xchg
sahf
mov
jno
ficomp
pop
daa
add
aam
jmp
add
fistp
mov
pop
(bad)
xchg
xor
stos
mov
jno
stos
or
mov
movs
mov
xchg
icebp
aas
xor
cmp
div
fiadd
cmp
aam
int3
test
push
arpl
mov
or
and
mov
mov
xor
push
mov
lods
or
es
scas
jo
out
xor
ss
or
adc
mov
adc
xor
sti
mov
jmp
(bad)
push
icebp
stos
push
mov
pop
retf
or
mov
fmulp
mov
xchg
les
sub
or
mov
pop
add
test
in
in
jl
loope
rcl
or
imul
lock
popf
dec
mov
in
or
mov
daa
fidivr
xchg
aaa
sbb
cli
pop
push
sbb
cmp
popa
aam
or
mov
cmp
fstp
sub
jle
pushf
int3
xchg
cmp
pop
or
gs
pop
pop
(bad)
aas
(bad)
pop
test
cmc
adc
or
jne
adc
xchg
jmp
pop
push
int
rcr
inc
xor
xor
mov
and
push
mov
aad
ins
pop
mov
push
rep
mov
pop
(bad)
pop
or
enter
in
mov
xchg
rcl
adc
mov
dec
cmps
aad
sar
test
cmc
push
popa
pop
xchg
fbstp
mov
xchg
dec
lock
mov
or
std
cmp
ret
pop
xchg
and
sahf
or
aad
(bad)
xchg
retf
mov
inc
pop
jns
mov
and
fcomip
call
inc
iret
sti
push
pop
neg
mov
xor
daa
cli
jmp
(bad)
adc
and
test
fstp
sti
xor
jp
and
mov
dec
repnz
push
lock
xlat
aam
mov
xchg
imul
enter
ret
xchg
or
shl
neg
es
add
out
and
in
pushf
cmp
add
mov
movs
cmps
sub
mov
add
aad
inc
and
push
fld
mov
pop
fwait
sbb
enter
mov
in
rcr
ds
movs
(bad)
aad
(bad)
outs
dec
(bad)
cdq
mov
sbb
repz
jmp
int
pop
jmp
test
ds
xor
dec
in
cli
daa
aad
int3
mov
and
inc
inc
xchg
pop
mov
jl
retf
mov
or
arpl
pop
test
rcl
xor
add
sub
xor
xor
sbb
jg
and
add
in
hlt
in
xchg
repnz
add
mov
(bad)
jae
or
fild
mov
repnz
fs
xor
mov
mov
mov
sar
rol
jmp
push
xchg
out
xor
aaa
mov
pop
pop
mov
movlhps
js
loopne
into
mov
loopne
sub
mov
ja
jne
push
into
pop
daa
inc
cmps
sub
mov
sti
jmp
xor
stos
jne
in
and
pop
gs
pop
outs
push
pop
push
fstp
jns
mov
sar
int3
mov
add
lea
inc
out
push
fistp
dec
mov
(bad)
out
inc
sub
sbb
pop
retf
jp
call
pop
push
add
add
dec
pushf
sub
test
push
cmp
xchg
mov
or
ins
mov
std
xor
jmp
xchg
ss
lock
inc
mov
pop
xlat
fdivp
mov
fidiv
pop
cmp
and
loop
adc
loop
xor
xchg
jae
loope
jp
loope
fisttp
jmp
xlat
call
mov
mov
and
ret
adc
push
jmp
fcmovnu
lock
xor
dec
cmc
sub
repnz
mov
jae
aam
stos
shl
lods
mov
and
mov
xchg
fsub
les
je
mov
(bad)
push
jb
aam
mov
push
sub
sar
mov
inc
lods
ja
loope
dec
dec
cmps
into
nop
arpl
xor
mov
cld
and
inc
fimul
popa
lds
mov
inc
into
mov
pop
(bad)
data16
ficom
lock
test
cmps
scas
loopne
test
pop
mov
or
pop
sbb
jmp
push
stos
hlt
push
mov
jo
sub
or
rcl
sti
ja
fcomp
dec
push
dec
fild
add
mov
mov
cwde
dec
xchg
cmps
in
jge
mov
inc
retf
xchg
pop
popa
sbb
adc
mov
or
push
sbb
inc
inc
fsub
dec
mov
mov
add
(bad)
dec
adc
mov
hlt
push
jl
fldcw
mov
push
mov
or
sub
fmul
mov
aam
rol
push
imul
out
push
je
imul
mov
mov
outs
or
xor
jp
push
and
mov
into
in
dec
mov
push
repz
out
sysret
faddp
push
inc
pop
(bad)
ins
ret
or
mov
jns
mov
stc
bound
xchg
iret
into
jbe
bound
loope
call
shl
jg
(bad)
cdq
and
mov
add
sbb
outs
jbe
push
xor
cmp
test
cmp
hlt
xor
inc
shr
push
xchg
xor
xor
xor
add
out
dec
sbb
cmp
dec
mov
or
jmp
cs
lock
(bad)
sti
jmp
mov
xchg
cwde
fneni(8087
jge
sub
ret
or
and
sub
shl
iret
pop
pop
pop
enter
pop
lds
test
sbb
shl
nop
and
movs
out
add
jmp
push
(bad)
pop
scas
inc
int
or
and
cmp
mov
mov
loopne
jae
aam
push
pusha
popa
lahf
jno
push
mov
outs
shl
cmp
xor
push
gs
dec
popa
mov
cwde
jl
sbb
les
pushf
adc
dec
pusha
dec
push
mov
pop
dec
sbb
je
outs
jnp
pop
sbb
jl
cld
xchg
test
retf
adc
adc
and
add
retf
push
jge
mov
popa
adc
inc
adc
test
loopne
or
mov
mov
fs
or
(bad)
xchg
jb
mov
xchg
rol
xlat
loop
pop
retf
lea
or
add
push
sub
repz
mov
mov
int3
movs
aas
sub
push
or
cmp
jno
push
repz
push
cmps
outs
add
sbb
adc
shl
es
pop
xchg
pop
sbb
add
adc
dec
adc
pop
cmp
add
adc
xchg
pop
adc
xchg
fild
cmps
xchg
adc
mov
xchg
add
bound
dec
dec
mov
inc
repnz
test
pusha
push
jl
xchg
xor
(bad)
retf
fstp
stos
and
jle
mov
xchg
inc
mov
sbb
dec
inc
mov
pusha
jg
(bad)
mov
sbb
mov
sub
pushf
mov
rep
jle
in
sbb
adc
mov
pop
fwait
lods
jmp
repz
dec
inc
jecxz
jmp
nop
shl
cmps
adc
ret
mov
adc
movs
cmps
ds
push
jg
xchg
xchg
adc
jno
xchg
mov
adc
cmps
sahf
stos
mov
inc
fs
jb
jl
ins
int3
sbb
inc
mov
jl
pop
stc
jno
pop
xchg
pop
jmp
cli
push
jg
jle
enter
hlt
pushf
push
nop
in
sub
loop
pop
sti
mov
mov
cmp
jmp
pop
sti
stos
aad
sbb
mul
mov
inc
aad
pop
sub
jecxz
sti
or
add
neg
sub
into
in
cmp
push
pop
push
inc
pop
lahf
movs
in
daa
movs
adc
inc
pop
ffreep
adc
cmp
cmp
mov
mov
popf
jp
sub
inc
retf
sbb
mov
jb
mov
inc
inc
jmp
jg
lods
dec
sti
xor
pop
add
retf
enter
lahf
push
retf
test
mov
mov
sahf
(bad)
push
movd
add
aaa
xchg
pop
and
lahf
mov
and
sbb
ds
sub
mov
mov
xchg
stos
mov
xchg
fsub
cmc
mov
push
nop
mov
not
add
and
mov
test
sbb
pop
inc
cwde
sub
xlat
test
je
push
mov
sahf
lea
or
fwait
mov
(bad)
shl
push
mov
push
pop
(bad)
pop
push
test
jb
and
test
dec
pop
sub
(bad)
inc
or
sbb
mov
(bad)
js
push
fisubr
stos
sti
inc
into
ins
pop
cmp
mov
adc
mov
jmp
stc
sbb
sub
ins
les
or
addr16
sahf
fist
sub
hlt
cmp
lods
in
imul
mov
shl
cmp
inc
add
sub
retf
sub
movs
jnp
and
pop
add
sbb
cwde
push
or
push
fstp
mov
or
sub
push
pop
inc
aad
cmp
mov
cmp
and
xchg
add
cs
pusha
cmp
repnz
sar
fbld
add
pusha
fstp
sbb
call
sti
push
and
in
test
adc
jge
pop
or
sub
cs
ja
retf
xor
loope
cli
cmps
(bad)
mov
jmp
retf
loope
rcl
add
int3
fst
pop
cmp
xor
pop
mov
inc
ins
mov
xchg
mov
sub
outs
lahf
mov
mov
adc
ffreep
fwait
dec
mov
jnp
mov
pop
sahf
int
sub
pop
cmp
mov
pop
mov
ficomp
jb
dec
sbb
cmp
sub
stos
(bad)
and
mov
icebp
xchg
add
shl
push
adc
loope
ret
popa
jmp
sbb
mov
jb
push
(bad)
fist
sub
call
dec
cmp
lods
sbb
cmp
or
call
pop
mov
(bad)
test
inc
outs
sar
icebp
push
lahf
(bad)
jmp
stc
scas
push
mov
stos
in
ja
cwde
cmps
frstpm(287
retf
ja
mov
lock
inc
push
mov
mov
sti
ss
(bad)
pop
and
lahf
pop
or
or
pop
pop
retf
ds
mov
repnz
lds
sbb
cdq
xor
or
fiadd
call
je
ins
add
lahf
fucom
inc
push
pop
in
fisttp
adc
xor
test
sti
cmps
cs
inc
mov
lea
fiadd
arpl
(bad)
shl
sub
pop
push
call
mov
not
retf
rcr
cli
into
aad
mov
mov
out
fistp
hlt
push
sbb
inc
push
(bad)
fild
test
push
hlt
fs
or
push
fucom
push
xchg
test
leave
xor
push
pop
fs
pop
jmp
addr16
add
cli
fstp
dec
shl
sub
shl
call
cmp
mov
in
(bad)
push
lods
lahf
fwait
jmp
sbb
xor
mov
retf
and
pop
xor
out
icebp
sub
ror
sbb
jnp
pop
loope
cmp
xor
test
sub
adc
movs
mov
jnp
mov
push
clc
xchg
add
out
pop
sbb
sbb
movs
call
ror
sar
mov
stc
sbb
xchg
mov
clc
mov
fwait
lods
in
add
bound
mov
gs
mov
xor
bound
stc
sub
bound
stos
jge
jb
sbb
mov
sub
push
and
xchg
aaa
dec
ror
retf
adc
in
lahf
repnz
add
leave
(bad)
rcr
push
sbb
out
shl
in
cmp
fistp
adc
retf
iret
aam
adc
rcl
sti
nop
lahf
and
jmp
cmps
sub
adc
in
add
dec
pop
inc
ds
and
std
dec
leave
retf
add
inc
gs
pop
cld
fnsave
inc
fnstsw
lea
stc
jmp
xor
mov
(bad)
out
inc
push
adc
call
dec
(bad)
aam
ret
push
cmp
or
adc
retf
lods
inc
mov
push
daa
mov
push
shl
jne
lahf
and
jl
or
push
inc
lods
test
loop
cmps
xlat
jmp
pusha
add
in
dec
aad
arpl
fild
add
iret
sbb
popf
jmp
xor
push
outs
adc
leave
cmp
rcr
ja
sbb
pop
retf
push
fdivr
or
cmp
sub
pop
es
fs
pop
add
xlat
inc
add
cmps
lds
repz
sub
jl
(bad)
(bad)
mov
push
add
cmp
push
lock
sub
jp
mov
add
sbb
xchg
sbb
push
enter
dec
or
sub
or
and
mov
and
sub
push
mov
test
(bad)
fist
bound
fistp
icebp
retf
test
push
fild
or
lahf
into
sub
mov
mov
test
adc
push
mov
adc
mov
sub
fidiv
or
adc
pop
(bad)
mov
sbb
imul
mov
sbb
mov
popf
pop
xchg
sbb
shl
xchg
(bad)
stc
sar
jae
cld
rol
test
fistp
ficom
sub
ins
inc
xchg
mov
or
rol
pop
sub
push
pop
test
icebp
cli
pop
sbb
mov
shr
fnstcw
out
jl
mov
div
add
pop
out
call
mov
mov
xchg
jecxz
ret
aad
pop
adc
imul
stos
jmp
(bad)
ins
push
mov
dec
xchg
mov
into
sub
out
pop
test
or
repz
fld
pop
fidiv
adc
daa
sbb
or
mov
mov
imul
stc
xor
sar
loop
ins
lods
mov
mov
dec
mov
shr
sbb
(bad)
into
jp
jmp
stos
int
int3
xor
cmp
sar
or
mov
pop
and
div
icebp
frstor
in
xchg
loop
ret
jg
out
outs
push
call
jo
mov
sbb
in
mov
adc
and
pop
jecxz
jmp
adc
cdq
in
cmc
fist
(bad)
pop
cmp
mov
sar
lock
cmps
pop
inc
lods
cmp
repnz
xchg
xchg
mov
scas
dec
dec
(bad)
shr
fisub
add
fisubr
mov
sbb
adc
fld
jae
jmp
adc
pop
das
sbb
call
(bad)
pop
pop
dec
fs
ins
xor
cli
pushf
popf
ss
adc
pop
mov
add
dec
das
or
call
mov
fstp
and
mov
pop
push
ins
mov
push
jns
js
fiadd
jo
cmps
(bad)
xchg
pop
sahf
push
xor
jmp
adc
pop
ret
pop
sar
inc
(bad)
rol
push
cmp
mov
cmps
dec
xor
mov
jmp
(bad)
sahf
int
and
addr16
add
sahf
shr
adc
pop
mov
xchg
sub
test
jmp
and
int3
jne
cdq
xor
jmp
call
mov
pop
mov
outs
dec
clc
add
(bad)
(bad)
frstor
clc
scas
das
mov
div
push
(bad)
mov
sahf
mov
sbb
jb
or
jmp
jl
mov
lea
xchg
push
xchg
mov
aam
stc
sar
aad
lock
sbb
add
or
mov
stc
jns
pop
mov
xor
ret
dec
inc
repz
or
jmp
das
mov
mov
stos
loopne
pop
mov
rol
sti
stos
cmp
pop
int3
daa
pop
mov
mov
pop
add
aam
push
adc
pop
add
jp
sub
cmps
pop
mov
call
jno
dec
addr16
pop
cmps
hlt
mov
dec
gs
xchg
mov
pop
dec
in
call
mov
stos
out
aaa
in
inc
jp
xchg
test
add
xchg
aam
pusha
pop
(bad)
add
mov
call
rcr
ret
inc
nop
fcom
es
(bad)
adc
and
hlt
or
push
dec
imul
ficom
mov
jmp
pop
leave
aas
pextrw
xchg
shl
sbb
dec
dec
fidivr
lds
pushf
mov
and
add
jge
pop
dec
(bad)
stos
pop
popa
add
daa
fcmove
stos
loope
pop
rcr
shl
sub
mov
(bad)
out
inc
fstp
adc
es
lods
aam
stos
cld
mov
sbb
mov
stos
jno
std
pusha
mov
pushf
ror
and
into
sub
xchg
add
pop
mov
jno
loope
outs
pop
mov
jg
push
jle
js
aad
js
inc
xchg
(bad)
mov
and
push
jne
pop
sti
pop
inc
daa
sbb
loope
scas
outs
mov
test
sub
out
adc
test
packsswb
xchg
inc
test
nop
adc
or
loopne
dec
xchg
ins
add
mov
jle
clc
ds
leave
mov
data16
retf
cli
(bad)
adc
sbb
sub
loopne
cmp
aam
stos
dec
lock
mov
pushf
icebp
aaa
adc
xor
pusha
test
arpl
stos
cmp
(bad)
sbb
idiv
push
cmp
popf
xor
int3
inc
cmp
inc
aad
dec
jmp
push
fnstcw
pop
pop
fistp
or
push
idiv
mov
mov
sbb
loopne
nop
leave
shr
jno
push
mov
mov
arpl
arpl
sar
add
push
mov
stos
mov
pop
cld
mov
jb
add
mov
popf
xor
stos
pop
fistp
inc
adc
xor
out
es
or
mov
dec
lds
cwde
sar
out
stos
stos
push
out
push
scas
pop
data16
dec
and
outs
stos
nop
fucomip
pop
mov
sub
xor
pop
sbb
dec
in
nop
jge
mov
cs
stos
rcl
push
xchg
retf
aad
mov
call
lods
sbb
vshufps
in
add
jp
and
mov
sbb
rcr
jecxz
pop
xchg
xchg
pop
push
ret
add
push
fwait
(bad)
and
xor
enter
mov
or
fld
cli
xchg
rcl
es
adc
mov
dec
fwait
sti
dec
fs
push
dec
daa
shl
pop
ret
and
push
in
adc
lahf
jecxz
pop
mov
ja
aad
pop
aad
mov
pop
adc
cmp
test
(bad)
sahf
fwait
es
call
rcr
sbb
pop
jge
adc
pop
data16
pushf
or
fld
nop
dec
push
mov
pop
xchg
aam
sub
push
push
mov
push
cmp
and
adc
jge
sbb
mov
cmc
jmp
jne
and
(bad)
and
cld
push
pop
sub
add
cmps
push
jecxz
stos
stos
mov
xor
lds
hlt
xor
es
sar
(bad)
xchg
cdq
loop
mov
imul
push
cli
or
test
ss
xor
(bad)
jmp
into
xor
test
add
cmp
mov
popf
push
pop
cmp
mov
add
push
shr
out
leave
jecxz
sbb
shl
lds
mov
xchg
jmp
pop
pop
test
mov
cmps
(bad)
jb
cli
mov
ja
cmp
das
pop
cmps
pop
sub
jno
mov
and
jecxz
retf
js
push
adc
inc
pop
pop
add
push
sbb
inc
mov
test
push
add
jno
add
mov
xchg
xor
xchg
lock
pop
pop
jl
fistp
cld
jp
inc
inc
test
cmp
jne
pop
push
popf
(bad)
pop
cmp
mov
fistp
fidivr
enter
push
mov
sbb
out
and
data16
out
pushf
(bad)
enter
aad
je
inc
dec
sbb
mov
fild
cmp
pop
dec
out
retf
cmp
mov
(bad)
pop
dec
fwait
(bad)
out
retf
pushf
call
aas
(bad)
xlat
iret
retf
retf
imul
jnp
xchg
sbb
inc
xor
arpl
push
scas
popa
jmp
pop
idiv
and
scas
mov
stos
out
push
mov
stc
xchg
sbb
pop
jmp
push
jge
loopne
pushf
sub
shl
ins
push
dec
sub
push
popa
fistp
aaa
add
test
xchg
sbb
mov
jmp
loop
push
addr16
xchg
out
shl
(bad)
push
dec
shl
adc
pop
stos
fldl2t
inc
out
sar
cmc
mov
sbb
lahf
mov
dec
pushf
sahf
sti
pop
mov
clc
jecxz
cmp
fiadd
mov
mov
(bad)
(bad)
in
sbb
cmc
inc
enter
dec
ss
int3
mov
dec
aam
jge
jge
adc
push
sbb
sub
popf
ficom
es
call
in
fs
aas
and
in
into
pop
lock
sbb
mov
sbb
sbb
call
enter
loope
push
mov
outs
push
push
dec
or
mov
sbb
js
lock
cli
sbb
or
outs
sbb
dec
adc
stc
(bad)
(bad)
pop
sbb
jecxz
adc
mov
jg
fbld
mov
dec
fcomp
cld
mov
aad
jge
sub
fcom
add
push
dec
test
push
outs
jnp
not
sub
out
dec
mov
sbb
je
sbb
into
sbb
dec
hlt
pushf
pop
mov
dec
shl
jbe
and
dec
or
push
add
mov
pop
sbb
ror
jmp
xchg
int
mov
mov
add
jge
xchg
adc
xchg
mov
shl
leave
jne
std
push
push
ja
pop
cmp
push
retf
jmp
pop
inc
and
popf
lds
adc
jmp
hlt
loop
jp
les
sbb
add
and
mov
cmp
lock
js
sahf
push
push
sar
dec
imul
mov
mov
in
in
retf
xchg
pop
adc
test
ret
stos
ds
adc
mov
mov
mov
adc
fist
adc
push
xchg
cld
push
xchg
mov
fabs
xor
fwait
div
nop
test
int
xchg
xchg
pop
pop
gs
jnp
push
xchg
pop
addr16
fist
cmp
ins
ficomp
push
mov
sbb
into
dec
outs
fidiv
loopne
popa
mov
jno
sub
arpl
cmps
push
jmp
out
fisubr
sub
mov
cdq
sub
mov
lock
nop
jnp
jle
imul
sbb
nop
rcl
mov
retf
fstp
mov
(bad)
lahf
test
pushf
pop
jne
dec
pop
outs
pop
sar
repz
mov
(bad)
xchg
rcl
mov
icebp
popa
fistp
popa
fmul
pop
mov
xlat
jnp
push
cmps
dec
pop
mov
jp
push
out
sbb
sub
xlat
es
jne
lods
retf
pop
add
push
test
rcl
add
inc
rcr
adc
fs
pop
push
mov
sbb
clc
out
aas
add
jmp
lock
pop
push
xchg
test
lods
cmp
pop
addr16
call
sahf
retf
or
sahf
shl
outs
mov
enter
sub
rol
pushf
inc
fdivp
stos
push
popf
shl
imul
sbb
stos
jnp
mov
fnsave
mov
jmp
mov
lock
pop
push
mov
xchg
fstp
retf
out
nop
push
sahf
mov
jle
fsubr
mov
push
retf
mov
rol
nop
xchg
push
push
add
pop
jg
xchg
cmp
cmp
das
lahf
sbb
xchg
push
stc
lea
jb
ja
pop
addr16
call
cdq
cmp
mov
clc
ja
in
ror
ret
aad
sbb
xchg
rcl
cmp
adc
jmp
data16
(bad)
nop
cmp
pop
pop
mov
adc
call
sbb
ret
das
lahf
push
out
fadd
add
xchg
or
fs
and
aas
or
jo
xchg
adc
scas
mul
cmp
xor
pop
cmp
retf
movs
lods
cmp
xchg
sti
adc
bound
sbb
pop
ret
xchg
sub
adc
xchg
xor
out
push
jp
mov
je
test
push
nop
(bad)
adc
cmps
pop
pop
xor
mov
inc
jle
mov
(bad)
sti
pop
pop
or
fidivr
dec
mov
arpl
ret
lahf
push
rcl
push
pop
inc
xlat
jecxz
inc
inc
call
or
cli
xlat
lock
rcl
popf
inc
adc
clc
je
sahf
cmp
out
sahf
imul
stos
(bad)
pop
out
mov
leave
shl
sub
rcr
fs
push
je
cmp
lods
ror
iret
int3
outs
movs
ins
cwde
push
stc
popa
mov
je
into
cmps
aad
mov
jmp
mov
push
mov
mov
adc
cmp
sahf
imul
pop
not
mov
test
retf
test
mov
sti
jmp
stos
pop
add
pop
js
adc
push
das
test
fstp
xchg
ja
aaa
push
rcr
pop
dec
jecxz
push
call
cmp
stos
imul
xor
inc
enter
in
fsub
sbb
mov
nop
retf
sbb
cmp
push
aad
inc
sub
aam
fs
push
cwde
jmp
mov
xchg
fstp
fs
add
rcl
pop
sbb
add
loop
mov
lods
enter
push
jecxz
fs
sub
inc
ror
fdiv
push
ds
jecxz
fucomp
cmp
icebp
in
cwde
aad
mov
scas
icebp
pop
into
sub
rcl
jp
pushf
add
push
imul
jno
jecxz
add
shl
cli
(bad)
std
jo
pop
mov
pop
loopne
mov
cld
mov
stc
push
mov
imul
cld
repnz
sbb
das
dec
retf
mov
xchg
div
adc
push
pushf
mov
mov
dec
in
scas
lods
ret
sbb
stos
or
(bad)
pop
into
out
fisubr
fcmove
sahf
loopne
adc
sub
fadd
pop
shl
push
mov
out
mov
xchg
mov
or
repz
jmp
and
popf
adc
retf
xchg
mov
leave
jmp
xchg
dec
cld
mov
fist
(bad)
dec
xor
hlt
xor
and
cli
sub
fsub
ja
lds
mov
iret
retf
mov
mov
and
lahf
xchg
pop
and
sti
fcomi
pop
xor
test
pop
mov
out
mov
(bad)
mov
cmps
xchg
in
xor
pop
pop
sbb
hlt
fldcw
jle
imul
fidivr
das
mov
inc
sbb
mov
aad
into
sub
ret
pop
mov
sahf
int
mov
neg
ja
lahf
cmps
call
inc
fild
pop
push
adc
in
mov
sar
push
fsubp
std
push
cld
dec
rol
stc
rcr
mov
sub
add
sub
fadd
adc
jmp
jl
sbb
inc
dec
push
cmp
cwde
xchg
cmps
call
and
jns
xor
cli
dec
pop
mov
popa
push
ds
jg
adc
xchg
fld
pop
pusha
fcmove
lods
push
lahf
pushf
dec
das
leave
and
mov
mov
enter
imul
mov
mov
fstp
xchg
fild
mov
out
(bad)
ss
sbb
sbb
sbb
sbb
rol
call
ret
(bad)
mov
pop
sti
pop
pop
stc
movs
cld
sub
xor
dec
in
jae
daa
into
pushf
adc
movs
push
fsubr
sub
and
cs
rcl
push
pop
inc
sahf
pop
ficomp
sbb
aas
frstor
call
daa
dec
cwde
scas
or
loopne
les
or
cmp
rcr
lea
xor
pop
ja
cmps
iret
retf
movs
cli
mov
add
into
in
mov
stos
pop
out
cmp
add
sahf
push
pop
nop
fist
mov
xchg
inc
jl
in
sti
out
clc
cmp
gs
out
and
pop
inc
adc
sbb
pop
rcr
lahf
(bad)
test
inc
pop
sar
adc
ja
and
fdivp
iret
mov
xchg
mov
test
xchg
cmp
les
xchg
clc
lahf
mov
pusha
xor
shl
sub
sub
add
(bad)
mov
fldenv
cmp
pusha
add
scas
lods
ret
jns
cmp
adc
xor
mov
adc
out
jno
bound
push
aaa
mov
neg
hlt
or
mov
ins
xchg
adc
mov
and
xchg
pop
ins
or
pop
dec
pop
nop
and
cs
adc
in
repnz
dec
pop
adc
fwait
lods
cli
mov
in
cs
pop
adc
out
int
int
sbb
jecxz
inc
add
push
xchg
inc
add
add
xchg
or
xchg
add
inc
xchg
adc
add
test
out
lods
scas
push
inc
add
outs
adc
jmp
out
mov
sbb
sbb
pusha
xchg
push
fstp
addr16
pop
push
ss
inc
push
or
test
call
jp
lock
mov
out
int
push
xchg
(bad)
dec
std
into
leave
stc
cmp
or
sahf
mov
sbb
not
sahf
xchg
ret
xchg
cmp
cmp
icebp
inc
mov
xchg
sbb
jl
mov
pop
dec
adc
adc
jmp
out
sbb
out
das
mov
repnz
fstp
push
cwde
sbb
shl
mov
cmp
or
cmps
jnp
in
adc
adc
jmp
mov
mov
loop
push
inc
and
jae
pushf
bound
nop
mov
ins
loop
cs
iret
sub
retf
pusha
cmp
pop
adc
arpl
add
mov
lock
inc
hlt
and
in
mov
inc
xor
pop
push
je
add
mov
mov
inc
fwait
(bad)
out
rol
out
call
stc
dec
inc
popf
cmp
arpl
jg
xchg
mov
repz
cdq
jnp
pop
dec
cmp
popf
and
jo
xlat
jl
cdq
jno
rcr
fcomp
mov
(bad)
fadd
sbb
pop
lods
pop
pop
add
sbb
fwait
xlat
(bad)
scas
pusha
repnz
mov
ja
sbb
fild
aas
popa
maskmovq
neg
fldenv
inc
mov
cs
aaa
mov
sbb
test
mov
in
addr16
icebp
sbb
pusha
adc
cmp
mov
push
inc
pop
sbb
push
jge
outs
jecxz
fld
pusha
add
fbstp
push
fcmovnu
test
mov
and
sub
sbb
sbb
mov
cmps
mov
test
sbb
pop
aam
retf
in
or
aam
inc
ins
(bad)
fimul
sub
js
xchg
jecxz
rol
pop
test
jmp
or
mov
cli
fiadd
push
mov
aam
mov
push
dec
imul
push
xor
dec
aam
movs
jo
pushf
cmps
push
jmp
(bad)
mov
out
mov
idiv
les
xor
mov
pop
jmp
dec
sahf
ins
lds
xor
arpl
push
push
fist
mov
scas
and
bound
dec
jmp
cli
add
pop
icebp
jge
sub
or
push
arpl
ja
xor
into
push
cmp
call
fistp
adc
test
cmp
push
pop
repnz
mov
jno
arpl
push
sahf
xchg
lahf
mov
adc
mov
or
push
scas
rcl
and
dec
sub
inc
stos
pop
test
loope
paddsb
ja
sub
retf
test
mov
jo
clc
mov
dec
bsr
dec
int3
xchg
and
push
cmps
pop
pop
lods
je
int
xor
sub
mov
ins
mov
aad
and
aad
xchg
cld
inc
mov
dec
cmp
call
inc
jmp
test
xlat
es
not
sub
mov
adc
adc
pop
xor
jp
xchg
and
pop
inc
add
inc
add
dec
lahf
pop
add
into
sub
cmps
add
arpl
not
fs
out
xchg
loope
mov
add
retf
jmp
popf
sub
aad
into
cmp
inc
add
adc
outs
lock
mov
retf
xchg
jb
sbb
retf
jmp
pop
pop
stos
mov
ds
inc
xchg
inc
xchg
xchg
dec
xor
xchg
(bad)
mov
dec
mov
dec
test
xchg
fidiv
int
cmp
xchg
outs
(bad)
mov
fcmovbe
sub
sti
ds
aaa
call
mov
mov
pop
mov
adc
lds
push
xor
retf
int
pushf
out
jmp
aam
or
pop
push
retf
in
dec
sbb
xchg
push
add
inc
pop
loop
cmc
jns
loop
xchg
call
dec
enter
mov
xchg
mov
push
xor
cmp
and
xor
and
pop
lods
aam
(bad)
das
js
xchg
pop
sub
loop
out
mov
cmp
mov
retf
fbld
daa
xchg
aad
push
cmps
sbb
loope
cld
push
mov
stos
stos
push
adc
xchg
cmp
mov
pop
jmp
lahf
dec
jle
dec
dec
push
xchg
fidiv
stos
es
rcr
fstp
cli
retf
cmp
pop
stos
das
cmps
pop
and
out
test
in
das
mov
xchg
xchg
out
arpl
cwde
push
add
in
fsub
pop
xchg
call
rcr
popa
(bad)
lahf
repnz
js
or
or
les
adc
mov
fsubrp
sub
(bad)
fild
dec
lods
(bad)
cwde
lea
xor
mov
data16
xlat
nop
inc
fs
pop
or
pop
mov
push
(bad)
sbb
dec
mov
mov
cwde
(bad)
mov
inc
fsub
loopne
mov
dec
jl
(bad)
out
mov
and
push
pop
sbb
adc
cmp
jp
cdq
sbb
mov
ret
mov
jb
mov
fisubr
xchg
push
neg
mov
mov
pop
sahf
pusha
inc
fldcw
into
mov
fldcw
jmp
push
jnp
(bad)
stos
push
jns
imul
rcl
cmp
and
push
cwde
mov
(bad)
pop
out
out
mov
xchg
(bad)
ja
(bad)
test
daa
fnstenv
jb
jne
data16
mov
pop
arpl
mov
mov
ja
(bad)
addr16
fisub
sti
pop
mov
sbb
(bad)
fild
and
in
daa
adc
push
(bad)
and
std
jg
fnstcw
pop
loope
ja
sub
dec
clc
mov
fst
ja
add
fstp
cmp
nop
mov
sub
mov
mov
mov
les
push
cmp
jne
ja
push
adc
(bad)
sub
jmp
(bad)
(bad)
popa
mov
jne
test
mov
pop
bound
out
xor
test
rol
test
pop
int
or
cmp
jmp
fstp
pop
inc
mov
cmps
test
pop
pop
sub
add
mov
or
rcr
mov
imul
fldz
cwde
push
hlt
mov
cmps
retf
test
mov
scas
(bad)
aad
push
jno
sub
sti
xlat
loope
mov
xchg
pop
dec
jbe
rcr
(bad)
clc
dec
adc
nop
sub
fscale
scas
mov
cld
shr
outs
rcl
retf
xor
jns
sar
dec
add
ins
or
dec
inc
fldz
ret
push
cmp
pushf
push
sbb
sti
pop
adc
call
mov
ja
bound
fld
(bad)
out
sub
sub
cld
mov
push
fstp
loopne
into
cld
es
outs
(bad)
pop
imul
fs
pop
inc
fcmove
dec
add
stos
push
cmp
fld
retf
arpl
pop
xlat
pop
inc
sub
sbb
adc
sub
jbe
xchg
pushf
gs
call
jmp
icebp
and
xchg
adc
pop
add
inc
pop
in
inc
jne
and
mov
sbb
inc
cmc
loope
repnz
sbb
push
mov
rcl
mov
jb
push
sub
push
mov
idiv
mov
adc
xor
or
cmp
fst
loop
push
xchg
sti
(bad)
sbb
ins
jge
dec
dec
or
cs
jp
sahf
sbb
add
call
mov
nop
iret
popa
ret
jne
(bad)
loop
ss
in
adc
test
pop
aas
push
clc
lea
or
and
mov
nop
ins
adc
jb
inc
xchg
aaa
pop
scas
jo
repnz
call
in
leave
mov
jb
in
dec
popf
or
xchg
cmp
mov
adc
icebp
out
fmulp
push
cmp
pop
loop
and
sbb
dec
fsub
mov
cmp
sbb
pop
adc
pop
retf
push
xlat
(bad)
frstor
add
pop
adc
stos
xchg
mov
pop
pushf
retf
test
add
mov
pushf
pushf
lock
mov
sub
xchg
(bad)
mov
pop
or
mov
adc
out
test
mov
sbb
ret
sahf
rol
outs
xor
aad
jecxz
add
mov
sub
pop
adc
rcr
cdq
add
shl
or
fcmovbe
jne
cwde
shr
fwait
rcl
cs
lea
test
xchg
shl
clc
mov
call
xor
sub
mov
punpckhwd
and
pop
fstp
shl
jmp
shr
pop
scas
mov
mov
push
push
adc
mov
adc
jno
sbb
pop
mov
jnp
hlt
or
push
cmp
cmp
stos
out
pop
mov
ss
sbb
and
les
mov
fcmovnu
mov
cmp
mov
in
cs
sub
push
and
(bad)
mov
and
fisubr
into
jp
cli
repz
xor
jle
jmp
(bad)
retf
jp
and
push
inc
in
mov
cmp
adc
call
shl
cmps
repz
(bad)
cmp
mov
shl
mov
pop
or
ins
ja
cwde
iret
or
cdq
and
push
xchg
inc
(bad)
xlat
mov
or
adc
pop
sbb
pop
xchg
stos
or
mov
jb
push
adc
cmp
mov
push
pushf
arpl
loope
adc
test
rcr
(bad)
pop
in
cmp
jecxz
fstp
xor
ficomp
loopne
sbb
mov
sti
inc
mov
and
cld
xlat
fimul
ror
mov
adc
cmp
xchg
push
sbb
jo
and
or
adc
stos
push
rol
mov
pop
nop
test
(bad)
fdiv
pop
stc
jmp
add
push
pop
shl
shl
pop
push
push
inc
pop
inc
sbb
sub
mov
pop
sbb
stc
inc
mov
(bad)
inc
jmp
mov
shl
jb
std
push
pop
leave
(bad)
mov
mov
(bad)
mov
jnp
pop
mov
dec
sub
ds
mov
and
add
jle
mov
pop
cli
inc
mov
dec
test
mov
lahf
repnz
enter
cmp
aaa
enter
jno
repnz
test
lahf
js
js
push
sbb
(bad)
(bad)
ins
stc
enter
stc
mov
push
pop
pop
in
jns
add
and
imul
inc
sti
fnstsw
jmp
add
in
retf
mov
pop
mov
mov
mov
cmp
cld
xor
push
or
xchg
adc
jl
ret
cmp
jle
adc
cli
dec
dec
movs
addr16
push
icebp
rcr
sar
jne
mov
mov
mov
shl
cmps
mov
add
or
test
movs
aas
call
popf
stc
adc
pop
push
push
mov
pop
add
ins
ins
xlat
mov
(bad)
add
sti
ja
ja
cmp
sbb
pop
call
repnz
jbe
dec
test
jle
mov
lds
loopne
pop
sbb
loop
jp
inc
fistp
stos
sahf
fs
jmp
mov
jmp
inc
add
adc
xor
lods
int3
adc
ss
sbb
ret
mov
mov
pop
pop
mov
scas
sbb
(bad)
dec
mov
jmp
xor
fs
clc
inc
addr16
mov
rcr
dec
les
(bad)
lock
scas
jmp
retf
cld
cld
aaa
pop
cs
retf
ins
push
(bad)
fst
jmp
mov
jmp
mov
cmc
inc
fdiv
push
fdivr
pop
jne
hlt
retf
jl
sbb
jae
inc
sbb
(bad)
pop
out
pop
cdq
adc
inc
xchg
sub
pop
sub
pop
or
stc
not
(bad)
mov
inc
sbb
(bad)
pop
sbb
adc
fst
inc
pop
jmp
xor
rol
ficomp
les
inc
fdiv
fwait
or
and
je
retf
sahf
mov
sub
xchg
pop
les
addr16
and
xlat
xor
cmp
fsub
sti
inc
jbe
pop
data16
mov
fiadd
fsubr
sahf
cmp
pop
in
sar
add
ja
call
loopne
sti
ins
dec
pop
push
nop
pop
rol
xor
outs
fdiv
dec
sbb
pop
cld
retf
fs
icebp
sub
imul
in
lods
sar
mov
sbb
cmp
fist
pushf
dec
or
ss
shl
stos
fs
out
fcom
pop
jecxz
sti
push
pushf
mov
lods
sbb
mov
sbb
mov
inc
aad
sbb
adc
cmp
in
mov
or
bound
rcl
dec
inc
ret
fsub
call
sbb
jmp
and
xor
cmps
fcom
push
fs
mov
fdiv
push
push
test
fcomp
mov
push
xchg
inc
sbb
mov
jbe
fcom
cmp
ficomp
lods
stc
sar
jecxz
test
jg
nop/reserved
dec
fcom
outs
jecxz
(bad)
sahf
aam
in
pop
jp
fadd
jl
xor
adc
fdivr
daa
mov
jb
clc
or
inc
pop
mov
arpl
pop
into
jmp
jb
mov
sbb
mov
fwait
lods
cmp
std
jp
mov
aas
xchg
pop
jmp
cmp
popa
fsubr
ficom
mov
retf
pop
adc
fimul
call
mov
fisubr
out
push
fsub
fcmovnb
leave
popf
aam
xchg
mov
and
dec
(bad)
pop
push
pop
cli
jg
dec
mov
pop
stos
fs
mov
pushf
mov
sub
fdivr
sbb
jmp
ds
jmp
fcom
js
frstor
inc
cmps
fsub
push
mov
or
or
stos
or
fdivr
std
xchg
push
ss
mov
fsub
cmps
or
lods
(bad)
dec
push
cmp
sub
fadd
pop
into
push
fld
fucomip
mov
fsubr
imul
pop
sbb
mov
dec
sub
push
lahf
mov
shl
mov
ja
pop
push
push
(bad)
bound
xchg
lods
mov
movs
scas
pop
adc
retf
push
mov
dec
ja
mov
cdq
stos
mov
xor
dec
outs
jle
(bad)
aad
icebp
aad
cmp
pop
inc
call
sub
xchg
fld
cmp
mov
pop
sbb
sub
mov
dec
mov
and
arpl
mov
lea
push
adc
sar
inc
int3
sar
jmp
mov
mov
ret
cmc
clc
mov
dec
jae
rcl
dec
clc
push
lahf
pop
nop
mov
fwait
push
icebp
mov
sahf
pop
cmc
sub
movs
icebp
retf
jbe
adc
or
and
jecxz
xchg
or
lahf
lea
pop
sar
add
push
ret
cld
in
jmp
and
ret
int3
(bad)
sbb
mov
call
arpl
mov
out
mov
rcl
mov
mov
cmp
nop
cmp
xor
loop
mul
fwait
inc
ret
pop
or
imul
pop
fstp
ret
cmc
repnz
leave
xchg
movs
jnp
icebp
add
in
cmp
ficom
pop
ret
stos
mov
mov
test
add
ficomp
push
jns
xchg
add
scas
ja
adc
imul
pushf
leave
daa
or
adc
retf
and
fist
out
jo
out
adc
cmp
fidivr
ss
mov
test
pushf
outs
push
fadd
hlt
fld
mov
push
xchg
sbb
int3
pop
into
cli
sub
ficomp
sub
or
(bad)
cmc
pop
pop
jg
xor
into
sbb
push
pop
sbb
mov
jl
dec
repz
fsubrp
pop
mov
and
ficom
sub
mov
jl
fsubp
lahf
call
fidiv
rol
(bad)
jl
xchg
pop
std
sar
(bad)
mov
(bad)
test
or
push
stc
faddp
dec
inc
mov
fstp
lods
xchg
inc
xchg
jno
cld
fnsetpm(287
fstp
pushf
add
mov
mov
cmp
and
(bad)
ficom
push
add
dec
mov
jae
test
imul
mov
xchg
ret
sub
jns
dec
sbb
(bad)
rcr
xor
pop
push
call
or
data16
mov
(bad)
mov
inc
test
stos
stos
mov
popf
pushf
cmps
pop
ss
or
add
pop
fucomi
(bad)
xchg
movs
scas
mov
inc
not
aad
inc
push
das
sub
mov
add
sar
(bad)
pushf
mov
leave
push
jns
es
cli
push
rcl
cwde
jb
retf
rol
sub
pop
add
shl
inc
sbb
or
shl
shl
fst
add
shr
pop
aaa
xchg
or
fisubr
mov
mov
fadd
pop
scas
nop
aad
repz
jl
pop
std
out
mov
jmp
in
call
rcr
das
dec
dec
(bad)
cmp
dec
repz
add
(bad)
(bad)
aad
test
inc
nop
push
fwait
push
mov
pop
(bad)
ror
adc
pop
jne
aad
push
dec
imul
sbb
inc
sbb
sub
mov
test
(bad)
pop
shl
push
pop
or
inc
leave
das
fmul
mov
in
das
rol
dec
sub
jecxz
pop
in
retf
stc
inc
lea
out
cmps
mul
inc
rol
clc
pcmpeqw
xchg
or
mov
fld
(bad)
dec
add
(bad)
and
outs
xchg
test
(bad)
jb
pushf
fild
jnp
push
cwde
pop
sub
popf
sar
les
sbb
ds
imul
dec
jae
daa
(bad)
mov
mov
shr
mov
sbb
mov
jmp
jle
(bad)
aas
bnd
or
adc
fadd
cmp
leave
jne
sbb
sub
movs
pop
jmp
mov
test
shl
loopne
shr
sbb
out
mov
movs
(bad)
in
sbb
mov
fwait
lods
cmp
xlat
sub
push
jbe
int
fcom
mov
mov
shl
fdiv
pop
ds
int
stos
push
fdivr
pop
push
retf
pop
cmc
scas
out
dec
pop
shl
pop
sbb
mov
fwait
push
fimul
gs
fcom
sbb
push
dec
ds
rol
mov
sub
mov
push
dec
addr16
pop
sbb
push
fmul
adc
stos
mov
and
sub
cwde
jp
fdivr
test
mov
cli
and
push
xor
mov
pop
popa
jmp
push
dec
jnp
pop
shr
repnz
xchg
sbb
std
xlat
inc
mov
gs
(bad)
loop
mov
std
into
mov
dec
sbb
adc
retf
fiadd
sbb
fmul
sbb
leave
adc
scas
sbb
mov
jmp
ficomp
imul
imul
jmp
push
jp
retf
aas
adc
scas
pop
rol
scas
stc
pop
pop
jp
icebp
mov
fmul
or
jne
call
cmp
mov
push
fdiv
(bad)
cmc
enter
add
out
cs
xchg
loopne
sub
in
shl
pop
pop
cmp
sbb
fldcw
mov
mov
adc
dec
inc
int3
xchg
fist
retf
mov
pop
xchg
test
sub
pop
xchg
add
inc
fsub
arpl
mov
add
pop
ins
or
mov
or
xor
mov
jmp
add
pop
sub
pop
aas
test
push
sub
sbb
fidiv
inc
sbb
add
add
loopne
lock
(bad)
mov
push
fst
stos
cmp
pop
fist
in
push
add
inc
mov
(bad)
fs
loope
jle
or
repnz
xchg
(bad)
fstp
pop
(bad)
push
in
cmps
pop
rol
dec
cli
inc
sahf
push
or
mov
fnstenv
mov
xor
and
rol
inc
call
adc
xchg
mov
add
(bad)
frndint
retf
xchg
ins
stc
ds
pop
stos
push
xor
jmp
shr
sbb
daa
mov
inc
push
sar
push
test
jno
add
adc
sub
lahf
imul
dec
dec
sahf
push
fstp
nop
and
mov
repnz
dec
es
fst
mov
push
mov
test
fnstcw
dec
int3
into
ins
add
mov
pop
lods
(bad)
ins
mov
cmp
or
fisttp
mov
push
xchg
dec
(bad)
jo
push
fld
fidivr
leave
push
cs
cmp
sbb
cmp
(bad)
and
push
sbb
neg
cmp
push
add
in
(bad)
(bad)
push
pop
pushf
scas
test
and
push
sbb
sub
fisttp
dec
sbb
jge
mov
test
fidivr
popf
imul
push
fdivr
test
dec
cmps
pop
pushf
dec
cli
ds
xor
mov
inc
gs
cli
mov
int
not
rcr
aaa
xchg
pop
mov
dec
xchg
out
and
and
xchg
sti
jno
mov
call
dec
sbb
pop
repz
pop
inc
cmp
xchg
fsub
inc
stos
mov
xchg
retf
rol
jmp
icebp
push
mov
mov
movs
push
mov
cmp
mov
jecxz
xchg
pushf
out
push
test
mov
xchg
and
add
add
push
lahf
adc
xor
pop
xor
or
sbb
jecxz
inc
fild
pop
mov
test
jno
stos
lahf
lds
adc
mov
sti
arpl
leave
stos
xor
aas
lds
(bad)
in
or
shr
dec
popf
and
(bad)
jmp
in
in
jp
pop
(bad)
gs
stc
call
cld
cmp
leave
inc
jg
adc
sbb
mov
popa
jne
and
push
pop
dec
fild
dec
cs
jmp
iret
iret
lahf
sub
mov
jnp
imul
(bad)
jmp
jae
sahf
loope
cld
or
jb
imul
adc
bound
rcl
cmp
scas
fimul
pop
in
sub
mov
push
or
icebp
js
shl
xchg
scas
mov
ficomp
lods
sti
xor
cmp
fwait
jbe
lahf
xor
dec
and
push
lahf
retf
enter
cmp
fcom
int3
add
and
push
jmp
arpl
arpl
push
fdivr
aad
push
sbb
and
mov
fwait
pusha
mov
or
icebp
cmp
fcmovnbe
outs
jmp
je
sub
cwde
popf
cs
lahf
sub
loopne
std
cmps
test
jmp
sahf
int
mov
xchg
jge
nop
or
ficomp
sbb
jmp
jle
outs
rol
div
fdiv
mov
out
sub
add
fdiv
gs
pusha
jne
mov
cli
fcom
es
jmp
jecxz
fsub
stos
push
ja
ss
imul
fsubr
pop
inc
mov
xlat
les
stos
dec
dec
sbb
sub
pop
cs
in
push
mov
leave
push
fdiv
sbb
jo
pop
dec
jle
ret
add
(bad)
test
popa
dec
xchg
ja
gs
cli
pop
(bad)
push
sbb
fimul
push
jne
sti
adc
adc
dec
xor
and
jmp
pop
outs
arpl
xchg
mov
aam
loopne
cli
popa
out
ficom
ror
and
mov
aam
pop
out
add
add
mov
sbb
cdq
in
aaa
clc
inc
push
(bad)
pusha
data16
cmp
inc
jne
push
jp
int3
or
xor
pop
xchg
(bad)
push
inc
pop
stc
mov
in
outs
cmp
xchg
nop
jecxz
add
dec
pop
sub
jge
cmp
stos
cdq
mov
lsl
mov
daa
pop
sbb
bound
stc
out
mov
sbb
sbb
mov
mov
dec
sti
sub
pop
xchg
shr
cld
pop
popf
sbb
les
int
adc
out
add
test
or
and
pop
sbb
(bad)
push
xchg
test
add
loopne
js
adc
jne
ror
retf
inc
pop
ret
fmulp
cmp
xchg
mov
call
jae
jae
and
and
retf
leave
push
sub
lds
pushf
fnsave
jo
cwde
adc
outs
mov
add
jo
or
mov
jmp
pop
jl
loope
add
or
(bad)
sbb
mov
fistp
fcomp
and
or
call
xor
inc
mov
mov
lahf
or
cmp
jne
stc
rcr
cmovl
loope
out
jmp
fsubrp
jne
sub
and
jmp
mov
or
push
pop
or
sub
ret
sahf
jae
and
fidivr
fisttp
dec
(bad)
jmpw
jge
jle
call
out
xor
push
sbb
iret
dec
sbb
das
jge
out
sar
int3
stc
sbb
pop
push
xchg
inc
cmp
sbb
xor
pop
inc
xor
xchg
sub
add
and
popa
push
in
addr16
xchg
pusha
dec
stc
jecxz
shl
xchg
jb
(bad)
jp
(bad)
xchg
cmp
call
repz
(bad)
sbb
mov
and
push
fwait
lods
cmp
lock
rcr
in
adc
push
xchg
and
stos
xchg
jno
push
add
hlt
retf
in
or
pop
out
(bad)
mov
mov
pop
imul
out
out
pop
fild
mov
jno
stos
ss
sahf
dec
pop
mov
mov
mov
dec
int3
stc
cli
mov
fcmovne
fiadd
stos
shl
sbb
fdivr
retf
leave
xor
push
sub
aaa
pop
mov
push
adc
push
mov
inc
clc
fcomi
and
push
cmp
adc
stos
dec
in
cli
int
dec
pop
imul
bound
add
push
fisubr
(bad)
pop
(bad)
cs
pop
push
fcom
jp
retf
sahf
jmp
(bad)
fnstenv
arpl
ficomp
loope
pop
jp
xchg
inc
in
jp
mov
fmul
xchg
out
adc
test
sub
push
cli
adc
and
ret
cmp
xlat
xor
mov
daa
fdiv
adc
jecxz
pop
mov
ficom
ror
xchg
and
xchg
imul
jne
mov
call
test
xchg
aam
inc
fnstenv
sahf
retf
stc
cmp
fiadd
retf
sbb
inc
out
pop
push
jb
mov
or
gs
push
sbb
icebp
cmp
mov
cmp
sub
bound
xor
popa
fmul
jmp
fstp
mov
rsqrtps
push
or
test
int3
xchg
shr
pop
scas
jo
jne
stos
stc
add
mov
dec
shl
gs
xchg
mov
sbb
adc
cs
int3
nop
push
xchg
or
fisub
popa
adc
push
dec
push
leave
gs
dec
push
inc
and
loopne
rcr
stc
inc
adc
fidiv
mov
(bad)
inc
not
push
mov
sub
(bad)
dec
xor
fist
daa
(bad)
ja
sbb
push
mov
xor
rcr
dec
aad
push
mov
and
push
fmul
xchg
add
scas
sub
aas
popf
(bad)
outs
pushf
stc
aas
cli
pop
mov
mov
in
mov
pop
adc
add
cli
push
add
mov
fcom
add
dec
sub
fsub
push
sahf
dec
sub
dec
gs
cwde
ja
fstp
not
cmp
sbb
sbb
bound
push
fwait
lods
cmp
std
mov
mov
jno
cwde
movs
repnz
pop
sub
add
jmp
cmp
(bad)
xchg
call
pop
rcr
stos
retf
push
pushf
int3
in
icebp
sub
mov
dec
xchg
add
pop
lods
mov
fisub
add
out
and
int
mov
dec
(bad)
aaa
mov
mov
imul
test
jp
ret
aas
leave
aaa
and
fwait
sbb
div
push
fdivr
retf
sbb
push
fcomp
mov
sub
test
push
jmp
push
cmp
rcr
dec
jnp
aad
js
pusha
or
rcr
jmp
mov
sbb
sub
mov
gs
fdivr
fucomi
(bad)
pop
sahf
les
mov
std
push
pop
in
fs
and
cmp
int
or
ret
mov
fdiv
xlat
and
add
mov
pop
cmp
fmulp
popf
inc
stc
jmp
jbe
ds
dec
add
lahf
retf
enter
rcr
dec
fiadd
inc
pop
repz
xchg
out
and
fcomip
clc
fiadd
fsin
fidivr
(bad)
or
cmp
mov
loope
add
mov
xlat
test
ret
inc
ja
ins
mov
fimul
mov
pop
cmc
jno
push
mov
repz
fcmovb
ficomp
int
and
div
fidiv
xlat
nop
test
fidivr
mov
mov
call
jne
(bad)
jns
xor
stc
loopne
std
popf
loop
fcom
les
and
push
ficomp
push
mov
sbb
(bad)
sbb
push
inc
fsub
dec
sbb
fcom
cli
push
imul
mov
jmp
inc
fidiv
add
add
loopne
ins
inc
mov
lds
and
enter
leave
push
xor
mov
jmp
jecxz
and
mov
and
jmp
dec
retf
pop
lds
mov
fcom
or
icebp
mov
fdivr
imul
sbb
jne
(bad)
popa
push
fsubr
inc
pushf
pop
call
xchg
xchg
shr
fmul
mov
dec
mov
xor
and
push
mov
push
push
ss
lods
mov
pop
push
or
es
(bad)
and
out
out
inc
scas
ficom
sbb
loopne
clc
mov
mov
push
push
scas
fld
mov
inc
fadd
xchg
les
push
mov
ror
sbb
les
popf
sub
sahf
imul
test
je
or
sub
out
retf
lock
push
xchg
xchg
mov
xchg
loop
cmp
adc
cmp
pop
mov
xor
call
loopne
cli
popa
jge
cwde
outs
cmp
push
sbb
jecxz
jb
retf
add
outs
leave
ins
sar
sar
adc
xor
lahf
dec
enter
ror
imul
jp
sub
stc
push
add
push
push
ja
push
repnz
movs
push
in
push
fbld
xchg
aad
scas
js
(bad)
ror
push
mov
xchg
lods
mov
out
jmp
(bad)
in
sbb
mov
dec
jge
cwde
fidivr
push
test
xchg
mov
pop
xlat
inc
(bad)
push
sar
fild
not
or
push
(bad)
sbb
into
pusha
test
mul
and
jae
nop
hlt
lods
rcl
aad
inc
xchg
or
dec
xchg
or
pop
retf
jmp
inc
ret
xchg
push
nop
fcmovnbe
mov
sub
pushf
push
cli
pop
aam
adc
push
cmp
sar
mul
call
push
fyl2x
cmp
stc
retf
sbb
ins
popa
popf
std
sbb
xchg
repnz
stos
push
leave
cmp
test
xor
mov
lds
ins
push
dec
pop
and
in
cmp
fs
inc
xchg
push
mov
inc
(bad)
push
adc
ins
mov
sbb
sbb
push
jmp
sub
mov
loope
mov
or
or
pop
daa
pop
jmp
cmps
popa
xchg
enter
call
mov
xchg
and
or
jle
mov
cld
pop
leave
pop
popa
jge
repz
inc
ja
sub
jb
je
mov
popa
popf
mov
stos
(bad)
mov
out
das
mov
ja
mov
inc
aas
jae
jmp
cmp
rcr
or
add
push
sbb
add
pushf
stc
push
sbb
jb
or
push
xchg
idiv
xor
xlat
push
push
retf
ror
cmp
fsubrp
stos
add
push
pop
xchg
push
test
push
or
frstor
pop
sbb
or
das
fstp
fiadd
icebp
mov
cdq
jg
and
jg
out
fnstcw
jmp
jp
sbb
mov
retf
call
or
push
stos
cwde
mov
in
cmp
std
jge
or
loop
rcl
lock
mov
sahf
pop
mov
imul
sbb
cld
mov
(bad)
mov
mov
xor
scas
(bad)
stc
fmulp
pop
dec
sbb
jb
(bad)
push
(bad)
sub
fld
jne
xor
call
mov
inc
aaa
add
or
pop
mov
sahf
outs
pop
ja
call
pop
push
jp
popf
aad
sbb
or
(bad)
xor
xchg
out
pop
push
push
adc
enter
call
out
iret
pop
sub
dec
aam
ds
fisubr
pop
mov
sbb
ficomp
mov
push
sub
jle
cmp
sbb
(bad)
sub
test
or
mov
test
sbb
jge
push
pop
or
sbb
repz
adc
fs
sbb
xlat
or
lods
popa
std
dec
mov
pushf
movs
xchg
and
push
int
pop
push
imul
xchg
mov
ror
and
mov
adc
aam
cs
add
leave
cld
icebp
cmp
inc
cmp
push
in
jmp
bnd
js
retf
leave
push
or
fadd
(bad)
(bad)
pop
mov
xlat
jle
mov
fadd
sub
push
sbb
sahf
fstp
pusha
mov
ficomp
aas
inc
xchg
ret
popf
push
retf
pop
fstp
fistp
and
add
push
mov
leave
mov
popf
xchg
in
xor
retf
push
stos
sahf
xchg
leave
loope
not
gs
lea
enter
add
cdq
ins
push
sub
adc
pop
ins
dec
sub
sbb
mov
div
cmp
out
rcl
test
mov
pop
jbe
jmp
into
mov
jmp
out
call
xchg
pop
ins
pusha
sbb
mov
std
cmp
out
fidivr
push
cwde
inc
pop
mov
push
pop
(bad)
pop
sbb
call
fistp
fwait
mov
sub
into
pop
in
test
jl
jp
(bad)
out
and
jne
jp
(bad)
pop
xchg
lock
and
retf
into
cli
call
dec
leave
lods
shl
and
xchg
push
ins
inc
push
leave
dec
add
(bad)
pop
sbb
xor
xchg
mov
pusha
sub
call
mov
jo
jae
sti
(bad)
out
gs
hlt
push
adc
inc
(bad)
mov
push
jecxz
rcr
jl
xor
cmp
ret
(bad)
ss
fadd
nop
aam
push
inc
jmp
adc
test
or
aam
mov
sub
sbb
pop
push
or
cmp
test
xchg
fistp
fwait
sbb
mov
xor
fstp
in
arpl
sar
pop
push
retf
ds
mov
push
mov
ja
xchg
push
xlat
dec
pop
dec
in
lock
call
clc
or
test
pop
scas
xchg
dec
sbb
pop
std
ret
push
shl
mov
cmp
cwde
rcl
out
rol
push
aaa
jae
xor
sahf
imul
and
jg
clc
and
inc
ins
(bad)
jnp
test
jl
test
daa
adc
mov
fistp
mov
test
daa
push
pushf
dec
sbb
pop
enter
sbb
aam
xchg
into
dec
iret
pop
(bad)
pop
inc
inc
jmp
aad
jbe
mov
xlat
inc
mov
int3
ja
sub
inc
bound
cmp
pop
pop
mov
shl
(bad)
sti
sti
sub
jl
(bad)
clc
aam
bound
fcmovnb
push
inc
mov
in
(bad)
mov
or
sub
mov
add
push
fild
sbb
ret
jo
inc
push
mov
inc
std
dec
pop
(bad)
je
jno
inc
fistp
test
inc
xchg
les
mov
jo
push
lahf
fcmovnu
ficom
fcom
push
xor
xchg
iret
ja
sar
call
stc
sti
(bad)
pop
bound
es
and
xchg
inc
xchg
aad
popa
int3
bound
pop
sbb
dec
mov
fnstcw
ja
sub
jb
or
dec
jb
jo
xchg
pop
cwde
fistp
leave
pusha
movs
cmps
fcom
dec
or
fcmovb
pop
shl
mov
jmp
add
js
fwait
not
retf
push
cmc
js
ja
pop
xchg
jl
aad
lea
add
and
lods
pop
sbb
pop
sbb
fwait
xor
sub
mov
push
cwde
inc
adc
cli
sub
mov
shl
and
rol
icebp
push
xchg
sar
and
inc
pop
add
pop
shr
push
inc
call
xchg
lods
push
not
nop
int
aaa
arpl
inc
ja
xor
sub
push
icebp
or
iret
push
shl
mov
shl
sbb
out
cmps
fdiv
add
mov
sbb
sbb
sub
pop
fnsave
mov
mov
imul
nop
jl
scas
mov
and
or
cmp
test
popa
mov
adc
fcomp
push
sub
mov
shl
jae
stos
and
call
(bad)
inc
xchg
cmp
jne
test
(bad)
fs
jl
aam
pop
rcr
mov
les
call
mov
xor
test
jl
push
jl
sub
pushf
mov
jo
cmp
int3
movs
ror
xlat
xchg
retf
push
call
ret
rol
sub
inc
ud2
into
stos
mov
aam
add
(bad)
push
pop
jecxz
and
jae
dec
(bad)
in
push
sub
add
retf
les
jecxz
lods
ja
xor
push
sar
sbb
xchg
int
mov
pop
lock
add
std
pop
mov
add
xlat
mov
or
std
jmp
push
sub
rcl
pop
push
retf
mov
hlt
dec
jmp
into
inc
pop
mov
inc
and
shl
mov
pop
push
pop
sbb
xchg
test
aam
sub
test
fwait
push
jmp
ret
daa
retf
cmps
test
ret
test
xchg
jp
ja
sbb
fldcw
hlt
pop
xlat
out
push
aas
shl
jmp
cmps
inc
cmp
out
pop
xchg
cmp
push
xor
mov
pushf
stos
rcr
and
sub
outs
fild
ss
fcmovbe
xchg
pop
fidivr
jl
mov
daa
pop
les
jno
mov
dec
pop
or
xor
or
(bad)
aas
and
jo
xchg
scas
mov
inc
lock
cmp
xor
xchg
jmp
nop
mov
enter
ja
je
int3
lds
ja
inc
ss
dec
jge
adc
out
xchg
push
push
dec
mov
push
call
adc
and
pop
scas
aas
push
sbb
adc
test
loop
jl
pop
test
retf
aad
mov
rol
clc
clc
loope
lahf
out
sub
mov
shl
retf
int3
push
xor
fldcw
lea
cmp
xor
lds
je
jns
ret
cmp
add
sbb
cmp
int3
jno
push
sub
nop
jbe
xor
cmp
sar
data16
mov
(bad)
jbe
clc
xchg
adc
dec
stc
cmp
jp
xchg
sub
sbb
sahf
sahf
jl
rcr
fcomp
jnp
fcomp
fst
int3
xor
adc
push
fs
cld
xor
imul
mov
gs
sbb
std
fist
not
aad
pop
in
push
sub
inc
inc
jnp
cmp
jmp
dec
fisubr
push
nop
xchg
es
(bad)
popf
push
enter
cmc
mov
cmp
lahf
das
push
out
push
lds
jp
and
lds
sahf
addr16
lock
jns
in
sbb
push
pushf
pop
push
call
or
and
clc
(bad)
mov
xchg
sbb
push
sub
and
push
sar
xlat
nop
lahf
pop
nop
pop
push
mov
pop
pusha
mov
lods
(bad)
adc
stos
test
aaa
ja
cmc
scas
and
mov
pop
push
dec
cmp
push
pushf
loopne
cmp
mov
or
lahf
mov
es
not
inc
xchg
fist
out
sub
or
clc
xor
and
daa
call
add
retf
loopne
and
mov
xor
sub
xor
sahf
add
push
adc
call
les
(bad)
fwait
test
adc
leave
ret
xchg
pusha
xchg
add
(bad)
(bad)
fstp
ss
pop
pushf
cmp
mov
adc
pop
or
pop
adc
out
ins
and
push
loop
add
pop
ret
or
push
sub
pop
xchg
cmps
adc
shr
repz
(bad)
aam
ss
repnz
cwde
adc
fstp
lods
xchg
push
ret
mov
adc
add
dec
sbb
or
lea
je
pop
loope
fld
adc
iret
push
inc
fld
ss
ja
ds
nop
sub
push
test
ins
cmp
pop
and
cmp
sub
test
cmp
pop
pop
cmp
stc
sub
and
pop
mov
and
xchg
mov
aam
daa
fwait
push
retf
push
ror
aad
dec
outs
push
retf
out
push
add
ret
pop
clc
push
test
pop
pop
stc
out
xchg
dec
cmp
inc
cmps
nop
fwait
adc
xor
inc
and
test
jns
mov
xor
cmp
lea
dec
pop
test
sbb
add
xchg
add
xchg
out
mov
popf
cmp
cwde
jmp
lahf
or
sub
(bad)
pop
imul
mov
repz
dec
xor
inc
cld
scas
mov
sbb
loop
fwait
pop
sbb
mov
fiadd
nop
fstp
push
adc
jg
fucomp
ss
mov
sub
jmp
push
pushf
xchg
jb
retf
jae
test
jne
cmp
inc
and
sbb
fsubp
push
cmp
mov
clc
push
ins
pop
or
stos
pushf
arpl
xchg
outs
neg
push
scas
leave
loop
adc
stos
and
lods
sbb
dec
jl
pop
(bad)
popa
cmp
mov
out
clc
or
dec
pop
stc
stos
sub
ja
cdq
stc
push
daa
push
pop
xchg
mov
adc
mov
repz
jl
xor
jp
cmp
imul
jo
retf
cmp
mov
lods
sub
sub
jl
cwde
lds
sub
int3
jge
lahf
loop
arpl
mov
pushf
sub
sbb
nop
cs
mov
es
adc
jp
pop
mov
iret
xor
xchg
addr16
shl
mov
jmp
jmp
mov
mov
test
(bad)
jmp
jp
pop
dec
mov
jmp
retf
shl
in
jmp
dec
adc
sbb
pop
xchg
push
in
inc
inc
sub
rcl
cli
push
je
inc
mov
inc
(bad)
jmp
jecxz
adc
imul
push
nop
pop
cmps
xor
push
mov
pop
jmp
adc
jbe
movs
add
lods
test
cwde
mov
cs
mov
mov
ret
popa
push
pop
imul
shl
lods
jmp
cld
and
mov
add
mov
jae
mov
jg
push
movzx
pop
sbb
rcl
xor
lea
test
fcom
jge
xchg
iret
mov
mov
les
jmp
and
or
add
sub
addr16
or
mov
repnz
dec
std
inc
pop
inc
loop
sbb
xchg
pop
sbb
and
in
mov
loope
iret
je
nop
jmp
inc
add
stos
mov
shl
pop
mov
pop
enter
rcr
mov
stos
push
sub
xchg
pushf
movs
pop
dec
push
pop
push
xchg
repz
sbb
xchg
pop
iret
mov
sub
retf
sahf
mov
stos
push
xchg
mov
adc
jne
mov
retf
sbb
push
pop
sub
gs
dec
cmp
rcr
mov
int
cmp
pop
dec
push
sub
loopne
(bad)
pushf
pop
inc
fistp
adc
jb
mov
nop
adc
xchg
push
cmps
pop
pop
retf
mov
xchg
(bad)
cmp
aam
pushf
leave
pop
mov
xchg
retf
mov
fld
cwde
fcomp
rcr
mov
pop
mov
fmul
fwait
nop
pop
fisubr
add
popf
lods
xchg
pop
pop
inc
dec
pop
pop
push
js
retf
scas
lods
add
pop
pushf
dec
pop
lds
sti
aam
adc
test
dec
add
jnp
mov
push
cmps
out
adc
xchg
mov
pop
int3
adc
dec
push
xor
pop
dec
add
(bad)
sahf
stos
(bad)
dec
pop
in
mov
pop
mov
xor
push
rcl
mov
in
jge
loopne
cmp
pop
or
iret
xchg
mov
sbb
pop
lea
sbb
pop
enter
cmp
pushf
jnp
fcmovnu
fwait
into
(bad)
fild
add
pop
(bad)
pop
ret
iret
push
pop
mov
pop
add
pop
inc
add
rol
xchg
out
add
addr16
addr16
sbb
sbb
pop
cmp
sbb
test
out
test
mov
(bad)
(bad)
fldenv
cmp
leave
push
jg
repz
out
mov
stos
inc
jae
jae
xlat
cmp
mov
sbb
(bad)
mov
lds
xchg
rcl
fs
inc
fidivr
jbe
pop
mov
jo
pop
sti
mov
xor
arpl
and
outs
pop
mov
sub
sub
loope
loop
stos
jl
inc
jns
pushf
inc
in
retf
mov
pop
nop
fwait
sbb
cli
adc
xor
inc
sbb
jmp
stos
mov
test
nop
mov
dec
push
sbb
xchg
pop
test
push
fldcw
ja
push
and
sub
loope
add
mov
jns
sar
shl
add
jmp
or
sbb
ficomp
out
pop
sbb
mov
ret
jns
int3
mov
pop
xor
dec
xchg
fisub
frstpm(287
(bad)
jmp
pop
pop
jne
mov
push
push
aaa
cli
mov
push
pop
test
pushf
pop
das
inc
add
retf
sbb
add
jmp
pop
mov
stos
ss
push
fisttp
cwde
(bad)
stos
or
repz
adc
mov
sub
bound
jbe
(bad)
dec
push
mov
retf
xor
xor
add
dec
repz
cmp
ret
mov
stos
rcr
sbb
(bad)
push
ficom
cli
add
(bad)
es
mov
outs
mov
pop
scas
push
pop
mov
movs
cmc
inc
das
mov
sub
sbb
cmp
xchg
out
test
call
fistp
mov
mov
xor
xor
push
aaa
xchg
push
aad
sub
xchg
(bad)
xor
ds
retf
pop
and
xor
xchg
xlat
jno
into
ret
xlat
fist
push
shr
pusha
ins
retf
lahf
xlat
and
sub
push
push
cmp
rcl
jbe
jae
pop
mov
rol
xchg
shl
int3
jmp
dec
repnz
ja
inc
sbb
nop
lahf
sub
test
cmp
cdq
and
pop
mov
jmp
cmp
and
xchg
jb
push
lds
inc
and
mov
test
sbb
test
mov
out
cmp
mov
jmp
repz
loop
mov
mov
cmp
mov
pop
fcom
xchg
pop
or
mov
rcr
aaa
mov
frstor
jmp
lahf
std
xchg
pop
push
cdq
pop
xlat
adc
cmp
(bad)
and
movs
and
retf
fisubr
les
(bad)
(bad)
cmp
cmp
fwait
sub
idiv
push
jp
add
sahf
mov
and
sub
pop
sbb
call
call
xlat
mov
jmp
fdivr
cmp
or
(bad)
cmp
jmp
sbb
pop
or
mov
dec
int3
test
scas
or
mov
inc
pop
rcr
jb
mov
mov
adc
cmp
(bad)
cmc
pop
fcom
pop
sub
pop
pop
cmp
inc
aam
jne
add
aam
mov
stos
xchg
push
sbb
jno
fstp
push
pop
gs
(bad)
or
xor
inc
jg
jecxz
pop
ins
push
retf
outs
ss
sub
mov
fwait
push
movs
outs
mov
fld
fcompp
call
xchg
mov
mov
xchg
imul
popa
mov
stc
and
rcr
pusha
dec
pop
xchg
mov
test
mov
jp
xor
pushf
push
fst
pop
push
cmp
push
cmp
fwait
jnp
fcmovbe
inc
cmp
outs
xor
iret
arpl
xchg
ins
xchg
xor
inc
test
lea
ds
retf
stc
jmp
mov
cmp
push
(bad)
jo
pop
cmps
xchg
hlt
push
in
lds
jp
dec
push
test
loop
fcomp
pop
inc
xor
inc
popf
test
mov
loopne
cmp
dec
test
ja
pop
push
xor
jmp
mov
adc
sub
mov
push
dec
dec
pop
add
mov
xchg
(bad)
out
pop
cmp
gs
pop
sbb
push
mov
cs
ss
sti
sub
mov
push
in
adc
cmp
pop
add
outs
adc
dec
jnp
xlat
(bad)
(bad)
sub
cmps
xor
pop
jns
jnp
arpl
pop
jno
and
xchg
pop
sbb
dec
fidiv
ja
test
dec
retf
xor
mov
fisub
and
test
adc
xchg
arpl
ret
pop
loope
cmps
sti
fs
retf
dec
jmp
push
mov
nop
mov
fwait
aaa
mov
or
push
adc
cld
call
pop
lods
ror
adc
popa
(bad)
test
adc
xchg
adc
inc
sub
pop
ds
pop
cmp
sub
jge
dec
sub
dec
int3
push
push
ret
(bad)
out
sbb
clc
pop
mov
sub
out
adc
pop
outs
adc
jmp
cld
pushf
out
ret
adc
push
outs
xlat
pop
cmp
ror
xchg
xchg
loop
ret
hlt
arpl
cli
stos
fldl2e
aad
test
stc
rcr
test
jmp
jp
sub
adc
add
adc
push
xchg
arpl
xchg
(bad)
and
mov
jo
mov
mov
js
daa
adc
jp
jne
in
call
out
cdq
repnz
cmp
push
xchg
pop
dec
jmp
mov
dec
into
(bad)
ss
jle
nop
ja
iret
cli
hlt
outs
loope
and
xchg
test
aaa
pop
stos
sahf
fcmovbe
dec
xor
aad
test
push
jmp
jnp
dec
pop
dec
add
cdq
cmps
test
pop
pop
inc
xchg
push
js
fwait
jmp
xlat
enter
test
adc
mov
xlat
xlat
enter
dec
aam
xlat
addr16
fisttp
(bad)
stc
fsubrp
jge
xor
jp
mov
sbb
rcl
pushf
popa
pop
outs
rcr
aam
and
fst
mov
push
(bad)
or
fisubr
shl
int
push
sar
or
adc
xor
rol
mov
push
add
jbe
ret
mov
xlat
xchg
pop
mov
nop
xor
(bad)
pop
cwde
pop
pop
xchg
out
xchg
pop
sub
or
push
cmp
lahf
fst
fisubr
push
adc
shl
shl
sbb
adc
pop
mov
xchg
dec
mov
and
pop
rcl
mov
ins
sub
push
fisttp
sub
dec
mov
mov
cmp
sub
lock
pushf
jp
sub
xchg
inc
pop
js
inc
cld
add
sbb
sub
rcr
push
sub
inc
xlat
adc
lahf
outs
pop
pop
femms
ret
xor
mov
inc
jp
mov
xor
push
inc
xor
cmp
not
pop
cmp
data16
xlat
cdq
mov
push
sub
mov
sbb
mov
jecxz
mov
pop
ret
int3
sub
push
shl
jno
push
cmp
add
cmp
xchg
loop
or
fcmovu
retf
push
in
leave
lods
jns
jbe
cmp
lods
ins
sbb
out
sub
and
inc
fisub
xor
and
xchg
pop
shl
mov
lahf
mov
int
iret
xchg
daa
sub
sub
mov
jae
push
jae
out
(bad)
mov
mov
pop
dec
lods
ja
xchg
movs
inc
fstp
pop
and
repz
(bad)
ja
push
jne
xor
fwait
aam
pop
mov
inc
idiv
dec
(bad)
adc
in
test
inc
or
bound
out
mov
adc
adc
pop
mov
inc
dec
mov
mov
out
icebp
js
ficom
aaa
xchg
mov
rol
rcl
test
adc
sahf
inc
pushf
les
fisub
daa
sti
call
aad
rcl
neg
mov
out
je
pop
arpl
dec
out
imul
push
retf
neg
rcl
(bad)
ins
sub
je
cmc
ins
fcom
mov
(bad)
sub
xor
pop
cmp
ja
enter
or
int
dec
push
sub
push
loope
pop
test
lods
sub
repnz
xlat
fwait
sbb
pusha
mov
mov
mov
inc
xor
cmps
pop
in
xchg
cmps
cmp
jecxz
mov
cmp
sbb
add
push
push
sub
mov
mov
add
fild
and
jmp
popf
je
icebp
popf
or
or
(bad)
cmp
shl
mov
out
aad
push
jecxz
je
push
and
call
test
dec
xor
movs
jmp
cli
mov
dec
jnp
stos
ins
outs
fild
mov
(bad)
aas
mov
mov
repz
retf
int3
(bad)
shr
cmps
sub
dec
xchg
pop
mov
inc
push
add
fild
push
fcom
add
enter
push
mov
push
dec
pop
sbb
je
pop
push
out
imul
cs
idiv
retf
fisttp
mov
xchg
rcl
inc
shl
dec
out
pop
or
dec
ins
cli
push
mov
test
icebp
aad
xor
mov
sbb
loopne
xor
mov
mov
stos
outs
in
mov
ficom
xor
jmp
fisubr
je
pop
loop
adc
rcl
jp
sub
mov
(bad)
mov
cwde
out
pop
mov
xor
xor
rol
aad
out
test
popf
pop
repnz
inc
push
dec
cmp
dec
(bad)
push
call
dec
mov
jns
cmp
mov
push
push
shld
push
mov
push
fisub
push
fwait
jl
jae
ror
ss
sub
cmp
test
add
pop
outs
lea
xchg
mov
js
sbb
sbb
push
push
retf
icebp
xlat
fdivr
pop
or
sbb
imul
stos
dec
xchg
mov
mov
jecxz
ret
sub
cmps
ins
jne
mov
(bad)
(bad)
stos
unpcklps
fisubr
(bad)
fcmove
fnstenv
or
fstp
pop
xchg
call
pop
sti
xchg
mov
fwait
jmp
adc
and
ffree
data16
sub
into
test
sbb
or
(bad)
fild
xor
jmp
inc
fist
imul
cld
pushf
or
inc
in
jbe
div
sub
pop
sbb
and
stos
inc
(bad)
loope
push
adc
pop
xchg
push
sar
pop
sub
add
mov
test
xlat
jp
add
sub
dec
adc
fild
dec
arpl
mov
fist
ret
mov
inc
dec
mov
rol
add
movs
xor
ss
mov
je
(bad)
xchg
push
pop
popf
xchg
aas
test
mov
fbld
int
popf
pop
rcr
popa
pop
push
xor
cmp
xchg
push
(bad)
ja
mov
das
push
mov
mov
dec
mov
sub
dec
rcl
sub
pop
retf
mov
xchg
jmp
ds
jg
cmps
sbb
ins
mov
cli
or
mov
(bad)
popa
or
inc
scas
movs
retf
mov
dec
fistp
jmp
adc
sar
push
or
jo
pop
jg
adc
jnp
call
loopne
lds
add
xlat
neg
scas
aad
xchg
mov
cli
rol
or
popa
sub
push
jg
int3
popa
and
dec
pop
ror
push
nop
pushf
pushf
cli
sub
pop
inc
cwde
xlat
lock
inc
push
dec
push
push
xor
dec
fidiv
retf
xor
lea
inc
pushf
xchg
mov
sahf
(bad)
cmp
test
mov
icebp
sub
ja
(bad)
or
aam
mov
popf
jl
jl
pop
mov
mov
mov
ret
out
add
jmp
fnsave
sbb
pop
cli
div
loopne
mov
adc
sbb
test
daa
pop
add
mov
cli
and
ss
dec
out
pslld
pusha
sbb
scas
xchg
inc
loope
inc
or
sti
nop
mov
fxch
pop
xchg
sub
stc
pop
mov
xchg
mov
xchg
xchg
or
jl
push
arpl
cmc
nop
gs
jge
neg
(bad)
jecxz
sub
bound
stos
test
(bad)
or
imul
jmp
ja
cmp
push
sub
or
pop
fstp
std
ror
out
xor
test
add
cmp
dec
xor
pop
jg
daa
adc
push
cmp
aas
jmp
data16
and
push
pop
jne
jmp
sbb
cmp
test
in
fwait
stos
mov
stc
pop
xchg
xchg
cdq
cmp
xchg
and
sub
mov
cmp
jbe
xchg
pop
jp
pop
gs
mov
punpcklwd
call
arpl
test
or
mov
fcmovb
dec
push
inc
fisub
fwait
shl
ret
daa
shl
je
jg
add
ja
mov
and
stos
mov
push
add
fild
xchg
jg
(bad)
sub
xor
lock
ja
mov
stos
lock
cmc
repnz
leave
xchg
mov
lods
xchg
jge
xchg
mov
fdiv
mov
iret
sti
push
pop
xor
cmp
sar
test
stc
push
aas
div
nop
xchg
aas
ins
xor
pushf
popf
neg
inc
dec
push
inc
aas
jmp
stos
jmp
test
sahf
xor
aam
fistp
lods
xlat
es
cmps
push
jmp
cmc
lahf
jae
jnp
mov
sahf
outs
ja
sbb
arpl
call
jns
mov
test
test
or
fcomp
mov
fidiv
cmp
push
mov
pop
fnstsw
dec
sub
out
xor
mov
and
data16
jmp
jg
and
cmp
sub
cmp
js
inc
scas
mov
jns
push
mov
and
cmp
adc
out
dec
mov
push
aaa
(bad)
out
(bad)
cwde
das
rcl
fistp
das
pushf
push
pop
mov
fucomi
stos
push
jl
ins
jge
aad
repz
sar
jmp
mov
stos
or
idiv
inc
xchg
or
mov
push
mov
lahf
mov
push
cmp
jmp
add
dec
xchg
ins
sub
dec
add
outs
(bad)
cmp
dec
push
imul
dec
sub
scas
in
mov
mov
cli
(bad)
jg
lods
jg
std
cmp
out
ret
popf
pushf
ficomp
popa
jp
push
jecxz
and
xchg
pop
lds
in
and
jecxz
xchg
(bad)
ds
add
jno
mov
sbb
pop
addr16
push
pop
mov
hlt
pushf
por
or
ret
mov
push
sti
xor
or
stos
pushf
sub
pop
jl
mov
sar
mov
adc
and
loop
(bad)
jmp
mov
sti
ror
(bad)
cmc
and
aas
imul
jecxz
out
and
cmp
pop
call
sbb
mov
or
cmp
pop
pop
push
fwait
jo
sub
test
rcr
mov
mov
addr16
les
imul
cli
test
mov
inc
sub
call
and
pop
xchg
ret
and
movs
cmp
lods
dec
arpl
jnp
out
push
or
sub
scas
call
mov
(bad)
nop
cmps
sub
cmps
xlat
sti
loopne
pop
push
mov
jns
pop
mov
pop
mov
jnp
ins
test
dec
adc
inc
adc
jl
(bad)
pop
inc
gs
cmp
int3
into
or
shl
ins
cmp
sbb
sbb
daa
mov
push
xchg
ret
stc
icebp
jns
fwait
cwde
xchg
mov
xchg
in
xchg
mov
fidiv
(bad)
in
sub
mov
add
sub
(bad)
arpl
arpl
or
(bad)
and
ins
sar
sbb
sbb
jle
push
xor
cmps
add
xlat
cdq
xchg
xchg
xchg
or
pushf
mov
hlt
cmps
pop
aad
push
push
lea
or
sub
nop
fimul
adc
retf
hlt
pushf
jmp
xor
int
inc
xchg
xor
jmp
dec
sbb
inc
jo
mov
xchg
cld
test
pop
jl
and
ins
mov
repz
inc
lock
in
out
adc
inc
push
mov
out
or
pop
call
add
enter
fnstcw
fwait
inc
outs
stc
stos
out
cwde
pop
sub
xchg
and
pop
sbb
xor
outs
pop
cmp
xor
mov
and
mov
call
pop
pusha
jle
mov
sbb
inc
cwde
mov
and
xor
ret
cmc
test
xchg
xchg
pushf
(bad)
xor
inc
inc
ficom
inc
ja
sti
stos
iret
sbb
pop
std
inc
inc
out
ins
arpl
mov
test
inc
xchg
(bad)
aas
stos
pop
pushf
fs
mov
push
push
dec
inc
pushf
cmp
xchg
aad
fimul
fisub
mov
inc
int
xor
mov
mov
add
cmps
push
stos
mov
pushf
push
mov
mov
stc
xor
hlt
cmp
sbb
inc
aad
xchg
sub
imul
inc
inc
ret
pop
rcl
cmps
pop
mov
aad
xchg
cmp
mov
cmp
adc
jbe
enter
mov
stos
dec
(bad)
cmps
mov
pop
xchg
and
movs
pop
pop
sub
stos
ficomp
in
sbb
cld
clc
mov
lea
or
cwde
cmp
cwde
push
neg
(bad)
retf
xlat
clc
arpl
xor
push
imul
and
jns
daa
cmps
sub
dec
shl
mov
mov
add
pop
rol
nop
mov
fistp
sub
cmp
adc
(bad)
mov
mov
xchg
inc
sub
fadd
dec
xchg
dec
jnp
add
mov
push
mov
inc
inc
loope
adc
mov
sub
scas
push
mov
fiadd
mov
repz
bound
rcl
fadd
jmp
pushf
mov
(bad)
cwde
cwde
out
inc
mov
retf
push
daa
inc
cwde
ins
popa
scas
pop
imul
sbb
out
rol
jb
repnz
xor
cmp
jbe
dec
adc
cwde
rcl
test
pop
push
clc
push
ret
mov
push
mov
call
mov
out
mov
cld
xchg
cmp
mov
and
or
mov
mov
lods
cmps
mov
shl
jmp
pop
addr16
sbb
cmp
loope
pop
pop
and
outs
mov
scas
(bad)
xchg
scas
xor
sub
inc
les
mov
sahf
imul
cmp
ja
pop
cmp
daa
loopne
sub
test
pop
mov
or
cmp
ficom
pushf
cmp
popf
mov
(bad)
(bad)
repnz
inc
sbb
fxam
jae
jp
cmp
push
shl
push
int
inc
mov
gs
icebp
jg
fcom
fisub
adc
add
imul
ins
mov
mov
mov
sbb
(bad)
out
mov
ins
sbb
loopne
leave
xchg
les
adc
or
addr16
popf
es
sbb
leave
sti
stos
daa
mov
xchg
xchg
mov
sbb
popf
dec
data16
sar
test
xor
fs
cmp
test
pop
adc
mov
aaa
dec
sti
jmp
push
xchg
rcl
push
test
or
shl
xor
mov
sbb
jp
call
fiadd
xlat
push
fcmovnu
loopne
ficomp
mov
jmp
dec
push
sbb
xchg
(bad)
aam
inc
push
jp
int
(bad)
shr
add
ss
bound
xchg
iret
(bad)
dec
(bad)
std
iret
xor
sahf
and
push
pop
mov
sub
dec
je
mov
cmps
pop
sbb
jecxz
shr
aad
xlat
xchg
cmp
pop
bound
push
lahf
inc
js
in
je
jp
fstp
sar
ja
push
mov
jne
stc
mov
fmul
out
xchg
sbb
test
push
jl
mov
add
pop
or
test
cmps
xchg
sub
retf
inc
mov
push
pusha
inc
push
stos
test
sub
pop
cmps
lods
aaa
loop
xlat
movs
sbb
das
aam
mov
xchg
stos
adc
sbb
mov
aas
test
aad
and
fnsave
(bad)
pop
ficom
enter
sub
ja
nop
xchg
cld
repz
test
scas
in
sbb
fs
lods
mov
repz
pop
jp
scas
xchg
repz
test
scas
cmp
inc
pop
sub
mov
fstp
xchg
in
leave
xchg
lock
hlt
mov
add
frstor
or
nop
shl
push
push
cmps
xchg
pop
mov
xor
out
inc
jae
sbb
inc
in
sahf
pop
iret
es
retf
push
je
jecxz
cmp
popf
aas
(bad)
jo
arpl
test
int3
mov
cmp
enter
adc
and
div
sbb
stos
fstp
xlat
loope
push
inc
pop
adc
in
cmp
fidiv
icebp
xchg
mov
test
stos
adc
sbb
dec
bound
cmp
neg
retf
and
cmp
cmp
xchg
cmc
fidiv
fidivr
lahf
mov
pop
ss
fs
test
ss
popf
(bad)
hlt
retf
fld
repz
xor
aad
cld
xor
hlt
into
jmp
addr16
cmc
stos
call
fistp
pop
push
adc
push
lds
ret
sbb
and
xor
push
aad
push
pushf
or
push
jp
xchg
aad
adc
mov
push
rcr
ja
movs
mov
fwait
inc
stos
in
lahf
cmp
jmp
in
cmp
cmp
mov
retf
push
mov
pop
nop
xchg
call
fisttp
je
sub
mov
ficom
mov
pop
in
inc
aas
loope
(bad)
in
inc
push
stc
scas
bound
dec
pop
pop
fiadd
adc
pop
or
es
cmp
pop
stos
inc
out
jle
aad
adc
pop
in
mov
ins
(bad)
push
sub
out
aaa
mov
in
fcmove
cdq
sti
or
(bad)
(bad)
xchg
push
add
mov
dec
out
jle
nop
dec
mov
fidivr
inc
pop
retf
pop
sbb
or
mov
lds
je
jge
cmp
xchg
add
loop
inc
les
mov
and
mov
xchg
pop
mov
cmp
pop
push
mov
outs
inc
cmp
pop
inc
sti
adc
test
out
add
pop
push
test
bound
mov
sti
sub
fs
cmp
std
stos
jl
or
out
ja
sbb
cli
pushf
sub
(bad)
pop
push
(bad)
pop
(bad)
lea
fisub
fld
sbb
fimul
dec
lahf
neg
shl
push
fisub
mov
mov
inc
or
push
jl
stos
fild
mov
aaa
adc
push
in
xchg
pop
pop
inc
xor
push
jno
retf
lahf
cdq
mov
dec
ins
push
iret
xchg
dec
mov
pop
leave
bound
test
sub
push
cmp
sbb
ja
push
fwait
push
hlt
ins
mov
test
and
in
sub
pop
loopne
rcr
std
cmp
xlat
inc
test
push
cmc
xor
or
loop
adc
inc
into
pushf
cmp
jno
push
dec
mov
and
xchg
push
fwait
inc
mov
popa
fsubr
pop
push
cmps
aas
fist
mov
ret
(bad)
test
mov
jnp
xor
retf
xchg
mov
push
addr16
ds
pop
cli
in
xor
jecxz
xlat
movs
out
mov
sbb
fisub
dec
(bad)
push
les
xor
es
sahf
test
add
outs
std
pushf
or
inc
sub
cmp
cli
xor
push
mov
pop
retf
fisttp
mov
push
push
jmp
ins
popf
add
stc
ins
fmul
pop
nop
popf
cmp
ret
mov
mov
pop
add
jge
fsubp
loop
mov
inc
ficomp
ror
ror
adc
mov
jmp
lahf
adc
daa
and
push
fstp
dec
push
cli
in
pop
fdivr
jnp
lock
pop
cmp
sbb
push
cmp
fidivr
cmp
arpl
and
push
inc
aaa
lods
loope
lahf
cmp
sub
fidiv
push
pop
add
(bad)
in
into
cld
cmp
ins
adc
and
call
in
or
aam
mov
pushf
xchg
rcr
sbb
dec
pushf
add
clc
(bad)
arpl
or
ret
pop
retf
mov
pop
jbe
xchg
aaa
ds
pop
call
leave
mov
push
cmc
xchg
addr16
es
out
fldenv
or
sub
inc
(bad)
xchg
mov
std
stos
and
icebp
int3
pop
int
push
sbb
cmp
and
ja
jecxz
fabs
dec
fsub
mov
push
dec
jmp
mov
push
xchg
adc
ss
mov
pop
sbb
fucomip
out
cmps
xchg
icebp
mov
mov
ror
push
fwait
jb
sbb
loopne
sub
jmp
not
cmc
fs
push
xchg
fs
inc
jbe
aad
int3
ins
pop
sub
test
jbe
in
mov
xchg
rcl
push
and
and
lds
retf
jne
cmc
shl
aaa
icebp
xor
sbb
repnz
(bad)
push
enter
rcr
xchg
pop
iret
adc
pop
inc
sub
push
ins
pop
outs
inc
enter
clc
call
xchg
aad
xchg
nop
enter
test
sbb
add
jp
stc
adc
adc
pop
mov
pusha
mov
je
stos
sbb
fucomp
add
mov
jecxz
dec
dec
mov
sbb
pop
lods
ds
call
imul
sbb
in
mov
pop
sub
enter
inc
add
push
out
mov
scas
cwde
jp
cmp
test
test
bound
stos
jbe
pop
ror
cli
jbe
loop
cld
xchg
sbb
(bad)
sbb
mov
push
pop
mov
aaa
jb
cmp
call
cmp
(bad)
clc
mov
test
jnp
adc
push
out
sbb
mov
and
and
popf
mov
jmp
xlat
xchg
aaa
add
push
mov
push
add
out
mov
push
pop
xor
fimul
xchg
aad
push
rcr
push
push
in
imul
and
sbb
or
cld
jnp
loope
cli
cmp
sub
fwait
jb
xor
ja
fistp
inc
dec
dec
lahf
scas
sbb
push
add
in
cmps
scas
mov
mov
call
xlat
test
call
loop
pusha
ja
pop
push
and
cmps
nop
jbe
ret
addr16
sar
xchg
sub
xchg
sub
fimul
dec
loope
jae
fdivp
xchg
pop
and
jae
sbb
ss
les
sbb
popa
or
add
push
adc
add
and
movs
daa
stos
into
call
aas
call
shl
jp
sbb
xor
pop
out
mov
inc
mov
fisttp
sbb
adc
pop
cdq
call
cmp
inc
hlt
(bad)
daa
jne
jne
sbb
pusha
xchg
stos
pop
cmc
mov
adc
pop
sub
retf
mov
ss
jbe
enter
ret
leave
out
sub
mov
ret
(bad)
mov
fisub
test
pop
repnz
or
and
fidivr
xor
ja
aas
and
xor
idiv
repz
adc
jge
arpl
inc
inc
dec
xchg
aas
test
(bad)
xchg
outs
pop
mov
pop
jmp
out
fidivr
xlat
mov
(bad)
rol
mov
pop
rcl
add
ss
mov
dec
cs
xor
add
into
imul
cwde
mov
out
test
adc
jbe
hlt
pop
int3
jmp
sub
inc
push
push
mov
cmps
aaa
mov
pop
imul
int
mov
inc
das
outs
pop
jp
mov
les
in
push
mov
and
leave
push
test
call
push
adc
jp
push
jne
dec
ja
lods
pop
mov
dec
aam
xor
cwde
(bad)
push
push
out
push
loope
inc
jne
push
call
pop
cmp
ret
push
xchg
pushf
adc
adc
mov
sub
sub
mov
cmps
mov
push
sub
icebp
mov
cmp
icebp
mov
mov
sti
int3
ja
jns
lock
lock
sub
mov
cs
push
adc
sbb
pop
xchg
mov
jmp
bound
js
sbb
push
jb
pop
ja
fwait
xchg
repnz
movzx
in
shl
mov
sbb
mov
pushf
xchg
xlat
cmp
jecxz
cs
mov
inc
iret
rcl
fs
shl
dec
loop
push
add
cs
xlat
dec
into
sub
rcl
call
pop
in
push
data16
sbb
mov
sar
loopne
push
jmp
push
xchg
test
call
dec
fmul
shl
rcr
pop
retf
xchg
loopne
push
movs
push
mov
sti
(bad)
xor
in
mov
int3
dec
adc
and
inc
xlat
icebp
fcmovnu
retf
xchg
mov
mov
mov
jne
xchg
cli
sbb
sbb
cmp
fwait
jnp
icebp
sub
mov
retf
mov
shl
push
mov
pop
ja
pop
dec
ds
xlat
vhsubpd
and
jnp
sub
and
shl
loopne
lds
sar
aas
loopne
ss
dec
cmp
fs
pop
or
xchg
dec
xor
iret
dec
shr
and
mov
sbb
out
mov
(bad)
gs
cmp
and
mov
(bad)
scas
jmp
push
pop
sar
cmp
aam
sub
pop
icebp
add
push
retf
(bad)
pop
repnz
fidivr
test
lock
nop
push
popf
inc
cmc
int
(bad)
daa
addr16
test
lods
loope
idiv
mov
iret
je
stos
pop
fisub
xchg
(bad)
dec
sbb
test
ja
mov
int
sub
jge
adc
(bad)
test
xor
fidiv
pop
sbb
shr
pop
xchg
mov
fisttp
pop
mov
or
movs
shl
cs
mov
xchg
inc
jae
shl
scas
aam
repnz
sbb
adc
sub
loope
sbb
adc
mov
cmp
lea
xchg
push
dec
stos
loop
and
mov
stos
lahf
adc
mov
stos
push
std
sub
scas
xor
xor
or
(bad)
push
outs
aad
add
pop
fild
dec
xlat
retf
rol
cmp
xchg
push
cs
addr16
int
cmp
mov
pop
adc
and
pop
and
test
std
(bad)
in
cs
sbb
ins
mov
pop
sub
jae
cdq
inc
sbb
loopne
les
int3
in
pop
or
pushf
jge
(bad)
std
nop
retf
add
sub
and
pop
ret
pop
or
push
js
xchg
imul
lock
iret
adc
pop
sbb
repnz
jge
pop
add
inc
sub
fnstsw
cmps
pop
mov
es
lods
test
jp
mov
in
pop
adc
jns
jp
gs
in
jnp
mov
fsubr
jae
xlat
mov
jne
out
adc
(bad)
pop
or
enter
fisub
mov
loop
xor
mov
aam
retf
fwait
aad
sbb
xchg
rcr
shr
mov
dec
mov
lods
in
in
ror
fwait
mov
retf
fcomp
push
cmp
dec
test
imul
push
lods
add
xor
das
mov
clc
mov
mov
bound
jmp
push
fs
xor
xor
sub
pop
cwde
bnd
inc
sbb
les
push
add
mov
jmp
or
mov
adc
neg
sub
mov
mov
stc
les
xchg
push
mov
bt
mov
push
mov
jnp
sub
xor
jmp
jmp
loope
jmp
mov
mov
pop
imul
fwait
add
(bad)
ja
ins
stos
rol
add
mov
sub
idiv
push
stc
xchg
jno
adc
mov
ror
ret
pop
jp
mov
out
xor
mov
push
retf
push
(bad)
enter
xlat
sub
or
push
push
pop
psubusw
fs
stos
cwde
imul
(bad)
call
xor
inc
adc
pop
inc
jmp
sar
leave
dec
stos
sbb
call
mov
push
adc
push
(bad)
sti
std
mov
xlat
pand
sub
div
jmp
push
dec
adc
cmp
retf
push
clc
mov
dec
jmp
sbb
arpl
and
in
or
(bad)
movs
call
push
test
inc
xor
jecxz
pop
ret
cmp
(bad)
mov
cmp
sub
das
xchg
mov
xor
pop
and
ss
mov
fucomi
mov
cmp
jmp
scas
mov
cwde
and
xchg
fiadd
jne
fiadd
add
jo
adc
add
pop
ret
popa
inc
mov
pop
xchg
xor
or
cmp
daa
jge
xchg
pop
fbstp
add
mov
cmp
and
js
push
pop
and
imul
imul
fdivr
mul
mov
mov
std
dec
arpl
loop
cwde
adc
xlat
xor
cmp
call
lahf
xor
cld
dec
lea
test
adc
cwde
out
out
cmp
int3
mov
cmp
std
cmp
ja
pop
daa
dec
icebp
mov
mov
adc
rcl
jmp
pop
jl
sbb
push
retf
imul
nop
jl
xor
out
lods
mov
mov
shl
cmc
fadd
push
pop
xchg
sub
scas
adc
pop
sbb
retf
fsubr
mov
xchg
mov
and
test
and
dec
inc
xchg
call
ret
lods
(bad)
push
jp
cwde
push
into
cmps
mov
fwait
or
gs
jmp
test
into
test
jo
fiadd
test
push
mov
jne
enter
adc
stos
sub
mov
sub
mov
sbb
mov
sub
fild
ret
ja
sub
mov
pop
stos
mov
adc
gs
(bad)
mov
jae
mov
mov
sub
add
pop
call
push
sbb
lods
cmp
fldcw
mov
sub
xchg
ror
cmp
mov
xchg
aas
fidiv
add
retf
out
arpl
jge
and
addr16
mov
sbb
fwait
ja
nop
cmp
mov
adc
xor
stc
sub
xchg
fistp
jnp
addr16
scas
aaa
mov
and
pop
mov
cmps
jo
outs
and
mov
cmp
aaa
mov
mov
inc
adc
and
aaa
pop
jmp
inc
add
add
retf
(bad)
adc
fnclex
adc
mov
mov
test
push
dec
cmp
and
sub
mov
xor
jbe
and
test
jecxz
mov
loopne
jo
call
mov
add
mov
cli
ss
ds
adc
add
mov
ror
push
fwait
bnd
imul
int3
inc
fs
(bad)
sub
mov
bound
leave
pop
or
(bad)
cmp
repnz
push
mov
jne
adc
(bad)
sub
stos
mov
pop
fcmovnb
sbb
scas
inc
mov
stos
in
(bad)
or
jne
scas
retf
jmp
test
out
repnz
xchg
mov
mov
sar
mov
rcr
add
sub
mov
lods
lods
data16
jmp
sbb
sar
rep
repz
lods
push
xchg
mov
push
outs
inc
sbb
(bad)
push
pusha
sete
xchg
aam
sub
mov
icebp
nop
je
ds
jle
(bad)
mov
sbb
rcr
sahf
push
cmp
bound
cmps
dec
fcomip
push
or
ja
inc
ret
in
cmp
sub
test
ficom
retf
or
(bad)
pop
cmp
inc
loop
mov
bound
sub
sub
test
hlt
sbb
fwait
sbb
and
jg
xchg
lods
sbb
cmp
out
xor
pop
and
push
in
push
fwait
scas
push
adc
and
sbb
loopne
(bad)
fwait
push
stos
outs
mov
in
add
adc
sub
or
xlat
outs
and
fiadd
cmc
popa
fnstenv
push
jle
or
inc
fs
sahf
jl
ss
sbb
cmps
mov
cli
icebp
xchg
add
mov
pushf
in
in
out
mov
iret
loopne
shr
push
lahf
rol
nop
pop
or
mov
inc
pop
out
and
pop
arpl
arpl
dec
xor
adc
xchg
sbb
or
jo
sahf
(bad)
stos
jmp
cmp
jp
loop
xchg
push
lock
das
mov
sbb
inc
adc
lahf
mov
cwde
pusha
jge
jg
xchg
lock
loop
js
pop
dec
daa
retf
retf
jb
sub
pop
ror
adc
or
push
xchg
push
or
aas
mov
lock
jmp
loope
mov
adc
test
mov
lahf
data16
add
jp
pop
loopne
out
es
out
out
jbe
out
bnd
mov
scas
ss
inc
sbb
dec
inc
(bad)
out
dec
call
fwait
stc
mov
ins
and
fwait
sbb
xchg
jl
das
sbb
push
xor
xchg
pop
jmp
mov
les
jl
call
repnz
xchg
call
sub
push
aas
pop
jp
and
or
or
les
not
pop
(bad)
pop
aam
fcmovne
mov
inc
jae
mov
fcom
adc
add
test
pop
sbb
xchg
push
jge
pop
inc
iret
or
cmps
mov
xchg
pcmpeqd
fst
or
adc
cmp
xchg
ror
pop
and
add
adc
nop
call
mov
and
jp
rcl
nop
inc
fld
pop
cmc
xor
imul
push
add
sbb
push
jp
sub
call
sub
scas
push
fisttp
push
jne
push
mov
ret
loope
dec
pshufw
xor
test
pop
add
and
js
(bad)
int3
push
fidivr
daa
fst
shl
ins
mov
fwait
cmp
cmp
xor
lods
lock
test
xor
dec
inc
inc
xchg
(bad)
call
push
add
cmp
movs
movs
add
mov
lahf
pop
xor
or
dec
test
xchg
cs
xor
test
sub
pop
div
push
push
pop
pop
call
imul
fcomp
mov
nop
fiadd
mov
cs
rol
add
xchg
shl
jno
pop
push
pop
cmps
adc
aam
push
dec
loope
dec
fst
sub
cdq
cwde
ja
fwait
inc
adc
fistp
fs
inc
sbb
retf
fwait
or
pop
aad
dec
jae
iret
call
aaa
fidiv
sbb
xor
mov
xchg
sub
mov
scas
mov
rcl
or
jl
jl
rcl
pop
out
sub
or
ds
fld
fs
rol
imul
ins
mov
lock
mov
pop
mov
stos
pop
mov
dec
pop
in
mov
sbb
mov
push
push
mov
popa
adc
mov
(bad)
cdq
push
imul
int
pop
arpl
pop
mov
rcl
(bad)
loope
xor
out
adc
push
dec
xor
xor
dec
pop
or
jle
jbe
adc
pop
xor
and
sbb
dec
mov
and
cli
cmps
stc
out
mov
sub
repnz
mov
mov
aas
icebp
add
shl
mov
jl
xlat
fisttp
pop
stos
repnz
or
in
ss
mov
pop
test
int3
jmp
(bad)
vpcmpeqd
int3
fld
sub
mov
xchg
pushf
retf
movs
movs
call
(bad)
dec
sbb
push
adc
xlat
add
adc
mov
or
loope
rol
adc
daa
sbb
clc
fcmovnbe
enter
or
sahf
push
hlt
leave
aaa
fldenv
adc
push
stos
sbb
fsubrp
cmp
inc
and
mov
inc
adc
cli
popf
pop
stc
out
xor
sahf
fisubr
adc
rcl
sbb
fucompp
in
jg
ds
push
mov
xchg
cmps
(bad)
or
cmp
or
pop
xchg
xchg
mov
and
fisttp
xor
rol
(bad)
adc
cmp
fst
xlat
xchg
cwde
daa
xchg
sbb
xchg
cmp
pop
mov
mov
xchg
add
pop
pop
pop
mul
xchg
ret
dec
into
sub
jnp
jp
stos
das
xchg
fs
out
xor
sbb
(bad)
lods
xchg
mov
add
sub
fild
div
jmp
xchg
mov
pop
push
xor
popf
mov
inc
icebp
mov
in
scas
inc
outs
dec
fs
cmp
in
jae
cld
in
xchg
(bad)
cli
repnz
xor
adc
mov
pop
pop
adc
ret
pop
ficom
cwde
call
(bad)
aam
pusha
cmp
fcmovnu
pop
and
ins
xor
pop
mov
sar
cmp
dec
sub
jbe
leave
pushf
div
mov
inc
rcr
leave
rcr
dec
add
ins
dec
xchg
sbb
inc
fild
sub
sub
fiadd
mov
mov
sbb
and
mov
xor
sbb
out
push
xor
inc
push
scas
movzx
xchg
fwait
cmc
mov
std
test
sub
daa
jge
jae
jg
mov
sbb
movs
dec
xor
cld
jg
push
push
mov
das
mov
and
xor
push
pop
inc
je
shr
scas
(bad)
daa
mov
addr16
jbe
xlat
mov
jg
pusha
push
sub
add
pop
sub
aaa
jae
xor
pop
push
cdq
and
and
rep
inc
ss
pop
pop
fsubr
sub
mov
and
cs
imul
call
jmp
sub
retf
ret
sub
repnz
or
jg
fcmovbe
cmp
push
mov
pushf
cmp
int3
lods
mov
mov
inc
sbb
loop
cdq
icebp
sbb
mov
jns
pop
jb
lock
cdq
and
jnp
sahf
pop
mov
mov
add
pusha
mov
adc
jnp
ja
xor
inc
or
(bad)
shr
push
mov
dec
mov
dec
mov
sub
pop
test
inc
int3
daa
inc
cdq
jno
push
in
iret
mov
pop
jge
xor
cdq
inc
xchg
test
mov
sbb
inc
mov
sbb
pushf
inc
pop
das
push
fwait
xor
ins
js
cmps
pop
out
movs
idiv
cmps
cwde
push
fcomi
push
xchg
fneni(8087
dec
mov
cmp
sub
push
pop
pop
sahf
stc
shl
mov
xor
fldenv
pop
fstp
int
dec
push
lods
xchg
ins
call
and
rcl
jmp
sti
ins
pop
loop
sub
div
pop
lods
fwait
xchg
cs
xor
rol
jp
inc
dec
mov
ja
jle
aad
xor
xor
pop
test
shl
shr
stos
pop
out
push
rcl
cmp
dec
repnz
mov
mov
cmp
imul
lahf
sub
push
mov
cli
dec
in
retf
or
(bad)
fist
rcr
sub
cmp
sub
mov
push
or
stos
imul
cs
dec
add
rcr
hlt
adc
out
xor
retf
out
sub
lahf
jle
mov
add
shr
in
stos
les
loope
and
cli
movs
mov
shr
sbb
sbb
cmp
inc
mov
sbb
adc
sub
ins
add
xchg
sub
shl
pop
clc
(bad)
mov
test
cmp
jmp
sub
mov
pop
mov
movs
rcl
sub
cdq
push
ret
xchg
xchg
add
scas
pop
(bad)
jp
imul
pop
sub
jmp
out
call
pop
or
xchg
push
push
mov
push
cmp
mov
or
pushf
add
dec
jge
fisubr
inc
lods
addr16
push
retf
ret
imul
(bad)
cs
xchg
dec
xlat
pop
icebp
ficomp
mov
aam
jmp
loopne
int3
pusha
pop
sub
mov
fwait
xchg
sbb
lds
dec
xchg
cmp
jmp
cmps
dec
ins
jg
push
jno
mov
retf
jbe
sahf
cmp
das
sub
test
add
pop
jle
add
add
fimul
adc
call
cs
mov
fisubr
push
call
cmps
jb
push
xor
aad
nop
pop
int3
fdivr
xchg
push
cmp
shr
pop
icebp
cmps
mov
jnp
and
dec
sub
pop
cmp
daa
and
pop
mov
xchg
or
pop
ds
sbb
xlat
mov
out
je
stos
jp
cwde
stos
fwait
in
mov
stos
(bad)
xchg
xor
adc
mov
xchg
and
add
xchg
pushf
add
pop
and
clc
nop
xchg
mov
add
ficomp
shl
lods
(bad)
mov
aaa
pop
inc
pop
xchg
aad
dec
in
(bad)
pop
push
mov
pop
jns
ins
xchg
imul
popa
call
pop
inc
cmps
inc
clc
adc
loope
ror
fadd
lahf
sahf
sub
or
xchg
ror
pop
sub
in
cmp
cmps
add
jp
stos
icebp
fdivrp
sbb
adc
pushf
mov
add
cld
pop
pop
sub
and
sbb
mov
xor
sub
adc
lods
and
mov
or
push
cmp
stc
sub
push
pop
retf
rcl
push
adc
xchg
sbb
je
xchg
retf
cwde
ins
pop
pusha
out
mov
jmp
fidiv
test
pop
xchg
dec
das
cmp
add
or
dec
and
cs
adc
test
test
cmp
retf
(bad)
mov
push
sub
test
rcl
xor
push
lahf
mov
mov
jbe
fbld
leave
loopne
loope
add
retf
pop
mov
jnp
out
enter
mov
inc
lods
test
xchg
or
xlat
sbb
ret
mov
shr
xchg
cwde
mov
int3
pop
adc
or
cmp
pop
dec
xor
mov
test
adc
xlat
cmp
in
pop
xchg
vandnps
test
xor
xor
xchg
jmp
inc
(bad)
xchg
dec
aad
add
sbb
push
xor
inc
out
rcr
pop
pop
pop
xor
mov
lods
fistp
retf
cmc
test
sub
inc
lods
dec
pop
pushf
out
cmp
(bad)
and
adc
out
sahf
dec
xchg
mov
push
inc
js
add
mov
jno
rcr
dec
enter
inc
(bad)
fwait
jns
and
rcr
mov
pop
in
out
jle
popa
push
sti
outs
ins
ret
fisub
mov
cmps
inc
push
jmp
and
test
mov
test
sbb
or
push
pop
test
retf
rcl
aaa
fistp
out
pop
dec
mov
sbb
and
xchg
mov
nop
xchg
call
pushf
mov
es
test
cmps
inc
sahf
in
cmps
adc
in
loope
pop
sahf
mov
lock
sbb
sbb
sar
push
loope
jg
xor
gs
dec
rcl
pop
sbb
jnp
jmp
add
pop
aas
(bad)
push
addr16
add
fstp
outs
aad
cmp
mov
fldl2t
mov
xlat
push
popa
jmp
movs
mov
fnstenv
ins
or
mov
imul
test
pop
in
dec
sub
jmp
and
mov
popf
out
rol
pop
aaa
sub
sub
(bad)
pop
(bad)
test
mov
push
aad
cmp
sbb
clc
retf
gs
pop
mov
je
call
(bad)
mov
inc
outs
mov
(bad)
loop
mov
call
jmp
(bad)
cld
sub
pusha
in
test
pop
or
fist
pop
xchg
xor
imul
add
xchg
jns
sar
call
push
cmp
pop
stos
jle
xor
mov
sahf
lahf
arpl
aaa
sbb
scas
in
aad
fidivr
pop
mov
call
cld
sub
lods
jp
pop
cmp
or
jno
fadd
dec
jae
fwait
push
push
(bad)
sub
jno
xchg
fisubr
mov
lahf
inc
jl
xor
imul
jb
(bad)
jb
lock
mov
and
ss
sub
mov
cwde
fidivr
outs
in
aad
sub
stos
in
icebp
rcr
and
imul
retf
xlat
push
sbb
mov
fild
inc
jmp
jnp
(bad)
mov
or
popa
inc
sub
xchg
mov
movs
clc
repz
dec
fstp
lahf
jp
in
div
dec
sbb
add
inc
add
mov
les
pop
inc
adc
loop
mov
push
iret
in
push
dec
mov
pop
daa
add
cld
and
mov
cld
adc
push
pop
push
fisttp
data16
xchg
fisubr
push
jmp
es
hlt
xchg
xchg
ror
mov
push
fwait
dec
push
aam
dec
shr
jbe
les
(bad)
xor
in
mov
xlat
push
fwait
dec
mov
fidiv
(bad)
pop
pop
jge
sar
les
pop
mov
fild
pop
mov
mov
ret
push
xlat
stos
test
movs
dec
pop
or
jnp
add
ja
mov
into
inc
repnz
xchg
mov
mov
xchg
movs
retf
mov
dec
sbb
movs
adc
retf
mov
mov
rol
mov
mov
jae
daa
dec
xor
add
mov
mov
imul
(bad)
push
jle
and
popf
lds
pop
pop
mov
add
adc
test
pop
leave
inc
(bad)
cmp
push
pushf
xlat
fisub
mov
xchg
adc
mov
jns
and
push
adc
stos
out
fxch
rcl
(bad)
sub
fisubr
mov
sbb
xchg
xchg
mov
clc
rol
pop
cwde
push
xchg
sbb
mov
xor
shr
mov
dec
cmp
mov
(bad)
jb
mov
js
daa
bound
and
add
pop
push
jo
sub
test
pop
cdq
xchg
jmp
sub
fidivr
mul
mov
retf
loop
push
lahf
ins
mov
mov
mov
or
and
scas
xlat
ja
aad
in
mov
stc
aas
(bad)
or
jmp
pop
xchg
inc
pop
fcomp
jmp
pushf
mov
pushf
mov
sbb
add
add
or
ret
sbb
popf
fdivr
out
mov
fmul
jp
xchg
push
mov
enter
test
mov
or
pop
xchg
fndisi(8087
popf
data16
in
dec
sbb
cmp
in
fistp
dec
mov
pop
pop
xchg
int3
adc
sub
leave
sbb
pop
mov
sbb
push
in
adc
push
dec
mov
xchg
or
rcl
jl
mov
push
je
push
retf
pop
push
pop
xchg
pop
mov
sti
pop
cmp
mov
sub
je
jo
fnsave
test
push
sub
mov
mov
sub
dec
cmp
add
stos
cdq
rcr
push
inc
add
push
push
sbb
fprem1
std
mov
dec
ficomp
js
(bad)
adc
mov
mov
mov
stc
je
push
out
xor
int3
dec
xor
dec
cmp
pop
sub
lahf
cmp
mov
aam
xor
retf
icebp
push
push
cmp
sub
xor
sbb
sbb
inc
int3
mov
pop
inc
mov
mov
ret
push
add
fwait
xor
xor
jae
xchg
xchg
mov
pop
push
fsubr
mov
aaa
push
push
pop
push
and
jl
cld
mov
inc
rcr
pop
js
ror
push
imul
js
xchg
mov
dec
ret
aad
dec
push
stos
imul
and
shl
lods
aam
sub
adc
mov
cwde
jle
test
push
stos
fucomip
cdq
js
sbb
(bad)
jp
fistp
sbb
and
lea
mov
(bad)
push
std
mov
push
inc
jg
pop
and
push
(bad)
lahf
sbb
(bad)
out
pop
stc
and
rol
in
mov
push
ror
xor
pop
jge
iret
aad
fist
sti
in
xor
mov
call
stos
aaa
xor
mov
or
mov
adc
jp
jle
jno
sub
push
mov
sub
jbe
shl
push
stos
ror
xchg
jg
pusha
cmp
or
xchg
or
mov
mov
adc
popa
xchg
inc
mov
(bad)
adc
and
push
jmp
retf
pop
push
nop
test
inc
xor
adc
stos
adc
shl
retf
jecxz
nop
fwait
stos
test
(bad)
nop
sub
adc
nop
mov
jle
and
test
retf
sahf
jno
stc
mov
test
retf
inc
fisubr
stos
sahf
das
sub
sti
scas
cmp
test
loope
stc
xor
xchg
fs
outs
jnp
xor
test
addr16
and
pop
(bad)
sahf
jmp
shr
test
adc
test
push
stc
mov
pop
mov
mov
mov
(bad)
jo
ss
sub
push
sub
sahf
loop
fist
shl
pop
xchg
rol
cwde
adc
retf
xchg
push
adc
pop
dec
pop
jns
jg
movs
dec
sbb
mov
dec
adc
push
push
cld
loop
fldenv
pop
stos
and
xchg
and
push
push
nop
aam
and
sti
mov
loopne
push
retf
rol
sbb
push
add
ins
and
xchg
mov
jmp
nop
lahf
or
(bad)
adc
(bad)
vpunpcklqdq
stos
jl
pop
push
adc
jno
test
mov
dec
ret
in
cmp
mov
test
sub
nop
psubd
loopne
pop
in
ror
jl
pop
xor
test
fist
mov
test
pop
lahf
pop
mov
pop
or
aam
adc
loop
cmp
mov
cmp
pop
sbb
sbb
mov
fisubr
jno
mov
stos
lods
ss
mov
adc
adc
rcl
imul
mov
pop
cli
jle
dec
test
cmps
fadd
div
lock
bnd
xchg
ins
jmp
jmp
nop
pop
dec
dec
fdiv
mov
or
shl
pop
sub
frstor
push
cmp
clc
(bad)
pop
sahf
push
sbb
aas
mov
xchg
fnstcw
xor
retf
push
or
lahf
cmp
sahf
push
sbb
loopne
xor
sbb
retf
adc
ror
add
dec
xchg
call
pop
repz
cmps
mov
outs
aam
out
push
or
ret
fcmovb
fxam
jmp
jge
mov
ror
pop
cmp
dec
xchg
pop
sbb
bound
fwait
push
shl
push
push
inc
xchg
jmp
jp
add
or
retf
enter
dec
push
fwait
push
pop
mov
shr
dec
ficom
test
add
dec
fcomp
sahf
loopne
(bad)
popa
pop
mov
rol
rcr
sahf
mov
pop
movs
in
fmul
push
jge
rcl
(bad)
leave
adc
inc
pop
fstp
dec
(bad)
in
or
cs
(bad)
sbb
arpl
mov
icebp
call
cmps
xchg
pop
ja
iret
or
pop
popa
dec
mov
es
pop
sub
mov
test
or
rcr
pushf
mov
mov
push
imul
aam
(bad)
sahf
push
pop
mov
repz
cmp
mov
fild
pop
jns
inc
push
test
jno
and
jl
sub
or
sbb
pop
retf
inc
leave
cmps
aad
test
or
sahf
inc
test
sahf
cmp
pop
dec
dec
enter
(bad)
sbb
lock
ins
pop
mov
mov
repz
sti
sahf
pop
test
push
xor
add
and
dec
push
pop
(bad)
js
std
sbb
lods
sub
and
adc
mov
mov
push
std
jnp
push
add
pop
add
push
loope
mov
aas
fist
xchg
js
cwde
sub
xchg
dec
push
add
push
ror
ret
pop
daa
adc
xor
push
push
inc
xor
push
jnp
cmp
dec
xchg
loop
jo
sub
jmp
and
push
pop
cwde
stos
add
test
push
xlat
in
pop
rcr
adc
dec
in
jnp
pop
popa
push
test
jl
inc
mov
sti
call
mov
pop
fidivr
cwde
outs
pop
popa
push
(bad)
pop
sub
jno
clc
adc
sbb
jno
inc
fst
mov
mov
(bad)
xchg
or
mov
sub
add
das
jecxz
or
ud0
test
ins
rcr
push
jmp
jle
ss
scas
or
in
fstp
push
push
adc
lea
sbb
ss
sbb
pop
mov
loop
xchg
jns
sbb
loop
push
lods
lock
jl
stos
xor
push
in
or
jbe
pop
push
add
in
cdq
and
push
mov
in
mov
aam
mov
repnz
cmp
ficom
rcl
fcomip
add
jmp
sub
jo
push
fucomip
add
mov
pop
mov
mov
jbe
call
sbb
inc
push
ins
sahf
adc
dec
sbb
enter
push
call
pop
mov
int
xchg
movs
call
sub
cmp
scas
test
mov
loope
mov
lock
add
lahf
jae
mov
pop
(bad)
mov
cwde
(bad)
lock
xor
(bad)
sub
pop
call
sbb
lods
pop
add
pop
mov
push
fcmovnu
push
push
fiadd
ds
sbb
cmp
pop
pop
fst
push
dec
add
fcom
mov
xor
test
sbb
push
movs
retf
mov
cmp
call
push
and
mov
call
je
gs
pop
xchg
and
test
(bad)
cmps
cmp
cmp
ret
loop
push
retf
fst
cmps
mov
loop
pop
sbb
pop
fisttp
hlt
rcr
or
enter
jb
fild
popa
imul
das
dec
call
push
mov
mov
stc
mov
ret
ror
aad
pop
jmp
fisubr
xor
add
sbb
movs
mov
ret
inc
outs
mov
fcmovb
popa
mov
retf
pop
xor
movs
mov
xchg
lahf
aam
cli
js
imul
and
xchg
and
mov
jnp
xchg
dec
mov
icebp
mov
sar
hlt
mov
pop
lds
mov
rcr
shl
ret
jp
adc
or
xchg
das
mov
bound
add
push
repnz
(bad)
movs
cmp
xlat
lea
adc
lahf
xor
mov
mov
xchg
ja
shl
mov
bound
and
mov
adc
mov
enter
mov
jo
pop
sbb
adc
out
outs
popf
xor
out
dec
cmp
jle
popf
repz
(bad)
xor
xchg
push
loop
xor
repnz
into
rcl
iret
inc
mov
add
fucom
clc
xchg
in
mov
pusha
pop
test
(bad)
fild
test
cmp
pop
outs
sbb
loop
mov
js
pop
push
ficom
je
std
add
aam
push
inc
pop
mov
push
fwait
and
rcr
stos
aad
test
sbb
sub
movs
mov
mov
stos
add
sahf
sti
cmp
mov
pop
inc
jp
cli
add
lahf
stc
fild
xchg
add
sbb
adc
push
sub
test
std
(bad)
or
popa
iret
and
xchg
(bad)
xor
xchg
push
aad
inc
dec
and
addr16
push
or
inc
fisttp
(bad)
call
and
int3
aaa
jno
call
jo
push
cld
push
call
out
push
push
sbb
and
call
adc
push
pop
test
jg
fld
mov
sar
mov
js
(bad)
fdivrp
adc
imul
sahf
jmp
retf
test
dec
int3
loop
sub
das
fsub
pop
xchg
adc
xchg
add
fcom
leave
shr
into
fdivr
sbb
and
jp
scas
sti
les
push
add
test
fdiv
(bad)
cmp
xchg
aad
cwde
retf
jmp
pop
call
shl
into
cld
push
and
sub
pop
sub
push
fs
cdq
xlat
jge
push
and
jmp
xchg
mov
fbstp
imul
or
pusha
or
mov
cs
iret
push
xchg
jb
sahf
cmps
push
movs
pushf
push
xchg
sbb
pop
aaa
or
loop
int3
jmp
push
test
cmp
push
rol
sti
shl
pop
shl
jp
mov
nop
cwde
jmp
cmp
add
xchg
test
mov
adc
push
jmp
push
sbb
inc
mov
retf
inc
dec
add
fsubp
loop
sub
int3
bound
nop
push
call
pop
test
ret
fistp
pop
adc
pop
out
int3
fmul
cmc
int3
add
pop
dec
clc
hlt
push
mov
(bad)
jns
mov
dec
xchg
loopne
ja
push
adc
pop
push
pop
out
movs
es
ja
push
jle
lods
test
stc
push
mov
mov
fld
cld
xchg
or
push
rcl
xchg
sub
add
movs
jp
xor
xchg
(bad)
retf
hlt
mov
cmp
call
or
mov
adc
call
cdq
mov
adc
ja
fdivr
loope
cdq
ds
pop
push
cmp
js
in
test
mov
xchg
pop
leave
xor
cwde
adc
xchg
inc
push
jmp
fmul
push
rcl
mov
aad
xor
mov
cs
jns
ror
mov
push
pusha
test
aad
cdq
pop
cs
fidiv
mov
bound
sbb
cmp
into
push
imul
jnp
test
mov
or
jp
imul
sbb
dec
mov
adc
pop
sbb
mov
ret
shl
push
mov
(bad)
or
jp
and
rcr
(bad)
xor
mov
rol
dec
(bad)
and
mov
xor
sub
retf
ficom
(bad)
fidiv
xchg
cmp
xor
test
mov
push
push
jbe
outs
xchg
jp
cs
and
xchg
pushf
fst
xchg
cli
leave
mov
cwde
rol
dec
(bad)
dec
cmp
js
adc
mov
jp
retf
pop
adc
push
movs
adc
push
retf
jnp
pop
push
fcomp
fwait
push
inc
xchg
and
or
mov
dec
cmc
dec
pop
fucomip
pusha
push
add
add
dec
pushf
sbb
mov
pushf
add
mov
mov
inc
pop
sub
ja
out
push
cmp
and
ret
popf
dec
test
aam
scas
rcr
rcr
mov
or
outs
sub
mov
dec
jle
mov
gs
loop
fwait
jnp
dec
pop
jmp
lods
scas
push
pop
mov
imul
fist
call
pop
cs
imul
and
fcmovnbe
push
ret
rcl
lods
xor
dec
add
rcl
push
fcom
pop
sbb
je
(bad)
fistp
push
fsubp
fstp
pop
call
in
mov
or
fnstenv
pop
ins
stc
add
jmp
pop
addr16
mov
sbb
test
shl
imul
jmp
jmp
mov
push
ss
movs
sbb
ret
mov
cmp
repz
jb
jo
repz
and
mov
pusha
test
int3
dec
xor
push
xchg
or
xchg
retf
out
stos
test
sbb
push
mov
pushf
pushf
jo
push
gs
mov
ds
ret
and
push
rol
pop
fidiv
enter
sbb
adc
xlat
adc
push
test
idiv
outs
dec
jns
jp
and
push
jg
dec
rcl
push
(bad)
jne
xlat
push
cmps
dec
pop
in
dec
xchg
bound
mov
sti
cmp
dec
xchg
jmp
pop
or
mov
jmp
cli
jmp
fcomp
sub
fwait
movs
sub
(bad)
sbb
mov
sub
ins
rcl
ds
inc
repz
pushf
cld
mov
lds
mov
pop
int3
mov
clc
lods
push
sub
loop
add
aas
jo
push
pop
(bad)
xchg
push
cdq
cmp
pop
inc
clc
add
pop
mov
jmp
ret
xchg
pop
leave
stos
imul
add
mov
lahf
stc
mov
fwait
add
cmp
cwde
mov
hlt
repnz
aam
sub
push
popf
repz
inc
add
stos
out
loope
pushf
push
lahf
pop
dec
xchg
push
pop
xor
ret
jb
or
adc
fisubr
mov
call
adc
ror
sub
jnp
cmc
push
jb
rcl
loope
inc
dec
jmp
test
ficomp
adc
rol
add
cmps
int
rol
lock
pop
xchg
or
test
test
fistp
cli
cmps
shl
jo
popf
mov
dec
xchg
xchg
std
jge
ja
push
mov
mov
ins
xor
pusha
xchg
push
sub
xchg
cmps
dec
pop
ficom
outs
pop
push
fwait
sbb
xlat
fbld
mov
je
les
cmp
push
shr
jns
inc
cdq
arpl
dec
inc
scas
or
jg
sub
mov
sub
ret
mov
mov
adc
jp
sbb
fistp
jns
(bad)
pop
mov
aam
ret
jp
push
cmp
cmp
add
mov
test
cmp
retf
cli
push
add
jbe
stos
sub
pop
test
sbb
or
(bad)
jp
pop
les
add
sub
adc
outs
or
xchg
pop
leave
int
push
pushf
mov
add
add
inc
dec
js
ins
dec
es
mov
stc
in
pop
mov
ins
jbe
retf
and
mov
jp
mov
cmc
ret
mov
mov
shl
scas
ficomp
push
call
push
mov
lds
adc
mul
sub
cld
gs
jl
pop
aam
pop
xchg
or
cld
mov
dec
jmp
add
sbb
jmp
ret
adc
xchg
mov
adc
jmp
and
lds
dec
jecxz
mov
ja
cmps
sbb
fadd
push
(bad)
sub
arpl
sbb
mov
icebp
pop
mov
adc
mov
or
dec
mov
pop
dec
cli
xchg
or
arpl
sbb
leave
cmp
push
sub
pushf
mov
xchg
inc
neg
jae
arpl
aad
jb
js
mov
sbb
rcr
stc
jbe
dec
ret
push
(bad)
inc
cli
mov
shl
fdivr
cmp
pop
mov
stos
pop
or
fistp
data16
gs
call
cmp
pop
sub
fxch
cld
xchg
ja
and
stos
inc
int
dec
fcomp
test
push
mov
cli
sbb
test
add
stc
dec
call
cld
fimul
dec
pop
das
sub
ins
push
mul
cdq
scas
adc
inc
cmps
sub
test
sar
mov
dec
or
retf
aad
fisub
gs
sub
pusha
clc
sti
cmc
xor
jmp
add
inc
sbb
int
or
inc
movs
movs
in
sbb
push
pop
inc
push
ret
(bad)
mov
mov
or
sbb
dec
mov
push
xchg
aaa
mov
mov
jno
in
mov
lods
mov
fs
out
mov
pop
pushf
frstor
pop
or
jmp
inc
cmp
push
mov
adc
test
add
mov
adc
pop
xchg
add
(bad)
xor
push
fwait
cwde
add
test
cmps
mov
retf
jl
sahf
or
mov
jmp
dec
ficomp
cwde
push
cmps
or
fwait
and
xchg
jne
aas
fwait
retf
sbb
popf
inc
js
fwait
push
xlat
adc
jmp
and
aam
mov
lahf
ja
test
dec
inc
lahf
mov
jg
mov
xchg
push
pop
das
dec
push
dec
out
sbb
fdivrp
sbb
mov
scas
jb
lods
add
and
sub
neg
(bad)
push
retf
(bad)
mov
cmp
mov
ss
(bad)
ror
movs
add
repz
cli
fldcw
pop
inc
pop
sub
cs
addr16
out
fidiv
jp
xchg
ins
pop
clc
cmp
push
adc
(bad)
jge
popf
jmp
adc
mov
ins
push
stc
and
push
mov
pop
fiadd
mov
(bad)
ds
dec
rol
rcr
pop
mov
and
cmps
fistp
push
cld
scas
cdq
arpl
stc
xor
pop
movs
cmp
enter
cmp
fnstenv
cmp
mov
fisttp
push
mov
cmp
push
(bad)
leave
adc
fwait
mov
in
push
pusha
fxch
pavgb
cli
retf
inc
sbb
add
and
ja
out
call
xchg
inc
sbb
outs
in
mov
in
into
push
jp
xor
mov
scas
imul
repnz
in
stos
add
out
push
not
inc
inc
ror
ret
int
fwait
sbb
cmps
cwde
rcr
retf
push
xchg
mov
xchg
jno
cmp
pop
or
or
push
out
push
sbb
addr16
push
sbb
pop
mov
or
adc
mov
inc
int3
in
jge
pop
je
jns
sub
add
aad
push
lahf
xchg
ja
mov
nop
fidivr
mov
xchg
or
push
stos
cmps
repnz
pop
sub
je
fwait
mov
or
add
xchg
adc
pop
repnz
mov
das
xchg
leave
xlat
sbb
or
mov
icebp
mov
es
mov
push
inc
loop
imul
adc
cmp
(bad)
mov
sub
loop
fiadd
loope
push
fisubr
mov
neg
inc
push
ficom
jp
inc
xchg
rcl
adc
aad
loop
inc
push
xor
and
test
mov
pop
push
inc
sar
imul
pop
in
and
or
fcmovnu
rcr
stc
adc
mov
inc
jle
jl
popf
push
cwde
aam
xlat
fstp
ret
icebp
xchg
jmp
js
stos
cmp
mov
out
leave
sub
in
push
fild
or
mov
sbb
mov
mov
aaa
addr16
ret
xchg
push
jmp
lds
mov
adc
adc
adc
adc
dec
pop
jmp
loop
ror
shld
loope
sub
xchg
ins
fs
dec
out
fmul
jp
push
fild
fidivr
out
mov
imul
scas
cmp
sub
mov
sbb
add
ficom
leave
or
mov
xor
leave
test
(bad)
mov
mov
iret
sar
and
pushf
test
xor
nop
push
jno
ins
daa
ja
or
or
mov
and
lahf
mov
ret
jne
sbb
push
xor
jne
pop
ror
mov
fld
push
pop
dec
push
aam
loop
cmps
push
fwait
inc
daa
repz
imul
lods
push
push
xchg
mov
xor
add
cwde
ins
jg
int
sub
dec
add
cmp
jl
adc
sub
jl
xchg
push
xchg
xchg
xchg
mov
int
add
lahf
pop
ret
add
add
fidivr
adc
fstp
scas
sbb
aad
pop
loop
enter
test
enter
dec
shl
ds
adc
add
jbe
sti
fidivr
test
ss
mov
pushf
mov
push
mov
add
lea
push
imul
(bad)
fwait
or
push
sub
mov
mov
xor
push
jle
in
xor
sbb
sbb
xlat
loope
sub
cmps
out
add
ficom
jmp
mov
xlat
sahf
movs
xchg
mov
inc
test
add
pushf
fwait
inc
cmp
xchg
xbegin
mov
adc
addr16
cmc
adc
pop
mov
add
cmp
sub
int
jne
sub
adc
cmp
lods
push
pop
adc
mov
cld
cs
and
imul
out
cmp
inc
cmp
mov
inc
mov
ror
retf
xchg
mov
fstp
test
cmp
(bad)
sub
addr16
in
mov
fnstenv
jecxz
cmp
(bad)
cmp
inc
aam
inc
or
xchg
sbb
and
mov
inc
sub
xor
xchg
adc
stos
cwde
jne
cmps
fldenv
jle
dec
jne
mov
not
or
cmps
add
pop
jmp
imul
xchg
xchg
pop
sti
(bad)
sbb
adc
xchg
mov
push
fnstsw
sub
mov
(bad)
mov
enter
fwait
dec
xlat
pop
ins
pop
mov
ficomp
xchg
mov
inc
mov
mov
pop
or
cmp
push
mov
and
(bad)
retf
dec
imul
jmp
mov
mov
xchg
adc
scas
rol
dec
arpl
std
sub
repz
or
mov
cmp
adc
nop
xlat
and
mul
or
cmc
mov
mov
mov
in
cmp
xlat
jns
xchg
retf
ror
mov
jae
(bad)
pop
lea
test
ror
xor
mov
jecxz
jg
pop
push
cwde
xor
ret
dec
mov
add
call
xlat
xor
sub
mov
or
scas
sti
and
fisttp
mov
cmp
sub
mov
mov
mov
mulps
mov
jnp
rol
adc
fwait
adc
xor
pop
retf
cmp
xor
leave
jmp
sbb
mov
fwait
mov
xlat
stos
xchg
and
adc
call
dec
adc
mov
retf
xor
inc
lahf
xchg
fist
ja
mov
ja
mov
icebp
push
pusha
jl
shl
lods
(bad)
out
mov
jnp
pop
pushw
pop
aad
and
pop
leave
or
daa
rcr
(bad)
sar
mov
cs
xchg
sti
adc
out
in
xchg
stos
and
sub
into
and
dec
int3
mov
jl
cmp
fnstenv
shl
addr16
dec
sub
mov
and
or
cmp
push
and
sbb
push
jne
(bad)
cdq
push
not
test
jmp
int3
cli
inc
inc
jns
fcomp
lahf
into
dec
(bad)
cmp
repnz
out
bound
mov
sbb
mov
xor
pushf
sahf
(bad)
jle
mov
not
cdq
fisubr
cwde
cmp
cmp
scas
sub
pop
addr16
mov
jl
les
push
dec
mov
or
mov
cmp
mov
mov
xor
sbb
push
dec
nop
cmp
push
cmp
or
mov
mov
inc
jnp
(bad)
rcr
loopne
adc
sub
add
adc
lods
mov
add
inc
enter
sub
out
cmc
jae
loope
push
pop
push
mov
mov
sbb
icebp
rcl
retf
int3
es
fimul
adc
pop
call
rcl
mov
dec
push
sub
add
xor
xlat
xchg
test
inc
retf
push
push
ds
dec
add
loope
ret
xor
adc
cli
and
aam
es
fimul
sub
jp
imul
sbb
mov
movs
fwait
mov
adc
icebp
push
mov
cwde
stos
lods
ror
inc
pushf
mov
shl
popa
jl
jge
push
xor
dec
je
and
jnp
jnp
adc
test
push
cmp
sub
out
mov
push
mov
pop
int
shl
or
sbb
fwait
cmp
adc
adc
pushf
neg
das
jp
iret
pop
ret
ins
es
sti
dec
cmp
test
imul
jo
xchg
dec
mov
movs
in
or
xchg
mov
out
jmp
xor
je
pop
sbb
mov
cld
mov
add
movs
sub
or
aam
or
not
addr16
inc
imul
fistp
push
push
cmp
xor
xchg
mov
and
stc
lods
lods
test
dec
inc
call
sub
or
sub
mov
mov
sbb
imul
sahf
inc
cld
push
ja
sub
pop
pop
add
sbb
fld
mov
enter
cs
out
or
mov
cmp
pop
mov
and
pop
cmp
mov
xchg
xchg
adc
lods
test
repnz
icebp
imul
dec
rcr
push
sbb
push
mov
add
dec
mov
ror
add
ficom
xchg
jbe
loop
push
jmp
add
loop
aaa
lock
jge
push
aas
push
mov
cmp
lods
mov
dec
repz
fisubr
enter
mov
aaa
rcr
std
xchg
push
fcomp
cmp
sub
xchg
(bad)
dec
sub
cmp
mov
(bad)
xchg
stos
hlt
cmp
sub
js
push
jle
mov
pop
push
pop
movs
rcl
mov
mov
xchg
push
mov
ja
neg
push
outs
mov
pushf
inc
add
mov
dec
cmp
test
cs
mov
(bad)
sahf
push
xor
stos
outs
dec
mov
dec
and
sub
cwde
cwde
xchg
js
iret
sub
lds
ds
mov
fwait
xor
jnp
pop
push
cmp
sbb
fcmovne
ins
xor
ror
cwde
jmp
sbb
sbb
test
inc
fwait
jmp
and
jne
push
xchg
ins
test
push
xchg
call
stos
or
pop
sbb
retf
xchg
clc
popf
cmp
and
sar
push
lods
fstp
dec
jae
retf
push
call
pop
push
cmp
icebp
push
call
inc
test
mov
sbb
shl
add
cld
sub
push
push
pop
push
stc
sbb
push
test
fisttp
nop
lea
pop
inc
stos
and
or
cmp
imul
adc
xchg
fcmove
rcr
pop
jo
cdq
pop
retf
jge
rol
inc
int3
mov
sub
xor
scas
jbe
push
cld
ds
jge
stc
test
(bad)
adc
pop
add
ss
and
sbb
pop
xchg
pop
cmps
call
movs
mov
sbb
retf
dec
fld
dec
sbb
add
repnz
ja
add
retf
or
mov
and
xchg
fst
pop
fiadd
lods
xchg
xlat
pop
push
retf
jp
xor
or
stos
sub
movs
sar
cmps
adc
push
push
push
inc
mov
(bad)
ret
jno
shl
mov
ret
ror
mov
push
(bad)
inc
fdiv
xchg
call
aaa
dec
pop
sti
addr16
or
fsubp
fisub
imul
sub
mov
pop
aas
xor
adc
rcl
inc
inc
scas
lock
mov
fdivr
std
in
push
sbb
fild
aad
push
xchg
call
pop
xchg
mov
hlt
cdq
xchg
or
iret
pop
sub
movs
xchg
xor
lahf
lods
and
inc
add
cmp
(bad)
push
push
fsubrp
cmp
out
pop
movs
jae
or
mov
or
sbb
pop
mov
or
jnp
pop
es
hlt
cmp
mov
pop
cmps
(bad)
sbb
clc
cli
sbb
rcl
pop
sbb
cmp
fidivr
std
xchg
push
(bad)
jnp
or
jo
or
xchg
xor
test
retf
jb
push
call
repz
mov
xchg
daa
test
push
or
lock
pop
pushf
push
neg
xor
into
xlat
xor
cmp
int3
aad
shr
int3
dec
push
mov
and
rcr
jmp
jmp
mov
fwait
adc
imul
(bad)
xchg
ret
inc
xor
jl
add
sub
or
nop
scas
scas
mov
inc
ja
mov
pop
adc
ficom
adc
ror
sahf
movs
mov
or
cmp
pop
sub
fs
pop
call
mov
dec
sbb
dec
pop
fnstenv
mov
xor
and
dec
pop
pop
sbb
fwait
clc
xchg
fst
mov
pop
mov
pop
pop
ds
mov
ret
cmp
xor
pushf
mov
imul
int3
mov
add
test
ins
pop
xor
(bad)
loopne
retf
fild
pop
add
stos
pushf
cli
xchg
bound
pop
sub
dec
mov
jecxz
pushf
push
(bad)
pushf
push
ficom
xlat
gs
sbb
shl
inc
stos
dec
out
xchg
adc
cmp
push
push
enter
js
retf
popf
fnstenv
pop
pop
cmps
push
pop
fisttp
pop
pop
rcr
mov
pop
pop
adc
inc
pop
test
ret
mov
sbb
pop
popa
retf
pop
push
(bad)
call
or
test
cmp
call
pop
pop
cmp
add
jmp
retf
pop
retf
in
jp
or
xor
mov
inc
enter
enter
dec
fisubr
scas
stos
test
xchg
dec
pop
stos
push
jl
sub
ror
pop
retf
xchg
push
pop
cli
sbb
push
pop
les
cli
xor
pop
cmp
in
xchg
pop
fs
sub
leave
inc
mov
push
pop
rcr
xlat
jl
mov
retf
xchg
mov
and
mov
outs
xchg
inc
retf
aam
fldcw
xor
rol
xor
(bad)
pusha
outs
sahf
jmp
pop
pop
jp
dec
cmp
retf
lds
xchg
pop
mov
pop
mov
int
sub
sbb
je
pop
jecxz
push
out
adc
ror
sbb
jmp
mov
mov
push
adc
scas
inc
add
sub
adc
or
sahf
jb
retf
ja
sub
into
cmp
mov
sbb
rcr
outs
je
pop
add
cwde
retf
pop
fs
xchg
dec
and
pop
push
adc
mov
adc
xlat
fwait
pop
push
adc
pop
aas
test
xchg
cmp
fwait
cwd
rsm
jp
sahf
pop
mov
dec
mov
dec
adc
scas
dec
lods
pop
ja
or
dec
(bad)
aas
retf
sbb
pop
into
pop
lock
mov
xchg
pop
sub
outs
repnz
movs
mov
cmp
fbstp
inc
stos
rcl
jae
mov
inc
sbb
push
pop
loop
call
xchg
inc
or
stc
in
pop
cwde
test
shr
or
cwde
sub
push
pushf
or
mov
retf
aam
mov
lods
pop
retf
pop
jecxz
fs
retf
mov
fcmovnu
mov
or
push
fwait
jmp
jg
fcmovne
cmp
push
mov
jns
call
sub
pop
pop
dec
pop
popa
xor
pop
lock
add
mov
stc
push
mov
icebp
cmps
ds
jmp
nop
mov
jg
fist
sbb
stos
ins
jp
or
push
pushf
mov
push
mov
sbb
adc
ja
pop
stos
push
pushf
mov
fwait
out
push
ins
fwait
test
out
outs
mov
fsubr
stos
mov
and
iret
test
mov
pop
aad
dec
adc
pop
adc
pop
pop
adc
push
pop
cwde
mov
inc
movs
push
or
mov
cmp
fprem
mov
loope
sahf
out
jp
push
xor
xchg
fild
cli
mov
stos
xchg
call
mov
aaa
ins
out
or
inc
leave
pop
pop
int3
pop
lods
mov
or
pop
pop
cdq
pop
outs
jne
in
stos
and
ret
and
inc
mov
(bad)
mov
sbb
int3
repnz
cmp
add
icebp
ins
retf
pop
inc
sbb
xchg
xchg
pop
pop
fistp
(bad)
inc
call
mov
out
pop
int3
call
jb
mov
daa
shl
ins
cmp
sar
mov
xor
pop
cmp
mov
stos
sbb
cld
mov
into
or
call
pop
popf
pop
lds
inc
mov
jle
ja
mov
repz
sub
rol
ss
mov
shr
cmp
pop
mov
stos
jo
(bad)
lods
pop
stos
ret
(bad)
push
jbe
xor
retf
fwait
outs
cmps
pop
xchg
lea
int3
pop
shl
push
leave
mov
or
mov
pop
pop
ins
mov
or
xchg
pop
cmp
mov
and
stos
mov
xor
fsub
(bad)
stos
and
shr
pop
pop
push
int3
cdq
adc
dec
cs
mov
and
fwait
adc
mov
jbe
and
mov
lea
dec
pop
retf
xor
(bad)
cmc
pop
retf
and
outs
add
std
sbb
dec
(bad)
out
mov
pop
leave
push
test
pop
cwde
push
xor
push
cmps
retf
sub
fcom
dec
xor
dec
xlat
clc
imul
dec
push
pop
ret
pop
call
pop
mov
fadd
ds
int3
or
(bad)
cs
fiadd
ds
sahf
retf
mov
stos
test
addr16
jp
mov
movs
retf
mov
xlat
retf
adc
pop
inc
pop
aad
(bad)
mov
mov
fild
test
cmps
sub
mov
call
push
cwde
ficomp
fisttp
call
shl
and
mov
dec
stc
jge
js
test
mov
inc
jg
std
mov
pop
jns
idiv
inc
icebp
fwait
sbb
fmul
mov
lods
jl
pop
dec
cmp
rcr
scas
sti
lea
and
mov
(bad)
stos
pop
jl
dec
cwde
test
inc
movs
mov
cwde
call
pushf
fisttp
lods
cmp
xlat
push
pop
inc
fstp
push
sbb
out
nop
cmp
lods
stos
les
pop
jmp
pusha
test
sub
inc
(bad)
(bad)
xchg
arpl
sbb
pusha
fs
jbe
(bad)
rol
inc
push
pop
outs
inc
push
jmp
dec
sub
mov
aam
mov
or
adc
mov
push
jbe
stos
push
call
sahf
ret
imul
shl
jp
adc
or
fdivrp
in
push
pop
daa
mov
call
mov
jge
nop
cmp
xlat
lock
fcom
(bad)
sar
shl
fisttp
lods
lahf
cmps
ss
pop
sub
arpl
enter
mov
xlat
addr16
fstp
mov
push
daa
(bad)
lahf
icebp
mov
pop
jp
ret
mov
sub
pop
ret
pop
mov
stos
sti
pop
pop
out
pop
retf
mov
push
push
inc
gs
nop
jge
xchg
cmps
sbb
or
adc
xchg
fstp
push
xor
(bad)
retf
inc
adc
rcl
mov
adc
xchg
clc
xchg
cmc
mov
and
jae
adc
arpl
ds
xchg
addr16
sar
xor
inc
adc
pushf
push
dec
lods
mov
stos
fwait
pop
nop
call
pushf
push
in
push
jp
cli
loop
es
adc
nop
jnp
sbb
je
fistp
rcr
int
jp
push
cmps
icebp
cmp
mov
test
adc
retf
xchg
mov
mov
repz
pop
sub
adc
push
fcmovbe
inc
push
cmps
or
dec
mov
xchg
lock
in
xor
and
cmps
addr16
and
test
sbb
xchg
mov
bound
mov
loope
jmp
imul
sub
icebp
adc
rol
inc
cmps
push
fwait
cmps
cmp
mov
rcr
ret
xlat
ret
(bad)
xlat
arpl
adc
das
inc
jl
and
iret
jae
jae
mov
sti
jae
(bad)
mov
mov
ret
sbb
int
mov
jecxz
xchg
loopne
mov
adc
ficom
js
inc
pop
xchg
cmp
jg
pop
or
jl
pop
lds
mov
mov
inc
fwait
mov
(bad)
mov
fwait
mov
jne
addr16
push
retf
cmc
fbld
sbb
or
pop
dec
sub
mov
mov
clc
stos
ss
pop
retf
aam
adc
sub
pop
and
scas
mov
out
jecxz
aaa
cmp
pop
retf
stos
push
addr16
repnz
in
rcl
add
mov
adc
rcr
retf
pop
arpl
iret
repnz
shl
pop
lods
push
jl
rol
ror
movs
inc
mov
ins
test
dec
fild
in
jns
aad
mov
fwait
pop
adc
test
shl
lahf
fisub
pop
or
or
push
fcomip
and
jmp
test
rol
push
stos
(bad)
fucomi
xchg
xor
mov
dec
mov
push
xchg
in
lock
adc
sub
out
jmp
xor
dec
mov
add
pushf
fwait
sbb
pop
dec
or
xor
pop
or
fistp
mov
xchg
sahf
and
pop
stc
wrmsr
jl
sbb
lods
aas
xor
and
and
cmp
adc
push
sbb
pop
pop
jmp
or
inc
push
lahf
mov
bound
push
jo
pop
loop
pop
aam
out
cs
or
hlt
cmp
and
or
push
or
pop
fadd
cmp
cmp
fiadd
call
cmp
dec
lea
cwde
xchg
sbb
xchg
or
sbb
mov
pop
xchg
shl
or
sti
pop
mov
inc
aam
imul
xor
int
(bad)
add
mov
xchg
mov
add
cmps
adc
add
inc
xchg
das
lahf
inc
mov
xchg
and
arpl
sub
icebp
jecxz
repnz
jmp
sub
jecxz
pusha
das
mov
add
pop
and
inc
ins
daa
push
mov
dec
and
pushf
mov
in
dec
xor
dec
fdiv
fcom
inc
test
aad
int3
jle
cwde
or
jne
stos
sar
(bad)
mov
rcr
fldcw
aad
cmp
fnstcw
inc
movs
das
imul
ret
das
call
push
push
retf
pushf
push
sub
xchg
mov
dec
cmp
stc
pushf
xor
mov
dec
out
pushf
stos
mov
aad
fsubr
stos
out
loopne
add
sar
retf
inc
fistp
mov
fcom
jp
(bad)
dec
mov
push
dec
mov
retf
dec
pop
sub
(bad)
jecxz
nop
add
adc
pop
or
pop
fs
aam
xchg
fcmove
stc
loopne
loope
loop
cmps
arpl
fidivr
push
sbb
inc
dec
mov
mov
jb
aam
arpl
mov
rcr
inc
into
pop
xchg
clc
push
sbb
aam
sti
mov
in
or
in
(bad)
js
daa
pushf
fstp
add
xchg
fwait
into
jmp
mov
jp
loope
lock
(bad)
dec
punpckhwd
ins
sbb
icebp
push
icebp
inc
call
add
in
outs
cmp
sbb
ja
enter
mov
out
adc
idiv
dec
pop
lods
add
sbb
mov
ins
shr
dec
pop
les
push
adc
cmp
adc
in
pop
sub
sub
shl
cdq
sub
jnp
mov
cmp
add
(bad)
mov
nop
cmp
test
push
xchg
ja
sub
xchg
mov
pop
test
rol
pop
neg
push
loopne
sub
call
fs
jg
sbb
shr
mov
pop
adc
sub
sub
ffree
push
rol
pop
adc
cmp
xor
movntq
std
pusha
(bad)
test
and
stos
out
cmp
retf
fistp
retf
cld
cwde
fidivr
shl
icebp
and
push
push
xchg
xchg
mov
jl
dec
sbb
mov
imul
aas
arpl
adc
hlt
sbb
mov
add
adc
xlat
adc
sub
xor
mov
adc
pop
pop
xor
mov
call
jb
xor
jb
out
inc
dec
ja
stos
out
or
push
std
jg
xor
inc
ror
push
rcr
cmp
pop
cmc
rcr
jne
dec
pop
and
fist
out
shl
out
jle
fwait
test
sbb
push
cld
inc
aam
hlt
rcr
mov
push
add
push
sub
add
test
cmp
mov
leave
mov
fwait
inc
jmp
repnz
sahf
ins
imul
adc
xlat
je
fptan
cmps
mov
pop
dec
fidivr
retf
(bad)
dec
sub
pop
je
cmp
jecxz
scas
push
fwait
pop
cld
mov
leave
mov
or
pusha
push
sti
xchg
pop
pop
xchg
xchg
fisttp
clc
cmps
jmp
fist
loop
mov
pusha
push
fist
lods
cli
xchg
fcom
sar
mov
lods
arpl
xor
mov
push
inc
jmp
aam
mov
inc
push
in
call
out
imul
add
in
add
sub
sbb
loop
stos
mov
ss
push
pop
jmp
les
lock
fst
mov
test
stos
fcomp
dec
sbb
pop
sbb
pusha
adc
in
add
mul
pop
(bad)
cld
pop
cmp
pop
pop
(bad)
xchg
sbb
or
jnp
mov
or
sub
stos
out
pop
push
pop
lds
test
in
add
test
mov
sbb
icebp
push
gs
mov
ret
pop
shl
mov
and
push
push
pusha
scas
pop
and
sub
ds
jo
mov
and
mov
ja
add
push
jns
jecxz
ja
aas
enter
nop
jb
bnd
(bad)
jns
out
aad
hlt
push
aad
retf
sbb
ins
imul
dec
xchg
fidivr
jge
mov
subps
pop
sub
stos
xor
ins
inc
mov
add
(bad)
cmp
mov
push
add
iret
adc
stc
cld
inc
sub
(bad)
lock
test
in
sbb
xchg
xchg
xor
xchg
xchg
pushf
sbb
sub
or
sub
dec
cmps
out
daa
cmp
nop
dec
test
pcmpeqd
xchg
dec
sbb
or
or
das
xchg
and
xchg
in
mov
pop
ja
mov
ss
mov
aam
frstor
std
mov
popa
cmp
pop
pushf
sbb
sbb
aam
in
loop
and
jbe
scas
call
scas
test
shl
div
jecxz
adc
icebp
aas
xor
cmp
mov
(bad)
sahf
leave
push
or
sub
loopne
bound
lods
mov
dec
inc
cmova
mov
jnp
out
ds
icebp
pusha
inc
fwait
pop
dec
mov
cs
sub
ds
inc
in
mov
pushf
jmp
xchg
push
adc
lock
xchg
push
stos
arpl
xchg
aas
mov
xor
enter
arpl
cmps
cmc
push
or
dec
inc
shl
sbb
popf
or
rol
push
shl
rcl
add
aad
bound
into
mov
aaa
cmp
movs
scas
xchg
stos
test
cmp
cwde
mov
cmp
push
mov
cmp
mov
cmp
aaa
fwait
test
sub
lods
fwait
cmp
pushf
retf
jge
sbb
std
xchg
pop
sub
dec
cmp
pop
fild
add
jmp
inc
cmp
out
(bad)
std
shl
into
cmp
xchg
mov
xorps
sub
cmp
mov
retf
pushf
push
xchg
fiadd
test
popa
pop
sub
movs
lahf
mov
retf
xor
sbb
and
fs
add
pop
adc
push
outs
mov
es
xor
jg
cli
add
(bad)
aad
mov
mov
aas
stc
or
stos
or
mov
repnz
sub
test
inc
mov
add
aas
jp
out
cmps
xor
retf
int
cmp
ins
xchg
retf
pop
lock
pushf
movs
nop
sbb
cwde
sti
lods
dec
lods
sti
push
pop
aam
pop
jnp
cdq
or
inc
js
sub
push
push
jecxz
daa
pop
stos
inc
sti
sub
dec
jmp
mov
pusha
xor
sbb
nop
inc
call
push
push
and
sbb
adc
inc
push
mov
xor
inc
xlat
cs
mov
pop
std
lods
enter
inc
pop
adc
imul
xchg
or
adc
xor
shr
sub
pop
cmc
mov
sub
xchg
rcr
xchg
pop
(bad)
cwde
aam
add
inc
inc
adc
jl
(bad)
fistp
mov
xchg
fwait
pop
xchg
iret
inc
push
outs
dec
or
iret
mov
and
xchg
pop
xchg
adc
pop
pusha
xchg
test
push
ins
and
mov
leave
out
xchg
movs
sub
test
cmps
icebp
pop
and
mov
out
push
ins
sub
and
imul
mov
(bad)
(bad)
fist
sub
scas
popa
jl
cmp
cli
pop
and
ja
lea
in
mov
and
fldenv
add
or
loopne
dec
lods
pop
add
stos
cdq
shr
mov
jmp
mov
xchg
xor
loope
pop
pop
popf
sbb
ror
shr
into
ins
sub
fld
add
adc
sar
shl
or
mov
add
jo
ds
xchg
push
mov
mov
jns
lock
cwde
pop
push
or
mov
sub
inc
pop
movs
nop
mov
jae
inc
xor
out
dec
jne
fisubr
sbb
dec
call
sbb
pop
lods
mov
adc
jmp
fbld
icebp
sbb
mov
xchg
jnp
cmp
aas
dec
fmul
push
retf
mov
xchg
xchg
cmp
sub
icebp
(bad)
(bad)
fist
and
pop
in
adc
add
int3
xchg
mov
fild
jge
gs
fld
pushf
orps
sbb
xor
xlat
call
fbstp
adc
xchg
push
dec
push
mov
inc
inc
mov
mov
dec
aam
inc
lea
or
test
sub
in
jnp
mov
daa
adc
mov
vunpckhpd
jp
adc
in
(bad)
ins
cmp
repz
cs
and
adc
pop
sbb
rep
add
vunpckhps
and
test
scas
dec
xor
sti
out
and
sub
clc
pop
add
(bad)
push
and
sbb
xchg
aas
daa
jns
mov
test
je
add
inc
pop
sahf
(bad)
jmp
add
je
pop
push
dec
rcl
cmp
mov
test
pusha
outs
loopne
not
jl
push
xor
not
loop
es
pop
nop
cmps
mov
addr16
xchg
mov
gs
sbb
(bad)
push
(bad)
stc
fldcw
sbb
in
pop
stos
add
xchg
mov
or
cmp
test
mov
jbe
cmp
add
add
pop
xor
fiadd
std
or
fdiv
inc
adc
cmps
arpl
icebp
push
mov
sub
push
nop
inc
push
sub
or
std
dec
(bad)
xchg
sub
sub
mov
pushf
jbe
popf
mov
or
cmp
lods
loop
xor
and
test
adc
popf
pop
aad
mov
sub
rcr
cmp
pop
push
lock
fistp
out
dec
xchg
stos
cmp
fisubr
pop
fcmovu
mov
fst
mov
and
inc
ficomp
imul
(bad)
into
std
movs
(bad)
clc
mov
retf
inc
dec
test
lods
sbb
aad
pop
sbb
mov
jno
sbb
xrelease
and
push
push
mov
sub
aas
fcmove
sbb
ret
(bad)
(bad)
and
add
cmc
cdq
call
fisub
leave
sub
dec
sub
nop
(bad)
(bad)
xchg
pop
mov
retf
cld
push
into
daa
clc
mov
and
adc
cld
fild
cmp
pop
dec
fsub
push
call
push
cmps
pop
pop
repz
xchg
or
outs
push
add
pop
loope
in
jecxz
push
push
mov
pop
dec
(bad)
cmp
xor
inc
fadd
cmp
xor
jmp
test
jne
cmp
xor
xchg
les
sub
or
fcom
xchg
xchg
jmp
cmp
and
pop
or
xor
jb
sbb
sar
sbb
mov
pop
sahf
cld
jp
pop
out
xlat
cmc
push
inc
sbb
mov
push
xor
stos
sbb
ror
fstp
or
out
int3
mov
test
cmps
xor
pop
jmp
or
sbb
jns
pop
sbb
mov
sub
add
pop
or
sub
(bad)
fidivr
fld
jge
xchg
fadd
rcr
gs
pop
mov
jae
ret
mov
outs
ficomp
mov
ficom
pusha
retf
jmp
mov
addr16
fnsave
sub
sti
xlat
mov
loop
push
xor
mov
jmp
and
dec
xchg
fidivr
clc
fisubr
jno
fwait
pop
je
bound
rcr
cmp
fmul
mov
and
sbb
jmp
cmp
pop
xchg
movs
mov
sbb
fidivr
ds
fsub
fucomp
fcmovb
or
fld
fs
pushf
stc
push
pop
sbb
das
jmp
jle
mov
fsubrp
fcmovbe
sub
fimul
dec
cmp
iret
fisubr
ret
shl
push
aad
inc
(bad)
sahf
cwde
xchg
push
jl
js
adc
icebp
xor
aad
outs
and
push
push
ins
aaa
inc
retf
fisub
outs
fsubr
inc
popf
pop
rol
(bad)
sar
dec
int3
jmp
ret
jl
imul
pop
(bad)
xchg
in
or
sub
xlat
inc
dec
pop
cmps
jp
jb
xor
les
mov
adc
mov
in
call
stos
or
dec
loope
frstor
sbb
push
(bad)
mov
adc
sti
pop
sbb
retf
mov
or
fld
rcr
mov
pop
lahf
mov
aad
mov
mov
or
(bad)
rcl
push
retf
inc
pop
pop
cld
rol
push
xchg
pop
mov
jnp
inc
shl
pop
add
dec
fsubr
cmps
call
sbb
push
rcl
rol
pop
bound
mov
sbb
(bad)
sub
pop
sub
xchg
mov
bswap
jns
ss
xlat
leave
call
push
sbb
push
aas
sbb
ins
jno
sbb
jmp
cmp
xor
mov
ss
adc
js
push
pop
mov
pop
mov
mov
dec
xchg
rcr
je
and
rol
jns
imul
pop
in
push
nop
adc
pop
stos
pop
inc
sti
dec
xor
xor
in
ss
shl
js
add
fidiv
mov
push
xchg
xchg
rcr
or
cmp
nop
dec
inc
aam
mov
fstp
pop
fwait
mov
int3
pop
cli
retf
push
popf
mov
sbb
sbb
mov
push
pop
xchg
mov
jne
jmp
xor
sbb
push
push
retf
sbb
retf
ret
popf
popa
adc
fnstcw
cmp
lock
pop
xor
cmp
js
leave
jmp
mov
cmp
pop
in
enter
cmp
popf
ds
std
pop
rcl
cmp
bound
jecxz
stc
std
and
ror
add
pop
fld
and
add
xchg
stos
popf
ficomp
(bad)
sbb
pop
mov
std
faddp
jb
fisubr
mov
dec
aaa
cmp
pop
je
pop
mov
jmp
xor
and
inc
fidivr
loop
dec
dec
aas
sub
shr
lahf
or
inc
ss
xor
les
cs
push
xor
pop
adc
std
adc
pop
mov
retf
pop
jmp
call
or
popa
cmp
std
jnp
push
loop
and
mov
or
lea
cmp
(bad)
call
and
nop
mov
add
jp
loope
imul
fs
loop
pop
or
xor
push
lods
rcr
push
mov
cmps
ret
push
(bad)
icebp
inc
mov
sbb
std
ret
stos
test
(bad)
test
stos
test
(bad)
mov
xchg
test
(bad)
loop
ja
shr
xchg
dec
fadd
jo
into
cmc
sbb
rcr
fldcw
aaa
mov
iret
rol
cwde
shr
sahf
rol
pop
sub
shl
xor
sbb
or
jmp
not
cmp
rcr
retf
fcomi
mov
push
fcomp
or
mov
bnd
sub
rcr
inc
pop
or
xor
pop
pusha
and
in
(bad)
or
adc
shl
adc
xor
pop
jecxz
imul
mov
into
mov
fidivr
inc
sbb
iret
cwde
cmp
xchg
sar
xor
pop
std
pop
fs
push
(bad)
fwait
xchg
xchg
jmp
sbb
stos
add
pop
pop
push
idiv
pop
sbb
stc
jbe
push
mov
fwait
into
movs
or
rcl
sbb
fild
rcr
stc
add
fdecstp
cli
mov
iret
sar
out
mov
push
inc
aad
push
xchg
mov
xchg
xchg
call
add
les
rcr
call
xchg
(bad)
push
jno
stc
stc
xor
shl
sbb
inc
imul
stos
jne
pushf
adc
retf
aad
cmp
hlt
dec
xor
rcr
push
sbb
inc
sub
mov
xchg
inc
and
out
movs
mov
sub
shl
(bad)
scas
call
fisub
rcr
cmp
mov
adc
jmp
or
nop
cmp
(bad)
rcr
fs
mov
out
ficom
mov
pop
shr
mov
mov
sub
rcl
jl
mov
dec
mov
shl
pop
push
ds
(bad)
mov
shr
dec
fisub
fidiv
cdq
adc
xchg
shr
mov
fdivr
sbb
mov
fld
(bad)
adc
pop
xor
retf
int3
sbb
cmc
xor
movs
xchg
cld
and
ror
(bad)
push
push
call
cmp
fcom
fs
or
shl
pop
aaa
fnstenv
jecxz
cmp
cmp
xlat
pop
neg
sbb
mov
aam
or
pop
pop
sbb
xor
cmps
sti
std
mov
fidivr
movs
test
mov
xchg
fcom
loope
sub
sub
cmp
mov
adc
mov
fdiv
push
imul
xchg
rcr
retf
cmp
jmp
hlt
sbb
push
mov
fmul
cmp
inc
mov
nop
jl
int
push
add
fist
push
push
jp
mov
fcom
xchg
push
imul
ret
out
fsub
pop
cli
fndisi(8087
ds
fist
cmp
xchg
jp
or
mov
stos
and
or
jb
xchg
fadd
jecxz
jge
lock
test
mov
pusha
inc
fimul
pushf
jp
ficomp
dec
aad
test
test
pop
imul
rol
cld
sbb
pop
push
fld
shr
lods
cmps
pop
popa
repnz
(bad)
repnz
fsubr
out
mov
jl
fsub
xchg
in
mov
int
xchg
or
inc
sub
push
lods
imul
cld
mov
inc
fisubr
push
mov
stc
aam
pop
ficomp
xor
jg
cmp
(bad)
cli
into
mov
sar
call
stos
ficomp
scas
sti
xchg
add
shl
fisubr
jns
sub
aad
jle
call
in
rcl
out
xor
fimul
test
call
shl
fiadd
sbb
jne
jne
inc
adc
sbb
test
fdivr
js
test
pop
fist
sbb
add
mov
sar
sub
xchg
lock
nop
shr
sahf
aam
out
push
mov
lahf
in
cmp
aad
test
mov
push
scas
stos
pop
mov
push
shl
adc
into
push
xchg
(bad)
shr
jmp
mov
les
movs
jmp
sbb
hlt
ds
or
and
xchg
inc
arpl
push
fdiv
push
movs
sub
outs
cli
dec
fcom
fisub
fdivr
int3
arpl
inc
mov
dec
jmp
aam
or
fist
ins
test
out
inc
inc
(bad)
sbb
cmp
fcomp
push
nop
pop
inc
jge
adc
ins
mov
daa
aad
js
jo
aam
cmp
xchg
jmp
fs
mov
pop
pop
(bad)
mov
sbb
pop
jb
add
mov
imul
shr
xchg
inc
push
movs
sub
or
adc
pop
sbb
pushf
fs
jmp
lods
fcomp
cdq
mov
js
fdivp
retf
jmp
sar
mov
pop
call
fst
fidiv
cmp
xor
pop
stc
lahf
fimul
xchg
xor
pop
mov
dec
mov
aaa
xchg
jmp
mov
stc
mov
cmp
hlt
mov
stc
push
fcom
pop
push
fimul
and
cli
sbb
mov
(bad)
loopne
lds
fcom
inc
fisub
addr16
push
or
jbe
dec
and
shr
dec
sub
jl
ficomp
cmp
in
cli
push
repnz
sbb
cmc
mov
in
and
mov
out
scas
rcr
loope
fstp
cmp
fsub
push
mov
pop
xchg
and
arpl
bound
jle
fidiv
fadd
mov
retf
repz
mov
mov
lahf
xchg
ins
(bad)
pop
lea
pop
sbb
frstor
pop
(bad)
pop
jmp
inc
scas
fdiv
sub
sbb
mov
jmp
cwde
pop
dec
fiadd
push
dec
(bad)
dec
pop
in
clc
movs
sub
fdiv
sbb
loop
cli
pop
jmp
popa
neg
cld
mov
(bad)
sbb
pop
fild
mov
jle
jmp
mov
(bad)
jg
ds
or
rcl
std
shr
cmp
out
sbb
mov
fcom
xor
mov
shr
pop
pushf
push
(bad)
push
and
retf
fstp
mov
cs
push
lods
shr
jno
pop
push
pop
adc
xchg
repnz
rcr
and
(bad)
call
(bad)
or
dec
js
lahf
out
jnp
jo
ficomp
add
call
xor
nop
sbb
adc
mov
fidivr
jmp
push
jmp
call
xchg
pop
pop
and
jg
ds
aad
and
mov
(bad)
fcomp
fnstcw
js
sub
mov
call
pop
(bad)
cwde
xchg
add
and
mov
cmp
xchg
add
fdivr
sti
pop
enter
jl
shl
pop
add
pop
mov
test
jmp
inc
jmp
aam
sbb
or
pusha
fcomp
out
pop
or
mov
fcom
jnp
sbb
xor
enter
xor
adc
adc
outs
nop
loope
mov
in
ficomp
imul
out
fadd
stc
jg
jo
jb
in
retf
mov
mov
sub
pop
test
mov
ficom
aad
mov
in
fiadd
mov
fdiv
push
pop
in
ja
pop
leave
sub
(bad)
or
mov
inc
xchg
push
jp
stc
cmp
cld
loopne
cmp
fcom
cmps
rcr
and
push
in
dec
das
pop
fcom
inc
or
mov
pop
add
pop
inc
shl
mov
lods
dec
jbe
mov
push
(bad)
hlt
fsub
fstp
rol
push
dec
rcr
arpl
out
cmps
fdiv
sbb
fisub
or
out
dec
cmp
(bad)
cmp
push
fmul
dec
out
push
mov
stc
jb
shl
and
mov
push
fcom
sbb
jecxz
(bad)
cwde
stos
popa
fadd
dec
cmps
fcom
dec
out
ficomp
fistp
push
push
push
sar
rol
xor
push
cmp
repz
add
fcomp
dec
mov
fdecstp
adc
pop
ret
dec
imul
loope
push
xlat
pop
dec
sbb
sub
loop
push
cmp
inc
lock
mov
adc
fstp
into
add
mov
push
mov
or
call
stos
push
outs
cli
ja
push
out
test
jle
mov
jne
xor
retf
lea
movs
cmp
adc
rol
or
into
sbb
sub
leave
or
cmp
(bad)
inc
out
xor
inc
fisub
mov
pop
jns
pop
inc
daa
sub
push
mov
fdivr
fisubr
aas
xor
rcl
or
fmul
cli
add
in
dec
xchg
fcmovbe
cmps
pop
retf
pushf
sub
ins
pop
xchg
test
pushf
sub
xor
push
in
xlat
xor
add
es
bound
dec
lock
or
test
add
xlat
cwde
sbb
loopne
int
les
xchg
lods
fst
ficom
not
sbb
(bad)
lods
mov
data16
inc
jb
(bad)
adc
aad
pop
ins
pop
xchg
ss
push
and
pop
pop
test
cmp
into
aaa
fnstenv
lock
xchg
lea
(bad)
stos
jmp
aad
pop
sahf
js
jp
inc
aam
jbe
push
sbb
adc
shl
and
stos
and
daa
mov
outs
fstp
inc
shl
ins
sbb
sbb
mov
stos
daa
xchg
gs
xchg
mov
mov
mov
dec
mov
add
outs
daa
fdivp
mov
(bad)
fnstsw
lods
mov
mov
out
xor
push
adc
adc
iret
dec
xchg
stos
add
nop
mov
pop
ret
sbb
fist
push
and
cmp
push
rcr
sbb
cmp
mov
ret
mov
jo
jb
push
pop
lods
jecxz
cdq
cmp
fist
jge
push
mov
mov
cmp
(bad)
xchg
jmp
xchg
movs
gs
add
loope
stos
jg
push
in
cmp
cld
inc
jns
retf
in
push
out
aaa
lahf
xor
sbb
ja
data16
push
jp
pushf
pop
cli
mov
fbld
mov
nop
fild
ins
pop
dec
mov
mov
mov
jmp
pop
mov
js
js
xchg
mov
sahf
push
cmp
les
xchg
call
inc
add
loop
fcomp
ret
or
(bad)
repnz
jmp
cs
mov
jl
mov
mov
jp
movs
nop
mov
ins
mov
mov
cld
pop
jmp
pop
sbb
dec
inc
arpl
bound
js
jp
dec
sbb
mov
xor
jl
push
popa
mov
sbb
mov
and
cld
push
mov
fwait
cs
out
movs
pop
ds
fst
jns
xor
xchg
or
arpl
lahf
ret
dec
xchg
aam
fidivr
aas
cmp
xchg
ficom
popf
arpl
mov
xchg
lock
sbb
push
in
mov
gs
lods
sub
dec
retf
add
div
dec
cmp
sar
push
push
aaa
cmp
push
cmp
cmp
nop
mov
mov
and
mov
lock
cmp
xchg
adc
push
mov
or
sbb
jecxz
jb
retf
in
and
pop
jmp
retf
nop
popf
sahf
loopne
loope
sbb
cmp
cdq
test
or
add
(bad)
fmul
pop
mov
pushf
addr16
test
fstp
push
push
and
jp
dec
in
push
pop
cmp
mov
cmp
pop
jae
xchg
push
sub
ror
dec
in
fcom
nop
xchg
sti
pop
sub
pop
gs
xchg
jmp
cwde
loop
adc
aas
int3
add
div
push
jns
mov
div
ffreep
mov
(bad)
adc
adc
fcom
jbe
mov
cli
add
enter
sub
std
mov
sbb
aam
call
call
pop
not
repnz
fidivr
cli
push
hlt
and
hlt
idiv
pop
rcr
sti
jp
xchg
retf
mov
fsubrp
fisub
lock
mov
xchg
test
xlat
jmp
aam
cmps
pop
aad
xchg
mov
jp
sti
enter
jge
jnp
repz
add
mov
sbb
leave
cli
or
pop
adc
scas
sub
push
pop
ficom
sbb
xchg
mov
mov
out
ins
es
mov
xor
mov
iret
mov
call
push
pop
mov
jmp
dec
sub
push
xor
sbb
mov
jp
jge
push
or
out
stos
ja
push
cmp
mov
mov
nop
sbb
mov
sti
and
push
jnp
pop
(bad)
loop
xlat
xor
sbb
mov
cmp
cmp
ror
push
gs
popf
pop
cmps
cs
pop
aas
jp
cmp
xchg
push
xchg
pop
push
call
push
pop
push
or
cmp
jmp
dec
jns
pop
imul
aad
mov
push
cmp
jle
movs
cmp
dec
or
mov
sbb
les
mov
aad
mov
cmp
pop
es
fstp
clc
aad
jne
stos
adc
pop
mov
jge
push
pop
push
or
sub
sbb
inc
into
lea
out
or
sub
and
outs
xlat
push
int
popf
cmp
inc
sbb
js
cmp
pop
sub
imul
add
pop
dec
lods
aam
push
popa
dec
std
adc
es
out
clc
lods
fistp
xlat
test
sub
stc
arpl
xor
or
adc
and
outs
push
jl
outs
fist
sub
fistp
jp
hlt
fbld
rol
jmp
or
mov
aas
outs
xor
sbb
(bad)
xor
adc
mov
mov
retf
scas
fistp
xchg
ss
jbe
fcmove
mov
fisub
fbld
jnp
(bad)
sub
ror
jnp
fisttp
rcr
inc
shl
jp
fild
popf
add
adc
or
jge
outs
(bad)
aam
mov
fs
pop
pushf
xchg
push
xchg
retf
shl
stos
ret
aad
add
mov
ret
rol
call
dec
shl
repz
adc
ds
pop
xor
xlat
pop
mov
dec
into
cld
mov
call
mov
daa
or
dec
jmp
inc
cli
ficom
add
mov
push
out
mov
jle
mov
idiv
jecxz
xchg
stos
gs
mov
sub
loope
loopne
outs
call
adc
stos
cwde
sub
sub
ins
mov
xchg
cs
loop
cmp
stc
fcmovnb
xchg
sub
stos
fistp
dec
cmps
rol
cld
mov
mov
add
iret
aad
fidivr
ret
addr16
pop
mov
inc
adc
xor
(bad)
dec
data16
jmp
pop
adc
lea
clc
xchg
mov
mov
lahf
retf
mov
(bad)
pop
test
aad
test
or
cmp
mov
xchg
mov
nop
sub
mov
fild
sub
fidiv
fild
jmp
outs
aas
sti
xlat
lods
jge
inc
add
fild
js
xchg
icebp
pusha
mov
clc
std
ficom
fidiv
retf
or
sbb
cld
sub
ins
rcl
sbb
retf
xor
call
cmp
(bad)
aad
inc
xchg
les
mov
test
hlt
cld
call
sbb
mov
pop
js
retf
ror
sbb
fs
jp
pushf
out
call
push
jbe
nop
pop
(bad)
xor
fistp
mov
mov
sbb
lods
dec
jge
imul
fdiv
inc
cmp
pop
pop
mov
mov
or
retf
push
bound
fist
js
mov
mov
addr16
sbb
adc
mov
jecxz
pop
fist
movs
aad
cmp
fmul
adc
fstp
add
fisubr
push
dec
mov
mov
xchg
fadd
xchg
push
mov
ret
loope
cmp
dec
stos
outs
in
ficomp
stos
popf
cmp
mov
sbb
mov
out
mov
(bad)
push
mov
test
shl
(bad)
int3
aaa
fnstenv
mov
sub
mov
rol
pop
cmp
(bad)
outs
dec
mov
jnp
jl
dec
(bad)
mov
test
lock
call
retf
outs
pop
mov
sub
shl
add
mov
sbb
enter
and
arpl
fbstp
stos
icebp
(bad)
mov
out
cmp
test
dec
ins
push
out
pop
cdq
jmp
gs
adc
fisub
push
ror
fcmovu
ja
addr16
out
push
sub
sub
enter
cmp
(bad)
mov
(bad)
pop
outs
cmp
mov
jmp
fdivr
jmp
sahf
aas
or
pop
aad
test
retf
mov
inc
leave
xchg
fsub
sahf
jmp
push
pop
lock
shl
xor
mov
icebp
ret
jmp
pop
sbb
xchg
call
add
retf
movs
cld
cmp
or
dec
pop
mov
xchg
inc
enter
sbb
or
or
dec
pop
(bad)
fdiv
push
pop
sub
xchg
hlt
sbb
aam
xchg
div
mov
dec
out
(bad)
push
or
push
pusha
sub
mov
in
jmp
jg
sar
lods
add
pop
adc
repz
cmp
mov
add
mov
fnstsw
sbb
call
fcom
adc
retf
iret
loop
shr
dec
jno
push
pop
sbb
cmc
cli
fist
call
push
sub
push
ins
std
pandn
shl
cdq
out
clc
fisub
push
mov
pushf
repz
test
push
shr
mov
stos
ins
out
fmulp
mov
arpl
imul
shl
movs
in
cmp
stos
or
fdivrp
jp
sub
or
fsubr
test
xchg
dec
les
fsub
ror
popf
aam
cs
jmp
mov
shl
scas
out
fidiv
push
cmp
fdivr
stc
sub
mov
icebp
sti
ror
les
mov
cmp
adc
sub
(bad)
adc
out
sbb
mov
addr16
int3
xchg
popa
aad
mov
call
fimul
push
mov
xor
push
pop
pop
jbe
mov
jmp
mov
enter
cmp
push
aaa
dec
jo
cmps
fsub
ret
add
mov
aad
sbb
mov
pushf
out
retf
or
push
fisub
retf
cmp
push
fsub
push
fimul
cmp
retf
inc
or
into
mov
jmp
pop
or
mov
pushf
call
cli
shl
xor
punpckhbw
rcl
dec
int
sbb
jmp
stos
sub
pop
sub
fdivr
mov
lods
or
push
xchg
and
sub
aam
pop
xor
sti
test
out
inc
cmps
fisubr
fild
clc
out
enter
push
(bad)
add
mov
adc
push
fdivr
test
mov
mov
lods
or
jecxz
pop
das
test
int
cmp
fs
outs
stc
imul
gs
sbb
call
fadd
fdiv
imul
push
f2xm1
mov
xlat
ins
nop
pushf
pop
pop
pop
mov
pushf
pop
test
pop
and
mov
fdivr
test
sub
sbb
xchg
lock
jmp
aad
dec
fisubr
jnp
push
or
mov
xlat
pop
js
push
inc
xlat
mov
jmp
jge
in
adc
popa
(bad)
xlat
imul
xchg
mov
mov
mov
ds
rcl
call
pop
and
pop
mov
fnstenv
sbb
retf
push
fistp
sub
xchg
cmp
push
xchg
add
xlat
cdq
ins
test
pushf
and
and
lahf
mov
shr
ss
jne
cmps
pop
or
(bad)
movs
jno
or
cmp
test
pop
fistp
js
adc
mov
and
xchg
cmps
fidivr
mov
(bad)
cmp
ficomp
pop
fidiv
mov
mov
adc
ret
dec
test
pop
mov
aam
pop
cmps
shl
aaa
mov
cmp
and
fbstp
(bad)
adc
or
xchg
or
and
or
cmp
mov
cmp
sbb
outs
retf
jne
jno
int
addr16
fcomp
dec
loop
into
addr16
fld
add
rol
rcr
stc
jmp
aam
sub
jmp
lods
call
mov
bound
jg
push
pop
cdq
aad
adc
mov
mov
stos
ror
ins
sub
push
es
mov
inc
mov
fistp
add
pushf
inc
aad
cmps
(bad)
push
repnz
mov
xor
stc
sub
gs
push
xor
fwait
neg
push
mul
mov
scas
xchg
popf
das
xor
(bad)
xchg
(bad)
pop
jne
mov
movs
es
(bad)
jbe
arpl
movs
xchg
rcl
aas
sti
neg
mov
outs
mov
pusha
mov
repz
mov
pop
stos
mov
jmp
pop
scas
pop
pop
outs
mov
shl
rcl
cmp
and
loope
aam
and
mov
xor
aad
arpl
shl
mov
cmps
xchg
out
jae
mov
icebp
sbb
dec
(bad)
xor
in
rcl
test
idiv
xchg
hlt
jno
retf
shr
adc
mov
jmp
pop
sbb
stc
inc
cmc
push
stos
xchg
cli
add
out
cmp
jmp
mov
inc
dec
push
popf
and
xchg
adc
adc
fiadd
retf
add
adc
adc
out
popa
ror
jmp
lods
pop
imul
sbb
sub
lods
push
mov
mov
push
pop
test
jecxz
jo
jnp
in
adc
sbb
adc
sbb
add
dec
mov
xor
fistp
nop
xchg
loop
push
xchg
or
push
mov
(bad)
fs
sub
das
mov
rcl
rcr
enter
inc
ror
mov
dec
popf
shl
bound
call
sbb
nop
mov
xchg
cdq
mov
test
xchg
test
shr
test
stos
aas
mov
push
sar
scas
mov
ins
imul
pushf
(bad)
mov
sub
pop
bnd
shr
pop
xor
test
adc
imul
ficomp
jnp
cmp
(bad)
push
pop
pop
popf
sbb
out
ins
push
dec
sub
sbb
lea
icebp
and
retf
test
ficomp
cmp
sbb
push
shl
xchg
inc
inc
pop
stc
xchg
idiv
push
sbb
arpl
fisubr
ror
xor
ror
nop
loope
call
pop
fist
cmps
shr
pop
mov
cmp
lods
cmp
adc
test
sub
cmp
nop
icebp
mov
jmp
xor
pop
sti
sub
push
mov
mov
add
sar
mov
mov
xor
xchg
mov
sar
cli
sbb
cmp
and
pop
pop
mov
mov
aaa
and
call
jnp
out
sub
and
outs
fistp
idiv
pop
pop
ss
fcomi
pop
rcl
dec
fdiv
sbb
popa
and
adc
mov
mov
js
loop
fstp
sbb
mov
fdivr
mov
xchg
mov
xchg
xchg
ret
movs
or
mov
xchg
fmul
adc
dec
pop
bound
push
ror
pop
xchg
cmp
mov
pop
icebp
test
psrlq
xchg
loope
push
or
mov
int
addr16
lea
push
pop
jp
in
cmp
popa
fdivr
fdivr
pop
sbb
jae
mov
in
mov
push
sbb
retf
mov
and
imul
push
adc
cmc
jnp
sub
inc
call
fcomp
cmp
or
pop
fs
(bad)
cmps
bswap
es
cmp
pop
fwait
ss
ins
pop
(bad)
ins
jp
sub
mov
stos
aam
xor
fadd
xor
bound
leave
pop
cmp
pop
add
or
popf
bswap
fistp
sbb
dec
retf
call
std
xchg
std
sub
addr16
xor
and
js
adc
mov
sub
popf
aas
mov
or
lea
dec
push
pop
test
mov
in
xchg
dec
or
aas
int3
cmp
rcr
into
xor
cmp
and
or
jnp
fiadd
add
pop
pop
gs
test
pop
jns
scas
dec
jp
std
addr16
sti
fimul
pop
popf
or
mov
mov
sbb
pushf
jbe
call
cmps
in
pushf
cdq
call
mov
pop
in
xor
mov
cmc
push
or
lods
xchg
add
clc
push
cmp
cmp
shl
cmp
pop
cmp
mov
enter
std
push
jl
jbe
out
cmp
pop
popf
cmps
repnz
jmp
xchg
cmp
ret
nop
fiadd
lea
stc
pop
arpl
aas
movs
or
push
fnsetpm(287
lods
or
bound
add
fwait
pop
adc
xor
retf
push
xor
mov
mov
xchg
xchg
xor
jge
into
xchg
jle
pushf
outs
arpl
(bad)
(bad)
cmp
aam
sbb
test
sti
pop
push
lea
sahf
ror
call
call
and
mov
mov
xor
call
test
(bad)
fist
sbb
pop
fabs
mov
mov
jmp
cmp
stos
loopne
xchg
sub
pop
dec
mov
adc
mov
leave
inc
jno
retf
icebp
jg
and
mov
cmp
jge
rcl
sbb
xor
fld
sbb
dec
loope
jmp
add
pop
daa
dec
clc
mov
dec
stos
mov
push
in
fnstcw
call
mov
pop
lods
pop
out
cli
mov
jmp
sub
mov
scas
cmp
enter
in
adc
cmp
xchg
xchg
fiadd
pop
std
sub
mov
fild
sub
clc
aas
mov
inc
sub
sub
jle
sub
push
pop
cmp
pushf
mov
push
xchg
pop
cwde
stc
retf
sbb
mov
push
aad
cld
pop
pop
add
retf
call
jnp
ffree
mov
mov
out
pop
loop
sar
push
pop
push
jg
les
adc
popa
dec
retf
jne
call
jp
cmps
pop
imul
(bad)
push
movs
(bad)
aad
inc
push
add
mov
cld
pop
jmp
addr16
jmp
push
(bad)
pop
pop
lock
dec
cmc
mov
inc
jmp
xor
sbb
sbb
mov
cdq
sub
retf
retf
lock
es
adc
pop
dec
pop
not
int
lea
fwait
lods
sti
mov
jmp
mov
push
clc
sbb
mov
pop
dec
dec
xor
test
aam
push
push
push
cli
movs
push
push
sub
jbe
dec
mov
into
cmp
mov
jmp
cmps
mov
cmp
push
in
(bad)
cmp
fld
sub
ja
inc
retf
push
fiadd
fisttp
pushf
scas
std
in
lahf
jns
and
lods
push
ds
jnp
enter
adc
repz
pop
dec
push
cmp
adc
sbb
and
fsubr
mov
mov
fnsave
retf
cmp
and
(bad)
stc
(bad)
mov
aam
jg
imul
mov
jp
pop
call
ficom
retf
(bad)
cli
fiadd
fs
repnz
stc
push
sbb
add
stc
rcr
icebp
repz
sub
sbb
sbb
xor
popf
fldlg2
add
xchg
ficomp
mov
jg
sub
sbb
mov
enter
fist
mov
fcomp
jne
pop
or
aad
test
mov
jg
sbb
call
shr
sbb
pushf
pop
cmp
ds
and
dec
xchg
nop
(bad)
cld
scas
fidiv
pop
(bad)
cs
mov
call
jmp
popf
rcr
call
ja
or
stc
rol
pop
jno
(bad)
push
(bad)
shl
cmp
movs
fnstsw
mov
sbb
adc
movs
mov
jnp
ret
retf
loope
mov
jp
mov
out
arpl
test
inc
stc
test
fistp
hlt
inc
btc
push
fisubr
mov
pushf
aas
bound
push
mov
adc
aam
sbb
in
stc
mov
sub
mov
pop
sbb
(bad)
sahf
or
sbb
mov
gs
rcl
loopne
shl
inc
aad
sub
cli
out
cmp
fsubrp
je
fidivr
xchg
mov
mov
cmps
fsub
xchg
sub
dec
mov
(bad)
mov
add
mov
mov
inc
lds
lds
aas
sahf
in
fst
fstp
mov
sub
push
stc
sahf
jl
dec
fistp
stos
push
(bad)
ficomp
pop
rcr
cmp
fmul
fisubr
jo
xchg
fsubr
sahf
in
cwde
sbb
icebp
mov
cwde
fdivr
or
or
test
fisub
aas
or
(bad)
enter
shl
fisubr
cld
fistp
adc
sbb
sub
aam
loop
(bad)
pop
shl
fisubr
ja
in
pop
fcmovnb
cmp
pop
call
sub
fs
jle
jmp
arpl
pop
inc
fidiv
retf
xchg
cmp
aad
mov
xchg
shr
nop
push
fiadd
and
ja
fadd
sbb
cmp
fdivr
xlat
push
push
or
mov
mov
ret
imul
jecxz
mov
(bad)
adc
dec
(bad)
add
dec
rcr
(bad)
sbb
dec
enter
cmc
dec
faddp
(bad)
stc
rol
xchg
stos
push
sbb
stc
cmp
fcom
sbb
lock
jmp
mov
dec
fisttp
imul
sbb
js
int
sbb
movs
jnp
xchg
(bad)
push
or
pop
lock
out
sbb
mov
test
stc
push
stos
addr16
cmps
mov
or
out
cmps
inc
jle
(bad)
dec
jnp
sub
or
sub
call
pop
call
fcom
outs
pop
push
adc
jp
fs
retf
fstp
dec
test
push
or
cli
cmp
movs
push
xor
push
fisubr
fcmovnu
dec
xor
sbb
pop
and
rcl
jecxz
mov
fcomp
adc
lahf
pop
or
nop
inc
pop
call
fisttp
fsubr
pop
sbb
loope
(bad)
shl
hlt
sub
and
fsub
pushf
loope
sub
fnstenv
or
or
(bad)
fs
pop
add
ss
movs
cld
scas
adc
and
add
cs
fcomp
push
imul
sbb
mov
inc
stc
test
mov
pop
dec
out
mov
adc
int
sub
jmp
jns
mov
mov
lock
aad
sar
jmp
mov
pop
popf
lds
into
and
cmp
sar
mov
mov
test
pop
ss
stc
mov
mov
jbe
pop
mov
pop
shl
retf
push
lock
mov
loope
mov
push
sar
lods
inc
sbb
xchg
xchg
mov
sar
adc
enter
aad
lock
mov
sub
jl
repnz
rcl
and
ficomp
iret
out
in
hlt
fcmovbe
push
retf
inc
inc
rcr
sbb
shl
xchg
movs
shl
lods
daa
pop
aad
jmp
test
aas
rol
sbb
lods
pop
ret
or
rol
shr
sub
jb
cli
or
imul
retf
xchg
shr
int3
mov
sub
mov
neg
ss
ror
pop
(bad)
mov
jmp
jmp
mov
mov
in
fcomp
mov
lahf
mov
or
cmp
(bad)
nop
inc
call
mov
xor
mov
int
fisubr
into
out
outs
fsubr
rcl
inc
mov
(bad)
in
call
test
add
jne
movs
(bad)
and
clc
inc
fidiv
mov
push
dec
fwait
cmp
rcr
xor
xchg
mov
xchg
sbb
fcmove
sbb
pop
pop
imul
daa
fisub
js
fcmovu
pop
mov
stc
test
push
fstp
cmp
aad
sbb
dec
test
sbb
es
fcomp
sub
loop
(bad)
jl
test
pop
data16
loopne
gs
cdq
add
(bad)
loopne
xchg
fbld
xchg
aad
or
xor
sbb
sbb
retf
mov
sub
mov
pop
adc
xchg
mov
pushf
addr16
addr16
(bad)
xchg
sahf
aad
xchg
xor
jp
fisub
call
and
xor
fiadd
pop
pop
sbb
ror
and
pop
adc
dec
add
cld
or
mov
push
pop
loope
sahf
mov
cmp
ja
pop
or
push
and
movs
pop
pop
inc
pop
lods
dec
mov
outs
daa
sbb
fucompp
push
push
fstp
fs
sbb
test
xchg
mov
jmp
sub
ins
test
xor
sar
fidiv
fisub
rol
ins
lock
idiv
pop
hlt
je
pop
mov
fcomp
mov
aad
adc
call
lock
sbb
rcl
(bad)
pop
retfw
ins
inc
push
add
ror
mov
aad
xchg
adc
std
out
push
fs
aaa
shl
fstp
push
inc
sbb
fist
ins
pop
push
jmp
cmp
and
jmp
aad
test
jge
pop
mov
pop
shl
cmp
sbb
jmp
retf
pop
enterw
mov
jmp
call
rol
sbb
stc
cli
rol
jns
cmp
call
cmp
cmp
fsubr
dec
cmp
sub
xchg
stc
pushf
in
ss
int3
call
mov
loope
dec
fld
mov
fdivr
ins
stos
or
cmp
mov
xlat
stc
retf
cld
or
pop
fisttp
aad
mov
mov
mov
inc
xlat
out
or
sub
and
aas
adc
jnp
or
jmp
sub
daa
scas
cli
into
sbb
clc
inc
js
mov
(bad)
out
add
sbb
sub
push
test
js
fcomp
dec
add
xor
rcr
mov
jmp
push
shl
push
fcmovbe
pop
gs
cwde
pop
hlt
test
sbb
jno
jnp
js
outs
shl
pop
jg
retf
sti
pop
sub
pop
inc
outs
sahf
ficomp
inc
pop
test
les
or
(bad)
jnp
shl
pop
fdivr
cmp
sub
push
add
push
xor
pop
aad
add
fcmovu
pop
push
xchg
aad
fs
in
inc
fidivr
jecxz
add
or
pusha
rcl
stos
pop
rcl
mov
mov
cmp
sub
push
fdivr
retf
pop
das
cmp
or
stc
mov
mov
dec
mov
dec
pop
(bad)
shl
retf
(bad)
aad
jmp
pop
shr
mov
das
fdivrp
xor
movs
inc
cmp
fs
add
jp
(bad)
rol
push
cmp
sub
rcl
dec
aad
pop
out
mov
lock
push
imul
mov
adc
in
sub
jge
loopne
shl
pop
or
rep
inc
call
xor
mov
or
xchg
pop
and
inc
inc
fstp
std
fstp
fmul
les
leave
pop
sub
or
pop
mov
jmp
and
pop
xchg
mov
fmulp
loop
sar
xchg
int3
mov
(bad)
addr16
sbb
icebp
mov
sub
mov
adc
in
dec
xor
sub
fbld
push
and
jg
jmp
fchs
mov
sub
addr16
(bad)
mov
iret
inc
pop
mov
sbb
test
push
cs
das
add
push
pop
push
and
mov
xor
fsub
jne
or
push
push
xchg
mov
pop
fwait
inc
pop
lds
aad
into
cmp
push
or
icebp
popw
mov
add
pop
retf
into
mov
sbb
sub
in
xchg
icebp
sub
scas
retf
fs
out
(bad)
pop
mov
imul
cmp
cs
mov
inc
pop
lds
inc
(bad)
cwde
sub
and
fwait
xor
xor
xchg
add
adc
pop
dec
into
mov
pusha
pop
sti
fcomi
fmul
rol
pop
fistp
out
retf
rcl
outs
sub
or
sub
xlat
test
mov
fwait
pop
xchg
pop
test
jnp
idiv
dec
push
mov
inc
out
pusha
aad
retf
lods
jl
mov
mov
cmp
jp
mov
xchg
dec
dec
pop
sahf
loope
outs
or
rol
not
push
jmp
add
pop
pop
push
dec
pop
lods
mov
notrack
xor
xchg
pop
lods
dec
scas
fidiv
nop
mov
retf
icebp
imul
mov
nop
jnp
add
test
mov
sbb
rcr
mov
pushf
xor
icebp
add
fdiv
(bad)
ret
stos
pop
int3
repz
cmp
mov
mov
pop
push
or
fiadd
mov
push
sti
jns
cli
pop
pop
mov
cmp
xor
fmul
and
stos
add
xchg
or
pop
cmp
xor
sub
sar
int3
pop
pop
cli
fisubr
rcl
dec
popf
icebp
adc
in
fist
pusha
sub
in
shl
xlat
stos
mov
or
retf
fwait
pop
inc
jns
stos
sub
pushf
test
mov
mov
mov
mov
enter
loope
dec
mov
dec
rcl
mov
push
push
pop
mov
xchg
jbe
dec
sub
stc
xlat
div
push
ret
sub
fstp
jmp
pop
ja
push
fisttp
add
mov
retf
ins
popa
(bad)
adc
xchg
fcmovne
ss
sbb
add
in
dec
adc
call
shr
pop
xor
push
xchg
sbb
dec
scas
dec
pushf
lds
cmp
pop
sub
out
shl
loopne
frstor
pop
inc
adc
fs
xchg
sbb
rep
retf
mov
jnp
retf
(bad)
stos
pop
lock
sub
fstp
jbe
retf
pop
mov
push
retf
into
pop
hlt
pushf
xor
cmp
clc
cmps
fcomp
jecxz
addr16
mov
loopne
push
xchg
cmp
sub
fnsave
(bad)
stos
xchg
fisub
sbb
fs
jl
cli
dec
addr16
cmp
mov
jb
(bad)
xchg
ins
fldenv
sbb
lahf
ror
out
mov
sub
enter
mov
cmp
add
cmps
out
xlat
jmp
push
sub
add
stos
loopne
fistp
test
sub
mov
fwait
aad
fs
jle
stc
fisttp
xor
pop
fcmovnbe
imul
xor
cmp
pop
js
mov
test
jmp
retf
pop
pop
mov
adc
adc
pop
fidivr
sub
jp
aam
out
pop
sub
fimul
sub
fadd
mov
outs
pop
cmp
sbb
inc
pushf
xchg
push
imul
or
xor
jmp
fidiv
jns
js
loop
int
(bad)
sub
sub
pop
les
jno
mov
in
gs
fstp
push
nop
pop
xchg
jmp
pop
cmp
mov
cmps
(bad)
mov
pop
test
ror
cmp
cmp
aas
stos
outs
jp
popa
fidiv
jl
jns
shl
fmul
or
movs
leave
jmp
cmp
in
xor
pop
jno
ss
pushf
sub
daa
jno
xor
sub
inc
test
aad
test
push
jmp
add
pop
and
cmp
mov
sub
xor
daa
jp
xor
sub
retf
adc
aaa
mov
cmp
pop
ds
(bad)
lock
cmp
cmp
push
cmp
fidiv
nop
push
sub
pop
pop
js
dec
pop
out
out
sahf
xor
push
adc
mov
add
mov
xchg
mov
xchg
mov
int
inc
sbb
and
aam
pop
pop
jmp
jne
sbb
xchg
mov
loope
fadd
or
leave
sti
imul
pop
cld
scas
mov
repz
add
das
ss
mov
lods
mov
mov
imul
sti
imul
sub
add
vsubsd
pop
cmp
movs
pop
dec
mov
mov
jns
or
push
mov
loope
test
xor
pop
ror
stos
je
inc
or
and
fld
push
dec
cmps
sub
js
inc
adc
jb
cmps
cmc
cli
dec
pop
jmp
pushf
sub
cdq
ja
ficom
(bad)
mov
fidivr
mov
cmps
inc
jmp
add
daa
fisubr
les
icebp
jmp
cmp
jg
adc
cmp
pop
pop
jp
adc
iret
sbb
pop
ret
mov
shl
add
mov
inc
or
jmp
into
mov
xchg
jmp
clc
andps
cld
lea
nop
or
fistp
stos
xchg
pusha
test
inc
outs
mov
fs
or
mov
mov
mov
inc
jbe
cmp
mov
ds
xchg
dec
push
dec
adc
jg
mov
sar
sub
lds
add
mov
and
imul
stos
sbb
add
aam
push
xor
mov
pop
sbb
enter
pmaxub
or
mov
(bad)
(bad)
fistp
mov
xchg
sbb
aam
mov
sub
mov
shr
loopne
out
lods
js
add
adc
test
test
shl
stos
dec
ja
jge
xor
sbb
mov
mov
pop
adc
cmp
jmp
out
jge
mov
into
jno
pop
test
mov
pop
imul
jg
fstp
test
xor
mov
imul
jge
jae
sar
cld
adc
mov
dec
cmp
in
jp
sub
and
push
pop
pop
retf
xchg
sbb
mov
pop
sar
inc
mov
call
out
jo
adc
pop
shl
add
inc
mov
mov
dec
xchg
sysret
and
cmc
fcom
mov
inc
int
idiv
sbb
jnp
xchg
jp
pop
mov
fwait
ins
cmp
push
nop
fcomp
pop
adc
mov
ret
mov
addr16
sti
jnp
dec
dec
hlt
inc
lods
test
scas
lods
(bad)
loop
xchg
out
pop
mov
sbb
or
out
xchg
add
call
jae
mov
clc
js
push
push
bound
xchg
arpl
xchg
mov
pop
test
sahf
pop
retf
mov
push
retf
ret
fldcw
pop
adc
imul
pop
imul
xchg
retf
mov
icebp
mov
xchg
jmp
into
pop
int
mov
retf
inc
mov
jno
cmp
stos
loope
inc
retf
sub
mov
div
test
repz
call
xor
or
(bad)
lods
add
fisubr
pop
fdiv
nop
repz
pop
inc
pop
pop
sbb
cli
stos
nop
clc
sti
lahf
sti
dec
pop
pop
sets
std
rcl
and
inc
cld
or
pop
stc
fidivr
pop
jecxz
retf
ds
pop
ins
sub
dec
fdivr
mov
mov
addr16
dec
fucomp
pop
pop
sbb
icebp
mov
jmp
sub
push
adc
cld
shr
(bad)
push
pop
test
pop
out
cli
cmp
pop
dec
push
aad
test
rcr
rcl
dec
test
retf
pop
pushf
std
repnz
add
pop
je
pop
ficom
fisubr
loopne
fstp
pop
sub
jge
addr16
loope
jb
sub
dec
test
call
out
sub
stos
cli
pop
xor
pop
into
sti
add
stos
clc
push
or
dec
loope
xor
mov
add
jmp
std
inc
cmp
push
xlat
pop
test
mov
xlat
push
push
pop
ds
mov
and
dec
mov
not
andps
aad
sub
(bad)
test
in
xlat
xchg
nop
rcr
push
pop
sbb
nop
ror
mov
jg
fucomi
lods
pop
fucomp
sti
and
xchg
addr16
cmc
jno
pop
sbb
call
mov
popf
mov
xchg
sbb
or
pop
adc
std
jecxz
mov
inc
pusha
mov
add
add
pushf
xor
mov
icebp
ins
pop
out
es
mov
sub
mov
scas
hlt
jg
pop
icebp
push
lods
pop
paddw
mov
dec
fwait
bound
pop
jp
jb
stos
dec
xor
adc
xor
mov
pop
cmps
imul
jmp
(bad)
in
sub
and
jl
push
push
(bad)
or
shl
fcmovnbe
in
(bad)
std
jne
call
jmp
xchg
inc
(bad)
in
aad
jns
mov
pop
xchg
dec
stos
or
fldl2e
aad
sti
aad
pop
loopne
std
call
retf
icebp
xor
sbb
fimul
inc
rcr
bound
(bad)
push
arpl
sub
push
jp
sti
js
jp
sub
adc
fwait
test
addr16
mov
lock
fist
stc
aad
rol
mov
pusha
rcr
add
fcmovbe
ds
mov
push
dec
rcr
pop
sub
sbb
dec
mov
test
sub
xchg
shl
xchg
jmp
neg
and
lods
pop
shufps
pusha
fnstenv
jmp
pusha
movs
stos
jg
xchg
pushf
js
shl
fcom
jle
lods
ror
mov
jmp
pushf
mov
pop
leave
pop
out
mov
xchg
xlat
(bad)
in
and
ret
push
ror
fnstcw
fimul
xor
loop
rol
sbb
add
cmp
pop
mov
daa
fcomp
cmp
sar
mov
movs
dec
mov
(bad)
fadd
xor
shr
or
xor
mov
mov
dec
outs
push
daa
push
(bad)
pop
jmp
fs
pop
push
(bad)
cwde
pop
retf
repnz
mov
cmp
adc
jg
loop
or
or
ret
rcr
ss
xchg
or
xor
cli
ja
fst
adc
jo
cwde
push
or
sbb
mov
mov
pop
cmp
sbb
pop
not
cmp
mov
test
push
aaa
dec
xor
retf
test
int
and
call
mov
cmp
jge
push
push
test
popf
dec
call
neg
scas
or
stos
sbb
mov
sub
(bad)
pop
fistp
dec
fcomp
add
cli
hlt
pop
adc
dec
loopne
adc
retf
mov
fstp
push
ret
jge
cmp
mov
push
pop
mov
and
sbb
add
(bad)
pop
sub
fcmovbe
pop
and
cmp
fiadd
(bad)
call
(bad)
in
imul
sahf
sti
lods
sbb
fidivr
dec
and
lock
jae
inc
mov
fist
in
mov
pop
adc
fisub
out
test
mov
or
aad
add
push
dec
int3
les
pop
shl
jecxz
xchg
fidiv
lock
pop
cmp
and
jge
push
loop
js
pop
arpl
jmp
pusha
scas
jns
pushf
fwait
clc
mov
ffreep
in
(bad)
retf
hlt
xor
fisttp
sub
fs
push
ins
cmp
sub
inc
and
out
sbb
hlt
das
shr
int3
add
xor
lock
loopne
inc
add
cmp
dec
arpl
cli
or
fisubr
test
das
imul
(bad)
fcmovu
out
mov
(bad)
dec
push
in
mov
xchg
aam
arpl
aas
fidivr
arpl
stos
and
add
fisub
pop
fnsave
fidivr
sbb
mov
sub
push
adc
ja
dec
fs
mov
call
rcr
and
sbb
jp
fisub
aad
push
aad
pop
arpl
repz
cmp
fisub
retf
inc
sbb
inc
(bad)
sub
dec
xlat
push
mov
jmp
(bad)
stos
xchg
xlat
dec
push
fs
or
out
and
or
call
jmp
pop
pop
imul
je
loop
cmp
pushf
mov
arpl
pop
mov
jmp
sub
sub
push
test
retf
dec
mov
lock
sti
jmp
in
pushf
nop
stc
adc
xchg
add
sub
rol
pop
mov
sar
xchg
jmp
ficomp
jge
rcl
dec
into
hlt
test
xlat
dec
out
in
pop
fdiv
hlt
mov
jmp
aad
pop
sahf
push
test
xchg
mov
sbb
daa
push
xor
sti
sti
xchg
sub
out
ror
pop
and
arpl
aad
aad
cmp
lahf
push
add
mov
sti
xor
pop
dec
rol
pop
mov
rcr
push
mov
cmp
aam
inc
gs
pop
adc
imul
rcr
test
sbb
out
mov
loope
bswap
dec
xchg
mov
cwde
pop
dec
jle
pop
ret
rcl
jp
ror
pop
imul
or
sar
or
imul
pop
xchg
retf
lods
pop
mov
jp
inc
into
cmp
add
out
xlat
push
out
fisub
jmp
mov
mov
pop
sbb
jle
or
cli
shr
mov
or
std
mov
out
or
sbb
fcmovbe
adc
or
jp
jmp
xor
dec
xchg
pop
addr16
dec
clc
bsf
push
jp
imul
cmp
and
push
jg
inc
sub
(bad)
fsubr
inc
fsub
shr
or
fwait
in
cmps
int
cmp
jmp
int
es
pop
test
call
int3
test
sar
rcl
xchg
ja
fisub
pop
sar
ds
les
aam
shr
xor
test
xor
adc
mov
adc
mov
fisubr
aad
(bad)
and
pop
dec
(bad)
pop
rol
jge
(bad)
push
pop
or
xor
pop
xor
pop
pop
shl
mov
and
in
lods
ficomp
stc
xor
shl
int3
stos
cmp
retf
add
or
imul
push
mov
pop
dec
and
xchg
push
or
pusha
mov
or
pop
mov
mov
je
pop
inc
add
adc
xor
shr
int3
daa
pop
xchg
push
cli
cmp
fist
xor
pusha
fist
stos
sub
mov
pushf
xchg
and
es
xchg
lods
rol
pop
stos
mov
push
push
jp
sub
xor
cli
shl
pop
mov
sub
shl
mov
or
cli
(bad)
fwait
shl
rol
cmps
retf
pop
inc
popa
fdivp
test
(bad)
rcl
cmp
mov
or
xchg
das
fcomp
adc
xchg
mov
add
mov
pop
lea
fcomp
or
rol
retf
outs
data16
loopne
adc
fcom
leave
scas
shl
aas
fmul
push
out
pop
push
mov
adc
push
cmp
fdivr
jo
sub
in
push
(bad)
mov
cmp
fdiv
lods
fwait
sbb
dec
fcmovne
and
js
adc
mov
mov
mov
hlt
sar
pop
mov
fcmovu
out
test
dec
pop
shl
mov
sub
stc
jmp
aam
data16
and
daa
and
in
pop
cld
idiv
pop
mov
add
call
pop
cld
pop
rcl
mov
mov
ror
cmp
out
loop
xor
or
cmp
pushf
out
js
std
out
cli
fimul
cli
add
sti
xchg
call
retf
pop
xchg
stos
cmp
or
stc
iret
ret
mov
out
mov
mov
mov
sbb
jno
mov
adc
pop
xor
pop
fdivr
pop
loopne
ds
stc
(bad)
rol
repz
in
pushf
ins
lods
jp
pop
pop
cdq
dec
mov
fdiv
(bad)
jl
aas
sub
loopne
aam
cwde
in
retf
cmp
xchg
dec
aam
stos
jle
sub
cmp
clc
pop
mov
pop
into
data16
push
xchg
les
daa
clc
mov
lods
cmp
fstp
stos
(bad)
cli
pushf
jmp
xlat
sbb
push
mov
fistp
sub
int3
mov
adc
xor
push
jne
loop
push
mov
lds
call
int3
mov
add
ja
dec
retf
pop
xchg
push
call
retf
fcomp
sub
cmp
mov
je
mov
jl
dec
mov
push
out
rcl
xlat
pop
mov
and
mov
test
jnp
mov
lods
xchg
lods
ins
mov
ror
cmp
or
lea
rol
sub
aad
mov
cmps
mov
inc
xchg
inc
cli
xchg
fsub
dec
xchg
test
push
or
cmp
and
add
mov
fsubrp
repz
push
cmp
rol
call
or
pop
mov
aad
shr
mov
(bad)
scas
jecxz
idiv
outs
cmp
aas
(bad)
jns
(bad)
stos
icebp
cmp
push
sub
repz
fistp
stos
or
jp
call
pop
sar
dec
cmps
shl
sbb
cmp
fstp
aas
cmp
repnz
aad
pmullw
add
inc
mov
neg
inc
(bad)
mov
xchg
aam
cmp
add
fiadd
jnp
jecxz
mov
(bad)
fdiv
shl
retf
rcl
pop
out
and
cli
and
aas
nop
push
mov
nop
ja
xchg
jae
call
lds
mov
pop
jmp
xchg
sti
cld
imul
xchg
hlt
shl
mov
add
push
adc
aam
pop
inc
sub
loopne
pop
push
or
mov
sub
rcr
mov
xor
pop
test
push
ins
fsubr
stc
push
mov
or
cmp
sub
stos
call
retf
mov
enter
add
fmul
jl
pop
or
pop
sbb
cmp
jmp
shl
rcl
sub
mov
inc
sbb
mov
mov
xchg
fldcw
(bad)
stos
cmp
rol
fidivr
into
dec
cmp
rcr
iret
dec
stos
push
retf
sahf
cli
stc
sub
outs
cmp
fmul
nop
out
push
pop
call
mov
jne
xchg
enter
(bad)
nop
fistp
call
into
movs
daa
sub
rcr
stos
pop
xchg
cli
mov
mov
cmp
(bad)
pop
fisub
adc
mov
cmps
aam
xchg
cmp
mov
aam
pop
call
jge
xchg
pop
dec
mov
clc
repz
mov
pop
daa
stos
js
jb
in
out
loope
ficomp
stos
(bad)
pushf
add
call
gs
fcom
fcomi
pop
mov
sub
cli
sti
call
mov
cmp
jecxz
adc
loopne
cli
retf
into
push
jmp
pop
push
ja
pop
in
aas
retf
add
sub
data16
push
xchg
retf
push
push
(bad)
aad
push
gs
mov
fs
(bad)
sub
cmc
push
rcl
cmps
pop
mov
loopne
fisub
enter
push
imul
out
outs
rcr
pop
nop
mov
push
(bad)
lock
fadd
cmp
ror
sbb
inc
shl
sub
rcr
or
adc
shl
nop
sbb
xchg
pop
into
and
or
cmp
add
pop
in
test
ja
dec
mov
call
xor
sbb
add
push
cdq
add
jno
add
push
jg
xor
push
xor
or
popf
sbb
and
test
sar
push
sbb
push
fistp
cmc
and
fist
add
push
test
call
jmp
jb
stos
ret
popf
sbb
retf
daa
xor
push
in
pop
int
js
or
cmp
cmp
pop
ret
popf
pop
mov
sub
inc
pop
or
inc
les
rsqrtps
cmps
pop
pop
popa
xlat
add
add
call
xchg
stc
jmp
aaa
cmp
imul
pop
shl
jmp
aam
mov
test
pop
das
mov
inc
mov
cdq
cmp
mov
or
ss
lods
pop
repz
mov
push
pop
jno
push
dec
mov
cmp
lds
cmp
sbb
sahf
retf
add
and
cmps
dec
xor
std
into
xchg
cli
hlt
mov
and
mov
sub
adc
mov
lea
dec
mov
lahf
jns
add
test
retf
fnstcw
add
repz
scas
call
in
fcmovnu
pop
call
ficomp
adc
retf
(bad)
fstp
ins
enter
and
popf
aam
mov
xchg
mov
dec
and
fst
cmps
pop
push
int
sbb
iret
mov
xchg
pop
retf
fisttp
fadd
ins
sbb
inc
xchg
sbb
mov
idiv
or
push
mov
dec
fucompp
stc
in
fstp
adc
add
stos
outs
sbb
jne
or
ret
shl
xchg
mov
jle
adc
pop
fisubr
mov
pop
xchg
cmc
xor
or
shl
mov
or
xor
ds
pop
movs
mov
push
ffree
retf
ja
stos
retf
or
loop
and
mov
es
rcr
call
mov
mov
shl
dec
adc
add
ficomp
xor
inc
sub
retf
jge
out
fstp
sbb
dec
mov
test
xchg
adc
xchg
xlat
mov
push
or
pop
out
pushf
(bad)
or
ds
push
fpatan
push
pop
fld
adc
mov
call
fisub
sbb
push
shl
retf
cs
out
mov
(bad)
lahf
ror
adc
inc
fs
call
xlat
shl
inc
test
xchg
fnsave
pop
xlat
mov
ficomp
stos
fimul
add
adc
push
es
or
nop
add
mov
xchg
fild
dec
(bad)
push
fidiv
adc
adc
adc
ficomp
jge
out
(bad)
sbb
mov
dec
retf
mov
jbe
in
fdivrp
or
xor
mov
and
cld
popa
shl
daa
fisub
sub
sar
rcr
xchg
retf
sahf
repz
clc
out
shr
in
test
pushf
sub
arpl
ds
pushf
or
ror
pop
(bad)
fisub
mov
jnp
fisubr
inc
jns
mov
pop
and
loopne
test
sbb
fcmovb
hlt
xchg
fimul
lods
pop
mov
aad
iret
and
loop
ficomp
sbb
sbb
xchg
sub
into
cmp
cmps
jno
xchg
popa
sbb
(bad)
mov
cmp
sub
imul
pop
outs
pop
sbb
jl
xor
mov
adc
dec
push
rcr
pop
inc
ficom
stos
cmps
sub
enter
aad
cmp
aad
or
sub
(bad)
out
adc
test
cld
sbb
jg
aad
call
inc
fxch
pop
mov
std
pushf
ins
dec
sbb
lods
stos
mov
jge
(bad)
shl
movs
dec
repz
pop
and
js
fist
ret
mov
dec
(bad)
fcomp
outs
out
jmp
retf
cld
stc
jmp
mov
pop
xor
jns
jle
cmp
(bad)
icebp
push
loopne
add
fisub
xlat
mov
cmps
fcomp
pushf
pop
or
jmp
xchg
fcom
add
into
sub
pop
and
fsub
push
(bad)
push
bound
mov
cmp
cmp
mov
sysenter
imul
in
cmp
push
sbb
pop
pop
fwait
cli
addr16
mov
imul
sub
in
(bad)
pop
jmp
fmulp
push
cmp
std
adc
push
clc
fmul
xor
dec
mov
jmp
imul
ss
call
pop
loope
cmp
push
fwait
sar
sbb
pop
pop
fld
jp
retf
jmp
stc
rol
push
mov
mov
jle
mov
mov
cdq
sbb
lods
fisttp
push
xchg
jmp
jle
gs
lock
call
fcom
pop
stos
imul
(bad)
sbb
test
pusha
fstp
mov
js
or
repnz
fdivrp
pop
mov
and
add
leave
cdq
dec
es
push
sub
ficomp
push
aad
mov
and
sbb
sti
pop
dec
lock
xor
mov
mov
sub
movs
int
mov
fdiv
pop
gs
stos
dec
ins
cli
in
jecxz
sub
sbb
ficomp
pop
das
retf
gs
lds
jmp
daa
adc
add
mov
lahf
lods
cmp
(bad)
push
sbb
fdivrp
fs
dec
or
(bad)
mov
inc
int3
lea
sbb
cmp
fdiv
adc
or
sti
jg
xchg
cmp
push
mov
call
int
arpl
mov
fcom
or
add
cmp
fdivr
jnp
aas
cmp
lods
je
and
or
fwait
sbb
pop
pop
aad
cli
dec
cmps
enter
es
pop
popf
sti
or
sar
add
stos
sti
rcl
into
mov
cmp
loopne
xchg
sbb
xchg
ficom
mov
xchg
repnz
pop
mov
mov
xor
pushf
dec
cmc
nop
sbb
or
icebp
pop
inc
into
pop
das
mov
dec
mov
icebp
jnp
in
call
or
call
and
xchg
jns
jo
ficomp
test
pop
adc
push
push
and
adc
fimul
test
and
pop
xchg
push
sbb
int
out
rcr
add
push
sub
loopne
shl
call
fldln2
jae
shl
int
xchg
inc
fsub
push
jae
ja
outs
jnp
sub
dec
adc
dec
sahf
pop
cmp
push
xchg
ficomp
inc
push
sbb
and
fild
fidivr
stc
mov
imul
and
sbb
push
fisttp
bound
sbb
stos
imul
fcmovbe
and
jg
addr16
(bad)
dec
(bad)
fsub
xchg
mov
call
mulps
cmp
gs
mov
jae
jp
fidiv
(bad)
test
add
and
ins
jp
pop
icebp
mov
xchg
pop
mov
mov
fidiv
dec
fdivr
jl
hlt
imul
mov
out
push
fcom
xchg
add
bound
mov
sub
rol
retf
sub
daa
mov
and
xlat
ds
test
sbb
pusha
xlat
xchg
jo
stos
sub
call
arpl
gs
enter
xchg
cmp
pop
mov
aad
test
jb
mov
je
fdivr
mov
jp
fmul
adc
in
mov
stc
add
test
jmp
lods
fmulp
sbb
test
je
pop
stos
loopne
fbld
push
int3
stos
dec
jle
mov
out
movs
and
mov
push
fdiv
aad
cmp
fsubr
fadd
out
xor
(bad)
fdivr
cli
cmps
sbb
add
push
xchg
push
rol
cmp
xor
jp
stc
lock
fprem
cmp
pop
lea
fisub
das
aam
aad
sbb
and
pop
add
mov
rcl
push
aaa
enter
stos
or
push
pushf
fstp
mov
aad
inc
mov
push
test
mov
cmp
pop
iret
jae
sbb
add
int3
sub
xor
addr16
mov
stc
cmp
call
in
pop
fxch
(bad)
pop
sti
cmps
pop
jecxz
fldcw
mov
pop
sbb
jns
fist
pop
sbb
aaa
push
push
bound
or
std
push
out
mov
jne
pop
dec
bound
pop
push
sbb
std
jmp
stc
lea
sub
cmp
pusha
out
jb
retfw
ss
jle
stos
ds
popf
jecxz
lods
cmp
push
fmul
pop
gs
and
push
retf
mov
pop
in
cmp
push
scas
sbb
pop
sbb
loopne
fistp
ffree
xlat
xchg
and
sub
cmp
(bad)
cmp
push
xchg
shl
sar
icebp
icebp
sub
lds
out
sub
push
test
mov
adc
ret
test
pop
leave
repz
mov
mov
pusha
(bad)
scas
test
scas
pop
fidiv
sub
mov
xchg
scas
dec
es
and
stos
clc
cmp
ja
ins
xchg
aad
fs
push
repz
and
jmp
or
(bad)
daa
pop
out
mov
fist
in
nop
inc
mov
test
add
xor
rcr
jecxz
pusha
scas
cli
pushf
push
ss
cmps
pop
mov
aad
test
pop
repnz
ret
(bad)
sub
or
aad
jo
cmps
fldcw
inc
mov
push
scas
fisub
out
call
sbb
sahf
mov
or
inc
fcom
mov
sub
les
icebp
stos
rcl
fdiv
pop
jmp
fiadd
popf
add
cli
push
fcom
clc
mov
loop
(bad)
adc
nop
call
dec
add
push
mov
sub
jle
jecxz
adc
xchg
fistp
gs
add
push
icebp
shl
(bad)
jmp
mov
or
push
sbb
pop
jle
retf
fnstenv
add
push
adc
(bad)
push
dec
and
movs
add
aad
fnstenv
retf
and
mov
icebp
repnz
repnz
js
retf
inc
dec
stos
sar
add
adc
les
jns
sar
rcr
push
aad
mov
push
cmp
push
sbb
test
icebp
and
push
movs
retf
dec
js
jmpw
shr
loopne
ror
fiadd
scas
adc
shl
fs
or
sub
rol
xchg
les
push
fisubr
or
fist
call
jbe
shl
es
loopne
sbb
push
stc
ins
mov
dec
fiadd
(bad)
xor
repnz
call
mov
pop
test
pop
sbb
xlat
cmps
jp
jnp
pushf
arpl
cli
aas
xchg
call
push
(bad)
fs
xchg
das
jp
xlat
xchg
lods
fs
faddp
sbb
das
aad
test
out
aad
push
aas
aad
js
mov
fwait
push
pusha
imul
cmp
jmp
inc
push
stos
or
(bad)
mov
ins
call
(bad)
idiv
ret
ficomp
jmp
xchg
xchg
arpl
rcr
jl
sbb
sbb
fcmove
mov
imul
pop
pop
push
ret
cmc
call
dec
aad
mov
push
scas
push
clc
cmps
mov
sbb
(bad)
push
mov
loop
dec
rcr
sti
mov
retf
fist
bound
push
push
cmps
adc
fistp
inc
fsubr
(bad)
les
pop
js
pop
out
loopne
aas
mov
inc
(bad)
mov
cmp
(bad)
xlat
addr16
jmp
sar
jnp
or
sub
xchg
cli
sbb
(bad)
loopne
sbb
mov
cli
mov
jmp
idiv
(bad)
or
daa
mov
je
fdiv
retf
int3
add
xchg
adc
jnp
sbb
aaa
pop
or
mov
push
rcr
pop
fstp
xchg
or
xchg
xchg
dec
scas
push
stc
adc
push
sub
rcr
pushaw
daa
sub
(bad)
push
cmp
pushf
and
mov
icebp
xor
gs
mov
fmul
mov
and
push
cmps
fnstcw
cmp
fcomp
stc
inc
shl
fcmovnu
mov
imul
push
mov
add
pop
int3
fbstp
das
jmp
inc
push
pop
and
mov
mov
jae
mov
mov
shl
sub
aam
pop
repz
jns
aad
retf
lahf
jmp
retf
int3
ret
sbb
stos
in
pop
push
ins
pushf
mov
pop
jge
jae
xlat
fstp
push
inc
mov
push
call
mov
dec
popa
push
inc
(bad)
sbb
sub
fild
adc
jmp
pop
mov
out
push
imul
push
rcr
sbb
push
pop
sub
xchg
xchg
lds
imul
push
mov
pop
fisub
mov
push
xor
sub
mov
jno
(bad)
pop
add
pop
mov
sub
and
(bad)
pop
xor
xchg
les
clc
mov
(bad)
mov
dec
call
mov
ret
push
push
retf
push
cmp
xchg
pop
dec
cmp
sar
jecxz
(bad)
sti
xchg
mov
fwait
cwde
pop
xor
xchg
push
and
push
pop
mov
retf
inc
pop
repz
push
xchg
fisttp
mov
pop
mov
mov
pop
out
mov
sbb
add
imul
sbb
xchg
sub
pop
fwait
pop
dec
inc
les
repz
out
shr
dec
pop
js
ffreep
push
adc
fist
jns
les
pop
shr
sub
es
push
les
pop
js
retf
or
jge
test
stos
push
mov
mov
sub
xlat
loop
sbb
jmp
je
aad
and
mov
js
ffreep
push
aad
inc
jmp
pop
ret
pop
les
fmul
ror
pop
mov
mov
xchg
pop
retf
add
cs
dec
pop
mov
call
cmps
mov
cdq
test
push
adc
mov
retf
jmp
mov
aaa
and
pop
push
cmp
fcmove
sbb
rcl
aam
adc
and
pop
cmp
(bad)
pop
fsub
xor
or
pop
or
(bad)
fidivr
nop
sbb
ins
push
int3
cmps
cs
mov
xchg
(bad)
(bad)
mov
das
pop
xchg
call
and
call
or
js
pop
and
aam
dec
xchg
scas
fwait
add
sub
adc
jmp
cmp
pop
mov
xor
jecxz
bound
retf
jmp
sbb
pop
movs
push
stos
dec
fs
sti
lds
iret
xor
dec
sti
sbb
popa
rcl
pop
mov
imul
xchg
pop
jl
arpl
dec
sbb
jl
push
xchg
cmp
jnp
push
fdiv
retf
lods
or
xchg
fistp
sti
(bad)
imul
sbb
push
adc
push
cmp
pop
jnp
ror
fst
inc
cmp
jmp
in
ss
inc
fnstsw
fucom
fs
pusha
sbb
loopne
xchg
(bad)
sub
(bad)
out
inc
jmp
fcmovnu
mov
adc
push
add
scas
sar
jle
pop
mov
jmp
dec
push
fist
out
jmp
stc
pop
mov
fdivrp
jl
ficomp
xor
mov
xor
or
repz
pop
mov
xor
mov
push
fwait
cwde
pop
pop
sahf
addr16
sahf
shl
adc
mov
sub
cmp
xor
jns
ret
ror
sbb
das
mov
sbb
pop
push
xchg
ficom
mov
cmp
test
dec
jne
cmp
out
cmp
retf
cmp
pop
fild
mov
mov
js
mov
xor
fcomp
jbe
js
ror
inc
div
xchg
xchg
icebp
and
sbb
outs
into
adc
mov
xlat
rcl
mov
xchg
push
push
pushf
push
movs
into
fmul
sbb
adc
popa
mov
out
adc
(bad)
loope
rcl
mov
adc
icebp
sbb
inc
not
sbb
adc
lock
jno
mov
mov
call
aad
(bad)
or
add
and
push
xor
cmc
ret
push
sbb
add
sub
fidiv
rcr
xchg
sbb
or
dec
dec
mov
cs
dec
pop
xchg
jmp
jge
adc
xor
mov
dec
ret
mov
je
mov
add
sub
stos
fnstcw
push
cdq
daa
mov
mov
scas
xor
mov
stc
fcmovnu
(bad)
adc
nop
mov
pop
cld
sub
punpckhdq
push
outs
fisub
push
dec
and
inc
cmp
in
lods
inc
mov
fwait
xor
pop
or
cmovae
or
pop
push
sti
adc
pusha
xor
pop
sub
call
retf
test
mov
pop
call
fmul
fs
sub
stc
push
seta
inc
(bad)
fmul
ins
cmps
pop
inc
jo
pop
add
psubb
mov
(bad)
test
pushf
mov
and
pop
stc
inc
xchg
adc
pop
pushf
and
push
inc
fidivr
xchg
fidivr
jmp
inc
jmp
jl
repz
adc
mov
adc
test
xchg
sbb
ss
pop
std
iret
add
dec
or
ds
hlt
sbb
pusha
js
mov
movs
(bad)
push
and
sbb
lods
scas
nop
cs
and
mov
jmp
cmp
in
mov
mov
sbb
push
sbb
xchg
inc
sbb
mov
cmc
mov
or
mov
dec
mov
sti
xor
in
dec
jnp
inc
mov
mov
jbe
sub
in
in
pop
pop
lods
mov
les
(bad)
ret
imul
retf
fnstcw
test
mov
sbb
pop
test
pop
push
int
mov
push
fnstcw
sti
popf
mov
aaa
mov
mov
mov
stos
je
loop
call
jmp
ss
pop
or
rcr
jmp
nop
dec
and
out
pop
or
loop
inc
jmp
xchg
(bad)
jg
fcmovb
outs
fs
or
push
(bad)
and
pop
sbb
imul
stos
sbb
ret
aaa
mov
mov
enter
push
(bad)
popf
popa
test
(bad)
xchg
xor
push
add
scas
push
or
es
sbb
pop
es
jl
jge
mov
or
aas
popa
call
push
or
frstor
xchg
dec
dec
test
and
cmp
mov
fisttp
lahf
add
cmp
fwait
and
inc
(bad)
(bad)
or
inc
cli
js
call
and
sbb
adc
dec
popa
(bad)
cwde
mov
jmp
adc
pop
pop
ja
call
push
xlat
je
not
mov
pop
mov
js
(bad)
push
and
test
xchg
pop
(bad)
push
xor
in
or
and
fimul
or
stos
cmp
mov
jo
sbb
aam
test
(bad)
(bad)
lahf
push
add
xchg
push
outs
xchg
cdq
mov
mov
cmp
push
sbb
jmp
or
fsub
xchg
push
stc
xchg
xlat
(bad)
sbb
cmp
cmp
fld
sub
fsub
pop
shr
scas
mov
push
push
mov
sub
shr
inc
pop
int3
or
push
add
(bad)
mov
push
mov
mov
add
test
mov
cmp
sub
inc
aam
rcl
cmp
adc
in
fld
test
stc
pop
test
xlat
xlat
imul
or
or
xor
xchg
xchg
pop
cmc
out
adc
mov
mov
and
stc
pusha
fs
dec
rol
enter
fld
pop
xchg
sbb
sbb
fldcw
retf
sar
dec
fidivr
mov
sahf
mov
lahf
pushf
nop
pop
xchg
fist
(bad)
mov
push
jns
loope
cdq
sar
cmps
xor
shr
sahf
loope
fcom
pushf
xchg
pop
fdivr
imul
mov
push
sti
fstp
inc
xchg
and
or
aam
fidivr
fidiv
sub
xchg
cmp
cmp
mov
nop
mov
pop
sub
sahf
push
push
leave
mov
ins
push
cmp
gs
mov
mov
mov
cdq
cmps
fxch
pop
dec
fwait
sbb
aam
rcl
adc
or
ins
ins
rol
adc
mov
addr16
mov
push
jne
mov
adc
clc
test
mov
fsubp
push
cld
shr
mov
cmc
aaa
dec
mov
xchg
stc
mov
sub
cmc
jb
adc
fwait
cmps
fld
rol
sahf
mov
mov
sbb
dec
aaa
mov
ss
out
add
mov
xchg
sti
outs
xor
fmul
push
ror
gs
sbb
or
and
push
shl
add
push
rcr
cmp
push
xchg
or
mov
xchg
push
jnp
inc
jae
mov
jmp
mov
push
inc
jl
in
mov
push
dec
test
sbb
adc
addr16
xchg
ins
addr16
inc
mov
mov
push
call
mov
pop
adc
xor
sub
test
sbb
mov
stos
out
(bad)
push
out
mov
test
mov
fwait
adc
cli
(bad)
pushf
out
lds
mov
jbe
clc
mov
test
inc
nop
xchg
mov
pushf
push
aam
mov
or
and
jp
sbb
xchg
(bad)
cmp
popf
xlat
mov
xchg
push
rcr
repz
push
sar
xor
fld
fimul
pop
sub
xchg
ins
jp
add
jge
mov
rcl
dec
cmp
and
xchg
call
push
xor
adc
shl
sbb
jbe
xchg
cmp
call
adc
adc
sbb
fcmovb
jmp
fistp
into
cmps
xor
mov
sbb
fist
fsubr
movs
push
fcom
aam
and
push
sub
pop
mov
(bad)
nop
or
test
(bad)
shr
mov
inc
icebp
retf
jl
cmp
or
cmp
lods
sbb
enter
mov
ret
call
adc
mov
add
mov
stos
clc
cmp
add
dec
sub
ficomp
test
mov
ds
shl
sub
cmp
and
fcom
mov
mov
sbb
cmc
jnp
mov
mov
xlat
bound
div
addr16
inc
(bad)
mov
stc
pop
mov
inc
test
mov
fisub
adc
nop
cmp
sub
mov
jecxz
int3
jbe
mov
fsubrp
stos
test
xbegin
sbb
inc
xor
mov
scas
xor
nop
mov
pop
adc
aaa
pushf
movs
pushf
cmps
adc
neg
call
cmps
sub
adc
mov
popf
xchg
clc
stos
jg
test
je
adc
push
(bad)
mov
xchg
les
pop
ret
mov
out
int
stos
jmp
jp
sbb
inc
lods
adc
mov
mov
aaa
or
movs
mov
dec
sub
push
mov
push
mov
mov
aaa
pop
daa
push
push
cli
lods
jbe
hlt
lahf
stos
push
jb
xchg
sbb
scas
lahf
cdq
lods
scas
pop
dec
mov
mov
jnp
stos
movs
cs
pop
ret
pop
ret
icebp
sub
sbb
jmp
sub
call
xor
mov
and
mov
int3
test
icebp
push
push
jg
mov
sub
mov
mov
ds
and
mov
test
dec
dec
call
lahf
sub
xor
call
xchg
call
pop
(bad)
sti
(bad)
mov
xchg
lea
and
push
adc
mov
scas
mov
pop
lods
adc
fiadd
pop
lock
mov
lods
inc
test
jbe
cmp
pop
jb
aaa
shl
sbb
out
jge
mov
pop
add
push
sbb
fld
fcomp
std
pushf
repz
push
inc
div
inc
jl
push
int
ror
test
dec
clc
cli
add
xor
ror
jl
cmp
jmp
cmp
aaa
(bad)
jge
movs
int
call
push
xor
call
std
jnp
scas
jnp
xor
xor
sbb
sbb
xlat
dec
pop
cdq
cs
push
and
retf
adc
aad
daa
push
or
std
fld
mov
mov
pop
fistp
fisubr
adc
(bad)
jl
mov
pop
jno
fiadd
pusha
scas
call
scas
je
pusha
stos
nop
mov
inc
cdq
nop
(bad)
pop
in
inc
or
dec
retf
jmp
sti
or
mov
adc
fidivr
sti
fdiv
dec
jp
outs
lods
sbb
retf
scas
int3
jp
dec
jo
cli
cwde
nop
cs
repnz
ficom
xchg
dec
aam
cmp
mov
jecxz
push
cmps
and
jns
xlat
fwait
mov
mov
frndint
pop
rol
jl
loopne
retf
or
pusha
(bad)
adc
aaa
shr
enter
xor
in
push
lahf
jg
pop
xchg
adc
(bad)
aam
lods
mov
int3
pop
fld
aas
sub
pop
pusha
(bad)
add
adc
pop
dec
dec
call
pop
cwde
mov
add
mov
sub
cld
sbb
aas
sbb
retf
stos
mov
ds
mov
xor
movs
mov
aad
mov
mov
je
sub
call
fdiv
push
imul
in
mov
(bad)
or
mov
int
mov
movs
int3
out
push
fisubr
mov
adc
push
daa
adc
cmp
dec
pop
sbb
and
outs
js
(bad)
adc
cdq
fmulp
pop
jp
into
xlat
xor
sar
(bad)
stos
int3
xchg
daa
pop
sub
mov
xchg
mov
adc
mov
(bad)
mov
sbb
xlat
fst
pop
int3
sub
fsubr
jmp
sub
clc
cdq
pop
popa
sbb
mov
aam
ds
imul
or
xlat
rol
sub
pop
xchg
xor
push
imul
test
push
(bad)
mov
mov
test
lea
mov
adc
pop
push
mov
mov
adc
pop
or
cmp
adc
ja
mov
ret
cmc
pop
xor
popf
sbb
jg
and
mov
inc
nop
push
push
jp
adc
adc
mov
push
jp
inc
rcr
pop
ins
jmp
rol
mov
sub
xchg
push
pop
jg
push
inc
loop
mov
xor
pop
dec
(bad)
pop
pushf
sbb
fnsave
imul
cs
sahf
pop
pop
xchg
or
mov
inc
cmp
mov
pop
lahf
or
int3
pop
sub
pop
jle
shr
pop
sub
repz
mov
jnp
jmp
gs
mov
and
dec
dec
mov
cs
jne
hlt
out
adc
jnp
jle
aas
ss
lahf
jmp
lods
pop
mov
jl
xor
push
jne
xlat
mov
cmp
mov
cli
rcr
je
lock
test
sbb
push
mov
lods
sbb
aad
mov
call
mov
(bad)
leave
in
jp
popf
aaa
(bad)
xchg
fild
add
and
xor
mov
popa
mov
int
sub
fndisi(8087
xor
push
xchg
not
xchg
push
push
popa
addr16
pop
sbb
cmp
mov
ja
je
mov
adc
cmp
(bad)
jno
xchg
jae
xchg
mov
fdivr
pop
fstp
adc
add
test
ja
aas
xchg
xlat
xlat
xchg
push
retf
and
lock
cwde
fstp
and
mov
sub
mov
scas
push
aam
rcr
mov
mov
(bad)
jl
dec
sar
jmp
push
and
mov
int
jecxz
pop
dec
lods
xchg
or
addr16
add
int
sahf
dec
mov
das
(bad)
dec
xchg
inc
ss
mov
adc
xor
jmp
jns
aaa
pop
mov
sub
jbe
mov
pusha
cdq
inc
out
popa
pop
cwde
enter
out
push
push
sbb
pop
jp
jo
rcl
rol
add
jns
inc
inc
das
fmul
std
xlat
pusha
loopne
jns
add
or
mov
pop
mov
enter
dec
mov
mov
rcl
aaa
ficom
lods
fld
sbb
mov
mov
and
popa
test
dec
pushf
inc
aam
outs
sub
push
rcl
rol
cmp
xchg
jmp
(bad)
data16
shr
pop
shr
rol
xchg
pop
call
bound
rcl
lods
and
(bad)
bound
call
mov
jmp
dec
sbb
xchg
ror
mov
adc
sbb
je
imul
addr16
inc
jle
call
sub
jecxz
test
ins
pop
inc
ss
movs
jo
mov
ret
ret
jp
fucom
mov
inc
dec
ins
stc
inc
xchg
xchg
lahf
daa
push
movs
fcmovbe
pop
jmp
adc
cs
stc
xor
daa
mov
pushf
icebp
ds
dec
rol
jae
xor
cmp
xchg
scas
lods
(bad)
stos
sub
dec
mov
adc
inc
jmp
outs
shl
jp
adc
sbb
inc
or
call
inc
and
ror
mov
fst
test
arpl
pushf
rcl
cmps
push
(bad)
mov
fsub
cmp
daa
stos
es
test
and
pop
loope
pop
fld
pop
or
dec
push
call
push
and
xchg
cmp
adc
push
adc
or
stos
rcl
aaa
arpl
popa
fxch
(bad)
int3
popf
movs
rcl
sbb
adc
pop
daa
xlat
cdq
pop
pop
xor
sbb
mov
mov
jmp
and
jmp
cmp
pop
outs
ror
add
out
mov
mov
sbb
dec
sbb
and
stos
mov
enter
sti
sbb
pushf
sbb
or
pop
push
test
ds
out
test
sahf
loope
popa
call
dec
push
xlat
cmp
mov
retf
fnsave
call
xchg
sub
pusha
mov
dec
sbb
cmp
mov
dec
fcom
jno
frstor
retf
fldl2t
addr16
lods
lahf
sub
sub
add
jo
icebp
xor
stos
daa
call
jl
push
jmp
sub
fucom
div
mov
mov
cmps
mov
jmp
mov
fnstenv
cs
fst
sub
retf
jmp
mov
mov
xlat
sbb
adc
mov
mov
rcl
ss
inc
inc
push
or
inc
push
mov
push
mov
ret
data16
inc
fadd
add
xchg
retf
pop
add
pop
sbb
cmp
call
arpl
scas
rcl
push
shl
and
and
lock
cld
ss
fwait
int3
(bad)
xor
aaa
mov
pusha
mov
cmp
or
fist
ins
jo
or
test
fld
add
add
fwait
sub
fwait
sub
xor
inc
mov
mov
fist
pop
or
jmp
pop
cmp
hlt
into
imul
mov
mov
mov
and
call
je
sbb
fdivr
pop
sahf
or
push
test
fdiv
mov
cmp
addr16
mov
and
leave
push
pop
aad
sbb
mov
leave
scas
pop
sub
fwait
dec
cs
movs
rcl
cs
cmovge
fidivr
jne
mov
aaa
retf
push
add
sar
or
scas
push
popf
popf
ss
or
retf
pop
sbb
faddp
push
sbb
jae
cmps
(bad)
retf
mov
ficom
std
fwait
mov
sub
pop
sbb
cmp
std
je
xchg
sbb
push
inc
mov
jno
rcl
sub
lock
(bad)
pop
cmp
mov
fisttp
jmp
or
dec
into
cmp
jae
pop
mov
cmp
imul
ins
dec
jbe
inc
ds
pop
loope
mov
mov
ins
sbb
loopne
inc
les
loope
repz
jbe
ins
mov
dec
ja
xchg
push
retf
shl
fstp
jl
inc
jl
cmp
adc
push
sub
dec
sar
jbe
or
inc
pop
fsub
and
xchg
pop
ins
dec
sub
ins
rcr
sahf
jno
cmp
loop
mov
ror
dec
xchg
xchg
push
and
cmps
adc
dec
inc
xchg
loop
in
fcom
test
xchg
mov
adc
or
adc
fcmovne
push
sbb
push
sar
add
loop
retf
push
or
into
cli
jg
scas
mov
xor
or
popa
sbb
imul
fdiv
shl
fisttp
sar
inc
cmp
repz
push
cmp
push
inc
push
sbb
adc
sbb
sbb
je
ror
adc
push
push
push
xchg
push
mov
pop
xor
(bad)
shr
cmp
movs
sbb
pop
sub
dec
push
sub
dec
je
shl
lods
mov
dec
jle
les
daa
or
mov
inc
test
sbb
inc
cwde
mov
stc
mov
and
mov
cmp
push
mov
stc
jmp
cs
jecxz
pop
mov
dec
pop
sbb
push
pop
call
push
aam
mov
pop
cmps
sbb
jae
sbb
jp
jae
test
in
ret
mov
ret
mov
out
xchg
jnp
mov
push
fsubr
sbb
push
retf
sub
xchg
stc
jne
adc
mov
sar
mov
in
retf
test
xor
mov
adc
pop
or
mov
pop
lds
dec
cdq
les
enter
pop
enter
adc
and
cmp
mov
ror
das
mov
push
pusha
sbb
(bad)
mov
mov
mov
mov
cdq
push
pop
call
push
push
adc
jle
jl
push
ss
push
cmp
nop
mov
jns
lods
sbb
es
ror
out
test
xor
or
xchg
pop
push
mov
mov
cdq
in
xor
mov
push
xchg
aad
pop
loopne
add
pop
into
cs
dec
and
xor
push
pusha
mov
dec
fisubr
dec
aaa
cmp
loope
adc
retf
shl
sahf
nop
push
mov
stos
or
and
scas
js
dec
(bad)
mov
fst
push
ss
mov
cwde
shl
push
gs
jno
jmp
pop
arpl
sbb
jnp
jp
cmp
shl
inc
xchg
arpl
mov
and
dec
and
movs
jmp
pop
xlat
sub
(bad)
xchg
pop
scas
ret
push
push
dec
mov
sti
pop
clc
mov
mov
mov
mov
cmp
sub
inc
not
mov
sub
adc
popf
shl
inc
jnp
push
loopne
xor
daa
jbe
call
xchg
push
mov
inc
pop
cli
out
jae
mov
ficomp
pop
inc
popf
add
js
push
mov
pop
test
push
fiadd
retf
sahf
out
loope
xchg
les
retf
sar
push
adc
pop
movs
fidiv
xchg
into
xchg
sti
rol
data16
call
rcl
jg
test
cmp
mov
mov
call
stos
xchg
xchg
sub
nop
addr16
fstp
and
pop
leave
arpl
inc
sub
xchg
cmps
jae
adc
sti
jl
pop
xchg
hlt
inc
and
les
xlat
add
retf
in
fstp
jmp
sub
push
fsubr
ficom
jmp
test
(bad)
cwde
push
add
repz
pop
push
imul
mov
jecxz
mov
fwait
sbb
ss
(bad)
mov
ficom
loopne
add
xchg
sti
aad
out
inc
cmp
in
shl
inc
or
xlat
push
xchg
push
jl
ss
push
sbb
loop
icebp
lods
pop
imul
push
retf
mov
iret
out
rcr
cwde
sub
mov
pop
hlt
jp
std
pop
enter
icebp
pushf
inc
pop
sub
ror
sbb
(bad)
sub
push
jmp
inc
(bad)
push
mov
fstp
stos
es
retf
sub
xlat
addr16
mov
sub
retf
mov
push
dec
push
or
mov
push
movs
jnp
sbb
fistp
adc
push
inc
fidivr
mov
out
mov
jns
stos
test
sbb
push
jo
dec
mov
mov
call
je
sar
cs
loope
int
sub
aaa
fldcw
pop
(bad)
(bad)
fstp
push
sbb
sub
pop
sbb
jmp
int3
fbld
cs
rcr
mov
sub
ja
jge
jns
sbb
push
dec
mov
push
jmp
cdq
jl
hlt
sbb
jnp
push
int3
mov
adc
push
xchg
mov
sub
retf
imul
gs
dec
jge
nop
lahf
cdq
xor
aas
lock
ja
loopne
retf
into
pop
fwait
xor
loopne
fisub
pop
sbb
ret
rol
mov
ds
(bad)
jae
call
repz
retf
(bad)
rcr
popf
jl
pop
mov
push
nop
loop
ftst
xchg
test
pop
sbb
xchg
retf
sbb
loope
adc
retf
mov
xchg
xlat
jmp
test
pop
pop
add
mov
mov
dec
pushf
adc
sbb
xor
shr
jmp
fnstcw
add
(bad)
adc
fistp
xchg
scas
mov
ins
jmp
mov
add
imul
sub
xchg
cwde
sbb
icebp
mov
jnp
inc
mov
sbb
cmp
jg
push
xor
jp
push
fsub
lahf
mov
addr16
mov
inc
sub
add
adc
test
movs
adc
jmp
pop
adc
mov
xchg
clc
dec
aam
dec
inc
pushf
in
sbb
dec
arpl
ins
inc
adc
je
in
xchg
push
lods
cmps
pop
jg
pop
xchg
cmp
and
loop
jle
push
sub
outs
jmp
and
cs
inc
jmp
jl
jno
push
test
mov
retf
fisttp
xchg
xchg
cmp
xchg
inc
cmp
push
xchg
retf
ror
lods
test
(bad)
push
add
push
into
mov
repnz
sbb
xor
jecxz
mov
cwde
call
(bad)
inc
adc
mov
ret
pop
pop
and
dec
aam
pop
ret
sub
test
pop
sbb
shl
cmp
jnp
pusha
xchg
int3
mov
push
pop
push
enter
push
xlat
jae
cdq
push
aam
retf
lods
js
push
pushf
(bad)
jp
push
or
mov
mul
dec
out
dec
dec
(bad)
pushf
lods
popa
xstore-rng
cmps
xchg
in
mov
dec
mov
inc
sti
cmp
dec
idiv
sti
dec
cdq
dec
hlt
or
sbb
mov
and
cdq
(bad)
pop
push
loope
jbe
pop
jne
jns
jo
daa
sub
pusha
sbb
xlat
add
test
fld
inc
sti
sbb
sbb
mov
call
rol
xchg
mov
pop
fwait
xchg
cli
xchg
sub
mov
sub
std
pop
jge
push
pushf
test
(bad)
jp
push
cmps
int3
xchg
mov
sbb
xchg
sbb
pop
or
aad
les
mov
imul
mov
fbstp
lock
pop
mov
mov
int3
aam
xlat
sub
ror
jl
fcmovbe
in
stc
add
adc
fstp
inc
jl
sbb
inc
push
mov
daa
or
mov
xchg
test
pop
adc
sbb
out
cwde
imul
push
ja
pop
pop
fs
adc
push
pop
ja
retf
inc
push
fistp
fisttp
add
pop
fwait
xchg
cmps
push
fistp
int
push
adc
ror
mov
xchg
rcl
xchg
(bad)
xor
lahf
xor
push
dec
or
jne
into
(bad)
sub
pop
mov
xchg
pop
sbb
pop
cmps
xor
rol
adc
dec
xchg
mov
mov
nop
lock
lahf
fcomi
sub
rol
pop
fwait
fwait
pop
ret
pusha
or
shl
sub
fimul
lahf
daa
and
imul
jbe
imul
jns
fs
dec
loopne
adc
mov
xor
les
test
xchg
rcl
mov
mov
test
mov
sti
mov
or
stos
popa
xchg
xchg
pop
cwde
pop
pushf
mov
ins
lods
ins
xchg
data16
mov
je
xor
xchg
fs
cwde
lahf
test
dec
mov
pusha
nop
and
dec
fucomi
mov
or
cmp
mov
push
inc
(bad)
sub
imul
pop
lahf
jmp
js
mov
mov
xchg
cwde
and
cwde
push
dec
aam
pop
and
mov
xchg
retf
adc
std
retf
sbb
fs
push
xchg
icebp
lods
cwde
adc
stos
cwde
sub
push
sahf
outs
iret
inc
dec
ficom
and
or
jae
add
and
test
clc
sar
jo
(bad)
jle
adc
cwde
push
(bad)
sub
ins
mov
lods
(bad)
je
out
or
pop
pop
dec
bound
mov
pop
fiadd
add
imul
cmp
pop
and
test
add
mov
adc
mov
pop
in
int
mov
cwde
jae
or
mov
mov
out
dec
popa
sub
in
or
dec
pop
or
lods
rcr
cld
cmp
xchg
cmp
push
out
dec
sbb
mov
xchg
cwde
mov
test
push
mov
pop
inc
adc
out
push
int3
jmp
out
mov
repz
xchg
fwait
stc
push
mov
repz
xchg
or
dec
xchg
int
pop
sahf
mov
dec
fist
push
or
lahf
sub
fcmove
pop
jae
push
cdq
cmp
mov
shl
fcomip
sbb
push
push
(bad)
and
icebp
mov
ret
mov
pop
dec
pop
sbb
mov
dec
in
xchg
fidivr
cmps
movs
jp
push
std
sbb
sub
jge
pop
lahf
scas
push
and
popf
in
jnp
loopne
dec
clc
sub
push
call
xor
imul
add
cmp
test
push
retf
(bad)
push
sahf
nop
push
cmp
movs
in
xchg
popa
or
cwde
pop
sbb
mov
push
push
xchg
pop
sbb
jl
les
push
cmps
pop
stos
test
cmp
sbb
pushf
sbb
mov
adc
jmp
stc
lahf
mov
add
pop
push
popa
js
jns
push
movs
jo
adc
jp
pop
pop
push
test
aaa
loop
and
cs
mov
push
mov
push
pop
push
call
push
pop
cwde
sub
into
lods
cli
in
std
ja
mov
xchg
(bad)
push
mov
push
mov
adc
dec
push
retf
jmp
int3
inc
push
inc
stos
fwait
(bad)
aad
push
mov
add
repnz
ror
adc
aad
(bad)
inc
adc
mov
mov
xor
enter
pop
jl
fs
call
les
shr
addr16
mov
rcr
fadd
mov
stos
retf
(bad)
and
mov
add
js
inc
popa
es
das
mov
pop
popa
jo
and
mov
shr
icebp
rcr
pushf
push
movs
pop
push
ins
aam
dec
add
in
fist
pop
and
imul
repnz
push
sahf
imul
mov
or
mov
lods
push
pop
adc
sbb
pop
cmc
cli
outs
fwait
jp
ficomp
ror
scas
mov
fmul
pop
mov
cmp
mov
jle
cmp
loopne
out
adc
pushf
(bad)
mov
ficom
cmp
leave
enter
mov
jp
stos
jle
shl
in
mov
jg
lods
jnp
ja
inc
les
fidiv
lods
popa
ret
pop
pop
or
test
fiadd
aam
mul
fstp
cmp
(bad)
test
mov
pop
fild
mov
out
adc
shl
ins
out
(bad)
fidivr
fistp
mov
lock
(bad)
inc
enter
sub
add
cmp
sbb
addr16
mov
pop
test
das
pop
fsubr
xchg
mov
dec
shl
mov
sbb
mov
stos
shr
mov
sti
xor
stc
sub
cmp
scas
cmp
jb
sahf
add
mov
sar
fist
push
rcl
mov
xor
arpl
adc
add
cmp
sbb
adc
push
or
pop
loop
lock
add
loope
fwait
ret
xchg
dec
fndisi(8087
pop
mov
hlt
mov
xor
pop
loope
cmps
pop
sub
xchg
jle
shl
jnp
cmp
shl
cwde
dec
mov
stos
adc
mul
daa
push
and
dec
les
adc
stos
les
mov
mov
test
sub
pop
cmp
fisttp
push
adc
hlt
pop
fdiv
pop
adc
sbb
sub
(bad)
and
sbb
push
jle
push
push
out
movs
(bad)
adc
jp
xchg
into
sbb
fdiv
push
lods
sbb
stc
jae
cmps
cdq
push
push
mov
xor
sti
adc
xor
xor
mov
push
or
div
mov
mov
pop
dec
pushf
cmp
dec
xor
test
inc
xor
dec
jb
retf
jmp
sbb
cmp
retf
dec
xor
imul
ffree
add
shl
rcr
in
fistp
and
pop
pop
adc
dec
imul
sbb
outs
or
mov
xor
in
loopne
faddp
rol
xchg
data16
lahf
xchg
add
push
sbb
mov
fcomp
dec
pop
pushf
in
out
jl
adc
les
mov
jnp
test
retf
sbb
xchg
pop
mov
mov
cmp
jmp
aam
sub
mov
adc
and
xor
or
inc
cmp
int3
imul
imul
jmp
mov
pop
sub
pusha
ins
stc
retf
loop
mov
aad
in
mov
loope
hlt
add
push
lods
push
push
pop
push
mov
and
cmp
lods
repz
sbb
(bad)
pop
shr
sbb
jbe
and
push
fsubr
xchg
into
inc
push
sub
xor
arpl
sbb
sbb
aam
pusha
lock
es
mov
cmp
jl
adc
add
push
mov
out
dec
(bad)
popf
inc
sar
jns
push
jmp
adc
sub
fwait
pop
and
(bad)
xlat
adc
xor
out
sub
xchg
mov
cmps
test
sbb
mov
aas
rcl
pop
jb
dec
fisubr
loope
ret
xor
and
adc
xchg
sbb
xchg
jnp
inc
inc
vcomiss
jmp
rcr
imul
pop
stos
je
lea
rcl
inc
movs
mov
dec
or
lods
mov
add
out
and
out
fiadd
leave
pop
add
clc
shl
pop
add
push
and
or
pop
call
sub
mov
jp
adc
or
xchg
and
cmp
int3
xor
cli
xor
fwait
stos
mov
scas
call
or
jp
aaa
(bad)
pop
pop
add
mov
fimul
arpl
xor
cmp
dec
(bad)
pushf
mov
mov
out
push
sbb
mov
psrld
mov
sub
push
add
arpl
hlt
push
dec
cmp
add
pop
cmp
xor
jp
fimul
(bad)
cld
imul
enter
repz
fiadd
(bad)
inc
add
call
sbb
ins
rol
call
sbb
enter
dec
and
xor
lods
leave
pop
lods
call
ins
neg
and
iret
in
sub
outs
or
outs
ja
pop
stc
shl
xor
repz
call
cmp
add
daa
pop
aas
or
movs
rcl
sbb
push
pop
or
call
xchg
(bad)
cwde
dec
sbb
pusha
mov
inc
cmp
sbb
iret
sti
fcom
pop
or
mov
mov
(bad)
enter
adc
mov
push
push
jmp
pop
xchg
fistp
shl
push
xchg
repz
fidivr
call
jg
xor
fstp
xor
(bad)
mov
push
cmp
cs
adc
lods
fs
fwait
dec
mov
outs
retf
mov
cmp
loop
pop
add
jo
pop
push
dec
inc
lods
or
cmc
sar
push
ins
cwde
adc
(bad)
fiadd
jecxz
ss
mov
and
mov
hlt
loope
clc
test
adc
leave
mov
jl
push
mov
dec
daa
aas
mov
imul
ins
icebp
cmp
mov
lock
adc
test
xchg
shl
and
into
mov
mov
fcomp
pop
stos
fisub
mov
xchg
adc
out
in
push
rcl
push
shl
mov
xchg
ja
jnp
sbb
out
dec
pop
mov
or
add
xor
fidivr
push
(bad)
jle
enter
xchg
stos
push
lods
push
fucomi
aam
lea
cwde
inc
xchg
xchg
inc
adc
sub
cmp
cmp
arpl
jl
js
ret
idiv
into
call
adc
pop
xchg
popf
pushf
mov
fbstp
pop
xchg
add
dec
rcl
jge
in
inc
cmps
mov
xchg
add
mov
iret
mov
retf
mov
lods
jb
aaa
adc
mov
pop
sti
rcl
lods
jp
mov
and
jl
out
push
popa
mov
xlat
cs
lahf
retf
popf
clc
cmp
add
shl
fist
push
add
hlt
retf
cwde
push
cdq
xchg
pop
mov
mov
sbb
jl
dec
pushf
or
iret
xor
sbb
je
popf
and
pop
imul
sbb
dec
or
ret
mov
retf
mov
adc
icebp
sub
mov
ret
hlt
lgs
inc
xchg
inc
ins
test
jnp
or
ds
xchg
ficom
sbb
mov
call
pop
fisubr
xchg
dec
call
inc
sub
sbb
enter
pusha
mov
js
retf
xchg
arpl
mov
pop
ret
and
iret
mov
sbb
sbb
mov
sbb
mov
mov
out
lea
jge
loopne
push
ffreep
in
adc
retf
push
in
stos
xchg
pop
or
das
push
xchg
cdq
(bad)
cmp
je
fs
scas
sbb
or
cdq
out
mov
enter
jae
xor
test
sbb
mov
ins
(bad)
and
inc
adc
mov
mov
push
pop
inc
push
add
inc
pop
add
(bad)
rcr
fstp
fidiv
sub
fist
jecxz
mov
jmp
pop
sub
aad
pop
pushf
add
and
ja
add
push
cmps
shl
ja
inc
jmp
push
retf
out
push
sbb
inc
mov
jnp
jbe
leave
test
xchg
ss
cwde
dec
cli
fcom
cli
rcr
add
push
sub
(bad)
sar
adc
loop
mov
jl
ss
jbe
(bad)
mov
xchg
neg
and
add
in
push
movs
adc
outs
sti
neg
push
push
pushf
mov
fucomi
pop
mov
sbb
mov
dec
xlat
retf
and
dec
shl
ins
dec
inc
push
into
pop
retf
mov
aam
shl
enter
pop
cwde
lods
call
xchg
dec
dec
dec
(bad)
mov
addr16
dec
test
dec
aad
mov
iret
adc
dec
fwait
int3
adc
test
push
jge
fst
mov
pop
add
outs
xor
push
nop
call
(bad)
push
dec
pop
mov
cmps
imul
mov
sbb
jmp
pop
in
sub
loopne
cmp
xchg
push
push
push
test
push
sbb
or
cmps
pop
mov
mov
dec
stos
pop
ds
pop
sbb
mov
stc
aad
fstp
mov
cld
push
sbb
mov
mov
hlt
or
pop
stc
lds
sbb
cmp
sbb
int
pop
pop
push
aaa
xchg
lock
movs
ret
lock
jmp
lea
cmp
mov
fild
out
mov
xlat
adc
fcmovb
sbb
int
jp
test
ret
pusha
retf
pop
test
retf
addr16
sbb
mov
cmps
pop
nop
out
retf
mov
dec
mov
jmp
mov
mov
mov
fs
pop
or
(bad)
ficomp
jo
js
nop
sbb
in
pop
ficomp
(bad)
cli
fisub
pop
mov
cli
enter
jp
rcl
adc
or
jns
popf
push
sbb
mov
sub
dec
aam
dec
sub
mov
xchg
mov
inc
xor
jmp
jl
cmp
out
int3
ret
scas
nop
aam
jmp
and
xchg
jnp
xchg
jnp
sub
sbb
nop
pop
sbb
into
sti
retf
aam
lds
xchg
ja
clc
pop
pop
jo
test
(bad)
fld
xor
js
call
cmp
test
or
xchg
(bad)
fist
push
xchg
in
xor
in
jmp
les
lds
ret
adc
adc
mov
repnz
pushf
es
cmp
sub
fld1
shl
push
inc
aaa
inc
mov
jno
inc
push
push
xchg
or
loopne
mov
pop
adc
loopne
sub
mov
in
ret
xchg
retf
xchg
bound
fdivr
pop
jmp
xchg
mov
aas
push
mov
aam
sbb
push
imul
aas
cmp
mov
pop
jp
pop
cli
fs
ficomp
inc
nop
sbb
or
mov
pop
call
pop
sub
das
cmps
mov
jp
jecxz
inc
jg
pop
cmps
fwait
mov
pop
fdivr
addr16
cli
retf
fistp
sbb
rcr
jnp
sub
sbb
pop
popf
lea
cwde
mov
xchg
pop
xchg
ja
bound
addr16
sub
retf
pop
mov
out
sar
or
or
cmp
fiadd
fcom
fwait
sub
jl
lahf
imul
stos
int3
add
into
fidiv
iret
addr16
pop
scas
cmp
mov
(bad)
sub
mov
pushf
loopne
inc
cli
add
push
cmp
jmp
fistp
pop
push
push
ret
sub
and
xchg
cwde
mov
pop
jmp
add
enter
(bad)
sbb
iret
cs
pop
add
xor
fwait
or
(bad)
test
sahf
cdq
mov
inc
loope
xchg
imul
movs
fnstcw
fld
mov
inc
pushf
arpl
xchg
pushf
add
inc
xchg
jl
mov
or
jno
fcmovu
loopne
clc
xlat
push
mov
push
call
adc
jg
sahf
(bad)
sub
mov
mov
in
jmp
int
jle
and
mov
mov
cs
mov
dec
jne
jmp
mov
fdivrp
push
mov
mov
es
sub
cs
fs
pop
test
cmc
jbe
jg
ins
mov
mov
xchg
fbld
mov
xchg
push
or
bound
inc
inc
pop
stc
mov
and
fldenv
xchg
scas
cld
xchg
call
xchg
lea
stos
ds
test
adc
xchg
xchg
bound
sti
mov
jp
mov
call
pop
pop
out
test
mov
lock
sub
call
and
hlt
mov
pop
mov
jp
mov
fwait
cmp
sub
push
retf
pop
add
loopne
movs
pop
xor
adc
dec
jp
mov
mov
pop
imul
mov
pop
not
arpl
mov
sub
mov
push
nop
into
jmp
push
leave
arpl
pop
inc
into
xlat
mov
and
mov
xor
xchg
je
xchg
retf
xlat
adc
xchg
rcr
sbb
pop
push
inc
push
dec
xchg
stos
xor
in
or
jb
jg
rol
addr16
adc
fwait
sbb
bswap
imul
ss
jmp
dec
test
and
mov
xchg
cwde
das
inc
retf
in
mov
mov
pushf
or
mov
dec
mov
xor
into
cmps
xchg
test
jl
daa
push
jle
xor
sub
adc
mov
adc
out
mov
sub
daa
sub
sar
push
fidivr
call
cmps
mov
sahf
(bad)
retf
dec
pop
mov
cmp
mov
xchg
cmp
inc
jl
xchg
jle
int
iret
mov
jmp
push
cmp
dec
dec
sti
ret
pushf
mov
outs
(bad)
aam
fist
mov
(bad)
aaa
pop
pop
test
test
mov
jns
xchg
mov
pop
dec
mov
push
push
retf
mov
sub
mov
xchg
gs
adc
push
enter
pop
test
push
sub
inc
and
add
in
xchg
cwde
loope
jge
mov
jns
push
pop
nop
cmps
jg
sar
hlt
retf
shl
xlat
mov
mov
inc
jmp
clc
cli
out
jp
pop
xchg
lods
pop
call
test
inc
mov
add
fabs
das
fnclex
xchg
scas
mov
adc
scas
or
pop
and
aad
adc
scas
add
xchg
xchg
or
sub
jle
mov
pop
adc
cmp
add
stc
sub
dec
push
pop
jmp
(bad)
mov
pop
lods
in
xor
(bad)
jmp
mov
push
or
ficom
sub
icebp
call
fs
push
es
mov
sbb
pushf
pop
mov
sub
fimul
push
enter
aas
push
mov
mov
xlat
mov
test
sub
adc
loope
sbb
mov
jl
pop
fwait
sub
pop
rcl
push
dec
cld
dec
pushf
jmp
and
sbb
push
sub
call
push
js
jmp
scas
scas
stos
jns
nop
dec
push
stc
(bad)
cmps
add
push
fstp
pop
hlt
xchg
push
add
repnz
xlat
sti
push
cmp
fs
out
push
loopne
mov
repnz
mov
ror
stos
sbb
test
push
xchg
pop
sbb
mov
push
movs
cld
lods
test
push
fwait
popf
pushf
repnz
retf
mov
das
(bad)
mov
std
lods
sbb
neg
mov
cmp
and
pop
push
das
push
mov
dec
hlt
adc
dec
ret
pop
je
mov
ja
int3
cwde
mov
mov
stos
mov
outs
mov
jbe
xor
pop
sbb
pop
cwde
imul
test
sub
test
dec
xlat
fst
and
mov
popf
outs
adc
sub
jne
in
push
jecxz
lea
nop
jmp
sar
pop
clc
dec
dec
gs
lods
lea
div
jnp
rcr
int3
loope
sar
pop
mov
mov
mov
sub
xchg
mov
outs
dec
mov
xlat
clc
rcr
push
sub
aam
rcr
sub
mov
inc
dec
cld
int3
test
fwait
movs
lds
mov
stc
pop
pop
(bad)
mov
test
push
and
xor
idiv
mov
sub
xor
adc
jb
add
pop
mov
or
cmp
push
push
retf
sbb
outs
das
push
cld
xor
sub
xchg
mov
(bad)
(bad)
sahf
push
leave
test
mov
jp
ficomp
inc
mov
ret
pop
aas
lds
adc
pop
jp
aaa
or
retf
dec
pop
int3
mov
out
aad
adc
cmp
push
push
mov
sbb
dec
std
dec
pop
mov
std
retf
mov
jmp
jno
out
inc
cmps
pushf
and
rol
retf
fistp
jge
mov
pop
pushf
icebp
push
mov
xchg
and
cdq
stos
xchg
(bad)
clc
mov
pop
jg
lahf
dec
xchg
jmp
inc
shl
xchg
fidivr
mov
scas
fcom
lahf
repz
add
int3
out
cmp
das
push
je
mov
inc
xlat
fisub
aad
mov
cs
les
inc
lods
xor
clc
lea
sti
pop
jb
mov
push
arpl
cmc
ffree
mov
je
fmul
pop
mov
fwait
pop
sbb
push
mov
shl
inc
xor
mov
(bad)
push
cmp
xchg
mov
inc
inc
xor
sub
mov
test
dec
pop
pop
sbb
fcmovnbe
cmp
(bad)
cmp
mov
push
addr16
ret
adc
dec
or
adc
ret
js
sahf
adc
clc
or
xor
fild
aam
and
int3
add
or
push
(bad)
push
icebp
sub
jae
retf
lea
in
jnp
add
mov
fisttp
push
stc
stos
sahf
pop
pop
dec
xlat
adc
pop
cwde
lahf
in
jl
adc
lods
adc
cmp
(bad)
cmp
mov
sbb
pop
lock
or
mov
inc
sub
pop
mov
cmp
shr
rcr
push
addr16
mov
sub
add
dec
fnstcw
inc
xor
pusha
fnstenv
xor
dec
fsub
dec
mov
nop
pop
call
adc
push
ins
push
rcr
fs
ficomp
repnz
rcl
icebp
jnp
and
or
fwait
shr
mov
adc
(bad)
mov
dec
pop
daa
jmp
xlat
pop
movs
popa
test
mov
pop
(bad)
sbb
jno
mov
sbb
jae
or
xchg
or
xchg
sar
sbb
or
dec
arpl
test
adc
xor
jb
push
fcomip
stos
jecxz
fsub
dec
mov
or
stos
cli
and
mov
imul
fiadd
repz
sub
stos
pop
mov
sbb
sahf
adc
jno
(bad)
retf
fist
fimul
push
pop
push
inc
mov
stos
dec
xor
cmc
rcl
in
ret
pop
loopne
xchg
add
sub
addr16
push
mov
adc
sub
xor
cmp
pop
xor
cdq
ins
pop
or
fsub
push
ret
popa
jno
inc
sahf
pop
add
pop
retf
sub
mov
push
add
xchg
sahf
in
push
(bad)
(bad)
mov
or
icebp
dec
pop
push
or
mov
push
shl
push
fistp
stc
frstor
cld
pop
pop
pop
pop
fstp
sbb
jno
or
hlt
mov
sbb
mov
ds
clc
inc
aas
adc
fiadd
imul
jmp
fidivr
retf
lods
in
hlt
sbb
std
lods
daa
pop
imul
mov
mov
arpl
cmp
(bad)
fadd
out
nop
fistp
popf
aam
cmp
cli
sub
pop
fdivrp
test
cmp
pop
neg
sbb
rcr
or
cdq
cld
push
sbb
fcmovbe
xchg
pop
aad
xchg
fimul
pop
ss
test
and
imul
cmp
shl
jg
or
fsub
arpl
aad
fs
xchg
pop
and
adc
pop
dec
shl
fiadd
retf
ficom
aam
movs
daa
pop
pushf
ror
mov
adc
sbb
sbb
imul
jg
into
push
ja
rcl
pushf
les
adc
sbb
push
test
xor
add
jns
cld
push
les
push
dec
sbb
cwde
loop
sbb
popa
pop
cmp
sub
call
retf
pop
inc
stos
hlt
and
sti
mov
mov
call
sbb
loope
adc
xchg
ficomp
outs
rcr
pop
sbb
retf
mov
or
shr
stos
mov
loop
add
sbb
mov
std
pop
push
adc
daa
stos
fwait
cmp
mov
lahf
sahf
cld
adc
rcr
or
sub
mov
(bad)
cmp
fisttp
and
(bad)
hlt
jno
mov
stos
(bad)
retf
cmp
mov
adc
test
imul
fisub
arpl
mov
shl
add
sbb
popa
fstp
clc
lods
stos
lahf
aas
xchg
xlat
dec
mov
push
lahf
fld
lahf
lea
sbb
pop
mov
ret
dec
jp
sti
daa
pusha
mov
dec
ins
xchg
mov
inc
cmc
cmp
stos
ss
pop
cmp
repnz
mov
outs
imul
mov
imul
dec
test
cmp
mov
add
pop
pop
push
inc
jmp
(bad)
movs
push
cdq
push
out
mov
push
sbb
add
out
into
arpl
ficomp
xchg
ds
pop
ret
ss
xor
pop
ja
dec
out
dec
pop
sti
test
or
sub
jle
mov
pop
dec
ror
popa
(bad)
xchg
lods
cwde
adc
mov
retf
lock
fwait
jle
scas
mov
cmps
fnstcw
pop
call
or
cmc
add
(bad)
push
or
loope
fcomp
xlat
and
div
jae
xchg
and
pop
fsubr
repnz
dec
mov
dec
mov
test
movs
sub
pop
dec
cmp
dec
sbb
sbb
call
(bad)
imul
mov
fwait
pop
or
stc
cld
repnz
lods
lea
pop
mov
and
clc
mov
jmp
add
int3
ins
pusha
and
test
mov
pop
xor
or
cwde
lods
xchg
pop
shl
inc
push
(bad)
xchg
(bad)
or
scas
aaa
xchg
adc
cld
push
(bad)
xlat
stc
xor
xchg
xchg
sbb
pop
pop
xor
xlat
xchg
cli
mov
inc
sbb
push
cld
xor
mov
sti
gs
sets
cmp
mov
push
scas
ror
out
mov
cmp
sbb
xchg
cld
test
cmp
sahf
dec
test
popf
jb
into
call
push
jns
add
int
mov
shr
xchg
add
add
xor
int3
pop
add
ret
call
jecxz
mov
add
cmp
xchg
loope
cmc
pop
loopne
or
lahf
pop
jmp
push
xor
add
retf
les
addr16
addr16
les
pop
sbb
mov
(bad)
pop
xor
mul
ret
cmc
inc
sub
push
dec
ja
sbb
cmp
daa
mov
mov
fisttp
test
mov
mov
ins
sub
imul
or
and
xchg
jb
mov
sub
xchg
out
mov
pop
and
addr16
das
(bad)
adc
or
rcr
and
mov
ins
xchg
call
dec
sbb
xor
packsswb
cmp
cmp
pop
dec
jmp
mov
frstor
dec
pop
movs
mov
in
push
les
outs
mov
(bad)
cmp
fdiv
xchg
cmc
sub
sahf
(bad)
fadd
fidivr
sbb
adc
(bad)
retf
(bad)
dec
mov
imul
sar
jne
mov
mov
sub
mov
push
pop
push
fist
push
dec
ins
push
out
push
push
rcl
fcmovbe
fcom
rol
pop
sbb
sbb
fstp
push
inc
push
sub
cld
or
pop
nop
(bad)
outs
push
dec
(bad)
adc
cld
(bad)
out
retf
or
(bad)
dec
inc
push
je
mov
cmp
cli
ja
mov
aad
adc
push
sbb
jno
xchg
or
sub
push
aam
push
jbe
js
pop
rol
push
mov
sub
aam
test
hlt
push
nop
sbb
xchg
jl
xlat
jg
push
int
ins
cmp
in
enter
xchg
jg
(bad)
sub
or
push
in
push
fwait
sbb
in
mov
retf
fidiv
in
mov
test
or
call
xchg
add
rol
ja
ret
jbe
mov
repnz
mov
sahf
sahf
daa
push
movs
adc
sbb
test
pop
out
daa
test
retf
pusha
sub
aas
and
movs
xchg
(bad)
sub
push
repnz
mov
test
lods
push
aam
sahf
sbb
mov
adc
adc
mov
and
iret
movs
inc
fcmovbe
lods
fmul
sbb
or
ds
lock
add
ins
mov
iret
push
dec
add
add
pushf
dec
std
outs
jne
(bad)
loopne
cmp
and
repnz
mov
mov
aam
(bad)
mov
xchg
jb
push
mov
push
fistp
sbb
es
pop
xor
pop
stos
mov
inc
outs
mov
cmp
jp
stos
dec
cs
xor
pop
(bad)
mov
cld
dec
sahf
cmp
add
inc
mov
mov
xor
ja
fnsave
mov
or
mov
pop
out
ja
pop
mov
jns
stos
enter
dec
mov
sub
add
pusha
mov
sub
in
neg
out
jmp
adc
jns
xchg
push
jge
sahf
adc
out
pop
test
add
push
loopne
cmp
sub
rcl
cmp
mov
fist
and
nop
dec
adc
or
fidiv
fs
lods
(bad)
in
shr
jle
pop
pop
sti
jg
nop
dec
fs
out
retf
pop
or
fisttp
fst
xchg
push
pop
mov
(bad)
fst
adc
fs
pop
add
fisub
test
je
sub
mov
movs
pop
adc
pop
sbb
jmp
fstp
stos
out
(bad)
fbstp
pop
fnsave
lods
cmps
pop
outs
dec
sub
int3
push
cmp
loopne
pop
cwde
mov
fst
pop
sbb
rcr
xor
and
dec
jb
xchg
mov
pop
push
shr
pusha
add
mov
cwde
mov
(bad)
fisttp
or
jo
pop
xlat
cli
mov
fisttp
test
adc
(bad)
repnz
leave
xor
rcr
mov
call
pop
inc
(bad)
pop
cld
das
cmp
out
pushf
xlat
out
pop
aam
dec
pop
mov
out
and
iret
lahf
cmp
out
push
test
(bad)
cwde
pop
sub
(bad)
mov
add
inc
aas
dec
push
and
cdq
lods
icebp
push
sbb
pop
sbb
jb
mov
cdq
daa
fmul
mov
fidivr
out
sbb
add
call
fwait
sub
sbb
imul
sub
shl
pop
mov
fwait
sbb
jecxz
or
data16
mov
push
xor
dec
dec
mov
adc
jo
adc
pop
xchg
fist
pusha
or
cld
sbb
jmp
sbb
xchg
lock
pop
pop
push
jne
or
xchg
mov
push
test
mov
mov
sahf
(bad)
mov
or
xchg
pop
push
xor
mov
adc
arpl
adc
mov
push
adc
jmp
jp
push
xor
arpl
rol
and
lds
(bad)
mov
test
ds
jp
retf
push
sahf
scas
call
(bad)
push
pop
jmp
addr16
mov
lods
loopne
mov
xchg
xor
sub
cmps
movs
sbb
or
mov
(bad)
shl
push
pop
add
enter
ret
(bad)
mov
stos
out
fcmovu
pushfw
pop
fstp
pop
retf
mov
lock
test
popf
sub
hlt
nop
test
sub
stos
ror
and
bnd
inc
sbb
fs
dec
jl
and
mov
and
or
aad
iret
test
pop
jae
fisubr
in
loopne
mov
pop
cwde
loop
xchg
out
xchg
cmp
adc
cdq
push
xchg
inc
xchg
mov
scas
and
inc
or
or
xor
out
dec
inc
aaa
sahf
xlat
movs
popa
push
stos
cmp
scas
mov
sbb
cmp
stos
movs
pusha
inc
mov
jecxz
fiadd
jns
pop
aad
sub
fwait
in
add
call
pop
push
das
push
scas
dec
mov
fst
dec
xchg
in
pop
imul
and
stos
push
retf
fistp
pop
out
pop
push
popa
jne
fcomp
push
xchg
mov
mov
jp
pop
retf
jecxz
shl
je
pop
xor
bound
xor
scas
pop
mov
sbb
aam
mov
lahf
fcom
pop
add
into
push
or
inc
xchg
movs
mov
inc
cdq
pop
ficom
sbb
fdiv
mov
jle
outs
pop
cli
mov
sub
lock
leave
push
jecxz
sahf
clc
rcr
sbb
push
cli
pop
pop
sbb
sub
mov
fstp
scas
pop
inc
pushf
mov
pop
or
pop
add
call
ret
dec
inc
ror
stc
mov
(bad)
add
mov
imul
test
iret
dec
or
mov
jecxz
or
mov
add
pop
push
(bad)
test
push
pop
aad
pop
sbb
add
stos
jg
hlt
inc
adc
ins
cmp
inc
popf
(bad)
push
popf
popa
push
loopne
mov
mov
out
fidivr
pop
add
leave
hlt
dec
mov
daa
out
mov
repz
mov
sub
push
fwait
cmc
adc
and
cmp
sub
nop
add
test
pop
addr16
pop
nop
sti
mov
int3
and
fcmovbe
test
repz
clc
pop
scas
cmc
mov
retf
repnz
sbb
jnp
pop
inc
xchg
push
mov
lods
data16
pop
aam
jp
jae
inc
sahf
pop
push
loop
test
adc
retf
pop
pop
call
sbb
std
sahf
mov
cs
fisub
in
fmul
pop
or
inc
pop
setb
xlat
sbb
add
push
pushf
push
dec
push
(bad)
add
pop
aaa
xchg
pop
cmc
xchg
fwait
(bad)
ins
call
nop
pop
sub
sbb
pop
pop
jnp
xchg
pop
sbb
bound
pop
call
ss
seto
(bad)
fwait
adc
jnp
mov
mov
and
mov
xchg
xlat
and
cmp
jl
mov
cld
xor
push
push
xchg
push
lock
dec
mov
neg
adc
push
(bad)
in
int
cmp
call
lods
xchg
adc
pop
sti
jle
pop
test
out
out
cmp
jnp
sbb
aaa
cld
clc
push
inc
hlt
(bad)
lods
(bad)
xchg
fisubr
mov
push
ins
mov
adc
ja
xchg
pushf
dec
and
stos
cmps
xchg
aad
xor
dec
jbe
loope
pop
into
clc
fimul
pop
xor
pop
push
mov
jl
test
inc
out
stos
ret
mov
xor
mul
cmp
jbe
movs
cmp
cli
sub
dec
stc
jo
jno
pop
popf
xchg
mov
xor
jp
addr16
outs
jne
stos
ds
mov
cmc
mov
mov
sub
fisubr
jno
test
rcr
mov
bound
or
pop
test
ror
sahf
out
add
imul
sub
jbe
sbb
sbb
cmp
inc
mov
sti
rcr
(bad)
leave
push
movs
sar
mov
sub
popa
das
std
leave
mov
cmp
rcl
cmp
cwde
movs
scas
adc
mov
fcmovnu
xchg
retf
cmp
scas
mov
rcl
(bad)
push
fcom
or
adc
mov
fild
mov
outs
fcomi
lds
ror
fistp
rol
rcl
pop
add
pop
loop
xor
sbb
push
adc
mov
rcr
jl
mov
lahf
adc
daa
repz
pop
mov
sbb
aad
ins
mov
nop
xchg
sub
popa
(bad)
sbb
call
mov
or
push
aas
arpl
clc
loopne
repnz
mov
arpl
and
outs
mov
inc
ins
mov
cmp
or
push
ret
arpl
movs
dec
jl
add
pop
fwait
pushf
inc
test
(bad)
xchg
stos
and
add
and
test
addr16
adc
addr16
pushf
xor
pop
xchg
inc
fnstenv
outs
pop
lea
int3
and
stos
dec
push
(bad)
mov
xchg
mov
jb
jns
int3
and
inc
and
jl
push
(bad)
(bad)
cli
mov
inc
sub
shl
inc
xor
mov
repnz
inc
sub
and
xchg
sub
xchg
rcr
ja
outs
cmp
push
push
cmc
mov
stos
lds
push
pop
pop
stc
cs
in
cs
xchg
dec
out
arpl
xchg
push
push
pop
jno
and
sbb
and
push
mov
pop
dec
stos
dec
mov
lock
sub
push
(bad)
sbb
hlt
pusha
std
and
dec
test
lods
mov
dec
xchg
inc
xchg
jmp
ja
mov
push
cli
sbb
fsubrp
sbb
push
loope
sbb
dec
cli
xchg
scas
push
xor
pop
sbb
stos
pop
fild
adc
test
clc
cmp
mov
adc
retf
and
icebp
push
pop
pushf
push
out
mov
jne
idiv
out
mov
mov
cdq
cwde
jo
jnp
or
inc
movs
inc
sbb
ss
stos
(bad)
sub
imul
sub
mov
mov
bound
out
retf
dec
jbe
jle
or
sub
mov
dec
inc
cmp
jno
inc
pop
(bad)
mov
mov
and
imul
pop
outs
xchg
fsubr
loopne
fsubrp
mov
call
mov
leave
sub
sti
pop
cli
or
test
mov
into
jbe
jo
mov
mov
jnp
xchg
out
jl
xchg
imul
pop
pop
cmp
stos
(bad)
mov
hlt
lds
mov
addr16
mov
enter
xchg
shl
outs
add
les
ins
dec
jbe
cmp
lock
pop
shl
mov
sub
outs
fmul
mov
pop
out
inc
addr16
nop
inc
cmp
xchg
cmp
loope
jecxz
fmulp
sbb
fsubr
cld
adc
lds
inc
xchg
hlt
jmp
add
pop
mov
(bad)
imul
jg
and
aad
inc
mov
retf
pushf
aas
and
mov
or
sbb
inc
jmp
sbb
cli
sub
imul
jmp
imul
popa
mov
sub
inc
jl
test
mov
sub
fcom
aad
lock
mov
aaa
retf
or
push
cdq
arpl
xor
ins
cmp
xor
int
hlt
sar
inc
test
jbe
leave
stc
dec
cmp
and
inc
fs
adc
in
call
stos
pushf
and
int3
out
inc
mov
push
pop
sbb
dec
and
adc
cmc
stc
xchg
stc
cwde
div
daa
mov
imul
out
adc
sbb
mov
fndisi(8087
mov
pop
and
mov
pop
pop
xor
ficomp
cmc
mov
inc
mov
lds
js
loop
mov
neg
popa
push
fstp
push
mov
pushf
repnz
call
retf
inc
ins
repnz
cmp
clc
(bad)
jnp
or
scas
push
(bad)
addr16
out
cs
xchg
and
movs
adc
mov
lds
ret
sub
test
mov
xor
push
mov
into
pop
bound
and
pop
shr
cmp
aad
aad
aam
rcr
fistp
daa
ror
push
jl
dec
push
jne
cld
sbb
or
inc
xor
out
xor
jecxz
aam
push
shl
dec
mov
imul
(bad)
addr16
mov
ret
sbb
adc
test
lods
mov
rcl
neg
fwait
sub
jmp
pusha
lods
test
xchg
inc
mov
addr16
pushf
inc
shr
scas
and
cmp
cmp
cmp
cmps
pop
sbb
test
jnp
inc
push
push
push
mov
mov
adc
repz
jl
pop
data16
mov
and
mov
sub
sbb
retf
adc
sub
jg
or
xchg
mov
or
adc
xchg
fs
push
inc
mov
xchg
sub
out
and
add
inc
and
jae
mov
int
adc
jae
jbe
in
jo
mov
stos
sub
cmp
and
jb
shr
mov
bound
mov
jl
inc
adc
in
iret
push
stc
nop
push
sub
inc
stos
(bad)
arpl
nop
pop
inc
ss
cmps
mov
mov
lock
movsx
sahf
icebp
out
fcmovu
jmp
sti
fdiv
clc
adc
lock
shr
int3
pop
call
xchg
pop
mov
retf
mov
pop
mov
or
mov
ins
push
rcr
stc
loop
adc
push
setns
mov
jns
jmp
jbe
(bad)
push
retf
(bad)
fldz
jae
mov
xor
jnp
cmps
stc
adc
add
lods
add
ror
mov
mov
push
popf
outs
cmp
adc
pop
add
movs
leave
test
outs
add
mov
and
xchg
sub
add
push
pop
call
popf
pop
rol
and
aad
jp
cmc
xchg
mov
jae
push
scas
pop
adc
call
mov
rcl
cli
xchg
test
psrad
add
imul
sub
sub
mov
ja
push
and
into
fdiv
pop
ss
ficom
call
inc
int3
cmps
aam
and
push
fidivr
test
adc
xchg
or
fdiv
inc
sbb
fcom
pop
int3
mov
add
sahf
arpl
dec
outs
cld
outs
daa
sbb
xchg
loope
mov
enterw
cmp
ficom
xlat
pop
inc
imul
ror
fwait
mov
mov
xchg
(bad)
xchg
cmp
push
(bad)
pop
xor
enter
mov
enter
jmp
aad
inc
or
lea
retf
rcr
xlat
push
pop
adc
fld
pop
ds
xchg
fbstp
cmp
test
mov
adc
gs
outs
test
jmp
mov
in
sbb
js
fdivp
adc
and
cs
xchg
push
fmul
test
fwait
ror
sti
add
cs
dec
pop
pop
inc
mov
in
ret
mov
jnp
rcl
retf
dec
fsubr
arpl
dec
sbb
inc
adc
test
test
pop
sbb
pop
aad
imul
icebp
adc
call
mov
test
and
mov
sbb
retf
cmps
adc
cmp
pop
sbb
fs
jne
loop
sub
in
adc
repnz
ret
sbb
fs
ds
jmp
ret
xchg
push
cmp
mov
push
fld
push
sbb
aam
pop
mov
(bad)
pop
push
pop
fs
les
push
or
xchg
cmp
sbb
cwde
dec
cmp
mov
sbb
push
cmp
rcl
xchg
pop
dec
ret
sub
adc
pop
pop
pop
lahf
inc
mov
cmp
xor
sbb
mov
sub
mov
ret
xchg
adc
ficomp
mov
cwde
or
dec
loope
push
popa
mov
xchg
jnp
cmp
sti
pop
xchg
aad
fdiv
xchg
test
test
jmp
jp
test
retf
imul
or
mov
movs
shl
cli
bound
fsub
in
mov
jmp
leave
ins
or
sub
mov
jno
and
jmp
cwde
dec
in
pop
jmp
push
jmp
dec
fs
push
or
jmp
test
dec
fdivr
jne
fist
in
fwait
add
(bad)
jb
mov
dec
jmp
mov
test
sbb
stc
jae
mov
dec
jmp
pop
jmp
test
sbb
jp
jmp
and
sub
outs
into
xor
dec
shl
adc
movs
push
jp
jmp
ja
jmp
xor
add
adc
(bad)
cli
push
jmp
fnstsw
jmp
pop
mov
jns
retf
clc
xlat
pop
and
dec
jmp
mov
call
or
or
stos
lods
cmp
jmp
mov
push
adc
cmp
mov
push
mov
cmp
pop
pusha
pushf
inc
int3
sbb
jmp
mov
pop
jmp
pop
jnp
int3
sub
cmp
sahf
cwde
xchg
(bad)
stos
pop
sbb
cdq
mov
bound
mov
fdivr
or
jmp
imul
pop
neg
push
cmp
mov
add
jmp
pushf
xchg
fbld
jmp
sub
add
adc
bound
retf
pop
jae
ins
rcr
sub
inc
test
xlat
lods
lods
aaa
sub
adc
mov
mov
lods
add
mov
aam
ret
push
mov
and
xchg
aam
jmp
aam
adc
cwde
sbb
jb
retf
xchg
imul
adc
test
fcmove
test
push
in
push
add
push
les
stos
aas
sub
popa
pushf
ret
(bad)
mov
jg
scas
lods
inc
sub
cmp
sbb
adc
adc
or
mov
sbb
sbb
push
jl
and
mov
ret
xchg
xchg
xchg
retf
push
fstp
xchg
cmc
gs
call
mov
aaa
popa
cmps
int3
or
adc
push
push
movs
add
stc
or
in
call
cs
and
push
push
arpl
retf
gs
jne
jnp
punpckhbw
dec
mov
outs
xchg
pop
sti
adc
adc
mov
xchg
mov
out
mov
pop
leave
sbb
mov
push
mov
test
adc
cmps
mov
jmp
pushf
fidivr
adc
xchg
add
xchg
xor
xchg
xlat
mov
mov
cmps
mov
adc
sub
lea
push
mov
out
xlat
(bad)
aaa
jne
retf
sar
fldenv
mov
cmp
fwait
call
push
xchg
(bad)
mov
push
push
retf
or
push
cmp
pop
frstor
sbb
out
test
int
test
mov
add
cmp
mov
nop
into
cmps
mov
fcmovbe
test
mov
mov
pop
fidiv
xchg
mov
pop
lods
out
fidivr
ret
mov
pop
mov
xchg
(bad)
xor
dec
fstp
sbb
pop
bound
cmp
jecxz
xlat
out
cmp
adc
mov
cmc
mov
or
mov
fild
jnp
dec
pop
jmp
sahf
inc
popf
idiv
retf
xchg
cld
ficomp
or
inc
jb
adc
dec
push
mov
jmp
retf
pop
cmp
fs
adc
pop
xchg
call
mov
sbb
call
jmp
jmp
pop
add
cmp
fstp
cmp
mov
test
adc
jmp
inc
pop
sbb
aaa
push
push
mov
mov
dec
ds
movs
aad
mov
into
arpl
mov
mov
popa
retf
xchg
cmp
pop
jp
adc
sbb
pop
arpl
nop
cdq
sbb
mov
aad
add
jae
push
dec
mov
xor
mov
and
ret
add
adc
mov
push
in
lods
sti
push
jno
loope
cmps
fst
cmp
adc
sti
xchg
stc
push
scas
dec
pop
and
pop
adc
jp
jae
dec
xchg
xor
mov
jmp
mov
jle
and
sti
push
in
call
test
cmp
pop
mov
aad
dec
xchg
jp
jecxz
jl
xchg
xchg
push
enter
pusha
sbb
and
ins
push
inc
(bad)
retf
add
(bad)
dec
sub
mov
fimul
sub
aam
ds
(bad)
sub
rol
add
xor
cmp
sahf
and
or
jl
in
dec
rol
int3
mov
xchg
cmp
into
movs
lods
loope
ror
icebp
sub
test
cdq
push
fldl2t
shr
xchg
mov
cmp
xor
pushf
pop
dec
js
mov
mov
lods
mov
popf
pop
dec
in
jle
dec
(bad)
fwait
sar
retf
mov
fisub
sbb
loop
das
clc
xchg
fbld
(bad)
scas
mov
or
(bad)
push
xchg
pop
int
dec
fist
test
int3
adc
push
adc
mov
adc
les
mov
mov
(bad)
icebp
pop
inc
adc
adc
daa
imul
mov
fucom
push
aad
and
cdq
push
clc
jmp
jo
or
(bad)
adc
daa
mov
imul
fdivr
sub
pop
std
sbb
enter
inc
pop
sub
sbb
dec
sub
sbb
ja
and
sbb
push
adc
ja
cmp
stos
sub
adc
test
idiv
or
fisubr
and
xlat
adc
test
sub
mov
loopne
imul
or
leave
fld
ins
call
jbe
dec
mov
int3
(bad)
fimul
ss
sti
add
sub
jmp
add
imul
dec
fisubr
push
pop
inc
out
lods
mov
mov
pop
mov
dec
shr
jl
xor
mov
cmp
pop
mov
loope
pop
dec
xchg
jp
xchg
xchg
push
(bad)
pop
fwait
popa
mov
mov
aas
call
adc
push
loopne
stc
imul
(bad)
jl
sbb
xchg
into
sar
enter
sub
sub
mov
loope
mov
push
push
in
add
retf
push
cmp
popf
mov
fwait
dec
icebp
mov
enter
add
jl
fimul
mov
retf
mov
out
adc
mov
mov
(bad)
aad
push
xlat
inc
xchg
cmc
sbb
lock
sub
leave
inc
sti
shr
fnstcw
jb
inc
outs
push
inc
(bad)
ins
inc
xlat
arpl
mov
aad
cdq
sub
movs
pop
int3
(bad)
stos
add
push
and
rcr
mov
nop
jecxz
sub
(bad)
ror
in
mov
xor
xor
mov
jnp
xchg
mov
and
cdq
movs
lock
mov
addr16
push
mov
std
xchg
cmp
bound
cmp
mov
xchg
pop
call
ror
mov
jno
inc
mov
cmp
or
push
mov
data16
adc
out
xchg
mov
into
lods
xchg
stos
rol
cmp
push
mov
adc
or
rol
xor
stos
call
and
pushf
gs
mov
and
lahf
fs
sub
(bad)
dec
sti
or
addr16
sbb
or
cmp
movs
sub
mov
adc
pusha
xlat
inc
(bad)
mov
aam
cdq
pop
sbb
sti
jo
xor
inc
sbb
mov
push
sbb
xchg
pop
out
cld
push
pandn
rol
xchg
add
outs
or
imul
add
cdq
mov
outs
jno
cmp
adc
call
pusha
xor
loop
adc
inc
pop
into
xchg
scas
xchg
xor
fldenv
ret
mov
cmp
xchg
rcr
inc
dec
ror
mov
call
fs
mov
add
lahf
jmp
rcl
push
fst
paddusw
push
lahf
(bad)
fistp
test
dec
pop
into
push
cmp
push
into
ins
push
cmp
call
mov
fisttp
mov
adc
fstp
pop
stc
cmp
xor
test
push
cmp
mov
movs
dec
ins
pop
fs
or
test
(bad)
iret
push
push
bound
arpl
jmp
xor
sub
jb
push
sbb
sbb
call
repnz
icebp
(bad)
retf
fnstsw
scas
inc
rol
pop
mov
enter
dec
mov
mov
xchg
(bad)
push
retf
mov
das
test
jno
push
or
into
(bad)
(bad)
rcr
fstp
lea
into
stos
mov
inc
push
mov
scas
add
xchg
xchg
push
mov
int3
pop
mov
iret
cdq
stc
ret
inc
xchg
push
pop
xchg
idiv
xchg
mov
idiv
xor
daa
pop
xchg
mov
or
inc
adc
adc
mov
fidiv
xlat
adc
aaa
push
and
mov
xchg
jbe
dec
add
dec
xchg
in
mov
add
jge
sahf
push
xchg
lock
and
add
hlt
pop
pop
inc
push
daa
mov
rcr
test
in
sti
js
mov
mov
and
imul
sbb
repnz
into
sbb
jmp
ret
ret
mov
leave
outs
xor
sti
mul
add
ins
add
into
mov
(bad)
dec
imul
or
cdq
adc
mov
shr
xchg
dec
cli
in
sbb
inc
popa
int
mov
fsubrp
fnstenv
push
popf
fidivr
(bad)
shl
(bad)
imul
arpl
push
arpl
loop
mov
daa
not
cmp
inc
es
jae
pop
cdq
sbb
fisub
xlat
dec
inc
fwait
ror
xor
jle
(bad)
fistp
cs
mov
mov
in
inc
idiv
push
push
(bad)
pop
fwait
cld
xchg
(bad)
sar
pop
fwait
mov
xchg
fs
pop
adc
pop
out
ret
(bad)
clc
mov
clc
jge
jmp
dec
iret
cmp
jmp
add
xchg
sahf
pop
cld
mov
out
leave
not
push
push
xchg
inc
repnz
push
loopne
inc
xchg
call
pop
int
push
fld
fwait
mov
shl
fcomp
mov
out
cmp
xchg
push
std
retf
xor
sbb
mov
xchg
mov
cmp
dec
mov
xchg
cld
retf
jmp
cmps
int3
shl
bound
fisttp
lahf
and
fnstsw
sar
bound
out
stos
xor
mov
dec
xor
cs
fwait
cwde
int3
pop
aam
mov
mov
pop
sbb
aad
(bad)
rol
sbb
xchg
and
dec
dec
push
cmps
and
lods
int
pop
fmul
fmul
ror
cwde
aad
mov
dec
arpl
push
fmul
sbb
xchg
neg
aas
fisubr
test
loopne
cmps
xchg
(bad)
xlat
test
push
fst
pusha
inc
cmp
mov
xor
scas
jp
push
and
sub
dec
int3
movs
retf
pop
push
sahf
pusha
out
int3
dec
in
ins
dec
add
inc
iret
pop
cwde
js
mov
mov
cdq
and
mov
pop
inc
cmp
push
pop
daa
fnstenv
pop
xor
(bad)
pop
fcomp
push
jge
enter
cld
xchg
adc
ret
outs
enter
pop
jecxz
mov
mov
rcl
mov
mov
pop
mov
jo
sub
cld
cli
inc
sbb
adc
push
jge
(bad)
stos
sbb
pop
les
jnp
(bad)
pop
out
inc
sbb
push
inc
and
ror
int3
jmp
pop
cdq
cld
dec
movs
es
lds
pop
and
jmp
fldz
clc
cmp
jl
sbb
mov
fist
xchg
rcr
ja
push
dec
sbb
jo
xor
arpl
mov
in
sahf
sub
sub
xor
dec
xor
sub
inc
jmp
xchg
xchg
cmp
out
push
out
mov
adc
cs
je
lds
(bad)
mov
dec
xor
xchg
dec
(bad)
pop
push
adc
in
daa
jg
sbb
push
and
data16
or
xchg
fdivr
jbe
mov
adc
dec
rcl
inc
lahf
arpl
xor
lea
mov
pop
call
ffree
movs
call
pusha
xlat
fstp
mov
(bad)
push
inc
sbb
nop
mov
mov
add
jb
lea
push
stos
std
outs
xor
jl
pop
out
add
mov
sbb
(bad)
jae
xor
pop
mov
retf
dec
test
mov
mov
inc
fimul
fwait
pop
mov
loopne
pop
xor
jns
inc
inc
push
ficomp
aam
pop
jnp
adc
inc
push
jae
xchg
arpl
movs
cmp
loope
je
(bad)
hlt
repz
cld
(bad)
cmps
inc
call
stos
fisub
xchg
fmul
fistp
in
fld
test
cs
inc
add
dec
sub
(bad)
adc
mov
dec
cmp
xchg
ds
pop
(bad)
mov
into
jmp
mov
mov
inc
or
enter
int3
xchg
stos
icebp
or
movs
or
into
cmp
ss
adc
out
xchg
mov
ret
fnsave
retf
pop
(bad)
push
sti
mov
scas
inc
rcl
dec
or
mov
sbb
push
mov
or
xchg
fild
add
mov
jbe
add
cld
mov
aaa
dec
inc
aad
cmp
mov
xor
sbb
je
jb
hlt
ret
ret
jns
aas
lahf
sbb
jmp
jg
mov
fld
aad
test
ret
sbb
mov
outs
mov
imul
or
mov
lock
addr16
sub
not
mov
xchg
add
inc
or
test
xor
pop
je
xor
in
dec
pop
xchg
stos
fwait
cmp
fdiv
pop
ins
cmp
mov
jmp
xor
mov
test
sbb
pop
ret
sbb
iret
in
cmps
add
or
mov
out
dec
mov
mov
xor
cmps
iret
mov
out
ss
retf
inc
xchg
xlat
xor
pop
dec
mov
dec
push
sbb
sbb
mov
or
jmp
dec
cli
sbb
stc
inc
mov
sar
jmp
jecxz
push
out
xchg
clc
mov
mov
mov
jl
mov
jae
rcl
test
mov
sub
fdiv
xlat
and
xchg
(bad)
in
movs
xchg
cwde
dec
loope
loopne
sbb
jne
cwde
push
cmp
lock
aam
and
in
enter
pop
adc
test
mov
inc
or
dec
fstp
xchg
mov
stos
(bad)
or
pop
mov
ret
xchg
nop
sbb
jnp
xchg
jne
sbb
adc
cmp
sub
cmc
add
bound
cld
aas
xchg
fcmovu
test
scas
sbb
ret
loop
mov
and
int
cdq
cmp
in
and
and
stos
int
fmul
in
test
jmp
pop
sub
fnstenv
stos
and
jp
ins
mov
pushf
pop
sbb
push
and
mov
ss
pop
out
stos
pusha
fwait
cmp
out
pop
push
aas
pushf
add
in
sbb
push
mov
lods
adc
lods
add
jmp
test
push
lods
js
fwait
cmp
jmp
pop
mov
iret
pop
sub
or
addr16
xchg
mov
rcr
cwde
repz
retf
fistp
mov
lahf
pop
or
call
cmp
push
out
int3
pop
cmp
xor
inc
push
dec
cmp
pop
das
xchg
xchg
gs
rcl
fisub
mov
xchg
pop
cwde
fild
inc
adc
aas
outs
(bad)
mov
ror
out
mov
shr
sub
mov
mov
mov
sub
fist
mov
ds
add
repz
fcmovnu
mov
mov
(bad)
popf
and
and
pop
adc
or
retf
ins
js
pop
sbb
sti
inc
pop
push
lock
push
adc
jmp
push
cdq
loope
lods
sub
sub
pop
fistp
not
and
enter
pop
cld
popf
dec
pop
arpl
mov
mov
and
aam
fist
jns
gs
cmp
fnstcw
pop
(bad)
out
cmps
out
xchg
(bad)
push
and
mov
xchg
jp
test
jmp
ss
mov
leave
push
jnp
mov
jb
mov
dec
mov
in
cmp
bndstx
cwde
sbb
fst
(bad)
sub
jecxz
push
xchg
fist
icebp
ficom
xchg
fdivrp
pop
push
or
push
pop
outs
fs
cmp
adc
fiadd
fdivrp
fisub
mov
sub
dec
sbb
xchg
push
dec
ret
xchg
cmc
out
jb
stos
pop
sbb
sub
rcl
ss
jb
xchg
adc
jb
pop
jl
or
scas
push
and
fisubr
pop
je
idiv
pusha
aad
leave
test
ins
retf
xchg
pusha
jmp
call
repnz
ss
add
jno
addr16
aad
imul
call
and
cmps
jle
loop
mov
pop
je
pop
mov
xchg
pusha
push
out
adc
div
or
xlat
ins
push
movs
pop
cmp
aaa
mov
add
xchg
das
jl
mov
add
jae
jae
mov
aad
adc
dec
pop
mov
ret
stos
retf
call
jne
fimul
and
mov
mov
mov
sbb
cmovno
enter
mov
xchg
dec
adc
sub
test
test
jne
mov
sbb
push
(bad)
jmp
inc
div
ficomp
cmps
mov
ja
lahf
pushf
loopne
cli
jmp
aam
cmp
ja
ds
out
push
push
ret
aad
test
fucom
shl
sub
in
icebp
mov
fwait
push
pop
imul
pop
es
call
pop
mov
mov
and
je
adc
in
pop
mov
dec
pop
lds
out
add
hlt
sub
inc
inc
cmp
push
mov
(bad)
cmps
mov
ja
repz
jbe
loop
cwde
xchg
mov
test
movs
fild
mov
ins
stos
test
shl
mov
mov
mov
lods
jo
pop
xlat
mov
(bad)
arpl
xchg
sub
push
cld
adc
dec
in
ins
inc
sub
div
cdq
push
inc
scas
push
dec
push
pusha
pop
adc
xor
pop
pop
in
add
int
push
sbb
sbb
dec
adc
sbb
xor
and
jns
stos
mov
jbe
jmp
xchg
dec
imul
xor
retf
mov
push
pop
jmp
int
les
and
xor
fadd
(bad)
into
jle
mov
pop
cdq
inc
icebp
or
push
pushf
jp
adc
mov
add
outs
pop
fcom
pushf
jp
xor
lds
rol
rol
sbb
pushf
xchg
movs
cmp
int3
mov
push
dec
jmp
inc
cli
sbb
int3
fwait
or
xlat
in
mov
fwait
cmp
popf
mov
gs
push
popa
jge
into
jmp
pop
jmp
sub
sar
dec
cwde
addr16
pop
push
retf
push
retf
stc
test
addr16
sub
adc
push
xchg
sbb
cmp
push
pop
cmp
scas
test
stos
xchg
or
data16
ja
adc
xchg
cmp
sub
pop
loopne
mov
fwait
and
push
xlat
(bad)
aaa
addr16
lods
ret
sub
sbb
clc
retf
pop
xlat
xor
sahf
cmp
mov
cld
test
xchg
jp
sbb
mov
(bad)
mov
pop
jae
pop
adc
das
int3
fcom
sysret
adc
xchg
dec
sbb
sub
nop
sub
cwde
inc
jnp
xchg
inc
sub
cmp
push
sbb
sbb
dec
and
aaa
outs
daa
pop
or
xor
ficom
jae
pusha
sahf
inc
retf
lea
add
cmp
test
cmps
int3
test
das
enter
xchg
add
aam
mov
into
inc
mov
dec
cwde
ja
cs
dec
inc
pop
dec
sub
scas
pusha
in
or
cwde
push
sub
stos
imul
mov
sbb
sub
(bad)
repz
xchg
mov
sub
mov
call
rol
cmps
jne
test
jno
mov
and
cdq
lock
hlt
sbb
mov
push
stc
test
sub
cmp
inc
xchg
jmp
(bad)
push
sbb
push
rcr
push
test
push
mov
mov
ret
mov
(bad)
xlat
add
sahf
shr
jo
cmps
sbb
push
scas
mov
movs
xor
mov
fnstenv
fstp
mov
pop
jb
mov
lods
out
pop
movntq
out
lock
(bad)
fisub
or
sti
fist
push
adc
arpl
(bad)
nop
push
enter
xchg
lods
arpl
imul
xor
leave
mov
adc
sbb
icebp
call
(bad)
mov
pop
ret
jnp
test
xchg
imul
jge
rcl
cmp
in
scas
int
lods
in
ja
cmp
mov
test
das
sub
jecxz
test
in
cmp
ficomp
xchg
lods
pop
or
(bad)
loop
ror
pop
mov
push
sub
(bad)
adc
mov
mov
nop
push
ss
(bad)
sub
lds
xchg
(bad)
mov
mov
popf
sbb
pop
test
push
fdiv
ror
fmulp
xor
xchg
int3
ins
jmp
loope
les
xchg
add
cwde
sbb
in
fwait
push
inc
dec
pop
push
ficomp
ins
mov
and
ja
add
inc
xchg
mov
xor
cwde
xor
mov
dec
xchg
(bad)
pusha
in
loope
(bad)
or
and
(bad)
add
xor
dec
adc
dec
sbb
(bad)
and
jp
mov
or
mov
ret
jge
pop
push
sbb
ror
out
push
sbb
push
ret
cmp
xchg
push
jo
in
hlt
sbb
ficomp
jns
adc
xor
pop
inc
sbb
push
mov
into
mov
mov
sub
pop
retf
push
cmps
test
jge
jae
fisttp
sbb
mov
add
test
mov
test
and
sbb
retf
out
(bad)
(bad)
retf
mov
retf
pusha
sub
std
pop
cmp
push
cdq
pop
dec
pop
and
les
mov
jge
sub
cmp
lahf
jg
fidivr
jbe
pop
in
aaa
sub
mov
out
enter
loopne
push
fisubr
pop
rcr
ja
push
sub
scas
fisub
sahf
push
sbb
fidiv
mov
addr16
ins
out
xor
dec
add
cmps
dec
pop
int3
jmp
inc
popa
sahf
sbb
not
dec
mov
into
sbb
mov
mov
in
pop
mov
fidiv
stos
lahf
lods
nop
sub
scas
jg
pop
sbb
ss
push
xlat
mov
and
xor
or
mov
js
mov
cmp
aad
pop
retf
adc
pop
pop
xchg
cmp
sub
(bad)
aaa
jns
sahf
mov
pop
fbld
mov
dec
sbb
hlt
add
mov
sub
dec
(bad)
neg
or
stos
ret
pop
mov
(bad)
scas
mov
lahf
out
inc
mov
enter
movs
dec
cli
into
out
jae
add
mov
outs
ret
xor
and
push
ins
pop
cmc
inc
sbb
mov
lahf
lds
cmp
add
pop
stos
adc
sbb
call
stos
push
push
pop
dec
arpl
call
and
ret
or
mul
nop
cmp
pop
aam
fwait
aad
mov
pop
ret
pop
push
stos
mov
push
into
adc
dec
mov
push
mov
enter
shl
sub
or
adc
dec
cmps
or
outs
adc
mov
arpl
rcr
pop
(bad)
and
div
cs
enter
rol
xchg
jmp
arpl
aam
fstp
jno
in
sbb
cdq
das
inc
mov
imul
std
mov
ss
pop
sbb
iret
sar
inc
out
cmp
pop
enter
stos
mov
stos
push
sbb
cmp
add
ret
fimul
jmp
pop
mov
mov
push
mov
pop
mov
mov
arpl
pop
mov
arpl
xchg
inc
dec
pop
ret
fstp
pop
xchg
or
pushf
jg
xchg
jb
add
int
jo
xor
jb
mov
cmp
mov
mov
adc
mov
enter
leave
mov
fimul
and
mov
push
xchg
dec
icebp
scas
mov
imul
mov
mov
fwait
mov
dec
int3
mov
xor
cli
push
lock
jge
add
pop
xchg
arpl
pop
mov
shl
mov
(bad)
fdiv
retf
push
sub
mov
xchg
enter
sub
ror
scas
arpl
rcl
push
rcr
clc
in
fcmovu
js
jmp
xchg
push
lods
jnp
mov
and
mov
dec
movs
pop
cmp
cwde
cli
js
pop
add
fidivr
ficom
mov
push
jp
mov
inc
xchg
push
push
stos
cwde
ja
mov
in
inc
cmps
or
jnp
add
or
pop
movs
mov
pop
pop
fs
mov
push
sub
adc
sub
xor
or
cwde
int3
sbb
jae
push
jp
adc
pop
mov
mov
push
cmp
shl
add
push
shl
xchg
pusha
sub
jnp
adc
adc
mov
push
and
nop
push
inc
imul
push
adc
add
adc
xor
pop
pop
or
adc
mov
enter
dec
ficomp
push
xchg
mov
mov
std
fbld
inc
fmul
aam
fmul
cmp
aam
test
mov
cmp
repnz
aam
retf
(bad)
mov
mov
test
call
adc
sbb
(bad)
jbe
fcomp
loop
or
jmp
dec
push
adc
jge
jmp
into
sub
shl
push
dec
lock
adc
xor
hlt
mov
clc
inc
idiv
imul
xchg
inc
xchg
mov
push
dec
fiadd
retf
popf
in
es
jl
jbe
dec
jnp
cwde
xchg
call
xchg
mov
mov
sar
inc
pop
retf
pop
push
lods
(bad)
dec
lds
int3
pop
pop
inc
dec
or
jp
cdq
test
mov
call
adc
adc
mov
dec
pop
dec
test
lahf
mov
mov
sbb
mov
or
dec
js
push
retf
ja
sti
call
dec
xor
jb
retf
cwde
xchg
xor
aas
call
mov
mov
cwde
push
xchg
inc
push
mov
lahf
ret
jle
sbb
dec
test
mov
sbb
push
call
icebp
xchg
test
pop
inc
fidivr
(bad)
dec
cwde
adc
pop
xchg
add
mov
mov
dec
xchg
dec
dec
test
test
retf
cmc
dec
push
inc
dec
cmp
dec
adc
push
mov
cwde
push
xor
pop
ret
retf
inc
mov
sbb
pushf
cli
pop
stc
inc
add
mov
xchg
sbb
test
sbb
aaa
push
dec
ss
push
mov
jae
retf
jb
push
inc
enter
inc
jo
pop
jp
dec
cwde
sahf
fnsave
dec
test
mov
fst
fadd
xlat
mov
cmc
or
jle
mov
retf
mov
nop
mov
fst
(bad)
xchg
jns
(bad)
mov
inc
mov
shr
pop
retf
aaa
mov
call
popf
adc
sahf
dec
adc
push
call
inc
jmp
out
pop
xor
les
mov
pop
fwait
sub
pop
sbb
cmp
jmp
add
xchg
xlat
dec
jo
sbb
jmp
rol
xor
pop
fmul
fdivp
ins
add
mov
jbe
outs
jge
cli
pusha
movs
push
js
pop
aam
mov
sub
mov
stc
in
pop
jmp
adc
sub
fwait
push
pushf
call
push
je
pop
dec
mov
ficom
sti
jbe
pushf
pop
(bad)
in
cdq
call
or
fsubrp
add
or
push
inc
imul
dec
dec
div
cdq
push
fist
out
fst
cmp
clc
mov
mov
inc
pop
adc
and
fwait
repz
sbb
(bad)
rcr
sbb
(bad)
(bad)
out
jge
les
das
pop
cmp
fisub
mov
push
adc
(bad)
push
cdq
dec
mov
inc
fcom
inc
xlat
sub
mov
and
adc
cdq
aam
cs
int3
arpl
cmc
xor
daa
neg
xor
mov
push
mov
jnp
jle
push
and
scas
pop
(bad)
sbb
data16
dec
xor
lods
enter
fist
xchg
pop
ins
shl
push
rcr
lods
push
jno
xchg
dec
push
pop
pop
rcr
adc
fs
test
mov
sti
adc
aad
cmp
jl
jo
or
hlt
inc
shl
adc
pop
addr16
por
and
stc
lahf
dec
call
pop
dec
std
xchg
es
in
retf
jl
pop
mov
pop
add
cmps
lods
push
xor
ror
dec
mov
dec
cdq
mov
call
pop
mov
push
(bad)
sbb
xor
outs
mov
ds
sahf
xor
jbe
xchg
pop
add
pop
pop
fisub
push
cmp
sar
inc
mov
xor
xor
pop
adc
pop
pop
call
or
push
mov
mov
fcomp
mov
fwait
jmp
sbb
push
pop
adc
sbb
mov
mov
into
test
aam
or
fstp
push
pusha
cmp
test
(bad)
inc
mov
pop
test
pop
movs
call
popf
xor
dec
lods
aad
mov
or
pop
pop
idiv
fstp
xlat
mov
bound
mov
cmp
mov
arpl
dec
dec
fcom
pop
retf
movs
lea
sub
sar
adc
loop
inc
xor
(bad)
(bad)
test
dec
cdq
es
lds
imul
sub
jmp
push
ja
aas
(bad)
sbb
dec
mov
enter
sbb
add
mov
mov
cmp
jnp
fcmovbe
pop
or
pushf
into
pusha
ss
cmp
fldcw
inc
push
out
mov
jmp
test
mov
inc
add
mov
xor
in
mov
fnstenv
inc
adc
dec
out
push
mov
scas
pop
repnz
push
cmps
xchg
sub
ds
xchg
sbb
mov
lods
or
add
fcmovnb
fbstp
pop
(bad)
fisub
mov
outs
ja
mov
dec
adc
jp
cli
or
fild
pop
jmp
das
pop
jmp
fsub
cmp
fcomp
pop
aad
jmp
and
xchg
xor
outs
int3
xchg
sti
mov
add
mov
fistp
jno
add
mov
jge
push
dec
inc
scas
(bad)
int
mov
lods
dec
stc
jmp
pop
dec
mov
mov
movs
arpl
add
mov
cwde
nop
dec
test
neg
adc
in
xor
int3
in
outs
iret
movs
pop
jmp
(bad)
(bad)
popa
int
xchg
mov
push
inc
pop
sbb
fdivr
pop
add
sub
add
test
loop
xchg
push
shl
imul
(bad)
inc
sar
ins
push
push
aaa
lea
inc
cmps
ss
inc
jmp
sbb
mov
fcomp
sub
dec
jg
mov
cmp
cdq
mov
and
neg
stos
jl
aam
sbb
xchg
ficomp
fisttp
fbld
sahf
pop
push
sub
jnp
pop
inc
imul
pop
dec
ds
shl
or
push
jp
stos
xchg
and
cmp
call
mov
cdq
aas
rol
cmp
jg
inc
ds
push
fiadd
ret
jmp
mov
or
push
push
rcl
push
and
mov
dec
xchg
sub
dec
stos
jg
pop
test
cmps
push
mov
rcr
jmp
je
pushf
jnp
test
jmp
dec
pop
jmp
inc
call
call
or
mov
mov
aas
(bad)
xor
push
imul
mov
(bad)
movs
cmp
pop
inc
sbb
cwde
popa
mov
jbe
inc
xor
pushf
fwait
sbb
xor
shl
test
xor
and
jo
cld
test
sbb
ins
jle
sbb
int3
pop
pop
xor
inc
out
mov
pop
xor
push
repnz
jo
adc
push
call
shl
sbb
fstp
lock
push
sbb
sub
xchg
dec
pop
(bad)
pushf
pusha
sbb
fwait
xor
cmps
jmp
fnstsw
adc
add
mov
adc
mov
cmovle
mov
push
loop
iret
cmps
inc
sti
xor
aad
jp
aad
ret
hlt
movs
xlat
push
sbb
dec
popf
mov
scas
pop
and
loop
stc
test
and
sbb
cmp
fs
fwait
mov
adc
inc
cmps
xor
push
or
xchg
sbb
repnz
add
and
clc
pusha
mov
xchg
ret
(bad)
xchg
data16
arpl
aam
and
out
pop
xchg
jmp
jecxz
aam
dec
ret
push
sub
sbb
out
minps
rcl
out
scas
and
loop
test
xor
repnz
cld
sub
jge
push
mov
mov
call
repz
ds
adc
cdq
pusha
mov
test
jg
and
pop
inc
enter
push
(bad)
retf
shr
xor
out
and
xchg
stc
xor
fimul
jo
adc
loop
cmp
sbb
pop
ficom
xchg
jp
jne
push
pop
es
les
movs
xchg
jge
loope
stc
test
xor
repnz
imul
arpl
(bad)
push
arpl
ficom
fsub
or
add
jmp
lods
cwde
push
int
dec
xchg
ja
cdq
xchg
dec
out
lods
adc
cmp
mov
pushf
and
or
pop
push
cmp
or
lods
dec
test
mov
jbe
mov
jmpw
mov
cdq
dec
ficomp
in
push
sbb
dec
call
nop
jp
iret
lock
adc
leave
push
sahf
(bad)
and
cmp
iret
or
inc
rcl
pop
push
sub
mov
mov
std
inc
mov
call
jmp
xor
loope
int3
hlt
mov
mov
dec
jbe
push
lock
mov
mov
leave
sar
jl
xchg
je
rol
ret
pop
adc
cld
add
add
not
push
mov
sbb
and
fidivr
fldenv
dec
xor
rcl
ins
jbe
xchg
ins
clc
inc
jp
(bad)
or
or
dec
mov
mov
or
jnp
ret
aam
adc
fnclex
cmps
sbb
(bad)
or
pop
out
enter
inc
in
retf
out
mov
pop
dec
pushf
pop
fdivr
sbb
aam
sub
mov
sub
inc
fisubr
mov
mov
mov
adc
mov
xchg
fcom
movs
mov
adc
fst
add
dec
xor
jmp
xor
ins
xor
cmp
sbb
adc
xchg
(bad)
adc
out
pop
inc
mov
out
dec
mov
sahf
rcr
xchg
mov
aam
mov
push
push
dec
call
cmp
jno
xchg
xor
inc
or
cmp
icebp
xchg
inc
add
clc
xor
std
cmc
ins
xchg
(bad)
cdq
pop
push
loopne
in
mov
fdivr
pop
outs
ins
mov
inc
out
adc
mov
sub
mov
jae
mov
(bad)
cmps
imul
outs
xchg
call
cmp
movs
loopne
sbb
cmp
cli
inc
inc
pop
mov
repnz
pushf
jmp
push
jmp
or
jmp
sub
clc
cmp
clc
stc
mov
jmp
add
test
bt
shld
call
pusha
push
mov
push
mov
push
lea
jmp
jmp
push
pushf
push
pop
push
mov
lea
jmp
pusha
sub
jmp
push
pop
push
mov
lea
jmp
pusha
pushf
jmp
mov
mov
push
repz
pop
jmp
movsx
push
jmp
pushf
mov
mov
call
mov
push
push
push
pop
mov
push
push
mov
lea
jmp
mov
pusha
mov
mov
jmp
jmp
call
pushf
mov
pushf
pusha
mov
jmp
inc
mov
mov
mov
mov
lea
jmp
jmp
pushf
mov
mov
pushf
jmp
mov
pushf
jmp
pushf
push
mov
jmp
push
call
push
mov
mov
push
repz
pop
push
lea
jge
pusha
pushf
mov
pushf
mov
jmp
sub
pushf
jmp
jmp
sub
push
jmp
not
mov
sbb
clc
rol
ror
sub
movsx
btc
ror
ror
lea
add
call
push
pop
pushf
pushf
lea
jmp
movsx
mov
sar
sar
rol
mov
push
pusha
clc
sub
push
call
rol
movsx
mov
rol
neg
mov
push
pusha
add
call
mov
pusha
mov
mov
pushf
mov
call
pushf
pop
push
push
pop
pushf
lea
jmp
pushf
pop
push
push
jmp
mov
pusha
pushf
jmp
push
mov
repz
pop
push
mov
pusha
mov
mov
pusha
mov
jmp
not
mov
push
mov
push
pushf
mov
mov
pusha
pushf
lea
jmp
call
stc
clc
cmp
shl
jmp
jmp
push
mov
mov
pushf
mov
mov
mov
mov
lea
jmp
push
mov
mov
mov
pushf
mov
jmp
push
pop
mov
push
pushf
lea
jmp
not
cmp
cmc
sub
cmp
and
push
pusha
mov
mov
pushf
call
mov
pusha
mov
lea
jns
pushf
push
pop
push
lea
jmp
call
inc
movzx
lea
bt
jmp
shl
shr
mov
cmc
push
clc
sub
call
mov
push
pop
push
pushf
push
push
lea
jmp
mov
mov
call
pushf
jmp
mov
push
push
push
push
lea
jmp
pushf
push
repz
pop
push
push
call
push
mov
call
pushf
lahf
mov
cwde
jmp
movzx
call
add
call
mov
pushf
mov
mov
push
pop
push
pushf
mov
lea
jmp
rol
clc
pushf
sub
cmc
mov
neg
clc
pushf
test
call
bswap
push
movsx
bswap
mov
pushf
pushf
pusha
pushf
lea
cpuid
push
pushf
call
repz
pop
pushf
push
mov
mov
mov
mov
mov
jmp
repz
pop
call
pushf
lea
jo
mov
push
pusha
pushf
lea
jmp
push
mov
pushf
pusha
pushf
pushf
mov
pushf
mov
call
add
add
pushf
pushf
push
pop
mov
push
lea
jmp
mov
jmp
mov
pusha
call
jmp
pushf
pop
push
push
pop
pusha
lea
jmp
push
pushf
mov
mov
push
mov
push
pushf
push
pop
pushf
pushf
lea
jmp
call
bswap
lahf
lahf
mov
pusha
call
call
pushf
pusha
mov
mov
mov
call
mov
push
jmp
mov
mov
pusha
lea
jmp
shr
das
shr
bsf
mov
cmc
stc
bt
sub
pusha
jmp
jmp
movzx
ror
sub
mov
shl
and
sub
not
bt
rol
btc
test
or
sub
inc
jmp
pushf
jmp
pushf
mov
sub
pushf
bt
test
xchg
mov
pusha
push
mov
jmp
pushf
mov
mov
jmp
cmp
and
call
lea
jno
mov
pusha
pushf
pusha
pushf
lea
jmp
mov
pushf
jmp
jmp
movzx
movzx
movsx
mov
pushf
push
mov
lea
jmp
pushf
pusha
pusha
mov
jmp
push
pusha
push
mov
pushf
mov
mov
jmp
pusha
mov
push
mov
pushf
lea
jmp
mov
mov
pushf
push
pushf
pop
mov
jmp
push
pushf
call
add
push
mov
pushf
pop
lea
jle
push
pushf
push
pop
push
lea
jmp
push
push
pop
push
lea
jmp
lea
jg
pusha
pusha
inc
pushf
call
pushf
repz
pop
push
push
pushf
mov
pushf
push
mov
call
je
mov
cmc
add
pusha
pushf
mov
pushf
pop
push
jmp
xor
bswap
push
mov
add
inc
mov
sar
rol
rcr
mov
cmp
jmp
jmp
add
pusha
test
call
pusha
mov
push
mov
call
mov
call
push
sar
shld
movzx
and
add
rol
jmp
call
push
mov
push
mov
push
jmp
pushf
pop
pusha
mov
push
jmp
add
movzx
cwde
bts
mov
rcr
pushf
rol
inc
mov
cmc
push
call
push
repz
pop
pushf
pushf
pushf
mov
call
call
mov
inc
clc
call
call
jmp
inc
not
mov
cmc
test
cmc
push
sub
call
bts
shl
test
mov
pusha
mov
clc
cmp
call
mov
call
mov
jmp
mov
mov
call
call
mov
pushf
sub
mov
call
mov
call
movzx
rol
not
movsx
mov
pushf
jmp
jmp
call
push
jmp
call
mov
push
pop
mov
push
push
pushf
lea
jmp
bt
sub
push
jmp
call
btr
mov
setle
add
or
jmp
lea
jl
push
mov
jmp
pushf
mov
pushf
mov
lea
jmp
call
lea
jne
cmc
mov
cmp
and
test
cmp
call
pusha
pusha
lea
jp
pushf
push
push
pop
pusha
push
mov
pushf
lea
jmp
jmp
mov
jmp
sub
sar
mov
stc
mov
cmc
bt
test
add
call
call
ror
pusha
push
push
mov
dec
mov
mov
push
mov
inc
test
cmp
add
mov
sub
mov
call
call
pushf
pushf
pop
pusha
push
pop
mov
push
lea
jmp
rol
xchg
pusha
push
inc
movzx
bsf
mov
lea
shr
sub
shld
adc
rol
rcl
mov
cmc
rcr
push
mov
stc
test
push
add
sub
mov
rcl
jmp
clc
add
cmp
test
push
pusha
push
popf
push
lea
jmp
cmp
or
sar
mov
push
sub
test
push
jmp
mov
call
mov
mov
mov
lea
jmp
pusha
shld
not
clc
add
cmp
adc
not
neg
sar
shl
shl
add
not
shr
bsf
test
and
not
rcl
mov
mov
call
call
add
jmp
push
mov
mov
mov
push
repz
pop
call
jmp
call
mov
jmp
call
mov
mov
push
mov
push
push
pushf
push
ret
mov
bsr
sub
rcr
call
rol
cmc
add
dec
mov
lea
test
mov
bt
pushf
add
call
neg
shld
and
shld
not
not
btc
bt
adc
and
shl
bsf
movzx
mov
test
pushf
sub
pushf
mov
pushf
lea
jmp
push
pop
push
pushf
pushf
mov
lea
jmp
mov
call
push
stc
cmp
mov
cmc
call
mov
push
push
call
cmp
jmp
pushf
mov
cmp
push
jmp
push
pop
pushf
mov
lea
jmp
cmp
push
mov
mov
jmp
setbe
mov
or
pop
cld
aam
bt
bswap
pop
jge
cmp
pop
cwde
aam
pop
daa
cld
cld
popf
cdq
pop
lea
pop
xchg
rdtsc
setg
movzx
pop
xchg
setnp
lahf
pop
bswap
pusha
movsx
pusha
mov
lea
pushf
pushf
lea
mov
mov
mov
mov
push
ret
pushf
push
pop
mov
lea
jmp
sar
mov
push
bt
add
jmp
mov
push
push
pusha
lea
jmp
push
pop
mov
lea
jmp
call
pusha
jmp
pusha
mov
pushf
mov
mov
mov
mov
pushf
mov
pushf
mov
lea
je
repz
jmp
jmp
pushf
pushf
pushf
push
push
pop
mov
pushf
pusha
push
lea
jmp
not
mov
clc
cmp
call
jmp
push
mov
push
mov
push
lea
jmp
pushf
pusha
repz
pop
jmp
bsf
test
mov
mov
add
clc
sbb
sub
or
mov
jmp
pushf
inc
mov
jmp
bsr
mov
clc
sub
pushf
push
call
pusha
mov
mov
mov
lea
jmp
mov
push
push
push
mov
lea
jmp
not
inc
or
pushf
movzx
sbb
neg
setae
dec
shl
rol
sub
movzx
shl
mov
test
mov
add
call
pushf
push
push
pop
pushf
lea
jmp
mov
mov
jmp
daa
cwd
bsf
mov
setg
call
push
push
pushf
mov
mov
push
push
mov
call
bswap
pushf
mov
pusha
pusha
lea
pushf
jmp
pushf
pushf
pusha
dec
call
pushf
mov
repz
pop
mov
mov
jmp
shr
pushf
jmp
add
stc
add
pushf
jmp
jmp
pusha
mov
jmp
mov
pusha
call
mov
push
mov
call
mov
mov
mov
pushf
push
call
mov
jmp
mov
mov
jmp
mov
not
mov
movsx
mov
mov
push
mov
pushf
mov
movsx
push
repz
pop
jmp
push
sub
pushf
stc
shr
push
pushf
mov
mov
call
pusha
pushf
pushf
mov
push
mov
call
call
call
aas
adc
rcr
xchg
mov
rcr
mov
pushf
sbb
mov
pushf
add
push
mov
jmp
jmp
shld
bsf
rcl
add
inc
inc
btr
movzx
call
push
pushf
push
pop
mov
lea
jmp
push
mov
push
pop
pushf
mov
mov
lea
jmp
bt
bt
bt
sub
call
jmp
jmp
mov
mov
jmp
push
push
pushf
mov
jmp
mov
pushf
push
jmp
mov
push
mov
push
ret
bt
cmp
shl
pusha
pusha
bt
call
mov
call
mov
jmp
lahf
daa
dec
mov
dec
mov
stc
add
push
mov
push
mov
pushf
mov
mov
lea
jmp
push
call
push
call
mov
jmp
call
pushf
mov
mov
jmp
mov
mov
pushf
pop
mov
jmp
btc
bt
bsf
shld
mov
pushf
lea
stc
pushf
stc
jmp
test
test
mov
add
mov
call
shr
inc
clc
mov
jmp
pusha
pusha
sub
call
pushf
call
push
pushf
mov
mov
jmp
push
pushf
mov
jmp
sar
dec
xchg
rcl
mov
setbe
setge
shl
mov
bt
jmp
cmc
not
bswap
mov
call
call
mov
mov
pusha
mov
mov
call
lea
jl
pop
pushf
pusha
pushf
push
lea
jmp
rdtsc
shr
sub
mov
pushf
bsf
add
lea
mov
clc
jmp
pushf
call
dec
shl
daa
lea
stc
cmp
pusha
push
push
mov
lea
ja
btr
aam
dec
shl
mov
das
push
lea
not
sub
add
clc
xadd
lea
lea
dec
or
shl
btc
and
rcr
test
btc
sub
not
call
mov
mov
call
jmp
call
call
call
mov
call
pushf
sub
push
mov
inc
call
cmc
test
add
jmp
push
mov
pushf
mov
push
mov
jmp
push
call
mov
call
push
shl
lea
jns
push
pusha
mov
mov
jmp
movsx
mov
movzx
pushf
movzx
push
xchg
pusha
mov
not
cld
pushf
std
lea
pushf
mov
mov
pushf
xchg
movzx
mov
pushf
cld
push
rep
btr
ror
sbb
mov
pushf
mov
mov
test
push
popf
push
push
push
push
lea
jmp
or
stc
test
call
pushf
mov
jmp
bt
shl
not
movzx
movsx
btr
mov
test
stc
sub
cmc
and
call
call
pusha
mov
push
mov
mov
push
mov
pushf
mov
mov
jmp
pushf
pusha
push
mov
pusha
push
call
mov
call
call
pushf
pop
mov
pushf
push
pop
push
pushf
mov
lea
jmp
mov
call
push
mov
pushf
pushf
push
mov
call
push
mov
shr
call
call
jmp
jmp
bt
pushf
or
mov
clc
cmp
add
push
lea
jmp
jmp
mov
mov
lea
jbe
pushf
mov
pusha
call
mov
pushf
pusha
pushf
lea
jmp
push
mov
push
jmp
lea
xadd
mov
inc
add
call
jmp
clc
pushf
cmp
add
clc
call
sub
sub
rcr
test
mov
rcr
add
pushf
mov
lea
je
push
pushf
mov
push
mov
push
mov
lea
jmp
cmc
pusha
push
pop
cmc
call
push
pop
pushf
mov
mov
pushf
lea
jmp
jmp
mov
push
pop
push
push
pushf
lea
jmp
mov
pusha
pushf
lea
jmp
repz
pop
jmp
push
mov
jmp
add
pushf
mov
mov
push
pusha
pushf
lea
jmp
call
mov
pushf
mov
pushf
push
push
ret
jmp
mov
mov
mov
jmp
lea
jg
pushf
mov
pushf
pusha
mov
push
push
pop
pusha
lea
jmp
mov
mov
jmp
bt
pusha
add
rcl
movzx
test
clc
call
push
pop
mov
pushf
push
lea
jmp
mov
pusha
mov
call
or
mov
jmp
pusha
mov
mov
call
push
mov
jmp
dec
shl
lea
push
mov
neg
pusha
sub
stc
shl
movzx
rcr
mov
cmc
bt
pushf
sub
call
push
pusha
pushf
pushf
pop
call
mov
pushf
mov
mov
pusha
mov
mov
pushf
call
add
test
clc
cmp
cbw
clc
cmp
bt
cwde
jmp
mov
pushf
lea
jmp
push
pop
push
mov
lea
jmp
mov
repz
pop
pushf
pushf
mov
call
mov
pusha
pushf
mov
jmp
repz
pop
mov
mov
mov
pusha
push
jmp
mov
pushf
lea
jmp
mov
push
pop
mov
pushf
pushf
mov
lea
jmp
mov
jmp
lea
pop
mov
pushf
div
jmp
pusha
mov
push
mov
pushf
mov
mov
pushf
lea
jmp
mov
sub
jmp
sub
mov
xor
pushf
pusha
mov
sub
push
mov
pushf
rol
stc
call
pushf
xor
lea
call
jmp
call
pushf
mov
jmp
pushf
mov
pushf
pop
mov
jmp
push
mov
mov
push
lea
jmp
pusha
jmp
ror
mov
pushf
dec
call
push
xor
cmc
test
mov
mov
xchg
test
stc
push
sub
test
clc
add
pushf
bt
bt
clc
sub
bt
mov
cmc
jmp
mov
mov
mov
call
call
jmp
jmp
lea
ja
pusha
repz
pop
pusha
mov
pushf
pushf
mov
call
jmp
mov
lea
jne
pusha
pushf
mov
pusha
pushf
pushf
mov
mov
pushf
mov
repz
pop
push
push
mov
mov
jmp
pushf
jmp
mov
push
mov
pushf
pushf
pushf
pushf
pop
mov
mov
mov
lea
jp
pop
pusha
lea
jmp
call
pusha
push
mov
mov
pushf
pusha
push
push
pop
mov
mov
lea
jmp
jmp
push
bt
add
test
jmp
mov
pushf
lea
jne
pusha
jmp
push
push
pop
pushf
mov
lea
jmp
add
pusha
push
mov
mov
push
lea
jmp
push
call
mov
pusha
push
push
push
lea
jmp
add
bt
movzx
btr
ror
dec
mov
rcl
add
movsx
mov
pop
bswap
dec
call
btc
test
sbb
jmp
mov
push
mov
lea
jno
pushf
mov
pushf
jmp
pusha
mov
mov
push
pushf
mov
push
call
pushf
jmp
mov
pushf
call
call
seto
pop
pusha
das
bsf
sar
mov
bsf
setb
xadd
push
popf
lahf
mov
movsx
movzx
mov
bswap
lea
ja
not
pushf
mov
cwde
xchg
mov
cwde
mov
bswap
bswap
pusha
pop
mov
movsx
pushf
mov
push
pushf
push
push
ret
mov
call
pusha
pushf
jmp
mov
push
push
push
pushf
repz
pop
call
pushf
mov
call
push
mov
push
call
mov
pushf
pushf
jmp
cmc
sub
push
mov
pushf
lea
jmp
inc
lea
js
push
mov
dec
push
lea
jne
push
mov
mov
mov
pusha
pushf
lea
jmp
pusha
pushf
push
mov
pushf
mov
push
call
pushf
mov
pushf
mov
call
call
jmp
xor
pushf
mov
call
shr
test
call
mov
push
pop
pusha
mov
mov
pusha
lea
jmp
movsx
shl
mov
bt
cmc
sub
push
jmp
jmp
jmp
mov
jmp
mov
push
mov
repz
pop
jmp
push
push
pusha
mov
mov
jmp
mov
jmp
mov
pushf
lea
jmp
mov
push
call
dec
hlt
fcomi
sbb
fcomi
test
fcomi
loop
fcomi
int
fcomi
cmp
fcomi
jl
fcomi
cwde
in
fcomi
in
fcomi
std
loopne
icebp
dec
add
icebp
mov
out
fcomi
push
(bad)
icebp
xor
fdiv
scas
out
icebp
cwde
in
fcomi
dec
add
icebp
dec
add
icebp
inc
out
icebp
cmp
(bad)
fcomi
adc
add
icebp
stos
jmp
adc
fcomi
ss
icebp
shl
fcomi
cmp
fcomi
into
(bad)
fcomi
fdiv
fcomi
ja
fcomi
cld
out
fcomi
mov
out
icebp
out
fdiv
sbb
fcomi
pop
stc
fcomi
mov
fcomi
xchg
out
fcomi
repz
icebp
aad
fcomi
out
in
icebp
in
fcomi
pop
add
icebp
mov
fcomi
stos
jmp
into
(bad)
fcomi
cmp
out
icebp
(bad)
add
icebp
(bad)
add
icebp
xor
fdiv
test
fcomi
pop
stc
fcomi
rol
icebp
mov
fcomi
shl
fcomi
mov
call
fcomi
jae
fcomi
repz
icebp
fdiv
fcomi
mov
call
fcomi
xor
fcomi
aad
fcomi
jae
fcomi
mov
(bad)
icebp
mov
fcomi
jae
fcomi
xor
fcomi
loop
fcomi
cmp
fcomi
jae
fcomi
sbb
fcomi
ss
icebp
mov
fcomi
jae
fcomi
pop
in
fcomi
scas
out
icebp
mov
fcomi
jae
fcomi
int
fcomi
scas
out
icebp
and
fcomi
jae
fcomi
dec
hlt
fcomi
mov
fcomi
cmp
fcomi
jae
fcomi
jl
fcomi
sbb
fcomi
mov
call
fcomi
xor
fcomi
into
(bad)
fcomi
jae
fcomi
cmp
fcomi
cwde
in
fcomi
jae
fcomi
std
loopne
icebp
mov
repnz
jae
fcomi
fdivr
fcomi
ja
fcomi
fdivr
fcomi
jae
fcomi
mov
fcomi
dec
out
icebp
test
fcomi
jae
fcomi
loop
fcomi
repz
icebp
int
fcomi
jae
fcomi
cmp
fcomi
stos
jmp
cld
out
fcomi
pop
add
icebp
test
fcomi
popa
cli
fcomi
dec
out
icebp
inc
out
icebp
int
fcomi
out
in
icebp
pop
stc
fcomi
dec
hlt
fcomi
adc
fcomi
xchg
out
fcomi
mov
in
icebp
mov
out
fcomi
xor
fdiv
cmp
fcomi
scas
out
icebp
cmp
fcomi
aad
fcomi
mov
clc
fcomi
adc
fcomi
fdiv
fcomi
jl
fcomi
rol
icebp
dec
hlt
fcomi
scas
out
icebp
adc
out
icebp
fdiv
fcomi
int
fcomi
cld
out
fcomi
pop
stc
fcomi
popa
cli
fcomi
inc
out
icebp
ja
fcomi
shl
fcomi
lods
icebp
fcomi
sbb
fcomi
cmp
fcomi
mov
fcomi
mov
fcomi
pop
in
fcomi
push
(bad)
icebp
mov
add
icebp
std
loopne
icebp
xor
fdiv
popa
cli
fcomi
adc
fcomi
mov
out
fcomi
pop
add
icebp
adc
fcomi
ss
icebp
jl
fcomi
stos
jmp
std
loopne
icebp
mov
fcomi
fdivp
fcomi
ja
fcomi
adc
jecxz
icebp
fdivp
fcomi
std
loopne
icebp
adc
fcomi
aad
fcomi
fdivp
fcomi
rol
icebp
lods
icebp
fcomi
out
fdiv
fdivp
fcomi
xchg
out
fcomi
into
(bad)
fcomi
repz
icebp
fdivp
fcomi
out
fdiv
lods
icebp
fcomi
fdivr
fcomi
fdivp
fcomi
jl
fcomi
ja
fcomi
pop
in
fcomi
fdivp
fcomi
out
in
icebp
cmp
fcomi
fdiv
fcomi
fdivp
fcomi
repz
icebp
std
loopne
icebp
adc
fcomi
fdivp
fcomi
aad
fcomi
cwde
in
fcomi
aas
call
fcomi
pop
add
icebp
int
fcomi
out
in
icebp
fdivp
fcomi
cmp
fcomi
fdiv
fcomi
stos
jmp
and
fcomi
cmp
fcomi
aad
fcomi
fdivp
fcomi
mov
fcomi
fdivr
fcomi
repz
icebp
fdivp
fcomi
xchg
out
fcomi
mov
fcomi
and
fcomi
fdivp
fcomi
pop
stc
fcomi
aas
call
fcomi
fdivp
fcomi
shl
fcomi
jg
fcomi
cmp
fcomi
pusha
jmp
jmp
jmp
mov
push
pop
pushf
lea
jmp
call
mov
mov
push
jmp
push
jmp
cmp
sub
mov
lea
jne
clc
cmc
xor
push
push
pusha
pushf
xchg
mov
jmp
push
mov
jmp
jmp
pushf
pushf
mov
jmp
call
call
add
stc
cmc
bt
xor
cmc
bt
clc
xchg
mov
clc
sub
bt
pusha
add
pushf
mov
cmc
bt
add
stc
test
stc
cmp
cwde
call
jmp
mov
push
pushf
lea
jmp
bswap
mov
setge
not
mov
pusha
mov
pusha
push
jmp
mov
push
push
not
test
bt
push
call
repz
pop
call
pushf
mov
push
push
push
call
jmp
mov
call
push
jmp
mov
call
push
mov
pushf
mov
mov
repz
pop
jmp
push
pusha
lea
je
jmp
clc
add
call
push
pushf
push
pop
mov
mov
mov
lea
jmp
pushf
pusha
xchg
movsx
lea
jl
bswap
push
movsx
push
mov
bswap
seto
push
movzx
not
movsx
movzx
push
lea
call
btr
bswap
cmp
xor
mov
neg
test
cmc
mov
clc
sub
pushf
add
je
shr
pushf
pushf
push
mov
push
pushf
pop
mov
mov
push
pop
pushf
pusha
pushf
push
lea
jmp
shl
bt
mov
cmp
rdtsc
call
call
lea
jle
push
pusha
pushf
pushf
pushf
push
pop
pushf
pushf
push
lea
jmp
pushf
pop
pusha
push
pop
pushf
pushf
mov
lea
jmp
mov
mov
jmp
jmp
mov
mov
push
mov
lea
jmp
ror
movsx
btr
btc
add
stc
rol
shr
adc
lea
movsx
neg
shl
bswap
shr
seta
sub
or
btc
movzx
btr
mov
test
test
sub
push
mov
mov
mov
pushf
push
ret
mov
pusha
pushf
jmp
aas
mov
or
stc
mov
cmp
stc
stc
not
stc
not
jmp
aas
sub
lea
mov
stc
call
pusha
add
pushf
pushf
pop
pushf
push
pop
push
pushf
push
pushf
lea
jmp
mov
mov
call
mov
mov
jmp
call
mov
pushf
mov
call
mov
call
bts
ror
mov
cmp
add
push
pusha
lea
jmp
mov
pusha
mov
mov
push
push
mov
pushf
pushf
mov
mov
mov
mov
pushf
push
mov
pushf
call
add
bt
call
jmp
call
xchg
xchg
movsx
inc
mov
inc
push
pop
mov
push
pop
mov
mov
movzx
mov
xchg
inc
btc
bt
bswap
rol
dec
lea
inc
inc
shrd
movzx
sar
lea
shl
sub
shl
xadd
mov
sub
mov
not
add
call
push
pop
push
pushf
pushf
mov
lea
jmp
mov
mov
lea
jmp
call
jmp
jmp
mov
push
lea
jmp
push
push
pop
mov
pusha
push
pushf
lea
jmp
mov
pusha
pushf
pop
mov
pusha
push
push
pop
push
mov
lea
jmp
mov
pushf
jmp
push
pushf
pusha
jmp
mov
mov
call
setne
setge
shl
shl
mov
cmc
push
add
call
test
or
call
mov
movsx
cwde
mov
movsx
mov
call
pushf
pushf
push
mov
pushf
mov
mov
pushf
mov
jmp
jmp
pusha
jmp
call
lea
jne
call
bsr
bts
mov
test
bsr
mov
bt
mov
cmp
add
cmc
push
shrd
mov
mov
call
cmc
pusha
add
jmp
jmp
xadd
mov
xor
push
rcl
mov
test
test
sub
call
call
mov
mov
pushf
mov
pushf
pusha
mov
push
mov
mov
call
pusha
pusha
repz
pop
mov
push
pushf
mov
jmp
rol
push
cmp
call
mov
push
pop
mov
pushf
lea
jmp
mov
setge
xchg
dec
inc
movsx
pop
push
pop
lea
mov
pusha
mov
pop
movzx
movsx
mov
dec
jmp
movzx
mov
test
mov
mov
clc
stc
sub
pushf
shl
call
push
mov
mov
mov
lea
jmp
push
pop
mov
pushf
mov
pushf
lea
jmp
call
call
pushf
mov
push
pop
pushf
push
pusha
lea
jmp
call
pushf
pusha
movsx
not
mov
pop
bswap
pusha
mov
lea
lea
jmp
jmp
pusha
mov
push
push
pushf
push
lea
jmp
mov
push
pusha
repz
pop
call
pushf
mov
push
push
mov
mov
pusha
lea
jmp
add
pushf
pushf
mov
lea
jmp
mov
jmp
pushf
cmc
rol
seto
sub
movsx
bsr
bt
sar
add
movsx
mov
bt
stc
add
jmp
push
call
push
pusha
mov
call
call
mov
jmp
mov
mov
push
lea
jmp
jmp
dec
sbb
add
jmp
pushf
pop
jmp
