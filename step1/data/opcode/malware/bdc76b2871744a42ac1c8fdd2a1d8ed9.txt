push
mov
push
push
push
and
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
call
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
mov
mov
call
sub
mov
mov
cmp
cmovne
mov
jmp
lea
mov
mov
mov
mov
mov
mov
call
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
lea
pop
pop
pop
pop
ret
jmp
push
mov
push
push
push
sub
mov
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
call
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
movzx
mov
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
jmp
nop
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
call
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
cmp
cmove
mov
jmp
lea
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
add
pop
pop
ret
jmp
nop
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
lea
mov
mov
mov
cmp
cmove
mov
jmp
lea
mov
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
add
pop
pop
ret
jmp
nop
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
call
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
add
pop
pop
ret
jmp
data16
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
lea
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
add
pop
pop
ret
jmp
nop
push
mov
push
push
push
and
sub
jmp
push
jmp
push
jmp
push
jmp
push
ret
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
sbb
push
les
add
mov
iret
mov
mov
adc
add
test
mov
mov
ds
add
cmp
cmps
ret
test
ins
mov
add
mov
add
add
add
pushf
add
cmp
add
cli
inc
add
and
add
mov
inc
or
xchg
jmp
mov
and
add
add
mov
add
(bad)
and
pop
add
mov
and
mov
test
in
mov
daa
mov
and
cmp
add
jmp
mov
and
jmp
popa
sahf
push
xor
and
popf
cdq
add
add
mov
lahf
je
fst
dec
add
inc
ins
pusha
or
or
cmp
push
popf
cdq
mov
pushf
test
mov
add
sbb
jno
cmp
and
add
or
add
or
cli
mov
sub
xor
add
ror
xchg
fucomi
dec
add
cmp
daa
add
pushf
sub
test
jo
push
sub
pop
loope
add
mov
sub
mov
push
(bad)
mov
retf
add
add
sub
mov
daa
dec
fs
inc
dec
add
xor
add
and
add
add
add
add
jmp
and
mov
sahf
mov
icebp
add
fisttp
test
inc
pop
adc
pushf
add
add
xlat
repz
mov
add
add
jmp
add
add
sub
push
enter
add
je
jmp
xor
push
cwde
add
add
push
and
mov
ins
add
add
xchg
add
add
fsub
add
sub
adc
and
cmc
in
inc
mov
push
icebp
mov
or
adc
lds
test
add
or
pushf
add
retf
add
add
test
mov
dec
movs
retf
jae
dec
dec
add
jg
xchg
and
pop
cdq
add
mov
popa
clc
mov
out
fadd
cdq
mov
cli
add
push
test
xchg
sbb
and
cs
add
ror
call
add
test
out
adc
jnp
test
push
jle
add
jmp
das
dec
dec
arpl
add
ss
and
add
pop
add
retf
cli
push
cwde
sub
or
out
test
dec
add
push
or
and
add
cwde
add
(bad)
sti
daa
xor
and
pminsw
mov
add
das
(bad)
retf
add
call
(bad)
mov
xchg
cdq
mov
cli
mov
sub
mov
sahf
(bad)
or
add
add
add
mov
jno
and
cmp
popf
cdq
add
push
mov
and
add
mov
pop
push
jl
sbb
and
add
shl
add
sub
add
cwde
popf
add
sub
mov
arpl
and
test
xchg
add
cmps
and
pop
push
sub
inc
sbb
add
cli
add
add
add
add
mov
inc
retf
add
dec
xlat
test
xchg
jecxz
mov
add
add
jmp
mov
or
loop
cli
mov
and
add
inc
retf
call
pop
add
test
addr16
adc
and
and
add
(bad)
dec
add
jmp
and
mov
pop
mov
call
push
add
test
push
popf
cdq
mov
pop
test
(bad)
lahf
mov
das
jmp
arpl
jno
retf
mov
sub
add
mov
add
mov
sahf
(bad)
and
dec
pop
jmp
mov
out
add
add
pop
mov
ja
jmp
mov
add
push
and
mov
pushf
and
cli
cmp
and
fs
or
add
sahf
pop
repnz
add
mov
push
add
xor
sub
mov
add
lock
gs
add
add
push
sub
aad
pushf
pop
add
retf
loop
mov
add
jecxz
daa
mov
cs
frstor
add
and
jmp
mov
sub
xor
(bad)
sahf
or
jmp
stos
test
mov
xchg
xor
fsubr
add
add
jmp
xor
and
add
add
jae
pop
xlat
and
gs
jno
add
add
fisttp
jbe
retf
mov
pcmpeqw
add
jg
add
add
mov
cwde
cwde
mov
add
mov
xchg
add
aam
pop
add
add
mov
test
mov
std
adc
test
enter
jg
jmp
aaa
test
sub
popa
test
(bad)
mov
add
imul
mov
sub
jae
and
add
add
lock
add
jmp
mov
or
cmp
push
mov
and
add
dec
jg
jmp
sbb
les
mov
fwait
mov
pop
add
add
push
test
mov
xchg
cli
pop
mov
jg
jmp
push
enter
mov
mov
sbb
push
gs
add
retf
nop
fisttp
sar
aad
cmps
adc
add
add
jg
test
add
add
xor
test
add
and
add
enter
add
loope
cmps
or
and
add
gs
and
dec
dec
call
dec
lds
wrmsr
and
add
jmp
adc
push
bound
add
sub
test
nop
add
add
lds
add
dec
sub
mov
jg
retf
add
add
jno
and
add
sub
mov
push
add
add
add
add
cmp
das
retf
xchg
xor
add
retf
cli
add
mov
daa
cwde
add
add
(bad)
sbb
jg
xor
add
dec
xlat
test
add
mov
adc
add
mov
xchg
add
and
push
cmp
mov
das
bound
call
add
movnti
add
add
mov
sub
mov
daa
and
add
xchg
mov
dec
dec
mov
imul
retf
int
mov
je
and
push
cwde
sti
add
sub
mov
js
test
xchg
jmp
mov
int3
or
add
popa
push
cmc
sbb
cmovle
xchg
add
and
pop
cwde
add
add
mov
sahf
test
cld
add
add
js
mov
jns
lods
ss
push
ins
movd
push
add
push
and
mov
xchg
or
das
dec
sub
sbb
je
jmp
pop
test
cwde
mov
xchg
cmp
xchg
add
xor
add
dec
add
xor
je
jmp
mov
sub
mov
pop
jo
cld
popa
add
(bad)
retf
nop
fisttp
icebp
arpl
mov
pop
cli
push
add
and
dec
pop
push
adc
mov
or
dec
loopne
fucomi
mov
add
mov
and
add
xchg
cld
mov
dec
inc
inc
mov
or
and
xchg
sti
push
cwde
jle
add
ins
mov
mov
je
cmps
jp
dec
add
fild
sub
mov
pushf
test
add
jge
add
mov
sub
mov
cwde
inc
je
jmp
lds
sub
mov
pushf
inc
mov
dec
cdq
add
add
dec
out
and
out
push
push
cmp
and
je
js
add
test
xchg
sahf
inc
loope
mov
nop
add
cli
xor
test
test
hlt
mov
xor
test
fadd
add
mov
ins
inc
inc
mov
cld
add
mov
test
add
add
xor
test
add
jmp
push
test
add
sub
mov
and
cmovle
add
mov
fdivp
jle
add
mov
and
lods
add
add
xchg
mov
cwde
dec
add
adc
mov
and
add
push
cli
add
jecxz
and
jle
add
xor
jmp
mov
ss
and
nop
fild
sub
mov
pushf
cmps
cmovle
add
pushf
jmp
mov
jg
movs
cdq
push
sbb
ss
dec
jmp
jmp
hlt
or
sub
add
sub
popf
cdq
mov
add
inc
ror
add
fs
and
cs
dec
jae
mov
add
repnz
mov
mov
mov
daa
movs
add
and
das
add
add
xchg
and
dec
push
mov
mov
add
cmp
cvttps2pi
test
mov
mov
cs
dec
jae
xor
jmp
sbb
and
add
pop
cmp
movs
add
adc
mov
mov
mov
cmp
and
fs
dec
add
mov
mov
push
out
xchg
jmp
inc
push
mov
mov
xchg
or
outs
push
mov
lea
sbb
(bad)
(bad)
lock
pushf
mov
mov
mov
ret
mov
push
(bad)
call
rcr
jp
fwait
movs
mov
xchg
das
add
retf
int3
pushf
add
add
retf
add
jno
add
lea
in
inc
cmp
mov
add
mov
(bad)
in
mov
add
xchg
(bad)
add
add
shl
cmp
mov
or
mov
mov
cmp
mov
xchg
and
dec
imul
fbstp
sbb
mov
cmp
bswap
jb
mov
retf
pushf
cdq
push
jo
add
(bad)
in
and
jle
add
xor
enter
mov
xchg
(bad)
(bad)
repnz
mov
and
call
mov
popa
add
add
dec
dec
mov
push
add
add
test
hlt
add
jae
xor
jmp
call
mov
or
cmp
mov
call
sub
pop
mov
jb
call
retf
cmps
and
add
and
add
cdq
mov
enter
mov
sub
repnz
mov
in
mov
dec
and
movs
int3
fbstp
sbb
mov
cmp
xchg
dec
jne
mov
sti
push
add
(bad)
movs
and
mov
xor
jmp
ret
in
push
(bad)
repnz
mov
fild
into
pushf
mov
mov
add
cmp
cmovg
mov
js
add
das
mov
jmp
lea
lea
mov
inc
shl
mov
mov
add
gs
mov
rol
dec
call
add
test
fimul
movs
xor
jmp
lea
lea
add
stos
mov
ins
call
mov
fwait
scas
xor
add
cmovl
mov
pushf
jmp
add
add
mov
push
jmp
lea
lea
mov
and
mov
jnp
xor
mov
mov
or
movs
jne
dec
add
add
add
mov
jmp
mov
cmps
and
retf
sbb
add
(bad)
repnz
or
mov
mov
and
call
mov
mov
(bad)
xchg
add
dec
lar
mov
mov
add
mov
jae
xor
mov
repnz
pushf
repnz
hlt
mov
and
jns
shl
cmps
mov
test
repz
and
add
jmp
and
add
mov
sbb
add
dec
lea
(bad)
in
sti
hlt
mov
add
mov
call
cmp
stos
loop
cli
cmp
sub
pop
lahf
add
and
test
push
fucompp
js
(bad)
add
mov
cwde
mov
(bad)
sub
add
and
mov
push
add
mov
mov
push
pop
and
pop
add
jmp
and
jae
mov
add
and
psubw
stos
imul
call
add
in
out
push
mov
ds
retf
cdq
mov
shr
add
add
into
cli
repnz
add
call
mov
(bad)
loope
pushf
mov
pop
push
add
add
adc
mov
sbb
mov
sub
pushf
and
add
mov
ret
mov
sub
in
mov
das
add
xchg
add
fisttp
mov
loopne
mov
add
rcr
adc
aad
adc
cmp
add
rcr
and
dec
add
jmp
mov
mov
and
push
(bad)
mov
mov
inc
cmp
and
retf
lods
pop
std
jmp
mov
mov
scas
cmp
dec
dec
add
sahf
sahf
ror
add
retf
add
adc
call
js
jmp
cli
scas
test
add
add
dec
inc
das
jmp
mov
mov
cmp
lds
mov
mov
jmp
mov
mov
mov
cmp
ud2
ror
add
push
mov
mov
add
add
inc
add
add
mov
or
call
sub
(bad)
cmp
mov
push
add
xchg
cmp
cmovne
xor
add
(bad)
pop
dec
add
mov
mov
mov
and
add
dec
cld
xor
push
test
retf
sbb
pop
sub
sti
adc
add
(bad)
sti
daa
mov
add
(bad)
(bad)
inc
test
das
push
repnz
jmp
mov
sar
out
in
or
je
frstor
nop
push
mov
push
push
push
sub
call
mov
mov
mov
mov
sub
mov
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
call
mov
jmp
add
pop
pop
pop
pop
ret
jmp
data16
push
mov
push
push
push
and
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
call
xor
mov
mov
call
mov
lea
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovge
mov
jmp
mov
mov
cmp
cmovle
mov
jmp
mov
mov
sub
sub
sub
sub
add
mov
mov
jmp
mov
mov
mov
jmp
mov
add
pop
ret
jmp
nop
push
mov
push
push
push
and
sub
jmp
call
jmp
push
jmp
push
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lea
movs
pop
add
add
add
add
(bad)
or
rol
xchg
add
add
(bad)
push
add
loop
and
add
xrelease
(bad)
xor
add
add
mov
xchg
movs
jnp
add
add
or
lods
rcr
add
xchg
add
add
add
or
mov
aad
jmp
imul
add
adc
mov
repz
fstp
cwde
scas
idiv
mov
mov
(bad)
mov
add
mov
mov
call
fstp
cmp
and
mov
shl
movs
idiv
push
test
add
xchg
mov
mov
(bad)
push
mov
ret
cmp
xor
push
add
xor
push
mov
es
xchg
add
sar
jbe
xchg
mov
divps
add
and
add
mov
push
pop
and
add
pop
add
add
add
cdq
sbb
mov
add
(bad)
jecxz
lahf
add
add
add
mov
sub
mov
add
add
add
add
xchg
add
add
stos
test
push
add
(bad)
lods
aam
jl
add
fcomp
int3
adc
fnsave
test
add
add
pop
add
jg
jmp
scas
aam
sbb
add
sub
mov
and
pop
add
je
jle
pop
mov
mov
sub
mov
(bad)
jne
add
jmp
aas
mov
add
jp
div
add
add
test
xchg
add
mov
jg
sub
sbb
and
add
add
pop
and
xchg
jmp
fld
sub
mov
rol
lahf
rcr
fild
add
mov
(bad)
mov
add
xchg
mov
mov
add
and
test
nop
rcr
repnz
jl
add
add
mov
add
iret
push
mov
sub
(bad)
pop
add
rcl
add
add
add
add
(bad)
test
push
add
mov
add
mov
add
fisttp
arpl
add
(bad)
shr
(bad)
mov
push
add
xchg
push
cmp
add
jns
mov
ror
add
jo
shl
add
add
add
add
push
add
add
mov
std
out
push
fsub
mov
push
lahf
add
add
xchg
and
pop
push
cmp
add
sub
jp
neg
fadd
add
test
add
nop
add
push
mov
mov
add
push
mov
push
popa
repz
add
add
lock
mov
cmp
add
cwde
test
add
mov
sub
fild
pop
pop
rcl
add
jbe
fstp
sbb
nop
ret
mov
rcr
popa
movs
and
pop
push
mov
test
hlt
mov
add
mov
sub
mov
and
add
pop
pop
and
mov
jmp
arpl
fwait
xchg
add
add
test
add
add
test
jns
add
xchg
sub
sbb
and
add
xchg
(bad)
retf
and
pop
mov
and
nop
sahf
add
sub
mov
jl
mov
add
adc
or
call
and
add
sub
pop
test
jge
jmp
mov
sub
mov
rdmsr
dec
add
add
aad
mov
js
and
rcr
push
sbb
add
add
jmp
sbb
and
xchg
call
push
mov
add
mov
jmp
adc
and
add
clc
imul
add
andnps
and
add
xor
sub
add
nop
test
rcr
jmp
fst
push
rol
mov
sub
push
imul
fnsave
test
xchg
add
jne
sub
add
rol
add
cmp
push
add
add
sub
jp
and
add
ror
test
add
mov
jg
cwde
pop
clc
pop
test
je
pop
add
add
jmp
mov
mov
push
xchg
jns
xchg
pop
mov
cli
add
add
paddq
mov
and
add
add
mov
add
mov
add
(bad)
(bad)
ffreep
test
push
add
jmp
mov
mov
mov
aam
and
fstp
push
mov
add
add
push
mov
add
push
mov
stos
cmp
std
push
lahf
fstp
pop
push
mov
ss
mov
mov
and
add
pop
adc
mov
int3
or
and
xchg
inc
and
add
mov
cmp
add
bound
hlt
std
mov
push
pop
push
mov
mov
pop
or
pop
add
mov
mov
aam
or
add
or
add
and
fisub
mov
add
cmp
hlt
std
jmp
cmp
push
mov
mov
push
xchg
jns
add
xchg
rcl
cmp
retf
add
add
pop
push
mov
cmp
add
lock
std
lea
or
rcl
lahf
jle
push
mov
mov
call
mov
push
div
cmp
test
pop
add
and
jmp
add
mov
je
add
rcr
xchg
add
dec
xchg
test
cmp
(bad)
out
pop
mov
aas
test
rcl
jns
xchg
add
rcl
cmp
inc
cmc
or
xchg
call
mov
mov
fld
xor
in
add
mov
mov
fld
rol
add
mov
mov
loop
lods
call
add
jae
add
sub
add
mov
mov
or
add
adc
lods
inc
and
dec
inc
and
repz
add
mov
fisttp
add
jg
cmp
std
mov
mov
adc
fld
adc
add
paddb
inc
and
(bad)
fs
mov
and
or
lahf
add
push
shl
add
xchg
mov
cmp
std
mov
xor
mov
das
cmp
std
mov
mov
mov
and
xchg
inc
xchg
or
add
add
je
mov
add
mov
fcomp
cmp
std
in
xchg
pop
mov
jl
mov
xor
mov
add
add
mov
(bad)
inc
and
xchg
inc
xchg
or
add
mov
inc
add
push
mov
jp
and
add
lahf
call
fs
add
add
xor
std
shl
jbe
add
mov
and
inc
int3
and
sbb
mov
add
rol
add
add
xor
in
add
xchg
mov
mov
mov
nop
xchg
add
mov
jnp
add
mov
popa
and
mov
add
mov
int3
lahf
add
xor
mov
mov
or
std
mov
mov
aad
inc
int3
sub
add
xchg
repnz
add
mov
mov
add
(bad)
hlt
std
add
pop
add
push
mov
stc
or
mov
mov
mov
sbb
cmc
add
lods
add
add
mov
inc
and
push
add
add
rcr
std
mov
mov
stc
add
mov
mov
mov
mov
push
inc
and
add
add
(bad)
lods
add
pop
push
mov
mov
add
(bad)
hlt
std
mov
mov
sbb
std
push
leave
rol
pop
cmp
and
mov
mov
cmp
mov
call
mov
mov
mov
pop
or
rol
add
adc
shl
jbe
push
retf
call
lock
add
mov
mov
call
in
add
add
ss
mov
mov
nop
xchg
add
mov
and
(bad)
fs
add
pop
push
jno
and
add
push
add
mov
mov
add
ja
(bad)
hlt
std
add
add
push
mov
stc
je
mov
mov
and
push
nop
mov
int3
add
inc
and
pop
push
add
and
jg
mov
lahf
fucomp
or
add
xchg
pop
pop
push
push
mov
repz
pop
mov
mov
adc
jb
repnz
(bad)
lock
push
mov
add
and
fld
add
aam
and
add
xchg
mov
(bad)
hlt
std
or
mov
mov
sbb
mov
mov
mov
jae
add
push
mov
jp
mov
jmp
mov
add
mov
sbb
mov
popa
inc
add
mov
mov
add
mov
(bad)
hlt
std
mov
mov
adc
fld
adc
xchg
mov
mov
jb
jno
and
and
inc
xlat
or
lahf
add
aam
mov
add
add
imul
add
sub
mov
mov
mov
mov
cwde
adc
add
inc
xlat
fistp
sbb
add
std
sub
mov
add
push
mov
daa
push
pop
mov
mov
mov
aas
inc
and
mov
mov
mov
cwde
pop
add
call
mov
sti
mov
std
adc
mov
mov
pop
inc
and
mov
xchg
repnz
or
add
add
mov
call
mov
jle
push
mov
mov
(bad)
xchg
and
pop
mov
fild
mov
xchg
repnz
add
ror
hlt
std
fstp
add
mov
mov
add
adc
fild
(bad)
aam
fld
xchg
call
add
push
aas
cmp
and
(bad)
dec
add
rcr
std
cld
mov
xchg
and
xchg
add
shl
add
inc
mov
and
and
xlat
pop
add
hlt
std
fs
add
add
mov
mov
mov
out
jb
add
add
add
push
add
sbb
pop
add
call
mov
mov
mov
mov
mov
add
add
and
inc
int3
and
sbb
mov
mov
xchg
int3
and
rcr
and
pop
add
std
mov
mov
adc
fld
ror
mov
mov
loop
lods
or
rol
lahf
mov
call
mov
pop
cmp
std
repz
mov
sbb
cmc
rol
call
inc
and
jno
nop
or
and
xlat
or
add
lahf
push
adc
out
mov
ret
mov
mov
xor
stos
rol
ror
and
out
and
mov
and
call
add
add
inc
hlt
std
mov
mov
mov
mov
pop
mov
call
sar
jl
mov
les
add
dec
and
sahf
add
fld
pop
add
inc
enter
aaa
add
pop
and
and
jmp
(bad)
cwde
shl
mov
push
inc
inc
femms
jmp
in
xchg
add
sar
mov
mov
add
add
cld
and
dec
add
xchg
repnz
or
and
and
lahf
fstp
push
inc
jl
call
jmp
mov
add
mov
arpl
mov
aas
lock
loop
lods
or
add
add
stc
push
add
add
mov
call
add
pop
mov
aam
mov
mov
sbb
and
xchg
call
adc
pop
mov
repz
inc
and
fstp
add
dec
jl
mov
mov
mov
jo
pop
mov
mov
int3
mov
inc
xchg
mov
and
xchg
int3
and
add
rcr
add
add
mov
jg
shl
mov
mov
repz
pop
mov
mov
mov
das
fs
mov
mov
(bad)
popa
and
push
mov
repz
shl
std
mov
mov
mov
mov
and
add
mov
inc
lods
add
push
add
test
add
lahf
mov
jmp
push
mov
stc
sbb
std
cmp
pop
mov
inc
in
aad
push
or
push
mov
fild
xor
repz
lahf
fld
push
inc
pop
ror
jmp
(bad)
ins
and
pop
push
mov
(bad)
(bad)
inc
test
and
push
retf
fucomp
xor
fld
add
std
mov
mov
mov
mov
das
inc
and
add
add
add
std
mov
test
push
mov
fldcw
repnz
mov
sub
sub
mov
mov
cmp
add
add
add
add
movlps
and
and
add
add
stc
xchg
add
add
push
nop
repnz
std
jmp
push
mov
add
mov
mov
mov
mov
mov
push
push
retf
add
and
mov
mov
mov
test
pop
mov
mov
and
add
rcl
leave
and
sbb
mov
jae
jbe
nop
add
add
dec
and
outs
into
into
hlt
std
push
and
add
test
xchg
and
add
mov
add
inc
not
mov
sbb
cmc
dec
call
mov
xor
mov
mov
mov
and
add
add
add
and
add
and
add
and
call
mov
jb
push
mov
mov
or
add
fbld
add
inc
xlat
fistp
inc
mov
pop
add
call
push
mov
neg
pop
mov
mov
and
and
push
add
and
(bad)
pop
mov
add
and
add
add
pop
retf
call
mov
cld
clc
push
mov
not
pop
mov
cmp
and
mov
jns
xchg
add
pop
jae
and
push
nop
add
pop
dec
and
call
aas
call
in
mov
mov
mov
nop
in
add
push
mov
mov
mov
mov
dec
and
js
iret
hlt
std
lea
jb
push
mov
mov
idiv
mov
mov
mov
aaa
mov
mov
repz
(bad)
pop
mov
pop
adc
add
sub
rcr
mov
add
mov
and
push
mov
xor
add
pop
mov
xchg
pop
add
add
mov
std
mov
(bad)
movs
and
add
push
call
daa
push
add
add
mov
stc
in
add
add
nop
mov
js
add
add
add
add
aam
mov
std
mov
mov
add
inc
and
rcr
and
add
mov
mov
call
mov
mov
jo
pop
mov
mov
unpcklps
test
adc
add
je
repz
push
std
mov
mov
mov
mov
mov
mov
pop
xchg
and
inc
and
mov
(bad)
lock
mov
pop
sar
sub
jno
hlt
std
mov
pop
sub
mov
repz
pop
mov
mov
mov
mov
mov
jno
nop
or
push
add
cmp
int3
hlt
std
fld
pop
add
ss
mov
mov
and
push
nop
add
int3
add
sbb
mov
add
repz
add
xchg
jns
jmp
add
add
ss
pop
mov
mov
mov
(bad)
sbb
push
add
mov
inc
and
and
les
sbb
rcr
push
mov
mov
mov
in
add
add
dec
nop
mov
and
mov
mov
mov
xchg
sbb
test
add
push
mov
push
adc
mov
mov
push
adc
mov
mov
(bad)
sar
add
add
arpl
hlt
std
mov
mov
mov
fidivr
push
mov
add
popa
retf
lods
mov
lahf
add
fnstsw
mov
sbb
jl
push
nop
add
lds
(bad)
fs
add
add
repnz
mov
and
adc
fxch
hlt
std
sub
push
mov
cmp
add
pop
adc
(bad)
sar
push
imul
out
jl
sub
lahf
add
mov
mov
mov
add
add
or
mov
add
pop
pop
jl
push
nop
dec
push
and
jmp
test
mov
cmp
add
repz
fstp
paddsb
std
sbb
nop
mov
adc
sbb
cmc
add
and
add
push
mov
mov
add
jp
hlt
std
push
rcl
adc
mov
add
add
mov
pop
rsqrtps
nop
mov
and
rol
pop
pop
pop
add
jmp
data16
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
movzx
mov
mov
sub
sub
mov
movzx
mov
mov
add
add
mov
mov
add
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
mov
movzx
mov
mov
add
add
sub
mov
mov
movzx
mov
xor
mov
and
xor
and
or
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
sub
sub
mov
mov
jmp
add
pop
pop
pop
pop
ret
jmp
nop
push
mov
push
push
push
sub
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
movsx
mov
xor
and
mov
xor
and
xor
and
and
or
or
xor
mov
mov
mov
jmp
mov
add
add
sub
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
movzx
mov
add
mov
mov
jmp
mov
jmp
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
jmp
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
movsx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
sub
mov
sub
add
mov
sub
mov
mov
shl
mov
mov
jmp
mov
sub
add
add
mov
mov
jmp
mov
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
jmp
nop
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
movsx
mov
mov
mov
mov
jmp
mov
add
add
sub
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
lea
mov
mov
mov
mov
call
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
jmp
mov
add
pop
pop
ret
jmp
nop
push
mov
push
push
push
and
sub
jmp
call
jmp
push
jmp
push
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
and
mov
leave
xor
push
mov
inc
and
repnz
inc
out
cmp
and
push
shr
retf
imul
and
jg
test
test
fiadd
lods
push
ins
cmp
sub
pop
pop
loope
mov
aas
(bad)
call
pop
mov
cmps
je
push
add
jmp
mov
and
in
cld
in
ss
call
mov
add
push
outs
xchg
xchg
or
pop
and
adc
mov
add
mov
enter
and
lods
xchg
add
out
test
mov
add
add
aas
frstor
mov
sub
mov
(bad)
and
inc
add
pop
add
test
inc
and
sub
mov
jne
sub
inc
and
int3
fsub
or
jnp
xchg
aam
add
add
and
sub
inc
inc
adc
inc
mov
add
popa
xchg
loope
mov
inc
test
jle
jmp
inc
inc
and
je
jmp
mov
sub
mov
and
psrlw
or
cmp
push
int3
(bad)
mov
retf
rcl
imul
push
add
fucomp
add
add
add
pop
fcom
mov
add
add
jnp
add
add
inc
shr
add
add
or
in
mov
add
add
and
jmp
mov
mov
rol
add
push
scas
pop
in
ss
mov
dec
pop
and
add
add
inc
(bad)
push
xor
jbe
add
mov
mov
lea
xor
add
add
push
(bad)
hlt
and
fadd
add
lea
call
add
mul
sub
add
mov
and
(bad)
mov
xchg
xor
mov
cmp
sbb
cmp
add
rol
rol
add
and
pop
push
add
lods
mov
pop
jo
mov
pop
cmp
mov
jmp
fdivp
movs
pop
imul
and
mov
mov
mov
pop
mov
stos
mov
add
sti
jmp
jmp
sub
int
gs
pop
pop
or
push
jp
(bad)
jmp
nop
push
mov
push
push
push
and
sub
jmp
push
jmp
call
jmp
push
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
adc
or
cwde
inc
test
mov
and
mov
lea
pop
loop
mov
jge
in
jle
aaa
and
pop
push
add
pop
add
inc
and
cmp
mov
rol
pop
jmp
mov
xchg
int
aas
inc
inc
jmp
test
outs
add
and
add
es
add
add
(bad)
aaa
(bad)
pop
repz
mov
cmovne
mov
mov
es
add
call
call
shl
xchg
psllq
stos
fs
shl
pop
sub
loopne
bound
(bad)
jmp
push
mov
push
push
push
and
sub
jmp
push
jmp
push
jmp
push
jmp
push
ret
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xchg
inc
and
dec
cmp
mov
mov
or
and
mov
xor
inc
add
add
mov
(bad)
cmp
mov
xor
mov
mov
and
add
lea
xlat
xchg
movs
sub
mov
pop
sbb
stc
xor
add
or
add
add
cwde
shl
popa
jecxz
and
jg
jmp
mov
sbb
mov
je
jmp
mov
pusha
cdq
in
(bad)
ins
inc
xor
add
pop
jmp
mov
ror
mov
mov
add
repz
data16
sar
and
sub
push
test
add
mov
xor
add
loope
(bad)
and
daa
inc
and
in
add
mov
pop
pop
add
mov
dec
push
mov
adc
add
add
call
cmp
retf
das
xor
je
jmp
jecxz
fist
jo
ror
add
add
pop
loope
in
call
out
mov
lods
loop
adc
movs
push
daa
je
retf
cmp
and
pxor
imul
cmp
jl
inc
movzx
push
cmp
rol
aad
cmp
and
call
mov
and
add
ror
cmp
adc
dec
mov
or
aad
pusha
and
xlat
fs
push
inc
and
lea
add
test
add
jmp
(bad)
and
cdq
mov
rcl
mov
add
loopne
add
jecxz
pop
push
in
movs
inc
sbb
jg
inc
jmp
lea
cli
pop
cmc
mov
jmp
data16
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
push
jmp
push
jmp
call
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
sub
jne
pop
dec
adc
adc
cmp
or
mov
and
movzx
push
jne
sub
shr
jo
(bad)
scas
sar
inc
cmc
loope
out
push
pop
inc
and
mov
dec
and
rcr
add
add
cmp
sub
inc
movs
int3
lea
add
add
inc
and
push
add
add
movs
add
adc
xchg
fdivr
pusha
jmp
mov
and
or
add
add
scas
add
push
mov
and
mov
test
cld
mov
pmaxub
add
jmp
fsubr
cs
mov
vmread
add
jmp
mov
sub
add
adc
test
scas
push
jmp
mov
and
sub
mov
stos
test
rol
fiadd
push
das
add
out
(bad)
out
inc
and
movups
add
or
lods
daa
xchg
test
cmp
test
das
shl
hlt
sub
mov
add
test
loope
add
pop
add
xchg
sub
or
add
jmp
jo
rol
add
mov
(bad)
push
and
cmp
sub
mov
sbb
and
pop
rol
or
cmp
mov
cmc
popf
xchg
and
les
inc
jae
mov
add
cmp
mov
test
scas
test
mov
and
xlat
push
push
(bad)
jmp
(bad)
fdiv
and
and
and
or
push
gs
push
xchg
and
add
cmp
ja
fiadd
pop
and
jmp
nop
inc
or
add
loope
inc
and
add
or
lods
and
jns
imul
js
push
add
fisub
aaa
push
das
sub
push
inc
mov
push
sahf
movs
ins
jmp
lea
pop
pop
pop
pop
inc
popa
cmp
(bad)
jmp
nop
push
mov
sub
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
cmp
cmovb
mov
jmp
lea
mov
mov
imul
add
mov
mov
call
mov
jmp
mov
mov
sub
sub
mov
mov
jmp
add
pop
ret
jmp
data16
push
mov
sub
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
cmp
cmovb
mov
jmp
lea
mov
mov
mov
shl
add
mov
mov
call
mov
jmp
mov
mov
sub
sub
mov
mov
jmp
call
add
pop
ret
jmp
nop
push
mov
sub
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
jmp
mov
jmp
mov
mov
sub
sub
mov
mov
jmp
mov
mov
jmp
mov
mov
cmp
cmovb
mov
jmp
lea
mov
mov
mov
shl
add
mov
mov
call
mov
jmp
mov
mov
mov
sub
mov
sub
add
mov
sub
mov
mov
sub
sub
mov
mov
jmp
add
pop
ret
jmp
nop
push
mov
sub
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
cmp
cmovb
mov
jmp
lea
mov
mov
mov
shl
add
mov
mov
call
mov
jmp
mov
sub
add
add
mov
mov
jmp
add
pop
ret
jmp
data16
push
mov
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
add
pop
ret
jmp
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
mov
mov
mov
jmp
mov
mov
sub
sub
mov
mov
jmp
mov
add
pop
ret
jmp
nop
push
mov
push
push
push
and
sub
push
jmp
call
jmp
push
ret
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec
inc
or
mov
js
jg
inc
ins
mov
inc
(bad)
dec
(bad)
cdq
and
(bad)
and
loope
movs
xor
jmp
cmps
inc
and
mov
orps
add
add
mov
sub
jnp
and
ror
adc
cmc
add
adc
ins
mov
je
xor
ja
xor
es
(bad)
jnp
jmp
add
adc
cmc
add
test
push
stos
aam
xchg
out
imul
add
jmp
mov
push
jmp
sub
ror
mov
loope
cmc
mov
imul
pmullw
add
add
jnp
int3
push
cdq
jmp
mov
cli
add
pop
pop
fild
out
add
or
dec
mov
gs
fld
into
push
cmp
loope
clc
mov
mov
inc
mov
mov
xchg
rol
xor
jnp
jns
push
jmp
outs
adc
stos
aad
pop
(bad)
jp
add
add
(bad)
inc
add
shr
add
dec
rol
mov
xchg
jmp
mov
fwait
mov
add
xor
cmovne
daa
fidivr
loope
xor
pop
mov
mov
cmp
xchg
push
int3
add
inc
stc
cmp
inc
add
add
shr
shr
inc
dec
je
shl
sbb
mov
and
jecxz
and
call
mov
and
xchg
cmp
add
mov
mov
test
jmp
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
jmp
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
mov
mov
jmp
mov
add
pop
pop
ret
jmp
nop
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
jmp
mov
mov
call
mov
mov
sub
sub
add
mov
mov
jmp
mov
mov
mov
mov
movzx
cmp
cmovne
mov
jmp
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
jmp
mov
add
add
sub
mov
mov
jmp
mov
mov
add
sub
sub
add
sub
sub
mov
mov
shl
add
add
mov
mov
mov
mov
mov
mov
call
sub
sub
add
mov
mov
jmp
mov
add
pop
pop
ret
jmp
nop
push
mov
push
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
jmp
mov
add
pop
pop
ret
jmp
nop
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
push
jmp
push
jmp
call
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
out
mov
int3
xor
jb
xor
ret
mov
xor
jle
call
mov
inc
hlt
mov
and
pop
dec
cmp
std
js
cmp
jmp
inc
mov
cli
gs
sbb
(bad)
dec
test
add
inc
and
aam
sub
xchg
in
and
je
fwait
enter
mov
jne
jmp
inc
mov
maskmovq
neg
add
jmp
mov
sub
stos
inc
and
je
adc
(bad)
xchg
repnz
add
mov
(bad)
or
stc
add
push
add
sub
push
add
add
mov
mov
or
dec
and
jmp
mov
sti
mov
clc
mov
add
inc
and
push
test
pop
outs
lods
fnsave
add
push
and
mov
hlt
pop
pop
push
mov
jmp
data16
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
push
jmp
push
jmp
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
add
dec
adc
push
mov
dec
sbb
in
or
inc
and
jg
adc
leave
sbb
mov
mov
mov
add
adc
and
into
sub
jno
push
add
add
bound
add
sub
ja
cmp
mov
test
mov
cdq
add
inc
and
sub
mov
adc
pushf
and
add
mov
stos
sub
mov
nop
out
add
add
add
pop
add
mov
mov
mov
adc
ffree
test
add
inc
push
sub
pop
(bad)
push
push
and
mov
and
add
(bad)
dec
and
push
test
add
into
and
es
xor
or
cdq
jle
inc
dec
ret
ficomp
ins
pop
ret
jmp
data16
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
jmp
mov
add
pop
ret
jmp
nop
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
sub
sub
mov
mov
jmp
mov
mov
sub
mov
sub
mov
mov
mov
mov
mov
mov
jmp
mov
add
pop
pop
ret
jmp
data16
push
mov
push
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
sub
add
add
mov
mov
jmp
mov
add
pop
pop
ret
jmp
xchg
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
cmp
cmova
mov
jmp
mov
mov
mov
movsx
mov
movsx
cmp
cmovne
mov
jmp
mov
mov
mov
movzx
mov
movzx
cmp
cmovl
mov
mov
jmp
mov
mov
mov
movsx
cmp
cmove
mov
jmp
mov
mov
jmp
mov
jmp
mov
jmp
mov
add
mov
mov
add
mov
mov
add
add
sub
mov
mov
jmp
mov
mov
jmp
mov
add
pop
pop
ret
jmp
xchg
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
cmp
cmova
mov
jmp
mov
mov
mov
movzx
mov
movzx
cmp
cmovne
mov
jmp
mov
mov
mov
movzx
mov
movzx
cmp
cmovl
mov
mov
jmp
mov
mov
mov
movzx
cmp
cmove
mov
jmp
mov
mov
jmp
mov
jmp
mov
jmp
mov
add
mov
mov
add
mov
mov
add
add
sub
mov
mov
jmp
mov
mov
jmp
mov
add
pop
pop
ret
jmp
xchg
push
mov
push
push
push
and
sub
jmp
push
jmp
push
jmp
push
jmp
push
ret
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
jp
jbe
add
adc
out
test
xor
(bad)
mov
pop
jne
mov
fild
jne
and
mov
adc
mov
pop
xor
pop
mov
mov
aas
dec
retf
push
add
inc
and
mov
ret
mov
imul
cld
and
mov
mov
syscall
enter
add
mov
add
mov
and
mov
mov
dec
xor
inc
in
inc
cmp
dec
xchg
pop
mov
mov
dec
push
out
fisub
add
add
in
and
add
add
jne
mov
mov
jecxz
sbb
push
sbb
das
dec
rcr
inc
add
jmp
mov
mov
addr16
and
test
mov
das
dec
mov
mov
ud0
add
test
in
push
xor
or
dec
sbb
jg
inc
out
xchg
add
inc
fdiv
std
inc
and
or
cdq
add
add
mov
and
ret
mov
dec
add
test
add
jne
add
sbb
jae
out
cmp
je
jmp
sbb
sub
mov
paddsb
aam
add
(bad)
aam
xor
inc
adc
adc
test
add
pop
jmp
sub
add
mov
pop
imul
jo
add
cmp
cmovb
jmp
sub
push
popa
sub
mov
jle
xchg
and
jbe
add
push
inc
pop
adc
add
and
jmp
mov
mov
jl
dec
dec
jns
add
add
xchg
mov
pop
cwde
xor
xchg
add
mov
and
in
add
and
popa
mov
mov
int
nop
stos
out
mov
mov
sub
add
adc
retf
mov
jo
add
and
and
out
pop
mov
sbb
clc
and
add
add
test
sbb
cmp
jmp
(bad)
repz
pop
das
in
mov
inc
popf
(bad)
sbb
nop
push
mov
push
push
push
and
sub
jmp
call
jmp
push
jmp
push
jmp
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
and
mov
pop
paddd
mov
jecxz
inc
xchg
dec
inc
fmul
and
adc
ins
imul
or
int3
add
add
add
mov
dec
mov
call
mov
jne
data16
cmp
jmp
sub
fcom
sub
int3
mov
sbb
dec
cdq
sbb
(bad)
and
test
pop
fiadd
add
push
cs
fld
mov
xlat
out
add
add
and
cmps
in
dec
out
mov
je
jmp
xchg
inc
(bad)
sbb
pop
cld
loopne
mov
(bad)
mov
jmp
mov
xor
mov
mov
and
mov
pop
fiadd
add
pop
mov
inc
jo
icebp
mov
mov
call
xor
pop
and
xadd
mov
ins
push
add
fimul
add
test
lahf
mov
int
(bad)
(bad)
inc
into
and
xor
and
or
in
call
and
mov
inc
and
fninit
out
movs
xor
add
mov
mov
xor
or
mov
stos
inc
and
lods
clc
lea
xchg
mov
jbe
(bad)
mov
add
or
mov
out
jecxz
data16
push
mov
push
push
push
and
sub
push
jmp
push
ret
jmp
push
jmp
call
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
or
sbb
push
sbb
adc
mov
and
mov
mov
cmp
mov
mov
push
dec
mov
gs
and
add
xor
adc
jp
sub
and
mov
add
(bad)
adc
add
push
mov
inc
dec
push
mov
and
lods
push
push
add
jmp
xor
jecxz
daa
jp
mov
jge
add
xchg
add
sub
cld
sub
les
unpckhps
add
jmp
mov
repz
push
dec
adc
mov
maxps
add
pop
inc
add
add
mov
nop
arpl
add
add
sub
xor
mov
and
je
mov
mov
sub
push
mov
add
add
je
add
sub
icebp
inc
and
and
lods
add
movs
sbb
xor
mov
or
sbb
add
pop
lock
add
dec
hlt
jp
jl
and
je
sbb
jmp
mov
mov
mov
scas
ficomp
xlat
mov
and
cmp
mov
cmc
inc
add
mov
jge
call
addr16
and
ja
mov
xlat
mov
jmp
mov
inc
out
cmp
out
push
and
cmovb
pop
xor
inc
hlt
add
inc
jmp
mov
inc
push
mov
jb
xchg
hlt
or
dec
icebp
(bad)
jmp
or
inc
rol
ror
adc
in
hlt
popa
push
sub
mov
fidivr
jp
outs
and
add
into
inc
and
mov
les
add
add
hlt
adc
pop
pop
jmp
data16
push
mov
push
mov
mov
mov
mov
add
pop
ret
nop
push
mov
mov
imul
add
add
sub
mov
shr
xor
mov
xor
xor
or
or
xor
and
mov
pop
ret
data16
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
movzx
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
add
mov
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
movzx
cmp
cmove
mov
jmp
mov
jmp
mov
jmp
mov
mov
movzx
movzx
cmp
cmovne
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
add
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
movzx
movzx
cmp
cmove
mov
jmp
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
movzx
cmp
cmove
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
mov
movzx
movzx
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
movzx
movzx
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
add
mov
mov
add
mov
movzx
mov
mov
mov
mov
movzx
cmp
cmove
mov
jmp
mov
jmp
mov
mov
movzx
cmp
cmove
mov
jmp
mov
jmp
mov
mov
mov
mov
add
mov
movzx
mov
mov
add
mov
mov
mov
movzx
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
movzx
cmp
cmove
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
mov
add
mov
movzx
mov
mov
add
mov
mov
mov
movzx
cmp
cmove
mov
jmp
mov
jmp
mov
mov
mov
mov
movzx
cmp
cmove
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
jmp
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
jmp
data16
push
mov
push
sub
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
cmp
cmova
mov
jmp
mov
mov
jmp
mov
mov
mov
shl
add
mov
sub
sub
add
shl
add
mov
mov
jmp
mov
mov
mov
cmp
cmovae
mov
jmp
mov
mov
mov
mov
mov
mov
call
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
jmp
mov
jmp
mov
add
mov
mov
jmp
mov
mov
jmp
mov
add
pop
pop
ret
jmp
nop
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
add
add
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
movzx
mov
call
mov
mov
mov
mov
mov
jmp
mov
sub
add
add
mov
mov
jmp
mov
mov
mov
mov
call
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
call
mov
mov
mov
jmp
mov
add
pop
ret
jmp
nop
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
movzx
mov
call
mov
movzx
mov
mov
call
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
movzx
cmp
cmove
mov
jmp
mov
mov
jmp
mov
add
mov
mov
add
mov
mov
jmp
mov
movzx
mov
call
mov
movzx
mov
mov
call
mov
sub
mov
add
mov
mov
jmp
mov
add
pop
pop
ret
jmp
data16
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
cdq
idiv
mov
mov
mov
mov
mov
jmp
mov
add
add
sub
mov
mov
mov
mov
mov
cdq
mov
idiv
mov
mov
jmp
mov
add
pop
ret
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
push
jmp
call
jmp
push
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
pop
push
or
and
add
test
les
add
push
and
add
mov
or
and
xor
and
xor
mov
add
add
add
ret
pushf
add
cmp
or
mov
and
push
inc
and
mov
retf
add
int
fst
cmp
mov
cmps
add
outs
add
sar
test
arpl
mov
sub
test
and
add
pop
push
xor
mov
xor
sar
out
lock
icebp
inc
push
cs
loop
xchg
rol
or
aam
add
dec
push
and
mov
and
add
add
inc
and
push
popf
add
mov
outs
dec
and
je
sahf
or
add
add
mov
dec
mov
xor
mov
sub
iret
inc
and
add
add
mov
mov
arpl
dec
test
jb
cld
mov
or
inc
je
mov
and
and
or
sbb
push
lds
add
mov
loop
cwde
mov
dec
mov
inc
(bad)
lds
and
mov
ror
jb
popf
dec
and
mov
call
dec
add
inc
mov
addr16
add
add
outs
ror
add
add
add
mov
lds
rcl
mov
mov
mov
(bad)
xor
sbb
cwde
or
or
jne
and
add
out
cmp
inc
dec
add
add
mov
pop
sub
mov
dec
xchg
jmp
mov
or
hlt
mov
cs
pop
(bad)
call
push
push
and
sub
jmp
push
jmp
call
jmp
push
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
inc
push
aas
mov
mov
cmps
mov
mov
and
add
nop
add
cmps
or
add
test
add
xlat
add
and
daa
add
mov
bound
(bad)
push
pushf
js
loop
jmp
mov
and
or
outs
jo
stos
cdq
adc
add
add
add
xor
add
stc
outs
push
add
mov
add
add
mov
add
repz
fucomp
fisttp
jmp
daa
mov
jl
xor
pusha
ss
mov
repz
sub
mov
jo
rcr
psrad
add
jmp
arpl
clc
fisttp
(bad)
jg
add
push
cld
sbb
and
sub
repz
and
wbinvd
scas
clc
add
add
add
lock
add
(bad)
jnp
add
jmp
mov
and
sub
xchg
jecxz
fdiv
or
jp
add
inc
jmp
outs
xor
scas
repz
sub
fnsave
add
add
inc
and
sub
mov
movaps
or
pop
sub
in
call
gs
add
add
retf
daa
inc
add
fwait
sub
mov
mov
sbb
push
mov
fsubr
loopne
clc
sbb
test
js
stc
test
pminsw
pop
inc
and
sub
cmp
ins
test
mov
add
jo
inc
int3
rol
and
je
jmp
popa
xchg
out
jo
mov
inc
and
(bad)
lock
add
push
nop
add
cld
mov
jo
jl
addr16
or
pushf
clc
add
js
add
mov
inc
mov
iret
inc
and
mov
(bad)
(bad)
fadd
cld
add
xchg
shr
mov
add
add
jnp
inc
xor
inc
bound
push
mov
add
popa
jo
push
lea
and
je
adc
add
mov
imul
test
add
daa
jmp
pop
mov
add
pop
cmp
cmp
into
and
stc
add
leave
in
add
jns
adc
(bad)
es
jb
add
hlt
retf
test
mov
push
mov
nop
add
push
xchg
and
add
jnp
add
mov
mov
mov
jmp
and
call
jg
and
sbb
repnz
mov
xor
xchg
or
add
sldt
add
cmovne
pop
(bad)
and
scas
mov
test
push
mov
mov
add
add
jl
icebp
mov
mov
in
add
inc
loop
xchg
adc
retf
add
mov
mov
fld
icebp
hlt
in
or
jl
mov
jne
add
cmovne
mov
mov
and
gs
add
xor
clc
and
mov
mov
pop
dec
add
add
repz
and
(bad)
stc
add
dec
and
mov
add
out
add
adc
jl
xor
dec
jmp
add
add
inc
dec
je
or
jae
push
retf
daa
add
(bad)
(bad)
(bad)
dec
sub
push
xor
test
add
add
sub
dec
(bad)
stc
ins
jp
xchg
adc
mov
jmp
sub
xor
cmc
or
adc
mov
lea
and
fcom
jmp
data16
push
mov
push
push
push
and
sub
push
jmp
call
jmp
push
jmp
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
fist
pop
push
or
jne
mov
mov
adc
jbe
xchg
in
mov
adc
pop
add
mov
ins
sti
and
out
add
ins
and
mov
dec
mov
adc
or
fnstenv
mov
jno
leave
add
push
test
mov
mov
pop
add
or
sbb
mov
dec
push
cmp
pop
mov
cdq
add
jg
jmp
mov
iret
fadd
aas
cld
sub
and
movs
sbb
jmp
or
out
inc
or
add
xchg
push
mov
xchg
test
mov
add
jbe
add
push
add
add
aas
pop
imul
(bad)
add
movs
adc
or
push
popf
push
add
add
push
ret
xchg
mov
jns
sub
into
fdivr
mov
test
dec
add
mov
mov
and
out
add
push
or
mov
add
or
jmp
leave
into
fcomp
add
add
adc
sub
fst
add
mov
add
jmp
mov
push
add
add
mov
mov
icebp
scas
push
dec
mov
sub
mov
sub
rol
je
mov
pop
test
add
add
mov
add
psubw
add
daa
fadd
adc
sub
sti
add
push
pusha
ss
mov
outs
add
paddq
or
rcr
dec
rcl
mov
daa
in
out
(bad)
add
jg
sti
mov
test
push
add
sub
mov
sbb
out
paddq
mov
dec
add
mov
push
add
frstor
jno
add
add
(bad)
add
fadd
adc
sub
push
add
scas
sub
mov
or
stos
test
or
in
jb
add
mov
popf
mov
adc
ret
push
and
or
add
xor
fnstenv
add
add
jecxz
aas
dec
dec
mov
and
dec
add
test
adc
add
imul
push
add
mov
mov
or
add
(bad)
xor
add
jmp
std
test
add
or
push
xchg
test
add
jg
jmp
mov
sub
outs
test
push
add
jg
jmp
pop
test
cdq
add
daa
mov
shr
cld
enter
dec
out
adc
add
outs
add
mov
hlt
clc
mov
dec
divps
or
add
mov
jno
add
into
icebp
and
sub
add
add
mov
xchg
adc
test
lock
add
add
fnstenv
push
mov
add
iret
lahf
xchg
jl
sub
movs
add
cwde
lea
in
movlhps
add
cmp
add
mov
add
cmova
add
fdivr
add
and
add
add
mov
punpckldq
fidiv
rol
mov
mov
nop
push
fimul
enter
and
add
daa
fcom
add
sub
pusha
mov
mov
fcom
add
push
xor
add
rcr
cs
or
xor
add
rol
scas
push
jmp
mov
in
daa
inc
add
mov
fiadd
xchg
add
(bad)
push
or
mov
add
ret
sbb
or
mov
add
mov
sbb
add
add
test
jle
push
jmp
mov
sub
inc
pop
ss
or
add
dec
sbb
add
in
je
shl
push
out
pop
push
cs
add
or
pop
pop
push
or
jmp
inc
dec
clc
inc
mov
or
cmps
mov
movs
adc
jmp
fist
add
add
mov
add
fstp
mov
sub
mov
stos
xchg
and
add
push
shl
test
add
daa
sbb
out
xchg
mov
(bad)
bnd
or
jmp
mov
mov
test
movs
add
adc
jmp
cmp
add
mov
add
add
add
mov
sub
movs
add
jmp
test
outs
out
fbld
shl
rol
pop
test
cdq
add
daa
pop
iret
dec
push
fmul
fmul
test
sbb
add
mov
fld
int
mov
pusha
imul
rol
mov
rol
xchg
cdq
cmp
mov
pushf
jbe
add
rol
ror
jmp
sub
sti
pop
add
sub
mov
add
imul
mov
dec
pop
test
push
add
add
xor
mov
int
add
sub
pusha
mov
dec
sub
cwde
rcl
lds
add
mov
mov
sar
inc
jmp
sub
add
(bad)
test
or
and
add
mov
inc
add
call
mov
movs
add
(bad)
and
add
add
outs
add
add
sub
test
(bad)
add
add
jbe
cmp
or
mov
sub
mov
jg
movs
add
movs
sbb
test
add
retf
shl
dec
test
add
cwde
add
jbe
js
add
scas
(bad)
rol
add
add
outs
out
shr
je
push
adc
add
jecxz
cdq
or
push
test
add
push
sub
mov
rcpps
mov
scas
push
dec
mov
leave
sub
dec
inc
out
je
mov
shr
xchg
xlat
add
mov
add
inc
jg
jmp
inc
test
inc
add
mov
dec
mov
and
je
jmp
mov
sub
mov
popf
sub
pop
and
add
jno
or
xor
push
add
enter
test
dec
test
add
dec
jmp
mov
outs
add
mov
popf
pop
jg
aas
or
and
add
fstp
cmp
ins
inc
mov
ror
sbb
test
add
sub
mov
pusha
imul
mov
cs
add
or
mov
dec
je
jmp
mov
scas
sub
int
mov
jmp
push
add
jmp
mov
sub
add
repnz
add
jecxz
into
add
cdq
test
adc
xchg
sub
pusha
addr16
push
cmp
add
dec
shr
mov
in
test
push
add
add
clc
inc
add
add
inc
or
add
out
out
add
xor
and
add
or
inc
je
and
into
fadd
mov
sub
mov
es
mov
add
add
add
push
ror
mov
dec
mov
ins
and
or
rcl
scas
add
out
fmul
add
cmp
jae
and
ret
add
add
dec
sar
and
or
enter
mov
int
mov
(bad)
mov
add
add
dec
scas
outs
aam
call
inc
or
add
pusha
adc
xchg
xchg
mov
cmp
cmove
test
add
add
push
add
stc
xor
sbb
les
add
mov
mov
add
(bad)
add
adc
add
mov
jbe
test
scas
push
lock
mov
cmp
cmove
out
ret
add
jmp
xor
mov
inc
add
fscale
xchg
jno
leave
add
mov
ins
fst
add
test
es
and
ins
and
call
mov
outs
jecxz
jo
add
outs
pop
hlt
(bad)
hlt
and
mov
fsubr
sub
jne
fdiv
mov
arpl
mov
mov
xor
add
add
rol
mov
add
add
hlt
add
add
jmp
outs
jmp
xchg
add
push
jae
add
leave
dec
add
mov
adc
adc
popf
hlt
mov
mov
mov
call
mov
push
inc
and
jmp
(bad)
leave
and
add
add
movs
add
add
mov
ins
add
out
xor
mov
mov
cmc
outs
(bad)
sub
or
mov
jbe
add
add
mov
out
mov
xchg
jmp
xchg
mov
arpl
add
add
mov
mov
es
push
out
mov
cmp
add
add
inc
sbb
xchg
cdq
add
fstp
jbe
mov
jmp
jp
and
dec
add
mov
mov
add
fsub
add
mov
lods
cmp
popf
hlt
mov
mov
mov
ds
adc
int
and
or
add
sbb
and
jno
add
leave
add
fsubr
movhps
(bad)
cmp
hlt
movzx
xchg
jo
xchg
add
dec
rol
jae
mov
and
xor
add
popa
mov
add
xchg
fidivr
jae
xchg
and
add
add
gs
add
push
int3
jmp
sub
mov
push
add
add
loop
mov
sbb
stos
mov
push
bnd
add
or
clc
push
scas
add
cmovne
(bad)
mov
dec
sub
xchg
test
pop
mov
add
pop
dec
and
or
ja
add
push
test
and
add
enter
mov
dec
and
sub
jle
add
(bad)
movs
and
add
sbb
jo
jo
add
mov
mov
xor
mov
repnz
fsub
call
mov
cmp
jg
in
and
cmp
ror
sub
add
dec
dec
add
out
and
mov
push
fwait
and
dec
(bad)
push
and
or
mov
add
into
fcomp
add
mov
(bad)
popf
and
sbb
and
cmp
push
mov
mov
outs
or
sar
or
mov
add
imul
or
pop
fwait
or
mov
mov
call
mov
mov
int3
and
popf
hlt
sbb
add
push
ror
inc
jp
(bad)
and
xlat
or
fnstenv
add
ins
fmul
xor
mov
add
mov
add
add
inc
and
popf
hlt
mov
and
cmc
outs
add
xchg
and
loop
adc
pop
mov
add
fldenv
(bad)
or
add
dec
sub
mov
pushf
add
mov
hlt
les
mov
jo
(bad)
add
or
push
cmp
mov
mov
(bad)
push
dec
and
sub
out
sub
xchg
dec
mov
push
add
push
add
dec
jp
mov
rcl
or
add
fnstenv
enter
dec
and
add
xchg
test
stos
mov
shl
and
add
add
cmp
jmp
(bad)
into
and
add
add
adc
sbb
add
(bad)
sahf
pushf
gs
cmp
cmovne
mov
cmc
pop
add
mov
mov
call
(bad)
push
xchg
pop
mov
xchg
gs
push
test
ja
or
enter
pop
ss
add
fucomi
sbb
movs
sbb
stc
cmc
sbb
fbld
or
cmp
add
cwde
or
inc
sbb
shr
nop
add
into
xor
cdq
test
lock
push
mov
or
sbb
adc
xor
mov
ins
cmp
xchg
inc
retf
mov
add
jecxz
enter
cmp
popf
hlt
fwait
movs
aad
adc
cmp
popf
hlt
add
add
add
add
add
arpl
outs
xor
mov
add
test
call
in
add
or
(bad)
ror
add
xor
add
mov
pop
movs
in
mov
and
popf
hlt
add
add
(bad)
and
in
out
mov
add
mov
push
cmp
aas
pushf
sar
cs
leave
into
fdivr
lock
add
hlt
pop
call
mov
add
add
mov
(bad)
add
mov
test
(bad)
jmp
(bad)
push
and
add
add
xor
aas
add
jbe
test
push
add
lea
pop
pop
pop
xchg
or
jmp
nop
push
mov
push
push
push
and
sub
push
jmp
call
jmp
push
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec
jg
fstp
or
mov
mov
sti
xchg
dec
(bad)
add
add
and
mov
dec
out
push
add
rol
dec
xchg
add
mov
mov
sti
ffreep
add
add
xchg
inc
std
into
mov
or
jl
rol
mov
sbb
jg
jmp
sahf
nop
ja
lahf
inc
add
out
pop
cdq
int
add
dec
sbb
and
sub
pop
inc
xor
into
fdiv
inc
jnp
(bad)
mov
lahf
inc
movs
cmp
(bad)
ins
add
fild
rol
add
mov
(bad)
cmp
inc
and
sub
mov
pusha
femms
pop
add
jno
fisttp
pop
inc
and
sub
cmp
fistp
ffree
add
jmp
mov
sub
fadd
pushf
pop
push
add
add
add
add
xchg
xor
cli
push
pop
adc
out
push
jg
sub
add
add
pop
pop
sahf
xchg
mov
and
(bad)
pop
(bad)
adc
add
mul
sub
or
and
int3
test
add
add
push
and
jl
sbb
adc
mov
pop
push
fld
jmp
mov
and
sub
dec
inc
push
inc
pop
xchg
jecxz
push
add
mov
adc
or
inc
fcmovnbe
loop
add
jmp
mov
sub
test
jmp
push
push
and
sti
inc
popf
movs
jmp
lock
add
xchg
imul
add
inc
arpl
add
adc
mov
add
jmp
mov
pop
and
mov
and
(bad)
push
jl
add
add
add
retf
adc
and
ror
jg
(bad)
add
pusha
add
add
jmp
inc
and
lods
test
std
add
add
and
cmp
inc
push
mov
mov
add
xor
adc
lahf
in
mov
jecxz
mov
call
add
jmp
dec
push
add
sbb
add
add
fnstenv
add
test
out
inc
mov
xor
cld
mov
add
add
dec
cmovae
popf
repz
mov
mov
and
jmp
mov
sbb
imul
movsx
ret
xchg
and
cld
scas
(bad)
push
add
add
mov
inc
add
inc
cmp
add
or
mov
aas
jl
add
mov
lods
aam
push
add
mov
outs
scas
sub
mov
adc
cdq
jo
and
add
dec
push
cld
pop
mov
std
lock
scas
add
mov
pop
inc
cmp
add
mov
adc
and
fwait
and
add
adc
sbb
xor
sbb
jg
retf
les
xchg
jb
mov
add
dec
sbb
jp
dec
add
add
xchg
cdq
push
dec
xchg
fsubrp
lock
mov
jmp
ret
pop
mov
mov
mov
pop
xchg
and
fld
add
or
and
mov
(bad)
imul
pop
cmp
add
ret
pop
and
cwde
sti
(bad)
ret
sub
pushf
xchg
lock
fnstenv
add
test
mov
push
push
or
xchg
and
add
sbb
inc
sti
dec
xlat
add
add
inc
pusha
loopne
aam
mov
xor
mov
mov
xchg
cmp
xchg
cwde
add
sti
setp
jmp
(bad)
popf
xchg
fdivp
adc
add
popf
or
xchg
mov
mov
sub
sub
add
add
ficom
mov
mov
mov
and
add
add
dec
xchg
adc
mov
mov
std
add
(bad)
xor
mov
jp
dec
add
or
mov
and
add
sti
push
or
adc
cwde
push
add
(bad)
test
dec
jle
pop
jmp
add
lock
rcr
adc
sbb
(bad)
pop
xchg
and
add
add
push
add
(bad)
mul
inc
and
ins
add
add
push
push
mov
stos
xor
and
(bad)
rol
ss
adc
jb
jl
push
cmp
(bad)
inc
mov
rcl
add
dec
mov
pusha
loopne
inc
and
add
and
(bad)
into
and
add
add
popf
and
cmovg
and
lods
add
add
add
dec
gs
pop
or
inc
mov
xchg
push
mov
push
push
push
and
sub
push
jmp
push
jmp
call
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
in
or
and
retf
cmps
test
add
add
mov
fiadd
add
and
add
outs
call
cli
call
test
pop
add
in
call
and
lahf
test
das
test
add
mov
rol
jbe
test
jecxz
add
mov
aas
add
(bad)
add
in
add
and
fldl2e
and
into
mov
add
xor
and
cmp
add
and
add
add
aas
retf
(bad)
rol
test
pop
jmp
enter
mov
add
mov
and
push
and
add
push
outs
movs
add
mov
lahf
mov
orps
sub
add
call
test
test
inc
inc
cmp
sub
mov
add
jmp
mov
and
add
add
mov
jo
test
add
add
mov
mov
addr16
xor
and
xor
outs
add
jmp
inc
popa
and
add
add
in
popa
sbb
inc
and
pop
jmp
add
sbb
add
lds
and
pusha
(bad)
and
add
add
add
lods
inc
mov
jmp
movs
add
mov
cmp
sub
mov
sbb
and
add
xchg
add
ror
shr
push
test
cmp
and
add
sub
mov
and
movs
into
add
add
movs
mov
inc
xor
rol
add
fldl2e
and
into
mov
fisttp
(bad)
sbb
add
jmp
mov
sub
mov
dec
btc
add
retf
add
add
outs
add
mov
repnz
cs
add
test
add
in
xor
jmp
cmp
push
cmp
and
outs
add
add
inc
sbb
inc
lds
das
add
and
test
in
add
add
mov
je
cmp
outs
add
mov
add
mov
(bad)
test
xchg
and
add
retf
xchg
xor
push
dec
sub
add
mov
aas
retf
or
call
sub
(bad)
out
add
add
xor
and
cmp
rol
je
or
mov
add
and
test
add
sub
mov
mov
clc
cmp
rol
add
add
add
push
and
lds
test
add
and
mov
movs
and
and
mov
sti
and
in
scas
test
inc
std
jbe
inc
xchg
lds
add
add
cmp
aaa
test
inc
retf
mov
mov
movs
jmp
cmp
xor
add
dec
inc
fwait
cmovne
mov
cmp
push
shr
mov
add
lea
das
lea
push
jecxz
and
add
add
retf
add
(bad)
cmp
pushf
cmp
rol
outs
add
into
mov
mov
call
mov
mov
mov
jmp
and
fwait
cmp
rol
add
push
fwait
mov
nop
in
and
jecxz
add
outs
test
outs
add
jno
repz
jmp
inc
cmp
sub
add
add
mov
retf
add
shl
add
movs
inc
pushf
xchg
and
out
and
mov
mov
or
mov
inc
push
rcl
inc
or
aam
daa
in
adc
xchg
vpmullw
add
mov
jmp
mov
inc
push
outs
movs
into
sbb
cli
stc
out
add
add
rol
outs
cmovne
cmps
test
cmp
retf
in
and
test
add
push
mov
dec
fild
fist
(bad)
dec
xchg
retf
mov
jmp
jb
movs
or
fwait
sub
cmp
jg
nop
cmp
shr
test
add
mov
mov
call
mov
(bad)
mov
into
mov
and
retf
mov
add
jmp
add
mov
add
das
add
test
add
aad
cmp
add
mov
mov
mov
add
add
add
test
nop
das
add
fst
add
test
test
mov
call
(bad)
cmp
or
cmp
xor
add
mov
jae
pop
cmp
sbb
add
inc
fadd
and
cmp
cmp
outs
add
mov
add
and
test
stos
add
push
add
test
retf
mov
loop
hlt
pop
pop
pop
pop
ret
sti
dec
cli
(bad)
dec
pop
add
in
push
push
and
sub
push
jmp
call
jmp
push
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
lea
mov
(bad)
arpl
add
add
or
jmp
add
loope
icebp
mov
inc
test
test
fs
add
mov
and
cwde
sub
add
add
addr16
sbb
hlt
inc
pusha
add
and
add
mov
call
mov
mov
lea
jmp
push
and
add
xchg
add
inc
mov
or
inc
test
add
mov
fstp
mov
add
inc
ret
pop
add
add
int3
and
cmp
mov
push
inc
mov
or
mov
test
push
add
or
lds
in
xchg
and
pop
push
mov
ret
rol
out
mov
lea
int3
and
fiadd
add
or
add
xchg
mov
mov
test
lahf
xchg
and
add
add
ret
mov
out
add
inc
idiv
adc
xchg
and
pop
add
es
mov
mov
mov
jecxz
call
je
add
add
inc
ins
loop
sbb
mov
add
add
test
add
sub
fucom
pop
add
lea
push
sbb
loop
sub
call
or
jne
pop
test
mov
add
call
aaa
mov
mov
add
and
cmp
mov
mov
lea
mov
js
lea
mov
lods
int
xor
sbb
adc
(bad)
jmp
mov
push
and
mov
call
dec
mov
out
add
loope
add
add
add
mov
and
pop
cdq
sub
lods
int
jmp
pusha
mov
ins
push
clc
sbb
xor
add
arpl
and
dec
adc
push
fnstcw
mov
pop
add
ret
mov
lea
jne
rol
push
add
and
add
add
lahf
test
pop
xor
mov
mov
xor
and
test
cdq
sub
mov
fisubr
add
out
ins
push
fcomp
add
xor
push
add
add
fs
mov
sub
out
cdq
(bad)
and
add
jmp
jne
and
add
sub
cld
sahf
and
add
scas
cmovb
inc
test
jmp
loopne
fadd
add
sub
mov
jg
shl
int3
add
add
pushf
fsub
test
cld
test
enter
cvtpi2ps
xor
adc
xor
pop
push
cmps
retf
sbb
pop
adc
mov
addr16
sbb
add
pop
xor
jg
bound
lods
add
test
add
add
test
adc
add
jg
jmp
push
and
add
xchg
sub
mov
and
add
add
or
add
add
mov
fsub
jbe
cld
ds
icebp
arpl
add
cdq
es
cmp
lods
int
add
mov
push
and
sbb
add
add
pop
add
add
test
add
popf
ds
add
add
in
test
out
add
push
(bad)
cdq
add
add
arpl
sub
ja
and
add
jg
jg
mov
mov
mov
sub
dec
loopne
dec
pop
add
jg
xchg
add
add
mov
add
arpl
mov
add
out
(bad)
imul
xchg
inc
add
xor
iret
test
add
add
dec
loopne
pushf
pop
add
pop
(bad)
in
lods
add
adc
loope
mov
add
inc
cwde
loope
jne
(bad)
mov
add
jmp
push
xchg
and
mov
or
lahf
mov
xchg
add
add
(bad)
mov
js
mov
mov
mov
and
add
add
inc
cmp
add
mov
jne
or
and
xor
inc
(bad)
add
mov
add
rcl
scas
jno
add
cwde
les
inc
lods
int
mov
add
add
add
mov
ds
scas
add
push
xor
lods
lods
mov
imul
add
pop
fsub
cdq
sub
cmp
(bad)
push
mov
movd
sbb
(bad)
mov
sbb
mov
retf
aam
add
mov
lods
add
mov
inc
sub
jecxz
inc
cwde
jmp
inc
inc
and
(bad)
add
loope
sbb
and
add
add
add
(bad)
and
cmovno
add
add
add
push
add
outs
inc
mov
loope
lods
jmp
push
and
jne
add
dec
ja
jmp
mov
out
pop
fild
sub
mov
and
je
jmp
cmp
and
add
jne
call
loope
test
push
gs
add
mov
les
test
int
pop
jp
loope
mov
and
add
add
sbb
inc
and
cmp
aas
add
mov
and
lds
add
add
and
ja
cmps
jecxz
add
cmps
int
add
add
shl
mov
ja
inc
and
out
test
mov
mov
cwde
add
test
mov
je
pop
push
add
push
add
pop
cmp
add
mov
xor
ret
inc
inc
mov
add
jmp
mov
push
ds
xor
mov
data16
add
add
add
lods
js
call
inc
mov
add
pop
jne
xchg
mov
sub
int
and
mov
(bad)
fs
add
pop
fadd
add
mov
ja
inc
inc
inc
mov
jp
mov
addr16
mov
fadd
sbb
dec
mov
mov
xor
lea
add
pop
push
sub
adc
packuswb
push
inc
add
test
add
addr16
mov
je
inc
ss
xor
sahf
fadd
xor
sub
addr16
jg
test
xor
int3
add
inc
pushf
cli
(bad)
sub
xchg
ror
xor
push
mov
pusha
add
mov
mov
repz
and
sahf
sub
dec
push
int
mov
mov
mov
jmp
imul
jno
sbb
jmp
lea
fisttp
mov
mov
call
and
inc
xchg
pop
sbb
and
pop
lods
add
and
add
add
add
xor
mov
mov
xor
inc
ins
xchg
mov
adc
gs
add
dec
aad
jne
js
push
and
sub
add
addr16
add
(bad)
mov
or
out
add
in
jno
icebp
and
(bad)
mov
cmp
sbb
cli
dec
call
add
(bad)
arpl
cwde
sub
sbb
inc
jmp
add
jb
xchg
mov
add
add
loope
mov
mov
push
jecxz
dec
mov
out
cmp
cmovl
inc
and
add
int
sbb
and
add
xchg
addr16
sbb
adc
xor
cld
aas
repnz
inc
mov
jge
loope
gs
pop
push
add
pop
add
cmp
in
inc
or
add
add
add
add
mov
sbb
add
(bad)
add
push
mov
test
pop
add
rol
add
test
cwde
add
addr16
inc
outs
iret
(bad)
mov
loope
add
mov
mov
iret
xchg
and
pop
push
mov
mov
pop
lds
and
pop
push
add
xchg
and
pop
js
ins
mov
and
int
add
mov
mov
xchg
inc
mov
call
mov
mov
mov
add
cmp
add
mov
retf
loope
add
mov
test
add
and
or
add
mov
or
mov
mov
(bad)
mov
mov
scas
add
dec
je
add
adc
and
adc
jmp
mov
cmp
jg
dec
and
call
xor
lods
add
adc
pop
add
loop
add
and
inc
xchg
or
inc
and
mov
mov
mov
xchg
xchg
mov
fs
nop
out
add
mov
cmp
retf
in
mov
xchg
mov
or
sbb
retf
in
mov
lahf
push
and
xor
mov
and
addr16
je
push
test
arpl
mov
fild
add
inc
xor
dec
mov
fwait
sub
inc
test
push
mov
icebp
dec
test
add
pop
jmp
call
rcl
and
add
add
lods
int
mov
and
loopne
jne
rcl
pop
aam
test
add
mov
mov
add
xchg
add
repz
sahf
sub
mov
call
in
(bad)
dec
ficomp
add
jmp
mov
(bad)
xchg
sahf
sub
add
inc
loope
(bad)
jmp
mov
adc
inc
or
sbb
add
add
icebp
and
xchg
add
add
add
mov
sahf
fadd
inc
mov
add
retf
sti
jmp
pop
lods
(bad)
pushf
pop
int3
add
(bad)
(bad)
inc
test
add
jmp
push
push
xchg
xchg
scas
dec
gs
pop
pop
pop
sbb
ins
call
nop
push
mov
sub
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
call
mov
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
call
mov
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
call
mov
mov
jmp
add
pop
ret
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
add
pop
pop
ret
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
lea
lea
mov
mov
call
mov
mov
mov
cmp
cmovne
mov
jmp
lea
mov
call
lea
mov
mov
sub
sub
add
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
mov
mov
mov
call
mov
mov
cmp
cmovne
mov
jmp
lea
mov
mov
mov
mov
call
lea
mov
mov
call
lea
mov
mov
sub
add
mov
mov
mov
mov
mov
call
mov
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
jmp
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
sub
sub
mov
mov
jmp
mov
mov
cmp
cmove
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
add
pop
pop
pop
pop
ret
jmp
nop
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
add
pop
pop
ret
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
jmp
data16
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
jmp
int3
int3
int3
int3
int3
push
mov
push
push
push
and
mov
call
mov
mov
mov
lea
lea
lea
mov
lea
mov
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
lea
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
cmove
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
cmove
mov
jmp
mov
jmp
mov
mov
call
mov
mov
mov
call
mov
mov
mov
sub
add
mov
add
mov
mov
mov
mov
call
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
cmove
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
cmp
cmove
mov
jmp
mov
jmp
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
cmp
cmove
mov
jmp
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
cmp
cmove
mov
jmp
mov
jmp
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
call
mov
mov
mov
cmp
cmove
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
add
sub
sub
mov
add
mov
mov
mov
lea
mov
mov
mov
call
sub
mov
mov
cmp
cmove
mov
jmp
mov
mov
call
mov
mov
jmp
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
jmp
mov
mov
cmp
cmova
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
lea
pop
pop
pop
pop
ret
jmp
push
mov
push
push
push
and
sub
jmp
push
jmp
push
jmp
call
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xchg
out
or
dec
adc
mov
push
inc
and
push
jnp
push
(bad)
pop
icebp
xor
add
inc
nop
pop
int3
in
add
mov
pop
xor
aad
mov
add
xchg
ret
aad
(bad)
mov
sbb
mov
xchg
push
and
call
(bad)
and
adc
mov
add
add
(bad)
jno
sbb
stos
ror
and
(bad)
call
ja
shl
and
call
daa
cmp
inc
js
test
cmp
mov
dec
rcl
cld
cmp
xlat
mov
aad
jmp
mov
inc
sub
xchg
lock
setl
in
add
cld
add
sbb
mov
in
inc
ror
shr
je
mov
add
add
(bad)
repnz
arpl
mov
inc
add
add
mov
sub
mov
movhps
fsubr
mov
aad
add
(bad)
xchg
pop
stc
mov
mov
add
add
add
mov
fcom
push
mov
and
inc
xchg
push
jmp
mov
sub
sbb
add
das
add
inc
sbb
or
repnz
call
add
add
sub
push
add
mov
gs
scas
xlat
xchg
and
add
punpckhdq
mov
cmp
cli
retf
add
in
lock
xor
(bad)
call
and
xchg
adc
mov
add
sbb
push
arpl
push
cmp
(bad)
nop
and
arpl
pop
mov
mov
mov
ret
xchg
call
xor
dec
adc
dec
mov
pop
inc
or
arpl
add
mov
mov
stos
rol
inc
and
xchg
ins
and
pop
imul
dec
shr
popa
mov
mov
jmp
dec
leave
push
mov
ret
sbb
mov
push
jecxz
and
xor
jnp
int
pushf
and
add
sbb
xchg
cmp
sbb
pop
add
add
xor
gs
inc
hlt
pop
pop
add
nop
push
mov
push
push
push
and
mov
call
jmp
push
ret
jmp
call
jmp
push
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
or
sbb
mov
lea
inc
adc
xlat
pushf
add
and
inc
add
(bad)
or
inc
fiadd
add
add
(bad)
je
add
movs
pop
add
mov
cmp
lods
cdq
scas
movs
add
(bad)
(bad)
inc
mov
iret
add
xchg
adc
add
mov
aam
add
xor
adc
stos
jns
or
mov
rol
movs
add
cmc
(bad)
adc
add
jns
mov
cli
sub
mov
repnz
int
xchg
jmp
and
mov
dec
mov
xchg
add
je
mov
xchg
add
add
add
add
add
mov
bound
add
stc
or
mov
add
test
fxch
xchg
jmp
loope
add
add
fld
call
jnp
stos
cli
sub
add
retf
sub
xchg
cmps
add
add
mov
mov
push
js
sub
lea
cli
mov
(bad)
and
add
add
mov
or
icebp
and
dec
add
imul
add
and
xchg
je
cdq
adc
add
and
sub
mov
and
add
add
data16
repz
in
jns
pop
scas
or
(bad)
push
dec
and
inc
bound
mov
sbb
add
test
add
test
fsub
mov
sub
sbb
scas
lods
add
test
add
jg
jle
lds
add
pushf
add
mov
je
jmp
test
lods
imul
lock
and
fxch
xchg
paddsw
lds
add
add
inc
mov
pushf
(bad)
mov
setg
add
add
jmp
call
call
mov
add
(bad)
and
add
dec
add
add
mov
and
sbb
add
push
fisttp
test
add
add
int3
jmp
mov
and
add
pushf
sub
jg
and
mov
add
pop
out
movs
jmp
nop
test
mov
or
test
retf
add
mov
aam
out
movs
(bad)
cwde
test
test
(bad)
mov
add
jmp
pop
pop
shr
mov
je
test
add
mov
jmp
add
sub
mov
paddsw
add
add
fdecstp
add
fiadd
sub
data16
jl
xor
xchg
add
mov
inc
leave
sub
and
cmovs
(bad)
(bad)
pushf
fdecstp
mov
sub
sub
and
mov
mov
add
add
add
push
adc
or
add
jmp
mov
stos
lods
mov
add
hlt
bound
mov
cmovs
pusha
lds
jge
add
test
add
mov
stos
test
mov
sbb
jmp
sbb
or
add
leave
and
add
test
rol
and
add
lock
mov
nop
mov
inc
add
add
int3
xchg
ror
add
test
add
test
or
movs
mov
and
inc
sbb
(bad)
imul
add
inc
fxch
mov
inc
adc
lds
push
sbb
fadd
test
xchg
xchg
and
jg
out
movs
cs
gs
inc
dec
mov
xchg
call
or
mov
cwde
adc
xchg
and
mov
and
cwde
add
jns
retf
(bad)
retf
and
add
and
add
and
push
cs
call
adc
repnz
mov
(bad)
iret
inc
jmp
add
lock
movzx
mov
mov
add
pop
dec
add
add
push
and
push
push
and
sbb
mov
adc
test
xadd
fiadd
lock
ds
mov
add
mov
mov
enter
pushf
adc
retf
sbb
adc
(bad)
mov
mov
lea
add
add
inc
add
mov
fld
test
and
ficom
add
mov
mov
call
cmp
lea
pop
dec
mov
mov
jne
test
mov
push
ret
sbb
nop
stos
loopne
fiadd
xor
add
add
and
xchg
je
aad
inc
and
call
pop
or
add
lea
add
int3
add
xchg
pushf
mov
sbb
adc
jl
add
dec
and
mov
sub
stos
icebp
call
mov
(bad)
and
add
rcl
jmp
mov
mov
add
add
sahf
call
je
out
stc
push
mov
add
int3
mov
sub
mov
data16
dec
icebp
aas
add
imul
sbb
test
(bad)
icebp
add
inc
inc
and
mov
loope
call
mov
mov
lea
sub
stos
mov
mov
mov
pop
dec
and
mov
call
inc
inc
and
mov
lahf
adc
mov
push
jmp
(bad)
sub
not
push
and
add
add
test
add
(bad)
adc
add
mov
add
xchg
and
xlat
add
pop
pop
and
test
add
test
jns
retf
inc
add
pop
sub
fld
sub
xchg
bound
fld
mov
sbb
add
add
mov
ror
inc
lea
xchg
mov
sub
loope
add
call
add
jnp
retf
in
add
mov
mov
mov
mov
and
ds
adc
add
bound
dec
add
mov
(bad)
in
add
jns
and
inc
retf
add
sub
add
outs
and
loop
and
arpl
mov
xchg
std
cmp
add
lds
add
add
add
jns
pushf
(bad)
in
add
(bad)
jg
ret
add
push
(bad)
(bad)
mov
dec
je
or
fdivr
sbb
loope
adc
add
add
xchg
stos
fiadd
add
add
mov
sub
inc
rol
sub
sub
mov
pop
test
cdq
add
cmp
loopne
outs
mov
and
sbb
imul
add
fisttp
or
add
jmp
mov
pop
and
add
add
xchg
add
out
mov
mov
out
pop
fadd
add
add
sub
in
int3
add
push
out
dec
pushf
fdecstp
lahf
mov
lock
sub
nop
mov
inc
add
mov
add
add
mov
mov
call
push
mov
inc
add
dec
fild
add
lock
mov
jb
dec
add
add
lahf
xchg
sbb
mov
jmp
mov
adc
bound
dec
icebp
push
dec
jmp
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
push
jmp
push
jmp
push
jmp
call
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
out
or
mov
xor
and
fs
and
mov
push
ins
jmp
add
fs
add
retf
and
jmp
mov
ins
add
add
ins
inc
and
mov
mov
or
push
jmp
mov
mov
aas
adc
cmp
jl
add
inc
dec
mov
rcl
mov
test
add
jmp
mov
push
push
sub
mov
jg
jmp
clc
inc
cmp
cmps
mov
test
adc
jl
dec
test
add
mov
sub
xor
retf
cmp
(bad)
sbb
jae
add
mov
xchg
and
rol
inc
and
lds
data16
add
inc
and
mov
cmp
popf
std
xor
dec
mov
out
ltr
add
mov
popf
mov
xor
call
jae
add
and
mov
sar
adc
test
add
jmp
mov
sub
mov
inc
pop
and
add
retf
add
push
inc
aaa
cmp
jns
inc
scas
and
test
rol
jmp
scas
add
add
jg
test
xchg
mov
pop
add
xchg
call
add
dec
div
inc
rol
lods
cli
xor
inc
ror
push
sahf
data16
push
pusha
inc
mul
jb
ret
mov
mov
pop
(bad)
lods
scas
push
mov
out
add
add
add
mov
sub
(bad)
dec
mov
mov
idiv
call
add
add
mov
mov
fidiv
add
sahf
data16
pop
and
inc
iret
xchg
test
push
out
push
mov
jmp
and
and
pop
sub
push
imul
dec
and
mov
inc
pop
cli
and
inc
and
add
mov
jmp
gs
stc
out
cmps
push
int
mov
and
add
(bad)
mov
lds
scas
add
jae
inc
repz
mov
and
call
add
pop
inc
neg
and
imul
push
int
dec
icebp
retf
add
inc
mov
clc
test
dec
and
mov
mov
cmps
mov
or
mov
cmp
(bad)
(bad)
mov
sbb
inc
and
push
test
ret
and
mov
mov
and
cli
bound
call
inc
dec
lahf
mov
inc
inc
push
push
call
(bad)
into
mov
call
mov
(bad)
loopne
cmp
fistp
jmp
mov
lea
pop
pop
cmp
std
(bad)
call
push
push
and
sub
jmp
push
jmp
push
jmp
call
jmp
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
adc
and
push
add
aad
test
mov
push
and
xor
push
xchg
cmp
and
dec
mov
add
mov
add
inc
dec
cmc
sub
add
mov
ins
push
push
and
call
fstp
pop
inc
push
in
mov
sub
xchg
ret
mov
jns
ds
inc
scas
jo
rol
loopne
pcmpgtb
push
dec
add
add
add
add
sbb
pop
sbb
out
sbb
retf
and
bswap
jb
add
add
retf
pop
ins
lea
jg
jmp
mov
orps
dec
mov
test
add
jmp
dec
inc
adc
jb
inc
scas
push
jg
jmp
mov
fcom
mov
push
dec
jg
cmp
add
add
ins
retf
cwde
inc
icebp
inc
and
mov
add
lds
sub
mov
inc
(bad)
sbb
add
add
inc
sub
stos
aad
inc
psubw
ins
add
repz
daa
cmp
lds
and
jg
jmp
mov
sub
pop
inc
push
test
add
jmp
sbb
sub
mov
dec
add
jmp
mov
fs
stos
inc
push
in
paddq
add
add
add
aad
sbb
and
sub
icebp
inc
and
cdq
test
xor
sti
add
iret
and
and
loopne
aad
or
pusha
add
add
push
inc
add
pop
inc
out
je
adc
add
sub
xor
mov
and
test
jne
add
fld
push
add
arpl
add
sub
lock
dec
mov
and
push
xchg
add
add
add
jecxz
mov
add
add
inc
and
in
pop
dec
lock
push
push
gs
ret
xchg
xchg
dec
icebp
push
sbb
call
mov
add
shl
dec
fcmovu
fbstp
or
and
add
add
inc
mov
jp
pshufw
lahf
ret
xchg
push
dec
or
inc
push
add
aad
mov
mov
mov
inc
ins
retf
stos
int
popf
inc
xor
inc
and
call
add
pcmpgtd
jmp
mov
pop
in
jmp
mov
mov
sbb
lds
cwde
aad
add
mov
mov
cmp
popf
call
js
inc
mov
outs
inc
dec
in
ret
add
in
and
(bad)
pop
cmp
aad
mov
les
ja
bound
add
mov
xchg
add
mov
mov
or
xlat
jmp
je
stos
dec
mov
icebp
fld
add
sbb
mov
pop
pop
ret
jmp
leave
push
into
in
(bad)
pop
and
pop
xor
popf
cmp
adc
sbb
pop
sbb
sub
add
add
and
inc
dec
and
inc
daa
push
lahf
cli
pusha
jmp
mov
adc
ret
iret
(bad)
cmp
gs
mov
push
mov
push
fnsave
push
(bad)
pop
xchg
pop
ss
sbb
hlt
repz
push
out
adc
scas
jle
cmp
sbb
push
iret
sbb
fistp
loopne
imul
stos
adc
(bad)
add
mov
imul
bound
pop
and
dec
or
cld
stos
inc
and
aaa
mov
lds
push
push
mov
adc
ins
pop
lds
inc
mov
loopne
xchg
idiv
ret
bound
pop
mov
push
stos
and
stos
ss
cld
push
clc
addr16
scas
jmp
xchg
popf
aas
rol
test
push
and
mov
(bad)
shr
mov
movs
imul
add
loope
ins
enter
rcr
popa
mov
test
in
fwait
mov
jl
leave
pusha
push
dec
in
in
mov
outs
sahf
and
push
sbb
outs
sbb
mov
pop
jb
out
(bad)
pushf
retf
cmps
push
ins
retf
test
pop
imul
sbb
inc
out
pop
xchg
stc
rcr
mov
(bad)
pop
pop
xchg
xchg
xor
mov
or
mov
jp
out
cs
rol
sub
sub
push
std
ret
ret
fdiv
test
add
movs
test
shl
xchg
jbe
pop
mov
ficomp
stc
or
ins
test
sub
xor
lods
and
lods
(bad)
mov
jg
iret
fimul
inc
mov
in
and
pop
test
hlt
mov
out
mov
enter
dec
nop
adc
(bad)
(bad)
sub
nop
sbb
mov
je
ja
mov
ds
fst
shl
(bad)
cmc
ret
cmc
call
jne
jae
jns
cld
stos
sbb
fs
add
sbb
je
les
sub
call
test
jecxz
cli
push
pop
jae
push
mov
icebp
mov
scas
inc
into
mov
cmp
mov
jle
imul
outs
pop
aas
(bad)
xchg
jne
movs
dec
in
cmps
jl
jecxz
inc
and
(bad)
rcr
sub
daa
mov
dec
(bad)
cld
sbb
pop
fild
push
stos
sbb
cmc
stos
push
mov
pop
pop
int
dec
pop
and
mov
stc
adc
xchg
pop
test
xchg
ror
mov
cmc
cmc
test
pop
push
inc
mov
sahf
sbb
mov
loop
dec
mov
outs
inc
pop
icebp
arpl
sbb
stos
jl
cmp
add
cmp
mov
popf
xchg
or
rol
cmp
push
push
and
jp
lock
inc
xchg
fs
fcmovb
and
lahf
jne
fwait
mov
cmc
mov
mov
sbb
sbb
jnp
add
mov
iret
repz
mov
out
dec
and
dec
inc
pop
and
cli
fcom
xor
test
int
dec
xchg
fild
xor
mov
fdivr
scas
std
mov
mov
pop
dec
cmp
push
jp
pop
test
mov
clc
(bad)
jnp
call
push
jnp
cld
movs
dec
mov
imul
cmp
jo
push
outs
sbb
rol
movs
rol
rol
mov
jecxz
adc
mov
sub
iret
call
add
mov
adc
mov
cmp
ja
or
in
xor
lods
xor
sbb
neg
repz
jmp
in
pop
lods
call
shr
and
xchg
lods
adc
push
sub
cmps
sbb
mov
pop
dec
iret
and
call
pop
xor
loope
sub
jge
setge
jecxz
jge
push
scas
xchg
push
mov
int
add
popf
je
mov
sub
pop
out
ffree
mov
in
lock
adc
repnz
xor
pop
xor
call
arpl
jmp
mov
mov
inc
jbe
shl
lahf
mov
(bad)
stc
rcl
cld
in
jmp
ret
mov
cmp
dec
add
adc
arpl
xchg
mov
(bad)
(bad)
xor
test
dec
xchg
jmp
jno
test
mov
popa
jp
adc
sar
lds
lahf
leave
jo
lea
mov
jp
mov
jnp
pop
test
scas
mov
xchg
fstp
adc
shl
add
pushf
sti
sub
stos
fiadd
inc
ds
xchg
mov
inc
je
pop
iret
mov
stos
gs
icebp
xchg
jo
popa
test
or
pop
fldcw
bswap
cmc
xchg
(bad)
ror
outs
pop
cdq
call
jno
lahf
loop
ja
adc
mov
jb
call
and
or
adc
fcmovb
push
jb
dec
in
and
jno
repz
inc
push
repz
push
rol
gs
push
enter
pop
push
cmp
mov
gs
fcom
mov
pop
hlt
das
sub
in
fisttp
daa
test
lods
jne
mov
or
pop
bound
add
adc
dec
sbb
stc
popf
sbb
js
adc
and
cmp
arpl
or
js
or
rcl
xchg
jne
gs
loopne
ret
(bad)
data16
std
and
inc
test
jecxz
sahf
mov
sbb
fst
add
stos
xlat
inc
pusha
inc
jp
loop
sbb
jl
scas
neg
retf
int
dec
enter
mov
xchg
mov
pop
(bad)
xor
repz
loope
(bad)
ret
out
mov
retf
inc
dec
push
rcl
add
xchg
sub
and
mov
adc
mov
sbb
push
stc
and
jae
add
inc
push
inc
call
jl
aad
sbb
(bad)
stc
xor
add
xchg
add
push
stos
inc
add
sub
cld
mov
mov
mov
mov
repz
arpl
fs
into
imul
sub
fld
not
idiv
mov
xchg
mov
cmp
rol
repz
mov
mov
aas
add
mov
out
(bad)
lds
cs
in
out
and
cdq
mov
pop
jo
inc
xchg
jno
mov
fnsave
pushf
imul
pop
test
inc
add
mov
fcmovnbe
inc
pop
mov
pop
daa
rol
ja
push
cmp
daa
pop
and
div
test
fiadd
jns
dec
aam
xor
jmp
add
out
xchg
sbb
add
outs
mov
into
dec
(bad)
test
(bad)
fisttp
retf
pop
in
jo
inc
arpl
mov
fisub
cmp
push
xor
inc
aad
xlat
repnz
movs
push
push
mov
fistp
test
daa
movs
outs
sbb
in
xor
aaa
cmp
mov
loope
fisub
je
sub
xchg
or
cmp
cld
mov
jmp
sbb
in
jmp
mov
(bad)
xor
ret
sbb
xor
mov
sub
mov
retf
cmp
add
xchg
cmp
mov
sub
leave
popf
adc
add
add
in
sub
mov
pop
sbb
dec
xchg
adc
sub
xor
jae
pop
pop
xchg
push
dec
fldcw
arpl
xchg
(bad)
sub
fwait
pop
jns
dec
inc
aad
js
fdivrp
sub
xchg
adc
add
out
shl
push
cld
cmps
push
cmp
in
jns
mov
mov
jo
das
mov
adc
push
mov
push
jne
mov
cmp
cmp
push
dec
pop
dec
mov
pop
inc
cli
in
sbb
test
push
sti
push
cwde
push
xlat
mov
sar
loope
enter
xchg
adc
loop
mov
inc
mov
lods
test
jae
stos
int3
jmp
add
cmp
loopne
push
mov
jecxz
mov
rcl
jnp
jae
mov
mov
xchg
xchg
inc
dec
mov
cwde
repnz
mov
mov
add
mov
xchg
inc
jle
cmovbe
clc
aas
mov
(bad)
sub
xor
std
and
ja
xor
cdq
stc
mov
fistp
adc
test
rol
cmp
stc
jmp
mov
int3
push
repz
or
mov
xor
test
aaa
daa
dec
ja
xor
out
imul
xor
push
repnz
fst
xchg
sar
jg
mov
jae
adc
sahf
pop
dec
movs
push
and
std
and
std
test
ja
cmp
(bad)
mov
mov
fsubr
(bad)
out
test
jb
cmp
and
call
aaa
int3
jmp
cli
mov
mov
in
jle
push
add
push
jne
dec
mul
add
aad
repz
scas
jnp
fbstp
popa
add
jae
add
hlt
fcomi
xor
dec
cmp
xchg
sbb
xor
mov
fbstp
adc
mov
xor
enter
rcl
fstp
and
push
imul
ret
(bad)
sbb
adc
adc
mov
in
xor
in
loopne
fisttp
test
jp
int
sub
loope
xchg
and
mov
adc
jecxz
or
jmp
and
dec
jno
fld
not
adc
iret
out
inc
mov
mov
sti
mov
mov
rcr
adc
jb
push
mov
and
fldenv
dec
jp
in
fadd
push
jbe
retf
jbe
xchg
mov
into
mov
mov
imul
jecxz
mov
dec
add
adc
fidiv
xor
ret
js
jmp
mov
mov
mov
dec
icebp
cmp
mov
pop
or
imul
dec
imul
mov
mov
mov
xchg
fistp
sbb
sub
in
and
dec
imul
xchg
xchg
inc
mov
add
add
jle
add
lock
sbb
inc
test
add
cmc
sbb
jb
arpl
push
cmps
xchg
scas
mov
test
scas
mov
jmp
and
pop
mov
daa
add
xrelease
cmp
xor
daa
sub
or
mov
mov
sbb
inc
mov
push
xchg
add
pop
jmp
and
mov
adc
cmp
mov
into
and
mov
add
inc
repnz
jp
hlt
lock
dec
pusha
xchg
fsub
mov
inc
lods
sbb
inc
push
add
movs
add
inc
adc
fs
sbb
addr16
(bad)
adc
nop
sbb
cmp
pop
movs
ins
xor
ror
stos
and
and
inc
test
inc
jb
pop
in
sar
je
inc
dec
cs
jp
mov
ret
push
add
push
lock
jno
xchg
ins
aaa
cld
(bad)
adc
xor
jge
je
imul
push
and
lea
leave
xor
and
mov
adc
add
xor
jg
jl
in
std
adc
inc
mov
shl
aas
fstp
stc
sbb
cmp
sbb
and
pop
enter
fucomip
mov
xor
(bad)
sbb
mov
and
and
loopne
jmp
addr16
out
call
mov
shr
xor
jp
and
xchg
lds
adc
jmp
and
test
(bad)
imul
fwait
scas
nop
inc
aad
pmaddwd
movs
push
mov
sar
mov
ins
xor
rol
popa
imul
xor
lahf
cli
mov
repz
jb
stos
stos
cmc
cli
retf
mov
inc
test
fcmovb
xchg
bound
xor
pop
mov
mov
push
dec
xchg
xchg
out
lock
xchg
out
jno
mov
mov
mov
pop
pop
or
into
mov
popf
xchg
adc
jns
sbb
jnp
addr16
sub
xchg
cld
(bad)
shr
dec
scas
dec
adc
stos
sahf
jae
in
inc
int
sbb
repnz
mov
lds
adc
mov
dec
cmps
mov
xor
mov
retf
jp
mov
sub
dec
lods
cmp
loope
int
stos
retf
cli
dec
adc
call
popf
iret
dec
inc
pop
adc
adc
cmp
in
dec
jb
fidivr
sbb
mov
push
xchg
pushf
pop
or
imul
jnp
mov
lods
and
test
jb
dec
mov
jne
push
mov
(bad)
std
jecxz
aas
jns
call
scas
test
popf
sbb
ja
push
or
pop
loope
sub
dec
test
adc
stc
gs
push
jecxz
mov
push
cld
mov
jmp
loopne
jns
xor
or
mov
pop
(bad)
or
add
jno
in
dec
mov
push
jo
dec
cmp
(bad)
icebp
dec
sahf
inc
movs
pop
cmp
ffreep
jb
mov
not
retf
xor
enter
and
js
dec
scas
out
xchg
repnz
add
(bad)
lds
jle
and
jno
xor
inc
popf
xchg
popf
test
mov
(bad)
sub
cmp
int3
pop
jge
sbb
retf
mov
mov
adc
enter
pop
cmp
push
xor
add
cmps
add
jl
call
xchg
ss
xor
inc
test
(bad)
sub
loopne
push
xchg
add
push
mov
dec
push
pop
inc
pop
data16
scas
ja
jb
(bad)
push
out
or
jmp
and
pop
movs
dec
inc
cmps
rcr
jo
enter
mov
fbstp
popa
add
xchg
jmp
xchg
xchg
imul
inc
adc
stos
retf
xor
xchg
aad
stos
mov
cmp
ja
add
ins
in
jbe
out
les
pusha
mov
pushf
out
cmp
ror
adc
retf
outs
out
(bad)
mov
ds
in
movs
mov
push
in
test
lods
inc
das
push
inc
add
(bad)
hlt
daa
and
add
jnp
jecxz
sti
std
(bad)
xchg
ds
jge
cmp
adc
icebp
jns
nop
sbb
fistp
add
push
cdq
and
test
(bad)
sub
dec
rcl
cld
fmul
les
xchg
or
stos
cmp
adc
js
adc
adc
xchg
fst
sub
fild
inc
xchg
mov
bound
pop
addr16
out
icebp
adc
imul
mov
outs
mov
pusha
pop
hlt
jnp
popf
xlat
fwait
or
xchg
movs
mov
dec
mov
xor
xor
xor
mov
pop
mov
test
lock
push
pop
cmps
jnp
mov
adc
int3
loop
mov
sub
cmp
jle
sbb
(bad)
addr16
mov
sbb
dec
mov
cmp
inc
sahf
jb
loopne
xchg
push
pop
mul
repz
(bad)
xor
push
call
clc
out
dec
lods
arpl
jae
movs
xor
pop
inc
mov
or
xchg
xchg
adc
cmp
call
ror
(bad)
cmp
sub
dec
shld
cmp
fcom
cmc
loop
lock
adc
mov
and
pop
inc
pushf
ret
fadd
fwait
imul
xchg
xchg
push
int3
mov
xchg
loopne
dec
arpl
mov
sbb
cmp
in
or
adc
daa
jmp
cmps
jns
cwde
jns
sbb
add
outs
sahf
sbb
push
dec
cli
jns
movs
cmps
int3
idiv
int
dec
ins
add
inc
xchg
push
push
mov
loop
rcr
shl
jae
cmp
sbb
sbb
jecxz
push
cmps
mov
xor
cmp
mov
aad
popf
loopne
pop
xchg
add
fdiv
xchg
or
adc
aas
or
fsubr
out
fidiv
rcl
and
inc
xchg
movs
lods
adc
icebp
mov
out
mov
push
mov
cmp
stos
lahf
mov
je
dec
mov
add
sahf
movs
xchg
cmp
jae
loope
cmp
push
aad
adc
daa
movs
jle
jmp
push
lea
lahf
cld
mov
cmp
sub
scas
(bad)
dec
in
dec
out
inc
sbb
fimul
xor
imul
mov
cmp
jmp
xor
movs
dec
add
pop
packssdw
adc
inc
outs
hlt
cmp
xchg
jbe
jnp
jmp
(bad)
push
inc
daa
mov
enter
rcl
xor
das
mov
xchg
mov
adc
add
and
add
call
pop
adc
cmp
in
call
ins
movs
cmc
test
es
pop
leave
retf
nop
adc
sub
xor
aad
jbe
mov
jne
and
pop
jge
(bad)
jmp
cmp
push
fs
push
repnz
(bad)
dec
mov
xor
push
and
xor
imul
push
je
test
(bad)
add
sub
dec
push
test
or
jo
xor
cli
cmps
loope
jne
daa
push
shl
jle
addr16
xchg
(bad)
jp
repz
(bad)
sbb
push
adc
mov
or
(bad)
(bad)
pop
shl
cwde
dec
adc
push
mov
cs
pop
dec
sbb
inc
mov
lds
cmc
cmp
sub
cmp
lods
aas
gs
mov
xchg
(bad)
repz
add
inc
jecxz
lds
imul
add
iret
sar
and
adc
jb
jne
lods
es
lds
cmc
xchg
fdivr
cmp
inc
cmp
or
adc
rol
push
mov
pop
push
mov
rcl
push
push
mov
dec
repz
adc
cwde
xchg
inc
mov
jmp
sbb
aad
fwait
mov
outs
ret
mov
fadd
sbb
bound
and
std
adc
adc
(bad)
cld
pop
outs
hlt
leave
sti
inc
adc
js
xchg
inc
and
sti
fsub
push
sbb
into
leave
leave
sub
ret
mov
mov
lods
pop
fnsave
faddp
xchg
add
push
addr16
dec
(bad)
fdivr
and
inc
xchg
std
dec
push
mov
fadd
push
scas
mov
cmp
mov
cmps
push
xchg
mov
inc
aaa
jnp
push
cmp
xchg
sbb
or
js
lods
fnstsw
push
imul
sub
mov
mov
sbb
mov
pop
pop
ss
xchg
in
je
inc
fiadd
pop
cbw
mov
mov
iret
add
mov
out
lods
xchg
pop
nop
pop
cmp
and
pop
cs
inc
xchg
jge
and
jmp
cmps
xor
loope
or
ret
inc
lahf
ret
xor
adc
bound
in
push
xchg
fmul
repnz
push
sub
scas
sbb
add
out
or
inc
icebp
cmp
jecxz
sub
scas
push
inc
ror
ret
and
inc
stc
jnp
test
sub
sub
jmp
xchg
inc
imul
push
enter
mov
ficom
dec
sbb
sub
imul
cmps
ror
add
inc
div
cmps
sbb
xchg
outs
adc
push
ror
dec
or
movs
mov
pop
test
push
outs
test
cmp
out
push
(bad)
cld
popf
jbe
cmp
add
fcom
mov
mov
or
cmp
cmp
xor
push
call
add
retf
ret
fucomip
xchg
movs
shl
push
in
sar
dec
inc
rcr
mov
jl
lock
cmps
pop
adc
icebp
or
mov
imul
dec
ss
(bad)
and
inc
cdq
pop
mov
jmp
mul
mov
push
ins
scas
shr
push
or
fisttp
mov
out
and
push
into
out
adc
mov
adc
(bad)
mov
jnp
fimul
jmp
je
dec
cmp
jle
mov
sti
inc
pop
cmp
inc
pop
jl
cdq
mov
imul
movs
not
mov
inc
pop
sti
pusha
ds
cmp
iret
mov
or
lods
or
mov
imul
cld
(bad)
push
lds
push
xor
push
adc
pop
not
mov
adc
ret
jecxz
cmp
je
mov
xchg
add
(bad)
ins
aam
enter
ficomp
jns
movs
mov
cmp
test
pop
adc
sbb
into
mov
jg
test
inc
lock
or
cmps
mul
sti
mov
(bad)
xchg
cmps
push
ds
hlt
cmp
or
jmp
test
jnp
or
inc
mov
pop
shr
outs
dec
aad
test
mul
fstp
sbb
or
dec
dec
push
lock
div
(bad)
fcomp
inc
fwait
das
inc
add
dec
adc
push
pop
rol
jbe
adc
mov
mov
or
mov
xor
cmc
mov
fidivr
ss
inc
out
retf
loopne
mov
and
call
pop
std
xchg
push
push
fldenv
adc
out
repz
test
cmp
push
pop
imul
repz
ror
cmp
adc
int3
xor
mov
push
inc
xchg
push
push
mov
push
jmp
das
call
sub
lock
pop
(bad)
adc
mov
dec
inc
test
jmp
mov
in
mov
xchg
fild
inc
pop
movs
cld
lods
popa
cmp
add
push
cs
loope
push
nop
rol
push
(bad)
mov
jecxz
ret
shl
imul
ja
adc
dec
ret
mov
call
stc
aas
loopne
add
daa
jbe
push
sahf
xchg
and
sbb
test
bound
ds
loope
mov
push
aad
out
xchg
enter
sar
int
leave
bsf
mov
loopne
popf
jno
loope
ins
fcomp
rcr
inc
mov
cmp
push
push
fidivr
mov
jg
jns
pop
imul
add
dec
mov
rol
nop
push
fdivr
ret
bound
hlt
les
pop
icebp
push
dec
in
repnz
xlat
popf
arpl
jmp
and
add
(bad)
and
inc
jle
mov
rcl
add
out
and
fld
mov
lahf
fwait
loope
lahf
jg
lahf
shl
dec
or
aaa
adc
xor
add
in
mov
repz
popa
add
cmp
cmp
lock
outs
icebp
push
stos
out
shr
mov
and
in
cmp
fistp
jnp
xchg
test
mov
inc
xor
push
call
jmp
shl
push
mov
sbb
xor
icebp
xlat
cld
add
add
ret
outs
add
sbb
or
adc
scas
movs
xchg
ins
xchg
sub
imul
push
inc
pop
je
es
ja
dec
arpl
dec
xor
clc
lods
mov
loop
pusha
loope
dec
shl
pop
mov
ror
sbb
jmp
into
xor
nop
mov
push
push
clc
dec
mov
mov
pop
mov
pop
mov
fisttp
and
mov
popf
jne
inc
mov
cmc
push
and
mov
mov
add
test
jecxz
lods
dec
mov
lods
bound
or
mov
jnp
inc
das
fisubr
cs
bound
xchg
mov
mov
pop
adc
iret
jb
pop
mov
out
fsubr
(bad)
mov
add
jns
mov
sub
retf
mov
out
mov
jae
into
mov
out
ret
test
inc
xor
retf
adc
mov
mov
pushf
popf
adc
(bad)
fdiv
jp
push
inc
and
mov
fs
fiadd
outs
in
jnp
dec
mov
fwait
xchg
jg
clc
mov
les
mov
add
xchg
lock
ins
int
xchg
or
fcmove
pop
popf
pop
xchg
call
out
jmp
xchg
aas
outs
pop
inc
xor
add
cmc
outs
cmp
cmps
fiadd
and
push
mov
stc
fcomp
lods
dec
imul
les
into
jno
mov
or
push
xor
mov
(bad)
je
or
fiadd
out
sbb
rol
call
and
or
cdq
push
inc
repz
stc
add
jle
xchg
arpl
xor
cmc
pop
pop
fdivr
popf
les
mul
imul
leave
addr16
jg
sahf
xchg
repz
ror
lea
std
sbb
dec
adc
mov
loopne
(bad)
movs
das
aad
sub
mov
mov
push
pusha
push
les
sbb
ins
fisub
ret
ret
out
mov
inc
adc
repnz
call
dec
into
cwde
(bad)
pop
mov
retf
iret
jge
fwait
ret
xchg
in
outs
adc
stos
jmp
rol
jmp
fcom
nop
sbb
xchg
pop
dec
(bad)
push
pop
aad
movs
pop
loope
addr16
mov
jge
sub
add
jecxz
mov
loop
jge
jne
gs
imul
dec
mov
jb
popf
data16
jo
cmc
pop
jns
inc
in
aas
xor
inc
aaa
dec
inc
aas
test
aas
inc
sub
scas
loop
jo
mov
mov
ror
add
gs
sbb
jb
jge
adc
push
mov
dec
cdq
les
pop
out
sub
xchg
sbb
(bad)
retf
test
out
mov
es
add
inc
sbb
dec
and
das
adc
enter
jo
ret
adc
mov
sub
out
(bad)
rcr
retf
jg
mov
mov
es
push
into
(bad)
and
shrd
cli
cmp
jl
push
adc
sub
outs
jno
pop
add
mov
cld
inc
call
push
es
dec
push
test
(bad)
or
test
inc
aas
shr
(bad)
fadd
mov
push
stc
inc
pop
jge
nop
mov
aas
push
dec
bound
cli
xor
cmp
cli
dec
loop
add
pop
ret
mov
push
inc
dec
add
inc
push
imul
test
in
cwde
nop
sub
ja
lock
sti
mov
(bad)
into
sbb
sbb
cmps
call
mov
and
sub
minps
sub
sti
jg
icebp
xchg
mov
adc
mov
mov
push
jp
sbb
xchg
mov
inc
or
je
pop
push
push
inc
(bad)
sbb
jmp
adc
call
out
xchg
sub
dec
je
test
and
int
aam
xor
jno
sti
or
aad
sbb
sti
lods
fidiv
push
mov
fcom
aas
pop
shr
lods
mov
in
inc
(bad)
int
scas
mov
aaa
mov
and
addr16
lds
mov
outs
mov
mov
imul
or
or
jo
nop
std
imul
ret
rol
push
stc
jmp
inc
into
fidiv
sub
loope
(bad)
out
clc
leave
xchg
outs
aad
mov
(bad)
dec
add
mov
jne
ss
movs
push
add
dec
imul
(bad)
loop
cs
ret
mov
sbb
in
jmp
fwait
test
cmp
pop
sub
sbb
loopne
dec
lds
sbb
imul
jge
mov
mov
ret
adc
cli
pop
call
inc
ds
sub
xor
out
(bad)
jns
rcr
jecxz
adc
jmp
push
adc
mov
stc
adc
pop
scas
sbb
test
std
xor
popa
js
mov
pop
lods
add
test
xchg
movs
and
cmp
mov
pop
loop
popa
ror
mov
cmp
xchg
jb
imul
sbb
jge
out
ins
sub
push
pop
inc
xor
add
popf
jbe
pushf
adc
scas
imul
inc
rcr
mov
mov
cmp
xchg
mov
movs
pop
jl
(bad)
sub
mov
addr16
cmp
xchg
sar
mov
adc
cwde
or
mov
je
dec
sbb
aaa
fbld
dec
mov
lods
cli
inc
sar
push
rcl
outs
stos
xchg
mov
clc
(bad)
cmp
and
movs
push
add
(bad)
scas
xlat
add
push
mov
fidivr
xor
cmc
add
mov
xor
dec
and
(bad)
imul
cmp
mov
mov
cld
inc
jmp
and
test
dec
push
fdiv
fwait
icebp
or
mov
aam
(bad)
xchg
in
or
shl
mov
sbb
fmul
in
addr16
jns
pop
clc
sbb
or
dec
pop
mov
fistp
(bad)
clc
mov
or
test
imul
ss
out
shl
push
repz
push
cmp
inc
(bad)
inc
pop
pop
sbb
fldcw
fldcw
sbb
fwait
sahf
xor
inc
mov
out
xor
ret
out
add
pop
inc
add
sbb
sub
ret
cmp
std
cli
sti
xchg
div
jmp
jno
xchg
sub
mov
and
dec
push
addr16
daa
int3
scas
sub
fnsave
push
out
mov
pop
out
ret
sbb
das
push
lds
in
sub
push
ss
test
xor
mov
aas
dec
retf
jmp
pop
jb
add
push
aas
xchg
pop
lods
mov
push
enter
pop
repnz
data16
mov
push
pop
pop
(bad)
pop
fcmovne
jge
jnp
ror
pop
push
enter
xor
xor
inc
xor
inc
inc
adc
mov
jmp
repz
jns
push
int3
pusha
(bad)
pop
mov
push
pop
mov
pop
dec
pop
retf
leave
xor
push
mov
in
aad
fist
(bad)
dec
mov
mov
shr
and
test
push
call
outs
sub
jb
js
or
loope
pusha
sub
or
cs
pushf
or
pop
out
inc
or
xchg
ret
bound
fld
sbb
test
jmp
aas
sbb
enter
pop
or
add
pop
mov
std
jnp
xchg
iret
mov
inc
xchg
int3
push
and
pop
mov
sub
cmp
mov
xor
pop
in
pop
mov
xchg
mov
int3
inc
int
cmp
lods
shr
mov
dec
add
test
pop
add
cmp
sbb
push
pop
mov
add
jle
and
xchg
lds
mov
or
mov
dec
xor
inc
or
adc
addr16
test
nop
sti
adc
pop
test
lea
mov
rcl
xchg
jp
and
adc
mov
and
mov
imul
fwait
xchg
dec
movs
cmp
out
mov
retf
js
imul
adc
pusha
ret
inc
adc
loopne
addr16
mov
lea
pop
push
push
pop
mov
mov
xchg
or
mov
fild
retf
xchg
into
cmp
daa
push
sti
in
pop
imul
fdiv
xchg
inc
mov
test
je
lahf
ror
stos
cmp
call
test
(bad)
out
pusha
retf
das
fst
add
popaw
sbb
pop
repnz
cli
movs
cmp
jecxz
gs
xchg
retf
mov
pop
movs
and
pop
mov
arpl
sbb
push
test
adc
in
sbb
cmp
fbstp
xor
ja
lea
push
fchs
rol
jbe
mov
pop
and
mov
clc
pop
test
pop
pop
sbb
sbb
test
mov
mov
in
call
iret
aam
add
iret
cmp
mov
call
dec
dec
dec
add
adc
stc
sbb
scas
jp
jns
cmp
outs
pop
mov
dec
mul
mov
aas
adc
push
cli
js
xor
clc
xchg
fwait
out
xor
and
pop
icebp
xchg
lahf
aad
and
es
repnz
jg
jmp
pop
imul
iret
sub
ins
push
and
sbb
in
xchg
xlat
sub
femms
iret
sahf
xchg
bound
(bad)
jns
jecxz
ins
pop
daa
in
adc
jns
out
ds
jg
cmp
daa
xchg
out
sbb
dec
inc
out
mov
in
push
imul
xor
leave
add
jmp
xchg
shl
jmp
call
sbb
aaa
fucompp
fcmovnb
stos
(bad)
clc
popa
push
jmp
in
push
xchg
mov
xor
pusha
xlat
inc
fst
and
mov
bound
icebp
jmp
arpl
jge
leave
push
mov
jb
pop
nop
pop
sbb
xor
xchg
inc
loopne
aaa
loopne
add
add
jbe
outs
mov
push
iret
jl
sbb
cwde
mov
mov
outs
loopne
lods
jb
mov
pop
mov
arpl
outs
pop
xor
inc
fnop
lds
sbb
shl
out
shl
push
pop
adc
mov
and
xchg
scas
es
fld
jbe
xchg
sahf
sbb
pop
out
or
pop
cmp
jge
ret
je
add
retf
and
push
xchg
das
adc
test
movs
mov
(bad)
and
mul
jg
adc
push
cmp
fdivrp
repnz
pop
cmp
sub
cmp
iret
shl
ins
cmps
mov
mov
das
cs
(bad)
jne
push
cdq
mov
imul
inc
xor
jg
and
stos
int
test
out
push
and
cmp
es
jno
icebp
add
ror
(bad)
mov
out
xchg
add
jle
pop
lods
dec
scas
shl
push
dec
mov
sahf
jae
pusha
jge
mov
cdq
sub
xchg
sbb
sub
mov
outs
jp
test
add
jecxz
sahf
dec
cmps
cmp
add
xchg
jns
xchg
lds
xlat
and
jp
ret
xchg
add
(bad)
xor
mov
mov
mov
pusha
stos
and
mov
out
ret
adc
jo
movs
fwait
xchg
sbb
lahf
xor
adc
adc
fcomp
in
xchg
(bad)
in
(bad)
pop
test
cmp
push
push
fld
stos
movs
push
xchg
repnz
sub
sar
(bad)
and
sub
mov
call
add
lods
in
loopne
loop
neg
pop
cdq
mov
xchg
(bad)
fcmovnbe
xlat
ret
jns
leave
dec
cmps
and
sbb
mov
sub
dec
push
push
rcl
retf
jbe
cwde
mov
jge
jg
jmp
ret
adc
xor
xchg
mov
pop
or
pop
cld
and
mov
lahf
retf
dec
sub
outs
mov
scas
aam
es
jmp
add
ds
enter
lods
popf
pop
add
clc
xor
xor
mov
add
mov
xor
shl
lods
sbb
lods
popa
bound
std
push
xor
dec
or
fadd
repnz
in
in
cli
xchg
arpl
jg
ja
and
xchg
adc
sub
cwd
fucomi
sti
pop
pop
aad
test
ss
mov
jb
and
inc
movs
sub
icebp
enter
cmp
push
mov
cmc
clc
dec
or
adc
push
jecxz
in
xor
out
jmp
and
and
fst
xor
and
push
loop
in
lahf
pop
dec
inc
push
jae
sbb
pop
(bad)
cli
aam
sub
cmp
stc
push
test
mov
mov
and
aas
xchg
or
cmp
xchg
xor
movntq
pop
hlt
jmp
jle
or
and
push
pop
mov
mov
xor
pop
adc
mov
popf
push
test
jg
ins
mov
mov
fs
ror
xchg
ds
and
mov
jb
addr16
loope
mov
add
sbb
dec
mul
mov
shl
pop
cmp
mov
(bad)
push
fsubp
inc
cs
mov
xor
sub
cmp
jbe
mov
fs
fcmovnu
test
gs
cmp
aas
pop
imul
pop
or
xchg
sbb
sbb
sbb
xchg
and
dec
(bad)
outs
jle
fwait
or
movs
in
xchg
sbb
and
xor
stc
je
pop
jmp
stos
xlat
stc
inc
out
ret
or
or
inc
stc
(bad)
adc
and
inc
jle
pushf
out
push
pusha
xlat
push
cld
cdq
pop
push
push
jmp
fs
sbb
shl
sbb
ja
in
cmp
jecxz
out
pop
dec
pop
and
jne
(bad)
dec
jno
call
mov
popa
and
pop
aad
sub
or
push
and
iret
push
adc
mov
push
stc
jmp
pop
nop
inc
or
mov
sub
stc
fnsave
jle
push
or
and
push
dec
aad
jmp
mov
daa
cmp
mov
mov
hlt
jns
jns
outs
sub
inc
jnp
(bad)
sub
fcmovnb
xchg
mov
mov
push
movs
push
xlat
jmp
lods
rcr
retf
push
lea
cmp
add
sub
stos
je
pshufw
pop
aam
call
out
fwait
shl
add
cli
add
hlt
lea
inc
jmp
dec
pop
jns
sbb
out
adc
fadd
pop
sub
xor
iret
mov
lds
clc
cli
imul
sub
xchg
ja
mov
inc
push
icebp
cmp
data16
nop
stc
mov
push
fdiv
(bad)
or
xchg
movs
(bad)
int3
mov
mov
mov
or
and
lahf
mov
adc
cmp
add
mov
xchg
push
stc
aam
cbw
cmp
jg
push
sub
fsubr
ror
out
fadd
sub
ret
xor
mov
stc
or
mov
aam
pop
adc
dec
add
mov
es
arpl
jne
jns
mov
xor
popa
sbb
daa
inc
jg
pushf
or
xor
sbb
in
mov
imul
pop
mov
cli
fisttp
jmp
cwde
popa
fmul
(bad)
imul
push
adc
sub
sti
fimul
xor
mov
xchg
inc
jbe
dec
mov
mov
or
in
int
fwait
mov
repz
sub
cmp
in
pop
mov
jp
in
es
jne
stos
or
pusha
(bad)
mov
xchg
inc
and
(bad)
jp
mov
xchg
jns
aam
push
lds
fdiv
sub
add
jb
and
ret
mov
(bad)
loope
push
popa
cmp
xlat
jb
adc
pop
add
test
mov
(bad)
cmp
mov
jae
mov
lds
outs
cmp
into
mov
(bad)
mov
push
xor
pusha
sbb
push
pop
adc
and
fld
add
cmc
xor
mov
jbe
cmp
shr
out
int
push
and
inc
lahf
mov
mov
lds
into
sub
xor
sbb
or
ss
and
adc
push
mov
xchg
data16
in
xor
cld
adc
jb
jle
test
xchg
inc
dec
retf
xchg
xchg
loopne
sbb
xchg
in
icebp
outs
test
push
retf
xor
ja
stc
pop
std
pop
mul
cmps
shl
jg
xchg
test
jae
shr
xor
ins
leave
dec
mov
scas
aaa
push
sar
stos
sbb
push
movs
sub
call
out
fstp
xor
dec
hlt
les
fdiv
sub
(bad)
aam
inc
dec
xchg
in
out
shr
stos
jnp
call
pusha
pop
scas
jecxz
imul
add
xlat
adc
mov
push
xchg
int
add
mov
syscall
call
mov
mov
in
ja
mov
adc
jno
icebp
inc
sbb
iret
int3
jecxz
mov
lods
add
add
or
pop
(bad)
push
and
cld
inc
inc
jmp
(bad)
ficomp
jns
pop
adc
movs
push
mov
xchg
ror
(bad)
test
dec
add
inc
dec
cmp
inc
pop
ds
jmp
sti
aaa
sbb
fs
pop
rcl
push
pop
xchg
pop
call
or
sbb
call
not
mov
push
jb
sub
xchg
xchg
dec
loope
add
idiv
imul
mov
scas
cli
mov
gs
sub
mov
(bad)
fidiv
push
adc
lods
mov
mov
jp
loope
ds
mov
cmp
and
mov
xor
push
xchg
sub
mov
scas
dec
cmps
mov
lahf
jg
mov
dec
cmc
push
add
jae
add
lock
sub
out
or
sbb
jge
mov
out
test
cmps
add
pop
xchg
mov
xchg
sub
inc
push
fldenv
or
js
dec
div
mov
mov
mov
imul
jle
fisubr
inc
sbb
xor
sbb
xor
mov
fnclex
dec
test
inc
iret
jno
xor
or
in
out
sbb
dec
enter
push
mov
aas
xchg
pop
cmp
or
cwde
or
inc
aam
cmp
das
dec
add
mov
jp
mov
sub
sbb
cmp
fnstenv
mov
mov
shl
sbb
out
inc
(bad)
enter
(bad)
loope
cmp
fwait
dec
outs
cs
in
cmp
repz
mov
retf
mov
loopne
xchg
sbb
test
and
retf
adc
pop
sub
or
cmc
xor
dec
ss
pop
(bad)
pop
mov
cmp
mov
cdq
shr
int3
std
adc
movs
xor
push
jmp
adc
cwde
(bad)
jno
pushf
pop
adc
push
lods
mov
bound
daa
jmp
out
mov
inc
cmp
fistp
movs
fbld
sbb
pop
int
dec
or
fnstenv
jmp
sbb
mov
jl
pop
inc
cmps
es
ret
mov
jecxz
es
xchg
daa
dec
and
shr
or
das
mov
sub
ins
mov
push
mov
repnz
mov
retf
add
cmc
mov
into
add
ficomp
cs
in
mov
mov
pop
xchg
fs
sbb
xor
push
fwait
or
push
push
nop
dec
call
mov
cmps
test
pop
jnp
and
mov
dec
test
mov
xor
sub
add
ja
mul
rol
ret
scas
jo
mov
push
cld
push
aas
sub
sbb
jmp
xchg
add
dec
jo
imul
popf
push
cmps
mov
out
aas
std
(bad)
xchg
push
add
ja
pop
fidivr
pusha
shl
aad
popa
dec
icebp
scas
adc
xor
push
xchg
popf
and
mov
jmp
(bad)
jns
sub
add
outs
push
sub
stc
cwde
ins
push
neg
je
push
out
jle
rol
out
adc
mul
call
ins
loopne
push
jno
cmp
mov
xchg
ins
pop
push
(bad)
mov
mov
dec
rol
sub
xchg
into
dec
push
adc
or
loope
dec
push
pop
xlat
xor
adc
rcr
sub
retf
pop
fisttp
out
inc
aaa
aaa
cdq
cmp
mov
stos
scas
call
or
mov
iret
fadd
(bad)
pop
fst
push
jle
ret
movs
into
push
ins
fiadd
dec
dec
jae
ja
scas
leave
xor
daa
dec
cmp
push
(bad)
aaa
xor
push
mov
mov
adc
jbe
mov
adc
aaa
xchg
gs
neg
dec
and
sbb
and
inc
inc
push
or
add
jo
jo
push
(bad)
add
loope
je
shl
xchg
cmc
dec
test
cwde
test
hlt
inc
or
dec
popf
mov
jnp
xchg
dec
add
push
xchg
mov
and
jae
retf
fs
mov
dec
mov
cmp
jae
not
(bad)
adc
retf
adc
outs
sti
(bad)
add
cmps
mov
push
test
inc
jg
mov
(bad)
mov
adc
out
mov
gs
pop
movs
mov
sub
pop
push
push
rcr
repz
std
(bad)
aas
push
xor
jg
lea
xor
and
imul
fsubr
sub
mov
repnz
fs
xchg
cli
xor
daa
out
les
or
ficomp
lea
mov
dec
lods
js
pop
sahf
adc
push
cli
mov
psubsw
and
pop
cmp
sub
test
(bad)
lea
je
mov
jbe
enter
(bad)
movs
pusha
jne
fidivr
push
push
or
les
fcmovbe
outs
push
aam
cwde
cmp
mov
jle
loop
adc
test
outs
mov
hlt
inc
fldenv
(bad)
jbe
lock
rcr
scas
xchg
push
lea
mov
and
mov
pushf
push
mov
jne
aam
(bad)
rcr
push
in
retf
push
mov
pop
and
or
and
xor
dec
(bad)
int
pop
push
std
or
loopne
ds
pop
mov
mov
pop
(bad)
clc
cld
out
jmp
lds
stc
push
sbb
rol
jmp
pop
jecxz
cmp
popf
es
jo
outs
adc
out
stos
cmps
add
or
into
pop
rol
in
aas
mov
mov
and
cli
xor
aaa
pop
jmp
jmp
dec
mov
cmp
add
add
jecxz
loop
sub
pop
cmps
into
shr
lods
adc
xchg
add
mov
jbe
sbb
sub
retf
std
and
sub
aam
and
arpl
adc
lock
mov
xor
and
bound
mov
or
test
inc
mov
xor
sbb
mov
xor
jle
sub
add
mov
sbb
jmp
leave
int3
call
mov
fist
cmp
adc
js
xchg
push
jg
in
sub
shl
xor
and
mov
(bad)
xor
add
pop
sub
adc
int
mov
setnp
pop
inc
jns
fadd
je
(bad)
or
mov
ret
mov
out
sbb
sar
fcmovb
push
xchg
xchg
mov
xchg
cdq
xchg
fwait
push
dec
shl
lock
mov
out
in
xor
call
mov
repz
pop
or
lock
stos
das
add
in
push
outs
std
je
lods
mov
movs
and
xor
inc
xchg
repz
push
in
mov
or
cwde
outs
aas
or
je
sub
and
vpor
out
push
punpckhwd
dec
xor
pop
movs
ret
outs
inc
nop
mov
sbb
cmp
popf
test
and
sub
mov
jno
adc
jo
pop
or
ret
enter
push
pop
(bad)
pop
fadd
push
xchg
and
push
sbb
push
arpl
push
mov
and
xchg
mov
pop
(bad)
jb
or
in
dec
push
cmp
push
outs
jmp
xor
mov
push
adc
and
scas
mov
sub
xchg
sub
ss
out
rol
lds
sub
sbb
(bad)
push
mov
std
sub
ss
jge
jnp
jmp
dec
mov
jbe
fisubr
cli
and
or
xchg
mov
inc
jbe
xchg
jns
and
call
adc
js
mov
mov
cdq
clc
dec
popf
call
adc
sub
adc
xlat
add
enter
imul
or
fisttp
push
call
ins
dec
and
popa
(bad)
jg
and
loop
push
adc
dec
ins
sub
shr
xchg
outs
or
cmp
xor
ret
movsx
pop
sbb
jne
push
jmp
push
mov
push
outs
push
arpl
push
das
test
pop
mov
ror
mov
mov
jle
push
int3
or
xchg
add
sub
mov
mov
nop
retf
jnp
jns
(bad)
jmp
stc
xor
mov
add
inc
mov
cmp
xlat
jg
popa
test
add
int
sbb
in
gs
hlt
(bad)
sahf
popa
xchg
sub
repz
pusha
or
cmp
call
fisubr
push
adc
cmp
jg
(bad)
xlat
cwde
inc
jns
call
pop
fdivr
push
dec
xchg
(bad)
addr16
mov
fsub
xor
daa
ss
call
(bad)
ror
pop
pusha
mov
pminsw
pop
test
lock
pop
test
xchg
pop
xchg
dec
stc
loope
cmp
sbb
jo
push
mov
adc
push
js
int3
sub
dec
fyl2xp1
popf
jmp
and
loope
ins
or
push
push
mov
xchg
pop
rcr
adc
fld
cwde
sbb
rcl
dec
mov
mov
and
outs
sub
push
ret
or
pop
pop
add
mov
push
in
aad
sub
into
pop
out
es
inc
pop
dec
sbb
outs
fdivrp
jecxz
aas
mov
cmp
cmps
les
sub
mov
lods
pop
jle
cmp
and
dec
cmp
sbb
mov
add
xor
in
scas
scas
aas
sbb
cmp
adc
leave
xor
mov
or
lea
mov
or
fldenv
stos
test
lods
xchg
mov
int
fcom
sub
push
inc
lock
mov
test
loop
push
outs
fwait
pop
xor
ffree
mov
inc
cdq
mov
jg
xchg
fbstp
mov
outs
cmp
loopne
pop
mov
cmps
mov
or
test
pusha
mov
test
sub
push
das
jb
cmp
dec
test
xchg
cmp
jne
dec
nop
sub
jecxz
rcr
into
jle
ja
inc
xchg
xchg
jo
pop
dec
ins
jmp
push
test
adc
push
jge
std
mov
mov
lods
dec
jp
das
dec
cmp
add
scas
mov
mov
xchg
push
dec
les
mov
ret
add
add
in
ror
cmp
call
mov
pushf
gs
sbb
pop
mov
jmp
loope
jl
movs
jae
xor
repz
test
test
inc
pushf
int3
mov
in
cmp
outs
mov
jl
adc
mov
push
jae
ficomp
xchg
(bad)
mov
sub
imul
mov
xor
xchg
jmp
ficomp
mov
lods
pop
cmp
sbb
mov
push
push
sbb
fs
jae
gs
(bad)
mov
call
and
push
push
jp
xchg
aaa
push
xchg
test
jne
cs
mov
push
and
pop
adc
cs
add
xchg
pop
repnz
push
imul
retf
xor
aad
call
stos
fdivp
adc
pop
pusha
popa
mov
out
shl
xor
in
(bad)
mov
sti
lods
inc
cmp
xchg
xchg
arpl
loope
adc
mov
pop
inc
adc
paddsw
inc
(bad)
out
data16
sub
add
ds
xor
cwde
sbb
cmp
mov
aad
xor
adc
sbb
sub
jnp
rcl
xchg
cmc
sbb
jg
fwait
hlt
pop
cmp
(bad)
sub
pop
stc
ret
hlt
loope
push
jmp
sub
lods
(bad)
popf
sub
cwde
pop
pop
in
les
mov
adc
stc
mov
xchg
fadd
sbb
cmps
clc
cdq
xchg
movs
hlt
mov
popa
xor
adc
pop
mov
ret
and
pop
lods
aam
or
out
mov
inc
aam
adc
jp
cli
xor
stc
mov
sbb
inc
mov
xlat
jae
xchg
push
inc
clc
ret
jecxz
arpl
mov
push
sti
rcr
adc
gs
fisttp
ins
mov
daa
or
mov
js
shr
cmp
stos
push
add
add
popa
retf
outs
mov
sbb
dec
sbb
outs
cmp
cmp
xor
and
sub
fs
rol
clc
sbb
adc
and
sar
lahf
nop
xchg
stos
push
fimul
xchg
lods
xchg
xor
pop
in
push
jmp
jmp
imul
adc
and
ss
pop
xchg
cmp
rcr
jne
scas
add
add
pop
mov
outs
dec
in
ficom
or
dec
fsubr
movs
lods
add
dec
inc
xchg
mov
jnp
xchg
inc
rcl
data16
mov
fwait
movs
sub
mov
and
shl
mov
data16
cmp
pop
xor
xchg
ss
data16
daa
push
jmp
lea
pop
adc
nop
jo
into
(bad)
ficomp
pop
xchg
xor
push
aad
adc
in
jb
mov
loop
sub
xlat
stos
mov
aas
fiadd
or
test
arpl
jb
imul
fs
jp
div
aaa
sub
jg
ins
mov
shr
sub
xor
mov
loope
es
loopne
xor
mov
mov
jmp
jae
add
test
xchg
fstp
pop
into
stos
scas
ret
test
push
or
shl
loope
and
fisubr
cmovb
and
xchg
mov
jno
ins
add
loope
in
xlat
(bad)
cmp
inc
xor
je
movs
std
add
mov
clc
scas
stos
loop
jmp
xor
sub
fdiv
dec
test
stc
clc
fistp
movs
xchg
daa
and
call
mov
jne
mov
test
out
scas
mov
cmp
cwde
jbe
fnstcw
add
lahf
jb
lds
pusha
cmp
call
sub
pop
add
es
xchg
add
sbb
mov
test
fnstenv
xor
xchg
add
retf
or
mov
cmc
scas
shl
fst
adc
dec
xlat
mov
sbb
ror
and
dec
jbe
and
int3
mov
call
std
(bad)
outs
out
cld
call
push
sub
cld
test
adc
dec
xchg
mov
fcom
dec
fimul
repnz
jnp
dec
or
dec
imul
leave
inc
push
sub
mov
das
jnp
inc
jno
ins
pop
sahf
xchg
or
sbb
sub
(bad)
cld
lea
mov
bound
iret
fnstsw
or
jmp
pusha
inc
or
xor
mov
das
hlt
jbe
xor
leave
aad
jmp
loop
adc
push
and
jmp
test
ds
dec
aad
dec
mov
std
sub
jbe
cmp
sahf
dec
or
sbb
test
repz
xchg
xchg
jae
je
cwde
and
jns
imul
jns
jecxz
in
sbb
xchg
bound
xor
add
fwait
inc
jecxz
xchg
in
sub
test
mov
cdq
xchg
push
xor
mov
rol
inc
cmp
or
clc
sub
cs
sbb
sti
dec
lods
cs
jo
pop
popf
mov
out
or
mov
pop
inc
cmp
pusha
bound
pop
pop
repz
mov
sti
lock
dec
and
pop
popf
add
fcomp
(bad)
gs
aad
dec
ds
add
std
adc
repnz
and
xchg
xlat
jo
ja
dec
mov
int3
ror
inc
add
iret
jo
mov
out
jl
leave
jmp
arpl
cmp
in
(bad)
pause
xchg
jae
lea
add
pop
mov
sub
jae
cmp
sbb
mov
xchg
scas
inc
mov
and
popf
xor
not
inc
dec
(bad)
add
lock
xchg
daa
adc
fld
daa
iret
adc
pop
out
loop
in
arpl
(bad)
out
cmp
dec
mov
lock
inc
mov
sbb
outs
jmp
repz
xchg
lock
adc
xchg
outs
sub
add
nop
stos
pop
ret
cwde
cmp
mov
fild
mov
clc
fldenv
into
adc
push
iret
sbb
ds
rol
shr
mov
sbb
std
add
popf
sub
(bad)
call
mov
iret
in
sti
cmps
sub
xchg
xchg
add
mov
fst
mov
retf
mov
test
jp
popa
rol
jnp
movs
movs
add
bound
dec
addr16
xchg
and
jecxz
lods
xlat
and
ret
aaa
popa
cmp
shl
mov
stos
ret
or
pusha
imul
mov
clc
sbb
ret
push
push
shl
or
xchg
aas
jmp
div
xchg
add
test
test
outs
jge
and
sti
sbb
test
xchg
push
out
cmp
mov
sbb
pop
std
aam
pop
es
and
ins
sub
out
xor
pop
fld
retf
inc
popf
adc
int3
mov
imul
push
jmp
loop
jmp
retf
pop
ja
out
rcl
daa
shl
sbb
sub
ret
lock
sbb
pop
xchg
cmp
call
imul
dec
push
xchg
retf
xchg
lds
loopne
gs
or
movs
add
mov
fisttp
daa
sar
or
pop
or
dec
inc
retf
pushf
data16
cs
pop
xor
outs
jmp
loop
inc
cwde
jns
sub
js
ret
inc
cmps
call
cli
xchg
inc
push
(bad)
pop
fidivr
push
or
cdq
jmp
mov
movs
jmp
jmp
lahf
add
arpl
adc
add
sahf
out
icebp
xchg
pop
fdivr
and
test
and
stc
jns
es
(bad)
sti
rcl
mov
push
push
mov
xchg
add
into
jns
inc
mov
je
bnd
aas
call
cli
push
dec
out
hlt
cwde
int3
sub
cmp
dec
push
mov
arpl
in
idiv
or
jmp
out
aad
movs
push
es
push
in
pop
stos
ins
cmps
sub
sub
jle
push
inc
icebp
sbb
sbb
pop
sub
adc
fidiv
xlat
jns
fidiv
mov
addr16
repz
or
adc
in
loopne
mov
and
or
loop
xchg
adc
sub
sbb
(bad)
mov
inc
adc
mov
mov
cdq
and
cld
and
xlat
out
xor
inc
pop
add
xor
and
daa
sbb
and
ins
push
adc
pop
add
pop
xchg
jo
lock
dec
cs
lock
mov
je
add
xchg
and
xchg
mov
(bad)
push
outs
not
xchg
jl
xchg
das
dec
and
xchg
xchg
cli
icebp
scas
and
lahf
or
push
mov
inc
cdq
ss
ficom
inc
add
pop
lahf
movs
xchg
in
test
mov
neg
xor
les
push
inc
pop
imul
xchg
mov
adc
mov
jmp
jne
stos
inc
or
dec
fcomp
push
int3
xchg
push
bound
mov
cwde
pop
pop
clc
cmp
cmp
sbb
push
pop
jnp
popf
(bad)
sbb
sbb
lahf
aaa
cmp
xor
dec
add
std
xor
call
cmps
fldcw
outs
retf
mov
mov
(bad)
mov
enter
mov
jmp
movs
lahf
sub
out
fst
ins
imul
mov
rcr
shl
adc
out
mov
push
or
dec
or
xor
mov
lea
jmp
(bad)
dec
jecxz
sbb
imul
lock
sbb
adc
push
adc
je
or
in
test
push
jne
xor
pusha
mov
fild
jp
sbb
or
call
push
outs
xchg
push
lods
push
xor
test
adc
and
mov
(bad)
in
and
push
fimul
cmp
push
idiv
and
and
inc
rcl
pop
and
(bad)
leave
rcl
clc
ins
mov
rcl
gs
stc
or
adc
adc
aad
shl
mov
inc
push
adc
cmp
fisub
stos
rol
push
push
or
pushf
and
push
repnz
ret
or
sub
push
int
ror
cmc
add
cdq
lahf
scas
pop
imul
mov
leave
rcl
sub
popf
xlat
mov
std
sub
sbb
loopne
sub
cmp
xor
mov
ja
nop
and
xor
jnp
ss
in
xchg
sbb
xor
push
mov
xchg
xor
jmp
(bad)
cs
xchg
jb
jnp
and
sbb
scas
(bad)
popf
ret
in
sub
dec
dec
sbb
repz
shl
gs
fist
push
call
in
xchg
cmp
or
inc
add
ins
in
adc
(bad)
shl
xor
mov
pop
ror
out
xor
sub
ret
pop
sbb
xchg
stos
sbb
dec
mov
adc
push
pop
out
out
sar
xchg
jo
jb
pop
pop
fst
mov
dec
and
imul
not
enter
add
xchg
or
mov
(bad)
cwde
dec
push
push
mov
pop
ds
cdq
(bad)
test
into
pusha
out
cwde
sbb
movs
out
aas
pop
push
ror
sub
ins
out
adc
fld
arpl
push
jo
xor
js
sub
push
jmp
in
mov
ja
xor
inc
lahf
aam
(bad)
jmp
out
int3
xor
push
shl
pop
sub
mov
(bad)
clc
pop
mov
xadd
push
jbe
sbb
out
pop
add
sbb
mov
std
xchg
sbb
sbb
ror
stos
mov
nop
imul
add
and
js
jl
out
cmps
out
mov
std
cmps
pop
loopne
dec
jno
mov
movs
aad
or
sar
sbb
push
mov
jge
mov
mov
sub
sbb
pusha
pop
pushf
cmp
imul
push
mov
int
jl
jg
cmps
mov
out
jmp
jle
jl
ret
iret
xchg
add
dec
xchg
mov
mov
inc
pop
mov
into
das
ss
pushf
and
outs
jecxz
div
cmps
stc
das
mov
sub
push
jo
xchg
jno
mov
(bad)
or
fsubr
push
rol
add
dec
inc
and
pop
push
ds
mov
imul
test
add
and
popa
repnz
in
imul
dec
push
jb
xor
ds
scas
ja
popf
stos
and
lock
jmp
cmp
pop
pop
test
xchg
scas
inc
dec
hlt
pop
and
(bad)
mov
iret
ss
lds
pop
shl
js
sub
(bad)
outs
pop
mov
dec
jne
aam
mov
fmul
ret
std
rcr
sbb
xor
pop
ss
outs
ins
mov
jns
mov
push
int3
mov
ds
push
dec
xor
out
sbb
mov
scas
mov
inc
xchg
(bad)
xor
mov
jb
xor
push
int
arpl
in
add
call
and
retf
pushf
cs
adc
mov
fsubr
pop
dec
bound
add
lods
enter
aam
cmp
fidivr
xor
adc
dec
xchg
outs
ins
jno
lahf
jmp
repnz
lahf
inc
daa
push
pop
sbb
sub
inc
inc
stos
loopne
rcl
js
sbb
sub
push
movs
call
sub
xor
loope
push
js
or
sub
call
mov
and
push
mov
sub
and
mov
xchg
jnp
jle
jo
xchg
sub
gs
xchg
nop
push
pop
loopne
mov
shr
inc
mov
jmp
stc
out
mov
or
inc
mov
adc
fild
gs
pusha
jae
cdq
jmp
xor
ds
jo
push
lods
mov
add
add
inc
push
iret
(bad)
mov
lods
sbb
pop
jecxz
dec
pop
test
sti
dec
fldenv
push
repz
mov
(bad)
fsubr
dec
(bad)
call
in
and
pushf
vsqrtpd
int3
(bad)
bound
mov
pop
lea
adc
ficomp
dec
mov
dec
ds
and
inc
xchg
add
mov
(bad)
clc
xchg
xchg
jg
and
mov
and
jns
dec
scas
inc
pop
sbb
fimul
loope
dec
into
adc
in
xchg
or
add
repz
sbb
mov
dec
outs
lahf
pop
and
and
fadd
push
fs
or
jno
cmp
xchg
pushf
dec
xor
pop
sbb
add
jmp
loope
xchg
cs
push
cwde
jmp
adc
mov
sub
into
mov
(bad)
adc
adc
ds
cli
cmps
icebp
gs
fcom
mov
retf
cmp
jb
add
arpl
ror
iret
push
mov
pop
add
out
pusha
push
in
ss
dec
fdivr
(bad)
mov
lods
jmp
inc
or
add
xor
(bad)
fs
es
xor
and
inc
and
test
in
pop
cmc
push
jne
lods
jecxz
push
add
retf
add
jl
loopne
xchg
rcr
jnp
xor
loope
outs
xchg
std
popf
(bad)
xor
jg
cdq
popf
xchg
addr16
dec
prefetch
mov
cwde
push
test
inc
imul
mov
jmp
push
out
dec
jp
shl
push
push
icebp
and
mov
outs
in
cmp
xor
pop
call
xor
lods
adc
aam
pop
push
mov
cmp
jbe
mov
sub
scas
int3
(bad)
je
xchg
cmp
xor
inc
retf
or
lock
ins
jge
es
enter
outs
adc
(bad)
inc
push
mov
add
loope
and
cmp
add
cmp
jl
push
push
push
mov
sub
sub
jmp
movs
cmc
sbb
mov
pop
inc
add
cmc
iret
mov
adc
push
jmp
fsubr
push
cmp
aad
lods
xor
(bad)
rcr
cmp
jne
(bad)
mov
mov
cdq
mov
out
sbb
test
mov
xor
and
sahf
mov
dec
ror
adc
lds
loope
mov
dec
mov
push
mov
cmp
push
(bad)
xchg
mov
mov
sub
or
inc
push
rcl
sub
sbb
push
mov
pop
or
or
mov
lds
mov
sbb
shr
(bad)
lds
ins
mov
sbb
mov
and
das
fcomp
inc
cmp
add
or
cmc
out
xchg
(bad)
cmp
jge
add
(bad)
retf
sbb
movs
inc
xchg
into
add
cli
jl
nop
popf
into
daa
mov
xor
mov
daa
int3
push
xlat
xor
cmp
xor
mov
lahf
idiv
fstp
mov
sub
cmp
js
cmp
push
sbb
std
retf
jp
push
jbe
xchg
inc
sar
push
push
sub
imul
mov
adc
in
cs
aam
inc
enter
adc
imul
mov
fwait
in
add
dec
fisub
pop
sub
ins
rol
test
call
pushf
xchg
out
rep
enter
aaa
inc
stos
mov
shl
xchg
cdq
adc
or
popa
jge
mov
or
in
cmp
adc
das
js
jns
pop
out
push
shl
push
xchg
mov
mov
push
lods
inc
shl
(bad)
fistp
sbb
push
or
mov
xchg
lds
pop
or
lea
call
out
pop
mov
into
cmp
aas
lods
jmp
das
pop
fimul
adc
test
mov
mov
rol
vpunpckhdq
sbb
fs
mov
fwait
ret
sbb
push
add
das
jb
mov
cmps
mov
in
retf
fsubr
mov
push
push
mov
push
loopne
xchg
aas
lods
shl
in
cs
jns
jg
repnz
jne
in
pushf
test
pop
fcom
vprotb
movs
sub
call
xchg
cmp
push
repnz
jae
mov
push
mov
xchg
out
xlat
or
ret
jo
and
stos
inc
ss
in
aaa
shl
dec
mov
mov
or
cld
nop
(bad)
pop
sub
inc
ja
retf
jae
lods
push
xor
mov
inc
mov
adc
xchg
test
test
add
popa
push
sbb
cli
add
xchg
daa
cwde
or
cwde
pop
sbb
shl
adc
add
mov
pop
or
mov
aas
push
mov
mov
adc
dec
in
ins
mov
(bad)
sbb
inc
hlt
pop
loope
sub
enter
xchg
push
jae
test
out
loop
xchg
not
das
pop
cmp
jbe
popf
fwait
and
loope
out
pop
ffree
mov
push
stc
push
popa
add
out
mov
sbb
mov
lahf
into
xchg
mov
xor
cmp
stc
nop
jg
sub
or
arpl
cmps
pop
xchg
les
push
in
test
add
or
xchg
and
scas
retf
pop
mov
cmp
sbb
cmp
xchg
pusha
ret
in
sub
push
add
dec
xor
out
call
or
rcr
fucomip
and
push
mov
add
ins
cmps
inc
or
int3
xor
(bad)
xlat
or
jbe
(bad)
mov
std
sub
push
push
mov
xchg
das
bound
cmp
cmps
fwait
mov
push
pop
test
dec
mov
jae
call
xor
out
cmp
jae
push
daa
cmp
fmul
test
je
int
std
iret
cmp
push
push
mov
jmp
or
mov
add
jmp
loopne
ror
sti
lods
push
(bad)
jae
jns
mov
inc
jmp
adc
add
xor
xchg
ficom
cdq
dec
inc
std
pop
in
in
jb
outs
xchg
pop
mov
xor
inc
imul
ja
arpl
jmp
dec
xchg
rol
push
mov
cmp
mov
adc
xor
stc
sub
les
inc
pop
pusha
je
div
cdq
mov
fld
and
fdivr
stc
stos
inc
cmp
scas
pop
push
mov
in
push
int3
aam
mov
jg
fs
or
sbb
mov
shl
mov
push
imul
dec
mov
into
sub
inc
mov
pop
les
jnp
mov
mov
cmp
mov
sbb
xchg
gs
push
jge
pop
and
mov
mov
sub
repz
add
in
jmp
outs
xchg
mov
outs
cmps
aas
adc
loopne
loop
cmp
pop
pushf
mov
je
scas
int
ins
or
push
cld
cmps
push
xor
mov
adc
xor
aas
scas
xchg
mov
mov
dec
ins
lahf
jnp
mov
in
adc
and
inc
add
ins
inc
jecxz
cmovbe
gs
loope
cmp
or
push
sub
jae
push
dec
push
fiadd
movs
and
pushf
sti
pop
dec
and
xchg
sbb
sar
mov
dec
push
cmp
lods
xchg
sbb
enter
xor
fnstcw
pusha
or
rol
mov
mov
imul
or
cld
push
pusha
push
ins
fisttp
xchg
xchg
(bad)
pop
mov
inc
or
(bad)
idiv
lea
lods
xchg
call
std
jnp
retf
sbb
or
xchg
inc
sbb
xor
cmp
or
push
arpl
push
dec
mov
and
mov
retf
push
(bad)
in
jle
(bad)
out
pop
enter
sbb
sub
in
mov
adc
push
loopne
movs
mov
js
add
push
adc
pop
and
dec
push
cmp
or
jbe
xchg
xchg
out
mov
sbb
adc
xlat
imul
sbb
not
fprem1
stc
adc
pop
in
lods
dec
mov
jl
sbb
push
mov
add
cdq
leave
mov
mov
repz
or
jl
mov
ret
loop
fdivr
in
out
push
out
xchg
mov
fldcw
dec
jge
push
jg
xchg
aaa
xchg
dec
push
add
mov
mov
xchg
enter
dec
sub
es
sub
pop
and
or
push
popf
loop
call
add
popa
in
sbb
mov
ins
jmp
mov
push
sbb
imul
pop
addr16
pcmpgtw
adc
out
fwait
push
not
into
iret
jne
sbb
adc
push
je
push
and
imul
xor
aam
test
cdq
lea
push
adc
xor
jne
inc
mov
sbb
test
stos
sub
call
sbb
or
es
inc
shl
inc
mov
out
outs
push
inc
push
xchg
xchg
outs
pop
add
dec
jmp
imul
adc
dec
ins
leave
sbb
icebp
lahf
das
mov
stos
add
pop
nop
loopne
repz
or
adc
mov
mov
div
xor
js
test
push
les
fst
imul
xchg
fadd
ss
jns
test
pop
sub
xchg
out
cmps
xchg
pop
pusha
dec
loope
mov
or
dec
in
iret
cdq
in
es
sbb
jns
pop
jmp
aas
jmp
movs
mov
add
and
int3
hlt
mov
mov
or
sti
lds
sahf
jno
cwde
inc
cmp
xchg
(bad)
enter
mov
xchg
jge
or
dec
cli
lods
jmp
arpl
sbb
adc
sub
ficomp
jge
push
data16
add
add
into
xchg
ds
fdiv
sahf
(bad)
les
push
shl
adc
popa
ror
in
pop
fcmovbe
jnp
je
arpl
sbb
(bad)
je
fchs
mov
mov
inc
adc
cmps
and
mov
cdq
ret
mov
and
clc
mov
pop
mov
mov
ror
call
inc
loope
cmps
and
shl
jo
ja
dec
outs
fsubr
sti
test
stc
into
nop
fnop
icebp
test
sbb
sbb
sbb
mov
sahf
xchg
lea
or
or
fs
pop
fwait
xchg
jb
xor
jg
fbld
adc
mov
int
dec
push
jo
(bad)
mov
xchg
mov
retf
dec
cld
cld
je
clc
add
xchg
push
adc
mov
rcl
xor
add
pop
and
ins
mov
push
data16
loop
fdivr
cmp
sbb
mov
dec
lds
(bad)
call
mov
inc
inc
xchg
ins
xor
sub
sub
push
jp
pop
push
add
mov
mov
sub
scas
push
xchg
mov
addr16
mov
loope
cdq
pop
inc
stos
dec
cmp
mov
mov
mov
ds
mov
or
mov
popa
(bad)
ss
adc
call
jo
jmp
dec
mov
fimul
push
in
in
mov
sbb
test
adc
add
xchg
xchg
gs
lods
div
dec
xor
hlt
aas
push
cmp
sub
sub
lea
mov
cmp
push
es
xchg
or
add
jecxz
hlt
cmp
sti
mov
cmc
pushf
and
and
outs
mov
xchg
cdq
das
ins
rcl
loopne
out
adc
xor
int3
popa
xchg
and
fs
jle
(bad)
shl
or
pop
pop
jecxz
sbb
ja
gs
pop
mov
mov
adc
push
jno
sar
or
outs
ret
dec
out
ja
mov
jmp
sti
in
into
jle
push
sbb
call
cwde
or
aas
dec
std
mov
jae
js
mov
out
or
out
cmp
jo
jge
gs
mov
ret
not
xchg
inc
xor
pop
mov
xchg
out
push
mov
jl
sbb
cmp
sahf
cmps
popw
fmul
nop
mov
je
jge
aam
aam
xchg
lea
dec
jno
out
sub
ja
adc
inc
inc
jne
push
popa
enter
jmp
adc
nop
(bad)
jae
sbb
sbb
movs
and
and
out
fcmovb
jns
dec
call
adc
out
mov
dec
inc
pop
or
push
lds
rcl
jp
or
mov
mov
sbb
fisttp
pusha
jno
stos
aaa
or
cmp
loop
jno
ud0
pusha
daa
mov
div
(bad)
dec
cmovbe
sub
int3
jne
aas
fucom
popf
mov
rcr
jbe
xchg
push
fwait
int3
ret
xchg
iret
xchg
int3
pusha
ins
dec
xor
es
sbb
jmp
leave
jae
adc
push
jg
xchg
test
cwde
mov
mov
out
bound
call
fstp
test
jnp
(bad)
minps
or
and
sti
arpl
imul
retf
ja
xlat
sbb
lea
cmp
mov
clc
in
test
daa
sbb
mov
and
dec
pop
sbb
(bad)
xlat
cdq
xchg
mov
test
or
ins
sbb
cmp
cs
pop
loopne
mov
jnp
repz
adc
inc
pushf
popa
out
add
mov
sub
stos
ret
je
rol
adc
sub
or
out
jns
pop
adc
imul
cmps
imul
ins
add
in
inc
mov
outs
pop
dec
cmp
push
push
fist
sbb
xor
int
lods
fs
in
jge
inc
pop
inc
mov
in
ret
jns
dec
xchg
xchg
push
bound
push
mov
jmp
in
lahf
ds
fsub
je
push
popa
js
mov
add
pop
pushf
and
loop
mov
xchg
mov
adc
add
clc
xlat
fs
xor
mov
je
leave
xor
imul
popf
jmp
jmp
pushw
xor
pop
and
add
popa
hlt
mul
rcr
xchg
add
xor
in
out
jmp
sbb
sub
in
and
or
add
icebp
adc
gs
call
xchg
xchg
dec
adc
shr
mov
pop
mov
ins
ja
adc
cmps
test
popf
pop
leave
mov
loop
cmps
sahf
movs
jno
sbb
retf
cmp
push
test
pop
dec
inc
fisttp
ror
(bad)
rol
mov
mov
pop
div
push
ja
nop
add
popa
jno
inc
jmp
sub
pop
jmp
jns
sub
adc
(bad)
hlt
cmp
test
push
dec
or
add
jmp
mov
adc
test
or
dec
or
adc
dec
push
(bad)
sti
xchg
or
das
adc
mov
bound
call
jecxz
lods
out
imul
and
sti
pop
sahf
retf
mov
inc
mov
retf
pop
jne
das
sbb
pop
retf
out
mov
xchg
push
adc
mov
int
add
pop
lahf
mov
cmp
outs
cmp
sbb
dec
sti
xor
in
in
pushf
xchg
mov
xor
loopne
mov
loopne
or
cmp
fwait
cwde
mov
ss
pushf
xlat
mov
pop
popf
or
xor
fisttp
push
fmul
jmp
and
cmps
sahf
push
xor
xor
in
aam
and
lods
fld
inc
lods
in
daa
retf
sub
sbb
sbb
int
pushf
mov
dec
inc
(bad)
push
and
in
push
cmps
mov
fisubr
cmp
(bad)
fs
add
jmp
addr16
push
sub
pop
mov
cmp
imul
sar
adc
stos
mov
sbb
xor
jmp
cmps
sub
mov
and
mov
pop
pop
fiadd
call
pop
jnp
clc
mov
cmp
clc
pop
mov
mov
pusha
cs
dec
sbb
fwait
mov
popf
inc
aad
enter
pop
das
xchg
dec
xor
cld
cli
or
mov
mov
push
jmp
xchg
jnp
mul
(bad)
jb
test
outs
mov
ds
(bad)
xchg
repnz
cmp
add
shl
out
cmps
clc
test
xlat
cli
xchg
jns
mov
mov
sub
jle
out
xchg
mov
sahf
jecxz
xchg
lahf
hlt
inc
xchg
push
xchg
outs
pop
call
inc
pop
shr
out
cli
xchg
lar
dec
add
in
dec
enter
dec
in
scas
div
adc
inc
inc
in
je
sbb
psraw
sahf
push
mov
xchg
in
mov
dec
xor
xor
cdq
daa
jae
(bad)
out
gs
in
push
mov
ins
ja
jbe
loope
fsubr
aaa
sar
loope
push
dec
pop
xor
rol
aas
enter
imul
repnz
push
je
sub
rcr
scas
enter
(bad)
jmp
icebp
out
(bad)
xchg
jle
xor
sub
test
xor
dec
ret
adc
fild
dec
call
cmp
aaa
mov
cmp
lea
cmp
mov
enter
mov
fbstp
inc
iret
call
adc
push
push
add
(bad)
xchg
lock
pusha
inc
repz
lahf
pop
pushf
call
mov
mov
mov
js
xchg
and
add
xchg
and
mov
jge
pop
fwait
aad
jecxz
adc
sti
cmp
mov
mov
sti
test
mul
adc
scas
push
sahf
dec
hlt
pop
lea
push
call
mov
(bad)
xchg
xor
aad
addr16
push
and
aas
push
mov
mov
or
sahf
shr
push
mov
jae
std
data16
sub
xchg
push
xor
add
jmp
pop
std
jmp
in
xchg
pop
sar
sbb
ficom
or
fwait
cmps
or
xchg
pop
inc
jg
(bad)
fldcw
mov
(bad)
push
dec
js
ret
jmp
push
lds
fwait
sub
repz
(bad)
mov
mov
push
sub
inc
jl
mov
pop
addr16
inc
fisub
mov
xchg
add
xchg
adc
pushf
pop
mov
mov
hlt
daa
ja
mov
sub
inc
inc
xchg
or
jno
pusha
imul
cmp
movs
imul
out
jnp
or
inc
mov
mov
mov
xor
xlat
push
and
out
cmps
mov
sti
lock
push
inc
(bad)
loopne
push
xlat
jmp
cmp
xchg
ins
(bad)
call
popf
xchg
cli
push
je
cmp
add
and
adc
xlat
jmp
xor
mov
retf
(bad)
inc
movs
(bad)
mov
iret
sbb
push
dec
add
cmc
jl
or
jae
add
jbe
pop
jne
push
das
bnd
or
es
jmp
out
sbb
push
inc
les
jnp
outs
and
or
pop
pushf
inc
sub
pushf
div
mov
mov
enter
mov
push
push
(bad)
mov
sbb
bnd
pushf
sub
scas
out
xor
sub
jg
fcom
in
push
pop
call
fadd
repnz
add
lods
pop
inc
shl
adc
or
xchg
xchg
ins
clc
fidiv
outs
call
xchg
mov
jmp
add
or
sbb
psubsw
sub
add
sbb
pop
aam
sbb
pop
test
or
aad
xchg
pop
das
dec
lods
lahf
neg
pop
cdq
push
icebp
mov
enter
hlt
scas
cmc
cmp
push
fcmovb
xchg
repnz
movs
jae
dec
push
ret
mov
fs
ins
xchg
add
push
push
nop
leave
and
mov
ds
movs
daa
ret
mov
push
inc
dec
(bad)
outs
jno
adc
mov
or
movs
outs
cmp
pop
pop
inc
imul
add
cdq
shl
in
outs
xlat
ret
enter
scas
sbb
pushf
and
mov
jno
retf
push
out
pop
in
sub
dec
jb
inc
not
and
sti
outs
idiv
mov
mov
sub
nop
or
mov
retf
test
mov
in
cmp
inc
mov
clc
xlat
sub
fs
xor
mov
and
aas
sub
sub
dec
stc
bound
mov
pop
adc
and
xchg
mov
and
inc
add
xor
ret
call
adc
(bad)
xchg
sub
(bad)
push
and
in
jle
or
in
inc
xchg
shr
and
hlt
out
jg
pusha
aad
sbb
xor
sbb
sub
cmps
je
jbe
cmps
push
repnz
mov
ret
ror
xchg
stc
mov
xchg
sub
movs
pop
movs
shl
pop
scas
imul
arpl
push
sti
dec
dec
xor
xchg
test
imul
std
and
in
inc
imul
cmp
in
repz
repz
ja
and
ins
pop
push
and
dec
mul
mov
jp
or
inc
jne
pop
cmp
sbb
jecxz
mov
xchg
aad
in
sahf
or
pop
sbb
jg
mov
add
add
sub
or
es
adc
inc
ret
mov
clc
add
mov
mov
jno
jp
add
mov
xor
dec
dec
cmp
mov
sub
dec
mov
xlat
push
dec
cmp
ds
sti
jle
jo
rol
aas
sbb
shr
xchg
fst
adc
xor
mov
xor
mov
shr
out
cmp
sbb
lea
sub
add
ins
cmc
and
enter
pusha
jmp
dec
jae
cmp
repnz
fs
test
fs
push
adc
mov
(bad)
leave
icebp
push
cmp
inc
ja
inc
fild
ror
fnstcw
lea
jne
stos
dec
mov
dec
sub
jmp
push
int
jl
adc
pop
(bad)
pop
sub
cwde
sti
mov
mov
outs
mov
cmps
add
dec
add
jp
dec
and
cmp
jl
iret
mov
mov
add
scas
sbb
stos
push
or
ret
dec
sbb
inc
sub
pusha
xchg
retf
fwait
cmps
xor
and
in
mov
xchg
fcom
ds
ffree
pop
retf
mov
test
lods
mov
mov
add
push
sub
sbb
in
jmp
pop
call
xchg
test
mov
xchg
jle
jb
fsub
les
and
pop
fs
push
repnz
xor
dec
sti
add
mov
into
ret
ins
push
or
stc
cmps
add
sub
movs
pushf
sbb
xchg
push
ror
push
mov
retf
mov
add
pushf
adc
ja
in
push
cs
setb
xchg
pop
adc
outs
lea
data16
cmp
neg
retf
in
mov
fld
or
lds
mov
cmp
xchg
ss
mov
or
pop
cli
pop
adc
test
ss
mov
push
inc
lds
jmp
dec
retf
add
mov
pop
ret
scas
out
add
jnp
or
cmp
and
ret
ds
aad
call
pop
stos
aaa
push
jmp
add
pop
dec
int3
or
shl
int
pop
shl
loop
and
inc
ret
sub
lahf
mov
nop
adc
sub
daa
in
push
pop
jns
jl
mov
retf
pop
adc
xor
daa
pop
dec
fwait
or
(bad)
mov
adc
pop
test
sti
push
popa
or
inc
sbb
mov
das
push
cmps
xor
movs
into
mov
mov
dec
sub
fstp
or
sub
sbb
nop
mov
fdiv
arpl
outs
int3
pop
retf
and
jl
ret
add
sub
dec
std
ret
mov
mov
clc
jmp
in
test
test
xor
add
addr16
(bad)
ror
js
jmp
sbb
inc
daa
push
sub
cmc
cmp
pop
test
enter
push
pusha
and
stc
xor
push
cmp
fdivrp
cs
xchg
pop
movs
retf
push
les
cmp
aad
fsubr
cmp
jbe
(bad)
(bad)
std
jnp
adc
(bad)
in
test
repz
sub
and
adc
and
inc
clc
lea
das
outs
std
cli
mov
mov
adc
inc
dec
(bad)
sub
and
ins
and
or
and
xlat
push
hlt
mov
xor
cmp
mov
movs
sub
add
das
or
mov
out
je
mov
call
xchg
and
cmc
mov
aaa
push
dec
jmp
add
sbb
cmps
jmp
mov
jg
jo
xchg
mov
retf
leave
cli
xor
sub
fwait
mov
push
in
sahf
jno
or
push
push
pop
imul
stos
pop
std
inc
mov
pop
sahf
lea
sub
loope
popa
fimul
or
dec
fwait
cli
sbb
ins
clc
mov
add
sub
push
rol
push
movs
sub
mul
jo
mov
cmps
push
mov
jmp
mov
mov
jnp
out
movups
dec
mov
xchg
out
mov
clc
jae
test
fs
out
mov
movs
and
adc
stos
scas
out
mov
pop
nop
sbb
ins
mov
add
push
ficom
aam
pop
and
and
aad
inc
add
ret
mov
xchg
adc
test
mov
push
cmps
(bad)
fisttp
lock
jnp
add
inc
(bad)
mov
add
mov
es
iret
mov
jecxz
pop
sub
sub
cmp
mov
or
inc
and
lock
imul
ds
xchg
or
mov
call
lock
sub
push
inc
cmc
push
fstp
bound
aaa
loopne
outs
jge
mov
pop
cmc
in
jne
lods
mov
movs
push
adc
push
cmps
xchg
jecxz
pop
xchg
add
and
sbb
cmc
push
push
hlt
cmp
sub
jno
fistp
or
add
or
jo
(bad)
pop
shl
jb
mov
pop
les
mov
call
mov
fsub
lea
xor
mul
je
push
mov
or
xor
daa
push
leave
test
pop
jae
sbb
pop
fs
mov
jecxz
mov
cmp
jns
push
push
mov
(bad)
cli
sbb
inc
xlat
mov
pop
add
inc
push
inc
mov
test
enter
fldcw
inc
test
(bad)
and
jmp
iret
sbb
repz
je
jp
and
jp
add
xchg
push
sub
cmps
xchg
enter
(bad)
cmps
(bad)
jns
or
fldenv
(bad)
push
cli
mov
push
repnz
mov
sbb
das
lfs
sub
imul
imul
lahf
ds
xchg
ffree
stos
sbb
aad
cmp
push
add
loope
mov
cmc
cmp
and
shl
adc
add
pop
ret
push
jle
(bad)
mov
test
xchg
cmps
mov
add
xor
loopne
mov
sub
add
aaa
mov
mov
in
aad
mov
dec
arpl
jno
mov
push
fiadd
(bad)
repz
cs
add
mov
ins
lahf
lods
cmp
cmp
jecxz
or
fcomip
mov
popf
(bad)
ss
aad
mov
cdq
scas
dec
mov
stos
enter
mov
and
mov
xchg
push
ret
push
shl
xchg
jns
inc
push
nop
out
fstp
push
push
ror
sbb
xlat
mov
clc
jne
mov
imul
retf
push
jno
and
out
movs
and
sub
jo
push
jo
push
mov
adc
(bad)
jle
retf
push
pop
mov
sbb
or
in
(bad)
jne
out
and
cli
xchg
jp
mov
inc
jb
ret
xlat
int
inc
js
jg
loope
out
jnp
(bad)
pop
pop
push
sbb
pop
fisttp
retf
out
js
xchg
retf
cdq
mov
jb
outs
sbb
(bad)
sub
jp
mov
pop
mov
loopne
and
add
mov
lock
pop
cmp
jns
enter
test
shl
mov
test
int3
push
pop
clc
push
dec
cmp
adc
fistp
jle
xchg
shl
xchg
lds
test
mov
fcom
cmp
adc
mov
cmp
jbe
scas
loopne
and
mov
sar
call
test
dec
mov
dec
inc
call
es
out
inc
sub
sub
xchg
cmp
mov
in
mov
xchg
dec
xlat
rcl
(bad)
lahf
scas
mov
xchg
mov
outs
xor
int3
mov
cmp
dec
sub
jge
retf
(bad)
mov
adc
mov
scas
lock
(bad)
mov
jns
jno
xchg
lock
movs
jae
pop
js
mov
dec
dec
mov
les
mov
gs
cld
and
shl
or
arpl
and
jae
les
sbb
fidivr
shl
ins
dec
mov
sahf
cmp
push
xor
dec
mov
xor
shr
shr
lahf
loop
xor
xor
loop
in
cdq
ret
out
adc
arpl
test
push
xor
sbb
xor
and
loop
sbb
push
pop
into
int
push
inc
(bad)
dec
shl
jae
fdiv
data16
xor
xchg
mov
inc
push
ins
les
and
mov
(bad)
imul
jbe
(bad)
(bad)
daa
xchg
adc
mov
mov
xchg
push
lahf
shl
fxch
cli
fdiv
pop
out
arpl
xor
jmp
mov
iret
das
dec
sub
jmp
mov
clc
inc
pusha
data16
jae
push
(bad)
aaa
mov
popf
sbb
ja
sar
lock
scas
pop
daa
cmp
out
add
cmp
jmp
jbe
iret
mov
sbb
push
int
push
sbb
xchg
retf
mov
xchg
neg
mov
or
stos
mov
(bad)
call
lahf
xchg
div
pop
cmp
int3
lds
mov
xor
pop
xchg
sub
dec
adc
lods
imul
xchg
dec
sbb
mov
ins
dec
mov
or
pop
xor
pop
mov
out
mov
sub
popf
aas
jp
cmp
int3
out
call
fld
add
pop
pop
imul
mov
out
sbb
inc
jmp
iret
(bad)
and
jmp
mov
pop
xlat
and
cwde
movs
sahf
in
add
jl
test
jne
mov
push
movsx
lea
retf
add
aad
lock
adc
pusha
scas
fmul
jae
jae
mov
lahf
mov
mov
mov
int
shl
sub
popw
lods
in
xchg
add
inc
lock
sar
test
pop
or
loope
adc
test
adc
cwde
std
jbe
jge
and
out
cli
ins
aad
jmp
sub
sub
push
dec
mov
icebp
mov
popf
sahf
pop
cwde
pop
dec
cmps
push
jno
xchg
or
mov
icebp
xchg
bound
shl
outs
aaa
mov
and
cmp
imul
repz
outs
cwd
outs
test
or
jne
xchg
sub
je
jmp
xor
shr
push
pop
test
pushf
sahf
fld
lods
dec
mov
sbb
xor
xchg
sub
popf
push
std
or
movs
in
repnz
xchg
aas
fwait
xchg
(bad)
jbe
fcomp
push
ss
mov
scas
dec
loop
inc
jmp
rcl
outs
ss
call
pusha
popf
stc
jg
out
push
cdq
inc
xor
ds
mov
int3
jnp
ja
mov
imul
fcom
clc
push
fiadd
movs
jge
stos
jl
xor
fadd
jecxz
test
ret
loop
mov
fidiv
or
push
cmc
retf
test
outs
push
test
pop
call
mov
push
test
push
dec
scas
inc
mov
mov
push
ds
mov
adc
mov
push
fstp
dec
sub
push
sar
sub
push
adc
mov
fwait
test
mov
mov
push
fucomi
ja
sbb
dec
mov
(bad)
fs
aad
adc
lahf
imul
jno
and
sbb
sub
pop
pop
mov
sub
cwde
lods
mov
mov
test
dec
xor
xchg
movs
in
pop
sbb
dec
daa
push
xor
fstp
iret
sbb
dec
movs
add
les
mov
pop
repnz
and
pop
xchg
xor
jmp
mov
mov
add
adc
jae
mov
xchg
or
inc
sub
sub
fs
fucom
out
in
xchg
ins
imul
dec
sub
ins
mov
pushf
or
cdq
jo
fisub
fnstenv
xor
mov
ja
leave
dec
retf
hlt
sub
cmps
mov
jb
cld
push
or
mov
inc
pop
repnz
jnp
adc
inc
cwde
cmp
mov
mov
ror
sub
mov
jns
addr16
push
test
pop
pop
mov
rcl
cld
retf
sbb
(bad)
jns
(bad)
mov
or
mov
(bad)
aam
xchg
aad
add
mov
test
pop
xchg
cwde
jo
mov
dec
jmp
ins
mov
in
icebp
(bad)
add
stc
idiv
bound
fwait
pop
mul
aam
loopne
jecxz
and
adc
sbb
aad
les
ins
jnp
lock
mov
pop
scas
mov
shr
xchg
cwde
mov
cmp
fstp
scas
cli
ror
inc
xor
or
push
test
or
stos
neg
adc
jl
mov
inc
sub
icebp
pop
jge
pop
xchg
cmps
aaa
stc
cmps
jns
loope
pop
sub
push
xor
add
and
pop
pop
outs
or
enter
add
xchg
loopne
test
ss
cdq
push
(bad)
mov
jge
cmp
inc
outs
add
push
inc
mov
mov
sub
imul
xchg
shl
out
clc
mov
sti
stc
add
in
pop
pop
inc
xchg
(bad)
pusha
je
addr16
ret
sub
inc
stos
xor
test
mov
pop
push
add
(bad)
pop
sbb
jmp
out
mov
and
je
or
dec
xchg
sbb
int3
lahf
and
xchg
sbb
push
lock
xlat
pop
push
ret
out
mov
in
jb
lock
(bad)
add
das
sub
shl
sub
mov
or
xor
pop
mov
pop
and
mov
sub
cmp
stos
jg
pop
or
clc
or
adc
add
ret
fdivrp
loope
inc
imul
dec
xor
pop
jo
ss
aaa
div
gs
push
fist
stos
into
inc
into
pusha
fisubr
cli
xor
ficomp
leave
mov
lods
ror
ror
and
fsub
test
mov
inc
addr16
pushf
stc
jg
push
shl
pop
aad
ret
cmp
xlat
inc
jne
or
ret
ret
push
iret
mov
lea
mov
or
or
cs
jne
push
adc
std
push
nop
mov
jns
icebp
out
push
sub
bnd
sub
lea
xchg
xor
or
lahf
xor
and
cwde
das
inc
and
mov
sub
jne
jmp
rcr
cmp
push
adc
add
push
and
push
jmp
or
ds
dec
cmp
test
cmp
sub
es
cld
mov
sbb
push
inc
mov
(bad)
mov
sub
sub
pusha
sub
aam
adc
jb
jb
outs
xchg
loop
rcr
cmp
jae
cld
ret
mov
int3
jnp
test
add
cdq
push
inc
add
mov
or
outs
rol
jns
hlt
mov
out
ss
jbe
std
cmp
(bad)
sub
ja
xor
gs
mov
jb
gs
dec
call
jb
sbb
xor
int3
out
ret
sahf
stos
dec
cmp
out
mov
xor
adc
movs
imul
inc
mov
push
push
inc
jg
ret
std
shr
push
xchg
push
in
adc
jmp
ficomp
movs
push
bound
sbb
mov
sub
(bad)
push
outs
call
(bad)
addr16
dec
mov
arpl
retf
sub
(bad)
outs
int
bswap
in
dec
faddp
sbb
stos
mov
push
ins
cmp
sbb
jno
mov
ret
addr16
push
push
aaa
test
or
mov
or
repz
ja
push
push
out
pop
inc
inc
and
inc
(bad)
int
retf
icebp
test
xor
scas
js
sbb
push
push
je
mov
add
sub
mov
mov
and
jge
mov
sbb
out
adc
inc
xor
(bad)
pop
xchg
sbb
outs
popa
push
push
xor
out
stos
es
mov
rcl
test
cmp
ss
mov
push
es
and
pop
cmp
cmp
popf
mov
xchg
push
or
imul
xchg
rcr
add
call
aad
icebp
jnp
aad
xor
jecxz
sub
test
out
cli
push
jmp
cmps
or
or
mov
sbb
imul
sbb
jmp
fiadd
xor
and
mov
jnp
ss
and
mov
and
pop
inc
bound
xor
dec
inc
pop
xor
pop
(bad)
add
loope
add
jmp
aaa
dec
mov
or
ja
imul
movs
repnz
lea
movs
lea
dec
push
mov
cs
xor
(bad)
or
adc
imul
xor
and
cmps
adc
mov
add
nop
aaa
aaa
stos
or
ret
push
inc
or
in
xor
mov
inc
std
xlat
enter
xchg
mov
repz
dec
sub
test
sbb
int3
mov
push
mov
aam
cdq
repnz
retf
mov
nop
mov
stos
and
gs
cwde
push
push
cld
sahf
pop
xchg
jno
push
sbb
scas
mov
outs
add
out
cmps
out
stos
mov
movs
sub
push
addr16
test
lods
cmc
sbb
xor
ja
mov
pop
je
arpl
fisttp
call
in
pop
das
pop
inc
sbb
mov
add
mov
(bad)
stc
je
stos
add
mov
xchg
adc
xor
dec
adc
dec
adc
ret
sbb
dec
leave
and
adc
jp
fsubrp
adc
fs
mov
js
pusha
xchg
call
sub
rcr
(bad)
shl
lds
xor
and
loop
lahf
jle
mov
cmp
dec
mov
in
vmovhpd
adc
sbb
(bad)
cmp
lds
adc
mov
pop
jno
in
iret
(bad)
out
out
cli
out
jl
mov
and
jne
dec
adc
cmp
call
cld
call
mov
xchg
cdq
inc
test
shr
sub
inc
dec
in
jnp
stos
jp
jg
push
ror
pop
jne
je
pop
mov
add
jl
(bad)
in
cmp
loopne
in
dec
icebp
imul
inc
sbb
(bad)
pop
stos
outs
jne
xor
and
movs
jns
cmps
pusha
xor
or
cs
popa
ror
or
arpl
shl
push
fcomp
xchg
push
cmp
out
sbb
sub
inc
fild
in
push
lods
loope
shl
fs
or
je
(bad)
sar
and
mov
mov
mov
fcom
inc
dec
cmc
(bad)
cmp
push
jne
lahf
mov
jg
pop
retf
jno
ds
loope
push
mov
in
adc
jge
ret
gs
ret
inc
movs
out
fucomp
loop
cmp
push
adc
push
into
push
xchg
out
push
test
add
push
jne
test
sahf
adc
jecxz
sar
fwait
push
xor
adc
sub
mov
inc
jb
sub
sar
fstp
xlat
jl
call
retf
jg
(bad)
fimul
jns
push
mov
test
(bad)
mov
cmp
cmp
scas
or
loope
and
sub
cmp
sbb
les
xchg
adc
add
or
addr16
(bad)
cmp
jb
and
bound
(bad)
movs
pop
(bad)
mov
push
push
push
sbb
imul
int3
cli
mov
popf
push
sub
fadd
jecxz
in
clc
scas
mov
sbb
sbb
fild
rcl
inc
arpl
xchg
in
(bad)
ds
movs
push
test
cld
out
leave
mov
inc
or
push
outs
push
popf
idiv
out
aad
movs
inc
push
dec
or
fldenv
sub
mov
fbld
sub
mov
stc
or
inc
mov
add
fmulp
or
jno
inc
(bad)
fbstp
mov
jmp
sub
jmp
and
cwde
push
ret
(bad)
and
lods
sbb
int
and
(bad)
cli
and
(bad)
mov
sbb
je
or
fild
stos
add
jno
lods
and
sbb
mov
nop
aam
popa
hlt
adc
and
mov
and
add
(bad)
test
iret
or
inc
cmp
mov
rcl
mov
in
and
push
pop
or
or
js
leave
sub
ret
push
or
sbb
pop
test
out
pop
test
movs
pop
aad
and
push
cmps
retf
pop
sub
lock
repnz
repz
adc
mov
add
or
sbb
add
lods
mov
push
cmp
loope
imul
mov
pop
arpl
inc
mov
outs
xchg
shl
mov
not
jmp
jnp
sbb
xor
mov
cmp
and
cmp
imul
xchg
xchg
sbb
fwait
shr
in
cwde
push
stos
inc
cmp
mov
cmc
pop
add
xchg
inc
push
popa
cmp
loope
add
xor
push
adc
pop
mov
sbb
outs
mov
les
ret
cmp
mov
cmp
sub
push
add
pop
and
inc
in
dec
daa
mov
jbe
xchg
stos
aaa
jne
xchg
push
test
mov
stos
call
cmp
fmul
out
pop
inc
dec
cwde
nop
mov
retf
ret
mov
jecxz
add
add
jecxz
xchg
jge
test
pop
cmp
fsubr
or
mov
jo
cmp
or
les
sti
or
shl
test
push
in
rcr
sub
(bad)
xor
fnop
lahf
inc
xchg
idiv
inc
in
out
test
int3
cmps
push
inc
push
pop
aad
xor
loop
and
dec
out
test
inc
inc
int
xchg
jno
iret
ror
xor
adc
push
out
jmp
cmp
pop
jb
paddd
adc
mov
mov
pop
sbb
(bad)
mov
imul
fcomp
test
mov
mov
es
xor
push
not
dec
xchg
mov
fwait
xor
test
mov
cli
cmp
mov
mov
mov
jmp
push
dec
jbe
int
sahf
pop
mov
fs
dec
repz
test
sub
push
pop
test
cs
jbe
or
push
cmp
sbb
pop
into
adc
xchg
jmp
(bad)
retf
popf
ret
cmp
loopne
or
(bad)
dec
daa
lock
mov
pop
xor
push
test
mov
das
in
jbe
rcl
jg
sub
pop
jns
push
xchg
test
xor
mov
sub
retf
push
loope
jo
cmp
into
lds
or
int3
jmp
jle
dec
repnz
cwde
or
mov
cli
mov
and
loope
fs
stc
cld
xor
and
movs
ins
pop
and
sub
pop
ja
fs
fild
mov
retf
movs
test
imul
(bad)
fwait
js
and
xlat
je
mov
mov
fs
mov
into
int3
xchg
mov
fwait
daa
sub
xchg
adc
aam
adc
dec
hlt
mov
sti
clc
and
sub
test
inc
or
push
mov
test
out
sbb
loope
loope
cmc
out
(bad)
bound
xchg
pusha
into
adc
dec
std
loop
lds
jbe
(bad)
rcl
outs
dec
pushf
aas
pop
int3
push
stos
mov
lods
push
test
data16
dec
fsubp
sub
add
outs
cmp
imul
stos
fwait
sbb
aam
jmp
adc
loop
aas
loopne
inc
push
pop
leave
inc
pop
mov
jmp
out
xor
jne
gs
imul
sub
jmp
jnp
xor
jmp
pop
xchg
icebp
and
dec
or
add
and
cmps
push
test
movs
mov
stos
sub
icebp
push
mov
inc
idiv
lahf
xlat
out
cmc
adc
mov
fsub
and
and
xchg
scas
push
aam
pop
pop
mov
(bad)
inc
adc
jo
jo
ret
cmp
bound
sbb
lds
dec
addr16
and
jmp
sbb
xchg
fistp
mov
sub
(bad)
jb
add
call
and
aam
xchg
out
aam
sub
(bad)
rcr
sbb
stc
or
scas
pop
das
sub
stos
rcr
mov
loopne
ss
ins
sub
das
sub
mov
lods
pop
push
rcr
aaa
pop
out
ret
pop
mov
fst
xchg
iret
fcomp
adc
cdq
fucomip
out
lahf
or
xor
movs
mul
adc
dec
mov
lahf
jne
dec
cld
inc
sbb
push
add
add
out
test
pop
push
rol
and
(bad)
sub
popa
mov
fwait
call
loope
inc
jge
add
repz
dec
jnp
xchg
fadd
push
jnp
sbb
push
test
inc
adc
add
jge
(bad)
mov
repz
xor
push
jns
add
pop
jnp
dec
loope
(bad)
xor
neg
popa
rcl
mov
dec
pop
cli
cmp
test
push
popa
xor
sub
and
mov
mov
cmp
mov
mov
out
and
cdq
aaa
add
pop
xor
aaa
xor
ret
movs
(bad)
push
popf
rol
leave
adc
pop
adc
jns
jne
jno
sti
(bad)
jle
sbb
das
sbb
sub
adc
ins
daa
shr
pop
(bad)
jle
stos
fcomip
dec
adc
xchg
cmp
and
xchg
jns
int
dec
mov
adc
pusha
lods
in
inc
test
and
(bad)
stc
(bad)
repnz
sbb
js
ficom
mov
and
pop
dec
push
ret
sahf
(bad)
cli
cmc
dec
add
cmp
movs
stc
jne
xor
pop
imul
xlat
in
or
fmul
mov
fidiv
push
(bad)
dec
cmp
movs
fist
pop
dec
mov
add
xchg
mov
push
cmp
(bad)
out
fidivr
repz
mov
adc
pop
mov
lea
aaa
jne
mov
fist
sub
sar
add
jmp
push
ror
mov
push
sub
jg
lock
mov
push
(bad)
fisttp
out
sahf
imul
movs
pop
nop
setb
dec
and
lods
les
add
fdiv
test
cli
mov
push
add
stos
(bad)
sbb
int
repnz
bound
popa
call
loope
inc
not
cmp
mov
add
stos
les
adc
aaa
pop
cmp
sbb
sbb
sbb
inc
popf
inc
and
cmc
daa
retf
fwait
push
int
and
cmps
stos
sbb
jo
ret
dec
push
inc
or
repz
inc
repnz
jns
pop
cmp
aas
jmp
and
jg
jge
mov
dec
or
jb
pop
add
test
sub
or
jne
jo
cmps
xor
cld
mov
fisttp
inc
mov
add
das
jns
frstor
aaa
add
sbb
test
mov
mov
aaa
int
lds
sbb
aas
add
lods
xor
enter
adc
sbb
mov
adc
dec
xchg
xor
push
ds
jmp
sub
ret
rcr
sub
sub
and
fmul
sub
nop
push
in
cld
jmp
daa
retf
adc
retf
mov
mov
pusha
add
cli
add
inc
aad
xor
hlt
jp
cdq
(bad)
push
mov
rcr
dec
xchg
repnz
adc
inc
dec
or
fs
imul
out
adc
xchg
inc
fucomip
pusha
retf
outs
cs
xor
push
pusha
ficomp
hlt
mov
int3
ret
popf
push
inc
mov
xor
icebp
cmp
cs
cli
adc
push
fistp
add
rol
ins
inc
(bad)
fistp
add
adc
imul
or
add
inc
push
or
mov
push
sbb
inc
pop
(bad)
mov
fs
push
addr16
jmp
js
jns
cs
stos
stc
cmp
sar
mov
push
push
in
jno
mov
mov
les
cwde
and
ret
fwait
inc
bound
retf
mov
adc
test
mov
mov
retf
inc
mov
mov
fistp
xor
and
add
sub
out
dec
xor
test
jmp
rcl
sub
test
lods
jbe
clc
and
xor
sub
add
(bad)
std
xlat
fisub
xchg
loope
clc
nop
ins
pop
jae
fcomp
mov
push
popf
xor
mov
cmp
cmp
ficomp
(bad)
pop
jl
pusha
dec
test
xchg
test
jl
cmps
pop
xor
cmps
rcr
pop
into
neg
bound
lods
loope
pop
pop
add
and
dec
push
sub
mov
add
(bad)
pop
cdq
inc
ret
dec
fstp
pop
ds
mov
ds
inc
jle
in
enter
jae
in
mov
aam
adc
leave
mov
xchg
sub
ds
jnp
popa
call
arpl
sbb
xor
cmp
(bad)
imul
inc
fbstp
aam
(bad)
test
mov
in
in
mov
mov
add
aas
(bad)
pop
lods
outs
adc
xor
cmps
(bad)
mov
push
mov
push
cmp
fidiv
and
mov
pop
xrelease
lods
sbb
test
xor
pop
mov
dec
jno
hlt
js
jae
test
ret
push
xchg
inc
push
pop
cli
ss
lahf
xchg
into
aas
shl
push
fcomip
(bad)
add
mov
stc
push
test
fsub
(bad)
and
fld
push
pop
mov
(bad)
dec
jne
push
lea
pop
pop
push
mov
stos
pop
push
xor
sti
push
(bad)
(bad)
aam
fs
stos
xchg
mov
jnp
xchg
jns
and
or
sub
sub
into
ins
int3
lods
neg
mov
cmp
add
adc
movs
mov
std
add
mov
int
mov
mov
add
(bad)
xchg
es
(bad)
clc
xchg
add
ror
xor
xchg
fs
cmp
call
jb
add
lods
adc
xchg
fnsave
push
inc
adc
std
jbe
xchg
ror
daa
les
in
ins
inc
adc
push
xchg
jmp
or
int3
enter
(bad)
ds
not
jbe
add
push
js
ror
cmp
push
fcmovu
inc
in
or
pushf
fisub
adc
lea
movs
xchg
jnp
movs
stos
sub
(bad)
xchg
mov
cmp
mov
jb
cmp
adc
or
lock
mov
xor
mov
mov
movs
mov
mov
mov
sub
sti
test
rcr
xor
or
bound
push
jae
dec
loopne
or
std
ja
les
outs
xor
fucom
jp
sub
cmp
(bad)
cdq
leave
jmp
je
(bad)
adc
sbb
or
jmp
cs
inc
jmp
test
shl
push
das
jge
retf
dec
push
mov
rol
and
push
out
cdq
mov
dec
lods
int3
mov
jecxz
ret
ret
ret
sbb
pusha
xor
or
loope
in
sahf
xchg
adc
jp
in
std
jp
inc
jg
sub
test
loopne
inc
scas
cmc
jmp
gs
enter
jle
shl
inc
cmps
sbb
ins
es
cmp
inc
fnstsw
hlt
add
ins
cmps
mov
jmp
xor
aaa
jp
std
jmp
cmp
jge
(bad)
xor
mov
(bad)
ins
adc
cwde
aad
sub
adc
inc
lods
(bad)
adc
cmps
xchg
shr
xor
mov
fldcw
add
sbb
das
loope
xchg
inc
push
add
xchg
call
or
cmp
push
inc
jae
mov
mov
inc
jns
hlt
and
push
nop
mov
mov
out
mov
and
xchg
mov
inc
iret
push
addr16
cmp
int
jmp
push
cmps
popf
sar
int
fadd
inc
stos
cwde
scas
(bad)
pop
adc
or
shld
mov
aas
inc
arpl
into
mov
je
int3
adc
out
ffree
in
mov
test
cmp
movs
(bad)
lods
dec
cmp
cs
dec
test
movs
popa
add
dec
pop
mov
dec
fmulp
jmp
out
mov
jl
outs
call
adc
in
jb
rcr
inc
into
sub
sbb
adc
loopne
jle
sub
into
test
mov
retf
push
(bad)
dec
xor
cmp
xor
icebp
jno
retf
sahf
sub
pop
adc
mov
sbb
cmp
mov
movlps
pop
ja
inc
cwde
mov
mov
or
(bad)
bound
add
retf
adc
sbb
dec
icebp
sar
(bad)
ficom
xor
pop
push
mul
or
add
push
sbb
mov
scas
and
repz
shl
imul
pushf
lahf
fisubr
adc
imul
cdq
(bad)
das
jno
mov
xchg
mov
pop
mov
inc
mov
and
jns
std
clc
(bad)
push
jnp
jnp
mov
mov
fs
mov
fsub
(bad)
pusha
inc
mov
mov
aad
inc
xchg
in
xlat
mov
sub
imul
fnstsw
cdq
in
adc
xchg
cs
push
lock
dec
push
sub
jp
cmp
scas
add
ds
cmc
mov
mov
sbb
pusha
sub
xchg
stos
call
mov
enter
lahf
dec
(bad)
fs
and
sbb
(bad)
shl
repnz
sbb
pop
xchg
cmps
jb
ror
push
in
mov
jmp
or
push
enter
stos
dec
jne
imul
or
sbb
xor
pusha
mov
fadd
pusha
(bad)
jp
in
pop
out
addr16
dec
ret
jb
sbb
dec
xor
bound
cmp
inc
pop
mov
cmc
lods
repnz
es
arpl
gs
sbb
cmp
retf
fs
cli
mov
jmp
xchg
push
in
loopne
push
jl
push
push
push
and
(bad)
inc
movs
sahf
xor
test
loopne
fwait
ins
loopne
dec
fs
cmp
outs
pop
xor
lock
popf
sbb
pop
push
adc
push
or
xchg
pop
or
ds
shl
pop
mov
mov
mov
(bad)
mov
pusha
addr16
(bad)
jmp
push
popf
pop
fdivr
pushf
clc
xor
mov
movs
push
loop
out
adc
aas
dec
mov
hlt
ins
sbb
(bad)
lock
xor
lahf
popa
clc
sbb
mov
xchg
outs
add
mov
or
es
pop
hlt
jmp
les
(bad)
dec
jae
jp
ficomp
and
(bad)
fcomi
jecxz
in
pop
vmread
push
pop
adc
idiv
test
mov
fisub
ror
and
jb
je
fyl2x
mov
mov
jnp
das
and
push
mov
icebp
(bad)
faddp
adc
pop
xor
sub
inc
mov
inc
mov
std
inc
shr
outs
sub
aad
push
xchg
jle
sahf
sub
inc
xchg
dec
inc
retf
add
outs
test
sar
jnp
cwde
pop
push
clc
cmp
adc
adc
mov
and
jns
ret
dec
push
push
adc
pop
inc
jbe
call
or
push
pop
int
in
inc
int3
cli
test
(bad)
leave
es
retf
arpl
call
mov
add
test
scas
xchg
js
push
adc
pop
mov
cmp
or
cmp
cwde
dec
push
mov
sbb
mov
jecxz
pusha
jle
dec
clc
pop
xchg
pushf
test
pop
jl
mov
stos
sar
ss
inc
jno
outs
jae
push
cmp
jne
in
out
lea
cmp
push
lods
stc
mov
popa
add
jbe
stos
and
jae
jns
push
push
adc
daa
jno
enter
or
mov
mov
xchg
xor
shl
sub
imul
cmp
sbb
ret
xor
and
sbb
mov
jno
mov
xchg
into
pop
mov
xchg
sub
jl
addr16
les
mov
jbe
retf
loopne
ret
repnz
dec
push
retf
adc
(bad)
out
daa
loopne
shr
(bad)
(bad)
test
jecxz
std
(bad)
cmc
cmp
dec
mov
cdq
ds
or
dec
out
retf
mov
jl
(bad)
push
ds
ins
xor
mov
inc
mov
fistp
inc
div
dec
aad
outs
out
out
mov
(bad)
cmp
dec
cmp
add
loopne
fnstenv
sar
mov
add
gs
es
out
cmps
cmp
leave
lds
jo
add
mov
sbb
pop
or
add
cmp
adc
xchg
push
stc
mov
pushf
cmps
mov
add
fwait
cmp
sbb
mov
xor
mov
pop
lods
jg
xchg
add
mov
fmul
repz
sub
xor
movs
int
inc
ficomp
mov
fiadd
jb
test
das
mov
mov
ins
hlt
cmc
sbb
scas
inc
fbstp
aaa
cmps
mov
inc
int
cmps
xlat
lods
adc
add
outs
sub
jl
and
sbb
mov
sub
mov
mov
je
ja
push
test
ret
jnp
mov
push
rcr
push
addr16
hlt
mov
fucomi
enter
ja
into
data16
test
push
mov
jnp
mov
mov
xchg
jmp
inc
or
test
sub
sbb
cli
(bad)
adc
adc
je
sub
ins
mov
int3
daa
or
add
fnstenv
enter
mov
inc
pop
cmp
or
jb
repnz
sub
das
dec
test
fisttp
sub
mov
pop
sbb
pop
imul
(bad)
sbb
and
test
and
inc
in
adc
xchg
mov
dec
sbb
leave
pop
out
sti
adc
xlat
cmc
inc
in
stos
test
xlat
lods
jl
retf
jl
test
pushf
push
xlat
jecxz
pop
imul
pop
jnp
or
jne
stos
js
or
scas
sahf
and
out
inc
imul
imul
stos
mov
dec
outs
leave
arpl
jle
sbb
jbe
mov
sbb
cmp
enterw
cmps
jg
mov
pushf
pop
enter
mov
add
cmp
cld
daa
jno
add
movs
es
cmp
xchg
cmp
rcl
out
outs
push
pop
aas
mov
loop
mov
or
adc
lods
jne
pop
icebp
outs
ds
pop
xchg
jg
rol
inc
es
dec
xor
mov
jle
cmp
bound
mov
push
jae
retf
push
adc
pop
adc
stos
in
dec
pop
dec
mov
mov
call
or
jl
mul
cmp
jg
adc
jb
jmp
xlat
aaa
mov
and
aaa
(bad)
retf
xor
add
mov
jp
xchg
sbb
(bad)
dec
scas
mov
inc
xor
mov
out
repz
popf
jl
or
es
fwait
cmp
ins
mov
test
fstp
fst
jle
or
mov
and
js
pusha
dec
or
gs
movs
sbb
daa
sti
sub
sbb
cmc
adc
adc
mov
lea
pop
neg
call
mov
shl
aas
enter
data16
pop
sub
jecxz
mov
cs
fwait
adc
rcr
sbb
bound
jmp
stos
mov
mov
xor
inc
jae
ja
pop
mov
sub
push
icebp
mov
out
(bad)
and
not
pop
sub
test
pop
rcr
icebp
mov
scas
test
adc
xchg
nop
movs
sti
test
out
or
sub
inc
aas
and
ret
or
repnz
retf
jl
mov
call
mov
xor
lods
push
mov
sbb
fistp
sub
fld
loopne
popf
fcmovb
add
sar
fidiv
mov
scas
imul
(bad)
xchg
fcom
mov
cmp
or
pushf
sti
mov
imul
add
jo
adc
add
test
jae
(bad)
je
mov
xor
iret
inc
pop
mov
imul
shl
jmp
je
shl
imul
fist
or
lea
adc
inc
nop
pusha
addr16
pop
mov
jo
lea
mov
fwait
or
dec
pop
mov
retf
mov
push
and
test
shl
pop
lock
add
push
movs
pusha
in
fld
dec
xor
jae
retf
loopne
xor
lea
jle
aad
sbb
sbb
aaa
sti
cmp
jo
xchg
loopne
ins
push
in
xchg
xor
lahf
(bad)
fadd
dec
or
sub
and
jae
cdq
and
stc
(bad)
imul
mov
dec
clc
movs
inc
mov
add
adc
cwde
jb
pop
cmps
das
mov
pushf
lea
xchg
mov
addr16
mov
or
aaa
je
repnz
or
sti
sub
mov
(bad)
dec
and
mov
test
leave
xchg
repz
out
dec
cmps
cs
and
xlat
iret
xchg
jecxz
pop
bound
dec
js
addr16
adc
add
sbb
sub
mov
bound
push
jo
shl
test
ins
fs
sub
adc
mov
cmp
pop
mov
mov
or
pop
clc
push
xchg
pop
mov
(bad)
dec
cld
(bad)
aaa
dec
outs
(bad)
mov
pop
hlt
movs
sub
jg
in
daa
adc
retf
mov
call
adc
xadd
jg
idiv
push
mov
mov
mov
outs
cmp
fst
sahf
fdiv
mov
xor
pop
sahf
ins
push
mov
pusha
movs
(bad)
sbb
bound
outs
mov
inc
jo
ja
xchg
add
cli
out
imul
inc
lea
sub
push
mov
sbb
add
(bad)
cmps
mov
(bad)
stc
lock
mov
sbb
call
loopne
cmp
pop
xchg
aas
cmp
fisubr
in
not
adc
jge
or
dec
loope
js
ret
xchg
movs
shl
xor
mov
je
je
push
arpl
fldcw
xor
dec
xchg
push
pop
sub
shl
cld
xor
lds
adc
push
mov
pop
mov
cmp
jmp
xchg
bound
xchg
adc
mov
fcomp
mov
les
cmp
xor
movs
fwait
dec
dec
sbb
jmp
fwait
cs
pusha
mov
inc
sub
adc
add
shl
cmps
and
mov
repz
pop
and
or
push
push
or
push
add
inc
lds
sbb
sub
sub
dec
xchg
imul
in
inc
fcom
outs
sub
sahf
and
nop
inc
gs
adc
out
je
(bad)
mov
jo
inc
xchg
jmp
push
das
ret
or
pop
or
data16
int
mov
push
or
jge
and
and
jae
push
sub
xchg
aas
add
lock
int
mov
mov
mov
add
jb
xor
je
scas
mov
into
sbb
out
xor
mov
inc
nop
cmovs
not
or
or
push
rcr
dec
sbb
xor
xchg
add
nop
jo
jp
and
je
pop
mov
jmpw
fld
fidivr
inc
push
cmc
jge
ins
lahf
cmc
push
cdq
stos
cmps
icebp
push
add
and
push
mov
loopne
outs
call
shl
call
cmp
mov
arpl
lods
lahf
mov
int3
into
aaa
mov
stc
dec
pop
and
cli
outs
daa
cmps
pop
in
adc
arpl
jo
cmp
test
js
in
jo
xor
xlat
mov
retf
sub
call
vpmaxsw
imul
(bad)
repnz
adc
fcomip
dec
leave
ss
push
mov
push
hlt
pop
loop
aad
jae
cmps
clc
lods
rol
pop
add
xor
dec
sbb
inc
(bad)
hlt
scas
popa
adc
dec
stos
inc
add
add
iret
imul
push
mov
cs
ret
dec
and
lahf
and
xchg
leave
daa
repnz
dec
push
mov
inc
ins
add
test
mov
or
jo
sahf
sub
dec
mov
ror
lahf
ins
mov
(bad)
mov
aad
cli
in
or
sbb
jmp
nop
xor
pop
or
add
mov
int
cmp
popa
leave
mov
or
jae
adc
sbb
jl
retf
retf
adc
sub
in
sbb
mov
aaa
mov
and
mov
mov
hlt
push
cld
dec
push
add
shr
ss
ror
and
(bad)
push
enter
sbb
inc
cmp
iret
mov
mov
ins
add
cli
dec
(bad)
(bad)
dec
xchg
pop
lahf
ins
pop
outs
inc
popf
mov
fld
jb
mov
push
test
mov
mov
out
jmp
jae
test
jge
sbb
dec
jp
(bad)
cmp
cmps
sub
mov
and
and
jo
cmp
or
in
lods
sub
xlat
and
out
and
push
xchg
(bad)
aas
xlat
(bad)
out
cs
and
xchg
push
es
pop
jmp
shl
lock
not
sbb
dec
mov
(bad)
jne
arpl
mov
jo
jne
ficom
fwait
sub
lock
jno
cmp
push
jnp
fcomp
xor
or
rol
jns
fld
rol
fcomi
pop
add
mov
sub
jmp
or
(bad)
pop
pop
loope
jne
cld
dec
ds
repz
xchg
fstp
pop
fdivr
loop
repz
shr
push
shl
jae
push
or
psllq
sbb
adc
test
inc
das
push
repnz
es
pop
push
stos
(bad)
push
cmc
je
adc
aas
mov
out
into
int3
mov
mov
jno
pop
lock
xor
dec
pushf
pop
jns
test
xor
aam
add
sbb
aas
leave
pop
sub
stos
push
(bad)
pop
and
add
push
mov
aas
push
sub
inc
jnp
adc
hlt
mov
jmp
mov
push
pop
mov
test
adc
sbb
fidiv
ja
aas
mov
fdivr
pop
xlat
fist
lds
mov
xchg
in
addr16
in
jecxz
fcomp
jns
or
les
cmp
retf
dec
dec
or
or
cmc
push
mov
addr16
mov
in
ficom
cmp
adc
shr
mov
cmp
xor
ins
sub
lahf
push
or
mov
sub
jg
and
jl
sbb
jmp
shr
add
xchg
xchg
(bad)
stos
mov
jg
push
call
cmp
dec
cwde
ds
pop
icebp
xor
cmp
gs
in
push
xor
lahf
mov
cmp
mov
and
clc
dec
rdseed
inc
fst
inc
clc
sbb
adc
imul
add
cmp
adc
sub
je
ss
lahf
xchg
sahf
and
jo
das
dec
lock
cmp
sub
push
aad
out
add
sti
xor
ltr
sbb
js
xchg
xchg
xor
xchg
arpl
pushf
outs
and
pop
ja
adc
push
push
adc
push
dec
and
xchg
cmps
push
(bad)
jle
cmp
pop
add
mov
xchg
ins
test
jne
mov
or
push
fist
pop
mov
sbb
and
xor
or
pop
pop
(bad)
cmp
cmps
sar
add
dec
sub
fidiv
pushf
lahf
push
pop
jbe
sbb
jnp
jo
cmp
leave
into
pop
cmps
mul
add
jmp
or
stc
adc
mov
adc
(bad)
xchg
jmp
pop
sub
inc
and
push
ja
shl
add
sub
adc
xchg
sahf
(bad)
inc
cs
(bad)
pop
(bad)
fimul
stos
pop
mov
imul
call
xchg
nop
hlt
lahf
jb
stc
sub
sbb
dec
pushf
ret
pop
ins
push
or
xchg
dec
cs
inc
mov
pop
movs
adc
push
fst
ret
leave
iret
dec
mov
loopne
pop
xchg
cmps
xlat
mov
ins
pop
xchg
(bad)
imul
mov
test
xlat
scas
fldcw
daa
dec
lods
push
int3
pushf
xchg
lock
sbb
cli
mov
das
adc
dec
(bad)
cmps
out
dec
out
push
jge
dec
pop
pop
sar
xor
sbb
adc
in
jle
inc
jb
cmps
adc
cli
xchg
xchg
ja
mov
or
or
(bad)
xchg
jecxz
push
jle
mov
cmp
std
call
(bad)
jnp
mov
fcom
imul
sbb
outs
in
push
fnstcw
fnstenv
jl
mov
das
adc
and
inc
xor
push
sbb
popf
and
aaa
jecxz
push
pop
test
test
jne
sbb
sti
mov
pcmpeqw
inc
imul
jg
pop
mov
into
pop
movs
push
movs
sub
outs
bound
sub
jmp
jge
popa
fistp
repnz
adc
xchg
xchg
sub
sbb
pusha
arpl
or
inc
(bad)
adc
sbb
mov
mov
mov
mov
test
arpl
adc
adc
ret
popf
test
jl
mov
mov
adc
mov
aam
mov
dec
popf
mov
mov
push
out
sub
inc
pop
fcomp
push
movsx
jae
jbe
out
les
test
(bad)
push
(bad)
push
pop
fstp
jmp
cmps
mov
push
bnd
or
sub
in
mov
sti
pop
cmp
mov
mov
lods
jbe
shr
cmc
mov
aaa
cmp
inc
mov
push
sahf
sbb
in
push
pop
mov
xchg
add
push
push
add
hlt
adc
test
or
pop
push
movs
mov
fild
fucomip
enter
(bad)
jle
add
scas
stc
in
dec
das
cmp
sbb
inc
dec
xchg
outs
loop
mov
cmps
mov
jl
inc
loop
xchg
ds
dec
mov
jle
mov
jmp
sbb
call
xchg
call
sar
or
cdq
mov
mov
int
mov
jmp
nop
pop
loope
sti
pop
push
or
push
xlat
or
xchg
in
xchg
shl
call
inc
ffree
lods
push
sbb
pop
xchg
push
push
icebp
aad
mov
mov
mov
jno
xor
jne
mov
or
in
rcl
cld
lods
clc
loopne
enter
cmps
ds
repnz
mov
iret
mov
push
inc
jp
fnop
sub
iret
sub
and
add
outs
push
icebp
cs
or
jo
jno
inc
lea
push
aam
nop
jo
pop
push
jp
inc
add
in
sbb
push
dec
inc
and
xchg
pop
daa
data16
fcomp
push
test
popf
cmps
dec
(bad)
test
dec
js
mul
imul
cmp
aas
jo
fadd
jae
sbb
ins
adc
cmps
imul
pop
ja
test
sbb
stos
xor
jmp
or
clc
scas
push
outs
and
scas
cmp
pop
adc
cmc
xor
xchg
jb
mov
fwait
loop
ret
mov
mov
cmp
xchg
mov
jae
cmps
adc
cmc
sbb
(bad)
mov
mov
sub
xchg
pop
inc
test
repnz
mov
push
shr
shr
out
cmp
fs
cmp
cmp
push
mov
test
dec
adc
iret
sbb
ins
adc
mov
int
ret
fbstp
jge
dec
retf
neg
adc
sbb
inc
lods
cmp
(bad)
int3
gs
(bad)
adc
in
inc
adc
mov
adc
xor
jmp
cmps
add
or
xor
fadd
dec
into
repz
stos
lock
mov
sti
xlat
arpl
mov
enter
cmp
pusha
cs
rcl
mov
repz
or
pop
push
fcmove
inc
call
cmp
mov
or
les
repz
imul
jg
popf
aas
shr
in
jo
xchg
cmp
pusha
out
inc
popf
or
push
rol
fbld
in
shl
scas
mov
fld
out
mov
jecxz
jnp
(bad)
lahf
dec
sbb
mov
pop
mov
(bad)
(bad)
cmp
push
sbb
cdq
sub
enter
sahf
mov
cmp
out
mov
or
out
addr16
movs
cs
sbb
pusha
inc
xlat
movs
pop
(bad)
lods
dec
push
fs
jmp
inc
(bad)
cmc
sbb
loop
loopne
and
xchg
mov
mov
pop
adc
sar
push
sahf
inc
jnp
cmp
(bad)
xlat
outs
test
sbb
xchg
push
dec
mov
pop
jmp
inc
pop
sbb
sbb
mov
mov
xor
int3
aam
fnstenv
stos
xchg
out
ja
aad
ss
(bad)
adc
xor
jg
jmp
mov
dec
jecxz
ds
mov
fisttp
and
mov
dec
jbe
nop
(bad)
into
retf
dec
es
arpl
pop
out
and
dec
dec
jnp
sub
lds
aas
push
in
push
fsub
int3
stc
loope
xchg
jge
or
or
cmp
imul
pushf
mov
dec
pop
shl
mov
sub
out
mov
out
adc
outs
mov
ds
call
mov
sbb
jo
in
(bad)
out
outs
nop
dec
push
xor
or
loopne
add
frstor
cdq
add
or
test
mov
stc
pop
icebp
adc
lods
call
cmp
jb
push
in
cmp
clc
nop
push
test
mov
cmps
pop
and
sbb
aaa
aaa
sub
ror
or
or
shl
sub
mov
stc
pop
inc
mov
mov
int3
arpl
outs
mov
repz
out
leave
sub
sub
jmp
sar
inc
lea
xchg
push
and
mov
es
cmps
shl
cdq
inc
icebp
enter
mov
or
inc
mov
jle
(bad)
jl
cmp
pop
cwde
inc
mov
pop
bound
push
jle
adc
fild
xchg
cmc
dec
jle
add
enter
xor
hlt
inc
and
fmul
rol
xor
(bad)
outs
test
push
cmps
jbe
repnz
sub
mov
outs
cwde
shr
mov
mov
mov
mov
fnstcw
movs
imul
or
(bad)
jle
dec
inc
pop
mov
xchg
mov
mov
xchg
ja
in
jno
jnp
in
lahf
jae
pusha
pop
jmp
ror
mov
pop
sbb
push
and
imul
mov
loope
jl
xchg
jns
pop
mov
mov
mov
cmp
imul
mov
aaa
pop
sahf
mov
mov
adc
jmp
rcr
ja
fsub
call
shl
or
jae
push
sti
out
cdq
mov
mov
push
push
ret
inc
aaa
cmp
xor
sub
push
data16
push
sub
or
cmps
in
call
and
mov
adc
test
retf
cmps
add
inc
jae
ret
fldcw
adc
mov
fbstp
cmp
not
aaa
scas
push
xlat
fsub
mov
(bad)
call
int3
cld
movs
and
push
dec
mul
mov
popa
xor
mov
call
mov
pusha
bnd
outs
leave
adc
(bad)
outs
cmps
outs
mov
js
xchg
pop
jno
jno
sti
dec
xchg
iret
mov
(bad)
jne
adc
jle
lods
aad
lahf
pop
inc
adc
inc
sbb
hlt
pop
jbe
aad
sub
jbe
add
dec
adc
mov
out
sub
sbb
test
shr
nop
jl
xor
inc
scas
(bad)
adc
add
or
ret
in
jecxz
jbe
sbb
cld
stos
mov
js
lods
jnp
push
cmp
jge
cmp
int
dec
pop
scas
mov
mov
push
int3
dec
mov
inc
jnp
call
push
or
pop
rcr
dec
out
sbb
hlt
ficom
ret
mov
mov
div
icebp
xor
addr16
mov
clc
mov
jae
jbe
out
inc
xchg
dec
sub
retf
cld
push
cli
mov
fstp
ss
fild
push
mov
loopne
push
inc
ret
pop
adc
xor
pushf
scas
call
ins
adc
cmp
ret
jae
retf
mov
(bad)
ficom
dec
lds
jno
inc
aaa
test
jge
fcomp
or
ds
push
repnz
nop
mov
dec
call
or
icebp
mov
repz
pop
(bad)
stos
xchg
push
mov
xlat
(bad)
xchg
sti
shl
call
fld
jo
dec
add
jmp
sbb
xor
test
xor
test
(bad)
fstp
mov
and
aad
push
mov
mov
xchg
loopne
icebp
xlat
or
xchg
mov
inc
adc
pop
cmc
lods
inc
scas
ret
mov
pop
fist
jb
in
adc
xchg
push
pop
out
or
dec
push
mov
jge
in
popf
sub
sub
ret
jo
ret
xchg
dec
xor
add
inc
adc
lods
mov
inc
dec
push
rcl
popa
fcomp
adc
outs
pop
(bad)
into
jmp
ss
mov
lods
inc
jb
cmp
sub
inc
xor
mov
mov
xor
pop
jmp
lea
sub
aad
dec
std
(bad)
nop
(bad)
addr16
gs
test
arpl
pop
jmp
xchg
mov
sub
lock
jp
stos
sub
fiadd
and
xchg
std
aaa
pop
push
xchg
xchg
or
jns
mov
xchg
into
enter
cmp
mov
pop
js
mov
mov
shl
jno
mov
stos
add
data16
xlat
popf
aam
jnp
stos
adc
test
adc
int
mov
add
jecxz
fldcw
pop
jmp
cmp
cmc
pop
jmp
dec
imul
push
or
loopne
xor
movs
ret
retf
cli
movs
outs
daa
pushf
and
movs
mov
jns
nop
sub
xlat
das
pushf
loopne
fsubrp
or
add
repnz
xchg
in
ins
dec
jns
xor
sbb
dec
aad
mov
(bad)
mov
push
dec
clc
sbb
sahf
adc
cdq
cmp
dec
mov
in
jae
sub
sbb
loop
mov
outs
xchg
nop
xchg
ss
inc
call
pusha
pusha
aas
add
xor
test
jbe
or
cmp
and
mov
repz
jge
inc
xor
jg
add
lds
add
repz
scas
xchg
in
sbb
gs
mov
out
imul
cmp
int
fcom
cdq
dec
in
enter
xor
movs
xor
jle
adc
imul
push
mov
push
lods
cmp
in
or
pop
lock
enter
or
jmp
xor
pop
aaa
mov
mov
jo
movs
jmp
sbb
call
fs
sub
into
sti
pop
sbb
dec
adc
xchg
cmc
xor
imul
jl
fsub
jg
jnp
sbb
sahf
lods
pop
sub
sub
(bad)
(bad)
in
mov
retf
and
add
cmp
(bad)
and
popf
add
jno
mov
jb
ss
iret
leave
pop
div
in
div
(bad)
fwait
dec
addr16
mov
cdq
mov
dec
sub
pop
mov
test
fs
push
aad
out
or
push
sub
or
and
adc
dec
xchg
shl
(bad)
(bad)
out
pop
mov
js
xor
retf
rol
or
and
stos
movs
ret
and
scas
mov
imul
jle
in
(bad)
fnstsw
mov
cmp
stc
sbb
ja
emms
and
cs
xchg
das
xchg
or
std
mov
dec
lds
mov
fstp
mov
push
push
ins
and
inc
pop
jmp
ins
int
ss
aaa
sub
loop
std
adc
mov
and
mov
ds
mov
xor
mov
pop
dec
and
dec
and
cmp
or
pop
cmp
into
pop
jo
cmp
cwde
xchg
(bad)
mov
xchg
cmp
inc
scas
xchg
jno
jno
mov
jp
(bad)
rcr
mov
sub
mov
sbb
ja
bound
(bad)
cmp
push
jp
into
push
or
add
cmp
loope
(bad)
fdivr
xchg
xor
cmps
cmp
cmp
pop
lock
into
lds
and
gs
in
pop
leave
es
xchg
jp
dec
and
adc
jmp
mov
adc
mov
or
xchg
loop
inc
xchg
out
mov
and
lods
pop
movs
(bad)
scas
js
xor
(bad)
mov
popa
push
cld
inc
push
lea
daa
cs
mov
or
push
into
xchg
(bad)
and
std
cmp
nop
cmp
jo
inc
scas
and
mov
jb
mov
cdq
add
pusha
std
inc
or
jp
add
cmp
in
fnstenv
loop
mov
(bad)
or
fwait
call
add
cmp
jbe
xchg
fcom
push
mov
jae
outs
jmp
dec
les
sbb
cs
ds
test
xchg
jg
les
push
retf
inc
cmp
popa
xor
inc
fisttp
cmp
call
cmp
fsqrt
sti
or
lock
inc
xchg
or
dec
das
adc
nop
into
add
mov
mov
cmp
ret
jns
and
ins
mov
xchg
ss
cmps
push
pop
retf
mov
cmp
xor
cdq
fwait
jl
lea
cs
inc
movs
ret
outs
pusha
mov
fwait
nop
push
sub
cmp
js
sbb
pop
inc
je
mov
and
in
dec
aas
out
inc
xchg
sbb
sbb
and
retf
out
out
push
ins
mov
aaa
push
scas
das
data16
clc
and
mov
ss
jmp
push
das
fs
cmp
dec
adc
or
mov
xchg
hlt
(bad)
mov
iret
pop
or
cs
dec
sub
lods
cmps
mov
xor
loope
clc
call
inc
sub
push
ret
and
ror
fwait
and
mov
sahf
dec
xchg
test
cmp
lahf
pop
addr16
call
enter
test
or
and
cmp
push
or
stos
jge
call
or
xchg
movs
in
(bad)
fdivr
pop
arpl
leave
cmc
xor
out
sbb
add
and
inc
into
mov
add
ja
push
xchg
in
ja
adc
rol
jbe
in
ror
cmc
lahf
add
sti
xchg
test
sti
mov
xor
stos
gs
pop
je
pushf
inc
test
cs
push
loope
pop
daa
call
hlt
mov
mov
xchg
or
ret
sbb
mov
popf
ins
rcl
in
ins
fstp
rcl
jl
scas
push
mov
sub
or
xlat
icebp
bound
cmp
sub
adc
mov
cmp
adc
push
cdq
xor
xchg
inc
into
cs
sahf
imul
sbb
mov
ins
icebp
xchg
mov
mov
neg
add
into
leave
repnz
add
cmp
xor
rcr
pop
push
hlt
cmp
gs
sahf
mov
or
xchg
add
xor
arpl
movs
jle
push
test
mov
out
std
jp
or
mov
pushf
ins
cmp
out
test
leave
xchg
pushf
sub
or
sbb
jb
inc
add
jp
xchg
pop
and
lods
mov
cdq
cmp
pop
dec
add
(bad)
clc
sti
push
movd
fadd
and
dec
xor
mov
dec
inc
loope
movs
clc
inc
sbb
repz
push
addr16
loop
xchg
out
fisub
data16
data16
jns
inc
fdivr
mov
call
push
push
xchg
out
sbb
push
mov
dec
and
pop
xchg
rcl
sub
xchg
out
or
idiv
pop
into
xchg
pop
mov
into
call
fiadd
mov
push
xor
push
jge
test
in
xor
mov
mov
inc
add
test
pop
xor
sub
mov
pop
imul
pop
mov
fs
mov
jbe
sbb
xchg
movs
test
cmp
mov
je
retf
ja
push
(bad)
jmp
enter
sbb
inc
loope
xchg
xor
icebp
or
and
sbb
cmp
adc
pop
rol
sbb
or
mov
xchg
ds
ins
mov
adc
dec
call
ficomp
test
lods
sar
ret
call
jp
mov
cli
call
test
xchg
push
mov
test
cs
test
repz
and
test
outs
or
pop
int
aad
mov
test
add
inc
(bad)
or
clc
ds
sub
std
mov
call
gs
shl
mov
(bad)
sub
inc
cmp
xchg
xchg
std
cs
xchg
jl
or
add
xchg
aaa
xchg
retf
sbb
sub
mov
lods
cmp
pop
add
and
jae
in
mov
sub
rcr
pop
inc
mov
inc
ds
jmp
xchg
xor
sub
js
adc
icebp
xor
sub
jecxz
popf
xchg
clc
or
push
(bad)
dec
aas
jbe
dec
cmp
in
push
dec
xchg
in
mov
xlat
push
jae
mov
stos
fisubr
lods
into
xchg
pop
sahf
(bad)
and
lds
out
mov
dec
or
mov
icebp
mov
movs
retf
repnz
stos
fimul
push
cmp
ins
pop
mov
out
addr16
imul
imul
icebp
shl
jns
stc
and
or
add
inc
xchg
cmp
test
sbb
stc
jo
(bad)
jbe
push
int
add
mov
cmp
inc
pop
and
loop
aad
scas
mov
in
mov
gs
xchg
loop
push
fisub
jge
das
add
cld
pop
sti
lahf
xchg
loope
fs
add
enter
mov
(bad)
fsubr
cmp
sbb
xchg
cmps
adc
pop
cdq
sub
push
pop
and
lods
in
or
mov
lods
cs
xchg
(bad)
addr16
jno
cmp
sbb
mov
ins
mov
mov
lds
pop
adc
outs
stos
dec
add
out
je
pop
ret
inc
call
cld
stos
imul
in
adc
bound
mov
(bad)
pop
xchg
clc
inc
out
in
sub
leave
test
fbstp
popa
adc
repnz
push
mov
in
nop
adc
jecxz
enter
push
mov
cmp
xchg
xlat
jmp
jecxz
push
fsubr
add
rcl
cld
fsubr
test
pop
sub
inc
mov
loopne
jmp
(bad)
pop
xlat
lods
dec
sahf
jmp
hlt
sub
push
mov
std
int
push
enter
cmps
sbb
out
sbb
and
aad
and
test
and
shl
cmp
mov
jnp
sar
vpminub
xlat
and
pop
(bad)
stos
push
push
inc
push
popf
push
mov
push
outs
sub
loopne
jecxz
arpl
adc
jle
shl
pop
mov
lods
jbe
xor
jge
in
xchg
fnstcw
mov
dec
mov
repz
loop
or
inc
xchg
daa
sbb
push
push
(bad)
dec
movs
call
cmp
mov
jne
test
mov
fdivr
or
imul
xor
lock
xchg
out
aad
lods
mov
sub
jmp
cmp
stc
mov
jns
scas
ins
pop
repz
not
xchg
dec
retf
cmp
sbb
mov
sbb
jecxz
mov
mov
out
in
ficomp
push
fist
sbb
cmp
adc
add
ffree
out
xchg
and
sbb
sub
repz
pop
jae
je
push
out
fs
mov
mov
repz
mov
push
fdivrp
mov
sahf
hlt
inc
fwait
sti
std
dec
sub
lock
inc
fisubr
adc
std
xor
jl
loopne
mov
test
adc
cmps
int
outs
ins
(bad)
(bad)
iret
scas
lea
cmp
dec
or
jae
fistp
pop
or
loop
add
loope
mov
lods
data16
lods
cli
lods
aad
cmp
jle
and
xlat
aas
mov
push
adc
mov
sbb
out
out
mov
fldcw
xor
repnz
gs
adc
adc
and
and
cmp
cmc
nop
xor
sbb
dec
mov
das
add
mov
dec
leave
add
je
movs
das
outs
jne
ror
daa
inc
icebp
(bad)
cmc
cmp
and
test
xor
movs
cld
lock
jg
loope
pop
xor
xor
cmp
dec
addr16
cwde
out
mov
or
mov
jbe
lods
sub
cmp
push
adc
aam
pop
adc
not
mov
xchg
aaa
push
mov
xchg
sahf
data16
neg
and
mov
or
jp
(bad)
not
dec
idiv
adc
mov
js
(bad)
int3
stos
aas
push
sbb
rcr
and
jne
mov
test
(bad)
dec
pop
jae
push
sbb
push
js
imul
fcmove
or
iret
mov
lahf
push
mov
pop
jo
icebp
(bad)
stos
aam
dec
pop
mov
(bad)
stc
sti
mov
mov
mov
mov
bound
pop
and
popf
dec
fst
add
js
test
pop
loop
or
mov
ds
inc
jmp
add
adc
sub
cmps
rcr
push
inc
int3
dec
jmp
and
loope
rol
ins
pop
pop
mov
sahf
add
jecxz
cmc
neg
das
jl
mov
jmp
js
out
mov
mov
ret
div
scas
gs
inc
sti
jne
mov
cmp
push
cmp
imul
mov
sbb
mov
push
adc
idiv
loop
(bad)
(bad)
xor
and
jl
sbb
push
or
imul
jmp
cmps
out
mov
mov
stos
jg
in
shl
mov
shl
mov
pop
inc
xor
push
cmp
inc
mov
sar
fnstsw
in
iret
pop
out
push
shl
xor
jge
lea
dec
mov
rcl
das
jb
movq
es
divps
add
xor
xchg
mov
or
push
gs
js
sub
push
mov
sub
cld
aad
(bad)
mov
inc
add
sub
adc
gs
inc
push
mov
mov
xchg
aaa
pop
sbb
xchg
stos
nop
ja
cmp
cmp
mov
(bad)
jecxz
(bad)
jae
inc
push
out
fs
or
test
cmc
(bad)
pop
cmc
fwait
out
mov
leave
adc
dec
add
mov
fs
sbb
fcom
and
popf
mov
daa
loop
das
ins
test
and
cld
xchg
(bad)
xor
xor
movs
popa
jp
xchg
lods
stc
adc
dec
ja
and
clc
mov
dec
nop
fs
xchg
movs
adc
jo
push
mov
inc
call
aad
cmps
and
push
and
pop
dec
cmc
sub
in
das
ret
sbb
xchg
in
xchg
push
stos
xor
les
sahf
cli
adc
imul
xchg
imul
sahf
aam
jne
aaa
adc
arpl
jp
mov
push
fimul
movs
sti
xor
mov
inc
cmp
rcl
and
cmps
dec
jae
mov
pop
add
cmp
sbb
xor
addr16
push
fdiv
movs
daa
or
pop
jne
or
(bad)
mov
das
stos
jmp
cmp
sub
call
xor
mov
lahf
xor
imul
js
mov
mov
or
popa
fxch
(bad)
pop
xor
gs
mov
jge
mov
mov
ins
and
add
push
sbb
jecxz
xor
jg
inc
movs
clc
xor
xor
adc
jae
gs
or
cmp
dec
retf
cdq
gs
xor
add
movs
mov
lods
ror
pop
adc
aam
mov
sbb
cld
push
in
sbb
mov
aad
repnz
xchg
pop
lea
shr
stos
arpl
xor
pop
cmps
(bad)
loop
mov
jbe
push
jns
add
adc
dec
adc
push
scas
or
cmps
ss
or
mov
imul
repnz
or
sbb
and
push
ins
pop
sub
lock
cmps
pushf
jecxz
xor
push
inc
xor
out
cli
stos
retw
icebp
mov
and
pop
add
or
dec
xor
sbb
loopne
mov
adc
push
and
push
popf
mov
retf
mov
out
mov
mov
jno
fcomp
dec
aaa
add
push
lahf
sbb
inc
outs
rol
xor
xor
xor
cmp
dec
lods
xor
test
(bad)
aad
repnz
mov
xchg
jae
repz
ss
popf
aad
or
outs
ins
fisttp
gs
sub
test
jmp
(bad)
sub
pop
das
push
(bad)
pop
adc
test
xor
jo
xchg
push
xor
daa
mov
data16
xor
loop
pop
repz
sahf
fist
scas
cld
push
fist
(bad)
es
pusha
xor
shl
test
lods
stos
mov
idiv
xor
inc
mov
mov
inc
xor
rcl
inc
sub
ins
ins
aaa
cdq
cmp
arpl
or
inc
fs
aam
jg
(bad)
loopne
icebp
bound
jns
cmc
cmp
inc
jbe
push
sbb
jnp
jb
sub
sub
fsub
bound
jno
int3
repz
mov
cmps
cmc
sti
retf
lods
mov
into
jne
pop
dec
add
pop
outs
sub
jnp
cmp
jne
mov
mov
das
add
popf
dec
enter
jno
das
sbb
dec
push
push
inc
(bad)
pop
inc
mov
out
icebp
call
mov
popf
adc
inc
dec
xor
pop
call
inc
stc
cdq
xchg
adc
into
imul
jg
ret
push
ins
fwait
dec
loope
stc
shl
and
shr
jo
add
pop
cdq
lahf
int
mov
fbld
call
dec
ins
lahf
push
dec
mov
nop
xchg
lahf
arpl
lea
jle
add
cmp
cmps
je
mov
scas
mov
cmp
mov
jge
test
adc
repnz
sar
ds
or
adc
mov
mov
or
cmp
in
sti
sbb
lds
das
jp
push
(bad)
xchg
xchg
jge
ret
adc
dec
fisttp
lock
mov
add
or
jbe
mov
mov
mov
jg
inc
pop
aaa
daa
inc
rcl
push
mov
and
push
jbe
addr16
neg
or
loope
mov
mov
jnp
loopne
(bad)
arpl
xor
sbb
icebp
pop
cmp
xchg
jb
pop
in
pop
adc
leave
sahf
mov
jns
dec
adc
jmp
ja
call
jbe
sbb
jle
push
test
cmp
test
stos
xor
fwait
loope
retf
add
pop
fs
push
das
xchg
test
mov
xor
or
mov
or
sub
test
push
loopne
xchg
into
shl
in
pop
mov
out
popa
adc
adc
or
mov
cmp
idiv
scas
cs
rcl
ja
les
mov
push
out
lods
(bad)
or
jmp
ja
(bad)
fdiv
in
rcr
cwde
mov
mov
pop
std
adc
mov
mov
hlt
sub
iret
add
cmps
pop
inc
ret
fmul
neg
push
ins
cmp
push
rol
(bad)
fisubr
popf
xor
and
cmp
out
adc
stc
test
pop
mov
push
sbb
loop
repnz
out
dec
adc
les
mov
dec
call
in
ret
push
test
and
inc
sub
dec
aaa
inc
(bad)
cmp
sbb
and
mov
nop
loope
mov
into
int
in
movs
xlat
fcom
lahf
imul
movs
lea
mov
scas
adc
jmp
(bad)
cs
mov
jecxz
stc
mov
xor
arpl
push
and
mov
rdmsr
adc
sub
pop
xor
sub
pop
xchg
sti
ror
je
mov
pop
and
pop
(bad)
pop
out
dec
pop
fsub
cld
(bad)
int
mov
(bad)
lea
push
adc
pop
bound
popf
push
adc
enter
mov
les
inc
jp
sbb
nop
push
ds
mov
nop
cmps
or
pop
js
movs
jmp
or
(bad)
pop
int
je
xor
in
jo
mov
add
mov
call
loopne
outs
push
mov
(bad)
cli
jl
sub
cmp
lods
scas
adc
fs
sub
scas
add
outs
movs
rol
dec
fcom
cmc
mov
mov
push
mov
mov
shl
int
psubusb
mov
sub
scas
cmc
mov
pop
ret
and
repnz
in
rcr
inc
aam
add
pop
jb
and
dec
mov
mov
shr
leave
clc
cmp
push
les
mov
mov
aas
mov
pop
outs
outs
and
fstp
mov
xor
and
lock
push
jmp
dec
and
aaa
add
imul
xor
cmc
mov
xor
jmp
sbb
push
sub
add
out
pop
ins
dec
cmp
out
scas
or
pop
pop
daa
ret
cld
imul
int3
mov
mov
mov
mov
push
xor
imul
scas
and
les
stc
xor
xchg
movs
neg
dec
leave
lods
clc
adc
in
js
ja
(bad)
mov
sbb
aas
fs
mov
jo
push
jns
mov
xchg
jae
mov
bswap
dec
mov
(bad)
pop
out
gs
das
fdivr
adc
ins
cmp
add
sub
ror
and
dec
inc
bound
popa
mov
ins
xor
push
iret
das
ss
out
stos
fwait
rcr
ret
ins
fsubr
mov
mov
cdq
adc
sbb
mov
inc
fs
popf
xchg
cmp
loop
jle
xor
loopne
and
and
je
cmps
push
sbb
cmp
adc
out
fadd
data16
movs
jle
(bad)
iret
fdiv
xchg
sbb
lahf
dec
and
jae
and
cld
popa
mov
stc
in
mov
fiadd
pop
mov
xchg
popa
jl
jl
mov
adc
je
fdivr
and
mov
mov
adc
mov
mov
jbe
repz
pop
into
xor
cmp
aad
test
jbe
popa
test
sub
push
shr
dec
push
adc
xchg
push
pop
push
mov
xchg
push
mov
mov
std
dec
ins
dec
scas
push
sub
lods
jmp
pop
out
inc
aaa
dec
push
xor
(bad)
jge
ins
out
lds
cdq
ret
lock
sahf
out
test
xrelease
out
lods
add
fsub
ss
jnp
xchg
out
inc
mov
sub
and
add
out
or
jmp
cdq
es
mov
repz
fnstenv
cdq
call
add
sbb
in
adc
pop
pop
mov
cmp
mov
sbb
mov
push
fild
xchg
stos
pop
arpl
mov
imul
aas
mov
or
ja
push
lock
in
into
push
das
call
into
push
mov
jp
jno
jg
mov
jae
cli
xchg
add
aad
shl
jne
(bad)
sbb
retf
jb
cs
aaa
push
rol
fs
ret
push
mov
je
jl
jno
push
(bad)
and
adc
sub
scas
arpl
xor
lods
daa
sub
int
adc
fadd
(bad)
aam
sub
movs
push
mov
mov
ror
sub
mov
(bad)
outs
cmp
push
mov
mov
inc
cmp
sub
aam
adc
popf
out
xor
xchg
loopne
jecxz
inc
mov
or
push
cmp
mov
mov
jnp
jmp
cmp
cs
stos
stc
push
call
lods
lock
clc
je
ins
imul
push
mov
xor
sbb
retf
(bad)
cwde
scas
and
mov
cmps
das
jae
adc
cmp
push
fcmovnu
jle
sub
jae
sub
loopne
and
mov
cmp
jnp
pop
es
inc
and
jns
xor
pop
and
push
jp
cs
fs
xchg
or
scas
sbb
aad
(bad)
jno
xlat
xor
cmps
fldln2
push
dec
cmp
dec
inc
das
ins
jp
rcr
stos
or
les
test
jg
sub
test
out
ins
lods
aam
sbb
xchg
cdq
daa
cwde
xchg
cwde
cmps
int
popa
cwde
shl
mov
lds
mov
xchg
xchg
cmp
bound
xchg
je
sub
lea
fld
xchg
mov
and
test
ficom
xor
out
loopne
std
outs
mov
push
jl
inc
(bad)
pop
inc
in
(bad)
aas
es
and
fldenv
aam
xor
dec
mov
pop
test
jge
mov
hlt
push
adc
adc
mov
mov
and
in
dec
jp
int3
nop
fstp
or
xor
lds
push
imul
icebp
sti
cmps
int
dec
sbb
adc
sub
jb
or
sti
mov
pop
icebp
movs
call
dec
xchg
adc
pop
jbe
pop
pop
mov
push
sub
clc
inc
xchg
pop
sbb
retf
xor
jno
pop
ficom
push
xor
dec
gs
mov
or
test
fisttp
jb
sbb
mov
aaa
rol
ins
add
xchg
sub
pop
adc
retf
mov
mov
test
mov
les
and
in
cmp
sub
mov
int3
add
add
add
pop
adc
rol
stos
popa
shr
sahf
test
add
jmp
sahf
inc
shl
dec
mov
and
ins
ins
add
call
and
jns
cmp
ins
dec
ror
scas
push
mov
repz
mov
push
fdiv
dec
dec
pop
cli
lods
push
(bad)
push
lock
call
data16
or
sbb
add
or
int3
dec
test
jns
xchg
jge
sub
xor
cli
stc
or
xchg
gs
xor
inc
popa
xor
pushf
mov
sbb
add
test
push
js
xchg
repnz
jmp
pushf
add
addr16
and
jmp
in
jne
jae
outs
push
xchg
fwait
inc
sub
sbb
or
pop
or
(bad)
scas
mov
push
mov
jg
in
add
xor
mov
mov
outs
pop
clc
xchg
adc
xor
into
and
mov
sub
(bad)
ja
xchg
jne
je
stos
ret
xor
pusha
fcmovnu
rcl
repnz
cli
push
adc
add
and
dec
fnsave
dec
pop
pusha
mov
call
jmp
xchg
lods
cli
stc
les
cwde
mov
fwait
movs
jne
mov
jae
ins
add
mov
jnp
cld
dec
and
xchg
lds
clc
pop
out
sbb
or
mov
jo
cmp
sub
jnp
shl
mov
xchg
(bad)
test
lock
mov
pop
mov
mov
and
loop
jmp
ror
scas
rol
sub
ins
js
or
icebp
and
imul
push
call
cld
inc
sbb
pop
mov
popf
inc
jnp
jns
stc
sbb
je
lds
cwde
push
les
mov
mov
cmc
jle
in
mov
xor
fnstenv
xor
(bad)
out
pop
ss
cmp
cmps
es
clc
push
push
idiv
repz
(bad)
gs
jo
aaa
dec
mov
sar
scas
jns
(bad)
push
sub
xor
or
test
into
cmps
pop
mov
mov
test
retf
pop
cmp
mov
push
fwait
ror
or
pop
and
daa
pop
jae
ja
enter
sub
lods
sub
je
cmps
loopne
mov
sbb
push
ss
fs
sub
mov
push
or
or
dec
jmp
ret
mov
cmp
mov
xchg
mov
loope
jbe
cs
(bad)
cmps
out
fidiv
dec
mov
or
push
mov
inc
fwait
in
inc
stc
hlt
bound
and
sar
adc
adc
jbe
and
iret
lahf
faddp
xor
cmp
in
ins
mov
dec
leave
mov
mov
push
(bad)
jmp
mov
mov
sar
hlt
imul
cdq
push
jae
ja
rcl
cmps
movs
jg
mov
mov
iret
jg
ins
sub
inc
pusha
add
mov
fst
dec
xchg
aas
cmp
inc
pop
push
dec
fist
mov
push
pop
sub
push
rol
push
jns
push
xlat
dec
sbb
or
dec
enter
fwait
dec
ins
out
adc
add
retf
test
jl
push
std
lock
cmp
imul
or
in
data16
mov
inc
mov
repnz
sbb
and
jnp
mov
lods
inc
jmp
outs
push
loop
or
clc
je
dec
test
mov
mov
retf
xchg
push
mov
or
outs
out
hlt
or
sub
xchg
aam
push
xchg
loop
cmp
clc
push
test
shr
test
leave
daa
rcl
mov
mov
jns
xor
inc
shl
jnp
retf
mov
std
cmp
sub
fwait
shl
and
stos
push
dec
mov
sbb
dec
dec
adc
int3
xchg
dec
(bad)
cmps
stos
push
xor
pop
idiv
repnz
das
push
sbb
mov
repz
mov
hlt
pushf
pusha
jg
cld
inc
cmp
stc
sub
adc
jnp
sbb
mov
bound
push
shr
loop
mov
fwait
lahf
adc
pop
arpl
adc
imul
sub
dec
jo
xchg
mov
push
(bad)
jo
sub
mov
ja
inc
mov
add
lds
rol
jmp
inc
aad
pop
cmp
mov
push
movs
inc
fwait
xchg
cld
mov
dec
mov
mov
xchg
or
and
xor
inc
dec
mov
push
std
iret
repnz
jle
xor
adc
int
adc
clc
mov
nop
js
cwde
outs
xchg
xor
jle
mov
mov
xchg
inc
ret
shr
jg
enter
jno
mov
in
sub
rol
fnstsw
push
add
mov
stc
or
retf
cmc
mov
movs
iret
xor
fmul
cmp
and
mov
lock
pop
fldcw
mov
mov
xchg
daa
dec
dec
sar
xchg
inc
cmp
xchg
push
or
(bad)
fbstp
ins
or
mov
xchg
(bad)
jmp
ja
sub
outs
jge
into
out
ja
aaa
movs
jg
cmc
lods
idiv
cmp
sbb
je
sysexit
cmp
push
int3
inc
outs
test
addr16
jmp
sbb
daa
in
daa
scas
dec
pop
fisttp
shl
add
test
lds
ins
add
xchg
mov
iret
mov
sub
(bad)
cs
and
neg
div
xchg
(bad)
fbstp
and
stos
mov
push
retf
push
push
mov
sar
into
mov
cmps
cmps
sbb
fldenv
xor
xchg
mov
xlat
repz
pop
mov
adc
stos
or
iret
movs
mov
(bad)
repz
or
dec
ja
push
jmp
into
push
gs
enter
jmp
pop
jge
stos
das
ja
repnz
test
jge
iret
inc
shl
sbb
in
ror
pop
sbb
xor
mov
and
loop
dec
or
mov
inc
jle
lods
sahf
mov
add
fs
js
adc
das
int
cmp
fld
in
jnp
out
fisttp
ret
fdivr
mov
aam
add
shr
push
test
aaa
(bad)
popa
les
stc
shr
and
jle
mov
adc
push
pusha
cli
jecxz
push
int
aas
icebp
outs
popa
mov
jb
xchg
das
xchg
cli
jb
aas
sub
or
inc
ret
(bad)
fdiv
jbe
xchg
mov
outs
and
and
cmp
stos
jmp
das
cs
lods
dec
mov
int3
mov
cmps
mov
pop
ss
call
cmp
xchg
cmp
dec
stc
sbb
sub
(bad)
loopne
pop
add
jl
bound
push
jnp
sub
leave
or
and
mov
ror
(bad)
mov
sbb
pop
cmps
loope
jb
(bad)
push
add
(bad)
out
mov
js
and
movs
add
call
jp
add
push
int3
iret
jecxz
shl
movs
mov
(bad)
jge
stos
retf
mov
push
jp
jbe
adc
jb
int3
test
mov
out
mov
jns
lods
repnz
sub
das
cmp
dec
fwait
ins
cld
push
pop
dec
data16
enter
ins
pop
jecxz
inc
push
nop
sub
fwait
in
stos
dec
aaa
pusha
psubusw
es
pop
mov
cmp
jg
and
pop
xlat
adc
outs
cmp
add
dec
je
adc
in
push
ins
dec
dec
cmps
adc
add
push
dec
retf
shr
retf
cli
(bad)
push
and
repnz
ffreep
and
push
xor
add
stc
repnz
cmp
add
ror
(bad)
mov
jne
dec
sub
or
in
ins
inc
jmp
test
out
and
in
xor
sub
pop
repz
pop
sbb
fcomp
dec
jbe
cmp
ret
repnz
inc
sub
js
ss
fld
push
mov
int
add
pop
movs
fidivr
and
sbb
retf
mov
out
setne
std
pusha
sub
div
adc
aaa
int
data16
ror
retf
mov
(bad)
xchg
(bad)
(bad)
push
pop
test
cld
adc
sbb
cmps
adc
inc
dec
and
ja
sub
jge
inc
jl
inc
pushf
push
mov
mov
aam
or
mov
loope
fwait
aam
sbb
lea
lds
adc
sub
dec
(bad)
pop
cmp
mov
(bad)
jmp
fsubr
push
mov
cmps
and
push
clc
or
dec
(bad)
cdq
cwde
shr
out
push
push
in
xor
pushf
lods
cmp
cmp
inc
out
mov
and
jbe
arpl
pop
push
pop
xchg
or
rol
inc
js
sub
sub
imul
out
call
out
icebp
mov
test
fsubp
je
and
push
xor
(bad)
dec
ds
popf
xor
call
jo
push
mov
add
js
jmp
movs
mov
push
push
fst
adc
xor
push
shr
or
mov
ins
or
and
shl
test
inc
leave
(bad)
push
repnz
dec
repnz
dec
out
add
pusha
imul
and
icebp
jg
gs
cmp
adc
xor
adc
or
xor
pop
mov
lds
movs
aad
or
jb
stos
inc
push
cmp
jmp
js
enter
hlt
push
jp
jle
test
cmp
xlat
loop
mov
shl
(bad)
jl
ins
push
cmps
fidivr
pop
jg
call
mov
out
add
push
and
scas
std
push
mov
inc
iret
dec
pop
mov
xchg
int
mov
pop
pusha
call
fstp
sub
xchg
leave
fcom
movs
jnp
cmp
retf
fidiv
mov
adc
and
add
ror
cmp
jge
jl
test
and
stc
out
sti
sbb
out
adc
outs
mov
and
cmp
push
dec
sbb
cmp
add
mov
pop
add
mov
xchg
sbb
mov
sahf
shl
and
call
aaa
mov
push
pop
push
ficomp
lock
call
scas
mov
add
sub
shl
out
mov
cmp
lahf
stc
jb
std
repnz
ficom
(bad)
jg
and
xor
adc
dec
mov
jge
fild
es
stos
in
shr
jle
pop
mov
ins
and
cmp
sub
aad
out
mov
cli
loope
retf
xor
pop
pop
nop
sub
dec
lahf
dec
retf
adc
int3
push
push
icebp
popf
mov
xchg
test
es
movs
add
nop
sar
xchg
bnd
inc
pop
(bad)
dec
(bad)
call
movs
(bad)
and
(bad)
shl
jno
push
jecxz
out
lds
pop
push
cli
icebp
aad
or
ins
push
ret
ds
mov
fwait
mov
retf
sub
lahf
out
aad
sub
int3
jge
or
gs
stc
sbb
into
sbb
pop
fcmovnu
mov
mov
outs
sbb
xor
pextrw
mov
pop
pop
sbb
mov
out
(bad)
out
into
xchg
fucom
push
out
div
retf
(bad)
xchg
or
mov
rol
pop
mov
jb
jno
pop
xor
adc
fimul
xchg
xor
push
arpl
xchg
sbb
sbb
add
sbb
or
js
aam
sbb
imul
xchg
cmp
cmp
sbb
imul
or
ds
or
(bad)
mov
retf
xor
xchg
test
lds
jle
mov
int3
adc
ret
cdq
inc
fidiv
mov
push
data16
into
sahf
lock
into
mov
sbb
sbb
mov
pop
mov
lods
lahf
ret
cmpps
(bad)
xor
sub
sbb
sub
jge
adc
mov
mov
mov
in
push
mov
ins
iret
aas
mov
mov
sbb
mov
mov
inc
fnstcw
push
mov
cmps
out
cs
cmp
push
push
jmp
mov
add
iret
mov
and
dec
adc
sbb
outs
sahf
mov
dec
cwde
rcl
sbb
sahf
mov
and
dec
push
push
adc
sub
mov
test
sub
aaa
jb
jl
in
adc
iret
dec
add
sar
lahf
or
mov
aaa
popa
and
je
xchg
pusha
xchg
mov
cmc
ja
jae
test
je
xchg
sbb
in
ja
dec
xchg
push
push
cmp
ja
cmp
int3
inc
xor
sub
xchg
enter
mov
mov
sub
jb
ds
xchg
xor
xchg
mov
(bad)
in
add
lods
jbe
fldln2
jo
jmp
xor
inc
mov
or
dec
add
sub
mov
inc
inc
xchg
adc
pop
dec
loop
xchg
inc
das
popf
retf
jecxz
and
pop
bound
mov
inc
sbb
sub
xchg
data16
inc
test
lahf
jb
shl
push
outs
repz
pop
inc
xchg
int3
xchg
xchg
mov
adc
in
arpl
cmps
inc
enter
mov
imul
jno
mov
xchg
mov
out
lea
hlt
ficomp
adc
lahf
loope
cmp
cwde
mov
mov
fisubr
(bad)
sar
sub
sub
sub
jmp
(bad)
pop
(bad)
loop
xchg
fsub
mov
xor
pop
sub
add
pushf
mov
cmp
and
inc
jle
das
ins
or
test
add
mov
(bad)
push
fmul
mov
inc
ret
pop
ja
packsswb
mov
push
add
fcomip
rcr
pop
adc
add
jne
popf
out
pop
jecxz
stos
mov
pop
jmp
pop
sub
adc
stos
mov
clc
sahf
sti
mov
and
ja
cdq
pushf
out
out
ret
xchg
push
in
adc
in
je
and
mov
rcl
sbb
and
fidiv
push
mov
or
sub
test
xchg
inc
or
fwait
mov
int3
mov
fdivr
mov
mov
mov
pop
jb
cwde
cmps
and
push
and
mov
fdiv
jne
ss
pop
pop
inc
clc
cld
mov
jb
cmp
pop
inc
pop
jp
inc
jne
fistp
pop
push
inc
cmp
aad
jno
daa
pop
xchg
dec
adc
ins
inc
dec
push
pop
mov
in
add
lock
shl
mov
and
or
sbb
stos
dec
xchg
push
adc
mov
mov
addr16
and
pop
cmp
xor
push
inc
add
push
inc
lods
sbb
pop
push
mov
cwde
push
cmp
push
jg
cld
cwde
es
ss
jmp
lock
cmps
lods
sbb
adc
mov
lods
xchg
and
in
hlt
pushf
arpl
aas
les
dec
jl
jns
add
or
and
cmp
mov
adc
rcl
addr16
pop
dec
and
mov
lods
dec
and
test
mov
ins
retf
imul
sbb
dec
outs
jmp
sub
push
mov
lods
iret
loope
inc
test
xchg
(bad)
daa
in
push
mov
fs
out
mov
loope
retf
fmul
mov
sbb
cmps
jl
sar
test
in
push
sahf
cld
call
adc
pop
test
out
scas
leave
aad
cvtps2pi
push
mov
mov
xor
aas
push
cmp
inc
jg
out
stos
xchg
mov
push
jae
popa
sahf
mov
dec
scas
loope
sub
xor
mov
pop
nop
js
pop
adc
call
movs
sar
mov
xor
or
arpl
sub
adc
aas
mov
xor
outs
xor
push
test
bound
adc
gs
pop
pop
xchg
cmp
lahf
adc
dec
jmp
movs
mov
push
ins
cmc
sahf
rcr
sar
leave
inc
retf
mov
sub
push
retf
loopne
(bad)
lds
sahf
test
xchg
mov
leave
imul
pushf
in
popf
pop
into
ficomp
xor
sbb
add
lea
mov
das
int3
mov
mov
pusha
movs
shl
lods
movs
nop
jne
mov
pusha
shl
ret
mov
lea
inc
in
lods
in
push
lahf
std
cmc
sbb
lods
push
add
xor
and
loope
(bad)
stc
xchg
cmps
xchg
cmc
adc
jne
sbb
xor
sbb
hlt
xor
call
mov
outs
mov
jno
xchg
mov
or
cmc
mov
imul
pusha
(bad)
dec
(bad)
or
push
imul
lods
sbb
mov
pop
add
mov
xchg
mov
int3
xchg
or
ins
xor
fwait
inc
gs
inc
repz
mov
mov
lea
adc
cmc
mov
vphaddbw
mov
in
fwait
dec
aas
jmp
inc
lds
enter
adc
jecxz
repz
jg
mul
pop
cmc
test
mov
(bad)
push
les
inc
xchg
ds
push
pop
pop
cs
sbb
imul
in
sbb
inc
outs
cmc
leave
push
mov
and
xor
xor
fst
dec
add
cmp
sub
out
mov
adc
pop
jne
push
push
int3
xchg
and
fucomp
or
or
lods
scas
xlat
js
aas
adc
xchg
mov
and
outs
cmp
fwait
pop
adc
aam
add
in
push
shl
inc
test
push
aam
add
pop
fdivr
inc
push
jns
test
push
mov
xchg
fnstenv
jbe
das
data16
mov
movs
mov
inc
add
(bad)
loop
sbb
dec
xchg
(bad)
out
test
push
sub
shr
adc
xlat
jbe
fwait
pop
in
into
and
ret
fwait
mov
cmps
iret
fisub
stos
rcr
jne
jns
pop
aad
push
fcmovnbe
mov
add
dec
fld1
xchg
mov
retf
jne
and
jmp
fiadd
cdq
sub
mov
jo
(bad)
jo
mov
repz
pop
xchg
xchg
movs
popf
sbb
cmps
mov
int
xchg
enter
mov
pop
xor
inc
mov
dec
jb
cld
dec
adc
leave
(bad)
mov
(bad)
xor
jne
mov
xor
mov
inc
sub
loop
jae
inc
xchg
setg
outs
sbb
fwait
js
pushf
stc
or
call
js
dec
cld
mov
jns
(bad)
sbb
mov
cmp
jnp
(bad)
into
lahf
sbb
cmp
jne
rol
jno
test
push
xor
into
(bad)
addr16
mov
inc
adc
jp
call
lods
xchg
pop
dec
aad
or
shr
jge
inc
mov
pop
xor
jnp
and
cs
repz
lock
(bad)
cld
jmp
fisub
pop
xchg
cmps
clc
cdq
push
pop
(bad)
jge
sbb
sbb
aas
sub
test
xchg
or
lock
aas
sahf
shl
stc
std
leave
or
push
dec
loopne
into
and
xchg
cli
(bad)
mov
bound
rol
lea
inc
and
mov
inc
xchg
lock
inc
push
xchg
jge
inc
jnp
adc
inc
and
ss
add
fwait
pop
pushf
shl
cmp
mov
or
arpl
and
stos
push
sub
js
xchg
adc
inc
scas
inc
into
pop
aad
and
scas
inc
jo
test
ja
test
jb
mov
lods
mov
call
repz
bound
pusha
mov
inc
aaa
xchg
pop
adc
addr16
or
repz
rcr
cdq
cdq
mov
pop
or
pop
inc
pushf
xor
lods
imul
addr16
mov
sbb
dec
mov
sbb
sahf
outs
inc
call
cli
xchg
mov
sub
arpl
sbb
(bad)
aad
mov
scas
xlat
dec
sahf
aas
mov
aad
and
scas
adc
hlt
mov
es
jmp
pop
js
fcmovu
aaa
or
and
repz
sti
enter
das
pop
inc
mov
pop
cmp
sub
cmps
xor
push
arpl
inc
sbb
push
(bad)
and
mov
push
push
repz
lds
dec
shl
sbb
sub
loopne
(bad)
std
into
repz
loopne
lahf
fiadd
std
in
gs
sbb
loopne
sub
je
jbe
jl
in
movs
movs
mov
stos
nop
mov
xor
fscale
std
bts
aas
mov
out
idiv
int3
movs
ror
xor
gs
test
or
(bad)
clc
inc
movs
call
aas
xchg
jle
and
push
dec
daa
(bad)
rcl
push
and
lods
push
shl
pop
fisubr
cwde
or
jp
es
sbb
xor
xlat
jne
lock
es
pop
add
sub
retf
int3
mov
jmp
(bad)
sub
shl
lods
setbe
retf
repnz
or
jae
add
fnstcw
inc
mov
sbb
jno
test
adc
jmp
(bad)
pushf
fstp
mov
or
inc
lods
je
sub
arpl
mov
add
clc
rcl
in
push
cmps
in
test
inc
pop
hlt
push
loop
pop
xor
or
in
cli
mov
pop
popf
dec
mov
xlat
sbb
jne
mov
pop
jno
in
fsub
mov
sar
repnz
jg
scas
ss
dec
jne
out
test
stos
sub
outs
jnp
ss
pop
xchg
and
popa
neg
inc
lods
je
mov
adc
cdq
xor
ja
jo
add
sub
mov
aas
push
pop
push
mov
in
loopne
and
jle
adc
test
iret
icebp
mov
jl
ins
push
push
mov
or
outs
sbb
cmps
push
sbb
fwait
mov
xlat
sbb
in
push
xchg
std
xor
aaa
push
mov
ror
lds
dec
inc
push
mov
jmp
sahf
inc
jmp
add
(bad)
enter
test
call
mov
dec
outs
aad
stc
or
inc
xor
test
iret
fstp
dec
push
mov
shl
xchg
mov
mov
inc
mov
and
or
mov
xchg
lods
shl
fcomp
ins
mov
cmc
lock
(bad)
pop
mov
jns
inc
xchg
push
cwde
pop
(bad)
pop
jbe
and
jecxz
inc
(bad)
sub
mov
test
dec
sub
mov
daa
dec
loope
push
std
(bad)
(bad)
ins
shl
and
inc
shr
mov
add
dec
adc
jne
push
inc
dec
jg
enter
mov
enter
sbb
pop
fwait
iret
or
xor
jge
ss
arpl
jae
movs
aam
mov
lea
push
pop
or
jae
sbb
lods
pusha
in
rol
jbe
imul
xlat
mov
ror
test
mov
xchg
call
int
imul
cs
lods
xchg
mov
mov
dec
jle
adc
(bad)
ret
sub
call
sbb
sub
lea
(bad)
das
or
daa
loopne
add
aas
repnz
push
scas
push
not
jb
dec
sar
sub
mov
cs
cdq
jmp
fldcw
(bad)
ins
xor
or
push
mov
mov
xor
cmc
lahf
sbb
enter
aaa
jmp
jecxz
or
push
aas
pop
jmp
loope
cmc
xor
mov
xor
xchg
sub
mov
sub
popf
mov
mov
(bad)
fsubr
dec
scas
ins
sbb
push
dec
inc
mov
jge
fdiv
or
sar
(bad)
push
lea
xor
inc
ins
pop
mov
push
leave
popa
xchg
(bad)
push
shl
inc
jno
(bad)
shr
rcl
jmp
jne
movs
aad
in
push
scas
push
rol
mov
repz
jg
sub
mov
hlt
xor
inc
popf
mov
inc
pop
mov
ss
repz
test
pusha
mov
mov
cmps
adc
sub
test
adc
mov
enter
jecxz
or
inc
test
add
mov
arpl
lods
and
mov
ins
sub
inc
xchg
loope
not
push
sbb
jae
(bad)
es
inc
loopne
xchg
fwait
sar
loope
sub
xchg
fsubr
imul
sub
repz
add
dec
stc
mov
add
dec
push
jae
(bad)
leave
cmp
lock
rcr
dec
xchg
mov
pop
bnd
mov
test
lea
sub
pop
cmp
int3
lods
hlt
aad
(bad)
cdq
mov
cdq
sahf
mov
lea
inc
xchg
aam
cli
sub
pop
inc
lds
mov
(bad)
hlt
sbb
aaa
dec
test
cmp
imul
sbb
xor
lock
ss
xlat
int3
push
add
push
(bad)
sub
push
retf
cmp
leave
push
aas
hlt
jp
mov
(bad)
pusha
call
cdq
cmps
pushf
stc
icebp
cmps
add
xor
cld
fild
retf
push
dec
pop
popa
stos
ss
jbe
es
dec
mov
or
ss
inc
and
add
xor
sub
mov
push
sbb
xchg
and
jp
push
mov
sub
dec
push
inc
push
pop
dec
ins
(bad)
int3
sub
ror
mov
clc
rcl
cdq
lods
adc
mov
test
push
mov
mov
icebp
mov
lds
xchg
jnp
jle
jecxz
mov
sahf
push
jnp
pop
mov
jns
inc
loope
sti
dec
mov
sahf
push
push
aaa
mov
in
cmp
or
or
stos
or
ret
jno
mov
xor
xor
dec
pop
mov
imul
into
outs
or
cs
shl
adc
repnz
and
inc
sbb
push
xor
imul
shr
(bad)
or
retf
loop
mov
sub
fnstcw
mov
ret
pushf
mov
add
out
xchg
adc
inc
fcomip
shl
jmp
daa
mov
daa
cmp
das
pushf
das
xor
jp
loopne
int3
mov
cmp
xchg
imul
mov
idiv
stc
repz
mov
call
movs
cwde
jno
je
sbb
aad
cld
call
jp
scas
xchg
data16
dec
movs
sub
dec
cwde
add
jp
jns
fisttp
inc
cmp
std
jle
mov
mov
cld
rol
pop
mov
sbb
pop
imul
sbb
int
mov
repz
mov
(bad)
lods
and
imul
mov
stc
ins
cmp
jl
push
mov
cs
rcl
dec
mov
push
jb
dec
xlat
(bad)
stc
mov
add
cmps
inc
outs
xchg
neg
(bad)
pop
adc
xchg
mov
mov
xchg
and
call
into
sbb
aas
dec
jge
fbstp
mov
jmp
push
push
pop
mov
and
jno
ins
xchg
lea
fcmovnu
into
pop
cmc
imul
cmp
lods
mov
push
enter
arpl
lods
mov
sub
iret
inc
and
add
in
sub
pop
jo
sbb
fcmovnb
xchg
test
fstp
cmc
ror
sub
pop
mov
adc
stc
push
pop
ja
aas
fld
push
and
movs
sub
mov
jle
inc
pop
rcr
outs
jge
repnz
mov
cmp
(bad)
sti
mov
aas
push
dec
dec
sbb
ss
xchg
mov
imul
mov
mov
xchg
loop
hlt
test
pop
sub
cmps
mov
dec
add
std
aam
loop
repz
xor
sbb
push
les
(bad)
loop
jle
loope
imul
and
or
repnz
sbb
jmp
outs
shl
lds
cmp
mov
mov
jns
adc
pop
lock
stos
xor
movs
cmc
loope
or
mov
mov
xor
cmp
sbb
adc
mov
sbb
or
inc
or
mov
xor
call
scas
nop
call
lods
xor
dec
pop
shr
retf
add
jmp
stos
add
pop
mov
pop
inc
dec
aaa
jmp
loopne
jmp
retf
jb
sbb
test
sbb
cmovle
jno
pop
fisttp
fbstp
xor
and
pop
fs
jbe
cmp
aas
and
shl
gs
ins
inc
adc
push
or
adc
inc
inc
jmp
cwde
mov
arpl
inc
mov
test
xchg
les
pop
cmp
(bad)
test
dec
jg
bound
retf
jae
mov
mov
in
in
xchg
call
movs
call
ret
xchg
leave
lds
ror
lods
dec
mov
mov
fwait
arpl
xchg
xchg
mov
test
call
test
inc
imul
pop
fiadd
cmps
jmp
mov
fadd
cld
loop
scas
push
jmp
sbb
xchg
dec
xor
inc
outs
pusha
out
fimul
dec
add
mov
nop
sbb
rol
rcr
or
dec
aas
or
movs
inc
leave
je
lock
sub
jg
add
fsubr
jecxz
mov
and
in
or
pushf
dec
xlat
jb
adc
dec
sbb
ins
sub
or
out
jnp
mov
dec
inc
xchg
pop
or
push
push
or
ins
dec
ins
and
packsswb
push
push
xor
fdivr
adc
sub
jg
dec
mov
pop
loopne
dec
cli
dec
or
out
pop
je
cli
in
pop
jno
gs
mov
cli
adc
pop
jne
call
mov
xor
movs
and
shl
xchg
adc
mov
(bad)
loope
cmp
int
mov
les
sub
mov
push
cdq
inc
shl
movs
sbb
xor
push
iret
push
lahf
mov
xor
xor
repz
push
out
add
stos
mov
retf
scas
xchg
xchg
xchg
mov
lahf
push
cld
push
stos
aam
addr16
or
add
mov
mov
xchg
sub
push
imul
and
pop
fwait
ds
cdq
pop
js
adc
pop
fcomi
sub
jae
inc
pop
in
jmp
stc
sbb
mov
stc
jns
lds
jbe
inc
and
adc
jo
cwde
movs
lock
cdq
xor
add
repz
(bad)
fidiv
jae
cmp
dec
sbb
popa
pop
retf
pushf
mov
mov
dec
cmp
dec
cmps
in
inc
repnz
mov
call
inc
pop
xchg
fstp
hlt
inc
add
fs
xchg
mov
lock
or
dec
add
rol
jmp
sar
std
sub
sub
je
daa
add
mov
xlat
push
out
scas
add
out
call
inc
fs
xchg
movs
xchg
push
or
int
sub
rcr
mov
jae
ja
outs
mov
in
jne
loopne
test
mov
jo
pop
enter
outs
in
xor
xchg
sub
mov
jg
fwait
outs
push
cmpps
adc
and
out
jno
xor
pushf
out
push
inc
stos
push
mov
mov
cmp
xchg
jo
mov
jb
imul
(bad)
sbb
out
mov
fist
pop
sbb
movs
stos
sti
xchg
dec
fld
out
sbb
cmps
xor
fbld
cmp
push
lahf
mov
loopne
mov
pmaddwd
outs
mov
(bad)
jg
adc
pop
adc
sub
mov
cli
push
dec
jae
aas
mov
into
pop
mov
or
mov
lds
mov
das
rcr
test
add
mov
add
into
loopne
test
xchg
sahf
aas
jns
mov
test
(bad)
add
inc
sti
or
and
nop
out
mov
mov
in
push
imul
aas
xor
in
outs
pop
adc
rcl
jmp
pop
cmp
or
gs
fs
push
sub
inc
or
je
cmp
mov
sbb
and
mov
and
mov
add
mov
test
loopne
les
ins
aas
jl
jmp
inc
test
jne
mov
sahf
cmp
cmc
test
add
lods
bound
push
adc
and
push
mov
loope
pop
vpaddsw
jnp
scas
xchg
dec
test
fidiv
adc
shl
sbb
and
xchg
(bad)
mov
mov
(bad)
inc
out
fld
mov
cwde
inc
push
int3
jne
jb
popa
dec
outs
xor
xchg
pop
or
xchg
outs
ficomp
sub
and
repnz
in
or
inc
sbb
dec
mov
sbb
mov
repnz
test
add
sbb
mov
mov
mov
les
mov
add
xchg
mov
dec
xchg
inc
(bad)
in
push
jg
mov
nop
fisubr
enter
jle
repnz
cmp
mov
pop
idiv
push
inc
stos
sbb
int
ja
in
xlat
das
(bad)
js
add
xlat
mov
jle
xchg
jmp
dec
or
aad
mov
xchg
test
adc
sub
fnstsw
mov
idiv
add
in
xchg
or
dec
cmp
jp
mov
test
xor
outs
mov
xor
ret
rcl
xchg
or
dec
xchg
mov
pop
sub
vucomisd
ins
jbe
xor
rcl
int
xchg
or
xchg
call
out
dec
sar
sbb
push
jns
jg
fld
sub
fisttp
lds
lock
repz
xlat
popa
mul
sbb
ret
mov
xor
icebp
addr16
test
loopne
aas
ds
inc
xor
retf
ret
fisttp
and
lahf
retf
les
ins
outs
cmc
aas
lds
push
cmp
aam
pop
clc
loopne
jmp
jnp
sahf
adc
retf
(bad)
push
dec
mov
add
(bad)
call
stos
nop
xchg
cld
fcom
adc
xchg
lds
scas
data16
push
lea
pop
ins
loop
mov
xchg
push
stc
pop
call
pop
out
dec
jne
jle
mov
xchg
adc
je
cwde
mov
cmp
and
pop
ins
fist
pusha
xchg
fistp
and
jge
rol
jmp
inc
pop
repz
push
aam
stos
in
jge
imul
pop
jmp
push
in
call
paddusw
or
outs
inc
leave
xchg
or
inc
sbb
cmp
adc
cdq
cmp
jle
dec
sub
jmp
in
inc
test
dec
out
cmovo
push
scas
mov
jg
mov
loopne
out
loop
std
aaa
fsub
mov
out
inc
pusha
inc
das
pop
push
fisubr
mov
jg
frstor
clc
scas
loopne
test
std
(bad)
sbb
lea
je
arpl
jg
cmps
or
rcr
call
xor
sbb
retf
popa
add
jl
add
stc
lea
ss
xchg
(bad)
daa
jnp
sub
aam
test
movs
(bad)
or
in
outs
cmp
mov
ficomp
mov
fld
dec
mov
ja
sub
(bad)
dec
mov
repnz
repnz
shr
lea
jg
adc
adc
popf
mov
sub
in
mov
adc
dec
in
cli
pop
movs
mov
cmp
pop
and
push
loope
out
call
jmp
daa
gs
mov
jbe
js
mov
dec
mov
aaa
sar
jmp
pop
or
push
sbb
xor
adc
jmp
adc
inc
jge
cmp
and
jmp
push
int3
rol
out
sub
xchg
(bad)
shr
xchg
inc
ins
cmp
shr
jmp
pop
loop
sbb
xchg
mov
imul
dec
fisubr
push
add
mov
cmp
lods
cmp
dec
js
mov
(bad)
pusha
call
clc
ss
lahf
sbb
repnz
sbb
mov
pop
push
mov
dec
ins
int3
retf
jle
(bad)
xchg
jg
mov
mov
jbe
add
fisubr
xchg
pop
push
push
into
cld
xor
mov
sti
mov
jb
or
sahf
std
inc
div
mov
call
sar
xor
xor
pop
pop
xchg
mov
sbb
rcl
mov
pop
xchg
push
xor
jmp
fsubr
outs
or
in
gs
aam
sub
pop
mov
out
push
xor
ds
xor
fyl2x
imul
dec
and
ins
xchg
rep
adc
int
sub
shr
cmp
mov
cmp
outs
leave
mov
mov
fild
dec
out
cmps
popa
jp
out
lods
sbb
mov
push
retf
aas
xor
push
mov
mov
(bad)
les
cmp
popf
jp
ins
adc
mov
mov
sub
xchg
pushf
loopne
sub
outs
lods
pop
mov
and
xchg
xor
sbb
adc
test
xchg
mov
lock
mov
call
add
or
cmp
bound
push
adc
test
jg
and
neg
mov
pop
cmp
clc
mov
icebp
sbb
mov
mov
push
aaa
cmp
lahf
xor
xchg
aad
dec
mov
imul
and
fsubr
js
fiadd
inc
shl
inc
mov
ret
es
aam
xlat
stos
inc
push
stc
push
mov
scas
icebp
add
inc
sub
xor
das
sbb
sahf
scas
ss
xchg
cmp
cwde
icebp
enter
cmps
rcl
push
xor
pop
ret
out
and
push
fcmovb
rcl
or
fcmovnb
scas
ret
xor
into
or
cwde
add
mov
lea
in
repnz
dec
cmps
out
cmp
loope
(bad)
rol
test
mov
call
mov
out
inc
dec
adc
stos
xchg
xor
push
ftst
fmul
in
pop
push
mov
js
xor
sub
sub
cli
mov
adc
mov
pop
dec
nop
cmp
js
cmps
imul
mov
dec
(bad)
in
fcomp
in
stc
cwde
dec
or
sti
dec
jecxz
popf
mov
push
xchg
or
enter
loopne
les
rcr
loope
add
mov
lods
in
cld
jg
sub
sar
ret
fndisi(8087
mov
ss
aam
rcl
jbe
cli
mov
fisub
sti
push
outs
ror
pop
retf
mov
fs
mov
add
pop
fwait
xchg
mov
mov
mov
int
pop
push
mov
retf
(bad)
fimul
add
adc
lahf
sub
sub
xor
std
jge
cmps
adc
mov
jo
aas
jo
enter
stc
(bad)
out
bound
rcr
push
xor
movs
inc
push
or
mul
push
mov
sub
lahf
dec
push
arpl
xor
fld
xchg
or
call
dec
ror
add
fnstcw
mov
sbb
fcom
lea
adc
inc
hlt
push
lahf
jg
call
fld
rol
mov
fcmovnu
sbb
neg
or
mov
adc
into
stos
mov
jecxz
(bad)
push
cld
arpl
mov
pop
add
adc
shr
stos
or
aas
je
jns
add
push
sub
inc
ss
addr16
(bad)
dec
rol
sub
imul
jne
mov
inc
retf
call
or
aaa
pop
dec
push
sbb
fs
movs
daa
fstp
mov
(bad)
ss
sbb
cdq
pop
(bad)
or
fldenv
fimul
aas
jecxz
cmp
mov
xchg
push
fldcw
mov
cmp
sub
and
pusha
cmp
nop
jnp
fwait
dec
daa
lahf
or
hlt
xor
in
pop
sbb
adc
pop
inc
mov
and
xchg
jge
sbb
lock
stos
loope
lods
xchg
mov
arpl
adc
aaa
gs
das
sbb
inc
push
pop
lea
jo
ja
pop
pop
aam
or
and
inc
mov
push
jnp
sahf
cmp
pop
hlt
push
fs
das
in
push
dec
leave
push
adc
ins
sbb
push
stos
sub
sbb
js
adc
lock
cmps
mov
sbb
popf
jae
ins
xor
sbb
xor
add
dec
daa
mov
or
dec
repz
mov
xlat
in
imul
sbb
pop
js
in
inc
push
cmp
stos
sbb
pop
add
inc
or
or
out
cmp
or
mov
and
push
aas
push
inc
mov
aad
stos
ret
xor
xor
sbb
fcmove
into
xchg
fld
inc
imul
mov
imul
sub
stos
das
adc
(bad)
iret
pop
cdq
test
scas
adc
pop
loope
int
pop
ja
mov
jnp
pusha
popa
mov
cmps
rcl
mov
jae
mov
inc
fiadd
pop
sbb
push
add
test
das
enter
mov
stc
sub
jae
das
fld
lahf
mov
(bad)
jno
mov
nop
stos
das
jl
popf
in
cli
sti
stos
adc
loopne
stc
xchg
sub
xor
sub
mov
sub
and
push
add
push
(bad)
jns
mov
or
es
stos
outs
(bad)
cld
fsubr
inc
lods
push
or
shr
adc
cmps
enter
btc
add
sub
jle
pop
(bad)
arpl
jnp
fwait
fs
aas
cs
and
mov
sub
shl
sub
lds
adc
clc
das
(bad)
sub
ds
jmp
xchg
cmp
das
popa
ret
into
dec
js
shl
pop
hlt
hlt
mov
lea
dec
rcr
xchg
test
icebp
dec
cli
cli
inc
inc
jge
jne
ret
jae
(bad)
mov
mov
sahf
mov
stc
mov
ret
or
fsubr
outs
popa
dec
xor
cmp
stc
jmp
je
push
or
inc
mov
clc
inc
(bad)
fdivr
inc
sbb
dec
or
cmps
sub
push
addr16
in
cmc
ret
jo
arpl
push
mov
sbb
(bad)
mov
ins
in
jbe
mov
cmp
stc
retf
retf
push
fst
add
inc
pop
jb
out
mov
mov
lea
(bad)
es
or
enter
cmps
add
leave
add
repnz
adc
pusha
inc
mov
push
xor
test
les
sbb
push
jl
(bad)
jo
pusha
mov
sti
xchg
ret
push
xor
xchg
aam
add
adc
stos
and
or
mov
stos
add
xor
cmps
ja
ror
ins
inc
jo
test
nop
js
pushf
rcl
dec
xor
xchg
test
or
jb
outs
leave
imul
inc
cmp
cld
mov
mov
fidivr
aad
outs
push
pop
sub
repz
add
jno
sbb
mov
repnz
lea
dec
aas
enter
ffree
mov
nop
pop
out
cmp
cmp
pop
fnsave
inc
mov
retf
sbb
jo
bound
push
js
(bad)
daa
js
mov
xor
sbb
(bad)
movs
and
popa
push
fldcw
inc
sub
(bad)
push
dec
gs
adc
bound
cmp
stc
das
jg
jg
outs
dec
mov
aad
jo
cmp
sbb
int3
adc
gs
cmps
clc
push
rcl
and
js
pop
sar
(bad)
fisubr
idiv
outs
xchg
adc
jl
dec
mov
test
mov
xchg
aad
loope
jo
lock
fwait
xchg
pop
mov
popf
fwait
mov
push
retf
cld
add
xchg
push
into
ins
(bad)
xor
pop
xor
popf
cmp
jge
lods
stos
pop
lds
stc
in
sbb
add
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
add
pop
pop
ret
data16
push
mov
push
mov
mov
mov
cmp
sete
and
movzx
add
pop
ret
data16
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
mov
call
mov
mov
mov
sub
sub
mov
mov
mov
mov
mov
call
sub
mov
add
pop
ret
jmp
nop
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
sub
sub
mov
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
add
pop
pop
ret
jmp
nop
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
call
mov
mov
add
add
sub
mov
mov
jmp
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
call
add
pop
pop
ret
jmp
nop
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
call
mov
jmp
mov
mov
call
mov
jmp
add
pop
ret
jmp
nop
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
mov
call
sub
mov
add
pop
ret
jmp
nop
push
mov
sub
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
jmp
mov
add
pop
ret
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
call
lea
mov
mov
mov
mov
call
lea
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
call
sub
mov
jmp
mov
mov
mov
mov
call
sub
mov
jmp
add
pop
pop
pop
pop
ret
jmp
data16
push
mov
push
push
push
sub
mov
lea
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
add
pop
pop
pop
pop
ret
data16
push
mov
push
push
push
and
sub
jmp
call
jmp
push
jmp
push
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
stos
xor
dec
pop
add
aad
lea
adc
and
mov
mov
les
add
mov
stos
cli
inc
add
mov
mov
call
movs
add
call
shl
add
mov
and
call
mov
and
mov
stos
je
inc
add
push
int
sbb
rol
sub
dec
and
ficom
jmp
mov
cmp
inc
jg
jmp
mov
call
in
pop
and
jg
jmp
mov
and
sub
pop
aaa
and
psubw
mov
sub
aad
add
das
daa
adc
nop
in
les
xchg
inc
out
cmp
(bad)
jge
add
jmp
jg
and
sub
mov
jg
addr16
add
inc
and
lahf
aad
xchg
or
imul
add
jmp
mov
js
call
jo
add
jmp
mov
add
pop
jge
popf
mov
je
push
xor
add
inc
and
clc
pop
std
enter
and
paddb
div
dec
jmp
jbe
and
sub
test
sbb
add
jmp
das
daa
adc
sbb
mov
lds
dec
js
hlt
les
(bad)
pusha
push
xor
cmp
mov
loop
xor
add
mov
push
test
adc
sqrtps
xlat
movs
xchg
sbb
add
mov
sub
and
sahf
je
jmp
jmp
mov
mov
das
aaa
adc
aad
add
cmovne
mov
bound
js
(bad)
mov
pop
xchg
mov
add
pusha
mov
mov
mov
cmp
mov
mov
and
fistp
pop
out
fs
mov
sbb
aad
sbb
xchg
sbb
mov
cmp
lahf
add
push
and
xor
and
mov
mov
jmp
(bad)
js
or
sub
shr
add
hlt
mov
push
cdq
mov
call
mov
jmp
mov
and
mov
sub
in
inc
sar
ins
xor
aad
inc
inc
and
lea
mov
and
(bad)
dec
pop
inc
add
push
mov
push
push
push
and
sub
jmp
push
jmp
push
jmp
call
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
aaa
pop
dec
or
dec
and
mov
mov
mov
cmp
add
add
nop
add
mov
jmp
or
cmp
cmp
call
sub
sbb
push
pop
mov
adc
ins
mov
xchg
enter
jmp
mov
mov
bound
loop
ja
xlat
add
movs
cmove
sub
lock
dec
(bad)
inc
add
add
mov
sub
mov
nop
add
jmp
mov
dec
stos
pop
add
mov
and
mov
mov
inc
and
stc
xor
ja
ficom
lea
xchg
jmp
out
xchg
push
sub
mov
cmp
test
movs
test
mov
jae
inc
xchg
test
pop
cmp
add
inc
(bad)
xor
mov
xor
add
js
add
push
sub
out
xchg
mov
add
jmp
add
iret
jge
cmp
sub
std
jp
add
xchg
dec
add
pop
sub
clc
and
or
mov
pop
sub
cmp
ret
jg
add
add
mov
jmp
ja
inc
and
lahf
test
add
test
(bad)
ins
mov
add
fs
xor
shl
ja
icebp
and
cmp
cmp
pop
jmp
test
test
cwde
repnz
jl
sahf
ins
(bad)
ins
mov
mov
cmp
fwait
cmp
mov
cmp
faddp
call
and
out
(bad)
repz
inc
pop
sbb
and
stos
pop
jbe
mov
and
jge
add
(bad)
push
mov
lea
add
mov
mov
in
repz
pop
mov
movs
mov
sar
add
add
call
and
mov
lock
add
mov
ficom
add
add
pop
iret
scas
data16
std
(bad)
dec
pop
test
add
add
push
mov
push
push
push
and
sub
push
jmp
call
jmp
push
ret
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
aas
mov
nop
inc
inc
mov
ret
pop
mov
cld
dec
(bad)
xchg
mov
ss
push
cli
mov
and
mov
and
dec
pop
loope
jg
jmp
leave
inc
and
sub
inc
pop
and
jg
jmp
mov
sub
pop
cli
mov
pop
(bad)
ins
test
add
enter
sub
dec
adc
je
jmp
mov
and
ss
scas
sub
and
(bad)
dec
add
add
into
sbb
cmp
jae
mov
scas
or
test
sbb
add
jge
aam
push
aas
mov
psubsb
add
add
add
inc
add
fdivr
cmp
stc
add
add
dec
rol
add
arpl
sub
retf
rcr
test
push
fdivr
xor
fild
xor
xchg
push
mov
push
je
inc
aas
add
mov
pop
or
jle
inc
and
mov
add
jnp
jmp
mov
mov
mov
es
into
sbb
cmove
mov
mov
add
sar
jmp
inc
addr16
adc
mov
and
jmp
stos
pop
and
mov
inc
and
pusha
outs
aam
daa
nop
cmp
mov
test
daa
add
(bad)
dec
and
mov
and
cmp
cdq
aas
cmp
call
mov
sub
push
sbb
adc
jmp
add
inc
imul
inc
aas
jnp
(bad)
aam
jmp
dec
inc
jo
mov
push
dec
and
add
or
xchg
dec
inc
xchg
add
jecxz
dec
jecxz
sbb
(bad)
sbb
cmp
push
aam
jmp
lods
or
mov
inc
sub
(bad)
jmp
pop
inc
add
push
mov
push
push
push
and
sub
jmp
push
jmp
push
jmp
call
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
mov
inc
dec
bound
jnp
or
stos
push
inc
(bad)
(bad)
dec
mov
stos
and
(bad)
(bad)
(bad)
(bad)
mov
sub
inc
inc
adc
jmp
iret
xchg
inc
dec
pop
mov
inc
jmp
mov
and
mov
pmaxub
add
ins
cmps
dec
stos
pop
gs
in
and
dec
jmp
test
cs
gs
mov
int
stos
push
scas
adc
push
sub
ret
sub
mov
push
adc
imul
aad
inc
xchg
add
mov
mov
test
nop
add
jmp
test
and
cs
fisttp
cmp
dec
push
add
jmp
mov
sub
mov
xor
(bad)
jno
add
add
add
lds
dec
xor
mov
inc
mov
jecxz
mov
mov
sub
aas
(bad)
sbb
add
dec
add
sbb
dec
and
int3
test
add
aas
ja
add
push
sub
mov
jg
fadd
dec
add
sub
mov
je
jmp
mov
call
mov
daa
jae
dec
sbb
ins
add
adc
mov
adc
mov
add
or
jnp
sub
pusha
mov
ret
add
add
inc
sbb
movs
ret
das
mov
mov
psubsb
add
add
icebp
inc
adc
push
jle
inc
sub
push
sub
add
adc
push
adc
mov
test
jmp
add
add
mov
aam
xor
mov
mov
add
inc
ror
xor
cmp
sbb
xchg
push
out
outs
jl
jo
add
jp
inc
mov
mov
push
pop
push
call
mov
and
out
and
mov
fadd
jp
dec
mov
aad
bound
shr
scas
mov
and
cmp
cmove
(bad)
dec
and
push
scas
add
mov
pop
adc
dec
jmp
dec
inc
dec
jo
shl
mov
mov
jne
jp
inc
mov
aad
or
aad
pop
ror
dec
mov
add
jmp
mov
sub
aas
sahf
add
add
add
adc
out
add
mov
in
jl
in
dec
add
psubq
xor
pop
xchg
add
add
ins
sbb
into
mov
hlt
mov
mov
mov
lea
mov
jmp
nop
push
mov
push
push
push
and
sub
jmp
push
jmp
push
jmp
push
ret
jmp
call
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
inc
or
pop
or
push
sbb
mov
dec
cmp
mov
int
mov
mov
out
inc
scas
sbb
aad
mov
push
data16
push
addr16
push
and
mov
nop
dec
add
call
bound
mov
and
add
(bad)
and
call
lea
pop
pop
pop
pop
ret
nop
push
mov
push
push
push
and
sub
jmp
push
jmp
push
ret
jmp
push
jmp
call
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
adc
and
add
cmps
mov
cmc
mov
xchg
add
add
push
adc
add
push
mov
jo
add
add
add
xchg
pop
scas
mov
and
(bad)
(bad)
push
inc
and
add
add
sti
and
add
add
and
pop
arpl
imul
mov
xchg
sub
mov
push
shl
(bad)
sbb
inc
ins
out
rcr
(bad)
inc
test
test
add
add
mov
cmp
not
ds
mov
jbe
or
add
je
add
cmp
fs
les
jo
fistp
add
and
sub
cmp
jg
add
add
sub
outs
shl
(bad)
rol
add
jmp
mov
sub
sub
jg
cdq
add
and
mul
push
push
or
mov
cmc
mov
pusha
sub
push
scas
(bad)
mov
add
jo
sbb
jecxz
repnz
std
retf
and
(bad)
jmp
mov
cmps
(bad)
and
mov
dec
add
add
add
add
aas
xor
mov
je
cdq
add
add
sub
mov
and
je
jmp
mov
add
sub
cmp
test
xchg
jg
test
mov
sub
push
mov
jo
adc
mov
sub
mov
sub
mov
cli
test
test
test
and
sub
mov
aad
jo
mov
sub
mov
and
add
mov
sbb
retf
ret
in
fild
jmp
mov
xor
jmp
and
cwde
test
xor
add
stos
inc
outs
xchg
jb
inc
test
sub
mov
sbb
(bad)
ins
ins
shl
(bad)
in
movs
add
rcl
add
add
sbb
add
cmp
sub
mov
je
add
add
bound
inc
and
xchg
test
mov
inc
and
mov
jle
jmp
scas
mov
dec
jmp
mov
dec
add
mov
add
and
add
inc
cmps
outs
dec
and
jmp
sub
jle
jmp
lea
sti
mov
add
pop
add
mov
mov
test
cmc
mov
mov
push
jno
inc
in
and
dec
mov
retf
sbb
rcr
cmp
xor
mov
jmp
mov
jle
fild
add
inc
and
add
add
test
movs
pop
and
cmc
add
jne
and
out
jg
clc
and
rol
lds
sbb
cli
sub
sahf
or
dec
and
cmp
xadd
sub
add
inc
ret
movs
add
xor
sbb
mov
mov
add
cmp
mov
add
add
or
and
(bad)
out
and
test
add
add
push
adc
and
add
add
mov
add
mov
test
ret
in
aam
popf
jb
bound
les
in
cmp
push
add
xchg
scas
js
push
inc
ins
mov
popa
(bad)
cmp
in
movs
and
and
mov
fiadd
and
add
add
adc
or
les
push
or
mov
(bad)
pop
add
cmc
add
inc
fimul
add
add
in
mov
adc
(bad)
jg
in
inc
pop
js
outs
xlat
jb
inc
sbb
and
cmpxchg
dec
mov
push
add
push
sbb
mov
test
jne
ins
add
add
add
shl
dec
jle
jmp
mov
nop
and
ret
jmp
nop
push
mov
push
push
push
and
sub
jmp
call
jmp
push
jmp
push
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
daa
inc
imul
mov
jge
mov
mov
sub
jl
add
enter
push
and
or
jne
mov
and
mov
and
pop
outs
mov
les
retf
mov
mov
or
pop
call
add
add
mov
and
mov
mov
pop
or
addr16
jbe
adc
call
(bad)
pop
pop
pop
ret
nop
push
mov
push
push
push
and
sub
jmp
push
jmp
push
jmp
call
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lea
mov
cwde
cmp
add
cmp
dec
jns
jecxz
add
and
add
add
out
and
and
push
(bad)
sti
cmps
lea
arpl
mov
mov
std
movs
call
lea
pop
pop
pop
pop
ret
nop
push
mov
push
push
push
and
sub
jmp
push
jmp
push
jmp
push
ret
jmp
call
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
mov
sbb
stc
dec
mov
dec
mov
mov
test
mov
inc
jno
mov
xchg
mov
push
loope
jmp
mov
shl
cmp
(bad)
sbb
xchg
add
add
mov
inc
and
or
sbb
fsub
add
fild
ja
push
inc
add
shld
push
add
xchg
mov
or
ror
xor
add
jmp
mov
mov
test
(bad)
mov
push
popf
add
add
sbb
enter
inc
and
jg
xor
mov
push
mov
sub
aam
cld
add
sub
mov
sub
mov
pmaxsw
add
add
push
inc
and
sub
jle
les
sbb
mov
js
enter
sbb
adc
pop
imul
add
inc
and
sbb
movs
in
inc
stos
and
rol
jmp
jmp
mov
sbb
aam
xchg
xchg
mov
(bad)
and
and
(bad)
xadd
inc
jmp
mov
int
pop
jp
pop
jg
add
add
add
and
xor
inc
and
(bad)
jmp
in
(bad)
inc
mov
mov
add
mov
(bad)
fisttp
ss
mov
movs
aaa
fdiv
outs
push
mov
inc
mov
stos
test
addr16
or
add
xchg
add
stos
pop
mov
jmp
mov
and
in
rol
jle
test
push
add
sbb
ins
mov
push
addr16
add
inc
dec
and
mov
add
cs
mov
mov
sbb
mov
(bad)
lods
fld
add
pop
mov
js
mov
shl
dec
ltr
add
(bad)
cwde
cmovo
shr
jecxz
and
jmp
gs
and
lea
pop
pop
adc
dec
(bad)
std
int3
retf
data16
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
push
jmp
call
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
xchg
mov
jo
pop
loope
mov
dec
push
popf
js
fisub
add
add
push
and
(bad)
(bad)
(bad)
dec
stos
popf
je
inc
hlt
pop
xor
add
enter
mov
and
mov
retf
add
add
add
add
stmxcsr
setbe
test
add
xchg
out
mov
pop
call
test
mov
add
add
out
xchg
and
aas
out
or
fild
add
add
dec
add
sub
sub
mov
xadd
add
gs
inc
jecxz
aas
(bad)
jns
add
fld
add
jmp
mov
and
sub
test
mov
add
js
fiadd
add
adc
jmp
test
rol
mov
dec
int
add
and
xor
jmp
add
push
xchg
test
sub
retf
inc
ins
and
add
push
inc
inc
sub
loopne
int
inc
add
add
dec
add
sub
bound
setbe
xlat
xchg
inc
add
xchg
sub
mov
and
test
add
(bad)
xchg
and
jmp
and
je
jmp
mov
xchg
adc
mov
dec
test
and
call
and
clc
(bad)
mov
sub
cmp
jmp
dec
inc
outs
push
sub
mov
adc
test
jg
add
push
and
sub
pop
ret
sub
test
mov
add
mov
sub
test
and
xchg
cld
pop
add
add
add
gs
and
adc
mov
push
jnp
movs
test
mov
add
add
inc
lods
mov
jmp
bound
jnp
mov
lahf
mov
out
mov
loope
jmp
stos
inc
add
in
jmp
push
inc
inc
ins
pop
dec
and
mov
dec
push
and
outs
xor
xor
inc
jno
dec
retf
pop
fmul
sub
cmp
(bad)
retf
and
jmp
(bad)
sahf
and
pop
add
(bad)
adc
dec
mov
mov
push
cmp
or
xor
jnp
add
xchg
dec
push
mov
cmps
fisub
mov
jmp
pop
inc
xchg
lds
dec
add
add
dec
add
mov
cmp
setne
pop
loope
scas
and
inc
and
adc
retf
dec
mov
dec
mov
fild
hlt
pop
lea
std
pop
pop
pop
sub
mov
jmp
pop
test
add
add
push
mov
push
push
push
and
sub
push
jmp
call
jmp
push
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
cmps
mov
or
push
sbb
adc
xor
push
lahf
sbb
and
and
mov
mov
and
scas
cli
and
mov
adc
ret
inc
cmps
mov
out
mov
daa
jmp
adc
xlat
and
mov
sbb
and
call
in
hlt
dec
movs
rcr
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
push
jmp
push
ret
jmp
call
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
pop
dec
mov
inc
and
loope
scas
push
dec
cli
jns
add
and
aaa
cmp
mov
inc
retf
dec
add
or
(bad)
shl
add
in
xchg
mov
or
add
and
aaa
cmovge
outs
mov
mov
mov
repz
add
inc
inc
call
add
inc
sub
mov
pop
cld
and
pop
inc
dec
sub
test
ret
and
mov
inc
jmp
stc
jae
add
pusha
mov
add
lods
(bad)
dec
fs
pop
inc
(bad)
test
test
pop
scas
mov
retf
sub
jmp
xchg
add
cmps
xchg
add
sub
dec
into
ret
dec
popa
test
cmp
add
add
adc
mov
sbb
push
in
mov
xchg
dec
imul
fs
mov
mov
in
push
mov
hlt
je
mov
mov
test
dec
xor
inc
mov
je
jmp
mov
and
ret
sbb
fwait
sar
cmps
xchg
mov
add
jmp
sahf
wbinvd
inc
add
std
add
jno
add
mov
mov
cmp
pop
jecxz
sbb
ds
push
jb
mov
std
cs
jmp
mov
xchg
add
dec
and
cs
mov
ror
stos
and
ret
add
call
mov
dec
push
sti
enter
add
xor
inc
and
repnz
pop
cld
lock
mov
ret
test
add
mov
sub
sbb
adc
loop
inc
ins
inc
add
add
or
cmps
pop
add
sar
rol
fs
mov
mov
pop
add
cdq
push
retf
and
cdq
retf
add
add
inc
push
out
(bad)
(bad)
(bad)
inc
inc
and
rcr
jmp
sub
leave
rol
mov
lock
fisubr
pushf
mov
sbb
dec
inc
sub
sub
(bad)
xchg
mov
sub
and
and
daa
imul
mov
out
mov
daa
mov
mov
mov
mov
mov
or
iret
add
(bad)
iret
cs
fist
add
sbb
or
dec
mov
inc
cmp
mov
mov
mov
mov
lock
and
cs
faddp
mov
stos
jecxz
or
mov
mov
fadd
hlt
retf
xchg
ret
cmp
(bad)
dec
int3
int3
int3
int3
int3
int3
push
mov
push
push
and
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
call
mov
mov
mov
mov
mov
cmp
cmovae
mov
jmp
mov
mov
mov
call
mov
lea
mov
mov
mov
mov
call
sub
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
sub
mov
mov
cmp
cmovne
mov
mov
jmp
mov
mov
mov
mov
mov
call
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
call
sub
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
sub
mov
mov
cmp
cmovne
mov
jmp
mov
mov
lea
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
mov
call
mov
mov
lea
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
mov
call
lea
mov
mov
mov
call
mov
mov
cmp
cmovne
mov
jmp
lea
mov
mov
mov
call
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
jmp
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
call
sub
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
call
mov
jmp
mov
mov
mov
mov
jmp
mov
lea
pop
pop
pop
ret
jmp
push
mov
push
push
push
sub
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
setne
mov
xor
and
xor
and
or
test
cmovne
mov
jmp
mov
mov
mov
mov
jmp
mov
sub
add
add
mov
mov
jmp
lea
lea
mov
mov
mov
add
add
movzx
add
sub
sub
add
mov
mov
add
movzx
sub
add
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
cmp
cmovl
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
jmp
nop
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
push
jmp
call
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
(bad)
arpl
add
and
add
add
fild
in
out
enter
call
mov
xor
mov
inc
add
add
add
test
add
add
cmp
repnz
xchg
ins
jbe
lods
or
imul
add
sub
dec
inc
mov
add
add
outs
add
(bad)
mov
fistp
push
enter
stos
jo
clc
mov
add
jmp
fstp
xor
sahf
ins
ins
test
rol
in
fcom
add
in
inc
ss
pushf
mov
jg
jmp
jmp
dec
jp
cwde
mov
jg
mov
mov
push
imul
inc
inc
pusha
cmovnp
add
add
cdq
inc
loop
sub
jb
ret
pop
test
bound
inc
add
imul
and
(bad)
xchg
push
mov
add
mov
aad
aas
dec
inc
push
push
hlt
dec
je
add
mov
xlat
repz
jbe
fadd
mov
add
xor
and
sub
push
loop
psllq
sti
add
jmp
sub
shl
jle
(bad)
jmp
dec
jmp
add
push
add
fdivr
rol
or
add
xchg
and
add
add
add
(bad)
ror
and
mov
repz
in
out
lods
and
call
movs
xchg
add
psubsw
popa
daa
ror
daa
rcr
jg
hlt
mov
pop
xlat
aas
imul
test
add
add
add
cmove
mov
jbe
(bad)
cmp
add
sahf
sub
iret
fidiv
outs
sub
jno
cmp
cs
push
mov
add
jmp
mov
(bad)
sub
out
pop
jmp
mov
add
mov
sbb
pop
daa
ror
fwait
add
push
and
add
jbe
jle
jmp
mov
stos
mov
add
mov
daa
ror
add
mov
jae
inc
mov
out
add
nop
and
mov
push
mov
mov
call
add
mov
mov
mov
fwait
push
loop
(bad)
xor
or
add
add
and
mov
dec
sbb
pusha
sar
sub
add
and
retf
outs
daa
shr
and
add
add
test
add
dec
inc
mov
pop
cli
rol
pusha
sar
add
add
pusha
daa
ror
and
sub
outs
daa
ror
add
push
and
and
rol
or
or
dec
and
pop
xchg
add
add
add
mov
mov
mov
ret
outs
daa
shr
mov
test
ja
inc
rol
(bad)
mov
add
outs
dec
and
xchg
dec
add
mov
mov
mov
or
mov
mov
add
inc
inc
or
add
(bad)
(bad)
mov
jmp
mov
mov
sub
fisttp
popf
sti
outs
daa
sar
sbb
test
add
lock
push
xchg
shl
and
add
add
mov
inc
enter
sub
sti
add
mov
mov
mov
mov
mov
and
dec
push
and
(bad)
mov
fadd
mov
and
(bad)
mov
add
pusha
daa
ror
and
aad
add
shr
mov
inc
add
jb
ret
test
inc
sti
(bad)
retf
add
add
outs
xor
add
push
add
push
(bad)
pusha
daa
shl
out
dec
fwait
add
outs
daa
ror
mov
iret
jmp
add
bound
and
dec
add
mov
inc
mov
ror
rol
daa
sar
push
inc
test
fwait
add
inc
loop
(bad)
xor
into
out
mov
add
lahf
jecxz
pusha
rcl
in
add
jns
and
mov
mov
rol
daa
ror
arpl
adc
mov
and
(bad)
ja
add
in
inc
sbb
movs
punpcklbw
inc
add
pusha
daa
ror
add
mov
mov
test
jns
push
out
lahf
loope
add
inc
les
add
adc
or
dec
and
mov
mov
ja
mov
test
inc
add
add
shr
and
add
mov
mov
mov
inc
fs
and
push
push
punpcklbw
mov
mov
(bad)
add
add
mov
jmp
in
xchg
and
add
jbe
hlt
nop
mov
je
(bad)
jmp
pop
inc
add
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
cmove
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
cmove
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
cmove
mov
jmp
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
call
mov
mov
mov
cmp
cmove
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
call
mov
mov
jmp
lea
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
add
add
sub
mov
mov
cmp
cmovne
mov
mov
jmp
mov
mov
mov
sub
sub
mov
mov
mov
call
mov
mov
mov
cmp
cmove
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
sub
sub
sub
add
add
add
mov
sub
add
add
mov
mov
mov
mov
mov
call
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
jmp
push
mov
push
push
sub
mov
mov
call
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovl
mov
jmp
mov
jmp
call
mov
lea
mov
mov
mov
call
mov
mov
call
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
mov
call
lea
mov
mov
mov
call
mov
mov
cmp
cmovne
mov
jmp
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
call
mov
jmp
lea
mov
call
mov
mov
cmp
cmovne
mov
jmp
lea
mov
lea
mov
mov
mov
mov
mov
mov
call
mov
mov
add
sub
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
cmovne
mov
jmp
mov
call
mov
mov
cmp
cmove
mov
jmp
mov
mov
lea
mov
mov
mov
mov
mov
call
lea
mov
mov
call
mov
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
mov
mov
mov
call
mov
mov
mov
mov
mov
call
sub
mov
mov
jmp
lea
mov
lea
mov
mov
mov
mov
mov
mov
call
mov
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
lea
mov
lea
mov
mov
mov
mov
mov
mov
call
mov
mov
jmp
mov
mov
lea
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
mov
call
lea
mov
mov
mov
call
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
call
mov
jmp
mov
mov
jmp
mov
mov
cmp
cmovb
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
mov
call
sub
mov
add
pop
pop
pop
ret
jmp
data16
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
call
jmp
push
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
jno
or
add
mov
and
inc
add
out
les
add
mov
add
mov
lods
sub
add
add
in
mov
mov
mov
and
out
mov
repnz
and
js
add
popf
push
mov
add
mov
enter
loop
out
xchg
and
or
stc
jmp
xchg
pop
add
mov
in
arpl
or
and
(bad)
jecxz
add
rol
aad
les
add
add
dec
mov
jae
and
popa
and
add
add
push
(bad)
fisub
push
xor
ins
jnp
pop
add
inc
mov
inc
ja
add
out
mov
ror
mov
mov
mov
inc
sti
mov
ret
(bad)
dec
add
push
popf
sub
mov
inc
mov
inc
mul
test
push
add
add
mov
adc
pop
inc
push
clc
mov
pop
or
mov
inc
add
jl
inc
push
push
ret
push
(bad)
call
cmps
rcl
lods
and
scas
call
push
fisub
add
jmp
enter
call
(bad)
cmp
add
add
and
add
dec
rol
pop
adc
mov
test
add
mov
mov
shl
aas
add
pop
push
jle
test
jne
sub
adc
jbe
add
jmp
jo
inc
retf
jmp
ins
test
dec
pop
fst
popf
enter
test
add
add
and
in
jmp
enter
add
jecxz
pop
add
ret
jne
xlat
dec
add
mov
cmp
add
add
add
scas
inc
(bad)
push
out
push
mulps
add
jmp
jno
and
add
sub
mov
inc
les
add
add
pop
out
(bad)
ret
test
add
sub
mov
(bad)
mov
mov
test
add
add
mov
fld
(bad)
add
int
pop
add
xor
add
jne
sub
leave
or
pop
inc
mov
packuswb
add
jmp
jmp
icebp
pop
add
fisttp
add
mov
cld
xor
push
xor
aaa
ins
dec
(bad)
loop
add
adc
push
call
mov
ins
sub
add
add
add
mov
add
mov
mov
fmul
call
jno
add
cmp
mov
call
enter
mov
mov
in
pop
pop
inc
push
call
les
mov
and
mov
mov
add
in
inc
and
add
add
fadd
and
mov
add
call
cdq
push
xor
outs
xchg
and
inc
add
out
out
int3
out
pop
mov
cli
hlt
jmp
sub
mov
push
fucomip
shl
pushf
and
add
push
shl
xlat
ffreep
cmp
mov
cld
je
sub
fild
or
inc
push
jb
in
cli
stc
add
jne
add
out
add
push
add
pop
add
cmp
xor
into
or
movs
mov
imul
retf
sub
jne
fisttp
mov
shl
add
into
and
add
shl
add
mov
and
aas
out
out
stos
and
adc
add
add
rol
cmp
(bad)
addr16
push
mov
mov
(bad)
sqrtps
call
mov
stc
out
or
and
or
mov
inc
or
add
in
outs
sub
test
push
add
ret
add
cli
jp
retf
and
xor
icebp
add
add
add
pop
push
dec
add
add
add
inc
jg
and
call
adc
js
and
retf
jecxz
add
adc
dec
pop
push
test
sti
jne
mov
mov
mov
mov
mov
xlat
or
and
inc
jne
add
add
rcl
pop
and
add
add
mov
push
scas
add
call
lea
mov
and
add
add
push
inc
push
mov
lea
mov
add
inc
ins
fcomp
add
add
inc
mov
add
push
addr16
mov
dec
shl
call
lea
mov
not
mov
add
add
inc
push
lea
add
add
add
mov
and
retf
retf
daa
add
add
ret
ror
ja
add
retf
and
dec
fild
push
and
retf
or
pop
pusha
inc
push
ins
or
mov
sar
mov
mov
mov
and
add
call
adc
and
dec
add
or
and
add
rcl
sub
ror
in
xor
aad
movs
mov
xor
add
in
inc
shl
out
rol
jecxz
maxps
call
ror
push
xchg
fiadd
js
add
stc
mov
and
enter
mov
mov
retf
inc
out
rol
push
adc
adc
add
pop
and
jns
sbb
stc
mov
and
pop
xor
outs
xor
mov
cwde
xchg
clc
stc
mov
and
loop
shr
clc
or
add
inc
ret
push
mov
push
adc
mov
popf
mov
jmp
mov
out
or
mov
enter
clc
stc
mov
add
add
dec
jecxz
test
cmp
dec
aam
and
div
ficom
add
mov
(bad)
cmps
out
add
(bad)
jecxz
add
push
sub
mov
ficom
mov
clc
stc
push
(bad)
pushf
sahf
clc
stc
mov
push
add
dec
add
mov
retf
mov
push
mov
add
(bad)
dec
mov
and
add
cli
jmp
nop
lods
sahf
clc
stc
mov
fnstenv
mov
mov
mov
or
add
rol
cmp
sbb
add
jne
(bad)
in
xchg
push
xor
add
and
mov
sub
clc
stc
push
stc
ins
xor
fisubr
pop
or
lods
dec
cmps
mov
add
adc
add
add
push
or
add
or
add
add
push
(bad)
mov
sub
push
jbe
jne
scas
add
stc
mov
sahf
clc
stc
mov
stc
ins
jecxz
test
mov
add
ror
add
jmp
adc
dec
add
jle
pop
add
and
sbb
stc
push
adc
fld
push
loopne
clc
stc
mov
mov
movs
or
add
push
lea
test
adc
popf
add
inc
adc
fs
test
add
in
sbb
loopne
clc
stc
mov
fidiv
mov
pop
or
mov
mov
lea
repz
adc
aaa
in
mov
cld
or
retf
add
dec
test
out
(bad)
call
test
popf
mov
xchg
clc
stc
mov
jnp
sbb
mov
pextrw
mov
lea
xchg
dec
add
mov
mov
mov
mov
and
and
add
add
sbb
push
ins
test
add
inc
push
mov
xor
ret
push
mov
push
push
(bad)
cld
or
cmps
xchg
add
call
mov
mov
mov
test
retf
sub
bound
dec
pop
add
add
scas
popf
push
push
lock
xchg
inc
inc
addr16
push
(bad)
add
pop
add
imul
icebp
(bad)
push
in
sbb
add
add
add
retf
inc
out
or
sub
(bad)
add
call
shl
xchg
jge
add
cli
cld
xor
sub
add
popf
mov
mov
shl
add
mov
loopne
add
data16
inc
mov
add
ror
add
push
ins
add
pop
add
jae
div
cli
and
mov
and
and
add
mov
inc
mov
js
or
inc
add
mov
inc
push
outs
mov
xchg
and
pop
add
mov
push
test
add
add
mov
popf
mov
adc
add
fld
retf
cs
test
push
push
add
mov
call
jns
sub
clc
add
lea
add
push
add
loop
inc
or
add
ror
ds
push
fsub
pop
fnstsw
fdivr
jne
mov
xor
aaa
or
addr16
push
jbe
fwait
loopne
retf
add
not
add
dec
add
cli
(bad)
xor
add
add
test
inc
push
mov
mov
mov
mov
jecxz
dec
in
mov
call
call
ror
mov
add
add
cld
ret
es
dec
add
out
in
or
inc
add
xchg
clc
stc
ror
dec
repz
sahf
clc
stc
(bad)
movs
sahf
clc
stc
mov
cld
jecxz
cmp
add
or
sar
into
inc
and
mov
xchg
clc
stc
mov
mov
fsub
mov
mov
mov
call
test
adc
adc
adc
mov
mov
retf
fmul
pop
mov
in
dec
add
rcr
in
or
or
mov
push
dec
and
or
adc
push
mov
inc
add
mov
and
retf
jecxz
sbb
mov
div
mov
mov
push
mov
add
jae
js
(bad)
adc
add
push
out
mov
and
sub
jno
adc
sahf
clc
stc
mov
add
sar
mov
sbb
add
scas
rol
and
sar
add
dec
mov
add
mov
mov
inc
mov
call
or
mov
mov
mov
add
jae
mov
mov
test
sbb
adc
mov
enter
or
shr
(bad)
inc
add
mov
mov
(bad)
cmc
scas
popf
push
retf
out
in
or
stc
outs
xchg
and
or
add
jecxz
mov
mov
mov
mov
and
dec
pop
add
sub
test
mov
mov
inc
add
outs
pop
int
enter
dec
idiv
xchg
push
frstor
adc
or
jbe
add
aaa
retf
(bad)
call
or
mov
fiadd
clc
push
add
mov
jne
add
lods
out
push
add
aaa
mov
and
add
retf
shl
xchg
clc
stc
mov
mov
out
(bad)
dec
sar
mov
sbb
add
aaa
sbb
adc
or
mov
fisub
add
mov
mov
mov
add
popf
add
rol
mov
sub
(bad)
jecxz
dec
mov
push
or
push
push
add
int
mov
push
retf
out
in
test
fmul
out
pop
std
jge
or
cld
jb
es
fild
call
adc
inc
retf
add
pop
or
add
lea
add
add
and
add
pop
add
cdq
fidivr
lods
add
mov
mov
add
xlat
out
inc
add
out
adc
push
mov
bnd
lahf
push
inc
push
aam
and
clc
add
iret
add
test
in
repnz
and
add
div
push
cli
stc
mov
jno
and
jns
add
mov
sbb
push
xor
mov
mov
ss
out
out
dec
jge
push
pop
push
add
add
add
mov
scas
sbb
pop
xor
mov
fcmovnb
inc
fwait
inc
iret
add
add
and
pop
sbb
and
fld
cli
call
clc
sub
mov
add
mov
mov
and
add
fcom
retf
pop
pop
jmp
and
sar
add
add
rol
pushf
(bad)
or
mov
and
or
in
add
(bad)
dec
mov
mov
mov
mov
lea
lea
mov
fcom
add
and
add
add
je
or
jl
pop
mov
mov
call
lea
mov
lea
cmp
add
rol
fdivr
add
sub
mov
xor
mov
shl
add
lahf
and
dec
dec
and
and
add
rcr
jle
add
add
or
push
push
inc
add
add
ror
add
ins
mov
(bad)
cdq
and
jmp
loope
dec
and
fist
call
mov
add
je
loopne
cli
stc
mov
mov
and
ds
inc
push
call
mov
mov
and
or
mov
es
rcl
in
cmp
pusha
fld
retf
add
push
push
add
mov
in
stc
add
add
mov
add
rcr
rol
and
add
add
stc
mov
sahf
clc
stc
inc
mov
add
fsubr
mov
mov
or
cdq
ficomp
fidivr
in
or
or
mov
fnstenv
mov
jbe
inc
inc
aam
xchg
sahf
(bad)
mov
cmp
(bad)
aad
sbb
jne
mov
mov
mov
jbe
or
ins
les
or
add
push
out
fadd
cmps
rol
adc
sahf
clc
stc
mov
mov
mov
inc
adc
adc
(bad)
and
or
add
push
stc
ins
xchg
and
pop
add
sar
mov
call
sub
mov
test
jbe
cmp
add
inc
ss
push
add
aaa
mov
sbb
sar
or
addr16
jne
test
and
add
add
and
jo
loopne
inc
add
sti
addr16
sub
add
mov
mov
mov
push
div
push
(bad)
frstor
dec
add
rcl
push
or
mov
add
inc
mov
js
push
cmp
xchg
clc
stc
mov
mov
mov
jbe
jmp
in
ret
lea
dec
test
or
push
ja
xchg
clc
stc
ret
sahf
clc
stc
mov
lods
dec
mov
dec
cmp
rol
mov
(bad)
adc
add
mov
mov
push
fisttp
mov
add
jbe
fnstenv
jmp
mov
call
clc
stc
je
fwait
enter
push
out
mov
aaa
mov
test
push
pop
test
and
repz
mov
add
retf
jecxz
out
mov
pop
jle
cdq
fiadd
hlt
sub
mov
mov
outs
mov
push
mov
mov
mov
sub
rcl
mov
xchg
and
or
add
and
push
add
add
rol
mov
ja
and
bound
or
mov
mov
cld
popa
mov
dec
rcr
or
stc
mov
mov
push
dec
push
add
aaa
mov
retf
mov
push
outs
and
or
scas
push
mov
xor
add
mov
mov
inc
and
call
pusha
sub
xchg
clc
stc
ins
lds
or
add
in
and
div
mov
es
add
sar
dec
mov
inc
ja
sub
std
jge
div
mov
push
cdq
fild
mov
sbb
or
mov
(bad)
or
add
and
sub
push
add
ror
rol
test
(bad)
sbb
add
add
sar
mov
sbb
rcr
in
pop
mov
stc
mov
mov
jbe
mov
and
xor
dec
adc
pop
pop
adc
dec
pop
add
in
push
push
and
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
sub
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
mov
jmp
mov
lea
pop
pop
pop
pop
ret
jmp
data16
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
call
shl
mov
mov
jmp
mov
mov
mov
mov
add
add
sub
mov
sub
add
add
mov
sub
sub
add
add
sub
mov
mov
mov
call
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
add
sub
add
mov
mov
mov
mov
call
mov
mov
jmp
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
jmp
data16
push
mov
push
push
push
mov
call
lea
mov
lea
lea
lea
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
lea
mov
mov
mov
mov
mov
call
mov
lea
mov
mov
mov
mov
call
lea
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
lea
mov
mov
mov
mov
mov
call
mov
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
call
mov
lea
lea
add
mov
mov
mov
mov
mov
call
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
mov
call
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
cmove
mov
jmp
mov
jmp
lea
lea
lea
lea
mov
mov
mov
mov
mov
mov
call
mov
mov
cmp
cmovl
mov
jmp
mov
jmp
mov
mov
lea
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
mov
call
mov
mov
mov
lea
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
cmp
cmovl
mov
jmp
mov
jmp
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
cmp
cmovl
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
call
sub
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
lea
mov
mov
mov
mov
mov
call
mov
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
call
mov
lea
lea
add
mov
mov
mov
mov
mov
call
mov
mov
mov
lea
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
cmp
cmovl
mov
jmp
mov
jmp
mov
mov
jmp
lea
mov
mov
mov
call
sub
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
mov
call
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
cmp
cmovl
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
lea
mov
mov
mov
call
sub
mov
mov
cmp
cmovne
mov
mov
jmp
mov
mov
mov
call
sub
add
pop
pop
pop
pop
ret
jmp
xor
jge
dec
(bad)
sbb
jge
ror
gs
pushf
push
sbb
push
fdiv
lock
outs
fimul
std
addr16
pop
aaa
add
push
addr16
pushf
movs
or
push
bound
pop
pop
retf
jne
ins
sahf
shl
inc
pop
push
xchg
sahf
cli
mov
fmul
fnstcw
daa
outs
repnz
push
add
add
xor
(bad)
out
aad
adc
or
xor
mov
push
cmp
rcr
cwde
ins
or
jb
test
push
mov
(bad)
or
cld
call
or
mov
jb
ja
fcmovnbe
inc
(bad)
sti
sbb
sbb
adc
test
inc
hlt
pop
push
add
adc
push
mov
xchg
push
jne
xor
adc
stc
xor
sti
jg
shr
test
dec
lods
call
pop
les
adc
(bad)
ja
pop
stc
in
cmc
ins
jo
aas
test
pop
(bad)
fsubr
dec
into
sar
xchg
stos
int
(bad)
jae
mov
push
in
fisub
or
mov
mov
xchg
addr16
mov
cmc
mov
movs
add
pop
fadd
pusha
xchg
push
mov
mov
test
loop
loop
movs
jne
sbb
dec
inc
jp
test
cld
adc
inc
jbe
inc
xchg
outs
or
cmp
mov
mov
jmp
dec
pop
sar
and
jecxz
mov
std
jo
mov
cld
xchg
sub
int3
xchg
jg
std
push
aam
xor
adc
pop
add
mov
mov
pop
xor
loop
popa
jo
jmp
cmp
mov
inc
shl
arpl
jne
xchg
out
cmp
mov
mov
xor
fbld
iret
out
or
popa
aam
mov
test
dec
add
push
xchg
call
cmp
das
(bad)
xor
and
in
pusha
stos
pop
push
sbb
dec
shl
sub
aaa
stos
mov
ret
ins
jae
lock
add
mov
cmp
dec
into
xor
ret
scas
sbb
mov
in
stos
loop
jb
mov
leave
xor
cmps
mov
cld
xchg
add
jnp
stc
test
mov
inc
daa
xchg
add
repz
pop
add
jl
ss
shr
cmp
adc
add
xchg
jno
mov
ret
pusha
in
add
scas
push
cmp
jl
push
(bad)
xor
xchg
add
jae
das
inc
(bad)
and
mov
test
and
dec
pop
call
test
xchg
adc
pop
daa
xchg
fwait
sbb
popf
test
and
int
push
mov
inc
mov
adc
pop
rcl
and
mov
push
stos
xor
scas
sbb
test
retf
pop
jns
out
xchg
test
mov
adc
(bad)
add
inc
or
mov
sbb
daa
sbb
or
or
mov
pop
leave
cdq
push
sbb
xchg
adc
in
push
test
aas
stos
or
shr
fnstsw
loop
inc
adc
sub
in
and
xchg
stos
jmp
cmp
mov
sub
mov
sbb
and
sub
lds
push
shl
retf
cmps
sbb
outs
jo
or
fistp
ja
push
jae
sub
mov
cmc
ja
popa
ret
mov
mov
sub
xchg
cmp
mov
mov
push
loope
xor
xor
ds
mov
pop
repnz
loope
into
stc
fsubr
xchg
mov
div
push
sti
std
fisubr
jns
sub
lds
jecxz
test
cli
inc
arpl
lods
loop
mov
(bad)
lods
cmp
sar
cmps
xchg
dec
imul
hlt
inc
xor
in
pop
mov
leave
mov
inc
daa
cmp
cmps
inc
inc
imul
shr
dec
mov
push
mov
pop
sub
sub
sbb
cdq
pushf
cdq
sbb
and
inc
stc
inc
loope
les
ins
inc
movs
push
jp
arpl
mov
imul
adc
push
mov
or
loop
outs
or
and
sbb
clc
jmp
dec
xchg
cmp
ret
sub
mov
out
popa
or
mov
jp
cmps
mov
mov
ins
aam
jecxz
pusha
mov
ss
xchg
cmp
push
mov
mov
scas
clc
xlat
sbb
push
sbb
fstp
add
cmp
sbb
push
cwde
dec
inc
push
xor
xchg
dec
sub
sub
push
pusha
adc
inc
es
and
xor
mov
into
push
mov
add
or
add
stos
rcr
ins
xchg
clc
cmp
cmp
sar
movs
pop
gs
push
cmps
dec
push
xor
or
pop
or
adc
loopne
mov
mov
jnp
ror
jge
mov
or
pop
add
iret
movaps
arpl
adc
cli
movs
dec
pusha
jb
aad
movs
dec
xor
adc
inc
clc
sbb
jo
jl
enter
and
leave
lds
xchg
sbb
push
ror
data16
imul
in
inc
in
add
mov
(bad)
and
fimul
aas
pushf
aas
pop
div
js
jns
sub
push
hlt
xchg
movs
outs
sbb
xchg
add
ror
enter
pop
mov
mov
pop
es
popf
rcr
fcomp
inc
mov
shl
mov
bound
jns
add
(bad)
and
sbb
mov
sbb
fadd
cld
add
pop
and
ficom
and
mov
cmp
retf
ja
or
sbb
cli
lock
bound
ret
xor
fisub
pop
dec
in
jp
push
inc
inc
in
movs
shr
pop
sub
test
sbb
jnp
icebp
dec
jbe
test
xor
mov
cld
sub
add
outs
mov
mov
mov
rol
xchg
sbb
jne
jno
cmp
test
out
pop
push
pop
or
cmp
dec
call
dec
pop
lock
fsubr
inc
xchg
add
add
adc
test
mov
sub
jae
call
js
push
hlt
mov
in
ss
mov
(bad)
mov
cmc
repz
ja
sbb
stos
fmul
pop
inc
dec
ret
fisttp
leave
adc
cdq
or
(bad)
push
cs
xlat
hlt
cdq
mov
or
jecxz
pusha
ss
xchg
jo
enter
xchg
push
sub
pop
(bad)
(bad)
and
push
mov
out
and
or
loop
push
out
out
inc
cmp
das
int3
movs
jecxz
popf
(bad)
data16
xor
xchg
inc
pop
mov
xor
sti
in
mov
and
and
inc
rol
or
jmp
xchg
scas
cmp
push
jne
repnz
mov
pop
mov
push
xor
loopne
lahf
pop
inc
shr
adc
hlt
sub
int
in
stos
(bad)
icebp
inc
push
int3
cs
inc
repnz
sub
jle
xor
add
sbb
cmp
jle
jnp
add
mov
jb
leave
rol
in
inc
sbb
in
rcr
cmp
pop
(bad)
(bad)
xlat
adc
add
xchg
cmps
aas
mov
retf
push
push
mov
push
aad
lahf
xchg
out
cdq
and
add
dec
iret
mov
jno
and
shl
jge
test
fadd
xchg
into
loopne
out
pop
mov
sub
psubq
div
out
mov
cmps
ins
mov
ins
sar
test
jb
mov
xor
std
mov
push
(bad)
retf
xlat
jge
imul
xchg
mov
fiadd
ss
push
repz
xor
enter
add
mov
inc
nop
fld
cmc
ins
and
cmp
jle
push
dec
lea
ret
sbb
add
mov
clc
ins
imul
jmp
and
mov
aam
or
fs
mov
jbe
enter
in
jle
xchg
fisub
repz
les
pushf
mov
loopne
cmp
push
mov
pop
jmp
cmps
mov
mov
imul
push
ja
dec
arpl
stos
push
push
dec
retf
loope
pop
mov
xchg
je
jp
(bad)
test
or
out
mov
sub
cmp
cmps
pop
pop
imul
xor
loopne
fcomi
lock
aad
mov
aam
call
pop
jmp
mov
xor
dec
sub
or
fwait
jnp
(bad)
bound
sub
xchg
mov
or
xor
dec
sub
scas
shr
imul
push
fst
aad
adc
dec
sub
repz
fsub
mov
bound
cmp
adc
jmp
jl
in
daa
fsubr
jp
push
pop
out
jp
imul
push
scas
xor
push
pop
fwait
arpl
sub
in
ds
pop
sub
add
jg
pop
movs
push
ins
mov
clc
ror
loope
repz
dec
or
push
adc
loop
std
pop
sahf
call
repnz
push
push
ret
push
pop
sbb
std
cmc
sbb
cmp
adc
or
mov
in
pop
aad
dec
adc
mov
inc
in
out
cmp
(bad)
pop
push
dec
jl
xchg
push
rol
pop
in
icebp
push
movs
push
daa
fcmovnu
cmp
jmp
aad
test
dec
pushf
cdq
xor
sahf
pop
mov
cmps
jnp
pop
cmp
int
sbb
pushf
cmc
fnstenv
jmp
enter
pop
repz
adc
xor
in
push
adc
call
int3
inc
inc
popf
inc
pop
add
popa
dec
xchg
mov
mov
mov
jecxz
daa
ins
fwait
repnz
xchg
add
bswap
push
pop
or
push
or
mov
jae
mov
test
call
xchg
fadd
push
mov
lea
cmps
or
and
inc
xchg
mov
cmc
fucom
fistp
mov
pusha
stc
mov
retf
out
xchg
scas
pop
or
xor
ret
mov
add
dec
and
out
adc
pop
mov
xchg
sub
mov
ins
repnz
dec
mov
xor
mov
ffree
jle
sar
scas
xchg
jl
mov
nop
fs
push
xchg
fsubr
or
mov
ins
in
push
movs
scas
jge
aas
jno
add
adc
popa
pusha
sub
arpl
stos
add
dec
retf
and
cld
adc
or
pop
jnp
scas
hlt
(bad)
jp
add
jbe
loop
mov
and
test
arpl
cli
inc
push
ds
jecxz
addr16
lods
add
dec
xor
cmp
jnp
cmc
jp
and
shl
pop
loopne
jge
ret
call
cld
lea
lahf
and
psubq
cmp
xchg
xchg
outs
add
add
xor
ret
push
enter
out
dec
cdq
xchg
mov
jge
fsubr
sub
inc
mov
pop
pop
push
mov
sub
leave
bound
push
sub
add
inc
rcr
sbb
cmp
sub
pop
mov
shl
(bad)
in
mov
out
jl
rcr
or
jbe
test
adc
test
cmps
jnp
pusha
dec
call
cmc
xor
std
pop
cmp
inc
or
ss
stos
pop
jno
mov
xor
and
mov
outs
mov
mov
jmp
fld
push
mov
mov
addr16
out
mov
fnstcw
pop
add
test
aad
mov
mov
test
mov
call
stc
int3
add
pop
mov
push
mov
fldcw
inc
push
fsub
adc
sar
mov
les
outs
jge
mov
xor
jb
in
and
jl
bound
add
enter
pushf
test
mov
xchg
ins
sbb
cmps
addr16
mov
(bad)
cli
pop
mov
xor
cmp
scas
inc
in
or
dec
es
pop
stos
add
and
fcomp
xor
add
xchg
xchg
mov
inc
fistp
scas
pusha
aad
retf
sti
les
fild
mov
add
jo
call
dec
movs
jge
movs
sbb
dec
hlt
stos
pmaddwd
xlat
xor
sbb
mov
mov
add
push
daa
add
loope
sub
cmp
addr16
adc
iret
out
push
cmps
cmp
sbb
push
cmc
js
nop
jecxz
xchg
hlt
push
mov
mov
movs
and
stc
inc
xchg
ficom
mov
ss
dec
xchg
and
dec
(bad)
jle
dec
inc
out
out
ins
jo
repnz
adc
movs
(bad)
sub
add
nop
and
addr16
mov
mov
inc
mov
xchg
pop
popf
dec
inc
sahf
pop
and
pusha
dec
shl
sbb
sub
or
test
nop
lock
fisub
cs
(bad)
bound
and
pop
sti
inc
dec
push
pop
or
out
xchg
sar
pop
xchg
in
dec
adc
iret
mov
mov
or
mov
xchg
inc
jae
dec
sub
mov
shl
call
mov
inc
int
les
fsubr
out
and
and
test
mov
mov
dec
sbb
stos
imul
jmp
pop
or
pop
icebp
cmps
cmp
push
loop
dec
mov
mov
add
cmp
adc
leave
fs
dec
stc
retf
cdq
cmp
imul
xchg
sbb
outs
xchg
jb
int
jno
dec
push
xor
dec
lahf
outs
push
popa
(bad)
hlt
cli
or
cmp
adc
push
jmp
cmp
ss
mov
mov
push
dec
mov
or
add
lods
loop
retf
mov
ret
nop
in
mov
push
jp
jne
loop
xchg
imul
jb
movs
jge
or
in
mov
into
xor
mov
ror
pop
xor
push
shl
cdq
add
xor
jl
mov
inc
mov
les
mov
cmps
inc
inc
sbb
dec
cli
mov
rcr
inc
push
cs
and
aad
pop
or
sbb
pop
call
sahf
repnz
xchg
jge
xchg
into
cdq
sub
outs
adc
loope
mov
mov
push
inc
sar
(bad)
outs
cmp
sti
mov
outs
out
jmp
test
aas
add
lods
xchg
test
inc
or
shl
push
aad
imul
pop
xchg
and
(bad)
cmps
mov
cmp
push
sub
(bad)
test
jp
imul
out
pusha
push
es
mov
push
jecxz
ins
cmp
fisttp
inc
pop
jg
(bad)
or
xchg
xchg
fs
mov
fs
outs
pop
inc
push
sub
cwde
js
cmp
enter
inc
cli
bound
fs
shl
or
sahf
mov
(bad)
jno
mov
jno
aaa
push
sbb
cmp
cmp
cmp
mov
test
jae
icebp
sub
das
jge
and
data16
lds
xor
dec
int
pop
call
inc
lock
fldcw
jge
sub
loope
or
pusha
nop
adc
and
mov
inc
sub
imul
loopne
enter
xchg
pop
iret
sbb
rcl
dec
idiv
inc
lods
out
xchg
sub
ret
sub
or
sahf
je
inc
mov
adc
dec
jae
xlat
(bad)
cmp
inc
in
and
std
aas
push
jne
mov
aaa
xor
ret
add
sbb
lds
sbb
shr
les
lods
and
cmp
ja
pop
pop
add
loope
aam
popa
imul
add
jnp
shl
push
mov
sbb
jmp
shr
icebp
xor
or
dec
xchg
ds
pop
stos
pop
mov
or
sub
jns
mov
cmp
icebp
cmp
ins
sbb
(bad)
aas
adc
pop
or
inc
jl
out
idiv
loop
mov
pop
ja
gs
dec
mov
add
push
xchg
cmp
jge
gs
retf
test
xchg
cli
push
(bad)
enter
mov
mov
push
std
out
stos
push
in
mulps
jne
push
call
inc
adc
fistp
xor
and
push
add
jge
icebp
mov
ds
fisttp
icebp
sbb
push
or
jnp
mov
test
imul
ja
add
mov
jmp
ins
ror
push
or
dec
push
jmp
ret
ror
sbb
pop
sub
sbb
sub
adc
sbb
je
dec
or
leave
sub
ds
test
inc
movs
(bad)
arpl
test
sbb
jbe
mov
xchg
ret
(bad)
push
lea
mov
mov
inc
ja
push
cmps
je
lock
mov
pop
lods
inc
hlt
popa
fbld
xchg
stos
mov
das
jl
cs
lds
lds
mov
cmp
adc
push
jmp
cld
cli
scas
add
xor
pop
rcr
ins
cmp
push
push
push
pop
add
mov
stos
add
sar
das
adc
out
je
pop
sbb
int3
fst
sbb
dec
jp
xchg
sbb
adc
mov
xchg
cmps
test
pop
imul
movs
inc
ret
push
hlt
popf
test
pop
xchg
in
cli
movs
mov
fwait
arpl
outs
rol
xchg
xor
push
test
int3
adc
pop
add
scas
sbb
div
xchg
xchg
jmp
test
adc
xor
xor
add
test
cld
and
xor
and
push
jb
sub
in
or
pop
aas
jns
out
jns
jmp
addr16
dec
idiv
jecxz
sub
js
scas
les
popf
fwait
clc
shr
mov
cmp
inc
(bad)
sbb
jg
bound
rol
pop
scas
xor
cs
je
lds
sbb
cmc
sbb
mov
les
scas
test
push
mov
outs
les
aaa
push
xor
sub
in
mov
dec
sub
(bad)
sub
loopne
add
dec
icebp
popf
inc
mov
pop
loope
mov
out
fld
pushf
lahf
mov
icebp
and
jle
lds
inc
push
imul
push
(bad)
or
mov
cmps
dec
or
fsubr
daa
sub
add
push
and
lds
out
iret
and
fdivrp
mov
ret
mov
jp
push
inc
and
xor
xor
adc
or
aad
test
ja
lock
xor
xchg
jns
(bad)
movs
or
(bad)
into
xchg
ror
(bad)
repnz
xor
pusha
push
dec
push
popa
shr
mov
pop
lea
aam
cwde
and
add
ror
add
or
popa
jne
add
(bad)
clc
push
inc
test
in
push
jle
pop
mov
mov
fwait
call
mov
je
ins
mov
mov
cmps
dec
vpcmpeqb
adc
xchg
mov
xor
or
imul
xor
cmps
lods
mov
pop
mov
sub
inc
adc
cmp
sar
add
sahf
cld
add
jmp
adc
rcr
mov
ins
in
sbb
stos
cmps
pop
and
clc
jbe
push
es
and
or
jmp
test
clc
xor
test
push
push
xchg
outs
mov
ret
sub
cmp
push
leave
xor
daa
loope
cmp
xor
jecxz
outs
mov
fcom
shr
out
ja
mov
cld
int3
cli
jbe
push
inc
cmp
retf
mov
push
aam
or
aam
fdiv
repnz
in
sbb
pop
mov
inc
jbe
ret
lock
jle
push
sti
cdq
inc
lods
sbb
mov
js
push
psubusb
cmp
in
adc
mul
jp
bound
xchg
mov
add
or
mov
out
sub
and
stos
inc
stos
aas
mov
xchg
(bad)
fld
xor
or
pop
adc
dec
mov
sahf
push
inc
push
fxch
out
and
mov
outs
loop
cmps
out
movs
add
punpckhbw
(bad)
out
fisub
mov
outs
sbb
fcomp
stos
or
jne
inc
mov
pop
adc
cmp
cmp
dec
push
mov
jge
sub
push
mov
mov
cwde
and
pop
dec
(bad)
xchg
test
jge
xchg
pop
(bad)
xchg
aad
aas
xor
aad
fsubr
arpl
add
je
and
into
xchg
out
sub
call
cmp
mov
jp
in
fs
or
hlt
retf
mov
cmp
out
push
cli
jmp
cld
push
jmp
inc
inc
stos
and
adc
push
fist
jb
or
xlat
jmp
retf
ss
fdivp
dec
pop
mov
pop
jle
add
add
push
jbe
stos
out
xor
push
movs
or
pushf
stos
out
and
and
stc
add
js
popa
mov
cwde
out
test
fnstenv
add
iret
jnp
test
repnz
xor
or
lea
push
ret
push
pop
jno
pushf
dec
iret
shr
test
es
cld
jb
push
popa
hlt
adc
add
cs
clc
xor
cdq
jne
add
dec
or
add
mov
push
sub
cmp
sbb
int
cmp
or
imul
push
adc
stos
pushf
inc
ins
push
sub
mov
jg
mov
inc
add
pop
adc
or
jg
retf
jg
neg
sbb
cdq
imul
xchg
push
dec
inc
imul
inc
fmul
out
push
push
pop
out
pop
or
dec
pusha
rcl
cli
jb
adc
pop
addps
sub
enter
jge
pop
mov
test
mov
lahf
pop
hlt
jp
test
std
mov
ds
jmp
scas
and
out
and
fcomip
jmp
popa
adc
retf
int3
adc
jl
in
pop
fwait
and
xor
xchg
add
out
cli
mov
clc
fld
push
xlat
jno
std
dec
stc
fchs
add
nop
xchg
hlt
mov
dec
jle
mov
leave
inc
push
mov
mov
pop
outs
sub
push
jg
nop
sub
arpl
add
adc
xchg
xchg
dec
cmp
mov
test
(bad)
loopne
out
jp
(bad)
jo
sbb
jbe
sti
push
test
ret
xlat
cli
mov
sbb
bound
add
xor
xor
js
stos
in
in
mov
jne
and
or
inc
ret
mov
jmp
(bad)
sbb
cmps
shl
imul
xor
or
je
inc
pop
inc
rcl
mov
adc
ins
mov
cmp
jl
mov
sbb
dec
nop
loopne
out
sub
mov
mov
and
and
fld
cmp
(bad)
add
cmp
js
mov
cmc
int
(bad)
rcr
ins
repnz
jg
push
sub
mov
fnstenv
ror
mov
sub
add
cmp
loope
scas
aas
mov
cmps
test
dec
shr
cmp
iret
lods
fwait
mov
fadd
test
xor
cwde
inc
retf
push
in
out
push
pop
sti
push
and
push
test
push
fsub
pop
retf
jl
int
inc
aam
xchg
ins
std
inc
into
lds
rcl
adc
imul
mov
mov
popa
pop
pop
or
data16
inc
cmp
mov
cmp
mov
sbb
repnz
and
outs
cmp
call
mov
jb
repz
hlt
push
push
jae
dec
sbb
jmp
inc
lds
retf
cmp
mov
sahf
into
xor
repz
cmp
les
mov
fsubr
xchg
outs
adc
push
pusha
xor
scas
or
mov
daa
jp
stos
repz
xchg
pop
das
mov
in
xchg
data16
pop
psubq
and
cmp
xchg
in
mov
xor
dec
xor
jo
jno
mov
mov
xlat
mov
xchg
pop
shr
aam
xchg
jmp
pop
xchg
mov
fs
pop
xchg
add
out
fdivr
adc
cmps
jle
jmp
or
mov
addr16
xchg
and
cmps
and
xlat
(bad)
std
jae
or
or
push
push
sub
movs
sub
jns
or
and
stc
fwait
push
sbb
mov
(bad)
cmp
inc
xor
retf
clc
movs
xor
lods
or
in
ins
retf
test
lods
popa
xchg
mov
or
adc
adc
aas
lock
enter
sub
and
loop
cmovb
enter
pop
stos
scas
scas
popa
mov
das
(bad)
shr
mov
sbb
mov
push
mov
dec
std
jle
lock
mov
fnstcw
popa
jl
int
jne
mov
dec
je
xchg
(bad)
mov
mov
cmp
mov
dec
ss
mov
inc
fldcw
pushf
div
xchg
sbb
lods
push
mov
outs
add
popf
xchg
mov
mov
(bad)
mov
cld
aad
push
icebp
icebp
jo
in
dec
pop
xor
cdq
xor
push
jp
imul
sub
cmp
int3
(bad)
dec
(bad)
fwait
push
dec
mov
(bad)
outs
mov
gs
sar
test
in
mov
gs
xchg
mov
jae
sbb
neg
dec
cdq
mov
mov
sub
push
cdq
push
loop
cmp
aaa
cli
mov
in
xor
sub
jae
add
mov
push
sub
mov
sub
(bad)
cld
stc
loopne
sub
addr16
pop
int3
push
sti
xchg
cdq
sbb
mov
mov
xor
xor
add
sub
pop
shl
inc
add
and
mov
rol
sub
ins
in
fwait
inc
pop
imul
loopne
cs
fdiv
pop
stos
icebp
hlt
sbb
adc
nop
test
inc
call
xlat
icebp
cld
aad
mov
xor
std
out
and
and
icebp
movs
fidivr
mov
sub
push
jne
lods
sbb
pop
pop
icebp
fisub
add
pushf
push
je
sahf
cmps
dec
js
loope
clc
add
popf
lods
pushf
or
xchg
push
dec
push
inc
xchg
push
dec
jmp
(bad)
iret
out
push
mov
dec
mov
loop
push
sar
jg
cmp
cmp
mov
mov
pop
xchg
pop
and
cld
sahf
ins
mov
or
pop
xlat
mov
shr
out
mov
mov
mov
add
and
or
lahf
jno
outs
add
jg
lock
xor
adc
gs
mov
call
mov
fwait
xchg
imul
out
mov
pop
xlat
pop
cmp
cdq
add
pop
sbb
or
inc
cmp
push
cmps
cmp
and
push
jmp
cli
jbe
addr16
lea
clc
or
(bad)
jnp
mov
lahf
out
push
or
xor
pop
and
test
adc
nop
inc
jl
mov
jae
enter
and
pop
shl
aam
ret
adc
or
mov
leave
xchg
sbb
rol
adc
mov
lods
or
mov
jnp
sub
icebp
xchg
sub
dec
xor
sti
cld
sbb
loop
fdiv
out
push
xor
test
nop
push
ficomp
fnsave
or
dec
pop
ror
inc
or
pop
cdq
pop
inc
ficomp
push
xchg
adc
mov
xor
in
xor
pop
ret
add
(bad)
jmp
gs
mov
aad
add
inc
and
and
sbb
movs
lods
cdq
fld
sub
cmp
(bad)
push
mov
std
int
xor
xchg
aaa
sbb
push
jo
(bad)
mov
sub
int3
push
xchg
push
rol
std
rcl
adc
cdq
and
int
xchg
sub
cmp
dec
push
leave
into
or
adc
retf
cld
or
js
out
cmps
sbb
and
je
jmp
retf
out
adc
inc
out
pop
sti
(bad)
sub
sar
loope
pusha
sahf
adc
sub
jbe
or
lds
rol
out
mov
dec
cli
cmps
int3
cmp
xchg
jg
iret
jp
and
mov
add
fisubr
xchg
inc
or
pop
pop
xchg
xchg
daa
movs
ins
cmp
ror
ins
hlt
int
call
mov
aad
shl
and
iret
in
clc
cmp
gs
cmp
inc
mov
in
xor
dec
or
and
mov
dec
adc
xor
inc
add
std
in
jle
lock
rol
mov
mov
rol
dec
cli
jl
jp
push
mov
jne
mov
dec
fild
cmp
in
ins
ds
dec
push
or
mov
rcr
ins
mov
cld
ror
unpcklps
mov
les
and
sub
(bad)
fild
outs
shl
mov
test
or
push
pop
dec
push
sub
call
push
(bad)
mov
xor
repnz
(bad)
cmp
std
test
pop
out
lods
mov
pushf
pop
push
mov
lock
mov
jecxz
daa
bound
mov
xchg
inc
xor
pop
or
mov
or
xor
jecxz
(bad)
jg
dec
sbb
outs
sar
inc
mov
mov
push
stos
or
arpl
sub
imul
outs
and
popa
and
xchg
mov
fs
(bad)
popa
pop
cmp
jo
movs
in
sbb
mov
add
xchg
es
inc
jmp
outs
mov
jle
pop
call
(bad)
aaa
cdq
lahf
and
stos
push
fwait
addr16
cmc
(bad)
pop
sbb
out
popf
fnstcw
inc
(bad)
(bad)
mov
cmps
mov
int3
stos
dec
add
jne
mov
push
fdiv
cmp
sub
outs
cmps
jb
dec
sti
cmp
loope
std
push
inc
out
shr
mov
pusha
pop
and
push
sbb
mov
push
mov
jno
stc
stos
mov
xchg
pop
dec
adc
out
ror
fisub
fwait
popf
xchg
cmps
mov
test
loop
add
push
in
sbb
or
sahf
xchg
test
fidivr
jne
popa
dec
jns
inc
cmp
int
dec
out
ret
inc
movs
lahf
in
stos
adc
mov
lods
or
push
or
scas
or
add
and
push
and
rcl
dec
jg
pop
xchg
dec
sub
dec
inc
shl
and
ins
out
pop
repz
in
lods
or
mov
les
fistp
les
in
pusha
stc
and
dec
jge
aam
out
and
rcr
xor
push
mov
lea
das
push
retf
sti
shl
xchg
lds
xchg
lods
repz
outs
retf
adc
cs
or
xor
aam
xchg
sub
test
pop
jb
fs
add
fdivp
xlat
push
cmp
xor
bound
jno
nop
and
sar
push
and
mov
xor
leave
pop
gs
js
sbb
push
out
mov
mov
adc
sbb
scas
sti
xor
dec
cwde
mov
sbb
xchg
fwait
scas
jmp
mov
xchg
ret
imul
mov
sub
jle
ja
pop
dec
sahf
inc
ret
loope
aaa
not
movs
retf
mov
dec
lock
jne
out
jp
mov
(bad)
lahf
cli
das
jl
jmp
push
das
popf
test
and
sub
xchg
push
mov
adc
ret
lock
(bad)
xor
ins
pusha
sbb
gs
ins
mov
sub
in
jmp
fldenv
mov
push
shl
movs
inc
mov
call
cmp
sub
push
pop
adc
test
adc
jle
test
pop
js
jne
pop
lock
lds
repz
pop
sub
dec
out
mov
ins
sub
and
in
cdq
sbb
fst
ins
adc
push
iret
inc
inc
dec
(bad)
cmp
jp
les
shr
imul
fdivr
test
jmp
in
xchg
xor
in
jae
test
test
xor
mov
add
je
sub
mov
cmp
ret
cld
inc
gs
aaa
xchg
sub
push
ror
(bad)
pop
dec
mov
jns
not
jne
cld
jecxz
lock
sbb
jne
ror
push
sbb
inc
push
je
adc
in
xchg
out
pop
scas
push
lds
jle
jp
push
mov
xchg
adc
mov
push
xchg
or
mov
js
jb
mov
in
sbb
pop
rcr
pop
jl
and
mov
jg
and
or
fldcw
int3
push
stos
arpl
fstp
je
std
pop
into
(bad)
adc
sbb
mov
int
ja
lock
mov
push
call
shr
dec
ins
popf
sahf
sub
jmp
jae
shr
inc
shl
jecxz
mov
xor
and
or
pop
int3
fisub
mov
aam
cmp
aam
(bad)
aad
mov
jle
fcmovb
popa
add
outs
iret
(bad)
je
in
jmp
and
adc
cmp
inc
loop
push
aas
bound
icebp
xchg
dec
cli
cmp
fidivr
hlt
jo
(bad)
aaa
pop
es
mov
push
jl
add
xor
sub
clc
cmp
enter
mov
gs
(bad)
xor
mov
(bad)
(bad)
and
or
add
dec
fld
ret
or
pop
adc
pusha
dec
push
pop
push
sbb
push
gs
dec
xor
aad
mov
dec
test
and
push
outs
outs
fdivr
ins
loope
mov
fnsave
test
ret
xor
out
sbb
sar
pop
fmul
pop
inc
rcl
lods
or
outs
and
je
cwde
rol
pop
cmc
mov
add
adc
push
add
movs
ds
mov
pop
jmp
test
cld
push
mov
sahf
mov
adc
ins
in
dec
add
fistp
xchg
fwait
jp
ins
pushf
push
sub
ins
pop
lds
cmps
xchg
and
mov
xchg
push
inc
popa
sub
loop
add
in
imul
cmc
mov
(bad)
mov
mov
sub
and
sbb
mov
fldenv
jbe
leave
jb
retf
loopne
dec
dec
arpl
push
scas
icebp
adc
push
add
fwait
lods
mov
test
les
lahf
adc
xchg
add
cmps
jnp
jo
cmp
mov
add
jge
shr
fndisi(8087
add
mov
pop
popa
sar
or
loope
test
aas
hlt
nop
inc
mov
cmp
pop
popa
fwait
and
call
xchg
dec
mov
ins
sti
cmc
std
icebp
sbb
std
es
(bad)
jns
mov
loop
jo
int
pop
jmp
es
(bad)
pushf
in
cmps
sbb
pop
cs
sbb
xor
pop
push
shl
dec
cmp
sub
clc
or
popa
popa
mov
sub
shl
test
jo
icebp
jecxz
hlt
cmps
inc
push
mov
mov
outs
mov
(bad)
test
xchg
sub
mov
cs
xchg
push
enter
sub
adc
push
mov
(bad)
es
pop
jno
retf
mov
(bad)
daa
push
xchg
push
scas
pop
das
add
push
push
xchg
popf
(bad)
cli
cmp
mov
je
test
cwde
(bad)
aam
std
sub
test
and
or
mov
(bad)
jmp
hlt
add
repz
cld
add
dec
aad
cmp
or
or
jno
out
add
jae
mov
xchg
in
lahf
push
jl
jge
add
xchg
cdq
daa
hlt
or
xchg
push
in
rcr
out
enter
mov
mov
add
bound
dec
inc
sub
imul
jmp
cs
push
inc
std
or
test
xor
fisub
int
loopne
dec
not
jne
nop
mov
or
xchg
leave
pop
hlt
out
pop
xor
push
cmp
mov
fisttp
cmp
xchg
(bad)
cli
out
test
imul
jno
add
sbb
mov
adc
out
call
fs
xor
push
inc
es
and
int
outs
add
xchg
mov
xchg
fbstp
imul
adc
xchg
pop
cmp
repz
cmp
push
sbb
test
jbe
adc
pop
out
mov
inc
(bad)
jmp
pushf
mov
inc
mov
retf
retf
pop
dec
push
push
sub
xchg
mov
movs
sbb
push
movs
popf
add
pop
cmps
jecxz
out
inc
test
(bad)
neg
dec
or
imul
mov
jecxz
(bad)
loop
lahf
shl
nop
push
loop
cld
jp
dec
mov
pushf
fstp
fcomp
shl
(bad)
cmp
addr16
pop
adc
xor
shl
xchg
jne
push
sub
pop
push
in
dec
adc
das
hlt
adc
sar
movs
adc
in
aas
and
movs
mov
and
fidiv
and
scas
and
cmp
push
adc
test
les
fimul
sub
push
popa
sub
add
ret
pop
adc
data16
stos
call
ror
mov
(bad)
cli
neg
mov
jmp
sbb
xchg
xchg
je
xlat
frstor
scas
jns
dec
cmp
push
(bad)
mov
dec
pop
push
(bad)
pushf
fst
std
scas
add
and
xor
aam
cwde
es
push
aas
out
sti
add
sub
push
xor
mov
push
movs
lds
push
jae
stos
mov
mov
cld
icebp
push
mov
mov
adc
and
pop
and
pop
and
not
icebp
pop
jmp
in
sar
xor
cmps
jmp
scas
jbe
cmp
out
or
sti
cwde
pusha
inc
jne
and
or
dec
mov
push
rcl
outs
xchg
std
ror
mov
cs
aaa
cmp
lods
outs
lock
aad
jno
mov
mov
dec
dec
dec
call
adc
cmps
fst
add
add
sub
arpl
shr
mov
mov
xchg
add
mov
int3
ins
ret
xchg
mov
push
or
sub
fsubr
hlt
mov
xor
push
not
cmps
rcl
fcom
loope
xor
movs
in
retf
mov
mov
push
xchg
jp
dec
mov
loop
cmp
call
cs
mov
add
jg
and
jne
mov
popa
rcr
xor
push
sbb
mov
icebp
pop
fimul
fisttp
add
adc
mov
stc
fld
push
cdq
sub
les
lods
in
sub
and
ret
xor
xchg
mov
sub
jo
fwait
cmp
cmp
adc
and
mov
test
imul
inc
cmp
outs
neg
test
push
call
xchg
out
sub
lds
add
int
pushf
lock
adc
das
(bad)
add
xchg
pusha
ss
xchg
cmovae
mov
mov
in
retf
test
cmps
mov
icebp
arpl
mov
dec
clc
pop
gs
aaa
push
cli
or
inc
test
xchg
add
jns
push
lods
mov
call
shl
mov
daa
xchg
pop
cmp
pop
pop
cmpps
xor
jmp
or
jge
mov
sub
bound
mul
jg
in
jl
mov
scas
pop
pop
mov
shr
sti
lds
rol
jmp
repz
sub
cli
in
pop
mov
fcomp
cs
mov
sbb
mov
sti
in
cdq
xor
scas
xchg
movs
add
pop
sbb
and
dec
pop
fs
sub
push
arpl
test
sub
(bad)
pop
xchg
lock
xor
(bad)
int3
or
ror
mov
inc
in
in
push
dec
adc
mov
scas
test
out
int3
loop
push
int3
sub
clc
or
jg
sub
and
or
cmp
jne
inc
push
std
fld
pop
adc
jno
jae
call
loop
dec
pop
push
(bad)
lahf
or
mov
or
das
push
test
dec
mov
movs
cmp
js
leave
mov
test
cmp
mov
callw
xor
cli
aam
sti
fild
inc
jmp
(bad)
push
cwde
call
sbb
or
out
test
pop
sar
sbb
pop
push
mov
and
push
cmp
jbe
test
jge
icebp
fmulp
dec
es
dec
stos
and
jmp
stos
mov
stos
xor
dec
idiv
outs
inc
gs
leave
add
mov
sbb
adc
ja
cdq
mov
jmp
or
sub
lods
push
pop
mov
inc
aaa
inc
add
xor
gs
and
mov
enter
xor
in
int3
xchg
adc
fist
ss
sub
sahf
cmp
xchg
xchg
test
mov
imul
repz
mov
push
movs
pop
test
jne
sbb
sbb
xor
enter
dec
push
cdq
and
aad
outs
mov
es
out
mov
mov
sbb
xor
imul
stos
sub
aas
scas
sub
mov
(bad)
in
or
ret
test
mov
fnstenv
jno
jbe
adc
jg
push
xor
push
in
xchg
arpl
xchg
movs
cmp
mov
fsubp
mov
jmp
movs
out
pop
vmovntps
ret
es
(bad)
cs
mov
xor
mov
cmp
mov
fidiv
push
movs
rol
or
js
and
and
pushf
cmp
add
sub
icebp
xor
gs
arpl
jmp
mov
sub
pop
movs
cmps
fimul
xlat
or
jnp
test
or
mov
js
jecxz
inc
push
popa
jp
int
int
test
cmps
rol
lds
add
sub
rcr
int3
movs
(bad)
or
xor
or
ins
int3
test
xchg
and
out
les
add
sub
fidiv
xchg
lea
xchg
xor
enter
xchg
sub
mov
mov
je
lods
jecxz
mov
cmps
out
(bad)
repz
or
jae
or
movs
cmp
mov
pop
rol
outs
dec
ss
cmp
test
jmp
out
cmp
out
fwait
test
fisttp
(bad)
mov
jne
retf
pusha
(bad)
int3
jnp
and
sub
int3
retf
xchg
in
enter
call
xchg
(bad)
std
mov
jmp
push
retf
movs
jmp
inc
add
loopne
xor
stos
inc
ror
out
stos
xchg
mov
ret
or
cs
aaa
(bad)
push
jb
push
and
aam
mov
sub
adc
dec
jne
ss
add
popa
lds
sbb
pop
mov
or
fdiv
mov
test
inc
test
gs
movs
jecxz
xchg
cmp
stos
in
sar
xchg
ds
stos
mov
outs
add
ret
xor
and
idiv
stos
aaa
inc
stos
push
jge
aaa
push
inc
pop
mov
and
inc
jle
push
gs
and
test
inc
push
sub
jg
ficomp
push
sub
xchg
shl
daa
sbb
sahf
add
jecxz
pop
mov
scas
xor
xchg
add
mov
sbb
arpl
or
inc
sbb
icebp
pop
movs
inc
fwait
add
in
jle
mov
frndint
cld
(bad)
and
jle
arpl
mov
mov
xchg
ret
dec
call
js
jge
scas
loop
aas
gs
mov
or
xor
add
pushf
push
stos
dec
add
test
cmp
int
inc
(bad)
out
or
pop
sbb
xchg
cmp
sbb
xor
dec
sbb
scas
std
bound
cs
scas
lahf
fcmovne
mov
(bad)
mov
fmul
sub
push
mov
jnp
jle
push
xchg
ja
cli
int
or
cmps
mov
in
sub
outs
sbb
or
jno
sbb
inc
push
in
sar
add
inc
mov
xchg
dec
scas
add
mov
pop
addr16
mov
inc
inc
jg
movs
xor
pop
jo
jae
inc
sub
fnstenv
dec
pmaxub
rcl
add
sbb
sbb
pop
or
arpl
dec
lahf
mov
fsub
mov
fmulp
sub
mov
mov
sahf
pop
inc
push
test
mov
iret
cmc
fcmovnu
ins
adc
push
popf
sbb
aad
ins
mov
imul
dec
fcmovnu
(bad)
or
ret
popa
int
ins
jge
in
or
call
dec
mov
les
inc
into
pop
test
or
gs
xor
(bad)
push
push
mov
and
push
push
sub
dec
jg
jge
inc
sbb
das
std
mov
cld
sub
push
rcl
jb
out
sar
(bad)
(bad)
les
mov
mov
(bad)
imul
outs
mov
mov
adc
or
mov
mov
in
inc
shl
mov
(bad)
aam
icebp
test
add
(bad)
push
push
(bad)
lds
repz
or
ja
(bad)
aas
sti
js
repnz
pop
xlat
imul
mov
call
fisttp
(bad)
leave
or
or
clc
shr
jl
imul
(bad)
enter
jmp
add
jbe
stos
shl
jl
rol
imul
je
push
xor
lds
es
xor
jl
cmp
mov
pop
mov
ss
test
fcomi
ds
in
fucom
stos
sahf
ficomp
rcr
cmp
and
shl
cmc
jmp
gs
out
push
or
xor
pop
js
in
pop
es
jl
movs
test
inc
rol
fwait
ins
push
push
jb
out
rcr
mov
ins
jb
mov
xchg
sbb
xchg
lds
push
dec
and
ja
imul
mov
pushf
stos
repnz
outs
mov
or
(bad)
mov
ret
imul
mov
scas
sahf
sbb
add
and
int3
add
fidiv
ret
cs
dec
aam
retf
dec
inc
les
popa
je
xchg
mov
and
neg
mov
(bad)
shl
movs
adc
out
out
ins
dec
ins
mov
int
(bad)
ins
aam
rcl
jmp
push
fdiv
cmp
test
jecxz
jb
sub
jmp
maxps
push
jno
xchg
pushf
fld
xchg
jle
jb
or
pushf
fwait
and
stos
fcmovnb
jmp
mov
mov
mov
pop
enter
imul
in
push
cwde
stc
mov
fs
sbb
pop
xlat
push
cmp
dec
aad
or
rcr
call
pop
lock
leave
dec
lods
mov
inc
scas
sbb
jno
jb
adc
push
rol
adc
sub
cmp
adc
adc
pop
lods
dec
or
xchg
test
ds
xor
je
sahf
xchg
aaa
call
lea
inc
pop
push
push
dec
push
sub
cwde
(bad)
gs
cmps
out
es
pop
lahf
inc
sub
mov
mov
es
mov
fdivr
mov
stos
sub
out
out
adc
les
cmp
mov
and
mov
call
dec
inc
in
jecxz
test
fcmovbe
cmp
iret
fwait
out
adc
mov
outs
fisub
fdiv
dec
rcr
dec
xchg
cli
test
fst
in
fcomp
cmp
push
push
cmovbe
mov
dec
mov
aas
fild
cli
jb
sub
mov
jae
inc
das
fimul
or
fcom
dec
push
jmp
gs
and
js
inc
mov
adc
sub
mov
mov
mov
loope
out
fst
push
jo
in
xor
les
mov
xchg
mov
mov
mov
sub
mov
enter
adc
jge
call
fstp
hlt
dec
pop
xchg
fstp
cmp
push
adc
or
mov
add
mov
xor
loopne
mov
xor
pop
sub
pop
mov
int
popf
and
leave
gs
push
popa
fdiv
push
jge
xchg
repz
push
xor
neg
into
mov
repz
mov
retf
and
push
cli
xchg
adc
into
imul
cli
shr
inc
imul
rcl
inc
push
nop
test
ror
xor
test
jbe
mov
rol
inc
test
pushf
cmp
dec
and
lea
sub
or
lods
add
cld
daa
mov
arpl
push
out
or
jo
xchg
pop
ret
sub
lods
mov
sbb
repz
mov
jl
xchg
mov
cmp
cli
fcomp
mov
xchg
inc
push
cli
in
fild
retf
xchg
cli
cmp
jmp
add
into
jmp
and
sbb
sbb
ror
outs
push
dec
mov
sbb
push
(bad)
pop
jns
push
sbb
mov
add
enter
out
in
into
cmc
add
sub
ret
inc
or
mov
inc
rcl
cmp
add
test
movs
loop
ins
retf
mov
inc
mov
xor
sub
dec
lea
pop
jmp
lea
xchg
xor
neg
and
pop
mov
ret
jl
and
jne
xchg
ror
dec
enter
adc
cmp
into
xor
stos
xchg
addr16
dec
nop
push
inc
fnstcw
mov
pop
cmp
lahf
inc
std
ins
jbe
mov
(bad)
in
lods
cmp
and
push
xchg
adc
and
out
popf
jb
mov
mov
cld
sub
ret
movs
mov
in
mov
or
jmp
popf
mov
loopne
mov
push
(bad)
lods
dec
stos
aaa
xchg
adc
retf
sub
inc
push
ficom
push
cmc
dec
sub
sbb
push
or
xchg
cmc
sti
jg
cmp
cmp
ds
cmc
(bad)
icebp
aas
mov
mov
lods
sbb
aas
mov
dec
sbb
xchg
push
push
outs
mov
inc
sbb
mov
in
stos
cmps
and
dec
xchg
aaa
mov
add
sbb
adc
xchg
mov
jl
add
push
in
cld
icebp
xchg
pop
jp
lahf
repz
fisttp
hlt
pop
int3
cmps
inc
and
std
push
mov
fsubr
adc
movs
shr
jno
pop
cmp
int3
scas
(bad)
dec
add
popa
mov
adc
jle
sub
test
lahf
mov
ret
nop
push
mov
sti
pop
ret
leave
jmp
imul
dec
xchg
imul
pop
inc
jle
jmp
sbb
outs
mov
add
out
out
push
and
mov
pusha
cli
mov
shl
in
xor
xor
ret
dec
mov
js
jae
inc
leave
ss
outs
neg
and
dec
dec
push
and
fistp
lods
into
fld
es
sbb
aaa
cmp
xchg
lock
cmp
xchg
ss
sub
rcr
fnstsw
popf
out
repnz
hlt
ins
fwait
sti
fcomp
adc
test
ja
add
shl
push
xor
dec
inc
cs
sub
cmp
nop
lock
push
cmp
fwait
jmp
xchg
pop
xor
sub
pop
sbb
mov
pop
sub
jmp
fmul
sub
pop
in
pop
push
mov
push
fmul
push
xchg
pop
xchg
dec
inc
movs
outs
or
mov
and
add
fmul
cld
iret
jmp
loop
aas
hlt
inc
xchg
dec
add
mov
cwde
push
push
js
mov
adc
movs
xor
sub
ja
adc
bound
cld
jge
inc
or
sbb
out
and
std
sbb
jns
fld
mov
dec
repz
enter
push
xor
inc
adc
sbb
nop
jns
mov
stos
sub
sbb
pop
stos
jge
mov
das
jl
imul
sub
pusha
add
loop
icebp
jle
test
int3
repz
ins
repnz
test
int3
call
xor
mov
fnstsw
cld
retf
xor
outs
sbb
clc
sub
nop
jne
in
adc
sti
lods
adc
pop
mov
scas
rcl
cmc
xor
mov
test
cmps
or
imul
(bad)
cmp
movs
push
in
pop
push
sbb
fsub
stc
loopne
or
and
out
inc
sub
push
or
pop
cmp
xchg
pcmpeqb
outs
xor
aaa
cmc
and
clc
mov
enter
push
gs
fistp
ins
sub
ss
repz
call
adc
xor
push
pop
(bad)
aas
enter
shl
xchg
in
inc
enter
xlat
dec
jno
jge
aad
test
inc
xchg
push
mov
xor
fs
cmp
xchg
in
clc
pop
(bad)
fcomp
sub
inc
xor
dec
inc
rol
lea
jno
or
jmp
mov
cmp
or
inc
aaa
xchg
shl
dec
xor
aam
jge
es
mov
ret
jl
inc
addr16
add
and
jb
hlt
add
mov
push
push
call
xchg
imul
outs
push
xor
pop
sbb
xor
(bad)
int3
pop
cmc
jecxz
jo
dec
adc
ret
inc
jb
sbb
cmc
scas
mov
jae
pop
pop
xchg
add
(bad)
lock
dec
addr16
lahf
fild
jns
lods
inc
in
jmp
fcmovbe
outs
xchg
jne
pop
neg
gs
cmc
sbb
ins
mov
out
mov
lods
inc
fdivr
je
out
fs
jne
mov
bt
ret
enter
and
inc
fisttp
mov
sub
fdiv
jb
sbb
and
and
enter
xchg
out
mov
sub
test
retf
xor
in
stc
mov
push
dec
xchg
xchg
push
gs
jbe
xchg
lahf
(bad)
xor
mov
in
call
cmps
cmp
push
mov
aam
(bad)
in
adc
outs
jle
add
or
or
push
ins
inc
sbb
pop
cmp
imul
jmp
repz
rcr
cmps
test
push
aaa
push
mov
and
mov
(bad)
lds
sbb
mov
mov
adc
lea
and
inc
aad
aad
imul
call
adc
adc
and
ret
cmp
ror
mov
or
repnz
push
pop
cdq
xchg
lods
lea
inc
or
pusha
stos
pop
xchg
jbe
push
jecxz
rol
xchg
sub
xor
pop
mov
rcr
cdq
into
test
cmp
mov
outs
call
je
dec
jle
inc
jns
iret
jle
imul
xchg
out
jo
push
cld
popa
je
call
mov
das
or
call
imul
lock
sub
sti
sets
and
adc
out
ins
push
jae
scas
push
and
call
out
dec
mov
iret
js
out
imul
jmp
cli
xor
retf
mov
movs
ret
(bad)
shl
rcr
mov
ja
xor
js
and
xor
or
std
cmp
and
pop
jo
dec
xchg
std
hlt
les
and
mov
lods
sub
lahf
xchg
adc
and
or
call
inc
pop
sbb
jmp
shl
mov
pop
test
cmp
sbb
xchg
loopne
adc
aad
sar
xchg
jle
jo
adc
scas
fstp
or
xor
in
push
mov
lea
and
pusha
jae
sbb
cmp
xchg
sbb
sar
pop
xchg
cdq
repz
jp
adc
mov
xor
pop
cmps
and
sub
inc
pop
jmp
fisttp
adc
in
sbb
cmp
popf
mov
(bad)
in
stos
repnz
addr16
xor
or
lea
add
stos
add
sahf
and
enter
js
jle
int
mov
test
xchg
xor
push
popa
retf
pop
not
pop
test
mov
mov
call
in
(bad)
mov
xor
shr
dec
sub
aaa
adc
dec
mov
add
hlt
lock
inc
ret
jnp
jp
stc
ss
ss
sub
mov
mov
fmul
adc
scas
daa
jg
ja
add
mov
cmps
shl
pushf
(bad)
adc
iret
imul
ror
push
gs
push
push
add
sar
sbb
neg
std
fst
and
push
fidiv
cmps
add
jp
push
(bad)
sahf
mov
add
div
shl
adc
ret
cwde
dec
nop
adc
fdiv
cmps
or
mov
and
and
push
shl
clc
sbb
rcr
je
push
inc
clc
rol
mov
gs
rol
xor
or
sbb
jo
in
in
push
and
imul
mov
sbb
cld
or
and
jg
jno
stos
mov
xor
shl
jle
xchg
mov
and
sub
mov
push
sub
rcr
fadd
scas
out
pusha
iret
adc
inc
sbb
out
mov
pop
push
and
pop
jb
and
sub
dec
sub
sti
leave
scas
out
mov
(bad)
cmp
out
cs
xchg
out
lods
out
xchg
sti
lea
call
les
sbb
push
ss
mov
data16
shr
retf
fcmovu
test
xor
std
or
and
xor
cmp
mov
mov
dec
add
fbld
ffree
adc
ds
mov
mov
dec
mov
in
icebp
(bad)
hlt
mov
cmp
jo
daa
pop
jno
cmp
mov
push
push
sbb
ja
outs
xor
add
cmp
mov
in
cmp
add
adc
or
push
mov
and
pop
push
es
mov
iret
mov
xor
mov
xor
hlt
cmp
sbb
popa
out
mov
cmp
sbb
push
test
jae
(bad)
call
gs
popa
popa
fsub
loop
jmp
lods
sar
inc
ret
mov
mov
xchg
sti
jbe
gs
es
aad
mov
stos
cmp
xor
fldenv
push
lds
out
push
cdq
retf
(bad)
fnsave
jge
out
sahf
xchg
lock
and
xor
cmp
popa
xchg
fnstcw
jae
jo
jp
fnstcw
pop
xor
push
sub
xor
(bad)
cmp
jne
fild
xor
call
inc
cmp
pop
js
shl
retf
xchg
mov
cmps
(bad)
xchg
ja
pop
and
retf
idiv
sub
inc
jae
aad
dec
dec
xor
leave
retf
adc
pushf
xchg
xchg
cmp
stc
pop
cli
mov
retf
out
mov
dec
pop
pushf
pop
ret
jmp
xchg
xchg
int3
and
xchg
gs
dec
inc
sti
(bad)
jg
mov
xchg
dec
mov
or
pushf
xor
pop
pop
inc
ror
clc
pop
sub
leave
xchg
dec
jo
scas
mov
call
add
out
add
xchg
mov
es
mov
jle
push
es
nop
push
and
mov
xchg
push
adc
cld
push
cli
std
cmp
and
push
lods
cmps
into
shl
push
mov
pop
mov
and
jbe
out
jmp
or
je
int3
sbb
into
mov
leave
dec
mov
and
rol
(bad)
xor
or
xor
ins
mov
dec
pusha
mov
and
in
movs
ins
cmp
fstp
inc
movs
xchg
(bad)
lahf
fld
bound
xor
push
inc
arpl
xor
mov
lock
ja
sub
dec
push
push
(bad)
sub
outs
and
push
or
inc
cld
jg
mov
adc
mov
or
push
mov
sti
movs
adc
cmp
test
mov
sbb
ins
jns
and
into
sbb
xchg
mov
jmp
int3
ins
hlt
cs
push
cdq
pop
loope
inc
sub
into
or
cmp
or
sar
sbb
fucomp
push
or
sti
push
mov
mov
mov
mov
hlt
popa
or
inc
xchg
fucomp
mov
(bad)
push
imul
jmp
add
lock
icebp
pop
sub
retf
dec
les
adc
in
lock
aam
repnz
sahf
jmp
jo
in
mov
lea
inc
and
dec
cmp
cs
jne
jne
bnd
pop
and
and
sbb
mov
bound
and
repz
adc
jae
mov
mov
bound
mov
(bad)
or
jl
lea
in
add
loope
test
mov
in
inc
xchg
mov
push
aas
mov
bswap
mov
(bad)
pop
ja
fisub
lods
push
mov
fistp
loope
add
mov
shl
in
in
xchg
test
in
jnp
xor
int3
mov
sub
lahf
push
clc
cmp
cmps
jmp
dec
iret
xchg
ret
into
push
out
and
retf
adc
jmp
cmps
loop
pop
jg
(bad)
test
repnz
mov
xor
in
(bad)
shr
adc
idiv
dec
fs
and
cmp
xor
(bad)
or
mov
jg
cmp
clc
in
jb
add
sub
xchg
in
sahf
data16
and
push
imul
mov
fwait
stc
mov
(bad)
mov
loope
imul
mov
fs
ror
test
cmps
lds
mov
loopne
sbb
adc
aad
mov
lds
gs
in
or
aam
jle
clc
rcl
add
cli
pop
adc
jge
inc
cmp
push
sub
inc
fldenv
call
daa
fsubr
or
popa
pop
sub
mov
pop
lods
mov
sub
cmp
sbb
shl
in
ss
sub
dec
aad
rcr
inc
popf
fadd
stos
xchg
sub
mov
out
push
pop
repz
vdivss
jae
mov
sbb
das
mov
rcr
xchg
xchg
fwait
(bad)
rol
or
mov
je
fstp
(bad)
shr
push
push
add
or
shl
add
pop
popa
adc
mov
dec
outs
fwait
or
xchg
into
ins
mov
jge
cmps
int3
inc
js
adc
jb
in
lea
push
mov
sti
adc
pop
in
int
add
sbb
xchg
sub
xrelease
in
rcl
push
sbb
push
push
add
cmp
or
daa
xchg
in
cmp
xchg
outs
inc
push
sub
loop
and
cmp
in
addr16
xor
repz
pushf
in
mov
sub
pushf
mov
mov
jl
out
inc
imul
loopne
into
pop
jne
and
ins
cld
std
aam
pusha
cmps
call
iret
mov
dec
pop
dec
xchg
(bad)
mov
je
ins
(bad)
jmp
sbb
add
dec
loopne
cmps
sbb
dec
ret
outs
cmpxchg
in
out
out
xchg
add
jno
(bad)
sub
pop
push
jmp
push
xor
sahf
test
jp
cmp
cdq
jecxz
add
xlat
dec
fimul
jp
rcl
mov
xor
jge
ja
loop
and
add
loopne
ret
sub
mov
addr16
dec
cld
adc
jne
(bad)
lds
js
mov
lock
loop
cdq
push
mov
mov
int3
pop
dec
cmp
xchg
dec
into
dec
es
(bad)
pushf
sahf
jns
sbb
push
pop
jno
ds
dec
mov
cmp
or
xor
pop
and
add
dec
inc
xchg
jecxz
lea
mov
js
outs
xchg
jb
jb
xchg
push
push
ja
mov
xchg
xchg
sub
and
xchg
addr16
cmc
pop
push
leave
and
cmp
in
into
inc
retf
xchg
mov
dec
add
adc
cmp
dec
aam
adc
(bad)
bnd
sub
mov
test
xchg
ret
mov
loopne
adc
int
(bad)
pushf
push
dec
ds
mov
jo
lahf
jge
std
or
inc
fsubr
mov
jl
fcom
or
inc
mov
or
mov
fdivr
push
push
ret
hlt
lahf
xchg
mov
je
xchg
jne
cs
xlat
aas
fcom
out
cld
clc
inc
xchg
stos
xchg
rcr
aaa
adc
bnd
outs
lahf
in
xor
xchg
and
mov
adc
test
mov
fwait
sbb
cld
fwait
test
daa
push
xchg
mov
cmps
dec
xchg
pop
and
sahf
fstp
inc
and
jbe
adc
movs
fdiv
popf
or
(bad)
adc
loop
mov
mov
xchg
aas
jecxz
loope
cmp
mov
hlt
out
out
js
iret
add
idiv
dec
mov
aam
jbe
enter
fstp
inc
div
ja
(bad)
sbb
adc
mov
mul
xchg
lods
inc
add
jae
xor
mov
rcr
mov
mov
mov
enter
(bad)
dec
xchg
(bad)
clc
adc
mov
unpcklps
pop
imul
pop
ins
and
xchg
sub
loopne
out
mov
call
ror
cli
rcl
cli
sbb
push
or
inc
add
lods
jp
cmp
bound
mov
push
mov
imul
jecxz
sub
mov
jb
aad
mov
jmp
ds
sub
add
icebp
pushf
sub
inc
shl
push
jne
push
lds
fnstcw
and
ja
mov
add
in
in
popa
cwde
cmp
pusha
ds
imul
int3
inc
dec
loopne
lock
iret
lods
mov
sbb
pop
jne
add
sub
or
outs
push
xor
retf
dec
ret
pop
(bad)
andps
push
fisttp
mov
outs
push
inc
xchg
mov
sbb
push
push
aas
mov
sub
daa
xlat
ins
mov
rol
loope
cdq
or
cmp
cdq
dec
adc
push
and
leave
and
pusha
fcomp
or
inc
ret
mov
push
push
jae
retf
fnstenv
or
out
dec
lahf
cwde
out
xchg
inc
push
fdiv
in
mov
lahf
shr
loope
push
mov
stos
or
adc
inc
inc
das
arpl
test
mov
jmp
sub
push
nop
jmp
pusha
jmp
mov
fdiv
in
sbb
xor
pop
fs
push
push
adc
ins
(bad)
sbb
mov
ins
test
inc
mov
mov
stos
inc
jle
sbb
rol
sbb
cmp
dec
mov
dec
scas
mov
aad
sub
cli
xor
fimul
out
enter
jl
and
jp
sbb
dec
mov
cmps
cdq
out
int
test
or
add
sub
bound
cmp
les
add
xchg
outs
sbb
mov
xor
das
icebp
aas
shr
xchg
(bad)
adc
imul
aas
bound
push
(bad)
loope
mov
or
popa
clc
push
mov
retf
std
adc
pop
sub
xor
mov
es
fsubr
or
sub
je
xchg
fst
popa
pop
mov
(bad)
pop
pop
jecxz
mul
popf
shl
push
pop
mov
loopne
shr
ss
adc
stc
lods
pop
out
cmp
mov
push
in
out
addr16
adc
mov
inc
adc
jno
(bad)
cld
stos
pop
inc
test
pop
cmc
adc
xchg
cmp
retf
test
out
dec
add
mov
add
push
inc
repnz
pslld
es
lods
js
push
mov
pop
retf
adc
icebp
jl
jo
out
je
or
xchg
push
jp
mov
pusha
fistp
pop
push
retf
dec
or
pop
stos
push
mov
in
adc
bound
or
push
loopne
xor
adc
imul
jl
movs
mov
mov
sbb
dec
outs
xchg
mov
inc
test
add
push
xor
inc
and
es
fidiv
fwait
pop
(bad)
dec
xchg
sub
and
pop
sar
mov
outs
dec
xchg
ret
jge
cmps
add
(bad)
addr16
inc
neg
mov
out
adc
test
dec
into
ja
xchg
pop
mov
jne
and
fdivr
and
or
mov
fstp
jg
(bad)
xchg
cmc
out
push
into
dec
scas
stc
aam
xchg
sbb
mov
mov
sbb
pop
into
pmaddwd
mov
fsubr
mov
ins
call
cmp
hlt
mov
xor
mov
enter
jp
and
iret
out
test
push
cwde
mov
jmp
int3
push
push
fnsave
push
and
movs
iret
add
fbld
lods
cmp
icebp
movs
inc
jl
(bad)
mov
arpl
adc
es
xchg
ret
inc
enter
jg
shr
test
and
cdq
dec
(bad)
sub
adc
add
fdiv
jns
cwde
xchg
and
repz
jecxz
popa
out
and
dec
fist
mov
sar
popa
adc
pop
repz
ficomp
(bad)
movs
fdivr
call
mov
popa
(bad)
mov
push
ins
cmp
imul
and
sar
imul
jb
or
xchg
push
icebp
mov
cmp
push
mov
push
aam
and
jmp
dec
sbb
rcr
sub
loope
sbb
(bad)
imul
lock
sub
jg
xchg
mov
push
stc
or
das
ja
repz
adc
neg
xchg
sub
icebp
scas
mov
or
dec
sbb
pushf
xor
mov
pop
int3
mov
jmp
dec
and
ins
adc
jmp
es
mov
mov
mov
outs
bound
in
xor
shr
cli
hlt
and
jp
cld
out
neg
add
ror
and
sbb
sub
popa
mov
out
enter
(bad)
paddusw
shl
xchg
call
mov
pop
dec
dec
mov
pop
icebp
call
and
mov
xor
push
hlt
cdq
push
adc
xchg
pop
adc
in
mov
mov
shl
nop
ins
test
pop
sub
jp
int
ds
inc
int3
pop
(bad)
out
mov
pop
and
adc
mov
xor
ror
jmp
cmp
es
push
xchg
pop
ss
rcl
mov
retf
movs
push
es
test
push
fisttp
dec
xchg
ja
mov
fild
cmp
add
jne
test
and
nop
cs
push
sti
dec
scas
xor
sub
out
mov
and
in
call
xchg
pop
fimul
in
push
cmps
xchg
mov
lea
cmp
in
inc
outs
int
imul
jl
popf
jmp
push
and
xor
leave
in
fild
call
neg
mov
in
pop
xor
nop
push
pop
xor
dec
ja
cmps
jbe
sbb
push
xor
xchg
push
enter
xor
repnz
cdq
cdq
in
std
inc
loope
sbb
(bad)
and
xchg
push
cdq
test
pop
dec
dec
xlat
stos
enter
mov
daa
mov
add
imul
add
shl
sahf
mov
nop
mov
jp
xchg
gs
jae
rcl
push
jb
cdq
xlat
adc
add
(bad)
retf
aad
sub
jge
pusha
popf
inc
jo
jmp
cmp
in
iret
dec
pushf
hlt
ror
mov
cdq
jg
fisttp
mov
dec
je
(bad)
into
pop
(bad)
mov
bound
lods
test
mov
out
jne
mov
jmp
dec
or
mov
lods
xor
outs
dec
sub
xor
mov
sbb
dec
dec
fnstcw
jg
push
jg
xor
jmp
push
cmp
xchg
jb
ret
and
mov
sub
dec
clc
jmp
sub
(bad)
or
es
aas
adc
loopne
ins
push
push
imul
mov
or
push
xchg
pop
loope
and
jecxz
or
je
repz
pushf
and
and
popa
mov
jae
pop
addr16
pop
(bad)
sbb
add
mov
sti
call
data16
dec
out
pop
xchg
jg
rdtsc
std
bound
fs
push
aas
into
sbb
out
out
div
adc
push
hlt
retf
mov
scas
mov
mov
shl
pop
in
loopne
loopne
inc
push
adc
ins
(bad)
icebp
loop
aaa
dec
icebp
or
sti
fbstp
shl
test
ror
sbb
add
aaa
jnp
jp
mov
call
mov
inc
cli
into
shl
pop
adc
sub
in
push
xchg
jbe
dec
mov
adc
es
add
xchg
ret
ror
mov
sub
ins
jle
ror
test
pop
jmp
ss
mov
add
test
and
cmps
je
sub
inc
and
out
clc
jg
sbb
cmp
jl
cmp
inc
(bad)
and
or
mov
push
push
mov
int
add
push
test
pop
pop
lea
mov
sub
pop
pop
jbe
mov
add
popf
stc
shl
sbb
mov
inc
pop
enter
xchg
mov
pop
fisttp
push
fsubr
jb
inc
xor
mov
jb
pop
ss
mov
(bad)
sbb
sub
xlat
lahf
pop
enter
std
adc
test
movs
(bad)
out
jl
enter
mov
dec
push
fcmovu
adc
add
call
xor
mov
and
ret
or
pop
mov
cli
popf
jmp
(bad)
mov
sub
pop
fsubr
jmp
repz
outs
push
xchg
push
add
adc
cmp
mov
dec
jno
retf
ins
cld
fisttp
out
jae
(bad)
outs
mov
adc
aas
jl
outs
mov
jno
sbb
sub
inc
and
xchg
mov
jg
cld
adc
pop
dec
add
mov
out
push
ja
adc
cmp
sbb
imul
cmp
in
cmp
push
mov
jmp
test
into
jne
mov
adc
mov
lds
xchg
xchg
not
xchg
bound
loope
shl
std
test
dec
or
dec
test
xor
pushf
jb
rcr
add
push
fadd
push
jnp
in
or
mov
cs
cli
cmp
jle
pop
xchg
cmps
nop
pusha
xor
push
loop
mov
and
xchg
cmp
add
mov
jg
jb
cdq
call
repz
mov
mov
sbb
test
addr16
ret
push
dec
dec
sub
pop
in
rol
aad
fmul
(bad)
xor
es
(bad)
jp
ds
cs
dec
out
xor
sbb
jmp
int
rcr
cmp
push
pop
cdq
mov
and
dec
cld
fisub
dec
mov
fs
inc
adc
data16
mov
mov
push
cmp
jmp
push
out
jo
push
hlt
jecxz
sahf
or
sbb
inc
cvtpi2ps
mov
xchg
out
mov
ins
inc
inc
xor
pop
(bad)
ins
adc
inc
mov
push
sbb
jb
dec
scas
xor
iret
sub
add
jle
sbb
pop
mov
mov
bound
sti
or
sbb
pop
popf
push
pop
imul
stc
pop
and
add
push
or
add
jb
cmp
and
inc
jp
jno
call
and
mov
lods
xor
xchg
mov
inc
xchg
mov
mov
pop
mov
ror
scas
and
adc
stc
gs
sti
loopne
xchg
mov
sahf
fsubr
(bad)
push
jl
(bad)
pop
cmp
(bad)
daa
pop
repnz
mov
clc
cmp
mov
and
xchg
push
jns
gs
pop
out
ds
add
iret
pop
fdiv
push
xchg
int
lods
adc
(bad)
aad
and
mov
jbe
push
(bad)
jmp
add
clc
or
push
push
pop
dec
jbe
shr
lods
cli
dec
dec
or
jnp
add
xor
push
xchg
jns
out
sbb
inc
ins
test
rcr
aad
cld
push
dec
shl
clc
sbb
int3
shl
aas
or
adc
mov
jmp
dec
xchg
lods
adc
jmp
push
inc
leave
mov
and
xchg
jg
mov
test
in
xlat
dec
sbb
mulps
cmp
cs
ins
dec
(bad)
mov
mov
sub
mov
cli
(bad)
push
into
in
not
shl
mov
ror
mov
movs
inc
fist
mov
adc
xchg
fsub
push
add
mov
fwait
retf
push
mov
sti
adc
or
xlat
cmp
std
jge
and
fdiv
fisttp
dec
cmp
addr16
addr16
inc
pop
ss
out
icebp
cli
pop
ds
xor
mov
das
sub
mov
cmps
rcr
out
les
and
mov
pop
jns
mov
cmp
daa
cmps
jg
daa
xchg
cmp
xor
xchg
rcr
dec
cli
pushf
push
js
int
ret
lods
add
mov
aam
jle
xor
mov
add
mov
scas
lahf
dec
les
test
sbb
xor
mov
dec
push
loope
outs
test
pop
mov
scas
mov
imul
dec
std
mov
fidivr
(bad)
jge
and
stos
sbb
jp
rcr
data16
movs
and
outs
jecxz
(bad)
xchg
adc
or
and
ins
dec
mov
mov
jo
sbb
mov
stos
(bad)
(bad)
scas
mov
paddsw
pushf
mov
sub
ins
dec
jae
xor
cmp
dec
jne
jmp
sbb
lods
and
mov
push
enter
(bad)
(bad)
enter
ret
stos
pop
adc
xor
hlt
adc
call
iret
ins
push
mov
and
enter
pop
push
pop
mov
loopne
mov
ins
jae
div
in
(bad)
repnz
pop
jg
xor
push
xor
stos
lock
test
test
dec
shl
mov
jb
and
jne
ds
cwde
sbb
ss
xor
les
inc
add
mov
mov
aad
inc
fcom
call
cmp
inc
mov
popa
in
in
imul
inc
leave
fucomp
in
cli
ret
push
or
pop
adc
cmp
mov
and
xor
xchg
sub
jmp
dec
fldenv
jnp
mov
pop
ins
icebp
dec
mov
(bad)
pop
je
pop
ins
and
jl
dec
ret
retf
mov
xlat
pop
push
nop
mov
mov
xchg
pop
pop
mov
sub
fldcw
inc
inc
add
and
mov
int3
fistp
inc
xchg
sub
addr16
clc
dec
call
sbb
dec
xchg
dec
push
sar
pop
ins
icebp
jecxz
jbe
jbe
adc
mov
sbb
xchg
xchg
into
daa
mov
adc
push
pop
cmps
dec
dec
pop
xor
pop
stos
adc
test
inc
jae
ss
cmc
cmp
int3
outs
jno
and
mov
sub
lods
or
sub
sbb
dec
cmps
inc
add
or
xor
xor
test
lods
mov
je
out
push
fbstp
jecxz
gs
add
not
movs
sbb
ins
xchg
inc
jmp
or
jno
popa
add
inc
(bad)
push
cld
add
jp
dec
out
mov
mov
cmp
sahf
std
push
cmp
or
loope
in
test
(bad)
mov
cmp
scas
pop
out
push
lea
or
or
das
xlat
inc
fs
add
mov
jns
xor
inc
mov
lock
inc
mov
pushf
scas
scas
loop
cmp
sub
jge
xchg
scas
jmp
jecxz
scas
call
cmp
lods
push
mov
adc
call
fld
inc
xchg
dec
pop
fld
inc
shl
jmp
mov
sub
aaa
mov
mul
movs
out
ins
cmp
outs
out
adc
pop
xor
dec
fcomp
inc
sub
cmp
xor
inc
adc
daa
fwait
mov
and
dec
sub
sub
(bad)
aam
adc
xor
pop
push
push
mov
inc
mov
daa
jne
jbe
fild
retf
jo
pushf
add
out
mov
cmp
loope
push
(bad)
fisubr
or
jg
in
push
in
int3
xchg
not
(bad)
out
or
fsub
add
adc
xchg
xlat
stos
in
retf
xchg
dec
pop
jp
dec
push
mov
icebp
sbb
lds
call
out
fld
dec
or
cmp
jb
dec
xchg
mov
lea
dec
popa
sbb
mov
leave
add
jb
lds
dec
pop
stos
xchg
aaa
xor
sahf
lods
lahf
push
sub
loope
inc
fldlg2
call
dec
loop
mov
test
dec
cs
(bad)
xor
fistp
inc
je
popf
mov
xlat
leave
and
dec
sahf
jmp
ret
fist
addr16
add
or
pop
loop
and
movs
mov
movs
bound
mov
mov
push
out
cmp
mov
mov
push
xlat
jnp
add
jnp
mov
stos
or
xor
sub
cs
push
push
lds
xchg
cmp
addr16
mov
cli
sar
arpl
stos
jb
sbb
pop
dec
ja
test
out
sub
jb
frstor
(bad)
cmp
loop
stos
(bad)
in
or
inc
cmp
add
imul
ds
xchg
push
dec
and
xor
pop
inc
mov
fcom
jge
arpl
enter
sub
int3
fsub
xchg
icebp
push
inc
jo
cmp
ret
inc
iret
popf
jno
repz
inc
mov
mov
cmp
data16
cmps
and
adc
or
hlt
push
shl
push
adc
xor
xor
dec
inc
cmp
iret
cmc
add
test
sar
push
rol
loopne
icebp
iret
jle
dec
jp
cmp
xor
inc
mov
xor
(bad)
pop
ja
and
loop
adc
daa
icebp
call
mov
hlt
fwait
sub
adc
jnp
ret
xchg
mov
cmp
aad
(bad)
ret
cmps
inc
ins
scas
es
mov
jae
loopne
and
cli
mov
sub
and
and
push
jle
mov
push
or
pop
pop
push
aam
pop
loope
repnz
out
sbb
mov
xchg
cmp
and
pop
mov
sub
rcr
fucom
retf
pop
mov
pop
bound
add
cmp
cmp
fnsetpm(287
pop
or
stc
inc
cmp
lds
adc
xor
dec
jo
(bad)
adc
cmps
fsubr
ja
xor
lock
in
lock
push
xchg
xor
mov
mov
cmp
ret
dec
jne
or
or
bound
mov
pop
and
je
mov
jecxz
scas
sub
es
cli
shl
int
out
add
dec
loop
xchg
test
pusha
or
sbb
repz
inc
xor
idiv
out
movs
xor
xor
jae
das
lock
mov
jno
jecxz
dec
cli
icebp
mov
push
retf
out
add
outs
mov
adc
es
hlt
test
imul
xor
jno
div
add
pop
dec
add
mov
in
adc
xor
repnz
and
loope
sbb
jecxz
push
ins
cmp
ins
pop
pop
pop
vpsrlq
retf
(bad)
into
mov
cmc
xor
scas
cmp
push
pop
call
cmc
jo
mov
fnstcw
shr
ror
add
sub
retf
aad
mov
mov
retf
sub
pop
push
retf
mov
or
ss
imul
add
add
cmp
cld
addr16
popa
sbb
sbb
cmp
xchg
xchg
leave
pop
push
inc
or
pop
mov
jmp
cwde
sub
xchg
xor
inc
mov
dec
add
adc
pop
mov
out
xchg
jns
pop
push
push
mov
push
adc
adc
lea
sub
(bad)
lahf
push
xor
sub
xor
or
inc
movs
xlat
xor
and
fsub
push
jns
test
sub
pop
ret
dec
fsubr
icebp
jg
aam
jns
xchg
rcr
loop
or
stos
xor
pop
add
rcr
jmp
cmp
jne
cmp
pop
test
repnz
mov
or
push
rcl
or
in
fwait
xchg
lods
mov
fldln2
fiadd
ins
jno
call
add
cmc
adc
pushf
mov
int
ss
jecxz
lea
inc
mov
and
xor
into
and
test
or
push
push
(bad)
mov
xor
push
and
ret
push
dec
stc
loopne
adc
rcr
repz
add
sub
cmc
sar
(bad)
js
add
push
movs
int3
pop
jns
mov
inc
and
inc
jmp
cmc
repz
sub
cwde
xor
aam
dec
fcmovbe
shl
cmp
mov
(bad)
outs
jmp
cdq
outs
and
push
push
adc
gs
shl
data16
repz
cs
pop
(bad)
test
mov
xchg
xchg
xor
rcr
sbb
ret
dec
mov
(bad)
fwait
inc
stc
mov
movs
pop
xchg
out
loope
rcl
dec
in
and
inc
dec
stos
or
xchg
dec
or
call
inc
xchg
sub
(bad)
shl
addr16
mov
iret
sub
inc
inc
mov
mov
leave
outs
sub
arpl
shl
jbe
sbb
neg
add
mov
push
cmc
push
jmp
jno
fwait
push
cmp
bound
mov
dec
and
scas
sahf
or
mov
mov
xchg
test
adc
cmp
aad
test
push
add
fmul
pop
sub
cld
sbb
(bad)
xchg
int
cmps
adc
mov
out
shr
push
(bad)
xlat
loop
jge
aam
clc
mov
xor
loopne
add
fbstp
dec
test
xchg
xor
xchg
jmp
jns
dec
stc
or
in
xor
sub
icebp
cmp
test
test
jmp
aad
push
sbb
repz
lock
and
sbb
cmps
pop
inc
and
and
or
imul
pop
mov
adc
int3
sahf
xor
ins
dec
call
sub
mov
adc
xchg
test
popf
ja
ror
add
leave
lock
jo
addr16
dec
mov
pop
sub
pop
sub
push
fcom
xchg
jg
sub
add
or
lahf
dec
mov
pop
xchg
repnz
mov
adc
ins
push
daa
lock
sub
addr16
add
pop
(bad)
jecxz
rcl
and
and
call
sub
into
leave
retf
push
pop
xchg
lock
jmp
loop
cli
repz
aad
cmp
lock
mov
mov
sub
sbb
xor
outs
mov
pop
push
test
dec
add
mov
xor
psubsb
es
retf
dec
(bad)
rol
sub
pop
cmp
xor
rcr
sti
test
jo
out
out
test
jge
daa
jecxz
lods
pop
test
push
fbld
dec
hlt
fs
fidivr
in
sbb
pusha
mov
(bad)
(bad)
push
ror
xor
mov
inc
gs
push
mov
jo
lods
adc
data16
push
xlat
ret
mov
jle
jmp
or
xor
adc
dec
ins
shl
mov
xchg
inc
mov
add
stos
cmp
test
pop
pushf
out
and
inc
cli
shl
fsubr
adc
movs
cmc
retf
or
xlat
jle
sahf
xchg
fwait
popa
push
jo
add
daa
aam
add
in
xor
sahf
in
retf
mov
iret
scas
cmp
and
sbb
sti
mov
jnp
shr
into
ss
scas
ins
push
push
test
pop
push
mov
jp
xchg
inc
pop
push
js
fisttp
pop
aad
jle
sub
bnd
lock
push
jne
call
mov
pop
adc
xlat
stc
out
js
jbe
imul
pop
rcl
(bad)
clc
sbb
mov
jecxz
jp
aad
sbb
jmp
mov
dec
cli
bound
mov
sysenter
cmp
sahf
sar
scas
cwde
movs
pop
fiadd
gs
and
adc
pop
xchg
inc
loopne
xchg
scas
test
movs
call
and
test
mov
pop
inc
aad
mov
daa
pusha
in
in
movs
data16
mov
jmp
hlt
jmp
loopne
test
xlat
inc
stos
cmp
inc
and
push
inc
cli
(bad)
enter
mov
mov
cmp
and
jg
push
lock
jno
xchg
into
push
xchg
jge
mov
hlt
das
mov
jb
loop
mov
adc
aaa
xchg
fcomip
inc
sub
adc
push
xor
push
mov
and
jmp
push
popf
shr
hlt
push
icebp
adc
mov
mov
pusha
ret
push
js
or
xchg
mov
bound
repz
div
shl
(bad)
ins
(bad)
mov
ss
data16
or
push
jae
popa
mov
movzx
loopne
sbb
and
or
and
or
out
push
addr16
js
sets
dec
add
repnz
test
test
test
(bad)
popf
cmp
adc
inc
adc
pop
or
enter
dec
fst
inc
or
div
jmp
cld
inc
dec
cmp
push
xchg
cmp
jmp
adc
loop
xlat
inc
ror
adc
popw
jle
fidivr
adc
sbb
xor
push
imul
xor
or
mov
into
(bad)
es
push
jb
cmp
popf
mov
mov
out
mov
xchg
xor
xor
stc
mov
xchg
dec
mov
adc
jmp
mov
push
cdq
sub
test
mov
jne
push
add
cmp
adc
add
sbb
pop
cld
mov
fst
jae
pusha
sub
push
cmps
push
mov
movs
adc
sub
ins
leave
sbb
call
(bad)
or
dec
fdivr
sub
xchg
adc
xchg
mov
out
and
pusha
push
das
arpl
cmp
(bad)
xor
and
shl
popf
mov
or
idiv
or
xchg
imul
jg
fsubp
pop
jns
lea
frstor
fidiv
mov
xor
sbb
outs
xchg
ja
ss
scas
shr
mov
xchg
(bad)
hlt
pop
iret
ja
jg
mov
sbb
sahf
push
fs
lods
std
out
pop
loope
ja
rol
dec
jno
sub
in
sti
xchg
jo
rsm
(bad)
push
adc
out
jb
sbb
add
sub
mov
dec
inc
icebp
lea
cdq
jns
sahf
scas
aaa
bound
mov
test
popa
inc
es
xchg
fmul
inc
adc
push
clc
(bad)
adc
xchg
and
pop
inc
mov
fcmovbe
int
idiv
jp
add
data16
lods
mov
cmp
sub
push
popf
mov
jmp
mov
or
or
ror
jmp
xor
out
hlt
pop
aad
cs
adc
out
sti
add
add
jae
sub
jecxz
je
add
out
repz
outs
fistp
add
ret
les
movs
mov
add
in
jl
inc
xor
cmp
xchg
dec
pop
loop
mov
loope
movs
pop
stc
push
and
repz
fiadd
cmp
or
inc
sub
add
nop
mov
movs
aad
lock
xor
cld
mov
mov
ss
out
or
add
sbb
jno
sbb
je
retf
dec
cli
xchg
push
jno
aad
fisttp
xor
pop
icebp
push
div
in
popa
cs
mov
ret
inc
pop
xchg
xor
sub
push
xchg
movs
mov
aam
outs
inc
dec
(bad)
adc
enter
pop
in
sti
iret
scas
jb
aad
stc
xor
cli
mov
xor
mov
sub
mov
out
mov
push
shr
movs
pop
cmc
or
push
add
leave
and
mov
adc
adc
lock
or
push
popa
xor
mov
div
clc
pop
mov
adc
mov
jmp
mov
xchg
mov
lahf
push
xor
mov
jmp
push
out
jp
iret
inc
js
or
push
nop
in
jne
mov
out
jle
(bad)
dec
push
dec
clc
mov
cmp
sbb
sahf
imul
gs
(bad)
test
inc
add
(bad)
ja
mov
jg
addr16
(bad)
jle
pop
sbb
les
cmps
mov
aam
in
mov
je
cmp
cwde
cmc
or
leave
push
mov
mov
psubw
xor
sub
push
fist
repz
retf
aad
(bad)
mov
icebp
in
pop
sbb
leave
popf
jmp
jg
or
adc
inc
js
jo
retf
out
mov
xchg
xchg
loopne
jg
jmp
movs
mov
mov
mov
mov
inc
push
pop
imul
imul
in
mov
movs
and
clc
jno
das
nop
mov
hlt
mov
cli
mov
movs
dec
inc
pop
cdq
and
outs
call
jle
js
adc
sti
loope
repz
xchg
fs
rcr
fdiv
loop
add
and
and
mov
xor
rcr
mov
in
dec
psrlw
adc
(bad)
stc
out
data16
aad
daa
push
ret
stos
xchg
cmp
jge
jle
loop
addr16
int
adc
dec
jecxz
mov
xor
push
pop
pusha
shl
test
loope
movs
pop
(bad)
mov
aas
in
sbb
dec
neg
xchg
(bad)
dec
(bad)
pop
js
mov
jne
neg
cmps
clc
mov
(bad)
fistp
jno
sar
and
sbb
int3
jae
dec
rcl
(bad)
jmp
push
clc
cmp
jbe
adc
mov
xor
push
out
and
adc
lahf
fadd
or
cmc
sbb
cmp
push
rcr
idiv
stc
pop
jmp
leave
cmp
in
clc
ins
into
stos
pusha
and
idiv
call
mov
sub
es
adc
jns
xchg
pop
ja
mov
cwde
data16
and
(bad)
fwait
std
es
fisub
mov
and
mov
fnsave
es
mov
add
or
or
fcomi
adc
gs
cdq
into
cmp
aaa
ss
or
jb
mov
jnp
mov
bnd
dec
inc
pusha
push
or
jmp
push
imul
imul
outs
nop
stc
or
fs
add
cwde
cmc
add
les
xor
mov
retf
int3
dec
cdq
fist
popa
outs
hlt
ror
dec
movs
iret
sub
mov
out
sbb
(bad)
pusha
mov
add
dec
sub
dec
outs
sbb
xchg
imul
in
jno
inc
mov
fistp
es
and
dec
mov
pop
cmp
lock
pop
and
add
gs
(bad)
jb
lds
call
hlt
push
and
into
mov
push
cmp
push
icebp
shr
mov
push
loopne
(bad)
push
mul
das
adc
jnp
out
add
mov
sub
gs
adc
push
jge
pushf
sub
popf
adc
or
test
rcr
addr16
dec
sahf
dec
push
adc
ds
je
loop
push
pushf
and
mov
shl
mov
adc
sub
out
cmp
and
arpl
out
cwde
mov
inc
cmp
mov
mov
add
inc
(bad)
xor
repnz
jnp
cmp
xchg
fnstenv
repnz
dec
or
jl
repnz
sub
xchg
sbb
movs
in
in
cs
mov
mov
lock
or
xchg
ffreep
in
add
or
aam
in
je
cld
sub
push
mov
mov
pushf
call
fdivr
sub
adc
add
in
in
cmps
or
pop
inc
mov
push
xchg
push
popa
out
mov
or
dec
mov
mov
sub
outs
cmp
into
jmp
push
call
push
pop
movs
je
clc
scas
es
lods
imul
sub
push
(bad)
push
in
(bad)
cmp
cld
or
push
(bad)
sti
inc
hlt
or
loopne
sbb
in
cmp
mov
test
mov
test
ret
popa
jge
clts
je
bswap
clc
jo
addr16
imul
lock
sbb
mov
push
inc
popa
push
inc
addr16
scas
mov
retf
push
sub
jg
cmp
pop
leave
push
addr16
imul
pop
mov
retf
shr
add
pop
in
jmp
iret
xchg
xchg
arpl
sar
add
lock
pop
in
mov
sub
out
imul
dec
mov
arpl
and
outs
dec
xchg
dec
loop
shl
pushf
ins
sar
push
fisub
pushf
scas
imul
cmp
mov
dec
and
outs
cmps
adc
cmc
dec
(bad)
icebp
pusha
add
or
je
loopne
dec
sub
sub
jmp
pop
imul
sub
sbb
arpl
pop
add
leave
push
jb
dec
or
lods
xchg
pop
push
mov
push
sub
and
jmp
loopne
push
xchg
gs
popa
ror
inc
idiv
sbb
repnz
stc
add
xchg
sub
into
sbb
cmc
dec
cli
(bad)
adc
lea
(bad)
stc
arpl
repnz
loopne
xor
fst
add
(bad)
mov
add
push
jnp
mov
cmp
xchg
add
sub
cmp
sub
in
movs
enter
or
xchg
and
or
jmp
popf
(bad)
(bad)
jnp
cld
ja
jns
cmp
es
aaa
cmp
enter
xor
adc
sbb
jbe
js
sbb
popa
adc
pop
fsub
lea
rcl
mov
aam
dec
sbb
jmp
fadd
xchg
mov
mov
adc
cmps
xchg
mov
out
imul
push
jmp
xlat
das
jp
lds
mov
and
retf
mov
adc
(bad)
out
addr16
dec
shr
(bad)
and
xor
fwait
add
fucomi
inc
outs
fcmovu
inc
aas
fdivr
or
mov
(bad)
hlt
xor
add
imul
call
pop
fcomp
fld
test
inc
test
jae
push
movs
jl
psllw
out
cmps
or
jne
in
pop
adc
mov
mov
(bad)
icebp
lods
jmp
jmp
adc
in
mov
icebp
or
ret
bound
sbb
add
xor
idiv
pushf
push
retf
fst
rcr
push
sar
sar
cmp
mov
jl
cld
adc
cmp
sbb
aaa
dec
lock
inc
mov
aam
mov
popf
jbe
in
dec
pushf
adc
loop
lahf
stos
adc
push
nop
mov
jecxz
inc
and
mov
(bad)
mov
jle
dec
cmp
sbb
mov
data16
das
sbb
neg
test
mov
add
push
ret
add
and
mov
sub
mov
jne
and
jecxz
sbb
mov
mov
(bad)
pop
dec
mov
in
lahf
cwde
imul
lds
xor
out
pop
inc
lds
pop
(bad)
std
mov
icebp
jge
in
aaa
xor
cmp
sub
jb
test
cmp
mov
dec
shr
ins
test
fcomp
jne
into
je
pop
shl
scas
clc
(bad)
sbb
sub
dec
std
adc
mov
ror
jecxz
(bad)
sub
lods
fsubr
scas
pop
adc
fsub
dec
adc
xchg
addr16
adc
ja
fs
cmps
add
imul
push
fs
inc
sar
aam
mov
fnsave
cmp
pop
jnp
dec
push
sbb
lea
xchg
and
mov
sbb
mov
add
in
call
fbstp
pop
fnstenv
outs
adc
pop
xchg
adc
adc
(bad)
mov
push
push
sti
adc
jg
jle
lods
leave
and
fistp
push
jns
(bad)
pop
mov
fwait
int
push
mov
cdq
xor
out
lods
and
aas
popa
out
out
lods
jecxz
(bad)
repz
xchg
loopne
adc
lods
repnz
cmp
(bad)
outs
fstp
push
dec
sbb
aaa
in
push
push
add
(bad)
adc
mov
pop
cmps
scas
ret
xchg
gs
test
mov
jne
dec
mov
pop
xchg
dec
pop
cmp
mov
mov
push
pop
pop
pusha
and
mov
sti
xchg
pop
jmp
(bad)
icebp
popa
cwde
cmc
inc
call
je
pop
sbb
loope
mov
(bad)
adc
mov
fcmove
popf
bound
dec
pop
cmp
cmp
sbb
pop
scas
fcom
rol
rol
dec
mov
scas
xor
or
jns
pusha
xor
jge
xchg
jmp
clc
push
adc
ins
add
aas
pop
es
ja
jb
or
std
call
fwait
pusha
cmps
and
adc
data16
jle
hlt
push
xor
cmc
pop
sub
adc
mov
xor
push
cs
mov
bound
xchg
fwait
sbb
cmps
push
push
ror
sub
push
mov
sbb
sahf
aaa
retf
or
dec
and
inc
xchg
push
jp
dec
(bad)
movs
dec
ret
xchg
jp
or
scas
sub
push
fst
loop
xchg
cmp
je
fs
dec
inc
sbb
iret
inc
les
out
mov
dec
xchg
addr16
(bad)
pop
inc
int
repz
pop
loop
test
push
ins
and
imul
jecxz
xchg
sub
pop
out
iret
call
imul
sbb
dec
nop
mov
inc
test
fdivr
xchg
test
ja
rep
sub
loopne
stos
vpshufhw
fidiv
dec
and
jg
sub
fist
repnz
cli
popa
mov
jg
inc
aaa
mov
sub
adc
fcomp
inc
inc
scas
rcr
push
add
lock
adc
fs
aaa
fldenv
push
push
sub
in
cmp
mov
jno
outs
int3
or
inc
ins
cmp
xchg
mov
lahf
sbb
iret
out
push
enter
and
pop
outs
test
loopne
push
into
pop
bound
dec
adc
mov
jo
aaa
push
mov
fmulp
xor
sub
jmp
adc
movs
add
cdq
pushf
mov
imul
sub
fild
jae
pop
jnp
xor
aaa
cs
test
inc
pop
je
inc
pop
pop
mov
out
xchg
mov
mov
adc
add
loopne
push
cld
push
repnz
mov
rol
movs
inc
mov
inc
rcr
or
test
mov
or
mov
dec
mov
fmul
lods
pop
(bad)
fist
sbb
adc
xor
es
mov
jns
aad
mov
imul
sub
xor
mov
stos
push
add
test
and
mov
sub
test
pusha
sahf
mov
scas
xchg
push
mov
imul
dec
mov
push
add
aad
lock
movs
mov
mov
fimul
jo
fistp
idiv
mov
call
outs
leave
and
fist
fidiv
sub
jmp
lds
ins
adc
cmp
aaa
jns
daa
push
push
test
out
inc
mov
inc
sbb
ror
sahf
adc
push
mov
(bad)
xchg
nop
push
imul
xchg
in
(bad)
outs
dec
xor
int
jg
das
test
jo
xor
mov
push
ret
in
shl
jg
cs
adc
sub
idiv
jecxz
push
mov
jmp
dec
mov
jno
call
adc
mov
jmp
clc
shl
bsf
cmps
int3
cmp
das
jnp
aam
or
sub
nop
les
aaa
sbb
add
lea
fdivp
daa
inc
dec
test
xchg
xchg
outs
push
add
test
sbb
lea
out
push
xor
sar
and
shr
enter
aaa
loopne
retf
dec
mov
ret
inc
aaa
cli
xchg
loopne
sahf
dec
mov
lods
and
inc
mov
mov
or
in
push
clc
call
adc
xor
push
add
inc
dec
lock
call
lea
test
mov
or
mov
int
pop
push
jnp
pop
std
leave
movs
es
cmps
jae
popa
movs
(bad)
cmp
mov
adc
je
loope
mov
inc
mov
pop
mov
jmp
xchg
xchg
cwde
mov
ret
inc
jmp
xchg
hlt
push
xchg
xor
std
nop
test
ret
inc
pop
or
movs
mov
add
mov
shl
jbe
cmps
out
dec
sub
pop
pop
and
nop
fsubr
mov
jge
mov
int3
(bad)
scas
jnp
add
mov
sub
xor
cmp
imul
daa
jae
fs
inc
or
inc
pop
or
je
mov
pop
mov
outs
fwait
push
mov
scas
fcom
xor
in
ja
std
addr16
jb
clc
or
lods
fmul
aas
sub
movs
push
or
nop
push
mov
fiadd
add
fdiv
mov
sub
pop
mov
dec
fsubr
push
cmp
retf
or
pop
jae
add
cmp
daa
aam
pop
mov
retf
mov
cmp
adc
mov
jbe
xor
test
xchg
pop
xchg
mov
not
(bad)
pusha
fsubr
and
test
fmulp
(bad)
aaa
sahf
inc
lods
xchg
retf
icebp
mov
jnp
fsubr
inc
push
dec
lds
out
test
out
fadd
test
sti
jmp
test
inc
adc
fmul
mov
popa
push
aas
mov
sbb
pop
rcr
lods
loopne
mov
ss
add
cmp
inc
test
dec
dec
fbstp
sbb
loop
add
mov
mov
sbb
pop
mov
cli
daa
and
sbb
mov
test
fmul
push
imul
pop
in
cld
outs
jo
mov
fidivr
cli
outs
mov
mov
js
sar
retf
stos
jmp
mov
xchg
cs
dec
push
and
test
sub
push
cmp
xor
push
dec
cmp
cmp
or
cmp
lock
daa
or
scas
jne
adc
lods
push
add
lea
lods
mov
mov
(bad)
sbb
and
daa
das
aaa
pusha
int
xchg
movs
mov
jl
cmp
adc
pop
mov
mov
add
in
adc
inc
lods
jns
mov
mov
push
cmp
sar
and
add
outs
sbb
das
and
cmps
or
les
xor
inc
inc
adc
mov
call
fistp
jne
sbb
call
xor
cmp
js
mov
inc
cmp
sti
test
cmp
dec
rcl
add
add
dec
fdiv
sub
adc
push
(bad)
loop
inc
retf
pop
mov
aas
xchg
into
shl
pop
cmp
pop
sub
or
and
(bad)
std
mov
cli
leave
push
add
cwde
adc
fisubr
lods
repz
imul
rcl
xchg
and
and
cwde
pop
es
cmp
sub
aaa
cmps
movs
dec
adc
push
retf
adc
pop
out
fimul
inc
loope
ss
and
int
pop
mov
gs
leave
in
or
loop
xchg
je
inc
pop
mov
(bad)
fsubr
inc
in
xor
xor
pop
nop
and
pop
xor
loop
lahf
ret
(bad)
shl
(bad)
out
jb
mov
add
mov
push
shl
(bad)
loop
or
and
sar
mov
repz
or
retf
in
or
ret
leave
adc
fist
cmp
ret
jg
fidiv
test
and
lods
rcr
int3
inc
ret
dec
xchg
aam
mov
fs
gs
xchg
in
add
outs
ja
or
aam
cmp
ja
pop
or
mov
sbb
movs
inc
inc
and
adc
adc
dec
arpl
xor
adc
and
rcr
adc
push
int3
test
or
mov
inc
rcl
cmc
inc
movs
into
dec
dec
inc
(bad)
or
ins
mov
pop
xor
adc
and
pop
pop
dec
push
out
movs
pop
xchg
shl
and
cmp
inc
inc
add
popf
xchg
and
and
dec
test
shl
add
stc
jle
fcom
mov
dec
fs
push
sub
jmp
inc
clc
xchg
mov
(bad)
mov
xor
cmp
shr
xchg
cs
into
mov
cdq
push
into
sub
xor
push
les
push
mov
xor
mov
ror
jl
dec
loop
cmp
add
mov
ret
popa
jns
xor
adc
out
sbb
inc
fst
movaps
jp
loope
dec
inc
test
adc
sahf
dec
inc
and
sti
jmp
sub
call
dec
arpl
fadd
add
xchg
dec
cmp
cwde
push
sbb
pop
mov
(bad)
in
or
xor
pop
js
leave
sahf
(bad)
sbb
rol
mov
xchg
das
stos
movs
fwait
mul
test
scas
sub
xchg
int3
xor
push
xlat
gs
enter
nop
cdq
pop
test
cmps
mov
mov
ficom
pop
imul
mov
loopne
sbb
xor
into
mov
push
mov
loop
dec
or
adc
sub
and
pop
shl
loopne
fdivr
or
cmp
inc
dec
dec
inc
loope
adc
jmp
enter
inc
fs
push
mov
out
ds
and
add
call
enter
arpl
inc
pop
mov
enter
sbb
xchg
adc
adc
in
hlt
aas
sub
mov
mov
aad
(bad)
push
push
fwait
inc
sub
aas
test
loope
jge
or
sub
jmp
neg
jns
jns
inc
mov
outs
stos
mov
sbb
loop
shr
adc
push
fsub
jmp
xchg
aam
jl
inc
xchg
ds
clc
cli
or
jo
pop
jmp
(bad)
jecxz
repz
call
outs
add
fwait
aam
xchg
scas
in
cdq
pushf
or
push
add
ret
mov
jb
xchg
ret
mov
mov
repnz
pusha
jne
out
or
or
cmc
push
dec
es
dec
jnp
jnp
imul
sahf
mov
mov
repnz
push
test
addr16
out
xor
inc
jg
sub
pop
cmp
push
cwde
jmp
inc
icebp
cmp
xor
push
xor
add
stos
out
(bad)
or
rcl
xchg
xchg
adc
mov
adc
jno
(bad)
imul
inc
push
lahf
mov
jmp
xchg
mov
fist
inc
pusha
adc
push
movs
mov
inc
sbb
inc
xor
jmp
add
pop
lock
rol
add
inc
xor
fwait
mov
mov
(bad)
dec
cmp
sub
push
aaa
adc
sar
mov
dec
xchg
pop
and
dec
scas
dec
mov
iret
xchg
xchg
push
lds
mov
mov
outs
imul
popa
cmp
xor
retf
dec
mov
ds
pmulhw
xlat
and
jae
stos
call
mov
mov
cmps
out
(bad)
idiv
loop
mov
test
loopne
xor
arpl
ret
leave
ins
mov
push
outs
jle
or
pop
jmp
mov
fisttp
cdq
xchg
sbb
pop
mov
push
jge
into
(bad)
sbb
rol
mov
mov
stos
sbb
jo
ins
shl
push
in
call
imul
or
call
cmc
and
jnp
pop
mov
push
mov
and
(bad)
gs
mov
pushf
push
jecxz
xor
outs
mov
ds
in
and
push
popa
mov
mov
(bad)
(bad)
adc
sbb
sub
inc
cmps
pop
jg
add
add
jmp
out
sub
push
pop
adc
(bad)
mov
mov
(bad)
fdivp
sbb
adc
push
pop
adc
xor
gs
inc
adc
mov
jge
arpl
adc
enter
(bad)
cmp
xchg
mov
mov
neg
fldenv
cmps
push
mov
movs
pushf
mov
into
sub
repnz
jle
sbb
fistp
out
mov
sahf
mov
out
mov
fnsave
jmp
aas
mov
retf
imul
dec
repz
sbb
jb
bound
jne
neg
pop
adc
cmp
stos
sub
in
ja
jns
mov
xchg
jg
jae
mov
adc
xlat
adc
dec
shl
xchg
or
push
cmp
mov
push
retf
popa
sbb
dec
imul
pop
leave
dec
div
out
jp
inc
dec
lahf
sbb
test
test
retf
adc
pop
push
or
loope
and
or
dec
jns
mov
rol
test
xor
scas
mov
cmps
out
idiv
cmps
je
js
repz
out
sub
cmp
xchg
popa
in
hlt
mov
jnp
cmp
cli
std
imul
inc
mov
xchg
repz
retw
xlat
(bad)
div
xchg
mov
nop
jns
or
mov
mov
lahf
jle
(bad)
stos
pop
shr
popa
in
mov
lea
mov
clc
xchg
mov
ret
icebp
mov
loop
mov
dec
arpl
retf
mov
iret
mov
jle
mov
dec
jmp
jge
adc
push
xchg
ins
sti
sbb
and
xor
push
xor
dec
dec
adc
add
xor
movs
retf
adc
in
jmp
add
ins
cmp
ins
cs
mov
add
js
int3
std
(bad)
mov
fistp
sub
shl
je
mov
into
mov
cs
test
jbe
fimul
push
mov
pop
xchg
cmp
leave
(bad)
retf
fwait
sub
(bad)
add
xor
das
idiv
cmp
inc
mov
icebp
push
xor
xchg
bound
cdq
repz
inc
jno
inc
add
xchg
(bad)
xor
sbb
fmulp
xor
jmp
test
mov
cmp
add
aas
sar
outs
mov
pusha
fistp
cs
inc
jns
in
aad
fldcw
mov
fs
sub
jns
and
cmps
sbb
mov
outs
int3
jbe
or
hlt
mov
retf
imul
popf
jmp
popf
clc
clc
cli
dec
mov
cmps
sub
pop
jo
popf
cmp
fisub
out
add
ins
cmp
mov
and
sub
cmps
cmp
mov
mov
test
mov
stos
lods
add
or
movsx
sbb
and
mov
mov
in
jg
sbb
aam
cdq
sbb
sbb
mov
ret
sti
add
add
push
aad
mov
pop
or
push
(bad)
enter
stos
in
xor
pop
dec
xor
push
inc
mov
sub
fwait
xchg
stos
mov
jnp
sub
jo
enter
xchg
fucomi
push
inc
cmp
jg
dec
xor
aam
mov
clc
sbb
push
dec
sbb
or
sbb
jmp
popf
push
or
cmps
das
and
mov
inc
lock
cmps
rcr
rcl
test
push
xchg
test
inc
into
mov
(bad)
and
pusha
mov
adc
fiadd
test
mov
jne
jl
pop
sbb
lds
dec
jo
loop
mov
popa
enter
fadd
ror
or
shl
in
mov
jo
mov
idiv
adc
pop
imul
daa
adc
cmp
add
ret
inc
pop
popf
out
push
pop
pop
dec
jg
jp
retf
jnp
cmc
ror
push
mov
push
adc
push
and
sbb
dec
xor
inc
ins
xchg
(bad)
mov
fdivrp
mov
inc
xchg
cs
xlat
scas
adc
popf
sub
add
sbb
fwait
das
outs
inc
mov
addr16
fisub
inc
adc
push
ficomp
pushf
icebp
cmp
sub
loopne
mov
or
xchg
dec
in
sub
je
cmps
cmps
mov
aaa
inc
aas
pusha
out
mov
test
push
xor
aaa
pop
leave
xor
scas
in
adc
cld
pop
shl
icebp
jae
pop
xchg
sub
pop
mov
xchg
mov
dec
(bad)
mov
xor
mov
stos
in
pop
mov
sahf
test
stos
cdq
(bad)
mov
lds
and
outs
dec
fadd
jmp
in
ror
add
and
loopne
pop
xlat
xchg
cmp
sub
sub
loop
and
inc
imul
jmp
cwde
pop
jg
push
cmps
ficomp
retf
ficom
movs
mov
xchg
jmp
stc
js
stc
pushf
xrelease
jg
pop
pusha
pop
xor
std
jnp
pop
jbe
inc
add
mov
hlt
movs
ret
ins
add
in
loope
sub
inc
dec
ror
icebp
cmp
push
ss
js
xchg
xor
fimul
xor
and
jmp
into
xchg
fist
cmp
xchg
iret
sbb
cmp
adc
out
iret
mov
cmps
in
bound
mov
cmp
add
jmp
mov
cmp
pop
dec
inc
test
aam
mov
repz
pop
or
stc
imul
adc
adc
clc
outs
in
mov
clc
dec
dec
stos
hlt
push
mov
shl
mov
ja
dec
call
xor
mov
outs
pop
sub
fisub
je
xchg
movs
repz
or
cmp
mov
push
fdivr
das
cmps
add
mov
xor
sahf
adc
mov
int3
jmp
hlt
popa
repz
dec
pop
mov
scas
ret
mov
into
xchg
pop
adc
out
ret
xor
add
and
das
sbb
xor
leave
sbb
push
cld
jge
mov
dec
dec
repnz
into
loopne
rol
out
sti
mov
sbb
mov
inc
hlt
fsubr
jmp
jnp
call
fsub
std
test
adc
dec
push
inc
aad
push
loop
sbb
add
inc
mov
lahf
std
fldenv
mov
(bad)
xor
pop
jle
cmp
mov
stc
or
mov
mov
int
or
bound
xchg
dec
(bad)
mov
cdq
lods
mov
bnd
sub
pop
lods
mov
mov
dec
cli
mov
dec
gs
push
xor
sub
aaa
sbb
xor
jle
pop
xchg
add
push
inc
fcmovu
icebp
xchg
inc
push
sbb
adc
fcomp
call
xchg
mov
mov
add
adc
ficomp
dec
lahf
add
mov
aam
mov
call
push
add
mov
loope
dec
add
out
or
nop
sub
cli
imul
or
mov
pop
or
inc
sar
pop
out
mov
iret
test
comiss
sbb
jo
test
fucomi
push
cmp
or
adc
in
lods
pop
ficom
inc
pop
mov
xchg
les
ja
stos
push
or
lods
iret
aas
(bad)
(bad)
jecxz
cmp
mov
in
xchg
arpl
jmp
or
sahf
add
or
dec
ins
mov
xor
bnd
inc
and
add
cmc
push
push
lea
pop
dec
add
or
aam
mov
cmp
xor
mov
sub
fistp
xchg
jo
dec
pushf
xor
mov
rol
sbb
and
adc
inc
cli
xchg
outs
xchg
fldcw
pusha
sbb
or
ror
pushf
or
inc
cmp
pop
jmp
cmp
jae
xchg
loopne
push
adc
scas
test
sub
cs
gs
jmp
adc
add
pop
xor
push
mov
xchg
mov
mov
aad
pop
mov
sub
push
mov
sar
ss
inc
es
mov
xor
jp
jmp
popa
call
add
or
je
in
push
xor
add
mov
hlt
ret
cs
push
add
jne
inc
jo
push
sbb
les
retf
outs
out
dec
push
mov
stos
and
mov
adc
pop
sub
adc
sbb
shl
xchg
xchg
call
arpl
mov
xor
out
lods
mov
lods
je
push
dec
and
cmp
sbb
push
sub
adc
pop
lods
test
sub
clc
jno
rol
mov
pushf
les
pop
push
pop
test
test
in
clc
pop
inc
mov
not
jg
mov
(bad)
cmc
lods
inc
jmp
add
out
push
clc
xor
push
fcmovb
retf
sbb
xchg
mov
(bad)
stos
xor
and
dec
fisttp
mov
jmp
scas
test
(bad)
mov
ret
fadd
pop
add
jae
mov
push
sbb
push
cwde
push
call
mov
jmp
and
push
add
or
retf
sar
movs
pop
leave
push
fnstcw
test
out
mov
test
aam
add
(bad)
dec
mov
imul
sub
push
inc
sbb
imul
dec
repz
cmp
icebp
sub
das
lds
cmps
cli
cmp
stc
mov
sbb
xor
leave
jp
add
and
jbe
mov
into
sub
pop
pop
cmp
and
loopne
aam
xor
in
jo
ss
retf
in
push
add
jb
sbb
add
sbb
push
xor
jle
jl
cmp
add
jmp
dec
sbb
push
outs
mov
(bad)
sub
or
bnd
cmp
mov
adc
adc
dec
jle
aas
dec
mov
je
mov
jmp
lahf
xchg
xor
xlat
hlt
inc
cvtdq2ps
push
imul
and
pop
dec
into
dec
icebp
aaa
leave
xchg
retf
pop
or
dec
add
xor
inc
push
cmps
adc
ror
bound
dec
dec
adc
inc
fcom
or
hlt
jne
loopne
jb
cli
jns
in
mov
jnp
stos
ja
outs
cwde
stos
aas
fdiv
xchg
mov
adc
sbb
push
icebp
data16
mov
fild
or
xor
neg
cwde
sbb
icebp
mov
push
bound
ret
(bad)
jns
mov
xchg
ret
push
inc
rcr
mov
iret
add
idiv
ds
inc
push
mov
repz
cmp
push
cmp
inc
nop
bound
jle
addr16
cmp
in
jno
sub
ret
js
sub
inc
enter
pop
inc
push
dec
jge
popa
sub
(bad)
in
mov
push
sbb
sub
je
nop
(bad)
rcr
mov
cwde
mov
adc
dec
adc
mov
pop
or
and
aas
les
mov
push
push
sbb
xchg
sbb
es
test
mov
retf
hlt
jecxz
lea
xor
inc
aad
adc
mov
jl
pop
lahf
js
loope
pop
mov
ss
add
jle
cwde
push
aas
mov
cmc
mov
mov
nop
xor
mov
daa
pop
das
not
call
jl
add
add
pop
xor
imul
cmp
mov
dec
scas
dec
xor
inc
and
add
mov
pop
(bad)
xchg
pop
dec
les
push
stos
pop
fdivr
rcl
mov
pop
mov
dec
xor
cmp
popa
or
mov
daa
cmp
int3
pop
adc
sub
out
dec
ds
dec
adc
push
mov
(bad)
(bad)
dec
test
test
xchg
int
(bad)
sub
inc
ins
mov
cld
or
jmp
adc
mov
sub
test
push
sub
movs
mov
es
pop
jmp
stos
(bad)
pushf
nop
ret
fs
cmp
outs
test
push
lea
shr
adc
ror
or
(bad)
popa
dec
sub
sbb
stc
push
mov
call
mov
daa
test
fild
adc
mov
sub
arpl
sub
scas
jmp
retf
and
pop
call
xor
sbb
mov
bound
push
(bad)
adc
es
cmp
cmp
cli
mov
jb
inc
imul
inc
cld
mov
enter
out
je
ds
xchg
jp
jl
(bad)
das
test
das
mov
hlt
or
jecxz
add
or
lds
mov
adc
in
std
out
jge
jmp
shl
(bad)
out
xor
call
cmp
or
jp
outs
sub
ds
xchg
mov
xor
add
(bad)
mov
in
adc
loopne
int3
cmc
jae
mov
sbb
in
shr
add
jp
es
repnz
jle
inc
or
inc
sub
dec
xchg
clc
inc
push
rcl
inc
or
dec
pop
mov
ror
fimul
mov
call
pop
jbe
sbb
icebp
sub
lods
in
sbb
rcl
pop
xor
jmp
push
mov
lahf
sub
mov
test
mov
xor
and
cli
imul
inc
mov
push
mov
addr16
(bad)
mov
fistp
in
pop
mov
push
and
inc
retf
pop
ds
rcl
leave
rcr
cmp
or
cmp
je
mov
rcl
and
add
push
mov
cs
sahf
jbe
xor
push
and
inc
inc
fisubr
inc
or
lahf
add
cmp
(bad)
jmp
enter
xor
popa
push
outs
jmp
ret
scas
adc
mov
les
jg
cmp
(bad)
mov
xchg
daa
cmp
push
std
hlt
fwait
push
imul
jno
aaa
push
jmp
es
and
call
shl
jmp
pop
or
push
cld
adc
xor
cmp
inc
sub
dec
outs
aaa
aaa
or
and
out
mov
push
daa
xor
xor
fnstenv
and
aas
push
mov
adc
leave
pushf
sub
or
jae
andnps
inc
mov
and
jl
out
fimul
stos
sub
mov
retf
sbb
and
mov
xchg
xor
enter
fdivr
sbb
and
enter
lea
rcr
repnz
mov
mov
mov
inc
aaa
aam
jno
ret
and
jmp
xchg
out
add
jg
mov
or
out
(bad)
cld
imul
mov
es
fcos
dec
jl
leave
sub
jmp
stc
inc
fistp
xor
mov
or
xor
(bad)
mov
cmc
stos
fwait
retf
jnp
push
mov
outs
and
add
mov
dec
xchg
mov
or
jle
(bad)
pushf
and
sub
imul
cwde
loopne
in
push
xchg
aam
ins
jnp
or
xor
sbb
repnz
bound
jo
jp
inc
imul
fwait
mov
or
and
push
js
sbb
pop
repz
and
gs
sti
dec
mov
scas
jl
test
add
or
int
inc
mov
pop
call
pop
pop
inc
jb
sahf
sahf
in
in
mov
mov
sbb
mov
mov
rcl
xchg
loop
mov
inc
leave
adc
pusha
mov
stos
mov
aaa
mov
cwde
imul
jg
cmp
repnz
dec
jae
aaa
movs
mov
aaa
mov
pop
js
or
and
push
fisub
pop
(bad)
aad
rcl
jp
cmp
stc
dec
int3
leave
jle
xchg
sub
xor
xchg
dec
xor
fsubr
or
xchg
sbb
mov
int3
in
xor
pop
mov
pop
push
test
pop
icebp
loopne
sbb
fisub
pushf
mov
xlat
les
dec
adc
call
(bad)
retf
das
and
clc
mov
cmp
mov
lahf
sub
fidivr
stos
pop
xchg
mov
ds
sub
or
mov
push
cmps
mov
push
add
cmp
and
movs
adc
dec
jl
popf
ror
jbe
and
test
or
pop
jmp
push
pop
push
mov
pop
movs
(bad)
mov
jg
imul
int
cld
push
je
mov
jno
fnstenv
inc
mov
jmp
mov
push
stos
xchg
push
mov
loope
pop
xchg
xor
jne
mov
adc
dec
cwde
cmps
pop
lods
or
jns
fnstenv
sbb
sbb
mov
xchg
cmc
xor
imul
scas
push
push
mov
jp
dec
sbb
sbb
xor
or
fcmovnu
and
jmp
daa
es
pop
mov
push
mov
mov
outs
(bad)
call
or
cli
shl
dec
addr16
les
hlt
cmps
test
lds
dec
les
xlat
pop
test
dec
js
and
out
in
out
movs
call
mov
xchg
adc
pop
mov
nop
loope
shr
nop
mov
push
pop
scas
movs
les
jae
ja
pushf
xlat
jno
loopne
add
ss
addr16
push
nop
mov
aam
inc
lods
aas
jnp
pop
mov
xor
(bad)
pop
mov
hlt
ins
lock
movs
scas
sub
xor
and
(bad)
adc
in
repnz
ins
arpl
shr
cmp
jmp
push
mov
add
pop
push
pop
mov
mov
mov
dec
dec
or
sbb
enter
mov
push
sub
push
xor
cmc
dec
xor
dec
mov
cmp
mov
sbb
and
test
or
add
bound
jecxz
jmp
xchg
dec
xor
sti
jno
sub
sti
inc
hlt
cmp
loope
retf
mov
pop
test
fs
push
dec
mov
sub
outs
jb
clc
ret
cmps
add
xchg
cwde
pop
(bad)
stos
sub
imul
movs
loopne
int
daa
push
jl
dec
add
into
bound
test
imul
pop
mov
or
sti
push
or
push
jg
repz
inc
sahf
in
rcl
dec
daa
outs
retf
jge
xor
nop
xchg
mov
mov
into
jae
(bad)
out
lods
lea
mov
loopne
inc
inc
leave
int3
fs
popf
jmp
xchg
push
or
inc
adc
scas
popa
stos
adc
gs
out
and
test
adc
mov
adc
jno
in
fld
shl
mov
stc
push
xchg
xor
icebp
call
mov
jo
or
outs
mov
pushf
dec
lock
mov
pop
xor
sbb
gs
add
pushf
cmps
add
or
push
mov
dec
push
movs
(bad)
push
aaa
psrld
or
xchg
jg
icebp
mov
mov
jo
retf
loop
nop
xor
ret
cmp
dec
sub
test
pop
ja
imul
ret
and
and
icebp
xchg
cwde
ficom
and
jmp
(bad)
std
fnstsw
dec
pusha
xchg
nop
add
pop
mov
in
push
nop
pop
cdq
imul
je
fsub
sub
aaa
cmp
outs
cmps
jle
(bad)
dec
mov
jnp
arpl
nop
adc
push
adc
mov
int
and
bound
inc
sub
nop
xor
inc
push
scas
adc
scas
(bad)
in
jnp
and
lea
(bad)
pop
rcl
mov
stos
int
or
adc
xor
xchg
rol
lahf
push
(bad)
push
dec
arpl
jp
movs
push
mov
rcr
push
push
push
les
mov
adc
push
sub
cmc
pop
daa
xor
lea
cdq
cli
add
add
loope
push
sbb
cli
arpl
push
mov
xor
loope
push
shl
add
adc
add
cmps
cmp
jg
dec
fwait
xchg
aaa
mov
mov
mov
adc
jb
mov
sub
dec
cld
xchg
push
cmp
cmp
fwait
pop
in
inc
fucomp
push
rol
dec
and
sbb
jb
inc
cdq
lahf
test
loop
jge
test
stos
inc
jno
daa
sub
(bad)
cmps
out
jno
push
gs
clc
mov
pop
dec
cld
je
pop
and
inc
push
pop
mov
rol
mov
fcomp
jbe
inc
dec
pop
push
sub
out
and
call
(bad)
mov
in
in
mov
jae
pusha
mov
outs
mov
adc
jnp
add
call
sbb
dec
mov
or
pop
pop
mov
mov
in
xlat
pop
ins
test
mov
ror
shl
aad
out
dec
sbb
sbb
mov
retf
outs
(bad)
inc
add
xchg
inc
in
mov
js
test
bound
movs
push
push
adc
pop
out
jg
add
aam
fwait
ret
pop
cmp
fiadd
jbe
lock
popa
daa
test
xor
mov
sbb
push
xchg
mov
es
fs
mov
add
dec
dec
xlat
fsubr
dec
jmp
stc
stc
push
xchg
sbb
xchg
(bad)
rcl
loope
mov
(bad)
fucom
push
fadd
das
jne
xor
cmp
mov
cmps
push
icebp
adc
sub
mov
xchg
inc
pop
or
xchg
ins
aad
jmp
pop
sub
pop
mov
shr
aam
xchg
mov
out
add
add
mov
push
rcr
pop
xor
test
mov
cdq
leave
sbb
aad
sub
pop
xlat
popa
xor
repnz
mov
(bad)
adc
sbb
fucomip
pushf
addr16
rcl
call
dec
dec
add
mov
xchg
xor
std
add
inc
xchg
and
cli
mov
jbe
dec
into
jae
data16
cmps
pop
xchg
(bad)
std
dec
xchg
xchg
ror
leave
fisttp
dec
cli
retf
sub
pop
sbb
lods
jmp
adc
pop
clc
xor
iret
jns
aas
popa
sub
frstor
cmps
mov
pushf
das
lahf
js
cmps
adc
mov
(bad)
ins
test
xchg
sub
cmc
jmp
push
cmps
or
or
adc
popa
pop
movs
push
or
(bad)
jl
push
sar
pushf
xor
cmp
push
mov
mov
sbb
push
mov
(bad)
test
add
in
inc
aam
inc
pop
xor
mov
aas
outs
ins
call
mov
mov
test
pop
or
xor
rcl
jle
mov
ss
fmul
lock
iret
pop
lods
arpl
sub
push
or
fmul
mov
xor
push
fdivr
dec
or
fwait
lods
push
push
sbb
leave
daa
add
mov
enter
es
ror
add
stc
push
xchg
call
jo
xchg
xchg
out
test
ins
lds
adc
cmp
push
xchg
add
mov
mov
fiadd
lds
adc
(bad)
mov
mov
std
or
and
sub
ret
xchg
dec
inc
imul
pop
jge
cmp
sti
xchg
sub
loopne
push
test
cwde
dec
bound
int
hlt
sub
sub
in
push
popf
mov
lods
aam
shl
fdivr
push
inc
shl
std
je
loopne
mov
stos
pop
xchg
fidivr
cmps
leave
ret
mov
mov
jae
mov
fiadd
out
dec
add
pop
add
loope
jnp
jns
jne
adc
adc
jbe
sahf
lods
fiadd
imul
push
outs
sbb
sbb
adc
and
dec
jae
imul
dec
ja
jg
mov
je
xor
fsubr
sahf
jecxz
inc
cmps
bswap
ret
test
sbb
mov
pop
ins
dec
jmp
sub
loope
daa
cdq
fcos
add
ret
sbb
out
jae
cmc
sbb
push
ret
movs
popa
imul
inc
addr16
pop
pop
push
sahf
fwait
xchg
push
mov
mov
dec
inc
aas
rcl
sbb
in
push
shl
xor
call
ds
or
mov
and
xor
cwde
(bad)
xlat
pop
fsubr
jns
fcom
test
adc
fist
loop
ret
dec
dec
lea
in
mov
cmp
adc
xlat
pop
je
push
out
sub
mov
inc
test
retf
gs
fidivr
inc
mov
push
daa
cmp
dec
push
int3
sub
inc
or
js
(bad)
sahf
stos
vsqrtpd
not
shr
rol
icebp
jnp
sub
mov
leave
xor
mov
or
das
daa
pop
outs
call
lock
xor
dec
pop
mov
leave
push
xchg
xchg
dec
ins
jae
xchg
add
mov
mov
pushf
call
lods
xlat
sbb
cmp
and
jbe
(bad)
add
arpl
jb
imul
adc
popf
push
mov
push
jg
xlat
dec
iret
data16
mov
(bad)
xor
les
push
sub
inc
dec
xchg
mov
cwde
popa
adc
clc
pcmpeqw
scas
dec
sub
or
mov
pop
mov
mov
test
cmp
fiadd
in
add
std
jb
stos
dec
nop
jnp
mov
cld
adc
movs
mov
scas
mov
jb
pop
inc
jbe
mov
dec
loope
inc
push
xchg
inc
jne
mov
out
ins
mov
scas
adc
dec
mov
iret
shr
jg
mov
add
ror
mov
shr
std
dec
test
(bad)
cmp
in
in
ins
out
push
push
mov
push
call
pop
loop
lods
and
lea
xchg
dec
aam
add
push
fmul
sbb
stc
jge
inc
cdq
dec
sbb
fimul
ror
dec
xchg
sub
cmc
mov
ret
cdq
popf
ud2
cs
xor
push
cwde
and
jb
lods
sub
push
mov
push
push
ds
in
mov
mov
pusha
fisub
gs
and
push
mov
add
add
sub
(bad)
jne
pop
(bad)
adc
lock
stos
push
les
call
add
outs
ret
in
or
adc
jl
dec
jge
leave
mov
mov
iret
idiv
inc
ins
dec
ds
cmp
aas
push
int
movsx
loope
into
push
jno
enter
cmp
addr16
add
nop
js
sbb
retf
jo
mov
cmp
push
fnstcw
mov
adc
mov
pop
add
cwde
clc
add
scas
xchg
popf
repnz
jnp
dec
jb
arpl
mov
lods
outs
cld
mov
call
(bad)
add
hlt
push
sahf
and
shr
in
test
pusha
fstp
jbe
sti
test
cwde
mov
mov
adc
loopne
add
test
out
popa
mov
movd
loope
jecxz
xor
jle
out
dec
aam
retf
in
cmp
popf
or
inc
fdivr
in
dec
inc
in
sub
test
xor
jmp
popf
jp
(bad)
sbb
div
xchg
ins
and
je
inc
push
add
pusha
stc
sahf
enter
movsx
cld
rcr
or
cmps
test
mov
xor
addr16
xchg
(bad)
adc
lods
mov
jg
gs
sub
jp
jle
cld
jns
mov
inc
sbb
cmps
mov
pop
cmp
pushf
xchg
lods
popa
inc
mov
dec
mov
mov
dec
push
repnz
sar
outs
std
adc
add
iret
ds
pop
push
mov
or
ret
xchg
rcr
jl
sbb
ins
xchg
inc
test
jnp
fdivr
push
loope
ret
(bad)
ss
mov
mov
shr
pop
sub
stc
cmp
push
cmp
fst
dec
pop
pop
mov
jae
dec
pop
and
mov
pusha
mov
lea
mov
pop
inc
inc
push
in
add
sbb
test
dec
sub
cdq
div
int3
lods
(bad)
add
dec
sbb
sbb
inc
(bad)
or
sbb
lds
stc
push
pop
xchg
and
(bad)
fstp
pop
jmp
jg
in
push
and
push
nop
ret
inc
dec
rcr
imul
je
aad
push
jbe
add
jb
jnp
xchg
or
dec
lods
shl
retf
jmp
xor
and
enter
arpl
push
mov
setle
xor
xchg
hlt
dec
mov
xchg
inc
pop
push
jb
call
cmps
pop
mov
and
or
push
pop
adc
mov
mov
pop
jl
push
jo
add
fsubp
push
(bad)
(bad)
pop
cmp
fnstenv
not
sahf
in
jle
stos
mov
sub
repnz
jp
leave
inc
jne
pop
or
xchg
lahf
mov
xchg
scas
jno
fisubr
dec
pop
add
popf
push
(bad)
idiv
aaa
push
pop
ss
pop
sub
and
cwde
add
xor
es
mov
stos
jmp
sbb
(bad)
movs
push
fadd
call
mov
ins
pop
jmp
inc
popa
rol
movs
retf
adc
les
and
sbb
shl
mov
inc
(bad)
xor
xchg
inc
mov
sub
clc
ins
cmp
movs
add
xchg
or
or
fwait
jns
mov
in
sub
cmp
lods
push
fidivr
sbb
adc
or
(bad)
mov
dec
and
ins
scas
inc
jb
lods
jb
dec
ds
rcl
and
jns
jbe
fwait
stc
push
sbb
das
sti
inc
das
pop
icebp
repz
jmp
sbb
ins
or
cmps
adc
out
jno
fwait
push
aas
jecxz
out
cmp
jmp
jp
in
mov
or
stos
cmp
loopne
jbe
stc
jbe
ret
jle
into
call
je
mov
mov
repnz
sub
lds
bound
(bad)
xchg
sub
inc
iret
and
xchg
lods
mov
retf
lds
das
lock
pop
ret
aas
fbstp
enter
and
rcr
and
stos
movs
jbe
(bad)
aaa
mov
cwde
pop
aam
pushf
les
adc
and
gs
jns
sbb
push
inc
jae
cwde
ja
inc
push
aam
mov
pusha
(bad)
div
mov
push
cwde
jmp
aaa
xchg
imul
mov
fbstp
aas
test
push
retf
cmp
adc
inc
test
mov
add
mov
push
lock
inc
nop
test
mov
jl
retf
outs
fimul
sub
mov
adc
xchg
mov
pop
xchg
xor
pushf
lea
mov
movs
es
pop
xchg
jl
adc
push
push
(bad)
mov
inc
movs
sub
push
nop
repz
lahf
pushf
ret
mov
div
int
add
and
mov
cmp
xchg
fiadd
mov
push
cmp
cmps
push
loop
loope
mov
jno
and
sti
ror
js
or
test
icebp
lock
inc
mov
xor
aad
inc
popa
pop
sub
in
fdivr
shl
push
mov
je
sbb
loope
icebp
adc
xchg
mov
mov
inc
repz
not
repnz
imul
fild
fcmovnb
mov
jnp
mov
ins
jns
xor
push
and
jg
mov
dec
lds
cdq
sti
mov
pop
pop
cwde
retf
add
cmp
gs
jl
nop
fs
inc
jbe
out
fmul
movs
mov
fs
fmul
xchg
xchg
inc
lock
frstor
es
stos
inc
nop
ret
inc
fnstsw
and
pushf
dec
into
fisttp
jno
jns
(bad)
mov
sub
fiadd
and
adc
mov
retf
sub
into
mov
cwde
es
out
(bad)
aam
test
movs
and
dec
jo
xor
adc
dec
pop
push
push
add
xor
jnp
lss
repnz
sbb
test
popf
mov
add
call
cmp
(bad)
shl
call
pop
lods
cmp
aad
aad
shr
and
cli
xchg
frstor
inc
push
dec
std
dec
add
out
ins
int3
mov
gs
in
sub
push
retf
rcr
push
cmp
sti
push
mov
dec
in
je
jne
dec
xlat
sub
mov
rcl
pop
or
fnstsw
fwait
and
out
xor
sub
retf
lods
out
gs
(bad)
rcl
xlat
sub
outs
jmp
imul
lock
cld
ss
jmp
(bad)
sub
dec
xor
pushf
xchg
movs
sbb
xchg
mov
or
push
out
std
daa
enter
mov
pop
popf
push
fwait
jno
pusha
fimul
xor
out
(bad)
imul
aad
add
xchg
cmp
call
sbb
cmp
mov
lahf
xchg
fadd
fbld
test
cmp
bound
xor
dec
sub
inc
add
ret
stos
xor
imul
inc
push
iret
and
pop
es
std
and
fld
neg
arpl
iret
jge
sbb
call
dec
inc
lds
hlt
in
aas
adc
mov
sub
inc
ds
cdq
xor
sbb
lods
retf
xor
aas
add
jb
add
test
(bad)
mov
jne
lahf
js
rcl
ds
(bad)
xor
add
cdq
sbb
icebp
sub
fisttp
cmps
or
in
fsubr
push
sub
mov
sbb
mov
xlat
sbb
pop
jb
sub
js
jecxz
mov
stos
pop
shl
cmp
cmp
popf
cmc
into
enter
push
jmp
pop
pop
dec
xor
ins
cmp
cwde
imul
mov
adc
(bad)
mov
pop
movs
push
adc
sti
sbb
push
aas
mov
out
mul
and
lods
inc
pop
and
iret
ss
pop
gs
stos
scas
jmp
push
sbb
out
pop
(bad)
mov
mov
fisub
ficom
shl
push
jbe
aaa
cdq
out
xchg
cdq
addr16
jnp
and
stos
mov
adc
div
daa
pop
or
test
div
(bad)
sbb
mov
xor
fnstenv
int
xchg
xchg
mov
sbb
push
and
repz
cmc
xchg
pop
aaa
lahf
movs
push
mov
sbb
scas
push
mov
out
sbb
(bad)
stos
jbe
pop
xchg
das
add
je
movs
lods
in
mov
sub
xchg
adc
mov
add
sub
test
repz
and
adc
clc
js
(bad)
aad
dec
dec
xor
sbb
(bad)
or
add
mov
in
adc
std
mov
adc
pop
dec
(bad)
call
sub
fidivr
cmp
aas
add
cmps
add
daa
ins
cmp
mov
jo
push
ins
retf
rol
clc
add
mov
into
ror
sbb
dec
pop
ret
cmp
add
out
lahf
inc
adc
or
inc
(bad)
jle
test
(bad)
fwait
imul
mov
xchg
test
(bad)
cdq
sbb
and
push
or
mov
out
pop
(bad)
(bad)
xchg
in
fst
xor
fs
lods
inc
loop
test
xchg
in
scas
xchg
inc
push
dec
or
lods
test
sbb
push
mov
jmp
les
into
ja
outs
ror
dec
mov
mov
push
jmp
inc
xchg
add
cs
nop
mov
add
ret
test
mov
push
xchg
fldcw
fcmovb
ror
ficom
cmp
adc
icebp
aas
inc
cli
in
mov
add
addr16
imul
or
loopne
movs
aad
not
adc
xor
cmp
xchg
repz
stc
cmp
mov
(bad)
mov
outs
les
(bad)
ret
cld
fwait
cwde
outs
dec
arpl
cmp
inc
cmp
lods
sbb
pop
mov
jo
sub
out
mov
sbb
loop
mov
pop
push
add
dec
movs
in
jnp
mov
push
mov
xchg
push
imul
arpl
(bad)
ucomiss
add
or
mov
clc
pop
xchg
xchg
sbb
sub
and
sbb
jecxz
mov
jbe
mov
push
or
rcl
jbe
dec
in
shr
cli
mov
cmp
sar
sbb
sub
loop
(bad)
stc
push
out
or
test
and
test
sub
sub
movs
(bad)
ret
cmp
cmp
test
jmp
in
dec
out
in
inc
sar
clc
xlat
shr
fnstcw
ret
icebp
(bad)
sbb
push
inc
cs
sbb
(bad)
xor
cmp
test
sbb
cmc
jnp
scas
push
data16
jmp
inc
sbb
cli
jns
or
push
pop
and
pop
or
xchg
sbb
xchg
sti
movs
push
sbb
dec
(bad)
sub
jl
std
inc
popa
adc
dec
xchg
lods
mov
inc
push
outs
das
dec
fsubr
and
stos
inc
aaa
jge
pop
ins
fadd
xlat
sar
pop
fisubr
lfs
adc
aad
inc
xor
adc
enter
xor
dec
std
pop
dec
jno
test
cs
cmp
inc
test
aas
push
inc
stc
mov
sub
test
retf
aaa
in
std
sbb
(bad)
in
add
inc
dec
out
int3
inc
jbe
pop
or
sub
add
out
cdq
jae
shl
jg
popa
xchg
fcomip
pushf
mov
xchg
mov
inc
repz
xor
test
stc
mov
bound
jge
lock
xchg
imul
push
and
ins
(bad)
nop
pop
xor
adc
mov
add
pop
xor
stos
sar
xor
push
xor
in
pop
sbb
(bad)
fistp
push
sbb
mov
xchg
aaa
repnz
daa
jb
xor
inc
xor
add
nop
rcr
mov
pop
xchg
push
fmul
adc
pop
aas
leave
scas
cmps
sbb
std
dec
pop
sbb
cmp
out
pusha
imul
fcom
ja
sbb
sar
cwde
jle
and
or
or
not
pop
in
mov
or
sbb
fcomp
iret
adc
inc
sub
xlat
add
imul
test
or
mov
and
sub
or
aad
cmp
mov
popa
fstp
pop
xor
pusha
(bad)
bound
push
sbb
jle
fdiv
ret
push
sbb
mov
dec
mov
or
jae
fcmove
inc
stos
cmp
xchg
push
sar
ins
ss
mov
(bad)
sbb
cmp
aaa
(bad)
and
adc
les
es
loope
add
fcmovb
fidiv
xchg
lahf
in
pop
xor
jns
cwde
inc
pop
ins
jmp
adc
ficom
fwait
xchg
in
outs
hlt
dec
jmp
jl
xchg
das
mov
cmp
lods
xchg
xchg
cmp
not
sbb
xchg
jmp
mov
push
xchg
ss
dec
mov
push
inc
lea
jb
cmps
(bad)
das
pop
push
ficomp
pushf
xor
std
cmp
jno
test
leave
ja
jle
pop
bound
add
and
cdq
adc
xchg
shl
aaa
cmp
pop
push
call
adc
(bad)
or
mov
mov
ret
mov
inc
xchg
ds
mov
mov
xor
and
js
mov
loopne
fdivrp
mov
pop
mov
cmp
stos
test
mov
adc
cdq
aam
in
cmps
inc
popf
js
das
out
sahf
or
cmps
push
xlat
xor
loopne
pop
adc
test
push
mov
iret
add
aam
and
adc
mov
fild
clc
xchg
pop
mov
or
jo
adc
xchg
mov
cld
outs
or
adc
jo
(bad)
sbb
aaa
clc
xor
xor
ja
into
jge
jo
addr16
loopne
mov
or
inc
fs
les
xor
xchg
dec
adc
mov
stos
mov
jo
mov
adc
retf
inc
ret
inc
test
inc
sbb
jo
jge
mov
push
pop
fisub
cmp
(bad)
call
mov
jp
out
mov
adc
jnp
aaa
pop
fld
jle
in
mov
rcl
xor
ja
mov
(bad)
lahf
and
fwait
sbb
ja
push
jne
out
pop
in
iret
xchg
push
mov
stos
sbb
aaa
sub
xor
fsubp
adc
jnp
lea
sub
mov
cmp
xchg
mov
in
inc
pop
adc
sub
cli
aad
push
sbb
add
or
xchg
cwde
in
and
repnz
mov
cld
add
fcmovbe
inc
shl
retf
popa
shr
scas
pop
imul
mov
and
or
sub
jnp
mov
jne
mov
shr
mov
mov
sub
or
loope
adc
push
out
cmp
push
scas
arpl
ss
xor
stos
aad
inc
mov
fsubr
sub
xchg
xor
push
inc
jmp
loopne
jns
pop
inc
outs
adc
push
stc
ror
dec
dec
lods
fsub
push
xlat
jbe
fidivr
xor
out
jl
dec
stos
jge
jmp
(bad)
js
xlat
mov
jne
scas
xchg
xchg
movs
das
repz
(bad)
fld
cmps
push
inc
dec
jle
test
in
test
mov
js
inc
rcr
(bad)
add
mov
ss
call
or
pop
or
adc
push
xchg
cmp
hlt
adc
aaa
xchg
out
inc
jg
cwde
lahf
sub
fwait
mov
sbb
lahf
xchg
arpl
ret
retf
jp
jns
das
sbb
cmp
inc
les
lods
dec
into
and
lea
push
stos
jge
mov
xlat
stos
jge
fwait
sub
mov
sub
push
(bad)
and
sbb
xor
jne
adc
ins
mov
sbb
xchg
shr
js
dec
in
or
or
je
jle
jbe
or
xor
not
jo
sbb
cmc
sbb
popf
xchg
pop
and
push
addr16
aad
xor
repz
push
ret
pop
cmp
fidivr
retf
ret
xor
inc
in
scas
cmp
dec
loop
and
and
mov
test
cmp
data16
inc
sbb
cdq
(bad)
aas
outs
sbb
lods
in
inc
sbb
or
scas
sub
(bad)
pop
sbb
mov
jno
xchg
(bad)
sti
cmc
push
push
jbe
push
inc
in
imul
aas
sbb
push
out
test
aam
out
adc
les
in
arpl
and
jb
xor
clc
mov
xchg
pop
jge
lock
inc
push
pop
jl
out
test
ja
mul
ficom
fcom
or
in
cld
ret
repnz
test
sub
xchg
mov
or
imul
add
scas
icebp
js
pusha
inc
mov
or
stos
add
pop
stos
pop
test
daa
push
mov
mov
pop
ins
sub
stc
add
cmp
xchg
xor
(bad)
mov
pop
push
mov
cdq
icebp
xlat
inc
sahf
rcr
icebp
mov
test
retf
movs
ins
out
and
sub
inc
aad
pcmpeqd
dec
add
pop
ret
adc
inc
cmp
dec
inc
mov
mov
clc
add
sbb
pusha
and
out
jmp
iret
js
mov
outs
add
repz
xor
gs
call
ds
add
test
lock
lahf
push
lds
mov
mov
push
dec
(bad)
cld
popa
imul
push
xor
shl
and
out
jne
inc
fcom
or
stc
popa
mov
popw
push
push
or
aad
pop
test
mov
add
jae
out
mov
nop
icebp
sbb
je
xor
xor
pop
xchg
leave
xchg
sub
adc
pusha
stos
(bad)
leave
xor
(bad)
xchg
imul
and
push
add
pop
cmc
rcl
inc
push
es
cmc
sbb
mov
pop
or
imul
std
call
sub
mov
aad
push
lock
mov
hlt
adc
sub
in
loope
xchg
jno
pop
xchg
call
xor
retf
push
cmp
or
aas
js
add
js
movs
xor
stc
mov
nop
mov
jne
vcvtdq2pd
or
add
mov
ror
dec
movs
je
test
ret
and
mov
jb
dec
cdq
mov
(bad)
xor
mov
cli
push
not
repz
adc
lock
inc
inc
into
sahf
xchg
dec
scas
adc
sbb
(bad)
call
les
(bad)
mov
aad
xor
pushf
push
test
loop
mov
in
std
cmp
dec
xchg
imul
iret
push
jl
dec
pop
pop
cmps
cmp
daa
mov
sbb
adc
lock
pop
clc
addr16
call
mov
xor
test
rcr
repz
xchg
out
push
aad
jle
movs
push
leave
xchg
xlat
daa
ficom
mov
imul
sub
jmp
sar
xor
mov
sub
iret
xor
pop
xchg
push
cdq
cmp
enter
movs
outs
cmps
mov
sbb
hlt
push
xor
mov
adc
mov
bound
ja
pop
stos
(bad)
mov
(bad)
test
inc
mov
cmp
call
push
sbb
pusha
cmp
sar
xor
and
xchg
fidivr
add
rcr
sbb
mov
ins
add
(bad)
in
test
movs
xchg
jb
mov
(bad)
loopne
adc
sub
adc
cmps
icebp
fs
(bad)
(bad)
adc
iret
in
sbb
xchg
fisttp
cmp
jmp
imul
xchg
out
adc
daa
or
popf
ins
add
push
push
lea
jae
cwde
add
sbb
scas
push
and
mov
scas
aam
cmp
out
sbb
(bad)
dec
imul
sub
mov
xor
fisub
or
jle
sub
pop
xchg
cmp
xlat
ja
shl
adc
dec
das
adc
loop
test
mov
jle
test
imul
int
pop
or
adc
lods
cld
stc
loopne
sbb
cmp
inc
or
add
ret
jne
dec
push
inc
push
inc
pushf
mov
loopne
mov
mov
mov
es
sti
sbb
lds
xchg
movs
std
inc
hlt
mov
mov
fild
gs
imul
cli
fcomp
inc
std
jmp
add
leave
or
out
inc
call
gs
mov
sub
outs
mov
nop
inc
call
cmp
bndldx
xor
bound
shr
push
cmc
enter
(bad)
pop
cmc
retf
or
leave
std
push
test
popf
and
add
push
push
nop
lahf
jns
xchg
push
xlat
test
outs
aam
aad
nop
mov
iret
mov
mov
iret
pop
les
popa
in
mov
repnz
js
mov
retf
pop
js
movs
mov
sub
cld
retf
pushf
xchg
and
push
test
push
and
aam
scas
(bad)
pop
inc
cmc
cmp
add
jecxz
iret
xor
pop
pushf
or
aam
int
aaa
repz
adc
shr
xor
in
mov
(bad)
fist
mov
nop
push
sar
inc
lods
push
in
in
xchg
int3
mov
daa
mov
jle
sbb
das
shl
inc
ins
out
adc
retf
jbe
jae
cmc
out
rol
shr
out
or
addps
lock
push
mov
push
jg
nop
cld
mov
inc
jle
ss
pop
cs
push
or
shr
(bad)
adc
mov
jno
mov
aad
push
cs
fild
mov
mov
and
cdq
dec
sub
push
push
dec
and
add
mov
push
cdq
mov
cwde
push
call
or
sahf
sbb
mov
(bad)
fild
or
test
fdivr
mov
adc
cli
jg
xchg
sub
and
add
xor
jmp
and
jae
lahf
rcl
xchg
pusha
jmp
xchg
mov
mov
enter
dec
aas
mov
in
les
push
test
mov
test
xor
rol
mov
nop
retf
ret
mov
test
ins
jmp
test
lock
jge
mov
dec
and
loope
jg
sti
adc
ins
test
inc
loope
cmps
sbb
pop
push
fwait
jle
and
scas
pop
xor
dec
pop
lahf
sub
sbb
(bad)
in
pop
jb
fnstsw
pop
ret
pop
mov
jp
sub
in
into
pop
loop
jbe
or
sbb
int3
out
dec
mov
retf
(bad)
sbb
sbb
pop
loope
lahf
jo
loopne
in
mov
imul
mov
sbb
stos
jge
push
sub
dec
scas
dec
test
ror
push
out
mov
jno
add
or
jmp
es
push
aas
(bad)
out
popf
jo
mov
lds
repnz
ds
push
jo
sbb
scas
outs
addr16
addr16
clc
nop
fisub
(bad)
call
movs
lahf
retf
cmps
xchg
and
(bad)
jo
and
xchg
cmp
lds
es
fs
or
push
or
mov
sub
fild
outs
out
loope
sub
sub
mov
lods
dec
popa
xor
gs
mov
test
adc
dec
jae
push
adc
call
imul
cmc
in
out
xchg
(bad)
ror
and
jnp
lahf
pop
inc
dec
xlat
pop
shl
push
dec
in
dec
sub
pop
in
cs
dec
(bad)
sti
add
mov
cmp
xchg
test
lahf
mov
fs
mov
cdq
jmp
js
mov
mov
es
jo
jg
add
xchg
ret
mov
leave
sbb
sbb
mov
and
aaa
dec
pop
lea
pop
cli
inc
gs
inc
dec
neg
outs
or
shl
xchg
(bad)
pop
mov
and
in
loop
xchg
std
loope
scas
(bad)
jg
jae
rcl
and
ja
sbb
ss
and
mov
out
or
sar
adc
or
dec
pop
leave
(bad)
aad
push
scas
jb
inc
cmp
ins
jnp
cmovg
mov
mov
dec
inc
pop
dec
mov
aam
movs
mov
inc
popa
inc
inc
jae
mov
into
xchg
stc
fmul
and
iret
cmp
scas
push
jmp
lea
adc
aaa
jmp
fld
push
jmp
inc
and
jnp
out
in
pop
sti
push
inc
fistp
add
push
hlt
adc
push
stos
clc
sub
jp
fadd
loop
inc
push
ins
sbb
inc
cmp
inc
les
imul
or
sub
cmp
sbb
arpl
scas
mov
inc
jb
call
jmp
mov
cwde
lods
arpl
aaa
jmp
fcomp
mov
push
out
pop
mov
jp
mov
idiv
adc
adc
sub
push
movs
loop
loope
mov
or
or
daa
fidiv
call
jmp
leave
mov
add
xchg
dec
or
mov
jbe
jmp
push
push
or
push
hlt
xchg
dec
cmp
pop
jnp
in
add
jo
repnz
enter
mov
xlat
es
push
cmp
aad
jno
imul
pop
cmp
mov
inc
repnz
sbb
and
mov
rcr
mov
ins
dec
aam
out
lock
adc
and
mov
or
cmps
mov
adc
stc
dec
stc
adc
mov
not
sbb
sti
inc
add
shl
ins
cmp
add
lods
stos
mov
pop
cld
call
rcl
jo
loopne
enter
lahf
mov
pop
in
jmp
sub
xor
popa
sar
mov
push
in
sub
outs
aas
add
test
daa
(bad)
cs
pushf
inc
dec
rcr
ja
aas
(bad)
inc
fbstp
iret
sub
add
pop
jae
call
pop
fmul
pop
mov
mov
leave
dec
inc
sbb
dec
xchg
sub
cmp
or
ss
add
adc
fs
sub
cs
xor
sub
fwait
and
movs
in
push
stos
or
and
mov
cmp
clc
cmp
fst
enter
sub
rol
jecxz
sahf
pop
push
mov
adc
push
pop
xchg
jmp
pop
iret
jg
fwait
inc
xor
dec
push
or
into
xor
push
add
sti
out
mov
cmp
xchg
(bad)
xor
mov
lods
cdq
js
call
sbb
sbb
cld
push
mov
and
into
das
jno
cmps
cmps
pusha
inc
mov
out
inc
imul
pop
in
lea
cmc
fsub
dec
dec
cwde
inc
loope
mov
sub
bound
ficom
(bad)
mov
or
mov
push
mov
jmp
sahf
rcr
sub
mov
push
jnp
or
mov
jl
lods
fcomi
fwait
pop
jp
dec
pop
dec
imul
enter
mov
mov
cli
push
inc
rol
xor
jae
jae
test
mov
jle
fdivr
jp
scas
and
(bad)
test
add
cmps
in
mov
and
cmp
sub
jb
inc
inc
imul
ror
(bad)
and
cmps
sub
out
into
push
fwait
je
mov
add
out
dec
add
call
xchg
scas
std
sar
data16
cmps
add
(bad)
(bad)
push
xchg
xor
jb
fldenv
jmp
xchg
cmps
cld
mov
pop
cmp
nop
dec
les
lods
int3
mov
xchg
test
daa
dec
pop
cmc
add
push
ror
or
jecxz
xor
in
push
xchg
out
or
aas
adc
jne
loope
fs
shr
jnp
int3
scas
mov
push
push
inc
scas
arpl
inc
push
mov
or
ja
jg
sub
mov
iret
inc
fnstenv
dec
cmp
aad
mov
push
xor
jo
mov
dec
inc
lahf
cdq
cli
inc
les
ret
arpl
jecxz
mov
loopne
jp
jg
cdq
xchg
callw
stos
in
adc
cdq
mov
(bad)
push
cld
test
or
cmps
mov
add
scas
push
popa
loop
aas
ret
(bad)
inc
xor
dec
jmp
fisttp
out
fcomip
sub
cwde
xchg
leave
leave
xchg
dec
stc
cmc
or
jo
stos
push
fimul
mov
cwde
dec
rcl
mov
push
(bad)
retf
pushf
sbb
in
sub
xchg
(bad)
std
not
adc
lock
push
ret
dec
retf
movs
sbb
test
stos
jb
xor
fnstenv
sbb
cwde
into
cmp
shr
cmp
lock
adc
bound
sbb
jp
xchg
sbb
popf
mov
ret
addr16
cmp
div
cmc
lock
dec
addr16
aam
xchg
or
mov
ins
(bad)
xor
imul
ds
dec
sbb
pushf
xchg
sbb
and
rol
fist
and
mov
cmp
loopne
ret
stc
jno
fstp
and
clc
cmp
nop
push
sub
sbb
sbb
add
out
jmp
xor
lahf
and
add
add
shl
adc
leave
(bad)
cmp
push
bound
(bad)
dec
mov
data16
out
xchg
push
mov
xor
scas
xchg
scas
push
inc
adc
lods
and
lea
jbe
add
hlt
aas
mov
cmp
xchg
or
inc
jecxz
aas
inc
dec
jnp
fwait
in
neg
daa
cmp
cmps
cmp
dec
retf
or
or
sub
cmps
xchg
xchg
in
outs
mov
adc
ins
sub
js
test
idiv
shl
jl
inc
inc
lds
or
popf
xchg
add
clc
popa
cs
sbb
inc
imul
out
sbb
xchg
mov
cwde
and
cwde
jo
push
mov
push
and
jmp
and
iret
pop
xchg
ja
add
and
xor
jge
mov
cdq
aam
shl
xchg
jmp
sbb
stos
or
adc
mov
ror
pop
dec
sar
push
adc
xchg
push
test
push
xchg
cmp
mov
lock
add
repnz
loope
or
ds
fisub
inc
push
hlt
rcl
mov
push
cmp
dec
mov
ret
aaa
retf
jg
sbb
mov
mov
es
or
ds
fcom
ror
loope
jns
(bad)
js
jecxz
out
xor
movs
and
or
icebp
repnz
jl
mov
and
xchg
sbb
out
mov
add
mov
jl
sahf
jnp
xor
cmp
sub
xor
mov
jmp
and
sti
adc
fucomp
sbb
dec
adc
into
mov
ret
scas
cld
mov
mov
push
pminsw
xchg
cdq
nop
stos
adc
jecxz
sub
movs
enter
pop
xchg
add
jp
adc
push
vshufps
call
aaa
cli
inc
inc
rol
lods
xchg
sub
add
in
pop
(bad)
jnp
dec
mov
jle
sub
and
icebp
or
cmp
mov
or
mov
xchg
ins
icebp
fs
ds
add
mov
loopne
cli
shl
pop
push
loope
(bad)
scas
aaa
add
lock
arpl
mov
(bad)
inc
fdiv
push
pop
call
fbld
mov
(bad)
push
shl
ror
xchg
xchg
pop
mov
das
shr
pusha
jl
test
fisttp
pop
mov
in
mov
xor
push
push
loop
mov
enter
push
fadd
adc
mul
jbe
cmp
test
mov
cmp
arpl
nop
jp
add
cmp
cmp
and
mov
sub
jnp
cmp
scas
aam
pop
xor
ins
inc
(bad)
jle
mov
mov
adc
jae
push
mov
dec
scas
sbb
jmp
cmp
call
xchg
(bad)
std
dec
fbstp
jnp
jnp
fadd
push
mov
bound
mov
movs
xor
into
cwde
cmc
mov
jmp
loop
xchg
mov
aaa
ss
pushf
retf
fs
(bad)
lea
sub
cmp
mov
pushf
cmc
mov
cmp
stos
xchg
mov
jecxz
pushf
ror
dec
jo
jb
or
cmp
mov
and
shl
and
cmp
inc
mov
(bad)
xchg
push
jmp
(bad)
jle
ds
push
jb
movs
add
dec
adc
xor
ret
push
mov
push
jne
inc
adc
enter
test
arpl
sub
gs
fs
mov
stc
adc
inc
(bad)
outs
pop
test
xchg
(bad)
xlat
repz
mov
out
jns
xor
ret
jg
sub
cmc
es
(bad)
xor
jl
push
aad
push
pop
jge
and
adc
fidiv
pushf
test
inc
add
mov
pusha
loop
pop
out
popa
mov
cmp
xor
aaa
mov
loopne
test
or
xor
jle
jge
loopne
push
test
mov
les
in
jg
cmp
mov
mov
push
fstp
pop
adc
call
mov
sbb
fld
mov
adc
add
lahf
mov
xsha256
cmps
push
ins
pop
int
lahf
mov
push
sbb
or
movs
lods
iret
jns
das
int
ret
and
add
iret
aas
sub
and
(bad)
mov
dec
add
or
fdivr
dec
push
or
retf
push
sbb
pop
mov
(bad)
hlt
inc
das
ficomp
iret
cmps
int
or
test
rcl
adc
adc
imul
mov
cli
daa
call
in
sub
jb
and
(bad)
and
(bad)
adc
xor
test
dec
pop
sbb
je
mov
mul
and
lds
ror
jl
cld
pop
es
dec
mov
add
xor
retf
adc
jmp
xchg
adc
add
dec
into
test
pop
jbe
jg
jne
ret
push
lds
inc
cmp
dec
ss
sar
(bad)
aam
loop
aas
scas
jg
lahf
stos
cs
es
ja
mov
sub
mov
pop
(bad)
movs
cmp
inc
jo
mov
sbb
rcr
mov
out
adc
and
adc
pop
arpl
or
js
sbb
sub
mov
pop
sti
jge
xchg
movs
cmp
mov
cld
pop
imul
dec
xchg
call
add
mov
add
std
leave
cwde
xor
mov
push
fidivr
inc
push
push
cmp
jp
sub
xor
bnd
pop
jnp
pcmpeqd
jg
scas
and
mov
push
fs
pop
pop
pop
and
push
lods
sub
aad
dec
dec
cdq
add
in
fsub
and
sub
xor
test
fwait
inc
scas
lea
dec
shr
test
fmul
jecxz
leave
fidiv
fmul
std
xor
push
mov
in
imul
cli
xchg
mov
adc
movs
stos
stos
jne
xor
adc
mov
scas
cs
add
cmps
(bad)
cdq
fadd
outs
in
mov
mov
xor
adc
imul
jp
mov
test
das
xchg
and
(bad)
cmp
pop
shr
int3
gs
push
fcom
pop
push
jnp
jbe
loopne
in
sar
outs
or
(bad)
adc
out
xor
ss
inc
mov
sub
pop
callw
adc
sbb
imul
inc
out
mul
out
jge
jno
test
jns
cmps
test
inc
pop
mov
xchg
cmp
pop
jecxz
ins
pop
(bad)
jl
dec
mov
pushf
xchg
and
lds
or
mov
add
mov
push
mov
cmps
out
pop
adc
sar
mov
and
stos
mov
daa
cld
movs
jp
or
sub
adc
and
push
in
mov
fcom
out
sbb
ret
adc
pop
std
mov
fld
loopne
outs
pushf
popa
jp
cmp
jge
sar
lock
in
pop
mov
int
(bad)
or
movups
sbb
fild
mov
pop
adc
imul
inc
mov
out
ret
dec
xor
mov
adc
push
mov
ret
jae
(bad)
jecxz
push
add
pop
fsubr
push
ret
sub
mov
push
pop
mov
dec
and
mov
call
int3
cmp
int3
mov
jno
mov
jbe
push
hlt
sahf
inc
add
xchg
ss
cld
dec
jmp
dec
les
sub
pop
inc
dec
or
sbb
adc
sub
dec
movs
push
sahf
imul
loop
aam
movs
mov
push
push
and
outs
pop
mov
mov
and
cmp
push
mov
adc
push
ja
mov
jmp
or
jmp
and
int3
xchg
sahf
retf
popf
daa
movs
sar
int
div
sahf
loop
mov
retf
pushf
and
mov
arpl
ja
icebp
sbb
imul
dec
call
in
das
aaa
loope
in
rcr
jb
mov
jne
jo
scas
sub
imul
mov
pop
(bad)
neg
jne
retf
jl
test
adc
jns
mov
loop
jg
mov
lods
out
outs
loopne
dec
shl
sbb
inc
cmps
iret
push
push
xor
adc
inc
sbb
adc
not
mov
pop
push
jne
mov
adc
das
jne
sbb
clc
jge
mov
adc
push
in
out
push
or
ss
push
cdq
fistp
jno
cmps
test
mov
jmp
into
outs
add
lods
rcr
test
xchg
stc
sbb
jecxz
std
fistp
jg
jo
stc
fld
(bad)
add
lods
cdq
pop
scas
outs
imul
sbb
out
out
jmp
mov
icebp
cmc
mov
mov
sub
xor
sbb
pop
jnp
and
add
stos
ficom
push
push
je
inc
out
pop
pop
out
pop
out
test
pop
fdivr
or
mov
jg
aaa
pop
mov
call
movs
movs
gs
cmp
dec
cmp
inc
dec
cwde
lods
inc
mov
sar
mov
xor
adc
lods
ja
mov
pop
scas
mov
fild
ja
ror
aaa
int
imul
retf
sbb
call
inc
push
cmp
xchg
ficomp
mov
(bad)
sahf
jle
jecxz
js
and
inc
(bad)
rcr
stos
out
enter
ds
repnz
push
fs
(bad)
fmulp
rol
sub
mov
(bad)
xor
xchg
sub
jmp
mov
ror
xor
mov
int
jmp
loopne
aaa
enter
mov
dec
pop
push
push
call
shr
bnd
inc
jns
inc
sub
and
test
fisttp
rep
repnz
dec
mov
mov
lods
sbb
leave
cmovbe
inc
inc
sub
jo
mov
mov
stc
jae
rcl
nop
push
lods
sbb
cli
or
cld
and
(bad)
and
sub
retf
xor
repnz
xor
inc
mov
int
or
sub
xchg
data16
inc
sub
mov
mov
push
sti
fnstcw
loope
push
jns
and
fwait
(bad)
js
xchg
and
push
cdq
cmp
dec
inc
fimul
push
xchg
lods
lds
or
jg
pop
in
out
lahf
sub
test
popf
cmp
pushf
iret
fiadd
xor
dec
or
cmp
pop
shr
imul
pop
ficomp
imul
fdivr
push
pop
pop
push
push
sbb
aam
cs
pop
cmp
dec
add
sbb
pop
sbb
dec
xor
xchg
clc
mov
dec
inc
(bad)
jp
xchg
leave
test
sub
dec
leave
cmp
fmul
mov
add
xchg
sbb
or
mov
pop
mov
or
inc
adc
sub
pop
fisub
into
adc
mov
xchg
js
hlt
rcr
test
outs
jae
retf
xlat
sbb
out
cmp
and
cmp
int
pusha
cmc
mov
iret
aaa
out
sbb
push
repnz
ret
inc
inc
xchg
sbb
ds
imul
mov
mov
adc
jns
gs
jg
pushf
adc
jmp
dec
inc
clc
adc
jmp
add
and
bound
mov
mov
frstor
pop
gs
(bad)
out
outs
push
push
dec
xor
inc
call
push
push
mov
(bad)
imul
or
jae
hlt
mov
shr
adc
inc
mov
ficomp
jmp
mov
ds
inc
mov
jnp
mov
sub
std
daa
jnp
in
inc
cs
xchg
sub
sbb
addr16
lock
mov
add
sbb
imul
(bad)
push
add
call
mov
out
cmc
scas
ret
push
fnsave
xchg
neg
stos
inc
mov
mov
(bad)
ja
mov
cld
movs
xor
inc
dec
xchg
xor
adc
mov
sbb
and
(bad)
fst
(bad)
jne
jae
dec
icebp
aad
sub
or
adc
push
pusha
int
call
and
sub
(bad)
mov
addr16
fiadd
scas
mov
push
or
out
test
push
push
pop
daa
jl
add
mov
inc
push
shr
mov
test
les
jle
ja
sahf
mov
push
sahf
jno
dec
jnp
les
mov
loope
shr
mov
push
xchg
pop
js
rcr
mov
lahf
not
scas
jmp
(bad)
jecxz
or
jge
dec
and
xchg
or
popf
and
dec
gs
mov
inc
or
xor
and
dec
add
test
sub
pop
loopne
inc
inc
mov
stc
xchg
and
daa
mov
xor
dec
(bad)
xchg
scas
cld
dec
and
cdq
(bad)
xchg
rcr
das
xchg
pop
ja
rol
pop
jg
outs
mov
xor
and
das
mov
ja
(bad)
cwde
je
stos
cmp
xchg
dec
and
repnz
xor
mov
sub
inc
mov
mov
add
jnp
jo
nop
and
daa
mov
pop
mov
aad
test
dec
pusha
(bad)
aas
and
cmp
mov
in
push
sub
sbb
and
sub
dec
popf
and
xor
mov
out
pop
add
and
inc
std
xchg
(bad)
outs
jge
cmp
mov
repnz
xchg
inc
inc
or
imul
sbb
push
in
leave
mov
dec
inc
or
stos
push
retf
mov
jg
sbb
pop
test
in
xor
mov
(bad)
repnz
dec
mov
adc
lea
or
vpcmpeqb
pop
out
cs
das
ss
idiv
pop
and
outs
jnp
mov
sub
cmp
aam
imul
cmp
or
mov
cmps
xor
xor
dec
sbb
rol
repz
jnp
mov
clc
lods
std
inc
jns
imul
jp
es
das
adc
dec
mul
xchg
sbb
les
(bad)
dec
mov
test
(bad)
mov
pushf
jne
sub
loopne
nop
(bad)
stos
retf
sbb
pushf
in
mov
sub
xor
cs
(bad)
pusha
mov
out
pop
xchg
sbb
and
jne
xlat
sbb
js
sbb
pop
loop
rol
ret
dec
test
dec
sbb
add
cmp
aas
fistp
sbb
xchg
sahf
fnsave
mov
je
iret
inc
(bad)
data16
sub
aas
jnp
sub
cld
xchg
(bad)
test
sbb
push
fwait
hlt
out
xor
pop
pop
and
jg
mov
mov
xchg
xchg
mov
push
stc
push
mov
cmp
mov
call
arpl
jecxz
mov
adc
xchg
(bad)
icebp
inc
dec
lods
jmp
adc
mov
push
(bad)
out
inc
fbld
adc
xor
fsubr
cmc
shl
loope
test
cmp
rol
sub
jg
test
test
pop
mov
add
or
xchg
jp
jp
bound
bound
sub
push
xor
fs
or
ret
xor
(bad)
mov
mov
cld
mov
inc
or
jge
inc
or
hlt
retf
and
dec
ror
or
shr
sar
push
push
dec
push
loop
xchg
lock
inc
push
or
lock
pop
in
je
test
rcr
ror
icebp
cs
sub
jmp
push
sub
imul
mov
jge
repnz
dec
pop
inc
test
jne
repz
and
sbb
xor
dec
ins
cdq
sub
lahf
ret
cmp
mov
ins
xchg
scas
fisttp
push
mov
neg
xor
sbb
pusha
es
and
cli
cs
cld
dec
pusha
lock
jecxz
or
aad
es
sahf
sub
or
xor
shl
inc
or
push
ins
repnz
or
add
mov
or
mov
rol
adc
push
pop
push
xor
movs
and
jmp
scas
or
dec
sbb
push
(bad)
aas
adc
call
dec
int
push
rep
cmp
add
shr
push
jle
cmp
push
xchg
cmc
add
mov
jle
fistp
jne
mov
xor
in
push
xor
push
add
mov
jno
push
add
xor
(bad)
mov
dec
pusha
push
loope
dec
rcr
xchg
xlat
push
mov
jb
jnp
cs
jne
pushf
stos
mov
adc
push
mov
fsubr
jg
mov
jl
les
aad
jmp
rcr
mov
dec
cmp
movs
ret
ins
mov
popa
fld
mov
pop
xchg
fs
xor
je
dec
leave
mov
scas
fs
adc
push
fbstp
jb
(bad)
cmp
xor
dec
aad
loope
mov
push
or
ins
fs
arpl
mov
cmp
push
jne
sbb
xchg
int3
mov
mov
pop
mov
lods
sbb
inc
popf
(bad)
dec
inc
add
mov
xlat
xchg
pop
stc
sub
xchg
daa
add
xor
call
mov
mov
daa
fld
sub
dec
nop
aad
aas
pop
push
imul
and
retf
jo
fistp
sub
pop
dec
mov
cwde
xor
pop
cmp
pop
inc
out
mov
add
dec
cdq
mov
or
call
xchg
leave
cmps
leave
retf
mov
add
inc
cmp
dec
push
shr
jno
xor
inc
pop
or
fadd
hlt
xchg
cmp
add
mov
test
pop
test
ret
sub
stos
or
dec
sbb
iret
mov
mov
dec
or
lock
repz
xor
xchg
in
sbb
mov
fcomp
retf
loope
mov
lods
inc
stc
int
lods
or
mov
stos
jnp
popa
xchg
shr
or
stos
dec
xor
and
xchg
std
fnstsw
dec
(bad)
mov
jge
xor
in
fnstenv
xchg
enter
repnz
mov
outs
or
lea
and
inc
cwde
mov
mov
jecxz
enter
fsubp
mov
inc
mov
and
or
jno
daa
mov
icebp
lods
add
std
mov
outs
lods
adc
dec
or
in
popf
mov
mov
push
push
jb
aad
xchg
dec
cs
mov
ja
ja
clc
or
clc
icebp
cmp
repnz
pop
push
mov
jmp
(bad)
sbb
push
xor
and
js
into
cmp
fild
addr16
xor
jb
dec
(bad)
xchg
mov
inc
push
mov
xchg
jmp
push
pop
repnz
mov
adc
call
xor
inc
gs
pop
and
scas
xlat
les
les
dec
sti
fcmovnu
imul
jne
sub
imul
movs
pop
inc
ss
pop
cmp
ret
adc
sbb
jns
scas
sub
inc
bound
jmp
jne
aam
or
jne
ror
cli
or
in
jno
aas
push
jg
mov
lods
ins
mov
jno
push
leave
xchg
cdq
out
jne
mov
and
repnz
enter
sti
jns
mov
inc
cld
dec
and
xor
xor
rcl
inc
cmp
mov
mov
and
ins
movs
fsub
pop
aam
jmp
xor
sbb
or
sbb
loop
cmc
(bad)
js
xchg
icebp
lds
aaa
lock
pusha
dec
pop
movs
jae
add
sti
xor
and
jl
(bad)
(bad)
popa
cmp
or
pop
lock
xchg
nop
pop
(bad)
pop
pop
cwde
sti
call
adc
mov
jle
test
adc
js
aad
cmp
popf
or
xor
loop
ss
xor
dec
outs
pop
xchg
ja
push
mov
sti
xchg
xor
popa
adc
mov
int3
push
xchg
dec
js
mov
lahf
push
out
sub
inc
leave
and
dec
ret
(bad)
iret
sbb
sbb
inc
(bad)
fbld
cld
fist
pop
imul
pop
xchg
scas
(bad)
loop
push
mov
rcr
out
lods
(bad)
xor
xor
sub
into
ret
ret
adc
mov
loopne
fidivr
fsub
ficomp
in
in
cmps
sub
or
pop
pop
mov
imul
out
mov
add
push
mov
inc
push
adc
aaa
push
pop
std
dec
ret
add
out
xlat
retf
hlt
fyl2x
sub
push
adc
jns
jne
xor
nop
out
push
fisubr
stos
mov
xchg
scas
mov
std
sbb
jns
in
dec
bound
sbb
add
pop
inc
xchg
pop
stos
cdq
sub
fsub
dec
ret
imul
or
shl
mov
xchg
(bad)
loopne
add
push
fdivr
xchg
push
xor
push
nop
rep
jg
mov
ror
sti
lds
mov
jg
pop
mov
ds
xchg
imul
pop
push
out
cmp
sub
and
xor
cdq
push
inc
gs
(bad)
repz
cld
cld
pop
mov
out
retf
fs
das
add
push
(bad)
jg
mov
xchg
popa
dec
les
(bad)
jecxz
jg
clc
pop
adc
punpcklwd
sbb
(bad)
es
dec
cwde
out
pop
repz
xor
cmps
in
cli
in
and
pop
fimul
ja
vpshlb
pop
dec
adc
rcr
dec
jnp
mov
(bad)
dec
mov
(bad)
call
ror
xchg
(bad)
fdiv
pop
xor
mov
call
sbb
icebp
mul
stc
push
(bad)
push
movs
jae
leave
sbb
push
add
xchg
in
jae
ins
out
sbb
push
in
mov
xchg
pop
add
cmp
pop
jnp
add
dec
dec
(bad)
pop
inc
bound
adc
addr16
push
test
dec
cmc
pusha
es
std
addr16
xor
leave
cmp
pusha
jle
dec
ins
dec
fcom
add
sbb
(bad)
rcr
stos
pop
cld
ins
test
imul
push
ins
cmp
sub
vpmulhuw
retf
cli
adc
into
(bad)
xlat
cli
and
inc
jp
fs
sbb
push
(bad)
ins
aaa
inc
daa
xchg
out
push
pop
jnp
fmul
stc
xchg
jl
in
in
add
or
cwde
in
and
mov
clc
dec
jb
pop
sub
repnz
push
xchg
loop
sub
movs
push
push
sbb
popa
data16
int
fbld
enter
mov
bound
sbb
pop
push
je
aam
sbb
xlat
sahf
pop
shl
mov
mov
add
sbb
ins
(bad)
gs
out
fwait
dec
(bad)
mov
shr
mov
sub
push
or
jno
mov
push
call
push
mov
sub
ds
outs
loop
out
mov
ins
sbb
neg
fisttp
and
push
scas
sbb
clc
inc
pop
shr
movs
outs
aam
stos
out
mov
inc
xor
inc
dec
rcl
mov
mov
and
xor
add
sub
pusha
cmp
jp
stos
in
inc
mov
jl
sub
out
mov
inc
in
mov
lock
jns
mov
and
xlat
ins
dec
inc
jg
inc
or
add
outs
ins
rol
not
ret
mov
mov
rcr
lods
dec
movs
inc
dec
add
xor
(bad)
sbb
cmp
mov
lahf
sub
push
mov
sbb
dec
dec
ins
fcmovbe
mov
imul
adc
call
xchg
fisubr
fwait
and
mov
cmp
cli
sub
add
mov
movs
xor
add
sahf
xchg
lods
ret
xchg
xchg
push
mov
retf
js
inc
xchg
dec
je
xor
sbb
mov
push
xchg
aaa
sub
xor
inc
add
sub
loope
popf
out
pushf
call
sbb
test
jp
pop
jp
out
int
fs
and
fstp
fistp
(bad)
inc
test
sbb
int3
push
lock
sub
cwde
icebp
sub
sbb
mov
pusha
xchg
inc
mov
test
cmps
add
mov
cmp
dec
inc
stos
xor
enter
sbb
pusha
mov
xchg
cwde
pop
xor
test
out
in
jns
mov
mov
(bad)
es
ret
ret
not
mov
pop
les
test
gs
inc
mov
sbb
int3
jo
aam
xchg
xor
lock
addr16
add
test
lahf
and
sub
popa
addr16
(bad)
inc
or
or
sbb
leave
div
sub
imul
jns
fsub
aas
test
push
mov
add
lds
je
fs
shl
cmp
pop
or
pop
jl
xor
scas
retf
xchg
loopne
ror
xor
mov
inc
(bad)
int3
stos
movs
pop
out
dec
mov
(bad)
fstp
push
pop
pop
repz
add
test
xchg
mov
repnz
sbb
sahf
xor
jne
fs
outs
jle
fnstenv
in
sub
hlt
fbstp
cmp
lahf
inc
pop
int3
sub
(bad)
inc
sahf
lock
xchg
sub
inc
test
ss
sbb
cli
adc
xchg
add
jmp
ja
(bad)
clc
out
daa
aad
cmp
jle
and
cmp
aas
push
add
and
pop
add
add
jg
cmp
call
cmc
cmp
ja
mov
xor
inc
cmp
mov
mov
inc
in
scas
jne
pop
dec
mov
mov
dec
push
imul
adc
in
je
inc
imul
jge
add
dec
dec
sbb
aam
das
movs
sub
(bad)
sub
mov
jl
loope
sti
sbb
push
icebp
(bad)
sbb
or
add
mov
or
icebp
and
scas
aam
sahf
jp
xor
inc
je
in
push
or
mov
xor
lea
mul
hlt
mov
xor
push
(bad)
bound
jmp
dec
jnp
inc
sub
loope
movs
addr16
sub
adc
out
fwait
pop
loopne
mov
cmp
xchg
test
inc
xchg
push
xchg
xor
sub
out
pop
bound
les
lods
and
xor
pop
in
or
pushf
test
popa
push
mov
push
fdiv
jbe
jge
loopne
xchg
dec
lods
stos
movs
fidiv
mov
cwde
sti
sahf
cmp
add
inc
stos
movsx
gs
aad
jbe
test
jl
dec
ret
das
test
leave
add
xor
leave
mov
lahf
loopne
clc
sti
dec
stos
dec
sbb
mov
stc
inc
xchg
addr16
mov
cs
xor
fcomi
sub
loop
(bad)
push
fwait
lahf
movs
daa
mov
std
mov
scas
inc
sub
pop
mov
push
test
jecxz
add
out
lea
aad
(bad)
imul
xchg
xor
mov
jnp
xchg
pminsw
ss
call
xchg
adc
jne
mov
mov
mov
fsub
imul
mov
inc
cmps
jmp
retf
xor
ror
push
sbb
rol
dec
out
in
js
jmp
dec
mov
popf
push
xor
dec
adc
js
push
mov
add
mov
adc
les
inc
dec
hlt
out
mov
fucomi
add
(bad)
aaa
jmp
xchg
inc
addr16
loopne
add
sub
stos
pop
add
jb
fist
dec
es
enter
lods
add
and
ror
nop
xchg
sti
mov
and
mov
xor
sub
pop
test
push
retf
and
and
(bad)
sti
hlt
push
add
mov
retf
js
stos
sahf
pop
arpl
fiadd
sub
lock
jp
je
popf
aaa
in
out
fs
mov
out
jle
add
jbe
pushf
sub
xchg
fsub
and
push
add
into
cli
cli
jb
mov
xchg
inc
mov
adc
lods
add
(bad)
pop
(bad)
hlt
sbb
test
test
movs
mov
or
cmp
scas
jge
xchg
mov
call
jb
adc
dec
lds
mov
pop
add
sbb
fidivr
movs
pop
scas
retf
fs
ret
jmp
cmps
das
je
xor
push
fwait
loope
xor
adc
gs
dec
les
and
inc
xchg
push
or
aam
mov
cmp
shl
cs
pushf
(bad)
cmp
jo
pop
inc
and
ficomp
push
push
sbb
repnz
(bad)
or
mov
test
sbb
xor
call
xchg
cmps
outs
nop
test
enter
std
add
jl
repz
pavgw
cmps
jmp
push
out
add
sbb
pop
cmp
lea
fdivrp
stc
fdivr
pop
das
xchg
arpl
xchg
cld
shl
aad
cmc
adc
push
scas
add
ret
mov
outs
cdq
out
inc
xor
int
sar
or
mov
mov
aam
dec
ror
dec
sbb
inc
cmp
xor
es
jnp
rol
popa
rcr
fs
outs
push
dec
push
movs
pop
call
push
jae
push
inc
(bad)
int3
dec
sub
enter
mov
shr
shr
push
or
fwait
mov
push
xchg
loopne
inc
inc
(bad)
outs
(bad)
popa
jmp
jmp
sbb
push
push
xchg
push
cmp
or
aam
xchg
neg
repnz
inc
cmp
mov
xchg
aaa
cdq
fidiv
fs
mov
lods
aam
fistp
arpl
mov
popf
xchg
clc
and
pusha
add
jns
xchg
cs
sahf
sbb
out
push
mov
or
jmp
cmp
pop
push
ss
jnp
adc
xor
cmp
sub
pushf
jecxz
mov
xor
jmp
sahf
push
mov
mov
mov
sub
hlt
stos
adc
or
aam
ins
mov
(bad)
cmps
and
jno
mul
(bad)
in
inc
jge
cmc
xchg
xor
into
dec
(bad)
ins
add
mov
test
inc
cmp
sub
cwde
cmps
adc
mov
add
retf
cmp
pop
cmps
cmp
jle
push
jg
lock
les
sub
sub
in
mov
es
push
mov
fbld
test
mov
aam
xchg
inc
ins
js
aam
and
mov
fdiv
push
stos
or
and
scas
jp
(bad)
cmps
mov
clc
pop
or
mov
hlt
or
aad
and
mov
lahf
xchg
sub
lock
pop
aam
or
jle
adc
std
dec
mov
pushf
sub
adc
cmc
frstpm(287
mov
cmp
icebp
ret
push
int3
imul
xor
or
(bad)
mov
rcr
sub
les
add
sbb
outs
retf
xchg
cdq
mov
mov
sbb
in
call
sahf
xlat
sub
push
sub
test
dec
cld
sub
scas
movs
lods
clc
stc
int
mov
mov
hlt
mov
cli
(bad)
mov
inc
adc
sahf
fstp
lods
pop
xchg
push
movs
cmp
jmp
lods
movs
mov
adc
pushf
dec
fidiv
clc
mov
cld
lea
and
and
leave
or
movs
dec
and
fisub
stc
popf
adc
xor
jae
lods
cld
repz
mov
or
jne
mov
outs
popf
pop
je
(bad)
out
mov
in
out
dec
lods
leave
mov
es
test
cmp
pushf
xor
fidivr
(bad)
push
or
and
call
lods
cmps
out
es
adc
push
call
jg
pop
push
sbb
pop
mov
stc
aaa
add
imul
aas
sub
es
mov
xchg
in
mov
(bad)
xor
movs
retf
adc
neg
jno
adc
fstp
ins
repnz
xor
or
retf
pop
mov
ss
sbb
test
xlat
stos
outs
jo
push
jmp
ins
fbld
std
mov
push
mov
sbb
push
aaa
sti
lea
inc
push
mov
add
lods
xchg
and
fisubr
sub
sahf
hlt
pop
or
sbb
cmps
dec
div
movs
cwde
ror
repnz
loope
cli
cmps
dec
test
cli
xor
inc
jle
and
adc
fisub
sahf
lds
scas
lahf
bound
(bad)
imul
jp
push
add
cmp
mov
xchg
outs
stos
ins
xlat
in
mov
leave
mov
cmp
jae
iret
cmp
and
inc
pusha
(bad)
mov
fbstp
inc
call
inc
addr16
std
sub
mov
jae
sbb
cmp
arpl
lods
repnz
in
sub
bound
iret
cdq
es
data16
es
push
fisttp
pop
jns
mov
dec
(bad)
popf
nop
adc
adc
fimul
adc
setbe
sub
jnp
mov
mov
cmps
retf
xor
int
sub
mov
add
aas
mov
jmp
ss
stos
loop
and
jp
dec
stos
push
xor
stos
jecxz
fnsetpm(287
pusha
mov
jmp
repz
dec
adc
mov
stos
mov
pop
shl
or
cmp
mov
push
push
fnstenv
dec
fimul
xchg
xchg
mov
es
int3
gs
imul
xchg
leave
push
add
rcl
pop
jne
fs
add
or
xor
(bad)
lahf
jae
sbb
je
mov
jo
popf
inc
adc
add
std
fist
jp
mov
push
fcmovbe
xchg
repz
jg
adc
(bad)
add
stos
int3
idiv
(bad)
mov
push
add
lock
test
mov
test
into
std
and
mov
push
call
sub
adc
push
cmp
sub
sbb
lahf
loopne
arpl
sbb
aaa
cwde
stc
test
add
cmp
(bad)
adc
inc
or
xchg
cli
int3
ins
stc
lds
ret
xor
xor
jne
adc
aam
mov
pop
sbb
fs
mov
es
mov
xor
retw
inc
call
pusha
fstp
ret
mov
mov
jmp
mov
sti
push
and
hlt
out
jne
imul
push
mov
dec
mov
shl
popa
mov
xchg
or
dec
in
jl
leave
jl
sti
data16
mov
xor
icebp
imul
icebp
lods
aas
push
mov
or
sbb
cmovl
sub
pop
push
outs
or
jl
icebp
jno
xor
enter
sbb
out
inc
fs
or
loop
pop
int3
inc
in
lds
adc
jmp
or
repnz
test
cmps
push
fdivp
mov
sbb
jbe
sub
arpl
push
push
leave
inc
dec
fs
sahf
sub
(bad)
mov
xor
or
or
into
and
push
js
ss
gs
and
(bad)
int
std
jns
adc
add
jns
sub
jb
(bad)
call
mov
ins
push
shr
test
mov
pop
loopne
add
dec
shl
mov
mov
push
push
(bad)
lea
pop
cmc
inc
mov
jmp
leave
ficom
les
mov
inc
mov
pusha
addr16
imul
lods
scas
jg
jle
push
retf
xor
mov
add
xor
in
popa
mov
dec
or
push
test
in
inc
sar
icebp
popa
jl
div
push
or
lock
fbstp
pop
fs
jmp
xor
xchg
xor
pop
sub
sub
pop
lods
pop
pop
rcr
ret
retf
inc
pop
cmc
or
xor
push
popf
and
daa
shl
and
sub
in
cmp
add
xor
sub
je
loope
push
mov
push
ins
dec
push
pop
rcl
imul
lea
push
xchg
stos
inc
mov
xchg
outs
mov
jp
mov
test
int3
retf
hlt
mov
cmc
cmc
or
jae
arpl
(bad)
sub
iret
cmp
ds
add
lahf
ss
aas
push
inc
sar
jmp
leave
pop
aaa
push
mov
fimul
(bad)
cmove
sbb
push
mov
std
xchg
movs
lods
nop
sar
sub
adc
sbb
xchg
jp
jecxz
jnp
and
mov
(bad)
lock
xchg
movs
addr16
mov
loop
jl
rcr
or
ins
lea
iret
pushf
dec
ror
xlat
aaa
add
hlt
inc
lahf
in
in
mov
jb
push
pusha
scas
daa
or
popa
jno
out
jo
sub
lods
push
add
scas
xor
push
sbb
mov
adc
jecxz
addr16
xor
loope
icebp
shr
push
(bad)
or
arpl
stos
adc
call
mov
sub
xor
bound
sub
lods
mov
test
or
jb
mov
into
mov
dec
inc
adc
jecxz
scas
sub
pop
and
mov
aam
or
scas
adc
pop
adc
jle
add
jecxz
push
lahf
aad
in
jecxz
or
ja
xor
mov
ins
mov
out
es
lahf
and
sub
call
xchg
ficomp
add
jb
or
and
fisttp
retf
xlat
stos
push
gs
movs
mov
inc
pop
adc
imul
pushf
add
cmps
push
or
xchg
in
aam
pop
xor
aas
sbb
push
pusha
dec
cmp
or
cdq
mov
fnsave
mov
das
into
outs
sub
adc
mov
push
test
stos
outs
adc
loopne
imul
cmp
inc
push
xor
cs
ss
push
fucomp
(bad)
out
adc
adc
scas
fst
dec
cld
xchg
inc
adc
aas
out
pusha
(bad)
xchg
cmc
jmp
add
pop
pop
sti
mov
bound
adc
adc
sub
sub
imul
popf
jbe
repz
cmp
and
repnz
ja
inc
(bad)
jecxz
jmp
pop
jp
clc
rol
push
in
lds
rcl
scas
movs
repz
fcmovnu
sbb
pop
sub
repnz
inc
mov
dec
sbb
icebp
jmp
scas
sbb
push
shl
ret
push
or
shr
jmp
lods
adc
push
xchg
hlt
dec
das
or
push
(bad)
loopne
mov
sbb
mov
or
in
(bad)
cmp
inc
push
mov
mov
test
nop
jle
mov
add
rcl
punpckhwd
(bad)
xchg
xor
cmps
and
stos
push
(bad)
aam
or
or
iret
mov
popa
adc
xchg
or
mov
stos
xchg
or
les
out
lock
and
and
inc
lds
dec
push
jle
daa
xchg
rcl
inc
cmp
popa
mov
mov
cmp
mov
and
add
cmp
jle
scas
jecxz
es
icebp
call
imul
loopne
mov
jb
pop
test
adc
cld
imul
sub
cmp
jl
jge
or
movs
sub
test
data16
imul
sub
inc
rcr
dec
add
mov
fcom
lock
dec
adc
add
sbb
sub
inc
sub
sbb
inc
or
add
mov
dec
pop
cmp
xchg
pop
push
mov
pop
push
cwde
inc
int3
mov
jmp
sub
fwait
xchg
loope
fldln2
sbb
pop
jle
popa
mov
inc
xchg
(bad)
fmul
aas
lds
std
inc
pop
ins
sub
adc
jns
sar
bound
adc
fdivr
mov
push
push
(bad)
or
aad
and
shr
cmps
repz
push
xor
pusha
jns
xchg
pop
pop
popf
dec
nop
cmp
lods
pop
push
pop
out
mov
inc
mov
(bad)
sub
cmp
jne
outs
(bad)
inc
xchg
(bad)
mov
push
mov
stos
jno
out
push
repz
and
bound
xor
mov
and
sbb
inc
call
mov
cmps
pop
mov
inc
fwait
add
in
cmp
ret
jae
sbb
adc
js
addr16
xor
xchg
jb
adc
iret
loope
ret
nop
xchg
push
leave
jno
imul
mov
sbb
rol
aad
lods
test
fbstp
lahf
ret
lods
pop
jns
sbb
xchg
push
jp
in
ret
xor
stos
pop
cmps
sti
xchg
mov
sbb
ins
inc
xchg
das
cmp
sbb
cs
adc
cmp
test
jo
adc
adc
ret
mov
mov
neg
adc
and
iret
adc
movs
cmc
cmp
mov
adc
stos
sbb
lock
stos
shl
push
jp
jo
fld
pop
fistp
xchg
cmc
mov
mov
xchg
sbb
mov
cmps
pop
jmp
outs
ss
test
pop
jb
and
xor
call
jbe
push
push
fsub
pop
and
hlt
(bad)
pop
cmp
mov
pop
aad
pop
add
fwait
enter
add
add
into
stos
mov
mov
jae
loop
aaa
xchg
adc
fsubp
daa
icebp
add
(bad)
ins
inc
xchg
movntq
nop
leave
aam
call
xor
fwait
dec
jo
push
and
add
test
mov
xchg
out
cmp
aaa
sub
xlat
adc
popa
cmc
retf
sbb
jnp
test
mov
scas
sahf
stc
sahf
dec
loop
or
sbb
cmp
jmp
push
loope
sub
std
out
inc
test
arpl
push
mov
and
imul
data16
lock
fcmovnu
fucomi
inc
and
dec
mov
xchg
repz
in
outs
and
adc
mov
adc
jp
sbb
sbb
imul
cmp
cli
jae
std
pop
pusha
mov
out
add
fidivr
dec
ss
add
dec
mov
lea
cmps
dec
ss
xchg
sahf
jae
leave
mov
mov
pop
out
rcl
jp
or
inc
or
(bad)
fimul
cmp
inc
sub
mov
jle
popa
ja
inc
jge
ror
call
retf
adc
pop
push
pop
retf
sub
adc
lds
fistp
ror
test
mov
jb
mov
sub
in
ins
stos
aad
adc
cmp
daa
lods
cmp
pop
ss
bound
cmp
nop
pushf
mov
add
shl
sti
pop
retf
jns
sti
scas
mov
imul
or
daa
push
jg
aaa
ds
jge
sbb
test
jo
test
div
sub
call
jmp
or
in
(bad)
xchg
sub
push
lods
mov
bound
pop
mov
mov
jbe
iret
pusha
sub
mov
xchg
fsubr
sbb
or
add
ins
cmp
sub
xor
ret
dec
cmps
jle
aaa
popf
loope
lock
hlt
and
inc
or
fisttp
hlt
adc
mov
rcr
js
sub
pop
test
xor
mov
dec
dec
loop
mov
adc
sub
xchg
outs
shl
add
imul
cmp
and
loope
div
xchg
ror
scas
or
push
jecxz
mov
ja
cmc
int3
mov
inc
push
adc
or
inc
sbb
inc
daa
daa
or
ret
fdiv
arpl
ror
cmps
dec
mov
and
pusha
test
or
repnz
mov
sbb
adc
addr16
pop
and
imul
add
sbb
movs
out
push
adc
sub
fsubrp
lds
add
arpl
mov
xor
sub
(bad)
mov
sub
and
cmps
pop
out
into
mov
jge
call
xor
fs
pop
aad
push
cmp
test
inc
sar
imul
mov
xchg
mov
dec
jns
pop
movs
sbb
sbb
xchg
mov
(bad)
imul
mov
jle
adc
rcr
ins
ss
mov
mov
mov
inc
mov
hlt
ds
icebp
pusha
mov
mov
jmp
xchg
not
arpl
and
mov
aaa
mov
in
add
push
push
mov
movs
jb
sbb
(bad)
popf
inc
or
xchg
fiadd
ja
xlat
popa
pusha
popf
xor
out
inc
cmp
jl
inc
fist
test
pop
outs
adc
dec
(bad)
jb
out
push
cmp
aad
mov
adc
mov
cmp
cmp
shl
push
aas
cmp
out
dec
xchg
pop
retf
es
adc
mov
mov
or
sbb
mov
es
xchg
sbb
xor
and
sbb
popa
jle
dec
loop
dec
rcr
nop
inc
call
lds
adc
into
aas
mov
jne
xchg
nop
mov
xchg
sbb
iret
dec
ins
inc
or
pop
retf
loop
inc
mov
test
fs
js
sub
ja
jmp
add
mov
jge
dec
addr16
add
xchg
push
push
data16
stc
out
cmp
sub
sbb
fs
sbb
mov
xor
push
mov
or
loop
aas
and
jno
jae
mov
or
mov
setae
movs
retf
in
fstp
lods
inc
jecxz
add
enter
push
push
pop
fdivr
test
mov
fldcw
cdq
jne
mov
cmc
gs
jnp
adc
push
pop
outs
add
sbb
pop
in
xor
mov
stos
popf
inc
movs
jno
mov
fsub
jecxz
mov
jecxz
add
add
pop
pop
fwait
outs
mov
xchg
or
pop
push
inc
mov
xchg
retf
add
ss
inc
movs
inc
enter
sub
lods
mov
cli
imul
push
push
pop
fmul
sbb
movs
fadd
inc
sahf
std
fwait
scas
jle
sub
out
or
push
add
jle
(bad)
or
fdivr
inc
(bad)
xchg
inc
or
std
xor
cdq
arpl
add
mov
enter
push
jne
mov
ret
jg
sub
aas
xchg
out
popf
in
cwde
jne
sahf
jle
mov
inc
add
mov
js
cmp
and
or
scas
cdq
add
push
cld
dec
mov
fldz
add
mov
pop
ins
ror
ja
mov
mov
sub
mov
ja
xlat
inc
aad
pop
sbb
aam
pop
mov
iret
outs
mov
sub
pop
sbb
sbb
and
push
test
xchg
rol
sbb
mov
dec
mov
mov
sub
push
aaa
call
sub
mov
adc
add
push
mov
push
les
out
xor
xchg
inc
xchg
and
push
cmps
fs
adc
inc
icebp
int
in
out
dec
jmp
or
leave
push
or
inc
sbb
ds
test
les
das
xchg
add
frstor
adc
jo
or
in
xchg
mov
xor
fdivr
push
mov
ins
xor
ins
cmps
push
adc
outs
sub
out
mov
dec
or
ds
xchg
mov
js
ror
popa
retf
xchg
add
cmp
push
aam
call
and
test
push
mov
sub
test
icebp
mov
(bad)
cmp
scas
mov
sbb
cld
or
adc
mov
sub
(bad)
pop
sbb
stc
push
jg
iret
push
and
cmp
dec
xchg
xor
test
scas
mov
xor
aad
inc
scas
lahf
pop
pop
sbb
out
jno
inc
xor
dec
sbb
or
ja
inc
and
push
mov
fmul
mov
mov
shl
dec
(bad)
cmp
add
cmp
les
and
ret
pushf
movs
ror
stos
test
clc
sub
xchg
sub
jge
dec
dec
inc
jge
pop
push
add
fist
mov
sub
call
fwait
mov
sahf
push
cmp
jmp
and
jle
sub
pop
retf
push
jae
dec
add
jnp
push
inc
scas
out
and
cmp
mov
mov
dec
jl
stos
sbb
ret
push
pop
fwait
stos
data16
fst
leave
push
mov
iret
outs
add
ret
std
loopne
pushf
add
ret
inc
(bad)
inc
leave
xlat
mov
push
repnz
in
test
mov
inc
retf
scas
jne
ins
dec
scas
retf
cmp
hlt
mov
mov
cmps
retf
stc
ret
leave
into
add
xor
icebp
lock
(bad)
cmps
add
addr16
icebp
push
jb
sbb
pop
push
adc
fisubr
movs
icebp
pop
jnp
mov
pop
mov
mov
hlt
xor
mov
retf
xchg
add
fcmovbe
sti
mov
mov
mov
xchg
xchg
add
or
scas
sti
or
jo
cmps
add
movs
fdiv
xor
or
mov
pop
fnstcw
jb
mov
sub
sbb
imul
fmul
pop
mov
xchg
icebp
mov
outs
shr
shl
(bad)
xchg
test
bound
ja
shl
jne
sub
das
inc
cwde
sbb
sbb
sbb
inc
clc
gs
cld
mov
or
sbb
push
pushf
adc
jmp
sub
add
neg
lods
stos
pop
add
lahf
ror
mov
add
mov
and
cmps
xchg
sbb
push
(bad)
ins
out
xchg
xchg
jecxz
jp
ror
out
pop
sub
(bad)
push
jbe
mov
sub
jecxz
jnp
pop
push
and
in
mov
and
loope
dec
mov
inc
pop
aad
(bad)
in
out
sbb
stos
jb
jb
and
inc
push
shr
popa
sub
addr16
(bad)
mov
jae
dec
jecxz
dec
(bad)
cmc
mov
jbe
adc
test
mov
inc
test
sub
outs
pop
push
jns
dec
adc
lahf
and
shr
int
mov
(bad)
jo
cmps
inc
jne
mov
ss
(bad)
frstor
sub
jle
daa
out
fisubr
ret
mov
not
or
push
mov
sbb
inc
xor
out
fild
mov
jmp
scas
popf
xchg
and
jae
cmp
sbb
xor
popa
push
fidivr
cli
xchg
jns
and
mov
and
or
add
mov
xchg
pop
xchg
xchg
xchg
mov
retf
cmp
push
out
imul
dec
int
xor
sub
pop
xchg
not
sar
(bad)
jmp
push
cdq
pop
repz
lock
push
add
xchg
out
mov
push
jge
adc
push
sahf
xor
dec
and
loopne
dec
mov
mov
pop
dec
test
mov
mov
dec
sub
xchg
xor
lods
mov
xchg
clc
xor
retf
sbb
in
mov
cmp
mov
lea
push
jle
xchg
cmp
sti
jmp
stc
clc
ds
xlat
sub
fmul
int
cli
jl
ins
in
xchg
jp
jnp
pop
and
sub
sub
repnz
mov
fisub
pop
mov
mov
fild
jbe
aaa
bnd
fbstp
cs
or
ss
jae
in
dec
int3
rol
sbb
outs
int3
scas
jns
bound
inc
arpl
cmp
in
dec
and
add
xchg
mov
fs
sub
iret
xor
jle
imul
iret
inc
daa
mov
mov
in
leave
inc
inc
ret
fmul
stos
xchg
nop
lea
and
cli
aam
fld
xor
stc
fst
mov
xchg
(bad)
xor
and
sub
shl
xor
arpl
ins
push
lods
adc
mov
sbb
aad
push
ja
ds
pop
sahf
repnz
pop
or
lahf
jmp
enter
mov
lock
pop
mov
std
cmps
jecxz
sub
sub
repz
adc
xchg
ficom
lods
fdivr
xor
shr
xchg
fldcw
jns
push
ret
(bad)
mov
add
add
and
hlt
out
pusha
out
(bad)
mov
push
adc
adc
mov
(bad)
rol
push
adc
js
sbb
fldenv
and
ror
sbb
inc
popa
mov
pop
arpl
adc
push
push
sub
dec
jmp
cli
data16
mov
retf
icebp
std
out
or
out
dec
jo
hlt
es
push
fisub
mov
inc
sbb
fdivr
pop
jo
call
sbb
xlat
ins
jns
jbe
(bad)
aas
in
fstp
fimul
maxps
es
frstor
jbe
shl
in
xchg
xchg
mov
mov
loope
into
imul
mov
data16
xchg
xchg
jle
test
adc
or
(bad)
and
adc
dec
xchg
mov
mov
mov
das
push
adc
std
inc
cmc
out
retf
jp
cmp
and
bound
adc
add
xor
xchg
rcr
adc
pop
fimul
ret
xor
push
cmp
cmp
pop
int
ss
adc
aas
dec
or
adc
loopne
cld
data16
push
jecxz
shl
add
adc
daa
push
call
sub
mov
mov
mov
xchg
mov
in
or
aam
sti
inc
mov
pop
cdq
sub
mov
or
sbb
inc
inc
xor
jge
ss
sub
cmp
and
ja
sub
fmul
sub
in
cmp
test
push
cmps
std
pushf
mov
mov
ror
fdivr
in
sub
mov
mov
add
jns
inc
pop
pop
mov
and
or
jecxz
cmp
add
pop
adc
movs
out
daa
jo
fdiv
pop
test
sbb
nop
call
cmp
xchg
mov
out
jg
das
push
lds
bound
sbb
xor
sbb
movntps
xchg
sub
push
xchg
jo
mov
push
adc
gs
shl
jl
dec
and
mov
push
loopne
jno
lahf
(bad)
jle
mov
(bad)
mov
shl
neg
jmp
cmp
xlat
lods
or
mov
imul
add
in
(bad)
push
int3
mov
jge
lea
jno
push
daa
mov
dec
lods
out
xchg
scas
js
adc
cmps
inc
div
jmp
or
movs
cmp
loop
shl
xchg
mov
dec
ret
retf
sahf
in
and
imul
clc
imul
mov
adc
mov
pop
xor
into
or
test
jno
lahf
and
xor
lods
and
inc
cld
push
adc
imul
mov
dec
mov
mov
sbb
and
js
jl
and
adc
add
and
shl
adc
fnstcw
nop
mov
(bad)
sbb
jge
out
sbb
mov
daa
je
movs
nop
mov
cmp
or
mov
or
pusha
jmp
sub
sbb
mov
xchg
bound
sbb
test
cmp
ins
xchg
cmc
ins
push
add
xor
pop
pop
iret
and
cmp
leave
int
inc
lods
push
retf
dec
imul
mov
mov
call
xor
pushf
and
add
mov
pop
dec
movs
push
push
outs
inc
(bad)
in
or
mov
inc
test
jmp
pop
ret
sub
push
test
xchg
add
or
icebp
popf
das
nop
or
into
adc
mov
sbb
inc
test
sbb
popa
adc
xchg
lahf
jp
ret
cli
pop
dec
dec
xchg
mov
movs
push
cld
jmp
inc
jb
pop
retf
sti
out
sbb
fadd
lods
retf
sub
sbb
pop
les
xor
call
cmp
in
stos
int3
int
sbb
(bad)
jo
inc
outs
int3
ds
lahf
inc
(bad)
push
mov
cmp
int3
pop
mov
jecxz
push
xor
mov
pop
call
add
pop
les
cwde
ret
jp
lea
add
rol
sbb
aam
in
sbb
mov
inc
xchg
cmps
ret
jge
inc
xor
(bad)
sbb
sub
and
jg
test
ss
jb
push
movs
sbb
or
stc
xchg
cmp
fimul
ficom
pusha
mov
or
or
test
xor
inc
mov
xchg
mov
int
dec
jne
push
and
aaa
push
jp
or
jle
dec
jne
inc
ss
pop
push
adc
movs
outs
add
push
inc
push
nop
scas
mov
aas
mov
rcl
out
repnz
mov
movs
test
fistp
dec
in
fist
ja
into
inc
dec
cwde
and
pop
dec
add
cmp
scas
mov
stc
cmps
push
cli
or
scas
xchg
lahf
mov
sub
popf
sahf
rcl
out
loop
mov
test
retf
fucomp
jp
push
sahf
dec
or
out
mov
gs
push
push
sbb
push
cli
dec
inc
(bad)
jmp
cmp
jg
sub
adc
lock
mov
outs
pop
scas
daa
sbb
xor
cmps
out
push
sar
push
call
test
out
pop
movs
ficomp
stos
pop
xchg
cmp
adc
mov
and
test
jae
sar
mov
adc
dec
push
xor
jmp
sbb
cmp
adc
addr16
sti
test
test
pop
imul
les
cmps
cmp
mov
cmp
stc
loope
pop
pop
outs
ins
clc
pushf
or
mov
shl
mov
les
cmp
rcl
cmp
fcomp
sbb
dec
cmp
fwait
call
loopne
mov
pop
movs
mov
movs
ja
xchg
cdq
jmp
dec
add
lods
stos
shl
dec
mov
pop
jl
adc
mov
jg
es
es
out
ja
shr
cmp
gs
ja
or
lds
mov
xor
into
sub
movs
les
out
loopne
aas
sbb
jl
xchg
cmp
rcl
xor
push
xchg
mov
into
or
scas
pushf
sub
test
push
hlt
jmp
adc
not
sti
jmp
mov
xchg
lods
imul
dec
dec
inc
jg
jmp
push
pop
sub
pop
mov
jae
xor
xor
scas
push
daa
test
jb
retf
push
mov
xor
pushf
cmp
inc
sub
jnp
jne
sub
push
and
mov
into
shl
mov
aas
sub
pop
sbb
cmp
mov
loop
shr
mov
scas
dec
outs
jbe
ror
call
jae
pop
jle
cmps
jne
(bad)
neg
add
mov
sub
mov
(bad)
inc
mov
(bad)
pushf
adc
(bad)
mul
aas
cmp
add
mov
jbe
sub
stos
jge
fs
sahf
rcr
push
daa
adc
out
and
mov
push
xchg
gs
mov
pusha
cdq
je
in
mov
add
pushf
jnp
sub
scas
pop
mov
rcl
clc
jle
jecxz
fldpi
popf
js
ret
push
in
jae
and
in
lods
dec
cmc
xchg
inc
not
aaa
loop
xor
mov
push
fbstp
jge
add
data16
xchg
xchg
ins
ins
sbb
es
jmp
sub
je
mov
fcom
jmp
cwde
mov
aas
fdivr
or
mov
mov
push
cmps
retf
mov
mov
jmp
jo
mov
fild
ins
jns
or
xor
cld
mov
addr16
mov
lods
(bad)
cwde
add
push
les
jecxz
(bad)
fidiv
cwde
cmp
and
jmp
shl
shr
dec
cmc
ins
inc
scas
dec
jnp
push
aam
retf
cdq
jp
jecxz
ja
into
ja
sbb
sub
sbb
xor
pop
pop
outs
cmps
ficomp
in
jle
imul
add
(bad)
xlat
mov
bound
jnp
pop
cmp
sub
popa
xchg
xor
popf
daa
add
loop
in
adc
cmps
mov
inc
push
jecxz
clc
cmps
or
hlt
cwde
xchg
push
or
push
call
jne
push
jne
inc
call
xchg
dec
sbb
inc
jb
hlt
daa
pop
inc
sbb
je
jnp
call
mov
retf
(bad)
cli
fdiv
in
gs
mov
fbstp
xor
fild
and
cmp
sbb
push
int
test
loopne
ins
es
inc
pushf
adc
or
out
mov
enter
stos
mov
test
pop
aaa
mov
fcom
bound
or
cmp
mov
nop
xor
jb
and
mov
das
mov
sbb
push
xchg
repnz
into
loope
mov
xchg
xor
push
mov
xchg
jae
push
scas
xchg
fisttp
(bad)
sbb
mov
mov
sti
shr
jnp
fld
dec
push
and
pushf
or
les
test
push
cli
dec
jmp
jbe
jle
xchg
outs
push
or
lahf
lods
xchg
inc
push
mov
lock
test
cmpxchg8b
mov
jmp
scas
or
fmul
outs
pop
ins
push
jmp
cmp
or
or
or
in
mov
lds
xor
jo
in
iret
pop
dec
pusha
mov
aaa
loope
jmp
or
push
test
vpmuludq
pop
(bad)
and
fimul
les
mov
imul
push
call
inc
retf
into
or
fst
add
fsin
xchg
xchg
(bad)
cmp
test
ret
loope
arpl
or
shl
repz
pop
je
fwait
adc
mul
popf
fsub
push
inc
mov
xor
int3
push
adc
xchg
add
jecxz
mov
call
add
je
(bad)
sub
sahf
xchg
and
test
into
repnz
les
sbb
sub
std
sbb
jae
xor
jg
rcl
repnz
and
(bad)
mov
into
out
add
js
sbb
jmp
xchg
bound
lahf
dec
ins
jmp
lahf
in
(bad)
test
or
add
psubb
pop
popa
cmp
or
retf
retf
xchg
push
movs
fsub
jne
lods
xchg
icebp
xchg
jmp
sub
ss
mov
pop
xor
cmc
cwde
adc
gs
adc
add
test
and
retf
fistp
adc
int
mov
mov
fxch
es
jne
pop
std
cld
(bad)
(bad)
in
je
add
pop
cli
mov
jmp
pop
jl
clc
pop
mov
mov
aad
aaa
sub
cdq
in
jne
test
adc
mov
xchg
sbb
mov
mov
xor
pop
ds
xchg
out
add
shl
mov
cmps
add
ss
cli
sti
sub
cli
shl
sbb
mov
xchg
adc
or
fidivr
loopne
imul
push
dec
jae
lds
add
fwait
push
ror
shl
push
ds
inc
xchg
ja
jb
jmp
int
push
xchg
inc
adc
mov
push
sub
rol
ja
ret
push
jns
ror
cmps
or
out
push
cmp
sub
inc
inc
aam
shl
jg
mov
mov
jg
or
outs
or
fst
pop
adc
mov
rcr
mov
retf
(bad)
leave
js
jecxz
loopne
pop
push
fidiv
sahf
sbb
neg
lahf
stc
jo
repnz
cwde
jp
or
mov
pop
test
sahf
jno
pop
cmp
rol
movs
mov
loopne
retf
mov
mov
push
push
sbb
sub
movzx
add
add
or
and
js
icebp
jae
loope
sub
push
jmp
xchg
mov
add
xor
call
xor
test
out
mov
mov
(bad)
js
fdiv
dec
dec
les
xor
push
addr16
xor
ret
sub
pop
hlt
mov
cmp
sar
cmp
sub
add
fcmovb
sbb
test
mov
les
fiadd
sbb
pop
mov
dec
dec
pushf
mov
cdq
sub
mov
and
xor
daa
into
push
and
sub
adc
mov
inc
mov
stc
xchg
das
ret
cld
mov
add
daa
or
sub
mov
push
test
add
sbb
and
outs
sbb
aaa
stc
inc
int
mov
mov
loope
popa
fwait
sti
imul
jno
cdq
adc
scas
or
scas
or
cmps
adc
call
push
cs
pop
les
int
rcr
or
(bad)
in
jle
shr
pop
dec
inc
mov
out
mov
dec
shl
or
dec
add
sar
sub
adc
rcl
cmp
inc
mov
pop
xchg
call
push
(bad)
es
xor
push
sub
loope
sbb
add
test
cmp
jmp
add
enter
les
xchg
jns
mov
ret
inc
(bad)
ror
js
ror
mov
cld
nop
mov
sbb
stos
add
ffree
push
cld
fsubr
(bad)
jne
stos
inc
or
dec
and
je
pop
adc
push
and
sbb
outs
mov
add
fdivr
xchg
gs
pop
jle
adc
mov
adc
in
dec
fwait
and
shl
lods
inc
mov
pop
test
cmc
sbb
lods
sub
lds
jge
cmp
inc
ret
or
shl
rcr
and
sub
push
pop
mov
lahf
fisubr
jle
push
(bad)
and
xchg
fnstsw
jns
xlat
add
inc
outs
sbb
push
sub
ficomp
mov
cdq
cs
retf
jecxz
arpl
popa
inc
dec
cli
movs
clc
jecxz
pop
cli
pop
lods
jecxz
mov
mov
mov
popa
mov
test
inc
mov
js
lock
movs
mov
mov
or
xchg
mov
push
inc
push
or
pushf
xchg
in
and
pop
imul
mov
xchg
in
in
aaa
jbe
sbb
sahf
and
imul
aad
shl
push
cwde
imul
cmp
xor
stos
fcomp
adc
ss
lahf
adc
mov
int3
retf
(bad)
jmp
icebp
hlt
push
dec
push
iret
cmp
adc
mov
push
ins
inc
push
sbb
adc
xchg
loopne
cmps
hlt
sub
fstp
inc
ins
lahf
adc
jmp
xchg
mov
jb
loopne
stos
mov
fiadd
shl
imul
push
test
adc
xchg
inc
out
xchg
aas
imul
mov
mov
rcl
cmp
gs
add
sub
pop
mov
clc
adc
outs
dec
lahf
int
lahf
cld
nop
add
inc
add
mov
les
sub
pop
mov
jnp
jl
imul
cmp
fisttp
in
push
cmp
ficomp
inc
movs
cmps
mov
hlt
ds
xchg
push
push
lods
xchg
retf
dec
mov
push
add
xor
inc
ret
xor
pop
adc
ins
sbb
sub
fwait
mov
mov
ja
xor
ja
into
and
int3
out
mov
and
shr
cmp
sub
pop
jae
xchg
xchg
and
and
sbb
mov
jns
inc
ja
jmp
inc
sti
pop
sbb
pop
or
or
pop
ja
aas
hlt
push
xchg
dec
add
sbb
jg
rcr
sahf
xor
scas
pop
jl
cs
mov
arpl
out
sub
aad
xchg
push
fst
adc
xchg
test
sbb
push
fwait
adc
das
dec
mov
push
sbb
and
push
scas
xchg
mov
(bad)
jecxz
mov
in
fs
pop
out
jmp
fadd
adc
add
lahf
adc
out
stc
cmps
mov
pop
mov
pop
or
fsubrp
movs
cli
arpl
adc
adc
pop
shl
sbb
cmp
fsub
mov
add
cs
push
fcmovbe
aaa
push
lods
sub
jbe
test
push
(bad)
loopne
or
mov
pop
jmp
cdq
jge
xor
mov
iret
stc
add
jge
dec
cli
push
adc
mov
icebp
pop
jle
sbb
sar
shl
cs
lods
leave
imul
popa
ds
call
not
dec
push
es
repz
std
retf
gs
clc
std
stos
mov
ret
cmp
push
add
sbb
sub
mov
ret
aaa
jne
les
test
push
xchg
mov
sbb
mov
xchg
sbb
jl
and
jbe
inc
int3
das
clc
sar
add
xor
aas
pop
adc
(bad)
dec
mov
jne
int
fs
xor
sub
xor
gs
(bad)
pop
pop
leave
cmps
push
call
xchg
jecxz
pop
loop
add
leave
(bad)
mov
out
or
ss
pop
pop
sub
jno
dec
push
xchg
pushf
shl
aam
sbb
retf
mov
xchg
push
jne
jmp
pushf
div
adc
mov
popf
mov
loopne
retf
fadd
xor
mov
lds
mov
stos
mov
lock
adc
sub
sar
xor
mov
cdq
loope
stc
cld
mov
pop
jbe
dec
xchg
jmp
mov
dec
and
popa
leave
push
ss
fadd
(bad)
fild
jmp
push
add
shl
ss
xchg
js
mov
sub
mov
lock
jl
add
inc
ja
add
fwait
adc
cmp
js
sbb
pop
mov
icebp
sub
inc
push
imul
movs
xlat
sbb
popa
jecxz
stc
aaa
add
ror
jbe
adc
test
leave
test
ins
pop
das
cmp
call
fs
ret
aad
cld
adc
test
ss
mov
pop
or
lahf
rcl
imul
mov
mov
fdivr
(bad)
bound
js
pop
aas
loope
scas
sbb
xchg
int3
push
jnp
stos
jb
fbstp
outs
rol
push
sbb
cmp
call
stos
repnz
sub
icebp
jle
das
loop
fmulp
inc
push
jns
aad
shl
jg
cmp
repz
pop
aas
pop
xor
or
jecxz
rep
sbb
push
ror
in
push
stos
repnz
scas
int3
jmp
shl
dec
xchg
int
xchg
sbb
sbb
gs
jbe
mov
add
loop
mov
pop
test
or
pop
sub
out
sub
mov
sbb
loop
scas
mov
idiv
dec
jmp
mov
inc
adc
(bad)
repz
sbb
inc
repnz
mov
out
pop
dec
(bad)
jl
repnz
jns
sti
aas
xor
fwait
sbb
hlt
int
out
packssdw
or
and
mov
push
push
lahf
mov
xchg
dec
cdq
cwde
ins
fidiv
test
mov
call
sbb
inc
add
cwde
sub
push
pop
xor
icebp
clc
(bad)
sti
mov
push
xor
xchg
movs
popf
push
pop
loop
(bad)
movs
mov
in
loopne
ds
pcmpgtd
jnp
(bad)
mov
arpl
(bad)
repz
hlt
loop
sub
(bad)
call
jo
cmp
ret
pop
and
ror
sub
sub
dec
test
mov
sub
in
pop
mov
scas
arpl
and
jns
mov
push
lods
cmp
das
jb
test
loop
ins
jge
dec
push
cli
cmp
push
retf
push
not
and
and
add
popa
sbb
xor
data16
pop
(bad)
out
mov
pop
pop
in
xchg
jo
inc
(bad)
cmp
outs
or
outs
fcomp
jnp
add
nop
lahf
mov
movs
(bad)
dec
dec
add
mov
and
std
mov
xchg
and
mov
inc
int3
in
sbb
mov
mov
add
mov
jne
repnz
adc
mov
cmp
into
dec
push
mov
push
loope
lahf
xor
dec
(bad)
ret
aad
pop
loop
test
test
jno
adc
add
hlt
mov
mov
test
mov
nop
gs
shl
clc
rol
or
int3
sbb
mov
test
pop
adc
leave
aaa
dec
dec
inc
push
imul
js
aas
clc
mov
xor
mov
aas
int
cmc
aad
daa
ror
pop
rcl
adc
outs
inc
iret
cmps
retf
mov
cs
xor
(bad)
cli
inc
lea
mov
mov
icebp
pop
(bad)
stc
dec
leave
dec
arpl
int
int3
mov
add
leave
lock
(bad)
or
jg
fimul
dec
sbb
retf
dec
lock
xchg
out
les
inc
leave
sbb
push
int
fst
or
push
mov
fist
inc
add
fstp
sbb
pop
cmp
add
push
dec
into
call
sub
sbb
ret
je
(bad)
sub
push
mov
add
test
(bad)
call
dec
sti
imul
scas
data16
add
in
fild
sbb
adc
dec
int3
aad
(bad)
inc
jmp
std
aad
leave
jnp
dec
mov
test
popa
retf
jno
fs
sub
mov
mov
mov
pop
xor
ds
or
loopne
int3
nop
out
cwde
dec
jl
bswap
jno
cmp
inc
jmp
and
push
xchg
sub
mov
add
pop
(bad)
xor
retf
clc
add
fs
dec
bound
cmps
test
cmp
test
aam
mov
and
stos
pop
inc
retf
inc
push
repnz
pop
mov
pop
int3
call
(bad)
imul
xor
push
loope
fwait
rol
fiadd
sbb
sbb
in
shr
pop
sbb
ins
rcl
ins
mov
push
lahf
rcr
jge
repz
inc
ret
inc
in
and
mov
loopne
and
sub
enter
ror
ja
sub
pop
pop
aas
sub
(bad)
push
and
push
adc
and
xchg
cld
push
cmp
mov
fidiv
inc
cmps
mov
inc
in
pop
xchg
ins
loop
int3
inc
call
ror
mov
cmp
sbb
aaa
rcl
arpl
dec
fidiv
and
shl
cmp
addr16
push
xlat
minps
adc
push
adc
xor
(bad)
gs
inc
retf
lock
popf
xor
inc
in
shl
cs
stc
retf
jp
add
pop
pop
ins
mov
mov
xchg
outs
cmp
adc
mov
adc
sahf
or
jno
xchg
xor
sub
mov
xchg
gs
add
in
ja
fnstsw
lds
sbb
pop
push
jmp
mov
dec
(bad)
pop
outs
pop
cmp
jmp
test
sti
lods
(bad)
mov
call
push
jmp
adc
(bad)
dec
pop
jno
push
dec
push
inc
cli
stos
aaa
retf
sub
pop
xchg
aas
lods
add
mov
xchg
push
jne
test
mov
cmp
scas
popf
out
idiv
mov
pushw
(bad)
dec
or
and
push
test
stc
rcl
scas
out
add
xor
int
adc
pop
inc
iret
jmp
pop
lds
push
(bad)
icebp
push
repz
mov
test
xchg
xor
test
not
inc
xor
shr
xor
pop
dec
push
add
xchg
fiadd
adc
ds
dec
stos
and
xor
dec
in
ds
adc
punpckhdq
mov
cwde
aad
scas
lock
add
mov
jo
gs
jb
inc
xor
pop
push
pop
sar
lahf
adc
mov
popf
(bad)
call
gs
push
pop
int3
mov
fnsave
and
cs
push
push
icebp
or
fcom
outs
nop
retf
xor
jbe
test
cmps
ds
ret
lods
dec
mov
iret
cmp
jb
pop
or
lds
sub
xor
sbb
cmp
mov
pop
mov
out
mov
sbb
mov
xor
out
test
movs
xchg
les
add
jecxz
out
sub
mov
rcr
sbb
repnz
mov
stc
sbb
cmp
pop
sti
sbb
push
dec
mov
push
mov
test
pop
cmp
scas
cmp
stos
shl
sub
adc
inc
xor
dec
push
popa
mov
clc
inc
adc
add
jl
rcl
ret
sbb
aas
pmuludq
sub
push
sub
sbb
les
and
mov
mov
dec
sbb
(bad)
cmps
ret
pop
inc
les
in
rcl
aad
push
dec
and
jmp
dec
push
or
dec
xor
movs
test
loop
lahf
or
int3
add
add
adc
loope
xchg
inc
outs
test
xor
(bad)
in
ret
mov
cmc
push
mov
sub
push
sub
dec
loopne
sub
aam
ret
aas
or
fwait
sub
(bad)
sar
(bad)
mov
stos
and
jg
fisubr
std
push
lds
mov
js
imul
lods
popf
mul
xor
sub
retf
or
(bad)
in
mov
pop
cmps
or
and
jne
fld
mov
add
js
inc
mov
push
popf
mov
sbb
jl
dec
or
sahf
daa
les
ja
dec
mov
inc
xchg
inc
es
mov
xchg
inc
push
adc
jp
jecxz
xor
out
in
leave
xchg
fidiv
fwait
gs
arpl
imul
leave
push
push
and
and
(bad)
in
mov
xchg
loopne
push
mov
data16
icebp
imul
mov
pop
xchg
mul
cs
jb
clc
ficomp
pop
push
retf
or
ret
inc
sahf
sbb
jp
mov
push
or
shr
dec
bound
je
jmp
push
sti
js
bound
push
repz
rol
add
sbb
outs
fcomi
xchg
push
xchg
(bad)
sub
mov
and
hlt
movs
mov
dec
jmp
mov
sub
sbb
mov
daa
xor
adc
es
mov
sbb
push
mov
pop
and
(bad)
ins
inc
or
dec
jns
enter
mov
sbb
int
xchg
fs
test
cmp
cmp
adc
das
popa
adc
xor
repnz
shl
mov
pop
adc
ins
aam
sub
cmp
je
enter
adc
cli
pop
jge
fmul
(bad)
cdq
inc
adc
push
jbe
loope
ins
jp
out
push
out
test
sahf
mov
xlat
mov
lock
cmp
(bad)
inc
jnp
call
mov
push
clc
and
enter
mov
stos
ins
pop
push
fbld
jno
xor
mov
mov
add
add
hlt
push
mov
test
add
and
push
popa
jns
mov
mov
int3
mov
xchg
sbb
out
stos
stc
pop
out
mov
jne
ins
push
int3
pushf
jmp
or
mov
pop
loop
inc
test
push
xchg
(bad)
pushf
xor
add
sub
and
jg
xchg
test
js
int3
test
scas
mov
lds
mov
push
aam
pop
pop
mov
nop
inc
mov
fiadd
ret
leave
dec
in
mov
push
cmp
jle
scas
push
mov
je
add
fs
adc
stos
rcr
div
ja
ret
mov
aaa
cmps
aas
imul
xchg
je
jb
add
and
inc
xor
jmp
cwde
(bad)
sar
push
push
sub
sti
imul
test
jbe
mul
mov
dec
adc
pop
shr
adc
inc
and
dec
outs
pusha
xor
dec
imul
jo
mov
cdq
sbb
ret
jns
or
lods
outs
inc
std
xchg
cwde
data16
(bad)
mov
pop
fiadd
fs
icebp
and
cmps
jmp
inc
in
inc
repnz
mov
jbe
shl
sub
dec
jmp
push
bound
mov
inc
fist
cmps
adc
fisub
cli
jo
xchg
cmp
test
retf
scas
outs
fcmove
inc
rcl
and
sbb
mov
push
(bad)
movs
mov
pusha
scas
es
mov
mov
push
in
or
ror
int3
jno
jl
out
push
gs
mov
lea
push
sub
mov
inc
and
pushf
mov
and
inc
push
xchg
pusha
xchg
pop
xlat
or
in
hlt
out
(bad)
std
fs
shl
or
in
pop
cwde
pusha
mov
sub
scas
aad
xchg
lods
stc
fimul
mov
adc
cwde
push
jmp
mov
mov
pop
mov
(bad)
rol
inc
mov
outs
pop
xchg
leave
jae
mov
inc
in
addr16
sub
test
idiv
cmp
iret
mov
shl
xchg
outs
daa
add
test
sub
pop
fwait
inc
rcr
jo
add
enter
xchg
out
ret
push
jl
push
test
sbb
xor
in
sub
and
pop
cmp
adc
adc
sub
sbb
aam
jb
cwde
gs
mov
fxch
push
ror
xchg
loop
mov
xchg
jmp
fs
jl
pusha
jp
adc
inc
and
sti
lahf
and
dec
leave
dec
lds
mov
fnstcw
xchg
ja
dec
xor
pushf
pop
and
adc
sub
icebp
inc
jl
and
std
outs
outs
pop
ins
add
fsubr
icebp
sub
sub
jb
stos
xchg
data16
mov
fcmovu
xchg
je
or
(bad)
cmp
pop
and
cmp
lock
call
clc
pop
jecxz
sub
mov
sbb
dec
mov
test
mov
jbe
sar
inc
int3
mov
pushf
rcl
pushw
aas
ret
jbe
xchg
stc
std
scas
movs
out
fwait
jns
sbb
cmp
sbb
xchg
rcr
cmps
aam
int3
dec
test
ins
les
xchg
adc
enter
loope
jecxz
fimul
cmc
jns
inc
mov
fidivr
bound
rcl
and
mov
fstp
ja
shl
mov
sub
dec
icebp
arpl
arpl
stc
arpl
in
sub
jo
sbb
add
sbb
test
pushf
cmp
jo
clc
mov
xor
pop
addr16
xchg
int
ins
sbb
mov
adc
mov
lds
std
push
into
cmc
out
sbb
xor
gs
add
in
clc
jmp
(bad)
sahf
fstp
push
mov
cmp
jo
adc
or
fdiv
xchg
pop
lock
sbb
mov
mov
fsubp
jp
fld
cmc
lahf
gs
cwde
pop
pop
stc
mov
pop
cwde
mov
jl
sub
cmps
popa
retf
js
fild
dec
ins
les
int
push
push
xchg
out
cmp
jge
xor
(bad)
add
mov
jb
in
rol
add
sub
imul
mov
adc
sbb
jmp
xchg
xchg
dec
fisttp
push
sbb
cmps
pop
test
(bad)
or
gs
sti
imul
int3
mov
push
add
(bad)
es
jge
cmp
nop
int3
add
addr16
scas
mov
jge
fstp
jnp
inc
adc
(bad)
cmps
sbb
sar
popa
inc
or
mov
and
not
aam
dec
cmps
clc
in
xor
rol
in
gs
cmp
fisubr
jp
aad
and
sbb
out
cmp
popf
daa
out
mov
pop
cmp
add
xlat
and
sub
mov
cld
test
pop
pop
pop
cs
dec
mov
push
iret
icebp
int
sub
retf
jmp
sbb
ds
xor
mov
jne
sub
mov
mov
fs
or
xchg
dec
add
cmp
leave
mov
pop
pop
mov
fdiv
mov
out
shl
mov
jo
sbb
adc
inc
pop
(bad)
pop
adc
xor
mov
cmp
dec
cmpxchg
add
mov
dec
mov
imul
inc
adc
inc
mov
cmp
popf
into
js
and
xchg
stc
mov
ds
cs
pop
jle
pop
cmps
cmp
jecxz
and
mov
mov
rcr
hlt
xchg
dec
dec
stos
sbb
and
(bad)
fisttp
inc
push
jne
cmp
inc
ror
fsubr
cdq
push
lahf
inc
add
(bad)
std
aam
aaa
sub
adc
inc
or
cmp
xchg
ret
push
ins
test
rol
push
dec
xor
ja
into
pop
jb
adc
mov
sahf
dec
outs
mov
push
jp
sbb
sub
mov
sub
sub
xchg
mov
or
mov
xchg
mov
not
div
push
aam
xchg
add
dec
pop
mov
sbb
ror
fst
fisub
ins
mov
jb
ror
icebp
cld
sbb
inc
push
mov
pop
leave
adc
out
mov
fcomp
out
mov
xchg
std
lea
dec
mov
js
xchg
ss
sbb
or
jnp
and
add
imul
mov
pop
in
ins
push
bound
enter
push
ins
or
aad
popf
pop
xchg
xlat
push
xor
sahf
in
sbb
sbb
fwait
sub
sbb
clc
sbb
adc
fidiv
int3
inc
mov
add
(bad)
lock
mov
out
push
ror
and
vmovntps
dec
adc
fisttp
outs
adc
push
adc
jmp
lock
push
push
ins
mov
ror
es
cmp
cmp
cmc
xchg
lods
data16
inc
pop
ret
pop
xchg
xor
jge
add
arpl
jecxz
imul
pop
sub
sbb
stos
push
inc
cmp
push
sub
pop
adc
dec
xchg
ret
mov
rol
jg
ja
lea
jb
sub
pop
xor
or
sub
outs
cmp
fsubr
shl
addr16
pop
jmp
sar
xor
jmp
fcmovnu
add
lahf
cwde
jno
ins
ficomp
leave
and
and
inc
mov
leave
jp
push
rcl
mov
inc
ror
int3
cmp
lahf
push
or
nop
xlat
mov
sub
jge
dec
outs
std
sbb
jge
ror
gs
mov
aad
fcom
sub
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
lea
imul
add
mov
cmp
cmove
mov
jmp
lea
imul
add
mov
mov
jmp
mov
jmp
mov
sub
add
add
mov
mov
jmp
mov
mov
jmp
mov
add
pop
pop
ret
jmp
nop
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
shl
add
mov
mov
jmp
mov
jmp
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
jmp
mov
mov
jmp
mov
add
pop
pop
ret
jmp
xchg
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
shl
add
mov
mov
jmp
mov
jmp
mov
sub
add
add
mov
mov
jmp
mov
mov
jmp
mov
add
pop
pop
ret
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
cmp
cmove
mov
jmp
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
lea
imul
add
mov
cmp
cmove
mov
jmp
lea
imul
add
mov
mov
jmp
mov
jmp
mov
mov
sub
sub
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
jmp
lea
mov
add
mov
call
mov
mov
mov
mov
mov
add
mov
mov
mov
shl
mov
add
shl
add
mov
mov
mov
shl
mov
mov
shl
mov
sub
mov
sub
add
sub
mov
add
shl
add
mov
cmp
cmove
mov
jmp
mov
lea
mov
mov
mov
call
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
add
sub
sub
mov
mov
mov
mov
mov
mov
add
add
sub
mov
mov
mov
mov
mov
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
sub
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
shl
add
mov
mov
jmp
mov
jmp
mov
sub
add
add
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
xor
mov
and
xor
and
or
mov
mov
sub
mov
sub
add
mov
sub
mov
mov
mov
mov
sub
add
add
mov
sub
sub
add
sub
sub
mov
mov
mov
mov
sub
add
add
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
shl
add
mov
mov
jmp
mov
jmp
mov
add
add
sub
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
sub
mov
sub
add
mov
sub
mov
mov
add
sub
sub
mov
mov
mov
xor
mov
and
xor
and
or
mov
sub
add
add
mov
mov
mov
mov
mov
mov
add
add
sub
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
shl
add
mov
mov
jmp
mov
jmp
mov
mov
sub
sub
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
mov
mov
movzx
mov
mov
sub
mov
mov
sub
add
sub
mov
mov
movzx
mov
xor
mov
and
xor
and
or
mov
mov
mov
mov
mov
mov
movzx
cmp
mov
cmove
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
add
add
sub
mov
mov
jmp
mov
mov
sub
add
add
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
mov
mov
jmp
mov
jmp
mov
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
jmp
data16
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
add
pop
ret
nop
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
push
jmp
push
ret
jmp
push
jmp
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
adc
ror
in
and
or
mov
push
mov
xchg
cmps
sub
add
test
add
and
add
int3
mov
add
add
bound
test
mov
add
mov
xchg
test
repnz
popa
cmp
add
aam
add
add
adc
sahf
aaa
add
add
add
mov
mov
xchg
mov
add
add
add
xor
add
push
and
mov
cmp
gs
ret
inc
cmp
aam
in
mov
jmp
sub
xor
xchg
mov
repnz
mov
fld
aam
add
add
outs
add
pop
out
adc
lea
gs
add
add
cwde
mov
(bad)
std
pop
mov
pmullw
test
(bad)
add
add
push
icebp
adc
repz
jmp
xchg
loope
mov
add
(bad)
sbb
add
outs
mov
test
test
mov
out
add
jg
jmp
mov
dec
jp
lods
push
mov
cvttps2pi
cmp
test
outs
add
test
(bad)
and
or
add
add
add
stos
je
or
inc
loopne
or
pop
jmp
mov
sub
pop
inc
test
add
imul
add
out
jbe
cwde
add
rol
push
fld
add
test
dec
add
scas
fmul
xchg
cwde
mov
and
mov
jmp
mov
xchg
retf
xchg
inc
jle
pusha
add
rol
outs
gs
dec
push
and
adc
shl
jmp
mov
adc
add
mov
lar
add
add
add
sbb
movs
dec
rcl
mov
jp
jmp
dec
xchg
xchg
xor
and
bts
add
mov
or
fcmovnb
in
movs
loop
mov
shr
jmp
in
mov
stc
push
push
inc
jmp
mov
inc
add
imul
add
sbb
jbe
cwde
xchg
adc
mov
in
push
(bad)
mov
xor
aad
or
add
add
xchg
and
dec
jg
jmp
mov
sub
out
mov
add
add
adc
mov
gs
dec
push
jbe
cdq
mov
lods
pop
mov
add
jmp
mov
dec
cwde
test
xchg
sbb
cmp
pop
addr16
sbb
xchg
sub
sub
out
adc
je
imul
and
add
gs
mov
push
std
test
test
add
dec
test
cwde
add
add
mov
and
(bad)
nop
add
add
mov
and
add
test
movs
or
ret
xor
push
add
sbb
lock
and
mov
inc
add
mov
(bad)
cwde
add
rcl
sub
dec
mov
pop
outs
add
mov
cwde
add
add
mov
cmp
add
jmp
mov
push
add
cmp
inc
pusha
test
test
xor
add
lea
sub
or
cmp
add
add
cmp
ds
inc
and
je
ins
ins
xor
and
add
clc
jns
mov
mov
test
ins
les
add
add
std
cmp
mov
push
or
add
jmp
jge
inc
cwde
sbb
add
jecxz
jg
inc
mov
aas
les
dec
sbb
outs
mov
and
xor
jmp
je
cmc
add
add
push
test
xchg
cdq
mov
sub
dec
in
add
or
cmove
pop
out
pushf
add
aad
xchg
add
add
aaa
mov
push
mov
mov
xchg
add
mov
mov
dec
dec
add
sbb
test
add
jmp
mov
sbb
shr
jmp
mov
mov
mov
mov
mov
int3
add
cmp
and
add
jb
add
ja
xor
inc
sar
pushf
mov
aas
add
mov
jecxz
scas
jno
pop
xchg
and
add
movzx
add
add
inc
ror
test
and
gs
in
int3
stos
xor
aas
les
mov
mov
aad
add
js
test
(bad)
loope
stc
repnz
cdq
jmp
jl
xor
xchg
adc
sub
pop
mov
inc
add
add
push
cmc
mov
sahf
mov
xchg
and
add
or
int
add
xchg
rol
mov
xchg
adc
add
xchg
and
lea
add
add
in
and
and
outs
add
test
nop
shr
cmps
pushf
aad
(bad)
jmp
mov
mov
out
mov
aam
lods
push
loopne
add
inc
scas
mov
jmp
(bad)
push
and
adc
dec
shr
pop
mov
loope
mov
repnz
fiadd
cmp
adc
pop
add
mov
xchg
and
add
adc
test
sbb
add
ds
(bad)
jle
dec
lds
add
test
add
add
add
dec
bound
jp
xor
mul
sbb
aas
cdq
mov
sub
cmp
setbe
mov
and
add
aad
cmp
mov
add
add
mov
xchg
cmp
sub
and
outs
add
push
mov
lods
add
add
xchg
stc
sar
add
in
inc
or
add
mov
add
add
retf
inc
enter
pushf
add
mov
outs
push
test
out
cmps
jne
add
mov
sahf
mov
add
out
xchg
and
add
add
sbb
add
and
add
add
ja
add
mov
push
in
mul
test
lds
repnz
and
add
shr
mov
(bad)
out
pushf
add
std
pop
xchg
stc
pop
cmp
add
cwde
inc
outs
add
push
stos
jmp
popf
jmp
add
aad
test
daa
or
mov
push
add
test
add
add
pop
pop
inc
jmp
nop
push
mov
push
push
push
and
sub
jmp
push
jmp
call
jmp
push
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sbb
or
dec
or
ss
sub
and
mov
imul
add
mov
inc
add
push
ret
mov
mov
add
test
add
add
bound
stos
add
(bad)
dec
add
add
mov
repnz
add
fwait
ins
mov
test
add
add
rol
and
in
push
fld
inc
inc
push
mov
xchg
fcomip
sbb
inc
and
les
je
leave
inc
int3
shr
add
and
jo
iret
push
jo
cmc
and
jg
jmp
mov
and
sbb
xchg
je
push
loopne
add
mov
sub
xor
(bad)
push
xor
jmp
mov
and
mov
and
or
jbe
add
and
mov
mul
cmp
sbb
add
and
adc
cmc
inc
and
pavgb
add
dec
mov
sub
mov
adc
pop
cli
add
add
mov
and
sub
cmc
and
add
xor
mov
sub
mov
sbb
arpl
bound
sub
sub
stos
inc
repnz
inc
mov
mov
inc
jmp
ins
inc
and
mov
mov
and
ins
sub
add
add
jl
fs
sub
mov
pop
cmp
test
xor
jmp
mov
out
add
daa
inc
cmp
(bad)
mov
add
mov
jo
repnz
into
push
mov
jo
test
rol
out
aam
je
dec
ins
xor
mov
retf
add
dec
fiadd
jnp
add
ret
push
shl
popa
mov
or
sub
mov
mov
jo
sbb
arpl
ja
push
jg
and
scas
aam
jo
dec
js
xchg
test
add
pusha
add
(bad)
mov
sub
mov
cmpxchg
add
add
int3
add
add
ds
pop
or
pavgb
add
(bad)
(bad)
ja
or
pop
inc
ret
sbb
mov
jmp
mov
and
sub
mov
ret
add
xor
int3
add
jmp
outs
cli
int
mov
jmp
add
or
and
add
xchg
ror
add
mov
shl
scas
sbb
daa
add
bound
loop
cmc
add
call
add
not
push
jo
mov
cli
push
adc
add
add
inc
retf
and
in
out
mov
sbb
(bad)
add
mov
and
jnp
add
clc
cmp
loop
fcomp
cmc
adc
add
add
add
xchg
and
add
add
dec
mov
sub
mov
and
xor
add
sbb
out
nop
mov
jmp
sub
mov
js
adc
inc
int3
pop
test
cwde
add
daa
add
popa
add
add
mov
popa
pop
outs
aas
icebp
dec
add
mov
rol
pop
mov
xor
lahf
inc
mov
jmp
mov
mov
mov
mov
mov
idiv
retf
(bad)
dec
xlat
dec
and
and
cli
loop
out
add
neg
(bad)
cmp
(bad)
test
adc
and
add
add
add
add
mov
mov
adc
out
add
add
mov
lea
data16
fst
sbb
or
ss
int3
rol
loop
add
add
add
call
mov
mov
sub
and
add
(bad)
add
inc
and
inc
ja
repnz
xchg
inc
jmp
(bad)
loop
out
push
xchg
and
xor
shr
out
add
inc
cwde
je
repnz
mov
(bad)
mov
lock
mov
xor
sbb
mov
and
mov
paddq
mov
xchg
fs
inc
add
or
push
outs
sbb
or
inc
and
das
(bad)
mov
bound
xor
jl
xchg
imul
add
inc
and
add
and
adc
enter
jmp
jl
in
add
add
les
mov
mov
aam
add
adc
outs
test
nop
mov
mov
and
jmp
mov
(bad)
mov
add
push
sub
pop
shl
add
add
test
arpl
fs
and
xchg
xchg
mov
add
rcl
and
pop
ret
jmp
nop
push
mov
push
push
push
and
sub
jmp
call
jmp
push
jmp
push
ret
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
test
push
inc
push
addr16
test
les
mov
(bad)
mov
mov
pop
add
sub
mov
mov
lock
fbld
into
call
inc
push
cmps
mov
and
adc
test
and
add
add
mov
clc
test
int
scas
sub
hlt
iret
and
pop
add
arpl
add
call
mov
imul
mov
push
repnz
add
add
jae
int
add
add
mov
sub
in
and
add
add
cmps
aad
add
outs
lds
idiv
(bad)
mov
cwde
add
or
push
ins
into
call
add
sub
mov
mul
test
cmp
jl
add
mov
sub
sahf
dec
and
scas
add
push
pop
add
push
addr16
cmps
add
add
dec
mov
out
in
add
jbe
adc
add
scas
add
push
int3
and
lods
fisttp
call
cmps
add
add
add
add
sub
mov
and
add
pop
or
adc
add
or
mov
and
add
and
push
mov
push
js
loope
add
add
push
add
add
sub
mov
ja
iret
aad
pop
ins
daa
push
add
inc
mov
adc
mov
cdq
jg
aam
add
add
test
jae
add
call
jmp
jge
jmp
shr
jmp
mov
and
pcmpgtw
add
add
mov
and
add
iret
add
jb
movs
dec
and
add
mov
sub
cs
sbb
(bad)
and
adc
push
jmp
lods
add
jbe
fld
stos
fs
add
int
sub
or
test
and
lock
ror
inc
and
movsx
cmps
cmp
popf
add
add
popa
gs
lods
cmp
daa
jge
mov
and
jl
cmps
add
scas
iret
repz
add
add
sub
lods
pop
dec
pop
jg
jae
xor
add
and
add
mov
jl
call
repnz
push
mov
jmp
mov
es
and
push
jg
jmp
mov
(bad)
and
jbe
jg
jmp
lods
test
add
add
pop
sub
mov
je
int3
pop
ins
add
mov
addr16
add
add
cwde
inc
shr
loope
aam
push
add
int
scas
or
inc
and
sub
jne
cmps
add
add
int3
mov
inc
push
outs
xor
jmp
mov
or
inc
mov
movs
cmp
clc
add
jmp
jmp
and
add
add
jp
add
add
mov
jmp
mov
je
mov
fs
adc
add
cld
shr
mov
mov
pop
imul
(bad)
adc
add
cmp
test
imul
add
(bad)
sbb
aam
add
add
out
cmc
div
inc
rol
jge
add
ror
into
jae
add
add
test
cmps
cmp
je
add
jl
(bad)
add
shr
pop
cmp
int
es
test
fisub
es
sti
cmp
ins
int
test
(bad)
add
sbb
mul
int
scas
iret
sar
mov
mov
mov
addr16
cmps
add
add
btc
mov
jmp
test
xchg
jle
mov
add
dec
cmove
rol
jmp
mov
mov
popa
xchg
and
add
add
cmp
or
add
(bad)
xchg
lods
add
mov
dec
and
xchg
inc
push
test
mov
and
add
add
sub
cmp
and
pop
add
inc
pop
enter
retf
push
or
mov
pop
and
fidivr
mov
les
cmps
aad
xor
inc
rcl
inc
or
add
jge
mov
add
mov
dec
call
adc
iret
pop
xor
push
popf
movzx
dec
and
mov
hlt
inc
and
mov
(bad)
mov
into
nop
mov
and
inc
and
fnstcw
add
int3
adc
add
dec
adc
aad
add
dec
add
inc
xor
enter
jle
sar
mov
mov
jmp
mov
pop
mov
mov
mov
xor
xchg
mov
mov
inc
mov
mov
adc
icebp
xor
add
sti
mov
stos
cmp
(bad)
ror
cmp
jle
(bad)
add
mov
and
add
add
add
and
add
add
inc
sub
test
je
sub
ja
pop
rol
xchg
xchg
or
and
inc
sub
bswap
test
into
and
mov
mov
call
sub
add
push
popa
push
sahf
mov
jmp
mov
sbb
jg
ins
into
add
mov
and
je
mul
inc
enter
jne
mov
and
add
jae
mov
enter
hlt
sbb
dec
add
cmp
cld
retf
mov
or
sbb
mov
cwde
adc
cmps
in
data16
sub
repz
xchg
or
mov
pusha
idiv
sahf
add
mov
or
and
dec
rcr
push
add
adc
mov
add
add
mov
inc
add
mov
jmp
mov
neg
sysret
mov
adc
test
mov
int3
pop
scas
or
hlt
pop
add
inc
dec
mov
add
mov
dec
dec
push
addr16
mov
call
pop
jae
add
test
jae
cmps
jmp
mov
jmp
mov
sbb
add
add
arpl
mov
test
sub
add
pop
push
nop
mov
and
add
and
add
daa
ins
sub
shl
add
mov
fld
push
fild
add
mov
mov
add
cmc
sub
mov
stos
test
mov
add
push
mov
lock
into
push
hlt
stc
arpl
ret
popf
sbb
(bad)
jmp
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
push
jmp
push
jmp
call
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
outs
fwait
or
xchg
sub
test
add
xchg
cmp
add
test
add
test
pop
jne
inc
add
add
adc
int
stos
jo
push
pop
sbb
inc
add
pop
je
test
test
int3
add
add
and
dec
add
sub
pushf
inc
add
add
add
sub
inc
test
sbb
fidivr
leave
adc
add
mov
(bad)
fld
test
xchg
clc
add
test
in
add
jg
(bad)
pop
jne
add
add
pop
cs
es
test
(bad)
add
(bad)
dec
add
shr
add
mov
add
mov
push
jo
mov
jg
jmp
scas
test
or
sub
push
jne
dec
and
add
xchg
psubq
add
int
in
fiadd
mov
and
shl
test
cmp
add
inc
(bad)
movs
test
jmp
mov
sub
inc
adc
(bad)
(bad)
and
cmp
cmp
test
add
pop
mov
mov
add
or
add
into
test
pop
add
je
ret
out
inc
mov
hlt
movs
add
add
(bad)
and
add
add
add
test
repz
test
cmc
add
sub
in
inc
into
sbb
sub
mov
maxps
add
jmp
mov
mov
fild
add
mov
cwde
add
add
(bad)
mov
add
add
add
sub
sbb
and
int
add
push
pop
add
jmp
mov
and
add
pop
mov
mov
nop
adc
imul
(bad)
(bad)
add
and
add
add
into
add
test
add
fimul
mov
jmp
test
add
add
mov
cdq
add
add
scas
push
add
add
test
add
sub
sbb
jmp
dec
push
into
add
mov
push
pop
add
mov
nop
pop
adc
and
lods
mov
add
push
(bad)
and
inc
daa
add
jmp
repz
jmp
mov
arpl
dec
mov
add
add
sub
mov
rcr
inc
pop
add
pushf
inc
into
xchg
je
pusha
and
fiadd
add
ret
jg
sub
je
jmp
call
data16
jge
out
inc
jle
dec
(bad)
and
xchg
add
push
test
lock
sub
in
and
je
pop
mov
add
jge
outs
int3
add
cmc
or
rcl
mov
dec
(bad)
out
add
fiadd
push
mov
add
add
pop
mov
inc
jp
wrmsr
aas
fcom
imul
pop
dec
add
jle
and
add
add
push
clc
pop
retf
int3
mov
add
(bad)
add
add
pop
xchg
cdq
cmp
pop
mov
push
sar
pop
add
add
add
jne
sub
inc
inc
mov
cmovb
in
add
fiadd
cmp
mov
add
add
movups
add
add
jg
fild
mov
and
mov
inc
pop
jne
daa
xchg
je
in
test
cmp
add
jne
dec
aam
add
pminub
dec
add
add
dec
cmc
sub
mov
cs
(bad)
push
inc
into
add
xchg
add
je
test
add
add
mov
mov
inc
cmpneqps
add
add
fidiv
fcomi
sub
into
mov
inc
jno
add
or
pop
add
add
shl
je
sub
push
inc
and
xor
add
mov
sub
cwde
inc
and
(bad)
pop
add
int
add
test
add
jecxz
inc
xchg
add
lock
int
or
mov
sub
sbb
nop
jmp
xchg
sub
add
jmp
rol
cwde
lahf
or
out
inc
jle
je
daa
sub
add
jmp
adc
cdq
rcr
mov
mov
test
cmc
add
sub
lods
inc
sub
icebp
jae
add
dec
xchg
je
inc
pusha
and
fidivr
std
fisubr
and
cmpps
mov
clc
call
cmp
and
and
inc
es
mov
je
jmp
into
test
int3
xchg
add
sub
mov
cld
add
mov
ss
pop
xchg
mov
test
or
add
inc
adc
add
fstp
jle
inc
cli
into
je
jmp
jmp
sub
test
inc
xchg
test
push
movs
add
add
mov
mov
add
pop
add
add
or
mov
dec
push
movs
and
add
add
aad
add
lods
sti
xor
inc
into
xchg
add
inc
ror
fidiv
sbb
add
test
mov
ins
int
or
add
pusha
add
or
test
push
mov
jmp
pop
aam
clc
fdivr
int
xchg
mov
inc
add
inc
pushf
rcr
shr
add
and
test
add
cmc
mov
aam
add
mov
ja
or
mov
cmp
pshufw
test
gs
add
scas
xchg
add
mov
mov
jle
add
pop
jne
xor
je
int
test
push
pop
and
inc
add
cmp
jle
xchg
xor
mov
test
and
je
and
add
mov
test
xchg
add
add
fidivr
or
mov
xor
or
punpcklbw
test
and
pop
jne
jmp
mov
mov
mov
cmp
mov
and
add
add
adc
neg
mov
fadd
cmp
add
and
test
add
into
js
int3
in
mov
addr16
sbb
xchg
and
rol
add
outs
inc
pop
add
inc
test
jmp
mov
mov
inc
inc
push
rcl
dec
imul
je
ret
mov
rcr
fiadd
aad
inc
rol
jb
and
add
pop
adc
xchg
mov
test
rcl
mul
ret
in
jl
and
mov
into
xchg
jbe
add
or
ret
jno
push
inc
add
(bad)
push
and
add
add
add
mov
test
add
ret
je
push
add
mul
iret
sar
or
add
jne
mov
add
pop
jns
jmp
add
jl
add
adc
jb
fwait
add
and
adc
xchg
pop
inc
add
test
fadd
xchg
je
int
add
test
add
add
cmps
xchg
scas
sub
pusha
push
sub
fisttp
and
mov
jle
and
add
in
mov
add
iret
sbb
std
or
mov
fadd
fiadd
mov
iret
xchg
sub
sub
add
inc
out
sbb
sub
mov
and
add
jmp
(bad)
dec
shl
add
das
dec
xchg
add
jmp
stos
test
add
lock
add
inc
into
xchg
inc
jno
pusha
and
(bad)
cmp
ret
mov
inc
cwde
int
and
fist
mov
lahf
cmc
add
and
or
add
mov
mov
jmp
imul
rol
mov
(bad)
pop
xor
mov
cs
str
rol
(bad)
hlt
hlt
pop
pop
pop
pop
ret
jmp
xchg
push
mov
push
push
push
and
sub
jmp
push
jmp
push
jmp
push
jmp
call
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
add
stc
push
jle
and
cmp
and
xchg
add
mov
and
add
mov
inc
adc
and
(bad)
cmc
xchg
add
mov
mov
(bad)
push
cmp
mov
test
xor
inc
mov
adc
push
dec
mov
mov
mov
ror
outs
adc
add
inc
or
(bad)
stc
push
mov
add
aas
adc
add
mov
xchg
aad
xor
sub
(bad)
sbb
popa
add
rcl
xor
pop
jno
mov
rcl
in
sub
movs
mov
sbb
mov
loope
mov
fwait
add
jmp
mov
sub
mov
jg
jmp
fbstp
add
cmp
mov
inc
ss
into
(bad)
jecxz
inc
jmp
mov
aam
push
and
push
add
mov
add
add
xchg
pushf
add
jns
mov
fs
pop
mov
pop
mov
mov
jmp
dec
retf
jno
test
add
jg
push
add
scas
mov
mov
xchg
cmp
(bad)
(bad)
rol
add
outs
xchg
add
jb
shr
add
add
mov
jecxz
(bad)
and
mov
add
add
ins
sti
test
jae
jg
pop
add
inc
mov
pushf
add
add
mov
pusha
dec
xlat
push
cmc
mov
add
add
mov
mov
ret
test
iret
clc
add
cwde
jmp
mov
xchg
bound
add
sti
fs
jo
(bad)
jo
rcr
xchg
cmp
ss
sub
ja
and
cmovs
outs
add
jb
rcr
xchg
rcl
add
jno
push
add
cmc
xchg
mov
mov
pop
jno
add
cmp
lahf
xor
and
add
popa
cmp
push
pop
inc
add
mov
sub
push
inc
and
je
mov
mov
sub
mov
test
imul
add
mov
repz
add
adc
cmc
add
test
add
cmp
lods
mov
mov
mov
mov
adc
retf
add
fidivr
pusha
test
not
add
test
rol
lahf
xchg
in
cmps
ret
pop
ja
test
xor
add
sbb
retf
stc
aas
mov
je
jmp
adc
and
mov
jns
jne
fcmovnu
mov
and
dec
mov
cdq
add
jmp
jne
and
add
add
out
and
(bad)
mov
cmc
mov
lahf
add
rcl
popf
or
dec
retf
in
xor
test
add
ss
add
rcr
xchg
bound
(bad)
(bad)
fdivr
ret
mov
pusha
inc
add
push
jmp
mov
add
aas
inc
pop
pop
scas
(bad)
mov
add
cmp
sub
mov
por
cli
add
cmp
mov
sub
mov
addr16
add
jmp
fdiv
add
dec
inc
repnz
jno
xchg
add
xchg
add
add
ins
cli
push
cmc
mov
mov
and
xchg
and
mov
inc
add
cmovne
mov
jmp
adc
cli
mov
test
add
mov
mov
pop
sbb
inc
mov
dec
jne
fcmovnu
sbb
and
mov
mov
in
cmc
mov
cmp
paddusw
test
jns
mov
add
add
mov
mov
and
add
(bad)
(bad)
cmc
mov
in
fucom
cmc
mov
rcl
mov
mov
inc
pop
or
(bad)
popf
in
mov
int3
adc
mov
push
and
cmc
xchg
add
mov
(bad)
jge
hlt
add
mov
add
sbb
adc
add
inc
mov
jp
mov
add
push
mov
das
add
mov
lods
retf
div
mov
leave
add
xor
rol
add
mov
mov
mov
(bad)
mov
cmc
add
add
and
sbb
(bad)
pop
sub
pop
or
jns
add
mov
xor
mov
add
add
lds
nop
inc
or
or
add
and
add
cmovne
add
lods
jge
js
xor
test
add
adc
mov
inc
add
lods
xchg
mov
call
ds
adc
add
jmp
push
mov
push
mov
(bad)
jmp
mov
jno
add
pop
ss
add
(bad)
(bad)
mov
xor
and
je
add
pop
jo
and
cmc
mov
aam
add
jns
sub
mov
jne
add
and
add
pop
mov
push
add
xchg
add
add
mov
jp
sbb
add
mov
push
mov
cmp
mov
call
mov
das
cli
add
test
push
add
add
add
cmp
jns
add
or
cwde
rcl
and
mov
icebp
mov
call
sub
sbb
inc
jo
cmps
xchg
cmp
mov
mov
nop
and
mov
dec
test
add
inc
mov
test
loop
stc
push
add
test
enter
pop
sbb
and
mov
cwde
rcl
add
icebp
inc
push
mov
jmp
pop
jmp
lods
mov
add
pop
inc
mov
mov
loop
add
xchg
fisub
cmc
xchg
loopne
xor
jle
add
jne
and
lahf
mov
jns
test
mov
clc
pop
sbb
(bad)
mov
lea
pop
into
pop
xor
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
lea
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
add
add
sub
mov
mov
mov
shl
mov
sub
mov
sub
add
sub
shl
mov
call
mov
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
shl
mov
call
mov
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
jmp
mov
mov
jmp
lea
mov
mov
sub
sub
add
mov
mov
mov
mov
jmp
mov
mov
cmp
cmove
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
cmp
cmova
mov
jmp
mov
mov
mov
jmp
lea
mov
mov
add
mov
mov
mov
call
lea
mov
mov
mov
mov
sub
sub
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
jmp
lea
lea
lea
cmp
sete
and
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
add
mov
mov
mov
add
sub
sub
mov
mov
mov
add
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
cmp
cmova
mov
jmp
mov
mov
mov
jmp
lea
mov
mov
add
mov
mov
mov
call
mov
mov
mov
mov
add
add
sub
mov
mov
mov
add
sub
sub
mov
mov
mov
cmp
cmova
mov
mov
jmp
mov
mov
mov
jmp
lea
mov
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
call
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
call
mov
jmp
mov
lea
pop
pop
pop
pop
ret
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
cmp
jge
mov
jmp
mov
mov
mov
movzx
cmp
jl
mov
jmp
mov
mov
movzx
cmp
jl
jmp
mov
mov
add
add
sub
mov
movzx
add
sub
sub
mov
mov
jmp
mov
mov
movzx
cmp
jl
jmp
mov
mov
sub
add
add
mov
movzx
sub
sub
add
mov
mov
jmp
movzx
mov
mov
mov
mov
mov
cmp
jge
mov
mov
mov
sub
add
mov
movzx
mov
shl
mov
mov
mov
shl
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
sub
sub
mov
jmp
mov
cmp
jne
mov
mov
mov
mov
add
pop
pop
pop
pop
ret
data16
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
add
sub
sub
mov
mov
mov
shl
sub
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
jmp
cmp
jne
lea
mov
mov
mov
mov
mov
cmp
jne
jmp
mov
cmp
mov
jbe
cmp
setl
mov
mov
test
jne
jmp
mov
mov
mov
add
mov
mov
mov
mov
sub
mov
sub
add
mov
sub
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
add
add
sub
mov
jmp
cmp
jge
mov
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
sub
add
add
mov
mov
mov
shl
sub
add
add
mov
mov
mov
cmp
jae
mov
mov
mov
mov
sub
add
add
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
cmp
jge
mov
mov
shl
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
jmp
mov
jmp
mov
cmp
mov
je
mov
cmp
setb
mov
mov
test
jne
jmp
mov
mov
add
sub
sub
mov
mov
cmp
jb
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
sub
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
cmp
jne
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
jmp
cmp
jne
mov
add
sub
sub
mov
mov
mov
jmp
mov
add
sub
sub
mov
mov
mov
jmp
mov
mov
mov
add
mov
sub
add
mov
mov
mov
sub
add
cmp
jge
mov
mov
add
sub
sub
mov
cmp
jge
mov
jmp
mov
mov
cmp
jge
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
mov
jmp
mov
add
mov
mov
cmp
mov
jbe
cmp
setl
mov
mov
test
jne
jmp
mov
mov
mov
add
mov
mov
mov
mov
sub
mov
sub
mov
mov
mov
mov
mov
sub
sub
mov
mov
sub
add
add
mov
jmp
cmp
jge
cmp
jne
jmp
jmp
mov
cmp
jb
jmp
mov
mov
mov
mov
sub
sub
mov
xor
xor
xor
or
or
xor
and
mov
mov
mov
shl
shl
add
mov
shl
add
mov
cmp
jae
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
shr
mov
movzx
imul
mov
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
movzx
sub
sub
add
sar
mov
movzx
sub
add
add
mov
mov
mov
add
mov
mov
mov
sub
mov
sub
add
sub
mov
xor
mov
xor
and
mov
shl
movzx
mov
sub
sub
add
mov
sar
sub
add
add
imul
shl
add
mov
cmp
jl
mov
mov
sub
sub
add
mov
mov
cmp
jb
mov
mov
mov
sub
sub
mov
mov
mov
movzx
mov
mov
mov
shl
mov
mov
xor
mov
xor
xor
or
or
xor
and
mov
mov
add
mov
shl
add
mov
shl
add
mov
cmp
jae
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
shr
mov
movzx
imul
mov
mov
cmp
jae
mov
mov
mov
mov
movzx
add
sub
sub
sar
mov
movzx
add
add
sub
mov
mov
mov
shl
mov
cmp
je
jmp
jmp
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
sub
add
mov
mov
movzx
sar
mov
movzx
add
sub
sub
mov
mov
mov
mov
mov
sub
sub
sub
sub
mov
cmp
jne
jmp
jmp
jmp
cmp
jl
jmp
jmp
cmp
jge
mov
mov
shl
add
mov
cmp
jae
mov
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
shr
mov
movzx
imul
mov
mov
cmp
jae
mov
mov
mov
mov
movzx
add
sub
sub
sar
mov
movzx
add
add
sub
mov
mov
mov
shl
mov
jmp
mov
mov
mov
sub
sub
add
mov
mov
mov
sub
sub
add
mov
mov
movzx
sar
mov
movzx
add
sub
sub
mov
mov
mov
mov
add
add
sub
sub
sub
mov
jmp
mov
mov
mov
mov
mov
mov
sub
add
add
mov
mov
mov
mov
cmp
jae
mov
sub
add
add
mov
mov
mov
mov
mov
mov
add
add
sub
mov
cmp
jne
mov
cmp
jge
mov
jmp
cmp
jge
mov
add
sub
sub
mov
jmp
mov
mov
sub
add
mov
jmp
jmp
mov
mov
add
sub
sub
mov
mov
mov
sub
sub
add
mov
mov
movzx
sar
mov
movzx
sub
sub
add
mov
mov
mov
add
mov
shl
add
mov
cmp
jae
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
shr
mov
movzx
imul
mov
mov
cmp
jae
mov
mov
mov
mov
mov
movzx
mov
sub
add
sar
mov
movzx
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
cmp
cmovl
mov
mov
add
mov
jmp
mov
mov
mov
add
sub
sub
mov
mov
mov
sub
sub
add
mov
mov
movzx
sar
mov
movzx
sub
add
mov
mov
mov
add
mov
shl
add
mov
cmp
jae
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
shr
mov
movzx
imul
mov
mov
cmp
jae
mov
mov
mov
mov
movzx
sub
sub
add
sar
mov
movzx
sub
add
add
mov
mov
mov
add
mov
shl
shl
add
mov
shl
add
mov
cmp
jae
mov
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
shr
mov
movzx
imul
mov
mov
cmp
jae
mov
mov
mov
mov
movzx
add
sub
sub
sar
mov
movzx
sub
add
add
mov
mov
cmp
jne
mov
jmp
mov
cmp
jae
mov
mov
sub
sub
mov
mov
mov
cmp
cmovl
mov
mov
mov
add
sub
sub
mov
mov
cmp
jb
mov
mov
sub
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
add
mov
cmp
jne
mov
mov
mov
mov
sub
add
add
mov
mov
mov
jmp
mov
mov
mov
mov
sub
add
mov
mov
mov
sub
add
mov
mov
movzx
sar
mov
movzx
sub
sub
add
mov
mov
jmp
mov
mov
mov
mov
sub
add
mov
mov
mov
add
sub
sub
mov
mov
movzx
sar
mov
movzx
sub
add
mov
mov
mov
add
mov
shl
add
mov
cmp
jae
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
shr
mov
movzx
imul
mov
mov
cmp
jae
mov
mov
mov
mov
mov
movzx
add
sub
sub
sar
mov
movzx
sub
sub
mov
mov
mov
mov
jmp
mov
mov
sub
sub
add
mov
mov
mov
add
sub
sub
mov
mov
movzx
sar
mov
movzx
add
sub
sub
mov
mov
mov
add
mov
shl
add
mov
cmp
jae
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
shr
mov
movzx
imul
mov
mov
cmp
jae
mov
mov
mov
mov
movzx
add
sub
sub
sar
mov
movzx
sub
add
add
mov
mov
mov
mov
jmp
mov
mov
add
sub
sub
mov
mov
mov
sub
sub
add
mov
mov
movzx
sar
mov
movzx
sub
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
cmovl
mov
mov
add
mov
mov
mov
cmp
jae
mov
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
shr
mov
movzx
imul
mov
mov
cmp
jae
mov
mov
mov
mov
movzx
add
sub
sub
sar
mov
movzx
add
add
sub
mov
mov
mov
add
mov
shl
shl
add
mov
mov
mov
jmp
mov
mov
mov
add
sub
sub
mov
mov
mov
mov
sub
add
mov
mov
movzx
sar
mov
movzx
sub
add
mov
mov
mov
add
mov
cmp
jae
mov
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
shr
mov
movzx
imul
mov
mov
cmp
jae
mov
mov
mov
mov
movzx
add
sub
sub
sar
mov
movzx
add
add
sub
mov
mov
mov
add
mov
shl
shl
add
mov
mov
mov
jmp
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
sub
add
mov
mov
movzx
sar
mov
movzx
sub
add
mov
mov
mov
add
mov
mov
mov
jmp
mov
mov
mov
mov
mov
shl
add
mov
cmp
jae
mov
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
shr
mov
movzx
imul
mov
mov
cmp
jae
mov
mov
mov
mov
mov
movzx
add
sub
sub
sar
mov
movzx
mov
sub
mov
sub
add
sub
mov
mov
mov
shl
mov
jmp
mov
mov
mov
sub
sub
add
mov
mov
mov
mov
sub
add
mov
mov
movzx
sar
mov
movzx
sub
sub
add
mov
mov
mov
mov
sub
sub
sub
add
add
mov
jmp
mov
add
add
sub
mov
cmp
jne
mov
mov
shl
mov
sub
sub
add
mov
mov
mov
sub
add
add
mov
cmp
jge
mov
add
add
sub
mov
mov
add
cmp
mov
jge
mov
mov
jmp
mov
mov
jmp
mov
shl
shl
mov
add
mov
mov
mov
mov
mov
shl
add
mov
cmp
jae
mov
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
shr
mov
movzx
imul
mov
mov
cmp
jae
mov
mov
mov
mov
movzx
mov
sub
add
sar
mov
movzx
mov
sub
mov
sub
add
sub
mov
mov
mov
shl
mov
jmp
mov
mov
add
sub
sub
mov
mov
mov
sub
sub
add
mov
mov
movzx
sar
mov
movzx
sub
sub
add
mov
mov
mov
mov
sub
add
add
sub
add
add
mov
jmp
mov
add
add
sub
mov
cmp
jne
mov
add
sub
sub
mov
cmp
jl
mov
mov
mov
sar
sub
add
mov
mov
mov
xor
mov
xor
and
mov
xor
mov
xor
xor
mov
and
mov
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
cmp
jge
mov
mov
mov
shl
mov
mov
add
mov
shl
add
mov
sub
sub
add
shl
add
add
mov
jmp
mov
sub
sub
add
mov
cmp
jae
mov
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
shr
mov
mov
shl
mov
mov
cmp
jb
mov
mov
mov
sub
sub
add
mov
mov
mov
xor
mov
xor
xor
mov
and
and
mov
and
mov
and
or
or
xor
or
xor
mov
or
and
or
mov
jmp
mov
sub
add
add
mov
cmp
jne
mov
add
mov
mov
shl
mov
mov
mov
mov
mov
mov
shl
add
mov
cmp
jae
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
shr
mov
movzx
imul
mov
mov
cmp
jae
mov
mov
mov
mov
movzx
mov
sub
add
sar
mov
movzx
mov
sub
mov
sub
add
sub
mov
mov
mov
shl
mov
jmp
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
mov
sub
add
mov
mov
movzx
sar
mov
movzx
sub
sub
add
mov
mov
mov
mov
add
add
sub
sub
sub
mov
mov
mov
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
shl
mov
mov
sub
add
add
mov
cmp
jne
jmp
mov
mov
mov
sub
add
add
mov
cmp
jne
mov
jmp
jmp
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
cmp
jbe
mov
jmp
mov
mov
mov
sub
add
cmp
jbe
mov
mov
add
add
sub
mov
jmp
mov
mov
jmp
mov
mov
sub
sub
add
mov
mov
cmp
jb
mov
mov
sub
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
sub
mov
cmp
jne
mov
mov
mov
sub
sub
mov
mov
mov
mov
add
add
sub
mov
mov
mov
mov
cmp
mov
je
mov
cmp
setb
mov
mov
test
jne
jmp
jmp
cmp
jae
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
mov
mov
add
sub
add
mov
add
sub
sub
mov
cmp
jge
mov
jmp
mov
mov
cmp
jge
mov
mov
mov
mov
mov
mov
mov
add
add
sub
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
ret
push
mov
cmp
je
push
push
push
call
test
jne
push
call
mov
call
push
call
pop
mov
pop
pop
ret
push
mov
push
and
push
lea
push
push
push
call
mov
add
test
jne
cmp
je
call
test
je
call
mov
mov
mov
pop
leave
ret
int3
int3
push
lea
sub
sbb
not
and
mov
and
cmp
jb
mov
pop
xchg
mov
mov
ret
sub
test
jmp
call
jmp
push
push
call
call
movzx
push
call
pop
mov
cmp
je
xor
jmp
mov
cmp
jne
mov
cmp
jne
xor
cmp
jbe
cmp
setne
mov
call
test
jne
push
call
pop
call
test
jne
push
call
pop
call
and
call
test
jns
push
call
pop
call
mov
call
mov
call
test
jns
push
call
pop
call
test
jns
push
call
pop
push
call
pop
test
je
push
call
pop
call
push
push
push
push
call
mov
mov
test
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
mov
cmp
jne
push
call
call
mov
mov
call
ret
push
mov
cmp
jne
call
push
call
push
call
pop
pop
pop
ret
push
mov
push
mov
cmp
ja
push
push
mov
test
jne
call
push
call
push
call
mov
pop
pop
test
je
mov
jmp
xor
inc
push
push
push
call
mov
test
jne
push
pop
cmp
je
push
call
pop
test
jne
jmp
call
mov
call
mov
mov
pop
pop
jmp
push
call
pop
call
mov
xor
pop
pop
ret
call
test
jne
mov
ret
add
ret
push
mov
push
call
mov
push
mov
call
pop
mov
call
mov
pop
pop
ret
call
test
jne
mov
ret
add
ret
push
mov
mov
xor
cmp
je
inc
cmp
jb
lea
cmp
ja
push
pop
pop
ret
lea
push
pop
cmp
sbb
and
add
pop
ret
mov
pop
ret
call
xor
test
setne
mov
mov
ret
push
mov
push
mov
test
je
push
xor
pop
div
cmp
jae
call
mov
xor
jmp
imul
test
jne
inc
xor
cmp
ja
push
push
push
call
mov
test
jne
cmp
je
push
call
pop
test
jne
mov
test
je
jmp
mov
test
je
mov
mov
pop
pop
ret
push
mov
mov
mov
cmp
jne
cmp
jne
mov
cmp
je
cmp
je
cmp
je
cmp
je
xor
pop
ret
call
int3
push
call
pop
xor
ret
push
mov
push
call
mov
test
je
mov
push
mov
mov
cmp
je
add
lea
cmp
jb
lea
cmp
jae
cmp
je
xor
test
je
mov
test
je
cmp
jne
and
xor
inc
jmp
cmp
jne
or
jmp
mov
push
mov
mov
cmp
jne
push
pop
mov
add
and
cmp
jl
cmp
mov
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
push
push
call
pop
mov
jmp
push
and
call
pop
mov
or
pop
jmp
xor
pop
pop
pop
ret
push
push
call
mov
test
je
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
push
call
pop
and
mov
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
call
push
call
pop
mov
mov
test
je
push
call
pop
cmp
je
cmp
je
cmp
jne
push
call
pop
mov
call
push
call
pop
call
ret
mov
push
call
pop
ret
mov
push
call
pop
ret
push
call
mov
test
jne
push
call
pop
mov
pop
ret
push
push
call
push
mov
call
mov
pop
test
jne
push
push
call
mov
pop
pop
test
je
push
push
call
pop
pop
test
je
push
push
call
pop
pop
call
or
mov
jmp
push
call
pop
xor
push
call
pop
mov
pop
ret
push
push
call
mov
mov
and
xor
inc
mov
mov
push
pop
mov
mov
mov
and
push
call
pop
and
push
call
mov
call
push
call
pop
mov
mov
mov
test
jne
mov
mov
push
call
pop
mov
call
call
ret
xor
inc
mov
push
call
pop
ret
push
call
pop
ret
call
call
test
jne
call
xor
ret
push
call
pop
mov
cmp
je
push
push
push
call
mov
pop
pop
test
je
push
push
call
pop
pop
test
je
push
push
call
pop
pop
call
or
mov
xor
inc
pop
ret
call
xor
pop
ret
mov
cmp
je
push
call
or
pop
jmp
push
mov
push
lea
push
push
push
call
test
je
push
push
call
test
je
push
call
leave
ret
push
mov
push
call
pop
push
call
int3
push
mov
call
push
call
pop
push
call
int3
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
cmp
je
push
call
pop
test
je
push
call
pop
call
push
push
call
pop
pop
test
jne
push
push
push
call
pop
mov
mov
jmp
mov
test
je
call
add
cmp
jb
cmp
pop
pop
je
push
call
pop
test
je
push
push
push
call
xor
pop
ret
push
mov
push
push
push
call
add
pop
ret
push
push
call
mov
push
call
push
call
push
call
push
call
push
call
push
call
add
pop
jmp
push
mov
push
mov
jmp
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
mov
push
mov
xor
jmp
test
jne
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
call
pop
ret
push
call
pop
ret
push
push
call
push
call
pop
and
cmp
je
mov
mov
mov
cmp
jne
push
mov
call
mov
mov
test
je
push
call
mov
mov
mov
mov
sub
mov
cmp
jb
push
call
cmp
je
cmp
jb
push
call
mov
push
call
mov
call
push
mov
call
mov
push
call
mov
cmp
jne
cmp
je
mov
mov
mov
mov
mov
jmp
push
push
call
pop
pop
push
push
call
pop
pop
mov
call
cmp
jne
mov
push
call
pop
push
call
cmp
je
push
call
pop
ret
call
ret
push
mov
push
push
push
call
add
pop
ret
push
call
pop
cmp
je
push
call
pop
test
jne
cmp
jne
push
call
push
call
pop
pop
ret
push
mov
mov
xor
cmp
je
inc
cmp
jb
xor
pop
ret
mov
pop
ret
push
mov
sub
mov
xor
mov
push
mov
push
push
call
mov
pop
test
je
push
push
call
pop
cmp
je
push
call
pop
test
jne
cmp
je
cmp
je
push
push
push
call
add
xor
test
jne
push
push
push
mov
call
mov
test
jne
push
push
push
call
add
test
jne
push
call
inc
pop
cmp
jbe
push
call
lea
mov
sub
push
sar
push
sub
push
push
call
add
test
jne
push
push
mov
push
call
add
test
jne
push
push
push
call
add
test
jne
push
push
push
call
add
jmp
push
call
mov
test
je
cmp
je
xor
mov
mov
mov
cmp
je
inc
cmp
jb
push
lea
push
lea
push
mov
call
pop
push
lea
push
push
call
pop
mov
pop
xor
pop
call
leave
ret
push
push
push
push
push
call
int3
push
push
call
push
call
pop
xor
mov
push
push
pop
push
call
pop
pop
mov
mov
test
jne
push
lea
push
push
call
add
or
jmp
mov
mov
add
cmp
jae
mov
or
mov
and
mov
and
mov
mov
mov
mov
add
mov
mov
jmp
lea
push
call
cmp
je
mov
test
je
mov
mov
add
mov
add
mov
mov
cmp
jl
mov
mov
xor
inc
mov
cmp
jge
push
push
call
pop
pop
mov
mov
test
jne
mov
mov
mov
mov
mov
mov
cmp
jge
mov
cmp
je
cmp
je
mov
test
je
test
jne
push
call
mov
test
je
mov
sar
mov
and
shl
add
mov
mov
mov
mov
mov
mov
push
lea
push
call
inc
mov
mov
inc
mov
mov
inc
mov
add
mov
jmp
mov
add
mov
add
cmp
jae
mov
or
mov
and
mov
mov
mov
add
mov
jmp
inc
mov
mov
jmp
mov
cmp
jge
mov
shl
add
mov
cmp
je
cmp
je
movsx
or
mov
jmp
mov
test
jne
push
pop
jmp
lea
neg
sbb
add
push
call
mov
cmp
je
test
je
push
call
test
je
mov
and
cmp
jne
movsx
or
jmp
cmp
jne
movsx
or
mov
push
lea
push
call
inc
jmp
movsx
or
mov
mov
mov
test
je
mov
mov
inc
jmp
mov
call
xor
call
ret
push
call
pop
ret
push
mov
push
push
cmp
jne
call
push
push
push
push
mov
xor
push
push
mov
call
mov
mov
test
je
cmp
jne
mov
lea
push
lea
push
push
push
push
call
mov
add
cmp
jae
mov
cmp
jae
lea
cmp
jb
push
call
mov
pop
test
je
lea
push
lea
push
lea
push
push
push
call
mov
add
dec
mov
mov
xor
jmp
or
pop
pop
pop
leave
ret
push
mov
mov
push
mov
push
and
mov
mov
mov
push
mov
test
je
mov
add
mov
xor
mov
cmp
jne
xor
test
sete
inc
mov
mov
mov
jmp
inc
test
je
mov
mov
inc
mov
mov
movzx
push
inc
call
pop
test
je
inc
test
je
mov
mov
inc
inc
mov
test
je
mov
test
jne
cmp
je
cmp
jne
test
je
mov
jmp
dec
and
cmp
je
mov
cmp
je
cmp
jne
inc
jmp
cmp
je
mov
test
je
mov
add
mov
mov
inc
xor
inc
xor
jmp
inc
inc
cmp
je
cmp
jne
test
jne
cmp
je
lea
cmp
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
jmp
dec
test
je
mov
inc
inc
test
jne
mov
test
je
cmp
jne
cmp
je
cmp
je
test
je
movsx
push
call
pop
test
je
test
je
mov
mov
inc
inc
inc
mov
mov
inc
jmp
test
je
inc
inc
inc
inc
jmp
test
je
mov
inc
inc
jmp
mov
pop
pop
pop
test
je
and
mov
inc
pop
ret
cmp
jne
call
push
mov
push
xor
test
jne
or
jmp
cmp
je
inc
push
call
inc
pop
add
mov
test
jne
lea
push
push
call
mov
pop
pop
mov
test
je
mov
push
cmp
je
push
call
cmp
pop
lea
je
push
push
call
pop
pop
mov
test
je
push
push
push
call
add
test
jne
add
add
cmp
jne
mov
push
call
and
and
mov
xor
pop
pop
pop
pop
ret
push
call
and
or
jmp
xor
push
push
push
push
push
call
int3
push
mov
mov
mov
pop
ret
push
mov
mov
test
js
cmp
jle
cmp
jne
mov
jmp
mov
mov
mov
pop
ret
call
mov
call
or
pop
ret
push
mov
sub
mov
and
and
push
push
mov
mov
cmp
je
test
je
not
mov
jmp
lea
push
call
mov
xor
mov
call
xor
call
xor
lea
push
call
mov
xor
lea
xor
xor
cmp
jne
mov
jmp
test
jne
mov
or
shl
or
mov
not
mov
pop
pop
leave
ret
push
push
mov
mov
jmp
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
push
mov
mov
jmp
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
mov
push
push
call
mov
xor
test
je
push
mov
cmp
je
add
cmp
jne
add
cmp
jne
push
push
push
push
sub
push
sar
inc
push
push
push
push
call
mov
test
je
push
call
mov
pop
test
je
xor
push
push
push
push
push
push
push
push
call
test
jne
push
call
pop
xor
push
call
mov
jmp
push
call
xor
pop
pop
pop
leave
ret
push
mov
mov
xor
je
push
call
pop
ret
pop
jmp
push
mov
mov
xor
push
je
call
pop
ret
call
pop
ret
push
mov
mov
xor
push
je
call
pop
ret
call
pop
ret
push
mov
mov
xor
push
push
je
call
pop
ret
call
pop
ret
push
mov
sub
lea
push
call
test
je
movzx
leave
ret
push
pop
leave
ret
push
mov
push
push
mov
test
jns
mov
xor
xor
mov
je
push
lea
push
call
cmp
jne
inc
mov
xor
test
setg
pop
leave
ret
int3
int3
int3
push
push
push
call
mov
mov
push
push
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
mov
push
push
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
pop
mov
pop
ret
push
mov
push
call
pop
ret
push
mov
push
call
push
call
pop
ret
push
mov
push
call
push
call
pop
ret
push
push
xor
cmp
jne
call
mov
test
jne
mov
mov
cmp
ja
test
je
test
je
cmp
jne
xor
test
sete
mov
movzx
push
call
pop
test
je
inc
inc
jmp
cmp
ja
inc
mov
test
jne
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
lea
sub
push
push
push
mov
xor
xor
push
mov
push
mov
mov
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
pop
mov
pop
push
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
push
mov
xor
mov
mov
mov
lea
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
test
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
lea
mov
mov
lea
mov
test
je
mov
call
mov
mov
test
js
jle
mov
cmp
jne
cmp
je
push
call
add
test
je
push
push
call
add
mov
mov
call
mov
mov
cmp
je
push
push
mov
call
mov
mov
mov
cmp
je
jmp
mov
mov
mov
cmp
jne
test
je
jmp
mov
jmp
cmp
je
push
push
mov
mov
call
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
pop
pop
pop
mov
pop
ret
mov
add
xor
call
mov
mov
add
xor
call
mov
mov
mov
call
int3
push
mov
push
call
test
je
push
call
pop
test
je
xor
inc
pop
ret
xor
pop
ret
push
mov
mov
mov
pop
ret
push
mov
sub
mov
xor
mov
cmp
push
je
push
call
pop
and
push
lea
push
push
call
lea
mov
lea
add
mov
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
pop
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
call
pop
test
jne
test
jne
cmp
je
push
call
pop
mov
xor
pop
call
leave
ret
push
mov
mov
mov
pop
ret
push
mov
push
call
test
je
pop
jmp
push
push
push
push
push
call
int3
xor
push
push
push
push
push
call
add
ret
push
call
test
je
push
pop
int
push
push
mov
push
push
call
push
call
add
pop
ret
push
push
call
call
mov
test
je
and
call
jmp
xor
inc
ret
mov
mov
call
int3
push
call
mov
ret
push
mov
push
mov
cmp
jne
push
call
pop
test
jne
push
call
pop
push
call
pop
pop
ret
push
push
mov
mov
push
mov
test
je
cmp
je
push
call
push
call
and
pop
add
cmp
jl
pop
cmp
je
cmp
jne
push
call
add
cmp
jl
pop
pop
ret
push
push
call
cmp
jne
call
push
call
push
call
pop
pop
mov
cmp
jne
push
call
pop
mov
test
jne
call
mov
xor
jmp
push
call
pop
and
cmp
jne
push
push
call
mov
jmp
push
call
pop
mov
call
xor
inc
call
ret
push
call
pop
ret
push
push
mov
mov
cmp
jne
mov
push
push
add
call
add
cmp
jl
xor
pop
inc
pop
ret
push
mov
mov
push
call
pop
ret
push
mov
push
push
xor
push
push
push
call
mov
add
test
jne
cmp
jbe
push
call
lea
mov
cmp
jbe
or
cmp
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
xor
push
call
mov
pop
test
jne
test
je
push
call
mov
lea
mov
cmp
jbe
or
cmp
jne
pop
pop
mov
pop
pop
ret
push
mov
push
push
xor
push
push
call
mov
pop
pop
test
jne
cmp
je
cmp
jbe
push
call
lea
mov
cmp
jbe
or
cmp
jne
mov
pop
pop
pop
ret
push
mov
push
push
mov
push
mov
push
call
cmp
je
push
call
mov
test
je
push
call
cmp
je
push
call
mov
test
je
push
call
push
pop
lea
mov
cmp
je
cmp
je
push
call
mov
cmp
je
cmp
je
push
call
mov
add
dec
mov
jne
mov
add
push
call
pop
pop
pop
pop
ret
push
mov
push
push
mov
xor
mov
push
test
je
cmp
je
mov
test
je
cmp
jne
mov
test
je
cmp
jne
push
call
push
call
pop
pop
mov
test
je
cmp
jne
push
call
push
call
pop
pop
push
call
push
call
pop
pop
mov
test
je
cmp
jne
mov
sub
push
call
mov
mov
sub
push
call
mov
sub
push
call
push
call
add
mov
cmp
je
cmp
jne
push
call
push
call
pop
pop
push
pop
lea
lea
mov
cmp
je
mov
test
je
cmp
jne
push
call
push
call
pop
pop
mov
cmp
je
mov
test
je
cmp
jne
push
call
pop
mov
add
add
dec
mov
jne
push
call
pop
pop
pop
pop
pop
ret
push
mov
push
mov
test
je
push
push
mov
push
call
cmp
je
push
call
mov
test
je
push
call
cmp
je
push
call
mov
test
je
push
call
push
pop
lea
mov
cmp
je
cmp
je
push
call
mov
cmp
je
cmp
je
push
call
mov
add
dec
mov
jne
mov
add
push
call
pop
pop
mov
pop
pop
ret
push
push
call
call
mov
mov
test
je
cmp
je
call
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
and
push
lea
push
call
pop
pop
mov
mov
mov
call
jmp
mov
push
call
pop
ret
push
mov
push
mov
test
je
mov
test
je
push
mov
cmp
je
push
mov
call
pop
test
je
push
call
cmp
pop
jne
cmp
je
push
call
pop
mov
pop
jmp
xor
pop
pop
ret
cmp
jne
push
call
pop
mov
xor
ret
push
mov
push
mov
mov
mov
test
jne
call
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
test
jne
call
mov
mov
cmp
je
mov
mov
test
jne
call
mov
mov
mov
test
jne
or
mov
mov
jmp
mov
mov
mov
mov
mov
pop
pop
ret
push
mov
mov
sub
je
sub
je
sub
je
dec
je
xor
pop
ret
mov
pop
ret
mov
pop
ret
mov
pop
ret
mov
pop
ret
push
mov
sub
lea
push
call
mov
and
cmp
jne
mov
call
jmp
cmp
jne
mov
call
jmp
cmp
jne
mov
mov
mov
cmp
je
mov
and
leave
ret
push
mov
push
mov
push
push
push
xor
lea
push
push
call
xor
movzx
mov
mov
mov
mov
shl
or
lea
stos
stos
stos
mov
add
sub
mov
mov
mov
inc
dec
jne
lea
mov
mov
mov
inc
dec
jne
pop
pop
pop
pop
ret
push
mov
sub
mov
xor
mov
push
push
mov
push
lea
push
push
call
xor
mov
test
je
mov
mov
inc
cmp
jb
mov
mov
lea
jmp
movzx
movzx
jmp
cmp
jae
mov
inc
cmp
jbe
add
mov
test
jne
push
push
lea
push
push
lea
push
push
push
call
push
push
lea
push
push
push
lea
push
push
push
push
call
add
lea
push
push
push
push
push
lea
push
push
push
push
call
add
mov
movzx
test
je
or
mov
jmp
test
je
or
mov
mov
jmp
mov
inc
cmp
jb
jmp
push
lea
pop
sub
mov
mov
add
add
mov
add
cmp
ja
or
lea
jmp
cmp
ja
or
lea
mov
jmp
mov
mov
inc
lea
cmp
jb
mov
pop
pop
xor
pop
call
leave
ret
push
push
call
call
mov
mov
test
je
cmp
je
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
and
mov
mov
cmp
je
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
mov
mov
mov
push
call
mov
call
jmp
mov
push
call
pop
ret
push
push
call
or
call
mov
mov
call
mov
push
call
pop
mov
cmp
je
push
call
pop
mov
test
je
mov
mov
mov
mov
rep
xor
mov
push
push
call
pop
pop
mov
mov
test
jne
mov
push
call
test
mov
jne
mov
cmp
je
push
call
pop
mov
mov
push
call
mov
test
jne
test
jne
push
call
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jge
mov
mov
inc
jmp
mov
mov
cmp
jge
mov
mov
inc
jmp
mov
cmp
jge
mov
mov
inc
jmp
push
call
test
jne
mov
cmp
je
push
call
pop
mov
push
call
mov
call
jmp
mov
push
call
pop
ret
jmp
cmp
jne
cmp
je
push
call
pop
call
mov
jmp
xor
mov
call
ret
push
mov
sub
mov
xor
mov
push
push
push
mov
call
mov
pop
mov
test
jne
push
call
pop
xor
jmp
push
xor
mov
mov
mov
cmp
je
inc
add
mov
cmp
jb
cmp
je
cmp
je
movzx
push
call
test
je
lea
push
push
call
test
je
push
lea
push
push
call
mov
xor
inc
add
mov
cmp
jbe
cmp
lea
je
mov
test
je
movzx
movzx
jmp
or
inc
cmp
jbe
add
cmp
jne
lea
mov
or
inc
dec
jne
push
call
add
mov
mov
jmp
mov
xor
movzx
mov
shl
or
lea
stos
stos
stos
jmp
cmp
je
push
call
jmp
or
jmp
push
lea
push
push
call
mov
add
imul
lea
mov
cmp
mov
je
mov
test
je
movzx
movzx
jmp
cmp
jae
mov
or
movzx
inc
cmp
jbe
add
cmp
jne
mov
inc
add
mov
cmp
jb
mov
push
mov
mov
call
add
mov
push
lea
lea
pop
mov
mov
lea
lea
dec
jne
push
call
pop
xor
pop
mov
pop
xor
pop
call
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
add
push
movzx
movzx
add
xor
add
push
test
je
mov
mov
cmp
jb
mov
add
cmp
jb
inc
add
cmp
jb
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
mov
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
mov
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
xor
cmp
sete
mov
ret
mov
mov
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
cmp
je
xor
pop
ret
mov
add
xor
cmp
jne
mov
cmp
sete
pop
ret
push
push
push
call
pop
pop
mov
push
call
mov
mov
test
jne
push
pop
pop
ret
and
xor
pop
ret
push
push
call
call
and
push
call
pop
mov
mov
mov
call
mov
call
ret
mov
call
ret
push
mov
push
push
push
mov
push
push
call
push
mov
call
mov
mov
cmp
jb
mov
sub
lea
cmp
jb
push
call
mov
lea
pop
cmp
jae
mov
cmp
jae
mov
mov
add
cmp
jb
push
push
call
pop
pop
test
jne
lea
cmp
jb
push
push
call
pop
pop
test
je
sar
push
lea
call
mov
push
call
lea
push
mov
call
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
push
call
neg
sbb
neg
pop
dec
pop
ret
push
xor
push
call
mov
add
cmp
jb
pop
ret
push
mov
mov
mov
pop
ret
push
mov
mov
mov
pop
ret
push
call
ret
push
mov
mov
mov
mov
mov
mov
pop
ret
push
push
call
xor
mov
xor
mov
mov
cmp
jg
je
mov
push
pop
sub
je
sub
je
sub
je
sub
jne
call
mov
mov
test
jne
or
jmp
mov
mov
jmp
push
push
call
pop
pop
add
mov
mov
jmp
mov
sub
je
sub
je
dec
je
call
mov
call
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
xor
inc
mov
push
call
mov
cmp
je
test
jne
push
call
test
je
push
call
pop
and
cmp
je
cmp
je
cmp
jne
mov
mov
and
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
mov
add
cmp
jge
mov
imul
mov
and
inc
mov
mov
jmp
push
call
mov
mov
mov
call
cmp
jne
push
push
call
pop
jmp
mov
mov
mov
test
je
push
call
pop
ret
push
call
pop
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
xor
call
ret
push
mov
mov
mov
push
mov
cmp
je
mov
imul
add
add
cmp
jb
imul
add
cmp
jae
cmp
jne
mov
jmp
xor
pop
pop
ret
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
mov
test
je
mov
test
je
mov
test
jne
xor
mov
call
push
pop
mov
call
mov
pop
pop
pop
ret
mov
cmp
je
add
dec
jne
test
je
sub
movzx
mov
lea
test
je
dec
jne
xor
test
jne
mov
call
push
jmp
push
mov
push
mov
test
je
mov
test
je
mov
test
jne
xor
mov
call
push
pop
mov
call
mov
pop
pop
ret
push
mov
sub
movzx
mov
lea
test
je
dec
jne
xor
pop
test
jne
mov
call
push
jmp
push
mov
mov
mov
add
test
jne
sub
sar
dec
pop
ret
push
mov
mov
mov
push
test
jne
test
jne
cmp
jne
xor
jmp
test
je
mov
test
je
test
jne
xor
mov
jmp
mov
test
jne
xor
mov
call
push
pop
mov
call
mov
pop
pop
ret
push
push
mov
mov
cmp
jne
sub
movzx
mov
lea
test
je
dec
jne
jmp
sub
movzx
mov
lea
test
je
dec
je
dec
jne
test
jne
xor
mov
test
pop
pop
jne
cmp
jne
mov
xor
push
mov
pop
jmp
xor
mov
call
push
jmp
push
mov
sub
mov
xor
mov
mov
push
mov
push
push
mov
mov
xor
push
mov
call
mov
mov
call
mov
cmp
jne
push
push
push
call
mov
test
jne
call
cmp
jne
push
call
mov
test
je
push
push
call
test
je
push
call
push
push
mov
call
push
call
push
push
mov
call
push
call
push
push
mov
call
push
call
mov
test
je
push
push
call
push
call
mov
mov
call
test
je
mov
test
je
push
call
cmp
je
push
pop
jmp
cmp
je
push
call
push
jmp
mov
mov
cmp
je
cmp
je
push
call
push
mov
call
mov
mov
test
je
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
test
jne
mov
or
jmp
mov
cmp
je
push
call
test
je
call
mov
test
je
mov
cmp
je
push
call
test
je
push
call
mov
mov
push
call
test
je
push
push
push
push
call
jmp
xor
mov
pop
pop
xor
pop
call
leave
ret
cmp
jne
repz
jmp
int3
int3
int3
int3
int3
push
push
push
mov
mov
mov
push
push
push
push
push
push
push
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmp
jne
push
mov
call
mov
mov
call
jmp
pop
add
pop
pop
pop
ret
mov
test
mov
je
mov
mov
xor
call
push
mov
push
push
push
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
push
push
push
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
push
call
add
pop
ret
mov
push
push
pop
test
jne
mov
jmp
cmp
jge
mov
mov
push
push
call
pop
pop
mov
test
jne
push
push
mov
call
pop
pop
mov
test
jne
push
pop
pop
ret
xor
mov
mov
add
lea
cmp
jge
mov
jmp
xor
pop
ret
call
cmp
je
call
push
call
and
pop
ret
push
mov
push
mov
mov
cmp
jb
cmp
ja
mov
sub
sar
add
push
call
or
pop
jmp
lea
push
call
pop
pop
ret
push
mov
mov
cmp
jge
add
push
call
mov
pop
or
pop
ret
mov
add
push
call
pop
ret
push
mov
mov
mov
cmp
jb
cmp
ja
and
sub
sar
add
push
call
pop
pop
ret
add
push
call
pop
ret
push
mov
mov
mov
cmp
jge
and
lea
push
call
pop
pop
ret
add
push
call
pop
ret
push
mov
sub
push
push
lea
call
movzx
mov
mov
test
jne
xor
cmp
je
mov
mov
movzx
and
jmp
mov
test
je
xor
inc
cmp
pop
je
mov
and
mov
leave
ret
push
mov
push
push
push
push
call
add
pop
ret
push
mov
push
mov
test
je
mov
test
je
mov
test
jne
mov
call
push
pop
mov
call
mov
pop
pop
ret
push
mov
sub
mov
mov
inc
test
je
dec
jne
pop
test
jne
mov
call
push
jmp
xor
jmp
and
ret
int3
int3
int3
int3
int3
mov
mov
test
je
movzx
bt
jae
mov
push
mov
rep
jmp
mov
cmp
jl
bt
jb
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
call
test
je
push
call
pop
test
je
push
call
test
je
push
pop
int
push
push
push
call
add
push
call
int3
push
mov
cmp
jne
push
call
pop
pop
ret
push
mov
test
jne
push
call
pop
xor
jmp
push
jmp
test
jne
inc
push
push
push
push
call
mov
test
jne
cmp
je
push
call
pop
test
je
cmp
jbe
push
call
pop
call
mov
xor
pop
pop
pop
ret
call
mov
call
push
call
pop
mov
jmp
call
mov
call
push
call
pop
mov
mov
jmp
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
push
mov
push
mov
test
je
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
pop
pop
ret
push
mov
push
push
mov
xor
mov
push
push
mov
push
test
jle
mov
mov
dec
cmp
je
inc
test
jne
or
mov
sub
dec
cmp
lea
jl
mov
mov
xor
test
jne
mov
mov
mov
mov
mov
xor
cmp
push
setne
push
push
push
lea
push
push
call
mov
mov
test
jne
xor
jmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
mov
call
mov
test
je
mov
jmp
push
call
mov
pop
test
je
mov
add
mov
jmp
xor
test
je
push
push
push
push
push
push
call
test
je
mov
push
push
push
push
push
push
call
mov
add
test
je
mov
test
je
mov
test
je
cmp
jg
push
push
push
push
push
push
call
add
jmp
test
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
test
je
mov
jmp
push
call
mov
pop
test
je
mov
add
jmp
xor
test
je
push
push
push
push
push
push
call
add
test
je
xor
push
push
cmp
jne
push
push
jmp
push
push
push
push
push
push
call
mov
push
call
pop
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
push
mov
mov
test
je
sub
cmp
jne
push
call
pop
pop
ret
push
mov
push
mov
xor
mov
mov
push
push
push
xor
test
jne
mov
mov
mov
mov
mov
xor
cmp
push
push
push
setne
push
lea
push
push
call
mov
test
jne
xor
jmp
jle
cmp
ja
lea
cmp
ja
call
mov
test
je
mov
jmp
push
call
mov
pop
test
je
mov
add
jmp
mov
test
je
lea
push
push
push
call
add
push
push
push
push
push
push
call
test
je
push
push
push
push
call
mov
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
push
mov
cmp
jne
call
mov
call
or
pop
ret
push
push
push
call
pop
ret
push
call
pop
ret
push
mov
push
push
push
xor
mov
lea
cdq
sub
mov
sar
push
push
push
call
add
test
je
jns
lea
jmp
lea
cmp
jle
or
jmp
mov
pop
pop
pop
pop
ret
push
mov
cmp
je
push
call
pop
test
js
cmp
jae
mov
pop
ret
xor
pop
ret
push
mov
mov
xor
je
xor
push
push
push
push
push
push
push
push
push
call
pop
ret
push
push
push
push
push
push
call
pop
push
call
pop
ret
push
mov
push
mov
xor
test
je
mov
push
push
mov
push
pop
push
pop
sub
mov
jmp
push
pop
movzx
cmp
jb
cmp
ja
add
movzx
jmp
mov
movzx
cmp
jb
cmp
ja
add
movzx
add
dec
je
test
je
cmp
je
movzx
movzx
pop
sub
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
bt
jae
rep
jmp
cmp
jb
mov
xor
test
jne
bt
jb
bt
jae
test
jne
test
jne
bt
jae
mov
sub
lea
mov
lea
bt
jae
movq
sub
lea
movq
lea
test
je
bt
jae
movdqa
lea
movdqa
sub
movdqa
movdqa
lea
cmp
movdqa
palignr
movdqa
movdqa
palignr
movdqa
movdqa
palignr
movdqa
lea
jge
lea
jmp
movdqa
lea
lea
movdqa
sub
movdqa
movdqa
lea
cmp
movdqa
palignr
movdqa
movdqa
palignr
movdqa
movdqa
palignr
movdqa
lea
jge
lea
jmp
movdqa
lea
mov
movdqa
sub
movdqa
movdqa
lea
cmp
movdqa
palignr
movdqa
movdqa
palignr
movdqa
movdqa
palignr
movdqa
lea
jge
lea
cmp
jl
movdqu
sub
lea
movdqa
lea
jmp
bt
jae
mov
sub
lea
mov
lea
bt
jae
movq
sub
lea
movq
lea
mov
jmp
test
jne
shr
and
cmp
jb
rep
jmp
nop
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
sub
inc
add
inc
add
add
ror
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
call
in
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sbb
add
pop
inc
add
inc
add
pop
ret
nop
mov
mov
mov
pop
pop
ret
nop
mov
mov
mov
mov
mov
pop
pop
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
pop
inc
add
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
pop
pop
inc
add
inc
add
inc
add
inc
add
inc
add
pop
inc
add
inc
mov
inc
(bad)
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
inc
add
inc
add
pop
inc
add
pop
ret
nop
mov
mov
mov
pop
pop
ret
lea
mov
mov
mov
mov
mov
pop
pop
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
lea
push
mov
and
test
jne
mov
and
shr
je
lea
nop
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
lea
dec
jne
test
je
mov
shr
test
je
lea
movdqa
movdqa
lea
lea
dec
jne
and
je
mov
shr
je
mov
mov
lea
lea
dec
jne
mov
and
je
mov
mov
inc
inc
dec
jne
lea
pop
pop
pop
ret
lea
jmp
int3
int3
int3
mov
sub
sub
push
mov
mov
and
je
mov
mov
inc
inc
dec
jne
shr
je
mov
mov
lea
lea
dec
jne
pop
jmp
push
mov
mov
test
jne
call
mov
call
or
pop
ret
mov
pop
ret
push
mov
mov
cmp
jne
call
mov
jmp
test
js
cmp
jae
mov
sar
and
mov
shl
movsx
and
pop
ret
call
mov
call
xor
pop
ret
push
mov
push
mov
test
jne
push
call
pop
jmp
push
call
pop
test
je
or
jmp
test
je
push
call
push
call
pop
neg
pop
sbb
jmp
xor
pop
pop
ret
push
mov
push
push
mov
xor
mov
and
cmp
jne
test
je
push
mov
sub
test
jle
push
push
push
call
pop
push
call
add
cmp
jne
mov
test
jns
and
mov
jmp
or
or
pop
mov
and
mov
pop
mov
pop
pop
ret
push
call
pop
ret
push
push
call
xor
mov
and
push
call
pop
and
xor
mov
mov
cmp
jge
mov
mov
test
je
test
je
push
push
call
pop
pop
mov
mov
mov
test
je
cmp
jne
push
call
pop
cmp
je
inc
mov
jmp
test
jne
test
je
push
call
pop
cmp
jne
or
and
call
inc
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
call
cmp
mov
je
mov
call
ret
mov
mov
push
call
pop
ret
push
mov
call
push
mov
call
push
call
cmp
pop
pop
jne
push
call
pop
push
call
pop
pop
ret
push
mov
sub
push
call
test
je
push
pop
int
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
pop
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
push
pop
imul
mov
push
pop
imul
mov
mov
push
pop
shl
mov
mov
push
call
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
push
push
push
push
call
pop
pop
pop
pop
mov
pop
ret
mov
test
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
push
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmp
je
cmp
jbe
lea
mov
mov
mov
cmp
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
push
push
call
xor
mov
push
call
pop
and
push
pop
mov
cmp
jge
mov
mov
test
je
test
je
push
call
pop
cmp
je
inc
mov
cmp
jl
mov
mov
add
push
call
mov
push
call
pop
mov
and
inc
jmp
mov
call
mov
call
ret
mov
push
call
pop
ret
test
jne
pxor
jmp
movd
punpcklbw
punpcklwd
pshufd
push
push
mov
and
test
jne
mov
and
shr
je
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
dec
jne
test
je
mov
shr
je
jmp
lea
movdqa
lea
dec
jne
and
je
mov
shr
je
movd
lea
dec
jne
and
je
mov
inc
dec
jne
pop
pop
ret
neg
add
sub
push
mov
and
je
mov
inc
dec
jne
shr
je
movd
lea
dec
jne
pop
jmp
push
mov
and
sub
push
xor
inc
or
push
call
test
je
xor
mov
mov
cpuid
push
mov
push
lea
or
mov
mov
mov
mov
test
mov
je
or
mov
mov
test
je
or
mov
mov
push
xor
pop
cpuid
lea
mov
mov
mov
mov
test
mov
je
or
mov
xor
xor
cpuid
lea
mov
mov
mov
mov
cmp
jne
cmp
jne
cmp
jne
xor
inc
xor
cpuid
mov
mov
mov
mov
mov
and
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
or
mov
pop
pop
xor
pop
leave
ret
push
push
call
mov
cmp
je
push
call
pop
and
push
push
call
pop
pop
mov
mov
call
call
ret
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
lea
sub
and
add
sbb
or
pop
jmp
push
lea
sub
and
add
sbb
or
pop
jmp
push
push
call
mov
cmp
jne
call
mov
jmp
test
js
cmp
jae
mov
sar
mov
mov
and
shl
mov
movsx
and
je
push
call
pop
xor
mov
mov
mov
test
je
push
call
pop
push
call
test
jne
call
mov
mov
test
je
call
mov
call
mov
or
mov
mov
call
mov
jmp
mov
mov
push
call
pop
ret
call
mov
call
or
call
ret
push
push
call
mov
cmp
jne
call
and
call
mov
jmp
test
js
cmp
jae
mov
sar
mov
and
shl
mov
movsx
and
je
push
call
pop
and
mov
test
je
push
push
push
call
add
mov
jmp
call
mov
call
and
or
mov
mov
call
mov
jmp
mov
mov
push
call
pop
ret
call
and
call
mov
call
or
call
ret
push
mov
mov
call
mov
xor
mov
mov
mov
xor
push
mov
mov
mov
mov
mov
cmp
jne
xor
jmp
test
jne
call
and
call
mov
call
or
jmp
push
push
mov
sar
mov
and
shl
mov
mov
mov
mov
add
sar
cmp
je
cmp
jne
mov
not
test
jne
call
and
call
mov
call
jmp
mov
test
je
push
push
push
push
call
add
push
call
pop
test
je
mov
mov
test
je
call
mov
xor
cmp
lea
push
mov
sete
mov
push
mov
call
test
je
cmp
je
test
je
call
mov
and
mov
mov
mov
cmp
jbe
xor
mov
mov
test
jne
mov
xor
cmp
sete
mov
mov
mov
cmp
je
mov
mov
push
lea
mov
and
push
jmp
movsx
push
call
pop
test
je
mov
mov
sub
add
cmp
jbe
push
push
lea
push
call
add
cmp
je
mov
inc
inc
jmp
push
push
lea
push
call
add
cmp
je
mov
xor
push
push
inc
inc
push
mov
lea
push
push
lea
push
push
push
call
mov
test
je
push
lea
push
push
lea
push
mov
mov
push
call
test
je
mov
mov
add
cmp
jl
cmp
je
push
lea
push
push
lea
push
mov
mov
mov
push
call
test
je
cmp
jl
inc
inc
jmp
cmp
je
cmp
jne
movzx
xor
cmp
mov
mov
sete
add
add
mov
mov
mov
cmp
je
cmp
jne
push
call
pop
cmp
jne
add
cmp
je
push
pop
push
mov
call
pop
cmp
jne
inc
inc
mov
mov
cmp
jb
jmp
mov
mov
mov
inc
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
test
je
mov
xor
mov
test
jne
mov
mov
cmp
jbe
xor
sub
mov
lea
mov
cmp
jae
mov
inc
inc
mov
cmp
mov
mov
jne
inc
mov
inc
inc
mov
mov
mov
inc
inc
mov
cmp
jb
mov
lea
sub
push
lea
push
push
lea
push
mov
mov
push
call
test
je
add
mov
cmp
jl
mov
sub
cmp
mov
jb
jmp
mov
cmp
jne
mov
cmp
jbe
mov
and
mov
mov
sub
mov
lea
cmp
jae
movzx
add
add
mov
cmp
jne
push
pop
mov
mov
add
add
add
mov
add
add
cmp
jb
mov
lea
sub
push
lea
push
push
lea
push
mov
mov
mov
push
call
mov
mov
test
je
add
mov
mov
cmp
jl
mov
mov
sub
cmp
jb
jmp
mov
mov
test
je
mov
and
mov
sub
mov
lea
cmp
jae
movzx
add
add
mov
cmp
jne
push
pop
mov
mov
add
add
mov
add
add
cmp
jb
xor
push
push
push
lea
push
lea
sub
cdq
sub
sar
push
mov
push
push
push
call
mov
mov
mov
test
je
xor
mov
push
sub
lea
push
push
lea
add
mov
push
mov
mov
push
call
test
je
mov
add
mov
mov
cmp
jg
jmp
call
mov
mov
mov
mov
cmp
jg
mov
mov
mov
sub
mov
cmp
jb
jmp
push
lea
push
push
push
push
call
test
je
mov
xor
jmp
call
mov
mov
test
jne
test
je
push
pop
cmp
jne
call
mov
call
mov
jmp
push
call
pop
jmp
mov
mov
mov
test
je
cmp
jne
xor
jmp
call
mov
call
and
or
jmp
sub
mov
pop
pop
mov
xor
pop
call
leave
ret
push
mov
push
mov
push
or
test
jne
call
mov
call
or
jmp
test
je
push
call
push
mov
call
push
call
push
call
add
test
jns
or
jmp
cmp
je
push
call
and
pop
and
mov
pop
pop
pop
ret
push
push
call
or
mov
xor
mov
test
setne
test
jne
call
mov
call
mov
call
ret
test
je
and
jmp
push
call
pop
and
push
call
pop
mov
mov
mov
call
jmp
mov
mov
push
call
pop
ret
push
push
call
mov
mov
sar
mov
and
shl
add
cmp
jne
push
call
pop
and
cmp
jne
push
lea
push
call
inc
mov
call
mov
sar
and
shl
mov
add
add
push
call
xor
inc
call
ret
mov
push
call
pop
ret
push
mov
mov
push
push
test
js
cmp
jae
mov
sar
mov
mov
and
shl
test
je
cmp
je
cmp
jne
xor
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
mov
or
xor
jmp
call
mov
call
and
or
pop
pop
pop
ret
push
mov
mov
cmp
jne
call
and
call
mov
jmp
test
js
cmp
jae
mov
sar
and
mov
shl
test
je
mov
pop
ret
call
and
call
mov
call
or
pop
ret
push
mov
mov
mov
and
sar
shl
mov
add
add
push
call
pop
ret
push
mov
sub
push
lea
call
mov
movzx
mov
movzx
and
cmp
je
mov
and
leave
ret
push
mov
push
push
call
pop
pop
pop
ret
push
mov
push
push
push
mov
push
push
call
or
pop
cmp
jne
call
mov
mov
mov
jmp
push
lea
push
push
push
push
call
test
jne
call
push
call
pop
jmp
mov
sar
and
mov
shl
and
mov
mov
pop
pop
leave
ret
push
mov
sub
push
push
mov
test
je
mov
test
je
cmp
jne
mov
test
je
xor
mov
xor
pop
pop
leave
ret
push
push
lea
call
mov
cmp
jne
mov
test
je
movzx
mov
xor
inc
jmp
lea
push
movzx
push
call
pop
pop
test
je
mov
cmp
jle
cmp
jl
xor
cmp
setne
push
push
push
push
push
push
call
mov
test
jne
cmp
jb
cmp
je
mov
jmp
xor
cmp
setne
xor
inc
push
push
mov
push
push
push
push
call
test
jne
call
or
mov
cmp
je
mov
and
mov
pop
jmp
push
mov
push
push
push
push
call
add
pop
ret
push
mov
push
mov
cmp
jne
call
mov
cmp
jne
mov
leave
ret
push
lea
push
push
lea
push
push
call
test
je
mov
leave
ret
push
push
call
mov
cmp
jne
call
and
call
mov
jmp
test
js
cmp
jae
mov
sar
mov
and
shl
mov
movsx
and
je
push
call
pop
and
mov
test
je
push
call
pop
mov
jmp
call
mov
or
mov
mov
call
mov
jmp
mov
mov
push
call
pop
ret
call
and
call
mov
call
or
call
ret
push
mov
push
push
mov
push
call
pop
cmp
je
mov
cmp
jne
test
jne
cmp
jne
test
je
push
call
push
mov
call
pop
pop
cmp
je
push
call
pop
push
call
test
jne
call
mov
jmp
xor
push
call
pop
mov
sar
and
mov
shl
mov
test
je
push
call
pop
or
jmp
xor
pop
pop
pop
ret
push
mov
push
mov
test
je
test
je
push
call
and
xor
pop
mov
mov
mov
pop
pop
ret
mov
cmp
je
cmp
je
push
call
ret
xor
push
push
push
push
push
push
push
call
mov
ret
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mul
mov
mov
mul
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mul
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mul
add
mov
mul
add
pop
ret
jmp
jmp
