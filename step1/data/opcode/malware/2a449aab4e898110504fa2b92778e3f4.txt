(bad)
sti
idiv
push
mov
push
mov
lea
push
mov
adc
arpl
mov
mov
mov
inc
mov
pop
ret
int3
add
inc
add
(bad)
sub
ret
aas
sub
fild
sub
or
push
push
mov
lods
jle
in
ficomp
cmp
mov
mov
test
adc
xlat
jl
and
push
or
pop
mov
ins
cmp
push
xchg
jo
das
add
mov
or
push
pop
loope
push
pusha
leave
or
aas
pop
pop
push
ret
add
adc
lahf
std
ds
inc
cmp
je
mov
test
fistp
inc
sub
jmp
(bad)
or
add
clc
and
xor
pop
setne
mov
xor
aas
adc
sar
sete
aas
push
push
fild
mov
clc
or
lds
hlt
mov
and
mov
loopne
xor
cmp
dec
add
int
sahf
fwait
or
push
ins
inc
cmp
js
fldcw
pop
xlat
mov
mov
jnp
aad
xchg
sbb
pop
add
retf
call
add
pop
sub
pop
pop
inc
fistp
inc
rcr
add
or
nop
mov
cmp
inc
dec
add
mov
loop
add
bnd
sahf
test
push
and
lods
leave
add
sbb
xor
fistp
or
or
and
pop
mov
das
inc
adc
and
inc
sbb
jno
pop
mov
mov
and
mov
test
inc
and
aas
and
(bad)
push
mov
test
je
push
fmul
out
pop
jne
leave
rcr
popa
push
dec
lods
add
mov
fwait
pop
xlat
cmp
dec
mov
inc
mov
aas
ss
jmp
test
mov
fcomp
cmp
mov
sbb
xor
cmp
out
mov
xor
jae
jne
pop
and
push
sbb
inc
aam
jnp
or
mov
cmp
lea
cmp
sub
add
pop
mov
pop
add
lods
push
lea
mov
lahf
in
imul
clc
ret
inc
int3
push
clc
dec
adc
push
loopne
add
bsf
pop
cmp
or
and
mov
rcl
push
and
outs
or
sub
ret
jg
add
ss
ins
in
or
std
aas
inc
aas
mov
lods
(bad)
cmps
pop
or
clc
enter
and
movs
loopne
enter
jmp
fs
or
fsubr
mov
sbb
add
fisub
inc
or
cmp
push
jg
mov
rol
repz
mov
xor
loopne
call
lds
call
nop
setle
xor
ds
push
(bad)
js
pop
xchg
das
movs
xchg
pusha
shl
inc
test
pop
jno
or
xor
and
or
in
inc
pop
pushf
mov
mov
cwde
scas
(bad)
sbb
inc
adc
in
sub
cmps
pop
cmp
adc
adc
add
sbb
adc
mov
test
cld
in
je
(bad)
retf
jnp
or
leave
and
fisub
add
sub
int3
push
ja
cmp
inc
adc
dec
add
imul
or
arpl
pop
fcomp
(bad)
xor
mov
mov
add
outs
(bad)
fdivr
hlt
push
add
adc
fist
mov
daa
push
sbb
(bad)
or
scas
cmp
dec
mov
pop
outs
lock
icebp
jmp
(bad)
mov
fmul
nop
cmp
xor
mov
fiadd
or
hlt
dec
push
adc
push
and
inc
int3
jmp
mov
jne
jg
add
sbb
push
add
inc
data16
pop
daa
pushf
adc
add
sbb
xchg
xor
mov
xor
or
dec
adc
sub
and
cmp
mov
dec
inc
neg
sbb
add
fwait
pop
mov
dec
cmp
add
mov
pop
pop
lods
or
pop
xor
ret
ds
mov
mov
add
sub
rol
xor
jae
adc
ins
js
cmp
jne
das
jp
clc
or
fiadd
push
sbb
dec
push
std
mov
xor
or
add
outs
dec
sbb
and
pushf
mov
test
pop
sub
repz
sbb
in
push
(bad)
cmp
clc
add
sub
push
push
into
adc
(bad)
loope
xchg
inc
or
push
inc
inc
ds
neg
pop
lods
call
add
gs
jno
add
sbb
pop
jnp
jbe
fcomip
addr16
inc
push
add
mov
mov
cmp
push
mov
dec
mov
test
pop
loope
sbb
or
push
add
and
adc
dec
aam
scas
push
es
push
jle
hlt
dec
sub
or
cmp
pop
wrmsr
mov
and
(bad)
jmp
adc
mov
clc
adc
xchg
ret
fs
inc
sub
pop
(bad)
mov
jne
inc
jmp
call
add
cmp
pop
jle
cmp
sub
jecxz
out
in
movs
imul
pop
and
xor
adc
test
scas
scas
rcl
jae
jecxz
dec
adc
lock
sub
xchg
cwde
or
inc
pop
jmp
xor
dec
mov
dec
stos
jmp
jg
cdq
inc
mov
lds
cmp
jb
popf
xchg
mov
shr
jmp
mov
aas
jg
dec
nop
pop
inc
test
jne
jmp
xor
jmp
movs
add
inc
jbe
ss
push
inc
rol
sbb
push
das
loope
rol
shld
mov
js
or
xor
add
into
cs
pop
sbb
sbb
push
mov
mov
push
or
adc
xchg
mov
sub
adc
inc
push
xchg
retf
adc
inc
js
inc
cmp
sbb
adc
and
div
and
xor
js
loop
sbb
push
push
inc
gs
push
mov
in
sbb
push
inc
pop
or
xchg
jns
push
pop
or
sub
xor
dec
dec
mov
mov
mov
out
ds
push
mov
fidivr
in
lahf
(bad)
fmul
push
cmp
lahf
sbb
ret
xor
jp
pop
pop
fisttp
or
ins
or
push
idiv
out
pop
rcl
and
fnsave
sbb
stos
(bad)
xchg
pop
pop
xchg
xchg
loop
shl
arpl
dec
jge
mov
(bad)
fstp
inc
push
pop
add
mov
test
mov
imul
cmp
push
xor
jnp
jae
xor
jne
lods
add
ror
xor
xchg
ret
dec
scas
or
scas
add
xchg
scas
jbe
adc
sahf
adc
sub
sub
fild
push
jmp
cmp
inc
outs
adc
bound
or
pop
inc
ss
add
jle
push
sbb
test
(bad)
clc
lea
stos
ret
or
add
and
push
lahf
sub
int3
loopne
xor
ins
xor
push
ins
or
inc
cwde
(bad)
or
mov
fdivrp
push
and
fs
sbb
add
popa
dec
add
add
sub
add
arpl
cwde
or
inc
jge
outs
sbb
adc
jmp
scas
inc
dec
sbb
jmp
xor
idiv
shl
jb
jg
xor
adc
inc
sbb
xor
je
addr16
add
loope
div
ror
adc
push
ss
sbb
add
dec
push
stos
xor
(bad)
and
out
adc
mov
idiv
es
dec
and
hlt
shl
or
push
add
in
add
and
push
in
pushf
push
mov
jne
cmp
jmp
lea
pusha
dec
(bad)
cmp
nop
push
lahf
add
or
test
out
mov
movs
dec
add
adc
ins
jmp
call
add
and
lock
cmp
pop
aam
pop
sbb
rol
movs
fs
mov
imul
sub
dec
cmp
adc
adc
push
mov
and
xchg
mov
repz
or
inc
int3
push
cmp
mov
push
inc
ds
adc
add
fild
inc
jb
lahf
pushf
pop
push
jmp
pop
xchg
sbb
sbb
movs
cmps
push
pusha
mov
jb
and
clc
and
jmp
sbb
pop
jecxz
jbe
jo
loopne
shr
cmp
xor
lahf
xchg
pop
aaa
stos
sbb
(bad)
push
mov
cmp
retf
inc
and
rcl
ja
add
movs
add
jo
push
xchg
or
jmp
or
adc
jecxz
or
lahf
adc
jl
xor
cmp
pop
shl
or
or
push
adc
push
jo
xor
in
mov
rcl
add
lahf
jmp
push
test
popf
mov
rol
jle
add
xchg
and
and
adc
add
push
(bad)
sub
mov
ins
(bad)
aam
or
mov
pop
rol
push
int3
mov
fcom
cmps
rol
push
in
add
jg
or
ror
xchg
in
adc
push
enter
ins
and
nop
or
ins
sbb
jle
pusha
jo
sub
aas
sub
jmp
(bad)
call
adc
add
imul
adc
pusha
cmp
jmp
lea
(bad)
aas
in
inc
call
cmc
mov
sub
pop
mov
rol
and
jne
cmp
mov
xchg
jae
push
hlt
call
lock
adc
jno
push
ret
dec
add
push
cld
sub
push
rcr
xor
inc
lock
and
call
pop
loope
adc
aam
and
les
sbb
add
int3
mov
xor
add
mul
fwait
es
mov
ja
pusha
in
dec
and
adc
mov
in
loopne
loope
add
xchg
sahf
mov
add
and
lods
cmp
push
jmp
sbb
mov
ret
leave
mov
pushf
and
and
(bad)
mov
cmp
wbinvd
pushf
mov
cwde
and
cmp
call
cmp
sbb
sbb
sbb
or
lods
out
jns
arpl
and
lea
inc
cs
test
mov
cmp
mov
jg
adc
dec
lea
push
push
clc
or
or
pop
je
xor
inc
movs
jnp
pop
jmp
jmp
jae
cdq
lea
in
call
loopne
mov
xor
call
jmp
(bad)
dec
push
popf
clc
and
shr
jg
or
push
lea
(bad)
or
test
lock
push
adc
test
dec
aas
sub
xchg
push
fisttp
fsubr
push
ins
or
mov
mov
enter
lock
xchg
sub
push
les
mov
sbb
ret
sbb
dec
pop
adc
sbb
imul
fistp
and
dec
and
xor
sbb
sub
das
jne
mov
add
add
cmp
scas
sub
sbb
mov
loopne
inc
bound
out
pop
pop
xchg
sub
pop
and
xchg
cmp
fimul
cmps
mov
sub
movntps
test
sub
and
cmps
mov
pop
jg
inc
jb
fs
in
and
mov
and
add
enter
cmps
sbb
adc
xor
pop
jmp
add
pusha
pop
rcl
dec
add
aas
cmps
sbb
inc
test
out
dec
mov
movs
pusha
pop
sbb
mov
cmps
push
and
cmc
lea
add
shr
imul
cmp
clc
lock
or
hlt
movs
push
dec
adc
fstp
aad
sub
imul
jg
adc
inc
cmps
pop
dec
mov
pop
mov
and
mov
div
xor
cld
xchg
mov
cmp
lods
loop
adc
es
and
jbe
daa
pop
sahf
add
(bad)
mov
js
push
icebp
add
and
jnp
jmp
jg
add
xchg
ds
jns
add
xchg
lods
jo
push
inc
add
adc
rcr
pop
sub
cmp
mov
ffreep
pop
aas
push
stos
add
lahf
lahf
mov
or
adc
xchg
xchg
or
daa
fdiv
add
pop
je
sub
mov
ret
lahf
adc
fimul
jle
adc
pop
sub
shr
adc
aaa
(bad)
iret
into
adc
add
shl
add
loope
lock
lds
mov
fisttp
mov
sahf
retf
movs
add
mov
adc
cmp
dec
mov
push
or
cmp
inc
lock
loopne
cmp
mov
adc
shl
pop
jmp
jmp
sbb
cmp
mov
sbb
add
push
clc
(bad)
mov
cmps
cmp
xchg
pop
sub
mov
ins
outs
inc
sar
mov
loopne
add
adc
sbb
pop
sub
pushf
pushf
inc
into
nop
inc
aas
sub
push
test
adc
test
lahf
add
sub
push
repnz
cwde
xor
sub
pop
sub
or
add
dec
psubd
je
or
fst
test
push
push
aam
mov
sbb
je
lea
sti
sar
push
xchg
xchg
or
repz
clc
adc
lea
push
je
ins
and
sti
pop
dec
retf
adc
add
fmul
cld
cmp
cmovns
mov
(bad)
cld
add
add
cs
imul
je
and
cmp
es
fnclex
add
xchg
stos
inc
scas
adc
mov
mov
pop
pop
(bad)
fmul
test
ret
dec
stos
push
lahf
out
sbb
mov
adc
fild
pop
(bad)
push
loop
inc
or
inc
lods
adc
stos
lahf
loopne
lock
(bad)
jle
adc
jmp
xor
pushf
adc
or
shl
stos
dec
clc
dec
jmp
cmp
imul
xor
or
das
push
jb
sbb
jno
add
mov
mov
jmp
rcr
les
jb
jmp
fbld
dec
sbb
cdq
jg
mov
jl
fild
in
pop
push
or
fistp
xchg
fcmove
fidiv
mov
add
xchg
or
loope
scas
adc
push
or
push
sub
rcl
pop
sbb
and
add
sub
sub
pop
and
aam
cwde
mov
in
add
xchg
ja
into
loope
rcr
add
mov
pop
push
loopne
mov
test
dec
or
dec
or
add
mov
or
push
fsubr
push
sub
push
pop
push
or
data16
add
inc
push
(bad)
repnz
mov
xor
hlt
aas
int3
push
sub
movnti
fnsave
fs
mov
pusha
dec
jmp
xchg
and
mov
mov
jmp
xlat
xchg
scas
inc
test
xlat
int3
add
xchg
xchg
pop
push
les
lods
movs
push
test
sbb
sub
xor
ja
sub
fwait
popa
scas
and
push
mov
inc
xor
pusha
fistp
dec
and
jo
leave
add
sub
ss
xor
fs
aas
push
and
mov
lea
inc
and
adc
mov
inc
jmp
adc
add
and
sbb
lock
or
and
xor
add
cld
les
or
mov
push
hlt
jp
dec
xor
aas
xor
cmps
mov
sbb
and
pusha
xchg
inc
and
adc
sbb
push
lea
mov
aas
push
xor
test
mov
arpl
arpl
add
xor
inc
cmp
(bad)
jnp
push
les
push
or
or
mov
mov
lahf
aaa
pop
loope
fist
shl
add
setne
aas
outs
jle
je
or
mov
cld
pop
pop
or
hlt
mov
sti
add
mov
pop
mov
lock
inc
xor
arpl
ins
popa
fbstp
in
fisubr
mov
add
add
call
rol
rcr
fild
loopne
rol
in
jae
add
or
rcr
push
test
mov
dec
dec
sbb
pop
and
cmp
adc
xor
add
add
fsub
xor
push
repz
shl
aas
xor
pop
nop
arpl
cli
nop
and
mov
test
add
aas
ret
in
add
push
cld
mov
sub
nop
lds
std
mov
dec
pop
cld
movs
in
loopne
aas
mov
fstp
repnz
retf
adc
xchg
mov
lods
lock
mov
and
dec
pop
pop
jae
sbb
jg
sub
pop
push
mov
fiadd
mov
ror
mov
call
or
sub
push
cmp
stos
in
jl
xor
sbb
call
lods
adc
fadd
popf
mov
jno
xchg
ins
sub
in
mov
or
pop
dec
add
retf
ret
in
ss
xor
nop
in
dec
cmp
mov
sbb
jne
lea
scas
lea
(bad)
or
and
adc
sbb
mov
int
dec
loopne
ds
adc
sbb
mov
sbb
xor
mov
aas
sub
ins
(bad)
int3
adc
mov
dec
ds
push
sti
pop
pop
sub
pop
popa
ins
fistp
push
test
sbb
or
inc
adc
les
aad
and
cmp
lea
sbb
les
or
rcr
mov
sbb
outs
add
je
push
sub
jecxz
out
les
hlt
retf
xor
sub
and
or
mov
cmp
mov
loopne
fmul
sub
les
mov
std
and
loopne
push
mov
sbb
stos
push
dec
lods
sub
xor
mov
mov
int3
mov
loopne
mov
mov
mov
in
xlat
jp
cld
and
in
test
add
popf
dec
enter
(bad)
bnd
out
cmp
and
cs
xchg
popa
adc
jbe
enter
fld
adc
pop
repnz
call
clc
dec
sti
dec
sbb
in
and
add
les
sbb
daa
pusha
or
jge
dec
call
imul
ret
jecxz
dec
xor
retf
scas
retf
hlt
in
mov
push
adc
pop
adc
adc
sub
dec
mov
push
or
add
and
arpl
add
cmp
pop
push
pop
pop
outs
cmp
sar
rcl
lds
aas
ret
dec
test
nop
inc
cmc
push
sar
xchg
sbb
push
pop
add
ins
add
push
adc
pusha
mov
lea
adc
lahf
push
jecxz
lea
clc
rcr
pop
test
mov
lock
cmp
call
clc
add
sbb
movs
cmp
jge
icebp
fwait
adc
adc
pop
dec
outs
bound
call
cld
add
push
int
adc
jmp
adc
xor
xchg
xchg
push
adc
in
lock
pop
repnz
add
xor
sub
mov
gs
mov
iret
sbb
fld
pop
cmp
jo
(bad)
dec
and
retf
bound
push
setae
bound
pushf
push
dec
dec
test
jge
cmp
pop
sbb
popa
call
pop
push
adc
mov
mov
sbb
jmp
test
inc
fadd
dec
loopne
pop
mov
or
aas
jne
adc
mov
leave
and
ds
mov
mov
and
push
push
add
pop
sbb
dec
inc
and
je
je
mov
or
pop
pusha
xchg
cmp
aas
jl
adc
inc
or
(bad)
hlt
mov
and
push
sub
pop
in
sbb
or
cmp
les
lock
and
jbe
ret
mov
frndint
mov
sbb
xchg
add
add
shr
ret
ret
pop
mov
lock
(bad)
jecxz
imul
jmp
and
aas
xor
and
inc
(bad)
sbb
mov
out
jg
mov
jae
inc
xchg
sbb
clc
clc
jmp
cmp
adc
int3
in
add
and
les
hlt
cmp
lods
outs
aaa
and
lea
jne
pop
sbb
std
adc
push
cmp
add
pushf
mov
push
lock
xchg
fcomp
or
add
adc
sbb
push
fst
jmp
imul
inc
shr
test
mov
xor
sub
jl
pop
push
mov
push
sub
mov
inc
pop
repz
mov
mov
pop
adc
pushf
in
fcomp
add
hlt
sub
icebp
mov
(bad)
retf
arpl
adc
inc
lea
out
push
jecxz
adc
jl
dec
jmp
mov
sbb
pop
xchg
or
cld
inc
fadd
shl
and
jnp
sbb
pop
sti
sub
adc
lock
jmp
jmp
and
jge
and
fsubr
hlt
lods
inc
cmp
jne
leave
lock
mov
enter
pop
das
mov
fcomp
arpl
jne
dec
push
or
not
mov
xor
mov
push
(bad)
dec
ins
es
(bad)
push
nop
int
ja
jl
cmp
sti
xor
jmp
pop
push
cmp
arpl
scas
push
pop
sub
test
mov
mov
lahf
aam
lods
pusha
fbstp
push
rcr
adc
test
xchg
imul
ss
inc
popa
imul
out
test
cmp
jne
jle
int
lea
jne
add
or
jp
test
cmp
jl
lods
push
popa
arpl
cmps
dec
enter
pop
sub
pop
push
sbb
retf
add
and
dec
adc
cld
js
scas
add
test
xchg
adc
adc
cmps
sub
xchg
cmp
out
xor
enter
pushf
adc
ret
aaa
test
push
(bad)
and
push
and
push
cmps
divps
popa
aas
adc
add
repz
jl
ja
repnz
clc
in
clc
clc
or
add
in
ror
push
and
mov
pop
jle
cld
movs
jb
jb
clc
cld
clc
cmp
cmp
cld
clc
and
dec
cs
clc
adc
clc
cld
jmp
sub
push
dec
and
mov
dec
push
and
pop
cld
retf
pop
dec
inc
ret
jo
and
inc
push
xchg
jmp
or
cs
ficom
adc
and
jmp
or
icebp
pop
jl
lock
(bad)
push
jmp
in
(bad)
fsub
jmp
add
ins
push
or
in
(bad)
and
sahf
xchg
xor
data16
adc
cmp
cwde
movs
leave
xor
gs
mov
and
fidiv
imul
jmp
and
fmul
fsub
dec
mov
push
jp
cld
mov
mov
pop
hlt
aam
cmp
jmp
loope
inc
mov
and
push
push
scas
dec
ficom
xor
ret
add
test
enter
jl
popa
pusha
fdivr
push
push
lods
test
mov
mov
pop
lods
stc
pop
push
ror
outs
ret
out
xchg
test
test
(bad)
push
test
das
inc
mov
cmp
outs
cmps
push
sub
or
push
xor
leave
cmp
cmc
sub
push
adc
inc
pop
mov
jbe
dec
(bad)
fcom
les
adc
mov
push
sub
ror
push
and
add
push
adc
push
aas
push
outs
in
ret
lahf
in
jmp
mov
xchg
ret
mov
cld
mov
cmps
ja
add
mov
sbb
jle
adc
mov
cmps
add
loope
nop
mov
nop
inc
sub
(bad)
loopne
(bad)
ror
dec
mov
jae
inc
push
push
pushf
js
cmp
(bad)
or
pop
sbb
xor
cwde
add
inc
add
call
cmp
je
jae
pop
mov
(bad)
rcl
clc
popa
adc
push
xchg
ins
nop
adc
ss
cmp
xor
test
or
sbb
in
xchg
mov
xor
mov
mov
xor
xchg
les
xchg
xor
adc
xor
adc
cmp
inc
push
cmp
test
mov
cs
data16
pop
xor
clc
loope
push
pop
pusha
jl
lock
dec
icebp
push
xor
loopne
push
les
bound
sti
jp
js
jp
xor
ror
lock
shr
xor
inc
jmp
xor
cli
add
pusha
mov
mov
push
fdivr
push
std
inc
push
xchg
mov
jae
jmp
neg
mov
fmul
ins
push
mov
test
sub
dec
jmp
nop
dec
and
cmp
or
jb
pusha
or
push
or
add
js
cmp
and
pop
lds
xor
sar
pop
push
movs
or
cmp
inc
mov
dec
or
loop
dec
and
jnp
xchg
cmps
ss
mov
mov
adc
sbb
and
mov
push
ja
enter
sar
mov
push
push
mov
test
rol
mov
push
enter
mov
cmp
cmps
inc
mov
cmps
sbb
push
ror
mov
push
and
js
dec
add
pop
stos
push
je
movs
(bad)
lock
xchg
idiv
shl
sub
mov
popf
movs
outs
pop
int3
int3
add
int3
mov
or
fistp
cdq
jmp
pushf
(bad)
push
retf
shl
push
sbb
shr
test
stos
enter
inc
jmp
shl
adc
add
arpl
mov
cmp
inc
and
mov
xor
movs
add
mov
sub
pop
sbb
stos
mov
jne
cmc
adc
shl
push
or
rol
out
dec
gs
dec
adc
dec
dec
push
imul
or
or
int
lea
data16
imul
aaa
int
mov
ret
sbb
dec
rol
push
cmp
jmp
das
push
dec
out
mov
inc
mov
cmp
fcomip
pop
xor
(bad)
mov
pop
add
imul
jp
pop
lock
add
hlt
dec
jns
test
jp
test
sbb
sub
cmp
cmp
sub
jns
add
sti
sub
sbb
sub
(bad)
jmp
lock
push
lea
hlt
add
push
adc
fwait
inc
cmp
mov
inc
add
and
test
jg
cmp
xchg
test
shl
sbb
sub
aaa
addr16
fild
sbb
mov
ficomp
or
push
loopne
cmp
jnp
push
sub
lods
xor
jg
and
ds
xchg
and
inc
xor
inc
push
and
or
and
fnsave
fbstp
test
lods
and
inc
or
mov
adc
cld
adc
mov
mov
pop
in
and
imul
push
or
aas
inc
push
movs
cmp
or
cld
or
add
dec
pop
add
dec
nop
inc
add
pop
inc
and
cmp
pop
and
jb
pop
jle
xor
dec
or
or
mov
cmp
inc
adc
and
push
sbb
lea
cmp
push
sub
or
add
scas
(bad)
pop
or
push
sub
or
push
push
and
mov
cmps
and
pop
or
inc
jbe
sbb
mov
iret
pushf
push
ds
inc
fnstsw
lods
(bad)
nop
jmp
dec
fcomp
or
in
sbb
pop
leave
xor
pshufw
imul
push
push
(bad)
ror
rol
sub
adc
cmp
pusha
mov
sbb
sbb
adc
cmp
hlt
shl
dec
jg
add
aaa
shl
cdq
fimul
mov
in
adc
mov
push
inc
mov
add
sbb
xor
jo
and
adc
xor
or
cmp
mov
mov
ficom
adc
imul
out
mov
retf
inc
aas
and
push
mov
sbb
call
add
shl
mov
fs
aas
sub
xchg
sbb
cmp
sub
lahf
and
add
mov
je
(bad)
xor
dec
xor
test
xchg
pushf
and
adc
imul
sbb
jmp
add
jg
inc
mov
aas
xor
in
push
jg
xor
xor
xor
and
sub
pusha
mov
sub
add
cmp
(bad)
stos
inc
int3
std
jle
rcr
jge
(bad)
push
mov
rol
fs
fs
cli
cwde
cwde
sti
xor
mov
add
pop
loop
int
pop
or
jbe
out
(bad)
(bad)
mov
nop
sub
nop
sub
push
shl
sbb
cmp
and
dec
cwde
es
inc
jne
cwde
icebp
aam
jo
xchg
ins
or
imul
lock
daa
pop
pop
mov
(bad)
xchg
push
adc
imul
mov
jmp
jge
cmp
ss
sub
scas
nop
pushf
pushf
dec
push
test
bound
push
pop
or
inc
clc
adc
push
push
or
mov
fistp
ffreep
or
jo
inc
in
es
rcl
cmp
popa
jl
cmp
daa
and
sbb
push
adc
stc
aas
out
fdivr
dec
and
dec
enter
dec
ror
jge
mov
jg
retf
js
arpl
or
lahf
bound
dec
jne
pop
dec
loopne
shl
push
loop
cmp
ficom
and
pop
bound
bound
pop
dec
and
push
daa
loopne
jnp
lock
aaa
arpl
ret
jle
jno
mov
adc
loopne
mov
lea
mov
add
in
mov
rol
pop
inc
sbb
inc
fst
xor
jmp
push
pusha
dec
dec
fadd
pslld
push
jae
sub
add
aam
add
mov
ins
cmc
and
leave
jl
aas
dec
mov
cmps
ror
add
mov
mov
pop
adc
das
sub
sbb
sar
sub
(bad)
pop
sbb
in
scas
pop
repnz
jne
call
and
add
push
mov
inc
ds
add
imul
or
add
pop
loop
inc
cwde
test
mov
(bad)
out
xchg
sar
xor
test
add
int3
mov
mov
int3
int3
in
or
cwde
sbb
and
bound
mov
or
loopne
rcr
cmc
scas
pusha
mov
test
cmp
enter
fdiv
inc
sub
pop
xchg
shr
add
jbe
add
int3
mov
jnp
or
sahf
jmp
ss
or
pushf
xor
rcr
sub
pushf
pushf
fstp
pop
ins
push
adc
cld
cmp
inc
jae
adc
movs
mov
ja
push
lock
aam
sbb
retf
push
out
ja
mov
imul
repnz
in
es
inc
test
call
sub
jp
sbb
or
popf
ds
pop
mov
js
test
inc
nop
pop
inc
imul
pop
or
or
add
in
push
aas
or
xchg
add
(bad)
xor
outs
sub
popa
cmps
sbb
or
xor
fs
loopne
rol
pop
add
cmp
pop
or
mov
sub
sti
jno
xor
mov
ins
or
dec
cdq
out
pop
shl
mov
mov
test
xchg
xchg
ins
dec
sbb
sub
enter
loop
ins
cli
adc
jbe
add
aas
loop
push
add
push
fimul
pushf
and
shl
in
push
(bad)
mov
and
xor
jl
mov
or
push
push
shl
lods
or
push
movs
fdiv
fld
inc
nop
sbb
jo
movs
(bad)
into
mov
xchg
(bad)
sub
cmp
in
clc
add
cmp
je
adc
mov
mov
push
xchg
rcl
mov
xchg
jb
std
jle
pop
xor
pusha
lds
push
pop
fiadd
pop
push
jge
inc
fisub
pop
dec
mov
mov
adc
nop
add
cmp
cmp
push
std
sti
xor
cmp
sub
push
into
mov
cwde
sub
xchg
(bad)
sbb
add
clc
iret
cmp
push
push
jl
mov
adc
cmp
cdq
or
sbb
daa
inc
push
mov
xchg
inc
sub
ret
sub
addr16
inc
jns
and
or
inc
and
xor
push
mov
cmp
add
jg
xchg
mov
shl
and
push
repz
mov
mov
mov
iret
fisttp
mov
push
pop
and
aam
pushf
lea
sti
stos
test
fs
pop
or
int
cmp
scas
js
js
or
pop
sbb
loopne
les
xlat
add
sti
sub
out
pop
inc
cmp
mov
out
push
aam
scas
mov
pusha
mov
sahf
fchs
fnsave
xor
lds
cmp
jge
mov
xor
xor
ja
ror
in
inc
sub
pop
add
or
or
pop
call
and
pop
fnstenv
jmp
jmp
sub
mov
inc
add
push
or
dec
jmp
jg
ins
ins
adc
or
pop
mov
fdivr
xchg
push
xchg
mov
xchg
xchg
xchg
mov
dec
mov
ins
sub
inc
sub
jg
push
and
push
dec
ror
add
dec
dec
add
pop
and
add
adc
or
(bad)
cmp
jg
add
push
fistp
xchg
ds
mov
mov
or
adc
pop
or
pushf
test
inc
adc
ja
loopne
pop
aas
inc
adc
and
out
add
pop
adc
shr
push
jnp
cs
jg
daa
fwait
mov
ficomp
cmp
nop
int3
in
push
rcr
mov
pop
xchg
pop
dec
xor
dec
add
sbb
lfs
sbb
mov
mov
ror
imul
outs
cmp
mov
in
pusha
popf
popf
or
mov
fwait
adc
gs
xor
jg
and
pop
xchg
jne
sub
adc
jmp
mov
cmp
cld
icebp
cdq
in
(bad)
(bad)
mov
sub
and
xchg
jg
add
push
sbb
aad
mov
add
aaa
rcr
or
push
or
mov
int3
loopne
imul
mov
adc
call
pop
outs
jge
mov
inc
push
adc
retf
xchg
outs
mov
(bad)
(bad)
jo
je
in
add
jmp
or
mov
fwait
or
adc
scas
sub
mov
push
mov
push
jp
popa
es
sti
add
dec
cmp
test
jmp
adc
mov
mov
pop
cmp
mov
or
dec
(bad)
ja
pushf
sti
ficom
mov
dec
xchg
mov
in
inc
ret
xchg
js
std
popf
xchg
add
cmp
pop
pop
lock
mov
jo
mov
out
inc
ins
pusha
rcl
sub
mov
push
or
adc
jmp
mov
or
adc
sbb
add
inc
sbb
sub
loopne
mov
push
push
adc
(bad)
call
adc
inc
sar
adc
xor
xchg
out
xor
mov
fild
mov
push
inc
add
add
xchg
test
cmp
cmp
cmp
and
inc
lods
ret
pop
ins
sbb
shl
std
mov
call
pop
pop
xor
mov
pusha
inc
inc
inc
rcr
adc
push
test
mov
and
hlt
jnp
sub
(bad)
popa
mov
xchg
sar
jge
mov
retf
aas
adc
or
mov
dec
push
add
mov
xchg
mov
push
or
jb
gs
adc
jl
pop
cmp
and
test
rcl
mov
add
inc
adc
inc
mov
mov
cwde
pop
(bad)
fidiv
add
aas
jl
out
sub
dec
cli
or
dec
xchg
sub
pop
mov
in
hlt
mov
dec
dec
xchg
xchg
xor
add
rcl
in
inc
mov
and
cmp
ja
ins
sbb
sub
out
pop
outs
push
in
adc
mov
push
cli
fimul
loop
mov
sbb
push
rol
mov
jmp
sbb
xor
popa
jmp
adc
xchg
xchg
jl
std
ror
mov
mov
mov
lock
inc
mov
int3
xchg
sbb
adc
lahf
iret
sbb
sbb
sbb
mov
in
add
cdq
xor
add
or
mov
enter
jo
cbw
lods
call
cmp
je
dec
shl
sub
and
adc
mov
ret
ins
mov
gs
out
xor
gs
jbe
cmp
mov
in
fdiv
aam
add
jne
sbb
sti
add
aad
clc
adc
pop
add
cmps
jmp
add
jle
add
cmp
and
sbb
adc
lock
daa
stos
mov
inc
xchg
add
push
into
mov
xor
sub
xchg
sub
fild
jmp
arpl
jnp
cmps
sub
mov
dec
gs
sub
cs
xchg
sub
fld
data16
jmp
mov
or
nop
jg
dec
enter
ror
data16
adc
sub
lea
push
fidiv
enter
cmp
sti
sar
outs
dec
add
aaa
nop
jmp
fisttp
inc
dec
retf
xchg
xchg
loopne
inc
fs
pop
add
xor
pop
rcl
inc
and
adc
popa
fstp
sub
adc
sub
pop
nop
cmp
mov
adc
add
sbb
addr16
je
xor
out
aam
sbb
adc
pop
mov
or
adc
or
pop
mov
test
jnp
jp
fadd
repnz
mov
xor
sub
inc
mov
gs
inc
bound
stos
es
add
js
jmp
mov
add
push
mov
lea
sbb
mov
inc
adc
in
fstp
nop
sbb
mov
pop
jnp
xor
pop
sub
je
in
popf
fwait
or
sub
inc
cmps
push
xchg
jmp
dec
shl
pop
int
(bad)
mov
es
or
mov
xchg
pushf
or
rol
inc
sub
or
mov
iret
add
push
dec
out
jo
xchg
stos
dec
pop
push
pop
pop
lock
jb
push
xor
add
lds
xchg
and
ret
dec
jne
adc
push
imul
jg
cdq
and
add
mov
mov
pop
dec
imul
daa
adc
inc
push
mov
int3
xchg
push
pop
pusha
dec
adc
stc
dec
je
pop
loope
push
mov
mov
cmp
sub
in
ss
xor
test
push
sub
dec
push
jmp
pop
clc
fild
push
add
and
sbb
and
js
cs
mov
pusha
aas
pop
xor
cmp
mov
mov
ret
add
sbb
xchg
lock
in
cmp
sub
and
daa
push
mov
lea
fisub
add
mov
sbb
adc
scas
jg
aas
in
push
sbb
daa
adc
and
jmp
js
mov
rol
dec
aad
inc
add
adc
mov
lods
or
addr16
add
and
mov
xchg
cdq
fsub
shl
mov
ret
inc
loope
add
push
inc
sub
jnp
adc
cmc
and
(bad)
loope
or
sub
in
nop
sub
inc
push
mov
or
and
adc
test
dec
in
add
fs
mov
pop
repz
jns
jo
jmp
jecxz
sbb
call
pop
lods
sub
push
jae
and
imul
fstp
and
and
sbb
inc
or
dec
sbb
add
add
pop
jmp
xchg
adc
lods
add
sbb
push
lods
out
jg
ins
jnp
push
sbb
add
ins
nop
pushf
jmp
jp
or
mov
xchg
into
pop
add
push
push
xchg
mov
xor
pusha
rol
add
and
daa
push
sbb
fistp
add
ret
jg
add
push
adc
loope
ret
lahf
cmp
jl
ret
sub
or
cmp
lea
mov
and
xchg
and
mov
mov
(bad)
rcr
test
mov
loopne
inc
or
or
dec
or
ins
(bad)
jl
and
xor
movs
adc
sbb
adc
and
mov
adc
xor
xor
js
aad
and
sub
pop
or
and
mov
aas
in
out
aas
and
cmps
jo
push
inc
xchg
int3
outs
popa
lock
mov
mov
sub
aas
add
test
pop
sub
retf
push
sbb
fisub
dec
push
mov
mov
adc
push
add
aad
pop
sbb
adc
push
lock
sub
enter
ret
and
outs
sub
pop
sbb
test
add
xchg
in
test
or
sbb
pusha
pop
adc
fdiv
aaa
loopne
mov
sub
pop
and
jmp
mov
or
bound
into
mov
mov
and
lods
mov
(bad)
in
push
je
add
or
mov
les
or
add
push
or
adc
test
stc
sub
ret
mov
call
stc
sbb
and
dec
loope
cmp
cli
call
cmp
dec
mov
aaa
popa
ds
cmp
(bad)
enter
dec
push
push
cmp
hlt
ds
in
aam
clc
fstp
aam
push
clc
sbb
push
lods
jle
and
lock
jmp
loopne
daa
fmul
or
sub
rcr
mov
mov
call
inc
add
dec
(bad)
adc
cmp
add
push
jbe
sub
stc
mov
rol
imul
aaa
icebp
pop
sbb
hlt
call
xor
xchg
inc
mov
or
dec
test
sub
and
ror
jge
xor
push
pop
pop
mov
pop
cmp
daa
das
lds
jmp
mov
mov
aam
and
inc
stos
mov
rcr
lds
shr
in
jmp
xchg
mov
fcom
clc
mov
fcom
mov
or
jle
pop
push
mov
imul
enter
test
test
(bad)
leave
in
mov
lods
add
in
pop
ret
xor
or
jmp
test
add
test
push
jae
dec
sbb
and
sbb
test
nop
push
and
dec
mov
nop
mov
jb
fmul
or
or
scas
dec
dec
mov
inc
fwait
pop
add
inc
and
leave
adc
cwde
xchg
add
je
or
adc
pop
or
adc
xchg
test
mov
popf
fild
pop
add
popf
xor
add
ins
jle
fdiv
enter
je
push
xchg
mov
std
add
pusha
xor
mov
fs
ins
outs
call
fs
sbb
and
inc
xlat
sar
cdq
sbb
cmp
mov
inc
adc
repnz
sub
popf
mov
nop
xchg
pushf
sbb
(bad)
jle
shl
pop
sbb
pusha
test
mov
pop
popf
cld
sti
pop
ret
fild
add
add
jbe
dec
loopne
pop
mov
stos
ss
daa
jno
xchg
mov
mov
test
jbe
test
inc
icebp
dec
pop
or
adc
mov
or
in
jmp
sub
rcl
(bad)
sbb
shl
lahf
fsub
add
iret
dec
mov
(bad)
mov
push
adc
cmps
movs
imul
or
fwait
retf
and
push
cmp
and
push
test
xor
movs
int3
push
dec
dec
pusha
mov
sar
mov
dec
les
dec
or
xor
mov
clc
call
inc
push
mov
jb
mov
mov
fild
cmp
push
and
mov
adc
push
cmc
mov
pop
or
pop
adc
ins
icebp
mov
xchg
hlt
adc
add
add
jp
fdivr
mov
mov
dec
jg
mov
push
shl
sahf
ret
scas
cmp
int
dec
cmps
mov
mov
pop
cmp
sub
mov
adc
or
adc
and
or
dec
push
push
fbstp
or
jmp
(bad)
add
enter
pop
call
add
lea
or
or
push
(bad)
stos
dec
mov
loopne
je
xor
push
lock
cmp
sub
inc
lods
mov
test
add
push
cld
shl
scas
in
test
mov
pusha
mov
in
mov
loope
jge
addr16
movs
pop
push
adc
shl
sub
or
sbb
mov
fadd
push
xchg
ror
ds
(bad)
sbb
shr
or
aad
and
mov
loope
inc
dec
mov
or
push
mov
xchg
mov
ret
xchg
xchg
sub
das
movs
pop
and
dec
mov
aas
mov
cmp
mov
xor
loopne
(bad)
aad
aam
aad
stos
lods
movs
xor
iret
push
cmps
pop
(bad)
fsubr
xchg
push
gs
xor
in
mov
jmp
and
loope
sub
sar
lds
mov
add
js
jmp
ret
out
push
movs
sub
add
inc
adc
aas
sub
push
adc
in
push
sar
ret
loope
ins
xor
lds
mov
xor
icebp
add
xchg
fst
fwait
push
push
and
xor
push
pop
pop
inc
cld
push
adc
lahf
inc
mov
sub
inc
pop
or
push
test
leave
mov
xchg
lea
ins
xchg
xor
scas
push
mov
pop
and
mov
push
mov
nop
adc
xchg
push
mov
add
mov
mov
or
mov
cs
mov
loopne
push
mov
ror
fsubr
xchg
cmp
jb
or
or
fadd
aam
je
adc
loope
hlt
sbb
cdq
sbb
jns
cmp
lock
nop
fdivr
xor
imul
xchg
mov
rcr
test
sbb
pusha
mov
mov
mov
mov
and
pop
and
out
enter
or
es
aaa
les
add
in
les
xor
inc
dec
xchg
sahf
mov
or
inc
imul
adc
sbb
mov
and
enter
test
cs
sub
aam
js
pop
scas
or
fcom
adc
mov
mov
mov
mov
and
adc
bts
adc
sar
inc
pop
mov
pop
sbb
xlat
out
aam
cmps
jg
dec
sub
punpckhdq
add
cmps
mov
lahf
mov
push
(bad)
es
mov
sbb
and
push
leave
push
fistp
mov
push
ins
fnstenv
jb
add
add
jg
mov
mov
mov
jo
push
hlt
adc
loop
jg
repnz
fbstp
fbstp
loop
dec
out
and
mov
lods
mov
test
adc
xchg
fstp
adc
mov
rol
sbb
mov
neg
pop
mov
mov
mov
cmp
push
mov
fisub
jne
dec
cmp
add
push
and
mov
or
inc
iret
mov
pop
push
push
call
aas
test
cmp
fadd
repnz
mov
pop
aaa
(bad)
jmp
cmp
loop
cmp
lea
mov
aaa
mov
(bad)
or
jno
or
ror
data16
push
lea
iret
xor
pushf
mov
xor
xlat
mov
push
in
mov
sbb
shr
ins
add
mov
popa
icebp
out
xor
loope
mov
adc
iret
retf
retf
aas
aad
rcr
pusha
mov
mov
mov
push
mov
xchg
lds
adc
cmp
and
cld
jg
jp
xor
or
mov
dec
inc
repnz
les
enter
adc
mov
popf
inc
pop
test
sbb
daa
mov
and
add
dec
pop
dec
ins
xlat
inc
jb
mov
aas
mov
push
mov
inc
aas
inc
loopne
sbb
sub
js
ds
add
push
shr
sar
jns
enter
shl
push
cmp
pushf
lds
jb
rcr
inc
pop
inc
lock
sub
(bad)
retf
sbb
out
mov
add
cmp
clc
inc
jg
es
adc
pop
stos
add
ror
adc
into
xor
pop
in
xchg
lods
(bad)
fsubr
or
cmp
fild
push
push
adc
mov
movs
movs
pushf
movs
and
push
adc
inc
sbb
cmp
mov
test
(bad)
in
jge
pop
lods
inc
fld
inc
sbb
dec
loop
and
push
sbb
call
mov
sbb
jo
(bad)
sub
and
arpl
lds
xor
mov
jmp
sub
das
fsubr
sti
(bad)
outs
mov
adc
sbb
pop
pop
test
xchg
mov
pushf
aad
dec
dec
mov
xor
test
mov
mov
mov
in
mov
add
cmp
jb
lods
sub
inc
int
sub
dec
sub
leave
out
mov
push
bound
outs
jae
ins
in
lock
sbb
push
dec
seto
or
ds
mov
and
test
adc
cmp
setnp
push
popa
sub
cwde
movs
nop
add
(bad)
sbb
sbb
mov
adc
push
(bad)
mov
and
sub
pop
sub
pusha
jo
es
adc
bound
rcl
cmovo
sahf
cwde
add
movs
fisttp
xlat
dec
popa
adc
ins
(bad)
adc
adc
popa
add
mov
mov
add
or
jmp
les
aam
add
dec
xlat
jge
sbb
adc
jnp
movs
and
das
push
popa
mov
call
or
aam
and
inc
movs
jecxz
bound
dec
or
pushf
rcr
and
mov
xchg
popa
xor
and
sub
sub
sbb
adc
sbb
or
repz
dec
mov
inc
sbb
sar
mov
icebp
mov
adc
pop
cmp
ja
fcmovne
cld
xor
or
ins
(bad)
loopne
gs
ja
ds
mov
push
add
les
lock
add
mov
sbb
add
sub
push
ja
test
adc
imul
pop
add
push
ins
sbb
cld
shl
or
dec
ds
and
sbb
adc
adc
jl
dec
or
push
push
jl
and
dec
sar
dec
dec
jmp
jne
jl
pop
pop
scas
loopne
xchg
pop
sar
icebp
sbb
dec
ror
inc
mov
movs
call
clc
lahf
cld
je
push
popa
add
sbb
mov
jl
push
cli
fmul
int
scas
pop
xor
and
ja
pusha
inc
sbb
ror
mov
je
cmp
pop
push
imul
pop
push
or
cld
and
inc
jecxz
call
or
es
mov
xchg
jecxz
frstor
fs
ja
ret
jle
mov
dec
js
call
addr16
sbb
push
sbb
inc
or
and
or
retf
pop
push
inc
mov
imul
pop
mov
test
mov
sub
or
sar
in
cmp
adc
movs
nop
push
add
sbb
add
push
jle
fmul
inc
inc
dec
mov
or
push
pop
ror
fadd
mov
jne
out
and
dec
add
adc
lea
jb
(bad)
aaa
and
cli
mov
adc
mov
add
sbb
jg
jmp
xchg
jno
(bad)
fst
cld
pop
and
sub
xchg
in
loopne
mov
cmp
retf
adc
and
mov
je
mov
add
xor
cld
rcr
and
pop
fadd
loopne
dec
xchg
call
psubusb
sub
push
cmp
cmp
add
(bad)
in
(bad)
out
or
sub
mov
dec
(bad)
jo
stos
jb
sbb
imul
scas
int
push
cmp
dec
mov
push
ror
cmp
lock
stc
push
popf
adc
lea
pop
shr
iret
push
fist
ins
dec
pop
push
fild
lock
imul
ret
lods
cmp
les
ins
sub
adc
dec
adc
clc
rol
ins
loopne
jl
ffree
aad
repz
push
psubsb
dec
adc
mov
push
and
push
fcom
iret
pop
clc
jmp
mov
adc
stos
or
xchg
in
adc
fistp
cmps
push
sbb
or
or
jmp
or
adc
add
adc
push
adc
inc
adc
call
fsubr
test
(bad)
mov
fs
outs
sub
cmp
xor
out
dec
pushf
int3
cmps
cld
dec
xor
mov
stos
and
sub
or
lods
rcl
outs
adc
cli
jmp
lea
push
adc
add
add
add
mov
daa
cld
cmp
fisttp
jae
mov
shl
xor
jmp
sub
push
dec
cld
inc
fistp
(bad)
jnp
adc
popa
sahf
add
cld
out
in
cmp
add
popa
daa
add
push
in
add
xor
addr16
leave
mov
mov
pop
mov
sub
loop
or
ret
(bad)
pop
(bad)
jmp
test
jmp
add
pop
aad
outs
inc
mov
aas
or
add
(bad)
lods
or
inc
and
jns
fsubr
das
add
cs
test
popa
inc
data16
int3
ror
rol
inc
es
enter
mov
sub
pop
loop
xor
sub
mov
lods
jo
xchg
pusha
pushf
xchg
mov
je
push
add
call
mov
jge
popa
pop
clc
or
inc
mov
push
(bad)
mov
fisubr
mov
jae
xor
in
jmp
retf
cmp
inc
push
call
pusha
sbb
call
fidiv
call
sbb
lock
mov
mov
pushf
int
adc
push
pop
cmp
sbb
fs
adc
push
add
dec
test
add
cmps
test
pop
xchg
test
adc
xor
rol
jno
cwde
adc
xchg
fidivr
jno
add
xor
cdq
stos
adc
xor
sub
jo
pop
pop
das
mov
(bad)
scas
iret
push
pop
mov
inc
mov
outs
mov
pop
ins
fmul
(bad)
lock
and
add
loop
bound
mov
fs
and
cmp
sbb
daa
(bad)
mov
arpl
pop
pop
dec
push
pop
ins
sbb
in
sbb
sub
stos
add
cli
add
ficom
lahf
mov
xchg
je
fimul
inc
fs
push
push
or
lods
pop
shl
jg
sbb
clc
sub
dec
inc
ror
xor
dec
aad
mov
out
mov
dec
rol
lods
out
ins
jne
popf
mov
in
cmp
mov
pushf
scas
lods
or
pop
adc
daa
cmp
inc
nop
mov
add
push
xor
int3
sbb
fdiv
push
sbb
sahf
cdq
or
sbb
xchg
adc
push
xor
push
xchg
sbb
push
ja
in
mov
call
fucomi
stc
pop
pop
loope
jmp
sub
cmp
mov
enter
inc
jecxz
mov
test
inc
adc
sub
xchg
sub
mov
pop
dec
and
xchg
pop
mov
ds
dec
pushf
mov
jbe
mov
adc
jno
scas
movs
cmp
or
jg
ret
sbb
fnstcw
push
jns
enter
pop
sbb
cwde
cmp
fcomp
xchg
push
sbb
push
sbb
data16
push
loopne
sbb
mov
fist
push
pop
jne
imul
enter
sub
bndldx
xor
cmp
call
fdiv
enter
dec
or
sbb
dec
cs
les
dec
call
dec
inc
push
push
adc
arpl
add
or
arpl
xor
adc
or
sahf
xor
lahf
bound
stos
adc
push
add
jg
imul
adc
pop
adc
jmp
sub
add
(bad)
dec
aas
xchg
add
xor
jne
test
loop
outs
push
rol
lock
shr
clc
push
jmp
adc
dec
dec
push
pop
mov
lock
jp
popa
or
push
sbb
fld
inc
shl
mov
fidivr
fdivr
ficomp
push
or
jne
ret
sbb
daa
and
jle
add
dec
sbb
dec
sbb
in
lock
push
jb
rcr
xor
pop
movs
sub
loopne
sbb
and
mov
aam
or
mov
iret
dec
jle
xor
(bad)
jno
pop
pop
inc
pop
xchg
pop
sti
sub
popf
xchg
cmp
clc
jb
push
mov
fldcw
and
cli
add
jo
aas
push
add
jg
test
or
jg
out
push
and
fstp
pushf
das
sbb
mov
call
pop
mov
adc
add
cmp
jbe
cs
sbb
add
pop
push
inc
rcl
fild
and
aad
add
jne
cmc
fcom
adc
adc
jno
fisttp
push
fbstp
cmp
aam
es
xor
and
js
and
pop
dec
and
jb
cmp
mov
xchg
test
(bad)
and
or
cmps
call
shl
pop
into
(bad)
(bad)
in
and
fsubr
or
cli
jmp
and
adc
dec
sbb
es
jne
push
xor
jmp
je
and
in
xchg
mov
sub
push
add
push
inc
test
ret
int3
and
int3
mov
enter
sbb
sbb
aas
fdiv
outs
pop
push
sub
or
pop
add
jg
mov
push
mov
int
adc
loopne
jne
mov
jg
push
aad
in
sahf
out
ret
(bad)
(bad)
clc
dec
mov
push
int3
aam
pop
lahf
push
stos
cmps
cmp
fwait
lods
xor
repnz
loopne
push
and
pusha
xchg
push
stos
cmps
fiadd
mov
sub
sbb
cdq
mov
cmp
(bad)
stc
mov
test
push
sub
mov
sbb
in
pop
sub
fs
jecxz
enter
and
and
ror
movs
aad
lea
ja
mov
lea
inc
and
xor
pusha
jmp
dec
sbb
push
test
or
jmp
lahf
lea
shr
leave
in
fst
or
pop
(bad)
pop
rcr
inc
leave
add
jb
sbb
pop
sub
mov
movs
mov
mov
dec
mov
adc
sbb
inc
add
adc
jnp
adc
loopne
pusha
add
adc
sub
and
pusha
leave
push
leave
pop
and
fdivr
pop
ret
mov
clc
jecxz
jl
pop
adc
(bad)
xor
fistp
and
sahf
pop
sbb
fcom
jb
dec
clc
lahf
add
in
push
mov
mov
fistp
jnp
retf
fiadd
imul
mov
push
push
mov
pop
and
popf
add
inc
scas
push
pop
adc
jl
dec
xchg
test
jle
adc
(bad)
or
xor
cmp
or
fcomp
dec
sub
push
lahf
push
or
push
lahf
call
jae
adc
inc
push
hlt
xor
or
xor
pop
push
sbb
lods
inc
cdq
and
clc
pop
push
out
mov
cwde
fwait
ret
adc
lods
outs
and
mov
neg
cmp
push
repnz
shr
inc
lahf
push
dec
and
test
jmp
(bad)
jmp
jmp
inc
and
add
es
jl
nop
lea
movs
jg
add
clc
cmp
std
hlt
add
push
dec
mov
fsubr
test
or
cmp
out
shl
lahf
shr
mov
or
ret
ss
jo
jle
call
xchg
in
in
cmp
push
inc
and
sub
mov
xor
or
stc
test
(bad)
(bad)
pop
push
add
out
mov
xor
cmp
jg
sbb
lods
dec
out
jle
pop
mov
xor
add
xchg
clc
jge
and
aas
mov
fwait
lea
cmp
dec
add
and
sub
mov
lea
ret
mov
cdq
xchg
push
dec
add
xchg
mov
pop
mov
stos
(bad)
fisttp
adc
jne
sbb
cmp
retf
xchg
push
and
adc
cmp
in
mov
loopne
inc
stos
fistp
out
sbb
sbb
(bad)
in
sbb
push
mov
es
shr
fistp
add
sub
push
cmp
dec
dec
enter
stos
stos
sbb
inc
lahf
or
mov
fild
sbb
mov
push
push
ins
popa
test
int
push
or
push
cmps
bound
and
mov
rol
jmp
add
not
add
add
mov
addr16
pop
and
xchg
xchg
inc
or
sti
jnp
scas
mov
in
pop
add
enter
mov
pop
lahf
push
std
xlat
mov
add
jmp
popf
lods
loop
pop
jle
xchg
adc
retf
or
sbb
xor
mov
mov
dec
sub
es
pop
ins
xchg
mov
(bad)
stc
jg
push
in
ins
clc
pop
pop
push
in
aad
(bad)
pop
xor
inc
fnstenv
mov
mov
out
adc
mov
mov
adc
or
retf
xchg
mov
jb
and
pop
popa
jae
sub
jge
hlt
pop
icebp
or
xchg
add
(bad)
lock
jle
jl
push
push
jb
adc
and
sbb
fmul
cmp
and
cmp
cmp
data16
sbb
(bad)
pusha
fcom
loope
sub
push
pop
xor
sbb
mov
repnz
mov
jb
adc
les
mov
push
pop
push
xor
outs
or
jp
cmp
pusha
(bad)
fsubr
rol
xchg
movsx
stos
xchg
enter
sbb
add
hlt
test
mov
(bad)
in
retf
push
std
mov
push
(bad)
pop
mov
adc
jne
fisubr
lods
retf
and
je
inc
jb
inc
inc
add
cwde
loopne
cmps
shr
and
loopne
shl
xor
mov
in
ds
call
push
retf
sbb
jge
mov
fcom
pushf
in
or
or
imul
fs
test
dec
adc
jnp
repnz
lds
or
and
call
jmp
add
pop
add
dec
(bad)
xchg
adc
or
mov
pusha
lds
ins
(bad)
adc
push
or
gs
ret
imul
pushf
dec
ds
aas
or
mov
and
add
pop
jmp
jl
and
(bad)
inc
inc
das
call
es
jmp
sub
and
into
adc
and
movs
push
mov
push
push
pop
push
push
or
dec
mov
loopne
adc
sbb
inc
loopne
jno
aam
fisttp
fcomip
mov
pop
push
or
je
sub
lods
fwait
mov
daa
pop
loop
call
outs
push
adc
pop
jge
cli
xchg
dec
add
add
jns
xor
mov
mov
test
shl
int3
dec
and
pop
ret
jg
je
pop
js
jae
and
scas
adc
loopne
aam
jl
lahf
mov
dec
push
or
pop
psrlw
lods
push
adc
or
jg
jo
jb
pop
ins
aas
pop
push
push
pop
leave
inc
pop
lds
ins
push
arpl
push
dec
pushf
into
inc
mov
rol
add
pop
int3
(bad)
xchg
mov
mov
add
sbb
sbb
les
arpl
shl
cwde
ror
xor
push
mov
stos
lahf
addr16
cmp
test
or
inc
add
or
test
jnp
aas
xchg
or
mov
mov
lahf
outs
inc
retf
dec
push
pop
jmp
inc
push
sbb
push
add
dec
jne
outs
mov
and
aas
pop
clc
mov
test
or
imul
mov
adc
mov
sbb
push
out
sub
cmp
adc
xchg
cdq
xchg
pop
mov
movs
ins
cmp
sbb
xor
retf
add
mov
mov
xor
pop
daa
shr
mov
adc
gs
xor
jle
lock
jo
(bad)
pop
push
pop
in
int
add
mov
dec
inc
push
or
cmp
clc
jp
(bad)
in
jg
push
sar
ret
imul
icebp
test
int
mov
jno
push
imul
and
clc
dec
test
inc
adc
or
iret
mov
cld
jmp
push
in
out
ins
xor
pop
fst
clc
and
and
(bad)
out
mov
xchg
stc
jno
jne
cdq
and
xlat
mov
sub
push
ins
cmp
jmp
sbb
push
push
xor
outs
and
ss
and
cmp
movs
icebp
sbb
int3
mov
pop
(bad)
cld
push
sub
cmp
push
push
dec
loopne
jmp
nop
xchg
cld
cmp
sti
test
mov
ins
dec
or
and
or
jmp
inc
mov
pop
ret
pop
push
pop
mov
cmp
shl
dec
mov
cli
mov
mov
movs
mov
xchg
or
ins
sub
jnp
push
in
add
xchg
or
cs
cmp
lahf
xchg
(bad)
retf
xchg
pop
(bad)
sti
cld
cmps
or
(bad)
adc
adc
ss
sar
or
mov
in
pop
ja
test
call
dec
dec
or
lock
mov
outs
inc
or
push
or
ret
or
inc
shr
push
or
xor
sub
push
sbb
or
ficomp
dec
dec
xchg
inc
fwait
xchg
jle
js
push
adc
out
div
lods
adc
scas
and
daa
sbb
adc
push
test
xchg
call
xor
repz
bound
lock
sub
jo
shl
push
or
hlt
ret
cmp
nop
cld
inc
cmp
pop
xchg
clc
jne
sbb
unpcklps
pushf
leave
pop
mov
add
repz
pusha
mov
sar
jg
pop
fbld
adc
(bad)
push
xchg
test
dec
loopne
xchg
dec
sbb
dec
lock
fild
sub
sbb
fcom
jno
lahf
dec
adc
hlt
fwait
clc
adc
mov
lahf
and
pop
xor
adc
or
test
adc
inc
add
mov
addr16
ror
lea
and
mov
dec
leave
add
imul
inc
dec
retf
pop
dec
pop
cmc
inc
pop
push
call
sub
(bad)
add
jg
xor
sbb
fbld
push
rcr
adc
xor
inc
ret
fistp
sbb
mov
and
sub
cmc
jg
cmps
add
or
mov
push
inc
(bad)
mov
cmp
mov
adc
imul
sub
fiadd
pop
mov
xor
pop
mov
fisttp
add
pop
inc
in
mov
mov
dec
(bad)
mov
fiadd
fcom
fist
adc
or
or
xchg
and
sub
lods
enter
lahf
mov
je
pop
pop
add
movs
pop
adc
inc
leave
sar
or
pop
sub
les
lahf
add
pop
in
push
xor
or
pop
call
or
push
lods
aas
pop
ins
mov
dec
aas
and
jne
jb
dec
fild
or
ins
and
add
push
or
pop
cwde
cmps
arpl
pop
aas
sub
adc
movs
dec
imul
nop
push
or
push
or
hlt
sub
leave
push
rol
pushf
pop
mov
add
aad
outs
popf
pop
mov
xchg
mov
or
add
xchg
push
jmp
inc
push
ins
pushf
std
fistp
xchg
pop
inc
fdiv
pop
cld
sbb
aas
cmp
sbb
or
dec
dec
jno
push
add
adc
imul
out
mov
sar
mov
dec
imul
(bad)
imul
mov
pop
jmp
or
add
lods
jle
aas
inc
adc
push
xor
jmp
aaa
sbb
push
loope
dec
test
in
arpl
int3
(bad)
mov
add
sub
mov
sub
cmp
pmaxub
inc
jecxz
push
add
adc
cmp
inc
dec
jmp
pop
add
pop
and
aaa
shl
mov
mov
inc
pop
lock
loop
(bad)
fisttp
add
inc
sub
jmp
adc
push
or
pop
pushf
or
cmp
call
sub
adc
jno
mov
xchg
hlt
mov
jno
ret
js
adc
inc
movs
inc
jmp
loopne
or
xchg
push
jecxz
inc
nop
fdivr
push
in
pop
mov
pushf
pop
jmp
push
out
fstp
jmp
or
daa
out
loope
call
test
mov
enter
mov
loopne
push
stos
pop
or
xlat
clc
(bad)
fcmovnb
cld
push
dec
mov
and
xor
mov
cmp
jae
inc
mov
pop
les
and
and
push
adc
pop
dec
lahf
adc
cmp
sbb
adc
ret
les
hlt
(bad)
pop
dec
sub
mov
bound
in
mov
pop
mov
jmp
dec
dec
xor
and
mov
dec
movs
pop
mov
and
out
mov
jmp
mov
jl
adc
adc
xor
arpl
in
aas
push
inc
or
or
dec
stos
or
add
repnz
ss
sbb
add
add
dec
cmps
dec
mov
adc
pop
adc
inc
pop
push
into
and
push
dec
cmp
mov
push
loopne
xor
mov
jg
fimul
dec
push
jle
dec
repnz
add
cmp
adc
push
xor
sbb
(bad)
mov
or
dec
sahf
bound
sbb
pop
aad
add
inc
mov
jp
test
inc
sbb
or
fsubr
xor
js
add
inc
or
or
mov
rcr
add
dec
xor
inc
mov
pop
loopne
(bad)
xchg
dec
arpl
cmc
lods
repnz
jp
cld
pop
inc
clc
shr
loopne
jne
sbb
or
fmul
jae
cdq
push
jecxz
or
stos
shufps
inc
push
xchg
pop
sub
dec
pop
stos
push
lahf
or
add
jl
dec
push
add
int3
nop
jg
addr16
pop
and
inc
and
mov
cli
cld
mov
add
sub
in
cs
adc
push
adc
mov
adc
push
mov
leave
push
add
mov
leave
or
adc
or
mov
or
adc
add
mov
and
sub
or
add
mov
xchg
rcl
push
inc
push
and
push
pop
mov
sar
sbb
je
inc
daa
pushf
mov
or
mov
mov
and
adc
popf
and
outs
ins
inc
inc
add
leave
cmp
in
add
fisttp
mov
fild
sub
popa
and
add
cld
inc
sub
pop
inc
add
jmp
push
fist
pop
lea
clc
push
dec
pop
and
xchg
mov
data16
xor
scas
imul
jp
cmps
jmp
aam
pop
jp
pop
xor
fcos
xor
inc
add
add
add
pop
jg
or
add
fdivr
and
add
ins
in
das
inc
or
pop
sub
push
ins
popf
fisttp
mov
xor
add
test
dec
and
fist
mov
and
test
pop
mov
adc
fild
(bad)
push
xchg
test
inc
enter
imul
pop
fisttp
push
push
mov
outs
fidivr
inc
mov
mov
stos
mov
jp
adc
mov
jg
adc
lods
push
mov
ins
pop
loope
add
inc
test
cmc
inc
mov
cmp
daa
stos
lods
pop
mov
scas
fistp
pop
pop
dec
fild
add
stos
mov
mov
fcomip
push
pop
fist
sbb
ins
mov
mov
fldenv
jmp
push
mov
mov
lahf
or
lods
fcmovu
xchg
sbb
push
ja
inc
mov
mov
fild
pop
fisttp
sbb
scas
dec
frstor
xlat
xor
ficomp
call
adc
push
adc
xchg
sub
ins
fiadd
and
xchg
in
inc
pop
add
fild
sub
mov
inc
aad
jle
movs
cmp
lods
scas
and
mov
fild
cs
xchg
adc
pop
sub
pop
test
or
mov
pop
push
pop
mov
lods
pop
pop
push
mov
sbb
mov
imul
pop
data16
leave
ins
pop
sub
push
dec
in
pop
or
mov
xor
or
dec
jmp
in
call
pusha
add
mov
test
jg
mov
sbb
lahf
adc
add
mov
pop
test
sbb
push
add
add
or
and
fild
cmp
(bad)
and
mov
aas
sub
push
dec
cdq
int3
mov
pop
jb
in
(bad)
je
pusha
fist
sub
sar
add
sub
add
cdq
and
jno
je
loop
sub
and
dec
popf
inc
sahf
cmp
xor
add
mov
inc
add
das
dec
xor
mov
inc
test
not
xor
push
or
sbb
ror
pop
das
mov
les
push
popa
push
pop
mov
inc
lahf
mov
inc
mov
mov
icebp
mov
pop
pop
jb
inc
mov
popa
mov
fild
and
cmps
jb
jg
inc
sbb
pop
adc
pop
(bad)
push
cmp
adc
push
call
scas
adc
adc
fld
mov
es
mov
adc
fwait
ja
lods
push
xlat
add
mov
push
mov
sbb
push
push
or
adc
mov
inc
inc
and
enter
rcr
or
add
add
adc
add
pop
or
pop
add
ins
jb
add
pop
aas
and
inc
mov
mov
enter
xchg
inc
cmp
add
in
adc
jne
push
mov
cmp
mov
mov
mov
add
push
lea
lds
xor
push
cmp
sub
fdivr
xchg
cmp
nop
int3
cmp
inc
loope
out
pop
add
pop
sbb
pop
dec
pop
nop
ins
push
mov
push
and
ins
push
or
and
mov
mov
mov
ins
cmc
push
pop
or
xor
adc
rcl
push
push
ss
or
dec
pop
pop
inc
push
adc
ds
sbb
cmp
or
mov
inc
inc
push
adc
scas
sub
cmp
xor
fldcw
and
aas
add
sbb
sbb
dec
data16
ds
sbb
sub
cmp
or
ins
ins
loopne
test
push
fs
pop
inc
movs
inc
enter
test
fmul
test
aas
test
lods
in
sti
push
aas
test
int3
nop
inc
test
aas
shl
adc
jb
stc
xchg
rcr
push
sbb
or
inc
fild
adc
or
in
pop
shl
pop
sbb
add
or
xor
or
movs
aam
pushf
das
dec
mov
aas
int3
in
add
or
pop
mov
dec
xor
and
inc
push
lahf
repnz
mov
dec
int
and
add
xor
xor
sub
add
fsubr
jmp
and
push
inc
outs
test
inc
and
adc
sub
adc
inc
call
add
dec
sub
mov
pop
add
xor
push
pop
stos
pop
push
enter
ins
bound
dec
inc
aas
and
in
jg
jl
adc
jg
or
nop
sub
add
adc
sahf
xor
pop
dec
add
sub
dec
jo
jl
push
push
pop
push
ret
jle
shl
in
cmp
mov
add
jmp
das
loopne
sbb
or
jo
inc
jl
sbb
fld
jmp
ins
push
out
addr16
xor
jae
fadd
pop
cmc
outs
shl
dec
int3
es
dec
popa
hlt
sti
and
mov
pop
mov
add
mov
jp
push
inc
adc
pop
cli
adc
cmp
(bad)
mov
hlt
push
push
les
inc
movs
jne
fadd
sub
add
and
add
jle
or
ret
mov
scas
add
test
aad
fidivr
nop
mov
pop
cmp
pop
adc
lds
cmc
dec
imul
loope
mov
(bad)
and
sbb
(bad)
stc
sub
push
dec
jmp
shl
jmp
cmp
test
stc
int
xor
icebp
pop
or
mov
mov
xor
stos
lods
mov
jmp
inc
jmp
dec
sbb
mov
(bad)
inc
test
pop
cmp
push
mov
xchg
jo
xchg
dec
(bad)
dec
inc
int3
jg
jge
js
push
addr16
rcr
jle
mov
mov
shl
int3
daa
mov
adc
call
cmc
sbb
es
adc
or
mov
bound
lea
xor
add
push
dec
ss
(bad)
dec
call
mov
mov
cmps
fcom
mov
je
inc
aaa
sbb
aam
or
les
fsubrp
adc
push
add
sub
sbb
pop
or
xor
fild
jae
jo
and
xor
fisttp
test
or
mov
int
scas
mov
mov
inc
loop
popf
dec
shr
push
nop
call
fnstenv
push
xchg
and
aad
cli
jbe
mov
cmp
push
dec
xor
inc
enter
dec
dec
movs
xchg
test
push
cmp
add
pop
scas
cmp
dec
push
sub
pushf
ficomp
fistp
mov
pop
xchg
sbb
aas
cmp
repz
call
movs
scas
test
inc
je
add
pop
mov
lock
sahf
aam
(bad)
mov
loopne
dec
or
push
mov
jp
inc
enter
xchg
mov
cmps
pusha
hlt
cmp
jno
loopne
stc
or
push
push
in
push
push
inc
mov
xchg
inc
xor
leave
test
cmp
inc
inc
and
or
mov
out
sub
add
inc
mov
inc
inc
jmp
pusha
in
mov
jmp
mov
mov
fmulp
adc
stc
call
push
mov
rcr
adc
test
xor
nop
hlt
mov
cmp
adc
lods
inc
loope
xor
call
mov
or
mov
out
in
add
ins
sub
jne
imul
test
aad
gs
mov
int
push
push
dec
adc
pop
aad
test
inc
or
cmp
fsubr
in
and
leave
pop
test
fldenv
jle
loop
jb
adc
(bad)
xor
sahf
add
mov
out
push
jne
dec
cwde
xor
inc
cmps
fcmovb
mov
dec
and
mov
push
push
aam
mov
add
and
sub
add
sub
ja
cld
push
movs
lea
push
add
shl
ss
fisttp
ret
pop
dec
dec
lock
frstor
pushf
xor
pop
inc
sub
fstp
test
int
push
ins
arpl
push
push
aad
aaa
mov
out
pop
add
sbb
hlt
imul
pop
mov
sub
sub
aas
nop
or
pushf
and
xor
jno
or
cmp
pop
test
les
sub
inc
and
adc
or
adc
sub
es
mov
dec
dec
pop
mov
sbb
loopne
aam
pop
adc
sub
test
mov
mov
test
mov
dec
out
and
shl
add
add
push
adc
jg
ficom
ret
push
mov
fsubr
cmp
cmps
pop
or
daa
(bad)
lods
or
adc
test
and
cli
dec
ficomp
push
and
jnp
mov
pop
mov
xchg
(bad)
add
sar
in
sub
adc
mov
jge
in
jle
aad
pushf
test
jo
mov
fst
and
inc
jae
call
imul
mov
sar
cmp
add
ret
xor
jp
push
ins
dec
dec
and
sbb
shl
sub
dec
sbb
test
jae
lock
mov
lock
nop
pop
or
ficomp
pop
jl
cmp
loopne
jnp
test
sbb
pop
loope
lods
cmps
aam
call
movs
lock
xchg
jmp
sbb
mov
pop
or
rol
inc
inc
sbb
xchg
dec
popf
pop
test
aam
inc
arpl
adc
movs
lahf
push
clc
sbb
mov
loop
xchg
pop
test
lods
pop
sub
adc
pop
inc
(bad)
repnz
pop
push
dec
jbe
call
adc
sbb
sub
(bad)
or
pop
adc
xchg
mov
or
rol
pop
mov
in
mov
jne
cmp
and
adc
in
jae
jne
lock
sar
xchg
lods
lods
icebp
test
test
jno
imul
enter
ja
in
sbb
push
push
sub
mov
out
adc
data16
or
xchg
cmps
popf
xchg
sbb
scas
movs
inc
push
lahf
sub
xor
lods
xor
call
popf
inc
jl
imul
hlt
mov
mov
mov
add
dec
cmp
rol
xlat
fsub
or
jl
jo
push
xor
xchg
ror
jno
retf
pushf
pushf
add
xchg
pushf
jne
add
ret
mov
push
mov
cwde
sbb
pop
hlt
mov
xchg
ins
xchg
lods
sub
call
enter
cmp
pop
(bad)
(bad)
out
ror
push
xor
xor
jbe
or
add
xchg
nop
mov
rcr
in
scas
mov
nop
adc
outs
mov
mov
aaa
in
loope
xchg
pop
mov
push
push
mov
inc
mov
imul
inc
pop
test
cmp
test
and
rcl
xor
mov
dec
or
cmc
dec
in
add
jecxz
sbb
xor
enter
pusha
push
cmp
fisubr
outs
pop
psubsb
jp
cmp
hlt
clc
push
fcom
and
ret
and
or
inc
mov
repz
add
sbb
sub
xor
push
sbb
data16
jg
xor
jl
sti
mov
retf
mov
dec
push
dec
nop
xchg
pop
mov
test
cmps
xchg
pop
add
mov
int3
xchg
sar
and
inc
xor
or
test
loopne
fst
dec
push
sub
sub
pop
dec
rcl
dec
dec
lea
pop
mov
cmps
in
aas
stos
mov
add
xor
mov
mov
pop
into
push
or
sub
and
adc
xchg
outs
sub
jl
xor
imul
add
adc
dec
cdq
dec
push
add
dec
xor
pusha
fs
and
je
inc
loope
xchg
jl
shr
nop
imul
dec
and
loope
add
pop
sub
push
nop
add
out
xchg
or
inc
(bad)
leave
push
xor
xchg
add
add
sub
or
add
add
cmp
inc
push
neg
or
push
xor
mov
jb
pushf
int
sub
loopne
retf
in
add
adc
mov
inc
pop
xchg
rol
(bad)
mov
push
xlat
mov
ror
xor
adc
jo
js
adc
dec
ds
imul
mov
mov
ja
movs
mov
cmp
stos
je
fmul
ins
add
(bad)
popa
imul
stos
pop
loop
arpl
jp
push
movs
xchg
rol
mov
mov
jp
js
sahf
ja
cmp
iret
dec
popa
xlat
rol
call
xor
fstp
jns
dec
dec
mov
or
cmp
mov
sub
and
mov
outs
test
js
pop
or
je
or
jnp
enter
sbb
inc
cs
inc
jo
inc
inc
out
ins
xor
cmp
or
push
inc
lods
lea
ins
sbb
mov
mov
nop
xor
fmul
add
fimul
or
inc
mov
jne
push
pop
inc
icebp
jns
ret
push
ficom
push
xor
jo
xchg
push
sar
xchg
div
xor
and
sbb
mov
or
mov
push
or
shr
jg
pusha
cmps
add
add
push
movs
xchg
in
jb
out
push
jns
mov
in
test
sahf
jb
and
cmp
xchg
mov
mov
adc
pop
add
out
js
sbb
imul
sbb
jmp
lock
imul
push
shr
xor
lds
test
pop
pop
aas
or
fwait
xchg
pop
lea
out
ins
pminsw
mov
push
dec
fs
mov
add
add
xchg
loope
in
in
call
ror
inc
pop
shr
in
mov
pop
sub
es
mov
or
in
addr16
jae
dec
in
fsub
pop
test
cmp
lds
and
cmps
aam
mov
test
jmp
loopne
sub
pop
popf
mov
jmp
push
push
fbld
pop
and
int3
inc
push
or
inc
pop
push
adc
jl
dec
test
or
dec
sub
jg
cli
shr
or
push
add
in
hlt
mov
pop
mov
lock
mov
push
mov
call
sub
inc
lods
loope
mov
cmps
xchg
popa
mov
pusha
xchg
imul
mov
sub
add
pop
cwde
(bad)
in
jns
icebp
sub
js
das
pusha
je
dec
arpl
shr
and
add
push
inc
mov
mov
mov
ja
sbb
or
jno
push
mov
or
aad
out
dec
sub
sbb
push
add
or
mov
sub
popa
mov
push
sub
add
leave
add
hlt
dec
nop
or
ds
das
lock
repnz
add
and
pop
add
or
add
xor
mov
dec
add
mov
push
in
sub
and
or
or
stc
or
adc
daa
or
xor
xor
xchg
out
lds
and
jl
inc
lock
jle
repz
sub
push
dec
je
and
mov
sub
xor
sbb
xchg
adc
dec
and
push
pop
mov
and
sbb
hlt
cmp
std
push
aam
jecxz
fadd
sbb
add
or
pop
jmp
inc
jge
push
jle
lea
mov
cmp
loope
outs
pop
sbb
xor
shl
mov
add
cmp
adc
pop
cmc
mov
dec
dec
push
rcr
push
shl
pop
pusha
lock
jmp
xchg
pop
push
push
fidiv
or
pop
cmp
dec
or
repz
inc
imul
test
scas
in
mov
sbb
xor
cwde
bound
sbb
sbb
idiv
fcomp
and
inc
jmp
mov
add
pop
dec
or
xor
(bad)
lahf
pop
imul
pop
cld
mov
pop
xor
pop
jne
xchg
jle
cwde
fisttp
sub
pushf
in
sbb
xchg
lahf
inc
lods
pop
xchg
adc
int
mov
test
aas
das
cmps
in
sbb
loopne
lock
nop
sub
sbb
jecxz
pop
jns
add
scas
loopne
fcom
mov
rcl
inc
cmp
jmp
add
adc
xor
add
in
push
mov
and
jbe
jae
sbb
inc
mov
imul
add
xor
push
sub
gs
and
enter
(bad)
int3
repnz
inc
pop
fs
pop
leave
adc
gs
add
and
or
mov
xchg
out
add
inc
sbb
out
les
sbb
or
xor
push
sbb
jne
test
sub
ret
ret
out
xchg
(bad)
hlt
arpl
or
mov
mov
or
in
rol
fcomp
push
outs
cmp
mov
gs
or
jmp
adc
add
inc
leave
inc
add
leave
inc
leave
inc
add
cmps
adc
inc
or
cmps
iret
adc
ret
test
mov
dec
bound
jns
sbb
cdq
add
sub
sub
add
sbb
and
pop
push
push
cmp
shl
sub
dec
nop
add
ret
jge
dec
cwde
bound
aad
pop
xchg
cmp
add
data16
in
add
cmp
sub
add
hlt
dec
push
mov
add
jge
mov
js
clc
jbe
dec
scas
mov
sbb
imul
xor
xchg
jmp
mov
inc
push
pop
or
in
lea
and
jns
and
mov
xchg
push
sub
dec
adc
add
add
push
sub
jmp
or
inc
dec
cmp
sbb
loopne
push
repz
push
and
js
add
ins
sbb
cwde
fwait
ss
adc
mov
sub
add
ins
rol
daa
pop
or
adc
cmc
xor
or
lods
cmp
ret
mov
into
cld
pop
ret
(bad)
add
sbb
clc
hlt
movs
jnp
push
adc
pop
push
xchg
mov
add
add
and
sub
idiv
push
adc
popa
sbb
or
data16
and
sar
lahf
jecxz
xchg
ds
cli
mov
push
mov
out
or
arpl
add
jns
and
inc
(bad)
or
das
add
push
inc
add
add
inc
les
cli
ret
icebp
add
adc
pop
pop
xor
mov
push
push
xor
scas
mov
xor
cld
les
ds
push
adc
ret
cmp
inc
lods
test
and
pop
push
lds
adc
or
mov
ror
pop
add
add
cmp
fadd
in
jg
push
and
dec
xor
xor
pusha
add
add
inc
ret
add
cld
and
jne
xor
dec
adc
or
in
sar
mov
clc
push
push
add
hlt
push
(bad)
shl
and
pusha
sti
mov
leave
js
push
(bad)
add
fcomp
jmp
pop
or
std
inc
retf
jle
inc
test
xor
xchg
arpl
adc
add
or
jg
pop
inc
push
pop
jg
aas
xchg
cmp
pop
pop
pop
aad
mov
lock
enter
sbb
xor
cmp
pop
add
mov
les
add
test
(bad)
les
ret
add
add
(bad)
push
retf
push
enter
(bad)
retf
cmps
jo
jp
stos
shl
rol
mov
pop
jnp
inc
mov
push
xchg
jae
pop
int3
shl
ins
cmp
pop
and
push
ins
pushf
or
mov
les
sahf
cs
les
in
mov
jge
or
push
mov
test
iret
enter
and
shl
and
add
outs
mov
lock
or
xor
repnz
inc
in
cwde
mov
ds
xchg
loopne
daa
dec
es
sub
sbb
fadd
lods
cmp
lods
lods
jne
and
and
popa
nop
inc
cmp
add
sbb
dec
push
test
xchg
(bad)
shr
rol
movs
pop
push
cmp
int
in
shl
cmp
mov
jl
pop
lods
inc
mov
ins
adc
iret
push
call
and
daa
jno
sub
icebp
push
jmp
call
dec
(bad)
in
mov
int3
dec
and
addr16
xlat
push
add
stc
push
push
ja
jmp
xor
or
pop
loope
sub
mov
or
cld
dec
mov
mov
iret
out
and
xchg
mov
add
sub
loope
and
jb
mov
nop
cmp
inc
push
rol
jecxz
pop
xor
mov
mov
lods
shl
and
inc
xchg
mov
jb
pop
add
xchg
repnz
enter
dec
cmp
sub
cmp
push
mov
jecxz
imul
sbb
ret
dec
cmp
push
jne
push
inc
pop
icebp
daa
pop
mov
or
adc
add
push
int3
stos
add
push
pop
int3
(bad)
jmp
and
test
adc
push
jbe
add
lds
jno
adc
in
mov
in
jnp
dec
xor
in
pop
and
pop
iret
repz
ret
or
call
adc
add
pushf
adc
ins
pandn
and
call
pop
retf
hlt
rcl
cwde
js
test
js
lods
jne
dec
and
or
pop
int
push
or
(bad)
pop
and
into
mov
xor
shr
pop
sahf
push
loope
popf
fs
inc
pop
iret
push
ja
int3
push
arpl
js
test
in
jmp
inc
cwde
cld
jg
mov
pusha
xor
inc
and
xor
loope
mov
and
aad
psadbw
cmp
sbb
(bad)
test
or
in
cmp
mov
or
mov
xor
push
mov
ficom
in
pop
add
push
add
jl
jbe
(bad)
jbe
push
push
test
mov
sbb
push
adc
xchg
xor
mov
test
push
test
push
inc
pop
sar
mov
out
sub
je
sbb
or
ins
jo
dec
ret
xchg
mov
daa
adc
test
sti
jo
mul
out
push
inc
into
sbb
push
jecxz
add
mov
call
push
dec
inc
hlt
mov
or
pop
mov
lock
add
push
sbb
sbb
fild
xor
mov
pop
loope
xor
stc
ins
jne
nop
pop
or
inc
pop
push
popf
mov
dec
jmp
mov
pop
sti
push
dec
add
dec
ss
push
clc
push
int
push
push
push
ss
push
cmps
je
imul
and
mov
fdivrp
sub
adc
push
clc
ins
(bad)
push
or
lahf
xchg
dec
cmp
add
add
or
cmp
or
add
mov
push
mov
pushf
cmp
fadd
mov
xor
mov
out
adc
jecxz
mov
(bad)
lods
les
scas
fadd
icebp
imul
push
dec
sbb
mov
or
xchg
inc
movs
sar
dec
sti
add
adc
aam
sbb
pop
movs
and
pop
subps
jnp
push
ror
jp
adc
cmps
push
mov
int3
aas
(bad)
push
ror
push
adc
call
push
rcl
inc
out
xchg
pop
(bad)
fld
push
push
pop
shr
lods
ret
or
les
and
test
mov
stos
in
adc
xchg
cmp
icebp
pop
mov
add
bound
mov
cmp
add
cmp
rcr
jle
ret
pop
mov
adc
inc
ret
xor
jmpw
out
test
imul
sub
test
fdivr
push
js
mov
mov
cld
push
sub
xchg
cld
xor
loopne
jmp
xor
sbb
or
add
or
je
add
ss
movs
movs
clc
into
frstor
inc
mov
jg
inc
ds
dec
or
push
icebp
sub
inc
lock
sbb
xchg
adc
mov
push
fmul
mov
sub
aas
jne
pop
fcom
mov
push
shr
pop
push
dec
nop
ins
pop
or
in
cmc
mov
into
dec
loop
inc
stc
push
lds
mov
sbb
mov
enter
daa
jmp
add
(bad)
xchg
dec
ins
repnz
push
cmp
(bad)
mov
cmps
mov
pop
pop
imul
mov
mov
push
and
adc
xor
mov
xchg
rol
ss
lahf
lea
adc
or
arpl
movs
pushf
cmps
xor
shr
and
lods
pop
movs
daa
or
aaa
pop
mov
jg
inc
outs
mov
ds
lock
push
mov
mov
mov
(bad)
(bad)
adc
int3
mov
and
push
xor
xchg
pushf
data16
dec
sar
imul
ins
sbb
ins
ficom
adc
call
add
mov
sbb
jne
or
dec
int
das
push
xchg
push
scas
(bad)
xor
push
dec
sub
mov
imul
adc
pop
enter
pop
or
push
inc
sub
into
and
pop
fcmovnbe
inc
addr16
enter
mov
xlat
sbb
scas
cld
push
mov
push
jmp
mov
ss
dec
push
cmp
adc
imul
loop
pop
jecxz
or
sbb
fadd
push
add
or
dec
movaps
mov
xchg
ss
dec
in
shl
sahf
and
xor
rcl
mov
les
push
enter
push
enter
jl
daa
int3
pushf
movs
cmp
rcr
lods
jecxz
jecxz
loop
xchg
das
push
xchg
xchg
retf
loopne
rcl
arpl
cwde
inc
jl
pop
inc
call
add
add
lahf
mov
push
jnp
bound
int
pop
hlt
mov
fbstp
imul
stos
or
fisttp
push
pop
repnz
or
int3
mov
sbb
fiadd
add
pop
pop
sub
mov
cmps
dec
pop
pop
sbb
jecxz
imul
leave
adc
cmp
sbb
push
sub
pop
push
arpl
fwait
jp
mov
pop
and
aad
cmp
sahf
ret
inc
movs
ror
jmp
inc
cwde
inc
sub
test
repz
stc
clc
cmp
stc
sbb
jge
sub
xor
inc
cmc
rcr
cmp
outs
inc
ins
add
jp
dec
and
fs
sbb
push
xchg
xor
or
xor
test
xor
cmps
pusha
sub
mov
div
mov
mov
rep
push
(bad)
ficomp
fisttp
pop
les
add
jmp
cmp
adc
adc
mov
jb
shl
push
jmp
inc
fmul
jo
adc
mov
adc
mov
(bad)
mov
sbb
add
sub
pop
inc
sub
nop
fdivr
or
or
dec
mov
jne
push
jge
dec
(bad)
stc
add
push
sub
push
or
dec
shl
push
mov
inc
out
dec
fucompp
push
or
xchg
or
adc
xor
pop
ds
dec
es
inc
xor
popa
sbb
cmp
in
rcl
pop
xor
jo
mov
xchg
or
inc
pusha
adc
inc
pushf
xchg
xchg
pop
jae
mov
cmps
hlt
outs
inc
adc
call
(bad)
jmp
out
or
xchg
pop
pusha
cmc
in
mov
inc
mov
adc
push
call
nop
jbe
faddp
daa
push
sbb
or
in
adc
pop
inc
shl
add
loope
mov
adc
jp
loopne
loopne
dec
or
lods
add
call
fist
jmp
inc
xchg
pushf
(bad)
sahf
movs
sub
bound
lods
ins
jb
adc
cmp
das
hlt
inc
jo
mov
mov
outs
mov
mov
or
or
adc
cdq
test
inc
add
add
mov
rol
cmp
cmp
xchg
into
cli
push
or
das
adc
sub
mov
xchg
sub
or
jmp
mov
sbb
mov
fcom
cmp
xchg
inc
xchg
or
or
clc
movs
fwait
hlt
cmp
punpckhdq
inc
fsubr
leave
mov
outs
inc
hlt
out
ja
fcomp
imul
push
ror
xchg
ins
jo
adc
dec
in
ret
add
sahf
sbb
push
inc
cmp
xor
outs
(bad)
jl
and
sbb
inc
or
call
sub
pop
(bad)
outs
mov
sub
(bad)
jp
and
mov
fwait
jmp
cmps
push
out
xchg
dec
lea
ins
and
sbb
dec
add
ret
outs
mov
pop
das
nop
or
aad
aaa
ds
mov
pop
jno
retf
push
push
mov
jmp
pop
repnz
les
mov
pop
add
jae
add
and
dec
adc
push
dec
sub
mov
add
cmp
outs
aas
in
enter
call
or
stos
pop
and
or
sub
inc
fwait
sbb
or
add
nop
push
or
adc
aam
push
popa
popf
push
add
cmp
inc
dec
lea
lods
inc
and
inc
sub
aad
(bad)
xchg
jmp
push
inc
xchg
outs
cmps
iret
stos
inc
lock
or
cdq
pushf
leave
and
xchg
xchg
pop
retf
and
sub
cmp
nop
or
fdiv
fldenv
(bad)
xchg
mov
adc
jne
jns
lds
pop
sbb
std
sub
arpl
pop
out
(bad)
into
push
call
add
clc
mov
shl
sbb
outs
shr
rol
sub
cmp
pop
mov
loopne
adc
lds
je
icebp
gs
sbb
out
jb
sahf
sahf
sbb
std
pop
in
pop
cmps
aas
(bad)
cmc
inc
sbb
cmc
pop
popa
pop
test
daa
sbb
or
fs
lods
in
mov
mov
ret
add
sbb
push
je
inc
sbb
sahf
pop
push
sub
loopne
das
lock
imul
and
mov
sbb
loop
aaa
int3
enter
push
pop
inc
inc
clc
adc
sub
fnstsw
add
adc
mul
adc
mov
and
dec
or
mov
inc
sbb
fwait
push
test
ret
mov
ret
fcom
sbb
jg
or
cmp
jo
shl
leave
int
inc
and
cmp
pop
mov
aas
mov
sbb
popa
adc
adc
adc
add
fisttp
shl
movs
fisttp
rol
and
mov
pusha
mov
adc
mov
imul
dec
xor
sub
sub
fcom
adc
inc
ret
inc
(bad)
daa
pop
rol
inc
xor
adc
dec
xor
jmp
je
or
es
lds
jns
loopne
push
mov
xor
jne
inc
cli
dec
jb
aad
dec
mov
xchg
imul
jne
xchg
xchg
xor
loopne
jb
sbb
xchg
fdiv
add
adc
push
(bad)
icebp
push
jne
sbb
mov
pushf
xchg
push
xor
mov
lock
jns
movs
push
lahf
pusha
mov
push
push
shl
jmp
xchg
inc
inc
sbb
or
stos
xchg
inc
es
pop
or
lods
xchg
add
outs
call
ja
sbb
nop
mov
pop
mov
or
out
dec
pop
pop
jecxz
dec
adc
and
mov
and
retf
mov
stos
pop
jg
push
ficom
mov
or
test
lods
pop
xchg
and
jno
lahf
imul
movs
adc
pop
call
lods
dec
adc
aad
int3
sbb
sub
pop
sbb
and
pop
je
lods
shr
dec
mov
scas
stos
xchg
or
adc
cmps
daa
(bad)
sub
int
adc
sub
sub
jmp
push
pop
rol
mov
sub
mul
pop
push
cmp
loopne
inc
test
inc
(bad)
adc
mov
rol
outs
popf
dec
(bad)
and
cdq
stos
mov
adc
add
cmp
cld
jae
or
push
jl
jno
into
push
sub
push
jp
xchg
inc
jmp
adc
cld
sub
xor
pop
test
icebp
repnz
jnp
bound
push
cli
add
je
push
nop
pop
jbe
clc
fsub
imul
xchg
or
pop
dec
mov
ficom
cmc
loopne
jg
push
adc
mov
int3
repnz
mov
and
push
or
outs
retf
std
cmpxchg
pop
(bad)
adc
ins
lods
sbb
lds
pushf
stc
dec
adc
pop
sbb
in
scas
mov
test
ror
ins
aas
(bad)
sbb
jecxz
push
shl
sbb
or
xor
and
je
int
call
sub
xchg
add
cmp
je
fsubr
lds
jmp
sbb
jne
stc
pop
mov
ret
mov
cmp
sub
fld
add
sub
test
and
adc
add
iret
test
or
movs
sahf
and
inc
xor
push
enter
sbb
mov
and
sbb
and
xor
and
sbb
movs
sub
stos
jne
mov
pop
shl
mov
loope
xchg
test
data16
or
push
push
icebp
add
inc
lock
add
inc
xchg
jle
push
and
and
test
cmps
jg
pop
add
mov
nop
ficom
clc
shl
or
push
aam
aam
xor
(bad)
mov
push
dec
pop
and
or
mov
sbb
push
cmp
mov
lods
or
dec
arpl
pop
in
test
xor
dec
sbb
mov
jno
sbb
jnp
add
and
sub
jge
int
mov
fcomp
fisub
shl
in
inc
rcl
jmp
sbb
sub
jge
imul
fsubr
in
fsubr
adc
add
fdiv
fsub
add
sbb
mov
outs
xchg
stc
inc
or
add
or
std
xchg
popf
jo
dec
movs
xchg
fdivr
pop
das
jne
and
fdiv
cwde
push
add
xor
dec
mov
jg
push
lods
dec
adc
or
mov
mov
add
jb
imul
ret
test
push
clc
adc
(bad)
call
ins
and
mov
or
pusha
sub
cmp
sbb
cmp
stos
hlt
adc
or
pusha
adc
and
daa
aas
and
ds
pusha
aaa
out
sahf
cmp
jmp
jge
les
std
pop
or
mov
sub
and
mov
ret
and
or
pop
cmp
jmpw
add
mov
sub
sti
xchg
rol
push
xchg
lahf
mov
mov
and
or
push
movs
in
mov
test
ficomp
or
add
push
add
jp
ret
or
aas
clc
sbb
lahf
dec
sbb
lea
xor
icebp
rcl
jg
cmp
pop
lahf
jl
mov
sbb
add
mov
pop
push
mov
gs
mov
mov
push
add
and
mov
(bad)
cdq
add
adc
test
loopne
ror
lods
mov
and
jno
sar
loop
sub
push
jp
in
push
pop
xor
sub
int3
cdq
sub
jmp
jg
adc
xor
js
call
in
call
shr
add
outs
fsubr
aaa
pop
lds
adc
outs
int3
int3
adc
inc
in
loopne
jmp
and
rcl
or
push
adc
pop
inc
or
ret
or
cmp
imul
and
sub
mov
cmp
cmp
lods
inc
pop
add
sbb
arpl
outs
lods
bound
inc
in
fsubr
xor
jg
inc
xor
xchg
stos
mov
sbb
sbb
xor
lock
out
popa
jb
lock
xor
mov
and
inc
scas
(bad)
mov
cmp
jb
add
mov
jg
sbb
je
pop
sbb
(bad)
push
push
js
mov
push
and
retf
mov
or
popf
aam
clc
sti
cs
cs
and
and
inc
inc
imul
mov
pop
and
mov
fwait
mov
or
sbb
fcomp
leave
push
lods
div
ins
pop
inc
jnp
and
imul
xchg
xor
mov
inc
add
mov
inc
pop
jmp
pusha
xlat
scas
lods
mov
ror
mov
into
arpl
jae
jmp
mov
dec
sbb
jne
pop
call
dec
cs
push
xor
ret
xchg
sub
sub
les
pop
mov
imul
leave
adc
sub
or
add
or
call
push
leave
add
inc
and
mov
aas
adc
or
mov
jb
xor
add
jp
mov
jmp
test
push
mov
rcl
call
mov
int
les
mov
ja
jns
inc
sbb
aas
fidiv
adc
add
cli
pop
pop
pop
push
adc
mov
sti
jecxz
or
jge
sub
push
push
iret
cmp
jae
inc
jno
test
or
ins
cmp
mov
js
shl
pop
sub
lahf
nop
dec
popa
xor
fs
sbb
inc
mov
dec
aad
pop
inc
in
out
in
sub
sub
mov
add
loopne
addr16
icebp
mov
or
jo
push
lods
and
dec
add
loop
movs
hlt
xor
and
fld
fld
data16
jg
push
cmps
mov
dec
pop
sub
or
add
pop
dec
or
xchg
xlat
mov
mov
into
xchg
pop
xor
add
dec
nop
add
add
mov
dec
inc
inc
inc
sub
(bad)
sar
pop
lods
lock
mov
lock
lods
shl
push
mov
push
sar
add
push
or
dec
sbb
lea
xchg
mov
sbb
cmp
stos
jecxz
rol
test
push
outs
xchg
jmp
iret
adc
sbb
mov
rcl
mov
retf
add
aad
lds
xchg
(bad)
hlt
int
jbe
pop
ins
sbb
retf
mov
cmc
push
cmps
retf
adc
in
push
mul
shl
push
pop
mov
sub
fild
(bad)
lods
adc
pop
mov
mov
mov
mov
or
jge
mov
and
test
jg
mov
sub
sbb
mov
cmc
fcom
sbb
pop
jge
cmp
inc
stos
pop
pop
add
or
dec
jmp
push
jns
mov
sub
cmc
pop
test
(bad)
mov
les
lahf
ficomp
or
js
inc
pop
mov
add
fldl2t
sub
test
push
add
ins
and
fistp
stos
clc
inc
cmp
mov
popa
pushf
in
xchg
sub
mov
aas
push
sbb
push
test
mov
jnp
add
jge
shufps
fld
scas
and
mov
mov
lock
ror
test
or
push
pop
mov
cwde
xor
xor
dec
test
or
jbe
call
pop
xchg
outs
mov
shl
sbb
xchg
sbb
bound
dec
or
dec
leave
fmul
fbld
mov
push
leave
inc
and
popa
pop
adc
xchg
sbb
enter
pusha
outs
pop
cmp
enter
rcr
aaa
push
adc
push
mov
js
mov
lahf
and
push
add
pop
stos
pusha
and
les
cdq
mov
in
push
mov
xchg
or
shl
test
and
adc
ret
std
push
sub
inc
push
mov
jmp
adc
dec
push
aaa
fistp
lahf
pop
mov
shr
loope
ins
test
push
mov
aas
mov
jns
sahf
les
jnp
lods
lock
clc
jle
fld
pop
or
outs
jecxz
push
loopne
push
cmp
push
sbb
jne
push
and
pop
mov
fisubr
int3
mov
out
mov
add
mov
xor
and
imul
xchg
pusha
adc
call
mov
movs
outs
pop
jnp
lea
add
xlat
ds
ins
add
jge
dec
cmp
mov
push
add
mov
add
je
adc
dec
dec
inc
pusha
cmp
lock
loope
retf
retf
mov
imul
push
jb
mov
sbb
fldln2
sbb
jle
popf
mov
pop
arpl
cld
or
cdq
idiv
shl
lock
and
add
retf
jl
or
jp
pusha
dec
mov
pop
xchg
or
mov
lds
in
idiv
add
dec
inc
sub
mov
mov
adc
cld
fcmovb
imul
fcom
pusha
sbb
push
and
ins
retw
cmp
arpl
ins
pusha
aad
add
ins
loopne
stc
push
adc
dec
xchg
add
pop
add
mov
jmp
dec
ffreep
pop
mov
dec
xchg
popa
add
test
sub
fild
mov
sub
in
ret
or
mov
cmp
mov
rcl
(bad)
sbb
push
jb
cmp
pop
cmp
ret
pop
sbb
pusha
shl
pop
out
sbb
sbb
push
add
or
pushf
movhps
fs
(bad)
fmul
dec
enter
addr16
push
cmp
mov
xor
in
pop
cmp
clc
inc
adc
inc
sub
cmp
dec
dec
push
dec
pushf
shl
lahf
mov
xchg
xor
xchg
fistp
mov
push
scas
xchg
add
sbb
push
imul
or
push
nop
add
ins
sub
pop
xchg
int3
push
jae
adc
dec
add
movs
rcr
push
daa
add
inc
pop
xor
jg
mov
ins
stos
xor
das
lahf
ficom
jno
lahf
loope
xchg
sbb
adc
int
push
pop
movs
(bad)
mov
lods
test
dec
addr16
(bad)
fsubr
popa
call
cmps
xor
mov
clc
jge
xor
jns
sahf
jp
loope
push
imul
push
pushf
cmp
je
ins
add
xchg
outs
inc
lods
shr
hlt
jecxz
js
hlt
jmp
jmp
xor
or
shr
pop
and
jge
add
loopne
cld
adc
inc
ins
jo
int3
push
aaa
mov
add
adc
add
gs
sahf
lea
add
sbb
sub
mov
nop
adc
pop
jmp
cmp
fucomip
xchg
jmp
and
bound
into
inc
test
pop
jge
jne
and
inc
xor
aas
into
fsub
adc
les
sbb
jg
inc
sub
iret
cmp
mov
inc
push
xchg
or
aad
in
and
movs
inc
add
movs
add
nop
lahf
(bad)
fneni(8087
or
(bad)
push
or
je
scas
or
(bad)
fiadd
xchg
sub
js
xor
and
jo
xor
and
push
xchg
dec
push
cmp
rcr
jecxz
dec
pop
cld
lods
push
jno
aas
rcr
(bad)
(bad)
pop
xor
in
adc
pop
pop
and
cmc
lds
jo
gs
and
or
adc
test
sbb
inc
repnz
test
in
pop
ror
dec
lss
inc
push
rcl
das
sub
and
pop
cmps
pop
call
in
cmp
sbb
push
mov
mov
mov
scas
inc
loop
aas
jge
mov
push
add
push
fmul
push
or
or
and
cmp
fsubr
ror
fmul
pusha
jae
pop
inc
push
rol
iret
xchg
sbb
jecxz
imul
mov
jp
add
inc
repnz
fadd
and
cdq
mul
jl
je
adc
xor
ins
push
jne
loop
pop
sub
push
xor
add
inc
push
out
mov
cmp
mov
movs
and
add
stos
dec
dec
and
mov
cs
pushf
fstp
mov
dec
ss
test
inc
jmp
push
adc
movs
aad
ret
inc
sub
nop
add
repnz
aam
add
sti
ucomiss
add
ins
loope
sar
push
xor
rol
pop
cdq
(bad)
enter
pusha
xor
adc
movs
pop
int3
in
nop
add
nop
in
out
retf
aam
cmps
packsswb
adc
and
jb
mov
pop
lea
loope
sbb
les
sub
sbb
(bad)
stos
xchg
clc
add
jo
push
add
loope
xor
mov
sub
or
add
lods
pop
mov
(bad)
cld
mov
fdivr
aad
jmp
call
xor
jmp
sbb
inc
sti
nop
es
pop
aaa
lea
and
or
inc
inc
arpl
add
adc
rcl
push
xlat
adc
imul
lock
sub
xor
xchg
pushf
ret
mov
jo
into
dec
adc
xor
sbb
bound
mov
sar
sahf
and
xchg
movs
test
add
dec
sub
test
push
and
mov
lea
and
add
fiadd
or
adc
and
or
lods
icebp
int
xchg
ja
lahf
sbb
xchg
mov
cmp
scas
mov
(bad)
jb
push
and
jmp
in
dec
cmp
adc
push
jns
ja
test
mov
jmp
inc
shl
cmp
es
stos
and
inc
mov
jbe
add
add
pop
movs
hlt
add
and
jge
in
outs
bound
sar
adc
cdq
add
pop
rcr
adc
mov
push
sbb
jl
cld
sub
xor
add
mov
jg
cwde
stos
xchg
push
dec
xchg
push
sub
das
mov
xchg
(bad)
push
sbb
add
mov
pop
clc
ins
les
movs
mov
dec
push
dec
xor
rol
outs
ins
xchg
ins
mov
enter
xchg
and
sti
or
or
aam
(bad)
movs
sbb
push
mov
adc
test
adc
xor
dec
rcl
push
inc
shl
fadd
icebp
inc
or
mov
jp
jmp
enter
jae
sbb
popf
fmul
icebp
rcr
push
and
rcl
mov
shl
mov
jmp
test
addr16
fsub
jp
xor
push
xchg
cmp
mov
mov
sbb
push
adc
rcl
pop
in
popa
(bad)
gs
cmps
inc
add
lock
xchg
lock
movs
setg
or
push
jp
xchg
push
or
push
pop
ins
pop
sbb
mov
xor
mov
jmp
inc
pusha
or
or
js
dec
cmps
js
inc
push
jne
ficomp
outs
sub
mov
stos
mov
xchg
xor
dec
adc
daa
inc
fwait
mov
shr
imul
sbb
outs
ror
add
test
push
call
cmps
cmp
and
popa
lock
inc
sub
dec
pop
cmp
jne
pop
lods
and
ret
or
sbb
or
mov
adc
or
jns
sbb
inc
fbld
inc
arpl
lods
or
mov
jl
ds
pop
int3
aas
mov
sub
leave
or
shr
cmp
mov
xor
sub
sub
jno
clc
add
pushf
lock
in
dec
cmp
lock
or
mov
daa
lods
mov
aas
or
pop
loope
add
mov
jmp
aam
lods
rol
mov
adc
mov
inc
add
cmp
mov
mov
push
or
fbld
mov
aam
add
lahf
pop
xchg
push
leave
shr
inc
add
loope
or
or
add
or
adc
inc
pusha
icebp
add
or
push
xor
shl
js
retfw
adc
sbb
inc
push
psubw
push
inc
daa
int
lods
or
pop
inc
pop
jge
adc
mov
dec
and
ror
jg
imul
and
or
push
sub
xor
repnz
cmc
adc
and
aaa
adc
call
out
add
add
popa
inc
es
fimul
xchg
outs
mov
sar
push
scas
pcmpgtd
dec
popf
adc
fwait
fwait
(bad)
fild
arpl
inc
pop
inc
sbb
rol
mov
adc
imul
mov
retf
inc
xchg
ss
xor
and
sub
jmp
or
jle
sbb
jae
or
jno
xor
mov
mov
setb
pop
xor
or
or
bound
int3
mov
dec
je
pop
stc
push
pushf
call
sub
mov
lock
rol
(bad)
rol
mov
add
sub
hlt
or
clc
clc
sbb
in
add
daa
in
push
loopne
or
mov
loopne
add
jge
adc
sub
fcomp
add
xchg
and
mov
inc
xor
adc
loopne
inc
loopne
and
lods
ins
lods
loop
jne
test
(bad)
nop
stc
cmps
mov
adc
pop
and
mov
mov
fcomp
add
retf
lds
imul
or
xor
add
cmp
adc
jg
xlat
(bad)
sbb
ret
adc
adc
movs
jp
ja
leave
or
mov
(bad)
js
or
xchg
push
or
and
imul
pop
xchg
mov
sbb
movs
mov
out
mov
xor
mov
ret
ror
pop
dec
cs
test
add
xor
push
sub
out
adc
push
mov
and
cld
cmp
or
jg
push
aam
push
mov
or
dec
je
(bad)
imul
pop
push
retf
add
xchg
mov
and
in
or
lea
fmul
jg
push
cmc
dec
fsubr
cmp
shl
or
pop
fimul
inc
sbb
fisttp
pop
xchg
pusha
std
sahf
mov
imul
fwait
sub
retf
cs
push
sbb
mov
test
mov
ins
xchg
xor
pop
test
add
test
(bad)
adc
push
mov
pop
adc
into
push
xor
push
push
fild
push
or
sbb
push
xchg
dec
pushf
cmp
rcl
call
xchg
pop
and
jne
and
or
dec
push
sub
test
and
loope
push
adc
mov
mov
lods
aam
sahf
pop
test
or
lock
jne
inc
push
rol
rcl
and
fimul
test
sub
call
add
inc
mov
xor
(bad)
aad
not
test
and
push
inc
jecxz
cmps
retf
xor
adc
dec
cmps
leave
imul
pop
aas
sbb
adc
std
cmp
movs
or
add
arpl
mov
push
pop
jbe
mov
aad
lods
or
lods
add
(bad)
jg
sbb
test
sub
or
push
movs
movs
jg
nop
pusha
fisttp
retf
jmp
rcl
test
inc
lods
ins
rol
xchg
fist
pusha
mov
test
cdq
and
or
dec
push
inc
daa
in
mov
data16
dec
in
add
inc
test
inc
pop
push
mov
adc
jmp
dec
jne
mov
push
movs
xor
dec
inc
mov
pop
mov
pop
call
dec
rcl
push
ret
inc
mov
mov
loopne
mov
js
mov
dec
pop
js
push
adc
cmp
ror
(bad)
cmp
test
jle
mov
call
daa
inc
pop
dec
test
fistp
or
jbe
adc
(bad)
addr16
xchg
mov
sar
lea
push
fsubr
cmp
int3
push
mov
sbb
es
adc
cmp
xor
xor
fisttp
dec
dec
xor
mov
adc
xchg
mov
sbb
and
enter
add
pop
stos
xchg
nop
xor
or
mov
popa
loope
and
dec
xchg
add
sub
sub
xchg
pop
sbb
push
or
ret
jge
add
push
fadd
add
and
int
scas
push
jl
aaa
cmp
mov
in
mov
sub
ja
leave
daa
sub
cli
mov
jg
add
xor
shr
lock
inc
mov
cmp
nop
pusha
mov
or
sub
sti
add
push
ja
dec
(bad)
(bad)
or
lods
add
and
pushf
or
(bad)
cmp
push
pop
or
aaa
add
mov
repz
add
add
adc
xor
add
push
add
test
dec
pop
xchg
and
movs
sbb
out
jmp
cld
push
sub
jg
icebp
test
loopne
in
mov
jmp
xor
add
cmp
sub
mov
movs
xor
sub
mov
add
add
je
pushf
icebp
jne
lock
lock
lock
test
adc
add
pop
jp
or
dec
or
jno
push
movs
ins
sub
mov
sub
mov
cmp
adc
add
inc
mov
fxam
cmc
pop
mov
push
mov
push
xchg
push
sbb
fcmovbe
jne
jne
pop
mov
and
movs
cmp
fidivr
pop
sbb
mov
mov
js
cmp
dec
mov
and
inc
popf
or
push
arpl
add
sbb
sub
cmp
push
or
rcr
push
add
sub
loop
loopne
icebp
addr16
cdq
sub
mov
sar
jl
sar
sub
imul
mov
and
rcr
add
cmp
sub
cmp
mov
cmp
cmp
inc
in
add
mov
mov
mov
inc
push
jno
lds
out
sti
in
fnstsw
shr
push
inc
sbb
fistp
or
xchg
mov
push
scas
or
or
adc
xor
inc
push
push
hlt
fcom
cmc
mov
invd
hlt
cld
push
add
and
or
aaa
stos
mov
mov
dec
data16
shr
pop
out
cmc
jge
xor
(bad)
xchg
add
add
cld
sbb
add
inc
push
xchg
test
fdivr
mov
xchg
or
add
cdq
sbb
mov
sbb
jne
cmc
cmc
and
out
adc
leave
fist
mov
shl
add
mov
clc
add
pop
add
jl
xor
(bad)
cli
shl
movs
mov
xor
jo
fild
mov
(bad)
es
in
aam
ins
fucomip
fild
add
not
inc
pop
push
popf
enter
fild
jb
pop
or
es
adc
jo
pop
or
fild
xchg
xor
jg
and
lods
push
bound
jp
sub
dec
or
sbb
lods
out
inc
lahf
mov
xchg
lods
mov
shl
add
mov
adc
cwde
sub
xchg
push
xchg
jmp
dec
fsubr
sbb
cli
ins
cli
cld
in
in
pop
or
and
(bad)
adc
test
mov
dec
loop
mov
mov
test
in
add
pop
sbb
loope
mov
inc
or
inc
inc
jae
inc
dec
popa
mov
imul
outs
jae
cld
punpckhbw
inc
pop
xchg
pushf
aam
mov
test
or
or
mov
cmp
inc
lods
test
jmp
xrelease
lods
call
xchg
pushf
jns
add
int3
adc
mov
jmp
movs
push
or
push
ror
shl
mov
xor
or
and
sub
fs
jl
jmp
cmp
mov
xchg
pop
dec
sahf
pop
jb
rol
push
js
mov
xchg
int3
shl
pop
aaa
xor
or
add
cdq
cmp
jnp
push
mov
jg
ret
lahf
fdiv
pop
add
inc
and
mov
adc
(bad)
lahf
dec
add
sbb
sahf
mov
push
jno
mov
in
jg
ins
pop
add
mov
rol
cmp
mov
dec
jns
retf
fild
xchg
pop
sbb
loop
aas
dec
pop
aas
push
push
dec
ret
clc
test
into
in
mov
mov
outs
aam
adc
fldcw
fbstp
cs
arpl
and
sub
add
dec
inc
sub
or
movs
repnz
mov
ins
adc
mov
push
pop
dec
sub
fst
mov
adc
and
pusha
movs
fsincos
cmp
jl
push
inc
jno
jge
xor
aaa
push
enter
add
or
aaa
add
pusha
stos
add
xor
pop
pop
es
add
sub
leave
xchg
mul
sbb
inc
jle
dec
test
or
ss
pop
xchg
dec
and
dec
mov
add
cmp
pop
inc
push
jo
sbb
sub
ret
in
or
popa
pop
sbb
ret
stos
push
inc
mov
imul
pop
mov
movs
inc
mov
lds
add
add
(bad)
hlt
mov
jg
pop
shr
fdivr
movs
nop
pop
leave
in
pop
pop
pop
repnz
pop
push
mov
and
lahf
fbld
jns
test
adc
xor
shl
or
mov
mov
aas
test
add
or
lea
mov
pop
dec
fs
inc
mov
or
add
dec
inc
or
xchg
inc
xchg
cmp
lahf
push
out
data16
xchg
push
fdivp
push
mov
fnstsw
sbb
clc
loop
(bad)
push
and
daa
mov
aas
or
lea
sbb
sbb
and
in
pusha
lods
mov
inc
test
dec
pop
(bad)
push
fcomp
dec
jns
arpl
sub
sbb
cmp
aaa
fcom
pushf
mov
adc
mov
sbb
xchg
mov
loopne
arpl
sbb
adc
int3
ffree
jmp
aaa
popa
add
jbe
les
pop
xor
in
dec
les
nop
cmp
jge
adc
sub
xchg
or
push
and
xchg
inc
rol
and
rcl
shl
ds
jge
std
ss
push
push
jg
out
push
add
jbe
xor
ss
ffreep
outs
xor
add
dec
and
mov
lea
sub
or
test
clc
cmps
loopne
outs
pop
mov
repz
test
imul
mov
push
mov
or
adc
pop
mov
push
jo
inc
inc
cli
push
enter
jno
dec
push
cli
push
retf
mov
push
ret
test
push
xchg
sbb
loopne
dec
scas
sbb
adc
mov
push
fwait
cmp
push
adc
call
push
jo
push
inc
or
movsx
dec
xchg
cmp
xchg
int
div
dec
push
or
out
sub
inc
cwde
cmp
outs
pop
or
fidiv
push
xchg
sbb
ins
(bad)
jmp
popa
sub
sbb
leave
movs
jmp
jae
cdq
cmp
sbb
pusha
and
inc
push
jecxz
fucomp
push
imul
or
loopne
mov
inc
addr16
push
mov
cmps
in
rol
dec
dec
daa
mov
jl
rol
mov
pop
lock
push
(bad)
cmp
or
xor
les
sti
sbb
cld
jmp
ins
pop
adc
xchg
sub
test
sub
lods
inc
lock
int3
fcomi
push
mov
pop
(bad)
jmp
cmc
mov
pop
movs
mov
xor
inc
adc
add
adc
sbb
push
add
movs
movs
cmp
retf
cmp
sub
bound
and
call
and
inc
sbb
or
sub
in
and
je
xchg
fnstenv
adc
mov
sbb
sub
pop
inc
ret
jb
add
ret
or
push
cs
fcom
adc
enter
mov
fs
xor
loope
pop
add
rol
aam
or
dec
mov
pop
gs
jns
add
push
push
jg
sbb
test
sbb
sbb
jecxz
in
popf
sub
pop
xor
sti
sbb
sbb
fs
inc
jno
cmp
pop
and
push
in
fld
pop
push
fdiv
sbb
sbb
xor
or
adc
outs
stc
xchg
les
or
leave
lea
sbb
inc
mov
pop
pusha
test
mov
and
xchg
ds
in
pop
aad
mov
or
out
jge
or
sbb
or
mov
push
inc
ret
int3
fbstp
push
fisttp
xor
test
ins
sbb
add
mov
mov
loopne
push
sub
add
in
jp
jg
mov
pop
call
int3
jo
je
arpl
add
and
add
jg
jecxz
repz
test
and
jns
or
test
and
pusha
add
inc
bswap
push
mov
ror
inc
lock
pop
xchg
int3
aas
loop
or
or
ins
mov
sar
pop
xor
xor
add
and
dec
xchg
dec
mov
add
pop
shl
inc
or
in
sub
or
adc
add
push
repnz
jns
in
mov
ror
dec
mov
retf
pop
push
sbb
shl
dec
adc
aad
mov
in
jnp
arpl
jne
inc
shr
jmp
leave
ror
in
inc
or
test
jge
xchg
shl
jle
add
push
inc
mov
mov
mov
mov
inc
(bad)
or
shr
test
add
popf
jno
mov
or
push
in
push
mov
loope
sbb
and
pop
inc
rol
call
call
lds
xchg
call
sbb
xchg
lods
das
mov
pop
call
arpl
push
loop
jecxz
add
inc
sub
mov
dec
mov
(bad)
imul
inc
js
cmp
jno
sbb
pusha
add
cwde
dec
ret
enter
pop
adc
test
sbb
push
repz
test
add
mov
movs
pop
mov
mov
fisttp
cmp
push
addr16
add
add
lds
lock
lods
es
dec
pop
imul
loopne
in
and
hlt
loop
popf
aam
aaa
jle
or
dec
jo
or
pusha
mov
sbb
mov
and
mov
fisttp
push
push
div
xchg
pop
pop
mov
xor
and
push
clc
stos
sbb
movs
mov
dec
es
dec
inc
xor
call
ja
sbb
jmp
sub
add
fsub
lods
or
mov
sub
int
sbb
mov
mov
and
or
aaa
daa
gs
mov
xchg
pop
cmp
jne
fdivr
pop
rcr
dec
or
rol
pop
adc
xor
rol
lods
rol
xor
ret
sub
ret
(bad)
dec
xor
adc
in
jno
push
mov
les
clc
cmp
adc
jne
ret
adc
pop
or
jno
cld
or
and
jne
dec
mov
stos
cmp
cmp
fmul
dec
jl
add
retf
push
imul
adc
mov
xchg
sbb
call
lock
loopne
stc
cld
add
sub
mov
or
lahf
pop
add
and
xor
pushf
add
and
aas
cmp
cdq
jg
adc
call
inc
std
mov
xchg
dec
jmp
inc
pop
retf
cmp
add
sbb
and
add
mov
and
inc
xor
sbb
scas
pop
xchg
cmp
pusha
jmp
jg
repz
mov
or
jle
sub
cmps
lahf
add
cmp
hlt
inc
or
pop
fdivr
pop
adc
and
mov
inc
and
adc
mov
bound
fs
sub
adc
cmp
jle
loopne
push
sub
sub
add
pusha
add
fwait
mov
inc
movs
std
movs
movs
adc
add
mov
ds
mov
lods
(bad)
mov
cmp
jb
xor
icebp
jle
shl
pop
add
in
pop
add
add
jmp
cmps
mov
push
pop
or
jae
push
dec
push
sub
test
mov
xor
test
push
js
xchg
mov
add
push
sub
int
rol
dec
cmp
test
adc
and
cmp
sbb
adc
cld
mov
xor
ja
fwait
mov
xchg
sub
jne
mov
xor
pusha
aas
xor
and
jae
lock
and
mov
lea
loopne
cmp
xor
shl
push
mov
jl
inc
sub
neg
mov
inc
sub
adc
dec
call
or
aaa
add
fsub
cs
cs
jecxz
jne
mov
and
mov
xchg
loop
sbb
fild
(bad)
add
sub
dec
and
add
dec
sbb
pop
sub
jl
xchg
dec
js
pop
inc
popa
and
or
(bad)
movs
mov
adc
jno
and
popf
push
jmp
icebp
add
mov
loop
pop
jp
add
cwde
and
pop
add
add
cwde
and
bound
pusha
xchg
aas
movsx
mov
pop
shr
jb
aas
cmp
dec
and
adc
es
test
xchg
xor
aas
mov
dec
jb
sub
aas
shr
inc
sub
push
mov
pop
jp
pop
mov
ins
jg
and
aas
sbb
aas
mov
mov
and
push
adc
in
aas
cmp
sbb
mov
scas
aas
mov
xchg
je
aas
xchg
cmp
inc
mov
add
das
les
aas
push
xor
lock
xlat
mov
mov
xor
movs
retf
jmp
dec
mov
mov
xor
xchg
sbb
push
ja
inc
mov
lds
mov
push
lock
pop
aas
shl
mov
cmp
cwde
mov
dec
fld
in
add
call
dec
aas
inc
adc
sub
xchg
sub
rol
in
xchg
cmp
add
add
sub
adc
sub
push
sbb
and
or
or
inc
stos
xor
mov
fist
sbb
int3
pop
jecxz
lods
mov
sbb
dec
movs
adc
xor
in
aam
inc
in
daa
xchg
retf
add
in
add
push
push
fistp
xchg
xchg
aaa
scas
sbb
xchg
or
add
dec
fbstp
fistp
add
xor
jecxz
leave
add
sbb
cmp
sub
lock
pop
cwde
mov
mov
pop
and
nop
cdq
pusha
aas
add
hlt
push
jno
and
pop
aaa
dec
or
pop
scas
mov
or
test
adc
rcl
jge
or
pusha
test
pop
sbb
outs
sbb
ret
xlat
sub
push
enter
fiadd
jnp
(bad)
test
shl
or
dec
push
and
mov
xchg
sbb
sbb
push
popa
loopne
and
jmp
pusha
fldcw
inc
push
mov
sub
sbb
mov
mov
in
adc
movs
xor
inc
push
dec
xchg
or
test
and
mov
xchg
rcl
sbb
push
test
or
retf
or
inc
adc
pop
push
xor
data16
adc
pop
and
pop
add
shr
in
rcr
push
es
jae
test
sbb
mov
push
call
adc
pop
retfw
cmp
sub
ins
sahf
or
and
fisubr
and
xchg
fchs
ficom
lods
pop
enter
adc
and
clc
fmul
jl
fcomp
test
outs
push
test
lods
lds
add
(bad)
xchg
cmp
cmps
in
js
and
cmp
add
fdivr
call
je
or
je
add
sbb
and
imul
adc
or
cmp
fcomp
or
or
aaa
add
jge
out
and
je
(bad)
rcl
xchg
test
fdivr
pop
push
mov
int3
les
add
and
or
daa
push
mov
lock
lods
aam
add
adc
pop
es
push
dec
(bad)
retf
xchg
mov
mov
adc
sub
dec
aaa
add
mov
hlt
add
jbe
sahf
fst
ficom
sub
dec
cmp
lea
mov
fdiv
sbb
or
inc
push
push
pop
sbb
sbb
fdiv
push
or
and
retf
add
mov
fist
inc
dec
push
jbe
daa
stos
imul
(bad)
fbld
aam
adc
sar
cmp
loope
adc
mov
xchg
inc
adc
push
add
pop
push
shr
fdivr
and
or
inc
pusha
xchg
dec
jmp
ja
xor
mov
ja
inc
fild
fidivr
rcl
movs
mov
out
jge
add
test
stos
and
jge
adc
inc
aam
push
mov
ret
dec
(bad)
cmp
cmp
movs
adc
stos
aas
icebp
mov
xor
mov
add
push
lahf
in
push
inc
aas
cwde
repz
mov
pushf
in
pop
add
push
push
add
add
test
mov
loope
xor
fs
xor
mov
xor
add
and
lock
and
movs
or
leave
or
cli
js
push
test
adc
add
jmp
mov
jg
jmp
or
pop
lea
clc
(bad)
rol
and
jnp
push
dec
adc
mov
jmp
pop
xchg
test
sbb
or
inc
sbb
adc
movs
push
cmp
or
jg
jle
jb
das
jbe
aaa
je
jmp
or
(bad)
je
adc
jbe
cmp
mov
fs
popf
xchg
jbe
out
mov
repz
imul
emms
sbb
dec
popa
cmp
mov
pop
stos
jne
jmp
enter
enter
clc
xor
lahf
mov
cmp
mov
mov
or
je
(bad)
sbb
xchg
lock
inc
daa
pop
adc
adc
lods
sbb
mov
sahf
mov
lods
inc
hlt
sti
hlt
add
jnp
mov
and
inc
inc
or
sub
pop
test
rol
nop
inc
je
xor
push
jo
push
jbe
dec
repz
mov
mov
ret
jne
jae
jl
and
and
shl
add
imul
adc
fucomp
pop
adc
ficomp
cmp
fiadd
sub
cdq
lock
dec
or
pop
pusha
adc
mov
loop
adc
and
xor
in
xlat
pop
dec
jns
xor
inc
cmp
sub
test
dec
adc
es
adc
sub
push
aam
clc
push
test
mov
lods
add
jge
dec
add
in
call
in
in
sub
imul
lock
push
push
sub
lock
sar
xchg
mov
jne
dec
cmp
jno
jno
fsubr
lahf
mov
jp
fcomp
add
int3
iret
int3
ror
inc
inc
loopne
leave
dec
enter
adc
loop
pop
cmp
or
int3
or
shr
stos
int
push
lea
aam
sbb
xor
push
mov
inc
arpl
movs
(bad)
in
cmp
je
inc
in
les
adc
rol
in
or
xor
rcl
sbb
cmp
mov
js
int
adc
or
enter
rol
rcl
mov
xchg
add
outs
and
or
test
mov
push
mov
addr16
inc
movs
adc
in
xor
pushf
add
aaa
inc
mov
shl
in
(bad)
hlt
fcom
mov
clc
pop
pusha
mov
lock
mov
fadd
addr16
ret
sub
xchg
fmul
adc
fcom
sar
jne
sub
inc
loop
sbb
iret
imul
cmp
cmps
test
or
jmp
cmp
mov
adc
adc
lods
bound
adc
dec
rcr
fist
sbb
aad
or
jmp
cmc
loopne
sub
and
ret
or
push
add
bound
xchg
dec
es
sub
test
dec
ins
call
add
lods
ret
add
add
pop
sub
mov
mov
jmp
rol
aas
xor
bound
pop
and
sub
sbb
inc
sub
int
push
pusha
fs
setl
mov
mov
push
cmp
push
hlt
cmp
mov
popa
clc
test
fmul
(bad)
in
dec
sbb
inc
and
adc
aad
test
dec
cmp
aas
lods
jg
adc
(bad)
es
pop
xor
or
call
mov
lock
jmp
lods
stos
je
xchg
add
xchg
dec
xor
sub
sub
or
adc
sbb
inc
imul
xchg
jecxz
xlat
and
sbb
add
pop
daa
sbb
es
mov
ds
jmp
movs
add
in
in
repz
or
add
xor
or
sub
popa
mov
or
aam
std
mov
add
adc
jns
and
loopne
cmp
clc
dec
sub
mov
lahf
add
mov
in
imul
dec
lahf
cs
fst
in
int3
cli
push
test
add
ins
sbb
jbe
ret
shl
ret
mov
lahf
adc
xchg
cmps
gs
in
ror
sbb
lahf
(bad)
dec
inc
outs
movs
inc
and
(bad)
xchg
outs
push
xor
and
push
hlt
xchg
pop
ins
mov
dec
xor
or
sub
iret
dec
jge
push
hlt
loope
mov
dec
int3
mov
xor
xor
(bad)
sub
adc
fxtract
and
jae
add
or
nop
ins
pop
aaa
add
jmp
dec
inc
push
(bad)
pop
arpl
push
enter
movs
dec
outs
jmp
test
pop
lahf
add
mov
jmp
and
loopne
call
mov
sbb
aad
arpl
daa
cmp
add
xrelease
stos
fsubr
lds
stos
call
ins
jns
mov
pop
hlt
sub
ror
hlt
pusha
jge
or
pop
icebp
daa
cli
adc
xor
mov
or
pop
xor
mov
call
cmps
cmp
bndstx
or
das
rcl
inc
fcom
add
add
push
loop
push
lock
fcmovne
add
mov
or
(bad)
rcl
scas
sbb
sbb
sub
sbb
pcmpeqb
sbb
jp
jmp
and
adc
adc
pop
mov
mov
adc
mov
call
add
xor
push
push
sub
mov
add
pop
inc
and
xchg
jne
xchg
xchg
sbb
cmp
pop
ins
add
xchg
jmp
pop
ds
retf
mov
in
cdq
adc
jne
popf
arpl
jo
mov
inc
or
rol
xchg
inc
and
add
mov
jg
pop
rol
aas
inc
jge
movs
inc
jmp
or
imul
adc
ret
popa
mov
pop
hlt
or
sbb
sbb
imul
test
mov
push
js
push
cld
adc
add
aaa
pop
jns
jmp
jg
stos
add
mov
aas
and
dec
fadd
outs
push
sub
jg
lods
inc
call
mov
xchg
or
call
pop
mov
add
inc
mov
xchg
loope
dec
out
push
jmp
mov
ins
ret
inc
dec
or
ror
stos
test
mov
mov
sub
sbb
test
add
lods
xor
or
enter
xor
loopne
xor
pop
test
(bad)
dec
mov
ror
mov
pushf
lahf
add
clc
push
xor
aaa
adc
and
dec
push
imul
inc
xor
rcr
sub
mov
cs
xor
lock
dec
aaa
loopne
and
lea
add
arpl
lea
adc
lods
adc
test
push
mov
push
int3
inc
and
jo
adc
pop
inc
loop
jle
add
popf
mov
enter
test
sbb
add
pop
adc
shl
ret
sub
jp
nop
push
push
xlat
bound
ret
mov
test
aas
and
add
or
mov
lea
jbe
dec
adc
fidivr
mov
mov
loopne
ror
and
push
cli
mov
xor
and
and
aad
xchg
and
in
xor
in
inc
popa
je
shr
lds
inc
shl
jmp
lea
pop
ins
leave
(bad)
in
enter
lea
sub
push
ins
pusha
adc
sub
arpl
loopne
outs
imul
adc
cs
retf
pop
cmp
and
add
mov
jp
mov
add
(bad)
pop
mov
xor
cmp
fimul
push
push
movs
daa
add
push
adc
mov
jl
cmps
cs
sub
jp
jb
les
and
cmp
sub
pop
xchg
or
cwde
movs
push
enter
loope
ins
mov
test
popf
cdq
retf
push
call
and
std
xchg
sub
push
jmp
lods
aas
repz
cmp
ficom
xor
scas
sbb
lods
xchg
adc
or
xor
xchg
sub
daa
mov
mov
mov
sbb
dec
(bad)
mov
jo
lea
pop
jl
dec
mov
mov
jl
mov
add
sar
loopne
lds
lock
dec
cmp
push
or
lods
push
daa
jg
pushf
pop
imul
adc
or
retf
rcl
push
mov
pop
push
aas
mov
int3
out
dec
sbb
and
and
mov
inc
push
push
(bad)
aam
mov
jno
inc
mov
retf
push
or
outs
movs
inc
add
add
add
jmp
outs
dec
fnstsw
nop
dec
jmp
pop
cld
adc
add
add
lods
lods
jmp
outs
mov
inc
leave
push
dec
inc
fcom
pop
sub
mov
fild
sub
sbb
test
cs
mov
jae
inc
mov
outs
push
sbb
jmp
adc
call
dec
mov
dec
outs
add
mov
adc
or
and
jmp
ror
sbb
cld
dec
cmp
in
push
jne
or
pop
test
or
mov
push
xor
pop
or
xor
xor
jne
fstp
xchg
inc
mov
or
sub
sbb
xchg
xor
or
push
ja
add
cs
movs
xchg
push
cld
mov
hlt
aam
and
adc
sahf
jae
aam
push
mov
push
xchg
mov
dec
test
into
and
lea
sbb
sbb
inc
rep
imul
int3
fdivr
mov
ret
repnz
leave
add
movs
add
add
js
dec
inc
dec
or
(bad)
aam
adc
test
scas
es
popa
push
(bad)
call
sti
xchg
xchg
fimul
les
pop
scas
jl
leave
fmul
out
cmp
push
pushf
das
setge
fiadd
retf
or
fcomp
dec
sbb
ja
mov
fcom
jns
data16
test
test
sbb
addr16
mov
inc
dec
push
jo
dec
fsub
sub
clc
jg
jmp
stc
push
aam
dec
push
dec
inc
jg
or
xchg
cwde
and
sbb
dec
cmp
call
leave
add
adc
daa
xor
cmp
clc
ret
xchg
rcr
mov
fdiv
shr
sbb
ret
stos
lahf
aad
pop
je
jg
or
inc
outs
bound
out
movs
adc
data16
or
and
mov
push
jp
fisub
or
fistp
pop
fistp
mov
pop
mov
sbb
sub
mov
std
push
add
lds
add
xchg
test
sbb
rol
inc
mov
add
(bad)
clc
mov
cmp
fisttp
loopne
jge
div
aas
mov
in
mov
mov
add
jge
mov
(bad)
lahf
aas
imul
outs
sbb
pop
add
ret
call
jge
out
or
add
mov
add
lea
and
les
mov
scas
xor
inc
xchg
add
pushf
clc
and
nop
inc
fucomip
rcl
push
adc
js
sub
mov
inc
xchg
cmp
pop
(bad)
jmp
push
popa
movs
sub
imul
(bad)
movs
pop
pop
or
cs
test
jo
ja
xor
jl
push
bound
movs
pop
adc
xor
mov
outs
(bad)
loopne
push
push
jg
or
inc
adc
push
jle
not
pop
pop
jne
add
xchg
test
nop
scas
jl
dec
jp
mov
fdiv
xor
loope
dec
sub
and
push
mov
test
adc
rcl
in
cmp
and
inc
jnp
sbb
add
add
push
jle
xlat
sbb
mov
sbb
daa
jo
and
and
add
aaa
or
sub
adc
pop
or
adc
jmp
add
cdq
adc
dec
(bad)
mov
lahf
dec
fcmovu
inc
pop
xor
lea
add
jp
popa
rcr
add
pop
push
push
ret
sbb
xchg
iret
fs
dec
shl
sbb
pop
icebp
icebp
scas
loopne
aas
rcl
fisttp
(bad)
rcl
lods
pop
in
add
xchg
aaa
rol
fild
imul
push
pop
pusha
les
sti
pop
movs
push
dec
mov
or
adc
jmp
mov
ja
push
dec
xchg
pop
retf
or
xor
ret
push
les
or
xchg
or
jae
add
cmp
pop
mov
or
stos
sub
inc
dec
push
aam
add
pop
gs
push
jmp
jmp
cmp
sbb
int3
sub
jmp
sbb
inc
ret
fidiv
sub
adc
mov
xor
inc
mov
ror
lock
lock
push
push
xchg
sub
and
loop
and
pop
or
jne
ret
test
leave
or
pop
ret
fs
xor
or
xchg
and
xchg
shl
or
stc
call
inc
add
ins
clc
ret
add
pop
movs
inc
int
xchg
xchg
push
push
popf
jge
ret
add
dec
adc
inc
mov
leave
add
adc
add
jmp
and
or
gs
cmp
ret
daa
sbb
jmp
jmp
pop
mov
rcl
sbb
sub
mov
into
pop
loop
jl
ins
lods
outs
and
push
adc
mov
int
cmp
and
int
and
shl
pushf
mov
fs
add
xchg
cmp
les
inc
xor
leave
and
mov
and
sub
or
add
sub
(bad)
scas
cwde
inc
sub
add
adc
clc
gs
jo
icebp
(bad)
and
cmps
add
jge
adc
nop
daa
popa
and
sbb
pusha
cmp
mov
mov
adc
adc
(bad)
push
xor
adc
xchg
adc
sub
or
sbb
mov
mov
mov
sbb
adc
mov
push
adc
mov
test
sbb
or
push
jb
inc
loopne
inc
cmp
test
movs
and
or
pop
sbb
add
push
add
jecxz
retf
js
cs
int3
(bad)
fcom
dec
fs
addr16
lea
cmp
inc
fstp
mov
add
pop
jo
pop
xor
push
ret
jle
js
push
lahf
retf
adc
js
inc
sub
cmp
push
cld
hlt
hlt
je
sbb
pop
jnp
popa
xor
sar
jnp
inc
or
or
inc
lods
movs
arpl
add
sbb
cmp
add
cmp
add
xor
mov
pop
push
push
test
jns
in
inc
pop
add
push
cmp
ss
mov
sub
ja
dec
sub
jmp
adc
jmp
push
sahf
imul
xor
jnp
test
lea
add
add
or
pop
clc
and
je
xor
mov
cwd
shl
mov
fild
(bad)
fcomp
int3
les
fimul
add
jl
outs
push
movs
je
sub
fs
adc
fidivr
outs
lods
push
sbb
mov
jge
mov
ja
fsubr
(bad)
xchg
sbb
or
jg
xchg
cmps
outs
adc
test
cld
sub
je
add
out
call
xor
inc
cld
cwde
cmp
gs
adc
adc
adc
xchg
pop
call
int3
fidiv
adc
inc
shl
mov
jp
add
dec
sbb
sbb
and
lahf
fisubr
les
(bad)
scas
inc
xchg
pop
cmp
fadd
xchg
mov
adc
imul
cmp
cmp
jno
jne
nop
cmp
push
adc
in
sti
push
adc
xchg
or
fsubrp
xor
mul
out
lods
lea
ds
or
cmps
adc
xchg
mov
xor
adc
std
outs
bound
mov
sahf
sub
je
mov
add
jnp
sub
pushf
xor
dec
ja
and
mov
xchg
movs
fisub
sbb
mov
mov
add
dec
das
adc
icebp
push
fcmove
addr16
movs
sub
cmps
in
push
sbb
or
sbb
inc
fwait
xor
je
mov
aas
push
jmp
add
push
cmp
arpl
mov
sub
inc
arpl
xlat
jno
daa
and
sub
mov
or
dec
add
cmp
test
(bad)
pop
push
cmp
pop
push
adc
or
xchg
test
inc
sbb
push
fcmovbe
imul
sar
xchg
add
adc
pop
aas
enter
hlt
jecxz
sub
shl
lahf
call
push
gs
cwde
push
loopne
aas
mov
out
sbb
xchg
or
mov
aam
pop
mov
adc
add
and
clc
rol
icebp
xlat
adc
cmp
mov
jb
les
dec
sub
test
add
adc
imul
mov
push
(bad)
fidivr
push
cmp
sbb
hlt
es
out
sbb
jne
movs
sub
fsub
xor
push
cmp
sub
clc
push
pop
and
ret
cmp
pop
pop
pop
test
fwait
jmp
jge
lea
rol
rcl
push
xor
or
test
or
adc
xchg
hlt
push
aaa
mov
test
adc
xor
and
pop
in
sar
cmc
jle
cmp
add
pop
push
aad
xor
daa
test
dec
outs
dec
adc
xchg
push
fdivr
sbb
jo
inc
add
dec
repz
pop
sub
mov
mov
fidiv
sbb
xor
jmp
xor
mov
sbb
fs
xor
push
xor
push
jbe
add
lock
or
test
sub
sbb
xor
pop
fadd
cld
jg
adc
adc
popa
push
lods
xor
mov
lahf
sub
test
dec
push
or
xchg
adc
jmp
loope
or
or
daa
jne
sbb
adc
and
adc
sti
mov
dec
and
pusha
out
loopne
adc
xor
je
out
ja
push
inc
and
jne
mov
fcomp
jmp
test
ret
lods
ds
loopne
fistp
shl
sub
rcl
ds
push
jp
cmp
xchg
cmp
shl
loope
int
mov
shr
mov
jmp
mov
clc
inc
mov
jl
and
pop
or
mov
jo
add
shld
jb
mov
in
sbb
adc
sub
pmulhuw
in
jmp
fsubp
in
retf
and
in
xchg
pushf
adc
in
xor
call
or
mov
js
and
fst
call
lds
jne
dec
mov
nop
cmps
ja
fdivr
add
fld
add
cmp
sub
or
sub
jle
mov
adc
pop
dec
lahf
sbb
jg
sbb
inc
je
cmp
inc
das
xor
imul
add
or
fadd
mov
shl
popf
jge
mov
mov
imul
cwde
adc
push
inc
mov
imul
call
mov
adc
out
add
xchg
jb
xlat
outs
pop
and
pop
jl
cmp
xchg
xchg
or
xor
jo
push
in
jbe
and
mov
mov
mov
aad
push
cld
cmp
or
sub
(bad)
test
push
adc
lods
arpl
fcom
sub
mov
mov
inc
xchg
ficomp
ffreep
bound
or
or
(bad)
pop
lock
jb
xchg
lods
in
mov
or
test
adc
es
in
or
mov
daa
jbe
pop
xchg
push
or
sub
inc
pop
sub
lds
dec
(bad)
je
jge
jne
ins
xchg
ins
add
bound
mov
adc
loopne
and
fsub
sbb
fdiv
cmp
jg
sbb
ins
lea
fs
sub
dec
inc
and
mov
jo
movs
rol
jne
pop
pop
js
mov
mov
push
hlt
stos
loopne
movs
mov
mov
ins
nop
jp
leave
add
sbb
and
shl
or
inc
add
ins
outs
dec
loopne
clc
jne
mov
lods
inc
dec
cmp
inc
aad
jmp
cld
add
test
gs
adc
pop
aaa
mov
and
jl
mov
jmp
(bad)
inc
dec
cmp
jo
or
and
mov
or
loope
ins
sbb
imul
xchg
aaa
add
sbb
(bad)
jecxz
mov
fs
xor
or
cmp
shl
daa
ins
arpl
ins
and
mov
cmc
jb
hlt
sbb
pop
lods
mov
test
test
daa
scas
jl
inc
jge
test
dec
ds
jns
sub
hlt
ins
xor
inc
lock
xor
or
sub
cmp
add
mov
or
ja
add
test
bound
in
pop
imul
push
nop
nop
es
push
add
xor
add
imul
imul
pcmpeqb
mov
mov
retf
jne
fmul
inc
aaa
lahf
ds
add
inc
in
xchg
push
ret
test
test
push
fisubr
xor
jg
or
add
mov
ret
dec
out
in
nop
jbe
mov
cmp
jnp
xchg
aas
push
call
mov
fwait
popf
imul
imul
push
add
inc
and
jbe
je
or
mov
call
push
xchg
std
push
leave
xchg
iret
ficomp
sub
adc
addr16
frstor
cmp
sub
mov
inc
lods
add
mov
add
mov
push
mov
inc
pushf
adc
dec
lods
outs
shl
icebp
and
lahf
arpl
sub
shl
imul
stos
add
cmp
repnz
adc
adc
push
loop
or
jae
aaa
and
and
jmp
add
adc
das
shl
loopne
and
xchg
dec
repz
mov
rcl
mov
nop
data16
mov
or
les
idiv
push
scas
shl
loopne
pop
mov
add
sbb
addr16
lods
jmp
or
cmp
sub
lock
xor
or
test
or
bound
xor
mov
mov
add
outs
or
xchg
inc
inc
dec
rol
rol
nop
sub
add
xchg
pop
adc
dec
mov
enter
mov
jl
push
enter
lock
adc
and
add
(bad)
sub
sbb
sbb
and
pop
add
shl
mov
out
or
add
add
mov
inc
inc
push
loopne
arpl
add
jmp
mov
adc
fistp
cli
outs
test
gs
mov
or
int3
sbb
(bad)
mov
cdq
push
mov
call
and
inc
adc
push
fbstp
mov
add
lds
add
adc
and
mov
adc
ja
add
sub
icebp
bound
add
lahf
and
sbb
pop
jecxz
push
sbb
sub
call
sub
mov
and
add
mov
mov
jg
adc
push
and
push
or
mov
and
repnz
dec
add
add
loopne
ins
cmp
or
sbb
das
inc
call
in
or
xor
inc
mov
fisttp
daa
add
or
add
stos
mov
out
xchg
xchg
mov
dec
pop
and
inc
add
adc
cwde
fist
and
pop
bswap
and
add
push
popf
inc
shr
and
ins
and
mov
and
pop
sbb
pushf
push
or
or
mov
inc
pop
jg
xchg
sbb
fild
dec
(bad)
lods
pushf
adc
xchg
jl
add
ins
jg
adc
mov
pop
pop
adc
pop
dec
add
imul
dec
stos
add
adc
popf
or
mov
inc
aad
jl
mov
add
js
enter
xchg
add
pop
cld
mov
ror
test
add
jns
cmp
int3
dec
enter
add
inc
inc
mov
cmp
add
mov
and
adc
sub
bound
sar
inc
cld
and
xchg
mov
jne
enter
sub
fadd
sub
scas
movs
inc
ins
add
ret
pop
add
push
pop
mov
fild
sbb
xlat
pop
dec
pop
mov
push
mov
sbb
adc
mov
pusha
add
inc
and
mov
add
mov
call
cmp
loopne
push
outs
enter
jl
mov
sbb
jmp
dec
push
cs
jp
int
mov
jg
fisub
outs
and
int3
push
jmp
sbb
ins
pusha
(bad)
cmp
sbb
push
outs
scas
dec
adc
mov
inc
nop
sar
add
pop
ss
mov
mov
sbb
or
ins
push
scas
jge
jmp
mov
add
lahf
inc
push
sbb
push
ja
push
jb
(bad)
mov
stos
pop
jmp
loope
cmp
add
inc
xchg
dec
enter
call
jmp
sbb
mov
push
es
call
dec
push
movs
dec
mov
jle
push
rol
pop
sub
mov
push
mov
inc
mov
sub
xor
push
add
aas
sahf
sub
in
movs
in
adc
femms
adc
ins
test
add
inc
add
add
test
or
jg
add
push
dec
jg
add
jg
push
lahf
cmps
mov
jmp
inc
inc
jg
add
add
add
inc
shl
call
add
jg
push
push
mov
push
mov
inc
jle
movs
das
in
test
test
inc
jle
sub
and
xchg
add
mov
shr
dec
shl
adc
jns
inc
cmps
pop
js
add
pusha
sbb
js
pop
mov
loopne
push
pop
loopne
and
push
lea
pop
pop
inc
dec
mov
pop
mov
add
jno
cmp
shl
in
add
and
std
(bad)
nop
(bad)
and
adc
adc
or
mov
sbb
adc
sbb
adc
retf
cmp
jae
loop
mov
pusha
mov
mov
std
push
lds
dec
mov
cmp
add
sbb
adc
cmp
imul
mov
jl
inc
inc
xor
pop
or
mov
aas
dec
aam
shr
or
xchg
out
mov
or
test
add
sbb
fsubr
stos
mov
inc
pushf
ret
dec
push
aad
stos
ins
stos
mov
adc
stos
in
mov
jg
test
sub
stos
mov
pop
add
lods
ins
add
and
push
adc
add
(bad)
inc
mov
xor
add
inc
mov
mov
adc
add
and
scas
nop
add
add
add
cs
fistp
pop
mov
mov
sar
aas
or
sub
(bad)
mov
and
sbb
dec
adc
dec
and
ins
pop
and
inc
add
xchg
sbb
mov
cmp
adc
jg
and
jo
jg
push
adc
add
jg
lods
in
or
das
retf
outs
push
and
mov
jo
jg
jno
pop
mov
pop
aas
or
les
aas
fwait
les
test
fist
ss
mov
pop
mov
push
(bad)
mov
or
pop
sar
add
inc
enter
mov
jmp
in
ins
cmp
or
jne
push
shl
or
or
push
push
sub
(bad)
cmp
mov
lods
jmp
mov
sti
jo
sahf
or
adc
mov
or
daa
xor
ror
fcompp
sub
lock
outs
jge
mov
push
leave
scas
xor
movs
ss
ret
cmps
xor
movs
retf
nop
retf
call
nop
jb
inc
es
int3
mov
je
popf
lahf
xchg
and
in
sbb
and
xchg
ud0
sbb
adc
test
stos
sbb
and
lds
adc
sub
inc
xchg
lods
sub
mov
in
pop
push
xchg
ror
or
rcr
dec
add
inc
xor
dec
fcom
mov
paddq
popf
adc
fwait
icebp
xchg
push
dec
cmp
cmp
test
or
fsub
cwde
add
dec
adc
mov
or
jne
hlt
dec
imul
dec
clc
out
ret
outs
call
call
xor
pop
bound
push
repnz
and
ins
stos
das
and
jmp
mov
test
rol
pop
loope
or
pop
fs
(bad)
les
je
push
and
xor
add
and
rcr
adc
rol
cdq
shr
push
repnz
retf
inc
loopne
pop
push
cmp
jne
clc
imul
mov
cmps
adc
and
push
xchg
or
push
push
push
inc
inc
std
(bad)
ficom
xchg
enter
add
inc
xor
cmp
adc
add
enter
rol
(bad)
cld
mov
adc
lahf
xchg
or
rol
mov
and
arpl
jmp
and
jnp
mov
rol
inc
xor
mov
mov
and
and
xchg
out
je
or
push
mov
inc
jmp
mov
clc
lea
add
ja
sti
push
lea
jo
add
adc
jg
xor
push
rol
xchg
lahf
adc
stc
leave
mov
mov
lahf
xchg
pop
add
add
fdivr
lahf
adc
lahf
dec
or
fdivr
lahf
or
mov
mov
jmp
mov
lahf
push
je
xchg
rcr
and
sub
lods
lahf
cmp
pop
add
cmp
inc
lahf
push
lods
inc
push
aad
xchg
sub
pop
dec
push
lahf
pop
enter
pop
movs
stos
mov
jg
pop
and
pop
add
cld
stos
or
jg
xor
and
push
ins
xchg
inc
push
int3
mov
inc
and
cmp
dec
fild
adc
inc
inc
les
jno
cmps
mov
fstp
inc
fmul
pop
cmp
(bad)
fldcw
ss
shl
fisttp
jmp
adc
movs
in
fidiv
add
jg
test
fs
and
stos
push
add
or
add
and
add
faddp
sub
push
push
sbb
fistp
or
add
es
jo
pusha
xor
test
add
test
xor
pop
mov
aas
test
les
xor
jmp
or
xlat
xchg
or
sar
add
lods
or
cmp
cmp
leave
loopne
add
mov
or
push
jle
pop
inc
mov
cmp
stc
cmps
or
adc
sbb
add
xchg
mov
inc
fs
rol
or
mov
jg
movs
adc
dec
adc
push
or
sub
inc
rcl
push
(bad)
cmc
pop
sbb
sub
jg
xchg
fucomip
and
sub
fisttp
xchg
add
pop
sbb
push
jg
loope
lods
nop
outs
jle
pushf
mov
cmp
inc
daa
dec
mov
push
mov
add
add
sbb
adc
or
das
adc
inc
xor
or
mov
arpl
mov
cmp
xor
jmp
sub
mov
or
jo
inc
xchg
pushf
in
out
and
cdq
pop
jecxz
and
add
add
in
add
lock
mov
xor
and
nop
loop
sub
test
pop
test
icebp
(bad)
add
test
pop
dec
loopne
adc
xor
add
cmp
dec
loopne
aas
mov
pop
add
enter
mov
(bad)
adc
gs
loopne
(bad)
jmp
push
sub
pusha
push
xchg
dec
cmps
pop
pop
xchg
in
mov
or
call
cld
add
mov
add
inc
or
jnp
xor
xchg
xlat
xchg
ins
or
rcl
inc
dec
dec
pop
fsub
xor
pop
fsubr
xchg
shl
repnz
hlt
or
mov
pop
(bad)
ins
mov
test
xchg
lahf
je
adc
mov
adc
mov
cmp
mov
das
or
push
adc
cmp
add
pop
mov
lds
or
dec
call
push
push
xor
mov
pop
add
or
sar
inc
and
inc
or
shl
xor
jne
sbb
enter
out
inc
or
inc
mov
adc
mov
ins
stos
mov
movs
and
add
cmp
out
pop
jae
or
(bad)
push
pop
fadd
cmp
pop
test
adc
minps
add
pop
adc
sbb
sbb
inc
clc
add
cmp
jbe
mov
pusha
outs
sub
mov
ret
js
ja
or
stos
mov
inc
sbb
sub
or
adc
cmp
jne
xlat
fisttp
ja
loop
push
push
xor
dec
sbb
dec
push
add
dec
adc
(bad)
inc
or
and
and
je
cmps
push
pusha
stc
push
lahf
add
dec
ret
das
add
push
push
xchg
mov
jecxz
add
dec
sbb
lods
adc
test
jne
and
or
mov
retf
add
push
mov
mov
sub
movs
lea
jle
xor
push
jmp
dec
shl
test
leave
gs
add
ja
lods
lods
lds
daa
xor
(bad)
lods
mov
test
lds
movs
scas
xor
xor
adc
mov
mov
lods
movs
mov
mov
repnz
daa
mov
lds
jo
iret
add
push
pop
enter
or
pop
add
or
add
add
enter
pop
xchg
pop
cpuid
mov
push
push
inc
inc
xor
inc
and
and
jmp
xchg
dec
dec
and
jmp
sbb
mov
in
sbb
cdq
mov
ret
or
repnz
xlat
fisttp
push
add
add
test
adc
stos
stos
xlat
cs
fldl2e
sbb
leave
std
mov
rcl
push
and
xor
stc
or
add
xor
and
or
push
mov
lock
add
gs
mov
add
push
test
push
retf
push
xor
or
xchg
add
les
adc
add
hlt
rol
rol
stos
(bad)
dec
cmp
dec
sub
adc
call
xor
sub
xor
push
jo
call
sub
int
or
hlt
enter
and
mov
daa
adc
push
add
dec
cwde
adc
xor
add
sub
arpl
adc
or
or
popa
or
sub
xchg
dec
or
mov
lods
movs
movs
sar
mov
leave
movs
cmp
dec
xor
sbb
xchg
pop
cs
xor
adc
inc
xor
jg
dec
or
lods
adc
fadd
call
mov
xor
adc
jb
or
adc
leave
movs
cdq
adc
movs
int3
rcr
push
shr
and
jge
xor
test
lods
and
dec
ret
or
cmp
sbb
cs
lods
lods
(bad)
fisubr
xor
mov
sbb
into
adc
iret
movs
movs
xchg
pop
cs
cmp
sbb
dec
jb
xor
and
sbb
out
shr
ret
sbb
mov
iret
pop
push
in
lods
lods
adc
or
sub
and
adc
sub
es
imul
movs
and
retf
sbb
xor
sub
sbb
sub
and
mov
sar
retf
out
nop
out
movs
movs
ss
cs
daa
mov
or
mov
sbb
xor
ror
sub
retf
lods
and
mov
mov
xchg
pop
cs
or
sub
dec
jb
xor
xor
sub
mov
shr
nop
out
test
xchg
dec
jae
iret
and
cmp
xchg
dec
xlat
and
jo
cmp
dec
cs
xor
or
mov
jb
loope
iret
lods
lods
sub
leave
in
adc
xor
int
xchg
dec
adc
xor
mov
js
cs
into
movs
xchg
movs
mov
iret
inc
xor
leave
test
sub
add
cmp
xchg
bswap
and
sbb
retf
sbb
pop
cmp
retf
xor
retf
movs
cdq
in
xor
imul
xchg
cmp
sbb
int
shl
cmp
inc
ret
adc
and
sti
adc
xor
(bad)
lock
xor
cwde
or
cvtdq2ps
add
test
cmp
ret
pop
sbb
pop
test
add
pop
enter
test
dec
add
mov
cmps
popa
les
(bad)
cmp
adc
dec
or
dec
sub
or
xor
add
pop
dec
(bad)
mov
push
inc
cwde
call
nop
sub
xchg
or
push
test
adc
or
add
in
imul
and
test
cli
adc
and
adc
or
xor
adc
or
cli
adc
in
cmp
ds
loope
mov
iret
int
popa
adc
inc
pop
pop
and
sbb
into
cmp
lods
inc
dec
jb
xor
sub
nop
and
sbb
repnz
nop
sbb
xor
int
imul
sbb
and
and
dec
cwde
mov
or
sub
sbb
mov
fcomp
stos
sub
mov
mov
sub
sbb
ins
and
pop
and
in
mov
and
push
retf
fmulp
inc
and
add
outs
mov
mov
movs
or
mov
cli
dec
sub
arpl
sub
and
std
xor
enter
xor
sub
sbb
sub
movs
lods
dec
call
bts
inc
out
mov
xchg
cmp
and
cmp
leave
and
jmp
xor
cmps
imul
xor
or
imul
add
(bad)
test
xor
call
scas
cwde
pop
sub
mov
std
cmp
dec
jb
adc
pop
cmp
cmps
imul
mov
dec
call
bts
xor
sti
add
and
cmps
add
or
cmp
mov
dec
shl
mov
cmp
sub
xor
push
shr
imul
movs
or
repnz
xchg
loope
mov
fadd
push
xor
nop
sbb
test
call
xchg
adc
mov
or
test
es
shr
sub
xor
push
fwait
sti
and
sbb
loopne
or
out
loop
movs
loope
cli
lods
mov
pop
aam
add
sti
sbb
test
dec
xor
mov
adc
mov
or
sti
adc
movs
les
cdq
cmps
add
fsub
sti
adc
add
pop
jno
retf
pop
mov
lea
call
rol
call
mov
mov
ss
and
xor
repnz
out
sbb
imul
adc
xor
jmp
(bad)
add
and
pop
push
sub
inc
sbb
mov
(bad)
and
mov
retf
pop
xor
xor
sbb
pop
pop
and
sub
add
sbb
test
sub
ds
jne
jp
cmp
sbb
dec
in
cmp
xchg
xor
xor
jmp
stc
(bad)
shl
jp
and
xor
stc
(bad)
sub
xor
add
inc
xor
push
xor
les
adc
fsubrp
mov
pusha
jbe
add
xor
dec
xchg
cmp
xchg
in
cmp
mov
jmp
adc
jo
(bad)
sti
xor
xor
or
cwde
loop
or
cmp
xor
fwait
mov
(bad)
movs
mov
pusha
(bad)
adc
lods
push
dec
jb
xor
sub
nop
mov
or
(bad)
lods
jae
cmp
imul
xchg
adc
popf
jne
push
adc
xchg
or
in
jecxz
pop
bound
sub
cwde
xor
adc
mov
retf
pop
mov
or
sbb
xchg
pop
xchg
adc
inc
dec
pop
and
adc
xchg
cwde
xor
mov
or
clc
nop
pop
jo
int
mov
rcl
in
cmp
outs
mov
push
add
or
sbb
adc
adc
in
dec
ror
and
add
sub
and
dec
(bad)
jmp
inc
push
xor
pop
shl
lods
(bad)
and
mov
pop
jno
add
jo
lods
add
sub
push
and
pcmpgtd
xor
cmp
sub
sub
mov
or
call
sti
xor
and
cmp
cmp
sub
add
add
cmp
ror
enter
cmp
inc
jmp
cli
cmp
cmp
push
and
(bad)
cmp
add
inc
mov
or
leave
les
adc
sbb
pop
cs
test
inc
jge
popa
stc
sbb
and
sub
aam
pop
sub
test
mov
pop
test
add
mov
lahf
cmp
add
cmp
inc
add
inc
add
or
pop
sub
and
mov
pop
xchg
or
add
add
xchg
or
add
push
or
sbb
adc
ret
jmp
dec
not
and
mov
shr
xor
mov
jae
sti
outs
xor
rol
xor
mov
dec
call
ss
inc
mov
inc
add
xor
or
lea
mov
int3
mov
push
dec
adc
lea
scas
jge
mov
fmul
pop
jb
(bad)
xor
out
aaa
mov
jnp
outs
inc
add
pusha
int3
inc
(bad)
mov
out
mov
push
sar
jle
inc
and
ss
and
aaa
aas
fwait
jecxz
pusha
mov
out
dec
inc
push
sub
sbb
or
jbe
es
pushf
je
xor
ret
jmp
dec
push
mov
fwait
sbb
dec
ins
xor
xor
lods
cmp
push
pop
pop
sti
pop
xor
test
push
pop
cmp
sub
adc
push
pop
pop
(bad)
pop
inc
fld
dec
ja
mov
mov
add
cmps
pusha
not
push
or
add
(bad)
mov
push
imul
cld
add
sub
call
mov
cld
add
ja
pop
test
xor
jmp
add
mov
mov
mov
mov
add
pop
mov
pop
jb
and
dec
cwde
or
or
pop
ins
ret
mov
pop
ja
pop
xchg
or
and
data16
cld
lds
push
push
inc
jl
mov
stc
push
jecxz
ins
sbb
jmp
loop
or
daa
cdq
xor
or
or
mov
div
lods
mov
sub
loop
icebp
pop
jl
push
sbb
lods
add
or
sbb
dec
movs
loopne
pop
add
mov
mov
xor
pop
push
ja
sbb
add
inc
retf
jmp
fist
adc
idiv
mov
push
mov
jl
shr
ret
(bad)
aaa
pop
sbb
je
jmp
lea
ror
dec
or
loopne
add
mov
or
xor
sub
jne
pushf
rol
pusha
push
sbb
dec
mov
mov
inc
sub
retf
adc
sub
pop
jbe
push
xchg
ds
fwait
or
adc
inc
adc
adc
je
pop
test
sbb
out
lock
mov
push
(bad)
add
push
xor
pop
mov
fst
or
mov
jbe
cld
ja
push
mov
ror
sbb
adc
shl
adc
push
xchg
rol
ja
hlt
mov
jo
jg
or
mov
mov
cmp
pop
inc
push
mov
add
mov
cmp
ja
mov
adc
inc
jge
ja
push
pop
pop
test
push
jb
inc
cdq
fsubr
push
mov
cwde
jmp
aas
sub
push
cld
add
add
or
inc
inc
in
cld
adc
out
or
(bad)
sub
push
xor
cmp
je
jp
jge
mov
outs
adc
adc
xchg
popa
dec
add
call
fisubr
mov
inc
lock
mov
mov
adc
es
inc
adc
pop
call
mov
push
push
bound
push
scas
push
leave
mov
jnp
inc
jns
push
or
jb
call
add
or
adc
mov
xor
pop
pop
clc
ror
add
ins
mov
inc
or
xor
cmp
xchg
adc
lock
dec
(bad)
shr
out
popa
jecxz
rol
or
call
es
and
jne
cmp
push
mov
or
dec
add
ins
rcr
sbb
je
push
push
add
pop
pop
ror
leave
mov
lods
es
enter
(bad)
xor
xor
test
jbe
jp
pop
std
sub
add
xor
sub
retf
mov
lds
jl
add
xor
lock
jns
push
sbb
idiv
ins
pop
pushf
mov
cmp
je
or
jbe
psrlq
fsubr
nop
mov
pusha
mov
mov
sub
dec
jb
data16
loope
mov
push
push
lea
mov
or
adc
sub
adc
lods
mov
sbb
pop
fild
sahf
cmp
or
adc
add
xor
test
inc
dec
push
mov
inc
xor
dec
add
push
jb
in
sub
cmp
in
push
and
pop
pushf
pop
cmps
imul
pop
mov
adc
pop
pop
call
pop
pop
pop
pop
fldenv
inc
popa
pop
push
xchg
push
pop
aas
fadd
movnti
inc
add
(bad)
mov
push
ret
push
xor
sub
rol
rol
and
and
shl
adc
adc
ret
ins
adc
mov
dec
cmp
jbe
and
inc
sub
or
ins
adc
jmp
adc
sbb
add
sub
mov
push
cmp
add
cmps
fwait
adc
and
push
xchg
and
mov
shr
inc
cmps
adc
jecxz
sbb
jle
movs
adc
test
sub
sar
xor
ss
dec
out
jle
xchg
xchg
dec
sti
mov
push
push
dec
sar
cmps
jnp
cmp
leave
hlt
sbb
xchg
je
adc
into
cmp
cmp
pop
jo
dec
or
shl
cs
les
add
and
and
mov
jg
jle
jae
mov
dec
mov
mov
jne
inc
(bad)
sub
in
mov
mov
jnp
jne
mov
inc
ins
mov
inc
jb
inc
out
adc
inc
cmp
jb
daa
movs
mov
adc
or
into
mov
ins
mov
jne
pop
bound
push
call
shl
sbb
xor
mov
mov
out
ret
sub
mov
cmp
jb
push
pop
ret
pop
xchg
dec
stos
inc
dec
push
adc
xor
fwait
and
stos
mov
inc
mov
into
shl
add
or
cmp
jl
xchg
movq
adc
xor
outs
or
lds
mov
dec
mov
dec
and
mov
cmp
je
sti
push
push
push
inc
mov
mov
rol
int
sahf
je
or
or
jg
stos
cmp
pop
or
and
inc
jge
mov
mov
sbb
jbe
add
dec
and
pop
add
adc
jg
add
adc
xor
inc
hlt
dec
fist
loop
sbb
jp
cmp
mov
push
add
add
mov
fbstp
xor
sub
jmp
cli
cmps
mov
call
mov
outs
or
or
add
adc
loopne
jbe
dec
ret
add
sub
ds
scas
mov
(bad)
fadd
mov
or
jno
sbb
sbb
adc
fist
pushf
jb
enter
rol
jo
pop
pop
push
mov
sub
mov
push
mov
fdiv
sub
(bad)
mov
lahf
sbb
(bad)
jne
int
push
or
je
aaa
jns
cmp
sbb
and
into
pop
inc
and
inc
sahf
or
sbb
push
and
xor
sub
ret
adc
call
or
(bad)
adc
add
jne
mov
fcomp
out
adc
inc
push
mov
mov
push
out
or
push
mov
mov
and
inc
cmp
add
popf
icebp
call
into
pop
and
push
fcom
mov
cmp
lods
pop
pop
pop
push
movs
fnsave
adc
jg
mov
stos
and
into
dec
clc
hlt
push
dec
fdivr
mov
dec
shl
push
mov
cmps
js
je
es
or
or
cs
add
add
pop
js
xchg
pop
int
push
add
sar
fldcw
out
xchg
lods
add
xchg
jmp
jnp
into
lods
push
test
jne
cmp
outs
jmp
rcl
xchg
or
rcl
lahf
add
pop
pop
mov
mov
rcr
jb
data16
lahf
mov
push
or
and
cmp
push
mov
pop
adc
lods
outs
pop
inc
cmp
jb
and
aas
adc
lock
jge
test
out
test
repnz
adc
leave
imul
mov
push
or
xor
mov
and
lods
je
pop
out
or
xchg
cmp
aaa
call
lahf
and
(bad)
cmp
jbe
jmp
jb
pop
jbe
pushf
xor
jmp
jb
cld
xor
in
cmp
out
out
xor
xor
test
jne
jb
stos
and
dec
xor
sub
shl
or
push
jp
sbb
xchg
sbb
enter
jmp
inc
push
mov
cmp
lods
shl
sub
es
fcomp
add
mov
scas
aas
add
loop
mov
shr
mov
jmp
pop
cmp
arpl
push
add
fcomip
xchg
mov
or
push
test
sub
(bad)
sbb
adc
add
xchg
jnp
cli
sahf
pop
xor
or
mov
inc
jne
jb
and
cdq
pop
loopne
fidivr
call
adc
pop
push
arpl
push
jg
sbb
test
loop
iret
cli
cmp
loopne
neg
or
and
sub
out
dec
jno
lds
pop
push
ja
in
inc
ds
pop
jae
push
or
sub
push
ja
mov
mov
jb
das
(bad)
mov
sbb
add
push
mov
fsubr
jne
fisub
mov
(bad)
call
jnp
enter
inc
std
cmp
xor
and
pop
test
pop
mov
mov
rcl
sub
xchg
and
sub
inc
ds
jb
mov
popa
xchg
repnz
das
pop
jo
add
(bad)
jbe
jmp
sar
cmp
repnz
movs
mov
inc
or
push
or
xchg
ins
xor
jne
mov
test
sub
shl
test
sub
xchg
ins
cmp
int3
clc
(bad)
rcr
sbb
or
and
fucomip
jecxz
mov
add
mov
nop
jo
neg
sbb
leave
jecxz
xchg
je
in
xchg
scas
jo
xchg
lods
inc
je
mov
fs
push
xchg
loopne
xchg
jge
and
je
jmp
xchg
popf
push
jns
sub
add
ins
fimul
popa
arpl
sbb
sub
cs
jo
and
loopne
je
inc
pusha
cmp
sub
cmp
sub
add
xchg
mov
push
movs
jo
mov
loope
push
into
js
jbe
lds
xlat
inc
adc
std
pop
shl
scas
cmp
cmp
add
test
punpcklbw
fnsave
in
(bad)
push
sbb
dec
mov
cmp
rol
rcr
ret
shl
inc
pop
cmp
sbb
lock
mov
xor
cmp
je
xor
mov
jbe
push
rol
fadd
xor
xor
xor
std
fstp
cmp
fstp
test
xor
push
jb
(bad)
cld
xor
cld
out
in
nop
loop
frndint
xor
xchg
aam
push
in
push
mov
int
clc
sbb
push
mov
popa
add
dec
jge
shl
lea
add
dec
add
sbb
out
and
adc
jmp
fadd
inc
icebp
sub
lock
cmp
push
adc
jo
push
cwde
add
cmp
sub
js
test
xchg
fsub
aas
lea
inc
adc
jb
test
sti
mov
sbb
enter
push
retf
mov
add
test
inc
mov
push
lods
sbb
cmp
cmp
cmp
lods
push
sub
push
cmp
out
sub
gs
inc
cmp
cmc
inc
adc
push
pop
add
test
mov
pop
mov
push
leave
or
cli
adc
or
sbb
mov
push
jb
mov
mov
push
xor
mov
add
xor
adc
push
inc
push
cmp
pop
sub
add
jle
mov
xchg
mov
xor
sbb
or
mov
mov
jle
add
inc
cmp
jb
push
jb
cld
mov
jmp
out
test
sub
push
pop
popa
mov
fcom
or
sbb
add
lea
frstor
or
popa
je
shr
push
idiv
(bad)
and
cmp
movs
or
mov
or
je
dec
adc
or
loop
call
mov
jmp
sub
popf
sbb
and
ror
lock
repnz
adc
inc
adc
add
clc
cli
dec
shl
or
adc
jge
shl
and
sub
or
mov
adc
xor
add
loopne
loope
add
inc
xchg
std
or
shl
clc
adc
mov
add
fldcw
cmps
in
es
lahf
and
push
sbb
aas
mov
cmps
mov
scas
ja
jbe
bound
or
add
adc
dec
xchg
xchg
cmp
cmp
lock
icebp
cwde
shl
push
sub
test
popa
inc
ins
mov
aam
dec
sbb
sub
mov
cmp
xor
popa
inc
ins
sbb
adc
or
das
pop
xlat
xchg
pusha
sub
adc
xor
mov
add
mov
call
mov
xchg
cmp
je
push
xchg
pop
lea
inc
mov
sbb
sbb
jae
add
fnstenv
lods
push
repz
pop
or
outs
xor
push
push
sub
aam
or
mov
push
pop
fistp
(bad)
cmp
or
push
retf
inc
int3
push
out
push
push
pop
fucomp
adc
cmp
sub
mov
push
sub
add
mov
cmp
push
sbb
ret
test
push
mov
sbb
and
push
int
(bad)
sbb
xchg
and
and
int
jbe
dec
dec
lds
ds
xchg
stos
sub
ret
outs
xor
call
jb
cmp
rcr
cmp
jne
inc
jp
dec
pop
xlat
shr
push
mov
cmp
inc
call
in
lock
adc
cmp
push
inc
xor
sub
or
jge
loopne
pusha
push
ror
shl
jmp
std
xchg
mov
add
jne
je
adc
ins
mov
or
je
loopne
cmp
fcomp
lds
mov
test
ret
jns
fimul
add
sub
test
or
inc
add
pop
cmp
pusha
or
sbb
popa
out
xchg
push
jb
sti
mov
fld
or
mov
mov
jbe
add
dec
(bad)
xor
xchg
dec
mov
cs
xchg
imul
sub
cmp
je
dec
gs
pop
cld
mov
push
lea
cmp
jbe
mov
enter
stos
shr
rol
dec
sahf
and
mov
cld
(bad)
lock
nop
adc
inc
sbb
data16
add
xchg
shr
push
add
mov
mov
aad
(bad)
loopne
or
out
jae
dec
clc
pop
aad
xor
cld
(bad)
repz
je
add
cmp
xor
xchg
sub
mov
jl
dec
test
js
or
jno
pop
sub
jns
out
rcr
shr
ja
mov
mov
popf
lods
xchg
mov
cli
sub
test
sub
sbb
cmp
push
adc
inc
mov
mov
adc
jbe
and
adc
mov
add
add
cmp
loopne
stos
mov
test
jmp
ret
add
mov
test
icebp
or
add
sbb
lods
cmp
push
mov
and
lock
repnz
push
outs
sub
pop
popf
loopne
pop
mov
cmp
sub
and
sbb
sbb
push
jb
pop
push
sub
jo
pusha
jo
mov
mov
sbb
add
sub
inc
mov
jbe
jp
push
outs
popa
and
inc
sub
call
mov
sub
mov
sbb
inc
rol
sub
ret
mov
rol
jecxz
xchg
sbb
pop
cmp
xchg
inc
adc
mul
je
ret
inc
jp
je
cmp
ja
cmp
sbb
xchg
popa
sbb
or
and
fisttp
mov
mov
add
xor
idiv
adc
test
stc
outs
lea
add
pusha
inc
mov
mov
dec
or
and
lea
push
pop
call
imul
push
push
xor
push
in
in
es
js
inc
sub
dec
jbe
or
adc
dec
dec
shl
or
mov
push
xchg
or
adc
jns
sbb
and
sub
cmps
pop
jp
pushf
cmps
enter
sub
les
mov
adc
add
xor
fidivr
adc
mov
sub
jbe
sub
lock
(bad)
push
fbld
cmp
cmp
lock
or
cwde
rcr
add
test
jbe
fisub
test
and
fwait
scas
int3
cmp
add
in
inc
inc
cmp
jb
inc
sub
movs
(bad)
xor
pop
and
mov
jno
(bad)
sub
call
mov
add
(bad)
and
and
fld
sbb
les
hlt
ror
xchg
jge
jo
add
dec
cmp
or
std
dec
jmp
dec
ja
xchg
dec
ds
outs
pop
sbb
cmp
frstor
dec
iret
xor
aam
cmp
jne
(bad)
test
xor
shr
in
retf
adc
ret
mov
(bad)
sub
mov
repz
dec
sub
into
mov
jecxz
push
test
in
inc
adc
loop
xor
inc
inc
mov
mov
add
add
and
jmp
popf
cmps
jbe
test
sbb
jmp
jns
xor
int3
add
test
xchg
mov
sti
push
je
adc
fdivp
cmp
inc
cmps
test
sbb
(bad)
dec
(bad)
adc
add
jmp
dec
add
in
lahf
inc
lods
repnz
or
sbb
ret
jp
(bad)
test
mov
aam
pop
xchg
dec
jl
repz
adc
stos
nop
sbb
dec
scas
popa
fs
loope
pop
(bad)
shr
retf
inc
inc
ins
mov
mov
repnz
sub
and
out
jmp
mov
scas
push
dec
push
adc
mov
pusha
mov
popa
push
push
mov
inc
adc
xchg
test
(bad)
mov
add
cmp
and
lods
push
push
popf
aaa
sbb
pop
xchg
ficomp
push
add
adc
(bad)
fsubr
shl
mov
xor
loopne
or
add
mov
fld
rol
test
out
mov
and
push
push
jae
fisttp
not
rol
push
ins
dec
je
jl
and
inc
cwde
fs
mov
inc
pop
push
lea
mov
mov
pop
inc
add
xor
stc
xor
test
push
adc
add
inc
mov
movhps
in
or
jmp
sbb
cmp
mov
fsubr
mov
leave
movs
push
imul
add
inc
sbb
mov
pop
or
or
fs
push
shr
dec
add
sti
jne
aad
ja
cs
cmp
and
adc
shl
adc
and
mov
sbb
push
hlt
ret
call
mov
push
clc
inc
mov
mov
adc
inc
jmp
leave
adc
push
cli
add
imul
push
add
adc
add
mov
and
cmp
jb
mov
out
push
fdivr
jmp
sbb
mov
jp
push
adc
into
bound
push
cs
cmp
popf
loope
sbb
push
push
nop
add
and
adc
mov
and
and
je
sbb
push
cmp
adc
ds
addr16
jno
in
push
aaa
cmp
mov
dec
inc
inc
and
mov
dec
pop
nop
mov
pop
jnp
add
ficom
out
mov
bsr
retf
out
inc
push
adc
add
cli
ret
xor
shl
add
pop
mov
das
lea
std
test
push
mov
sbb
ins
movs
jnp
sbb
jno
push
mov
sbb
and
sbb
mov
mov
push
mov
mov
cmp
pop
sti
mov
inc
lods
into
sahf
imul
stos
dec
push
cmp
je
sub
dec
push
cmp
mov
not
cmp
je
mov
or
adc
loopne
dec
add
xchg
pop
shl
inc
mov
cs
(bad)
(bad)
or
into
out
or
xor
lea
push
ficom
test
sub
adc
add
dec
aaa
ret
cs
push
or
ins
mov
push
mov
pop
mov
inc
xor
mov
dec
(bad)
out
adc
inc
mov
mov
enter
mov
les
xor
push
mov
cli
xor
cmp
inc
aad
subps
call
fcmovb
out
jl
or
repnz
bound
xor
aaa
push
or
jl
test
clc
sub
jne
fwait
loopne
add
mov
cmp
add
sar
sbb
push
jb
and
les
push
(bad)
(bad)
retf
mov
push
in
rcr
(bad)
imul
cmps
scas
pop
shl
rol
popf
inc
iret
mov
je
push
push
es
pop
in
inc
cmp
test
mov
in
add
push
add
add
adc
jb
cmp
fild
cmp
push
inc
mov
imul
sti
adc
cmp
inc
cs
push
sbb
add
adc
test
inc
xor
adc
test
sbb
(bad)
adc
ret
push
mov
pop
sti
push
adc
pop
sar
ret
add
mov
dec
rcr
inc
repnz
ds
xchg
sar
je
push
std
rcl
lods
mov
cld
lea
mov
scas
sti
fld
loopne
aas
loop
aaa
and
push
mov
or
fbstp
clc
cmp
je
jle
mov
cli
lea
cmps
movs
jmp
stc
and
icebp
mov
push
cmps
lods
lea
jg
addr16
push
sbb
jne
xchg
cmp
jl
push
jbe
cmp
jp
dec
add
dec
and
pop
setae
inc
pop
jns
sbb
adc
adc
(bad)
and
xor
jns
sahf
dec
adc
mov
cmp
dec
rcl
addr16
or
xor
aaa
js
dec
add
push
push
call
retf
push
popa
out
add
fcom
aam
ins
push
rol
mov
adc
je
sub
sub
int3
jg
ror
adc
push
pop
or
cmp
xor
loopne
add
lock
xor
sub
adc
pusha
or
push
inc
loop
add
enter
sbb
test
xor
adc
aaa
hlt
pop
hlt
dec
cmp
test
xchg
push
cmp
fwait
(bad)
icebp
pop
push
sar
add
inc
out
scas
adc
mov
add
dec
rol
mov
sub
in
cmp
cmp
cmp
je
mov
std
adc
dec
fcom
shl
pop
or
rol
call
lahf
nop
sahf
das
add
xchg
inc
adc
gs
sbb
ret
xchg
mov
push
not
inc
adc
sbb
jbe
jb
rcl
cmps
jb
loopne
add
rcr
repnz
stc
scas
cmp
inc
jne
cmp
and
not
pop
push
jle
das
loopne
and
out
cld
mov
xchg
inc
fs
cmp
jae
sub
sub
mov
pop
push
pop
add
add
hlt
jb
aam
clc
and
mov
jl
xchg
push
jbe
or
or
add
adc
loopne
pop
adc
add
ror
pop
loopne
mov
test
pop
movzx
xor
and
and
in
pop
add
dec
(bad)
push
shr
push
pop
xor
pop
(bad)
(bad)
sub
mov
shr
and
pop
mov
shr
and
add
out
stos
sbb
sbb
pushf
sub
add
pop
pop
inc
xor
jle
sbb
mov
dec
or
sti
jbe
inc
mov
pop
mov
xor
js
imul
push
popf
adc
ret
and
pop
nop
fnstenv
pop
jg
cmps
je
cwde
xor
mov
jmp
dec
mov
aad
adc
jbe
mov
cdq
repnz
aaa
and
add
out
in
test
adc
inc
bound
inc
mov
sbb
sbb
or
or
test
mov
clc
adc
fcomp
cmp
push
mov
push
pop
sbb
into
ret
xor
cwde
adc
mov
pop
ret
pop
inc
call
pop
movq
push
cmp
cmps
add
(bad)
mov
retf
adc
sub
imul
xor
mov
pop
jne
push
(bad)
sub
ins
ja
out
cs
cmp
or
jmp
push
into
ret
fidiv
sti
or
je
call
inc
(bad)
pop
js
idiv
xchg
aad
or
mov
das
inc
pop
sbb
jmp
mov
lahf
nop
jne
xchg
add
scas
lods
and
adc
push
push
adc
cli
call
fisubr
add
mov
sub
es
and
pushf
jge
pop
and
xchg
leave
fnstcw
mov
push
jo
mov
and
js
std
or
cmp
test
ja
jb
and
adc
add
sbb
inc
aad
icebp
add
lock
hlt
xchg
mov
inc
(bad)
cmp
jmp
jnp
push
not
rol
loopne
imul
cld
je
sub
loopne
out
pop
sbb
fadd
pop
mov
dec
je
test
mov
adc
movs
(bad)
enter
mov
call
mov
mov
adc
xor
xchg
retf
je
test
loope
push
sub
sub
sbb
push
mov
add
mov
mov
pop
push
gs
retf
icebp
mov
inc
cmp
cmp
js
je
(bad)
xchg
or
mov
pop
pushf
xor
outs
cli
fmul
adc
dec
jne
pop
aam
cdq
pop
mov
test
lods
mov
stos
dec
inc
je
jo
sub
in
dec
and
xchg
aaa
pop
mov
shr
adc
push
jo
pop
div
mov
cmp
mov
push
outs
push
imul
or
xchg
popa
adc
mov
sub
xchg
sub
sbb
or
xchg
and
iret
lods
or
push
movs
add
or
sbb
pop
jne
cmp
test
(bad)
sub
inc
dec
cmp
pop
or
sbb
icebp
stos
push
adc
jo
or
(bad)
pop
inc
rol
push
xor
xor
retf
adc
sar
adc
ss
repnz
enter
sahf
and
inc
aaa
add
push
test
fild
xchg
addr16
sti
mov
add
ja
mov
into
inc
pop
xchg
fisub
or
dec
jne
pop
push
push
adc
daa
xor
lods
std
pop
ja
jb
push
or
bound
sub
test
mov
sub
add
push
mov
stc
pushf
add
xchg
or
sbb
inc
cmp
add
xchg
mul
xchg
lahf
jns
mov
out
(bad)
mov
cli
iret
imul
pop
sbb
bound
cmp
push
push
ret
jle
int
outs
xchg
inc
test
cmp
push
aaa
or
jmp
xor
and
or
jp
ret
add
dec
fcmove
test
shl
add
mov
jne
lea
sti
inc
fcmovb
lods
out
out
xor
cmp
imul
rcr
push
mov
or
(bad)
loopne
jne
jg
js
scas
sbb
jecxz
mov
push
jne
cmp
in
lock
or
xchg
jne
popa
fdiv
inc
add
jne
xchg
push
in
cs
ins
test
sub
in
(bad)
jnp
cmp
adc
adc
jmp
sub
ret
gs
into
inc
aam
mov
jp
leave
loopne
pop
push
nop
mov
stc
mov
mov
or
add
or
aad
mov
dec
mov
rcr
mov
inc
sbb
push
test
adc
push
adc
sbb
imul
inc
clc
sahf
sub
mov
push
inc
adc
nop
scas
stos
xor
adc
or
sbb
inc
mov
push
jle
mov
cmp
ja
add
xchg
push
mov
ror
xchg
mov
push
mov
(bad)
mov
sub
stos
sub
pop
movs
movs
xor
xchg
add
cmp
push
push
mov
repnz
add
add
(bad)
cmp
cmp
jae
xor
cmp
jbe
imul
push
mov
mov
push
sub
jnp
ss
xchg
jnp
mul
push
shl
xor
push
or
jmp
cmp
pusha
pushf
fwait
sahf
ret
add
mov
adc
inc
sub
add
out
lods
mov
mov
push
sub
mov
sbb
push
mov
imul
stos
ins
cdq
repnz
push
push
sbb
or
int3
and
lahf
(bad)
sar
icebp
sbb
mov
or
jne
pop
push
test
add
sahf
xor
push
mov
cwde
loop
or
loope
daa
fwait
jne
ss
jo
add
xor
push
inc
jmp
jne
xor
leave
push
sbb
push
jbe
lahf
nop
xchg
inc
in
jg
dec
sbb
push
xchg
inc
cs
sbb
mov
outs
clc
adc
or
cmp
add
sbb
inc
sahf
jp
xchg
dec
xor
push
xchg
and
mov
std
nop
cmp
mov
push
arpl
loopne
fsubr
or
pop
xor
or
push
imul
aam
add
fild
push
addr16
sbb
push
jbe
jbe
clc
push
sahf
jb
daa
jmp
xchg
add
out
push
mov
sbb
es
or
mov
ins
mov
xor
fsubrp
sbb
xchg
lock
push
sbb
rol
sub
add
ins
inc
imul
adc
jae
nop
xchg
cmps
sbb
sub
lock
mov
push
push
mov
xor
xor
mov
dec
aam
(bad)
call
or
or
inc
(bad)
mov
sbb
in
pop
adc
mov
lahf
adc
mov
sbb
stc
mov
cmp
ja
dec
enter
or
dec
lods
add
or
add
mov
shl
cld
or
jl
pop
sbb
cmp
push
inc
(bad)
mov
js
cmp
xchg
xchg
mov
mov
fadd
sub
push
js
add
sub
jg
jge
add
push
or
and
cmp
js
adc
adc
mov
and
loopne
mov
fisubr
shl
or
add
xor
or
mov
and
push
jl
sar
dec
pop
mov
fsubrp
fistp
and
mov
pop
jo
loop
fs
inc
jb
and
cs
push
jne
enter
cmp
jae
std
rcr
push
mov
test
jle
outs
mov
ds
mov
aam
(bad)
xchg
or
jo
xchg
jg
loopne
cmp
repz
enter
or
mov
pop
cmp
or
push
adc
sub
aad
loopne
lods
add
jne
inc
das
(bad)
push
sbb
and
mov
or
test
xchg
sbb
and
sub
loop
(bad)
push
lea
mov
fldcw
cmc
in
ins
inc
mov
and
jo
fwait
icebp
push
shr
je
ret
sub
cs
cmp
ja
mov
sbb
push
out
xchg
mov
retf
imul
xchg
jne
rol
(bad)
inc
test
push
outs
outs
in
mov
mov
cmp
mov
icebp
jmp
cmp
and
(bad)
and
dec
add
ins
mov
add
and
jmp
outs
push
add
clc
fadd
cmp
or
jbe
add
mov
sbb
and
(bad)
retf
jmp
and
sub
cmp
ja
mov
jle
sub
dec
sub
fiadd
(bad)
mov
dec
je
ins
pop
cmps
fild
add
jmp
in
mov
dec
leave
(bad)
out
and
jbe
test
nop
mov
sbb
ins
add
mov
not
inc
xchg
scas
rcr
test
ins
dec
lods
mov
jge
dec
dec
add
pop
je
or
add
sub
sti
pop
ins
mov
adc
mov
hlt
sub
sub
pop
dec
jo
stc
jbe
clc
imul
cmp
sbb
jno
jg
push
call
sub
sub
mov
add
pop
scas
mov
cmp
jle
adc
int
outs
rol
sbb
add
adc
mov
clc
xchg
aaa
test
adc
inc
enter
js
or
shl
jle
es
mov
adc
sbb
lahf
dec
mov
push
cmp
add
imul
adc
inc
and
sbb
pop
mov
cmc
pop
xchg
es
push
lea
lahf
xor
lea
cmp
jae
pop
jle
(bad)
cmp
je
inc
div
mov
jb
movs
mov
sub
scas
add
push
cmp
(bad)
test
mov
push
xchg
lock
add
test
dec
ror
loope
out
ins
fmul
mov
rol
call
ins
jne
mov
scas
out
xlat
neg
pusha
dec
add
or
push
add
rcr
pop
sub
sub
in
sub
xchg
add
add
out
cmp
mov
shr
test
jl
sub
dec
out
rcl
mov
shl
dec
xor
jmp
sti
pop
pusha
jmp
mov
dec
not
mov
sbb
or
adc
add
dec
loopne
push
or
add
xor
lock
out
pusha
call
loopne
es
(bad)
and
shr
int3
pop
sub
and
and
sub
mov
(bad)
idiv
loopne
push
mov
shl
or
mov
mov
inc
xchg
xor
stos
pop
push
dec
add
sub
cmps
lock
xor
leave
retf
js
jecxz
add
add
scas
cmp
sub
shl
cli
outs
push
std
inc
inc
jmp
daa
jmp
jne
push
push
(bad)
popa
imul
add
ins
and
ret
jae
rol
sahf
and
(bad)
aas
aam
add
mov
mov
and
inc
add
dec
aam
cmp
shld
sbb
js
lock
mov
jne
nop
pop
(bad)
cdq
cmp
setne
xor
ret
fucomi
nop
adc
mov
dec
je
jl
inc
adc
adc
jne
pusha
mov
mov
lock
pop
aad
sub
cmp
pop
adc
cmps
mov
fld
scas
nop
or
scas
sar
loopne
std
in
jae
mov
mov
fprem
and
xchg
sahf
mov
and
jae
mov
and
push
out
shl
inc
pop
adc
mov
in
jae
dec
mov
jb
sub
aaa
aam
add
enter
sub
ins
cmps
push
jae
pushf
inc
mov
push
outs
sbb
or
into
inc
nop
cdq
add
sub
dec
rcl
mov
cmp
sbb
add
jmp
adc
push
push
fs
in
test
sub
sbb
mov
pop
add
adc
mov
add
shl
cmp
dec
rol
add
mov
pop
adc
sbb
sbb
test
dec
mov
adc
cmp
mov
xor
pushf
mov
shl
push
xor
mov
lds
pop
push
mov
dec
mov
jb
sub
mov
push
and
cs
lds
jmp
jle
mov
xchg
aaa
test
pop
aam
cli
adc
retf
mov
es
sbb
cmps
call
or
adc
lock
into
adc
out
xor
call
mov
shl
adc
lods
std
js
ret
shr
add
sbb
lahf
ins
pop
xchg
push
cdq
inc
jmp
je
add
mov
and
pop
jl
int
jl
jmp
push
sub
rol
mov
inc
or
inc
ret
imul
push
add
cdq
cmp
jae
mov
or
cmp
movs
sbb
jmp
jb
fild
inc
pusha
adc
jns
aas
dec
aas
pop
dec
idiv
shr
cmp
pop
pop
jnp
add
jno
and
retf
dec
add
data16
leave
jmp
sub
sub
mov
dec
or
das
mov
cwde
ja
sub
lahf
inc
xchg
and
retf
and
imul
mov
jp
xor
loop
vmread
std
add
cmp
or
in
and
ret
jle
adc
fistp
xlat
lea
add
xor
hlt
aas
pop
cs
mov
ins
add
mov
jl
cmp
adc
adc
lds
cli
add
pop
das
xor
jmp
sub
cwde
push
test
sub
pop
sbb
ja
xor
jle
sbb
xor
cmp
icebp
jmp
retf
add
mov
ret
mov
mov
outs
cmp
enter
cmp
adc
(bad)
jmp
fisubr
jae
and
sub
jns
lds
jns
xor
in
pop
lds
pop
mov
popf
and
(bad)
out
icebp
not
loopne
jmp
mov
jge
xlat
mov
push
bt
mov
shl
mov
rol
cmp
scas
adc
or
add
mov
test
and
add
(bad)
enter
int
in
(bad)
cmp
inc
sbb
and
sbb
or
or
std
mov
test
mov
enter
jns
fnstenv
aad
cmp
mov
pop
fnstsw
jns
mov
mov
and
sbb
jns
pop
test
push
imul
inc
sub
xor
sbb
sbb
push
cmp
fwait
mov
or
push
push
cmp
mov
test
pop
add
and
push
lea
xchg
push
ins
jo
push
inc
ds
jp
xchg
push
nop
jo
ror
add
add
lea
add
sub
and
mov
pushf
es
xor
or
popf
jo
cwde
push
and
jnp
pop
push
sub
and
add
cli
and
rcl
push
sub
sbb
cmp
call
(bad)
pop
add
jne
push
pusha
and
sub
les
sbb
or
cli
clc
out
mov
retf
lea
enter
(bad)
or
mov
dec
inc
mov
cdq
sub
inc
cmp
jns
mov
test
test
pop
in
dec
or
xchg
cmp
jae
hlt
mov
and
dec
jne
mov
dec
pop
push
add
inc
fistp
jo
pusha
mov
cs
push
mov
pop
or
pop
cmc
rcl
shl
adc
xor
add
inc
or
loope
xchg
ss
call
or
pop
lahf
inc
shr
sub
mov
(bad)
dec
or
neg
lea
and
add
sub
cmps
dec
mov
inc
jecxz
jmp
add
jecxz
cmp
xchg
pop
repz
sub
in
mov
aaa
sbb
scas
popf
ins
add
add
fmul
inc
and
sbb
cs
xor
lds
add
mov
jb
pop
pop
push
fcom
or
lods
nop
mov
arpl
or
add
repnz
scas
jle
test
sbb
add
jmp
xor
and
div
adc
mov
(bad)
push
sbb
mov
inc
add
lods
or
out
inc
cmp
pop
dec
fcomp
sti
lock
xor
or
ja
sub
add
add
jle
xchg
adc
push
lea
aaa
jmp
mov
inc
sbb
jmp
push
push
adc
inc
and
and
jne
dec
mov
or
ins
into
push
fs
mov
enter
xchg
mov
or
dec
mov
adc
or
mov
sbb
mov
xchg
lock
xchg
and
ret
cwde
sub
out
sbb
dec
sbb
in
aaa
sub
pop
cmp
and
inc
push
inc
repz
(bad)
pop
push
xor
inc
arpl
lock
push
pop
dec
cmp
cmp
cmp
push
inc
and
push
push
adc
bound
das
or
cmp
push
or
inc
jmp
and
dec
sub
(bad)
mov
je
nop
dec
cmp
sbb
and
inc
aad
ror
cmp
add
pop
mov
and
inc
adc
lea
dec
and
inc
jmp
pop
test
scas
jmp
adc
push
push
push
lods
neg
cmp
jb
push
jmp
xlat
sub
jae
lods
xchg
push
dec
jb
jmp
pop
jbe
aam
icebp
push
dec
call
stc
(bad)
mov
mov
ja
add
sbb
mov
xchg
dec
push
cmps
fistp
gs
and
add
add
pop
cld
mov
cli
or
loop
lds
adc
push
adc
jbe
dec
movs
xor
loop
mov
ret
lock
paddq
push
add
dec
in
call
jnp
xchg
push
cmp
and
add
pop
adc
std
inc
fist
pop
xchg
enter
push
jp
mov
inc
sub
add
imul
mov
mov
xor
dec
push
push
or
test
sbb
and
nop
xrelease
cmp
shr
dec
lods
(bad)
or
lea
sahf
add
cmp
sbb
mov
cmp
jae
mov
sub
jg
movs
fld
or
scas
mov
ret
in
shl
cmp
add
addr16
dec
cmp
dec
gs
(bad)
sub
inc
(bad)
in
or
outs
inc
pop
pop
and
add
not
outs
shr
icebp
xor
fadd
inc
sub
mov
cmps
mov
test
fwait
sbb
xor
lock
sbb
loope
(bad)
div
xor
mov
or
mov
cmp
cmp
enter
lock
add
test
aaa
pop
or
rol
(bad)
aaa
into
sbb
xchg
call
iret
jbe
xchg
fild
or
jo
scas
jge
push
(bad)
fcomp
bound
mov
xchg
dec
rcr
push
jl
punpckldq
and
out
mov
shl
inc
fsubr
xchg
in
or
xor
cld
enter
sub
add
xor
lea
(bad)
shl
or
jmp
lea
xor
call
mov
cmp
out
jns
push
pop
popf
int
pop
mov
jns
pushf
inc
jmp
lahf
xor
and
pop
ret
push
dec
xchg
jnp
push
scas
(bad)
adc
jg
mov
clc
sub
cs
push
jmp
sub
add
enter
aad
lods
jno
mov
(bad)
sub
pop
adc
(bad)
mov
push
ins
or
inc
stc
jg
mov
mov
jb
jmp
dec
sbb
repnz
pop
xchg
mov
(bad)
lea
cmp
add
test
not
cli
jge
psllw
test
pop
dec
and
sub
sub
sub
in
pop
inc
jp
mov
mov
rcl
pop
adc
ins
inc
push
cmps
pop
mov
scas
inc
clc
cmps
xlat
add
ret
sahf
fcmovnbe
ret
add
mov
loopne
cmp
xchg
push
push
ficom
js
xchg
sbb
loopne
clc
add
cmps
cmp
jle
stc
mov
jbe
pushf
or
add
fs
cmp
mov
mov
inc
enter
jb
fnstenv
mov
cmp
mov
cmp
int
ficom
push
xor
cmp
and
jmp
jle
add
ror
cmp
mov
aad
sbb
mov
pop
push
dec
pop
push
pop
test
cmp
adc
sbb
das
loopne
mov
mov
sbb
cmp
jb
mov
loope
add
and
test
or
add
dec
scas
jmp
stos
mov
xchg
pop
xor
cmp
mov
mov
adc
adc
xchg
enter
add
mov
in
mov
mov
sbb
stos
adc
data16
inc
add
retf
push
inc
cmp
sub
push
mov
cld
int
outs
pop
cmp
sti
adc
adc
(bad)
pop
mov
add
in
jmp
popf
ret
mov
cmp
pop
test
and
popaw
je
push
sbb
ja
gs
in
(bad)
xchg
inc
cmps
xchg
pop
pop
mov
aad
sbb
lds
call
pop
sahf
mov
pop
or
xor
rcr
fdiv
mov
cs
add
add
cs
inc
and
pop
addr16
pop
aad
lea
push
pushf
in
in
adc
add
fistp
loopne
dec
pop
pop
or
jne
push
mov
sbb
and
inc
stos
mov
in
pop
push
sub
add
adc
out
push
(bad)
test
xor
and
inc
daa
leave
xchg
imul
arpl
and
sub
push
lea
push
push
mov
int3
adc
pop
pop
adc
sbb
mov
add
and
nop
xlat
or
jb
(bad)
adc
aas
push
(bad)
add
ret
frstor
jbe
mov
data16
(bad)
pop
push
lahf
and
sbb
or
(bad)
sbb
cmp
or
jmp
repnz
cdq
mov
(bad)
imul
ins
xor
sub
inc
(bad)
fidiv
cli
out
(bad)
dec
les
ja
je
das
in
out
cmp
inc
and
cdq
adc
inc
adc
inc
fimul
jmp
mov
mov
xor
lock
cmp
xchg
inc
add
call
cmp
jne
and
rcr
add
stos
add
adc
adc
in
mov
mov
adc
add
or
and
pop
pop
ss
jg
mov
push
xor
and
mov
std
sahf
pop
inc
add
xchg
xor
pop
or
sbb
adc
xor
imul
adc
call
sbb
or
test
in
sub
mov
jmp
or
sti
adc
loope
inc
sbb
sbb
push
dec
xor
cmp
out
sahf
aaa
stos
push
adc
sbb
push
dec
lahf
and
push
xchg
add
mov
mov
ss
or
sub
push
or
mov
push
jmp
cmps
hlt
loope
jge
call
push
addr16
cmc
sub
fld
push
adc
sar
pop
push
inc
loopne
stos
sub
rcl
xor
adc
jle
movsx
fmul
sbb
adc
mov
fcomp
xchg
or
mov
mov
cmp
jl
cmp
jle
cmp
push
inc
jle
mov
sar
push
push
ret
mov
ret
mov
fisubr
cdq
cmp
(bad)
and
mov
sub
jno
or
jp
pop
clc
dec
mov
lea
xchg
push
shr
jl
xchg
push
fst
fisubr
sti
xchg
ins
add
fimul
dec
jg
mov
movs
mov
test
je
pop
jnp
les
aaa
clc
and
xor
cmp
je
add
xchg
inc
call
or
push
adc
mov
lea
dec
ja
inc
fs
je
jmp
xchg
xchg
inc
cmc
ja
or
cld
(bad)
jle
xchg
ret
sbb
push
push
xor
cpuid
add
(bad)
adc
add
sub
xor
push
pusha
rcl
push
mov
loop
mov
sbb
ror
mov
std
push
or
(bad)
push
ins
xor
jo
push
push
mov
pusha
mov
pop
xchg
xor
sbb
push
jle
mov
loope
sbb
outs
add
sub
rcl
movs
pop
cmp
fld
outs
or
js
jl
pop
xchg
ins
popa
popf
rol
or
into
enter
and
and
push
xchg
nop
shl
aaa
cld
and
popa
xchg
dec
sub
or
inc
and
add
adc
test
adc
pop
push
jns
push
icebp
add
sbb
aad
xor
in
or
retf
popf
and
enter
or
inc
sub
je
cs
retf
push
or
xor
addr16
or
movs
repnz
and
push
cmpxchg8b
(bad)
iret
aam
or
inc
sbb
sar
js
js
adc
add
mov
add
dec
or
or
scas
nop
sub
adc
sbb
or
scas
nop
sub
sub
in
mov
cs
cmp
mov
inc
sbb
xchg
dec
shl
adc
push
add
adc
inc
add
dec
movs
cmp
pop
fbld
add
icebp
mov
in
les
and
mov
cmp
push
rcl
pop
sub
add
retf
mov
pop
or
push
(bad)
xor
xchg
cmp
mov
cdq
push
add
pop
movs
ss
sbb
mov
int3
xor
xor
and
or
xchg
nop
push
mov
or
cmp
retw
sub
nop
push
add
fimul
ja
inc
push
cmp
rcr
push
dec
test
inc
test
out
jl
ret
or
adc
outs
fiadd
xor
or
or
or
test
xor
sbb
pop
pushf
inc
adc
jb
sub
pop
or
(bad)
clc
adc
adc
dec
das
mov
add
add
push
push
ret
dec
sub
xchg
mov
and
ins
push
retf
inc
or
cmp
fadd
push
mov
imul
pop
out
push
add
or
mov
or
adc
in
adc
mov
jno
mov
pop
in
ins
mov
ins
adc
sbb
or
pop
sbb
test
pop
mov
push
xor
pop
pop
fisttp
dec
rcr
(bad)
fnsetpm(287
pop
adc
mov
cmp
dec
add
pop
xor
jg
mov
movs
add
hlt
or
fist
cld
adc
pushf
sbb
push
push
push
inc
mul
jge
pop
mov
dec
cdq
stos
push
ds
sub
push
pushf
sub
pop
jo
test
adc
push
cmp
sub
int
add
movs
popa
test
hlt
xor
and
mov
fild
rol
inc
test
pop
outs
out
xor
add
xor
cmp
cmp
aad
sub
scas
or
je
xchg
xchg
sbb
push
leave
sub
dec
push
aas
out
mov
(bad)
and
pop
cmp
push
mov
push
sbb
call
nop
std
adc
or
mov
inc
adc
mov
or
add
add
jo
into
adc
shl
dec
or
fbld
lods
mov
or
in
or
add
sub
mov
or
push
cmps
loop
int
jmp
add
test
inc
add
add
sbb
mov
and
out
or
mov
sub
jnp
inc
mov
test
je
jge
push
mov
cmp
movs
cmps
icebp
pop
icebp
mov
cmp
ret
out
or
and
jge
push
mov
xchg
sar
bound
and
inc
lds
or
xor
(bad)
jne
or
mov
cmps
dec
pop
dec
adc
add
add
mov
xchg
xor
call
dec
xchg
pop
jl
pop
sbb
fadd
call
lods
pop
(bad)
xor
inc
adc
pop
add
fdivr
sbb
push
out
lea
test
or
test
std
or
adc
jb
ss
or
xor
mov
xor
ds
push
sbb
sbb
inc
out
outs
adc
adc
ror
push
int
push
adc
add
sbb
mov
pushf
mov
push
push
push
cli
push
push
adc
or
cmp
outs
jmp
jbe
fidivr
jmp
mov
sub
push
loopne
ror
push
xchg
ret
add
cmp
cmp
push
mov
cs
enter
sbb
ins
xor
push
aam
lods
int3
mov
dec
or
cli
push
inc
in
fdivr
jle
cmp
cmp
es
(bad)
aad
mov
sub
adc
sti
je
xor
test
mov
mov
cmp
leave
test
mov
jmp
(bad)
hlt
mov
push
mov
jnp
pop
sub
dec
sbb
aaa
dec
add
or
mov
stc
fwait
adc
div
popa
add
and
cmp
mov
andps
outs
sub
out
aas
dec
push
cmp
inc
add
cmp
jle
push
mov
in
push
je
int3
sbb
leave
dec
push
sahf
mov
mov
dec
inc
inc
cmp
jne
xor
pop
pop
xor
pop
dec
repz
cmp
std
cmp
retf
ss
pop
mov
add
push
aam
sbb
mov
fadd
loope
pop
pop
loopne
inc
sbb
dec
inc
shr
adc
test
inc
inc
add
pop
and
sbb
sub
test
mov
clc
lods
or
xor
jne
popa
clc
pop
jg
jbe
xchg
cmp
mov
loop
inc
mov
inc
sbb
dec
add
in
or
add
push
nop
(bad)
or
sub
cmp
sub
fadd
les
mov
push
stos
cmp
sub
jle
cld
push
sbb
pusha
ins
mul
push
pop
inc
add
and
push
or
or
and
mov
sbb
dec
shl
sub
mov
test
push
aam
push
lea
mov
das
inc
push
add
sub
(bad)
cmp
add
ret
jno
fild
add
icebp
xor
push
and
push
inc
call
mov
outs
outs
pop
fs
or
jo
jne
lock
jle
leave
js
not
add
fsub
sti
aad
sub
imul
adc
and
push
fwait
inc
push
cld
lahf
sub
(bad)
imul
jg
cmp
or
mov
add
add
or
pop
out
mov
dec
jmp
xchg
mov
sbb
or
ins
sbb
and
cmp
bound
sub
sub
add
mov
and
add
inc
inc
and
jge
loope
jl
jg
mov
sti
or
jecxz
(bad)
jbe
sub
out
mov
call
cmp
(bad)
call
jne
test
je
mov
cmp
jne
cmp
pop
ins
jl
and
mov
fwait
add
inc
add
ror
jno
push
or
or
push
xlat
into
mov
push
adc
jbe
xor
mov
mov
inc
sbb
push
jns
(bad)
daa
js
cmp
push
dec
and
pop
aaa
and
leave
or
icebp
jmp
jbe
jl
fadd
fdiv
jo
push
cwde
xchg
dec
iret
daa
sbb
mov
cs
and
dec
mov
inc
push
sbb
xchg
push
add
xchg
test
sbb
mov
mov
sbb
mov
ins
(bad)
adc
cmp
sbb
jno
fisttp
jmp
(bad)
shl
ret
aas
sahf
fcom
sub
push
pop
and
pop
int
xchg
push
jne
mov
mov
retf
adc
push
push
out
mov
ja
sbb
and
int
add
loopne
sbb
cmp
inc
add
sbb
jbe
push
ret
adc
jge
adc
push
adc
pop
jne
cmp
stos
loope
inc
dec
sbb
shl
clc
or
or
pop
pop
or
push
and
pop
inc
add
xor
cmp
mov
pop
mov
adc
(bad)
jl
push
mov
imul
ret
mov
jl
dec
test
or
push
push
adc
add
or
jecxz
fisub
cmps
in
rol
add
cld
daa
add
(bad)
xor
pop
xchg
or
adc
pushf
sbb
or
push
bswap
scas
cmps
xchg
rol
test
add
in
mov
add
lods
test
adc
pop
enter
iret
pop
retf
push
les
add
clc
add
push
push
push
mov
je
cmp
ret
inc
xchg
xor
jbe
add
add
rol
nop
jmp
inc
xchg
pop
cmp
push
ss
and
pop
sub
mov
push
movs
fs
je
push
fwait
sub
call
mov
lea
lods
mov
dec
mov
mov
jo
mov
dec
sbb
fisttp
pop
sbb
inc
cmp
mov
cmc
aaa
xor
add
cwde
shr
add
out
push
push
cmc
xchg
outs
enter
pop
in
or
pop
mov
or
fisttp
std
sub
cmp
jb
dec
mov
js
push
or
es
sub
add
add
push
inc
and
xor
ret
sub
sbb
test
lods
mov
add
push
fdivr
push
imul
dec
add
dec
call
push
shr
popf
jp
inc
adc
inc
cmp
je
cmp
pop
push
add
jp
mov
arpl
or
mov
or
mov
bound
jns
lods
add
bound
das
or
jmp
clc
test
jmp
js
and
push
lea
push
sub
das
daa
iret
rcr
pop
jle
push
jmp
pop
pop
inc
mov
or
dec
mov
adc
adc
pop
xchg
loopne
xchg
push
and
pop
mov
daa
pop
pop
popa
das
or
stos
jmp
ds
jb
push
push
sub
adc
inc
xor
sbb
arpl
loopne
sbb
rcr
minps
imul
out
pop
pop
pop
push
pop
loopne
dec
movs
dec
pop
inc
pop
je
cmp
sbb
test
nop
sysenter
add
ror
jo
sbb
jmp
add
mov
add
loop
sbb
lea
mov
dec
cmp
xor
sahf
mov
or
xchg
push
shl
in
cmp
fs
mov
cmp
pop
mov
pop
mov
jne
je
xor
push
cmp
or
mov
xchg
neg
push
dec
clc
js
cmp
adc
imul
dec
sbb
je
es
je
sbb
xchg
movs
shr
push
test
(bad)
xchg
adc
mov
ret
jae
pop
sbb
outs
jb
mov
bound
push
stos
cli
push
sub
stc
adc
(bad)
mov
cmp
jne
inc
sbb
pop
pop
ins
sbb
mov
mov
add
cmp
and
shr
inc
jl
inc
ins
stos
arpl
adc
and
inc
cmp
outs
lods
loopne
and
xchg
xor
push
lods
ins
outs
jo
ja
mov
sub
inc
imul
inc
sub
ds
push
jne
sbb
xor
inc
and
jl
jl
outs
sbb
movs
xor
sub
fwait
loopne
adc
sbb
push
les
xchg
or
inc
xlat
loope
xor
ja
ins
sub
dec
imul
mov
jb
jmp
sbb
adc
test
sbb
sbb
adc
push
and
leave
or
les
jmp
pusha
ja
lea
mov
loope
or
add
scas
dec
inc
jbe
fs
adc
lds
jl
ret
cmp
jbe
or
call
pop
ret
in
inc
push
jno
adc
mov
fld
add
adc
mov
mov
sub
ja
pop
stos
arpl
shl
and
sbb
pop
das
cld
mov
ja
sbb
jne
cmp
cmc
shl
sbb
dec
mov
inc
outs
clc
mov
mov
(bad)
xor
and
fisubr
sub
push
les
mov
test
nop
ins
dec
ins
sub
push
push
push
adc
sub
in
add
sbb
add
add
and
hlt
sti
mov
sbb
mov
dec
test
imul
pop
sbb
ja
je
or
mov
lahf
pop
adc
jmp
xchg
cmp
daa
push
int3
mov
test
dec
imul
jno
sub
push
xor
sbb
xchg
into
fstp
int
jne
mov
sbb
das
(bad)
xlat
pop
xlat
movs
adc
jmp
cmp
cmp
pop
and
add
jb
cmp
fnstsw
das
jmp
xor
jb
repz
sbb
inc
jmp
inc
mov
loop
cmp
cs
sbb
out
and
mov
adc
dec
pop
ins
add
xchg
mul
shl
dec
scas
jb
(bad)
pusha
addr16
sub
pop
xchg
cmp
imul
or
cmp
mov
popa
push
and
cmp
push
fld1
dec
mov
aad
sub
mov
jg
mov
push
cmps
loope
xchg
outs
ret
aaa
lea
pop
mov
ret
clc
sti
jl
add
jmp
xor
mov
scas
adc
pop
outs
mov
xchg
pop
xor
sub
jg
mov
icebp
sub
mov
or
shl
fst
add
sar
add
retf
push
test
das
add
xchg
in
push
sti
add
jl
lahf
mov
loopne
iret
sub
jo
ficomp
add
sbb
jle
push
fiadd
sahf
inc
pop
pop
pushf
clc
mov
push
pop
push
icebp
adc
sbb
adc
inc
push
add
mov
sub
loop
adc
inc
mov
xor
ins
out
shl
jp
sbb
cdq
mov
jmp
inc
xorps
adc
sahf
rol
or
loopne
imul
sub
ins
(bad)
mov
shl
lea
push
mov
jnp
cli
adc
xchg
dec
rcl
outs
cs
push
xchg
adc
(bad)
clc
(bad)
dec
mov
out
mov
clc
js
sbb
push
icebp
jnp
mov
mov
jne
mov
imul
pop
pushf
retf
dec
push
mov
cmp
cmp
sbb
out
jmp
ja
ret
mov
inc
test
mov
aad
pop
pop
jno
sti
call
cmp
repnz
jmp
loope
in
inc
mov
imul
adc
pop
push
push
cld
sub
sti
fsub
pusha
push
or
loop
not
sbb
mov
scas
cs
orps
add
push
in
jle
lods
bound
jmp
dec
inc
ret
lock
mov
or
jg
movs
inc
cmp
cmps
cmc
fidiv
pop
cmovb
(bad)
out
push
sub
fisubr
in
xor
inc
add
dec
leave
shl
jb
or
repnz
inc
(bad)
cld
retf
ins
mov
sub
sbb
cmp
push
push
mov
dec
ret
ret
ins
stos
in
push
and
jmp
sub
inc
fsubr
xor
ret
mov
fst
push
push
jo
cmp
test
cmp
adc
lods
cmp
mov
push
push
mov
pop
lock
inc
fcom
push
js
clc
pusha
mov
or
test
ins
int
sar
xchg
sar
mov
sbb
jo
mov
inc
cmp
in
hlt
inc
cmp
jle
jmp
daa
push
pop
fabs
mov
call
pop
or
cmp
fild
inc
test
jl
jmp
add
push
inc
retf
xchg
ins
cmp
imul
sbb
out
xlat
mov
test
jb
rol
outs
xor
add
or
je
cmp
mov
dec
and
or
or
ins
jbe
ret
xor
pop
inc
je
or
mov
in
sbb
ret
(bad)
sbb
leave
add
adc
in
dec
repnz
adc
sbb
out
jb
movs
adc
add
jmp
mov
mov
push
cmp
push
ja
jo
sbb
push
std
adc
in
and
aas
out
cmp
push
mov
inc
jne
push
jo
cmp
mov
cmp
push
adc
mov
or
mov
sub
and
xor
xor
add
pop
dec
inc
cs
dec
daa
xchg
or
imul
mov
cmp
cmp
adc
inc
xchg
jl
add
jmp
sbb
test
pop
fucom
sbb
sbb
inc
push
arpl
push
adc
aam
add
push
push
add
loope
and
scas
and
stc
xchg
adc
ret
jecxz
nop
sub
inc
sbb
jns
inc
adc
fldenv
std
and
jge
enter
call
sub
sahf
or
jbe
in
mov
cmp
(bad)
mov
xor
xchg
xor
dec
xchg
dec
or
or
das
cld
(bad)
jae
mov
inc
(bad)
and
aam
or
test
bound
xchg
mov
add
pop
loopne
mov
xchg
ins
push
rol
jl
sub
leave
ins
add
xchg
test
out
push
and
movs
mov
scas
les
jmp
inc
inc
clc
xor
inc
mov
clc
dec
loopne
aad
iret
sbb
int
jo
inc
lds
add
test
cmp
sbb
and
jnp
push
push
aas
mov
mov
sbb
ror
in
sub
cmp
ror
jle
mov
and
scas
sub
shl
adc
popa
rcr
push
mov
xchg
pop
push
enter
jg
adc
test
test
fidivr
movs
mov
imul
or
loop
in
leave
and
int3
jae
push
js
fnstenv
cs
jae
stos
rol
sbb
(bad)
fwait
hlt
cmp
scas
mov
and
inc
test
pop
fisttp
jle
jno
jns
pop
xchg
push
loopne
adc
and
lods
push
rol
aas
arpl
(bad)
rcl
add
jge
adc
repnz
sahf
mov
pop
jl
mov
adc
mov
sub
adc
pop
and
adc
mov
repz
dec
or
shl
sbb
pop
lea
pop
and
fs
add
aas
into
xor
or
stos
repnz
movs
cs
stc
aad
je
data16
sub
cmp
jbe
lock
sub
add
cdq
arpl
dec
or
add
or
or
dec
cmp
add
lods
mov
jmp
jmp
ss
data16
cmps
or
fdiv
pusha
cmp
mov
fst
inc
jg
adc
popf
sub
inc
mov
test
dec
aaa
sar
jle
xchg
jle
in
fcomp
fld
outs
fisubr
mov
or
mov
mov
jmp
sar
enter
sbb
adc
adc
dec
ja
inc
cmp
sbb
pop
xor
add
add
pop
jbe
in
loop
ret
pop
cmp
add
push
inc
push
mov
ret
pop
push
shl
mov
push
adc
xchg
add
mov
(bad)
lock
mov
imul
mov
pop
push
test
xchg
mov
aas
jge
mov
and
lea
mov
push
mov
pop
pop
adc
aam
add
push
lea
add
pop
or
jns
fld
xor
or
(bad)
ds
movs
jno
cmps
jmp
inc
or
add
add
pushf
sub
arpl
push
aam
popa
addr16
pop
xchg
loopne
dec
ret
dec
mov
add
sbb
push
mov
arpl
fcmovne
enter
jno
pop
add
mov
movs
cs
lods
add
mov
inc
push
or
adc
mov
jge
enter
push
add
ror
push
mov
xchg
mov
mov
rol
ret
push
or
and
cmp
lea
clc
jne
not
inc
pop
aam
clc
bound
push
fs
sbb
(bad)
arpl
and
add
push
sub
dec
sbb
xor
mov
push
sbb
inc
push
imul
cld
adc
add
ins
cmp
and
lods
loop
add
jo
xor
dec
or
jne
dec
inc
push
xchg
sahf
outs
pop
inc
(bad)
or
sar
jmp
mov
or
call
xchg
sub
js
nop
loopne
ja
mov
and
mov
lock
dec
pop
xchg
cs
ja
clc
adc
pop
jmp
popa
inc
(bad)
iret
imul
aas
enter
imul
push
mov
jno
fdivr
cmp
jmp
mov
mov
cmp
ds
add
mov
mov
add
xor
cmp
ds
leave
sbb
sbb
or
adc
cld
push
call
ins
pop
push
adc
stos
xchg
(bad)
mov
adc
sub
movs
inc
popa
cmps
cmp
pusha
nop
adc
and
nop
dec
sbb
fistp
or
sbb
dec
push
sbb
fstp
jne
pop
lods
mov
xchg
inc
push
mov
aas
jno
movs
mov
or
das
int3
jbe
shl
or
lahf
in
adc
mov
add
mov
iret
sbb
imul
xchg
sbb
mov
push
les
push
inc
push
in
(bad)
aam
sbb
cwde
add
inc
pop
and
adc
int
pop
adc
repnz
and
push
bound
xchg
inc
inc
stc
daa
mov
ret
pop
pusha
xor
and
or
adc
add
or
sbb
sbb
inc
inc
push
in
daa
jns
pop
inc
retf
push
outs
sbb
test
into
or
sbb
dec
or
(bad)
fmul
(bad)
cli
retf
je
xlat
out
pop
add
sbb
or
push
mov
mov
mov
push
push
mov
enter
xor
cwde
push
dec
ror
scas
adc
mov
lods
xchg
cld
scas
sar
or
and
jg
xor
or
sbb
inc
or
rol
cli
mov
xor
arpl
loopne
fiadd
pop
and
jge
pop
inc
leave
aas
or
int
call
pop
jbe
and
add
push
dec
js
dec
add
cli
mov
popa
sbb
push
in
fiadd
rcl
cmp
mov
jmp
cmp
adc
xor
pop
cli
jo
popa
lods
pop
mov
pop
ret
sti
mov
cmp
cli
(bad)
adc
test
mov
sub
sub
sub
rcl
mov
int
pop
test
in
aam
sbb
(bad)
dec
push
(bad)
sti
stc
push
or
pop
or
mov
test
inc
xchg
adc
mov
mov
xor
push
add
xchg
jmp
xor
pusha
ja
push
mov
jb
pop
inc
mov
ficom
pop
mov
stos
arpl
jg
call
mov
and
mov
div
sub
xchg
xor
sbb
jmp
sbb
mov
sahf
ret
mov
xchg
ins
mov
push
fild
fst
mov
or
sbb
sub
fiadd
sti
sbb
adc
jecxz
sub
in
sbb
out
jnp
cs
out
fwait
lock
jbe
(bad)
fwait
mov
adc
aaa
cmp
rcl
adc
stos
and
mov
inc
test
jp
adc
and
sbb
jb
scas
xor
and
add
pop
pop
and
add
push
push
inc
sub
scas
(bad)
pop
sub
cmps
push
shr
mov
sub
xlat
repnz
jmp
ja
cld
fidiv
push
fstp
rcr
(bad)
mov
imul
push
or
or
popa
xor
add
jo
mov
or
test
jo
and
ret
jl
mov
adc
or
push
or
pop
(bad)
loopne
or
imul
xchg
sbb
jo
js
ret
sub
push
ins
fld
pusha
out
mov
xchg
lea
lea
mov
cmp
xor
or
inc
or
punpcklwd
and
add
inc
push
nop
mov
sahf
test
sbb
or
shl
mov
cmp
mov
jo
inc
push
sub
mov
retf
xchg
inc
jo
add
or
add
nop
mov
popf
movs
mov
adc
and
push
cmp
jne
adc
inc
das
pop
ret
inc
sub
jmp
pop
xchg
xor
mov
cwde
fwait
sbb
add
sbb
xor
loop
dec
pop
xchg
and
jmp
outs
sub
sbb
test
inc
shl
sti
xor
test
pusha
pop
test
cdq
cmc
es
push
dec
gs
fmul
sub
jmp
retf
in
push
mov
sub
pusha
inc
lods
sbb
mov
mov
loopne
sbb
(bad)
add
inc
add
cwde
add
fucomi
push
nop
lods
and
xchg
pushf
adc
mov
push
add
fisub
inc
cmp
in
dec
and
sbb
enter
sti
aaa
out
fidivr
inc
out
sbb
hlt
aaa
jp
dec
loopne
dec
mov
ja
inc
loopne
in
cli
cli
jmp
xor
cli
mov
jbe
ficomp
ss
xor
add
inc
movs
retf
sbb
not
add
and
jmp
adc
inc
dec
push
or
jmp
aaa
cli
jo
jb
jae
cli
sbb
sbb
mov
dec
sbb
sahf
data16
and
jnp
out
mov
ret
dec
repz
push
sbb
add
jge
ds
cmps
mov
cmps
jge
das
mov
dec
leave
push
hlt
stos
push
mov
cmp
in
inc
and
sahf
out
dec
mov
test
adc
push
cdq
int3
js
rcr
ins
lahf
out
lock
les
ins
iret
data16
mov
mov
xor
inc
mov
shr
inc
mov
adc
fcom
fincstp
xor
cmps
(bad)
(bad)
jb
loopne
cs
xor
out
mov
jns
(bad)
(bad)
(bad)
jg
add
add
add
or
or
dec
dec
push
movups
adc
adc
push
pop
sbb
sbb
mov
sbb
sbb
and
and
fwait
dec
jmp
sub
sub
cs
dec
xor
dec
xor
xor
mov
cmp
cmp
xor
inc
inc
inc
inc
inc
inc
inc
sti
in
push
outs
jo
nop
jl
scas
push
add
add
pushf
fs
dec
iret
mov
mov
jl
rol
int
stc
out
mov
or
mov
pop
push
push
dec
push
ds
out
les
push
mov
add
sub
inc
jae
sbb
rcl
rcl
out
push
mov
repz
push
movs
call
jns
int3
aad
icebp
sahf
test
xchg
cmp
and
or
jecxz
arpl
nop
test
sahf
ror
cmp
movs
add
cmp
mov
pavgb
xchg
jns
push
mov
or
pop
push
xor
fwait
push
bound
rcl
aaa
into
pusha
ins
xor
adc
retf
pop
std
lahf
xor
fs
test
je
xor
loopne
test
cld
or
clc
push
jne
sbb
in
mov
adc
(bad)
bound
add
and
mov
sbb
(bad)
cld
mov
adc
sbb
push
shl
mov
mov
nop
mov
sti
nop
dec
jb
daa
add
add
aam
mov
test
cmp
sub
lahf
xchg
and
ins
xor
or
or
fstp
mov
or
add
das
test
dec
add
mov
push
loope
je
in
lea
retf
js
add
sbb
out
enter
js
adc
or
sbb
(bad)
cmps
inc
pop
dec
mov
outs
sbb
cmp
push
or
add
call
jge
and
inc
sbb
push
xchg
rol
ror
add
mov
mov
ror
cmc
shr
out
and
adc
retf
retf
push
or
call
pop
call
clc
enter
mov
daa
sbb
jae
mov
loopne
cmp
mov
in
jnp
mov
cmp
call
mov
mov
xor
jle
mov
es
or
dec
or
int
out
cmp
and
jge
xor
sbb
je
cmp
fimul
je
mov
sbb
inc
inc
dec
test
dec
dec
call
test
mov
aaa
cld
or
dec
jmp
in
sbb
ja
xlat
or
push
je
cmps
push
retf
ret
jnp
dec
call
inc
jmp
cmp
cli
or
mov
call
rcl
and
aad
aam
aas
and
jb
jmp
mov
sbb
frstor
xchg
aaa
pop
sbb
(bad)
fsubrp
adc
div
inc
or
rcr
jb
repz
jp
mov
mov
mov
add
lods
sbb
push
lea
inc
adc
outs
mov
test
inc
out
cmp
enter
jl
add
lods
mov
loope
and
movs
fnstsw
gs
mov
mov
aaa
or
inc
je
cmps
jmp
adc
sbb
mov
adc
sub
sub
lea
mov
jle
inc
or
jp
sbb
ficom
aad
(bad)
mov
mov
push
into
aaa
or
push
bound
aas
add
sub
mov
ret
push
adc
push
sbb
sbb
jnp
cmps
mov
pop
fist
adc
jmp
jp
pop
push
ret
sub
pop
push
test
dec
add
inc
jo
push
rol
jmp
pushf
pop
sub
sbb
mov
arpl
pusha
xor
pop
pop
test
mov
inc
inc
add
stos
xchg
add
sub
dec
pop
inc
cdq
shl
sbb
rep
dec
outs
(bad)
add
xchg
je
outs
jl
out
call
not
push
jo
push
das
push
lea
icebp
inc
cdq
push
push
push
mov
jne
or
push
outs
jmp
fmulp
add
mov
popf
pop
jne
dec
adc
push
add
inc
cmp
imul
fisub
movs
mov
xor
ins
and
and
xor
je
sbb
ss
pop
xor
test
push
mov
mov
fcom
push
(bad)
push
jb
xchg
in
add
shl
pop
retf
mov
bound
cmp
or
mov
mov
inc
inc
and
call
push
jae
xchg
nop
xor
scas
push
shl
inc
sbb
mov
js
adc
xor
pop
cmp
jb
ins
and
and
adc
jle
cmp
dec
cmp
mov
and
inc
sub
and
or
cld
and
jmp
jle
ret
loopne
stos
daa
es
leave
cmp
pop
es
shl
(bad)
cmp
push
push
fstp
sbb
sbb
sahf
or
cmp
cmp
jb
sbb
aaa
in
lds
ror
add
add
sbb
mov
dec
adc
ret
add
das
adc
je
es
bsr
cmp
pop
adc
outs
cmp
add
fmul
push
inc
jmp
test
sbb
push
push
mov
or
in
mov
(bad)
sbb
pop
sub
clc
je
xor
or
sub
mov
je
lea
adc
push
jmp
sub
int
or
xchg
add
xchg
jo
div
push
mov
and
dec
push
jmp
inc
leave
movs
push
xchg
adc
push
mov
out
enter
enter
xchg
mov
xor
test
inc
ins
mov
ret
jne
imul
ja
cmp
js
sbb
adc
cmp
sub
or
cmp
dec
and
inc
pavgb
sbb
(bad)
add
add
(bad)
mov
(bad)
mov
hlt
jecxz
cmp
ja
(bad)
mov
push
rcl
or
hlt
clc
sub
test
add
pushf
sub
(bad)
bsr
or
push
out
mov
bswap
sub
sub
inc
jecxz
mov
mov
sbb
add
cmps
push
test
mov
mov
dec
xchg
clc
jmp
sub
jle
jle
mov
loope
xor
sub
push
and
and
not
std
loopne
inc
icebp
mov
sbb
adc
inc
or
sbb
add
pop
add
mov
dec
cmp
adc
and
add
dec
fcomi
ret
nop
xchg
cmc
dec
test
dec
sub
(bad)
in
pop
add
add
ss
cwde
fs
je
xlat
add
push
iret
(bad)
add
bound
mov
dec
cmp
push
adc
lds
push
ret
(bad)
imul
mov
rol
nop
and
push
pop
test
add
mov
fwait
jnp
call
cwde
sti
inc
or
(bad)
add
and
mov
hlt
jae
cmp
or
test
push
mov
gs
daa
pop
xlat
adc
mov
mov
xor
scas
call
dec
or
shr
adc
add
rcl
pusha
cmp
jle
or
sbb
and
ja
mov
or
cld
sbb
into
push
dec
add
ins
push
sbb
mov
out
sbb
jns
xor
sbb
cwde
push
js
imul
pop
in
lea
pop
lahf
or
rol
sub
adc
adc
aaa
xchg
mov
push
std
dec
imul
sub
ds
repz
ja
stos
in
gs
repz
out
sahf
mov
dec
idiv
inc
sub
ins
sbb
mov
pop
aad
mov
ror
mov
and
and
xchg
adc
clc
add
xor
shl
xchg
cli
dec
push
sbb
lahf
call
cmc
dec
aas
xor
add
push
ds
mov
mov
dec
sub
pusha
or
in
dec
repz
sbb
push
mov
cmp
mov
cmp
push
cmc
jnp
dec
sub
je
js
lea
inc
and
add
jge
and
or
ja
lock
nop
adc
jne
fisttp
sub
inc
jmp
mov
pop
repnz
in
(bad)
push
in
mov
xor
sub
movs
mov
xor
mov
xor
inc
lea
lea
pop
add
jge
arpl
add
inc
cmp
xor
mov
cmp
mov
fcom
jle
clc
pop
sub
inc
mov
mov
mov
and
inc
or
sub
add
cdq
pop
call
loopne
pusha
jnp
sbb
inc
shl
(bad)
mov
into
push
add
dec
(bad)
dec
lock
call
loop
outs
push
jb
or
ja
mov
clc
int
cmps
mov
sar
fucomi
out
mov
mov
adc
(bad)
(bad)
and
xor
outs
jno
dec
ins
mov
jns
in
mov
xchg
sbb
lods
(bad)
popa
inc
push
or
xor
popa
es
cmp
adc
inc
loopne
setge
dec
sar
ret
aas
imul
ret
mov
cmp
jne
test
neg
sbb
cld
push
scas
cmp
adc
xchg
test
cli
add
mov
push
jmp
repnz
mov
in
bound
inc
rcr
shl
cs
dec
mov
ret
ret
shr
aas
sub
leave
inc
push
dec
jo
into
stos
mov
mov
jl
and
div
ret
pop
inc
je
inc
add
jne
test
rol
icebp
jne
sub
in
aas
mov
pop
pop
je
xchg
add
mov
call
push
data16
or
jmp
mov
cld
push
in
(bad)
aaa
arpl
jp
adc
lahf
add
repz
add
aas
add
add
fcomp
mov
inc
test
jne
icebp
loope
sbb
test
or
hlt
cmp
push
dec
jbe
dec
inc
push
in
test
mov
cmps
push
dec
and
cmp
or
mov
or
test
mov
pusha
xor
jno
(bad)
and
add
sbb
add
clc
mov
imul
adc
mov
sbb
inc
ss
fnop
xchg
adc
push
push
(bad)
push
xor
sar
or
(bad)
jge
pop
push
js
jp
pop
mov
mov
xchg
js
or
xor
sar
mov
mov
jmp
add
mov
mov
or
inc
and
xchg
popf
and
sbb
les
mov
jl
adc
add
jbe
jne
jne
xor
shufps
sub
loopne
sub
xchg
call
and
sub
inc
inc
push
jno
aas
xchg
rcr
sbb
icebp
aad
lods
int3
add
pop
(bad)
cmp
out
and
xor
scas
cmp
or
pop
pusha
xchg
xor
popa
sar
and
fild
aaa
pop
add
mov
cmp
je
das
dec
fadd
hlt
push
nop
push
in
push
push
sbb
lahf
jno
or
aaa
ins
and
cs
or
rol
or
dec
xor
jmp
nop
stos
dec
cmp
jne
outs
jmp
push
in
jmp
mov
push
in
pop
js
push
ucomiss
mov
jne
retf
mov
mov
test
adc
scas
cmp
jmp
sub
sbb
push
inc
neg
jl
add
dec
add
retf
cmp
scas
iret
add
mov
and
lea
xchg
add
rcr
mov
fidivr
push
(bad)
inc
push
shr
(bad)
es
pop
cmps
jne
jmp
shl
cmp
test
jg
xchg
push
mov
cmp
and
mov
push
push
hlt
scas
sub
lock
mov
mov
cmp
pop
test
jle
mov
inc
int
in
bound
iret
cdq
call
push
add
or
cmp
sub
dec
add
xor
inc
cmps
push
push
push
jb
push
adc
fwait
js
mov
test
or
sbb
mov
repz
push
push
jle
push
jno
cdq
adc
jne
push
pop
ja
add
fs
xchg
or
push
ficom
jg
mov
add
and
and
cmp
cmp
jns
sbb
retf
mov
mov
sahf
fld
xlat
test
aad
mov
std
test
fidiv
pop
ret
fidiv
retf
push
ss
dec
cmp
push
or
dec
add
add
lock
jno
sub
adc
test
dec
add
je
rcl
push
xchg
mov
fbld
lock
add
aas
xchg
int3
pop
jmp
pop
pop
nop
push
loopne
cmp
(bad)
imul
pusha
push
xor
lahf
mov
mov
(bad)
lock
lock
call
or
retf
(bad)
jmp
adc
fsubr
xor
push
dec
push
and
fs
add
mov
loope
aad
xchg
cwde
lock
xor
adc
in
push
iret
add
pop
das
mov
fisttp
mov
xor
push
mov
jge
inc
data16
fsubr
and
sub
jmp
or
sub
cmp
inc
pcmpeqw
push
ret
scas
dec
push
inc
inc
jmp
jo
adc
sar
ja
rol
ja
or
inc
dec
bound
add
xor
mov
add
mov
xchg
lahf
pop
test
(bad)
nop
pop
push
scas
add
push
push
iret
repz
rcl
pop
les
lock
push
lods
push
mov
add
movs
or
sub
add
or
sbb
or
retf
or
add
mov
(bad)
fistp
popf
js
jo
out
add
stc
fiadd
ret
test
jno
frstor
sbb
push
jne
adc
push
sub
imul
not
outs
es
pop
jne
or
mov
je
jmp
cmp
push
mov
in
inc
or
or
push
call
jb
add
and
int3
jecxz
jmp
(bad)
mov
or
test
out
pop
xor
pop
(bad)
stc
jbe
jl
push
push
adc
and
add
pusha
test
add
adc
xlat
cmp
xor
jns
call
add
cs
leave
jae
push
outs
int
pop
pop
loopne
add
cmp
push
sbb
dec
fwait
test
gs
aad
sbb
inc
lock
cmp
jne
or
push
mov
hlt
cld
and
pop
call
push
jbe
test
jne
xor
out
xchg
cmps
mov
nop
dec
push
dec
outs
add
fsubr
stos
sbb
push
ss
cmp
sub
mov
shl
jbe
inc
sbb
les
jle
pop
je
mov
je
pusha
je
lea
imul
lock
stos
pop
ins
mov
cdq
lea
xor
xor
dec
xor
and
mov
addr16
retf
(bad)
bound
ins
jnp
mov
out
add
adc
or
pop
mov
rcr
icebp
or
or
add
jmp
push
mov
sbb
sub
push
sub
mov
add
call
call
movs
rol
add
mov
dec
(bad)
mov
sub
cmp
adc
lock
out
jae
mov
inc
dec
or
daa
mov
push
sbb
lods
xor
add
xor
inc
or
in
fwait
xchg
xlat
cdq
aam
add
push
add
fistp
push
fisttp
pop
xor
pop
ret
dec
and
sub
jb
push
loop
call
mov
(bad)
pop
and
xor
movs
push
pop
jmp
push
clc
add
adc
cmp
jne
mov
cmp
je
leave
cmp
jne
and
mov
gs
clc
and
inc
pop
inc
sbb
xchg
push
lods
pop
int3
js
in
xchg
jb
push
push
push
pop
adc
dec
jnp
sbb
mov
mov
iret
(bad)
psubsb
call
cmp
aas
adc
or
sbb
fcmovnb
rcr
cmps
sbb
outs
and
aad
cmp
add
add
jge
lea
cmp
je
jle
jae
cmp
jb
sbb
adc
mov
sbb
clc
es
or
jg
mov
mov
cmp
jb
pop
xchg
xor
pop
xchg
test
nop
and
data16
push
adc
inc
lea
test
pop
jmp
add
rcr
xchg
out
inc
and
mov
das
loop
aam
xor
mov
add
mov
sar
pop
mov
cmc
in
cs
jne
rol
mov
pop
mov
ss
cmp
push
pop
xor
add
add
pop
jmp
push
pop
cli
imul
inc
ror
lods
loope
popa
je
test
xor
mov
pop
cmp
inc
and
dec
xor
push
(bad)
ret
(bad)
loopne
cld
leave
or
enter
hlt
add
lods
adc
call
jmp
lods
jle
push
cmp
push
add
jb
xor
pop
scas
fdivr
dec
add
and
lods
cmp
and
scas
jmp
fiadd
add
mov
aas
push
push
sub
and
add
jno
cs
push
push
jl
(bad)
inc
sub
and
jl
sub
jo
and
or
cmp
xor
movs
sub
lods
repz
jp
sub
inc
sar
dec
pop
shr
cmc
je
push
add
xchg
jno
cld
and
std
jg
and
xor
and
jg
mov
xchg
sub
mov
gs
pushf
sub
bound
loopne
gs
xchg
imul
pusha
push
jg
je
adc
jg
je
push
call
xor
jno
push
xchg
push
das
adc
ds
jl
push
or
jno
loope
scas
push
cs
popa
arpl
xchg
sbb
xchg
mov
loopne
jl
or
mov
sbb
sub
in
loope
popa
les
and
pop
sub
pop
test
clc
cmp
call
lea
outs
scas
adc
stos
mov
js
shl
sbb
pop
fdiv
dec
or
cli
add
and
inc
ins
pop
add
imul
ret
inc
cmp
cdq
pop
pop
pop
adc
ins
cmp
icebp
sbb
dec
cmp
pop
cld
vcvtsi2sd
cmp
cmp
mov
(bad)
jle
sbb
(bad)
adc
or
sbb
scas
sbb
jge
pusha
sbb
mov
pop
pop
jmp
or
mov
adc
int
mov
in
das
ja
imul
sar
clc
push
stc
adc
in
ja
std
cld
cmc
jmp
mov
adc
jb
jge
jmp
pop
fcomp
out
ins
iret
cld
(bad)
nop
jbe
ja
mov
shl
mov
mul
loop
shr
add
in
jmp
cmp
test
push
pop
adc
div
sahf
idiv
sub
retf
pop
and
push
xchg
jb
out
icebp
jge
add
pop
push
push
adc
add
fild
outs
int3
adc
xchg
push
repnz
pop
dec
push
cmp
or
sub
xchg
test
cmp
repz
sar
sti
pop
adc
add
adc
jb
mov
lock
dec
ret
jnp
je
push
jp
mov
test
push
or
mov
bound
lock
inc
sub
lods
mov
loope
dec
xor
sub
cs
daa
push
xor
push
ror
push
cwde
sbb
sub
mov
and
loope
aaa
jne
pushf
shl
pop
dec
(bad)
in
clc
jb
nop
push
hlt
lods
add
fdivr
ret
nop
int
inc
cmps
sub
je
iret
sbb
inc
pusha
nop
repz
loope
push
mov
push
call
cmps
cmp
mov
and
adc
out
xor
sub
pushf
sbb
push
les
cmp
fnstenv
cmps
or
shr
sar
mov
push
sub
rol
xchg
jo
xchg
inc
adc
icebp
sub
aas
rol
mov
add
sub
pusha
js
or
jne
and
aaa
jp
repz
adc
outs
jmp
(bad)
dec
pop
xor
add
sbb
inc
push
sti
aas
push
pop
jne
cmp
jne
add
xchg
inc
adc
pusha
popa
loop
push
mov
or
push
xor
and
adc
add
mov
mov
dec
loope
loopne
sbb
scas
mov
inc
mov
lea
jnp
jp
not
sbb
add
inc
add
in
out
push
fisubr
inc
cmp
sbb
adc
add
mov
js
add
mov
or
add
mov
mov
mov
sub
xchg
loope
out
mov
inc
aaa
cmp
fsub
or
sbb
dec
dec
and
not
out
dec
push
fnstenv
out
sbb
jnp
adc
mov
or
out
sub
stc
je
xchg
loopne
sbb
cmp
test
jg
cmp
sahf
out
daa
push
inc
call
cmc
sub
push
add
inc
in
xchg
push
mov
sbb
adc
test
pop
cmp
and
xor
(bad)
dec
dec
inc
mov
push
add
add
dec
push
dec
push
lock
push
dec
mov
jmp
add
dec
dec
pop
lea
jnp
ds
or
sahf
and
fild
dec
adc
add
or
sbb
inc
popa
je
rcr
xchg
sbb
popa
push
sub
clc
mov
add
jle
cmp
push
popa
(bad)
lods
push
inc
sbb
or
test
test
or
push
fldcw
fs
xor
cmp
adc
lods
aad
cmp
xor
cdq
call
xor
sbb
daa
dec
pop
out
xor
xor
or
jnp
add
ins
adc
imul
dec
xchg
call
mov
inc
mov
loopne
sbb
add
jbe
xor
ror
cmp
bound
jne
ret
sbb
or
std
sub
fwait
test
jmp
sub
fdiv
pop
popa
ds
and
inc
je
popf
pop
cmps
add
push
je
outs
aad
push
jmp
inc
or
jne
lea
fsub
imul
jmp
adc
dec
outs
test
dec
es
neg
sbb
and
add
mov
das
popa
and
mov
shr
cmp
mov
ret
xor
imul
and
addr16
ret
rcl
int3
rcr
xchg
aam
add
in
and
pop
xchg
pusha
xchg
sbb
mov
call
adc
into
dec
imul
xor
sub
lods
loope
sbb
xchg
or
cmp
pusha
cmp
arpl
pushf
cmp
cmp
fnstsw
and
nop
enter
push
sbb
mov
pop
movs
sub
push
jl
ror
xor
inc
mov
jg
cld
add
mov
mov
add
adc
mov
arpl
xor
push
dec
pushf
ja
cmp
sub
das
and
add
xchg
add
fisttp
lock
not
and
rol
out
dec
jge
neg
cmp
mov
adc
ret
jmp
sbb
sbb
or
mov
xor
not
or
mov
test
fcmovb
inc
call
fisub
xchg
sbb
in
test
cmp
xor
rcl
pop
push
xor
push
push
lods
sbb
push
inc
in
test
shr
ret
pop
push
scas
jne
lea
test
inc
jne
loope
jne
ror
aam
mov
or
mov
dec
and
jle
(bad)
(bad)
mov
push
jmp
mov
mov
add
jmp
pop
stc
jmp
cmc
add
popa
push
jmp
in
push
lods
sub
cmps
pop
or
test
push
adc
inc
rcr
push
or
in
xor
jmp
cld
mov
jnp
dec
xor
xor
cmp
out
fldcw
mov
cmp
xchg
rcr
adc
push
or
add
push
scas
int
bound
push
sub
int
sbb
and
push
add
sar
ror
test
xor
add
add
cmp
or
sub
pop
inc
imul
es
xor
jmp
lds
jge
gs
pop
lea
push
out
or
sbb
es
addr16
mov
int3
imul
mov
ins
mov
xchg
xchg
ror
test
mov
cld
(bad)
not
je
adc
fs
(bad)
imul
mov
std
fwait
shr
imul
and
cdq
pop
xor
mov
mov
ffreep
(bad)
sub
mov
jecxz
cmp
popf
sub
xor
inc
jno
(bad)
clc
call
push
jne
pcmpeqw
jno
sbb
jl
add
dec
cmp
loope
pushf
pslld
fiadd
sbb
add
mov
add
mov
sub
cmp
xchg
sar
sti
sbb
adc
xchg
jno
push
xor
fcomp
ror
adc
and
sbb
sub
stos
and
into
(bad)
adc
xor
loopne
pusha
and
fs
(bad)
and
and
movnti
dec
imul
mov
add
loop
clc
add
lods
ins
or
stos
ins
mov
jmp
rcr
neg
pusha
pop
xor
jle
fisttp
outs
mov
loopne
inc
sti
mov
pop
mov
popa
or
push
int3
shl
pop
(bad)
aad
rdpmc
sbb
push
imul
sbb
add
dec
push
or
cmp
lea
ret
call
push
add
(bad)
or
(bad)
add
ret
pusha
or
sbb
rep
das
rol
and
sbb
lahf
clc
xor
leave
inc
inc
dec
push
stos
sar
mov
test
sbb
mov
(bad)
(bad)
xlat
adc
dec
dec
sbb
dec
xchg
inc
fstp
xor
adc
and
sub
inc
adc
retf
sbb
mov
(bad)
les
pop
push
sub
or
icebp
and
sbb
es
push
add
sub
sub
pop
es
jne
inc
pop
sbb
mov
sbb
pop
sbb
dec
dec
cmp
pop
call
jge
jne
pop
sbb
add
cs
call
sbb
xor
jae
dec
pop
aaa
sbb
xor
cmp
sub
nop
out
lahf
es
lea
neg
shl
ins
push
fwait
fwait
jecxz
arpl
or
and
mov
mov
sbb
jae
cmp
xor
or
inc
cmp
adc
fisttp
jge
push
dec
or
xor
fist
jle
adc
js
push
jne
xor
jge
adc
outs
ret
add
xchg
call
mov
stos
clc
add
jp
sub
jne
xchg
sahf
sub
adc
(bad)
dec
jbe
or
push
lds
call
mov
imul
or
mov
adc
push
sub
xor
je
mov
pop
jmp
inc
sbb
mov
jnp
sbb
pop
or
push
add
adc
out
and
add
or
push
jb
mov
mov
xor
mov
cvtps2pi
je
inc
bound
jp
sbb
ficom
cwde
sbb
mov
jmp
cmp
ficomp
cmps
dec
mov
cmp
cmp
or
nop
jbe
jge
scas
push
iret
rol
sar
inc
loope
push
push
test
and
movs
sbb
xor
sar
adc
ret
call
cmp
push
adc
mov
icebp
jb
add
xlat
sbb
jne
test
sti
xor
in
jle
sub
push
add
pop
je
sub
cwde
loope
rol
lds
loopne
push
xchg
and
cmc
or
call
(bad)
jge
inc
mov
sub
mov
test
sub
add
out
je
mov
call
enter
inc
push
cmp
mov
sbb
pop
sbb
push
jae
add
les
sbb
outs
push
adc
mov
push
pop
add
add
mov
repnz
enter
jle
jl
add
pop
push
stos
dec
std
aaa
mov
mov
inc
daa
or
repnz
add
rcr
adc
(bad)
mov
pop
popf
ret
mov
inc
sbb
inc
imul
ins
(bad)
rol
mov
push
inc
scas
or
add
jb
bound
fld
xchg
adc
jno
or
push
push
sub
mov
add
mov
inc
mov
rcl
or
jl
cmp
mov
xchg
test
pop
add
test
sub
rcl
(bad)
add
ret
out
pop
add
inc
arpl
push
aad
loopne
mov
sbb
or
aad
pop
add
jo
(bad)
sbb
or
dec
sub
imul
rol
mov
add
and
jne
cmps
xchg
dec
mul
mov
scas
shl
and
cli
leave
push
ins
mov
add
sbb
mov
dec
cmp
dec
xchg
fwait
or
mov
push
and
mov
sbb
adc
dec
ret
pop
jl
int
bound
jge
mov
sbb
push
push
cvttps2pi
mov
and
aam
stos
push
push
or
add
adc
sub
adc
rol
push
or
inc
les
xchg
cmp
and
add
aaa
inc
dec
add
mov
sub
dec
jno
add
jnp
fld
add
sbb
mov
mul
ins
add
jbe
or
cli
sti
mov
pop
lea
lea
cmp
mov
mov
adc
or
outs
fadd
add
fcmovb
sti
(bad)
or
push
fs
xchg
hlt
loope
and
inc
lods
ror
mov
push
inc
test
xor
clc
push
inc
jmp
hlt
dec
sbb
pop
dec
push
inc
aad
cs
jno
sbb
or
sub
lock
sub
inc
int
outs
adc
or
mov
(bad)
out
sub
jecxz
push
mov
std
mov
call
inc
jne
mov
push
js
xor
or
es
pop
xor
or
jmp
sbb
jnp
adc
daa
int3
stc
xor
sub
lea
ror
xchg
push
pop
add
or
loope
sbb
mov
mov
cld
sub
mov
jae
cs
sub
in
dec
inc
inc
inc
in
dec
cs
or
cmp
es
xor
loopne
add
pop
sbb
fnsave
ins
test
shr
add
daa
shr
test
lds
sub
add
mov
sub
dec
add
clc
lods
add
inc
and
ret
cmp
aas
mov
pop
popf
inc
cmp
cmps
add
lea
pop
inc
inc
test
inc
rcr
(bad)
cmp
jae
or
mov
shl
mov
push
sub
push
xor
cmp
jmp
and
jne
dec
into
cmp
in
mov
rol
jne
cmp
jne
mov
push
rcr
sub
sub
mov
push
test
mov
xor
push
js
adc
stos
dec
mov
(bad)
hlt
push
jl
lea
aas
pop
jmp
lea
test
mov
ret
es
inc
clc
rcl
pop
call
jne
add
or
mov
call
fst
jg
mov
out
shl
xchg
(bad)
xor
inc
pushf
stos
mov
sbb
or
push
enter
inc
push
inc
sbb
sbb
xor
shl
push
jb
data16
adc
sbb
sbb
xor
rol
nop
inc
(bad)
cld
lock
fadd
mov
in
imul
popa
addr16
imul
pop
mov
sub
(bad)
ret
jne
scas
fadd
adc
imul
je
imul
pop
(bad)
pop
retf
jne
sub
jle
sub
jne
mov
dec
sub
test
sub
and
xor
add
push
cmp
es
test
ins
dec
test
pusha
push
cmp
cmp
jne
add
out
adc
iret
call
inc
pop
xlat
pop
gs
mov
repnz
in
cs
es
sbb
call
inc
fucomp
xor
add
or
pop
loopne
rcl
fdivr
out
(bad)
mov
jle
je
sub
mov
clc
inc
adc
sbb
or
xor
inc
(bad)
mov
aas
push
push
jno
call
or
lea
ja
adc
shr
test
(bad)
out
xor
sbb
xlat
outs
jle
xor
adc
jo
ficomp
call
pop
add
add
or
mov
xor
rol
sub
pop
retf
jmp
cmp
jg
and
into
js
mov
fnsave
xchg
js
jle
scas
jmp
push
lods
push
push
jne
mov
ins
in
dec
add
dec
jl
sbb
jge
push
inc
test
int
inc
inc
or
inc
jl
enter
rcr
out
add
add
fdivrp
xor
sbb
ins
call
add
and
dec
push
cmp
inc
cmp
dec
mov
lea
cmp
add
cmp
inc
jecxz
mov
dec
sar
cmp
or
xor
(bad)
cmps
mov
mov
dec
fadd
or
dec
int3
push
mov
addr16
push
sub
inc
sar
inc
mov
and
jns
pop
cmc
add
adc
inc
pop
mov
add
popf
ins
pop
dec
stos
jno
pop
sbb
cmp
mov
daa
test
adc
sahf
jnp
or
pop
repnz
add
xchg
ret
ret
popf
or
ret
add
pop
or
out
mov
lods
lds
cs
rcl
rcl
push
aaa
push
cmp
xor
sub
(bad)
mov
sbb
mov
loopne
mov
rcl
adc
xor
nop
and
pop
daa
pop
or
xchg
pop
mov
je
xor
push
inc
adc
inc
push
(bad)
(bad)
pop
or
add
pop
inc
sbb
push
add
mov
jmp
adc
pop
or
sbb
ret
cdq
sbb
or
push
mov
add
cmp
(bad)
fwait
inc
sub
imul
cmc
or
cs
std
sub
les
cmp
cmp
dec
and
enter
out
push
inc
push
mov
jb
pop
cmp
retf
xor
sub
cli
jle
mov
aam
outs
dec
inc
add
sub
jne
pop
jbe
outs
daa
cmp
inc
lock
daa
ror
cmp
add
add
sub
into
imul
ror
retf
jmp
pushf
loope
jo
pushf
in
cmp
jnp
and
lods
push
ret
jne
and
add
enter
inc
lods
and
pop
sbb
sub
jl
sub
add
sub
mov
inc
mov
push
xor
lock
and
loopne
push
add
push
push
xchg
jno
test
jge
push
out
rcl
cmp
mov
or
xchg
cs
push
and
(bad)
mov
or
xchg
mov
pop
inc
cmp
adc
jmp
enter
shr
sub
or
xor
shr
mov
push
mov
xor
mov
lock
inc
push
js
cli
cmp
add
add
add
and
(bad)
in
or
dec
push
add
sub
fisub
jl
or
ret
mov
push
ret
inc
cld
sbb
push
and
leave
movs
jne
aas
cs
adc
in
cmps
(bad)
pop
add
dec
out
neg
mov
adc
sub
ret
mov
jmp
mov
rol
and
push
loopne
cmp
test
(bad)
mov
add
jge
push
mov
cmp
inc
push
push
pop
sbb
sub
lods
dec
and
push
test
dec
rcr
add
inc
mov
dec
and
shl
cmp
je
ret
fwait
cmp
mov
cmp
jle
jg
loopne
fsubr
push
push
xchg
test
jne
les
push
cmp
sub
test
cs
lods
(bad)
adc
mov
add
rol
or
dec
jne
inc
aaa
jb
pop
mov
add
lea
in
sub
push
repz
mov
and
test
jbe
jne
imul
sub
or
sahf
lods
sbb
adc
pop
ds
xor
aam
imul
push
in
(bad)
push
(bad)
pop
inc
inc
sub
lds
sub
add
(bad)
in
inc
adc
cmc
das
loop
retf
or
jmp
mov
sbb
add
adc
dec
add
or
jmp
cmp
sbb
out
jmp
cwde
sub
xlat
in
adc
xlat
not
and
bound
movs
daa
mov
cmp
or
fnstenv
es
xchg
push
jne
pop
rep
xor
and
ror
mov
(bad)
jmp
sbb
test
je
mov
mov
inc
and
pop
leave
jecxz
mov
mov
jmp
jo
jne
test
sub
push
(bad)
js
(bad)
test
or
cmps
cmp
mov
add
mov
push
in
push
adc
dec
pop
fld
or
rol
mov
mov
lock
pop
jo
pop
add
nop
jno
loope
xor
and
push
push
or
pop
ror
test
sbb
push
or
hlt
adc
xchg
xor
or
pop
call
dec
sub
mov
jmp
push
aam
stos
(bad)
out
aaa
push
js
mov
sbb
pop
xlat
or
fisttp
lods
aad
push
inc
lods
mov
xor
lea
mov
xor
cli
scas
nop
sbb
and
add
sub
sbb
call
rol
(bad)
xlat
mov
jmp
rcr
adc
xchg
movs
stos
xor
ror
or
enter
les
jl
inc
xor
ficomp
cdq
or
xchg
retf
fs
dec
mov
sbb
sub
jge
or
mov
push
add
dec
sti
jnp
(bad)
jne
inc
call
dec
add
mov
dec
icebp
lock
je
or
xchg
mov
cmp
push
loope
into
test
jne
lock
adc
fs
xor
aas
icebp
aam
inc
mov
fstp
aas
sub
popf
stos
cs
add
xor
cmp
enter
inc
stos
arpl
mov
push
dec
cwde
test
stos
or
add
or
lods
mov
adc
dec
push
adc
inc
and
xchg
jge
push
pop
add
inc
xchg
or
inc
dec
inc
adc
or
adc
jmp
jecxz
sti
fisttp
mov
shr
adc
sbb
ret
sbb
push
add
nop
push
add
popa
cmps
(bad)
xchg
ja
loopne
in
pop
jle
jecxz
push
mov
dec
xchg
(bad)
cmp
je
or
xor
jl
push
pop
aaa
(bad)
sahf
cmp
jge
jns
inc
cs
push
mov
loop
scas
mov
inc
cmps
push
xor
pushf
dec
inc
add
je
adc
mov
cmp
ror
dec
popf
setbe
jl
pop
out
ror
in
jl
repz
shr
inc
sub
mov
loope
inc
add
push
into
es
add
pop
mov
in
sub
add
aam
lods
and
mov
pop
add
mov
dec
mov
xchg
push
dec
aad
adc
pop
xchg
mov
(bad)
push
mov
mov
sbb
mov
(bad)
adc
leave
push
(bad)
sub
pushf
cmp
mov
mov
mov
push
std
push
push
inc
push
imul
cmp
imul
shl
mov
mov
xor
mov
dec
mov
bound
push
add
ficomp
pop
fild
mov
dec
sbb
inc
mov
dec
cmp
add
inc
and
mov
test
push
test
je
scas
jmp
sub
fwait
mov
push
pop
inc
clc
push
mov
imul
rsqrtps
dec
mov
or
xor
fsubr
add
icebp
retf
ror
lods
sbb
mov
test
inc
sbb
add
arpl
rol
retf
adc
cld
pop
test
dec
inc
or
fcmove
pop
inc
test
xor
adc
movs
and
sbb
cmp
scas
sbb
inc
es
cli
movs
scas
test
mov
outs
mov
aas
sti
mov
fstp
shrd
push
ret
add
pop
int3
cmp
mov
rcr
leave
test
pop
pop
push
enter
mov
sbb
dec
push
or
aaa
and
repnz
les
ss
sar
sbb
dec
sbb
sbb
mov
sar
xchg
mov
pusha
and
mov
fs
movs
sbb
jns
bound
cmp
xor
fs
sub
shl
jns
dec
add
xor
push
mov
adc
mov
sbb
adc
sub
mov
out
sub
out
pop
cdq
aas
inc
add
sbb
daa
sub
and
out
push
mov
push
sbb
lods
mov
mov
pop
or
in
jle
add
add
test
or
out
mov
cld
mov
or
cbw
push
adc
aas
pop
or
fistp
push
mov
cmps
stc
cmp
inc
jne
fadd
sub
ss
out
sahf
inc
dec
mov
out
pop
data16
mov
sbb
mov
add
sar
push
push
or
or
(bad)
ins
js
ja
popw
cs
push
and
out
jns
outs
push
mov
xor
out
lahf
mov
xor
cmp
aaa
mov
sub
push
or
add
loope
add
push
es
add
push
test
or
or
sahf
out
sahf
fninit
(bad)
int3
rcl
imul
or
add
add
add
mov
jge
push
or
aas
dec
lahf
add
adc
jb
push
jl
mov
add
mov
ror
add
jbe
mov
lea
inc
dec
(bad)
sbb
arpl
push
mov
movs
ss
push
and
shr
sub
push
imul
mov
xor
xchg
dec
and
popf
rcl
nop
or
add
xchg
push
dec
pop
mov
dec
fsub
push
lea
adc
push
mov
inc
add
mul
mov
aam
adc
xor
pop
and
jle
call
je
pop
push
or
jmp
hlt
pop
in
add
push
frstor
je
xor
pop
jmp
add
jo
test
pop
jne
daa
int3
dec
add
mov
imul
cmp
rol
aaa
jecxz
push
adc
add
dec
popf
test
dec
add
or
sbb
mov
movs
(bad)
xor
mov
or
inc
mov
test
mov
int3
inc
cmc
sbb
add
mov
xor
or
sub
nop
test
and
int3
cmp
mov
jmp
test
adc
addr16
mov
xchg
test
loop
and
cmp
or
and
mov
push
dec
mov
add
sub
add
jp
cmc
pop
pop
ret
rol
sub
jo
xchg
adc
pusha
nop
cdq
leave
push
mov
call
jo
adc
add
ficom
and
clc
mov
ror
in
or
mov
rcl
xor
(bad)
jae
jge
call
mov
sub
add
dec
ret
pop
scas
adc
lea
les
cmp
pusha
add
je
cmp
and
fs
pop
jg
outs
sub
add
es
lahf
sbb
xor
xor
add
and
jns
les
or
test
push
push
mov
mov
jp
add
xor
or
movs
mov
(bad)
call
jae
jb
pop
and
adc
cmc
inc
pop
mov
sbb
movs
cmps
popa
xor
in
inc
jmp
and
add
out
and
movs
push
cmp
ins
shr
les
ja
ror
mov
bound
add
std
adc
xor
add
lea
sbb
push
xor
clc
xchg
push
sbb
sub
sti
(bad)
bound
mov
push
pop
xchg
pusha
and
scas
pop
push
xor
or
xchg
jno
cmp
je
push
aas
xchg
fwait
(bad)
aad
cmp
pop
pop
loopne
and
cmp
jne
sub
mov
jmp
mov
fs
and
xchg
in
sub
je
sub
rol
mov
sbb
mov
jmp
sti
ja
mov
jl
dec
sub
add
or
push
xchg
pop
shl
xlat
and
dec
(bad)
fcom
jo
jne
add
inc
and
or
clc
xchg
hlt
mov
ins
loope
cmp
or
je
and
cmps
rcl
inc
mov
gs
mov
xor
ror
addr16
push
or
cs
push
pop
dec
inc
enter
mov
push
jmp
imul
sub
or
and
jle
and
or
fnsave
jmp
mov
dec
je
jnp
stc
inc
and
mov
and
test
pop
stc
dec
(bad)
fiadd
jecxz
dec
int
push
test
xchg
add
or
add
and
sahf
or
nop
imul
and
mov
mov
mov
in
cli
inc
ja
xchg
loopne
arpl
xchg
fwait
pop
jl
xor
sub
jmp
movs
xor
jl
test
dec
bound
call
pop
sar
inc
and
xor
add
add
or
adc
jne
loope
rcr
sub
inc
push
adc
loope
faddp
jle
jnp
pop
enter
mov
add
leave
rcl
fistp
mov
add
push
adc
mov
adc
push
call
or
gs
jecxz
gs
test
jmp
add
push
or
cmps
mov
mov
dec
add
jne
mov
add
dec
sbb
jge
or
into
mov
dec
add
sbb
or
mov
xchg
push
inc
nop
sub
push
xchg
daa
in
aas
test
lds
movs
adc
cmp
dec
sbb
daa
aas
lods
jl
add
mov
and
cmp
push
nop
inc
sbb
cmps
idiv
mov
pop
push
push
fist
push
mov
and
sar
dec
ins
pop
repnz
js
xor
xor
push
pop
inc
repnz
inc
inc
push
push
push
or
push
push
pop
xor
cmp
call
mov
sar
ins
vandpd
ret
lea
iret
mov
mov
aam
jo
je
mov
fmul
add
xchg
mov
cmp
mov
ins
movq
je
cs
hlt
sbb
dec
and
mov
ret
icebp
xor
cmp
ret
outs
cdq
xchg
retf
in
inc
iret
enter
mov
jmp
pop
lock
lock
icebp
mov
adc
ret
sahf
nop
add
cmp
repz
push
js
ins
fs
pusha
inc
pop
test
push
add
pop
sub
push
or
sbb
add
cmp
xchg
sub
ror
push
add
in
and
cmp
or
push
out
gs
add
push
in
arpl
int
es
mov
loope
sbb
mov
fs
push
adc
dec
push
add
sbb
mov
jle
adc
add
scas
xchg
pop
or
jne
adc
dec
adc
aam
sbb
inc
(bad)
pop
inc
sub
outs
test
xor
push
pop
jmp
inc
adc
adc
jnp
mov
xor
and
adc
frstor
push
add
jmp
xor
movd
enter
or
ins
ja
push
and
dec
ins
jbe
sbb
fidivr
adc
(bad)
jbe
push
xchg
pop
pop
push
jle
dec
fidivr
push
push
ins
push
push
xchg
ins
add
fsub
or
mov
mov
fsub
mov
movs
adc
adc
inc
sar
ret
loope
xchg
ins
mov
sub
out
test
nop
pop
inc
adc
ror
push
jecxz
or
mov
pop
not
mov
adc
adc
and
in
cmp
adc
or
je
add
or
ret
loop
sub
jo
mov
pop
inc
push
gs
jbe
mov
jl
bound
sub
lock
test
xor
enter
cs
adc
dec
pop
in
dec
cmp
and
add
aas
sti
stos
sub
ret
mov
mov
je
jmp
(bad)
mov
movs
jbe
xchg
outs
cmp
paddusw
(bad)
sbb
mov
stos
xor
jg
jne
xchg
inc
cmp
lea
mov
add
(bad)
pop
sbb
and
mov
stos
mov
imul
ds
in
jne
jmp
push
aaa
adc
pop
lahf
push
push
inc
sub
pop
out
(bad)
cmp
test
mov
mov
dec
(bad)
jle
adc
das
shr
adc
cmp
je
dec
ds
mov
sbb
xor
pop
das
push
cmp
add
or
and
outs
fadd
mov
inc
dec
inc
xchg
xlat
push
mov
shr
sub
sbb
idiv
inc
sahf
push
imul
mov
aam
cmp
sbb
mov
data16
add
fisttp
jmp
lds
add
cmp
and
or
add
test
mul
fnstsw
adc
cmp
jne
fsubp
jbe
add
ret
mov
test
mov
nop
ret
mov
push
or
inc
popa
pop
popa
add
push
fisub
fcomp
add
inc
into
ss
or
or
pop
int
xchg
or
xchg
inc
jo
aam
sub
push
add
retf
pop
stc
dec
je
or
out
popa
mov
push
cdq
sbb
jl
inc
mov
push
pop
adc
je
sbb
push
ret
jl
outs
push
inc
dec
jne
jb
pop
sbb
inc
push
cmp
cmp
jbe
dec
xchg
push
je
xchg
pop
jle
xchg
jg
or
adc
(bad)
icebp
aaa
movs
sbb
ret
sahf
add
lods
dec
add
xor
push
std
ds
adc
into
or
out
add
sub
jmp
sbb
pop
xor
rcl
or
pop
xor
mov
test
shr
(bad)
mov
mov
adc
adc
inc
add
add
or
dec
or
mov
sahf
mov
data16
adc
adc
dec
sahf
sub
push
sbb
mov
sbb
cs
push
ret
cmova
cmp
test
rcl
and
mov
add
or
loope
mov
or
dec
xchg
jno
loope
scas
jae
mov
test
pop
or
sbb
lahf
pop
inc
adc
mov
mov
pop
pop
jle
loopne
or
adc
xor
add
inc
sub
xor
xor
xchg
and
or
inc
push
out
add
dec
inc
das
enter
out
adc
mov
test
add
xor
and
adc
and
pop
fisub
dec
retf
mov
xchg
aad
jl
test
ins
mov
mov
mov
fistp
adc
movs
dec
je
popa
push
inc
mov
fimul
cli
push
test
pop
inc
pusha
and
pop
imul
push
(bad)
push
sbb
fldz
cmp
sbb
mov
push
lock
add
push
mov
push
out
dec
xor
lods
mov
sub
je
mov
pop
sub
mov
mov
jp
push
inc
and
pusha
push
add
mov
xchg
mov
test
inc
pop
ror
or
cmp
repnz
push
mov
push
push
push
pushf
out
scas
pusha
sub
into
add
fdiv
gs
cli
je
push
pop
add
pop
mov
scas
inc
sbb
cli
fisttp
jb
call
dec
jp
mov
clc
xor
dec
cld
sub
hlt
and
add
add
jbe
cdq
(bad)
out
xor
pop
add
retfw
imul
lea
pop
xchg
xor
inc
jno
or
xchg
loopne
aas
inc
out
clc
push
rol
mov
add
sub
lds
in
nop
mov
dec
mov
aas
jo
out
es
xor
or
pop
and
test
(bad)
fdiv
data16
jns
mov
in
mov
sbb
add
dec
sub
xchg
or
cmp
push
jb
pop
pop
or
xchg
mov
dec
imul
cmp
int
or
pop
mov
jae
sbb
or
in
push
shr
int3
adc
loope
adc
fbstp
adc
push
lea
mov
adc
iret
sbb
cmp
cmps
mov
dec
or
or
xchg
sti
push
ins
xor
iret
ins
pop
dec
and
pop
sbb
jmp
push
mov
jge
dec
movs
mov
sub
and
push
xchg
stos
add
inc
and
pusha
outs
dec
js
jbe
outs
popa
pop
cmp
jno
inc
inc
into
stc
cmp
sbb
call
hlt
test
cmp
jl
pop
add
pop
nop
add
push
add
xor
pop
push
imul
add
cmc
(bad)
imul
adc
inc
cmp
inc
xor
popa
mov
jb
xchg
xor
add
cmp
call
pop
inc
in
xchg
in
dec
sbb
int3
push
cmp
pop
xor
cmps
in
pop
adc
push
pop
test
push
and
stos
xor
leave
ret
mov
sbb
fdivr
pop
fiadd
pop
xor
sbb
xchg
adc
loopne
cmp
mov
ret
inc
test
jge
push
mov
call
mov
adc
xor
add
cmp
loop
push
mov
pop
xchg
movs
shl
pop
lock
mov
mov
jo
out
imul
(bad)
or
pop
inc
push
add
into
xor
pusha
xlat
sbb
mov
mov
cmps
pop
mov
js
sahf
or
jl
stos
inc
inc
mov
test
xor
inc
pushf
jle
or
lock
push
xor
cld
adc
dec
lea
or
jo
mov
jp
jl
stc
push
adc
rcl
sub
jmp
cmp
sar
push
push
inc
outs
sub
or
xchg
push
daa
sub
sti
and
sub
mov
and
jbe
cmps
or
add
pushf
push
sub
sbb
mov
mov
dec
(bad)
and
fsub
mov
sub
test
retf
xchg
push
push
or
jo
aam
inc
or
mov
mov
add
nop
push
push
inc
ret
ds
dec
out
xor
add
or
dec
adc
test
test
pusha
adc
inc
add
mov
or
adc
adc
lea
xchg
mov
mov
jmp
mov
push
mov
nop
mov
scas
jnp
xchg
or
repnz
adc
sbb
clc
iret
xchg
lea
pusha
mov
ins
fwait
jo
and
cmp
sar
aam
pop
movsx
mov
imul
sbb
push
mov
mov
dec
jp
jbe
add
out
mov
or
lock
jo
lock
inc
push
push
sbb
add
mov
cmp
sub
ss
dec
iret
mov
repnz
mov
rcr
push
mov
push
cmp
popf
adc
in
or
push
test
mov
push
pop
push
add
fist
sub
(bad)
jge
sub
les
fcmove
mov
mov
shr
jb
call
rcl
bound
add
pusha
dec
add
cmp
add
ret
or
aas
ins
movs
bound
add
add
ret
jmp
mov
or
stos
pop
xchg
mov
mov
xchg
xor
test
ret
push
(bad)
push
std
inc
pop
mov
push
mov
(bad)
icebp
push
lods
push
add
sub
dec
outs
ror
jge
adc
pop
sbb
repz
mov
rol
lea
xchg
cli
or
xor
fist
xor
add
inc
jo
mov
cmp
adc
jbe
add
mov
cmp
adc
dec
and
inc
dec
hlt
mov
je
hlt
dec
mov
ret
push
test
pop
popa
push
or
iret
jbe
pushf
jo
(bad)
popa
jnp
push
mov
loope
sub
loope
cmc
fwait
sar
and
and
je
and
or
push
jo
cli
and
and
and
or
mov
mov
cld
lock
out
cmp
push
(bad)
pop
aaa
cmp
push
jb
push
jo
cmp
test
ja
xchg
pop
jmp
mov
add
pop
push
cwde
jne
mov
cmps
adc
push
jo
dec
pop
cmp
cli
add
lds
pop
and
add
push
(bad)
pop
xor
(bad)
hlt
ret
shl
mov
adc
out
mov
push
inc
mov
test
cmp
je
jecxz
stc
mov
xchg
jnp
pop
clc
daa
mov
mov
test
inc
mov
dec
mov
cmp
cdq
inc
aam
inc
das
mov
out
or
and
jae
mov
mov
mov
cwde
pop
je
call
jmp
shl
(bad)
call
jl
retf
mov
bound
lods
les
sbb
sbb
mov
cmp
xor
xor
adc
or
nop
or
push
gs
pop
daa
pusha
call
es
sub
sbb
out
dec
push
lods
sar
jmp
addr16
pushf
and
(bad)
add
mov
fild
mov
sbb
inc
mov
push
cmp
xor
daa
push
into
and
and
sysenter
int
test
sub
rcr
or
add
or
push
sbb
push
les
clc
jmp
or
inc
jmp
pop
cmp
mov
sbb
dec
pop
sbb
inc
sub
jne
gs
cmp
jne
outs
push
pop
mov
push
in
and
jae
sbb
pop
aad
inc
ror
mov
cmp
add
shr
in
shl
jge
fld
inc
jnp
cwde
popf
and
pop
mov
call
inc
inc
icebp
sub
push
shl
push
or
sub
mov
test
movs
xor
int
add
fs
mov
ins
aad
push
pop
les
mov
cmp
je
dec
mov
ror
sbb
repz
mov
dec
shl
lahf
ret
pop
sub
out
push
dec
add
pop
add
xor
inc
dec
add
repnz
pop
daa
add
adc
and
in
cmp
(bad)
cmp
cmp
add
mov
and
and
push
pop
jb
nop
out
push
or
or
add
push
dec
or
push
nop
addr16
or
pop
repnz
or
loop
add
cmps
or
or
or
repz
rcr
or
pop
cwde
push
push
adc
jb
nop
not
retf
push
adc
pop
adc
fwait
rcr
inc
add
xor
adc
adc
and
in
add
adc
add
out
rcl
adc
adc
in
sbb
adc
adc
in
jns
pop
pop
xor
repnz
sbb
call
sbb
push
nop
out
test
sbb
(bad)
cmp
push
inc
sbb
sbb
test
pop
sbb
nop
out
(bad)
fdivr
sbb
push
pusha
push
push
mov
push
pop
pop
jne
add
sub
sub
cmp
add
mov
or
add
add
rol
jg
add
(bad)
(bad)
pop
sub
mov
cmp
je
call
cmps
jns
fcmovbe
ret
adc
aad
cmp
add
cmp
mov
xor
and
sbb
je
call
dec
pop
dec
dec
cwde
jmp
inc
push
sub
pusha
in
jmp
jmp
inc
call
cdq
add
pop
push
mov
cmp
xchg
sahf
out
out
jge
or
sbb
sbb
pop
push
fsub
int
lock
xor
add
inc
icebp
inc
icebp
ucomiss
or
std
repz
repnz
leave
std
hlt
push
fdiv
cmps
hlt
ror
pusha
hlt
fwait
mov
cmc
cmc
inc
jg
sbb
iret
div
pop
not
test
idiv
std
clc
xchg
add
dec
clc
clc
cdq
adc
cmp
pop
and
enter
sbb
fcom
stos
cld
cld
cld
je
and
push
paddq
repnz
ss
xor
sbb
loopne
enter
je
mov
jmp
mov
jns
add
dec
jmp
rcl
cmp
rcr
mov
push
or
outs
mov
es
jecxz
add
pop
push
std
sti
in
in
mov
xchg
fdiv
inc
mov
stc
daa
xchg
dec
rol
or
out
cdq
jns
xor
dec
sti
and
and
sbb
pop
jmp
jmp
and
in
add
xchg
pop
leave
mov
and
adc
out
out
mov
cdq
push
lock
and
das
cli
push
cli
xor
inc
add
jmp
cmp
xor
sar
leave
add
stc
retf
and
jns
call
mov
xor
add
stc
les
cmp
retf
sti
sti
cdq
cmp
scas
mov
jb
or
jl
sbb
cmc
dec
dec
and
mov
sbb
sub
shl
loop
(bad)
and
pop
shl
adc
xchg
pop
scas
mul
rcl
mov
out
out
imul
cdq
(bad)
out
mov
inc
repnz
mul
test
imul
jmp
neg
mov
adc
mov
ins
out
out
inc
push
fsub
out
cdq
inc
out
pop
and
mov
not
(bad)
xacquire
mov
dec
push
jno
pop
xchg
cmc
xchg
pop
dec
cmc
out
imul
fwait
sbb
pop
add
add
cdq
inc
clc
clc
jecxz
retf
scas
stc
popa
cmp
pop
call
ficom
inc
mov
inc
push
hlt
sbb
das
pushw
(bad)
data16
out
jne
hlt
idiv
jo
(bad)
fadd
pop
inc
jmp
fmul
loope
adc
loope
repz
and
mov
repz
inc
or
test
pusha
xor
loop
out
and
push
adc
push
sbb
rcl
cmc
call
repnz
repnz
sbb
pop
in
in
cmc
call
repnz
add
sbb
jecxz
js
icebp
icebp
mov
fwait
xchg
test
and
jb
mov
xchg
xchg
inc
fcomp
add
aam
and
jns
mov
ret
popf
lock
dec
push
stc
stc
cmc
mov
lock
lock
sbb
scas
jne
and
test
and
test
ret
or
out
ins
shr
sub
out
add
push
ret
inc
push
fcom
sbb
add
add
stos
imul
push
dec
add
add
sub
adc
jne
or
loopne
cmp
dec
add
sahf
pop
sbb
jmp
out
loopne
(bad)
and
popa
jb
add
push
pop
jp
jle
jno
mov
ins
push
les
jns
jge
xor
out
cmp
(bad)
lds
je
iret
repz
js
jl
push
and
fldcw
outs
xchg
ja
jnp
iret
jnp
sbb
mov
xchg
outs
imul
rol
and
add
ds
movs
ror
jne
add
pop
ror
sub
(bad)
jle
rol
push
add
cld
jb
test
mov
cmp
adc
je
int
inc
push
stos
jo
and
adc
std
adc
sbb
mov
pop
and
xchg
jle
dec
jne
cmp
ja
movs
inc
shl
pop
outs
inc
fdivr
push
adc
adc
add
pop
aaa
nop
mov
push
adc
jp
ret
aaa
scas
adc
ins
(bad)
or
pop
pop
ret
mov
push
ret
pushf
mov
add
lock
sub
les
in
pop
clc
and
push
mov
pop
outs
pop
and
or
ror
add
pop
fdiv
cmp
add
jno
mov
add
sahf
popf
ret
fidiv
nop
push
out
ret
test
adc
or
inc
xchg
jno
push
sbb
les
loopne
cmps
std
int3
aas
mov
jo
jns
add
ret
rol
mov
fcom
in
push
cmp
sbb
dec
es
cdq
sub
xor
sbb
loopne
fcom
gs
aam
sar
clc
or
(bad)
in
popf
enter
rol
pushf
pop
mov
cmps
adc
enter
rcl
aaa
dec
cld
adc
(bad)
sub
loop
jbe
mov
(bad)
pop
push
add
adc
mov
fcom
nop
movs
dec
lds
xchg
mov
mov
add
pop
pop
push
nop
fbstp
outs
or
enter
imul
sbb
pop
jmp
jge
cwde
jb
(bad)
xor
xchg
ins
or
jb
shl
lods
in
jge
pop
lea
mov
cmc
fisubr
fisttp
int
xchg
ja
in
push
cmc
outs
add
mov
mov
and
xchg
cmp
jle
lea
sub
lea
sti
add
shl
sub
and
sub
sub
(bad)
fimul
xchg
or
mov
sbb
push
pop
imul
pop
ins
nop
jmp
inc
xlat
jae
gs
retf
je
aam
mov
push
dec
ins
jle
sbb
cs
dec
aas
movs
jno
cs
faddp
pop
dec
mov
add
cmp
shl
jo
loop
jmp
push
movs
sub
cmp
and
loopne
int3
mov
dec
pop
pop
mov
aas
call
shl
mov
inc
fild
jb
rep
int3
push
xchg
push
pop
xchg
scas
jmp
clc
or
add
jae
mov
or
clc
iret
jnp
call
movs
push
enter
push
mov
call
add
pop
shr
scas
adc
cwde
das
in
lea
dec
add
mov
cmps
inc
xor
out
or
mov
cmp
xor
repz
and
adc
outs
mov
mov
(bad)
in
call
call
repz
repz
hlt
clc
clc
cld
call
scas
and
ins
push
js
jecxz
cmp
xor
inc
pop
sti
and
cmp
and
lea
into
jl
cld
or
std
(bad)
cld
out
lock
fst
fcom
div
hlt
xchg
add
sub
push
gs
mov
mov
add
ret
mov
inc
push
mov
sub
push
add
test
mov
sbb
push
xchg
mov
or
push
iret
repz
mov
(bad)
int3
aam
repz
mov
sbb
repz
adc
adc
or
and
repz
or
iret
pop
pushf
and
mov
push
sbb
push
xchg
mov
add
outs
pop
(bad)
xchg
aas
sub
adc
repz
or
mov
lock
jmp
loope
push
xchg
or
xchg
push
and
and
pop
test
mov
sbb
mov
push
loopne
icebp
out
xchg
outs
ja
push
push
push
jl
fs
xlat
mov
jmp
push
pop
fiadd
adc
inc
cld
mov
rol
sub
adc
jg
stos
ss
lock
push
in
sbb
repnz
jne
div
jo
es
lock
cdq
cmp
cmps
and
(bad)
add
loopne
adc
mov
test
xor
cwde
imul
add
push
mov
xchg
jmp
cmp
rol
test
add
cmp
push
cmps
ret
xlat
sub
mov
ins
add
loopne
lock
jmp
ja
ret
cmp
and
push
adc
add
push
cmp
jnp
je
sbb
pop
xchg
lea
and
sbb
push
mov
stos
and
and
sar
push
mov
sbb
dec
sub
mov
mov
or
xchg
nop
es
je
push
push
jbe
push
xor
jne
sbb
pushw
mov
fmul
inc
aaa
jmp
pop
push
inc
mul
jne
pop
ret
push
in
mov
mov
push
iret
adc
leave
out
hlt
scas
enter
xor
je
lods
adc
xchg
lahf
or
jmp
pop
lea
or
pop
adc
cld
sahf
adc
retf
push
fisubr
pusha
adc
jp
test
pop
dec
jp
push
shr
pop
add
mov
xor
push
add
mov
push
pop
add
push
adc
and
ror
imul
push
rep
mov
dec
jmp
arpl
loope
adc
data16
fs
adc
jl
jp
jo
jo
lods
mov
loop
je
jp
bound
sahf
mov
jno
stos
or
adc
pop
rcl
jnp
or
add
scas
push
shl
in
sar
inc
jne
pop
lock
inc
sti
adc
sbb
(bad)
sub
cmp
pop
scas
and
push
add
xchg
test
jne
push
sbb
mov
hlt
cld
add
rcr
mov
sbb
movs
lock
cmc
dec
in
pop
sbb
dec
add
or
imul
lahf
add
or
retf
mov
jb
and
jge
and
push
sbb
lock
inc
aad
jmp
pop
xor
les
outs
popa
mov
jne
mov
mov
pop
lods
xchg
mov
add
adc
movs
fisubr
push
mov
mov
pop
fcom
lods
mov
add
nop
cmp
icebp
neg
add
bound
jle
jne
icebp
mov
xlat
pop
sub
push
sbb
and
jne
inc
movs
sti
int
dec
ins
sub
sbb
xor
and
mov
mov
inc
ins
xor
out
fcom
mov
and
xor
loope
adc
sub
mov
out
xchg
sbb
(bad)
jne
push
add
sub
cmc
jne
push
inc
pop
enter
int3
jg
pusha
jecxz
js
lds
lea
movs
add
arpl
jne
mov
cmc
cmp
push
(bad)
(bad)
push
adc
je
das
adc
jl
jg
cmp
jbe
cli
cmp
push
leave
cmps
hlt
mov
aaa
push
fwait
rcl
pop
dec
push
xor
pop
or
aam
cs
add
(bad)
(bad)
fcom
test
xor
sahf
and
ds
or
in
inc
adc
fwait
into
imul
mov
js
mov
jmp
push
fwait
pushf
sub
sub
jecxz
loopne
rcl
loope
sahf
adc
xor
jge
adc
mov
mov
test
adc
in
mov
pop
xor
jg
add
into
cmp
je
add
push
xlat
ret
mov
pop
daa
mov
mov
jbe
mov
data16
imul
mov
fisttp
sub
popa
cmps
sub
add
inc
push
ror
adc
mov
mov
xor
cld
bnd
je
mov
inc
sub
xchg
xchg
out
sub
pop
pushf
nop
nop
pop
or
xor
mov
inc
dec
pusha
xchg
test
out
fdivp
mov
je
inc
loop
stos
mov
adc
jp
ins
add
loope
je
xchg
xor
sub
mov
fmul
inc
jmp
sub
add
jmp
cmp
ins
hlt
icebp
pop
clc
jb
dec
or
adc
cmp
jb
dec
pop
in
adc
and
sub
jge
popa
fucomp
(bad)
fadd
popa
mov
rol
xchg
mov
mov
push
pop
sub
sbb
push
add
pusha
mov
jbe
js
jg
fmul
cmp
(bad)
pusha
mov
hlt
mov
xor
fiadd
mov
cmps
jmp
jo
xor
and
xchg
cli
xchg
and
sbb
lds
cmp
test
xor
xlat
inc
out
aad
jbe
mov
imul
mov
scas
mov
imul
sbb
dec
cld
inc
nop
hlt
pop
loopne
push
pop
je
test
je
test
shl
push
xlat
pusha
lock
sub
or
add
imul
mov
dec
sbb
or
outs
fbld
jbe
je
(bad)
add
cmp
pop
push
adc
and
fdivr
add
pusha
xlat
mov
call
dec
dec
jle
(bad)
sbb
push
and
push
dec
gs
mov
ss
pop
sbb
aad
and
test
cmp
jb
jo
xor
pop
pushf
stos
(bad)
mov
inc
(bad)
fist
inc
cmp
sub
jne
jns
arpl
adc
iret
add
lss
jg
add
sub
sbb
mov
pop
cld
add
retf
and
mul
add
test
push
pop
jmp
adc
sub
pop
adc
popa
(bad)
mov
add
sbb
add
adc
mov
sbb
jle
loopne
xchg
test
aaa
mov
and
(bad)
scas
imul
pushf
xchg
and
push
and
jle
push
push
(bad)
shrd
int
outs
or
pop
aaa
or
out
retf
call
jp
aaa
shl
or
pop
dec
adc
cmc
pop
or
das
mov
pop
dec
pop
mov
sbb
ja
adc
iret
paddw
jmp
mov
sub
sub
in
fbld
and
mov
cmp
push
shl
xor
fidiv
jge
adc
pushf
adc
fdivr
cmp
fs
sub
add
mov
xchg
out
inc
mov
les
cmp
adc
sbb
sub
push
jmp
sbb
and
xor
fcom
sbb
iret
and
test
cli
test
push
leave
jo
add
add
lods
or
rol
fdivr
call
dec
daa
test
pop
mov
lds
mov
retf
in
mov
ss
sbb
sbb
and
ret
jmp
adc
aaa
popf
mov
inc
and
in
sub
jge
xchg
jmp
adc
jbe
push
or
sub
dec
and
popa
add
xchg
sbb
push
mov
bound
mov
cwde
inc
jo
mov
mov
icebp
mov
gs
add
jl
stos
xor
push
das
cdq
lea
add
jle
dec
rol
lock
stos
add
jmp
add
pusha
jmp
in
jp
push
xor
xchg
adc
movs
add
enter
call
or
inc
js
cmps
outs
mov
mov
or
in
or
sub
push
movs
adc
rcl
pop
sbb
mov
add
bound
mov
adc
icebp
loopne
push
sbb
daa
cmp
nop
push
xchg
retf
loop
stos
sub
push
jmp
and
jne
shl
std
inc
push
mov
add
xlat
loopne
push
test
pop
xor
push
mov
jp
sti
loop
xor
pop
retf
and
push
addr16
push
adc
inc
daa
fnstenv
and
adc
inc
pop
xor
adc
mov
mov
adc
sbb
add
mov
pushw
mov
je
inc
inc
adc
push
clc
or
add
and
je
mov
and
data16
mov
adc
inc
inc
jae
ffree
pusha
es
test
out
mov
je
jge
pop
add
sub
adc
(bad)
or
cmp
jle
push
hlt
push
push
pushf
arpl
and
pushf
xchg
sbb
leave
rcl
scas
adc
ret
pop
mov
nop
data16
add
cmp
xor
(bad)
bound
fist
pop
push
cmp
inc
jo
scas
sub
enter
sub
or
sbb
popf
xchg
cmp
dec
fcom
les
imul
push
cld
dec
jge
sbb
mov
xchg
push
mov
dec
jecxz
retf
or
mov
add
adc
sbb
push
fs
pop
xor
pop
cmps
clc
lock
repnz
data16
jbe
mov
rcl
mov
and
inc
pop
push
rcr
or
mov
mov
rcl
sub
sub
test
cmp
bound
test
or
push
push
push
or
popa
adc
out
movs
repnz
stc
inc
dec
fst
cwde
popa
fnstenv
scas
xchg
xor
ja
inc
sub
mov
in
out
jno
and
xchg
mov
in
mov
inc
inc
imul
sbb
clc
dec
xor
sbb
sbb
sub
fcom
imul
ret
sahf
add
cwde
add
adc
jg
outs
shl
or
cmp
jbe
push
(bad)
out
mov
pop
div
hlt
jae
hlt
add
scas
fisttp
jmp
imul
xchg
aaa
or
cmp
xchg
stos
sub
sbb
pushf
push
in
ss
fist
daa
sbb
ret
add
pop
pop
int
or
push
add
add
or
sub
xor
sbb
movntps
shr
fimul
out
rcr
mov
jo
xchg
inc
inc
sub
push
shl
add
cmp
add
adc
sbb
test
adc
sub
inc
push
dec
cli
cmp
ja
stos
fwait
and
aad
pop
and
mov
(bad)
jbe
sbb
test
inc
mov
push
pop
sti
inc
adc
out
jmp
daa
sbb
sti
adc
dec
je
dec
jmp
push
sub
jmp
mov
fisubr
cs
dec
(bad)
(bad)
add
mov
ret
pop
lods
clc
mov
jmp
cmps
not
xchg
or
int3
gs
loop
xor
dec
lea
lods
dec
into
shl
inc
mov
or
rol
call
movs
nop
xchg
add
aam
retf
rcl
mov
add
xor
jne
cmp
or
push
je
mov
aad
in
std
xor
cwde
dec
(bad)
data16
sbb
inc
jne
mov
js
shl
push
jmp
mov
je
sbb
ds
inc
das
inc
(bad)
xchg
push
push
imul
fsub
punpcklwd
test
pop
cwde
fadd
push
xchg
loop
rcr
or
pop
ds
xor
cmp
push
or
std
clc
daa
mov
sbb
push
call
push
jbe
mov
adc
pop
xor
movs
(bad)
out
cmp
inc
push
pop
ror
push
loop
and
aam
nop
adc
in
int
das
lahf
cmps
jge
in
xor
xchg
adc
cs
pop
in
enter
and
in
icebp
cmps
sub
pop
push
inc
mov
push
pop
xchg
pop
fimul
xor
or
push
movs
pushf
push
jg
loopne
pop
or
mov
out
or
jmp
fwait
sub
xor
pushf
fadd
add
retf
mov
loopne
pop
imul
jle
sub
outs
dec
test
sahf
push
and
adc
nop
xor
mov
add
pop
push
and
adc
ret
mov
rol
jb
inc
shl
add
sbb
cmp
test
(bad)
push
dec
pop
inc
add
jns
dec
xchg
mov
xchg
add
add
adc
dec
xchg
cmp
add
sub
mov
movs
pop
add
nop
or
adc
pushf
xchg
pop
or
or
or
mov
mov
and
ror
xor
sub
and
add
clc
(bad)
hlt
xchg
jnp
ins
xchg
imul
push
add
and
(bad)
lods
push
or
mov
mov
call
pop
lea
sbb
push
mov
mov
jo
mov
inc
jmp
push
fsubr
cmp
mov
outs
sub
sub
adc
add
or
(bad)
cmp
push
xor
jl
das
lods
adc
jmp
mov
cmp
je
cmp
and
stos
and
mov
mov
jne
dec
add
add
lds
sbb
dec
or
mov
cwde
ret
mov
mov
ss
jmp
pop
shl
mov
sub
cmp
cs
xor
es
pop
leave
inc
jae
push
or
or
movs
test
add
dec
and
rcl
inc
sbb
std
pop
(bad)
pop
cld
imul
cmp
or
mov
or
sbb
cmp
call
rol
or
sub
es
imul
sbb
and
push
aam
fld
cmp
mov
pop
sub
cmp
(bad)
cmp
movs
cmp
in
rol
rol
inc
sub
mov
mov
and
ins
(bad)
ror
push
(bad)
hlt
mov
push
popa
fwait
add
test
int
dec
test
mov
jb
in
mov
in
lea
push
adc
push
pop
dec
mov
add
fisubr
pop
cmp
repz
mov
ror
loopne
int3
mov
add
enter
or
jle
jle
xchg
sbb
mov
repz
cld
aaa
and
mov
sub
out
sub
lahf
dec
inc
adc
ds
out
push
xor
cmp
dec
cmp
out
repnz
cmp
inc
xor
adc
dec
in
dec
adc
dec
add
icebp
inc
popa
sahf
aad
call
into
push
inc
clc
fnclex
sub
cmps
pop
sbb
pop
mov
and
lea
rep
into
jecxz
mov
pop
(bad)
idiv
mov
sub
and
loopne
leave
movs
(bad)
ficom
outs
mov
lahf
cmp
call
ins
xor
pop
loopne
push
inc
data16
pop
xchg
push
jno
pop
loopne
shl
mov
xchg
bound
je
sub
jle
movs
(bad)
les
cmp
test
xchg
push
xchg
pop
cld
adc
push
gs
push
mov
inc
mov
mov
loopne
mov
sti
mov
xor
or
mov
jbe
pop
les
push
or
add
mov
add
fst
sbb
fdivr
lock
ror
not
and
mov
sbb
cdq
ror
xor
lock
into
push
dec
mov
mov
mov
mov
pop
fsubr
mov
popf
sahf
enter
jl
test
xchg
or
mov
add
fs
aam
cwde
mov
in
push
mov
mov
or
lods
adc
aam
enter
fadd
call
std
data16
xor
add
add
std
call
or
adc
shr
dec
push
clc
sbb
pop
pop
mov
xchg
pop
cdq
adc
movs
jo
arpl
imul
fidivr
mov
les
mov
fmul
fcmovu
jmp
(bad)
mov
inc
add
imul
rol
add
mov
js
inc
or
dec
push
or
push
xchg
into
or
mul
jge
mov
inc
add
cmp
repz
push
push
push
test
test
push
or
cwde
outs
sub
mov
ss
repnz
inc
test
xchg
loope
lods
in
aaa
(bad)
add
adc
(bad)
in
pop
xor
pop
call
xchg
cmp
int3
sar
jmp
test
ins
(bad)
pop
cli
icebp
gs
ror
cmps
or
fadd
in
out
aad
adc
push
mov
call
adc
push
daa
mov
sub
sub
arpl
or
add
repnz
in
lods
xchg
aas
push
sbb
inc
jl
clc
lods
pop
mov
pop
dec
out
fst
pop
xchg
push
repz
push
dec
inc
cmp
pop
(bad)
jmp
lods
push
repnz
cwde
pop
and
sbb
xor
pop
nop
xor
xchg
push
sub
adc
sbb
es
mov
push
cmp
push
in
hlt
cld
add
add
icebp
cmp
scas
pop
adc
or
push
dec
pop
scas
dec
add
retf
adc
jmp
sbb
mov
(bad)
jne
jnp
mov
outs
push
mov
lahf
sub
rcr
mov
cld
jne
mov
push
cmp
jne
(bad)
scas
ds
es
jne
call
cmp
or
clc
add
jge
jb
jmp
inc
jmp
out
stc
jns
(bad)
(bad)
jmp
std
std
jmp
mov
add
jmp
jo
movs
fimul
adc
xchg
pop
mov
dec
imul
shr
cmp
(bad)
clc
enter
inc
aad
les
movs
cmps
push
lock
cmps
ds
xchg
and
ret
sub
sbb
jp
pop
add
adc
jecxz
jle
ins
push
lea
loopne
sbb
mov
jo
push
xor
icebp
cs
aas
mov
enter
push
dec
mov
scas
shl
mov
jae
xor
scas
test
sbb
les
mov
push
mov
or
add
test
add
test
xchg
mov
ins
cwde
fs
push
enter
ins
pop
sbb
mov
jg
shr
xchg
or
xchg
adc
push
jmp
add
ja
push
je
inc
jg
adc
jmp
pop
push
push
(bad)
leave
add
xchg
dec
out
xor
leave
cmp
fucomi
push
loop
lock
and
mov
lahf
fadd
xor
push
xor
xor
das
and
sbb
ret
lds
adc
sbb
cmp
mov
mov
dec
mov
push
and
push
adc
hlt
test
xlat
js
mov
jbe
fs
pushf
sub
retf
call
movs
and
stos
jne
fisub
lock
pop
es
aas
pop
sub
add
add
push
(bad)
xor
cmps
retf
lock
into
push
pop
inc
adc
cmps
retf
cmp
inc
jmp
or
pop
jnp
mov
ret
shr
xchg
sub
xor
cmp
adc
xor
jb
fs
imul
aas
aad
sbb
retf
push
and
not
jb
pop
xchg
or
les
push
imul
cmp
mov
and
fbld
pop
cmp
jne
sbb
std
or
xchg
push
ret
pop
pop
into
int3
sub
lahf
movs
jnp
das
adc
mov
mov
sbb
sub
or
mov
shl
cwde
shl
sub
sbb
mov
cmps
push
out
jle
idiv
fild
clc
add
fidivr
pop
dec
cmp
je
pop
in
popa
or
push
jne
adc
xor
mov
out
or
fnstsw
push
sbb
mov
lea
(bad)
inc
sub
aaa
cmp
pop
nop
cwde
movs
pop
jae
out
pusha
ret
jo
add
sbb
test
xor
scas
sub
jmp
pop
pop
int
sbb
pop
fcom
push
push
pop
jge
loop
and
movs
push
sahf
ret
test
gs
and
xor
je
inc
xlat
gs
sub
xor
je
mov
cmp
icebp
add
mov
xchg
mov
ins
or
stos
inc
jo
ins
mov
jle
pusha
sbb
jo
ret
or
and
mov
jg
ret
or
lea
mov
jb
movs
adc
pop
push
and
jb
in
mov
call
sub
in
mov
lock
fs
or
mov
dec
pop
lods
jnp
and
or
fsubr
in
dec
add
(bad)
jge
or
or
cmp
outs
jne
and
pop
in
pop
gs
add
xchg
(bad)
push
mov
cmc
xchg
adc
push
cmp
xlat
and
lods
mov
int3
enter
lock
pop
sub
pop
das
and
fs
sub
jg
jle
push
lea
sahf
in
push
cmp
xor
shl
scas
push
xlat
jb
dec
jne
pop
pop
lods
fadd
ss
xchg
push
pop
and
push
adc
js
popf
test
xor
jbe
push
aam
sub
out
xchg
(bad)
mov
mul
dec
mov
fisub
or
mov
mov
push
cmps
(bad)
cdq
(bad)
mov
pop
jne
ds
xchg
adc
pop
rcr
pop
cmp
in
imul
inc
jae
cmp
jb
shl
push
rcr
push
daa
pusha
push
jae
add
mov
out
jne
aas
add
sub
pop
xor
call
outs
push
pop
clc
ror
cld
inc
or
ja
dec
dec
push
or
call
xchg
mov
add
icebp
mov
jecxz
dec
inc
push
and
jae
push
(bad)
ins
cmp
mov
test
lods
inc
and
or
or
mov
push
fdivr
adc
fidivr
add
xor
cmp
lea
lea
push
fsubrp
pop
mov
or
add
js
out
jno
cmc
mov
les
inc
fidivr
push
mov
push
push
ret
sti
push
jo
jl
mov
inc
aad
sub
mov
mov
lea
shl
stc
retf
test
mov
dec
mov
inc
add
je
ror
imul
push
sub
test
inc
mov
jle
push
dec
(bad)
call
cmp
jmp
sub
cmps
inc
push
dec
mov
and
xor
ficom
ret
(bad)
or
and
adc
or
inc
jl
rcr
loope
pushf
fcomp
lods
add
dec
sub
pop
and
scas
cmc
adc
retf
lods
repz
test
stos
lock
push
sub
inc
jne
add
loopne
or
jecxz
iret
cmp
call
xchg
div
dec
cmp
push
add
idiv
inc
add
dec
push
loopne
add
daa
cld
add
test
pop
call
xlat
outs
(bad)
or
test
(bad)
jae
js
xor
mov
or
lods
sub
adc
mov
movs
dec
sub
ins
or
enter
test
cmp
les
jbe
push
push
stc
pop
(bad)
mov
int
inc
add
(bad)
outs
adc
dec
push
jmp
(bad)
push
mov
pushf
and
hlt
daa
jb
adc
shl
or
sbb
xchg
or
sub
pop
sbb
cmc
fidiv
push
push
call
fwait
sbb
fsubr
cs
cmp
bswap
sub
sbb
leave
mov
and
xchg
in
shl
inc
inc
(bad)
pop
popa
les
pop
add
test
fldenv
cs
xchg
dec
push
jmp
js
(bad)
ror
add
fnsave
stos
dec
mov
test
js
test
shl
pop
sbb
mov
adc
xor
pop
lea
aam
leave
push
push
ins
hlt
add
iret
mov
cs
add
ins
and
sub
aas
fdivr
inc
push
cmc
jl
rol
mov
scas
mov
cmp
push
mov
xchg
lods
push
je
push
mov
rcr
adc
or
add
mov
in
(bad)
sbb
mov
cmp
addr16
jbe
add
push
ins
mov
inc
repnz
mov
add
(bad)
(bad)
jb
out
xor
addr16
jmp
rol
ss
add
arpl
addr16
ret
add
cmp
xchg
mov
popa
push
add
jbe
jne
gs
or
adc
sbb
mov
outs
push
cmp
mov
adc
popf
push
add
cmp
and
inc
push
and
jb
jl
call
adc
inc
dec
ss
jne
adc
xchg
sbb
and
mov
enter
call
in
shl
xchg
mov
shl
cmp
jnp
ret
std
ret
fs
inc
cmp
push
scas
cmp
rcl
aam
js
aas
das
and
pop
push
aas
or
mov
aad
xor
ds
mov
sbb
gs
adc
pop
repnz
mov
mov
sbb
dec
push
fimul
or
mov
adc
fucomp
rcl
cmps
lds
cmc
daa
inc
add
mov
add
add
outs
rol
test
push
sbb
mov
imul
jne
lahf
inc
std
enter
cmp
adc
and
push
es
push
rcr
mov
sbb
add
jne
jmp
cmp
mov
inc
jge
pop
call
div
arpl
bound
mov
xchg
dec
and
dec
in
adc
or
mov
je
hlt
rcr
dec
ffreep
test
hlt
xor
push
shl
add
cmp
add
xor
add
xor
jmp
and
mov
jbe
shl
inc
mov
pop
lea
movs
mov
mov
or
je
push
add
jl
push
call
add
cmp
add
in
fnstsw
lock
and
in
push
cmps
enter
call
mov
pop
push
jb
add
mov
stos
and
dec
jo
or
fsub
mov
fcomp
test
in
dec
ins
lock
mov
mov
(bad)
add
push
ret
jb
inc
je
push
cmp
or
(bad)
inc
xchg
add
sbb
scas
test
mov
add
xor
and
cmp
and
arpl
fidivr
push
or
mov
sbb
mov
(bad)
pop
xor
sbb
sbb
cwde
cmp
pop
(bad)
xchg
nop
cmps
pop
mov
stos
jo
out
inc
in
data16
jne
loope
popa
xchg
or
sbb
wrmsr
cmp
jmp
leave
or
or
je
or
mov
jmp
icebp
xchg
paddusw
jne
and
and
bound
inc
adc
add
es
jne
shl
mov
dec
sub
dec
cmp
jge
inc
(bad)
pop
je
push
scas
push
loop
mov
out
test
push
nop
and
push
mov
fsub
xor
sbb
or
ret
push
add
icebp
mov
push
mov
and
pop
pop
icebp
and
shl
mov
ror
aas
or
popa
sub
les
cmps
int3
int3
or
int3
jnp
pop
and
(bad)
call
add
hlt
hlt
mov
add
(bad)
jne
jae
xlat
mov
cmp
cmp
bound
mov
inc
test
pop
cmp
pop
cmp
(bad)
cmps
add
sbb
jae
fcomp
movs
mov
jb
inc
jge
cmp
hlt
adc
push
push
jge
jmp
add
sbb
inc
mov
add
gs
inc
xchg
data16
or
sub
pop
adc
mov
xor
icebp
sbb
pop
jbe
mov
mov
adc
cmp
or
push
popf
pop
sub
js
add
push
dec
fidiv
xor
out
into
loop
cmp
outs
push
shl
lea
adc
js
or
mov
push
sub
sti
repz
mov
jle
test
ja
enter
sub
in
ffree
pop
mov
xbegin
cmps
inc
sbb
jg
sbb
fwait
mov
jmp
cmp
ds
inc
and
pop
mov
push
ficomp
mul
jl
ins
mov
push
jmp
jecxz
pop
xchg
push
les
xor
sbb
jmp
loopne
fwait
mov
push
adc
lds
in
or
sub
and
mov
sar
inc
enter
xchg
retf
cmp
jo
adc
and
imul
(bad)
add
shl
div
mov
and
ds
add
push
jle
sbb
inc
xor
xchg
xor
mov
loop
cmp
add
ja
mov
and
inc
mov
dec
es
add
fdiv
adc
xchg
loop
jge
mov
outs
jae
imul
loop
(bad)
movs
adc
leave
lock
add
mov
jecxz
or
push
cwde
jl
jle
dec
xchg
adc
or
das
add
call
int3
cmp
sub
sti
stos
idiv
cmp
je
pop
out
mov
cmp
fcom
pushf
leave
jmp
sahf
jmp
xor
nop
nop
mov
inc
cmp
jle
inc
sbb
pop
fistp
pop
add
adc
(bad)
or
dec
inc
or
std
fadd
leave
pop
inc
xchg
pop
mov
adc
push
inc
outs
jbe
push
lds
or
pop
mov
xchg
add
mov
lea
test
sar
inc
adc
adc
dec
les
fisttp
add
and
sub
enter
jecxz
mov
sbb
mov
inc
mov
loopne
daa
lea
inc
add
jno
dec
mov
push
mov
call
and
in
jo
mov
ds
aaa
sbb
dec
push
lea
outs
lock
(bad)
shl
or
adc
(bad)
pop
bound
das
rcr
movs
mov
les
enter
mov
scas
pop
xchg
inc
ret
jmp
sbb
push
cwde
xchg
xchg
xchg
in
fsub
sti
dec
jo
jmp
lea
jbe
xlat
std
mov
mov
or
adc
adc
call
in
adc
out
cmp
xchg
inc
add
sbb
mov
add
pop
sub
cmp
pusha
jmp
push
movs
fst
mov
lock
pop
mov
ret
push
xchg
popa
pop
pop
enter
xchg
ret
xchg
or
(bad)
iret
jne
and
fwait
shl
in
mov
adc
call
aas
pop
pop
or
fcompp
sbb
pop
(bad)
push
jmp
push
jge
cmp
je
add
loope
ins
cmp
pop
retf
sub
leave
or
push
push
push
(bad)
adc
xor
mov
sub
xchg
clc
xchg
fsubr
mov
scas
push
leave
bound
mov
inc
jmp
mov
sar
dec
adc
pop
(bad)
cmps
ret
dec
rcl
add
adc
sub
push
call
pop
inc
adc
dec
movs
test
rcl
xor
test
mov
test
in
adc
lods
nop
fadd
clc
sbb
mov
adc
add
xor
shl
mov
cmps
sbb
add
lea
mov
hlt
pop
rcr
scas
inc
nop
or
mov
push
cmp
push
stos
lea
(bad)
enter
fwait
test
inc
cmp
je
inc
jmp
sbb
test
ja
loop
jne
(bad)
fmul
clc
inc
sbb
jmp
(bad)
push
or
pusha
pusha
dec
push
dec
adc
pop
rcr
aam
dec
and
dec
scas
loop
sub
jo
ss
or
sub
xor
out
and
stos
aad
movs
sti
stos
pop
inc
sbb
es
loope
cwde
js
cmp
jmp
cmp
js
repnz
push
xor
icebp
add
test
bound
dec
mov
adc
and
and
scas
(bad)
jmp
outs
push
rcl
add
push
out
dec
inc
(bad)
imul
pop
clc
push
and
lods
mov
pop
scas
inc
add
adc
xchg
inc
add
inc
lods
aas
and
or
lea
sub
sub
lea
and
mov
repnz
push
shl
sbb
les
push
add
pop
or
mov
test
sbb
in
sub
add
shr
mov
add
cmp
pushf
and
pop
mov
dec
and
and
mov
das
enter
sbb
or
inc
inc
sbb
sbb
jg
pushf
jg
movsx
ror
adc
and
je
add
mov
push
shr
jmp
lods
sub
mov
and
das
or
adc
cmp
enter
arpl
and
jo
mov
scas
and
or
adc
xchg
dec
xchg
mov
adc
mov
inc
in
inc
add
jl
jne
(bad)
add
test
cmp
je
push
and
lods
and
cmps
and
inc
sbb
xor
mov
pop
sbb
jp
dec
xor
and
js
and
add
jl
inc
jge
xchg
popa
mov
inc
add
leave
pusha
mov
jo
fwait
mov
mov
(bad)
push
mov
adc
push
mov
pop
fdiv
cmp
or
mov
rcr
ds
mov
sbb
add
add
sbb
xor
mov
push
push
sub
push
push
pop
jmp
jmp
add
xchg
sbb
dec
add
ret
(bad)
pop
jg
jmp
add
cmps
jg
cmp
jl
mov
jmp
out
xchg
jno
lods
push
xor
push
stos
mov
fldcw
js
mov
xor
loopne
jae
loopne
(bad)
ds
dec
inc
int3
dec
popa
dec
pop
retf
sbb
fwait
addr16
outs
cmp
xchg
xchg
mov
mov
inc
addr16
xchg
xlat
aaa
loope
fdiv
pop
fs
aas
adc
xchg
xlat
cs
lods
movs
adc
je
mov
cmps
adc
mov
(bad)
hlt
rcr
pop
cmp
adc
xor
mov
popa
adc
je
daa
mov
pop
enter
jg
cld
in
pop
nop
jmp
aas
cmp
pop
iret
pusha
in
aam
dec
xor
gs
rol
or
(bad)
nop
loopne
cmps
and
sbb
fwait
push
pop
mov
rcl
in
stc
push
mov
ds
cmp
adc
cli
call
cmp
and
test
or
aad
pop
retw
dec
popf
movs
sbb
pop
xchg
or
shr
push
inc
retf
sbb
cmp
cmovno
push
or
dec
lods
inc
add
test
mov
add
fiadd
inc
adc
ja
pop
lock
loopne
bound
inc
(bad)
and
mov
sbb
sub
(bad)
mov
add
cwde
xchg
pop
daa
ror
stos
cdq
or
pop
push
out
jl
clc
cmp
mov
xor
jmp
cmp
xor
ja
cmp
push
mov
xor
mov
sbb
jmp
outs
sub
push
pusha
je
in
retf
pop
add
add
add
sahf
dec
dec
and
xor
daa
movs
cmp
repnz
xor
shr
loope
sub
in
pop
adc
jnp
xchg
fcmovb
mov
add
pop
dec
jne
mov
add
jno
push
adc
les
das
jmp
xor
mov
jo
pop
inc
xor
sub
add
dec
adc
add
adc
jb
aaa
int
jo
shr
icebp
enter
cs
arpl
mov
mov
push
pop
xchg
jns
pop
push
je
dec
dec
cs
push
mov
push
adc
lea
pusha
jmp
pop
je
pop
sbb
inc
(bad)
push
loope
fst
add
xor
mov
es
xor
mov
push
jb
call
nop
loop
jae
push
cmp
aas
and
ret
fdivr
inc
dec
adc
dec
hlt
mov
cmp
push
pop
lock
jne
or
and
push
mov
sub
pop
aad
addr16
push
outs
(bad)
fstp
mov
jb
mov
and
dec
es
sbb
rcr
cmp
movs
xlat
add
jb
outs
xor
dec
push
mov
mov
icebp
cmp
push
sub
or
add
push
imul
or
xor
dec
sbb
mov
mov
dec
xchg
retf
sbb
xlat
xlat
sti
mov
jns
jne
jmp
frstpm(287
jo
jae
or
push
arpl
mov
jnp
test
push
es
ret
div
aaa
push
mov
jle
xchg
and
jle
jno
xor
sbb
data16
inc
jmp
sub
popa
mov
inc
push
mov
push
aam
mov
mov
inc
push
jle
add
or
inc
arpl
sbb
imul
xchg
mov
fsubr
call
sbb
inc
adc
adc
mul
dec
mov
and
int3
add
scas
ret
call
cmp
jg
adc
or
test
pop
hlt
dec
(bad)
sbb
jo
aad
xlat
ins
shl
or
rol
pop
nop
cmp
mov
cwde
fcom
retf
pop
pop
cmc
leave
and
sbb
adc
xchg
or
add
(bad)
and
imul
repnz
pop
and
push
push
dec
or
imul
jno
enter
data16
es
retf
clc
cmp
mov
jmp
rcl
(bad)
jno
ins
mov
jns
cmp
es
mov
push
mov
sbb
(bad)
aas
loopne
cli
repnz
shl
test
imul
or
test
aas
jge
push
jmp
inc
mov
in
mov
into
jb
ja
pop
clc
je
cmp
fidivr
jb
cmp
jbe
ds
or
or
jnp
and
out
sbb
push
call
call
mov
(bad)
leave
leave
cmp
add
pop
jnp
icebp
inc
test
je
shl
pop
adc
push
ja
jmp
clc
pop
adc
dec
pop
inc
sar
jecxz
jmp
jge
xchg
inc
(bad)
and
ja
les
jg
shufps
xchg
inc
stc
mov
cmp
jbe
add
sbb
xor
enter
jbe
push
cld
jb
loopne
fucomip
xchg
or
into
jmp
mov
dec
mov
mov
dec
dec
mov
pop
pop
(bad)
push
inc
jb
test
cmps
adc
adc
or
push
test
add
cmp
jmp
aam
add
leave
xchg
pop
adc
dec
and
inc
sbb
cmp
cmp
pusha
or
xchg
push
sbb
sub
and
pop
(bad)
mov
cmp
pop
pop
test
cld
out
ficomp
pop
lods
add
cmp
add
loop
mov
add
mov
sbb
mov
aad
xor
pushf
add
cmp
and
sub
pop
ror
popf
xchg
movs
call
push
popa
and
inc
ins
push
sbb
test
fst
rol
inc
inc
loopne
pusha
xchg
int3
in
dec
jne
jo
sub
cmp
xor
cmp
or
mov
ins
cmp
pushf
in
aam
dec
inc
mov
jg
lods
mov
cmc
dec
mov
test
push
lea
push
mov
and
outs
sbb
movs
sbb
ror
ret
and
add
xchg
enter
add
push
mov
xor
loopne
and
adc
jle
or
lahf
(bad)
push
add
add
push
mov
adc
push
jne
pop
inc
popa
pop
sar
out
mov
mov
pop
lods
dec
sbb
inc
sbb
add
pop
xchg
push
mov
lock
aam
push
pushf
(bad)
jmp
push
jno
test
rcr
pandn
inc
adc
cmp
pand
adc
add
mov
cmps
add
adc
xor
xor
sub
or
mov
ret
mov
shl
adc
mov
dec
xlat
mov
or
and
les
fiadd
enter
mov
jbe
push
or
fdiv
inc
and
nop
rcl
xor
xchg
lock
sub
adc
in
jns
cld
rcr
push
(bad)
out
jnp
movs
mov
inc
add
push
inc
inc
push
dec
mov
(bad)
imul
xor
jmp
hlt
push
or
mov
inc
jmp
and
cli
aas
jbe
push
pop
push
addr16
fimul
dec
or
cmp
(bad)
jg
dec
sbb
dec
add
shl
pop
mov
mov
nop
sbb
dec
loopne
sub
add
pushf
mov
add
push
sbb
nop
push
dec
pop
add
dec
fwait
shl
xor
sub
jmp
adc
sub
sub
jle
dec
add
jnp
jne
and
sti
add
inc
imul
faddp
fimul
add
dec
(bad)
and
cmp
je
out
sub
cmp
call
mov
shr
not
and
jne
js
fild
xor
sbb
pop
xor
pop
jle
pop
dec
add
int3
mov
adc
push
or
aam
inc
ret
loope
aaa
movs
and
das
mov
and
mov
inc
js
ins
lods
neg
or
or
jne
mov
add
loope
mov
inc
mov
mov
loope
shl
or
mov
mov
jmp
dec
adc
lods
sbb
mov
adc
sub
rol
or
fiadd
or
mov
or
fs
mov
xor
and
loope
xchg
jp
push
call
aas
gs
push
or
or
and
add
dec
adc
test
inc
dec
mov
or
and
jne
callw
mov
mov
push
movs
or
shl
int
adc
adc
jo
adc
push
xor
mov
add
or
out
fisttp
mov
cs
inc
(bad)
mov
in
je
data16
or
aam
adc
(bad)
outs
push
adc
pop
xor
imul
xor
inc
or
xlat
inc
adc
push
pop
pop
stos
cmps
xchg
and
push
xor
adc
fisttp
jo
pop
jmp
or
sub
add
and
aad
popf
pop
jns
dec
jno
fdivr
es
sbb
inc
lock
mov
imul
mov
mov
add
adc
or
dec
jne
int3
push
jno
sti
mov
or
hlt
jg
add
pusha
lea
hlt
inc
sub
sbb
shr
add
bound
scas
inc
or
or
adc
out
out
mov
cld
lock
call
test
retf
sub
add
adc
and
pop
jb
adc
addr16
outs
fs
inc
add
sub
inc
mov
lock
push
mov
jecxz
pop
or
js
lds
not
and
push
xchg
int3
bswap
fwait
or
mov
and
push
cmp
xor
loopne
sub
pop
shr
ret
jmp
or
cli
mov
and
push
(bad)
outs
cmps
jle
and
(bad)
cs
mov
stc
add
mov
clc
call
mov
pop
call
stc
sbb
clc
(bad)
push
cs
pop
add
push
xor
int
mov
call
dec
jl
adc
shl
sub
and
push
mov
inc
mov
cs
fstp
dec
jo
(bad)
lea
jbe
pop
jg
jmp
jle
mov
xchg
cmps
imul
shl
sbb
iret
jp
rcl
aaa
mov
dec
test
push
or
iret
dec
xor
(bad)
adc
xor
mov
or
inc
cmp
div
popf
jmp
sub
jl
ds
or
loope
lea
mov
dec
int3
sbb
push
sar
dec
jp
or
pop
or
push
fiadd
mov
cld
xor
sbb
jl
cmp
dec
cmp
or
je
fisttp
mov
push
push
(bad)
fbstp
sbb
fnstenv
stos
fidiv
xor
cwde
ds
loope
xchg
icebp
mov
mov
mov
and
push
mov
cs
dec
into
mov
out
cmp
(bad)
jo
mov
xor
jns
dec
inc
sbb
adc
or
cld
cwde
pop
sbb
add
dec
test
ret
lods
pop
and
inc
pop
xchg
cmp
push
push
push
jge
push
sar
add
out
adc
in
pop
shl
xor
stos
dec
or
out
fldcw
stos
ins
mov
and
dec
xlat
fcmovb
adc
add
pop
mov
int3
mov
sbb
jne
xor
test
jmp
jnp
jae
cmp
fcmove
xor
aaa
arpl
aam
std
sbb
lods
mov
and
frstor
lods
(bad)
pop
pop
call
inc
push
push
sbb
dec
sbb
push
inc
bound
cs
jne
or
mov
dec
pop
iret
jne
add
mov
xchg
sbb
jb
xlat
push
and
mov
scas
dec
mov
and
jmp
push
pop
outs
leave
inc
test
sbb
push
pushf
mov
sub
icebp
sbb
fdivr
mov
add
dec
add
xchg
popf
call
out
pop
cmp
sbb
into
in
and
mov
(bad)
push
clc
push
mov
pop
in
lock
test
jmp
dec
mov
push
pusha
dec
bound
dec
push
and
jne
sar
add
sub
dec
dec
shl
inc
mov
enter
or
pop
xor
cmps
push
mov
sub
jge
inc
or
cmps
pmaddwd
or
dec
cld
or
push
push
mov
push
mov
and
je
jmp
sbb
jmp
scas
and
lods
test
jns
ds
cmp
into
(bad)
pop
xor
and
sbb
jo
inc
add
jb
sbb
push
jmp
sub
das
cld
enter
push
lock
rcl
shr
push
xor
sub
(bad)
or
adc
test
xchg
sbb
hlt
add
mov
jmp
pusha
and
sbb
mov
jne
or
and
inc
xchg
jns
(bad)
cmp
jne
sub
inc
adc
xor
(bad)
dec
shr
sbb
rol
rol
fisubr
nop
xchg
mov
cmp
mov
push
add
fst
add
xlat
and
dec
mov
out
push
mov
out
sub
sbb
imul
rcl
push
pop
inc
inc
jbe
mov
inc
movs
xor
add
sti
mov
(bad)
push
and
ja
inc
cmp
movs
aas
mov
jmp
mov
inc
push
add
loope
push
adc
mov
inc
das
daa
jno
sbb
and
sbb
add
arpl
cld
cmps
add
add
or
push
xor
cwde
and
icebp
xchg
ins
inc
fisub
push
push
push
aam
or
jmp
pop
add
add
jge
mov
pop
pop
sub
adc
jb
pop
sbb
(bad)
jle
cwde
and
call
push
sti
cmp
mov
retf
sbb
and
push
jo
popa
inc
or
pop
push
jnp
inc
mov
arpl
inc
jmp
mov
pushf
mov
adc
test
cmp
mov
iret
push
bound
xlat
cs
arpl
jne
lea
icebp
jecxz
inc
dec
pop
push
sub
inc
rcl
adc
add
adc
cmp
shl
movs
rcl
cmp
retf
mov
push
adc
mov
jb
pop
(bad)
and
icebp
inc
jb
xchg
daa
iret
(bad)
adc
xor
out
loop
xchg
in
fiadd
sbb
push
in
push
cmp
inc
push
pmulhuw
pop
cmp
arpl
pop
jle
jp
mov
jno
adc
leave
loop
jecxz
mov
and
and
push
gs
je
jle
or
test
or
ror
loop
pushf
shr
pop
add
pop
adc
inc
add
sbb
and
ja
and
cmovbe
fbld
enter
adc
hlt
popf
into
mov
inc
jbe
mov
adc
rcl
daa
in
int3
cmp
mov
out
push
out
ret
inc
jp
ja
stos
punpckhbw
mov
aam
arpl
mov
pop
into
sub
inc
mov
sti
lahf
int3
pop
aam
sbb
dec
add
fldcw
jne
rcr
gs
enter
inc
ret
sub
test
pop
mov
(bad)
repnz
bnd
mov
push
push
mov
adc
xchg
ret
jae
sub
or
cwde
shr
(bad)
push
in
cmp
hlt
jle
push
lea
pop
or
inc
cmp
add
push
mov
add
in
mov
std
jne
(bad)
sub
pusha
jmp
fisubr
sbb
add
fist
(bad)
int
push
push
sub
and
add
cld
pop
call
push
hlt
stc
push
inc
xor
dec
push
mov
loope
pop
push
cmp
lock
stos
xchg
sub
or
ud1
rol
push
outs
ins
or
movs
inc
ror
in
mov
jnp
rcr
push
rcl
and
js
xlat
push
or
imul
pop
mov
inc
lahf
xor
hlt
mov
and
inc
push
lods
and
jmp
cmp
inc
xor
push
fadd
sbb
lock
xor
inc
xlat
or
sti
jl
jp
sbb
sbb
and
loopne
xor
dec
xlat
xor
repz
js
lods
je
icebp
dec
inc
fdivr
loopne
add
das
test
push
or
add
mov
dec
push
push
jp
mov
imul
test
dec
pusha
xchg
xchg
aam
sbb
cmps
fadd
ret
mov
lahf
push
jle
jl
pop
push
popf
mov
mov
in
mov
mov
movs
in
inc
inc
imul
not
or
mov
cmp
popa
aaa
jns
js
xor
pop
mov
add
push
pop
sbb
dec
(bad)
dec
cwde
fnstenv
sub
mov
adc
inc
jns
dec
mov
cmp
mov
cmp
sub
popa
pop
or
lds
mov
movdqa
stc
mov
or
pop
xor
push
dec
out
stc
jl
jg
jg
outs
inc
or
out
mov
jo
addr16
jg
sub
jg
lea
push
mov
cmps
jns
jle
sbb
imul
cdq
add
or
loope
or
jl
xor
sub
cld
or
cmps
or
into
ds
sbb
mov
push
xchg
lock
in
out
ret
je
jnp
sub
ja
retf
xchg
loopne
outs
mov
in
lock
test
lock
rep
scas
push
popa
mov
or
rcl
adc
mov
or
jp
test
pop
inc
sub
push
push
ret
sbb
xchg
(bad)
jmp
ins
and
mov
pop
repnz
push
(bad)
rcl
adc
jo
mov
rcr
inc
adc
in
int
in
pop
add
or
xor
movs
mov
push
or
and
clc
add
retf
pop
push
xor
sbb
je
push
popf
ds
cmp
idiv
push
or
push
data16
pop
test
sbb
sahf
jmp
movs
xor
out
mov
push
add
and
out
shl
xor
outs
sub
or
dec
and
inc
push
pusha
push
mov
icebp
adc
adc
loope
pop
mov
in
cmp
and
dec
add
and
add
ret
nop
fidiv
jmp
mov
xchg
inc
add
ret
dec
adc
je
rep
movs
jmp
neg
add
lock
jle
fsubr
add
add
icebp
push
xor
mov
jo
ret
mov
clc
test
pop
mov
dec
push
cmp
jge
mov
xor
pusha
mov
mov
and
mov
lds
add
sar
ja
add
pop
and
sbb
xor
stc
call
fstp
(bad)
pop
inc
adc
mov
es
mov
adc
pop
shl
sbb
scas
xor
xor
mov
mov
mov
inc
js
pusha
jl
adc
clc
xor
jmp
cmp
ds
data16
fst
add
(bad)
shl
ja
into
sub
mov
add
sbb
mov
push
xor
jp
jge
retf
push
jecxz
call
pop
inc
movs
gs
lods
cld
and
arpl
pop
or
bound
cmp
or
jg
or
mov
rcl
dec
jl
loopne
lahf
xchg
nop
push
imul
inc
mov
and
loope
and
sbb
in
ret
add
ret
test
in
add
enter
std
popa
loopne
jg
or
and
jo
or
mov
mov
js
shr
sbb
dec
sub
mov
ret
jl
xchg
sbb
jne
cs
(bad)
je
lock
add
cmp
pop
sbb
xchg
pop
nop
pop
pop
or
or
mov
cmp
pop
sub
xchg
rcr
push
adc
dec
cmp
wbinvd
inc
pusha
adc
adc
in
xor
adc
push
add
icebp
pop
hlt
xchg
push
push
pop
push
xchg
inc
push
lahf
xor
jo
push
mov
or
or
fwait
or
sbb
add
add
sahf
mov
and
cmp
fidivr
fisttp
arpl
int3
cmp
mov
ss
shl
sub
dec
lea
test
add
inc
or
sbb
loopne
jg
loopne
or
sbb
and
push
and
(bad)
xchg
pop
lock
and
adc
lea
(bad)
pop
rol
cmp
xor
cmp
adc
add
fmul
sbb
fimul
pop
adc
jno
mov
dec
dec
dec
sbb
mov
sbb
and
stos
dec
out
xor
inc
jo
inc
int
pusha
mov
retf
pop
rcl
cmps
(bad)
cld
push
outs
sbb
jae
leave
xchg
hlt
inc
adc
xchg
xor
jp
or
sbb
adc
ficom
clc
(bad)
dec
mov
cmc
dec
lea
nop
pop
aas
adc
aas
(bad)
add
adc
mov
lahf
pop
add
ins
mov
jne
jmp
stos
add
jo
js
or
je
and
mov
cmps
hlt
mov
scas
push
cmp
jecxz
adc
test
xor
sub
sbb
test
add
test
(bad)
data16
push
xchg
pop
hlt
or
test
cdq
inc
sub
pop
in
aad
rcr
or
popf
inc
je
and
mov
mov
fisubr
nop
mov
xchg
es
jl
ret
push
adc
dec
in
mov
add
pop
inc
sbb
sub
inc
or
push
mov
div
mov
movs
(bad)
ds
mov
dec
cmp
cmp
aaa
or
jle
push
xor
adc
jmp
cmp
fnstcw
mov
sub
sbb
add
cmp
add
adc
push
push
jne
sbb
outs
aad
ret
and
push
aas
jmp
enter
xor
mov
outs
pop
mov
jmp
icebp
sbb
xchg
mov
pop
inc
sbb
and
sub
pop
(bad)
(bad)
std
dec
mov
imul
cmp
add
adc
and
aaa
add
and
gs
push
and
cmp
(bad)
cdq
les
adc
ja
push
loop
jmp
ins
pop
xor
jmp
(bad)
fcmovnbe
jmp
div
mov
mul
xor
out
rol
in
imul
jb
cmp
or
cmp
add
xchg
xchg
push
sahf
jmp
loopne
add
stos
fist
dec
js
push
add
sbb
rcl
dec
mov
inc
dec
push
xor
stos
dec
test
bnd
notrack
jle
adc
out
mov
xor
js
mov
sbb
mov
jb
lods
in
or
int3
cmp
ror
push
retf
(bad)
xor
and
mov
jne
aas
lods
adc
push
gs
into
(bad)
xor
test
lock
dec
push
in
xchg
jne
lods
or
xchg
inc
cld
aam
adc
(bad)
pop
call
std
ja
mov
jbe
inc
scas
jmp
and
or
mov
inc
sub
cmp
ja
adc
add
inc
sbb
clts
push
xchg
fimul
fdivr
push
sar
pop
and
mov
xchg
xchg
dec
push
inc
pop
lea
mov
or
shl
loop
cmp
es
test
lods
je
or
je
or
adc
adc
mov
or
add
in
aad
or
dec
or
test
cmp
lods
iret
mov
stc
lods
mov
cmps
push
lock
cs
in
dec
rcr
leave
mov
es
popa
push
cmc
pop
mov
scas
mov
push
or
inc
ins
je
ja
shr
in
jl
pop
ins
aas
sbb
dec
cmp
inc
sub
pop
aad
pop
and
std
dec
sbb
jne
inc
jne
and
xor
movs
push
mov
xor
pop
cmp
push
movs
test
lds
ret
imul
lods
cmp
pop
inc
bndstx
sub
dec
inc
mov
pop
xchg
inc
mov
pop
lea
inc
pop
rcr
pop
sbb
mov
repz
pop
jo
es
jns
das
ret
xor
push
or
out
mov
je
pop
push
or
xchg
sub
and
test
fdivrp
push
inc
cmp
lods
das
popf
lea
push
(bad)
iret
mov
inc
xor
jb
xchg
stc
shl
test
mov
mov
xor
add
pushf
and
mov
cmp
xchg
adc
(bad)
jecxz
push
push
adc
lea
adc
pop
add
dec
add
inc
jne
mov
dec
or
mov
mov
(bad)
cld
jmp
rol
jmp
stos
pop
or
out
add
jno
std
je
movzx
pop
pop
xchg
xchg
movs
scas
or
retf
imul
mov
and
sub
rcr
pop
pop
cmp
sar
ret
xor
test
aaa
xchg
pop
je
shl
add
xor
push
or
inc
pop
sub
loopne
sti
jecxz
or
pop
and
add
addr16
add
or
sub
and
not
ss
sub
test
sbb
push
mov
(bad)
ror
mov
fld
pop
ins
adc
arpl
xchg
mov
adc
pop
call
inc
jae
and
rol
test
inc
adc
mov
scas
addr16
popf
scas
mov
cmp
jle
sbb
pop
shl
and
pop
push
pusha
rcl
push
jg
ins
fmul
(bad)
adc
ins
sbb
mov
push
jge
pop
cmp
xor
lock
cmps
stos
adc
out
push
fdivrp
lds
sub
xchg
add
inc
mov
cmp
test
cmps
and
sbb
or
mov
inc
scas
lea
cmps
daa
mov
and
xchg
icebp
arpl
popa
push
push
clc
xchg
ins
call
jb
dec
call
push
mov
out
mov
inc
daa
add
adc
push
mov
push
mov
mov
inc
add
pop
test
or
jo
inc
sbb
adc
imul
xchg
sub
cdq
movs
fild
mov
sbb
(bad)
jg
mov
fsubr
pop
sub
jp
fidivr
sbb
jne
js
or
xlat
cmp
(bad)
cmps
sbb
punpcklbw
les
and
and
clc
cli
xor
test
pushw
cmp
pop
icebp
cdq
faddp
and
das
into
aaa
pop
xor
xchg
sub
scas
inc
clc
repnz
call
cwde
add
mov
add
mov
call
popa
mov
retf
call
mov
inc
add
inc
jmp
dec
cs
inc
sub
cmp
stos
mov
sub
mov
pop
dec
pop
add
movs
cmc
sar
xchg
push
sub
(bad)
sahf
loop
mov
mov
sbb
sbb
jmp
mov
sbb
mov
ror
ja
popf
loopne
sub
cmp
jnp
ret
repnz
in
lods
cmps
jns
test
add
inc
and
push
lahf
cdq
sbb
jns
adc
sub
sbb
xor
bound
ins
mov
movs
adc
adc
pusha
cs
jp
add
push
inc
retf
jne
cmp
adc
xchg
sbb
mov
jnp
mov
pop
ret
jnp
in
push
loop
pop
add
dec
pop
jno
xchg
mov
adc
rcl
lea
out
movs
daa
pop
mov
xchg
sahf
rol
xor
jne
aaa
fsubr
shl
std
xchg
pushf
rol
push
and
jl
test
push
inc
add
push
test
das
add
cmp
inc
and
rcr
dec
adc
or
imul
fistp
push
js
and
and
repz
rcl
dec
stos
inc
clc
ja
fdiv
push
cli
push
pop
xchg
dec
ret
pusha
xchg
add
lock
push
sar
jmp
cwde
and
xchg
inc
and
xchg
fwait
and
adc
xchg
jp
add
scas
mov
mov
sar
pop
and
aad
adc
and
lea
aaa
push
push
data16
pop
jmp
gs
sub
js
sbb
mov
xchg
mov
jl
sbb
and
mov
nop
mov
or
xor
lock
inc
js
push
pop
jbe
adc
cli
shl
xor
popf
(bad)
shl
jo
mov
pop
jns
(bad)
xchg
mov
xor
mov
push
mov
in
inc
sbb
cmps
in
jb
and
out
in
shl
jne
test
je
daa
lds
xor
add
xor
sti
mov
xor
add
mov
add
sar
mov
sub
sti
cld
or
fbld
jno
jne
adc
inc
ins
lock
jne
shl
aad
xor
iret
popa
jbe
movs
xchg
rol
dec
out
xchg
dec
int3
int3
push
test
sbb
shr
sbb
push
sbb
mov
mov
mov
ficomp
sub
retf
(bad)
and
inc
xor
jnp
cld
popf
pop
add
pusha
jbe
call
mov
add
mov
mov
jno
into
mov
lods
mov
(bad)
inc
xor
mov
mov
jmp
test
jmp
movsx
popf
stos
inc
arpl
aam
cmp
out
in
fimul
ret
retf
add
cmp
fsub
jne
mov
jg
rol
xchg
icebp
pop
inc
call
les
pop
cmc
jmp
enter
fs
lea
xchg
mov
test
inc
push
jmp
fistp
pop
pusha
fcom
push
inc
out
mov
test
repnz
hlt
clc
push
and
cmp
addr16
xchg
adc
and
push
test
(bad)
push
or
push
add
iret
sbb
scas
sub
inc
pop
popa
loopne
cmp
ret
pusha
shr
mov
pop
mov
sbb
out
mov
int
push
jmp
pop
(bad)
sub
clc
pop
cmp
push
clc
test
dec
loopne
add
stos
pop
cmp
add
ds
aaa
sbb
jb
icebp
(bad)
addr16
push
sysenter
sbb
adc
jns
dec
add
lock
loop
sbb
dec
and
jmp
xchg
mov
and
add
aaa
mov
xlat
jge
mov
push
adc
cli
or
aas
mov
inc
mov
adc
(bad)
rcl
mov
push
fmul
mov
and
inc
and
mov
mov
inc
test
sbb
cli
or
push
jl
or
mov
movs
dec
add
nop
retf
add
inc
mov
xchg
shr
shr
mov
sbb
cmp
or
dec
sbb
(bad)
mov
in
add
inc
mov
aas
mov
ins
mov
dec
dec
stc
pop
mov
adc
cmp
add
ins
and
xchg
push
xchg
adc
and
sub
mov
jbe
pop
push
ins
jmp
scas
sub
ins
test
jmp
retf
cmp
cmp
sbb
call
dec
sbb
mov
dec
je
mov
or
repz
lods
pop
rcr
or
push
fisub
sbb
(bad)
lea
push
jecxz
or
adc
cdq
sub
fstp
jne
adc
pop
frstor
cmp
pop
cmp
adc
dec
test
adc
jnp
popa
mov
mov
inc
je
xchg
cmp
and
in
add
sbb
and
sub
je
sub
scas
test
add
lock
pusha
or
lock
repz
jbe
jle
jl
cmp
jb
dec
add
test
dec
mov
lea
xor
mov
inc
or
mov
add
push
or
add
dec
ret
jmp
xor
dec
sbb
ret
xor
cmp
inc
inc
cmp
dec
xor
mov
test
jno
outs
pop
or
jl
test
fmul
adc
arpl
out
popa
sbb
xor
ror
mov
lock
or
movs
mov
xchg
inc
xor
or
test
fadd
fstp
pop
pop
pop
push
xor
push
dec
jo
push
adc
inc
nop
mov
inc
inc
adc
shr
inc
add
jb
xchg
xor
data16
push
mov
jne
test
add
sbb
(bad)
cld
fdivrp
not
push
imul
sar
shl
pop
cmp
push
and
cmp
(bad)
jb
clc
dec
pop
out
and
adc
ja
(bad)
js
(bad)
pop
test
aam
pop
shl
pop
cmp
aad
clc
push
test
sar
push
or
loop
sti
push
jnp
xchg
mov
in
ror
xor
dec
mov
cwde
hlt
inc
stos
cs
cs
and
inc
cmp
test
jmp
arpl
imul
jmp
sti
pop
ja
jecxz
pop
push
jp
loopne
outs
add
retf
lods
icebp
jmp
je
push
sub
clc
retf
scas
add
clc
and
add
inc
aaa
mov
inc
sbb
add
push
inc
push
hlt
and
movs
sti
ins
pop
mov
lock
jl
jae
mov
shl
push
mov
punpckhbw
jecxz
out
mov
adc
fisttp
and
leave
sar
mov
fmul
or
cdq
sub
sbb
test
loop
stc
mov
imul
dec
push
mov
add
lahf
mov
(bad)
jbe
xor
push
shr
je
clc
imul
test
mov
add
test
xor
mov
push
cmp
cmp
pusha
outs
inc
scas
xor
sub
push
jo
in
mov
cld
mov
mov
int
in
(bad)
jo
shr
push
leave
loopne
mov
mov
adc
inc
faddp
dec
mov
mov
lea
push
xchg
sub
add
cmp
sbb
cld
cdq
les
mov
push
and
inc
shl
and
fisub
push
sbb
(bad)
adc
fbld
mov
xchg
out
shl
xchg
aaa
jnp
dec
dec
or
sub
rol
jecxz
test
xchg
pusha
push
scas
or
xchg
sub
pop
sub
retf
ret
sbb
cmp
sub
xor
fistp
or
jmp
cmp
xor
inc
inc
sti
cmc
and
pop
add
xor
jmp
mov
mov
adc
dec
inc
shl
sbb
sub
shr
add
xchg
(bad)
cmp
mov
bound
shr
loopne
nop
ins
adc
mov
mov
mov
adc
dec
enter
sub
gs
pop
iret
dec
mov
ror
or
jo
cwde
cmps
ds
outs
or
orps
adc
inc
push
test
aad
lock
cmovo
xchg
(bad)
and
cmp
lea
ret
aad
or
adc
mov
sub
sub
icebp
mov
inc
mov
stc
or
sub
icebp
jmp
out
into
(bad)
xchg
inc
into
out
inc
pop
out
ret
fnop
cmp
sub
or
mov
mov
fs
fdiv
cmp
mov
or
fs
or
mov
and
jmp
pop
xchg
mov
jns
bound
adc
fs
push
add
inc
mov
(bad)
xchg
in
test
movs
or
sbb
inc
and
iret
and
rcl
cld
sub
clc
adc
sbb
dec
and
or
cmp
pop
mov
xor
pusha
and
adc
adc
enter
adc
xchg
iret
xor
ins
adc
pop
cmc
psrlw
push
push
mov
xor
stc
cmp
fimul
inc
sbb
loopne
clc
rol
test
retf
sbb
(bad)
and
mov
add
or
push
pusha
(bad)
mov
cmp
adc
call
jne
enter
inc
jp
test
mov
jb
cmp
dec
mov
push
add
sti
loopne
std
inc
inc
cmp
cmp
sub
add
jo
ret
mov
mov
add
adc
push
iret
add
or
inc
dec
push
and
add
dec
mov
test
adc
add
sbb
int
mov
push
dec
cld
pop
sub
mov
sub
or
or
loope
sbb
(bad)
div
xchg
out
pop
jne
push
mov
adc
sub
aaa
outs
xchg
cs
add
inc
cli
push
jns
js
mov
das
and
push
push
xor
mov
push
cmp
js
popf
js
jne
hlt
sub
retf
sub
(bad)
mov
fwait
add
push
and
sub
push
push
ror
sbb
push
pop
cmp
dec
fld
(bad)
jo
rcl
push
fwait
or
je
mov
cmp
add
adc
fnstcw
mov
push
nop
test
out
add
mov
push
mov
add
call
add
pop
(bad)
inc
mov
mov
imul
add
sub
inc
inc
cmp
pop
test
push
mov
and
jl
movs
push
fiadd
and
pop
or
popf
cmps
ret
cmp
adc
or
cmp
dec
adc
inc
scas
xor
popf
cmp
adc
pop
mov
or
mov
or
or
(bad)
mov
sbb
stos
add
in
pop
sub
mov
hlt
sub
sbb
ja
xor
pusha
adc
nop
add
dec
mov
outs
mov
xlat
popf
test
jns
test
add
hlt
mov
and
mov
popf
out
push
mov
add
hlt
push
sub
inc
push
fdiv
push
xor
inc
test
call
or
sub
jnp
jae
pop
cs
cmp
mov
push
dec
pop
jb
imul
in
jo
imul
inc
cmp
push
sbb
lods
jmp
dec
jmp
and
sbb
mov
push
lods
mov
aad
jmp
mov
mov
out
out
into
mov
cmp
sub
or
push
rcl
pop
cli
and
and
add
ds
jp
test
jns
pusha
inc
xlat
clc
nop
icebp
add
add
ins
sbb
push
out
xchg
rol
jecxz
mov
xor
das
ss
or
(bad)
sti
mov
scas
mov
pop
ins
push
daa
inc
imul
add
mov
aaa
xlat
push
cmp
lock
pop
mov
(bad)
jne
sbb
add
cmp
mov
inc
scas
jmp
inc
std
jne
ror
fld
fsubr
or
inc
add
jmp
jbe
pop
mov
call
pop
push
add
rcl
pop
mov
(bad)
retw
add
pop
sbb
mov
xor
mov
cmp
outs
call
or
push
jmp
mov
das
add
adc
(bad)
jmp
dec
lea
push
scas
movs
shr
mov
cmps
mov
movs
xchg
sar
lahf
out
movs
iret
mov
out
mov
test
shl
ror
inc
inc
or
mov
xor
lea
sub
jmp
xchg
into
(bad)
jo
fisubr
push
mov
(bad)
cmp
inc
cmp
push
inc
frstor
or
adc
bound
rol
jg
adc
(bad)
xor
mov
aas
inc
mov
or
(bad)
jg
out
adc
mov
inc
mov
inc
inc
inc
dec
cs
adc
dec
sbb
jl
sbb
xor
and
outs
jo
ds
mov
inc
dec
jne
xor
test
sbb
xchg
retf
test
xor
cmp
outs
or
mov
fs
or
pop
pop
mov
and
pop
inc
push
mov
or
and
imul
inc
xchg
dec
and
mov
add
mov
or
xchg
sub
adc
and
pop
push
add
jne
cmp
xchg
mov
imul
sbb
jo
fadd
mov
or
jo
hlt
(bad)
sub
clc
add
shl
pop
sub
jmp
xor
add
mov
mov
xor
pop
pop
push
inc
add
ret
adc
sbb
pop
rcl
xchg
jno
es
jmp
xchg
jmp
and
sti
pop
les
cmp
mov
mul
mov
xlat
push
dec
adc
sbb
pop
pop
and
shl
pop
sbb
lods
mov
inc
xchg
scas
push
push
and
popf
inc
or
push
xchg
adc
push
mov
ins
loop
sbb
stos
add
or
test
imul
pop
stc
mov
xor
push
clc
push
push
add
rcr
fistp
push
and
push
ret
push
or
cmp
or
mov
and
imul
inc
mov
in
push
xchg
and
repz
popa
loope
xchg
scas
inc
or
aas
jbe
cdq
or
stos
add
test
xor
out
mov
or
inc
xchg
lock
leave
cmovno
retf
or
xchg
cmp
xor
or
jne
add
xor
out
cdq
inc
aas
sbb
lahf
push
(bad)
jge
(bad)
inc
sub
rcl
arpl
mov
push
sub
inc
push
mov
push
dec
jne
cdq
les
call
xor
inc
dec
mov
xor
adc
pusha
shl
push
div
mov
push
and
dec
loopne
sub
les
add
or
push
add
jecxz
and
fidivr
jge
xchg
adc
inc
jmp
push
es
mov
pushf
adc
adc
test
arpl
mov
pop
cmp
aam
jno
dec
adc
or
mov
je
jbe
jns
or
fisubr
adc
sbb
and
js
pop
das
fwait
neg
push
xor
push
jne
push
adc
fadd
sti
popf
shl
or
scas
dec
or
mov
mov
pop
adc
cmp
add
and
test
pop
sbb
(bad)
xchg
jmp
scas
or
xor
inc
fiadd
icebp
out
shl
arpl
sub
cmp
sbb
enter
pop
inc
(bad)
das
pop
dec
or
sbb
popa
or
push
in
sbb
sbb
imul
sub
ror
test
mov
lea
mov
and
or
jmp
mov
sbb
je
or
test
cmp
adc
(bad)
arpl
dec
adc
ret
cmp
jae
fcomp
jne
mov
mov
js
cmp
inc
in
jmp
inc
xor
inc
xor
mov
pop
and
or
push
outs
je
pop
xlat
mov
pop
jne
jmp
mov
push
js
ins
data16
ja
xchg
out
sub
and
in
rcl
pop
sub
dec
pop
outs
cmp
mov
cmp
movs
xchg
fiadd
xchg
and
sub
xor
pop
inc
mov
popf
inc
int3
jle
das
dec
push
je
stos
(bad)
cmp
jne
adc
pop
mov
ret
dec
or
ds
pop
xor
movs
cmp
in
popa
and
daa
cmp
dec
ss
jb
pop
sar
clc
into
xchg
fsubr
mov
mov
sub
mov
xchg
stos
lods
ss
add
or
cmps
es
cmp
mov
xor
inc
dec
rcr
and
jl
(bad)
or
or
data16
jl
add
cs
xchg
mov
and
into
push
add
add
xor
jbe
fiadd
jle
add
sub
aam
mov
mov
ja
dec
push
add
cmp
mov
sub
inc
iret
scas
mov
mov
(bad)
stc
add
aad
inc
push
lea
pop
mov
and
push
add
xchg
mov
dec
sub
jne
or
add
add
adc
adc
add
add
dec
ror
pop
loope
or
ret
mov
or
test
and
xchg
leave
xchg
xor
adc
dec
add
cld
loop
xor
and
neg
mov
sub
sub
sbb
outs
ins
and
in
xor
sbb
jge
xlat
add
adc
pop
lea
or
fcom
inc
push
iret
jb
sbb
mov
daa
and
mov
push
sbb
adc
fwait
jo
pop
inc
or
mov
mov
add
loopne
add
push
sub
lock
inc
adc
cwde
ror
xor
xor
adc
mov
xor
jl
cmps
sub
adc
jne
aaa
cmps
add
pop
(bad)
call
xor
add
loop
mov
sub
sar
mov
or
xchg
add
adc
leave
inc
sbb
dec
adc
and
out
push
std
cs
aas
sbb
shr
mov
push
(bad)
cmps
rol
mov
clc
popa
pushf
(bad)
xchg
jo
test
test
add
sub
cmp
mov
int3
jmp
sbb
cld
mov
jmp
jno
jmp
inc
and
jne
nop
sbb
out
inc
pop
inc
inc
(bad)
jnp
pop
jne
mov
inc
mov
jmp
mov
cmp
dec
or
inc
dec
mov
adc
add
aaa
inc
cmp
ins
(bad)
dec
shr
ret
cmp
ja
sub
dec
mov
das
push
cmp
jecxz
jmp
inc
add
dec
jne
xor
nop
int3
into
dec
imul
inc
cmp
out
call
mov
push
add
xor
daa
xlat
aas
daa
pop
retf
mov
mov
mov
push
mov
add
je
add
lods
pop
push
imul
jp
and
loope
inc
cmp
cmps
push
xlat
dec
outs
cmp
jecxz
fidivr
(bad)
dec
sbb
fnstenv
mov
adc
or
sbb
sub
mov
arpl
not
mov
mov
sbb
imul
inc
cmp
je
in
lods
or
sub
ret
mov
sub
or
pop
sub
pop
adc
or
(bad)
popa
inc
push
cmp
je
mov
or
or
jge
cmp
movs
imul
add
jecxz
test
call
cmp
sbb
jmp
rcr
mov
test
bound
add
mov
rcl
adc
(bad)
rcr
xor
pop
jo
jecxz
or
je
lds
or
mov
clc
dec
popa
mov
pushaw
imul
inc
cmp
movs
shl
sbb
pop
lahf
rol
sub
cmp
and
cld
in
jge
shl
sub
dec
jmp
xor
mov
sub
mov
pop
cmovne
ret
pop
ror
sub
jl
add
fild
movs
movs
lods
adc
enter
pop
mov
(bad)
arpl
adc
jmp
pusha
imul
add
aaa
add
add
pop
mov
stc
inc
popa
jmp
test
push
in
xchg
cmps
add
mov
xor
ficom
iret
pop
add
fnstsw
or
and
imul
enter
pop
movaps
fild
inc
push
add
or
cmp
dec
pop
mov
fimul
pop
cmp
outs
clc
cmp
jmp
push
push
dec
js
jmp
adc
mov
xchg
cmp
jbe
ror
sub
and
cmp
jne
jno
sbb
adc
mov
push
sbb
sbb
jns
add
and
add
shl
and
inc
fadd
into
jl
sbb
or
aaa
js
mov
rol
cli
lsl
pop
sub
pop
cmc
sar
xor
lea
add
jl
jne
dec
shl
arpl
add
rcl
sub
push
lods
xchg
(bad)
shl
push
fwait
mov
jl
das
test
push
shl
leave
push
shl
pushf
lock
pop
and
rol
sub
pop
and
pop
sahf
and
and
and
or
jmp
cmp
sub
and
fwait
sub
or
imul
push
and
inc
adc
jl
sbb
js
jne
shr
std
pop
sti
push
nop
mov
addr16
clc
pop
rol
test
mov
xor
retf
cmp
clc
fwait
add
cmp
jb
leave
jle
xor
jae
xor
xor
xor
add
xor
aaa
add
xor
popf
adc
sbb
xor
adc
xchg
xchg
sahf
lock
or
mov
rol
stc
cmp
jge
mov
jle
and
cmp
retf
pop
adc
and
sar
jge
or
adc
pop
sbb
das
outs
jmp
cmp
cmp
add
or
cs
(bad)
loop
sbb
mov
add
fs
ss
fwait
loopne
jmp
leave
push
sbb
push
jmp
pop
fsub
test
js
adc
add
push
daa
and
cmp
shl
rcl
fild
adc
add
hlt
dec
pushf
mov
add
scas
or
popa
add
clc
xor
data16
mov
xchg
pop
test
mov
js
into
fsub
cwde
inc
push
mov
loope
jmp
(bad)
sbb
popa
jmp
inc
fldpi
inc
outs
mov
aam
pop
stos
add
ret
pusha
jl
enter
push
repnz
push
fst
pusha
lea
je
mov
nop
in
add
adc
xor
or
dec
push
dec
lahf
mov
dec
adc
in
imul
adc
adc
adc
shr
nop
mov
add
xor
xchg
dec
cmp
inc
push
push
aad
push
push
pop
dec
sbb
add
or
push
adc
cmp
adc
push
pinsrw
mov
lea
imul
cmp
fs
push
add
in
dec
dec
jmp
aas
mov
fisub
or
add
es
je
push
rol
cmps
nop
push
and
ret
in
sar
and
or
and
inc
(bad)
jmp
or
js
in
cwde
fimul
and
cld
pop
adc
push
push
pop
sbb
cmp
ficomp
sbb
cmps
push
sbb
xor
outs
add
cmp
add
push
jmp
cmps
ret
sbb
pop
or
les
mov
mov
mov
popa
push
out
or
std
or
inc
sbb
clc
push
(bad)
push
or
retf
dec
inc
xchg
mov
sti
jmp
ret
mov
inc
clc
jae
lea
add
rcr
xor
(bad)
jg
popa
imul
cmp
or
mov
jnp
pop
loopne
xchg
add
sbb
cmp
mov
icebp
loopne
js
cmp
push
in
cld
enter
or
repnz
inc
push
in
push
push
repnz
inc
js
add
dec
mov
aam
or
ss
(bad)
xor
jmp
push
cli
jnp
push
mov
xor
lock
and
popa
sub
push
mov
mov
sbb
dec
mov
shl
push
or
dec
movs
add
mov
movs
sub
lock
cmp
jmp
rcl
sbb
jp
add
jmp
repz
pusha
gs
or
ret
(bad)
push
rcr
je
enter
jmp
or
push
add
loope
push
sub
pop
cmp
adc
add
add
mov
mov
adc
mov
mov
imul
inc
jl
jo
inc
mov
pop
mov
push
adc
cmp
or
jns
test
xor
cli
fist
or
add
fidiv
lock
mov
pop
inc
push
adc
and
adc
sbb
mov
jmp
inc
cmp
test
icebp
cmp
xor
and
cmp
sbb
or
test
adc
or
lock
repz
cmp
or
shl
shl
lock
in
pop
sti
scas
cwde
xchg
xchg
adc
inc
cs
or
adc
add
cmps
xchg
out
clc
adc
adc
cmp
je
mov
cmp
pop
jne
dec
mov
mov
add
inc
div
pop
add
jmp
cdq
jp
stos
adc
arpl
mov
jge
iret
shl
xchg
nop
mov
adc
or
inc
xor
cmc
push
pop
xor
lock
push
push
add
add
pop
adc
nop
cmp
and
stos
push
fstp
sbb
das
loope
lahf
idiv
fidiv
push
ret
inc
in
mov
mov
std
add
jo
sub
scas
cmp
push
sbb
and
jl
pop
lea
(bad)
jmp
xor
rcr
(bad)
push
adc
dec
adc
rcl
cmp
cld
clc
add
mov
mov
movs
aas
mov
mov
add
sbb
cmp
rcr
adc
xor
test
jo
movs
lods
sub
loop
lock
fwait
add
and
add
sar
push
inc
fwait
call
adc
jns
retf
inc
dec
cli
ja
cmp
push
pop
idiv
ror
jl
push
or
add
and
dec
js
add
mov
mov
xchg
add
test
jbe
sbb
pop
mov
mov
pushf
nop
call
mov
push
sbb
test
push
sbb
int
sbb
sbb
adc
adc
retf
loope
data16
ret
xchg
adc
jge
mov
rol
sbb
dec
repz
lods
mov
mov
push
push
xor
shl
enter
push
ret
ins
mov
sbb
test
movs
aam
lock
sar
scas
or
push
pop
test
pop
cmp
(bad)
sbb
xchg
sbb
(bad)
adc
xlat
add
ins
or
ret
icebp
jg
pop
icebp
pop
cs
push
fldl2t
call
inc
sti
aas
jl
adc
xchg
je
jl
ror
add
adc
pop
mov
adc
jmp
sbb
and
sub
test
sar
dec
jl
in
ss
add
cmp
cmp
jnp
sbb
enter
loop
pop
push
jo
jecxz
push
jnp
add
push
xor
enter
dec
mov
jne
pop
ficom
mov
or
je
xor
or
loopne
shl
pop
pusha
test
pop
push
fmulp
je
(bad)
mov
dec
fwait
jb
aas
and
lock
ins
or
call
in
or
pop
cmp
xor
dec
inc
inc
dec
cmp
fwait
mov
add
sbb
jp
or
inc
(bad)
mov
adc
loopne
or
xchg
repz
sub
adc
out
pusha
ss
push
or
(bad)
movsx
les
push
xor
mov
cmp
add
shr
inc
mov
shrd
push
jle
pushf
dec
gs
ss
out
jge
sbb
clc
mov
lea
mov
sbb
add
dec
jmp
es
sub
cmp
stos
add
lods
inc
test
xor
add
pop
add
cmp
inc
and
xor
cmp
inc
out
loope
sbb
shr
jp
pop
sbb
js
add
mov
jb
push
sub
cmp
fidivr
shl
add
ret
mov
lock
mov
push
lock
or
pushf
add
sar
xor
push
lock
shr
or
ficomp
(bad)
jb
mov
dec
dec
inc
dec
sbb
jae
pop
or
or
adc
sbb
xabort
xchg
les
and
mov
or
mov
sbb
sub
fmul
lds
jb
jbe
xor
mov
xlat
add
(bad)
jb
js
or
and
xor
add
mov
pop
sar
lods
add
push
lock
inc
sub
xchg
xchg
cmp
and
jge
mov
jne
add
cmp
jl
or
popa
add
adc
or
in
xor
sbb
add
mov
or
jo
je
or
xor
or
aas
rol
or
sbb
jno
mov
push
bound
xor
aam
nop
sub
lea
add
sub
mov
test
push
ins
push
jmp
ins
or
cld
jl
ret
sub
dec
mov
inc
sub
mov
inc
and
hlt
mov
into
mov
fsubr
sbb
jns
fld
nop
call
je
or
shl
fwait
pop
data16
push
int
(bad)
jmp
inc
ja
inc
popa
jle
xchg
int
push
inc
je
dec
inc
xor
xor
dec
jle
xor
or
dec
lea
imul
add
iret
cmp
mov
(bad)
outs
xchg
arpl
not
rol
jge
jmp
jb
xor
sbb
ins
adc
cmp
fld
fstp
jmp
inc
call
dec
add
push
pop
clc
fstp
xchg
dec
cwde
sbb
cmps
add
fwait
or
push
aas
push
add
adc
mov
ret
add
and
int3
int
push
sbb
mov
mov
daa
lods
xlat
inc
test
ins
pop
lods
sbb
ficomp
dec
mov
es
jmp
xchg
push
inc
add
das
add
mov
iret
sahf
rcr
add
add
push
inc
data16
pop
icebp
out
jae
or
and
pop
retw
sub
sbb
clc
pop
cmps
inc
aam
cmp
push
bnd
lea
lea
or
out
int3
in
xchg
xchg
(bad)
sub
and
fcom
sbb
pop
mov
call
add
or
push
dec
ret
je
les
mov
enter
ret
sub
sar
loop
data16
ret
dec
dec
and
push
(bad)
fsub
push
test
push
mov
sbb
xor
nop
int3
cmp
shl
leave
ds
cdq
es
and
push
adc
jnp
sub
mov
adc
je
ror
xor
inc
sub
mov
mov
add
sbb
int3
xchg
add
rcl
ss
dec
(bad)
enter
jbe
dec
jno
cmp
pop
and
push
sbb
shl
pusha
or
pop
popa
pusha
adc
adc
imul
xchg
or
lahf
ret
ret
daa
in
or
add
dec
and
pop
jg
mov
sub
mov
ins
repz
loop
sub
push
dec
ret
js
arpl
iret
add
xor
and
sbb
outs
mov
outs
mov
cmp
aaa
dec
jg
pop
push
cmp
(bad)
icebp
imul
(bad)
test
mov
in
lods
or
mov
sub
cmp
retf
add
ret
push
push
jno
push
fdiv
or
fisttp
xor
add
repz
or
loop
or
popa
jne
xor
test
xchg
sub
push
mov
cld
xchg
fbstp
sub
(bad)
fsubr
pop
xchg
sub
je
inc
(bad)
outs
or
je
dec
je
xor
push
mov
xchg
xchg
or
push
mov
mov
sub
ins
push
loope
push
sbb
adc
push
push
loopne
xor
(bad)
jne
dec
mov
and
xlat
jge
shl
pop
scas
es
xor
or
aam
fimul
pusha
jg
inc
sti
cs
sbb
mov
sbb
fdiv
and
and
add
or
push
loopne
add
jp
sahf
fsubr
fisttp
in
dec
dec
push
sub
je
pop
sbb
push
push
dec
jmp
shl
mov
push
retf
repnz
aaa
xor
jo
dec
enter
shl
sub
adc
push
inc
or
sub
dec
cmp
hlt
or
cdq
shr
xor
or
movs
sbb
ret
test
xor
data16
xor
or
scas
bound
int
xor
push
pop
and
dec
call
sbb
push
push
push
xor
and
mov
xchg
xor
shr
sub
sub
xor
imul
cmp
inc
dec
call
cmp
dec
out
call
cmp
xchg
data16
pusha
dec
imul
call
mov
dec
call
adc
xchg
pop
cmp
aas
mov
fnsave
push
xor
test
add
jb
xchg
out
xchg
das
inc
cwde
sub
cmp
sub
int3
pop
jmp
movs
and
imul
mov
into
in
xor
or
add
outs
aad
pop
fadd
repnz
push
and
leave
or
xchg
or
adc
dec
dec
outs
mov
sbb
sub
dec
dec
dec
xor
cmp
pop
and
cmp
inc
and
pushf
pushf
fmul
cmovs
pop
pushf
pushf
push
pop
add
daa
daa
fs
daa
daa
je
jl
sahf
add
leave
and
dec
mov
xchg
cwde
pushf
mov
xor
mov
push
nop
js
pop
sbb
mov
lock
push
fcom
call
dec
mov
sbb
jle
stc
and
dec
nop
in
loopne
loope
xchg
repnz
mov
repz
ins
addr16
xor
pop
sbb
cmp
or
add
dec
fistp
push
out
xchg
add
and
mov
cmp
jne
loop
shr
jne
sbb
movs
into
dec
cli
mov
xor
call
sub
les
mov
stos
add
div
xchg
lea
fisub
jmp
ror
loopne
jno
dec
dec
or
inc
iret
cld
sbb
dec
in
push
fidiv
xor
mov
ds
push
push
xchg
cmp
ror
cmpps
shr
adc
push
sti
imul
xor
add
xor
lods
mov
jmp
lods
mov
push
jmp
jg
sub
aam
xchg
add
in
jmp
and
sub
jle
mov
mov
add
loop
or
movs
rcl
add
jl
shr
pusha
loope
call
add
adc
xchg
in
adc
or
jno
test
mov
cdq
mov
mov
(bad)
sub
xlat
icebp
add
nop
push
mov
push
ror
adc
push
adc
mov
dec
pusha
and
xor
sbb
lock
cmp
scas
ret
cmp
and
inc
cwde
mov
cmp
(bad)
arpl
loope
push
adc
(bad)
jne
push
pop
cmp
cmp
mov
outs
sbb
adc
push
mov
js
inc
mov
psubusb
adc
es
adc
rcl
and
mov
and
and
sub
add
sbb
push
inc
and
and
mov
push
daa
sub
mov
push
sub
movs
or
push
enter
pop
(bad)
je
push
(bad)
repnz
rcr
loope
and
mov
sahf
mov
mov
adc
sub
cmps
pop
or
dec
add
inc
in
or
push
inc
or
lock
add
cmp
js
or
adc
call
or
mov
lods
mov
mov
imul
lods
jno
sahf
cmps
or
inc
cmps
xchg
repz
ret
xchg
sar
sbb
dec
ror
and
inc
push
jmp
in
mov
mov
mov
sub
imul
sahf
in
xor
pop
shl
mov
adc
or
fsub
loopne
inc
push
push
jmp
sbb
cmp
add
sub
dec
mov
push
stos
mov
or
cwde
ja
add
adc
dec
inc
clc
push
pusha
js
inc
pop
lods
ds
das
ret
and
cmp
push
inc
stos
xchg
cmp
push
mov
cmp
or
dec
mov
ins
jg
cld
lea
cmp
add
not
into
pop
in
aas
and
leave
ins
push
push
dec
push
outs
adc
adc
jnp
cmp
or
dec
add
xchg
or
ja
xchg
pop
(bad)
push
repz
lea
push
lods
inc
pop
adc
push
xchg
pop
push
xlat
enter
pop
mov
and
push
mov
ret
mov
lock
jmp
mov
add
clc
adc
in
fwait
dec
dec
cmp
cmp
inc
cmp
ja
add
hlt
sbb
add
or
cmp
add
sub
and
shr
push
cmp
outs
push
inc
jecxz
mov
pop
jle
adc
sub
enter
popa
sub
cmps
push
sbb
movs
add
paddusb
push
jp
push
adc
xchg
hlt
sbb
push
add
lds
scas
std
push
and
lods
xor
dec
pop
movs
jmp
adc
mov
add
push
popf
ins
lds
mov
push
pop
sbb
add
adc
jno
pusha
pop
sti
test
xchg
push
cmp
xchg
icebp
mov
lea
pop
call
int3
ss
movs
call
mov
push
push
or
ins
cmps
sbb
sbb
jmp
inc
xchg
mov
adc
sub
sub
add
shr
je
imul
pop
ins
jmp
push
push
add
pop
(bad)
jge
pop
push
sub
push
scas
dec
loopne
pop
es
sbb
add
push
fnsave
jno
fidiv
cmps
loop
and
sub
push
in
(bad)
fs
add
retf
enter
add
add
js
dec
xchg
mov
dec
das
out
cmp
fisttp
sub
jmp
sbb
je
mov
mov
xchg
and
mov
xor
das
in
into
mov
sbb
push
xor
and
push
sbb
mov
bound
(bad)
mov
adc
lods
cmp
cmp
xor
or
adc
jmp
imul
(bad)
or
jge
xor
(bad)
and
pop
rol
dec
shl
les
test
xchg
push
fstp
mov
inc
call
sub
inc
or
cli
imul
inc
ret
int
and
ins
(bad)
xchg
adc
sub
add
cmp
mov
fcmovnbe
aas
mov
pop
jecxz
inc
inc
lea
inc
or
add
mov
push
or
aaa
push
inc
shr
mov
push
or
sub
pop
inc
pop
pop
jmp
or
rol
adc
jg
inc
or
aas
test
push
aas
push
jmp
xor
sub
fld
jb
or
shl
sbb
sbb
inc
xor
inc
sbb
jle
pop
sbb
test
out
retf
sub
add
loopne
pop
retf
mov
or
mov
and
les
mov
push
mov
adc
lock
cmps
popf
mov
es
cbw
inc
inc
cwde
cmps
retf
je
or
in
mov
add
cmp
les
pop
test
and
and
inc
out
jmp
ds
clc
retf
test
push
push
pop
mov
into
lock
add
add
dec
mov
popa
call
sub
call
dec
fcomp
(bad)
mov
sub
mov
push
imul
sbb
movs
repnz
adc
icebp
xchg
loope
stos
push
jle
cld
pushf
jg
xor
(bad)
loop
test
xchg
dec
jp
je
mov
fmul
loope
sbb
jb
movs
shr
sbb
mov
fst
adc
fstp
sub
sbb
push
add
loope
cmp
retf
in
ds
fcomp
test
sub
adc
test
inc
jne
mov
inc
mov
retf
loop
inc
push
push
scas
xchg
dec
inc
or
lea
and
sub
popa
add
or
out
sub
pop
jo
or
les
and
icebp
test
push
pop
cwde
ret
and
mov
leave
and
cmp
and
call
fdiv
int3
xor
add
mov
sub
arpl
jp
pop
mov
xchg
sbb
pminsw
add
mov
mov
and
jo
jg
mov
cmp
cmp
jle
cmp
shr
inc
imul
push
je
or
adc
mov
adc
lods
and
mov
jge
cmp
fadd
ss
jle
pop
sbb
or
popf
pop
jg
sub
pop
cmp
add
rcr
test
inc
adc
fsub
rcl
repnz
int
cmps
aam
add
int3
movs
pop
pop
je
push
xchg
pop
movs
mov
push
dec
inc
push
push
mov
push
test
or
mov
rcl
mov
inc
call
or
xchg
inc
mov
add
sbb
or
inc
mov
cmp
pop
(bad)
sub
repnz
xchg
clc
push
jp
jbe
push
pop
add
push
add
push
jne
ins
or
clc
popa
and
sub
or
add
or
and
and
imul
or
(bad)
aad
or
nop
or
mov
xor
push
xlat
mov
shl
mov
mov
jae
outs
or
jl
es
nop
ror
jb
add
cmp
cmp
push
adc
adc
or
jl
ror
or
ret
aad
fld
pop
mov
into
ins
inc
sbb
dec
xor
jmp
es
dec
mov
and
jge
es
mov
or
dec
inc
fwait
call
loop
add
and
test
jp
mov
enter
cmps
test
pusha
mov
sub
pop
sub
and
rcr
pop
fst
test
inc
es
xor
or
push
inc
aaa
mov
adc
xchg
and
int
push
clc
xchg
push
or
sbb
xlat
(bad)
adc
stos
aaa
inc
mov
cmp
adc
inc
fsub
adc
dec
add
lahf
fidivr
jne
mov
jmp
lock
je
add
je
das
das
adc
jmp
ret
add
add
fimul
hlt
jne
and
ret
pop
jmp
sub
pop
arpl
pop
sbb
or
sbb
dec
fimul
fcomp
mov
inc
lock
mov
call
push
(bad)
xchg
gs
xor
xor
and
pop
dec
cwde
stc
and
inc
and
inc
stos
inc
push
add
or
or
jmp
dec
gs
sbb
add
push
push
sub
lock
push
add
rcr
push
push
cld
lock
push
jbe
cdq
rol
xchg
pop
push
sbb
ins
xchg
mov
adc
xor
mov
inc
icebp
pop
iret
mov
popa
jl
test
inc
std
adc
ss
sbb
adc
inc
pop
and
jns
je
mov
mov
jno
push
jmp
inc
jmp
pop
in
push
je
cmp
pop
pop
test
mov
add
repnz
and
rol
cld
inc
or
jne
retf
dec
or
pop
ins
sbb
jmp
rol
iret
jmp
jo
or
dec
or
push
and
pop
add
or
adc
data16
mov
mov
add
adc
add
push
cmc
movs
or
bound
or
gs
cmc
jmp
rol
and
lea
pop
enter
xor
xchg
mov
dec
mov
sbb
jo
or
add
mov
jp
cmp
jge
mov
mov
imul
pop
pop
fucomip
call
in
fidivr
jg
adc
ror
inc
jmp
popa
mov
adc
xor
xchg
jle
pop
jb
push
pop
adc
(bad)
push
enter
cmps
mov
add
into
inc
add
(bad)
add
mov
jl
dec
mov
push
push
mov
sbb
or
(bad)
mov
(bad)
dec
xor
les
ret
(bad)
pop
push
pop
cwde
adc
dec
sub
push
mov
add
cmc
jg
cmp
mov
add
sar
aaa
pop
inc
mov
pop
je
dec
jp
not
add
(bad)
cwde
out
rol
add
sbb
imul
mov
sar
adc
lods
pop
and
call
outs
push
xchg
xchg
cwde
popa
xchg
xchg
or
xchg
fs
stos
or
jns
lds
sub
add
xchg
cmp
cmp
jp
or
fwait
add
inc
(bad)
ficomp
movs
sti
or
or
pop
(bad)
mov
mov
push
inc
ds
cmp
pop
add
dec
movs
sti
push
movs
sbb
mov
or
call
cli
push
jmp
fimul
retf
jl
sbb
push
daa
pop
add
push
and
test
push
inc
stos
out
out
sub
mov
lock
out
pop
repnz
nop
or
jo
inc
and
cld
mov
and
inc
rcl
sbb
dec
cwde
adc
and
(bad)
js
inc
fld
push
pop
push
pusha
xor
push
(bad)
or
xor
add
jmp
out
sub
inc
call
xchg
jmp
xor
inc
sub
inc
popa
mov
sar
pop
dec
mov
lock
sub
add
jne
xor
or
shl
movs
xchg
(bad)
pop
add
cmp
cld
inc
adc
jl
inc
(bad)
pop
rol
mov
add
test
sahf
add
adc
popa
cmp
dec
mov
test
dec
or
loopne
push
inc
mov
jae
sti
pop
dec
sbb
adc
jb
dec
push
cs
or
inc
cmp
add
retf
out
retf
sub
shl
fstp
pop
mov
out
push
mov
jo
mov
xchg
(bad)
fcmovnb
sbb
inc
sub
neg
cdq
mov
push
mov
sub
rol
push
mov
popa
mov
push
xchg
mov
js
jmp
loopne
call
ins
cmc
ins
sbb
sbb
jo
outs
sbb
cmp
icebp
lahf
xchg
push
test
mov
jmp
arpl
sub
mov
xor
ins
or
icebp
popf
dec
pop
sub
inc
inc
add
ins
out
mov
and
(bad)
in
push
mov
sbb
out
sub
aas
loopne
ins
fiadd
xor
push
add
pop
xchg
ret
sbb
push
sub
int
mov
lock
jmp
adc
and
outs
push
jmp
jns
pop
test
mov
aas
jnp
mov
inc
lock
jne
test
lahf
cmps
shl
cmp
add
scas
push
inc
add
stos
inc
and
push
test
pop
or
sub
movs
add
pop
sbb
xchg
push
out
pop
push
js
jo
lock
scas
xchg
in
and
xor
mov
clc
(bad)
repnz
jne
(bad)
pop
sbb
inc
xor
pop
mov
jne
pusha
or
addr16
xor
in
or
shl
mov
dec
push
push
jg
pop
mov
mov
dec
mov
push
mov
jno
jmp
test
adc
and
cmp
push
(bad)
adc
or
jmp
add
mov
ret
mov
mov
into
ds
loopne
push
adc
rcr
mov
push
inc
adc
or
jne
cmp
repnz
pop
pop
sbb
inc
mov
inc
movs
stos
or
or
loopne
sbb
ficom
xor
outs
in
pop
mov
adc
xchg
sbb
push
adc
inc
xlat
and
or
ret
push
sbb
push
push
in
dec
inc
mov
sub
or
lods
and
sbb
sub
jg
mov
push
dec
cwde
ins
push
jno
pop
add
jg
sbb
jmp
sbb
inc
rcl
add
mov
js
adc
cmp
xchg
mov
ror
push
cli
and
lods
dec
fiadd
mov
push
ja
outs
xor
sbb
loopne
adc
and
mov
jnp
in
loope
ds
and
xchg
adc
retf
xor
cmps
adc
les
aam
lahf
jo
pop
xchg
xchg
loope
scas
jmp
imul
adc
inc
xor
ficomp
jbe
sbb
shr
cs
jmp
jg
sub
add
jmp
mov
test
adc
mov
xchg
mov
cmp
cld
sbb
xor
aas
xor
aad
pop
xchg
and
and
leave
and
test
and
add
or
rcl
lock
fadd
pop
or
adc
pop
jge
push
mov
adc
or
and
ja
(bad)
mov
sub
test
push
imul
and
or
add
clc
movs
addr16
mov
pop
movs
xor
cld
and
fiadd
sbb
xchg
int3
(bad)
lock
cdq
and
push
jcxz
xor
sbb
je
dec
cmp
push
dec
adc
jle
or
or
mov
add
and
cmp
test
(bad)
test
aad
fbld
fldcw
call
cmp
call
pop
add
retf
push
xchg
test
adc
and
in
or
xlat
adc
and
mov
ret
and
inc
fs
loopne
int3
les
fs
retf
loop
xor
(bad)
and
xchg
test
aam
mov
daa
or
inc
push
in
xchg
xchg
retf
repz
xchg
dec
adc
inc
cmc
out
or
jns
out
in
add
dec
adc
out
fs
retf
aad
call
sub
adc
push
daa
xor
out
fcomp
xchg
pusha
outs
push
jmp
inc
call
dec
dec
mov
ins
and
jo
push
fwait
mov
loope
sub
lock
dec
loope
push
mov
inc
clc
mov
dec
ds
clc
pop
jp
loope
nop
inc
xchg
or
mov
call
enter
mov
pushf
and
rcl
and
mov
xchg
pop
xor
add
(bad)
aaa
lea
mov
xchg
retf
movs
xchg
fsub
fdiv
sbb
push
sub
or
and
fld
cdq
add
bound
dec
jne
jo
xchg
fisub
adc
sbb
fistp
ret
push
or
add
xchg
dec
dec
scas
pushf
pushf
nop
nop
sub
mov
in
or
add
retf
(bad)
jae
sbb
dec
push
cmp
cmp
xchg
push
fist
pop
xchg
push
dec
jb
(bad)
push
adc
add
fisubr
inc
add
add
aas
iret
sar
lahf
stos
icebp
and
adc
or
add
call
sar
push
xchg
push
(bad)
out
and
xchg
jo
push
push
sbb
test
push
push
inc
loope
pop
lea
jns
jne
inc
addr16
cmp
push
cmp
xor
test
js
inc
sbb
es
nop
mov
out
call
inc
test
lea
push
mov
mov
cli
adc
push
jne
cmp
inc
pop
pop
call
or
scas
xor
push
pop
xchg
jne
in
sbb
add
push
lods
stos
fs
jge
mov
add
mov
jl
mov
mov
shl
cmp
push
in
(bad)
mov
into
pop
pop
jge
gs
cmp
out
xchg
mov
sbb
xchg
dec
xchg
xchg
jp
jle
push
sbb
daa
mov
rol
lods
les
call
movs
loopne
mov
push
jle
repz
aad
push
xchg
add
lea
xor
or
nop
cmp
daa
add
pop
dec
sbb
push
adc
stos
pop
shl
retf
or
cmc
jmp
mul
lock
adc
or
pop
mov
lods
jae
inc
add
cdq
js
jb
adc
cmp
pop
mov
and
mov
or
nop
repnz
das
nop
cmps
loopne
sub
or
or
movs
pop
sub
es
inc
sbb
or
loope
pop
and
xchg
mov
xor
shl
mov
xlat
ret
fsubr
pop
sar
(bad)
imul
inc
imul
xchg
push
sbb
mov
mov
mov
js
push
push
add
sbb
or
lea
add
mov
mov
into
push
adc
aad
call
dec
xlat
or
push
sbb
(bad)
call
cmp
data16
jb
ret
ret
xor
lods
mov
mov
call
lock
adc
aas
add
pop
jne
sbb
in
sbb
aad
daa
sbb
add
fs
mov
push
add
xor
lea
push
icebp
pop
daa
mov
xchg
add
sbb
jmp
add
cmp
jle
sub
sar
call
push
ret
jns
mov
and
mov
push
sti
je
outs
(bad)
adc
ret
or
and
push
cmps
loop
rcr
iret
aad
push
inc
mov
push
cmp
add
es
sti
arpl
neg
and
inc
lods
xchg
push
dec
push
into
mov
std
add
pusha
sub
ja
inc
adc
sub
hlt
mov
add
mov
adc
arpl
mov
xchg
mov
mov
lock
mov
pop
retf
cld
sub
das
hlt
out
fld
or
dec
cmp
jmp
sbb
jbe
push
add
cwde
push
xor
test
sub
gs
ins
and
hlt
scas
jb
mov
or
in
inc
pop
enter
lahf
jb
leave
in
addr16
lock
cmp
ss
das
adc
pop
ror
inc
into
jl
push
pop
inc
popf
add
pop
mov
sar
sub
mov
push
cmp
adc
stos
sar
push
int3
sar
and
add
ret
sub
inc
shl
sahf
or
cld
test
sub
aam
xchg
jne
cmp
jne
mov
ficomp
clc
gs
sub
mov
add
xchg
lea
(bad)
je
sbb
push
(bad)
push
lods
ror
daa
pop
sar
in
lea
test
jmp
aaa
mov
add
mov
dec
fs
pop
adc
push
push
cwde
or
add
and
or
adc
sub
mov
data16
fs
ins
jmp
sub
jae
ins
sub
push
xchg
outs
inc
dec
pusha
inc
data16
mov
mov
or
jnp
push
in
mov
mov
inc
(bad)
pop
ins
jecxz
mov
or
mov
test
stc
fdiv
pushf
daa
add
(bad)
mov
push
or
inc
inc
add
sub
mov
add
xchg
cmp
pop
pop
and
sbb
mov
mov
sahf
fwait
sub
lock
adc
cmp
mov
fdivr
mov
xor
adc
pop
pop
jl
addr16
and
sbb
sub
and
mov
or
sub
xor
inc
movs
add
loope
sbb
xchg
push
sbb
sbb
movs
inc
pop
xchg
inc
and
adc
adc
add
out
sub
aaa
xor
sub
data16
mov
jne
add
jns
adc
push
xor
les
je
cmp
xchg
mov
into
les
popf
call
pop
cs
aam
fadd
add
in
fdivr
cmp
jecxz
dec
sar
adc
xchg
fisub
inc
in
jmp
(bad)
bswap
in
loopne
sub
or
test
inc
sbb
(bad)
in
in
sahf
std
inc
and
push
mov
jns
fimul
inc
loopne
dec
inc
mov
xchg
rcr
and
xor
pop
mov
pusha
popa
ins
jo
fstp
sub
add
outs
movs
push
xchg
cmp
movs
aam
clc
dec
shl
test
push
sub
xchg
push
sub
imul
add
sbb
xchg
arpl
sub
inc
fsubr
mov
fs
ror
adc
in
fstp
ss
neg
(bad)
sub
leave
xor
mov
lods
add
inc
pushf
ficomp
inc
jo
hlt
icebp
clc
dec
je
or
cmp
push
cwde
in
in
movs
push
cld
jbe
fistp
ins
jne
jp
mov
push
popa
mov
adc
(bad)
in
mov
and
sbb
jg
xor
aaa
mov
cmp
xchg
xchg
xor
movs
pop
adc
jbe
cmp
fwait
xchg
out
imul
data16
sbb
js
pop
dec
mov
int3
out
imul
push
(bad)
ffreep
(bad)
or
mov
mov
sti
jo
jne
pop
push
or
movs
jge
sub
add
movs
mov
in
je
fiadd
(bad)
sti
jne
lock
pushf
rol
sub
add
add
nop
(bad)
test
jne
or
das
mov
test
push
hlt
test
fstp
in
mov
adc
xchg
add
retf
inc
or
sub
add
in
shr
inc
mov
add
adc
loope
shl
add
or
xchg
jp
ret
adc
cmps
jge
pop
sbb
xchg
rol
dec
(bad)
or
sbb
and
sub
xchg
add
pushf
sti
fadd
addr16
jbe
test
sti
in
push
mov
fimul
add
add
lahf
and
test
sbb
outs
mov
inc
leave
add
pop
rol
dec
xor
or
xor
cmc
addr16
or
jns
pop
sbb
add
or
or
fmulp
lock
xchg
call
dec
fst
and
xor
and
out
dec
push
gs
adc
mov
popf
movs
rcl
mov
in
adc
add
sub
imul
xchg
inc
test
xchg
arpl
je
loopne
pop
push
cmp
push
jno
loope
cmp
or
(bad)
push
popf
jno
sbb
rol
add
push
add
jge
or
xor
cwde
jae
dec
cmps
repz
jne
inc
hlt
inc
sub
loopne
add
popf
test
in
and
jne
mov
or
inc
(bad)
in
or
push
add
dec
bswap
inc
add
arpl
push
pop
enter
(bad)
lea
out
xchg
gs
aas
pop
call
or
out
mov
enter
leave
dec
sub
shl
or
or
fmul
data16
adc
dec
push
and
shr
cmp
dec
xchg
imul
int3
adc
add
popa
mov
pop
aaa
int3
add
sub
xor
in
mov
adc
mov
or
or
cmp
dec
dec
sbb
and
pop
ror
mov
add
inc
repz
stos
add
imul
cmp
sti
xor
loope
sbb
add
movs
aas
jmp
nop
sub
dec
shl
push
rol
sahf
stos
div
xor
dec
lods
add
repz
pop
(bad)
sti
cmp
inc
mov
adc
pop
call
push
test
push
pop
add
add
adc
and
mov
inc
lods
clc
inc
cdq
sub
sub
mov
xchg
pop
add
and
jno
cmp
leave
dec
fdivr
lea
jnp
icebp
jns
adc
dec
sbb
and
xchg
fdiv
jno
or
icebp
add
in
in
jo
or
rcl
sbb
xchg
nop
popa
jle
sbb
test
cmp
xchg
xchg
inc
cmp
popf
jge
mov
cmp
pop
into
dec
rcl
and
pushf
inc
add
cwde
test
push
xchg
cmc
push
add
adc
pop
mov
fisub
fwait
mov
push
mov
and
mov
int3
cmp
(bad)
(bad)
mov
pop
lsl
ss
mov
call
inc
add
fwait
push
push
ret
setl
popa
pusha
ss
dec
add
test
sar
or
fldenv
(bad)
mov
mov
add
popa
dec
dec
add
cmps
inc
mov
add
pop
mov
xor
cmp
dec
test
inc
ror
add
fiadd
jl
pop
and
mov
call
add
pop
pop
and
clc
loopne
aam
xor
mov
add
test
add
xchg
nop
cmp
adc
cli
pop
int3
jns
dec
or
inc
add
outs
fisttp
call
popa
sub
jbe
fld
jle
call
inc
jmp
adc
sbb
(bad)
cdq
ins
pop
and
mov
out
mov
hlt
or
inc
jbe
into
(bad)
dec
add
mov
add
loop
cmp
add
inc
jmp
mov
dec
cmp
or
jb
inc
jae
or
mov
outs
pushf
and
pusha
test
ror
and
jge
push
pop
inc
or
stos
es
inc
mov
or
mov
or
push
or
outs
dec
stos
inc
cdq
es
packuswb
jne
dec
xor
inc
inc
xchg
cmp
xor
or
retf
test
sub
sub
not
int3
mov
popf
je
mov
iret
xor
ds
push
or
xor
out
and
sbb
mov
jl
inc
aaa
je
cs
sar
ret
movlps
or
aam
and
jbe
ds
popa
sbb
push
pop
in
mov
adc
push
and
test
out
and
loopne
adc
lea
xor
sub
or
test
dec
fs
push
scas
push
push
pop
movs
pop
add
xor
inc
lock
sbb
mov
popa
or
clc
daa
adc
push
jae
cmp
lock
push
imul
sbb
mov
out
push
push
and
and
rol
push
into
lahf
dec
pop
rcr
lea
iret
and
fwait
out
and
hlt
push
jmp
movs
jge
pop
and
or
dec
in
shl
mov
xor
or
(bad)
stos
sbb
inc
mov
test
jp
in
loop
or
mov
jne
pusha
sbb
or
xchg
add
xchg
add
inc
inc
leave
inc
cmp
or
dec
mov
into
cmp
and
mov
pusha
xchg
push
adc
daa
add
mov
mov
mov
mov
or
test
mov
es
inc
jne
arpl
mov
jbe
lea
in
lods
mov
cmp
cmp
inc
les
add
or
fstp
inc
jmp
mov
sub
cmp
ja
arpl
fidiv
mov
xor
push
fwait
add
ffree
and
or
add
add
(bad)
daa
push
adc
jmp
or
inc
inc
into
jmp
fiadd
(bad)
scas
loopne
mul
jmp
cmps
mov
aas
mov
mov
lods
mov
sub
mov
push
fidivr
adc
arpl
xor
(bad)
js
scas
lods
sub
push
jmp
dec
push
mov
iret
fmul
and
xchg
lods
in
inc
and
mov
xchg
push
data16
cmp
mov
cmp
ja
sar
jg
mov
jae
inc
sub
pop
and
ins
js
inc
mov
xor
jbe
pop
jge
(bad)
adc
sti
sahf
cmp
mov
sti
lods
sbb
push
dec
jae
imul
sbb
aad
cmp
adc
fisttp
fisubr
mov
xchg
ds
add
or
mov
or
iret
mov
cwde
inc
pop
cdq
push
and
scas
mov
xor
(bad)
in
mov
mov
stos
sub
mov
mov
scas
call
push
popa
jge
mov
fs
nop
mov
pop
push
add
mov
cmp
cmp
inc
test
add
rcr
add
loope
outs
or
push
jmp
icebp
inc
xchg
je
call
cwde
inc
xchg
lock
cmp
rol
std
jecxz
mov
and
or
lds
pop
mov
or
mov
dec
cli
hlt
js
mov
sub
call
cmp
mov
add
mov
cmps
push
sbb
test
les
jl
cmp
adc
sub
jmp
(bad)
in
shr
enter
mov
xor
cs
push
ss
imul
inc
jmp
and
rol
mov
lods
rcl
cmp
and
push
fdivr
push
mov
loop
and
mov
add
push
mov
jp
and
into
mov
mov
jmp
lock
and
and
adc
nop
shr
xchg
aam
rol
and
adc
jle
fisttp
mov
pop
or
mov
je
(bad)
ja
mov
pop
mov
les
add
inc
int3
sub
cmc
(bad)
bnd
xchg
int
jnp
jne
jne
test
into
jne
inc
xchg
or
xchg
or
loop
pop
pop
and
push
hlt
int3
add
stos
or
pop
dec
(bad)
mov
jbe
fdiv
dec
movs
jmp
rol
jnp
push
xor
cmps
test
aaa
and
push
or
sub
add
cld
lea
cmp
dec
lock
stos
(bad)
cli
dec
ja
add
cmp
ins
mov
add
sahf
sub
sub
shr
sbb
ret
mov
and
in
test
js
lock
sub
gs
add
sub
fwait
test
(bad)
or
push
adc
mov
jg
or
mov
jge
(bad)
fdiv
add
test
mov
(bad)
pop
retf
sar
shr
shl
shr
or
inc
xor
mov
sahf
dec
xchg
push
add
shr
dec
push
cmps
clc
ret
mov
mov
dec
mov
mov
sub
sbb
cmp
mov
pop
(bad)
add
ficomp
int
mov
sar
pop
ficomp
fdivp
push
loopne
jmp
call
fidiv
pop
sub
jle
jb
dec
push
pushf
in
mov
cld
rol
and
int3
retf
jmp
test
(bad)
fiadd
or
sub
lods
add
jmp
scas
out
and
or
add
int3
sub
sbb
xor
retf
pop
mov
jmp
sub
add
neg
add
push
cmp
mov
inc
rol
rcl
inc
test
inc
or
pop
xchg
add
mov
out
cmp
add
push
pop
(bad)
ror
mov
out
sahf
push
jns
jecxz
xchg
jge
int3
dec
enter
xor
repnz
inc
hlt
idiv
fs
add
mov
jb
leave
xchg
shr
ret
or
into
and
or
jnp
cmp
push
adc
pop
ret
loopne
adc
lods
dec
rcr
movs
xchg
mov
add
inc
add
jb
cmp
ret
lock
dec
push
pop
cmp
sbb
add
call
movs
pop
jmp
xchg
aam
dec
sub
pop
ins
or
sti
mov
and
inc
dec
clc
iret
pop
push
dec
pop
xor
les
lods
pop
(bad)
mov
jle
add
imul
les
lods
or
sbb
fwait
push
pop
leave
mov
xor
dec
sub
mov
lock
jle
xor
jl
xor
cmp
je
(bad)
adc
sub
push
sub
xor
adc
rcl
push
movs
ror
add
inc
push
push
js
lock
cmp
or
adc
fld
sbb
pusha
dec
and
mov
adc
loopne
test
(bad)
sub
jmp
mov
inc
adc
jne
xchg
mov
pop
add
pop
mov
sahf
dec
dec
add
mov
js
cmps
js
adc
or
dec
shl
and
jg
pusha
adc
add
jmp
add
shr
or
add
add
fistp
and
or
jo
or
lods
sub
pop
movs
adc
xchg
xchg
cmp
ror
pop
cmp
test
lods
add
retf
add
js
movs
movs
movs
xor
dec
retf
and
push
outs
ror
dec
lea
movsx
add
dec
data16
add
jmp
rcr
fwait
and
dec
addr16
add
push
xchg
in
mov
cmp
adc
adc
neg
sbb
sub
and
sti
adc
ss
int3
push
pushf
jae
sbb
cmc
adc
out
stos
mov
fcom
adc
and
fld
rcr
cmc
fcomi
retf
enter
sbb
stos
or
and
push
loopne
jns
sti
dec
jne
and
adc
mov
adc
lods
rcl
jmp
dec
and
shr
ret
iret
mov
and
adc
je
push
jmp
mov
cld
je
xchg
xchg
push
cmp
add
add
or
mov
push
fmulp
push
lods
pop
in
push
fiadd
loopne
pop
push
sub
inc
loopne
dec
dec
pop
loopne
and
(bad)
xor
dec
cld
(bad)
ror
push
push
and
jo
jne
or
ret
inc
dec
loopne
mov
push
mov
mov
daa
sub
push
rol
je
nop
or
cmp
dec
pusha
jbe
sbb
lods
add
in
nop
ror
mov
adc
jmp
ins
add
xchg
and
mov
sub
inc
push
or
push
rol
mov
push
mov
ins
data16
adc
mov
dec
pusha
xchg
and
lea
fcom
rol
add
jns
or
sub
loop
push
fs
xor
adc
scas
dec
lods
inc
ins
and
je
stos
test
sbb
xor
push
xchg
out
push
stos
add
pushf
add
inc
cmp
xchg
js
and
int
lock
ret
cmp
push
cmps
daa
cmp
push
adc
push
loope
aam
jnp
pop
ins
mov
xor
add
imul
sub
dec
sahf
int3
(bad)
shl
mov
mov
sbb
pop
int3
(bad)
pop
retf
push
stos
or
test
jne
ss
pop
add
pop
lea
xchg
add
dec
dec
icebp
push
sbb
inc
sti
sahf
ss
inc
dec
je
add
or
jmp
popa
js
mov
sub
call
out
nop
dec
(bad)
sub
inc
cmp
leave
enter
aaa
push
aam
cmp
sub
mov
xchg
sub
push
sbb
adc
lock
adc
xchg
sub
inc
jl
jle
ret
cmp
adc
jg
xor
pusha
out
pop
cmp
mov
adc
pslld
int
mov
call
dec
add
jne
sar
cmp
pusha
psubsw
jae
add
jl
mov
adc
push
jle
loop
add
(bad)
or
or
fsub
sbb
jmp
add
jge
test
aas
xchg
daa
xchg
mov
repz
sub
xor
sbb
or
icebp
push
adc
add
sbb
cmp
rol
pop
xlat
mov
jmp
mov
cmp
sub
out
xchg
or
push
shr
mov
xor
fst
inc
xor
enter
mov
pop
add
movs
xor
test
push
pop
adc
movs
in
mov
or
mov
outs
movs
aad
or
retf
inc
jg
mov
rcr
test
mov
mov
es
sti
aaa
or
test
and
mov
and
or
call
push
loopne
push
pop
cmps
mov
inc
add
add
dec
mov
outs
das
inc
mov
and
cli
dec
cmp
fisub
sbb
and
xchg
pusha
add
fcomp
aas
xchg
jo
xchg
call
das
int
je
cmp
fs
cmp
inc
xor
adc
popa
or
xor
loopne
hlt
add
cmp
adc
inc
cmp
mov
and
add
aad
ror
movs
and
rcl
pop
das
imul
adc
add
jle
sahf
inc
hlt
mov
pop
rol
or
and
rcl
mov
dec
jbe
xchg
xchg
mov
ja
aam
or
inc
test
call
mov
push
or
xor
lea
and
xor
dec
or
xchg
(bad)
pop
push
add
cli
xor
or
ss
sbb
or
je
pop
(bad)
fadd
push
and
(bad)
rol
mov
(bad)
xor
xor
fild
movs
loopne
mov
enter
mov
sar
push
adc
mov
mov
outs
adc
imul
test
bound
xchg
gs
mov
jnp
dec
cs
mov
(bad)
(bad)
ds
or
push
popa
(bad)
fist
xchg
pop
inc
adc
cdq
rol
sbb
jne
ins
mov
(bad)
sub
jg
jg
add
cmp
jg
retf
arpl
fisubr
and
jmp
or
dec
inc
inc
inc
sbb
push
aam
loope
and
or
out
cmps
cmp
and
je
push
sbb
and
out
mov
stos
jl
mov
dec
mov
scas
pop
lods
and
aad
mov
scas
das
mov
iret
cmc
je
xlat
into
out
outs
pop
lds
nop
neg
or
iret
movs
jne
jp
sbb
cmp
stos
enter
adc
mov
cmps
sub
je
sahf
pop
or
nop
retf
arpl
add
cmp
aam
push
into
lods
push
cmp
mov
fcmovne
scas
lods
xchg
mov
pop
mov
stos
shr
mov
in
sub
loopne
jmp
pop
xchg
lods
mov
sbb
push
push
add
add
mov
mov
mov
sbb
xor
je
ret
add
and
push
mov
sbb
les
sub
jne
mov
fiadd
or
pop
test
mov
sub
inc
inc
test
dec
leave
push
lock
inc
pop
bnd
data16
jmp
push
test
mov
test
enter
stos
push
scas
popf
mov
add
adc
push
and
xor
jo
cmps
push
sbb
sbb
or
jl
stc
imul
das
adc
fiadd
loopne
push
aas
cmp
bound
sbb
sahf
enter
sub
jmp
xor
adc
mov
cmp
dec
adc
int3
xchg
or
test
adc
inc
data16
or
inc
push
rol
mov
push
mov
cs
cmp
hlt
test
loop
and
fs
sbb
idiv
and
and
mov
aad
cmp
fnstcw
icebp
pop
test
ins
sbb
add
jnp
jno
shl
fs
(bad)
sbb
mov
ret
ins
lea
xchg
sar
out
pop
or
sub
and
adc
movs
add
sbb
jns
and
mov
cmp
adc
dec
test
(bad)
outs
ja
adc
fisttp
nop
(bad)
pop
cld
mov
ins
push
test
xor
ret
imul
icebp
sbb
lahf
lock
push
inc
add
sub
or
xchg
mov
or
lock
add
lea
or
adc
(bad)
fdiv
add
or
mov
dec
sub
mov
gs
aam
and
fst
or
xor
jmp
xlat
bound
scas
cmp
bound
in
outs
and
or
mov
in
je
(bad)
pop
adc
outs
imul
sub
or
inc
bound
fst
adc
fnstcw
inc
test
pop
adc
add
pop
add
sbb
adc
adc
ficom
mov
aam
cmp
or
mov
les
adc
pusha
pop
jp
clc
adc
add
adc
mov
je
lea
cmp
sbb
sbb
adc
pusha
dec
adc
inc
jbe
ret
je
inc
loopne
sub
imul
es
fiadd
mov
dec
fimul
pusha
jmp
rcl
out
loope
cmp
ret
xor
out
mov
xor
jle
sbb
mov
or
stos
imul
or
test
pop
outs
push
push
retf
test
je
add
stos
push
call
adc
lea
push
sub
pop
dec
loop
imul
retf
xor
sahf
out
fcmovbe
int3
push
rcl
rcl
aad
sahf
out
(bad)
xlat
fcomp
(bad)
fiadd
mov
inc
loopne
ret
mov
lods
add
sub
stos
popa
loopne
xchg
into
add
shl
pusha
sbb
test
or
add
adc
push
loopne
popa
test
push
add
xchg
shl
and
dec
test
mov
adc
sbb
test
cmp
inc
test
scas
sti
or
cmp
cmp
das
or
jnp
sbb
push
push
push
pusha
jg
bound
adc
push
inc
or
pop
movzx
mov
test
leave
adc
mov
and
popa
xor
ror
add
in
sar
adc
pop
repnz
rcl
fcom
neg
fnstenv
jmp
ja
mov
mov
add
into
call
pusha
mov
or
scas
sar
fisub
addr16
shl
pushf
mov
jp
mov
jmp
xchg
adc
rol
pop
xor
or
nop
add
hlt
add
or
shl
push
icebp
rol
mov
loope
into
and
retf
sbb
mov
mov
sar
inc
jl
sar
ja
mov
add
adc
jp
rcr
inc
test
lods
jne
add
inc
or
rcl
outs
or
xor
or
test
mov
(bad)
dec
mov
xor
add
aam
lods
pusha
add
adc
aam
or
dec
push
int3
enter
adc
(bad)
or
ret
cmp
sub
cmps
adc
mov
mov
sbb
or
lahf
ror
rol
add
hlt
(bad)
jle
idiv
inc
push
fisubr
or
push
jbe
pusha
mov
neg
loopne
or
cdq
push
push
retf
mov
inc
dec
shl
retf
mov
lods
call
add
imul
mov
jmp
add
retf
lock
dec
push
mov
cmp
gs
cli
inc
cli
div
or
ror
sbb
test
add
loopne
(bad)
push
aad
sahf
push
jnp
mov
push
(bad)
call
retf
lock
mov
dec
je
hlt
and
ror
sar
rol
rol
mov
dec
dec
rol
lock
mov
je
mov
jno
loop
or
pushw
sub
loop
fsub
rcl
out
jge
xchg
mov
add
sar
add
xor
cli
xor
inc
xor
je
mov
mov
fdivp
fcomp
ret
pop
inc
shl
fdivr
aam
or
rcl
dec
xchg
test
shl
dec
shl
pop
loop
mov
cwde
xor
call
inc
stos
inc
call
sub
fnstcw
xor
jmp
mov
add
rcr
add
sub
cdq
add
xor
cmp
mul
inc
sbb
idiv
or
or
jb
adc
(bad)
lock
nop
das
test
jge
and
mov
mov
in
adc
(bad)
and
cmp
jne
jne
sub
test
in
in
jmp
popa
loop
inc
mov
push
outs
inc
push
pusha
add
sub
jg
sahf
in
ins
sbb
faddp
inc
add
int3
mov
or
inc
add
add
push
nop
pop
inc
call
cmp
scas
adc
test
call
mov
dec
and
adc
cs
push
shr
mov
cmp
push
hlt
cmp
shl
fs
jne
sbb
neg
or
xor
imul
xchg
jge
jmp
loopne
addr16
mov
lea
push
pop
sbb
mov
mov
pop
repnz
xchg
out
jmp
cdq
clc
and
test
xchg
adc
into
rol
add
sub
in
les
enter
lea
sbb
dec
shl
(bad)
fild
sar
js
add
enter
ja
adc
mov
cmp
push
shl
add
clc
xchg
test
ss
jne
mov
and
test
ror
or
xchg
adc
std
lahf
mov
dec
nop
dec
mov
dec
cmp
jge
add
jmp
cmp
clc
add
dec
cmp
test
push
add
dec
add
add
or
dec
or
inc
push
nop
(bad)
and
mov
jp
jne
dec
mov
pusha
sub
int
pop
imul
and
mov
mov
add
adc
mov
in
xchg
cs
or
and
mov
dec
jno
mov
mov
and
push
mov
test
jmp
push
aaa
retf
add
or
or
sahf
inc
mov
add
dec
imul
push
or
loopne
mov
scas
sub
push
or
jbe
ret
dec
push
loopne
pop
inc
rol
push
ret
dec
retf
push
test
xchg
adc
in
add
add
test
inc
pop
adc
inc
and
cmp
xor
into
aaa
adc
test
test
sub
add
rcr
dec
cmp
xchg
sbb
prefetchw
xchg
out
ret
or
fnstcw
and
push
(bad)
inc
push
pop
dec
push
imul
add
sub
push
call
and
inc
add
fsub
and
mov
sub
or
or
cli
nop
shl
adc
xlat
dec
pop
or
add
jne
dec
enter
and
sbb
mov
mov
inc
jge
in
shl
iret
cmp
jp
and
mov
pop
dec
pop
ja
jo
fldcw
mov
movs
dec
call
sahf
xchg
or
or
push
mov
jg
sub
ds
adc
cwde
cmp
xchg
cmc
add
scas
shl
in
cmp
retf
test
adc
mov
add
add
inc
rol
add
call
pop
and
sub
fidivr
and
sbb
inc
jg
into
inc
or
jnp
and
sub
push
mov
sbb
pop
stos
js
pop
sub
inc
push
loop
call
inc
fsub
std
leave
xchg
add
push
bound
add
cld
adc
jge
call
test
lahf
pop
addr16
jl
xchg
adc
add
mov
pop
movs
mov
clc
cmps
in
into
scas
movs
call
ret
xchg
and
popf
ins
sbb
xor
(bad)
sub
jmp
sub
pop
and
dec
xor
jmp
pop
dec
retf
xor
xchg
(bad)
push
mov
add
mov
or
je
pop
dec
mov
mov
mov
mov
lds
inc
into
es
mov
je
xchg
and
mov
out
push
cmp
ja
add
cmp
mov
(bad)
out
ret
(bad)
cmp
sub
ds
shl
leave
adc
or
and
pop
cmp
inc
fild
ret
fcmovne
xchg
and
pop
cmp
scas
sbb
outs
and
xchg
into
retf
enter
add
mov
jp
fist
adc
lock
js
pop
sar
inc
sbb
movs
push
mov
xor
jns
jp
or
retf
shl
mov
movs
dec
popf
and
ret
inc
mov
mov
js
ss
sti
js
jg
mov
iret
mov
xchg
dec
mov
fcmovnu
jmp
aam
xor
sbb
pop
mov
sti
add
out
jg
jl
jae
push
and
add
pop
xor
jo
test
cdq
mov
and
sub
mov
mov
push
and
and
(bad)
aam
call
fnstcw
aas
retf
mov
adc
aam
adc
add
or
mov
imul
add
repz
clc
cmp
inc
dec
push
imul
add
adc
mov
xchg
and
bound
pusha
loop
sub
adc
daa
sub
add
call
jmp
xor
in
sbb
mov
les
pop
sbb
fld
sub
or
mov
jno
aam
inc
ins
inc
xor
pop
ss
push
mov
in
loope
sbb
lods
shl
test
jmp
push
aam
popa
mov
clc
mov
cmp
mov
sbb
xchg
(bad)
sbb
mov
mov
mov
sbb
adc
cld
push
daa
int
outs
sub
push
xor
iret
js
scas
sbb
cmp
cmp
div
pop
push
dec
sbb
es
adc
sbb
fadd
mov
nop
xchg
cmp
sub
dec
or
fbld
fsubr
inc
scas
fld
les
test
push
cld
push
mov
inc
xchg
jne
mov
dec
xchg
pusha
and
xor
iret
mov
pop
xchg
iret
mov
and
addr16
dec
pop
inc
adc
and
pop
imul
adc
or
stos
push
sub
jne
push
jl
sub
ret
or
fwait
sub
xchg
div
retf
add
pop
add
xchg
fs
adc
(bad)
mov
dec
(bad)
adc
mov
les
movs
arpl
jbe
(bad)
mov
(bad)
(bad)
ss
out
in
daa
jae
sbb
and
(bad)
cmp
adc
xchg
pop
xor
cs
outs
or
cld
call
loopne
xor
or
and
xchg
add
cmp
shr
or
ja
jmp
mov
mov
jo
retf
das
mov
and
jb
mov
or
fs
and
pushf
(bad)
repz
repz
xchg
mov
cmp
jae
aas
mov
fidivr
cmp
push
jl
fisub
mov
add
ror
pushf
ja
pop
shl
mov
gs
ss
cdq
lea
mov
dec
movs
xor
inc
add
and
add
add
push
push
or
xchg
ret
xor
out
iret
repz
pop
jl
jnp
iret
repz
xchg
hlt
or
or
or
int3
outs
jae
or
add
sub
or
adc
adc
adc
fadd
push
stos
xchg
(bad)
push
wbinvd
bound
mov
movq
push
and
rol
inc
or
and
pop
inc
cmps
mul
inc
add
xchg
pusha
xlat
add
xor
or
xchg
ficom
popa
push
and
xchg
retf
xor
pop
push
or
jge
adc
hlt
inc
fcomp
sub
fistp
xchg
xchg
xchg
xchg
jl
mov
xchg
loopne
adc
retf
inc
movs
ins
jge
loop
push
in
cmp
repz
fcom
retf
ror
repnz
mov
nop
mov
movs
mov
cmp
in
add
add
sbb
cmp
push
pushf
xchg
lea
inc
lock
jno
arpl
mov
in
lahf
push
lahf
cwde
lahf
mov
lahf
or
xchg
mov
cmp
cmp
pop
sbb
inc
adc
or
cld
aas
loopne
das
das
sub
pushf
cmp
fs
mov
das
fcomp
pusha
sahf
fisub
das
das
pushf
sahf
rcr
push
fdiv
push
int
mov
mov
out
enter
in
in
jl
retf
fcomp
xor
mov
pushf
ins
pushf
sbb
rcr
iret
repz
ins
pop
pop
push
dec
inc
iret
mov
ds
aas
and
and
je
nop
call
xchg
call
test
mov
aad
movs
or
push
(bad)
ds
icebp
jmp
rcl
in
sbb
or
and
fcomp
inc
pop
or
jne
cmps
push
lods
lahf
out
sahf
lahf
cwde
xchg
mov
inc
add
pusha
out
xchg
retf
retf
retf
retf
mov
cwde
inc
cwde
xchg
retf
retf
retf
jo
pushf
cwde
rcr
enter
pushf
inc
push
dec
aas
loopne
cmp
cmp
sub
sbb
jns
mov
push
xchg
clc
xchg
jns
jns
jo
lock
jo
call
jns
xchg
loopne
jo
add
mov
in
(bad)
inc
sahf
out
ror
ret
mov
mov
adc
repnz
push
xchg
test
repnz
xchg
sub
out
fimul
xchg
lea
inc
lock
jno
arpl
mov
jmp
nop
mov
nop
pop
nop
ins
nop
adc
nop
mov
mov
out
cmp
pop
sbb
inc
adc
or
cld
aas
loopne
jns
sub
test
jns
jns
test
mov
mov
jns
jns
(bad)
fmul
cmp
int
mov
mov
test
mov
mov
(bad)
les
mov
mov
mul
sbb
pushw
sahf
out
sahf
ins
pop
pop
push
dec
inc
lahf
pop
adc
aas
and
loopne
das
das
das
das
push
mov
mov
das
das
das
dec
mov
mov
and
sub
aad
movs
or
sar
clc
icebp
jmp
shr
nop
xchg
pop
pop
sbb
or
pusha
mov
mov
dec
pop
cwde
mov
jmp
out
sahf
out
jmp
jmp
das
lahf
mov
adc
das
das
das
das
mov
or
add
xchg
inc
push
dec
aas
cmp
out
xor
and
aas
retf
retf
out
add
and
retf
retf
jo
nop
and
in
clc
or
mov
in
(bad)
adc
cmp
ror
ret
mov
mov
je
adc
sub
xchg
xchg
add
iret
repz
pushf
xchg
lea
jno
cmp
pop
int3
(bad)
xchg
inc
aaa
aas
nop
mov
adc
adc
add
add
push
retf
repz
pop
xor
mov
or
xor
inc
push
inc
mov
call
stos
sub
js
in
in
call
add
out
inc
test
in
inc
jl
xor
dec
dec
push
dec
mov
mov
fdiv
ret
dec
es
or
push
sbb
add
in
inc
fmul
lods
and
pop
stc
enter
sar
and
xchg
retf
aam
rol
(bad)
in
outs
ret
ret
movs
repnz
out
mov
fs
cdq
int3
int3
enter
sbb
mov
xchg
in
enter
push
mov
in
cdq
(bad)
(bad)
rol
and
cmp
pop
push
jns
repz
adc
xor
jb
dec
mov
xchg
mov
mov
or
fdivr
cwde
mov
retf
and
mov
in
out
add
enter
movs
lods
lods
test
xor
or
and
enter
push
xor
or
push
aad
and
enter
sub
pushf
cwde
inc
xor
or
sub
in
and
cld
fdivr
cld
xchg
xchg
nop
and
or
nop
xchg
outs
add
cs
dec
cs
mov
or
das
cmp
retf
and
mov
leave
enter
jo
and
sbb
xor
gs
retf
and
jl
in
xchg
js
xor
nop
iret
dec
mov
in
clc
sti
in
leave
cmp
je
jns
enter
outs
ret
push
nop
and
arpl
xor
in
das
mov
addr16
mov
jg
inc
or
cmp
jbe
ja
out
push
xor
cmp
lock
ret
sbb
add
adc
mov
sar
call
shr
push
iret
pop
in
retf
cmp
lods
not
out
rcl
cmps
adc
iret
lock
mov
shl
jae
or
in
fs
push
sbb
ret
loopne
inc
(bad)
push
mov
enter
test
push
sbb
hlt
jmp
inc
and
add
pop
inc
adc
idiv
mov
dec
enter
or
fldcw
call
daa
adc
mov
adc
mov
inc
rol
cmps
mov
mov
dec
retf
cmps
pusha
adc
and
add
and
movs
add
cmp
and
inc
jge
mov
or
arpl
xchg
pusha
push
ins
or
mov
fiadd
ja
fisubr
je
or
(bad)
sub
cmp
aaa
mov
add
adc
sub
fist
inc
ret
lahf
jo
add
adc
inc
push
add
fcom
push
and
gs
ror
or
pop
push
or
ret
jno
mov
xor
or
push
pop
aas
cmp
push
out
jle
adc
ret
aas
push
add
jle
xor
add
gs
in
add
push
add
mov
test
jg
loopne
dec
fild
pop
popa
dec
jmp
ins
xor
push
ficom
loopne
add
test
call
push
mov
out
jno
sar
jo
push
hlt
push
jno
test
dec
jno
and
mov
dec
mov
or
bound
mov
ja
in
sub
in
push
push
jo
push
push
dec
pushf
ja
pop
or
inc
lock
pop
or
push
add
call
inc
cs
mov
clc
push
jae
imul
fstp
lea
pop
rol
push
fld
push
jl
sbb
jne
cwde
and
rcr
adc
scas
rcr
and
inc
sbb
adc
mov
add
mov
hlt
call
dec
mov
sub
sbb
jnp
pushf
jne
jecxz
push
hlt
je
push
add
shr
scas
mov
clc
xor
cld
loop
or
or
iret
popa
sub
push
repnz
add
xlat
cmp
jne
sub
sbb
xchg
pop
shr
fstp
lea
dec
mov
pop
data16
xor
out
mov
sub
imul
hlt
test
aaa
cs
or
lods
sbb
mov
xchg
xchg
pop
xor
sbb
cmps
stos
je
cwde
je
mov
inc
jnp
in
dec
ins
pop
sahf
mov
imul
fdiv
inc
rcl
call
sbb
aam
(bad)
adc
ins
inc
ret
xchg
mov
les
lahf
push
or
sub
sub
push
fcom
dec
test
ins
sbb
sbb
push
dec
sti
jg
loope
sbb
outs
fdivr
push
cs
je
iret
sub
jl
or
jl
adc
and
or
scas
inc
mov
jne
mov
xor
cmp
daa
and
cmp
adc
inc
jmp
dec
cmp
mov
dec
or
addr16
mov
out
sub
sar
aaa
adc
mov
add
adc
loopne
mov
inc
cmp
pop
leave
test
or
lahf
call
fisub
lea
xor
cmp
adc
sar
and
mov
adc
imul
int3
cmp
inc
nop
fsub
jl
push
cwde
pusha
popf
mov
sbb
das
repnz
push
sbb
repz
or
add
push
dec
enter
add
retf
pop
ins
inc
pop
dec
or
jmp
and
add
add
and
enter
test
dec
enter
es
adc
enter
or
or
xor
hlt
xor
pop
and
enter
clc
xlat
and
and
gs
pusha
mov
adc
jmp
in
test
rol
and
push
sub
add
stc
add
push
push
pop
sbb
mov
dec
cmp
icebp
pusha
or
xchg
pop
inc
add
adc
or
mov
sub
push
push
dec
sbb
inc
add
push
inc
pop
mov
dec
nop
xchg
mov
add
(bad)
cmc
xor
in
sub
pop
rcr
xor
cmp
add
mov
call
fwait
mov
lods
aam
push
out
retf
mov
mov
(bad)
xor
xor
ins
or
cs
or
fldenv
lods
jb
sbb
inc
rol
rcl
xor
adc
fiadd
push
add
mov
adc
lea
sbb
test
adc
(bad)
xchg
xchg
retf
gs
sub
nop
mov
or
mov
loope
outs
pop
dec
shl
push
fsub
or
cmp
popa
sub
cmp
or
dec
push
(bad)
mov
sbb
xchg
mov
lods
or
mov
mov
or
push
out
mov
or
push
xor
push
pusha
push
dec
push
push
test
test
and
sub
push
adc
or
fmul
push
test
add
daa
fdivr
or
add
push
mov
xchg
out
dec
les
xor
clc
std
mov
jb
adc
lods
nop
test
loopne
test
push
lock
gs
sar
rcr
retf
in
push
movs
cwde
cwde
xchg
xchg
adc
scas
loopne
gs
gs
mov
lock
push
mov
fs
push
nop
nop
add
sbb
dec
sub
push
mov
push
pop
adc
mov
in
pop
sbb
inc
dec
add
and
cld
sbb
and
sbb
ss
cld
inc
cs
and
out
inc
dec
test
hlt
movs
mov
loopne
xor
leave
or
gs
dec
mov
bound
xchg
xchg
pop
sub
test
cmp
mov
jl
pop
add
push
movs
test
test
out
sbb
push
loopne
sub
inc
mov
mov
in
mov
and
pop
sub
enter
xchg
push
js
je
or
and
outs
or
movs
mov
loopne
xchg
ja
cmp
cwde
and
and
dec
inc
push
enter
je
xchg
retf
jo
and
je
movs
add
loopne
mov
add
sti
pop
ss
and
enter
loope
and
lods
sti
xchg
dec
in
push
call
sbb
mov
mov
mov
add
aaa
mov
fsubr
mov
(bad)
iret
or
lea
rcl
mov
nop
mov
daa
xor
and
loopne
xchg
sub
pop
sti
dec
inc
cs
pusha
pusha
pop
sub
rcl
sbb
pop
popf
and
fcomp
and
dec
in
or
sub
sub
and
dec
data16
jb
xchg
add
pop
push
or
fs
push
mov
inc
rcr
imul
imul
and
pop
call
cmc
test
sub
mov
cs
pop
mov
cli
push
push
dec
inc
push
aaa
sbb
sbb
add
movs
lea
and
push
xchg
shl
xor
in
cmp
dec
cwde
sub
cli
sbb
inc
xor
push
aaa
sbb
enter
push
xor
push
xchg
mov
pop
mov
or
icebp
mov
push
mov
or
or
push
dec
inc
and
xor
int
inc
and
leave
enter
inc
cmp
fadd
enter
xor
jb
fcom
inc
pop
cdq
adc
stc
push
ss
sub
ror
inc
repnz
stc
cmp
sbb
or
movs
mov
and
fsub
push
out
in
mov
jl
pop
daa
mov
sub
pusha
in
sbb
or
in
cmp
call
dec
cs
inc
cmp
xchg
xchg
sub
mov
stc
sub
daa
and
ja
aaa
jb
cmp
retf
add
adc
and
jae
push
ja
clc
inc
mov
sbb
aam
pop
daa
js
inc
ins
dec
push
sub
mov
clc
and
sbb
push
in
inc
sbb
movs
or
adc
lea
dec
or
or
inc
xor
ja
dec
into
sub
fs
xor
or
sbb
jo
pop
jb
adc
enter
push
inc
loopne
pushf
pop
sub
sub
cmp
dec
cwde
sub
mov
clc
adc
or
add
sbb
adc
mov
push
inc
loopne
daa
or
dec
adc
arpl
pop
mov
dec
push
sub
xchg
and
mov
in
dec
inc
dec
add
loopne
sar
mov
movs
mov
push
hlt
and
mov
sbb
mov
add
dec
push
dec
ds
add
retf
retf
add
lock
sbb
adc
movs
push
mov
jne
not
xor
and
xor
dec
xchg
mov
sbb
sar
mov
int3
hlt
lock
rcl
sbb
sbb
mov
out
and
mov
jo
pop
fsubr
or
daa
ja
sub
shl
in
jmp
enter
loopne
inc
fstp
mov
push
loope
out
dec
repnz
not
inc
jbe
push
push
dec
cwde
sub
pop
and
call
lea
cli
in
adc
push
jne
ins
push
push
outs
adc
push
loopne
out
jb
mov
jb
pop
ret
push
cmc
push
xor
rcr
xor
mov
loopne
fcomp
enter
adc
jb
fcom
push
pop
cdq
adc
cmc
push
pop
cwde
arpl
loopne
pop
dec
hlt
cs
repnz
(bad)
cmc
fcomp
sbb
adc
mov
loope
loopne
pusha
push
out
xchg
dec
in
test
mov
jmp
pop
cs
bnd
rcl
int3
rol
push
add
jo
mov
jb
test
push
pusha
shl
movs
fdivr
popa
cwde
push
sbb
sbb
enter
jb
les
scas
loopne
push
push
popa
mov
mov
push
push
add
hlt
in
fs
cmp
sub
enter
pop
xchg
sar
pop
movs
mov
jbe
push
arpl
push
out
mov
icebp
adc
adc
xchg
hlt
(bad)
pop
push
pop
cdq
data16
nop
addr16
(bad)
lods
adc
push
sub
je
xor
or
mov
add
pop
addr16
sub
sub
stos
jne
dec
pop
movs
dec
cs
imul
out
shr
fs
sbb
inc
push
in
sbb
and
sub
pop
sub
ins
sub
rep
cmp
nop
cmp
sub
and
cmp
mov
loope
and
rcl
repz
xchg
jo
and
dec
cwde
sub
or
mov
pop
jb
sbb
push
outs
loopne
out
nop
xchg
and
dec
in
(bad)
jb
inc
jle
popf
loopne
jb
push
sub
and
xchg
retf
gs
cwde
cwde
xchg
cmp
(bad)
jae
loopne
imul
inc
nop
pop
push
or
es
dec
in
bnd
or
ret
inc
sub
shl
nop
pushf
mov
mov
or
enter
mov
pop
or
jne
jecxz
or
shl
jo
add
xchg
pop
sub
js
cwde
jns
xchg
fs
aam
jb
repnz
test
push
inc
aaa
sbb
rcr
xchg
js
xchg
mov
leave
add
jnp
je
movs
jo
jl
bnd
and
jmp
sub
cmp
ror
jnp
and
loopne
pusha
or
jns
pop
jle
lock
jg
sub
dec
scas
sub
aam
xor
or
js
sub
pop
jb
push
movs
mov
jle
push
out
dec
cld
push
sbb
cmps
and
(bad)
ss
test
(bad)
mov
add
mov
push
mov
data16
sbb
adc
pop
sbb
sbb
ss
int
and
or
xchg
or
push
in
enter
test
sub
dec
shl
cmp
dec
and
adc
cmp
pop
mov
int3
xor
(bad)
xchg
push
dec
pop
das
lods
das
adc
rcl
imul
pusha
push
inc
sar
xchg
movs
jnp
and
push
add
not
xlat
pop
mov
push
cs
pop
xor
xchg
sahf
stos
add
jno
lock
aas
push
mov
inc
mov
add
and
cdq
lock
push
inc
mov
pop
add
mov
imul
dec
outs
inc
sbb
add
pop
rcr
or
nop
mov
adc
adc
dec
mov
fild
xchg
push
sbb
(bad)
hlt
sub
sub
cmp
loopne
add
fcomp
test
ja
mov
adc
pop
mov
neg
sbb
and
add
and
pop
rcl
outs
jno
add
jp
adc
cmp
out
ret
sub
mov
ins
xor
dec
dec
dec
or
add
jbe
(bad)
ror
push
test
inc
pusha
push
jmp
ja
fsub
mov
and
or
cs
imul
cmp
add
fs
cmp
jg
mov
inc
adc
hlt
iret
add
pop
cs
mov
xor
call
add
add
int3
ret
adc
lods
pop
mov
inc
icebp
arpl
ins
mov
sbb
jl
xchg
icebp
fsubr
mov
add
movs
daa
pop
and
dec
mov
nop
fmul
clc
(bad)
sub
cli
add
loop
and
add
adc
jns
push
pop
test
cmp
jmp
inc
cmp
cmp
dec
push
and
enter
in
sbb
loopne
and
leave
in
pusha
hlt
cld
jb
jns
add
or
mov
loop
jmp
test
jle
dec
push
push
cmp
mov
jp
sub
push
jns
in
mov
es
inc
push
and
daa
out
sahf
dec
mov
push
cs
add
dec
jg
pushf
add
lock
rcl
pop
(bad)
xor
enter
hlt
daa
xor
or
in
cmp
ror
aaa
ins
rcr
and
clc
pop
pushf
xor
xor
icebp
adc
mov
mov
sbb
push
inc
repnz
add
sbb
pushf
and
push
adc
push
sub
add
sub
sti
xor
and
or
punpckhbw
push
xor
jnp
fimul
push
pop
repnz
les
ins
sub
push
rcl
inc
and
std
test
aaa
je
inc
or
add
addps
jno
sbb
nop
push
(bad)
aam
jl
or
cmp
inc
jge
or
inc
(bad)
jbe
or
ja
push
jbe
pop
or
xchg
retf
sbb
add
daa
mov
cmp
(bad)
adc
jl
js
js
test
(bad)
or
xchg
retf
(bad)
shl
adc
ret
add
inc
fidivr
push
mov
mov
in
dec
(bad)
push
jge
aam
mov
gs
xchg
pusha
daa
push
jns
xchg
pop
or
test
fcom
push
mov
pop
adc
int3
and
cmp
push
sbb
dec
add
add
adc
sahf
push
mov
jmp
(bad)
leave
push
jns
or
xchg
add
pop
jecxz
lock
mov
mov
loop
mov
sbb
cmps
inc
daa
stc
leave
jmp
lds
pop
add
scas
stos
rcr
js
(bad)
dec
aam
aaa
jnp
adc
mov
loope
and
cmp
cmps
fsubr
ins
mov
rcl
pop
mov
sub
add
in
mov
dec
cmp
add
pop
cmps
xor
add
int3
sahf
push
aam
fmul
mov
movs
mov
mov
cld
cld
imul
fsubr
jo
push
pop
mov
xchg
retf
add
dec
xchg
sahf
dec
je
sbb
cs
loop
mov
xchg
mov
or
leave
mov
or
icebp
sub
sub
jne
test
push
ja
pop
mov
sbb
and
call
add
add
shl
jmp
test
imul
outs
sbb
mul
add
inc
daa
cmp
dec
jo
sahf
lock
jo
push
adc
fiadd
sbb
mov
retf
and
or
xchg
and
mov
pushf
and
lods
adc
cmp
or
add
and
sub
adc
pop
js
or
mov
fst
push
sbb
jmp
jmp
pop
ss
ss
js
movs
and
and
and
fsubr
pop
push
adc
shl
enter
and
fwait
lods
std
nop
jmpw
mov
adc
jb
sub
jns
sbb
sub
jmp
fadd
xor
and
push
xchg
and
adc
test
xchg
adc
dec
mov
pop
adc
jb
inc
and
add
mov
dec
cs
xor
and
and
mov
pop
add
inc
xor
or
cld
pop
or
and
pop
mov
fs
cmps
fisub
dec
dec
fidiv
jne
dec
mov
lahf
int3
ret
inc
and
in
mov
das
inc
add
enter
neg
fdiv
das
xor
cmp
sub
aad
into
out
cmp
xor
inc
aaa
repnz
push
jmp
or
cwde
hlt
movs
cmp
loope
and
or
jecxz
xlat
jl
cmp
in
dec
xor
test
aad
rol
movs
adc
add
push
sbb
cs
push
outs
xor
mov
popa
inc
dec
pushf
imul
neg
pop
mov
and
pop
fimul
sbb
or
rol
push
fdivr
add
sub
add
cmp
push
mov
daa
xchg
push
outs
mov
lock
jge
in
popa
ins
test
xchg
test
movs
pop
jmp
xor
mov
enter
pushf
pop
loop
adc
push
pop
push
cmp
xor
sub
cdq
jb
aam
xor
(bad)
out
sbb
cwde
aaa
pop
(bad)
or
xor
jns
jmp
inc
mov
jmp
add
or
sbb
je
cmp
add
xor
pop
sbb
lock
xlat
mov
cld
in
pop
ins
mov
cmp
adc
stos
arpl
mov
xor
push
je
push
aad
inc
or
push
lods
mov
aad
out
inc
cs
test
js
popa
sub
aaa
jmp
rcl
outs
add
sahf
pop
das
cld
std
aad
xchg
pop
push
call
aad
js
test
adc
pop
pop
xchg
xor
and
test
sub
aaa
lods
es
cmp
pop
cmp
leave
mov
adc
gs
cmp
add
add
jp
or
jno
mov
in
aaa
lea
or
sub
xchg
retf
ja
outs
lock
pop
push
pop
imul
pop
push
sub
dec
call
loope
fldz
int3
sub
cs
push
leave
rcr
add
sbb
(bad)
cmp
xor
mov
jmp
nop
add
or
ret
inc
movs
dec
sbb
add
mov
adc
aas
and
push
mov
pop
data16
das
jae
or
sti
imul
loop
mov
jnp
pop
mov
push
loopne
hlt
mov
fistp
pop
shl
(bad)
imul
das
push
dec
dec
jmp
stos
retf
adc
push
data16
loopne
inc
movs
loope
es
or
add
xchg
jae
test
mov
in
push
push
push
enter
loop
test
out
push
fisttp
rol
pop
pop
push
mov
scas
push
shr
js
ss
push
push
les
aam
mov
add
pop
jne
push
out
mov
adc
sbb
sti
sub
js
std
test
cmp
sub
imul
movs
push
or
and
out
mov
cmp
jno
sbb
sbb
rol
jmp
pop
cmp
mov
mov
shl
pop
lods
cwde
ror
jo
inc
add
pushf
loopne
loope
inc
xchg
adc
ret
mov
out
jns
and
nop
outs
cmp
in
pusha
enter
pop
and
mov
aad
jae
xor
cmp
sbb
mov
lea
wrmsr
mov
rol
push
sub
cs
xchg
cld
jae
pop
dec
in
push
lea
jae
stos
scas
mov
test
rcl
sar
je
xchg
dec
push
shr
stos
sar
xchg
dec
xchg
sub
inc
enter
adc
out
nop
sub
xor
sub
adc
or
iret
xchg
xchg
loop
mov
jns
ror
fld
stos
cmp
shl
dec
test
adc
adc
dec
mov
dec
push
in
bound
xchg
pop
test
js
pop
js
sbb
jo
imul
lahf
or
adc
jno
and
cmp
push
pop
mov
push
mov
or
push
loop
dec
jno
push
popf
pop
jb
push
mov
rcl
(bad)
arpl
mov
jb
adc
jb
shl
nop
mov
and
xchg
push
in
shl
sub
pusha
add
cmp
xor
jb
mov
lahf
sbb
xlat
jno
mov
cmp
push
loope
add
jo
mov
in
sub
and
inc
pop
lods
mov
adc
cmp
mov
xchg
mov
push
leave
sbb
xor
adc
pop
pop
mov
loope
mov
cli
sbb
sbb
sbb
fiadd
out
jle
adc
xchg
adc
adc
aad
xchg
jae
sti
add
pop
or
or
int3
xor
loop
stos
fcom
enter
xchg
mov
cmp
dec
out
inc
and
cmp
mov
push
push
mov
sbb
or
push
and
cmp
add
pop
js
popf
inc
add
xchg
sbb
and
jp
test
xor
push
jne
test
retf
pop
push
mov
mov
inc
cmp
dec
cmps
mov
pusha
sub
sub
pusha
xchg
pop
add
jl
stos
imul
ins
pushf
enter
or
add
rcl
add
or
adc
mov
mov
or
and
push
pop
stc
test
inc
fdivr
pop
imul
xor
fld
and
mov
cmp
jo
enter
popa
jo
cmp
dec
ins
ins
push
test
aaa
adc
cdq
push
js
or
(bad)
adc
sbb
in
int
pop
popa
pop
pop
or
ins
xchg
or
test
ins
xchg
inc
cs
or
loopne
ret
cmp
push
dec
and
or
rcr
sbb
pop
adc
rcr
adc
sbb
dec
sbb
jo
call
in
popf
dec
dec
adc
cmp
sub
mov
ss
popf
mov
pop
nop
jmp
sbb
jmp
inc
outs
out
mov
int3
sbb
cwde
jbe
mov
lods
dec
ins
inc
pop
scas
cmps
pop
xor
sbb
xor
push
jge
adc
je
dec
jmp
lock
push
sub
add
mov
outs
push
xor
sub
jl
in
std
xor
and
shl
imul
mov
adc
push
dec
push
xor
(bad)
movs
pop
xchg
inc
xor
ret
and
repnz
inc
add
push
mov
xor
fwait
or
nop
push
arpl
sbb
ins
nop
xchg
cmp
sbb
cdq
in
je
jo
inc
jb
add
out
stos
xor
sub
or
mov
cwde
bound
jbe
ss
pop
pop
ins
jl
sub
sub
movs
mov
aas
cmp
in
imul
ins
inc
adc
ins
enter
psrld
imul
pop
loop
hlt
ins
das
push
in
sbb
adc
imul
mov
movs
push
sbb
cld
dec
movs
jb
or
adc
sbb
sbb
adc
enter
imul
and
dec
pop
or
scas
into
adc
mov
xor
out
add
inc
pushw
leave
or
adc
(bad)
push
add
cmp
movs
daa
test
mov
push
sbb
dec
xchg
ret
xor
adc
enter
add
adc
push
adc
enter
jo
add
cwde
or
sbb
cwde
icebp
xor
mov
xor
xor
xchg
sahf
inc
(bad)
data16
add
rsqrtps
or
icebp
pusha
fwait
add
or
adc
cld
shl
ret
xor
ss
adc
sbb
popa
sbb
pop
loope
and
push
imul
movs
xor
jne
cmp
xchg
loope
jnp
or
in
xchg
sbb
test
push
popa
push
push
add
mov
mov
push
mov
jo
add
test
push
sbb
inc
or
push
neg
push
push
push
adc
in
pop
(bad)
das
ret
push
les
push
je
pop
lods
pop
pop
xor
cmp
daa
rol
push
pop
xchg
dec
bsf
xchg
inc
inc
or
sbb
sub
dec
mov
fwait
adc
add
cmp
push
test
sbb
adc
push
(bad)
jmp
shr
dec
icebp
pop
test
inc
pop
jb
clc
nop
or
test
arpl
inc
out
xlat
or
cmp
push
and
or
scas
inc
js
cmc
aam
push
push
pop
mov
and
mov
outs
jecxz
push
dec
stc
test
jo
and
sbb
or
movs
xor
mov
mov
movs
test
mov
(bad)
mov
dec
mov
inc
movs
inc
and
imul
pop
arpl
imul
in
enter
mov
sbb
push
fst
add
pop
add
test
push
mov
nop
pushf
fsub
jb
cmp
addr16
mov
cmp
fmul
add
je
cdq
pop
add
push
or
and
add
repnz
jns
and
leave
mov
pop
and
jbe
sbb
scas
ins
ins
fidiv
movs
push
cmp
jl
mov
and
repnz
xor
fstp
loopne
dec
and
dec
inc
je
clc
gs
inc
dec
aam
inc
and
pop
data16
xchg
dec
cwde
mov
jmp
push
inc
in
sbb
xchg
xchg
xchg
jae
arpl
add
arpl
test
adc
clc
and
sub
and
in
pop
sbb
imul
ins
sub
shl
cld
gs
pop
nop
loopne
nop
mov
jno
xor
mov
lar
sahf
in
pop
repnz
sbb
mov
dec
mov
movs
push
dec
add
adc
adc
push
repnz
adc
test
pop
push
test
jne
lahf
mov
or
jns
push
test
std
or
mov
or
test
or
cdq
push
pop
loopne
add
sbb
inc
dec
pop
xor
push
mov
and
rol
sub
mov
repz
je
and
and
add
(bad)
enter
stc
xchg
dec
das
pusha
push
sbb
adc
add
pusha
or
and
cmps
adc
jl
sub
jo
pop
or
cmp
adc
test
je
gs
cmp
inc
sub
int3
or
call
pop
imul
jae
outs
dec
nop
daa
xchg
ror
gs
cli
les
push
call
inc
dec
or
mov
adc
mov
push
lds
pushf
repnz
dec
jnp
pop
cmps
and
push
sbb
mov
dec
in
jns
das
in
sub
mov
and
test
dec
jmp
sbb
jmp
ds
daa
stc
push
mov
jmp
xor
lods
cdq
in
mov
jl
cmp
sbb
dec
ds
or
sbb
cmp
clc
aad
mov
call
out
cmp
mov
outs
sahf
out
sahf
cs
cmp
dec
je
sahf
out
or
in
push
nop
dec
add
add
sahf
pop
mov
add
imul
sub
add
cmp
push
in
mov
push
adc
cmps
call
sbb
aas
inc
sar
retf
cli
arpl
adc
or
dec
pop
inc
pop
cmp
pusha
jl
ficomp
add
daa
loope
xchg
add
mov
lgdtd
xor
pusha
xor
and
test
rol
inc
or
popa
sub
outs
jg
fnsave
in
xchg
push
out
pop
pop
mov
pop
in
sbb
out
ror
add
bound
add
inc
xchg
and
xchg
sub
cmp
outs
test
loopne
mov
push
leave
push
lock
mov
dec
push
adc
repnz
aam
sbb
loop
pop
jecxz
mov
push
pop
lods
movs
xchg
pop
sahf
int
xchg
xchg
add
mov
aam
fs
xchg
mov
cdq
inc
lods
je
mov
loopne
jb
add
jmp
or
in
call
inc
repz
repnz
movs
shr
and
psrad
pop
mov
std
and
xchg
inc
sar
cld
cld
and
dec
ins
and
and
or
xchg
push
add
mov
(bad)
push
and
dec
or
movs
fwait
leave
xchg
or
push
mov
dec
or
fdivr
into
pop
ficom
mov
mov
sub
and
cdq
sbb
or
cmp
outs
or
inc
xchg
das
das
fild
popa
add
sti
push
push
loopne
inc
and
sti
je
lods
loopne
sbb
stos
mov
xchg
in
pusha
xchg
(bad)
jnp
mov
push
loope
aaa
inc
dec
movs
sbb
pushf
xchg
mov
or
add
add
sub
xchg
and
lds
push
mov
std
add
xor
cld
pop
test
sbb
inc
popa
leave
in
cld
repz
push
lea
push
dec
imul
mov
pushf
mov
or
mov
aaa
pop
sbb
je
mov
pop
popf
sbb
mov
lods
in
popa
lock
push
in
sbb
xchg
hlt
test
inc
or
adc
ds
xchg
test
adc
das
push
lahf
imul
retf
ja
popa
(bad)
adc
in
mov
adc
inc
sbb
dec
rcr
push
push
pushf
lods
dec
push
nop
sub
lea
adc
test
aam
adc
jb
xor
xchg
je
test
enter
sbb
nop
push
add
jmp
cmps
add
fs
sub
inc
ins
scas
add
or
(bad)
pop
adc
leave
sub
cld
add
loope
pop
mov
cwde
xor
(bad)
rcl
add
loope
mov
ja
add
adc
pop
or
adc
cmps
aad
or
xchg
cld
mov
push
dec
pop
test
bound
xlat
and
pop
and
or
mov
in
and
or
retf
adc
data16
pop
out
ins
clc
or
dec
into
seta
inc
jmp
inc
cmp
or
(bad)
mov
cmp
pop
or
scas
dec
leave
cmp
or
lea
int
jb
cmps
out
adc
and
mov
dec
push
mov
push
dec
jl
lods
sub
cld
(bad)
mov
dec
arpl
adc
add
inc
lods
xor
shl
xchg
and
loopne
fdivr
pop
and
mov
pop
xor
add
test
daa
push
fsubr
add
fist
dec
shr
xor
add
pushf
push
cdq
shl
pusha
pusha
jnp
rcr
add
xor
sti
dec
push
cld
mov
cld
clc
adc
jmp
pop
jmp
xchg
add
mov
hlt
mov
movs
mov
cwde
lock
pusha
retf
out
push
in
pushf
(bad)
in
(bad)
call
add
call
push
in
loopne
and
sub
jb
jo
mov
ret
fsubr
lahf
inc
add
xchg
enter
jo
xchg
or
aam
and
aam
cmp
add
xchg
and
or
shr
push
pop
inc
adc
sbb
push
dec
ret
sbb
adc
mov
scas
sub
or
sbb
sar
push
cmp
daa
stc
push
and
movzx
inc
in
jmp
jnp
and
jmp
out
push
mov
xor
test
div
out
add
and
inc
fucomip
rcr
and
add
push
dec
adc
add
xchg
aam
cmp
aad
adc
jno
fsubrp
dec
mov
dec
ror
pop
add
das
add
inc
inc
jmp
loopne
add
adc
mov
pop
or
arpl
out
sbb
add
in
jne
push
rol
cmp
mov
arpl
psubsb
cmp
or
dec
dec
and
or
js
pop
mov
push
retf
sub
add
jmp
push
push
xchg
push
push
or
push
aad
pop
sub
inc
bound
fwait
out
sub
mov
imul
xor
sbb
pop
shl
xchg
pop
adc
sub
hlt
icebp
or
mov
dec
push
rcl
push
jl
hlt
push
rcr
push
push
pop
and
les
movs
je
jns
sbb
mov
xor
cmp
jmp
rol
(bad)
inc
pop
mov
mov
pop
mov
mov
leave
xchg
add
les
ds
lods
hlt
sub
and
sub
or
lock
push
loope
cmp
push
ja
retf
mov
dec
fwait
mov
into
int3
add
add
fild
cmp
or
push
add
pop
adc
sbb
push
ficom
sub
cwde
stos
shl
adc
int3
pop
sbb
jb
cwde
xor
test
mov
mov
push
inc
scas
sub
xchg
sub
mov
xchg
xchg
fcom
jmp
sub
shl
fwait
jmp
in
xor
push
fsubr
lods
or
test
test
pop
cmps
fnsave
adc
push
ret
add
pop
push
mov
xlat
xchg
test
test
sub
in
xor
inc
ret
leave
dec
dec
pop
cmp
sub
call
gs
lea
je
push
movs
add
sbb
cs
push
push
cmp
aad
cwde
cmc
add
sbb
jns
mov
nop
nop
nop
jl
nop
mov
dec
test
mov
ror
mov
or
mov
cwde
icebp
out
jmp
xchg
xchg
mov
cmps
or
mov
jmp
dec
or
scas
xlat
pushf
pushf
lea
add
sub
popa
movs
jmp
sub
mov
xchg
mov
pop
loopne
push
cmp
test
inc
xchg
imul
xchg
jbe
sub
dec
or
aad
push
cmp
scas
cmps
mov
movs
test
add
and
pop
mov
test
xchg
push
xchg
jecxz
adc
jge
push
aam
xor
pop
and
leave
inc
jl
repnz
pop
dec
and
aam
dec
adc
xor
movs
pop
jb
pop
test
dec
rol
push
fdiv
sbb
sahf
sar
or
xchg
jbe
dec
pop
mov
into
push
into
inc
add
dec
pop
xor
test
aam
and
mov
jns
mov
out
pop
arpl
mov
les
jl
aas
push
sbb
jge
(bad)
in
dec
xchg
cld
mov
or
mov
push
ja
add
adc
fidiv
jae
test
mov
add
adc
jnp
or
jl
das
adc
mov
or
in
sbb
sub
(bad)
mov
jb
nop
(bad)
(bad)
inc
adc
shl
xchg
jb
sub
sbb
popf
frstor
inc
sbb
das
ja
in
mov
ss
adc
pusha
pop
jne
sub
xor
sbb
sbb
or
sbb
call
dec
out
cld
sbb
mov
mov
push
mov
lds
adc
add
retf
shr
pop
jne
and
dec
scas
jo
cld
cwde
not
mov
sbb
data16
into
xchg
adc
cli
retf
adc
stos
les
adc
xor
sbb
mov
cmp
addr16
pop
xor
and
(bad)
icebp
dec
add
add
pop
or
mov
mov
cs
loope
add
pop
fcmovu
inc
loope
or
cmc
jno
inc
pushf
icebp
fisttp
cs
xchg
xchg
or
sub
or
push
jp
mov
(bad)
in
ja
push
mov
loopne
adc
push
adc
lods
ja
movs
mov
imul
xor
adc
rol
inc
sbb
inc
and
int
mov
add
and
cwde
mov
lods
xchg
add
inc
jl
in
jecxz
not
and
adc
adc
cld
dec
fistp
add
(bad)
mov
jge
dec
inc
sub
add
pop
inc
inc
jbe
shl
cmp
mov
cmps
push
xor
dec
stos
jl
mov
inc
lock
jg
ss
clc
imul
push
in
test
adc
push
les
cmp
test
sar
jne
cmp
jo
push
sub
nop
movs
cli
jns
addr16
stc
jle
test
push
outs
inc
es
sbb
(bad)
sbb
outs
and
cmp
mov
pushf
cmp
mov
mov
fiadd
mov
add
iret
in
test
and
push
adc
xchg
ins
ret
inc
lods
ja
cld
cwde
or
sub
xlat
pop
sete
aaa
add
imul
adc
push
pop
fabs
mov
pop
inc
dec
pop
pop
mov
push
jns
sti
or
fmul
dec
mov
add
mov
cmp
mov
stos
mov
xchg
outs
pop
push
ins
enter
add
xor
arpl
int3
pop
popf
add
aam
xchg
es
sbb
push
sbb
mov
in
fs
or
test
outs
rol
pusha
sbb
cmps
push
mov
push
push
sbb
shl
xor
test
test
pop
push
mov
aas
adc
jge
add
adc
cmps
in
xchg
add
and
cmp
jg
lds
cmp
fucomp
mov
mov
add
jg
push
ror
add
imul
mov
test
jno
je
add
inc
adc
or
loop
dec
cld
adc
adc
inc
mov
int
pushf
test
mov
loopne
pop
pushf
push
sub
sub
and
mov
dec
fiadd
or
out
cmp
add
lock
add
adc
cmp
jg
push
sub
add
add
and
pop
rdpmc
inc
repz
ins
and
push
and
stc
xchg
cmp
cdq
xchg
push
xchg
lock
cmp
mov
adc
sub
or
xchg
sbb
(bad)
adc
or
jmp
or
test
(bad)
jmp
or
add
leave
pop
outs
push
xchg
(bad)
push
je
popa
dec
push
test
inc
or
jne
(bad)
pop
xchg
adc
xor
jne
imul
mov
xchg
(bad)
nop
jle
xor
pop
and
fdiv
int3
inc
ja
xchg
aam
inc
lahf
and
sbb
mov
mov
inc
add
and
dec
add
push
jge
mov
sbb
jmp
sub
mul
adc
sti
mov
jmp
movs
mov
dec
or
mov
xchg
mov
cwde
jl
xchg
adc
jnp
dec
mov
imul
adc
call
popf
sbb
mov
dec
rcl
add
mov
jb
inc
push
mov
mov
lods
xchg
adc
mov
add
or
fisttp
cmp
push
and
xor
xchg
cmp
cmovp
es
jnp
jg
or
push
das
inc
sub
sbb
mov
pop
mov
adc
popf
cmp
push
add
loopne
and
retf
add
ds
gs
xor
or
add
stos
sub
sub
add
push
daa
add
dec
mov
scas
aaa
pop
fcom
out
dec
dec
daa
ja
push
fwait
pop
aaa
loopne
inc
in
inc
dec
sub
pop
add
daa
jne
sub
and
sub
xchg
jnp
adc
sbb
cld
add
or
mov
cmp
daa
sbb
call
sub
or
test
or
aas
cmp
or
adc
mov
add
jecxz
push
add
pop
or
cmc
jge
lea
xor
lds
add
jecxz
adc
scas
aas
jns
push
adc
lods
dec
aas
stos
push
add
pop
aas
add
aas
adc
aas
sub
inc
lahf
(bad)
or
cmp
lea
movs
or
sbb
cmp
cmp
dec
jmp
mov
add
or
cmp
aaa
jbe
and
fs
clc
cmp
jle
enter
ins
dec
out
inc
hlt
xchg
movs
xor
mov
mov
adc
loopne
aad
pop
push
push
push
mov
movs
push
test
sar
movs
daa
add
xchg
inc
pop
cmp
push
mov
sub
adc
(bad)
add
arpl
pop
ja
mov
mov
mov
dec
pop
push
pop
ret
pop
and
xor
sbb
cmp
sub
cmp
adc
or
add
adc
sbb
icebp
xor
lock
xchg
lods
mov
sbb
(bad)
push
push
add
loope
inc
sub
(bad)
nop
leave
push
push
add
je
jo
pop
add
jle
xchg
cmps
dec
xchg
nop
xchg
add
cld
cmc
mul
inc
nop
test
cwde
push
fsub
popf
adc
ins
and
pop
cld
inc
push
or
stc
aaa
hlt
int3
push
rol
sub
jno
rcr
fisttp
push
dec
and
and
mov
test
icebp
adc
sbb
inc
mov
push
popa
neg
and
sub
inc
cwde
mov
rcr
mov
sub
ds
jl
mov
out
ins
adc
adc
lahf
jae
dec
test
inc
push
mov
inc
adc
in
mov
sbb
inc
ds
test
add
push
push
cmc
dec
xor
mov
test
not
inc
fmul
pop
sar
mov
fiadd
dec
cs
push
adc
ror
dec
add
fist
cwde
dec
dec
and
add
rcr
or
(bad)
test
inc
sar
push
jmp
adc
add
test
add
mov
xchg
je
scas
test
mov
aad
imul
jmp
gs
adc
push
ins
jmp
out
xchg
add
pop
mov
add
inc
mov
les
jmp
mov
add
shl
and
clc
sub
pop
or
pop
dec
repnz
sub
push
add
in
arpl
icebp
ins
inc
push
clc
scas
add
push
aam
mov
inc
lock
repz
pop
pop
mov
popa
lods
xchg
sbb
adc
xor
mov
jg
jo
je
repz
imul
mov
popf
scas
retf
push
retf
mov
pop
jmp
leave
adc
sub
in
(bad)
es
or
ins
sub
leave
outs
jge
aas
add
pop
pop
inc
lods
push
cs
mov
and
pop
add
loop
adc
push
mov
xchg
mov
rol
lock
and
add
test
mov
pop
or
(bad)
in
pop
jns
lds
in
sbb
clc
sbb
xchg
rcl
mov
add
push
gs
adc
call
or
push
in
or
or
int
popa
mov
push
imul
lods
pop
cs
pusha
or
adc
jns
mov
push
push
movs
fwait
lock
adc
sub
push
dec
and
sub
aam
shr
aas
adc
push
push
sar
(bad)
push
xchg
mov
jnp
mov
paddsb
or
lods
shl
and
mov
sub
ds
jbe
cmp
dec
sub
jno
nop
mov
push
and
xor
jo
fst
mov
mov
add
inc
shl
ret
mov
dec
test
bound
pop
jo
scas
add
or
fcom
xchg
or
pop
push
xor
pop
mov
mov
inc
mov
je
or
es
ret
cmp
popa
enter
sbb
and
icebp
rol
loopne
imul
xchg
lock
push
inc
adc
adc
add
lea
adc
or
and
push
push
imul
mov
xchg
xchg
and
mov
lods
cmp
sub
fdivr
pop
fwait
lods
mov
dec
sbb
lods
xchg
and
out
leave
add
aaa
xor
daa
cmps
fadd
or
push
movs
xchg
cmp
pop
jnp
and
xor
ror
push
outs
add
call
pop
cdq
inc
adc
sub
pop
add
sbb
add
cwde
into
mov
cmp
dec
push
jns
loopne
or
sbb
and
adc
mov
call
pop
jae
and
xchg
push
adc
cwde
mov
add
aaa
adc
(bad)
jge
mov
je
or
je
jmp
pusha
and
sub
aas
adc
jecxz
addr16
ins
fs
mov
sub
std
or
sub
daa
movs
push
sub
in
add
and
pusha
dec
xchg
gs
aas
dec
push
pop
sar
inc
les
xchg
clc
push
ret
mov
mov
jo
pop
add
or
loope
push
rcr
sar
pop
dec
jnp
cmc
push
test
jp
mov
addr16
and
xchg
dec
add
mov
mov
inc
sbb
lds
add
bound
or
add
(bad)
add
retf
(bad)
xor
xor
adc
mov
das
shl
jae
cmps
adc
mov
popa
or
push
jmp
loop
dec
lods
lods
mov
jb
loop
push
out
ins
adc
leave
dec
inc
add
push
inc
dec
mov
sub
jg
sar
cdq
clc
mov
lods
nop
push
xor
add
mov
jo
dec
jg
add
popf
add
jbe
inc
add
mov
ins
push
cli
push
fiadd
neg
xchg
dec
cmp
in
in
pop
dec
xor
or
movs
mov
retf
inc
test
mov
mov
inc
sub
fild
adc
adc
mov
lods
adc
loopne
rcr
js
ss
cmps
sbb
mov
xchg
test
jno
push
and
sub
retf
adc
rcr
scas
push
xchg
lds
movs
add
es
fimul
sbb
pusha
fld
adc
pop
or
jb
pop
jo
pop
cs
fwait
cli
mov
and
push
push
test
enter
inc
mov
fisttp
cmp
retf
retf
lea
inc
dec
sbb
enter
cmp
dec
retf
push
fwait
jle
xor
pop
push
jns
xor
enter
sub
or
fisub
cld
push
jmp
loopne
lods
push
das
push
lds
jnp
xchg
test
push
leave
mov
or
pop
add
xor
pushf
and
jns
adc
xchg
lock
pop
xchg
inc
mov
inc
cmps
lock
adc
push
movs
(bad)
xor
adc
dec
imul
in
and
cmp
cmp
xchg
pushf
icebp
dec
mov
(bad)
adc
je
cld
lock
enter
and
cwde
cdq
rcr
das
push
stos
adc
or
loopne
mov
xor
mov
adc
pop
rcl
push
daa
cmp
sbb
inc
or
cmp
nop
fmul
ret
shr
xchg
test
sbb
sbb
xchg
push
jne
in
in
sub
xchg
mov
ret
lods
mov
mov
mov
xchg
or
mov
inc
sbb
mov
mov
jmp
xchg
in
shl
xor
daa
push
mov
xor
dec
or
leave
aam
add
adc
jle
mov
ret
xor
dec
rcr
inc
add
push
mov
mov
mov
cld
push
push
mov
in
adc
add
dec
cs
rcl
sbb
shl
pavgw
mov
mov
add
lock
dec
repz
sbb
sub
xchg
(bad)
aad
inc
mov
sbb
data16
mov
cmp
ret
inc
fcomip
xchg
xchg
sahf
inc
es
mov
sub
adc
add
mov
adc
ffreep
popa
push
cmp
pushf
cwde
shr
add
sub
ror
pop
inc
mov
add
jle
cmp
inc
or
shr
mov
ds
cdq
mov
xchg
jmp
ret
dec
cmp
sbb
in
push
xchg
hlt
cmp
stc
das
je
aas
pop
jo
push
adc
add
loopne
mov
dec
sbb
xor
xchg
dec
jl
loop
push
adc
inc
(bad)
dec
jecxz
jns
repz
sub
cmp
add
outs
or
mov
sbb
fxch
sub
mov
push
mov
lahf
lea
or
dec
pop
mov
stc
lods
lods
test
sub
fst
or
inc
mov
or
das
or
jo
adc
jp
or
push
inc
test
cmps
in
fwait
dec
pusha
and
add
and
sub
dec
int
imul
mov
imul
out
pop
int
or
adc
adc
add
xchg
sbb
sub
test
rol
test
aam
test
mov
jb
dec
xchg
xchg
nop
add
enter
xchg
hlt
clc
mov
jb
mov
test
xor
cvtdq2ps
nop
adc
loopne
pop
test
adc
aam
(bad)
ja
sub
push
and
add
and
push
sub
lea
mov
das
adc
movs
sbb
sub
ror
js
push
and
jno
add
lahf
cwde
inc
push
push
mov
inc
pop
stc
ja
add
and
mov
and
shl
aas
mov
test
xchg
or
cmp
xchg
in
adc
push
in
or
pop
inc
cmps
bound
push
xchg
jae
mov
xor
repz
fxch
(bad)
jmp
into
dec
xor
mov
ins
jno
and
inc
lods
push
cld
mov
jl
(bad)
jmp
cdq
sub
push
adc
clc
dec
jmp
movs
fs
dec
cdq
xchg
or
(bad)
pop
mov
xchg
sbb
jg
loopne
ret
das
in
das
adc
mov
imul
mov
lock
arpl
mov
lock
pop
add
push
xchg
adc
pop
jae
pop
push
mov
cmp
mov
arpl
push
xchg
aaa
push
cli
cmps
add
fadd
pop
mov
pop
xchg
push
lds
and
inc
test
mov
or
out
and
or
cdq
jnp
xchg
add
popa
out
sbb
lock
pop
mov
dec
ja
ins
cmps
adc
and
mov
lea
ret
cmp
add
cmc
push
adc
clc
aaa
aaa
push
or
scas
in
mov
sbb
retf
sbb
clc
dec
test
inc
popa
inc
in
adc
stos
or
adc
pop
mov
popf
call
mov
inc
in
xor
inc
adc
sbb
lock
inc
gs
and
mov
in
cs
push
and
pop
add
and
inc
inc
xchg
sub
add
sub
jns
add
xor
and
sub
ror
in
fmul
push
ret
pop
jb
inc
into
or
fcom
jno
icebp
pop
add
add
les
outs
enter
adc
cmp
fadd
sbb
mov
and
cmp
and
xor
loopne
mov
mov
mov
stc
jl
(bad)
xchg
cld
xchg
clc
sub
jne
add
hlt
add
std
mov
push
xchg
and
cmp
in
pop
in
push
addr16
in
aam
push
cmps
inc
daa
mov
sbb
push
mov
fsub
pop
aad
cmp
push
dec
push
dec
pop
and
xchg
pop
in
xchg
add
arpl
dec
cs
mov
add
mov
mov
lods
fs
mov
mov
pop
retf
push
and
xor
dec
int3
je
je
jmp
(bad)
pushaw
leave
mov
test
dec
adc
daa
cdq
nop
mov
mov
pusha
int
aad
push
fisttp
test
std
adc
push
mov
jne
sub
adc
mov
imul
test
test
test
std
inc
ret
xchg
push
jb
test
cdq
movs
sub
push
ja
and
das
imul
cdq
or
jo
inc
mov
pop
repnz
pop
sahf
sub
nop
add
call
lds
or
lods
in
sbb
lods
pop
loop
adc
mov
aas
push
jge
lock
shl
or
cmp
cdq
loope
test
jl
mov
jg
cmp
test
and
sbb
retf
test
je
add
and
pusha
jb
and
call
scas
xchg
sbb
rcr
add
lods
push
inc
shr
xor
in
enter
push
sub
add
nop
or
loop
nop
lods
and
and
lock
or
ret
out
repz
inc
pop
je
mov
xor
or
rcr
xor
cmp
jne
inc
add
push
inc
sub
add
adc
jb
call
and
sub
xor
inc
mov
pop
mov
movs
lahf
lea
or
add
add
or
pop
cmp
mov
sub
mov
inc
push
dec
in
sbb
repnz
pop
mov
or
popa
xor
shl
lock
lods
pop
xchg
adc
xor
pop
lods
shl
sbb
shl
mov
push
jmp
sub
add
and
jmp
mov
push
ds
test
cwde
sbb
pop
in
retf
jo
enter
or
sub
push
addr16
in
push
dec
out
lea
mov
xor
lds
add
dec
fimul
mov
(bad)
cwde
mov
fs
or
jbe
jmp
sbb
and
sub
mov
sub
sub
mov
aas
push
add
pop
mov
inc
and
(bad)
mov
xor
dec
js
nop
data16
pop
pop
add
pop
rol
loopne
sbb
adc
and
add
test
mov
sub
aam
jl
bound
push
sbb
cmps
fst
fwait
add
nop
out
dec
in
les
or
and
(bad)
fimul
dec
push
jg
mov
push
sub
push
jbe
push
movs
cmp
pop
inc
popa
cmp
adc
movs
and
lods
gs
sbb
and
test
shr
arpl
aam
gs
hlt
push
add
inc
frstor
shl
pop
cmps
push
xor
xor
add
jg
outs
or
dec
ins
inc
(bad)
cmp
adc
pop
cmp
jae
mov
test
pop
xchg
fistp
mov
push
ret
xchg
loop
dec
js
ror
cmp
inc
push
add
sub
dec
call
sahf
(bad)
inc
loopne
xchg
cmps
or
repz
xor
cmp
test
push
inc
cmp
adc
(bad)
mov
bound
xchg
inc
inc
add
popa
xchg
imul
test
cld
mov
jbe
cmps
lock
cmps
xor
mov
ins
mov
jle
adc
and
pushf
inc
jl
or
mov
nop
popa
xor
mov
ds
loopne
add
push
or
and
push
cmp
clc
das
inc
pusha
lock
jge
adc
cmp
and
pop
imul
test
sahf
inc
push
retf
(bad)
push
ret
sub
inc
fwait
pop
or
shl
les
clc
rol
int
ret
les
aad
xchg
sahf
loopne
repnz
nop
pop
(bad)
sbb
out
xor
pop
inc
out
and
mov
ret
sbb
pop
or
push
call
aas
dec
les
das
call
add
test
mov
scas
or
mov
lods
mov
test
adc
cmp
cmp
cmp
sub
mul
push
nop
inc
hlt
hlt
sub
sub
push
xlat
iret
(bad)
movs
pop
nop
and
cmps
loop
fist
inc
push
(bad)
xchg
sbb
ins
imul
enter
sahf
loopne
mov
pusha
leave
je
push
cmp
push
je
jle
or
push
jp
add
jb
icebp
mov
mov
(bad)
cmps
pop
jo
add
push
(bad)
fstp
adc
inc
lea
cdq
es
aam
lahf
or
aas
movs
sbb
push
adc
jmp
dec
adc
inc
xchg
push
pop
xchg
or
mov
arpl
push
sbb
fsub
dec
or
movs
sub
inc
js
dec
adc
fcomp
or
rol
xor
pop
enter
cmp
pop
add
dec
movs
dec
pop
ror
jb
popf
cmp
mov
dec
sbb
pop
leave
fs
enter
pushf
mov
dec
es
cmps
les
cmps
aam
xchg
test
cdq
or
repz
lds
xlat
cmp
push
mov
fdivr
aam
adc
repnz
jg
repz
push
mov
or
add
ret
sbb
add
sbb
push
lahf
and
and
enter
add
push
test
pop
clc
mov
(bad)
cdq
xor
hlt
shr
call
add
jno
add
push
xchg
addr16
xchg
push
cmp
or
adc
cmps
lods
je
shl
lock
lea
dec
jecxz
inc
fistp
or
pop
test
xor
or
(bad)
cmp
scas
mov
cmp
adc
push
cmp
inc
ss
sub
adc
or
mov
mov
fldpi
and
add
cmovb
pop
enter
inc
sbb
cmp
out
enter
nop
ja
add
stos
mov
dec
xchg
add
add
push
shl
js
test
inc
cmp
pop
ja
fs
rol
mov
ror
lods
out
push
and
jne
paddb
daa
push
jo
movlps
add
mov
mov
aam
jns
add
xchg
xor
stos
popa
sub
pushf
xchg
mov
cwde
dec
mov
sbb
das
outs
sub
iret
fisttp
aam
shl
in
pop
jmp
jo
cmp
ins
mul
fs
pop
into
inc
or
mov
ret
mov
adc
jecxz
sub
sbb
jns
mov
cmp
and
test
(bad)
mov
dec
pushf
adc
cmps
ins
mov
mov
fwait
jmp
push
fsub
mov
push
enter
and
push
inc
mov
inc
je
mov
mov
mov
mov
call
or
mov
add
loope
cmp
inc
dec
sti
in
loopne
punpckldq
push
add
ror
(bad)
andnps
lahf
aam
mov
daa
xchg
jnp
aaa
or
jne
repz
aaa
jo
int
add
sbb
jmp
mov
inc
ret
adc
pop
fisttp
sbb
dec
dec
and
jg
xchg
cmp
movs
mov
rol
and
sub
sti
cmp
imul
push
mov
(bad)
jnp
es
nop
mov
jae
mov
inc
movs
movs
push
xchg
jb
test
or
adc
(bad)
mov
xchg
mov
loopne
sbb
sbb
les
enter
adc
xor
(bad)
(bad)
ficom
mov
sbb
pusha
and
and
in
nop
add
dec
xchg
inc
es
or
fs
mov
add
add
or
pusha
aas
adc
ins
and
shr
retf
cwde
adc
push
xor
aam
add
xchg
out
push
sub
cmp
nop
fidiv
jae
xor
int3
xchg
jne
push
push
daa
mov
cs
dec
enter
movs
enter
adc
popa
cs
jbe
loop
retf
dec
jbe
jge
dec
mov
pop
pop
mov
sbb
dec
push
ret
sbb
fidivr
mov
xchg
ret
jae
sti
loopne
cwde
mov
jle
sub
fild
pop
fisub
and
lea
mov
das
lea
fisub
mov
push
nop
jo
outs
xchg
imul
push
mov
imul
mov
mov
loop
aas
jge
push
in
adc
in
mov
repz
pusha
loopne
mov
mov
push
in
or
jnp
adc
sbb
push
sti
movs
sub
out
sbb
mov
fist
lea
sbb
add
add
clc
cld
(bad)
fadd
imul
neg
test
inc
lea
or
sub
scas
ret
pop
add
lea
adc
jo
jne
and
pop
and
cmps
mov
xchg
jo
mov
mov
adc
ins
cli
mov
leave
mov
je
idiv
gs
inc
inc
sbb
adc
and
shl
ss
xchg
mov
jb
loope
mov
mov
popa
cwde
mov
xchg
ret
cld
pop
or
out
push
ins
adc
xchg
add
jmp
cmc
cmp
(bad)
mov
pop
jno
or
push
imul
xchg
xchg
hlt
icebp
add
jmp
jmp
inc
inc
rol
xchg
inc
pusha
outs
adc
inc
mov
leave
aas
and
xchg
inc
sahf
xchg
inc
inc
and
cli
data16
sub
and
jno
jb
shr
fcmovbe
retf
ja
jne
sar
sbb
fidivr
and
lahf
movs
xlat
nop
jne
push
pusha
inc
push
rol
retf
add
ins
xchg
ss
push
pop
push
fiadd
jno
sub
dec
retf
fs
sub
xor
lea
cmp
xlat
inc
fisub
dec
or
cmp
jno
retf
pop
or
dec
inc
lods
adc
leave
push
and
mov
pop
test
ret
or
add
adc
add
das
add
shl
push
sbb
test
cmc
iret
add
dec
inc
sbb
add
xchg
(bad)
pop
pop
pop
add
mov
mov
pop
ja
cmp
(bad)
add
jle
clc
xor
mov
dec
mov
xlat
xor
sbb
xchg
lods
cmp
enter
(bad)
les
or
lahf
shl
push
movs
mov
push
and
adc
jmp
cmp
pop
adc
inc
or
jno
imul
je
shr
loop
push
mov
nop
dec
dec
pshufw
xor
or
add
movs
mov
loopne
or
test
rcl
or
dec
push
push
sahf
mov
sub
outs
lods
add
add
fist
xchg
out
xchg
pusha
addr16
pop
or
loopne
jb
ins
xor
test
jmp
sub
and
mov
call
push
push
(bad)
sbb
loope
or
(bad)
sbb
xchg
sbb
or
or
push
dec
inc
fmul
sbb
pop
test
out
inc
push
ret
popa
or
fsub
inc
dec
popa
and
in
int
in
imul
or
mov
sbb
push
in
push
ja
in
popa
mov
and
xchg
jo
call
xlat
add
jne
leave
sbb
inc
(bad)
cmp
or
xor
fcmovb
in
xor
sub
rol
add
jp
test
mov
cmps
nop
xchg
sbb
(bad)
ss
and
jo
je
pushf
pop
cmovnp
mov
shl
mov
fcmovnbe
mov
js
mov
and
je
sbb
repnz
dec
mov
loope
cmp
pop
ror
popa
outs
add
mov
push
add
cmp
sbb
(bad)
lods
push
inc
lahf
sbb
sub
test
mov
mov
adc
pop
mov
fmul
cmp
push
or
cmp
cmc
fmul
push
mov
test
xchg
pop
ror
lods
fadd
ror
mov
and
push
pop
xchg
xor
or
call
and
mov
sbb
inc
and
jo
nop
loopne
sub
cmp
mov
push
or
ret
jnp
das
xor
ss
mov
sub
dec
push
push
jb
es
mov
mov
push
and
ret
or
sbb
mov
mov
enter
fwait
lea
or
dec
add
popa
add
mov
in
fild
pop
add
and
jecxz
in
and
nop
imul
push
loopne
push
pusha
movs
inc
aam
enter
xchg
cs
add
ins
pop
sub
out
xchg
lea
loopne
iret
in
ror
jecxz
sbb
daa
push
jge
add
cmp
dec
pop
shl
pop
push
cmp
js
cdq
mov
xchg
in
pushf
dec
jbe
test
xchg
jbe
adc
fild
fst
ds
pop
rcr
inc
push
movs
add
xor
in
ss
mov
inc
pushf
cs
pushf
push
xchg
test
fcom
loope
call
sub
inc
jg
loopne
or
sbb
and
push
pusha
mov
aam
and
xchg
lahf
ss
adc
fstp
scas
dec
adc
jb
sar
ret
xchg
rcl
int3
xchg
pop
pop
jb
enter
mov
mov
call
xor
and
int
adc
loopne
pushf
and
push
mov
add
(bad)
shl
bound
xchg
push
pop
cmp
jo
movs
and
imul
xor
sub
add
leave
push
xor
stos
xlat
mov
dec
sub
pushf
push
(bad)
imul
les
les
xchg
jns
fsub
sbb
stos
in
mov
aam
cmp
aad
sub
lods
or
sbb
ss
clc
loop
xchg
mov
push
xchg
push
sub
shr
and
stos
clc
mov
ins
mov
imul
ror
retf
xchg
xor
push
add
cmp
pop
jmp
cmp
sbb
inc
and
mov
lods
(bad)
adc
pop
aaa
loope
xchg
xchg
sub
mov
les
lahf
nop
xchg
mov
test
in
scas
test
adc
push
xchg
jo
or
sub
cmps
sbb
mov
dec
dec
sub
or
pop
pop
and
adc
or
arpl
add
dec
mov
or
jmp
jmp
ds
arpl
neg
sub
cvtps2pi
adc
mov
nop
xchg
jecxz
ins
jle
xchg
push
(bad)
push
add
xor
dec
pop
xchg
jg
rcl
push
adc
jge
movs
repz
aaa
add
adc
xchg
mov
sti
xor
and
pop
loop
push
inc
xor
push
inc
dec
imul
cmps
pop
or
inc
push
jg
sub
dec
push
inc
add
test
add
icebp
rcr
dec
dec
add
int3
sub
mov
ss
jg
dec
ror
out
jbe
and
movs
or
adc
adc
adc
dec
aaa
xor
ret
loope
cmps
fcom
enter
xor
lahf
jb
sbb
adc
xchg
inc
mov
aas
sbb
xlat
int3
and
and
popa
aam
dec
ss
shl
mov
push
xchg
dec
sbb
mov
aas
popf
adc
or
sbb
popf
shl
ret
xchg
mov
jg
or
and
or
jbe
push
fcomp
xor
sub
adc
ins
adc
add
inc
bound
imul
push
imul
mov
adc
or
std
add
pop
add
pop
dec
and
inc
ins
(bad)
in
add
add
xor
arpl
push
or
into
xchg
mov
ror
adc
adc
lods
(bad)
outs
jae
ss
imul
mov
pop
and
mov
push
movs
ror
jg
movs
push
repnz
stos
sbb
(bad)
pop
mov
adc
mov
and
or
lock
in
add
mov
push
jmp
inc
rol
jecxz
cmp
data16
push
xchg
dec
jge
or
mov
ins
loop
cmp
dec
pusha
in
or
sbb
ins
sbb
dec
mov
je
lahf
sar
cmc
das
and
push
inc
cmp
fiadd
adc
inc
daa
dec
mov
xor
inc
dec
leave
popf
push
push
adc
dec
sbb
add
cdq
sbb
je
repz
xor
iret
pushf
aas
add
(bad)
jo
push
push
adc
sub
test
or
add
mov
sbb
mov
adc
xor
mov
add
add
push
out
sahf
or
or
push
pop
stos
lods
pop
and
push
push
adc
test
loop
in
xor
test
adc
add
test
inc
(bad)
pusha
or
or
bound
mov
cld
inc
jl
repnz
jo
mov
mov
setne
ret
mov
popa
or
outs
mov
push
mov
ja
and
mov
outs
mov
xchg
mov
mov
out
sahf
pop
dec
mov
jne
mov
sbb
test
mov
loope
sahf
dec
ror
add
js
add
add
in
adc
dec
dec
addr16
imul
fmul
pusha
mov
adc
sub
dec
dec
ins
mov
sbb
xchg
push
test
mov
xor
sti
movs
inc
mov
sar
(bad)
and
test
mov
lods
adc
add
movs
sub
jb
adc
or
and
push
mov
push
pinsrw
sar
xchg
mov
pusha
mov
push
or
lea
pop
mov
xchg
fld
clc
mov
add
cld
mov
add
shl
inc
jb
or
lock
jo
scas
jg
push
mov
inc
mov
adc
adc
ret
dec
cmp
test
dec
jp
ror
add
adc
dec
sti
or
retf
jmp
scas
call
lea
jl
int3
inc
shl
out
or
push
mov
add
pop
aam
xor
outs
adc
test
sub
daa
ret
clc
push
push
pop
sub
mov
push
xchg
pop
jmp
pop
or
dec
aaa
mov
xor
xchg
aam
test
jo
not
jae
push
fmul
or
(bad)
sbb
and
inc
and
jns
retf
cmp
shr
cld
clc
jo
lds
arpl
mov
in
pop
or
pop
adc
cwde
push
xor
push
pushf
inc
xor
sbb
inc
stos
xor
push
mov
jmp
in
(bad)
je
aaa
nop
pop
imul
ret
push
loop
es
inc
adc
mov
mov
rol
inc
or
pop
mov
imul
loop
mov
add
mov
pushf
or
cwde
popa
cwde
xchg
imul
push
sbb
nop
add
mov
push
adc
dec
loop
mov
je
call
jl
pop
inc
call
mov
js
pop
inc
stos
test
jmp
hlt
rol
stos
xchg
mov
adc
mov
mov
pop
lds
and
cmc
xchg
or
popa
lahf
dec
shr
lock
js
js
and
lea
stc
jbe
mov
sub
ins
mov
and
fs
and
aad
dec
inc
je
stc
loop
mov
or
or
loopne
shl
int3
ja
push
mov
lea
jo
xor
cmp
cmp
sub
xor
pushf
mov
pusha
lea
jb
daa
cmps
adc
mov
in
push
adc
in
pop
fs
xchg
xchg
dec
adc
pop
mov
dec
inc
jge
add
adc
and
in
mov
adc
cmp
jne
xlat
scas
sbb
dec
sbb
sbb
adc
aas
cmp
js
(bad)
rcl
adc
cmc
ins
pop
mov
adc
inc
pop
enter
fcom
pop
adc
jb
dec
cmp
xor
jb
nop
adc
mov
data16
push
sub
fdivr
sub
and
in
leave
pop
and
mov
pop
and
xor
pop
jb
sbb
mov
mov
adc
mov
arpl
mov
popa
dec
xor
fcom
stc
loopne
pop
test
adc
das
add
shl
mov
sbb
je
add
imul
(bad)
sbb
pushf
pushf
jmp
pop
ret
xchg
lock
ins
inc
stos
test
jp
lds
or
sbb
mov
(bad)
pop
xchg
cld
ins
adc
push
cmps
add
pop
xchg
repz
xor
pop
sub
inc
cmp
add
pop
sub
sar
and
sbb
popf
push
jns
or
sbb
push
mov
add
sbb
push
xchg
xchg
retf
or
sbb
es
adc
dec
add
or
sbb
adc
or
or
push
nop
and
and
mov
jmp
aas
pop
mov
add
ds
int
clc
mov
jl
adc
sbb
mov
add
add
shr
add
push
rcr
sub
out
and
jo
cmp
ror
enter
js
xchg
xor
xor
ja
adc
lods
rol
xchg
lock
adc
clc
cmp
sbb
xchg
push
dec
sbb
dec
xor
mov
or
(bad)
xchg
into
inc
loop
mov
pop
out
add
stos
adc
or
inc
or
sub
add
mov
clc
mov
xor
and
shl
mov
popf
xchg
sbb
cmp
sbb
pushf
or
out
pop
or
add
mov
jp
xchg
mov
mov
push
pop
or
push
test
arpl
cmps
lea
dec
call
lds
mov
int
mov
mov
add
rcr
pop
lods
dec
mov
xchg
inc
mov
mov
test
cdq
xchg
dec
fucomp
pop
hlt
xchg
mov
dec
mov
rcl
mov
inc
call
jmp
jmp
mov
cmp
xchg
jp
or
dec
cmp
xchg
or
rol
and
pop
mov
outs
push
push
mov
push
and
fucom
dec
cmps
dec
cmps
cmps
or
pop
sbb
lods
add
iret
sbb
test
cmp
shr
xchg
pop
add
mov
or
mov
nop
popa
add
cmp
or
or
lds
push
dec
jge
in
xchg
sbb
or
or
pop
les
in
sub
jne
jg
mov
and
dec
sub
cld
lahf
in
jbe
and
and
out
push
xor
xlat
sbb
sbb
cmp
push
not
and
(bad)
std
sbb
sub
adc
inc
inc
add
adc
lahf
mov
and
pop
pop
cmp
sbb
stos
mov
ret
idiv
add
fist
add
rol
adc
add
ficom
pop
and
jmp
shr
rol
add
sub
int3
add
sub
push
add
fsubr
shl
scas
mov
jg
sub
dec
push
jo
push
lea
(bad)
xchg
cmp
mov
popf
or
add
jmp
js
pop
mov
stos
jmp
push
push
xor
cmps
adc
adc
add
ror
mov
jne
aad
test
mov
xchg
pop
in
cmp
push
fisttp
push
jno
mov
xchg
leave
dec
movs
jne
dec
inc
push
test
stos
inc
adc
dec
mov
mov
mov
lods
outs
inc
push
ss
ja
xchg
pop
push
mov
jmp
jl
xchg
pop
or
imul
add
test
ja
pusha
lods
pop
stc
lods
add
mov
(bad)
(bad)
dec
cmp
jmp
inc
add
and
jmp
push
(bad)
xor
addr16
adc
push
neg
data16
cmps
sbb
hlt
lods
mov
(bad)
(bad)
stc
jnp
cmp
adc
pop
ss
or
dec
push
xchg
retf
push
adc
dec
lea
ins
inc
adc
imul
(bad)
es
popa
fwait
add
cs
dec
inc
hlt
aaa
xor
fadd
hlt
fimul
loopne
adc
sbb
mov
mov
leave
fnsave
call
push
pop
cmp
int3
in
popa
cmp
sbb
adc
mov
xor
aam
inc
das
pop
leave
sbb
add
jne
cmc
inc
or
push
add
jg
loope
fs
jo
push
in
xor
in
and
add
mov
mov
push
pop
or
hlt
adc
call
mov
pop
clc
jmp
shl
ret
hlt
stos
pop
clc
xchg
xor
cmps
sar
mov
out
ins
jl
retf
int3
fidiv
pop
in
xchg
mov
push
call
jo
jno
sub
fwait
jge
xchg
retf
ins
loopne
jo
sbb
xor
in
in
call
push
sbb
lods
and
push
cmp
daa
cmps
and
shr
push
cmp
mov
xchg
sbb
dec
cmps
push
mov
movs
cmps
rcr
pop
jb
lds
sub
dec
jmp
aas
mov
jne
sar
retf
mov
stos
adc
push
inc
mov
fisttp
and
sub
sbb
inc
cdq
xchg
dec
ret
push
inc
dec
adc
out
mov
shr
push
xchg
movs
clc
fsubr
out
test
or
xor
fst
sub
xor
dec
sub
pop
push
sbb
fadd
add
loop
and
(bad)
je
pusha
shl
push
cmc
aaa
push
clc
(bad)
ins
add
les
or
dec
mov
xchg
jmp
cmp
push
loope
loopne
xor
mov
loopne
int
or
cdq
sbb
arpl
inc
sub
lods
loopne
dec
cs
mov
jnp
(bad)
sbb
pop
and
cmp
jns
fwait
rcl
mov
xor
adc
fcom
sti
sub
jns
xor
xlat
add
movs
fistp
push
push
cmp
call
adc
mov
loopne
pop
or
pop
scas
pushf
cmps
mov
stos
ins
adc
jb
ins
ins
(bad)
xchg
sbb
push
or
popf
sub
mov
test
cwde
movs
gs
and
int
or
push
sub
js
call
dec
sbb
add
pop
sti
push
mov
sbb
dec
aaa
push
cmp
jo
push
outs
dec
ror
xchg
mov
bound
add
jb
cmps
es
adc
imul
sbb
and
clc
popw
push
or
daa
xchg
mov
fist
loope
inc
clc
cmp
or
cs
je
inc
cmp
shr
test
push
mov
and
loopne
cmp
jo
gs
clc
mov
and
jl
in
fcomp
and
mov
xchg
push
xchg
push
(bad)
data16
mov
(bad)
in
sbb
xchg
mov
sub
and
add
adc
mov
cmps
nop
add
fistp
jo
lock
sbb
pop
xchg
push
sbb
pop
sub
jl
mov
sbb
es
test
pop
add
inc
inc
sub
mov
and
xchg
pushf
adc
xchg
adc
nop
sbb
test
and
add
in
in
add
sbb
xchg
bound
mov
push
out
xlat
sub
adc
push
cmp
mov
jecxz
sbb
cmp
inc
sbb
sbb
sbb
dec
jmp
sbb
add
sbb
add
sbb
sahf
dec
cmps
mov
mov
stc
inc
jo
ins
xlat
inc
movs
or
call
mov
das
and
jmp
push
jnp
adc
cmps
dec
ins
ins
adc
or
add
dec
not
pop
call
push
add
push
adc
call
bound
add
in
call
xor
sbb
push
rcl
pop
or
imul
jle
push
fdiv
imul
aaa
jecxz
mov
jne
xchg
inc
aaa
mov
(bad)
cld
or
cmp
fcom
inc
mov
ret
add
lods
xor
cdq
call
sub
ins
(bad)
pop
mov
daa
imul
push
lods
(bad)
or
shl
hlt
nop
dec
mov
das
dec
cdq
add
or
dec
cwde
in
cld
or
sub
sti
movs
test
shr
les
mov
aas
aas
add
mov
fidiv
dec
pop
jae
dec
rcr
cmp
sbb
mov
enter
xor
inc
ja
jbe
pop
xor
and
add
xchg
fmul
adc
mov
xor
jae
sub
mov
mov
in
inc
sub
ret
dec
or
add
push
fcomp
mov
leave
and
add
fs
jmp
sub
cmp
push
jo
add
dec
sbb
pushf
xor
and
and
sbb
ret
dec
add
jp
cwde
xchg
in
cmp
mov
or
fld
leave
or
cdq
es
or
test
pop
cli
mov
pop
outs
mov
mov
cdq
add
(bad)
sbb
sbb
aad
sbb
sub
push
add
clc
inc
mov
xor
adc
hlt
fcomi
call
or
adc
pop
sbb
or
dec
and
out
mov
push
cmp
rol
test
jmp
push
jbe
arpl
enter
push
dec
out
les
pop
aas
ror
or
pop
push
paddq
mov
fwait
out
mov
xchg
inc
stos
or
movs
cs
sbb
and
mov
daa
test
xchg
sbb
inc
int
jg
fcomp
retf
sbb
adc
or
jecxz
add
(bad)
fsubr
mov
mov
jbe
cmp
ins
shl
ret
lods
mov
stos
inc
ins
mov
xchg
add
xchg
add
dec
jbe
and
jnp
and
ret
ja
push
sub
xlat
cld
inc
push
jp
js
adc
fdiv
shl
xor
lock
adc
fnsave
enter
add
aam
ja
dec
rcl
push
rol
adc
out
pusha
and
lock
mov
push
push
sub
add
arpl
pusha
shl
inc
or
jmp
in
inc
add
fistp
jl
cld
inc
pop
call
jno
push
leave
fbstp
jg
mov
imul
inc
lock
adc
pop
inc
clc
mov
cmp
jb
enter
add
pusha
or
clc
inc
push
lods
not
or
adc
loope
jp
pop
mov
xchg
data16
test
mov
jb
inc
sbb
mov
inc
or
nop
dec
repz
std
cmp
push
xchg
not
adc
rol
xor
and
add
inc
or
and
and
pop
in
es
xor
(bad)
test
and
sub
xor
sbb
lahf
lea
cdq
in
mov
loope
dec
into
les
sbb
push
icebp
rol
pop
add
xchg
cmp
xchg
adc
loopne
jecxz
mov
push
jmp
or
or
mov
mov
test
icebp
test
pop
cmp
mov
xchg
mov
psrld
mov
jp
xchg
jge
not
add
rcl
xchg
mov
add
or
cmp
mov
pop
and
setp
xor
int
cmp
xchg
mov
mov
cmp
pushf
fst
nop
jecxz
inc
add
xor
lea
aam
jmp
inc
push
pop
jmp
ja
xor
jmp
imul
push
loopne
sbb
sub
dec
inc
loope
adc
and
mov
inc
and
pop
or
cmp
mov
mov
or
lods
aaa
add
xchg
div
push
sub
mov
xchg
inc
lds
pop
je
xor
mov
sbb
sub
mov
fmul
lods
or
pushf
cld
rcl
adc
xor
stos
jo
pop
pop
jl
ret
cmps
pop
pushf
mov
lods
rcl
sub
and
pop
fcom
imul
lods
popf
and
popf
jo
shr
xchg
sbb
push
inc
mov
cs
mov
xor
shr
(bad)
leave
leave
leave
mov
test
mov
out
daa
sub
arpl
cmps
jg
xchg
ret
and
jecxz
call
rol
pusha
in
out
mov
cs
cmp
push
pop
add
jbe
es
add
ss
cs
push
inc
and
sbb
adc
or
and
loope
mov
sbb
add
sbb
dec
mov
leave
sar
enter
test
fwait
stos
push
sahf
fistp
and
mov
cmc
lods
xchg
enter
cmp
rcr
mov
push
jb
popf
jno
push
sub
cmp
xchg
pop
out
xchg
ds
cmc
aaa
cmp
rol
adc
jmp
rol
js
or
lods
out
pop
sub
adc
cmp
jne
jmp
inc
mov
adc
xor
adc
and
lahf
(bad)
pushf
sub
dec
adc
in
pop
push
push
aas
jae
test
and
fs
inc
add
mov
add
and
mov
cmp
aam
movs
jo
sub
shr
loop
stc
rcr
or
imul
inc
or
or
aas
nop
mov
jecxz
push
sar
lock
xlat
xchg
cmp
jmp
ins
push
mov
xchg
test
call
sub
jge
sub
cmp
or
test
inc
nop
xchg
xor
cmp
dec
add
adc
jg
pop
mov
in
mov
and
xor
cmp
cld
mov
pop
xchg
push
fld
lea
add
fstp
aas
cmp
xchg
or
test
jnp
pop
dec
movs
xchg
aad
sub
sub
or
and
fwait
jp
stc
pop
(bad)
cmp
sbb
push
ror
add
and
sbb
jecxz
pop
sub
pop
xor
imul
pop
cmp
dec
inc
sbb
cmp
jmp
jns
inc
or
xor
inc
imul
repz
out
ss
inc
imul
outs
and
xor
push
inc
sub
popa
add
inc
pusha
inc
data16
xchg
call
outs
mov
stos
cmp
dec
adc
(bad)
stos
sub
sbb
cmp
sub
add
jb
lods
mov
push
enter
fiadd
add
xor
cmp
add
mov
repz
push
js
cmp
cmp
sub
adc
add
fdiv
adc
shld
mov
mov
sub
in
cld
adc
sub
mov
xor
pusha
mov
jb
pop
aaa
dec
aaa
jb
(bad)
in
ror
loopne
aaa
aaa
mov
je
and
add
jb
repz
(bad)
or
retf
add
add
xchg
cmps
mov
movs
sub
pop
sub
adc
inc
jp
aad
aaa
cmps
xor
out
test
cli
mov
or
inc
mov
cld
addr16
push
ins
arpl
dec
cs
or
or
(bad)
xor
cmp
popf
mov
pop
bound
in
or
movs
mov
mov
mov
mov
rcr
sbb
mov
inc
ror
add
out
push
push
nop
outs
adc
mov
sub
clc
movs
ficomp
xchg
xchg
aaa
push
test
loopne
sbb
lds
or
dec
rcl
cld
mov
fimul
xor
daa
fs
push
or
mov
call
push
xchg
mov
or
ja
jb
push
retf
and
pushf
pop
pushf
sub
sbb
xchg
sbb
ds
jb
in
popa
xchg
nop
adc
nop
pop
adc
adc
push
fst
les
xchg
add
inc
xchg
cmp
popa
fdivr
xchg
retf
jl
adc
mov
pop
push
inc
pop
add
xlat
or
xlat
adc
pop
cmp
addr16
mov
dec
jb
or
icebp
mov
and
cmp
cld
adc
cdq
in
fdivr
adc
repnz
je
jo
mov
xchg
xchg
retf
in
ins
push
mov
popa
dec
fs
mov
jb
sbb
and
pop
sbb
data16
pop
popa
adc
mov
push
push
imul
push
pop
push
mov
pop
or
xor
pop
dec
push
push
adc
or
dec
and
dec
pop
js
fwait
call
iret
enter
jp
fcomi
push
leave
mov
xor
pusha
fnstcw
lods
or
movs
mov
(bad)
daa
add
push
scas
adc
cmp
lds
ficom
dec
add
mov
add
cmp
xchg
test
icebp
arpl
dec
cli
push
mov
mov
(bad)
(bad)
or
mov
lock
and
or
add
(bad)
cdq
lock
mov
mov
sbb
pushf
popa
ror
pushf
cwde
(bad)
fld
repnz
xchg
jge
jb
sub
push
popf
jge
popa
fdivr
xchg
popa
aaa
dec
and
mov
mov
ret
jne
and
xchg
ret
and
fnstsw
movs
and
(bad)
sub
jecxz
dec
or
fstp
cmp
mov
les
and
lds
jl
jl
test
nop
xchg
js
jl
push
dec
mov
xchg
or
inc
cmps
cmp
pop
test
pop
dec
push
dec
mov
fld
mov
mov
fs
call
imul
retf
or
xor
popa
pop
pop
xor
outs
les
push
arpl
push
or
clc
clc
jnp
ret
pop
and
call
dec
(bad)
adc
nop
push
ret
and
fsubr
in
xchg
out
out
xor
dec
mov
imul
xor
imul
stos
cmp
clc
and
xchg
retf
inc
inc
inc
or
sar
cmp
and
inc
push
cmp
xor
xor
inc
cmp
clc
sub
fs
sub
adc
pop
cs
jb
clc
and
and
or
xchg
outs
sbb
sbb
dec
and
daa
push
adc
add
mov
adc
adc
nop
push
cmp
dec
(bad)
popa
xchg
xchg
xchg
call
jg
sbb
add
in
push
push
sub
xor
adc
ss
mov
adc
mov
xchg
mov
mov
imul
or
imul
loope
in
add
add
inc
xchg
pop
jae
sub
hlt
jae
sbb
push
add
mov
repnz
cld
aad
lods
clc
aad
loopne
pop
push
and
add
or
and
cs
test
xchg
retf
aaa
in
arpl
call
inc
mov
mov
in
or
cmp
mov
outs
adc
in
test
xchg
fmul
xor
jae
dec
test
fsub
xchg
in
cmp
aam
xchg
dec
mul
(bad)
rcl
sbb
gs
fnop
arpl
in
int3
dec
and
sbb
adc
and
cmp
push
inc
shl
pushf
or
add
xchg
out
add
sbb
pop
and
push
gs
iret
cmp
add
sbb
movs
dec
xchg
jmp
adc
and
cmc
pop
iret
mov
jp
les
mov
mov
pop
push
repz
dec
fsubrp
add
sub
mov
aad
push
push
enter
in
mov
mov
and
cdq
jmp
adc
and
push
sbb
add
in
add
or
lods
mul
jecxz
test
mov
out
push
sbb
push
rcr
daa
js
adc
mov
inc
mov
push
sub
mov
cwde
test
dec
call
and
das
ds
inc
mov
movs
pop
movs
add
(bad)
pop
mov
ja
lock
mov
pusha
bound
pop
add
aam
int
mov
jl
in
repnz
pop
div
pushf
loopne
fxch
cwde
mov
add
cmps
jnp
push
jo
push
cmps
lods
dec
inc
xor
call
daa
mov
cmp
xchg
popa
xor
dec
popa
dec
ins
sahf
and
sub
sub
inc
into
push
and
mov
or
lds
fdivr
rcl
jns
mov
and
mov
push
push
push
test
xchg
pop
(bad)
cs
mov
sbb
sub
cmp
inc
fild
push
adc
inc
add
pop
ret
xor
dec
adc
int3
sub
sbb
cmp
and
imul
(bad)
test
stc
sbb
adc
mov
pop
inc
icebp
ins
push
jb
xor
js
js
push
sti
cmp
sub
in
mov
jo
push
xchg
mov
xor
jo
push
into
jo
mov
sbb
xor
or
jo
push
je
mov
mov
test
cs
lods
jno
ins
or
inc
das
imul
and
mov
inc
(bad)
cs
cdq
mov
(bad)
xor
xor
sub
xchg
sub
add
aas
xchg
push
cmc
xor
push
icebp
fs
xor
mov
lahf
mov
jb
pop
pop
xor
jl
ins
cmc
push
push
push
push
dec
push
push
xor
(bad)
outs
jecxz
in
pusha
push
pop
cmp
in
call
xor
shr
out
in
mov
mov
adc
lds
fsubr
(bad)
or
jae
mov
test
loop
jbe
ja
sbb
push
and
pop
mov
pop
jo
inc
inc
pop
sbb
in
inc
nop
cmc
inc
sbb
dec
cli
add
xchg
dec
cmp
cmp
pop
out
xchg
xchg
pop
mov
cmp
fsub
fbld
cwde
jno
sbb
mov
lods
hlt
ret
pushf
aam
int3
sub
adc
xor
call
ss
adc
mov
xchg
rol
pop
dec
int3
sub
jb
sbb
push
xor
outs
push
pop
sub
arpl
pop
mov
pop
push
adc
push
or
inc
sbb
dec
inc
hlt
jnp
cdq
in
rol
and
sbb
fs
cmp
xor
cs
add
test
repz
sbb
and
enter
cmp
or
push
jo
adc
adc
and
or
and
jno
mov
aad
jns
movs
or
outs
lahf
pop
push
push
stc
cmp
repz
inc
sbb
add
dec
enter
sbb
sbb
sbb
dec
pusha
jp
mov
je
psrlq
add
add
jne
dec
and
arpl
outs
push
pop
loope
movs
test
xor
mov
mov
mov
aam
cmp
mov
inc
cdq
in
sar
ja
add
aaa
fs
hlt
lock
outs
push
lock
mov
mov
xchg
sar
mov
sbb
mov
mov
mov
and
test
push
jne
fcomp
into
dec
ja
mov
rol
adc
xor
pop
push
cdq
fcom
inc
test
outs
push
adc
jb
cmp
sub
or
shl
jb
in
rcl
int3
and
cmp
int3
iret
jp
push
fs
push
icebp
retf
and
fdiv
enter
xchg
enter
mov
les
jnp
adc
push
adc
xchg
icebp
mov
pop
cs
rol
inc
and
outs
in
cdq
(bad)
jae
inc
jnp
fnstenv
push
scas
sub
cmp
jno
stc
mov
add
xor
cli
(bad)
xor
retf
mov
jmp
stc
pop
fimul
mov
inc
sbb
(bad)
jle
retf
aaa
leave
or
pusha
lods
fldcw
aam
inc
add
fsubr
cmp
adc
jae
mov
or
cmps
mov
add
stos
iret
sub
lock
test
retf
movs
mov
test
mov
test
add
or
rol
sbb
(bad)
clc
dec
movs
lock
lods
sbb
xchg
mov
lock
stc
xor
lock
sbb
lock
nop
dec
jnp
inc
pop
shl
fistp
pusha
xor
(bad)
adc
pusha
in
cmp
cli
push
rol
ja
push
xor
or
jbe
or
(bad)
int
sub
mov
imul
lock
out
or
sub
push
pop
dec
jl
xor
(bad)
enter
fwait
push
xor
ffreep
mov
push
je
bound
dec
adc
outs
pop
cmp
in
mov
test
in
xor
retf
mov
pop
xor
lock
xchg
ins
(bad)
call
adc
jns
out
push
out
imul
les
push
or
mov
mov
fwait
ror
shr
or
sbb
js
in
or
pop
pop
inc
jb
pusha
push
ins
push
aaa
in
or
sub
sbb
sbb
dec
mov
pop
cmp
pop
cmps
push
xchg
mul
cli
gs
mov
in
cs
pop
jp
mov
adc
mov
out
or
shl
add
sub
dec
sub
jl
in
add
stos
lea
mov
arpl
std
outs
mov
(bad)
mov
jl
test
and
cwde
push
(bad)
shl
or
push
push
inc
push
xchg
lods
ss
cwde
test
cli
lahf
dec
fs
adc
pop
add
rol
in
ret
push
sub
loopne
aaa
mov
push
je
mov
in
xchg
iret
dec
push
daa
dec
pop
inc
xchg
sbb
sub
imul
lods
jmp
push
mov
fwait
cmp
push
mov
pop
push
mov
mov
lods
not
dec
arpl
pusha
mov
fcom
pop
add
xor
loopne
mov
push
nop
das
mov
pop
dec
out
xchg
fsubr
pop
cs
or
xor
fcomp
scas
jl
outs
fwait
cwde
jmp
int
and
lea
jae
xor
dec
(bad)
(bad)
call
mov
jo
push
pusha
shr
lock
mov
pop
push
or
jmp
aas
cs
test
fstp
pop
sub
in
or
scas
fs
pop
rol
mov
popa
mov
and
push
pop
nop
out
mov
xchg
scas
fisub
imul
arpl
add
push
dec
dec
ds
add
rol
jmp
imul
in
arpl
pop
dec
jnp
xchg
lods
mov
imul
movs
pop
inc
pop
sub
gs
sub
and
mov
dec
repz
gs
cmp
jo
add
(bad)
fild
in
lea
inc
sar
and
out
inc
xor
shl
in
in
push
inc
imul
push
pusha
(bad)
repnz
nop
xor
inc
pusha
in
push
mov
cmp
es
push
xor
push
xor
and
fwait
loopne
mov
es
sub
or
cmp
jo
and
inc
inc
and
enter
push
sbb
sbb
repnz
ins
cmp
cmp
sbb
adc
ins
push
xor
mov
cmp
xor
imul
push
mov
ja
push
popa
ret
aas
(bad)
sbb
jl
jo
or
aam
aam
pop
pop
test
add
mov
popa
add
outs
jle
mov
push
push
push
in
dec
movs
dec
dec
mov
shl
jo
adc
ss
les
and
outs
add
jns
in
push
imul
push
shl
cmp
xor
call
loopne
hlt
retf
lea
shl
stc
loope
xchg
shl
shr
add
popa
in
call
jo
call
and
jae
dec
ret
shl
je
dec
jae
je
nop
sbb
and
jo
in
in
(bad)
je
mov
aam
rol
push
sbb
cmp
xchg
outs
int3
arpl
enter
repnz
les
shl
ja
jae
mov
xlat
jne
cmp
imul
test
sub
daa
aaa
mov
js
jb
repnz
popa
mov
repnz
test
jae
jb
jmp
pop
cs
lods
lods
test
and
dec
adc
mov
fisub
jmp
(bad)
je
inc
mov
cmps
mov
xchg
mov
mov
xor
jb
jb
jnp
mov
inc
cs
add
xchg
inc
cwde
jo
xchg
pushf
xor
xchg
nop
jge
shl
mov
popa
adc
pop
jnp
test
lock
js
cld
mov
push
sub
sti
mov
jg
in
and
xor
outs
cwde
xor
push
popf
gs
add
xor
xchg
push
test
push
cmp
lahf
or
test
adc
or
sbb
xor
test
sbb
fsub
enter
mov
nop
retf
fs
xchg
cmp
lods
xor
push
xchg
mov
mov
mov
inc
aam
dec
frndint
rcl
mov
or
or
or
inc
ret
test
sbb
sub
push
test
test
test
mov
push
or
lea
rol
pusha
fisubr
xor
into
es
fsubr
xchg
sbb
or
push
jl
jl
in
mov
push
cmp
jmp
lods
sub
mov
lods
jne
mov
mov
mov
jo
mov
jmp
popa
or
(bad)
lods
das
test
push
mov
cmp
sbb
mov
ds
lds
in
xor
lahf
loope
gs
jno
jno
popf
xchg
pop
mov
and
mov
ret
ret
sub
push
leave
mov
pop
cmp
mov
test
inc
jp
and
in
out
mov
inc
cs
jmp
lods
imul
(bad)
fsub
nop
push
cmp
jmp
imul
push
mov
and
or
mov
mov
add
mov
sbb
int3
movs
cmp
(bad)
in
rcl
jl
jge
loope
inc
popf
out
dec
scas
push
and
nop
pop
or
add
pop
mov
cmp
add
rol
adc
mov
ins
push
cmp
sub
int
jb
mov
adc
ror
mov
cmp
adc
lock
not
cmp
add
scas
add
adc
push
mov
(bad)
or
sub
loope
jo
shr
add
aaa
cmp
test
rcr
(bad)
xor
pop
sub
sbb
push
cli
movs
xchg
add
test
xor
jb
jecxz
nop
dec
inc
rcr
sub
rcl
mov
out
mov
test
in
retf
in
push
pop
push
sahf
sbb
enter
fdivrp
stos
jb
or
sub
add
popf
xor
and
sbb
fstp
aas
cmp
sbb
jne
movs
and
or
xor
sahf
xchg
xor
stc
cs
inc
cwde
sub
gs
test
xor
pop
ucomiss
test
fild
xchg
push
xchg
lea
or
add
jo
cli
xchg
fs
add
cwde
pop
inc
fild
sub
rol
add
add
pop
add
add
sub
mov
addr16
test
pop
loopne
sbb
addr16
adc
inc
xor
xor
jne
repnz
rol
cmp
imul
push
cmp
dec
xchg
outs
xor
ror
and
pop
mov
sbb
jmp
jge
sub
xchg
hlt
inc
cmps
xor
and
sbb
(bad)
xor
sbb
mov
test
adc
and
nop
xchg
xor
xchg
and
call
sbb
sbb
fsubr
adc
jbe
mov
adc
jb
fs
or
sbb
or
movs
call
add
add
xchg
stos
xor
xchg
jbe
xor
mov
xchg
sbb
xchg
fsubr
xor
inc
or
mov
pop
push
xlat
cld
rol
mov
or
clc
sahf
cwde
pop
dec
dec
jnp
adc
je
popa
in
movs
cmp
ficom
fwait
xlat
lea
mov
call
xor
and
in
fwait
pop
mov
jne
xor
xchg
out
sbb
xchg
xor
pop
xchg
call
adc
das
mov
or
push
mul
dec
mov
sbb
fist
lea
pop
and
and
sub
push
cmp
lods
add
cmp
movs
xchg
sbb
addr16
aaa
pop
retf
icebp
scas
lds
mov
pop
xchg
or
dec
pop
pushf
test
add
lea
out
mov
popf
scas
xchg
sbb
and
adc
ror
or
enter
cmp
movs
add
daa
(bad)
rcr
mov
popa
fwait
mov
xchg
retf
aaa
and
arpl
mov
mov
out
lahf
jae
jae
sbb
cmp
rcr
sbb
ffree
inc
or
and
mov
loop
out
movs
mov
mov
xchg
mov
popa
lea
cwde
xchg
pushf
push
and
enter
out
xchg
mov
sbb
stc
push
xchg
jo
out
popa
mov
pop
xor
mov
adc
les
cmp
cmps
push
adc
out
enter
push
jl
test
loope
loopne
dec
cmps
mov
call
les
dec
movs
out
inc
call
imul
sbb
mov
je
pop
xor
test
jb
ins
ins
push
in
push
out
fs
mov
jo
cs
add
cmp
pop
pop
pop
and
inc
lods
pop
sbb
enter
push
push
push
lods
stc
es
lds
dec
arpl
ss
scas
push
adc
push
fadd
mov
dec
call
int
dec
test
leave
cmp
jne
in
push
retf
pusha
add
add
mov
imul
in
cmp
scas
or
sub
vpand
cmp
arpl
bound
test
loopne
in
imul
popf
xchg
pop
cmps
mov
in
dec
repnz
in
sbb
dec
loopne
mov
cdq
sub
sub
sub
and
push
sbb
and
sbb
mov
pusha
sbb
sbb
imul
mov
mov
in
mov
mov
adc
add
out
jbe
imul
repnz
movs
jmp
in
in
sbb
add
cmp
enter
in
retf
ja
cld
ror
(bad)
clc
sar
sub
pop
rol
adc
xchg
adc
jmp
in
popa
xrelease
jmp
ins
call
xchg
jmp
sub
ret
int3
lods
fcmove
adc
(bad)
in
mov
je
mov
xor
push
xchg
push
dec
scas
pop
int3
or
pop
dec
jo
in
pop
mov
push
sub
mov
mov
xchg
or
in
outs
and
push
pop
add
test
je
push
adc
test
mov
lea
adc
lods
add
mov
shl
call
in
outs
in
mov
sbb
pop
rcr
sbb
mov
and
push
lods
add
cdq
(bad)
fadd
cs
jb
fsub
jecxz
aam
test
push
repnz
jecxz
int3
xor
ret
data16
or
(bad)
shl
retw
adc
ret
imul
enter
sbb
push
push
stos
and
dec
cmp
sub
dec
les
nop
xchg
push
shl
push
fs
mov
dec
lds
sub
jecxz
rcr
enter
(bad)
push
adc
mov
cmc
les
sbb
je
jge
or
push
jecxz
mov
adc
jge
cmp
cmp
jo
push
cmp
cmp
jecxz
(bad)
sbb
push
dec
addr16
shl
push
inc
xchg
leave
mov
add
add
in
loop
inc
mov
mov
push
add
leave
push
mov
add
push
call
icebp
sub
in
in
adc
xlat
mov
xor
movs
movs
mov
int3
mov
sbb
outs
and
cwde
outs
je
outs
pop
inc
and
pop
loope
nop
xchg
dec
cwde
je
inc
sbb
lods
sbb
jne
loop
jno
leave
leave
iret
cmp
xor
movs
sbb
jne
push
mov
fcom
sub
jbe
leave
rol
inc
je
in
pop
enter
mov
cmp
fld
adc
inc
leave
or
loopne
mov
xchg
mov
(bad)
cwde
es
push
jnp
loope
retf
in
mov
ror
xor
test
nop
and
cmp
js
pop
xchg
jo
cwde
jb
rcr
adc
cs
jb
je
jo
mov
and
xlat
jl
xor
push
xlat
cmp
mov
xchg
inc
enter
loope
push
pop
pop
loopne
loope
fst
xchg
fsubr
imul
add
imul
push
dec
xchg
and
xchg
into
sbb
push
int
jbe
outs
xchg
test
jl
or
fisttp
je
frstpm(287
in
or
in
loopne
inc
and
fdivr
aad
es
fisttp
cmc
fimul
pushf
mov
test
call
push
add
push
jbe
pop
xchg
loopne
fnsave
mov
out
sbb
fst
push
in
ficom
xchg
mov
jmp
loopne
test
sub
loopne
(bad)
and
cmp
imul
mov
js
loopne
sub
loope
cmp
inc
cs
xor
loop
test
loopne
sub
ret
dec
enter
cwde
and
enter
loope
inc
pop
cdq
nop
and
or
fs
and
in
pop
cs
jb
fistp
sbb
sbb
and
adc
out
xlat
adc
ins
mov
or
or
out
mov
bound
xchg
jbe
mov
(bad)
sbb
add
loope
in
fistp
repnz
push
xor
fist
add
call
sbb
xchg
pop
mov
mov
shr
push
jns
and
outs
pusha
in
ss
pop
hlt
hlt
lock
mov
cmc
call
mov
mov
mov
loope
leave
je
jmp
daa
in
pop
and
(bad)
fist
imul
scas
pop
or
loopne
fldz
inc
mov
and
in
push
mov
mov
fstp
xchg
mov
jnp
xchg
out
mov
lock
add
cmp
in
call
adc
push
rcr
and
sub
in
or
daa
inc
mov
repnz
ja
or
cmp
mov
stc
fsubr
std
xchg
clc
inc
cmps
xchg
mov
jmp
icebp
fcmovnb
ins
leave
adc
out
lds
add
test
movs
add
sbb
cmp
icebp
ja
mov
shl
sub
repz
cdq
xchg
enter
stos
add
leave
xchg
dec
hlt
call
xor
aam
or
les
not
fs
jmp
aam
int3
stos
imul
cmp
cmc
ja
fs
push
js
leave
adc
add
xor
pop
fdivp
sahf
outs
or
sbb
push
dec
jb
lea
shl
pop
test
test
or
rcl
xchg
fst
push
stos
jb
leave
leave
and
je
stc
pop
mov
lods
fnstsw
test
sbb
lock
mov
mov
fcom
stos
je
loopne
cld
ja
and
cmp
push
xchg
push
dec
(bad)
pushf
(bad)
(bad)
push
nop
loope
mov
lods
sbb
call
test
aaa
mov
stos
rcl
or
xchg
pop
pusha
pusha
leave
ja
adc
cmp
shl
xchg
push
std
pop
push
stos
cmp
and
add
ret
mov
in
fdivr
push
dec
push
imul
movs
mov
imul
dec
push
push
mov
jge
or
cwde
lea
sbb
loope
mov
mov
cmp
aam
xchg
cmp
mov
lock
mov
xlat
mov
ret
xlat
lea
outs
xlat
pusha
sub
or
add
push
inc
sub
repnz
sub
add
jmp
je
test
stc
add
ret
dec
(bad)
xlat
gs
imul
and
mov
jmp
fsub
ror
addr16
xlat
es
sbb
aaa
movs
int
je
and
mov
and
sar
and
ja
xchg
add
xchg
add
mov
add
and
(bad)
cmps
or
and
mov
inc
ret
popf
cmp
retf
fist
ins
pop
mov
jmp
xchg
sub
mov
inc
xchg
pop
nop
out
dec
or
daa
js
cmps
test
dec
mov
cs
mov
xor
in
push
test
inc
pop
es
push
cdq
inc
inc
or
fist
fimul
mov
rol
out
mov
cmp
fdiv
lahf
bound
div
mov
into
int3
mov
xchg
sbb
test
mov
pushf
push
mov
sub
mov
mov
push
lods
cwde
mov
movs
sub
xor
test
mov
movs
mov
shr
push
pusha
inc
cmp
adc
add
inc
fiadd
movs
cmp
es
test
or
mov
add
mov
jmp
je
dec
sub
add
xchg
push
jne
sub
fidiv
xor
adc
or
pop
fs
fist
dec
add
cdq
or
jae
leave
out
scas
mov
inc
bound
aaa
(bad)
lock
add
xor
aam
jne
jmp
add
mov
jp
fist
push
(bad)
mov
adc
add
adc
test
repnz
jno
push
add
test
xchg
dec
rol
shl
mov
fs
retf
pushf
adc
push
xchg
sub
fld
retf
mov
jb
add
fs
ja
and
pop
and
add
push
adc
dec
sti
sbb
pop
xchg
cmc
and
sub
jl
nop
fld
xchg
pushf
sbb
adc
shl
xchg
sbb
sub
jmp
js
and
push
aad
cli
mov
shl
xor
push
sub
xor
test
lods
hlt
fmul
sub
dec
sub
sbb
dec
(bad)
push
jmp
aad
shr
sbb
add
inc
mov
inc
arpl
fcomp
push
and
adc
jmp
jl
nop
fdivr
js
fild
cmc
mov
fld
mov
jne
or
imul
add
inc
and
sub
dec
ins
call
(bad)
xor
jo
pusha
pop
sub
and
ins
push
jne
inc
mov
or
leave
jno
dec
(bad)
pop
cs
pusha
pusha
pop
mov
pop
jl
les
aam
xchg
dec
or
push
push
mul
and
jno
push
in
jo
push
(bad)
(bad)
dec
and
sub
test
fcomp
lods
inc
(bad)
ss
je
and
pop
and
daa
adc
jbe
and
sbb
add
hlt
xlat
lahf
sar
test
and
adc
test
mov
test
frstor
mov
pushw
divps
sbb
in
sub
ja
xlat
iret
sub
dec
fsub
fs
loopne
mov
sub
and
pop
pop
jbe
inc
xor
ja
pop
dec
inc
aaa
lea
daa
push
movs
pop
rcr
cmp
fstp
shl
pop
jb
inc
jns
sub
inc
call
retf
gs
inc
inc
cmp
cdq
nop
xchg
xchg
xor
xor
stos
add
mov
dec
and
addr16
fld
dec
mov
adc
cwde
cmp
and
pop
test
adc
outs
fnstenv
or
and
add
fs
mov
mov
ret
adc
push
cmp
inc
arpl
addr16
gs
mov
adc
push
xor
push
rcr
or
or
dec
fadd
jno
adc
mov
xchg
mov
jge
jl
sub
lock
jno
les
push
addr16
pushf
push
fcom
inc
cmp
jmp
(bad)
xor
rol
movs
pop
shl
pop
out
adc
sbb
sahf
or
mov
rol
dec
pop
mov
cmp
pop
xchg
inc
adc
clc
clc
add
add
xor
xchg
sub
sub
xchg
in
mov
les
ret
arpl
bound
mov
mov
mov
pop
sub
je
sar
sub
fs
cmp
pop
sub
cs
dec
push
adc
push
(bad)
addr16
mov
pop
cwde
or
(bad)
(bad)
in
cdq
push
mov
popa
aas
sbb
cs
test
pop
pop
pop
fcos
push
mov
mov
pop
pop
pop
pop
sub
mov
jae
pushf
xchg
lea
iret
repz
jno
arpl
push
in
inc
stos
ds
dec
mov
mov
in
in
mov
fdiv
in
and
push
mov
out
out
movs
sub
or
mov
jns
cld
aas
loopne
jns
pop
or
mov
jns
jns
mov
mov
mov
mov
push
jns
mov
pushf
mov
jae
sahf
int
mov
mov
mov
pushf
stos
sub
pop
cmp
mov
pop
pop
pop
xchg
mov
mov
mov
mov
mov
pushf
pushw
ins
lahf
out
sahf
pop
pop
push
dec
inc
cmp
retf
out
add
and
retf
sub
scas
retf
retf
retf
retf
call
mov
mov
fidiv
fs
push
movs
or
iret
jae
clc
icebp
jmp
ror
repnz
scas
clc
scas
push
mov
or
scas
sahf
out
inc
jne
cmps
push
lods
lahf
cwde
add
out
xchg
mov
or
inc
pusha
lods
adc
fiadd
dec
aas
cmp
sub
lock
sbb
jg
scas
enter
sbb
or
enter
sbb
iret
add
aas
mov
cmp
repz
(bad)
ror
retf
repz
mov
retf
lods
mov
xchg
xchg
ud0
lods
or
xchg
xchg
xchg
scas
pop
scas
je
pushf
xchg
cmp
repz
lea
jno
mov
bound
inc
scas
repnz
pop
stos
aad
repnz
stos
push
in
in
aas
mov
adc
cmp
movs
sub
loopne
sahf
adc
add
aas
retf
retf
add
scas
(bad)
pushf
test
test
retf
retf
retf
fsubr
sbb
xor
dec
test
jns
jns
pushf
mov
mov
jo
out
mov
ds
xor
movs
inc
rcr
or
add
(bad)
sub
(bad)
lods
movs
jns
dec
repnz
pushf
pushw
ins
pop
sar
pop
push
dec
inc
jns
inc
and
aas
and
sbb
sbb
sbb
sbb
push
call
clc
icebp
jmp
sar
mov
fs
sbb
or
movs
add
pushf
cmps
push
lods
lahf
clc
cmp
repz
xchg
mov
das
and
pusha
mov
je
mov
mov
je
iret
jnp
adc
aas
cmp
ds
repz
and
aas
add
xchg
and
lock
and
enter
fs
leave
enter
fs
mov
out
jns
outs
pop
fistp
fcom
retf
dec
sahf
ret
mov
ret
(bad)
adc
cmpxchg8b
jmp
neg
out
and
ja
mov
add
mov
out
ret
dec
adc
mov
push
cmp
mov
ds
cmps
push
adc
mov
adc
adc
enter
inc
xchg
in
and
and
add
sbb
loopne
or
adc
inc
ins
sbb
ins
mov
jns
push
dec
lods
push
mov
call
jg
fs
pop
inc
mov
or
inc
shl
adc
repz
mov
or
imul
rol
movs
fmul
jb
jb
fsubr
jns
jb
cld
or
test
addr16
dec
cs
xor
inc
mov
cmps
repz
inc
jb
jns
push
pushf
push
xor
in
mov
ds
lahf
and
hlt
xchg
test
xor
(bad)
dec
jmp
fisttp
adc
or
adc
mov
pop
stos
mov
movs
inc
mov
cmp
cmp
retf
shl
cmps
sbb
loopne
dec
retf
cmp
mov
sub
push
nop
stos
cmps
ins
jge
mul
imul
jmp
stc
dec
inc
or
xchg
pop
cwde
mov
movs
inc
pushf
pop
addr16
out
sub
adc
inc
cmps
mov
xchg
lea
xchg
mov
fild
fisub
shl
sub
adc
jl
or
and
lahf
or
(bad)
pop
js
lea
inc
dec
lea
sub
or
sti
jo
movs
outs
dec
scas
test
ja
fadd
mov
or
shl
mov
stos
mov
pop
fist
add
add
aad
add
push
xor
xor
and
cmp
out
mov
mov
mov
stos
mov
cmps
dec
add
cmp
lods
mov
rol
fisubr
add
xor
xchg
add
or
push
cld
aas
pop
mov
adc
xchg
add
jg
clc
xlat
repz
push
adc
add
add
xlat
nop
hlt
push
jmp
jbe
xchg
inc
rcr
ins
aas
mov
mov
cmp
inc
adc
xchg
inc
mov
and
ret
xor
clc
sub
pop
and
test
add
pop
(bad)
sub
in
xchg
pop
imul
xchg
loope
test
dec
ja
stos
and
add
fdiv
in
xchg
call
ret
jbe
rcl
cmp
mov
push
xchg
xor
mov
dec
leave
sub
jo
test
jmp
xchg
mov
add
(bad)
add
es
xor
add
popa
out
es
lock
lahf
or
and
shr
adc
cli
xchg
bound
adc
popf
xor
adc
xchg
je
mov
sub
lods
push
leave
mov
ds
cwde
push
loopne
mov
sub
add
sbb
(bad)
(bad)
sub
and
leave
popf
push
and
sbb
inc
fcomp
xor
xchg
mov
sar
(bad)
ins
fwait
xor
rol
cmp
add
imul
loopne
dec
test
ror
or
mov
outs
push
hlt
adc
add
lea
call
push
add
xchg
mov
loopne
rcr
lock
adc
jns
cwde
xchg
xchg
add
inc
cs
add
movs
sbb
or
js
adc
fs
pusha
add
xor
ror
sub
rcl
adc
inc
repnz
sub
sbb
jbe
mov
lahf
sahf
mov
sbb
mov
test
add
daa
sbb
call
mov
push
mov
ss
or
sub
mov
popa
sbb
add
fld
sub
xchg
sbb
clc
leave
je
pop
and
retf
gs
push
lods
mov
adc
cdq
mov
out
int3
mov
ins
cmps
xor
into
pop
pop
mov
push
sub
movs
add
mov
cwde
das
jne
es
cmps
mov
(bad)
cmp
mov
add
add
aad
xchg
pop
mov
inc
int3
daa
test
inc
ins
add
add
mov
adc
call
ins
push
(bad)
fsub
sub
cwde
ret
adc
mov
sbb
ins
push
lods
add
test
int3
nop
sub
test
cmp
and
(bad)
xchg
popf
inc
add
(bad)
sahf
add
adc
stos
bound
inc
cs
inc
inc
jo
jmp
inc
cmp
mov
sub
mov
inc
rcr
mov
adc
call
popf
add
xor
inc
cmp
sub
mov
les
push
sub
sbb
rcr
pushf
jmp
cmp
subps
and
mov
mov
mov
jnp
adc
mov
inc
inc
sub
test
pop
ins
(bad)
test
adc
nop
nop
xlat
pop
add
and
pusha
inc
jo
add
jb
pop
add
mov
and
lahf
inc
add
nop
push
mov
dec
sbb
mov
mov
push
ja
dec
aaa
push
test
sub
fcmovb
call
ret
sahf
jb
imul
mov
outs
dec
lds
xchg
sti
je
add
adc
mov
shl
or
add
add
push
add
or
pop
test
ret
and
pop
xchg
pop
cmp
iret
pusha
mov
push
cmp
aam
aam
test
ins
imul
sbb
pop
sub
pop
or
das
mov
inc
inc
jg
aam
xor
adc
mov
lahf
mov
sbb
or
into
dec
jmp
dec
add
adc
ror
mov
xor
inc
add
inc
enter
or
dec
inc
dec
call
dec
pushf
inc
add
inc
nop
nop
sbb
inc
arpl
and
nop
xchg
pushf
add
adc
pop
stos
and
add
sub
push
inc
add
mov
pop
push
das
push
jo
lahf
sub
xchg
cmp
les
dec
call
out
dec
inc
ror
rol
add
jmp
inc
or
loope
retf
sbb
or
in
(bad)
shl
scas
dec
stc
mov
cmps
jbe
scas
jmp
xchg
je
lahf
push
mov
xchg
push
push
call
call
call
jno
call
push
retf
cli
jno
cmp
fiadd
aaa
sbb
push
adc
dec
push
lock
retf
adc
in
jmp
movs
mov
xor
(bad)
mov
pusha
lods
(bad)
movs
mov
in
push
xchg
in
in
and
add
pop
xchg
cmp
rcl
adc
mov
or
push
and
mov
mov
jo
js
mov
push
and
mov
jmp
adc
push
shl
cmp
xlat
test
adc
adc
int
cmps
cwde
push
lahf
in
add
cwde
cwde
rol
inc
jg
sbb
pop
jmp
push
stc
(bad)
push
adc
pop
dec
call
ror
inc
pop
push
adc
sbb
adc
dec
xor
add
inc
push
shr
xchg
sub
pop
mov
push
mov
into
jmp
mov
aad
and
les
add
xchg
push
pop
push
xor
shr
dec
pushf
fsubp
call
jg
mov
push
add
push
jecxz
dec
arpl
pop
push
shl
nop
ret
adc
sbb
inc
dec
lds
int3
pop
dec
mov
inc
inc
mov
add
add
xchg
nop
push
sub
rol
pop
sub
js
pushf
pop
pop
add
cmp
sub
xchg
or
mov
mov
stos
adc
pop
cmp
add
loope
test
dec
sbb
daa
add
cmp
cmc
fld
add
mov
arpl
sbb
call
jb
push
cli
pop
fisttp
inc
arpl
inc
clc
fsubr
mov
lahf
lock
lock
or
push
icebp
or
dec
add
or
pop
cld
nop
icebp
or
ins
add
repnz
add
add
les
add
mov
dec
inc
scas
dec
lea
add
scas
fsubr
std
shl
mov
lods
add
cmp
fist
scas
lea
xchg
push
mov
and
pop
inc
gs
or
cmp
cmp
and
adc
sub
enter
sbb
xchg
sub
pop
add
adc
pop
and
cld
adc
and
loop
popa
inc
pop
xchg
ficomp
dec
dec
mov
pushf
mov
xchg
fimul
aas
mov
xchg
push
loopne
sbb
xchg
push
pop
or
gs
cmps
push
pop
nop
xchg
and
ins
add
nop
and
or
lea
rep
mov
sbb
xlat
in
mov
out
aam
add
nop
les
add
push
adc
dec
mov
jne
adc
xor
mov
dec
jmp
mov
int3
xchg
je
(bad)
add
xor
or
in
loop
mov
and
or
adc
adc
jmp
xchg
cmps
mov
js
mov
les
in
call
jge
xchg
xchg
push
and
cmp
loopne
xchg
dec
test
dec
adc
or
popf
out
push
cmp
mov
add
ret
adc
mov
in
push
jmp
fldenv
sbb
and
rol
push
push
push
xor
jmp
test
aad
push
jno
out
fcomp
stc
rcl
mov
fcomp
mov
mov
add
xlat
pop
not
jmp
push
stos
adc
movs
in
xchg
das
and
aas
dec
xchg
test
cmp
mov
in
mov
jne
sbb
cmp
iret
retf
lock
in
sbb
pop
pop
gs
or
imul
or
and
mov
mov
mov
pop
sub
dec
cwde
inc
je
xchg
inc
dec
push
jne
cli
add
jl
cs
pop
(bad)
mov
inc
sbb
ins
push
pop
adc
add
(bad)
aas
pop
jns
or
mov
inc
outs
fldenv
mov
mov
pusha
inc
dec
dec
or
add
push
adc
xchg
or
push
dec
in
push
dec
push
loopne
mov
cwde
push
iret
bound
call
loopne
movs
movs
and
movs
xchg
add
and
mov
in
xlat
cmp
add
scas
mov
inc
or
inc
cwde
or
jecxz
and
sbb
jbe
mov
inc
ins
loope
loopne
jmp
xor
ins
push
rol
inc
mov
fsubr
dec
mov
loopne
push
push
and
daa
in
and
(bad)
inc
mov
push
dec
jnp
push
inc
mov
aam
or
pusha
mov
pop
mov
cmp
lods
dec
dec
(bad)
sbb
repnz
xor
pushf
inc
(bad)
(bad)
out
pop
and
inc
dec
mov
lea
rcr
test
cmps
adc
movs
add
xchg
(bad)
je
mov
sbb
push
mov
lea
je
add
enter
mov
adc
and
jnp
push
cmp
and
sub
sub
js
rol
xchg
pop
add
cmp
jb
inc
inc
sub
rcl
cmp
xchg
jl
aaa
ds
adc
xor
xor
push
push
mov
mov
mov
fs
xor
loope
adc
dec
call
dec
add
pop
add
imul
sub
pusha
int
xor
sbb
in
pop
push
xor
xor
fsubr
call
add
cdq
xchg
ret
repnz
loope
call
xor
and
leave
adc
push
popa
mov
ja
push
pop
rol
stos
push
inc
or
retf
(bad)
ins
add
mov
int
movs
sar
mov
or
sub
or
(bad)
les
xchg
nop
push
fisttp
out
stos
add
imul
mov
sbb
iret
push
mov
mov
adc
add
mov
xor
and
ins
retf
adc
js
stc
add
enter
pop
mov
xchg
inc
jb
sbb
js
push
leave
xchg
stos
add
adc
retf
mov
stc
or
je
inc
jne
test
inc
sbb
or
or
add
ins
rcl
dec
inc
fadd
call
neg
sbb
sub
dec
jmp
(bad)
fcom
pop
movs
xchg
js
push
sub
and
cmp
pop
sub
and
loopne
cmp
movs
popf
or
adc
and
or
sbb
mov
or
xchg
and
ror
(bad)
push
pop
pop
fld
cld
pop
sub
add
cmp
rcl
push
lock
mov
mov
adc
or
push
mov
or
add
lods
mov
mov
mov
fcomp
adc
rol
das
rol
add
jns
adc
sbb
(bad)
loopne
(bad)
int
inc
sti
fdivr
test
outs
cmp
stos
dec
dec
adc
cmp
mov
xor
mov
sar
cmps
mov
ret
jle
mov
mov
fnsave
push
adc
lock
test
sub
bound
lea
mov
jbe
adc
(bad)
call
push
adc
rcl
test
jnp
or
and
dec
in
jmp
(bad)
repz
fcmove
add
fsubr
dec
loopne
pop
cwde
jb
pop
fdivrp
push
je
fs
bound
icebp
ret
xor
movntq
xor
es
pop
xchg
mov
push
fdivr
or
neg
jecxz
add
adc
pop
mov
popa
ror
jmp
or
sbb
push
pop
adc
adc
sbb
mov
retf
enter
jl
xchg
or
call
xchg
dec
enter
mov
cs
mov
sub
and
adc
test
out
ja
lock
push
fild
ret
jb
dec
enter
movs
enter
push
movs
movs
adc
test
inc
popf
xchg
or
jo
and
lock
adc
mov
sbb
jmp
push
addr16
mov
loopne
lock
aam
mov
je
test
lea
push
dec
jo
js
pop
cmp
or
jb
mov
fsub
cdq
xchg
retf
ja
popa
cwde
xchg
sbb
mov
push
popf
out
jnp
push
cli
inc
dec
add
(bad)
adc
mov
sbb
into
loope
adc
test
adc
sub
or
cmp
push
cmp
or
aad
or
pminsw
mov
mov
sbb
loope
mov
mov
sbb
sbb
sbb
cld
pop
(bad)
jb
xor
aaa
and
and
xchg
retf
cmp
cwde
mov
sbb
jb
push
cmp
je
mov
jbe
mov
dec
mov
fs
add
jb
jae
ins
sbb
repnz
icebp
sbb
mov
push
jae
test
out
mov
mov
xchg
ret
jne
inc
pop
adc
mov
add
out
scas
fimul
imul
dec
xchg
add
add
mov
in
or
dec
gs
dec
cs
pusha
fadd
xchg
aas
ins
or
movs
sbb
cmp
add
rcr
inc
ja
addr16
inc
xor
adc
inc
xchg
int
inc
dec
mov
movs
add
ins
or
mov
fcomp
adc
mov
inc
sar
fadd
or
pop
retf
sub
mov
int3
push
lods
push
aad
les
add
(bad)
mov
adc
movs
lahf
(bad)
in
mov
sbb
(bad)
adc
xor
bound
push
cmp
mov
adc
aam
aas
outs
ins
add
mov
cli
mov
or
dec
push
in
ins
pushf
daa
lea
ss
lahf
pop
pop
inc
push
inc
aad
test
pusha
xor
mov
movs
xchg
inc
pop
ret
cs
mov
dec
or
pusha
mov
daa
fndisi(8087
and
push
es
scas
lahf
je
leave
xor
(bad)
push
mov
nop
add
fcomp
movs
sub
cmp
aad
rol
mov
(bad)
aas
ret
pusha
stc
push
pushf
mov
add
gs
push
lock
imul
mov
pop
pop
test
in
jne
sbb
push
jns
jo
test
jg
and
dec
test
push
sub
imul
add
add
arpl
sbb
jmp
add
in
lahf
pop
adc
adc
rol
in
repnz
sbb
xchg
inc
ins
adc
push
mov
(bad)
pop
or
dec
sub
sub
sub
xor
mov
dec
(bad)
cs
push
addr16
sub
sbb
movs
fcmovbe
cld
lock
sbb
pop
loopne
adc
and
iret
xchg
inc
dec
fst
push
lods
mov
bound
add
xchg
retf
sbb
mov
or
cmp
dec
mov
xor
lods
mov
and
and
xchg
call
nop
jo
and
xchg
lea
mov
sub
mov
push
nop
dec
into
dec
jmp
mov
movs
popa
cmp
es
cs
mov
sub
sbb
test
popa
imul
mov
dec
aam
cmp
push
fist
lock
int
fild
xchg
sub
xchg
pop
mov
mov
test
call
pop
mov
add
iret
pusha
(bad)
mov
imul
hlt
inc
imul
xchg
cmc
xor
cmp
push
add
xchg
inc
js
iret
outs
sbb
push
cmp
inc
inc
add
sub
in
in
js
int3
movs
dec
test
or
in
cwde
popa
rol
dec
jae
dec
scas
loope
shr
mov
pop
inc
mov
lods
aaa
pop
xor
xor
mov
jg
jl
xor
mov
xor
pop
pop
repnz
push
pop
pop
adc
push
mov
shl
or
sar
nop
cmp
or
in
mov
popa
inc
mov
outs
mov
pop
sub
xor
pop
ins
add
enter
adc
cmps
inc
sbb
xchg
sbb
scas
mov
pop
jp
sub
mov
push
or
sbb
sub
cwde
mov
jns
arpl
arpl
add
sub
mov
xor
outs
cs
mov
in
fmul
test
call
js
mov
lods
fdiv
mov
mov
mov
fwait
mov
test
daa
test
popf
mov
fstp
pusha
loopne
stos
loopne
test
pusha
and
inc
pop
lahf
dec
mov
sbb
inc
sbb
sub
adc
sub
mov
mov
pop
cld
adc
adc
pop
cmp
push
in
push
imul
repnz
and
movs
lods
test
movs
loope
mov
adc
loope
mov
mov
movs
lahf
pop
test
mov
push
mov
or
ins
imul
inc
or
imul
sub
mov
mov
sub
ins
jle
sbb
jnp
pop
add
inc
mov
jae
ret
outs
or
inc
inc
retf
movs
xchg
sbb
fistp
add
lods
xchg
and
or
js
pop
add
sti
adc
inc
(bad)
cmp
xchg
mov
enter
loopne
bound
test
test
adc
jno
xor
mov
bound
push
std
and
(bad)
stos
push
call
mov
dec
loopne
pop
or
sahf
and
in
sti
adc
test
fisub
cmp
push
call
pop
push
mov
pop
mov
pop
add
out
pop
sub
sub
fdivr
and
lods
inc
sub
push
mov
cwde
cs
adc
dec
jmp
aam
add
jne
cmps
movs
lods
(bad)
sbb
lds
fisttp
mov
out
test
push
sub
bound
sbb
lods
jo
mov
(bad)
pusha
sub
and
pop
add
mov
and
or
gs
mov
mov
add
ds
sub
mov
xchg
adc
in
lods
pop
ja
add
mov
adc
ja
mov
xlat
shr
aad
jo
push
scas
mul
adc
dec
inc
jnp
xor
in
cwde
sbb
pop
aas
add
push
fisttp
add
sbb
movs
lahf
aas
call
in
call
sahf
push
sub
mov
cmp
jg
cmp
fmul
je
ffreep
push
jo
pop
fbstp
int
repnz
sbb
mov
jmp
int3
and
pop
cmp
mov
xchg
int
lock
inc
ret
imul
cmp
cmp
add
sbb
cmp
mov
aaa
call
jmp
nop
mov
and
retf
aam
cmp
adc
outs
popa
lock
adc
das
sbb
leave
push
jmp
sbb
leave
rol
aas
pop
call
cmps
ins
add
xor
ds
pop
ret
mov
adc
out
mov
pop
cmps
add
mov
add
shl
mov
(bad)
dec
mov
aas
cs
popf
mov
fidiv
popa
xor
cmp
int3
pop
pop
lods
in
out
xor
xor
pushf
mov
or
sbb
xlat
loopne
les
mov
ror
xchg
ja
sub
sar
add
pop
outs
int3
mov
ins
imul
inc
jge
push
xor
dec
lahf
mov
push
fmul
call
cmps
adc
sub
test
jmp
push
cmps
mov
cmp
cmp
mov
mov
scas
outs
mov
jnp
mov
push
and
add
call
mov
mov
in
rcr
adc
lea
and
jo
pop
and
shr
mov
ret
xchg
and
je
leave
add
xor
das
pop
add
xchg
and
sbb
mov
adc
xchg
ja
or
jl
sbb
adc
das
pop
push
cmps
lods
js
lea
sub
ja
sbb
sahf
loop
gs
daa
hlt
mov
mov
aam
sbb
mov
mov
sub
(bad)
jp
movs
inc
popf
fsub
pop
fimul
loopne
inc
leave
in
lods
test
jle
out
pop
jecxz
test
xchg
test
cmp
lock
rol
mov
imul
sbb
jmp
inc
daa
(bad)
xchg
jmp
mov
mov
jae
mov
cmc
stc
add
xchg
ins
jae
outs
mov
adc
pop
push
push
mov
lods
test
sub
sbb
xchg
test
xchg
(bad)
push
mov
cmp
mov
adc
add
push
mov
(bad)
shl
or
in
adc
push
fisub
sbb
mov
add
sahf
xor
sub
add
loopne
loopne
push
iret
add
dec
(bad)
sbb
pop
push
std
fstp
retf
adc
cwde
add
jno
or
into
and
sub
lods
dec
push
cli
and
mov
rol
inc
imul
pusha
xchg
adc
sub
pop
push
std
bound
fnsave
sub
cli
in
enter
pusha
std
popa
dec
add
enter
sbb
sbb
adc
dec
jnp
ret
add
dec
jp
jl
and
mov
fdiv
or
dec
xchg
or
sbb
clc
(bad)
pop
sub
sbb
cmp
dec
adc
and
mov
add
pop
xor
or
mov
jnp
push
xchg
push
(bad)
cmp
retf
and
and
pop
adc
clc
cld
mov
je
add
jne
shl
adc
stc
push
repnz
pushf
fdivr
popa
xor
lea
dec
lea
add
adc
js
shr
mov
scas
jmp
icebp
pop
or
lods
mov
or
es
or
cmp
and
ds
and
movs
xchg
movs
sar
sbb
dec
xchg
div
jne
mov
mov
cmp
jmp
int3
dec
in
pushf
jmp
mov
push
sub
and
jb
das
imul
enter
push
sbb
lds
nop
sbb
dec
sar
dec
pushf
ret
push
movs
adc
pop
or
mov
(bad)
int
lea
sub
pushf
jmp
xor
or
sbb
sbb
sbb
adc
call
push
test
adc
neg
add
inc
int
aaa
or
enter
adc
or
enter
or
or
jb
or
add
jno
xor
sti
pop
enter
fs
ret
adc
dec
xchg
and
and
repnz
add
mov
adc
(bad)
mov
sbb
pop
mov
mov
add
inc
mov
mov
mov
or
mov
out
mov
dec
dec
pop
jnp
sti
lock
sti
add
stc
mov
mov
mov
and
pop
bound
mov
jnp
mov
test
jnp
sub
sub
pop
push
movs
sub
fwait
in
and
mov
pusha
movs
sub
adc
xchg
sbb
sub
cmps
les
inc
loopne
xor
or
sub
mov
sub
add
add
jo
enter
gs
in
add
cmp
push
loopne
add
cwde
mov
xor
repnz
jae
popa
fsub
xor
aam
out
sbb
push
jae
cdq
movs
mov
cmp
cdq
inc
cs
add
and
cmp
sub
jg
or
push
push
int
repz
push
or
mov
dec
rcl
jb
xor
sub
sub
pop
cs
enter
test
leave
and
and
iret
add
and
add
and
or
rol
in
mov
mov
movs
add
push
ins
dec
mov
adc
pop
movs
xchg
dec
mov
inc
xor
add
jo
lds
aam
cmp
sbb
dec
fisub
mov
sub
stos
rcr
cmp
call
xchg
add
mov
daa
mov
jecxz
nop
cmovl
xor
aad
cli
xchg
or
xchg
or
mov
mov
out
out
ret
mov
ins
lods
data16
xchg
aam
in
imul
push
ret
inc
jmp
push
xchg
ins
lods
add
dec
retf
loopne
push
loop
xchg
lahf
mov
icebp
dec
push
dec
cs
cmps
pop
pop
mov
movs
jb
xor
or
inc
mov
enter
mov
xor
and
or
cwde
pop
lahf
fsub
lahf
out
int3
cmps
popa
sub
push
and
mov
xchg
sbb
sub
nop
mov
mov
or
jl
in
jnp
sbb
(bad)
shr
or
inc
addr16
mov
cmp
pusha
ret
pop
and
add
in
adc
inc
nop
pop
push
jmp
and
adc
scas
cmp
pop
dec
add
push
jge
sbb
adc
adc
or
int
(bad)
movs
jge
leave
pop
test
(bad)
sahf
inc
call
lods
lds
sub
add
test
add
and
mov
mov
inc
loopne
pop
enter
jle
xchg
iret
shl
mov
je
sub
scas
in
jmp
sub
dec
into
pop
adc
dec
xchg
pop
retf
add
pushf
gs
rol
cld
mov
inc
arpl
movs
arpl
jo
js
arpl
sbb
inc
mov
inc
cmp
arpl
adc
mov
mov
mov
sti
or
add
inc
sbb
nop
daa
int3
mov
or
mov
les
push
popa
jns
push
out
or
and
cmc
inc
ja
or
pop
mov
rol
mov
pop
sti
push
mov
mov
retf
add
mov
and
cmc
dec
dec
sub
adc
or
mov
loope
movs
sar
xchg
mov
into
pop
sub
or
lea
add
mov
push
mov
cmc
pop
pop
lock
adc
cmp
ins
rcl
pxor
push
dec
and
fisub
test
pop
or
jb
shl
xor
sub
xor
mov
lock
mov
nop
xchg
push
int
sbb
dec
stos
jne
pop
ret
popf
or
nop
pusha
in
and
mov
and
inc
and
mov
aaa
imul
inc
and
sub
pop
leave
rcr
(bad)
mov
pop
fadd
push
ins
pusha
add
add
add
mov
js
lock
xlat
dec
add
sti
mov
push
mov
jmp
push
fsubr
add
mov
in
push
sbb
inc
sub
lea
pop
test
inc
add
mov
or
mov
jnp
dec
loope
pop
jp
mov
cmp
or
mov
sbb
ins
loopne
add
or
cmp
push
push
dec
sbb
int
popa
imul
dec
lods
push
ss
cmp
add
xchg
addr16
add
or
cdq
and
or
icebp
inc
sub
pop
dec
mov
xor
data16
ss
sti
and
sbb
jnp
lock
nop
xchg
aam
inc
jnp
in
lock
pop
sbb
mov
(bad)
push
jae
es
pop
sub
jp
loope
pusha
sub
out
lea
popf
es
in
add
movs
mov
es
jns
push
mov
mov
cli
xor
adc
std
inc
aas
push
sbb
inc
aas
push
add
xor
xor
pop
inc
(bad)
ds
(bad)
cmp
adc
fisttp
push
sti
and
or
adc
dec
cld
jns
push
mov
or
scas
pusha
inc
jb
nop
and
sti
cmp
xor
in
or
cmp
mov
xor
xor
xor
jb
bound
mov
fild
jge
sub
or
xchg
jl
xchg
and
enter
and
push
push
push
aad
dec
xor
mov
es
mov
xchg
mov
push
and
mov
adc
mov
mov
int
mov
push
out
xchg
and
mov
inc
pop
(bad)
movs
mov
sar
fsubr
movs
loopne
jo
jecxz
adc
stos
pusha
test
adc
mov
cmp
fsubr
ja
test
sti
movs
pop
xchg
sbb
push
movs
xchg
cmp
jge
jbe
pop
or
xor
or
and
mov
adc
aad
add
push
mov
jb
adc
add
inc
add
sub
push
aam
jns
in
or
xor
dec
lods
or
fdiv
retf
inc
test
mov
popf
gs
sar
outs
jmp
jmp
das
mov
loopne
imul
inc
or
jmp
cdq
in
xchg
aam
cdq
xor
fsub
xchg
mov
inc
movs
add
cmps
or
shr
dec
lods
pop
fdiv
adc
xor
xor
push
ffreep
pop
rcr
inc
mov
add
dec
mov
std
adc
(bad)
inc
add
pop
jae
xchg
adc
mov
pusha
push
inc
mov
sbb
call
test
pusha
mov
nop
std
xchg
ret
inc
cmps
and
adc
imul
xor
mov
pusha
mov
rcl
inc
fild
cmp
jb
cdq
cmp
pop
add
cmp
xor
add
xchg
aam
fwait
imul
push
adc
les
mov
inc
push
push
scas
add
mov
les
xchg
hlt
or
sbb
fidivr
fisubr
js
adc
adc
loope
test
pop
mov
loope
(bad)
add
mov
jmp
or
jmp
xor
pop
fisttp
add
push
mov
jns
mov
mov
fcmovnb
sbb
cmp
push
movs
test
inc
mov
adc
push
ins
mov
mov
xchg
inc
int
add
xchg
push
or
aaa
adc
pop
adc
in
sbb
mov
stos
test
jns
pop
jb
dec
and
inc
inc
mov
or
add
inc
dec
inc
cmp
cmp
std
jb
je
xor
xor
inc
pop
dec
xor
xor
movs
adc
push
gs
or
or
cmp
test
ret
and
movs
enter
ja
outs
int3
std
sbb
sbb
or
fwait
adc
mov
cs
jbe
sub
or
adc
adc
enter
retf
sbb
retf
sub
inc
jmp
pop
mov
pop
pop
call
ret
jb
sbb
and
and
pop
outs
jecxz
and
and
xchg
inc
add
shr
ins
sub
and
mov
mov
int3
pop
call
or
leave
popa
inc
cmp
push
and
or
cmp
inc
or
jmp
push
movs
pop
mov
fs
adc
jo
stc
xchg
mov
je
cmp
add
nop
xchg
setl
lds
pop
enter
mov
sub
nop
popa
xlat
cmc
or
loopne
adc
dec
sub
in
and
scas
pop
lock
or
inc
xchg
sub
scas
jl
push
pusha
in
add
cmp
adc
push
dec
lds
pop
push
dec
mov
mov
jmp
and
push
and
jmp
or
in
inc
imul
pop
inc
mov
cmp
mov
fs
cwde
sbb
es
sub
into
xchg
ror
push
lahf
sbb
xchg
test
jbe
das
aaa
push
and
xchg
mov
cmp
aaa
mov
mov
pop
(bad)
cmc
fwait
pop
cmp
ins
adc
push
ins
ja
inc
or
inc
add
clc
fimul
mov
das
mov
rcr
test
loopne
lods
adc
ror
pusha
loope
cwde
mov
jge
mov
dec
ins
sub
test
adc
in
xchg
cmp
and
adc
cmp
and
(bad)
in
push
or
add
enter
cmp
jbe
sub
inc
xchg
add
loope
in
scas
dec
dec
mov
dec
add
mov
idiv
push
dec
mov
jp
aaa
xchg
clc
repz
aaa
mov
or
inc
(bad)
std
mov
mov
fimul
or
aam
mov
cmp
adc
lods
xlat
or
test
push
jmp
test
fst
ds
xchg
cmc
push
adc
inc
inc
mov
xchg
jns
xchg
inc
call
js
movs
or
mov
inc
xor
push
aaa
dec
dec
jae
inc
js
mov
xchg
push
sbb
cmp
inc
dec
and
aad
and
push
mov
adc
adc
add
cmp
mov
imul
inc
mov
sub
out
add
clc
cli
cld
jb
dec
bnd
pushf
pushf
cwde
mov
xor
add
ret
jo
add
stc
mov
push
cmp
sbb
mov
xchg
retf
jmp
mov
add
outs
aas
imul
adc
pop
or
pushf
mov
xchg
mov
xor
jno
sub
js
jg
data16
ds
retf
and
sar
xchg
nop
add
sbb
outs
xchg
xchg
pop
data16
mul
mov
sbb
lahf
and
push
or
xchg
in
cli
pop
jb
jmp
mov
xor
cmp
push
cmp
inc
pop
cs
pop
pop
mov
div
xor
mov
push
dec
mov
and
xchg
iret
and
xor
xchg
sbb
xor
stc
repnz
mov
clc
stc
xor
sbb
test
add
sbb
sub
and
sub
and
int3
stc
ret
popf
inc
es
cmp
and
mov
lods
pop
pop
xchg
inc
mov
es
mov
and
jl
and
enter
mov
sub
ret
cmp
je
xchg
xchg
xchg
retf
adc
jns
push
mov
gs
push
cmc
ret
mov
jae
inc
mov
dec
js
push
push
sub
les
pusha
adc
dec
dec
mov
stc
mov
pop
xor
clc
test
xor
loopne
enter
and
push
inc
sbb
push
lods
push
jno
fild
ret
gs
mov
es
lods
fs
inc
push
push
xchg
fs
pusha
and
inc
add
shl
adc
pusha
lods
xchg
inc
bnd
pusha
clc
pop
xor
jb
test
or
and
xchg
retf
pop
pop
pop
and
sbb
and
rcr
push
pop
push
(bad)
int3
sbb
gs
retf
aas
and
and
es
adc
and
jo
inc
call
cmp
jecxz
shl
xor
loopne
sbb
dec
daa
or
or
sbb
xchg
and
pop
mov
leave
(bad)
movs
(bad)
pop
mov
mov
pop
aas
pushf
test
inc
inc
sub
pusha
adc
cdq
nop
out
cli
test
pushf
in
bound
enter
dec
div
enter
cmp
cmp
rol
adc
mov
jb
pop
(bad)
int3
js
jo
cld
and
out
or
mov
adc
sbb
pop
inc
inc
push
or
xor
arpl
rcr
sub
add
movs
repnz
mov
pop
pop
adc
mov
mov
add
jg
xor
add
(bad)
neg
mov
mov
sbb
jne
or
or
sbb
ror
nop
and
and
enter
mov
pop
adc
shl
inc
push
add
ror
jne
cmps
add
adc
push
jns
int3
aas
inc
ins
mul
push
ins
leave
div
lods
push
pop
ins
jbe
sbb
loope
retf
cld
xor
cs
pusha
jne
adc
popa
lods
nop
out
sbb
sbb
sub
xchg
xor
idiv
push
dec
adc
in
cmc
(bad)
call
cmc
sbb
or
pop
fs
cmc
adc
jo
or
sub
adc
cmc
cs
retf
adc
xor
add
hlt
adc
xor
(bad)
xor
das
dec
ror
aas
retf
call
inc
push
stos
inc
jns
inc
cmp
sbb
xor
retf
jne
xchg
mov
inc
mov
mov
je
aad
mov
push
ficomp
xchg
cld
push
sub
pop
pusha
dec
stos
xchg
inc
or
add
imul
in
call
sbb
push
daa
lahf
dec
add
sub
imul
sbb
jl
daa
jbe
inc
pusha
stc
cmp
es
sub
sub
xchg
jle
xchg
ret
jns
leave
sbb
inc
mov
stos
adc
pusha
les
sub
sar
lods
jp
push
mov
xchg
xor
retf
shl
test
pop
xor
pusha
jmp
or
cmp
out
jmp
push
or
loopne
imul
sbb
cld
rcl
sub
ret
nop
xchg
jl
aas
ins
sahf
lock
shl
pop
(bad)
pusha
xchg
outs
and
mov
enter
sub
inc
es
inc
test
sub
ficom
push
popa
jle
push
enter
sbb
pop
xor
mov
xor
rol
dec
inc
pop
sar
jb
dec
mov
mov
or
dec
jnp
push
or
dec
ret
cli
or
ret
rcl
cmp
xchg
arpl
xchg
lods
sbb
xor
stos
add
sbb
adc
xchg
fld
xor
push
mov
mov
push
xor
sub
jo
cs
or
leave
and
out
fiadd
mov
sbb
dec
cdq
or
adc
xor
or
lahf
test
or
inc
mov
lock
addr16
adc
shl
sub
test
inc
jae
xlat
jb
fs
shr
aam
pop
sub
loope
inc
push
push
in
nop
mov
mov
xlat
sbb
pushf
dec
xchg
retf
es
nop
sbb
adc
xor
popa
adc
enter
ins
sbb
or
or
fild
movs
lahf
outs
sbb
sbb
pushf
jmp
or
les
xchg
fimul
mov
in
sub
or
adc
stos
mov
pop
cmp
movs
add
cmp
and
pop
ja
cs
dec
xor
adc
add
jae
movs
dec
rcl
and
ss
gs
pop
or
or
pop
cmp
test
mov
mov
seta
or
or
sar
push
out
stc
push
addr16
stc
jnp
outs
dec
cmp
mov
sub
push
mov
sub
adc
push
sub
jno
add
cmp
in
mov
dec
inc
jl
mov
mov
movs
sbb
mov
xchg
cdq
mov
xlat
pop
test
or
pop
in
push
pop
ds
mov
push
fadd
cmp
and
jge
imul
jmp
adc
sub
push
nop
out
sub
in
push
imul
sahf
or
dec
out
jecxz
retf
mov
and
pop
dec
lods
fcom
push
fimul
lea
rcr
jmp
test
jo
mov
rcr
add
cmp
jl
jmp
test
pop
pusha
not
outs
pop
sbb
lahf
ret
sbb
jo
jbe
pop
repnz
push
fcmovne
out
in
iret
pop
sub
ins
cmp
movs
xchg
push
xchg
mov
mov
std
or
lods
jnp
and
dec
xchg
xchg
out
mov
add
xchg
mov
pop
sbb
retf
in
xor
pop
and
pop
enter
push
test
mov
cdq
rol
std
pop
xor
xchg
or
mov
in
data16
and
dec
movs
movs
fadd
in
mov
mov
xchg
and
mov
in
mov
inc
cs
retf
inc
dec
inc
xchg
gs
sbb
aaa
nop
cdq
call
ins
adc
xchg
ins
ins
sub
xor
push
cdq
adc
dec
push
sbb
xchg
retf
inc
inc
cwde
pushf
retf
in
mov
sbb
mov
pushf
aaa
cwde
adc
cld
xor
and
jb
cwde
pushf
xor
int3
xchg
sbb
mov
adc
adc
sbb
xchg
retf
gs
xor
movs
in
mov
push
mov
retf
sub
aaa
mov
adc
adc
pop
xor
mov
mov
cmp
adc
fld
dec
adc
in
sub
pop
and
and
or
pop
enter
adc
and
push
nop
add
sbb
push
les
dec
in
test
xchg
retf
in
sbb
sbb
mov
mov
sbb
pop
enter
aaa
mov
mov
mov
add
dec
push
nop
mov
sbb
in
and
adc
mov
mov
in
or
mov
add
fs
sbb
add
in
data16
adc
and
cmp
pop
and
add
outs
test
push
adc
pusha
sbb
inc
aaa
loopne
adc
gs
sbb
loopne
or
and
pop
jb
mov
adc
sub
add
pop
cmp
xchg
or
add
lock
adc
in
pop
push
xchg
in
cs
nop
dec
push
call
inc
adc
and
enter
ins
xor
lods
std
popa
xor
push
rcl
and
cmp
nop
xchg
rcl
aaa
pop
xchg
sbb
sbb
cld
lods
sti
and
or
add
xchg
cmps
mov
gs
mov
xchg
dec
and
jb
enter
in
nop
mov
xor
add
je
xchg
pop
push
les
mov
and
aaa
push
sbb
in
mov
cmp
rcl
jns
add
pop
adc
jmp
mov
and
call
jmp
jno
rcr
adc
movs
in
add
and
pusha
add
sbb
mov
adc
push
cmp
popa
ins
test
dec
mov
mov
xchg
sub
inc
test
lock
ins
or
mov
push
push
popf
out
inc
inc
sbb
and
mov
xor
or
sub
fcmovne
fbld
dec
sar
sub
adc
mov
xor
dec
adc
imul
fwait
jae
dec
and
movs
in
sub
jo
fcomp
addr16
ret
sub
ret
nop
daa
push
fcom
pop
fcmove
in
shr
add
lahf
mov
mov
shl
dec
cmp
add
cmp
ins
dec
push
push
leave
(bad)
cmp
push
xor
aaa
mov
xchg
or
popf
mov
xor
cwde
sbb
cmp
dec
loope
stos
sbb
cli
jge
popf
int3
sbb
enter
enter
inc
inc
push
in
push
into
adc
cmp
jg
adc
inc
outs
sub
(bad)
mov
iret
inc
fidiv
or
mov
xchg
push
pop
(bad)
adc
push
push
add
pop
fcomp
loopne
cmp
clc
adc
fnop
cmc
or
add
mov
ins
int
in
mov
cmps
imul
or
clc
adc
mov
jg
xor
lods
inc
xor
push
push
xor
mov
bound
jae
data16
cmc
(bad)
shl
inc
jne
add
cmp
cwde
shr
mov
sahf
mov
add
pop
add
dec
jg
jnp
sub
outs
(bad)
leave
call
add
das
das
xchg
jno
xlat
jg
in
dec
push
call
pop
pop
adc
stos
mov
xor
inc
and
jo
fiadd
aam
sbb
dec
add
stc
shl
jmp
das
xchg
xor
rcl
fisttp
sub
push
dec
mov
pop
call
mov
movs
jae
loopne
movs
test
adc
loop
movs
mov
test
mov
movs
dec
scas
stos
push
nop
add
scas
data16
mov
cmps
int3
lahf
aam
sub
and
push
add
les
push
movs
or
nop
stos
sbb
int3
inc
cmp
test
arpl
fidivr
ror
mov
push
int3
mov
or
ret
push
imul
pop
addr16
add
loope
cli
(bad)
(bad)
ja
movs
jne
push
pusha
adc
popa
add
retf
sar
and
hlt
mov
sub
gs
xor
loope
and
jb
test
push
inc
stc
jbe
or
pop
lock
loopne
sbb
enter
sub
jp
or
shl
push
stc
mov
add
sbb
cdq
dec
int3
pop
lock
add
xchg
add
(bad)
fdivr
mov
push
fdiv
adc
inc
xchg
add
jb
add
leave
sbb
int
rcr
cwde
dec
jecxz
and
aam
push
pop
outs
aaa
pop
and
mov
and
or
jmp
mul
loope
(bad)
xchg
push
mov
imul
jp
dec
stos
imul
imul
jae
xor
fsubr
xor
call
jmp
scas
(bad)
scas
aad
clc
stos
jns
pop
lods
pusha
fldcw
shl
xlat
stos
lea
test
int
pushf
jecxz
mov
jbe
clc
adc
into
js
xor
sbb
call
fistp
add
sbb
inc
fucomp
pop
and
add
and
add
out
or
(bad)
or
add
lock
das
(bad)
test
in
loopne
mov
add
cmp
push
push
fmul
cs
add
lahf
adc
mov
test
add
std
xchg
call
imul
test
stos
ins
loopne
and
jg
mov
adc
sub
loope
mov
mov
add
jne
xchg
or
add
aam
inc
adc
imul
in
push
inc
mov
test
pusha
mov
fist
xchg
sbb
out
push
push
ret
fimul
dec
lods
cmps
dec
jp
adc
dec
jmp
sub
out
in
les
jmp
xchg
push
add
and
push
add
or
and
dec
push
add
ror
loop
pop
mov
inc
cmp
add
adc
or
sbb
mov
adc
das
mov
enter
and
xor
call
jl
jge
loopne
mov
mul
adc
jns
xor
repnz
loopne
fisttp
adc
sub
jge
sar
dec
push
in
stos
fild
push
cmp
repz
xor
push
push
and
push
bound
mov
pusha
adc
add
scas
and
mov
rol
mov
push
pop
test
mov
popf
movs
cmp
mov
cmps
mov
pushf
pop
sub
mov
sbb
ins
lods
xor
cwde
mov
popa
adc
xor
mov
jp
xchg
call
pop
call
or
ret
cmp
std
xor
push
cmp
mov
and
xor
dec
jl
std
push
push
ja
sub
cmp
mov
imul
mov
dec
pop
das
pop
clc
sub
fwait
bound
sub
sub
mov
xchg
jle
fwait
and
aas
fdivr
test
imul
pop
mov
sbb
std
or
sub
shl
movs
movs
adc
push
add
call
add
cdq
test
push
fiadd
push
in
lea
inc
fadd
or
cs
add
gs
push
mov
xor
stos
sub
sbb
out
dec
push
add
sbb
sar
out
xor
or
data16
inc
jnp
rol
add
xchg
mov
enter
or
dec
pop
mov
and
pop
dec
in
aad
mov
inc
xchg
add
pop
adc
jmp
sbb
xchg
mov
xchg
sub
or
shl
pusha
add
movs
cwde
mov
mov
adc
xchg
imul
jl
ss
pusha
inc
aas
mov
js
ret
bound
push
jnp
popf
imul
add
cmps
and
adc
mov
mov
popa
in
sbb
pop
ret
pop
pop
and
outs
ss
inc
call
add
dec
lods
rcl
mov
into
push
call
cdq
in
cld
jo
pusha
cmp
(bad)
std
adc
lods
icebp
ins
xor
dec
inc
imul
mov
and
dec
or
mov
pop
adc
stos
adc
imul
adc
cmp
add
or
xchg
retf
adc
imul
js
dec
mov
mov
arpl
clc
arpl
clc
ss
mov
add
jle
adc
xchg
test
cmp
cmp
clc
cld
push
adc
cld
ficomp
repz
fwait
jne
push
mov
xlat
sbb
and
arpl
outs
add
push
jecxz
pushf
imul
shl
adc
mov
out
out
rcl
mov
je
xchg
fist
or
inc
sbb
dec
xchg
push
loopne
xor
and
pop
sbb
jno
and
xchg
ja
repnz
xchg
movs
xchg
movs
das
nop
lea
enter
xor
pop
push
rcr
les
leave
and
test
jnp
mov
sbb
push
dec
adc
inc
adc
or
xor
pop
or
jmp
jle
cmp
push
arpl
jmp
push
adc
lahf
mov
aaa
xchg
and
xchg
add
fist
sub
in
les
cmps
jno
cmp
inc
mov
out
push
inc
stos
cdq
retf
ficom
pop
test
cmp
push
adc
mov
mov
inc
push
add
add
xchg
inc
sahf
enter
pop
sub
xor
pop
sbb
jae
sahf
es
jo
jecxz
fld
mov
mov
push
xor
add
dec
xor
cmp
or
pop
dec
adc
sbb
cs
mov
clc
push
xchg
sub
enter
fs
push
movs
(bad)
clc
dec
inc
sti
xor
fsub
push
xor
outs
scas
dec
fmul
sbb
fs
adc
adc
dec
add
pop
add
mov
or
push
repnz
fild
dec
pop
nop
test
aas
sub
jp
int3
pop
mov
sbb
fbstp
popa
mov
jg
in
adc
xchg
xchg
push
sub
clc
inc
pop
jmp
pop
xchg
mov
inc
add
add
adc
add
push
fld
fcomp
pop
adc
push
loope
mov
vmwrite
aaa
cdq
in
jmp
pop
adc
add
inc
enter
sub
jb
cmp
fld
scas
test
popf
lea
pop
add
inc
scas
xor
mov
mov
sbb
mov
jle
jmp
aam
sub
cld
std
xchg
inc
out
push
ret
pop
add
aad
add
cli
cmp
jmp
icebp
ret
mov
sub
push
stos
jecxz
call
sub
lods
mov
pop
jbe
fmul
mov
sub
cwde
dec
mov
cmp
mov
add
xchg
sub
add
sub
jne
ds
clc
psubb
leave
or
adc
lods
sub
xchg
add
div
push
jecxz
dec
jae
dec
or
and
enter
or
dec
push
jnp
and
xchg
cmps
retf
fsub
aas
pop
jle
cmp
jnp
push
push
xchg
call
mov
dec
push
xchg
mov
add
pop
jl
pushf
inc
push
jbe
out
dec
hlt
dec
ja
pop
cmp
push
pop
rol
loopne
lock
popa
mov
in
dec
or
add
es
add
dec
pop
or
hlt
xlat
cdq
mov
adc
xor
lods
std
icebp
push
imul
sbb
mov
dec
jmp
mov
push
cmp
and
fs
push
cmovno
push
and
mov
inc
pop
push
sub
adc
and
xor
lods
jmp
(bad)
daa
in
shl
jo
cmc
ret
in
cli
shr
mov
or
xor
in
mov
pop
lods
pop
bnd
int3
int
imul
sub
sub
das
pop
sub
inc
push
xor
jne
pop
sub
data16
xor
mov
add
in
fs
pop
clc
add
fwait
dec
shl
push
or
push
out
nop
movs
fcom
dec
inc
fild
mov
bound
cmp
outs
fstp
jne
mov
popa
jnp
popa
jb
inc
enter
xchg
pop
pusha
pusha
jbe
dec
jb
mov
sbb
add
adc
pop
push
sub
pop
mov
cmp
xchg
xchg
cmc
cmp
inc
push
push
or
add
add
add
loope
and
push
sub
jno
popa
imul
in
pop
sub
mov
test
inc
imul
mov
jmp
sar
jge
outs
(bad)
mov
daa
inc
test
and
fdivr
push
sbb
mov
push
push
adc
jmp
or
outs
cmp
mov
sub
mov
xor
rol
fsubr
loop
sbb
rcr
out
push
mov
es
cmps
shr
dec
adc
movs
ret
inc
sar
rcr
int3
pop
loope
dec
jecxz
shl
push
in
out
cvttsd2si
leave
ret
aaa
adc
add
cmp
pop
and
outs
mov
jg
rcr
lock
fstp
push
dec
sub
call
test
jg
dec
cmp
jmp
jl
dec
xchg
clc
or
xor
and
or
das
mov
ficom
test
dec
ret
pop
cmps
pop
and
jmp
push
or
dec
loop
jl
add
test
push
mov
sbb
es
ret
jne
les
mov
xor
test
fidivr
add
mov
jne
pusha
mov
add
mov
aaa
leave
mov
push
dec
in
inc
in
mov
add
mov
push
es
xor
hlt
sbb
push
jnp
pop
sbb
out
sbb
call
dec
xor
sbb
ret
dec
aam
cmp
xor
pop
div
or
xor
mov
jo
lock
js
push
fbstp
pop
adc
inc
fwait
mov
in
mov
in
cmp
fcomp
in
test
clc
in
mov
pop
ins
lock
dec
inc
fiadd
sub
push
lock
jb
es
and
inc
or
es
rcr
dec
ja
ds
loopne
in
mov
mov
mov
nop
stc
repnz
imul
fild
cld
adc
adc
add
adc
and
fistp
jnp
sbb
mov
cli
fdivr
push
jo
test
jmp
xchg
inc
xchg
in
(bad)
sbb
ror
mov
fcmovbe
test
mov
adc
xchg
fcom
inc
dec
es
pop
sbb
fs
(bad)
adc
leave
and
lock
mov
and
dec
cmp
mov
jp
pop
sbb
test
ja
pmulhuw
ss
imul
adc
and
adc
(bad)
fsub
es
es
push
xchg
fs
adc
shl
push
xor
xchg
xchg
dec
xor
les
leave
and
cmp
in
xchg
add
sti
enter
lods
nop
je
dec
es
pop
cmp
and
pushf
fs
cli
int3
xchg
dec
xor
mov
js
dec
xor
and
and
cdq
in
xchg
in
stc
shl
jl
xchg
dec
es
inc
sub
xchg
sbb
lock
aam
xchg
dec
xor
pushf
and
leave
and
adc
neg
mov
test
enter
xor
mul
dec
jb
shl
push
xor
cmp
and
cld
cmc
loopne
fs
dec
les
es
cmp
dec
es
sbb
in
sub
dec
jb
lods
nop
xchg
dec
es
daa
cdq
and
repz
dec
xor
int3
mov
js
xor
and
inc
and
in
xchg
or
repnz
es
jl
dec
es
pusha
inc
sub
xchg
retf
and
mov
rol
add
push
popa
xchg
xor
ret
mov
inc
lock
dec
fs
mov
int3
leave
and
fwait
call
adc
lock
add
or
xchg
cs
fsub
movs
dec
ins
push
cmc
ret
stos
(bad)
imul
dec
adc
ret
mov
mov
add
cld
cmps
xor
jmp
movnti
jge
and
test
mov
inc
add
fcomp
(bad)
nop
mov
dec
xchg
in
inc
rcr
rol
xchg
test
hlt
leave
push
cmp
jno
std
pushf
fimul
jmp
xchg
ins
add
sbb
mov
dec
fimul
mov
mov
in
xchg
mov
cmc
adc
aaa
mov
(bad)
in
and
arpl
(bad)
add
mov
nop
call
pop
enter
rol
lods
gs
mov
and
cmps
cwde
add
stos
jo
cmps
outs
adc
clc
cld
dec
fdivr
in
mov
ret
xor
push
scas
or
cmp
vmwrite
cmp
xchg
dec
sbb
pop
adc
leave
and
call
mov
stos
sub
add
cmp
iret
xchg
pop
jb
adc
sbb
cmp
pop
jbe
pop
mov
pusha
mov
and
int3
call
inc
loope
or
in
inc
inc
scas
in
les
and
test
sub
mov
out
mov
(bad)
mov
hlt
fnstsw
mov
mov
cmps
adc
cli
mov
add
xor
stc
int3
rcl
mov
adc
mov
sub
inc
dec
loopne
pushf
pop
popf
jbe
cwde
fdiv
sub
test
ja
xor
cmp
push
adc
pop
xchg
or
xchg
(bad)
loopne
sbb
mov
outs
in
adc
lock
cmp
mov
or
push
pop
inc
lods
jg
(bad)
in
or
mov
adc
jmp
adc
cmp
mov
sbb
mov
xor
ficom
or
leave
and
mov
lahf
sbb
ret
push
fs
pop
cli
or
or
fcom
pop
je
cdq
mov
xchg
adc
es
hlt
or
adc
inc
out
sub
push
fsubr
mov
data16
add
adc
je
mov
jecxz
iret
pushf
sub
imul
push
cmp
mov
ficomp
or
pop
js
dec
dec
and
pop
stc
es
leave
adc
es
das
int3
scas
test
dec
xor
cmp
cmp
mov
add
pop
jl
mov
(bad)
ins
push
push
xchg
imul
int
push
sub
and
or
mov
mov
fwait
xor
sahf
mov
mov
sar
mov
or
sbb
push
push
push
push
xchg
inc
xchg
inc
mov
mov
gs
pop
outs
lds
js
aad
sub
xchg
xchg
cwde
jl
cmp
fadd
mov
mov
das
clc
mov
sub
ins
inc
add
and
sub
add
adc
fild
jb
nop
mov
mov
mov
scas
je
and
test
sub
jb
adc
inc
pushf
adc
mov
int
adc
fs
addr16
sbb
aad
fisubr
lock
adc
imul
push
inc
popa
xchg
or
or
mov
loopne
inc
adc
movs
mov
cmp
xor
lea
add
movs
adc
cld
(bad)
loopne
dec
xor
les
xchg
xchg
sbb
(bad)
and
or
adc
dec
es
out
dec
mov
ret
ins
in
sub
sbb
adc
xchg
js
or
inc
mov
inc
call
ins
fisubr
mov
adc
cdq
in
mov
xchg
and
jb
dec
adc
cld
fdiv
leave
and
mov
xchg
dec
push
pop
dec
sti
(bad)
cdq
adc
mov
push
test
out
jmp
movs
adc
lods
adc
cmp
push
int3
popf
mov
dec
push
daa
imul
dec
sbb
mov
test
call
or
and
sub
repz
fst
stos
popf
pop
inc
call
sub
sbb
cmps
mov
xlat
mov
xor
sbb
rcl
inc
cmp
fadd
ja
inc
mov
inc
sub
aam
lahf
inc
xchg
fild
add
xchg
data16
pusha
or
cwde
fisub
or
add
dec
dec
ins
pop
inc
sbb
cmps
(bad)
jnp
inc
cmps
inc
push
in
std
sub
inc
push
mov
nop
je
and
dec
xor
and
nop
arpl
add
call
test
adc
mov
jmp
dec
xchg
cwde
rol
and
push
leave
dec
jo
pushf
inc
mov
and
mov
inc
aam
or
push
add
jecxz
enter
(bad)
in
push
pop
inc
sbb
lods
cmc
nop
pop
sub
cwde
pop
sub
out
adc
lock
xor
mov
adc
imul
jl
pusha
movs
or
fidivr
mov
fs
pushf
and
xchg
dec
sub
hlt
mov
fdivr
test
fwait
ss
inc
mov
adc
clc
mov
push
repnz
js
pop
xor
stos
adc
push
sub
scas
xchg
add
pop
dec
sbb
addr16
sbb
pop
repnz
aad
dec
ret
xchg
jbe
sbb
sbb
imul
push
jmp
ret
in
pop
inc
movs
xor
xchg
xor
lds
fstp
pusha
mov
stc
loopne
xor
or
cdq
fs
push
in
sbb
xchg
xor
push
hlt
cmp
sbb
imul
(bad)
mov
xchg
movs
push
pop
ror
enter
or
lock
cmp
add
jno
add
adc
mov
xor
or
push
and
or
and
jo
test
test
pusha
dec
leave
push
nop
imul
ss
imul
adc
les
and
cmps
push
dec
je
push
mov
cwde
in
retf
rol
adc
push
mov
sub
push
and
es
lock
adc
fs
pushf
and
inc
mov
jns
cs
sbb
jge
sbb
or
inc
fs
mov
or
les
call
xor
xor
xor
shl
adc
inc
mov
pop
inc
in
fst
dec
cs
les
or
jmp
adc
hlt
push
call
test
mov
xchg
sub
rol
imul
mov
repnz
ds
inc
pop
push
adc
loop
std
cmps
fadd
jns
add
and
adc
cmp
dec
xor
mov
rcr
nop
inc
movs
xchg
movs
stc
rol
sbb
sar
sbb
lea
jnp
test
in
pop
aam
rol
pop
adc
and
shl
lea
in
adc
or
push
and
jo
and
leave
dec
sbb
fnstenv
mov
test
xchg
fdiv
sbb
les
add
add
dec
test
xchg
sbb
mov
std
clc
(bad)
(bad)
inc
dec
mov
fsub
xor
xlat
test
jne
arpl
es
cmp
dec
and
aaa
cmps
mov
push
mov
shr
jl
pop
adc
add
aaa
es
fs
adc
sub
je
shr
je
fiadd
nop
and
push
mov
sbb
adc
pop
fwait
add
(bad)
aam
arpl
in
pop
sbb
pop
enter
pop
xor
mov
sub
sbb
std
adc
out
cmp
jge
enter
js
movs
es
add
inc
sbb
add
pop
inc
xor
sub
(bad)
add
ins
cmp
mov
sub
push
add
neg
fsub
mov
sub
cld
inc
and
xor
clc
and
fimul
nop
outs
pusha
and
add
jmp
or
inc
or
sbb
push
outs
popa
dec
and
scas
xor
push
or
cmp
add
std
shr
shr
and
and
call
xchg
test
and
in
in
dec
and
movs
hlt
mov
ret
push
sbb
and
adc
in
sub
icebp
jae
sbb
or
xor
lea
sub
dec
shr
mov
lods
mov
nop
mov
popa
xor
rcl
jl
sbb
sub
inc
push
push
icebp
call
mov
adc
sbb
hlt
stc
fdivr
test
dec
xor
and
adc
clc
cdq
fs
inc
fadd
movs
fs
dec
mov
dec
es
xor
cld
mul
dec
jb
les
mov
cmp
lods
sbb
add
test
neg
mov
add
mov
stos
xchg
push
mov
sub
inc
das
push
arpl
jae
sub
add
push
xchg
cmp
fidiv
shr
dec
xor
adc
sub
mov
adc
aad
add
cmps
sbb
shl
adc
xchg
arpl
mov
xchg
dec
es
add
repnz
and
sbb
push
adc
mov
cmp
icebp
retf
rol
add
outs
jg
jbe
nop
out
pusha
test
movs
lock
lock
adc
pushf
fs
out
fsub
and
rcl
dec
cmps
dec
xor
dec
xor
fadd
movs
mov
and
push
xor
in
xchg
sbb
in
loopne
xchg
dec
les
cdq
jo
cmp
fwait
fs
(bad)
cdq
fs
imul
cmp
and
cdq
add
jmp
dec
cmps
dec
xor
test
mov
sti
dec
in
adc
(bad)
cld
dec
ins
sub
(bad)
ins
mov
adc
hlt
jmp
mov
and
dec
xor
pushf
clc
jmp
sbb
push
and
dec
jmp
xor
shl
push
xor
scas
out
and
xchg
adc
dec
xor
xor
xor
cld
out
cdq
fs
loopne
test
cdq
fs
dec
jo
cmp
mov
es
(bad)
dec
xor
dec
xor
and
cmp
in
lds
test
jo
dec
xor
push
cmp
es
and
jecxz
lods
popf
fs
dec
nop
je
jecxz
xchg
dec
cmps
(bad)
jecxz
cmps
and
es
fs
nop
je
cmp
fs
dec
and
loope
leave
and
int3
mov
leave
and
dec
js
inc
sbb
int3
cmp
jns
loopne
and
xchg
dec
xor
inc
inc
dec
xor
and
in
fbld
cdq
fs
shl
dec
pusha
inc
and
enter
in
ficom
int3
mov
xchg
dec
xor
fstp
cmp
inc
je
xchg
dec
cmps
adc
inc
dec
xor
add
fmul
xchg
sbb
lods
adc
xchg
cmp
sub
adc
dec
xor
and
and
ficomp
pusha
inc
jb
dec
sub
fxch
and
sbb
mov
xor
xor
sub
hlt
fdiv
fdivr
mov
xor
and
adc
xlat
cdq
fs
inc
aam
pushf
dec
xor
xlat
xlat
xor
and
xlat
xlat
(bad)
xchg
or
daa
adc
rcl
sub
shl
cmp
adc
hlt
pop
fldenv
pop
and
fmul
sbb
movs
aas
fdivr
sbb
loopne
cmp
lods
xchg
or
cwde
addr16
dec
fmul
xor
lahf
inc
cmps
mov
call
pop
cmp
add
cmp
or
mov
ret
xchg
fcomp
add
add
call
test
push
fs
(bad)
fstp
cmp
pop
ins
cwde
cmp
fadd
sbb
fmul
pop
pop
ret
dec
mov
sbb
mov
iret
push
fidivr
dec
add
in
pop
or
push
sbb
fist
cmp
lea
std
add
pop
push
adc
push
cmp
adc
add
sub
cwde
sbb
aam
push
icebp
or
or
add
fsub
nop
daa
rcr
mov
mov
jo
loop
adc
pop
ins
lods
dec
fsub
sti
(bad)
lea
scas
mov
adc
jle
jb
add
pop
mov
push
inc
ds
push
loopne
in
in
fsubr
aam
pop
fst
xchg
call
(bad)
aas
mov
mov
xchg
out
add
fst
fs
mov
jmp
aaa
adc
fistp
xchg
aas
lahf
add
pusha
sub
clc
pop
or
add
jne
jns
inc
fbstp
mov
pop
fadd
or
adc
push
sahf
aam
lea
xor
ds
cmp
add
mov
pop
inc
or
pusha
or
dec
sbb
(bad)
cmps
xchg
fnstcw
xor
add
clc
push
jne
inc
push
or
call
pop
dec
add
mov
(bad)
sbb
scas
in
push
pop
dec
sbb
push
pusha
and
in
nop
loope
jl
inc
adc
mov
and
inc
sahf
lock
arpl
jns
push
pushf
inc
lahf
arpl
fiadd
cmp
sub
sbb
mov
clc
mov
or
sbb
dec
pop
lock
xor
add
and
push
(bad)
dec
(bad)
test
pushf
adc
js
aas
nop
ss
test
xchg
xchg
or
sbb
dec
enter
sub
and
mov
cs
push
pop
pop
lods
or
cmp
and
div
cld
call
(bad)
jg
pusha
push
inc
and
int
or
pop
dec
pop
mov
cmp
inc
add
fild
sahf
xor
push
sbb
xor
push
mov
je
adc
mov
std
(bad)
int3
sti
popa
imul
mov
scas
sub
rcr
push
loopne
lods
sub
xchg
jmp
dec
fidivr
int3
dec
xor
adc
enter
inc
dec
sahf
int3
mov
xlat
adc
(bad)
in
cmp
mov
mov
and
imul
xchg
std
loopne
push
repnz
call
dec
mov
in
fist
gs
sbb
mov
pop
mov
mov
in
loopne
sbb
add
rcr
sbb
popa
add
outs
aas
mov
ucomiss
mov
adc
jb
frstor
dec
aas
pusha
shr
push
dec
aas
pop
and
push
call
inc
mov
and
pop
enter
pusha
(bad)
jecxz
aas
(bad)
movs
shr
popa
add
and
or
lahf
add
add
sub
or
imul
sbb
adc
sbb
sub
aam
fwait
loopne
mov
pop
mov
in
adc
add
test
test
mov
dec
arpl
add
or
sub
rcr
sar
or
dec
add
cmp
push
pop
mov
retf
pusha
inc
sub
add
and
add
mov
mov
aad
(bad)
ds
cdq
xchg
popa
push
movs
cwde
aad
(bad)
in
jb
mov
push
push
cdq
fadd
loopne
loopne
and
xchg
popa
inc
and
les
lea
adc
pop
cmp
pop
mov
push
inc
pop
in
rol
and
rcl
push
mov
fsubr
dec
rcl
push
mov
add
push
test
pop
mov
sets
add
push
push
jg
pop
mov
add
and
mov
sbb
or
mov
aam
movs
test
rol
inc
xchg
test
fbld
loopne
pop
pop
mov
aaa
add
lahf
lods
mov
and
xlat
jge
xor
pop
dec
aaa
lea
jbe
mov
aas
mov
xchg
shl
or
xchg
jo
mov
push
test
pop
or
repnz
push
or
fmul
jbe
xchg
mov
push
or
lahf
dec
scas
inc
mov
pop
cmps
cs
pop
adc
add
scas
sbb
aam
leave
pop
(bad)
dec
mov
hlt
or
push
mov
xchg
and
in
sub
loope
sub
fild
nop
jo
sub
call
aas
inc
sti
std
push
xor
inc
mov
movs
adc
adc
addr16
ins
jg
pop
jb
push
push
pop
pop
or
pop
and
dec
push
jb
sar
inc
cmp
sar
pop
or
in
sbb
add
push
xchg
push
inc
pusha
ret
das
add
inc
push
imul
dec
mov
sub
cwde
push
jbe
pop
dec
push
dec
push
xor
and
mov
or
nop
adc
inc
add
in
mov
movs
and
mov
sub
push
cmps
(bad)
dec
and
lahf
test
add
adc
or
jmp
sub
int3
sbb
jb
mov
imul
xor
mov
and
das
xchg
loope
test
dec
cmp
adc
adc
mov
jmp
mov
xor
mov
add
dec
scas
fsubrp
movs
in
push
push
iret
repz
push
enter
xchg
pop
ja
jmp
mov
adc
push
push
jg
sub
inc
add
stc
arpl
mov
push
sub
inc
(bad)
mov
enter
inc
scas
push
inc
add
mul
(bad)
sub
sub
cmp
add
add
push
mov
add
push
cmp
cld
repnz
cli
jmp
inc
(bad)
out
(bad)
(bad)
sti
lahf
scas
std
or
icebp
jmp
(bad)
out
(bad)
clc
pop
in
push
(bad)
jmp
call
pop
add
pop
add
or
jle
stc
call
icebp
mov
push
in
or
lock
jbe
push
in
(bad)
mov
dec
inc
push
dec
add
inc
inc
push
push
add
dec
dec
dec
or
inc
dec
dec
lods
push
push
dec
call
add
xchg
mov
add
imul
push
iret
dec
aaa
jns
je
jb
jae
iret
and
ins
jo
leave
mov
jo
jno
outs
mov
push
popa
ins
jo
popa
push
outs
ja
mov
and
fdivrp
mov
push
jae
imul
cli
arpl
jb
imul
add
popa
pusha
xor
or
arpl
jo
arpl
ja
jb
add
add
push
fadd
mov
leave
mov
inc
add
pop
mov
add
mov
fisub
pop
sahf
pop
shl
pop
xlat
or
and
and
jb
mov
add
lock
adc
and
and
lods
(bad)
pop
je
outs
arpl
or
arpl
mov
imul
arpl
and
and
outs
ins
stos
jae
sbb
adc
je
push
cmp
and
and
aaa
jnp
jno
mov
and
je
add
ds
ins
imul
addr16
mov
outs
not
pop
retf
arpl
dec
add
jbe
imul
test
and
mov
mov
inc
movs
push
sbb
push
xor
je
cmc
cmp
add
xor
mov
cmp
or
(bad)
and
fs
pushfw
ins
sbb
mov
mov
gs
jo
jns
test
addr16
les
gs
arpl
test
or
in
sub
js
push
dec
pop
and
rcr
enter
into
mov
and
or
ja
jne
inc
add
(bad)
push
data16
sub
mov
push
sub
sbb
dec
data16
jo
pop
fucomip
jp
or
dec
push
dec
dec
dec
imul
inc
adc
push
push
jbe
je
jae
and
and
push
ret
arpl
inc
push
popa
ficomp
and
fs
jmp
addr16
out
in
sbb
cmps
mov
mov
add
imul
lods
ffree
mov
cs
ret
add
sbb
xchg
inc
sbb
cmp
outs
imul
fstp
add
push
fsubr
fadd
add
adc
mov
ins
xchg
ret
clc
std
jae
sbb
push
sub
and
sbb
jo
cmp
or
popa
mov
xor
(bad)
sub
cwde
nop
fidivr
rol
in
popf
div
sub
push
sti
pop
sub
ins
push
jne
jl
fistp
jb
mov
cmc
xor
ins
getsec
add
pop
and
cmp
mov
outs
sub
sbb
inc
push
inc
adc
pop
and
inc
cmp
fidiv
and
pop
sub
pop
js
add
ret
test
mov
jge
clc
push
xor
stc
xor
rol
sub
dec
mov
loopne
outs
int3
lahf
in
sub
sbb
dec
jnp
jge
push
sub
pop
aaa
mov
ret
inc
sbb
sub
jbe
cdq
iret
cmp
lds
pusha
aad
pusha
inc
dec
and
retf
dec
add
and
sbb
or
mov
push
push
xor
and
je
sub
pusha
mov
pop
jns
adc
cmc
pop
xlat
imul
rcr
jecxz
jno
pop
imul
cmp
pop
sbb
daa
cmps
pop
push
adc
mov
int3
jo
pop
pop
test
push
sub
mov
mov
mov
addr16
add
test
aad
es
pop
rcl
pop
pop
add
fild
sub
repnz
xor
fnsave
sub
outs
mov
jns
rcr
div
xor
push
jae
sbb
add
add
neg
pop
jb
pop
xor
aaa
mov
out
dec
ins
bound
mov
sbb
test
mov
sub
in
inc
pop
or
stc
push
mov
or
jne
xor
sub
mov
dec
stos
mov
clc
add
sub
dec
pusha
or
fld
lods
ins
outs
mov
aad
inc
sub
add
arpl
scas
ins
xlat
rcr
jne
push
shl
mov
push
cmp
push
jp
push
in
mov
and
jmp
cmp
adc
add
shr
mov
xchg
pop
jnp
jp
outs
dec
pop
fidiv
mov
sub
(bad)
std
imul
sub
mov
push
inc
push
inc
sub
mov
dec
gs
mov
xchg
sti
xchg
inc
add
shr
add
mov
xor
popa
cmp
mov
push
dec
popa
xor
pushf
jo
fs
sbb
push
cld
push
mov
in
je
jae
push
jne
mov
popa
mov
jo
loope
jo
ins
mov
adc
(bad)
pop
cmp
pop
shr
ins
fstp
add
mov
iret
stos
sbb
push
inc
loope
js
cwde
inc
mov
mov
mov
push
sub
or
lods
cli
inc
add
sub
shl
dec
hlt
fist
inc
inc
push
push
pop
push
dec
dec
sbb
dec
pop
jnp
sub
inc
push
dec
inc
pop
mov
inc
mov
push
sub
dec
enter
adc
add
add
add
add
cwde
cli
sub
sbb
add
enter
add
ret
jb
add
xchg
mov
adc
inc
retf
adc
push
jnp
mov
shl
lods
xor
adc
ss
bound
xchg
imul
jno
adc
jne
ja
jns
pop
pop
(bad)
pusha
(bad)
(bad)
jg
aas
jnp
jge
jg
add
mov
(bad)
(bad)
call
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
(bad)
(bad)
push
mov
mov
mov
ret
(bad)
enter
int3
int
iret
sar
(bad)
(bad)
call
rcl
aam
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
mov
call
cmc
lahf
ja
dec
dec
dec
dec
dec
dec
dec
mov
push
pop
call
xor
int
nop
idiv
add
jle
sub
inc
inc
inc
mov
mov
mov
add
aas
push
mov
pop
in
pop
or
push
sub
cmp
arpl
add
sbb
jge
add
shl
aas
mov
push
popf
addr16
and
or
fimul
xor
jg
xor
aas
and
rcl
mov
and
sti
(bad)
dec
add
test
push
xor
add
add
(bad)
dec
int3
and
pop
das
mov
rcl
xchg
adc
loopne
jbe
(bad)
cmp
rcl
cmp
jne
loop
outs
not
inc
sbb
xor
jns
dec
push
jns
jne
push
cmp
gs
xor
cs
ins
sar
pusha
adc
inc
push
int3
mov
mov
jo
push
mov
outs
mov
das
jo
ins
and
mov
cmp
mov
push
push
pusha
sahf
out
jno
mov
jb
add
adc
sahf
or
and
push
add
xor
sahf
adc
mov
pop
daa
ja
das
bound
fs
punpcklwd
sub
mov
inc
ja
popa
pop
outs
adc
popf
out
inc
pop
jecxz
push
(bad)
push
arpl
daa
iret
repz
pop
mov
movs
mov
push
push
xchg
(bad)
je
or
xchg
je
dec
inc
pop
push
dec
dec
inc
cmovle
call
push
dec
dec
dec
inc
push
inc
push
pop
xchg
call
push
loop
dec
dec
dec
inc
push
inc
inc
jmp
push
test
dec
(bad)
sbb
push
js
popf
push
enter
sub
test
push
popa
js
std
pop
test
cwde
xchg
jo
in
mov
mov
add
cs
add
pop
cmp
pop
and
push
add
adc
inc
test
pusha
or
ins
add
add
ja
push
aad
and
add
mov
add
add
add
ja
push
retf
jbe
push
add
lea
or
in
and
push
pop
fist
mov
inc
sub
jnp
mov
push
xor
call
mov
jne
mov
and
(bad)
je
bound
xlat
cmps
adc
(bad)
cld
cwde
add
jl
inc
outs
rcl
js
iret
add
push
add
dec
xor
ja
add
add
add
inc
gs
inc
ins
jae
add
inc
jb
rcpps
push
ds
inc
xchg
(bad)
and
add
pusha
jmp
inc
js
je
jb
inc
xor
or
outs
jle
gs
push
loope
fisub
test
shl
mov
mov
xchg
jnp
push
add
push
add
jg
and
add
add
xor
push
push
and
push
aas
pop
mov
add
xor
push
push
mov
or
cli
fimul
popf
pusha
and
add
inc
add
push
loopne
sahf
clc
xor
sbb
sub
fnstenv
inc
and
js
dec
dec
push
push
and
push
xor
dec
inc
sbb
push
dec
dec
inc
and
push
xor
xor
add
push
inc
enter
imul
dec
pop
ins
repnz
ins
lea
js
fidiv
add
mov
add
fs
jb
and
cmps
or
push
fbld
push
popf
popf
stos
cmc
fidiv
and
daa
jae
add
dec
ins
dec
loopne
fisttp
mov
pop
cmps
loopne
cmp
sub
loopne
push
lock
mov
(bad)
and
cwde
xchg
xchg
xor
push
ins
(bad)
cli
fs
and
dec
jo
add
add
or
or
sub
idiv
je
or
rol
and
adc
dec
add
imul
pop
mov
jnp
fcom
jo
(bad)
sub
ins
jb
daa
ror
pop
xchg
imul
dec
dec
popa
sub
jne
sbb
add
add
inc
xchg
dec
popa
imul
out
xor
or
push
or
sbb
in
popa
pop
loop
push
xor
mul
rol
push
push
shl
pop
aaa
xor
ss
shl
mov
sbb
add
add
sub
scas
outs
(bad)
xor
outs
lods
outs
rol
jne
jbe
add
inc
inc
xchg
push
test
adc
mov
sbb
mov
mov
(bad)
mov
inc
mul
push
or
arpl
or
mov
adc
stc
push
cmc
xor
aaa
and
in
clc
jle
inc
pop
imul
adc
pop
or
in
jb
stos
mov
lods
push
push
nop
or
mov
fnstsw
adc
ja
in
xor
adc
test
push
inc
mov
push
cmp
pop
xor
push
lahf
daa
pusha
adc
add
loopne
push
adc
cmp
sbb
shr
sub
retf
and
mov
inc
sub
pop
dec
jmp
pop
pop
test
cmp
call
xchg
sbb
cmp
gs
and
dec
outs
sbb
cmp
push
xchg
pushf
cmp
or
sbb
xchg
pushf
cmp
mov
nop
xchg
xchg
xchg
push
outs
loopne
sub
jle
push
inc
aam
(bad)
inc
dec
jae
xor
add
push
sar
pusha
sbb
dec
popf
and
sub
dec
dec
cmp
and
and
and
jns
les
das
das
adc
dec
add
je
push
dec
nop
inc
ds
dec
outs
jbe
popa
sub
adc
hlt
sbb
inc
cwde
mov
inc
js
cmps
dec
push
cmps
push
fsub
add
aas
(bad)
arpl
gs
jne
dec
sub
into
mov
xchg
out
jnp
jns
jg
addr16
dec
iret
fdiv
mov
es
daa
push
sub
in
daa
call
or
push
jne
cmp
pushf
mov
ja
pop
dec
inc
js
faddp
ds
dec
sub
pushf
(bad)
xchg
imul
mov
les
pop
jmp
shl
addr16
ficom
aad
jne
inc
outs
popw
popa
data16
popa
(bad)
dec
arpl
aaa
and
lods
sbb
jbe
jo
(bad)
jb
and
call
les
push
and
push
gs
inc
inc
fsubr
push
mov
or
push
ins
daa
adc
add
imul
mov
outs
cmp
arpl
adc
cdq
inc
cli
adc
js
(bad)
push
jae
imul
push
jmp
dec
xchg
pop
mov
adc
mov
and
lock
add
cdq
lahf
and
and
cmp
imul
and
or
inc
inc
fiadd
popa
jbe
outs
pop
test
push
arpl
outs
pop
mov
popa
jae
adc
or
adc
pushf
and
bound
daa
arpl
lock
fdiv
clc
adc
and
movs
pop
jnp
daa
mov
int
imul
rcr
inc
push
add
repnz
aad
add
das
mov
mov
push
popa
pop
imul
sbb
and
push
imul
imul
imul
ja
out
imul
pop
cmp
pop
ins
jne
stos
or
daa
enter
sbb
shl
popa
xor
xchg
mov
xor
sbb
shl
call
js
pop
xlat
(bad)
inc
pop
sub
dec
jb
imul
pop
push
sbb
ret
adc
sbb
gs
fisubr
sub
outs
pop
xor
in
nop
jbe
aaa
or
push
push
je
xchg
pop
add
push
push
cdq
out
test
popa
icebp
sub
ins
xlat
daa
outs
popa
test
xlat
outs
lock
daa
ins
rcl
imul
or
clts
call
jmp
into
sub
inc
or
std
daa
and
jb
jge
fadd
push
add
pop
sub
pop
(bad)
stc
inc
add
dec
inc
add
inc
add
dec
stc
scas
cmp
or
inc
dec
push
add
and
fwait
popf
sbb
and
mov
and
lea
mov
js
dec
add
outs
cmps
push
mov
push
cmp
bound
pop
pop
jae
adc
movsx
pop
mfence
pand
fmul
neg
imul
xsave
mov
inc
inc
(bad)
jo
ds
jnp
mov
ds
dec
xor
push
and
dec
dec
push
add
push
mov
fimul
push
push
into
int3
push
ins
scas
sub
nop
fidiv
push
add
(bad)
cmovne
add
into
cmovge
sbb
xlat
pop
call
outs
les
add
mov
push
mov
sbb
jg
pop
add
push
or
sbb
into
fs
pop
(bad)
jnp
lods
pop
pop
(bad)
scas
push
dec
sahf
inc
inc
ss
outs
out
cmp
pop
ds
scas
shl
and
sbb
dec
popf
sub
pop
pop
fdivrp
sbb
lock
xor
fwait
jg
psubusb
push
rcr
adc
add
push
pop
inc
cs
dec
xchg
leave
in
sahf
movs
pop
cwde
test
pusha
xor
pcmpgtb
pop
(bad)
mov
mov
or
adc
add
or
adc
sbb
add
fs
push
dec
cmps
dec
arpl
or
or
sub
inc
sbb
in
leave
pop
es
pop
std
adc
inc
outs
pusha
fisub
test
dec
bound
and
or
aaa
mov
push
add
inc
jb
imul
mov
(bad)
in
cli
dec
inc
js
daa
daa
add
and
mov
mov
mov
and
or
ja
mov
cmp
cmp
movs
jl
outs
jo
int
mov
mov
or
(bad)
(bad)
push
push
lahf
push
jns
and
arpl
cmp
push
ins
fld1
pop
cmp
retf
loop
add
mov
loopne
xor
daa
mov
dec
adc
(bad)
sbb
mov
pop
dec
lea
and
cmp
(bad)
mov
aas
cmp
call
xchg
jae
addr16
sub
or
jbe
ss
scas
jmp
dec
test
int
adc
push
pushf
shl
lods
(bad)
fisttp
dec
jge
test
add
ins
inc
shl
les
movs
retf
or
pusha
or
test
jg
jae
enter
inc
in
js
mov
das
gs
ins
adc
inc
jg
aaa
mov
sub
push
or
lods
sbb
pop
das
je
xlat
arpl
outs
xchg
daa
xchg
mov
fisub
daa
popw
pop
cmp
pop
mov
cmp
xchg
push
and
cmps
jnp
sub
es
addr16
int3
xor
sub
dec
and
push
sub
sub
pop
or
sub
push
bound
daa
daa
and
cmp
rcl
ds
dec
scas
push
sbb
addr16
push
lods
xor
sbb
or
jo
ss
mov
push
fcomp
int3
aam
sbb
cmp
int3
cmp
jo
sub
mov
(bad)
sub
adc
sub
push
cld
sub
cmp
shl
in
int3
(bad)
fldcw
mov
and
sahf
cmps
aam
cwde
movs
ss
push
or
repz
push
nop
mov
cmp
je
push
jo
out
sahf
out
push
mov
xchg
pop
cmp
les
repz
imul
repz
cmp
sub
and
iret
repz
sbb
adc
jns
out
add
sub
in
out
sahf
out
lods
mov
fdivrp
mov
daa
push
test
out
sahf
out
inc
xor
sub
repz
sbb
es
loopne
mov
iret
repz
ins
inc
sbb
and
aam
mov
jbe
iret
lock
xchg
push
fisubr
sar
xchg
inc
add
push
sar
test
loopne
push
push
inc
pop
int3
ds
adc
sub
jb
pop
lea
es
js
jo
add
add
dec
add
out
ja
outs
ja
je
das
push
push
loopne
dec
lods
icebp
dec
mov
addr16
mov
arpl
ret
daa
pop
lea
mov
mov
inc
data16
ret
stos
inc
dec
dec
push
leave
and
inc
test
pop
jb
pop
push
inc
or
adc
inc
or
pop
or
test
mov
sti
dec
push
push
and
xor
push
dec
inc
dec
add
dec
dec
inc
add
xor
pop
jmp
scas
sbb
shl
xor
add
mov
je
jae
sub
das
das
sub
sub
or
jp
sub
adc
push
inc
dec
test
ret
je
add
xchg
pop
sbb
and
ret
test
js
outs
gs
push
sar
ror
inc
aas
sub
ror
pop
in
sahf
pop
clc
test
jne
ins
push
cmps
ins
ret
push
adc
popa
or
jmp
sbb
dec
pusha
outs
icebp
aaa
adc
cmp
or
jl
sbb
cmps
cmp
rcl
mov
xor
pop
jbe
add
xor
sub
jae
ss
jg
cmp
adc
and
call
pop
js
xor
ins
pop
mov
js
test
ror
out
mov
or
add
imul
fcom
mov
push
inc
add
cmp
aas
sub
sub
push
mov
gs
add
outs
mov
lock
push
dec
inc
inc
dec
stos
ret
pop
test
xlat
sbb
push
push
rcl
mov
test
and
dec
cwde
xor
clc
bound
and
xchg
and
mov
push
ins
addr16
call
call
jns
mov
out
mov
inc
dec
hlt
pop
push
inc
inc
inc
test
imul
dec
inc
sbb
lock
test
dec
pop
adc
push
mov
ds
mov
cmp
dec
clc
pop
das
push
xor
int3
or
test
sub
jmp
add
ins
arpl
jns
(bad)
das
gs
loopne
sbb
outs
adc
and
(bad)
sbb
arpl
mov
outs
dec
dec
std
(bad)
jnp
push
sub
add
lahf
sar
shl
icebp
outs
mov
mov
mov
mov
adc
jle
int3
and
mov
shl
rcl
fidiv
jp
adc
test
mov
mov
mov
push
push
mov
mov
imul
push
mov
mov
aam
stos
mov
ror
sbb
and
mov
xchg
fistp
cwde
(bad)
pop
rol
xor
lods
jecxz
xlat
outs
(bad)
fdivr
aas
xor
inc
mov
sar
xor
and
pop
jp
mov
mov
push
sti
cmp
sbb
imul
or
mov
(bad)
fisttp
adc
ja
sub
daa
pop
sbb
jne
fs
and
ins
add
das
cmp
xchg
push
jns
out
push
and
js
fs
rcl
sbb
jbe
das
xchg
jno
shr
mov
ret
and
xchg
push
test
shl
es
pusha
push
call
mov
clc
inc
cmp
mov
or
add
pusha
imul
lods
xor
mov
inc
or
dec
xchg
(bad)
daa
add
adc
jae
push
pushf
or
imul
fst
in
imul
inc
inc
jo
pop
ja
or
dec
enter
fwait
push
mov
pop
sub
push
xor
les
push
xchg
xor
ucomiss
jo
popa
cmp
inc
xor
mov
outs
inc
mov
mov
mov
add
add
mov
(bad)
std
ins
push
pusha
add
or
jne
push
push
cmp
outs
jae
jle
mov
push
or
pop
not
cmp
lahf
dec
push
and
adc
adc
cmp
jp
imul
jg
cld
mov
sbb
jb
add
add
(bad)
nop
mov
icebp
jo
psubusb
popa
ret
push
(bad)
push
adc
jl
jge
inc
dec
mov
or
pop
inc
dec
(bad)
sub
pusha
fcomp
pop
lahf
je
popf
mov
gs
out
xor
stc
pop
dec
arpl
jnp
pop
fcom
and
inc
cwde
inc
and
add
cmps
pushf
or
xor
jg
lea
ins
push
dec
mov
rol
dec
mov
out
ja
push
aaa
push
jo
dec
inc
push
out
or
fs
xor
inc
inc
push
sub
sbb
bound
jle
das
jno
mov
xchg
push
lock
add
lea
sub
and
out
sbb
fwait
adc
loopne
sub
cmp
jmp
popf
mov
aaa
xchg
jae
test
fincstp
adc
and
push
test
dec
sbb
je
mov
and
adc
or
add
fld
lds
push
je
shl
lahf
fidiv
xor
stos
dec
add
mov
rcr
shl
inc
addr16
sbb
push
dec
inc
push
push
inc
push
inc
mov
mov
push
adc
pop
int
mov
push
jb
jae
imul
adc
fs
arpl
sbb
repnz
cmp
add
pop
and
je
xchg
ret
popa
or
fs
xor
adc
push
nop
xor
out
jae
mov
jne
sub
imul
jns
sub
inc
cmp
jl
retf
fst
inc
or
jae
inc
shr
mov
xor
jl
fild
rol
cmp
or
push
inc
jb
cmp
scas
push
adc
in
ss
add
mov
push
dec
jbe
imul
clc
shl
pusha
scas
bound
jo
xor
sar
(bad)
sub
fs
jne
inc
sar
outs
pop
mov
test
out
xchg
jle
aam
out
inc
inc
add
ss
cmp
imul
pop
mov
int
repnz
inc
push
rcl
push
loopne
jbe
cmp
xchg
(bad)
lock
mov
inc
push
cmp
rol
lds
or
dec
into
mov
xchg
push
xlat
and
aaa
mov
adc
pop
xlat
add
xchg
fnstcw
in
xchg
push
mov
pop
dec
lock
dec
sbb
sbb
xchg
push
gs
neg
pop
push
dec
jbe
imul
or
add
fnstcw
push
cmp
and
nop
jns
jnp
rol
jbe
xchg
pusha
ds
shl
cmp
out
and
adc
outs
idiv
pop
rol
jbe
jnp
neg
scas
or
ins
iret
sar
jl
in
shl
outs
push
xor
inc
outs
rcr
ds
in
test
pop
nop
mov
shl
mov
pushf
sahf
push
add
inc
push
or
mov
cmp
js
xchg
adc
xor
dec
lods
jo
(bad)
push
xchg
sbb
and
mov
pop
into
fisubr
push
push
das
rol
popa
loopne
jecxz
cmp
xor
int3
test
push
inc
ins
jp
push
xlat
ret
xchg
ds
test
push
jp
pop
fs
lods
mov
xchg
pop
dec
mov
mov
adc
and
add
popa
es
and
ja
bound
sbb
sub
xchg
sbb
fstp
test
xchg
mov
add
cmp
pop
pusha
out
sub
popa
data16
es
popa
fwait
jae
pop
pop
or
jns
sbb
mov
sub
sbb
xchg
xchg
mov
and
loop
gs
gs
add
sub
lahf
mov
pop
sub
add
sbb
cmp
pop
mov
push
and
xor
adc
push
dec
movs
push
call
test
outs
out
daa
xchg
test
getsec
mov
popf
push
aas
jae
pop
push
mov
cli
shl
addr16
pop
jo
pop
xchg
dec
int3
pop
loope
xor
inc
in
lods
movs
push
and
dec
lgs
sbb
inc
sub
pop
dec
xchg
mov
test
(bad)
jno
xchg
pop
push
xchg
dec
shl
sbb
fild
inc
jo
or
idiv
scas
sub
push
ins
mov
les
and
pop
xor
or
push
mov
loope
ins
sub
push
test
ins
mov
push
dec
cmp
sbb
fadd
and
add
inc
mov
jae
inc
push
inc
pop
cwde
repnz
pminsw
inc
orps
sub
aaa
xlat
test
in
push
push
adc
jbe
xor
mov
jbe
lods
ret
es
sub
jb
aaa
xor
mov
mov
clc
(bad)
neg
xor
cs
es
popa
mov
push
clc
das
mov
and
push
jo
imul
add
add
inc
push
fld
enter
mov
sub
rcl
mov
leave
movs
fs
(bad)
out
sti
mov
jo
and
rcr
push
push
push
xor
dec
push
lahf
cmps
stc
dec
sbb
rcl
mov
iret
repz
nop
pusha
jo
jbe
jl
jns
push
mov
push
add
mov
out
ds
rol
outs
push
push
sti
mov
rcl
add
inc
mov
dec
ret
xor
push
push
dec
aaa
add
mov
iret
(bad)
jns
mov
mov
add
movs
inc
(bad)
sbb
sub
jns
add
add
cmp
cmps
xor
scas
push
add
xor
pop
push
jge
(bad)
(bad)
dec
pop
mov
sub
dec
sub
add
inc
and
push
pop
cmp
movs
outs
jmp
push
push
mov
lock
loope
cmp
pop
push
lock
dec
hlt
(bad)
cmovge
shl
int3
fdivrp
inc
add
dec
dec
dec
mov
loopne
in
fs
arpl
fwait
and
jns
xor
jo
jne
pop
mov
and
outs
int
mov
scas
loope
imul
pop
add
jg
gs
cmps
push
in
movs
test
or
aaa
push
pop
xor
cli
fs
aam
addr16
mov
xchg
push
pop
sbb
sbb
push
push
push
push
cmp
lods
sbb
push
pop
pop
addr16
and
jne
and
dec
shr
fistp
dec
inc
mov
inc
push
lds
jle
add
dec
sub
sbb
push
lods
das
aas
cmp
fmulp
test
imul
fdiv
xchg
pop
dec
inc
pop
push
add
pop
xlat
mov
not
push
push
dec
lahf
xchg
cs
adc
mov
pushf
sbb
faddp
(bad)
jae
aas
cmp
movs
in
jo
xor
xor
scas
lea
sbb
xchg
dec
xchg
jb
and
enter
mov
mov
cmps
addr16
cmps
dec
push
jmp
cwde
dec
ins
addr16
dec
push
adc
dec
inc
inc
push
push
xor
dec
inc
jb
sbb
inc
push
popa
cmps
xor
cmp
push
sub
idiv
aas
inc
inc
lea
ss
inc
inc
daa
and
inc
mov
sti
das
inc
pop
add
movs
pop
pop
cdq
sbb
sbb
call
lea
pop
dec
push
dec
xor
pop
in
outs
jl
bound
or
mov
mov
adc
and
mov
fwait
add
and
inc
push
push
or
add
in
pop
inc
push
popa
and
cld
stos
push
test
mov
add
aas
jb
sbb
xchg
aas
xchg
inc
imul
test
xor
dec
shl
cmc
add
cmp
in
hlt
mov
jae
movs
jno
and
ret
pop
into
sub
pop
pop
sub
retf
ins
jns
jle
mov
xlat
or
mov
add
adc
mov
add
inc
dec
jb
add
ds
je
jo
out
mov
xchg
adc
mov
mov
mov
mov
or
call
jle
jae
data16
pop
rol
pop
js
sbb
push
push
dec
dec
xor
arpl
mov
scas
adc
bound
popa
and
and
jnp
mov
xor
xor
xchg
mov
fcomi
cli
aaa
cmp
push
jle
or
mov
xchg
adc
cmps
int3
mov
ja
push
nop
inc
push
cmp
jmp
dec
cli
push
movs
bound
das
cwde
popa
mov
fs
sahf
or
ins
jg
mov
and
and
imul
les
ss
mov
sub
sub
push
and
mov
ror
rol
dec
loopne
inc
push
add
icebp
rol
pop
pusha
dec
inc
cld
cmp
inc
test
inc
call
ins
ins
cmps
std
pop
ret
push
outs
inc
jb
jbe
jge
bound
jecxz
mov
sbb
push
test
dec
dec
mul
(bad)
call
daa
aaa
push
mov
cmp
mov
test
or
mul
out
mov
pop
pop
sub
dec
ins
mov
push
push
arpl
imul
adc
push
aam
mov
shl
mov
mov
xchg
or
call
push
and
mov
add
adc
mov
mov
(bad)
sti
(bad)
jmp
jb
push
push
mov
inc
push
ins
ss
adc
cli
mov
mov
fld
cmp
mov
or
sti
mov
ds
pop
sbb
xor
pusha
push
(bad)
fsub
sbb
cmp
test
xor
dec
xchg
jp
mov
push
pop
add
fwait
nop
add
adc
jne
push
sahf
push
cmp
add
pop
ffreep
or
xor
sbb
cmp
test
dec
int
jecxz
int
sbb
pop
and
push
inc
inc
dec
in
jb
sbb
(bad)
and
mov
add
or
out
fcom
pop
and
adc
mov
inc
add
sbb
mov
lds
push
ror
loop
push
nop
ficomp
cmps
mov
adc
jnp
leave
dec
add
dec
pop
in
leave
jae
sub
sub
cmp
pop
jb
mov
movs
cmp
iret
in
xor
xchg
xor
cmp
jae
pushf
je
fs
iret
leave
jae
push
inc
dec
xor
lock
push
or
jbe
or
sbb
pop
iret
out
mov
out
jmp
add
push
mov
or
adc
stos
dec
adc
mul
dec
push
push
pusha
scas
mov
cmp
ror
dec
repnz
add
push
into
fisub
cmp
push
fild
adc
fldenv
rcr
loopne
shl
xor
pushfw
call
push
nop
aaa
dec
into
fld
mov
fsubr
xlat
mov
cmps
test
(bad)
fnstcw
dec
inc
mov
rcl
pusha
mov
ins
fisub
mov
shl
push
ret
mov
data16
out
ja
ds
ss
xor
push
mov
iret
cmp
nop
test
add
pop
ins
cmp
cmp
cmps
xchg
push
mov
shl
out
repz
cwde
pop
cdq
daa
pop
dec
adc
lahf
aaa
sti
mov
cdq
aaa
add
adc
pop
stos
push
popa
inc
push
lods
cs
rcr
scas
mov
lock
adc
repz
jo
loopne
mov
rcl
mov
add
test
loope
xchg
push
pusha
das
cdq
push
mov
out
xor
(bad)
mov
xor
addr16
movs
loopne
lahf
and
mov
rol
sbb
iret
repz
ret
add
cmps
repz
or
ror
loopne
lock
push
push
or
push
mov
mov
shl
inc
loopne
fisubr
lock
lds
nop
shufps
shl
(bad)
push
push
loopne
enter
neg
leave
push
retf
push
int3
xchg
data16
ja
mov
outs
pusha
push
mov
fistp
push
loopne
mov
push
push
xor
mov
mov
push
mov
mov
push
jo
repz
sti
rcl
xlat
push
push
nop
fsub
iret
repz
sti
push
lock
push
jo
rol
cmp
ds
fcmovbe
push
mov
inc
test
aad
pop
dec
sbb
inc
scas
sub
(bad)
adc
stos
fcmovne
(bad)
pop
in
out
adc
push
or
and
and
(bad)
sar
push
push
mov
xor
adc
mov
mov
or
scas
int
mov
pop
in
bound
loop
and
push
pop
mov
mov
mov
je
push
mov
pop
repnz
std
pop
int3
push
and
pop
sbb
enter
adc
sub
repnz
ds
or
test
movs
mov
pop
dec
stos
pop
mov
inc
ds
add
inc
pop
sbb
inc
cmps
sar
inc
dec
inc
or
cmp
jnp
inc
aaa
push
inc
pop
mov
fimul
dec
ss
mov
fidiv
xchg
pop
push
pop
adc
dec
jp
mov
imul
pop
xchg
dec
mov
inc
bound
faddp
inc
dec
adc
push
out
fdivr
(bad)
dec
pop
inc
cmp
inc
add
and
jle
mov
repnz
push
addr16
pop
xor
xor
and
xor
mov
clc
scas
mov
daa
pop
or
ja
pop
or
mov
pop
daa
inc
cmp
jnp
mov
fs
sbb
mul
arpl
cmp
inc
data16
pop
das
mov
jo
gs
push
ja
xchg
addr16
imul
adc
imul
push
ins
push
jbe
cmp
push
cmps
mov
inc
(bad)
jg
mov
data16
mov
outs
sbb
xchg
mov
loope
dec
test
sub
inc
js
jae
popf
cs
jg
sub
jo
jmp
jns
cmp
add
jns
inc
inc
cmp
mov
inc
ds
add
loope
jnp
cmps
js
xor
push
shl
(bad)
aam
push
xor
adc
xor
fbstp
mov
push
adc
fcmovu
cmp
mov
jg
inc
imul
dec
pop
loopne
or
adc
pop
inc
fild
xchg
inc
(bad)
je
lahf
out
inc
sbb
adc
jo
inc
inc
push
inc
pop
fidivr
fld
sub
push
lock
test
daa
es
push
inc
inc
inc
pop
idiv
ss
mov
jmp
and
jo
outs
ret
js
movs
xchg
aas
cmp
icebp
xor
pop
outs
push
lock
repz
in
mov
jnp
pop
push
call
inc
stos
cmp
repz
sbb
push
jbe
das
jmp
int3
push
add
cmp
repz
add
mov
dec
dec
dec
outs
outs
dec
and
loopne
scas
enter
push
pushf
push
pop
test
ret
sar
or
jmp
sub
or
xor
shr
jge
or
jmp
xlat
js
mov
outs
popa
fwait
cmc
stos
loop
fild
(bad)
push
jecxz
neg
addr16
xlat
xor
mov
loopne
test
mul
sub
bound
es
jmp
inc
outs
dec
dec
dec
inc
dec
push
cmp
mov
push
inc
inc
push
inc
dec
cmp
push
jmp
fsubr
push
bound
ins
lock
mov
and
inc
dec
dec
dec
inc
inc
cmp
cmps
inc
(bad)
jns
rcl
push
outs
outs
ins
(bad)
jmp
lods
pop
push
ja
leave
sub
scas
push
push
iret
xor
pop
popa
ja
sub
daa
jbe
inc
pusha
das
scas
das
cmp
xor
pushf
aas
push
jle
vmwrite
inc
pop
aas
arpl
cmp
cmp
jl
xor
jbe
push
xor
xor
add
sbb
cmp
adc
inc
cmp
mov
out
scas
add
cs
push
push
rol
imul
scas
xchg
jae
imul
add
ret
fs
sub
in
aaa
jl
ins
pusha
and
inc
inc
addr16
and
dec
inc
add
or
adc
adc
add
outs
js
dec
retf
xchg
adc
mov
call
das
imul
addr16
ins
fs
add
jl
(bad)
add
in
jl
push
call
ins
or
and
outs
inc
or
popa
add
adc
push
sar
retf
xor
fisubr
ins
js
inc
adc
add
data16
cmp
dec
inc
inc
pop
pop
enter
inc
inc
inc
pop
dec
dec
dec
inc
sbb
xchg
daa
rol
sbb
xor
jg
push
dec
dec
dec
and
inc
inc
dec
xor
ins
outs
popa
cmovno
adc
aaa
cmp
push
dec
rcr
push
(bad)
dec
rcl
sbb
sbb
(bad)
inc
push
aam
das
imul
sub
packuswb
int3
aaa
daa
cs
pop
xor
add
xor
inc
dec
dec
sub
cwde
and
and
xchg
adc
mov
loopne
das
dec
jbe
mov
enter
pop
sub
mov
adc
pop
retw
cld
ins
outs
imul
repz
mov
inc
cmps
ds
imul
jne
arpl
cmps
ins
bound
push
add
jne
ins
dec
sub
imul
push
outs
adc
imul
xchg
xor
sbb
rcl
push
push
pop
addr16
cmp
dec
jg
add
dec
inc
jle
into
push
and
cmps
push
mov
add
sub
push
data16
adc
inc
push
fistp
sub
aaa
aaa
inc
xchg
dec
jo
mov
outs
jbe
daa
inc
and
pop
pop
stos
sub
jne
das
cmp
mov
das
mov
jo
cdq
inc
pop
push
sbb
and
xchg
add
cmovge
xchg
pop
or
(bad)
pop
pop
or
cwde
inc
mov
das
cs
inc
lods
aas
movs
dec
shl
aam
jb
je
scas
dec
sub
das
lds
xor
and
aas
or
or
out
neg
fcom
cmps
pop
je
jb
push
cmps
cmps
in
jae
pop
test
stos
fwait
push
shl
or
jae
dec
pop
add
xlat
push
inc
pop
(bad)
push
mov
add
pusha
inc
pop
cwde
xchg
mov
or
mov
loope
lods
push
retf
data16
push
sbb
xchg
mov
pop
jns
cmp
ffreep
mov
test
test
xor
inc
sbb
pop
mov
pushf
add
cmp
dec
dec
pusha
jmp
jne
ret
aas
and
add
ds
dec
inc
pop
push
js
and
add
sahf
push
cs
mov
cmp
or
clc
ins
jo
ins
outs
inc
leave
(bad)
sub
xchg
jecxz
mov
adc
fld
lea
sub
das
pop
ins
inc
jo
adc
jno
fldcw
inc
and
or
mov
mov
addr16
inc
test
test
movs
mov
mov
mov
xor
jbe
or
rcr
cmp
xor
es
cmps
imul
addr16
inc
adc
xor
or
xor
xor
cmp
popa
sub
inc
popa
xor
fisubr
mov
push
mov
outs
clc
push
xchg
push
xlat
inc
out
jns
jae
or
add
jle
push
not
add
xor
es
cmp
daa
push
xor
mov
pop
and
adc
neg
add
popa
data16
dec
inc
cmp
pop
jbe
or
(bad)
bound
jae
aam
or
cmp
or
adc
pop
lods
call
mov
cvtps2pi
pop
pop
or
dec
popa
jns
inc
hlt
in
mov
pusha
repnz
aad
fdivr
or
cs
ja
dec
and
icebp
cs
pop
imul
mov
cdq
pop
fldcw
fwait
ret
pop
or
pop
pop
pop
mov
addr16
inc
adc
adc
les
xor
sbb
cmp
xor
dec
loopne
aam
and
dec
and
dec
inc
js
add
push
or
std
(bad)
sbb
inc
loop
push
lahf
ins
int3
(bad)
fsubr
bnd
fxrstor
sub
push
outs
xor
mov
inc
lahf
pop
add
sub
add
inc
stos
xchg
or
jg
or
call
mov
and
sbb
push
scas
iret
xchg
jno
adc
adc
adc
pusha
pop
xchg
push
test
push
mov
scas
adc
aaa
imul
push
and
(bad)
pop
xchg
push
call
jb
xor
imul
mov
jecxz
addr16
cmp
inc
xor
sbb
jns
xor
loope
ja
fs
je
ins
pop
dec
sub
mov
push
or
std
pop
js
sub
outs
inc
add
iret
xor
adc
mov
mov
cli
ret
inc
and
inc
cs
ins
das
daa
and
adc
cmps
cs
mov
sub
or
and
inc
adc
jae
pop
dec
dec
movs
or
cmp
add
cmp
out
and
lahf
cmp
popa
dec
leave
je
cvtdq2ps
dec
cmp
pop
push
inc
pop
and
(bad)
jl
les
and
mov
push
inc
inc
xor
dec
push
inc
pusha
sub
mov
rcl
sahf
ds
(bad)
jg
push
push
cmp
cmp
es
lock
std
out
adc
xor
xor
jo
push
je
xor
xor
mov
and
sbb
aaa
xor
aad
and
fsub
add
aas
inc
push
and
add
xchg
je
cmp
mov
div
mov
push
lods
push
pop
inc
push
xor
xor
ss
inc
or
pop
lods
pop
xchg
pop
(bad)
dec
push
adc
inc
and
mov
ss
mov
imul
jae
sub
outs
xchg
cmp
add
call
add
inc
push
lahf
dec
sar
inc
mov
inc
jl
outs
rol
mov
test
pop
int
pop
push
mov
add
pusha
addr16
jge
adc
outs
adc
and
inc
pop
push
mov
sub
inc
imul
mov
dec
add
dec
mov
push
inc
xor
xor
idiv
xor
mov
cmp
push
add
and
outs
loopne
inc
xchg
xor
xor
sub
inc
fadd
xor
cmp
cmp
sbb
sub
cmps
xor
xor
add
xor
pop
and
push
cdq
pusha
xchg
add
inc
or
movs
pusha
add
cmp
sub
(bad)
or
xor
pop
mov
enter
or
fiadd
in
aas
inc
mov
xor
xor
xchg
cmps
xor
add
ret
ja
pop
mov
sub
jo
xor
cmp
shl
aaa
xchg
inc
jecxz
imul
(bad)
(bad)
imul
arpl
and
mov
xchg
mov
mov
xor
mov
inc
cmp
pop
inc
jp
pop
sub
push
adc
add
push
or
lock
or
es
aam
sbb
dec
inc
push
and
pop
(bad)
dec
dec
mov
inc
inc
dec
add
adc
push
inc
inc
pop
jnp
sar
cld
dec
inc
dec
das
out
mov
cmp
popa
das
pop
adc
pop
dec
adc
adc
fs
inc
arpl
jecxz
mul
popa
xlat
out
fnstsw
cmp
cmp
bound
cmp
or
fistp
add
xor
dec
arpl
inc
xchg
xor
xor
or
shr
push
xor
shr
stc
push
js
gs
inc
fidiv
cmp
add
(bad)
fst
inc
sahf
pop
aas
test
dec
xchg
push
je
sub
and
adc
stos
adc
jns
push
(bad)
shr
push
in
and
xlat
and
mov
daa
in
adc
into
js
outs
int
(bad)
out
jnp
dec
sbb
jmp
outs
jp
sub
xor
sub
mov
leave
lods
shl
adc
clc
and
xor
call
outs
xor
pop
(bad)
dec
push
add
jne
pop
js
sub
cmp
cmp
jbe
xor
cmp
or
movs
cs
sub
imul
xor
xor
xor
adc
sbb
sub
adc
inc
dec
inc
sub
(bad)
ss
push
xchg
xchg
int
xor
int
push
xor
mov
data16
jmp
or
sub
hlt
(bad)
dec
xchg
test
push
retfw
sbb
sub
mov
bound
je
in
xor
ins
dec
adc
sbb
sub
jl
cmp
mov
stos
imul
xlat
mov
stos
ins
and
or
or
and
jbe
add
and
mov
xor
push
jl
dec
inc
aam
or
jecxz
lods
jb
icebp
mov
popa
aas
jo
jae
push
out
jg
outs
pop
pop
js
popa
push
fs
sub
and
jle
mov
pop
sub
daa
pop
(bad)
sbb
xor
pusha
adc
cmp
xchg
adc
sbb
imul
jo
repnz
xchg
(bad)
cli
add
sahf
push
call
xor
push
dec
jns
xchg
ins
ja
sub
nop
outs
cmps
sbb
daa
xchg
mov
lahf
das
ss
out
dec
sub
fistp
xor
ss
inc
xor
sub
sub
inc
cmp
mov
sbb
xor
test
pop
push
sub
push
pop
inc
outs
outs
addr16
pop
push
dec
clc
outs
inc
or
test
cdq
pop
push
int
aaa
xchg
add
pop
daa
and
push
sbb
pop
rcr
or
mov
adc
data16
clc
and
pop
jg
pop
(bad)
adc
cmp
cmp
inc
mov
add
cvttps2pi
and
sbb
(bad)
and
scas
xchg
rcl
cmp
cmp
adc
or
inc
test
outs
sbb
mov
fistp
daa
jae
mov
adc
pop
(bad)
xchg
ror
out
rol
test
dec
retf
push
outs
mov
outs
push
push
outs
arpl
stos
and
mov
ret
dec
xor
ins
pop
xor
hlt
add
add
inc
dec
cmps
imul
cmps
arpl
fdiv
mov
ret
lods
dec
inc
gs
fcmovnb
nop
mov
mov
ins
add
sub
(bad)
xchg
and
jge
add
fwait
jb
sub
hlt
rcl
add
inc
jmp
mov
ret
pop
jne
xor
mov
inc
iret
jb
mov
add
or
lods
mov
and
les
les
pop
(bad)
cmp
add
or
sbb
je
mul
test
sub
ror
jo
cmp
jo
xor
imul
mov
lea
push
mov
jl
xchg
and
pop
(bad)
gs
cli
imul
fs
out
sti
and
lahf
pop
xchg
loopne
sar
(bad)
mov
xchg
fwait
pop
push
pop
lea
mov
sar
shl
(bad)
shl
sbb
inc
(bad)
cmp
shl
sbb
mov
mov
sar
mov
cmp
mov
out
adc
rcl
ins
(bad)
mov
dec
mov
pop
int
pusha
mov
mov
mov
test
pop
push
mov
js
or
mov
jns
pop
in
inc
xor
fld
mov
mov
cs
loop
imul
ins
jns
pop
jl
and
jne
mov
or
adc
mov
loopne
jmp
dec
jne
mov
jae
dec
lds
cmp
jo
xor
xor
mov
test
mov
inc
stos
adc
jne
push
rcr
repnz
fs
out
enter
jo
into
jp
(bad)
inc
sbb
imul
ficom
jbe
lods
push
inc
mov
cwde
xor
jmp
cmp
dec
cmp
add
xchg
sbb
xor
jbe
gs
ins
and
mov
mov
daa
ret
retf
mov
dec
stos
data16
stc
inc
les
jmp
leave
mov
and
ds
jp
sub
or
cmps
mov
sti
mov
push
or
adc
daa
loopne
add
lock
push
or
nop
js
data16
xlat
push
ins
sub
cmps
inc
ucomiss
adc
adc
xor
add
mov
das
popa
pop
test
add
(bad)
repnz
mov
push
jp
cmp
sbb
or
out
sbb
jle
add
outs
adc
into
scas
push
mov
cld
(bad)
ret
push
arpl
jecxz
xlat
mov
push
shl
fs
scas
xchg
sbb
and
test
dec
stos
jp
jp
jne
or
cmp
les
xor
fld
popa
mov
movs
and
pop
sub
jo
fwait
je
fisubr
inc
pop
addr16
dec
inc
mov
xchg
(bad)
jae
push
sbb
pop
retf
push
ins
nop
into
pusha
adc
sbb
(bad)
sbb
inc
(bad)
out
imul
jne
out
bound
sub
loop
jne
mov
push
adc
loope
push
fsubr
adc
sti
xor
pushw
inc
adc
sbb
jbe
mov
popf
jns
sahf
sub
cmps
shr
dec
sub
sbb
inc
sbb
cmp
or
imul
mov
hlt
in
pop
hlt
shl
sbb
imul
fdiv
loop
out
sti
add
push
mov
cmp
jbe
jns
mov
(bad)
leave
test
cdq
cmps
bound
xchg
cmp
imul
icebp
in
mov
pop
lock
cwde
imul
pop
(bad)
xor
adc
push
mov
jecxz
mov
inc
data16
add
stc
mov
jo
pop
sub
repz
in
mov
imul
dec
js
enter
push
mov
mov
adc
adc
cmp
pop
xchg
dec
add
fwait
push
sub
sub
mov
outs
sti
pop
(bad)
in
xchg
xor
pop
pop
add
jbe
ja
les
arpl
sub
push
or
add
and
(bad)
jns
enter
sbb
rcr
ins
or
retf
loop
aas
push
or
add
int3
mov
add
add
push
(bad)
imul
add
push
pop
sub
into
cld
push
push
pop
push
push
jb
rol
pop
adc
daa
sbb
xor
call
nop
(bad)
mov
ins
stos
lahf
dec
ret
leave
test
cmp
inc
ss
popf
movs
push
xchg
lods
jecxz
enter
mov
adc
and
pop
(bad)
push
mov
pop
into
push
add
cmp
pop
xchg
cs
std
(bad)
pop
push
dec
cmps
xchg
push
fld
push
loope
(bad)
test
jo
jae
or
fld
xor
mov
cmp
push
aad
lods
imul
ffree
mov
add
mov
push
sbb
ja
dec
sub
sub
repz
jno
xor
inc
mov
pusha
mov
xchg
cmc
xchg
mov
repz
jp
xor
outs
bound
inc
and
fwait
xchg
rcl
and
hlt
inc
mov
imul
sub
cwde
in
or
or
ror
xchg
sub
popf
jmp
std
loopne
push
cwde
mov
ja
pushf
sti
and
jns
jp
sbb
loopne
jo
jp
adc
(bad)
fsub
xchg
cmp
inc
mov
sti
adc
jbe
ss
xchg
xor
mov
loop
imul
popa
imul
ret
jne
sub
xchg
jo
fbld
jbe
daa
fadd
in
data16
sub
mov
jp
stc
lods
push
pusha
inc
aas
repnz
psrlq
pop
lods
sub
int
lods
jno
add
ins
addr16
aam
or
dec
imul
push
gs
arpl
and
pop
ja
cmp
xor
outs
mov
add
xor
pop
mov
push
rcr
outs
mov
dec
fs
and
aaa
ja
or
xlat
imul
popa
add
and
and
(bad)
mov
and
mov
adc
adc
cli
mov
jmp
xor
or
mov
out
(bad)
push
mov
lds
test
(bad)
pop
cmp
cmp
inc
inc
out
add
popf
inc
push
push
or
lock
add
and
ret
call
sbb
mov
ins
jne
jbe
mov
mov
ins
xchg
cmp
sub
push
cwde
mov
pop
sub
jg
icebp
or
mov
mov
mov
(bad)
rol
(bad)
jg
jbe
fwait
push
mov
lods
adc
popa
jp
or
pop
ins
push
mov
inc
cwde
jge
imul
jg
gs
push
adc
and
jne
inc
ss
mov
mov
fild
hlt
push
push
sbb
inc
mov
scas
(bad)
loopne
jae
adc
nop
or
sbb
repnz
push
pop
sbb
outs
or
pop
imul
imul
xor
push
lods
mov
dec
mov
pop
daa
jge
push
inc
add
fs
sbb
and
add
bound
lds
(bad)
mov
xlat
rol
cmp
gs
add
test
sub
and
jmp
adc
and
test
mov
js
call
mov
mov
cmp
inc
push
sbb
adc
mov
mov
inc
pop
pmulhw
mov
jae
mov
dec
push
fnstcw
inc
ret
lea
adc
lea
or
jne
mov
enter
mov
xchg
iret
dec
mov
push
add
push
mov
xchg
jns
imul
test
xor
add
push
xchg
add
lock
inc
fwait
sbb
es
lahf
nop
xchg
sub
jo
dec
bound
push
or
sbb
je
pop
test
cdq
and
cmp
mov
out
mov
dec
rcr
or
and
clc
jb
hlt
xor
dec
push
shr
test
mov
outs
out
ins
stc
cmp
sti
mov
and
test
inc
push
dec
and
je
jo
popf
mov
add
and
daa
push
arpl
mov
push
sub
cmp
test
das
mov
or
mov
lahf
and
rol
push
xchg
fmul
sub
adc
dec
repz
push
adc
test
mov
sub
mov
sbb
dec
arpl
je
mov
sbb
push
in
test
test
jbe
popa
shl
inc
outs
adc
and
dec
adc
inc
sub
stc
push
rcl
jae
lods
test
cli
imul
ret
or
xor
lods
leave
rcr
mov
push
mov
jbe
repz
add
or
sub
(bad)
push
xor
shl
shl
or
jbe
imul
push
xchg
pop
inc
je
pushf
mov
adc
aad
mov
clc
jae
inc
push
cmp
icebp
ins
ins
fiadd
stos
out
movs
mov
arpl
daa
adc
push
cs
in
xchg
dec
popa
jb
jp
inc
push
or
(bad)
pop
imul
sbb
sbb
lahf
mov
sti
mov
outs
xchg
pop
outs
sbb
push
inc
sbb
mov
ret
inc
jno
and
ds
mov
add
sub
aas
adc
popa
push
in
push
loopne
nop
dec
mov
add
add
adc
sub
pop
adc
inc
sbb
jmp
xor
inc
pop
icebp
adc
mov
jno
mov
nop
add
push
pop
and
add
add
jo
push
lea
dec
lock
push
rcl
jns
mov
or
ins
pop
in
mov
xchg
inc
add
dec
push
inc
fs
daa
cmc
in
fwait
adc
or
(bad)
scas
ret
cli
push
in
js
or
mov
xor
popa
xchg
xor
ficomp
clc
adc
pop
xor
addr16
cli
or
gs
pop
cwde
cmp
arpl
cdq
aam
pop
ret
mov
adc
push
rcl
inc
push
addr16
hlt
push
cmp
mov
push
in
popa
popa
sub
mov
shl
add
(bad)
outs
out
push
loop
fld
gs
jno
fld
popa
pop
popa
push
ret
mov
cmp
fs
fisubr
pop
fld
jb
sbb
addr16
mov
add
mov
jae
push
mov
mov
add
sahf
ins
jns
mov
jle
imul
mov
fs
add
jns
mov
pop
sub
or
xor
xor
add
test
inc
add
sbb
je
iret
fs
inc
cmp
add
xor
mov
ja
ror
ja
mov
or
pop
mov
push
inc
pop
lods
call
jb
push
or
xchg
sahf
jns
(bad)
and
xor
pop
arpl
test
pusha
mov
add
xchg
mov
cmp
retf
xchg
sub
ins
cmps
xchg
imul
add
mov
push
lds
cmc
add
add
imul
inc
loopne
imul
cmc
outs
ret
mov
aaa
out
iret
push
jae
test
ret
test
imul
jno
and
arpl
adc
mov
jmp
sahf
inc
xor
mov
dec
mov
ja
(bad)
test
mov
dec
aad
mov
test
retf
or
pop
test
jns
ins
in
imul
inc
pusha
int3
cmp
mov
xor
in
pushf
jb
retf
dec
cmp
les
pop
sbb
bound
push
outs
aas
mov
cmps
pop
add
add
sar
or
adc
and
jns
adc
inc
mov
popa
(bad)
adc
les
cs
mov
push
push
add
fs
ins
jo
mov
or
sbb
je
jne
out
popa
or
add
scas
mov
mov
jno
pusha
mov
out
out
mul
add
mov
gs
cmps
ins
mov
mov
test
dec
bound
jge
add
popa
sbb
xchg
imul
out
add
pop
adc
sub
fsubr
ret
test
cmp
sahf
jns
and
mov
mov
mov
(bad)
idiv
test
cmc
mov
outs
mov
add
mov
test
sub
mov
add
and
aaa
adc
cld
push
outs
hlt
jne
imul
and
inc
ror
lds
rol
sub
mov
and
mov
arpl
imul
xlat
dec
and
(bad)
mov
movntps
jle
not
jg
xor
ret
imul
mov
pushf
icebp
bnd
jg
and
cmp
sub
sbb
and
adc
ret
lahf
cmp
pop
and
mov
arpl
dec
dec
mov
dec
mov
xor
pop
les
sbb
push
jmp
popa
xlat
mov
retf
mov
into
(bad)
mov
inc
lea
mov
or
fimul
or
jp
loop
cmps
test
ins
jne
push
mov
in
call
dec
lods
bound
sbb
mov
jb
inc
jno
mov
rol
iret
mov
imul
pop
ins
inc
and
mov
mov
xor
xchg
stos
jb
arpl
xor
aaa
jb
inc
loope
push
arpl
and
xor
cmc
adc
and
or
and
dec
jae
jo
and
ss
ror
cmp
or
push
lods
retf
dec
outs
dec
adc
push
jne
daa
cmp
xchg
mov
out
dec
sbb
pop
jnp
pop
push
daa
mov
dec
add
sub
shr
das
inc
jnp
es
xor
add
inc
sbb
adc
movs
mov
outs
call
adc
js
stos
ds
mov
movs
ror
cmp
xchg
aas
call
adc
mov
pop
mov
outs
leave
sub
add
cmps
ins
aas
(bad)
cvtdq2ps
sbb
xchg
inc
inc
fimul
shl
bound
xchg
addr16
ins
addr16
add
es
jbe
xchg
xor
imul
loope
shr
mov
dec
loope
pop
nop
mov
pusha
mov
dec
cmc
loopne
mov
add
cmp
jnp
popf
lods
and
push
sub
cmp
ficom
addr16
das
and
and
rcr
sbb
adc
rol
jl
js
xchg
sar
movs
cmp
fwait
les
fstp
mov
jbe
outs
dec
add
xor
sub
fstp
stos
js
ror
xchg
fs
iret
push
test
dec
xchg
ins
add
cmps
call
xor
ins
xor
jmp
mov
add
dec
and
add
or
mov
xchg
sbb
mov
xchg
cmp
ja
mov
add
(bad)
push
fcom
push
cli
cwde
pop
add
ret
jp
push
and
fnstenv
xor
cs
pusha
fisubr
loope
imul
xor
and
inc
xchg
push
inc
mov
mov
xchg
(bad)
mov
pop
dec
cmp
or
jae
jne
and
push
jae
lods
out
lods
adc
test
push
outs
jne
cmp
push
jae
push
push
add
add
or
mov
pop
adc
in
sub
gs
mov
adc
cmp
or
fs
xchg
and
xchg
mov
mov
sbb
gs
add
sbb
push
sbb
pop
mov
push
loopne
(bad)
(bad)
mov
add
xchg
imul
addr16
sub
cdq
ror
sub
xchg
arpl
loop
imul
test
add
xor
xchg
and
pop
adc
outs
adc
or
jbe
mov
popa
adc
dec
push
sub
xchg
fndisi(8087
cwde
add
int3
xor
sbb
sub
test
add
imul
and
cmps
jbe
out
popa
repz
push
sub
add
inc
cmp
cmp
sbb
xor
xlat
mov
jmp
lds
fstp
dec
test
movs
loop
int3
sub
dec
push
sbb
sub
jb
popa
jno
inc
push
lods
mov
and
int
add
and
push
daa
ret
dec
rcr
push
bound
icebp
bound
call
dec
lods
outs
push
je
sub
fs
stos
mov
and
out
lahf
mov
dec
sbb
mov
cdq
aad
aam
add
aas
sahf
jns
aad
dec
inc
mov
or
mov
jns
adc
sub
dec
mov
sub
jl
sub
adc
mov
imul
pushf
pop
or
inc
jb
mov
cs
and
ret
mov
lds
inc
push
pop
jp
bound
pop
fdiv
and
(bad)
dec
inc
jle
ds
push
and
dec
outs
cli
aas
xchg
les
mov
jns
sbb
fst
ja
fs
ins
addr16
mov
pop
mov
mov
sub
ins
aas
sub
mul
dec
inc
stos
or
xchg
ins
and
addr16
fild
push
mov
and
mov
dec
inc
mov
mov
push
arpl
daa
dec
adc
(bad)
outs
fcomip
dec
add
daa
inc
push
fsubr
cmps
js
rcr
in
je
fbld
jo
cmps
gs
and
dec
out
pop
sbb
das
daa
out
dec
sub
push
adc
push
or
aad
imul
(bad)
and
sbb
pop
and
loopne
(bad)
push
jns
pusha
or
push
sub
xchg
push
push
xchg
les
pop
popf
mov
xchg
sub
lahf
movs
mov
inc
pop
or
out
pusha
adc
and
lock
or
or
mov
add
cmps
mov
jmp
mov
or
cmp
out
jo
xchg
xor
mov
mov
enter
outs
mov
int3
ins
jns
or
shl
ja
mov
xchg
jo
jo
and
ins
test
enter
jae
cdq
fs
mov
ins
lea
xchg
js
xor
bound
xor
lock
mov
push
ret
mov
or
jecxz
movs
xchg
sbb
test
mov
push
test
adc
pop
inc
sub
inc
cli
loop
and
adc
and
sbb
inc
xor
push
cmp
cmp
push
push
gs
(bad)
gs
mov
imul
loopne
push
popa
pop
xor
fisttp
cwde
ins
xor
jo
outs
sub
ffree
mov
mov
lds
je
jns
pop
or
xchg
fadd
push
dec
les
rcl
xor
in
les
jl
and
pusha
mov
cmp
enter
data16
test
xor
or
bound
bound
mov
adc
push
les
or
and
push
inc
jb
sbb
sub
add
imul
inc
sbb
(bad)
sbb
inc
push
pusha
adc
leave
or
push
jecxz
or
mov
(bad)
in
or
mov
jecxz
jno
mov
lods
ja
(bad)
push
push
scas
int3
arpl
daa
jae
cs
mov
mov
fwait
sub
sbb
pop
lahf
ins
xor
push
das
jb
push
xchg
sub
fcomp
and
mov
and
push
outs
dec
pop
retf
popa
jo
pop
cs
push
es
mov
or
dec
mov
sub
test
inc
outs
outs
mov
adc
int
add
retf
adc
loope
pop
cmp
xor
out
sbb
shl
sbb
cmp
mov
sub
rcr
gs
xchg
inc
das
sahf
mov
jp
sbb
dec
pop
sbb
lea
stos
iret
and
jne
ror
mov
les
aam
dec
pop
jae
jp
js
jmp
outs
xor
adc
bound
rcl
mov
sub
mov
add
imul
popa
test
mul
xchg
push
imul
outs
jno
push
and
push
ds
(bad)
sbb
imul
xor
addr16
sbb
jge
sub
add
mov
call
test
mov
ja
sbb
inc
inc
(bad)
mov
push
push
in
test
adc
dec
or
cld
adc
and
fs
or
(bad)
les
xor
out
pop
test
fdiv
add
(bad)
fsub
mov
jl
cmp
add
sub
add
loopne
jo
sbb
jbe
xor
jb
cli
out
clc
fmul
add
stos
and
mov
jne
pop
or
pusha
cs
lods
(bad)
ins
sbb
adc
outs
xchg
push
jno
ret
jnp
out
sub
jmp
outs
xchg
cmp
xor
or
inc
and
mov
pop
leave
ret
mov
icebp
inc
mov
rcr
daa
ror
test
mov
xchg
and
inc
xor
xor
jno
loope
lea
loop
dec
outs
add
mov
outs
push
push
mov
mov
test
dec
mov
stos
push
mov
add
xchg
adc
into
(bad)
jp
mov
cs
movs
sbb
loope
outs
sbb
cmp
push
movs
or
and
xchg
push
dec
je
push
cmp
dec
popa
loop
outs
mov
adc
xchg
bound
inc
ins
mov
cmp
xchg
pop
lea
add
add
aam
lds
movs
push
push
pusha
add
push
dec
mov
sub
outs
loope
rol
addps
and
out
add
daa
sub
dec
arpl
lods
mov
enter
lea
push
xor
push
int3
ja
and
int
add
stos
sub
pop
mov
mov
loop
or
ins
lds
inc
mov
stos
fldenv
push
test
add
ret
jae
scas
push
mov
outs
or
lods
and
fisubr
imul
fucomp
pusha
push
jmp
addr16
mov
frstor
inc
xchg
inc
lods
or
int3
sbb
in
pandn
pop
ror
cld
sbb
push
enter
push
test
loope
ret
jmp
xor
bound
add
sbb
and
mov
mov
enter
mov
sub
push
in
je
xor
mov
inc
loopne
fadd
out
ret
fs
jno
into
and
mov
movs
shl
ins
adc
xchg
cmp
sbb
pusha
aas
leave
cwde
push
ins
add
push
mov
mov
inc
jmp
dec
int
(bad)
clc
mov
jmp
movs
xchg
stos
xor
pop
mov
mov
ss
pusha
add
mov
xor
inc
mov
test
mov
pusha
and
das
dec
or
pop
add
(bad)
jle
push
sbb
sub
in
dec
inc
ins
outs
ins
inc
xor
outs
dec
adc
mov
xor
mov
ins
jl
cwde
push
mov
mov
pop
mov
mov
shl
aas
xor
lods
add
jl
sar
daa
(bad)
sub
inc
daa
outs
xchg
iret
jae
int
xchg
dec
pop
push
ins
das
inc
xchg
dec
imul
out
cwde
addr16
vcvtsi2ss
mov
fidiv
ins
loopne
add
pop
shr
ror
inc
lock
rol
add
(bad)
cs
lods
outs
xchg
mov
js
jns
mov
pop
sti
(bad)
xor
cmp
jb
jl
cld
dec
mov
test
ficomp
shr
cld
enter
dec
mov
push
imul
enter
iret
xor
lahf
call
mov
cmps
xchg
xchg
aaa
dec
or
ds
add
xchg
xchg
adc
sbb
(bad)
loopne
mov
inc
(bad)
and
ins
or
fs
pushf
popa
ins
adc
cdq
icebp
mov
movs
push
mov
xor
mov
ret
pop
iret
dec
xchg
ja
pop
jnp
out
je
lahf
hlt
add
add
sub
push
dec
lahf
test
in
nop
xor
mov
mov
xlat
outs
jae
iret
mov
mov
nop
enter
pushf
mov
lods
pop
repnz
ror
fmul
inc
jno
xchg
int3
daa
sbb
out
cdq
adc
and
neg
daa
outs
pop
or
mov
daa
out
or
push
pushf
push
and
and
add
adc
mov
or
xchg
repz
push
scas
outs
sub
(bad)
pop
dec
int3
fsubr
push
test
outs
push
aaa
clc
es
dec
sbb
outs
sub
push
lds
xchg
iret
adc
scas
outs
mov
loopne
xchg
push
mov
das
sbb
cwde
shr
loopne
inc
addr16
out
jle
or
push
aaa
fild
fild
xchg
mov
pop
add
fidivr
fld
cmps
jg
push
mov
cmp
cmps
and
dec
outs
aaa
repz
in
mov
add
push
cwde
mov
add
add
dec
push
fistp
(bad)
(bad)
ins
ins
push
ins
aas
pop
add
adc
addr16
ss
xor
mov
dec
add
cwde
out
(bad)
xor
dec
sbb
clc
xchg
outs
adc
popa
sub
inc
push
call
or
or
call
inc
call
mov
mov
scas
dec
xlat
ja
jnp
cmp
aam
add
xchg
cld
enter
mov
fiadd
xchg
fwait
(bad)
xor
sub
xchg
pop
neg
push
mov
retf
push
pop
push
movs
push
call
into
js
push
sub
add
push
js
push
dec
leave
(bad)
xchg
pop
leave
xor
add
sub
jmp
rol
ins
xchg
jbe
retf
adc
jg
mov
xchg
cmp
inc
xchg
in
ficom
add
xchg
mov
lahf
xchg
cs
out
add
movs
in
mov
pop
and
dec
jmp
lods
fs
add
aad
fist
stos
dec
or
retf
daa
add
fidivr
fs
scas
push
fadd
mov
inc
push
ret
xor
pushf
repz
dec
xor
movs
out
push
mov
sbb
ffreep
push
xor
das
outs
add
add
pop
nop
test
adc
call
ins
cmps
inc
call
popa
cmp
dec
jg
jnp
xchg
adc
ds
jmp
pop
outs
dec
outs
jo
sub
dec
inc
xchg
sub
mov
sub
sub
fstp
daa
push
fcom
push
pop
into
push
aad
jns
mov
or
(bad)
cmps
popf
fs
pusha
inc
sub
xor
adc
rcr
shr
out
jns
ins
push
push
rol
movs
cmp
cmp
mov
rol
shr
cmps
stc
cld
shl
les
iret
sar
inc
and
dec
imul
je
pop
mov
push
mov
(bad)
dec
int3
add
shl
add
iret
xchg
xor
popf
add
dec
repz
iret
xor
iret
jns
sbb
mov
ret
shl
push
shl
mov
(bad)
iret
add
push
pop
leave
adc
pop
sbb
inc
shl
add
push
lods
mov
outs
or
add
add
dec
dec
pop
enter
inc
clc
popf
dec
inc
sub
sbb
sub
xor
dec
popa
sub
xchg
outs
add
test
inc
pop
repnz
enter
outs
dec
cs
jbe
loop
xor
out
ss
icebp
dec
sahf
push
add
mov
and
ins
push
xor
pop
scas
fadd
xchg
add
sbb
daa
push
xor
xor
push
jnp
or
cmps
aaa
fsub
sbb
in
pop
pop
cld
lds
lods
pop
scas
add
add
mov
outs
push
jb
fdiv
rcr
xor
inc
mov
ret
xchg
outs
add
mov
mov
inc
mov
lock
sub
cmps
rcl
adc
sahf
nop
xor
aam
jns
and
pop
push
lock
je
cmps
sub
xchg
sbb
mov
add
mov
and
out
inc
mov
loopne
jg
dec
and
bound
sub
mov
outs
and
lahf
imul
aad
js
inc
scas
in
cwde
aad
xchg
push
mov
bound
(bad)
dec
xchg
in
sbb
mov
or
(bad)
cmp
out
movs
push
xchg
out
or
mov
add
fnstcw
neg
ret
push
les
xchg
jo
test
cmc
bound
mov
and
sbb
sub
(bad)
push
mov
loope
xlat
jg
push
adc
in
cmp
xlat
(bad)
scas
sbb
pop
sbb
movs
vmovntps
add
mov
add
xlat
ja
div
fldenv
mov
adc
rol
outs
push
sub
ret
push
jg
imul
out
jo
daa
add
pop
jge
outs
sbb
fld
inc
fadd
and
popf
cmp
adc
scas
js
push
push
inc
add
xchg
push
or
push
mov
xlat
mov
lock
enter
pop
sub
cmp
ficom
and
push
xlat
or
dec
neg
scas
add
xlat
or
clc
push
xchg
fmul
fldenv
cmp
cmp
pop
adc
fwait
cld
(bad)
or
fidivr
test
and
add
dec
repz
add
sbb
rcr
xchg
aam
pop
leave
mov
(bad)
mov
sub
ins
pusha
aaa
add
in
les
fld
xchg
and
add
jo
sbb
fist
enter
mov
xor
(bad)
aam
add
enter
(bad)
fdivr
adc
cmps
sub
popa
and
mov
mov
cmp
das
outs
add
jne
pop
or
push
outs
and
(bad)
fcomp
mov
outs
mov
das
add
call
push
enter
sub
push
jo
xchg
dec
addr16
mov
add
(bad)
fsubr
sbb
mov
adc
pop
fnstsw
inc
cmps
inc
dec
cmps
clc
xchg
and
jle
(bad)
push
out
dec
stos
cmp
dec
push
test
fisub
das
out
add
fistp
push
hlt
push
xor
cwde
dec
shr
pop
mov
fiadd
test
fidivr
nop
mov
fisttp
sub
aam
pop
test
adc
fild
outs
leave
xchg
cmp
test
xchg
outs
(bad)
(bad)
sbb
mov
or
pop
loopne
(bad)
pop
lods
sbb
(bad)
lahf
xchg
(bad)
ins
loopne
and
xchg
sub
mov
sub
inc
movs
loope
out
mov
push
add
in
enter
test
stos
cmovge
stos
jl
iret
test
add
lock
loop
loope
dec
push
mov
push
das
add
mov
add
ins
sub
add
test
push
push
stos
jmp
inc
and
lahf
inc
es
push
(bad)
sbb
loop
sub
ins
loop
xchg
shl
xlat
inc
push
jl
sub
loop
jo
xchg
jmp
iret
lds
lds
call
ret
dec
clc
push
adc
push
adc
push
ret
add
xlat
jne
add
mov
push
repnz
mov
jg
add
mov
clc
stos
mov
ins
add
ja
mov
js
stos
mov
outs
dec
cs
scas
lock
add
add
call
mov
mov
fdiv
push
pop
daa
aas
(bad)
addr16
test
(bad)
lods
mov
lods
mov
jae
iret
int3
aam
in
jns
pop
enter
lods
or
les
push
cmp
fisubr
push
outs
ss
fld
out
add
push
shl
push
push
call
fisub
test
pop
mov
iret
repz
dec
jo
mov
call
inc
pusha
repz
out
mov
cmps
stc
cmp
cmp
jns
mov
push
mov
int
jns
(bad)
or
iret
repz
xor
out
jmp
cmp
ds
mov
push
shl
sahf
cmps
stc
xor
xchg
xor
iret
ror
inc
xchg
pop
call
and
int
adc
popf
mov
cmps
stc
mov
aam
lahf
test
in
mov
idiv
mov
push
imul
iret
jl
sub
int
stc
mov
push
fcomp
aad
cmps
push
dec
repz
test
out
add
mov
lods
push
cmps
stc
cmp
pop
test
fs
pushf
cmps
stc
cmp
jg
scas
loop
mov
mov
sbb
push
out
sahf
cmps
stc
sub
mov
dec
mov
(bad)
mov
aas
mov
and
mov
out
jl
mov
fmul
out
jl
mov
sar
mov
(bad)
iret
or
sahf
out
sahf
xor
and
jl
shl
pop
mov
call
cwde
repz
out
lock
dec
jnp
imul
aam
js
into
jo
test
mov
push
mov
adc
sub
cmp
out
mov
and
(bad)
fnstcw
cmps
stc
sbb
dec
js
loope
sahf
cmps
fnstenv
push
xor
test
cmp
out
push
fimul
test
jns
out
fistp
shr
repz
sbb
inc
push
repz
pusha
mov
sbb
pop
mov
out
repz
call
jo
imul
loopne
push
mov
cmp
and
ds
repz
lock
push
sar
xchg
cmps
stc
cmp
cwde
enter
pusha
dec
repz
mov
call
ja
repz
shl
push
fucom
jns
pop
nop
shr
out
repz
out
mov
or
pop
pushf
out
call
call
daa
loopne
and
and
test
jmp
adc
dec
xchg
fild
ja
addr16
ins
fimul
push
xchg
test
mov
fsubr
add
(bad)
or
dec
mov
xchg
pop
scas
nop
cmp
push
aam
bound
mov
and
test
mov
inc
cmp
lea
(bad)
int3
inc
mov
shl
jg
aas
mov
inc
sar
sub
syscall
xchg
inc
mov
jl
xchg
inc
push
dec
dec
xchg
adc
sub
push
cdq
mov
call
jmp
pop
arpl
pop
enter
mov
pop
mov
ja
push
das
jp
mov
dec
(bad)
iret
cmp
add
scas
sar
push
dec
lods
inc
mov
mov
cmps
aam
lahf
(bad)
mov
out
dec
xlat
test
cmp
pop
xor
aas
mov
aad
daa
sbb
iret
(bad)
leave
xlat
sbb
pop
fdivr
(bad)
fsubr
jecxz
adc
test
xor
(bad)
lahf
or
daa
fimul
loop
xchg
in
pushf
arpl
popf
lock
pop
lods
mov
push
jno
pop
repnz
and
fcmovbe
fcomip
pop
enter
xchg
data16
ss
mov
dec
mov
outs
(bad)
xor
iret
fisttp
ds
adc
jae
sub
and
ror
push
sbb
test
repnz
es
push
mov
mov
inc
fsub
inc
and
rcl
sub
dec
sub
ins
dec
xor
dec
push
pop
push
(bad)
cmp
pop
push
jb
mov
aas
test
mov
aas
pop
ja
push
jo
loopne
jle
call
adc
add
xchg
dec
pop
pop
add
push
lea
and
sahf
stos
mov
xlat
addr16
aaa
dec
and
adc
inc
ins
cmc
retf
mov
inc
sahf
jo
aad
mov
scas
rcl
test
mov
enter
shr
inc
add
dec
in
leave
in
cdq
out
aaa
inc
mov
aaa
lock
pop
sbb
jle
scas
mov
cmp
inc
cmp
cmps
fisub
push
cmp
out
xchg
outs
je
call
mov
hlt
xor
or
mov
pop
int3
hlt
xlat
push
or
lds
cmp
addr16
aaa
pop
add
push
(bad)
cmc
push
cmc
cmps
jecxz
mov
mov
and
inc
adc
cmc
sub
push
dec
out
fs
fisub
scas
scas
fdivr
mov
mov
test
daa
inc
call
jno
pushf
pop
jl
lock
mov
xchg
jl
test
adc
daa
inc
mov
push
cmp
pop
js
xchg
mov
jns
jb
mov
cmp
sbb
leave
sub
clc
or
sub
fs
dec
test
cmp
sbb
bound
mov
mov
mov
push
push
pop
adc
addr16
mov
push
pop
mov
data16
outs
push
(bad)
jbe
add
leave
inc
bnd
stos
inc
jb
leave
mov
mov
leave
leave
leave
out
idiv
xchg
add
or
xchg
jnp
xchg
pop
xor
cmp
pop
ja
pop
dec
bound
ja
leave
repz
dec
outs
jp
add
add
stos
push
ja
call
leave
leave
dec
jecxz
test
in
in
or
and
cmp
pop
lock
in
outs
jp
mov
inc
repnz
push
adc
scas
push
adc
out
add
jecxz
lods
cmp
jmp
repz
sti
add
sar
add
mov
push
push
sahf
xchg
out
cs
das
cmp
sahf
xchg
out
inc
or
or
xchg
out
or
setle
xchg
popf
adc
adc
out
leave
push
aam
sbb
xchg
out
jmp
fistp
jle
sbb
push
mov
daa
iret
repz
sub
aaa
inc
daa
iret
repz
dec
and
daa
iret
repz
outs
and
repz
(bad)
daa
iret
repz
mov
mov
cmp
shr
fsub
daa
iret
repz
repnz
or
div
xor
push
lea
dec
sahf
out
ss
aas
dec
dec
sahf
out
cmp
pusha
imul
jns
jbe
or
dec
sahf
out
inc
mov
sahf
out
inc
fld
out
and
dec
add
iret
jnp
dec
push
sbb
xor
jns
out
cmp
inc
push
cmp
out
pop
push
push
out
jle
mov
lahf
pop
stos
mov
jns
out
rcr
cmp
out
loope
in
neg
clc
gs
iret
pusha
add
mov
arpl
and
iret
leave
cmp
addr16
leave
dec
pop
imul
jo
ins
xchg
cmp
leave
xchg
pushf
outs
cmps
jo
cmp
leave
mov
jb
jae
cmp
leave
rcr
jne
jbe
ds
leave
hlt
(bad)
js
nop
jns
mov
and
jnp
sub
fmulp
ss
push
jle
jg
leave
xor
push
push
nop
adc
ins
push
pop
cld
call
cmp
lods
imul
pop
and
lods
into
add
das
xchg
dec
sahf
add
leave
and
mov
and
mov
je
pop
push
(bad)
es
iret
lods
(bad)
fild
add
pusha
push
ficomp
and
ins
ja
fcmovb
push
inc
cmovge
ss
addr16
repnz
push
outs
mov
add
inc
ror
rcr
xchg
add
add
fs
or
in
test
mov
das
in
mov
jl
test
ja
sbb
jb
xor
jo
pop
push
loopne
call
nop
or
jb
enter
xchg
and
dec
les
in
in
jb
ltr
jp
push
test
adc
outs
pop
and
pop
je
pop
and
pop
in
sbb
aaa
and
dec
xchg
out
leave
leave
inc
fwait
int3
ja
push
and
pop
or
in
mov
in
mov
rol
in
hlt
xchg
ss
or
and
push
and
xor
mov
mov
xchg
xchg
aaa
mov
xchg
lods
ds
ret
repz
int
pop
fmul
jecxz
arpl
add
pop
popf
out
fimul
push
or
ds
dec
inc
xchg
pop
cmp
sahf
adc
xor
fild
pop
outs
mov
xlat
daa
mov
jg
add
cmp
popf
cmps
femms
add
rol
(bad)
xchg
out
clc
xchg
repz
cwde
sbb
or
iret
repz
or
or
iret
repz
outs
adc
repz
adc
iret
adc
adc
cmp
in
ror
ficomp
jmp
pushf
dec
cdq
adc
fcomp
sub
inc
dec
pushf
pushf
pushf
pushf
push
bound
repz
pushf
pushf
or
leave
movs
scas
(bad)
adc
cmp
cmp
rcr
out
and
popf
out
cld
inc
das
call
push
push
add
mov
xchg
mov
ret
xchg
fwait
pop
mov
jle
(bad)
call
in
xchg
add
push
fwait
sub
cmp
imul
mov
mov
or
fiadd
aam
mov
fwait
xchg
bswap
fwait
in
xchg
xor
in
fwait
leave
sbb
jb
fwait
add
leave
leave
pop
push
add
leave
add
ds
add
loopne
dec
sahf
add
pushf
out
pop
pushf
in
and
aas
add
fcmovne
leave
xchg
fwait
mov
loopne
mov
out
fwait
mov
cld
pop
popf
pop
adc
addr16
fiadd
push
sbb
or
jno
out
daa
es
iret
lods
data16
add
scas
inc
scas
fisttp
movsx
pop
and
mov
adc
sahf
out
popf
das
cli
popf
add
outs
adc
add
scas
cmp
jmp
add
repz
outs
or
repz
cs
cmp
repz
adc
(bad)
in
jbe
popf
xchg
(bad)
popf
scas
test
mov
in
ret
fstp
push
cmp
or
out
fild
xchg
cld
out
lahf
push
out
adc
rcl
das
xor
ds
pop
outs
dec
jl
and
pop
stos
jmp
lahf
lahf
cmps
adc
test
mov
outs
daa
rcr
ficomp
loop
add
jns
cmp
or
inc
mov
mov
cmp
pop
dec
push
(bad)
out
ins
ja
ja
leave
leave
xchg
jg
xchg
jmp
cmp
popf
mov
paddusw
dec
enter
fisttp
out
inc
cs
cmp
dec
or
and
dec
cmp
enter
mov
and
js
push
das
pop
mov
leave
in
in
jle
jle
lahf
mov
ror
pop
sub
mov
dec
repnz
add
call
mov
ins
ins
cmps
dec
mov
sar
ins
mov
xchg
mov
stos
and
movs
daa
mov
call
(bad)
mov
fistp
addr16
pop
and
or
inc
mov
pop
fs
in
in
inc
ja
mov
pop
out
jns
aas
push
add
cmp
sahf
push
mov
out
cmp
lods
push
or
xchg
shl
xchg
jbe
adc
or
inc
adc
inc
movs
dec
push
daa
push
push
jae
jns
pop
xchg
imul
cmp
repz
xchg
xchg
repz
repz
jns
leave
scas
mov
jns
xchg
out
(bad)
adc
fmulp
out
cld
adc
movs
adc
adc
aaa
jnp
push
sbb
push
pop
ds
repz
dec
push
sbb
xchg
bswap
repz
es
mov
nop
test
repz
daa
mov
out
mov
enter
sbb
jns
in
or
add
dec
cmps
sub
mov
mov
mov
jo
inc
leave
rep
jmp
push
add
mov
stos
mov
add
cmps
pop
movs
in
mov
push
rcr
imul
mov
and
cmp
(bad)
push
add
jmp
daa
and
or
daa
daa
daa
ss
dec
push
daa
daa
daa
daa
bound
and
daa
daa
mov
stos
daa
mov
adc
jecxz
add
push
popf
sbb
push
test
leave
xchg
adc
test
xor
mov
xlat
push
adc
shl
dec
or
aaa
jno
test
pop
inc
mov
push
fistp
(bad)
into
das
(bad)
in
or
imul
stos
mov
mov
stos
dec
dec
stos
leave
xor
jo
lahf
and
jns
mov
jbe
out
sbb
lock
mov
mov
pop
lahf
ret
stos
into
stos
fldcw
in
out
stos
dec
cli
stos
jg
jl
repnz
dec
sbb
out
adc
adc
adc
ja
cmp
push
pop
push
adc
jns
jae
jle
rcr
dec
stos
setg
lahf
stos
pop
mov
pop
psrld
leave
leave
retf
(bad)
loope
pop
lods
outs
into
aam
aaa
push
cmps
comiss
cmp
xor
pusha
sbb
cmp
js
lahf
stos
pop
cmp
jmp
movntq
and
repz
ror
fsubr
lods
pop
icebp
paddb
into
pop
lods
dec
lods
fcomp
iret
sub
add
dec
es
sbb
mov
push
add
add
rcl
cmps
pop
scas
xchg
out
lea
scas
adc
add
(bad)
inc
scas
push
push
iret
scas
mov
pop
leave
xor
mov
scas
(bad)
call
dec
ds
sbb
fstp
ret
aad
jns
leave
fucomp
push
push
repz
scas
pushf
mov
scas
adc
or
out
outs
xchg
pop
pop
sub
xor
cmovo
push
dec
out
sahf
out
adc
popa
adc
ins
push
ja
adc
jns
ja
push
add
sbb
sbb
(bad)
scas
sahf
out
mov
iret
and
aaa
jns
(bad)
in
fucom
jns
daa
lock
(bad)
jnp
out
push
mov
adc
leave
sbb
add
cmp
jns
xor
cmp
cmp
pop
imul
mov
mov
mov
daa
fidiv
in
inc
repnz
add
jb
mov
xor
cmp
mov
mov
ja
push
add
jle
jle
push
loop
jns
scas
(bad)
pop
mov
adc
dec
jbe
call
cs
(bad)
pop
loop
iret
leave
repz
clc
add
mov
mov
jg
mov
mov
push
mov
pop
mov
pop
jne
and
js
jg
pop
mov
test
xor
dec
pop
add
pop
adc
fcomp
out
repnz
and
std
or
daa
daa
sub
dec
daa
daa
daa
daa
push
pusha
imul
daa
daa
or
into
daa
daa
daa
daa
ftst
out
cli
mov
xchg
daa
add
es
daa
daa
daa
xor
push
out
jbe
cmp
pop
push
iret
mov
sete
sub
sub
mov
sar
fsubrp
retf
pop
(bad)
push
xor
in
gs
xor
mov
mov
sbb
jmp
pop
xchg
inc
test
outs
lock
mov
lds
inc
and
sub
nop
xlat
cwde
ja
cmovg
inc
repnz
aam
and
jge
and
stos
cmp
jns
jne
fldenv
loope
outs
jmp
fucom
hlt
syscall
cld
push
out
enter
push
or
sbb
or
sub
push
or
sahf
out
les
pop
push
push
push
pop
invd
pushf
out
push
jne
dec
sahf
addr16
outs
adc
sahf
test
push
mov
out
sahf
pop
ret
sbb
fdiv
pushf
test
outs
nop
and
or
mov
and
out
das
getsec
add
pushf
fcomp
pop
arpl
outs
or
repz
or
repz
in
in
or
or
out
ret
in
aas
mov
push
adc
mov
mov
fwait
mov
mov
mov
pop
push
and
mov
(bad)
ja
packuswb
dec
cs
or
xchg
movs
lods
dec
dec
dec
dec
mov
enter
xchg
lock
mov
in
outs
or
add
mov
sub
xor
mov
cmp
popf
pushf
mov
sahf
xchg
out
js
out
fnstsw
mov
pop
out
sahf
or
or
je
out
aas
push
or
(bad)
pushf
pushf
pushf
pushf
or
pop
push
jns
pushf
pushf
add
test
cmp
cmp
or
mov
inc
ja
dec
push
mov
cvtps2pd
cmps
test
je
jbe
xchg
addr16
pop
movs
mov
into
mov
xchg
out
into
mov
enter
enter
mov
jb
fld
pop
das
(bad)
mov
daa
leave
leave
leave
inc
ins
jne
leave
leave
leave
leave
test
inc
jp
daa
aas
add
mov
fmul
(bad)
loope
jmp
jp
(bad)
inc
or
in
add
add
fsubr
pop
cs
mov
daa
mov
mov
je
jg
cmps
pop
sub
stos
mov
jb
mov
cmc
and
sbb
add
or
ds
das
mov
cmps
ins
and
pushf
pushf
dec
and
cmps
scas
xchg
pushf
pushf
pushf
mov
int
jb
pop
and
cmps
or
adc
cs
pushf
enter
sub
jae
into
inc
popa
pop
mov
jno
jl
cs
pop
iret
leave
repz
mov
in
adc
stc
pop
sbb
rol
(bad)
imul
sub
pop
cmp
sub
xor
and
adc
push
rol
into
leave
sub
jae
je
pop
clts
(bad)
call
mov
or
or
or
or
dec
out
repnz
fistp
lahf
adc
rcl
adc
sar
and
xor
push
fld
pop
or
repz
add
je
aaa
or
and
jmp
sub
lods
mov
adc
daa
sbb
pushf
cmp
pop
add
xor
cs
inc
dec
or
jns
pop
mov
pop
push
or
popa
fucomi
imul
ret
enter
ret
enter
xor
xor
cmp
mov
ret
dec
dec
cs
jmp
out
ficomp
adc
pop
fs
sahf
sub
mov
repz
repz
dec
push
push
punpckldq
cmp
adc
js
cs
jns
adc
repz
push
(bad)
ds
mov
jns
shr
sbb
sbb
fmulp
js
icebp
sbb
fcmovne
jnp
adc
push
sbb
jns
xor
ds
and
push
pop
push
daa
push
fmulp
repz
or
jns
mov
cmp
mov
ret
fmul
leave
repz
jecxz
xor
xor
in
add
push
aaa
(bad)
sbb
jbe
mov
push
cmp
inc
pmulhuw
in
push
pop
addr16
in
in
mov
out
inc
mov
push
dec
stc
mov
dec
neg
dec
add
sahf
out
sbb
dec
cs
out
dec
cmp
push
dec
cmp
repz
pop
push
push
gs
ins
sahf
xchg
out
js
push
or
cdq
movs
pop
scas
out
jns
mov
cmp
xchg
(bad)
popa
icebp
cld
repnz
out
pop
(bad)
adc
gs
sbb
sub
xor
iret
repz
dec
ds
imul
out
cmp
jne
outs
sub
cmp
xchg
jno
jb
iret
cmp
mov
je
jne
daa
iret
repz
fsub
cs
dec
sahf
out
jns
add
push
jnp
inc
mov
sbb
and
cmp
xor
add
leave
repz
sbb
repz
cmp
jge
mov
mov
in
daa
iret
mov
out
sahf
out
(bad)
jmp
mul
jns
lahf
xchg
add
or
xchg
pop
mov
and
jns
out
inc
ds
dec
cdq
pop
repz
outs
pop
pushf
jp
repz
popf
test
ja
cmp
cmps
mov
mov
jns
(bad)
movs
shl
frstor
imul
or
stos
adc
out
sahf
stos
pop
lods
sub
iret
repz
inc
cs
dec
mov
jns
out
popa
ds
mov
repz
lea
mov
in
daa
iret
mov
scas
push
mov
out
mov
out
cmp
in
lock
push
ror
cmp
push
retf
rcl
ds
xchg
out
fisub
les
lds
dec
push
(bad)
push
pop
leave
imul
das
jg
mov
repz
sahf
int
mov
popf
cmp
mov
ror
ror
cmp
xlat
aam
in
ds
clc
enter
xlat
add
fmul
int3
daa
iret
repz
push
fisubr
and
das
cmp
fld
fistp
iret
repz
data16
loop
jns
out
xchg
in
in
repz
mov
call
iret
jmp
fbstp
dec
sahf
out
in
cmc
sbb
fcomip
cmp
out
or
push
icebp
ds
iret
rep
and
aaa
ds
inc
cmc
fcmovne
repz
neg
(bad)
iret
repz
cli
test
sahf
out
repnz
call
out
(bad)
mov
mov
fsub
ds
(bad)
xor
in
or
adc
jb
jb
sub
dec
dec
or
push
push
pusha
into
pop
imul
pushf
out
adc
adc
jns
xchg
mov
sahf
xchg
out
mov
xchg
out
fstp
in
sbb
dec
jnp
cli
syscall
iret
push
push
adc
out
jns
sbb
es
cmp
in
sahf
and
push
pop
out
jns
es
in
sahf
sub
into
leave
leave
leave
stos
mov
retf
adc
iret
ss
pushf
dec
xor
shl
rol
data16
in
dec
jp
sti
inc
outs
sub
dec
and
sbb
push
daa
cmp
dec
in
jo
in
enter
fmul
call
push
lds
cmp
cmp
and
inc
cmp
scas
mov
leave
and
test
sbb
loopne
xchg
dec
dec
add
fsub
push
push
inc
xchg
dec
xchg
xchg
dec
cs
loopne
inc
repnz
fdivr
xor
xchg
adc
add
daa
and
mov
sar
shl
pop
cmp
mov
ror
inc
jle
and
stos
sbb
add
aam
mov
in
ror
movs
mov
xchg
or
iret
cmp
dec
and
dec
mov
inc
mov
dec
icebp
inc
xchg
scas
(bad)
or
(bad)
iret
test
pop
sub
inc
inc
xchg
mov
and
xchg
mov
xor
pusha
inc
hlt
xchg
mov
mov
mov
aam
add
mov
aam
xor
aaa
and
neg
in
push
es
movs
popf
cmp
pop
or
inc
aam
aam
mov
ret
cmp
dec
ficom
mov
xlat
dec
cs
cmp
cmp
or
jl
and
ds
dec
movaps
jns
dec
pop
cmp
inc
or
aad
leave
sub
inc
sub
mov
add
and
outs
xchg
aad
add
add
add
pop
sti
out
sbb
dec
es
pop
sub
pop
add
jp
jnp
aas
xlat
daa
push
inc
mov
push
(bad)
inc
push
push
ror
lock
mov
adc
mov
pop
lock
xor
add
sbb
inc
inc
inc
inc
movs
push
pop
stos
movs
jmp
jmp
daa
xchg
shl
aam
add
or
jne
adc
push
outs
push
leave
inc
cmp
add
inc
jns
leave
leave
dec
push
pop
push
add
in
fisttp
pop
xchg
or
xchg
inc
mov
mov
ret
into
mov
adc
call
xchg
mov
and
xchg
mov
cmp
push
rcl
add
daa
rol
or
inc
xchg
vmwrite
fldcw
fstp
inc
and
adc
add
fpatan
inc
nop
and
jns
inc
push
inc
jo
xchg
dec
dec
es
test
cmp
scas
mov
pop
jb
shr
fcom
inc
cmps
sbb
or
xchg
int3
add
add
inc
fst
jl
(bad)
nop
push
loope
into
pop
add
cmp
cwde
xorps
call
leave
imul
mov
dec
rcr
addr16
inc
mov
jecxz
out
(bad)
fiadd
mov
mov
fcmovne
or
push
(bad)
and
adc
pop
and
loopne
pop
and
push
jno
xchg
mov
dec
jb
loopne
rcl
(bad)
lock
cmpxchg
nop
pop
add
cmps
mov
repnz
fld
fnstsw
fisttp
add
outs
pop
(bad)
cmp
push
sub
or
pop
push
(bad)
dec
movs
add
call
adc
cwde
fisttp
jae
cmovs
add
xchg
stos
in
enter
pop
stos
in
test
in
loopne
adc
xor
push
xor
icebp
dec
push
mov
loopne
push
jge
repnz
int3
leave
inc
and
jns
scas
cmp
dec
mov
scas
nop
outs
inc
ins
push
repnz
in
inc
mov
(bad)
xchg
sub
dec
lock
fistp
shl
xor
pop
jb
xchg
pop
pusha
js
test
nop
aas
loopne
repz
push
pop
pop
and
shl
leave
pop
aam
call
rol
xchg
sbb
dec
dec
pop
xor
mov
js
pushf
cwde
inc
loope
dec
ja
leave
ror
vmread
adc
dec
jg
mov
test
jg
and
push
leave
or
nop
dec
adc
repnz
mov
mov
add
lock
repnz
dec
iret
loop
loope
addr16
dec
loop
dec
fild
jnp
fwait
xchg
inc
sbb
adc
ret
mov
(bad)
daa
pop
rcr
pavgb
scas
cmp
add
jecxz
leave
adc
pusha
dec
jmp
dec
call
(bad)
push
fbstp
je
sub
mov
fcmovnbe
inc
iret
fcom
adc
push
rcr
xchg
pop
inc
das
lock
add
stos
out
mov
scas
inc
push
out
xor
in
push
sub
or
push
jo
xor
fisttp
push
daa
sub
scas
pop
or
pandn
jbe
add
outs
push
leave
mov
loopne
enter
sub
adc
ins
dec
pop
loopne
cmps
adc
push
mov
pop
and
jbe
push
scas
js
psubsw
push
lea
aas
inc
dec
inc
ret
dec
outs
add
push
in
inc
dec
adc
enter
mov
in
dec
push
js
inc
jb
lock
mov
xchg
xchg
dec
cmps
shl
mov
out
lock
dec
jb
xor
mov
cdq
inc
push
jmp
push
nop
js
mov
mov
je
xchg
out
push
out
clc
iret
add
and
adc
or
mov
loopne
pusha
push
inc
push
push
loopne
inc
fist
scas
pop
enter
rcl
out
fwait
dec
dec
jb
out
push
inc
outs
jbe
pop
jb
inc
jo
dec
scas
fcmovbe
xlat
iret
mov
and
xchg
dec
test
call
loopne
call
sub
adc
dec
pop
in
xchg
fist
iret
fdivr
xor
xchg
push
adc
sub
mov
sbb
push
pusha
cs
jg
call
test
call
loopne
add
outs
mov
mov
test
add
adc
shl
add
sub
loopne
inc
mov
aas
sti
lock
movd
lahf
in
sahf
les
inc
or
mov
mov
pop
pop
sub
pop
adc
dec
inc
out
fwait
add
xor
pushf
mov
add
or
rol
repz
leave
rcr
loopne
lock
ins
jnp
clc
add
mov
mov
push
jb
inc
imul
cmp
sub
sbb
cs
hlt
or
mov
popa
add
shr
cmps
and
xor
nop
ss
ins
xchg
dec
cmp
mov
push
cmp
mov
push
push
add
in
inc
inc
cs
mov
push
rcl
xchg
pop
sahf
movs
ss
xor
adc
sub
ss
jg
inc
cmp
push
inc
dec
outs
ffree
fiadd
setle
jns
add
add
xchg
out
pop
or
or
mov
or
xchg
ja
scas
adc
adc
adc
and
cmp
inc
push
addr16
in
jbe
das
push
xorps
jns
outs
das
ins
push
and
fild
pop
and
iret
add
add
cmp
mov
fsubr
cmp
sbb
or
or
xor
sbb
push
add
add
dec
lods
push
mov
daa
mov
inc
pop
aad
ins
adc
sldt
int3
mov
das
outs
(bad)
nop
adc
push
shl
test
not
xchg
push
xchg
loopne
push
ins
or
or
pop
sub
sub
add
call
lahf
outs
adc
dec
mov
out
out
sbb
in
jnp
and
xchg
adc
xor
push
adc
push
or
(bad)
or
mov
sar
addr16
ja
push
or
out
cmp
mov
sbb
adc
out
int3
adc
out
dec
sbb
iret
repz
in
pop
sbb
repz
push
xor
rcl
xor
out
and
jns
iret
repz
adc
loopne
out
out
jp
push
cld
int3
(bad)
mov
rcl
add
inc
ins
ss
and
add
mov
inc
or
adc
add
pop
pop
push
enter
das
clc
push
push
add
add
movs
add
pop
stc
enter
pop
movs
sbb
mov
fisub
add
cdq
cmovo
push
mov
sbb
in
call
mov
push
add
push
pop
fisubr
xor
fcomp
loopne
jb
jle
jecxz
add
jg
dec
dec
sbb
std
lock
mov
sbb
sahf
out
inc
pop
push
push
dec
out
sahf
out
inc
cmp
and
out
sahf
sbb
add
cld
sbb
cmp
repz
lock
call
repz
fcom
int3
iret
cmp
rcr
test
mov
cmp
test
push
fs
inc
cmp
mov
inc
sbb
and
inc
sahf
pop
add
test
(bad)
mov
add
add
lahf
pop
xor
dec
jl
inc
add
mov
cmp
aaa
add
push
push
sub
(bad)
out
inc
xchg
sub
add
js
mov
mov
mov
push
inc
jg
nop
out
lods
inc
adc
lods
sbb
pop
jb
(bad)
sub
inc
pop
enter
pop
repnz
inc
pushf
or
ret
mov
adc
pop
stc
and
mov
push
inc
leave
sbb
into
sbb
ror
and
sahf
mov
sub
(bad)
(bad)
jmp
rcr
and
sbb
add
xlat
xchg
inc
push
add
inc
stc
mov
(bad)
(bad)
call
pop
cmp
cmps
iret
dec
js
inc
outs
(bad)
loopne
jmp
xchg
test
(bad)
(bad)
(bad)
(bad)
mov
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
(bad)
(bad)
(bad)
inc
pop
stos
clc
scas
adc
(bad)
inc
jmp
aam
imul
loope
jp
iret
inc
gs
(bad)
xchg
(bad)
(bad)
(bad)
dec
cmps
scas
mov
or
add
cmps
xchg
cmp
xor
(bad)
(bad)
(bad)
dec
in
cmp
sahf
xchg
pop
call
lock
mov
popa
sar
mov
fsub
dec
xchg
clc
repz
mov
sub
fwait
xchg
and
and
pop
int
add
sti
aas
jno
or
mov
ja
clc
aas
pop
fs
dec
lea
aas
ret
shr
mov
icebp
aas
sar
(bad)
(bad)
dec
and
cmps
out
aas
inc
cmps
mov
ins
scas
add
aas
xor
aad
mov
(bad)
out
ret
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
(bad)
(bad)
inc
mov
addr16
push
mov
xchg
aas
and
(bad)
loop
mov
jp
popa
mov
pop
sar
jl
mov
das
lea
mov
inc
inc
aas
movs
jmp
(bad)
(bad)
(bad)
jmp
mov
inc
rcr
push
arpl
int3
and
call
cmp
std
(bad)
call
jp
and
cmp
mov
cmp
std
xlat
cmp
(bad)
(bad)
jg
neg
mov
jecxz
cmps
add
mov
aaa
fld
cmp
jno
(bad)
(bad)
(bad)
call
and
xor
dec
nop
pop
cmp
fisub
xor
push
lahf
inc
pop
mov
(bad)
(bad)
(bad)
jmp
xor
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
mov
(bad)
mov
dec
dec
gs
std
or
pop
ficomp
frstor
xor
js
jns
out
mov
repz
aaa
in
cmp
xor
cmp
jns
pop
ja
mov
repnz
jp
jnp
dec
das
push
dec
ins
push
xor
pop
adc
iret
pop
mov
pop
mov
add
jnp
cmp
dec
or
and
movs
outs
gs
inc
dec
adc
mov
adc
inc
dec
inc
inc
popa
jne
cs
ins
jae
jp
scas
daa
jo
or
bound
dec
xchg
add
getsec
fwait
movs
mov
cmp
dec
add
fwait
imul
inc
iret
adc
or
adc
fsub
sub
push
cmp
dec
jg
lods
lds
das
sub
sub
cmp
scas
push
outs
mov
shl
pop
inc
xlat
fistp
mov
xor
sub
pop
loopne
or
ficom
push
dec
push
xor
int
xor
ja
and
aas
pop
and
push
pop
je
test
sbb
add
mov
enter
ja
jecxz
in
jne
ror
mov
or
inc
sbb
sub
pop
xor
and
xchg
pop
jne
add
pop
shl
and
bound
cwde
les
mov
mov
or
in
push
cmps
xchg
mov
push
sub
fcom
movs
mov
cwde
mov
outs
arpl
je
push
out
push
or
cmps
adc
xchg
sub
inc
jo
aas
inc
jmp
dec
popa
jo
inc
push
dec
scas
inc
sbb
inc
inc
fisttp
outs
push
inc
dec
inc
push
pop
test
dec
mov
inc
int
push
outs
outs
sub
ret
inc
inc
lock
xchg
jbe
cmps
mov
xor
inc
add
fsub
(bad)
mov
popw
jmp
cmp
dec
call
adc
pop
call
imul
dec
push
sbb
add
push
pop
nop
mov
ins
(bad)
pop
xchg
mov
and
aas
inc
je
dec
das
add
fucomip
enter
push
ret
sub
xchg
inc
js
or
movzx
cmp
or
pop
retf
clc
dec
sbb
and
aas
pop
inc
mov
ins
xor
aaa
cmp
jo
cmp
arpl
cmp
xor
xor
bound
sahf
fiadd
dec
popa
push
inc
jbe
pusha
xor
ins
pop
call
adc
push
xchg
jne
dec
inc
lods
push
add
or
es
fidiv
nop
dec
bound
sbb
inc
and
pop
or
inc
sbb
mov
add
in
je
lods
xchg
push
push
xchg
push
mov
inc
add
add
xor
adc
sbb
movs
mov
cmp
ins
aaa
aas
inc
push
adc
lods
add
test
cdq
add
out
sbb
fisub
aas
dec
fisub
xchg
sbb
sub
dec
push
ds
bound
into
adc
dec
inc
adc
cmp
lea
dec
inc
ja
fsubr
sbb
jnp
dec
aaa
add
pop
push
mov
dec
cmp
pop
daa
xor
xor
test
mov
or
add
daa
ret
mov
in
dec
pop
xchg
dec
inc
cmp
mov
aas
sbb
aaa
pop
dec
loope
jns
lods
push
shl
adc
pop
ss
fs
adc
scas
dec
mov
mov
mov
push
or
rcl
inc
xor
push
js
jb
addr16
test
and
adc
imul
cmovo
push
test
inc
lahf
pusha
push
loopne
dec
shr
leave
pusha
inc
xchg
xchg
cmp
or
add
arpl
sbb
push
cmp
add
add
rol
xchg
je
inc
push
idiv
arpl
jo
sti
xchg
pop
pop
outs
xor
mov
push
(bad)
pop
and
and
cmps
xor
shl
pop
jg
or
or
pop
pop
and
xchg
in
mov
outs
push
rol
push
xchg
inc
mov
push
sbb
pop
or
push
cmps
inc
dec
or
inc
sbb
or
sbb
xor
fild
ror
cmps
movs
add
xchg
jge
xchg
cmp
push
and
popa
inc
or
cs
xor
xor
adc
push
inc
mov
cli
inc
jno
inc
sub
imul
icebp
inc
icebp
fwait
mov
mov
mov
jl
push
mov
jne
das
inc
pop
ins
jne
dec
pop
xor
(bad)
rcr
js
(bad)
ja
add
pop
jecxz
ja
aaa
dec
cmp
sbb
push
sub
inc
inc
aaa
xor
push
jno
push
outs
inc
push
cdq
pop
fcomp
xor
dec
cmps
mov
repnz
out
jo
(bad)
or
jo
aas
lods
xchg
dec
adc
sub
aas
jg
je
fadd
add
out
xchg
jne
data16
das
xchg
adc
or
push
adc
shr
js
aaa
or
inc
add
dec
and
fiadd
pop
pop
out
add
push
sahf
xlat
fnstsw
dec
inc
push
ss
push
and
pop
and
idiv
inc
and
inc
jge
mov
xor
inc
push
xor
xor
push
out
push
xor
aas
mov
and
inc
push
(bad)
sub
dec
aaa
pop
das
xlat
fidivr
pop
push
inc
and
push
pop
or
xlat
fidivr
inc
cs
dec
push
das
or
sbb
push
cmp
dec
dec
fidiv
dec
push
sub
push
mov
inc
dec
jnp
push
xchg
push
imul
add
or
add
and
add
nop
push
add
add
xor
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
sub
inc
add
adc
adc
nop
inc
add
add
sub
inc
add
or
cmp
imul
loopne
cmp
sysret
dec
cmps
and
jae
adc
push
sub
jl
xor
jo
and
or
ins
imul
inc
jo
shl
outs
xor
fstp
mov
adc
adc
xchg
and
add
xchg
rcl
and
sub
arpl
fiadd
gs
jae
jne
pop
sub
cmp
das
ds
add
or
das
and
xor
fwait
and
cld
mov
and
dec
inc
inc
inc
popa
inc
imul
iret
mov
sub
push
xor
cmps
or
mov
ins
mov
retf
shr
adc
mov
sub
pop
fisub
nop
loopne
stc
sbb
shl
ins
jns
push
ficom
jae
inc
shl
into
ins
gs
sbb
rcl
inc
xor
dec
shr
and
and
loop
lds
das
into
ds
sahf
mov
aaa
jo
std
adc
pop
mov
xchg
arpl
mov
dec
dec
gs
rcl
adc
or
sub
ss
add
jae
mov
sahf
call
je
add
test
mov
and
add
mov
xor
enter
mov
add
push
xor
jo
push
mov
es
arpl
in
shl
mov
xor
or
and
mov
clc
lea
and
dec
pusha
or
mov
cmp
int
mov
inc
inc
es
stos
rcl
pusha
mov
inc
shl
(bad)
jb
outs
push
pop
dec
leave
ja
pop
sub
add
add
rol
(bad)
ror
or
add
nop
mov
mov
hlt
mov
jmp
mov
or
or
pop
dec
(bad)
jae
sbb
mov
and
retf
add
sbb
(bad)
and
sahf
and
adc
xor
bound
and
or
into
cmp
loop
push
mov
xchg
je
adc
push
and
add
pop
jnp
or
inc
shl
cmp
rol
adc
loop
sub
add
fdiv
movs
imul
cdq
xor
mov
sub
sub
outs
in
sub
dec
mov
dec
inc
pusha
outs
aas
inc
sbb
sbb
or
cmp
xor
and
ins
push
xor
arpl
pusha
or
loop
lahf
arpl
or
xor
cmp
lock
add
aas
inc
cmp
arpl
dec
and
hlt
jno
or
das
mov
xchg
sub
test
inc
inc
push
ins
addr16
test
cwde
aam
daa
imul
addr16
sbb
daa
sbb
cmp
mov
out
jo
mov
cmp
xor
pop
xor
ds
pop
push
lds
pop
jne
push
pushf
push
dec
adc
sbb
pusha
push
and
fsubr
loop
and
push
sbb
or
mov
push
xor
add
in
test
and
pop
gs
lods
mov
rol
mov
push
(bad)
push
push
xchg
add
push
cmp
dec
stos
inc
outs
aam
add
push
arpl
and
aam
push
test
add
ss
xchg
adc
push
lods
in
pop
nop
jne
cmps
xchg
mov
jmp
popa
and
lods
aam
mov
mov
stos
xor
adc
inc
mov
push
call
sub
out
or
addr16
or
out
push
fidiv
iret
sar
cmp
and
jmp
(bad)
inc
or
ins
xchg
cmps
ret
gs
add
adc
sti
aas
jae
bound
sub
sub
sub
je
sti
jo
daa
sub
frstor
je
or
sub
rol
sub
pop
popa
enter
pop
push
mov
lock
scas
loope
int
into
sub
adc
fdiv
fs
add
adc
jo
and
sub
mov
push
add
sbb
outs
outs
sbb
arpl
rcr
fmul
shr
xor
cmp
push
jb
loope
and
je
fidivr
xchg
add
xchg
adc
xchg
cdq
mov
xor
mov
sub
mov
mov
adc
mov
adc
call
adc
sar
cmp
sub
adc
stos
call
xor
add
loope
add
mov
test
cmps
mov
ficomp
mov
shr
xchg
pop
imul
or
inc
loopne
dec
jmp
jl
pop
ins
js
ret
adc
mov
xchg
add
mov
jecxz
xor
sbb
and
mov
and
xchg
xlat
ret
push
jo
sbb
inc
dec
push
adc
pop
jge
jae
(bad)
jns
mov
add
int
fchs
pop
inc
imul
jo
ss
pop
bound
jo
imul
ja
enter
outs
ins
gs
sub
and
jb
loopne
cmp
inc
adc
popa
jns
popa
jae
jo
adc
test
fisttp
cdq
daa
outs
inc
or
mov
dec
dec
mul
test
dec
outs
lds
adc
mov
inc
imul
push
push
push
ror
aas
jp
pop
je
push
adc
pusha
add
xchg
scas
mov
mov
mov
out
test
ss
call
sub
in
mov
mov
pop
in
add
ret
stc
jmp
and
ins
mov
dec
je
jno
imul
outs
mov
inc
ret
mov
loope
mov
dec
cmp
jb
arpl
mov
mov
adc
je
push
xchg
mov
jne
mov
cld
aaa
call
ss
xor
int
adc
mov
inc
nop
dec
ror
movs
push
dec
and
add
mov
ins
mov
or
outs
and
lods
je
mov
retf
push
aas
jae
sub
adc
xchg
xchg
les
ret
push
xor
add
pushf
icebp
and
cmps
pop
adc
pop
repnz
inc
(bad)
imul
add
bound
imul
mov
xchg
add
daa
jae
or
lock
imul
daa
icebp
mov
dec
push
xor
or
inc
daa
jb
daa
xchg
data16
imul
fsubr
imul
scas
dec
popa
jmp
or
icebp
push
sbb
xchg
push
pop
jns
inc
sub
and
cmp
cmp
mov
call
push
lea
or
push
or
and
or
popf
mov
and
and
dec
pop
lds
xor
sub
adc
or
shl
adc
outs
bound
sbb
ret
rol
xchg
dec
imul
and
push
cs
imul
test
xchg
xor
retf
xchg
or
mov
pusha
retf
xchg
lds
mov
mov
pop
mov
push
add
and
adc
adc
icebp
jo
addr16
jbe
or
xor
jne
rol
and
inc
test
push
imul
and
jg
sbb
sar
ins
rol
adc
dec
add
adc
xor
rol
das
shl
mov
lds
jnp
xor
add
xchg
test
inc
or
or
dec
mov
xor
inc
and
cmc
imul
mov
jg
push
adc
bound
gs
fwait
popa
mov
adc
push
or
sub
push
push
aad
daa
iret
push
adc
or
icebp
addr16
arpl
cmp
dec
sub
jmp
int
inc
pushf
dec
inc
or
syscall
(bad)
rol
lea
or
mov
lahf
xlat
sbb
adc
jnp
pop
push
and
fst
inc
pusha
mov
add
inc
jmp
xchg
shr
adc
xchg
dec
fwait
(bad)
mov
jmp
inc
rol
mov
aas
add
pop
mov
and
push
inc
mov
test
cmp
mov
adc
mov
add
dec
int
push
cmp
inc
lods
out
daa
cmp
add
lahf
and
push
movs
inc
repz
retf
pop
inc
mov
mov
or
or
cmp
push
pusha
inc
pop
mov
test
sub
adc
imul
loope
dec
adc
and
and
or
sub
imul
neg
mov
and
sub
dec
and
lods
in
mov
clc
sbb
push
jno
or
inc
add
in
shl
movs
xchg
push
dec
gs
loope
inc
inc
add
adc
ret
mov
sbb
sbb
lods
bound
cli
iret
rol
and
inc
xor
xor
ret
(bad)
dec
push
sbb
fadd
dec
(bad)
pop
ins
xchg
add
or
or
call
shl
sbb
sub
inc
lea
sti
mov
mov
sbb
sbb
inc
jle
inc
bound
fbstp
fbstp
xor
or
retf
aas
ficomp
in
sbb
push
ins
or
test
sbb
ins
inc
or
xor
and
push
jne
adc
lods
inc
sub
jo
xor
inc
add
jp
jmp
mov
ins
imul
outs
jo
and
mov
adc
pop
pop
ins
fld
adc
fidivr
ja
out
xchg
sub
mov
jmp
cmp
push
pop
mov
sbb
xchg
(bad)
addr16
shl
or
ins
inc
lahf
mov
clc
mov
sub
call
push
les
push
or
fisttp
mov
add
(bad)
xchg
stos
pop
xchg
lods
inc
ins
sub
push
mov
dec
or
jne
stos
push
aam
push
push
push
out
inc
mov
push
push
je
jb
jb
(bad)
adc
push
or
or
gs
ds
fnstcw
aad
xor
test
shl
add
xor
mov
inc
mov
out
repz
ss
pop
div
or
or
add
scas
in
push
mov
icebp
aaa
stos
mov
dec
add
(bad)
pop
pushw
pop
push
mov
sub
push
pop
sbb
(bad)
push
enter
or
jmp
popf
or
xor
aaa
and
jo
jo
inc
dec
cs
call
xor
or
sbb
jo
push
xchg
add
je
adc
ss
jbe
retf
and
mov
ins
enter
push
or
sbb
les
scas
fstp
xor
cmp
movs
or
sub
pusha
aaa
pop
and
bound
xor
mov
or
sub
fist
in
sub
stos
ds
mov
lock
and
or
and
aas
xchg
mov
cmp
jmp
pop
jge
sbb
cmp
adc
pop
shl
push
add
or
inc
mov
and
push
enter
and
mov
inc
dec
fiadd
xchg
push
xor
sbb
jae
push
cdq
add
or
int3
pop
imul
xchg
or
jecxz
stos
test
pop
add
call
or
je
loopne
bound
push
mov
push
push
fbstp
or
ror
xor
push
popa
sub
mov
mov
mov
dec
and
xlat
sub
jmp
pop
inc
pop
cs
jbe
sub
gs
call
das
fcmovnu
ds
and
adc
mov
jle
outs
loope
outs
gs
mov
imul
sub
dec
mov
mov
loopne
jl
(bad)
les
or
inc
aaa
imul
adc
loopne
or
and
ror
mov
adc
movs
repz
mov
and
cmp
ret
aam
jge
dec
inc
inc
add
dec
dec
add
dec
add
pop
rol
adc
sub
sub
jle
add
ret
jecxz
cmp
mov
sub
inc
loopne
add
fdiv
jmp
(bad)
cmp
fstp
mov
adc
push
ja
and
mov
lods
inc
lock
adc
inc
add
ds
and
test
sbb
int3
pop
popa
xor
or
pop
lea
ds
das
stos
ins
sbb
and
daa
push
xchg
stos
add
mov
sub
or
popa
pusha
pop
daa
daa
dec
pop
xor
pop
daa
ret
pop
or
xchg
mov
shl
mov
leave
and
push
dec
out
pop
add
mov
xchg
stos
mov
daa
scas
or
add
or
sub
mov
mov
loopne
jmp
rcl
inc
lods
and
xchg
mov
and
or
push
or
lods
push
sbb
fsubr
daa
adc
and
or
(bad)
das
inc
dec
adc
mov
or
call
test
or
mov
loop
or
dec
push
or
and
push
jnp
and
fcom
push
mov
pop
iret
adc
inc
mov
loope
push
and
jecxz
sub
(bad)
or
mov
add
and
adc
add
adc
inc
jo
jns
push
jge
loope
mov
and
jne
pop
xchg
adc
pusha
sub
sbb
mov
add
add
dec
add
das
mov
push
xchg
mov
(bad)
je
add
stos
add
adc
add
add
inc
xor
pop
push
pop
inc
xor
xchg
pop
pop
push
pop
push
pop
jge
out
or
push
push
inc
push
push
inc
cmp
sti
out
cs
rdpmc
call
xor
push
cmovbe
es
dec
pop
xor
aaa
pop
dec
xor
ss
(bad)
das
pop
fwait
or
pop
pop
xorps
fwait
ss
dec
inc
pop
pop
pop
cmp
sbb
push
pop
dec
das
pop
dec
pop
fstp
mov
pop
dec
aaa
pop
pop
dec
daa
dec
fbld
rol
aaa
subps
jbe
jge
pop
dec
iret
inc
push
das
aaa
aaa
dec
sti
mov
pop
dec
dec
aas
dec
addr16
scas
mov
dec
dec
pop
dec
getsec
(bad)
in
mov
dec
push
dec
cmp
aaa
pop
mov
into
mov
push
pop
test
jnp
push
push
aas
cmp
push
pop
imul
mov
fisttp
ss
and
jg
push
cmp
lahf
dec
pop
xor
jnp
fiadd
push
pop
iret
push
pop
pop
dec
shld
pop
inc
daa
dec
pop
mov
scas
push
cs
xor
dec
sti
loop
xchg
daa
inc
xor
push
hlt
fisubr
pop
push
pop
jmp
xlat
dec
sysret
push
inc
dec
call
outs
push
pop
enter
scas
das
pop
pop
push
and
fild
out
jnp
mov
pop
out
dec
push
push
push
push
aaa
fdivr
pop
jbe
pop
pop
pop
jnp
data16
pop
inc
into
inc
comiss
xor
dec
mov
sti
fadd
out
pop
out
cmp
out
scas
push
into
and
push
jge
fild
outs
iret
pop
xor
mov
mov
aaa
pop
xor
shl
inc
pop
mul
ins
mov
out
inc
daa
cmp
es
pop
lahf
pop
jnp
fidiv
daa
pop
dec
getsec
xlat
movs
loope
daa
dec
das
pop
pop
pop
aaa
mov
leave
xor
pop
mov
push
add
cmp
adc
loop
cmp
xchg
push
jno
pop
das
nop
add
ror
cmovne
add
push
inc
dec
imul
pop
(bad)
cmps
xor
shl
unpckhps
shr
loopne
mov
aaa
pop
add
jo
inc
pop
mov
ds
pop
daa
pop
pop
pop
pop
xchg
cmp
pop
addr16
xchg
rol
addr16
loopne
imul
pop
pop
pop
fcom
push
das
xchg
add
dec
pop
jg
(bad)
push
neg
daa
inc
(bad)
(bad)
sub
jnp
mov
xchg
cmps
jmp
repz
divps
(bad)
sub
fcomp
pop
outs
(bad)
jle
fnstsw
pop
push
pop
neg
xor
es
pop
push
pop
push
sbb
daa
scas
inc
jmp
scas
sbb
mov
retf
push
inc
pop
pusha
add
mov
shl
dec
outs
sbb
jg
lock
out
jmp
jne
pop
mov
push
push
aas
pop
push
mov
scas
pop
in
shl
add
push
fnsave
add
das
out
add
pop
xlat
(bad)
push
in
dec
push
inc
mov
aaa
pop
pop
add
xor
xchg
push
rol
mov
addr16
pushf
or
addr16
adc
xchg
pop
cmp
(bad)
mov
ret
push
addr16
repz
dec
inc
jg
aaa
das
sar
popa
dec
aaa
pop
push
in
cmp
addr16
push
mov
ret
dec
and
push
das
(bad)
in
fdivr
mov
cmps
das
jg
xchg
cmp
xchg
mov
push
xor
mov
lea
scas
xor
pusha
jno
(bad)
aaa
jb
jo
push
fidiv
fmul
pop
jbe
es
push
pop
mov
add
dec
inc
inc
cmp
add
clc
aaa
outs
movhps
mov
pop
xor
pop
xchg
mov
and
daa
add
dec
(bad)
dec
fild
imul
dec
pop
aaa
jb
in
mov
xchg
das
and
(bad)
imul
fcmovnu
push
push
addr16
inc
das
dec
lea
outs
daa
sub
dec
cmps
pusha
mov
xchg
ss
pop
push
dec
neg
out
dec
pop
(bad)
push
cmove
repz
xlat
dec
mov
sbb
iret
push
iret
hlt
sbb
nop
movq
xor
push
test
into
push
addr16
add
lea
pop
icebp
lea
xchg
sub
pop
xchg
pop
adc
push
mov
orps
iret
pop
or
sysret
push
sbb
jg
aaa
mov
aaa
scas
cmp
dec
lahf
xlat
jg
add
add
push
cmps
dec
lea
inc
pop
inc
fcmovu
out
(bad)
pop
mov
daa
push
inc
pop
(bad)
adc
sub
cwde
or
lods
pop
mov
pop
pop
lea
adc
push
ror
xchg
aad
or
outs
pop
dec
sbb
inc
push
cmp
bound
cmp
inc
or
getsec
pop
pop
jmp
xchg
or
pop
cmp
out
push
pop
ins
mov
cmova
daa
movntq
repnz
je
pop
inc
jne
in
out
out
add
fadd
and
outs
das
pop
push
mov
nop
inc
cs
sub
clc
daa
inc
into
pop
(bad)
pop
bound
sysret
push
inc
fld
icebp
pop
fisttp
in
movs
in
push
pop
aaa
aas
add
pop
out
cmp
in
aam
cmovnp
jbe
lods
pop
daa
vmptrld
(bad)
aaa
call
mov
dec
mov
pop
pop
pop
ja
outs
je
jg
divps
push
pop
(bad)
pop
cmovl
imul
sbb
test
aaa
ja
pop
loopne
jmp
(bad)
dec
sbb
(bad)
daa
addr16
aaa
mov
pop
(bad)
pop
mov
jnp
das
pop
scas
iret
inc
jne
mov
daa
daa
pop
xchg
pop
cs
mov
xlat
xor
fidiv
addr16
dec
rol
pop
das
das
jmp
pop
dec
or
sar
popw
pop
outs
pop
inc
mov
aaa
outs
ins
or
movs
push
mov
out
xchg
pop
mov
test
mov
inc
scas
pop
aad
lods
adc
aas
out
imul
mov
pop
pop
addr16
sub
outs
sub
xor
mov
or
pop
aaa
mov
jmp
addr16
mov
pop
ds
pop
sub
je
pop
outs
xor
and
lods
arpl
(bad)
addr16
outs
push
frstor
(bad)
aas
push
outs
ror
xchg
(bad)
aas
mov
pop
idiv
xchg
xlat
mov
and
and
das
cmps
(bad)
movs
inc
das
aaa
daa
mov
pop
xchg
push
cwde
pop
pop
pop
xor
dec
aaa
xchg
xor
inc
mov
xor
cmps
es
sub
(bad)
adc
mov
loopne
loopne
aaa
or
mov
ds
seta
fisttp
pop
mov
(bad)
daa
inc
js
mov
jg
pop
pop
jnp
sbb
aaa
push
mov
ins
pop
mul
xchg
je
pop
xchg
dec
add
pop
mov
aaa
dec
(bad)
jbe
dec
outs
pop
daa
aad
and
call
add
push
xor
daa
add
fucomip
fidivr
mov
mov
cmps
data16
sahf
jne
fist
xlat
pop
pop
unpckhps
imul
maxps
out
dec
mov
or
push
pop
xlat
pop
bound
(bad)
scas
bound
pop
add
outs
or
aas
pop
push
push
jno
fistp
mov
cmps
(bad)
movs
inc
popa
(bad)
dec
aaa
sar
out
fnsave
pop
push
outs
int3
jbe
xchg
jg
(bad)
aad
fld
push
into
out
mov
lods
sbb
mov
pop
xchg
retf
(bad)
xlat
xchg
bound
sub
xlat
addr16
xor
mov
add
lods
(bad)
xlat
push
mov
jmp
push
aaa
push
pop
dec
mov
ret
das
pop
mov
sbb
lea
sbb
jg
test
pop
xchg
or
cmp
push
inc
(bad)
nop
mov
(bad)
xor
psubw
mov
inc
outs
lods
add
scas
ret
jge
inc
pop
push
mov
adc
addr16
aaa
sbb
ss
(bad)
rcl
lea
xor
(bad)
scas
dec
mov
pop
shl
pop
sbb
dec
rcr
daa
call
imul
xchg
fistp
imul
in
dec
out
pop
sbb
mov
daa
pop
sbb
aaa
jne
mov
aaa
out
daa
jae
fnstsw
(bad)
pop
dec
jg
ins
das
cmovl
outs
pop
arpl
(bad)
cmp
iret
pop
fstp
mov
pop
pop
mov
mov
(bad)
lds
outs
(bad)
loopne
das
pop
dec
daa
xchg
jl
sbb
or
lods
sbb
push
aas
pop
scas
(bad)
push
sub
dec
push
and
sbb
jbe
iret
pop
test
fild
pop
inc
adc
mov
out
jg
pop
adc
out
xchg
sti
shr
xchg
push
imul
pop
add
add
scas
pop
jb
test
out
pop
ss
ret
(bad)
pop
outs
or
pop
xchg
push
push
enter
movs
sub
dec
out
and
xor
lea
push
push
aaa
(bad)
jbe
fcmovnb
pop
daa
pop
pop
test
mov
mov
pop
jg
test
addr16
xor
lahf
das
scas
adc
mov
lahf
pop
xor
das
out
dec
adc
push
mov
outs
sub
aaa
inc
mov
mov
add
dec
dec
fdivr
adc
xor
mov
jecxz
iret
daa
xchg
lods
pop
pop
mov
aas
pop
aaa
pop
dec
or
adc
add
sbb
xchg
mov
and
daa
retf
lea
addr16
pop
ins
jmp
ficom
pop
(bad)
inc
push
xchg
cs
(bad)
mov
mov
mov
and
outs
and
neg
(bad)
mov
ret
dec
inc
push
pop
(bad)
mov
pop
mov
js
jg
pop
outs
pusha
aaa
push
jmp
das
cmps
jae
mov
ja
daa
pop
aaa
daa
fdivr
shl
pop
mov
jmp
pop
mov
ja
test
jb
inc
jg
inc
and
push
lods
retf
sbb
push
hlt
das
lahf
mov
lea
push
push
xor
mov
arpl
cmps
nop
adc
rol
pop
test
mov
mov
out
sbb
in
shl
dec
fstp
es
pop
(bad)
push
nop
sbb
(bad)
xor
cwde
sbb
add
xor
(bad)
mov
xchg
inc
push
out
push
fdiv
cmps
lahf
outs
mov
(bad)
or
pop
xchg
call
add
mov
push
test
addr16
in
loop
aaa
scas
and
shl
sbb
movs
pop
pop
lods
out
out
pop
(bad)
test
out
mov
lds
das
pop
sbb
arpl
dec
sbb
out
out
lods
push
xor
mov
aaa
push
mov
arpl
cmp
mov
pop
ficom
(bad)
out
pop
aaa
inc
inc
mov
adc
pop
dec
pop
mov
dec
xor
and
inc
mov
and
jmp
mov
test
fidivr
pop
jnp
in
inc
das
inc
ja
(bad)
rcr
rol
pop
cmps
pop
xchg
pusha
test
data16
and
adc
mov
neg
adc
mov
imul
(bad)
daa
mov
daa
xlat
es
cwde
shl
fnstsw
(bad)
mov
dec
xor
mov
jge
push
push
pop
pop
sbb
bound
sub
push
pop
push
aaa
lock
mov
push
aaa
mov
loopne
aaa
ss
popa
imul
ja
mov
(bad)
bound
shl
sub
jo
adc
pop
push
fistp
mov
mov
mov
pop
inc
jb
push
and
das
dec
xlat
push
add
popf
jbe
mov
mov
push
scas
iret
sub
cmps
pop
mov
mov
out
js
cmps
call
inc
push
prefetch
or
mov
lahf
outs
lock
dec
pop
pop
inc
es
je
xor
inc
dec
(bad)
(bad)
pusha
scas
outs
shrd
or
and
add
pop
jg
mov
lea
mov
inc
mov
add
aad
mov
and
dec
add
inc
xchg
push
out
push
adc
push
test
movs
mov
dec
jg
test
lea
sbb
pop
(bad)
sbb
movs
rcr
mul
ret
pusha
idiv
pop
call
add
mov
movs
add
out
lods
lods
pop
sub
aaa
pop
shrd
pop
scas
rcl
pop
imul
mov
scas
daa
pop
mul
cmp
pop
cmovns
ja
mov
or
mov
sub
aas
iret
push
fadd
and
push
inc
cmps
or
daa
(bad)
div
das
nop
popw
js
inc
into
sysret
and
dec
into
inc
lahf
lods
ror
ds
aas
daa
pop
cmps
mov
or
daa
das
ja
stos
shl
pop
das
aaa
aad
test
iret
das
out
dec
lods
and
addr16
(bad)
mov
aas
sbb
outs
(bad)
lea
inc
xor
and
sub
pop
fcomp
xchg
movq
lods
cdq
fadd
and
movs
aam
xor
ret
scas
pop
pop
jecxz
add
pop
addr16
movs
fimul
movs
test
xlat
pop
fild
(bad)
sub
daa
push
dec
fdiv
pop
mov
out
pop
add
out
(bad)
inc
sub
pop
movups
mov
mov
daa
mov
(bad)
cs
ja
rsqrtps
xchg
or
xlat
fadd
pop
cwde
add
adc
das
push
xor
add
pop
inc
pop
inc
lods
pop
jno
push
(bad)
jg
dec
or
rol
add
daa
(bad)
mov
pop
out
sbb
push
inc
test
xor
out
rol
dec
pop
jo
mov
fistp
daa
outs
mov
test
inc
fiadd
lea
(bad)
push
xchg
out
and
daa
cmp
scas
aaa
aaa
add
lods
and
xchg
pop
pop
lods
fnstsw
sbb
aas
dec
xchg
pop
pop
lods
ja
dec
rcr
enter
mov
imul
mov
mov
mov
in
shl
cmp
mul
movzx
out
sbb
mov
lea
cmps
aaa
cli
mov
xchg
loopne
add
jle
sub
aaa
pop
out
sbb
(bad)
jge
fild
push
jg
xor
in
rcl
out
xlat
sti
jp
(bad)
jg
cs
iret
push
or
mov
in
rcr
adc
dec
daa
addr16
call
das
inc
dec
pop
dec
das
adc
shr
in
and
outs
rcr
(bad)
ja
mov
out
jge
inc
aas
les
addr16
add
mov
pop
jg
sub
mov
les
daa
dec
push
dec
aaa
dec
push
inc
fiadd
push
bound
mov
aas
jo
in
shl
sbb
bound
aaa
test
push
iret
dec
xor
dec
inc
dec
dec
mov
and
xchg
pop
jne
sbb
lahf
mov
sbb
pop
adc
or
out
fdiv
pop
(bad)
(bad)
jmp
push
out
sahf
fisubr
scas
(bad)
arpl
pop
outs
mov
(bad)
maxps
mov
dec
pop
fiadd
icebp
add
out
sbb
ja
pop
out
inc
mov
ja
lods
pop
addr16
or
rcr
scas
jbe
mov
outs
and
xchg
pop
out
and
and
pop
xlat
(bad)
sbb
xchg
dec
pmaxsw
movs
xchg
mov
inc
inc
pusha
mov
or
inc
daa
aaa
pop
pop
cvttps2pi
mov
fcmove
inc
dec
pop
lahf
ds
pop
jbe
xchg
(bad)
fcmovbe
aaa
ss
xlat
sub
or
sbb
xchg
outs
outs
xor
push
inc
xlat
out
loopne
arpl
scas
and
mov
aaa
mov
iret
iret
pop
fnstenv
sbb
lahf
inc
cmp
xlat
cmc
xor
iret
nop
popa
fild
xlat
pop
das
and
adc
loopne
mov
dec
pop
pop
test
mov
bound
pop
aas
and
mov
xchg
push
add
in
pop
pop
mov
push
ins
dec
pop
pop
pop
mov
push
or
sbb
pop
pop
fcmovnu
mov
sysret
daa
outs
in
inc
imul
pop
xchg
dec
sbb
loop
jg
jl
imul
shl
lahf
dec
or
test
outs
jne
xor
ffreep
pop
aaa
mov
iret
cmovle
fisttp
les
xchg
rcl
outs
push
pop
inc
pop
bound
inc
and
push
pop
(bad)
push
mov
sbb
sbb
aaa
xchg
cmp
arpl
outs
cmp
pop
push
add
cmp
daa
(bad)
push
adc
add
pop
es
loopne
sub
pop
dec
les
push
cmp
push
aas
fstp
aam
outs
dec
push
not
minps
outs
mov
pop
out
fisttp
push
imul
add
into
pop
xchg
ret
pop
dec
xlat
push
lock
pop
dec
(bad)
jecxz
mov
pop
pop
cmps
mov
push
scas
dec
mov
inc
movnti
outs
(bad)
dec
jg
mov
inc
pop
dec
aaa
out
mov
cmps
aaa
pusha
adc
adc
pop
ins
aaa
pop
mov
aaa
push
lods
inc
fbld
lock
dec
rol
pop
dec
mov
aam
outs
push
(bad)
mov
pop
pop
pop
mov
getsec
push
add
cmp
das
iret
dec
outs
ins
and
fbstp
bound
pop
addr16
ret
test
dec
das
mov
scas
(bad)
pop
and
cmp
inc
shr
xor
pop
cs
frstor
mov
dec
pop
pop
push
mov
aas
pop
dec
ret
inc
push
or
or
sbb
inc
jmp
pop
inc
rol
sub
push
dec
inc
(bad)
jo
cmp
pop
pop
add
dec
aam
out
push
adc
ja
imul
xchg
and
dec
aaa
fidivr
lock
xchg
pop
daa
mov
ds
add
js
mov
nop
(bad)
or
xlat
enter
(bad)
pop
dec
push
pop
and
ins
(bad)
(bad)
jg
(bad)
out
mov
dec
pop
pop
pop
xchg
jo
push
xlat
pop
lea
popa
imul
(bad)
mov
jmp
cmp
div
dec
iret
(bad)
pop
mov
jle
push
outs
cmp
xchg
jbe
mov
push
aaa
aas
xor
inc
aaa
pop
daa
outs
pop
mov
pop
mov
fnstsw
mov
mov
outs
sbb
xor
pop
xchg
pop
addr16
iret
rdpmc
add
push
pop
arpl
(bad)
jg
sbb
xor
(bad)
pop
fbstp
ja
popw
sbb
pop
pop
xlat
jmp
add
pop
xorps
(bad)
dec
mov
mov
(bad)
out
add
push
loope
cmps
push
and
addr16
mov
push
mov
ja
test
push
dec
fimul
pop
dec
pop
(bad)
lea
(bad)
das
xor
mov
(bad)
daa
lds
adc
sbb
pop
(bad)
xor
add
bound
pop
push
sysret
xor
in
xor
mov
mov
adc
rol
les
test
dec
xcrypt-cfb
cmps
pusha
int3
les
push
iret
loop
pop
push
das
ja
adc
ins
pop
aaa
pop
imul
outs
dec
psubusb
aaa
mov
pop
sbb
fcomp
iret
ins
xor
cmp
mov
mov
out
jle
pusha
dec
(bad)
mov
push
scas
shl
test
movs
pop
xchg
fbstp
pop
cmovl
mov
imul
movsx
mov
pop
das
lea
push
nop
push
pop
sub
nop
cmp
xchg
out
(bad)
sub
lahf
xor
mov
addr16
lea
fimul
scas
test
add
ins
aas
nop
mov
ss
and
das
inc
pop
sbb
mov
pop
cmps
mov
xchg
and
int
ficomp
add
and
mov
in
ror
mov
outs
inc
adc
lahf
ds
ins
aaa
fbstp
mov
pop
pop
addr16
pop
xlat
pusha
lods
sar
pop
or
adc
adc
mov
lods
mov
xchg
add
push
aaa
xchg
inc
stos
sbb
neg
mov
fsubr
(bad)
inc
sub
fild
sub
out
pop
mov
mov
lahf
outs
sub
cmp
daa
mov
dec
lds
inc
xchg
outs
and
ja
pop
push
jne
outs
fistp
sbb
inc
pop
test
inc
popa
fs
(bad)
daa
push
lea
pop
inc
daa
ror
fwait
mov
mov
jbe
addr16
inc
sub
aaa
dec
mov
imul
pop
movs
add
xor
mov
sbb
cmps
cmp
add
in
jnp
push
dec
sbb
(bad)
push
aaa
xlat
pusha
test
(bad)
mov
inc
adc
push
(bad)
(bad)
push
mov
fidiv
fild
pop
imul
dec
leave
sbb
outs
dec
jp
rcr
scas
aaa
push
add
(bad)
jg
nop
jg
sub
ins
adc
pop
pop
mov
xlat
bound
out
loope
ss
mov
push
dec
dec
jmp
adc
jno
ss
sbb
mov
push
xchg
into
nop
add
inc
mov
aas
rol
(bad)
cmp
jmp
sub
arpl
cmc
jb
pop
aas
mov
inc
out
or
or
mov
and
lahf
xchg
inc
xlat
or
jne
lahf
dec
lahf
add
fistp
pop
out
lods
add
xor
inc
inc
fisttp
rol
pop
iret
mov
mov
pand
imul
add
inc
iret
loope
lods
daa
scas
aas
ins
mov
sbb
nop
fisub
lahf
daa
xor
pop
jg
ror
add
fdiv
outs
inc
(bad)
sar
inc
push
cmova
pop
inc
cmp
mov
inc
stos
sub
lahf
inc
pusha
sub
dec
movs
test
cmps
fbstp
pop
mov
outs
mul
iret
lods
sbb
pop
jmp
scas
idiv
je
lea
ds
or
sahf
sbb
jg
cmp
aaa
pop
pop
mov
mov
mov
push
pop
lods
ins
mov
out
rol
pop
pusha
dec
dec
aas
loopne
movs
fnsave
pop
fisttp
ins
pop
jb
pop
inc
pop
pop
and
push
lahf
cs
iret
rol
pop
xchg
mov
pop
adc
mov
inc
fild
ror
push
call
or
ror
dec
jg
jno
fucomp
das
aaa
pop
dec
lods
lods
sbb
test
loop
fisttp
ja
mov
ret
jg
xchg
jmp
dec
pop
ja
fsub
add
sbb
dec
addr16
dec
xchg
xchg
jg
xchg
outs
movs
cdq
lahf
out
xchg
fistp
cmp
fist
out
sbb
cs
movs
das
out
cli
inc
pop
call
les
add
push
pusha
ja
sbb
adc
cdq
sbb
push
xchg
stos
mov
imul
outs
dec
das
imul
or
lock
lea
addr16
popa
sbb
in
pop
fist
sbb
or
out
adc
sub
sbb
push
mov
xor
adc
add
pop
outs
sbb
xchg
mov
int3
sub
(bad)
loopne
xchg
inc
jg
fldcw
xchg
iret
es
push
add
mov
adc
outs
sub
fbld
pop
pop
das
sub
retf
retf
pop
fistp
xchg
push
sub
call
or
aaa
out
loopne
cmp
pop
test
(bad)
fstp
comiss
iret
cmp
lea
ss
pop
(bad)
(bad)
iret
out
daa
inc
ins
lahf
fimul
xlat
inc
mov
pop
push
mov
push
cmp
dec
outs
xlat
sub
into
sub
out
dec
push
movs
inc
das
cmps
inc
push
sub
in
pusha
iret
test
out
cmps
add
aas
das
jg
xor
pop
fistp
pop
fild
fsubr
jg
jb
jle
xor
ds
pop
pop
outs
inc
daa
xchg
add
push
mov
fmul
cmps
(bad)
sbb
scas
mov
aam
pop
test
(bad)
dec
sbb
out
push
fnsave
out
cmp
mov
ret
fbld
(bad)
inc
mov
call
out
inc
sbb
dec
lahf
mov
sbb
(bad)
addr16
inc
fisub
xor
lods
in
ja
inc
neg
test
outs
out
jg
retf
push
jg
out
dec
lods
retf
ud0
inc
scas
push
add
dec
pop
outs
sbb
lahf
push
mov
pusha
pop
mul
fisubr
fiadd
inc
aaa
out
sub
out
xchg
xor
pop
ja
inc
stos
mov
inc
lods
add
(bad)
adc
outs
movs
add
add
imul
(bad)
in
jbe
daa
push
das
syscall
push
mov
rol
(bad)
sub
push
jg
dec
pop
add
imul
inc
in
inc
inc
(bad)
pop
arpl
fist
(bad)
lods
add
mov
inc
(bad)
pop
mov
daa
pop
pop
mov
(bad)
jae
ja
cmp
pop
mov
pusha
outs
dec
cmp
push
daa
mov
outs
jae
cmps
aaa
(bad)
adc
mov
movhps
out
ror
cs
loope
call
lea
xor
cmps
ja
jne
adc
inc
cmps
pop
cmp
sub
iret
ja
loopne
arpl
lahf
mov
test
es
out
outs
inc
sbb
daa
jg
jne
mov
sar
outs
inc
out
aaa
sbb
push
ffreep
aaa
pop
mov
(bad)
ins
push
mov
out
push
fisub
je
inc
aaa
movd
movs
mov
pop
sbb
das
pop
fistp
push
bound
call
mov
gs
out
and
push
push
push
sub
mov
mov
dec
not
les
dec
ror
or
(bad)
dec
sbb
jecxz
cmps
ss
push
or
fild
aaa
bound
push
and
mov
shl
(bad)
out
pop
push
arpl
aaa
mov
aas
dec
pop
xor
adc
or
test
jbe
adc
addr16
ins
and
pop
mov
push
aaa
adc
pop
jmp
add
fisub
test
(bad)
ss
jbe
(bad)
addr16
pop
pop
cmp
dec
xor
dec
and
pop
inc
xchg
jl
adc
mov
lds
(bad)
sub
aam
pop
pop
pop
mov
ror
pop
mov
push
aas
les
nop
dec
iret
push
push
fldcw
lock
add
aas
and
je
cmp
sbb
push
daa
into
cmps
mov
jmp
outs
lds
pop
mov
push
pop
neg
sti
ja
pop
addr16
lock
dec
dec
pop
cmps
jle
inc
loopne
aas
scas
pop
pop
cmps
jbe
and
push
pop
jmp
mov
addr16
push
xor
add
(bad)
pop
pop
or
xchg
out
sbb
test
xchg
dec
addr16
(bad)
mov
xor
pop
inc
imul
sub
es
pop
out
das
pop
ja
shl
or
xlat
push
xchg
and
xor
xchg
cmp
xchg
push
stos
dec
ja
mov
lahf
mov
outs
and
loopne
inc
jbe
adc
cmps
iret
pop
lds
(bad)
aas
das
shl
test
cmovbe
push
jmp
jecxz
mov
mov
test
pop
das
bound
daa
outs
movs
add
cmps
dec
jo
inc
fild
aaa
pop
or
push
sbb
outs
pop
push
sbb
jnp
aaa
outs
sbb
sbb
mov
fisttp
or
das
adc
fist
pop
movs
xchg
sbb
cmp
push
xchg
mov
pop
das
movs
xchg
cmp
pusha
inc
ss
aaa
ds
add
neg
sti
aam
scas
dec
es
mov
iret
iret
jb
pop
xchg
scas
(bad)
cmp
mov
pop
cmps
iret
or
nop
pop
daa
and
push
movs
aaa
pop
pop
ins
imul
(bad)
pop
pop
pusha
add
daa
xchg
pop
pusha
fmul
mov
pcmpgtb
(bad)
mov
ja
ins
(bad)
fidiv
mov
pop
aaa
pop
test
pop
pop
adc
in
or
lock
push
cs
daa
lea
xor
aas
enter
pop
pop
push
adc
mov
das
xchg
ret
push
pop
(bad)
cmps
dec
movs
or
jg
test
(bad)
pop
(bad)
or
adc
pop
and
pop
iret
popa
pop
es
or
es
out
xchg
(bad)
or
mov
mov
dec
out
or
aaa
data16
fistp
test
lea
fisttp
add
mov
inc
stos
add
test
push
daa
(bad)
clc
(bad)
es
iret
or
ss
mov
ss
mov
div
test
jg
pop
vmovdqu
xchg
pop
imul
ror
imul
xchg
jno
mov
das
pop
pop
daa
pusha
pop
(bad)
push
pop
(bad)
addr16
add
mov
mov
pop
ja
and
add
imul
dec
(bad)
pop
das
mov
(bad)
arpl
movq
cwde
mov
bound
imul
loop
daa
jg
pop
test
adc
das
aas
dec
pop
out
ror
ins
and
(bad)
pushf
dec
xchg
mov
push
mov
and
pop
pushf
or
pop
aaa
(bad)
out
ins
sub
pcmpgtb
shl
(bad)
popa
(bad)
das
scas
add
das
dec
sub
dec
mov
xor
in
das
pop
mov
das
loopne
inc
fsub
ja
fwait
inc
ja
dec
pop
dec
daa
dec
inc
or
xlat
ss
push
das
(bad)
jmp
mov
inc
mov
dec
fnstsw
(bad)
outs
inc
pop
(bad)
pmaxub
movs
jno
dec
outs
add
add
mov
xchg
adc
nop
pop
das
add
inc
push
ins
pop
aaa
ds
xlat
pop
pop
mov
idiv
sar
push
jge
loopne
inc
nop
cmp
ror
out
dec
lods
in
rcr
jg
lea
sahf
popa
inc
idiv
mov
test
test
push
or
les
clc
shr
push
jbe
pop
xor
push
punpckhdq
push
(bad)
out
nop
mov
push
xchg
xor
fld
pop
jg
shl
lea
lods
test
cvtps2pd
dec
push
or
pop
pop
ins
mov
xor
push
inc
les
lds
aaa
outs
add
stos
sbb
daa
lahf
xlat
inc
jmp
push
test
pop
(bad)
ror
out
rcl
cmp
jmp
lea
sbb
lods
(bad)
(bad)
pop
xchg
add
pop
aas
cmovl
xchg
sub
jne
mov
fild
sbb
fbstp
adc
mov
(bad)
pop
mov
pop
push
out
addr16
test
pop
push
pop
es
cs
mul
pop
jo
sbb
pop
lods
in
add
push
mov
add
dec
das
dec
cmp
pop
jbe
(bad)
in
sti
xchg
pop
(bad)
fist
adc
sub
pop
pusha
xchg
(bad)
push
punpcklbw
rol
movs
pop
xor
and
jge
pop
jle
xor
xlat
xchg
nop
push
fmul
push
pop
dec
pop
sub
(bad)
ds
or
das
outs
pop
vshufps
mov
(bad)
(bad)
bound
pop
sub
scas
push
test
(bad)
lea
pop
dec
ins
mov
xadd
and
push
fiadd
jbe
lock
pop
push
pop
push
push
xchg
sbb
xchg
xor
sub
mov
js
out
(bad)
ror
enter
xor
ins
xchg
je
push
mov
loopne
pop
out
pop
mov
(bad)
prefetch
mov
ucomiss
adc
mov
xchg
and
das
cmps
das
ins
fcom
(bad)
pop
scas
je
mov
cmp
(bad)
and
adc
ja
(bad)
adc
das
push
(bad)
dec
mov
inc
pop
shr
cmps
das
xor
ins
jno
clc
pop
pop
setb
ss
ins
cmp
das
daa
ret
rcl
pop
add
sbb
int3
ja
jg
ins
adc
nop
aas
out
outs
cmp
pop
cmps
cmp
(bad)
lea
fiadd
dec
lods
imul
mov
sbb
pop
and
mov
daa
outs
das
mov
cmp
addr16
(bad)
js
fld
out
scas
out
cmp
ja
mov
push
mov
mov
aaa
pusha
test
pop
movhps
jmp
out
es
sbb
pop
xlat
pop
outs
ins
test
pop
pop
aaa
pop
rol
addr16
sub
pop
pop
sbb
dec
push
pop
jo
pinsrw
pop
pop
mov
and
call
rol
pushf
daa
pop
inc
or
shl
rol
xlat
adc
scas
call
pop
mov
jg
or
pop
adc
nop
and
jg
aam
add
sbb
das
and
bound
lods
aad
das
sbb
jg
test
pop
and
and
(bad)
jg
inc
loope
or
add
shl
jg
or
sysret
xlat
add
sbb
ins
push
cmps
outs
mov
and
xor
lea
inc
pop
or
aaa
pop
push
and
es
sub
cmps
push
outs
aam
inc
mov
mov
mov
cmp
outs
pop
scas
test
push
mov
and
mov
pop
xchg
jbe
cmps
jg
dec
daa
push
mov
sub
test
pop
or
inc
mov
xchg
pusha
xchg
loopne
mov
mov
push
in
mov
das
aaa
(bad)
dec
mov
fnstenv
push
scas
jg
sbb
fidiv
jbe
cmp
jg
fidiv
pop
dec
pop
and
xor
ds
pop
sbb
push
aaa
(bad)
fsub
aaa
scas
out
xchg
ret
mov
jecxz
pop
mov
mov
pop
das
fisttp
aaa
cmps
sbb
jbe
ins
sbb
mov
pop
out
aad
xlat
lahf
mov
out
pusha
dec
ret
sbb
inc
add
xchg
pop
xlat
cmovp
ret
(bad)
xlat
sysret
push
jmp
xchg
jg
ins
sbb
addr16
push
push
xor
xorps
cmp
out
or
or
xlat
push
movs
outs
movs
scas
mov
push
pop
dec
mov
ins
daa
inc
pop
shr
push
ss
inc
and
scas
mov
sub
cmp
movq
sbb
fisttp
mov
aas
outs
jmp
pop
add
and
or
int
mov
addr16
push
adc
lahf
xchg
mov
inc
dec
jg
adc
add
sub
xchg
cmp
dec
iret
outs
lods
cdq
pop
dec
das
xchg
test
cmps
bound
ss
mov
jbe
popa
stos
xor
lods
dec
dec
pop
das
mov
scas
add
daa
das
adc
push
bound
sub
pop
outs
inc
pusha
adc
(bad)
xchg
cmp
mov
es
pop
outs
dec
pusha
push
in
add
popa
into
out
or
outs
fadd
out
es
dec
pop
inc
lahf
pop
dec
aas
adc
cs
xchg
sbb
add
mov
mov
jle
idiv
dec
imul
add
mov
pop
rcr
aaa
pop
es
add
lods
pop
mov
dec
dec
and
push
pop
(bad)
pop
pop
loop
(bad)
call
pop
lods
xor
out
mov
xcrypt-ctr
cmps
pop
pop
cs
outs
push
add
sbb
mov
xchg
rol
add
aas
push
xor
aaa
jge
jmp
fstp
ja
cmova
dec
add
dec
xor
bound
cmps
inc
lods
jnp
iret
push
aaa
mov
xlat
aas
xor
inc
pop
ja
(bad)
sbb
out
mov
or
lods
sbb
lahf
pop
(bad)
stos
es
dec
pop
pop
adc
sbb
pop
dec
jmp
ins
or
inc
or
xlat
call
jne
push
jbe
xchg
sub
or
fild
aad
loope
pop
cmp
adc
outs
or
(bad)
dec
push
push
sbb
addr16
jge
and
xlat
movhps
dec
mov
(bad)
or
movs
sbb
pop
pop
fadd
xchg
inc
or
xlat
mov
pop
pop
xlat
push
arpl
push
pop
mov
das
cmp
pop
pop
cmp
clc
inc
and
pop
sbb
lahf
dec
(bad)
fidiv
daa
das
bound
pop
lea
outs
and
sub
dec
out
and
sbb
dec
xlat
mov
pop
add
adc
(bad)
outs
lea
push
lahf
mov
and
(bad)
(bad)
mov
mov
push
leave
dec
pop
jmp
ja
pop
mov
mov
inc
adc
jo
aaa
pop
mov
inc
(bad)
push
pop
mov
add
push
(bad)
mov
daa
bswap
mov
xchg
or
push
pop
lsl
in
(bad)
adc
outs
mov
pop
outs
mov
pop
(bad)
xchg
shl
inc
outs
lods
addr16
bound
push
mov
inc
div
out
sbb
imul
pop
pop
call
(bad)
add
popa
xchg
cmp
jbe
aaa
daa
pop
fist
cmp
div
(bad)
lea
test
push
addr16
pop
mov
les
xchg
stos
es
cmps
jg
push
pop
fmul
outs
test
push
lfs
(bad)
pop
xor
xlat
pop
add
in
inc
stos
inc
ja
push
test
pop
jle
dec
js
inc
xchg
pop
das
pop
push
lods
and
scas
pop
scas
shl
pop
das
scas
movs
xchg
adc
test
push
pop
les
pop
mov
dec
int3
out
jno
aas
lods
pop
pop
fdiv
pmovmskb
adc
das
pusha
push
in
inc
push
clc
(bad)
ficomp
dec
sbb
lods
fbld
scas
aaa
push
pop
sbb
daa
xchg
push
push
jge
mov
ret
outs
in
(bad)
dec
or
and
inc
out
movs
mov
fisttp
(bad)
fstp
jmp
clc
shl
pop
mov
aas
pop
seta
bound
pop
mov
aaa
and
jecxz
xchg
clts
inc
pop
mov
xlat
cmp
cmp
sub
push
inc
pop
jne
lods
outs
xlat
iret
adc
addr16
xlat
outs
mov
pusha
fild
pop
pop
mov
fisub
scas
dec
pop
pop
push
add
lds
dec
push
pop
jmp
out
dec
mov
xchg
inc
aas
(bad)
stos
adc
das
pop
inc
movs
inc
jmp
pop
adc
ss
(bad)
push
jbe
arpl
add
or
(bad)
xlat
mov
mov
out
dec
pop
call
adc
xor
push
push
imul
aas
(bad)
cmp
lea
inc
push
outs
add
out
mov
adc
(bad)
add
xor
sub
or
add
das
pop
jno
sbb
shr
aaa
scas
add
xchg
outs
js
(bad)
xlat
adc
(bad)
push
fcmovnbe
pop
pop
pop
dec
jp
sub
cmp
mov
aas
mov
sub
mov
ds
lds
cmc
aaa
popa
pop
iret
pop
es
mov
movs
lods
(bad)
pop
cmps
mov
(bad)
push
sahf
iret
dec
pop
aaa
fimul
xlat
movs
in
mov
aaa
out
cmps
adc
ins
pop
pop
fsubr
cmp
pop
pusha
pop
ret
ja
cmc
or
lahf
pop
adc
push
pop
dec
and
cmps
push
or
jg
(bad)
push
ins
sub
ja
rcr
(bad)
hlt
push
hlt
cs
inc
push
addr16
test
shld
in
neg
out
movs
add
xchg
pop
jl
in
inc
pop
pxor
xor
aas
outs
mov
lea
pop
(bad)
fimul
adc
ss
ja
push
xor
pop
dec
mov
(bad)
dec
xor
mov
xor
xor
stos
push
dec
test
setp
xlat
dec
pop
imul
add
(bad)
xor
imul
daa
fmul
pop
addr16
or
add
aaa
lahf
aad
adc
daa
out
mov
test
outs
lea
inc
pop
fist
xor
es
into
xor
mov
jle
sub
add
jo
xlat
outs
ja
jnp
movs
xchg
pop
outs
fs
jno
outs
movntq
out
xchg
jo
div
lods
add
pop
addr16
add
xchg
cmp
xchg
inc
pop
xchg
sbb
ud0
fidiv
push
lods
das
iret
aas
out
mov
mov
lea
popa
mul
mov
outs
pop
es
mov
outs
pop
aas
pop
test
mov
push
pop
mov
and
aaa
adc
in
scas
xchg
pop
ror
neg
aad
call
popa
das
pop
call
xchg
(bad)
loop
push
lahf
pop
pop
loopne
aam
pop
pop
out
inc
lods
xchg
inc
cmps
add
dec
push
aaa
fidiv
mov
pop
out
test
fild
das
daa
or
cmps
sbb
jbe
pop
inc
pop
aaa
out
neg
mov
scas
sub
xor
pop
and
push
aaa
pinsrw
(bad)
lea
(bad)
pop
fadd
push
mov
sbb
movs
cs
pop
pop
adc
out
jo
fs
push
lods
adc
(bad)
neg
pop
das
inc
sbb
sub
loopne
aaa
outs
adc
adc
push
pop
pop
cmps
das
out
inc
xchg
lock
xlat
xchg
jmp
pop
push
mov
inc
(bad)
pop
lea
pusha
mov
bound
inc
mov
shl
dec
cmps
nop
call
addr16
xor
das
inc
lods
dec
js
pop
pop
pop
jo
call
mov
pop
pop
sysret
jbe
sbb
pop
cmps
test
pop
sub
(bad)
(bad)
outs
cs
ret
aaa
inc
sub
retf
mov
daa
aas
cmp
lock
pop
mov
das
pop
sahf
cmp
mov
aaa
popa
xchg
push
(bad)
mov
add
and
call
xor
(bad)
push
test
inc
pusha
mov
(bad)
mov
test
pop
sub
lods
outs
xchg
subps
outs
dec
pop
xchg
in
daa
(bad)
iret
pop
aaa
push
add
add
aaa
pop
mov
pop
xor
(bad)
pop
packuswb
pop
add
add
mov
(bad)
das
aaa
pusha
xchg
je
ja
push
fbstp
icebp
push
iret
dec
aaa
pop
mov
ret
das
inc
jl
or
iret
push
pop
add
rcr
sub
push
aam
in
cmp
jmp
pop
mov
psllw
inc
pop
dec
inc
movs
rcr
out
dec
add
dec
pop
push
and
call
pop
sub
daa
push
pop
mov
pop
pop
lahf
sub
das
add
rcr
pop
sub
mov
push
inc
dec
sbb
pop
xchg
(bad)
mov
mov
ins
sbb
sub
jp
scas
dec
inc
shr
adc
(bad)
stos
or
sbb
pop
shr
xlat
push
in
lea
bts
sbb
pop
test
sbb
stos
xchg
lock
(bad)
pop
add
(bad)
fucom
aaa
imul
cmps
inc
xchg
cmovl
dec
xchg
cmp
lea
pusha
pop
pop
setg
add
iret
jbe
(bad)
sub
icebp
push
xor
pop
daa
div
jg
inc
mov
inc
push
les
sub
(bad)
fbld
fcmovbe
mov
(bad)
in
shl
ja
fsub
popa
shufps
push
out
push
sub
mov
lea
dec
addr16
push
das
daa
xchg
in
xor
ja
inc
outs
in
mov
pop
jmp
pop
scas
shr
es
pop
outs
dec
test
lea
(bad)
pop
lods
call
sub
push
cmovge
mov
pop
pop
adc
test
out
adc
push
pop
mov
mov
mov
cmp
push
dec
inc
mov
dec
daa
xor
or
dec
push
inc
mov
adc
jmp
pop
sbb
mov
pop
cmps
push
pusha
jmp
mov
addr16
cmp
not
adc
fisubr
loop
iret
pop
dec
arpl
(bad)
add
daa
cmps
sub
mov
iret
call
ficomp
inc
outs
pop
(bad)
movs
push
and
lea
imul
inc
out
push
dec
pop
and
fild
movs
sbb
fistp
pop
inc
adc
dec
(bad)
or
out
rcr
ins
mov
das
rsqrtps
(bad)
outs
ja
add
xchg
in
(bad)
mov
inc
inc
outs
mov
mul
pmuludq
push
inc
iret
nop
(bad)
or
addr16
ins
psubusb
xchg
in
fmul
mov
lahf
sbb
push
(bad)
sysret
mov
fiadd
inc
xchg
addr16
outs
mov
in
cmp
xchg
fdiv
or
push
dec
add
lods
pop
out
dec
pop
lahf
bound
ficom
sub
pop
aas
xlat
mov
out
cmps
ins
mov
dec
out
loop
push
xchg
fcom
pop
mov
pop
bound
dec
inc
xchg
jmp
or
loopne
aas
pop
push
and
xchg
add
mov
sbb
les
xchg
pop
jg
add
pop
shr
cwde
neg
ss
add
jp
cs
pop
lods
int
mov
(bad)
mov
js
add
daa
mov
adc
addr16
jmp
pop
das
addr16
cmp
aad
xchg
sbb
pop
push
aaa
and
add
mov
adc
xor
dec
ja
adc
inc
pop
mov
addr16
sbb
pop
sbb
out
dec
outs
xchg
add
fstp
jo
pop
iret
or
adc
test
push
ja
jo
ins
pop
dec
xchg
mov
imul
xor
lds
das
ja
loopne
or
nop
fmul
iret
pop
jbe
or
pop
push
xor
scas
pop
pop
imul
jg
pop
or
and
inc
ja
sbb
add
mov
icebp
push
pusha
adc
das
inc
mov
das
(bad)
pop
adc
and
pop
das
mov
sub
jnp
popa
bound
push
sbb
adc
(bad)
(bad)
ins
pop
scas
das
push
and
jne
xchg
(bad)
adc
pop
outs
popa
pop
outs
fdiv
inc
dec
adc
cs
xor
and
xchg
scas
jbe
test
pop
dec
addr16
ficomp
sub
aas
push
adc
ins
xchg
and
addr16
cvtps2pi
pop
xlat
inc
fcom
das
aaa
movs
in
pop
push
xor
push
pushf
add
add
scas
lods
adc
or
and
(bad)
mov
das
or
sbb
inc
jl
push
xchg
movzx
push
arpl
lahf
mov
out
mov
sbb
xor
sbb
sub
xor
pop
mov
fmul
mov
push
scas
iret
addr16
pusha
push
outs
push
pop
add
or
xor
xor
xchg
mov
and
out
jno
mov
mov
in
mov
daa
aaa
cs
or
add
jb
aas
push
push
dec
xchg
ret
dec
aaa
pop
rol
ja
(bad)
sub
dec
not
dec
pop
je
in
xchg
imul
inc
sbb
pop
(bad)
fild
pop
mov
ficomp
pop
xchg
in
push
cwde
pop
scas
es
jo
push
scas
pop
mov
lahf
cmp
xchg
ins
add
sysret
sub
add
outs
jmp
pop
daa
fcmovnu
fbstp
cmps
pop
daa
das
fdivr
xchg
add
seta
pusha
adc
dec
cmps
ret
test
bound
out
pop
bound
or
or
push
pop
dec
jecxz
mov
inc
test
(bad)
dec
mov
xchg
aaa
dec
or
ficomp
aas
(bad)
cwde
pop
mov
dec
addr16
push
lods
in
inc
pop
pop
iret
jbe
pop
shl
out
sub
jg
or
loop
xchg
das
dec
aaa
inc
mov
add
pop
inc
inc
loopne
mov
test
mov
aas
inc
lahf
ficomp
pop
aaa
pop
or
jbe
xlat
push
adc
movs
sub
xchg
dec
jecxz
inc
and
das
add
outs
ins
jg
addr16
(bad)
or
aaa
daa
mov
ficom
xchg
(bad)
dec
ret
pop
comiss
outs
mov
(bad)
pop
pop
lahf
jo
add
xor
sbb
mov
lahf
lods
shl
push
jg
pop
pop
retf
test
pop
imul
lahf
and
add
iret
mov
add
sbb
aaa
fsubr
enter
iret
xor
js
mov
(bad)
cmps
inc
inc
mov
cld
out
dec
ja
and
pop
pop
push
les
jge
pop
iret
test
push
pop
lods
add
cmps
daa
pop
fld
push
jmp
dec
cmps
pop
dec
jbe
loope
comiss
xchg
cli
inc
xchg
outs
dec
mov
pop
loopne
xchg
sbb
inc
dec
cmps
fstp
push
pop
bound
push
not
push
movntq
stos
add
inc
scas
push
jmp
push
mov
add
(bad)
fstp
fs
cmps
cmps
sbb
pop
add
mov
xchg
adc
out
fmul
test
ffreep
fidivr
lock
inc
mov
aas
out
xor
xchg
out
jg
in
or
daa
pop
(bad)
xor
mov
or
jbe
inc
mov
lods
push
adc
add
pop
pop
inc
aaa
outs
ja
(bad)
jnp
mov
pop
dec
sub
pop
das
(bad)
or
push
pop
xchg
mov
push
xchg
inc
lods
mov
(bad)
sbb
inc
lds
mov
mov
jg
sub
inc
pop
mov
xchg
push
(bad)
call
inc
sub
mov
ja
das
fstp
nop
ins
out
dec
daa
les
xor
inc
addr16
sbb
inc
pop
push
test
push
sbb
aaa
lds
dec
pop
outs
push
jl
push
pop
addr16
xor
test
jbe
daa
pop
outs
inc
push
cmp
jg
arpl
in
fist
inc
movs
add
das
(bad)
scas
xor
lahf
arpl
mov
fwait
xor
add
rol
ds
xor
add
xchg
mov
stos
shl
das
push
aaa
mov
(bad)
pusha
cmps
xor
das
adc
mov
ja
(bad)
test
xchg
fild
push
imul
daa
(bad)
hlt
lea
pop
aas
xchg
inc
cmp
outs
dec
ins
fsub
das
daa
cmp
aaa
(bad)
add
dec
mov
pop
mov
sub
pop
cmc
mov
pop
or
sub
scas
pop
ja
mov
mov
mov
dec
addr16
cmova
pusha
dec
aaa
shr
fild
xor
outs
dec
(bad)
jne
loope
xchg
fistp
bound
or
and
scas
push
sub
sub
add
push
lahf
add
imul
mov
sbb
outs
ja
fst
inc
xor
addr16
push
xchg
cmp
sub
pop
outs
pop
pop
fidiv
push
inc
pop
dec
sysret
push
dec
arpl
xchg
pop
daa
mov
or
mov
inc
inc
adc
mov
push
push
push
out
je
fdivr
pop
pop
mov
les
adc
sub
jmp
xchg
jg
pop
inc
lds
pop
pop
dec
pop
mov
nop
mov
inc
stos
cmp
rol
push
aaa
push
iret
xor
shl
ss
sub
push
inc
dec
mov
aas
(bad)
mov
pop
dec
pop
outs
lods
dec
fmul
out
ss
pop
sbb
add
movs
pop
xchg
dec
adc
cmp
sub
dec
add
sar
dec
rcl
adc
out
dec
sub
xchg
inc
fild
push
out
(bad)
lea
lods
pop
ja
mov
dec
(bad)
inc
sub
test
aaa
(bad)
mov
pop
bound
pop
pop
mov
js
shl
cmps
bound
push
push
cmps
jne
(bad)
add
dec
lods
xor
daa
outs
mov
(bad)
retf
(bad)
jg
xchg
loopne
jle
pop
inc
loopne
cmp
(bad)
mov
or
dec
jmp
jg
xor
outs
outs
pop
lahf
int
lods
push
outs
jle
push
dec
aam
push
mov
and
pop
dec
xor
xor
xchg
mov
daa
dec
inc
in
inc
pop
mov
outs
pop
cmp
or
inc
pop
out
cmp
stos
pop
out
lods
pop
aas
xchg
pop
addr16
cmp
nop
add
les
aas
ffreep
adc
add
outs
fisttp
aas
out
jo
mov
adc
sbb
ret
mov
pop
dec
and
jo
pop
fadd
jg
adc
rcl
xlat
push
sub
adc
(bad)
loop
fisttp
aaa
outs
movs
add
jg
mov
mov
pop
pop
das
pop
sub
dec
pop
aaa
mov
pop
pop
mov
mov
pop
(bad)
mov
adc
sysret
sbb
rcr
es
bound
adc
(bad)
retf
or
pop
scas
or
popa
out
xchg
inc
loopne
push
scas
sbb
lea
daa
cmp
popa
push
movs
das
cmps
(bad)
out
cmp
or
lahf
pop
ja
mov
rol
(bad)
jmp
pop
inc
pop
pop
inc
mov
ins
test
pop
mov
inc
pop
cwde
or
push
out
inc
mov
jg
cmp
mov
arpl
(bad)
neg
push
and
test
or
xchg
xchg
add
pop
neg
cmps
xlat
aaa
pop
push
aaa
mov
(bad)
xchg
jbe
addr16
or
les
popa
lds
add
iret
push
pop
(bad)
je
aas
addr16
jp
idiv
mov
outs
mov
pop
and
add
mov
jge
pushf
aam
ja
sbb
les
mov
sbb
fimul
sbb
pop
maxps
xchg
and
push
pop
mov
pop
xor
ss
pand
aas
push
xor
punpckhwd
out
mov
mov
pop
jg
add
jne
add
lds
or
pop
mov
and
(bad)
mov
rcl
xchg
pop
adc
not
les
pop
ins
sub
call
shl
push
xchg
cmp
sbb
pop
daa
or
add
mov
dec
push
fild
inc
dec
sub
bound
(bad)
jns
sbb
out
ja
push
bound
dec
sar
cs
pop
(bad)
aaa
popf
test
sub
pop
xchg
cmp
je
sbb
(bad)
jmp
mov
imul
pop
addr16
sti
sar
pop
dec
pop
(bad)
test
iret
bound
mov
aaa
pop
aaa
adc
fbld
enter
pop
pop
out
sbb
push
push
fistp
add
xchg
aam
movs
daa
fbld
and
pop
dec
ret
mov
mov
inc
popa
sub
daa
fsubr
jo
lahf
pop
dec
jle
sub
outs
fist
out
sub
add
ja
xchg
add
das
dec
push
inc
outs
mov
test
xchg
aaa
mov
push
xchg
hlt
adc
aaa
lds
icebp
jg
inc
movs
push
lods
mov
xchg
das
out
cmp
bound
pop
pop
mov
inc
or
push
jne
sub
lea
arpl
fbstp
into
prefetch
enter
dec
lods
mov
out
jg
and
add
adc
inc
add
xlat
das
stos
mov
pop
movs
add
mov
pop
(bad)
pop
add
sub
dec
fcom
sbb
mov
push
mov
xor
jg
pop
fs
bound
nop
mov
dec
ret
aaa
aaa
mov
inc
jo
jbe
es
lahf
dec
xor
imul
pop
das
arpl
shld
jbe
nop
add
das
aaa
cmps
mov
pop
inc
das
dec
push
sub
cmp
jg
mov
inc
xchg
add
inc
or
dec
aaa
sbb
mov
pop
aaa
xchg
or
cmp
or
ss
cmp
pop
mov
sub
pusha
push
push
lds
(bad)
and
dec
(bad)
pop
imul
xchg
(bad)
adc
(bad)
jg
sub
sbb
pop
inc
xchg
cs
outs
mov
jo
xlat
outs
inc
lods
or
fmul
inc
mov
sub
out
add
inc
jbe
pop
fistp
mov
outs
push
scas
or
adc
das
lods
or
(bad)
aas
scas
push
aaa
push
enter
mov
arpl
xlat
jg
pop
and
aas
(bad)
fisttp
ror
xchg
aas
lahf
pop
or
sbb
push
lods
in
pop
inc
aas
sub
push
sub
push
and
xor
add
cwde
xor
inc
add
push
sbb
or
pop
inc
or
inc
stos
dec
outs
shl
jge
daa
pop
daa
(bad)
call
mov
call
(bad)
xor
push
sbb
addr16
bound
ja
das
and
les
(bad)
xchg
pop
sbb
in
int3
sbb
push
(bad)
pop
xlat
out
mov
pop
xlat
(bad)
push
mov
pop
mov
bound
nop
lea
das
or
mov
pop
pop
push
pop
sub
mov
xchg
adc
dec
push
push
and
addr16
test
jo
addr16
inc
imul
inc
das
push
test
test
ins
xchg
pop
mov
xchg
sbb
push
dec
outs
mov
xchg
rol
jle
fcom
sub
pop
sysret
(bad)
cmps
adc
ud0
aaa
(bad)
mul
das
daa
wbinvd
cmp
add
lea
mov
push
pop
push
stos
sbb
(bad)
xchg
push
mov
not
es
lahf
push
shr
dec
mov
outs
sub
mov
fidivr
sbb
shr
pop
out
shufps
fst
loopne
scas
ret
loopne
inc
scas
stos
mov
out
xlat
or
mov
data16
cmp
add
pop
sbb
add
cmps
(bad)
leave
sub
push
push
cmovp
shl
pop
pop
or
sbb
loop
jno
das
iret
push
xchg
xchg
mov
(bad)
iret
sbb
movs
pop
pop
dec
lods
and
pop
(bad)
aad
dec
pop
aas
pop
mov
(bad)
fild
pop
imul
imul
push
das
xchg
(bad)
test
pop
daa
jg
in
paddsb
idiv
and
std
(bad)
cmps
push
pop
pop
pop
mov
push
ja
mov
lahf
out
xchg
jg
cmp
cmp
lahf
cmc
ficomp
pop
das
ja
mov
fldcw
xchg
pop
mov
add
cmp
das
mov
sub
ins
dec
ret
das
pop
lods
gs
sbb
jg
mov
sbb
aaa
aas
ja
jo
xchg
pop
jg
rcr
pop
maxps
xor
lods
sbb
dec
aaa
xor
add
(bad)
pop
ffreep
aaa
push
sub
jecxz
pop
push
out
test
inc
fild
in
inc
bound
movntq
or
addr16
mov
push
jb
ss
adc
xchg
(bad)
addr16
(bad)
imul
addr16
lods
aad
push
aaa
les
jne
aas
push
bswap
or
xor
or
pop
das
xor
pop
xchg
push
daa
test
push
aaa
iret
daa
xor
mov
dec
pop
push
mov
fisub
mov
xor
addr16
adc
xchg
iret
or
dec
pop
pop
dec
ret
loope
xor
lock
daa
outs
pop
outs
pop
sbb
das
push
aas
mov
outs
sbb
(bad)
pop
inc
push
mov
inc
pop
dec
xchg
mov
jge
pop
mov
getsec
pop
out
or
jno
das
(bad)
jo
pop
(bad)
ins
int
jae
pop
neg
bound
adc
pop
ja
outs
movs
or
arpl
cmps
dec
inc
addr16
sub
fisttp
out
fs
pop
jmp
pop
scas
(bad)
mov
aas
ins
fiadd
into
xchg
pop
add
adc
fucomip
sbb
(bad)
mov
iret
das
jmp
ss
aas
bndstx
(bad)
pop
iret
stos
add
xor
and
jmp
or
lods
xchg
das
pop
outs
test
ins
pop
pop
pop
daa
jecxz
rcr
movq
(bad)
iret
ja
mov
ret
call
xchg
jo
pop
cs
pop
or
ror
adc
aaa
fild
arpl
clc
iret
lahf
daa
loop
mov
pop
dec
pop
aaa
paddusw
rol
scas
mov
mov
mov
mov
xlat
imul
das
cli
(bad)
bound
pop
out
test
aas
call
daa
inc
sahf
test
jg
jo
pop
pop
mov
xor
test
cmp
addr16
push
add
daa
pop
sub
lock
fs
aad
ja
sbb
popa
aas
stos
push
lods
mov
xchg
inc
xor
mov
pop
inc
mov
aaa
push
fistp
ss
(bad)
mov
push
pop
inc
dec
mov
dec
dec
dec
das
addr16
inc
push
pop
cmp
mov
mov
pop
dec
arpl
imul
jl
out
pop
pusha
in
add
arpl
jbe
outs
pop
or
mov
adc
pop
push
ss
mov
aaa
cmp
mov
push
dec
arpl
lds
sub
iret
mov
out
movsx
pop
fcmovb
xlat
pavgb
movzx
call
push
pop
xchg
(bad)
xlat
mov
scas
div
jo
push
fs
cmps
push
pusha
lods
pop
aaa
ds
mov
stos
sbb
and
xlat
lea
sbb
xlat
outs
bound
inc
mov
sti
inc
fild
pop
mov
pop
pop
or
dec
cmps
loop
jns
out
(bad)
fisttp
mov
inc
cmova
xor
pop
mov
jbe
adc
scas
(bad)
sbb
iret
xlat
dec
mov
dec
aaa
outs
test
inc
push
mov
xor
sbb
inc
stos
inc
daa
daa
movs
(bad)
push
fidiv
mov
lods
push
rol
aaa
dec
fistp
mov
ins
xlat
ja
sbb
mov
bound
and
lock
or
aad
lds
iret
pusha
aam
inc
pop
iret
or
rcl
dec
add
lahf
cli
shl
jbe
lds
neg
imul
mov
mov
add
dec
aaa
cmp
pop
neg
or
push
add
pop
arpl
daa
mov
jg
lods
adc
je
pop
fidivr
adc
loop
push
aas
test
outs
sub
mov
scas
inc
ins
fnsave
pop
out
mov
aas
lock
inc
cmp
ss
or
xlat
scas
mov
imul
aas
fisttp
jmp
jbe
xchg
sbb
xlat
pop
das
lds
mov
enter
dec
pop
add
(bad)
dec
aaa
pop
xchg
or
bound
data16
aaa
lods
add
jmp
xor
lahf
sbb
rol
xchg
dec
out
or
aas
jg
mov
dec
xchg
push
pop
pop
cmp
ins
dec
pop
daa
and
pop
ja
sub
mov
rol
xchg
cmovg
inc
pop
mov
inc
loopne
mov
rsm
lods
push
sub
xor
pop
hlt
pop
aaa
lea
or
inc
test
imul
dec
aam
call
daa
mov
sbb
or
push
mov
mov
or
out
aaa
outs
lds
or
add
add
(bad)
push
pop
daa
xchg
fcom
xchg
pop
cs
gs
outs
ins
xor
push
pop
ss
fwait
cld
out
inc
cs
pop
dec
pop
daa
mov
fcmovb
out
das
adc
pop
popa
pop
lods
inc
neg
aas
dec
movs
mov
aaa
push
add
ins
stos
xchg
out
dec
cs
jg
push
xchg
movs
(bad)
dec
daa
scas
pop
mov
inc
pop
outs
push
fsubrp
pop
arpl
push
(bad)
pop
sbb
enter
arpl
pop
arpl
fdivr
push
pop
sahf
inc
push
fbstp
scas
dec
cmp
push
push
cmp
out
addr16
fs
sar
pop
nop
push
sbb
fisub
pop
pop
into
hlt
xor
jnp
pop
jbe
pop
fcmovb
or
das
pop
pop
mov
out
popa
jle
imul
pop
inc
cmp
push
push
out
cs
into
pop
test
daa
ss
addr16
mov
ss
pop
es
jp
es
lods
lea
lods
cmps
(bad)
es
ja
inc
daa
cmp
ss
push
jp
inc
test
movs
xchg
inc
mov
xor
call
pop
popa
stc
ss
jg
dec
lods
mov
(bad)
fist
fisttp
add
add
add
daa
inc
sbb
addr16
sub
and
in
pop
xlat
pop
fwait
sub
ins
mov
pop
pop
adc
xchg
xlat
push
pop
push
stos
movs
shl
fiadd
and
lahf
dec
loopne
mov
fild
inc
inc
mov
maxps
outs
mov
mov
xor
pop
dec
fimul
lds
pop
(bad)
lds
lahf
(bad)
dec
pop
dec
pop
pop
jl
in
push
aaa
into
(bad)
je
inc
push
inc
pusha
jg
sbb
and
pop
ss
fsubr
mov
bound
push
add
lock
cmp
cmps
push
cmp
rol
fst
neg
scas
iret
ja
cmp
repnz
pusha
add
das
scas
sbb
fs
mov
xchg
ss
jg
out
xchg
jnp
pop
ja
jle
sti
fadd
cs
xchg
pop
cmp
fucom
inc
xchg
fs
das
daa
fist
lods
adc
cmp
mov
inc
push
xlat
call
push
jo
mov
push
outs
out
lock
rcr
sbb
(bad)
fild
pop
push
fdiv
push
mov
out
lea
xchg
fisttp
das
pop
outs
out
push
enter
test
shl
dec
pop
jg
lock
dec
out
pop
aas
ss
mov
pop
mov
sbb
movs
mov
lahf
mov
ror
ins
cmps
jg
push
xor
pop
cmp
xlat
out
and
add
mov
xchg
pop
fsubr
aaa
aas
xor
nop
cmp
jg
addr16
mov
pop
pop
pop
out
ins
xchg
xor
and
xchg
pop
mov
pop
pop
ins
adc
mov
fnstenv
pop
xlat
pop
inc
sbb
and
outs
fist
test
push
adc
aad
ins
lahf
(bad)
push
sbb
ins
nop
inc
addr16
out
repz
push
pop
dec
imul
daa
pop
dec
pop
(bad)
push
cmps
out
sbb
(bad)
outs
pop
ins
repnz
mov
ss
lsl
lea
pop
pop
pop
jl
nop
push
or
mov
fisub
mov
jnp
out
(bad)
jg
in
jnp
mov
iret
arpl
pop
sub
mov
(bad)
seto
arpl
ja
mov
push
iret
dec
div
pop
movq
in
pop
add
push
cmp
loopne
fwait
das
push
pop
cmps
fs
fidiv
mov
push
ds
daa
cmp
pop
out
sbb
cmp
pop
xchg
push
xchg
fnsave
jae
xchg
das
daa
popa
or
xchg
push
dec
xor
ja
jo
pop
es
pop
fdiv
cmp
jbe
pop
pop
dec
popa
cmps
ret
pop
lods
xor
in
nop
(bad)
aaa
pop
out
sbb
das
cmps
pop
es
into
jb
outs
aaa
pop
mov
fld
outs
push
push
aas
jo
xor
xchg
xlat
pop
xsaves
mov
sbb
adc
scas
pop
lods
je
ds
ins
ins
mov
jns
pop
dec
iret
scas
xchg
add
mov
fldcw
add
das
outs
in
(bad)
jbe
outs
(bad)
pop
fcmovnu
(bad)
pop
imul
(bad)
sbb
mov
pop
div
inc
test
outs
cmps
pop
fimul
pop
xchg
lods
fst
sbb
call
movs
mov
aas
mov
adc
xor
or
and
mov
pop
shr
mov
xchg
fcmovnu
es
divps
cmp
sub
ja
pop
stc
xor
push
jbe
daa
pop
push
sbb
aaa
push
cmp
push
xchg
ret
sbb
sbb
out
push
(bad)
cs
cmp
mov
xor
cmps
mov
psadbw
loopne
jmp
aas
pop
rcr
dec
aas
push
pop
mov
dec
lods
ror
das
jg
in
or
inc
push
cmp
sbb
mov
jnp
mov
das
add
fs
(bad)
jbe
aas
push
(bad)
push
nop
scas
mul
ds
iret
jne
pop
push
gs
pop
ds
fcmovu
jg
es
outs
mov
dec
dec
pop
push
(bad)
sahf
lock
cmps
mov
(bad)
ins
call
out
mov
lahf
cs
xchg
arpl
push
push
cmp
test
aaa
rol
sub
pop
(bad)
or
sti
dec
aas
xchg
lahf
mov
scas
cmc
outs
iret
push
das
push
jo
test
and
add
sub
out
mov
(bad)
not
lock
inc
jmp
call
outs
inc
sahf
daa
mov
dec
out
pop
bound
out
pop
mov
sbb
scas
push
fistp
sbb
jl
iret
neg
add
cmps
inc
pop
fwait
sub
aaa
pop
push
jmp
ja
cmp
nop
sbb
pop
ins
jmp
xor
push
loop
pop
push
pop
call
add
rol
in
sub
sbb
jmp
(bad)
daa
add
imul
addr16
cmc
(bad)
xor
dec
sub
mov
imul
or
imul
mov
test
and
pusha
add
mov
test
daa
push
sub
jg
inc
fs
montmul
cmps
pop
cmp
add
(bad)
cs
inc
fs
fs
xchg
mov
cmp
inc
mov
add
cmp
fs
pop
mov
xchg
dec
cmp
ja
(bad)
adc
push
push
aas
push
gs
xlat
data16
sbb
sub
push
fidivr
push
addr16
cmp
mov
ds
fist
gs
shl
adc
inc
jle
xchg
mov
lahf
(bad)
ds
pop
xor
cmps
push
ds
cs
aas
ja
pop
cmps
ss
addr16
in
push
jle
xchg
addr16
das
popa
xor
xchg
add
mov
push
push
push
mov
xchg
push
pop
mov
sar
aaa
jg
sahf
mov
(bad)
lahf
addr16
movs
add
push
cmps
ins
fistp
push
aaa
ficom
push
xchg
pop
cmps
pop
pop
pop
(bad)
ret
xchg
xchg
outs
(bad)
lahf
push
inc
fcom
sahf
mov
pop
out
mov
pop
movs
xchg
add
fbstp
popa
(bad)
inc
inc
cmp
outs
outs
(bad)
adc
mov
mov
shl
(bad)
pop
and
jns
dec
daa
ja
fistp
dec
pop
dec
imul
dec
(bad)
cmps
daa
movs
push
test
and
or
mov
xchg
outs
outs
xor
dec
push
dec
adc
ins
stos
movs
and
dec
nop
fnstenv
addr16
outs
xchg
adc
push
daa
xlat
stos
pop
arpl
xchg
addr16
rol
cmps
dec
daa
lods
pusha
inc
sub
dec
ja
rol
clc
lea
pop
sbb
pop
aas
scas
xchg
in
(bad)
pop
outs
jg
movs
out
fnsave
ucomiss
mov
test
ss
imul
movsx
push
mov
(bad)
push
push
push
inc
loopne
xor
fsubr
out
sbb
cmp
pop
xlat
movd
cmp
dec
push
(bad)
daa
push
jge
mov
daa
xchg
push
jecxz
shr
(bad)
aaa
mov
mov
sahf
ss
pop
cmps
push
aas
mov
push
das
jg
push
ds
aaa
mov
out
aas
xchg
das
daa
mov
mov
push
push
pop
pop
push
cmps
aaa
popa
fistp
cmovg
pop
jge
out
mov
pop
das
pop
ds
sub
movsx
push
add
das
xchg
fisttp
aas
addr16
xor
popa
mov
outs
sahf
ja
or
cmp
jbe
jb
lods
xchg
pop
addr16
pop
(bad)
jae
je
ja
push
pop
and
pop
push
js
data16
pop
or
nop
jle
fimul
pop
push
mul
out
mov
sbb
mov
in
inc
movs
inc
dec
bound
inc
fistp
daa
cmp
cmp
mov
xor
adc
mov
push
stos
movs
dec
das
jg
inc
mov
dec
xchg
les
pop
movq
pop
pusha
in
xchg
pop
es
dec
dec
adc
jne
out
dec
adc
push
sub
push
pop
push
mov
add
sub
add
ja
pop
adc
scas
es
lods
mov
ja
add
adc
aaa
pop
aaa
adc
call
fcmovnb
out
pop
movhps
xchg
ins
pop
lahf
mov
shr
mov
pop
pxor
mov
push
aas
add
ret
xor
addr16
jg
aaa
enter
xlat
jle
fnsave
jp
(bad)
pop
daa
outs
divps
adc
cs
popw
pop
(bad)
jbe
ret
into
add
cmp
cmp
and
cmp
push
aaa
cmp
push
fcom
push
xchg
add
ds
out
addr16
call
push
jg
out
add
inc
pop
pop
inc
fbstp
ror
inc
mov
data16
aas
pop
lods
cmp
(bad)
pop
pop
ins
pop
xlat
out
pop
cmps
push
push
push
jo
in
mov
inc
pop
push
inc
mov
mul
daa
mov
inc
out
mov
pop
das
pop
inc
out
mov
fsubr
das
cmps
push
adc
js
pop
jle
lock
cmp
pop
retf
outs
aaa
cmps
cs
mov
push
pop
ss
xchg
mov
aaa
loope
cmps
xchg
mov
je
push
emms
push
mov
ins
push
call
mov
cmp
pop
aas
jl
sti
xchg
mov
das
inc
cmp
and
outs
call
inc
idiv
out
adc
dec
push
inc
popa
and
jo
test
pusha
aaa
cmps
inc
xor
and
mov
lods
dec
aas
popa
sub
mov
maxps
pop
push
daa
jg
pop
mov
add
cmps
test
pop
xlat
cmp
pop
mul
daa
mov
sbb
pop
gs
daa
imul
mov
daa
cmps
or
(bad)
dec
adc
test
xchg
lahf
iret
ins
stos
add
xchg
aas
jnp
cmp
add
ror
pop
pop
adc
pop
xor
sbb
add
push
sbb
mov
xchg
add
fs
push
xlat
popa
dec
pop
es
outs
cmp
pop
xchg
sub
dec
aaa
jle
ds
jnp
stos
test
dec
jnp
cmps
pop
das
gs
pop
daa
rcl
inc
pushw
push
push
fistp
aaa
ds
or
dec
xlat
dec
fcmove
pop
pop
push
imul
aaa
pop
addr16
push
dec
sbb
add
mov
pop
pop
dec
push
addr16
or
imul
(bad)
pop
inc
das
push
inc
aaa
fst
push
sahf
pop
imul
(bad)
push
das
fidivr
inc
cwde
mov
push
outs
push
mov
pop
mov
pop
pusha
jae
nop
pop
es
das
mov
xor
not
xchg
jmp
or
push
outs
ret
pusha
fild
arpl
(bad)
pop
push
inc
sbb
add
push
pop
push
ficom
or
add
sbb
ret
aas
sbb
sar
xlat
mov
mov
adc
pop
xchg
pop
adc
iret
ds
daa
(bad)
punpckldq
mov
adc
sub
lahf
mov
das
pop
and
jne
fwait
jnp
addr16
out
mov
mov
out
outs
test
iret
sub
pusha
movs
or
add
pop
pop
xchg
fidivr
jo
push
movlps
pop
or
push
add
add
xchg
or
pop
pop
mov
inc
or
das
push
push
xor
ret
jnp
pop
pop
pop
mov
pop
punpckhbw
cmc
sub
jg
bts
pop
jg
movzx
push
jg
xchg
ret
ss
add
mov
popa
outs
cmp
outs
ss
aas
aad
jecxz
addr16
cmp
lods
sub
sar
getsec
push
in
in
test
fs
daa
mov
fbld
ds
scas
pop
add
and
pusha
in
xchg
(bad)
aas
pop
jl
fistp
ds
aas
das
imul
push
repz
in
sub
ds
daa
push
push
push
jbe
mov
jg
pop
ss
mov
setbe
jbe
push
mov
es
fstp
pop
outs
ss
mov
push
bsr
jbe
scas
(bad)
cs
jnp
fst
push
push
pop
mov
into
fst
daa
mov
push
sbb
not
(bad)
out
mov
aas
das
scas
daa
in
ins
ins
addr16
addr16
mov
jnp
out
das
push
jle
mov
jno
push
aas
inc
mov
push
dec
es
ss
outs
ins
xchg
jnp
dec
scas
xchg
call
scas
jle
push
cmp
sbb
cs
(bad)
cli
ret
addr16
inc
in
pop
xlat
pop
inc
pop
(bad)
mov
pop
daa
mov
sub
daa
lock
jg
pop
mov
sbb
mov
xchg
lea
pop
dec
aaa
adc
ja
jo
fnstsw
pop
push
call
out
sbb
pop
test
and
pop
dec
xchg
pop
or
stos
test
mov
fist
pop
or
aaa
push
call
and
iret
scas
data16
dec
pxor
push
xchg
fucomp
jg
out
ins
(bad)
mov
inc
scas
sub
pop
pop
dec
dec
daa
lea
int3
sbb
pop
aaa
pop
push
or
adc
pop
addr16
jge
mov
nop
ficom
jg
daa
mov
mov
aas
inc
push
add
aaa
scas
lea
arpl
pop
out
repz
fs
pop
push
clc
rol
push
xchg
cmps
cmp
push
lahf
xchg
aaa
mov
(bad)
dec
orpd
pop
mov
push
pop
mov
cmps
push
cmps
call
push
push
in
mov
aas
daa
pop
pop
lock
xlat
pop
pop
cmps
imul
imul
jns
mov
addr16
pop
pop
pop
outs
cmp
rcl
das
ja
ja
pop
data16
aas
pop
fucomp
outs
add
js
fucomi
pop
push
push
ins
aaa
fwait
shl
into
pop
das
das
add
push
pop
push
aaa
ins
sar
jg
out
es
cmps
inc
xchg
out
pusha
in
fidiv
pop
ja
pop
js
pop
mov
mov
fild
daa
ds
xchg
(bad)
out
adc
pop
imul
popa
jg
push
push
clc
ror
pop
das
js
add
not
push
vmread
pop
push
retf
fst
mov
dec
inc
jbe
jge
comiss
retf
sbb
pop
mov
push
mov
pop
pop
dec
and
or
push
mov
arpl
dec
push
sub
pop
das
dec
stos
in
fs
jg
pop
popa
pop
jb
ja
and
sub
loopne
sub
push
popa
mov
call
(bad)
push
pop
pusha
cmp
xchg
mov
sysret
push
pop
aaa
sbb
bound
push
iret
pop
pop
out
sub
pop
sbb
mov
stos
adc
mov
outs
aas
pusha
and
lahf
cwde
mov
(bad)
not
test
mov
dec
fadd
imul
add
sbb
stos
adc
dec
mov
sub
out
inc
adc
hlt
aam
arpl
cmp
fild
xchg
pop
push
or
jbe
pushf
ja
push
and
push
daa
aas
pop
pop
daa
lea
mov
pop
pcmpeqd
push
pusha
(bad)
pop
pop
pop
idiv
daa
pop
push
inc
jl
lock
aaa
test
(bad)
movhps
(bad)
mov
pop
push
scas
iret
add
mov
sub
aas
pop
pop
loopne
mov
inc
inc
test
mov
fisttp
push
push
(bad)
pop
das
imul
dec
loopne
mov
jg
aas
ins
pop
lock
mov
xchg
dec
pop
fidiv
pop
pop
test
sub
ja
pop
lock
sahf
adc
cmovle
pusha
pop
lahf
dec
data16
push
iret
ins
pop
mov
ss
push
out
push
mov
push
(bad)
aas
push
in
and
addr16
in
das
mov
rcr
cmp
push
sbb
pop
ficomp
push
aas
scas
pop
js
lock
ja
push
or
push
pop
or
or
xchg
push
jo
out
out
gs
sbb
(bad)
add
jg
jo
loopne
movzx
ds
arpl
shl
and
enter
fild
xchg
mov
out
dec
adc
in
pop
jg
pop
add
xchg
push
pusha
push
imul
jbe
daa
pop
and
cmp
xchg
xchg
sub
inc
sub
add
jg
add
scas
jg
lea
pop
add
pop
iret
sbb
pop
dec
pop
repnz
mov
pop
fidiv
das
pop
mov
pusha
add
inc
xchg
pop
scas
aaa
inc
mov
cmps
int3
pop
push
int
pop
mov
jmp
inc
and
pop
cs
ds
(bad)
movs
cmp
pop
fbstp
out
pop
push
pop
mov
pop
mov
jg
push
test
push
addr16
push
push
or
dec
push
movs
sbb
frstor
pop
pcmpeqd
fadd
mov
add
dec
test
daa
(bad)
pop
inc
out
inc
push
mov
pop
daa
out
fwait
mov
pop
inc
push
inc
pop
ins
jbe
ins
mov
outs
push
xchg
(bad)
cmp
movs
sar
addr16
inc
cmp
outs
pop
outs
pop
ins
daa
fisttp
or
aaa
dec
push
mov
mov
addps
fs
mov
xchg
push
ins
pop
pop
xchg
pop
into
add
cmp
ins
pop
cmps
push
push
outs
movs
cmp
ss
(bad)
xorps
pfrsqrt
push
(bad)
push
dec
mov
push
push
push
pop
pop
push
cmp
outs
es
out
add
je
test
(bad)
ror
dec
ja
cmp
pop
mov
push
daa
rcr
into
xor
ss
imul
jae
pop
outs
das
push
and
xor
sub
outs
pop
scas
imul
pop
test
pop
mov
adc
data16
out
push
ja
rcl
loope
cmp
fbld
stc
outs
xchg
sub
es
cmp
arpl
push
cmp
pop
mov
imul
sbb
mov
push
pop
lods
jo
inc
packuswb
push
stos
lods
inc
imul
pavgw
push
fs
mov
add
pop
arpl
pop
or
movs
test
les
pop
pusha
xchg
int3
dec
pop
pop
inc
enter
lahf
dec
dec
push
rol
popw
aas
pop
and
out
aaa
(bad)
mov
in
pop
pop
ins
fld
aaa
push
fbstp
pop
(bad)
fidiv
arpl
pop
lahf
pop
pop
sbb
rol
pop
sar
mov
fild
pop
ins
out
mov
in
ss
inc
pop
pop
cmovle
mov
fild
ins
pop
leave
rcl
das
ja
fist
and
push
outs
out
scas
jne
shr
cmova
pop
fadd
push
outs
aaa
pop
mov
pop
lock
ins
push
pop
pop
test
lods
cmp
maskmovq
test
sub
fbstp
aaa
jle
mov
xchg
pop
into
pop
push
inc
inc
cmp
and
divps
femms
push
inc
pop
mov
dec
push
xchg
neg
push
inc
or
test
pop
in
dec
enter
dec
scas
js
adc
mov
ficom
shl
div
pushw
addr16
push
idiv
sahf
(bad)
iret
sub
div
hlt
ss
das
scas
pop
test
mov
outs
(bad)
daa
mov
js
outs
maxps
fild
gs
mov
nop
data16
test
or
mov
push
lahf
push
out
inc
pusha
pop
sub
bswap
in
add
pop
dec
mov
pop
xlat
daa
add
pop
or
addr16
and
adc
xchg
daa
mov
idiv
add
xchg
pop
or
pop
sub
ror
mov
addr16
enter
ss
xor
add
fdivr
pop
cmp
mulps
push
pop
(bad)
sti
xor
aas
pop
pop
add
pop
neg
pop
es
push
inc
outs
inc
inc
inc
lea
out
pop
loopne
neg
iret
outs
cmovno
cs
fdivr
bswap
vmread
inc
pop
scas
outs
pop
stc
fadd
fs
fild
outs
pop
fadd
daa
iret
push
jbe
xchg
or
(bad)
inc
xchg
jnp
pop
push
daa
cmps
ins
mov
ss
(bad)
out
pop
outs
pop
mov
daa
pop
aas
dec
pop
ds
cdq
imul
fistp
pop
out
pop
pop
push
inc
sbb
inc
push
outs
ror
fst
ds
seta
das
pop
inc
(bad)
pop
push
push
idiv
pop
jle
inc
(bad)
inc
and
das
ja
sub
sbb
outs
sub
mov
(bad)
out
aas
aas
inc
sbb
jo
outs
pop
jbe
lods
in
push
cs
push
mov
or
loopne
sub
lahf
clc
and
jg
ds
sbb
idiv
hlt
pop
mov
push
push
pop
mov
(bad)
cmps
pop
or
dec
inc
xchg
add
or
add
push
int3
mov
and
clc
out
mov
lods
ja
movq
retf
iret
aas
pop
pop
jb
jecxz
aaa
outs
adc
and
push
ds
or
dec
cmps
lock
inc
pop
fild
xlat
pop
rol
pusha
outs
mov
mov
das
dec
imul
xchg
and
xchg
and
push
pop
(bad)
pop
fist
inc
sysret
xchg
lods
inc
sbb
out
mov
(bad)
iret
pop
lahf
mov
cmp
mov
push
xchg
(bad)
sub
sub
sub
pop
pop
movs
sbb
cmps
push
out
pop
outs
cld
(bad)
mov
pop
aas
pop
aaa
or
shl
cmp
pop
fucomip
cmp
add
sub
inc
outs
inc
cmps
sar
pop
push
pop
das
mov
jo
xchg
dec
push
pop
push
xor
sbb
das
pusha
mov
cmps
outs
jo
aaa
jmp
pop
ja
jno
movs
sub
pop
pop
aas
ins
mov
add
push
inc
ja
(bad)
mov
ja
daa
pop
push
mov
mov
xlat
pop
ss
out
pop
mov
jno
pop
pop
ficom
inc
cs
adc
out
pop
pop
daa
pop
inc
aaa
ret
call
jno
(bad)
cmp
aas
out
push
out
xchg
xlat
push
outs
push
outs
out
iret
outs
dec
lock
jg
pop
das
pop
mov
mov
jnp
das
pop
pop
pop
ins
xchg
mov
mov
popf
jo
mov
pop
inc
pop
pop
pop
or
pop
ins
aaa
jbe
cmp
addr16
push
jp
loope
pop
jbe
jle
mov
jmp
xlat
test
dec
inc
div
out
inc
push
push
mov
push
pop
adc
pop
push
inc
mov
inc
scas
sete
xor
fistp
pusha
or
mov
inc
and
xor
mov
sbb
inc
out
popa
xor
add
pop
outs
mov
not
add
jp
pop
shl
das
push
aas
test
mov
and
mov
test
(bad)
popa
mov
xchg
push
aaa
aaa
add
aas
xor
stos
lods
pop
outs
clc
shl
neg
xchg
pop
xchg
es
xchg
daa
test
das
sysret
push
pop
jbe
(bad)
addr16
jmp
dec
add
dec
push
adc
pop
lds
or
(bad)
fiadd
daa
cmps
mov
push
aas
pop
or
add
xchg
mov
test
cmp
ss
mov
add
iret
(bad)
jne
add
pop
fucomi
ins
cmp
pop
daa
(bad)
pop
ins
das
mov
out
pop
das
pop
lods
(bad)
dec
mov
(bad)
or
pop
(bad)
ss
push
repnz
pop
push
outs
pop
jo
pop
loopne
ds
pop
fcomi
fsubrp
inc
aaa
jno
inc
pusha
dec
ja
daa
jbe
in
jbe
pop
inc
scas
pop
pop
xlat
mov
fnstenv
xchg
outs
clts
push
jnp
fdiv
jno
inc
mov
out
popa
in
mov
popa
inc
pop
cs
movq
addr16
scas
pop
(bad)
and
das
maxps
push
push
xchg
jge
das
push
jno
dec
pop
aas
lahf
out
add
frstor
outs
outs
pop
inc
(bad)
pop
aaa
clc
fidiv
mov
inc
push
jb
aas
add
dec
pop
mul
js
inc
jg
aaa
sbb
ret
in
outs
xchg
pop
jo
dec
pop
fisubr
pop
push
xchg
add
mov
sbb
cmp
inc
loopne
pop
pop
aaa
pop
imul
inc
push
add
ins
pmaxsw
lods
ja
pop
push
inc
push
fisubr
fnstsw
iret
push
pop
inc
push
ja
js
dec
test
pop
push
push
test
mov
test
ja
xchg
lock
addr16
xlat
or
scas
lahf
pop
inc
call
push
sbb
outs
sbb
out
aas
inc
test
pop
pop
sub
sub
pop
cpuid
pop
sub
add
bound
pop
mov
jnp
push
adc
sysret
inc
inc
mov
loop
jno
(bad)
mov
mov
dec
enter
daa
loop
outs
bound
or
mov
pop
pop
pop
inc
add
add
add
sbb
and
sbb
mov
enter
ja
push
pop
push
pop
pop
pop
cdq
std
ds
pop
daa
imul
lds
enter
dec
add
pop
outs
pop
aaa
pop
(bad)
dec
movs
pop
out
(bad)
bsr
sar
dec
nop
pop
test
aas
das
pop
daa
rol
pop
pop
jno
jmp
pop
in
push
jecxz
inc
jb
xlat
push
pop
shl
ja
daa
pop
jbe
fsubrp
fdivrp
outs
push
pop
daa
pop
aaa
pop
in
jnp
pop
pop
pop
out
inc
inc
aas
retf
jnp
mov
push
inc
or
out
ins
(bad)
pop
es
dec
aas
call
ss
pop
cmp
adc
mov
loopne
aaa
scas
aaa
out
imul
rcr
outs
psllq
pop
mov
pop
(bad)
push
xchg
sbb
mov
xchg
ds
push
xchg
fwait
cmps
jo
jno
into
out
outs
pop
mov
jge
outs
push
addr16
jae
add
inc
aas
pop
mov
das
cmovg
jmp
pop
mov
(bad)
out
cmps
mov
xchg
scas
jg
loope
out
out
(bad)
pop
jg
int3
lods
xchg
inc
cs
das
imul
sbb
emms
inc
(bad)
or
adc
pop
out
aas
adc
shl
push
pop
mov
or
dec
addr16
aas
pcmpgtd
inc
cmp
push
push
lock
mov
das
mov
sub
gs
pop
or
dec
mov
daa
neg
pop
es
gs
fcmovu
(bad)
das
dec
aaa
bound
push
out
sub
adc
ja
adc
dec
fistp
out
les
lods
lods
pop
cmova
scas
lahf
or
lea
pop
ja
ins
pop
inc
xchg
emms
femms
or
imul
pop
fimul
lods
push
pop
push
push
pop
push
pop
pop
ja
and
(bad)
mov
add
shl
pop
push
cs
ins
bswap
jle
mov
pop
push
ins
pop
call
lock
mov
out
(bad)
pop
jo
js
iret
inc
daa
div
sbb
cs
das
dec
mov
jno
pop
das
ins
in
movs
pop
aas
pop
inc
dec
pop
pop
push
mov
jb
(bad)
mov
pop
jae
pcmpeqb
pop
jo
fdiv
aaa
bound
pop
push
push
div
pop
pop
inc
inc
(bad)
(bad)
jg
mov
dec
push
dec
xchg
push
mov
push
pop
jbe
push
into
mov
je
pop
push
out
dec
push
xchg
pop
(bad)
push
fcom
pop
inc
xlat
inc
push
cmps
mov
pop
pop
push
dec
xor
cmp
dec
pop
fild
jle
dec
add
pop
pop
shl
loopne
push
pop
aas
bsf
sbb
push
cmps
out
or
push
subps
ss
push
sbb
mov
or
pop
es
ins
push
fistp
loope
push
xchg
out
inc
cmp
and
or
pop
pop
cmp
mov
xchg
push
jp
test
(bad)
scas
jmp
pop
into
jle
lahf
cmps
and
outs
dec
hlt
int3
pop
(bad)
(bad)
neg
out
mov
aas
das
(bad)
add
sbb
jecxz
push
ds
push
add
jge
iret
cli
jg
push
and
scas
pop
retf
ins
jl
xchg
and
daa
sub
dec
inc
cmp
ret
mov
or
gs
inc
add
dec
xor
pop
popa
aaa
mov
fld
movhps
pop
add
lea
add
call
xor
pop
addr16
pop
jo
dec
sbb
jg
arpl
jne
out
movs
push
lods
sub
test
pop
outs
ds
mov
cwde
scas
dec
xchg
push
add
lods
dec
pop
imul
push
push
data16
sahf
jp
imul
sbb
pop
ss
int3
or
pop
inc
inc
pop
icebp
sbb
mov
popa
add
add
add
out
fild
scas
das
bound
aas
pusha
mov
aas
pop
jae
sub
popa
pop
shl
je
es
arpl
xchg
mov
push
arpl
fs
pop
pop
pusha
mov
daa
jbe
fidiv
xchg
das
bound
jne
pop
fistp
push
dec
pop
pop
inc
inc
retf
ds
daa
je
dec
inc
pop
out
gs
lods
bound
jne
ds
pop
mov
inc
push
cs
sbb
popa
dec
push
dec
lahf
xor
sysret
cmps
mov
fild
pop
dec
ret
jbe
inc
je
addr16
popa
ret
inc
xchg
add
push
dec
xor
inc
pop
je
js
cmp
xchg
mul
jno
dec
outs
daa
in
sbb
mov
dec
ja
mov
imul
and
xlat
dec
loopne
jae
pop
mov
mov
jnp
daa
pop
push
adc
cmc
mov
int3
mov
outs
das
push
jnp
pop
mov
aas
iret
pop
add
lods
popf
es
xlat
lock
sub
pop
cmp
pop
cvtdq2ps
jl
outs
inc
pop
pop
in
in
add
push
pop
push
mov
(bad)
daa
xchg
push
sub
repnz
movs
pop
xlat
(bad)
mov
add
pop
cmp
outs
ret
mov
xlat
push
into
lock
mov
pop
and
pop
popa
inc
lods
mov
stos
and
add
adc
pop
rol
adc
addr16
(bad)
mov
or
adc
retf
cmps
pop
mov
out
ins
paddb
ror
popa
popa
pop
ins
lea
add
out
pop
gs
outs
test
inc
pop
sbb
mov
xchg
add
cwde
xchg
jg
or
(bad)
jg
xor
popa
pop
pop
inc
add
ins
pop
jb
xor
cs
into
jne
jne
push
mov
jg
loopne
mov
push
pop
pop
jbe
lock
enter
pop
dec
das
jbe
pop
sub
ds
push
cmp
mov
xchg
dec
add
aas
dec
test
push
jbe
inc
bound
push
lahf
addr16
mov
jns
outs
inc
bound
retf
sbb
fmul
push
aas
pop
jbe
out
(bad)
fild
ja
pop
(bad)
jae
pop
movs
(bad)
pusha
in
adc
loopne
js
dec
pop
addr16
retf
out
jg
addr16
or
fnstcw
das
xchg
jbe
ss
mov
daa
ss
pop
jnp
pop
lods
pop
jg
pop
add
jns
das
pop
add
inc
jle
mov
push
push
push
push
jno
or
xlat
pop
pop
pop
pop
ds
dec
ins
mov
retf
mov
dec
jle
ja
ins
pop
jbe
addps
cmp
mov
mov
push
(bad)
aaa
push
push
and
and
pop
push
das
inc
adc
push
mov
call
out
xor
inc
pop
lfs
pop
mov
addps
dec
jmp
adc
das
cmps
mov
popa
pop
pusha
outs
mov
pop
daa
push
inc
test
emms
lahf
pop
inc
adc
push
xlat
jno
mov
dec
aaa
xor
add
sbb
aaa
cs
pop
dec
outs
adc
shr
(bad)
jnp
sub
fist
daa
imul
sahf
jb
add
scas
xchg
ds
pop
jo
ja
call
out
cwde
sbb
daa
out
jne
js
pop
(bad)
out
jne
push
(bad)
fwait
add
aas
scas
cs
fidiv
add
dec
ss
push
call
dec
pop
js
aaa
dec
sti
sti
pop
dec
aaa
ja
dec
push
bound
out
mov
ja
inc
ja
gs
pop
push
pop
fld
dec
push
out
retw
test
xchg
imul
push
cmps
dec
(bad)
daa
jae
popa
fstp
aas
out
push
pushf
(bad)
pop
mov
mov
lahf
ucomiss
cmp
inc
outs
(bad)
popa
or
and
fwait
pop
repnz
pop
inc
cs
outs
mov
inc
aaa
arpl
fbstp
mov
ja
pop
pop
push
push
test
or
push
aaa
jae
mov
ss
fsubp
inc
mov
jg
mov
(bad)
or
(bad)
pop
cs
dec
mov
jb
aaa
add
inc
(bad)
push
outs
pushf
mov
pop
test
ins
pop
das
push
fidivr
mov
sbb
fisttp
aaa
outs
out
add
inc
out
nop
pop
daa
pop
out
cmp
aas
pop
out
ins
cmp
pop
das
jp
jp
cmps
outs
out
pop
inc
sbb
rcr
pop
sahf
aas
push
(bad)
jne
xor
xor
aas
ja
mov
pop
daa
(bad)
rol
xchg
fistp
mov
ja
cmp
xlat
das
pop
pop
js
lods
out
cmps
xchg
je
add
push
xchg
sbb
fmul
push
out
dec
imul
ja
mov
xchg
aaa
inc
repnz
jmp
cmp
xchg
sub
rol
dec
pop
xchg
adc
test
or
dec
ret
out
ss
(bad)
in
pop
daa
jnp
adc
inc
outs
arpl
xchg
xchg
push
addr16
jo
(bad)
fisub
ja
push
fadd
inc
lods
(bad)
sbb
aas
div
shl
pop
push
add
mov
movd
daa
js
xchg
movs
mov
fdivp
adc
push
lock
repnz
push
push
and
js
dec
push
imul
dec
ud1
mov
es
jns
dec
adc
out
dec
js
(bad)
fdiv
sahf
iretw
daa
nop
xchg
outs
pop
fs
inc
push
push
out
out
ja
push
pop
scas
shr
addr16
arpl
push
out
or
clc
pop
jns
das
daa
loope
sub
pop
inc
jge
scas
sbb
push
outs
dec
pop
mov
out
xlat
ja
fistp
inc
push
mov
pop
mov
pop
(bad)
dec
jae
(bad)
and
outs
jne
out
out
pop
push
push
mov
mov
mov
retf
outs
scas
pop
ret
or
popa
jb
ins
in
inc
xlat
pop
jb
aaa
pop
outs
sbb
mov
push
pop
ss
out
dec
pop
push
sub
cmp
jg
iret
inc
iret
pop
test
rol
(bad)
pop
minps
scas
addr16
ficom
call
xor
rol
daa
add
comiss
cmc
inc
in
xlat
pop
sub
pop
pop
rcl
ins
add
xchg
push
(bad)
push
add
js
lahf
xchg
in
call
sbb
cmp
pop
addr16
ror
cmp
inc
push
pop
jmp
or
aaa
mov
add
adc
pop
adc
pop
lahf
xchg
pop
add
sbb
dec
xchg
scas
int3
mov
jae
pcmpeqb
fmul
jg
aaa
ds
jb
cs
aaa
shr
add
jnp
lahf
pop
push
aas
pop
xadd
xchg
sbb
cs
out
dec
pusha
pop
push
nop
pop
lahf
ja
inc
fcomp
push
xchg
xchg
push
push
addr16
daa
jns
jbe
push
imul
push
loopne
push
aaa
push
scas
xchg
sbb
addr16
cmp
adc
xchg
ja
mov
inc
jbe
fs
out
pop
push
jle
dec
pop
mov
mov
dec
mov
rol
outs
pop
(bad)
mov
jle
mov
jo
xchg
push
push
push
pop
push
mov
arpl
addr16
dec
mov
sysret
push
jg
iret
ror
scas
lahf
pop
loopne
repnz
cmovbe
lahf
dec
push
push
jbe
bound
cmp
sbb
popa
aaa
loopne
iret
lea
pop
cmps
loopne
enter
(bad)
push
rol
xchg
sbb
daa
ds
hlt
push
cmps
(bad)
push
rol
lock
data16
test
sub
sub
fcom
mov
add
das
inc
repz
mov
inc
fadd
fstp
ss
cmp
addr16
mov
daa
outs
ror
das
push
imul
fwait
pop
and
pop
daa
aaa
loope
adc
pop
ja
fcom
sub
cmps
shr
popa
pop
inc
push
add
cs
pop
pop
mov
sbb
pop
mov
outs
and
gs
(bad)
ds
movs
sbb
sbb
xchg
addr16
sbb
push
pop
ror
sbb
dec
sbb
xchg
pop
bound
dec
mov
aaa
dec
lds
les
jg
loopne
push
fild
movs
popa
mov
add
inc
push
lds
jb
pop
sub
pop
daa
mov
or
sub
ud0
jns
add
outs
jns
mov
add
fstp
xorps
add
jns
aas
imul
aas
ss
pop
fidiv
fnsave
push
jp
ucomiss
ins
mov
pop
imul
add
dec
ss
aaa
into
mov
iret
pop
aas
push
into
pop
addr16
jp
pmaxsw
(bad)
mov
jns
fimul
ds
add
das
outs
into
(bad)
fdivrp
(bad)
ja
ss
xchg
mov
outs
out
push
je
jnp
pop
jnp
cmps
add
fidivr
pop
pop
data16
(bad)
loope
(bad)
daa
pop
pop
push
lods
in
mov
inc
pop
adc
fsubrp
(bad)
fbld
movd
sbb
sub
fs
jbe
inc
push
push
cmp
imul
push
pop
push
dec
aaa
adc
ja
icebp
(bad)
or
jg
mov
pop
js
pop
push
arpl
mov
jp
jne
inc
daa
popf
shl
scas
pop
cmp
lods
(bad)
(bad)
loope
mov
mov
pop
inc
lea
data16
dec
es
popf
jne
daa
dec
pop
ds
and
push
das
test
push
or
div
es
pop
inc
pop
and
daa
sar
push
fbstp
jmp
inc
jbe
ins
and
mov
(bad)
imul
inc
xchg
pop
push
pop
ins
outs
bound
sub
pop
inc
arpl
aaa
mov
(bad)
outs
mov
and
jecxz
dec
mov
fiadd
ja
inc
cmps
cmps
push
punpcklwd
and
pop
les
add
ror
sub
mov
xlat
add
push
adc
mov
adc
(bad)
xor
aas
daa
mov
dec
data16
aam
das
fisttp
sub
xstore-rng
cmps
pop
add
jp
daa
push
dec
cmp
dec
imul
loopne
loopne
addr16
pop
add
pop
pop
aaa
cmp
jp
inc
mov
out
jne
xchg
dec
daa
ja
push
jl
pop
out
pop
loopne
imul
inc
out
cmp
inc
pop
das
sar
daa
push
outs
mov
jl
ds
iret
cmp
jl
fild
and
jnp
cmps
dec
mov
mov
cmp
push
pop
idiv
push
fsub
fmul
ss
mov
addr16
push
push
pushw
call
fcomi
cs
pop
ja
push
push
outs
pop
loopne
add
addr16
cmp
jge
push
push
pop
js
retf
outs
xor
aaa
push
cmp
fbstp
jp
data16
pop
pop
jns
jnp
add
lds
ja
ds
mov
hlt
rcr
loope
call
psubw
add
dec
or
jge
div
jbe
mov
inc
dec
ds
jo
cs
pop
clc
shr
pop
popa
inc
cmps
pop
js
pop
out
mov
and
pop
or
rol
pop
cmp
mov
fs
js
add
and
(bad)
pop
setle
outs
push
outs
ins
pop
pop
mov
add
mov
cmp
push
cmps
mov
cmp
(bad)
out
lea
out
pop
(bad)
sub
imul
push
pop
out
sbb
daa
(bad)
mov
out
out
adc
xchg
push
daa
xchg
pop
sbb
push
movs
aas
pop
outs
lods
add
out
ja
mov
fbld
nop
pop
outs
es
add
fistp
jno
lods
mov
ret
add
xchg
and
push
inc
out
adc
mov
dec
jne
cmps
jp
sub
(bad)
cmps
aam
ja
inc
dec
dec
pop
loopne
push
enter
pop
pop
push
dec
pop
pop
pop
jp
xchg
fdivr
push
inc
fadd
pop
jl
push
xchg
pop
loopne
adc
xchg
jbe
out
jne
pop
pop
inc
ins
pop
inc
daa
pop
mov
fstp
inc
aaa
jge
jge
pop
ja
pop
jbe
das
pop
mov
mov
ret
pop
push
(bad)
daa
jle
push
addr16
jmp
jl
jne
push
mov
push
jg
ins
fmul
iret
(bad)
push
fidivr
pop
outs
(bad)
pop
jnp
outs
cmp
mov
out
mov
push
jo
push
cmps
aaa
mov
push
fnsave
(bad)
(bad)
aaa
push
push
ss
xor
jp
dec
data16
js
int3
add
pop
aaa
iret
data16
cmp
sar
jp
aaa
frstor
(bad)
mov
pop
mov
(bad)
dec
pmaddwd
lock
dec
pop
xchg
pop
enter
inc
outs
push
pop
jns
mov
push
outs
jg
call
push
outs
fbstp
aas
pop
getsec
ja
jae
jnp
mov
aaa
dec
push
je
adc
mov
jbe
xchg
lock
(bad)
dec
jno
jne
(bad)
dec
jle
jl
push
mov
lds
or
xlat
loopne
lock
outs
ja
(bad)
sbb
inc
fstp
daa
pop
imul
setg
sysret
jp
(bad)
imul
lock
mov
add
les
cmp
dec
pop
pop
arpl
(bad)
pop
enter
inc
mov
push
pop
xor
cmp
(bad)
cmp
test
inc
bound
pop
inc
pop
sbb
or
push
aaa
out
dec
xchg
(bad)
ja
add
(bad)
mov
ficomp
xor
(bad)
sti
xchg
nop
imul
push
push
shr
pop
push
(bad)
loopne
xchg
jge
outs
jl
aaa
js
mov
divps
dec
outs
shl
fimul
push
fistp
cmp
ins
push
cmps
das
inc
fstp
out
outs
ins
pop
push
pop
pop
mov
cmp
jnp
jo
aas
jl
outs
idiv
push
and
push
jg
aas
imul
push
imul
push
push
dec
push
mov
fdecstp
xchg
sub
cmps
pop
jge
daa
jle
jnp
dec
repz
sahf
jg
push
push
mov
mov
(bad)
out
cs
pop
fnstsw
pop
fsubr
data16
cmps
pop
adc
pop
ss
imul
sbb
fadd
out
iret
jns
push
pop
adc
test
aaa
push
outs
pop
cmp
addr16
shl
nop
jae
ins
fcom
pop
push
add
fisttp
jg
fwait
cmc
add
pop
adc
hlt
daa
fs
pop
dec
and
add
cmp
out
push
sar
iret
bound
pop
mov
adc
data16
push
je
in
data16
pop
es
int
or
jl
cmp
into
das
xchg
pop
xchg
pop
pop
dec
jg
icebp
inc
push
pop
jo
jg
pop
aam
cmp
jg
shl
jno
ror
aas
(bad)
imul
inc
in
sar
and
rcr
(bad)
aas
pop
fnsave
(bad)
ja
div
arpl
mov
fild
movs
outs
pop
inc
mov
inc
add
(bad)
push
pop
pusha
sbb
cmp
mov
arpl
cmp
pop
add
sbb
push
or
jne
psrad
aaa
push
xor
adc
data16
or
lahf
push
ins
addr16
maskmovq
mov
pop
jnp
pop
jns
pop
in
test
dec
dec
sub
push
ins
sub
and
push
pop
outs
outs
cmp
sysret
jge
mov
xor
test
into
push
outs
aas
xlat
ins
out
mov
or
dec
idiv
pop
cmp
mov
inc
push
popf
add
push
pop
xor
into
popf
sahf
es
addr16
pop
dec
sub
retf
pop
scas
xchg
push
ja
popa
out
bswap
not
push
lahf
out
jae
xor
jle
inc
push
sub
loopne
jne
push
pop
push
ss
sbb
xchg
push
ja
(bad)
out
push
push
pop
jnp
fnstcw
imul
jg
out
push
jnp
add
push
push
ficomp
jo
fiadd
into
dec
mov
mov
jg
pop
push
mov
lock
cmps
(bad)
in
or
sbb
jg
pop
inc
js
ror
pop
pop
mov
and
push
aaa
push
dec
pop
scas
add
fild
sar
mov
cmp
mov
ds
fwait
push
ficom
jne
pop
repnz
mov
ss
bound
push
or
jno
scas
sbb
pop
push
push
sahf
sbb
sbb
pop
push
jo
and
pop
outs
pop
outs
mov
or
ins
ins
pop
inc
pop
(bad)
test
movd
dec
and
fadd
inc
(bad)
sbb
jecxz
imul
test
addr16
xchg
cmp
fisttp
mov
xchg
arpl
outs
sub
outs
out
ins
push
or
push
sub
call
aad
in
mul
pop
aaa
das
sbb
inc
add
nop
nop
mov
das
add
bound
iret
pop
lahf
fnstsw
dec
daa
js
imul
push
(bad)
fidivr
retf
push
stc
mov
pop
imul
xlat
push
iret
or
shl
mov
ja
ja
ja
out
addr16
mov
pop
das
aas
call
outs
sahf
ins
outs
mov
test
mov
cmp
pop
fadd
out
mov
push
mov
out
cmp
push
ds
push
fistp
xchg
das
(bad)
shl
pop
push
pop
add
pop
ficom
jno
enter
pop
push
pop
fsubr
pop
outs
outs
(bad)
outs
xchg
(bad)
aaa
fild
ss
outs
pop
push
imul
ins
out
sbb
movhps
inc
clc
rcl
imul
push
fstp
mov
push
pop
pop
aaa
aas
push
and
pop
jle
sbb
jne
push
jle
jnp
sar
jns
push
loopne
pusha
repz
cmovg
mov
pop
jp
es
adc
jae
ss
(bad)
das
in
pop
cdq
cmc
mov
lahf
scas
pop
dec
scas
jne
push
fistp
shr
pop
push
nop
xchg
push
daa
lea
pop
das
imul
push
mov
add
iret
shl
out
pop
push
clc
(bad)
ds
gs
(bad)
retf
scas
lea
push
fnstcw
xor
outs
loop
mov
js
push
mov
ds
fadd
push
rol
outs
pop
cli
mov
cmps
pshufw
add
movsx
lock
dec
xor
pop
ins
push
inc
test
mov
add
(bad)
jno
lahf
sbb
out
aaa
dec
jecxz
xchg
pop
data16
push
adc
mov
mov
ja
test
addr16
adc
bound
dec
cmp
and
arpl
inc
lock
inc
imul
call
pop
pop
lock
fild
out
imul
lea
jl
pop
pop
rol
pop
jge
pop
into
fcomp
outs
movhps
sbb
jg
jnp
in
jbe
push
pop
jo
cs
inc
pop
add
daa
sub
xor
fst
xchg
pop
push
nop
cmp
out
pop
daa
fbstp
pop
pop
outs
mov
test
outs
inc
js
mov
dec
outs
push
and
lahf
cmp
outs
push
push
fdiv
dec
lahf
sub
sahf
pop
inc
xchg
maxps
sti
sar
jg
das
repz
sahf
mov
js
xchg
mov
ss
jbe
daa
mov
push
xchg
cmp
ja
xchg
cmp
pop
jb
test
out
push
dec
jge
outs
loopne
movs
test
mov
es
enter
push
dec
ss
pop
js
pop
popw
inc
dec
mov
rol
push
pop
data16
nop
or
inc
push
mov
inc
aas
lock
pop
push
push
fs
paddsb
addr16
fisttp
push
jne
pop
ss
loop
and
sub
xor
js
push
cmpxchg
add
xlat
push
(bad)
ss
and
mov
xchg
lods
push
adc
pop
xchg
inc
pusha
mov
xchg
leave
test
push
xlat
push
push
mov
push
xchg
jg
xor
lods
mov
pop
pop
dec
and
pop
xchg
outs
jg
inc
movs
inc
out
into
ds
sbb
adc
stos
pop
inc
sbb
pusha
push
mov
mov
dec
pop
jmp
ret
add
pop
mov
dec
add
push
mov
or
ds
xlat
add
out
push
test
inc
mov
ins
fisttp
pop
addr16
adc
aam
out
out
dec
ja
ja
pop
inc
push
jno
lock
and
maxps
pop
pusha
add
popf
not
push
jno
pop
xor
mov
add
ucomiss
repz
adc
fnstcw
mov
scas
mov
jno
out
jg
es
jnp
fisttp
mov
push
xchg
push
xchg
js
dec
lahf
push
pop
push
xor
ss
test
push
out
ds
push
(bad)
xor
aaa
into
dec
cmp
xchg
es
pop
ins
ja
sbb
pop
dec
xchg
or
pop
fcomp
jg
outs
ja
shl
push
jg
sahf
aas
inc
or
daa
(bad)
cs
and
jecxz
push
outs
call
int
jle
push
push
jge
pop
ins
fcmovnu
ss
daa
ds
pop
pop
inc
mov
out
push
pop
jp
push
je
push
jl
jnp
das
ins
sub
int
ins
scas
ins
push
into
jp
and
push
pop
pop
ficomp
int
cmps
xchg
xchg
pop
push
call
cvttps2pi
out
ds
sbb
cmp
jns
dec
lahf
pcmpgtw
addr16
aas
aas
dec
pushf
repnz
mov
jo
pop
pop
jmp
sub
xchg
gs
xor
inc
cs
push
jno
js
push
add
das
jmp
jmp
dec
cmps
xchg
outs
int3
ja
jmp
(bad)
cli
(bad)
call
pop
pop
outs
push
dec
mov
loopne
dec
mov
(bad)
mov
arpl
pop
(bad)
jg
cmps
jbe
jg
dec
ret
not
push
mov
outs
sbb
bound
push
sbb
pop
or
pop
xor
idiv
scas
loop
loop
(bad)
test
les
out
push
push
rol
xlat
(bad)
jnp
fidivr
jl
jo
jno
movs
pop
mov
das
pop
push
or
mov
cmp
out
es
pop
xor
jo
push
ss
mov
jp
aaa
pop
push
mov
xlat
cmp
outs
fadd
fimul
daa
push
pop
pop
daa
fmul
outs
sbb
pop
sbb
inc
jae
inc
inc
jno
addr16
test
not
es
fbstp
pop
sti
inc
(bad)
int
adc
imul
out
je
aaa
test
inc
jo
jmp
outs
sti
not
cs
push
pop
pop
jg
ror
scas
xlat
mov
inc
pcmpgtb
fidiv
ja
pop
dec
mov
shr
ds
push
scas
jo
out
fstp
xchg
push
dec
popw
scas
fsubp
fmulp
lahf
inc
push
test
mov
(bad)
pop
(bad)
jbe
iret
and
pop
pop
and
lahf
xchg
into
dec
push
push
push
pop
fbstp
xchg
pop
xchg
ins
push
fld
xchg
push
push
andnps
fiadd
add
pop
dec
mov
popf
mov
push
xchg
lahf
in
jns
mov
hlt
rol
push
inc
ja
lock
mov
and
cmp
pop
push
movd
(bad)
cmp
retf
fcom
mov
aaa
pop
addr16
retf
mov
inc
pop
ja
mov
xor
jmp
xchg
cmp
fdivr
sub
nop
neg
bound
shl
aaa
ss
cmp
push
push
in
xor
push
pusha
xchg
mov
xor
pop
idiv
das
mov
pop
(bad)
es
cli
ror
push
pop
(bad)
movs
in
pop
outs
outs
imul
inc
push
add
loope
mov
cmps
rcr
or
sbb
out
push
pop
fbld
inc
jo
jl
add
data16
jmp
pop
outs
dec
and
push
sbb
cmp
(bad)
pop
aaa
push
addr16
push
sbb
adc
xchg
pop
jg
fcomp
lods
push
mov
dec
xor
sbb
pop
rcl
in
fidiv
push
jle
jo
outs
or
addr16
movs
inc
test
jge
push
pop
iret
push
iret
pop
push
out
pop
pop
jbe
je
js
add
je
jle
fmul
ins
push
idiv
das
fstp
add
push
ror
mov
pop
es
jne
pusha
in
lods
xlat
pop
dec
scas
outs
out
mov
out
pop
xorps
mov
addr16
out
in
fidiv
test
movzx
fstp
pop
xchg
mov
mov
push
mov
shr
jb
test
test
das
sub
sub
pop
lahf
fst
pop
cmps
test
fisttp
out
pop
mov
pop
xchg
das
pop
jno
pop
fbld
add
pop
pop
push
mov
fstp
inc
push
push
mov
outs
inc
adc
push
dec
addr16
cmp
ins
imul
sahf
ins
outs
lahf
jbe
out
mov
das
pop
mov
scas
jge
push
out
pop
pop
repnz
pop
jge
pop
push
fimul
sbb
dec
outs
cmps
jl
inc
out
lods
and
loopne
addr16
add
lock
outs
push
aaa
xchg
fild
addr16
push
cmps
push
dec
(bad)
(bad)
mov
data16
pop
retf
jns
lea
add
(bad)
jo
mov
cs
xchg
pop
cmp
mov
push
dec
push
(bad)
gs
pop
push
js
pop
xchg
(bad)
or
sbb
cmp
cmps
bound
jb
rol
lock
or
jbe
mov
test
cmp
dec
xor
sahf
outs
and
xor
call
add
push
popf
(bad)
das
pop
rol
xor
emms
test
mov
mov
sub
or
aas
push
dec
hlt
shl
sti
inc
jmp
ror
push
and
out
mov
pop
and
mov
push
repnz
enter
jg
pusha
add
mov
rol
jge
imul
push
push
mov
sub
jb
daa
pop
and
adc
mul
nop
sahf
inc
pop
loopne
fld
aaa
push
nop
push
pop
pop
aaa
es
loopne
(bad)
pop
scas
daa
push
mov
in
xchg
jbe
dec
test
add
dec
inc
push
xchg
data16
xchg
pop
xchg
xchg
or
sti
out
xchg
ja
(bad)
(bad)
cmp
data16
xchg
mov
mov
test
test
bswap
fistp
addr16
mov
fld
mov
ja
fisubr
pop
pop
inc
pop
push
es
out
sub
je
pop
pop
lock
test
pop
pop
xor
add
xchg
jae
mov
cmps
pop
cmps
push
scas
xor
ss
pop
pop
jge
mov
pop
push
push
jo
test
test
pop
daa
out
xchg
out
mov
sbb
outs
mov
add
fsub
push
push
lahf
inc
push
pop
cmp
adc
inc
cmps
es
int3
push
fs
cmps
push
daa
pop
push
adc
ror
iret
dec
and
push
div
mov
push
push
adc
retf
push
push
push
add
scas
push
cs
cdq
hlt
push
mov
adc
inc
add
push
adc
adc
imul
xchg
lahf
cmp
lea
mov
nop
outs
or
icebp
mov
and
arpl
outs
arpl
push
imul
bound
jnp
inc
emms
dec
and
xchg
pop
mov
fdiv
icebp
or
pop
xor
pop
jg
xchg
call
lea
mov
push
pop
adc
cmovl
bound
addr16
lea
push
inc
add
clc
xlat
cmp
dec
adc
mov
sbb
outs
pushf
mov
xchg
aam
mov
push
daa
pop
arpl
(bad)
(bad)
dec
sbb
les
xlat
(bad)
scas
jbe
adc
cmp
ins
lahf
fcmovb
daa
push
daa
daa
outs
sbb
jbe
data16
xor
(bad)
cs
in
or
pshufw
mov
je
ins
sub
es
jbe
into
mov
aaa
data16
ins
(bad)
pop
das
mov
jbe
sti
push
ja
pop
daa
xchg
aaa
imul
jne
mov
pop
xchg
ss
pop
mov
add
daa
jbe
mov
pop
jbe
xchg
pop
inc
push
mov
pop
ja
xchg
js
aas
push
lock
in
ja
cs
pop
cs
loopne
add
(bad)
cmp
ror
das
mov
daa
or
mov
push
mov
inc
data16
pop
loopne
out
(bad)
jb
pop
mov
jno
cmps
(bad)
pop
pop
jbe
ja
dec
test
xchg
fild
sti
cmp
outs
xchg
iret
jg
jae
aaa
sti
add
or
fimul
ins
out
jno
push
aaa
pop
push
xor
pop
pop
pop
push
push
jne
into
cmp
push
inc
push
packuswb
push
push
cs
and
pop
jbe
cmovg
cmp
jg
jg
sbb
pop
inc
jg
mov
push
out
push
(bad)
jge
mov
push
pop
inc
jle
inc
jb
cdq
in
addr16
push
pop
jle
dec
ja
mov
inc
pop
jb
jl
mov
cs
xchg
push
push
jnp
out
and
pop
inc
mov
pcmpeqd
push
push
movs
ja
jp
push
push
push
push
jp
jns
iret
neg
push
ja
ins
daa
push
add
push
(bad)
mov
je
push
ja
jne
je
call
cmps
push
je
pop
out
ins
jne
pop
push
cmps
jb
and
jae
jb
xchg
lock
add
clts
pop
jb
sahf
lea
jo
pop
dec
bound
outs
popa
dec
xchg
daa
nop
rol
pusha
push
push
ins
inc
pop
dec
jmp
inc
push
pop
mov
(bad)
sti
inc
out
pop
ins
mov
add
or
out
pop
mov
pop
pop
mov
unpcklps
and
data16
cwde
push
or
bswap
push
pop
fs
add
push
pop
imul
push
lahf
pop
sysret
in
xchg
lea
lods
inc
outs
pop
dec
and
aaa
fbld
or
and
dec
aaa
push
xor
push
pop
push
out
shr
js
(bad)
neg
daa
xor
ins
or
pop
loopne
pop
out
xchg
loopne
inc
data16
aaa
xchg
dec
add
aaa
jg
out
cmps
inc
ja
push
dec
pop
xchg
out
imul
jnp
das
ds
pop
pxor
ins
push
fisub
mov
xchg
push
loopne
add
pop
mov
scas
jnp
fist
lahf
daa
sysret
js
js
mov
pop
push
mov
mov
pop
outs
pop
addr16
xchg
das
aaa
xchg
pop
mov
lock
xlat
mov
mov
pop
fmulp
push
pop
je
push
outs
sbb
out
ds
push
pop
pop
outs
jnp
jae
je
scas
das
jbe
outs
dec
je
jge
nop
outs
subps
pop
fcomp
jnp
aaa
movhps
pop
addr16
iret
inc
dec
dec
out
xlat
loopne
jbe
(bad)
push
add
ja
add
push
outs
out
push
pop
jbe
mov
outs
ja
push
jmp
fnstsw
push
out
js
sar
popf
push
push
adc
push
ss
repz
jns
js
ja
mov
jo
cs
push
scas
push
jg
fldz
add
jne
pop
jle
jg
sbb
in
fcomp
inc
addr16
pop
add
pop
addr16
(bad)
mov
pop
jb
es
aaa
cmp
push
inc
daa
pop
inc
push
jl
jnp
fdiv
das
push
cmps
pop
pusha
pop
push
jo
mov
ja
pop
add
and
pop
xor
sahf
imul
ins
push
js
lahf
js
clc
inc
xchg
(bad)
jbe
imul
dec
push
jne
pop
xor
in
xchg
dec
dec
push
addr16
pop
js
push
xchg
data16
mov
pop
sar
outs
jle
cmc
add
outs
push
jle
pop
jmp
ins
xchg
in
add
xchg
pop
pop
pop
js
jns
pop
jbe
pop
lock
mov
jmp
es
pop
addr16
push
adc
div
push
push
rcl
mov
pop
pop
adc
xor
dec
xlat
sbb
push
pop
not
or
and
or
or
in
xchg
jmp
fimul
fwait
pop
sub
cmp
pop
inc
push
adc
sub
xchg
sbb
pop
loopne
add
push
aaa
jnp
js
fbld
pop
pusha
fimul
mov
pop
cmps
sub
jns
pop
mov
addr16
fwait
daa
mov
pop
movd
outs
pop
shr
cmp
ss
pop
mov
mov
sub
ins
xor
and
xchg
pop
push
outs
jne
out
add
jg
push
aaa
lahf
pop
das
fidiv
mov
dec
outs
mov
mov
mov
fimul
outs
pop
pop
pop
es
mov
in
fmulp
(bad)
push
mov
xchg
es
pop
imul
push
aaa
push
inc
je
mov
push
aas
je
dec
add
dec
push
sbb
jae
ds
dec
dec
dec
mov
pop
push
pop
fidivr
js
or
pop
outs
jp
sbb
push
dec
jle
sysret
lock
xchg
push
test
pop
inc
test
das
cmp
jns
push
push
mov
add
pop
test
scas
fiadd
pop
pop
mov
repz
(bad)
outs
dec
(bad)
or
(bad)
jg
daa
sahf
jle
jle
js
rol
scas
push
pop
sbb
pop
outs
ds
push
in
add
jg
out
sbb
jns
jnp
sub
and
rcl
push
out
dec
add
push
pop
js
jae
mov
xchg
pusha
xor
aaa
jmp
push
mov
xchg
idiv
push
dec
out
(bad)
xor
test
outs
rol
adc
jle
test
jge
xor
loopne
out
jg
(bad)
jmp
push
outs
ja
dec
enter
inc
addr16
push
pop
pop
push
cwde
outs
ja
add
xchg
pop
cmp
jle
outs
pop
pop
ja
loopne
xor
adc
dec
mov
dec
add
cmp
xchg
add
das
test
ror
mov
jbe
in
sbb
mov
inc
es
pop
jmp
shl
test
sbb
js
ja
mov
sub
pop
aas
test
pusha
or
cmp
push
xlat
push
cmp
pop
outs
pop
cmps
es
mov
daa
pop
dec
fcmovnu
sub
pop
mov
(bad)
ds
xor
pop
mov
(bad)
pop
mov
in
into
push
cs
ds
daa
mov
out
ins
into
jne
mov
inc
mov
aas
neg
mov
pop
dec
pop
push
pop
jp
push
fiadd
div
ss
js
(bad)
pop
test
xchg
test
push
pop
pop
push
mov
ja
pop
into
push
mov
in
push
push
das
mov
das
push
cmp
lock
pushf
(bad)
dec
jb
add
mov
or
cs
inc
pop
mov
adc
jbe
xchg
jae
cmp
ds
daa
(bad)
cmp
loop
das
pop
(bad)
mov
femms
(bad)
test
push
pop
mov
test
push
cmp
in
add
inc
push
pop
js
daa
cmp
shl
outs
push
aas
jb
mov
pop
pop
add
das
pop
aaa
data16
pop
jne
pmulhuw
jae
push
jge
scas
pop
js
lea
push
pop
outs
sbb
pop
pop
push
mov
mov
shl
jnp
pop
jle
fisubr
nop
aaa
mov
jns
pop
push
(bad)
test
push
enter
jmp
jg
jb
sub
inc
mov
outs
test
add
(bad)
add
sbb
adc
jbe
xchg
adc
mov
jecxz
popa
fild
and
pusha
fisttp
pop
xchg
out
add
inc
outs
pop
pop
mov
outs
pop
addr16
fisttp
pop
push
mov
gs
ja
xor
fnstsw
mov
outs
aaa
mov
fmul
pop
add
sbb
xchg
jo
out
push
jbe
pop
clc
xchg
jg
add
xchg
push
lahf
pop
pop
test
pop
dec
pop
xchg
mov
mov
ss
pop
es
push
repnz
js
js
sbb
sbb
jnp
in
aas
es
mov
inc
pop
sub
clc
push
jnp
jle
ss
iret
jnp
daa
iret
lods
shl
mov
pop
pop
mov
lea
cmp
push
out
gs
js
aaa
dec
pop
pop
ins
test
dec
pop
push
fistp
mov
sbb
mov
push
cmps
push
mov
mov
outs
(bad)
std
inc
addr16
pop
pop
outs
js
pop
das
pop
fcom
pop
mov
mov
cs
outs
push
fstp
into
fstp
mov
outs
js
out
push
mov
pop
mov
pop
in
xchg
ss
ins
push
cmp
(bad)
dec
aaa
bnd
cmova
ja
jb
es
mov
(bad)
mov
pop
pop
fdivr
cmps
push
test
pop
jle
fisubr
es
jl
push
cmp
aaa
test
push
mov
test
cmp
pop
mov
fadd
pop
sub
popa
jbe
sbb
rcr
push
out
xor
das
iret
out
imul
pop
pop
out
cmp
push
jl
add
inc
fild
add
js
outs
out
out
inc
arpl
sbb
push
xchg
xchg
outs
cmp
cdq
bound
push
(bad)
push
sbb
add
xor
ja
jg
sbb
and
out
icebp
or
dec
outs
jmp
mov
div
dec
loopne
mov
ja
outs
fiadd
inc
out
into
imul
mov
outs
imul
pop
pop
iret
pop
adc
add
cmps
sbb
(bad)
aas
pop
bound
(bad)
aaa
pop
cmp
mov
inc
cmp
out
xlat
push
adc
fistp
pop
or
lds
inc
pop
pushf
mov
xor
mov
popa
add
ds
lods
jno
pop
es
jle
push
dec
mov
pop
mov
cdq
adc
out
cmps
aas
data16
das
jl
inc
neg
xor
rcr
orps
mov
(bad)
push
jl
pop
or
pop
push
out
add
mov
sub
fidivr
daa
lahf
lea
pop
pop
data16
push
cmps
pusha
ja
iret
xlat
push
jge
jle
pop
pop
push
pop
fnstsw
das
push
xlat
sti
out
out
pop
mov
jge
push
push
dec
pusha
ss
(bad)
mov
in
sbb
das
scas
xchg
pusha
idiv
imul
test
push
lea
cmp
cmps
pop
mov
pop
cs
ss
cs
fnstsw
xor
daa
jp
mov
iret
jp
or
shl
pop
jnp
cmp
outs
mov
retf
das
push
daa
pop
inc
push
cmp
push
mov
jae
cmps
pop
outs
ja
xchg
mov
mov
aaa
xchg
pop
push
js
jnp
(bad)
outs
test
mov
mov
jle
push
out
icebp
into
in
push
test
test
push
aas
popf
add
js
ss
ds
pop
fcmovb
push
pop
lahf
outs
cmp
lods
pop
jg
ds
xor
pop
ds
cs
lahf
das
pop
pop
outs
push
addr16
lods
pop
push
fistp
jp
cmp
fidiv
pop
cmp
pop
mov
jl
lea
pop
in
dec
jo
out
push
pop
into
jo
mov
ror
jl
push
jbe
xchg
fdivr
es
out
imul
in
sbb
push
pop
not
cmp
push
pop
pop
xchg
sbb
ror
imul
ja
pop
nop
sub
imul
pop
pop
addr16
pop
lock
jne
pop
outs
dec
repnz
(bad)
pop
add
(bad)
inc
ret
and
out
lds
dec
pop
popa
rol
pop
nop
and
and
dec
sub
and
pop
push
cmp
xor
xchg
xchg
fmul
lea
xlat
mov
push
and
xlat
idiv
pop
mov
jp
pop
jl
add
(bad)
jl
scas
imul
jg
sub
fild
pop
mov
pop
loopne
out
pop
pop
pop
pop
lock
aaa
mov
maxps
add
add
imul
aaa
out
inc
fidivr
pop
neg
sti
shl
pop
push
aas
ja
lock
pop
pop
das
push
mov
bound
jne
jne
jl
jl
pop
popa
fucomp
jge
pop
cs
pop
nop
aas
dec
nop
(bad)
and
mul
inc
adc
mov
push
ins
prefetcht2
dec
ds
addr16
sbb
dec
push
mov
ss
mov
outs
bound
addr16
xor
aaa
js
(bad)
fidivr
cmp
pop
mov
sub
xlat
jg
mov
adc
inc
xchg
pop
cmps
das
xchg
jnp
add
mov
sbb
dec
scas
mov
push
stc
(bad)
cmps
pop
push
mov
xchg
adc
dec
ds
pop
lock
(bad)
mov
bsf
cmp
xchg
xchg
push
sahf
jnp
test
sbb
test
test
inc
pop
xchg
je
add
ins
retf
dec
daa
push
sbb
pop
addr16
mov
out
lock
jbe
pop
pop
das
pop
shl
jne
push
jge
adc
cmp
jl
push
pop
mov
pop
jle
xor
es
jp
sbb
cld
add
push
xchg
push
lahf
into
sbb
mov
jle
imul
(bad)
data16
mov
pop
outs
outs
jae
sbb
outs
push
bound
cmp
sbb
outs
outs
push
outs
arpl
pop
push
dec
cmp
xchg
imul
pusha
lds
push
outs
inc
and
pusha
lds
dec
cs
mov
cmp
test
pop
pop
mov
mov
es
mov
addr16
mov
push
dec
outs
ins
pop
mov
pop
daa
cdq
dec
lahf
mov
jecxz
aam
pop
pop
mov
pop
leave
inc
pop
jge
dec
pop
mov
pop
mov
jnp
aaa
xchg
pusha
ja
jl
mov
sar
lea
mov
mov
sub
sub
mul
fidivr
push
dec
pop
pusha
sbb
push
dec
cmps
pop
sahf
sti
cmp
inc
pop
pop
mov
jg
out
push
push
loopne
ficomp
cmp
inc
push
xchg
outs
jl
sbb
mov
out
not
mov
push
pop
rcl
cmp
pop
inc
xchg
arpl
xchg
mov
fld
jp
mov
mov
bound
push
pop
push
mov
jge
sbb
mov
adc
cs
jmp
xchg
fadd
mov
aaa
scas
fld
ds
mov
push
fimul
jo
pop
push
dec
daa
mov
mov
ds
into
xchg
cmp
inc
push
pusha
mov
push
inc
xchg
aas
push
loopne
loopne
jbe
mov
sbb
push
aaa
test
daa
jl
sbb
lods
(bad)
addr16
mov
lods
cmp
data16
loopne
dec
add
cmp
addr16
add
cli
jp
pop
pop
jle
outs
mov
jle
jl
es
mov
push
push
pop
jno
iret
fdivr
jp
cs
pop
pop
xchg
jno
outs
jg
jl
dec
mov
div
mov
mov
clc
or
inc
bsf
pop
dec
out
jl
or
mov
sbb
push
out
jno
xchg
ds
outs
ins
outs
xor
pop
pop
(bad)
imul
add
iret
inc
les
aaa
fist
ss
je
mov
outs
ret
sbb
pop
dec
daa
pop
and
add
or
xchg
sub
shr
lea
lahf
mov
mov
test
jns
mov
(bad)
xor
das
pop
sbb
mov
daa
pop
aas
mov
xor
lock
pop
pop
add
mov
mov
adc
jle
push
push
fsubr
push
mov
jle
pop
push
loopne
aas
pop
mov
ss
in
pop
outs
nop
jbe
daa
inc
jbe
cmp
es
punpcklwd
inc
fidivr
arpl
jbe
fst
aaa
xchg
dec
xchg
sar
arpl
ds
pop
mov
ja
sbb
xchg
xchg
mov
push
jo
fisub
iret
fbstp
ins
pop
xlat
xchg
pop
push
jp
push
cwde
jae
out
jge
xchg
jg
dec
pop
pop
and
pop
scas
daa
adc
jb
(bad)
pop
mov
and
push
jg
pusha
lock
rcl
bound
loopne
jnp
dec
setbe
outs
mov
out
ds
scas
aaa
jg
push
cs
sar
mov
add
lock
xchg
adc
ins
aas
lock
lahf
test
daa
pop
int3
test
test
out
fidivr
push
es
js
mov
cli
rol
xchg
fisttp
neg
(bad)
repz
add
paddsb
cs
sar
and
jp
pop
xchg
(bad)
jb
arpl
aaa
out
jb
xor
jmp
scas
add
nop
pop
xchg
jns
mov
(bad)
inc
movs
add
jle
test
repnz
js
jl
xchg
lods
pop
ss
data16
push
fdivr
ja
jbe
popa
dec
cmp
xlat
inc
aas
aas
lea
mov
imul
mov
fild
mov
xchg
ja
mov
outs
push
mov
nop
inc
cs
das
inc
and
mov
addr16
push
fstp
divps
inc
aad
push
outs
sbb
pop
push
inc
mov
pop
shr
pop
daa
outs
test
lea
pop
push
dec
lea
(bad)
mov
aas
pop
es
push
pusha
ins
daa
mov
sub
or
pop
fadd
fincstp
pop
pop
arpl
fimul
jnp
fldcw
pop
call
push
(bad)
nop
sti
mov
out
ss
push
arpl
jg
pop
mov
jne
dec
pop
mov
adc
ds
popf
mov
adc
idiv
outs
push
pop
jg
fidiv
dec
push
jle
fs
rcr
aas
pop
push
es
pop
sbb
xchg
push
aaa
repz
mov
jbe
in
jg
jg
xchg
jle
pop
push
mov
xchg
pop
aaa
jle
mov
xlat
push
ja
sbb
loope
daa
jg
add
mov
mov
test
pop
mov
push
bound
add
push
fadd
push
cs
pop
sahf
(bad)
add
mov
cmp
mov
mov
lahf
daa
inc
dec
outs
loopne
call
xchg
out
sbb
xchg
popa
push
pop
pop
jo
lods
(bad)
jbe
pusha
(bad)
sbb
add
jmp
jle
inc
inc
pop
outs
jnp
(bad)
add
dec
push
or
ds
das
ss
or
adc
pop
jg
scas
inc
fistp
pop
out
pcmpeqb
cmp
psubq
(bad)
jb
push
outs
jns
push
push
in
inc
sub
(bad)
(bad)
pop
lea
or
jp
push
jg
outs
and
ret
out
out
es
sub
push
into
xor
jecxz
mov
test
jb
das
jg
cs
cmp
movzx
lods
sbb
movs
push
inc
push
out
les
sbb
pop
cmps
nop
mov
pop
cmp
daa
push
nop
adc
mov
(bad)
mov
push
movs
outs
push
cs
push
mov
push
lea
dec
emms
or
pop
ds
mov
rcl
das
ins
aaa
into
add
pfrcpit1
(bad)
in
and
or
pop
pop
jle
add
daa
xchg
mov
(bad)
pop
pop
adc
sbb
ss
outs
fstp
gs
ds
xchg
(bad)
xchg
es
sbb
pop
push
dec
pop
pop
fidivr
imul
cmps
not
cs
push
jo
lock
imul
outs
xchg
dec
movzx
ins
jnp
inc
not
jg
iret
es
cwde
xor
ret
gs
sahf
pop
adc
maxps
sub
shr
pop
aas
in
outs
ja
aaa
inc
pop
xchg
dec
and
adc
xchg
mov
mov
pop
jp
emms
mov
jle
daa
ret
push
loope
pop
arpl
(bad)
push
jo
popa
scas
mov
neg
mov
add
daa
mov
mov
out
push
cs
into
mov
pushw
mov
cmp
pop
xchg
aas
cmps
mov
add
fdivr
dec
mov
mov
push
inc
pop
xchg
test
into
push
sbb
xchg
rcr
jge
aas
jo
lahf
push
xchg
jp
pushf
fsubr
jl
ss
or
ss
adc
fild
(bad)
(bad)
ja
and
push
jle
pop
mov
ss
stos
jnp
lahf
pop
jp
pop
shl
jp
jo
fbstp
cmp
sahf
(bad)
ficomp
pop
clc
ds
js
cmp
xor
ins
jne
imul
pop
outs
xlat
(bad)
xchg
pop
push
pop
xchg
dec
adc
sbb
iret
jo
xlat
popa
icebp
dec
pop
sbb
add
repnz
cmps
pop
fist
jmp
ret
pop
mov
fs
xchg
mov
dec
or
cmp
cmp
fcmovbe
test
sub
pop
dec
pop
push
push
or
or
xor
pop
out
ds
push
lea
pusha
pop
out
sbb
lock
(bad)
adc
mov
das
maskmovq
ss
adc
jg
fstp
mov
mov
push
(bad)
test
pusha
int
out
(bad)
aas
pop
or
scas
xchg
addr16
pop
push
xchg
adc
xchg
xchg
out
dec
add
jge
inc
ja
sub
daa
pop
movs
jae
or
mov
pop
fcom
jo
mov
jbe
into
addr16
cmp
outs
add
(bad)
out
push
jle
addr16
lahf
or
das
mov
push
jbe
mov
jle
push
hlt
push
into
xchg
das
xlat
push
push
pop
lds
data16
ins
sub
paddd
femms
pop
fisttp
(bad)
psubsb
cmp
mov
lock
mov
pop
inc
jae
test
xor
ds
ficomp
call
xor
xor
pop
mov
dec
cmp
pop
lea
push
jle
or
not
and
ss
jge
pop
pmulhuw
jo
xchg
mov
ds
or
sbb
jbe
inc
loopne
pop
js
and
cmovns
(bad)
test
jmp
xchg
xchg
das
push
jmp
pop
movs
adc
jp
(bad)
sbb
mov
(bad)
pop
outs
ins
dec
sbb
mov
inc
jl
out
scas
push
xchg
(bad)
pusha
and
cmps
sbb
imul
xlat
mov
sub
call
lods
xor
imul
push
fist
(bad)
push
xchg
jo
daa
pop
cwde
add
fisttp
inc
and
and
mov
or
pop
fild
pop
xchg
mov
pop
mov
mov
xor
ja
scas
xchg
push
aas
nop
pop
inc
pusha
aaa
pand
add
pop
paddsw
pop
pop
out
outs
pop
pusha
xchg
jg
pop
dec
mov
push
xor
ja
aaa
mov
gs
movzx
add
dec
aas
add
pop
out
neg
imul
scas
xchg
es
push
es
fld
div
mov
clc
out
daa
xchg
test
add
popa
fcmovnu
add
loopne
sbb
sub
(bad)
loopne
adc
xchg
div
sbb
push
scas
jle
xor
into
(bad)
cmps
jbe
inc
xchg
mov
xor
cmp
pop
push
pop
push
mov
push
sub
lods
movd
jg
cmp
xchg
outs
test
pop
ja
outs
aas
xlat
(bad)
test
(bad)
jge
mov
add
xchg
daa
lea
fcomp
pop
mov
sbb
inc
mov
inc
push
pop
lods
out
pop
push
xchg
mov
fld
out
push
outs
pop
cs
fdivr
add
push
jo
(bad)
aas
jle
jp
lea
out
popa
mov
xchg
ss
jne
push
jl
mov
jae
pop
sahf
mov
outs
push
jno
call
push
inc
enter
push
push
daa
pop
sbb
addr16
clc
sub
sub
push
outs
mov
aas
push
andnps
out
cmp
imul
jp
ror
and
cdq
cmp
xlat
(bad)
scas
pop
xor
pop
dec
pop
outs
pusha
xchg
test
xchg
cmps
pop
pop
cmp
push
sbb
test
pop
(bad)
call
outs
test
push
inc
aas
cmc
and
inc
sbb
jb
inc
idiv
shl
jp
test
cmps
movs
adc
(bad)
(bad)
fiadd
xchg
div
mov
pop
dec
fcmovnbe
pop
or
cmp
out
pop
pop
fwait
jbe
pop
push
pop
test
add
adc
adc
push
test
add
aaa
pop
das
in
popf
(bad)
cmp
mov
stos
rcl
fsubr
mov
outs
das
pop
xchg
push
imul
xor
and
dec
outs
out
ins
xlat
daa
aas
sete
mov
outs
push
dec
(bad)
push
mov
addr16
lock
mov
es
daa
pop
nop
(bad)
dec
pop
dec
nop
pop
pop
jmp
out
cmp
xchg
inc
push
fiadd
mov
pop
out
push
(bad)
push
dec
push
pop
jg
sbb
jno
mov
nop
test
and
mov
jg
inc
push
push
pop
in
push
dec
inc
test
outs
xchg
inc
cmp
cs
dec
jnp
cmp
aas
push
pop
fld
jge
das
mov
cs
rol
pop
add
jne
mov
div
daa
xcrypt-ecb
cmps
int3
or
cmova
daa
loope
scas
popa
imul
cmp
dec
fiadd
adc
push
xchg
lods
xchg
pop
add
test
fadd
mov
and
jno
icebp
pop
or
fidivr
(bad)
xor
stos
mov
outs
aas
push
lods
xchg
(bad)
pop
inc
xlat
movs
sbb
je
je
aaa
call
pop
cmps
jb
jo
(bad)
in
ds
lahf
adc
add
outs
aas
imul
fs
mov
xlat
test
inc
push
mov
inc
lods
aad
outs
aas
mov
pusha
mov
sbb
fist
jo
in
sub
mov
cmps
cmps
(bad)
fisubr
cmovg
sbb
in
add
pop
fs
xlat
iret
(bad)
pop
mov
daa
das
loopne
nop
push
pop
xchg
push
pusha
ins
pop
push
ss
add
in
sbb
pop
addr16
pop
jg
jecxz
push
inc
dec
xchg
jnp
mov
pop
pop
not
pop
dec
comiss
mov
mov
out
cmp
(bad)
pop
jnp
or
xor
mov
call
adc
dec
push
mov
xchg
jg
imul
mov
push
outs
push
mov
xchg
outs
xchg
lea
scas
and
pop
or
out
xchg
lahf
pop
cmp
cmp
sahf
es
ins
mov
(bad)
lahf
xlat
mov
ss
nop
iret
outs
pop
pop
pop
pop
mov
xchg
xchg
(bad)
lahf
xchg
out
add
outs
push
scas
inc
xchg
add
mov
jns
sbb
into
lea
daa
push
(bad)
loopne
daa
xchg
mov
hlt
sub
ss
gs
add
retf
push
jo
out
inc
ds
xchg
xchg
mov
(bad)
add
cmp
push
cmp
jle
mov
push
inc
fsubp
es
fcom
jb
push
jp
push
jbe
(bad)
les
outs
outs
jne
arpl
add
push
sbb
push
inc
cmp
jle
add
pop
add
cmc
ja
push
(bad)
push
fisubr
push
xlat
ins
push
je
clc
add
sbb
mov
adc
push
gs
pop
test
push
sbb
mov
movs
lahf
dec
addr16
pusha
xchg
(bad)
mov
mov
and
inc
pop
push
mov
pop
cmp
imul
ror
leave
adc
int
stos
pop
out
inc
mov
lods
or
push
addr16
mov
push
xchg
push
push
sysret
sahf
fimul
mov
dec
les
mov
jle
inc
xadd
aas
add
mov
push
getsec
xchg
push
mov
add
pop
pop
loopne
(bad)
movs
addr16
xchg
pop
ins
inc
ja
push
xchg
jg
jmp
in
into
test
push
xchg
push
xchg
cmp
xchg
pushw
push
jae
int3
popw
xchg
daa
xchg
sbb
push
mov
push
(bad)
push
xchg
daa
test
mov
pop
ja
imul
and
fist
out
data16
movq
into
push
xchg
aas
into
ins
aas
jo
scas
imul
mov
pop
imul
std
outs
xchg
aaa
scas
idiv
clc
push
call
pop
scas
loopne
ins
iret
push
cmps
cmps
mov
push
into
pop
inc
pop
dec
mov
cs
inc
pop
jg
fist
out
or
mov
pop
fld
xchg
jge
push
stc
fdivr
push
xchg
sysret
mov
sub
xchg
(bad)
pop
pop
mov
(bad)
scas
call
inc
es
or
cmps
pop
js
test
outs
add
push
mov
mov
fild
mov
push
mov
iret
ror
sbb
dec
(bad)
arpl
test
xor
test
push
jbe
xor
adc
(bad)
ja
out
cmp
pop
shl
outs
push
(bad)
in
push
xchg
out
dec
in
and
push
and
sar
inc
pusha
pop
ja
pop
(bad)
(bad)
outs
out
pop
and
shl
aas
jno
imul
jb
dec
push
outs
imul
sbb
xchg
pop
out
adc
sbb
out
ja
lods
pop
mov
and
mov
addr16
or
movs
sub
sub
push
(bad)
cmp
mov
pop
fisttp
fsubr
fbstp
jp
push
xlat
sub
pop
jo
jg
in
xor
es
into
mov
ds
mov
add
pop
cmp
pop
addr16
in
jbe
xchg
inc
sbb
xor
(bad)
xor
push
loopne
(bad)
push
test
add
pop
idiv
daa
imul
mov
xchg
dec
addr16
pop
xchg
push
xchg
aas
push
(bad)
xchg
pop
xchg
pop
ss
jae
outs
jnp
xchg
fbstp
test
jo
add
out
jl
push
dec
pxor
pop
ficom
movs
cmp
inc
push
fisub
mov
pop
into
push
mov
dec
not
loope
pop
test
sub
ret
xchg
jg
push
loopne
ja
xchg
outs
ins
getsec
inc
jge
mov
dec
int3
jge
fist
xchg
(bad)
addr16
cmp
js
dec
mov
jge
idiv
shl
hlt
adc
out
or
push
push
dec
aas
lea
pop
push
push
mov
add
das
mov
push
jl
or
push
cmovbe
cmp
xchg
adc
arpl
clc
sar
scas
push
pop
xchg
jge
call
cmp
out
pop
pop
inc
pusha
es
test
mov
or
xchg
xchg
xlat
pop
lods
int3
jns
sysret
jg
pusha
retf
push
sbb
icebp
jbe
movsx
data16
rcpps
push
out
je
jbe
mov
pop
ja
loop
sub
arpl
dec
inc
or
dec
iret
out
(bad)
adc
lods
lds
dec
loopne
xchg
xchg
push
inc
xlat
cmp
loopne
fbld
dec
out
pop
es
mov
push
add
or
pop
xchg
aaa
or
and
mov
(bad)
and
mov
pop
outs
cmps
shl
daa
jecxz
ja
daa
mov
loopne
xchg
inc
dec
fsubr
xor
outs
dec
push
mov
es
jle
out
cs
mov
daa
add
pop
pop
pop
sub
fist
into
push
jbe
in
mov
das
retf
(bad)
fiadd
outs
pop
das
add
pop
inc
add
ins
sub
retf
es
aas
imul
mov
imul
(bad)
sbb
imul
push
pop
imul
pop
pop
sbb
daa
push
xchg
aas
ss
movq
push
das
out
add
pop
push
out
jg
ja
dec
add
push
xchg
mov
sbb
mov
cmp
pop
xchg
ss
pop
mov
xchg
mov
jle
fwait
jns
fiadd
fwait
sti
cmp
outs
sbb
inc
xchg
aas
push
in
popa
lods
add
scas
ss
data16
mov
add
sub
daa
(bad)
push
mov
cmps
mov
pop
fs
dec
cmp
arpl
pop
loop
and
inc
lock
imul
test
outs
cmp
iret
(bad)
jns
lock
push
xchg
and
sbb
jbe
jg
pop
test
imul
push
push
mov
outs
out
push
popa
and
xor
xlat
push
ja
ror
adc
test
mov
ss
out
dec
(bad)
repnz
addr16
and
adc
outs
out
outs
sub
rcr
inc
cmp
mov
test
bound
rcr
(bad)
rol
sub
xchg
retf
mov
pop
pop
sbb
(bad)
(bad)
test
out
pop
dec
jge
jo
jbe
inc
dec
lods
in
aam
pop
pop
xchg
in
jmp
movs
aas
mov
movhlps
mov
daa
add
jge
es
push
xchg
add
pop
ja
outs
loopne
fcom
push
push
mov
jl
ja
xchg
popa
sub
daa
pop
aas
jbe
sbb
pop
mov
ja
push
call
push
mov
cmp
push
sahf
sti
cs
test
es
xchg
daa
aaa
mov
out
cmp
push
xchg
inc
push
test
mov
out
jne
push
movzx
mov
out
ds
jae
xor
outs
pop
das
push
jmp
ret
dec
das
das
jb
jl
aaa
push
pop
imul
or
pop
aaa
push
mov
xlat
int3
cmp
pushf
pcmpgtd
jge
mov
jg
test
mov
pop
cmp
sbb
addr16
nop
push
mov
out
push
add
addr16
test
adc
cs
xor
pop
mov
or
mov
ja
test
cs
push
outs
fidivr
mov
gs
into
div
mov
inc
out
cmp
popw
mov
pusha
imul
and
cmp
fs
fsubr
js
iret
jmp
dec
dec
ja
addr16
jecxz
inc
outs
ja
jge
xchg
pop
xchg
ja
aaa
ds
das
xchg
les
xchg
shl
shr
push
scas
fild
cwde
dec
mov
gs
xchg
and
cmps
mov
xchg
fwait
pop
pop
pop
inc
pop
movs
adc
test
les
inc
xchg
push
das
push
pop
in
add
(bad)
cmp
outs
or
nop
dec
dec
pop
ucomiss
or
inc
mov
sub
pop
dec
push
imul
loopne
or
shl
pop
scas
ficom
pop
outs
mov
pop
test
ret
scas
mul
pop
xchg
aaa
test
sbb
rol
cwde
add
mov
cmps
xchg
mov
mov
push
push
add
ins
pop
jbe
das
outs
mov
aas
pop
ja
retf
add
pop
mov
das
scas
idiv
nop
ins
pop
(bad)
pop
imul
pop
jnp
mov
jg
(bad)
mov
inc
cwde
push
es
pop
mov
ins
jbe
xchg
es
ins
lahf
retf
add
push
punpckhdq
fild
pop
push
pop
xchg
push
ins
jle
ja
pop
xlat
xchg
fbstp
sub
jns
out
xchg
push
xchg
xchg
xchg
pop
daa
pop
xchg
mul
pop
idiv
push
fild
xchg
lahf
pop
sahf
mov
daa
push
div
cmp
pushf
jmp
xchg
pop
push
pop
addr16
mov
mov
out
pop
jg
nop
mov
push
fadd
adc
push
mov
pop
addr16
(bad)
jno
lea
mov
add
lea
(bad)
arpl
pop
mov
lea
mov
add
inc
mov
outs
mov
sbb
fistp
jg
push
add
cmp
add
fnstsw
push
or
mov
loop
iret
pop
pop
emms
mov
jb
mov
push
aas
jo
arpl
sub
or
out
ja
inc
(bad)
jmp
inc
stc
(bad)
jb
lea
addr16
sbb
inc
call
outs
lods
pop
out
out
push
dec
or
lea
dec
arpl
test
dec
pop
dec
add
mov
push
xor
rcl
pop
outs
xor
sbb
xchg
aam
push
cmp
push
aaa
mov
lock
pop
pop
push
push
sub
nop
test
sub
pop
xor
test
jg
shufps
jbe
daa
pavgb
cwde
jg
das
jnp
data16
mov
sub
inc
(bad)
pop
mov
imul
ins
jae
pop
jbe
(bad)
ss
xchg
jo
mov
iret
add
imul
push
xchg
cdq
rcl
mov
jbe
outs
ins
iret
in
mov
xlat
pop
xor
pop
jg
jle
add
mov
jmp
loopne
mov
pop
popa
orps
fild
in
sar
fadd
mov
lahf
outs
pop
out
rol
ds
xchg
aas
add
fiadd
push
xchg
xchg
int
cmps
daa
xchg
mov
inc
mov
xchg
out
push
es
xlat
lds
jbe
(bad)
js
xlat
mov
xchg
daa
mov
and
les
outs
outs
push
mov
out
es
sub
mov
mov
push
outs
loopne
jo
test
fs
inc
inc
pop
outs
pop
inc
loopne
iret
push
das
outs
(bad)
jb
or
inc
imul
mov
mov
outs
push
out
add
mov
test
push
enter
and
pop
outs
out
xchg
repz
push
movq
rol
jg
cmp
arpl
jbe
pop
fild
jb
sbb
nop
shl
pusha
fstp
push
scas
pop
out
cvttps2pi
and
movs
jne
inc
shl
sbb
das
or
bswap
push
dec
in
ror
pop
imul
push
xchg
pop
fistp
test
add
inc
mov
fadd
fbld
sub
call
pop
fiadd
es
(bad)
mov
adc
and
jl
adc
xchg
ins
out
cmc
add
js
mov
pop
pop
jnp
rcr
jns
jbe
test
fild
(bad)
cmps
pop
ret
sar
pop
out
in
shl
test
aas
mov
xchg
mov
gs
pop
idiv
mov
mov
push
pop
ss
sahf
neg
mov
cdq
(bad)
push
jbe
pop
test
lahf
push
das
in
or
js
mov
ins
xchg
imul
daa
mov
iret
imul
loopne
mov
out
iret
jge
ds
(bad)
jg
pop
in
pusha
jnp
jg
jbe
retf
sbb
mov
aas
sbb
add
add
mov
fnstenv
jb
inc
ins
ja
inc
popw
aas
lock
mov
lea
pop
xchg
cmp
inc
pop
xchg
push
jg
into
jl
push
mov
dec
out
fistp
xchg
(bad)
das
xchg
sub
fnsave
mov
aas
pusha
(bad)
seto
dec
jle
aas
xchg
jo
ja
mov
pop
mov
imul
outs
(bad)
mov
pop
mov
jg
imul
cmp
mov
lea
cmc
cs
mov
mov
fistp
cmps
or
rcr
neg
loopne
or
sbb
inc
mul
or
push
test
pop
mov
jg
cmp
es
dec
movs
(bad)
inc
iret
mov
adc
cmps
mov
pop
cmc
xchg
dec
lods
push
jae
imul
pop
pop
outs
shl
adc
push
mov
xchg
iret
push
pop
jne
mov
fisttp
cmovg
dec
xor
inc
rcl
pop
inc
or
adc
retf
mov
dec
push
add
cs
(bad)
dec
push
aaa
and
add
pop
in
push
add
sbb
pop
and
not
mov
jno
lahf
les
ficomp
push
pop
out
cmp
xchg
(bad)
aas
ins
xor
pop
(bad)
das
pop
pop
jbe
mov
push
fiadd
fbld
push
test
out
pop
cdq
add
push
push
ja
mov
das
bswap
(bad)
mov
imul
pop
idiv
setns
push
ja
in
jge
mov
push
mov
jbe
ds
scas
das
addr16
sti
or
cwde
iret
push
scas
out
mov
xchg
push
call
pop
pop
(bad)
mov
push
add
rcr
add
xchg
pop
(bad)
pop
ins
pop
je
ins
cmp
pop
push
inc
fs
(bad)
ins
psubusw
cwde
jne
scas
scas
pop
ret
cmp
jp
mov
fistp
add
out
scas
and
inc
out
sti
ds
ins
ja
add
mov
pop
mov
(bad)
aas
outs
mov
ja
pop
mov
test
sbb
push
aaa
xchg
mov
cwde
lahf
inc
lea
shl
out
xchg
dec
xor
inc
(bad)
ss
repnz
sbb
inc
xchg
(bad)
daa
(bad)
or
pop
push
into
rcr
push
cmovo
arpl
jge
xchg
push
jmp
loopne
jbe
push
and
jno
mov
movs
xor
jl
jns
mov
push
pminub
push
outs
movs
cmp
fisub
add
xchg
add
enter
je
add
jbe
dec
fnstsw
push
or
pop
test
mov
mov
mov
mov
mov
pop
and
dec
es
mov
mov
dec
pusha
add
push
add
outs
shr
cwde
cmp
aas
das
jge
add
cmps
jnp
loopne
inc
jle
push
xor
pop
iret
aas
shl
mov
xchg
inc
movq
pop
pusha
in
push
pop
(bad)
push
loopne
jo
cmps
iret
ss
daa
cdq
sbb
ja
out
shl
neg
inc
xchg
aaa
ins
pop
mov
call
fiadd
push
inc
sbb
mov
arpl
pop
pop
scas
xchg
jg
outs
mov
in
cmp
scas
ins
xchg
ror
setp
outs
neg
fwait
inc
das
out
cmp
lahf
(bad)
in
jmp
sets
out
mov
mov
cdq
mov
or
jbe
xor
sysret
icebp
cs
jg
dec
repz
retf
mov
(bad)
outs
mov
xchg
jge
aaa
jmp
push
movq
pop
(bad)
jecxz
(bad)
mov
loope
jnp
not
jnp
mov
xchg
pop
sbb
(bad)
repnz
mov
mov
les
jle
pop
xchg
nop
inc
pusha
sub
inc
pop
(bad)
idiv
ja
pop
data16
outs
(bad)
adc
pop
iret
ss
inc
mov
std
rol
xchg
inc
xchg
push
push
xchg
adc
push
pop
fbld
inc
fdiv
(bad)
into
cmovbe
mov
out
jle
fisttp
xchg
fdivr
rol
js
fistp
jns
daa
loope
aaa
jnp
outs
cmp
(bad)
push
outs
dec
pop
(bad)
push
pop
xor
bound
and
(bad)
(bad)
pop
inc
cmp
and
cmps
pop
jb
bound
imul
push
sub
loop
pop
inc
sar
and
cdq
mov
out
dec
xchg
xchg
xor
das
ins
or
sub
daa
lea
pop
add
pop
push
inc
test
or
loopne
dec
loope
(bad)
pop
out
adc
loope
dec
xchg
pop
fsub
mov
(bad)
sbb
mov
mov
cmc
shl
inc
outs
fdivr
cdq
aaa
call
lahf
pop
(bad)
aaa
ds
add
pop
jl
xchg
pop
ins
scas
lock
add
sub
add
jg
fucomi
call
in
cmp
daa
outs
push
mov
or
retf
jbe
pop
(bad)
ins
xchg
pop
into
daa
daa
xchg
mov
cmp
push
push
pop
xchg
pop
mov
daa
pop
pop
jb
ret
imul
mov
pop
sahf
repnz
idiv
pop
lea
mov
js
xchg
pop
imul
jl
xchg
push
cs
(bad)
imul
sbb
idiv
push
pop
cmps
push
push
out
mov
mov
ja
xchg
jo
pop
mov
lahf
jg
xchg
mov
jge
add
xchg
dec
(bad)
mov
out
out
mov
and
rol
inc
xchg
cmps
push
jnp
lods
ins
push
xsave
push
sbb
mov
out
sbb
push
cmp
pop
xchg
test
out
daa
mov
sub
and
iret
rol
fisttp
push
jle
mov
sti
ja
aaa
dec
test
jns
sbb
out
syscall
mov
push
jg
enter
push
pop
ja
mov
out
or
jge
mov
call
dec
dec
mov
mov
mov
push
pop
inc
pusha
imul
pop
outs
push
ret
pop
cmps
pop
cmp
push
lods
sar
imul
outs
xchg
mov
movs
cmps
pop
push
sbb
daa
ja
shr
jb
aaa
or
ja
popa
inc
pushf
dec
enter
(bad)
out
sbb
cmc
ror
xchg
pop
mov
clc
out
pop
xchg
ds
or
lea
loopne
xchg
ja
daa
sets
mov
mov
lahf
jns
call
es
lahf
add
enter
mov
ins
call
xor
int
pop
cdq
daa
(bad)
jbe
imul
out
push
mov
out
pop
ins
neg
(bad)
mov
rcr
fwait
ds
jb
dec
out
push
and
dec
and
cdq
aaa
cdq
xchg
pop
add
movd
pop
push
(bad)
jp
pushf
mov
aas
ss
popf
aaa
mov
popf
std
shl
ins
aas
lea
aas
loopne
xchg
inc
inc
cwde
arpl
or
cs
mov
popf
mov
aaa
lea
push
lea
imul
nop
cmp
nop
outs
xchg
xchg
cmps
ss
pop
mov
mov
jae
mov
daa
add
fmul
mov
aas
pop
inc
rcl
pop
fidivr
(bad)
dec
xchg
int
js
pop
dec
outs
pop
sar
xchg
pop
mov
sbb
iret
nop
cmps
loopne
jge
outs
addr16
daa
ss
jbe
mov
pop
lea
arpl
sub
jl
cmp
gs
inc
or
mov
add
inc
inc
cmc
iret
popa
das
add
jl
cmps
mov
add
ror
icebp
add
into
call
lods
imul
addr16
test
ja
push
fadd
and
ror
cmp
dec
sbb
imul
js
out
xor
cmc
and
lods
aaa
dec
mov
gs
xor
mov
fist
mov
add
adc
inc
push
push
xor
mov
cmps
daa
pop
xor
and
out
arpl
inc
mov
adc
out
(bad)
pop
inc
xor
sbb
addr16
outs
fmul
sub
addr16
xchg
pop
mov
out
shl
enter
pusha
add
jmp
ins
sbb
xchg
dec
jb
shl
jbe
fwait
mov
fld
(bad)
shl
inc
fwait
jnp
ins
mov
lea
aad
jp
daa
push
out
fdivr
jnp
fimul
(bad)
pop
aas
iret
sbb
into
jnp
es
aas
outs
mov
pop
xchg
loope
sti
sar
jbe
mov
scas
ja
ds
pop
xor
cli
inc
xchg
sbb
mov
loopne
mov
push
xchg
sub
mov
ss
xchg
pop
into
std
rol
push
xchg
aas
sahf
xchg
xchg
xchg
(bad)
iret
jns
aaa
mov
pop
push
pop
pop
mov
ja
fistp
cmp
push
(bad)
call
aaa
mov
(bad)
fiadd
cs
dec
push
xchg
push
in
or
pop
out
mov
cs
outs
dec
add
xchg
daa
mov
imul
pop
push
inc
mov
(bad)
push
mov
(bad)
lea
(bad)
repnz
addr16
sbb
mov
push
dec
pop
adc
mov
daa
(bad)
fadd
pop
push
movups
dec
push
mov
or
fmulp
sbb
or
fidivr
sbb
push
sub
or
mov
push
cld
(bad)
iret
jbe
imul
outs
test
jbe
adc
lea
and
mov
ja
xor
pop
pop
cmps
je
cmps
sbb
mov
push
mov
add
pop
xchg
bound
out
test
pop
out
pop
and
mov
pop
dec
adc
mov
neg
dec
cmp
es
dec
pop
dec
adc
pop
stos
dec
arpl
and
lods
out
dec
pop
xchg
lods
out
shr
cdq
out
pusha
add
xchg
rcr
mov
mov
mov
add
xchg
xchg
aaa
fild
cs
outs
(bad)
pop
push
sub
jnp
aas
dec
mov
rol
cmp
ins
jmp
pop
mov
lods
daa
cmps
stmxcsr
out
push
ins
inc
mov
pop
bsf
mov
push
addr16
add
add
pop
loopne
mov
aaa
cmp
pop
ins
(bad)
outs
in
rcl
call
or
(bad)
aaa
sahf
inc
sub
pop
aaa
inc
dec
loopne
push
mov
jnp
sti
jle
ins
seta
xchg
jle
push
(bad)
outs
fdivr
loopne
push
clc
iret
cs
js
paddusb
inc
out
push
xchg
jg
outs
pop
ficom
pop
out
sub
(bad)
into
out
outs
xchg
pop
out
(bad)
mov
inc
pop
push
mov
mov
push
nop
lea
das
call
lahf
and
loopne
jnp
xor
mov
lock
inc
addr16
cmp
ficom
jbe
push
xchg
mov
cs
clc
and
sbb
or
(bad)
add
xchg
mov
aas
maxps
inc
or
jg
pop
sub
aaa
out
mov
fiadd
ficom
add
pcmpeqd
cmps
lahf
pop
lar
aam
jle
and
inc
sub
jl
(bad)
(bad)
fbstp
cmp
fwait
sub
aaa
sub
push
or
fist
push
jmp
or
sbb
mov
pop
push
add
and
arpl
das
sub
popa
push
pop
cs
mov
outs
pop
mov
and
addr16
sub
stos
add
mov
dec
pop
lds
xchg
push
mov
sbb
out
sbb
pop
cmp
outs
xchg
push
lods
add
out
iret
scas
setnp
daa
das
fnstsw
adc
inc
fcmovu
es
pop
xlat
jbe
mov
mov
and
mov
nop
daa
xlat
sbb
(bad)
mov
and
nop
pusha
pop
cs
mov
aas
paddb
fistp
pop
pop
imul
cmp
ror
(bad)
jno
mov
ja
sahf
cmp
pop
mov
sub
(bad)
pop
mov
nop
lahf
fucomi
cmp
pop
aas
cwde
xchg
outs
push
inc
test
xchg
pop
cmps
nop
mov
(bad)
pop
outs
adc
xor
aas
ds
inc
fdivr
lock
mov
cmpxchg
out
outs
or
(bad)
das
dec
push
lods
int
out
(bad)
xchg
ins
(bad)
jp
mov
pop
sar
outs
test
scas
pop
push
out
fstp
or
jg
packsswb
outs
icebp
add
mov
gs
sbb
pop
jecxz
js
test
(bad)
and
jmp
(bad)
leave
out
xchg
movq
add
jb
js
out
in
xchg
outs
out
sub
(bad)
push
dec
inc
push
bound
daa
cmps
and
outs
outs
push
scas
mov
pinsrw
outs
cmps
or
nop
sbb
outs
add
inc
shl
outs
outs
pop
pop
rcr
lea
dec
repnz
fbld
call
sub
mov
cmp
das
pop
or
push
outs
inc
enter
daa
or
jno
arpl
sbb
xor
pop
ins
mov
and
xchg
pop
pop
rol
sbb
daa
(bad)
in
fsub
cmps
pop
daa
ds
mov
mov
imul
inc
or
mov
push
push
push
pop
push
push
jnp
lods
jae
push
pop
lea
xchg
push
cmp
dec
ins
inc
pop
push
in
rcr
out
mov
pop
pushf
mov
sbb
jg
pop
push
dec
mov
dec
mov
out
add
dec
sub
inc
aas
das
mov
aaa
xlat
mov
mov
cmp
call
ins
pop
xchg
aas
cwde
pop
mov
mov
(bad)
addr16
addps
aaa
xchg
push
cdq
xchg
fmulp
lea
outs
nop
jmp
mov
loopne
js
push
cs
xchg
pop
and
fisub
scas
push
outs
cs
ds
add
xchg
aaa
push
push
xchg
xchg
ins
fs
add
ins
(bad)
aaa
push
push
pop
dec
xchg
sub
mov
outs
lock
pop
neg
jl
daa
jbe
cmp
and
sub
seta
mov
xor
out
scas
push
pop
lea
dec
arpl
jg
add
sbb
rcl
inc
push
mov
xchg
sbb
push
mov
mov
popw
pop
push
(bad)
mov
cli
mov
arpl
xchg
retf
mov
jg
xlat
js
aaa
cmps
cmps
push
jg
and
inc
lahf
mov
and
fstp
push
mov
pop
xchg
mov
cmp
mov
xor
pop
pop
js
out
jbe
add
xchg
xor
push
push
lods
sar
push
inc
push
arpl
shrd
push
aaa
outs
(bad)
lds
into
ins
push
and
rcl
push
inc
push
adc
inc
ja
mov
push
xchg
cmp
jo
into
cmp
adc
push
add
aaa
aaa
push
sbb
inc
push
imul
add
jmp
mov
jbe
in
(bad)
cmp
mov
sbb
rol
add
rcl
or
pop
pop
out
test
sar
inc
push
mov
dec
(bad)
pop
cmp
inc
pop
pop
clc
xchg
xlat
pop
mov
pop
imul
mov
mov
popf
pop
lods
fcmovnu
not
push
push
outs
pop
mov
sbb
cdq
add
add
fadd
xchg
into
sub
ds
pop
paddsb
(bad)
jg
(bad)
paddusb
push
cs
neg
sub
fild
push
mov
inc
imul
iret
(bad)
pop
pop
nop
pop
inc
add
sbb
addr16
xchg
push
out
ja
cs
xchg
(bad)
pop
xchg
out
push
mov
mov
push
pop
paddsb
mov
cmp
xchg
iret
pop
ds
xchg
pop
(bad)
outs
fcom
pop
push
cmp
push
xchg
pop
mov
pop
xchg
data16
inc
push
addr16
mov
clc
ror
outs
fistp
test
push
xchg
sbb
pop
sahf
nop
ja
pop
out
ror
cwde
jp
push
dec
outs
jnp
clc
and
pop
es
mov
out
add
sbb
or
xchg
fisttp
sbb
mov
xorps
sar
shr
aam
push
(bad)
jle
adc
xor
(bad)
jle
pop
jb
sbb
and
nop
mov
lock
adc
test
daa
add
pop
push
mov
movs
out
jbe
add
sbb
dec
lea
das
jne
movs
mov
outs
mov
test
ins
dec
xchg
inc
mov
inc
sbb
add
jns
pop
aas
or
mov
aam
push
xor
or
jle
mov
add
test
inc
add
data16
xchg
pop
pop
arpl
xor
jno
and
arpl
push
fisttp
jae
call
push
dec
pop
pop
push
hlt
rcl
fdivr
outs
fwait
scas
lahf
js
loopne
call
(bad)
pop
adc
popf
mov
pop
out
sahf
les
icebp
das
fistp
dec
xchg
mov
mov
sti
(bad)
xchg
push
pushf
(bad)
aas
aaa
mov
push
cmp
outs
add
jl
inc
fbstp
lock
xchg
into
pop
jecxz
jo
out
push
push
push
outs
cmp
div
out
xchg
pop
outs
cmp
pop
es
pop
call
pop
ins
pop
pop
fistp
ds
sub
push
es
cli
ror
pop
outs
aaa
mov
pop
sahf
mov
out
aaa
into
ficom
aaa
pop
cs
add
dec
xchg
jg
neg
dec
cmp
rcr
push
sahf
and
xchg
into
inc
aaa
xchg
fdivrp
sar
es
xchg
push
jg
dec
and
sbb
rcl
xor
(bad)
inc
ins
out
inc
cmp
xchg
pop
cmps
lea
(bad)
and
aaa
mov
out
fbstp
loopne
sti
add
and
xchg
jb
pop
mov
inc
push
mov
add
mov
data16
pop
push
jmp
xchg
mov
mov
(bad)
fisttp
xlat
test
pop
xchg
sub
(bad)
jns
mov
fwait
test
inc
pop
addr16
jp
adc
push
xlat
jae
inc
cmp
pop
pop
jno
adc
outs
mov
lods
lahf
mov
arpl
outs
inc
jmp
fistp
mov
dec
aam
pop
lods
inc
pusha
adc
push
outs
fistp
loopne
xor
or
adc
addr16
add
xchg
stos
jbe
adc
push
shr
iret
cwde
pop
pop
sub
outs
jl
imul
lea
and
daa
push
mov
rcl
push
(bad)
dec
lahf
inc
movs
in
pop
pop
mov
cmp
and
(bad)
(bad)
add
aas
fwait
es
push
cmp
and
xchg
jg
(bad)
jecxz
outs
push
pop
shl
loopne
jbe
xchg
ds
aaa
ds
sti
mov
xor
paddusb
sbb
cmps
push
push
lock
outs
pop
ja
or
inc
outs
fiadd
add
ud0
outs
jl
pop
es
das
add
cmps
pop
nop
aaa
inc
and
movd
pop
test
fld
sub
mov
jo
add
xchg
aas
pop
push
sti
rol
push
fdivr
ss
pop
js
into
out
es
xchg
xchg
push
aaa
pop
mov
call
hlt
pop
(bad)
outs
xchg
add
das
add
push
xchg
(bad)
sbb
xchg
dec
sbb
jmp
ret
pandn
push
cmp
or
es
sub
nop
pop
sahf
(bad)
pop
push
push
or
imul
jo
pop
das
clts
inc
jb
in
push
addr16
pop
out
les
pop
pop
push
test
data16
mov
ja
xchg
and
push
add
xlat
fistp
pop
inc
out
cmp
fadd
sbb
ja
and
outs
jl
(bad)
jl
push
or
pop
lods
daa
outs
jp
aaa
ds
jo
mov
lea
or
jp
dec
mov
push
jno
les
adc
pop
rol
popa
outs
push
add
idiv
outs
iret
dec
mov
mov
inc
push
adc
inc
lods
dec
cmp
nop
movs
mov
je
push
imul
xchg
outs
and
dec
out
mov
(bad)
test
imul
add
(bad)
push
pop
ja
aam
jmp
push
xchg
in
(bad)
mov
ss
lods
inc
xchg
mov
jle
div
lea
push
out
mov
xchg
push
dec
fwait
cmp
add
pushf
scas
imul
out
sar
inc
out
fist
call
fwait
daa
mov
mov
mov
sbb
pop
aas
daa
sahf
into
ds
push
in
rol
pop
dec
int3
pop
pop
dec
pop
(bad)
sbb
xor
mov
push
jb
sub
(bad)
cmp
(bad)
ror
out
loopne
mov
ret
cld
aam
pop
imul
fwait
and
xchg
aaa
outs
aas
add
rcr
push
or
jbe
jbe
pop
setp
imul
xchg
pop
mov
inc
ss
rcr
and
das
push
addr16
inc
rol
fisttp
jg
xchg
ds
(bad)
xor
pop
sbb
sti
(bad)
pop
addr16
out
ds
ds
aas
jle
xchg
pop
test
mov
xchg
xchg
dec
daa
es
push
xchg
push
pushw
imul
pop
xchg
(bad)
mov
out
mov
push
clc
jbe
mov
nop
mov
jle
imul
daa
and
dec
or
outs
mov
pushw
mov
xchg
push
es
outs
dec
dec
pop
mov
dec
cs
test
pop
test
push
inc
dec
mov
push
adc
js
outs
(bad)
jno
fstp
add
adc
emms
in
cmp
outs
fbld
sub
sbb
jle
xor
xlat
push
sti
xchg
push
or
es
das
jbe
or
lahf
test
jp
add
push
push
cmps
push
imul
inc
add
push
sub
mov
cmp
push
inc
mov
sub
and
pusha
(bad)
aad
out
push
imul
test
adc
sub
sahf
dec
push
jg
push
pop
push
(bad)
daa
push
adc
add
cmp
push
cdq
adc
xlat
add
jbe
pop
pop
push
jbe
fisttp
dec
rol
or
loopne
aaa
aas
sti
xchg
mov
aas
cmps
inc
sar
dec
jbe
and
daa
addr16
xchg
aaa
push
(bad)
xlat
iret
aaa
bsf
movzx
fidivr
(bad)
pop
xchg
aaa
in
ja
setp
daa
pop
(bad)
push
push
cmp
aaa
jmp
dec
call
push
pop
(bad)
pop
out
add
inc
pop
outs
aaa
pop
ss
aas
daa
iret
inc
test
pop
lea
cwde
addr16
int
fdiv
loopne
lock
ds
push
jg
outs
jmp
das
push
out
outs
mov
out
pop
repz
push
push
xchg
outs
push
jge
push
sub
push
and
cmp
inc
ins
pop
pop
xchg
add
push
enter
ds
out
out
inc
xchg
xchg
pop
xchg
nop
mov
lock
pop
daa
nop
out
aaa
cmps
es
jg
(bad)
mov
mov
aas
jp
pop
packuswb
ror
inc
push
push
xlat
les
add
mov
add
push
xchg
pop
rol
cmps
push
fs
rol
test
test
mul
push
cmp
and
dec
aaa
mov
push
scas
out
outs
sbb
xlat
sbb
xchg
xor
mov
pop
and
es
push
push
jno
jo
ror
jne
mov
xchg
dec
dec
pop
mov
fs
pop
outs
ja
mov
xchg
pop
dec
adc
dec
xchg
add
movs
xlat
outs
sbb
mov
inc
imul
mov
gs
adc
push
and
out
add
cwde
stos
(bad)
lock
push
(bad)
push
fsubr
pop
mov
push
cmp
push
mov
inc
cdq
das
pop
pop
push
pop
addr16
daa
rol
jl
push
mov
shl
mov
imul
cmp
sbb
push
push
das
(bad)
jbe
pop
add
jge
fcomp
xchg
(bad)
push
push
xchg
neg
jge
push
pop
push
pop
addr16
xchg
push
pop
loopne
xlat
xchg
jne
mov
call
(bad)
fbstp
pop
pusha
imul
dec
pop
into
ins
pop
jne
jo
pop
addr16
xchg
aas
outs
fild
mov
cmp
push
call
inc
imul
outs
icebp
test
es
jo
shl
xchg
outs
jle
xchg
in
sbb
pop
scas
push
jmp
xchg
mov
mov
in
rcr
push
(bad)
xlat
jl
pop
mov
lahf
xchg
jg
jo
outs
(bad)
(bad)
xchg
xchg
ret
pop
mov
inc
aaa
(bad)
cdq
aaa
mov
cwde
dec
aas
cmp
pop
aaa
retf
or
inc
push
inc
aaa
jbe
xlat
out
adc
dec
pop
inc
push
loop
das
(bad)
jbe
xor
push
xchg
push
nop
setno
xchg
nop
outs
jp
inc
pusha
outs
iret
nop
pop
imul
adc
jle
(bad)
les
push
das
mov
mov
mov
push
mov
jmp
enter
dec
add
dec
sti
pop
mov
pop
mov
jbe
jle
mov
add
pop
outs
mov
pop
into
add
sahf
out
add
outs
pop
jle
push
sbb
cwde
pop
push
test
inc
clc
(bad)
aam
pop
pop
adc
add
mov
mov
pop
adc
rcr
test
mov
mov
iret
ja
fild
add
mov
cmp
mov
xchg
sbb
pop
pop
fst
jbe
out
fcmovb
call
daa
pop
inc
mov
adc
push
inc
outs
pop
pop
xchg
lock
ds
xchg
stos
push
ja
add
rol
(bad)
es
das
das
pop
inc
push
and
xchg
outs
popw
out
add
fsubp
rcr
(bad)
push
pop
push
cmp
mov
mov
(bad)
cmp
pop
sub
pop
push
cmps
ins
fild
mov
pop
outs
daa
mov
pop
js
pop
pushf
push
cmps
fwait
out
fcmovnu
(bad)
out
pop
inc
mov
dec
push
xchg
pop
jo
adc
cmp
mov
(bad)
jge
std
out
mov
inc
pushf
xchg
aaa
out
test
dec
push
out
sub
outs
scas
iret
pop
xor
inc
mov
shl
dec
push
xchg
and
mov
aas
push
push
pop
das
aaa
data16
ds
cdq
cmps
pop
sar
push
scas
addr16
ins
arpl
cmp
xchg
ins
daa
aas
xchg
aaa
mov
outs
xchg
daa
mov
rol
daa
xchg
aas
movups
rol
aaa
xchg
push
sub
in
pop
xchg
es
jle
jg
(bad)
repnz
out
sbb
mov
add
aaa
out
fcom
push
cs
or
or
ja
pop
push
pop
mov
nop
ja
outs
out
add
xor
dec
ja
pop
test
fnsave
jge
adc
push
ja
and
es
pop
movaps
mov
pop
shl
orps
sbb
pop
out
xchg
mov
fild
xchg
pmuludq
inc
xlat
fdiv
inc
push
cs
ja
ret
dec
push
xlat
push
das
aaa
pop
push
xchg
pop
xlat
pop
rcr
call
jbe
pop
ds
or
outs
lods
or
imul
or
cwde
xlat
arpl
sbb
lahf
adc
mov
pop
out
(bad)
pop
ror
mov
mov
pop
cmp
push
xor
dec
pusha
inc
lods
dec
add
call
pop
iret
div
add
pop
imul
cmp
imul
xchg
push
pop
pop
nop
movaps
sbb
jle
cmp
ins
daa
fbstp
call
(bad)
jle
lahf
pushf
xchg
das
setns
jo
dec
ss
popf
not
js
pop
push
dec
pop
pop
mov
cmp
sbb
dec
jnp
maxps
movq
movq
ins
pop
inc
ret
push
mov
aas
inc
divps
add
call
jecxz
(bad)
addr16
ror
push
pop
xchg
outs
cdq
push
dec
xor
mov
ja
(bad)
mov
jo
div
fidiv
data16
jcxz
loopne
push
pop
xchg
ins
pop
jg
neg
jge
outs
pop
lahf
fdivp
add
pop
addr16
dec
xchg
lods
jnp
into
not
(bad)
pop
push
js
cmp
outs
xchg
pop
aas
ds
add
into
outs
addr16
jecxz
add
outs
push
jg
push
in
xor
push
sbb
cwde
setae
lahf
pop
mov
cmp
test
mov
daa
push
(bad)
push
pop
push
adc
push
inc
dec
imul
lea
sti
xchg
jbe
addr16
mov
xchg
mov
fist
gs
xor
aas
outs
data16
mov
pop
test
arpl
test
push
addr16
sahf
adc
mov
pop
add
sub
rcl
jae
mov
push
out
pop
ss
nop
movs
adc
jmp
jns
dec
inc
(bad)
inc
or
rcl
ja
outs
pop
sub
cs
push
jb
dec
add
mov
rol
outs
outs
outs
pop
stos
dec
dec
das
mov
fs
pop
xor
les
fstp
push
and
arpl
and
inc
je
push
out
jo
mov
xor
or
cdq
sub
cmp
push
xchg
jns
fdiv
xchg
(bad)
mov
outs
imul
jae
jmp
pop
xchg
ds
scas
mov
aaa
xchg
push
xchg
or
fwait
dec
cdq
daa
pop
mov
in
adc
pop
ja
sti
jb
outs
(bad)
pushf
push
icebp
fnstsw
pop
push
push
xchg
pop
pop
push
mov
mov
fsub
setge
xor
dec
xchg
mov
xchg
es
pavgb
das
daa
push
aas
pusha
imul
das
xchg
scas
xchg
cvttps2pi
fcomp
push
mov
push
sbb
test
ret
mov
ja
jb
xor
and
(bad)
out
sbb
mov
icebp
rcr
aas
pop
outs
mov
push
pop
ds
add
xchg
xchg
data16
loopne
dec
pop
xchg
movd
fdivr
das
push
addr16
daa
(bad)
mov
pop
lahf
xchg
outs
aas
xchg
neg
pop
(bad)
cmp
addr16
push
outs
xchg
mov
xchg
aaa
(bad)
sub
sbb
jbe
dec
(bad)
jbe
(bad)
das
add
mov
out
sub
mov
fbstp
add
jle
fnsave
dec
mov
mov
jmp
fnstsw
es
mov
lahf
mov
loopne
ja
mov
xchg
inc
outs
xlat
fs
pop
(bad)
lock
sar
je
push
push
sbb
dec
cmp
out
movs
fld
cmp
daa
mov
subps
sbb
data16
(bad)
fild
outs
sbb
(bad)
pop
push
dec
(bad)
retf
les
outs
std
and
cmovb
xchg
in
inc
push
cmovl
in
(bad)
jno
or
ror
jo
pusha
pop
xchg
pusha
or
jbe
pop
push
sub
pushf
test
ja
mov
add
mov
adc
aaa
add
add
add
push
out
add
mul
out
pop
pop
mov
push
cdq
xchg
xchg
sbb
pop
ja
data16
int
xchg
(bad)
xchg
pop
call
xchg
push
fwait
cs
or
ss
xchg
call
add
add
pop
push
pop
shr
ret
pop
(bad)
push
pushw
pop
jmp
pop
js
nop
scas
out
push
popf
or
push
(bad)
xchg
ja
xor
cmp
add
push
aas
mov
pushf
packuswb
sar
jg
ja
mov
pushf
xchg
daa
lods
add
add
out
lock
pop
mov
add
push
imul
xchg
cmps
gs
xchg
ja
sahf
addr16
dec
add
pusha
xor
test
lahf
pop
xchg
out
push
lahf
retf
jg
xchg
cmps
ins
ins
pushf
jp
out
daa
loopne
pop
and
ja
jp
xchg
(bad)
cwde
ins
xchg
das
cmps
xchg
push
(bad)
add
fild
out
(bad)
into
out
xchg
fstp
or
add
es
pop
ss
cs
push
xchg
xchg
arpl
mov
xchg
das
shl
mov
xchg
nop
push
mov
outs
pop
mov
(bad)
jnp
lods
aaa
(bad)
ss
add
cld
(bad)
xlat
(bad)
dec
jge
in
jbe
push
imul
pushf
ds
out
mov
inc
inc
mov
push
sti
mov
movhps
data16
inc
loopne
les
mov
xchg
test
push
test
xor
mov
mov
push
push
push
outs
pop
mov
fcomp
jbe
pop
mov
ror
mov
mov
mov
push
addr16
adc
(bad)
out
imul
and
push
dec
je
mov
adc
icebp
out
push
outs
push
pop
(bad)
je
sbb
push
outs
jmp
lods
sbb
jmp
mov
fild
cmp
outs
pop
pop
pop
xchg
mov
ja
addr16
fild
jge
and
push
movs
jg
aaa
test
pop
lahf
add
add
inc
shl
inc
aaa
out
stos
add
jnp
pop
ficom
addr16
add
jmp
push
daa
xchg
pop
pop
ret
jle
fwait
xchg
cdq
pop
das
imul
sti
xchg
pushf
rol
sbb
pop
pop
loopne
pop
js
xchg
aas
jo
pop
js
mov
push
hlt
xchg
pop
call
ss
jl
xor
aaa
mov
into
xchg
jns
fwait
daa
dec
call
push
push
aas
push
fcomi
lea
dec
(bad)
jnp
pop
push
xlat
vmread
mov
mov
pop
aaa
das
xchg
xor
daa
das
test
mov
(bad)
mov
jge
iret
scas
xchg
jg
push
add
lock
pop
(bad)
pop
aaa
ficom
iret
dec
(bad)
jg
sub
fst
push
xchg
pop
xchg
js
mov
mov
daa
out
jnp
mul
pop
pop
pop
lahf
stc
mov
dec
ins
pop
xchg
pop
fidivr
inc
outs
punpckhdq
pop
sbb
pop
push
aaa
push
js
addr16
mov
ins
jnp
jmp
inc
nop
pop
(bad)
pop
daa
(bad)
jo
imul
mov
je
lea
pop
lea
xchg
mov
cs
push
mov
lea
inc
fdiv
sbb
mov
push
mov
sbb
jle
push
outs
fs
mov
test
inc
mov
out
les
maxps
pushw
push
add
lods
pop
pop
daa
xchg
aaa
mov
and
outs
cs
montmul
cmps
cmp
or
jle
out
cld
sbb
jns
mov
jmp
mov
sbb
mov
(bad)
dec
jne
cmp
dec
imul
mov
push
js
and
out
xlat
push
lea
pusha
(bad)
scas
jbe
outs
jbe
fcomp
enter
movs
cmp
mov
jg
bound
imul
call
test
mov
xchg
add
adc
push
push
xlat
ror
das
add
push
jl
outs
xchg
jbe
dec
xchg
pop
paddusb
xchg
enter
xchg
push
cwde
push
pop
test
xchg
cmp
add
loopne
aas
popf
xchg
push
sbb
imul
addr16
daa
aaa
dec
daa
sub
pop
data16
push
sysret
xchg
imul
rol
jmp
or
jae
pushf
xchg
push
pushf
cmps
mov
xchg
mov
das
lods
or
xor
addr16
xchg
pop
xchg
aas
addr16
ror
fisttp
mov
cmp
out
push
push
into
out
cs
xchg
ror
not
cmps
ss
push
push
push
xchg
add
jbe
nop
push
out
fstp
ds
cmps
inc
sub
loopne
xchg
pop
mov
push
outs
pop
imul
jg
lahf
xchg
mov
add
vmwrite
push
push
push
loope
arpl
push
nop
push
outs
xchg
in
sbb
pop
pop
inc
xchg
out
push
aam
add
icebp
push
clc
call
xor
jle
imul
inc
movs
sbb
data16
xor
cli
idiv
mov
lahf
sbb
js
mov
not
mov
add
nop
jnp
push
mov
(bad)
fisttp
test
test
cmp
mov
push
push
jnp
outs
lods
pop
dec
push
out
pop
loopne
setl
jg
pop
cmp
je
cmp
mov
rol
outs
jle
jnp
(bad)
mov
ja
daa
jns
or
fstp
dec
pop
add
add
call
nop
xor
or
ret
dec
outs
lods
les
movs
pop
ds
je
push
mov
push
lods
(bad)
dec
push
xchg
icebp
lea
fbld
outs
pop
int
mov
out
sti
xchg
pop
fild
adc
sbb
(bad)
cmp
mov
dec
push
pop
mov
jo
xor
call
push
pop
xchg
setbe
xchg
jnp
sub
sysret
sbb
jnp
cs
cwde
sets
fild
call
ja
clc
dec
call
neg
mov
pop
ja
retf
add
pop
fild
cmps
pop
(bad)
out
mov
pushf
push
bound
fwait
out
outs
adc
dec
pop
daa
mov
lahf
xchg
lahf
inc
jo
push
(bad)
cmps
mov
daa
cbw
push
fistp
imul
mov
push
and
adc
push
pop
addr16
mov
pop
mov
xor
xchg
pop
pop
daa
push
sar
out
daa
addr16
imul
cmps
xchg
xchg
js
mov
push
(bad)
outs
pop
fbstp
(bad)
fidivr
ss
pop
inc
pop
inc
loopne
fild
daa
pop
scas
or
push
or
vmread
mov
dec
fild
push
es
imul
xchg
outs
jl
add
xchg
add
mov
pop
fsubp
fild
mov
das
xchg
movs
loope
add
pusha
and
(bad)
lea
jb
fidivr
mov
out
(bad)
jcxz
clc
and
pop
arpl
dec
data16
(bad)
cs
(bad)
fst
das
pop
out
pop
lods
mov
aaa
push
push
jge
imul
icebp
and
shl
adc
push
pusha
jmp
jbe
fiadd
ds
jnp
pop
imul
jo
js
dec
mov
jecxz
cmps
js
xlat
jg
jge
dec
sub
out
call
push
push
push
jno
or
shl
ss
(bad)
mov
sbb
push
mov
push
pop
push
int3
lea
inc
fbld
es
imul
xchg
aas
pop
xlat
ror
(bad)
fbstp
push
shr
addr16
out
dec
xor
and
xor
iret
inc
mov
lds
movs
push
mov
dec
inc
lods
or
add
test
sysret
jmp
data16
cdq
cdq
in
xchg
add
mov
cwde
aas
cwde
fwait
pop
xchg
pop
cdq
push
mov
pop
pop
pop
cmp
xchg
imul
movs
in
push
rcr
aaa
push
pop
dec
pop
push
daa
pushf
jne
mov
inc
aaa
ja
iret
fwait
in
aaa
test
xlat
xchg
jg
fsubr
or
das
fdivr
data16
dec
imul
int3
jg
aas
pop
mov
inc
pop
push
out
loopne
cmove
data16
jb
inc
aaa
pop
mov
push
mov
xchg
pop
ret
jmp
daa
iret
xchg
sar
xchg
out
lock
getsec
addr16
dec
cmp
xchg
xchg
cmps
mov
ins
inc
mov
div
imul
out
mov
outs
jp
sub
xchg
aaa
xchg
dec
jl
aaa
mov
std
xchg
movhps
scas
(bad)
lea
jle
pop
pop
mov
mov
mul
cs
xchg
aas
pop
aaa
pop
pop
in
dec
ds
xchg
xchg
ins
int
mov
cmovle
(bad)
adc
rol
fcom
push
cs
popf
sbb
lea
mov
mov
daa
push
xchg
into
mov
push
mov
xor
es
cmps
daa
push
mov
xchg
add
dec
xchg
aaa
(bad)
bound
clc
outs
pop
psubb
lahf
or
add
cdq
out
pop
jmp
sbb
or
(bad)
in
(bad)
fiadd
fidiv
push
push
pop
ja
test
sbb
call
data16
add
push
inc
jnp
ficomp
fdivrp
push
icebp
rcl
fidivr
inc
mov
sub
dec
ja
sub
neg
xlat
daa
jne
jmp
push
and
(bad)
out
pop
adc
sbb
add
dec
das
xlat
dec
movs
or
adc
rol
mov
or
pop
stos
rol
ficom
in
xchg
cdq
outs
cdq
jg
cmp
cmp
pop
cmp
ja
sahf
add
pop
fwait
iret
pop
push
cwde
enter
jbe
call
pop
push
fistp
pop
(bad)
jg
dec
lea
dec
cdq
aaa
push
pop
jbe
(bad)
imul
(bad)
lahf
xchg
out
pop
mov
(bad)
mov
pop
push
lods
scas
push
xchg
cs
adc
setbe
ds
call
nop
jg
xchg
pushf
lock
dec
mov
fnstsw
pop
or
push
mov
sahf
loopne
ret
fmul
add
inc
xchg
(bad)
aaa
xchg
mul
clc
(bad)
mov
(bad)
jg
push
fimul
fiadd
ds
ss
push
ins
dec
push
stc
sub
ins
or
cwde
mov
scas
orps
daa
aaa
pop
test
out
xchg
mov
test
(bad)
xchg
jg
lea
test
mov
xlat
shufps
(bad)
pop
dec
jle
pop
mov
add
and
push
pop
lea
icebp
(bad)
cdq
jo
scas
mov
out
fist
push
mov
jne
jge
push
jnp
js
mov
cmps
mov
mov
clc
dec
arpl
(bad)
ds
xchg
push
call
dec
pop
xchg
adc
cmovle
je
add
sbb
push
addr16
fimul
fdivr
dec
cmp
jl
(bad)
jp
xchg
pop
ds
pop
jl
mov
jl
cmp
sahf
jne
ja
rol
jo
outs
jg
sbb
hlt
outs
je
pop
loop
adc
push
lahf
aaa
(bad)
lea
outs
sbb
xchg
loopne
das
push
jno
mov
out
xchg
xchg
lock
into
mov
jg
out
sbb
or
fcom
jbe
or
pop
aad
and
mov
movs
xlat
sbb
minps
or
sub
adc
loope
inc
push
cs
jo
add
push
pcmpgtd
jns
cmp
pop
pop
push
xchg
data16
shl
ja
dec
push
js
rol
pop
jb
sbb
call
push
pop
push
pop
pop
xchg
loopne
fdivp
fwait
call
push
jecxz
xor
xchg
out
jno
ds
in
mov
jbe
aas
push
xchg
pop
into
jp
mov
xchg
jbe
jecxz
imul
fld
xchg
push
or
cwde
lahf
call
dec
xlat
pop
div
pop
xchg
xchg
push
pop
mov
scas
mov
loopne
add
aas
xchg
jle
jo
inc
idiv
xchg
addr16
jnp
add
dec
push
pop
ins
imul
jbe
test
push
mov
divps
pop
data16
push
xchg
loopne
ins
imul
out
jns
imul
inc
ret
push
xchg
xchg
lea
(bad)
push
scas
cs
shr
xchg
push
rcr
mov
inc
push
test
iret
es
rcr
dec
xchg
outs
mov
sbb
mov
jne
mov
push
mov
mov
mov
fdivr
cmp
out
(bad)
sbb
loopne
push
inc
mov
add
sti
scas
fs
arpl
pop
mov
mov
xchg
cmp
fimul
cmps
sbb
mov
jmp
pop
pop
push
test
add
add
dec
lods
cmp
jg
aaa
push
js
outs
out
out
cmp
jnp
jp
pop
out
add
push
pop
js
jbe
scas
sbb
je
xor
inc
outs
cmp
shl
xchg
pop
into
fnsave
cmovle
jmp
cmp
outs
sbb
inc
xchg
mov
imul
out
cmp
inc
push
push
adc
psubsw
inc
outs
dec
imul
fldenv
pop
lahf
ins
lods
pop
dec
xlat
ds
sub
leave
inc
call
inc
test
inc
call
andps
stos
cmp
or
pop
aas
sbb
mov
fwait
mov
pushf
mov
(bad)
mov
fisttp
ja
xchg
pushf
pushf
ss
sahf
cs
clc
std
call
das
cwde
popf
xchg
ins
and
add
cmp
jb
cdq
jg
pop
mov
push
jle
icebp
add
xor
scas
aaa
iret
cdq
inc
mov
cs
(bad)
addr16
adc
fld
call
mov
pop
daa
into
lock
out
(bad)
xchg
pop
pop
nop
mov
dec
add
push
sub
pop
dec
xchg
pmaxub
xchg
pop
xchg
outs
pop
push
pushf
xor
out
out
push
popf
neg
or
pop
push
imul
repz
xchg
pop
pop
fwait
xchg
xchg
add
out
xor
xchg
outs
sahf
call
xchg
out
mov
pop
scas
fistp
nop
xchg
shr
adc
push
push
scas
pop
ins
out
mov
push
pop
xchg
(bad)
fistp
je
xchg
pop
mov
es
test
xchg
dec
xchg
xchg
push
cli
inc
xchg
aas
outs
xlat
pop
lock
cwde
add
push
ss
fidivr
push
jbe
cs
lods
cmps
fimul
out
pop
inc
outs
inc
push
popw
mov
pop
mov
jbe
add
mov
ret
xchg
gs
test
dec
xchg
scas
push
jl
add
jbe
mov
push
pop
sbb
ss
mov
cmp
outs
pop
lea
add
pop
ds
out
(bad)
jnp
pop
jne
inc
loopne
pcmpgtd
je
inc
andps
push
push
or
fimul
outs
jp
push
js
push
shl
jns
data16
inc
xchg
ins
and
shl
outs
dec
arpl
inc
ja
nop
jb
dec
xlat
pop
movs
cwde
pop
or
outs
faddp
inc
jmp
pop
mov
aam
pop
inc
aaa
inc
pop
mov
arpl
inc
outs
jg
sbb
dec
add
mov
mov
cs
dec
adc
add
fdivrp
ds
popf
push
lahf
addr16
gs
xor
jge
pop
jg
sahf
aas
movs
jbe
or
jle
popf
imul
fnsave
push
pop
outs
mov
cdq
addr16
fild
pop
js
scas
sahf
pop
add
fiadd
push
pop
setl
aaa
cwde
pop
cwde
popa
xor
outs
pop
xlat
hlt
push
ficomp
jbe
not
or
out
ss
xchg
faddp
idiv
xchg
stos
mov
dec
sete
outs
mov
push
xchg
jo
fistp
sysret
xchg
xchg
fwait
out
add
pop
xchg
mov
out
push
data16
xchg
fistp
jmp
fdivrp
shr
lahf
daa
mov
pop
imul
pop
push
xchg
das
sub
xchg
(bad)
daa
(bad)
jle
loopne
loopne
xlat
dec
addr16
sbb
data16
xchg
sti
rol
inc
push
outs
pop
sbb
mov
fsub
out
xchg
pop
arpl
nop
test
inc
test
lsl
in
pop
lea
push
(bad)
pop
sahf
push
push
mov
ror
(bad)
pop
mov
mov
fiadd
out
push
jbe
(bad)
aas
jo
cmp
(bad)
mov
pop
cs
push
test
ins
pop
add
(bad)
pop
or
cmp
jg
pop
cs
jge
(bad)
(bad)
push
mov
push
outs
pop
(bad)
push
clc
rol
pop
outs
data16
xor
xor
sbb
push
in
add
pop
aas
jo
movq
lea
aas
ja
adc
mov
xor
dec
add
dec
out
repnz
cmp
cmps
inc
sub
pop
outs
inc
mov
xchg
inc
push
push
mul
mov
add
mov
(bad)
push
add
cmp
pop
iret
inc
dec
adc
xchg
fild
hlt
stos
xchg
pushf
cs
push
push
lahf
fs
cmp
sahf
jg
push
ficom
push
mov
mov
ins
mov
aas
pop
daa
cdq
pop
mov
jae
add
cdq
loopne
sbb
pop
push
push
push
data16
ds
push
mov
pop
dec
loopne
aas
pop
pop
fcmovnu
call
mov
xchg
aaa
imul
dec
sete
mov
dec
push
xchg
ja
lods
pop
popw
xchg
(bad)
push
rcr
dec
cdq
inc
mov
cdq
mov
pop
jle
mov
pop
lahf
xchg
push
xchg
(bad)
jbe
sahf
push
xchg
push
(bad)
jbe
ss
mov
pop
xchg
es
sub
cmp
es
pop
pop
add
mov
jle
das
pop
xchg
(bad)
jne
fidivr
mov
xchg
jge
pop
out
mov
pop
sahf
(bad)
pop
xchg
test
xchg
imul
fistp
jg
das
pop
xchg
dec
mov
mov
das
mov
scas
add
sub
pop
mov
lea
pop
xchg
mov
mov
outs
mov
mov
push
ja
push
pop
mov
push
dec
nop
push
mov
jo
mov
mov
ins
out
sar
sysret
ja
js
add
xor
jbe
data16
add
pop
outs
dec
push
pop
add
inc
push
test
(bad)
push
outs
or
(bad)
push
mov
outs
cmp
lock
jle
lea
es
mov
ds
ficomp
(bad)
cmc
data16
js
push
jp
clc
(bad)
mov
out
in
rol
pushw
js
push
sbb
cmp
xchg
addr16
xlat
ja
test
sbb
inc
sub
ja
rcr
jae
sahf
mov
pop
mov
xchg
bound
(bad)
dec
outs
xor
es
data16
jmp
fild
push
outs
pop
outs
xlat
or
dec
aaa
out
inc
daa
test
shr
xchg
xlat
mov
push
sub
or
stos
add
adc
sbb
cmp
mov
sub
gs
mov
add
push
addr16
psubq
xor
xor
psubsw
ja
call
lahf
mov
push
sub
addr16
push
jae
pop
xchg
data16
fldcw
pop
cli
ror
mov
push
mov
xchg
out
vmread
cmp
mov
gs
dec
push
cs
jmp
pop
push
sahf
cmps
inc
cmp
inc
das
mov
cmp
xchg
inc
es
or
jle
mov
mov
inc
pandn
xchg
push
ds
dec
fistp
lock
cmps
jle
xlat
or
pop
call
mov
ucomiss
jbe
cli
rcr
jbe
scas
xchg
jae
jbe
pop
not
xchg
daa
mov
nop
push
(bad)
xchg
mov
pop
div
nop
mov
ds
pushf
push
out
xchg
pop
cmps
aas
pop
add
sbb
fstp
and
push
pop
mov
mov
push
mov
js
fimul
imul
jo
sub
jae
cdq
pop
mov
pop
(bad)
ss
ret
push
jne
push
imul
mov
mov
or
pop
arpl
test
ficomp
mov
push
add
sub
xchg
add
or
pop
out
outs
pop
push
dec
push
add
ds
jg
pop
cmp
jg
pop
es
mov
addr16
jge
pop
jge
aaa
sbb
out
jbe
add
adc
outs
outs
loopne
jno
pop
jne
pop
iret
add
js
push
push
push
ja
out
add
daa
jno
jb
outs
cmp
daa
push
jns
or
mov
lahf
inc
mov
dec
push
aaa
je
mov
ja
jp
dec
js
daa
data16
es
dec
aaa
xchg
xor
clc
(bad)
pop
pop
push
push
ja
xlat
pop
inc
or
fmul
sub
femms
imul
xor
mov
xchg
ds
outs
out
and
jg
and
dec
adc
adc
inc
dec
out
out
jbe
gs
push
das
push
push
nop
mov
rcl
pop
das
pcmpeqw
jb
xchg
pop
ds
push
or
mov
pop
push
aaa
outs
inc
shl
push
ins
pop
cli
ja
pop
mov
fld
push
pusha
add
comiss
test
dec
pop
into
xchg
loopne
sub
pop
inc
push
cwde
xchg
mov
scas
cs
cmps
xchg
pushf
jge
fiadd
inc
aas
push
xchg
test
daa
imul
rol
xchg
pop
(bad)
icebp
or
xchg
mov
addr16
sahf
push
pushf
ins
daa
js
pop
outs
popf
inc
(bad)
pushf
ins
push
das
loopne
pop
(bad)
(bad)
(bad)
mov
xchg
cwde
das
pop
(bad)
mov
nop
ja
das
nop
pop
lock
push
imul
ins
pop
outs
aaa
xchg
addr16
mov
pop
cmp
and
pop
xchg
fisttp
mov
push
add
es
clc
pop
push
fadd
mov
gs
outs
mov
cs
lock
das
push
pop
mov
imul
mov
lea
push
jbe
mov
mov
xchg
pop
js
jbe
xchg
cmp
outs
fadd
bound
add
fcomp
pop
xchg
cmp
mov
pop
push
add
cmp
inc
pop
fidiv
cmps
imul
adc
jecxz
or
push
jle
bound
mov
push
jge
rcr
push
jle
pop
push
xor
pop
jl
jnp
ja
or
pop
jns
cmp
lea
mov
outs
mov
test
jbe
push
mov
jmp
test
push
dec
cmp
aas
outs
call
je
imul
xchg
bound
push
pop
dec
ja
fimul
das
iret
pop
test
test
dec
add
imul
lods
fld
mov
mov
lods
sub
out
or
xchg
call
add
sub
fistp
addr16
sti
mov
add
pushw
shl
or
fucomp
xchg
aaa
punpckhbw
es
push
cmp
pop
jle
pop
push
iret
add
scas
push
ss
inc
loopne
test
neg
push
push
enter
imul
add
aaa
setge
push
cmp
dec
into
aas
pop
xchg
inc
(bad)
pop
pop
loopne
loopne
ja
out
test
add
mov
das
sahf
psrld
push
mov
test
jle
push
iret
xchg
nop
mov
idiv
mov
lock
xchg
mov
cmp
aaa
pop
mov
mov
(bad)
(bad)
nop
jg
cs
and
das
outs
in
add
push
(bad)
ss
pop
aaa
pop
jbe
sbb
outs
push
jns
mov
seto
aaa
aas
push
outs
jbe
nop
pop
push
fmul
scas
pop
aam
outs
cmp
pop
inc
mov
mov
(bad)
xlat
xchg
pop
xchg
push
in
sub
aas
jo
addr16
mov
xchg
push
xchg
pop
dec
or
out
push
ds
idiv
setbe
xchg
mov
inc
push
xchg
mov
outs
jae
test
dec
cs
test
mov
into
test
(bad)
mov
sbb
jo
adc
out
sbb
clc
mov
push
test
sbb
js
test
jle
add
jl
sbb
(bad)
push
outs
divps
out
inc
mov
pop
fstp
add
jnp
push
retf
lea
inc
aas
sbb
rcr
and
bound
pop
je
push
outs
mov
shr
pop
(bad)
mov
jle
outs
jae
clc
lea
xchg
imul
(bad)
imul
dec
into
fbstp
arpl
movs
inc
imul
inc
out
pop
xchg
and
pop
out
(bad)
mov
movs
pop
addr16
xchg
bound
loopne
adc
push
ins
arpl
mov
sub
fild
test
pusha
adc
cs
dec
or
xor
push
and
mov
push
cmp
pop
div
sub
mov
mov
aaa
pop
push
push
mov
pop
pop
aaa
idiv
pop
xchg
pop
xchg
dec
pop
call
cwde
fiadd
out
retf
sub
(bad)
es
imul
pop
jmp
inc
pop
out
or
aaa
pop
imul
jg
push
dec
pop
lock
mov
pop
cmp
jecxz
sar
das
mov
ja
sbb
jge
pop
inc
xchg
jg
not
inc
scas
cs
es
xchg
loopne
jo
out
push
ficomp
push
popf
xchg
iret
cs
pop
into
fstp
ucomiss
jge
out
push
dec
push
daa
jle
je
cmps
out
push
out
ja
fsubr
ficom
fnstsw
add
push
mul
mov
addr16
fwait
lock
jnp
push
mov
or
into
cwde
push
jo
mov
push
push
mov
imul
das
xchg
push
mov
fstp
push
das
mov
outs
in
shl
ss
into
jmp
out
or
push
push
gs
cmp
jp
inc
ja
mov
lea
pop
mov
push
test
sbb
push
xchg
fistp
xchg
jo
xor
push
daa
push
iret
jmp
xchg
imul
mov
mov
push
(bad)
add
push
popa
outs
pop
js
add
mov
mov
sbb
inc
sub
push
pop
jle
xchg
sbb
mov
adc
jge
pop
lock
mov
jl
outs
push
cmp
outs
jnp
jp
push
jns
bound
pop
(bad)
js
shr
outs
fsubp
push
mov
push
hlt
outs
jns
js
adc
jne
push
je
loope
out
outs
pop
jae
es
pop
(bad)
ins
fcomip
lea
data16
je
in
and
rol
pushf
add
(bad)
lods
sbb
and
dec
push
push
mov
dec
inc
inc
outs
outs
sub
sbb
inc
fist
push
push
imul
and
push
cmp
sub
dec
push
inc
mov
cmp
mov
xor
das
pop
push
movs
pusha
mov
outs
mov
or
movs
push
in
pop
push
jle
iret
add
jl
emms
xchg
add
cmps
pop
movs
mov
mov
packuswb
out
jnp
jge
pop
xchg
xchg
push
aas
lock
add
into
aaa
setl
dec
push
es
out
xor
fwait
lea
ja
push
outs
sete
or
add
dec
mov
xchg
aaa
push
test
aas
sahf
cmp
lahf
(bad)
push
hlt
inc
cmps
ror
push
add
scas
push
xadd
sti
shl
ins
into
imul
add
lahf
outs
sub
cmps
add
out
outs
xchg
es
inc
pop
xchg
retf
out
add
pop
scas
pop
lods
idiv
xchg
mov
lahf
das
pop
pop
call
out
dec
lea
and
mov
dec
inc
push
dec
ins
movs
mov
push
push
js
lea
dec
pop
push
push
lds
mov
aaa
pop
inc
outs
aas
mov
mov
outs
xchg
dec
pop
inc
shl
mov
fiadd
sbb
push
xchg
mov
add
pop
jg
xchg
push
push
xchg
add
sar
add
sub
es
pop
mov
out
add
cs
fs
sub
jecxz
pop
ds
mov
ds
test
aaa
dec
xor
xchg
pop
push
xchg
jg
pop
jle
pop
pop
jle
push
pop
fimul
pop
pop
jle
pop
jecxz
pushf
pop
addr16
xchg
jl
pop
cmp
lea
push
mov
in
lea
cmp
mov
add
outs
push
int3
lahf
mov
(bad)
pop
ja
jns
push
sahf
ja
fadd
ja
push
jb
jb
push
push
push
icebp
shl
outs
pop
data16
mov
dec
out
aaa
cmps
popw
push
mov
sub
fild
jno
outs
push
rcr
pop
ins
(bad)
xchg
iret
pop
cli
xor
ins
cmove
pop
xchg
inc
(bad)
sbb
xlat
pop
pop
fs
push
pop
aam
pop
push
jg
add
pop
mov
xchg
sbb
nop
cmp
add
mov
lea
push
pusha
adc
loopne
push
mov
cmps
test
cs
push
enter
push
push
sysret
fidiv
xchg
xchg
das
imul
push
jbe
xchg
movs
(bad)
aaa
pop
fld
mov
mov
inc
pop
test
shl
out
das
scas
dec
outs
je
mov
pop
xchg
out
out
lods
in
movd
out
pop
jnp
fwait
jae
push
pop
mov
pop
mov
out
ror
xchg
mov
pop
pop
cmps
aas
xchg
dec
add
(bad)
jle
imul
mov
out
ds
push
outs
aaa
jbe
lahf
call
pop
xchg
std
outs
nop
sahf
addr16
xchg
pop
jg
ror
ja
pop
outs
cmps
sbb
mov
pushf
daa
adc
push
push
ds
jge
push
pop
setle
ja
in
mov
ins
push
call
pop
xchg
lea
mov
xchg
jmp
push
aaa
mov
call
cmps
pop
cmp
push
data16
mul
push
jbe
jns
ror
adc
ss
scas
xchg
inc
pusha
push
mov
data16
outs
cmp
inc
xchg
xchg
out
pop
neg
into
test
dec
inc
jae
add
or
cmp
mov
test
and
pop
clc
sbb
jbe
pop
mov
mov
pop
or
push
jbe
test
sti
and
push
jg
add
lock
cmp
shr
pop
pop
sbb
push
jnp
jnp
push
jnp
jp
cmp
mov
js
dec
push
into
sbb
fisttp
js
push
pop
xlat
nop
add
jle
addr16
sbb
je
outs
sbb
outs
jl
dec
out
jae
loop
cmps
mov
cmps
out
cwde
pop
out
add
lea
lock
js
xlat
push
packuswb
add
daa
and
adc
push
xchg
fdiv
pop
(bad)
jmp
and
push
xchg
call
test
outs
jg
xor
add
pop
(bad)
cmps
pop
dec
dec
adc
inc
inc
mov
lahf
aaa
mov
add
iret
ror
add
loopne
xchg
pop
cmps
pop
mov
movs
push
dec
movs
pop
cmp
inc
push
cmps
movs
xchg
push
push
imul
push
xchg
xchg
imul
mov
daa
addr16
in
iret
in
scas
das
inc
push
sbb
xchg
pop
outs
es
mov
loopne
es
popw
out
adc
xchg
xchg
jg
jmp
jne
imul
pop
add
pop
not
rol
cmp
out
xchg
mov
pop
push
hlt
shl
xchg
mov
and
ss
pop
(bad)
jnp
fstp
(bad)
(bad)
popf
push
inc
(bad)
jbe
push
nop
push
xlat
sahf
jbe
mov
daa
push
es
mov
pop
das
ins
outs
cs
sbb
movs
bnd
mov
popf
pop
pop
outs
cmp
xchg
push
mov
push
outs
cld
and
add
and
out
pop
pop
cdq
push
push
js
mov
outs
(bad)
sar
mov
add
repz
push
xchg
iret
in
cmp
push
nop
xlat
add
daa
ss
pop
test
scas
jnp
test
xchg
push
xchg
bswap
mov
push
(bad)
push
push
fucomi
push
loopne
mov
das
arpl
or
loopne
mov
mov
pcmpeqb
pop
popa
pop
pop
and
sbb
push
pusha
jb
pushf
retf
mov
fidiv
jbe
bound
es
pop
inc
inc
ret
ds
pop
push
inc
or
(bad)
popf
bound
test
or
sbb
sbb
mov
shr
outs
xor
jo
mov
js
push
jo
fisttp
push
push
jbe
ja
mov
je
add
retf
cmc
outs
jbe
ss
fwait
bound
dec
fidiv
jb
in
mov
sbb
push
ins
pop
xchg
pop
inc
ret
outs
mov
push
imul
cmp
push
jbe
push
xchg
in
fimul
xor
inc
gs
outs
ficomp
mov
es
pop
sahf
popa
dec
outs
pop
push
add
add
mov
pop
fild
imul
sbb
loop
data16
mov
mov
dec
cmp
pop
dec
inc
addr16
nop
cmps
ror
fld
cmps
imul
pop
movs
add
push
push
push
sti
rol
movs
mov
movs
punpcklbw
fiadd
mov
gs
je
xchg
pop
pop
push
add
mov
push
outs
pop
nop
inc
cmp
movs
pop
mov
push
shl
ret
mov
imul
mov
pop
dec
mov
outs
mov
pop
mov
rcr
aaa
enter
mov
xchg
das
cmc
mov
(bad)
(bad)
jg
ja
add
ins
das
dec
das
xchg
cmp
ds
jbe
mov
cmps
mov
mov
add
pop
add
fcomp
(bad)
mul
and
fstp
mov
popf
pop
lea
jge
(bad)
call
cs
push
xchg
mov
mov
daa
push
mov
mov
mov
addr16
xchg
mov
lea
jmp
push
loopne
dec
pop
ss
aaa
jbe
mov
push
xchg
push
cmps
fidivr
push
aaa
push
xchg
fs
cs
out
std
out
or
push
nop
pop
mov
push
(bad)
dec
mov
push
imul
adc
xor
outs
lea
or
fist
push
add
into
sbb
sub
mov
int3
(bad)
idiv
push
or
test
xchg
jge
push
test
test
add
cs
jnp
(bad)
pop
pop
js
dec
jl
add
fdiv
(bad)
cmps
pop
push
mov
jl
pop
jnp
ja
imul
js
jl
jno
addr16
jbe
pcmpeqw
lock
packuswb
(bad)
in
or
pop
jb
jge
sbb
dec
fidiv
ins
push
clc
(bad)
cdq
pop
jno
jo
add
dec
aaa
jle
push
(bad)
inc
pop
sbb
jle
scas
jb
outs
pushf
repnz
jae
(bad)
or
loope
jle
xchg
push
sub
(bad)
push
dec
loopne
sub
scas
xlat
ins
sbb
jbe
fisubr
retf
movs
out
pop
xor
movs
mov
popa
cmp
pop
xor
push
lods
dec
push
push
adc
adc
adc
mov
invd
pop
xor
push
movs
sub
leave
dec
(bad)
fiadd
jl
jbe
test
cmps
push
test
cmp
xchg
cmps
dec
pop
push
int3
ds
cmps
jg
imul
mov
imul
shufps
jnp
adc
addr16
outs
pop
ficom
pop
push
xchg
sar
cmps
out
loopne
pop
pop
(bad)
pop
(bad)
mov
jnp
pop
jbe
out
xchg
pushw
inc
push
mov
popf
pop
xchg
push
es
jbe
jp
jg
addr16
das
push
sbb
out
jge
outs
mov
jnp
xchg
dec
es
jae
mov
inc
das
loopne
jnp
setle
xchg
aam
cs
test
pop
jle
jmp
fwait
mov
pop
pop
pop
pushf
test
pushf
(bad)
aaa
(bad)
scas
lea
fsubr
imul
addr16
int3
pop
out
outs
push
pcmpeqb
or
fsubrp
lea
jecxz
pop
mov
fisubr
dec
push
xchg
cmps
mov
mov
cs
paddb
mov
xchg
jl
repnz
outs
outs
inc
daa
test
test
add
jle
outs
xchg
pop
adc
xchg
outs
xchg
bound
push
mov
lock
(bad)
cmc
mov
xlat
aaa
das
cs
jl
push
adc
inc
pop
push
call
pop
ds
rol
scas
ds
and
sbb
cmps
fidivr
cmps
mov
outs
test
outs
push
jnp
jne
sub
adc
push
adc
setl
jp
jmp
cmp
jge
pop
aaa
sub
outs
outs
mov
pop
jge
out
push
push
pop
jp
fcomip
shl
into
jne
pop
test
push
addr16
push
push
push
je
loopne
ins
je
jae
push
pop
add
dec
pop
push
pop
loopne
ja
jbe
jno
dec
push
imul
pcmpeqb
dec
outs
outs
push
repz
dec
outs
addr16
inc
push
jno
xor
mov
pop
addr16
lods
xor
aaa
push
push
fistp
pop
(bad)
sahf
xlat
mov
loopne
jg
jno
ja
push
fadd
shr
daa
pop
pop
(bad)
outs
out
and
jmp
shr
and
inc
aas
rcr
jg
push
fstp
adc
add
pop
dec
jmp
push
add
test
neg
push
push
test
sti
inc
movs
repnz
cmps
push
pop
mov
pop
xchg
pop
pop
std
(bad)
test
es
xchg
ds
movs
xchg
pop
xchg
pop
add
ins
(bad)
mov
scas
movs
inc
xcrypt-ctr
cmps
fidivr
push
(bad)
imul
add
(bad)
cmp
push
mov
sbb
ror
push
mov
js
daa
(bad)
(bad)
ds
mov
mov
pop
xchg
dec
mov
pop
mov
mov
push
inc
into
jae
pop
mov
mov
xor
mov
imul
ins
fwait
pop
pop
out
mov
mov
daa
mov
shrd
jnp
jle
dec
fdivr
cs
fwait
pop
push
pop
mov
push
push
push
loopne
jbe
lock
outs
icebp
mov
xlat
pop
add
inc
pop
push
loopne
fistp
test
mov
cmp
pop
jg
dec
ror
add
xchg
xchg
sbb
pop
jo
lea
dec
mov
push
mov
es
push
push
jle
bound
movd
mov
pop
pop
cmp
xchg
test
test
add
cmp
cmp
add
(bad)
sti
pop
jns
push
(bad)
jns
jmp
ds
outs
inc
jns
pop
jp
adc
fst
cmps
js
stc
jge
sbb
push
pop
push
pop
jne
add
adc
je
mov
mov
push
push
es
test
jbe
jo
jl
ins
jbe
jo
outs
dec
push
dec
mov
imul
jbe
inc
push
outs
ins
cmp
cmp
push
loopne
pop
outs
push
push
push
dec
pop
fimul
outs
pop
addr16
mov
sub
inc
push
pop
lods
push
pop
outs
mov
mov
pop
add
(bad)
in
gs
lea
jbe
outs
xlat
dec
add
pop
dec
push
push
daa
cmp
pusha
adc
push
call
mov
retf
adc
(bad)
cmps
loopne
or
mov
xor
stos
out
pop
outs
pop
and
ins
cs
dec
xor
in
ds
aas
dec
(bad)
lock
dec
push
pop
fidivr
fnstsw
ja
push
imul
sbb
pop
inc
(bad)
xchg
inc
ficomp
(bad)
pop
pop
fmul
bt
sub
push
aaa
mov
dec
(bad)
pop
aas
xchg
sbb
test
aas
pop
ja
jae
fstp
ins
pop
push
mov
neg
lea
rcr
ss
(bad)
jmp
pushw
mov
fnstsw
mov
addr16
pop
inc
in
outs
ja
push
ss
fwait
inc
lfs
mov
mov
dec
pop
cmp
(bad)
mov
adc
out
pop
aaa
pop
outs
mov
out
sub
fiadd
aaa
out
(bad)
imul
xchg
(bad)
push
scas
out
out
test
or
test
aaa
bsf
(bad)
jle
mov
xchg
gs
push
rcr
pop
adc
push
cmps
fs
or
add
mov
packsswb
mov
lock
inc
popa
es
cs
add
pop
out
fld
push
push
das
push
aas
call
mov
mov
faddp
bound
pusha
jns
(bad)
push
mov
xchg
mov
jge
jae
pop
push
jle
push
jp
cmp
add
test
add
xchg
add
paddsb
add
xchg
pop
dec
sahf
sbb
loopne
fild
setl
cmp
aaa
xor
pop
pop
jge
scas
add
fnstenv
jnp
jp
adc
jnp
pop
jbe
jbe
adc
jne
add
add
jo
pop
mov
rol
mov
outs
dec
outs
pop
outs
fstp
sbb
outs
mov
loopne
push
outs
data16
mov
cmps
add
push
ins
gs
mov
ins
push
xchg
pop
jle
fbld
sub
pop
ds
lea
push
ins
outs
(bad)
push
xor
dec
pop
inc
push
inc
pop
pop
mov
mov
mov
push
lods
repz
mov
xor
(bad)
out
pop
add
pop
je
out
xchg
(bad)
xchg
outs
mov
mov
xchg
pop
pop
shl
cmp
xchg
neg
lea
cmovo
push
xchg
cmps
out
pushf
mov
push
pop
daa
push
pop
pusha
fadd
mov
xchg
aas
test
jmp
je
pop
ins
addr16
scas
pop
mov
into
pop
xchg
jo
punpckhdq
inc
nop
ins
neg
clc
packssdw
cmp
daa
xchg
arpl
cmps
push
jle
ja
popa
pop
movs
es
mov
das
movs
ins
push
push
mov
cmps
(bad)
push
aaa
pop
out
push
cwde
inc
aas
mov
dec
xor
sbb
pop
outs
dec
pop
pop
mov
xchg
push
(bad)
cli
fdivrp
pop
sahf
jnp
sbb
xlat
add
ins
paddd
push
in
xor
mov
outs
pop
scas
jnp
mov
mov
outs
add
js
out
ds
daa
xchg
es
inc
push
fimul
push
js
sbb
push
pop
inc
push
inc
cwde
gs
pop
push
test
loopne
push
pop
cmps
adc
daa
xchg
push
psraw
xchg
jg
mov
pusha
mov
pusha
push
int3
(bad)
mov
push
jg
push
cmp
dec
stc
fdivr
cs
outs
inc
jg
ss
ficomp
pop
fadd
dec
scas
sbb
fidivr
push
xchg
arpl
mov
push
jge
daa
in
sub
ds
jp
lods
push
pushf
adc
bswap
add
mov
cs
aaa
lock
lea
jns
xchg
ds
lea
cmp
ds
sbb
out
ds
es
ja
ja
or
(bad)
jbe
lea
jnp
push
jne
jne
add
jecxz
mov
(bad)
fdivr
(bad)
push
ss
push
mov
out
scas
push
into
outs
jmp
shl
jno
pop
jno
add
push
inc
jo
into
jg
add
dec
pop
ror
into
push
dec
outs
push
pop
imul
arpl
xchg
outs
xchg
ds
pop
imul
dec
ret
pop
push
imul
mov
out
jmp
(bad)
inc
pop
shl
pop
outs
pop
pop
jp
push
fcom
pop
(bad)
loop
or
addr16
imul
pop
loopne
xor
adc
addr16
mov
push
aaa
aaa
into
pop
dec
sysret
(bad)
pop
push
add
push
(bad)
sar
add
jle
mov
jo
stos
outs
push
daa
(bad)
daa
push
rol
outs
stos
pop
call
ins
call
add
pop
outs
ins
in
add
pop
mul
and
xlat
add
jl
sahf
iret
ins
push
xchg
test
xchg
ins
ja
and
or
test
push
inc
aaa
mov
lea
neg
add
sahf
mov
dec
mov
pushf
mov
push
mov
mov
scas
jnp
clc
push
out
pop
ins
pop
pop
ss
add
push
mov
mov
ficom
mov
add
push
orps
cmps
addr16
mov
pop
pop
data16
or
sbb
loopne
xchg
mov
mov
add
dec
(bad)
icebp
in
mov
out
call
test
push
adc
cs
(bad)
mov
adc
arpl
pop
enter
mov
test
sub
xchg
pop
shufps
outs
(bad)
outs
cs
cmp
hlt
mov
push
push
(bad)
nop
pusha
(bad)
sti
sar
das
mov
jl
add
jmp
es
lea
sbb
jg
mov
fisttp
jnp
pop
xlat
or
jnp
mov
pop
xchg
add
cli
(bad)
push
(bad)
jns
jo
test
mov
or
aaa
sbb
imul
jle
pop
aaa
mov
push
jg
pop
into
js
mov
loopne
outs
jbe
push
pop
je
iret
and
dec
push
jne
cmps
in
outs
pop
je
jbe
push
jbe
mov
pop
push
ds
sti
jbe
push
fidiv
jo
aam
popa
out
ins
(bad)
push
mov
ins
dec
push
imul
(bad)
mov
imul
out
sub
fisubr
pop
data16
bound
imul
adc
outs
push
outs
push
outs
add
adc
ja
ror
add
fisubr
sbb
dec
shl
pop
inc
aas
outs
ins
adc
outs
pop
das
fistp
outs
fisub
rcl
jns
and
push
pop
xor
push
aaa
add
ret
outs
aaa
pop
and
and
aaa
mov
add
aas
lock
mov
sahf
imul
daa
jbe
jge
cmp
(bad)
mov
cmp
pop
addr16
push
mov
out
add
(bad)
test
pop
sar
ficomp
pop
(bad)
cmp
jg
jg
popf
idiv
push
cmps
cs
inc
out
add
outs
lahf
jo
jae
dec
pop
pop
inc
divps
ds
scas
addr16
mov
sar
add
push
mov
jnp
clc
outs
mov
jp
jns
outs
push
cmps
pop
clc
inc
pop
(bad)
dec
push
push
and
xchg
xor
inc
mov
mov
test
inc
xchg
outs
ins
or
lahf
test
pop
lahf
adc
or
(bad)
ins
xchg
xchg
(bad)
sbb
mov
call
xchg
sbb
push
ds
outs
ror
test
and
pop
mov
outs
pop
sar
lock
mov
jg
call
xchg
pop
out
pop
ds
addr16
outs
jnp
ds
jle
xchg
push
xchg
ss
call
push
xchg
fs
jg
add
sbb
push
das
dec
xchg
bound
mov
push
in
jbe
adc
push
addr16
mov
ss
push
push
lods
(bad)
(bad)
jge
jnp
iret
or
jle
imul
mov
bswap
(bad)
out
lea
cs
fild
fadd
sbb
ds
outs
fucomp
lea
pop
(bad)
jbe
ja
jl
add
data16
jbe
jbe
sbb
jle
push
pop
jne
outs
add
push
push
jp
shl
out
pop
push
jae
push
push
jne
cmp
xor
mov
push
jb
(bad)
add
push
jno
pop
cmp
adc
push
jo
dec
dec
call
ja
into
ins
push
ins
push
pop
ins
push
mov
push
ds
pop
dec
push
dec
pop
outs
sbb
punpckhdq
rcl
popa
into
pop
inc
mov
cmp
push
or
and
jmp
inc
ja
rcr
mov
ja
sbb
popa
aaa
xlat
push
cmp
mov
(bad)
push
dec
aas
bndstx
aaa
adc
mov
lahf
out
mov
aas
inc
or
mov
(bad)
iret
push
or
xor
or
jne
pop
test
sbb
iret
adc
push
sbb
mov
lods
data16
inc
rol
out
push
sub
out
sbb
sbb
es
pop
lods
daa
stos
outs
rol
(bad)
mov
pusha
inc
or
push
dec
lea
outs
jae
xchg
aas
es
dec
test
push
daa
outs
jle
cs
add
push
out
jo
(bad)
lock
out
pop
jle
das
mov
test
daa
xstore-rng
cmps
inc
outs
(bad)
into
cld
rol
cmps
nop
cmps
pop
rol
mov
mov
movs
sar
outs
daa
ins
das
push
pop
push
hlt
push
cmps
pop
push
mov
mov
mov
lea
xor
sbb
mov
mov
mov
scas
add
mov
push
ja
sbb
push
ss
pushw
mov
js
xor
jbe
mov
pop
pop
outs
fmul
je
ja
xchg
imul
aaa
mov
xlat
cs
sbb
cmp
fnstsw
shr
push
xchg
test
je
sbb
pop
inc
out
pop
call
dec
push
cs
fs
(bad)
lock
jg
jbe
push
pushf
mov
xchg
push
cmp
add
jge
xchg
push
xchg
ds
(bad)
jnp
pop
(bad)
ss
je
lahf
ss
bswap
add
xchg
out
push
ja
pusha
aaa
push
es
jle
dec
jle
cmp
ja
push
inc
(bad)
bsf
mov
aam
xchg
out
push
pop
mov
or
push
jns
fadd
js
jp
aaa
int
shl
jbe
pop
jbe
cs
repz
pop
mov
pop
ja
push
sbb
sti
rol
js
icebp
mov
pop
je
stc
xor
aaa
sahf
jl
jne
jbe
jnp
js
push
push
push
jne
jbe
xor
push
jb
sub
jb
jecxz
fst
jno
scas
push
push
enter
push
jno
push
pop
outs
pusha
lods
in
sbb
pop
ds
lods
pop
jbe
ins
dec
push
inc
div
aaa
push
aaa
ins
mov
pop
xor
out
push
push
push
imul
xchg
imul
loopne
fs
outs
imul
jg
inc
inc
test
ins
adc
outs
in
xlat
fbld
pop
xchg
jb
mov
jbe
lea
arpl
lahf
fild
arpl
xchg
pop
outs
out
adc
jne
(bad)
pop
stos
push
mov
add
push
outs
xchg
test
nop
sbb
outs
mov
and
ja
add
pop
push
addr16
aam
iret
jo
scas
fisubr
out
lods
push
push
push
push
add
mov
xchg
stos
scas
ss
cmps
xor
clc
cmps
mov
cmp
outs
inc
out
outs
lods
fld
mov
pop
es
(bad)
pop
rcr
es
nop
cs
out
fistp
push
das
push
lods
push
xchg
test
cmp
cmp
xchg
stos
jo
mov
jbe
jbe
pop
cmps
push
cmps
jo
ds
xchg
jo
push
push
fnsave
pop
xchg
lea
loope
pop
xchg
lock
cmp
cwde
mov
mov
data16
mov
out
sbb
push
mov
int3
xor
ja
lock
jle
ins
xlat
loopne
mov
scas
dec
ret
(bad)
xlat
dec
aaa
fild
outs
push
test
(bad)
push
xchg
(bad)
fsincos
add
aas
mov
pop
test
inc
or
cdq
mov
fst
cdq
das
add
into
cwde
push
cmp
adc
mov
call
ds
ror
int
push
xchg
xchg
das
jge
loopne
call
data16
(bad)
add
ss
es
jle
push
push
jge
out
or
cs
jp
xchg
push
mov
rcl
das
push
pop
push
mov
push
js
scas
mov
(bad)
repz
pop
pop
xchg
cmps
jns
inc
lods
push
dec
ja
pop
test
mov
aaa
inc
pop
jbe
bsf
es
jbe
clc
sar
jbe
dec
pusha
jae
ins
push
jne
pop
mov
jp
jle
jae
lsl
clc
xchg
jae
jp
inc
test
loope
js
dec
fidiv
out
xor
popw
push
jno
je
jo
jp
push
js
outs
push
data16
xor
ss
xchg
jo
and
or
lahf
outs
dec
inc
je
mov
addr16
outs
ins
(bad)
push
sbb
ins
mov
addr16
out
jae
sub
sbb
arpl
addr16
test
pop
inc
push
mov
scas
add
ins
ss
ins
push
ins
inc
aaa
cmp
xlat
inc
fistp
(bad)
pop
xor
add
out
jo
add
data16
fimul
js
dec
aas
into
ins
push
sub
mov
bound
add
aas
test
test
jo
pop
mov
jmp
shr
outs
push
ss
xchg
pop
scas
pop
add
inc
push
sbb
lods
push
outs
mov
mov
mov
cdq
or
(bad)
fimul
dec
jo
push
mov
mov
mov
packuswb
inc
mov
sbb
mov
jno
push
lods
jno
addr16
inc
es
jb
push
(bad)
ss
xchg
lods
jae
stos
mov
jno
nop
scas
repnz
stos
es
push
test
sar
cmps
loopne
sub
int3
or
ficom
mov
add
dec
aaa
into
outs
xchg
cmp
jbe
mov
cvtpi2ps
lods
cmps
push
mov
loopne
pop
sahf
scas
push
lock
pop
push
dec
jbe
push
xchg
test
in
sub
xchg
push
es
mov
push
movs
push
mov
mov
add
test
push
mov
mov
xchg
outs
retf
in
mov
push
test
addr16
add
cmp
mov
push
test
std
add
pop
pop
cmps
data16
dec
push
gs
or
cdq
push
pushw
or
out
(bad)
mov
jle
jnp
push
xchg
xor
jle
xchg
ss
xchg
(bad)
out
or
push
popa
push
into
cmp
xchg
xchg
es
ucomiss
pop
scas
push
dec
jnp
jp
sub
inc
pop
mov
into
fidivr
cmp
push
mov
push
push
xchg
imul
pop
pop
mov
mov
mov
sub
push
xchg
loopne
push
test
lock
pop
push
jne
jne
sub
mov
push
cs
pop
sbb
fimul
add
sbb
neg
push
push
sub
fimul
xchg
jae
fidivr
das
(bad)
jle
add
scas
jnp
xchg
cmp
or
push
jae
in
inc
aaa
mov
outs
xor
ss
push
je
int
fld
jae
push
dec
pop
jae
jno
outs
mul
add
pop
push
cmp
add
inc
addr16
je
int3
pop
outs
jbe
ins
outs
add
pop
in
imul
fmul
jl
pop
push
addr16
inc
push
inc
mov
or
scas
add
jmp
bound
push
popa
shl
pop
popfw
test
mov
sar
pop
out
push
daa
pop
js
cmp
into
jbe
inc
and
mov
(bad)
outs
pop
nop
outs
sbb
push
fiadd
fild
bound
pop
pop
and
push
dec
bound
pop
mov
jmp
push
pusha
or
xchg
aaa
mov
pop
cmps
push
(bad)
xor
sub
dec
sbb
cwde
add
outs
jle
outs
cmp
or
cs
pop
data16
pop
outs
push
jo
out
rcr
cmps
mov
cmp
in
mov
jo
pop
mov
dec
gs
push
scas
jb
lods
jb
fwait
push
mov
xchg
mov
call
pop
ds
scas
aaa
xchg
cmps
stos
fiadd
ds
pop
ja
jae
je
div
ja
pop
push
mov
lea
inc
stos
push
lods
stos
fistp
or
pushf
pop
cmps
scas
mov
lock
xor
outs
aaa
push
stos
out
sbb
mov
(bad)
push
mov
popf
or
pop
mov
mov
pop
mov
mov
lock
push
mov
cmp
inc
xchg
test
or
pop
outs
pop
fadd
outs
out
sahf
aaa
push
mov
jo
xchg
das
xchg
bsf
xchg
test
pmaxub
out
jbe
push
fimul
pushf
add
pop
popf
pop
push
dec
jl
fadd
data16
mov
mov
frstor
lock
daa
cdq
mov
mov
xchg
cs
sbb
out
pop
jl
int
mov
push
jl
push
jp
jp
xchg
mov
jbe
push
mov
xchg
scas
pop
pop
push
xor
push
push
add
push
jp
loope
dec
sti
push
js
push
jns
pop
pavgw
push
ja
push
cmps
sbb
pop
ja
jle
into
test
jbe
(bad)
das
push
jo
pop
mov
dec
ds
fadd
outs
mov
jle
jbe
xor
int
xchg
test
pop
test
out
aaa
jbe
cs
cmps
jne
jnp
fsubr
pop
je
push
pop
and
pop
mov
jle
push
outs
push
outs
gs
jge
pop
jb
push
push
push
push
call
outs
ds
add
outs
push
jo
jb
into
xor
outs
cmp
ja
jb
dec
call
push
outs
pusha
mov
(bad)
push
pop
ins
outs
arpl
cmp
ins
dec
jecxz
sbb
push
add
pop
fs
imul
inc
push
pop
pop
fadd
popa
inc
addr16
fld
pop
gs
push
pop
inc
push
cmp
sbb
inc
xchg
pop
pop
movq
sbb
inc
outs
or
dec
and
push
loopne
add
mov
sbb
pusha
cwde
pop
dec
in
ja
aaa
add
pop
(bad)
adc
inc
and
mov
pop
push
sahf
xor
dec
test
add
jne
or
ja
sbb
add
clc
shr
xlat
push
pop
scas
push
mov
jo
scas
jge
inc
daa
jno
mov
es
jno
sub
mov
(bad)
push
pop
jae
jne
add
pop
lea
scas
pop
push
mov
push
push
jae
(bad)
imul
je
jne
push
scas
syscall
fsub
inc
jbe
es
mov
fisubr
mov
xchg
es
xchg
scas
ds
push
imul
das
push
mov
jbe
out
loopne
out
lods
outs
lods
daa
mov
(bad)
pop
loopne
cmps
mov
pop
push
imul
mov
dec
out
mov
test
(bad)
fcomp
mov
push
push
cmp
add
push
ja
pop
mov
inc
in
(bad)
outs
ins
daa
test
push
jp
pop
add
mov
imul
jbe
sahf
pop
outs
pop
jbe
in
add
pop
addr16
xchg
outs
xchg
outs
addr16
es
jle
mov
mul
jbe
mov
popf
(bad)
pop
sbb
call
loopne
out
jle
sbb
adc
fnstsw
xchg
push
sets
push
ficomp
mov
jnp
loopne
sbb
jnp
ja
cmp
push
es
push
jns
mov
ja
scas
jns
push
test
pop
xchg
nop
push
mov
js
mov
mov
ins
ja
ja
mov
mov
icebp
cmp
dec
js
mov
dec
push
ds
pop
jbe
pop
mov
pop
pop
jae
in
inc
pop
data16
jae
dec
jae
je
jne
push
test
mov
push
jle
jb
rol
jbe
jb
sti
inc
aaa
(bad)
jo
jg
jb
sbb
pop
jl
pop
mov
jp
xchg
add
jno
dec
add
dec
push
push
retf
div
pop
outs
je
jae
pusha
pop
into
mov
outs
jo
jno
lock
xchg
fisubr
cmp
ins
dec
dec
retf
xor
sub
(bad)
inc
in
pop
cs
pop
push
fs
cmovo
lock
addr16
data16
and
pop
inc
pop
mov
add
push
push
shl
push
xlat
(bad)
fild
out
and
rcr
cmp
add
sub
rol
dec
add
adc
push
mov
das
iret
dec
and
aas
jg
pop
add
mov
push
mov
add
adc
push
push
push
pop
out
not
add
push
es
mov
xor
push
inc
mov
sub
mov
push
loopne
jge
push
push
jbe
out
pop
fiadd
out
jne
popw
data16
outs
pop
fidiv
push
xchg
mov
out
ins
jmp
es
seto
cs
ss
sbb
loopne
cs
ret
das
pop
into
ja
jns
pop
pop
scas
scas
stos
push
lods
shr
adc
lods
xchg
je
lods
sar
sti
mov
stos
xchg
(bad)
es
jbe
xchg
cmp
push
mov
test
mov
lea
cmp
push
push
xchg
test
jnp
pop
ss
test
ror
mov
and
sahf
mov
fbld
punpckhdq
rol
sub
push
outs
sbb
aaa
fimul
push
adc
push
mov
out
pushw
js
jbe
xchg
loopne
xchg
arpl
cs
lock
fild
push
xchg
(bad)
fnstsw
cmp
out
ja
mov
sbb
fadd
add
ds
jbe
loopne
js
pop
jbe
push
lar
mov
mov
out
inc
inc
jae
sbb
push
and
sahf
jo
loope
push
push
mov
mov
stos
ror
push
push
jae
test
cmps
test
cs
out
jae
push
jb
das
pop
cmp
dec
add
and
jbe
push
jb
jae
sbb
jno
push
sbb
clc
inc
jo
jl
mov
push
push
jg
lea
je
outs
out
jo
jo
push
test
(bad)
outs
ja
outs
dec
push
jo
fcmovne
adc
dec
push
jb
mov
jo
(bad)
mov
outs
dec
outs
push
aaa
fdiv
les
dec
pop
ins
movntq
out
sub
pop
imul
push
daa
ds
push
lock
addr16
push
inc
lds
pusha
ds
addr16
cs
gs
jo
repz
fs
arpl
pop
(bad)
jle
dec
mov
push
pop
outs
outs
sbb
mov
aaa
outs
lea
adc
xlat
dec
pop
or
push
inc
and
lods
jmp
xor
stc
inc
jmp
sar
adc
and
and
add
xchg
out
pop
cmp
add
fistp
pusha
xchg
mov
push
mov
mov
mov
mov
mov
mov
jl
cmp
mov
clc
cmp
dec
push
sub
in
push
cs
out
ins
in
mov
jbe
jns
push
js
adc
push
xchg
mov
push
mov
xchg
out
mov
push
jns
dec
iret
push
fidivr
push
nop
es
(bad)
fnstsw
ja
push
push
jp
scas
push
scas
es
inc
add
push
mov
ror
pop
or
push
es
lea
xchg
xor
rcr
stos
mov
ss
mov
sbb
and
pop
mov
xchg
xchg
test
inc
mov
xchg
xchg
shl
push
pop
push
movs
imul
jecxz
mov
add
jmp
outs
push
and
clc
inc
xchg
fld
push
addr16
aas
push
loopne
pop
pop
outs
add
out
jp
or
fwait
adc
xlat
add
push
call
fs
push
sahf
jge
sbb
ss
jg
and
fnstsw
scas
jle
jnp
pop
outs
mov
pop
cmp
ror
jbe
adc
xchg
bound
nop
or
jne
jne
mov
jbe
je
pop
push
push
je
jae
push
pusha
aaa
cmps
jne
out
mov
mov
inc
rcr
mov
pop
push
mov
push
dec
jns
mov
out
mov
mov
aaa
dec
aaa
mov
jle
rol
pop
mov
jae
ss
jb
pop
test
mov
je
cmp
pop
mov
push
adc
jb
push
call
iret
push
dec
loopne
xlat
sub
test
jno
jo
push
sbb
pop
call
cmp
js
ins
jbe
movaps
fld
outs
hlt
aaa
ins
into
pop
es
sbb
push
cs
xchg
push
push
pop
cmp
mov
iret
ins
outs
daa
ins
inc
adc
jo
aas
imul
mov
dec
push
(bad)
push
add
addr16
mov
fsubr
pop
data16
fs
pop
lods
rcr
aas
outs
gs
inc
push
inc
push
pusha
sbb
pusha
das
outs
inc
gs
ret
neg
arpl
mov
ss
bound
arpl
xchg
addr16
push
xlat
pop
pop
mov
xlat
les
mov
nop
scas
mov
and
inc
pop
xor
push
daa
les
add
out
ins
add
fs
add
lds
xchg
dec
dec
sbb
and
sar
add
mov
mov
cdq
add
jne
mov
push
pcmpeqd
push
jo
ds
mov
mov
mov
pop
cs
mov
dec
pop
das
ss
push
mov
mov
into
sbb
sbb
mov
push
ss
es
ss
mov
ja
rcr
xchg
pop
xchg
aas
mov
das
out
push
fisubr
jnp
nop
push
xchg
mov
ja
fnstcw
pop
xchg
mov
popw
pop
adc
ss
push
dec
cmps
fmul
(bad)
xchg
mov
mov
mov
(bad)
add
shl
lods
(bad)
imul
pop
dec
lods
jle
outs
mov
cmp
outs
out
push
pop
test
jge
push
mov
mov
rol
xchg
bound
pop
(bad)
jp
push
xchg
jl
pop
fsub
xchg
xor
add
outs
push
scas
push
adc
mov
push
popf
push
imul
jno
jg
out
jl
dec
mov
mov
lahf
jg
jg
add
sbb
push
sbb
add
lock
jnp
jge
in
ror
push
xchg
rol
packuswb
xchg
ds
sub
jle
xchg
loopne
cmp
inc
push
jne
jae
pop
cmp
pop
ss
addr16
push
push
mov
xchg
ja
inc
mov
jae
jb
pop
ss
out
pop
xchg
fidivr
or
add
outs
jb
cs
cmp
xchg
jg
jbe
cmp
pop
mov
push
jmp
push
push
jo
int
call
outs
btr
sbb
outs
jg
ss
push
pop
outs
jle
jl
jnp
jo
mov
scas
jbe
jnp
cs
outs
outs
ins
jns
push
cmp
push
push
ins
outs
outs
ja
outs
or
dec
push
jb
fld
(bad)
outs
cmovge
in
add
xchg
jg
imul
ds
ins
es
jae
addr16
dec
push
imul
xchg
push
addr16
sar
addr16
(bad)
mov
loopne
xchg
fs
arpl
pop
aaa
inc
xchg
je
jmp
dec
arpl
pop
or
outs
bound
pop
fidivr
pusha
lods
jnp
addr16
ja
sbb
mov
(bad)
addr16
adc
inc
and
outs
leave
in
pop
mov
leave
rol
or
adc
aas
inc
sbb
inc
push
cmps
aad
test
ja
inc
mov
outs
je
push
mov
jne
cmp
jg
ss
xlat
add
add
ja
mov
mov
pop
or
rcr
div
pop
in
fcompp
es
push
push
nop
push
push
pop
inc
add
sbb
push
sahf
popf
sti
shl
mov
aaa
pop
push
pop
in
popf
outs
pop
jge
push
jge
xchg
mov
out
fld
xchg
es
push
xchg
mov
dec
push
jnp
push
fdiv
pop
push
sbb
idiv
xchg
mov
sahf
dec
scas
jge
push
cmps
pop
(bad)
mov
jp
mov
(bad)
dec
sbb
jnp
mov
mov
mov
push
mov
lods
jbe
mov
js
lock
mov
or
fadd
jg
test
inc
ja
push
test
movs
outs
daa
test
push
xchg
pop
inc
cmp
cpuid
jbe
add
jae
mov
ss
push
ss
pop
or
sub
call
jg
jle
and
pushf
jle
test
ds
jle
call
das
pop
jl
sbb
xlat
std
xchg
jge
call
out
es
mov
pop
xchg
ss
jge
mov
jp
pop
call
jbe
je
jecxz
sbb
mov
pop
push
push
(bad)
(bad)
sahf
fincstp
inc
jb
es
(bad)
jno
out
jnp
xchg
mov
push
dec
mov
fimul
mov
jge
cvtss2sd
push
jae
pop
fistp
lahf
cmps
xchg
enter
scas
push
outs
test
pop
jo
(bad)
pop
outs
and
outs
pop
add
daa
jg
push
push
push
push
ins
jge
mov
scas
push
jge
push
outs
push
ins
ds
aaa
cmp
ins
mov
jg
jne
vmwrite
push
pop
push
ins
jne
ins
iret
pop
imul
pop
inc
rol
ins
push
pop
pushf
jmp
ins
pop
pop
push
push
popf
pop
lds
push
imul
aaa
push
enter
push
pop
mov
mov
pop
fisubr
imul
adc
cmp
jbe
addr16
or
data16
shl
pop
arpl
in
sbb
pusha
xlat
push
in
pop
fild
pop
pop
pop
daa
movd
in
sbb
aaa
sub
pop
pop
pop
inc
popa
dec
sub
in
add
out
pop
ds
stc
(bad)
movq
mov
(bad)
mov
push
outs
sbb
retf
daa
das
arpl
pop
push
cmp
push
das
shl
js
ja
es
or
mov
and
xchg
jmp
clts
cmps
pop
jne
add
pop
sub
xchg
fwait
dec
pop
push
ror
and
outs
push
in
out
outs
scas
push
lods
outs
xchg
mov
scas
push
lods
xor
or
push
jno
mov
or
jae
push
je
out
push
(bad)
jne
jne
jb
push
push
jbe
push
and
jbe
jbe
punpckhdq
cs
ja
ja
dec
sub
test
into
push
into
popf
jae
push
scas
cs
daa
push
pop
sub
mul
aas
mov
jecxz
repnz
js
pop
mov
scas
ja
jne
imul
aaa
lods
outs
ficom
lods
fidivr
into
push
jp
(bad)
push
jbe
ror
jbe
jno
loopne
or
ficom
ja
ja
bound
jbe
inc
push
ss
sbb
lds
je
jne
push
push
jno
add
jae
jo
push
or
jno
test
pop
cs
outs
(bad)
outs
mov
movd
push
sub
(bad)
ins
sahf
gs
xchg
fs
push
fwait
scas
cs
push
hlt
cwde
popa
(bad)
cwde
pusha
push
xchg
push
addr16
pop
(bad)
cld
outs
cmp
cwde
pop
push
xchg
pop
push
gs
push
push
fs
pop
mov
pop
push
push
fs
pop
ficom
ss
jmp
push
nop
popa
(bad)
nop
pop
mov
pop
pop
mov
lea
(bad)
fistp
mov
pop
push
push
cs
mov
mov
xor
pop
mov
mov
push
mov
imul
mov
xchg
out
scas
mov
ss
test
xchg
pop
push
push
es
pop
adc
(bad)
push
pop
xor
pop
or
add
dec
call
dec
jge
jge
mov
push
jge
push
jnp
jg
push
dec
push
jl
ficom
push
push
jns
jns
dec
jns
retf
sti
into
int
ja
js
ss
push
dec
mov
jne
push
ss
push
jne
push
push
jae
ja
popf
imul
pop
dec
push
push
jb
jb
push
xchg
mov
call
push
outs
inc
push
ins
inc
fstp
out
xor
push
push
ins
inc
push
push
push
dec
jns
mov
ins
inc
ins
push
ins
imul
mov
push
push
imul
push
push
ss
repnz
cs
push
push
addr16
fs
pop
sti
arpl
mov
pop
push
push
push
popa
cmp
in
push
pop
push
popa
es
pusha
pop
pop
cmp
fcmovnbe
int3
push
push
push
pop
pop
sysret
push
pop
fstp
ds
cmp
pop
cmp
pop
cmp
shr
lods
push
pop
push
push
pop
push
push
cmp
pop
cdq
out
mov
push
andnps
push
cmp
(bad)
push
cmp
pop
push
aaa
outs
imul
push
push
push
push
push
push
ss
push
push
push
push
maskmovq
mov
push
push
xor
es
popf
mov
push
dec
pop
push
cmovge
outs
dec
pop
xor
dec
pop
addps
sti
outs
popf
aam
push
ds
out
pop
push
cmp
pop
pop
and
cmp
push
sysret
dec
ror
imul
sbb
or
jns
dec
pop
in
loop
or
mov
test
or
xchg
mov
dec
loop
sub
pop
dec
jno
and
test
mov
jnp
pop
outs
mov
scas
mov
jo
mov
shl
push
jno
scas
rol
push
jb
jb
out
cmp
pop
push
push
je
mov
sub
jbe
sahf
jne
mov
sub
pop
scas
push
push
jp
lods
sbb
jns
jnp
es
mov
push
jp
jl
push
mov
out
popf
out
ds
cs
cs
aaa
ins
xchg
dec
aaa
jl
mov
daa
retf
shl
jbe
ja
fnstsw
jnp
mov
push
jl
jnp
sub
stos
pop
jne
stos
jae
push
pushf
push
into
je
jae
and
jae
sti
cmp
outs
push
lods
pop
fmul
jno
inc
subps
jb
imul
cmp
outs
xchg
ins
add
sub
jbe
push
ins
pop
pop
jae
mov
push
fs
in
outs
cmp
push
ins
pop
mov
jle
pop
pop
push
xchg
addr16
add
(bad)
fs
mov
xchg
pop
push
(bad)
xchg
push
popa
sbb
loopne
mov
pusha
xchg
outs
xchg
nop
xchg
out
add
jg
xchg
lock
push
dec
pusha
mov
xchg
fadd
data16
push
jle
rol
pop
mov
je
js
xchg
jle
daa
xchg
aas
rcr
push
push
pop
push
cmovl
push
pop
or
cmp
push
jle
jg
push
cmp
push
pop
jl
jbe
jl
push
push
addr16
push
pop
out
shl
push
jnp
xchg
jbe
loopne
into
push
js
push
jbe
pop
ja
mov
push
ss
push
jne
push
ja
idiv
lock
ss
jae
push
push
jno
je
mov
pop
jb
jle
ror
pcmpeqd
outs
inc
inc
push
push
ins
inc
loopne
paddb
pop
xchg
cmps
add
push
pop
push
push
push
imul
push
push
packuswb
push
aas
jae
imul
call
push
fs
push
popa
in
pop
js
outs
push
pusha
jg
inc
outs
push
push
pop
cmp
popw
sahf
outs
pop
push
push
mov
movs
add
push
push
pop
push
add
pop
andnps
xor
dec
repnz
cmp
cmp
push
push
push
push
push
ss
push
ds
add
mov
jp
push
addr16
xchg
push
dec
mov
xchg
ins
pop
clc
inc
pop
push
nop
les
dec
push
(bad)
pop
pop
mov
cmp
push
dec
cmp
xchg
push
das
jmp
push
pop
dec
das
pop
mov
hlt
sub
dec
ja
pop
pop
(bad)
sbb
add
scas
shl
inc
lods
loop
ss
push
leave
xor
dec
inc
push
sbb
mov
scas
outs
outs
shr
jno
push
int
fucomp
push
jb
push
btr
jne
sar
(bad)
je
je
jbe
push
mov
push
ja
jae
jp
js
jne
ss
les
scas
jp
jns
push
push
jp
push
or
(bad)
jl
jl
jb
cmp
pop
fidivr
dec
mov
push
dec
mov
jl
jge
out
scas
popf
push
ss
jge
push
pmaxsw
int
test
data16
jp
push
idiv
pop
xchg
(bad)
daa
jns
jl
inc
cwde
add
jnp
push
(bad)
jle
or
inc
pop
xchg
ds
retf
das
mov
or
rol
pusha
mov
xchg
jbe
add
xchg
daa
add
je
jb
popf
pop
popf
jbe
jo
pop
outs
jae
jne
xchg
outs
pop
outs
push
jg
pop
pop
push
ins
pushf
jmp
movbe
push
xchg
shr
cwde
jbe
push
cwde
pop
arpl
push
push
arpl
mul
push
bound
(bad)
out
push
bound
je
pop
push
outs
push
fdivrp
lea
mov
enter
pop
push
pusha
test
(bad)
(bad)
lea
add
mov
idiv
mov
pop
test
pop
xchg
out
mov
push
mov
push
pop
sbb
dec
addps
cmp
out
pop
out
push
push
fild
fsubr
dec
push
(bad)
ja
jnp
ss
xor
dec
push
push
push
jp
xor
js
or
jbe
pop
push
jo
pop
call
pop
out
aaa
(bad)
out
je
dec
mov
push
fmul
outs
jb
jno
js
or
movs
add
movd
pop
push
cmp
add
outs
push
jbe
outs
loope
stos
mov
push
push
addr16
pop
pop
in
xchg
mov
(bad)
push
gs
jge
test
arpl
arpl
outs
fs
dec
pusha
pop
out
cmp
(bad)
popa
push
pop
pop
xchg
shr
not
pop
pop
cmp
repz
push
push
pop
cmp
push
push
inc
jmp
push
outs
push
cmp
mov
in
push
push
pop
push
pop
push
sar
bsr
js
outs
push
out
repnz
mov
mov
push
loopne
push
fadd
addr16
dec
pop
pop
out
je
dec
cs
call
dec
cmp
mov
pop
dec
jg
cmp
lock
jbe
outs
cmp
test
ins
xchg
pop
dec
das
ja
and
rol
aaa
dec
sub
push
popa
adc
or
sub
pop
daa
mov
mov
dec
add
pop
jo
xchg
sub
dec
out
jae
je
imul
push
jne
jp
jns
ja
js
ds
cs
cs
push
loopne
pop
outs
jnp
push
mov
ds
lahf
idiv
pop
push
jl
(bad)
jle
rcr
rcl
jge
push
movd
add
mov
mov
jg
sub
fld
aas
add
fstp
xchg
pop
pop
push
pop
jge
pop
data16
aaa
mov
jg
jle
jl
test
jo
out
pop
fmulp
cmp
int3
jnp
push
jl
pop
jge
js
sbb
add
jo
add
add
pop
ss
cmps
jno
call
cmps
jo
outs
cmps
jb
sbb
jbe
lods
outs
je
outs
(bad)
jo
jno
pop
add
pop
ins
mov
jmp
jle
pop
push
xchg
push
push
add
lock
jae
inc
push
data16
fs
pop
outs
cmp
pushf
pop
pcmpeqd
add
xchg
arpl
repnz
popw
xchg
pop
pop
sbb
push
ss
inc
jecxz
pop
jg
push
int3
mov
daa
pop
jg
outs
adc
pop
pop
call
mov
cmc
xlat
ds
xchg
sbb
cmp
pop
jle
sbb
lock
mov
add
(bad)
push
dec
mov
pmuludq
mov
dec
outs
arpl
(bad)
jbe
lock
sbb
xchg
fdivp
ja
cs
xor
out
inc
pop
je
cmp
in
mov
out
leave
enter
pop
sbb
(bad)
xchg
sbb
pop
aaa
push
push
xor
jb
jge
imul
imul
fbstp
outs
fisubr
pusha
push
pop
push
(bad)
push
gs
fnsave
out
cmp
push
popa
pop
sbb
int
push
pcmpeqd
adc
add
xor
lds
jmp
not
mov
jo
outs
pop
ds
addr16
jl
add
lock
jg
out
mov
push
pcmpeqd
push
out
pop
push
hlt
pop
push
xor
pop
outs
mov
pop
outs
cmp
or
sbb
push
js
sti
push
dec
pop
jg
mov
push
out
mov
pxor
adc
pop
push
mov
push
jbe
add
ss
test
arpl
pop
pop
push
dec
xchg
pop
inc
fcomp
fbstp
ja
xor
clc
pop
xchg
es
pop
jp
imul
js
push
mov
mov
cs
push
ss
jle
xchg
jnp
jl
pop
sbb
daa
jnp
das
push
jg
not
push
mov
ds
jle
or
jo
cs
neg
out
add
mov
daa
pop
push
cmp
test
mov
xor
(bad)
fdiv
mov
pop
push
jg
pop
sbb
fbld
jle
mov
jle
pavgb
outs
push
xor
jae
push
jl
xchg
or
jle
jl
pop
(bad)
imul
sahf
mov
jbe
(bad)
jae
or
jne
jae
jne
push
loopne
jmp
cmps
movs
je
dec
mov
cmps
mov
shl
movs
ss
lahf
sbb
jge
imul
sahf
pop
popf
rol
ficom
pop
push
pop
outs
(bad)
call
xchg
push
xchg
xchg
cmp
xchg
pop
pop
jo
(bad)
mov
xchg
outs
pusha
xchg
push
push
xchg
cmp
(bad)
and
pop
xchg
jg
sbb
xchg
outs
pop
call
jmp
scas
pop
es
out
mov
pop
jo
pop
jle
pop
outs
cwde
sbb
xchg
or
dec
push
push
push
clc
xchg
int
ss
out
dec
dec
lods
sub
dec
jbe
push
and
(bad)
add
mov
outs
push
jp
mov
cli
(bad)
pop
mov
mov
push
daa
jp
jnp
lods
outs
mov
test
ss
mov
addr16
inc
push
in
sar
mov
push
outs
inc
push
jbe
add
lea
outs
push
add
cmp
out
add
push
push
pop
inc
push
inc
mov
lea
mov
test
arpl
icebp
push
clc
sub
cmp
mov
lock
jno
adc
outs
adc
pop
push
push
push
pop
mov
lea
push
pop
addr16
inc
loopne
pop
mov
pop
push
push
aaa
fnstsw
ds
push
pop
outs
pop
je
lods
and
outs
push
bound
outs
out
push
push
pop
pop
jbe
push
mov
pop
retf
xor
push
add
jg
outs
imul
or
sbb
aaa
ja
rol
dec
inc
loopne
out
pop
adc
or
xor
mov
push
pop
aaa
outs
sbb
push
push
inc
adc
inc
aas
xlat
add
xchg
mov
mov
add
pop
jbe
jp
mov
jmp
outs
ja
es
mov
fdivr
push
mov
jg
xchg
into
or
mov
sbb
mov
mov
mov
cmp
test
ss
test
test
push
mov
push
jle
(bad)
sti
out
pop
mov
xor
pop
jle
test
mov
pop
sub
push
mov
push
jg
jg
jge
cmp
xchg
(bad)
lods
clc
dec
nop
xchg
lods
push
jl
inc
mov
lods
push
enter
out
test
fcomp
pop
jo
xchg
imul
ins
loope
pop
sbb
cmc
shl
xchg
xchg
ins
(bad)
data16
call
gs
sar
out
gs
jbe
xchg
pop
jbe
add
xchg
dec
aaa
ds
popa
xchg
out
xchg
icebp
xchg
pop
(bad)
mul
(bad)
pop
inc
mov
fistp
jg
pop
pop
mov
pop
cmp
dec
or
pop
push
pop
pop
pop
popf
add
(bad)
out
xchg
mov
sbb
jg
arpl
dec
daa
rol
mov
outs
mov
out
add
dec
push
cmp
out
scas
dec
sbb
pop
das
pop
jp
jns
pop
cmp
push
jns
jmp
not
push
push
jns
jmp
jg
push
jae
test
sbb
outs
push
push
mov
mov
mov
dec
rdtsc
rol
mov
inc
pop
mov
push
out
mov
iret
jbe
daa
loope
retf
dec
into
jle
sbb
call
mov
pop
jmp
fist
push
out
loopne
adc
(bad)
adc
inc
outs
pop
mov
pop
fidivr
adc
(bad)
out
pop
orps
mov
cs
push
clc
xchg
out
addr16
mov
inc
(bad)
xchg
jge
daa
pop
pop
mov
ds
push
push
mov
(bad)
mov
dec
seto
cli
rcl
mov
push
imul
push
jg
lock
inc
pop
dec
aaa
test
(bad)
aaa
out
dec
pop
pop
out
add
mov
sub
mov
adc
or
ja
leave
xchg
mov
js
cmps
mov
das
(bad)
pop
jbe
xlat
adc
jbe
ja
jl
fisttp
push
push
jns
mov
sahf
mov
mov
push
push
jl
or
es
stc
and
fst
jg
or
jg
cmp
pop
mov
mov
cld
fisub
mov
cmp
xchg
mov
mov
pop
jae
pop
xchg
test
jne
pop
ud1
ss
imul
add
xor
sub
mov
add
xchg
scas
dec
sbb
rcr
mov
mov
ins
or
push
jge
push
jle
xchg
sub
jns
call
iret
js
js
pop
mov
sahf
ja
push
mov
test
cmp
cmp
mov
sub
pushf
test
out
jbe
movs
outs
push
push
jo
cmps
lods
mov
push
outs
(bad)
jb
inc
pusha
xchg
femms
push
imul
(bad)
adc
call
and
fild
add
jbe
xchg
pop
out
pop
punpcklwd
in
pop
jbe
(bad)
pop
sub
sbb
out
test
jo
loopne
(bad)
jg
push
loope
(bad)
dec
sahf
pop
push
js
mov
fimul
rcl
out
mov
setl
jbe
xchg
inc
out
mov
daa
pop
jg
inc
pop
mov
pop
out
loopne
fcomip
(bad)
ficom
jnp
les
je
jp
push
xchg
push
jl
add
cmps
add
push
pushw
outs
sbb
pop
lahf
neg
icebp
sbb
push
out
je
pop
clc
push
pop
(bad)
push
push
jmp
push
data16
ror
(bad)
into
push
ins
ja
(bad)
mov
ins
nop
(bad)
push
(bad)
vmread
push
push
(bad)
jg
fild
dec
xchg
pop
jmp
pop
aas
cs
cli
or
push
fs
sbb
std
sar
bound
pop
cmp
push
mov
cmp
or
push
push
add
cmp
(bad)
dec
ret
push
jle
add
ficom
retf
mov
push
jbe
pop
daa
les
sub
push
push
push
ds
inc
fidiv
addr16
add
push
cmps
push
inc
loopne
push
jg
xor
out
add
inc
mov
pop
push
push
dec
push
pop
das
xchg
js
ss
fsubr
pop
xor
sub
and
ja
ret
mov
push
ret
jg
jno
fdivr
xor
push
ss
jbe
mov
ja
push
out
rep
jle
mov
push
jp
mov
add
mov
cmp
cmp
cs
inc
lock
xchg
push
push
pop
call
cmp
jbe
xor
cs
pop
mov
mov
xchg
xchg
ins
stos
mov
xchg
pop
popf
imul
mov
push
push
xchg
aas
mov
mov
mov
jo
mov
btc
pop
mov
ins
cmp
push
push
test
invd
mov
test
sahf
lods
movs
add
xor
or
pop
xor
push
mov
push
mov
or
and
bound
jg
jns
xchg
xor
xchg
imul
js
push
stos
mov
cmp
mov
lahf
pop
and
jmp
(bad)
jae
outs
(bad)
jo
fnstcw
mov
shl
push
cmps
jg
sub
adc
push
push
dec
mov
pop
outs
gs
sbb
jbe
out
dec
call
pop
lock
xchg
push
jb
pop
aas
addr16
jbe
xchg
(bad)
test
out
push
pop
(bad)
out
stc
sub
push
cvtps2pd
setl
dec
push
cmp
push
pop
push
inc
xor
outs
push
sqrtps
mov
inc
mulps
arpl
dec
addr16
jle
jnp
push
enter
dec
jle
xor
out
inc
jno
ja
inc
jne
jbe
call
rcpps
arpl
push
jb
push
jo
dec
je
ds
outs
cs
ret
sbb
inc
out
push
shl
jns
pop
push
imul
cmp
fisub
inc
push
push
dec
mov
fiadd
push
addr16
pop
and
mov
(bad)
jp
jg
nop
or
pop
push
data16
arpl
sbb
sub
ja
data16
je
cmp
imul
pop
mov
fisttp
adc
aaa
ds
ja
push
push
dec
test
jecxz
out
aaa
pop
lods
setl
pop
addr16
mov
out
pop
push
sbb
js
in
shl
cmp
jle
push
pop
dec
loopne
dec
mov
dec
pop
jle
lea
mov
test
inc
dec
push
sub
adc
mov
adc
adc
dec
daa
jo
push
xor
jns
push
mov
cld
sbb
pop
mov
mov
jl
test
push
xchg
push
in
shl
jle
push
mov
mov
jle
mov
sbb
test
cmp
add
mov
imul
mov
mov
push
(bad)
inc
mov
mov
mov
mov
iret
jnp
mov
mov
mov
push
mov
mov
cdq
popf
mov
mov
fimul
push
mov
pop
mov
push
xchg
inc
ss
test
xor
mov
xchg
pop
or
jle
push
jg
sahf
mov
test
cwde
bound
shl
cmp
(bad)
or
pusha
dec
je
jle
movs
mov
jle
inc
push
pop
jb
rol
jecxz
ins
jmp
inc
lods
xchg
jle
cmp
je
imul
mov
outs
sahf
out
mov
gs
pop
cwde
xchg
bound
pop
jle
sahf
pusha
lea
ret
(bad)
neg
mov
inc
ja
cmp
outs
jl
nop
(bad)
xchg
add
sbb
push
outs
bound
sbb
out
pop
mov
sbb
mov
data16
sbb
mov
mov
push
pop
(bad)
mov
loopne
pop
xchg
ja
dec
push
adc
test
dec
jbe
icebp
movs
mov
out
adc
cld
(bad)
iret
push
jnp
fdivr
xchg
(bad)
mov
jl
out
je
fiadd
inc
ds
(bad)
mov
xchg
xor
mov
pop
jae
push
add
or
(bad)
push
jmp
arpl
nop
cmp
jmp
xor
jg
ja
adc
push
xchg
pop
inc
push
cs
mov
push
push
addr16
ror
out
pushf
mov
fisub
out
sbb
addr16
ficomp
add
into
out
push
add
cmps
pop
pop
lock
pop
push
outs
jbe
sub
and
mov
lahf
push
jecxz
arpl
xchg
push
cmp
dec
adc
shl
retf
scas
dec
ja
arpl
xchg
pop
pop
not
or
outs
pop
push
ja
lods
dec
and
iret
push
out
sbb
push
xor
jg
dec
push
jno
(bad)
push
addr16
fisub
push
movs
mov
add
cmp
dec
cwde
sub
push
inc
sub
add
push
inc
sub
jnp
cmp
movs
stc
int
jge
xchg
jle
jg
lahf
fistp
inc
rcr
add
mov
push
cmp
rol
inc
repz
ror
ret
jnp
outs
dec
dec
(bad)
dec
cs
iret
jnp
mov
ret
(bad)
rcr
push
nop
pop
rcl
fst
push
sysret
pop
mov
mov
sar
mov
mov
retf
or
retf
mov
ds
and
push
xchg
jmp
mov
adc
cmp
add
jbe
mov
sbb
je
jnp
or
jl
jns
pop
test
idiv
jae
rcr
cmps
jne
jo
cmp
or
xchg
mov
les
mov
imul
test
addr16
ins
lahf
data16
scas
mov
lahf
mov
push
jmp
dec
push
fwait
pusha
add
inc
aaa
out
pop
out
call
xchg
xchg
pop
sbb
pop
ds
loopne
jecxz
pop
pop
jo
jbe
and
and
push
push
iret
pop
sbb
jo
pop
dec
out
pop
push
call
mov
pop
mov
dec
pop
pop
mov
pop
jbe
dec
fild
pop
addr16
je
lea
pop
dec
sbb
sub
jecxz
(bad)
xlat
jbe
add
(bad)
addr16
mov
inc
je
inc
and
push
jg
mov
js
(bad)
outs
pop
outs
xor
push
inc
push
mov
ja
adc
push
jmp
xchg
push
movs
pop
fbstp
(bad)
push
and
bswap
es
fisttp
sbb
iret
pop
adc
pop
in
add
outs
fidiv
push
push
ds
movq
add
sub
pop
aas
bsf
call
push
ja
and
shl
or
packuswb
add
mov
jmp
push
addr16
pop
dec
not
or
add
ss
mov
and
fbld
jne
pop
pop
addr16
push
pop
mov
neg
mov
cmps
xchg
and
pop
les
jns
mov
and
or
pop
pop
inc
pop
int3
out
rol
jge
call
push
jg
psrlq
mov
mov
std
inc
test
mov
push
test
ret
sbb
ret
lea
mov
pop
sahf
ret
pop
xchg
push
les
pop
push
les
push
push
(bad)
(bad)
out
iret
daa
push
les
les
xchg
call
fld
nop
(bad)
jle
(bad)
jle
rcl
nop
out
ror
push
(bad)
mov
lock
jge
mov
push
mov
pop
mov
pop
cmp
sahf
mov
in
push
xchg
mov
mov
lahf
dec
mov
mov
cli
and
scas
jg
dec
cwde
inc
pop
push
lods
shrd
cmp
scas
push
js
ja
es
xchg
scas
js
ja
xchg
dec
sbb
push
cs
les
mov
(bad)
xchg
outs
or
shr
outs
pcmpeqd
imul
gs
inc
shl
neg
mov
data16
push
psrad
xor
ja
pop
mov
pop
neg
push
jo
push
out
push
pop
sbb
mov
lea
cmp
rcl
xchg
fld
push
push
pop
jecxz
outs
js
(bad)
pop
jbe
dec
xor
jns
add
xor
jno
(bad)
pop
test
test
cmp
pop
pop
mov
lea
push
and
dec
xor
sub
jns
out
shl
pop
mov
ret
or
addr16
xlat
xchg
arpl
pop
jae
loopne
pop
jle
jbe
adc
jnp
push
dec
push
pop
nop
data16
lahf
outs
das
call
outs
jbe
jae
inc
aaa
not
movs
sar
(bad)
sbb
es
dec
cmp
inc
loopne
iret
pop
sbb
popa
cmp
rcr
fistp
ja
imul
adc
and
mov
push
into
leave
neg
clc
pop
push
outs
pop
push
push
push
pop
pop
inc
push
out
push
push
push
push
pop
dec
jecxz
adc
test
push
ss
vmptrst
mov
test
pop
dec
pop
out
outs
in
pxor
loopne
sub
pop
pop
lds
leave
je
xor
pusha
pop
mov
mov
pop
pop
das
bound
mov
pop
pop
fisttp
(bad)
lea
jae
adc
lahf
mov
test
mov
mov
cs
or
fcmovnb
xchg
rol
push
add
inc
pop
inc
pop
lea
xchg
(bad)
push
mov
les
push
lds
repz
xchg
dec
lds
inc
push
mov
dec
sar
or
(bad)
xchg
dec
nop
xchg
pop
mov
push
xchg
dec
xchg
les
outs
sbb
test
xchg
(bad)
ss
ret
pop
ins
out
jnp
push
(bad)
mov
psubusw
ret
shl
lock
mov
mov
movs
push
(bad)
mov
xor
mov
and
mov
add
cmps
pop
iret
xchg
test
out
jle
push
push
xor
mov
mov
xchg
inc
cmp
mov
push
fstp
pop
ja
pop
stos
inc
mov
lock
push
outs
ins
pop
jno
jg
xor
imul
les
jbe
jle
jb
loopne
gs
push
or
mul
cwde
pop
cmp
mov
ficomp
pop
jle
les
push
pop
mov
pop
fimul
jl
jg
xchg
push
mov
ds
xchg
lock
mov
idiv
into
xchg
mov
outs
push
pop
xlat
(bad)
cmp
jmp
(bad)
lock
cmc
or
pop
pop
pop
test
fisub
popf
out
dec
cs
xchg
pop
and
pop
pop
bound
inc
call
into
pop
and
aaa
push
outs
(bad)
aas
jmp
mov
inc
test
lods
dec
aas
inc
push
iret
jo
pop
arpl
pop
jb
cmp
jno
inc
aaa
xor
daa
ds
dec
pop
test
inc
push
outs
cmp
inc
loopne
inc
mov
fstp
push
out
gs
pop
outs
iret
pop
aaa
adc
push
andps
es
cmp
pusha
pop
push
fimul
daa
dec
inc
fistp
sahf
test
das
mov
out
push
dec
mov
mov
add
jmp
jbe
addr16
xor
or
push
fucomip
adc
scas
cmps
push
fild
push
pop
outs
add
das
jg
clc
inc
fimul
into
dec
jbe
push
pop
addr16
pavgw
mov
xlat
outs
push
sbb
fild
dec
xor
mov
sbb
imul
shr
pop
pop
cmps
(bad)
mov
dec
call
sbb
fiadd
fadd
mov
jns
lock
scas
add
lds
push
mov
xchg
lods
repnz
pop
push
(bad)
nop
dec
sbb
data16
(bad)
imul
ror
push
(bad)
ds
(bad)
xchg
push
imul
xchg
call
pop
xchg
enter
cmps
imul
push
cwde
enter
mov
push
(bad)
cdq
push
push
mov
xchg
pop
mov
push
mov
nop
push
xchg
ret
push
(bad)
iret
rcl
cmps
mov
shl
adc
cmp
push
daa
mov
bound
pop
clc
add
mov
test
or
jle
shufps
adc
sub
jle
dec
cmp
sbb
add
jne
outs
mov
mov
pop
movs
jno
jb
push
jo
dec
pop
jmp
ja
jle
movs
ins
jns
nop
jg
push
mov
mov
fiadd
popw
cwde
xchg
mov
lahf
ja
jbe
cwde
outs
jo
jmp
push
js
dec
cmp
outs
outs
or
xchg
sahf
out
pop
retf
pop
(bad)
push
pop
add
aaa
(bad)
xchg
neg
push
push
xchg
mov
outs
lea
push
jle
mov
push
push
pop
mov
xchg
shr
push
push
xchg
gs
or
pop
test
test
pop
or
popf
outs
pop
add
push
aaa
xchg
add
dec
(bad)
mov
into
out
jbe
jo
imul
or
out
xchg
idiv
inc
push
jae
pop
push
push
dec
int3
call
call
outs
push
call
xchg
outs
cmp
push
cmps
out
jo
sub
mov
mov
test
nop
aaa
dec
ret
add
add
scas
pop
push
pop
sbb
call
pop
push
sub
daa
and
or
sbb
lahf
jbe
sar
pop
imul
push
sub
push
inc
and
push
aaa
outs
jmp
dec
in
bound
pop
xchg
daa
and
inc
jl
dec
mov
sbb
mov
pop
es
or
pusha
aaa
jmp
push
pop
shl
push
dec
jg
pop
jne
test
jg
out
adc
sbb
pop
dec
test
add
xlat
out
add
push
adc
cmp
or
cmp
(bad)
(bad)
inc
xlat
xchg
push
sahf
leave
xchg
inc
(bad)
xchg
push
jbe
add
dec
sti
dec
retf
leave
ss
lea
mov
(bad)
fist
mov
push
retf
out
pop
push
xchg
retf
xchg
neg
xchg
call
mov
out
cmp
xchg
enter
leave
push
cwde
retf
fdivr
cwde
es
push
push
(bad)
ja
idiv
(bad)
cdq
pop
pop
(bad)
push
lds
mov
xchg
ds
push
xchg
aas
nop
cdq
add
ldmxcsr
ret
pop
xchg
xchg
push
jmp
paddsb
jo
aas
jo
xchg
mov
and
mov
mov
cmps
mov
and
inc
push
fnsave
xchg
add
jmp
jg
jge
jp
xlat
scas
inc
ret
or
jp
arpl
cmps
adc
sti
imul
jbe
(bad)
(bad)
cdq
cmps
outs
mov
jo
pop
ja
xchg
imul
push
add
jbe
mov
(bad)
mul
cdq
pop
xchg
mov
or
outs
xchg
pop
xchg
jl
sbb
popa
xchg
pop
inc
push
jbe
outs
sbb
packuswb
das
out
ficomp
dec
nop
div
push
cs
pop
movs
fnsave
sub
pop
pop
into
iret
cmp
data16
and
or
dec
js
fild
adc
fisttp
js
pop
xlat
pop
or
pop
int3
test
dec
xchg
jg
dec
xor
dec
dec
jbe
aaa
adc
mov
sbb
sub
inc
aaa
pop
js
(bad)
push
pop
data16
jno
mov
into
outs
test
jb
sub
fisttp
dec
adc
dec
or
cs
add
jns
outs
daa
xchg
shl
xor
(bad)
out
rol
pop
push
xchg
push
call
inc
lock
outs
push
push
pop
push
xor
xlat
out
dec
repz
pop
push
ja
push
pop
lock
(bad)
outs
add
adc
cmp
fmul
call
call
jo
jne
push
push
addr16
retf
sbb
outs
push
adc
push
(bad)
lea
push
aas
fild
dec
or
in
pop
pop
jg
mov
dec
das
mov
out
aas
bound
pop
push
jg
dec
xchg
(bad)
xchg
dec
not
xor
add
mov
sbb
push
and
pop
adc
inc
or
(bad)
push
jg
push
mul
pop
test
pop
call
push
retf
xchg
fnstsw
xchg
dec
jmp
xchg
lea
push
leave
jne
lea
mov
jl
push
nop
dec
leave
xchg
pop
retf
fwait
push
jle
lock
xchg
push
xchg
retf
mov
pop
xchg
int3
popf
call
pop
leave
pushf
sahf
int
ja
push
cdq
fwait
inc
push
retf
mov
push
call
pushf
pop
cwde
in
in
pop
push
(bad)
cdq
jo
sbb
pop
cmps
les
shl
ret
push
pop
xchg
ret
sar
jle
(bad)
push
sbb
setg
in
mov
test
test
out
add
xchg
xchg
arpl
aaa
add
movs
scas
scas
jnp
dec
cmp
aaa
test
test
xchg
jle
test
aaa
mov
movs
mul
inc
movs
xchg
push
out
mov
rcr
pop
shl
and
popa
out
cmp
outs
in
jbe
xchg
out
push
jno
fnsave
inc
push
pop
pop
pop
jbe
aaa
fcomp
push
(bad)
(bad)
pop
mov
(bad)
pop
pop
(bad)
ja
add
xchg
push
into
(bad)
xor
mov
push
ja
cmp
pop
jg
push
js
(bad)
jb
(bad)
pop
and
add
jl
push
repz
jmp
mov
sti
push
push
pop
out
pop
sbb
arpl
push
out
mov
sub
repnz
jne
xchg
shl
fnsave
push
dec
pop
je
call
xlat
call
inc
pop
or
out
dec
ds
mov
push
pop
ja
or
push
iret
sahf
idiv
push
inc
aas
push
ss
cwde
mov
push
push
push
sbb
addr16
gs
addr16
cs
push
bswap
bound
loopne
rcl
mov
imul
push
cmp
pop
cmps
sbb
mov
mov
push
(bad)
pop
js
jne
aas
push
ja
pop
mov
repnz
pop
push
push
push
push
lods
sbb
jg
addr16
mov
xchg
cmp
dec
sysret
and
retf
(bad)
iret
pop
dec
mov
adc
out
add
cmp
outs
add
fmul
dec
pop
push
fistp
add
out
test
add
adc
ja
xor
and
sbb
shl
jnp
mov
xchg
cmps
push
mov
jnp
aas
loopne
dec
int3
cwde
dec
mov
jo
nop
int3
push
ss
retf
outs
xchg
int3
pushf
xlat
add
jle
xchg
int3
dec
push
xchg
push
out
data16
int
call
in
ja
int3
lahf
call
push
push
fwait
out
sub
pop
call
pushf
repz
div
sahf
sahf
ss
xchg
ins
and
popf
aas
retf
pop
sahf
rcl
out
fwait
leave
sahf
setl
push
cld
cmps
fwait
enter
add
cmps
outs
(bad)
std
shl
ret
sbb
ret
inc
cs
mov
xchg
push
nop
adc
push
lea
mov
cmp
(bad)
les
mov
xchg
inc
add
push
sbb
jle
aad
mov
xchg
xchg
js
je
call
cmps
mov
and
jbe
jbe
bound
inc
loopne
jmp
mov
sbb
jmp
addr16
push
add
push
mul
pop
mov
call
outs
cwde
imul
sbb
out
pusha
xchg
pop
addr16
pop
pop
or
pop
xchg
data16
jmp
call
mov
pop
dec
nop
push
push
push
(bad)
cmps
jmp
inc
pcmpeqd
mov
(bad)
cmove
fiadd
push
xchg
ja
pushf
sbb
push
push
ss
loopne
rol
addr16
pushf
test
jl
mov
dec
jmp
pop
outs
or
arpl
push
ss
rcr
pop
lods
pop
jbe
or
repz
jg
es
pop
sub
dec
mov
js
dec
push
daa
dec
lea
push
inc
pop
pop
out
out
jle
push
je
mov
push
jno
js
fisub
pop
push
inc
outs
sbb
movs
dec
outs
es
test
xchg
pop
inc
inc
jbe
jecxz
add
(bad)
ds
sbb
outs
ffreep
jle
jmp
mov
add
push
pusha
pop
push
mov
inc
out
push
pop
mov
pop
xchg
pushf
in
shl
test
jg
int3
pop
outs
lods
pop
push
pop
push
and
jge
mov
das
sub
mov
lock
fisttp
dec
inc
bound
add
(bad)
pop
into
add
loopne
test
sbb
jne
xor
mov
pop
test
shl
dec
(bad)
add
mov
dec
fucomp
aaa
daa
add
jno
pop
jle
jno
nop
ss
push
adc
pop
push
pop
outs
out
pop
jbe
mov
pop
int3
dec
push
rcr
jp
mov
fwait
pop
pop
xchg
int
xchg
out
cdq
mov
pushf
pop
xchg
into
popf
push
xchg
pop
pusha
pop
fiadd
push
push
xchg
pop
xchg
into
addr16
jbe
into
mov
push
pop
mov
lahf
call
pushf
pop
pop
jae
movs
popf
sahf
int
iret
mov
addr16
xor
lahf
pop
push
aaa
mov
push
push
int3
mov
add
popf
sbb
push
retf
enter
rol
popf
xchg
sub
aaa
fwait
lahf
add
jge
push
cwde
mov
push
arpl
ret
xchg
push
xchg
lahf
cli
sub
xchg
(bad)
xchg
xchg
push
(bad)
mov
xchg
lea
mov
icebp
inc
test
jbe
pop
mov
lea
test
mov
push
rcl
mov
imul
movs
paddsb
jnp
jg
cmps
mov
xchg
sbb
(bad)
(bad)
div
push
clc
sbb
clc
out
outs
xchg
imul
lahf
jbe
test
data16
call
jg
add
ret
out
outs
xor
xchg
neg
push
pop
stc
xchg
cs
pop
pop
xchg
jns
xchg
cmp
pop
lea
pop
lea
pop
push
(bad)
fimul
jle
pop
call
pop
xchg
push
mov
(bad)
into
neg
push
pop
pop
pop
pop
add
pushf
test
rcr
(bad)
jle
push
sub
sub
push
push
push
dec
sbb
ss
pop
dec
pop
jbe
outs
out
dec
jbe
je
fmulp
jp
dec
ja
bswap
cmp
je
push
sub
push
dec
test
shl
outs
ja
outs
dec
call
pop
mov
pop
out
jge
addr16
punpckldq
add
outs
(bad)
mov
imul
(bad)
pop
push
les
dec
add
inc
shl
adc
mov
push
xor
(bad)
fistp
xchg
mov
push
sbb
fistp
pop
push
xchg
movq
mov
shl
(bad)
inc
ja
sub
shr
out
xor
dec
jg
add
ror
daa
push
cmp
xlat
mov
adc
mov
pop
xchg
pushw
add
aaa
test
mov
push
or
(bad)
into
xlat
jbe
sbb
(bad)
push
fistp
push
iret
popf
call
iret
sahf
call
xchg
xchg
iret
lahf
push
shl
inc
pop
fcmovbe
mov
cs
repz
xchg
data16
call
pop
popf
push
lahf
pop
iret
push
iret
movs
shl
mov
cmps
jmp
mov
xchg
xlat
mov
int
add
ins
mov
dec
xlat
je
fisubr
retf
out
add
sahf
scas
mov
xor
mov
cmps
fwait
sahf
push
mov
fwait
pop
xchg
pushf
fwait
(bad)
lds
add
sbb
cwde
scas
xchg
add
inc
xchg
scas
daa
xchg
adc
mov
jle
mov
sahf
jle
loope
inc
call
inc
push
jmp
sbb
sahf
aaa
dec
dec
mov
push
lahf
test
push
inc
jge
(bad)
or
or
mov
pop
ds
aaa
adc
and
test
jo
bound
movs
outs
cmp
dec
lods
movs
pushw
push
lahf
iret
cmp
outs
out
pop
pushf
push
paddsb
sbb
sbb
pop
jmp
pop
pop
clc
inc
xchg
xor
loopne
nop
dec
push
addr16
mov
and
pop
(bad)
(bad)
pop
lea
js
pop
fistp
arpl
fucomi
jbe
mov
fadd
not
dec
dec
mov
jnp
push
out
dec
pop
jge
push
xchg
fidiv
dec
scas
outs
mov
fild
jle
push
pop
add
and
pop
adc
pop
cmps
xchg
pop
mov
push
dec
js
sbb
pop
dec
xchg
add
dec
push
cmovg
sbb
push
cmp
outs
inc
push
mov
push
ja
loope
aas
mov
push
dec
imul
fisub
aaa
pmaxsw
dec
pop
ficom
outs
addr16
lock
out
and
and
in
dec
bound
jle
ret
add
pop
popa
loopne
mov
imul
jbe
pop
mov
cwde
dec
add
push
add
adc
iret
push
push
push
es
push
push
rol
es
push
lea
icebp
dec
test
fistp
outs
or
adc
mov
pop
scas
enter
inc
pop
push
jp
pusha
jb
jg
inc
and
jae
mulps
pop
ja
aad
push
iret
(bad)
das
adc
imul
add
or
xor
add
add
(bad)
iret
push
push
nop
sbb
push
xchg
xchg
outs
fmul
fcom
mov
push
xchg
mov
cwde
ror
cdq
pop
pushf
add
cdq
shl
out
movs
push
shl
push
push
shl
aas
in
pop
cmps
cpuid
push
mov
shr
shl
movs
mov
jne
mov
push
movs
rcl
test
cdq
cmp
ldmxcsr
pop
xchg
push
mov
mov
jl
dec
sti
push
int3
mov
retf
inc
sbb
es
(bad)
or
push
fwait
(bad)
sahf
push
les
pextrw
pop
push
cmp
lods
xchg
bound
dec
pop
push
jo
jbe
mov
add
add
mov
jbe
mov
into
push
xchg
jp
lea
add
jbe
pop
jns
pop
push
inc
xchg
push
mov
je
jae
mov
ja
not
ins
jbe
outs
fcomp
dec
lods
xchg
mov
push
push
imul
cmp
arpl
ficomp
cld
ja
jg
out
add
out
pop
pop
xchg
pop
lock
mov
push
xchg
push
jg
push
ficom
sub
mov
das
pop
outs
daa
data16
jle
lea
pushf
sbb
pop
mov
add
push
clc
xchg
(bad)
pop
outs
push
add
les
mov
rcl
outs
push
push
inc
daa
sbb
cs
xchg
aaa
nop
add
jbe
push
inc
adc
mul
rcr
dec
ja
inc
push
sbb
inc
ins
divps
dec
fidivr
jns
push
push
dec
dec
into
cmp
addr16
and
mov
lea
xchg
push
pop
jg
xchg
shl
addr16
fnsave
xlat
out
xlat
adc
fcomp
ja
sti
inc
bound
out
push
add
cmp
pop
cmp
cmp
pop
jle
fild
xchg
retf
movntq
out
inc
jg
pop
imul
cmp
inc
pop
jbe
adc
outs
adc
dec
add
jo
outs
push
pop
xchg
(bad)
aaa
ret
xchg
nop
mov
pop
and
call
cdq
cmp
lock
xlat
or
mov
jg
jg
rol
pop
pop
shl
movhps
or
ja
fadd
dec
aad
stos
add
into
leave
and
pop
lahf
test
add
or
outs
nop
rcr
rcr
xchg
sar
lock
mov
mov
outs
mov
movs
push
movs
call
jns
paddq
xor
rol
es
push
mov
mov
push
jbe
jnp
mov
pop
stos
push
jns
cdq
fwait
shl
pop
push
shl
fistp
cmps
rcl
sar
cmps
sar
movs
bswap
je
sti
cmps
pop
into
push
movs
into
movs
int
mov
mov
jo
fldenv
add
cmp
push
mov
xor
push
(bad)
call
push
dec
pop
adc
sbb
cmps
mov
mov
mov
mov
in
xchg
into
dec
ret
mov
jle
imul
push
addr16
pop
lahf
lods
js
xor
out
ja
push
add
out
push
jbe
xchg
dec
jb
push
outs
adc
je
push
out
push
cld
shl
adc
push
iret
data16
dec
popa
rcr
push
inc
mov
call
outs
xchg
into
fidivr
cwde
xchg
popw
out
add
add
mov
loop
ficomp
divps
imul
pop
push
xor
xchg
in
mov
xchg
minps
xchg
out
pop
xchg
pop
scas
pop
adc
(bad)
popf
dec
ds
jo
in
(bad)
outs
divps
xchg
sti
fsubp
jb
lods
adc
push
jg
jge
push
ins
cmp
dec
dec
jne
sbb
out
jae
fcmovu
cmp
dec
jo
dec
dec
outs
sbb
outs
dec
cmps
mov
pop
das
mov
pop
xchg
dec
push
dec
sub
lahf
aas
mov
add
pop
mov
pushf
es
adc
pop
add
fs
adc
ins
pop
into
push
push
push
hlt
xchg
out
jg
xchg
inc
ss
cmps
pop
dec
push
out
cs
pop
jbe
cmp
push
xchg
outs
pop
jg
dec
es
shl
out
scas
push
in
test
out
inc
push
push
inc
and
jbe
mov
(bad)
out
jmp
sub
jmp
pop
push
dec
out
push
lods
adc
pop
pandn
ds
pop
ja
test
aaa
out
xor
sbb
xor
pop
cmps
(bad)
cmp
xor
jg
mov
adc
inc
mov
test
adc
dec
add
and
or
outs
jl
cs
mov
xchg
push
je
adc
cwde
pop
fwait
push
ror
jecxz
scas
popf
jbe
aam
int3
pop
call
aam
(bad)
stos
jmp
push
push
mov
push
movs
aad
stc
cmp
lods
jmp
lods
jmp
(bad)
lods
es
test
rcr
dec
test
shr
xchg
stos
stos
test
sub
test
jo
idiv
push
push
iret
movs
out
add
adc
out
retf
movs
int3
neg
mov
add
cmps
jle
mov
fadd
jg
(bad)
call
call
cwde
jg
ret
xchg
push
cmp
and
xchg
jo
das
mov
push
mov
pop
xlat
push
add
lock
or
jle
div
arpl
cmp
imul
cmp
idiv
pusha
add
out
mov
jge
mov
movs
push
pop
adc
dec
mov
js
push
mov
popf
test
arpl
sbb
(bad)
fild
or
jbe
xchg
ja
paddb
out
pusha
xchg
xchg
mov
out
push
push
push
jns
into
jbe
push
pop
xchg
(bad)
pop
sbb
mov
pop
mov
pop
outs
pop
mov
outs
push
inc
pop
pushf
pop
(bad)
cmp
push
fstp
xchg
or
sahf
sub
push
xchg
test
sbb
and
pop
sbb
iret
xor
pop
pop
jo
pop
push
jle
jle
push
ror
push
dec
into
dec
rol
je
inc
ficomp
pop
jmp
addr16
jno
push
dec
js
add
push
jle
aaa
jb
inc
jbe
out
cmp
(bad)
outs
dec
movq
imul
jle
aas
ja
clc
add
pop
outs
outs
sar
adc
es
outs
mov
pop
into
pop
je
mov
daa
xchg
dec
add
xor
outs
in
out
out
push
push
pop
in
shl
pop
xchg
push
ja
retf
rol
dec
out
inc
pop
inc
out
jg
and
mov
addr16
ficomp
jbe
outs
into
adc
mov
push
dec
test
jg
xor
movs
xchg
xchg
dec
addr16
repnz
fnstsw
(bad)
pop
pop
xchg
addr16
(bad)
xchg
sbb
dec
ja
loop
bound
cmp
and
jne
xchg
out
xchg
inc
jge
iret
jle
aam
call
movs
call
push
inc
popf
aad
sahf
sahf
aad
jo
add
inc
push
aad
clc
add
push
aad
(bad)
in
mov
ss
lods
push
aad
xlat
lods
aas
nop
std
shl
xlat
scas
fwait
out
imul
test
xlat
out
pushf
stos
xor
aad
daa
push
push
lods
fidivr
out
jae
lods
(bad)
push
aam
stos
push
stos
cmps
in
out
pop
scas
mov
aam
push
shl
loopne
cmps
shr
int
popf
test
cmps
iret
sar
add
pop
xchg
cmps
jle
inc
pop
push
mov
aaa
cdq
pop
sbb
push
mov
push
push
mov
call
dec
ret
push
xchg
sub
push
nop
retf
or
add
outs
add
ret
sbb
mov
dec
jbe
dec
mov
sbb
and
jle
sbb
test
scas
ja
dec
les
out
test
out
test
je
pop
cmps
jbe
cld
shl
pop
mov
jo
dec
outs
lahf
sbb
cmp
out
sahf
bound
popf
cwd
xchg
xchg
push
outs
cwde
call
pop
addr16
out
out
xor
mov
push
sub
push
mov
pop
mov
bound
ds
mov
and
adc
push
jg
mov
inc
sub
inc
lods
add
imul
out
xlat
mov
push
dec
pop
push
dec
fbstp
out
mov
sbb
pop
mov
sub
jns
lock
sub
pop
data16
retf
push
push
dec
outs
push
mov
dec
pop
ins
cs
or
pop
push
outs
inc
dec
mov
ss
outs
aas
mov
(bad)
outs
push
adc
add
out
mov
js
jg
js
add
test
push
outs
cmp
jmp
(bad)
jg
fidivr
ja
int3
or
push
call
push
push
mulps
push
js
cmps
xchg
pop
bound
xcrypt-ecb
cmps
dec
(bad)
pusha
push
ja
xlat
(bad)
pop
adc
inc
loopne
pop
clc
addr16
jg
push
or
ja
iret
pop
xchg
xor
fisttp
push
mov
pop
addr16
sub
add
jl
xchg
mov
lods
pop
pop
sub
sbb
cmps
push
xchg
call
sub
inc
bts
sbb
ja
xor
inc
bound
inc
sub
js
inc
or
and
adc
mov
xor
(bad)
jg
ficomp
inc
xor
out
sub
stos
inc
xor
sbb
pop
push
xchg
cld
sub
push
inc
mov
mov
inc
mov
cld
jmp
xor
daa
out
inc
xor
sub
adc
clc
call
sbb
js
and
xchg
inc
ss
dec
pop
scas
jo
push
adc
je
add
fisttp
stos
push
and
repz
adc
or
pop
(bad)
ret
mov
das
sbb
mov
aas
add
pop
adc
mov
js
push
pop
das
jg
sub
add
or
pop
push
mov
mov
(bad)
sbb
push
or
es
pop
add
fisubr
mov
sub
popf
pop
pop
add
mov
pop
sbb
and
shl
test
cmps
pop
xor
test
stos
pop
aaa
sub
pop
test
pop
cmp
mov
test
stos
pop
test
pop
and
in
scas
daa
xchg
or
sahf
js
xchg
cmps
mov
adc
ja
and
in
pop
dec
push
loope
mov
scas
les
pusha
xchg
pop
and
lock
das
inc
xor
push
daa
push
pop
daa
adc
add
dec
xchg
or
cmp
je
push
push
sbb
pop
mov
and
and
mov
and
inc
mov
or
sub
fadd
or
dec
cmp
pop
not
add
dec
xor
cmp
push
inc
ss
and
ds
ror
pop
aaa
bound
add
dec
inc
pop
aaa
push
mov
imul
inc
pop
aaa
or
xchg
push
pop
pop
or
into
aaa
inc
sub
pop
or
daa
xor
xchg
(bad)
cmp
xchg
inc
pushf
push
inc
mov
call
lods
push
pop
mov
push
nop
sub
mov
mov
xchg
lds
inc
xor
dec
jg
add
mov
iret
jmp
rol
sahf
movs
mov
sar
sahf
xchg
cs
xchg
int
test
sbb
retf
sbb
(bad)
push
ret
adc
mov
loope
neg
call
mov
stos
dec
movs
inc
push
mov
cmp
daa
xor
lea
cs
(bad)
cmp
xchg
inc
daa
pop
dec
popa
push
inc
adc
push
sar
clc
test
call
push
mov
add
push
push
outs
cmp
pop
inc
add
mov
out
call
scas
push
dec
test
aas
ss
sub
or
sub
sub
inc
inc
movs
jg
jae
clc
pop
push
lods
sahf
dec
imul
outs
mov
jg
sar
push
(bad)
jo
js
push
pop
ja
mov
(bad)
divps
dec
mov
nop
fisub
(bad)
lds
and
push
outs
clc
cmp
push
dec
push
push
dec
stos
mov
xchg
imul
outs
gs
mov
jg
lock
dec
inc
mov
cmp
mov
sub
xor
daa
push
and
cld
jge
ja
sub
popf
push
inc
jo
jg
das
mov
rol
pop
out
xor
push
push
out
lock
cmovnp
daa
out
cmp
pop
sbb
das
pop
sub
test
je
daa
and
pop
mov
jg
outs
jle
pop
or
push
scas
pop
(bad)
(bad)
loope
pop
lods
test
ror
push
(bad)
xor
das
push
dec
cs
es
or
jl
pop
and
jg
das
ds
jo
test
idiv
dec
mov
inc
cmp
inc
loope
fiadd
mov
aaa
push
xadd
pop
(bad)
and
pop
inc
je
add
pop
jl
sbb
mov
daa
dec
push
sub
cmps
ss
pop
rcl
es
mov
sbb
push
ss
rcr
mov
sbb
faddp
int
inc
mov
and
sahf
popf
outs
sahf
(bad)
mov
scas
xor
jne
inc
xor
inc
ss
test
enter
lods
pop
push
ins
jo
cld
aaa
inc
cmp
test
jbe
cmp
mov
xor
scas
xor
mov
jo
(bad)
fisubr
and
mov
ins
out
and
xor
dec
daa
push
xor
fstp
ins
xor
jle
das
cmps
pop
cmp
mov
xor
inc
ss
aaa
lods
pop
sti
cmp
sub
lods
aaa
inc
xor
cmp
test
jge
pop
xlat
into
movs
cmps
sub
xor
das
and
pop
es
mov
movs
movs
pop
movs
ds
add
xor
cmp
xor
faddp
or
push
stos
fisttp
iret
lock
xchg
ds
xor
movs
mov
ja
iret
pop
out
pop
jbe
jle
push
inc
xor
xor
test
test
pop
xlat
fsubp
aaa
sub
push
xchg
das
cmps
cmp
xor
push
fdivp
xor
pop
das
mov
scas
push
addr16
mov
cmps
ss
xlat
out
fcmovnu
rol
sub
push
cmp
fisubr
cs
das
sahf
cmp
cmp
lods
(bad)
xlat
into
pop
aas
xor
pop
xor
es
and
push
aas
pop
jae
ja
pop
cmps
cmp
xlat
out
rol
test
pop
fistp
mov
push
xor
jnp
mov
pop
ss
aaa
pop
inc
aaa
mov
aas
push
outs
xchg
fidivr
(bad)
xlat
pop
out
retf
imul
xor
aas
xchg
out
mov
sbb
push
cmp
xchg
out
mov
xor
rcr
out
daa
popa
xor
push
pop
dec
inc
es
push
es
test
outs
and
dec
dec
pusha
cmp
call
call
stos
mov
mov
push
test
fwait
add
lods
movs
push
movs
popf
jmp
xchg
inc
push
test
jp
jb
mov
es
push
pop
outs
push
pop
aam
test
inc
shr
push
inc
cmp
dec
ds
xor
shl
not
cmp
aas
je
add
sbb
data16
jbe
js
jl
(bad)
jge
mov
mov
in
push
aaa
dec
jmp
sahf
xchg
jmp
cdq
mov
xchg
mov
xchg
mov
frstor
icebp
xor
jno
cmps
pop
pop
inc
jl
das
popa
push
inc
push
inc
call
and
dec
inc
push
dec
cmp
dec
js
add
dec
xor
pop
sbb
bound
xchg
ja
inc
(bad)
xchg
xchg
inc
rcr
pushf
nop
xchg
pop
cdq
lea
ss
jg
jp
cld
pusha
inc
adc
xlat
outs
pop
push
mov
dec
das
aaa
dec
mov
inc
cs
mov
lock
cmps
mov
(bad)
xor
push
scas
push
push
outs
rol
inc
add
jne
ja
sysret
mov
push
push
pop
cld
loopne
bound
gs
dec
(bad)
cs
inc
pop
das
inc
aaa
inc
xor
cmp
jle
mov
push
push
mov
inc
pop
jg
mov
xlat
dec
pop
jge
gs
js
push
pop
outs
push
das
inc
push
pop
add
cmp
out
push
inc
cmp
das
cmps
sub
pop
pop
add
inc
xor
aas
dec
cmp
sti
push
scas
(bad)
pop
sahf
inc
dec
ret
add
(bad)
mov
push
pop
xchg
js
or
out
xchg
das
xor
aaa
cmp
xor
inc
sub
sub
jae
clc
push
inc
cmp
add
ret
ror
push
jl
xchg
cs
sbb
sub
aas
aas
dec
div
sbb
sti
jo
dec
ficomp
loopne
data16
xchg
or
daa
push
inc
push
shl
jo
das
xor
es
icebp
imul
add
push
push
inc
xchg
pop
inc
cmps
pop
dec
push
pop
fsubr
pop
dec
mul
arpl
pop
push
xor
push
ds
pop
dec
ja
sbb
push
pop
pop
ss
lock
(bad)
push
push
dec
outs
push
popa
dec
out
cmps
pop
pusha
xchg
dec
pop
push
inc
cmp
sbb
and
out
push
out
sub
or
push
aaa
push
cs
mov
cmp
mov
ja
jbe
jle
jbe
xchg
pop
cmp
inc
bound
push
inc
fisubr
imul
pop
dec
dec
aaa
inc
push
gs
fild
outs
xchg
pop
push
mov
cmp
push
test
inc
xor
xor
cmp
xor
das
push
das
mul
loope
ficom
jg
dec
pop
retf
add
push
jnp
mov
xchg
pcmpeqd
cmp
jmp
out
sbb
ss
xchg
pop
push
pop
pop
fld
pop
ja
pop
popa
mov
arpl
gs
ds
push
repnz
push
cs
pop
mov
mov
mov
not
out
(bad)
push
je
je
aaa
popa
scas
bound
repz
jbe
arpl
push
push
push
push
mov
es
imul
pop
jle
push
pop
dec
sbb
fimul
data16
dec
cmps
jo
dec
fnsave
imul
add
push
push
push
or
inc
out
imul
jbe
imul
ins
pop
dec
and
mov
imul
push
outs
pop
dec
mov
push
push
outs
xchg
fnsave
pop
push
push
pop
sub
inc
ins
out
popa
sub
(bad)
outs
pop
dec
pop
jno
push
jge
in
pop
jb
push
dec
pop
mov
iret
movs
pop
jg
pop
xlat
inc
shl
pop
outs
daa
jmp
cmps
mov
or
fld
pop
adc
out
pop
pop
inc
sub
add
aaa
inc
and
das
or
and
add
xor
pop
dec
cmp
aam
stos
outs
inc
jne
pop
add
fbstp
cmp
add
mov
pushf
aaa
(bad)
add
or
adc
ret
push
adc
mov
or
pop
or
or
aaa
mov
add
or
pop
or
or
aaa
cwde
or
mov
mov
dec
jmp
mov
data16
test
fidiv
dec
add
cmovo
imul
and
test
or
xchg
lods
mov
call
mov
push
cs
es
mov
loopne
fcom
mov
mov
addr16
mov
outs
out
add
rol
outs
inc
sbb
and
into
scas
sahf
not
dec
rol
xchg
lea
pop
into
xchg
mov
dec
sar
cmp
das
daa
ficomp
shl
aaa
mov
add
add
cmp
jbe
clc
add
ja
xchg
out
mov
add
jnp
iret
jle
loopne
ds
xchg
cmp
push
sbb
cs
dec
js
imul
push
data16
xchg
add
fiadd
outs
mov
ror
ss
pop
aaa
add
push
div
push
rcr
pusha
adc
into
mov
or
call
out
(bad)
out
fnstsw
daa
ss
push
jmp
jbe
arpl
xor
das
pop
aaa
add
add
and
add
mov
push
pusha
popa
mov
push
jg
xchg
push
dec
data16
add
push
xchg
shl
add
test
pop
cmp
add
push
pop
xchg
jo
push
push
push
pop
call
pop
jg
add
or
xchg
out
aaa
cmp
mov
mov
inc
lock
and
call
pop
cmps
pop
mov
pop
xor
pusha
lds
jg
xchg
xchg
es
aaa
aaa
sub
(bad)
add
adc
sub
aaa
div
dec
pop
sbb
xor
out
(bad)
out
loop
jnp
pop
daa
inc
cmps
sbb
jbe
pop
out
add
push
pop
inc
imul
jbe
daa
loopne
mov
idiv
dec
ror
push
or
(bad)
push
loopne
mov
dec
inc
out
arpl
pop
jle
lock
xlat
push
inc
bound
out
fisttp
pop
cmps
push
or
xlat
or
cmp
out
aas
xor
aas
cmp
cs
out
ror
test
push
stc
add
pop
ss
pop
inc
cmps
aas
sar
out
shl
push
into
out
fild
fcmovnu
push
push
pop
pop
inc
fwait
add
push
cmps
ja
out
add
(bad)
(bad)
pop
shl
out
aaa
adc
cmp
outs
ds
push
inc
ss
sub
dec
pusha
pop
xor
out
xchg
dec
rol
out
inc
lods
loopne
push
xchg
pop
aaa
inc
loopne
or
pop
inc
inc
or
inc
inc
xor
popa
pop
inc
add
mov
cmovge
mov
out
jo
fcomp
push
aaa
pop
adc
sbb
out
adc
inc
jmp
mov
pop
dec
dec
dec
shr
dec
inc
test
cwde
out
aaa
sar
pop
scas
inc
mov
mov
test
push
add
setp
(bad)
fiadd
out
es
adc
popa
adc
pusha
jnp
pop
out
jo
pusha
push
pop
push
push
outs
rcl
sysret
dec
adc
jo
pop
xchg
inc
inc
lea
or
out
mov
xlat
or
ja
pop
mov
add
or
push
pop
out
push
push
add
add
ss
test
out
inc
in
into
pop
pop
out
inc
fld
inc
out
mov
lods
add
inc
or
sub
ror
scas
push
mov
or
or
push
addr16
inc
adc
xor
out
inc
rol
loopne
dec
out
inc
out
or
test
fild
mov
mov
test
mov
inc
dec
rol
loopne
out
or
inc
dec
out
movs
sar
jns
or
ss
sahf
out
inc
inc
add
cld
ja
int
pop
aaa
cmp
push
ja
ss
jns
add
std
add
outs
mov
fbstp
std
pop
adc
imul
pop
ins
fld
outs
ficom
out
fnsave
es
xor
pcmpeqd
movs
mov
inc
pop
ficom
(bad)
fisub
scas
inc
pop
movs
sub
dec
(bad)
xchg
push
aad
push
nop
xchg
je
pop
push
aaa
jle
jg
xchg
stos
popf
in
cmps
jl
aas
ror
jbe
mov
push
jg
cs
xor
pop
mov
arpl
jnp
daa
aas
dec
adc
into
jle
xor
pop
cmps
add
pop
xchg
xchg
xor
fist
fiadd
push
adc
sub
mov
mov
ins
push
ret
test
mov
aaa
outs
iret
repz
push
push
adc
and
dec
mov
add
push
mov
loop
in
out
xchg
pop
inc
adc
inc
xchg
(bad)
cmp
pushf
popa
dec
fcomp
ja
gs
push
adc
add
mov
setns
push
jnp
cmp
jns
jnp
mov
xchg
out
mov
outs
inc
imul
mov
mov
(bad)
movs
ins
push
or
jge
lahf
out
dec
das
mov
cmps
jo
mov
jl
outs
in
push
jnp
es
inc
push
dec
xor
sub
and
(bad)
dec
pop
pop
jno
les
add
mov
pusha
enter
(bad)
jg
ret
xchg
hlt
mov
clc
pop
add
data16
loopne
push
rol
add
add
push
inc
mov
mov
mov
add
mov
or
push
inc
xchg
or
add
add
or
xor
sub
push
add
push
push
nop
icebp
cmp
call
adc
data16
add
add
add
add
lods
sub
cmp
cmc
jle
popa
cli
inc
add
or
fiadd
pop
inc
xor
xor
inc
adc
mov
inc
push
adc
inc
xor
inc
mov
inc
inc
ss
cmp
adc
add
ss
add
(bad)
mov
aas
add
mul
dec
push
loope
iret
mov
(bad)
add
push
pop
maxps
repnz
add
pop
add
pop
and
push
dec
out
push
iret
add
add
sub
push
sub
push
test
loope
add
xchg
cli
cmps
adc
retf
push
call
adc
mov
mov
xlat
dec
inc
and
or
iret
mov
dec
pop
add
rcl
jae
iret
adc
imul
xchg
mov
popa
xchg
adc
adc
add
sub
xchg
add
push
push
inc
push
pop
test
test
or
mov
sar
imul
add
dec
gs
rcr
inc
sub
cld
adc
gs
outs
jbe
inc
and
ins
or
mov
mov
cmps
ins
add
inc
gs
mov
jecxz
mov
fs
push
add
popf
push
or
adc
jne
imul
sub
jo
repnz
mov
xor
imul
sbb
push
inc
sar
das
movs
pop
mov
xor
nop
aas
adc
pop
push
not
sub
mov
call
push
push
sub
sbb
inc
push
(bad)
dec
gs
add
cwde
and
mov
push
inc
lods
pushf
dec
xor
bound
sbb
sub
push
outs
jnp
xor
ins
sbb
stos
dec
sbb
rol
mov
push
ins
cmp
arpl
mov
sub
sti
(bad)
fsubr
das
cmp
dec
test
(bad)
lock
call
call
dec
sar
outs
cmp
adc
xchg
sbb
ja
inc
add
addr16
imul
xchg
and
retf
add
or
push
dec
dec
mov
out
mov
rcl
mov
retf
sub
jnp
sub
inc
push
lea
lds
shr
fwait
inc
cmp
(bad)
int3
pusha
mov
lahf
leave
loope
dec
in
adc
inc
push
lea
adc
inc
ss
sub
pop
jnp
jo
xor
test
pusha
pop
add
loop
inc
push
je
ja
jnp
arpl
out
loopne
enter
adc
xor
pop
and
dec
xor
test
shl
mov
test
mov
inc
and
xor
and
in
jo
std
push
imul
ins
sbb
xchg
inc
out
lds
sub
fwait
sti
ins
test
lds
sub
push
ror
ds
mul
imul
mov
sbb
das
inc
imul
rcl
shl
leave
outs
arpl
sbb
aaa
pusha
jnp
inc
dec
push
jb
imul
pop
xor
push
outs
sub
xchg
inc
jns
dec
enter
repz
out
dec
inc
pop
mov
sub
enter
scas
mov
sub
retf
and
lea
or
inc
push
jo
jmp
push
cmp
xchg
push
lea
push
mov
mov
shr
pusha
and
arpl
push
push
je
bound
sar
aaa
imul
outs
popw
inc
add
mov
jae
add
xor
fadd
jae
pop
cwde
in
mov
jne
add
xchg
inc
aam
adc
test
lock
inc
add
frstor
addr16
popa
sbb
out
lds
lds
jge
xor
adc
and
pusha
mov
push
ins
daa
pusha
sub
nop
lea
dec
data16
fcomp
inc
xlat
icebp
pop
pop
retf
xor
lods
stc
sub
dec
add
test
retf
nop
sub
lea
mov
pusha
fnsave
pop
scas
rol
loopne
or
add
hlt
rcr
je
out
sbb
mov
retf
(bad)
pop
sbb
adc
movs
ffree
pop
arpl
mov
pop
dec
jbe
(bad)
fadd
jecxz
pop
push
xchg
cmps
(bad)
jae
cmp
xor
mov
std
and
or
leave
pop
jo
fdiv
cmp
aam
mov
outs
loope
inc
cmp
push
mov
scas
fsubr
push
outs
pop
xor
icebp
rol
and
mov
sbb
call
pop
inc
imul
lea
fcomp
pop
xchg
in
pop
xor
jbe
lea
xor
inc
inc
inc
adc
jp
push
sbb
outs
xchg
inc
cmc
pop
mov
ret
aam
inc
and
dec
push
xor
jmp
inc
sbb
sahf
inc
pop
jo
ins
fst
push
mov
adc
shl
xchg
in
push
out
arpl
jo
adc
ins
loop
xchg
xchg
add
pop
inc
movs
lds
test
xchg
sar
cli
add
adc
or
push
out
sbb
outs
dec
sti
rcr
jmp
mov
xor
fsub
test
mov
mov
mov
mov
sbb
cmp
out
xchg
jmp
xchg
imul
cmps
xchg
xchg
adc
adc
dec
add
dec
push
movs
xchg
dec
dec
out
cmp
inc
hlt
pop
repnz
ins
xchg
mov
(bad)
push
mov
cmps
sbb
dec
outs
mov
into
sti
and
pushf
push
lea
addr16
inc
sbb
sub
jecxz
or
mov
push
mov
dec
imul
mov
pop
ins
jle
xchg
(bad)
mov
mov
add
das
stc
lock
and
call
push
cmp
push
pop
iret
jmp
jg
gs
fist
imul
pushf
ja
in
or
sbb
inc
add
(bad)
mov
pop
mov
and
lods
ins
adc
sub
mov
dec
push
dec
retf
mov
sub
xchg
push
lods
out
add
iret
push
or
ins
push
fdiv
rol
adc
adc
xor
nop
ficomp
std
push
mov
(bad)
pop
test
outs
ins
jnp
lds
add
xor
mov
xchg
fs
fstp
pop
sub
and
push
retf
inc
mov
jb
mov
add
sar
push
and
or
mov
loopne
sub
push
enter
cwde
sub
and
push
outs
pop
sbb
fwait
xor
mov
and
push
xchg
lahf
xor
nop
outs
mov
fild
fcom
aam
sbb
or
fldenv
xchg
and
mov
push
xor
(bad)
jno
aas
or
pop
movs
imul
and
lods
inc
cli
mov
bound
cmp
pusha
xchg
cmp
inc
lds
icebp
and
xchg
jae
mov
sbb
fcmovnu
sahf
retf
cs
ror
push
outs
pushf
loopne
inc
push
inc
xor
inc
pushw
ret
xchg
mov
test
add
(bad)
mul
add
cmps
lds
fs
jae
(bad)
stos
add
mov
test
lea
mov
adc
xor
imul
(bad)
adc
mov
sub
or
xor
sbb
clc
or
nop
push
jo
out
sbb
scas
jecxz
jae
jg
jo
add
sar
jo
add
je
push
in
mov
add
neg
inc
cdq
cmp
cmp
mov
outs
int3
ins
addr16
add
std
scas
add
add
dec
and
add
add
fdivr
jle
xchg
inc
outs
or
mov
in
imul
add
addr16
neg
add
adc
out
add
adc
add
or
add
add
mov
in
inc
or
lods
loopne
mov
pop
inc
dec
xor
adc
dec
rol
sub
cs
lock
or
xlat
pop
and
clc
cmp
aam
cmp
pop
push
loope
sub
out
inc
cs
sti
sbb
xchg
or
dec
loopne
outs
inc
rcr
loope
in
repz
inc
xchg
or
or
fidivr
jp
adc
mov
ror
mov
cmp
xchg
and
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
clc
or
in
add
add
