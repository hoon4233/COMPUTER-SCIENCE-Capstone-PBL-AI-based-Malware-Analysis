call
add
add
add
add
add
add
or
add
add
add
hlt
and
add
add
push
and
add
add
add
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
add
jle
add
add
xor
add
and
jb
outs
addr16
add
add
add
add
and
add
add
adc
add
and
dec
inc
add
add
add
add
inc
ins
outs
bound
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
movs
and
add
add
inc
add
add
and
add
add
jns
add
xchg
daa
add
add
add
scas
add
add
add
add
add
add
add
add
add
add
sbb
add
inc
dec
add
add
add
push
add
add
add
add
add
push
add
add
add
rol
add
add
add
add
clc
add
add
add
jnp
bound
data16
xor
sub
sub
sub
xor
xor
cmp
outs
fs
gs
ins
gs
jb
jae
jne
arpl
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
arpl
jb
outs
je
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
je
cs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
jb
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
jb
ss
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
outs
gs
outs
jb
cs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
outs
imul
outs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
jb
imul
outs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
outs
jge
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
jne
je
imul
add
xchg
mov
mov
repz
add
add
add
xchg
add
add
add
add
and
add
inc
xor
add
add
add
add
cwde
retf
repz
cwde
enter
pop
mov
dec
mov
xchg
and
(bad)
movs
test
jnp
sahf
out
sti
xchg
jns
jae
or
pop
mov
mov
retf
dec
cmps
cmps
sbb
dec
pusha
scas
push
xor
idiv
mov
call
jl
xchg
mov
arpl
popf
lods
cvtdq2ps
mov
(bad)
xor
mov
pop
mov
jnp
or
or
and
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
inc
push
inc
inc
push
xchg
xchg
aaa
cmp
cmp
add
add
add
add
add
add
add
js
inc
add
outs
add
dec
add
inc
add
add
add
add
add
imul
add
add
pop
add
mov
fdivr
loopne
adc
dec
inc
add
add
add
add
add
(bad)
fild
test
or
pop
adc
adc
adc
sbb
sbb
pop
sbb
pop
pop
adc
adc
sbb
and
sbb
xor
and
cs
pop
xor
xor
sub
or
push
or
sbb
and
sub
xor
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
rol
or
ret
add
and
add
add
adc
inc
add
add
add
add
add
add
add
add
pop
add
inc
add
add
add
add
add
add
add
add
add
adc
add
adc
xor
inc
push
popa
jno
xor
jb
rol
inc
push
(bad)
lock
inc
xchg
mov
adc
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
adc
and
xor
adc
push
popa
add
jno
(bad)
fiadd
or
add
add
add
add
add
sar
ficomp
sti
(bad)
jne
scas
jp
fidiv
add
adc
jmp
or
stos
xor
cwde
sbb
pcmpgtb
ds
in
sub
mov
in
mov
push
imul
imul
adc
mov
(bad)
add
push
pop
addr16
std
(bad)
std
xchg
or
jg
icebp
cld
mov
xchg
dec
mov
xor
mov
mov
pop
dec
cli
sub
xchg
jae
sbb
cdq
pop
push
test
jnp
jno
sti
outs
mov
aas
shl
push
mov
mov
push
(bad)
fisubr
leave
iret
push
jae
pushf
xchg
adc
pop
push
inc
xor
mov
inc
push
push
fbld
enter
aam
mov
pop
fadd
sahf
jmp
adc
and
les
cmp
(bad)
and
mov
push
or
out
fdivr
xor
mov
xlat
adc
inc
sbb
mov
ficom
jb
xor
xor
test
lods
xchg
push
loop
jb
xchg
mov
repnz
push
cmps
fwait
mov
mov
mov
(bad)
adc
sti
pop
cmp
jmp
mov
jbe
test
enter
and
cmp
and
mov
pop
mov
mov
xor
inc
mov
jle
loope
cs
jmp
mov
test
loopne
mov
out
ds
fwait
test
addr16
aad
leave
jno
mov
test
jno
in
test
jmp
jl
bound
pusha
hlt
(bad)
fidivr
loope
stos
gs
dec
push
mov
out
inc
ret
push
pop
adc
fdiv
loop
jbe
test
mov
sub
pop
jl
adc
sub
mov
cmps
add
cmp
mov
inc
shl
mov
xchg
pop
pop
inc
add
push
retf
cmp
adc
inc
xchg
nop
loope
div
(bad)
sbb
jge
dec
stos
les
push
mov
jnp
pop
dec
add
es
in
mov
inc
or
js
ret
sub
test
inc
pop
push
xor
adc
call
pop
stc
pop
dec
in
add
stos
push
call
(bad)
xor
jge
sub
sub
ss
or
jo
push
mov
inc
ror
dec
cs
pop
sbb
and
lods
scas
mov
sub
pop
adc
jb
aam
mov
fcomp
imul
sub
ins
test
sbb
adc
inc
rcl
ds
fidivr
mov
push
mov
push
stos
pop
add
ficomp
stos
xchg
sub
iret
or
cmps
mov
iret
jmp
lods
adc
sub
sub
sub
jl
jp
push
jne
rcr
jbe
into
inc
cmp
jmp
and
imul
out
adc
push
xchg
push
push
or
mov
jo
xchg
cmp
iret
sub
(bad)
jo
jmp
inc
loopne
leave
sbb
call
popa
clc
mov
inc
in
xchg
xlat
pop
dec
repnz
jb
adc
sti
xor
push
iret
imul
push
mov
xor
test
fxch
leave
cmps
mov
xor
or
mov
xchg
adc
add
fs
jb
add
dec
adc
pop
push
adc
xor
loop
push
fimul
loop
or
std
movs
dec
ret
jnp
push
fs
mov
ret
lea
popa
fcomp
add
repnz
call
js
xor
mov
adc
test
push
pop
mov
dec
lods
and
xchg
add
add
pop
rcl
fnstenv
xchg
mov
(bad)
call
sub
cwde
dec
pop
stos
ins
fisttp
pop
xchg
add
adc
gs
call
out
push
mov
sbb
cld
aas
push
sub
scas
cmc
movs
shl
pop
aaa
sub
into
ror
mov
xchg
xchg
loope
fiadd
and
stos
arpl
and
pop
push
and
dec
cs
test
jmp
mov
push
inc
jb
mov
xchg
sub
xchg
aad
ja
mov
jne
push
jg
and
mov
ret
shr
(bad)
out
and
sub
inc
sub
mov
sub
les
mov
jl
fiadd
stc
xor
dec
xor
std
or
and
call
repnz
sub
mov
mov
repnz
add
push
loopne
inc
repnz
pop
jbe
loop
mov
(bad)
icebp
add
stos
add
add
cdq
aas
xor
xchg
mov
add
not
les
cmc
pop
cmp
ret
lock
add
outs
aad
push
mov
cli
movs
adc
mov
movs
fsubr
add
push
add
test
sbb
dec
ins
or
adc
dec
inc
enter
add
push
leave
push
jg
(bad)
jge
adc
je
xchg
push
imul
fsubr
cmp
(bad)
pusha
add
fs
add
jl
sub
inc
jne
aaa
call
adc
cmps
mov
mov
stos
pushf
inc
or
or
add
nop
mov
outs
mov
mov
and
data16
adc
dec
inc
mov
popa
jbe
pop
sub
push
out
or
in
sbb
xchg
inc
daa
pop
cmp
bound
inc
pop
jno
sar
test
call
lock
in
jbe
push
mov
imul
cmp
xchg
push
inc
dec
call
jb
outs
mov
in
jecxz
inc
adc
nop
inc
pop
ja
or
pop
dec
and
aam
hlt
mov
fnstenv
ficomp
(bad)
adc
xor
cmps
inc
pop
jnp
mov
pop
fdivr
pop
and
adc
or
pop
add
popa
cmps
add
xor
push
gs
xchg
mov
in
adc
or
repnz
pop
fisub
scas
outs
retf
shl
pop
retf
jle
fcomp
popa
iret
cmp
in
lea
mov
inc
xchg
jo
jg
js
loop
pop
test
iret
dec
fnstcw
mov
nop
pop
retf
add
and
cmp
in
push
mul
out
lods
(bad)
mov
xchg
push
jb
pushf
loop
or
xchg
mov
dec
ja
mov
jge
pop
bound
xor
add
mov
lahf
cwde
test
push
out
ret
in
xor
inc
pop
div
inc
mov
test
out
pop
bound
sbb
hlt
sbb
leave
push
(bad)
imul
clc
loop
test
(bad)
loope
aaa
mov
fwait
sar
js
mov
pushf
mov
sub
adc
sub
mov
or
repz
repnz
inc
pop
or
pusha
adc
mov
pop
mov
(bad)
cmove
gs
dec
fisttp
aaa
jnp
cmp
mov
dec
inc
inc
mov
jmp
xchg
xchg
cmp
or
gs
and
sbb
pop
jbe
cmp
scas
lods
add
inc
leave
pop
cs
aad
sub
adc
icebp
cli
sub
push
pop
outs
xchg
mov
inc
push
mov
sbb
imul
xor
test
cmp
stos
popf
pop
xlat
jmp
sbb
or
ins
mov
and
scas
pop
adc
fld
xor
repnz
mov
cli
test
inc
sahf
inc
js
cmp
test
dec
xor
(bad)
cmc
ret
pop
xor
idiv
or
mov
out
push
arpl
xor
push
mov
ret
in
je
fnstenv
idiv
cwde
movs
or
mov
jbe
cwde
dec
cmp
mov
mov
in
inc
and
sub
mov
or
sub
cmp
and
add
cmp
fimul
test
adc
mov
add
dec
leave
ins
je
imul
cmp
cmp
push
mov
loop
push
int3
test
xchg
ror
retf
jp
push
out
push
sbb
outs
in
daa
sbb
push
loopne
adc
mov
stos
adc
cmp
jmp
lods
dec
dec
test
scas
dec
adc
xor
adc
mov
iret
test
call
sub
stos
xchg
push
ret
xchg
adc
jmp
inc
mov
arpl
fst
mov
push
enter
inc
cmps
xor
cmp
ret
inc
xchg
push
pop
movs
out
imul
pusha
pop
xchg
sbb
xor
dec
les
adc
jmp
lods
jbe
or
daa
adc
pop
xchg
pushf
sub
fimul
(bad)
hlt
push
retf
(bad)
jle
leave
pop
lods
jge
hlt
outs
mov
(bad)
inc
adc
pop
pop
fst
jge
(bad)
jmp
xor
mov
xchg
movs
mov
mov
ins
stos
fdiv
jmp
pop
out
les
ror
mov
xchg
lds
pop
nop
mov
mov
mov
cmp
enter
frstor
icebp
fcomp
imul
sub
(bad)
sbb
or
xchg
imul
inc
xchg
dec
push
add
push
es
pusha
dec
mov
or
sbb
imul
sbb
jmp
into
jle
mov
(bad)
sar
ror
mov
inc
cmp
pop
push
inc
cmps
dec
and
mov
cdq
fwait
or
pop
fwait
mov
test
out
dec
mov
sub
mov
out
popa
push
sbb
nop
sbb
xchg
aad
xor
mov
cmp
adc
rcl
pusha
sbb
mov
pop
fdivrp
mov
aad
fst
out
mov
cmps
xchg
jne
and
or
mov
push
stos
cmp
shl
mov
(bad)
out
jmp
(bad)
mov
add
nop
daa
dec
mov
ins
xor
int
dec
punpckhbw
mov
cmp
repnz
push
mov
push
stos
inc
ins
pop
bound
mov
fdiv
push
mov
push
pop
jne
push
xor
sub
jmp
and
inc
push
xchg
adc
dec
lods
mov
mov
cmp
cmp
test
dec
xchg
cmp
mov
ja
pop
cmp
in
clc
adc
not
fisub
aad
mov
lea
push
(bad)
loope
fld
xchg
mov
(bad)
pop
xor
loope
jmp
icebp
movs
inc
cmp
or
and
mov
inc
mov
xor
ins
push
scas
add
out
es
mov
out
xchg
adc
popf
(bad)
stos
add
mov
rol
push
jbe
mov
rcl
push
mov
(bad)
sbb
sbb
cmp
cwde
(bad)
mov
aaa
jno
jae
outs
mov
pop
cmp
mov
inc
mov
dec
mov
mov
xchg
stos
push
sahf
mul
out
mov
iret
mov
inc
fmul
movs
mov
xor
inc
mov
div
mov
out
push
add
inc
inc
jae
pushf
aad
imul
pop
(bad)
xor
in
fimul
std
jmp
dec
ja
aad
pop
aas
adc
sub
mov
and
sahf
pop
pop
call
push
shr
mov
push
shr
and
inc
cs
int3
and
cdq
jmp
test
(bad)
out
sbb
lods
sub
dec
repnz
mov
inc
cwde
mov
or
inc
jb
xor
inc
inc
dec
push
pushf
jnp
sub
ret
jle
and
stos
inc
and
xor
and
jae
mov
or
shr
test
mov
add
inc
retf
inc
and
not
loope
shl
pop
sub
adc
add
xchg
add
xchg
sbb
int
retf
pop
jns
stos
xor
(bad)
icebp
add
ret
inc
cmp
mov
inc
adc
lahf
mov
dec
ss
sub
lahf
inc
fsubr
in
push
rol
into
retf
inc
ret
stos
sub
cli
adc
dec
xchg
pop
arpl
or
xor
mov
stos
add
mov
jae
mov
sub
mov
inc
xchg
dec
add
inc
sahf
aad
push
imul
cld
fdiv
inc
fst
pop
out
push
inc
xchg
out
dec
sbb
pop
add
aas
xor
inc
fisubr
lds
daa
mov
enter
daa
xor
inc
and
(bad)
xor
adc
pushf
push
outs
rcl
inc
mov
mov
jae
or
push
das
dec
sub
push
inc
sbb
mov
jb
pop
dec
cmps
ja
mov
dec
je
ss
xor
push
add
push
push
dec
fsubr
mov
jge
mov
cmp
popa
jo
xor
leave
pop
out
jnp
xor
dec
adc
pop
dec
pop
add
mov
jbe
mov
stc
and
popf
mov
xor
imul
cdq
or
int3
pop
or
dec
jecxz
xchg
adc
push
push
push
adc
retf
sbb
lock
shl
pop
nop
pop
inc
call
nop
daa
aaa
aaa
ins
push
cli
mov
in
retf
and
cmp
repnz
mov
lods
sbb
xchg
xchg
in
call
lock
test
dec
pushf
out
dec
sti
movs
dec
neg
clc
sahf
pop
mul
nop
pop
jbe
(bad)
push
inc
cmp
and
sbb
mov
fld
sub
scas
dec
mov
or
test
loop
sbb
fidiv
mov
add
xlat
mov
das
xor
mov
popa
rol
les
xor
in
outs
sub
add
inc
scas
div
pop
push
in
add
xor
push
pop
test
mov
and
ret
in
xor
mov
sub
dec
sub
and
push
aam
into
inc
mov
or
mov
lds
dec
cmp
cmp
mov
test
pop
dec
xchg
mov
leave
ja
inc
fsubr
arpl
xchg
cli
push
dec
xor
add
dec
xchg
inc
cmp
or
dec
cmp
loop
fs
loope
bound
hlt
aad
mov
clc
and
pop
scas
ins
mov
mov
add
inc
cmp
leave
mov
mov
or
pop
mov
int3
xchg
jle
xchg
dec
imul
out
pop
fidivr
data16
pop
aam
mov
push
mov
mov
lahf
push
push
and
push
and
push
adc
sar
xchg
and
or
in
add
pop
out
dec
cmp
scas
pop
sbb
rol
push
repnz
mov
ficom
in
out
jbe
dec
mov
mov
add
int3
(bad)
mov
sub
adc
shl
int3
add
xchg
mov
js
je
sub
stos
mov
test
mov
add
mov
xor
cmp
mov
xchg
mov
cdq
lock
push
push
mov
pop
ins
or
push
sub
cmps
aaa
test
in
retf
cdq
and
sbb
adc
(bad)
jge
stos
fdiv
inc
pop
fnstenv
fdivr
sar
ins
dec
inc
clc
pop
ins
(bad)
push
aam
jmp
lock
mov
pop
adc
adc
pop
fisub
shld
xlat
xor
sbb
sub
pop
sti
out
shl
push
mov
mov
mov
mov
retf
mov
add
and
push
sti
cmc
mov
jno
mov
adc
cmp
jg
test
stos
shr
pushf
fistp
es
inc
sti
aas
mov
dec
sahf
shl
sti
sub
mov
lea
or
adc
inc
fs
lods
inc
ss
mov
mov
push
push
add
sbb
mov
jmp
ins
jp
test
mov
adc
fs
bound
sti
mov
mov
in
mov
xchg
ret
sub
push
or
scas
lods
popf
scas
inc
dec
popa
sub
push
mov
dec
test
and
jns
mov
add
rcr
dec
stos
jg
fwait
inc
sub
mov
and
xor
icebp
sub
mov
out
cmp
jae
xchg
inc
mov
mov
dec
inc
ficomp
imul
and
push
add
mov
xchg
adc
push
adc
cdq
outs
imul
inc
xchg
xchg
push
mov
jne
sbb
xor
or
inc
push
mov
jmp
je
aaa
sub
mov
stos
inc
ret
ja
icebp
or
sub
pop
scas
add
sahf
jmp
adc
xor
mov
xchg
add
jns
popf
pop
push
scas
xor
ret
pop
xchg
(bad)
outs
sub
stc
cs
ins
cmps
in
jbe
popa
jns
inc
add
mov
ins
sar
mov
xchg
add
xlat
jb
shr
mov
je
adc
sub
imul
inc
push
shl
out
call
dec
ins
cmp
sbb
retf
enter
lds
das
or
and
dec
inc
xor
xlat
in
sahf
mov
mov
imul
loope
mov
cmp
xchg
loopne
xchg
mov
aas
retf
mov
xchg
push
lea
aad
inc
cs
movs
ds
mov
mov
xchg
xor
inc
xchg
or
pop
pop
fild
adc
jbe
add
adc
add
push
and
lahf
add
mov
mov
imul
add
mov
cmp
out
ins
mov
movs
push
fidiv
hlt
and
xor
push
jmp
pop
out
int3
cmp
adc
or
xor
xor
popf
mov
pusha
lods
lods
mov
ss
push
cmp
or
inc
out
call
jecxz
sub
mov
add
inc
xchg
sub
pop
push
pusha
add
shl
jecxz
jo
fisubr
or
lods
loope
jmp
fdiv
call
or
xor
or
test
ja
mov
jp
scas
or
fcomp
mov
sub
adc
dec
sub
pop
sbb
div
push
imul
ins
mov
dec
sbb
add
loop
push
pop
scas
daa
pop
mov
pushf
neg
es
cmp
pop
and
inc
push
push
popa
sub
jecxz
jp
test
mov
mov
xchg
pop
pop
and
sti
jno
mov
out
jl
jb
mov
adc
cwde
mov
popf
pop
fwait
mov
and
cmp
add
inc
aam
rol
xchg
pop
out
fimul
or
loope
jnp
jae
dec
push
mov
add
call
cmps
adc
dec
pop
mov
push
mov
jnp
int
(bad)
call
sbb
fimul
dec
adc
das
sbb
retf
dec
loope
cmp
xor
sub
mov
ror
push
push
fld
cmp
mov
pop
dec
fwait
cmp
push
std
push
jo
mov
jo
or
sbb
std
pushf
mov
call
pop
popa
mov
jne
lods
and
mov
fs
sbb
outs
cmp
outs
fmulp
pop
fimul
push
popa
jp
adc
repnz
adc
mov
(bad)
fscale
lds
addr16
inc
scas
xlat
or
test
je
imul
shl
push
pop
popf
push
out
add
popa
xor
ror
loop
popf
mov
sub
stos
add
das
bound
xor
sbb
or
movs
ins
xor
test
enter
and
inc
xlat
or
jl
cmps
sub
dec
adc
cs
fisubr
shr
fdiv
mov
cmp
push
retf
inc
mov
stc
in
jmp
enter
(bad)
push
(bad)
enter
(bad)
mov
xchg
jnp
fwait
test
and
test
in
fwait
arpl
cmps
sub
(bad)
xor
movnti
stos
bound
cmp
fst
jno
bound
xchg
cmps
into
pop
(bad)
cli
jno
std
pop
rcl
or
add
inc
push
mov
jae
and
xor
(bad)
push
add
cwde
and
daa
jle
clc
stos
in
aaa
shl
jmp
mov
mov
shl
inc
and
xor
fwait
cmp
stos
push
mov
mov
xchg
mov
mov
jnp
push
mov
inc
(bad)
(bad)
out
iret
call
pop
out
fiadd
pop
jo
pop
mov
cwde
pop
scas
or
jns
push
mov
adc
mov
jle
jne
dec
dec
je
adc
fstp
dec
push
test
ins
arpl
rol
imul
sahf
pop
aas
data16
rcr
cld
mov
daa
(bad)
enter
jecxz
pop
adc
xor
(bad)
dec
aad
loop
leave
jge
jbe
sahf
pop
hlt
(bad)
je
inc
(bad)
test
dec
mov
jle
(bad)
ret
ins
hlt
inc
in
sub
call
popf
xchg
out
pop
dec
mov
pop
lea
jb
mov
cmp
loop
test
jmp
and
mov
xchg
fst
fiadd
fcmovnb
or
mov
ins
std
stc
addr16
lds
ja
mov
test
sbb
arpl
cmp
fadd
or
ret
lahf
inc
push
icebp
lahf
push
cmp
mov
push
aad
pop
jle
ret
inc
(bad)
lahf
xchg
mov
(bad)
(bad)
sub
pop
jnp
movs
xor
jo
outs
retf
daa
push
xchg
je
pop
pop
or
mov
sbb
(bad)
and
and
push
addr16
cmps
and
call
or
mov
sbb
sbb
inc
mov
inc
popa
pop
into
call
hlt
sti
popa
mov
inc
or
cs
out
inc
sub
push
lds
lods
and
jbe
int
lahf
outs
pop
fwait
cmp
or
or
iret
xlat
cmps
(bad)
fld
shr
xor
shl
bnd
stos
jne
fmul
ja
cmp
pop
push
mov
pop
inc
jnp
xchg
fsub
(bad)
jmp
arpl
jmp
push
inc
sub
fwait
jbe
jmp
ret
arpl
xor
jge
mov
mov
pop
cmp
pop
hlt
push
dec
leave
pop
out
adc
cdq
push
push
scas
push
call
sbb
push
inc
push
lock
adc
outs
out
mov
std
(bad)
adc
nop
out
icebp
pop
loopne
sbb
and
(bad)
lock
dec
adc
mov
xchg
mov
sub
test
push
mov
and
xor
dec
mov
adc
test
inc
jg
imul
cdq
js
(bad)
aas
sar
icebp
cli
sub
test
mov
icebp
add
jnp
jge
push
jmp
cmc
retf
push
and
ins
dec
lds
xchg
adc
lock
mov
fs
cmc
(bad)
out
inc
xor
stos
jmp
loope
mov
sub
mov
cmc
push
mov
js
mov
cld
dec
aad
push
mov
xchg
addr16
dec
jp
push
sub
es
call
mov
das
push
sub
outs
fs
(bad)
fldenv
add
add
nop
add
add
add
add
(bad)
inc
add
add
add
add
rol
add
push
pop
mov
int
mov
push
push
jb
addr16
ins
and
outs
outs
outs
je
bound
jb
outs
and
and
and
fs
add
add
add
(bad)
sub
fstp
dec
mov
mov
dec
mov
mov
dec
mov
mov
xor
mov
dec
mov
mov
imul
push
inc
add
dec
add
fmul
push
loopne
add
or
or
add
add
add
add
out
inc
add
adc
add
mov
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
add
add
adc
add
add
add
add
adc
add
in
adc
add
add
add
pusha
add
je
add
shl
add
mov
add
add
je
js
add
add
add
add
add
add
add
and
add
jb
popa
je
add
in
add
add
add
add
add
add
fs
je
add
add
add
add
add
add
add
add
add
inc
add
shr
jae
arpl
add
je
add
add
add
call
add
inc
add
inc
mov
sub
neg
push
sbb
push
and
add
push
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
call
test
jle
and
or
push
call
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
lea
mov
cmp
jne
test
je
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
test
jne
pop
mov
mov
jmp
mov
mov
mov
push
mov
push
mov
push
mov
push
push
push
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
lea
mov
cmp
jne
test
je
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
test
jne
pop
mov
mov
jmp
mov
mov
mov
push
mov
push
mov
push
mov
push
push
push
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
jne
mov
ret
mov
jmp
int3
int3
int3
int3
int3
int3
mov
test
jne
mov
ret
mov
jmp
int3
int3
int3
int3
int3
int3
mov
test
je
cmp
je
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
cmp
je
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
call
test
jne
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
call
test
jne
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
push
call
test
jne
mov
push
lea
push
call
test
jne
mov
sub
sub
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
xor
mov
cmp
je
cmp
je
cmp
je
cmp
push
push
mov
mov
mov
mov
jne
mov
mov
add
mov
push
push
call
add
add
cmp
jb
cmp
jne
lea
mov
jmp
mov
mov
push
call
mov
add
mov
test
jne
pop
pop
pop
pop
add
ret
lea
push
push
push
mov
push
call
mov
mov
mov
push
push
push
call
add
cmp
push
push
jne
mov
mov
push
call
mov
add
add
push
lea
push
call
add
lea
push
push
lea
push
push
call
push
push
push
call
mov
push
push
call
mov
add
lea
push
push
push
push
call
pop
pop
pop
mov
pop
add
ret
mov
mov
push
call
mov
mov
add
sub
lea
lea
push
push
push
push
mov
call
mov
mov
mov
mov
push
push
call
mov
add
lea
push
push
push
push
call
pop
pop
pop
mov
pop
add
ret
pop
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
xor
push
mov
call
push
call
mov
mov
cmp
je
mov
lea
push
push
push
call
add
test
je
mov
mov
pop
lea
pop
pop
ret
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
lea
push
call
add
push
call
add
mov
cmp
je
call
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
push
call
test
je
lea
push
lea
push
call
add
mov
lea
mov
mov
mov
mov
mov
cmp
jne
cmp
je
mov
mov
mov
mov
cmp
jne
add
add
cmp
jne
mov
jmp
sbb
sbb
mov
mov
mov
cmp
jne
mov
push
call
xor
jmp
lea
push
lea
push
call
add
mov
lea
mov
mov
mov
mov
mov
cmp
jne
cmp
je
mov
mov
mov
mov
cmp
jne
add
add
cmp
jne
mov
jmp
sbb
sbb
mov
mov
mov
cmp
jne
mov
push
call
xor
jmp
lea
push
mov
push
call
test
je
lea
push
lea
push
call
add
mov
lea
mov
mov
mov
mov
mov
cmp
jne
cmp
je
mov
mov
mov
mov
cmp
jne
add
add
cmp
jne
mov
jmp
sbb
sbb
mov
mov
mov
cmp
jne
mov
push
call
xor
jmp
lea
push
lea
push
call
add
mov
lea
mov
mov
mov
mov
mov
cmp
jne
cmp
je
mov
mov
mov
mov
cmp
jne
add
add
cmp
jne
mov
jmp
sbb
sbb
mov
mov
mov
cmp
jne
mov
push
call
xor
jmp
jmp
mov
push
call
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
lea
push
lea
push
call
add
push
mov
push
call
mov
mov
push
mov
push
call
mov
mov
push
call
mov
mov
mov
push
mov
push
call
push
call
add
mov
mov
mov
push
call
add
mov
cmp
je
mov
push
push
mov
push
call
add
mov
mov
jmp
mov
mov
mov
mov
call
mov
push
mov
push
call
mov
mov
jmp
mov
add
mov
mov
cdq
and
add
sar
cmp
jge
mov
shl
add
push
push
mov
shl
add
push
mov
call
jmp
mov
and
jns
dec
or
inc
test
jle
mov
and
jns
dec
or
inc
mov
sub
add
push
mov
and
jns
dec
or
inc
push
mov
and
jns
dec
or
inc
mov
sub
add
push
mov
call
mov
push
push
mov
push
call
add
mov
push
call
mov
mov
mov
mov
mov
mov
mov
push
call
add
mov
mov
push
mov
push
call
push
mov
add
push
lea
push
mov
push
call
add
mov
mov
mov
mov
push
push
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
push
call
add
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
lea
push
call
add
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
lea
push
call
add
push
mov
push
call
mov
xor
cmp
setne
mov
movzx
neg
sbb
add
mov
movzx
test
je
mov
lea
push
push
push
call
mov
cmp
jge
mov
movzx
test
jne
mov
mov
push
lea
call
lea
push
push
lea
call
push
mov
mov
mov
push
mov
call
mov
cmp
jge
mov
movzx
test
jne
lea
push
lea
push
mov
mov
mov
push
mov
call
mov
cmp
jge
mov
jmp
lea
add
mov
mov
mov
mov
add
cmp
jne
mov
mov
mov
rep
movs
lea
call
jmp
mov
movzx
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
lea
push
call
add
push
mov
push
call
mov
lea
push
push
lea
push
call
mov
cmp
jne
lea
add
mov
mov
mov
mov
add
cmp
jne
mov
mov
mov
rep
movs
jmp
mov
lea
mov
mov
push
lea
call
lea
call
mov
push
push
push
call
push
push
push
call
push
push
push
push
call
add
push
push
push
push
call
add
push
push
push
push
call
add
push
push
push
push
call
add
push
push
push
push
call
add
push
push
push
push
call
add
mov
mov
add
mov
jmp
lea
call
xor
pop
pop
mov
pop
ret
mov
xor
inc
mov
push
lea
movzx
movzx
add
and
jns
dec
or
inc
movzx
movzx
add
and
jns
dec
or
inc
movzx
movzx
add
and
jns
dec
or
inc
movzx
movzx
add
and
jns
dec
or
inc
add
sub
jne
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
cmp
mov
jne
push
push
push
push
lea
xor
xor
mov
xor
mov
jmp
lea
mov
cmp
jg
movzx
mov
movzx
movzx
add
add
and
jns
dec
or
inc
dec
cmp
jge
inc
and
mov
jns
dec
or
inc
test
jl
movzx
lea
lea
cmp
jne
mov
mov
add
sub
jne
cmp
jne
inc
jmp
mov
movzx
mov
inc
add
cmp
mov
jl
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
mov
push
xor
xor
mov
inc
and
jns
dec
or
inc
mov
movzx
lea
inc
mov
inc
and
jns
dec
or
inc
movzx
add
add
cdq
mov
idiv
mov
inc
cmp
jne
mov
xor
lea
lea
and
jns
dec
or
inc
shl
mov
mov
inc
add
cmp
jl
mov
inc
cmp
mov
jl
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
movzx
push
mov
push
mov
shl
lea
or
mov
mov
rep
mov
push
mov
call
push
mov
call
xor
mov
mov
mov
xor
mov
mov
movzx
add
shl
add
inc
add
cmp
mov
jl
inc
add
cmp
jl
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
mov
mov
mov
mov
mov
mov
push
push
mov
mov
sub
mov
mov
sub
mov
mov
sub
mov
mov
mov
sub
mov
mov
mov
push
mov
mov
mov
sub
sub
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
jmp
mov
add
mov
cdq
mov
idiv
lea
or
mov
movzx
cdq
idiv
movzx
imul
mov
and
shl
add
movzx
add
xor
and
jns
dec
or
inc
mov
mov
cdq
idiv
mov
add
or
mov
movzx
cdq
idiv
movzx
imul
lea
mov
and
shl
add
movzx
xor
and
jns
dec
or
inc
mov
mov
lea
mov
cdq
idiv
mov
add
or
and
shl
movzx
mov
cdq
idiv
mov
add
movzx
imul
movzx
lea
xor
and
jns
dec
or
inc
mov
mov
lea
mov
cdq
idiv
and
shl
movzx
mov
mov
lea
or
cdq
idiv
mov
add
movzx
imul
movzx
lea
xor
and
jns
dec
or
inc
mov
add
mov
add
lea
cmp
jl
lea
push
mov
call
push
mov
mov
call
pop
pop
pop
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmp
push
mov
jl
mov
push
mov
push
push
push
call
add
cmp
jne
movzx
movzx
add
shl
add
mov
mov
pop
pop
pop
ret
lea
xor
test
jle
push
jmp
lea
lea
movzx
movzx
add
shl
add
mov
mov
inc
cmp
jl
pop
movzx
movzx
xor
add
add
shl
mov
mov
mov
cmp
jl
jmp
lea
movzx
movzx
add
shl
add
mov
mov
dec
cmp
jge
movzx
movzx
add
shl
add
mov
mov
pop
pop
pop
ret
sub
push
mov
movzx
movzx
xor
xor
mov
movzx
mov
movzx
not
xor
mov
movzx
mov
movzx
xor
xor
mov
movzx
mov
movzx
xor
xor
mov
movzx
mov
movzx
xor
xor
mov
movzx
mov
movzx
xor
xor
mov
movzx
mov
movzx
xor
xor
mov
movzx
mov
movzx
xor
xor
mov
movzx
mov
movzx
xor
xor
mov
movzx
mov
movzx
xor
xor
mov
movzx
mov
movzx
xor
xor
mov
movzx
mov
movzx
xor
xor
mov
movzx
mov
movzx
xor
xor
mov
movzx
mov
movzx
mov
xor
xor
mov
movzx
mov
movzx
xor
xor
mov
movzx
mov
movzx
push
lea
push
xor
xor
push
mov
mov
mov
call
add
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
jne
push
call
mov
test
jge
push
call
push
mov
test
jne
push
call
mov
cmp
je
cmp
jle
push
push
push
call
add
test
jne
push
call
push
call
add
mov
cmp
jne
push
call
cmp
jle
push
push
call
add
mov
jmp
pop
pop
ret
push
mov
test
jne
push
call
mov
test
jge
push
call
push
mov
test
jne
push
call
mov
cmp
je
cmp
jle
push
push
push
call
add
test
jne
push
call
push
call
add
mov
cmp
jne
push
call
cmp
jle
push
push
call
add
mov
jmp
pop
pop
ret
mov
add
cmp
je
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
test
jne
mov
pop
pop
ret
push
push
push
call
mov
push
lea
push
inc
push
push
call
mov
mov
add
push
push
push
push
push
push
call
mov
neg
sbb
add
je
call
cmp
jne
mov
push
push
push
push
push
push
call
mov
push
lea
push
push
push
call
mov
mov
add
push
push
push
push
push
push
call
mov
neg
sbb
inc
test
je
call
pop
pop
pop
pop
ret
int3
int3
int3
push
push
mov
mov
test
jne
mov
pop
pop
ret
push
push
push
call
mov
push
lea
inc
push
lea
push
push
call
mov
mov
add
push
push
push
push
push
push
push
push
call
mov
neg
sbb
add
je
call
cmp
jne
mov
push
push
push
push
push
push
push
push
call
mov
push
lea
push
push
push
call
mov
mov
add
push
push
push
push
push
push
push
push
call
mov
neg
sbb
inc
test
je
call
pop
pop
pop
pop
ret
push
mov
mov
push
lea
push
mov
mov
call
mov
pop
ret
int3
int3
int3
int3
push
mov
mov
push
lea
push
mov
mov
call
mov
pop
ret
push
sub
mov
push
push
push
push
call
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
pop
push
pop
mov
mov
mov
cmp
jne
mov
mov
movzx
mov
mov
mul
add
call
cmp
je
mov
sub
pop
pop
pop
pop
add
pop
ret
mov
mov
movzx
and
mov
xor
div
mov
cmp
jne
add
cmp
jne
add
mov
shl
mov
mov
mov
div
mov
mul
mov
mov
mov
mul
mov
add
add
add
call
ret
mov
movzx
and
shr
mov
ret
ret
cmp
jl
add
mov
movzx
and
mov
cmp
jne
cmp
jne
add
ret
cmp
jl
add
ret
cmp
jne
add
ret
call
mov
add
add
ret
inc
ret
add
ret
cmp
jne
call
ret
call
ret
cmp
jne
call
inc
ret
call
ret
cmp
jne
call
ret
inc
ret
cmp
jl
add
ret
add
ret
cmp
jne
add
ret
cmp
jne
add
ret
add
ret
call
inc
ret
cmp
jne
mov
inc
mov
movzx
mov
mov
mul
add
call
mov
ret
inc
ret
cmp
jne
inc
inc
cmp
jne
call
ret
mov
movzx
mov
mov
mul
add
call
ret
add
ret
inc
inc
cmp
jne
call
ret
mov
movzx
mov
mov
mul
add
call
ret
cmp
jl
call
add
ret
call
add
ret
cmp
jne
call
ret
add
ret
add
ret
add
ret
cmp
jne
call
ret
call
ret
call
cmp
jne
call
ret
call
ret
add
ret
cmp
jne
add
ret
add
ret
cmp
jne
add
ret
cmp
jne
add
ret
add
ret
cmp
jne
call
ret
call
ret
cmp
jne
call
ret
cmp
jne
call
ret
cmp
jne
call
ret
call
ret
cmp
jne
call
ret
cmp
jne
add
ret
add
ret
ret
cmp
je
call
mov
add
add
ret
call
mov
add
add
ret
cmp
jne
call
ret
cmp
jne
add
ret
add
ret
call
cmp
jne
call
ret
call
ret
cmp
jne
add
ret
cmp
jne
add
ret
add
ret
cmp
jne
call
ret
call
ret
mov
ret
cmp
jne
call
ret
call
add
ret
cmp
jl
call
add
ret
call
add
ret
call
call
cmp
jne
mov
add
add
ret
cmp
jne
call
ret
mov
add
add
ret
cmp
jl
call
call
cmp
jne
mov
add
add
ret
cmp
jne
call
ret
mov
add
add
ret
call
call
cmp
jne
mov
add
add
ret
cmp
jne
call
ret
mov
add
add
ret
call
call
cmp
jle
call
ret
mov
add
add
ret
call
cmp
jle
call
ret
call
mov
add
add
ret
call
call
cmp
jle
call
ret
mov
add
add
ret
call
call
cmp
jne
cmp
jne
cmp
jle
call
ret
cmp
jne
cmp
jne
cmp
jle
call
ret
cmp
jne
cmp
jne
call
ret
cmp
jne
cmp
jne
call
ret
cmp
jne
cmp
jne
call
ret
cmp
jne
call
ret
cmp
jne
cmp
jne
call
ret
cmp
jne
cmp
jne
cmp
jne
cmp
je
call
ret
call
ret
mov
add
add
ret
call
call
cmp
jge
call
ret
mov
add
add
ret
call
call
cmp
jne
call
ret
cmp
jne
call
ret
cmp
jne
call
ret
cmp
jne
call
ret
cmp
jne
call
ret
cmp
jle
call
ret
mov
add
add
ret
call
cmp
jne
call
ret
cmp
jne
call
ret
cmp
jne
call
cmp
je
call
ret
cmp
jne
call
ret
cmp
jne
call
cmp
je
call
ret
cmp
jne
call
ret
cmp
jne
call
cmp
je
call
ret
call
ret
mov
add
add
ret
call
cmp
jne
call
ret
cmp
jne
call
ret
cmp
jne
call
cmp
je
call
ret
cmp
jne
call
ret
cmp
jne
call
cmp
je
call
ret
cmp
jne
call
ret
cmp
jne
call
cmp
je
call
ret
call
ret
mov
add
add
ret
call
cmp
jne
call
ret
cmp
jne
call
ret
cmp
jne
call
cmp
je
call
ret
cmp
jne
cmp
jne
call
cmp
je
call
ret
call
ret
cmp
jne
call
ret
cmp
jne
call
ret
cmp
jne
call
cmp
je
call
ret
cmp
jne
cmp
jne
call
cmp
je
call
ret
call
ret
mov
add
add
ret
call
cmp
jne
call
cmp
jne
call
ret
cmp
jne
call
cmp
jne
call
ret
cmp
jne
call
cmp
jne
call
ret
cmp
jne
call
cmp
jne
call
ret
cmp
jne
call
ret
cmp
jne
call
cmp
jne
call
ret
cmp
jne
call
cmp
jne
call
ret
cmp
jg
call
jmp
call
ret
mov
add
add
ret
call
cmp
jne
call
cmp
jne
call
ret
cmp
jne
call
cmp
jne
call
ret
cmp
jne
call
cmp
jne
call
ret
cmp
jne
call
cmp
jne
call
ret
call
ret
mov
add
add
ret
inc
mov
inc
cmp
jne
call
ret
mov
movzx
mov
mov
mul
add
call
mov
ret
inc
inc
cmp
jne
call
ret
mov
shr
mov
mov
movzx
mov
mov
mul
add
call
mov
shl
mov
ret
inc
inc
cmp
jne
call
ret
mov
movzx
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
jmp
mov
mov
movzx
mov
mov
mul
add
call
mov
ret
inc
inc
cmp
jne
call
ret
mov
movzx
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
jmp
mov
mov
movzx
mov
mov
mul
add
call
mov
ret
inc
inc
cmp
jne
call
ret
mov
movzx
mov
mov
mul
add
add
call
ret
inc
inc
cmp
jne
call
ret
mov
movzx
mov
mov
mul
add
add
call
ret
inc
inc
cmp
jne
call
ret
mov
movzx
mov
mov
mul
add
add
call
ret
mov
mov
movzx
cmp
jg
call
cmp
jle
call
ret
call
mov
add
add
ret
mov
mov
movzx
cmp
jg
call
cmp
jne
cmp
jle
call
ret
cmp
jl
mov
shr
mov
and
cmp
jne
cmp
je
call
ret
cmp
jne
cmp
jne
call
ret
cmp
jne
call
ret
cmp
jne
call
ret
cmp
jne
call
ret
cmp
jne
call
ret
call
mov
add
add
ret
mov
mov
movzx
cmp
jg
call
cmp
jle
call
ret
cmp
jl
mov
shr
mov
and
cmp
jne
cmp
je
call
ret
cmp
jne
call
ret
call
mov
add
add
ret
mov
mov
movzx
cmp
jg
call
cmp
je
cmp
je
cmp
jg
jmp
call
ret
cmp
jl
mov
shr
mov
and
cmp
jne
cmp
jge
cmp
je
cmp
je
call
ret
cmp
jne
cmp
jl
call
ret
call
mov
add
add
ret
mov
mov
movzx
cmp
jg
call
cmp
jle
call
ret
cmp
jl
mov
shr
mov
and
cmp
jne
call
ret
call
mov
add
add
ret
mov
mov
movzx
cmp
jg
call
cmp
je
cmp
jg
jmp
call
ret
cmp
jl
mov
shr
mov
and
cmp
jne
cmp
jl
call
ret
cmp
jne
call
ret
call
mov
add
add
ret
mov
mov
movzx
cmp
jg
call
cmp
jle
call
ret
cmp
jl
mov
shr
mov
and
cmp
jne
cmp
je
call
ret
call
mov
add
add
ret
mov
mov
movzx
cmp
jg
call
cmp
jle
call
ret
cmp
jl
mov
shr
mov
and
cmp
jne
call
ret
cmp
jne
call
ret
cmp
jne
cmp
je
cmp
jge
call
ret
cmp
jne
cmp
jl
call
ret
call
mov
add
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
mov
mov
movzx
xor
xor
lea
cmp
jae
push
mov
push
lea
mov
test
jne
mov
mov
test
jle
mov
push
push
push
push
push
add
push
call
push
call
jmp
mov
push
push
push
add
push
call
mov
mov
add
push
push
push
call
add
mov
mov
movzx
inc
add
cmp
jl
pop
pop
pop
pop
ret
int3
sub
mov
mov
push
mov
movzx
mov
push
xor
xor
lea
cmp
jae
push
push
lea
lea
mov
mov
mov
shr
shr
mov
and
and
shr
test
je
mov
mov
push
push
push
call
jmp
lea
lea
mov
test
je
or
mov
mov
test
jne
test
je
mov
jmp
test
jns
mov
test
jbe
mov
add
lea
push
push
push
push
call
mov
mov
movzx
inc
add
cmp
jl
pop
pop
pop
pop
add
ret
int3
int3
int3
push
mov
mov
add
cmp
jbe
mov
mov
add
test
jbe
push
push
push
nop
lea
mov
sub
xor
lea
test
jbe
movzx
mov
and
cmp
jne
mov
and
add
add
mov
sub
inc
shr
add
cmp
jb
add
mov
test
ja
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
mov
mov
mov
sub
cmp
mov
jbe
push
mov
add
push
push
mov
call
test
jne
lea
mov
test
je
add
push
call
mov
cmp
je
mov
mov
lea
push
push
call
add
mov
test
je
mov
mov
inc
mov
test
je
mov
lea
add
jmp
mov
lea
mov
mov
test
je
jns
and
jmp
lea
push
push
call
mov
test
je
mov
add
add
test
jne
mov
add
push
push
mov
call
test
jne
mov
mov
jmp
pop
pop
pop
xor
pop
pop
ret
pop
pop
pop
mov
pop
pop
ret
pop
pop
mov
pop
pop
ret
pop
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
cmp
je
push
xor
cmp
jle
push
mov
mov
mov
cmp
lea
je
mov
push
call
inc
cmp
jl
pop
mov
push
call
add
pop
mov
test
je
push
push
push
call
push
push
call
push
call
pop
ret
int3
int3
int3
int3
push
mov
mov
cmp
je
xor
pop
ret
push
mov
add
cmp
je
pop
xor
pop
ret
mov
mov
push
push
mov
push
push
push
push
call
mov
test
jne
mov
push
push
push
push
call
mov
test
je
push
push
call
push
call
mov
xor
push
mov
mov
mov
mov
mov
push
push
push
call
mov
push
push
push
push
call
mov
add
mov
push
push
push
call
mov
mov
push
add
push
mov
push
mov
call
mov
add
sub
je
push
mov
call
add
push
call
add
push
test
jne
call
add
call
pop
pop
pop
xor
pop
ret
call
mov
add
cmp
je
mov
pop
mov
pop
pop
pop
ret
mov
push
mov
push
mov
shr
and
cmp
jne
mov
movzx
add
cmp
jb
sub
add
cmp
jb
sub
mov
shl
pop
or
pop
ret
push
mov
test
jne
lea
pop
pop
pop
ret
cmp
jae
test
je
movzx
add
dec
inc
add
test
jne
cmp
jb
sub
mov
mul
shr
mov
shl
sub
add
pop
shl
pop
or
pop
ret
cmp
jb
mov
mul
push
mov
shr
jmp
lea
lea
sub
mov
jmp
lea
movzx
add
movzx
add
add
movzx
add
add
movzx
add
add
movzx
add
add
movzx
add
add
movzx
add
add
movzx
add
add
movzx
add
add
movzx
add
add
movzx
add
add
movzx
add
add
movzx
add
add
movzx
add
add
movzx
add
add
movzx
add
add
add
add
sub
jne
mov
mul
shr
imul
add
mov
mul
shr
imul
add
sub
jne
pop
test
je
cmp
jb
mov
shr
nop
movzx
add
movzx
add
add
movzx
add
add
movzx
add
add
movzx
add
add
movzx
add
add
movzx
add
add
movzx
add
add
movzx
add
add
movzx
add
add
movzx
add
add
movzx
add
add
movzx
add
add
movzx
add
add
movzx
add
add
movzx
add
add
sub
add
add
sub
jne
test
je
movzx
add
dec
inc
add
test
jne
mov
mul
shr
imul
add
mov
mul
shr
imul
add
mov
pop
shl
pop
or
pop
ret
int3
int3
mov
mov
mul
shr
imul
sub
push
mov
mov
movzx
push
push
mov
imul
push
mov
movzx
lea
mov
mul
shr
imul
shr
sub
shr
add
sub
lea
cmp
jbe
sub
cmp
jbe
sub
cmp
jbe
sub
cmp
jbe
sub
pop
shl
pop
or
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
mov
push
mov
push
mov
mov
push
mov
mov
mov
push
lea
push
mov
mov
mov
mov
call
add
test
jne
push
lea
push
push
call
mov
add
cmp
je
lea
push
call
add
mov
test
je
mov
pop
pop
add
ret
mov
lea
push
mov
call
add
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
push
push
mov
push
push
push
call
add
ret
int3
mov
mov
mov
shr
shr
add
lea
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
not
test
je
lea
test
je
movzx
xor
and
shr
xor
inc
sub
jne
push
push
cmp
jb
mov
shr
xor
add
mov
shr
mov
shr
and
mov
and
xor
mov
shr
xor
and
xor
add
xor
add
mov
shr
mov
shr
and
mov
and
xor
mov
shr
xor
and
xor
add
xor
add
mov
shr
mov
and
mov
shr
and
xor
mov
shr
xor
and
xor
add
xor
mov
shr
mov
shr
and
mov
and
xor
mov
shr
xor
and
xor
xor
mov
shr
mov
and
mov
shr
and
xor
mov
shr
xor
and
xor
xor
mov
shr
and
mov
mov
shr
and
xor
mov
shr
xor
and
xor
add
xor
add
mov
mov
shr
shr
and
mov
and
xor
mov
shr
xor
and
xor
sub
xor
mov
shr
and
mov
mov
shr
and
xor
mov
shr
xor
and
xor
sub
jne
cmp
jb
mov
shr
xor
add
mov
shr
and
mov
mov
shr
and
xor
mov
shr
xor
and
xor
sub
sub
mov
jne
pop
pop
test
je
jmp
lea
nop
movzx
xor
and
shr
xor
inc
sub
jne
not
pop
ret
int3
push
mov
push
mov
and
mov
shl
add
mov
shl
shr
and
add
shr
add
not
test
je
mov
test
je
movzx
mov
shr
xor
shl
xor
inc
sub
jne
push
lea
cmp
jb
mov
shr
xor
add
mov
shr
mov
and
mov
shr
and
xor
mov
shr
xor
and
xor
add
xor
add
mov
shr
mov
shr
and
mov
and
xor
mov
shr
xor
and
xor
add
xor
add
mov
shr
mov
and
mov
shr
and
xor
mov
shr
xor
and
xor
add
xor
add
mov
shr
mov
and
mov
shr
and
xor
mov
shr
xor
and
xor
xor
mov
shr
mov
and
mov
shr
and
xor
mov
shr
xor
and
xor
xor
mov
shr
and
mov
mov
shr
and
xor
mov
shr
xor
and
xor
add
xor
sub
mov
mov
shr
shr
and
mov
and
xor
mov
shr
xor
and
xor
xor
mov
shr
and
mov
mov
shr
and
xor
mov
shr
xor
and
xor
sub
jne
cmp
jb
mov
shr
lea
xor
add
mov
shr
and
mov
mov
shr
and
xor
mov
shr
xor
and
xor
sub
sub
mov
jne
add
pop
test
je
movzx
mov
shr
xor
shl
xor
inc
sub
jne
not
mov
and
mov
shl
add
mov
shr
shl
and
add
shr
pop
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
xor
test
je
test
je
xor
shr
add
test
jne
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
sub
mov
mov
mov
xor
mov
test
je
jmp
lea
test
je
xor
shr
add
test
jne
mov
add
sub
jne
pop
pop
pop
ret
int3
int3
int3
sub
cmp
jne
mov
add
ret
mov
mov
mov
lea
mov
inc
add
cmp
jl
push
push
push
lea
lea
call
lea
lea
call
mov
xor
jmp
lea
mov
xor
lea
test
je
mov
test
je
xor
shr
add
test
jne
mov
add
cmp
jl
mov
test
je
xor
lea
test
je
jmp
lea
test
je
xor
shr
add
test
jne
mov
sar
je
xor
jmp
lea
mov
xor
lea
test
je
test
je
xor
shr
add
test
jne
mov
add
cmp
jl
test
je
xor
lea
test
je
test
je
xor
shr
add
test
jne
mov
sar
mov
jne
xor
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
jne
xor
ret
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
test
je
mov
test
je
mov
test
je
mov
cmp
je
cmp
jne
cmp
jne
test
je
mov
push
push
push
call
mov
add
mov
cmp
jb
mov
add
cmp
jbe
mov
sub
add
mov
push
push
push
call
mov
mov
mov
mov
movzx
mov
shl
movzx
xor
and
add
xor
mov
add
nop
mov
mov
mov
movzx
mov
shl
mov
xor
and
mov
mov
mov
and
mov
mov
mov
mov
inc
cmp
jbe
pop
pop
pop
xor
pop
ret
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
mov
test
je
mov
test
je
cmp
jne
mov
mov
xor
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
cmp
je
mov
mov
mov
mov
mov
shl
dec
and
mov
xor
ret
mov
ret
int3
int3
int3
int3
int3
int3
mov
test
je
mov
test
je
mov
mov
mov
mov
mov
mov
mov
mov
xor
ret
mov
ret
int3
int3
int3
mov
lea
shr
lea
shr
add
lea
mov
test
je
mov
test
je
cmp
jne
cmp
jne
push
call
add
ret
int3
int3
int3
int3
int3
push
mov
push
mov
mov
shr
mov
mov
mov
add
mov
mov
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
push
mov
cmp
jbe
mov
test
je
mov
mov
push
push
push
call
mov
add
add
add
sub
mov
sub
mov
add
cmp
jne
mov
mov
pop
pop
ret
int3
push
push
mov
test
je
mov
test
je
mov
cmp
ja
cmp
je
cmp
jne
cmp
jne
mov
cmp
jne
cmp
jne
cmp
jne
mov
mov
pop
mov
pop
ret
mov
push
push
mov
mov
mov
mov
cmp
jne
mov
cmp
jne
push
push
push
call
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
add
test
jne
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
cmp
jne
lea
jmp
cmp
jge
cmp
jl
xor
jmp
mov
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
mov
neg
sbb
and
neg
sbb
and
add
mov
neg
sbb
and
add
mov
neg
sbb
and
add
cmp
mov
setne
add
mov
add
mov
mov
movzx
mov
mov
add
mov
movzx
mov
mov
mov
add
mov
movzx
mov
mov
mov
add
mov
movzx
mov
mov
mov
add
mov
mov
cmp
jne
mov
jmp
cmp
jge
cmp
jl
xor
jmp
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
cmp
mov
je
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
cmp
je
mov
push
mov
push
push
call
add
mov
mov
mov
jmp
mov
sub
shl
add
cmp
jge
mov
cmp
jl
cmp
jge
mov
jmp
xor
cmp
setne
add
jmp
xor
shl
or
cmp
je
or
mov
mul
sub
shr
add
shr
add
mov
shl
sub
mov
mov
call
cmp
je
movzx
call
movzx
call
push
push
push
call
add
mov
cmp
jne
mov
cmp
je
movzx
mov
cmp
jae
lea
mov
cmp
jne
mov
cmp
je
cmp
jbe
sub
push
mov
add
mov
push
push
call
add
mov
mov
call
mov
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
add
add
mov
movzx
cmp
jb
mov
cmp
je
mov
cmp
jbe
mov
sub
push
mov
add
push
push
call
add
mov
mov
mov
cmp
jne
mov
mov
cmp
mov
jne
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
je
cmp
jbe
mov
sub
push
mov
add
push
push
call
add
mov
mov
call
mov
mov
cmp
je
mov
mov
mov
movzx
inc
mov
mov
mov
add
test
jne
jmp
mov
mov
cmp
je
mov
cmp
jbe
mov
sub
push
add
mov
push
push
call
add
mov
test
jne
mov
mov
cmp
jne
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
je
cmp
jbe
mov
sub
push
mov
add
push
push
call
add
mov
mov
call
mov
mov
cmp
je
mov
mov
mov
movzx
inc
mov
mov
mov
add
test
jne
jmp
mov
mov
cmp
je
mov
cmp
jbe
mov
sub
push
add
mov
push
push
call
add
mov
test
jne
mov
cmp
jne
mov
cmp
je
mov
add
cmp
jbe
mov
call
mov
lea
cmp
ja
movzx
mov
mov
add
movzx
mov
mov
push
push
mov
add
push
call
add
mov
mov
cmp
je
mov
call
cmp
jne
mov
pop
pop
pop
xor
pop
ret
cmp
mov
jne
cmp
jg
cmp
je
mov
pop
pop
mov
pop
mov
pop
ret
mov
mov
cmp
jne
cmp
je
mov
pop
pop
mov
pop
mov
pop
ret
cmp
jne
cmp
jne
test
je
cmp
je
mov
lea
mov
push
push
call
add
cmp
je
cmp
jne
mov
test
je
cmp
je
cmp
jne
cmp
jne
push
call
add
jmp
push
push
push
push
call
add
cmp
jne
mov
mov
xor
mov
mov
lea
push
push
mov
push
call
add
mov
call
cmp
je
cmp
jne
mov
test
jg
mov
pop
pop
pop
pop
ret
cmp
jne
mov
mov
mov
mov
add
movzx
mov
mov
mov
add
movzx
mov
mov
mov
add
movzx
mov
mov
mov
add
movzx
mov
mov
mov
add
movzx
mov
mov
mov
add
movzx
mov
mov
mov
add
movzx
mov
mov
mov
add
jmp
movzx
mov
call
movzx
call
mov
call
mov
test
jle
neg
mov
pop
xor
cmp
pop
pop
sete
pop
ret
cmp
jne
pop
pop
pop
mov
xor
pop
ret
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
mov
test
je
push
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
pop
mov
pop
ret
mov
test
je
mov
push
mov
push
call
add
mov
mov
test
je
mov
push
mov
push
call
add
mov
mov
test
je
mov
push
mov
push
call
add
mov
mov
test
je
mov
push
mov
push
call
add
mov
mov
mov
push
push
call
add
xor
cmp
setne
pop
mov
pop
dec
and
ret
mov
pop
ret
push
push
push
mov
test
je
mov
test
je
mov
test
je
push
mov
mov
rep
mov
mov
push
push
push
call
mov
add
test
je
push
push
push
mov
call
mov
mov
mov
mov
push
push
push
call
mov
mov
mov
mov
push
push
push
call
mov
mov
mov
mov
push
push
push
call
mov
mov
mov
mov
push
push
push
call
mov
mov
add
mov
test
je
cmp
je
cmp
je
test
je
mov
mov
add
push
push
push
call
mov
mov
mov
add
push
push
push
call
mov
mov
mov
add
push
push
push
call
mov
mov
mov
push
push
push
call
mov
sub
mov
mov
add
mov
mov
lea
shr
add
add
lea
mov
mov
lea
lea
lea
pop
mov
mov
mov
pop
pop
xor
pop
ret
push
call
add
pop
pop
pop
mov
pop
ret
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
cmp
jbe
mov
test
jne
xor
pop
ret
sub
mov
mov
mov
cmp
jne
mov
mov
push
push
push
call
jmp
cmp
jne
mov
mov
push
push
push
call
mov
add
mov
mov
push
push
push
call
add
add
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
add
mov
xor
mov
mov
mov
push
lea
push
xor
push
push
call
mov
lea
add
movzx
add
mov
movzx
mov
movzx
mov
movzx
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
push
push
mov
push
mov
mov
mov
mov
mov
lea
add
cmp
jbe
sub
add
mov
jmp
mov
movzx
mov
movzx
lea
mov
cmp
jb
shr
mov
cmp
jbe
mov
mov
mov
add
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
inc
cmp
jne
add
inc
mov
inc
inc
cmp
jne
mov
inc
inc
cmp
jne
mov
inc
inc
cmp
jne
mov
inc
inc
cmp
jne
mov
inc
inc
cmp
jne
mov
inc
inc
cmp
jne
mov
inc
inc
cmp
jne
mov
inc
inc
cmp
jne
cmp
jb
mov
sub
add
cmp
lea
jle
cmp
mov
mov
jge
mov
mov
mov
mov
mov
and
mov
movzx
cmp
jbe
sub
jne
mov
cmp
ja
mov
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
mov
mov
add
add
push
lea
cmp
jne
mov
cmp
jne
add
add
jmp
lea
mov
inc
inc
cmp
jne
mov
inc
inc
cmp
jne
mov
inc
inc
cmp
jne
mov
inc
inc
cmp
jne
mov
inc
inc
cmp
jne
mov
inc
inc
cmp
jne
mov
inc
inc
cmp
jne
mov
inc
inc
cmp
jne
cmp
jb
sub
add
cmp
jl
mov
mov
cmp
jbe
pop
mov
pop
ret
mov
pop
pop
ret
int3
sub
push
push
mov
push
lea
mov
sub
mov
mov
sub
lea
mov
cmp
jb
mov
push
lea
push
push
call
mov
mov
sub
sub
add
sub
lea
movzx
sub
cmp
jb
sub
jmp
xor
sub
mov
jne
mov
mov
lea
movzx
sub
cmp
jb
sub
jmp
xor
sub
mov
jne
add
mov
mov
cmp
je
mov
add
mov
add
mov
mov
mov
cmp
jbe
mov
test
je
mov
sub
mov
mov
cmp
jne
mov
mov
push
push
push
call
jmp
cmp
jne
mov
mov
push
push
push
call
mov
mov
add
mov
push
push
push
call
add
add
add
add
mov
cmp
jb
mov
mov
mov
add
movzx
mov
shl
movzx
xor
and
mov
cmp
jae
mov
cmp
jne
pop
pop
pop
add
ret
int3
int3
push
push
push
mov
mov
add
push
mov
cmp
jae
mov
mov
cmp
ja
call
mov
test
je
add
mov
mov
mov
mov
lea
je
cmp
jb
sub
mov
mov
test
jl
mov
add
jmp
xor
push
sub
push
push
push
call
mov
mov
mov
mov
mov
mov
add
cmp
jbe
mov
test
je
mov
mov
push
push
push
call
mov
add
add
add
sub
mov
sub
mov
add
cmp
jne
mov
mov
mov
cmp
je
mov
mov
mov
sub
sub
cmp
jb
test
jl
mov
add
jmp
xor
push
push
push
push
call
mov
mov
mov
mov
mov
mov
add
cmp
jbe
mov
test
je
mov
mov
push
push
push
call
mov
add
add
add
sub
mov
sub
mov
add
cmp
jne
mov
mov
mov
cmp
jne
pop
pop
xor
pop
pop
ret
mov
test
je
mov
test
jl
mov
add
jmp
xor
xor
cmp
sete
push
mov
sub
push
push
push
call
mov
mov
mov
add
call
mov
xor
cmp
jne
cmp
setne
pop
pop
pop
dec
and
pop
ret
cmp
sete
pop
pop
pop
lea
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
push
xor
lea
mov
cmp
jae
call
mov
mov
cmp
jae
test
je
test
je
cmp
jb
mov
mov
mov
mov
shl
mov
movzx
xor
and
mov
mov
mov
and
mov
mov
mov
and
mov
movzx
mov
mov
mov
mov
test
je
mov
mov
sub
sub
cmp
ja
mov
cmp
je
cmp
je
mov
mov
call
mov
mov
cmp
jb
mov
sub
mov
mov
movzx
mov
mov
mov
mov
sub
mov
add
movzx
movzx
add
lea
add
mov
cmp
jae
movzx
movzx
jmp
cmp
jne
mov
cmp
jne
push
call
add
mov
jmp
movzx
shr
movzx
add
mov
xor
sub
cmp
mov
sete
sub
mov
mov
cmp
ja
cmp
jb
dec
mov
add
mov
mov
mov
mov
movzx
shl
mov
xor
and
mov
and
mov
mov
mov
mov
mov
and
mov
movzx
mov
mov
mov
mov
add
jne
jmp
add
mov
mov
lea
mov
mov
movzx
mov
movzx
shl
xor
and
mov
jmp
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
add
movzx
add
lea
mov
xor
sub
cmp
sete
dec
mov
add
test
je
mov
test
jl
mov
add
jmp
xor
mov
push
sub
push
push
push
call
mov
mov
mov
mov
mov
mov
add
cmp
jbe
mov
test
je
mov
mov
push
push
push
call
mov
add
add
add
sub
mov
sub
mov
add
cmp
jne
mov
mov
mov
cmp
jne
pop
pop
pop
xor
pop
ret
mov
test
jl
mov
add
jmp
xor
xor
cmp
sete
push
mov
sub
push
push
push
call
mov
mov
mov
add
call
mov
xor
cmp
jne
cmp
setne
pop
pop
pop
pop
dec
and
ret
cmp
sete
pop
pop
pop
pop
lea
ret
int3
push
push
push
push
mov
push
mov
mov
mov
cmp
jae
call
mov
mov
cmp
jae
test
je
test
je
cmp
jb
mov
mov
mov
mov
shl
mov
movzx
xor
and
mov
mov
movzx
and
mov
mov
mov
and
mov
movzx
mov
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
mov
test
je
mov
cmp
jae
mov
mov
sub
sub
cmp
ja
mov
cmp
je
cmp
je
mov
mov
call
jmp
cmp
jne
cmp
jne
push
call
add
mov
mov
cmp
ja
cmp
je
cmp
jne
mov
sub
cmp
jbe
mov
mov
cmp
jb
cmp
ja
mov
sub
mov
mov
mov
lea
mov
sub
movzx
mov
mov
mov
mov
sub
mov
add
movzx
movzx
add
lea
add
mov
cmp
jae
movzx
movzx
jmp
movzx
shr
movzx
add
mov
sub
xor
cmp
mov
sete
mov
sub
add
add
mov
add
mov
cmp
ja
mov
mov
mov
shl
mov
movzx
and
xor
and
mov
mov
movzx
mov
mov
and
mov
movzx
mov
mov
mov
movzx
mov
mov
add
jne
add
mov
mov
mov
test
je
mov
test
jl
mov
add
jmp
xor
push
sub
push
push
push
call
mov
mov
mov
mov
mov
mov
add
cmp
jbe
mov
test
je
mov
mov
push
push
push
call
mov
add
add
add
sub
mov
sub
mov
add
cmp
jne
mov
mov
mov
cmp
jne
pop
pop
pop
xor
pop
pop
ret
cmp
je
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
add
movzx
add
lea
mov
sub
cmp
jne
mov
test
jl
mov
add
jmp
xor
mov
push
sub
push
push
push
call
mov
mov
mov
mov
mov
mov
add
cmp
jbe
mov
test
je
mov
mov
push
push
push
call
mov
add
add
add
sub
mov
sub
mov
add
cmp
jne
mov
mov
mov
add
dec
cmp
jmp
add
dec
mov
jmp
cmp
je
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
add
movzx
add
lea
mov
mov
test
jl
mov
add
jmp
xor
xor
cmp
sete
push
mov
sub
push
push
push
call
mov
mov
mov
add
call
mov
xor
cmp
jne
cmp
setne
pop
pop
pop
pop
dec
and
pop
ret
cmp
sete
pop
pop
pop
pop
lea
pop
ret
int3
int3
int3
int3
push
push
push
mov
xor
cmp
je
mov
cmp
je
cmp
je
cmp
je
mov
mov
mov
mov
mov
mov
mov
cmp
mov
jge
neg
mov
mov
mov
neg
sbb
and
push
add
push
mov
push
cmp
jne
call
jmp
call
add
mov
push
mov
call
add
call
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
int3
mov
xor
push
test
je
mov
test
je
push
mov
push
cmp
jne
lea
jmp
test
jl
cmp
jg
mov
cmp
ja
mov
push
lea
add
lea
mov
add
cmp
je
cmp
je
push
push
call
add
cmp
je
mov
movzx
mov
movzx
mov
movzx
mov
movzx
mov
pop
mov
pop
pop
pop
ret
pop
pop
mov
pop
ret
mov
pop
ret
int3
int3
mov
xor
push
mov
cmp
je
cmp
jne
cmp
jne
push
mov
cmp
jne
pop
lea
pop
ret
mov
cmp
jne
mov
mov
cmp
jne
mov
cmp
jne
mov
push
mov
cmp
jge
xor
neg
jmp
cmp
jle
mov
sub
mov
dec
cmp
ja
cmp
jne
lea
cmp
ja
cmp
ja
cmp
ja
cmp
jne
mov
mov
mov
push
push
push
push
call
mov
add
test
je
mov
mov
mov
mov
shl
mov
mov
mov
lea
mov
lea
shl
mov
add
mov
mov
dec
mov
mov
mul
shr
mov
mov
mov
mov
mov
push
push
push
call
mov
mov
mov
mov
push
push
push
call
mov
mov
mov
mov
push
push
push
call
mov
lea
mov
shl
push
mov
mov
mov
push
push
call
mov
add
cmp
lea
mov
mov
je
cmp
je
cmp
je
test
je
mov
shr
lea
lea
add
mov
mov
mov
push
mov
mov
mov
mov
call
add
pop
pop
pop
pop
ret
mov
mov
push
mov
call
add
pop
pop
pop
mov
pop
ret
pop
pop
mov
pop
ret
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
push
mov
push
push
push
push
push
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
cmp
jne
cmp
jne
mov
mov
push
push
push
push
mov
call
add
cmp
je
mov
mov
mov
mov
push
push
push
call
add
pop
ret
mov
pop
ret
cmp
jne
cmp
jne
call
mov
mov
mov
push
push
push
push
call
add
mov
test
jne
mov
push
mov
call
add
test
je
mov
or
ret
mov
mov
mov
dec
mov
inc
mov
movzx
ret
int3
int3
int3
int3
int3
int3
push
mov
push
mov
cmp
jae
test
je
mov
mov
mov
mov
call
mov
mov
mov
push
mov
mov
sar
add
push
push
push
call
mov
add
test
jne
mov
push
call
add
test
je
mov
add
mov
mov
mov
cmp
jae
pop
mov
pop
ret
mov
cmp
jne
cmp
jne
add
add
push
mov
call
mov
call
mov
cmp
jne
test
jne
mov
lea
call
sub
jne
test
je
call
mov
call
shl
add
mov
dec
test
je
call
cmp
jne
test
je
call
test
je
cmp
jne
test
je
lea
call
test
je
cmp
jne
test
je
mov
call
sub
jne
mov
neg
sbb
pop
and
pop
mov
pop
ret
pop
pop
mov
pop
ret
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
xor
test
jne
mov
pop
ret
mov
test
je
push
call
add
cmp
je
mov
cmp
jne
push
call
jmp
cmp
jne
push
call
mov
add
mov
test
je
push
call
add
test
je
call
cmp
je
or
mov
test
jge
mov
mov
test
je
push
call
add
mov
test
je
push
call
add
mov
test
je
push
call
add
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
or
test
je
cmp
jne
mov
cmp
je
cmp
jne
add
xor
cmp
mov
sete
mov
test
je
mov
mov
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
cmp
jne
push
mov
push
mov
mov
mov
test
je
lea
cmp
jne
mov
mov
push
push
push
push
mov
call
add
cmp
jne
mov
mov
mov
add
add
push
push
call
mov
mov
sub
sub
add
mov
test
jne
test
jne
jmp
mov
mov
push
push
push
call
add
mov
mov
sub
pop
pop
pop
ret
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
call
mov
lea
push
push
lea
push
push
mov
call
lea
add
cmp
ja
cmp
jne
push
mov
lea
push
push
call
add
add
ret
xor
add
ret
int3
mov
mov
push
lea
push
push
mov
call
add
cmp
jne
movzx
ret
or
ret
int3
int3
int3
int3
int3
mov
mov
push
lea
lea
mov
inc
test
jne
sub
push
mov
push
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
push
push
mov
xor
test
je
cmp
jne
mov
push
lea
mov
sub
je
mov
mov
push
push
push
push
call
add
cmp
jne
mov
mov
mov
test
jne
mov
mov
add
push
push
call
mov
sub
add
mov
test
jne
cmp
jne
mov
test
jne
cmp
je
xor
jmp
mov
mov
test
je
cmp
je
mov
mov
dec
neg
sbb
pop
and
pop
pop
ret
or
pop
mov
pop
pop
ret
pop
mov
pop
ret
int3
int3
int3
int3
mov
push
mov
push
mov
call
add
test
jne
mov
push
call
mov
mov
dec
add
neg
sbb
and
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
cmp
je
cmp
jne
mov
push
push
push
mov
mov
mov
mov
mov
call
add
mov
cmp
jne
push
call
add
mov
mov
push
push
push
mov
mov
call
add
pop
pop
ret
pop
or
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
cmp
jne
cmp
je
mov
ret
xor
cmp
sete
mov
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
mov
test
je
cmp
jne
mov
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
lea
mov
and
push
push
call
add
shr
sub
jne
pop
pop
ret
int3
int3
int3
int3
push
push
mov
call
mov
call
shl
add
call
shl
add
call
cmp
jne
mov
shl
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
jne
lea
pop
ret
cmp
jne
push
mov
call
add
test
jne
mov
push
mov
call
mov
mov
call
pop
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
jne
mov
mov
mov
pop
ret
mov
mov
mov
test
jne
mov
pop
ret
push
cmp
jne
call
mov
push
call
add
mov
jmp
mov
test
je
cmp
jne
mov
add
add
mov
sub
mov
mov
test
je
push
call
add
mov
lea
jmp
lea
mov
inc
test
jne
sub
mov
mov
push
lea
mov
inc
test
jne
sub
lea
push
call
add
mov
test
jne
mov
pop
pop
pop
ret
mov
mov
lea
mov
mov
inc
inc
test
jne
push
mov
dec
nop
mov
inc
test
jne
mov
mov
mov
mov
mov
inc
test
jne
mov
sub
mov
dec
mov
inc
test
jne
mov
shr
rep
mov
and
rep
mov
pop
pop
pop
pop
ret
mov
xor
cmp
je
cmp
je
mov
mov
mov
mov
jmp
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
xor
or
lea
push
mov
mov
mov
cmp
je
cmp
je
push
push
call
mov
add
cmp
je
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
add
mov
mov
lea
mov
inc
cmp
jne
sub
inc
push
call
add
mov
cmp
je
mov
mov
jmp
lea
mov
mov
inc
inc
cmp
jne
mov
mov
nop
cmp
jne
mov
mov
cmp
je
cmp
jne
mov
mov
cmp
jl
cmp
jg
movsx
sub
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
mov
mov
inc
mov
inc
cmp
je
lea
cmp
jne
mov
cmp
je
cmp
jne
mov
push
push
push
push
push
push
push
push
call
push
mov
call
add
mov
mov
cmp
jne
cmp
jne
call
pop
pop
pop
xor
pop
add
ret
push
call
push
push
push
push
mov
mov
call
add
test
jne
cmp
je
mov
call
mov
mov
cmp
lea
push
jge
mov
push
call
jmp
push
call
add
mov
cmp
je
cmp
jne
mov
mov
pop
pop
pop
pop
add
ret
mov
call
mov
push
call
add
sub
mov
mov
pop
pop
pop
pop
add
ret
pop
pop
xor
pop
add
ret
int3
mov
push
push
mov
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
test
jge
xor
add
ret
push
lea
push
mov
call
add
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
mov
test
je
cmp
jne
mov
or
cmp
je
cmp
je
cmp
jne
pop
xor
pop
ret
push
push
mov
mov
mov
mov
test
je
cmp
je
mov
mov
add
lea
mov
add
add
cmp
mov
mov
je
pop
pop
pop
mov
pop
ret
cmp
je
lea
cmp
jne
cmp
jne
cmp
jne
call
mov
mov
mov
push
push
push
push
call
add
mov
test
jne
mov
push
mov
call
add
test
jne
mov
mov
mov
mov
add
add
push
push
call
mov
mov
sub
sub
add
mov
cmp
jne
mov
mov
sub
push
push
push
call
mov
mov
add
mov
call
cmp
jne
mov
call
mov
call
cmp
jne
push
call
push
push
push
call
add
mov
cmp
jne
cmp
jne
cmp
jne
jmp
mov
jmp
mov
mov
cmp
jbe
mov
test
jbe
mov
mov
push
push
push
call
add
sub
add
add
sub
mov
mov
test
jbe
mov
push
push
push
push
call
add
sub
sub
add
add
test
jne
mov
mov
pop
pop
pop
pop
ret
mov
mov
mov
sub
push
push
push
call
mov
add
mov
cmp
jne
mov
cmp
je
cmp
jne
pop
pop
pop
or
pop
ret
mov
pop
pop
pop
sub
pop
ret
pop
mov
pop
ret
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
lea
push
push
call
add
cmp
jne
movzx
pop
ret
or
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
test
je
mov
test
jle
push
mov
lea
dec
test
jle
push
push
push
call
add
cmp
jne
mov
inc
cmp
jne
mov
pop
cmp
jne
test
jg
pop
pop
mov
pop
ret
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
mov
cmp
je
mov
cmp
je
cmp
je
cmp
push
mov
jne
test
jne
sub
test
jl
cmp
jne
push
call
add
mov
test
je
push
push
push
call
add
test
jle
jmp
lea
mov
cmp
jge
mov
push
mov
push
push
call
add
test
je
sub
test
jg
mov
pop
pop
ret
cmp
jne
add
test
jl
cmp
je
mov
mov
push
push
push
mov
mov
mov
call
add
test
jl
mov
mov
mov
pop
pop
ret
mov
cmp
jl
sub
jmp
push
call
add
test
jl
test
je
cmp
jne
push
call
add
mov
test
je
cmp
je
inc
dec
cmp
mov
je
mov
test
jle
mov
cmp
jge
mov
push
mov
push
push
call
add
test
jle
sub
test
jg
mov
pop
pop
ret
pop
or
pop
ret
or
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
xor
cmp
je
cmp
jne
cmp
jne
push
push
mov
push
cmp
je
mov
cmp
je
mov
lea
cmp
ja
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
push
push
push
call
add
cmp
jne
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
pop
shl
pop
mov
mov
mov
pop
mov
mov
xor
pop
ret
pop
pop
pop
mov
pop
ret
mov
pop
ret
int3
int3
int3
int3
int3
mov
mov
mov
mov
ret
int3
int3
int3
mov
sub
push
xor
push
cmp
je
mov
cmp
je
mov
mov
mov
mov
mov
push
push
mov
cmp
je
mov
jmp
xor
mov
mov
mov
mov
sub
xor
mov
cmp
ja
mov
movzx
jmp
cmp
je
mov
and
shr
sub
mov
jmp
cmp
jae
lea
test
jne
mov
lea
push
push
call
mov
add
test
je
mov
movzx
mov
shl
inc
add
dec
add
mov
cmp
jb
mov
and
shr
mov
mov
and
dec
cmp
ja
jmp
shr
mov
sub
jmp
mov
call
shr
mov
sub
jmp
shr
mov
sub
jmp
mov
mov
mov
shr
sub
jmp
mov
and
sub
shr
cmp
jae
lea
test
jne
mov
lea
push
push
call
mov
add
test
je
mov
movzx
mov
shl
inc
add
dec
add
mov
cmp
jb
mov
mov
not
and
shr
cmp
je
mov
mov
mov
jmp
xor
xor
mov
test
je
mov
mov
test
jne
mov
lea
push
push
call
mov
add
test
je
cmp
jne
mov
mov
push
mov
mov
mov
push
push
mov
call
add
test
jne
mov
cmp
jbe
mov
mov
mov
cmp
jbe
mov
mov
mov
mov
push
push
push
call
mov
add
sub
add
sub
add
sub
cmp
jne
mov
jmp
cmp
jae
test
jne
mov
lea
push
push
call
mov
add
test
je
mov
movzx
mov
shl
inc
add
dec
add
mov
cmp
jb
mov
shr
and
mov
shr
add
mov
mov
and
and
mov
add
add
shr
sub
cmp
mov
mov
ja
cmp
ja
mov
test
jbe
cmp
jae
test
jne
mov
lea
push
push
call
mov
add
test
je
mov
movzx
mov
shl
inc
add
dec
add
mov
cmp
jb
mov
movzx
mov
and
mov
mov
add
mov
shr
sub
cmp
jb
cmp
jae
mov
movzx
xor
mov
add
cmp
jb
lea
lea
mov
mov
lea
push
lea
push
push
mov
push
lea
push
push
call
add
test
je
mov
mov
mov
jmp
mov
add
mov
je
jmp
lea
mov
mov
mov
shl
dec
and
mov
mov
shr
movzx
mov
cmp
jbe
test
jne
mov
lea
push
push
call
mov
add
test
je
mov
movzx
inc
mov
mov
shl
mov
mov
shl
mov
add
add
dec
and
mov
mov
shr
movzx
dec
cmp
ja
mov
mov
shr
cmp
jae
mov
shr
movzx
cmp
jae
test
jne
mov
lea
push
push
call
mov
add
test
je
mov
movzx
mov
inc
shl
mov
movzx
add
dec
add
cmp
jb
mov
mov
movzx
shr
sub
mov
mov
inc
jmp
mov
cmp
jne
movzx
lea
mov
cmp
jae
mov
test
jne
mov
lea
push
push
call
mov
add
test
je
mov
movzx
inc
mov
shl
mov
mov
add
add
dec
add
cmp
jb
mov
mov
shr
sub
test
je
movzx
mov
mov
and
add
shr
sub
jmp
cmp
movzx
mov
jne
lea
cmp
jae
test
jne
mov
lea
push
push
call
mov
add
test
je
mov
movzx
inc
mov
shl
mov
mov
add
add
dec
add
cmp
jb
mov
shr
mov
mov
and
add
shr
jmp
lea
cmp
jae
test
jne
mov
lea
push
push
call
mov
add
test
je
mov
movzx
inc
mov
shl
mov
mov
add
add
dec
add
cmp
jb
mov
shr
mov
mov
and
add
shr
sub
add
mov
mov
mov
add
add
cmp
ja
test
je
mov
nop
mov
dec
mov
inc
test
jne
mov
add
cmp
jb
cmp
je
lea
lea
mov
mov
lea
push
lea
push
mov
mov
push
push
lea
push
push
call
add
test
je
mov
mov
mov
jmp
mov
mov
mov
jmp
mov
lea
mov
lea
push
lea
push
push
mov
mov
mov
push
lea
push
push
call
add
test
jne
mov
cmp
jb
mov
cmp
jb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jae
mov
sub
mov
mov
push
push
call
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
jmp
mov
mov
shl
mov
dec
and
mov
mov
shr
movzx
cmp
jbe
test
jne
mov
lea
push
push
call
mov
add
test
je
mov
movzx
inc
mov
mov
shl
mov
mov
shl
mov
add
add
dec
and
mov
mov
shr
movzx
dec
cmp
ja
test
je
test
jne
mov
shr
movzx
mov
mov
movzx
add
mov
shl
mov
mov
shr
dec
and
shr
add
mov
mov
mov
shr
movzx
movzx
add
cmp
jbe
test
jne
mov
lea
push
push
call
mov
add
test
je
mov
movzx
inc
mov
mov
mov
shl
movzx
add
movzx
add
mov
shl
mov
add
dec
dec
and
shr
movzx
add
mov
mov
mov
shr
movzx
add
cmp
ja
movzx
shr
sub
mov
shr
movzx
shr
sub
mov
shr
mov
test
jne
cmp
jne
mov
mov
mov
push
push
push
mov
mov
mov
call
add
test
jne
mov
mov
mov
inc
dec
mov
mov
jmp
test
je
mov
jmp
test
jne
movzx
and
mov
je
cmp
jae
lea
test
jne
mov
lea
push
push
call
mov
add
test
je
mov
movzx
mov
shl
inc
add
dec
add
mov
cmp
jb
mov
mov
shl
dec
and
add
shr
sub
mov
mov
mov
shl
dec
and
mov
mov
shr
movzx
cmp
jbe
lea
test
jne
mov
lea
push
push
call
mov
add
test
je
mov
movzx
inc
mov
mov
shl
mov
mov
shl
mov
add
add
dec
and
mov
mov
shr
movzx
dec
cmp
ja
test
jne
mov
shr
movzx
mov
mov
movzx
add
mov
shl
mov
mov
shr
dec
and
shr
add
mov
mov
mov
shr
movzx
movzx
add
cmp
jbe
test
jne
mov
lea
push
push
call
mov
add
test
je
mov
movzx
inc
mov
mov
mov
shl
movzx
add
movzx
add
mov
shl
mov
add
dec
dec
and
shr
movzx
add
mov
mov
mov
shr
movzx
add
cmp
ja
movzx
shr
sub
mov
shr
movzx
shr
sub
test
je
mov
mov
mov
jmp
mov
movzx
shr
and
mov
mov
je
cmp
jae
test
jne
mov
lea
push
push
call
mov
add
test
je
mov
movzx
mov
shl
inc
add
dec
add
mov
cmp
jb
mov
mov
shl
dec
and
add
shr
sub
mov
cmp
sbb
and
sub
cmp
ja
cmp
jne
mov
mov
push
mov
mov
mov
push
push
mov
call
add
test
jne
mov
mov
mov
sub
cmp
jae
mov
add
sub
jmp
sub
mov
mov
mov
cmp
jbe
mov
sub
sub
mov
mov
mov
mov
mov
inc
mov
mov
inc
sub
mov
jne
cmp
jne
mov
sub
cmp
jbe
mov
mov
mov
mov
pop
pop
mov
pop
mov
pop
add
ret
mov
mov
jmp
mov
mov
cmp
jae
sub
mov
push
mov
push
push
call
add
test
je
mov
jmp
mov
jmp
pop
mov
pop
add
ret
lea
into
xchg
inc
add
inc
add
popf
inc
add
popf
inc
add
push
add
add
push
add
push
push
push
push
push
push
add
lea
inc
xchg
inc
add
inc
add
inc
add
mov
test
je
mov
test
je
mov
test
je
push
mov
push
call
add
mov
xor
pop
ret
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
push
mov
mov
mov
mov
mov
dec
lea
mov
mov
mov
mov
sub
dec
add
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
mov
mov
mov
mov
mov
shl
dec
mov
mov
dec
mov
cmp
jae
movzx
inc
mov
shl
inc
add
mov
add
movzx
shl
mov
add
add
mov
and
mov
mov
shr
movzx
movzx
shr
sub
test
je
test
jne
test
jne
mov
mov
mov
mov
shl
shr
dec
and
add
mov
mov
mov
shr
movzx
movzx
shr
sub
test
jne
inc
shr
mov
jmp
shr
and
mov
je
cmp
jae
movzx
inc
mov
shl
mov
add
add
mov
mov
shl
dec
and
add
shr
sub
cmp
jae
movzx
inc
movzx
mov
inc
shl
add
mov
shl
add
mov
add
add
mov
mov
and
mov
mov
shr
movzx
movzx
shr
sub
mov
test
jne
test
jne
mov
movzx
mov
shl
mov
dec
and
add
mov
mov
shr
movzx
movzx
shr
sub
mov
test
je
shr
and
mov
cmp
jae
movzx
inc
mov
shl
add
mov
add
cmp
jae
movzx
inc
mov
shl
mov
add
add
mov
mov
mov
shl
sub
dec
and
mov
mov
add
mov
mov
sub
shr
mov
cmp
jbe
mov
sub
cmp
ja
mov
mov
dec
mov
test
jne
mov
sub
add
cmp
jae
sub
mov
inc
inc
sub
mov
jne
jmp
cmp
jae
mov
sub
add
sub
add
cmp
jae
sub
lea
mov
inc
inc
sub
mov
jne
mov
cmp
jae
sub
mov
lea
mov
inc
inc
sub
mov
jne
mov
sub
jmp
sub
add
cmp
jae
sub
mov
inc
inc
sub
mov
jne
mov
sub
mov
cmp
jbe
lea
mov
mul
mov
shr
inc
lea
movzx
sub
inc
inc
mov
mov
inc
inc
mov
movzx
inc
inc
sub
mov
jne
mov
test
je
mov
inc
inc
mov
cmp
jbe
mov
inc
mov
mov
mov
cmp
jae
cmp
jae
mov
jmp
mov
sub
movzx
inc
mov
mov
inc
inc
inc
mov
movzx
inc
inc
mov
mov
sub
mov
cmp
ja
test
je
mov
inc
inc
mov
cmp
jbe
mov
inc
mov
jmp
mov
mov
mov
mov
mov
jmp
test
je
mov
mov
jmp
mov
mov
mov
mov
mov
mov
shr
sub
add
add
add
sub
mov
mov
shl
mov
sub
add
dec
and
lea
mov
lea
mov
mov
sub
add
mov
mov
mov
mov
pop
pop
pop
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
mov
xor
cmp
je
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
xor
ret
mov
ret
int3
int3
int3
mov
test
je
mov
test
je
mov
cmp
push
jg
mov
lea
cmp
ja
push
mov
shl
mov
mov
dec
and
shl
add
pop
xor
pop
ret
mov
pop
ret
mov
ret
int3
int3
int3
mov
push
xor
cmp
je
cmp
jne
cmp
jne
push
mov
cmp
je
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
push
push
push
call
add
cmp
jne
pop
mov
pop
ret
mov
cmp
mov
jge
mov
neg
jmp
mov
sar
inc
cmp
mov
jge
and
lea
cmp
ja
push
mov
mov
call
add
pop
pop
ret
mov
push
mov
push
call
add
mov
pop
mov
pop
ret
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
push
push
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
mov
mov
mov
mov
ret
int3
int3
int3
push
push
mov
xor
push
mov
cmp
jne
mov
mov
mov
shl
mov
push
push
push
call
add
mov
cmp
jne
pop
pop
lea
pop
ret
cmp
jne
mov
mov
shl
mov
mov
mov
sub
mov
cmp
jb
mov
mov
push
sub
push
push
call
mov
add
pop
mov
mov
pop
xor
pop
ret
sub
mov
cmp
jbe
mov
mov
mov
add
push
sub
push
push
call
add
sub
je
mov
mov
push
sub
push
push
call
mov
add
mov
pop
mov
pop
xor
pop
ret
add
mov
mov
cmp
jne
mov
mov
cmp
jae
add
mov
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
test
je
mov
test
je
cmp
je
cmp
jne
cmp
jne
cmp
jne
mov
mov
mov
push
mov
push
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
cmp
ja
lea
jmp
cmp
jne
mov
jmp
cmp
jae
lea
test
je
movzx
mov
shl
dec
add
inc
add
mov
cmp
jb
test
je
cmp
jne
push
push
push
call
mov
push
lea
mov
mov
mov
push
push
call
mov
add
xor
mov
xor
mov
jmp
mov
mov
test
je
mov
test
je
movzx
shl
mov
shr
add
xor
mov
div
test
jne
mov
and
cmp
je
mov
mov
mov
jmp
shr
mov
and
add
sub
cmp
jbe
mov
jmp
mov
shl
push
push
push
mov
call
mov
mov
shr
not
and
or
mov
mov
mov
add
xor
xor
jmp
mov
mov
mov
jmp
cmp
jae
test
je
movzx
mov
shl
dec
add
inc
add
mov
cmp
jb
mov
cmp
jne
test
je
mov
mov
jmp
mov
test
je
mov
shr
and
mov
test
je
mov
shr
push
lea
mov
mov
push
push
call
mov
add
mov
xor
xor
mov
jmp
cmp
jae
jmp
lea
test
je
movzx
mov
shl
dec
add
inc
add
mov
cmp
jb
mov
test
je
mov
test
je
mov
mov
mov
shr
shr
shr
push
lea
mov
mov
mov
mov
push
push
call
mov
add
mov
xor
xor
mov
jmp
cmp
jae
jmp
lea
test
je
movzx
mov
shl
dec
add
inc
add
mov
cmp
jb
mov
test
je
mov
and
mov
mov
mov
shr
mov
test
je
mov
shr
push
lea
mov
mov
push
push
call
mov
add
mov
xor
xor
mov
test
je
cmp
jae
test
je
movzx
mov
shl
dec
add
inc
add
mov
cmp
jb
mov
mov
test
je
mov
test
je
mov
shr
push
lea
mov
mov
push
push
call
mov
add
mov
xor
xor
jmp
mov
test
je
mov
mov
test
je
mov
mov
cmp
jbe
mov
mov
test
je
mov
test
je
mov
mov
test
je
mov
mov
sub
mov
mov
mov
add
cmp
jbe
sub
mov
mov
push
mov
add
push
push
call
mov
mov
add
test
je
mov
mov
push
push
push
call
mov
mov
mov
add
sub
add
sub
mov
cmp
jne
mov
mov
test
je
test
je
xor
movzx
inc
mov
mov
mov
test
je
mov
mov
test
je
mov
cmp
jae
mov
mov
mov
inc
mov
cmp
je
mov
cmp
jb
test
je
mov
mov
push
push
push
call
mov
add
mov
mov
sub
add
cmp
mov
jne
jmp
mov
test
je
mov
mov
mov
test
je
test
je
xor
lea
movzx
inc
mov
mov
mov
test
je
mov
mov
test
je
mov
cmp
jae
mov
mov
mov
inc
mov
cmp
je
mov
cmp
jb
test
je
mov
mov
push
push
push
call
mov
add
mov
mov
sub
add
cmp
mov
jne
jmp
mov
test
je
mov
mov
test
je
cmp
jae
test
je
movzx
mov
shl
dec
add
inc
add
mov
cmp
jb
movzx
cmp
je
mov
mov
jmp
xor
xor
mov
test
je
mov
sar
and
mov
mov
mov
push
push
push
call
mov
mov
mov
mov
add
mov
jmp
cmp
jae
lea
test
je
movzx
mov
shl
dec
add
inc
add
mov
cmp
jb
mov
and
mov
shl
add
mov
shr
shl
and
add
shr
lea
mov
mov
mov
xor
xor
mov
cmp
je
push
push
push
call
mov
mov
mov
mov
add
mov
cmp
je
cmp
je
mov
and
shr
sub
mov
jmp
cmp
jae
mov
test
je
movzx
mov
shl
dec
add
inc
add
mov
cmp
jb
mov
shr
mov
and
and
dec
mov
cmp
ja
jmp
shr
mov
sub
jmp
mov
call
shr
mov
sub
jmp
shr
mov
sub
jmp
mov
mov
mov
shr
sub
jmp
mov
and
sub
shr
cmp
jae
test
je
movzx
mov
shl
dec
add
inc
add
mov
cmp
jb
mov
mov
not
and
shr
cmp
je
mov
mov
jmp
xor
mov
xor
mov
mov
mov
test
je
cmp
jbe
mov
mov
mov
cmp
jbe
mov
mov
test
je
mov
mov
push
push
push
call
mov
sub
sub
add
mov
add
add
sub
jmp
cmp
jae
test
je
movzx
mov
shl
dec
add
inc
add
mov
cmp
jb
mov
and
shr
add
mov
mov
shr
mov
and
and
inc
add
shr
sub
cmp
mov
mov
ja
cmp
ja
mov
mov
mov
cmp
jae
lea
cmp
jae
test
je
movzx
mov
shl
dec
add
inc
add
mov
cmp
jb
mov
movzx
mov
and
mov
inc
mov
shr
sub
cmp
jb
mov
cmp
jae
jmp
lea
mov
mov
movzx
xor
mov
inc
cmp
jb
lea
lea
mov
mov
lea
push
lea
push
push
mov
push
lea
push
push
call
mov
add
mov
test
jne
mov
mov
mov
add
cmp
jae
mov
mov
shl
mov
dec
and
mov
mov
shr
movzx
mov
cmp
jbe
test
je
movzx
mov
shl
mov
dec
add
add
mov
shl
mov
inc
mov
dec
and
mov
mov
shr
movzx
mov
cmp
ja
mov
shr
cmp
jae
mov
shr
movzx
cmp
jae
lea
test
je
movzx
mov
shl
dec
add
inc
add
mov
movzx
mov
cmp
jb
movzx
mov
shr
sub
mov
mov
inc
jmp
mov
cmp
jne
movzx
lea
mov
cmp
jae
jmp
lea
test
je
movzx
mov
shl
mov
dec
add
add
lea
inc
mov
cmp
jb
mov
shr
sub
test
je
movzx
mov
and
add
shr
mov
mov
sub
jmp
cmp
movzx
mov
jne
lea
cmp
jae
lea
test
je
movzx
mov
shl
mov
dec
add
add
lea
inc
mov
cmp
jb
shr
mov
and
add
mov
shr
mov
jmp
lea
cmp
jae
test
je
movzx
mov
shl
mov
dec
add
add
lea
inc
mov
cmp
jb
shr
mov
and
add
mov
shr
mov
sub
add
mov
mov
mov
add
mov
add
cmp
ja
cmp
je
mov
nop
mov
dec
mov
inc
cmp
jne
mov
add
cmp
jb
cmp
je
lea
lea
mov
lea
push
mov
lea
push
push
mov
push
lea
push
push
mov
call
add
mov
test
je
mov
mov
mov
jmp
mov
lea
mov
lea
push
lea
push
push
mov
mov
mov
push
lea
push
push
call
mov
add
mov
test
je
mov
mov
jmp
mov
cmp
jb
cmp
jb
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
push
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
jmp
mov
mov
shl
dec
and
mov
mov
mov
mov
shr
movzx
mov
cmp
jbe
lea
test
je
movzx
mov
shl
mov
dec
add
add
mov
shl
mov
inc
mov
dec
and
mov
mov
shr
movzx
mov
cmp
ja
test
je
test
jne
mov
shr
mov
movzx
mov
movzx
add
mov
mov
shl
mov
dec
and
shr
mov
shr
add
mov
mov
mov
movzx
mov
shr
movzx
add
cmp
jbe
nop
test
je
movzx
mov
shl
mov
dec
add
add
movzx
mov
movzx
add
mov
shl
mov
inc
mov
dec
and
shr
movzx
add
mov
mov
mov
shr
movzx
add
cmp
ja
movzx
mov
shr
sub
mov
shr
movzx
shr
sub
mov
mov
shr
mov
test
jne
mov
jmp
test
je
mov
jmp
test
je
mov
mov
jmp
movzx
and
mov
mov
mov
test
je
cmp
jae
jmp
lea
test
je
movzx
mov
shl
dec
add
inc
add
mov
cmp
jb
mov
mov
shl
dec
and
add
shr
sub
mov
mov
mov
shl
dec
and
mov
mov
mov
mov
shr
movzx
mov
cmp
jbe
nop
test
je
movzx
mov
shl
mov
dec
add
add
mov
shl
mov
inc
mov
dec
and
mov
mov
shr
movzx
mov
cmp
ja
test
jne
mov
shr
mov
movzx
mov
movzx
add
mov
mov
shl
mov
dec
and
shr
mov
shr
add
mov
mov
mov
movzx
mov
shr
movzx
add
cmp
jbe
test
je
movzx
mov
shl
mov
dec
add
add
movzx
mov
movzx
add
mov
shl
mov
inc
mov
dec
and
shr
movzx
add
mov
mov
mov
shr
movzx
add
cmp
ja
movzx
mov
shr
sub
mov
shr
movzx
shr
sub
mov
test
je
mov
mov
jmp
mov
movzx
shr
and
mov
mov
mov
mov
test
je
cmp
jae
test
je
movzx
mov
shl
dec
add
inc
add
mov
cmp
jb
mov
mov
shl
dec
and
add
shr
sub
mov
sub
add
cmp
jbe
mov
mov
jmp
mov
cmp
je
mov
sub
mov
cmp
jbe
sub
mov
mov
cmp
jbe
sub
mov
add
mov
sub
jmp
mov
sub
add
mov
mov
mov
mov
cmp
jbe
mov
jmp
mov
sub
mov
mov
mov
mov
mov
cmp
jbe
mov
mov
sub
mov
mov
sub
mov
mov
lea
mov
mov
inc
mov
inc
sub
jne
cmp
mov
jne
mov
jmp
cmp
je
mov
mov
mov
inc
dec
mov
mov
jmp
cmp
je
cmp
jae
test
je
movzx
mov
shl
dec
add
inc
add
mov
cmp
jb
mov
sub
mov
add
add
mov
test
je
mov
mov
push
sub
cmp
push
push
je
call
jmp
call
mov
mov
mov
add
mov
cmp
mov
mov
mov
jne
and
mov
shl
add
mov
shr
and
shl
add
mov
shr
add
cmp
je
mov
mov
jmp
xor
xor
mov
cmp
je
cmp
je
cmp
jae
test
je
movzx
mov
shl
dec
add
inc
add
mov
cmp
jb
cmp
je
mov
mov
mov
mov
cmp
jbe
mov
pop
pop
pop
pop
add
ret
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
pop
mov
pop
add
ret
xor
xor
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
mov
jne
cmp
jge
mov
cmp
je
mov
mov
call
test
je
mov
pop
pop
pop
mov
pop
add
ret
mov
mov
sub
mov
sub
add
add
add
cmp
je
test
je
cmp
push
je
mov
mov
sub
push
push
call
jmp
mov
mov
sub
push
push
call
mov
add
mov
mov
neg
sbb
and
xor
cmp
setne
dec
and
add
add
mov
test
jne
test
je
cmp
jne
mov
test
jne
pop
pop
pop
mov
pop
add
ret
mov
pop
pop
pop
pop
add
ret
mov
pop
add
ret
lea
mul
inc
add
cmps
inc
add
inc
add
test
add
inc
add
stos
inc
add
stos
inc
add
inc
add
lods
inc
add
inc
add
inc
add
scas
inc
add
scas
inc
add
mov
add
mov
add
inc
add
mov
add
mov
add
mov
add
mov
add
inc
add
mov
inc
add
lods
inc
add
lods
inc
add
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
mov
test
je
mov
test
je
mov
test
je
push
mov
push
call
add
mov
mov
mov
push
push
call
add
mov
xor
pop
ret
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
test
je
mov
test
je
cmp
push
mov
push
mov
je
cmp
je
pop
pop
pop
mov
pop
ret
cmp
jne
push
push
push
call
push
push
push
call
add
cmp
je
pop
pop
pop
mov
pop
ret
mov
call
test
je
pop
pop
mov
pop
mov
pop
ret
mov
cmp
jbe
sub
push
mov
add
push
push
call
mov
add
pop
pop
mov
mov
pop
xor
pop
ret
mov
push
sub
add
push
push
call
add
mov
pop
pop
mov
pop
xor
pop
ret
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
test
je
test
je
mov
mov
mov
xor
ret
mov
ret
int3
int3
int3
int3
mov
xor
cmp
jbe
push
push
lea
cmp
jae
mov
cmp
sbb
and
movzx
add
cmp
jne
inc
jmp
test
je
xor
jmp
mov
sub
mov
inc
cmp
jb
pop
pop
mov
ret
push
push
mov
test
je
mov
test
je
cmp
push
mov
jne
cmp
jae
lea
pop
pop
pop
ret
cmp
push
je
mov
mov
and
shl
sub
xor
mov
mov
cmp
jb
lea
mov
shr
add
mov
inc
cmp
jae
lea
push
lea
mov
call
add
mov
mov
lea
push
call
add
sub
add
mov
add
cmp
je
pop
pop
pop
mov
pop
ret
mov
push
call
add
mov
pop
mov
pop
pop
mov
xor
pop
ret
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
test
je
cmp
jne
cmp
jne
mov
ret
xor
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
mov
test
je
mov
test
je
mov
test
je
mov
test
je
cmp
je
mov
push
push
push
push
call
mov
add
test
je
cmp
mov
je
mov
mov
mov
shl
mov
push
push
push
call
add
mov
test
jne
mov
mov
push
push
call
add
pop
pop
pop
mov
pop
pop
ret
push
push
mov
push
rep
call
mov
lea
add
cmp
jb
lea
cmp
ja
sub
sub
sar
lea
mov
mov
sub
sub
sar
lea
mov
mov
mov
sub
sub
sar
lea
mov
test
je
mov
mov
mov
shl
push
push
push
call
add
mov
mov
mov
pop
pop
pop
xor
pop
pop
ret
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
movzx
mov
shl
or
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
push
test
jbe
jmp
lea
nop
movzx
inc
lea
inc
cmp
jb
mov
mov
mov
mov
cmp
jne
dec
cmp
jae
mov
cmp
jbe
mov
test
jne
mov
xor
mov
mov
mov
mov
mov
mov
add
mov
mov
add
mov
pop
pop
xor
pop
add
ret
mov
cmp
jne
cmp
jne
cmp
jne
cmp
jne
cmp
jne
add
cmp
jbe
jmp
inc
jmp
add
jmp
add
jmp
add
cmp
jae
mov
mov
mov
movzx
add
sub
js
inc
cmp
jbe
push
mov
test
jle
test
je
cmp
je
pop
pop
pop
or
pop
add
ret
pop
pop
or
pop
add
ret
xor
mov
mov
jmp
lea
mov
add
add
mov
cmp
jb
mov
xor
test
jbe
cmp
je
movzx
movzx
mov
mov
movzx
inc
lea
inc
cmp
jb
mov
sub
mov
je
sub
je
mov
mov
mov
jmp
mov
sub
mov
mov
sub
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
mov
xor
xor
lea
mov
mov
mov
mov
cmp
jne
cmp
jae
mov
mov
mov
mov
movzx
mov
sub
mov
movzx
cmp
jge
mov
mov
jmp
jle
movzx
mov
add
mov
mov
mov
mov
mov
jmp
xor
mov
mov
mov
mov
sub
mov
shl
mov
mov
shr
mov
mov
lea
add
lea
mov
sub
sub
mov
test
jne
mov
lea
mov
shl
test
je
shr
test
jne
test
je
lea
and
add
mov
jmp
xor
add
mov
add
movzx
test
jne
cmp
je
mov
movzx
mov
movzx
mov
mov
cmp
jbe
mov
and
mov
cmp
je
test
jne
mov
mov
mov
lea
mov
mov
sub
mov
lea
shl
cmp
jae
lea
movzx
sub
test
jle
inc
inc
add
add
cmp
jb
mov
mov
shl
add
cmp
mov
jne
cmp
jae
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sar
mov
mov
jmp
mov
mov
sub
xor
mov
mov
mov
test
je
mov
test
je
mov
and
cmp
je
mov
mov
xor
mov
mov
mov
mov
mov
shr
mov
mov
lea
mov
shl
test
je
shr
test
jne
test
je
lea
and
add
mov
jne
mov
mov
lea
add
mov
pop
pop
pop
mov
xor
pop
add
ret
pop
pop
pop
mov
pop
add
ret
int3
int3
int3
int3
int3
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
mov
push
lea
xor
mov
add
sub
jne
lea
mov
xor
mov
add
sub
jne
lea
mov
xor
mov
add
sub
jne
mov
mov
xor
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
lea
cmp
mov
jg
push
jge
mov
mov
movzx
movzx
cmp
jb
jne
mov
cmp
ja
inc
mov
mov
movzx
movzx
cmp
jb
jne
mov
cmp
jbe
mov
mov
mov
mov
add
cmp
jle
mov
pop
pop
mov
pop
pop
ret
mov
pop
pop
mov
pop
pop
ret
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
movzx
mov
shl
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
inc
cmp
mov
mov
jge
mov
sub
lea
add
mov
mov
mov
jmp
mov
mov
mov
movzx
movzx
inc
cmp
jle
inc
mov
cmp
mov
jg
mov
inc
xor
cmp
jl
mov
sub
mov
mov
movzx
add
imul
add
test
je
movzx
add
imul
add
mov
add
sub
jne
mov
test
je
mov
lea
mov
lea
jmp
lea
mov
cmp
lea
jne
sub
dec
cmp
je
add
mov
add
mov
add
sub
test
jg
mov
test
je
mov
mov
movzx
mov
test
je
lea
mov
dec
sub
cmp
mov
jg
movzx
lea
cmp
je
movzx
mov
sub
imul
add
mov
mov
dec
mov
test
jne
mov
mov
dec
sub
mov
test
jne
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
push
movzx
xor
mov
mov
lea
lea
test
jne
mov
lea
mov
mov
test
jl
mov
add
inc
mov
mov
mov
nop
mov
mov
movzx
inc
cmp
jge
cmp
je
cmp
jge
add
jmp
test
je
cmp
je
inc
inc
jmp
cmp
jg
inc
jmp
inc
xor
mov
test
jne
mov
lea
jmp
cmp
jne
mov
lea
jmp
mov
lea
add
sub
jne
pop
pop
pop
pop
add
ret
int3
int3
sub
push
push
movzx
push
xor
push
mov
mov
mov
lea
lea
test
jne
mov
lea
test
jl
add
inc
mov
mov
mov
jmp
lea
nop
mov
movzx
mov
add
cmp
mov
mov
mov
jge
cmp
je
cmp
jge
lea
movzx
mov
mov
sub
cmp
jle
movzx
mov
shl
mov
or
movzx
mov
mov
add
mov
movzx
mov
mov
mov
add
mov
sub
shr
lea
mov
mov
mov
jmp
mov
shl
or
add
sub
mov
mov
jne
jmp
test
je
cmp
je
movzx
mov
mov
sub
cmp
mov
jle
movzx
mov
shl
mov
or
movzx
mov
mov
add
movzx
mov
mov
mov
mov
add
mov
sub
shr
mov
lea
mov
mov
jmp
mov
shl
or
mov
add
sub
mov
mov
movzx
mov
mov
sub
cmp
mov
jle
movzx
mov
shl
mov
or
movzx
mov
mov
add
movzx
mov
mov
mov
mov
add
mov
sub
shr
mov
lea
mov
mov
jmp
mov
shl
or
mov
add
add
cmp
mov
jle
mov
shl
mov
or
movzx
mov
mov
add
movzx
mov
mov
mov
mov
add
mov
sub
shr
add
mov
mov
jmp
shl
or
add
jmp
cmp
mov
mov
jg
movzx
sub
cmp
mov
jle
movzx
mov
shl
mov
or
movzx
mov
mov
add
movzx
mov
mov
mov
mov
add
mov
sub
shr
mov
lea
mov
mov
jmp
mov
shl
or
mov
add
add
cmp
mov
jle
mov
shl
mov
or
movzx
mov
mov
add
movzx
mov
mov
mov
mov
add
mov
sub
shr
add
mov
mov
jmp
shl
or
add
jmp
movzx
sub
cmp
mov
jle
movzx
mov
shl
mov
or
movzx
mov
mov
add
movzx
mov
mov
mov
mov
add
mov
sub
shr
mov
lea
mov
mov
jmp
mov
shl
or
mov
add
add
cmp
mov
jle
mov
shl
mov
or
movzx
mov
mov
add
movzx
mov
mov
mov
mov
add
mov
sub
shr
add
mov
mov
jmp
shl
or
add
mov
mov
xor
mov
test
jne
mov
lea
jmp
cmp
jne
mov
lea
jmp
mov
lea
add
sub
jne
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
push
mov
cmp
push
mov
push
push
push
mov
jle
mov
add
mov
shl
mov
or
movzx
mov
mov
add
movzx
mov
mov
mov
mov
add
mov
mov
sub
shr
add
mov
mov
jmp
mov
add
shl
or
add
mov
mov
cmp
jle
mov
dec
mov
shl
mov
mov
or
movzx
mov
mov
add
movzx
mov
mov
mov
mov
add
mov
mov
sub
shr
add
mov
mov
jmp
mov
dec
shl
or
add
mov
mov
cmp
jle
lea
mov
shl
mov
mov
or
movzx
mov
mov
add
movzx
mov
mov
mov
mov
add
mov
mov
sub
shr
add
mov
mov
jmp
lea
shl
or
add
mov
xor
test
jle
jmp
lea
mov
cmp
movzx
jle
movzx
mov
shl
mov
or
movzx
mov
mov
add
movzx
mov
mov
mov
mov
add
mov
mov
sub
shr
add
mov
mov
jmp
mov
shl
or
add
mov
add
cmp
jl
mov
dec
lea
call
mov
pop
pop
pop
dec
lea
pop
add
jmp
int3
int3
int3
int3
int3
int3
mov
mov
mov
push
mov
mov
mov
mov
push
mov
mov
mov
add
test
jne
add
jmp
add
movzx
add
lea
sub
cmp
jae
movzx
jmp
shr
movzx
add
mov
sub
xor
cmp
pop
sete
pop
mov
ret
int3
sub
push
mov
push
xor
push
push
cmp
je
lea
mov
movzx
mov
movzx
inc
mov
mov
test
jne
movzx
mov
sub
cmp
jle
movzx
mov
shl
mov
mov
or
movzx
mov
mov
inc
movzx
mov
mov
mov
mov
inc
mov
mov
sub
shr
lea
mov
jmp
mov
shl
or
add
jmp
movzx
movzx
mov
sub
cmp
mov
mov
mov
jle
movzx
mov
shl
mov
or
movzx
mov
mov
inc
mov
movzx
mov
mov
mov
inc
mov
sub
shr
mov
lea
mov
mov
mov
jmp
mov
shl
or
mov
add
mov
mov
mov
test
je
sub
mov
mov
sub
cmp
jle
mov
shl
mov
or
movzx
mov
mov
inc
movzx
mov
mov
mov
mov
inc
mov
mov
sub
shr
lea
mov
jmp
shl
or
add
mov
dec
cmp
jae
movzx
jmp
mov
shr
movzx
mov
movzx
mov
mov
sub
cmp
mov
jle
mov
movzx
mov
shl
mov
or
movzx
mov
mov
inc
movzx
mov
mov
mov
mov
inc
mov
mov
sub
shr
mov
lea
mov
mov
jmp
mov
mov
shl
or
add
mov
mov
test
je
mov
sub
mov
sub
cmp
jle
mov
shl
mov
mov
or
movzx
mov
mov
inc
movzx
mov
mov
mov
mov
inc
mov
mov
sub
shr
lea
mov
jmp
shl
or
add
mov
mov
cmp
jb
movzx
mov
mov
sub
cmp
jle
movzx
mov
shl
mov
mov
or
mov
mov
mov
inc
mov
mov
mov
mov
mov
mov
inc
mov
sub
shr
lea
pop
mov
mov
movzx
pop
pop
mov
pop
add
ret
mov
shl
or
add
pop
mov
movzx
pop
pop
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
xor
lea
cmp
jne
inc
add
cmp
jl
cmp
jne
mov
lea
jmp
lea
cmp
jne
cmp
jne
cmp
jne
cmp
jne
cmp
jne
cmp
jne
add
add
cmp
jl
mov
xor
cmp
sete
mov
ret
mov
xor
inc
cmp
sete
mov
ret
mov
xor
add
cmp
sete
mov
ret
mov
xor
add
cmp
sete
mov
ret
mov
xor
add
cmp
sete
mov
ret
add
mov
xor
cmp
sete
mov
ret
int3
int3
int3
int3
int3
int3
int3
xor
push
mov
and
or
dec
shr
add
test
jg
shr
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
cmp
jne
movzx
mov
mov
mov
inc
movzx
mov
mov
mov
inc
xor
mov
mov
pop
ret
cmp
jl
mov
mov
mov
mov
movzx
inc
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmp
push
jle
movzx
mov
mov
mov
inc
mov
mov
movzx
jmp
test
jle
mov
mov
mov
mov
inc
xor
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
call
cmp
mov
mov
je
mov
mov
mov
add
mov
push
mov
mov
shr
mov
add
mov
mov
mov
not
mov
add
mov
mov
mov
not
shr
mov
add
pop
test
je
mov
mov
sub
mov
mov
mov
mov
add
add
test
jne
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
mov
lea
lea
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
lea
xor
mov
sub
lea
mov
add
add
movzx
mov
inc
cmp
jle
xor
test
jl
push
movzx
test
je
movzx
movzx
inc
mov
xor
lea
mov
and
or
dec
shr
add
test
jg
shr
mov
inc
cmp
jle
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
push
push
push
mov
mov
mov
mov
xor
or
xor
cmp
mov
mov
mov
mov
jle
cmp
je
inc
mov
mov
mov
mov
mov
jmp
xor
mov
inc
cmp
jl
cmp
jge
cmp
jge
inc
mov
jmp
xor
inc
mov
mov
mov
mov
mov
dec
cmp
je
movzx
sub
cmp
jl
mov
mov
mov
mov
cdq
sub
mov
sar
cmp
jl
push
mov
call
dec
add
cmp
jge
mov
jmp
lea
mov
mov
mov
mov
dec
mov
push
mov
mov
call
mov
or
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
cmp
jb
movzx
jmp
movzx
inc
mov
movzx
mov
mov
mov
push
mov
inc
call
add
cmp
jge
dec
mov
mov
mov
mov
mov
call
mov
lea
call
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
lea
push
call
mov
lea
push
call
lea
push
call
add
mov
jmp
lea
movzx
cmp
jne
movzx
cmp
jne
movzx
cmp
jne
movzx
cmp
jne
sub
cmp
jge
lea
add
pop
ret
dec
lea
add
pop
ret
sub
lea
add
pop
ret
sub
lea
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
jle
push
push
mov
mov
shl
mov
or
movzx
mov
mov
movzx
inc
mov
mov
mov
mov
inc
mov
sub
shr
mov
add
mov
mov
mov
pop
pop
push
call
pop
ret
mov
shl
add
mov
mov
or
mov
push
call
pop
ret
int3
int3
int3
mov
mov
mov
shl
push
push
push
or
cmp
mov
jle
movzx
mov
mov
mov
add
movzx
mov
mov
mov
mov
add
mov
sub
mov
shr
add
mov
mov
jmp
add
mov
mov
xor
shl
or
cmp
jle
movzx
mov
mov
mov
add
movzx
mov
mov
mov
mov
add
mov
sub
xor
shr
add
mov
mov
jmp
add
mov
call
mov
mov
sub
add
cmp
jge
mov
shl
or
cmp
jle
movzx
mov
mov
mov
add
movzx
mov
mov
mov
mov
add
mov
sub
mov
shr
add
mov
mov
jmp
add
mov
mov
xor
shl
or
cmp
jle
movzx
mov
mov
mov
add
movzx
mov
mov
mov
mov
add
mov
sub
xor
shr
add
mov
mov
call
pop
pop
mov
pop
ret
add
mov
call
pop
pop
mov
pop
ret
int3
int3
int3
push
push
mov
push
mov
cmp
push
mov
jle
test
jbe
mov
cmp
jne
mov
call
lea
push
call
lea
push
call
add
mov
call
mov
mov
add
add
shr
shr
mov
cmp
ja
jmp
lea
mov
lea
cmp
ja
mov
test
je
mov
push
push
push
push
call
add
jmp
cmp
je
cmp
je
mov
cmp
mov
lea
jle
mov
shl
mov
or
movzx
mov
mov
inc
movzx
mov
mov
mov
mov
inc
mov
sub
shr
add
mov
mov
jmp
shl
or
add
mov
mov
mov
mov
inc
push
inc
push
inc
push
mov
call
lea
push
lea
push
mov
call
add
jmp
mov
cmp
mov
lea
jle
mov
shl
mov
or
movzx
mov
mov
inc
movzx
mov
mov
mov
mov
inc
mov
sub
shr
add
mov
mov
jmp
shl
or
add
mov
push
push
mov
call
add
mov
call
test
pop
je
mov
pop
pop
add
jmp
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
mov
push
mov
push
mov
mov
mov
lea
push
push
mov
mov
mov
mov
call
add
test
jne
push
lea
push
push
call
mov
add
cmp
je
lea
push
call
add
cmp
je
cmp
jne
cmp
je
mov
pop
pop
add
ret
pop
mov
pop
add
ret
mov
lea
push
mov
call
add
pop
pop
add
ret
int3
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
lea
mov
sub
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
imul
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
pop
ret
jmp
jmp
jmp
mov
push
mov
pop
jmp
mov
push
mov
call
pop
ret
mov
push
mov
push
mov
call
test
je
push
call
pop
mov
pop
pop
ret
push
push
call
and
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
mov
call
mov
call
ret
push
call
pop
ret
mov
push
mov
push
mov
cmp
ja
push
push
mov
cmp
jne
call
push
call
push
call
pop
pop
mov
cmp
jne
test
je
mov
jmp
xor
inc
push
jmp
cmp
jne
push
call
pop
test
jne
test
jne
inc
add
and
push
push
push
call
mov
test
jne
push
pop
cmp
je
push
call
pop
test
je
mov
jmp
call
mov
call
mov
pop
mov
pop
jmp
push
call
pop
call
mov
xor
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
cmp
jb
cmp
je
push
push
and
and
cmp
pop
pop
jne
pop
pop
pop
jmp
test
jne
shr
and
cmp
jb
rep
jmp
nop
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pop
loope
add
inc
add
ror
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
sub
inc
add
loop
add
loop
add
loop
add
loop
add
loope
add
loope
add
loope
add
inc
(bad)
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
loop
add
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
inc
add
jecxz
add
jecxz
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
inc
add
inc
add
inc
add
inc
add
jecxz
add
inc
(bad)
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
inc
add
jecxz
add
jecxz
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
test
jne
cmp
jb
cmp
je
jmp
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
cmp
jb
cmp
je
push
push
and
and
cmp
pop
pop
jne
pop
pop
pop
jmp
test
jne
shr
and
cmp
jb
rep
jmp
nop
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
dec
in
add
add
ror
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
sbb
inc
add
out
add
out
add
in
add
in
add
in
add
in
add
in
add
inc
(bad)
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
xor
inc
add
inc
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
aam
inc
add
out
add
out
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
je
inc
add
add
inc
add
inc
add
inc
add
inc
(bad)
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
shl
inc
add
out
add
out
add
out
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
push
call
mov
test
je
cmp
jne
push
call
pop
and
push
call
pop
mov
test
je
push
push
call
pop
pop
mov
call
cmp
jne
push
jmp
push
call
pop
ret
push
push
push
call
test
jne
call
mov
call
push
call
mov
pop
call
ret
mov
push
mov
push
and
push
lea
push
push
push
call
mov
add
test
jne
cmp
je
call
test
je
call
mov
mov
mov
pop
leave
ret
mov
push
mov
mov
push
xor
cmp
jbe
push
xor
pop
div
cmp
jae
call
push
push
push
push
push
mov
call
add
xor
jmp
imul
push
push
mov
cmp
je
push
call
pop
mov
push
push
call
mov
pop
pop
test
je
cmp
jae
sub
push
push
add
push
call
add
mov
pop
pop
pop
pop
ret
mov
push
push
push
mov
call
mov
mov
pop
ret
mov
jmp
mov
push
mov
push
mov
mov
call
test
je
push
call
pop
mov
pop
pop
ret
mov
push
mov
push
push
mov
call
mov
mov
pop
pop
ret
mov
push
mov
sub
jmp
push
call
pop
test
je
push
call
pop
test
je
leave
ret
test
mov
jne
or
mov
call
push
call
pop
push
lea
call
push
lea
push
call
int3
mov
push
mov
cmp
push
mov
jne
xor
jmp
push
test
jne
cmp
je
call
test
jne
mov
test
je
cmp
je
push
call
pop
mov
jmp
push
call
pop
cmp
jbe
mov
cmp
jne
push
push
push
call
add
test
je
add
mov
test
jne
xor
pop
pop
pop
ret
mov
lea
jmp
push
push
call
xor
xor
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
xor
jmp
mov
push
push
call
pop
pop
cmp
sbb
neg
je
push
call
pop
mov
push
call
pop
mov
mov
call
mov
call
ret
push
call
pop
ret
push
push
call
mov
test
jne
push
call
pop
jmp
mov
test
jne
push
call
pop
jmp
cmp
jne
xor
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
cmp
jb
mov
push
push
push
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
push
call
mov
cmp
je
mov
dec
cmp
jb
mov
push
push
push
call
push
push
call
add
mov
call
cmp
jne
test
jne
inc
add
and
mov
push
push
push
push
call
mov
jmp
mov
mov
push
call
pop
ret
mov
test
jne
cmp
je
push
call
pop
test
jne
call
cmp
jne
mov
call
push
call
pop
mov
jmp
test
jne
call
cmp
je
mov
jmp
test
jne
inc
push
push
push
push
call
mov
test
jne
cmp
je
push
call
pop
test
je
cmp
jbe
push
call
pop
call
mov
xor
call
ret
call
jmp
test
jne
call
mov
call
push
call
mov
pop
mov
jmp
call
push
call
pop
ret
jmp
mov
push
mov
sub
push
push
push
xor
cmp
je
cmp
je
mov
cmp
jne
call
push
push
push
push
push
mov
call
add
xor
pop
pop
pop
leave
ret
mov
cmp
je
or
xor
div
cmp
ja
mov
imul
test
mov
mov
mov
je
mov
mov
jmp
mov
test
je
mov
and
je
mov
test
je
jl
mov
cmp
jb
mov
push
push
push
call
sub
add
add
sub
add
jmp
cmp
jb
test
je
push
call
pop
test
jne
cmp
mov
je
xor
mov
div
sub
push
push
push
call
pop
push
call
add
cmp
je
mov
cmp
ja
mov
add
sub
cmp
jb
mov
jmp
mov
movsx
push
push
call
pop
pop
cmp
je
inc
mov
dec
mov
test
jg
mov
test
jne
mov
jmp
or
mov
sub
xor
div
jmp
or
mov
jmp
push
push
call
xor
cmp
je
cmp
je
xor
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
xor
call
ret
push
call
pop
mov
push
push
push
push
call
add
mov
mov
call
mov
jmp
push
call
pop
ret
mov
push
mov
mov
push
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
xor
jmp
mov
and
pop
pop
ret
mov
push
mov
sub
mov
push
mov
push
push
xor
mov
mov
cmp
je
cmp
je
cmp
jne
call
push
push
push
push
mov
push
call
add
xor
pop
pop
pop
leave
ret
mov
cmp
je
or
xor
div
cmp
jbe
cmp
je
push
push
push
call
add
cmp
je
or
xor
div
cmp
ja
mov
imul
test
mov
mov
je
mov
mov
jmp
mov
test
je
test
je
mov
test
je
jl
mov
cmp
jb
mov
cmp
ja
push
push
push
push
call
sub
add
add
sub
add
sub
mov
jmp
cmp
jb
cmp
je
mov
xor
cmp
jbe
mov
div
mov
jmp
mov
div
mov
sub
jmp
mov
cmp
ja
mov
cmp
ja
push
push
push
call
pop
push
call
add
test
je
cmp
je
add
sub
sub
jmp
push
call
pop
cmp
je
cmp
je
mov
inc
mov
mov
dec
dec
mov
test
jne
mov
jmp
xor
cmp
je
push
push
push
call
add
call
push
push
push
push
mov
push
jmp
cmp
je
push
push
push
call
add
call
mov
xor
push
push
push
push
push
jmp
or
mov
sub
xor
div
jmp
or
jmp
push
push
call
xor
mov
cmp
je
cmp
je
cmp
jne
cmp
je
push
push
push
call
add
call
mov
push
push
push
push
push
call
add
xor
call
ret
push
call
pop
mov
push
push
push
push
push
call
add
mov
mov
call
mov
jmp
push
call
pop
ret
mov
push
mov
push
push
push
push
push
call
add
pop
ret
mov
push
mov
mov
xor
cmp
je
inc
cmp
jb
lea
cmp
ja
push
pop
pop
ret
mov
pop
ret
add
push
pop
cmp
sbb
and
add
pop
ret
call
test
jne
mov
ret
add
ret
call
test
jne
mov
ret
add
ret
mov
push
mov
push
call
mov
push
mov
call
pop
mov
call
mov
pop
pop
ret
mov
push
mov
push
push
mov
push
xor
or
cmp
jne
call
push
push
push
push
push
mov
call
add
or
jmp
test
je
push
call
push
mov
call
push
call
push
call
add
test
jge
or
jmp
mov
cmp
je
push
call
pop
mov
mov
mov
pop
pop
pop
pop
ret
push
push
call
or
xor
mov
xor
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
or
jmp
test
je
mov
mov
call
ret
push
call
pop
mov
push
call
pop
mov
mov
call
jmp
mov
push
call
pop
ret
mov
push
mov
sub
push
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
or
jmp
mov
push
mov
cmp
je
cmp
jne
call
push
push
push
push
push
mov
call
add
or
jmp
mov
mov
cmp
ja
mov
push
push
lea
push
mov
push
mov
push
mov
call
add
mov
cmp
je
dec
js
mov
mov
jmp
lea
push
push
call
pop
pop
mov
pop
pop
pop
leave
ret
mov
push
mov
push
push
push
push
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
lea
sub
sbb
not
and
mov
and
cmp
jb
mov
pop
xchg
mov
mov
ret
sub
test
jmp
mov
push
mov
push
push
mov
mov
mov
and
xor
cmp
jne
test
je
mov
push
mov
sub
test
jle
push
push
push
call
pop
push
call
add
cmp
jne
mov
test
jns
and
mov
jmp
or
or
pop
mov
and
mov
pop
mov
pop
pop
ret
mov
push
mov
push
mov
test
jne
push
call
pop
jmp
push
call
pop
test
je
or
jmp
test
je
push
call
push
call
pop
neg
pop
sbb
jmp
xor
pop
pop
ret
push
push
call
xor
mov
mov
push
call
pop
mov
xor
mov
cmp
jge
mov
lea
cmp
je
mov
test
je
push
push
call
pop
pop
xor
inc
mov
mov
mov
mov
test
je
cmp
jne
push
call
pop
cmp
je
inc
jmp
cmp
jne
test
je
push
call
pop
cmp
jne
or
mov
call
inc
jmp
xor
mov
mov
push
push
call
pop
pop
ret
mov
call
cmp
mov
je
mov
call
ret
push
call
pop
ret
push
push
call
xor
cmp
jne
push
call
pop
jmp
push
call
pop
mov
push
call
pop
mov
mov
call
mov
call
ret
push
call
pop
ret
push
call
pop
ret
mov
push
mov
push
mov
mov
test
jne
call
mov
or
jmp
and
cmp
mov
jne
push
call
add
and
pop
push
call
mov
pop
test
jns
and
mov
jmp
test
je
test
je
test
jne
mov
push
push
push
call
pop
push
call
xor
add
cmp
setne
dec
mov
pop
pop
ret
push
push
call
xor
xor
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
or
jmp
mov
cmp
je
cmp
je
cmp
jne
push
call
pop
mov
push
push
push
call
add
mov
mov
call
mov
call
ret
push
call
pop
ret
push
push
call
xor
mov
xor
mov
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
or
jmp
push
call
pop
mov
test
jne
push
call
pop
cmp
je
cmp
je
mov
sar
mov
and
shl
add
jmp
mov
test
jne
cmp
je
cmp
je
mov
sar
and
shl
add
jmp
mov
test
je
call
mov
push
push
push
push
push
call
add
or
cmp
jne
dec
js
mov
mov
mov
movzx
inc
jmp
push
push
call
pop
pop
mov
mov
call
mov
call
ret
mov
push
call
pop
ret
mov
push
mov
push
mov
test
jl
call
cmp
jl
call
mov
call
mov
pop
pop
ret
mov
push
mov
push
push
call
mov
xor
cmp
jne
mov
jmp
push
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
mov
jmp
push
mov
call
push
push
push
call
add
test
je
push
push
push
push
push
call
add
mov
pop
pop
pop
pop
ret
push
push
call
xor
mov
xor
cmp
setne
cmp
jne
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
push
call
pop
mov
and
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
lea
push
call
pop
pop
and
shl
add
jmp
mov
movsx
and
mov
mov
call
xor
call
ret
mov
push
call
pop
ret
mov
push
mov
pop
jmp
mov
push
mov
sub
push
push
mov
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
or
jmp
push
call
cmp
pop
mov
jge
mov
push
push
push
call
add
cmp
mov
jl
mov
test
jne
sub
jmp
mov
mov
push
mov
sub
mov
test
je
mov
mov
sar
mov
and
shl
test
je
mov
cmp
jae
mov
cmp
jne
inc
xor
inc
cmp
jb
cmp
jne
mov
jmp
test
js
call
mov
jmp
test
je
mov
cmp
jne
mov
jmp
mov
mov
sub
add
sar
and
lea
mov
mov
shl
test
je
push
push
push
call
add
cmp
jne
mov
mov
add
jmp
cmp
jne
inc
inc
cmp
jb
test
jmp
push
push
push
call
add
test
jge
or
jmp
mov
cmp
ja
mov
test
je
test
je
mov
mov
mov
test
je
inc
mov
sub
mov
mov
add
pop
pop
pop
leave
ret
push
push
call
xor
xor
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
or
jmp
push
call
pop
mov
push
call
pop
mov
mov
call
mov
call
ret
push
call
pop
ret
push
push
call
xor
mov
xor
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
xor
jmp
mov
cmp
jne
call
mov
jmp
cmp
jl
cmp
jb
call
mov
jmp
mov
sar
and
shl
mov
movsx
xor
inc
and
je
jmp
inc
cmp
je
mov
cmp
je
cmp
je
cmp
jne
push
pop
xor
mov
or
jmp
mov
jmp
cmp
je
movsx
sub
je
sub
je
sub
je
dec
je
sub
je
sub
jne
cmp
jne
mov
jmp
cmp
jne
xor
inc
and
jmp
cmp
jne
xor
inc
or
jmp
test
jns
xor
jmp
and
or
inc
mov
test
jne
jmp
inc
cmp
je
xor
cmp
sete
cmp
je
call
mov
mov
cmp
jne
call
mov
jmp
mov
inc
mov
mov
mov
mov
call
mov
call
ret
mov
push
call
pop
ret
push
push
call
xor
mov
xor
mov
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
xor
jmp
xor
mov
cmp
setne
cmp
je
xor
cmp
setne
cmp
je
call
mov
cmp
jne
call
mov
jmp
mov
cmp
jne
call
mov
push
lea
push
push
call
add
jmp
push
push
push
push
call
add
mov
mov
call
mov
call
ret
push
call
pop
ret
mov
push
mov
push
push
push
call
add
pop
ret
mov
push
mov
cmp
je
call
push
call
push
call
pop
pop
pop
ret
push
push
call
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
cmp
jbe
xor
cmp
setne
mov
jmp
and
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
and
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
push
call
pop
test
je
push
call
pop
mov
mov
push
push
push
call
add
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
mov
cmp
jne
push
call
call
mov
mov
call
ret
call
jmp
push
push
call
push
call
pop
and
mov
mov
test
je
mov
mov
mov
test
je
cmp
jne
mov
mov
push
call
pop
push
call
pop
and
mov
call
call
ret
mov
jmp
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
mov
push
push
xor
mov
cmp
jne
lea
mov
push
push
add
call
pop
pop
test
je
inc
cmp
jl
xor
inc
pop
pop
ret
and
xor
jmp
mov
push
mov
push
mov
push
mov
test
je
cmp
je
push
call
push
call
and
pop
add
cmp
jl
mov
pop
mov
test
je
cmp
jne
push
call
add
cmp
jl
pop
pop
ret
mov
push
mov
mov
push
call
pop
ret
push
push
call
xor
inc
mov
xor
cmp
jne
call
push
call
push
call
pop
pop
mov
lea
cmp
je
mov
jmp
push
call
pop
mov
cmp
jne
call
mov
xor
jmp
push
call
pop
mov
cmp
jne
push
push
call
pop
pop
test
jne
push
call
pop
call
mov
mov
jmp
mov
jmp
push
call
pop
mov
call
mov
call
ret
push
call
pop
ret
mov
push
mov
mov
push
lea
cmp
jne
push
call
pop
test
jne
push
call
pop
push
call
pop
pop
ret
mov
push
mov
mov
mov
imul
add
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
pop
ret
mov
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
mov
test
jne
push
lea
mov
mov
mov
mov
mov
mov
test
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
dec
jne
mov
and
jmp
lea
shr
lea
not
and
dec
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
mov
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
not
and
dec
jne
mov
and
jmp
lea
shr
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmp
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
mov
cmp
jae
cmp
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmp
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
dec
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
and
mov
mov
dec
mov
mov
cmp
jne
and
mov
cmp
jne
push
push
push
call
mov
push
push
push
call
mov
mov
imul
mov
sub
lea
push
lea
push
push
call
mov
add
dec
cmp
jbe
sub
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
push
mov
push
xor
cmp
jne
add
imul
push
push
push
push
call
cmp
jne
xor
jmp
add
mov
mov
imul
add
push
push
push
call
mov
cmp
je
push
push
push
push
call
mov
cmp
jne
push
push
push
call
jmp
or
mov
mov
inc
mov
or
mov
pop
pop
ret
mov
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
add
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
mov
cmp
ja
mov
sub
shr
lea
inc
or
or
lea
mov
lea
mov
mov
mov
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
and
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
mov
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
mov
cmp
jbe
push
pop
mov
mov
cmp
jne
mov
cmp
jae
shr
mov
lea
not
and
dec
jne
mov
and
jmp
add
shr
mov
lea
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmp
jle
mov
mov
sar
dec
lea
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
mov
cmp
jae
cmp
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmp
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
mov
mov
cmp
jbe
push
pop
test
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
dec
jne
mov
and
jmp
lea
shr
lea
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
mov
cmp
jae
cmp
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmp
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
mov
push
mov
sub
mov
mov
imul
add
add
and
mov
sar
push
dec
cmp
push
push
jge
or
shr
or
jmp
add
or
xor
shr
mov
mov
mov
jmp
mov
mov
and
and
or
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
mov
cmp
jb
cmp
jne
jmp
cmp
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmp
jne
add
mov
cmp
jb
cmp
jne
call
mov
mov
test
jne
xor
jmp
push
call
pop
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
je
mov
mov
and
and
or
jne
and
mov
lea
mov
and
and
or
jne
inc
mov
add
jmp
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
add
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
dec
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
dec
mov
jne
mov
mov
and
jmp
mov
cmp
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmp
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmp
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
lea
mov
test
jne
cmp
jne
mov
cmp
jne
and
mov
mov
lea
pop
pop
pop
leave
ret
int3
push
push
mov
mov
lea
sub
push
push
push
mov
xor
xor
push
mov
push
mov
mov
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
pop
mov
pop
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
sub
push
mov
push
mov
xor
push
mov
mov
mov
lea
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
test
jne
mov
lea
mov
mov
mov
mov
cmp
je
lea
lea
mov
lea
mov
mov
mov
test
je
mov
call
mov
test
jl
jg
mov
mov
cmp
jne
cmp
je
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
pop
pop
pop
mov
pop
ret
mov
jmp
mov
cmp
jne
cmp
je
push
call
add
test
je
mov
push
push
call
add
mov
call
mov
cmp
je
push
push
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
mov
mov
call
mov
cmp
je
push
push
mov
call
jmp
mov
push
mov
xor
cmp
push
sete
push
push
call
mov
test
jne
pop
ret
xor
inc
mov
pop
ret
mov
push
mov
push
mov
push
call
push
call
add
cmp
ja
test
je
pop
pop
ret
mov
push
mov
call
push
call
push
call
push
call
add
pop
ret
mov
push
mov
push
call
test
je
push
push
call
test
je
push
call
pop
ret
mov
push
mov
push
call
pop
push
call
int3
push
call
pop
ret
push
call
pop
ret
mov
push
mov
push
mov
jmp
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
push
mov
xor
jmp
test
jne
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
cmp
je
push
call
pop
test
je
push
call
pop
call
push
push
call
pop
pop
test
jne
push
call
mov
mov
call
cmp
pop
je
push
call
pop
test
je
push
push
push
call
xor
pop
ret
push
push
call
push
call
pop
and
xor
inc
cmp
je
mov
mov
mov
cmp
jne
push
call
pop
mov
mov
test
je
push
call
pop
mov
mov
mov
mov
sub
mov
cmp
jb
call
cmp
je
cmp
jb
push
call
mov
call
mov
call
push
call
mov
push
call
add
cmp
jne
cmp
je
mov
mov
mov
mov
mov
mov
jmp
push
mov
call
pop
push
mov
call
pop
mov
call
cmp
jne
mov
push
call
pop
push
call
xor
inc
cmp
je
push
call
pop
ret
call
ret
mov
push
mov
push
push
push
call
add
pop
ret
mov
push
mov
push
push
push
call
add
pop
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
mov
push
call
mov
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
mov
pop
ret
mov
push
mov
push
push
push
mov
push
push
xor
xor
mov
cmp
je
inc
mov
cmp
jb
cmp
jae
push
call
pop
cmp
je
push
call
pop
test
jne
cmp
je
cmp
je
push
mov
push
mov
push
call
add
test
je
push
push
push
push
push
call
add
push
mov
push
push
mov
call
test
jne
push
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
push
call
inc
pop
cmp
jbe
push
call
sub
add
push
mov
push
sub
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
jmp
xor
push
push
push
call
add
test
je
push
push
push
push
push
call
add
mov
push
push
push
call
add
test
je
push
push
push
push
push
call
add
push
push
push
call
add
jmp
push
call
mov
cmp
je
cmp
je
push
lea
push
lea
push
call
pop
push
push
push
call
pop
pop
pop
leave
ret
push
call
pop
cmp
je
push
call
pop
test
jne
cmp
jne
push
call
push
call
pop
pop
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
push
call
pop
test
je
push
call
pop
test
je
xor
inc
pop
ret
xor
pop
ret
push
mov
sub
mov
mov
mov
mov
mov
shr
jmp
lea
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
lea
dec
jne
mov
mov
mov
pop
ret
push
mov
sub
mov
mov
mov
mov
mov
cdq
mov
mov
xor
sub
and
xor
sub
cdq
mov
xor
sub
and
xor
sub
mov
or
jne
mov
mov
and
mov
cmp
je
sub
push
push
push
call
add
mov
mov
test
je
mov
mov
add
sub
mov
add
sub
mov
mov
mov
mov
rep
mov
jmp
cmp
jne
neg
add
mov
mov
mov
mov
rep
mov
add
mov
add
mov
sub
push
push
push
call
add
mov
jmp
mov
mov
mov
mov
shr
rep
mov
and
rep
mov
mov
mov
mov
mov
pop
ret
push
push
call
and
movapd
mov
jmp
mov
mov
mov
cmp
je
cmp
je
xor
ret
xor
inc
ret
mov
and
mov
mov
call
ret
mov
push
mov
sub
xor
push
mov
mov
mov
push
pushf
pop
mov
xor
push
popf
pushf
pop
sub
je
push
popf
xor
cpuid
mov
mov
mov
mov
mov
cpuid
mov
mov
pop
test
je
call
test
je
xor
inc
jmp
xor
pop
leave
ret
call
mov
xor
ret
push
mov
sub
mov
mov
mov
shr
pxor
jmp
lea
nop
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
dec
jne
mov
mov
pop
ret
push
mov
sub
mov
mov
cdq
mov
xor
sub
and
xor
sub
test
jne
mov
mov
and
mov
cmp
je
sub
push
push
call
add
mov
mov
test
je
add
sub
mov
xor
mov
mov
rep
mov
jmp
neg
add
mov
xor
mov
mov
rep
mov
mov
mov
add
sub
push
push
push
call
add
mov
mov
mov
pop
ret
push
push
call
mov
xor
cmp
jbe
push
pop
xor
div
cmp
sbb
inc
jne
call
mov
push
push
push
push
push
call
add
xor
jmp
imul
mov
mov
cmp
jne
xor
inc
xor
mov
cmp
ja
cmp
jne
add
and
mov
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
mov
call
mov
cmp
je
push
push
push
call
add
cmp
jne
push
push
push
call
mov
cmp
jne
cmp
je
push
call
pop
test
jne
mov
cmp
je
mov
jmp
xor
mov
push
call
pop
ret
cmp
jne
mov
cmp
je
mov
mov
call
ret
push
push
call
xor
mov
xor
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
or
jmp
cmp
jne
push
call
pop
mov
push
call
pop
mov
cmp
je
mov
sub
mov
jmp
mov
mov
call
cmp
jne
push
push
push
call
mov
mov
call
ret
xor
mov
mov
push
call
pop
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
sub
mov
xor
mov
and
push
push
lea
push
push
call
lea
mov
lea
add
mov
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
lea
push
call
test
jne
test
jne
push
call
pop
push
call
push
call
mov
xor
pop
call
leave
ret
mov
push
mov
push
call
pop
test
je
pop
jmp
push
call
pop
pop
jmp
mov
push
mov
mov
mov
mov
mov
and
mov
pop
ret
mov
push
mov
push
mov
push
mov
mov
mov
mov
test
mov
push
je
test
je
push
call
mov
inc
push
call
pop
pop
mov
test
je
push
push
push
call
add
jmp
and
jmp
mov
pop
mov
pop
pop
pop
ret
cmp
mov
je
push
call
pop
ret
mov
test
jne
mov
ret
mov
push
mov
push
mov
call
test
je
push
call
pop
mov
pop
pop
ret
mov
push
mov
push
push
push
push
push
call
push
mov
mov
call
mov
pop
pop
cmp
jb
mov
sub
lea
cmp
jb
push
call
mov
lea
pop
cmp
jae
mov
cmp
jae
mov
add
cmp
jb
push
push
call
pop
pop
test
jne
lea
cmp
jb
push
push
call
pop
pop
test
je
sar
push
lea
call
pop
mov
push
call
mov
add
push
call
pop
mov
mov
pop
jmp
xor
pop
pop
pop
leave
ret
mov
push
push
push
call
mov
push
call
add
mov
mov
test
jne
push
pop
pop
ret
and
xor
pop
ret
push
push
call
call
and
push
call
pop
mov
mov
call
mov
call
ret
call
ret
mov
push
mov
push
call
neg
sbb
neg
pop
dec
pop
ret
mov
push
mov
sub
mov
push
push
push
pop
mov
lea
rep
mov
mov
pop
mov
pop
test
je
test
je
mov
lea
push
push
push
push
call
leave
ret
mov
push
mov
mov
push
mov
mov
test
jne
call
mov
mov
mov
mov
mov
mov
cmp
je
mov
test
jne
call
mov
mov
cmp
je
mov
mov
test
jne
call
mov
mov
test
jne
or
mov
jmp
mov
mov
mov
mov
mov
pop
pop
ret
mov
push
mov
sub
push
push
lea
call
mov
xor
cmp
jne
cmp
je
mov
and
xor
jmp
cmp
jne
call
push
push
push
push
push
mov
call
add
cmp
je
mov
and
mov
jmp
cmp
je
push
mov
cmp
jbe
call
push
push
push
push
push
mov
call
add
jmp
mov
cmp
jne
push
push
push
push
call
add
jmp
push
push
push
push
push
push
push
lea
push
call
add
cmp
jne
cmp
je
mov
and
mov
jmp
add
cmp
je
mov
and
pop
pop
leave
ret
mov
push
mov
push
push
push
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
mov
push
mov
push
push
push
push
xor
push
mov
mov
mov
cmp
je
mov
push
push
push
push
push
push
push
push
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
push
call
test
je
lea
push
push
call
pop
pop
test
jge
cmp
je
push
call
pop
mov
add
mov
cmp
jne
xor
pop
pop
pop
leave
ret
or
jmp
push
call
pop
jmp
mov
push
mov
mov
push
xor
push
push
cmp
je
mov
cmp
ja
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
inc
inc
cmp
je
dec
jne
cmp
jne
mov
call
push
pop
mov
mov
jmp
xor
pop
pop
pop
pop
ret
mov
push
mov
xor
cmp
jbe
mov
cmp
je
inc
inc
cmp
jb
pop
ret
push
push
call
xor
mov
xor
mov
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
or
jmp
push
call
pop
mov
test
jne
push
call
pop
cmp
je
cmp
je
mov
sar
mov
and
shl
add
jmp
mov
test
jne
cmp
je
cmp
je
mov
sar
and
shl
add
jmp
mov
test
je
call
mov
push
push
push
push
push
call
add
or
cmp
jne
dec
js
mov
movzx
inc
mov
jmp
push
call
pop
mov
mov
call
mov
call
ret
mov
push
call
pop
ret
mov
ret
mov
push
push
pop
test
jne
mov
jmp
cmp
jge
mov
mov
push
push
call
pop
pop
mov
test
jne
push
push
mov
call
pop
pop
mov
test
jne
push
pop
pop
ret
xor
mov
jmp
mov
mov
add
add
cmp
jl
push
pop
xor
mov
push
mov
sar
mov
mov
and
shl
mov
cmp
je
cmp
je
test
jne
mov
add
inc
cmp
jl
pop
xor
pop
ret
call
cmp
je
call
push
call
pop
ret
mov
push
mov
push
mov
mov
cmp
jb
cmp
ja
mov
sub
sar
add
push
call
or
pop
jmp
add
push
call
pop
pop
ret
mov
push
mov
mov
cmp
jge
add
push
call
mov
or
pop
pop
ret
mov
add
push
call
pop
ret
mov
push
mov
mov
mov
cmp
jb
cmp
ja
and
sub
sar
add
push
call
pop
pop
ret
add
push
call
pop
ret
mov
push
mov
mov
cmp
mov
jge
and
add
push
call
pop
pop
ret
add
push
call
pop
ret
mov
push
mov
push
push
mov
push
call
mov
mov
pop
test
jne
call
mov
or
or
jmp
test
je
call
mov
jmp
push
xor
test
je
mov
test
je
mov
and
mov
mov
mov
and
or
mov
mov
mov
test
jne
call
add
cmp
je
call
add
cmp
jne
push
call
pop
test
jne
push
call
pop
test
push
je
mov
mov
lea
mov
mov
sub
dec
cmp
mov
jle
push
push
push
call
add
mov
jmp
or
mov
or
jmp
mov
cmp
je
cmp
je
mov
and
mov
sar
shl
add
jmp
mov
test
je
push
push
push
push
call
and
add
cmp
je
mov
mov
mov
jmp
xor
inc
push
lea
push
push
call
add
mov
cmp
je
or
or
jmp
mov
and
pop
pop
pop
leave
ret
mov
push
mov
mov
call
mov
xor
mov
mov
push
xor
mov
mov
mov
cmp
jne
xor
jmp
cmp
jne
call
mov
call
push
push
push
push
push
mov
call
add
or
jmp
push
push
mov
mov
sar
lea
mov
and
shl
add
mov
add
sar
mov
mov
cmp
je
cmp
jne
mov
not
test
jne
call
xor
mov
call
push
push
push
push
push
mov
call
add
jmp
test
je
push
push
push
push
call
add
push
call
pop
test
je
mov
test
je
call
mov
xor
cmp
lea
sete
push
mov
push
mov
call
test
je
xor
cmp
je
test
je
call
mov
mov
xor
mov
cmp
jbe
mov
mov
test
jne
mov
mov
xor
cmp
sete
mov
mov
add
cmp
je
mov
mov
mov
and
push
lea
push
jmp
movsx
push
call
pop
test
je
mov
sub
add
xor
inc
cmp
jbe
push
lea
push
push
call
add
cmp
je
inc
inc
jmp
push
push
lea
push
call
add
cmp
je
xor
push
push
push
lea
push
push
lea
push
push
push
inc
inc
call
mov
test
je
push
lea
push
push
lea
push
mov
mov
push
call
test
je
mov
mov
add
cmp
mov
jl
cmp
je
push
lea
push
push
lea
push
mov
mov
mov
push
call
test
je
cmp
jl
inc
inc
jmp
cmp
je
cmp
jne
movzx
xor
cmp
sete
inc
inc
add
mov
mov
cmp
je
cmp
jne
push
call
pop
cmp
jne
add
cmp
je
push
pop
push
mov
call
pop
cmp
jne
inc
inc
mov
cmp
jb
jmp
mov
mov
inc
mov
mov
mov
jmp
xor
mov
add
test
je
mov
mov
test
jne
mov
cmp
jbe
jmp
mov
mov
and
sub
lea
cmp
jae
mov
inc
mov
inc
cmp
jne
inc
mov
inc
inc
mov
inc
inc
cmp
jb
mov
lea
sub
push
lea
push
push
lea
push
mov
push
call
test
je
mov
add
cmp
jl
mov
sub
cmp
jb
jmp
mov
cmp
jne
cmp
jbe
jmp
mov
mov
and
sub
lea
cmp
jae
mov
add
movzx
inc
inc
cmp
jne
add
push
pop
mov
inc
inc
add
add
mov
inc
inc
cmp
jb
mov
lea
sub
push
lea
push
push
lea
push
mov
push
call
test
je
mov
add
cmp
jl
mov
sub
cmp
jb
jmp
cmp
jbe
mov
and
sub
push
lea
pop
cmp
jae
mov
movzx
add
add
cmp
jne
push
pop
mov
add
add
add
mov
add
cmp
jb
xor
push
push
push
lea
push
lea
sub
cdq
sub
sar
push
mov
push
push
push
call
mov
cmp
je
push
lea
push
mov
sub
push
lea
push
mov
mov
push
call
test
je
add
cmp
jg
jmp
call
mov
cmp
jg
mov
sub
mov
cmp
jb
jmp
push
lea
push
push
push
push
call
test
je
mov
and
mov
jmp
call
mov
cmp
jne
cmp
je
push
pop
cmp
jne
call
mov
call
mov
jmp
push
call
pop
jmp
mov
mov
test
je
mov
cmp
jne
xor
jmp
call
mov
call
and
or
jmp
mov
sub
pop
pop
mov
xor
pop
call
leave
ret
push
push
call
mov
cmp
jne
call
and
call
mov
or
jmp
xor
cmp
jl
cmp
jb
call
mov
call
mov
push
push
push
push
push
call
add
jmp
mov
sar
lea
mov
and
shl
mov
movsx
and
je
push
call
pop
mov
mov
test
je
push
push
push
call
add
mov
jmp
call
mov
call
mov
or
mov
call
mov
call
ret
push
call
pop
ret
mov
push
mov
mov
push
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
or
jmp
mov
pop
pop
ret
mov
push
mov
push
mov
push
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
jmp
mov
test
je
test
jne
test
je
or
mov
jmp
or
mov
test
jne
push
call
pop
jmp
mov
mov
push
push
push
call
pop
push
call
add
mov
cmp
je
cmp
je
test
jne
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
push
lea
call
and
pop
shl
add
pop
jmp
mov
mov
and
cmp
jne
or
cmp
jne
mov
test
je
test
jne
mov
mov
dec
movzx
inc
mov
jmp
neg
sbb
and
add
or
mov
or
pop
pop
pop
ret
mov
push
mov
sub
mov
push
mov
push
pop
mov
mov
cmp
jne
call
and
call
mov
or
jmp
push
xor
cmp
jl
cmp
jb
call
mov
call
push
push
push
push
push
mov
call
add
or
jmp
mov
sar
push
lea
mov
and
shl
add
mov
test
jne
call
mov
call
mov
jmp
cmp
ja
mov
cmp
je
test
jne
cmp
je
mov
add
sar
mov
movsx
dec
push
pop
je
dec
jne
mov
not
test
je
and
mov
mov
mov
jmp
mov
not
test
jne
call
mov
call
mov
push
push
push
push
push
call
add
jmp
mov
shr
mov
cmp
jb
mov
push
call
pop
mov
cmp
jne
call
mov
call
mov
or
jmp
push
push
push
push
call
mov
mov
mov
add
mov
mov
add
test
je
mov
cmp
je
cmp
je
mov
mov
inc
dec
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
mov
mov
inc
dec
cmp
mov
mov
jne
mov
mov
cmp
je
cmp
je
mov
mov
inc
dec
mov
mov
push
lea
push
push
push
mov
push
call
test
je
mov
cmp
jl
cmp
ja
mov
add
lea
test
je
cmp
je
cmp
je
mov
cmp
jne
or
jmp
and
mov
mov
add
mov
mov
cmp
jae
mov
mov
cmp
je
cmp
je
mov
inc
inc
mov
jmp
mov
dec
cmp
jae
lea
cmp
jne
inc
inc
mov
mov
jmp
mov
jmp
inc
push
lea
push
push
lea
push
mov
push
call
test
jne
call
test
jne
cmp
je
mov
test
je
cmp
je
mov
mov
mov
mov
jmp
cmp
jne
cmp
je
push
push
push
push
call
add
cmp
je
mov
inc
mov
cmp
jb
jmp
mov
lea
test
jne
or
jmp
mov
mov
inc
mov
sub
cmp
mov
jne
test
je
dec
mov
test
js
inc
jmp
xor
inc
movzx
jmp
cmp
jg
cmp
jb
dec
movzx
inc
cmp
je
mov
movzx
movsx
test
jne
call
mov
jmp
inc
cmp
jne
add
jmp
mov
add
test
je
inc
cmp
mov
jl
mov
mov
mov
inc
cmp
jne
mov
mov
mov
inc
sub
jmp
neg
cdq
push
push
push
push
call
add
mov
sub
shr
push
push
push
push
push
push
call
mov
test
jne
call
push
call
pop
or
mov
cmp
je
push
call
pop
mov
cmp
jne
mov
jmp
mov
mov
xor
cmp
setne
add
mov
mov
jmp
cmp
je
mov
cmp
jne
or
jmp
and
mov
mov
add
mov
mov
cmp
jae
mov
movzx
cmp
je
cmp
je
mov
inc
inc
inc
inc
mov
jmp
mov
add
cmp
jae
lea
cmp
jne
add
mov
push
jmp
mov
jmp
add
push
lea
push
push
lea
push
mov
push
call
test
jne
call
test
jne
cmp
je
mov
test
je
cmp
je
push
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
jne
cmp
je
push
push
push
push
call
add
cmp
je
push
pop
mov
inc
inc
mov
cmp
jb
jmp
mov
lea
test
jne
or
jmp
mov
mov
inc
inc
sub
mov
jmp
call
push
pop
cmp
jne
call
mov
call
mov
jmp
cmp
jne
mov
jmp
xor
pop
pop
pop
leave
ret
push
push
call
mov
cmp
jne
call
and
call
mov
or
jmp
xor
cmp
jl
cmp
jb
call
mov
call
mov
push
push
push
push
push
call
add
jmp
mov
sar
lea
mov
and
shl
mov
movsx
and
je
mov
cmp
sbb
inc
jne
call
mov
call
mov
jmp
push
call
pop
mov
mov
test
je
push
push
push
call
add
mov
jmp
call
mov
call
mov
or
mov
call
mov
call
ret
push
call
pop
ret
mov
push
mov
push
mov
push
xor
cmp
jne
xor
jmp
cmp
jne
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
cmp
je
cmp
jb
push
push
push
call
add
jmp
push
push
push
call
add
cmp
je
cmp
jae
call
push
pop
mov
mov
jmp
push
pop
pop
pop
pop
ret
mov
push
mov
push
push
mov
call
test
je
mov
cmp
je
push
push
call
call
test
je
mov
jmp
mov
push
call
test
jne
push
call
pop
test
je
push
push
call
test
je
push
call
mov
mov
pop
pop
ret
push
call
pop
ret
mov
push
mov
push
push
mov
call
test
je
mov
cmp
je
push
push
call
call
test
je
mov
jmp
mov
push
call
test
jne
push
call
pop
test
je
push
push
call
test
je
push
call
mov
mov
pop
pop
ret
call
ret
mov
push
push
call
mov
test
jne
push
call
pop
mov
push
push
call
mov
pop
ret
mov
cmp
je
push
push
call
pop
call
or
mov
cmp
je
push
call
or
jmp
push
push
call
mov
push
call
test
jne
push
call
pop
mov
mov
mov
xor
inc
mov
test
je
push
push
mov
call
mov
push
push
call
mov
mov
mov
mov
mov
push
call
pop
and
push
call
mov
call
push
call
pop
mov
mov
mov
test
jne
mov
mov
push
call
pop
mov
call
call
ret
xor
inc
mov
push
call
pop
ret
push
call
pop
ret
mov
push
push
call
push
mov
call
call
mov
test
jne
push
push
call
mov
pop
pop
test
je
push
push
push
call
pop
call
test
je
push
push
call
pop
pop
call
or
mov
jmp
push
call
pop
xor
push
call
pop
mov
pop
ret
mov
push
call
mov
test
jne
push
call
pop
mov
pop
ret
push
push
call
mov
test
je
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
cmp
je
push
call
pop
push
call
pop
and
mov
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
call
push
call
pop
mov
mov
test
je
push
call
pop
cmp
je
cmp
je
cmp
jne
push
call
pop
mov
call
push
call
pop
call
ret
mov
push
call
pop
ret
mov
push
call
pop
ret
mov
push
push
mov
push
call
test
jne
push
call
pop
mov
test
je
mov
push
push
call
push
push
mov
call
push
push
mov
call
push
push
mov
call
cmp
mov
mov
je
cmp
je
cmp
je
test
jne
mov
mov
mov
mov
mov
mov
call
mov
cmp
je
push
push
call
test
je
call
push
call
push
mov
call
push
mov
call
push
mov
call
add
mov
call
test
je
push
push
call
pop
call
mov
cmp
je
push
push
call
mov
pop
pop
test
je
push
push
push
call
pop
call
test
je
push
push
call
pop
pop
call
or
mov
xor
inc
jmp
call
xor
pop
pop
ret
mov
push
mov
push
mov
push
push
call
pop
cmp
je
mov
cmp
jne
test
jne
cmp
jne
test
je
push
call
push
mov
call
pop
pop
cmp
je
push
call
pop
push
call
test
jne
call
mov
jmp
xor
push
call
mov
sar
mov
and
shl
pop
mov
test
je
push
call
pop
or
jmp
xor
pop
pop
pop
ret
push
push
call
mov
cmp
jne
call
and
call
mov
or
jmp
xor
cmp
jl
cmp
jb
call
mov
call
mov
push
push
push
push
push
call
add
jmp
mov
sar
lea
mov
and
shl
mov
movsx
and
je
push
call
pop
mov
mov
test
je
push
call
pop
mov
jmp
call
mov
or
mov
call
mov
call
ret
push
call
pop
ret
mov
push
mov
push
mov
mov
test
je
test
je
push
call
and
xor
pop
mov
mov
mov
pop
pop
ret
test
je
cmp
je
dec
js
mov
mov
inc
movzx
jmp
movsx
push
push
call
pop
pop
cmp
jne
or
ret
inc
ret
mov
push
mov
push
mov
jmp
mov
mov
dec
call
cmp
je
cmp
jg
pop
pop
ret
mov
push
mov
test
push
push
mov
mov
je
cmp
jne
mov
add
jmp
mov
dec
mov
call
inc
cmp
jne
call
cmp
jne
mov
mov
call
cmp
jg
pop
pop
pop
ret
mov
push
mov
sub
mov
xor
mov
push
mov
push
mov
xor
push
mov
push
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
test
jne
call
mov
xor
push
push
push
push
push
call
add
cmp
je
mov
and
or
jmp
test
jne
push
call
pop
mov
cmp
je
cmp
je
mov
and
mov
sar
shl
add
jmp
mov
test
jne
cmp
je
cmp
je
mov
and
sar
shl
add
jmp
mov
test
jne
xor
cmp
je
mov
mov
mov
mov
mov
test
je
inc
cmp
mov
jl
mov
sub
cmp
ja
movsx
movsx
and
xor
jmp
xor
xor
movsx
push
sar
pop
mov
cmp
ja
jmp
or
mov
mov
mov
mov
mov
mov
jmp
movsx
sub
je
sub
je
sub
je
dec
dec
je
sub
jne
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
cmp
jne
add
mov
mov
cmp
mov
jge
or
neg
jmp
mov
imul
movsx
lea
mov
jmp
mov
jmp
cmp
jne
add
mov
mov
cmp
mov
jge
or
jmp
mov
imul
movsx
lea
mov
jmp
cmp
je
cmp
je
cmp
je
cmp
jne
or
jmp
cmp
jne
inc
or
mov
jmp
or
jmp
or
jmp
mov
cmp
jne
cmp
jne
inc
inc
or
mov
jmp
cmp
jne
cmp
jne
inc
inc
and
mov
jmp
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
mov
lea
push
movzx
push
mov
call
pop
test
mov
pop
je
mov
lea
call
mov
inc
mov
test
je
mov
lea
call
jmp
movsx
cmp
jg
je
cmp
jg
je
sub
je
dec
dec
je
dec
dec
je
dec
dec
jne
add
mov
mov
or
cmp
lea
mov
mov
mov
jge
mov
jmp
test
jne
or
jmp
test
jne
or
mov
cmp
jne
mov
add
test
mov
mov
mov
je
cmp
jne
mov
mov
mov
mov
jmp
sub
je
dec
dec
je
sub
je
dec
dec
jne
add
test
mov
je
movzx
push
push
lea
push
lea
push
call
add
test
je
mov
jmp
mov
mov
mov
lea
mov
jmp
mov
add
mov
cmp
je
mov
cmp
je
test
movsx
mov
je
cdq
sub
sar
mov
jmp
mov
jmp
mov
mov
push
call
pop
jmp
cmp
jg
je
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
jne
test
mov
je
or
jmp
mov
add
mov
call
test
je
test
je
mov
mov
jmp
mov
mov
mov
jmp
or
mov
mov
test
je
mov
mov
add
jmp
jne
cmp
jne
mov
jmp
cmp
jle
mov
cmp
jle
mov
add
push
call
mov
pop
mov
test
je
mov
mov
mov
jmp
mov
xor
mov
add
mov
mov
mov
lea
push
push
movsx
push
mov
push
push
lea
push
push
push
call
pop
call
mov
add
and
je
cmp
jne
lea
push
push
push
call
pop
call
pop
pop
cmp
jne
cmp
jne
lea
push
push
push
call
pop
call
pop
pop
cmp
jne
or
inc
mov
push
jmp
mov
mov
jmp
sub
je
dec
dec
je
sub
jne
mov
test
mov
je
mov
add
mov
mov
mov
jmp
test
jne
add
test
je
mov
test
je
movsx
jmp
movzx
cdq
jmp
mov
test
je
cdq
jmp
xor
mov
test
je
cmp
jg
jl
cmp
jae
neg
adc
neg
or
test
mov
mov
jne
xor
cmp
jge
mov
jmp
and
mov
cmp
jle
mov
mov
or
jne
and
lea
mov
dec
test
jg
mov
or
je
mov
cdq
push
push
push
push
call
add
cmp
mov
mov
mov
jle
add
mov
dec
jmp
lea
sub
inc
test
mov
mov
je
test
je
mov
cmp
je
dec
mov
mov
inc
jmp
dec
cmp
je
inc
inc
cmp
jne
sub
sar
jmp
cmp
jne
mov
mov
mov
jmp
dec
cmp
je
inc
cmp
jne
sub
mov
cmp
jne
mov
test
je
test
je
mov
jmp
test
je
mov
jmp
test
je
mov
mov
mov
sub
sub
test
jne
push
lea
push
push
call
add
push
mov
lea
lea
call
test
pop
je
test
jne
push
push
push
lea
call
add
cmp
mov
je
test
jle
mov
mov
movzx
dec
push
push
lea
push
lea
inc
push
inc
call
add
test
jne
cmp
je
push
lea
lea
call
cmp
pop
jne
jmp
or
jmp
mov
push
lea
call
pop
cmp
jl
test
je
push
push
push
lea
call
add
cmp
je
push
call
and
pop
mov
mov
mov
test
je
mov
mov
mov
jmp
cmp
je
mov
and
mov
mov
pop
pop
xor
pop
call
leave
ret
nop
mov
ds
add
ds
add
inc
add
aas
inc
add
aas
inc
add
inc
inc
add
push
call
mov
cmp
jne
call
mov
or
jmp
xor
cmp
jl
cmp
jb
call
mov
push
push
push
push
push
call
add
jmp
mov
sar
lea
mov
and
shl
mov
movsx
and
je
push
call
pop
mov
mov
test
je
push
call
pop
push
call
test
jne
call
mov
jmp
mov
cmp
je
call
mov
mov
call
mov
or
mov
call
mov
call
ret
push
call
pop
ret
mov
push
mov
push
mov
push
call
pop
cmp
jne
call
mov
or
jmp
push
push
push
push
push
call
mov
cmp
jne
call
jmp
xor
test
je
push
call
pop
or
jmp
mov
sar
mov
and
shl
lea
and
mov
pop
pop
pop
ret
push
push
call
mov
cmp
jne
call
and
call
mov
or
jmp
xor
cmp
jl
cmp
jb
call
mov
call
mov
push
push
push
push
push
call
add
jmp
mov
sar
lea
mov
and
shl
mov
movsx
and
je
push
call
pop
mov
mov
test
je
push
push
push
call
add
mov
jmp
call
mov
call
mov
or
mov
call
mov
call
ret
push
call
pop
ret
push
push
call
xor
mov
lea
push
call
mov
push
push
pop
push
call
pop
pop
cmp
je
mov
mov
lea
jmp
mov
or
mov
mov
mov
mov
mov
mov
mov
add
mov
add
cmp
jb
cmp
je
mov
cmp
je
mov
lea
lea
mov
mov
cmp
jl
mov
mov
jmp
push
push
call
pop
pop
test
je
mov
lea
mov
add
lea
jmp
mov
or
mov
and
and
mov
mov
and
mov
add
mov
add
cmp
jb
inc
cmp
jl
jmp
mov
and
test
jle
mov
mov
cmp
je
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
shl
add
mov
mov
mov
mov
mov
push
lea
push
call
pop
pop
test
je
inc
inc
inc
add
cmp
jl
xor
mov
shl
add
mov
cmp
je
cmp
je
or
jmp
mov
test
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
test
je
push
call
test
je
mov
and
cmp
jne
or
jmp
cmp
jne
or
push
lea
push
call
pop
pop
test
je
inc
jmp
or
mov
inc
cmp
jl
push
call
xor
jmp
xor
inc
ret
mov
mov
or
call
ret
mov
ret
mov
ret
mov
push
mov
push
push
xor
push
call
mov
pop
test
jne
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
xor
push
push
push
call
mov
add
test
jne
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
xor
push
push
call
mov
pop
pop
test
jne
cmp
je
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
xor
push
push
push
call
mov
add
test
jne
cmp
je
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
mov
xor
push
cmp
jne
cmp
jne
cmp
jne
xor
pop
pop
pop
pop
ret
cmp
je
mov
cmp
ja
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
cmp
mov
jne
mov
mov
inc
inc
cmp
je
dec
jne
jmp
mov
mov
inc
inc
cmp
je
dec
je
dec
jne
cmp
jne
mov
cmp
jne
cmp
jne
mov
push
mov
pop
jmp
mov
call
push
pop
mov
mov
jmp
push
push
call
xor
xor
mov
push
call
pop
mov
xor
mov
cmp
jge
mov
lea
cmp
je
mov
mov
test
jne
test
jne
lea
cmp
ja
lea
push
call
pop
test
je
mov
push
push
call
pop
pop
mov
mov
test
je
push
push
call
pop
pop
inc
jmp
mov
mov
jmp
shl
push
call
pop
mov
mov
mov
add
cmp
je
push
mov
add
push
call
pop
pop
test
mov
jne
push
call
pop
mov
mov
jmp
mov
add
push
call
mov
mov
mov
mov
cmp
je
and
mov
mov
mov
mov
or
mov
call
mov
call
ret
mov
push
call
pop
ret
mov
push
mov
sub
mov
push
xor
push
mov
mov
mov
mov
mov
jmp
inc
cmp
je
mov
cmp
je
cmp
je
cmp
je
call
push
push
push
push
push
mov
call
add
xor
jmp
mov
jmp
or
mov
jmp
mov
or
xor
inc
inc
mov
push
cmp
je
lea
mov
cmp
je
movsx
cmp
jg
je
sub
je
sub
je
dec
je
sub
je
sub
je
sub
jne
cmp
jne
or
mov
jmp
or
jmp
test
jne
or
jmp
mov
jmp
test
jne
mov
and
or
mov
mov
and
or
mov
jmp
cmp
jne
or
mov
jmp
sub
je
sub
je
dec
je
sub
je
sub
jne
test
jne
or
jmp
cmp
jne
and
mov
jmp
cmp
jne
or
mov
jmp
test
jne
or
jmp
test
je
xor
jmp
or
inc
mov
cmp
jne
cmp
je
jmp
inc
cmp
je
push
push
push
call
add
test
jne
add
jmp
inc
cmp
je
cmp
jne
inc
cmp
je
push
push
push
call
add
test
jne
add
or
jmp
push
push
push
call
add
test
jne
add
or
jmp
push
push
push
call
add
test
jne
add
or
jmp
inc
cmp
je
cmp
je
call
push
push
push
push
push
mov
call
add
jmp
push
push
lea
push
push
push
call
add
test
je
xor
jmp
mov
inc
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
int3
int3
push
push
push
mov
mov
mov
push
push
push
push
push
push
push
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmp
jne
push
mov
call
mov
mov
call
jmp
pop
add
pop
pop
pop
ret
mov
test
mov
je
mov
mov
xor
call
push
mov
push
push
push
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
push
push
push
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
push
call
add
pop
ret
mov
push
mov
mov
mov
cmp
jne
cmp
jne
mov
cmp
je
cmp
je
cmp
je
cmp
jne
call
xor
pop
ret
push
call
xor
ret
ret
mov
push
mov
push
push
push
call
mov
test
je
mov
mov
push
mov
mov
push
cmp
je
mov
imul
add
add
cmp
jb
imul
add
cmp
jae
cmp
jne
mov
jmp
xor
test
je
mov
mov
test
jne
xor
jmp
cmp
jne
and
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
add
cmp
jge
imul
mov
and
mov
mov
inc
add
add
cmp
jl
mov
mov
mov
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
push
push
call
pop
mov
jmp
and
push
call
mov
pop
mov
or
pop
pop
pop
leave
ret
cmp
jne
call
push
mov
push
xor
test
jne
or
jmp
cmp
je
inc
push
call
pop
lea
mov
test
jne
push
inc
push
call
mov
pop
pop
mov
test
je
mov
push
jmp
push
call
mov
inc
cmp
pop
je
push
push
call
pop
pop
mov
test
je
push
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
add
add
cmp
jne
push
call
and
and
mov
xor
pop
pop
pop
pop
ret
push
call
and
or
jmp
mov
push
mov
push
mov
push
xor
push
mov
mov
mov
mov
cmp
je
mov
add
mov
mov
cmp
jne
xor
cmp
mov
sete
inc
mov
jmp
inc
test
je
mov
mov
inc
mov
mov
movzx
push
inc
call
pop
test
je
inc
cmp
je
mov
mov
inc
mov
inc
mov
mov
test
je
cmp
jne
cmp
je
cmp
jne
test
je
mov
and
cmp
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmp
je
cmp
je
mov
add
mov
inc
xor
inc
xor
jmp
inc
inc
cmp
je
cmp
jne
test
jne
cmp
je
lea
cmp
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
dec
test
je
mov
inc
inc
test
jne
mov
mov
test
je
cmp
jne
cmp
je
cmp
je
test
je
movsx
push
test
je
call
pop
test
je
mov
mov
inc
mov
inc
inc
mov
mov
inc
mov
jmp
call
pop
test
je
inc
inc
inc
mov
inc
jmp
test
je
mov
inc
mov
inc
mov
jmp
mov
pop
pop
test
je
and
inc
leave
ret
mov
push
mov
sub
push
xor
push
push
cmp
jne
call
push
mov
push
push
mov
call
mov
mov
cmp
je
mov
cmp
jne
mov
mov
lea
push
push
push
lea
call
mov
add
cmp
jae
mov
cmp
jae
mov
shl
lea
cmp
jb
push
call
mov
pop
cmp
je
mov
lea
push
add
push
push
lea
call
mov
add
dec
mov
mov
xor
jmp
or
pop
pop
pop
leave
ret
mov
push
mov
mov
sub
push
push
mov
push
xor
xor
cmp
jne
call
mov
cmp
je
mov
jmp
call
cmp
jne
push
pop
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
jne
xor
jmp
mov
cmp
je
inc
inc
cmp
jne
inc
inc
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
pop
mov
cmp
je
push
push
push
push
push
push
push
push
call
test
jne
push
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
jne
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
push
mov
call
mov
pop
cmp
jne
push
call
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
leave
ret
mov
push
mov
mov
push
mov
cmp
jae
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
mov
push
mov
cmp
jae
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
sub
mov
and
and
push
push
mov
mov
cmp
je
test
je
not
mov
jmp
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
cmp
jne
mov
jmp
test
jne
mov
shl
or
mov
not
mov
pop
pop
pop
leave
ret
mov
push
mov
mov
mov
pop
ret
push
push
call
and
push
push
call
mov
jmp
mov
mov
mov
mov
xor
cmp
sete
mov
ret
mov
cmp
jne
push
call
and
mov
mov
call
ret
cmp
jne
repz
jmp
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
cmp
je
xor
pop
ret
mov
add
cmp
jne
xor
mov
cmp
sete
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
add
movzx
push
push
movzx
xor
push
lea
test
jbe
mov
mov
cmp
jb
mov
add
cmp
jb
inc
add
cmp
jb
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
mov
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
mov
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
mov
xor
cmp
sete
mov
ret
mov
mov
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
push
push
xor
lea
push
call
add
pop
mov
cmp
jb
pop
pop
ret
push
push
call
call
mov
test
je
and
call
jmp
xor
inc
ret
mov
mov
call
call
ret
push
call
pop
mov
ret
mov
push
mov
mov
mov
mov
mov
mov
pop
ret
mov
push
mov
mov
mov
push
cmp
je
mov
imul
add
add
cmp
jb
imul
add
pop
cmp
jae
cmp
je
xor
pop
ret
push
call
pop
ret
push
push
call
xor
mov
mov
mov
cmp
jg
je
mov
push
pop
sub
je
sub
je
sub
je
sub
jne
call
mov
mov
test
jne
or
jmp
mov
mov
jmp
push
mov
call
mov
add
mov
jmp
mov
sub
je
sub
je
dec
je
call
mov
xor
push
push
push
push
push
call
add
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
push
call
mov
pop
xor
cmp
je
cmp
jne
push
call
cmp
je
push
call
pop
xor
mov
cmp
je
cmp
je
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
mov
add
cmp
jge
mov
imul
mov
mov
inc
jmp
call
mov
mov
call
cmp
jne
push
push
call
pop
jmp
mov
mov
cmp
je
push
call
pop
ret
push
call
pop
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
xor
call
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
sub
push
push
push
call
and
cmp
mov
jne
push
call
mov
test
je
mov
push
push
call
test
je
push
call
mov
push
mov
call
push
call
mov
push
mov
call
push
call
mov
push
mov
call
push
call
pop
mov
test
je
push
push
call
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
push
mov
call
pop
pop
mov
test
je
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
test
jne
or
jmp
mov
cmp
je
push
call
pop
test
je
call
mov
test
je
mov
cmp
je
push
call
pop
test
je
push
call
mov
push
call
pop
test
je
push
push
push
push
call
jmp
xor
pop
pop
pop
leave
ret
mov
push
mov
mov
push
xor
push
push
cmp
je
mov
cmp
ja
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
mov
cmp
jne
mov
jmp
mov
cmp
je
inc
dec
jne
cmp
je
mov
mov
inc
inc
cmp
je
dec
jne
cmp
jne
mov
call
push
pop
mov
mov
jmp
xor
pop
pop
pop
pop
ret
mov
push
mov
mov
push
xor
cmp
jl
cmp
jle
cmp
jne
mov
jmp
mov
mov
jmp
call
push
push
push
push
push
mov
call
add
or
pop
pop
ret
and
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
push
push
mov
push
xor
lea
push
push
call
xor
movzx
mov
mov
mov
mov
shl
or
lea
stos
stos
stos
mov
add
lea
sub
mov
mov
mov
inc
dec
jne
lea
mov
mov
mov
inc
dec
jne
pop
pop
ret
mov
push
mov
sub
mov
xor
mov
push
push
lea
push
push
call
mov
test
je
xor
mov
inc
cmp
jb
mov
mov
test
je
lea
movzx
movzx
cmp
ja
sub
inc
push
lea
push
push
call
add
inc
mov
inc
test
jne
push
push
lea
push
push
push
lea
push
push
push
call
xor
push
push
lea
push
push
push
lea
push
push
push
push
call
add
push
push
lea
push
push
push
lea
push
push
push
push
call
add
xor
movzx
test
je
or
mov
jmp
test
je
or
mov
mov
jmp
mov
inc
cmp
jb
jmp
lea
mov
xor
sub
mov
lea
add
lea
cmp
ja
or
mov
add
jmp
cmp
ja
or
mov
sub
mov
jmp
mov
inc
cmp
jb
mov
pop
xor
pop
call
leave
ret
push
push
call
call
mov
mov
test
je
cmp
je
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
and
mov
mov
cmp
je
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
mov
mov
mov
push
call
mov
call
jmp
mov
push
call
pop
ret
mov
push
mov
sub
push
xor
push
lea
call
mov
cmp
jne
mov
call
cmp
je
mov
and
jmp
cmp
jne
mov
call
jmp
cmp
jne
mov
mov
mov
jmp
cmp
je
mov
and
mov
pop
leave
ret
mov
push
mov
sub
mov
xor
mov
push
mov
push
mov
push
call
mov
xor
mov
cmp
jne
mov
call
xor
jmp
mov
xor
cmp
je
inc
add
cmp
jb
cmp
je
cmp
je
movzx
push
call
test
je
lea
push
push
call
test
je
push
lea
push
push
call
xor
inc
add
mov
mov
cmp
jbe
cmp
je
lea
mov
test
je
movzx
movzx
jmp
push
lea
push
push
call
mov
add
imul
mov
lea
mov
jmp
mov
test
je
movzx
movzx
jmp
mov
mov
or
movzx
inc
cmp
jbe
mov
inc
inc
cmp
jne
mov
inc
add
cmp
mov
jb
mov
mov
mov
call
push
mov
lea
lea
pop
mov
inc
mov
inc
inc
inc
dec
jne
mov
call
jmp
or
inc
cmp
jbe
inc
inc
cmp
jne
lea
mov
or
inc
dec
jne
mov
call
mov
mov
jmp
mov
xor
movzx
mov
shl
or
lea
stos
stos
stos
jmp
cmp
jne
or
mov
pop
pop
xor
pop
call
leave
ret
push
push
call
or
call
mov
mov
call
mov
mov
call
mov
cmp
je
push
call
pop
mov
test
je
mov
mov
mov
rep
and
push
push
call
pop
pop
mov
test
jne
mov
push
call
test
jne
mov
cmp
je
push
call
pop
mov
push
mov
call
test
jne
test
jne
push
call
pop
and
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
push
call
test
jne
mov
cmp
je
push
call
pop
mov
push
call
mov
call
jmp
push
call
pop
ret
jmp
cmp
jne
cmp
je
push
call
pop
call
mov
jmp
and
mov
call
ret
cmp
jne
push
call
pop
mov
xor
ret
mov
push
mov
push
push
mov
mov
xor
push
cmp
je
cmp
je
mov
cmp
je
cmp
jne
mov
cmp
je
cmp
jne
push
call
push
call
pop
pop
mov
cmp
je
cmp
jne
push
call
push
call
pop
pop
push
call
push
call
pop
pop
mov
cmp
je
cmp
jne
mov
sub
push
call
mov
mov
sub
push
call
mov
sub
push
call
push
call
add
lea
mov
cmp
je
cmp
jne
push
call
push
call
pop
pop
lea
mov
cmp
je
mov
cmp
je
cmp
jne
push
call
pop
cmp
je
mov
cmp
je
cmp
jne
push
call
pop
add
dec
jne
push
call
pop
pop
pop
pop
pop
ret
mov
push
mov
push
push
mov
push
mov
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
lea
mov
cmp
je
mov
test
je
push
call
cmp
je
mov
test
je
push
call
add
dec
jne
mov
add
push
call
pop
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
push
push
mov
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
lea
mov
cmp
je
mov
test
je
push
call
cmp
je
mov
test
je
push
call
add
dec
jne
mov
add
push
call
pop
pop
mov
pop
pop
ret
test
je
test
je
push
mov
cmp
je
push
mov
call
pop
test
je
push
call
cmp
pop
jne
cmp
je
push
call
pop
mov
pop
ret
xor
ret
push
push
call
call
mov
mov
test
je
cmp
je
call
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
and
lea
mov
call
mov
mov
call
jmp
push
call
pop
mov
ret
mov
push
mov
mov
test
je
sub
cmp
jne
push
call
pop
pop
ret
mov
push
mov
mov
jmp
dec
cmp
je
inc
test
jne
dec
mov
sub
dec
pop
ret
mov
push
mov
sub
mov
xor
mov
mov
push
push
push
xor
mov
mov
mov
mov
cmp
jne
push
mov
push
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
mov
cmp
jle
push
mov
call
pop
mov
mov
cmp
jle
mov
push
call
mov
pop
mov
jmp
cmp
jge
xor
jmp
cmp
jl
mov
cmp
je
cmp
je
xor
inc
cmp
jne
mov
cmp
jne
mov
mov
mov
cmp
je
cmp
jne
cmp
jne
push
pop
jmp
cmp
jg
cmp
jle
push
jmp
lea
push
push
call
test
je
cmp
jle
cmp
jb
cmp
lea
je
mov
test
je
mov
cmp
jb
cmp
jbe
inc
inc
cmp
jne
jmp
cmp
jle
cmp
jae
xor
inc
jmp
cmp
lea
je
mov
test
je
mov
mov
cmp
jb
cmp
jbe
inc
inc
cmp
jne
jmp
mov
push
push
push
push
push
push
call
mov
mov
cmp
je
mov
test
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
test
je
mov
jmp
push
call
pop
test
je
mov
add
mov
jmp
and
cmp
je
push
push
push
push
push
push
call
test
je
push
push
push
push
push
push
call
mov
test
je
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
test
je
mov
add
jmp
push
call
pop
test
je
mov
add
mov
jmp
xor
test
je
push
push
push
push
push
push
call
test
je
push
push
push
push
push
push
call
mov
push
call
pop
push
call
mov
pop
jmp
xor
xor
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
push
call
mov
pop
cmp
je
cmp
je
push
push
lea
push
push
push
push
call
mov
add
test
je
push
push
lea
push
push
push
push
call
mov
add
test
jne
push
call
pop
jmp
mov
mov
push
push
push
push
push
push
call
mov
test
je
push
call
push
call
pop
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
mov
push
mov
sub
push
lea
call
push
mov
push
lea
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
mov
push
mov
sub
push
push
lea
call
mov
xor
cmp
jne
cmp
je
mov
and
xor
jmp
cmp
jne
call
push
push
push
push
push
mov
call
add
cmp
je
mov
and
mov
jmp
cmp
je
push
mov
cmp
jbe
call
push
push
push
push
push
mov
call
add
jmp
mov
mov
cmp
jne
lea
push
push
push
push
call
add
jmp
push
lea
push
push
push
push
push
push
push
call
add
cmp
jne
call
mov
cmp
je
mov
and
mov
jmp
add
cmp
je
mov
and
pop
pop
leave
ret
mov
push
mov
push
mov
jmp
push
push
push
call
add
test
jne
mov
mov
cmp
je
test
je
add
mov
test
jne
mov
sub
sar
neg
pop
pop
ret
mov
sub
sar
jmp
mov
push
mov
push
push
mov
xor
mov
test
je
cmp
je
add
inc
cmp
jne
push
inc
push
push
call
mov
pop
pop
mov
test
jne
push
call
jmp
push
call
mov
add
add
pop
mov
test
jne
and
mov
pop
pop
leave
ret
mov
push
mov
sub
mov
push
xor
mov
cmp
jne
call
push
push
push
push
push
mov
call
add
or
jmp
push
mov
push
mov
cmp
je
push
push
call
mov
pop
pop
mov
cmp
je
cmp
je
xor
cmp
sete
mov
mov
cmp
jne
call
mov
cmp
jne
cmp
je
cmp
je
call
test
je
call
mov
or
pop
pop
pop
leave
ret
cmp
jne
push
call
pop
mov
cmp
je
mov
cmp
jne
push
call
pop
mov
cmp
je
mov
mov
mov
cmp
je
sub
push
call
mov
cmp
pop
jl
cmp
je
lea
push
call
pop
cmp
jne
mov
mov
mov
mov
jmp
mov
mov
mov
inc
lea
cmp
jne
cmp
jae
push
push
push
call
add
cmp
je
jmp
cmp
jne
cmp
jge
neg
lea
cmp
jl
cmp
jae
push
push
push
call
add
cmp
je
mov
lea
mov
mov
mov
mov
mov
cmp
je
mov
push
push
call
inc
pop
inc
push
call
mov
pop
pop
cmp
je
push
push
call
inc
pop
inc
push
push
call
add
test
je
push
push
push
push
push
call
add
mov
mov
sub
add
mov
inc
neg
sbb
not
and
push
push
call
test
jne
or
call
mov
push
call
pop
cmp
je
push
call
mov
pop
mov
mov
jmp
push
call
mov
pop
mov
xor
jmp
push
push
call
xor
mov
push
call
pop
mov
push
pop
mov
cmp
jge
mov
shl
mov
add
cmp
je
mov
test
je
push
call
pop
cmp
je
inc
cmp
jl
mov
mov
add
push
call
mov
push
call
pop
mov
mov
inc
jmp
mov
call
mov
call
ret
push
call
pop
ret
mov
push
mov
push
push
mov
push
mov
mov
mov
push
push
mov
call
or
pop
cmp
jne
call
mov
mov
mov
jmp
push
lea
push
push
push
call
mov
cmp
jne
call
test
je
push
call
pop
jmp
mov
sar
mov
and
shl
lea
and
mov
mov
pop
pop
leave
ret
push
push
call
or
mov
mov
mov
cmp
jne
call
and
call
mov
mov
mov
jmp
xor
cmp
jl
cmp
jb
call
mov
call
mov
push
push
push
push
push
call
add
jmp
mov
sar
lea
mov
and
shl
mov
movsx
and
jne
call
mov
call
mov
push
push
push
push
push
call
add
or
mov
jmp
push
call
pop
mov
mov
test
je
push
push
push
push
call
add
mov
mov
jmp
call
mov
call
mov
or
or
mov
call
mov
mov
call
ret
push
call
pop
ret
mov
push
mov
inc
push
call
pop
mov
mov
test
je
or
mov
jmp
or
lea
mov
mov
mov
and
mov
pop
ret
mov
push
mov
mov
cmp
jne
call
mov
xor
pop
ret
push
xor
cmp
jl
cmp
jb
call
push
push
push
push
push
mov
call
add
xor
jmp
mov
and
sar
mov
shl
movsx
and
pop
pop
ret
mov
push
mov
sub
mov
xor
mov
push
xor
cmp
je
cmp
jne
call
mov
cmp
jne
mov
jmp
push
lea
push
push
lea
push
push
call
test
jne
cmp
jne
call
cmp
jne
mov
push
push
push
lea
push
push
lea
push
push
call
push
call
mov
cmp
je
push
lea
push
push
lea
push
push
call
test
je
mov
mov
xor
pop
call
leave
ret
mov
jmp
mov
push
mov
sub
push
push
mov
xor
cmp
je
cmp
je
cmp
jne
mov
cmp
je
xor
mov
xor
pop
pop
leave
ret
push
lea
call
mov
cmp
jne
mov
cmp
je
movzx
mov
cmp
je
mov
and
xor
inc
jmp
lea
push
movzx
push
call
pop
pop
test
je
mov
mov
cmp
jle
cmp
jl
xor
cmp
setne
push
push
push
push
push
push
call
test
mov
jne
mov
cmp
jb
cmp
je
mov
cmp
je
mov
and
jmp
call
mov
cmp
je
mov
and
or
jmp
xor
cmp
setne
push
push
mov
push
push
push
push
call
test
jne
jmp
mov
push
mov
push
push
push
push
call
add
pop
ret
mov
push
mov
sub
push
lea
call
movzx
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
mov
push
mov
push
push
call
pop
pop
pop
ret
mov
push
mov
mov
push
push
test
jl
cmp
jae
mov
sar
mov
and
lea
mov
shl
cmp
jne
cmp
push
mov
jne
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
mov
mov
xor
pop
jmp
call
mov
call
and
or
pop
pop
pop
ret
mov
push
mov
mov
push
xor
cmp
push
push
jl
cmp
jae
mov
sar
mov
lea
mov
and
shl
add
test
je
cmp
je
cmp
jne
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
mov
or
xor
jmp
call
mov
call
mov
or
pop
pop
pop
pop
ret
mov
push
mov
mov
cmp
jne
call
and
call
mov
or
pop
ret
push
xor
cmp
jl
cmp
jae
mov
and
sar
mov
shl
add
test
jne
call
mov
call
push
push
push
push
push
mov
call
add
or
jmp
mov
pop
pop
ret
push
push
call
mov
mov
sar
mov
and
shl
add
mov
xor
cmp
jne
push
call
pop
mov
cmp
jne
push
lea
push
call
pop
pop
test
jne
mov
inc
mov
call
cmp
je
mov
sar
and
shl
mov
lea
push
call
mov
call
ret
xor
mov
push
call
pop
ret
mov
push
mov
mov
mov
and
sar
mov
shl
lea
push
call
pop
ret
push
push
call
or
xor
mov
push
call
pop
test
jne
or
jmp
push
call
pop
mov
mov
cmp
jge
mov
test
je
mov
mov
add
cmp
jae
test
jne
cmp
jne
push
call
pop
xor
inc
mov
cmp
jne
push
lea
push
call
pop
pop
test
jne
mov
jmp
inc
and
call
cmp
jne
lea
push
call
test
je
push
call
add
jmp
mov
mov
push
call
pop
ret
cmp
jne
mov
or
sub
sar
mov
shl
add
mov
cmp
jne
inc
jmp
push
push
call
pop
pop
mov
test
je
lea
mov
add
mov
add
cmp
jae
mov
or
mov
and
add
mov
jmp
shl
mov
mov
sar
mov
and
shl
mov
mov
push
call
pop
test
jne
or
mov
call
mov
call
ret
push
call
pop
ret
mov
or
xor
cmp
sete
mov
ret
mov
push
mov
sub
push
push
mov
xor
push
mov
cmp
jne
cmp
jbe
mov
cmp
je
mov
xor
jmp
mov
cmp
je
or
cmp
jbe
call
push
pop
push
push
push
push
push
mov
call
add
mov
jmp
push
lea
call
mov
cmp
jne
mov
mov
cmp
jbe
cmp
je
cmp
jbe
push
push
push
call
add
call
mov
call
mov
cmp
je
mov
and
pop
pop
pop
leave
ret
cmp
je
cmp
ja
call
push
pop
push
push
push
push
push
mov
call
add
cmp
je
mov
and
jmp
mov
mov
cmp
je
mov
cmp
je
mov
and
jmp
lea
push
push
push
push
push
lea
push
push
mov
push
call
cmp
je
cmp
jne
mov
cmp
je
mov
jmp
call
cmp
jne
cmp
je
cmp
jbe
push
push
push
call
add
jmp
mov
push
mov
push
push
push
push
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mul
mov
mov
mul
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mul
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
mov
push
mov
sub
push
xor
test
push
push
mov
mov
mov
mov
mov
je
mov
mov
jmp
mov
mov
lea
push
call
pop
test
je
push
push
push
push
push
call
add
mov
mov
test
jne
test
jne
cmp
je
or
mov
and
sub
mov
mov
je
dec
je
dec
je
call
mov
or
call
push
pop
push
push
push
push
push
mov
call
add
jmp
mov
jmp
test
je
test
jne
mov
jmp
mov
mov
push
pop
sub
je
sub
je
sub
je
sub
je
sub
jne
cmp
sete
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
and
mov
cmp
mov
jg
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
jmp
mov
jmp
mov
jmp
cmp
je
cmp
je
cmp
jne
mov
mov
mov
test
je
mov
not
and
test
js
mov
test
je
or
or
or
test
je
or
test
je
or
jmp
mov
jmp
test
je
or
call
mov
cmp
jne
call
mov
or
call
mov
jmp
mov
mov
push
push
mov
push
lea
push
push
push
push
call
mov
cmp
jne
mov
mov
and
cmp
jne
test
je
and
push
push
lea
push
push
push
push
push
call
mov
cmp
jne
mov
mov
sar
mov
and
shl
lea
and
call
push
call
pop
call
mov
jmp
push
call
cmp
jne
mov
mov
sar
mov
and
shl
lea
and
call
mov
push
call
pop
push
call
cmp
jne
call
mov
jmp
cmp
jne
or
jmp
cmp
jne
or
push
push
call
mov
mov
and
sar
mov
pop
shl
pop
mov
or
mov
mov
mov
and
sar
mov
shl
lea
and
mov
and
mov
jne
test
je
test
je
push
or
push
push
call
add
mov
cmp
jne
call
cmp
je
push
call
jmp
push
lea
push
push
mov
call
add
test
jne
cmp
jne
mov
cdq
push
push
push
call
add
cmp
je
push
push
push
call
add
cmp
je
test
je
mov
mov
test
jne
mov
and
jne
or
jmp
or
mov
and
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
jmp
mov
mov
and
cmp
jne
mov
jmp
mov
test
je
test
mov
jne
mov
mov
and
cmp
je
cmp
je
cmp
jne
mov
cmp
jbe
cmp
jbe
cmp
jbe
cmp
jne
movsx
xor
dec
je
dec
jne
mov
mov
jmp
push
push
push
push
call
add
or
je
push
push
push
push
call
and
add
cmp
je
push
lea
push
push
call
add
cmp
je
cmp
je
cmp
jne
cmp
jne
mov
jmp
mov
cmp
jbe
cmp
jbe
cmp
ja
push
push
push
push
call
add
or
je
push
push
push
push
call
add
and
cmp
jne
jmp
mov
and
cmp
jne
push
call
pop
call
push
pop
mov
mov
jmp
cmp
jne
push
push
push
call
add
cmp
je
mov
jmp
push
push
push
call
add
jmp
mov
mov
mov
sub
push
lea
push
push
call
add
cmp
je
add
cmp
jg
mov
mov
sar
mov
and
shl
lea
mov
xor
and
xor
mov
mov
sar
mov
and
shl
lea
mov
mov
shr
shl
and
or
mov
cmp
jne
test
je
mov
mov
and
sar
mov
shl
lea
or
mov
mov
mov
and
cmp
jne
test
je
push
call
push
push
lea
push
push
push
and
push
push
call
cmp
jne
call
push
call
mov
mov
and
sar
mov
shl
lea
and
push
call
pop
jmp
mov
mov
sar
mov
and
shl
mov
mov
pop
pop
pop
leave
ret
push
push
call
xor
mov
xor
mov
cmp
setne
cmp
jne
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
or
xor
cmp
setne
cmp
je
cmp
je
mov
and
neg
sbb
inc
je
mov
push
push
push
push
lea
push
mov
call
add
mov
mov
call
mov
cmp
je
or
call
ret
xor
mov
cmp
je
cmp
je
mov
mov
sar
and
shl
mov
lea
and
push
call
pop
ret
mov
push
mov
push
push
push
push
push
push
call
add
pop
ret
mov
push
mov
sub
push
push
lea
call
xor
cmp
jne
cmp
je
mov
and
xor
jmp
mov
cmp
jne
push
push
push
call
add
cmp
je
mov
and
jmp
cmp
jne
call
push
push
push
push
push
mov
call
add
cmp
je
mov
and
mov
jmp
push
mov
cmp
jne
call
push
push
push
push
push
mov
call
add
cmp
je
mov
and
mov
jmp
push
mov
movzx
dec
inc
movzx
movzx
test
mov
je
cmp
jne
movzx
test
mov
jne
movzx
mov
jmp
mov
mov
cmp
jne
mov
jmp
shl
movzx
or
inc
movzx
mov
mov
cmp
jb
cmp
ja
add
jmp
cmp
jb
cmp
ja
add
jmp
movzx
lea
test
je
movzx
movzx
jmp
movzx
mov
mov
movzx
movzx
movzx
inc
test
mov
je
cmp
jne
mov
jmp
mov
dec
cmp
je
shl
movzx
or
movzx
inc
mov
cmp
jb
cmp
ja
add
jmp
cmp
jb
cmp
ja
add
jmp
movzx
lea
test
je
movzx
movzx
jmp
movzx
mov
mov
cmp
jne
cmp
je
cmp
jne
cmp
je
mov
and
xor
pop
pop
pop
leave
ret
sbb
and
dec
cmp
je
mov
and
jmp
mov
push
mov
push
push
push
push
call
add
pop
ret
mov
push
mov
sub
push
xor
cmp
jne
xor
jmp
push
push
lea
call
mov
cmp
jne
push
push
push
call
add
cmp
je
mov
and
jmp
cmp
jne
call
push
push
push
push
push
mov
call
add
cmp
je
mov
and
mov
jmp
push
mov
cmp
jne
call
push
push
push
push
push
mov
call
add
cmp
je
mov
and
mov
jmp
mov
movzx
dec
inc
movzx
movzx
test
je
cmp
jne
movzx
xor
test
je
cmp
je
mov
and
xor
pop
pop
pop
leave
ret
mov
mov
cmp
jne
xor
jmp
shl
movzx
or
inc
movzx
movzx
movzx
movzx
inc
test
je
cmp
jne
xor
jmp
mov
dec
cmp
je
movzx
shl
or
inc
movzx
cmp
jne
cmp
je
cmp
jne
jmp
sbb
and
dec
cmp
je
mov
and
jmp
mov
push
mov
push
push
push
push
call
add
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
push
call
pop
pop
pop
pop
mov
pop
ret
mov
test
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
push
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmp
je
cmp
jbe
lea
mov
mov
mov
cmp
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
mov
push
mov
sub
push
lea
call
movzx
mov
mov
test
jne
cmp
je
mov
mov
movzx
and
jmp
xor
test
je
xor
inc
cmp
je
mov
and
leave
ret
mov
push
mov
push
push
push
push
call
add
pop
ret
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mul
add
mov
mul
add
pop
ret
mov
push
mov
push
push
push
call
add
pop
ret
mov
push
mov
sub
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
pop
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
push
call
pop
push
call
push
call
cmp
jne
push
call
pop
push
call
push
call
leave
ret
push
call
pop
ret
mov
push
mov
sub
mov
xor
mov
test
push
je
push
call
pop
call
test
je
push
call
pop
test
je
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
pop
mov
lea
mov
mov
mov
mov
push
mov
lea
push
push
call
lea
add
mov
lea
push
mov
mov
mov
call
lea
push
call
push
call
int3
mov
push
mov
sub
mov
xor
mov
push
push
xor
push
mov
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
mov
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
mov
sub
dec
cmp
jge
inc
mov
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
cmp
push
push
push
setne
push
lea
push
push
call
mov
cmp
je
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
mov
jmp
push
call
pop
cmp
je
mov
add
mov
jmp
mov
cmp
je
push
push
push
push
push
push
call
test
je
mov
push
push
push
push
push
push
call
mov
mov
cmp
je
test
je
cmp
je
cmp
jg
push
push
push
push
push
push
call
jmp
cmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
mov
add
jmp
push
call
pop
cmp
je
mov
add
mov
jmp
xor
cmp
je
push
push
push
push
push
push
call
test
je
push
push
cmp
jne
push
push
jmp
push
push
push
push
push
push
call
mov
push
call
pop
push
call
mov
pop
jmp
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
push
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
push
push
push
call
add
mov
cmp
je
mov
push
push
push
push
push
push
call
mov
cmp
jne
xor
jmp
jle
cmp
ja
add
cmp
ja
call
mov
cmp
je
mov
add
jmp
push
call
pop
cmp
je
mov
add
mov
jmp
xor
cmp
je
push
push
push
call
add
push
push
push
push
push
push
call
mov
cmp
jne
xor
jmp
push
lea
push
push
push
push
push
call
mov
mov
add
neg
sbb
and
push
call
pop
jmp
push
push
push
push
push
push
call
mov
cmp
je
push
call
pop
mov
cmp
je
cmp
je
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
mov
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
mov
push
mov
push
push
mov
xor
mov
mov
push
push
xor
push
mov
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
push
pop
mov
jmp
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
cmp
push
push
push
setne
push
lea
push
push
call
mov
cmp
je
jle
cmp
ja
lea
cmp
ja
call
mov
cmp
je
mov
jmp
push
call
pop
cmp
je
mov
add
mov
test
je
lea
push
push
push
call
add
push
push
push
push
push
push
call
test
je
push
push
push
push
call
mov
push
call
mov
pop
jmp
xor
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
push
push
push
call
mov
add
cmp
je
mov
push
push
push
push
push
call
mov
cmp
je
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
mov
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
mov
push
mov
push
mov
test
je
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
mov
push
mov
push
and
push
mov
test
jne
xor
jmp
push
cmp
jb
lea
test
jbe
mov
mov
mov
add
add
test
je
cmp
jne
mov
test
je
cmp
jne
mov
test
je
cmp
jne
mov
test
je
cmp
jne
add
cmp
jb
jmp
movzx
movzx
jmp
movzx
movzx
jmp
movzx
movzx
jmp
movzx
movzx
jmp
mov
mov
jmp
mov
test
je
cmp
jne
inc
inc
inc
cmp
jb
xor
pop
pop
leave
ret
movzx
movzx
sub
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
mov
push
mov
sub
mov
xor
mov
push
lea
push
push
push
mov
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
mov
push
mov
sub
mov
xor
mov
mov
mov
mov
mov
push
mov
mov
push
mov
mov
push
xor
mov
mov
mov
cmp
je
mov
lea
push
push
call
mov
test
je
cmp
jne
lea
push
push
call
test
je
cmp
jne
mov
mov
cmp
jne
push
call
mov
pop
inc
cmp
jle
cmp
ja
lea
cmp
ja
call
mov
cmp
je
mov
jmp
push
push
push
push
push
push
call
mov
cmp
jne
xor
jmp
push
call
pop
cmp
je
mov
add
mov
jmp
mov
cmp
je
lea
push
push
push
call
add
push
push
push
push
push
push
call
test
je
mov
cmp
je
push
push
push
push
push
push
push
push
call
test
je
mov
jmp
mov
cmp
jne
push
push
push
push
push
push
push
push
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
push
call
cmp
jne
push
call
pop
mov
jmp
cmp
je
mov
mov
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
int3
int3
int3
push
lea
sub
and
add
sbb
or
pop
jmp
push
lea
sub
and
add
sbb
or
pop
jmp
mov
push
mov
sub
push
xor
push
push
cmp
je
push
lea
call
cmp
jne
call
push
push
push
push
push
mov
call
add
cmp
je
mov
and
mov
jmp
mov
cmp
je
mov
cmp
jbe
call
push
push
push
push
push
mov
call
add
cmp
je
mov
and
mov
jmp
mov
cmp
jne
push
push
push
call
add
cmp
je
mov
and
jmp
mov
movzx
lea
push
push
call
inc
mov
movzx
lea
push
push
call
add
inc
dec
je
cmp
je
cmp
je
sub
mov
jmp
xor
pop
pop
pop
leave
ret
mov
push
mov
push
xor
cmp
jne
cmp
jne
call
push
push
push
push
push
mov
call
add
mov
jmp
cmp
je
cmp
ja
pop
pop
jmp
push
push
push
push
call
add
pop
pop
ret
mov
push
mov
push
xor
cmp
jne
xor
jmp
push
push
push
call
mov
inc
push
call
mov
pop
pop
cmp
je
push
push
push
call
add
test
je
push
push
push
push
push
call
add
mov
jmp
xor
pop
pop
pop
pop
ret
mov
push
mov
sub
push
push
lea
call
mov
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
cmp
je
mov
and
xor
jmp
push
mov
cmp
jne
push
push
call
pop
pop
jmp
movzx
test
je
inc
mov
cmp
je
movzx
movzx
shl
or
cmp
jne
dec
jmp
movzx
cmp
je
inc
movzx
movzx
cmp
jne
movzx
cmp
jne
cmp
je
mov
and
jmp
cmp
je
mov
and
xor
pop
pop
leave
ret
mov
push
mov
push
push
push
call
add
pop
ret
xor
push
push
push
push
push
push
push
call
mov
ret
mov
push
mov
cmp
je
cmp
je
push
call
mov
cmp
je
cmp
je
push
call
pop
ret
mov
push
mov
sub
push
push
push
xor
push
push
push
push
mov
mov
call
mov
and
add
mov
cmp
je
push
push
push
push
call
mov
and
add
cmp
je
mov
mov
sub
sbb
js
jg
cmp
jbe
mov
push
push
call
push
call
mov
test
jne
call
mov
call
mov
pop
pop
pop
leave
ret
push
push
call
pop
pop
mov
test
jl
jg
cmp
jb
mov
jmp
mov
push
push
push
call
add
cmp
je
cdq
sub
sbb
js
jg
test
ja
mov
push
push
call
pop
pop
push
push
call
push
call
xor
jmp
call
cmp
jne
call
mov
or
mov
jmp
cmp
jg
jl
cmp
jae
push
push
push
push
call
and
add
cmp
je
push
call
pop
push
call
neg
sbb
neg
dec
cdq
mov
and
mov
cmp
jne
call
mov
call
mov
call
mov
mov
and
cmp
je
push
push
push
push
call
and
add
cmp
je
xor
jmp
mov
push
mov
push
mov
push
mov
mov
sar
lea
mov
and
shl
lea
mov
add
push
movzx
movsx
and
sar
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
or
mov
lea
mov
and
or
mov
jmp
or
mov
lea
mov
and
or
jmp
and
jmp
or
mov
lea
and
test
pop
pop
pop
jne
mov
pop
ret
neg
sbb
and
add
pop
ret
mov
push
mov
mov
push
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
push
pop
jmp
mov
mov
xor
pop
pop
ret
mov
push
mov
sub
push
push
push
lea
call
mov
mov
xor
cmp
je
mov
cmp
jne
call
push
push
push
push
push
mov
call
add
cmp
je
mov
and
xor
jmp
cmp
je
cmp
jl
cmp
jg
mov
push
mov
mov
lea
cmp
jle
lea
push
movzx
push
push
call
mov
add
jmp
mov
movzx
movzx
and
test
je
mov
inc
jmp
cmp
jne
or
jmp
cmp
jne
mov
inc
mov
test
jl
cmp
je
cmp
jg
test
jne
cmp
je
mov
jmp
mov
cmp
je
cmp
je
mov
jmp
mov
jmp
cmp
jne
cmp
jne
mov
cmp
je
cmp
jne
inc
mov
inc
mov
mov
xor
div
movzx
movzx
test
je
movsx
sub
jmp
test
je
mov
sub
cmp
movsx
ja
sub
add
cmp
jae
or
cmp
jb
jne
cmp
jbe
or
cmp
jne
mov
dec
test
jne
cmp
je
mov
and
jmp
mov
imul
add
mov
mov
inc
jmp
mov
test
jne
test
jne
and
je
cmp
ja
test
jne
cmp
jbe
call
test
mov
je
or
jmp
test
push
pop
setne
add
mov
mov
test
je
mov
test
je
neg
cmp
je
mov
and
mov
jmp
mov
test
je
mov
cmp
je
mov
and
xor
pop
pop
pop
leave
ret
mov
push
mov
xor
push
push
push
push
cmp
jne
push
jmp
push
call
add
pop
ret
mov
push
mov
sub
push
push
lea
call
mov
lea
cmp
ja
mov
mov
movzx
jmp
mov
sar
lea
push
mov
and
push
call
pop
pop
test
je
mov
push
mov
mov
mov
pop
jmp
xor
mov
mov
inc
mov
push
push
push
lea
push
push
lea
push
lea
push
push
call
add
test
jne
cmp
je
mov
and
xor
jmp
movzx
and
cmp
je
mov
and
pop
leave
ret
mov
push
mov
sub
push
push
push
lea
call
mov
mov
cmp
jae
mov
cmp
jle
lea
push
push
push
call
mov
add
jmp
mov
movzx
and
test
je
mov
movzx
jmp
cmp
je
mov
and
mov
jmp
mov
cmp
jle
mov
sar
lea
push
mov
and
push
call
pop
pop
test
je
mov
push
mov
mov
mov
pop
jmp
call
mov
xor
mov
mov
inc
mov
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
add
test
je
cmp
movzx
je
movzx
shl
or
cmp
je
mov
and
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
ret
int3
int3
int3
int3
int3
mov
mov
ret
int3
int3
int3
int3
int3
mov
mov
ret
int3
int3
int3
int3
int3
mov
mov
ret
int3
int3
int3
int3
int3
mov
mov
ret
int3
int3
int3
int3
int3
mov
mov
ret
mov
mov
jmp
add
push
add
mov
push
add
les
add
(bad)
push
add
jmp
add
add
and
add
cs
add
inc
pop
add
pop
pop
add
push
add
jp
add
mov
add
pushf
pop
add
lods
pop
add
mov
pop
add
ficom
add
jmp
add
add
sub
add
cmp
add
dec
sbb
add
add
add
jbe
add
mov
add
xchg
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
dec
sbb
add
add
sbb
add
add
mov
add
test
add
(bad)
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
bound
add
js
add
nop
sbb
add
add
enter
(bad)
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
pop
sbb
add
add
add
(bad)
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
push
sbb
add
sbb
add
add
pop
sbb
add
add
jle
add
nop
sbb
add
sbb
add
sbb
add
sbb
add
cmps
inc
add
cmps
inc
add
cmps
inc
add
inc
add
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
and
js
adc
add
add
add
add
add
test
add
inc
gs
gs
add
dec
outs
push
gs
outs
jbe
add
add
inc
outs
jb
gs
gs
outs
jbe
add
ins
add
add
inc
add
add
add
push
add
add
mov
mov
push
lea
adc
or
test
test
(bad)
sar
mov
mov
push
add
mov
add
inc
add
mov
add
mov
add
mov
add
mov
add
mov
add
gs
je
inc
imul
popa
je
inc
imul
dec
outs
fs
gs
popa
outs
fs
gs
add
add
inc
gs
outs
fs
gs
popa
outs
fs
gs
add
add
inc
gs
outs
fs
gs
imul
add
imul
gs
xor
cs
ins
add
add
inc
gs
outs
fs
gs
imul
add
ins
add
arpl
outs
add
ins
add
bound
add
add
add
add
js
add
xor
xor
add
add
add
xchg
xor
ja
popa
push
out
mov
les
(bad)
hlt
push
xor
xchg
fs
xor
fdivr
jmp
rcl
mov
sub
mov
sbb
dec
jno
repz
test
ficomp
jmp
(bad)
mov
hlt
mov
imul
std
in
leave
mov
add
ins
push
arpl
psubd
or
outs
cmp
imul
addr16
add
aam
dec
std
test
movs
cli
test
xor
(bad)
leave
mov
lods
jecxz
fdiv
jne
fild
or
shr
cmp
ficom
push
xlat
enter
mov
and
mov
cdq
xchg
mov
mov
or
or
and
or
adc
stos
sbb
data16
inc
fdiv
jno
add
aad
mov
mov
movs
in
lahf
xor
mov
js
stc
add
mov
push
loope
or
ins
or
pop
arpl
hlt
push
imul
ins
sbb
xor
dec
add
in
xchg
push
ins
jnp
add
shl
adc
cmc
(bad)
fnstenv
adc
mov
mov
bound
ficom
gs
aam
pop
popa
mov
into
push
mov
je
mov
aam
movs
fisttp
xchg
fdivr
sti
hlt
(bad)
shr
imul
mov
sar
add
in
add
pop
dec
or
cmp
add
daa
adc
or
and
test
or
mov
popa
into
push
stc
ficomp
leave
fldcw
and
xlat
(bad)
pop
cmp
mov
cmp
lods
ins
mov
in
mov
mov
add
inc
aad
scas
ja
popf
adc
push
fdiv
or
test
fs
ds
or
or
push
in
dec
xchg
daa
scas
add
mov
pop
jge
xchg
(bad)
shl
add
inc
push
imul
xor
sbb
push
imul
aam
loopne
ror
int3
dec
frstor
fistp
mov
mov
aad
mov
call
xchg
shl
push
repnz
addr16
cmps
fld
mov
dec
ss
fisubr
or
scas
test
pusha
jp
inc
ret
out
pusha
fist
addr16
mov
jns
imul
and
shr
ss
push
xchg
ja
int3
add
mov
das
es
lds
or
sub
mov
cmps
call
ret
shl
sbb
ret
es
pushf
mov
ins
add
ss
jmp
addr16
jb
push
add
adc
mov
jnp
sbb
xchg
or
out
fdivr
fisttp
aam
rol
clc
mov
push
int
mov
mul
ja
outs
ja
mov
out
or
retf
pop
or
adc
sahf
gs
clc
sar
imul
ins
push
js
or
push
add
mov
cmp
cmps
not
pusha
ror
imul
push
scas
fcomp
fldenv
fild
cmp
aaa
push
scas
mov
fidivr
mov
jmp
repnz
retf
mov
cmps
mov
sar
sub
push
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
add
sub
inc
xor
sbb
push
sub
fs
hlt
ja
xchg
inc
dec
or
ret
call
hlt
jecxz
dec
mov
dec
jle
mov
sub
cwde
xchg
ret
and
push
shl
js
inc
out
popa
push
xlat
scas
cs
mov
xlat
mov
sbb
test
sbb
add
call
out
ins
ins
(bad)
fistp
inc
aam
push
pop
int
and
xchg
jecxz
lahf
mov
inc
mov
popa
ja
mov
out
repz
gs
fisubr
lahf
inc
inc
sub
imul
jo
scas
imul
out
pop
sub
sub
pop
or
sbb
repz
fbstp
push
jo
xor
hlt
div
sub
jne
sbb
xor
pop
nop
sti
mov
test
jns
test
cmp
jns
jae
dec
call
inc
cmp
ficomp
dec
jns
inc
jle
jmp
(bad)
sbb
fild
mov
lea
fnstcw
mov
dec
hlt
mov
or
xchg
lea
or
int3
pop
dec
xor
inc
mov
outs
retf
ja
pop
mov
mov
xchg
push
xchg
xchg
push
cwde
xlat
ficom
test
loope
xchg
retf
cli
cmc
pop
xlat
bound
out
imul
push
inc
lahf
test
pop
adc
push
sbb
adc
and
inc
and
out
out
and
cmp
dec
mov
lahf
mov
and
cmps
xor
mov
lods
out
sar
mov
adc
ins
mov
xchg
adc
jle
push
jns
das
mov
and
je
or
repnz
dec
push
jo
gs
out
jle
(bad)
repz
mov
xchg
rcl
cmp
mov
js
mov
test
cwde
cmp
test
mov
mov
scas
adc
out
pop
push
ins
hlt
inc
int
fldcw
push
ret
adc
add
inc
jmp
ja
inc
xlat
ss
push
out
mov
mov
movs
test
jno
mov
ja
(bad)
ins
pop
push
dec
sub
or
sub
add
adc
cwde
mov
nop
bound
xchg
push
(bad)
push
hlt
out
les
fdecstp
jmp
lea
imul
pushf
sub
sub
lods
dec
jo
outs
sbb
sub
loope
fisub
pop
lds
push
call
dec
in
mov
movs
ret
addr16
test
mov
(bad)
lahf
fdivrp
cmp
repz
jnp
call
cmp
mov
or
stos
mov
sbb
icebp
adc
sub
jae
xor
mov
jo
cmc
shr
add
mov
arpl
cli
retf
(bad)
loope
int3
mov
stc
lea
scas
or
lea
mov
test
and
pop
ins
cmp
les
adc
sub
dec
add
sar
push
or
cmp
popf
cmps
push
mov
xchg
adc
in
xor
cdq
bound
fcom
into
pop
dec
loope
push
jle
push
xchg
sub
int3
bound
mov
xor
call
mov
pop
lods
ret
outs
xchg
dec
ins
das
mov
adc
test
push
and
sub
adc
jns
xchg
movs
dec
mov
movs
daa
sub
repnz
fdivrp
shl
out
mov
shl
es
xchg
aas
mov
adc
out
jp
std
pop
mov
gs
pop
jle
aaa
or
jbe
dec
div
lahf
adc
jb
and
add
add
aaa
push
add
test
pop
mov
or
jmp
retf
push
mov
lea
push
adc
(bad)
cmp
(bad)
test
or
stc
sbb
push
xchg
fmul
or
pop
or
es
leave
in
push
ja
pop
sub
das
sbb
fild
sbb
repnz
adc
dec
jae
adc
cmp
and
(bad)
adc
mov
pop
loopne
dec
cmp
sub
cmp
clc
or
cmp
inc
aas
or
cmp
push
add
outs
jge
aaa
ss
fidiv
test
xchg
xor
imul
fld
adc
nop
in
and
(bad)
xor
daa
leave
pop
sub
and
mov
and
mov
sub
fidivr
sub
ds
sbb
sub
call
das
ror
jno
pop
push
jae
xor
jb
and
push
jbe
icebp
pop
je
fwait
aad
js
mov
mov
jg
or
jl
je
jns
push
inc
js
mov
(bad)
jnp
cs
ins
fdivrp
cmp
nop
cli
outs
ins
xchg
push
push
xor
cmp
imul
adc
sub
shr
aam
cmps
gs
fs
imul
dec
pop
mov
push
dec
jns
xchg
dec
cld
arpl
dec
retf
or
xchg
mov
dec
movs
fstp
inc
scas
lock
inc
test
shl
inc
xor
inc
jae
cmovo
out
inc
sbb
push
xor
mov
mov
mov
clc
push
mov
adc
push
aad
mov
pop
fist
pop
xchg
pop
mov
movs
pop
xor
jmp
add
sub
outs
pop
ins
das
lods
pop
sbb
loope
jno
loopne
iret
mov
fldenv
cmp
imul
out
addr16
in
dec
es
mov
out
push
sahf
mov
in
in
das
call
mov
stos
jmp
pop
imul
(bad)
rcl
cld
sahf
ins
xchg
(bad)
test
adc
cli
sbb
sti
inc
les
clc
dec
jmp
ret
cmp
inc
icebp
xchg
inc
or
mov
xchg
(bad)
test
pop
js
push
aaa
mov
fidivr
jecxz
fstp
mov
shl
cmc
fucom
dec
aaa
(bad)
or
xlat
out
test
fsubr
aam
mov
aad
movs
(bad)
shl
into
mov
rcr
and
adc
pop
lds
xchg
pushf
les
fcmovb
dec
inc
sbb
int3
push
push
ret
xchg
ret
mov
call
dec
retf
lahf
lds
enter
leave
je
inc
int3
inc
ins
xchg
sbb
ror
mov
scas
xchg
ja
ins
nop
cs
sub
pushf
cmps
xchg
stos
push
fs
repnz
clc
(bad)
mov
sahf
xchg
adc
pushf
mov
outs
mov
adc
xor
xor
dec
mov
or
(bad)
in
popf
or
dec
add
mov
(bad)
mov
push
pop
and
push
adc
fadd
arpl
pop
xchg
shl
test
into
add
stos
stc
outs
movs
stos
jl
jmp
dec
adc
scas
adc
lods
sbb
xor
inc
aas
mov
les
clc
mov
stos
std
jl
popf
xchg
mov
mov
sbb
mov
cmps
inc
mov
int
mov
fcmovne
mov
mov
mov
cmovns
push
dec
adc
mov
mov
fidivr
pop
pop
mov
add
add
gs
stos
out
scas
mov
push
xchg
bound
fcomp
and
out
sub
fs
outs
add
(bad)
dec
fstp
push
xor
loopne
adc
lahf
push
sbb
xor
cli
jno
lods
inc
enter
lods
cmps
(bad)
addr16
or
outs
into
int
jg
xchg
adc
mov
aas
sahf
rcr
xchg
call
jae
lods
and
mov
inc
jp
ds
xor
mov
cmp
rol
xchg
or
in
xchg
loop
pop
test
xchg
fstp
(bad)
iret
aas
sub
ja
adc
jmp
in
inc
push
clc
sub
les
and
push
sahf
loop
outs
dec
jg
or
(bad)
jge
inc
aad
sar
dec
rcr
(bad)
lds
xchg
lahf
mov
inc
std
mov
xchg
(bad)
hlt
adc
call
adc
pop
aas
test
mov
sbb
mov
jbe
push
retf
pop
jg
test
push
shl
pop
mov
sbb
pop
mov
adc
shl
cmp
das
retf
jnp
dec
ja
mov
push
add
dec
mov
outs
inc
nop
call
cld
jle
data16
sbb
ficom
daa
mov
mov
out
mov
mov
mov
cmp
shr
hlt
pop
outs
xchg
add
cmp
call
pop
xchg
sub
mov
pop
clc
or
test
push
mov
fist
inc
addr16
fwait
push
add
in
mov
das
dec
leave
xor
inc
arpl
adc
push
mov
aaa
pop
in
push
loope
inc
call
cwde
call
scas
push
out
aaa
push
clc
inc
add
jmp
cdq
scas
xlat
loopne
retf
xor
mov
in
pop
shl
push
mov
push
inc
aad
in
jmp
bound
inc
xchg
out
xor
or
sub
push
in
cmp
pop
cmp
outs
xor
or
xchg
movs
loope
mov
das
sub
dec
dec
cmc
scas
repz
xor
mov
xchg
and
hlt
js
scas
dec
rol
std
shl
pop
xchg
idiv
sub
xchg
lahf
pop
repnz
and
add
jle
cmc
mov
(bad)
out
mov
pop
push
mov
ret
mov
fld
push
jmp
xor
(bad)
and
push
mov
rol
outs
mov
push
or
adc
jmp
into
movs
adc
(bad)
bswap
fst
xchg
test
lods
sub
sbb
and
xor
fcom
add
(bad)
scas
iret
jb
leave
jae
and
movs
push
inc
xchg
sbb
test
pop
adc
out
dec
jbe
mov
into
lea
inc
fsubr
inc
clc
fs
jns
stc
xor
xchg
inc
fidiv
call
mov
lock
imul
ss
test
(bad)
cs
mov
call
mov
loope
into
cs
inc
out
add
add
pop
std
pop
jmp
icebp
and
sub
aam
into
mov
iret
test
jg
pop
es
outs
mov
jbe
(bad)
out
retf
(bad)
sbb
loope
push
adc
cmp
adc
mov
jle
cmp
pushf
in
adc
outs
push
sbb
cmps
push
data16
jno
ds
outs
sub
mov
add
xchg
out
mov
dec
or
sbb
rol
pop
outs
sti
ret
neg
jmp
pop
test
or
xchg
popa
mov
fiadd
add
add
xor
cdq
or
pop
ins
les
jo
hlt
(bad)
xor
push
fisttp
movs
loopne
jmp
mov
mov
sub
jl
out
sub
xchg
sbb
mov
repnz
inc
ficomp
fcmovbe
jge
fucom
jmp
aam
push
adc
(bad)
adc
imul
mov
in
adc
pop
dec
arpl
ins
fsqrt
(bad)
arpl
outs
and
dec
imul
in
addr16
cmp
in
dec
add
inc
ror
mov
xor
mov
ins
fstp
stc
inc
xor
ins
jecxz
fistp
(bad)
or
pop
fnstenv
lods
push
fiadd
cmp
xlat
push
cmp
hlt
mov
mov
and
mov
movs
movaps
mov
or
or
mov
or
and
outs
jl
pop
push
sbb
cmp
add
jno
cwde
shl
mov
jno
test
lahf
mov
aam
js
leave
mov
xchg
or
sbb
or
sub
out
pop
add
push
hlt
sbb
popa
bound
bound
dec
ins
push
xchg
in
sbb
movs
jnp
or
shl
les
mov
(bad)
adc
mov
jl
fstp
dec
mov
jl
sti
aam
gs
mov
pop
cmp
add
xor
dec
fbld
xlat
movs
rol
ins
rcl
hlt
sti
inc
imul
cld
lods
mov
pusha
mov
jae
add
pop
fisttp
jno
daa
add
mov
or
xchg
mov
and
mov
data16
into
popa
in
pop
fdivrp
push
sub
leave
cwde
mov
cwde
and
xlat
test
pop
mov
pop
cs
xor
mov
mov
add
rcr
popf
shl
add
es
jecxz
or
xchg
cmp
push
test
push
iret
or
add
mov
setae
mov
push
mul
pop
and
sbb
outs
imul
(bad)
aam
jbe
shr
loopne
fidivr
fisttp
stc
mov
out
stc
pop
mov
inc
pusha
mov
aad
(bad)
mov
jle
fadd
les
repnz
sar
push
addr16
mov
fisttp
ss
fmul
sbb
dec
test
pusha
fbld
ret
test
fist
outs
mov
inc
imul
sbb
push
ja
mov
add
mov
lds
or
sub
add
xlat
jmp
sub
sahf
mov
scas
sbb
in
arpl
es
mov
or
ss
jb
test
add
xchg
mov
jp
jnp
sub
xchg
ror
or
or
fbld
xchg
rcl
icebp
aam
inc
push
fiadd
int
mov
ja
sbb
pop
out
punpckhdq
push
cmp
adc
or
sahf
(bad)
clc
bound
rcl
ins
iret
inc
mov
or
adc
ret
es
shl
test
ja
scas
shr
(bad)
pop
fadd
or
fdivr
lock
mov
iret
jg
mov
jmp
retf
mov
xchg
xor
mov
add
push
ficom
and
addr16
les
mov
sub
xchg
mov
mov
mov
sub
add
add
sbb
inc
xor
bound
fs
lds
pop
cmps
xchg
xchg
(bad)
enter
rol
mov
mov
hlt
fxch
lods
mov
or
scas
jle
sahf
sub
dec
ret
push
fldenv
adc
jo
popa
out
inc
xchg
cs
xlat
push
aaa
mov
adc
cwde
mov
add
sbb
sbb
ss
call
ins
sbb
inc
aas
(bad)
pop
push
sahf
xchg
test
mov
inc
and
call
shl
ret
fiadd
gs
pop
scas
stos
inc
inc
lahf
jmp
imul
jbe
std
imul
sub
or
or
sbb
ins
fild
repz
pop
pop
mov
jo
jno
imul
sub
mul
sbb
jne
pop
mov
sti
push
test
jns
mov
cmp
jns
push
dec
mov
pop
fisubr
cmp
jns
add
ret
xchg
push
sbb
xchg
adc
mov
cmp
lds
or
xchg
into
pop
int3
add
inc
xlat
xor
cli
bound
mov
mov
aas
(bad)
xchg
xchg
push
xchg
(bad)
cwde
push
(bad)
int3
test
shl
cli
retf
xchg
jb
xlat
pop
imul
inc
push
mov
pop
dec
test
unpckhps
sbb
jo
cmp
std
imul
retf
or
add
lahf
loop
cmps
int3
and
mov
loope
mov
shr
lahf
adc
ins
leave
dec
and
rcl
jmp
ja
das
aas
jns
ss
mov
or
je
adc
xor
push
dec
lea
pusha
jle
xor
out
(bad)
(bad)
std
ret
rcl
cmp
call
js
cmps
cmp
sbb
or
retf
mov
pop
dec
inc
hlt
ins
push
ins
fnstcw
int
ret
repz
adc
inc
and
shr
ja
adc
out
movs
add
test
mov
push
ja
cwde
pop
ins
(bad)
adc
ss
daa
sbb
fnstsw
xor
mov
push
rcr
hlt
lds
(bad)
out
hlt
push
out
ret
neg
xchg
aad
pop
mov
test
xor
imul
jns
shl
lods
clc
pop
sbb
inc
sub
data16
loope
lds
mov
dec
repz
mov
in
test
xchg
sub
in
scas
mov
(bad)
repz
cmp
call
imul
or
stos
test
jg
sbb
mov
pop
adc
xor
xor
dec
jo
mov
imul
jp
xor
pop
mov
retf
cli
xlat
dec
shl
out
stc
int3
mov
loopne
test
mov
and
popf
mov
inc
mov
and
sbb
ins
pop
xor
push
test
cwde
inc
jle
test
ror
cmp
hlt
pop
mov
cmps
popf
stos
adc
add
cld
dec
xor
bound
into
jns
fmul
dec
pop
push
cli
jle
jnp
sub
aam
lea
push
pop
mov
fnop
pop
jle
in
inc
gs
dec
xchg
outs
jne
mov
call
or
push
aas
sub
mov
sbb
mov
daa
repnz
mov
mov
(bad)
out
and
loope
or
mov
jle
shl
imul
inc
cmp
ja
fsub
mov
jle
hlt
out
push
or
test
mov
adc
xor
add
add
ret
add
pop
pop
or
jmp
lea
dec
push
test
adc
psrlw
(bad)
or
push
out
loope
sbb
fs
xchg
push
or
inc
cmp
sbb
mov
sbb
lods
sbb
popa
fwait
sbb
mov
adc
cwde
call
mov
cmps
adc
xchg
adc
(bad)
xor
push
mov
in
cmp
loopne
(bad)
sub
cmp
xchg
mov
or
mov
xchg
cmp
pop
pop
pop
aaa
pushf
jge
xor
sbb
test
xchg
aad
xor
imul
adc
frstor
in
and
out
xor
es
dec
dec
and
cdq
and
and
adc
sub
pusha
inc
sub
or
jno
hlt
sub
jbe
cs
enter
mov
shl
div
pop
scas
jb
xor
jbe
dec
sub
jb
aad
inc
jle
fdivr
dec
mov
jge
or
jl
bound
jns
je
js
push
xchg
jp
mov
std
ins
mov
inc
xchg
cli
fisubr
nop
jmp
push
in
pop
push
repz
arpl
aas
popa
sub
push
cmps
xlat
aam
fs
mov
dec
xlat
retf
and
mov
dec
dec
xchg
jne
dec
fisub
dec
sbb
retf
dec
pop
mov
dec
cwde
frstor
inc
push
lock
inc
inc
dec
test
inc
int
inc
inc
addps
dec
out
inc
mov
push
xor
addr16
jne
ds
mov
or
ror
adc
push
mov
cmp
pop
and
pop
in
xchg
xchg
pop
sub
add
inc
pop
pop
lods
das
ins
loope
sbb
loop
iret
out
jecxz
movs
(bad)
cmp
pop
out
fldcw
mov
or
cmp
in
paddsb
hlt
popa
call
in
mov
jmp
ss
imul
rcl
(bad)
(bad)
xchg
ins
sahf
call
test
sti
fdivr
stc
sahf
les
pop
scas
jne
add
dec
bnd
lock
adc
or
cmc
retf
sub
test
fnstcw
pusha
fdivr
mov
fstp
jecxz
fidiv
mov
(bad)
and
fdiv
dec
in
imul
test
fdiv
shl
add
mov
jo
shl
pop
lds
adc
pushf
xchg
daa
(bad)
fisubr
jle
sbb
ret
int3
ret
xchg
cmp
rcl
mov
retf
dec
scas
test
pop
lahf
enter
leave
or
icebp
int3
inc
pop
je
xchg
iret
rcl
into
add
inc
nop
ins
cld
ja
sub
xchg
jmp
ds
xchg
fs
stos
xchg
and
repnz
loopne
lds
jle
iret
pushf
cmp
xchg
popf
cli
jns
cwde
mov
and
ja
adc
repz
mov
pop
mov
mov
sbb
mov
or
mov
push
mov
sbb
int3
push
test
arpl
aad
or
test
mov
into
stos
movs
outs
stc
scas
jmp
jl
sub
dec
lods
outs
lods
adc
sbb
movs
jne
jbe
mov
inc
mov
cmp
mov
mov
jae
mov
sbb
mov
cmps
mov
mov
fisttp
cmpxchg
mov
punpckldq
xlat
and
adc
test
xchg
pushf
xor
loopne
mov
cwde
xor
add
add
mov
or
mov
mov
out
(bad)
bound
xor
xlat
cmp
jge
dec
mov
loopne
xlat
add
mov
loopne
ja
pop
arpl
push
push
sbb
call
adc
jno
jnp
enter
lods
jne
or
into
outs
es
lods
jg
sub
movs
mov
xchg
rcr
mov
(bad)
and
xor
pop
or
addr16
xchg
shr
push
cmp
in
pop
or
pop
lock
in
xchg
xchg
fnstsw
loopne
iret
(bad)
dec
pop
ja
sub
jmp
jecxz
in
fmul
lock
mov
pop
and
sub
sahf
push
dec
jg
outs
test
or
ins
cld
rcr
lahf
ror
and
lds
sub
mov
inc
and
(bad)
xchg
test
call
cmp
xor
not
adc
iret
push
retf
mov
ret
pusha
test
jo
out
pop
mov
test
fistp
ret
imul
push
ret
ja
imul
cpuid
jae
push
sub
mov
cwde
cmc
cld
sar
nop
out
push
jle
fidiv
sbb
mov
inc
sub
mov
cmp
jg
sar
xchg
outs
pop
hlt
cmp
test
xchg
das
aas
mov
xchg
pop
in
mov
pusha
push
or
pop
xor
dec
test
cmps
icebp
iret
mov
inc
cs
addr16
daa
jo
jno
dec
mov
(bad)
xor
inc
out
imul
pushf
rol
push
jb
pop
aaa
retf
pop
loope
scas
dec
push
inc
call
mov
aaa
out
push
add
inc
clc
mov
jmp
js
mov
xlat
scas
xor
in
pop
mov
push
in
pop
inc
push
jle
(bad)
in
sbb
bound
and
inc
or
xor
out
mov
aam
push
stc
mov
in
pop
cmp
cmp
xor
or
cmp
movs
add
dec
sub
scas
cmc
dec
dec
xor
jbe
mov
mov
sbb
ror
sar
add
push
movs
not
cmp
lahf
xchg
xchg
in
icebp
repnz
imul
cmc
xlat
jle
out
ror
ret
push
jp
jmp
fnop
mov
xor
xor
(bad)
and
stc
popa
call
mov
lods
mov
ss
jb
call
xchg
(bad)
loope
xchg
adc
int
lods
mov
inc
and
jne
jp
adc
scas
dec
jae
fwait
push
movs
icebp
and
sbb
test
jbe
out
push
into
icebp
mov
inc
lea
call
inc
xchg
push
xor
es
jmp
(bad)
mov
or
mov
lock
bound
fwait
push
mov
xchg
xchg
cdq
xor
es
mov
cld
mov
adc
push
ja
ss
adc
out
mov
loopne
jbe
pop
not
dec
jmp
ds
ins
add
aam
popa
inc
(bad)
mov
stos
jle
test
cmp
es
jl
mov
pop
sbb
mov
repz
in
test
adc
ja
mov
ret
add
cmp
cdq
in
mov
push
outs
xchg
cmps
fidiv
sub
fisubr
sar
lock
out
mov
mov
push
inc
sar
dec
sti
outs
pop
sub
push
addr16
cmps
int3
mov
pop
je
into
jp
mov
push
icebp
xor
add
add
or
add
pusha
jne
add
add
add
inc
add
push
add
add
add
inc
add
add
adc
adc
sar
add
add
add
add
add
js
add
add
add
js
add
add
add
js
add
add
add
js
add
add
add
add
adc
js
add
xor
xor
add
pop
add
add
add
add
add
add
add
add
push
add
or
add
jae
adc
pop
add
or
add
xor
add
rol
pop
or
add
pusha
add
or
add
or
add
or
add
or
add
pop
push
add
or
add
sbb
add
nop
add
pop
cmp
add
js
add
cmp
add
rol
adc
adc
add
push
add
or
add
or
add
or
add
pop
add
add
push
add
or
adc
pop
sub
add
je
add
xor
add
enter
or
add
or
add
test
add
add
add
test
add
inc
add
or
add
pop
or
add
pop
add
or
add
cwde
add
push
add
or
or
add
fadd
adc
pop
add
or
or
add
mov
add
or
add
clc
add
pop
add
add
push
add
or
add
pop
and
add
jb
add
xor
add
les
adc
or
add
bound
add
and
add
movs
add
or
add
or
add
or
add
pop
pop
add
or
add
sbb
add
xchg
add
inc
add
or
add
cmp
add
aam
adc
adc
add
push
add
sub
add
mov
add
or
add
mov
add
dec
add
or
add
pop
add
add
or
add
add
adc
xor
add
jbe
add
add
or
add
pop
sldt
or
add
add
or
add
xchg
add
inc
add
or
add
pop
or
add
pop
add
or
add
or
add
jle
add
add
or
add
pop
sbb
add
outs
add
or
add
or
add
mov
add
dec
add
or
add
add
add
push
add
or
add
pop
pop
add
or
add
xor
add
ret
pop
or
add
popa
add
or
add
or
add
or
add
or
add
pop
push
add
or
add
sbb
add
xchg
add
pop
cmp
add
jns
add
cmp
add
rol
adc
adc
add
imul
add
mov
add
or
add
mov
add
dec
add
or
add
pop
add
add
push
add
or
add
pop
sub
add
jne
add
xor
add
pop
or
add
or
add
or
add
or
add
jmp
or
add
sbb
add
push
add
or
add
cmp
add
pop
pop
add
or
add
sub
add
or
add
or
add
cli
add
pop
add
add
push
add
or
add
pop
and
add
jae
add
xor
add
mov
pop
or
add
arpl
add
and
add
cmps
add
or
add
or
add
or
add
pop
pop
add
or
add
sbb
add
xchg
add
inc
add
or
add
cmp
add
(bad)
add
pop
adc
add
imul
or
add
or
add
or
add
or
add
pop
add
add
or
add
add
adc
xor
add
ja
add
aaa
add
or
add
pop
sldt
or
add
daa
add
or
add
or
add
or
add
pop
or
add
pop
add
or
add
or
add
or
add
aas
add
or
add
pop
sbb
add
outs
add
or
add
or
add
or
add
or
add
add
add
push
add
or
add
jae
adc
pop
add
or
add
xor
add
rol
pop
or
add
pusha
add
or
add
or
add
or
add
or
add
pop
push
add
or
add
sbb
add
xchg
add
pop
cmp
add
js
add
cmp
add
rol
adc
adc
add
push
add
or
add
or
add
or
add
pop
add
add
push
add
or
adc
pop
sub
add
je
add
xor
add
leave
add
pop
or
add
or
add
test
add
or
add
jmp
add
or
or
add
cdq
add
push
add
or
or
add
fld
adc
pop
add
or
or
add
mov
add
or
add
stc
add
pop
add
add
push
add
or
add
pop
and
add
jb
add
xor
add
lds
adc
or
add
bound
add
and
add
movs
add
or
add
or
add
or
add
pop
pop
add
or
add
sbb
add
xchg
add
inc
add
or
add
cmp
add
aad
adc
adc
add
push
add
sub
add
mov
add
or
add
mov
add
dec
add
or
add
pop
add
add
or
add
add
adc
xor
add
jbe
add
add
or
add
pop
sldt
or
add
add
or
add
or
add
or
add
pop
or
add
pop
add
or
add
or
add
or
add
add
or
add
pop
sbb
add
outs
add
or
add
or
add
or
add
or
add
add
add
push
add
or
add
pop
pop
add
or
add
xor
add
ret
add
pop
or
add
popa
add
or
add
or
add
or
add
or
add
pop
push
add
or
add
sbb
add
xchg
add
pop
cmp
add
jns
add
cmp
add
rol
adc
adc
add
imul
add
mov
add
or
add
mov
add
dec
add
or
add
pop
add
add
push
add
or
add
pop
sub
add
jne
add
xor
add
pop
or
add
or
add
or
add
or
add
jmp
adc
or
add
pop
add
or
add
push
add
or
add
cmp
add
pop
pop
add
or
add
sub
add
or
add
or
add
sti
add
pop
add
add
push
add
or
add
pop
and
add
jae
add
xor
add
mov
add
arpl
add
and
add
cmps
add
or
add
or
add
or
add
pop
pop
add
or
add
sbb
add
xchg
add
inc
add
or
add
cmp
add
xlat
add
pop
adc
add
imul
or
add
or
add
or
add
or
add
pop
add
add
or
add
add
adc
xor
add
ja
add
aaa
add
or
add
pop
sldt
or
add
daa
add
or
add
or
add
or
add
pop
or
add
pop
add
or
add
or
add
or
add
aas
add
or
add
pop
sbb
add
outs
add
or
add
or
add
or
add
or
add
add
add
adc
add
adc
add
add
add
sbb
and
sbb
add
adc
add
push
add
add
adc
add
sbb
pop
add
add
popa
add
add
add
adc
xor
sbb
add
adc
add
add
add
adc
adc
adc
add
or
pop
add
add
add
add
add
add
or
add
add
add
add
add
add
push
add
or
add
jae
adc
pop
add
or
add
xor
add
rol
pop
or
add
pusha
add
or
add
or
add
or
add
or
add
pop
push
add
or
add
sbb
add
nop
add
pop
cmp
add
js
add
cmp
add
rol
adc
adc
add
push
add
or
add
or
add
or
add
pop
add
add
push
add
or
adc
pop
sub
add
je
add
xor
add
enter
or
add
or
add
test
add
add
add
test
add
inc
add
or
add
pop
or
add
pop
add
or
add
cwde
add
push
add
or
or
add
fadd
adc
pop
add
or
or
add
mov
add
or
add
clc
add
pop
add
add
push
add
or
add
pop
and
add
jb
add
xor
add
les
adc
or
add
bound
add
and
add
movs
add
or
add
or
add
or
add
pop
pop
add
or
add
sbb
add
xchg
add
inc
add
or
add
cmp
add
aam
adc
adc
add
push
add
sub
add
mov
add
or
add
mov
add
dec
add
or
add
pop
add
add
or
add
add
adc
xor
add
jbe
add
add
or
add
pop
sldt
or
add
add
or
add
xchg
add
inc
add
or
add
pop
or
add
pop
add
or
add
or
add
jle
add
add
or
add
pop
sbb
add
outs
add
or
add
or
add
mov
add
dec
add
or
add
add
add
push
add
or
add
pop
pop
add
or
add
xor
add
ret
pop
or
add
popa
add
or
add
or
add
or
add
or
add
pop
push
add
or
add
sbb
add
xchg
add
pop
cmp
add
jns
add
cmp
add
rol
adc
adc
add
imul
add
mov
add
or
add
mov
add
dec
add
or
add
pop
add
add
push
add
or
add
pop
sub
add
jne
add
xor
add
pop
or
add
or
add
or
add
or
add
jmp
or
add
sbb
add
push
add
or
add
cmp
add
pop
pop
add
or
add
sub
add
or
add
or
add
cli
add
pop
add
add
push
add
or
add
pop
and
add
jae
add
xor
add
mov
pop
or
add
arpl
add
and
add
cmps
add
or
add
or
add
or
add
pop
pop
add
or
add
sbb
add
xchg
add
inc
add
or
add
cmp
add
(bad)
add
pop
adc
add
imul
or
add
or
add
or
add
or
add
pop
add
add
or
add
add
adc
xor
add
ja
add
aaa
add
or
add
pop
sldt
or
add
daa
add
or
add
or
add
or
add
pop
or
add
pop
add
or
add
or
add
or
add
aas
add
or
add
pop
sbb
add
outs
add
or
add
or
add
or
add
or
add
add
add
push
add
or
add
jae
adc
pop
add
or
add
xor
add
rol
pop
or
add
pusha
add
or
add
or
add
or
add
or
add
pop
push
add
or
add
sbb
add
xchg
add
pop
cmp
add
js
add
cmp
add
rol
adc
adc
add
push
add
or
add
or
add
or
add
pop
add
add
push
add
or
adc
pop
sub
add
je
add
xor
add
leave
add
pop
or
add
or
add
test
add
or
add
jmp
add
or
or
add
cdq
add
push
add
or
or
add
fld
adc
pop
add
or
or
add
mov
add
or
add
stc
add
pop
add
add
push
add
or
add
pop
and
add
jb
add
xor
add
lds
adc
or
add
bound
add
and
add
movs
add
or
add
or
add
or
add
pop
pop
add
or
add
sbb
add
xchg
add
inc
add
or
add
cmp
add
aad
adc
adc
add
push
add
sub
add
mov
add
or
add
mov
add
dec
add
or
add
pop
add
add
or
add
add
adc
xor
add
jbe
add
add
or
add
pop
sldt
or
add
add
or
add
or
add
or
add
pop
or
add
pop
add
or
add
or
add
or
add
add
or
add
pop
sbb
add
outs
add
or
add
or
add
or
add
or
add
add
add
push
add
or
add
pop
pop
add
or
add
xor
add
ret
add
pop
or
add
popa
add
or
add
or
add
or
add
or
add
pop
push
add
or
add
sbb
add
xchg
add
pop
cmp
add
jns
add
cmp
add
rol
adc
adc
add
imul
add
mov
add
or
add
mov
add
dec
add
or
add
pop
add
add
push
add
or
add
pop
sub
add
jne
add
xor
add
pop
or
add
or
add
or
add
or
add
jmp
adc
or
add
pop
add
or
add
push
add
or
add
cmp
add
pop
pop
add
or
add
sub
add
or
add
or
add
sti
add
pop
add
add
push
add
or
add
pop
and
add
jae
add
xor
add
mov
add
arpl
add
and
add
cmps
add
or
add
or
add
or
add
pop
pop
add
or
add
sbb
add
xchg
add
inc
add
or
add
cmp
add
xlat
add
pop
adc
add
imul
or
add
or
add
or
add
or
add
pop
add
add
or
add
add
adc
xor
add
ja
add
aaa
add
or
add
pop
sldt
or
add
daa
add
or
add
or
add
or
add
pop
or
add
pop
add
or
add
or
add
or
add
aas
add
or
add
pop
sbb
add
outs
add
or
add
or
add
or
add
or
add
add
add
adc
add
adc
add
add
add
sbb
and
sbb
add
adc
add
push
add
add
adc
add
sbb
pop
add
add
popa
add
add
add
adc
xor
sbb
add
adc
add
add
add
adc
adc
adc
add
or
pop
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
jae
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
push
add
add
adc
sbb
and
xor
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
sbb
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
pop
or
or
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
or
mov
or
dec
add
add
add
add
or
lods
add
add
add
add
add
or
pushf
add
add
add
add
add
or
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
lds
or
and
add
add
or
in
or
adc
add
add
or
aad
or
xor
add
add
or
cmc
add
add
add
add
or
int
or
sub
add
add
or
in
add
add
add
add
or
fld
or
cmp
add
add
or
std
add
add
add
add
add
add
add
add
or
push
add
add
add
add
add
add
add
add
add
add
add
add
or
jae
or
repz
add
add
add
add
add
add
add
add
add
or
dec
add
add
add
add
add
add
add
add
add
add
add
add
or
imul
add
add
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
add
add
add
add
add
add
add
add
or
jnp
or
sti
add
add
add
add
add
add
add
add
add
add
or
inc
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
or
push
add
add
add
add
add
add
add
add
add
add
add
add
or
ja
or
test
or
str
add
add
add
add
add
or
dec
add
add
add
add
add
add
add
add
add
add
add
add
or
outs
add
add
add
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
add
add
add
add
add
add
add
add
or
jg
or
inc
or
inc
or
add
pop
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
pop
add
add
pop
add
add
pop
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
pop
pop
pop
pop
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
sldt
adc
adc
adc
adc
adc
adc
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
add
or
or
or
or
or
or
push
push
push
(bad)
(bad)
(bad)
movups
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
push
push
push
push
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
sbb
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
add
add
add
pusha
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
rol
mov
inc
add
rol
mov
inc
add
rol
mov
inc
add
popa
and
ins
outs
arpl
imul
inc
add
inc
add
push
inc
add
inc
add
add
add
jae
popa
ins
and
sub
inc
push
push
cmp
dec
outs
je
outs
outs
jne
push
outs
jb
and
arpl
jo
gs
and
ins
ins
and
jae
jb
jb
outs
jb
add
jb
js
je
jb
arpl
jae
add
jae
arpl
outs
add
add
add
add
add
outs
je
ins
and
jb
jb
add
or
dec
dec
push
push
and
jb
jb
or
add
push
dec
dec
inc
and
jb
jb
or
add
add
inc
dec
dec
and
jb
jb
or
add
add
add
xor
xor
or
and
jo
imul
and
jae
ins
popa
fs
and
je
ins
jo
and
ins
outs
popa
and
and
jb
outs
je
ins
and
jb
jb
and
arpl
jb
arpl
or
gs
jae
and
outs
je
arpl
push
jo
imul
daa
jae
jae
jo
outs
jb
and
ins
and
jb
ins
outs
jb
and
outs
jb
popa
je
outs
outs
cs
add
add
xor
xor
je
gs
jo
and
jne
and
dec
dec
and
fs
outs
ins
and
jae
popa
jae
gs
bound
fs
imul
imul
and
imul
je
outs
outs
or
jae
imul
gs
popa
and
and
and
jne
and
jo
imul
and
and
and
jae
and
gs
jns
je
and
jae
ins
je
outs
data16
ins
ins
imul
dec
push
dec
dec
sub
imul
ins
jb
and
outs
arpl
outs
and
outs
ins
and
outs
popa
je
jbe
and
outs
jae
jb
arpl
and
and
outs
ins
and
dec
popa
imul
push
xor
xor
outs
je
outs
outs
jne
push
arpl
outs
jb
ins
outs
arpl
and
outs
jb
popa
je
outs
outs
or
add
add
xor
xor
je
gs
jo
and
imul
imul
and
push
and
jb
and
outs
and
arpl
or
jae
imul
gs
popa
and
and
and
jne
and
jo
imul
cs
xor
xor
push
push
and
je
imul
imul
add
xor
cmp
outs
popa
bound
je
and
imul
and
popa
jo
or
add
add
xor
aaa
or
outs
je
outs
outs
jne
push
arpl
outs
jb
ins
outs
ja
outs
and
imul
je
outs
outs
or
add
xor
ss
outs
je
outs
outs
jne
push
arpl
outs
jb
jae
imul
imul
imul
add
push
xor
xor
jo
jb
and
jb
jne
ins
and
outs
arpl
outs
and
ins
ins
or
push
xor
xor
or
and
outs
jne
push
arpl
outs
jb
pop
outs
outs
gs
je
popa
je
js
je
je
bound
or
add
add
xor
cmp
outs
popa
bound
je
and
outs
and
outs
jae
ins
and
imul
add
push
xor
cmp
outs
gs
arpl
and
popa
jo
gs
outs
jb
or
add
add
xor
aaa
or
outs
gs
arpl
and
ins
je
je
jb
popa
and
imul
jb
outs
jb
or
add
add
xor
ss
outs
je
outs
outs
jne
push
arpl
outs
jb
je
jb
popa
and
popa
or
push
push
jo
ins
imul
and
jae
jb
jno
gs
gs
and
outs
je
ins
and
je
jb
imul
je
imul
outs
jne
jne
ins
and
jns
or
gs
jae
and
outs
je
arpl
push
jo
imul
daa
jae
jae
jo
outs
jb
and
ins
and
jb
ins
outs
jb
and
outs
jb
popa
je
outs
outs
cs
push
xor
cmp
outs
je
outs
outs
jne
push
arpl
outs
jb
outs
jbe
jb
outs
ins
outs
je
or
push
xor
cmp
outs
je
outs
outs
jne
push
arpl
outs
jb
popa
jb
jne
outs
je
or
push
xor
xor
ins
outs
popa
je
outs
and
imul
jo
jb
and
je
ins
outs
popa
fs
add
arpl
jae
data16
push
imul
sub
and
outs
je
ins
and
jb
jb
add
add
or
add
cs
jb
addr16
ins
and
ins
and
imul
outs
add
push
jne
je
ins
and
jb
jb
or
push
jb
addr16
ins
cmp
add
add
sbb
pushf
sbb
push
outs
imul
outs
and
arpl
je
outs
outs
add
add
ins
loopne
add
add
add
add
add
add
add
add
inc
outs
arpl
gs
outs
imul
add
inc
add
dec
add
dec
add
add
add
add
add
add
add
outs
fs
outs
imul
add
jae
jb
add
jae
gs
popa
ins
jne
add
jae
gs
popa
ins
jne
add
jae
ins
ins
outs
arpl
add
add
add
jne
ins
add
add
add
add
outs
jne
ins
sub
add
add
add
add
push
add
add
adc
add
add
add
add
inc
inc
add
xor
add
add
and
push
pop
pop
or
aaa
xor
push
push
pop
add
and
or
add
add
pusha
push
add
js
js
js
or
or
add
add
or
add
or
or
pop
or
add
dec
ins
ins
gs
ins
and
je
and
jno
outs
arpl
add
inc
imul
jns
outs
outs
je
gs
jo
jns
inc
jne
arpl
outs
and
je
imul
outs
je
add
add
dec
outs
and
imul
jbe
imul
inc
imul
je
outs
and
add
add
jae
jne
arpl
fs
fs
outs
arpl
popa
jbe
imul
gs
ins
je
je
outs
and
add
add
inc
outs
ins
popa
imul
jb
add
add
outs
imul
jo
jo
add
and
outs
jns
ins
imul
gs
fs
and
ins
and
jae
gs
add
add
jbe
ins
imul
add
add
and
popa
arpl
ins
gs
outs
outs
and
imul
and
and
add
dec
outs
popa
jo
jb
jo
imul
dec
and
outs
je
outs
ins
and
gs
je
outs
outs
add
and
outs
jns
outs
jo
outs
and
ins
gs
push
outs
outs
and
outs
jns
outs
jo
outs
and
ins
gs
imul
gs
add
add
jbe
ins
imul
outs
je
add
add
and
imul
jns
add
je
popa
and
arpl
jns
dec
outs
and
arpl
fs
arpl
add
jo
outs
jo
jb
ins
imul
imul
je
add
jae
jne
arpl
fs
arpl
push
outs
imul
outs
and
jb
jb
add
inc
popa
and
fs
jae
add
jb
imul
fs
imul
outs
je
outs
outs
jne
push
arpl
add
add
jae
jne
arpl
je
ins
jo
jb
jb
ins
jns
jne
popa
jbe
imul
add
dec
outs
and
imul
gs
gs
add
and
ins
and
arpl
jo
outs
jb
inc
js
arpl
outs
jb
popa
je
gs
outs
jb
add
inc
jb
and
je
je
outs
and
add
add
and
arpl
fs
arpl
outs
jb
popa
fs
jae
add
add
jo
je
outs
jne
jo
je
gs
outs
jb
add
je
jb
jne
je
and
outs
arpl
outs
and
ins
ins
add
add
and
arpl
jo
outs
arpl
jae
dec
outs
and
arpl
imul
and
arpl
jns
add
dec
jo
jb
je
outs
outs
and
je
jo
jb
imul
and
jb
jb
add
add
jae
push
push
inc
sub
push
push
inc
sub
add
add
push
dec
dec
inc
dec
inc
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
outs
ins
jo
gs
and
push
arpl
outs
arpl
outs
jb
add
add
inc
ins
popa
jae
and
gs
jb
push
jae
jb
jo
outs
jb
add
add
and
jae
and
popa
jae
and
jb
jns
add
and
jae
and
popa
jae
and
arpl
jo
outs
jb
popa
je
sub
and
and
arpl
jo
outs
jb
add
add
outs
arpl
and
popa
je
arpl
je
jb
popa
and
popa
jb
daa
add
popa
outs
popa
gs
arpl
and
jo
and
outs
jae
jb
arpl
and
gs
je
jb
add
pusha
jbe
arpl
and
popa
jae
and
jo
and
outs
jae
jb
arpl
and
gs
je
jb
add
add
pusha
jbe
arpl
and
jo
and
outs
jae
jb
arpl
and
gs
je
jb
add
pusha
fs
popa
ins
imul
imul
jne
je
jb
outs
jb
daa
add
add
pusha
fs
popa
ins
imul
imul
and
jb
daa
add
pusha
gs
je
jb
jbe
popa
jae
and
jo
and
outs
jae
jb
arpl
and
gs
je
jb
add
push
je
jb
arpl
jns
arpl
jae
jb
arpl
and
gs
je
jb
add
add
popa
outs
popa
gs
arpl
and
je
jne
je
jb
imul
daa
add
add
pusha
ins
popa
outs
popa
gs
arpl
and
outs
jae
jb
arpl
and
gs
je
jb
add
add
ins
popa
arpl
outs
je
fs
gs
pop
pop
and
outs
jae
jb
daa
add
add
pusha
jo
popa
arpl
outs
je
fs
gs
and
outs
jae
jb
daa
add
pusha
outs
ins
outs
imul
jae
addr16
add
and
gs
pop
pop
add
add
outs
gs
pop
add
pusha
ins
outs
arpl
and
je
bound
arpl
jae
jb
arpl
and
outs
jae
jb
daa
add
outs
arpl
and
je
bound
add
push
push
dec
add
add
dec
add
fs
jb
je
jb
imul
outs
jo
and
outs
jae
jb
arpl
and
outs
jae
jb
daa
add
pusha
gs
je
jb
jbe
popa
jae
and
outs
jae
jb
arpl
and
gs
je
jb
add
pusha
gs
je
jb
fs
jb
arpl
and
gs
je
jb
add
push
je
jb
arpl
jae
jb
arpl
and
gs
je
jb
add
add
pusha
jbe
jb
jne
ins
and
jo
popa
arpl
outs
je
ins
popa
jo
add
pusha
jbe
arpl
and
popa
jae
and
outs
jae
jb
arpl
and
gs
je
jb
add
arpl
and
je
jne
je
jb
imul
daa
add
add
pusha
jbe
arpl
and
outs
jae
jb
arpl
and
gs
je
jb
add
add
arpl
popa
jb
fs
gs
outs
and
jae
jb
arpl
daa
add
add
pusha
fs
jne
je
arpl
jae
jb
arpl
and
outs
jae
jb
daa
add
add
arpl
and
gs
outs
and
jae
jb
arpl
daa
add
add
pusha
jbe
popa
jae
and
je
jne
je
jb
add
pusha
jae
jb
outs
addr16
add
add
pusha
ins
outs
arpl
and
popa
je
arpl
addr16
jb
daa
add
add
pusha
je
jo
outs
data16
add
add
pusha
jbe
popa
ins
ins
daa
add
bound
ins
gs
add
add
data16
bound
add
add
add
jl
add
es
cmp
add
cmp
add
sub
add
jl
add
es
jl
add
pop
add
add
add
sub
add
sub
add
ds
add
cmp
add
cmp
add
and
add
add
add
add
add
add
sub
add
sub
add
sub
jo
jb
je
jb
add
add
add
and
add
and
add
cmp
add
ds
cmp
fs
gs
add
outs
gs
add
add
jne
popa
ins
imul
pop
jb
jae
jb
arpl
pop
pop
jo
jb
xor
pop
pop
arpl
popa
ins
ins
add
add
popaw
jae
arpl
ins
add
pop
pop
je
imul
add
jae
arpl
ins
add
add
jo
jae
popa
ins
add
add
pop
pop
arpl
ins
add
bound
gs
add
add
add
add
add
adc
inc
add
inc
add
add
in
add
loopne
inc
add
add
int3
add
rol
add
inc
add
sti
inc
add
sti
inc
add
sti
inc
add
inc
add
inc
add
add
cwde
add
xchg
add
nop
add
mov
inc
add
add
js
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
inc
add
add
xor
inc
add
add
sub
inc
add
add
and
inc
add
add
sbb
inc
add
add
adc
inc
add
add
or
inc
add
add
add
inc
add
add
hlt
inc
call
inc
aam
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
fdivr
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
sbb
inc
add
inc
in
inc
add
std
inc
add
std
inc
add
std
inc
add
inc
add
add
inc
add
cld
inc
add
cld
inc
add
cld
inc
add
inc
add
inc
add
cld
inc
add
gs
jb
arpl
jae
imul
popa
je
outs
outs
add
je
jae
jb
bound
arpl
outs
jb
popa
je
outs
outs
inc
add
add
je
popa
jae
inc
arpl
gs
outs
jo
jo
add
je
arpl
gs
imul
gs
popa
addr16
outs
js
add
inc
push
xor
cs
dec
dec
add
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
add
add
add
ds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
test
test
test
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
(bad)
enter
int3
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
(bad)
inc
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
add
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
(bad)
enter
int3
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
(bad)
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
(bad)
enter
int3
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
(bad)
inc
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
jnp
jge
jg
add
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
(bad)
enter
int3
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
(bad)
dec
cmp
cmp
add
add
fs
dec
dec
dec
dec
and
and
jns
add
das
fs
jns
add
add
push
dec
add
inc
dec
add
inc
arpl
bound
add
add
dec
outs
jbe
ins
bound
add
add
dec
arpl
gs
push
gs
gs
bound
add
add
addr16
je
add
ins
jns
add
add
outs
add
add
inc
jo
imul
arpl
add
inc
bound
popa
jb
add
add
dec
popa
outs
jne
jb
add
add
jbe
dec
arpl
gs
inc
jne
add
ins
add
outs
add
jns
inc
jo
add
jb
inc
bound
dec
popa
outs
add
je
jb
popa
jns
add
add
imul
jne
jae
popa
jns
add
add
outs
gs
popa
jns
add
push
jne
jae
popa
jns
dec
outs
outs
fs
jns
add
outs
fs
jns
add
je
inc
jb
add
add
add
add
outs
add
outs
add
dec
dec
push
push
and
push
jne
dec
outs
outs
push
jne
push
gs
push
push
popa
je
add
dec
popa
outs
inc
bound
jb
jo
dec
popa
jns
jne
dec
jne
inc
jne
push
gs
arpl
jbe
arpl
add
add
add
add
add
add
add
adc
add
test
xor
or
sub
cmp
add
add
xor
push
push
mov
add
and
or
pusha
push
or
pop
js
jo
jo
or
add
or
or
pop
or
add
push
push
inc
push
and
in
inc
mov
adc
sahf
je
add
add
pusha
and
add
inc
add
add
add
inc
add
inc
add
add
add
inc
add
(bad)
(bad)
inc
add
add
add
add
inc
add
inc
add
add
add
add
inc
add
add
test
inc
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
dec
push
inc
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
mov
add
add
add
add
add
add
push
inc
add
push
inc
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
fild
add
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
cmovb
push
cmovb
add
add
test
inc
add
add
add
(bad)
(bad)
inc
add
add
add
stos
jmp
add
mov
add
add
(bad)
(bad)
inc
add
add
add
sub
inc
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
jmp
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
out
inc
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
repnz
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
inc
add
test
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
stc
inc
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
cld
inc
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
push
inc
add
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
jmp
inc
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
sbb
add
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
sbb
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
xor
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
inc
add
add
inc
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
dec
inc
add
add
add
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
inc
inc
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
dec
pop
inc
add
pop
inc
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
cmp
add
inc
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
jmp
pop
inc
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
fs
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
push
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
jge
add
inc
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
adc
add
add
add
mov
mov
add
push
add
mov
push
add
les
add
(bad)
push
add
jmp
add
add
and
add
cs
add
inc
pop
add
pop
pop
add
push
add
jp
add
mov
add
pushf
pop
add
lods
pop
add
mov
pop
add
ficom
add
jmp
add
add
sub
add
cmp
add
dec
sbb
add
add
add
jbe
add
mov
add
xchg
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
dec
sbb
add
add
sbb
add
add
mov
add
test
add
(bad)
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
bound
add
js
add
nop
sbb
add
add
enter
(bad)
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
pop
sbb
add
add
add
(bad)
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
push
sbb
add
sbb
add
add
pop
sbb
add
add
jle
add
nop
sbb
add
sbb
add
sbb
add
sbb
add
add
add
push
popa
imul
jo
imul
inc
gs
popa
jae
inc
jb
outs
jb
add
add
inc
popa
fs
gs
fs
je
add
pop
add
imul
jb
je
arpl
and
inc
gs
jb
arpl
fs
jae
add
test
gs
outs
fs
gs
popa
outs
fs
gs
add
sbb
dec
jne
je
inc
jns
gs
outs
push
imul
mov
ins
jae
jb
outs
inc
add
jp
push
imul
outs
dec
jne
je
inc
jns
add
jb
outs
push
add
cmc
add
je
outs
fs
gs
imul
add
hlt
add
je
outs
fs
gs
imul
add
icebp
add
fs
imul
add
dec
add
gs
gs
jne
arpl
add
add
imul
jae
jne
arpl
add
add
imul
outs
jne
arpl
add
add
fs
gs
jne
arpl
add
add
outs
fs
gs
jne
arpl
add
add
fs
xor
dec
gs
add
inc
add
outs
jae
dec
popa
outs
fs
add
jne
xor
inc
imul
inc
jb
popa
je
push
outs
outs
ins
push
xor
popa
jo
push
stos
add
je
jne
jb
outs
je
jb
arpl
jae
add
inc
jb
popa
je
inc
imul
jb
popa
je
inc
imul
gs
outs
fs
gs
popa
outs
fs
gs
add
push
add
imul
ins
ins
outs
arpl
add
push
imul
jb
add
jo
jb
add
and
inc
gs
jb
arpl
jae
gs
jo
add
jb
gs
imul
popf
add
popa
jo
ins
ins
outs
arpl
dec
inc
push
dec
inc
dec
xor
cs
ins
add
movs
add
popa
jo
gs
ins
ins
outs
arpl
outs
add
je
outs
ins
ins
popa
outs
fs
imul
inc
gs
gs
inc
jb
je
arpl
push
arpl
outs
add
add
jbe
inc
jb
je
arpl
push
arpl
outs
add
fld
inc
outs
je
jb
jb
je
arpl
push
arpl
outs
add
lahf
add
popa
jo
jb
popa
je
add
and
ins
gs
add
inc
js
je
jb
arpl
jae
lea
jb
je
inc
imul
je
je
dec
popa
outs
fs
add
cmps
add
popa
jo
imul
push
gs
imul
outs
arpl
jae
add
inc
jne
jb
outs
je
jb
arpl
jae
ds
outs
push
gs
js
gs
imul
gs
add
push
outs
push
gs
js
gs
imul
gs
rol
dec
jae
bound
addr16
jb
jae
outs
je
add
gs
outs
outs
jae
ins
gs
push
add
xchg
add
je
outs
outs
jae
ins
gs
outs
fs
push
fs
imul
ins
jae
gs
popa
ins
jne
add
add
ins
jae
ins
ins
outs
arpl
add
push
gs
popa
ins
jne
add
add
ins
jae
jb
gs
add
je
jb
outs
arpl
fs
outs
arpl
ins
outs
je
add
add
je
popa
jae
inc
jb
outs
jb
add
inc
jne
jb
outs
je
push
dec
add
mov
gs
outs
arpl
fs
arpl
ins
outs
je
add
inc
ins
jne
push
inc
jne
data16
add
fild
push
gs
imul
gs
add
add
je
popa
outs
fs
gs
outs
jne
je
add
add
je
imul
cmp
inc
gs
je
jb
jne
dec
outs
outs
inc
add
push
outs
ja
outs
add
inc
jb
gs
outs
jbe
jb
outs
ins
outs
je
je
imul
add
je
outs
jbe
jb
outs
ins
outs
je
je
imul
inc
jb
gs
outs
jbe
jb
outs
ins
outs
je
je
imul
add
je
outs
jbe
jb
outs
ins
outs
je
je
imul
push
add
gs
push
gs
outs
jb
popa
outs
arpl
outs
jne
je
jb
data16
je
imul
je
add
inc
gs
jns
je
ins
push
imul
ins
gs
imul
outs
imul
inc
jb
je
arpl
push
arpl
outs
inc
outs
fs
jo
outs
inc
outs
jne
je
pop
add
je
push
dec
outs
outs
add
inc
gs
inc
push
add
adc
inc
gs
inc
dec
inc
push
add
fild
dec
jae
popa
ins
imul
add
inc
outs
ins
jo
jb
push
je
imul
add
ins
jo
jb
push
je
imul
add
je
outs
jbe
jb
outs
ins
outs
je
popa
jb
popa
bound
add
je
inc
outs
outs
jae
ins
gs
add
inc
outs
outs
jae
ins
gs
jne
jo
je
push
add
mov
jb
je
inc
outs
outs
jae
ins
gs
add
add
je
je
dec
popa
outs
fs
add
call
dec
outs
arpl
gs
outs
outs
inc
add
loope
dec
inc
dec
popa
jo
je
imul
add
popa
jo
je
imul
add
je
je
imul
inc
add
inc
add
je
je
imul
push
add
int
push
gs
outs
fs
inc
imul
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
xor
inc
add
in
add
add
add
add
add
add
add
out
add
add
add
add
add
add
add
add
add
out
add
add
add
add
add
add
add
inc
add
add
add
add
aas
inc
push
je
jo
pop
imul
inc
lock
add
add
add
add
aas
inc
push
bound
pop
popa
ins
ins
outs
arpl
je
inc
inc
add
add
add
add
aas
inc
push
gs
gs
imul
inc
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
pop
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
or
add
ins
add
add
add
add
add
add
add
sbb
add
jb
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
cmps
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
or
add
or
add
or
add
add
add
inc
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
test
add
add
cmc
inc
add
add
add
add
add
cmc
inc
add
add
add
hlt
inc
add
add
add
add
nop
hlt
inc
add
add
add
add
add
add
inc
add
add
add
inc
add
add
add
repz
add
add
add
add
ins
repz
add
add
add
add
add
add
repnz
add
add
add
add
add
add
add
icebp
inc
add
add
add
inc
add
add
hlt
lock
add
add
in
inc
add
add
add
lock
add
add
add
lock
add
inc
add
inc
inc
add
add
add
inc
inc
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
add
inc
add
(bad)
(bad)
inc
add
add
cli
inc
add
cli
inc
add
inc
add
cli
inc
add
inc
add
inc
add
cli
inc
add
inc
add
cli
inc
add
stc
inc
add
stc
inc
add
inc
add
stc
inc
add
add
add
add
add
inc
add
stc
inc
add
stc
inc
add
clc
inc
add
clc
inc
add
clc
inc
add
clc
inc
add
clc
inc
add
add
add
inc
add
clc
inc
add
clc
inc
add
test
int3
test
cwde
stc
inc
add
add
add
inc
mov
add
add
pop
add
add
add
or
add
xor
inc
add
mov
xor
inc
add
mov
xor
inc
add
mov
xor
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
add
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
add
add
add
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
add
arpl
addr16
ins
outs
outs
jo
jb
je
jbe
js
jp
add
add
add
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
add
sub
add
add
movs
add
add
jns
and
add
add
add
cmps
fild
add
add
add
add
add
add
add
cmp
add
add
mov
add
cmp
add
inc
inc
add
add
add
mov
add
cmp
add
inc
inc
add
add
add
mov
in
call
add
add
add
add
mov
add
add
push
ficomp
and
pop
fisubr
xor
adc
add
xor
inc
add
add
(bad)
inc
add
add
add
add
add
and
inc
add
cs
add
cs
add
cs
add
cs
add
add
add
xor
test
inc
add
or
mov
inc
add
inc
add
cs
add
add
add
cs
add
sub
add
add
and
add
add
add
test
inc
add
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
add
or
add
or
add
or
add
inc
add
or
add
or
add
or
add
inc
add
or
lock
in
inc
add
or
fmul
inc
add
or
mov
or
or
add
add
add
add
add
inc
add
add
add
das
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
jg
jg
jg
add
inc
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
icebp
(bad)
inc
add
add
push
add
push
add
inc
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
call
add
add
add
add
add
js
add
xchg
add
add
add
add
add
add
add
add
add
add
add
ins
add
add
(bad)
(bad)
call
add
add
add
add
add
ja
add
xchg
add
add
add
repnz
add
add
add
add
add
add
ins
add
add
add
add
add
or
add
and
add
cmp
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
add
add
jecxz
add
add
add
add
add
inc
add
cmp
add
in
add
add
add
add
pop
add
add
cli
mov
(bad)
aaa
push
mov
pop
add
mov
mov
xor
outs
push
(bad)
xor
popa
push
push
mov
jge
pop
mov
imul
loope
imul
mov
js
stos
add
xor
shl
jge
sub
retf
cmp
test
push
cmps
iret
cmp
add
imul
push
in
lods
dec
rcr
mov
call
cmps
out
cmps
push
lods
lock
aad
(bad)
pop
push
nop
or
fadd
cmp
int3
scas
xchg
fs
push
neg
jns
cld
adc
pop
jge
pop
dec
sub
xchg
addr16
imul
div
push
add
outs
push
push
sar
xor
push
cmp
and
js
mov
movs
mov
push
repz
fwait
rol
retf
mov
aam
cli
sub
jecxz
sub
push
ins
nop
push
add
mov
cmc
or
or
test
imul
and
call
ss
jle
xchg
inc
in
pop
in
lea
popf
(bad)
mov
xchg
add
push
pop
cli
ja
mov
mov
mov
inc
xchg
int3
inc
jnp
push
ins
jecxz
or
addr16
cs
cdq
and
call
arpl
pop
mov
or
push
jp
aam
ins
or
xchg
repz
(bad)
(bad)
jmp
jge
push
dec
adc
movnti
(bad)
in
stos
mov
and
xchg
stos
cmps
adc
lea
push
outs
cmp
mov
mov
push
scas
into
in
dec
dec
dec
xchg
stc
pop
cmp
test
jg
pop
loopne
push
cli
les
dec
jnp
jmp
jle
mov
sub
mov
rol
std
sbb
imul
push
mov
push
jns
xlat
ins
xchg
mov
and
shl
and
aad
or
mov
(bad)
mov
out
cli
jmp
sbb
bound
pop
mov
lods
dec
push
in
and
hlt
jmp
adc
imul
outs
fwait
push
fdivp
add
adc
jle
mov
pop
aaa
dec
fisttp
(bad)
xchg
xchg
or
(bad)
add
call
jbe
int3
cmp
push
jmp
mov
(bad)
aas
stos
and
daa
add
pop
jl
scas
dec
jmp
fcom
ret
dec
dec
pop
jg
scas
sbb
sahf
mov
xor
pop
mov
popf
retf
arpl
xchg
outs
cli
dec
fld
inc
mov
aam
push
push
dec
outs
ss
in
outs
lock
adc
cld
repnz
mov
popf
xor
aam
or
or
mov
and
ds
int3
(bad)
rep
and
popa
mov
or
or
cmps
fstp
sti
jmp
xchg
mov
in
and
dec
jbe
adc
sbb
ret
xor
test
call
lock
test
cmp
push
pop
jle
xor
nop
push
cwde
int3
out
add
cwde
std
cli
xchg
pop
jmp
ins
mov
dec
cmps
pop
jbe
icebp
or
cs
xchg
pushf
int3
test
inc
rol
mov
xchg
add
addr16
xor
sub
into
(bad)
(bad)
arpl
lahf
jno
popa
sbb
or
fcmove
repnz
mov
les
inc
movs
outs
push
jp
fcmovnb
ret
mov
loopne
fwait
rep
(bad)
pop
push
icebp
movs
xchg
scas
dec
and
mov
mov
xor
fs
mov
cdq
out
or
mov
sub
lahf
dec
inc
xchg
fst
or
mov
lock
ror
dec
std
or
xlat
jp
mov
pop
mov
jmp
fs
aam
push
push
into
rcr
mov
dec
mov
je
adc
mov
cld
outs
int
(bad)
jno
ret
fcom
inc
cmp
jge
mov
push
mov
sbb
lock
arpl
mov
int
int3
pop
jp
dec
arpl
repnz
jae
fdivp
mov
jns
nop
xlat
out
jnp
inc
in
pop
addr16
fs
jno
imul
and
adc
pop
pop
lock
mov
xor
shl
jns
fld
jmp
fistp
jmp
pushf
sbb
cmp
and
cs
push
call
je
push
xchg
outs
jp
imul
dec
gs
push
movs
test
icebp
jge
add
jae
adc
mov
in
stc
pop
(bad)
fisubr
mov
xor
ins
mov
dec
dec
and
jae
imul
or
add
fdivr
dec
aaa
ins
jmp
mov
mov
sar
fnstsw
and
cmp
(bad)
iret
adc
nop
lods
ret
in
or
and
and
dec
out
push
mov
data16
jmp
inc
in
test
cmp
stos
addr16
xchg
mul
loopne
movs
(bad)
or
inc
jne
fdivr
jg
or
imul
fsub
fwait
movs
movs
ret
or
fiadd
std
in
fdivr
js
dec
add
jae
jmp
enter
cmp
inc
(bad)
loope
add
sbb
stos
daa
jl
add
dec
jb
popa
jno
jge
fisub
das
pop
mov
and
mov
dec
mov
or
or
push
inc
cmp
inc
mov
cmp
das
cmp
mov
out
gs
loop
cdq
dec
mov
jecxz
jle
ds
jne
int
stos
ret
hlt
repnz
jns
inc
inc
cmp
nop
mov
mov
scas
and
jnp
inc
and
and
push
call
jns
ins
repz
mov
movs
mov
mov
fwait
lds
push
inc
das
jle
jecxz
(bad)
mov
imul
jl
cmp
rcl
(bad)
lock
test
cmp
or
call
push
xchg
push
mov
loope
mov
pop
or
ret
cmp
ja
mov
and
jno
call
stos
push
dec
ret
inc
clc
scas
xchg
and
jp
sbb
cmps
push
sti
(bad)
bound
js
inc
xor
popa
daa
es
daa
pop
mov
int3
loop
test
cmp
out
stos
cmps
int3
xchg
enter
bound
call
out
jae
or
lock
xchg
xor
lods
mov
cmc
inc
jg
shl
cmps
and
push
stos
gs
int
mov
in
loopne
inc
add
fild
push
mov
and
mov
cld
adc
add
jmp
loopne
inc
es
jge
mov
enter
aaa
mov
cmp
in
les
lahf
cmps
pop
and
xor
pop
lock
inc
mov
push
rcr
lods
add
pop
jecxz
clc
push
ret
lahf
dec
xchg
hlt
xchg
xlat
lock
arpl
mul
or
fnstenv
xchg
into
add
pop
mov
inc
add
adc
iret
popa
jg
dec
mov
mov
loop
bound
cmp
add
jmp
mov
dec
cmp
icebp
pop
mov
sbb
cs
and
arpl
push
fmul
imul
add
(bad)
xchg
mov
pop
mov
add
adc
mov
fdivr
and
cmc
adc
jbe
jle
mov
or
idiv
pop
pop
gs
sub
nop
call
call
and
nop
mov
loope
popf
xor
xor
mov
lahf
inc
mov
arpl
pop
sahf
out
pop
or
mov
test
in
ins
std
push
dec
sub
push
inc
(bad)
ds
sbb
je
adc
ret
push
bound
retf
xchg
ja
sti
leave
inc
sub
out
(bad)
aam
sub
cmp
loopne
or
sub
rcr
inc
nop
pop
rol
xor
inc
fdiv
mov
mov
xchg
and
call
mov
ss
cmps
shl
mov
jge
hlt
inc
or
out
imul
jne
es
mov
sub
retf
das
test
adc
ret
and
hlt
cmp
aad
mov
fcmovu
stos
jne
pop
popf
outs
jg
leave
adc
in
add
push
or
xor
pop
loop
scas
dec
adc
loope
push
pop
push
test
jno
jmp
mov
jg
aad
mov
push
rcr
leave
test
idiv
mov
mov
dec
scas
fadd
in
and
shl
dec
add
jecxz
jecxz
or
and
add
jnp
je
cmps
lods
sub
pusha
pop
or
add
sbb
sub
mov
dec
jg
sub
imul
fidivr
int3
dec
bound
sub
jg
fisub
mov
xor
jo
xchg
and
and
mov
test
outs
stos
pop
bswap
push
jle
mov
int
inc
(bad)
sub
push
nop
neg
nop
(bad)
movs
mov
push
and
inc
inc
and
jge
loopne
arpl
pop
scas
adc
aad
add
mov
pop
dec
das
pop
out
pop
jmp
inc
sbb
(bad)
mov
stos
inc
sub
(bad)
mov
cwde
cmp
(bad)
mov
stos
and
pop
add
xchg
sbb
adc
xor
xor
adc
js
outs
adc
das
jecxz
rcl
jl
addr16
and
xchg
mov
mov
pop
push
or
pusha
mov
mov
(bad)
lds
xchg
lock
dec
sub
mov
pop
dec
cmp
jle
les
adc
out
rcl
outs
xor
inc
cmp
retf
push
sti
jge
xchg
dec
stc
cdq
jl
xor
mov
cmc
cmps
int3
lods
fimul
mov
fstp
push
ins
add
enter
(bad)
pushf
stos
sub
inc
adc
pop
out
pop
mov
out
pop
not
sbb
ins
xchg
not
and
mov
lahf
fnsave
aaa
dec
ret
mov
or
or
jmp
cmp
xor
test
xchg
cld
mov
inc
push
sub
pushf
mov
outs
adc
stos
shl
movs
or
fsubr
xor
fs
(bad)
mov
mov
repnz
xor
add
pushf
mov
dec
sar
(bad)
jle
and
shr
in
popa
dec
cmp
bswap
call
dec
daa
sbb
add
xchg
pop
dec
pop
daa
aaa
jbe
mov
retf
jmp
lahf
daa
jbe
pop
xchg
push
(bad)
mov
arpl
mov
mov
dec
cmp
jns
ret
jnp
add
fstp
jae
inc
adc
push
jecxz
mov
nop
cwde
(bad)
push
popa
jns
push
add
dec
inc
inc
cld
(bad)
pop
mov
mov
mov
adc
push
mov
or
mov
(bad)
jl
or
loope
inc
dec
out
js
loope
sar
ficom
pop
adc
jne
mov
mov
ret
add
call
icebp
js
push
cli
inc
jo
jg
ret
jbe
jg
fidivr
out
adc
mov
xlat
not
aas
cmc
or
and
jae
mov
call
push
iret
xor
or
dec
leave
dec
ss
clc
inc
sub
data16
sbb
xchg
ficom
jo
test
aam
mov
fsub
cwde
into
jecxz
popa
mov
fcomp
scas
and
clc
pop
mov
push
clc
jmp
outs
aas
scas
mov
or
cmp
add
movs
aaa
les
les
fild
(bad)
push
stc
sti
dec
mov
xchg
jg
push
fidiv
mov
xchg
mov
gs
and
sub
sbb
stos
and
mov
ret
outs
adc
xor
jge
jno
jmp
push
pop
sbb
mov
add
xor
add
jae
cmp
in
mov
(bad)
jno
sub
mov
inc
rcr
jo
aam
inc
pop
add
add
js
lock
out
daa
in
out
or
into
inc
sti
repz
outs
xor
loope
movs
movs
popa
sbb
mov
(bad)
jbe
dec
mov
jbe
add
pop
mov
lds
pop
push
xor
or
outs
and
jg
(bad)
sub
test
in
dec
push
xchg
mov
jge
lods
call
xor
and
cmps
jl
or
jp
push
and
test
jl
adc
mov
dec
push
jmp
je
gs
dec
shl
xor
jbe
lods
lods
(bad)
push
or
dec
arpl
dec
sbb
adc
jl
not
xchg
(bad)
int3
and
out
movs
shl
xor
xor
sti
mov
inc
or
out
jo
enter
push
cmp
shl
imul
and
out
int
pop
movs
jmp
xchg
pop
lods
movs
xor
jecxz
in
into
sbb
cs
scas
std
jecxz
ins
inc
push
popa
fild
stos
std
mov
adc
and
dec
ror
pop
jno
cmp
in
je
into
sbb
loopne
call
jo
bound
(bad)
fcom
mov
inc
js
cs
(bad)
xchg
lods
repz
cs
ret
xchg
push
and
cmp
mov
aad
dec
mov
xchg
pop
jne
fwait
loope
add
sub
loopne
imul
in
ficom
adc
xor
and
push
pop
xlat
sbb
xor
and
pop
stc
cwde
mov
mov
lahf
retf
xor
arpl
and
pop
ret
jb
jg
popf
clc
bound
add
es
and
and
add
xor
clc
mov
idiv
call
rcl
or
jge
(bad)
movs
jns
neg
inc
cld
push
xchg
mov
inc
and
loopne
cmp
sbb
xchg
mov
push
mov
cmps
mov
jns
xor
and
xchg
mov
xchg
je
popa
sub
jmp
ficom
or
or
pop
jb
dec
and
jge
cmp
or
jno
mov
imul
pop
rcr
ret
int3
movs
lods
jg
in
movs
(bad)
push
sub
stos
and
xor
mov
cmp
repnz
mov
xchg
fdivr
jge
cwde
mov
imul
ss
gs
jecxz
pop
pop
pushf
rcl
call
inc
test
lock
or
mov
cmp
mov
adc
ja
adc
les
sahf
xor
push
push
js
xchg
cld
popf
cmp
(bad)
xor
xor
lods
enter
pop
mov
cwde
jnp
xlat
xor
cwde
and
sbb
cmp
pop
adc
dec
ins
pushf
push
fld
jno
(bad)
nop
sbb
cmp
xor
ins
outs
pop
xchg
rol
ds
jmp
cmc
fmul
pop
stos
sub
jmp
retf
dec
call
dec
mov
pop
loopne
mov
les
inc
sbb
(bad)
rol
xlat
cli
in
lods
add
pop
cmps
push
mov
or
mov
sbb
adc
jae
xchg
mov
int
xor
mov
icebp
sahf
push
sbb
inc
ret
pop
rcl
inc
hlt
movs
out
loop
and
(bad)
fmul
mov
ret
or
call
bound
jnp
pop
sbb
scas
lods
mov
popf
mov
and
pop
jae
addr16
fld
out
hlt
inc
xlat
outs
ins
mov
fisub
test
inc
out
fcom
cmp
mov
sbb
and
xchg
push
and
sti
retf
dec
sbb
add
inc
fiadd
xchg
cmc
js
(bad)
enter
mov
mov
adc
xchg
mov
mov
popf
mov
ret
cmp
dec
jle
dec
ret
js
and
or
mov
vunpckhpd
rcr
push
das
(bad)
jbe
test
hlt
clc
(bad)
pop
mov
pop
mov
mov
cli
pop
repz
xchg
cmp
mov
cmp
enter
or
inc
and
jae
xor
lock
jp
div
push
call
adc
mov
cmp
ror
mov
inc
and
adc
and
pop
sbb
cmc
pop
repnz
cld
jp
xor
das
(bad)
dec
push
push
pusha
add
dec
jmp
xchg
cmps
sar
lds
add
aad
pop
inc
hlt
cmp
dec
pop
retf
(bad)
or
sub
loop
cmp
sti
push
and
xchg
adc
xchg
mov
(bad)
fld
stc
inc
xchg
cmp
popa
retf
lock
popf
sahf
add
fist
mov
push
ss
lock
mov
pop
push
jg
stos
leave
add
jno
aam
(bad)
ffreep
mov
xchg
hlt
adc
mov
and
fidiv
jmp
sahf
jnp
imul
and
aaa
retf
movs
sti
inc
cdq
loop
arpl
cli
mov
aad
addr16
call
sub
stc
xor
xchg
mov
into
lea
pop
push
inc
into
or
aam
push
sub
sbb
adc
sar
push
inc
mov
fimul
mov
fldcw
fsubr
dec
and
mov
dec
mov
sti
mov
and
inc
adc
xor
push
mov
mov
mov
test
mov
stos
iret
cs
pop
aaa
js
stos
fadd
(bad)
xchg
mov
ror
xchg
pop
xchg
cmp
mov
inc
xchg
arpl
xor
sub
das
in
retf
aam
fild
sbb
rcr
or
mov
cmps
mov
pushf
addr16
jmp
xlat
es
popf
sub
fwait
sub
(bad)
test
xor
cmp
and
add
jl
loope
sbb
or
retf
push
lods
movhps
mov
mov
or
fisubr
mov
(bad)
pop
mov
test
ror
shr
sbb
es
sbb
jns
cmc
outs
push
jle
repnz
outs
dec
xor
xchg
clc
add
push
fcmovnbe
leave
idiv
push
cmp
or
xchg
add
cmp
mul
imul
mov
push
mov
les
retf
std
jl
cmp
leave
addr16
out
jmp
or
mov
dec
imul
je
rcr
add
xor
repz
(bad)
push
mov
and
xor
aas
dec
xchg
fsub
js
jo
int3
ret
pop
ins
sub
pop
into
mov
sub
lds
retf
inc
int3
push
inc
pop
add
clc
adc
lea
push
push
jge
imul
cmp
shl
out
enter
icebp
cmps
aam
push
xchg
sbb
cld
loopne
xchg
mov
scas
pop
test
mov
or
push
shl
pop
add
(bad)
mov
add
movs
mov
imul
cmps
lock
pop
inc
mov
(bad)
and
dec
jl
inc
xor
inc
ror
pop
stc
ret
add
inc
sub
mov
inc
cmps
cwde
pop
add
mov
and
cdq
lahf
in
xchg
inc
pop
mov
not
adc
adc
mov
in
sar
pop
nop
mov
les
mov
in
push
adc
ins
inc
push
push
pop
jmp
pcmpeqd
xchg
dec
scas
sub
aaa
fcomp
add
fnstcw
repz
stc
jmp
pop
xchg
rcl
or
mov
mov
cmc
neg
cmp
test
mov
les
mov
xchg
inc
daa
or
ret
das
rcl
xor
cmp
cs
dec
sub
imul
inc
js
jge
sub
es
xchg
cmp
aas
push
lahf
mov
xchg
cs
or
test
ins
lods
mov
jne
and
mov
mov
pop
lods
and
shr
jle
push
int3
retf
mov
test
fdivr
push
dec
rol
into
scas
pop
and
cdq
enter
(bad)
je
add
test
xor
call
bound
pop
xor
call
cld
retf
sbb
xchg
ret
data16
not
fs
add
jmp
pop
adc
loopne
mov
(bad)
xchg
sub
jecxz
(bad)
ror
pop
add
das
and
push
inc
imul
ins
fidivr
xchg
xchg
xor
mov
push
ins
mov
jp
loop
pop
lods
inc
movs
rcr
rol
retf
dec
adc
(bad)
xor
scas
xchg
xchg
fmul
cdq
pop
out
ror
cdq
pop
call
jge
bound
popf
or
jbe
sahf
xor
jmp
nop
lds
in
lds
mov
test
inc
mov
xchg
mov
mov
das
xor
fdiv
into
stos
dec
sar
mov
sub
bound
jge
xchg
xor
and
inc
icebp
lock
(bad)
mov
adc
aad
(bad)
into
or
xchg
cmc
lds
xchg
lods
mov
gs
xchg
and
test
cld
out
fld
dec
sub
fs
jecxz
imul
fucomip
sub
mov
test
mov
repnz
imul
shl
mov
pop
add
push
push
pcmpgtd
and
lea
mov
in
retf
jo
mov
adc
les
mov
iret
shr
inc
pop
xchg
cli
xchg
xor
cmp
ret
xchg
xchg
js
push
dec
fsub
mov
stos
ds
mov
push
and
inc
mov
xchg
loop
inc
out
bound
(bad)
add
arpl
sbb
mov
mov
bound
(bad)
jecxz
out
rcr
mov
jl
xchg
(bad)
mov
std
jne
ret
xchg
cld
outs
add
jbe
jbe
popa
pop
and
and
push
push
adc
rol
out
(bad)
loope
stc
div
dec
bound
cmp
dec
arpl
cmps
movs
inc
lea
rcr
adc
mov
fld
into
int
sbb
mov
mov
jno
scas
dec
xchg
call
or
aaa
jae
fwait
sub
inc
adc
jns
and
ss
in
xchg
(bad)
loopne
mov
jmp
lods
xor
(bad)
jle
jbe
aam
adc
stos
dec
daa
jle
and
sub
xchg
shr
fcmovnbe
xchg
(bad)
inc
popa
cmc
loope
adc
cdq
or
and
adc
inc
adc
sub
pop
or
mov
xchg
aad
jo
retf
cmp
fdiv
sub
xchg
dec
cmp
mov
call
sbb
(bad)
mov
jbe
in
pop
and
inc
cmp
imul
inc
ss
mov
jns
ja
fsubr
xlat
jns
jno
stos
sbb
xchg
inc
or
jo
rcl
xor
pop
sahf
cmc
cld
inc
pusha
sbb
movs
data16
nop
push
mov
daa
lds
aad
cmps
shl
sub
ror
cmp
std
sub
cmp
cld
push
jne
add
in
mov
cmps
xchg
das
(bad)
mov
jno
dec
cdq
mov
(bad)
xchg
pop
push
call
mov
bound
inc
sar
outs
clc
or
test
js
xchg
or
gs
hlt
stos
cmp
iret
nop
mov
(bad)
into
fsubr
and
jae
jo
(bad)
mov
push
cmp
mov
dec
int3
cmp
fdivr
in
pop
inc
dec
and
les
push
pop
cmc
dec
fcom
icebp
lods
adc
pop
jae
dec
xchg
mov
push
lods
inc
xor
jmp
dec
add
mov
cmp
mov
fmul
popf
(bad)
out
or
jo
mov
fdivr
stos
shr
or
fdivr
js
dec
push
jns
in
neg
enter
fwait
sub
cmp
add
jmp
sub
sahf
dec
mov
lods
dec
sbb
repnz
retf
(bad)
scas
mov
in
ds
mov
gs
push
pop
jo
push
aas
inc
in
js
and
and
xchg
and
cmps
(bad)
hlt
add
dec
les
cli
jne
aaa
or
mov
mov
jmp
ins
sub
xor
jmp
call
or
jns
xor
shl
xchg
aaa
mov
test
cwde
adc
pop
add
xor
and
mov
sub
das
call
xchg
ret
cmp
rol
arpl
add
sbb
mov
ins
rcr
inc
ror
imul
xchg
loopne
daa
imul
mov
fild
and
mov
adc
gs
mov
fwait
pop
ja
sub
clc
xor
mov
sub
scas
xor
jmp
(bad)
shl
iret
cmp
test
(bad)
clc
mov
xchg
movs
or
das
add
sahf
movs
imul
call
rol
push
cmp
das
mov
inc
xchg
nop
(bad)
fisubr
inc
mov
jae
sub
xchg
daa
sti
jmp
cdq
jg
test
cmc
aad
adc
jle
aas
adc
sbb
and
sub
add
into
and
and
repnz
test
push
dec
out
mov
pop
fcomp
daa
xor
inc
mov
repnz
xchg
mov
add
xchg
popa
dec
in
cmc
mov
and
cmp
and
cmp
inc
adc
add
dec
mov
jge
(bad)
stos
inc
jae
movs
(bad)
fidivr
jb
pop
aam
dec
shl
and
pop
pusha
adc
clc
test
arpl
pop
jae
push
aad
mov
out
cmp
fisub
pop
pop
xchg
cvtpi2ps
imul
push
sbb
aaa
fcomp
das
add
or
xor
adc
xchg
jmp
jle
sbb
cmp
push
mov
jp
dec
or
mov
cld
ret
xor
mov
iret
in
xchg
out
mov
lea
aam
lock
fwait
iret
pop
mov
int
sbb
mov
popa
dec
pushf
pop
pusha
mov
cmc
test
pop
outs
jecxz
mov
xor
lds
xor
fmul
mov
out
mov
xchg
fs
es
jae
arpl
out
jnp
outs
sbb
in
push
jno
fisttp
or
iret
inc
retf
cmp
add
mov
dec
jl
outs
pop
jnp
push
pop
jecxz
and
idiv
(bad)
jmp
enter
ins
sub
mov
sti
inc
lods
lahf
cmps
mov
pop
mov
mov
loope
cdq
icebp
outs
lea
gs
cmps
jge
mov
arpl
push
or
push
stos
fwait
dec
fwait
add
cmps
int3
leave
(bad)
sti
pop
xor
imul
push
and
fcom
sub
ins
repz
xchg
fsub
xor
push
xlat
sub
fld
or
pop
add
mov
add
pop
outs
push
mov
xchg
sbb
dec
xor
push
jb
jle
xchg
mov
je
add
sbb
ja
xor
clc
test
mov
xor
xor
stos
push
cmps
pop
mov
xchg
popf
inc
push
lahf
out
xchg
cs
inc
dec
outs
jp
sahf
pop
in
jnp
push
and
out
or
xchg
add
adc
cmp
not
mov
dec
in
xor
lods
sub
fmul
lods
popa
ret
ror
fisub
jmp
(bad)
ins
push
inc
rcl
lods
inc
int3
mov
mov
and
mov
ret
cmps
jle
dec
cmps
xchg
adc
js
aas
repz
mov
test
sub
in
xor
icebp
mov
cmps
int3
repnz
sub
adc
js
adc
mov
aad
mov
loop
add
arpl
cmp
popa
jle
add
cmp
inc
data16
iret
xor
jge
sahf
and
cdq
rcl
out
test
bound
fisttp
rcl
pop
or
in
add
imul
sbb
or
cli
xchg
mov
cmps
fistp
jae
hlt
mov
or
sbb
(bad)
out
push
adc
call
cli
mov
aas
and
arpl
push
xor
loope
scas
mov
pop
adc
clc
bound
xor
jge
leave
pop
scas
mov
or
or
or
mov
adc
pushf
js
stc
repnz
xchg
test
add
dec
or
scas
xchg
cmp
dec
mov
push
iret
jg
fild
pop
xchg
ret
repz
pop
idiv
ins
out
dec
jmp
push
scas
cmps
das
mov
add
adc
push
jle
mov
sbb
mov
loope
push
mov
outs
pop
mov
cmps
and
fstp
mov
in
mov
add
sub
ja
lods
cmp
mov
div
leave
sbb
jge
jle
jmp
cwde
repnz
xchg
sbb
movs
cmp
sbb
mov
cli
push
and
aas
inc
dec
mov
or
fistp
xchg
jno
pop
inc
jg
pop
add
pop
lahf
push
add
fdiv
mov
cmp
mov
aas
into
ret
test
bound
in
xchg
in
imul
xchg
or
inc
ret
cmp
pop
xchg
movs
mov
add
bound
dec
int
and
hlt
cmp
push
cmp
hlt
iret
or
ret
xchg
sbb
push
clc
movs
sub
jno
add
popa
xchg
stc
loop
xor
push
es
dec
jno
add
inc
aam
aam
xor
jnp
mov
outs
and
test
leave
xchg
pop
inc
mov
icebp
movs
lea
in
test
dec
mov
(bad)
pop
aad
and
adc
out
jne
xchg
ret
outs
jge
mov
enter
xchg
repz
shr
cmp
mov
add
scas
mov
xchg
out
mov
aam
adc
icebp
sbb
adc
fstp
popa
sbb
movs
or
mov
lock
lock
cmp
add
push
iret
test
push
cdq
push
mov
repnz
and
or
inc
popf
mov
xchg
fild
imul
or
fdiv
aas
cmps
clc
jmp
daa
iret
retf
bound
fmul
xchg
aam
mov
out
into
dec
retf
fs
rcr
sub
std
jl
cmc
repz
shr
add
and
xchg
retf
ffreep
pop
xchg
fwait
xchg
enter
dec
ret
jne
mov
or
xor
pop
sub
in
cmps
repz
mov
mov
mov
outs
jp
adc
or
mov
leave
in
pop
mov
push
iret
test
mov
pop
jp
out
daa
mov
xor
mov
jmp
js
jnp
pop
dec
stc
mov
nop
fdivr
add
clc
ds
popa
inc
ja
jbe
popf
cmp
popa
addr16
inc
dec
clc
mov
or
push
xchg
sub
(bad)
mov
push
add
mov
std
out
dec
xchg
test
inc
pop
out
fild
test
test
ss
rol
or
in
xor
out
sbb
or
push
mov
inc
and
dec
gs
pop
and
icebp
or
adc
and
push
add
sub
cmp
out
push
sub
pop
enter
inc
inc
xchg
ins
out
xchg
call
jne
jle
sub
int
lds
dec
test
cld
xor
cmp
call
adc
(bad)
hlt
cmps
xchg
and
fstp
movs
sbb
jne
mov
mov
mov
fcom
leave
pop
and
(bad)
gs
sub
mov
sbb
xor
jae
lahf
shl
repnz
adc
ror
sub
inc
ds
cmp
push
adc
inc
loop
movs
pop
fnsave
aam
cdq
mov
xor
jo
mov
out
aas
rcl
(bad)
(bad)
add
jl
movs
aad
xchg
fdiv
movs
ss
push
xor
(bad)
sub
xor
sbb
bnd
ds
arpl
scas
add
xor
gs
sar
or
adc
lahf
xlat
inc
inc
ss
jmp
sbb
daa
lds
jg
jmp
movs
call
neg
enter
out
(bad)
sbb
cmps
and
scas
or
lods
xor
repnz
or
mov
mov
mov
inc
repnz
mov
(bad)
sbb
dec
ins
add
xchg
xor
call
push
mov
out
(bad)
pop
ss
inc
pop
sbb
(bad)
push
daa
(bad)
push
jge
and
add
gs
fbld
imul
call
stos
addr16
sub
mov
mov
inc
push
or
adc
repz
add
dec
mov
lahf
dec
inc
push
push
mov
sub
jl
ret
aas
inc
int3
shr
inc
pop
popw
es
mov
iret
sbb
popf
add
push
dec
mov
data16
outs
out
ss
jns
inc
sbb
or
add
dec
xchg
xchg
adc
loope
mov
fwait
jbe
(bad)
cdq
movs
push
fisub
push
xchg
shr
loop
out
ja
mov
stc
cmp
mov
lahf
pop
sbb
mov
cmp
mov
jb
ins
mov
repz
jno
inc
cdq
in
add
jne
lahf
rcr
or
and
fcom
xchg
fisubr
lods
sbb
sub
rol
(bad)
fcom
retw
mov
int
xor
cmp
pop
pop
mov
mov
repnz
fldcw
mov
lock
ss
sbb
int3
in
int
sub
arpl
xchg
cmp
jecxz
fidiv
fistp
mov
inc
fs
inc
cmc
into
pusha
jmp
stos
pop
push
fsubr
sbb
(bad)
mov
mov
sti
inc
xchg
punpcklwd
xchg
pop
jne
retf
(bad)
in
sub
push
or
retf
test
add
test
fistp
test
iret
dec
adc
scas
dec
neg
data16
jg
pop
daa
cmps
add
or
stos
inc
mov
adc
and
xchg
test
(bad)
pop
inc
xor
sbb
cdq
(bad)
div
jmp
dec
xchg
lods
cwde
test
push
mov
adc
in
add
in
fldenv
aaa
stos
in
mov
pop
out
dec
add
lds
pop
shl
cmp
outs
jns
or
push
mov
sub
sub
cmps
std
mov
lahf
imul
add
adc
jp
movs
pop
xchg
adc
cmps
inc
cwde
dec
dec
push
jne
sub
xchg
pop
fiadd
mov
adc
fsubr
fnsave
adc
(bad)
into
aam
outs
mov
xor
(bad)
and
or
rcr
add
cdq
jbe
mov
ror
mov
imul
ds
aam
xchg
dec
jbe
mov
mov
or
movs
xor
pop
pop
xchg
out
ret
mov
loopne
cs
retf
dec
fwait
int3
mov
push
push
sub
push
ins
retf
jb
jmp
scas
ins
cld
ins
mov
(bad)
mov
jnp
arpl
and
mov
aam
ja
or
scas
dec
mov
arpl
mov
pshufw
sbb
fcmovb
icebp
(bad)
repz
mov
mov
rcl
adc
push
repnz
outs
stc
je
cmp
add
hlt
xchg
push
aam
sti
shl
not
enter
sti
mov
jo
not
mov
cmps
push
les
lea
xchg
popf
mov
push
pop
pop
mov
cmp
cmp
push
xor
and
push
(bad)
scas
or
push
outs
inc
adc
inc
and
sub
or
pop
cmp
psrlq
push
push
sbb
loope
or
xchg
out
out
es
jl
add
sbb
cdq
push
int
rcl
push
jmp
sub
lahf
jge
popf
inc
pop
jno
mov
test
and
hlt
je
pop
(bad)
jmp
clc
aas
dec
cwde
cmps
jmp
movs
inc
arpl
and
xor
jb
dec
dec
and
pop
mov
data16
dec
in
pop
aad
jne
test
sub
int3
adc
clc
inc
sbb
mov
xor
scas
cli
clc
lock
adc
sar
cld
retf
rol
iret
pusha
dec
jle
out
sub
popf
mov
loope
xchg
mov
out
inc
stc
sbb
scas
push
push
test
loope
enter
jbe
pop
xchg
jns
test
or
and
bound
jmp
pusha
push
addr16
pop
xor
lock
mov
aad
sahf
jnp
ret
xchg
fdivr
(bad)
and
addr16
jl
shl
push
lods
ja
inc
int3
xchg
jno
icebp
jg
adc
jnp
in
fwait
sub
sub
dec
fistp
cld
(bad)
(bad)
jmp
adc
add
inc
pop
xchg
inc
fisub
push
add
pop
inc
and
neg
shl
mov
mov
bound
adc
jle
xchg
cmc
mov
or
push
and
popf
stos
std
mov
ss
inc
mov
cmp
and
xchg
mov
xchg
sbb
mov
pop
sub
cmp
das
pop
add
int
or
mov
mov
xchg
and
into
dec
mov
xchg
jmp
mov
stos
add
mov
(bad)
ins
in
shl
push
cmp
cmp
test
imul
div
dec
xor
adc
cmps
popa
jo
jns
push
mov
mov
or
sub
push
ror
popa
(bad)
(bad)
sub
xor
retf
and
jg
(bad)
cmc
mov
in
mov
push
and
inc
dec
stos
adc
inc
mov
sbb
mov
cmp
into
leave
pop
mov
fsub
push
cmp
nop
test
jo
sbb
jo
pop
add
and
mov
push
xor
jne
xchg
retf
xchg
mov
out
fwait
aam
cmc
out
mov
sbb
xor
lahf
pop
movs
and
fnstenv
ret
jae
(bad)
push
cmp
scas
into
lock
xchg
mov
xor
push
cmps
pop
jne
and
mov
popa
inc
sbb
imul
add
xchg
enter
imul
in
sub
or
jge
pop
sbb
retf
test
pop
jnp
jle
push
loope
(bad)
mov
cmc
push
sbb
inc
mov
das
jae
mov
hlt
or
xor
pop
clc
bound
(bad)
loopne
mov
sub
jbe
mov
fstp
fiadd
fnstsw
movs
pop
shl
ret
and
inc
ss
mov
cmp
iret
xor
cmp
loop
call
adc
mov
call
mov
dec
mov
xchg
retf
pop
mov
stos
cmc
jl
push
cmp
inc
pop
imul
das
xchg
pop
ja
ds
leave
test
and
retf
mov
pop
retf
inc
pop
mov
fs
pushf
imul
ficomp
iret
xchg
xchg
or
lea
sub
shl
neg
and
pop
inc
cmc
adc
cwde
jno
pop
out
pop
test
test
loop
adc
xchg
sub
push
push
adc
and
xchg
cli
mov
fsubr
jb
sbb
mov
fstp
das
mov
(bad)
cmc
lock
lock
jmp
sbb
stos
mov
stc
jae
push
scas
jae
cmp
ja
xchg
mov
cmp
rcl
inc
jl
push
pop
cmp
xlat
xchg
aaa
imul
or
mov
push
ds
sti
add
shr
pop
cld
data16
inc
and
adc
cli
cdq
hlt
(bad)
jmp
push
and
loop
sbb
not
jmp
test
cli
dec
cmps
imul
arpl
retf
xor
(bad)
mov
xor
cmp
xor
icebp
test
push
lea
stos
or
push
cld
or
or
or
jmp
stos
push
or
pusha
lock
inc
(bad)
in
data16
aaa
dec
fstp
sbb
and
sbb
mov
inc
mov
(bad)
push
mov
sbb
in
cmp
in
jae
xor
int
arpl
mov
inc
(bad)
sub
mov
ficom
and
stc
aaa
jnp
movs
mov
push
xchg
in
xchg
mov
ds
xchg
data16
adc
inc
xchg
adc
(bad)
xor
jb
stos
arpl
xchg
rcl
cmp
or
jb
mov
inc
mov
into
dec
push
adc
mov
cmp
sub
adc
out
ret
or
and
daa
jle
xchg
xchg
aas
ja
and
mov
fdiv
stos
clc
mov
in
lahf
aaa
mov
imul
inc
add
push
hlt
in
jl
xor
or
test
sbb
xchg
sub
sbb
and
dec
lods
test
lds
dec
das
cmp
add
(bad)
push
cmps
iret
cmc
and
retf
cs
add
scas
ds
fisttp
xor
nop
into
mov
adc
or
xchg
or
sbb
add
gs
retf
fnstsw
mov
sbb
aam
mov
ins
and
inc
xchg
sub
js
dec
loopne
jp
sub
push
into
popf
dec
mov
add
push
and
cmp
mov
enter
lock
sub
pop
stos
inc
sub
std
das
push
adc
add
test
dec
mov
push
sbb
in
iret
mov
ret
lods
stos
and
dec
sub
sub
dec
pop
outs
rol
mov
pop
dec
cld
cmp
ss
or
add
push
rcl
sub
out
mov
xor
hlt
push
add
ret
push
mov
fidiv
std
ret
jmp
(bad)
mov
fnstenv
inc
or
lods
stc
call
mov
inc
call
(bad)
scas
outs
test
add
cmp
xor
push
imul
rol
push
mov
xchg
test
pop
mov
dec
(bad)
(bad)
pop
call
dec
inc
add
jnp
mov
loope
mov
dec
fisttp
sbb
call
aaa
xchg
xor
bound
or
inc
scas
xchg
movs
call
std
pop
outs
pop
dec
inc
int
pusha
xchg
xlat
push
and
sub
sub
pop
xchg
ins
ja
loopne
(bad)
stos
xor
lods
mov
jno
sub
mov
test
pop
pop
adc
ret
test
loope
add
push
stc
dec
js
into
rcl
or
xchg
xor
mov
dec
f2xm1
cmp
pop
jnp
stos
out
jae
out
push
mov
sbb
push
mov
jo
shl
push
xchg
cmps
xor
sahf
mov
movs
xchg
jmp
xchg
dec
mov
clc
psrad
ficom
outs
(bad)
nop
xchg
aam
lea
aad
clc
xor
fwait
call
movd
jmp
in
sub
out
ins
cmp
test
icebp
inc
movs
jp
pop
push
and
and
cdq
inc
scas
test
sbb
xor
retf
add
or
popa
fsub
cwde
jg
aaa
stos
rcr
rcl
outs
add
ds
call
mov
and
dec
shl
out
repz
lea
jp
or
push
xor
inc
div
retf
jae
sbb
jle
mov
adc
mov
movs
imul
and
in
retf
clc
jb
retf
iret
pop
push
and
(bad)
loopne
mov
xlat
inc
pop
or
aam
push
xchg
into
test
mov
or
shl
jl
in
jmp
jmp
out
pop
adc
mov
pop
mov
jb
inc
or
fs
(bad)
mov
sti
cdq
mov
in
inc
push
je
mov
cld
fidivr
add
scas
lahf
jo
sub
push
mov
pusha
dec
mov
out
ss
dec
push
stos
jae
push
sti
mov
retf
dec
mov
cmps
sub
and
sub
xchg
push
enter
xchg
mov
cld
mov
int3
jmp
mov
lea
mov
dec
jecxz
rcl
mov
mov
xor
int
iret
mov
adc
repnz
and
pop
(bad)
gs
add
push
cmp
call
mov
jb
cmps
push
leave
ja
xlat
data16
jae
neg
cmc
push
clc
out
pop
xor
or
popa
test
cmp
inc
jb
test
bound
jecxz
es
aaa
(bad)
lea
retf
popa
jbe
sub
jg
test
inc
inc
pop
sbb
fldln2
leave
imul
test
cdq
popa
cmp
pop
and
cli
popa
xchg
fist
lock
mov
(bad)
jl
cmp
inc
cli
ds
sub
test
or
icebp
mov
xchg
and
inc
cmp
mov
imul
outs
mov
mov
shl
test
mov
pop
pop
mov
push
cmc
test
out
jp
mov
addr16
xor
test
aaa
xor
fcmovnu
dec
sbb
or
popf
test
(bad)
fnstsw
mov
fnstsw
scas
movs
xor
test
imul
adc
ret
ja
jne
arpl
and
pop
fs
push
xchg
xchg
js
dec
mov
ret
aad
popa
pop
mov
fst
add
ja
mov
imul
aaa
pop
sub
xchg
jne
xor
repz
pop
and
out
sahf
test
imul
jg
shr
sbb
push
mov
mov
jbe
cmp
rcr
mov
test
fiadd
pop
cmps
jne
scas
xor
cli
loope
push
mov
idiv
cmps
pop
aam
clc
add
and
inc
jno
mov
mov
jmp
xor
jg
mov
mov
or
mov
push
cmp
repnz
sbb
inc
cdq
popaw
push
pushf
push
adc
test
inc
fsub
jae
xchg
dec
fdivp
clc
iret
or
mov
enter
out
cmp
jo
dec
and
repz
bound
bound
retf
push
fidiv
sbb
std
(bad)
sub
rol
int
dec
dec
retf
or
add
cmps
xchg
shl
inc
js
es
lds
rep
es
aas
mov
inc
and
lods
lahf
mov
cmp
gs
retf
movs
sti
push
jp
or
mov
outs
lea
ja
sahf
dec
dec
jp
sub
hlt
pop
aaa
call
rcl
loope
and
outs
sub
jp
loope
pop
ret
xor
ret
dec
(bad)
in
das
or
dec
push
push
dec
imul
into
pop
mov
push
jae
sub
mov
movs
in
pushf
and
sub
push
frstor
gs
cmc
adc
push
mov
xchg
sub
int3
pop
xchg
and
pop
mov
jne
in
retf
popa
test
shl
lds
mov
mov
jo
nop
addr16
mov
test
test
mov
clc
retf
inc
gs
dec
xlat
jns
cmps
adc
scas
js
inc
fst
inc
je
je
adc
or
loope
adc
xchg
enter
pop
fst
rcl
jae
adc
ss
stc
scas
mov
nop
cdq
jae
push
arpl
gs
sti
mov
js
mov
adc
jl
mov
add
xor
and
inc
xor
out
stc
or
jns
or
sbb
add
rcr
jnp
sbb
push
imul
test
push
out
xor
and
mov
test
inc
test
push
xor
rol
jecxz
mov
scas
pop
inc
aas
iret
div
inc
iret
ins
push
adc
mov
mov
les
adc
mov
mov
inc
pop
fcmovbe
mov
stos
xlat
out
stos
or
sbb
mov
cmp
lahf
mov
dec
add
mov
sbb
xor
cmp
cdq
and
call
jp
aaa
std
sahf
and
sahf
adc
cld
lea
sbb
pop
add
cmp
(bad)
popa
mov
pop
cmp
(bad)
xor
mul
push
push
ret
push
fdiv
je
push
xchg
add
mov
sbb
(bad)
movs
sub
out
adc
std
fs
pop
cdq
gs
outs
ins
jmp
aas
adc
push
imul
mov
cmp
test
enter
or
adc
and
jmp
lods
fistp
popa
cli
shr
pusha
loop
or
dec
lods
mov
lahf
or
cmp
xchg
mov
jg
retf
hlt
aad
retf
lock
xor
sub
or
pop
push
adc
or
push
nop
scas
mov
push
loope
lods
fs
repz
retf
cmc
mul
test
jae
dec
add
sahf
lds
push
fdiv
das
es
dec
sti
or
pop
mov
cmps
push
rol
ret
and
inc
out
dec
xchg
pop
outs
pop
aam
daa
punpckhwd
jle
add
retf
jmp
jle
dec
cmp
xchg
sbb
lock
(bad)
fnsave
xchg
and
fsubr
xchg
mov
bnd
sub
repz
mov
pop
or
sub
cmps
push
call
jl
lods
out
icebp
add
pop
pop
scas
loop
sub
outs
sbb
stos
xchg
add
ins
mov
add
lahf
or
iret
adc
in
out
imul
rol
add
loopne
(bad)
jg
ins
outs
adc
daa
(bad)
rol
or
jne
jmp
push
stos
in
inc
xor
jp
push
cmps
jl
cmp
outs
pop
push
test
out
mov
int3
add
shl
add
xor
push
sub
arpl
mov
rcr
ss
arpl
lea
(bad)
mov
scas
popa
pushf
cld
(bad)
lock
mov
mov
(bad)
rol
mov
ror
mov
(bad)
push
push
in
shr
pop
into
popf
cmp
loop
(bad)
mov
pop
hlt
sbb
aas
jns
xor
fdivr
cmp
cmp
cmp
pop
cmps
enter
jp
arpl
inc
jle
test
mov
jmp
mov
(bad)
jge
lea
ins
jmp
ret
cmps
adc
sar
or
in
mov
jle
loop
inc
cmp
xor
mov
ss
pop
jne
in
(bad)
mov
push
into
jae
pop
xchg
dec
sbb
adc
in
cmc
mov
add
xchg
in
pop
xor
movs
out
and
xchg
jns
jae
cdq
lds
sub
das
bound
mov
test
cmp
test
mov
(bad)
fcomp
nop
aam
push
lods
adc
mov
cld
pop
pop
mov
jae
movs
lea
test
jae
js
sbb
adc
and
xor
push
movs
sub
stos
cs
mov
fisub
adc
jecxz
fnstcw
push
xchg
and
int
adc
jbe
and
sub
imul
adc
test
adc
push
mov
jae
adc
xchg
xor
jmp
clc
add
addr16
out
cmps
call
arpl
mov
adc
cmp
shr
xchg
leave
ins
mov
imul
inc
sub
out
sbb
jnp
int3
mul
jns
lods
lods
xchg
(bad)
push
fnstcw
sbb
cmp
cmc
ficom
cli
and
add
mov
ret
dec
dec
jecxz
stos
mov
icebp
in
xchg
dec
adc
and
out
inc
inc
sbb
pop
fwait
cmp
icebp
inc
jg
call
adc
jo
retf
sti
and
inc
addr16
in
mov
inc
test
popa
jge
inc
das
arpl
mov
(bad)
icebp
mov
pop
aaa
iret
mov
(bad)
adc
fs
push
adc
sub
dec
ret
inc
and
outs
shl
outs
xlat
inc
sbb
sub
mov
rcl
lods
mov
out
fucomip
fsub
test
sub
pop
push
pushf
js
dec
fcom
mov
push
xchg
add
fs
dec
loop
sub
movs
push
stc
scas
loope
out
leave
int3
cmp
das
or
out
push
jo
pop
out
nop
dec
jno
push
or
xor
push
loop
xchg
gs
retf
arpl
loop
jno
pop
inc
push
mov
pop
sar
nop
call
adc
(bad)
jecxz
add
sub
test
and
inc
cmps
pop
or
pop
mov
jmp
ret
test
in
cdq
pop
out
mov
in
pop
inc
add
xchg
add
das
(bad)
daa
icebp
cli
adc
mov
jmp
fisttp
in
fnstsw
lahf
into
ins
mov
jbe
dec
sbb
and
jns
(bad)
dec
jl
add
xchg
sub
loopne
in
bound
ror
fist
stc
enter
xor
and
(bad)
sbb
frstor
cmove
cmps
shl
stos
cmp
cmp
jle
jmp
shl
fs
or
and
in
dec
or
in
(bad)
mov
sub
inc
sar
xchg
jg
push
sahf
addr16
jge
sub
pop
daa
aas
gs
cld
repz
or
(bad)
add
je
outs
cdq
and
jae
ds
push
and
aad
jle
pop
xor
mov
and
inc
sub
or
sub
fcomp
or
pop
push
pop
arpl
imul
pushf
or
arpl
sub
and
scas
mov
mov
add
push
pop
dec
dec
inc
or
mov
scas
sbb
sbb
ds
into
ret
popa
movs
mov
mov
loopne
movs
mov
sbb
nop
jmp
int
ret
jns
neg
jmp
add
jo
test
outs
repz
inc
pop
adc
imul
fwait
mov
or
sar
sbb
mov
sub
call
xchg
mov
mov
xchg
mov
and
sbb
dec
dec
pusha
test
mov
scas
sub
mov
imul
enter
cmp
imul
xchg
mov
pop
sub
fld
fwait
(bad)
test
xchg
test
sbb
je
mov
push
adc
int
inc
std
ret
cwde
mov
jge
and
data16
dec
sbb
mov
push
arpl
add
(bad)
loopne
dec
ja
movs
cmps
sub
push
push
mov
jno
ret
not
fisubr
bound
stos
js
nop
call
ins
test
js
jmp
rcr
adc
xor
xlat
jecxz
pop
dec
data16
push
cs
add
mov
mov
movs
cdq
dec
(bad)
sub
scas
bound
(bad)
jg
lock
lods
fadd
loope
ja
add
ret
fiadd
push
in
sub
mov
xchg
mov
push
cld
cs
and
mov
push
jb
ror
jl
inc
rcl
test
and
adc
xchg
add
mov
mov
out
push
call
in
xor
pop
lea
or
call
mov
pop
and
ja
push
mov
sar
jno
pop
jmp
(bad)
jns
push
mov
push
pushf
icebp
sbb
nop
(bad)
or
sbb
xchg
(bad)
not
(bad)
std
inc
aad
das
iret
dec
js
ret
push
repz
out
sbb
ror
mov
int
add
mov
cs
add
xchg
add
ret
retf
mov
mov
push
(bad)
push
test
ds
cmc
out
mov
push
arpl
mov
daa
shl
xor
push
mov
xor
clc
jg
sahf
js
xchg
das
mov
scas
cmp
jl
pop
stos
(bad)
mov
je
sbb
les
fimul
fcom
into
movs
cld
or
movs
pushf
xlat
mov
retf
popa
xor
or
pop
add
adc
repnz
test
jmp
mov
cld
and
mov
add
(bad)
fdiv
mov
adc
mov
outs
pop
outs
rol
fwait
pop
jle
movs
pop
outs
into
sbb
retf
or
inc
inc
push
xchg
test
push
mov
das
cmp
test
or
jbe
jb
nop
daa
lods
dec
jmp
(bad)
ss
adc
sub
add
addr16
xor
or
aad
sti
outs
jmp
stos
mov
rol
push
or
sub
and
or
mov
imul
add
jmp
outs
push
sub
bnd
or
sbb
inc
push
daa
(bad)
or
fdivp
aad
xor
push
or
xchg
in
int3
shl
stos
or
inc
sbb
cmps
mov
cmc
sbb
push
ds
mov
adc
add
cs
cmp
sub
dec
sub
and
jbe
mov
sbb
jmp
push
lock
cmc
into
jl
mov
lahf
das
lods
sahf
adc
push
arpl
xor
xor
jecxz
cmps
xlat
ss
out
jnp
aaa
add
adc
mov
xchg
or
dec
mov
mov
outs
test
test
loopne
dec
xor
ret
inc
rcr
and
inc
xchg
les
jg
and
test
inc
ins
xor
jp
xchg
mov
out
shr
and
or
addr16
and
cmp
cs
jge
in
and
cmc
xchg
push
pushf
adc
cmc
mov
jmp
jmp
lds
addr16
ins
clc
fmul
mov
popf
(bad)
(bad)
and
and
mov
(bad)
fild
mov
mov
ins
mov
adc
into
mov
or
sbb
sub
les
add
push
rcr
ins
scas
push
lods
ja
mov
mov
iret
retf
xor
pop
mov
push
cmp
mov
in
adc
add
xchg
jl
sbb
int3
ins
adc
add
sbb
or
dec
sub
jbe
sahf
mov
mov
cmp
loop
mov
loope
fidiv
mov
xor
sbb
sbb
js
jno
mov
xchg
cwde
xor
jne
xor
daa
fs
pop
push
xchg
lea
cs
pusha
(bad)
xlat
xlat
fwait
push
add
mov
mov
stc
cmp
adc
es
xor
shl
push
lods
pop
call
rcl
push
mov
stc
shr
push
shl
popa
xchg
cmp
pop
aad
cmp
add
nop
test
js
mov
out
xor
dec
push
jmp
dec
shl
adc
inc
jge
adc
xchg
lock
jl
das
dec
arpl
ja
cmp
add
(bad)
iret
test
retf
dec
stc
cmp
or
out
pop
mov
sbb
xchg
jg
and
jp
stos
icebp
xchg
mov
and
xchg
imul
xchg
cmps
jge
dec
inc
stos
and
mov
pop
add
es
add
js
mov
push
pop
test
inc
and
shl
retf
sbb
fdivr
xor
fnstenv
data16
cmp
jecxz
xchg
xchg
loop
mov
mov
xchg
mov
pop
dec
push
xchg
aaa
xor
xor
xchg
pusha
shl
test
lahf
cmp
sbb
push
repnz
cmp
adc
push
cmp
xor
push
xor
mov
sbb
mov
cld
xchg
jns
shr
fistp
or
enter
push
push
imul
mov
mov
sub
stos
dec
jl
loopne
mov
and
push
popf
cli
addr16
push
jbe
fst
into
and
cli
xchg
int3
imul
sbb
inc
push
test
xor
mov
into
js
sbb
test
mov
push
mov
sbb
ret
(bad)
inc
mov
cmps
in
push
ins
ins
popa
in
fist
popf
mov
dec
or
bound
test
cmp
xchg
xor
or
fisubr
add
xchg
movs
dec
enter
movs
outs
inc
push
xchg
jne
add
pop
sub
and
jp
dec
sahf
lahf
adc
jae
(bad)
xchg
int
lods
pop
or
adc
jns
ret
dec
jno
fisub
dec
and
xor
jo
jnp
adc
je
out
mov
(bad)
dec
dec
or
mov
dec
jns
xor
in
daa
test
or
mov
shl
popf
ficomp
push
pushf
leave
(bad)
test
pop
mov
inc
pushf
retf
mov
mov
retf
adc
add
mov
adc
jne
lods
or
dec
lods
mov
mov
outs
(bad)
jbe
enter
push
(bad)
jo
sti
sbb
gs
jo
out
jae
lds
mov
jns
mov
dec
inc
cmp
(bad)
into
push
movs
stos
fstp
fdiv
out
sub
int3
mov
ror
add
adc
imul
cmp
mov
or
add
mov
scas
dec
xor
mov
aad
dec
fidiv
inc
adc
outs
bound
or
sti
in
ins
mov
mov
es
ja
add
sub
cmp
out
cmps
inc
mov
dec
jp
retf
mov
pop
jg
rcr
inc
cmp
call
sbb
in
mov
cli
jg
movs
cwde
mov
shl
cld
lock
sub
in
sub
dec
(bad)
repz
add
enter
cmc
jmp
jbe
push
jmp
xor
(bad)
sbb
clc
xor
xor
push
sar
xor
pop
jle
xor
icebp
mov
push
mov
adc
aas
push
mov
sub
mov
pop
inc
jl
cmp
leave
je
(bad)
in
xor
add
pop
outs
push
mov
jl
jge
mov
xor
inc
add
or
movd
cmp
sbb
adc
add
repz
adc
dec
mov
dec
dec
mov
pop
cmp
fidivr
in
xchg
xchg
jmp
push
ins
cmc
mov
es
dec
into
adc
push
xlat
jmp
sub
stos
dec
int
in
cmp
loopne
mov
add
test
xor
sbb
xchg
mov
mov
imul
in
pusha
aas
sub
pop
ss
and
fidivr
imul
retf
xchg
jmp
loopne
popa
sub
addr16
inc
das
push
adc
cs
inc
fist
fcomp
jns
pushf
cmp
cmp
jmp
xor
mov
jecxz
fwait
sbb
inc
(bad)
cli
cmp
sub
aas
cs
(bad)
mov
outs
in
fidiv
adc
inc
inc
(bad)
je
in
and
in
sbb
je
adc
das
in
into
mov
inc
cmps
icebp
aaa
or
int
jg
(bad)
imul
pop
fisub
jmp
ins
pop
les
fst
jb
mov
add
cmp
popa
cmps
adc
neg
jle
add
jecxz
dec
add
test
not
xchg
bound
inc
retf
bound
xor
adc
add
push
(bad)
cmp
or
mov
mov
call
(bad)
xor
xchg
mov
(bad)
dec
dec
mov
dec
xor
stc
jecxz
pusha
jle
cmc
jecxz
fmul
sahf
xchg
mov
(bad)
retf
sbb
mov
stos
cld
sbb
aas
inc
jne
xor
inc
out
rol
nop
js
(bad)
xchg
bound
cmp
dec
dec
sbb
fistp
test
lea
push
push
cwde
jl
mov
adc
cmp
or
daa
pusha
adc
add
push
clc
jbe
push
mov
cmc
xor
loope
dec
scas
jb
int3
sbb
mov
(bad)
mov
add
add
ds
xchg
stos
hlt
push
aaa
jge
(bad)
jno
adc
push
xor
mov
dec
scas
push
ret
ins
mov
mov
xor
retf
and
stos
stc
jns
push
or
sub
add
dec
mov
sub
popa
ja
sbb
push
sbb
retf
pushf
sub
(bad)
dec
(bad)
push
les
scas
out
push
xchg
xchg
loope
cmps
repnz
into
jecxz
adc
xchg
or
xchg
icebp
lods
(bad)
ret
xchg
(bad)
ss
pop
sub
or
push
les
(bad)
pushf
rcl
cmps
cmps
jmp
jbe
xor
mov
and
fwait
xor
fcomp
sbb
pusha
jnp
mov
(bad)
xchg
jno
aad
imul
xchg
je
arpl
and
xor
adc
mov
add
lahf
mov
jmp
push
mov
mov
dec
adc
jae
mov
xchg
js
push
jmp
scas
in
scas
jmp
ja
movs
or
adc
inc
jl
arpl
sub
mov
retf
pushf
cs
inc
outs
cmps
pop
clc
mov
rcr
das
inc
je
jmp
lea
fisttp
inc
in
and
sbb
jb
ja
mov
jp
jg
xor
xchg
push
push
aam
push
push
mov
daa
fld
lods
mov
pop
adc
mov
adc
in
xor
icebp
inc
sub
xor
dec
inc
xchg
outs
movs
rcr
sar
dec
jo
add
scas
xchg
adc
imul
mov
pop
(bad)
mov
and
pop
gs
cli
out
jecxz
fldcw
sar
sbb
jns
cmc
inc
ins
xchg
ret
leave
cmp
dec
ins
mov
jne
mov
hlt
xchg
jle
or
mov
out
icebp
mov
pop
aad
(bad)
inc
cmp
push
scas
es
daa
jno
out
aaa
retf
sub
(bad)
jmp
std
jns
pop
imul
test
ins
das
adc
aad
test
adc
inc
jmp
jmp
leave
loop
mov
test
int3
push
or
dec
xchg
pop
mov
ret
mov
or
mov
repz
cmps
int3
ss
dec
rcr
sbb
inc
lds
sar
pop
push
xchg
mov
bound
pop
push
add
pop
pop
and
stc
pop
adc
popa
mov
in
dec
rcl
or
and
sub
pop
pop
or
inc
xlat
mov
cmp
add
add
stc
stos
or
stc
push
out
jo
mov
sbb
outs
call
movs
dec
cmc
fisttp
mov
jo
cmp
push
mov
mov
test
mov
sub
mov
dec
sbb
xchg
aad
(bad)
jne
mov
mov
out
aas
add
pusha
ins
inc
jbe
mov
call
jl
repnz
or
jmp
inc
mov
loop
dec
fstp
mov
loope
mov
pop
sub
inc
leave
leave
test
mov
add
test
cdq
inc
mov
repnz
and
sbb
jmp
ss
cld
jne
pop
jle
aad
pop
push
outs
sub
cmp
movs
mov
pushf
cmp
aas
repnz
mov
mov
add
(bad)
hlt
xchg
ja
and
push
into
movs
pushf
sbb
cwde
adc
push
pop
mov
out
enter
call
and
dec
call
cmp
nop
xor
fwait
jmp
push
inc
mov
mov
into
pop
sub
rcr
jno
xor
ret
dec
pop
fwait
sbb
mov
dec
xor
inc
cmc
lahf
xor
jnp
sbb
inc
add
aam
popa
(bad)
mov
(bad)
movs
dec
push
outs
mov
or
popf
mov
dec
xor
push
jl
push
out
pop
push
dec
int3
inc
movs
cld
les
adc
pop
cmp
xor
stos
dec
lods
mov
loopne
sub
add
mov
or
aas
mov
xchg
std
jl
add
fcomp
dec
outs
xchg
lods
mov
pop
scas
and
sbb
add
clc
inc
cmps
lahf
adc
and
lock
das
push
bound
imul
es
xor
jg
inc
jmp
lahf
clc
push
dec
jmp
jbe
ins
repz
cli
(bad)
or
data16
dec
test
arpl
cmp
adc
cmc
rcr
mov
(bad)
push
mov
pop
int
sub
dec
and
pop
das
shl
stc
sub
dec
mov
mov
into
xor
adc
les
mov
mov
xor
add
xchg
(bad)
xlat
ss
pop
popf
adc
ins
js
xchg
iret
xor
xor
sti
ret
rol
mov
cli
je
inc
fucomip
movs
rcl
jo
lock
cmp
sub
mov
and
xchg
or
icebp
and
enter
sbb
add
pop
jecxz
loopne
aas
mov
fstp
out
loop
pop
mov
fs
mov
out
sub
ss
push
loopne
xchg
data16
xor
fsubr
and
sbb
int3
jle
jno
cmp
int3
setge
jbe
and
push
stc
and
add
movs
pop
rcl
push
stc
in
stos
xchg
and
mov
jp
mov
inc
test
jne
mov
lea
adc
jbe
xor
out
mov
lods
pop
sbb
test
jecxz
pop
dec
or
mov
cdq
in
inc
mov
es
ds
pop
xchg
int3
jmp
fistp
jo
pop
push
xor
pushf
mov
mov
lock
mul
fild
add
mov
jno
cdq
pop
pop
lahf
clc
push
sbb
dec
push
repnz
sar
and
or
xor
bound
pop
in
sbb
imul
mov
js
sub
int
(bad)
test
inc
pop
xor
sub
jo
dec
push
jmp
sbb
cli
jmp
aam
or
push
sub
aad
fcom
shl
and
test
test
xor
call
dec
jmp
pusha
aas
mov
cwde
add
popf
daa
sub
in
mov
xchg
cs
sub
test
jge
or
dec
inc
xor
pop
push
out
and
jae
add
rcr
outs
(bad)
sbb
ret
mov
xchg
enter
fisttp
shr
mov
cmps
xchg
retf
or
pop
fsub
cmp
add
inc
mov
jecxz
adc
xlat
push
and
or
mov
or
adc
(bad)
addr16
mov
add
push
jge
in
sbb
out
cmp
mov
jmp
in
and
clc
xchg
adc
mov
cmp
mov
cwde
mov
repz
aam
adc
sub
xrelease
stos
or
dec
xor
cdq
stos
xor
xchg
enter
push
(bad)
mov
or
or
test
popf
and
xchg
stos
xchg
sub
(bad)
dec
adc
ret
jae
or
bound
pop
xchg
xchg
sbb
add
add
inc
inc
mov
and
mov
pop
cmp
adc
jmp
jl
push
lds
outs
ss
repnz
inc
xchg
hlt
push
jge
dec
push
dec
imul
popf
loopne
rol
push
add
int3
call
jno
dec
pop
mov
cmp
adc
xchg
test
mov
mov
scas
(bad)
jge
cdq
repz
ds
push
stc
aas
fst
adc
and
mov
jns
dec
pop
leave
outs
jmp
sbb
cmp
push
xor
mov
xor
xchg
pop
pusha
loop
add
pop
jo
jbe
pushf
jns
inc
sub
ja
repz
adc
sar
loop
xor
pop
pop
add
iret
mov
xchg
add
test
es
out
imul
dec
push
cmp
add
xor
adc
inc
adc
mov
scas
jmp
cdq
adc
fmul
repnz
pop
in
adc
mov
cmp
ja
push
xchg
jp
fucomp
sub
dec
mov
pop
cmps
je
out
dec
fcomp
outs
(bad)
and
dec
jae
lock
test
sbb
ret
jno
out
mov
and
mov
and
jle
call
cmps
fimul
jnp
into
loopne
mov
out
fnstsw
fldcw
call
in
cld
out
ficom
mov
mov
inc
test
push
fnstenv
cmp
sbb
out
mov
xchg
(bad)
fbld
xor
inc
and
int3
clc
lahf
in
xchg
xor
popa
cld
dec
cmp
cmc
inc
cmps
dec
jo
pop
xchg
lahf
push
and
mov
ret
mov
sbb
scas
or
aaa
pusha
fidivr
sub
sbb
outs
jmp
loop
xor
gs
es
retf
pop
pop
(bad)
push
push
les
xor
cmp
in
into
loopne
(bad)
out
pop
test
inc
fcom
push
aaa
and
jno
mov
mov
ja
sub
pop
inc
ss
adc
test
xchg
gs
sbb
fcom
lds
mov
pop
or
sub
ins
ret
arpl
adc
ss
dec
pop
inc
icebp
mov
xor
xchg
jg
sub
iret
mov
fst
xlat
xchg
mov
dec
jno
out
pop
cld
setno
xchg
jmp
mov
add
rcl
les
(bad)
mov
jnp
call
and
dec
or
adc
mov
sahf
inc
lock
js
lods
lea
sub
xchg
add
and
popf
mov
pop
dec
sub
xchg
clc
cwde
xor
sbb
xchg
shr
push
stc
scas
push
mov
pop
lods
inc
repnz
mov
inc
sub
xchg
mov
adc
or
out
cdq
ret
in
xchg
pop
daa
push
dec
(bad)
mov
fadd
ret
or
xor
dec
pop
mov
out
loopne
aaa
push
stos
xchg
loopne
int3
mov
fidivr
test
sbb
out
ja
shl
jl
mov
psrad
add
jb
fistp
jmp
ret
lods
loop
les
out
cli
cld
inc
scas
xchg
sbb
dec
jp
cwde
jmp
mov
or
or
inc
cld
icebp
mov
cmp
or
sbb
fadd
jbe
loope
out
cmp
(bad)
mov
xchg
mov
inc
popa
xchg
cld
stos
add
cmp
dec
xchg
bound
or
mov
mov
xchg
push
dec
pop
ds
imul
test
call
rcr
and
rcr
inc
xor
inc
test
icebp
loope
cmp
and
inc
xchg
xlat
mov
xor
out
push
inc
dec
pop
jg
adc
test
mov
cs
cmps
test
(bad)
jns
push
jae
adc
push
loope
lea
not
push
push
push
or
mov
out
push
xchg
vmread
cmp
mov
das
inc
mov
mov
adc
jno
les
pop
dec
xchg
stc
rol
jnp
sar
data16
mov
add
or
add
ja
pop
jno
push
cmp
pop
lea
mov
push
dec
mov
sub
mul
xor
inc
hlt
mov
jae
push
ins
sub
push
dec
pop
adc
sbb
jne
shl
into
cmp
pop
sbb
fnstsw
scas
mov
out
pop
mov
push
push
in
fst
stos
sub
das
scas
mov
fcmovbe
loop
adc
fcom
rdmsr
sub
cwde
in
cmps
sub
sub
iret
iret
jecxz
pop
dec
pop
fsub
mov
and
fcmove
xchg
xchg
and
les
push
mov
pop
sbb
neg
sub
xor
lods
push
mov
rcr
xor
dec
push
or
pushf
(bad)
js
not
cmp
call
shr
stos
push
push
add
sbb
leave
lods
leave
int3
cmp
test
scas
inc
out
mov
shr
retf
push
cmp
inc
test
sbb
sub
es
adc
push
shl
mov
sub
cmp
mov
aad
scas
inc
adc
adc
in
and
jecxz
test
outs
jecxz
leave
leave
push
xor
xor
bound
js
xchg
or
adc
shl
int3
bound
call
push
xor
xor
mov
mov
sub
in
cmp
daa
xchg
sub
test
repnz
mov
fnstenv
pop
cmp
dec
nop
jmp
ins
push
fs
fist
aad
(bad)
mov
adc
push
idiv
in
dec
or
dec
xchg
test
jns
and
rol
leave
mov
fmul
push
mov
push
rol
mov
sub
mov
mov
mov
aad
addr16
call
add
fucomi
mov
mov
movs
cmp
xor
and
out
xor
or
ret
imul
loope
out
rcl
jae
cmp
ins
mov
stos
rcl
gs
jl
imul
clc
icebp
inc
mov
mov
repnz
popa
in
(bad)
loopne
bswap
jp
call
pop
xchg
cli
or
sti
popf
mov
js
fs
scas
adc
mov
lea
aad
mov
mov
sub
sub
jl
xor
ins
mov
jno
xchg
iret
rol
jl
mov
mov
jnp
movs
pop
jmp
inc
das
xor
xchg
test
dec
mov
loopne
add
cmps
push
iret
mov
lods
ja
push
mov
mov
call
push
cmp
nop
or
stos
movs
not
push
add
pop
mov
adc
movs
mov
dec
xchg
es
xor
cld
rcl
pop
cmp
xor
jle
(bad)
(bad)
in
xor
(bad)
and
enter
adc
mov
xor
je
add
xlat
mov
mov
mov
ins
(bad)
scas
test
cmp
mov
jmp
cmp
ds
lock
cmp
add
and
enter
nop
mov
(bad)
dec
mov
stos
push
mov
ins
shl
(bad)
retf
rcr
xor
mov
jg
pop
pop
or
pop
(bad)
out
(bad)
std
jae
dec
and
adc
popa
outs
jle
scas
and
neg
test
jl
inc
pop
sub
add
inc
jns
and
(bad)
mov
add
fcomp
pop
push
fwait
addr16
in
stos
xor
and
pop
add
and
dec
xlat
popf
cmps
out
pop
mov
or
push
mov
mov
cmp
adc
(bad)
stos
outs
xor
gs
call
mov
(bad)
std
jae
xchg
cwde
jmp
stos
sti
xor
adc
add
jns
dec
or
lock
aam
(bad)
stos
pop
xor
adc
(bad)
int3
bnd
xchg
int
cmps
mov
jl
in
pop
retf
mov
gs
push
cmp
mov
ret
scas
retf
jg
adc
add
outs
mov
push
sbb
jo
aas
bound
add
adc
push
cmp
jg
pop
sub
xor
adc
es
jnp
int
mov
or
jo
popf
pop
jg
in
inc
int3
inc
adc
iret
lods
loope
sub
dec
lea
sub
push
test
inc
(bad)
retf
push
gs
test
icebp
ins
xchg
test
pop
lods
popa
dec
lods
mov
pusha
xor
pop
fwait
rcl
xor
or
fistp
sbb
jp
cs
sbb
and
ret
cmp
aaa
in
rol
fisttp
xor
inc
fld
jo
pop
pop
push
movs
int3
xor
frstor
push
aaa
sbb
jbe
xor
mov
(bad)
clc
inc
mov
xchg
enter
shl
lock
push
or
mov
adc
nop
mov
mov
xor
(bad)
inc
je
test
shr
repz
pop
and
movs
sub
mov
xor
sbb
sub
jb
imul
adc
dec
add
mov
movlps
hlt
adc
pushf
in
in
pop
inc
enter
xchg
shl
jg
aaa
cmp
xor
xchg
pop
repz
mov
ficomp
pop
pop
add
lods
rol
mov
pop
(bad)
out
sbb
xchg
jnp
xor
ins
dec
adc
shr
cwde
fild
push
popa
inc
push
add
ror
addr16
mov
(bad)
pop
xchg
jge
xor
jp
sub
push
mov
dec
adc
ins
pushf
imul
xchg
mov
aas
adc
inc
mov
cmp
test
cmp
mov
(bad)
xchg
xor
xor
mov
adc
push
xchg
jb
int3
loop
inc
gs
scas
mov
movzx
mov
stos
adc
adc
nop
and
and
xchg
div
sub
adc
popa
fucom
sub
sbb
xor
push
xchg
mov
add
aas
xor
add
xor
push
fwait
sub
xchg
mov
lods
add
add
sbb
call
gs
cmp
std
dec
mov
mov
mov
icebp
pop
out
fistp
jb
mov
mov
outs
jge
mov
or
neg
cmp
xor
js
and
inc
xchg
dec
jge
mov
xchg
iret
or
fsubr
pop
rcr
imul
push
sbb
fcmovne
daa
sbb
sub
retf
cdq
or
aaa
in
aas
nop
std
sbb
mov
and
add
inc
test
jp
dec
imul
or
mov
cmp
fsincos
call
cmps
lds
add
jmp
xor
loopne
cs
push
jmp
(bad)
enter
loope
je
pop
(bad)
call
mov
int3
mov
push
inc
mov
(bad)
push
mov
clc
cmp
dec
mov
stos
or
mov
ins
mov
sbb
mov
push
cmp
inc
jmp
and
xchg
sbb
arpl
jo
mov
call
push
add
ss
sti
xor
xchg
pop
aam
jo
xor
cmp
mov
adc
ins
cmp
or
sahf
and
(bad)
push
pop
or
mov
lods
mov
(bad)
(bad)
and
jnp
pop
jg
jg
sti
xor
outs
les
or
pop
loope
pop
test
test
or
fldcw
inc
sub
sbb
jne
pop
xor
in
sbb
push
adc
dec
and
pop
jnp
and
sub
mov
fadd
mov
sbb
push
(bad)
std
(bad)
inc
pop
xlat
sbb
fdiv
push
push
stos
cmp
push
pushf
xchg
outs
scas
loop
jp
sub
stc
pop
movs
in
dec
shr
test
cs
and
jne
pushf
and
fnstsw
lahf
cmp
(bad)
icebp
adc
mov
inc
sub
cmp
mov
aas
call
add
or
shl
ret
jns
pop
in
mov
ss
mov
(bad)
and
adc
rol
mov
(bad)
(bad)
fs
pop
sbb
ret
sbb
jno
push
xor
xchg
mov
push
dec
js
adc
mov
sbb
fild
adc
(bad)
loopne
outs
in
ds
in
add
cmc
ins
pop
call
aaa
mov
add
dec
pop
inc
shl
fstp
mov
push
xchg
mov
popf
shl
into
xor
push
cmp
push
mov
sub
loopne
lods
movups
inc
or
fstp
jg
and
fmul
add
and
cmp
sub
aas
or
fincstp
mul
inc
gs
scas
stos
inc
push
adc
arpl
push
sub
mov
mov
xor
movs
inc
and
cmp
mov
or
xlat
out
jle
stos
xchg
mov
adc
or
dec
and
fst
cmp
cmp
pop
xchg
and
loopne
mov
call
dec
pop
std
popa
adc
test
repz
fwait
mov
sub
imul
dec
mov
adc
(bad)
cwde
mov
out
cld
lea
jp
push
push
les
(bad)
fisubr
je
mov
xor
fsub
bswap
sub
lock
sbb
and
xchg
xchg
mov
ja
xor
sub
sbb
push
in
in
add
pop
add
mov
jnp
and
das
aas
es
inc
adc
je
rcr
pop
jge
xor
mov
scas
jle
mov
test
or
cmp
(bad)
cmp
nop
mov
xor
mov
fnstenv
fs
fcom
pop
gs
sub
in
sub
add
push
mov
push
cmp
stos
mov
or
add
daa
dec
jb
in
lahf
push
stos
push
test
and
into
dec
mov
push
xor
std
dec
call
adc
arpl
mov
(bad)
(bad)
or
outs
push
fisub
pushf
fsub
cmp
mov
add
jo
sub
scas
pop
movs
cmps
movs
imul
icebp
adc
adc
and
sbb
inc
push
jne
dec
sbb
mov
stos
aas
mov
frstor
xchg
and
mov
mov
push
jno
movs
dec
popf
dec
mov
stc
jmp
push
mov
mul
push
nop
ja
adc
sub
sbb
push
push
fld
adc
and
ret
in
cmp
jmp
es
sbb
mov
jmp
dec
aas
mov
mov
test
mov
loop
jecxz
add
jbe
push
mov
or
(bad)
pop
div
pop
mov
sbb
stos
push
(bad)
fcmovu
(bad)
cwde
(bad)
and
cmc
jns
cmps
sbb
frstor
mov
push
(bad)
mov
inc
or
push
fs
dec
jl
mov
movs
cmps
test
mov
mov
(bad)
push
jnp
push
fstp
sub
cmc
outs
in
hlt
(bad)
scas
and
test
dec
xchg
ficomp
cmp
ja
jno
pop
fist
test
push
cs
call
adc
jne
xor
pop
push
mov
in
pop
je
mov
mov
into
mov
jns
arpl
ins
into
push
int
mov
lahf
dec
outs
xor
or
enter
push
dec
(bad)
sub
and
push
jo
les
lods
mov
push
cld
mov
mov
push
xor
xchg
cwde
pop
mov
lods
nop
js
and
fidiv
daa
bound
adc
inc
loop
inc
out
icebp
mov
cld
mov
ins
(bad)
out
jno
scas
add
or
xor
out
ds
leave
or
fcom
jo
inc
lods
retf
or
dec
mov
addr16
adc
shr
jl
xor
gs
and
ins
sbb
(bad)
aas
pop
fild
push
xchg
aam
add
ficom
into
dec
inc
ret
out
sbb
loop
inc
clc
or
je
and
and
popa
and
in
aas
fnop
test
cmp
mov
addr16
iret
repnz
add
pop
mov
pop
hlt
cdq
int
aad
aad
sub
push
test
ror
(bad)
pop
and
stos
mov
xchg
sbb
jmp
add
outs
xchg
mov
stos
mov
pop
inc
inc
inc
adc
cli
inc
addr16
cdq
or
inc
loope
cmp
repz
into
scas
xor
bound
es
dec
mov
xor
daa
loopne
add
dec
cmp
add
mov
push
movs
shr
es
jmp
cs
inc
sub
cmp
mov
test
push
ins
pop
adc
popf
(bad)
mov
fs
sti
jno
(bad)
mov
dec
loope
mov
iret
cwde
imul
mov
push
cli
std
add
(bad)
pop
outs
xorps
aad
mov
xchg
jb
les
test
xchg
rcr
xchg
adc
sahf
or
(bad)
fadd
(bad)
movs
xchg
dec
rcr
lahf
in
movs
fld
pop
enter
lea
into
push
fwait
mov
push
sub
fisttp
into
cmp
adc
fild
sub
push
sub
ficomp
out
out
mov
xor
mov
pop
fld
repnz
mov
sub
and
shl
add
pusha
clc
mov
sbb
jae
cmp
cmp
leave
mov
dec
mov
imul
das
dec
in
sbb
xor
xor
mov
ret
cmp
test
mov
rcl
loop
inc
dec
pop
repnz
push
jge
repnz
sbb
mov
mov
imul
imul
push
pop
inc
push
jmp
fsubr
repz
xor
(bad)
dec
and
jge
mov
outs
sar
push
sbb
pop
data16
cld
fst
pop
xchg
and
call
sub
pop
pop
ret
push
inc
sar
cwde
(bad)
cdq
jecxz
pop
cs
adc
imul
fs
push
fidivr
and
mov
out
ins
push
adc
add
mov
mov
xchg
loopne
retf
xor
xlat
pop
or
pop
sub
xor
or
inc
pop
sbb
sbb
fstp
sbb
add
aas
pop
or
retf
pop
es
jnp
fldenv
mov
fndisi(8087
lods
cwde
arpl
lock
loope
repz
jmp
into
add
sbb
dec
mov
xchg
test
ja
sub
push
jle
and
jl
out
mov
int3
pop
lods
adc
dec
jns
(bad)
retf
sbb
sub
popa
push
aas
jbe
lahf
retf
and
ror
std
cs
sub
and
in
test
call
pop
or
mov
dec
ror
mov
into
and
mov
and
jne
scas
sub
sub
xchg
pushf
inc
jae
sub
inc
mov
ror
push
and
pop
mov
jmp
(bad)
cs
shl
cmp
mov
xchg
pop
stos
mov
out
jmp
rol
movs
push
jb
pop
xor
mov
in
nop
cmp
lods
(bad)
cmp
mov
call
or
cli
cmp
jbe
cdq
jne
es
das
mov
enter
xor
es
dec
aaa
dec
jne
and
mov
adc
stos
and
lods
popa
outs
arpl
ds
push
sbb
sahf
shl
sbb
xor
push
ficom
loop
mov
les
mov
xchg
mov
sbb
out
clc
arpl
cdq
call
mov
jle
jecxz
pop
jb
in
mov
xchg
sub
loopne
jmp
(bad)
inc
mov
or
js
fistp
arpl
jo
fwait
out
jo
test
sbb
xor
cmc
push
mov
fwait
xor
aad
jo
(bad)
outs
ins
xchg
jmp
mov
call
cmp
fadd
ds
push
ffree
out
aam
adc
fwait
arpl
mov
out
inc
add
faddp
xor
add
outs
repnz
out
cmps
xor
stos
sbb
je
fadd
inc
and
xchg
cmp
hlt
mov
xor
mov
rol
fst
mov
xor
hlt
jmp
rep
push
mov
inc
add
sbb
pusha
xchg
popf
aas
or
imul
in
mov
je
fst
ja
jmp
xor
aas
or
inc
out
or
pusha
enter
stos
iret
dec
mov
(bad)
push
add
pop
jmp
push
sbb
jne
addr16
bound
aaa
fcom
mov
pushf
in
pushf
add
scas
hlt
xor
inc
popf
icebp
lahf
or
inc
inc
shr
mov
mov
or
xlat
inc
sbb
xchg
into
aam
loopne
pop
xchg
mov
push
leave
mov
ins
mov
(bad)
das
add
jecxz
sub
add
retf
js
mov
xchg
(bad)
lock
loop
sbb
cmp
or
adc
mov
loope
and
inc
mov
pusha
mov
(bad)
retf
sbb
sahf
in
outs
pop
cmp
cmc
(bad)
in
mov
movs
xchg
ficom
jmp
xchg
fist
mov
dec
xchg
push
adc
ss
adc
dec
inc
pop
jecxz
lea
pop
pop
xlat
das
jg
fst
lods
push
fndisi(8087
movs
mov
xchg
mov
ins
cmc
je
jge
jle
inc
shr
ins
push
pop
jecxz
xchg
inc
mov
pop
popf
mov
cmps
xor
jb
mov
lds
jmp
cwde
dec
push
test
xchg
lahf
nop
std
dec
and
xchg
or
stc
mov
pop
xor
xor
xchg
imul
sbb
inc
pop
and
mov
mov
xchg
je
push
mov
mov
dec
lds
call
mov
push
iret
cmp
adc
pop
xchg
mov
inc
inc
outs
mov
xchg
scas
add
js
ins
sbb
bound
test
pop
out
sbb
push
mov
inc
je
adc
dec
arpl
adc
lock
test
inc
daa
cdq
ss
(bad)
push
xchg
or
mov
into
out
mov
jg
push
popa
xchg
mov
mov
jl
mov
sbb
cli
jmp
inc
cmp
fcom
movs
sbb
imul
push
outs
jge
push
ja
(bad)
cmc
scas
mov
test
outs
sbb
repnz
aaa
call
cmp
outs
dec
movs
add
fst
(bad)
mov
inc
inc
inc
(bad)
sti
mov
in
sbb
push
imul
imul
sub
xchg
gs
inc
dec
jmp
pop
fs
fdiv
or
sahf
push
and
fimul
sub
icebp
pop
fidiv
and
jge
mov
hlt
ret
mov
test
fisttp
sub
inc
std
add
pop
or
jmp
sub
inc
and
rcl
mov
jl
and
fimul
mov
sub
pushf
enter
lods
sub
pop
mov
icebp
movs
fsubr
out
loope
xor
pop
neg
jmp
dec
jne
lds
jge
jno
rcl
push
mov
mov
mov
sub
jns
mov
inc
inc
(bad)
fs
and
mov
inc
dec
xchg
push
mov
sbb
mov
scas
jmp
push
add
fild
xor
cmp
(bad)
and
movs
mov
inc
imul
shr
in
fimul
xor
loop
mov
pop
out
fwait
sbb
shl
test
mov
jmp
sbb
inc
rcr
ret
arpl
aam
pusha
lock
call
inc
mov
jle
fistp
mov
jmp
jb
sub
hlt
mov
dec
gs
mov
arpl
jmp
push
sbb
scas
cmp
xor
and
jne
pop
mov
ds
jo
ins
frstor
in
rcr
and
fwait
or
ss
fucompp
out
movs
lods
mov
inc
ret
fcompp
loop
jbe
xchg
push
aaa
dec
adc
jg
xchg
outs
and
xchg
mov
mov
sbb
mov
pushf
push
xchg
fmul
cmps
inc
mov
ror
sbb
xchg
mov
test
ror
jecxz
je
js
add
adc
mov
int3
mov
repz
xor
stc
jmp
adc
fistp
mov
popa
mov
in
mov
xchg
loope
pusha
data16
add
inc
pushf
inc
aas
xchg
adc
outs
jno
mov
sbb
cmps
idiv
ret
sbb
jle
xchg
js
mov
xchg
xchg
cmc
enter
mov
or
aad
pop
jmp
sub
lock
aad
int
mov
mov
inc
enter
jno
xor
ja
in
stc
aad
sahf
mov
out
outs
ss
stos
sahf
sbb
cmp
mov
stc
cli
jle
loope
test
out
sbb
test
add
xchg
hlt
jmp
sar
pop
cmp
stos
(bad)
rcl
stos
xchg
(bad)
cmp
adc
mov
test
mov
cmp
lods
test
xchg
fsub
test
cmp
dec
daa
test
sbb
cdq
jl
add
mov
and
xor
push
pop
adc
retf
sub
leave
mov
xchg
jbe
and
ss
fs
scas
xor
out
out
or
aas
pop
xor
loopne
mov
aam
push
mov
cwde
xchg
mov
pop
jb
cld
mov
cmps
movs
xor
pop
add
jne
retf
add
outs
mov
js
or
jmp
adc
test
jle
ins
xchg
daa
sub
pop
sub
movs
mov
and
push
pop
sub
(bad)
mov
add
out
mov
test
cmp
pop
jecxz
movs
(bad)
xchg
ins
mov
push
cmp
pop
ds
xchg
push
add
mov
rcl
into
xchg
in
jle
inc
sbb
xor
add
push
out
iret
stos
fimul
xlat
les
pop
adc
fadd
dec
xor
iret
out
cmps
call
jmp
(bad)
mov
test
adc
mov
pop
inc
xchg
jb
out
out
cmp
mov
pop
fwait
jecxz
xor
out
cld
xor
pushf
leave
mov
mov
dec
add
cmp
xchg
outs
add
hlt
(bad)
fisub
test
inc
repnz
pop
mov
adc
lea
call
(bad)
mov
call
dec
lock
cwde
cmp
adc
prefetch
or
cmc
(bad)
lds
mov
cdq
dec
outs
int3
daa
aad
test
movs
sbb
mov
xchg
outs
mov
movs
xor
je
mov
xchg
sbb
add
arpl
push
cmp
shl
cmp
or
cmc
mov
scas
aaa
in
xchg
sbb
jge
push
scas
mov
(bad)
std
stos
xchg
jecxz
jns
ds
mov
inc
js
inc
sti
push
into
jg
sub
adc
xchg
mov
imul
add
shl
xor
dec
outs
xor
xchg
je
lock
push
stos
inc
mov
outs
fidiv
jns
(bad)
jecxz
lahf
arpl
adc
cmp
or
sub
in
jg
or
clc
sub
retf
test
mov
call
sub
div
sub
jo
daa
or
enter
in
mov
jns
or
push
pop
xchg
cwde
pop
out
push
test
add
(bad)
imul
pop
cmps
enter
dec
in
test
xchg
mov
inc
and
cmp
dec
outs
js
xchg
lds
or
popf
cmp
dec
aad
mov
xchg
inc
and
mov
in
repnz
cdq
out
jnp
aaa
dec
test
dec
call
pop
out
fcomp
shl
bound
call
fucomp
(bad)
inc
imul
cwde
dec
neg
mov
vpcomuw
sub
jae
cmp
push
lds
mov
sub
cmps
jnp
hlt
jl
movs
and
jne
lods
dec
cmp
ins
scas
xor
pop
dec
and
popa
aam
iret
adc
dec
xchg
jbe
mov
adc
xchg
iret
sbb
std
and
pop
popf
or
xchg
xor
sub
jecxz
movs
pop
mov
xor
pop
xchg
into
stos
pop
movs
sub
call
push
sahf
xchg
stos
jle
push
shr
ins
mov
inc
pop
mov
or
mov
dec
xor
rol
pop
add
fcomip
clc
xchg
pop
out
jecxz
mov
xlat
fidivr
cmp
push
clc
or
mov
rcl
pop
sbb
test
repz
aaa
dec
scas
rcr
sbb
cmp
stc
mov
rcl
xchg
aaa
test
inc
fwait
je
not
mov
bound
push
cmp
xor
neg
xchg
fs
xchg
cmp
sahf
outs
popf
inc
push
or
fcom
and
out
popf
mov
out
and
stos
shr
dec
bound
sub
dec
adc
xor
and
ror
not
jmp
jb
push
xchg
jns
stc
adc
popf
and
dec
pushf
movs
(bad)
fwait
mov
dec
cmp
dec
sub
adc
movs
dec
mov
fist
mov
leave
or
popa
jg
(bad)
out
into
idiv
push
push
add
sbb
mov
jle
cwde
fcomp
jl
ja
outs
sub
js
fild
cmc
mov
mov
dec
sub
(bad)
mov
xchg
xor
inc
jle
cmp
leave
sub
lahf
xchg
mov
ss
in
push
in
jmp
xor
sub
sbb
ss
inc
push
mov
sbb
xor
mov
jb
aas
cdq
xchg
vmwrite
xor
shr
and
mov
dec
pop
repnz
adc
jne
leave
in
add
mov
jg
pop
or
inc
je
push
shl
repnz
je
stc
cdq
xchg
pop
mov
pop
sbb
jmp
ror
ror
mov
mov
sub
push
outs
(bad)
push
mov
adc
mov
jnp
dec
push
push
push
mov
pop
xor
in
shl
jp
ins
pushf
push
mov
pusha
cmp
in
lds
(bad)
aad
mov
cmp
push
pop
loop
stos
xchg
(bad)
push
mov
cmp
add
imul
mov
sbb
lahf
mov
cmps
jmp
int
jp
pop
jno
jb
jl
mov
aad
sub
mov
imul
adc
es
loopne
shr
push
xchg
sar
mov
test
cli
out
into
adc
stc
retf
or
adc
aad
(bad)
cmp
xchg
jl
pushf
xor
iret
dec
mov
shr
pop
jmp
aaa
adc
jecxz
mov
sub
fsubr
sti
lods
(bad)
or
pushw
stos
fldenv
inc
stos
sar
retf
imul
pushf
mov
loop
cmps
push
mov
jb
js
push
sar
push
shl
dec
outs
push
test
call
(bad)
jbe
scas
scas
(bad)
adc
int3
pusha
loop
movs
xchg
jo
cli
cmp
scas
mov
outs
cs
push
ins
sub
mov
xchg
stos
adc
out
mov
adc
jbe
sub
loopne
adc
je
sub
lock
add
rol
cmp
xor
into
or
or
cld
sub
bound
mov
push
push
loop
pop
xchg
jno
nop
popf
push
sbb
test
and
outs
cmp
sub
int
or
push
(bad)
imul
mov
rcl
add
aam
xchg
mov
(bad)
mov
rcr
add
gs
test
push
fldenv
adc
arpl
hlt
icebp
std
cmp
dec
int3
cmp
addr16
cmps
mov
mov
and
mov
cmp
add
je
rcl
leave
ret
fwait
xchg
push
pop
add
xchg
aam
hlt
jge
movaps
sbb
xor
inc
jg
xor
fwait
addr16
daa
lds
jae
pop
cmc
jne
dec
push
scas
js
(bad)
mov
xor
adc
sbb
and
mov
int3
rcl
or
stos
shr
repnz
out
mov
and
nop
mov
outs
ja
nop
leave
inc
sbb
ss
fwait
rcl
sub
mov
lods
jns
pop
jmp
inc
mov
sti
push
push
mov
adc
cmp
test
outs
lock
cld
pop
cmp
stos
add
mov
call
imul
(bad)
int3
push
lds
shl
dec
add
cli
or
jmp
xor
add
outs
stc
inc
imul
ficomp
rcl
xchg
mov
cmp
cmp
pop
rcr
adc
arpl
add
inc
in
int3
mov
pop
lds
inc
leave
mov
adc
jo
shr
push
out
cmp
sub
movs
mov
push
movs
cmp
inc
and
sti
stos
cs
jp
and
adc
inc
mov
fidivr
mov
rcl
data16
push
shl
mov
mov
in
scas
scas
pop
out
mov
retf
mov
or
push
loop
xchg
jnp
push
mov
cmps
inc
jp
mul
mov
inc
xchg
cmc
dec
xor
outs
popa
retf
in
test
push
les
aam
add
pushf
in
jns
mov
mov
vaddss
push
pop
cmp
dec
add
xor
test
xchg
mov
scas
daa
fadd
push
inc
dec
mov
int
(bad)
ficom
jno
stos
sar
repnz
mov
aam
and
fs
sbb
pop
ret
les
mov
push
jle
(bad)
stc
xchg
loop
(bad)
pushf
neg
adc
push
pop
cmp
sub
mov
and
test
push
shl
popf
icebp
out
or
xchg
out
imul
lds
mov
pop
out
jbe
pop
imul
repz
add
inc
fidiv
mov
inc
inc
xchg
fstp
hlt
mov
ror
pop
push
icebp
test
and
bnd
add
dec
mov
push
dec
fnstsw
dec
test
mov
jp
imul
ja
jne
xrstor
pop
jp
outs
or
int
cmp
out
adc
xchg
not
inc
sbb
add
push
shl
lea
fbld
sahf
(bad)
in
and
lahf
movs
pop
and
xchg
sub
and
dec
aas
ret
pop
icebp
mov
out
or
sti
stos
add
pop
into
dec
mov
loope
sbb
jmp
mov
ret
lahf
push
and
push
and
repnz
push
repz
jmp
int3
std
cmps
and
sbb
out
jmp
add
jnp
pop
xchg
and
test
mov
cmps
adc
add
push
mov
and
inc
xchg
inc
call
xor
dec
adc
lods
icebp
bnd
cmp
scas
(bad)
xlat
push
push
fisubr
repz
mov
cmps
enter
idiv
ins
retf
pcmpeqw
mov
jmp
call
mov
jle
and
mov
dec
jecxz
mov
jae
xor
dec
mov
ins
js
xchg
in
pop
cmps
sub
cmp
in
pop
fisttp
xchg
popf
or
cli
cld
sub
frstor
and
xchg
push
pop
push
sub
push
into
icebp
iret
push
jmp
test
pop
pop
(bad)
mov
les
mov
fidivr
jae
fld
repz
jp
inc
dec
jp
std
call
pop
pop
lock
add
jno
cmp
add
push
test
(bad)
test
cmp
test
sbb
dec
cmps
and
mov
mov
jbe
movs
icebp
add
adc
mov
add
pushf
stos
enter
(bad)
adc
(bad)
ja
repz
or
ror
fadd
push
call
push
pop
mul
push
sub
mov
sub
add
ffreep
(bad)
adc
add
dec
push
mov
inc
cdq
fnstsw
ins
jmp
and
js
push
std
imul
jns
in
imul
mov
inc
mov
fadd
lods
stos
push
dec
rcl
lahf
or
not
cli
adc
push
sbb
mov
ret
cli
dec
xor
into
dec
loope
test
ret
cmp
mov
mov
adc
pusha
aaa
call
xchg
jb
dec
mov
jge
popw
cmp
sbb
xchg
cwde
ins
cmp
popf
xor
pop
scas
mov
sub
popa
mov
outs
in
cs
daa
sti
neg
ss
pusha
jb
pop
fcomp
cmp
out
(bad)
fwait
imul
aas
outs
ret
aam
sti
ins
out
movs
loope
lods
push
sbb
xor
and
repz
call
int3
xchg
inc
jp
test
and
movs
scas
mov
fs
dec
in
and
and
int3
add
xchg
out
(bad)
repz
pop
push
(bad)
leave
arpl
xchg
(bad)
mov
inc
push
mov
mov
pop
pusha
dec
add
add
inc
fwait
sub
xor
test
sbb
fadd
or
fldcw
adc
sbb
not
jb
dec
adc
dec
shl
xor
mov
pop
ja
jg
stc
mov
js
dec
into
push
push
shl
imul
xor
test
lahf
aas
sub
ficom
push
enter
dec
inc
stos
repz
(bad)
mov
test
out
and
xchg
push
xchg
xor
les
shl
leave
or
popf
call
and
cdq
movs
cmp
jae
ret
mov
pop
sar
mov
inc
cmps
jl
jge
sub
into
call
cdq
mov
pop
popf
mov
ds
cmp
div
je
(bad)
std
sbb
mov
add
pop
dec
push
je
cmp
lock
sbb
ins
add
adc
jae
in
jb
lea
pop
jno
cmps
pop
mov
jo
es
push
fistp
stc
scas
clc
adc
call
(bad)
retf
pushf
mov
jecxz
sbb
loope
inc
jecxz
ins
cmp
dec
cmps
cdq
fist
mov
mov
sbb
dec
sub
sub
mov
cdq
add
aad
xchg
outs
fstp
pop
pop
sub
leave
jns
cmp
ins
sub
cdq
lods
cmp
mov
or
adc
popf
jb
mov
jmp
aas
mov
dec
addr16
xchg
or
enter
mov
fwait
pop
rol
clc
test
pop
out
add
jg
mov
pop
les
imul
mov
pop
dec
jmp
cld
cdq
jmp
inc
nop
sbb
dec
xchg
pop
adc
xchg
aas
ja
ret
mov
in
cmp
gs
push
and
sbb
fwait
outs
xchg
mov
cmp
popf
retf
jecxz
(bad)
mov
push
vpermil2ps
adc
xchg
popa
mov
ror
or
and
int
retf
lock
stc
pop
ret
xor
mov
pop
xor
xor
add
(bad)
mov
lods
sub
sbb
jb
or
stos
dec
std
dec
frstor
adc
cmp
jbe
cmp
push
shr
test
pop
call
cmp
add
fs
add
mov
(bad)
rol
rcl
ins
add
or
jmp
add
mov
mov
add
dec
push
(bad)
dec
jb
icebp
lods
or
retf
mov
sbb
jns
mov
mov
mov
scas
jb
sbb
icebp
(bad)
ja
mov
sub
add
sbb
pop
jae
out
jg
jl
push
rol
mov
pop
lods
stos
ret
pop
jns
popa
mov
sub
shl
push
or
pop
loopne
sbb
sbb
(bad)
out
pop
gs
retf
cmp
cmp
clc
push
adc
jl
or
dec
fsubr
xor
lahf
mov
cdq
push
cmps
mov
or
mov
cmp
cmp
cmp
xchg
pop
push
icebp
fadd
sbb
add
or
pop
mov
mov
mov
call
test
mov
pop
fwait
das
push
scas
mov
mov
push
imul
aaa
mov
mov
push
or
jmp
push
aas
pop
fidiv
cmps
pop
(bad)
fsubr
dec
scas
aam
xor
inc
lods
fsubr
call
adc
shr
pop
inc
or
mov
lods
jb
ret
cdq
inc
xor
push
xchg
pop
xchg
or
sbb
out
jp
cmp
loope
jmp
push
jns
out
sbb
pop
jno
or
in
ror
mov
mov
shr
push
xor
cmp
push
(bad)
sti
xor
int3
pop
pop
icebp
inc
xlat
jl
jmp
mov
sub
dec
pop
or
pop
addr16
in
and
ins
out
ret
add
shl
jnp
pop
adc
or
jo
xchg
or
jno
adc
xchg
or
int3
lock
push
mov
(bad)
jmp
hlt
cmp
shl
jae
ret
push
out
mov
adc
(bad)
adc
jno
push
jo
leave
dec
mov
ss
and
call
stos
pushf
push
jmp
das
xchg
mov
repnz
addr16
xchg
xor
inc
jecxz
sub
jp
in
mov
loop
push
mov
pop
push
test
jns
ins
mov
fistp
jl
dec
xor
mov
jae
dec
fadd
sub
fisub
inc
and
loope
or
lock
adc
fs
inc
and
xor
imul
leave
out
add
popfw
xor
loope
push
jmp
add
sub
sbb
cwde
pop
jno
bound
adc
jp
int
bound
pop
sub
push
clc
dec
in
scas
push
stos
sub
mov
cmp
movs
mov
xchg
in
or
out
popa
or
out
sub
mov
cmp
ret
mov
pop
sub
test
ins
push
(bad)
fnsave
sub
sub
jmp
(bad)
and
mov
pop
pcmpeqw
mov
add
sahf
xchg
fisubr
aaa
sbb
or
jne
xchg
or
dec
mov
mov
pop
shr
xor
popa
and
cmp
popa
and
pushf
sub
cmps
and
sbb
xor
not
jmp
in
cdq
inc
hlt
ror
jo
xor
lods
loopne
add
push
jmp
xor
ror
call
dec
cmp
std
imul
inc
mov
ret
pop
add
enter
cmp
inc
iret
add
pop
push
loopne
(bad)
push
ins
in
stc
lahf
cwde
cmp
popa
jo
lds
es
mov
pop
push
push
(bad)
cmc
repnz
jmp
cmp
aam
pop
sbb
xchg
xor
or
int
arpl
mov
cdq
xlat
fdiv
mov
sbb
(bad)
cmp
aas
cwde
mov
cmps
cmp
cmp
xchg
stc
and
mov
das
mov
(bad)
mov
scas
jle
mov
test
sub
push
cmp
jb
xor
(bad)
test
shl
out
mov
jno
retf
mov
and
in
jbe
push
inc
inc
pop
jmp
sub
in
xchg
pusha
data16
enter
xor
xor
xchg
cmp
imul
add
mov
push
add
push
inc
sbb
outs
dec
pop
mov
adc
outs
jne
popa
jge
call
dec
add
inc
mov
xchg
and
fbld
inc
adc
fwait
(bad)
cmp
mov
das
in
cmp
sbb
fisttp
push
push
xchg
out
sub
(bad)
xlat
in
mov
cmps
mov
ds
nop
mov
das
mov
fist
mov
fs
(bad)
sahf
fld
or
add
jl
sahf
mov
dec
repnz
jmp
jp
int
xchg
jnp
cs
jle
test
mov
jbe
add
sahf
data16
outs
lahf
out
jno
xchg
mov
push
in
xchg
push
xchg
imul
daa
test
mov
std
mov
pop
cli
iret
adc
shr
mov
sbb
stos
adc
mov
out
test
push
and
and
mov
jle
inc
or
inc
sbb
mov
fsub
jb
aas
jns
lock
mov
mov
adc
adc
imul
xchg
scas
cdq
jb
add
inc
mov
jmp
mov
or
sti
stos
test
ins
and
pop
adc
(bad)
add
aad
mov
aad
push
inc
pop
imul
xchg
sub
cmovb
outs
jge
test
test
out
mov
inc
imul
dec
xchg
push
enter
fcmovnb
push
or
ins
mov
or
xor
stos
sub
xchg
leavew
and
enter
cmp
sbb
loopne
adc
fild
ss
or
xchg
stc
imul
sub
(bad)
xor
mov
shl
stos
repnz
leave
pushf
das
pusha
popa
jmp
fmul
jmp
adc
or
in
or
hlt
lahf
popf
jg
ret
jbe
jb
loopne
push
xchg
nop
push
and
test
test
cmps
sub
inc
fldenv
xchg
jne
push
jbe
shl
fidivr
out
push
cwde
das
mov
sbb
rcl
fldcw
inc
jmp
in
mov
enter
mov
xchg
aam
and
mov
and
js
imul
dec
cmp
push
push
nop
test
fisttp
(bad)
adc
or
cmc
cmp
mov
(bad)
imul
or
(bad)
fdiv
fdivr
pop
jns
scas
mov
test
pop
and
and
loopne
push
mov
xchg
pop
loop
pop
aas
fwait
jae
or
shr
in
mov
xchg
shl
fild
xlat
je
and
arpl
xchg
xchg
jns
hlt
loope
sub
shl
imul
(bad)
mov
shl
in
add
push
xchg
mov
fisub
dec
outs
movs
cmp
movs
xchg
(bad)
je
out
inc
in
xchg
add
cmp
inc
add
ret
ja
xchg
aad
fwait
pop
xchg
(bad)
pop
lea
mov
or
cmp
mov
sar
sbb
icebp
xchg
xor
fisubr
adc
js
lods
pop
loop
and
arpl
adc
jno
fwait
mov
rcr
data16
or
push
stc
mov
push
(bad)
and
shl
std
aas
arpl
aaa
mov
rol
lods
cmp
pushf
ins
les
ja
and
ret
fst
pop
mov
xchg
pop
out
dec
test
jno
pop
dec
xlat
ins
mov
mov
mov
adc
cli
mov
cmp
cmps
and
movs
jmp
nop
(bad)
sub
daa
and
rol
dec
pop
je
js
push
int3
or
dec
inc
loop
out
out
push
(bad)
push
and
test
(bad)
adc
lea
pop
mov
mov
push
xor
ret
cmp
and
jb
retf
mov
jmp
cmp
and
dec
cmp
pop
push
adc
mov
xor
or
iret
rcl
mov
cwde
sub
adc
cmp
pop
sbb
cmp
stc
dec
int
fwait
or
sbb
movs
jo
push
movs
inc
test
xlat
xchg
mov
jecxz
push
int3
scas
cmps
inc
inc
and
xlat
dec
sti
aam
call
fimul
es
lea
xor
int3
jnp
sahf
pop
mov
mov
ja
mov
test
push
sbb
js
jne
mov
int
ss
xor
mov
popf
icebp
cs
ja
fwait
pushf
push
ins
cmp
lea
push
inc
dec
lock
push
pusha
mov
xor
loopne
sar
fwait
(bad)
cmp
rcl
cmp
jl
jmp
stos
loop
pop
dec
scas
mov
cmp
pop
mov
icebp
adc
aad
ffreep
sub
xor
cld
cmp
jb
or
add
test
push
mov
gs
addr16
pop
es
dec
lods
outs
xchg
xchg
and
std
mov
push
jbe
js
test
xor
adc
mov
into
call
shr
popf
addr16
dec
jnp
scas
xor
fistp
jne
addr16
jge
outs
(bad)
cli
pop
mov
addr16
pop
(bad)
sub
cmp
mov
xchg
sub
enter
outs
and
addr16
and
mov
push
or
or
test
fwait
jne
not
sub
test
fucomi
aas
push
mov
shl
mov
pop
sbb
sbb
pop
mov
pop
in
(bad)
mov
and
mov
das
aad
sbb
or
cmp
movs
test
mov
(bad)
fdivr
push
jmp
shl
jg
push
xchg
pop
mov
nop
shl
or
mov
sub
pop
int3
xor
push
dec
test
and
(bad)
fwait
test
push
cld
outs
mov
cmp
out
adc
das
adc
push
bswap
sub
mov
clc
js
hlt
mov
mov
mov
xchg
and
lods
aaa
add
or
push
out
or
cmc
mov
fs
les
pop
ficomp
xchg
xor
and
mov
cmps
cmp
xchg
arpl
rol
fs
mov
pop
les
sbb
xchg
cmps
in
xor
xchg
or
arpl
pushf
jp
inc
jmp
mov
dec
or
pop
push
add
mov
ja
sub
bound
mov
and
sub
mov
add
push
retf
inc
or
jnp
repz
mov
pop
cwde
push
ja
(bad)
mov
addr16
adc
push
int3
int3
sub
jno
ins
xchg
fimul
stc
add
int3
int3
std
and
or
mov
ret
std
ss
je
aaa
stos
push
mov
cmps
loope
sub
addr16
or
nop
nop
jmp
sbb
xlat
(bad)
sub
or
xchg
jmp
loope
cli
neg
aas
sbb
jg
or
sahf
push
add
cmp
scas
mov
call
js
add
cmp
mov
sub
and
xchg
mov
ret
imul
sbb
scas
sub
push
call
mov
add
fsubr
cmp
add
cmp
mov
test
xor
out
test
repz
fidiv
lock
iret
loope
in
shl
out
std
test
mov
sar
push
cld
adc
retf
sbb
cmp
and
and
bound
push
lock
jnp
push
sbb
cmps
xor
sbb
mov
sti
loope
xor
pop
add
sbb
(bad)
xchg
inc
push
test
retf
fldenv
and
push
rol
mov
push
popf
and
cmc
test
leave
adc
lods
repz
cs
ret
mov
add
pushf
fcomp
arpl
clc
fs
sbb
(bad)
pop
jbe
addr16
cmps
(bad)
cmps
sub
cmps
lea
out
je
daa
rol
or
or
mov
gs
mov
lods
sub
scas
movs
movs
imul
and
(bad)
xchg
test
sbb
adc
stos
cmps
jno
aaa
sub
mov
movs
sub
pop
mov
iret
jns
dec
stos
pop
test
(bad)
sbb
or
or
cli
mov
pop
jno
scas
div
xor
bound
push
hlt
dec
inc
mov
lahf
push
jmp
data16
push
cli
mov
pop
add
push
fucomp
ins
xor
or
sub
popa
add
mov
gs
je
stos
shr
aaa
cmp
xor
pop
das
cmps
cmp
cmp
adc
ja
sub
sub
add
xchg
cmp
xchg
jp
xor
mov
fist
inc
or
aas
mov
or
(bad)
test
aad
lods
(bad)
(bad)
pop
xor
push
fsubr
ins
pop
fcmovbe
scas
sbb
dec
repnz
aam
das
pusha
and
add
xchg
cmp
or
cmp
sbb
jns
int3
retf
adc
in
in
clc
rcr
leave
in
dec
cmp
sub
push
das
cmp
mov
dec
fsub
or
sub
push
inc
ror
ins
push
fdivr
daa
mov
into
jmp
jbe
(bad)
mov
xlat
adc
mov
sub
arpl
test
mov
cmp
dec
lds
sbb
jl
ret
mov
mov
in
loop
push
stos
push
popa
or
mov
mov
out
cdq
daa
in
mov
gs
vpcmpeqb
sub
sub
xor
loopne
jno
mov
and
nop
popa
das
cmp
mov
dec
or
loope
loop
shl
je
idiv
pop
mov
push
push
shl
or
neg
fs
cmp
xchg
mov
mov
aaa
sbb
aas
pushf
cld
(bad)
push
mov
popf
mov
sub
icebp
jl
mov
test
out
jo
add
retf
sbb
pop
pop
retf
mov
cdq
cmps
push
hlt
fadd
es
and
add
retf
xor
mov
mov
jl
or
outs
std
mov
call
dec
cmps
pop
lock
outs
out
or
daa
fdivr
nop
adc
and
push
ja
pop
(bad)
adc
aad
inc
inc
push
xor
xchg
jge
cmp
xchg
dec
mov
int3
add
push
mov
adc
jmp
pop
cmp
outs
push
adc
(bad)
fistp
jge
and
push
fwait
push
sahf
jae
jg
add
mov
test
jmp
test
cmp
and
add
movs
cdq
gs
dec
(bad)
pop
mov
mov
mov
aaa
add
fwait
pop
ss
adc
adc
push
arpl
push
sub
mov
sub
fs
xchg
pushf
xlat
mov
int
test
cmps
fnstenv
push
inc
or
vcmpsd
icebp
jbe
mov
ret
dec
inc
stos
add
push
test
enter
or
out
repz
ja
retf
mov
push
shl
sub
mov
(bad)
xor
mov
jmp
enter
jbe
call
(bad)
lahf
sahf
add
call
ja
dec
pop
loope
mov
mov
std
xor
pop
mov
loop
jl
call
test
ds
add
es
dec
in
fmul
outs
inc
dec
les
fwait
cmp
jge
into
fcom
cmp
hlt
test
mov
xchg
fcmovnb
(bad)
or
popf
mov
sbb
inc
icebp
mov
enter
add
popf
je
inc
lods
sub
gs
ret
inc
cmc
arpl
jnp
push
pushf
mov
int3
cdq
xlat
add
sub
shl
cmps
pop
js
les
adc
div
sub
jb
mov
(bad)
repz
fst
mov
jbe
loope
repz
in
mov
sub
jle
(bad)
mov
mov
mov
out
daa
and
mul
adc
fsub
mul
ror
xchg
adc
std
mov
xor
dec
shl
adc
push
dec
mov
push
mov
ja
rcl
mov
repnz
jge
lock
div
out
mov
and
shl
stc
stos
mov
xchg
add
inc
pop
in
push
cdq
ss
mov
push
loopne
jge
in
sbb
nop
arpl
and
pop
seto
imul
lods
and
mov
dec
fwait
pop
ja
ins
fcom
jns
int
dec
dec
enter
sbb
xchg
jge
cli
sub
ins
hlt
push
xchg
ja
cmp
sbb
xor
pop
adc
cs
ja
adc
dec
cmp
mov
jne
push
or
lods
inc
cmp
shl
movs
inc
cs
test
sahf
cmps
call
mov
mov
inc
or
(bad)
cmp
popa
jae
lods
mov
stc
in
int3
and
fist
inc
pop
mov
movs
adc
leave
loop
mov
mov
imul
jb
dec
enter
ins
rcl
ins
xchg
mov
or
jnp
out
out
or
xor
cmc
lahf
push
popa
cmp
into
test
faddp
jmp
pop
mov
mov
dec
add
xor
dec
adc
cwde
pusha
push
repnz
adc
push
cmps
cmc
jo
mov
push
fldenv
es
xchg
push
in
mov
dec
jb
or
shl
stos
imul
pop
xchg
xchg
call
or
test
ret
fistp
inc
iret
shl
xlat
js
dec
dec
imul
retf
call
mov
std
outs
test
inc
and
fwait
pop
mov
add
xchg
sub
popa
in
sub
scas
movs
jbe
mov
jns
stos
inc
mov
push
icebp
adc
adc
sbb
cmp
pop
lods
dec
frstor
inc
ret
imul
xchg
(bad)
xchg
lds
mov
push
push
leave
add
iret
sti
mov
jle
loop
aam
iret
mov
and
fldenv
fimul
adc
out
adc
inc
nop
mov
inc
push
inc
inc
sahf
sub
in
pop
cld
in
ss
xlat
(bad)
push
sub
in
or
and
inc
scas
and
inc
and
mov
nop
ins
movs
sub
or
mov
push
ror
mov
mov
pop
(bad)
imul
shl
xor
test
add
ins
cmp
dec
sbb
repz
and
aas
in
pop
std
aam
jnp
cmp
fmul
scas
arpl
loope
inc
cmp
dec
xchg
sub
sti
xchg
into
inc
xchg
outs
je
cli
push
ud1
and
lea
adc
add
cmc
xor
lods
pop
nop
test
xor
ret
lods
xchg
out
imul
push
and
or
clc
dec
lock
gs
mov
arpl
and
ins
pop
xchg
xor
nop
int3
int
mov
jle
in
push
jo
aam
inc
dec
xchg
lock
dec
dec
or
fsub
ror
dec
movs
movs
mov
repz
jae
pop
mov
push
push
mov
dec
test
test
sub
loop
bound
inc
cmp
iret
xchg
popa
push
jbe
sub
mov
mov
xchg
cmp
out
add
inc
sbb
(bad)
and
pop
push
outs
add
sub
(bad)
aaa
and
call
dec
mul
jmp
sub
les
inc
aaa
inc
mov
cmps
(bad)
je
adc
lock
stos
inc
shr
jmp
data16
xchg
outs
lea
(bad)
enter
retf
ret
div
adc
pop
dec
mov
push
pop
mov
leave
mov
es
icebp
push
xchg
cmp
adc
push
stc
ja
in
lods
loop
mov
pop
and
adc
mov
int3
inc
mov
repnz
es
int3
mov
jno
jp
pop
jo
xchg
jbe
push
sbb
mov
js
jns
cs
dec
mov
and
(bad)
cld
mov
pop
dec
imul
rol
daa
or
movs
lods
scas
jb
push
vmread
movs
push
fild
sub
jmp
mov
mov
cmp
jo
dec
test
stos
xchg
cdq
ret
stos
sbb
rcl
scas
outs
and
mov
aas
inc
inc
jne
out
test
add
jnp
xchg
addr16
pop
test
(bad)
fistp
rcl
pop
inc
pop
stos
leave
call
mov
push
loope
push
nop
dec
fnstcw
mov
add
lea
jle
sbb
sub
dec
jle
and
dec
sti
xor
xlat
(bad)
iret
ffree
outs
cmps
xchg
mov
mov
dec
and
cwde
dec
hlt
or
sahf
sub
fidivr
mov
jo
aaa
popa
jmp
outs
push
mov
pop
rol
call
js
mov
out
ins
mov
inc
mov
xchg
push
ins
loope
lds
push
mul
adc
mov
add
pop
jnp
loope
cmp
fnstenv
xor
or
xor
fcmovu
xchg
sub
pop
retf
ret
add
dec
adc
mov
push
retf
aam
lods
cmc
xchg
jmp
lods
push
dec
aas
std
sbb
fbld
push
call
lods
adc
jmp
jnp
mov
cdq
fldenv
or
xchg
push
shl
xchg
call
pop
cmp
push
inc
jno
lock
stc
cmp
popa
mov
inc
movs
xchg
push
jmp
mov
movs
sub
add
cdq
xchg
mov
icebp
int
cwde
and
xor
lea
loop
cdq
inc
imul
xor
aaa
cmp
and
push
add
das
movs
sub
pop
jb
btr
ins
(bad)
jne
inc
dec
test
pop
jg
cmp
out
nop
out
and
mov
jo
ficom
pop
add
test
adc
cli
pop
in
out
or
mov
aam
pop
pop
pop
retf
and
in
xor
lock
cmp
cmps
inc
dec
js
cmp
mov
and
sbb
mov
push
in
push
mov
out
or
mov
pop
popa
push
adc
jae
dec
cmp
mov
pusha
jo
pop
mov
mov
adc
mov
add
sbb
add
loop
das
xchg
pusha
sub
jne
lock
(bad)
lahf
out
xlat
jp
push
sbb
sbb
daa
arpl
clc
sub
xor
jmp
mov
sbb
(bad)
outs
loope
aaa
xchg
call
aas
call
in
jo
mov
mov
pop
dec
cmp
rcr
fwait
mov
push
sahf
idiv
in
push
(bad)
ds
mov
mov
cmp
fadd
repnz
jp
push
pop
imul
push
xchg
adc
fdiv
(bad)
fidiv
(bad)
cmp
or
xbegin
jns
hlt
and
xor
std
push
shr
add
sbb
and
(bad)
or
sbb
cmps
fdiv
test
addr16
cdq
(bad)
mov
sub
mov
sti
retf
shr
xlat
adc
or
(bad)
loope
ret
jge
push
inc
int3
pop
loope
xchg
cwde
(bad)
jl
adc
pop
cmp
sub
inc
outs
cmp
in
mov
fild
adc
enter
xrelease
inc
or
jns
inc
dec
pop
or
sbb
inc
mov
push
mov
int
cwde
mov
icebp
inc
add
cmps
pop
push
int3
push
lods
pop
mov
xor
adc
pop
jle
pop
cmp
push
idiv
inc
lahf
jae
sub
adc
mov
mov
cmp
add
pop
js
outs
dec
xor
mov
inc
xlat
gs
call
out
or
xchg
jns
pop
jae
in
pop
sub
pop
clc
cdq
outs
push
mov
rol
cli
(bad)
jbe
mov
stos
xchg
mov
push
jmp
add
shr
fdiv
inc
mov
dec
and
pmaxub
sub
es
mov
xchg
(bad)
aad
aad
mov
sahf
xlat
ror
xchg
sub
inc
add
xor
add
cmp
inc
mov
push
daa
dec
ins
int3
mov
jbe
mov
mov
jb
mov
stos
aad
cmp
adc
push
in
retf
sbb
pop
jnp
popa
dec
bound
clc
jle
scas
sub
ret
sbb
and
adc
jg
lds
sbb
sbb
ins
stos
in
add
push
les
push
into
test
push
mov
loope
adc
shl
lock
or
add
inc
clc
mov
inc
pop
or
mov
add
dec
retf
in
std
cli
xchg
push
and
pop
or
scas
(bad)
jl
xlat
adc
stc
cmp
and
cmp
or
sub
pop
popf
repnz
test
sbb
div
jbe
xchg
jmp
ja
retf
rcr
mov
fmul
mov
es
retf
sub
adc
mov
loopne
xor
arpl
fstp
xchg
inc
add
push
add
lods
inc
popf
or
jno
push
test
cs
sub
sti
or
test
inc
xlat
dec
mov
clc
jmp
dec
imul
push
je
jg
inc
mov
xor
dec
adc
jne
jo
call
sbb
sbb
mov
out
out
repnz
xor
and
jmp
lea
dec
ret
rcr
sbb
pop
test
cmps
aas
daa
stos
adc
out
test
cmp
fcomip
test
call
jns
ds
cwde
fs
inc
jno
push
hlt
fwait
not
fbstp
inc
dec
sub
stos
push
mov
dec
cwde
push
into
ins
iret
fistp
mov
pop
sar
xchg
(bad)
lods
fs
cmp
stos
mov
les
lods
aad
outs
jnp
sahf
and
push
sub
jae
ror
rcl
jne
test
(bad)
ss
clc
sub
call
fist
mov
xor
pop
cmp
sbb
pop
inc
cmp
stc
fst
mov
in
pop
rcl
dec
out
lds
mov
pop
inc
stc
and
xchg
ins
mov
cld
jl
xor
(bad)
aas
aad
xchg
sysexit
das
jne
sbb
jmp
rcl
and
sbb
les
inc
cwde
xchg
pop
add
xchg
xchg
mov
inc
js
dec
cmps
push
mov
inc
push
xchg
push
jg
out
rcl
inc
lahf
ret
fcomp
ss
movzx
add
or
std
cmp
adc
dec
(bad)
fldenv
sub
adc
in
je
shr
(bad)
pop
pop
ins
sbb
jnp
popa
(bad)
(bad)
push
icebp
mov
mov
sbb
(bad)
xor
mov
ins
push
rol
pusha
fisttp
and
mov
mov
inc
jmp
pop
push
pop
aas
cmps
sub
mov
idiv
lock
loop
adc
pop
mov
cmp
ror
xchg
dec
iret
div
jle
adc
mov
ins
repz
mul
push
mov
fidiv
inc
xor
mov
mov
add
fdivp
loopne
fucomi
(bad)
xchg
(bad)
fcomp
enter
sti
in
inc
adc
mov
ja
jbe
arpl
cmp
jp
clc
out
xchg
or
lods
jne
xor
retf
je
xchg
or
es
sub
and
aaa
xor
lock
or
pushf
jbe
aam
(bad)
cmp
(bad)
stos
mov
jmp
scas
cmp
sub
jno
jp
jae
aam
mul
loopne
ins
add
adc
in
ds
xchg
cmps
cdq
or
jnp
jns
mov
cmp
dec
xor
retf
ds
pop
sub
test
sub
or
fisubr
fisttp
cdq
ins
add
adc
push
pushf
rol
xor
mov
add
arpl
(bad)
popf
aam
mov
mov
movs
cmp
mov
pop
shr
mov
adc
mov
popf
xlat
movs
in
hlt
rcr
aam
rcl
mov
popf
or
mov
lods
and
push
mov
cmps
jo
push
sbb
fwait
pop
lods
lds
sbb
in
cmp
push
ret
xchg
cmps
imul
mov
outs
mov
cmp
sub
sub
call
loopne
cmp
daa
jg
push
lds
push
sbb
ins
icebp
shl
dec
shr
xchg
pop
jno
lods
addr16
int3
loope
and
ins
ins
sti
dec
dec
movs
bt
jbe
icebp
lea
sbb
shr
inc
mov
push
sub
mov
hlt
in
push
test
(bad)
push
mov
xchg
jae
sti
xlat
or
dec
sbb
arpl
in
mov
push
shl
or
and
jbe
add
inc
pop
push
popa
or
jg
dec
inc
adc
dec
pop
into
push
call
mov
push
in
mov
jl
xor
mov
add
call
arpl
adc
test
mov
adc
(bad)
or
push
shl
clc
and
inc
(bad)
prefetch
mov
icebp
jl
pop
sahf
pop
pop
mov
adc
call
mov
or
mov
or
inc
shl
inc
cmps
retf
mov
push
mov
cmps
arpl
mov
stos
mov
sub
push
cmp
pusha
sub
scas
inc
lods
imul
mov
pusha
push
fs
and
inc
stc
pop
fcomp
pop
js
lahf
xchg
inc
jo
in
mov
jae
outs
or
aam
pop
push
mov
mov
test
xor
mov
mov
and
adc
(bad)
lea
test
loopne
aam
test
mov
fild
mov
les
pop
and
pop
int
pop
test
ds
fdivrp
inc
pop
leave
pop
jno
enter
sbb
int3
cmp
pop
mov
outs
adc
dec
int
enter
lods
xchg
icebp
sbb
pop
bound
pop
pop
xchg
sbb
sbb
and
repnz
sar
sar
stos
(bad)
xor
xor
push
mov
or
(bad)
lahf
cmp
or
aam
bound
loope
loope
mov
arpl
adc
sub
mov
and
loop
dec
xchg
pop
je
call
and
ins
and
(bad)
aaa
leave
cmc
int
push
pop
xchg
ss
loop
sahf
mov
bound
imul
iret
sti
fdivr
push
int
test
adc
inc
cmp
push
adc
test
scas
jl
inc
push
arpl
sbb
dec
fwait
mov
push
imul
push
lds
inc
out
ds
and
and
imul
paddd
jb
pop
(bad)
or
retf
pop
retf
ficom
rol
dec
push
fcomp
inc
add
fisub
das
mov
jge
mov
(bad)
stos
push
adc
test
xchg
jge
ret
or
or
mov
sub
mov
xor
xchg
(bad)
call
paddw
mov
and
not
mov
sub
dec
in
rol
cmp
into
push
aad
mov
xchg
push
(bad)
stc
dec
mov
xlat
loop
dec
aaa
push
stos
enter
cmps
jbe
push
or
cmps
sub
add
jbe
lods
(bad)
adc
mov
cmc
inc
or
shl
mov
mov
pop
dec
enter
ds
mov
retf
cld
jne
xlat
inc
pop
dec
fnstsw
in
sbb
jle
dec
stos
shr
pop
test
fdivp
cmp
iret
(bad)
mov
not
cmp
mov
mov
ss
sub
mov
jp
sbb
jmp
imul
sbb
clc
lock
(bad)
add
jnp
std
cli
iret
pop
xor
or
cmp
imul
xor
push
adc
daa
mov
test
std
call
push
or
jmp
xchg
js
std
not
ja
xchg
mov
pop
in
loopne
cs
(bad)
mov
jmp
sub
jo
sahf
adc
mov
push
fistp
add
fcmovu
imul
xchg
dec
adc
les
dec
hlt
sub
loop
cmps
sub
jnp
mov
shl
jns
xor
and
or
dec
shr
jno
dec
xor
cmp
mov
hlt
xor
add
repnz
daa
not
jnp
mov
cmp
pop
mov
mov
add
test
mov
mov
sub
dec
(bad)
iret
shl
jae
sub
jl
fisub
cdq
jns
sub
into
out
and
sbb
sbb
cld
push
neg
cmp
ret
push
in
enter
mov
sub
bound
ins
cli
sbb
xor
bound
jnp
cs
cmp
mov
adc
jg
dec
sbb
(bad)
mov
pop
mov
or
and
cmp
mov
xchg
addr16
daa
shl
add
ja
or
mov
popa
dec
lods
sti
pop
jno
fiadd
pop
pop
in
cmp
fnstcw
push
adc
jmp
dec
pop
sbb
int3
push
adc
lods
mov
mov
cmc
push
pop
mov
push
or
loopne
(bad)
adc
pop
and
call
mov
fsub
sbb
out
mov
push
xchg
in
loopne
add
inc
cmp
in
dec
mov
ins
sub
ins
fprem
xchg
adc
retf
inc
pop
movq
inc
push
jge
inc
add
push
pop
aad
mov
and
mov
pop
cld
jecxz
ds
sub
adc
jmp
push
addr16
leave
stc
xor
inc
fisttp
(bad)
xor
mov
addr16
dec
fdivp
and
outs
stc
in
icebp
mov
cmp
call
mov
movs
mov
into
mov
push
pop
push
sbb
data16
ss
and
jae
push
dec
ret
pop
mov
push
aaa
(bad)
cmp
push
lea
popa
push
les
mov
dec
movs
inc
iret
fnstsw
xchg
hlt
aas
sub
retf
cmp
xchg
imul
sbb
adc
mov
push
mov
mov
mov
jl
shl
xchg
or
jne
sbb
fs
inc
push
sbb
and
std
mov
pop
repz
mov
aad
sbb
cmp
xor
xchg
pop
jb
jne
(bad)
rcl
jmp
push
stc
push
mov
fimul
mov
pop
jbe
addr16
pop
in
cmp
ins
xchg
repz
push
in
mov
xchg
xchg
test
mov
xchg
je
loop
jae
mov
jmp
pop
dec
mov
push
push
out
stos
in
addr16
inc
(bad)
cmp
jp
cmps
push
sbb
push
repnz
test
loope
pop
push
loope
ins
adc
ficomp
push
int
mov
add
mov
or
mov
jno
hlt
add
nop
mov
jl
xchg
dec
and
push
and
dec
jg
mov
cmc
(bad)
out
mov
jno
adc
sub
ret
push
mov
mov
xchg
js
push
or
inc
ins
fdiv
mov
retf
rol
addr16
out
stos
cmp
mov
dec
dec
jmp
jecxz
movs
or
push
sbb
out
rcr
jns
leave
pop
(bad)
mov
jbe
repz
scas
call
mov
jae
adc
lea
cmps
stos
div
aas
int
fld
idiv
xchg
inc
xchg
fidiv
mov
xor
mov
xchg
mov
jns
add
push
fwait
mov
mov
(bad)
mov
sbb
mov
xchg
dec
fdiv
xlat
or
xor
hlt
jbe
movs
lds
mov
or
mov
fsubr
iret
mov
push
mov
sbb
int
xor
push
stos
jmp
and
retf
es
retf
dec
popa
pop
ins
mov
sbb
aam
test
and
mov
fimul
fbstp
ror
ja
cdq
loopne
mov
pop
in
shr
dec
ss
push
idiv
stos
hlt
or
or
and
add
scas
jmp
out
cmp
lock
adc
aaa
mov
pop
popf
xchg
cmp
pop
mov
sahf
push
dec
sub
xchg
or
pop
in
xchg
push
mov
cmps
pusha
add
movs
sub
out
loop
loopne
mov
pop
maxpd
push
fsubr
cmp
test
aad
cmc
iret
mov
lods
imul
scas
shl
cdq
add
adc
mov
pusha
int
and
jl
mov
push
xchg
bnd
pop
cs
pop
xchg
dec
and
adc
adc
aas
and
push
xchg
sub
movs
bound
xor
pop
jno
mov
and
add
push
leave
sbb
neg
adc
rol
lods
adc
sbb
in
inc
in
mov
(bad)
call
or
inc
jmp
fild
clc
and
lds
cmp
repnz
sahf
iret
mov
out
icebp
loopne
int3
xor
jmp
aas
xchg
add
xchg
cmp
and
popf
ins
in
test
pushf
nop
stc
push
push
dec
std
bound
push
adc
loop
push
sar
mov
mov
retf
shr
cmps
push
mov
fcomp
push
enter
push
inc
sbb
or
scas
cwde
inc
push
pop
jmp
ficom
retf
xor
scas
stc
push
mov
adc
mov
clc
clc
mov
push
test
clc
scas
cli
add
gs
fidiv
adc
mov
jns
jne
iret
inc
inc
test
pusha
jge
imul
packuswb
cwde
push
xchg
sub
ins
fcom
add
es
cmp
rcr
push
test
pop
push
sub
out
jge
push
jmp
xor
add
jno
pop
cmps
scas
je
out
ret
fsubr
scas
scas
mov
lea
sbb
nop
mov
push
dec
jmp
add
ror
mov
cwde
push
cdq
dec
or
and
pop
icebp
out
(bad)
in
clc
mov
pop
out
movs
xor
push
pop
jl
jne
mov
and
scas
push
sub
jns
(bad)
jecxz
es
sbb
lea
mov
sar
xchg
sbb
shl
push
sbb
mov
cdq
stc
lock
or
xlat
je
inc
into
or
fsubr
inc
fisttp
adc
icebp
mov
outs
lods
dec
movs
sahf
mov
loopne
(bad)
pop
add
push
test
out
fild
jns
xchg
mov
and
add
(bad)
pop
sub
stos
jge
inc
jb
retf
popa
push
sbb
pop
daa
mov
dec
jns
fmul
and
sbb
dec
adc
mov
push
mov
mov
int3
fld
rol
cld
popa
cmp
retf
sub
cmp
inc
cmp
mov
loope
fimul
sub
mov
test
test
add
xor
sub
clc
cmp
lods
jne
mov
mov
xor
daa
push
inc
popf
call
xor
ror
sub
pop
add
scas
sbb
sti
loope
and
and
xchg
add
sub
dec
fimul
jecxz
dec
into
retf
mov
popa
xchg
cmp
jmp
in
inc
push
jge
jg
es
int
jmp
sbb
mul
out
dec
inc
push
mov
sub
mov
out
and
cli
in
lock
add
xchg
push
loop
(bad)
mov
out
(bad)
movs
je
lahf
xchg
fld
jne
pop
jg
dec
(bad)
test
inc
push
push
vorps
push
test
add
js
into
retf
or
or
add
mov
cmp
jp
jle
imul
and
mov
xchg
aas
inc
call
js
leave
lea
and
call
or
(bad)
mov
jl
ins
xchg
pop
lds
jnp
cs
add
dec
jnp
fwait
aaa
sub
gs
mov
and
cmp
or
fucom
xchg
fild
cmp
cmp
push
pop
mov
mov
adc
sub
pop
lock
mov
or
stos
inc
push
adc
out
stos
jl
dec
push
jbe
(bad)
in
pusha
pop
cmp
test
(bad)
inc
or
test
inc
shl
stc
pop
movs
retf
sahf
stos
mov
lods
iret
test
hlt
xchg
mov
add
adc
sbb
clc
fs
test
inc
in
mov
jbe
(bad)
xor
cmp
scas
bound
xor
cmp
inc
inc
inc
test
cld
jno
mov
mov
lock
inc
retf
or
test
sbb
push
fwait
mov
scas
adc
in
sub
cmp
add
jne
or
fwait
jmp
idiv
adc
inc
mov
mov
rcl
int3
aas
out
lods
dec
test
fstp
inc
rcr
pusha
jo
fistp
mul
or
or
leave
fdiv
pop
dec
and
fsub
dec
outs
sahf
dec
call
mov
dec
inc
and
push
adc
es
sub
ds
aam
sahf
jg
call
and
stos
out
xchg
mov
test
and
mov
neg
adc
outs
dec
push
jp
in
sbb
mov
and
sbb
mov
(bad)
cdq
pop
cmp
jecxz
or
sbb
push
mov
dec
sub
hlt
movs
push
sub
fisttp
sbb
adc
push
mov
cdq
ror
fst
add
pusha
or
or
mov
(bad)
jge
mov
lods
mov
popa
or
sub
xchg
enter
cwde
dec
mov
sub
lahf
ret
imul
push
jne
fild
mov
push
mov
add
dec
hlt
retf
push
jno
mov
mov
adc
bound
aas
cmc
fst
sub
xchg
test
pop
shl
lods
test
(bad)
call
jns
or
in
or
(bad)
add
cs
pusha
inc
jle
sub
cmp
mov
jg
fisub
lea
sbb
test
mov
and
stc
inc
add
std
std
add
popa
sbb
(bad)
iret
sti
out
mov
test
mov
or
addr16
out
or
add
jl
test
xor
and
inc
xchg
sbb
or
cmps
xchg
cmp
arpl
neg
addr16
sub
je
retf
cli
popf
loope
mov
mov
fistp
in
xchg
jp
xacquire
xchg
mov
aas
pop
xchg
push
ficomp
sub
xchg
inc
mov
sub
ret
ja
movs
nop
fstp
fwait
push
sbb
adc
mov
clc
cli
push
mov
jmp
mov
adc
sahf
pop
pop
imul
push
xchg
les
xchg
cmp
(bad)
into
adc
outs
out
and
lock
call
cli
mov
cmp
push
gs
stc
clc
or
add
movs
sbb
pop
xchg
jno
out
(bad)
xlat
psrlw
movs
sar
cmp
loope
fild
arpl
sub
out
cdq
mov
adc
sub
bound
or
pop
add
cmp
aam
push
imul
adc
ret
mov
shl
or
jbe
fsubrp
xchg
jl
or
cmp
sbb
ret
pop
inc
push
bound
mov
mov
ins
fisttp
fstp
mov
or
cmp
retf
movs
fdiv
rcr
sub
inc
push
push
ret
test
xchg
fdiv
(bad)
repnz
dec
nop
dec
inc
and
fcomi
jmp
in
or
cdq
loopne
stos
pop
xor
retf
loop
out
dec
repnz
mov
jae
mov
daa
ret
xchg
jno
or
push
inc
jno
inc
ficom
sti
rcr
sub
loope
call
ret
xchg
arpl
sub
cmp
idiv
aaa
cdq
fadd
imul
and
xchg
push
jb
jnp
iret
sub
sub
icebp
adc
popf
xchg
jbe
xor
test
push
jle
clc
mov
push
xchg
data16
pop
test
cmps
cmp
xchg
xor
add
enter
outs
(bad)
cli
cmc
xchg
ret
xchg
pop
add
mov
cld
cmp
jns
sti
not
test
mov
sub
test
inc
fisub
inc
cmc
cmp
popf
cmp
xor
scas
xchg
jmp
mov
imul
cmp
sbb
shl
cld
dec
stc
xchg
cmc
nop
adc
test
in
fldcw
mov
retf
cmp
fisttp
jb
jb
outs
das
cdq
call
loope
shl
mov
xchg
stos
pop
inc
jnp
out
fnstsw
adc
mov
call
fwait
pop
ds
fadd
psubusw
dec
cmps
lds
and
es
dec
sub
mov
and
addr16
push
daa
mov
mov
add
add
addr16
xchg
push
add
sahf
push
jge
and
repnz
fadd
xchg
fnsave
loope
aam
shr
jo
pop
arpl
test
in
outs
jmp
mov
retf
and
lock
or
xchg
fld
mov
inc
int
out
cmp
das
cli
arpl
mov
cdq
mov
mov
pop
imul
mov
cmp
cmp
sub
push
push
sbb
ins
xor
and
cli
sar
push
sub
sbb
mov
adc
sub
fwait
lods
jae
mov
and
icebp
add
fwait
js
fcomip
pusha
sbb
lahf
jbe
aas
xor
xor
sbb
repnz
popf
lock
cmp
sub
loopne
dec
icebp
nop
mov
test
dec
sub
mov
rcl
xor
ja
mov
pop
mov
fistp
dec
jo
cld
sbb
mov
out
mov
sub
or
push
inc
dec
daa
and
icebp
push
pop
or
and
movs
jp
fwait
ret
aaa
adc
mov
jmp
mov
sti
cdq
mov
push
mov
enter
mov
cdq
or
xchg
xchg
fcomi
xchg
call
sbb
ret
daa
stc
jnp
rcl
push
ret
xchg
aam
dec
sbb
and
mov
lahf
add
mov
aad
mov
imul
mov
lods
dec
enter
stos
in
lds
in
fwait
xor
sbb
sbb
push
sbb
push
and
(bad)
lds
sub
lock
sbb
adc
inc
in
clc
mov
loop
jno
pop
les
xlat
scas
aad
sbb
(bad)
and
enter
and
jo
jmp
mov
sbb
outs
inc
test
jae
test
into
pop
add
sbb
and
adc
pop
clc
pushf
jecxz
xor
sbb
pop
stos
sbb
mov
cmp
sbb
adc
popa
dec
jbe
les
(bad)
in
mov
sbb
dec
add
sbb
in
test
push
cmovbe
xor
mov
mov
bnd
adc
call
mov
and
push
pop
cmp
add
sbb
fldenv
js
cmp
mov
es
push
cs
pop
mov
adc
sti
das
xchg
ds
push
inc
sub
ins
in
js
jmp
fiadd
sbb
stos
setl
push
in
add
ds
stos
mov
int3
cmps
retf
push
cmp
jle
shr
xor
pop
mov
xchg
pop
outs
mov
or
adc
sti
stc
adc
sub
sbb
sub
ret
loope
std
inc
mov
shl
ds
outs
hlt
rol
pop
scas
push
mov
retf
aad
xor
cmp
in
inc
xor
stos
lock
pop
fcomp
repz
adc
xchg
les
xchg
push
out
stc
ret
pop
pop
mov
outs
sbb
mov
arpl
mov
add
jl
xchg
adc
jns
in
outs
xchg
imul
icebp
inc
sub
dec
leave
fimul
jp
call
inc
imul
(bad)
aam
shl
mov
stc
lock
jge
shr
out
jmp
xor
mov
int
ret
in
out
aam
xor
inc
jmp
push
or
ret
cmp
cmp
jp
retf
lds
cmp
fidivr
inc
cs
sbb
adc
inc
out
retf
into
cdq
xchg
ror
pop
pop
ja
into
inc
fistp
add
cmp
pop
movs
mov
inc
repnz
or
pop
xchg
jno
mov
jmp
sahf
test
cmp
je
push
int
mov
fnstcw
mov
daa
adc
add
xchg
into
sbb
ins
fwait
jae
or
ss
jnp
xchg
dec
scas
popf
xor
lds
lock
iret
jecxz
addr16
cmp
jle
(bad)
adc
loop
lods
rol
das
movaps
sub
cmp
pop
fs
mov
fs
ror
inc
mov
cmp
pop
jg
mov
mov
xchg
mov
addr16
es
pinsrw
inc
xor
cmp
sbb
pop
lea
imul
jmp
jbe
push
pop
loope
mov
in
bound
hlt
dec
loop
fmul
movs
mov
retf
mov
and
(bad)
push
imul
les
jecxz
aam
sub
in
pop
cld
dec
cmp
mov
(bad)
add
sti
mov
shl
adc
ds
imul
hlt
sbb
add
in
cmps
movs
aad
push
dec
mov
(bad)
mov
aad
sbb
xchg
fwait
les
mov
jns
outs
adc
popf
gs
mov
lea
int3
add
sahf
sub
dec
gs
jns
xchg
xchg
in
in
mov
adc
clc
std
scas
aaa
std
mov
add
clc
xor
fwait
sub
add
aad
sti
mov
xchg
dec
adc
pop
retf
pusha
or
into
stos
lods
cli
imul
adc
lock
out
jge
mov
xchg
aaa
(bad)
mov
mov
inc
adc
add
jns
sahf
push
sahf
addr16
add
add
xchg
adc
or
ss
in
jecxz
add
sbb
jge
fsub
sar
and
test
cwde
in
push
jmp
cdq
repz
adc
iret
adc
cmp
sub
aad
jae
sub
imul
xor
out
imul
jbe
mov
rol
jnp
cmp
outs
arpl
and
mov
fisubr
xor
ins
pop
mov
dec
push
pop
sbb
(bad)
pop
jp
adc
sub
sahf
fisub
mov
mov
mov
or
rcr
call
sbb
rcr
pop
add
fild
and
mov
push
dec
cmp
sub
dec
iret
call
mov
jg
mov
add
mov
jnp
ins
shl
out
gs
out
int
mov
xor
(bad)
int3
and
mov
dec
stos
mov
xchg
sub
pop
push
ror
xlat
or
scas
aaa
cmp
pop
dec
inc
xor
dec
imul
lds
(bad)
push
sub
idiv
lods
cld
mov
sub
sub
adc
push
xor
lods
shl
push
lahf
bound
fisubr
shl
jle
jne
dec
cs
dec
hlt
aam
inc
sti
fcmove
into
dec
repnz
lods
inc
jg
dec
sub
lea
fwait
ret
push
das
push
aaa
ror
sub
mov
mov
add
arpl
cmp
sti
xlat
cmp
cdq
sub
mov
mov
lock
dec
int
xchg
mov
aad
inc
dec
adc
mov
sti
outs
sub
shl
div
adc
mov
pop
cs
push
or
(bad)
std
inc
addr16
push
add
xchg
and
xor
mul
sbb
je
dec
and
xor
cmp
test
call
push
fs
add
sti
sub
call
pusha
std
gs
xor
cmc
stos
jns
jmp
js
mov
call
jb
jg
inc
and
ins
mov
retf
out
adc
std
xchg
cwde
push
jmp
pop
xchg
jp
mov
(bad)
sti
nop
test
xchg
neg
and
fimul
add
cdq
add
sbb
shl
push
inc
adc
pop
sbb
mov
aam
mov
scas
lahf
cmp
fstp
imul
inc
jae
cmc
xchg
cmp
loope
cmp
mov
in
scas
shl
cli
xchg
xchg
jb
or
leave
cmps
imul
mov
out
ja
xor
and
mov
inc
int
xchg
mov
cmp
lods
push
gs
(bad)
push
jns
out
cdq
jmp
aad
mov
retf
sub
xchg
xchg
clc
pop
fcom
or
ins
adc
jmp
fist
addr16
out
mov
call
push
push
cmps
outs
rcr
bound
je
repz
fs
push
pop
fmul
or
push
repnz
icebp
clc
nop
shl
jle
dec
lock
je
inc
loope
fwait
xor
add
aas
stos
or
fmul
out
out
popa
xchg
push
or
out
out
ret
repz
add
icebp
daa
mov
or
adc
retf
push
xor
pop
bt
add
(bad)
repz
mov
sub
dec
clc
jg
sahf
mov
jmp
cmp
pushf
cmp
daa
into
icebp
sbb
neg
jmp
inc
xor
jle
sbb
cs
pop
jb
inc
pop
inc
or
nop
cs
jns
sbb
popa
lds
gs
gs
in
cwde
repz
pop
es
adc
sub
fs
imul
je
jl
ins
mov
out
push
inc
pop
jmp
stos
mov
add
dec
xor
push
mov
rcl
or
mov
xchg
sar
mov
repz
xor
imul
sbb
inc
xchg
mov
and
lahf
inc
cmps
cmc
mov
xor
or
neg
int
ja
in
xchg
cli
cmp
fcom
mov
mov
mov
sbb
add
pop
ds
mov
lods
cwde
sub
(bad)
and
mov
fdiv
bound
mov
fcmovnu
imul
xchg
cdq
pop
and
xor
adc
inc
inc
ror
sub
cwde
in
adc
lahf
out
mov
scas
pop
push
movs
iret
dec
cmp
mov
xor
mov
xor
(bad)
and
out
cmc
popa
idiv
add
inc
sub
jmp
dec
jl
dec
in
test
dec
cwde
pop
pop
fstp
mov
inc
ficom
in
pop
jnp
dec
sub
inc
shr
pop
stc
(bad)
out
adc
mov
xchg
push
inc
cmc
mov
jmp
in
(bad)
and
jle
sub
outs
jmp
rcr
add
ret
xchg
mov
inc
sub
ins
iret
mov
shl
pushf
jg
out
xor
clc
stc
dec
add
xchg
mov
in
jbe
les
and
call
icebp
repnz
scas
pop
push
cmp
cmps
inc
inc
cmps
movs
out
(bad)
(bad)
fsub
jnp
das
xchg
xchg
lods
adc
into
ror
ja
shl
mov
adc
call
adc
daa
mov
rep
aad
clc
dec
fcomp
xor
(bad)
lods
sar
test
in
outs
push
pop
aaa
fld
or
xchg
cmp
(bad)
adc
xchg
mov
dec
xchg
sub
xchg
outs
dec
in
sahf
loopne
outs
fimul
cmc
inc
jbe
pop
out
dec
adc
rol
xchg
sbb
(bad)
sub
dec
add
std
cmp
pusha
sbb
inc
fsub
out
dec
cmps
cwde
jbe
or
xchg
jl
dec
nop
sbb
pop
xchg
push
sbb
dec
jp
xchg
mov
xor
mov
jle
xchg
or
jb
ins
inc
cld
cs
xchg
rcr
pop
retf
mov
gs
lds
jns
fiadd
je
and
mov
mov
(bad)
(bad)
or
scas
xchg
std
popa
and
adc
mov
aaa
inc
sub
cmps
dec
movs
jnp
dec
dec
into
hlt
daa
dec
cmc
addr16
ss
or
sub
sbb
mov
adc
mov
popa
and
push
fld
mov
pop
mov
sbb
cmp
and
xchg
fmul
pop
mov
call
lods
cmp
pop
dec
sbb
mov
ss
loopne
adc
shr
sub
mov
out
js
shl
adc
lods
rcl
addr16
mov
stos
xor
dec
out
stos
jg
pop
out
push
mov
movs
fs
adc
cmc
jae
test
xchg
adc
cmp
shl
mov
test
mov
outs
call
daa
add
test
dec
popa
aas
dec
popf
mov
stos
mov
mov
lods
mov
dec
inc
mov
int
mov
in
sbb
in
inc
sub
mov
je
mov
lock
or
shl
fucomi
popa
and
jb
cwde
sti
daa
mov
jnp
cmp
ret
xchg
jl
pop
jnp
rcl
sbb
stos
aas
add
movs
pop
daa
popa
pop
cmc
sub
jle
and
mov
mov
(bad)
jmp
gs
or
aam
xor
adc
mov
or
loopne
and
adc
mov
gs
xor
pop
(bad)
push
adc
data16
cmp
and
popf
jle
(bad)
add
and
jne
adc
out
enter
(bad)
sub
pop
mov
mov
mov
sar
pop
dec
mov
jecxz
fcmove
xor
xchg
int
ins
pop
adc
fimul
push
out
and
imul
adc
lea
push
adc
into
pop
xor
in
pop
outs
sahf
inc
sub
imul
xchg
xchg
and
add
sbb
jbe
xor
mov
leave
fst
xchg
and
ret
loope
sbb
retf
push
(bad)
push
inc
adc
mov
push
lea
jb
sahf
add
sub
mov
or
dec
xchg
fiadd
gs
push
(bad)
sub
adc
imul
mov
inc
mov
fisttp
call
mov
dec
mov
push
jno
out
adc
push
ins
pushf
mov
pushf
fdiv
xchg
push
xchg
daa
in
mov
or
(bad)
mov
jns
inc
sbb
adc
lea
cmp
add
sub
cmp
outs
inc
adc
imul
ds
xor
pusha
pop
sub
xlat
jge
daa
cmc
(bad)
in
mov
imul
gs
add
mov
lahf
mov
(bad)
push
sub
pop
bound
xchg
das
pop
dec
mov
inc
addr16
ficom
lock
and
sbb
xchg
sbb
mov
mov
or
int3
imul
push
push
test
inc
mov
call
mov
int
arpl
or
mov
add
mov
ja
cmp
push
jne
sbb
mov
leave
or
jae
and
js
ret
rcl
adc
or
or
push
add
bound
jl
push
dec
jle
(bad)
mov
or
mov
pop
jnp
add
add
inc
xchg
inc
int3
outs
add
sar
inc
pop
xor
push
out
adc
xor
add
mov
sbb
in
lahf
fldcw
xlat
push
adc
push
int3
adc
out
pop
add
xlat
jns
jo
inc
mov
cld
loope
lahf
or
inc
loopne
pop
ja
jbe
repnz
stos
bound
lock
add
jnp
push
xor
or
adc
pop
xor
(bad)
mov
fist
mov
jl
mov
ins
lods
jb
std
cmps
repz
cmp
mov
aad
mov
sahf
(bad)
mov
xchg
ss
mov
mov
sub
mov
cmp
bound
jo
enter
ss
mov
iret
jb
idiv
inc
ret
test
inc
ins
and
or
into
jae
pushf
add
adc
mov
mov
jae
les
stc
adc
cmps
xor
stc
data16
push
adc
push
pop
sti
inc
mov
add
ret
(bad)
xlat
ror
fistp
dec
add
push
outs
mov
fucomip
jnp
dec
enter
jp
dec
mov
js
jae
and
test
aaa
xchg
(bad)
loope
(bad)
ficomp
xchg
push
ficom
lods
ja
jnp
loopne
stos
mov
or
jecxz
jo
hlt
pop
cmp
retf
sub
fyl2xp1
mov
xor
jge
mov
pusha
mov
lahf
sbb
(bad)
or
push
pop
movs
jmp
jp
(bad)
ja
stc
iret
mov
sbb
pop
popa
or
mov
data16
popf
(bad)
dec
stos
cmp
ins
inc
inc
lock
push
sub
div
and
cli
xor
sbb
aaa
sbb
fs
mov
sub
cmp
sub
mov
cdq
mov
mov
or
clc
and
mov
mov
les
stc
shr
out
dec
into
cli
xor
push
sub
iret
aam
ftst
and
rep
inc
inc
jns
into
in
xchg
xchg
pop
in
div
xor
sbb
rol
stos
pop
retf
mov
ins
loop
add
push
push
call
js
mov
movs
xchg
mov
jno
out
push
enter
je
fcom
push
cmp
je
cmp
ins
cmp
xor
cmp
cmc
jb
or
push
movs
sub
cmp
mov
leave
push
sahf
lods
pop
lods
push
adc
jmp
aad
sub
push
jae
xchg
aam
pop
out
push
fst
adc
mov
and
ja
into
mov
sub
xor
mov
enter
loope
dec
loop
sbb
xchg
ja
out
lods
push
adc
cmp
repnz
jbe
hlt
dec
hlt
or
bt
inc
adc
lahf
xchg
retf
sbb
add
pop
push
movs
jns
or
ret
mov
sub
es
adc
nop
push
mov
inc
add
test
or
sbb
jnp
js
xchg
outs
mov
ret
sbb
(bad)
int
add
xchg
mov
jo
movlps
cli
inc
shl
or
(bad)
push
fmul
sete
xor
mov
push
or
inc
sahf
inc
xchg
add
dec
inc
ins
jns
cmp
mov
or
ins
lds
xchg
in
js
or
jne
pop
jp
inc
jmp
mov
mov
add
stos
loopne
nop
(bad)
shr
mov
dec
adc
mov
mov
dec
or
mov
scas
adc
fistp
add
mov
pop
cmps
repnz
int3
inc
inc
mov
and
jae
(bad)
out
sti
xor
cli
lea
sbb
mov
or
mov
mov
mov
push
push
out
push
or
mov
mov
(bad)
into
mov
mov
in
push
cmp
push
imul
lea
in
(bad)
mov
xor
stos
loope
push
lds
mov
add
lahf
(bad)
call
or
lds
dec
push
outs
dec
leave
pushf
fidivr
mov
fsubp
and
fld
jo
ss
xor
mov
es
sbb
lea
fimul
add
xchg
(bad)
mov
cmp
mov
push
jg
addr16
jb
mov
jo
mov
mov
(bad)
mov
je
and
mov
in
mov
movs
push
push
es
jae
xchg
fild
mov
test
shl
out
in
or
js
ja
xlat
mov
push
cmps
push
dec
ret
ja
nop
push
push
mov
or
outs
test
test
iret
push
and
aas
fidivr
bound
ds
jle
dec
in
xor
fnsave
es
adc
jno
popf
xchg
sub
push
jmp
das
scas
adc
test
pop
cwde
add
(bad)
out
pop
mov
and
xor
out
lea
pop
pop
inc
and
imul
sbb
outs
cmps
je
ror
jae
jno
stos
mov
arpl
pmuludq
jo
imul
ret
dec
adc
xor
(bad)
and
inc
retf
retf
fdivr
movs
adc
mov
xor
test
leave
sahf
(bad)
pop
les
ins
addr16
sbb
pop
iret
out
popf
xchg
(bad)
test
mov
repnz
push
mov
dec
adc
mov
aad
in
push
bound
cmp
or
in
pop
idiv
nop
repz
in
adc
mov
clc
adc
pop
mov
es
rcl
jo
dec
xchg
hlt
ins
cwde
ret
or
xchg
cmp
pop
jmp
cli
xor
mov
hlt
iret
or
es
jne
add
cmp
cs
add
mov
(bad)
mov
data16
call
ss
dec
xchg
inc
xor
mov
std
sbb
sbb
ror
and
dec
cwde
dec
stos
mov
mov
jbe
out
les
dec
inc
xchg
cmc
and
and
popf
or
pop
add
outs
dec
imul
sti
jb
jecxz
stos
push
shl
stc
mov
retf
pop
ins
sub
dec
(bad)
sub
test
das
sub
mov
aaa
pop
jge
leave
and
je
outs
nop
xor
hlt
dec
idiv
lea
add
sub
(bad)
loopne
movs
inc
(bad)
fwait
jge
test
xchg
int3
jp
scas
(bad)
xor
jge
lds
xchg
adc
and
push
leave
and
push
inc
les
xchg
push
ror
dec
mov
pop
inc
daa
lods
push
push
xchg
jne
aad
pop
mov
sub
sti
push
or
or
loopne
imul
mov
sub
mov
sub
test
cwde
mov
mov
jo
cmp
add
sub
fcmovnbe
xchg
xor
enter
mov
loope
mov
sti
adc
loop
aad
adc
pop
retf
add
or
mov
dec
imul
pop
sbb
pop
pop
lods
jecxz
jo
adc
scas
jno
mov
pop
fisub
out
outs
push
pop
adc
or
out
mov
sub
or
in
pop
jle
push
sub
out
xchg
scas
jo
bound
scas
test
aam
call
lock
(bad)
xchg
push
pop
sub
inc
stos
into
adc
fnstcw
lock
mov
jnp
shr
sub
out
outs
sub
or
fprem
xor
rcr
mov
inc
mov
sub
adc
mov
(bad)
and
cmc
mov
stos
scas
and
std
or
sbb
jecxz
mov
jno
fucom
dec
xchg
or
(bad)
xchg
in
and
fiadd
je
call
test
mov
in
es
add
cdq
xchg
xchg
ret
add
pop
jb
das
add
pop
xchg
div
and
arpl
mov
shr
or
mov
ret
or
addr16
frstor
mov
movs
sub
mov
pop
mov
pushf
mov
and
lods
inc
mov
popf
ds
(bad)
push
cmp
xchg
pop
mov
sbb
ds
out
les
jno
shr
mov
mov
ret
cdq
or
cmp
dec
push
jbe
inc
mov
or
jle
in
shr
add
jmp
je
test
pop
sbb
retf
sub
not
mov
pop
mov
mov
aad
or
repnz
dec
in
xchg
loope
cmp
movs
call
out
or
pop
int
cld
int3
push
jle
mov
mov
sub
out
in
sub
(bad)
jmp
test
push
dec
out
xchg
lahf
lea
adc
xchg
push
cli
or
cmps
sbb
mov
mov
xor
jg
loope
sti
or
push
(bad)
mov
sahf
ficomp
inc
push
icebp
and
int
pushf
and
dec
imul
adc
jmp
inc
leave
mov
jge
cwde
add
adc
xchg
pop
jp
jp
fdiv
jge
arpl
push
adc
push
and
out
xchg
cld
addr16
loope
pop
in
sbb
mov
fmul
or
jbe
and
inc
outs
cmps
in
adc
xchg
add
inc
gs
iret
pop
inc
in
es
mov
rol
outs
(bad)
or
sub
or
mov
div
movs
mov
test
enter
leave
ds
outs
ret
mov
mov
push
xor
mov
neg
imul
xchg
lock
leave
mov
inc
lea
mov
loopne
retf
es
test
fsub
mov
xchg
movs
mov
jp
sbb
mov
fxch
jo
pushf
dec
leave
enter
sbb
les
ror
call
data16
jmp
sbb
sbb
in
pop
out
mov
cmp
pop
adc
xor
test
xchg
mov
jnp
mov
push
daa
pop
ficomp
movs
pop
imul
cld
scas
inc
xor
xchg
push
mov
jno
repnz
ret
add
(bad)
(bad)
les
in
cwde
xor
add
mov
pop
dec
fnstcw
imul
aam
jb
push
outs
jle
cmp
mov
(bad)
sbb
jns
pop
pop
popf
icebp
lock
jae
je
nop
call
push
inc
adc
xchg
jle
js
pop
cmp
mov
push
(bad)
mov
inc
div
or
and
js
rcr
cli
and
scas
xor
inc
cli
inc
mov
xchg
xor
jge
imul
cld
cmp
rcl
mov
jno
adc
out
cs
fld
mov
cmps
das
ror
dec
xchg
stos
test
xchg
add
and
std
lods
inc
sub
(bad)
mov
fisttp
(bad)
lock
mov
loop
repz
ins
add
sub
rcl
sbb
ja
jbe
bound
mov
xchg
out
push
movs
loope
xlat
popa
je
add
mov
mov
sub
sar
jae
xchg
retf
push
and
outs
push
cmp
inc
(bad)
lock
pop
add
jmp
lock
lods
inc
popa
je
dec
imul
push
xor
and
xchg
rcr
jno
xchg
loop
outs
xor
or
push
or
pop
sub
push
cmp
ins
retf
stos
mov
xor
jmp
int3
sub
xlat
les
dec
dec
inc
sub
stos
pushf
pop
mov
lahf
push
jnp
and
retf
inc
arpl
pop
iret
mov
pusha
addr16
fimul
repnz
mov
std
outs
mov
loop
popf
xchg
inc
loop
and
add
lahf
ins
ret
mov
dec
jl
iret
movs
sub
ds
js
std
sbb
dec
add
inc
in
int
test
cld
rcr
test
pop
xchg
imul
loope
iret
cwde
icebp
mov
push
mov
mov
mov
(bad)
push
jns
or
data16
sub
daa
mov
sbb
and
cdq
push
ss
(bad)
test
inc
mov
dec
push
jl
pop
xchg
and
jbe
mov
cld
repnz
or
push
pop
sbb
sar
cli
lods
sub
jmp
fsubr
sbb
jle
gs
sbb
adc
inc
mov
or
cdq
xor
test
dec
cmp
push
bound
and
outs
std
adc
xor
lahf
(bad)
(bad)
mov
imul
rol
dec
imul
ret
ins
xchg
aas
test
aad
mov
or
xor
dec
or
lds
inc
adc
and
dec
add
dec
jmp
adc
repnz
ret
fcomp
xchg
es
ror
iret
fucomip
sahf
cmps
inc
push
retf
sbb
call
push
xor
inc
and
ds
dec
ins
popa
jbe
test
or
add
fsubp
and
sub
jl
cmp
ret
jae
mov
into
mov
cmps
add
jmp
xchg
into
pop
cmps
retf
add
mov
pop
mov
cmovae
loop
cmp
lds
sbb
jae
data16
repnz
inc
xlat
fstp
or
enter
pusha
jnp
int
das
push
stos
popa
in
std
imul
fild
repnz
je
stos
rol
add
xchg
cli
inc
or
xchg
cmp
adc
mov
jge
hlt
and
(bad)
add
rcl
pop
jnp
cmc
scas
in
xchg
xor
jecxz
xor
sar
fidivr
ret
jae
fwait
gs
lock
dec
jle
leave
arpl
inc
pushf
(bad)
push
dec
pop
sbb
lahf
jne
sbb
aas
sahf
test
movs
pop
(bad)
fld
(bad)
bound
scas
pop
sbb
mov
dec
sub
push
cli
test
xchg
mov
inc
imul
rol
mov
out
shl
sbb
out
adc
or
jl
iret
bound
xor
xchg
data16
inc
pop
out
xchg
clc
xor
mov
inc
jmp
cmc
jo
test
push
pop
xchg
outs
aam
pop
dec
test
fdiv
sub
sub
inc
inc
mov
push
mov
out
sbb
cmp
(bad)
xchg
out
mov
push
imul
mov
stc
mov
sbb
stc
pushf
xchg
jb
inc
pop
push
outs
lea
outs
repz
cwde
mov
adc
lahf
pop
nop
ffreep
and
call
jp
sub
inc
test
ror
inc
in
cmps
dec
icebp
inc
in
(bad)
add
dec
xchg
(bad)
xchg
test
or
fld
jno
icebp
pop
int
addr16
nop
ss
inc
es
rol
leave
mov
int
sub
inc
fist
or
dec
sbb
fnstcw
add
outs
inc
hlt
push
loopne
pop
inc
xchg
mul
mov
(bad)
bound
call
push
hlt
add
mov
ss
cs
out
test
and
dec
shr
xchg
fild
mov
jmp
imul
push
mov
cdq
xor
add
and
pop
shr
pop
cdq
ins
mov
adc
lds
xchg
cli
mov
inc
xchg
int3
imul
fs
jae
lods
push
arpl
popf
movs
xor
push
daa
pop
inc
into
repz
xlat
push
inc
imul
mov
cdq
add
out
test
jg
loope
add
mov
mov
mov
das
sar
jle
mov
stc
fwait
mov
out
dec
sar
pop
shld
mov
call
int
or
aam
stos
les
fnstenv
add
neg
sar
in
push
dec
outs
ds
push
mov
lods
sbb
arpl
lods
shr
push
test
push
(bad)
mul
push
jno
add
movs
jae
mov
mov
mov
fcmove
mov
or
dec
dec
inc
xchg
dec
daa
ja
js
aam
outs
imul
loope
jmp
mov
push
xchg
neg
and
lods
inc
stc
cwde
das
dec
and
mov
into
adc
sbb
xor
imul
call
inc
loopne
fdivr
mov
jmp
lock
int
call
xchg
(bad)
je
or
dec
sub
daa
mov
mov
xchg
in
xchg
aas
xchg
mov
int3
addr16
pop
jmp
call
dec
bound
xor
push
pop
daa
clc
retf
fnstenv
int3
repnz
neg
test
pop
std
dec
jp
ins
sub
and
ret
(bad)
xor
test
retf
xchg
pandn
ins
jbe
jl
sbb
jg
aaa
xor
into
xchg
push
jmp
fisttp
jns
repnz
mov
bound
dec
ss
fwait
push
xchg
int3
daa
lods
loope
jg
(bad)
lock
push
sub
je
rdtsc
push
dec
or
xchg
cwde
xchg
mov
xchg
shr
push
mov
xchg
pop
ret
sub
ret
es
sub
sub
stos
std
and
pop
das
pop
mov
dec
and
pause
mov
jo
call
cli
pop
jae
inc
inc
sub
xor
mov
push
mov
xchg
push
mov
in
mov
dec
aad
jge
lods
lds
fcom
sbb
cmp
add
scas
out
or
(bad)
push
pop
mov
repz
sub
popf
not
sbb
push
cmp
inc
in
sub
icebp
push
pushf
xor
mov
xor
inc
jb
inc
mov
push
add
iret
mov
jno
mov
fxch
mov
je
cld
mov
pop
xchg
js
or
icebp
lods
or
ins
in
xlat
mov
mov
jge
xchg
out
popf
mov
xchg
pop
dec
mov
xor
cmps
(bad)
fdivr
call
mov
xor
mov
jmp
pushf
mov
sub
or
mul
jno
iret
into
dec
and
xchg
jecxz
xor
xor
repnz
xchg
dec
or
sti
fnstsw
ficom
xor
cwde
(bad)
sbb
mov
hlt
sahf
repz
call
mov
lock
push
ss
push
push
push
push
scas
and
aaa
sbb
push
(bad)
out
retf
push
cdq
dec
inc
adc
gs
add
xor
mov
nop
push
retf
mov
call
fild
int
repnz
add
xor
inc
int
jge
ss
sbb
jbe
(bad)
popf
lods
jp
mov
pop
xor
push
dec
or
dec
ror
outs
out
aaa
push
inc
add
add
mov
and
push
ins
xchg
in
sbb
clc
inc
scas
adc
inc
xchg
jns
or
or
push
shl
push
mov
ret
inc
jns
mov
add
sbb
ss
mov
dec
(bad)
inc
push
sbb
je
or
and
push
std
pushf
sbb
jecxz
mov
enter
sbb
jp
(bad)
jnp
mov
pop
push
scas
lock
clc
cmp
add
cmc
bswap
mov
mov
dec
adc
arpl
mov
imul
pop
xor
(bad)
ds
test
pop
adc
mov
pop
out
(bad)
or
xchg
movs
jmp
jp
inc
cmp
jl
popa
sbb
out
dec
xchg
bnd
mov
adc
cmp
dec
add
add
mov
jmp
outs
and
jno
push
adc
add
fmulp
and
pushf
mov
std
call
fld
aad
fild
outs
rcl
push
dec
je
cmps
outs
sub
jecxz
jae
adc
mov
popa
in
(bad)
mov
mov
aaa
cmp
rol
cmp
push
cmps
push
sbb
sbb
pop
popf
cdq
inc
repnz
lahf
jb
add
mov
xchg
push
aas
add
scas
add
inc
daa
ja
pop
iret
jl
mov
inc
cmp
ror
add
cmp
mov
inc
aaa
and
sub
outs
scas
sbb
lea
adc
cli
or
js
adc
cmp
les
pop
push
xchg
cmp
xor
in
shl
inc
rcl
arpl
lods
in
shl
fild
(bad)
std
jbe
mov
retf
mov
aaa
xor
dec
test
adc
fsubrp
mov
mov
mov
popa
jmp
in
dec
xchg
ds
sub
sbb
mov
shl
add
cmp
(bad)
dec
lea
repnz
pop
call
je
mov
jnp
cmp
push
mov
cmovnp
fidivr
or
cmp
fadd
js
pop
in
xor
add
loop
mov
inc
mov
nop
or
stos
jns
inc
popf
test
imul
and
jmp
cmc
mov
cmc
adc
shr
mov
test
mov
fiadd
mov
ins
adc
gs
iret
mov
ins
sbb
stos
jl
aad
jnp
ja
test
jo
adc
mov
cli
pop
push
add
sahf
dec
inc
stos
add
pop
or
les
(bad)
xor
retf
retf
aaa
inc
out
loopne
aas
push
cs
sub
push
shr
popa
and
pop
xchg
sub
stc
ds
jae
xchg
sub
or
pop
mov
aam
adc
adc
mov
addr16
in
xchg
sub
cs
add
dec
lea
cmp
(bad)
mov
mov
iret
pushf
xor
jo
clc
jmp
xor
repz
cmp
sbb
rol
shr
inc
shl
(bad)
mov
out
mov
gs
jo
and
mov
push
sub
cwde
xchg
push
pop
add
push
inc
cmp
addr16
dec
jo
mov
or
jmp
and
ins
or
arpl
pop
leave
bound
les
and
popa
data16
push
hlt
data16
lea
jo
inc
cmp
cld
loope
xor
jbe
in
push
xchg
(bad)
stos
sub
push
adc
inc
cmp
mov
je
xchg
or
loop
sti
mov
or
sub
bound
bound
(bad)
dec
xchg
das
stos
pushf
cwde
jmp
aad
es
movs
xchg
pop
mov
dec
mov
test
cwde
rcr
push
bound
xchg
(bad)
enter
push
add
(bad)
jnp
shr
inc
lds
out
jle
pop
inc
jnp
cwde
jmp
(bad)
aam
setnp
xor
ja
push
inc
pop
jb
dec
add
dec
and
cwde
jne
pop
mov
inc
inc
jnp
movs
and
add
add
sub
jo
cmc
inc
add
xor
dec
sahf
call
push
mov
jmp
enter
dec
mov
shr
xchg
(bad)
mov
adc
ins
loop
out
enter
mov
sub
loope
push
aaa
push
xor
pop
fstp
adc
sahf
arpl
or
inc
pop
dec
ret
mov
and
push
sub
jge
mov
cmp
int
cmps
scas
add
xor
loop
add
push
jmp
inc
pop
jae
out
push
loopne
inc
add
push
mov
jmp
inc
pop
mov
imul
je
out
push
outs
imul
hlt
push
inc
xor
out
sub
jne
dec
and
inc
jg
add
xor
stos
es
fs
lahf
mov
test
or
fisubr
fnstenv
je
push
cs
mov
mov
jo
mov
inc
(bad)
mov
adc
je
ins
mov
repnz
test
stc
mov
sub
test
sbb
jge
and
sahf
clc
les
push
(bad)
repz
call
or
mov
movs
jae
xchg
call
push
mov
add
(bad)
dec
pop
cmp
js
ss
cmp
adc
shl
ins
data16
inc
jbe
xchg
pop
aam
dec
push
pop
adc
add
pop
aas
mov
(bad)
cwde
mov
pop
(bad)
pop
adc
lods
jge
sti
mov
cmp
adc
jo
adc
fcomp
repnz
mov
jmp
mov
jle
sbb
test
push
and
cmp
cwde
dec
push
loopne
fdivr
dec
and
sti
jo
sub
sbb
mov
mov
pop
adc
push
lahf
add
daa
imul
sbb
mov
xor
and
jb
sub
push
xor
cmc
pop
sbb
mov
jg
xor
inc
and
xchg
mov
test
sbb
js
push
iret
loope
pop
mov
adc
sahf
xor
out
pushf
adc
or
or
in
push
push
mov
cld
fstp
add
fcmovne
push
popf
je
dec
jns
sbb
imul
push
test
add
leave
aam
cmp
data16
pop
shl
out
scas
mov
pop
and
shl
inc
scas
fimul
dec
dec
jne
lds
pop
xor
push
test
mov
mov
adc
pop
xchg
shl
(bad)
sub
outs
jb
sub
inc
js
pop
add
inc
pop
xchg
xor
mov
add
sub
lahf
dec
mov
push
retf
idiv
jmp
push
jbe
add
iret
icebp
cs
jne
leave
sub
pusha
test
jmp
cld
push
jmp
xchg
dec
push
sti
pop
ja
into
stc
fdivr
inc
mov
xchg
sbb
jg
inc
mov
push
arpl
sub
dec
inc
push
or
imul
das
test
cmp
jb
orps
jl
mov
outs
xchg
jnp
jl
jle
mov
repnz
aaa
call
push
xor
in
mov
or
fisubr
jge
test
les
mov
and
ins
out
retf
(bad)
xor
mov
jl
imul
lahf
inc
pop
and
rcl
sti
ficom
cld
addr16
in
jnp
mov
scas
sbb
mov
daa
inc
pop
scas
(bad)
jmp
add
outs
dec
add
(bad)
(bad)
cmp
dec
sbb
cmp
xchg
add
jne
pop
repnz
mov
shr
mov
stos
stc
pop
push
jae
aaa
adc
dec
jne
xor
push
icebp
jl
cld
je
adc
sbb
or
leave
scas
xchg
xchg
jmp
jno
jecxz
fsubr
mov
adc
(bad)
push
cmp
cmps
arpl
je
(bad)
sub
or
pop
xchg
xcrypt-ctr
cmps
fstp
(bad)
push
jecxz
imul
test
test
out
test
sbb
leave
adc
outs
ins
inc
dec
inc
cld
mov
inc
test
mov
fbld
popa
adc
int3
stos
lods
lods
scas
cmp
mov
in
push
out
mov
test
mov
dec
xor
fcomp
mov
icebp
jg
jns
sub
sub
ret
les
test
out
sbb
cmp
mov
push
(bad)
repz
xchg
push
ins
imul
in
push
xchg
pusha
mov
popa
mov
lahf
cwde
call
cmp
mov
adc
shl
bound
sbb
jno
mov
mov
into
int
pop
mov
scas
xchg
leave
mov
xchg
retf
gs
jns
(bad)
jmp
aas
out
(bad)
mov
mov
mov
lahf
xchg
nop
lds
aaa
or
jns
sub
add
repnz
cmp
jg
test
inc
(bad)
test
fisttp
xor
arpl
test
cmp
lods
not
and
cmp
adc
mov
adc
fst
pop
push
(bad)
cmp
pop
xchg
arpl
add
(bad)
and
jge
std
test
dec
bound
xchg
outs
adc
pop
cmp
shl
fistp
inc
push
mov
adc
(bad)
addr16
out
or
and
jns
xlat
lahf
jmp
push
add
test
push
mov
jns
fwait
pop
sub
xor
fucomip
retf
push
in
and
mov
xchg
push
cmp
shl
cmps
scas
xchg
outs
fadd
xor
std
retf
mov
inc
jl
cmp
inc
jle
je
inc
sbb
fimul
shr
jbe
dec
push
jns
sbb
or
outs
inc
loope
jle
sub
jbe
dec
cmp
repnz
or
cmps
add
mov
mov
test
dec
ins
retf
sti
xchg
mov
push
iret
mov
cdq
pop
pop
xor
mov
mov
xor
jge
add
(bad)
pop
jae
sbb
enter
mov
jae
rcr
aaa
sbb
jg
mov
scas
inc
fxch
mov
test
lea
pop
jmp
push
sub
fdivp
rcl
scas
ja
inc
ds
pop
in
jbe
mov
jo
sub
movs
jp
xchg
push
mov
call
inc
out
cmc
xchg
mov
mov
mov
loopne
push
ja
sbb
or
int3
jb
add
sti
or
int3
scas
inc
test
(bad)
xor
fcom
mov
or
fstp
(bad)
push
div
xchg
mov
addr16
aad
xor
mov
push
inc
fwait
cli
repz
and
cmps
and
jl
sbb
push
out
test
ja
jne
xchg
jns
ins
adc
pop
push
dec
add
js
retf
arpl
push
das
pop
adc
pop
push
ds
clc
add
ds
push
dec
movs
cmp
or
clc
mov
gs
mov
jb
sar
push
fidivr
jg
inc
ficomp
loope
or
out
jg
mov
or
setns
popf
out
sahf
or
sbb
sbb
mov
mov
inc
pop
or
cli
je
jae
sbb
inc
leave
nop
lea
mov
jp
imul
into
mov
push
ss
and
out
pop
fcom
jbe
int
(bad)
cmp
adc
mov
lods
and
dec
cs
imul
or
ins
aas
or
mov
movs
xor
enter
and
cwde
jnp
jnp
jns
test
(bad)
push
xor
sbb
scas
out
jg
fsqrt
in
test
fwait
mov
jp
and
push
pop
in
lock
push
cdq
jbe
stos
or
dec
mov
stos
xor
dec
inc
add
fidivr
test
dec
push
adc
and
sub
mov
call
adc
repz
jbe
cmp
ja
jo
add
xchg
mov
add
cmp
cmovg
out
sahf
mov
sti
jnp
movs
mov
das
ss
in
loope
in
mov
pusha
cmp
daa
xchg
lds
cmps
or
cmp
pop
jl
call
daa
mov
stos
popf
(bad)
mov
and
gs
(bad)
repz
pop
jecxz
xor
sub
cmp
mov
dec
sbb
mov
retf
sbb
inc
sub
and
sbb
push
cmp
aam
cwde
lahf
ror
push
mov
add
aad
ficomp
mov
cdq
cmp
add
fld
mov
or
aad
or
cmp
pop
mov
push
sbb
pop
add
rcr
shl
dec
mov
ss
(bad)
in
scas
mov
fstp
pop
call
rcr
pushf
or
sub
xor
arpl
jle
retf
adc
cmp
xchg
sub
xor
lahf
mov
ret
mov
sbb
inc
out
mov
aad
mov
push
pop
add
test
test
and
mov
xor
xchg
cmc
mul
ret
or
rcr
cmps
cmp
aam
ins
push
(bad)
push
loope
sub
je
loop
sub
inc
xchg
imul
(bad)
retf
adc
or
cmps
xchg
xchg
das
inc
inc
or
mov
xor
ss
dec
push
push
sbb
mov
test
repnz
push
test
lods
loope
fbld
lock
mov
test
push
sub
inc
mov
mov
inc
mov
bound
shl
jnp
imul
xchg
(bad)
scas
in
push
xor
scas
(bad)
jecxz
sbb
stc
jle
adc
js
or
mov
pop
leave
out
(bad)
movs
mov
data16
and
adc
cmp
fsubr
js
jo
push
es
push
cmps
mov
mov
adc
dec
lea
inc
les
ror
jnp
sar
stos
push
mov
inc
xchg
dec
xchg
scas
jl
push
aam
mov
mov
imul
sub
jae
mov
inc
stc
and
adc
in
and
dec
int3
daa
inc
jae
add
add
in
xchg
mov
add
adc
jp
add
pusha
aaa
hlt
sbb
into
and
icebp
js
mov
test
gs
or
ins
sub
dec
jle
xchg
loope
pop
leave
xor
cwde
push
lock
fdiv
test
adc
mov
sub
jae
sbb
movs
push
ins
dec
add
jns
push
pop
daa
cmp
pop
ja
(bad)
sbb
mov
add
sbb
xor
dec
sbb
xchg
jecxz
ficomp
sti
loope
fcmovnu
shl
inc
ins
xor
adc
in
sub
dec
push
jbe
add
sbb
arpl
out
jmp
add
fwait
jl
adc
nop
mov
fnstsw
not
adc
aad
push
sub
out
xor
call
sbb
lock
or
shl
pop
rcr
pop
sahf
ret
push
mov
mov
jno
mov
pop
jno
xchg
sbb
pusha
sar
call
jmp
ret
jbe
inc
cmp
int
retf
sbb
ret
repnz
and
retf
adc
sbb
sub
xor
dec
cdq
cmp
sahf
jbe
out
mov
jge
xchg
test
loop
push
or
xchg
inc
or
pop
jnp
push
sub
(bad)
xor
mov
sub
pushf
cmp
popf
xchg
mov
popa
fld
nop
in
xor
cwde
js
inc
sbb
leave
xchg
adc
push
test
not
mov
mov
jns
inc
inc
or
movs
pop
mov
push
outs
outs
sbb
xlat
sbb
sub
xchg
sub
dec
retf
data16
jmp
jecxz
jb
dec
mov
imul
mov
jns
call
adc
gs
(bad)
sub
push
nop
and
nop
pop
xor
xchg
and
lock
ins
mov
loopne
push
shl
and
jmp
xchg
ss
test
xchg
icebp
inc
lods
std
inc
mov
xor
adc
(bad)
repnz
inc
xlat
mov
shr
push
movs
pop
daa
mov
lods
out
loope
loopne
divps
cmps
clc
jmp
aas
sahf
js
inc
xchg
or
rep
into
mov
adc
outs
adc
push
jl
inc
xchg
loop
aas
(bad)
jge
push
cli
jg
ret
or
cmp
or
xchg
dec
adc
retf
sti
add
int
push
jbe
pop
xor
es
add
or
lds
cld
enter
in
mov
pop
popa
out
jbe
pop
mov
cmp
pop
scas
nop
sub
imul
jmp
or
sbb
sbb
retf
add
xchg
imul
test
addr16
addr16
mov
int
dec
fwait
xbegin
sbb
jle
bound
in
inc
dec
xor
pop
fiadd
jo
pop
inc
lds
adc
and
aaa
sub
stc
sub
hlt
gs
jae
test
sub
popf
stos
fwait
fwait
add
dec
lock
cmp
imul
ret
pop
(bad)
(bad)
daa
mov
and
jbe
(bad)
in
push
jnp
adc
push
jmp
xor
push
icebp
jo
nop
cwde
fcomip
xor
aad
sub
loop
dec
repz
aaa
rol
inc
(bad)
in
jl
aaa
jg
idiv
mov
cmp
movs
inc
lods
add
out
std
shl
cld
js
mov
call
je
mov
sub
arpl
jbe
sbb
fs
js
lock
sbb
pop
add
int3
mov
dec
ja
adc
clc
jle
cld
icebp
add
lods
mov
xchg
push
lds
xchg
adc
adc
cmp
ret
cmp
jo
cmps
cmps
mov
sub
dec
jmp
fistp
push
mov
push
mov
mov
pusha
jo
xchg
mov
xor
pop
fidivr
(bad)
jb
sbb
mov
mov
rdmsr
(bad)
pusha
pop
xor
xchg
sub
adc
out
jns
imul
ja
cdq
jg
sub
cmp
(bad)
add
icebp
mov
inc
mov
ficomp
arpl
inc
cli
dec
mov
xor
inc
ret
mov
addr16
mov
retf
stos
dec
pop
sbb
mov
cmp
inc
mov
jnp
fistp
mov
inc
jb
mov
add
fwait
xchg
add
fs
ret
lods
aam
pop
clc
push
das
pusha
imul
cmp
xchg
das
or
shl
sub
stc
dec
int3
mov
retf
out
mov
mov
aad
mov
and
hlt
and
sub
sub
dec
push
add
jge
cs
or
ss
outs
call
inc
outs
sub
daa
fs
ret
arpl
in
jmp
dec
sbb
mov
or
loope
cmp
bound
retf
xor
push
(bad)
and
cdq
dec
int3
or
test
xchg
jecxz
in
in
xchg
mov
(bad)
jne
mov
sbb
sub
cmps
ror
retf
fs
cmp
fldenv
rcr
int
mov
int3
pop
dec
dec
inc
mov
repz
inc
and
cmps
movs
push
mov
and
clc
fiadd
scas
addr16
leave
fnstenv
mov
loopne
aaa
jmp
aam
mov
xor
jl
push
jecxz
int3
les
sub
adc
call
retf
jmp
retf
or
rol
mov
movs
fidivr
scas
mov
mov
pop
xor
xchg
ins
and
or
sub
in
mov
test
mov
ficom
or
into
cmps
scas
sub
adc
mov
out
lds
jae
pop
dec
les
clc
xchg
lock
adc
dec
retf
repnz
cmp
daa
fsubr
xchg
mov
fdivr
popa
hlt
add
test
loope
ret
imul
int3
xor
pop
push
xor
aad
jle
sar
popa
and
fs
lock
js
mov
jo
sbb
dec
sti
fdivrp
mov
push
movs
imul
repnz
sbb
adc
adc
add
xor
dec
call
fwait
jo
hlt
int
cmp
push
inc
inc
mov
jmp
fst
dec
stc
repnz
adc
wrmsr
and
or
aas
push
shl
jg
mov
mov
fucomi
or
ss
sbb
ds
les
sub
sbb
sub
cdq
sub
adc
je
adc
ins
fs
popf
sub
jbe
mov
sbb
in
in
(bad)
push
cld
pop
xchg
sbb
das
enter
mul
pop
pop
and
loop
addr16
arpl
push
aas
jecxz
mov
repz
push
add
aaa
xchg
in
dec
ja
in
movs
push
push
or
sahf
adc
mov
or
cmps
add
push
rcl
dec
jno
jb
in
rcr
addr16
cmp
mov
pushf
stc
dec
lock
sub
(bad)
xor
add
and
mov
(bad)
pusha
lods
xchg
aam
stos
mov
shr
jp
dec
mov
(bad)
repnz
sub
push
and
mov
sbb
(bad)
xchg
mov
jbe
popf
xor
int3
in
push
push
lea
ss
movs
(bad)
jl
outs
repz
pushf
mov
sbb
mov
and
mov
xlat
cdq
mov
(bad)
loopne
adc
ss
and
jb
cmp
sahf
fsub
xchg
test
aas
inc
xor
lock
imul
js
pop
lods
rol
popa
test
stos
push
inc
inc
mov
cmp
movs
pop
stc
adc
fisttp
fld
xor
dec
rcr
mov
cmp
push
sbb
mov
cdq
inc
sar
mov
xor
jmp
ja
stos
shl
rcr
push
ret
rol
cmps
cmps
and
mov
sub
dec
xchg
daa
out
xor
jno
jle
(bad)
div
sbb
cmc
jge
jmp
fstp
int
push
out
cdq
(bad)
daa
leave
pushf
sahf
stos
(bad)
and
es
xor
and
xchg
dec
fwait
dec
test
mov
loopne
cmp
call
and
arpl
xchg
adc
arpl
(bad)
pusha
mov
xchg
cmp
bound
ins
cmps
into
mov
xor
xor
loope
xchg
ds
sti
inc
cmp
mov
mov
icebp
out
pushf
push
mov
dec
fsubr
sbb
mov
mov
punpcklwd
mov
aas
call
mov
js
sub
(bad)
mov
push
fisubr
fwait
bound
ins
and
jmp
cmp
jl
cmps
sub
adc
add
xor
fucomip
cmp
out
dec
inc
adc
test
test
xchg
push
movs
int3
jmp
outs
daa
stos
lds
(bad)
xor
pop
sbb
stc
adc
jb
shl
xor
mov
nop
cmp
call
mov
mov
aaa
sbb
int
out
jbe
sbb
xchg
inc
(bad)
imul
loope
lahf
fwait
xchg
push
sub
fnstenv
jl
xadd
nop
push
pop
adc
pusha
scas
jae
sbb
sbb
out
inc
push
pop
std
fst
mov
hlt
push
nop
cmps
lea
mov
in
xchg
jge
gs
lea
or
jo
add
mov
rcr
out
push
test
outs
data16
fist
cmp
sub
jmp
add
push
push
pop
push
push
aam
cmp
or
cmp
push
(bad)
das
fsubr
leave
cmp
mov
jecxz
outs
ret
ja
push
dec
xchg
jecxz
ret
fldenv
push
lock
push
movs
xchg
imul
cdq
mov
mov
jbe
adc
mov
cmp
jp
push
fs
bound
cs
mov
in
mov
jno
imul
xor
fidiv
lea
rcl
push
jecxz
stos
imul
or
jmp
lea
inc
imul
shr
sub
pop
inc
mov
stos
fld
or
lods
dec
xor
push
adc
mov
adc
aaa
imul
ins
adc
ds
push
das
sub
pop
fldcw
ret
fwait
icebp
ret
jns
mov
das
bound
out
xchg
les
sub
repz
push
mov
dec
jecxz
(bad)
stc
xor
retf
shl
rol
(bad)
or
pop
mov
cmps
jle
jp
loope
outs
push
fwait
xchg
inc
jge
add
sub
push
popa
sbb
shr
ror
add
lods
loop
inc
outs
cmp
pop
dec
cmp
cs
cmp
mov
mov
cmp
in
lods
repz
mov
cdq
xchg
out
adc
inc
aam
cmp
enter
arpl
das
into
in
shr
jg
gs
pusha
add
jb
pop
inc
inc
pop
aad
mov
adc
inc
(bad)
jge
(bad)
jno
xor
push
stos
add
pop
mov
stc
add
dec
sbb
push
rcl
ja
cmps
aam
cmp
(bad)
pop
xchg
mov
shl
lahf
ins
ffree
rol
mov
mov
cmp
mov
inc
out
add
aad
jle
popf
xchg
cmp
xor
sbb
pop
jns
(bad)
cmp
sub
jae
and
adc
xchg
ja
jbe
out
and
jge
xlat
jo
jmp
push
ja
movs
fisubr
test
push
cmp
mov
dec
xor
fld
pop
inc
test
hlt
ds
push
stos
adc
(bad)
pop
out
push
mov
pop
ror
cmp
imul
cs
out
push
out
mov
shl
jg
cwde
js
out
add
mov
xchg
sub
nop
dec
shr
mov
in
test
mov
jne
sbb
mov
cmp
xchg
bound
mov
clc
in
jmp
xor
and
xlat
xor
iret
push
and
push
jle
cmps
(bad)
mov
test
sub
push
and
std
mov
xor
jnp
cmp
in
cmc
xchg
mov
push
mov
inc
cmp
cmp
mov
xchg
pop
mov
iret
loop
cwde
mov
test
dec
test
mov
jne
sub
xchg
mov
scas
test
fidivr
leave
or
in
xlat
xor
cwde
sub
pop
adc
mov
mov
iret
mov
arpl
adc
mov
jo
mov
xlat
loope
shl
jns
call
rol
jns
nop
jg
(bad)
sub
(bad)
cld
lods
or
dec
call
or
pop
and
jp
outs
mov
cmp
lahf
pusha
pop
pusha
call
pusha
and
scas
dec
xor
aaa
or
aad
or
adc
cmp
leave
in
or
cdq
cmps
fidivr
cmp
push
fwait
aam
int3
lea
xchg
test
rcr
(bad)
adc
push
pop
cdq
add
cli
test
push
icebp
ja
sbb
fidivr
jecxz
movs
pop
jecxz
and
add
aad
stos
stc
sbb
dec
in
xchg
push
inc
inc
lods
mov
retf
push
mov
div
(bad)
mov
mov
addr16
je
push
std
not
or
inc
sbb
shl
lea
xchg
(bad)
stc
mov
fcom
dec
test
cmc
jl
cmp
xor
scas
rcr
enter
xchg
mov
push
mov
imul
mov
add
fnstsw
and
cmp
jae
add
inc
cwde
adc
mov
lods
jl
fcmovnbe
js
not
test
sub
sbb
inc
cmp
sbb
(bad)
lea
in
js
imul
fxch
ins
mov
jge
fldcw
std
add
cmps
je
lds
repz
and
dec
cmp
out
cmps
add
mov
xchg
cs
mov
retf
mov
mov
xor
xor
ret
psubq
sbb
sbb
cld
pop
sub
or
push
mov
(bad)
into
jg
bound
sub
in
je
pop
(bad)
mov
in
mov
xor
cmps
mov
mov
lock
or
xor
mov
sub
scas
adc
or
cli
fldcw
inc
add
(bad)
test
outs
adc
push
push
out
scas
icebp
push
aas
mov
movs
daa
inc
lods
call
sbb
mov
sbb
test
and
xor
fwait
or
dec
into
sti
(bad)
int
fst
stos
push
and
scas
jl
inc
sub
jecxz
jno
inc
mov
fld
pusha
inc
daa
add
dec
adc
sbb
aas
(bad)
adc
data16
jle
ss
jge
es
dec
or
scas
into
jnp
mov
outs
jae
nop
xor
mov
mov
stos
lea
inc
cmps
jnp
outs
inc
jno
idiv
push
xor
cmpxchg
nop
ss
jno
and
add
push
mov
and
mov
int3
cmp
ret
cmps
jecxz
pop
sub
mov
push
or
xor
shl
loopne
adc
mov
jmp
neg
adc
mov
pop
int3
xchg
jge
xor
cmp
jno
mov
out
retf
call
pop
idiv
mov
(bad)
adc
pop
mov
pop
sub
out
push
retf
pop
pop
mov
test
js
push
ja
adc
pop
loope
xor
into
pop
cmp
push
push
dec
fcmovnb
sbb
enter
inc
lods
mov
mov
pop
ins
mov
push
add
rcr
mov
push
inc
and
pop
jae
or
sub
ret
jnp
jno
div
dec
mov
pusha
into
(bad)
push
fwait
push
adc
mov
push
ret
lods
cmp
add
mov
imul
pop
(bad)
std
mov
lods
inc
test
ret
push
and
test
cmp
cmp
shl
and
nop
and
jmp
ss
add
(bad)
xlat
hlt
dec
mov
aad
cwde
adc
push
cld
mov
mov
out
jp
leave
mov
inc
leave
sub
push
dec
ja
mov
push
ss
bound
mul
outs
add
and
dec
adc
jecxz
int
int3
jecxz
rcr
sub
adc
ficomp
inc
adc
leave
sub
cs
jmp
jne
mov
or
xchg
sbb
js
outs
lock
jp
pop
rcl
adc
and
sbb
addr16
jno
ss
stos
movs
imul
xchg
sahf
loop
push
mov
push
rcr
movs
in
aam
hlt
jmp
mov
mov
pusha
xchg
pop
inc
jge
imul
nop
mov
scas
xchg
(bad)
xor
lods
mov
xchg
mov
xchg
fwait
xchg
add
sbb
fnsave
retf
hlt
das
inc
jo
or
sub
dec
repnz
inc
out
sti
js
scas
retf
mov
fld
mov
adc
hlt
hlt
push
lods
and
data16
xor
outs
data16
call
jg
popa
mov
test
fdivr
adc
vprotd
push
pop
scas
fs
add
jno
repz
pop
xor
sbb
xchg
mov
int3
dec
mov
inc
adc
dec
cdq
push
pop
mov
xor
cmp
sbb
jmp
dec
mov
push
outs
les
xor
jne
inc
stos
mov
cdq
push
pop
shl
inc
or
iret
les
or
enter
sub
xchg
cwde
emms
add
ror
in
xor
sbb
mov
test
btr
push
adc
and
pop
je
test
call
cmps
xchg
mov
loope
div
jae
xchg
retf
daa
adc
xor
cmp
scas
imul
mov
jecxz
mov
(bad)
sbb
or
jmp
dec
mov
stos
push
pop
sar
inc
shr
arpl
inc
daa
push
lock
pop
push
inc
xor
cmp
mov
sar
int
loope
add
cmp
inc
push
test
daa
xchg
test
lds
fist
adc
cdq
pop
jge
mov
out
dec
and
adc
es
or
inc
inc
sub
popa
popa
or
call
sbb
jge
das
pop
fwait
mov
sub
mov
sbb
in
rcr
adc
inc
cld
ret
pop
out
cmp
push
mov
and
pop
xor
xor
cmc
xchg
loopne
and
scas
test
mov
sub
(bad)
jae
inc
or
lock
sti
fsub
retf
and
shl
add
mov
xlat
cmp
cli
addr16
xchg
mov
(bad)
xor
lods
shl
icebp
enter
adc
adc
cld
push
add
xor
and
xchg
adc
push
pop
sub
int
ins
sub
and
mov
daa
mov
lahf
mov
loope
ret
movs
into
leave
call
cmp
jmp
imul
jl
lahf
inc
aaa
push
movs
retf
adc
mov
xor
push
jb
jns
fstp
or
(bad)
mov
ins
lahf
push
and
rcl
sub
imul
lods
jns
ja
int
sahf
pop
mov
test
mov
jp
out
loopne
sub
pop
xor
cdq
shl
and
lds
outs
and
mov
and
in
mul
nop
mov
dec
loopne
cmp
fwait
test
lods
cmp
sbb
fisubr
icebp
and
jge
jmp
dec
in
jno
mov
sbb
hlt
out
push
cmp
inc
loop
xchg
fdivr
out
xor
stc
mov
sbb
inc
fsubr
or
mov
sar
into
mov
jno
into
jp
adc
cld
imul
xor
push
and
xchg
cdq
popf
jmp
add
sbb
push
out
push
out
mov
frstpm(287
sub
jb
int3
out
test
xor
jno
(bad)
(bad)
mov
jmp
mov
loope
(bad)
jbe
test
mov
das
push
dec
xchg
fdiv
xchg
(bad)
jmp
sbb
cmp
std
xor
cmps
sub
dec
jmp
add
out
or
cdq
mov
mov
mov
jb
cmps
pop
movs
mov
ret
sbb
dec
imul
or
shr
dec
and
pop
or
jmp
outs
mov
inc
cmps
or
jge
dec
inc
loopne
push
xchg
test
inc
jl
sbb
mov
mov
cli
cwde
pop
icebp
ret
inc
cmp
sti
cmp
jle
aam
push
test
in
xor
imul
(bad)
and
clc
cmps
jb
pop
adc
cmp
add
cmp
bound
je
cli
cmp
es
cld
hlt
ins
fwait
mov
jo
mov
and
cli
jmp
dec
jae
xor
mov
pop
or
and
je
(bad)
pop
sahf
push
push
ins
cld
cmp
int
out
sbb
push
mov
out
mov
cmp
add
push
pop
mov
jle
aas
arpl
pop
xchg
xchg
xchg
fwait
inc
jecxz
(bad)
add
ret
jp
pop
mov
cmps
(bad)
pop
pop
or
lds
mov
and
adc
cmp
add
adc
and
out
or
jmp
xor
loop
mov
and
fs
test
(bad)
les
jns
rcr
outs
xchg
xchg
idiv
jmp
mov
enter
mov
arpl
and
push
lods
(bad)
jp
dec
rcl
test
dec
outs
sub
(bad)
sub
bndldx
pop
ret
add
add
inc
and
mov
pop
sahf
sub
fild
add
add
push
sub
and
sahf
mov
lahf
scas
outs
movs
sub
leave
(bad)
cmpps
xor
sub
xchg
rcr
movs
test
stos
dec
retf
into
or
imul
or
add
pop
out
mov
out
jbe
stc
icebp
loope
xchg
int
out
push
xchg
outs
or
push
xchg
cmp
in
add
arpl
stc
xor
add
shr
jle
stc
lea
jge
jmp
sbb
fwait
jo
cmps
lock
not
rcl
scas
sahf
fsubr
ss
fwait
clc
test
ins
les
push
add
mov
cs
inc
cmp
mov
push
mov
in
cmp
pop
clc
mov
xchg
dec
or
sbb
out
xchg
mov
adc
push
out
(bad)
sbb
or
(bad)
xor
cmps
dec
mov
inc
out
sbb
mov
ins
pushw
fnstsw
es
or
pop
dec
xchg
shr
xchg
(bad)
adc
stos
xchg
test
cmp
sbb
aad
cmp
pop
and
or
xchg
sub
inc
call
sub
stos
hlt
out
cli
mov
std
test
push
out
rep
push
aaa
aad
iret
xor
test
in
xchg
icebp
and
sub
push
or
fs
enter
std
dec
and
out
jae
(bad)
test
sub
push
and
fidivr
aad
xchg
xchg
cmp
jmp
ins
out
rcl
popf
pop
or
loope
mov
pop
mov
ins
mov
int
ret
inc
inc
pop
inc
lock
scas
retf
jle
lea
das
xchg
mov
cli
mov
dec
push
fmul
dec
icebp
adc
fisubr
mov
out
mul
ret
std
or
pop
dec
adc
into
xchg
movs
mov
cmp
test
push
movs
xchg
jg
es
call
dec
jge
bound
int
test
push
add
mov
inc
nop
mov
xchg
leave
(bad)
fs
xor
sahf
jne
xchg
jle
loope
in
clc
(bad)
es
push
or
pop
push
push
dec
fimul
pop
inc
fsub
test
dec
rol
or
adc
out
adc
shr
cmp
jo
xchg
repnz
stos
jbe
dec
inc
js
cmp
es
das
push
pop
inc
mov
pop
(bad)
rcl
dec
adc
adc
in
pop
cmp
or
jg
rcr
out
push
call
out
aam
popa
mov
lods
ret
movs
call
and
sahf
mov
dec
gs
dec
and
push
pop
sub
jnp
enter
mov
(bad)
ins
jno
mov
dec
xchg
cmp
pop
lahf
push
add
sub
pushf
sti
loope
pop
fdivr
xchg
lea
adc
push
dec
inc
dec
idiv
mov
adc
mov
mov
retf
fidiv
scas
dec
out
(bad)
mov
push
jle
repz
dec
add
and
lds
pop
je
adc
inc
rcr
xor
cmp
jle
cld
xchg
jl
sbb
pusha
dec
ins
mov
push
out
sbb
call
scas
cmc
add
and
xchg
sbb
jl
and
and
and
jle
loopne
cmc
xor
jp
ins
ss
ja
cdq
add
test
push
jae
pushf
fisttp
push
imul
add
mov
out
xchg
pop
xor
pop
xchg
push
(bad)
lods
arpl
fcomp
pop
aas
jmp
stc
iret
push
pop
sbb
dec
scas
pop
inc
push
lock
mov
inc
xor
in
xor
data16
not
cmp
fidiv
pop
pop
ins
or
retf
into
mov
mov
iret
in
adc
add
int3
sti
pusha
cmc
jecxz
xor
sub
xchg
enter
mov
pop
aaa
rol
xor
xchg
mov
sub
(bad)
jbe
test
test
pop
dec
xchg
call
inc
ret
sahf
jb
jp
jmp
inc
pop
leave
lahf
(bad)
jecxz
(bad)
data16
or
jnp
xor
xchg
mov
sbb
xchg
in
imul
add
inc
adc
push
ret
push
out
rol
cs
in
scas
stos
xchg
xor
jmp
into
pop
call
mov
(bad)
loopne
sub
(bad)
cld
js
mov
mov
inc
and
mov
add
pop
xchg
and
ss
out
xor
mov
mov
into
inc
fdivr
or
dec
adc
cmp
repz
pop
push
mov
xchg
xor
sub
add
mov
retf
mov
pop
inc
cmc
dec
mov
xor
dec
loopne
inc
pop
call
mov
cdq
in
out
in
mov
push
xor
jg
mov
jno
fcomp
dec
aad
and
out
cli
scas
xchg
jmp
nop
jo
jp
cmp
jg
push
out
jbe
push
lods
std
cmp
inc
stc
fidivr
adc
pop
jge
(bad)
cmp
mov
mov
or
dec
int3
pop
mov
pushf
pop
dec
add
loop
dec
hlt
outs
imul
mov
rcl
enter
mov
repnz
jbe
pop
out
mov
xlat
push
or
and
add
test
or
leave
mov
aam
into
(bad)
pop
pop
fwait
mov
lea
outs
mov
test
lods
xchg
add
in
push
adc
sbb
dec
xor
les
mov
sbb
cli
mov
dec
push
inc
retf
cmp
cmp
mov
fucomi
mov
inc
loopne
jmp
dec
ds
outs
mov
pop
xchg
les
dec
inc
push
hlt
jns
ds
test
and
cdq
mov
cld
xchg
repz
or
movs
push
pop
aas
push
stos
int3
ds
dec
sub
sbb
inc
jno
(bad)
fisttp
loope
ins
pop
div
mov
cdq
movs
or
push
leave
movs
aad
mov
cld
dec
outs
hlt
mov
dec
sub
(bad)
cmp
fcom
jl
mov
xchg
iret
adc
pop
push
mov
(bad)
jbe
mov
push
adc
mov
inc
scas
dec
mov
popa
mov
add
mov
lsl
test
test
in
adc
loop
inc
mov
adc
and
movs
jle
lea
jns
pop
imul
pusha
in
addr16
call
mov
hlt
xor
inc
ret
(bad)
pop
icebp
inc
push
bound
add
test
inc
xor
sahf
xchg
ins
cmps
ja
mov
lahf
xor
std
rcl
mov
push
out
xor
cdq
and
xchg
out
test
push
fnstsw
inc
les
mov
jae
nop
push
cdq
ret
push
call
and
fstp
cwde
pop
and
cmps
in
or
adc
push
test
lods
lea
cmps
aam
rol
int
repnz
pop
sar
lahf
fwait
xchg
jmp
jns
test
mov
js
and
movs
lods
sbb
xor
xchg
movs
push
mov
(bad)
push
clc
sub
stos
(bad)
out
mov
push
mov
fcomp
xor
xchg
or
(bad)
jnp
out
cmc
sbb
sbb
mov
xor
mov
arpl
xchg
pop
ror
xor
fist
call
outs
jmp
icebp
fwait
add
les
sahf
sbb
mov
retf
cmp
repnz
xor
inc
in
mov
into
cld
or
lods
pop
sbb
lock
hlt
loopne
loopne
mov
aas
jl
mov
xor
adc
fld
fidiv
(bad)
cmp
shr
jl
fstp
inc
sub
or
dec
sub
push
retf
in
movd
in
in
and
jmp
jl
jbe
xor
sti
sub
lds
mov
shr
popa
cmp
pop
jmp
popf
int3
cmp
mov
mov
fbld
jne
fwait
cli
sbb
std
xchg
out
or
popf
sbb
cmps
shr
jge
fst
jle
retf
xor
mov
mov
push
test
or
add
dec
xchg
leave
fcom
test
xor
aad
pop
(bad)
mov
xor
jge
xchg
sbb
mov
push
jo
ret
movs
fnsave
push
cmps
call
(bad)
jmp
xchg
inc
sub
ret
push
mov
inc
xchg
std
xlat
jno
mov
or
mov
idiv
hlt
mov
ins
fwait
aam
sbb
jbe
out
inc
rcl
cmp
(bad)
sub
adc
cmp
div
fdivr
mov
sub
dec
test
es
popfw
cmp
stos
(bad)
hlt
xchg
lahf
cmp
dec
xlat
sar
rol
into
pop
ja
out
pushf
out
dec
clc
and
fst
popa
lds
push
call
mov
scas
ins
not
in
int
movs
jae
test
std
pop
sub
mov
or
mov
mov
mov
add
ss
mov
cmc
mov
or
inc
mov
mov
loopne
adc
call
call
stos
mov
dec
in
in
movs
test
xchg
nop
inc
sahf
popf
xchg
add
cwde
add
stos
jp
mov
jecxz
xor
pop
inc
sbb
and
or
dec
inc
mov
retf
xchg
adc
cmps
push
xchg
lods
pop
add
push
rcr
aas
mov
jns
mov
xchg
xchg
shr
cs
and
mov
popa
xor
popa
dec
jae
out
add
inc
cmp
ja
mov
(bad)
test
lock
(bad)
dec
mov
dec
push
sbb
iret
mov
and
push
mov
add
icebp
xchg
sub
or
xor
lds
dec
mov
mov
scas
daa
fs
retf
sbb
add
xchg
sbb
dec
dec
dec
inc
aad
cmp
cmp
daa
mov
sub
or
inc
xchg
cmp
jb
out
inc
mov
mov
mov
push
dec
sub
fs
inc
pushf
push
add
inc
or
jmp
fisubr
xchg
adc
cmp
cs
dec
fadd
pop
push
xor
sbb
jmp
ss
pop
pop
loope
dec
mov
into
push
les
cwde
into
xor
add
dec
adc
push
(bad)
push
hlt
dec
inc
push
pusha
pop
cs
cmp
cmp
jl
adc
xor
sub
dec
lods
push
repnz
dec
sub
inc
adc
cli
hlt
sub
popf
mov
js
(bad)
mov
in
push
jne
sbb
shl
mov
mov
das
dec
cmp
xor
cwde
inc
xlat
jae
(bad)
cmp
lods
sub
or
cmp
ret
icebp
shr
aaa
icebp
add
push
sub
adc
std
mov
int
into
or
add
(bad)
jne
pop
xor
xlat
test
dec
(bad)
rcr
inc
mov
pop
movs
add
data16
aaa
pop
aaa
popa
lods
pop
jbe
test
jg
xor
rcr
pop
in
lds
and
mov
ret
add
cmp
bound
pop
scas
cli
mov
and
call
push
xchg
es
enter
jae
mov
ds
and
in
(bad)
je
and
and
mov
mov
fdivr
pop
xchg
xchg
loope
repnz
rol
jns
push
xor
pop
or
(bad)
add
adc
mov
mov
scas
pop
mov
jns
popa
lds
cmp
adc
test
(bad)
mov
cwde
adc
jg
mov
cwde
outs
adc
fsub
push
mov
xchg
push
push
cmp
inc
mov
push
scas
cmps
(bad)
push
sbb
movs
cs
push
and
out
push
cmps
xchg
fstp
lods
mov
pop
inc
xor
push
xchg
cmp
retf
ja
or
adc
and
mov
in
or
pop
mov
call
push
dec
mov
pop
cmp
sahf
leave
dec
repnz
mov
iret
push
retf
iret
and
mov
mov
sbb
dec
stos
pop
xchg
pop
imul
sti
xchg
push
mov
mov
add
dec
dec
hlt
lock
cmp
dec
inc
stos
inc
aad
mov
je
adc
push
pusha
cmps
fnstenv
mov
aaa
(bad)
leave
aas
ds
cdq
das
std
add
iret
dec
bound
cld
stos
dec
in
arpl
in
add
pushf
dec
leave
jae
ja
xchg
loopne
out
hlt
cmp
mov
jl
xlat
lahf
cwde
jns
(bad)
fucomp
cmp
jbe
ins
fst
cs
inc
(bad)
call
push
fcom
jns
push
loop
lods
push
sbb
mov
cmp
inc
or
bound
ret
push
icebp
mov
dec
nop
in
and
add
loopne
dec
(bad)
cmp
mov
push
add
jl
or
cmps
sub
shl
pop
stos
fisttp
pop
adc
repz
cmp
movs
shr
aas
repnz
pop
xchg
cmp
or
and
sbb
aam
xchg
movs
or
ror
push
dec
cmp
ret
inc
mov
xchg
test
jo
sbb
sub
data16
cmp
dec
fwait
cmp
and
add
add
(bad)
in
lock
sub
mov
xchg
xchg
loope
es
stc
in
push
imul
pop
ja
cmp
mov
push
dec
jb
and
mov
pop
test
jb
add
sub
mov
or
leave
cmc
or
mov
pusha
jle
lock
sbb
pop
jnp
adc
cwde
push
mov
jmp
pop
aaa
or
jmp
add
repnz
out
add
mov
sub
setno
scas
test
jno
lock
retf
sbb
jo
mov
aam
mov
mov
aaa
or
je
inc
cmp
add
lock
in
nop
mov
pop
push
mov
xor
jb
mov
push
mov
paddb
jae
dec
mov
sbb
push
out
mov
sbb
imul
out
cmc
mov
pop
(bad)
imul
lds
iret
into
adc
pop
jge
dec
jecxz
dec
mov
add
jl
push
sti
pop
imul
sbb
out
jnp
iret
sbb
sub
leave
mov
add
arpl
movs
mov
mov
push
cmps
or
pop
pop
dec
cmps
jbe
(bad)
mov
ins
rcl
push
sub
push
and
sub
xchg
jmp
xor
sub
pop
push
nop
or
pusha
pushf
or
mov
xlat
sti
mov
or
push
cmc
es
out
and
mov
inc
add
jns
inc
(bad)
lods
int3
ret
mov
lahf
sub
mov
ds
scas
cmp
jnp
int3
adc
outs
mov
js
mov
scas
add
mov
stc
or
push
enter
lods
stos
scas
daa
imul
add
js
sub
pop
xchg
jmp
xor
cmp
ret
ja
push
outs
xchg
jae
jge
mov
std
cmp
mov
or
iret
ret
xchg
dec
inc
jnp
dec
ja
mov
xchg
int
dec
repnz
jnp
(bad)
jmp
mov
das
lds
cdq
dec
nop
xlat
data16
mov
adc
std
mov
adc
cmp
stc
mov
leave
cmp
pusha
fcomp
loop
ja
adc
lea
pop
pop
dec
mov
out
test
das
jnp
and
xor
sub
cs
pop
call
jmp
retf
adc
inc
and
mov
push
call
mov
sub
sub
push
into
enter
and
or
(bad)
jge
jo
outs
xor
inc
repnz
xchg
jbe
stc
cmp
or
mov
shl
lahf
shl
out
mov
dec
test
xchg
test
lahf
mov
adc
arpl
fisttp
push
mov
inc
or
jle
call
ss
imul
add
leave
ficom
mov
es
(bad)
retf
dec
add
cmps
movs
cmp
adc
cmp
out
push
dec
cs
outs
jno
jmp
retf
pusha
push
test
mov
xlat
pop
push
jg
es
adc
data16
push
mov
icebp
push
or
xor
clc
data16
inc
push
xchg
lea
push
mov
inc
into
push
push
push
ja
lods
in
ja
pop
fbld
cmp
pop
ret
(bad)
jno
mov
out
sub
xchg
das
loope
jno
cmp
loope
cmp
fst
or
icebp
jo
popa
adc
(bad)
movlps
adc
cmps
mov
xchg
es
pop
into
fwait
and
jns
pop
outs
addr16
je
push
inc
and
adc
add
adc
out
jns
cwde
jbe
or
and
xor
push
cwde
je
jne
fwait
inc
sub
mov
cdq
sub
test
ror
in
addr16
clc
dec
cmc
jno
leave
pop
lock
test
repnz
xor
and
(bad)
cmp
dec
int3
shl
sub
das
mov
aad
scas
jmp
mov
cli
imul
sub
mov
sbb
leave
test
mov
pop
jnp
retf
sbb
xchg
add
pop
and
xchg
imul
cld
outs
jle
outs
cld
pop
adc
adc
sar
cwde
push
test
lahf
int
mov
lds
in
or
xchg
jp
xor
add
gs
or
jl
imul
(bad)
fmul
sub
scas
pop
sub
pop
cmp
aas
jmp
sub
cmps
mov
xchg
out
call
fwait
sub
add
scas
ror
cdq
lea
enter
and
push
mov
push
and
das
mov
sbb
sub
inc
(bad)
jns
xchg
std
mov
adc
xor
add
mov
push
push
push
add
or
or
(bad)
fisub
mov
push
add
fbstp
aad
dec
and
dec
cmp
xor
shr
mov
shr
pop
mov
shl
inc
in
les
or
fist
mov
and
scas
shl
mov
icebp
ins
inc
mov
psllq
mov
aas
dec
loope
and
enter
cld
icebp
inc
dec
pop
ret
jo
test
jo
dec
xchg
xlat
leave
popf
jg
mov
retf
les
sbb
cs
inc
or
mov
dec
std
mov
adc
push
or
ja
push
push
(bad)
(bad)
jno
sar
push
loopne
push
pop
sbb
xchg
mov
clc
rcl
sbb
aam
cmp
and
int3
hlt
cld
sub
mov
cmp
sub
cdq
sbb
sub
cli
sub
sbb
dec
and
lahf
push
mov
push
sbb
xchg
cmp
xchg
das
scas
je
mov
rol
xor
pop
enter
test
and
arpl
jl
into
movs
mov
jns
int
mov
es
or
es
cmp
add
mov
jle
nop
ss
es
lea
pop
popf
sti
popa
cmp
icebp
mov
dec
mov
movhps
mov
adc
pop
push
sbb
jo
xlat
add
jle
stc
out
push
scas
dec
cmp
pop
nop
push
out
std
test
push
(bad)
loope
out
cld
(bad)
xor
iret
lea
push
popf
push
xchg
or
push
arpl
jns
sub
psubq
jmp
fnsave
jle
mov
arpl
cmp
or
xchg
ins
jnp
enter
adc
push
mov
(bad)
xchg
ja
mov
mov
cwde
les
loopne
push
adc
jmp
rol
repnz
ins
fcomp
xchg
xchg
or
add
sbb
sub
cli
hlt
inc
fs
lahf
iret
jg
push
jmp
cmp
les
xlat
out
movs
sub
and
das
pushf
rol
add
prefetch
add
mov
out
int
push
in
push
xchg
push
and
out
popa
rol
jno
fcomip
push
inc
sti
mov
idiv
mov
aas
not
and
icebp
jae
sar
dec
or
stc
adc
mov
lods
out
and
jne
mov
int
cmp
mov
or
xchg
xchg
lods
icebp
lock
sub
inc
xchg
xchg
cwde
outs
push
jnp
popf
movs
ins
js
in
inc
(bad)
das
aam
call
idiv
cmp
or
ja
fmul
adc
ror
scas
call
add
enter
jno
and
xlat
or
stos
add
movs
dec
movs
mov
push
push
cmp
retf
mov
js
adc
inc
and
cmc
fdivr
sahf
pop
aad
aas
inc
pop
test
add
sub
inc
mov
fwait
or
push
pop
push
push
or
inc
fstp
adc
loop
loope
in
fcmovnb
stc
mov
in
imul
mov
cmp
push
aas
aam
lods
cdq
sub
inc
test
add
xchg
es
cmc
hlt
mov
jo
stos
lahf
mov
lods
mov
mov
ss
aam
popf
xor
and
cmp
aas
push
fwait
repz
repz
xor
enter
jp
clc
xor
lds
out
mov
mov
pop
sbb
in
and
sub
outs
jmp
(bad)
icebp
idiv
leave
pop
jecxz
mov
mov
icebp
xor
pushf
xlat
icebp
pop
push
in
idiv
sahf
mov
jp
inc
(bad)
(bad)
adc
sub
add
mov
push
out
pop
add
sbb
(bad)
lods
fisub
in
jbe
out
loopne
mov
sbb
cmps
mov
xlat
xchg
cdq
xchg
mov
xchg
popf
outs
mov
pop
movs
int
sbb
lods
rcr
mov
cld
imul
push
(bad)
mov
cwde
and
sbb
mov
push
hlt
aaa
scas
cmp
xchg
jmp
int3
ret
rcl
retf
rcl
push
scas
outs
pop
sti
loop
mov
sbb
push
xchg
jbe
das
and
retf
and
or
ror
sub
jg
mov
adc
bound
bound
xchg
sbb
sub
(bad)
jge
dec
out
push
pop
xchg
jecxz
mov
push
adc
cld
ret
or
scas
jnp
jmp
fistp
inc
mov
mov
iret
fsubr
cmps
mov
xchg
je
mov
mov
stc
push
pusha
rcl
cmp
shl
hlt
add
in
fld1
or
sub
adc
adc
mov
retf
out
xor
add
rol
sub
dec
lods
rcl
mov
cmp
dec
xor
rol
adc
movs
ret
mov
mov
jnp
ror
jecxz
dec
push
stos
scas
jbe
(bad)
pop
sbb
and
mov
push
leave
pop
cmc
mov
sub
lock
clc
out
and
mov
cmc
sub
fimul
lds
repz
arpl
push
jb
and
push
nop
inc
arpl
mov
mov
push
xor
mov
sahf
fiadd
pop
mov
mov
push
out
jnp
dec
fadd
std
jno
(bad)
in
add
mov
xchg
out
fmul
fcmovnbe
pop
mov
call
aas
push
mov
pop
js
mov
imul
out
cmp
stos
adc
sbb
imul
cmc
iret
lods
jns
push
aad
lahf
mov
fldl2e
push
xor
fs
loope
int
ret
jb
vpavgb
push
xlat
cmp
in
fimul
lods
fadd
jmp
mov
add
iret
mov
bound
in
test
xor
cld
add
repnz
aad
icebp
or
lock
mov
pop
dec
adc
(bad)
xchg
push
sub
inc
adc
scas
sbb
mov
fnstcw
dec
shr
test
cmp
push
jne
xor
bound
mov
jg
ret
sar
out
xor
sub
test
xchg
movs
fadd
mov
ds
icebp
std
stos
xchg
jecxz
sbb
scas
mov
cmc
out
cmp
xor
mov
cmp
or
(bad)
int3
ja
xchg
sub
push
sti
jo
jns
mov
dec
xchg
mov
(bad)
loopne
test
pushf
imul
repnz
xchg
sub
repz
jp
lods
pop
xor
xchg
sar
jb
inc
dec
addr16
aaa
sar
call
push
inc
lds
or
mov
dec
cmp
shl
in
sub
add
xchg
add
stc
sbb
aas
mov
fwait
mov
fdivr
ds
dec
das
xor
and
ins
sub
cmp
push
sbb
fmul
cmp
jecxz
cmp
pop
icebp
inc
or
out
pop
stos
aam
inc
fucomip
aam
enter
enter
cwde
ss
clc
push
test
fld
xchg
call
rcl
jecxz
fwait
dec
mul
lock
xchg
stc
or
daa
ja
scas
jno
pop
xor
and
shl
imul
cmp
shl
xor
call
add
pop
mov
jae
scas
and
push
loopne
adc
leave
ins
pop
gs
dec
jp
dec
xchg
mov
fadd
mov
outs
add
test
out
dec
and
jmp
dec
fwait
mov
hlt
lock
loopne
pop
popa
adc
push
dec
sub
ds
mov
ret
aam
out
xchg
ret
push
mov
push
(bad)
mov
xchg
shl
aad
sub
inc
ret
sbb
dec
jno
sub
shr
inc
push
fimul
pop
jle
add
getsec
not
(bad)
jne
and
neg
pop
fucomi
jecxz
push
push
jae
rol
xchg
lahf
popa
mov
sub
cmp
out
ror
pop
frstor
std
dec
ret
test
dec
push
sahf
ja
mov
outs
add
es
push
fdivr
mov
mov
ret
cmp
adc
data16
adc
push
rcr
mov
into
mov
test
(bad)
das
(bad)
inc
push
jae
stos
add
mov
cmps
xchg
jecxz
ins
fst
jb
shr
inc
fimul
outs
push
xchg
stc
(bad)
xor
scas
dec
xor
cs
(bad)
mov
fs
aaa
out
dec
mov
(bad)
jg
jl
inc
push
inc
mov
sub
add
rcl
add
mov
pop
mov
jle
les
xchg
jmp
movs
(bad)
movs
mov
xchg
push
mov
icebp
and
dec
out
outs
and
push
dec
pop
(bad)
shl
scas
out
sbb
call
rcr
js
daa
pop
dec
and
add
adc
push
pop
adc
arpl
xor
jmp
stos
in
push
and
aas
sahf
pushf
stc
inc
xchg
xor
icebp
mov
enter
icebp
pop
inc
bound
mov
lock
pop
stos
mov
mov
jns
sbb
add
cdq
mov
pop
adc
leave
sbb
icebp
add
loopne
leave
out
mov
aas
mov
add
in
repnz
retf
mov
imul
adc
or
popa
sbb
jmp
xchg
xchg
sbb
dec
xchg
cmp
inc
bound
ror
jl
repnz
gs
iret
stos
ins
xchg
xchg
daa
push
xor
lock
scas
mov
push
(bad)
lds
imul
xchg
lods
in
ins
mov
icebp
test
ret
scas
fimul
pop
mov
pop
jmp
and
pop
nop
inc
sbb
shl
stc
xor
fisub
mov
jo
dec
pop
loope
cmc
repnz
pop
lea
mov
mov
rcr
cmp
scas
dec
jbe
jl
inc
push
rol
or
rcl
ret
shl
es
adc
cmps
enter
cmp
add
jle
mov
hlt
mov
fldenv
jns
aaa
mov
sar
ins
xor
sahf
lahf
daa
aaa
in
(bad)
fsubr
inc
pop
inc
jnp
scas
pusha
xchg
sbb
das
shl
stos
pop
or
mov
xchg
sbb
jno
repz
push
imul
xchg
int3
sub
sbb
enter
xor
js
adc
inc
dec
ja
ins
dec
push
cld
mov
aam
(bad)
mov
nop
rcr
xor
fisubr
jbe
pop
push
xchg
(bad)
and
fidivr
out
stos
gs
addr16
and
dec
push
sbb
xor
pop
cli
xchg
mov
shl
sbb
ins
and
shl
call
ficomp
jp
lods
push
pusha
in
adc
sub
push
adc
xchg
sahf
mov
retf
loopne
sub
inc
(bad)
ucomiss
xchg
jle
or
addr16
mov
inc
lods
sub
pop
jge
dec
not
jbe
and
call
mov
cmp
sbb
shl
retf
mov
mov
xchg
into
gs
push
repnz
(bad)
fldcw
pop
pop
mov
ret
pop
ret
and
(bad)
push
nop
mov
imul
inc
xchg
jmp
mov
mov
scas
mov
push
scas
adc
xor
imul
mov
mov
int3
dec
cmp
jmp
ins
mov
loopne
in
pop
in
mov
fwait
iret
aad
jns
and
imul
cmp
mov
adc
hlt
jne
fsubr
sub
push
cmp
or
adc
xchg
repz
ss
repz
xchg
lock
leave
mov
push
scas
add
shl
add
dec
es
sbb
mov
mov
fnstcw
sbb
xor
pop
xchg
cwde
mov
call
xchg
cmp
dec
je
hlt
mov
(bad)
pusha
lahf
adc
loop
xchg
mov
and
xor
mov
jae
inc
mov
inc
sub
xchg
sbb
jle
call
pop
push
add
jns
push
xchg
mov
test
rcl
sahf
jge
inc
push
xchg
retf
repz
jge
push
pop
jnp
mov
and
repnz
out
in
adc
adc
mov
jo
add
push
je
and
inc
pop
jl
popa
xchg
nop
sub
mov
jns
mov
mov
test
cmp
push
icebp
es
bound
(bad)
out
fwait
xor
pop
out
dec
pop
mov
test
ja
dec
call
or
mov
mov
push
sub
xor
shl
mov
shr
mov
adc
or
pop
mov
iret
inc
xchg
mov
jmp
jno
cmp
ins
or
in
fsubr
int
call
push
cmps
sbb
push
nop
inc
add
or
mov
adc
shr
dec
dec
xchg
dec
loopne
jl
(bad)
out
or
into
leave
or
mov
fcmovbe
inc
ss
and
mov
sbb
jmp
push
xor
sub
dec
les
sbb
push
add
out
stos
repz
out
inc
mov
stos
pop
ret
in
dec
fnstenv
bound
add
pop
jae
sub
mov
push
xchg
adc
cmp
adc
inc
je
mov
mov
imul
clc
sub
ss
nop
jnp
out
outs
popa
lock
in
cmp
in
add
cmp
cmp
dec
sahf
mov
stos
push
mov
(bad)
or
sbb
sub
jnp
jno
imul
cmc
cmps
mov
mov
xchg
mov
(bad)
mov
adc
cmps
(bad)
sbb
or
sub
mov
xchg
fdiv
(bad)
cmc
dec
ja
pop
gs
add
mov
push
retf
and
or
jl
jmp
lods
(bad)
xor
pop
mov
out
(bad)
push
sub
add
mov
imul
popf
sti
rcr
rcr
ins
ja
lea
mov
fsub
test
or
sub
or
fst
dec
mov
sahf
sbb
cli
add
cmp
(bad)
shl
mov
nop
push
mov
cmps
or
cmp
sub
in
add
inc
mov
fs
aaa
test
pushf
dec
sub
or
aad
mov
data16
pop
stc
in
out
sub
cmps
test
push
xchg
xchg
imul
lods
mov
sbb
xlat
mov
cmp
mov
test
jo
stos
clc
push
ret
outs
inc
or
jns
push
or
(bad)
sbb
es
out
sbb
aad
lock
into
lods
fisttp
sub
push
fdiv
test
mov
and
loope
shl
cld
sub
xor
mov
popa
add
xchg
xchg
ins
mov
cmc
push
xchg
fcomp
mov
stos
getsec
arpl
(bad)
or
inc
js
aad
jecxz
xchg
enter
daa
div
pop
jmp
jg
sub
and
(bad)
outs
lds
out
les
sar
mov
mov
test
or
scas
leave
fbstp
nop
pop
into
and
ds
sbb
je
push
sbb
pop
xor
adc
push
sub
jp
and
fsubr
in
push
jecxz
outs
add
or
std
inc
push
daa
cdq
int3
dec
cli
imul
push
xor
add
push
mov
cmp
(bad)
xor
mov
push
or
mov
into
(bad)
pop
mov
push
in
sbb
xchg
mov
stos
jo
lea
xchg
fldcw
pushf
daa
in
or
jo
movs
dec
jmp
push
out
ins
sub
xor
xor
cmps
jb
mov
gs
jb
add
unpckhps
aas
jl
and
std
adc
shr
imul
stos
cmp
push
frstor
push
repz
add
pop
sub
repz
mov
jl
not
xchg
into
xor
cmps
adc
rcr
jae
xchg
inc
in
div
bnd
jmp
sub
push
xor
imul
fld
inc
pop
out
xlat
pop
pop
ret
sahf
pop
cmp
sub
pusha
punpckhwd
data16
mov
ss
es
push
(bad)
jae
jl
and
add
(bad)
mov
faddp
rep
cli
test
lods
les
stc
dec
push
into
xor
sbb
xchg
mov
pop
sub
cld
daa
jno
mov
jbe
mov
fist
js
jle
pop
mov
sbb
cli
hlt
jmp
mov
jmp
ja
in
pop
outs
push
out
pop
dec
in
sti
movs
fsubr
scas
push
jne
call
jo
call
popa
mov
in
mov
inc
daa
mov
mov
jns
mov
xchg
push
jne
adc
out
or
adc
mov
xchg
adc
ret
adc
mov
push
mov
and
aad
and
inc
push
mov
(bad)
into
arpl
mov
and
movs
push
inc
cmc
pop
into
retf
sbb
test
jp
or
in
and
push
cmps
pop
add
out
aaa
call
and
add
dec
inc
aas
cdq
es
je
pusha
idiv
ins
retf
adc
mov
dec
int
inc
inc
lods
mov
hlt
push
pop
sti
jb
mov
add
push
xchg
in
movs
xor
les
mov
mov
outs
add
cmc
dec
pop
bnd
inc
hlt
stc
bound
stos
std
and
hlt
jl
rcr
xor
pop
arpl
mov
xchg
neg
xchg
mov
cmc
pop
cmp
or
cmp
fbstp
xor
mov
call
xor
adc
les
sbb
sar
out
pop
js
and
cmp
daa
call
jno
fild
imul
xchg
pop
lods
dec
and
fdiv
sbb
shl
pop
test
clc
(bad)
mov
je
jge
sub
enter
ds
int
fdivr
mov
cmc
push
leave
imul
cmp
sub
or
xor
jmp
add
movs
cmp
or
ds
das
sub
test
call
aas
ret
imul
cmps
pop
dec
int
pushf
or
out
mov
jae
jmp
in
jae
mov
into
xchg
mov
ds
aas
aas
pushf
dec
xchg
cmps
mov
jo
idiv
fwait
ret
movs
jb
and
fbld
mov
dec
les
dec
jg
mov
cmp
xchg
dec
mov
jns
push
lods
sub
cmp
push
rcl
hlt
mov
cmp
or
shl
div
aas
cld
jo
lea
cwde
(bad)
adc
cli
lahf
dec
sub
adc
or
sub
mov
xor
lea
aam
test
mov
shl
inc
push
add
mov
sub
test
jne
pop
mov
mov
push
repz
xor
in
push
out
push
imul
and
stos
sub
jge
call
jb
(bad)
movs
pop
mov
jle
popa
int
dec
out
add
sub
adc
movs
retf
in
cmc
dec
pop
xchg
pop
push
add
xchg
icebp
and
rol
loop
sbb
xor
cwde
clc
dec
es
adc
aam
mov
lock
fwait
ss
stos
and
xor
xor
lea
dec
(bad)
fild
mov
mov
dec
push
sub
scas
cmps
lods
xor
das
cmp
add
cwde
clc
fwait
out
neg
aad
les
je
dec
addr16
mov
aas
jle
xor
lahf
pop
repz
mov
imul
(bad)
std
lea
fld
jno
jno
icebp
jmp
loopne
scas
pop
rol
adc
fsubr
ins
es
data16
pop
pop
cld
loopne
pop
mov
mov
in
test
pusha
add
dec
xchg
je
stc
jbe
add
dec
loop
(bad)
stc
popf
xor
mov
clc
add
sub
xchg
adc
test
jmp
cli
mov
mov
in
aad
inc
stc
or
sbb
jne
cmp
das
rcr
cmp
jne
inc
mov
adc
lods
inc
jl
dec
cmp
jb
inc
aam
test
mov
sbb
cli
out
scas
out
xor
sub
aad
jnp
mov
dec
push
mov
sub
fsubr
lods
jo
in
add
sbb
sub
inc
xchg
sti
adc
xor
jns
pop
dec
sbb
cdq
dec
cwde
fistp
dec
imul
jg
ins
js
out
(bad)
xor
jp
sbb
cli
inc
jecxz
inc
mov
fnstenv
pop
mov
mov
xchg
sbb
push
xor
add
xor
aam
push
dec
cmp
xchg
add
test
mov
jp
fisubr
test
push
or
out
or
adc
xchg
dec
mov
push
fldcw
aam
mov
xor
jl
push
or
test
mov
fwait
enter
sbb
popa
lea
stc
aas
mov
xchg
retf
icebp
xor
jle
mov
inc
(bad)
cmp
pop
adc
or
mov
push
push
add
add
pop
push
or
mov
cmp
mov
mov
cmps
addr16
pop
(bad)
outs
cwde
(bad)
adc
xchg
inc
mov
(bad)
popf
in
pop
les
mov
jmp
cmps
jno
cmp
out
cmp
mov
imul
xchg
dec
xchg
mov
push
pop
ins
or
dec
push
pop
sub
retf
inc
inc
sbb
jns
xchg
dec
sub
cmp
(bad)
cmps
lods
adc
pop
loopne
mov
xor
je
ss
push
das
mov
in
pop
jl
pop
gs
fcom
jp
jl
cmp
mov
dec
out
adc
and
(bad)
mov
aam
loope
push
adc
jae
sub
xchg
adc
ins
ret
push
add
jp
iret
cmp
jnp
jnp
cmp
xchg
push
mov
cmp
popa
jle
add
dec
add
stc
dec
mov
(bad)
cli
test
iret
aad
dec
scas
and
mov
out
icebp
add
out
dec
push
sub
sbb
retf
or
out
adc
stos
inc
mov
inc
sub
xlat
or
nop
movs
fisubr
adc
test
ds
or
or
and
and
sub
cmp
mov
std
jne
stos
xor
js
inc
data16
push
repz
push
rcr
jle
sysenter
jle
sub
adc
ss
je
frstor
pop
hlt
pop
lods
sbb
and
mov
sbb
jnp
sar
mov
push
mov
inc
es
lds
out
js
cmps
lods
sbb
jecxz
sub
push
out
aaa
add
cmp
dec
das
cmp
jl
and
and
retf
pop
xor
in
cs
xchg
pop
jge
sar
push
mov
adc
pushf
test
jmp
sub
ins
push
and
dec
gs
fimul
mov
adc
or
jg
mov
jne
int3
test
mov
shl
hlt
iret
popa
popa
jbe
pop
xor
icebp
dec
scas
mov
dec
jne
pushf
jmp
sti
jns
push
sbb
mov
int
stos
adc
loopne
test
pop
sahf
adc
or
adc
shr
and
in
movs
aad
arpl
(bad)
(bad)
jae
repnz
or
ror
jl
ins
lock
aad
int3
and
pop
xchg
shl
mov
loop
inc
jnp
jge
std
jmp
lods
sub
inc
push
sbb
lahf
jo
hlt
rcl
loop
cmp
out
sbb
push
daa
mov
add
xor
adc
idiv
fild
sub
sub
out
daa
sbb
or
xor
movs
fidivr
push
sbb
jbe
scas
pop
mov
out
pop
add
sbb
and
pop
or
jb
dec
pop
lods
lock
mov
in
retf
push
ds
movs
pop
mov
aad
fstp
std
(bad)
sub
mov
nop
test
jno
lock
or
mov
(bad)
push
aas
addr16
sub
(bad)
in
stos
(bad)
push
sub
xchg
stos
movs
push
and
and
jl
cdq
mov
mov
jo
jmp
and
(bad)
lahf
xor
add
sub
cmps
xor
mov
inc
mov
pop
xchg
scas
pop
test
mov
leave
add
xchg
pop
cli
jmp
sub
leave
cwde
(bad)
push
into
jl
or
or
dec
popa
push
call
xchg
scas
sbb
xor
jecxz
jb
cwde
xchg
sub
in
sub
(bad)
ja
mov
in
or
xchg
pop
ins
or
xor
xchg
movs
xchg
(bad)
adc
xor
ins
add
cmp
lds
movs
cdq
arpl
adc
or
sub
xor
into
ins
scas
outs
sub
iret
aaa
ins
cdq
sbb
push
jp
mov
sbb
xor
mov
sub
dec
jno
or
loope
mov
cmc
dec
vunpckhpd
rcr
leave
dec
push
les
dec
inc
imul
enter
or
inc
lods
cmc
inc
dec
xchg
sub
mov
or
inc
call
fs
inc
outs
enter
xor
and
shl
test
ds
push
dec
lods
sar
test
cmp
or
jge
sub
adc
loop
dec
mov
add
xchg
test
jns
gs
push
sub
ja
leave
and
push
cld
dec
or
mov
ds
dec
ds
fiadd
add
in
std
xchg
and
repz
inc
push
xchg
fcom
jle
pop
xchg
push
mov
sub
out
lea
cmp
jmp
mov
jns
push
push
ret
ret
pop
or
push
cli
cmp
sahf
dec
and
fs
shr
movs
retf
sub
jg
test
jne
out
sbb
xchg
enter
int3
ret
adc
mov
jmp
sub
add
adc
push
adc
and
jmp
inc
ret
loope
imul
add
cmps
mov
sub
xor
sahf
sbb
repz
inc
dec
fucomip
jmp
cmp
inc
push
imul
push
push
sbb
add
pop
lahf
jle
push
es
aam
inc
or
ja
pop
mov
cmp
mov
push
cwde
fnstcw
xchg
sub
dec
or
jns
pop
outs
sbb
mov
push
sub
sbb
dec
sub
cdq
push
cwde
pop
jmpw
sub
shl
aam
push
shl
mov
retf
xchg
fadd
sub
jle
std
imul
pushf
cmp
xor
into
vmovaps
and
lods
mov
mov
in
pusha
adc
inc
imul
mov
jl
loopne
cs
cmp
stc
fincstp
cmp
and
xchg
xchg
mov
inc
ja
out
and
gs
outs
dec
xor
adc
mov
je
stos
sbb
in
fs
xor
fisub
xor
and
jl
dec
je
rol
cbw
pop
jge
xor
jno
movs
fstp
push
movs
inc
adc
fs
mov
iret
sub
data16
repnz
cli
aas
js
ds
jno
push
popa
or
movs
mov
push
and
cmp
inc
xchg
push
jo
rcl
dec
adc
das
push
dec
in
fldenv
ja
add
sahf
sub
scas
ins
adc
and
jbe
call
or
sub
and
jg
hlt
jnp
push
(bad)
out
dec
mov
out
test
repz
or
xchg
push
xchg
lahf
jb
retf
mov
cmp
pop
jge
xchg
in
repnz
sbb
cmps
call
call
jne
xor
pop
sub
sub
pop
mov
cli
fmul
add
jecxz
cmp
test
xchg
test
shl
jge
shr
leave
push
cmp
ja
push
adc
bound
add
pop
js
dec
jne
jo
mov
inc
push
xlat
add
or
(bad)
mov
jb
dec
hlt
xor
ja
int3
mov
mov
daa
adc
mov
hlt
int
add
out
cmp
inc
pop
mov
loopne
lock
fsubr
pop
or
jecxz
ss
cmc
pop
or
adc
add
cmc
cmc
fcomp
cwde
mov
out
pop
cmp
mov
jne
push
push
sti
sub
xor
mov
lahf
mov
(bad)
imul
and
cdq
fbld
cmp
dec
sar
add
add
cmp
loopne
xchg
(bad)
ret
xlat
mov
loopne
ins
push
adc
stos
mov
add
data16
ins
repz
ror
pop
(bad)
idiv
lds
and
scas
or
dec
cmps
ds
and
lods
mov
lods
mov
sbb
mov
add
rol
in
jbe
pop
sbb
xor
push
xchg
ret
sub
ss
push
or
jl
jge
daa
dec
test
mov
dec
xchg
sub
sahf
int3
sub
outs
cmp
call
sbb
(bad)
sub
mov
retf
gs
push
adc
push
jno
fisttp
das
shl
in
ficomp
push
and
dec
call
mov
sbb
movs
adc
fcomp
les
inc
push
push
in
(bad)
test
adc
(bad)
movs
and
addr16
push
jp
lds
pushf
ins
cmp
out
iret
loope
icebp
aad
push
shr
mov
repz
in
pop
lods
xlat
lock
inc
dec
xor
mov
or
sub
cmps
dec
fcmovbe
or
ds
cwde
sbb
mov
adc
pop
mov
outs
add
or
xchg
mov
jmp
sar
mov
fadd
dec
push
xchg
or
out
cmps
push
adc
or
pop
inc
pusha
mov
es
sub
test
xor
jbe
dec
jnp
inc
das
je
aad
and
out
std
adc
jg
inc
cld
shl
jmp
jle
inc
pusha
sub
cmp
dec
mov
repz
imul
mov
push
les
add
cmp
daa
(bad)
loopne
aam
enter
pop
sbb
addr16
rcl
pop
(bad)
std
jle
call
pop
pop
mov
lds
and
bound
xchg
das
push
push
shr
ret
jns
and
push
sbb
pop
(bad)
sti
xor
mov
pop
lods
int
gs
add
push
mov
pop
pop
xchg
cli
and
test
repnz
lahf
daa
jbe
sbb
mov
cli
mov
retf
mov
mov
aaa
inc
sbb
mov
push
gs
jb
mov
add
sub
mov
lahf
pusha
sbb
retf
loop
jnp
movs
mov
shl
inc
mov
push
pop
or
pop
mov
popf
mov
(bad)
ja
or
mov
and
movs
cmp
add
adc
retf
adc
sbb
fisub
(bad)
addr16
lds
nop
test
ret
jmp
loopne
sbb
cmp
scas
sbb
mov
mov
mov
lahf
or
mov
pop
or
xchg
jnp
and
sbb
js
(bad)
fld
stc
call
xchg
fld
das
jl
std
lods
call
out
arpl
ds
mov
jecxz
xchg
ins
cwde
sar
rcl
dec
mov
jp
and
(bad)
ds
fsubr
inc
mov
data16
adc
add
lods
mov
cmc
js
fs
cmp
sbb
bsr
mov
lock
or
shr
jecxz
add
outs
pop
lea
jp
xchg
jmp
jg
(bad)
push
mov
cmp
loopne
mov
xor
in
dec
fdivr
or
(bad)
xchg
inc
test
(bad)
or
or
inc
into
mov
pushf
mov
ja
mov
jge
iret
inc
in
ja
imul
xchg
and
push
fs
aas
pop
cmp
mov
mov
ds
xchg
ds
ins
jge
stos
in
and
mov
hlt
out
cmp
scas
and
int3
fld
mov
into
ja
cmp
or
push
leave
xchg
loopne
and
rcl
sbb
inc
ds
mov
mov
jne
rcl
inc
arpl
dec
int3
ror
sbb
push
popf
adc
pop
push
nop
jle
cli
retf
out
cmps
adc
xchg
xor
jbe
mov
fild
lea
mov
int3
inc
sbb
jnp
mov
sub
sahf
inc
pop
lahf
lahf
aas
xchg
or
call
pop
fs
cmp
cmp
scas
jmp
add
popa
fnstsw
mov
xor
not
mov
mov
pop
sti
inc
les
cld
sbb
push
pop
xchg
inc
mov
repz
les
sub
jbe
mov
xchg
and
sbb
inc
xor
ds
mov
xlat
aad
stos
stos
dec
xor
sub
jmp
inc
lahf
ins
adc
add
fwait
mov
add
add
sub
stos
(bad)
xchg
or
(bad)
icebp
dec
cmps
loopne
aam
add
clc
mov
psubd
mov
xor
cs
(bad)
xor
pop
mov
or
(bad)
std
addr16
mov
rcr
inc
(bad)
and
push
(bad)
ins
in
hlt
mov
aam
xchg
push
jmp
cmp
aad
mov
inc
lods
vmsave
test
inc
int
mov
stos
loopne
xchg
push
xlat
test
mov
adc
(bad)
repz
fisub
mov
jb
mov
mov
cmp
sbb
(bad)
sub
inc
movs
lahf
and
xor
je
and
movs
sub
push
fisttp
popa
mov
mov
test
pushf
nop
fcomp
push
das
sub
(bad)
mov
mov
sbb
sub
xor
push
sub
pop
sub
push
cdq
pmovmskb
mov
in
cdq
scas
ror
and
sub
outs
shl
jmp
sar
mov
call
jae
test
mov
into
dec
inc
mov
dec
jl
or
(bad)
shr
out
or
push
cli
rcl
and
jp
jae
bound
cmp
cmp
fidiv
repz
out
xchg
mov
mov
xor
ins
jle
fwait
sub
dec
sub
les
xchg
in
inc
jb
imul
dec
outs
ss
leave
pop
or
imul
addr16
xor
(bad)
dec
neg
adc
sbb
(bad)
in
and
lock
jno
cwde
xchg
jmp
add
push
ss
dec
nop
pop
popf
and
xchg
mov
mov
ror
jmp
rcr
inc
pop
ss
and
test
(bad)
sti
dec
retf
pop
sub
add
pop
mov
into
mov
pusha
mov
mov
cmps
and
xchg
outs
cmp
loop
addr16
cmp
xchg
add
jp
(bad)
jmp
cmps
(bad)
jge
sbb
mov
or
lods
cli
in
add
test
outs
fldl2e
fidivr
jne
sbb
lahf
test
mov
adc
arpl
sar
sbb
mov
cwde
das
mov
pop
lods
scas
scas
adc
bound
cmp
popf
xchg
push
test
jno
movaps
mov
retf
pop
pop
dec
sti
xor
ds
and
xchg
test
jno
mov
repz
retf
mov
cmp
jb
xor
xchg
push
cmc
add
pop
mov
dec
xchg
stos
push
push
jne
or
pop
gs
shl
pop
mov
scas
inc
push
cmp
jl
mov
and
rol
fld
out
fs
repnz
adc
mov
imul
arpl
in
scas
mov
jno
daa
cmc
imul
mov
xlat
push
retf
fs
mov
mov
push
adc
popa
test
jo
out
adc
pop
jns
mov
out
xchg
(bad)
sbb
dec
mov
fsincos
mov
push
fdivr
mov
adc
in
adc
push
push
clc
(bad)
mov
or
das
push
cmp
mov
cmc
iret
call
and
sub
(bad)
aas
push
inc
sbb
(bad)
in
mov
je
daa
jmp
call
out
or
push
es
jl
mov
adc
lock
popf
and
mov
ins
push
pop
push
movs
dec
sbb
pop
fcom
push
jo
xchg
xor
xor
sahf
jg
add
dec
retf
and
(bad)
fldcw
sbb
and
xchg
xor
sbb
push
movs
xor
cmp
sbb
shl
jecxz
push
iret
aad
and
push
mov
pop
cmps
mov
jbe
add
cmp
push
sti
inc
(bad)
push
ja
xchg
xor
scas
dec
mov
and
and
mov
aas
scas
cmp
stos
mov
stos
outs
std
scas
popf
dec
popf
test
cmp
cld
addr16
ja
daa
shl
pop
mov
xor
test
mov
test
inc
call
rcr
add
pop
push
dec
pop
aaa
pop
dec
rcr
cmp
mov
mov
imul
lock
(bad)
cmp
jb
pop
push
fisub
cmp
jge
jp
clc
aaa
push
dec
call
test
mov
mov
push
jne
push
std
dec
sub
and
shr
(bad)
(bad)
adc
out
sub
inc
mov
arpl
ret
inc
in
mov
retf
int3
fs
cmp
and
mov
add
in
clc
repnz
jne
cmp
mov
mov
cmps
adc
rcl
mov
pushf
bound
ss
push
mov
jo
and
(bad)
push
(bad)
ins
or
movs
mov
jno
cmc
mov
out
push
retf
fld
inc
xor
dec
lock
in
xor
sbb
retf
shr
(bad)
pop
mov
pandn
cwde
shl
mov
adc
fisub
imul
gs
sbb
and
xchg
lahf
jmp
inc
aad
or
test
add
mov
dec
das
adc
stc
pop
push
add
clc
cdq
xlat
pop
dec
mov
jno
icebp
test
mov
add
push
sti
arpl
xchg
jle
adc
sub
mov
mov
pop
in
pop
test
lods
mov
iret
std
mov
fs
pushf
xchg
sub
cmp
shl
jmp
add
popf
ins
sbb
jecxz
sbb
outs
imul
pop
push
test
add
xchg
push
outs
mov
cdq
outs
dec
je
mov
cmps
mov
and
enter
jmp
loopne
out
jmp
inc
loope
daa
aad
fisttp
js
jo
das
and
neg
or
push
lock
pop
outs
add
or
mov
fwait
xchg
push
push
jns
or
cmp
out
sub
jbe
adc
jns
jbe
je
mov
jmp
outs
lea
(bad)
lock
in
xor
jmp
and
pushf
add
fs
cld
add
inc
imul
das
mov
ja
push
xor
inc
mov
test
xchg
movs
pop
leave
inc
sub
push
and
sub
dec
(bad)
sar
fadd
mov
retf
test
sub
scas
retf
xchg
stos
imul
cmp
stc
jmp
pop
or
cmp
loope
sbb
mov
sbb
jo
dec
jnp
bound
sub
mov
cdq
push
adc
adc
sbb
and
mov
enter
mov
fiadd
outs
mov
mov
push
pusha
scas
or
cli
(bad)
cmp
ins
gs
pop
and
dec
sbb
push
gs
call
add
cli
movs
(bad)
lds
mov
inc
adc
stos
mov
aad
test
cmp
loope
inc
sub
jbe
xchg
imul
bound
jmp
pop
mov
nop
push
iret
ficomp
cdq
dec
jns
std
or
in
retf
or
and
push
mov
adc
mov
push
xchg
sbb
shl
cdq
add
sub
aad
jae
fadd
push
stos
mov
cmp
mov
xor
out
add
fld
js
imul
shl
add
aas
xor
mov
ja
scas
daa
inc
aad
mov
push
sbb
sbb
mov
stos
dec
jp
mov
ja
inc
cmp
cmc
push
ret
retf
cmovnp
jmp
ja
sbb
repnz
jp
jne
or
or
xlat
mov
dec
push
jmp
aam
dec
add
mov
lods
mov
es
dec
push
addr16
aas
push
add
rol
ja
inc
bnd
rol
aam
std
sub
idiv
inc
adc
ins
cmc
js
pop
pop
shl
sbb
not
stos
add
daa
xchg
add
and
(bad)
fdiv
add
jecxz
ret
es
push
push
jne
loope
lods
jno
dec
aas
(bad)
out
xor
icebp
data16
iret
add
push
clc
pusha
bound
pop
cwde
pop
xchg
out
in
or
sub
pop
ss
xchg
pushf
inc
shl
iret
add
xor
pop
sar
mov
icebp
jbe
adc
fnstenv
(bad)
xor
jmp
jle
into
in
ret
sub
dec
jo
or
inc
xor
addr16
mov
scas
mov
ins
cmp
xor
jl
aam
pusha
dec
jecxz
mov
mov
jg
sahf
loope
or
out
dec
lds
out
ret
(bad)
in
int
add
out
lock
cmp
mov
ss
test
retf
ss
retf
shl
fist
outs
jecxz
push
scas
adc
sbb
xor
jnp
push
ret
std
jp
popa
mov
ds
pop
and
fdiv
retf
pop
shl
cs
or
xor
cwde
rol
and
and
jbe
mov
pop
mov
mov
or
jae
sbb
dec
add
imul
lods
shr
imul
scas
shr
mov
add
mov
stc
push
push
xchg
adc
sahf
mov
jno
or
cmps
outs
add
loopne
and
lahf
je
fs
jge
mov
mov
mov
pop
mov
fimul
cmp
pop
int3
jp
push
sub
pop
push
inc
dec
call
lods
mov
xsha1
cmps
dec
pop
pop
push
inc
adc
push
push
dec
sbb
adc
jae
cmp
das
(bad)
push
into
mov
xchg
add
shl
daa
lahf
stos
ficomp
mov
sub
lods
leave
mov
loop
fisub
nop
dec
inc
push
retf
push
add
repz
pop
or
dec
xchg
in
icebp
call
scas
dec
syscall
add
jo
fs
fwait
sbb
bound
mov
xchg
scas
in
test
leave
xchg
pop
outs
repz
xchg
rcr
sahf
mov
aas
dec
sbb
and
addr16
loop
sub
in
push
das
retf
jno
dec
repz
out
and
mov
or
mov
jbe
jbe
and
xchg
mov
imul
pop
les
popf
cmp
pushf
jno
int3
push
loope
sub
cmp
outs
pushf
and
sbb
lea
push
add
and
push
mov
std
scas
sbb
jg
xor
mov
rol
mov
pop
in
mov
cli
cmp
lods
into
or
sub
jmp
or
fidiv
pushw
pop
retf
fidivr
dec
pushf
(bad)
and
and
lahf
pop
xchg
sbb
cmps
jmp
out
adc
ss
out
mov
push
fisttp
pop
mov
js
pop
test
pop
stos
mov
inc
cmp
sahf
push
sub
addr16
mov
(bad)
iret
imul
mov
ds
das
(bad)
stos
jp
jo
xor
std
push
pop
ins
push
rol
not
lahf
ret
in
das
sub
fldcw
scas
repnz
call
sub
pop
(bad)
xlat
test
jb
retf
xor
or
pop
cmp
sub
cmp
fistp
xchg
dec
mov
xor
retf
inc
std
adc
lods
outs
inc
popa
imul
pop
sar
push
lods
movs
pop
mov
call
push
jmp
jae
retf
jecxz
fnstenv
bound
fdivr
inc
out
cdq
arpl
jecxz
gs
add
idiv
outs
add
daa
bound
pop
xchg
mov
loopne
cmp
stc
fwait
imul
jecxz
dec
test
enter
add
nop
push
or
stos
push
adc
in
sbb
retf
mov
retf
mov
lock
add
dec
(bad)
xor
sub
pop
xlat
mov
sub
adc
ror
in
cmp
xlat
dec
(bad)
mov
fbld
push
repz
int3
jns
inc
jmp
into
aaa
test
dec
cdq
jmp
xlat
push
push
shl
cmp
cmp
push
mov
pop
push
dec
pop
lods
xlat
jns
push
mov
test
jbe
xrelease
pop
cs
call
adc
ror
mov
sahf
push
mov
jo
ds
sti
je
out
sbb
cld
or
pop
test
retf
(bad)
lahf
jbe
popa
pop
in
pop
retf
mov
jns
jg
mul
cld
data16
dec
mov
sbb
xchg
mov
adc
jne
in
inc
hlt
out
mov
popa
inc
sbb
fld
and
daa
dec
loopne
popa
or
and
stc
sti
add
call
ret
sub
add
add
xchg
dec
pusha
cmp
into
jnp
mov
lahf
add
xlat
ss
add
lods
cmps
pop
add
or
outs
sbb
daa
and
(bad)
xchg
and
pop
xor
rcl
enter
test
push
cli
lock
stos
adc
lds
lds
sub
push
dec
or
outs
mov
inc
jbe
clc
cdq
sbb
and
push
mov
or
das
push
test
adc
test
mov
adc
ja
pop
mov
push
lahf
jb
bound
mov
adc
push
aas
outs
in
int3
imul
jnp
scas
mov
dec
push
xor
into
xor
int
sub
inc
nop
popa
cmp
addr16
imul
mov
jg
xor
mul
test
cmp
push
repz
(bad)
aad
je
mov
inc
push
pushf
xchg
mov
adc
icebp
jmp
ins
jno
pop
aad
movs
mov
clc
jne
lock
int
(bad)
push
and
xor
into
or
cwde
jmp
cmps
and
add
or
add
in
sbb
mov
adc
add
or
cld
mov
imul
jne
push
das
add
outs
adc
push
sbb
cmp
stos
xchg
mov
clc
adc
sbb
jle
pop
fld
xchg
add
jne
stos
dec
js
sub
(bad)
adc
int3
mov
fcmovnb
or
movs
(bad)
xor
jb
and
cmp
in
xor
mov
adc
sub
xlat
lea
cs
jbe
loope
pop
inc
cld
pop
(bad)
std
rcl
cld
into
jns
jno
in
xor
dec
cwde
mov
sahf
int
mov
stos
ror
sub
sbb
cld
or
leave
sbb
pop
loopne
stc
and
stos
test
xor
xchg
daa
jo
xchg
lods
or
test
adc
js
sahf
(bad)
jl
jno
mov
sar
push
cld
mov
addr16
(bad)
cmp
inc
(bad)
mov
stos
in
inc
and
xor
mov
xchg
xchg
jecxz
neg
inc
hlt
iret
pop
jne
fs
int
cmp
(bad)
adc
test
xchg
nop
mov
or
cwde
ja
jmp
ja
fst
sbb
sub
test
push
xchg
cwde
repnz
cmp
gs
jmp
push
pop
cdq
aaa
aad
pop
push
call
test
sbb
sub
push
or
movs
or
out
ror
inc
jmp
inc
sub
push
(bad)
enter
mov
push
mov
inc
loopne
aad
mov
push
shl
mov
dec
scas
cmp
xor
pop
pop
sbb
mov
stos
add
lods
(bad)
sti
clc
xor
test
into
mov
sub
or
mov
mov
test
fstp
leave
sub
xchg
mov
dec
xchg
lahf
mov
nop
test
outs
push
mov
arpl
sub
jmp
xchg
jp
pop
ficomp
adc
add
mov
lods
cmovp
push
mov
lahf
clc
push
sbb
int3
inc
xchg
cdq
out
dec
dec
mov
iret
add
mov
pop
mov
jno
rol
xor
(bad)
outs
pop
cdq
jl
mov
cmp
lock
jg
pushf
stos
mov
xchg
mov
int3
xchg
sub
fcmovbe
cmp
adc
xor
or
hlt
hlt
retf
jge
push
lahf
push
sbb
cmp
jle
push
push
mov
call
psubq
jne
adc
leave
cmp
ret
jb
mov
xchg
pop
sti
arpl
lods
retf
mov
xchg
(bad)
out
cmc
enter
jbe
jle
fmul
dec
(bad)
mov
js
ss
(bad)
scas
sub
pop
inc
fidivr
mov
mov
pop
ins
inc
cmps
xchg
cwde
aas
pop
sub
sbb
pop
mov
das
sub
cmc
pop
jns
test
jle
inc
cmp
jmp
mov
and
mov
in
mov
push
dec
aam
push
ds
mov
push
dec
rcr
dec
cs
sub
mov
repz
push
and
in
add
push
adc
mov
inc
pusha
sub
push
call
xor
inc
xchg
jle
jb
(bad)
and
in
cmps
jns
in
mov
movs
inc
push
push
pop
jae
or
xchg
sbb
push
jmp
jl
cmp
jne
mov
xchg
push
and
and
daa
xor
cdq
rol
lahf
push
sahf
fs
dec
shl
ins
xchg
iret
cmp
aam
mov
daa
pushf
bound
sub
push
mov
mov
push
fwait
mov
out
mov
sbb
xor
popf
and
fisttp
or
lock
or
(bad)
jle
retf
jl
test
mov
mov
(bad)
mov
pop
das
popa
aaa
push
lahf
fild
lods
pop
mov
leave
xchg
or
fwait
pop
and
push
mov
jp
retf
jae
push
push
mov
pop
scas
dec
bound
sbb
es
inc
mov
sbb
xchg
fldenv
out
add
dec
mov
add
test
jbe
jecxz
cmp
mov
ret
push
dec
xchg
cmp
mov
jl
out
sbb
loop
jne
push
rcl
mov
xor
imul
adc
xchg
xchg
jns
inc
fisub
(bad)
push
mov
daa
mov
retf
cwde
mov
repz
aam
push
xchg
ja
push
out
dec
push
clc
rol
je
sbb
ja
mov
mov
cld
jnp
icebp
imul
jmp
loope
pop
adc
ror
pop
mov
lahf
or
hlt
jl
sbb
xchg
arpl
pop
int3
dec
sub
mov
mov
and
sbb
mov
push
cmp
mov
add
jge
aam
or
fnstenv
sti
lock
mov
loopne
into
(bad)
fwait
pushf
cmp
int3
xchg
int3
or
retf
imul
pushf
dec
jnp
or
test
jae
nop
mov
mov
fild
ins
push
mov
push
in
pop
div
mov
or
push
or
jbe
retf
data16
stos
xor
shl
push
xor
jmp
dec
lods
or
loop
fiadd
ja
xlat
dec
xchg
enter
das
xor
or
(bad)
in
xchg
div
stos
inc
sahf
mov
arpl
call
jg
(bad)
push
hlt
repnz
pusha
push
sub
dec
mov
dec
aas
(bad)
in
lods
and
addr16
ins
xchg
es
or
test
pop
ror
cmp
mov
inc
pop
adc
sub
jo
mov
arpl
mov
(bad)
mov
outs
push
dec
mov
pop
arpl
mov
pand
and
movs
mov
mov
test
mov
pop
and
js
and
loopne
mov
into
loope
and
js
test
out
outs
ss
mov
xchg
jnp
ja
loopne
out
mov
or
sub
mov
add
fisub
rol
or
imul
jmp
lock
inc
inc
cmp
push
adc
push
call
jae
and
push
sbb
pop
adc
push
mov
cmps
in
push
cld
mov
(bad)
lds
sub
and
clc
mov
in
xlat
sahf
test
push
enter
push
cmp
nop
sub
leave
cmp
push
rcl
ret
and
stos
enter
cli
repnz
sar
out
add
fcomp
cmps
cwde
test
popf
jecxz
cld
movups
pop
leave
mov
xchg
and
push
test
lds
jo
pop
add
mov
xchg
js
loop
xchg
loopne
add
ss
(bad)
addr16
nop
sub
popa
hlt
mov
retf
jge
push
push
lea
push
adc
repnz
mov
inc
push
ret
bnd
fstp
loope
retf
mov
fadd
mov
out
scas
push
scas
inc
or
(bad)
scas
popa
pop
mov
mov
cmp
xor
pushf
sbb
cmc
xor
and
xor
add
sahf
and
jle
pop
or
cmps
test
pop
mov
out
pop
jbe
dec
cmc
pop
sar
and
stos
and
fadd
shr
rcl
jecxz
ja
jecxz
ret
sub
call
enter
sbb
mov
into
add
sbb
cdq
test
dec
(bad)
sbb
xchg
sub
or
adc
xlat
std
lahf
rol
ins
lods
fadd
cs
ins
push
leave
adc
fnstcw
inc
mov
adc
jl
mov
mov
ret
leave
jno
lock
in
sbb
jo
sahf
inc
mov
test
daa
mov
or
popa
sub
(bad)
mov
retf
or
aas
adc
jne
fwait
jl
std
jne
inc
cmc
in
mov
mov
scas
dec
pop
test
dec
sub
adc
call
inc
mov
bound
add
outs
mov
cmp
stos
push
fisttp
loop
cmc
mov
fnstenv
mov
(bad)
jge
es
push
pop
xor
rol
(bad)
inc
(bad)
mov
scas
jmp
pop
xlat
fs
gs
jmp
cmp
sub
ret
cmps
popf
add
or
push
inc
pusha
jo
das
in
xchg
xchg
sub
cmp
xor
outs
or
and
jno
scas
jmp
mov
lods
dec
jae
mov
mov
mov
mov
xchg
cwde
clc
dec
xor
jnp
jno
mov
mov
or
cmp
dec
mov
mov
shr
pushf
jns
cmp
out
pop
mov
test
or
inc
xchg
sar
mov
push
fisub
adc
fnstsw
cmp
sub
fistp
leave
add
fcomp
mov
mov
cmc
clc
xor
xor
(bad)
test
inc
inc
add
fbstp
mov
int3
xor
lds
aam
mov
and
add
or
xchg
inc
imul
mov
xchg
fwait
inc
(bad)
ficom
inc
add
ret
jmp
xor
test
es
(bad)
sub
mov
xchg
popf
imul
daa
int
xlat
mov
jecxz
fwait
or
sti
sar
retf
and
aam
push
mov
clc
jnp
lods
push
fcomp
sub
sbb
lods
ins
nop
push
sahf
dec
push
dec
xchg
and
cmp
enter
cli
pushf
ja
call
stc
mov
xor
das
(bad)
mov
add
xor
push
xchg
rol
sbb
dec
pop
pop
xchg
add
sahf
xlat
test
cld
adc
push
bound
mov
push
jne
ror
push
sbb
add
cmps
jbe
lea
and
cwde
add
adc
or
xchg
mov
and
bound
mov
inc
fscale
in
sbb
mov
mov
xor
out
cmp
jno
cmps
daa
push
push
jge
jb
es
mov
gs
ror
in
pop
adc
adc
jne
retf
dec
sbb
jl
hlt
js
cs
mov
jo
das
jle
xor
lds
mov
hlt
cwde
lahf
icebp
cmps
popa
mov
nop
xor
mov
loop
sub
push
and
retf
sbb
sub
push
push
test
js
jmp
mov
(bad)
pop
or
jne
sbb
hlt
xlat
xchg
jecxz
adc
jp
(bad)
xlat
ficom
repnz
push
in
push
mov
mov
sub
sbb
ins
jmp
xor
iret
outs
and
hlt
mov
xchg
aaa
(bad)
fstp
mov
fs
jg
sub
js
(bad)
les
cmp
push
xchg
fcom
movs
push
ror
shl
pop
jmp
xchg
and
xchg
outs
dec
sbb
shr
xchg
stc
xlat
mul
fstp
(bad)
addr16
dec
stos
popf
cdq
scas
addr16
adc
(bad)
imul
xor
dec
push
rcl
rcr
in
mov
in
mov
pusha
daa
scas
movs
out
jge
das
dec
push
daa
mov
pop
jb
jne
cmp
jbe
push
mov
push
int
lock
pop
jge
mov
xor
sbb
jl
xchg
lds
and
inc
add
sbb
gs
fisub
fistp
pop
(bad)
pusha
xchg
mov
scas
jl
jge
ret
mov
(bad)
scas
in
stos
out
rol
mov
icebp
retf
mov
mov
inc
fisttp
dec
mov
mov
jge
push
jns
sbb
in
mov
iret
cmps
cmp
sahf
push
xchg
ins
in
out
xchg
ins
add
jg
pusha
rol
(bad)
xor
or
add
pop
mov
(bad)
cmp
pop
test
dec
cmps
das
sbb
sbb
sti
mov
push
ins
adc
mov
add
iret
movs
pop
and
js
lahf
scas
inc
cld
call
lahf
pop
sbb
pop
lea
sub
clc
or
sbb
adc
pusha
add
icebp
nop
or
es
add
icebp
test
pushf
mov
lea
add
add
xchg
jo
stos
xchg
pusha
mov
dec
shl
repnz
jp
cmp
sub
mov
ins
lods
mov
mov
aas
xor
jns
mov
or
bound
sub
cmp
lods
fld
cmps
popa
adc
sub
pop
test
into
outs
sahf
and
xchg
fdiv
cmp
and
mov
dec
loop
sbb
aam
outs
aas
xchg
inc
imul
or
ins
popf
dec
mov
cmps
jge
add
adc
push
and
mov
xor
loope
cmp
add
fisttp
mov
(bad)
inc
cmp
fdiv
pop
fwait
jmp
jbe
sti
ja
lds
mov
mov
cmp
adc
fst
dec
stos
mov
movs
pop
add
pop
out
mov
mov
retf
cmc
mov
ins
dec
adc
inc
clc
or
push
clc
cmp
mov
xor
xchg
jl
test
(bad)
xor
push
push
fidiv
(bad)
jl
jmp
and
cmp
mov
cmp
shl
scas
int
and
les
xchg
adc
mov
add
int3
pop
xor
sbb
icebp
xchg
jle
pop
test
das
and
mov
xchg
inc
mov
inc
(bad)
sti
mov
xchg
jbe
fisub
inc
jns
shl
pop
not
mov
or
movs
or
cld
xor
xchg
stos
pop
cwde
dec
push
sbb
call
frstor
out
pop
ficom
and
jle
(bad)
dec
push
addr16
fcmovnbe
or
xchg
imul
ja
push
dec
daa
cwde
sbb
clc
inc
test
xchg
lock
inc
retf
pop
inc
and
imul
je
into
popf
xchg
cmps
lods
pop
loop
loop
sbb
mov
(bad)
sub
nop
adc
and
push
and
repnz
adc
test
ins
into
into
jbe
jg
pop
xchg
pop
mov
gs
sub
inc
outs
(bad)
pop
les
lahf
inc
mov
xchg
inc
sub
aam
outs
mov
xor
pop
fdiv
neg
sbb
jmp
mov
outs
popf
push
movs
inc
mov
jbe
icebp
xchg
mov
xchg
sbb
scas
mov
jns
jge
jg
mov
jecxz
(bad)
in
imul
lds
xor
add
pop
test
lds
popa
xchg
popa
sub
cmp
ficom
rcr
sbb
cmp
cmp
push
jp
mov
mov
mov
scas
xor
mov
sbb
inc
pop
lahf
stc
jnp
sbb
lock
push
adc
dec
mov
add
add
push
imul
lahf
stos
pop
or
dec
inc
pop
sub
fdivr
ficom
imul
fs
mov
jecxz
pop
push
jno
jb
xchg
imul
pop
(bad)
lods
add
or
int3
(bad)
xor
jae
dec
add
je
fadd
or
inc
loope
mov
mov
(bad)
out
xchg
sub
shl
(bad)
sub
movs
xchg
cli
push
mov
add
dec
movs
stos
into
push
sbb
mov
pop
pop
dec
ss
(bad)
jmp
rep
clc
sbb
add
or
sti
sbb
mov
shl
es
inc
scas
ins
ins
fist
pop
js
enter
addr16
arpl
ja
pop
enter
sar
(bad)
mov
inc
test
mov
lds
repnz
sbb
push
or
dec
mov
sti
sub
push
out
das
adc
call
pop
call
rcr
inc
mov
dec
arpl
mov
mov
add
into
add
push
xlat
push
int
sti
adc
and
retf
xchg
xor
inc
call
mov
add
out
dec
jnp
xchg
jnp
add
sbb
inc
sbb
div
pop
and
mov
(bad)
jo
cmp
mov
popa
(bad)
mov
dec
jg
xor
adc
push
imul
xchg
pop
push
and
dec
sbb
mov
cld
rcr
jge
add
xchg
mov
xchg
arpl
lods
cdq
sub
or
xchg
ins
loopne
lods
out
icebp
xor
sbb
jle
icebp
fwait
sub
xor
xor
pop
sub
jne
int
lods
fnstcw
repz
adc
pop
sahf
adc
mov
jb
xchg
fstp
aad
mov
mov
daa
loop
neg
xor
jmp
add
lods
lock
cmps
adc
dec
cmp
pop
jo
shr
stos
jecxz
call
or
loope
nop
pop
repnz
inc
jns
mov
hlt
sbb
pop
ja
rol
(bad)
dec
pop
mov
rcr
or
rcr
xor
loopne
mov
jmp
ror
in
mov
sahf
out
cwde
push
inc
out
jmp
cmp
retf
sbb
stc
nop
xor
aam
jg
(bad)
sbb
(bad)
push
sar
push
mov
adc
fdivr
mov
jnp
inc
push
test
mul
mov
sub
fsub
adc
ja
jmp
xor
pop
pop
fs
xor
stos
dec
test
test
xchg
cmp
xor
repnz
movs
shr
shr
repz
and
shr
leave
mov
jno
fwait
sub
int3
mov
mov
repz
mov
pop
mov
xlat
in
icebp
or
call
jmp
adc
cmp
js
sbb
xchg
sub
xchg
sub
push
pop
push
div
adc
add
iret
mov
add
pop
dec
cmp
push
add
les
push
call
inc
mov
aad
sbb
inc
mov
cmp
mov
xor
or
ficom
shl
inc
mov
and
jnp
add
jo
fnstcw
jl
cli
push
and
adc
sbb
and
cmps
fmul
lock
dec
nop
cmp
cs
pop
xchg
jno
adc
and
cmps
jle
jo
enter
loop
mov
test
xlat
daa
mov
push
jl
xchg
mov
add
pop
inc
and
hlt
outs
test
cmp
mov
mov
pop
jp
arpl
jo
adc
mov
cmp
cdq
and
ja
test
xchg
cmps
daa
mov
fsub
inc
cmp
repz
mov
lods
lock
fsincos
xchg
test
xchg
mov
cmps
sub
mov
in
ds
jle
jne
ins
sub
je
or
iret
inc
mov
dec
(bad)
faddp
and
inc
sbb
stos
sub
popa
dec
aam
mov
sbb
jg
movs
dec
dec
pop
les
jmp
inc
outs
fisubr
hlt
ss
movs
xchg
dec
stos
jg
les
movs
and
test
push
push
in
leave
cmp
mov
jl
dec
pop
ds
(bad)
aas
jg
jbe
js
(bad)
xchg
into
xor
mov
test
mov
ret
mov
xchg
not
mov
mov
hlt
int3
imul
stos
sbb
xor
gs
push
cmp
xlat
ficom
sub
mov
pop
call
mov
push
lds
or
outs
push
fnstcw
add
xor
xchg
je
add
dec
stc
scas
and
sbb
les
cmp
add
jb
xor
retf
outs
mov
mov
test
mov
call
daa
sbb
sub
ficomp
sbb
push
dec
sbb
or
xchg
nop
arpl
and
pusha
movs
pop
or
test
push
outs
loop
adc
clc
out
rcl
fcom
adc
and
in
lods
cs
sbb
(bad)
mov
pop
inc
cdq
push
scas
js
push
out
sbb
dec
xchg
lods
fsub
mov
adc
(bad)
imul
ret
repnz
pushf
xor
mov
int
pop
dec
lods
movs
outs
mov
mov
lods
dec
push
pop
icebp
mov
in
sbb
or
movs
leave
icebp
out
pop
push
add
adc
(bad)
lock
mov
dec
xor
adc
(bad)
pminub
xchg
mov
retf
gs
test
mov
mov
clc
push
neg
adc
or
lahf
and
out
pop
add
test
mov
(bad)
addr16
mov
or
popa
sbb
es
sub
pop
jmp
ret
sub
daa
hlt
push
bound
jne
or
xchg
das
push
xchg
lods
fcmovb
push
in
bound
retf
pop
ret
imul
xor
dec
stos
pushf
xchg
sub
inc
mov
push
repnz
ret
jae
jb
aas
into
pop
repz
imul
setge
jno
inc
cmp
cwde
sub
cmp
mov
adc
fs
adc
mov
daa
mov
pusha
sub
or
(bad)
popf
dec
or
in
ss
pop
cmp
mov
test
and
or
xchg
outs
sahf
cli
call
(bad)
mov
xchg
nop
stc
and
jmp
sbb
outs
adc
sbb
pop
jmp
sbb
or
out
sub
mov
(bad)
(bad)
xor
sbb
sbb
dec
jae
pop
in
iret
or
pop
and
push
adc
les
push
mov
mov
dec
dec
je
fisubr
cmp
push
lods
and
loope
fidivr
jae
sahf
das
add
je
pop
retf
cmp
pop
xor
cmp
icebp
jae
stc
or
or
push
sbb
pushf
ret
shl
in
inc
adc
popf
test
es
sbb
popf
cld
hlt
in
bound
das
pop
hlt
daa
iret
push
inc
pushf
pop
popa
(bad)
sub
pop
outs
sbb
add
pusha
add
lds
mov
inc
rol
cmp
or
cdq
jnp
or
sti
out
daa
into
arpl
xchg
pop
ins
xchg
mov
mov
stc
xor
push
aas
cmp
or
dec
fwait
shl
or
jg
retf
nop
sub
jl
in
das
(bad)
popf
mov
push
mov
enter
mov
push
adc
clc
cmp
sub
clc
jnp
popf
mov
xor
mov
jecxz
mov
push
lods
stos
mov
and
popa
fisttp
inc
rol
jo
shr
adc
sub
mov
xchg
repnz
iret
or
sbb
sub
stc
out
retf
xor
cmp
dec
dec
jge
es
pop
push
mov
xor
das
cmc
call
mov
inc
inc
mov
mov
jae
jle
in
je
in
mov
xchg
xchg
cmp
das
cmps
mov
lods
leave
sbb
sbb
ss
jecxz
pop
adc
mov
add
lods
inc
xor
int
mov
(bad)
jmp
jnp
int3
mov
retf
call
jl
cmp
xchg
pop
inc
lds
xchg
mov
aas
push
shl
mov
jge
jns
mov
xchg
fdivr
nop
(bad)
fldenv
pusha
push
mov
xor
rcl
mov
dec
dec
add
popfw
pop
xchg
stos
rcl
pop
movs
pop
mov
mov
pop
pop
add
adc
lods
dec
out
int
dec
rcr
mov
sub
add
push
pop
sub
arpl
push
(bad)
mov
out
lods
adc
mov
adc
and
ds
mov
in
dec
popa
inc
in
mul
mov
cmp
push
in
xor
xor
out
cmp
dec
fisub
stos
mov
mov
fdivr
sbb
push
mov
dec
mov
adc
pop
repz
mov
add
sbb
ret
mov
popf
mov
test
dec
jmp
dec
xchg
lods
mov
inc
retf
sar
mov
es
movs
sbb
outs
retf
fbstp
(bad)
xchg
pop
test
dec
sbb
and
or
and
mov
std
shl
cmp
jne
dec
cmp
and
scas
adc
movs
out
gs
mov
mov
stos
xchg
add
lods
test
arpl
adc
dec
pop
std
je
push
mov
sub
scas
loopne
or
gs
mov
jb
in
nop
popf
fs
push
sti
mov
or
xlat
add
int3
fiadd
inc
pusha
mov
inc
push
ins
xchg
mov
sub
add
aad
sar
xor
dec
jmp
pusha
xchg
xor
fdivr
xor
push
inc
stos
imul
sub
cmp
sahf
cwde
adc
mov
aad
addr16
jmp
push
repnz
sub
loope
xchg
cld
fsubr
push
dec
(bad)
and
outs
addr16
mov
mov
xchg
test
mov
sbb
jp
out
fist
push
mov
cs
sbb
inc
clc
sub
jmp
movs
sar
jno
xchg
inc
aas
mov
dec
jmp
out
stos
out
(bad)
loop
add
rep
loop
stos
pop
mov
sbb
or
jns
imul
or
sti
ror
sbb
cs
mov
les
fbstp
pop
add
inc
sub
sbb
ficomp
repnz
in
das
ja
je
gs
dec
mov
arpl
int
cmps
mov
aas
lods
dec
dec
xor
fiadd
add
or
mov
xor
cmc
call
add
repz
push
push
stc
sbb
out
(bad)
sbb
(bad)
xor
cmp
sub
cs
(bad)
aaa
(bad)
test
call
inc
div
popa
test
jmp
pushf
inc
popa
lahf
inc
cmps
dec
loop
inc
outs
pop
shl
out
push
cli
xchg
dec
arpl
jo
sub
dec
test
inc
das
push
or
cmp
icebp
lahf
mov
xor
add
loope
cmps
xlat
cdq
pop
inc
loopne
sub
ret
outs
aad
sub
ja
out
ror
mov
mov
add
in
xor
ror
sbb
ret
adc
je
sbb
popf
mov
and
inc
mov
test
scas
pop
dec
and
(bad)
mul
int3
mov
sub
sbb
js
push
jns
cmp
inc
mov
mov
push
pop
repnz
aad
dec
add
add
retfw
int3
push
inc
cmp
add
repnz
sbb
pop
lods
and
pop
mov
jb
aas
(bad)
mov
pop
cmp
mov
push
jecxz
push
imul
xor
xor
xor
dec
xchg
std
movs
inc
js
jbe
std
ja
cmps
aam
xchg
arpl
out
psrlw
out
fs
or
push
dec
ss
(bad)
xlat
gs
in
mov
mov
rcl
xchg
div
iret
inc
mul
not
mov
fdiv
mov
dec
or
push
in
xchg
loop
pop
and
popf
pop
mov
xchg
jnp
dec
loopne
jg
popa
dec
sub
imul
(bad)
mov
shl
movs
loopne
push
lock
mov
mov
test
dec
xchg
inc
mov
xchg
imul
inc
inc
add
xchg
mov
nop
or
cmps
call
pusha
mov
stos
stos
lahf
cmp
sbb
test
in
sti
adc
add
sub
pop
or
rcr
gs
loopne
call
cmps
ins
ins
sbb
or
inc
nop
call
dec
ins
icebp
int3
mov
in
cmp
pop
sbb
and
jnp
lods
outs
cmp
xchg
and
pop
adc
mov
(bad)
mov
sbb
push
add
jle
sbb
lods
add
pushf
scas
jno
ror
xor
adc
pushf
and
pop
inc
push
pushf
stos
test
arpl
mov
push
nop
pop
sbb
aaa
sub
pop
loop
dec
and
push
mov
pop
adc
jmp
sbb
lea
lods
mov
jno
call
push
adc
enter
fwait
adc
inc
xchg
pop
dec
dec
xor
pop
pop
or
test
and
cmp
mov
dec
out
pop
(bad)
aaa
or
jp
sti
jmp
jp
pop
and
xchg
inc
push
(bad)
retf
sub
fs
test
(bad)
dec
ss
(bad)
iret
sar
shl
mov
outs
sti
or
cmps
and
shl
aas
lea
xchg
test
or
movs
std
aaa
jmp
ficom
mov
loop
xor
pop
push
cmp
ret
cli
test
fidivr
or
sahf
test
xchg
sub
das
jle
inc
sub
cmp
ja
add
cmp
loope
cmp
aad
lahf
mov
(bad)
or
mov
pop
cli
dec
xor
repz
push
and
push
ror
inc
xchg
outs
clc
pushf
(bad)
ror
sbb
dec
jae
mov
mov
clc
sub
sub
call
js
and
lea
pop
inc
cmp
push
mov
or
ds
(bad)
inc
inc
leave
cs
pop
jae
cmp
and
ds
cmp
sbb
mov
mov
jno
inc
mov
mov
test
fsubr
shl
das
aad
in
xchg
(bad)
dec
add
jne
fcomi
xor
mov
xor
add
fwait
adc
aaa
js
jmp
cmp
stos
adc
mov
push
ins
dec
cli
sbb
mov
mov
fwait
sub
retf
lods
shl
stos
gs
adc
xor
push
push
inc
xchg
push
mov
sbb
js
mov
aad
and
sti
fcmovnu
cmps
fdiv
jg
je
clc
xchg
inc
mov
jl
xchg
mov
cmp
fild
out
test
out
mov
adc
imul
pop
xchg
mov
jmp
sub
inc
(bad)
and
in
fcmovne
outs
mov
dec
movs
daa
or
push
test
xor
adc
dec
fldpi
test
loopne
push
cmp
push
aaa
test
sub
or
ds
imul
mov
ficom
xor
js
inc
imul
sub
(bad)
in
dec
jbe
or
xlat
lock
push
loop
jae
iret
jne
out
pop
das
int
pop
mov
dec
xor
fcomp
in
hlt
mov
pop
fdivrp
xchg
jbe
mov
sub
outs
call
sbb
mov
dec
adc
mov
cmp
(bad)
and
cmp
call
and
pop
or
shl
popa
imul
pop
dec
mov
add
push
cli
adc
mov
inc
jg
adc
cmps
xchg
add
popa
jl
test
jg
cli
ins
gs
xlat
out
dec
jnp
jbe
and
inc
jbe
loop
retw
aad
lea
sbb
fbld
jg
mov
pop
xor
adc
ret
in
scas
adc
sbb
(bad)
std
popa
imul
xor
mov
test
sub
neg
pop
or
les
jb
idiv
xchg
dec
rcr
es
fadd
(bad)
scas
into
or
jnp
xor
xchg
inc
ja
cmp
int
adc
sbb
int
xor
das
mov
int
fmul
and
sar
xchg
inc
clc
loope
into
sar
add
into
pushf
cmc
adc
into
mov
adc
test
pop
inc
loopne
mov
dec
bound
(bad)
push
iret
jb
xor
movs
shl
fist
das
cmp
mov
xchg
repz
xor
sub
rcl
sub
xor
les
push
ret
fld
shr
push
jp
fwait
xor
mov
pop
fcmovbe
nop
movs
out
aaa
push
scas
out
in
and
out
sbb
pushf
mov
sub
not
inc
popa
jmp
int
ds
xchg
sbb
xchg
adc
mov
aad
mov
push
loop
cwde
(bad)
mov
sub
pop
mov
das
aaa
push
cwde
mov
pop
and
and
clc
xchg
out
and
add
sub
fs
cli
test
xchg
clc
stos
xchg
shl
adc
dec
push
mov
mov
inc
lds
push
movs
dec
add
(bad)
mov
cld
test
les
(bad)
mov
adc
inc
add
adc
pop
rcl
es
out
fwait
cmp
ins
sub
mov
ins
shr
xchg
mov
and
sti
out
in
into
mov
add
jnp
test
mov
or
inc
call
add
adc
test
xor
mov
push
data16
popa
test
fidivr
sub
xor
push
xchg
in
mov
fbld
(bad)
adc
push
fwait
iret
aas
loopne
sub
inc
mov
pushf
call
sbb
push
das
jbe
ins
sub
std
mov
mov
pop
pop
fld
dec
daa
iret
(bad)
mov
jmp
js
pop
cmp
lds
pop
or
(bad)
cld
push
iret
in
cmp
adc
jo
mov
leave
add
je
std
bswap
xchg
test
int3
and
jo
scas
sti
inc
xlat
xlat
xchg
mov
and
add
xlat
pushf
jns
je
call
push
shr
cmps
pop
lock
xchg
cmp
out
scas
pop
and
vmwrite
cli
add
fsub
fcmove
jg
pop
mov
ret
leave
xor
push
push
loope
loop
inc
(bad)
das
call
jge
cmp
pop
sub
xor
out
sub
xor
jb
jmp
mov
xor
in
inc
shr
pop
or
ret
push
fimul
cmp
aad
jmp
xchg
and
mov
xchg
mov
(bad)
out
ins
sbb
stos
jbe
jns
and
fwait
arpl
dec
les
das
ins
push
or
ja
sub
xchg
xor
pop
inc
sub
(bad)
loopne
mov
test
and
mov
test
lahf
sub
cmp
xchg
leave
shr
jmp
mov
enter
sub
pusha
pop
inc
sub
mov
(bad)
mov
rcr
aaa
popf
cmc
ins
mov
cmp
or
ja
push
out
or
push
(bad)
xchg
dec
push
idiv
call
test
shr
cld
daa
loop
fstp
jne
xor
retf
sti
xchg
mov
adc
shr
in
mov
xchg
pop
adc
add
imul
cmps
movs
lods
dec
rol
jne
stos
je
xor
inc
dec
lds
mov
mov
iret
scas
addr16
jecxz
pusha
not
mov
pusha
pop
mov
js
inc
ficom
mov
ror
repnz
mov
push
pop
retf
idiv
cmp
adc
out
int
jo
pop
adc
stos
adc
cwde
xor
push
imul
jnp
clc
cwde
pop
mov
cmp
and
stos
das
add
xor
adc
xchg
sbb
mov
add
and
xor
sub
sar
dec
and
push
pop
mov
xor
lea
cmc
push
shl
xor
mov
mov
and
pusha
push
ror
mov
aas
shl
jne
aaa
imul
pop
rcr
adc
xchg
and
dec
mul
dec
arpl
mov
es
dec
jbe
mov
push
push
in
icebp
leave
pop
cmp
push
pop
push
push
sbb
xchg
inc
jbe
loop
int3
rcr
sub
arpl
or
jle
outs
rol
fadd
icebp
rcr
pop
sbb
mov
ja
jg
mov
les
push
xor
stos
mov
adc
xchg
(bad)
pop
jbe
cmp
jmp
(bad)
xchg
imul
ss
ds
retf
ret
(bad)
fdiv
(bad)
push
dec
repnz
sbb
xor
clc
call
sar
push
scas
push
retf
iret
adc
test
cmp
xor
scas
fsub
scas
lock
push
test
shl
xchg
(bad)
lahf
dec
idiv
shr
aaa
cdq
je
int3
cmp
xchg
call
pop
jmp
adc
adc
xor
jp
in
mov
mov
add
xchg
sub
jle
inc
push
stos
mov
cmc
xchg
push
mov
ret
inc
cmp
mov
out
mul
ins
retf
cmp
fist
mov
aas
and
adc
push
ss
cmp
int
cli
nop
mov
mov
jnp
jne
inc
aam
out
in
lock
aas
mov
dec
xchg
in
add
enter
mov
jle
pop
mov
adc
sbb
or
sub
stc
sbb
cdq
cmp
pop
push
call
push
aad
sub
cmc
xchg
ret
mov
js
xor
mov
xchg
or
out
in
pusha
mov
and
and
inc
daa
das
std
cmp
stos
sub
aaa
dec
bound
call
inc
jne
mov
stos
loope
mov
mov
fs
dec
cmp
pop
or
mov
lods
fst
in
call
cdq
jne
xor
div
or
sub
out
xor
je
jns
and
enter
icebp
push
add
in
mov
call
pop
cmp
icebp
loopne
cdq
(bad)
push
retf
push
dec
movs
popf
in
pop
int3
jg
mov
in
sar
cmp
xor
lods
ret
jbe
mov
adc
xor
int
pop
mov
jp
je
(bad)
or
or
adc
sbb
mov
dec
outs
pop
lahf
ja
push
or
cmp
cmp
cmps
sbb
push
sub
in
(bad)
push
mov
mov
dec
or
cmp
jmp
mov
xchg
fstp
jmp
inc
test
pop
xchg
jp
fcom
sar
mov
jl
add
push
stc
xor
test
add
arpl
jl
scas
push
adc
leave
mov
pushf
popa
or
mov
in
cmps
loope
xchg
data16
scas
xchg
dec
mov
push
fnstcw
sbb
sbb
sahf
test
mov
and
gs
inc
adc
data16
inc
xor
ret
adc
dec
push
pop
scas
sahf
popf
ret
sbb
pusha
push
xor
dec
data16
shl
std
lock
xchg
iret
int3
mov
xor
or
(bad)
xchg
push
inc
mov
jmp
orps
mov
mov
stos
ins
repnz
dec
and
cmp
shl
sub
jle
push
push
pusha
mov
rol
mov
mov
shr
add
or
dec
or
xchg
mov
cli
(bad)
and
bnd
dec
mov
xor
cmc
ror
dec
int
in
mov
cmp
lea
mov
call
leave
ja
sbb
addr16
lds
cmp
std
cld
dec
jg
xchg
inc
cld
xchg
adc
sub
xchg
cmp
pop
inc
push
icebp
dec
cmps
adc
div
adc
in
out
mov
sub
add
jg
neg
mov
lds
cs
pop
add
or
(bad)
pop
mov
int
xchg
add
xadd
ror
mov
in
addr16
or
push
xchg
std
clc
dec
(bad)
jl
fadd
aad
mov
inc
or
lods
arpl
fsubr
xchg
push
das
mov
out
push
dec
fst
jle
mov
sub
mov
test
jno
mov
cmp
xchg
push
enter
mov
mov
retf
ss
cmps
std
hlt
xchg
and
and
adc
stos
add
xchg
sbb
mov
xchg
sub
into
add
cmp
retf
mov
daa
js
ja
sub
mov
jns
gs
mov
pop
mov
enter
jl
gs
iret
test
outs
mov
int3
dec
push
fs
mov
cwde
xchg
mov
sti
dec
mov
push
shl
retf
inc
sbb
jo
sar
mov
xchg
addr16
cdq
mov
push
mov
fild
pop
stos
and
cwde
sub
adc
popf
or
jb
mov
push
or
jns
ja
jne
xchg
xchg
xor
ins
jae
push
mov
int3
and
dec
popa
hlt
xlat
scas
aam
cmp
jns
(bad)
aas
movs
stos
mov
hlt
mov
aas
lds
inc
popf
hlt
loopne
inc
mov
adc
je
fcmovnb
cmps
mov
add
lahf
add
sub
lods
xlat
mov
xchg
ja
test
cmp
and
xor
mov
retf
outs
shl
int
mov
dec
xchg
adc
ins
lods
cld
dec
pop
jp
add
fwait
xchg
push
add
fisubr
cs
push
(bad)
data16
or
int
pop
mov
push
sbb
jnp
push
leave
inc
xor
iret
cld
lods
into
outs
mov
data16
jmp
daa
ins
xchg
mov
les
sti
icebp
pushf
add
xor
xor
mov
adc
and
mov
sar
pop
pop
dec
mov
push
into
xchg
mov
xchg
sti
inc
aaa
mov
or
loope
ins
xchg
adc
mov
pushf
xchg
mov
inc
cmps
and
pusha
cdq
pop
lds
add
movlps
retf
jl
sbb
stos
test
xor
(bad)
aaa
adc
loope
dec
(bad)
pop
jge
lea
lods
push
or
inc
sub
fst
jmp
sub
mov
cld
lods
or
jg
push
mov
push
mov
retf
loop
aas
sbb
mov
cmc
je
xchg
xchg
icebp
dec
mov
mov
push
sub
xchg
push
push
xchg
std
xor
dec
in
imul
mov
int3
addr16
test
mov
(bad)
das
sub
dec
sbb
adc
mov
sub
(bad)
call
jo
cmp
mov
clc
mov
mov
jp
mov
call
or
jb
scas
movs
dec
std
call
jmp
sub
faddp
cli
pushf
jge
test
mov
aas
mov
es
iret
jno
sub
idiv
and
loope
or
mov
pop
sub
call
mov
icebp
repnz
mov
in
cmps
fisttp
xchg
inc
test
mov
jo
neg
xor
adc
dec
inc
push
icebp
dec
pop
sbb
int
cld
or
xchg
retf
adc
pop
test
iret
mov
push
jne
dec
int
adc
cmps
xchg
jg
lods
ret
not
jno
jbe
imul
data16
inc
adc
pop
cmp
imul
mov
arpl
mov
icebp
jnp
xor
mov
adc
pop
mov
shl
or
ins
inc
fwait
mov
jo
or
pop
and
gs
pop
nop
or
push
or
or
mov
add
pop
pop
pop
cmp
xchg
jnp
push
adc
sar
(bad)
xchg
xor
mov
cmp
mov
pop
test
das
leave
std
push
dec
(bad)
xor
mov
std
cli
scas
popa
push
jmp
test
sbb
push
int
mov
cmp
repnz
jne
in
sbb
push
outs
movs
pop
mov
movs
out
fcom
in
push
in
sub
clc
adc
or
(bad)
cmps
gs
mov
add
mov
xchg
cwde
arpl
lea
cmp
js
lods
inc
rcr
das
mov
sbb
mov
inc
test
jmp
cmps
inc
(bad)
mov
stc
ja
add
mov
cmps
inc
fwait
dec
shr
fnstsw
outs
jne
xchg
adc
cmpxchg
imul
sar
sti
je
add
outs
dec
jnp
sti
cmps
sbb
pop
add
or
jecxz
jnp
test
push
(bad)
stc
jns
loop
lea
adc
scas
and
(bad)
repnz
jge
sti
dec
xchg
dec
jns
push
imul
loope
fadd
or
and
pop
dec
mov
or
stos
iret
pop
dec
pusha
push
js
mov
shl
jae
js
ret
out
sub
les
imul
gs
jo
xchg
dec
jbe
lock
cdq
sub
inc
out
fld
cmp
in
int
mov
cs
jp
ins
cmp
push
das
sub
ret
lods
shl
(bad)
repz
jmp
mov
or
sub
jecxz
mov
cli
sti
mov
xor
xchg
cli
mov
aaa
mov
adc
mov
sbb
shl
ret
aad
add
and
push
dec
push
das
scas
mov
pusha
or
arpl
pop
jnp
aam
jp
push
add
scas
xor
and
mov
pop
lock
retf
out
icebp
dec
jns
call
xchg
xchg
iret
int3
mov
retf
dec
jnp
adc
cmp
inc
es
adc
add
jnp
push
pop
push
cmps
jecxz
std
pop
xchg
sub
sub
xor
sub
jl
test
aam
push
fsubr
xchg
jg
loopne
pop
test
in
sub
mov
loop
sbb
inc
ds
sub
adc
mov
out
pushf
fisubr
fsubr
and
push
loopne
fdivr
xchg
xchg
add
adc
sbb
test
shl
icebp
mov
and
push
inc
out
mov
test
jnp
mul
not
mov
mov
int3
mov
dec
or
loop
sub
(bad)
jnp
sbb
mov
movs
cdq
jno
je
jmp
je
xchg
or
dec
jmp
gs
sbb
aaa
xchg
shl
cmp
pushf
push
retf
sbb
les
stos
mov
push
aad
mov
and
xor
mov
mul
jns
ja
or
call
frstorw
add
mov
shl
mov
(bad)
mov
push
js
pop
mov
dec
mov
inc
inc
shr
arpl
iret
repnz
jne
xchg
rol
mov
inc
out
sub
cld
mov
pop
in
stc
gs
repz
stos
in
jp
mov
rol
sbb
mov
test
ror
repz
fist
pop
jle
jo
jnp
popa
repz
dec
out
xor
jae
sub
sub
gs
ins
add
outs
mov
mov
pop
pusha
sbb
neg
jns
ret
stos
cmp
or
push
pop
pop
cmp
jmp
into
and
dec
cwde
sbb
rcr
mov
lock
ret
dec
loopne
pop
or
jp
and
cli
xor
(bad)
addr16
(bad)
pop
mov
inc
sub
daa
pusha
mov
inc
int
sub
push
sti
cmp
adc
jle
dec
xchg
jmp
jb
pop
lds
sbb
mov
cmp
scas
shr
push
int3
sbb
icebp
jmp
clc
repnz
pushf
test
xchg
mov
test
call
adc
iret
mov
test
out
push
adc
ficomp
push
fldenv
add
jae
and
cmps
cmps
adc
pop
add
pop
es
movs
in
test
or
inc
sub
out
out
ins
cdq
xor
shr
idiv
(bad)
arpl
cmp
cmp
fdiv
jge
into
push
cmp
mov
dec
push
adc
dec
sbb
outs
cmp
imul
sti
sbb
jecxz
shl
and
xchg
add
inc
push
sbb
test
mov
sub
or
ds
int3
jb
movs
inc
mov
sti
inc
lock
outs
xchg
or
mov
retf
cmp
rol
adc
sub
sub
loop
or
add
mov
and
and
cli
fstp
inc
scas
lahf
add
mov
cld
push
fisubr
sbb
mov
pop
cs
pop
mov
xor
inc
pop
jg
cmp
push
inc
pop
xchg
sbb
aam
jns
cmp
(bad)
jmp
mov
push
std
mov
mov
fimul
imul
fxch
mov
push
jbe
xchg
test
fsubr
or
fst
fimul
fsubrp
daa
mov
jl
pop
cwde
xlat
(bad)
sub
cmp
lods
sbb
xor
pop
jp
and
or
xor
clc
push
jno
pop
mov
mov
fwait
sbb
xchg
leave
jb
ins
ror
sub
push
pusha
(bad)
addr16
cmp
stc
pop
xor
je
call
mov
test
in
aad
inc
fsubr
xchg
push
jecxz
in
ss
pop
push
fdivr
test
pop
mov
test
fisttp
add
mov
mov
dec
ins
dec
nop
cwde
mov
mov
mov
repz
or
in
daa
xchg
ret
popf
jmp
stos
mov
fldcw
xor
mov
(bad)
(bad)
fdiv
sub
mov
pop
mov
outs
and
xchg
shl
mov
mov
test
inc
push
adc
repz
imul
mov
repnz
fcomp
daa
cmp
ret
cmps
sbb
mov
stos
test
aad
push
jl
inc
je
mov
hlt
mov
jmp
cmc
int3
(bad)
xchg
enter
push
jne
jmp
imul
les
popf
jne
dec
ret
pusha
push
call
and
dec
in
jmp
loope
rcr
fdiv
shr
les
loopne
test
in
fiadd
or
push
jmp
leave
sahf
xchg
or
div
mov
cli
mov
mov
les
inc
sbb
(bad)
aas
xlat
or
rol
popa
mov
pop
test
dec
jmp
cmps
addr16
mov
into
xchg
js
pop
outs
cwde
xlat
stos
inc
ss
dec
mov
sub
jg
or
inc
pop
test
mov
lods
sbb
shl
jmp
sub
les
sti
mov
adc
jge
sbb
push
shr
inc
mov
mov
lods
mov
push
cmp
dec
push
int
add
xchg
inc
add
push
in
ins
mov
dec
fnsave
outs
cmc
cmp
jnp
adc
inc
sub
inc
enter
in
mov
int
pop
xchg
test
in
mov
inc
gs
loopne
jne
loop
icebp
cmp
jnp
inc
add
pop
ret
sbb
push
push
fidiv
es
xor
imul
bound
pop
pop
outs
xor
push
or
cmp
es
jp
mov
push
in
(bad)
fisubr
pop
add
add
xor
loope
aaa
xor
sub
add
pop
ror
cmp
out
mov
mov
lahf
jb
loop
daa
jns
pop
je
gs
dec
inc
loopne
sbb
fwait
sahf
enter
mov
out
fild
imul
aaa
mov
dec
pop
imul
ds
xchg
jo
les
sbb
aad
xchg
xor
adc
aas
imul
push
push
test
xchg
rol
scas
cmp
jbe
jp
fsub
out
mov
push
and
rol
fild
shl
inc
and
dec
daa
aaa
or
inc
(bad)
in
dec
xchg
inc
leave
push
sar
push
and
inc
or
sbb
push
and
outs
add
jl
out
push
data16
or
ret
data16
push
fucomp
jb
jo
test
mov
dec
rcr
(bad)
(bad)
mov
pop
addr16
mov
push
pop
jb
popf
(bad)
data16
pop
fld
cmp
loop
xchg
movs
fs
mov
jno
xchg
call
imul
pop
push
dec
push
retf
push
dec
mov
sub
das
and
lahf
in
inc
mov
cmps
dec
sub
out
test
aad
jp
icebp
sub
popa
and
sbb
mov
ja
mov
jl
push
jns
int
xchg
in
and
icebp
sub
(bad)
int3
dec
mov
shr
pusha
push
cld
jns
test
cs
ret
mov
imul
retf
test
xchg
push
nop
or
ins
mov
cdq
and
movs
ja
mov
(bad)
jl
sub
cmc
aad
xlat
iret
dec
hlt
sbb
pop
push
jmp
add
xor
in
jmp
sbb
retf
retf
mov
and
sub
dec
dec
jmp
adc
out
and
sub
movs
xchg
es
jg
lahf
(bad)
xchg
fstp
shl
fild
sbb
je
aam
call
jae
and
lock
mov
jg
mov
and
xlat
inc
jle
sub
or
xor
repz
fstp
mov
int3
xchg
fistp
test
movs
ja
pop
loop
fmul
push
sub
test
xor
xchg
or
sbb
xchg
xor
jge
addr16
jle
and
pop
arpl
jl
inc
div
adc
or
xor
xchg
enter
dec
sbb
inc
push
sub
mov
xchg
repz
jb
mov
scas
out
hlt
out
imul
stc
std
in
push
arpl
out
xor
ror
repnz
fldl2e
not
enter
cmp
mov
push
or
xchg
cmp
and
or
test
jmp
movs
jb
es
in
sbb
imul
mov
mov
fs
ja
rol
adc
es
jns
xor
test
movs
retf
daa
push
aam
test
jo
xchg
mov
mov
aad
movs
ins
push
mov
push
or
scas
xchg
pop
pop
test
movs
int3
sub
es
out
fisttp
outs
push
mov
cld
cmp
xor
ss
jnp
loop
or
mov
push
js
mov
cli
xchg
imul
mov
push
sti
inc
cmps
inc
sbb
sub
mov
lds
pop
lods
pusha
mov
push
adc
sub
or
stos
out
loop
das
int3
or
dec
(bad)
outs
mov
jno
scas
(bad)
jns
or
stc
or
mov
scas
mov
mov
or
addr16
cmp
sbb
nop
xor
std
or
xchg
and
xchg
scas
xlat
icebp
sbb
popf
popa
inc
mov
ret
fsub
or
(bad)
sbb
push
out
ja
inc
xchg
mov
pop
shl
adc
sbb
sub
(bad)
cld
or
cmp
dec
pop
xchg
sahf
arpl
cmc
nop
out
cmp
ror
push
adc
pushf
mov
jo
out
or
sbb
shl
out
fidivr
and
fprem1
lods
mov
add
rcr
pop
jmp
adc
mov
sub
in
pop
test
mov
push
xor
jnp
in
loop
jb
scas
(bad)
lds
ret
or
pushf
xchg
cld
(bad)
outs
and
out
sub
xor
sti
cmps
jmp
or
add
cld
and
sahf
ds
retf
sahf
test
aam
(bad)
fsubr
add
push
sub
inc
jno
mov
arpl
loop
arpl
jecxz
aaa
mov
dec
sbb
lea
jl
ds
xchg
jmp
push
ja
xor
call
(bad)
sbb
add
pop
mov
outs
movs
(bad)
adc
js
push
test
mov
push
push
out
(bad)
push
loop
enter
push
push
jno
ret
aam
jg
mov
pop
cli
adc
loope
iret
add
dec
mov
popa
and
retf
cmc
les
and
(bad)
ret
callw
addr16
mov
imul
or
dec
imul
movs
jg
frstor
leave
fist
pop
fisub
movs
retf
add
sub
xchg
test
adc
adc
icebp
dec
das
mov
lods
sar
mov
sub
add
call
sbb
pop
mov
mov
pop
aam
call
inc
xchg
pushf
dec
lahf
rcr
cmc
jne
push
jmp
je
adc
adc
xchg
adc
jmp
pusha
pusha
test
das
mov
mov
xor
ins
add
push
dec
pop
cwde
xlat
out
mov
call
das
and
pop
ins
jae
dec
shl
pop
add
ss
jl
push
or
std
(bad)
std
inc
jnp
das
inc
dec
or
les
cbw
enter
loop
stc
pop
(bad)
sahf
xor
xor
lahf
pop
retf
adc
sahf
retf
ret
lds
xchg
ins
add
pop
push
and
pusha
xor
fnstenv
aad
repz
sub
pop
ja
arpl
jmp
and
data16
mov
call
leave
mov
sub
dec
lds
mov
fadd
cmp
cwd
out
push
loop
int3
and
mov
movs
cmp
mov
dec
mov
and
ret
das
lea
mov
cmp
ret
add
and
mov
inc
sbb
xlat
frstor
xor
xor
push
and
jge
pop
xchg
ins
pop
inc
sbb
xor
inc
adc
mov
mov
out
jg
or
daa
jne
imul
pop
jb
or
outs
aaa
cld
clc
hlt
adc
cli
xchg
sahf
xor
inc
jno
ins
xor
pop
jp
sbb
into
jmp
loop
dec
pop
dec
xchg
aas
mov
leave
inc
inc
in
dec
jecxz
mov
shr
or
sub
add
mov
fisttp
scas
pop
cmp
sbb
aas
xchg
add
shr
jne
ror
fst
nop
out
push
xchg
mov
pop
(bad)
out
inc
mov
inc
adc
(bad)
lods
test
jns
ret
retf
sahf
xchg
mov
sub
cmp
xor
pop
adc
bound
mov
fdiv
jnp
in
sbb
push
xchg
push
(bad)
(bad)
enter
mov
xor
jmp
popw
jle
jp
iret
dec
cwde
out
cmp
cmps
inc
test
inc
cmp
fnsave
mov
in
adc
pop
mov
dec
push
out
cmp
movs
mov
jno
loop
pop
mov
and
daa
mov
sahf
sub
(bad)
fldenv
and
jmp
add
push
add
test
xchg
lods
movs
retf
add
and
addr16
mov
in
or
push
test
call
adc
xchg
add
call
sub
daa
aaa
repnz
and
adc
aaa
xlat
mov
and
push
cdq
outs
jle
cs
mov
push
mov
neg
sub
and
push
inc
xchg
fiadd
aas
push
sbb
(bad)
pop
pop
fucomi
enter
jl
adc
mov
enter
leave
stc
pop
add
rcl
xor
mov
ret
mov
(bad)
retf
in
nop
adc
(bad)
add
movs
sub
retf
cli
inc
sti
scas
fs
or
xchg
jnp
mov
adc
push
sbb
sbb
fisubr
dec
or
add
repz
js
or
rcl
enter
rcl
cdq
xchg
std
xchg
mov
cmp
imul
shl
inc
sbb
repz
les
clc
mov
test
xchg
retf
ror
sbb
sar
or
stos
scas
in
dec
fbstp
outs
inc
add
or
add
xor
mov
and
sbb
adc
mov
inc
repnz
popf
cmp
out
sub
push
call
jge
fsub
ret
in
mov
ins
les
sar
sub
or
push
retf
adc
daa
sub
pop
outs
push
sub
retf
cmp
dec
jb
jnp
pop
mov
adc
inc
out
dec
enter
ins
inc
movs
pop
mov
dec
cli
sub
sbb
aam
cmp
mov
mov
cwde
retf
add
dec
ret
pop
add
lahf
inc
pop
inc
cs
popa
push
xor
xlat
(bad)
loope
sahf
call
pop
rcl
or
pop
sbb
mov
adc
mov
(bad)
jecxz
mov
and
in
fisttp
nop
jge
mov
sub
stos
mov
inc
sub
rcr
adc
pop
cli
or
dec
sbb
outs
push
add
or
jle
daa
loop
int
ds
adc
test
pop
mov
outs
fmul
inc
xchg
pop
cmp
retf
loope
(bad)
adc
pop
jns
jl
jbe
push
arpl
mov
pusha
and
xchg
dec
xchg
jo
xor
pop
push
add
pop
cmp
mov
push
inc
add
or
pop
idiv
mov
push
mov
pop
aad
pop
movs
fwait
ins
mov
loopne
pushf
jne
pop
xor
in
and
rol
fcmove
mov
jecxz
dec
fimul
(bad)
js
mov
fucomp
shl
sub
mov
bound
enter
mov
jae
push
cmp
cmp
pop
(bad)
xor
out
xchg
inc
test
clc
and
sub
sub
jo
or
fnstcw
sbb
xchg
outs
inc
dec
cmp
adc
dec
add
rol
enter
into
adc
nop
ds
pop
dec
loope
pop
int3
sub
cmp
mov
xlat
mov
stos
push
in
inc
mov
retf
cmps
(bad)
dec
in
xor
and
or
stos
xor
in
push
pop
xchg
pop
ficomp
mov
(bad)
dec
hlt
sub
cld
rol
jbe
mov
jmp
add
and
and
nop
mov
dec
xchg
inc
add
inc
mov
shl
repz
mov
push
mov
pop
xor
inc
jmp
lea
jmp
into
rol
push
xchg
pop
mov
mov
outs
loop
pop
xchg
imul
xchg
inc
data16
xchg
ss
clc
pop
es
fisubr
(bad)
mul
loope
jae
xchg
cli
adc
jno
imul
sub
mov
xor
cmp
fmul
jno
mov
repnz
jb
(bad)
cmps
xor
sub
inc
or
mov
xor
repz
repnz
jae
ror
lock
dec
sti
jp
lds
test
add
add
inc
inc
leave
dec
inc
fs
test
jmp
adc
sar
dec
xchg
xor
das
fwait
clc
outs
jecxz
ror
dec
mov
popf
dec
sub
out
and
xor
cdq
(bad)
mov
jne
retf
jg
retf
stos
xor
and
sub
inc
dec
std
mov
aaa
inc
repnz
dec
push
aam
xor
xor
xchg
xchg
cmp
sti
ss
in
xchg
sub
out
aad
mov
clc
cmp
mov
push
mov
mov
jbe
dec
mov
dec
ja
or
cmc
mov
push
lods
fwait
imul
je
imul
and
stos
ret
add
mov
add
xchg
not
push
(bad)
call
int
push
fcmovb
lock
stos
(bad)
test
dec
ds
in
imul
aaa
lea
repz
je
push
stos
jl
dec
repnz
std
fbstp
popa
and
fdivr
mov
out
mov
mov
dec
pop
sub
xor
push
sub
pushf
das
movs
xchg
cmp
and
jp
js
xor
sti
test
dec
sub
and
jne
xor
jmp
in
movs
sub
mov
clc
pop
pop
ror
mov
cmp
fadd
sub
shl
repnz
pop
mov
int3
daa
jbe
inc
(bad)
xchg
sar
push
dec
mov
xchg
sub
mov
aam
or
inc
sti
pop
arpl
jne
fimul
mov
mov
std
lods
(bad)
arpl
or
xor
js
in
add
sbb
mov
jbe
or
pop
lds
add
jl
jle
jno
xor
mov
repz
cmc
mov
mov
mov
xchg
push
jmp
clc
ins
inc
xor
mov
or
pop
pop
aas
daa
jo
rol
dec
and
or
push
sbb
ror
ret
dec
nop
movs
ret
mov
mov
mov
xor
xor
xchg
or
mov
scas
sti
cmps
dec
push
loopne
sbb
test
addr16
push
sar
popa
pop
mov
out
lods
mov
gs
sub
mov
push
inc
push
and
jo
div
cmc
and
ror
lds
aaa
push
sti
mov
and
xchg
cmps
xor
repnz
xchg
in
cmps
call
cmp
pop
fldcw
xchg
mov
aaa
arpl
jo
hlt
(bad)
pop
mov
cmc
add
adc
lea
out
xor
or
pop
stc
ins
js
xchg
cli
jge
gs
test
jns
xor
lods
push
inc
retf
nop
test
enter
imul
mov
int
dec
cli
lods
push
dec
jge
xor
call
jno
xchg
xchg
aad
call
and
dec
scas
jp
icebp
cmps
push
les
xlat
rol
push
shl
test
push
pop
in
fs
aam
and
xor
xchg
(bad)
jno
inc
hlt
inc
(bad)
mov
dec
mov
arpl
ret
mov
and
mov
scas
mov
cli
fmul
jle
or
sbb
sbb
neg
mov
mov
xor
je
sbb
inc
ret
movs
push
sub
or
dec
ja
adc
shr
dec
push
jge
loopne
adc
mov
outs
xchg
push
enter
push
push
(bad)
fucomp
and
retf
or
shr
xchg
mov
addr16
adc
cmps
or
sbb
and
sbb
xchg
push
test
sbb
ret
call
ret
pop
movs
dec
sub
inc
or
inc
mov
scas
jmp
dec
test
cmps
hlt
lahf
inc
dec
push
outs
adc
sahf
pop
aad
ins
inc
jmp
mov
and
repnz
es
sbb
imul
leave
jbe
dec
inc
dec
std
outs
pop
rcr
icebp
outs
movs
arpl
push
push
jb
jl
mov
iret
imul
ret
pop
sbb
or
cdq
or
rol
cmps
shl
repnz
cwde
adc
daa
pop
or
mov
fxch
js
xchg
scas
adc
inc
cmc
adc
sbb
pop
int
pop
lea
(bad)
iret
cmp
pop
enter
pusha
mov
icebp
or
rcl
inc
iret
cwde
inc
call
mov
xor
xor
jnp
and
jg
repz
adc
jnp
cmp
mov
(bad)
xor
sub
repnz
lods
popa
mov
mov
and
fisub
pop
enter
ret
mov
cli
ret
jns
call
mul
pusha
shl
fist
iret
xor
add
call
sub
push
test
cdq
aas
ret
loopne
xchg
mov
push
xor
pop
clc
or
aaa
jo
and
pop
mov
mov
sar
jecxz
retf
sbb
pop
or
sub
out
mov
and
out
jmp
sbb
or
xchg
(bad)
ins
fwait
push
jns
mov
mov
(bad)
sbb
cmp
fstp
add
arpl
scas
ret
adc
or
cld
xchg
mov
or
push
ret
xchg
icebp
fmulp
je
mov
lods
mov
jne
out
out
loope
sbb
lods
(bad)
fisttp
call
push
jl
adc
push
mov
in
data16
cdq
test
loope
outs
aad
cmps
jle
add
mov
test
mov
repz
movs
fisttp
sahf
jae
movs
mov
into
in
addr16
or
mov
lods
adc
push
out
xor
pop
xor
inc
dec
(bad)
pop
imul
cmps
and
test
lods
mov
sub
cmp
jmp
ds
jle
addr16
fsubr
fs
cmp
jbe
gs
fidivr
aad
push
loop
push
push
or
push
fild
sbb
xchg
add
(bad)
adc
pop
ins
pop
repz
rcr
mov
or
xchg
sar
jp
adc
mov
push
mov
sbb
adc
sbb
inc
sbb
nop
mov
dec
inc
out
sub
jo
popf
idiv
pop
inc
xor
movs
mov
mov
enter
push
mov
jp
popf
jmp
in
sar
cdq
mov
sub
sar
sbb
aam
gs
xor
jno
shr
es
add
push
imul
mov
inc
les
sub
xchg
xchg
ja
jmp
mov
scas
push
jg
xchg
fsubr
(bad)
mov
mul
popa
outs
sbb
mov
lahf
addr16
push
je
out
pop
retf
add
int3
xor
sub
cmps
xor
movs
dec
xchg
xchg
cmp
jb
scas
retf
mov
sub
cdq
pop
dec
outs
sub
xchg
pop
and
add
pop
or
std
popf
cmp
scas
push
ret
(bad)
in
stc
xor
div
lea
mov
pop
mov
call
xor
jae
movs
mov
mov
fnsave
outs
adc
jecxz
xor
repnz
lds
xlat
mov
dec
sub
lock
jecxz
ret
pop
jo
jecxz
out
rcr
stos
adc
test
pop
inc
xor
(bad)
fisttp
dec
shr
movs
stos
adc
inc
pop
pop
adc
shl
mov
rcr
and
push
inc
clc
pop
popa
jle
add
fcmovb
and
aas
cmp
sti
mov
add
xlat
sbb
mov
jne
jmp
cmp
pusha
mov
xor
xchg
sbb
ins
lds
push
mov
pop
or
or
mov
into
jg
pushf
retf
push
ficom
add
cmp
add
dec
lods
cmp
dec
push
leave
pushf
jne
ret
inc
sbb
jno
dec
test
test
or
les
jge
and
js
outs
cmp
pop
cmps
addr16
jno
jl
(bad)
shl
or
pop
sub
adc
cmp
test
call
dec
and
sub
pop
test
and
inc
mov
cmc
daa
xchg
sub
out
mov
and
outs
xchg
in
fstp
xor
pusha
dec
out
addr16
sbb
add
sbb
pushf
nop
(bad)
xchg
repnz
add
(bad)
out
out
adc
xlat
sbb
and
dec
frstor
mov
shl
xchg
sahf
or
test
push
mov
ins
(bad)
xchg
test
xor
arpl
fidiv
inc
mov
adc
sub
iret
mov
loop
test
push
fstp
aas
movs
ja
(bad)
jne
(bad)
pop
loopne
cli
push
and
pop
push
sbb
pushf
das
dec
in
add
cmp
(bad)
aaa
xchg
add
add
pop
add
push
or
out
std
outs
outs
dec
ss
ins
mov
ins
scas
imul
es
jge
ins
xlat
lods
mov
arpl
pop
sub
and
int
mov
mov
mov
mov
adc
cmp
mov
outs
fldenv
in
mov
sbb
sub
dec
div
jge
test
les
aam
out
pop
imul
jae
xor
sti
xor
fnstsw
xlat
enter
js
(bad)
mov
lods
jmp
sbb
pop
lods
add
shl
scas
adc
mov
jle
mov
mov
(bad)
jmp
push
(bad)
adc
dec
int3
sub
les
pop
sbb
(bad)
repz
ja
jmp
sbb
mov
fidiv
inc
int3
mov
enter
shl
lods
and
cld
push
leave
fnstenv
aaa
lahf
adc
out
mov
mov
out
and
mov
lods
or
adc
(bad)
loope
push
or
call
stos
test
xor
mov
cmc
add
inc
cmp
inc
(bad)
push
sbb
inc
cmps
dec
xchg
sahf
ins
gs
inc
cmp
loope
pop
call
fwait
or
mov
adc
mov
dec
sub
adc
mov
jne
push
stos
out
pusha
clc
stos
outs
inc
mov
xchg
call
inc
push
icebp
xchg
push
ins
adc
adc
int3
push
je
push
add
mov
pop
mov
stos
mov
mov
rcr
mov
or
(bad)
xor
leave
and
test
outs
pop
mov
sub
xchg
inc
cmp
ss
sar
out
xchg
cmc
lea
aam
pop
in
popa
test
mov
mov
fistp
sub
les
cmp
mov
aas
add
jbe
dec
pop
adc
shr
mov
ror
jae
shr
stos
push
xchg
mov
adc
fist
mov
sar
out
adc
ficomp
xor
js
stc
lods
loopne
cli
cvtdq2ps
clc
in
and
push
jle
jmp
mov
mov
test
ss
outs
ds
push
leave
stos
hlt
inc
fstp
lea
lods
dec
jbe
jg
adc
cmp
cmps
ja
cwde
out
test
ds
bound
push
retf
mov
js
xchg
adc
pusha
xlat
ficomp
aad
push
out
je
loope
test
adc
lds
sbb
push
lods
jp
stos
cmp
out
xchg
add
sbb
je
or
adc
addr16
aaa
jle
(bad)
cs
mov
inc
dec
jmp
hlt
mov
sub
test
das
rcl
loopne
xchg
cmp
cmp
popf
int
mov
jno
mov
mov
movs
add
sub
ins
pop
xchg
xor
dec
pop
imul
int
(bad)
test
ja
mov
and
dec
or
popf
inc
test
xchg
push
mov
(bad)
inc
sub
fidiv
jae
inc
in
cmps
jmp
and
push
dec
jl
inc
dec
outs
inc
xchg
nop
out
ins
repnz
out
imul
in
aad
fdiv
cs
adc
stos
or
popf
inc
idiv
cs
mov
jne
pop
mov
jp
js
mov
aad
dec
mov
jnp
sbb
mov
loopne
aaa
sub
outs
inc
xchg
inc
shl
div
mov
lock
inc
aad
sti
pop
mov
std
sbb
test
and
lahf
cli
aad
xlat
or
fdivr
push
ret
inc
push
fdiv
(bad)
and
mov
fild
sbb
mov
jae
adc
pop
ret
clc
fdiv
mov
add
cmps
push
xchg
pop
loope
jle
jno
mov
int3
xchg
pop
rol
mov
mov
pop
clc
jge
call
push
das
xor
clc
cdq
into
sbb
cmp
sbb
adc
jge
shl
cmp
or
ins
xchg
loopne
and
add
fisubr
add
cmp
(bad)
push
js
jp
sbb
or
cmp
mov
pop
mov
push
xor
or
sbb
sbb
push
dec
pop
fadd
cmp
aam
test
adc
cmp
push
ffreep
sub
mov
cmp
mov
sub
adc
cli
sub
stos
adc
cmp
aad
stos
pop
dec
data16
jno
mov
repnz
jbe
arpl
ret
adc
jnp
scas
mov
add
jl
(bad)
pop
dec
jle
rol
xor
fstp
mov
mov
(bad)
test
and
and
or
in
cmp
cs
repnz
xlat
test
movs
jmp
xchg
sub
mov
adc
ficom
and
pop
mov
out
dec
or
inc
in
ffreep
adc
jb
retf
mov
pop
push
es
movs
sar
in
out
test
jmp
es
ss
xor
cli
and
data16
(bad)
adc
in
(bad)
mov
sub
or
xor
aad
rcl
mul
push
in
ds
dec
xchg
sbb
pop
outs
call
inc
sub
ins
(bad)
dec
(bad)
or
dec
adc
loope
inc
repnz
mov
repnz
adc
hlt
mov
sub
mov
fwait
repz
jl
js
cmps
or
(bad)
int3
mov
or
cmp
pop
loopne
aaa
xor
out
ins
ds
mov
mov
add
repnz
test
inc
ficom
mov
out
cwde
mov
sbb
jb
and
jecxz
retf
mov
push
popa
and
das
adc
fsub
cmc
push
jmp
add
mov
inc
cmc
pop
ss
imul
adc
mov
in
or
or
inc
pop
ret
ret
sar
cmp
stc
(bad)
add
(bad)
gs
mov
pop
pushf
adc
(bad)
xchg
mov
jg
push
pusha
xchg
ja
jae
aas
lahf
adc
sub
popf
sahf
sbb
sub
or
(bad)
xor
and
lea
test
xor
mov
pop
in
mov
(bad)
sub
mov
stos
loopne
nop
shl
lods
mov
inc
mov
(bad)
ror
xor
outs
hlt
or
loopne
aaa
mov
inc
and
add
mov
(bad)
dec
mov
repnz
and
inc
jg
xor
ins
aaa
ficom
imul
aaa
pop
outs
cld
stc
ret
mov
or
retf
mov
lods
fwait
das
mov
and
sub
jp
scas
xchg
imul
jl
sar
cmp
in
mov
pop
sbb
jg
xor
(bad)
je
pop
pop
mov
dec
mov
inc
mov
sub
fst
xchg
adc
arpl
stc
sub
jecxz
iret
mov
jge
push
lods
mov
cld
pop
cs
or
(bad)
push
fldcw
retf
es
inc
out
mov
leave
add
jb
mov
aas
jo
pop
inc
mov
sub
xlat
jns
add
and
xchg
ret
adc
push
div
cmp
and
push
stos
in
sti
lock
std
scas
ins
dec
mov
loope
jbe
js
mov
(bad)
push
adc
(bad)
ret
push
dec
mov
sbb
and
clc
(bad)
xlat
sub
int3
sbb
pusha
cdq
xor
sbb
or
cmp
dec
mov
mov
add
fldcw
rcl
or
inc
push
push
xchg
inc
jecxz
push
jge
jns
sub
xchg
push
aaa
jb
mov
xlat
neg
ja
rol
cmp
ss
and
out
xchg
mov
add
loope
hlt
push
(bad)
mov
fbstp
mov
jl
push
lahf
sbb
sbb
sub
cmp
sar
scas
int
loope
sahf
movs
imul
mov
hlt
mov
rcl
sbb
cmp
cmp
jle
daa
push
cmp
pop
jecxz
nop
mov
lds
into
pusha
cs
xchg
aas
ficom
dec
and
ret
cs
movs
push
fldenv
xchg
movs
mov
sbb
gs
jp
xchg
sar
pop
js
xlat
add
jmp
pop
cld
xchg
or
jne
test
gs
in
sub
jno
sbb
mov
xchg
xchg
cwde
in
and
inc
mov
(bad)
ja
int
push
retf
xchg
stos
xor
mov
cmp
push
push
push
cmp
mov
push
test
cs
cmp
retf
add
mov
cmp
sbb
std
or
idiv
sub
ja
add
push
fmul
mov
cmp
sti
xchg
movs
mov
add
imul
(bad)
loop
je
sti
das
cmps
dec
in
sar
sbb
jp
mov
mov
sar
adc
ds
daa
pop
add
sbb
jecxz
inc
adc
das
arpl
test
imul
fld
cmps
repz
or
cs
jmp
iret
xor
sub
aam
mov
ins
ins
mov
dec
lahf
inc
inc
in
and
retfw
and
mov
jecxz
push
push
sub
add
mov
sbb
cmp
sub
inc
adc
sar
sub
outs
fbld
int
jns
outs
sahf
js
push
inc
jle
sahf
xchg
outs
pop
ss
pop
into
pop
imul
stos
dec
shr
pop
js
inc
mov
mov
scas
inc
mov
(bad)
out
rcl
xchg
movs
push
and
cwde
push
xor
jno
rcr
add
ja
(bad)
cdq
cs
sub
mov
ret
xor
dec
inc
dec
not
sti
or
pop
mov
dec
adc
rcr
inc
sub
push
mov
in
movs
ja
jne
xor
push
or
(bad)
jle
mov
(bad)
pop
xor
jmp
imul
add
xlat
rol
repz
sahf
jne
dec
cdq
pop
sub
repnz
bnd
cmp
push
pop
test
mov
and
or
out
loope
or
dec
dec
outs
outs
ret
push
dec
push
lea
xlat
in
wrmsr
cs
dec
mov
das
mov
scas
sti
mov
sbb
mov
jg
sahf
inc
push
add
mov
or
outs
(bad)
sub
cmp
dec
movs
xchg
mov
das
(bad)
mov
xchg
icebp
xor
cmps
jo
push
sub
xchg
push
and
lods
rol
add
mov
push
pop
and
call
sub
sbb
or
mov
loop
lock
jnp
hlt
jne
rdpmc
sub
popa
xor
cmp
hlt
rol
cwde
pop
retf
xbegin
mov
add
mov
jg
xor
inc
(bad)
shr
xor
mov
mov
fadd
mov
loop
jmp
or
dec
out
sbb
and
test
cmp
push
mov
sbb
clc
jl
jmp
shr
pop
xor
test
adc
jecxz
sbb
nop
mov
iret
inc
sbb
add
pop
mov
pop
push
cmp
sbb
mov
rcr
lds
mov
loope
adc
push
pop
push
imul
add
lea
sub
fst
jmp
fmul
call
(bad)
repnz
sub
aaa
mov
mov
(bad)
xor
int
xchg
push
push
or
add
nop
test
mov
stc
and
stos
retf
jecxz
xor
pop
sbb
inc
cmps
inc
lahf
xchg
lock
daa
jmp
and
and
adc
rcr
lods
push
mov
jecxz
or
cmp
das
push
repnz
mov
sbb
(bad)
fmul
aam
into
cmp
(bad)
out
mov
pop
pop
aad
sbb
xor
inc
sub
sub
test
xchg
mov
jnp
outs
repnz
or
adc
and
fwait
jno
adc
sub
popf
ret
push
jns
and
jno
test
push
jno
inc
mov
dec
or
mov
dec
fscale
aad
cmp
rol
bnd
frndint
xor
nop
in
cmp
push
add
cmp
dec
movs
in
fs
or
out
ins
add
mov
xchg
or
or
cmp
fidiv
inc
dec
jae
jecxz
cld
cmps
inc
test
or
mov
les
dec
push
addr16
jb
sub
sbb
nop
imul
lds
and
imul
xchg
xor
xor
mov
and
cld
jae
and
xchg
sbb
rcl
or
mov
sbb
rcr
mov
mov
xchg
inc
pop
xor
mov
std
inc
push
je
add
daa
ins
fiadd
dec
ds
(bad)
cld
jns
jo
loop
leave
cld
sub
pop
cmp
push
call
mov
sub
shr
aad
push
cdq
xor
dec
and
xor
sub
icebp
dec
clc
and
xor
xchg
or
mov
and
push
add
retf
test
ficom
pop
cs
pop
scas
int
lods
mov
(bad)
sbb
test
iret
ins
add
push
mov
fwait
mov
outs
jge
adc
xchg
stos
jl
push
pop
xchg
fmul
pop
mov
(bad)
dec
adc
int
lods
arpl
xchg
rol
outs
inc
sbb
rol
mov
mov
cmp
sbb
mov
into
push
clc
cmps
jae
cmp
mov
stc
jmp
add
add
aad
(bad)
rcr
dec
movs
or
(bad)
stc
rcl
cmp
fs
adc
sahf
in
mov
aaa
aas
mov
test
sub
jmp
(bad)
mov
push
(bad)
fadd
add
xchg
lea
xchg
mov
pop
(bad)
cmp
scas
or
push
add
test
adc
scas
pop
pop
test
mov
and
out
fisub
xchg
jge
add
not
repz
outs
ret
addps
out
mov
pop
xchg
xchg
mov
out
test
inc
pop
das
clc
les
jmp
cmp
jg
ins
mov
fwait
scas
cmps
xor
out
inc
aas
icebp
xchg
aaa
pop
rcr
(bad)
inc
fsubr
std
jmp
dec
adc
jp
jne
imul
jge
xchg
jmp
jle
leave
mov
shr
pop
cwde
gs
push
mov
arpl
dec
outs
fimul
jge
xor
xchg
dec
and
dec
sub
mov
mov
mov
cmp
hlt
lods
or
and
loop
(bad)
cmp
jmp
mov
aad
icebp
ret
(bad)
cld
or
inc
mov
xchg
mov
inc
in
popf
gs
loop
ret
enter
popf
ds
sar
xor
jmp
fwait
pop
jecxz
pop
adc
mov
jne
test
call
mov
mov
pop
pop
mov
add
out
repz
jnp
leave
pop
and
xchg
in
fsub
sbb
or
mov
adc
pusha
stc
xchg
gs
inc
popf
popf
cmp
jecxz
mov
sbb
aas
enter
sbb
adc
cmp
enter
jbe
pop
cvtps2pd
jnp
aaa
in
xor
rcl
push
push
test
fwait
sub
pusha
xlat
jno
push
lock
loope
cdq
mov
sbb
arpl
or
xchg
std
cmp
mov
cs
mov
outs
test
sub
adc
jmp
pop
es
in
je
adc
pushf
sbb
data16
popf
adc
mov
mov
js
test
hlt
adc
cmps
add
jnp
cmps
fwait
mov
xchg
sub
mov
mov
jmp
push
shl
stos
adc
mul
shr
pop
cmp
mov
popa
jmp
cmc
push
loopne
pop
test
sbb
enter
inc
mov
hlt
add
cwde
pusha
add
sub
dec
sbb
blcmsk
mov
cli
xchg
mov
or
xchg
lods
and
out
ror
gs
push
rol
outs
cmc
(bad)
movs
fisubr
(bad)
fadd
lahf
iret
and
(bad)
xor
out
jg
mov
shl
sbb
mov
sub
(bad)
ret
or
inc
dec
xchg
out
popa
cmp
clc
inc
xlat
and
aad
pmulhuw
fadd
in
jb
in
pushf
add
jmp
xchg
ss
sub
xor
mov
and
sub
rcr
in
das
push
sbb
test
fldln2
pop
xor
scas
add
mov
cmps
(bad)
fcomp
pushf
xor
xor
push
dec
push
adc
jns
icebp
mov
stos
aas
mov
xor
sub
adc
pop
test
sbb
mov
outs
adc
cmps
fld
cmp
dec
pop
dec
clc
loope
sub
mov
cwde
outs
clc
xor
jae
dec
xor
jl
(bad)
test
push
add
add
aad
and
pop
ret
movs
xchg
mov
fsub
je
xchg
fsub
mov
xor
test
mov
mov
and
mov
sbb
(bad)
mov
mov
cmps
xchg
das
scas
cmp
jb
cmps
pop
mov
mov
xchg
pop
scas
push
sub
mov
in
inc
popa
fadd
pop
sub
movs
cmp
pop
test
std
ins
mov
sbb
das
(bad)
sti
xchg
xchg
es
push
in
daa
jno
jle
je
icebp
outs
jno
out
push
adc
into
add
ret
(bad)
es
mov
movs
mov
fdiv
int3
pop
es
das
scas
or
push
rcr
stos
add
aad
jno
lock
aas
fwait
iretw
cmp
scas
hlt
in
push
push
movs
mov
mov
enter
jo
mov
leave
pop
cmp
push
ret
inc
xor
cmc
loop
retw
int
fisttp
es
aaa
lods
addr16
in
lea
xchg
jp
nop
popa
or
pop
cdq
je
inc
mov
jno
pushf
shl
ds
mov
iret
out
fmul
mov
mov
mov
jns
lds
fst
cmc
pop
inc
(bad)
bnd
mov
sbb
mov
add
sub
inc
in
and
movs
(bad)
loop
cmc
sbb
(bad)
popf
mov
jmp
inc
jne
adc
sub
int3
jns
jecxz
shr
mov
add
(bad)
(bad)
fdivr
mov
sub
cmp
cmp
pop
xlat
fwait
jae
stos
sub
add
test
jle
imul
sbb
sub
pop
hlt
scas
loope
in
lock
inc
add
call
jnp
aas
jne
(bad)
js
sbb
fistp
popf
inc
stos
out
xor
jo
xchg
mov
push
(bad)
adc
xchg
xor
push
inc
jl
cdq
mov
push
into
retf
inc
jg
and
sbb
retf
frstor
fadd
add
sub
xor
pop
sub
pop
outs
and
mov
pop
xchg
pop
and
pushf
mov
dec
test
mov
out
push
aam
leave
sub
hlt
jbe
(bad)
mov
push
shl
ins
add
push
mov
stos
sbb
lods
out
lods
mov
fbstp
dec
cmp
stos
mov
push
mov
add
dec
mov
add
lods
fstp
fwait
push
pop
out
inc
cs
pop
add
imul
push
mov
add
in
cmps
sub
fs
cwde
or
les
jmp
adc
xchg
dec
cdq
gs
and
pop
outs
jo
mov
dec
mov
lods
mov
out
movs
int
lds
aad
push
into
push
fist
addr16
dec
cwde
cmp
fsubr
add
addr16
loope
and
retf
neg
outs
jecxz
movs
punpckhwd
push
(bad)
or
pop
(bad)
mov
out
mov
and
or
ret
adc
add
bound
aaa
cs
js
int3
sbb
xlat
adc
xor
sbb
inc
paddq
mov
adc
fwait
in
lods
mov
hlt
nop
test
jb
cdq
pushf
jecxz
xor
pop
sub
mov
arpl
jl
pop
into
(bad)
fs
mov
adc
sbb
outs
scas
sar
pop
stc
sbb
or
sbb
sub
scas
pop
imul
jbe
out
fstp
sbb
mov
repz
adc
test
push
mov
mov
adc
xchg
push
ins
sbb
loope
std
test
retf
add
ficomp
test
xor
fs
xor
rcl
cmp
or
repnz
xor
int3
xor
movs
inc
mov
das
in
sahf
lods
repz
outs
rcr
sbb
stos
stos
inc
inc
hlt
mov
jmp
and
or
mov
lods
mov
add
retf
movs
pop
scas
(bad)
lahf
push
and
mov
pop
scas
jmpw
fcomi
fidiv
into
inc
jp
adc
push
xchg
cli
mov
sub
out
cdq
in
mov
mov
cli
dec
test
add
push
mov
pop
pusha
out
push
div
xchg
daa
jb
int
mov
dec
cmps
sbb
daa
jmp
loope
push
mov
test
shl
xor
dec
lods
push
aam
test
lods
push
aaa
push
int3
mov
pop
imul
mov
ins
push
lods
inc
int3
xchg
lea
arpl
mov
dec
mov
add
stos
adc
enter
mov
sub
mov
mov
popa
adc
aaa
mov
adc
mov
xor
(bad)
and
out
sahf
mov
lods
add
xlat
cdq
das
xor
pop
mov
and
rol
stos
jae
and
cs
fstp
leave
cmp
push
sti
lds
addr16
lock
mov
xchg
add
sbb
popa
lock
jge
movs
frstor
shr
add
rcl
loopne
test
add
jo
inc
xlat
mov
mov
js
jmp
push
mov
(bad)
aaa
inc
sub
and
or
dec
pusha
xchg
jne
mov
mov
movs
inc
or
push
outs
xchg
ins
add
arpl
repz
dec
sbb
jmp
cli
mov
mov
push
xchg
dec
inc
jb
mov
call
cmp
les
stos
jb
in
sub
lods
mov
xchg
and
fst
fidiv
or
fdivr
sub
mov
inc
sbb
pop
push
clc
cmp
jne
aam
js
inc
test
mov
rol
mov
push
dec
dec
fs
(bad)
clc
js
pop
mov
mov
jns
sub
jge
rol
in
add
pop
add
and
imul
(bad)
cmps
mov
rcr
js
sub
pushf
int
mov
lock
xchg
lods
test
mov
jno
mov
push
and
inc
or
scas
in
cs
or
and
xor
dec
sbb
sub
xor
push
outs
jne
je
mov
das
shr
add
xchg
and
addr16
mov
test
(bad)
push
adc
adc
pop
xchg
add
sub
jge
xchg
push
retf
xchg
push
call
mov
in
sbb
pop
test
or
iret
shr
inc
ror
mov
jecxz
dec
xchg
and
inc
lods
(bad)
out
mov
out
mov
xchg
fstp
repz
hlt
jg
gs
in
dec
mov
pop
adc
cmp
and
stos
fmul
dec
test
push
dec
imul
adc
adc
xor
gs
adc
mov
mov
js
xchg
(bad)
inc
jl
adc
scas
push
jg
sbb
pop
mov
push
add
push
outs
ds
ss
(bad)
in
mov
ds
cmp
das
data16
js
pop
cmp
clc
lahf
into
leave
loopne
mov
sub
outs
sub
mov
push
rcl
rcr
sub
adc
cmp
sub
and
dec
add
les
jmp
sbb
push
mov
outs
in
test
out
mov
jns
sbb
hlt
pop
out
inc
aas
pop
les
(bad)
jle
sbb
dec
enter
mov
mov
pop
jns
pusha
aas
les
push
shl
add
icebp
shl
add
mov
or
dec
xchg
and
(bad)
loopne
push
(bad)
bound
(bad)
in
pop
lods
sbb
test
stc
and
(bad)
dec
sub
icebp
push
and
inc
pop
xchg
cmps
iret
sub
nop
(bad)
inc
jg
and
jp
sbb
ja
mov
jmp
sbb
addr16
das
sub
xor
iret
iret
xor
sbb
inc
bound
outs
sbb
jle
xchg
packssdw
cdq
loop
push
cwde
enter
and
dec
adc
mov
sbb
push
adc
lock
shl
or
(bad)
jge
adc
in
fidiv
mov
sub
fisttp
pusha
pop
gs
push
jge
aaa
stc
inc
cmps
and
push
sti
cmp
fstp
sahf
mov
outs
sti
sub
addr16
leave
dec
cli
or
cmp
xchg
pop
dec
add
mov
mov
arpl
leave
cmps
inc
dec
xchg
push
cmps
dec
add
std
loopne
mov
sbb
bound
ja
fwait
sbb
in
inc
jge
int3
mov
mov
rcl
add
xchg
je
xchg
mov
cmc
call
sbb
jmp
psllw
push
std
or
mov
and
hlt
lock
mov
mov
inc
xchg
xor
call
in
movs
inc
sets
or
fst
lods
mov
mov
loopne
xchg
dec
jnp
push
popf
jecxz
cld
shl
leave
lds
cmp
cmp
xchg
mov
les
imul
sti
xchg
or
inc
mov
and
pop
shl
sar
xor
adc
loopne
scas
jb
and
jnp
pop
repnz
push
add
lods
add
sub
fnstsw
fcom
loop
mov
add
jge
fcompp
push
lahf
cmps
mov
test
stos
push
addr16
and
(bad)
jnp
push
nop
int3
push
in
and
jb
sbb
pop
push
not
pop
adc
mov
add
dec
gs
movs
jle
add
scas
pusha
movs
pop
mov
int3
sbb
scas
mov
pop
mov
jge
and
adc
je
or
xchg
sub
push
adc
out
lods
nop
lea
lds
xchg
adc
cmova
jbe
mov
jnp
out
lds
mov
in
sub
mov
mov
test
arpl
cmp
fsubrp
xchg
test
sub
lea
xchg
jmp
movs
stos
adc
mov
loop
call
adc
popa
addr16
mov
je
in
push
adc
dec
and
aam
and
xchg
rcr
or
or
arpl
jmp
inc
jb
in
jnp
(bad)
and
inc
das
cmps
pop
mov
or
dec
adc
repz
mov
clc
dec
movs
push
stos
aaa
and
sbb
or
imul
out
mov
(bad)
push
xchg
mov
mov
inc
test
leave
add
(bad)
cli
fst
loope
mov
bound
sub
sbb
repnz
mov
jnp
pop
(bad)
jle
int3
in
std
call
movs
shl
adc
inc
mov
jns
fisttp
jns
add
gs
jle
ja
sub
fbld
jge
(bad)
lds
adc
test
xor
out
div
out
cmps
dec
in
gs
out
adc
aas
test
add
and
xchg
pop
cmps
arpl
sbb
dec
(bad)
(bad)
pop
mov
jnp
jmp
in
xchg
mov
test
jecxz
adc
mov
inc
test
test
es
into
mov
and
js
sub
adc
add
cli
les
aad
sahf
mov
sbb
jmp
mov
outs
in
inc
pop
jns
inc
sub
sub
pop
pop
pushf
dec
popf
fiadd
xchg
neg
into
sub
mov
ret
adc
shl
sbb
(bad)
ds
mov
jne
es
jge
movs
fwait
je
(bad)
sub
sub
movs
cli
in
arpl
jbe
sbb
inc
jne
sub
js
sub
adc
add
mov
cmp
xor
sti
or
inc
test
jmp
jp
out
xor
sub
xchg
jmp
popa
lods
mov
xchg
shl
sar
and
ror
xlat
in
xor
or
mov
mov
sub
repnz
call
adc
jp
cmp
add
mov
pop
mov
mov
test
icebp
icebp
jne
rcl
sub
cmp
ins
ja
popa
add
xor
fadd
stos
call
mov
xchg
test
mov
dec
lods
dec
cli
pop
enter
or
(bad)
add
test
xor
jne
pop
dec
outs
add
mov
sub
or
push
std
adc
nop
es
sub
xor
pusha
(bad)
out
inc
cld
push
mov
jmp
adc
cmp
data16
xor
xor
jge
mov
movs
adc
and
mov
(bad)
ret
inc
mov
xor
push
and
cmps
test
lea
out
xor
mov
fcomp
iret
(bad)
mov
lds
inc
inc
inc
adc
jmp
dec
int3
shl
in
loop
out
nop
pop
cmp
ror
cdq
jg
pop
enter
jmp
mov
jnp
je
data16
inc
sub
into
loop
daa
inc
mov
xchg
into
add
in
fldenv
(bad)
or
xor
hlt
adc
inc
clc
add
add
loopne
dec
mov
xchg
inc
and
dec
cmps
test
sbb
test
scas
cld
out
out
inc
adc
std
ja
pushf
mov
jne
out
rcr
adc
pusha
jnp
mov
pop
aad
out
(bad)
out
cmp
xor
cli
cmp
push
stc
push
add
cld
cmps
pop
jmp
call
cs
adc
push
ret
push
xchg
push
push
inc
mov
pop
(bad)
pop
push
call
mov
outs
push
and
scas
and
mov
in
fisttp
fsincos
ja
dec
mov
call
or
ins
mov
pushf
in
sub
shl
pusha
jl
dec
scas
mov
(bad)
mov
scas
addr16
(bad)
sbb
(bad)
fld
push
pop
outs
gs
sub
(bad)
adc
or
mov
sbb
outs
mov
jbe
xor
xor
mov
test
pop
(bad)
jecxz
aas
or
mov
adc
fcmovnbe
sub
loop
push
cmps
(bad)
sbb
or
pop
inc
(bad)
jo
movs
popf
lahf
loop
rcl
clc
mov
mov
clc
ins
inc
fld
mov
jnp
mov
adc
loope
push
stos
out
jb
into
loop
inc
mov
cld
dec
neg
in
gs
mov
test
ins
lea
xor
cli
ss
and
xchg
dec
int
lods
mov
outs
jge
mov
sbb
adc
mov
mov
cmp
lds
lods
xchg
int
push
cmp
gs
or
loop
repnz
add
xor
mov
retf
sub
les
cmc
push
aas
push
pop
lahf
mov
and
fbstp
cwde
xor
cmp
mov
mov
ds
and
cmps
mov
or
stos
pop
or
int
xchg
fistp
xchg
dec
cmp
into
pop
sub
xchg
dec
pop
push
mov
ficomp
sbb
aaa
dec
lds
lods
fsub
clc
popa
aam
sbb
test
cmp
aam
mov
lahf
ret
jb
push
adc
sub
mov
dec
or
jl
aam
lea
nop
cmp
mov
nop
sub
xchg
adc
ss
mov
jb
ins
xchg
ja
js
sbb
adc
jp
fild
push
arpl
stos
into
sbb
mov
ss
je
outs
shl
push
enter
cdq
lea
mov
mov
inc
xchg
imul
xor
mov
sub
xor
lock
pop
sbb
dec
add
or
xlat
mov
or
lock
mov
(bad)
rcr
inc
leave
mov
dec
push
inc
sbb
inc
in
push
xchg
jge
iret
cmps
sbb
cmps
inc
ret
push
pmaxsw
rcr
(bad)
xchg
push
lock
ins
mov
das
pusha
xchg
mov
es
xor
pop
lock
shr
int3
pop
popf
inc
and
add
push
xchg
shl
jmp
push
inc
or
push
movs
cmp
cld
call
jmp
add
jmp
xchg
or
outs
mov
call
lahf
mov
jmp
mov
repz
mov
push
or
dec
pusha
sbb
data16
cld
sti
fcmovb
in
jl
push
xchg
clc
jo
ret
icebp
mov
and
inc
mov
out
mov
dec
call
imul
add
inc
test
jg
or
lds
stc
push
fadd
enter
adc
pop
imul
pop
mov
pop
jae
call
inc
jnp
(bad)
neg
push
movs
loop
mov
mov
xor
or
ins
out
inc
xchg
mov
push
arpl
cmp
dec
aad
cmp
in
xchg
jmp
cmp
xor
movs
ficom
nop
xchg
nop
add
add
nop
fstp
out
out
xlat
mov
leave
out
ins
test
loop
cmp
xchg
inc
adc
adc
mov
out
jle
inc
daa
inc
mov
ret
div
loope
cmc
iret
(bad)
imul
mov
push
pop
retf
retf
or
stos
sar
inc
outs
add
cdq
xor
ficomp
pop
ret
jae
sub
or
enter
jno
ss
pushf
es
scas
xchg
xchg
mov
aaa
enter
imul
sub
fwait
in
adc
mov
sub
cmp
call
fdiv
pop
shl
rol
cdq
and
es
cmp
jmp
xchg
add
dec
adc
cmc
mov
popa
or
mov
call
push
enter
repz
mov
pop
jbe
pop
pop
adc
xchg
ss
sub
(bad)
xrelease
or
outs
neg
outs
sbb
push
jbe
pushf
mov
lahf
cmp
xor
out
call
mov
(bad)
add
adc
pop
dec
add
xor
popa
es
pop
pop
mov
in
sar
test
pushf
xor
dec
rcl
adc
repnz
(bad)
icebp
and
loopne
or
or
aad
push
push
fiadd
sti
es
add
mov
xor
cmp
movlps
pop
xchg
dec
adc
fmul
clc
dec
cwde
aaa
adc
idiv
or
mov
sub
and
mov
mov
cdq
push
mov
push
xor
adc
mul
xchg
or
push
test
inc
or
lods
iret
mov
jl
jnp
fnsave
aaa
mov
sti
sub
bound
push
push
add
mov
add
mov
fs
fwait
cdq
clc
fsubrp
popf
add
dec
xchg
and
adc
xor
scas
shl
add
add
mov
enter
jns
(bad)
pushf
inc
loope
mov
cmp
inc
(bad)
in
push
pop
push
jns
cmps
data16
enter
inc
push
lods
mov
sahf
mov
stos
imul
or
add
in
mov
jecxz
loop
out
xchg
mov
inc
stc
and
sub
xchg
mov
jno
inc
push
pop
pop
cmc
icebp
cmp
sub
dec
shr
push
lahf
cmp
loope
aad
xchg
retf
cld
inc
(bad)
sub
push
popa
pop
ror
aam
cmp
out
dec
fnstsw
aam
maskmovq
idiv
jmp
sbb
data16
mov
mov
in
pop
not
dec
pushf
xor
sahf
add
pop
ja
pop
push
loop
popa
sbb
fs
or
nop
(bad)
pop
cmp
fidiv
xchg
bound
jl
jle
aaa
push
mov
inc
es
push
inc
mov
pushf
aas
pop
shr
mov
call
push
ror
pop
sub
popf
push
add
into
or
or
test
jge
xor
gs
aad
cld
jp
or
lds
or
pushf
in
adc
jp
sub
and
dec
int3
push
cmps
mov
into
inc
imul
add
xor
aas
jmp
jbe
xchg
scas
es
lahf
iret
test
and
push
arpl
adc
xchg
loope
test
loope
sbb
cli
mov
pop
cmp
mov
jbe
xchg
add
lahf
out
das
adc
cwde
shr
movs
push
fidiv
nop
mov
(bad)
and
cwde
ins
stc
mov
(bad)
push
dec
or
cmc
xchg
sbb
leave
mov
dec
xlat
push
lds
js
xor
arpl
data16
loope
rol
jge
les
cmp
mov
(bad)
fstp
ins
dec
jbe
retf
jecxz
pop
leave
xchg
inc
push
not
clc
ja
mov
pusha
push
fs
and
cmc
mov
cmp
inc
adc
push
(bad)
adc
add
stc
call
pop
in
test
pop
mov
dec
pop
adc
test
add
xlat
mov
inc
out
scas
cmp
stos
xchg
das
xchg
dec
ror
fisttp
mov
mov
sub
cmp
mov
into
sub
mov
mov
lods
push
inc
pop
mov
imul
sbb
pop
adc
ror
call
call
and
out
inc
cmp
or
xchg
adc
outs
sar
les
jns
mov
xchg
inc
add
cwde
lds
mov
icebp
jge
jae
pop
lock
adc
mov
pop
outs
arpl
mov
leave
adc
sbb
sbb
pop
xor
arpl
xor
pop
std
inc
fbstp
push
xchg
inc
push
sar
adc
je
(bad)
adc
xchg
adc
and
pop
das
fwait
pcmpeqw
lock
es
iret
les
sbb
cmp
int3
jno
enter
cmp
(bad)
jmp
push
adc
jge
jno
loopne
mov
ins
test
jg
adc
mov
lods
push
jmp
aas
sbb
popa
adc
lds
outs
cmp
xor
and
(bad)
int3
push
(bad)
mov
sbb
stc
frstor
jns
inc
fimul
mov
repz
sbb
dec
sbb
push
popf
jmp
mov
int
into
adc
cmp
xchg
dec
ret
xchg
in
jne
addr16
in
jecxz
fsubr
arpl
jnp
cmp
xchg
fld
into
adc
push
mov
inc
sub
adc
aaa
test
pop
xor
stos
fcmovu
cdq
cwde
mov
lock
cmp
stos
mov
xchg
(bad)
fcmove
(bad)
movs
sti
jp
out
and
cmp
pop
xor
(bad)
or
popa
je
out
push
pop
data16
mov
aas
(bad)
pop
adc
daa
sahf
cmp
cmps
inc
fnstcw
loop
sbb
pop
sub
sub
sbb
dec
xchg
inc
fisubr
push
xchg
or
bound
push
xchg
jmp
push
(bad)
sbb
(bad)
into
(bad)
(bad)
fisttp
mov
out
add
dec
outs
stos
popf
aam
js
outs
jne
sti
xchg
outs
std
loope
push
iret
sub
or
in
cmp
je
les
shl
sar
out
mov
loopne
push
lahf
ins
adc
loope
popa
jb
inc
add
repnz
push
lods
jb
dec
xchg
xchg
sbb
sbb
inc
mov
push
mov
ins
pop
dec
aas
push
jno
jl
jp
sbb
inc
sti
clc
sbb
adc
fdiv
es
mov
xchg
cmp
ins
xlat
adc
ret
sub
sub
aad
test
imul
test
mov
jnp
outs
in
repz
inc
mov
scas
mov
push
pop
sbb
xor
fstp
jnp
jle
jmp
pop
push
sbb
mov
dec
adc
mov
scas
jo
pusha
fcom
cdq
loop
cmp
int3
jne
push
pop
aad
or
mov
mov
jno
rol
stos
loop
push
dec
sbb
dec
(bad)
jmp
push
xchg
dec
mov
int
rcl
ds
cmp
in
dec
ja
jge
inc
std
adc
sar
fild
fdiv
add
fst
and
jo
lods
movs
jmp
mov
outs
dec
(bad)
fs
add
mov
push
mov
mov
add
movs
mov
push
pop
popa
cli
xchg
jg
call
test
daa
jg
pop
dec
cmps
jmp
hlt
mov
push
adc
cmps
jbe
xor
lods
sar
leave
jb
mov
test
pop
mov
push
imul
repnz
test
push
inc
cmp
ss
aad
mov
add
xchg
fs
nop
and
and
xchg
cmp
icebp
pop
mov
inc
icebp
push
jb
hlt
aad
xchg
cli
sub
data16
es
ss
dec
jns
mov
scas
(bad)
dec
dec
sbb
cmps
adc
inc
adc
ret
out
je
rcr
loopne
inc
les
jno
mov
pushf
jg
hlt
jo
daa
sbb
pop
cld
and
dec
dec
pop
mov
cmc
push
adc
cmp
cmp
push
fidiv
sti
sub
out
sub
in
fsubr
ins
xchg
fbstp
call
out
stos
cmp
fist
dec
or
js
jb
push
stc
fcomp
rcl
fpatan
xor
loope
and
fist
or
je
adc
cwde
or
push
cli
dec
out
inc
fs
sub
fbstp
shl
mov
sub
push
push
cmp
mov
rcr
or
hlt
adc
or
out
ja
mov
mov
pop
and
retf
pop
sub
popf
mov
cmp
scas
jmp
jno
stos
fld
mov
into
adc
popa
adc
stc
jno
jle
cmp
mov
inc
mov
in
mov
add
fst
enter
adc
push
push
and
or
fisubr
add
add
dec
adc
in
mov
push
xor
cs
adc
(bad)
mov
push
cmp
int3
dec
jmp
jnp
pushf
add
sti
inc
cmc
fiadd
in
lea
ja
iret
and
in
xchg
mov
push
inc
ror
movs
std
xor
scas
mov
ror
cmc
mov
pop
xor
ins
in
add
sbb
and
test
jecxz
jg
sub
sbb
fidivr
inc
pushf
stos
sbb
movs
push
pop
jecxz
pop
jnp
and
pop
pop
push
push
icebp
loopne
jno
xchg
jbe
mov
rcr
push
and
rol
xchg
add
mov
adc
jbe
cmp
push
fsubr
repnz
xchg
lock
push
jecxz
mov
xor
scas
inc
mov
mov
sbb
push
pop
add
jae
add
jo
dec
push
iret
jne
cmps
pop
dec
pushf
cmp
inc
jmp
jmp
imul
mov
inc
or
sub
xchg
or
add
fistp
cmp
mov
inc
test
xchg
cwde
jmp
jmp
cs
cwde
xor
xor
jp
jge
ins
shl
mov
adc
fmul
sbb
mov
cmp
mov
int3
inc
sub
ficomp
(bad)
fsub
imul
jmp
scas
ret
leave
lods
stc
xchg
push
mov
jne
dec
int3
aas
sbb
push
mov
cmp
ja
xor
addr16
adc
repz
mov
mov
add
or
sbb
sub
cmp
mov
mov
push
mov
mov
aas
mov
inc
xchg
sub
test
push
cmp
mov
cs
mov
xchg
mov
sahf
gs
iret
mov
test
push
push
fnstcw
mov
dec
(bad)
adc
daa
add
dec
movs
out
xor
push
leave
jmp
adc
fpatan
aam
inc
push
sub
loop
inc
sub
jns
leave
bnd
imul
sbb
jmp
mov
jge
test
in
inc
sbb
sbb
add
scas
repz
in
addr16
jle
mov
in
idiv
pop
daa
sub
xchg
xchg
rcl
mov
ret
leave
or
push
(bad)
fist
in
xlat
fadd
in
xchg
cmps
lods
push
jno
dec
push
mov
mov
sub
xor
dec
jmp
sub
sar
bound
and
cli
xor
push
sub
(bad)
jle
adc
pop
pop
cmp
mov
int3
adc
mov
out
ins
inc
pop
ja
movs
arpl
push
cmp
add
push
mov
sbb
shr
inc
daa
mov
aam
fild
daa
cmc
pop
out
xchg
sbb
(bad)
idiv
inc
or
cmp
in
ret
das
leave
dec
rol
mov
movs
sub
test
sub
mov
xor
mov
cmp
xor
xor
jmp
sub
dec
adc
mov
cmp
sbb
bound
mov
and
dec
je
test
das
out
and
repz
xor
pop
xchg
or
pop
add
dec
mov
lock
ror
leave
cmp
dec
test
rol
or
xor
or
mov
pushf
or
mov
push
cmps
call
jb
leave
out
mov
ret
std
fwait
cmps
sub
sub
add
in
xor
dec
mov
lods
nop
or
push
stc
punpckhbw
jb
pop
dec
lds
xchg
inc
mov
and
popf
in
or
or
ficom
lods
aad
push
cmp
aas
rol
mov
sbb
xor
(bad)
arpl
jp
pop
test
daa
cmps
shr
add
push
js
cli
push
inc
ins
and
or
hlt
test
mov
pop
jae
repz
jl
imul
lds
scas
push
or
hlt
inc
add
popf
push
sbb
mov
mov
rol
jecxz
es
lock
clc
push
add
int3
add
(bad)
cwde
out
in
add
movs
add
call
nop
rcr
mov
nop
jnp
in
dec
or
fs
(bad)
bound
jmp
cmc
add
dec
jnp
xor
shl
and
imul
or
sub
or
push
cmp
fisub
pop
or
sbb
add
xor
mov
fucomi
push
in
xor
(bad)
adc
mov
mov
lds
mov
ins
daa
mov
lods
mov
or
adc
lock
lahf
jo
sbb
and
pop
mov
inc
in
repnz
and
cmp
int3
dec
ror
push
cli
dec
jg
call
sub
pop
test
pop
icebp
loopne
xor
sub
adc
mov
cld
inc
mov
movs
dec
repz
(bad)
retf
xlat
idiv
ret
jne
je
mov
pop
bound
push
xor
push
fadd
jmp
bound
mov
cmp
data16
xchg
pop
or
jmp
lahf
sub
inc
loope
dec
retf
jnp
xchg
mov
mov
pusha
call
dec
jmp
add
mov
into
adc
push
jo
scas
js
sub
xchg
push
cs
xor
push
jmp
adc
mov
xor
test
sbb
movs
icebp
je
ret
aam
or
pop
cmp
aam
mov
sbb
imul
ror
imul
inc
std
call
sub
push
xchg
adc
pop
mov
or
push
dec
test
cmp
mov
xchg
imul
and
push
dec
push
and
int3
add
repnz
cmc
ins
dec
cmp
hlt
fdivr
inc
stos
out
pop
pushf
inc
mov
mov
aad
dec
lods
jno
cmp
jecxz
xor
and
(bad)
pop
stos
lock
jnp
mov
ja
jge
fmul
add
in
push
cmp
sar
adc
std
dec
jle
sub
fucom
fisttp
ret
add
sbb
fst
int
fwait
test
mov
mov
cmp
outs
push
jge
pop
pop
mov
sub
dec
pusha
sahf
pop
sub
mov
lods
pop
sub
push
mov
jecxz
rcl
mov
lods
sbb
push
xor
dec
xchg
cdq
and
retf
add
movs
or
test
(bad)
pop
push
stos
cs
and
ret
push
std
jle
push
lock
call
(bad)
loopne
stos
pop
and
ret
scas
pop
mov
xchg
jmp
int3
inc
adc
cmp
add
sub
mov
out
fnstenv
push
push
imul
es
repz
bound
test
add
mov
out
cmp
mov
bound
mov
dec
add
xor
jp
cmp
mov
lods
inc
mov
mov
stos
scas
aaa
jb
dec
(bad)
(bad)
adc
xchg
push
addr16
shl
cmp
sbb
in
scas
sar
mov
outs
jg
out
jle
inc
fld
xor
lahf
cmp
pop
xchg
(bad)
push
xchg
int3
adc
stos
(bad)
push
mov
pop
pop
add
pushf
test
adc
mov
fisub
dec
adc
es
std
xchg
sub
ss
clc
sbb
mov
jns
outs
cmp
add
cmp
jmp
lea
pop
mov
fwait
jmp
fnstsw
sbb
pushf
xchg
add
(bad)
addr16
loope
sub
pop
test
into
adc
(bad)
cld
mov
call
cmp
clc
dec
xchg
jg
or
dec
dec
sar
inc
lock
retf
out
cdq
neg
ret
push
add
mov
and
call
bound
xor
(bad)
jmp
aad
movs
ins
push
and
sub
pop
aad
add
out
div
mov
(bad)
xor
mov
inc
jl
aad
jmp
rcr
(bad)
jl
(bad)
in
movs
inc
(bad)
cmps
inc
sti
addr16
mov
nop
mov
popf
fs
sub
(bad)
jecxz
mov
scas
stos
lock
(bad)
xlat
ret
scas
cmp
mov
(bad)
cmp
mov
jnp
push
clc
call
cmps
inc
sbb
xchg
ins
xchg
push
je
dec
cli
or
jle
rol
dec
dec
adc
sbb
in
push
xchg
sub
leave
out
lahf
retf
pop
inc
push
ss
or
cs
mov
stc
sbb
jne
faddp
push
leave
dec
adc
jo
sahf
and
inc
pop
jnp
fistp
sahf
fdivrp
ss
adc
or
jl
in
sbb
jno
sub
jbe
nop
je
pop
movs
dec
xchg
push
rcl
arpl
jns
loope
cmp
out
cwde
jbe
movups
fucomip
or
test
and
out
jmp
sub
xchg
dec
adc
or
jl
ds
mov
cwde
add
cmp
lock
add
jo
pop
pop
stos
adc
add
adc
sbb
jecxz
hlt
mov
stc
pop
jb
vpunpcklwd
fidiv
stc
cmps
mov
xchg
jns
daa
in
push
xchg
fild
mov
jae
inc
pop
fbld
enter
loope
mov
cmc
xchg
and
daa
scas
inc
add
mov
sbb
cmp
pop
cmp
test
and
xor
arpl
push
aam
dec
push
jge
rcl
cmp
mov
cmp
call
xor
mov
ret
dec
sbb
fnstenv
sbb
mov
fld
stos
jne
out
jmp
out
push
imul
jmp
mov
push
push
leave
adc
jo
scas
mov
bound
ins
(bad)
ror
(bad)
pop
and
mov
js
(bad)
xchg
clc
add
(bad)
mov
js
cli
iret
es
push
cmp
fidivr
inc
or
sbb
mov
int
push
push
fnstenv
xlat
fild
push
dec
or
scas
loop
dec
addr16
xor
mov
mov
pop
fist
dec
pop
mov
jmp
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
popa
add
inc
add
ins
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
ins
add
je
imul
add
add
add
mov
pushf
add
add
add
je
jb
imul
inc
add
ins
add
dec
add
data16
add
js
add
add
xor
xor
xor
xor
xor
xor
bound
xor
add
sub
add
add
inc
add
ins
add
inc
add
jae
arpl
jb
imul
imul
add
add
and
add
xor
or
add
inc
add
ins
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
or
add
dec
add
je
add
outs
add
ins
add
popa
add
add
add
add
add
add
add
add
js
add
add
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
and
add
cmp
or
add
dec
add
imul
outs
add
ins
add
imul
outs
add
ins
add
add
xor
xor
xor
xor
add
js
add
add
add
or
add
push
add
outs
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
jae
jae
add
bound
ins
add
and
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
cmp
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
scas
dec
inc
inc
push
js
mov
sbb
aam
dec
push
pop
pop
test
dec
push
call
cmp
pop
add
adc
int3
outs
inc
jo
dec
movs
loopne
(bad)
rcr
mov
push
and
cmp
(bad)
hlt
jecxz
js
not
neg
outs
lods
cs
fst
dec
and
jecxz
add
leave
mov
imul
imul
int3
sbb
add
add
imul
cli
fistp
or
out
and
sbb
cmp
add
repz
in
or
int
adc
lds
adc
jbe
pushf
cmp
sub
add
adc
lahf
or
pop
ret
mov
adc
out
fwait
sbb
mov
les
push
dec
fisttp
sbb
mov
and
add
pop
cmp
push
jmp
mov
rcl
adc
in
jecxz
stos
cmp
shl
sbb
add
xor
or
std
pop
pop
or
inc
add
dec
add
scas
mov
sbb
je
aas
mov
push
jbe
push
mov
retf
cmp
js
test
retf
clc
loopne
sbb
dec
lods
mov
test
movs
pop
test
add
push
inc
xchg
test
(bad)
cld
(bad)
hlt
inc
mov
ret
cmp
push
dec
sbb
in
scas
fisubr
ds
daa
jl
push
cmc
sar
or
retf
add
not
add
add
dec
inc
dec
inc
scas
inc
pusha
xor
dec
inc
or
add
or
add
add
add
add
push
add
add
ret
dec
add
or
pop
jae
add
les
add
les
xchg
sub
sbb
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
daa
dec
inc
inc
push
js
movs
xchg
fild
inc
adc
mov
addr16
shl
movs
mov
jge
or
loopne
adc
jne
inc
add
mov
push
dec
jo
mov
mov
push
xchg
cmp
cli
test
mov
cld
jle
cli
push
add
adc
lahf
dec
or
sub
aad
fwait
mov
mov
mov
push
push
inc
fs
pop
pop
mov
add
pop
ins
loopne
nop
add
mov
sub
pop
push
call
or
push
or
or
jae
fldcw
add
cmp
cwde
ins
push
call
add
push
pop
or
cmps
xor
pop
aam
add
pop
stc
pop
es
fcomp
cwde
or
pop
mov
sbb
out
test
jo
mov
int
mov
lds
ins
in
test
psrld
imul
jg
jno
ret
mov
xchg
movs
sar
movs
pop
fwait
stos
stc
pop
popa
sub
cmp
mov
(bad)
nop
repz
pop
into
xchg
test
lods
outs
(bad)
enter
loop
or
mov
dec
popw
jno
imul
pusha
inc
gs
aad
sahf
in
push
fimul
mov
mov
pop
jno
popa
add
mov
jmp
les
mov
pop
cwde
xchg
bound
inc
add
inc
in
aad
mov
mov
shl
outs
in
addr16
js
pushf
and
aas
je
sti
daa
fcom
cmp
adc
rcl
jmp
sbb
cmp
xor
test
in
or
sbb
jecxz
popa
addr16
aam
push
mov
jmp
cld
mov
fwait
cwde
inc
dec
adc
and
dec
faddp
lods
out
ja
mov
pop
and
loope
cmp
retf
xor
mov
mov
cmp
daa
loope
jl
(bad)
dec
jecxz
shr
in
mov
(bad)
es
xchg
sti
imul
fsub
xlat
mov
addr16
call
cs
xchg
xor
aaa
retf
ja
mov
mov
dec
lods
push
cwde
mov
dec
out
xor
loope
(bad)
lds
bnd
xchg
call
cmp
sbb
or
mov
cdq
xchg
xor
and
cmp
outs
jl
push
sbb
sbb
sub
pop
or
push
or
mov
clc
pop
or
mov
scas
in
sahf
int3
add
ins
xor
ins
xchg
sbb
push
xor
out
sbb
dec
adc
stos
int3
add
xor
or
pop
add
mov
fcom
jmp
test
sahf
dec
push
mov
loop
popa
aad
push
cmp
aam
test
int3
adc
jb
sahf
push
addr16
lods
cs
xor
or
into
nop
ins
dec
or
add
add
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
xchg
dec
inc
inc
push
js
pop
xchg
out
outs
adc
(bad)
lahf
idiv
pop
jnp
mov
fimul
pop
out
dec
xor
mov
pop
inc
mov
or
mov
inc
add
mov
adc
and
mov
mov
fsubrp
jl
push
jns
cmp
daa
pop
repnz
push
in
jge
jbe
pop
push
inc
mov
es
enter
out
cmp
loope
es
or
out
push
jns
cmps
out
cmp
jb
push
xchg
js
push
jnp
call
pop
mov
(bad)
(bad)
ds
mov
icebp
test
sar
cmp
shr
dec
retf
lds
aaa
aaa
or
inc
xor
sbb
ins
adc
call
sub
push
sub
sub
inc
mov
nop
ins
jbe
xchg
or
out
jns
dec
movs
adc
sub
xlat
add
and
fdiv
js
mov
out
xchg
aas
fld
jl
mov
(bad)
fist
xor
pop
pop
mov
das
adc
lahf
fcmovu
sahf
and
cmps
cdq
repz
inc
adc
enter
outs
inc
adc
outs
dec
xchg
mov
mov
dec
pop
mov
les
sbb
repnz
dec
out
fnstsw
cs
xor
mov
out
mov
add
aaa
int3
xor
jbe
lahf
adc
add
(bad)
xchg
bound
lods
stos
jp
jmp
(bad)
daa
stc
cld
(bad)
fild
push
pusha
adc
xor
stos
aad
mov
jnp
cmp
sar
mov
cmp
xor
pop
jmp
xbegin
push
push
scas
pop
lods
push
cs
cmp
add
sbb
stos
aam
ja
sub
rcr
or
scas
and
xchg
aad
xchg
mov
js
mov
popf
fst
stc
aaa
jl
sub
xlat
add
adc
pop
xchg
sbb
stc
fadd
push
out
inc
sbb
jmp
stos
aad
cld
add
std
lds
push
xor
xor
add
mov
mov
xchg
sub
add
in
clc
icebp
movs
push
scas
jg
pushf
sahf
ds
adc
jne
mov
(bad)
ins
and
xor
xor
push
xlat
fldenv
add
push
lds
and
jecxz
xchg
dec
movs
push
out
imul
mov
add
inc
dec
mov
dec
mov
mov
mov
clc
jo
ss
inc
cmps
cmps
mov
ins
sbb
cmp
jecxz
jns
xlat
jmp
pop
(bad)
jecxz
out
in
inc
lahf
out
mov
cmp
jl
jle
pop
mov
sbb
nop
out
cmps
cmps
xor
inc
test
es
sub
cdq
mov
xchg
loope
iret
(bad)
pop
dec
es
mov
adc
pop
sub
mov
inc
imul
push
out
fcmovu
ficom
dec
and
pop
xor
dec
ret
loope
mov
popf
mov
gs
stos
jmp
mov
test
sar
nop
xchg
retf
outs
fild
push
aaa
stos
xchg
xor
into
add
pusha
pusha
nop
fnstenv
xchg
dec
in
scas
dec
mov
mov
mov
add
add
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
aad
inc
inc
push
js
lods
xchg
dec
dec
xchg
add
(bad)
jg
mov
mul
outs
mov
mov
and
or
shl
in
and
popf
and
test
dec
data16
btr
jae
mov
pop
jmp
out
lock
lahf
ret
repz
std
add
std
or
jo
mov
cli
mov
(bad)
adc
add
jmp
xor
push
or
dec
js
mov
inc
mov
add
loop
jbe
mov
mov
mov
test
repz
dec
pop
xchg
fxch
out
push
fs
cmc
jl
test
sub
pop
lahf
ja
add
jb
outs
ficomp
cmp
xchg
xchg
inc
cli
out
sub
enter
push
arpl
aas
dec
inc
jecxz
repnz
cmps
in
mov
cmps
call
outs
test
sbb
fsubr
mov
into
push
dec
or
mov
(bad)
mov
xchg
fwait
jge
pop
retf
enter
mov
and
outs
jle
add
jbe
push
cdq
xor
pop
mov
sbb
bound
push
xor
jmp
gs
daa
dec
into
mov
mov
mov
cmp
in
inc
push
xor
jnp
mov
out
cmps
push
sub
jae
xor
nop
pop
inc
push
sub
xor
ret
inc
dec
add
mov
inc
mov
cmp
xor
hlt
cmc
rcl
mov
ss
add
mov
fucomip
cmp
adc
ins
sub
jb
fistp
lahf
ds
dec
mov
sbb
mov
sbb
fs
aaa
pop
and
fmul
sub
hlt
cld
nop
gs
push
sub
mov
dec
dec
adc
add
jne
jno
(bad)
jge
push
or
inc
pop
outs
and
mov
fs
jmp
pop
and
or
(bad)
ror
sub
(bad)
mov
mov
xchg
test
sub
loope
in
iret
mov
in
push
sub
shl
add
cmps
fcmovnu
enter
jmp
push
xchg
ins
push
adc
add
push
out
inc
sub
rol
iret
dec
das
mov
sti
push
cmp
fisub
xchg
and
add
into
das
inc
inc
dec
inc
and
addr16
neg
jp
dec
icebp
jecxz
and
fcmovb
push
push
or
inc
call
(bad)
and
inc
xor
aaa
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
add
xchg
dec
inc
inc
push
js
in
popf
ja
fs
lahf
lahf
out
cmp
in
imul
leave
sub
and
mov
add
inc
and
mov
inc
mov
sbb
ins
(bad)
dec
fs
mov
sub
fs
mov
bound
xchg
xor
adc
xchg
mov
fstp
out
fsubr
jae
push
xor
cwde
add
xchg
sbb
aas
mov
fdivr
jns
out
cmp
sbb
adc
ds
shr
mov
fdivr
in
adc
pop
(bad)
jbe
mov
loope
ja
add
jg
stos
xchg
jp
mov
pop
pop
scas
cmp
test
mov
fdivp
(bad)
(bad)
in
arpl
js
dec
jl
sbb
dec
leave
and
sbb
mov
dec
sub
jbe
jmp
leave
repz
push
lods
dec
fldl2t
leave
pop
mov
or
in
retf
mov
push
pop
(bad)
jmp
push
lods
jge
sub
mov
int
fstp
adc
cmps
adc
arpl
repnz
(bad)
popf
adc
inc
cld
cmp
xchg
mov
jl
pop
test
movs
mov
sub
arpl
mov
div
imul
xchg
mov
mov
dec
mov
xlat
pop
ja
xor
or
dec
add
imul
sahf
fwait
js
mov
cmps
cmp
pop
loop
(bad)
(bad)
int
call
adc
sbb
repnz
std
mov
fcom
push
(bad)
(bad)
fsubr
jmp
fistp
cmp
sub
jge
idiv
adc
jecxz
xor
aas
pop
cwde
cdq
je
or
popf
cdq
repnz
stc
push
mov
sahf
pop
and
push
xor
cmp
xor
xor
pop
xchg
or
push
mov
mov
and
or
dec
cmp
out
cmp
jmp
fadd
not
mov
mov
(bad)
scas
mov
jb
and
(bad)
fs
je
mov
lods
push
ins
lods
xchg
cld
retf
mov
hlt
jg
xchg
add
cmp
mov
pushf
mov
dec
cmps
pushf
cmp
sub
cmp
js
push
repz
and
cmp
or
es
and
cmp
dec
inc
sbb
mov
push
fild
jmp
sub
js
pop
lds
mov
adc
sub
aaa
adc
pop
sbb
inc
sub
rol
sahf
(bad)
jmp
je
xchg
ins
sahf
pusha
imul
arpl
push
cmp
mov
and
xor
repz
mov
les
arpl
(bad)
xor
retf
xor
pop
jbe
fisttp
pop
and
cmp
sbb
sti
sti
jno
in
in
or
pusha
ret
ror
push
pop
pop
gs
stos
ds
js
jecxz
xchg
arpl
and
pop
movs
enter
aad
mov
hlt
add
push
nop
sbb
gs
push
and
test
sbb
dec
xchg
pop
cld
fsub
test
bnd
stos
mov
test
pop
sbb
xor
into
pop
cmp
aad
or
out
mov
sub
push
es
jge
cmp
pop
sub
bound
add
push
pusha
cld
push
add
push
push
in
dec
xchg
loop
sbb
call
repz
inc
pop
icebp
movs
clc
jbe
ja
cmp
xlat
xor
sbb
ret
inc
dec
jo
or
dec
mov
mov
sbb
loop
cli
ret
movs
mov
mov
fwait
adc
push
lock
stos
lock
out
pop
pop
pop
fbstp
fdivr
sbb
jmp
ja
sbb
jnp
je
fiadd
and
and
or
adc
bound
ins
mov
mov
jl
push
jno
gs
mov
dec
sbb
inc
pushf
popa
and
jmp
(bad)
push
pop
jg
jmp
mov
jl
ret
push
aas
ins
mov
loop
dec
hlt
mov
cmps
imul
mov
push
loopne
fdivr
sbb
ret
iret
js
add
nop
inc
sub
and
add
xor
add
add
push
sti
mov
push
dec
xchg
je
cmc
jp
sbb
test
repnz
pop
xchg
cli
add
jge
call
dec
cmps
dec
jecxz
mov
dec
lods
mov
push
mov
mov
js
retf
js
loope
mov
cmps
ror
in
or
push
stos
inc
mov
add
inc
sub
xor
jnp
stos
sub
loopne
xchg
sar
mov
fild
test
xor
cmp
daa
mov
sbb
mov
test
out
mov
xor
adc
or
call
jecxz
stos
inc
nop
adc
rcl
rol
inc
mov
or
and
inc
or
enter
mov
inc
aas
stos
dec
(bad)
xchg
mov
push
sub
fcom
pusha
lahf
mov
in
scas
sbb
pop
pop
xor
imul
das
repz
push
aas
inc
ins
daa
fmul
pushf
and
retf
jecxz
mov
jns
mov
cmps
call
xor
jmp
pop
mov
in
mov
std
rcr
in
(bad)
out
mov
sar
stos
aad
jecxz
adc
iret
iret
push
sub
mov
mov
inc
mov
xor
xor
imul
addr16
ror
or
adc
jns
add
push
jmp
jbe
or
mov
cli
(bad)
mov
fadd
jnp
add
mov
jle
and
mov
jo
inc
call
(bad)
div
adc
jp
aad
in
sub
(bad)
sbb
pop
mov
sub
retf
rol
retf
inc
dec
dec
sbb
ss
repnz
cmps
mov
imul
add
cli
pop
jl
shr
cmc
imul
fidivr
or
sahf
sahf
mov
gs
int
cmp
es
push
call
mov
popa
not
add
fstp
push
cmp
jno
mov
int3
test
pusha
mov
stos
fist
inc
cmp
rol
mov
into
cmp
xchg
adc
shl
in
pop
xor
iret
push
cmp
scas
fs
add
ins
test
sub
mov
sbb
mov
fs
loope
and
pusha
movs
lds
ret
bound
(bad)
xor
lods
cmp
in
or
int3
adc
outs
sbb
enter
jmp
inc
jg
ror
jns
xor
outs
loope
sbb
imul
mov
ret
xor
xor
loopne
cmp
mov
xor
arpl
mov
out
inc
and
mov
sbb
push
call
sub
pop
dec
sbb
and
ror
scas
loope
jb
frstor
ins
loope
movs
out
mov
and
cmp
cwde
pusha
rcl
bound
daa
mov
imul
fwait
adc
rol
(bad)
sbb
sbb
xor
xchg
xchg
sub
div
jne
arpl
push
shr
es
xchg
and
add
jae
jne
mov
sahf
jecxz
rcl
addr16
sahf
in
aad
hlt
jp
lods
mov
popa
dec
sbb
xor
push
fbstp
sbb
pop
ret
dec
add
mov
imul
pusha
sbb
ret
(bad)
mov
push
adc
mov
adc
popa
loop
push
add
std
inc
jp
sub
add
in
push
inc
mov
mov
movs
imul
movs
sub
lahf
lods
inc
retf
ror
cdq
cmps
fdiv
and
and
repz
arpl
es
push
jecxz
push
xlat
and
sbb
sbb
fisub
sbb
push
mov
pop
jle
sbb
loop
out
pop
in
idiv
jnp
cmc
hlt
int
or
dec
mov
jae
jecxz
iret
aas
(bad)
rol
xor
xor
xlat
inc
or
add
sub
shr
and
and
ds
sbb
jo
push
pop
pushf
sbb
mov
mov
sub
xchg
push
inc
mov
imul
cmp
cs
xor
dec
adc
push
retf
jb
sbb
xlat
test
shr
jge
mov
jecxz
mov
push
popf
mov
xchg
adc
sub
jne
imul
stos
int3
jo
ins
inc
xor
lods
xor
xchg
aam
ins
jo
(bad)
pop
loope
ins
pop
lods
scas
dec
out
pop
inc
in
jno
cmc
out
fist
cmp
xor
mov
call
and
(bad)
cwde
pop
jp
or
or
add
clc
push
test
loope
cmp
inc
xchg
ror
mov
push
ss
and
add
add
in
aad
pop
mov
iret
xchg
inc
sub
sbb
retf
inc
daa
scas
mov
mov
and
xchg
js
js
test
mov
jno
sub
retf
pop
push
and
inc
xchg
or
mov
sub
mov
push
push
xchg
sbb
push
adc
xor
adc
sbb
and
call
or
dec
hlt
mov
out
jo
xchg
push
fwait
jge
lahf
pop
jl
retf
inc
inc
cmc
xor
retf
jbe
xor
sti
sbb
test
sti
dec
dec
push
or
xchg
mov
nop
pusha
adc
jl
add
cmc
lea
retf
inc
loop
sub
and
xchg
mov
inc
and
ds
inc
lods
icebp
pop
dec
aaa
int
(bad)
jbe
xor
push
inc
mov
pop
repnz
mov
not
cli
add
loopne
pop
dec
mov
and
mov
test
cli
clc
scas
les
xor
call
or
pusha
xor
in
and
ins
shr
ror
mov
(bad)
das
jb
rol
mov
mov
aas
pop
fstp
pop
jbe
xchg
mov
adc
xchg
ret
jno
es
jge
cmp
push
pop
pop
test
adc
or
in
push
test
mov
cli
sti
xor
ret
cmp
add
aas
pop
or
or
dec
inc
and
add
imul
retf
(bad)
fs
rcl
fwait
push
retf
sti
push
shl
dec
pop
mov
fwait
cwde
push
or
ds
es
push
cmp
push
out
(bad)
imul
rcl
mov
jns
cdq
push
gs
out
jmp
ror
pop
dec
hlt
mov
mov
lds
sbb
mov
lods
ja
repz
dec
mov
sub
leave
mov
arpl
lods
mov
adc
retf
sbb
mov
gs
shl
jl
add
adc
ja
xor
leave
and
loop
call
int3
push
sti
dec
imul
and
sbb
inc
movs
rol
ja
cvtpi2ps
mov
mov
nop
jmp
xchg
jmp
xchg
xor
mov
in
jno
jecxz
pop
mov
mov
test
imul
or
mov
movs
call
(bad)
(bad)
rcl
pop
xchg
shl
xor
sub
and
rol
adc
lods
into
inc
iret
xchg
sub
mov
sub
cmps
xor
jl
mov
push
adc
loopne
and
sub
adc
scas
daa
mov
sbb
dec
or
sub
int3
test
retf
dec
cmp
adc
sbb
adc
xor
inc
sub
inc
add
enter
bound
retf
pop
(bad)
xor
jl
in
xor
or
xchg
xlat
fsubr
hlt
cwde
fidivr
(bad)
fdivrp
outs
adc
test
ror
inc
xchg
mov
test
mov
cmps
push
adc
dec
sub
movs
sbb
or
ins
cmps
adc
jno
pop
mov
push
adc
out
test
sbb
pop
add
cmc
cmps
les
mov
mov
stos
stc
hlt
mov
adc
fwait
adc
or
bound
ins
and
mov
and
add
mov
lods
mov
mov
outs
mov
sbb
adc
cmp
data16
std
shl
xchg
call
jmp
mov
cmp
repnz
test
pop
add
je
cmp
fwait
sub
not
inc
pushf
fwait
jmp
inc
push
mov
push
lea
and
ss
inc
xchg
inc
call
and
xchg
loopne
ds
pop
les
inc
cmp
(bad)
mov
sbb
scas
inc
dec
daa
jg
test
and
loopne
sub
(bad)
add
shr
es
xlat
retf
mov
and
add
push
test
shr
ins
xor
mov
movs
push
les
xchg
pusha
mov
dec
push
sub
adc
sbb
into
or
pusha
inc
mov
or
push
shl
in
(bad)
xchg
cwde
cdq
sahf
loopne
fst
mov
pushf
sub
cmp
xchg
dec
loope
dec
test
mov
out
fwait
inc
dec
or
dec
sub
rol
ins
xchg
retf
sahf
inc
shr
lods
xor
(bad)
shl
div
add
cmp
ret
lods
loopne
adc
(bad)
ins
xchg
(bad)
out
or
and
pop
dec
adc
pop
mov
inc
loopne
mov
xchg
sbb
add
call
adc
daa
push
jns
cmp
inc
(bad)
jne
mov
mov
push
jo
sbb
jecxz
and
jp
xchg
ret
push
(bad)
retf
mov
jecxz
push
sbb
adc
jnp
adc
pop
or
mov
mov
scas
mov
add
js
sub
or
aad
int3
inc
mov
aaa
std
mov
test
push
daa
enter
hlt
ins
xchg
adc
push
dec
imul
sbb
shr
sbb
sub
push
xchg
xchg
lea
loop
mov
push
nop
cs
add
jmp
arpl
jecxz
ja
jns
inc
into
leave
inc
idiv
mov
push
lock
xchg
and
adc
xor
jecxz
jge
daa
and
das
sbb
stos
fstp
scas
ret
cdq
in
pop
ss
xchg
test
mov
cmp
into
outs
mov
jno
popf
push
add
sbb
xor
dec
sub
js
and
std
and
mov
xchg
not
loope
mov
fidiv
pusha
add
add
shl
lods
xor
(bad)
test
in
test
lods
add
pop
test
adc
sbb
adc
inc
dec
mov
mov
rcr
mov
loopne
fbld
mov
push
mov
adc
sbb
sbb
xchg
cdq
push
add
adc
in
xchg
push
pop
cmps
adc
jmp
outs
aam
or
mov
xchg
mov
mov
inc
dec
test
pop
push
retf
inc
(bad)
bound
dec
faddp
sti
push
xor
popa
lods
ret
mov
add
rol
pop
and
sti
nop
mov
mov
retf
push
retf
and
or
xor
movs
aad
loope
push
neg
mov
cmc
bound
sub
adc
or
and
rcr
inc
mov
jnp
mov
pop
out
cmp
mov
cmp
push
jmp
cwde
adc
sbb
clc
mov
shl
ds
adc
stos
mov
mov
dec
inc
mov
sbb
inc
jl
test
gs
mov
call
xchg
add
push
es
fild
repnz
ret
dec
cmp
sub
sbb
add
movs
jne
and
mov
push
jecxz
into
and
nop
cli
call
xor
push
push
push
push
mov
jmp
and
mov
mov
pop
add
shl
and
jne
jne
aaa
mov
sbb
mov
mov
pop
fwait
mov
sbb
adc
cld
push
fwait
sub
push
or
lods
(bad)
sub
test
sub
and
data16
dec
mov
cmp
jecxz
jae
fstp
sbb
mov
inc
imul
or
push
jle
dec
pop
shr
popa
lock
or
pop
movs
loop
imul
sub
sbb
(bad)
fsub
bound
jb
stc
retf
cwde
icebp
adc
cmp
(bad)
or
mov
add
out
ret
xchg
repz
pop
xchg
push
push
shl
xor
mov
lods
xchg
mov
out
call
mov
mov
push
pop
xchg
push
add
mov
and
xor
pop
into
dec
arpl
lods
mov
test
jl
xchg
and
push
dec
xor
ret
sbb
and
jge
bound
ret
xor
adc
dec
popa
adc
or
fcomp
or
add
test
pop
test
aas
call
arpl
and
ja
test
add
(bad)
dec
xchg
test
mov
adc
test
or
adc
push
cmp
fnstenv
and
mov
in
inc
jns
stos
ins
outs
cmp
js
ins
ret
push
sbb
xor
int
cmp
jge
jo
test
and
dec
aam
adc
cmps
mov
push
shl
xor
fdiv
rcr
test
rcl
lds
dec
ds
gs
ss
(bad)
cmps
test
(bad)
nop
rol
(bad)
and
cmps
sub
pop
pusha
cmp
jns
out
fcmovu
ret
cmp
in
mov
xor
mov
and
test
jl
xchg
jp
imul
jge
add
inc
nop
movs
xor
or
enter
xor
mov
add
xchg
dec
sbb
jle
bound
add
fistp
scas
lea
fwait
popf
jae
out
test
and
and
xlat
pop
in
fwait
cmc
cmp
ret
adc
push
popa
mov
iret
pop
adc
ins
ss
and
and
sbb
loope
adc
adc
pop
xchg
pusha
mov
xchg
bound
nop
inc
jmp
and
jge
pop
dec
mov
inc
dec
shr
xchg
iret
movs
add
gs
or
jae
pushf
xchg
inc
or
pop
fisubr
adc
xor
es
sbb
add
test
cmp
adc
pop
sub
adc
and
cmps
pop
sub
fdiv
(bad)
mov
addr16
cmp
and
out
jno
popf
ja
and
rcl
inc
pop
cld
fdiv
mov
lds
mov
mov
(bad)
out
lods
push
(bad)
out
lock
push
and
cmp
shl
jecxz
push
out
mov
xchg
sbb
iret
int3
mov
xchg
lods
ins
xchg
hlt
js
sbb
outs
xchg
inc
leave
mov
(bad)
idiv
mov
jo
mov
cmp
push
jge
test
movs
and
ror
cmp
das
stos
mov
jne
or
jno
cmp
xlat
cmc
cwde
cwde
pushf
in
das
sub
dec
jo
xor
inc
dec
jp
inc
dec
adc
arpl
mov
cmp
jno
adc
repnz
shl
inc
adc
sbb
fmul
dec
popa
les
pop
imul
push
inc
adc
push
dec
and
cli
and
xchg
dec
cmp
enter
xor
cmp
lods
mov
out
xchg
mov
fwait
jg
sub
(bad)
aas
mov
pusha
icebp
das
pop
jle
cld
and
fdiv
pop
stc
retf
fidiv
retf
jae
pop
iret
jne
(bad)
mov
xchg
cmc
int
xlat
xor
mov
repz
ffreep
call
mov
aad
inc
jbe
and
cmp
sbb
sbb
jmp
mov
outs
lods
loopne
ins
ret
fdiv
sbb
and
inc
sub
jo
retf
xchg
das
mov
xor
push
pop
scas
sub
mov
iret
fild
add
add
pop
inc
and
retf
mov
push
dec
mov
jle
imul
mov
mov
xchg
push
sbb
int3
int3
jb
int3
sbb
push
cs
mov
mov
mov
cld
fisubr
inc
pop
jle
mov
into
nop
xlat
mov
movs
rcr
pop
jne
jge
aas
clc
mov
idiv
int
mov
in
cmp
sbb
add
sub
dec
dec
dec
push
lods
push
imul
push
mov
push
sbb
int3
dec
imul
mov
inc
add
mov
out
jnp
jnp
mov
mov
push
std
xor
pop
ret
imul
inc
mov
sub
dec
out
arpl
(bad)
scas
cs
outs
adc
mov
add
shr
cmp
shl
mov
mov
fs
call
jge
fisttp
mov
dec
ret
jne
lahf
cld
cli
xlat
(bad)
cmp
shl
in
push
scas
(bad)
scas
mov
mov
hlt
pusha
test
jo
cmc
scas
jg
ja
retf
gs
(bad)
retf
cmp
call
out
push
inc
fdivrp
(bad)
aaa
(bad)
cli
std
dec
mov
stc
add
push
(bad)
(bad)
pop
in
sahf
(bad)
(bad)
std
sti
jmp
cmps
fucomp
rcr
imul
pushf
jle
jns
movs
jb
cmp
mov
daa
or
ficomp
push
cmps
fnstsw
inc
dec
scas
pop
pop
dec
stos
mov
push
rol
pusha
xchg
mov
lock
(bad)
mov
out
push
sub
or
mov
sub
mov
push
les
ja
jbe
inc
jne
pushf
cli
(bad)
test
(bad)
fadd
or
or
sbb
daa
mov
jbe
ins
das
xchg
inc
movs
sbb
jmp
cld
mov
(bad)
pop
clc
lods
loope
add
shl
mov
imul
int3
mov
aad
mov
jp
aaa
push
pop
jp
sub
adc
cmps
jo
sbb
adc
jae
(bad)
cld
lock
retf
daa
dec
pushf
cmp
xchg
adc
jne
sub
pop
inc
push
jle
scas
xlat
retf
pop
and
push
mov
lea
adc
(bad)
xchg
shr
mov
and
ds
out
cmp
dec
sbb
lods
mov
sbb
clc
or
sub
addr16
iret
xchg
sbb
mov
push
iret
cmp
adc
cmp
cmps
and
inc
fcmovnb
out
jp
popf
cmp
pop
mov
test
jmp
out
push
stos
adc
xor
rcl
lahf
stc
(bad)
sti
jle
jecxz
pop
das
add
mov
mov
jo
int3
cdq
mov
in
sti
pop
(bad)
push
push
fisttp
out
fidivr
add
cmp
push
bound
aas
ds
call
pop
lods
push
jle
lods
leave
push
add
jb
sbb
fistp
cld
or
sbb
mov
pop
xor
in
aas
enter
pop
inc
sub
fidivr
lock
pop
cmps
(bad)
(bad)
lock
mov
das
adc
fstp
int
or
jb
loopne
mov
cmp
xor
or
dec
loop
test
and
mov
stc
call
lods
sbb
jge
jne
sbb
jge
push
sub
out
shld
push
inc
pusha
mov
stos
(bad)
cmp
pop
xchg
retf
aas
adc
fisub
dec
inc
mov
mov
out
pop
pop
pop
aas
aas
nop
mov
sbb
add
retf
xchg
inc
cdq
ja
push
mov
xchg
dec
dec
mov
mov
sub
call
scas
dec
mov
cmps
aad
inc
addr16
push
cwde
dec
xchg
es
add
lock
pop
das
xor
imul
call
cld
ret
lahf
mov
dec
mov
bound
in
repnz
and
mov
pop
out
loop
mov
xor
repz
ret
in
pop
xchg
xchg
into
pop
pop
je
cld
cli
shl
mov
call
xor
test
stos
loop
sar
stos
inc
aam
shr
cmps
xlat
outs
mov
push
pop
sub
ds
stos
arpl
inc
sub
mov
mov
shl
daa
dec
lock
mov
clc
clc
xchg
dec
lahf
jns
(bad)
mov
dec
add
js
xchg
push
repnz
mov
mov
repz
or
gs
and
iret
jae
pop
inc
out
mul
int3
int3
int3
in
mov
sbb
retf
cmp
in
lds
fild
mov
xor
sub
std
js
jno
sti
ret
stc
push
cmp
clc
xchg
retf
jecxz
jle
iret
jne
(bad)
shr
mov
(bad)
lds
pop
mov
imul
imul
(bad)
das
test
imul
jg
or
jmp
sti
fdivp
pop
fwait
out
mov
mov
rol
dec
sbb
pop
mov
jg
push
aas
hlt
mov
(bad)
pop
(bad)
stc
inc
push
mov
ret
pop
retf
nop
jmp
mul
imul
fistp
mov
xchg
repz
ja
adc
mov
das
jecxz
sti
fxch
ds
in
mov
or
and
sbb
shld
mov
out
mov
mov
mov
cmp
push
mov
push
sbb
outs
push
jnp
sub
push
jl
push
movs
mov
push
mov
push
out
mov
sbb
mov
lahf
jl
test
or
(bad)
lock
pop
frstor
ret
sbb
jmp
cld
out
(bad)
imul
neg
dec
add
hlt
mov
pop
pop
cmp
push
jmp
pop
xchg
in
(bad)
lea
shr
jbe
movq
ret
out
jns
fldenv
repz
rol
sar
(bad)
xor
jge
or
(bad)
mov
outs
jg
sbb
rcl
dec
mov
(bad)
call
jl
ins
xor
adc
adc
dec
sub
mov
cmps
xor
adc
repnz
jnp
jmp
and
cmp
jnp
repz
pop
mov
aam
aam
setbe
daa
ret
xor
mov
inc
in
cmc
jp
jmp
scas
or
(bad)
cld
mov
mov
jmp
cld
dec
and
mov
fistp
dec
les
jnp
int
ins
ss
xchg
jb
dec
mov
mov
out
sub
es
xor
outs
test
ret
mov
imul
cli
stos
iret
pop
out
std
iret
shl
movs
adc
out
jmp
test
add
retf
daa
aas
stc
leave
neg
jcxz
mov
pop
je
call
adc
rcr
sbb
dec
xchg
in
mov
in
fidivr
outs
(bad)
loope
add
inc
push
movs
pop
or
es
(bad)
or
mov
stos
xchg
push
sbb
pop
cmp
call
fdivr
enter
out
out
add
inc
push
arpl
add
add
dec
inc
scas
inc
pusha
cmp
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
jo
inc
inc
push
js
xchg
xchg
int
push
popa
adc
lahf
idiv
jmp
push
or
std
add
fisttp
aad
inc
inc
mov
lea
inc
nop
nop
push
fwait
mov
loope
inc
and
cdq
or
in
cmp
fdivr
out
cmp
mov
mov
cmp
cmp
jae
sbb
dec
push
les
out
jbe
sbb
or
stos
stos
inc
cmp
sub
inc
push
add
inc
lods
fiadd
pushf
cmp
imul
and
in
rol
pop
inc
inc
sbb
mov
cli
mov
push
fst
cwde
ret
fdivr
mov
add
mov
sub
mov
inc
mov
in
mov
mov
and
xor
rol
out
outs
pop
jns
(bad)
dec
jo
sbb
ror
bound
mov
add
adc
in
pop
adc
xor
dec
fstp
jbe
(bad)
jbe
or
(bad)
data16
mov
in
adc
inc
repz
inc
push
adc
sub
cmc
test
push
lods
fldenv
mov
pop
mov
out
cmp
gs
and
ins
or
or
sbb
or
mov
imul
add
hlt
jnp
jge
(bad)
mov
imul
inc
jnp
in
shl
stos
stc
scas
out
and
scas
fincstp
mov
je
lds
fsubr
cmps
pop
cmp
add
and
loope
dec
leave
or
popf
xor
jmp
add
cmps
sar
cmc
int
hlt
mov
inc
in
mov
repnz
out
mov
lods
add
scas
cwde
jbe
and
stos
mov
(bad)
mov
add
or
push
and
jmp
into
dec
sub
xor
mov
iret
stc
rcr
mov
mov
fimul
into
pop
nop
test
dec
imul
push
sbb
in
sub
mov
cld
pop
fsubr
ds
mov
push
fcmovnbe
sbb
add
push
xor
jb
cmp
dec
mov
shl
mov
sbb
sbb
stos
inc
sub
movs
add
add
dec
inc
dec
inc
scas
inc
pusha
xor
add
or
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
call
js
pushf
xchg
xor
push
adc
jg
mov
xlat
cwde
not
xchg
push
cmp
cmp
jne
outs
inc
mov
aas
inc
mov
and
jle
push
sbb
sbb
mov
xchg
cwde
mov
imul
pop
hlt
emms
mov
pop
xchg
dec
push
cmps
sbb
imul
sar
scas
outs
iret
repz
imul
sub
clc
lea
in
dec
xor
loope
int
xchg
jo
adc
xchg
fcmovb
add
xor
jmp
inc
mov
pop
mov
hlt
cs
inc
or
mov
mov
add
imul
movs
sub
iret
daa
xchg
jnp
jl
sbb
loop
dec
mov
and
(bad)
push
xor
mov
cmp
ror
data16
arpl
fwait
push
add
xor
inc
loop
and
or
sbb
arpl
mov
ins
adc
pop
sub
dec
test
cli
pop
iret
dec
cmps
pop
sbb
pop
sbb
sbb
dec
jmp
push
sub
sub
test
jno
icebp
loopne
hlt
shl
iret
jp
aaa
or
je
daa
sub
mov
xchg
arpl
sbb
(bad)
pop
push
adc
jle
loope
clc
jle
das
sti
sub
ror
push
retf
stc
inc
xor
push
lods
lds
add
leave
mov
or
jns
call
pop
test
sbb
pop
adc
or
push
jge
adc
xchg
gs
sbb
push
mov
pusha
jns
xchg
(bad)
push
jle
jecxz
in
jo
and
(bad)
xchg
mov
push
add
popa
scas
xchg
jecxz
(bad)
xchg
gs
cmp
cmp
cs
movs
push
(bad)
cli
pop
cli
xor
xor
fwait
pusha
add
add
dec
inc
dec
inc
scas
inc
pusha
add
add
or
or
add
or
add
add
add
add
or
add
add
jp
add
add
pop
test
xchg
pop
push
dec
adc
aas
pop
inc
and
inc
add
or
and
sub
and
xchg
push
and
push
inc
(bad)
or
xchg
add
xor
add
xchg
and
test
nop
mov
pop
xchg
and
push
out
jae
into
sbb
lahf
retf
xor
push
jbe
imul
xchg
inc
scas
pop
dec
mov
(bad)
sbb
loopne
adc
adc
loopne
or
dec
xchg
daa
sbb
add
jmp
inc
pop
pop
xor
ficom
add
pop
test
adc
dec
and
mov
sub
(bad)
jb
and
test
cmc
ficomp
pop
pusha
cld
sbb
push
mov
add
sub
dec
in
jae
arpl
sbb
test
in
fimul
push
movs
dec
jecxz
or
(bad)
(bad)
rcr
cs
mov
add
repz
std
jno
int
mov
sar
ss
jns
mov
mov
loop
aaa
and
sbb
addr16
mov
mov
xor
jge
mov
add
jge
jmp
mov
mov
push
scas
scas
xor
int
add
jbe
retf
cmp
add
sub
mov
sbb
call
mov
shrd
pop
push
movs
push
sub
movs
dec
push
lods
xchg
jmp
int
scas
inc
and
ins
call
jmp
cmp
imul
pop
mov
std
inc
sub
add
pop
ret
fwait
out
xor
and
sub
mov
sub
call
xchg
xor
dec
cdq
rsqrtps
add
push
into
cmp
iret
jp
dec
and
retf
jle
hlt
test
pop
xor
ins
lods
ss
cmp
in
xchg
xor
retf
sub
lds
jmp
xlat
mov
dec
aad
in
pop
scas
cmp
test
jge
outs
push
push
push
pop
inc
inc
loope
jle
imul
retf
mov
imul
cmps
out
push
mov
aad
xchg
push
push
retf
pop
ret
scas
pop
or
push
inc
xchg
sbb
ret
nop
dec
sbb
std
stc
dec
mov
push
mov
lods
xchg
popf
xchg
sub
lahf
lahf
xchg
jmp
pop
cmp
cmp
jg
scas
push
add
rcr
add
popf
(bad)
(bad)
repnz
into
pop
div
pop
add
and
add
int3
jle
sbb
adc
mov
inc
cmp
xor
add
push
dec
and
dec
inc
dec
inc
scas
inc
pusha
sub
add
add
add
add
and
add
add
call
add
add
and
add
add
add
add
add
and
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
xchg
ja
ja
ja
ja
ja
ja
add
mov
mov
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
clc
clc
mov
clc
clc
(bad)
dec
add
jbe
xchg
clc
mov
add
ja
enter
(bad)
(bad)
(bad)
(bad)
clc
clc
test
ja
enter
mov
jg
enter
xchg
(bad)
(bad)
(bad)
clc
clc
test
ja
call
(bad)
(bad)
push
add
mov
clc
mov
add
js
mov
(bad)
(bad)
clc
push
add
mov
clc
mov
add
mov
(bad)
(bad)
(bad)
push
jg
add
js
js
call
(bad)
imul
test
call
(bad)
(bad)
(bad)
(bad)
jg
add
mov
mov
enter
mov
jg
mov
(bad)
(bad)
(bad)
(bad)
clc
out
test
call
mov
add
clc
vpmacssdd
(bad)
test
mov
mov
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
dec
(bad)
clc
test
mov
mov
jg
(bad)
clc
clc
vpmacssdql
ja
ja
ja
ja
ja
ja
js
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
inc
add
ja
add
jns
add
push
add
jge
add
test
mov
mov
mov
test
mov
ret
add
xchg
pop
add
mov
ret
add
mov
mov
lds
arpl
lds
arpl
retf
xchg
data16
cwde
gs
fwait
gs
xchg
imul
leave
xchg
push
add
cdq
ins
add
popf
outs
add
sahf
imul
(bad)
movs
push
aad
ins
add
scas
outs
add
mov
jne
fldcw
jno
fldcw
js
fnsave
jbe
fbstp
jns
in
mov
jo
loopne
je
in
jae
loopne
jp
in
js
in
jg
in
ret
hlt
sar
mov
add
mov
add
mov
mov
lods
add
mov
add
in
mov
jmp
add
ror
lock
mov
not
add
ret
out
xchg
add
les
add
leave
xchg
add
(bad)
cdq
add
leave
cdq
add
into
cwde
add
iret
popf
add
rcr
repnz
sahf
add
into
mov
add
aad
add
aam
add
(bad)
movs
add
fsub
add
fsubr
add
fsubr
add
fidiv
add
(bad)
add
in
add
loope
add
out
add
rol
retf
leave
mov
int3
retf
int
retf
xlat
rol
out
fadd
clc
out
add
jmp
iret
add
out
add
in
in
add
jmp
add
repnz
add
out
lock
lock
add
icebp
icebp
add
repz
add
hlt
repnz
repz
add
hlt
hlt
add
cmc
test
div
add
stc
test
idiv
add
idiv
add
clc
clc
add
cli
std
add
cld
inc
clc
clc
stc
add
cld
sti
add
sti
cld
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
outs
cmp
cmp
cmp
cmp
cmp
cmp
add
inc
test
inc
test
test
test
cmp
test
mov
test
xchg
xchg
cmp
test
js
jns
jns
js
xchg
jl
jns
jns
test
test
or
or
or
add
add
add
jo
jo
jo
xchg
jns
cmp
test
push
push
pi2fd
or
or
js
mov
mov
cmp
test
pop
pop
pop
pop
pop
pop
or
js
jo
jo
jo
xchg
cmp
test
and
sbb
sbb
or
mov
xchg
test
test
and
and
and
and
sbb
js
mov
mov
cmp
test
and
and
and
and
and
sbb
jo
jo
jo
test
cmp
test
sub
sub
sub
sub
sub
and
mov
test
add
sub
sub
sub
sub
sub
js
jo
jo
jo
test
cmp
test
cs
cs
das
cs
mov
mov
cmp
test
cs
xor
xor
xor
sub
jo
jo
jo
mov
add
cmp
inc
cmp
cmp
cmp
cmp
ss
mov
test
cmp
test
pop
pop
push
dec
inc
inc
inc
cmp
js
jo
jo
jo
mov
cmp
test
imul
push
dec
js
mov
mov
cmp
test
ins
imul
pop
dec
js
jo
jo
jo
mov
cmp
test
ins
ins
push
pop
dec
js
mov
mov
cmp
test
push
push
push
push
push
dec
dec
dec
dec
dec
test
jo
mov
add
inc
test
test
test
test
test
add
test
mov
mov
test
test
inc
outs
jo
outs
outs
jo
outs
outs
jo
jo
outs
outs
jo
jo
jo
jo
outs
outs
jo
outs
cmp
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
add
add
cmp
cmp
cmp
cmp
cmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
and
add
add
adc
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
jle
mov
dec
test
dec
test
dec
test
dec
test
dec
mov
dec
xchg
dec
test
dec
test
dec
jne
xchg
add
add
add
add
mov
(bad)
mov
lods
mov
(bad)
mov
stc
idiv
mov
lods
mov
(bad)
mov
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
mov
add
add
div
out
(bad)
cld
cld
cld
(bad)
stc
std
(bad)
push
clc
cli
(bad)
cli
(bad)
(bad)
push
cld
(bad)
push
stc
cld
push
stc
sti
(bad)
clc
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
cld
(bad)
(bad)
(bad)
cli
(bad)
(bad)
(bad)
stc
(bad)
(bad)
push
sti
(bad)
push
div
push
idiv
push
idiv
push
div
push
cmc
hlt
push
repz
repnz
icebp
lock
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
repnz
sti
stc
idiv
mov
add
add
div
icebp
(bad)
sti
stc
idiv
cli
sti
cld
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
push
repz
push
idiv
push
clc
stc
push
idiv
push
div
push
hlt
hlt
push
repz
lock
in
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
out
(bad)
sti
stc
idiv
mov
add
add
clc
div
(bad)
sti
stc
idiv
mov
inc
(bad)
mov
jl
(bad)
mov
jnp
push
jns
push
js
push
jbe
push
out
hlt
cmc
idiv
retf
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
hlt
cmc
push
repnz
out
out
out
(bad)
in
in
in
(bad)
in
in
out
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
mov
mov
ror
(bad)
mov
mov
mov
xchg
xchg
mov
test
mov
out
push
idiv
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
idiv
push
cmc
cmc
(bad)
out
lock
(bad)
in
in
in
(bad)
in
out
out
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
ror
ret
mov
ret
(bad)
inc
(bad)
fs
mov
mov
ret
lea
ret
mov
ret
inc
mov
rol
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
idiv
push
div
push
icebp
icebp
(bad)
out
out
out
(bad)
out
out
lock
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
ret
lea
(bad)
xchg
imul
(bad)
xchg
imul
(bad)
xchg
push
inc
xchg
inc
xchg
gs
xchg
fs
xchg
arpl
les
out
hlt
div
push
div
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
idiv
push
div
push
repnz
lock
out
lock
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
lds
ins
dec
cdq
ins
dec
cdq
ins
dec
cdq
ins
dec
cdq
ins
dec
cwde
imul
cwde
imul
cwde
push
leave
cwde
imul
(bad)
xchg
pop
jmp
out
push
idiv
push
idiv
push
clc
clc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
leave
xchg
arpl
int
outs
dec
sahf
outs
dec
sahf
outs
dec
lahf
outs
dec
popf
outs
dec
popf
outs
dec
popf
outs
dec
popf
outs
dec
popf
ins
dec
popf
ins
dec
cwde
gs
out
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
into
fwait
gs
mov
jb
shl
jae
shl
jb
shl
jb
shl
jno
rcr
out
hlt
cmc
stc
(bad)
clc
stc
cli
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
shl
jne
aad
jne
aad
jne
aad
jne
aad
jne
(bad)
test
call
test
call
test
call
test
call
test
call
movs
ins
jmp
out
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
mov
jle
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
xlat
cmps
imul
fisubr
ja
fldcw
js
fldcw
js
fldcw
ja
fldcw
jo
out
out
hlt
idiv
(bad)
clc
clc
clc
push
div
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
inc
nop
addr16
(bad)
gs
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repnz
sti
stc
idiv
fsubr
jbe
fnsave
jns
fnsave
jp
fnsave
jp
fnsave
jp
fnsave
jb
out
out
repz
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
dec
cdq
imul
idiv
stc
(bad)
sti
stc
idiv
mov
add
add
div
repnz
sti
stc
idiv
jecxz
mov
call
mov
jp
fbstp
jp
loopne
jp
loopne
jnp
loopne
jnp
loopne
jnp
loopne
jnp
loopne
je
out
out
hlt
idiv
push
clc
stc
push
idiv
push
clc
clc
push
idiv
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
call
cmps
ins
call
movs
imul
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
hlt
(bad)
sti
stc
idiv
out
xchg
push
(bad)
(bad)
in
iret
mov
jmp
ret
mov
in
cmp
mov
cmp
mov
jg
in
js
out
out
cmc
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
(bad)
outs
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
std
(bad)
sti
stc
idiv
jmp
loopne
push
(bad)
push
fsubr
(bad)
out
shl
(bad)
in
int
(bad)
jmp
xchg
(bad)
jmp
jmp
out
push
idiv
push
clc
stc
push
clc
clc
push
clc
stc
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
jmp
mov
jo
idiv
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
cld
(bad)
sti
stc
idiv
jmp
push
loop
push
fbstp
push
fldcw
push
(bad)
movs
push
aam
(bad)
out
rcr
in
retf
out
out
hlt
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
in
ret
in
mov
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
cld
(bad)
sti
stc
idiv
in
into
mov
(bad)
cli
jmp
mov
push
fbstp
push
fld
push
(bad)
sahf
push
rcr
jmp
out
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
rol
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
sti
(bad)
sti
stc
idiv
loop
mov
out
cdq
jmp
lds
jmp
les
in
xchg
jmp
ret
xchg
jmp
ret
in
(bad)
jmp
ror
cli
sti
cld
(bad)
cli
sti
cld
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
sti
in
(bad)
sti
in
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
mov
add
add
div
repz
clc
stc
cli
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
clc
clc
stc
push
clc
stc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
clc
stc
cli
(bad)
sti
stc
idiv
mov
add
add
retf
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
retf
int
retf
int3
retf
int3
retf
retf
leave
dec
retf
int3
retf
retf
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
add
and
add
or
(bad)
(bad)
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
xchg
jns
(bad)
(bad)
sar
xchg
jns
(bad)
(bad)
sar
xchg
jns
(bad)
(bad)
sar
mov
push
add
add
xchg
mov
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
add
push
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
add
add
add
and
add
add
add
add
outs
jb
ins
ins
dec
popa
imul
jb
gs
ins
add
and
