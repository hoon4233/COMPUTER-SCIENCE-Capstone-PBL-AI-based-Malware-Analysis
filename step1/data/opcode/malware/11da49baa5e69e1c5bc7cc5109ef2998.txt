add
add
or
add
add
add
cmp
je
add
cmp
je
mov
add
add
add
(bad)
pop
mov
sub
cmp
je
add
sub
add
cmp
je
mov
add
cmp
je
mov
add
loopne
leave
je
mov
add
inc
add
leave
je
add
inc
cmp
add
leave
je
add
fmul
add
cmp
je
add
pop
push
cmp
je
add
mov
cmp
je
add
call
pop
add
jmp
pop
cmp
je
add
test
cmp
add
leave
je
add
cmp
je
mov
inc
add
clc
mov
cmp
je
add
add
inc
add
test
cmp
add
leave
je
add
add
add
add
(bad)
test
add
jo
add
jno
add
xchg
add
adc
add
add
add
add
or
push
imul
jb
je
arpl
inc
push
dec
inc
dec
xor
add
in
add
cld
add
cmp
je
add
jne
mov
cmp
je
add
cmp
je
mov
jmp
xor
add
mov
jmp
mov
or
jne
mov
add
mov
nop
test
je
mov
xor
mov
mov
mov
shl
and
mov
cmp
je
mov
repz
mov
mov
add
jmp
lea
mov
inc
mov
inc
shr
dec
nop
cmp
jne
pop
cmp
je
add
add
add
add
mov
(bad)
push
inc
(bad)
aas
jl
cmps
ins
add
sub
push
push
rol
adc
mov
mov
cs
lds
add
fist
pop
jnp
or
sub
push
fld
or
push
movs
add
add
sub
aam
sub
out
neg
sahf
std
mov
es
jle
call
pushf
fwait
cmps
mov
push
call
push
xchg
fcomp
mov
bound
stc
lea
mov
xor
retf
frstor
fmul
aaa
(bad)
fnsave
mov
sbb
in
mov
or
arpl
int
ja
mov
scas
mov
imul
mov
scas
(bad)
fnstsw
shr
jbe
fsubr
push
pop
mov
xchg
frstor
cs
fadd
retf
outs
inc
arpl
outs
lods
loop
xor
jmp
fimul
loope
lds
outs
and
scas
push
mov
mov
das
xchg
jge
loope
xchg
jge
loopne
mov
pop
jl
(bad)
or
cmp
push
out
ret
jbe
mov
fcmovnb
in
sub
rcr
pop
int3
enter
neg
xor
sti
in
lock
and
movs
shl
sub
xchg
push
pop
outs
mul
ret
loopne
mov
add
jge
aaa
adc
lahf
lea
loopne
mov
sub
std
fst
fwait
add
(bad)
add
xor
es
aaa
cmp
cs
fbstp
cs
fdiv
adc
into
xor
cs
movs
(bad)
pop
add
(bad)
sub
ret
xchg
retf
clc
cs
xor
sbb
pop
sbb
xchg
shl
imul
lods
sub
imul
stos
loopne
mov
loopne
retf
lock
int
jne
or
imul
pop
xchg
and
scas
push
adc
or
loopne
pop
movs
and
outs
push
sub
mov
ja
dec
inc
lock
mov
cmp
push
mov
(bad)
outs
cmp
fcmovnb
scas
je
inc
cmp
in
fcmovu
dec
data16
test
push
jbe
fmul
ja
mov
out
sub
mov
xchg
(bad)
daa
mov
mov
leave
in
mov
je
addr16
mov
fldlg2
cli
fcomp
add
cs
mov
fnsave
sub
lods
data16
mov
out
jb
push
mov
xchg
fst
scas
popa
ja
mov
outs
sub
arpl
mov
ja
mov
div
mov
push
mov
(bad)
outs
cmp
fcmovnb
scas
adc
mul
ret
pop
cmp
fwait
retf
mov
ja
mov
out
sbb
mov
(bad)
jbe
mov
cdq
pop
pop
mov
out
dec
jbe
mov
fwait
pop
pop
mov
outs
sbb
in
xchg
nop
sbb
adc
xchg
or
xor
mov
sub
loopne
cmp
dec
sub
push
scas
xchg
xor
xchg
sbb
xchg
sbb
sub
ja
sar
pop
push
push
xchg
sub
jb
dec
push
mov
fwait
ss
push
mov
imul
cdq
mov
loope
lods
mov
push
cs
pop
mov
pop
mov
mov
std
xchg
push
jl
dec
dec
dec
push
sub
dec
sahf
stos
lods
sub
into
mov
sbb
pop
ja
pushf
pop
mov
xchg
mov
xchg
cmps
inc
(bad)
(bad)
pusha
inc
sub
adc
aas
xchg
fsub
or
dec
sub
neg
jmp
sub
mov
sbb
(bad)
sbb
xchg
loop
push
mov
and
xchg
std
inc
dec
das
mov
xchg
push
mov
push
outs
xor
bound
dec
in
and
js
cmps
dec
add
push
stos
xlat
push
ret
mov
cmp
add
test
mov
adc
or
and
data16
mov
dec
(bad)
(bad)
stc
xchg
movs
jae
idiv
add
(bad)
mov
adc
dec
push
lods
(bad)
inc
push
push
call
test
mov
or
dec
mov
push
mov
call
test
inc
add
pop
test
shl
test
in
mov
call
shr
push
call
test
loopne
pop
pop
call
rcr
jge
inc
cmps
imul
popf
(bad)
adc
sbb
icebp
stos
shl
test
push
inc
icebp
into
xor
cs
jb
mov
xchg
cs
mov
fisubr
dec
xchg
or
in
and
movs
or
mov
cs
pop
inc
cld
mov
xor
xor
and
mov
push
cmps
or
sbb
and
mov
out
or
mov
cmp
and
mov
xor
xchg
cmps
or
mov
nop
test
rol
xchg
or
in
pop
dec
xor
xchg
lods
pop
xchg
push
das
fdivr
das
mov
inc
fwait
leave
sub
adc
imul
dec
sbb
adc
and
jbe
movs
cld
mov
in
and
dec
jp
les
sbb
and
cmp
dec
inc
into
add
jne
pop
push
xchg
shl
add
pushf
mov
adc
aam
jmp
adc
push
cmp
pop
sbb
jg
shr
sbb
neg
test
add
mov
lea
inc
push
jb
pop
jmp
mov
jle
and
xchg
sti
inc
or
es
cmp
mov
jb
jns
pop
xor
sbb
sbb
loope
gs
retf
xor
push
inc
ds
inc
cmp
jb
mov
cmp
ret
getsec
dec
test
inc
nop
aas
jmp
movs
iret
and
xor
jmp
adc
mov
mov
fiadd
std
add
sub
enter
cld
or
add
sti
sub
xlat
inc
push
dec
out
call
sahf
cmp
adc
adc
cmps
cmova
imul
movs
inc
and
and
nop
inc
jp
out
rol
out
inc
(bad)
call
cmp
inc
push
imul
rol
xor
call
add
enter
inc
xchg
clc
sbb
(bad)
cmp
mov
nop
gs
in
pop
pop
mov
push
enter
js
sbb
les
mov
retf
rcr
aad
and
and
in
cli
sbb
or
test
add
push
cdq
dec
adc
rol
xchg
adc
cwde
es
xor
jo
push
pop
mov
div
mov
sub
sub
shl
stos
or
inc
cmp
jmp
jns
and
xchg
jl
mov
push
imul
adc
adc
ds
lahf
pop
pop
ds
fnstcw
repnz
pop
dec
pop
sbb
sbb
shl
or
xchg
push
pop
sbb
add
out
cmp
ins
dec
inc
sub
jne
and
pop
jmp
or
sub
(bad)
rcr
and
or
fucomip
mov
mov
nop
dec
jge
outs
bound
jge
xchg
scas
add
jb
push
repnz
popf
push
jmp
jb
pop
sbb
je
and
xor
xlat
mov
inc
mov
pop
sub
pop
pop
jmp
push
enter
mov
jmp
or
lods
(bad)
push
repz
adc
fs
push
mov
jb
or
sbb
les
sub
call
mov
stc
ror
xor
fwait
sahf
jns
std
push
push
dec
xlat
and
or
dec
fisttp
dec
(bad)
cmp
push
stos
or
dec
aad
push
cmp
nop
mov
ficom
dec
rcl
cs
push
imul
dec
sbb
dec
(bad)
and
mov
push
imul
jmp
push
inc
nop
pop
cli
mov
jg
push
jb
or
inc
cmc
mov
pop
mov
cdq
inc
nop
xchg
sar
inc
xlat
add
sbb
adc
hlt
jp
jmp
pop
pop
adc
mov
and
jb
push
loop
xsave
and
ins
(bad)
mov
and
or
lahf
adc
shl
or
fild
or
in
shl
push
push
and
les
mov
push
shl
test
dec
and
scas
jo
inc
sub
aad
dec
sahf
clc
loope
inc
push
imul
dec
adc
call
retf
repnz
aam
mov
adc
aaa
mov
pusha
jge
xchg
push
pop
inc
nop
scas
push
sbb
mov
aam
pop
or
vmwrite
sub
pop
and
in
inc
ss
push
outs
movs
mov
daa
inc
jle
xchg
nop
cmp
lea
fs
push
xchg
sub
inc
or
jne
inc
nop
pushf
cmp
ss
sbb
fs
scas
aad
mov
je
xor
cli
push
dec
popa
pop
loopne
lods
shl
in
cmp
xor
scas
cmp
mov
dec
mov
inc
jmp
mov
and
jmp
fwait
scas
xor
and
sahf
aam
cs
push
push
jge
cdq
scas
xchg
push
inc
push
push
push
mov
repnz
scas
inc
in
ja
hlt
and
sar
cmp
xor
inc
sti
mov
enter
cmp
jne
inc
nop
xchg
mov
adc
push
lods
sbb
add
mov
jno
ins
mov
mov
push
cmp
aaa
and
sbb
mov
nop
mov
adc
scas
cmc
test
dec
sti
out
mov
scas
hlt
int3
arpl
pop
push
xchg
add
and
add
push
mov
sbb
inc
call
shl
popa
pop
dec
loop
sbb
and
jl
addr16
push
sar
inc
and
inc
mov
cmp
out
mov
nop
jmp
(bad)
(bad)
dec
add
cmps
mov
jnp
cmp
cmp
sub
xor
movs
in
enter
and
mov
xchg
hlt
mov
adc
repnz
jg
outs
xchg
mov
sbb
cmp
push
retf
imul
dec
and
xchg
cli
mov
ds
inc
adc
xchg
cli
cmps
fwait
ror
nop
mov
cmps
dec
nop
outs
(bad)
stc
adc
mov
push
and
pop
cwde
sar
nop
gs
jmp
std
xchg
xor
push
xlat
je
test
fisub
es
out
pop
mov
outs
cwde
mov
adc
ss
mov
or
push
and
fwait
movs
retf
mov
or
cld
inc
lahf
retf
and
in
cmp
mov
neg
add
repnz
das
je
sar
in
test
cld
dec
(bad)
push
ins
xchg
mov
mov
test
dec
jmp
or
jmp
dec
ficom
mov
cmp
div
in
jg
(bad)
int3
mov
cli
push
mov
es
xor
movs
in
sbb
mov
shl
dec
lods
add
mov
vmwrite
push
jp
shr
std
outs
cmp
mov
sbb
(bad)
jnp
sar
dec
mov
imul
jns
dec
or
jp
js
and
adc
inc
cli
jmp
shr
mov
call
inc
cmp
nop
cmps
and
lods
jl
(bad)
das
sbb
push
pop
ror
pop
ins
daa
stc
mov
pop
inc
nop
cmps
into
dec
and
ds
sbb
nop
(bad)
adc
movs
inc
jbe
fs
sbb
ret
stc
shr
std
cmp
mov
inc
mov
mov
cmp
les
and
shl
test
xchg
cld
ret
sub
ss
cmps
inc
inc
adc
xor
mov
push
xchg
lea
les
mov
xchg
daa
scas
movs
gs
lods
push
icebp
adc
scas
dec
sub
inc
daa
and
xor
mov
sti
call
popf
push
pop
inc
nop
je
inc
ins
sbb
mov
nop
xor
aas
inc
mov
sub
lahf
jmp
imul
ja
and
add
pop
test
(bad)
cdq
sahf
jmp
push
cwde
test
mov
es
xchg
inc
nop
test
mov
mov
xlat
add
inc
psubw
adc
aad
xchg
or
inc
out
je
inc
push
imul
pop
(bad)
cmp
dec
or
imul
leave
jne
movs
out
mov
scas
xchg
inc
jno
inc
dec
je
and
cmp
push
jno
imul
fisttp
mov
mov
sub
aad
(bad)
or
or
icebp
mov
icebp
mov
and
inc
jbe
pop
leave
nop
add
jmp
sti
inc
pop
pop
jno
leave
pop
xor
cmp
sub
mov
push
mov
jecxz
add
jmp
ror
xchg
cdq
sbb
pushf
cmp
sbb
and
pop
mov
inc
fs
pop
inc
mov
mov
mov
inc
cwde
xlat
and
dec
pop
inc
(bad)
cmps
push
pushf
gs
fisub
xchg
xor
repnz
cli
inc
ror
xor
mov
enter
ficomp
inc
xchg
fldcw
iret
call
mov
fs
inc
scas
cmp
jg
and
or
sti
mov
pop
push
div
dec
test
enter
nop
adc
jmp
sub
sbb
and
or
xchg
(bad)
das
cmp
inc
nop
mov
cli
in
cmps
pop
sar
inc
xor
mov
movs
push
and
movs
xchg
and
nop
gs
jmp
add
and
repnz
ror
dec
mov
sbb
pop
ds
das
inc
dec
fisttp
nop
pcmpeqw
jno
push
fstp
mov
cmp
mov
bound
sbb
repnz
or
cmp
enter
sbb
lahf
ds
push
jl
shl
inc
shl
test
sbb
mov
cmp
xchg
jns
mov
movs
push
sbb
xchg
or
or
mov
dec
call
dec
nop
gs
cmc
mov
(bad)
or
adc
pop
pop
adc
ins
xchg
es
test
leave
and
adc
and
movs
dec
cmp
cmp
jle
inc
cwde
loope
and
push
and
or
test
test
xchg
ins
(bad)
out
(bad)
cmp
imul
fs
mov
jne
sahf
imul
cmp
punpckhwd
rol
xchg
xchg
pop
sbb
dec
hlt
nop
push
dec
std
and
and
pop
dec
or
shl
adc
outs
(bad)
(bad)
and
pop
ja
push
jmp
mov
ins
nop
test
mov
je
addr16
xor
mov
and
mov
xchg
mov
sbb
aad
xchg
or
retf
xchg
adc
ret
mov
inc
sahf
(bad)
inc
dec
loop
hlt
lahf
xchg
jne
add
jmp
out
mov
push
pop
inc
nop
icebp
jp
addr16
sbb
sub
jmp
sbb
movs
mov
addr16
addr16
jmp
scas
test
cmps
repz
sar
mov
loop
cmp
and
jg
xlat
psubusb
sbb
sti
jne
std
ret
ins
mov
enter
mov
fs
icebp
adc
sbb
gs
jmp
xchg
and
mov
movs
and
jl
dec
in
xor
sub
adc
adc
call
or
jge
fistp
xchg
sar
inc
sub
lods
ss
mov
or
aad
ds
icebp
push
xor
fs
jp
std
cmp
outs
out
nop
ss
dec
inc
or
pop
dec
sar
fisttp
retf
enter
imul
or
mul
leave
pop
xor
sbb
xchg
add
(bad)
mov
aam
xor
dec
cmp
add
movs
push
bnd
or
hlt
xor
pop
adc
idiv
jne
arpl
jno
cmp
arpl
frstor
jmp
push
inc
nop
push
jnp
test
xor
and
jns
in
xor
repnz
mov
aam
mov
jae
or
and
inc
mov
je
jns
scas
mov
add
fidiv
xor
fs
aad
hlt
fdivr
add
mov
mov
push
jmp
(bad)
iret
and
and
jne
dec
adc
dec
or
and
push
sbb
aas
jl
jbe
lods
pop
je
dec
nop
int
mov
mov
cmp
and
inc
pop
mov
pop
and
movs
test
or
call
and
adc
add
(bad)
mov
sbb
add
shl
inc
ins
jnp
sub
sub
fld
cmp
fnstcw
stos
fwait
test
mov
mov
xchg
(bad)
push
call
adc
movs
(bad)
or
cld
dec
or
dec
dec
pop
adc
push
ss
(bad)
and
imul
cdq
cli
test
push
and
sub
scas
test
punpcklbw
inc
in
mov
(bad)
lods
scas
out
xor
aad
nop
cmps
mov
sub
pusha
jb
push
and
movs
and
add
dec
jmp
fmul
sti
aas
or
xor
call
push
ja
outs
pop
outs
sbb
jmp
xchg
enter
xchg
inc
movs
pop
sub
inc
inc
les
pop
xor
out
dec
mov
mov
mov
repnz
jp
lds
cs
in
shr
gs
cmp
dec
fld
inc
cld
pop
or
retf
js
test
jp
jno
outs
sar
(bad)
int3
out
in
xor
cwde
mov
inc
arpl
pop
cmp
jecxz
stos
popf
add
jo
inc
xchg
jo
ret
retf
lahf
push
pop
fdivp
push
mov
stos
lahf
and
icebp
push
mov
and
sub
enter
mov
or
or
adc
inc
sub
repnz
je
iret
ds
dec
pop
repnz
rcr
or
ror
lea
or
xor
pop
cmp
xchg
push
push
inc
test
mov
into
lds
jmp
push
call
test
jmp
and
std
fucom
pop
test
(bad)
(bad)
sub
call
mov
scas
inc
inc
popf
mov
push
stc
mov
jo
xchg
sbb
mov
out
inc
popa
lock
jns
lds
lods
push
lahf
pop
dec
xchg
pop
and
pop
push
sbb
fidivr
sub
in
jb
fistp
cmps
sti
or
test
cmps
mov
iret
sbb
inc
inc
inc
xchg
push
adc
jecxz
(bad)
mov
xchg
sbb
enter
add
(bad)
or
fcmovbe
xchg
sub
out
ss
fsubr
mov
loop
xchg
popf
ins
mov
jp
stc
mov
dec
test
mov
div
or
cmp
sub
ja
les
and
popa
jp
cwde
push
push
mov
mov
xor
adc
fidiv
dec
addr16
jbe
leave
mov
loop
mov
leave
das
inc
outs
es
mov
mov
ss
sub
data16
xchg
or
scas
leave
adc
into
adc
sti
inc
cmps
rcl
mov
mov
jge
jle
pop
dec
xor
cwde
retf
sub
mov
sti
fucomip
retf
sub
sub
and
retf
leave
bound
cld
push
pop
adc
retf
adc
cmp
stos
mov
out
and
mov
mov
pop
push
xchg
in
dec
mov
repnz
pop
out
dec
icebp
fild
rcr
lock
cmps
popa
mov
mov
or
ja
js
xchg
dec
add
das
jl
pop
(bad)
mov
pop
std
adc
mov
iret
fwait
daa
test
push
mov
or
mov
(bad)
push
xchg
jg
pop
mov
jge
dec
ss
mov
mov
adc
cmp
retf
mov
sub
push
cs
repnz
ret
xchg
or
adc
jle
mov
xchg
sbb
lahf
jmp
ds
xchg
mov
jl
sbb
dec
push
pop
retw
inc
(bad)
test
dec
cmps
dec
dec
sub
add
repz
imul
xchg
bound
cmp
mov
sbb
aam
jne
push
repnz
mov
js
inc
xchg
bound
xor
sbb
ins
ja
jmp
aam
(bad)
fisttp
sar
or
mov
mov
sahf
xchg
pop
div
push
aad
xor
std
xchg
push
mov
inc
push
mov
sbb
mov
popf
imul
sub
lahf
push
inc
test
repz
fsubr
dec
int
pop
pop
test
daa
shr
jo
mov
inc
mov
sub
aam
cs
leave
and
icebp
push
les
and
xlat
add
adc
enter
jmp
test
xchg
paddq
xchg
push
mov
mov
push
dec
dec
cs
add
push
stc
mov
mov
push
scas
outs
pop
cmp
ror
mov
std
test
pop
imul
arpl
fimul
popa
mov
dec
mov
cmp
jle
test
push
les
pushf
mov
inc
mov
push
mov
shl
mov
daa
bound
mov
dec
and
je
adc
out
jmp
xor
call
cmp
pushf
push
xchg
enter
push
jmp
or
adc
outs
stos
sbb
mov
jno
movs
mov
mov
movs
shl
out
mov
inc
and
stos
mov
aas
ror
int
rcl
or
dec
dec
mov
bound
je
mov
cli
addr16
ror
dec
daa
jmp
jmp
sbb
fsub
mov
ja
sub
inc
cmp
mov
in
xchg
adc
cli
push
cmc
jno
and
mov
push
xlat
or
stos
clc
jle
push
jne
popf
daa
nop
and
or
push
xchg
push
hlt
xor
jge
aas
les
cs
cli
and
bound
js
out
xor
xor
jbe
enter
sbb
push
sub
jae
add
shl
gs
dec
mov
in
mov
(bad)
mov
xlat
popf
xchg
jnp
jle
in
xor
retf
imul
clc
push
leave
hlt
jno
mov
nop
xlat
jne
adc
in
xchg
xlat
dec
add
ss
xlat
and
xor
inc
ins
les
inc
pop
sbb
adc
enter
jbe
push
fadd
sbb
dec
(bad)
mov
jae
mov
in
call
mov
mov
xchg
cmp
pop
inc
imul
sbb
out
test
fwait
jno
in
pop
lea
pop
sub
cs
in
pop
dec
inc
(bad)
stos
fidiv
into
inc
jecxz
mov
out
int3
add
jb
popf
push
mov
or
loopne
popa
addr16
mov
xchg
scas
lods
fcomp
and
in
jp
add
pop
out
xchg
cmp
mov
adc
cs
daa
pop
lods
inc
icebp
scas
and
stos
ds
mov
into
mov
test
pop
mov
sar
pop
lahf
mov
lods
call
add
push
cmp
ret
shl
pop
lds
jecxz
lods
add
add
aas
ds
dec
dec
jecxz
mov
mov
pusha
push
(bad)
and
or
arpl
push
arpl
imul
mov
pop
jge
repnz
pextrw
(bad)
test
test
in
gs
xor
in
js
call
ret
rcl
imul
loop
ins
push
test
jge
mov
aam
dec
outs
mul
aam
mov
ins
cdq
sub
fist
xchg
sbb
cmp
aas
cmp
fcmovb
scas
xchg
das
loop
mov
ret
cmp
xchg
movs
push
(bad)
sti
std
inc
fnstcw
or
cli
fs
les
pop
test
clc
xchg
mov
inc
jbe
or
ja
int
stc
mov
xor
movs
out
mov
and
ret
pop
xor
fiadd
cmp
push
cwde
pop
js
aad
leave
or
fst
into
cmp
pusha
xorps
adc
aad
push
xor
mov
ins
cmp
ds
sub
pusha
stos
mov
mov
and
pop
loop
call
mov
mov
push
(bad)
push
fs
outs
pop
dec
mov
push
xchg
fbld
push
mov
in
cmp
stos
dec
push
jge
mov
push
jbe
mov
cmps
mov
cs
imul
stos
fdiv
and
xchg
shl
and
cmc
cmp
mov
jae
pushf
cwde
fld
sub
loopne
retf
xlat
sub
outs
sbb
mov
scas
ret
mov
mov
js
or
nop
mov
pop
fwait
sub
inc
ret
inc
loope
sub
(bad)
out
lea
(bad)
dec
in
lds
pop
adc
shl
and
retf
cmp
adc
das
mov
das
icebp
daa
ins
jbe
or
pop
jl
mov
ins
push
jne
repnz
sahf
pop
imul
aad
jbe
push
(bad)
jl
add
repz
data16
or
cmps
rcr
inc
inc
or
loope
mov
add
fs
repnz
or
push
pushf
and
jne
jbe
dec
dec
scas
sub
aad
mov
pushf
push
icebp
sbb
or
dec
jae
shl
sub
ins
ret
neg
mov
adc
ficom
xlat
outs
lock
popf
mov
cmp
adc
ins
bound
pop
nop
call
pop
in
push
sub
pop
xchg
fwait
(bad)
jno
pop
or
test
add
ror
pop
mov
dec
sbb
lods
add
icebp
test
xor
call
lock
sbb
sbb
push
jne
iret
out
scas
sub
jmp
push
push
cs
(bad)
jmp
jle
enter
cmps
in
pop
adc
bound
ja
push
push
jg
adc
addr16
xchg
add
mov
push
into
lods
xchg
jae
stos
add
pcmpgtb
(bad)
and
scas
xchg
popf
sub
add
mov
cmp
cmp
jns
mov
jae
xchg
pop
scas
inc
ror
imul
sar
sub
cmp
outs
mov
aaa
mov
mov
mov
retf
push
mov
dec
jnp
dec
xchg
push
mov
add
jne
(bad)
retf
mov
mov
movs
jb
pop
and
popf
and
jne
pusha
dec
repz
xchg
sahf
xor
xchg
aas
xchg
out
jg
data16
movs
mov
dec
(bad)
fst
fiadd
mov
pushf
sbb
pop
lea
(bad)
ins
adc
jno
dec
aas
adc
stos
(bad)
jecxz
xchg
pop
mov
inc
gs
lahf
repnz
fs
xchg
mov
add
push
xchg
and
test
ss
sti
gs
mov
fwait
sbb
adc
xchg
mov
add
push
stos
imul
data16
cmp
xchg
cmp
lea
out
push
jbe
mov
(bad)
out
push
jbe
mov
je
mov
xchg
mov
adc
or
inc
(bad)
ror
lea
scas
out
add
sub
(bad)
jmp
std
arpl
std
es
outs
sbb
mov
inc
outs
cmp
inc
pop
inc
test
cmp
xchg
call
inc
movs
mov
stos
sbb
sub
add
loope
sub
inc
cmp
icebp
jns
jnp
fsubr
paddusw
pinsrw
sbb
cwde
mov
mov
mov
cmp
es
pop
or
cmp
stos
mov
ret
shl
rol
imul
ret
imul
fmul
loopne
inc
jl
inc
add
aas
dec
je
sub
push
icebp
xchg
mov
jbe
or
in
call
adc
inc
mov
pop
daa
popa
mov
jge
adc
outs
repnz
mov
aaa
push
ret
jg
fwait
rcr
push
jge
cmps
js
fmul
icebp
cmp
cmp
pop
in
inc
pop
cmp
mov
mov
cmp
loope
test
mov
mov
arpl
push
scas
ficomp
inc
jns
daa
sub
mov
inc
push
dec
cmp
pop
cs
mov
jle
outs
les
aaa
ins
sbb
leave
mov
push
adc
jmp
fwait
ror
sub
cmp
(bad)
fiadd
fs
inc
bound
test
cmp
lods
loope
pop
aam
inc
pop
sar
jnp
scas
(bad)
fucomip
lock
les
adc
ins
sbb
jns
dec
ror
or
(bad)
inc
test
in
(bad)
xchg
dec
adc
js
mov
cmp
pop
fisttp
mov
ror
fst
xlat
xchg
lahf
(bad)
mov
or
neg
pop
cmp
adc
cmc
pop
stos
jns
mov
xchg
push
sub
add
pusha
call
out
xchg
hlt
xchg
sbb
xchg
daa
mov
lea
sahf
sub
loope
js
bound
cmp
in
dec
pop
out
aam
scas
lock
not
neg
mov
xchg
test
cmc
cmp
ja
lock
mov
jnp
fdivp
or
call
jae
not
adc
and
sbb
aam
push
cwde
mov
sub
pop
fsubp
cmp
sub
jb
and
mov
out
(bad)
out
in
pop
sub
(bad)
dec
outs
icebp
cmps
bound
call
cmp
sub
inc
or
jns
stc
mov
(bad)
fadd
pop
xor
cmp
outs
cmp
or
sub
mov
xchg
iret
dec
mov
adc
mov
inc
cdq
dec
loopne
fstp
jmp
xchg
sahf
and
sub
test
rcl
in
popf
js
imul
cmp
xchg
sub
xor
mov
fisub
push
fidivr
enter
fmul
jb
push
aas
cs
mov
pop
ror
xchg
js
or
or
movs
mul
jno
movs
xor
jecxz
bound
out
xor
test
ret
add
cld
mov
leave
jmp
clc
es
sbb
lods
fwait
in
push
aas
push
fsub
pusha
mov
mov
xchg
(bad)
mov
xor
push
xchg
xor
or
xchg
adc
stos
xchg
movs
pop
mov
lds
mov
mov
or
pop
sbb
neg
or
cmp
bound
lahf
dec
sahf
retf
outs
dec
test
push
mov
mov
mov
mov
inc
aad
xchg
sub
mov
mov
inc
mov
rol
pop
jbe
fistp
pop
pusha
and
sub
(bad)
pop
push
imul
push
jle
pop
lock
jl
enter
test
push
xchg
loop
imul
push
add
(bad)
(bad)
push
gs
stos
clc
mov
test
shl
xor
sbb
jne
or
or
xchg
dec
xor
cs
ficomp
or
push
jg
mov
jmp
push
pop
xchg
push
ds
mov
aam
inc
jmp
mov
inc
scas
cmp
mov
aaa
xor
jge
test
push
shl
mov
and
adc
in
push
nop
add
jbe
outs
rol
bound
test
and
jns
gs
shl
in
cmc
mov
mov
retf
je
fucomi
mov
hlt
shl
and
pop
dec
add
sbb
inc
shr
jecxz
push
mov
fild
rcl
adc
inc
imul
ror
call
in
aam
cmp
retf
xlat
loop
fistp
shl
sahf
enter
inc
lock
jbe
jb
xor
or
dec
bound
mov
clc
jbe
loop
or
out
(bad)
fdiv
pop
mov
cld
push
xchg
bswap
(bad)
js
fild
jo
add
bound
jecxz
and
pop
test
add
fwait
mov
enter
mov
icebp
mov
jo
mov
je
lods
mov
xor
(bad)
and
enter
mov
mov
push
xor
jl
push
xchg
lahf
out
dec
sub
fs
lock
xor
add
inc
out
fs
and
jle
lock
adc
or
jp
xchg
sub
push
cmp
sar
xchg
repz
sub
fs
sub
pop
ja
jge
mov
aad
dec
stc
dec
pop
inc
imul
pop
(bad)
test
inc
ins
sahf
push
xor
sub
mov
inc
mov
mov
retf
ss
sbb
es
sbb
aas
push
cmp
xchg
fwait
dec
xchg
sar
mov
loop
push
dec
push
ror
add
(bad)
hlt
inc
add
into
jae
mov
(bad)
sbb
pop
ror
test
sub
push
(bad)
stc
cmp
or
scas
pop
sub
cmps
sar
ret
dec
inc
ins
cmp
inc
jge
fist
cmc
cmc
iret
jmp
xlat
jg
inc
in
mov
sub
retf
mov
inc
call
mov
mov
add
retf
xchg
xchg
icebp
ror
adc
lods
rol
sub
push
nop
or
test
inc
sbb
arpl
dec
or
(bad)
mov
sbb
xchg
sub
jle
jae
lods
adc
arpl
mov
inc
and
clc
mov
shr
xor
bound
es
jo
sub
and
pop
outs
lods
iret
outs
je
iret
mov
adc
sbb
mov
movs
into
adc
and
test
scas
mov
stos
pushf
cmc
dec
outs
cmps
sbb
push
mov
ins
xchg
(bad)
xchg
scas
scas
loopne
bnd
mov
fidiv
xor
mov
sbb
fcomp
fdivr
mov
enter
and
enter
push
cmp
jl
sbb
test
xchg
jle
or
xchg
and
sbb
aam
fmul
and
imul
push
push
dec
sub
ror
out
push
mov
in
fadd
scas
jo
or
fidivr
inc
mov
jns
call
cmps
and
clc
int
push
pop
lea
dec
sbb
xlat
lods
ret
and
dec
out
push
mov
iret
loope
repz
lds
ret
adc
shl
ins
addr16
mov
arpl
lods
int3
jecxz
pusha
pop
push
or
inc
sbb
xor
lock
dec
dec
icebp
xchg
push
test
test
ror
adc
in
sub
aas
or
jne
dec
ror
pop
xor
mov
test
icebp
in
jp
push
test
cwde
loope
mov
jns
adc
jns
and
int3
in
shr
aam
sub
dec
or
push
adc
sbb
adc
cmp
sub
je
dec
nop
les
aas
movs
neg
rcr
rcr
dec
inc
ja
scas
inc
adc
pop
mov
sbb
fnstenv
xor
jecxz
pop
xor
cld
inc
gs
sbb
fistp
daa
data16
call
xor
(bad)
mov
frstor
int3
adc
pop
movs
bound
cwde
cdq
dec
push
retf
cmp
lds
mov
xchg
retf
sbb
retf
std
and
movs
loope
mov
pop
loop
sbb
inc
or
xchg
push
fadd
inc
jge
ins
adc
test
sbb
bnd
xchg
add
jge
sbb
lods
cmps
les
dec
add
shr
sti
and
js
push
cmp
mov
ds
scas
test
dec
dec
sub
fcos
clc
sbb
inc
push
and
dec
loope
jmp
jo
hlt
inc
xchg
aaa
push
mov
xchg
pusha
jle
inc
xchg
fiadd
dec
mov
daa
imul
dec
jmp
push
pop
pop
sub
add
or
repnz
or
mov
repnz
movs
sub
and
push
sbb
push
cmps
mov
adc
sub
stos
mov
xchg
cmp
mov
xchg
shl
xchg
adc
ret
pop
cmp
jmp
lods
jo
and
cmc
ret
xchg
jecxz
in
dec
or
lock
and
jae
jo
add
sti
cmps
dec
call
test
inc
test
mov
pusha
xchg
cmp
cmp
fs
outs
aam
inc
push
dec
xchg
xchg
out
xchg
inc
sbb
jb
xchg
dec
jo
xchg
fimul
pop
pop
inc
fbld
loopne
push
pop
or
jge
popf
ficom
mov
fiadd
push
cmp
pop
push
ror
dec
and
dec
stc
adc
out
add
ficomp
aaa
inc
push
cmp
clc
sub
sbb
mov
in
in
(bad)
fstp
mov
stos
sti
bound
xlat
inc
xchg
adc
xchg
out
push
out
dec
aaa
lahf
push
ins
xchg
jo
out
iret
rol
mov
seto
sbb
out
ret
aad
data16
in
and
inc
or
popf
cmp
inc
sbb
rsm
mov
es
lds
aam
sti
mov
popf
cmp
add
loop
(bad)
repz
cdq
movups
cmc
loopne
int3
sbb
ja
sub
(bad)
mov
leave
inc
arpl
add
push
mov
push
mov
std
push
retf
mov
sub
daa
sbb
jmp
dec
push
or
iret
pop
mov
test
push
sbb
cld
pop
lds
and
call
popf
inc
mov
stc
lds
inc
cmps
add
icebp
xor
pop
xor
enter
outs
and
jnp
or
(bad)
pop
jp
and
in
mov
(bad)
loope
or
pop
mov
mov
mov
xchg
mov
cmp
cmc
and
popa
mov
or
or
push
xor
mov
popf
arpl
out
xor
dec
sub
mov
test
pop
je
xor
mov
jg
push
mov
xchg
fmul
(bad)
push
test
mov
movs
mov
jle
cmp
dec
mov
cmp
push
push
push
jns
(bad)
aad
fwait
out
mov
mov
clc
scas
idiv
repz
or
cmp
sbb
retf
imul
inc
inc
sub
js
test
or
fld
sub
mov
sub
aas
mov
adc
pop
xor
aas
push
adc
mov
xor
(bad)
xchg
enter
jnp
daa
in
lea
and
fs
push
xor
inc
xchg
dec
movs
and
ds
fadd
cld
lods
or
push
mov
lods
add
fisubr
sbb
(bad)
cmp
loop
loop
ja
pop
adc
stos
sub
stos
and
xchg
shl
cli
out
icebp
mov
data16
rol
retf
data16
imul
add
repnz
cmp
aam
mov
test
fcmovu
scas
sbb
xor
pop
jno
out
or
adc
xlat
push
enter
cmp
xchg
aad
mov
push
mov
cdq
dec
and
ins
fwait
mov
pop
out
inc
or
outs
clc
dec
in
pop
cmp
pop
sub
cdq
fild
sti
les
xchg
mov
xchg
(bad)
and
ffreep
retf
mov
cmc
push
or
xchg
adc
xchg
inc
or
or
pop
mov
xchg
(bad)
add
jno
xchg
inc
dec
xchg
mov
in
mov
pusha
jmp
xor
cs
xor
push
pop
imul
pop
mov
fnstsw
mov
cld
mov
lds
cmp
loope
and
push
es
pop
adc
icebp
xor
mov
sti
mov
fistp
cmp
jl
fwait
hlt
clc
xor
pop
mov
mov
cmp
push
or
inc
and
push
lahf
push
push
add
sti
mov
adc
pop
push
dec
xchg
jecxz
mov
sub
sub
test
shr
add
shr
mov
fisttp
pop
dec
or
inc
jb
sahf
jb
in
test
les
mov
or
hlt
int3
call
std
pop
enter
hlt
dec
xchg
push
sub
dec
in
in
icebp
xor
xchg
test
mov
xchg
popa
sahf
into
cmp
xchg
lahf
fsub
gs
or
dec
popa
outs
lock
or
ja
int
pushf
lahf
and
sbb
fimul
lds
sub
lds
fdiv
jp
jmp
push
stos
shr
aaa
aad
sbb
sbb
xor
jno
mov
out
mov
push
jbe
sub
mov
in
dec
gs
mov
xchg
movs
jmp
xlat
pop
mov
dec
xchg
fidiv
inc
and
ds
retf
in
xor
pop
ins
push
jmp
push
or
inc
call
frstor
(bad)
push
data16
imul
(bad)
jno
sub
cmps
shr
and
les
push
cmc
pop
psllw
mov
mov
jns
rcl
(bad)
retf
push
dec
and
lods
jl
mov
test
sti
dec
in
arpl
scas
ret
sub
and
mov
xor
jge
sti
stos
popa
pop
or
inc
and
rcl
out
xchg
lds
movs
out
iret
jg
pop
dec
add
sbb
test
jle
sbb
(bad)
pop
arpl
mov
outs
es
xor
maskmovq
div
and
mov
sub
mov
mov
xor
repz
out
jmp
xlat
sub
mov
adc
pop
rcl
inc
arpl
adc
call
jle
dec
movs
sub
mov
sbb
icebp
ret
xchg
stos
and
xchg
(bad)
bound
push
xor
cmpxchg
fptan
pop
test
push
ret
adc
ins
imul
xchg
xor
stc
xor
pop
dec
cmps
jle
call
outs
mov
arpl
outs
add
int
ja
test
icebp
mov
add
xchg
idiv
xor
lock
mov
pop
inc
int3
fld
mov
rcl
bnd
sub
repz
mov
cmp
inc
mov
es
in
aas
test
xor
enter
dec
cmps
sti
jg
shl
test
mov
int
xchg
sub
popa
popa
jne
(bad)
push
sbb
mov
cmp
aad
cmp
ja
push
push
arpl
daa
fiadd
int
xor
fs
adc
cmps
movs
sub
lods
mov
or
int3
inc
lock
lods
push
(bad)
pop
xchg
ror
arpl
in
push
outs
mov
(bad)
scas
cwde
sub
mov
ds
pop
cmp
sub
add
sbb
xchg
xor
pop
(bad)
jo
add
jne
or
sbb
cmp
cmp
jge
jmp
mov
test
pop
ins
loopne
xor
out
or
jbe
test
cmps
mov
add
mov
ja
je
sbb
mov
pop
cmps
cmp
out
xor
sub
mov
hlt
adc
mov
inc
in
push
cli
in
or
cmp
int
xchg
lods
push
cmp
pop
loop
push
xor
data16
fs
sahf
(bad)
mov
(bad)
push
stos
or
fdivr
ins
lods
jmp
xchg
mov
and
inc
ins
in
cmps
mov
and
fbld
jae
mov
xlat
movs
mov
dec
xchg
fmulp
dec
jp
mov
mov
pop
jecxz
jmp
push
mov
cmc
mov
lods
fsubr
es
inc
xchg
xlat
out
and
mov
and
inc
pop
adc
lea
je
hlt
test
sub
mov
sbb
out
outs
retf
or
cmps
xor
scas
sbb
pop
(bad)
xor
pop
dec
xor
cmp
fmul
out
push
sbb
jp
addr16
push
xchg
mov
clc
sahf
les
or
gs
pop
xor
sub
retf
fsub
std
test
dec
es
mov
adc
sub
or
loop
push
cmc
cmp
fs
sub
and
adc
jl
bound
mov
and
or
ret
inc
xor
mov
xchg
fs
test
(bad)
xchg
scas
pop
jne
stos
retf
jmp
(bad)
imul
jecxz
cmp
pushf
mov
(bad)
jns
out
cmc
mov
xchg
add
ja
ret
cmp
sub
dec
retf
jne
dec
shr
in
and
and
mov
aaa
mov
add
or
mov
sbb
xchg
pop
retf
push
leave
imul
ins
jg
sub
and
adc
inc
pushf
call
dec
and
mov
loopne
cmp
pop
fst
adc
xor
mov
mov
push
les
fst
mov
leave
test
xor
push
lahf
call
cmp
sbb
repnz
xor
pop
sub
adc
inc
(bad)
mov
xchg
pushf
ret
mov
enter
or
shr
fsub
rol
cmp
rcr
push
mov
xor
call
aam
mov
push
and
mov
jbe
cmp
cmp
cmc
or
and
popa
xchg
or
mov
neg
push
lods
popa
cmc
iret
dec
aam
adc
bound
mul
add
pop
pop
sub
mov
sub
push
mov
loope
mov
iret
jne
sub
enter
mov
movs
aas
mov
fidiv
pop
shr
jno
sbb
cmp
mov
pop
sub
(bad)
jno
sub
fisttp
mov
and
push
pop
(bad)
(bad)
rol
adc
clc
mov
ror
xor
ja
push
xor
sub
js
iret
pop
es
les
test
or
repnz
ficom
jmp
mov
push
pop
xchg
jg
movs
pop
dec
daa
stos
adc
and
and
nop
pop
push
inc
ret
loop
(bad)
shl
lahf
inc
pop
and
mov
movs
shl
push
iret
jl
movs
inc
inc
mov
mov
push
mov
push
jmp
mov
test
fistp
std
fsubr
sub
retf
mov
popf
jae
icebp
xchg
push
sahf
jl
adc
rcr
rcr
in
enter
xchg
test
cmps
mov
mov
inc
mov
mov
jnp
into
dec
xchg
mov
in
push
xchg
pushf
or
sub
pop
inc
pop
push
sub
mov
pusha
(bad)
inc
inc
ins
sub
popw
mov
mov
ret
fdivr
call
(bad)
and
dec
in
out
mov
jb
repnz
out
cmp
jb
adc
test
test
daa
scas
pop
mov
(bad)
inc
ret
pop
gs
retf
fwait
mov
dec
sbb
(bad)
loop
sub
movs
fldpi
push
mov
rcr
outs
adc
stos
out
loopne
and
rol
push
mov
push
iret
out
dec
jecxz
outs
out
fsubr
adc
dec
data16
inc
movs
sub
sbb
sub
adc
lea
sbb
mov
pop
mov
in
cmp
movs
inc
mov
mov
mov
mov
retf
hlt
add
or
mov
(bad)
jmp
push
ds
inc
jl
inc
aaa
aaa
pop
shl
jno
jp
jns
int
je
sbb
pop
stos
pop
pop
or
jns
add
push
pop
retf
mov
mov
mov
in
jmp
scas
mov
ror
mov
inc
mov
seta
jne
add
mov
sbb
cld
add
mov
stos
in
jne
cmp
mov
repz
mov
dec
ins
xchg
adc
inc
aas
and
add
test
inc
out
inc
mov
jns
xchg
and
jge
and
jmp
jle
fs
mov
push
dec
iret
and
jg
sub
outs
add
in
sub
loopne
aaa
adc
cmp
nop
pop
jmp
sbb
push
ja
retf
ins
jbe
aaa
aad
xor
dec
fld
and
add
jb
data16
push
push
mov
sub
aad
mov
ret
nop
pop
jp
jae
cmp
retf
mov
jbe
sti
mov
mov
jb
inc
movs
xchg
inc
inc
pop
dec
jno
retf
sub
lahf
movs
add
pop
or
jbe
sbb
pop
stos
xlat
pop
sub
and
inc
add
imul
jge
cmp
push
xchg
inc
inc
imul
adc
jne
dec
jl
stos
mov
in
hlt
jl
stos
inc
or
lahf
inc
mov
loopne
mov
test
jl
repnz
lods
popf
dec
int
sub
xor
adc
or
sti
pop
scas
lahf
rcr
dec
aam
jmp
nop
shl
pop
aad
sub
push
push
push
xor
and
movs
mov
push
dec
adc
jnp
out
pop
dec
xchg
test
je
test
clc
xor
push
jl
fsub
xlat
call
jne
lods
inc
jmp
ffree
repz
xchg
retf
mov
mov
and
add
xchg
fcomp
movs
pop
mov
sub
mov
fwait
retf
in
mov
cmp
test
inc
les
cdq
mov
dec
adc
and
mov
mov
mov
lds
add
mov
sub
push
aam
loope
popf
std
pop
pop
xchg
sbb
sbb
adc
sbb
xchg
in
sbb
dec
pop
mov
mov
cmp
ror
inc
push
mov
aad
fidivr
imul
jbe
popa
mov
call
cwde
fist
jae
addr16
fisttp
jnp
outs
popa
push
and
retf
xor
test
cmp
lods
and
adc
out
mov
ja
sbb
sbb
pop
ret
and
shld
lahf
fld
aaa
jbe
mov
cmps
sar
cmp
rol
ds
test
dec
xchg
pop
jp
sub
xor
(bad)
es
jo
and
add
pop
or
inc
adc
fcom
inc
cli
jo
aaa
mov
pop
pop
aaa
test
xchg
dec
js
addr16
dec
nop
(bad)
mov
(bad)
in
call
lods
popa
fwait
inc
jmp
stos
(bad)
cmp
arpl
push
pop
cmc
mov
enter
push
lods
adc
xchg
mov
sub
jns
sar
ins
adc
xor
push
xchg
push
popf
inc
das
retf
push
lea
retf
jecxz
cmp
xchg
retf
add
xor
loopne
arpl
stc
bound
nop
scas
pop
jle
scas
movs
daa
je
inc
dec
lahf
jae
cs
inc
mov
mov
(bad)
jmp
icebp
pop
out
cld
mov
mov
daa
mov
adc
leave
aaa
fisubr
or
ror
rcl
iret
dec
xor
push
fcomp
pop
dec
cmp
mov
mov
daa
push
gs
jp
mov
dec
sub
jge
(bad)
and
data16
fldcw
stos
jl
in
mov
aaa
pop
or
cmc
jae
dec
imul
xor
adc
push
inc
pop
popf
add
pop
imul
movs
jae
sbb
lods
(bad)
rol
leave
mov
les
(bad)
ss
cmp
out
or
mov
(bad)
in
(bad)
and
or
xchg
xchg
(bad)
lods
rol
dec
loop
mov
aas
sbb
cmps
dec
jmp
jnp
cli
or
jecxz
repz
dec
jge
jne
idiv
pop
imul
pop
mov
loop
movs
(bad)
cs
xor
jp
xor
xor
push
fimul
ds
fs
pop
aam
lock
imul
leave
or
pop
sub
in
push
movs
adc
in
adc
in
inc
ffreep
retf
outs
fnstsw
aad
or
imul
push
lahf
or
fnstsw
(bad)
and
ficomp
add
xchg
mov
es
pop
push
push
(bad)
or
fcmove
sub
cmp
mov
adc
cmp
xor
idiv
movs
pop
mov
adc
fisubr
psrad
ret
add
mov
out
outs
out
xchg
lahf
sub
mov
imul
push
addr16
mov
dec
aaa
push
push
mov
(bad)
aaa
pop
fimul
cmc
out
outs
pop
fisub
jo
(bad)
sub
in
push
imul
out
push
ror
shr
hlt
call
push
rcr
lock
pop
into
jecxz
sbb
mov
shr
stos
add
mov
into
inc
pop
js
and
repz
xor
inc
adc
and
mov
dec
stos
push
and
loope
leave
ret
stos
jnp
cmp
adc
push
(bad)
test
call
xor
jnp
pop
mov
pop
mov
jne
mov
pop
fdivr
dec
(bad)
sar
jecxz
cld
or
int3
imul
and
dec
sub
call
test
jno
outs
push
imul
aad
push
pop
mov
and
dec
pop
jo
sbb
pop
pop
sbb
jns
xor
imul
stc
ins
ror
mov
cdq
aaa
(bad)
je
aaa
jne
cmp
ins
dec
int
(bad)
xor
les
in
out
inc
jns
pop
pop
retf
push
arpl
icebp
icebp
adc
sbb
xor
dec
sbb
mov
add
stos
out
adc
inc
push
movs
daa
arpl
mov
in
in
jp
xor
cmp
cs
stos
xor
mov
adc
jnp
sbb
adc
add
dec
scas
push
jmp
out
mov
adc
adc
mov
mov
or
mov
popf
push
push
shl
adc
dec
mov
div
pop
mov
cmp
fstp
cli
mov
cmp
iret
or
push
ins
push
cmp
(bad)
mov
mov
shr
adc
mov
push
ja
jno
mov
push
push
cld
outs
inc
jp
mov
aaa
fstp
jp
dec
xor
mov
jp
leave
enter
push
clc
retf
sbb
add
add
cmp
xor
mov
dec
pusha
pop
xor
sub
jns
pop
js
mov
mov
xor
cmp
or
cs
aaa
lahf
mov
ins
pop
xor
fist
mov
pop
mov
cdq
(bad)
mov
sbb
jnp
mov
imul
es
gs
std
sub
sub
ins
in
jp
outs
jp
icebp
sar
retf
cs
push
data16
mov
(bad)
fisubr
movs
daa
jae
mov
xor
mov
pop
xlat
fs
(bad)
fist
movs
jmp
dec
xchg
xchg
lahf
mov
fldcw
mov
cmc
dec
xchg
inc
call
sbb
jmp
hlt
push
jle
cmps
push
dec
jo
pop
pushf
test
adc
push
adc
mov
jmp
xor
ret
jp
mov
in
retf
cmps
aad
test
dec
(bad)
mov
pop
shl
inc
(bad)
mov
data16
add
fld
out
cwde
shl
pop
nop
repnz
test
test
mov
adc
dec
mov
and
pop
inc
jle
inc
pop
jo
xchg
(bad)
mov
push
mov
mov
(bad)
stc
mov
sbb
or
xlat
inc
test
cmp
xor
(bad)
fcomp
cwde
xor
rcr
mov
adc
sbb
loop
inc
ja
shr
adc
pop
into
mov
pusha
mov
mov
pop
sti
retf
mov
aam
mov
cmps
ins
cdq
jg
repnz
push
or
retf
or
out
or
dec
scas
repnz
std
adc
sub
loopne
dec
cmp
sbb
jns
adc
add
in
jo
sbb
xor
leave
mov
push
push
mov
ins
pop
test
arpl
sbb
popa
imul
je
test
lahf
aad
popa
je
cmps
stos
mov
rcl
imul
pop
pusha
pusha
(bad)
fisttp
pushf
jae
inc
and
sub
and
and
or
sub
pop
js
xchg
sub
test
loop
test
cmps
jl
push
cmp
mov
cli
scas
jno
stos
sbb
xchg
loope
mov
rol
iret
sbb
or
push
jmp
sub
mov
xor
add
out
adc
mov
int
ins
aaa
xchg
pop
pop
cmp
movs
cmp
loope
inc
arpl
cs
(bad)
dec
xchg
fisub
aam
adc
in
inc
and
fstp
mov
jg
xchg
ss
push
dec
mov
ror
neg
or
add
(bad)
jmp
cmp
lods
mov
push
cmps
cmps
push
fisttp
outs
adc
stos
jmp
jecxz
in
mov
fisttp
ja
stos
out
jmp
jge
adc
push
aaa
rcl
cmc
inc
cwde
data16
or
fs
pop
js
lock
dec
(bad)
cli
outs
sub
retf
inc
shl
imul
xchg
int
xchg
dec
shr
push
mov
retf
mov
inc
fldenv
adc
mov
arpl
add
dec
sub
icebp
mov
dec
mov
push
sub
push
or
adc
xor
sub
xchg
push
mov
mov
icebp
enter
jl
fsubr
dec
push
sbb
nop
or
mov
scas
pop
dec
(bad)
sub
(bad)
rcl
xchg
mov
retf
dec
xchg
sub
xchg
push
fmul
dec
xchg
push
xor
ss
neg
loop
adc
push
into
dec
jg
popf
rol
out
xchg
fld
mov
add
fldl2t
shl
inc
mov
and
adc
mov
mov
jmp
xchg
outs
int3
inc
adc
sbb
sbb
push
vmulsd
pop
sti
jnp
daa
xchg
stos
push
popa
push
loop
sbb
stos
or
push
in
mov
ja
push
iret
add
dec
lods
sti
sahf
test
jle
cmp
xor
test
mov
jne
popa
add
jae
fld
jns
push
dec
adc
je
adc
mov
loope
adc
call
scas
jae
out
adc
or
mov
(bad)
mov
addr16
or
out
rcl
jbe
sbb
in
push
jl
xchg
dec
aaa
mov
or
or
xor
dec
pop
cli
cmp
cli
jecxz
shufps
call
push
loope
jp
retf
in
int3
push
jmp
mov
sub
xchg
mov
inc
sub
aaa
nop
mov
push
push
add
leave
mov
dec
or
mov
mov
push
sbb
repz
mov
sbb
(bad)
out
pop
mov
mov
pusha
cmp
pushf
cmp
pop
inc
std
push
cs
and
sub
jg
cmp
sbb
les
jb
call
mov
pop
push
rep
(bad)
push
dec
push
cmp
or
jae
in
push
mov
imul
push
loopne
and
inc
bound
or
stc
test
lods
xchg
pop
fsub
aas
aaa
mov
sub
jmp
popa
aas
aas
fisttp
ds
ins
sbb
push
mov
mov
gs
mov
movs
call
dec
pop
retf
in
xor
in
xchg
cdq
jmp
sbb
add
cmc
push
push
popf
xchg
stc
fwait
cdq
cmp
add
aas
shr
mov
mov
inc
fimul
retf
(bad)
es
mov
mov
mov
fs
push
cmp
cmp
or
in
das
jl
add
xchg
mov
push
in
es
stc
nop
fdiv
and
sahf
push
inc
jnp
aaa
leave
push
adc
sub
in
arpl
aam
fbld
xchg
mov
push
lods
test
sbb
sbb
(bad)
sar
daa
mov
and
data16
fisub
mov
add
mov
js
pop
mov
je
pop
inc
(bad)
not
sbb
jge
ret
jae
xlat
lahf
test
ret
repz
jb
or
xchg
loopne
lock
jl
fnstcw
pop
ret
popa
aam
fldcw
shl
ror
mov
mov
mov
adc
ret
rol
push
jno
adc
inc
fidivr
dec
aas
mov
cwde
pop
jge
mov
cmp
clc
push
xor
repnz
push
or
mov
adc
jns
in
mov
sub
dec
sar
(bad)
arpl
mov
cmc
inc
test
xchg
fs
sbb
mov
xchg
cmp
movs
stos
call
xchg
fisttp
jo
xchg
push
sub
xchg
push
xor
aad
popf
mov
popa
test
loopne
lods
jl
bound
pop
je
fist
loop
pop
das
and
or
out
dec
pop
inc
dec
sub
mov
repnz
mov
(bad)
aaa
jbe
ror
push
clc
and
cs
scas
mov
dec
pop
sbb
dec
xchg
jae
ss
(bad)
dec
xchg
mov
std
mov
sub
mov
out
leave
jmp
sub
test
retf
jle
cmp
xchg
in
mov
xor
call
pushf
xor
iret
mov
cmc
in
sbb
push
dec
dec
scas
bts
shr
shr
dec
fld
nop
(bad)
pop
dec
dec
fstp
and
lods
jmp
repz
sub
mov
scas
mov
stos
out
cld
sub
adc
cmc
mov
add
push
stos
push
enter
mov
icebp
or
jecxz
sti
adc
mov
in
push
nop
movs
cmp
jno
adc
daa
lds
inc
pop
shl
test
cmp
pop
sbb
dec
inc
repnz
vpminsw
hlt
and
(bad)
in
int
ins
in
arpl
cmp
adc
cmc
rcr
sub
sub
jnp
xor
mov
pop
popa
cmps
(bad)
mov
mov
movs
mov
je
test
mov
in
push
cmp
jle
pusha
xor
mov
stos
dec
(bad)
sbb
mov
inc
jb
jge
cli
loopne
or
sbb
jg
xchg
pop
retf
and
stc
xchg
push
loopne
and
sbb
stc
lds
jl
imul
push
sbb
sub
dec
push
mov
sar
ins
push
dec
add
mov
xchg
pushf
inc
mov
cmp
out
ret
retf
pop
cmps
shr
lock
imul
loope
les
pop
outs
cmps
xchg
ret
sbb
sbb
mov
sub
sbb
and
or
fs
jb
cmp
pusha
sub
and
and
retf
adc
sbb
out
(bad)
sub
jo
mov
pop
xchg
imul
fimul
xchg
arpl
push
cmp
scas
out
xor
pop
add
out
adc
adc
(bad)
cli
push
inc
adc
mov
jns
lods
xchg
fs
mov
cmp
push
jb
nop
nop
in
int
cmp
xor
mov
je
adc
cwde
je
fst
pop
mov
jecxz
adc
sbb
push
loopne
sbb
fwait
mov
mov
push
mov
leave
enter
in
xchg
sub
pop
test
je
mov
or
scas
gs
bound
enter
adc
or
in
ins
outs
outs
iret
jne
cmps
push
cdq
mov
imul
fist
fsubrp
arpl
mov
pop
stos
cmps
xchg
xlat
push
sub
imul
stos
push
xor
push
cmp
mov
pop
out
mov
or
(bad)
xor
outs
scas
fild
mov
lods
movs
adc
ds
test
imul
jnp
out
sti
push
int3
inc
stos
retf
sbb
sbb
sbb
pop
enter
cdq
movs
sbb
sti
adc
push
or
push
mov
cmp
push
stos
mov
push
fistp
push
retf
push
jno
repz
xor
mov
jl
jo
push
xor
or
aad
popa
mov
imul
mov
xor
(bad)
stos
imul
arpl
sbb
mov
nop
retf
sub
(bad)
inc
xchg
scas
mov
push
cmp
xchg
ins
push
repnz
xchg
dec
or
mov
lods
shl
fdivr
(bad)
adc
mul
mov
fwait
adc
leave
ins
dec
loopne
rcr
jecxz
dec
pop
sar
inc
loope
cld
imul
sub
xor
test
xchg
and
sbb
mov
and
icebp
les
sub
mov
cmp
loop
xor
sbb
pop
dec
dec
movs
push
mov
xchg
sbb
pop
inc
xor
mov
pop
jl
adc
jno
shl
(bad)
call
mov
es
mov
xchg
or
aas
push
(bad)
arpl
jle
and
inc
pop
clc
push
pop
js
mov
xchg
aaa
js
jns
stos
and
addr16
clc
test
or
sbb
cmp
les
adc
mov
std
inc
shl
xor
sub
in
mov
mov
mov
xchg
inc
jmp
jnp
and
cmps
movs
fsub
pop
or
lods
pop
inc
pushf
cmp
and
or
lea
cdq
fimul
jnp
imul
add
jecxz
loop
mov
and
(bad)
neg
fistp
push
out
test
test
push
loope
jge
test
fidiv
lea
cmp
jbe
into
and
mov
imul
push
xor
(bad)
xchg
mov
xchg
xlat
inc
push
sub
(bad)
popf
ffreep
adc
outs
lock
jne
sub
add
xor
out
mov
mov
cwde
test
mov
xlat
push
cmp
adc
retf
mov
es
mov
mov
and
jno
dec
push
outs
pop
dec
or
jp
mov
fcom
sub
push
adc
add
jp
add
retf
int
xor
aam
and
cli
pop
daa
xchg
xchg
inc
adc
int3
push
imul
fwait
and
push
jl
jns
std
out
pusha
pop
test
daa
cwde
sub
mov
dec
mov
push
ins
pop
ror
sbb
mov
and
cmp
arpl
push
dec
iret
push
xor
and
outs
je
push
cmc
sahf
call
pop
adc
out
xchg
in
lds
push
xor
rol
push
dec
pop
fcomp
add
cmp
(bad)
mov
pop
fldcw
mov
jmp
xchg
and
dec
xchg
int
sti
mov
fsubr
into
sar
arpl
mov
pusha
pop
imul
hlt
lea
sbb
rcl
sbb
mov
adc
jo
inc
xchg
and
cmp
(bad)
pop
(bad)
ror
inc
inc
mov
pusha
jle
stos
lock
call
imul
(bad)
shl
stos
mov
mov
jo
xchg
inc
les
ins
mov
inc
pop
or
gs
mov
int
retf
out
cmp
jbe
inc
cmps
(bad)
mov
sub
aad
jbe
mov
adc
shl
test
xor
js
sbb
nop
pop
out
ret
push
popa
fwait
call
inc
ins
add
xchg
adc
clc
gs
idiv
adc
sahf
and
(bad)
shl
lods
iret
xchg
and
xor
lds
mov
repz
sahf
movs
lods
inc
js
out
test
mov
jmp
mov
test
iret
push
xor
addr16
or
out
stc
xor
fild
loop
xor
fidivr
loopne
repnz
mov
out
push
xchg
daa
cmp
pusha
ss
inc
cmp
lods
popf
fimul
es
push
lock
adc
stos
push
mov
jno
pop
cmp
cmp
(bad)
mov
outs
data16
xchg
dec
test
aad
mov
push
addr16
mov
xor
sbb
mov
xor
dec
sub
push
repz
stc
rol
jae
mov
(bad)
aas
push
stos
(bad)
xchg
jnp
dec
les
and
iret
and
push
call
dec
sub
es
scas
pop
adc
pop
pop
adc
xor
out
fstp
inc
repz
mov
add
(bad)
std
mov
sahf
out
pop
sahf
stc
jl
(bad)
xlat
rcl
push
das
mov
loop
addr16
arpl
lods
dec
imul
cmp
into
data16
loopne
jnp
ror
push
and
cmp
jo
stos
add
(bad)
jmp
add
cmps
push
xchg
adc
test
xchg
cmp
or
or
sub
fist
fs
loopne
and
xchg
iret
xor
aas
jg
jae
xacquire
pop
jno
push
push
mov
dec
in
nop
and
ficom
pop
mov
fldcw
or
or
imul
cmp
cdq
je
xor
fiadd
or
call
scas
add
in
stc
jne
in
xchg
daa
std
mov
xchg
in
or
(bad)
clc
cmp
push
sbb
leave
push
jl
jno
test
xor
pusha
pop
mov
fsubp
es
les
dec
jmp
retf
pushf
mov
dec
dec
es
sbb
mov
inc
lods
in
cmp
or
mov
popf
rcl
jmp
cmp
dec
cmp
fild
xchg
and
push
test
fcmovnu
mov
in
(bad)
je
jbe
and
pop
cmp
rcr
mov
ret
imul
dec
add
idiv
(bad)
sbb
pop
cmps
aam
mov
shl
xor
or
mov
or
fs
das
sbb
(bad)
pop
mov
ins
outs
dec
inc
add
repnz
cdq
repnz
mov
push
iret
icebp
jge
sahf
arpl
scas
xchg
outs
sbb
push
movs
loopne
xor
adc
in
xchg
xchg
je
sar
mov
cmps
fwait
push
nop
jge
leave
cmp
cmp
mov
clc
inc
mov
jmp
loope
xlat
jno
pop
xor
popf
xchg
ss
dec
test
cmps
enter
mov
pop
push
push
cwde
xor
pop
sbb
mov
cmps
shl
cmc
sub
xor
dec
cmp
rcr
and
jge
xchg
retf
(bad)
movzx
fnsave
pop
sbb
or
test
sub
outs
or
stos
mov
or
xor
cs
shr
mov
sub
jno
xor
sub
jmp
or
dec
sub
aad
dec
jno
xchg
sub
cmp
mov
xchg
add
scas
lock
mov
sub
dec
xchg
dec
xor
iret
dec
aaa
xchg
call
push
cmps
test
push
icebp
lds
mov
adc
(bad)
movs
popa
scas
xchg
mov
aas
dec
xchg
(bad)
retf
mov
ss
xor
outs
push
stos
data16
loopne
call
xor
pusha
inc
cwde
jecxz
jle
sbb
int3
mov
push
dec
sub
xchg
adc
test
jae
(bad)
sbb
pop
(bad)
sbb
retf
scas
stc
iret
pop
mov
call
in
lods
sub
mov
(bad)
fbstp
dec
dec
ret
mov
out
sbb
std
xchg
mov
scas
stos
xchg
or
rol
inc
sub
pop
adc
pop
cdq
out
inc
(bad)
push
dec
mov
push
outs
inc
imul
outs
add
js
into
test
push
out
xor
popa
push
push
jl
xor
xor
dec
push
into
xchg
fcom
mov
mov
mov
xchg
test
sbb
aaa
sub
mov
jl
mov
leave
fdiv
mov
adc
mov
test
xlat
int
out
sbb
or
pop
mov
je
mov
in
dec
icebp
adc
ret
clc
popa
cdq
cli
xor
stc
cmc
hlt
push
mov
ud2
jnp
movs
cmps
xchg
pop
int3
push
sub
xchg
movs
ds
iret
sti
mov
(bad)
outs
(bad)
int3
rol
ror
push
aad
or
pop
loopne
jno
test
add
sub
add
imul
push
(bad)
fst
sbb
inc
adc
jmp
out
(bad)
mov
int3
push
leave
aaa
push
ret
mov
out
sub
das
mov
inc
and
inc
mov
test
and
sub
adc
int
cmp
mov
(bad)
shl
cmc
push
mov
jmp
jmp
sar
pop
sbb
or
les
daa
call
mov
push
sbb
into
adc
or
sahf
mov
mov
xchg
mov
aad
imul
loope
sar
out
inc
and
mov
in
sbb
dec
jle
lods
cwde
sbb
fbld
(bad)
lods
neg
ins
xchg
imul
jno
push
int
xchg
adc
dec
fstp
fstp
mov
test
push
jno
push
mov
movups
mov
mov
ret
jmp
retf
int
outs
xchg
push
or
les
in
retf
mov
test
push
into
jmp
mov
adc
sub
fisttp
mov
scas
(bad)
ja
out
mov
sar
or
or
std
mov
fidivr
jns
in
rcr
xor
jae
inc
sub
(bad)
popf
xchg
fwait
imul
inc
mov
mov
rol
scas
push
xchg
or
xchg
test
(bad)
pop
push
cmp
fs
sub
mov
jge
push
fld
cmp
movs
or
and
inc
xor
bound
xor
jl
push
push
or
fcmovnu
loope
or
int3
ret
and
es
push
and
ficomp
gs
(bad)
retf
jp
outs
cmp
pop
inc
sbb
or
jmp
ret
push
sbb
jp
out
and
adc
mov
jo
sahf
movs
icebp
mov
jae
push
pop
mov
call
test
cmp
arpl
xchg
out
stos
or
ss
fisub
jecxz
nop
nop
rcr
aam
or
arpl
test
or
addr16
out
gs
sahf
inc
cld
cmps
mov
je
iret
aaa
xchg
xchg
jg
in
test
js
adc
push
dec
inc
jnp
imul
dec
xor
call
jnp
icebp
mov
sub
test
cli
dec
gs
std
pop
imul
pop
hlt
xlat
push
jne
retf
dec
xchg
push
pop
sbb
mov
push
(bad)
jmp
push
leave
rsqrtps
nop
shl
push
loop
xchg
(bad)
pop
stos
es
jae
sub
repz
jb
jmp
dec
xchg
add
jmp
jp
mov
jp
adc
clc
scas
test
lods
fwait
jle
add
(bad)
stc
sub
ins
inc
stos
outs
ins
shl
jg
xlat
mov
nop
inc
fst
pop
fdiv
inc
push
mov
sar
(bad)
jl
and
push
out
aad
jge
ficom
sub
pop
xor
jle
pop
cmc
xlat
out
aad
cli
scas
adc
sbb
dec
aam
fild
xlat
(bad)
(bad)
push
jl
cmp
or
sar
push
adc
dec
mov
and
xchg
add
lods
xor
xchg
pop
xor
sub
sahf
aam
xchg
fst
xchg
mov
aas
nop
sub
mov
add
std
f2xm1
dec
sti
fabs
out
dec
mov
sbb
cli
push
ret
and
push
push
out
push
mov
out
arpl
ss
mov
ins
cmps
dec
pop
xor
das
push
imul
dec
pop
mov
jns
in
push
ret
cmp
jno
sar
icebp
out
sbb
jmp
fsubr
and
outs
pop
(bad)
fucomp
jnp
aaa
loope
ret
xor
jae
mov
test
gs
aad
lods
inc
ret
add
out
jmp
iret
mov
pop
dec
mov
add
std
dec
mov
push
inc
(bad)
lds
fcmovb
sub
ins
lods
ror
mov
sbb
stos
fsub
mov
jmp
into
outs
mov
mov
pop
xchg
ins
lods
jbe
mov
sub
push
and
dec
pop
inc
dec
test
fs
nop
jmp
adc
cmp
imul
std
jnp
push
jmp
in
adc
push
das
in
cli
ins
loop
adc
cmp
repz
fsubr
or
das
adc
dec
jmp
jle
cmp
or
dec
ds
xchg
cld
jae
dec
mov
ror
dec
cmp
push
jg
inc
cs
ins
mov
jge
cmp
int
dec
mov
mov
das
push
popa
jo
aaa
outs
pop
jnp
out
inc
adc
movs
repz
jp
enter
retf
iret
mov
iret
hlt
int3
stc
adc
and
mov
sub
imul
stc
(bad)
(bad)
popa
rcl
in
mov
mov
or
add
or
fucomip
jmp
fs
pop
jmp
cmps
pop
nop
push
fiadd
dec
mov
cs
lahf
movs
and
enter
jno
add
ficomp
inc
ins
outs
mov
nop
into
dec
pop
movs
jae
dec
rol
mov
(bad)
iret
mov
cmp
pushf
(bad)
sub
(bad)
loop
fisttp
in
cmp
imul
inc
daa
aam
cmp
clc
out
and
xchg
in
mov
mov
movs
ds
call
scas
push
aas
pop
in
mov
adc
sub
jbe
push
lahf
push
aad
js
sub
jno
dec
jbe
aad
sti
dec
add
sub
xchg
mov
scas
in
push
mov
inc
outs
or
pushf
leave
out
xchg
jl
sbb
and
or
test
adc
daa
pop
xor
retf
mov
fucom
icebp
sahf
fadd
sbb
mov
push
out
mov
and
in
mov
nop
xchg
jecxz
(bad)
mov
push
xor
out
push
(bad)
xchg
ret
out
xor
mov
push
gs
add
fwait
sub
clc
cmp
ss
clc
call
or
jnp
xchg
jecxz
xchg
fwait
inc
fisttp
jo
arpl
xchg
or
sub
mov
sti
ss
call
sub
movs
pop
iret
sub
repnz
ss
mov
pushf
mov
or
fimul
and
in
push
push
push
pushf
gs
push
scas
sub
jnp
sub
(bad)
xchg
retf
push
mov
outs
cmps
pop
mov
mov
and
lods
adc
sbb
and
movs
jecxz
cld
fsubp
mov
pop
xor
jbe
xchg
sahf
mov
rcl
jl
adc
jl
or
add
pop
fisttp
call
push
adc
into
aaa
push
not
loop
movs
jnp
jecxz
mov
xlat
cmp
sahf
(bad)
clc
push
aam
fsubr
push
push
xchg
jg
dec
std
fiadd
or
sti
enter
clc
jmp
retf
push
mov
(bad)
xor
mov
jae
fs
int3
sar
leave
stc
and
je
push
(bad)
stos
clc
sub
sbb
fs
imul
mov
push
dec
push
mov
(bad)
jns
retf
rcl
and
fidiv
cmp
or
pop
popf
xor
test
loopne
stos
jmp
and
pusha
out
pop
adc
mov
jmp
sbb
xchg
fst
xor
pop
mov
cwde
stos
jmp
cwde
icebp
mov
xor
dec
jge
vdivss
mov
xor
rcr
mov
jge
pushf
xor
clc
outs
jo
or
or
and
push
push
dec
sbb
sar
xchg
mov
sahf
cs
cmp
shr
push
sub
bswap
jmp
ins
jecxz
(bad)
cwde
sahf
unpcklps
sub
ins
cli
xchg
movs
push
cdq
cmp
repz
adc
push
xchg
add
cmps
inc
leave
cmp
outs
fsub
sbb
ret
or
xor
dec
pop
gs
sbb
xor
imul
mov
cmp
data16
call
pop
(bad)
fld
adc
popf
and
xchg
and
add
adc
pop
out
stos
rcr
mul
mov
outs
lahf
jp
(bad)
popa
or
jle
push
fwait
xor
int
retf
inc
popaw
das
pop
gs
test
sbb
xor
push
jns
or
push
inc
pop
fmul
iret
cwde
ret
dec
cmp
shl
add
add
pop
aaa
lds
jl
and
scas
or
(bad)
push
jg
sti
aad
push
push
adc
in
mov
pop
test
jmp
xor
jg
pop
leave
movs
(bad)
dec
cmc
xchg
or
sub
mov
add
pop
mov
or
mov
sub
dec
rcr
push
popf
xchg
inc
pop
retf
gs
inc
jg
mov
icebp
pop
jmp
neg
out
inc
xor
and
and
test
cmp
mov
inc
mov
test
retf
or
xchg
or
fcmovb
push
dec
ror
rcl
arpl
jno
mov
pop
adc
fisttp
add
fild
adc
popf
imul
pop
xor
das
mov
mov
gs
loop
xchg
lea
aaa
in
inc
xchg
mov
jo
out
mov
mov
pop
shl
sub
inc
push
mov
repz
mov
xor
jo
or
mov
cld
xchg
push
aad
ds
adc
or
xor
xor
ss
ret
test
cmp
stos
xor
pop
push
std
push
xchg
js
cmps
push
adc
mov
retf
pop
dec
pusha
in
sub
js
sub
arpl
push
jnp
mov
int3
fadd
pop
inc
xchg
(bad)
push
cs
pop
xchg
jecxz
inc
push
xchg
icebp
movs
mov
mov
call
std
sub
mov
aad
pop
sub
das
sbb
and
(bad)
xchg
ins
fld
pmaxsw
or
adc
add
fld
call
mov
inc
loop
shl
mov
fmul
or
int
add
lahf
push
mov
rcl
cmp
pusha
mov
push
fmul
inc
retf
cwde
inc
or
inc
retf
adc
cdq
sahf
sub
ds
into
scas
cs
test
leave
test
out
mov
mov
pop
addr16
xchg
fadd
or
sub
adc
test
je
adc
stc
out
lahf
mov
mov
outs
retf
push
jb
pop
int3
push
outs
popf
test
in
(bad)
jo
adc
int
das
sti
and
es
mov
popf
adc
sar
push
cdq
sbb
add
mul
jae
jl
lds
cmp
shl
jge
lock
jmp
pusha
mov
mov
cs
arpl
(bad)
xor
(bad)
ins
mov
retf
not
cmp
mov
mov
xor
ja
call
pop
hlt
sub
stos
mov
adc
fimul
jbe
aas
pushf
loop
adc
xlat
and
xor
sahf
movs
in
nop
mov
cmp
xchg
cmps
dec
xchg
cmps
int3
add
cmp
fsubr
add
push
xchg
es
outs
xlat
mov
adc
mov
xchg
test
push
push
xchg
cmp
in
bswap
dec
mov
addr16
and
or
(bad)
in
inc
in
cmp
pop
jle
pushf
sbb
lds
in
or
mov
popf
xlat
ret
popf
lods
scas
inc
(bad)
cmp
loopne
jnp
dec
ins
mov
cmp
pop
push
daa
jo
or
fwait
dec
and
xchg
mov
push
addr16
in
xchg
sub
addr16
cmp
call
pop
loop
std
push
imul
ja
stos
in
mov
mov
mov
repnz
mov
mov
or
adc
ja
ds
(bad)
pop
and
add
add
ret
cmp
jo
push
mov
pusha
pusha
sbb
retf
rsm
dec
jmp
push
test
add
sti
popa
mov
push
xor
outs
add
idiv
jg
xchg
xchg
lods
or
xor
aam
stos
xchg
out
sbb
inc
dec
movs
push
dec
push
lock
or
retf
xchg
std
pusha
adc
sbb
repnz
and
cmps
int3
add
add
out
cdq
in
jo
jne
popf
push
pop
fstp
add
(bad)
pop
aam
or
and
bound
je
mov
push
mov
mov
cmc
mov
dec
mov
dec
push
leave
(bad)
or
sub
lock
dec
(bad)
mov
push
sub
xchg
cwde
xchg
push
sahf
js
aas
cmps
ret
jo
loope
(bad)
out
mov
shl
push
adc
cmps
popa
push
lock
stc
popa
sub
imul
in
pop
stos
sbb
bound
mov
sbb
repz
xlat
pop
push
jns
sub
icebp
pop
sub
mov
dec
pop
rol
mov
call
inc
out
mov
jmp
sub
add
lahf
adc
lods
xchg
ret
rol
pop
mov
push
movs
(bad)
sub
jns
repnz
jl
sahf
dec
loopne
imul
leave
shr
or
loopne
mov
out
mov
hlt
push
sub
ja
es
stc
mov
jno
mov
add
cmp
add
push
cmc
inc
mov
aaa
mov
out
and
inc
jl
cmc
sub
fwait
mov
xchg
lods
jo
sub
pop
nop
dec
aam
in
in
and
xor
in
push
aas
add
sbb
cli
loope
pop
stc
adc
jb
ss
rcr
fcom
pop
pop
jns
mov
cli
adc
lock
bound
scas
inc
mov
arpl
or
pusha
fist
loop
cdq
stos
int3
sahf
xchg
cmp
pop
jle
xor
pop
or
ins
ds
fcom
aas
imul
mov
stc
ret
jge
mov
adc
scas
cld
fadd
cmc
in
cmp
pop
movs
or
ror
mov
sub
inc
mov
jg
jle
pop
gs
and
sub
pop
xor
jle
jle
inc
sub
xchg
in
lahf
and
aaa
jnp
cwde
mov
sub
xchg
xchg
lds
loop
mov
push
(bad)
dec
xchg
dec
aaa
iret
mov
sahf
call
sub
ins
lods
lods
push
mov
jp
in
cs
push
jnp
xchg
mov
fnstcw
ins
repz
fwait
mov
bound
call
inc
cld
lea
mov
(bad)
pop
jge
push
(bad)
movs
jo
outs
ds
fs
mov
inc
icebp
mov
test
cmp
mov
pop
sub
jmp
aad
icebp
mov
aam
inc
cmp
dec
cmc
jno
push
stos
jmp
jae
mov
dec
in
jns
mov
sbb
ret
dec
icebp
jmp
mov
outs
add
pop
(bad)
dec
cwde
jmp
push
adc
jmp
outs
add
imul
mov
test
xchg
sbb
cmp
cs
push
and
loopne
mov
jnp
push
cmp
cs
dec
ret
sub
jmp
mov
inc
cld
loopne
in
xchg
loope
pushf
adc
leave
adc
sub
popf
pop
icebp
push
ds
sub
push
shl
cmp
push
lods
and
sub
clc
and
adc
imul
pop
pop
push
jle
movs
jno
call
test
add
(bad)
or
push
xor
stos
mov
jnp
adc
jne
inc
rol
not
shr
inc
fbstp
sub
mov
add
(bad)
pop
shl
push
cwde
mov
call
mov
rcl
into
pop
mov
stc
adc
xchg
jg
(bad)
iret
fs
push
or
test
pop
stos
mov
cwde
(bad)
mov
mov
xor
sbb
mov
adc
call
ret
mov
mov
jge
inc
sub
cwde
mov
daa
(bad)
out
inc
jno
cwde
jmp
out
and
or
push
je
mov
lds
cmc
cmp
push
dec
xchg
sar
cmc
jne
popa
sbb
loopne
lods
jbe
adc
shl
out
(bad)
in
out
fisub
idiv
fldcw
cli
repz
adc
outs
and
mov
cmp
mov
mov
cdq
pop
mov
das
jp
fwait
mov
je
pop
cs
dec
push
stos
out
and
(bad)
mov
cld
ds
pop
mov
scas
pop
jo
scas
xchg
mov
inc
sub
repnz
inc
and
push
ja
imul
dec
push
fst
add
je
ficom
les
loopne
rsqrtps
es
and
push
xchg
mov
je
xchg
out
jp
sbb
loopne
sbb
mov
inc
cdq
rcl
arpl
jmp
pcmpgtb
in
cmps
aam
mov
push
xchg
adc
int3
je
mov
jbe
mov
stc
stos
mov
sbb
lods
fs
sub
push
adc
frstor
jmp
fucompp
idiv
cmp
in
inc
stc
and
imul
jle
clc
nop
cld
lea
addr16
mov
call
jae
xchg
sbb
retf
fscale
in
add
jg
addr16
pusha
loope
into
arpl
sbb
sub
adc
mov
mov
jne
shr
mov
jmp
daa
push
or
lds
xchg
imul
push
movs
jne
adc
mov
loopne
in
jle
out
push
jne
mov
push
test
sbb
dec
jl
aaa
jp
sbb
sub
lds
dec
ret
or
and
arpl
sar
xchg
mov
dec
and
aas
push
xchg
aas
cdq
clc
mov
outs
adc
jl
xor
jecxz
cli
imul
push
jecxz
(bad)
retf
mov
jp
mov
(bad)
js
jns
call
std
push
cld
sub
sahf
daa
cmps
jecxz
dec
lods
test
hlt
push
push
call
ja
mov
loop
das
or
scas
(bad)
std
pop
sbb
mov
sub
add
or
push
loop
and
mov
xchg
cmps
or
mov
outs
jmp
lods
test
mov
inc
sbb
mov
(bad)
cmp
or
lock
pop
popw
retf
add
fstp
jmp
mov
or
ins
sub
shl
ins
hlt
stc
sahf
mov
hlt
ret
pop
std
dec
ss
push
adc
cld
out
or
outs
adc
lahf
retf
inc
stc
test
xchg
out
aaa
or
in
xchg
adc
ret
inc
xor
aad
inc
xor
mov
out
rcl
xlat
(bad)
jbe
nop
mov
sti
xor
imul
je
int3
daa
pop
and
sahf
ins
push
jge
dec
jnp
xchg
aam
mov
xor
and
repnz
ins
ds
jno
cdq
xchg
pop
pusha
or
mov
fucomp
push
mov
test
push
hlt
or
out
xor
ror
lock
pop
(bad)
mov
pop
ja
mov
mov
fidiv
adc
mov
xchg
jle
loopne
mov
xchg
in
jbe
popa
or
daa
outs
mov
jecxz
int
(bad)
movs
sbb
idiv
mov
mov
inc
fld
pop
sbb
std
xor
push
mov
cmc
movs
pop
movs
outs
pop
out
jl
push
xchg
dec
cli
(bad)
and
js
retf
int3
test
sbb
mov
mov
sbb
das
mov
mov
out
icebp
rol
enter
sbb
xchg
mov
out
jb
aas
jb
sbb
dec
mov
out
mov
mov
call
mov
xor
mov
jge
mov
popa
aad
push
push
xchg
call
or
aad
jp
stos
bound
fwait
and
cmp
cmp
and
xor
fiadd
adc
retf
add
xor
test
aas
dec
mov
mov
ret
lea
cmps
xor
inc
pusha
dec
mov
mov
rcr
sti
outs
call
mov
cmc
sub
fisttp
test
out
(bad)
iret
mov
inc
ins
inc
xchg
jge
jl
ja
mov
push
pop
pop
ja
xor
aad
out
test
retf
mov
scas
aam
in
ror
jne
in
fldenv
int
cmp
xchg
mov
call
sbb
pop
(bad)
(bad)
aaa
cmp
test
jg
xor
cmp
sub
mov
das
inc
sar
or
jmp
cmp
add
mov
inc
push
enter
mov
mov
dec
jmp
idiv
cld
pusha
outs
aad
je
cli
fmul
jns
ja
pusha
mov
mov
std
mov
icebp
clc
cmp
clc
imul
sub
mov
mov
mov
in
repz
es
add
shl
hlt
xor
lahf
and
(bad)
les
and
and
sub
cwde
or
shr
mov
stc
mov
fwait
xchg
imul
jp
push
pop
xlat
popa
mov
mov
adc
arpl
inc
jge
je
jge
pop
scas
sub
(bad)
outs
mov
pushf
sub
jmp
cmp
push
xchg
lds
adc
push
sub
pop
xchg
stc
push
nop
data16
adc
xchg
fmul
icebp
sub
pop
and
(bad)
cwde
fwait
pop
pop
out
dec
jmp
icebp
fistp
icebp
scas
mov
sbb
(bad)
jbe
popa
sahf
lods
or
fisttp
cmp
pop
jp
sub
jns
dec
cmps
shr
dec
aam
pop
test
mov
adc
mov
jns
sti
stc
mov
mov
dec
push
fadd
clc
xor
ds
mov
(bad)
push
mov
jo
ficomp
icebp
scas
push
(bad)
push
das
stos
in
push
jmp
fistp
retf
jge
push
mov
fninit
mov
jne
jp
imul
hlt
fisubr
jb
dec
adc
cld
adc
cmc
xchg
in
lods
not
mov
add
fisttp
js
inc
mov
psllq
jmp
icebp
cld
out
(bad)
jmp
(bad)
jg
jecxz
mov
add
sub
call
call
repz
test
gs
push
retf
mov
inc
int
ds
push
out
mov
mov
call
test
sub
sar
push
in
inc
rcl
icebp
outs
dec
cld
pop
push
jmp
lods
sub
neg
dec
std
dec
jb
jmp
je
inc
call
jo
add
add
add
in
pop
jns
push
pop
fcmovnu
(bad)
cmp
mov
movs
or
and
cmps
or
and
(bad)
nop
test
xchg
or
dec
and
sub
xor
or
ja
imul
cmp
sti
je
jmp
(bad)
out
(bad)
out
cmp
scas
sti
pop
jmp
imul
push
push
xchg
mov
add
pop
ins
aas
je
jo
call
in
cmp
outs
das
cmp
out
and
jae
movs
loopne
jo
adc
(bad)
loope
adc
xchg
inc
test
fwait
adc
jp
xchg
test
(bad)
(bad)
repnz
fs
fbld
push
movs
(bad)
into
and
mov
movs
sbb
les
sbb
or
xor
mov
cmps
xor
loopne
push
in
jp
cmp
stos
mov
jne
sahf
call
pop
mov
push
or
mov
stos
pop
mov
mov
sub
xlat
(bad)
pop
imul
scas
sub
jns
in
in
jle
or
and
ja
repz
pop
jmp
add
cmp
jmp
les
int3
push
jbe
mov
sub
sti
push
mov
ds
les
xchg
stc
jl
dec
cmp
daa
test
jmp
mov
fcomp
gs
inc
(bad)
sbb
mov
out
sbb
push
not
pop
jle
jp
add
or
mov
mov
sub
in
push
push
jbe
loop
xor
adc
mov
adc
pop
imul
arpl
test
repnz
das
xchg
xor
pop
dec
mov
cdq
and
in
lods
jmp
cmc
cmp
movs
cmp
or
pop
iret
jb
pop
mov
fnsave
in
(bad)
pop
cmp
adc
cmp
cmps
aad
add
mov
jg
add
adc
icebp
xchg
push
retf
mov
in
fsubp
jle
jns
mov
je
arpl
clc
mov
push
fs
lea
clc
or
shl
sbb
sti
sub
mov
or
mov
rcr
and
imul
push
xchg
in
push
adc
fwait
cli
cwde
pop
cmp
push
push
aas
xchg
mov
jp
sub
popa
sar
cli
or
mov
mov
xchg
jae
movs
cmps
ins
cmp
out
jae
in
loop
jnp
cmp
pop
cmp
outs
xchg
pop
ja
cld
jb
(bad)
jl
retf
adc
jae
cmp
mov
push
jbe
and
xor
mov
aad
jbe
rol
push
jg
lods
test
pop
rcr
sti
ret
xchg
add
xchg
and
mov
add
cmps
xor
xor
sbb
add
add
ja
adc
loope
inc
pop
jne
popf
pop
adc
pusha
add
adc
push
add
xor
and
mov
test
adc
ins
fadd
mov
pusha
jge
bound
or
shl
shl
cmp
cdq
add
jmp
add
pop
test
add
sbb
in
stc
sub
mov
fild
dec
psubsb
pusha
mov
iret
test
sbb
push
call
cli
cmps
and
nop
cmp
sbb
jle
std
mov
jb
enter
adc
iret
or
ins
and
cli
sub
scas
mov
push
bnd
jg
std
scas
test
repnz
test
inc
out
call
enter
add
addr16
push
cmc
movs
push
data16
or
mov
pop
pop
xor
sbb
sbb
es
out
add
lods
pop
cmpxchg8b
(bad)
iret
or
pop
cmp
push
cmps
cmp
test
test
imul
pop
add
mov
xchg
cmp
cmp
pop
out
add
sub
pop
inc
jns
jge
sub
sub
or
test
scas
pop
je
push
mov
pop
repnz
mov
xchg
fild
cmp
push
pop
pop
fist
and
dec
bswap
sub
adc
xor
add
ret
jo
cmp
fcom
inc
cdq
add
push
call
sahf
or
cld
lahf
sub
xlat
xchg
les
jg
retf
adc
scas
cmp
xchg
clc
test
repnz
test
xchg
jmp
aas
xchg
les
sbb
mov
mov
popf
mov
or
fild
test
mov
rcl
clc
aaa
xchg
or
or
jg
mov
aam
xchg
les
das
xchg
push
and
pop
cmp
and
mov
jmp
xchg
clc
test
mov
mov
jge
aas
inc
adc
inc
and
inc
std
xor
pop
push
jmp
sub
pop
inc
jns
jg
nop
xor
dec
clc
aas
or
(bad)
jg
adc
not
retf
or
xchg
(bad)
push
enter
dec
adc
addr16
cmp
cmp
mov
inc
pop
out
xchg
sub
call
xchg
(bad)
cmp
in
cmp
stc
inc
pop
out
data16
dec
cdq
cld
aas
dec
es
xchg
leave
inc
cdq
cld
mov
or
xchg
leave
push
cdq
cld
pop
inc
es
jg
ret
cld
fild
(bad)
fbld
xchg
(bad)
fist
in
out
bnd
cdq
cld
mov
adc
(bad)
mov
leave
in
outs
xor
mov
hlt
xchg
dec
cdq
cld
lahf
dec
es
nop
leave
dec
xor
mov
test
iret
and
call
leave
call
leave
in
jle
stc
mov
cld
ret
cld
fisttp
(bad)
aas
and
call
cdq
cld
pop
inc
jmp
mov
imul
rol
cwde
mov
push
cld
call
mov
hlt
push
aam
clc
aaa
inc
lock
sub
mov
pop
test
gs
bound
call
mov
jg
sar
in
stos
jg
mov
mov
aad
jg
mov
adc
stos
(bad)
cdq
mov
pop
(bad)
loop
jge
inc
(bad)
retf
(bad)
xlat
arpl
dec
jg
lahf
sar
fstp
shl
mov
add
mov
sbb
(bad)
jno
scas
jbe
sub
pop
pushf
movs
mov
lahf
fwait
mov
adc
jb
out
popf
(bad)
loopne
sub
nop
xchg
xchg
dec
lds
outs
jmp
and
cmp
xchg
sbb
out
(bad)
sub
xlat
cmp
jecxz
lea
mov
sbb
out
mov
sbb
jg
rcl
mov
ror
ss
ins
push
out
cmp
sbb
mov
into
and
inc
xlat
or
inc
xlat
or
xlat
and
test
xor
scas
aas
je
mov
iret
arpl
jle
lahf
aad
pop
popf
cmps
aad
pop
popf
das
inc
mov
cwde
mov
daa
mov
mov
sub
mov
inc
jnp
fmulp
jge
mov
dec
repnz
addr16
dec
xchg
cmps
jnp
inc
pop
mov
rcl
out
ror
pop
adc
sub
jne
cmp
imul
cmc
xor
jp
sbb
lock
pop
into
ss
(bad)
xchg
addr16
ins
das
jmp
icebp
xor
(bad)
mov
xor
pop
in
mov
pop
xchg
sub
outs
jne
push
sub
mov
out
jb
bound
call
mov
mov
in
pop
clc
sbb
dec
adc
mov
dec
or
leave
and
jp
mov
mov
fwait
jmp
pop
shr
inc
call
rdmsr
cmp
pop
loop
mov
dec
retf
loope
ss
aad
inc
xor
pop
call
mov
mov
jns
clc
mov
outs
dec
cmc
xchg
mov
dec
jp
popa
mov
ins
sbb
js
mov
pop
xor
mov
sbb
jmp
jns
addr16
push
clc
or
fcmove
icebp
(bad)
outs
arpl
cmps
shl
cmp
out
into
sbb
mov
jle
cwde
imul
mov
int3
aas
mov
sti
sub
repz
bound
lahf
cld
mov
mov
hlt
push
scas
dec
into
or
call
call
test
mov
jno
test
sti
sbb
bound
repnz
dec
sbb
in
iret
cld
pop
loope
mov
pop
adc
mov
add
sar
arpl
jae
jmp
repz
cmp
add
loop
push
and
mov
add
lds
psadbw
push
xchg
shl
stos
and
popa
dec
jbe
jmp
out
ins
bound
popf
cld
sbb
pop
outs
lods
rol
out
or
leave
mov
test
out
dec
mov
loope
push
inc
jecxz
outs
jl
icebp
mov
cld
mov
ds
aas
mov
cli
or
fstp
int
pop
ficom
mov
div
in
mov
mov
cli
mov
mov
cmp
lea
xor
fcom
cmp
vlddqu
xor
pop
xchg
retf
retf
push
ret
push
sti
lods
mov
aad
stos
loope
push
dec
(bad)
pop
fst
je
or
call
dec
jns
mov
mov
mov
mov
jns
or
jle
imul
popf
fs
push
pop
repnz
ficomp
mov
lods
addr16
rcr
out
rcl
daa
in
fld
xor
ins
dec
jmp
popa
mov
shr
popf
enter
sub
js
sub
leave
fdiv
mov
dec
hlt
jl
push
lock
xor
mov
fld
clc
leave
pop
mov
pop
dec
(bad)
dec
cdq
rol
mov
rcr
cdq
xor
push
xchg
ins
scas
cmp
sbb
sar
sbb
and
pop
pop
jae
inc
adc
outs
sub
sti
int3
inc
outs
retf
mov
sbb
push
shl
int3
sbb
in
sbb
aas
and
cmps
repnz
inc
jb
enter
adc
inc
adc
ds
push
pop
stos
sub
mov
cmp
push
inc
jns
dec
jg
push
jecxz
sbb
ror
jbe
movs
sbb
adc
push
out
mov
sbb
push
das
xor
lea
mov
and
and
enter
loop
mov
cmp
aaa
cmp
retf
idiv
das
call
mov
mov
sub
cmp
dec
dec
ret
inc
int
lds
rol
clc
inc
div
das
xor
or
pop
cmp
cmp
mov
shl
jns
or
inc
(bad)
(bad)
ja
(bad)
out
pop
(bad)
fistp
push
inc
add
xor
jmp
add
out
popf
ins
mul
xchg
pop
popf
and
loope
sahf
in
ins
mov
dec
icebp
int
or
aad
cmc
cmp
jb
cmp
(bad)
nop
xchg
add
push
in
adc
cmp
loopne
repnz
inc
pop
or
(bad)
cmps
ins
imul
jecxz
(bad)
out
scas
cmp
push
cld
mov
jnp
enter
aaa
ins
loop
std
repz
cmps
in
jmp
jecxz
sbb
xchg
dec
in
call
fidiv
out
dec
scas
bts
bound
out
inc
mov
cld
inc
push
or
scas
movs
aad
ins
sub
mov
leave
js
jmp
test
mov
sti
rcl
xchg
pop
in
cmp
cs
pop
cmps
imul
dec
bound
jo
jmp
or
cs
and
mov
jl
or
arpl
push
xor
in
test
fstp
std
stc
add
int3
pop
mov
sbb
add
ins
test
push
mov
push
and
adc
adc
push
(bad)
(bad)
jg
xchg
pop
pop
std
aad
mov
jl
adc
sar
paddsw
inc
sar
sbb
imul
outs
repz
pusha
pop
mov
outs
sbb
xchg
nop
add
cmp
fbstp
cs
aaa
jbe
mov
dec
add
mov
push
mov
inc
(bad)
(bad)
jmp
push
call
aaa
mov
movs
jns
aad
test
std
pop
std
push
cmps
cli
out
sbb
std
inc
lahf
dec
sbb
arpl
das
fcomp
jg
push
sti
adc
cmp
jb
aam
push
mov
fadd
mov
pop
adc
test
dec
mov
jmp
in
push
lahf
mov
mov
jmp
inc
in
out
push
enter
sub
in
ficom
and
daa
fstp
loop
cmp
repz
mov
dec
adc
pop
dec
repz
jbe
ror
in
mov
pusha
jg
jg
lahf
cmp
cld
sti
mov
hlt
lods
mov
jg
aaa
adc
jle
lahf
add
(bad)
jmp
mov
stc
xlat
cdq
lahf
add
inc
adc
sti
add
retf
mov
pushf
mov
jo
test
pusha
cli
dec
mov
jl
jecxz
sar
mov
repz
ins
inc
sub
cdq
inc
dec
mov
repz
xor
dec
ja
pop
jns
mov
fwait
out
inc
loopne
js
jge
int3
ret
imul
jmp
in
cmp
or
daa
pop
and
retf
fild
inc
in
sbb
jp
inc
imul
(bad)
ins
arpl
and
push
jg
inc
mov
icebp
(bad)
mov
imul
mov
dec
inc
dec
mov
(bad)
mov
sbb
mov
jge
cld
test
test
push
mov
push
cmovnp
daa
inc
lock
xchg
and
je
push
push
rcl
ins
jbe
arpl
dec
mov
scas
test
cdq
dec
xor
fs
cld
nop
adc
sbb
(bad)
pop
pop
out
sbb
add
jp
pusha
or
(bad)
jns
mov
sbb
add
rol
nop
or
add
mov
add
add
add
jo
pushf
inc
mov
mov
pop
lock
or
sbb
mov
inc
sbb
cmp
add
add
push
nop
add
pop
add
or
add
add
into
div
or
enter
pop
add
test
and
add
cmp
cwde
add
iret
add
cmp
fwait
adc
add
and
or
cwde
adc
in
or
mov
popa
push
xchg
push
add
push
or
stc
loopne
push
pop
sub
pop
mov
arpl
and
add
cdq
shl
out
gs
in
jae
mov
adc
ret
add
add
add
add
add
ins
add
add
rol
cld
pusha
add
add
push
add
sahf
or
out
and
rcr
rcr
sub
pavgb
sahf
or
mov
jae
adc
cmp
ss
sbb
and
inc
add
adc
add
mov
and
sub
enter
push
and
inc
jmp
push
push
hlt
dec
mov
xlat
mov
push
jne
popa
pop
lock
add
cmp
cmp
fild
add
test
punpcklwd
jo
mov
rcr
add
int3
inc
(bad)
ret
push
addr16
test
scas
push
mov
jmp
jg
add
movs
jns
out
jbe
outs
add
xor
pop
sahf
mov
shr
mov
std
sbb
sub
or
push
mov
xchg
mov
jnp
pop
pop
rol
leave
mov
or
mov
sti
mov
ins
pop
mov
adc
sbb
mov
xchg
sahf
mov
pop
and
dec
dec
cli
rcl
jns
test
pop
mov
push
loope
inc
loope
mov
mov
sti
push
jbe
iret
lock
mov
mov
cld
test
sub
mov
scas
add
mov
(bad)
mov
pop
iret
mov
or
xchg
push
push
push
adc
loope
fisubr
arpl
adc
sub
iret
push
in
mov
outs
pop
aad
cmp
jnp
gs
clc
ror
push
repz
mov
loop
mov
jne
int3
cmc
aaa
aas
and
idiv
pop
cli
pop
sti
call
scas
stc
sti
or
pop
mov
and
stos
and
xchg
push
enter
mov
mov
sub
out
push
push
push
dec
int
sbb
pop
sbb
in
mov
fistp
(bad)
mov
pop
xchg
inc
mov
push
cmp
fs
ss
jo
and
out
fwait
jecxz
dec
xor
int3
into
mov
xchg
out
sub
jmp
in
push
in
and
xchg
icebp
lea
mov
fnstsw
mov
dec
pusha
cmp
out
movs
xchg
pushf
xlat
hlt
inc
and
xchg
pop
div
aaa
lock
cmc
in
pop
in
sti
xchg
sbb
cmps
or
lock
xchg
push
dec
retf
mov
lods
pop
or
mov
aaa
xchg
retf
xor
xchg
out
popa
sub
ins
gs
push
mov
mov
add
cmp
test
mov
dec
or
push
mov
jae
rcl
jmp
push
cdq
shr
ins
stos
jecxz
sti
sahf
fild
jae
(bad)
cmps
jae
jns
add
cmps
dec
aam
jle
push
ficom
pop
dec
retf
(bad)
ja
jle
test
cs
(bad)
in
int
and
mov
daa
arpl
mov
loope
xchg
cmp
out
cmp
sti
push
jns
ret
mov
cmp
jecxz
xchg
xor
fwait
pop
dec
pop
int3
call
cmp
push
popa
(bad)
iret
popfw
fdivr
sbb
mov
in
in
jle
cmp
scas
jmp
or
icebp
mov
mov
(bad)
mov
and
sbb
xor
call
hlt
ret
in
pop
push
or
repnz
idiv
scas
mov
test
int3
cmps
out
cmp
mov
dec
imul
pop
ficomp
add
jecxz
cmp
and
ret
mov
adc
inc
sub
push
mov
cs
mov
(bad)
test
lahf
sub
shl
int3
cdq
push
in
fisttp
hlt
enter
sar
inc
imul
(bad)
jno
sbb
cwde
aam
mov
loopne
sub
mov
mov
fdivr
(bad)
push
in
and
popa
pop
je
scas
jne
push
add
shr
jle
xchg
xor
or
mov
and
das
xchg
cmp
(bad)
jb
arpl
in
and
movs
and
loopne
xchg
mov
xchg
xchg
int
ss
inc
mov
adc
and
inc
movs
test
lock
cmp
jne
data16
imul
(bad)
leave
jo
test
inc
(bad)
icebp
pop
(bad)
xchg
sbb
or
inc
mov
out
das
adc
popa
mov
(bad)
mov
jle
mov
sub
dec
push
ins
pop
loop
jg
and
adc
pop
sbb
pop
pop
das
dec
mov
(bad)
fidivr
cdq
(bad)
cmp
cmc
or
xchg
push
cli
sar
jmp
dec
clc
xchg
xor
int3
ins
pop
jmp
mov
sbb
or
arpl
in
cmp
hlt
xor
jbe
sbb
(bad)
and
cwde
ds
mov
push
cmp
jmp
cli
(bad)
or
aas
xlat
gs
mov
fwait
outs
xchg
cmp
mov
sub
cdq
jle
(bad)
frstor
dec
mov
push
div
sub
push
dec
mov
repnz
leave
cld
dec
mov
and
pop
xor
jge
xchg
pushf
out
dec
jnp
adc
or
push
xlat
mov
inc
push
xor
pop
out
cmp
sbb
xchg
and
arpl
shr
movs
cmps
push
imul
sbb
fsub
fist
sub
xchg
ja
jne
icebp
cmp
enter
sar
(bad)
scas
shr
movs
jp
jno
inc
call
stos
xchg
pop
jo
push
or
jbe
iret
mov
cmps
inc
jnp
mov
adc
pushf
push
imul
test
ret
cmps
lods
into
in
sub
cmp
cld
inc
bound
sub
imul
mov
out
iret
shl
scas
or
dec
and
lahf
sub
stos
cmc
mov
sub
and
fist
popa
mov
jmp
mov
sbb
mov
mov
cmp
pop
mov
sti
not
cli
mov
dec
loope
je
clc
inc
sbb
dec
or
sbb
aad
xor
pop
test
pop
pop
pop
push
retf
cmp
cmps
fist
call
mov
or
adc
jo
retf
jno
icebp
(bad)
adc
hlt
pushf
icebp
or
aam
and
ficomp
sub
cmp
imul
cmp
fstp
les
daa
mov
aaa
gs
adc
(bad)
sahf
and
cmps
xor
mov
or
ins
dec
jge
jae
ja
pop
addr16
movs
movs
jno
mov
jb
popf
lods
loopne
pop
in
jg
(bad)
repz
fnstsw
ret
stos
outs
movs
xor
mov
cmp
xchg
mov
dec
cli
sub
pop
fwait
mov
ror
bound
ins
out
and
repnz
call
popf
retf
cmc
mov
mov
gs
add
mov
(bad)
imul
icebp
fstp
xchg
push
cdq
lods
fist
or
mov
hlt
inc
ss
jmp
int
dec
sti
jmp
neg
mov
mov
adc
cdq
inc
popa
fisubr
call
lahf
pop
movs
mov
mov
arpl
inc
add
or
(bad)
das
pop
inc
retf
stc
jmp
inc
bound
cmp
adc
ins
aad
loope
ins
in
ret
mov
push
rcr
jl
dec
dec
and
ret
push
mov
not
or
retf
xor
cmp
pop
call
repz
dec
sub
push
std
jae
fmul
ja
mov
pop
inc
in
and
ret
inc
das
rcl
mov
jp
and
pop
call
mov
je
pop
es
pop
mov
cli
cmps
stos
mov
ins
je
inc
xchg
pop
ss
mov
fdiv
mov
sub
push
(bad)
pop
retf
mov
dec
jmp
sti
or
in
jno
cmp
iret
ret
in
test
enter
mov
scas
sub
sbb
mov
cs
push
dec
loop
adc
ret
xor
loope
inc
cmp
mov
(bad)
jnp
popa
inc
adc
push
mov
out
pop
call
mov
test
outs
lods
imul
scas
ss
fwait
mov
retf
sbb
ins
shl
lock
(bad)
in
frstor
inc
push
mov
retf
mov
retf
adc
push
or
pop
mov
int3
ins
ins
pop
es
pusha
push
push
sub
retf
sti
pop
js
inc
dec
sti
add
es
inc
jno
pop
dec
call
(bad)
jbe
jle
ins
bound
jecxz
lds
loop
call
fistp
dec
cmp
push
(bad)
outs
mov
xor
aaa
(bad)
pushf
fistp
imul
or
inc
push
cmp
sub
mov
imul
cmp
mov
shr
lock
int
dec
sub
lods
pop
shr
sub
and
cld
xchg
pushf
mov
je
sub
inc
sub
ret
push
jns
jmp
sub
inc
add
inc
inc
jno
fld
mov
iret
aaa
in
stc
loop
nop
push
jmp
es
mov
inc
es
fcomip
fisttp
sbb
fsubr
inc
daa
outs
stos
mov
out
ja
rcr
or
pop
mov
mov
gs
je
adc
in
xchg
ss
add
jno
es
aam
call
ret
mov
jnp
inc
lock
ins
fwait
iret
in
pop
mov
inc
stc
push
cli
jmp
movs
mov
pop
fild
aaa
int
(bad)
je
ss
imul
jmp
(bad)
fistp
clc
jns
dec
xchg
or
scas
dec
add
rol
retf
shl
adc
aam
mov
or
scas
lea
xchg
inc
aam
fnstsw
mov
scas
xchg
add
add
add
add
in
pop
pop
cwde
sub
pop
adc
scas
mov
add
fnstcw
(bad)
or
(bad)
fwait
mov
xchg
xor
jns
dec
cmc
mov
push
in
pop
mov
cmp
ror
fdiv
sbb
cdq
idiv
fisub
ja
mov
(bad)
cld
sti
cmp
ds
leave
pop
loop
loopne
inc
or
add
pop
pop
or
lock
shl
and
or
add
shr
xlat
add
fiadd
mov
movs
cmps
jb
mov
sbb
adc
add
fimul
add
mov
push
add
jle
clc
aaa
loopne
dec
out
test
pop
xor
sbb
je
dec
add
push
clc
xor
pop
pop
jmp
sbb
jmp
pop
mov
add
push
mov
arpl
add
jno
pop
fmul
fadd
rcl
lock
shl
sbb
fld
mov
out
add
push
clc
mov
jo
jl
lock
dec
add
jl
jae
inc
or
push
lock
mov
loop
inc
or
add
dec
sar
dec
jle
xchg
mov
sub
xlat
add
or
out
addr16
adc
or
jnp
pop
(bad)
and
add
pop
clc
outs
loopne
cmp
jp
xchg
mov
imul
cld
and
or
push
xor
jg
cmp
push
cs
jl
push
pop
rcl
fisttp
cld
sbb
scas
rcl
in
das
add
xor
mov
pop
bound
call
rcr
add
and
and
pop
clc
and
sti
xor
push
cmp
or
or
mov
outs
and
pop
bound
call
add
clc
mov
xchg
mov
sub
es
inc
push
loopne
pop
shr
dec
loopne
shr
jg
jl
xchg
add
mov
or
dec
or
loop
jo
mov
add
sbb
das
loopne
sub
sub
jge
jae
out
add
clc
pop
loopne
idiv
loopne
rcl
aas
add
push
mov
cmps
rcl
lock
imul
sbb
add
retf
sar
dec
leave
jno
pop
add
or
loopne
or
add
jle
clc
jge
sub
adc
add
clc
push
loopne
cmp
adc
ds
cmp
push
nop
and
jnp
cld
pop
js
mov
push
add
add
jge
in
inc
scas
jns
cmp
shr
sub
dec
repz
push
jmp
xchg
adc
in
xor
jnp
js
retf
sbb
popa
aas
(bad)
frstor
pop
jmp
hlt
cli
imul
out
mov
mov
stos
popf
rcr
daa
jp
gs
sub
pop
clc
ins
stos
xor
cmp
add
int
push
neg
lods
test
push
or
shl
scas
mov
(bad)
ds
cmps
jecxz
pushf
xor
and
inc
pop
jne
data16
clc
xor
ins
imul
loope
sbb
repz
aaa
sub
icebp
mov
lods
xchg
xchg
call
cmp
cdq
push
adc
mov
movs
inc
ret
push
jmp
and
mov
jmp
rol
or
enter
mov
aam
push
pop
jl
xchg
imul
mov
fst
sbb
ss
fild
pop
nop
and
dec
ins
inc
popf
sbb
popf
js
les
dec
jae
movs
loop
mov
lahf
mov
in
dec
fsub
sahf
jae
mov
xchg
jl
pop
outs
mov
inc
push
push
pop
stos
xchg
(bad)
fnstsw
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
aas
jl
add
mov
(bad)
andps
mov
lds
push
lods
cmp
sbb
movs
stos
sub
aad
ret
cmp
jmp
xchg
(bad)
fxch
clc
ror
jb
cmps
test
outs
jbe
jmp
jmp
inc
das
push
jecxz
sub
aad
xlat
scas
push
call
pop
pop
push
cmps
dec
jns
push
call
push
pop
jbe
cmc
gs
popf
dec
mov
push
jge
sbb
sub
stos
mov
imul
mov
shl
hlt
push
fwait
imul
jo
dec
mov
pop
int
stc
ins
pop
or
xchg
sbb
jmp
inc
push
and
jo
pop
mov
jmp
ret
or
adc
jno
pop
nop
jns
pop
pop
push
call
inc
pop
mov
mov
cmp
call
mov
mov
sub
dec
ret
jb
fsubr
sub
nop
xor
jp
pop
sub
sub
mov
or
ins
mov
sub
fst
and
sub
into
gs
aas
rol
fs
mov
adc
adc
test
daa
jmp
out
jecxz
jmp
(bad)
ins
rcr
in
push
into
sub
outs
push
push
ret
sub
mov
xor
retf
jmp
dec
sbb
jge
rol
mov
mov
xchg
leave
or
push
in
dec
movs
and
sti
cli
cdq
iret
vmread
sub
jmp
dec
cmps
mov
xor
fadd
fdiv
ss
xlat
ins
or
call
rcr
mov
imul
dec
lea
mov
arpl
mov
xchg
push
jnp
out
dec
lahf
pop
bnd
cmp
sub
lods
and
pop
xchg
add
in
mov
js
mov
pop
nop
lgs
cdq
imul
mov
xchg
fs
pop
xchg
push
pop
mov
and
in
fisttp
fs
adc
ss
mov
js
xchg
sub
iret
imul
inc
xchg
push
fidiv
sub
shl
and
mov
retf
dec
int
xor
int3
or
sar
inc
sub
jge
data16
mov
out
mov
sub
mov
shr
fild
xchg
xchg
xchg
mov
pop
dec
fwait
pop
aas
inc
outs
inc
xchg
rcr
ror
pop
pusha
cli
(bad)
fcmovnu
lods
daa
pusha
aas
jmp
mov
sbb
iret
pop
nop
enter
xchg
rcr
mov
add
ret
mov
int
test
aas
push
mov
cmps
popa
lahf
ins
mov
mov
and
push
fdiv
sbb
shr
sub
cmp
movs
jbe
gs
mov
push
mov
mov
fsubr
mov
mov
jp
inc
or
xor
mov
xchg
je
je
mov
popf
pop
sbb
inc
or
push
mov
add
jb
leave
not
dec
cmp
sar
retf
push
inc
les
mov
cmp
fdiv
cmp
pushf
imul
ins
mov
nop
cmc
push
in
xchg
pop
or
xchg
fmul
out
ins
pop
dec
dec
sub
bound
lahf
repnz
sub
mov
inc
mov
xor
cmp
jno
jae
xor
xor
pop
sti
(bad)
sti
add
(bad)
int3
mov
mov
imul
mov
ds
enter
lods
xchg
sbb
dec
cmp
cmc
rcr
(bad)
into
imul
sti
arpl
hlt
ror
pop
xchg
inc
mov
test
and
or
mov
push
dec
in
mov
cmps
das
scas
repz
mov
outs
sti
xchg
lahf
pop
mov
lods
and
stos
gs
jns
sbb
xchg
cmc
cmps
jne
inc
mov
push
pop
(bad)
rcl
in
jns
xchg
mov
mov
mov
sub
add
rcr
shr
and
dec
adc
or
int3
imul
adc
adc
icebp
push
(bad)
nop
pop
ins
push
arpl
inc
jle
test
pop
mov
cs
pop
mov
mov
retf
js
jg
mov
jmp
jne
pop
iret
inc
repz
dec
arpl
jmp
or
sub
cmp
add
fs
xchg
mov
mov
sar
daa
dec
mov
ins
retf
jp
call
pop
xchg
jbe
mov
xor
inc
into
in
aas
(bad)
mov
mov
push
ret
in
ds
movs
mov
iret
adc
xchg
mov
mov
stos
clc
xor
sub
jmp
jns
lds
jle
mov
repz
nop
inc
(bad)
cli
mov
test
clc
daa
into
in
scas
(bad)
push
dec
xor
mov
push
mov
push
xlat
mov
mov
outs
cmps
repnz
add
mov
(bad)
stc
xchg
imul
sti
jl
scas
and
sub
jmp
mov
cmp
add
outs
fsub
push
les
pushf
add
stc
push
popf
mov
loopne
mov
arpl
and
mov
and
stc
cmps
or
mov
lods
sbb
dec
dec
out
ret
pop
not
rcl
mov
cmp
and
shr
scas
test
adc
sub
push
mov
pop
les
mov
xchg
cmp
add
push
mov
fistp
fdivr
pop
aas
neg
push
retf
aas
or
inc
inc
cld
out
sbb
retf
jmp
mov
mov
aas
cmp
lods
push
inc
jl
sub
inc
fild
imul
jo
fmul
push
retf
leave
mov
adc
jecxz
sub
repz
adc
enter
fidiv
cmc
and
jmp
sbb
stos
mov
sub
test
call
test
or
push
sahf
out
sbb
mov
cmp
jns
sub
fmul
mov
inc
or
mov
test
clc
clc
fsub
(bad)
into
scas
(bad)
imul
into
dec
int3
mov
xor
jmp
loop
push
push
movs
pop
jno
test
mov
sub
pusha
and
icebp
shl
jle
aas
fxtract
mov
mov
(bad)
adc
inc
maskmovq
idiv
dec
pop
nop
sub
imul
sub
xchg
ret
sbb
jle
push
into
add
sti
jne
data16
imul
jb
out
mov
addr16
(bad)
aaa
push
(bad)
fisub
pop
sbb
mov
fbstp
lahf
addr16
xor
xlat
mov
sub
sub
and
xor
sti
call
in
ret
call
mov
in
jo
push
jecxz
push
pushf
inc
fidivr
loope
inc
ins
jmp
sbb
push
cld
push
sub
test
loop
(bad)
jecxz
in
cmps
pop
arpl
pop
cmp
dec
aas
in
jne
adc
int3
pusha
jnp
frstor
xor
xchg
or
mov
fbld
cmp
punpckhbw
mov
mov
clc
fimul
jae
outs
add
ds
lock
(bad)
(bad)
rcl
inc
out
int
and
ret
out
pop
push
loopne
sub
inc
xor
rcr
sbb
arpl
loopne
int
lock
mov
ret
mov
pop
pusha
int
or
retf
ins
icebp
pushf
mov
sti
outs
in
push
retf
lahf
iret
mov
xor
or
adc
push
test
add
sbb
mov
mov
inc
mov
dec
inc
bswap
jno
enter
jecxz
jp
lods
adc
inc
bound
jno
mov
aad
ins
shl
fcmovne
imul
test
pop
xor
popf
or
test
inc
ins
mov
dec
repz
jne
into
inc
jae
fs
and
mov
out
mov
jne
test
fcom
pop
mov
shr
(bad)
mov
outs
out
pop
retf
adc
add
xchg
je
mov
pop
fisttp
cmp
mov
stc
mov
into
mov
jmp
mov
retf
push
(bad)
cmp
jge
aas
(bad)
jb
repz
clc
ret
push
retf
push
pop
pop
jmp
pop
pop
dec
sbb
rcr
jmp
pop
ss
pop
fist
pop
cmp
fsub
bound
out
xchg
dec
imul
enter
jbe
sar
mov
jo
aam
repz
or
dec
js
sbb
sbb
inc
imul
shl
jg
aas
out
lods
pop
sub
enter
jl
inc
jbe
sti
cmp
jmp
das
fwait
cmc
imul
xor
ror
leave
and
loopne
push
mov
jbe
adc
lods
shl
btr
aam
popa
pushf
sar
int
arpl
mov
add
jmp
aas
push
lods
pop
xchg
out
scas
sbb
into
adc
cmp
out
push
xlat
div
sub
lahf
imul
xchg
ss
retf
icebp
sbb
retf
push
sar
stos
pop
jae
das
arpl
push
mov
fcmovb
mov
out
mov
mov
jp
ins
sbb
mov
cmp
jmp
push
scas
ret
mov
mov
jmp
icebp
sti
mov
out
inc
sub
pop
cmps
(bad)
push
call
into
mov
xchg
mov
pop
dec
in
dec
mov
fdiv
fsub
pop
loop
xchg
mov
mov
xor
cli
ret
outs
out
loop
movs
mov
sbb
(bad)
mov
jnp
sbb
inc
test
outs
imul
ror
xlat
pop
in
sbb
cli
push
push
scas
dec
dec
jge
xor
out
in
cmps
adc
pop
lea
mov
sub
sahf
lds
stos
mov
adc
cmps
shl
(bad)
sub
sbb
leave
pop
sbb
(bad)
mov
std
leave
(bad)
xor
sub
push
sahf
mov
shl
sub
popf
cmc
jge
in
push
push
cmp
movs
icebp
jl
(bad)
enter
sbb
mov
jg
loop
hlt
ds
dec
jns
pop
push
and
xchg
push
rcr
into
sbb
je
in
cld
stos
jb
loop
add
call
or
mov
loopne
mov
inc
mov
daa
mov
xor
mov
adc
pop
pop
xchg
mov
ja
stos
jecxz
fcmovnu
mov
mov
xchg
or
add
mov
test
xchg
js
cmp
fstp
loope
inc
jmp
push
xor
stos
pop
(bad)
div
cmp
sub
lahf
add
repz
xor
lahf
int3
pop
mov
int3
fst
ja
jp
xchg
adc
xor
jl
test
mov
popf
pusha
xchg
push
or
ficomp
leave
lea
in
(bad)
out
out
jecxz
jl
mov
arpl
shl
push
ja
repz
adc
aas
int3
xchg
pop
clc
test
dec
neg
ins
inc
mov
aad
dec
or
xchg
dec
xchg
jne
cmp
pusha
sub
fmul
daa
adc
daa
movs
jecxz
mov
inc
aad
fisub
jno
mov
lds
stos
push
mov
aaa
les
sub
dec
js
outs
rcl
xchg
inc
repz
popf
adc
test
jp
sub
les
jmp
scas
mov
mov
ins
and
inc
pop
add
lods
cdq
mov
enter
fst
aas
out
mov
imul
popa
(bad)
in
or
movs
adc
dec
sbb
outs
sub
jnp
inc
cli
mov
je
je
mov
outs
out
pop
push
push
mov
shl
mov
adc
push
movs
out
dec
inc
popf
jae
stos
das
ja
mov
ss
(bad)
cs
mov
mul
mov
mov
stc
xchg
fcomp
or
in
cmps
clc
in
clc
add
movs
mov
mov
lods
push
xchg
xlat
push
cld
jge
mov
dec
mov
fmul
ja
jp
xlat
setge
xchg
inc
out
das
hlt
sub
lock
mov
cmp
mov
inc
repz
push
out
retf
(bad)
pop
or
sbb
mov
jnp
push
pop
xchg
fwait
int
jg
popa
jge
in
xchg
fldcw
sbb
xor
mov
leave
outs
ss
popf
jmp
in
mov
push
cmp
cdq
clc
mov
sbb
push
push
outs
xor
or
mov
xlat
addr16
or
je
neg
fild
mov
repnz
mov
test
jmp
stos
xchg
retf
push
mov
std
push
xchg
add
in
mov
jl
inc
fisttp
faddp
jno
sbb
or
mov
sbb
pop
or
retf
jmp
lds
or
sbb
mov
daa
mov
retf
call
and
(bad)
iret
sbb
pusha
jl
in
jg
or
xor
aam
jle
jge
fsub
out
shr
aas
in
adc
mov
jno
cmps
leave
lds
(bad)
mov
pop
cmp
push
mov
ja
dec
ror
xchg
cmp
iret
or
adc
adc
or
std
adc
(bad)
fld
aam
std
fbstp
or
adc
sub
(bad)
popa
sub
cdq
lahf
sub
add
in
cmc
inc
popa
jge
jae
jmp
cmp
xor
in
sar
into
outs
mov
sbb
addr16
pushf
mov
fld
push
outs
dec
jge
(bad)
mov
sub
jnp
outs
push
popa
dec
jge
jmp
scas
pop
mov
cmp
xchg
cwde
arpl
lahf
lahf
(bad)
fwait
jns
sbb
push
xor
in
shl
mov
mov
leave
dec
jmp
repnz
xchg
and
lock
mul
xor
mov
add
sbb
or
int
shl
and
pop
mov
leave
xchg
xor
jnp
faddp
test
mov
jbe
lea
imul
sar
jle
enter
and
cdq
dec
xor
fiadd
cli
ins
ror
test
ja
xor
fisubr
mov
sti
pop
add
in
jmp
(bad)
cmps
les
cmps
jge
push
jb
xchg
xchg
mov
in
mov
mov
popf
test
jae
out
inc
je
mov
xchg
fcom
sbb
jecxz
and
mov
retf
mov
je
sbb
cdq
mov
jl
and
jp
call
sub
sti
mov
iret
jno
mov
fs
loopne
mov
inc
ror
lods
pop
push
xor
push
ret
adc
ficomp
xor
out
or
cmc
pop
jge
push
dec
xchg
mov
inc
lock
out
mov
push
jnp
and
mov
cmc
outs
cli
rcr
fwait
fs
mul
pop
inc
jg
jmp
fcomp
mov
push
or
daa
jmp
xor
sbb
push
xor
sbb
cmp
cwde
xor
sub
ret
test
jge
lea
lods
jmp
out
add
sub
popf
in
aam
dec
int3
ins
aas
and
mov
sbb
je
rol
mov
div
popa
mov
aaa
sub
xchg
lods
push
lds
jb
xchg
fs
mov
repnz
pop
dec
dec
loope
movs
dec
pop
dec
cdq
and
idiv
sahf
jne
mov
shl
or
push
pop
pusha
ins
das
retf
jb
ret
popf
sti
out
mov
outs
xor
(bad)
(bad)
inc
clc
pop
add
add
pop
js
pop
idiv
and
inc
scas
or
and
mov
mov
mov
(bad)
xor
call
cmp
jmp
dec
retf
jg
mov
(bad)
idiv
fcomip
fnstsw
dec
fldenv
mov
cmc
scas
ja
int
je
aad
and
cs
dec
movs
repnz
loope
adc
or
loope
dec
mov
rol
aad
xchg
fstp
xor
mov
mov
cmps
inc
sbb
xchg
or
cmps
bound
sbb
aas
iret
mov
scas
out
or
push
leave
pop
push
test
jo
cmp
cmp
cli
shr
std
add
lods
mov
mov
stos
push
stos
gs
xor
int
push
inc
test
jb
mov
(bad)
push
jle
clc
(bad)
jbe
es
pop
push
xchg
sub
out
repnz
sub
add
call
push
inc
add
adc
push
pop
js
mov
xor
sar
jns
arpl
xchg
mov
cmps
cmp
inc
outs
in
mov
add
adc
out
das
xlat
(bad)
mov
fstp
jmp
jg
mov
psraw
push
out
inc
inc
inc
inc
jp
inc
ja
or
sbb
xchg
xchg
and
ret
out
shl
mov
retf
mov
mov
xchg
mov
fwait
jg
clc
in
sub
sar
mov
or
gs
das
sbb
fistp
bound
retf
ror
repnz
push
in
mov
(bad)
jmp
push
ret
jecxz
icebp
mov
(bad)
adc
mov
mov
inc
aad
sar
push
xor
std
sub
shl
addr16
std
xchg
jge
mov
movs
mov
push
movs
dec
mov
je
sti
dec
not
aam
movs
mov
repnz
jmp
inc
das
jmp
pop
and
adc
mov
push
fbstp
rol
retw
ins
das
push
rol
jmp
loopne
loopne
frstor
call
xchg
mov
jb
add
imul
push
ds
sub
xchg
pop
repz
or
pop
mov
lahf
xchg
pop
rcl
js
cdq
lock
pop
ret
mov
aam
pop
not
push
jmp
mov
cmp
sub
addr16
adc
dec
push
jle
(bad)
adc
btr
in
push
inc
popf
out
(bad)
aas
ins
or
xchg
cmp
fisub
(bad)
xlat
sbb
hlt
mov
sahf
mov
mov
mov
adc
xchg
in
pop
aam
popa
pop
cmp
push
jmp
(bad)
cli
pop
loopne
jbe
pop
gs
xchg
inc
out
rol
call
das
imul
dec
dec
dec
push
xchg
call
cmp
sbb
ins
fdiv
sub
rcr
push
js
mov
push
(bad)
sbb
in
or
rol
add
popa
jns
and
and
cmp
jbe
jne
fld
push
xor
push
dec
jnp
sbb
fdivp
xor
mov
sar
jb
aam
cmp
cdq
sub
pop
cmps
cmp
mov
mov
jae
xor
pop
outs
lock
inc
push
scas
push
rol
lea
enter
(bad)
push
clc
into
scas
mov
call
push
out
adc
and
std
push
mov
pop
sub
dec
test
imul
mov
out
dec
js
pushf
pop
inc
dec
les
clc
cs
fwait
xor
jl
and
xor
mov
mov
sub
mov
jae
and
mov
addr16
jmp
xchg
out
mov
xor
std
scas
(bad)
cmp
jg
mov
sub
push
mov
scas
mov
or
mov
mov
xor
jl
fsub
pop
inc
sub
or
test
jle
sub
or
or
mov
jo
aam
sti
rcl
test
loopne
in
and
push
leave
mov
sbb
mov
sar
add
cmc
mov
adc
mov
or
int3
pop
retf
lods
or
(bad)
cmp
and
sbb
movs
inc
mov
sbb
repnz
push
ins
xchg
scas
push
mov
add
inc
pop
push
in
aam
cmp
loopne
scas
cmps
mov
out
retf
repz
push
gs
add
cmp
loopne
xor
mov
push
push
pop
or
inc
loopne
pop
sbb
mov
pop
xor
mov
cs
stos
mov
push
pop
xor
add
inc
(bad)
icebp
add
pop
cld
clc
imul
xchg
cmp
(bad)
xor
mov
xchg
movs
mov
and
outs
fbstp
adc
or
pop
test
sahf
loope
pop
xchg
add
clc
xchg
mov
sbb
fwait
jne
pop
mov
jnp
pop
js
test
jno
retf
mov
call
ds
or
stc
mov
gs
out
(bad)
mov
xchg
jmp
xor
outs
loop
jmp
out
dec
js
fsub
loope
add
push
movs
inc
cmps
xchg
ss
xchg
aad
pop
js
sub
jmp
cld
loope
cmp
ror
movs
jo
push
test
(bad)
aad
adc
ret
pop
ret
mov
sub
inc
fisubr
sbb
cwde
adc
rcl
jne
jge
jmp
cmc
cmps
dec
cmps
mov
(bad)
xchg
ret
test
xor
pop
cmps
jmp
ret
in
mov
adc
cmps
xor
aaa
xchg
movs
leave
push
cmp
or
arpl
mov
clc
inc
add
xchg
cmp
cmp
loope
jae
fnstsw
ret
jl
gs
push
loope
push
push
call
xchg
sub
pop
jae
int3
cmp
mov
push
push
xchg
mov
outs
jmp
dec
fwait
stos
xor
push
xchg
jbe
sub
add
jmp
mov
test
fs
aas
mov
pop
sub
call
cwde
das
sbb
ins
xchg
fiadd
jne
fldcw
cmp
mov
mov
pop
sbb
adc
mov
mov
cmp
xor
xchg
loopne
add
loopne
lock
rcr
loope
(bad)
fnstenv
push
mov
ja
hlt
push
into
push
pop
leave
xchg
lods
ds
stos
sbb
adc
sbb
mov
sbb
js
pop
pop
dec
lods
push
sub
ror
popf
mov
xchg
pop
inc
outs
adc
inc
sub
sbb
sub
cld
loopne
jle
ret
test
mov
xor
sbb
mov
repz
lock
lods
stc
nop
adc
loope
lea
sbb
or
xor
mov
push
push
popa
mov
in
fs
test
push
mov
inc
stc
hlt
out
shl
in
fucomip
mov
mov
jne
repz
scas
idiv
repz
pop
(bad)
jl
sar
iret
cmps
pop
mov
jmp
inc
cld
mul
rcr
and
aad
iret
cmps
pop
cmp
addr16
pop
popa
repz
lahf
jmp
scas
or
shr
mov
push
cmp
jnp
fcmovnu
fbstp
pop
icebp
sbb
cmp
(bad)
mov
jg
pop
cld
jge
cld
cmp
mov
cmp
and
mov
add
pop
lock
idiv
push
jge
mov
lods
mov
or
icebp
jnp
cmp
jecxz
in
clc
mov
lock
loopne
cmp
cld
std
jle
pop
icebp
into
cmp
sti
pushf
add
pop
icebp
call
out
dec
jecxz
xlat
lods
fcomp
xchg
stc
stc
lock
mov
mov
aaa
(bad)
mov
mov
add
shl
aas
push
push
loop
clc
pop
xor
outs
bound
jmp
cmp
jl
repz
xchg
je
iret
cmp
aas
cmp
sbb
add
or
xlat
ret
jns
jns
jno
mov
out
cs
lahf
sar
iret
pop
jne
iret
and
jg
addr16
mov
addr16
jno
ja
jnp
iret
icebp
cmp
jo
jno
lock
pop
mov
aaa
jle
xlat
or
bnd
repz
out
jno
lock
jo
lock
pop
pop
cmp
cs
mov
(bad)
cmp
cmc
icebp
sahf
clc
fbstp
mov
mov
out
shl
mov
xor
mov
(bad)
jmp
jg
test
mov
lock
cmp
push
cmp
cmp
fimul
mov
sbb
lock
jle
jge
(bad)
ds
add
mov
idiv
jl
xchg
mov
imul
loopne
icebp
(bad)
hlt
push
sbb
icebp
cmp
cmp
pop
and
sbb
cs
fadd
mov
cmps
sbb
(bad)
inc
les
je
popa
push
stc
lea
mov
stos
in
ficomp
in
xchg
dec
addr16
sbb
loop
mov
jnp
sbb
cli
or
cld
nop
xor
cmp
mov
cmp
fsubr
ins
sub
bnd
xor
sti
ror
ret
loope
clc
add
pusha
fnstsw
jne
add
jg
ja
out
enter
jle
cmp
mov
loop
mov
mov
and
ret
sbb
mov
in
jle
pop
push
pop
pop
aas
fdivrp
out
push
xchg
imul
adc
sub
jne
retf
pop
add
jb
pop
sbb
or
ret
xchg
dec
push
ucomiss
pop
std
outs
dec
lock
ds
shl
cs
cmp
iret
sbb
rep
jbe
ja
push
popa
test
jmp
sbb
jl
jl
out
mov
sbb
cmp
jmp
scas
jmp
mov
in
jle
test
or
mov
into
pop
dec
int3
jae
mov
mov
arpl
xchg
cwde
test
ror
aaa
cmp
out
imul
sti
in
push
ror
fistp
or
mov
jl
retf
jns
ret
sub
das
or
mov
pop
dec
loope
fadd
in
not
sub
or
sbb
xchg
or
inc
int
rcl
dec
xchg
inc
push
pop
in
fdivr
out
popa
push
loope
mov
sub
retf
mov
pop
ret
or
xlat
or
sbb
repnz
imul
popf
loope
mov
xlat
mov
out
mov
fst
pop
mov
push
jge
mov
mov
jo
imul
cdq
or
out
lods
cdq
pop
mov
pop
movsx
aaa
cmp
shr
das
sbb
nop
popf
mov
cmc
daa
xor
fisttp
cmp
lock
out
sub
ret
int
push
and
mov
in
sti
ja
test
pop
adc
jecxz
ds
stos
shr
cli
dec
pop
cmps
dec
call
call
test
shl
mov
xor
push
push
iret
pop
mov
out
pop
pop
mov
in
xor
mov
xor
rol
xor
pop
adc
dec
push
xchg
push
pop
arpl
jg
ror
nop
lds
cmp
pop
cwde
pop
dec
movs
jne
in
ds
adc
adc
mov
popf
stos
mov
fcompp
push
loopne
ja
pop
loop
retf
loop
pop
(bad)
fld
lock
fsubr
iret
rcr
pushf
stos
leave
jmp
(bad)
idiv
(bad)
push
lods
mov
stc
sbb
arpl
jg
xchg
dec
iret
sub
pop
push
nop
or
leave
dec
repz
add
sub
fs
mov
jg
icebp
test
pop
loope
cmp
dec
push
movs
movs
mov
movs
daa
cmp
neg
je
(bad)
jo
int
hlt
mov
movs
pop
cs
dec
xchg
cmp
xor
cli
icebp
jo
test
cmovnp
mov
mov
lods
xchg
adc
ret
mov
pusha
jns
imul
and
ja
sti
inc
cmps
mov
add
int3
lds
jo
jb
xor
jge
push
sub
sar
jp
in
xor
pushf
add
fsubr
ret
sbb
mov
movs
in
addr16
jo
shr
sbb
pop
fdiv
xor
out
cwde
jl
sbb
sub
mov
or
xchg
lock
movs
retf
add
int3
out
rcr
popf
lock
mov
jg
leave
test
push
dec
std
pop
sub
xchg
scas
pop
cli
mov
cli
out
int
cmps
adc
cdq
jno
addr16
enter
sbb
pusha
pop
loopne
jo
imul
clc
sbb
stc
sbb
xchg
xchg
mov
pop
mov
xchg
retf
enter
cmps
mov
sub
adc
icebp
pusha
ins
rcr
add
mov
xchg
mov
push
and
mov
nop
aad
mov
cli
push
popf
(bad)
push
push
fucomi
jge
or
or
inc
fidivr
bound
mov
outs
xchg
or
cmp
mov
adc
xchg
cmp
xchg
mov
jmp
sub
test
ret
inc
out
(bad)
aad
fidivr
jne
ror
mov
jae
shl
push
ja
mov
clc
in
out
stos
in
aas
jo
dec
jle
xor
mov
adc
pop
cld
cmp
push
dec
add
pop
retf
mov
add
mov
iret
pop
dec
cmp
jmp
int3
(bad)
stc
add
div
xchg
xchg
or
retf
xor
js
lods
xchg
push
xor
jnp
jmp
in
(bad)
(bad)
sub
fwait
xchg
test
jnp
shl
shl
pop
dec
mov
sbb
ret
cmps
ret
inc
or
dec
dec
(bad)
mov
fstp
adc
outs
or
ror
out
loope
clc
and
lods
xchg
into
les
adc
rol
sub
xchg
stos
mov
scas
gs
sbb
in
mov
clc
mov
call
ins
ror
push
add
es
cmp
pop
xchg
not
(bad)
adc
push
dec
cmp
test
push
push
push
bound
call
inc
imul
(bad)
dec
cwde
jmp
adc
mov
das
or
addr16
or
div
arpl
jge
inc
jg
dec
xchg
cld
sub
loopne
mov
pop
sub
inc
out
add
(bad)
out
sar
icebp
xchg
cmp
dec
xchg
imul
or
ret
add
das
xor
mov
adc
and
jo
js
imul
or
jg
test
push
sub
jns
loopne
aaa
or
repnz
mov
xor
pop
sbb
jmp
dec
dec
sub
test
mov
(bad)
jns
jmp
rol
pushf
psrlq
sbb
mov
lods
dec
pop
fimul
lods
lds
sub
ja
adc
out
push
test
fldenv
imul
jns
xchg
les
div
sbb
stc
inc
aad
pop
jmp
dec
addr16
push
ins
shl
xchg
adc
or
or
les
pop
lahf
adc
in
push
shl
bswap
add
mov
mov
mov
daa
loopne
pop
jle
push
cmp
mov
jle
cmp
cmp
fdivp
pop
imul
rcr
ret
lea
aas
lock
lock
and
xchg
mov
lock
iret
mov
or
aas
leave
sub
outs
mov
retf
jns
lock
rcl
je
ja
pop
jge
out
(bad)
loope
mov
sysenter
add
cmp
adc
jne
push
pop
repnz
push
shr
pop
dec
adc
nop
je
pop
xchg
jp
shl
test
icebp
xchg
outs
jecxz
push
imul
pop
daa
xor
add
xchg
jne
cmp
test
mov
out
(bad)
es
xchg
in
add
aas
push
add
ficom
pop
rol
frndint
push
adc
dec
jne
cli
pop
add
xchg
ret
mov
bound
jecxz
stc
add
out
(bad)
xor
push
mul
or
in
mov
mov
sbb
cmpps
movs
shl
rcr
cmps
repnz
xor
das
lea
push
dec
pusha
or
xchg
rcl
xchg
fwait
retf
jno
add
std
mov
fucomi
call
inc
xchg
jg
fdivr
push
iret
add
jae
aas
loopne
cli
mov
sub
fist
loopne
add
je
inc
mov
jbe
mov
outs
std
dec
mov
sbb
(bad)
add
or
test
sub
sbb
sbb
daa
push
or
inc
push
sub
out
call
jo
adc
mov
ds
shl
outs
pop
add
push
rcr
inc
push
adc
test
jg
pop
xor
fmulp
push
enter
sbb
pop
pop
mov
jb
(bad)
pop
mov
pushw
sub
mov
mov
test
fwait
shl
fmul
sub
pop
mov
(bad)
jle
ins
mov
daa
lahf
push
popf
mov
xchg
mov
xchg
cmp
cwde
dec
sbb
aad
loope
add
mov
popa
cmp
inc
clc
aas
inc
or
ja
in
pusha
mov
and
les
(bad)
xor
cld
(bad)
in
dec
scas
sub
test
jno
sub
mov
repnz
pop
cwde
adc
out
icebp
cmp
dec
jo
mov
xlat
pushf
add
push
mov
inc
sbb
bound
imul
or
adc
out
rcr
into
outs
push
jp
fcom
pop
dec
(bad)
jbe
sbb
shr
mov
icebp
xchg
jo
test
mov
mov
xor
jo
cmp
aaa
mov
dec
inc
mov
cld
ret
lahf
in
xor
ret
out
pop
inc
dec
scas
push
sahf
or
pop
sub
add
xchg
lock
xor
pop
imul
and
nop
inc
lods
jmp
xchg
or
aad
retf
retf
push
inc
push
jl
jne
leave
mov
sbb
jb
mov
outs
out
cwde
add
cdq
daa
jecxz
lock
cld
adc
mov
sub
adc
or
stos
out
stos
push
cmp
sbb
les
jmp
dec
mov
out
lock
push
lock
or
add
fiadd
xchg
aas
test
adc
add
(bad)
or
mov
cmp
sbb
cmc
ret
enter
cld
or
pop
mov
cmp
pop
push
sbb
pop
add
pop
popf
mov
iret
ret
arpl
push
pop
dec
fwait
pop
xchg
mov
mov
sub
aad
jbe
test
xchg
sbb
push
sbb
inc
addr16
jns
or
shl
or
fadd
add
mov
xchg
push
call
test
cmp
cli
test
add
cmps
jmp
sub
xlat
shl
mov
mov
out
and
cld
les
pop
push
out
popa
neg
cs
fdivr
sbb
sti
push
or
adc
jns
or
and
not
test
dec
test
fisub
adc
(bad)
fst
push
lea
outs
popa
cmps
push
inc
sub
mov
lock
es
push
(bad)
cmp
jns
sub
loopne
in
jl
pop
hlt
test
sbb
in
mov
idiv
sub
mov
outs
add
add
pushf
rcr
sub
int3
push
scas
dec
ds
data16
out
push
push
add
push
jb
jg
dec
pop
jne
int
or
jmp
lock
mov
repz
jmp
cs
fdiv
sub
inc
imul
jge
ja
outs
(bad)
in
(bad)
jo
cmp
pop
cmp
jb
jne
outs
daa
push
sub
cdq
xchg
cmc
(bad)
sar
fisubr
call
loope
repz
fiadd
(bad)
adc
pop
xchg
out
stc
add
ficomp
addr16
lock
jp
mov
daa
push
dec
inc
mov
mov
movs
sub
popa
call
jae
iret
scas
cmp
and
lock
lahf
jo
(bad)
pop
(bad)
push
pop
cmp
adc
repnz
mov
or
jmp
ret
adc
fistp
adc
sub
repnz
sar
mov
mov
cmp
and
push
jmp
add
fwait
out
fimul
sbb
ror
test
push
arpl
sub
(bad)
nop
data16
aaa
rol
(bad)
test
adc
inc
jno
call
enter
pop
stos
ficomp
dec
test
loope
xor
xchg
xchg
stos
ins
mov
cdq
addr16
nop
mov
sar
cmp
rol
ss
dec
sbb
scas
ins
mov
inc
sub
test
xchg
mov
das
loopne
cwde
mov
xor
sbb
mov
mov
test
popf
ja
ss
pop
pop
out
or
push
fwait
push
icebp
xor
dec
inc
xchg
or
jge
int3
pop
pop
ja
sar
push
push
sub
cdq
cmp
lock
cmp
mov
clc
rcr
dec
pusha
sub
sub
mov
mov
pop
dec
gs
fwait
push
adc
cli
(bad)
mov
jnp
inc
and
cmp
aam
test
test
hlt
push
inc
retf
inc
jle
outs
jp
adc
mov
fldcw
pop
xchg
je
push
nop
test
and
pop
jno
add
inc
inc
ins
dec
call
or
inc
sahf
jge
icebp
mov
sti
and
sahf
mov
dec
repnz
out
test
cmps
sti
mov
mov
inc
jecxz
std
jge
dec
pop
add
rcr
shl
cld
(bad)
jmp
sub
in
mov
jbe
inc
retf
ret
test
or
shr
ficom
push
push
outs
test
int
pop
adc
sub
fadd
into
bound
pop
xor
add
outs
adc
adc
sbb
mov
or
test
clts
sbb
fstp
retf
test
mov
dec
repnz
fisttp
mov
lock
sub
push
mov
dec
xor
sub
icebp
push
outs
mov
add
ins
mov
push
sub
sub
(bad)
cmp
shl
ds
cmps
fwait
pushf
je
dec
gs
out
test
nop
add
cmp
jge
sbb
outs
mov
dec
or
pop
mov
xchg
daa
(bad)
sahf
add
sahf
test
mov
cmps
in
out
pusha
mov
xor
hlt
jae
shl
pop
movs
mov
mov
jno
dec
jae
test
call
sbb
call
pop
(bad)
test
push
push
fisttp
add
jle
pop
pop
rcl
dec
ret
js
test
mov
jecxz
jp
push
jne
inc
or
xor
shr
out
leave
sub
cmp
xchg
(bad)
into
xchg
mov
cld
add
xchg
cld
adc
jl
xchg
daa
mov
fmul
jae
mov
clc
adc
fdivr
cmp
in
bound
adc
or
es
xchg
in
push
xchg
mov
(bad)
shl
sbb
push
call
dec
pop
lods
mov
scas
ror
push
xlat
out
popf
test
loopne
mov
cmp
arpl
ret
pushw
std
popa
cmps
sbb
icebp
pop
clc
data16
pop
outs
call
inc
ret
data16
and
mov
push
rcl
adc
loopne
lds
ret
pop
rcr
or
cmps
xchg
jbe
xor
xchg
retf
push
dec
xor
mov
sti
sbb
and
stos
xchg
jbe
(bad)
add
cmps
int3
hlt
sahf
ins
inc
cs
xchg
enter
xchg
fcom
inc
clc
jecxz
lock
mov
adc
and
add
add
fs
pusha
cwde
and
jnp
pop
test
(bad)
push
cwde
mov
mov
mul
sti
pop
adc
mov
jns
pop
jge
mov
jae
xchg
cmp
pushf
out
cmp
pop
pop
iret
jle
ins
mov
sahf
(bad)
ins
loopne
push
test
movs
aam
mov
rol
cli
or
test
cmps
mov
pop
adc
cmps
add
adc
xor
(bad)
aad
jne
mov
test
out
cwde
or
mov
and
mov
stos
ins
mov
pop
xor
push
ret
leave
into
cs
imul
scas
fisubr
in
fidiv
sbb
cmc
or
sbb
mov
pop
dec
inc
js
aad
xor
jno
ret
pusha
sbb
das
nop
fbstp
inc
fist
nop
icebp
ja
inc
in
cmp
add
test
nop
outs
jnp
cmp
jl
in
je
gs
push
or
(bad)
retf
and
xlat
in
(bad)
pop
repz
mov
sbb
or
push
das
popf
loopne
nop
mov
add
inc
sti
push
push
sub
dec
test
shl
dec
add
add
push
inc
rol
mov
(bad)
jl
pushf
push
xchg
lahf
push
imul
jp
push
dec
push
sub
scas
jle
scas
push
imul
sub
rol
push
lock
sahf
mov
add
pop
pop
sbb
outs
jo
leave
push
dec
retf
cwde
in
adc
arpl
and
push
push
mov
ins
dec
outs
lds
push
or
push
sub
nop
xchg
mov
adc
xor
jmp
xchg
mov
stc
adc
mov
xor
push
ror
xor
enter
out
xchg
sub
daa
stos
(bad)
sub
rol
not
inc
out
loope
xchg
dec
and
sbb
push
loope
dec
push
lods
jb
sti
push
int
mov
mov
icebp
sub
and
popa
mov
or
pop
xchg
add
adc
mov
jl
cmp
and
shr
bound
adc
shl
sahf
test
adc
jo
add
mov
dec
xchg
rol
cdq
add
push
jg
inc
adc
mov
icebp
out
jge
mov
icebp
adc
jo
lock
sbb
jge
mov
ss
es
shr
fidiv
dec
push
pop
out
test
pop
sbb
inc
add
sbb
imul
pop
imul
clc
xchg
stos
sub
jae
push
pusha
adc
dec
fcmovu
aaa
jnp
and
cmp
cmp
fnstsw
xchg
aas
adc
cmp
mov
in
es
ins
mov
dec
mov
shl
jmp
xchg
popa
fsubr
daa
push
pop
test
sbb
das
push
je
mov
fld
xor
mov
add
cmp
sub
xor
jnp
stos
out
jns
pop
sbb
mov
and
inc
mov
dec
neg
shr
sbb
data16
clc
xor
push
add
pop
sbb
nop
mov
loop
rcl
mov
or
or
rcr
jne
shl
sub
dec
sub
add
add
cmps
cmps
xor
mov
mov
movs
pop
jge
aas
inc
add
in
push
vmread
iret
leave
dec
and
(bad)
scas
out
mov
sbb
xchg
inc
scas
mov
mov
jbe
pop
es
xor
ret
sar
in
shr
imul
add
adc
cmp
and
clc
jae
pop
nop
shr
xchg
out
xchg
adc
xor
sub
test
or
push
retf
out
xchg
rol
test
pop
mov
push
xor
pusha
dec
out
xchg
xor
ret
into
in
or
and
cdq
das
(bad)
nop
lea
lods
cld
jne
das
and
xchg
int3
out
ins
and
dec
jp
dec
sbb
or
lods
loopne
fs
clc
xor
fadd
jecxz
js
ins
jo
icebp
mov
and
sbb
lock
mov
jg
addr16
test
pusha
add
fdivr
jmp
repz
pop
ret
xor
hlt
icebp
sub
enter
mov
das
div
and
add
loope
cwde
cmp
mov
jle
push
out
popa
cli
jmp
call
pop
es
daa
mov
inc
test
fiadd
push
jge
add
outs
sub
jbe
in
leave
aad
call
aaa
fild
mov
shl
mov
test
jo
sbb
pop
sub
in
shl
mov
mov
sbb
push
or
xlat
inc
out
push
adc
aad
mov
sti
adc
or
add
in
xor
mov
imul
les
aaa
neg
dec
repnz
mov
clc
add
pop
sub
mov
fmul
outs
or
pop
dec
stos
(bad)
xchg
lahf
out
or
sbb
sub
dec
ins
mov
(bad)
sar
sbb
mov
sbb
dec
jae
cld
aad
(bad)
mov
ret
pusha
push
pushf
(bad)
leave
fwait
xor
add
jle
hlt
cld
inc
push
pop
inc
in
popa
add
icebp
scas
(bad)
(bad)
fsubr
jbe
mov
mov
out
cmp
lock
loop
rep
aas
loopne
push
and
pop
fsub
sub
mov
int3
cwde
cmp
call
or
pop
test
shl
rol
ja
inc
data16
aaa
cmp
loop
ss
fld
or
fadd
adc
cwde
push
int
arpl
cs
cmp
iret
cli
repz
popa
lods
in
jle
xor
popa
cmps
in
mov
dec
xchg
out
jbe
adc
pop
(bad)
into
jb
stc
inc
imul
popa
xor
shr
outs
test
or
das
or
cmp
aaa
sti
rcl
or
jns
push
(bad)
fs
push
ror
pop
or
xor
ins
sbb
add
rcl
or
jg
cs
inc
cdq
ins
fidivr
xchg
test
push
in
mov
test
fiadd
lods
repnz
retf
add
rol
int
push
push
sub
div
inc
fs
jg
pop
mov
or
arpl
sub
sub
mov
push
mov
jp
(bad)
jmp
jg
in
sub
(bad)
stos
inc
adc
mov
jge
dec
icebp
movs
fcomp
lock
mov
ins
or
dec
sbb
inc
int3
out
and
scas
test
dec
movs
cmp
ret
adc
cmp
fsubr
push
dec
test
push
pop
jle
retf
cli
xchg
gs
shr
lds
xchg
shl
int3
iret
or
xchg
fldenv
dec
ds
xchg
jnp
dec
rol
iret
gs
pop
xchg
push
js
cli
or
add
pop
pop
mov
call
retf
enter
fs
stos
mov
and
pushf
inc
xor
dec
mov
retf
xlat
cmc
test
xchg
(bad)
(bad)
in
shl
xchg
mov
mov
int
ror
pop
xlat
sub
push
cdq
cmp
lock
lds
ins
cmp
adc
out
sbb
dec
mov
cmp
test
pop
arpl
iret
lods
dec
push
mov
aam
push
mov
dec
iret
push
and
cmps
add
sbb
pusha
sub
adc
sub
int
inc
push
movs
lods
in
cmp
mov
sti
adc
imul
fcom
stc
mov
sbb
retf
mov
fdivr
jge
fdivr
and
sub
mov
iret
cs
aam
add
push
call
adc
neg
inc
adc
int3
xor
cmp
call
int3
jb
loop
das
(bad)
or
in
aad
adc
mov
xchg
sub
xchg
mov
mov
(bad)
xlat
or
adc
clc
imul
xor
loop
push
pop
pushf
jge
sbb
or
aam
out
push
jne
or
xor
lods
gs
daa
jecxz
mov
lods
sbb
fadd
div
dec
xchg
push
popf
jne
xchg
(bad)
std
adc
mov
ret
push
adc
or
dec
add
mov
mov
cli
lahf
push
mov
xchg
add
and
rcl
cmp
je
call
gs
mov
lock
ret
push
pop
push
test
dec
adc
retf
sar
fst
jg
and
lods
hlt
xor
jmp
out
inc
adc
jecxz
xor
or
dec
adc
lock
mov
out
pop
xor
or
rol
call
xlat
jno
jns
dec
sbb
pop
mov
sub
dec
or
xchg
ret
(bad)
or
mov
sub
stc
mov
sub
imul
sub
neg
stc
mov
loop
call
out
dec
cmp
arpl
xchg
lock
jg
sbb
call
and
xchg
push
mov
dec
pop
pop
jg
fiadd
jg
inc
mov
std
mul
daa
adc
sub
mov
add
xlat
pusha
pop
and
jns
cld
push
rcr
fwait
cmc
es
inc
fs
cmovle
inc
jae
imul
data16
add
push
(bad)
mov
scas
stc
adc
inc
outs
pop
pop
push
sbb
cmp
or
cmp
dec
cmp
ret
add
fnstsw
loopne
pop
pusha
pusha
in
mov
pop
push
adc
add
jle
mov
out
in
sbb
or
ror
adc
mov
adc
cli
popa
mov
mov
sbb
xor
outs
jl
dec
xor
add
cdq
ja
or
daa
and
mov
lods
cmp
xchg
cs
mov
neg
sahf
push
add
jecxz
not
loope
ret
ret
call
add
cmp
xor
imul
les
pop
mov
cmp
jo
jnp
xchg
mov
ror
in
jae
xchg
xlat
push
and
push
lds
sub
imul
inc
xlat
pop
ins
add
leave
cdq
lahf
jns
leave
add
pusha
add
rol
add
jecxz
jae
neg
adc
sbb
mov
loop
pop
nop
sub
xchg
dec
mov
or
aad
mov
push
sub
push
popf
movs
bound
xor
je
dec
mov
test
add
add
jno
pushf
push
(bad)
xlat
mov
pop
mov
rol
int3
test
ins
leave
fxtract
cmp
jmp
scas
jecxz
sbb
dec
mov
int
das
or
mov
xchg
lea
div
shl
retf
fst
sti
fdivr
stc
mov
ds
sub
enter
(bad)
jns
jecxz
inc
out
neg
aas
push
mov
out
mov
sti
cvtdq2ps
mov
loopne
cmp
cmp
(bad)
mov
mov
(bad)
loop
mov
daa
dec
push
sti
fdivr
out
out
(bad)
out
jnp
and
repz
xor
mov
dec
push
popf
xchg
push
mov
push
in
xor
cdq
sub
add
shr
rcr
fiadd
jl
sub
frstor
jl
outs
movs
sub
ins
cwde
push
pop
data16
jmp
imul
mov
jbe
and
xchg
jg
xchg
mov
int3
cmp
cdq
pop
sbb
mov
lds
ret
cld
movs
bnd
std
es
xor
sub
hlt
sub
int3
sbb
mov
pop
jbe
sahf
mov
int
xor
xor
pop
int
sbb
in
ins
or
outs
add
imul
aad
inc
bound
push
xchg
or
or
ficomp
xlat
int
pop
out
jne
xlat
sub
outs
bound
cmps
sbb
loopne
test
inc
rcl
cmc
mov
shl
pop
mov
push
sti
add
inc
retf
daa
cmp
jns
imul
inc
push
(bad)
adc
add
sbb
mov
mov
xor
xchg
retf
loopne
das
jmp
xor
into
push
sub
mov
out
pop
int3
(bad)
les
ss
dec
fcom
rol
mov
cmp
xlat
xor
pop
cmp
div
call
pop
mov
pop
pop
(bad)
into
jl
outs
(bad)
in
clc
cmp
aas
push
cmp
or
js
movs
fistp
mov
outs
xor
sbb
mov
lods
and
push
imul
loope
xchg
jns
jo
xor
hlt
ds
inc
mov
mov
fmul
mov
stos
mov
mov
out
pusha
js
pop
mov
(bad)
jecxz
xor
je
push
(bad)
in
ds
jb
mov
cmp
mov
cmp
mov
outs
pop
mov
ds
das
add
(bad)
jmp
mov
es
or
(bad)
cmp
popa
je
dec
cmp
xchg
popa
adc
push
in
call
mov
(bad)
(bad)
bound
and
sbb
clc
retf
fdivr
mov
fwait
mov
cmp
bound
pop
ss
test
pop
cdq
lahf
xchg
and
outs
and
inc
into
sbb
mov
push
xchg
xor
daa
mov
std
push
adc
sbb
mov
das
ret
jg
popa
popf
xor
loop
push
mov
repnz
dec
repz
cmp
mov
add
pop
mov
fmul
jg
adc
xchg
pop
test
call
dec
imul
push
mov
(bad)
hlt
push
pop
in
xor
xchg
and
fs
pop
sbb
das
movs
cs
xchg
aam
mov
adc
or
aas
inc
dec
retf
dec
scas
test
rcl
arpl
xchg
mov
stc
shr
sbb
push
sub
cwde
pop
add
cmp
mov
fisttp
lods
loopne
push
xadd
sub
mov
mov
and
int3
gs
xor
imul
add
mov
push
mov
sbb
(bad)
iret
pop
sub
jmp
js
inc
mov
inc
xchg
add
fisub
fldenv
arpl
sbb
mov
mov
(bad)
pop
xor
fs
add
test
mov
scas
mov
nop
xor
inc
(bad)
pop
adc
jle
lods
sbb
mul
or
fadd
lods
ds
ret
ins
inc
sub
rcl
cmp
bound
adc
sbb
mov
repnz
in
jo
lds
xchg
or
rcr
outs
pop
in
jo
pop
movs
push
adc
in
pop
loope
aaa
sbb
scas
das
xor
call
xchg
xchg
jno
jge
pusha
out
shl
int3
(bad)
scas
and
mov
fstp
sbb
sahf
and
into
pop
pusha
add
adc
push
adc
jo
std
iret
fsubr
or
lods
cmp
es
mov
pop
int3
sbb
imul
xlat
repnz
ss
neg
es
scas
movs
cmp
push
or
xor
(bad)
stc
ret
mov
movs
fcom
fist
pop
mov
push
pop
xor
ret
fiadd
xor
(bad)
push
mov
retf
dec
sbb
jno
mov
in
mov
scas
add
push
rol
xchg
or
test
add
mov
add
add
lds
mov
fmul
dec
cwde
in
xchg
call
inc
cmps
mov
enter
cmp
adc
adc
and
and
dec
jl
fwait
inc
outs
adc
aam
cwde
gs
je
inc
sub
(bad)
cmp
rol
or
cmp
inc
add
mov
mov
call
xor
and
out
clc
scas
push
retf
dec
arpl
and
xor
mov
(bad)
jmp
fucomp
sqrtps
xor
xchg
mov
xor
fs
add
nop
jmp
arpl
adc
dec
mov
xor
or
sti
movs
rol
jnp
pop
ret
pop
mov
mov
sub
xlat
std
xchg
scas
and
fimul
jp
ja
stc
loopne
call
(bad)
out
pop
popw
(bad)
mov
or
stos
xor
jne
aas
jl
adc
cmp
call
in
mov
jg
adc
and
popa
test
sub
es
dec
cmp
stos
(bad)
adc
xchg
lods
fcomp
add
fadd
pop
mov
out
fimul
test
pop
add
mov
ins
lods
xor
ret
pop
out
clc
xor
lock
mov
or
jbe
out
imul
pop
jg
ins
adc
aas
sub
ss
scas
test
jg
push
pop
gs
xor
and
retf
and
push
push
stc
xchg
add
mov
push
and
xchg
dec
aaa
aam
push
adc
jg
add
mov
mov
push
xchg
sbb
fild
mov
cmps
mov
popa
cmp
pop
jo
xor
ror
fdiv
sbb
push
xchg
lods
sbb
push
out
aam
dec
or
fdiv
scas
push
sti
repnz
les
dec
lea
jg
retf
mov
add
cmp
xchg
adc
test
leave
and
and
js
(bad)
adc
mov
pop
out
add
test
(bad)
sbb
inc
jmp
pushf
jl
mov
pop
in
call
or
pop
repz
mov
int3
hlt
push
(bad)
gs
push
pusha
adc
sar
pop
icebp
aad
addr16
add
mov
pusha
in
mov
aaa
jbe
add
adc
mov
sahf
mov
jo
movs
push
jg
jg
push
addr16
adc
in
pop
jns
jnp
popa
daa
ds
adc
aam
mov
arpl
mov
daa
inc
push
sbb
in
movs
cmp
call
sar
sbb
inc
cmova
cmc
cs
add
scas
push
mov
enter
dec
sub
and
push
gs
push
inc
lea
call
mov
mov
xchg
push
and
mov
sbb
mov
xchg
movs
sbb
sbb
pop
push
bound
mov
aad
adc
push
das
lock
shl
mov
daa
mov
rcr
xchg
popa
sbb
sbb
xchg
mov
in
push
jae
pusha
adc
push
fisttp
cmp
push
pop
pop
inc
mov
xor
in
fwait
xlat
popa
or
mov
inc
call
jmp
and
(bad)
pop
shl
dec
sub
cmp
dec
adc
faddp
clc
cdq
pop
push
fld
xor
push
jb
xor
cs
outs
or
adc
sbb
xlat
fiadd
and
cli
dec
outs
add
add
loop
int3
cs
shr
xchg
out
jle
or
pop
not
sbb
rep
stc
mov
popa
pop
nop
push
repnz
shr
iret
(bad)
stos
sar
inc
std
or
push
loop
jae
pusha
add
jmp
es
xlat
pop
xchg
xchg
das
loope
lods
mov
mov
add
cld
pop
or
inc
dec
hlt
int
mov
sbb
mov
outs
cmps
push
clc
lahf
stos
lea
add
pop
fdivr
popa
sti
sub
shl
stos
lock
add
jb
add
fld
adc
inc
or
jo
(bad)
pusha
cmps
stc
add
mov
arpl
xor
xor
retf
and
cli
jae
mov
xchg
xchg
addr16
ficomp
xchg
test
fwait
xor
loope
lea
jmp
pop
push
mov
addr16
inc
addr16
fisubr
out
sbb
es
popa
popf
outs
mov
mov
xchg
call
jmp
repz
imul
dec
cmps
cwde
dec
lock
ficom
outs
lea
stos
out
pop
lahf
add
fild
push
out
cmp
outs
mov
popf
add
neg
sbb
into
lods
fsubr
and
stos
pop
add
and
pop
repnz
push
mov
inc
jo
loopne
idiv
int
inc
pextrw
add
(bad)
repz
das
jns
adc
mov
imul
lahf
add
xor
repnz
in
out
repnz
icebp
mov
mov
xlat
fst
cwde
jl
dec
jb
mov
mov
ret
test
pusha
mov
jmp
aad
seta
inc
loopne
cmp
sub
addr16
dec
or
imul
lods
loope
arpl
push
inc
retf
daa
inc
leave
cmc
mov
xchg
mov
xor
mov
push
cmp
or
aad
fstp
aam
add
sbb
pusha
add
retf
clc
pusha
mov
in
mov
dec
or
jae
push
test
or
mov
sbb
in
xchg
sub
adc
jge
int
test
mov
jmp
retf
xchg
scas
cwde
out
sti
sbb
xchg
(bad)
xchg
std
js
pop
and
mov
call
mov
cs
jns
and
adc
int
sub
rol
ret
pop
pop
arpl
jecxz
and
ret
data16
mov
dec
idiv
pop
pop
adc
popa
(bad)
or
xchg
jp
jbe
inc
sbb
aaa
aam
inc
mov
shr
adc
in
sub
daa
mov
js
stc
sub
jmp
add
mov
test
inc
push
sbb
and
(bad)
call
leave
in
(bad)
test
mov
add
add
icebp
imul
and
push
inc
cdq
bound
test
mov
(bad)
pop
jp
xchg
add
in
ret
cld
mov
loope
pop
inc
sub
cdq
pop
xchg
sub
shl
ltr
and
cld
div
sub
jg
lahf
sahf
outs
retf
sbb
push
xchg
enter
lea
sbb
cs
out
push
not
push
push
imul
inc
fcomi
lods
loope
add
pop
push
clc
add
and
loope
dec
pop
ret
and
adc
add
or
sbb
loopne
and
nop
or
push
fsubr
xor
mov
mov
out
jecxz
daa
jg
pop
lahf
fistp
ret
dec
jecxz
dec
dec
sbb
data16
dec
dec
push
aam
xor
stos
sbb
mov
and
mov
test
shr
sub
pusha
lahf
dec
rol
fstp
dec
imul
adc
cmps
shr
icebp
mul
fcom
out
clc
push
js
mov
pusha
add
mov
mov
xor
pop
outs
cmp
nop
mov
setge
stc
jbe
sti
gs
retf
ror
cmp
fs
push
xlat
es
jns
xchg
add
jmp
xor
mov
out
aaa
xor
out
rcr
scas
fsubp
jbe
fucomp
ret
push
fidivr
push
mov
(bad)
mov
js
in
mov
mov
in
jecxz
jmp
loope
jae
lds
mov
cmps
fistp
ret
aad
(bad)
scas
jae
cmc
test
mov
sbb
jge
push
stos
hlt
out
pop
push
call
in
mov
jmp
pop
xor
fwait
rcr
addr16
inc
data16
and
and
inc
fst
dec
out
jl
test
hlt
and
or
in
xor
dec
data16
dec
adc
jbe
mov
ins
aad
dec
sbb
jp
push
in
mov
mov
push
rcr
pop
xor
jl
xor
movs
pop
dec
arpl
dec
lahf
jno
xor
movs
add
lahf
cmps
push
dec
shl
xchg
das
scas
xchg
sub
outs
repz
jnp
jge
imul
mov
add
sbb
pop
inc
jnp
(bad)
cmp
mov
stc
popf
daa
sub
mov
mov
sahf
cmp
mov
sar
inc
call
loopne
cmp
movs
add
sbb
push
test
bnd
pop
xor
stc
out
out
call
arpl
add
mov
es
xchg
retf
xor
push
inc
sbb
push
jge
xlat
add
push
mov
ins
inc
xor
aaa
mov
scas
scas
pop
fld
push
and
in
mov
xor
popf
ja
int3
mov
mov
add
fcom
mov
cmps
ret
mov
in
sub
ror
nop
inc
(bad)
xor
in
push
push
mov
mov
cmp
in
xor
sub
adc
mov
lea
loop
jle
int
aas
mov
mov
sbb
push
loopne
lods
push
inc
xor
fist
add
mov
jbe
cmps
push
cmps
pop
adc
inc
mov
sub
shr
popa
out
xor
arpl
ja
lods
sbb
mov
inc
and
and
test
cmp
loopne
retf
pop
(bad)
loopne
pop
ss
test
cmps
push
leave
test
mov
mov
mov
or
mov
mov
add
jne
push
pop
push
cmc
jp
sub
out
xor
xlat
lods
inc
push
mov
cld
adc
or
and
lahf
push
mov
mov
sbb
mov
(bad)
test
mov
pop
dec
cmp
push
dec
fst
push
jbe
loope
movs
sbb
push
sub
loopne
sub
push
aam
dec
(bad)
shr
cs
xor
push
cmps
arpl
rcl
shl
leave
cmp
sub
data16
enter
out
pushf
mov
lods
pop
movs
adc
dec
mov
xchg
out
pop
add
cmp
xchg
xlat
jle
call
push
mov
pop
das
shl
inc
shr
sub
pop
movs
mov
or
shr
in
push
cwde
pusha
jmp
les
fld
push
push
push
aad
mov
(bad)
jae
push
jbe
sbb
shr
(bad)
sbb
or
mov
dec
popf
dec
cmp
out
fimul
in
pop
ja
movs
and
out
loope
aaa
xchg
clc
into
popa
or
popa
jl
into
add
push
repnz
adc
neg
sub
or
sbb
adc
adc
lock
inc
and
and
add
or
aaa
(bad)
ficomp
stc
les
xor
std
(bad)
test
int3
scas
lds
popa
shl
jno
movs
cmps
shl
ror
js
sbb
neg
sub
mov
mov
push
jecxz
cmp
fild
and
cs
xor
pop
pop
sbb
add
xor
pop
jo
mov
inc
ja
mov
xchg
ret
sbb
in
sbb
dec
and
cmp
iret
cmps
jae
sbb
cwde
xor
push
jge
push
or
(bad)
cli
dec
cmp
push
push
in
dec
fnstcw
sub
inc
icebp
loope
push
fild
lods
mov
movs
jb
push
out
clc
cmc
jnp
or
dec
push
std
xchg
fwait
hlt
cmp
sub
(bad)
pop
jecxz
jp
imul
in
(bad)
and
mov
call
mov
adc
bound
inc
ret
xchg
repnz
jnp
(bad)
clc
jp
add
ftst
jl
imul
movs
ret
mov
pop
out
mov
mov
fiadd
loop
fisub
cmp
fld1
ins
sub
jp
leave
je
out
or
ins
lahf
add
sub
repnz
je
mov
lahf
add
mov
xchg
push
in
fnstcw
sub
inc
xchg
xor
inc
mov
cwde
mov
aad
xor
mov
mov
mov
add
repz
adc
movs
ds
dec
cmc
int3
pop
and
dec
pusha
in
xchg
fstp
(bad)
loop
sbb
add
jbe
test
xchg
popf
loop
ret
arpl
arpl
or
adc
ficom
ds
arpl
dec
xchg
cmp
or
cmp
mov
cmp
clc
pop
fadd
xor
mov
lock
cmp
inc
jle
dec
sbb
popf
btr
outs
jge
and
and
pop
mov
push
loopne
add
add
lods
inc
jl
and
pop
push
push
dec
pop
mov
out
push
mov
mov
imul
sub
xchg
xchg
(bad)
mov
pop
mov
add
jmp
mov
stos
xchg
rol
sub
(bad)
dec
icebp
push
cwde
popa
loopne
or
test
add
outs
idiv
mov
inc
(bad)
mov
xor
pop
outs
or
or
jnp
aas
and
pusha
imul
imul
cmp
stc
cmp
iret
ror
loop
inc
icebp
or
fst
or
jne
adc
icebp
pop
fs
cmps
jb
push
ja
xchg
(bad)
adc
out
xchg
mov
out
xchg
dec
push
inc
in
ret
jns
dec
mov
push
fsub
pushf
aaa
adc
popf
lds
pop
xor
pop
cli
sbb
movs
add
adc
jmp
cwde
scas
push
jmp
fs
test
imul
mov
add
pop
dec
sub
dec
push
scas
sar
lods
xor
xor
into
mov
outs
sti
outs
mov
mov
das
arpl
pop
jmp
push
add
call
xlat
es
ds
test
mov
jl
cmp
dec
jg
je
mov
es
(bad)
jmp
jmp
pop
rol
mov
and
lods
mov
push
xor
cdq
data16
mov
in
stos
movs
and
mov
test
lods
in
push
ret
pop
rcr
or
adc
sahf
jae
cdq
sub
and
pop
pusha
jbe
jecxz
dec
fsub
inc
jmp
xor
pop
stc
fdivr
mov
jl
sub
sbb
mov
pusha
test
lods
pavgb
jle
pusha
repz
mov
js
pop
int3
inc
retf
jns
stos
sbb
jg
mov
jle
gs
adc
repnz
rcr
jmp
cmp
sub
fst
dec
lock
cmps
dec
call
scas
mov
imul
aam
inc
push
jge
fwait
(bad)
loopne
xchg
loopne
push
pop
jp
popa
jnp
cwde
push
cmp
xlat
cli
and
or
push
push
mov
xchg
dec
cdq
out
add
iret
mov
push
addr16
bound
mov
iret
xor
add
movs
push
pop
(bad)
cmp
fdiv
or
repnz
cmp
std
(bad)
add
xor
mov
(bad)
cmp
adc
ins
mov
mov
imul
dec
sahf
pop
sbb
sbb
xor
xchg
and
xchg
xchg
test
xchg
cmovg
pop
xchg
jo
aam
sub
(bad)
add
lods
aaa
inc
cmps
add
add
lahf
cli
pop
push
jmp
cli
mov
push
mov
bound
jle
add
mov
movs
push
fisttp
popa
das
ret
jno
add
fcmovne
stos
ret
cmc
mov
(bad)
sub
or
push
call
mov
rcl
cmp
cmp
pop
in
xlat
sub
jmp
add
sbb
(bad)
std
ret
add
xor
pop
ins
(bad)
in
jge
xchg
pusha
fs
mov
out
mov
xor
or
loope
pop
mov
into
ja
xlat
or
mov
jne
outs
push
fisubr
xchg
movs
(bad)
scas
fisttp
add
xor
ja
cli
sub
inc
mov
fcomp
out
xlat
pop
cmp
loope
aas
pop
ror
fcomp
push
mov
js
or
mov
mov
retf
loop
dec
jmp
jns
fimul
add
cdq
or
inc
mov
rol
push
arpl
mov
pop
xor
add
popa
scas
push
pop
lods
push
jecxz
adc
pop
daa
shl
jmp
mov
and
ins
nop
sahf
dec
push
cmp
(bad)
and
pop
outs
(bad)
cmp
push
cmp
jbe
sbb
or
jle
mov
(bad)
adc
and
(bad)
adc
shl
sbb
in
popf
mov
push
adc
push
push
fs
push
dec
mov
arpl
ins
push
cmp
aaa
test
adc
sbb
adc
es
clc
movs
sub
sbb
mov
loope
jecxz
inc
xchg
sub
xchg
inc
inc
mov
xor
mov
mov
sub
test
jne
aas
jge
jmp
(bad)
dec
je
push
mov
dec
jle
dec
push
jge
ds
push
ret
loop
dec
xchg
aam
cmp
int
or
inc
adc
in
es
xor
not
(bad)
adc
xchg
fnstsw
inc
mov
xor
adc
xor
daa
pop
ins
push
mov
imul
sub
test
dec
mov
inc
mov
sbb
int
call
dec
pop
and
(bad)
aad
xor
les
stc
ret
xchg
or
and
xchg
pop
fwait
loope
pop
mov
in
fmul
test
fbld
popf
sbb
or
or
sbb
scas
cdq
lock
sbb
fistp
ins
outs
pop
int3
cmp
mov
inc
jg
mov
dec
cdq
stc
mov
mov
jmp
or
adc
xchg
add
in
nop
aam
jb
mov
pop
adc
out
test
movs
push
inc
cwde
sbb
push
mov
and
ret
repz
sbb
add
sbb
enter
fdiv
xchg
shl
jmp
psubusb
xor
or
retf
leave
sbb
pop
adc
pushf
ret
lock
std
popf
syscall
pop
repnz
ror
cwde
fxch
jbe
(bad)
lds
bnd
jae
and
imul
rcr
push
push
mov
cmps
push
lock
cmp
mov
and
push
stc
test
fadd
(bad)
lock
push
add
test
test
and
mov
push
out
mov
aad
pusha
test
retf
repnz
stos
(bad)
push
popa
add
aam
cmps
and
movs
add
sbb
test
pop
mov
xor
dec
jo
or
shl
sbb
lock
outs
dec
popa
rcl
adc
mov
(bad)
lock
xchg
mov
lods
(bad)
cld
jl
shl
xchg
imul
jno
xchg
aas
adc
and
stc
sbb
adc
add
add
outs
je
lock
das
jne
repz
push
int3
sub
pop
mov
jno
pop
xchg
leave
mov
mov
jns
jns
sub
test
push
aam
cmp
xor
xor
and
add
xor
lock
cmp
js
int3
push
or
xchg
int
stc
sub
scas
movs
sbb
push
cmp
dec
int
pop
jge
jg
inc
call
and
sbb
inc
cli
sbb
(bad)
in
jecxz
mov
out
adc
jle
stos
inc
(bad)
sub
xchg
jb
push
pop
mov
gs
xchg
aad
ins
repz
cmp
sub
jbe
sti
iret
and
sbb
into
js
(bad)
mov
adc
call
jle
add
adc
data16
pusha
mov
add
test
xchg
cmp
mov
push
mov
(bad)
imul
jmp
sbb
arpl
jae
mov
and
and
popa
or
mov
sub
mov
xchg
sbb
retf
add
or
ins
xor
ins
pop
dec
jmp
in
add
add
fbstp
sub
sbb
add
xor
mov
mov
jo
(bad)
sbb
mov
in
stc
add
pop
mov
scas
imul
bound
inc
xor
mov
cli
shr
hlt
sub
dec
(bad)
xchg
in
imul
cmp
not
lods
ds
nop
jp
mov
sub
js
sbb
cmps
mov
sbb
call
repnz
(bad)
not
call
dec
arpl
or
(bad)
mul
jmp
push
sbb
xor
push
jb
leave
(bad)
adc
data16
out
sahf
inc
mov
fiadd
addr16
out
js
neg
add
pop
push
jg
or
dec
jae
fsub
mov
es
aad
pop
pop
icebp
pop
lods
ror
sub
mov
sbb
sbb
mov
imul
sub
imul
add
dec
(bad)
cwde
jo
and
mov
mov
outs
js
fsub
shl
(bad)
das
mov
jo
cli
popf
iret
add
xchg
out
lods
inc
jmp
jg
push
xchg
fs
pop
pop
test
aaa
inc
inc
adc
and
xor
mov
daa
rcr
iret
dec
ret
cwde
xor
fwait
xchg
dec
movs
jno
or
lds
clc
call
movs
cwde
fwait
mov
retf
inc
sub
sub
out
dec
mov
ret
je
jp
pop
(bad)
aad
dec
ds
(bad)
sbb
mov
loope
dec
iret
movs
movs
repz
jmp
sbb
ins
test
je
out
mov
mov
fst
mov
cmp
push
dec
jge
ins
mov
mov
popa
mov
loope
test
inc
mov
or
mul
mov
inc
test
fcmove
pop
mov
pop
mov
enter
movs
or
ret
sub
mov
mov
shr
and
xlat
in
mov
mov
mov
fadd
pop
add
sbb
stos
add
or
mov
int
(bad)
xor
enter
pop
xchg
pushf
shl
or
cli
ror
jno
cmps
jp
and
xor
jbe
inc
je
mov
pop
xchg
shl
(bad)
dec
and
pop
sbb
inc
dec
(bad)
sub
and
repz
jb
cmp
stc
and
adc
inc
rcr
mov
xchg
bound
cmps
movs
push
(bad)
aad
push
sbb
aas
push
and
call
jmp
push
sub
mov
inc
add
into
ins
add
sbb
adc
es
int
adc
bound
mov
pop
add
lods
fcom
mov
loop
ror
hlt
mov
sub
in
shl
sbb
mov
and
cmp
clc
sahf
not
sub
push
icebp
jns
call
cli
mov
mov
out
xor
adc
lods
sub
ja
inc
push
add
paddb
xor
fdivrp
lods
lds
mov
outs
sar
or
das
popa
xchg
cs
cmp
mov
loopne
retf
retf
and
add
pop
(bad)
repnz
nop
jnp
jecxz
mov
dec
ins
pop
xchg
pop
and
rcl
xchg
inc
imul
rcr
push
into
ins
in
inc
mov
adc
sahf
xchg
fisttp
js
xor
aas
fiadd
sbb
sub
adc
out
fwait
stos
fiadd
lock
je
sar
and
js
jo
adc
(bad)
push
push
pop
fisttp
fsub
inc
sbb
shl
fstp
push
xor
lahf
jo
jb
out
xor
and
xchg
ins
sub
stos
sub
call
mov
mov
push
mov
mov
cs
clc
(bad)
mov
aam
leave
cld
jecxz
fadd
repz
mov
mov
mov
clc
sbb
rcr
cdq
rcl
fisubr
(bad)
dec
or
ret
lahf
or
ror
mov
hlt
xor
shl
jne
sahf
test
repz
mov
pop
outs
(bad)
sbb
scas
push
jge
jae
aas
sbb
je
cdq
sti
call
add
sbb
in
xchg
nop
xchg
jbe
jcxz
xor
in
sti
cmps
mov
bound
(bad)
ffree
fwait
dec
daa
mov
dec
pop
shl
and
scas
(bad)
aam
jge
mov
ret
inc
out
xchg
jnp
clc
ss
inc
mov
xchg
out
sti
xor
shr
jmp
and
mov
sbb
jae
fdiv
dec
dec
imul
jmp
jmp
test
jns
mov
push
or
sbb
clc
sub
shl
jp
gs
test
jno
pop
sbb
mov
lahf
in
mov
push
jae
jnp
mov
jb
pop
xchg
push
pop
stc
xlat
mov
push
out
(bad)
push
push
dec
xor
jmp
shl
clc
imul
(bad)
adc
sub
sub
lea
adc
fsub
sub
add
xlat
mov
loop
ret
in
pop
lds
in
mov
add
dec
scas
outs
cmp
xchg
push
cmp
ror
inc
fs
jmp
adc
retf
jno
lock
(bad)
cmp
inc
popa
pop
std
test
or
neg
push
bound
adc
mov
sub
scas
adc
add
mov
pop
scas
dec
inc
or
aas
les
neg
inc
xchg
cmp
push
aas
or
jp
aam
inc
adc
mov
sub
cmps
dec
test
sub
xor
test
dec
lods
cmp
and
aaa
aam
push
test
xchg
xchg
mov
or
nop
cld
xchg
or
push
inc
and
jg
in
ret
adc
sub
or
in
rcl
dec
jne
iret
sub
add
xor
and
int
mov
push
push
fldenv
lods
add
aaa
adc
les
das
cmps
in
cmc
mov
mov
data16
push
xchg
outs
out
push
ja
pop
not
scas
cdq
mov
cwde
push
xchg
mov
adc
inc
fstp
xchg
adc
mov
sbb
cmp
add
and
mov
inc
and
pop
cmp
inc
xchg
ins
pop
dec
pop
icebp
jg
rol
call
mov
pop
pusha
mov
ins
sub
sub
mov
mov
std
jp
jmp
fnstsw
int3
mov
mov
xchg
mov
popf
push
shl
test
or
or
lods
clc
(bad)
xlat
loope
(bad)
cmc
sar
pop
mov
fidivr
fild
stc
sub
mov
pushf
xchg
jp
jmp
and
ds
and
pop
ja
pop
jb
pop
rol
add
ins
xchg
xor
dec
mov
leave
movs
outs
rol
xor
fwait
ins
sbb
and
int
mov
jmp
ret
add
retf
sub
das
jmp
pop
mov
call
mov
add
rol
inc
shl
(bad)
inc
inc
sti
lds
pushf
in
dec
jne
rol
fwait
add
repz
xchg
xchg
dec
jmp
sub
inc
lahf
rcl
mov
xor
test
add
push
mov
mov
sub
and
inc
push
mov
frstor
loope
fdiv
lods
aam
repnz
(bad)
aas
cld
aaa
pusha
cwde
es
mov
push
fwait
dec
in
fdiv
mov
pop
xchg
cmp
cdq
inc
fninit
dec
lahf
inc
out
sbb
add
in
pusha
icebp
adc
cmp
xor
pop
push
loopne
mov
nop
fiadd
mov
push
mov
(bad)
pushf
sbb
jbe
daa
push
imul
iret
mov
mov
rcl
mov
inc
retf
xchg
inc
adc
repz
(bad)
in
fistp
movs
sub
out
jnp
test
add
sub
ret
loop
push
inc
sub
pop
pop
gs
xor
inc
scas
cmp
repz
pop
dec
popa
fmul
movs
out
cmp
jp
mov
push
cmp
dec
jmp
mov
test
mov
adc
das
push
loopne
sbb
dec
int3
pop
inc
fnstcw
sub
inc
cli
lahf
and
push
xor
arpl
xor
push
pusha
dec
xlat
add
out
inc
lock
dec
adc
or
int
xchg
sbb
xchg
pushf
mov
inc
pop
adc
push
push
int3
xchg
js
dec
push
imul
sbb
sbb
cmps
add
jb
ret
jbe
pop
mov
add
and
in
pop
scas
jle
pop
paddw
mov
or
xor
dec
data16
adc
jno
or
mov
jg
xor
ror
mov
pop
sub
jg
fimul
movs
cmps
nop
fnsave
pop
ret
mov
cmps
add
xor
and
mov
or
std
sahf
xor
add
cmovp
arpl
into
push
call
pop
add
dec
pop
xor
xor
sub
push
dec
sbb
lahf
aaa
sub
int
aam
cs
das
add
inc
sar
cmp
mov
xor
repz
out
and
scas
retf
pop
and
and
jg
push
or
mov
push
and
movs
std
add
push
cwde
xchg
fimul
adc
add
and
add
adc
mov
xor
(bad)
test
push
jge
adc
in
mov
sub
mov
movs
dec
je
mov
and
sbb
pop
lock
xor
push
fadd
inc
ins
dec
rcr
inc
xchg
or
xchg
xchg
bound
pop
popf
adc
dec
out
daa
data16
push
shl
scas
and
test
int3
inc
nop
cld
or
pop
cmp
adc
xchg
stos
sbb
adc
mov
jecxz
xchg
call
or
test
inc
adc
pop
xchg
mov
imul
mov
xchg
(bad)
xlat
mov
repz
shl
pushf
lods
lods
in
cmps
(bad)
fcom
dec
test
leave
lock
bound
pop
jno
leave
loopne
sti
inc
popa
fild
jno
pop
or
fild
dec
xchg
adc
xor
(bad)
sbb
sbb
adc
push
cmp
xchg
xchg
test
add
movs
repnz
in
lds
rol
jne
xchg
call
(bad)
in
adc
pop
mov
les
sub
pusha
sbb
push
hlt
jne
mov
jae
sub
or
push
(bad)
xor
add
test
nop
into
arpl
in
setae
jl
fadd
mov
inc
sar
imul
es
sbb
sbb
lahf
and
cmp
mov
push
adc
(bad)
lods
dec
pusha
adc
(bad)
push
pop
fs
jae
xor
rol
retf
dec
xor
inc
inc
jmp
and
pop
mov
stc
pusha
sbb
shr
mov
ss
ror
iret
call
dec
mov
ror
inc
fbstp
mov
inc
ins
xchg
les
xchg
les
sub
(bad)
jecxz
jl
arpl
pusha
iret
jle
xor
cmp
mov
adc
pop
fistp
push
cmps
adc
cli
imul
and
test
imul
push
adc
jp
sub
push
mov
pusha
aas
stc
push
sub
scas
rcl
mov
fs
dec
std
inc
das
lods
sub
mov
mov
add
aam
clc
cmp
xchg
stc
dec
or
int
mov
add
sbb
mov
idiv
ins
or
mov
push
shr
shr
xchg
es
or
sub
adc
mov
(bad)
imul
ins
rcr
outs
jle
clc
mov
out
or
adc
and
xor
and
setp
adc
sti
std
ja
fs
mov
cdq
aas
(bad)
lods
iret
xor
lea
out
inc
in
loopne
mov
add
ins
push
ror
in
push
xchg
dec
popf
lea
(bad)
fisttp
xchg
mov
push
inc
inc
mov
and
and
or
sbb
or
jecxz
inc
test
or
mov
imul
adc
mov
pop
add
sbb
popa
and
mov
mov
dec
pop
das
jl
cmp
xchg
inc
jle
cmp
fsub
lods
cmp
in
mov
das
push
pop
xor
inc
mov
call
pop
ins
int3
jbe
shr
mov
inc
sti
mov
push
test
shl
push
pop
and
jp
fisttp
add
mov
xor
fcomp
dec
inc
pop
fcmovnbe
bnd
jnp
or
push
popa
mov
sbb
call
sbb
cmps
test
or
pop
or
mov
mov
inc
dec
xchg
or
fsub
cli
ror
sub
fisubr
pop
retf
out
into
sar
dec
lods
fild
cmp
mov
fst
sbb
test
jno
inc
push
lea
fnstcw
dec
mov
lea
jno
jo
ror
pop
cs
dec
cwde
inc
pop
fstp
sti
jne
push
sub
and
test
rcl
adc
call
mov
fnstenv
inc
sub
je
xchg
xchg
or
push
mov
(bad)
mov
repz
(bad)
jmp
icebp
sbb
adc
dec
das
jp
outs
cmp
icebp
in
rcl
push
in
fisubr
bnd
scas
lahf
(bad)
movs
sub
cmps
fwait
out
mov
stc
jle
dec
pusha
push
std
int3
out
div
lgs
in
inc
cmc
or
or
rcr
ins
js
mov
rcl
cli
dec
popf
push
dec
jno
xchg
push
loop
stos
fistp
outs
aaa
mov
call
cmc
stc
mov
push
stos
cmp
popf
imul
je
push
mov
xchg
movs
dec
sub
out
xor
jmp
shl
adc
or
cmp
inc
test
cmp
or
outs
ja
adc
pushf
movs
dec
mov
sbb
fist
lock
xchg
popf
rcl
repnz
popa
out
mov
stos
test
fwait
sar
mov
lds
loopne
inc
out
ror
sub
daa
scas
mov
fimul
pusha
jp
fs
sti
xor
and
or
push
add
pop
adc
add
adc
jl
fild
adc
ror
fadd
fs
pop
cmp
cwde
punpckhbw
pcmpgtd
cmp
adc
lea
jns
int
mov
add
loopne
ficomp
or
iret
loopne
movs
out
sahf
(bad)
jl
aas
dec
and
xor
fst
shl
aad
add
int
push
mov
gs
and
imul
push
add
in
dec
(bad)
test
add
jne
push
and
xchg
and
adc
icebp
data16
inc
test
sub
popa
mov
retf
xchg
in
mov
push
daa
inc
and
mov
inc
adc
sbb
out
cli
cmp
aam
in
mov
jnp
sub
stc
aaa
sub
mov
cmp
loop
push
call
cli
mov
into
sub
imul
mov
(bad)
add
add
sub
mov
adc
(bad)
cmc
out
mov
lds
or
mov
ss
dec
mov
not
pop
ja
pop
cmp
add
rol
mov
pop
pusha
sub
jns
daa
jne
pushf
push
ins
push
les
push
push
fisttp
jecxz
fmul
sub
push
std
ins
(bad)
sti
ja
cmps
fimul
inc
repz
mov
jae
iret
inc
jbe
(bad)
mov
jecxz
call
cli
add
cwde
pushf
rcl
sbb
enter
xchg
adc
inc
jo
pop
enter
dec
or
scas
movs
test
inc
sbb
sub
xchg
data16
mov
push
stc
cdq
rcl
sub
add
mov
das
xchg
dec
push
fild
sar
dec
push
loope
inc
sub
(bad)
cmp
(bad)
and
test
(bad)
loopne
mov
adc
xlat
cmps
ror
xor
mov
mov
sub
rcl
xor
in
mov
mov
push
lods
test
arpl
(bad)
loopne
aad
pop
sbb
dec
aas
scas
rcr
or
sbb
xchg
adc
and
fs
rcl
pop
out
out
mov
enter
cmp
and
jae
loopne
div
mov
add
mov
mov
std
push
add
push
jmp
lock
test
pop
fstp
cvtdq2ps
xor
xchg
sbb
jl
je
mov
imul
mov
sub
test
inc
jno
sbb
inc
sub
xchg
mov
jae
je
push
int
not
add
sbb
sbb
xchg
pop
cmp
lods
stc
dec
nop
sub
jae
enter
mov
jb
push
into
inc
mov
jb
adc
gs
and
into
outs
inc
ret
shr
cmp
jecxz
(bad)
jecxz
in
push
xor
mov
cmc
and
mov
loopne
mov
popf
sub
lods
sbb
inc
hlt
or
lds
call
imul
hlt
hlt
test
jp
jmp
ss
sub
pop
sub
or
fwait
sti
sub
movs
jno
push
js
out
push
sbb
hlt
cmp
xor
or
cwde
inc
xor
into
ss
jmp
push
out
inc
xor
lock
or
push
dec
pop
js
pop
je
push
inc
push
(bad)
pop
pop
xchg
(bad)
fsubr
lfs
jnp
xor
mov
adc
rcr
pop
add
pop
jg
push
mov
or
mov
jl
jp
pusha
pop
or
ret
cmp
imul
fstp
or
push
dec
shl
js
sub
pusha
mov
idiv
push
add
jge
jae
push
jns
bound
cwde
ja
or
repnz
nop
fist
xchg
movs
cmp
inc
leave
fstp
push
into
int3
lock
cmp
xchg
aas
sahf
test
push
ret
push
push
jge
test
addr16
fist
mov
jb
movs
mov
xchg
dec
or
ja
mov
stos
cmp
jmp
or
mov
ret
pop
adc
lahf
fimul
sub
inc
xchg
stc
dec
jo
fldcw
mov
jns
mov
cmp
ins
clc
pop
imul
and
adc
shl
jecxz
dec
mov
jae
aad
mov
ret
xchg
push
ret
jne
lahf
sub
pop
mov
adc
xchg
sub
dec
mov
sbb
nop
mov
idiv
int
dec
jae
mov
xor
out
enter
in
adc
es
pop
adc
dec
jo
clc
cld
mov
push
and
xchg
inc
sub
and
cmp
and
pop
pusha
mov
out
sbb
mov
enter
test
fcmove
inc
cmps
inc
adc
mov
pusha
xchg
pop
push
loopne
xor
pushf
xchg
lds
dec
pop
sbb
(bad)
sti
add
xor
cmp
xchg
fs
shl
xor
jne
pop
dec
push
mov
push
lahf
push
mov
mul
jmp
jp
dec
inc
cmp
cmc
mov
pextrw
and
bound
inc
xor
dec
imul
into
sbb
or
pop
mov
aam
pusha
cmp
and
mov
inc
rcr
add
sub
pop
ins
idiv
cmp
das
pusha
rsqrtps
jecxz
loope
pop
cmc
(bad)
dec
push
jo
mov
and
stc
add
push
je
xchg
cmp
outs
add
sub
ins
out
icebp
aam
mov
xchg
cmp
mov
inc
js
and
pop
pop
jmp
jg
and
cmp
dec
or
stos
or
or
fldcw
in
mov
sub
inc
repz
adc
shl
in
neg
fisub
fsub
cmp
outs
sbb
xchg
shr
adc
or
sahf
cmp
outs
xchg
mov
clc
enter
ins
adc
mov
jnp
pop
inc
enter
ja
sbb
sbb
cs
stc
dec
sub
shl
nop
and
(bad)
out
xor
loop
push
and
das
retf
fnstenv
(bad)
sbb
mov
add
mov
(bad)
push
out
dec
aaa
sahf
push
push
push
dec
mov
es
or
and
test
add
enter
and
cmp
add
xlat
push
adc
push
cld
mov
int3
sub
stos
cmp
and
mov
or
jp
lea
hlt
mov
fistp
shl
and
pop
dec
dec
pushf
(bad)
es
mov
std
out
loope
rcl
test
pushf
adc
jae
lock
adc
nop
inc
xor
(bad)
xor
(bad)
or
add
mov
mov
push
and
into
adc
out
iret
pop
scas
inc
in
(bad)
add
inc
mov
pop
cmp
std
js
fist
test
xchg
add
push
fmul
repnz
cmps
xor
retf
clc
jb
pusha
add
dec
aaa
mov
sbb
lods
ret
sbb
or
mov
fwait
pop
pop
ret
and
loopne
int3
movs
push
mov
inc
stos
cmp
mov
dec
push
inc
sbb
push
mov
sub
and
or
fst
stos
or
jmp
jae
cmps
dec
cwde
add
push
loope
lds
push
call
sub
add
cmp
dec
mov
sub
push
mov
jmp
mov
retf
add
stc
mov
xor
fst
inc
out
push
repz
sbb
loopne
sbb
loopne
xor
retf
mov
lods
cli
push
mov
fdiv
js
adc
xchg
test
leave
ret
out
inc
dec
test
fimul
inc
add
sbb
out
push
cmps
(bad)
xlat
xchg
mov
stc
add
imul
ror
lahf
push
jge
ss
movs
adc
jo
ins
adc
stos
mov
xor
out
sbb
pop
repz
pop
inc
jmp
push
and
pop
ss
retf
lahf
pop
sub
inc
loop
mov
in
in
pushf
daa
loope
loopne
fisub
and
mov
pop
add
std
xchg
scas
ss
add
retf
mov
cli
clc
mov
js
mov
cmp
ins
inc
push
mov
out
xchg
mov
fldenv
test
fs
test
ins
add
in
repnz
push
pop
mov
pop
xchg
into
xchg
test
or
inc
push
jecxz
(bad)
xchg
or
or
or
xchg
adc
je
ins
inc
sub
sti
mov
mov
sub
in
dec
dec
test
sub
dec
inc
stos
cmp
ss
jne
add
cmp
mov
daa
fcmovnbe
sbb
jmp
xor
test
pusha
das
test
jae
iret
cmp
shr
jns
ret
ins
das
mov
movs
mov
push
sbb
xor
sbb
jp
sub
push
pop
mov
es
push
mov
mov
or
jne
retf
lahf
add
xor
xchg
inc
xchg
ror
pusha
cmp
push
cld
cs
xor
mov
imul
dec
out
fdivp
pop
(bad)
and
arpl
ss
stos
not
sub
sbb
push
or
adc
repnz
xor
pop
in
repnz
mov
pop
bound
sub
(bad)
in
jmp
sub
sub
bound
(bad)
nop
mov
push
jmp
jge
cld
and
rol
push
data16
dec
rol
xor
mov
sbb
or
xor
inc
js
push
ins
cmp
test
cs
jbe
adc
or
int3
pop
ror
xor
xchg
ins
xchg
lahf
int3
sbb
cmp
jmp
dec
jge
jp
enter
mov
sahf
add
xchg
mov
jp
sbb
push
aas
xor
add
pop
push
adc
int3
jle
clc
dec
xlat
pop
adc
push
xchg
adc
xchg
sti
inc
retf
cs
jb
mov
enter
jno
xchg
ffree
sbb
int3
repz
mov
pop
push
or
sti
aad
test
ja
adc
or
lahf
push
mov
in
retf
call
sub
fcom
(bad)
popf
sub
dec
inc
lahf
jae
ins
xchg
rol
js
cs
stos
and
(bad)
in
fistp
jo
xchg
shl
das
xchg
inc
mov
fbstp
mov
sbb
cmps
(bad)
mov
addr16
std
jge
jmp
cwde
stos
cs
cmp
leave
xchg
pushf
mov
dec
arpl
(bad)
retf
ins
call
out
scas
ins
push
dec
xor
inc
jno
pop
mov
inc
dec
clc
jg
dec
jbe
inc
jg
xchg
or
rol
inc
out
outs
into
addr16
bnd
xchg
(bad)
xor
pushf
cmp
xchg
test
mov
cmp
in
js
retf
mov
stos
dec
imul
(bad)
jmp
out
sub
mov
dec
mov
cmp
pop
lods
inc
stc
jl
dec
test
sbb
ror
scas
test
sbb
inc
mov
add
xor
or
lods
push
adc
xchg
cwde
sbb
nop
pushf
and
retf
inc
rcl
inc
and
mov
dec
mov
clc
jmp
xchg
cmp
daa
adc
out
jbe
sbb
push
stos
inc
test
xor
stos
cs
mov
sbb
into
sbb
pop
adc
shr
mov
cmp
mov
xor
sub
push
out
inc
idiv
loopne
dec
out
in
cmp
sbb
mov
mov
sub
mov
lahf
jae
push
repnz
pop
and
add
aad
iret
mov
mov
jmp
xchg
fadd
add
loopne
mov
push
mov
loope
inc
xor
popf
out
sbb
mov
jecxz
dec
in
jmp
dec
popa
xlat
rol
fist
sub
pop
jo
push
cmp
pop
sbb
and
inc
xchg
mov
inc
lahf
cmp
outs
cwde
mov
push
jg
mov
jmp
or
push
xor
inc
daa
cmps
cmp
fcom
dec
js
sub
out
push
into
xor
jecxz
in
and
sub
jmp
add
lock
les
pusha
sub
cwde
jmp
add
cli
pop
or
or
lods
mov
out
pop
mov
fwait
xor
cmp
adc
push
or
in
add
std
and
je
jno
dec
mov
test
stos
xchg
mov
div
mov
ffreep
arpl
fbstp
dec
stos
xor
push
xor
imul
cdq
std
mov
or
nop
or
mov
mov
sub
ret
mov
push
lods
and
neg
lock
ret
lods
popf
in
mov
fs
fadd
jae
or
out
imul
outs
int
pop
jb
aad
xor
xlat
pusha
and
retf
aaa
and
fbld
fxch
cld
daa
out
stos
pop
adc
es
mov
dec
js
pop
mov
inc
lds
clc
pop
(bad)
loop
push
imul
xor
pop
mov
gs
sbb
inc
or
movs
xchg
sub
aaa
xchg
cmp
mov
movs
or
add
mov
sar
and
ret
out
pop
sub
fcomp
mov
xchg
and
cmp
cmp
mov
xor
inc
movs
jnp
sar
dec
dec
out
test
mov
stc
and
jg
lock
sub
xchg
push
sub
test
pop
pusha
lea
mov
(bad)
push
adc
pop
ret
cmp
scas
fcomp
push
cs
sbb
fcom
add
jb
push
das
or
mov
mov
push
pushf
frstor
sbb
pop
xor
(bad)
fsubr
sub
xchg
rcl
pop
sti
dec
out
stos
adc
movs
and
push
xchg
lahf
outs
js
std
lods
jg
or
in
ja
js
cli
mov
int3
out
sahf
les
xchg
enter
or
loop
pushf
aad
out
repz
ss
scas
gs
clc
jb
inc
js
gs
sti
or
push
mov
repz
or
xor
ins
ins
(bad)
retf
in
es
std
push
mov
or
dec
pop
mov
and
stos
aaa
xor
xchg
mov
in
out
dec
gs
movs
and
jne
fxch
or
mov
push
test
test
xor
pop
sbb
mov
stc
xchg
adc
retf
jge
xchg
xor
stc
fsubp
sbb
xchg
dec
xchg
mov
scas
mov
inc
sub
jmp
push
icebp
loope
lods
fwait
rol
sbb
mov
or
xchg
movs
aaa
ins
fs
add
out
jae
popa
aaa
data16
mov
aam
jecxz
push
dec
inc
cmps
dec
mov
pop
mov
pop
sbb
dec
jmp
out
repnz
jecxz
(bad)
fldenv
sub
mov
jne
rcl
inc
loop
jo
pop
test
sub
imul
jle
pop
jo
adc
adc
dec
jmp
lods
test
or
jae
jp
sti
mov
mov
add
pop
add
idiv
inc
xchg
jl
les
fsubr
cmp
xchg
sub
push
push
xor
popa
cmps
gs
mov
mov
xchg
add
pop
in
stc
push
add
ror
xor
lods
cmp
fsubr
inc
ror
or
dec
jmp
test
pop
pop
jl
in
xchg
ror
xchg
xor
repnz
or
jg
push
or
xchg
and
inc
sub
xchg
or
xor
cdq
aam
sbb
pop
mov
ins
cld
sub
mov
push
dec
fisubr
add
mov
inc
xchg
push
repnz
pop
shr
mov
xchg
or
add
inc
out
(bad)
push
or
fisttp
and
call
int3
sahf
add
test
ss
aaa
cmp
repnz
pop
pop
(bad)
pushf
dec
mov
lods
pop
xchg
jns
out
iret
mov
xchg
xchg
inc
lock
jo
and
ins
int
adc
add
cmp
jae
int
mov
nop
inc
dec
loop
mov
xchg
iret
sbb
add
mov
mov
and
int3
mov
cdq
xor
xor
int
jg
hlt
nop
repnz
gs
adc
cmp
mov
lea
mov
cmp
adc
leave
adc
sbb
fwait
mov
movs
or
add
mul
aas
hlt
xchg
mov
loop
mov
addr16
jmp
pop
jmp
inc
push
mov
rcl
enter
imul
inc
enter
(bad)
push
pop
popa
pop
in
sbb
jp
push
call
stos
push
add
dec
pop
inc
retf
shr
fwait
ins
pop
or
sbb
lds
inc
prefetch
or
push
enter
arpl
add
xor
aam
nop
cmp
ds
gs
jge
push
and
pop
loope
int
cmp
push
cmp
pop
mov
ins
inc
sub
mov
js
xor
sbb
push
pop
adc
hlt
push
fcmovne
lahf
data16
sub
sub
pushf
not
adc
xor
jmp
fld
ret
add
push
mov
pop
cmp
cld
dec
movs
loop
push
loopne
and
fldcw
inc
sbb
mov
test
pop
jbe
pop
inc
dec
and
shr
mov
or
shl
mov
mov
xchg
inc
loop
sbb
test
sub
cmc
ret
addr16
push
jmp
imul
(bad)
cld
cs
add
mov
and
mov
mov
inc
adc
inc
call
xchg
sbb
inc
push
xor
ins
icebp
jno
and
repnz
xchg
push
sub
xlat
add
and
aaa
inc
push
sbb
jecxz
inc
jp
add
rol
rcr
inc
je
ins
inc
aam
sbb
stc
repz
dec
sub
(bad)
push
sub
js
adc
cdq
aaa
mov
in
call
fsub
cmp
jmp
sbb
mov
sar
ror
in
mov
retf
sub
int3
out
popf
retf
mov
cli
(bad)
jmp
sub
test
add
sbb
inc
mov
fiadd
inc
loopne
fucomp
sbb
outs
sbb
(bad)
stos
enter
pop
inc
and
or
scas
leave
leave
ror
or
add
mov
iret
imul
rol
iret
data16
in
rcl
scas
cli
mov
(bad)
xchg
outs
cmp
inc
inc
sub
xor
sbb
xchg
outs
inc
inc
and
cmp
inc
ins
dec
test
inc
je
mov
inc
mov
sub
mov
fdiv
gs
popf
mov
call
jo
fs
mov
fdiv
lock
in
rol
pushf
cwde
pop
mov
push
movs
jg
inc
hlt
adc
cmp
pop
or
dec
cmps
outs
or
aaa
push
sahf
xor
add
popa
shl
bound
shl
mov
fist
pop
mov
mov
mov
ror
clc
sub
retf
out
movs
lods
ret
addr16
leave
cmc
scas
outs
inc
adc
lds
pop
imul
xor
pop
das
mov
cmp
xchg
xchg
mov
or
adc
sub
ret
push
jnp
test
popa
fcomp
lea
lods
aaa
lds
cmp
sbb
inc
sti
cwde
mov
push
pop
lock
daa
sbb
inc
or
mov
push
test
enter
mov
sbb
mov
xchg
cld
pop
jg
out
or
idiv
test
mov
lea
leave
lods
or
inc
ds
imul
dec
jb
nop
jecxz
(bad)
(bad)
or
mul
or
xor
in
in
jb
sbb
xchg
jno
test
aaa
lea
sbb
xchg
push
outs
retf
pcmpgtd
mov
pop
rcl
into
sar
(bad)
push
jg
shr
scas
mov
ins
js
in
cmp
(bad)
mov
in
mov
(bad)
push
and
xchg
shr
rol
int
xor
loop
adc
cmp
imul
mov
inc
adc
outs
in
pop
pop
mov
stc
xchg
inc
mov
scas
sbb
int3
fs
pop
jp
fisttp
adc
inc
xchg
mov
shr
inc
mov
inc
pop
pop
sbb
es
or
add
mov
(bad)
sbb
mov
mov
xor
sub
cs
pushf
push
and
ret
sub
leave
dec
sahf
inc
and
sub
std
mov
cs
jp
pop
push
cmps
mov
mov
sbb
shl
xchg
and
imul
mul
das
aam
rcr
push
xchg
mov
or
xchg
mov
xor
mov
daa
sub
clc
push
or
mov
add
add
aas
pusha
lods
es
sub
mov
fwait
jecxz
mov
pusha
fst
retf
mov
js
aas
mov
jne
ud1
and
aas
inc
mov
sub
add
sub
xchg
dec
mov
push
mov
and
add
sbb
ret
not
daa
(bad)
mov
and
add
pop
je
jmp
jnp
xor
pop
or
mov
inc
add
or
mov
int3
jle
dec
stos
mov
loopne
rcr
inc
push
in
in
adc
lock
dec
dec
test
pop
in
sub
stos
(bad)
test
cmc
cmc
mov
test
sub
jle
xor
(bad)
out
dec
movs
mov
add
mov
mov
in
push
mov
lods
push
xchg
(bad)
mov
outs
jge
mov
mov
in
sbb
pop
push
mov
fild
mov
jmp
jmp
outs
pop
cmp
mov
xchg
pop
jne
fdivr
out
sti
sbb
jo
hlt
cmp
cmp
ds
shl
mov
fnsave
push
jns
fs
aad
cmps
out
stc
adc
push
(bad)
repz
mov
ja
push
(bad)
imul
fisub
mov
mov
dec
push
or
xchg
imul
ror
idiv
jnp
aad
(bad)
daa
(bad)
outs
xchg
or
xchg
cdq
bound
jmp
push
pop
push
mov
add
and
xor
jb
sbb
push
in
(bad)
ret
aam
xchg
push
ret
jo
pop
mov
stos
int
and
int
aam
(bad)
into
push
ror
sub
mov
ins
jp
ror
loope
push
mov
outs
push
cmps
dec
mov
xor
sti
out
and
sti
lods
mov
pusha
push
pop
push
mov
pop
out
out
jp
cmp
fs
scas
popa
in
pop
es
int
add
les
or
data16
test
jnp
add
mov
cmp
mov
mov
ja
inc
inc
pop
sar
or
movs
retf
retf
adc
and
aas
mov
dec
mov
xchg
test
mov
nop
jl
dec
leave
rol
mov
adc
add
inc
mov
out
cmp
sbb
dec
popf
xor
es
jl
popa
jno
mov
loope
adc
sub
test
test
div
loope
mov
xor
jle
(bad)
jmp
and
out
cmps
push
test
inc
ss
cmp
mov
jg
sti
mov
std
and
pop
mov
sahf
in
sbb
mov
push
jno
rsqrtps
call
dec
cld
or
mov
xor
imul
mov
mov
mov
adc
sahf
nop
pop
push
cmp
cmp
push
dec
fadd
call
add
aas
push
ja
stos
push
loopne
fdivr
cmp
dec
mov
arpl
xchg
mov
mov
inc
xchg
pop
jge
push
push
loop
inc
adc
mov
pusha
repz
mov
es
jg
or
fstp
fwait
mov
gs
adc
sub
ret
popf
lds
add
repz
lds
shl
jo
fst
mov
ja
div
(bad)
push
cmp
fdivr
mov
inc
out
test
cmp
bnd
jno
pop
mov
push
jp
dec
or
push
jp
cdq
or
adc
or
mov
stc
outs
jmp
out
in
stos
jo
pop
add
dec
and
mov
test
inc
das
mov
mov
scas
add
cdq
into
lahf
pop
sbb
push
test
inc
mov
pop
sub
pop
test
xchg
(bad)
imul
add
sub
sub
sub
outs
dec
mov
mov
xor
mov
xchg
sbb
out
aam
(bad)
lds
inc
not
(bad)
scas
into
xor
adc
in
mov
retf
add
push
call
call
mov
or
jmp
sbb
addr16
pop
sar
ror
push
adc
and
mov
mov
and
adc
in
dec
xchg
(bad)
dec
push
sub
rol
lds
std
inc
dec
sahf
(bad)
ficom
sbb
inc
inc
inc
not
fadd
(bad)
or
fiadd
loop
push
repnz
fstp
fnstsw
movs
xor
out
test
xor
out
xchg
test
jne
es
jl
fiadd
sub
mov
jmp
rol
adc
cmp
inc
inc
(bad)
(bad)
sub
pop
xlat
imul
xor
mov
out
gs
inc
(bad)
cmp
jo
jg
push
fst
in
(bad)
loop
sbb
lock
xor
xchg
ins
cld
ret
stos
sbb
std
fs
int
xor
fnstcw
sbb
fidiv
xchg
in
cli
jg
pop
pop
cmp
in
shl
fdivr
addr16
adc
call
dec
mov
pop
or
enter
fsubr
jae
mov
test
ins
push
jno
xor
cmc
bt
push
ror
pop
cs
retf
outs
sbb
sbb
lds
movs
pop
xor
aam
jl
add
and
xchg
push
pop
lods
push
jp
add
js
lea
outs
mov
dec
jbe
xor
inc
iret
mov
cwde
xor
in
dec
push
cmc
fidivr
ds
adc
idiv
pop
jmp
ins
aam
(bad)
xor
cmp
clc
ins
xor
pop
stc
mov
ja
jmp
repz
jnp
pop
int3
mov
mov
jecxz
xor
sahf
xor
dec
loop
dec
xor
outs
ss
mov
bound
pop
sahf
sti
(bad)
iret
retf
into
and
mov
mov
dec
iret
cmp
inc
dec
(bad)
push
mov
jle
rol
xchg
pushf
and
imul
std
rcr
out
mov
shl
movs
mov
jp
jl
cmp
shr
xchg
shl
inc
add
sub
sbb
movs
mov
outs
inc
sub
movs
aas
leave
imul
mov
pop
xchg
outs
aas
push
dec
cdq
pop
mov
push
lock
xchg
hlt
and
cdq
push
jb
sar
mov
dec
xor
mov
cmp
imul
pop
inc
xor
fstp
sahf
sahf
push
xchg
dec
and
jl
lahf
in
fild
jecxz
sub
mov
es
aad
add
je
gs
shl
sti
xor
(bad)
pusha
in
inc
cmp
mov
clc
mov
cmp
and
popf
push
mov
sbb
fcmovnu
push
adc
popa
ss
nop
arpl
push
leave
push
mov
sub
test
pop
adc
push
mov
pusha
pusha
fs
xchg
or
pop
jb
cwde
mov
(bad)
call
pop
rcr
and
lea
fldln2
push
mov
sbb
scas
sbb
push
jl
adc
popf
ds
and
mov
sub
repnz
adc
int
mov
jne
pushf
pop
enter
push
push
cli
cmp
or
mov
dec
fcomp
(bad)
sub
(bad)
jb
xor
mov
mov
icebp
push
nop
dec
jecxz
push
popa
cmp
sub
mov
sub
movs
xor
in
push
adc
xor
xor
daa
(bad)
pop
add
push
ss
mov
cmp
shl
inc
imul
pop
gs
fst
shl
jnp
jg
or
push
ins
add
int3
inc
popf
movs
rcl
cli
out
ret
imul
repnz
cwde
stos
cld
dec
mov
stos
ja
push
dec
mov
xor
push
outs
or
inc
nop
xor
xchg
inc
mov
outs
movs
push
dec
dec
ins
dec
add
adc
push
inc
imul
adc
sbb
movs
dec
stos
int
push
sub
dec
jg
sub
pop
adc
pop
adc
mov
(bad)
imul
aaa
mov
loop
add
sbb
or
adc
sub
jl
jle
(bad)
inc
jae
adc
mov
mov
mov
adc
lds
xlat
ds
pcmpeqd
loopne
adc
mov
sub
xlat
sub
or
mov
mov
outs
lods
dec
mov
jne
scas
xor
and
jge
cmp
fwait
mov
mov
cli
aam
mov
push
out
cmp
fwait
mov
xor
pop
adc
xor
outs
or
mov
loopne
cmp
jle
adc
fdiv
pop
fdivp
cmp
adc
outs
mov
mov
repnz
test
retf
dec
mov
call
int
enter
adc
xor
aam
and
fdiv
push
mov
loop
xchg
mov
shr
sbb
or
out
xchg
popa
mov
mov
test
jne
sbb
and
sub
idiv
mov
push
rol
aaa
lds
les
mov
or
je
sar
dec
ja
or
and
dec
mov
stos
dec
dec
int3
add
inc
inc
mov
in
mov
fcom
mov
fbld
inc
ret
(bad)
sbb
xor
jl
icebp
push
punpckhwd
sub
movs
pop
mov
cmps
cdq
(bad)
sti
ins
fdivr
(bad)
push
je
sub
pop
in
cs
sahf
push
jge
cs
mov
test
loopne
dec
mov
mov
cmc
or
sti
push
fbld
cmps
(bad)
xlat
adc
jne
retf
pop
xchg
mov
pop
adc
push
adc
out
xor
mov
xchg
sbb
cmps
push
pusha
cmps
sub
push
xchg
push
in
xor
cmp
or
sbb
fcom
and
and
sbb
add
(bad)
(bad)
(bad)
pop
les
xchg
xor
icebp
sub
push
aam
and
movs
pop
enter
and
or
sub
inc
xor
xchg
mov
xchg
sub
lods
mov
jne
data16
inc
dec
mov
mov
cwde
mov
sbb
das
js
ins
mov
inc
sbb
dec
mov
lea
(bad)
sbb
inc
mov
aaa
idiv
mov
jge
jmp
repnz
pusha
push
rcl
sub
popf
add
test
fidiv
test
js
into
pop
aam
mov
bound
test
cmps
push
pop
call
jb
dec
popa
xor
sbb
sub
into
add
pop
gs
out
(bad)
fnstsw
xor
(bad)
lods
stos
sbb
test
and
dec
xchg
pop
jnp
sbb
add
pop
sbb
mov
sub
mov
adc
xor
or
and
fisttp
test
or
in
prefetcht1
aas
and
xor
push
xchg
mov
pop
fdiv
clc
(bad)
or
and
push
add
and
pop
loope
push
fwait
test
xchg
cs
das
pop
(bad)
ins
daa
mov
stc
and
sub
xor
jecxz
fwait
adc
mov
sbb
jns
jbe
inc
pusha
cld
sahf
and
xchg
cmps
ins
in
shr
and
jno
enter
in
adc
sub
sub
adc
lahf
fnstsw
cmp
xchg
je
out
(bad)
(bad)
sbb
repz
mov
jp
aaa
hlt
pushf
mov
inc
jmp
dec
pop
arpl
pop
fcmovnu
xchg
and
fistp
sbb
push
imul
mov
xor
sub
cmps
outs
mov
inc
fwait
out
dec
mov
scas
pop
or
data16
leave
cdq
test
mov
mov
rcl
push
cmp
adc
push
sar
ins
add
mov
test
xchg
gs
aaa
jmp
outs
ret
addr16
loopne
imul
dec
pop
scas
push
jge
jnp
inc
clc
cmp
mov
or
and
lea
push
jns
push
ret
pop
movs
fnsave
into
jmp
push
pop
xchg
cmp
mov
push
fmul
fdivr
cmp
retf
stos
sub
aas
out
push
inc
ins
push
jae
mov
scas
adc
mov
push
out
pop
jbe
jp
shl
call
loop
xchg
mov
push
push
mov
and
xchg
push
stc
xchg
mov
xchg
outs
sbb
xor
push
sahf
sbb
repnz
in
adc
stos
test
ror
adc
jne
jl
test
div
das
push
and
mov
mov
mov
sub
stos
dec
rcr
xchg
xor
pop
push
jne
sbb
xchg
pop
clc
mov
mov
test
and
ficomp
pusha
int
fwait
xor
pop
inc
or
aaa
inc
cmp
lahf
inc
mov
test
jge
mov
aaa
xor
cmp
(bad)
pop
arpl
les
sbb
stos
pop
rcr
dec
fldenv
clc
jmp
sub
cli
out
nop
cmp
ret
jnp
sbb
xchg
ret
sbb
dec
cld
pop
push
push
sbb
outs
adc
les
pusha
and
dec
and
jl
ror
jl
inc
js
sbb
dec
outs
mov
int3
mov
xchg
push
and
cmp
cwde
pop
inc
cmps
mov
mov
js
or
pop
pop
xor
pop
and
(bad)
test
pop
lods
add
ds
ds
(bad)
out
and
cmp
stc
sub
stos
push
push
or
leave
call
and
loope
es
out
inc
mov
es
xchg
mov
inc
jno
jmp
lds
aas
mov
stc
cs
jge
(bad)
ins
out
add
mov
dec
jmp
in
jno
test
fs
cmp
xor
std
mov
and
jne
lods
loopne
add
les
sub
daa
or
pop
js
push
mov
push
inc
stos
test
stos
stos
push
gs
loope
js
jmp
xchg
pop
lock
jg
rcl
dec
inc
cmp
pop
lods
jmp
in
inc
pusha
fbstp
loopne
jecxz
cmp
hlt
fucomp
cdq
daa
dec
xchg
out
inc
mov
stos
sub
ret
repnz
sub
lea
scas
jg
xor
xchg
cmp
xlat
sbb
fild
fstp
mov
pop
mov
jae
and
inc
je
xchg
and
jae
mov
fistp
dec
jecxz
cmp
jp
xchg
cmps
je
push
shr
gs
scas
rol
movs
mov
and
lds
or
call
jmp
mov
dec
pushf
jmp
(bad)
push
test
sbb
in
mov
dec
jbe
(bad)
mov
shl
je
mov
push
jp
ror
in
mov
ja
jbe
das
adc
jne
into
into
inc
mov
stos
cmp
pop
adc
pop
arpl
ds
stos
inc
jp
pop
jg
mov
sub
dec
xchg
sub
xor
dec
pop
pop
or
test
cdq
cmp
jmp
xchg
lahf
pop
test
cld
shrd
mov
or
xchg
jmp
xchg
test
data16
pop
jb
add
or
sbb
push
mov
add
add
mov
out
push
add
cdq
fs
lods
nop
arpl
and
push
(bad)
adc
mov
imul
pop
daa
or
cmp
mov
cmp
cmp
push
and
shl
pop
cmc
mov
xchg
push
das
test
mov
or
cwde
xchg
nop
movs
ja
or
adc
cli
(bad)
jle
jb
jmp
shr
iret
and
and
repz
or
mov
iret
into
dec
(bad)
fldcw
in
push
pop
jg
mov
or
fxch
xor
mov
rol
dec
(bad)
ins
or
dec
xchg
or
and
enter
sub
or
les
imul
xchg
adc
stos
(bad)
or
pop
jp
pop
scas
aaa
mov
push
mov
out
dec
push
dec
ficomp
mov
inc
icebp
and
and
idiv
xor
xchg
inc
daa
stc
xor
shl
scas
or
pop
dec
aas
and
ret
(bad)
cmps
pop
dec
mov
dec
fwait
rol
out
(bad)
jne
xor
mov
ja
xchg
add
(bad)
or
lods
aad
enter
pusha
in
lsl
pop
or
jp
pop
movs
and
add
cli
into
ret
push
mov
adc
push
out
pop
or
add
and
xlat
xor
mov
fcom
mov
xor
lods
mov
push
out
bound
stos
into
and
test
retf
cmps
sub
jb
loopne
leave
or
(bad)
hlt
ret
push
push
stc
xor
push
hlt
stc
inc
xor
pop
popa
sub
das
hlt
sysenter
pop
rol
add
pop
add
push
ss
fst
dec
mov
fdiv
push
or
outs
cld
add
jns
mov
pop
jp
push
in
dec
adc
mov
or
xor
or
sub
enter
addr16
inc
sub
pop
ficomp
cli
xor
les
std
punpckldq
call
inc
xchg
push
loop
and
pop
cmps
ja
sub
imul
push
or
dec
add
test
aad
fldenv
in
mov
rcl
inc
or
push
ja
push
in
xor
inc
mov
jge
cmp
push
dec
test
or
xor
sbb
or
inc
fidivr
jg
mov
cmp
mov
enter
pop
inc
sub
bsf
retf
inc
stos
adc
mov
xchg
xchg
fwait
push
jno
cmc
(bad)
jo
mov
test
(bad)
jp
sbb
xchg
repz
mov
mov
nop
mov
xchg
jmp
stc
lahf
push
xchg
out
pop
mov
pop
test
pop
sbb
sub
adc
push
stos
mov
push
in
push
sbb
mov
inc
jb
cmp
aaa
sbb
add
call
cmc
sbb
dec
sbb
adc
repnz
fldcw
out
in
jae
xor
sbb
out
js
js
clc
into
scas
dec
adc
adc
add
das
aas
pop
movs
inc
fdiv
jmp
sahf
repnz
inc
pusha
mov
push
pop
or
sub
or
lahf
adc
mov
adc
lock
xchg
xor
popa
ja
vcmpss
mov
sub
jge
icebp
mov
push
mov
adc
cmp
mov
add
mov
ins
sbb
lods
out
sub
sar
sub
mov
retf
cmps
ins
push
enter
in
xchg
xor
lock
popa
hlt
pop
mov
and
je
ins
rcl
(bad)
adc
pop
jmp
jmp
xor
sahf
mov
sahf
jmp
inc
mov
jne
pop
mov
fdivr
inc
lock
shr
push
push
pushf
mov
pop
outs
cmps
in
lahf
rcr
shl
push
scas
pop
pop
lea
xchg
sbb
push
call
neg
std
dec
xacquire
adc
pop
mov
mov
cli
int3
jmp
pop
push
das
je
mov
icebp
push
js
pop
inc
popa
cmp
gs
push
retf
xor
xchg
inc
or
sub
in
nop
mov
imul
pop
fs
clc
pop
mov
pop
sbb
das
data16
dec
out
add
in
in
je
cmp
or
adc
dec
test
scas
add
inc
popa
or
jecxz
push
xchg
retf
adc
pop
add
mov
popf
xor
dec
push
not
daa
dec
and
dec
in
popf
popa
(bad)
adc
xchg
data16
enter
mov
rcl
retf
mov
xchg
xchg
adc
mov
ins
std
pop
mov
cmp
fs
sbb
sub
push
add
call
nop
aas
mov
call
sub
fmul
dec
push
mov
outs
or
mov
aam
jno
je
loop
arpl
pusha
js
mov
cmp
(bad)
mov
out
xor
sbb
std
add
lahf
lods
les
loop
inc
dec
les
mov
jbe
nop
aaa
fiadd
mov
daa
pushf
dec
pop
(bad)
(bad)
in
loopne
nop
xor
inc
outs
dec
xor
ds
dec
lds
fisub
in
leave
rol
jae
push
stc
adc
xor
jl
stos
mov
cmp
leave
add
ret
nop
xchg
fistp
ja
push
mov
aam
or
js
push
arpl
sbb
pop
sbb
push
and
out
and
pop
adc
or
out
call
outs
jno
ins
pop
xchg
ins
sbb
mov
sbb
mov
xchg
dec
test
mov
int3
test
test
or
xor
stos
add
xor
inc
push
outs
mov
pop
cmp
add
mov
push
(bad)
icebp
imul
arpl
or
test
sar
or
leave
in
push
mov
add
cld
gs
hlt
xchg
outs
pop
pop
shl
jns
hlt
or
mov
(bad)
bt
cs
xchg
xchg
mov
into
hlt
int3
out
adc
jp
out
popa
retf
adc
cmp
xchg
mov
movs
movs
pushf
jg
hlt
jp
add
add
pop
jne
jmp
mov
inc
inc
rcr
bound
cmovle
clc
sti
cmp
(bad)
dec
dec
jns
dec
push
sbb
movs
inc
iret
adc
ins
dec
xchg
sbb
or
jle
lods
pop
push
in
(bad)
xor
(bad)
retf
repnz
fwait
enter
es
repnz
pop
adc
and
je
scas
pop
gs
pop
cmp
jbe
jmp
lahf
addr16
or
pop
push
mov
jp
dec
xor
cld
sbb
jecxz
cs
adc
mov
stos
aas
addr16
call
push
inc
mov
sahf
pop
mov
pop
cmp
leave
sub
sub
sub
call
dec
loope
dec
dec
cmp
inc
in
dec
call
scas
bound
sub
inc
mov
retf
dec
(bad)
jl
push
and
mov
popf
dec
cmps
ret
nop
xor
jp
and
(bad)
aad
ror
xchg
inc
ret
push
adc
cli
adc
dec
xchg
movs
and
jae
mov
nop
xchg
nop
lock
test
jb
cmovno
aam
mov
aas
sahf
(bad)
mov
ror
jmp
mov
movs
jo
dec
mov
sub
or
adc
add
jl
push
aaa
(bad)
mov
add
mov
out
or
fnstcw
mov
pop
loop
popf
ffreep
cwde
or
mov
aad
jge
adc
pusha
shl
jne
(bad)
mov
out
push
jge
ins
mov
mov
and
add
shl
mov
ffreep
leave
(bad)
dec
pushf
lds
sbb
pop
push
fmul
test
pushf
imul
add
xor
retf
pop
fdivr
dec
shl
popa
das
call
(bad)
test
sbb
test
ins
es
outs
ins
daa
out
lahf
out
jmp
loopne
inc
and
nop
cld
lds
sbb
push
test
sahf
add
cmp
jnp
or
xor
add
jmp
popa
arpl
or
pusha
ficomp
and
pop
rcr
lahf
outs
pushf
sub
or
jo
push
pop
sub
ins
ret
add
adc
rcl
pop
jg
call
cmp
cmp
(bad)
rcr
cmp
sbb
sub
or
aad
xchg
sbb
test
pusha
sub
aam
addr16
sub
jae
or
dec
out
ja
call
je
movs
mov
dec
add
jbe
sbb
jb
mov
test
xchg
push
pop
and
ins
or
fs
pop
cwde
mov
rcr
xlat
add
add
push
xchg
mov
push
mov
dec
aam
(bad)
sub
stc
lea
cmp
aaa
mov
xchg
cmp
inc
mov
jle
adc
jnp
scas
inc
je
sbb
xor
adc
xchg
int
xchg
shl
sti
out
cwde
cmps
dec
inc
js
rol
mov
lock
(bad)
int3
xchg
outs
add
sbb
movs
mov
and
mov
xchg
mov
aad
inc
inc
sbb
fs
lock
jo
push
stos
or
mov
in
sub
cmp
bnd
or
mov
aad
pcmpeqd
cmps
test
and
sbb
mov
xchg
iret
or
test
ja
ss
int3
fistp
fstp
cmp
cmc
mov
push
das
and
stos
scas
pusha
gs
inc
fst
mov
arpl
jno
sub
retf
div
(bad)
arpl
js
mov
retf
push
je
sbb
repnz
ss
jne
mov
mov
mov
mov
xchg
jae
out
dec
push
mov
adc
aad
leave
aaa
repz
rcr
in
mov
scas
sbb
clc
push
daa
push
rcl
xchg
mov
sub
je
mov
arpl
pop
out
push
repnz
mov
sub
and
xchg
adc
int3
retf
jo
xchg
cmp
clc
mov
pop
inc
pop
movs
stos
pop
mov
call
fwait
xchg
inc
jge
mov
jge
mov
aas
or
idiv
and
sub
or
outs
arpl
inc
jle
dec
xchg
xor
outs
aaa
adc
nop
sahf
and
and
pop
pop
das
shl
repz
adc
inc
pop
xchg
sti
(bad)
and
or
adc
call
jmp
fmul
shl
fsub
imul
pushf
out
sbb
stos
mov
pop
pusha
mov
mov
sbb
cwde
xor
ror
add
mov
sub
and
das
dec
repz
imul
mov
adc
fld
popf
mov
adc
pop
xchg
stc
sub
popf
or
rol
dec
icebp
into
xor
adc
mov
adc
cmps
mov
pop
push
retf
outs
cmps
rcl
scas
ror
aaa
xor
or
ret
xchg
call
jbe
mov
jns
adc
xor
or
jns
arpl
je
cdq
sbb
xor
pop
mov
lods
jo
(bad)
sbb
jecxz
cmp
xchg
enter
cmp
clc
mov
pop
jecxz
(bad)
push
push
pop
adc
xor
add
dec
push
push
dec
mov
mov
pop
dec
jne
xchg
sub
push
inc
add
call
(bad)
adc
push
xor
ins
lock
mov
mov
jle
or
cdq
dec
mov
div
inc
cmp
pop
push
popa
sub
sahf
leave
out
cmp
xchg
sub
rol
nop
jg
lock
jmp
adc
xchg
(bad)
cmp
ficomp
ret
fs
stos
test
out
(bad)
or
inc
push
adc
mov
in
jns
jae
rol
xchg
add
adc
cmp
dec
rol
dec
and
or
in
xlat
not
std
ror
mov
retf
sub
aaa
fnsave
mov
sahf
or
add
enter
mov
mov
add
call
xchg
jmp
inc
add
std
inc
and
push
rcr
rcr
push
(bad)
pushf
mov
push
xlat
mov
mov
and
and
push
mov
scas
popa
mov
outs
jo
fistp
lock
mov
mov
inc
cmp
in
push
mov
xchg
ret
pop
adc
or
ret
ror
mov
pusha
mov
mov
jle
push
jae
aam
popf
mov
pop
and
les
js
mov
ret
xor
mov
pop
in
pop
inc
sbb
xor
and
int3
stos
lods
add
inc
mov
sub
sbb
sbb
mov
add
pmuludq
outs
rcr
mov
fdiv
cs
and
lock
clc
dec
sbb
dec
cdq
push
add
mov
dec
mov
lea
imul
cld
xor
retf
inc
adc
inc
rcl
fiadd
dec
xchg
push
xchg
adc
sub
or
stos
pop
inc
pop
sbb
gs
jae
or
enter
sub
mov
sub
loopne
jno
rcl
mov
cmp
xor
jno
arpl
add
mov
mov
sub
jnp
jp
inc
push
shr
or
pop
cmp
jbe
or
cmc
pop
scas
loope
inc
or
imul
test
addr16
jmp
and
xchg
and
sbb
sbb
out
mov
movs
mov
pop
sahf
scas
test
movs
fdivr
test
bound
int
or
adc
int3
adc
push
and
je
into
xor
test
sub
and
adc
fs
lds
popf
dec
push
(bad)
pop
xor
push
dec
add
call
cld
push
gs
shr
lock
mov
mov
ds
adc
push
popa
repz
jl
jmp
sub
ss
arpl
mov
call
push
pusha
xchg
sbb
jecxz
sbb
mov
jl
int
repz
and
lea
adc
xchg
xchg
test
cmp
sub
push
push
enter
nop
inc
or
push
add
pop
ds
dec
add
xchg
inc
sahf
cmp
cmp
stc
sbb
in
into
sub
or
sub
pop
or
sbb
dec
clc
pop
or
sub
lods
outs
or
(bad)
xor
sbb
jo
dec
add
push
mov
mov
imul
sub
dec
(bad)
mov
jle
pop
mov
lahf
imul
aam
xor
mov
ja
inc
inc
jecxz
in
lods
iret
sahf
addr16
jbe
push
sub
add
in
jg
and
je
std
mov
lods
mov
jne
inc
stc
jno
arpl
das
mov
addr16
stc
cmps
sub
test
push
fwait
inc
xor
mov
jne
jg
inc
mov
mov
pop
fwait
test
fimul
sub
mov
stos
jno
(bad)
xchg
ja
xor
hlt
jge
pop
or
stos
and
fidivr
mov
jmp
ins
nop
pusha
fdiv
shl
pop
push
(bad)
pushf
cmp
pop
xor
xor
fdivr
frndint
push
popf
loop
fimul
scas
adc
movs
out
retf
sub
jp
hlt
sub
add
cdq
data16
fucomi
repnz
mov
adc
xchg
outs
inc
test
out
lock
and
sbb
fcmovnu
ja
add
add
cmp
or
lods
por
nop
xchg
sbb
xchg
inc
call
imul
add
(bad)
aas
jb
cmp
pop
gs
push
dec
stos
je
ret
in
(bad)
aaa
je
loope
lods
(bad)
imul
icebp
adc
cmps
sbb
sub
(bad)
ins
int3
je
or
cwde
stos
aas
clc
and
xor
shl
rcl
inc
or
leave
out
push
das
add
sbb
cld
add
movs
or
sub
inc
cmps
int3
popf
stos
mov
std
bound
xchg
mov
inc
jbe
and
cmp
mov
inc
dec
jmp
mov
jmp
mov
cmp
sbb
jne
push
sub
les
xchg
nop
mov
jmp
cmp
and
jo
les
aam
xor
nop
rol
push
and
sbb
(bad)
sub
out
sbb
fiadd
mov
jmp
imul
dec
in
lds
push
es
push
xor
aad
adc
xchg
mov
lahf
jge
stos
lds
outs
cmp
ror
xchg
(bad)
aad
add
mov
das
push
shl
xchg
pop
pop
or
dec
or
and
pushf
sar
test
cmp
(bad)
(bad)
fidivr
jmp
cmp
test
cmc
out
xchg
dec
hlt
and
arpl
fucom
xlat
retf
or
xor
sbb
cmp
loop
sbb
or
push
pop
icebp
mov
mov
std
movs
push
xchg
nop
add
scas
sbb
shl
xlat
js
inc
add
push
sub
retf
pop
nop
outs
and
xchg
test
test
call
out
scas
daa
mov
mov
adc
scas
push
sbb
loope
call
out
push
je
jl
push
xchg
gs
mov
shl
xchg
ficom
popa
jl
mov
mov
jg
xchg
push
inc
mov
retf
xchg
xchg
paddb
test
in
lods
adc
aam
cmp
std
imul
xor
bnd
sub
lods
loop
sub
push
pop
ja
sub
mov
out
in
(bad)
es
mov
retf
mov
hlt
jl
cs
imul
mov
mov
movs
pop
xlat
imul
mov
fwait
push
and
adc
ins
jne
or
popf
leave
sar
dec
jbe
fisubr
(bad)
pushf
scas
packsswb
jge
mov
push
dec
sbb
arpl
jg
xor
mov
(bad)
jnp
push
sbb
popf
fwait
and
inc
cld
adc
xchg
lods
adc
and
sub
mov
mov
aad
test
sub
push
xchg
loopne
jo
outs
xchg
shr
lock
sub
(bad)
xor
mov
clc
mov
ficomp
adc
movs
xor
popa
mov
sub
je
rol
pop
(bad)
jns
cmp
add
and
push
gs
movs
pop
push
in
add
fs
mov
movs
jecxz
pop
xor
pop
sub
jae
test
(bad)
xchg
push
sbb
xor
imul
arpl
arpl
jecxz
cmp
adc
cmp
pop
add
mov
pop
test
cmp
push
inc
(bad)
mov
scas
mov
pop
sahf
pusha
sbb
cdq
jecxz
pop
cdq
xchg
inc
in
stos
lods
xor
aam
sub
stc
lahf
cmps
fs
popf
movs
pop
imul
xchg
and
(bad)
sub
push
retf
dec
jl
mov
and
sti
fdiv
xchg
fst
rcr
(bad)
cli
sbb
and
adc
loop
push
xchg
hlt
sbb
in
pop
cmp
sub
adc
mov
into
addr16
inc
test
sar
(bad)
lea
ins
retf
pop
je
cmp
sub
and
mov
sub
ja
pop
loope
fnstenv
jmp
inc
sbb
jne
add
or
stc
mov
out
cmc
popa
(bad)
mov
xchg
out
fld
stos
mov
mov
jno
cwde
daa
xchg
or
add
div
push
push
mov
in
add
fstp
push
ja
jae
jg
pop
cli
or
jbe
(bad)
mov
inc
and
sbb
enter
es
pop
stos
icebp
fnstenv
loopne
lods
aaa
pushf
pop
cmp
jecxz
lds
push
and
jg
cmp
int3
pop
pop
repz
les
adc
jae
mov
mov
loop
push
cwde
pop
outs
jmp
lods
sbb
gs
pusha
sahf
add
xor
inc
das
sbb
jb
sub
lock
lds
pop
xchg
xchg
lds
adc
add
cmc
(bad)
push
pop
dec
mov
cmp
fild
enter
cs
sbb
mov
int
xchg
pop
inc
out
repnz
stos
add
outs
mov
pop
push
and
mov
leave
xor
add
mov
push
push
daa
iret
and
add
repz
imul
and
sbb
ds
adc
jns
stos
aam
adc
sar
fbstp
cmp
mov
jl
ret
xchg
stos
or
test
(bad)
(bad)
jp
sub
push
and
rcr
pop
cmp
cmc
enter
and
mov
xchg
jne
dec
in
inc
dec
ficom
aam
dec
les
movs
fisub
pusha
sbb
cmc
and
adc
pusha
adc
sub
aad
cmp
mov
(bad)
mov
(bad)
nop
nop
sub
out
hlt
ja
mov
adc
inc
aam
(bad)
into
mov
loop
lahf
test
ja
adc
in
dec
int
hlt
add
push
mov
cmps
mov
ret
jl
outs
jmp
cli
or
and
les
sub
mov
cmc
repz
fiadd
jmp
popf
add
inc
(bad)
push
xor
xchg
sti
aam
or
jge
fidiv
dec
retf
lahf
mov
mov
pop
dec
adc
sbb
aaa
addr16
pop
pop
push
or
(bad)
imul
les
mov
sub
loopne
and
pop
push
xchg
sub
mov
xor
dec
repnz
mov
cs
jbe
adc
jecxz
sbb
inc
sti
mov
ins
cmp
xchg
push
repnz
jae
sbb
fcmove
dec
sahf
mov
out
out
mov
ds
into
in
das
out
fistp
pop
lds
cmp
xor
shl
inc
or
repz
aas
jl
jle
inc
rcr
cmc
jle
cld
mov
jns
lahf
lea
imul
(bad)
jae
mov
sbb
xlat
loope
loopne
push
dec
in
pop
and
fisubr
std
test
dec
sti
add
push
fcmovbe
cwde
jg
and
fmul
mov
lahf
aad
pop
movs
cmp
outs
imul
into
imul
jno
push
and
pop
and
sahf
mov
push
iret
pop
outs
js
fisubr
icebp
in
addr16
sahf
mov
adc
xchg
imul
mov
jmp
scas
pop
int3
outs
js
jl
pop
cmc
mov
xor
test
lahf
stos
xor
jne
mov
in
out
cmp
mov
jecxz
enter
ret
inc
lahf
sbb
pop
ins
mov
push
lea
sub
lods
popa
in
adc
mov
sub
xor
ficomp
mov
inc
sbb
ins
mov
pop
in
out
bound
mov
in
xchg
shl
inc
xor
ss
lds
xlat
aam
iret
popf
add
pop
sbb
cwde
mov
in
enter
inc
jmp
pop
jp
mov
ficomp
jnp
(bad)
fstp
inc
(bad)
mov
test
lods
fisttp
cmp
fucomi
jg
jge
cli
popf
xor
dec
jecxz
popa
gs
pop
in
fucomi
sar
rcl
aaa
fidiv
jmp
jno
cmp
push
neg
jns
in
test
es
mov
mov
pop
mov
adc
adc
stos
aad
jle
xor
les
aam
clc
in
test
xor
test
cmc
pusha
rol
lahf
pop
pop
mov
fistp
sbb
sti
inc
mov
cmp
movs
jle
pop
xchg
fisubr
cmp
rol
and
pop
cmps
test
mov
lds
imul
cmp
pop
fdiv
dec
ins
pop
push
push
popf
std
int3
retf
sub
lea
xor
jp
stc
lods
jae
push
pop
dec
js
jb
bts
mov
retf
sbb
fincstp
xchg
(bad)
or
pop
adc
in
fmul
cs
loope
rol
(bad)
std
iret
mov
ins
jb
jg
fisubr
(bad)
cmps
out
cmps
push
sub
iret
clc
xor
and
sub
pop
inc
pop
pop
push
call
addr16
(bad)
adc
leave
mov
ror
sbb
push
(bad)
add
std
outs
loope
or
mov
cmps
push
(bad)
sub
mov
sahf
add
push
ret
repz
push
adc
and
sbb
adc
rcl
retf
push
inc
mov
adc
xchg
stos
dec
je
pop
(bad)
cmc
fcom
aaa
out
adc
out
int
ss
mov
call
cld
xor
and
(bad)
clc
jb
(bad)
ret
sbb
fdivr
xor
lock
mov
pop
fadd
sbb
xchg
pop
cld
jmp
lock
mov
and
fild
cmps
jl
xchg
rcr
xchg
xor
push
js
push
rol
jmp
push
adc
ficom
mov
ror
cmp
mov
or
add
sub
in
dec
imul
cmc
retf
push
push
lds
inc
loope
push
pop
pop
cli
push
aam
cmc
sbb
mov
bswap
retf
mov
add
in
mov
push
retf
stc
pop
sub
or
arpl
addr16
movs
and
jg
in
push
sub
pop
sub
sbb
push
mov
clc
data16
xlat
movs
arpl
cmp
jns
and
inc
sbb
clc
int
push
push
test
cmp
pop
jnp
push
pop
inc
mov
loope
pop
sub
ds
sub
mov
mov
push
mov
cwde
bts
enter
repnz
scas
cmp
adc
and
popf
cdq
es
sti
rcl
and
in
xor
add
and
dec
imul
popf
push
inc
js
push
sub
lods
push
setle
pop
aad
push
je
cld
cmp
sbb
xchg
call
lods
inc
xor
rcl
es
cmps
push
div
cmp
aad
ret
and
add
xchg
mov
mov
inc
test
cmps
xor
pop
les
ret
(bad)
pop
cmp
es
loopne
fwait
add
cmc
adc
jmp
jmp
pop
retf
not
in
push
in
clc
or
retf
xor
aam
jb
mov
cwde
jg
cwde
fst
sbb
xchg
xor
fbstp
out
xchg
dec
fcmovu
in
daa
xor
in
xor
or
call
mov
jecxz
mov
jo
sub
ret
sub
jle
push
data16
push
mov
ret
hlt
xlat
pop
push
xchg
xor
and
cmp
push
lods
jo
mov
aam
rcr
sub
out
out
iret
inc
fcmove
xchg
fcomip
sub
sbb
jb
(bad)
and
xchg
and
jo
out
pop
xchg
mov
fwait
in
ds
or
lds
and
inc
add
or
pop
call
mov
lods
mov
xor
loopne
jns
and
leave
mov
sti
lock
sub
and
inc
cmc
dec
pop
or
ret
fisttp
aam
mov
bound
mov
test
dec
cmp
mov
add
dec
int
push
jecxz
ja
pop
iret
xor
push
sbb
fsubr
shl
out
adc
hlt
inc
scas
or
(bad)
mov
retf
jnp
mov
repz
call
push
inc
mov
and
pop
mov
adc
add
shr
or
inc
jmp
dec
xor
mov
xor
adc
test
lods
inc
inc
add
cmp
jg
jge
mov
jecxz
pusha
sub
sbb
adc
aas
adc
sar
xor
(bad)
dec
jle
xor
icebp
gs
mov
xor
jecxz
fs
cwde
sub
add
add
shl
inc
outs
push
push
push
popa
outs
cmp
cmc
loope
jae
movs
aad
inc
fldcw
mov
adc
mov
repnz
cdq
in
pop
aad
bound
xor
mov
xor
inc
mov
and
mov
in
pop
ds
aaa
mov
xor
clc
call
call
fwait
fwait
mov
xchg
adc
ret
pushf
inc
mov
pushf
push
cwde
clc
imul
sbb
ins
pop
jne
xor
(bad)
mov
sbb
ds
dec
sub
mov
je
xchg
sti
aad
aad
cmp
scas
iret
loope
or
xchg
sub
icebp
(bad)
jnp
stos
scas
shr
push
out
out
movs
ret
(bad)
jnp
mov
mov
ins
mov
jg
jae
jmp
jnp
outs
xchg
ja
jns
cmp
fsub
aam
mov
cld
sub
jecxz
xchg
xchg
jmp
jns
movs
pop
sub
cs
jno
xor
pop
inc
pop
xor
jle
leave
shl
in
(bad)
cmp
pop
jmp
out
jg
je
push
cmp
jmp
mov
xor
jmp
mov
cs
test
aad
xchg
pop
fbstp
(bad)
push
cmp
in
ja
pop
cmp
dec
lahf
adc
mov
xchg
out
cmp
xchg
jbe
stc
xor
pop
sti
dec
movs
xchg
aad
in
out
pushf
mov
ja
push
mov
jb
and
mov
pop
inc
adc
(bad)
mov
ds
fild
rcr
sbb
ror
jp
xchg
adc
push
daa
ss
fsub
fs
xor
pop
sub
in
cmp
(bad)
xor
int3
pop
popf
mov
int3
push
jne
neg
jge
push
xor
daa
out
cli
hlt
mov
addr16
dec
in
pop
jg
test
sbb
mov
fild
std
jmp
add
cld
cmps
mov
push
mov
rcr
jbe
adc
jp
jbe
hlt
call
mul
mov
dec
outs
cmp
ins
fdiv
pop
ja
mov
mov
xchg
movs
dec
stos
cmps
xlat
mov
mov
sbb
popf
mov
repz
and
jbe
in
daa
mov
fcomip
pusha
xor
mov
in
pop
(bad)
bound
pushf
test
xor
ret
bound
std
pop
mov
aas
loop
mul
xor
adc
mov
je
bound
test
ja
dec
jno
mov
(bad)
jae
pop
xchg
hlt
cli
fwait
lds
mov
cs
cmp
shl
lahf
ret
gs
adc
(bad)
aas
repz
loope
out
retf
in
test
sbb
fisttp
cmp
fsub
(bad)
jae
xor
sub
push
ret
js
pop
push
iret
mov
retf
in
fdiv
xchg
int3
or
in
out
inc
clc
retf
retf
sub
mov
dec
mov
mov
and
pusha
mov
push
add
sar
pop
gs
adc
pop
pop
push
fimul
pop
add
push
ins
pop
push
popa
adc
retf
ins
leave
jge
cmps
sti
jmp
xchg
mov
mov
dec
imul
rcr
push
ror
test
rcl
imul
adc
push
int3
loopne
into
adc
push
mul
inc
cwde
das
adc
jae
sbb
data16
scas
les
nop
pop
push
int3
push
add
std
popa
popa
jno
xchg
fdivr
xchg
jl
scas
icebp
and
pop
pop
mov
and
push
enter
jp
or
mov
add
fs
lods
fst
cmp
inc
outs
js
sbb
mov
daa
add
jne
cdq
xlat
dec
inc
jnp
popf
mov
sbb
dec
push
ss
test
pop
mov
inc
cmps
test
rcl
pop
lods
dec
mov
xor
cmps
hlt
arpl
cmp
call
dec
mov
xor
add
jo
int
sub
(bad)
sub
adc
adc
sub
xor
and
dec
popf
dec
lds
sub
mov
sbb
dec
xchg
dec
add
iret
push
push
ss
mov
outs
cmp
jns
fwait
loopne
or
dec
push
cmp
xor
cld
sar
cmp
ds
add
fs
mov
or
lods
pop
cmp
dec
sub
pop
add
push
push
test
pop
cdq
in
sar
adc
cmp
pushf
mov
ds
ins
data16
lods
lahf
movs
cmp
loopne
(bad)
mov
inc
ret
push
mov
sbb
mov
dec
and
or
and
movs
ss
popa
pop
ja
cs
ficom
shl
call
inc
repnz
shl
lahf
mov
or
sbb
mov
pop
movs
imul
or
fcom
jg
arpl
dec
jl
lods
mov
(bad)
pop
pop
jle
and
cmp
inc
dec
sub
mov
pop
call
xor
sti
cli
mov
jmp
add
pop
mov
rol
sbb
dec
xchg
jg
or
pop
inc
js
das
mov
fiadd
or
pop
pop
xchg
xchg
adc
pop
movs
pushf
cmp
or
push
sar
cmc
sbb
sbb
mov
popfw
push
imul
sbb
pop
(bad)
std
adc
test
movs
(bad)
pop
fwait
arpl
push
jae
pop
fwait
cld
sbb
pop
jle
(bad)
lock
sub
fwait
in
pushf
sbb
mov
shl
xchg
or
pop
test
es
mov
pop
pop
xchg
gs
loopne
in
xor
add
sbb
(bad)
pop
or
scas
cmp
mov
mov
jmp
loope
sub
xor
jmp
inc
pop
adc
(bad)
out
sbb
in
pop
inc
jno
fwait
push
xchg
out
push
mov
dec
jmp
int3
mov
loop
das
iret
dec
sahf
enter
adc
sub
iret
cdq
mov
sbb
pop
(bad)
cdq
xlat
mov
std
adc
mov
xchg
mov
jg
std
rol
test
xchg
out
ret
pop
xchg
ja
adc
mov
leave
scas
lds
add
mov
ret
mov
jmp
aam
mov
pop
scas
pop
mov
xor
add
shr
ror
int
sbb
mov
push
mov
jmp
mov
cmp
(bad)
not
jl
inc
mov
mov
bnd
ja
pop
and
xchg
push
into
jmp
into
lahf
aad
add
push
jns
popw
enter
cwde
pop
pusha
lds
adc
jns
cs
mov
xchg
pop
lea
push
das
sahf
xor
jo
cmp
pop
or
adc
call
cmps
or
sbb
jle
scas
sub
mov
fidivr
mov
dec
jbe
fsub
fild
lahf
pop
out
in
lds
sub
cmp
push
mov
fs
sbb
pushf
(bad)
push
adc
arpl
test
mov
mov
mov
mov
rcr
adc
mov
mov
pcmpeqb
shl
add
cmp
out
xor
aas
inc
inc
cmp
xchg
inc
dec
aad
adc
fidivr
xchg
dec
sbb
data16
jp
xchg
fistp
dec
inc
mov
mov
mov
and
mov
out
gs
jns
mov
lahf
outs
jae
jo
xlat
pop
ss
test
push
mov
cmp
sbb
mov
mov
movs
or
cmp
out
rol
mov
lods
and
retf
sbb
pop
stos
loope
push
mov
loopne
in
adc
pop
aaa
hlt
stc
std
movs
adc
xchg
jl
loop
(bad)
or
cmp
cmp
sub
rcr
add
cwde
aam
sub
pop
xor
mov
mov
pop
sbb
not
pop
and
mov
push
or
gs
sbb
mov
mov
loop
repz
cmps
neg
iret
xlat
xor
adc
icebp
jns
in
xchg
jl
sub
lds
lods
or
pop
add
pop
dec
lahf
bnd
mov
scas
mov
ret
scas
rcl
mov
(bad)
ds
cmp
and
clc
mov
das
fneni(8087
imul
fstp
jno
repnz
dec
out
lods
jnp
cmps
cdq
push
inc
xchg
retf
xlat
mov
ds
xchg
jns
or
lock
es
jns
stos
daa
jne
in
mov
stc
pop
jae
int3
sub
gs
in
shr
sahf
retf
std
outs
dec
xor
sbb
mov
repnz
not
leave
fisttp
pop
fcomp
jo
ret
sbb
in
ins
sbb
das
dec
xor
lahf
lahf
popf
das
nop
or
or
pop
jp
or
sub
fdivr
ins
jge
in
fst
jae
inc
aaa
clc
or
xchg
xchg
mov
inc
ret
sbb
or
sbb
adc
cli
call
adc
xchg
test
inc
call
dec
push
push
repz
lds
dec
mov
mov
xor
movs
test
push
inc
xchg
hlt
add
sbb
pop
xor
pop
aas
push
sbb
das
enter
ss
cdq
jne
imul
dec
enter
and
ja
jmp
adc
dec
fiadd
adc
or
cwde
pop
cld
leave
push
push
push
push
leave
jle
imul
xor
or
push
test
pop
inc
and
adc
pushf
sbb
fimul
std
ins
dec
or
fwait
in
or
jae
les
mov
test
daa
int
xor
or
inc
leave
stos
xchg
(bad)
div
retf
xchg
pushf
and
jne
dec
inc
xchg
adc
cmp
pop
(bad)
push
(bad)
rcr
pop
or
scas
cli
jbe
pop
add
pop
leave
hlt
xor
sub
sub
cs
sahf
jl
addr16
mov
fs
mov
adc
loopne
in
sbb
and
push
mov
xor
mov
push
push
jns
in
call
lock
add
movs
mov
cwde
rol
push
push
lods
adc
jne
adc
inc
int3
push
or
(bad)
push
cs
pop
test
and
cs
aas
lods
mov
cmps
mov
adc
fs
pop
xchg
es
shl
xchg
xchg
lods
and
cli
pop
stos
pop
mov
sub
adc
call
or
lods
pop
repnz
fwait
ret
adc
or
in
mov
call
cmc
pop
cmc
leave
push
mov
js
lea
iret
and
std
pushf
inc
xor
cs
and
mov
mov
push
mov
bound
cs
(bad)
(bad)
mov
mov
sahf
mov
or
test
shl
stos
dec
ret
in
jb
inc
xchg
int3
jae
imul
cmp
rcr
out
or
pop
imul
repnz
jge
js
xlat
repz
ja
addr16
mov
loopne
movs
mov
fild
test
ds
call
rol
test
call
xchg
push
lods
pop
jg
mov
lahf
or
cmc
addr16
sar
jae
mov
out
pusha
loope
xor
rcl
adc
fcom
ret
push
js
int3
mov
sub
das
xchg
in
jbe
movs
cmps
cli
inc
mov
adc
ins
pop
jg
pop
sub
call
mov
xchg
push
lods
es
mov
adc
or
adc
out
test
sub
push
scas
dec
and
sub
aaa
imul
scas
fdiv
data16
daa
nop
pop
sbb
bound
test
mov
dec
mov
shl
or
push
test
mov
inc
push
es
sub
jl
daa
call
pop
mov
iret
(bad)
sar
inc
shr
loope
xchg
out
jl
dec
cmps
pop
cmp
jecxz
mov
es
jl
dec
cld
or
dec
mov
pop
scas
pusha
jmp
add
jne
and
or
pop
and
sbb
jb
test
add
cmp
nop
mov
icebp
cmps
int
scas
adc
arpl
dec
xor
sub
out
cmp
mov
imul
popf
add
(bad)
adc
scas
loop
inc
add
in
adc
pop
push
dec
or
in
xchg
fidiv
in
add
pop
loopne
fsubr
xchg
mov
dec
test
stos
scas
pop
neg
and
(bad)
mov
movs
addr16
mov
sahf
pop
idiv
je
out
mov
loope
pop
(bad)
(bad)
outs
mov
jbe
clc
dec
pop
scas
mov
repnz
lahf
mov
cmps
cmc
call
mul
and
shl
vzeroall
test
and
add
std
xchg
add
mov
ret
push
push
out
xor
cwde
and
lods
imul
push
lods
(bad)
outs
and
test
adc
sbb
cmp
rol
cmp
jle
dec
mov
jecxz
push
hlt
cmc
std
jmp
pop
adc
idiv
push
repz
movs
cmp
out
jecxz
ret
outs
or
mov
mov
(bad)
lahf
push
and
scas
add
sbb
add
mov
fadd
inc
add
pop
das
add
or
xor
out
add
dec
cmp
es
in
mov
and
mov
jno
fbld
ins
or
or
not
movs
popa
mov
ret
sub
jl
out
loop
cwde
outs
mov
or
sar
sar
popa
fadd
xchg
test
sar
aas
pop
and
mov
pop
adc
dec
pop
sub
ds
pop
(bad)
jno
jecxz
mov
sbb
adc
adc
pop
pop
and
xchg
stos
pop
jae
xor
outs
push
rcr
mov
cmp
mul
sub
loopne
mov
rcl
int3
jnp
xchg
lock
inc
xchg
and
xchg
ret
iret
mov
sti
(bad)
nop
bnd
jbe
lds
cmp
add
into
fld
icebp
pusha
and
sbb
js
sub
cmc
lock
adc
jle
sbb
je
pop
mov
pop
pushf
sub
cld
(bad)
xor
sahf
repnz
sub
or
aam
lahf
push
pop
(bad)
sti
inc
sub
js
inc
mov
mov
fisub
sbb
stos
sti
add
add
fiadd
ror
call
sub
sub
inc
outs
loopne
mov
(bad)
jle
mov
mov
and
add
mov
jo
fidivr
mov
inc
daa
cmc
out
test
shr
fldcw
adc
xor
(bad)
mov
and
add
mov
cmc
inc
mov
fwait
ins
aad
push
popa
push
cmp
mov
sub
hlt
stos
outs
in
dec
jge
cmps
jmp
ins
mov
jae
das
jmp
push
scas
test
xor
addr16
sbb
bound
nop
dec
out
(bad)
outs
fisub
loopne
mov
gs
mov
dec
sahf
jns
push
je
sbb
cmps
pop
dec
sahf
pop
pop
cld
xor
(bad)
imul
cmc
div
add
mov
ss
stos
repz
cs
popf
push
mov
sahf
imul
imul
cmps
arpl
mov
pop
cmp
push
push
shr
adc
sub
jecxz
or
inc
xchg
inc
dec
jmp
xchg
aad
sub
fistp
sbb
(bad)
inc
test
push
je
mov
mov
jno
jecxz
xchg
lds
mov
cmp
inc
pushf
jecxz
mov
test
inc
mov
loop
(bad)
in
cmp
mov
repz
jecxz
ror
je
rcr
aaa
stos
pop
icebp
jl
rol
test
xlat
xlat
mov
sub
into
fsub
lods
clc
mov
add
cmp
rcr
scas
sub
xchg
cwde
xor
jl
inc
ret
jle
sub
jo
fidiv
mov
or
mov
retf
dec
dec
out
lds
pop
in
sbb
cmp
ror
ss
jmp
jbe
push
fisubr
lods
jg
cmps
call
ins
loopne
pop
jmp
stos
dec
xor
push
add
lods
sbb
movs
outs
jecxz
push
cld
lahf
jp
dec
push
adc
lahf
loop
test
sbb
pop
mov
mov
mov
ror
shl
fldenv
xchg
fdiv
xchg
xlat
mov
or
push
mov
mov
push
pop
push
rcl
sahf
(bad)
in
push
daa
scas
ins
jge
mov
sbb
stos
or
xchg
out
jbe
cmp
cmps
dec
fld
aaa
stos
mov
pop
jge
adc
fist
dec
sbb
(bad)
mov
fidivr
aam
outs
out
cld
lock
xchg
ins
push
cmp
imul
ss
lods
jnp
out
out
jge
inc
les
out
jle
aad
cmc
jno
mov
and
sub
int
daa
sti
inc
sbb
movs
enter
xchg
jp
xor
cld
imul
cs
jnp
pop
ja
loop
stos
scas
mov
xor
clc
cmps
aad
dec
popf
into
pop
jo
xchg
sti
shl
pop
int
dec
stos
and
mov
ret
out
ja
hlt
ins
(bad)
cmp
stc
cmp
jg
sar
dec
fcomip
lds
xchg
retf
ret
shl
(bad)
xchg
inc
inc
test
mov
in
mov
(bad)
movs
jns
mov
mov
es
ins
adc
jae
pop
mov
cld
sub
add
xlat
mov
xor
add
call
inc
call
add
xchg
jmp
lahf
mov
or
pop
and
mov
inc
xchg
adc
jmp
mov
mov
mov
addr16
jae
lahf
repnz
int3
frstor
add
test
xchg
push
jo
sub
lgs
ror
cmp
dec
mov
shl
popa
ja
aad
pop
mov
daa
or
push
pop
xchg
fnstsw
fsubr
arpl
adc
or
cmp
(bad)
out
aam
mov
(bad)
pop
dec
push
loop
std
cwde
fwait
sub
ficomp
pop
xlat
dec
sahf
test
dec
mov
hlt
xor
ss
xchg
xchg
jne
pusha
inc
xor
cmps
xchg
mov
mov
inc
and
pusha
mov
adc
stc
and
fist
push
add
mov
xchg
mov
(bad)
shr
call
les
(bad)
mov
ins
movs
outs
fcmovnu
movs
lods
push
imul
dec
lea
mov
loop
out
sbb
xor
cmp
fs
pop
jg
ja
inc
sub
movs
pop
cmp
(bad)
outs
nop
cmp
mov
ss
in
std
mov
sub
pop
outs
in
ja
dec
loope
test
inc
adc
mov
xchg
ins
fadd
in
cld
(bad)
cmp
shl
pop
fisubr
rcr
add
sahf
cmp
and
imul
mov
cmp
pop
xchg
jl
mov
pop
pop
les
adc
mov
cmp
fild
adc
mov
dec
mov
mov
push
fbld
js
mov
jmp
cdq
inc
mov
and
dec
and
inc
mov
jae
mov
(bad)
lahf
pop
and
mov
sbb
in
push
out
mov
shl
nop
neg
mov
adc
inc
stos
jmp
jmp
pop
scas
adc
aad
movs
inc
in
mov
inc
fs
xchg
push
(bad)
popw
imul
enter
xchg
aam
iret
retf
lds
add
outs
movs
jge
pop
test
pop
pop
sbb
mov
sub
mov
mov
pop
add
or
adc
mov
push
sti
inc
fcmovb
pop
call
pop
sub
ss
xchg
out
adc
int
jae
sbb
cmp
sbb
je
jmp
js
cwde
enter
pop
aam
jno
adc
lods
clc
push
add
fld
xor
add
repnz
push
into
stos
sub
(bad)
push
test
and
mov
mov
std
test
sub
gs
pop
pop
push
aad
mov
jp
or
sbb
js
cli
call
inc
movs
addr16
pop
sub
popf
lods
test
dec
das
xchg
sbb
sbb
movs
mov
jl
sbb
test
setl
xor
xchg
or
xchg
leave
je
into
sub
and
lods
cmp
xlat
push
jmp
jno
ret
push
mov
cmp
jnp
sub
adc
(bad)
cmc
imul
and
into
fucomi
call
jbe
sbb
inc
enter
cli
jmp
xchg
pop
cmps
jno
sbb
ret
add
dec
add
mov
mov
mov
sub
adc
xchg
and
fstp
cld
mov
std
jo
jae
(bad)
jg
cmp
mov
xor
(bad)
dec
push
mov
cmc
jnp
jl
out
fiadd
fbld
rol
sbb
adc
ja
jl
punpcklwd
imul
in
add
imul
fadd
jge
mov
shl
(bad)
clc
jns
or
mov
not
push
xchg
repnz
into
clc
push
call
sbb
or
cwde
aad
pop
outs
aaa
and
mov
movs
inc
repnz
mov
jne
rcr
mov
mov
cmc
test
mov
sub
cmp
aad
std
dec
movs
xchg
pop
mov
push
ret
pop
add
or
popf
xchg
jnp
in
dec
fs
fcmovu
sbb
enter
jnp
popa
in
dec
sub
cmp
xor
sub
in
inc
sub
push
cmp
push
sub
sbb
jmp
mov
jns
sbb
mov
ds
mov
mul
cmp
mov
mov
jo
mov
out
test
sbb
jns
dec
push
xor
fild
and
mov
rcl
cwde
dec
mov
adc
fistp
retf
cdq
stos
setg
push
jnp
sub
retf
push
inc
ds
shld
fistp
scas
xor
push
and
inc
scas
in
sar
adc
fiadd
adc
jl
rcr
stos
mov
jge
xchg
ret
or
xchg
sbb
dec
loope
(bad)
mov
inc
xlat
daa
retf
mov
sbb
xor
imul
leave
test
shr
pop
cmp
retf
(bad)
push
jp
cmps
jl
sub
xchg
aad
retf
jecxz
lods
push
cwde
pop
iret
jg
movs
sahf
(bad)
adc
push
imul
mov
push
inc
mov
stc
mov
mov
xor
fs
cmc
movs
cmp
mov
cmp
mov
pop
jl
ficom
mov
int
mov
jge
fnstenv
imul
loope
(bad)
ja
sbb
sub
jno
jno
mov
and
adc
push
mov
icebp
arpl
js
sbb
jl
movs
movs
push
lahf
fsub
loopne
push
(bad)
cmp
std
movs
test
and
xchg
lods
mov
xor
push
test
xor
dec
shr
mov
jl
or
pop
add
or
ds
iret
jb
rep
mov
adc
daa
push
pop
dec
and
cmp
xchg
jle
push
and
test
dec
fild
jle
out
(bad)
cdq
adc
xchg
adc
and
xchg
push
xor
cmp
cmp
ja
xchg
ins
or
jl
iret
retf
lock
push
retf
je
es
jg
pop
jbe
push
fdivr
lods
movs
mov
dec
les
ret
and
dec
pop
sub
test
rcl
jmp
and
pushf
inc
add
sub
dec
test
push
and
daa
xor
push
mov
test
(bad)
dec
adc
inc
in
add
bound
sub
stc
xchg
(bad)
inc
xchg
lock
in
leave
sti
lock
fnstcw
sbb
dec
(bad)
mov
stc
add
cmp
push
fs
or
mov
pop
jae
dec
out
push
out
lods
sbb
shr
ret
lock
cmp
dec
test
jne
push
mov
mov
call
pop
sub
test
add
sbb
sbb
and
mov
xchg
sbb
ss
xchg
idiv
dec
or
popf
mov
mov
sbb
not
hlt
fbstp
jo
lds
arpl
movs
pop
mov
and
sar
sbb
push
lds
xchg
movs
jnp
xor
jb
jge
rol
mov
push
mov
movs
mov
cmp
xor
cdq
jecxz
xor
fisubr
xchg
lock
lds
mov
xor
mov
(bad)
sbb
mov
or
rcr
jl
push
fidivr
mov
pop
mov
(bad)
(bad)
xchg
jl
or
out
call
ja
cmp
xor
mov
xchg
(bad)
ror
pop
sub
clc
ror
jns
push
xchg
repnz
and
push
mov
ins
in
push
repnz
leave
cmp
ds
mov
jae
sahf
mov
and
dec
movs
mov
sbb
pop
push
or
xlat
xchg
rcr
fwait
add
xor
inc
dec
adc
and
xor
in
cmps
cmp
out
scas
mov
lds
icebp
loope
mov
push
add
rol
sbb
jge
cmps
add
xor
adc
(bad)
push
jae
sub
dec
sbb
add
xchg
lahf
cmp
add
ins
dec
aas
mov
adc
pop
or
xor
(bad)
lods
pop
out
mov
adc
repnz
fwait
out
mov
xchg
and
imul
add
push
jno
inc
adc
inc
sbb
mov
jbe
int
jb
jecxz
cwde
mov
jae
stc
sar
shl
lock
stc
xor
(bad)
jnp
lock
lds
loope
mov
jne
icebp
sub
imul
rol
lea
add
pop
ror
cmps
fadd
icebp
jb
add
adc
mov
mov
push
imul
inc
xor
push
out
scas
push
(bad)
fst
fisttp
xchg
xor
icebp
rcr
out
in
sbb
and
xchg
imul
cmp
lods
je
lock
mov
jmp
jge
icebp
jmp
lahf
idiv
mov
(bad)
mov
xor
sub
pop
sbb
popa
jnp
rol
add
xchg
movs
scas
mov
push
push
pop
lds
ror
dec
jb
pop
mov
test
fcom
mov
push
pop
xor
mov
les
mov
scas
sub
and
arpl
xor
outs
push
stc
jbe
dec
scas
and
dec
jle
adc
clc
mov
jns
aaa
and
jmp
jge
adc
scas
fidivr
addr16
aaa
aad
mov
inc
inc
icebp
jno
cmps
outs
movs
xchg
enter
xor
adc
or
xor
cmps
pop
xor
fiadd
scas
dec
mov
jns
or
mov
pop
sbb
test
js
xchg
lods
push
dec
mov
adc
js
sbb
int3
pop
inc
jb
sub
in
jmp
pop
push
or
add
cmps
cmp
xor
xlat
pop
fadd
and
sub
fs
ins
repnz
(bad)
mov
scas
movs
add
dec
rcl
icebp
pop
or
mov
out
or
mov
push
xchg
sub
ret
mov
mov
jp
lea
jmp
jmp
pop
(bad)
add
data16
icebp
aaa
arpl
lods
adc
push
je
jne
rcl
retf
popa
mov
cmps
pop
sub
xchg
jb
xor
(bad)
test
sahf
pusha
ja
movs
pushf
cmp
jmp
test
ret
popf
in
cs
(bad)
lock
hlt
xor
add
push
test
or
push
call
arpl
inc
adc
popa
jl
dec
pop
js
jno
jns
or
push
add
add
cmc
or
mov
fadd
adc
jg
leave
adc
sar
bound
cmp
mov
retf
mov
in
rcl
mov
or
loope
cld
dec
push
pop
inc
lahf
mov
fs
test
inc
jp
shl
jo
lock
enter
cmc
jecxz
mov
adc
add
xchg
out
ins
sbb
(bad)
out
in
dec
or
xor
sub
popf
stc
(bad)
iret
out
or
cs
cld
xchg
movs
push
mov
dec
dec
call
sbb
cmp
in
jo
sbb
ss
mov
ret
outs
movs
int3
mov
test
loop
lar
test
mov
jl
pop
fsub
lods
leave
mov
push
js
cmp
dec
retf
push
(bad)
ja
dec
es
loop
out
cmp
sub
lea
mov
(bad)
xchg
push
retf
hlt
push
scas
or
xchg
sahf
and
cmp
pop
ret
bound
sar
sub
shr
clc
sar
fsub
cld
or
lds
push
and
push
jmp
(bad)
xor
or
sbb
call
mov
inc
push
pop
jo
sub
add
xchg
adc
je
xchg
pop
sub
inc
mov
(bad)
and
add
pop
dec
add
inc
loope
ret
xor
xchg
ds
mov
sub
inc
sbb
pop
loope
or
daa
retf
pop
pop
fcmovbe
mov
retf
mov
retf
and
pop
and
fsub
fst
sbb
pop
aad
cmp
cmp
dec
mov
movs
sbb
push
add
xchg
xor
js
jns
pushf
jmp
scas
aad
cmp
push
sbb
rol
mov
cmp
ds
adc
mov
add
fcom
lock
xlat
inc
cwde
inc
leave
push
sbb
dec
inc
adc
les
pop
jo
cmp
push
in
sbb
cwde
or
in
enter
sahf
sub
xchg
adc
les
popf
cwde
(bad)
retf
cld
xor
aam
mov
pop
sbb
dec
shl
mov
xor
push
or
rol
adc
(bad)
mov
dec
pop
jge
xor
popf
enter
dec
push
test
repnz
mov
aas
cmp
mov
outs
xor
jbe
cmp
dec
mov
xchg
pop
sbb
clc
fwait
movs
pop
jmp
adc
cmp
mov
mov
loopne
add
add
pop
xchg
cmc
into
pop
adc
xor
cmps
inc
sub
push
and
loope
mov
lea
mov
add
sbb
or
jae
fisub
dec
mov
inc
push
ja
adc
pop
sub
push
ds
add
push
jo
int3
mov
xor
lock
and
call
mov
jecxz
out
loop
js
pop
pop
ret
sbb
cwde
lods
cmp
dec
xor
dec
inc
icebp
jl
jle
jmp
push
dec
fistp
xchg
fdiv
push
xor
push
xchg
nop
push
xchg
pusha
inc
iret
(bad)
xchg
or
mov
and
lods
xor
sub
add
test
fldenv
out
pop
fs
adc
pop
aad
and
fmul
mov
pop
inc
push
aas
scas
jbe
arpl
bound
pop
xor
xchg
xchg
pop
cmps
xchg
in
or
shl
fnstsw
mov
mov
push
cmp
sub
sbb
hlt
scas
inc
mov
popa
xor
pop
sbb
sub
stc
pop
push
cmp
fstp
push
imul
div
adc
icebp
jmp
jmp
stc
push
pop
fimul
fbstp
int3
cwde
or
fdiv
pop
lock
or
gs
call
cmp
(bad)
mov
arpl
sbb
pop
push
push
push
ja
sub
imul
add
mov
pop
(bad)
cdq
shl
jmp
xor
cdq
bound
jmp
call
or
pop
shl
add
mov
mul
add
or
xchg
mov
mov
jno
popf
cdq
sbb
xor
xchg
push
jns
adc
std
cmp
push
pop
ret
bswap
mov
and
adc
mov
mov
popa
adc
sahf
xchg
fsubrp
cmp
hlt
inc
scas
fisub
sub
out
mov
adc
movs
nop
cmp
stos
shr
add
test
or
pop
fnstenv
mov
cmp
pop
add
(bad)
jne
les
cmp
(bad)
push
push
add
outs
scas
mov
cmps
inc
fisttp
xchg
leave
xlat
adc
pop
xchg
inc
mov
call
jmp
jb
repnz
sbb
sahf
enter
dec
cld
mov
push
repz
pop
sbb
mov
dec
jecxz
hlt
fld
scas
(bad)
dec
fist
stos
fadd
cmp
neg
or
cmovo
loopne
shl
jl
pop
call
mov
pop
cmc
rcl
xor
push
sbb
sar
sub
cli
pop
sub
sbb
sub
and
adc
les
push
add
bound
(bad)
and
add
or
jnp
xor
fsubr
or
push
adc
loop
les
std
outs
xchg
aam
mov
sahf
enter
pop
cmps
xchg
fisttp
jg
repz
jne
loop
pop
pop
add
cmp
lock
leave
cli
cmp
xchg
aad
push
add
jo
mov
je
jbe
jl
into
cld
test
sub
or
adc
outs
xchg
sub
mov
mov
out
add
inc
imul
aam
ds
in
dec
add
fwait
stos
lods
or
xchg
xchg
das
ss
call
pop
inc
add
cmps
bound
sbb
lods
sbb
cs
lock
push
iret
test
adc
call
data16
sub
dec
xchg
sub
jp
or
adc
sbb
pushf
mov
or
(bad)
xchg
movs
sbb
pop
inc
xchg
movs
ret
sbb
sub
aaa
jecxz
data16
scas
repz
cmp
pop
outs
rol
fwait
inc
sbb
xchg
jae
push
aad
(bad)
popa
mov
ficom
je
cdq
in
test
mov
inc
repz
or
jno
test
lock
add
movs
sbb
dec
mov
xor
jp
bound
cmp
leave
inc
mov
dec
pop
pushf
jp
loope
pop
lahf
cmc
rcl
lds
fiadd
xchg
stc
add
or
pop
sbb
mov
mov
mov
shl
mov
mov
adc
push
in
xor
frndint
xchg
add
mov
lock
jb
mov
cmp
pusha
ins
pop
jo
lock
add
sti
jo
ret
mov
and
inc
jae
enter
imul
mov
mov
cwde
xor
pop
xchg
dec
jmp
(bad)
mov
je
cmp
dec
sbb
and
dec
inc
rcr
mov
aad
loopne
sub
sbb
fnstenv
add
dec
scas
xor
push
jmp
(bad)
mov
outs
fcomp
adc
pop
add
fild
xor
fcomip
adc
jb
aas
pop
adc
pop
or
or
mov
ret
sub
movs
cmc
ss
scas
adc
pop
les
cmp
imul
in
mov
mov
jle
call
mov
fdiv
sbb
adc
ror
ret
scas
dec
aam
je
shl
inc
jp
fcmovnb
or
mov
mov
add
cmp
and
sub
clc
int3
repnz
push
inc
mov
inc
cmps
push
or
push
retf
adc
sub
pop
stos
lock
call
inc
lahf
shl
adc
or
push
mov
xchg
cmp
pop
sbb
xchg
js
mov
movs
xchg
in
int3
sahf
push
pop
jl
xor
test
jecxz
mov
mov
adc
xchg
in
sar
xor
jecxz
xchg
in
loope
jge
cmps
into
das
stos
lods
jl
test
mov
aaa
sti
fidivr
mov
sbb
imul
xor
mov
inc
mov
outs
xchg
stos
xor
fsubr
xchg
(bad)
out
xor
push
stc
shl
cld
mov
stos
inc
sti
pop
into
cmp
sub
dec
mov
test
mov
fst
pop
mov
imul
jg
or
scas
(bad)
(bad)
jnp
mov
lahf
or
xor
call
pop
xchg
sbb
int3
stc
jae
mov
int
pushf
push
das
int3
lahf
ja
ret
stos
(bad)
fwait
int
in
jns
jo
cmp
mov
(bad)
mov
std
stos
addr16
js
push
dec
outs
xchg
cli
jns
loope
leave
pop
cmp
pop
mov
out
in
shl
pop
mov
pusha
repnz
jns
movs
shl
mov
outs
ret
(bad)
mov
(bad)
mov
fidiv
xor
xor
nop
mov
inc
in
or
pop
jecxz
mov
test
repz
mov
inc
pop
(bad)
dec
scas
in
test
dec
xchg
mov
push
popf
or
cmps
shr
(bad)
in
(bad)
repz
and
jmp
into
mov
mov
fucomi
mov
xchg
jae
or
jne
lds
loope
inc
leave
sbb
mov
or
pop
sub
xchg
mov
(bad)
imul
adc
lea
xor
ins
lahf
ret
mov
push
aam
mov
out
(bad)
rol
adc
pop
adc
sbb
add
shl
push
aas
cmps
xor
movs
je
gs
vcvtdq2ps
dec
enter
aad
sub
or
stc
das
and
xor
mov
jo
fild
xchg
aam
pop
cmc
daa
xchg
popf
iret
leave
pop
push
pop
pop
sub
inc
(bad)
xchg
int3
pushf
out
lock
sbb
pop
popa
lods
enter
in
jo
fild
xor
lock
cmps
jns
mov
pop
xchg
(bad)
leave
aam
push
push
popf
inc
pop
jns
das
mov
sub
pop
xor
mov
mov
and
rcl
or
les
or
ins
push
push
repnz
mov
jns
mov
add
mov
ret
hlt
imul
repnz
rol
call
sub
lea
fidivr
xchg
leave
das
jmp
adc
fdiv
outs
mov
and
leave
fld
fld
pop
push
xchg
and
mov
icebp
sub
stos
in
jmp
repz
push
pop
enter
mov
int
(bad)
cmp
cmp
dec
aad
sahf
call
scas
imul
fisub
and
add
pop
stc
bnd
or
sbb
rol
sub
sbb
sahf
retf
adc
dec
mov
push
pop
popf
push
ror
in
movs
popf
mov
inc
jo
dec
enter
ins
dec
mov
cmp
xor
mov
sbb
sbb
xor
or
lods
cmp
add
push
push
mov
rol
imul
movs
pop
cdq
push
mov
call
pop
add
cmps
mov
inc
or
scas
add
lahf
xchg
inc
out
(bad)
push
push
mov
lahf
icebp
push
push
mov
xor
adc
adc
out
jg
inc
jnp
or
cmps
call
jbe
xor
shl
aaa
pop
mov
mov
ss
jb
iret
(bad)
dec
ret
in
sub
cmp
loop
gs
(bad)
ret
lock
sbb
push
adc
loope
stos
into
jp
dec
(bad)
xor
ins
inc
mov
pop
jo
retf
hlt
add
push
movs
test
mov
pop
in
sub
pop
sbb
retf
int3
fmul
shr
dec
pushf
test
jno
in
clc
inc
and
clc
rcl
dec
xor
fxch
dec
cmp
out
jmp
mov
xor
and
and
mov
inc
inc
push
adc
push
lods
fdivr
sar
jmp
push
and
mov
stc
mov
push
sbb
mov
add
mov
ins
push
and
cmp
rol
stos
jmp
fldcw
outs
in
jnp
ja
ret
xchg
fbld
imul
adc
dec
inc
leave
inc
push
push
dec
and
clc
dec
pop
mov
in
mov
ret
and
ret
push
sub
dec
fdivr
int
mov
mov
retf
xchg
dec
call
scas
hlt
jmp
xchg
mov
(bad)
cmc
shl
mov
dec
push
add
ins
inc
fiadd
dec
int
lds
mov
sbb
mov
fcomp
lods
addr16
nop
push
jmp
push
sbb
jmp
xchg
dec
xor
js
mov
out
and
test
adc
ins
and
xchg
xor
pusha
cmp
stc
loopne
sub
sub
mov
jg
jp
imul
fiadd
push
add
push
pop
ds
iret
pop
(bad)
mov
push
ins
mov
int3
or
pop
setnp
mov
xchg
lock
pop
fsub
xor
sub
enter
hlt
xor
push
inc
push
inc
adc
dec
gs
cmp
aaa
dec
inc
and
in
cmp
jb
js
add
gs
ret
dec
fnsave
call
cld
sub
ins
jmp
popf
sbb
jmp
xchg
pushf
sar
stos
adc
or
dec
cmp
and
aad
mov
pop
int
int
jle
add
and
aas
and
scas
fistp
dec
gs
dec
add
stos
xor
xchg
mov
ret
ret
xor
jg
sahf
jl
xchg
mov
jae
arpl
cmp
inc
aad
ror
gs
das
cmp
icebp
jle
and
pushf
push
ret
fld
arpl
xor
ja
ss
stc
in
mov
ins
xchg
dec
(bad)
inc
pop
and
fucom
push
dec
dec
inc
nop
jo
bound
mov
sbb
sub
push
mov
aam
jle
push
jno
call
loop
push
pop
add
fnstenv
arpl
into
faddp
pop
ret
xor
pusha
mov
cwde
sbb
out
iret
cwde
jl
and
dec
mov
sub
push
out
test
out
mov
push
inc
pop
pop
push
cwde
cmc
les
loop
mov
adc
add
xchg
(bad)
(bad)
dec
lods
xchg
jp
pop
or
xchg
or
cdq
cmp
lods
stos
push
dec
add
pop
xchg
pop
inc
mov
mov
jecxz
dec
or
jo
inc
aad
sub
std
outs
test
out
cmc
and
rcl
cmp
popa
or
xchg
jecxz
cs
loopne
popa
xchg
aad
and
stos
(bad)
fs
xor
(bad)
dec
test
mov
dec
lahf
dec
lock
mov
sbb
movs
inc
sbb
imul
push
(bad)
or
push
rcl
inc
or
out
pop
or
in
sub
ret
rol
xchg
xor
xchg
mov
push
ret
ds
inc
scas
int
(bad)
stc
test
loope
call
adc
lea
sbb
cmp
pop
jo
pop
mov
add
(bad)
xchg
push
fldenv
in
(bad)
ins
jb
imul
or
push
pop
clc
add
ja
inc
mov
in
sub
cmps
cmp
in
outs
cmp
movs
(bad)
dec
mov
repnz
and
xchg
jmp
mov
aad
repz
xor
sbb
mov
xlat
mov
add
and
loopne
outs
les
jl
dec
sbb
or
push
push
adc
jns
dec
add
push
outs
enter
mov
jnp
shrd
dec
shl
movs
(bad)
out
jnp
scas
shl
imul
movs
fstp
out
mov
dec
mov
fld
ror
xchg
push
mov
jbe
das
cmps
cs
cmc
aaa
fwait
lods
int3
(bad)
scas
push
pop
cmps
or
int3
add
inc
or
rol
inc
adc
pop
mov
or
sub
mov
adc
adc
add
sub
inc
hlt
repnz
mov
popa
sbb
aas
jl
fisubr
adc
cwde
scas
sub
inc
jmp
push
shl
adc
and
scas
jb
jmp
(bad)
sti
mov
push
pusha
mov
call
mov
cdq
pop
adc
mov
add
int
in
stos
xchg
mov
mov
jo
push
xchg
lock
cmp
mov
ss
adc
push
ret
xchg
jbe
js
enter
dec
xor
ja
repnz
mov
dec
or
xor
shl
push
stos
mov
popa
repnz
xchg
icebp
daa
or
retf
add
(bad)
cs
sub
or
out
test
(bad)
xor
js
icebp
(bad)
stos
mov
lock
push
mov
sub
imul
test
sbb
addr16
or
jnp
lds
cs
jno
pusha
pop
js
dec
inc
adc
inc
mov
or
xor
and
push
sub
leave
sbb
ficom
cwde
fisttp
test
pusha
cdq
pop
es
inc
jns
push
aas
xchg
sbb
dec
(bad)
or
xchg
pop
inc
shr
dec
cmp
sbb
sub
stc
lea
xor
inc
repz
add
adc
xchg
loopne
cs
out
mov
pushf
push
movs
loopne
cmp
idiv
(bad)
std
call
adc
jo
xchg
lahf
inc
dec
fiadd
inc
add
mov
imul
jbe
push
inc
inc
movs
cmp
shl
lock
jl
and
dec
hlt
mov
push
std
into
mov
test
aas
sbb
pop
push
xlat
jg
xchg
xor
jp
clc
pop
in
(bad)
loop
outs
das
ds
out
rcl
fsub
jno
add
loop
and
mov
mov
mov
mov
mov
loop
mov
ds
popa
aas
rcl
mov
dec
pop
ror
fwait
inc
jge
pop
dec
cld
(bad)
pop
push
cmp
enter
pop
addr16
(bad)
push
pop
outs
add
jmp
nop
and
fcomp
ins
inc
rcr
fs
lahf
mov
and
call
(bad)
cmp
pop
push
sti
cmp
xchg
(bad)
jg
mov
cmp
jnp
gs
sar
jno
mov
fcomp
movhps
or
mov
dec
dec
fcmovbe
adc
xchg
xor
jbe
mov
lock
(bad)
cwde
pushf
jp
cmp
call
scas
xchg
jp
arpl
push
adc
(bad)
xor
dec
aam
icebp
movs
fwait
cmp
mov
pop
sbb
add
xchg
in
sub
cmp
in
stc
repz
add
pop
mov
dec
mov
push
stos
jle
cmp
xor
not
or
dec
and
adc
jno
jno
rol
mov
sahf
fs
inc
inc
lahf
and
inc
and
adc
(bad)
out
shl
push
adc
pop
outs
rcl
xor
jmp
sub
movs
dec
mov
popf
dec
ret
and
pop
dec
xchg
es
stos
xor
call
aaa
add
and
cld
ja
push
mov
mov
repnz
pop
mov
arpl
and
inc
das
sub
push
ins
sub
push
not
movs
js
lock
mov
xor
or
xchg
pushf
xchg
pop
mov
(bad)
sbb
sub
or
mov
push
xchg
jg
jp
inc
inc
pop
jmp
xor
ret
push
mov
lock
push
int
xor
retf
mov
ror
fwait
sbb
mov
mov
arpl
pop
jmp
push
or
xor
sbb
mov
lea
js
dec
icebp
shr
jo
movs
dec
cmps
ss
mov
xchg
es
aad
adc
pop
add
xchg
pop
sbb
or
int3
push
test
imul
out
fbstp
loopne
rol
sbb
out
mov
inc
jbe
sbb
or
in
fsub
retf
cmp
repnz
jne
stos
aam
sub
xor
and
test
rcl
rol
pop
aas
repnz
push
lahf
jbe
test
das
dec
arpl
test
push
mov
repz
jle
imul
mov
inc
in
push
daa
jae
inc
mov
sbb
jo
test
lahf
xor
std
jno
cmc
jecxz
mov
cmp
sti
ins
add
or
add
mov
pop
(bad)
or
dec
pop
jnp
into
adc
mov
mov
imul
imul
mov
int3
inc
dec
and
loopne
lock
push
xor
imul
push
jl
das
aad
adc
or
adc
mov
pop
mov
mov
or
pop
(bad)
rol
int3
shl
cmp
push
sbb
repz
hlt
outs
adc
mov
xchg
sbb
je
inc
test
sub
push
test
rcl
xchg
add
or
xchg
pusha
dec
loope
xor
mov
loopne
les
fs
test
ins
pop
or
cmps
sar
jge
mov
(bad)
into
into
rcr
outs
jae
push
ds
jno
pop
push
mov
push
lahf
jmp
imul
dec
sbb
push
je
sub
xchg
inc
mov
add
cld
sbb
mov
xchg
jmp
or
sbb
adc
dec
sbb
adc
repnz
xchg
inc
jne
push
jp
and
ds
shl
or
sbb
adc
aaa
cmp
stc
sub
pop
pop
fwait
mov
cmp
fwait
mov
out
xor
rol
in
aam
xchg
jecxz
repz
dec
dec
mov
push
rol
pop
je
inc
mov
cmp
clc
call
inc
sbb
outs
cld
nop
scas
dec
sub
iret
sub
call
enter
test
pop
pop
jle
push
ss
and
push
fwait
sbb
xchg
push
hlt
inc
(bad)
push
push
out
inc
scas
adc
push
test
mov
out
shl
shr
in
mov
xchg
out
stos
sahf
aaa
xchg
sbb
add
mov
in
or
and
jae
fcomp
adc
xchg
icebp
pop
dec
imul
mov
inc
clc
sbb
jne
pop
mov
inc
in
mov
popf
push
jmp
mov
xor
pop
pop
mov
cmp
mov
push
mov
daa
xchg
fs
retf
add
aas
pushf
lods
xchg
mov
nop
sbb
outs
int3
data16
ja
push
mov
out
loop
enter
dec
push
sub
aas
sbb
jmp
jae
movs
sub
or
int3
cmp
shl
pop
inc
pushf
cmp
pop
dec
bound
xchg
or
xchg
imul
fsub
push
repz
(bad)
popa
mov
(bad)
dec
push
mov
ins
jle
or
sub
(bad)
xchg
sbb
out
aaa
inc
adc
ret
add
cmp
adc
(bad)
pop
mov
push
sbb
es
test
cmp
or
dec
jae
adc
loopne
and
pushf
inc
fld
call
rol
pop
mov
aas
les
dec
pop
les
mov
js
adc
cmc
iret
dec
(bad)
test
cmc
adc
mov
jle
retf
test
iret
xchg
jne
and
xchg
sbb
cs
xchg
push
ss
ins
or
mov
sub
mov
mov
jmp
cmps
stc
sbb
fistp
mov
mov
ret
iret
cmp
(bad)
sub
ror
test
dec
sbb
add
ss
mov
push
aaa
push
sbb
lea
mov
mov
das
fwait
loope
ror
pop
lock
enter
push
and
shl
adc
xchg
adc
int3
mov
movs
clc
not
ficom
inc
loopne
pop
push
fisubr
jmp
movs
and
sub
xor
fcmovu
shl
sub
pop
imul
scas
push
sbb
lods
(bad)
ins
ds
jbe
dec
jg
loope
sub
add
call
movs
cmp
outs
add
adc
or
clc
retf
push
inc
popa
or
scas
and
jmp
sar
or
and
call
mov
test
int3
jle
inc
xchg
hlt
inc
pop
test
ret
xchg
jecxz
jns
inc
pop
test
nop
cld
mov
call
pop
retf
mov
sahf
arpl
xchg
ja
mov
stos
fs
push
cmp
dec
cmp
push
rol
(bad)
in
push
sqrtps
shl
or
xor
xor
add
fldenv
shl
sub
gs
mov
mov
les
xchg
sub
fisttp
cli
out
aad
fs
jecxz
push
shl
repz
fs
sahf
pop
and
cmps
movs
in
out
out
(bad)
bound
scas
push
pop
enter
mov
mov
sbb
and
imul
rcr
or
inc
mov
mov
mov
fadd
js
or
imul
ror
or
or
push
xchg
mov
stos
push
lahf
aas
sti
jb
xor
pusha
mov
cmp
jae
int3
sub
add
cmps
mov
es
adc
mov
sub
(bad)
(bad)
add
pop
sqrtps
sbb
and
and
pop
push
add
(bad)
pop
inc
movs
mov
pusha
test
dec
mov
mov
retf
fisub
pop
xchg
adc
nop
sahf
add
cmc
rcr
sar
sub
xor
into
sbb
loopne
pop
sar
jne
pop
cmp
ins
cmps
js
mov
ins
sub
mov
sbb
adc
int
hlt
sub
cmp
loopne
addr16
in
mov
cmp
pop
std
xor
out
dec
or
mov
stos
arpl
mov
clc
fisub
ret
cwde
imul
ins
mov
pusha
lea
in
and
add
mov
mov
(bad)
pop
ins
cld
into
xor
xchg
daa
push
jne
repz
xchg
add
scas
ror
popf
inc
xor
icebp
inc
gs
test
adc
mov
cmp
xchg
lods
daa
cld
push
int3
push
push
pop
jns
cmp
test
mov
mov
jae
add
xor
sub
ror
fucomi
push
ret
xor
pushf
rol
sub
mov
daa
jns
mov
sub
xor
retf
xor
int3
xchg
shl
add
test
adc
sbb
ss
jne
mov
or
and
jle
cdq
mov
xor
pmullw
out
(bad)
jae
add
sub
jge
jnp
and
xchg
mov
clc
nop
push
ror
fild
push
cmp
arpl
jo
mov
mov
xchg
jp
and
mov
adc
pushf
mov
xchg
lds
loop
mov
and
jne
popf
in
dec
inc
or
movs
retf
js
popa
dec
dec
push
push
ds
mov
(bad)
pop
enter
ss
push
sar
inc
mov
sub
xchg
mov
adc
call
out
imul
sub
sbb
jne
adc
sub
push
sbb
sbb
sahf
js
mov
pop
inc
mov
sbb
mov
imul
lea
popf
push
mov
outs
jae
or
rol
mov
pop
js
dec
sub
push
cld
ret
fwait
xchg
(bad)
sbb
pushaw
bound
cs
icebp
retf
dec
shl
mov
push
xchg
test
lea
mov
dec
mov
mov
xchg
and
outs
and
in
xchg
mov
inc
push
lds
add
out
movs
pop
add
pop
add
sbb
dec
dec
shl
sbb
mov
jb
hlt
xchg
mov
mov
rol
xchg
inc
mov
jo
mov
xchg
cmps
(bad)
jmp
pop
ret
pop
sbb
jne
xor
push
inc
jmp
xor
ja
inc
or
sbb
in
call
js
cmp
cmps
mov
mov
pop
cmp
mov
add
icebp
sub
iret
push
mov
pop
push
push
inc
add
shl
sub
das
sbb
scas
out
mov
sub
cmp
mov
mov
push
shl
inc
cmp
mov
repnz
fdivrp
pop
outs
jmp
or
leave
mov
or
inc
jmp
adc
cld
cli
aad
mov
xor
sbb
fs
(bad)
push
jecxz
sub
mov
retf
jmp
loope
in
adc
pop
lods
cmp
xlat
add
push
fst
aaa
mov
xchg
cmp
sbb
repz
adc
xchg
aas
add
push
aam
sti
cwde
sbb
cmp
into
into
idiv
push
xchg
test
gs
mov
call
(bad)
aas
neg
out
dec
fwait
scas
int3
cmps
dec
fwait
icebp
sbb
xchg
push
dec
xchg
mov
mov
jmp
cmc
jle
fnstsw
fstp
pop
jmp
mov
loop
push
push
push
fnstcw
mov
xor
imul
jp
test
dec
xchg
lea
inc
scas
div
push
push
jg
int3
xchg
push
sbb
cmp
pop
fsubr
jne
pop
repz
and
imul
btr
adc
(bad)
das
jle
sbb
aad
or
dec
shr
ss
aaa
call
and
and
cdq
test
push
inc
push
sar
rcl
ja
jp
push
or
push
sbb
or
fisub
mov
sub
add
imul
or
pop
jg
lds
out
(bad)
test
arpl
sahf
enter
fs
out
ret
dec
fwait
or
dec
out
push
sbb
aaa
pop
add
push
scas
cmp
int
push
loop
xor
dec
test
test
pop
mov
sub
js
mov
mov
fst
fwait
mov
jbe
push
mov
adc
ins
mov
cmp
sub
movs
jnp
mov
stos
ins
add
pop
push
add
adc
sub
xchg
sti
lea
icebp
cmp
mov
mov
repnz
cmc
push
add
mov
cmp
and
push
(bad)
clc
mov
adc
xchg
xchg
cs
mov
inc
in
add
(bad)
fnstcw
shl
iret
mov
sub
push
adc
test
repz
push
daa
or
rcl
mov
fdivr
pop
push
add
into
xchg
inc
aam
ins
xor
jge
add
jecxz
sub
mov
loop
push
pop
pop
mov
mov
mov
retf
popa
rcr
xchg
fistp
jmp
fidivr
shr
push
mov
sahf
sub
out
fisubr
xor
scas
rcr
fs
fwait
mov
(bad)
aas
sbb
js
cmp
imul
(bad)
inc
sub
dec
retf
test
dec
js
jmp
popf
imul
jg
xor
scas
add
out
nop
xchg
ins
aam
mov
sbb
xchg
fcomp
stc
inc
fisub
lock
pop
xor
sbb
pop
add
in
mov
call
popf
and
mov
sub
mov
push
cld
adc
js
cmp
pop
adc
or
nop
aaa
in
mov
push
imul
mov
or
xlat
loopne
inc
adc
jmp
dec
pop
or
or
xchg
enter
jnp
not
fdivp
push
in
pop
mov
xlat
pop
movs
(bad)
fwait
push
pop
xchg
ja
push
cld
test
pop
rcr
xor
outs
popa
mov
or
dec
loop
stos
movs
push
retf
ins
push
sbb
arpl
jg
lods
sub
add
sbb
mov
loopne
pop
cli
out
xor
mul
pop
push
pop
rcl
ins
dec
fcomp
and
std
mov
mov
add
add
movs
sbb
jge
out
repnz
xchg
push
cmp
cmps
pop
dec
mov
pushf
mov
popa
jmp
mov
popa
shl
xchg
cld
xchg
pop
add
psubw
mov
arpl
pop
adc
mov
les
rcr
jnp
adc
pop
xchg
dec
movs
out
mov
mov
push
loope
leave
aad
jmp
jg
mov
and
mov
lods
jnp
or
(bad)
loopne
ins
push
jecxz
lods
cmp
(bad)
pop
dec
pop
dec
jp
int
xchg
inc
pop
call
outs
repnz
cld
push
dec
out
mov
pop
jb
pop
mov
mov
xor
or
mov
fisub
xchg
loopne
jl
jb
loopne
xor
mov
mov
stos
test
scas
mov
imul
packuswb
jno
pop
adc
sbb
dec
xor
inc
fwait
ins
cmp
xchg
sub
lock
mov
sti
mov
div
ins
push
push
mov
ins
cwde
(bad)
inc
leave
sub
stos
dec
jbe
adc
ja
repz
retf
push
mov
pusha
xor
ds
pop
fiadd
dec
and
ret
xchg
xor
and
cld
inc
sub
cwde
mov
rcl
inc
add
jae
sbb
inc
fisttp
nop
clc
pop
pop
fcom
sub
xchg
sub
loop
sbb
nop
ret
out
sub
pop
movs
inc
xchg
cmps
sub
jae
inc
mov
xchg
mov
cmps
lea
(bad)
cmc
call
scas
(bad)
stos
fdiv
push
sub
mov
xor
and
jl
mov
ror
sub
cmps
out
cmps
cmp
jl
mov
rcr
fs
pop
aad
je
jbe
iret
in
ret
lea
xor
jno
cmp
(bad)
dec
in
jbe
out
fdivr
fst
xchg
dec
cs
push
pop
pop
jo
rol
leave
cmp
mov
mov
neg
stos
add
aaa
mov
jle
sbb
mov
neg
adc
fstp
cld
sahf
out
js
mov
mov
leave
iret
loop
data16
mov
cmp
iret
mov
jecxz
jge
ret
push
dec
mov
add
scas
adc
jnp
shl
lahf
aam
test
inc
ret
inc
jae
into
push
fcom
addr16
imul
ss
rcl
xor
cmps
lahf
sar
fistp
mov
mov
loope
ss
mov
mov
stos
lea
sbb
(bad)
inc
jmp
sbb
icebp
mov
adc
mov
push
gs
pop
xchg
std
cwde
mov
jbe
and
sub
mov
fld
or
inc
sub
outs
dec
test
into
xchg
dec
or
or
mov
enter
in
inc
pop
retf
fld
inc
fucomip
inc
in
das
clc
sub
add
inc
push
cmp
push
sub
inc
sub
or
out
imul
dec
mov
push
dec
arpl
mov
sbb
pavgw
out
pop
xchg
cmp
push
stc
lds
mov
lea
jecxz
mov
jbe
pop
mov
(bad)
cmp
(bad)
sbb
leave
cdq
push
iret
cwde
jbe
mov
jnp
(bad)
cld
mov
xchg
data16
movq
inc
scas
cli
imul
xchg
push
sub
jnp
cld
call
(bad)
ss
inc
data16
mov
dec
daa
lahf
ja
jmp
in
jnp
cmp
mov
jle
stc
fwait
push
idiv
je
imul
push
cmc
pop
(bad)
push
mov
pop
cmp
aad
mov
mov
dec
jp
jnp
call
and
ss
mov
leave
lods
xor
cmp
outs
mov
fcmovnbe
push
or
aam
rcl
xor
push
xor
fcmovne
mov
cmps
push
ins
mov
int
mov
(bad)
cld
mov
leave
adc
mov
movs
mov
fstp
out
imul
inc
js
cs
pop
add
pushf
outs
es
inc
mov
push
push
xchg
outs
jmp
add
xor
sbb
call
adc
in
inc
mov
and
push
jp
mov
outs
fcmovnu
or
es
clc
shl
lods
adc
scas
cmc
adc
cli
inc
aad
sub
add
mov
inc
sub
(bad)
and
repz
push
loope
stos
xchg
jnp
rol
pop
sbb
pop
fisub
movs
jno
int
push
and
int
nop
jl
enter
mov
pop
test
aad
fwait
test
ja
cld
jo
sub
jge
mov
aam
rcr
mov
mov
int
inc
adc
push
dec
pop
jl
loopne
pop
push
mov
and
push
repz
inc
not
mov
or
adc
pop
mov
push
mov
mov
not
mov
adc
fs
mov
aaa
cmps
fadd
es
mov
retf
jnp
jns
and
dec
bound
cmp
fldenv
xchg
leave
push
mov
and
adc
and
and
pop
int3
mov
mov
mov
cmp
dec
out
lea
out
stos
xor
jecxz
inc
cdq
adc
jl
sbb
adc
fs
sub
mov
jb
test
pop
mov
push
imul
sbb
mov
xchg
xchg
push
(bad)
xor
test
lock
cdq
and
pop
jo
mov
je
lahf
push
jne
jmp
sbb
sub
mov
or
test
cmp
xor
jno
jno
in
add
dec
and
adc
jmp
sbb
lahf
push
inc
in
inc
clc
push
mov
in
shr
mov
adc
xor
scas
sub
cdq
imul
cli
mov
adc
lods
mov
adc
and
mov
add
enter
fmul
enter
jmp
mov
mov
xor
fnstcw
sub
ins
es
dec
mov
std
pop
call
in
pop
jo
mov
inc
mov
stos
jecxz
xor
ins
xchg
mov
inc
(bad)
xor
dec
xor
mov
jge
push
mov
dec
or
or
mov
mov
enter
mov
fstp
sar
mov
inc
mov
jmp
jmp
mov
outs
sub
ins
clc
clc
mov
cmps
sbb
test
pop
popa
addr16
cmp
(bad)
mov
hlt
xchg
pop
imul
or
xor
gs
jecxz
jge
mov
das
repnz
retf
or
cmp
or
or
test
je
stos
fldpi
shl
in
(bad)
iret
cmp
neg
push
(bad)
fstp
call
mov
mov
jnp
cmp
cmps
je
imul
jecxz
inc
jl
jbe
dec
adc
mov
std
das
mov
mov
scas
fiadd
inc
xor
pop
(bad)
(bad)
outs
push
add
xlat
nop
out
cmps
shl
mov
push
cmp
movs
lods
jp
scas
push
inc
cmp
cmc
loop
push
repz
xor
mov
addr16
mov
lods
cmp
adc
push
fist
cbw
movs
dec
push
pop
xor
pop
(bad)
jns
dec
xchg
in
into
push
sti
(bad)
mov
xor
cli
pop
push
and
call
and
push
out
cmp
sub
in
or
inc
fwait
(bad)
jmp
jl
das
pop
xchg
or
jae
and
mov
push
jo
out
jno
or
js
and
jns
push
add
and
mov
pop
or
sbb
adc
jbe
add
fwait
inc
inc
add
int3
ja
sub
and
inc
ror
add
imul
sub
test
sub
sbb
sti
sbb
popf
inc
cmp
(bad)
push
xchg
add
mov
in
data16
sar
ins
mov
and
add
mov
outs
dec
retf
add
dec
ss
outs
clc
imul
jbe
mov
xrelease
jne
call
fcom
dec
mov
jbe
xchg
cmc
push
call
push
call
cs
je
cli
cmps
pop
int
cmps
mov
sar
inc
pop
mov
mov
mov
jp
sbb
fadd
xor
stos
mov
arpl
aad
jne
jno
(bad)
pop
mov
test
push
out
cwde
nop
test
xlat
daa
scas
into
data16
movs
(bad)
sbb
push
cmp
push
lahf
leave
sbb
pop
xor
das
jo
xor
adc
push
pop
hlt
and
add
mov
test
dec
jne
xor
sbb
cdq
cmps
enter
mov
inc
mov
pop
add
stos
xor
loope
sbb
push
out
loop
mov
rcr
lds
pop
sub
mov
push
rcr
(bad)
sahf
inc
inc
cmp
add
jecxz
in
mov
pusha
int3
(bad)
(bad)
xchg
xchg
shl
mov
dec
mov
xor
and
clc
les
push
aas
adc
sbb
in
mov
test
das
mov
inc
jle
movaps
sub
push
push
push
fwait
cmc
xor
mov
lods
call
sub
inc
js
xchg
mov
ds
jne
retf
sub
jne
inc
addr16
cmc
out
(bad)
add
scas
lock
out
xor
inc
cmps
ror
sub
cmp
in
daa
shr
cmps
fwait
dec
cld
lods
rol
dec
cmp
pop
xchg
cmp
or
and
add
arpl
sbb
xlat
and
add
and
jmp
inc
aaa
jp
fs
or
sti
ret
sbb
add
sbb
cmp
movs
aad
pop
jmp
sti
push
aad
push
aad
ja
mov
jne
int
xchg
mov
sti
xlat
fdivr
js
cmps
pop
pop
push
mov
out
ins
mov
mov
sub
jmp
cmp
push
mov
cmps
push
inc
dec
fdiv
ins
int
adc
shl
shl
push
cmc
(bad)
iret
(bad)
addr16
mov
fwait
jmp
imul
sub
jle
mov
cmp
retf
cmps
std
jne
in
cdq
shl
stos
mov
ja
call
xchg
imul
sbb
gs
ja
fiadd
jge
add
fidiv
jno
jo
shl
(bad)
pop
outs
std
imul
cmp
fldenv
cmc
dec
lds
jl
xor
jmp
jbe
popf
adc
jne
xchg
jmp
xchg
stos
data16
(bad)
mov
cld
stc
and
pop
jle
cmps
mov
ins
and
jle
rcr
in
stos
mov
cli
out
jnp
stc
clc
loop
mov
(bad)
jge
cmp
pop
inc
leave
inc
outs
(bad)
sbb
popa
into
xor
sub
push
(bad)
mov
jp
mov
jmp
and
fsubrp
pop
jl
mov
loop
xlat
in
iret
inc
pop
scas
push
mov
call
lea
loop
xor
jae
aad
xchg
xor
test
fstp
xchg
push
out
popf
in
arpl
rcr
(bad)
std
pop
sbb
outs
and
mov
jl
fsubr
std
jne
aam
aas
aaa
loopne
pop
ja
jnp
jg
fldcw
cmps
xchg
out
cwde
xor
push
mov
mov
popf
sahf
stos
xor
in
das
add
mov
pop
cmp
cmp
stos
int3
mov
(bad)
sbb
addr16
push
outs
hlt
mov
push
fbstp
mov
aam
pop
mov
pop
lock
dec
mov
pop
std
neg
fnsave
(bad)
push
aad
xor
pusha
(bad)
shr
pop
daa
push
inc
sar
aas
add
pop
sub
fcmovnu
lock
stc
cwde
sub
fnstsw
stos
fstp
sub
dec
popf
(bad)
cld
mov
outs
jae
fst
in
xchg
adc
jecxz
out
push
shl
aaa
mov
fsub
xlat
pop
aaa
pop
fsub
mov
cmp
loopne
scas
jecxz
daa
fcomp
push
mov
movs
popf
pop
mov
sahf
jns
cli
cmc
call
dec
xor
sahf
in
repnz
xchg
stos
shl
xchg
or
push
outs
jne
ror
mov
dec
call
sub
sub
(bad)
push
dec
jnp
push
iret
mov
and
jp
sahf
jbe
jae
mov
outs
faddp
cmp
in
(bad)
jo
mov
mov
cmp
jae
loop
sub
std
iret
nop
dec
dec
ja
fstp
lock
mov
fdivr
out
inc
out
pop
addr16
pop
hlt
mov
push
jne
pushf
fnstenv
mov
es
cld
mov
xchg
ins
sbb
not
out
adc
mov
std
stos
push
sar
in
fnstenv
rcr
into
add
fwait
jbe
loope
xor
popa
jg
and
pop
lods
into
cwde
ds
push
scas
push
lods
mov
jbe
push
xchg
jg
jge
jbe
in
fadd
push
xchg
inc
ret
push
(bad)
hlt
add
xchg
ror
mov
rol
out
enter
loopne
xchg
outs
cmp
xchg
iret
jle
lea
adc
jl
nop
out
push
adc
int
push
push
pop
rol
push
pop
retf
jno
test
pop
jb
push
movs
mov
movs
pop
fsubr
dec
iret
xchg
lods
cmp
aas
sbb
lods
jo
dec
push
jl
loop
movs
call
sbb
mov
js
daa
leave
adc
popa
test
in
pushf
popf
scas
cli
cmps
lea
push
lods
push
cs
add
xor
pop
rcr
cld
pop
out
sti
inc
jb
imul
pop
jge
iret
fs
jo
mov
ret
adc
pop
inc
mov
retf
scas
dec
pop
and
adc
repz
jae
inc
out
mov
rcl
popf
std
xchg
aad
fwait
inc
fnsave
sub
sbb
dec
test
xor
push
daa
imul
jp
adc
bound
dec
mov
rcr
(bad)
cmp
repnz
jle
mov
cmp
popa
xchg
mov
jo
not
movs
and
or
test
test
jmp
mov
or
adc
popa
lock
mov
fiadd
jg
dec
pop
es
push
movs
mov
mov
jl
pop
inc
push
sbb
retf
test
jp
xchg
outs
inc
jne
xchg
or
mov
cmp
call
or
jae
gs
sub
or
mov
dec
mov
mov
(bad)
jmp
aaa
pop
push
or
js
adc
or
cmp
outs
cmp
jbe
mov
jmp
jnp
jecxz
mov
mov
cmps
lahf
jmp
mov
jo
mov
mov
xor
or
mov
mov
ds
inc
mov
mov
movs
push
sub
mov
adc
pop
cmp
mov
mov
pop
ret
jmp
ss
xchg
iret
sbb
push
ins
push
(bad)
lock
lods
repnz
and
aaa
fadd
(bad)
xlat
shl
xchg
fwait
outs
push
adc
fild
cmp
xchg
jle
xchg
push
ins
add
stos
aaa
loopne
lahf
(bad)
xchg
lds
dec
pop
xor
or
test
inc
loop
inc
sub
mov
adc
icebp
mov
ret
ret
les
test
xor
(bad)
aaa
add
inc
in
outs
sbb
mov
maskmovq
jl
shl
sub
pop
push
scas
test
lahf
enter
jns
dec
xchg
ds
adc
bound
cmp
jns
repnz
push
dec
(bad)
stos
cli
std
mov
mov
popa
std
sub
adc
xor
lods
fdivp
jb
and
xlat
into
sub
push
iret
and
add
pop
stc
adc
ror
test
les
or
inc
xchg
out
sbb
mov
pop
inc
xchg
test
jle
ins
xchg
aam
inc
stos
pushw
xchg
movs
xchg
mov
lods
idiv
or
mov
adc
push
rcr
push
sub
nop
repnz
inc
xchg
add
cmc
mov
stos
push
es
dec
and
or
sbb
xor
pop
or
adc
push
or
ja
daa
mov
xchg
and
adc
dec
xchg
dec
pop
movs
dec
dec
(bad)
pop
ret
rcr
adc
stos
je
pusha
into
dec
pop
adc
mov
push
icebp
pop
outs
mov
popf
adc
idiv
lahf
aam
sbb
xlat
inc
inc
stos
outs
ret
mov
repz
xchg
adc
inc
std
movs
daa
into
cld
lds
cmps
inc
aas
mov
sub
or
lock
test
sub
mov
test
sub
je
out
jp
(bad)
fbld
push
cmp
inc
jg
das
pop
adc
repz
ret
jp
sub
mov
test
add
jmp
dec
adc
inc
fdiv
and
adc
cwde
xchg
xor
inc
dec
push
out
inc
sbb
xchg
ss
xchg
inc
adc
loopne
aam
repz
enter
push
and
fs
call
fmul
enter
adc
xchg
mov
iret
fbld
mov
(bad)
xchg
mov
adc
ret
bound
jmp
inc
jg
push
add
pop
popf
jmp
fdiv
pop
adc
int
adc
jmp
test
cmp
jo
clc
sbb
mov
xchg
mov
push
ret
cmps
add
sub
(bad)
dec
cmp
clc
sbb
sub
das
inc
cmp
stos
xlat
gs
pop
sbb
mov
arpl
(bad)
popf
(bad)
pop
add
pushf
repnz
mov
mov
scas
mov
pop
xchg
lahf
inc
inc
or
fidivr
mov
sbb
push
(bad)
call
mov
dec
jg
push
add
pop
call
jb
add
mov
push
addr16
push
mov
(bad)
push
(bad)
rcl
hlt
out
push
mov
inc
pop
jae
sbb
daa
pop
enter
add
jnp
mov
sbb
jmp
xor
jmp
pop
cmp
mov
fs
or
movs
or
mov
sub
pop
adc
iret
push
scas
pop
and
jno
cmp
push
add
push
(bad)
mov
jo
icebp
sub
sub
inc
mov
inc
aaa
and
test
ret
sbb
imul
adc
nop
xor
xor
sub
gs
(bad)
xor
adc
das
jl
lea
test
or
mul
mov
call
add
call
movs
sub
sbb
daa
arpl
dec
ja
das
cmp
sti
add
loope
icebp
ss
jmp
icebp
push
or
nop
enter
int3
out
arpl
inc
cld
lea
xchg
add
push
js
cwde
push
loop
dec
movs
inc
call
jp
ins
add
jp
mov
repnz
not
jne
lahf
popa
enter
add
sbb
xchg
cmp
pop
push
leave
sbb
sub
rcr
pop
stos
cmps
dec
inc
xlat
inc
fild
dec
push
cmp
clc
aas
sub
rol
pop
call
fst
jo
fwait
test
fdiv
sub
pushf
inc
and
inc
xchg
cld
nop
or
xor
add
xchg
in
jecxz
add
or
cmp
mov
in
or
fnstsw
rcr
inc
mov
ret
into
or
ret
rol
sub
jmp
fdivr
ss
adc
cmp
jns
mul
bound
jmp
test
inc
sbb
fld
ret
sub
inc
pop
clc
jecxz
push
xor
cmp
adc
nop
xchg
(bad)
sbb
and
adc
mov
push
push
push
fsub
sar
out
jbe
pop
mov
clc
retf
stos
hlt
mov
add
in
gs
jne
sub
lahf
xchg
cmps
movs
dec
test
ins
(bad)
enter
ror
xor
add
mov
cmp
and
push
jne
ins
or
mov
btc
or
dec
xor
fwait
push
mov
jge
mov
test
push
xchg
and
mov
daa
push
fst
add
loope
nop
xchg
cli
inc
shl
xor
mov
scas
retf
mov
pop
movnti
ja
ins
adc
pop
jmp
out
rol
ret
jg
mov
rcr
xor
sbb
lods
sbb
(bad)
xchg
push
out
or
repz
xchg
loopne
pop
mov
cmp
xchg
je
fld
js
repnz
(bad)
movs
(bad)
popa
imul
aaa
push
mov
test
cmc
out
mov
call
or
sar
pop
data16
rcl
push
outs
or
mov
lods
sar
mov
jecxz
sbb
or
xlat
ins
or
jle
aam
dec
cld
sbb
add
lahf
jns
cmp
lods
ret
sub
adc
stos
xor
pusha
dec
scas
cmp
bound
add
xchg
imul
jl
mov
das
in
pusha
out
repnz
dec
mov
scas
xchg
ror
retf
xchg
add
pop
mov
mov
or
push
aas
add
std
(bad)
xchg
movs
not
test
bound
into
sub
jb
xchg
aaa
outs
jb
pop
inc
adc
call
iret
ret
rol
in
dec
outs
rcr
xor
pop
sub
jbe
outs
jns
mov
cmp
cdq
pop
sbb
jmp
fs
ficomp
sbb
jl
clc
data16
ins
movs
je
pop
xlat
mov
hlt
add
int
push
xlat
loopne
lds
ins
mov
pop
jge
cmp
aaa
inc
sbb
rcr
push
xor
mov
inc
sub
stos
or
pop
cwde
and
dec
xchg
mov
mov
adc
sub
mov
addr16
jge
or
(bad)
das
aaa
loopne
jmp
jle
push
sahf
in
sbb
push
js
sub
cmp
push
fimul
in
adc
js
in
jae
stc
mov
xor
jmp
sub
mov
loop
dec
call
aaa
xor
arpl
clc
ror
loopne
cmp
shl
jae
mov
inc
loopne
inc
leave
jnp
xor
std
pop
xchg
or
mov
xchg
mov
movs
cmp
cmp
shl
xor
aaa
clc
dec
push
jb
xchg
inc
jmp
and
lock
das
shl
add
sub
ror
call
inc
std
imul
push
js
mov
rcr
sbb
es
fcomp
mov
sbb
mov
cmps
mov
cwde
adc
shr
mov
call
sub
sub
push
loop
rcl
lock
enter
dec
jmp
jo
out
add
pop
(bad)
cld
adc
test
cmp
(bad)
adc
popa
fsub
test
fisttp
mov
jg
addr16
out
ins
fs
ret
xor
jmp
xchg
sub
cld
hlt
fcomp
pop
(bad)
sbb
rol
mov
int
test
call
dec
rcr
push
out
dec
jns
or
test
and
cmp
add
in
jne
push
and
sbb
jmp
loop
(bad)
enter
loope
loop
and
xlat
std
sub
mov
(bad)
xor
das
mov
inc
sbb
mov
mov
cmps
mov
push
popf
jo
loopne
mov
dec
fs
hlt
aad
adc
es
scas
rol
fild
push
mov
jge
(bad)
ja
adc
outs
scas
movs
bswap
inc
dec
jmp
ss
(bad)
out
es
adc
call
not
xor
sbb
arpl
push
adc
sub
(bad)
popa
test
xchg
shl
pop
pop
mov
in
xor
or
repnz
icebp
adc
jns
movs
add
test
and
je
movsx
ficomp
ins
mov
xchg
outs
arpl
lahf
dec
xchg
or
push
push
hlt
cmp
mov
popa
in
mov
pop
mov
inc
dec
and
repz
leave
mov
(bad)
or
and
inc
cmps
imul
sbb
xor
out
dec
adc
adc
sbb
enter
pusha
or
inc
mov
pushf
cmp
jb
adc
add
repz
data16
xor
out
mov
jnp
mov
je
mov
jnp
icebp
mov
(bad)
mov
and
inc
mov
inc
or
pop
mov
lock
pop
pop
test
and
adc
adc
jno
xor
mov
mov
stos
retf
jnp
jmp
outs
out
xor
cmp
and
fwait
mov
ds
xor
mov
jbe
jp
add
fisubr
test
int3
outs
or
out
fistp
aam
daa
push
pop
or
out
inc
sub
popa
loopne
jmp
add
lods
mov
inc
fsub
sub
dec
dec
mov
dec
out
scas
adc
xlat
mov
nop
cs
ds
push
inc
dec
pushf
aam
ss
and
hlt
cmps
sbb
jb
xchg
mov
dec
ficomp
mov
loope
add
inc
test
sti
enter
aas
push
mov
pop
inc
hlt
sbb
xchg
outs
shl
jge
lea
in
popa
and
sub
inc
adc
in
sbb
inc
scas
pop
(bad)
js
popa
jmp
mov
out
mov
cld
adc
imul
fwait
inc
xor
cmp
dec
pop
mov
ret
(bad)
(bad)
mov
xor
sub
mov
imul
hlt
in
bound
mov
fisub
sbb
xchg
jmp
js
dec
mov
pop
aaa
mov
jecxz
iret
fiadd
sbb
icebp
cmp
pop
inc
add
pop
xor
test
jnp
push
std
jl
mov
or
mov
gs
jecxz
xor
and
clc
addr16
(bad)
cmp
xchg
js
mov
es
push
pmovmskb
add
shl
xchg
cmp
clc
mov
(bad)
jp
scas
push
and
popf
test
mov
test
or
jb
xchg
pop
mov
ret
(bad)
jmp
sub
sar
pop
repz
mov
pop
repnz
repnz
xchg
push
lods
pop
iret
leave
add
cmp
dec
xor
or
les
cmps
popf
rcl
bnd
test
adc
mov
daa
ret
lods
ret
imul
lods
push
mov
data16
push
sbb
test
mov
pop
leave
sub
sub
cdq
xlat
test
cli
aaa
movs
mov
retf
fisub
and
cld
popf
nop
pop
cmp
cwde
inc
dec
push
xchg
mov
or
jmp
xchg
imul
xchg
movs
repnz
ds
repnz
xchg
fld
adc
or
sbb
movs
in
sbb
sbb
xchg
out
iret
jnp
cs
mov
stos
add
sub
ss
cs
call
sub
call
jl
ja
adc
jmp
jae
out
call
test
mov
jbe
pop
(bad)
dec
jne
xor
adc
mov
cmp
and
and
cmp
fisub
loopne
repnz
inc
jl
cmp
cmp
jle
xchg
or
mov
xchg
cmp
pop
je
hlt
je
dec
adc
jnp
mov
and
in
adc
add
push
mov
add
push
and
xchg
sti
cli
lea
dec
sub
mov
rcl
sahf
pop
popa
in
loop
sub
fisub
jo
mov
add
popf
fistp
push
mov
iret
inc
loope
mov
jno
leave
dec
(bad)
enter
push
xchg
lds
mov
xchg
push
or
sbb
in
mov
test
or
jg
pop
shl
mov
mov
jecxz
and
loope
jecxz
ins
lahf
dec
popf
jp
fndisi(8087
inc
jo
mov
(bad)
ins
jb
push
xchg
mov
pop
adc
fs
or
jmp
cmp
jle
shr
mov
xor
rol
xlat
sar
fincstp
test
xor
rcl
mov
lods
out
addr16
push
mov
jl
add
mov
test
push
pusha
sub
push
ret
nop
fwait
mov
int3
stos
adc
jecxz
pop
xor
mov
xor
and
adc
into
sbb
aas
xchg
jp
dec
push
int
mov
jge
pop
dec
xchg
pop
mov
dec
in
pop
inc
xchg
jne
fmul
pop
mov
jg
sub
mov
dec
push
fld
pop
imul
mov
dec
clc
test
sar
jg
mov
jne
xchg
or
sbb
mov
ror
cmp
imul
xchg
sub
sahf
dec
and
jp
pop
imul
mov
aas
icebp
push
inc
add
xchg
test
lea
inc
mov
mov
jo
and
push
dec
sub
mov
lods
add
ficomp
cld
sub
sahf
sub
jae
pop
sbb
sub
or
add
fld
and
or
mov
sbb
xchg
mov
into
aas
push
push
ret
stos
add
jl
add
das
hlt
cdq
jge
lds
cmp
sub
inc
addr16
iret
jle
pop
jmp
push
int3
adc
jle
fdivr
retf
(bad)
adc
repnz
jmp
cmp
jnp
push
fs
test
in
arpl
gs
adc
test
sbb
fsub
xchg
inc
jno
pop
daa
jmp
mov
and
stc
das
mov
inc
cmps
out
sbb
push
push
and
(bad)
jo
jl
test
sahf
into
push
add
test
pop
push
leave
shl
les
pop
xchg
in
(bad)
div
xor
inc
aam
aad
ins
push
retf
mov
icebp
(bad)
jmp
out
mov
mov
mov
push
sub
repnz
cmp
retf
call
jmp
mov
add
cmp
push
pop
add
push
mov
xor
inc
les
in
xchg
xchg
gs
pop
loopne
sar
and
aam
xlat
cwde
cmps
inc
nop
inc
push
mov
scas
inc
mov
push
add
ret
out
outs
jbe
fwait
sbb
or
xchg
xchg
test
clc
(bad)
fcom
add
xlat
cs
pop
loope
(bad)
mov
inc
or
xchg
add
scas
cmp
xor
test
(bad)
sub
loope
jmp
cli
and
sbb
rcr
sbb
outs
inc
inc
jmp
jge
std
mov
ds
not
dec
aas
mov
jnp
aaa
pusha
jbe
xlat
les
xchg
jecxz
hlt
cmp
repz
mov
jg
cmp
jmp
sti
cmp
jmp
dec
mov
ins
(bad)
gs
ja
mov
and
data16
jno
jl
int
int
pop
jmp
fnstcw
ds
inc
cmps
lods
(bad)
mov
jp
imul
ins
(bad)
ja
dec
push
jmp
loopne
popa
imul
ret
xchg
mov
mov
fprem
dec
clc
xor
push
xchg
mov
xchg
sahf
xchg
dec
mov
popf
adc
inc
int3
sbb
outs
mov
or
sbb
sub
(bad)
xchg
or
mov
in
adc
and
inc
ins
and
jbe
out
mov
repz
mov
int3
adc
outs
pop
fldcw
jbe
xor
(bad)
sub
fstp
lea
lods
or
add
test
sbb
push
loope
cmp
adc
repnz
mov
(bad)
add
sbb
xchg
xchg
sbb
repnz
repnz
lock
push
pop
fldenv
jns
fsubr
(bad)
sbb
add
pop
pusha
inc
lds
mov
mov
out
mov
aam
fnstenv
mov
dec
push
mov
je
lahf
inc
or
xchg
mov
xchg
mov
sub
mov
fst
sahf
(bad)
mov
add
jl
pop
(bad)
fiadd
mov
(bad)
push
jne
and
push
push
xchg
xchg
inc
shr
xchg
fs
pop
int3
fs
fcmove
repz
call
mov
(bad)
mov
inc
jge
xchg
mov
or
idiv
icebp
push
pop
gs
mov
xchg
xor
pop
cmp
ins
int3
xor
adc
(bad)
push
retf
sahf
jns
jbe
push
xor
dec
sbb
lods
sbb
test
fcmove
dec
inc
clc
es
cwde
(bad)
sub
mov
pop
push
arpl
fisubr
sbb
and
mov
xchg
imul
retf
popa
in
cld
icebp
stos
xchg
cmp
xchg
sbb
xchg
jl
or
pop
mov
in
adc
imul
jecxz
out
sbb
ja
pop
mov
scas
push
repz
cmp
(bad)
(bad)
and
jg
mov
or
fsub
and
xchg
(bad)
or
xchg
mov
mov
add
hlt
cmp
push
movsx
pop
xor
mov
or
jns
imul
ins
jns
or
push
inc
or
pop
ds
and
mov
push
sti
fist
push
cld
scas
mov
sbb
push
or
cmps
test
outs
cmp
dec
ror
rcr
add
ins
data16
clc
add
aad
push
jnp
mov
pop
test
pop
cmc
cmps
sub
(bad)
or
jno
push
out
(bad)
cmp
dec
mov
push
pop
lods
retf
mov
pop
pop
loop
enter
inc
or
nop
aaa
aad
mov
pop
add
dec
jne
mov
push
cs
into
mov
mov
sbb
js
add
fld
cmps
mov
xchg
or
mov
das
test
stos
repz
cmc
ret
cwde
aas
jbe
jge
xchg
mov
xlat
aam
adc
(bad)
xor
mov
lahf
pop
or
loopne
mov
loopne
xchg
out
xchg
lods
mov
and
sbb
inc
jecxz
push
pop
sub
fld
ins
adc
ss
push
pop
js
popa
dec
jns
cmp
jg
outs
sti
dec
and
clc
fld
fxch
cs
int
cs
inc
in
xchg
mov
pop
xchg
in
jmp
xor
cs
aas
rol
ret
icebp
(bad)
pop
clc
add
call
push
mov
sbb
pop
jae
cmp
sub
jl
inc
lock
dec
push
out
pusha
retf
mov
ds
sti
add
xchg
lods
jnp
call
adc
xchg
pop
fs
mov
aad
inc
sub
pop
into
(bad)
lds
retf
sub
mov
cmp
adc
movs
jae
(bad)
les
or
jmp
(bad)
adc
mov
inc
fwait
mov
les
loopne
mov
inc
mov
cmp
nop
cmps
in
enter
fnstenv
das
cmp
test
fsub
cmps
add
sbb
test
clc
enter
ret
add
mov
mov
push
push
or
repz
adc
pop
repz
xor
jae
cmc
mov
jmp
inc
inc
xchg
jmp
scas
jg
jge
aad
and
xchg
cmp
jne
push
mov
or
cwde
fnstcw
or
in
inc
cmp
cld
mov
and
mov
nop
push
cmp
sbb
and
pop
es
sub
add
cmp
mov
mov
add
cld
inc
sbb
daa
shl
or
and
xchg
adc
popa
mov
sub
inc
in
add
push
popa
jo
xor
mov
clc
inc
xor
inc
and
out
data16
xor
cli
sbb
and
(bad)
cmp
popf
lahf
scas
mov
xor
arpl
loopne
jb
retf
mov
popa
cmp
xchg
mov
mov
xor
jge
pop
sbb
pop
xor
pusha
imul
test
push
pop
pop
cmps
push
into
jl
aaa
sub
dec
jno
xor
or
arpl
and
pushf
test
add
or
shr
shl
test
out
xchg
bound
stos
out
(bad)
into
vminsd
pop
push
mov
aam
dec
(bad)
popa
push
sbb
pmulhuw
not
test
mov
or
scas
jg
dec
pushf
cmp
xchg
add
add
or
nop
mov
mov
fsubr
sbb
lods
xchg
inc
pop
and
test
jne
mov
pop
jne
daa
push
arpl
pusha
inc
or
stos
rcr
xchg
sbb
test
add
cmp
(bad)
mov
rol
cmp
out
or
mov
push
inc
pop
jb
cmp
mov
sbb
adc
ror
mov
cmp
std
data16
sbb
sub
push
xchg
mov
std
sbb
sub
push
push
sbb
push
in
loopne
ret
sub
xchg
loope
lods
sub
nop
je
pusha
pop
add
stc
adc
push
scas
inc
fldcw
mov
fsubr
mov
loope
in
or
add
enter
add
clc
jmp
xchg
or
inc
hlt
nop
and
inc
pop
scas
cmp
sbb
in
popf
psrld
mov
mov
cmps
push
sub
je
dec
daa
sahf
stos
aam
sti
enter
push
push
add
dec
add
inc
les
xor
inc
scas
jne
sbb
imul
mov
lahf
cmc
add
in
and
sub
mov
ret
sbb
xor
iret
lock
aas
je
cmp
call
dec
dec
jg
aas
cld
rcr
std
mov
xchg
repnz
pushf
dec
mov
xchg
xchg
data16
pop
in
int3
sub
dec
mov
pop
jno
or
and
sbb
mov
jecxz
int
in
sbb
sub
xchg
pop
sub
jp
les
sbb
xchg
cli
(bad)
push
scas
aad
pop
pop
xchg
out
add
xchg
clc
je
fdivr
rcr
pop
pop
outs
pop
sbb
pop
sub
aam
iret
popa
cmps
imul
inc
scas
leave
imul
inc
dec
mov
cdq
sub
mov
jmp
xor
push
jecxz
data16
xor
pop
cmp
push
gs
and
inc
cmp
adc
daa
mov
pop
lea
pop
test
jle
adc
(bad)
scas
mov
add
and
or
mov
push
daa
pushf
cmovs
aaa
mov
pop
fwait
cmp
jne
movs
stc
popf
inc
pop
dec
int3
add
sbb
jnp
cld
or
scas
ja
leave
outs
icebp
inc
imul
ds
xor
hlt
and
stos
inc
pop
pushf
in
enter
mov
jae
adc
int3
xchg
and
addr16
add
out
mov
mov
call
inc
sbb
xchg
pop
mov
retf
outs
mov
xchg
rol
dec
imul
popa
mov
(bad)
enter
push
int3
stc
xor
lods
es
add
aad
loopne
sbb
data16
pushf
fcom
out
int3
fiadd
sar
and
add
mov
push
cwde
xchg
icebp
daa
test
pop
cdq
inc
movs
shl
sbb
retf
push
ror
jmp
xchg
loope
or
aad
pop
sbb
xchg
popa
sub
retf
cmp
mov
out
shr
jp
scas
cwde
aam
mov
adc
sub
adc
ja
push
rcl
scas
outs
mov
mov
sub
push
hlt
push
cmc
inc
push
mov
add
jecxz
leave
arpl
mov
(bad)
fptan
xchg
inc
cmps
jo
push
dec
pop
pop
add
addr16
lds
mov
fwait
paddsw
cmps
pop
lods
retf
sbb
sub
sbb
cdq
pushf
dec
lea
pop
adc
or
outs
pop
(bad)
pop
xchg
cmp
aad
je
and
stc
lds
fnstenv
or
mov
sti
arpl
cmp
(bad)
push
add
out
push
lock
mov
mov
mov
shl
mov
jne
pop
std
mov
jmp
test
push
ret
jo
adc
inc
rol
dec
push
ss
inc
xchg
xor
loope
mov
push
rol
leave
popf
mov
push
leave
push
js
add
or
mov
cld
repz
out
mov
or
or
ficomp
or
adc
push
mov
(bad)
cld
lds
shl
push
mov
add
push
les
shl
icebp
js
call
xor
pop
mov
inc
js
mov
gs
scas
retf
mov
jne
js
pop
mov
vminps
dec
cmps
test
data16
add
jmp
jae
retf
push
fsubr
pop
inc
inc
sub
or
mov
mov
adc
and
fcom
cdq
sbb
or
mov
outs
cld
jmp
xor
jge
jmp
mov
loopne
adc
inc
inc
into
hlt
mov
dec
mov
popf
xor
mov
xchg
xchg
xchg
push
or
lahf
ficomp
and
mov
inc
mov
icebp
(bad)
push
adc
fs
mov
mov
sbb
(bad)
fimul
cmps
dec
add
and
outs
or
cmps
xor
xchg
mov
inc
ss
or
inc
gs
scas
or
data16
inc
xor
pop
and
mov
sbb
or
cwde
jno
in
xchg
push
mov
lods
in
ins
xchg
ds
push
loope
pop
out
imul
push
hlt
cmps
mov
es
jmp
mov
std
movs
scas
(bad)
jecxz
adc
or
pop
lock
test
xor
mov
dec
dec
movs
mov
mov
push
sbb
jns
adc
jmp
addr16
or
enter
lock
push
fiadd
pushf
mov
jbe
jb
pop
movs
xlat
and
inc
xchg
outs
xchg
and
dec
cdq
sub
mov
sbb
cmps
cwde
jecxz
pop
in
and
movs
mov
ds
bound
cmps
jl
test
lahf
arpl
push
inc
(bad)
push
mov
enter
(bad)
pushf
sar
xchg
loopne
add
mov
rcr
fsubr
arpl
ret
dec
les
sub
xor
push
cdq
dec
ret
sbb
cmp
push
(bad)
in
into
mov
pop
enter
in
jo
jo
jae
and
data16
test
adc
or
out
cmp
mov
xchg
jl
pusha
pop
jbe
imul
das
cmp
rol
(bad)
daa
and
int
and
add
rol
scas
pop
add
add
aad
stc
mov
dec
das
xchg
(bad)
(bad)
aad
mov
stc
popf
sbb
shl
sub
inc
jns
sbb
jo
and
enter
fnsave
or
loop
pop
mov
test
jnp
mov
or
sbb
mov
popa
ss
stc
in
cmp
lds
movs
jb
adc
mov
aaa
call
push
in
in
test
test
test
mov
xor
outs
inc
jecxz
sbb
bound
fnstenv
jecxz
jnp
rcl
sahf
(bad)
sar
sahf
repz
iret
push
(bad)
pushf
dec
pop
add
mov
cmc
mov
dec
pop
adc
push
sti
call
fcomp
iret
pusha
jmp
ins
clc
jbe
adc
push
adc
pop
inc
push
pop
and
(bad)
xor
std
mov
clc
inc
fidiv
hlt
hlt
jl
mov
mov
xchg
pop
jno
adc
in
dec
enter
pushf
sbb
lea
mov
int
push
outs
inc
sbb
pop
xor
xchg
push
inc
push
js
jb
xor
sbb
cmp
in
push
test
cmp
inc
mov
mov
mov
(bad)
mov
or
cmp
mov
scas
pusha
les
fisttp
shl
mov
mov
inc
aam
addr16
retf
add
ds
(bad)
cmp
push
inc
mov
shr
ficomp
icebp
mov
movs
mov
retf
jne
stos
jmp
dec
inc
jbe
inc
jne
xor
stc
ja
sar
mov
jo
mov
call
call
scas
and
sub
push
add
mov
popf
inc
ins
add
sbb
adc
in
lods
arpl
or
scas
dec
inc
ror
fadd
add
jmp
jle
pop
mov
cmp
pop
jns
and
push
ss
adc
imul
mov
xor
(bad)
div
fsubr
pop
pop
sub
std
adc
add
inc
out
stos
xor
adc
push
inc
pop
sbb
test
bound
mov
sub
pop
or
stc
bound
pop
xchg
movs
ss
dec
xchg
jns
sahf
(bad)
add
fsubr
cmp
mov
dec
dec
jne
adc
and
mov
nop
push
push
or
push
or
jle
lock
push
shl
adc
nop
pop
retf
ds
pop
rol
mov
push
adc
or
loopne
xchg
jmp
sub
icebp
ss
add
add
xor
adc
in
fcomip
aam
push
adc
mov
cmp
ins
mov
repz
and
sub
mov
arpl
ja
mov
fsubr
sub
mov
inc
mov
jl
gs
mov
es
jp
repz
fcomp
jg
sbb
(bad)
into
mov
cmps
push
cmp
push
dec
ret
inc
mov
jge
jbe
mov
mov
sbb
push
dec
push
popf
xor
stc
mov
ins
cli
fsubr
add
ds
sar
or
xchg
mov
in
xchg
mov
inc
nop
add
and
and
xor
lods
ja
popa
add
int3
iret
repz
pop
and
and
pusha
sar
outs
push
add
jmp
lds
mov
lock
or
cmc
sbb
shl
out
bound
mov
add
or
popa
into
lods
or
dec
(bad)
cmps
retf
mov
adc
dec
dec
ds
int
pop
mov
sub
neg
mov
jmp
or
jb
dec
lock
js
cmp
dec
sti
inc
data16
sbb
outs
jmp
dec
pop
mov
push
sbb
dec
lods
mov
inc
xchg
fldenv
sbb
fnstenv
inc
mov
mov
mov
outs
inc
lock
iret
hlt
or
cmc
repz
(bad)
mov
popf
clc
test
in
fild
push
nop
dec
rcl
push
lock
test
retf
mov
iret
xchg
or
(bad)
mov
jnp
js
call
and
mul
xchg
mov
cmps
jno
test
adc
cmp
mov
loope
add
test
mov
imul
push
fisttp
mov
pop
sti
inc
mov
sbb
je
add
cs
push
es
cmp
ss
push
hlt
ror
push
je
pop
js
mov
fiadd
mov
not
inc
clc
out
adc
xchg
jmp
sub
or
cli
inc
inc
les
stos
mov
xlat
mov
cwde
jecxz
sub
or
mov
out
xchg
outs
mov
adc
sub
arpl
(bad)
popa
or
retf
inc
out
icebp
and
xchg
(bad)
sub
sbb
popf
out
lock
(bad)
stos
mov
xchg
ins
push
sahf
cmc
xlat
mov
mov
stc
nop
outs
loope
mov
lock
fnsave
rol
xchg
cli
cmp
cmp
cmp
xchg
cmc
and
nop
lea
mov
out
sub
add
fsub
pop
sahf
(bad)
rcl
and
out
lods
in
shl
or
dec
adc
aad
aad
push
idiv
mov
lea
mov
add
retf
xchg
leave
pop
push
rcr
mov
sbb
fsubp
jae
mov
adc
retf
jecxz
mov
jmp
pop
ins
jno
mov
and
fild
ja
cmps
aas
leave
mov
mov
mov
sahf
(bad)
call
je
pop
inc
fisttp
call
imul
or
mov
cmp
add
mov
bound
addr16
xchg
adc
loopne
in
stc
mov
cmp
adc
test
clc
xor
mov
or
out
mov
daa
hlt
dec
(bad)
adc
jp
bound
out
scas
mov
or
(bad)
xchg
es
test
xor
xchg
add
test
sub
add
xchg
sbb
cwde
mov
mov
mul
stos
lods
sbb
mov
push
cmp
add
aam
ror
lods
into
jne
mov
adc
sub
pop
xor
pop
movs
jmp
sbb
fcom
pop
sub
mov
push
xchg
dec
xor
mov
mov
mov
sbb
mov
out
aaa
nop
pop
loope
inc
jp
test
jp
xchg
mov
out
sub
cmp
sti
rol
pop
sub
hlt
cld
push
xchg
pushf
mov
test
pop
cmc
pop
pop
dec
xchg
ins
xor
push
fsubr
mov
repnz
pop
into
cmp
jo
mov
pop
add
fwait
mov
pop
sahf
mov
mov
mov
jle
xchg
scas
aam
dec
int
inc
imul
or
push
(bad)
sub
pop
lods
jge
idiv
js
popa
inc
lock
fisubr
xor
cmps
lods
ds
out
xchg
dec
add
xchg
pusha
xor
jp
push
sub
pop
nop
push
loop
and
push
repz
movs
mov
jns
jmp
cmp
lock
sub
xchg
dec
dec
(bad)
popf
ror
inc
mov
pop
scas
test
test
retf
js
inc
mov
call
and
mov
cmps
jmp
fs
rcl
(bad)
mov
mov
cmps
jae
test
std
jmp
xor
scas
push
xchg
lods
scas
cmp
pop
retf
repz
sbb
xlat
lea
ret
or
pop
mov
adc
gs
popf
cld
jo
jbe
mov
int3
in
push
(bad)
clc
or
out
aas
movs
sbb
fild
push
pop
jae
sti
daa
inc
les
xchg
dec
jge
or
push
(bad)
adc
mov
dec
jp
stos
std
and
and
loopne
out
push
sub
mov
pop
or
(bad)
aam
dec
test
bound
jle
ds
ret
mov
(bad)
mov
xchg
(bad)
aas
outs
repz
shl
pop
dec
imul
loop
mov
ss
sub
mov
xchg
or
leave
test
push
popf
dec
sub
sub
ja
lahf
dec
jecxz
mov
call
stos
or
ja
nop
and
add
add
aad
clc
imul
movs
jmp
iret
in
mov
sbb
pushf
pop
sub
out
jnp
jge
mov
sbb
sub
and
jle
fcmove
leave
mov
aad
xor
push
jne
mov
sbb
in
jg
shl
or
xor
stos
je
mov
mov
push
call
xchg
test
sbb
cld
or
imul
inc
sub
adc
jne
scas
xor
and
add
fstp
sub
stos
jge
xor
xchg
xchg
jle
(bad)
int3
jnp
ss
push
dec
lock
or
xor
mov
sub
push
cmp
inc
and
int3
shl
xchg
cmp
sbb
movlps
ret
sar
xor
shl
sbb
repz
pop
in
push
pop
imul
xchg
rcr
in
inc
imul
jg
cmc
adc
je
test
cli
shl
add
rol
adc
arpl
fst
sbb
adc
test
popf
scas
mov
ret
ror
pop
sbb
retf
sbb
dec
push
test
and
add
ss
jmp
pop
dec
test
mov
sti
add
outs
inc
xchg
push
fstp
imul
(bad)
cdq
jg
cmp
popf
loopne
fistp
(bad)
fimul
dec
lea
mov
cmp
jecxz
jl
(bad)
jmp
push
dec
jno
mov
fistp
or
mov
inc
and
adc
push
mov
mov
ds
jle
je
cmps
push
mov
ins
(bad)
xchg
add
jns
push
pop
fs
fbstp
pop
pop
cdq
sub
movs
addr16
or
outs
or
aam
int3
test
adc
mov
inc
stos
mov
sub
(bad)
push
xchg
scas
mov
dec
and
outs
mov
sub
lahf
jo
sub
mov
cmp
inc
(bad)
fisttp
or
aad
push
jns
cmp
sti
xchg
sbb
ret
test
hlt
dec
stc
fcomp
mov
mov
adc
sbb
sub
dec
gs
dec
repz
dec
xor
mov
mov
iret
add
mov
shr
mov
jne
jb
push
in
jmp
mov
shr
mov
jg
push
icebp
cdq
cwde
xchg
jecxz
sahf
pop
mov
outs
(bad)
sahf
jno
sbb
fdecstp
xchg
and
fistp
xchg
fisubr
gs
int3
sub
mov
ds
icebp
push
scas
pop
out
cs
sub
shr
addr16
ins
sub
aad
cwde
jmp
cmp
mov
sahf
xchg
or
push
test
mov
cmc
pop
ds
mov
push
add
int3
mov
out
(bad)
pop
ss
mov
push
test
xchg
test
out
jmp
mov
xor
stc
xchg
dec
mov
cmp
arpl
push
mov
shr
mov
das
sub
jmp
mov
mov
push
fild
dec
inc
test
in
push
scas
int
hlt
xchg
in
pop
pop
dec
cli
icebp
adc
add
or
mov
in
cdq
xor
sar
popa
leave
or
pop
ret
das
mov
xor
and
add
inc
jns
jmp
pop
sub
add
mov
in
mov
aam
inc
ror
and
xor
mov
jnp
fidivr
mov
je
push
ja
lea
lods
mov
and
pusha
push
stos
or
mov
cwde
dec
out
aad
pusha
imul
xor
neg
xlat
mov
ficom
push
jae
in
into
lahf
div
xchg
xlat
(bad)
cmps
icebp
add
(bad)
fnstsw
enter
in
cmp
outs
jnp
jbe
clc
ret
mov
in
jp
cmp
aaa
cli
(bad)
lock
cli
daa
daa
test
lock
cmc
loop
addr16
imul
jecxz
jbe
pop
daa
sti
xor
xchg
sbb
leave
jge
mov
mov
fstp
popa
fsubr
cs
scas
adc
call
push
add
repnz
lods
push
(bad)
pushf
mov
and
fs
inc
add
je
mov
mov
push
icebp
cli
int3
mov
xchg
fcmovne
cmc
pop
mov
xchg
sub
fmul
shl
jl
call
pop
pusha
inc
mov
or
and
mov
jne
mov
xchg
sbb
sbb
mov
arpl
call
mov
inc
test
add
add
xchg
push
into
jp
loopne
jmp
(bad)
cmps
pop
jg
stos
mov
test
inc
jno
(bad)
sbb
sbb
cmps
jmp
inc
ins
ret
int3
test
or
jg
pusha
pop
repnz
ror
pusha
cmp
xchg
fwait
das
xlat
pop
retf
in
mov
mov
jmp
or
xor
adc
test
shr
pop
fidivr
popf
call
nop
in
mov
stos
sbb
and
fs
adc
mov
mov
xor
loope
lods
adc
call
cmps
cld
jns
cli
sar
std
ja
in
cmp
outs
inc
repnz
pop
dec
push
xor
ins
jb
jecxz
cwde
cli
dec
add
lds
or
xor
mov
mov
stos
xchg
mov
inc
(bad)
addr16
pushf
je
push
mov
lea
(bad)
ins
cmc
mov
idiv
call
jnp
out
or
test
pop
int
ret
mov
mov
fsubr
sbb
fsubp
ret
add
out
sub
mov
scas
pop
es
arpl
outs
cmps
(bad)
push
sub
in
stos
push
stos
jecxz
cmp
cmp
in
ins
sti
dec
jle
pop
test
call
or
mov
loop
pop
xlat
call
push
or
jne
mov
ror
mov
aaa
mov
jae
int3
ds
repnz
movnti
jnp
js
lock
fstp
pushf
cmp
jge
test
mov
sbb
jecxz
neg
push
cmp
repz
jnp
aas
xor
std
dec
dec
mov
mov
cmp
jnp
ss
lahf
fistp
xlat
aaa
neg
jp
mov
xor
les
fnstenv
xor
fsub
mov
into
cmp
std
jecxz
aaa
lock
cmp
mov
or
cmps
ja
lods
cmp
pop
jns
sti
jge
imul
mov
jne
stc
cld
pop
imul
aam
and
pop
mov
mov
enter
repz
jo
push
pop
pop
cmp
pop
(bad)
xor
inc
callw
sbb
mov
xchg
fisub
cmp
ror
mov
and
icebp
sub
fidiv
dec
pop
jle
xchg
repnz
imul
pop
pop
fwait
clc
in
pushf
inc
lods
add
data16
push
sbb
fld
stc
fs
int
xor
and
inc
add
mov
xor
loopne
jns
xor
and
adc
int
lock
(bad)
sahf
mov
test
pop
(bad)
std
aam
shl
and
sub
mov
jecxz
rol
enter
adc
cmp
lea
inc
sub
or
add
sbb
mov
mov
(bad)
lods
xchg
dec
retf
imul
and
cmp
mov
loope
mov
stos
ja
das
icebp
cmps
xchg
leave
sbb
scas
jecxz
es
jo
add
jne
adc
leave
xchg
jo
mov
cmp
sbb
mov
and
aas
fs
data16
add
aaa
mov
adc
into
stos
(bad)
in
aam
jns
jo
stos
pop
xchg
push
cmp
xor
in
aas
push
jecxz
and
loope
push
jmp
nop
retf
jecxz
jb
pushf
test
jp
mov
call
sbb
(bad)
dec
add
addr16
or
add
xchg
or
leave
mov
clc
imul
(bad)
pusha
fs
bound
loopne
jne
lds
push
xchg
jmp
sub
pop
sub
xchg
dec
pop
das
outs
dec
push
les
ins
dec
xor
stc
data16
dec
imul
or
loopne
jmp
cmp
inc
dec
jnp
stc
aas
push
xor
sbb
ds
push
(bad)
jmp
push
dec
mov
xor
mov
dec
rol
rcr
pop
js
iret
rcl
out
loopne
in
xor
jecxz
mov
movs
cdq
int
fwait
imul
push
lods
mov
cwde
and
cmp
cmc
fcomp
sub
inc
sbb
dec
xchg
mov
mov
(bad)
arpl
push
pop
imul
cmp
into
(bad)
sbb
test
mov
aad
mov
cdq
retf
xor
test
jl
dec
pop
inc
mov
cmc
cmps
and
and
jne
mov
test
sub
es
js
pushf
xchg
cmp
inc
lea
mov
and
fld
and
gs
push
cmp
mov
test
dec
sub
dec
cmp
ror
icebp
cs
fmul
inc
jle
inc
mov
mov
dec
push
cld
fprem
push
sti
jae
cmp
push
imul
ret
lods
push
mov
bound
xchg
gs
int
popa
(bad)
(bad)
aaa
aad
iret
shl
imul
fwait
adc
popa
stos
or
jecxz
fwait
mov
xchg
pop
dec
dec
mov
mov
aam
xchg
not
js
aas
test
test
and
rcr
jo
fist
sub
push
dec
add
add
or
lar
stc
push
mov
test
mov
add
mov
pop
loope
mov
xor
ds
(bad)
repz
fcom
pop
mov
jno
retf
div
movs
dec
pop
pop
pop
ret
xchg
xchg
xor
mov
test
and
xchg
push
mov
outs
mov
loopne
cli
xor
xchg
add
in
jg
lahf
inc
add
xor
fisub
sub
out
outs
outs
cld
push
sub
scas
leave
loope
xor
and
rol
jo
imul
mov
inc
mov
inc
fchs
loopne
fcomp
jns
rcl
test
xor
xchg
pop
and
mov
enter
push
sahf
adc
out
pop
or
popa
jle
in
ret
test
adc
into
mov
rcr
loopne
aad
cmp
test
arpl
push
cmp
es
lea
or
movs
push
mov
enter
sub
(bad)
and
test
mov
cwde
xor
xchg
mov
bound
iret
aas
jae
cmp
bound
mov
lds
push
inc
pop
jo
mov
mov
aas
cmp
add
(bad)
mov
adc
retf
(bad)
enter
icebp
dec
inc
in
and
retf
imul
push
sub
pop
jno
test
push
rcl
pop
push
imul
or
cmp
jns
mov
bound
pop
pop
push
inc
sub
dec
jmp
jnp
(bad)
ficomp
add
gs
movs
aaa
mov
scas
and
in
outs
dec
sub
fadd
clc
arpl
sbb
jnp
test
addr16
push
mov
adc
push
mov
jp
(bad)
fadd
scas
jg
or
or
pop
push
dec
in
clc
mov
jle
cld
inc
mov
ja
push
add
lea
jnp
jns
cmp
out
rol
mov
ss
pop
cmove
or
or
(bad)
pop
js
hlt
xor
cdq
imul
and
jne
movs
xor
ret
lea
enter
neg
jnp
ror
mov
mov
in
iret
pop
inc
hlt
push
clc
jne
lea
inc
mov
cmp
pop
repnz
stc
lahf
adc
or
mov
movntps
jle
sub
out
mov
pushf
clc
ja
fimul
pusha
int
inc
xor
inc
cld
sbb
les
pop
push
push
stos
iret
mov
xor
test
stos
push
xchg
std
aas
push
xchg
cmp
add
or
cmp
(bad)
in
icebp
pop
jmp
push
hlt
aaa
mov
mov
shl
and
cmp
iret
mov
cli
pop
scas
(bad)
ins
jns
dec
cmps
xlat
jle
inc
mov
cwde
mov
loop
inc
push
mov
out
aam
int
outs
outs
add
les
adc
pop
data16
lods
xchg
leave
mov
aaa
mov
test
sbb
push
mov
(bad)
popa
imul
and
neg
hlt
push
cdq
add
(bad)
mov
jne
mov
out
aas
dec
loope
outs
xchg
inc
sahf
sar
mov
mov
add
add
mov
jns
push
fs
fild
push
je
ss
push
jg
fwait
mov
into
push
(bad)
ffree
stc
adc
dec
pop
shl
jno
and
clc
jecxz
fs
bound
push
inc
daa
xor
jnp
xor
and
das
out
and
add
mov
fcom
repnz
mov
fdivr
sub
movs
int3
div
dec
jmp
aam
or
jp
mov
push
call
stos
scas
jg
and
push
pusha
adc
cs
xor
icebp
sbb
pop
das
jnp
pusha
mov
int
scas
sub
jecxz
push
or
movs
out
mov
jae
push
adc
ja
push
test
(bad)
fild
jns
pop
pushf
fxsave
or
push
iret
popf
sub
inc
mov
or
pop
(bad)
stos
inc
cld
pop
cdq
int
mov
aad
add
out
mov
pop
dec
adc
sbb
leave
fadd
leave
pop
adc
mov
and
clc
imul
xor
int3
pop
adc
addr16
rep
int3
mov
adc
lods
xlat
sbb
and
mov
outs
shl
cmps
jle
push
push
push
in
sbb
adc
sub
mov
repz
jns
clc
call
in
ja
inc
int
enter
jae
push
into
push
jbe
pop
loopne
in
or
jmp
jo
inc
xchg
push
push
inc
cli
cld
push
jmp
inc
or
jecxz
daa
call
out
retf
jp
lods
rcl
jmp
dec
mov
jo
movs
arpl
mov
mov
xor
aaa
mov
test
jl
and
ins
jns
adc
dec
das
outs
ss
cmp
jge
stos
adc
push
and
inc
ins
or
xchg
adc
push
mov
call
sbb
lods
cs
xor
sub
mov
or
or
xlat
ror
or
dec
inc
push
push
stos
mov
je
pop
inc
ins
clc
add
into
jg
xchg
and
push
sti
pop
call
pop
pop
xor
xchg
add
(bad)
mov
loop
xor
jns
fwait
mov
add
les
test
ja
sub
cld
jmp
add
movs
push
pop
dec
cmp
stos
into
sub
sub
fstp
cmp
(bad)
cld
aas
sub
pusha
enter
mov
xchg
out
ficom
fdivrp
and
push
fnsave
imul
xor
mov
fwait
push
inc
mov
cmp
rol
scas
lods
retf
shl
mov
gs
and
inc
and
dec
push
mov
or
cmp
lock
adc
push
cwde
retf
sub
inc
mov
xchg
xchg
jp
pop
adc
pusha
nop
xchg
mov
lea
cmp
dec
enter
in
add
retf
inc
ret
fs
mov
pop
dec
int
jno
test
aad
int3
dec
movs
retf
pop
jg
mov
into
inc
lods
sbb
repnz
xor
xchg
xor
out
gs
push
xor
push
out
jns
icebp
sub
stc
ja
jecxz
outs
ins
lock
lock
or
js
jae
fcom
and
outs
push
adc
mov
leave
out
jg
xchg
div
or
mov
pop
mov
add
jl
jge
jae
sub
sub
sub
add
into
pop
adc
push
cvtpi2ps
in
mov
in
ins
sub
mul
rcr
hlt
cld
aas
clc
push
cmp
sbb
sti
jg
sub
xor
enter
sbb
imul
outs
outs
mov
sbb
scas
add
xor
repz
add
jg
sar
sub
fyl2xp1
addr16
ins
js
adc
sub
pop
mul
add
sub
pop
adc
sbb
shl
sbb
ds
cmp
xchg
jg
dec
mov
adc
push
fcom
xor
and
ss
gs
ja
cwde
scas
icebp
mov
inc
iret
std
mov
in
dec
fdivr
pop
sbb
jle
dec
stc
(bad)
xlat
(bad)
mov
stos
stos
sahf
leave
push
clc
add
mov
(bad)
jge
dec
dec
inc
sub
push
ret
popf
hlt
cld
sub
xor
sar
in
jno
pop
mov
dec
push
jne
or
xlat
lds
into
mov
shl
sar
jb
add
mov
or
cmp
fild
inc
xchg
inc
cmp
ds
add
dec
mov
imul
cmp
add
aad
int
loop
or
push
sbb
dec
and
cmc
xchg
lods
push
mov
lds
cmp
call
push
or
push
sub
sbb
or
sbb
mov
mov
in
pop
fisttp
adc
stos
push
sbb
iret
int
lds
push
sbb
and
enter
xor
(bad)
cmc
test
jl
mov
movs
test
movs
sbb
jp
cdq
leave
mov
in
jge
jmp
cs
adc
daa
cld
shr
and
add
and
fbld
mov
outs
pop
mov
jbe
mov
scas
sahf
ss
cli
push
jmp
xchg
push
add
daa
sub
fistp
ins
loop
rol
dec
clc
inc
jle
in
and
lods
enter
push
bound
cmp
popa
fisubr
scas
gs
in
enter
xchg
inc
and
out
ror
cmc
mov
sbb
jle
adc
les
push
ret
stos
test
jecxz
pusha
mov
xchg
cmp
rcl
lea
cwde
movs
inc
push
push
and
ins
jo
jae
int
mov
(bad)
xchg
mov
jl
inc
xchg
mov
fst
jp
mov
xchg
lock
fwait
sub
jb
das
sub
popa
push
(bad)
cs
sbb
(bad)
jmp
rcr
mov
jmp
inc
stc
(bad)
call
clc
xchg
mov
mov
fdiv
leave
stos
mov
mov
pop
outs
loope
ja
sbb
xor
or
sahf
hlt
stos
pop
fld
fidiv
test
dec
jecxz
xor
xor
dec
pop
(bad)
mov
ss
inc
lds
inc
xchg
adc
inc
(bad)
mov
or
pop
lods
add
and
loope
dec
aam
imul
adc
faddp
inc
vpsrad
aad
shr
or
js
jnp
mov
inc
scas
std
jecxz
or
arpl
dec
xchg
push
push
mov
outs
adc
pop
xor
jae
inc
xor
scas
mov
xor
aaa
add
inc
cmp
movs
mov
daa
xchg
adc
xchg
jae
popa
cdq
nop
pop
out
(bad)
aam
jo
mov
or
iret
sub
jae
test
jns
je
pop
and
mov
mov
(bad)
xchg
dec
jne
scas
inc
pop
test
je
cli
neg
mov
fcomp
xor
sub
stos
adc
xor
add
fstp
and
ret
ds
pushf
jg
sub
aad
and
adc
scas
loopne
xor
les
ins
or
add
and
leave
fidiv
push
and
(bad)
jge
add
movs
stos
retf
cs
retf
push
cmc
test
mov
lahf
icebp
mov
push
(bad)
repz
fmul
mov
pusha
add
mov
das
xor
pop
inc
or
aaa
dec
ds
mov
enter
rcl
repz
mov
test
pop
or
xchg
js
outs
sahf
adc
data16
rcl
push
xchg
std
and
xchg
nop
xchg
scas
xchg
les
xchg
ficom
cs
adc
(bad)
sbb
ins
jae
loop
mov
das
js
xchg
push
mov
push
and
pop
mov
dec
arpl
xor
add
jbe
in
outs
mov
cmp
lods
jmp
cmp
mov
dec
dec
popa
fistp
pusha
push
pop
mov
shr
sub
enter
enterw
outs
or
out
in
add
add
loopne
mov
add
inc
mov
inc
sbb
mov
xor
pop
cmp
cmc
pop
movs
inc
sub
xor
sub
or
xor
repnz
imul
cli
bound
add
or
and
dec
imul
leave
movs
sbb
xchg
das
pop
aaa
mov
mov
arpl
repz
cdq
sahf
movs
icebp
mov
dec
outs
mov
cdq
mov
and
push
(bad)
aad
sub
call
push
inc
mov
iret
icebp
add
dec
leave
sahf
cmps
jp
mov
sbb
jae
sub
pop
xor
sbb
mov
dec
test
add
jbe
js
push
dec
ficomp
ret
inc
and
pop
lea
lock
fmul
ror
loopne
dec
sbb
sub
jo
shl
sbb
out
pop
sbb
inc
mov
(bad)
pop
inc
jbe
and
int
and
loope
into
(bad)
pop
aas
repz
jno
mov
ins
xchg
mov
loope
jle
xchg
adc
push
rol
lods
mov
jns
clc
add
mov
xchg
xchg
sub
bound
jle
sub
hlt
adc
pop
inc
bound
xor
mov
mov
push
pop
daa
and
retf
xchg
and
inc
pop
jb
cmc
adc
movs
add
inc
pop
push
cmp
mov
cmp
sub
push
(bad)
push
mov
xlat
nop
mov
sbb
add
jne
or
mov
bswap
fsubr
inc
inc
add
xor
mov
pusha
dec
iret
fcmovb
retf
test
xchg
das
cld
fcomp
add
stc
int
jo
enter
test
stos
jae
adc
jmp
inc
mov
mov
mov
sub
adc
lahf
fnstenv
mov
pop
mov
inc
mov
into
xor
jne
shl
xor
push
and
icebp
inc
(bad)
cmp
retf
inc
sub
fmul
sub
int3
hlt
aas
push
sbb
or
lods
ss
dec
shl
sub
mov
inc
sbb
sbb
xchg
fwait
xor
jb
scas
mov
dec
cmc
push
je
and
push
xor
or
cvttps2pi
sub
das
lock
addr16
mov
iret
or
mov
repnz
mov
nop
aad
ret
repnz
mov
arpl
loope
mov
cmp
sahf
pop
dec
xor
movs
cmp
pop
or
sub
fdiv
ins
inc
push
add
test
and
scas
lock
cmp
in
movs
sub
shl
jl
ja
shl
aas
ins
mov
es
loope
(bad)
shl
fadd
dec
pop
mov
and
outs
sub
mov
in
mov
push
jecxz
add
pop
cmc
inc
scas
inc
in
mov
and
pop
or
cmp
push
movs
retf
or
ins
jb
jbe
sti
cs
jnp
in
imul
in
iret
(bad)
pop
sbb
jae
adc
repnz
(bad)
pop
das
mov
addr16
cmp
into
or
sti
mov
push
jge
cmp
mov
pop
push
jg
out
mov
fistp
outs
jp
out
outs
mov
xor
jl
cmc
retf
out
sub
cmp
mov
or
(bad)
inc
pop
lahf
jnp
dec
jl
cmc
push
(bad)
push
(bad)
cmp
neg
(bad)
push
push
(bad)
sub
add
mov
push
aas
movs
sbb
lock
mov
xor
jb
ret
mov
or
inc
in
test
movs
mov
popf
jl
sbb
repz
sti
xchg
mov
sbb
mov
in
(bad)
dec
xchg
fnstenv
retf
loop
loope
xor
repnz
mov
daa
das
mov
push
jg
jae
adc
retf
xchg
cs
repnz
mov
pop
jle
loopne
(bad)
xor
jge
data16
stos
arpl
inc
lods
or
pop
fdivrp
lods
and
aad
addr16
dec
ss
mov
push
add
cmp
adc
cmp
es
ins
arpl
pop
xchg
adc
xor
add
cdq
into
(bad)
out
push
iret
push
jmp
jmp
xor
and
mov
nop
cmp
(bad)
mov
or
push
jae
ja
pop
enter
jae
popf
in
jle
shr
sbb
loope
jne
push
mov
repz
push
test
sub
sbb
mov
mov
sbb
in
jl
mov
or
sub
test
mov
cwde
push
mov
mov
fwait
lods
sbb
or
movs
or
lods
sbb
pop
inc
mov
jb
push
xor
popa
sbb
call
mov
pop
leave
int
mov
adc
cmp
mov
rcr
adc
dec
mov
push
pop
sub
adc
(bad)
xchg
popa
aas
or
mov
fsub
retf
cmp
imul
add
push
test
sbb
fs
xchg
lahf
or
xor
dec
int3
adc
push
lds
call
mov
push
add
movs
mov
dec
fsubrp
cmc
(bad)
inc
outs
(bad)
shl
add
pop
int3
fimul
adc
or
mov
jmp
pop
and
fsubr
mov
imul
cmp
js
xor
add
or
jne
lock
cmp
rol
jne
dec
cdq
pop
jl
add
adc
shr
sbb
jb
xor
lock
jmp
xor
dec
sti
mov
out
mov
or
mov
sbb
outs
and
lds
gs
inc
pop
or
je
popf
sub
push
cmp
gs
pop
adc
sub
mov
xor
pop
xor
and
sbb
sbb
cmp
in
js
test
outs
icebp
sbb
jne
int3
fdivr
jmp
in
(bad)
sub
test
xchg
popa
mov
dec
mov
push
cmp
and
adc
imul
jmp
stos
movs
cwde
and
and
stos
not
out
push
iret
fldcw
jbe
push
push
push
outs
xchg
jge
xor
xor
push
fwait
out
sub
mov
sti
fcomp
rcr
mov
inc
add
push
sahf
cmp
push
cmp
std
test
push
mov
movs
pop
mov
je
inc
fucomip
mov
lods
jmp
data16
push
lahf
out
les
leave
loop
mov
jae
ss
sub
pop
sbb
ins
cdq
fnstenv
test
xlat
sahf
rol
(bad)
ja
loop
jg
jb
adc
jl
lock
lahf
cdq
iret
mov
xor
test
mov
pop
add
loope
jo
sbb
push
adc
loope
dec
retf
push
xchg
cli
jno
dec
push
dec
xchg
sub
sbb
inc
in
lds
(bad)
(bad)
fucomp
test
inc
xchg
aaa
loopne
call
xor
jmp
shl
jno
sbb
repnz
fadd
lods
mov
cs
ror
arpl
push
loop
cmp
aam
or
popf
in
mov
sbb
out
jecxz
enter
sbb
mov
xchg
in
(bad)
xor
mov
mov
in
pop
sbb
dec
in
lods
std
fstp
sub
sub
pusha
sbb
shl
fwait
jg
(bad)
dec
dec
std
and
mov
mov
jmp
lock
ret
inc
outs
lds
xchg
sub
pop
mov
sbb
or
cs
nop
movs
mov
test
pop
xor
mov
or
jge
add
test
push
into
stos
and
mov
je
mov
mov
sub
cli
pop
loop
in
cwde
dec
dec
loopne
push
repnz
push
and
cmps
retf
daa
mov
inc
cmps
jle
stc
and
jg
push
popa
inc
cs
aaa
or
mov
out
shr
int
xor
bnd
loopne
lea
out
das
jg
imul
shl
psubd
(bad)
repnz
(bad)
ds
imul
enter
mov
push
inc
cmp
imul
inc
jmp
or
lods
(bad)
jno
cld
mov
ror
test
and
jl
enter
or
retf
pop
dec
repz
xchg
cmp
outs
cmp
test
mov
ins
stos
mov
push
cmp
leave
mov
dec
loopne
out
jbe
jp
in
sbb
jne
out
test
mov
addr16
arpl
mov
sbb
sub
in
xor
enter
lods
push
sbb
sbb
bound
aam
les
push
popa
or
shr
inc
add
js
loop
sbb
ins
lds
push
mov
aaa
xor
mov
cmp
popa
daa
jnp
cmp
cld
pop
pop
mov
popf
std
lods
or
(bad)
fdivr
mov
adc
inc
mov
xor
cs
test
jns
aas
and
iret
xchg
cmp
icebp
pop
and
(bad)
push
mul
push
fdiv
fsub
inc
sub
gs
sbb
cmp
mov
dec
(bad)
lods
or
and
jne
ins
fld
xchg
popa
js
xor
test
xchg
dec
dec
js
retf
adc
shl
push
leave
mov
mov
jle
and
push
and
cmc
cwde
fwait
cmps
dec
pushf
xchg
aam
mov
mov
xchg
int
je
iret
sbb
fdivr
(bad)
mov
ins
xor
jl
int
jae
lea
mov
jecxz
inc
mov
call
clc
out
push
xchg
jbe
in
clc
pop
ins
fimul
out
ret
mov
(bad)
pop
lea
shl
mov
xchg
pop
jle
mov
inc
sbb
inc
popf
jns
mov
or
mov
mov
clc
arpl
ret
sbb
add
ja
std
or
hlt
mov
into
xchg
mov
int
jl
pop
cmp
or
or
sbb
xchg
pop
add
dec
fbstp
mov
stos
dec
pop
or
in
icebp
mov
dec
push
lea
fsubr
inc
xchg
or
ds
push
or
fisub
add
fwait
and
push
push
dec
or
shl
push
jg
mov
cmp
(bad)
fisttp
sub
(bad)
(bad)
outs
iret
enter
movs
arpl
add
call
sbb
pop
popf
sysenter
and
je
mov
push
xchg
in
sbb
or
add
pop
mov
mov
fmul
retf
loop
enter
jbe
inc
lea
mov
cmp
jmp
inc
sub
lea
fistp
cmp
pop
mov
fcom
cmp
pop
push
cmp
cmp
aaa
inc
stc
jne
sahf
daa
or
aaa
and
xor
test
or
ins
int
(bad)
cdq
data16
xchg
mov
or
pop
push
mov
stos
or
dec
and
mov
push
cwde
jmp
jp
cwde
and
call
add
arpl
shr
and
mov
sbb
or
adc
fst
sub
push
leave
fbstp
jg
sub
daa
adc
pop
in
mov
and
sahf
outs
sub
jg
in
ror
sbb
add
dec
cli
cmp
cmp
jge
js
push
push
arpl
push
cmp
push
leave
aaa
into
mov
sbb
xor
push
add
arpl
adc
addr16
mov
cld
leave
je
sub
ss
inc
mov
jbe
icebp
mov
js
out
movs
sub
in
ror
cmp
sbb
lds
clc
mov
dec
int
push
neg
cmp
jl
add
or
mov
call
repnz
test
dec
je
xor
and
mov
mov
xor
or
jmp
jae
fld
or
into
cmp
sbb
test
ss
and
xchg
xor
pushf
xor
aad
jae
mov
pop
adc
add
mov
mov
add
sbb
jnp
sbb
jmp
lahf
popa
and
movs
push
in
jge
inc
jae
inc
popf
mov
and
in
ja
mov
adc
data16
pop
mov
das
js
into
call
popf
mov
mov
int
xchg
test
aam
dec
ret
inc
mov
retf
cmps
or
push
mov
cmp
sbb
dec
enter
ja
inc
icebp
jmp
xor
or
dec
not
xchg
xchg
xchg
jne
jge
popa
pop
and
das
pop
adc
push
mov
pop
div
or
push
mov
outs
pop
(bad)
push
fidiv
bound
jb
adc
jae
jns
sbb
xchg
push
or
pop
mov
or
mov
sbb
int
rol
jmp
hlt
adc
xor
mov
xor
xchg
mov
xchg
push
pusha
jmp
add
test
imul
mov
shl
pop
popf
scas
push
mov
cmps
ficom
push
cmc
dec
jge
clc
add
in
int3
outs
sub
add
dec
test
mov
mov
inc
jle
jecxz
loopne
jae
bound
inc
dec
in
xor
pushf
pop
xchg
aaa
cli
pop
xchg
jle
aam
jp
xchg
and
inc
sbb
sbb
xor
cmp
adc
mov
pusha
xchg
movs
push
add
jno
(bad)
dec
push
and
pushf
dec
and
and
add
jnp
call
mov
in
sub
xchg
mov
(bad)
mov
pushf
push
inc
dec
jbe
ins
cli
adc
adc
cmc
shl
add
adc
add
std
out
cs
push
dec
fisub
push
mov
test
iret
mov
(bad)
push
and
mov
xchg
aam
jae
lods
mov
push
xor
or
mov
or
(bad)
aaa
mov
ja
imul
jmp
es
jg
into
pop
mov
stos
and
jno
cmp
add
(bad)
sbb
(bad)
mov
push
mov
popf
fwait
add
je
inc
pushf
cmp
mov
das
test
arpl
cmp
cmc
cmps
icebp
loop
outs
or
jne
xor
ins
mov
lods
dec
movs
cmp
mov
mov
lods
sbb
mov
and
or
lock
retf
popa
std
pop
jbe
cld
push
ins
std
xchg
shl
sub
adc
xor
fiadd
push
jl
pusha
test
imul
imul
ins
(bad)
inc
dec
mov
and
mov
test
fld
sub
jmp
mov
lahf
sbb
cmp
jle
jge
je
out
jo
adc
inc
mov
sti
(bad)
xchg
jle
sbb
mov
xor
mov
mov
xor
add
ins
(bad)
jbe
xor
lds
neg
adc
stos
mov
pop
dec
mov
enter
mov
fst
je
mov
retf
rol
pop
ins
bound
push
jge
lahf
dec
scas
add
mov
and
out
dec
xlat
add
sub
inc
in
pop
jo
test
nop
mov
das
fsub
sub
in
loope
pcmpgtb
push
mov
imul
test
cmp
lods
cdq
xchg
fdiv
inc
dec
sbb
xor
mov
ins
(bad)
dec
imul
cwde
jmp
cmps
xchg
scas
rcl
aas
fistp
sub
adc
dec
clc
sub
mov
xor
xor
pop
xchg
enter
or
or
not
fadd
sub
or
pop
cld
iret
cmp
mov
test
or
mov
sahf
lods
adc
xchg
shl
mov
in
xchg
mov
sbb
jae
push
test
or
popa
sub
ret
not
cld
push
popa
popf
cdq
xchg
sub
mov
popa
enter
test
add
sti
mov
push
addr16
enter
or
inc
push
adc
mov
loop
in
add
inc
push
sub
adc
mov
adc
push
jle
sbb
int3
sbb
inc
stos
cmp
outs
mov
jmp
adc
lock
mov
retf
mov
not
nop
aas
stc
mov
arpl
or
adc
jp
in
mov
adc
(bad)
mov
mov
mov
mov
popf
mov
dec
sub
dec
movs
sub
add
lock
inc
(bad)
sbb
xor
addr16
sahf
cld
xchg
scas
cwde
cmp
cmp
push
fistp
out
add
hlt
(bad)
movs
sub
cmp
cmp
arpl
and
or
mov
push
inc
int3
jb
pop
mov
or
xchg
js
xor
jno
fisttp
stc
sti
loopne
test
xor
(bad)
in
cli
leave
pushf
mov
addr16
je
mov
push
push
retf
mov
dec
mov
ficomp
mov
adc
popa
mov
or
ror
mov
retf
mov
outs
adc
lahf
aas
sub
clc
lods
cmp
pop
cwde
cmp
sbb
xchg
mov
push
mov
dec
ja
imul
(bad)
pop
push
and
sbb
jecxz
mov
adc
pop
lock
js
jo
mov
gs
mov
jb
dec
jl
push
rol
(bad)
fiadd
div
mov
std
stc
mov
jmp
mov
lods
loopne
stos
nop
mov
rcr
loope
shl
dec
inc
mov
(bad)
std
mov
loopne
std
jl
mov
cmp
xor
icebp
std
idiv
pop
mov
js
add
clc
scas
fnsave
mov
xchg
xor
jns
movs
scas
pushw
mov
mov
cmp
xchg
pop
add
push
mov
aaa
enter
and
cmp
or
cmp
cld
(bad)
pop
out
mov
out
mov
lds
dec
outs
mov
mov
or
pop
repz
ret
mov
mov
pop
xchg
cmp
mov
lods
imul
fucom
xor
sbb
les
sub
push
mov
pop
jmp
mov
xchg
and
out
jecxz
sbb
add
shl
ds
xor
push
or
sub
cs
sti
fld
cmp
stos
cmp
retf
jl
movs
ror
in
mov
sbb
lods
jae
popf
scas
inc
out
or
mov
aam
mov
mov
iret
sbb
rol
jb
cmc
cwde
pop
add
xchg
inc
pop
sub
out
test
int3
xor
imul
jbe
sub
(bad)
xchg
fisttp
jmp
das
jb
jno
sub
cmp
mov
mov
stos
ret
jnp
mov
pop
arpl
cmp
leave
add
popf
cmps
sub
push
cwde
std
ret
pop
lods
sahf
outs
cmps
xchg
les
add
mov
bound
aas
hlt
push
in
mov
imul
mov
(bad)
jnp
jnp
add
xor
adc
or
stc
push
ret
(bad)
cmps
jnp
lds
dec
sub
sbb
icebp
stos
fwait
in
push
fld
cdq
sub
jg
mov
adc
xor
aam
inc
pop
add
sbb
cmp
and
or
jle
pusha
jmp
push
jne
fsub
out
fnstsw
mov
aas
jp
pushf
sti
fadd
aaa
enter
imul
popf
pop
jmp
fisubr
pop
mov
neg
(bad)
cmp
jne
cmc
sahf
fwait
ret
add
sub
mov
rcr
retf
pop
sub
cmc
mov
jb
lods
sti
adc
sti
idiv
std
jne
in
jg
stos
cld
ss
sahf
ss
loopne
in
jo
cmp
mov
mov
idiv
sbb
je
out
lds
mov
dec
aaa
fs
ficom
outs
lods
jge
outs
jmp
in
or
lock
xchg
pop
inc
cs
ficomp
pop
ret
pop
out
jnp
stc
jmp
repnz
js
js
stc
imul
mov
cmp
fdivrp
rol
in
push
adc
cs
mov
or
test
mov
pop
imul
push
stos
fdiv
inc
in
aad
(bad)
pop
(bad)
out
push
out
fdivrp
shl
jp
cmp
aaa
std
cld
das
stos
push
sahf
cmp
inc
inc
clc
repnz
jmp
cmp
stos
ficomp
fisubr
sbb
fwait
in
sar
fld
mov
pop
jge
movs
mov
ds
mov
xchg
xor
test
mov
repz
ins
push
sub
stos
das
leave
cmp
ds
mov
int
xor
cli
hlt
pop
fsubp
shl
pop
cmps
mov
push
outs
icebp
xor
ds
fadd
mov
pop
mov
cmp
cmp
retf
mov
fsubrp
inc
hlt
outs
sub
arpl
mov
mov
ret
ins
inc
jge
sbb
push
stos
(bad)
xor
mov
cli
xchg
cdq
pop
(bad)
cs
retf
pop
mov
push
xor
xchg
fwait
add
fnstsw
(bad)
and
in
pop
retf
ja
into
mov
jle
xchg
pop
outs
sti
or
ds
xchg
jmp
stos
(bad)
ds
in
dec
(bad)
mov
sar
xlat
pushf
lds
jbe
loop
sub
sti
mov
xor
xchg
push
imul
mov
jmp
cmp
or
jo
and
dec
xchg
repnz
jp
sbb
sbb
fcomp
ds
jno
mov
fwait
jnp
stos
jle
js
fcomi
retf
loope
fdiv
loope
mov
mov
in
push
jg
mov
mov
push
cmp
mov
fcom
js
adc
outs
jecxz
in
mov
int
mov
xchg
sbb
jne
int
push
mov
lahf
imul
retf
std
dec
pop
fnsave
fimul
out
jecxz
xor
fisubr
mov
add
xor
ins
xor
cwde
jno
mov
cmp
sub
push
fisubr
leave
push
je
ja
cmps
lahf
jo
iret
loop
xor
mov
mov
sahf
lock
scas
outs
mov
xor
(bad)
lock
mov
es
mov
inc
mov
inc
imul
in
jmp
xlat
inc
cmp
ja
xor
arpl
call
lea
in
out
aaa
popf
push
cmp
out
imul
jle
in
ficomp
dec
or
xor
sbb
call
adc
jl
ss
(bad)
out
jbe
xor
jae
xchg
mov
xchg
bound
xor
jmp
(bad)
xor
imul
jb
scas
sti
xor
addr16
lock
inc
int
jg
je
mov
and
out
push
in
pushf
ja
ficomp
(bad)
fbstp
mov
test
aas
mov
mov
dec
movq
mov
outs
scas
aas
sbb
xor
xchg
mov
popa
inc
call
es
jg
aaa
idiv
aas
lahf
cmp
dec
lahf
(bad)
std
out
dec
out
sar
jmp
retf
mov
iret
stos
dec
in
mov
pop
lods
push
mov
push
cmps
mov
cmp
jnp
jne
cmp
lods
in
mov
scas
mov
sbb
movs
mov
(bad)
pop
jno
mov
jne
jb
inc
icebp
lahf
jmp
jle
lahf
jne
shr
fnclex
mov
icebp
sahf
mov
mov
mov
pop
fwait
sbb
out
xor
ins
idiv
scas
pop
icebp
dec
jecxz
ror
xor
jne
lahf
push
push
or
stc
div
out
sbb
f2xm1
(bad)
jl
mov
mov
ss
pop
push
mov
jns
retf
outs
mov
repz
pop
js
push
in
jno
mov
popa
push
stc
out
push
jmp
xchg
adc
push
sub
push
mov
dec
mov
xchg
inc
mov
js
mov
dec
lods
and
mov
das
lahf
addr16
xchg
sbb
xchg
push
jle
inc
std
sub
jp
sti
dec
jo
loop
inc
repz
imul
xchg
(bad)
cld
jl
loope
jne
mov
jnp
fdiv
jge
mov
scas
xor
js
ja
call
ret
mov
mov
mov
fcos
out
(bad)
jmp
dec
dec
mov
pop
mov
(bad)
and
iret
sub
sti
cmc
jb
dec
cmp
cmp
inc
or
out
jge
rol
aas
iret
sub
sbb
mov
das
mov
cmp
int
mov
ss
imul
pop
fcmovu
mov
push
out
inc
gs
push
imul
push
jbe
out
push
pop
fcom
xor
cmc
and
xchg
xlat
sbb
addr16
mov
xor
jmp
lods
outs
sbb
hlt
idiv
jle
jbe
fnsave
mov
dec
mov
inc
sahf
mov
nop
jge
(bad)
out
not
fs
call
stos
push
test
outs
and
xor
mov
loope
push
fwait
mov
mov
(bad)
sar
pop
int
call
jp
movs
test
fwait
mov
push
push
mov
jbe
xchg
fistp
or
sub
cmp
mov
dec
fdiv
pop
(bad)
retf
adc
lahf
popf
push
mov
mov
cmp
stos
jmp
jge
jmp
das
mov
icebp
fist
in
push
aad
aaa
adc
pop
mov
mov
call
scas
aaa
outs
push
cmp
call
push
push
shr
test
jecxz
repz
inc
mov
sahf
lock
push
leave
rcl
push
sti
call
test
cmp
mov
(bad)
push
pop
inc
gs
xchg
pop
mov
cli
fs
pop
jecxz
inc
(bad)
jmp
fbld
out
icebp
pushf
call
sbb
imul
mov
push
inc
sar
cld
sub
xchg
arpl
or
push
jl
outs
std
xor
int3
fs
jnp
sub
sbb
jle
sar
mov
test
lea
dec
xor
jle
stc
ret
mov
fdivr
hlt
movs
pop
jnp
movs
mov
xor
jmp
jmp
xchg
aaa
jmp
fs
sbb
ror
call
out
ins
mov
outs
jle
mov
cmp
ftst
dec
jmp
push
push
(bad)
stc
pop
mov
ins
hlt
xor
sar
retf
dec
sbb
ret
scas
pop
sbb
xlat
cmp
repnz
pop
sbb
lds
pop
or
push
cmps
(bad)
movs
inc
mov
ds
mov
(bad)
out
stos
cmp
shl
in
mov
mov
mov
pop
int
cmc
cld
call
scas
outs
(bad)
out
out
push
or
cmc
mov
lahf
dec
jmp
xchg
jg
mov
shl
fsqrt
pushf
out
pop
das
mov
int
push
cmp
ja
mov
jmp
fisub
test
neg
push
mov
cdq
lods
imul
and
aaa
pop
push
cld
imul
test
cld
mov
inc
add
push
addr16
lods
(bad)
fld
sub
mov
mov
mov
das
pop
int
(bad)
iret
out
dec
dec
pop
int3
mov
das
cmps
cmps
in
pop
gs
inc
sahf
mov
shl
addr16
push
pop
pop
(bad)
in
leave
inc
div
inc
and
call
neg
pop
mov
ja
outs
dec
dec
sub
icebp
inc
fdivr
add
mov
pop
aam
cmp
xchg
test
dec
ja
ja
or
rcr
sub
xchg
(bad)
les
lahf
jmp
fsubrp
cli
(bad)
(bad)
mov
pushf
mov
cmp
in
mov
pop
imul
lods
mov
cmp
push
stos
fild
mov
jle
xchg
cmp
das
ins
push
mov
mov
pop
add
int3
pop
pop
fcom
movs
scas
pop
pusha
int3
not
mov
(bad)
in
mov
fbld
pop
out
mov
sbb
addr16
mov
fnstcw
das
dec
jns
jge
test
out
shl
mov
not
scas
sub
popa
lds
add
fsub
fstp
mov
(bad)
pop
leave
out
mov
mov
inc
push
inc
xchg
div
xchg
cdq
mov
pop
dec
ss
dec
mov
je
cwde
data16
iret
push
jmp
pop
push
inc
je
dec
mul
xor
lock
pop
(bad)
jge
mov
mov
mov
sub
scas
movs
pop
loop
fidiv
data16
fsub
mov
out
push
mov
xchg
cmp
das
inc
cmps
imul
mov
inc
out
(bad)
mov
cmp
fdivr
adc
int
or
popf
loopne
fmul
xor
add
(bad)
xchg
push
fnclex
je
loopne
hlt
inc
pop
(bad)
push
inc
pushf
add
shl
pop
enter
cmps
aas
inc
mov
daa
cdq
shr
push
add
call
(bad)
(bad)
dec
cli
pop
arpl
(bad)
daa
xchg
arpl
int3
data16
dec
jns
mov
push
or
retf
mov
add
inc
fcomi
lods
loop
adc
gs
es
test
rol
dec
sub
fbstp
ins
ds
imul
jo
imul
xor
sti
and
dec
bound
or
loopne
and
popf
push
(bad)
mov
loopne
shl
push
repnz
cld
sbb
jl
pop
cmc
push
pop
ror
mov
repz
lock
hlt
test
mov
js
inc
clc
xor
adc
stos
stos
mov
fxam
mov
jge
adc
pushf
add
xor
inc
xor
lock
sub
push
fdivr
mov
xchg
sahf
mov
mov
je
repz
mov
dec
jno
aad
popf
dec
sbb
jbe
stos
gs
(bad)
mov
test
and
inc
sbb
leave
mov
call
mov
js
ds
xchg
xor
fnstsw
mov
xor
(bad)
fdivrp
mov
daa
xchg
and
inc
gs
hlt
xchg
pop
inc
sub
test
pushf
enter
popf
xor
xor
out
xchg
scas
pop
mov
mov
sahf
or
or
add
adc
lahf
pop
mov
cmp
or
stc
cmps
add
(bad)
adc
(bad)
mov
fiadd
and
xor
int3
push
cmps
stc
ss
mov
or
jbe
es
dec
mov
int3
push
cmps
std
aaa
push
sbb
(bad)
shr
sbb
adc
or
inc
pusha
clc
out
adc
test
cmp
inc
iret
out
mov
retf
inc
popa
cdq
sar
loope
inc
jae
jne
fild
aad
adc
ins
sbb
imul
loop
cmps
mov
addr16
out
jns
push
pushf
lock
cmp
inc
xlat
add
cwde
loope
jo
mov
adc
(bad)
mov
jg
call
and
push
xor
dec
shl
and
aas
mov
test
mov
lock
daa
mov
mov
adc
cmps
mov
push
xchg
icebp
imul
dec
mov
mov
cmp
cmp
js
(bad)
jecxz
sti
jmp
xor
dec
adc
or
sahf
xchg
rcl
rol
mov
cmp
add
mov
sub
jbe
adc
or
imul
and
rol
enter
sub
rep
(bad)
neg
fadd
and
xchg
adc
sbb
loopne
pop
scas
mov
add
cs
xor
mov
fld
fsub
xchg
or
lds
sub
in
cwde
les
xor
adc
je
into
fdiv
cdq
imul
inc
jno
or
ins
fcomp
bound
cld
push
out
jbe
mov
imul
and
jo
cld
pop
and
mov
mov
retf
jle
ror
pop
mov
sub
mov
jmp
xchg
es
jl
movs
inc
dec
cs
in
pop
retf
enter
jp
cmps
jle
cmp
add
jge
je
out
push
mov
cmc
cmc
aad
sahf
sahf
loopne
pop
xor
and
movs
lock
adc
lea
out
movs
or
mov
and
mov
rol
mov
inc
push
and
mov
pop
rcl
scas
or
push
xchg
mov
add
mov
pop
or
inc
sub
call
sbb
mov
jle
and
pop
stc
jle
and
lds
cdq
stos
sti
mov
aaa
sub
aam
xchg
dec
and
jecxz
mov
pop
and
nop
xchg
cld
test
pop
mov
sub
dec
mov
les
shr
sub
repnz
daa
mov
in
aas
dec
sub
sbb
fisub
outs
jae
jo
mov
data16
shl
loop
or
imul
shl
jne
mov
xchg
test
ja
xor
leave
pushf
in
add
ja
xor
or
mov
outs
add
push
(bad)
adc
jb
sbb
add
lods
ficom
push
xchg
fisubr
jmp
adc
xor
outs
inc
mov
jmp
fstp
mov
cmc
push
bound
cmp
out
test
ja
xchg
leave
mov
and
dec
fst
int
xchg
out
loop
scas
das
push
sbb
pop
rcr
and
mov
in
dec
or
lahf
sub
add
mov
cmps
test
push
inc
pop
xchg
add
push
sbb
in
sub
push
ja
mov
pop
stos
adc
loop
xor
fs
jno
mov
or
ja
push
imul
outs
pop
add
pop
or
and
inc
pop
mov
mov
dec
(bad)
pusha
fs
popf
je
imul
test
mov
sti
outs
cmp
shl
sub
pop
and
int3
retf
mov
jmp
mov
jmp
or
push
add
ret
fcom
lods
je
mov
xchg
jmp
fcmove
push
pop
mov
cmc
xor
cmps
jecxz
fistp
pop
je
jp
out
aad
ror
jle
gs
ret
lahf
xor
stos
and
mov
(bad)
sub
fstp
jmp
into
pop
out
(bad)
fadd
jg
gs
mov
mov
out
sub
inc
xchg
adc
movs
pushf
outs
mov
fs
or
and
fmul
(bad)
cli
dec
jl
sbb
xor
jae
and
outs
add
icebp
push
out
xor
lahf
(bad)
sub
dec
mov
outs
rep
mov
mov
shl
cmp
mov
(bad)
mov
sbb
xchg
jg
and
out
imul
lds
add
pop
hlt
imul
int
inc
aad
out
and
jbe
shl
xlat
mov
and
int
mov
out
xlat
jmp
call
push
jno
mov
aaa
xor
adc
cmp
les
adc
push
repz
sub
(bad)
mov
cmps
mov
dec
push
push
cmp
mov
pushf
aas
cmp
xor
movs
stos
aad
cdq
add
jge
daa
push
xchg
push
push
mov
(bad)
ret
and
(bad)
leave
and
scas
jmp
dec
sbb
dec
repz
pop
cmc
dec
stos
pop
mov
clc
mov
out
xor
cli
imul
mov
pop
adc
or
adc
cld
cmps
mov
sbb
dec
adc
sub
push
mov
pusha
idiv
jns
pop
push
test
lds
sbb
inc
and
retf
and
mov
test
adc
xchg
or
cmps
mov
adc
sbb
ja
or
xchg
(bad)
jge
mov
(bad)
jecxz
aaa
(bad)
mov
xchg
cld
sti
and
scas
pop
mov
fbstp
repnz
ds
pop
(bad)
cmp
adc
inc
add
adc
inc
inc
cld
dec
sub
dec
je
mov
inc
push
mov
sub
xor
ss
fcom
dec
xchg
jo
addr16
push
xchg
mov
out
ret
int3
lods
inc
mov
out
cmp
xchg
xor
mov
daa
sbb
cmp
mov
call
loope
sbb
mov
fdivr
mov
add
xor
dec
sub
data16
jp
movs
mov
dec
mov
or
sub
js
ins
arpl
hlt
mov
jbe
fmul
rcr
inc
add
fbstp
mov
movs
add
push
add
and
sbb
test
out
mov
fsub
push
mov
mov
adc
xlat
cli
std
fmul
mov
dec
push
mov
in
jge
or
or
fstp
fstp
cmp
jmp
xchg
mov
sbb
jmp
test
mov
sar
xor
and
add
cmp
push
enter
js
xor
jo
scas
jecxz
leave
add
aam
sbb
repnz
call
mov
xchg
retf
fs
cmps
bound
pop
(bad)
xlat
cmc
xchg
pop
xor
in
in
and
pop
stos
mov
(bad)
push
mov
cmc
and
push
push
dec
je
test
fmul
stos
xor
jns
jmp
dec
das
ret
fimul
push
pusha
scas
adc
cdq
inc
lods
jp
pop
icebp
(bad)
dec
and
xchg
cli
push
repnz
adc
loop
clc
retf
jp
sub
mov
and
stos
mov
daa
xor
push
xchg
mov
sub
add
xor
out
sti
inc
hlt
and
adc
in
jmp
into
stos
xor
aaa
xchg
jecxz
push
imul
dec
scas
clc
test
fst
imul
jmp
jbe
jle
mov
cmc
pushf
and
or
fbstp
fmul
out
push
mov
loope
mov
pusha
cs
shr
inc
dec
add
xchg
cmp
mov
lock
(bad)
jecxz
jge
std
aaa
inc
cmp
mov
inc
pop
mov
mov
sbb
push
clc
pushf
outs
into
mov
js
or
nop
aad
add
in
repz
icebp
test
out
int3
cwde
pop
imul
and
push
add
and
cmps
outs
outs
fwait
mov
xor
xchg
out
adc
aas
cmp
lds
pop
pop
and
movs
adc
lods
pop
push
psrlq
retf
mov
add
adc
ret
adc
test
stc
and
cmp
pop
imul
in
rol
outs
lea
inc
sub
mov
push
add
adc
sub
int
lods
jecxz
inc
mov
pop
iret
pop
and
into
jae
retf
dec
(bad)
jns
(bad)
sbb
mov
cwde
jg
inc
(bad)
pop
lock
pop
mov
std
mov
outs
je
lea
or
sahf
jl
push
dec
outs
mov
mov
out
lods
push
mov
sar
inc
adc
cmp
and
mov
je
fnstcw
addr16
hlt
cld
sub
call
movs
cmp
mov
rol
cmp
loop
push
aad
popf
mov
lahf
bound
cmps
(bad)
lods
add
xchg
mov
fadd
mov
push
cdq
mov
fwait
mov
or
push
push
jecxz
adc
retf
in
loop
sub
pushf
into
aas
mov
sbb
xchg
js
(bad)
jo
shr
outs
add
daa
xlat
sbb
int
sti
and
or
mov
adc
retf
add
or
fidiv
push
sub
xchg
stc
rol
fcomp
mov
leave
jno
jnp
mov
or
sti
es
mov
and
jmp
sub
fstp
arpl
jne
inc
add
int
ja
xor
jle
cdq
ret
inc
xlat
out
mov
dec
inc
push
mov
mov
dec
ror
jg
dec
test
sub
pop
mov
jecxz
push
int3
xor
pushf
dec
inc
sbb
mov
(bad)
push
push
int3
rcr
imul
sbb
mov
sbb
fsub
inc
mov
jle
imul
in
repnz
mov
cmp
fbld
mov
push
(bad)
(bad)
adc
out
ins
rcl
xchg
int3
dec
xchg
pop
ins
test
jl
and
xchg
cli
mov
mov
scas
mov
mov
daa
jmp
mov
push
xor
inc
call
stos
data16
mov
mov
cld
inc
sbb
pusha
(bad)
fidivr
or
rcl
lock
test
mov
sbb
push
bound
cld
and
lods
imul
jnp
xchg
add
outs
mov
mul
pop
dec
cld
xchg
jno
and
arpl
inc
adc
fsubr
fnsave
xor
push
mov
sub
mov
fistp
out
dec
push
out
pop
out
repz
pop
xchg
outs
pushf
repz
dec
jl
and
jno
sbb
movs
(bad)
pop
ret
mov
loop
jmp
add
sti
aad
test
ja
pop
out
ds
out
adc
fninit
mov
rcl
adc
scas
and
jnp
scas
iret
pusha
fistp
push
out
mov
push
sahf
cwde
add
jne
and
(bad)
into
sub
jge
mov
cmp
sti
lods
or
xor
inc
push
fs
mov
jmp
jae
push
mov
or
push
mov
push
pop
push
test
loopne
jmp
pop
ds
out
sbb
mov
adc
lea
mov
adc
push
xchg
mov
or
nop
sbb
dec
sub
loop
jb
loope
(bad)
xor
movs
repnz
cmps
cmp
inc
stos
and
sub
stos
xchg
js
mov
cmp
std
and
mov
cmp
jno
in
pop
out
cwde
ins
ds
adc
aad
stos
mov
sahf
dec
in
jle
jmp
xchg
push
retf
sub
(bad)
and
and
pop
fcomp
or
leave
sub
ins
je
outs
dec
inc
dec
in
loop
mov
mov
push
mov
data16
sub
arpl
push
mov
inc
jp
fucomp
cmps
cmp
je
retf
js
xchg
movsx
lock
mov
dec
neg
add
pop
sar
in
sti
arpl
test
pop
fwait
imul
adc
fs
jmp
inc
pop
repz
jmp
add
movs
leave
fld
lods
rol
mov
jg
mov
cmp
xchg
ror
rcr
xor
cmp
pop
loopne
jge
hlt
xor
scas
mov
stos
pop
or
stc
mov
push
sbb
fcom
shr
ins
add
nop
repnz
cs
and
or
adc
sti
mov
loopne
loope
test
jo
popa
mov
xchg
dec
sbb
pop
push
fxam
ins
clc
push
repz
loopne
mov
into
cs
cmp
mov
xchg
sbb
mov
daa
push
xor
inc
aas
or
sub
ds
sbb
shl
jle
lods
fcomip
xlat
enter
jnp
jecxz
je
adc
lds
cmp
jp
dec
ror
xchg
push
adc
(bad)
mov
xchg
sbb
cli
cdq
icebp
shl
inc
jl
ret
xor
jnp
push
fisub
and
cli
out
test
lds
test
push
xchg
dec
mov
jl
push
sbb
xchg
cli
retf
test
cmps
mov
xchg
sbb
test
jnp
sar
jp
int
adc
fldenv
jne
jecxz
pop
lahf
ret
gs
cmp
xor
mov
cmp
adc
out
xchg
jno
daa
sbb
cs
xchg
adc
or
shl
xchg
xor
mov
rcl
add
rol
sbb
mov
mov
and
call
test
xor
mov
outs
call
test
stos
mov
out
fadd
aas
movs
and
sahf
in
cmp
dec
fmul
mov
jb
dec
das
nop
pop
adc
repz
xchg
and
adc
movs
jb
cld
out
push
daa
imul
pop
jbe
ret
das
inc
xor
inc
ror
pop
leave
repnz
mov
sbb
cmp
ror
(bad)
sbb
fcmove
fadd
sub
pop
js
xor
retf
(bad)
xchg
ret
dec
push
pop
mov
fwait
jno
aam
xchg
outs
cwde
push
pop
cwde
(bad)
fisttp
push
fistp
cmc
cmp
out
xchg
loop
jne
fistp
mov
sbb
push
pop
push
loop
mov
or
shr
or
ds
call
sub
and
push
fidivr
fsub
ds
cmp
repz
pop
or
das
mov
syscall
push
repz
or
push
test
push
imul
enter
jge
cs
mov
jecxz
shr
and
mov
ins
xchg
jecxz
cwde
dec
popa
add
pop
jmp
cli
and
jl
ss
jno
movs
aaa
adc
lock
mov
dec
outs
adc
hlt
int3
outs
das
mov
mov
movs
mov
mov
cmps
jl
mov
add
push
add
sar
dec
mov
int3
xlat
mov
or
cwde
std
cmp
stc
add
jno
lods
leave
inc
xchg
fwait
pop
mov
(bad)
xchg
ja
es
xchg
popa
dec
mov
test
push
sub
test
iret
push
cmp
fstp
aaa
(bad)
rcr
mov
sbb
inc
jmp
or
push
jge
cs
test
and
pop
loope
cmp
stos
das
popa
fs
ins
cld
rol
js
imul
dec
mov
jmp
inc
mov
dec
xchg
lds
jmp
jl
movs
into
push
in
inc
loopne
jp
pop
call
in
scas
cli
div
adc
fst
and
cwde
mov
mov
dec
or
int
mov
outs
fst
fcomp
sbb
lahf
mov
xchg
sbb
cmp
mov
div
xor
rcl
je
sbb
pop
mov
pop
bound
xor
ds
cmp
pop
scas
cmps
dec
sub
pushf
daa
sub
or
mov
stos
sub
cmp
retf
(bad)
cld
clc
test
add
in
(bad)
inc
xchg
les
ficom
jge
fmul
pop
cdq
popa
mov
sbb
or
sub
pop
cmp
push
or
icebp
out
cld
xor
mov
pop
test
ins
stos
jb
push
(bad)
loopne
imul
push
aam
xor
enter
push
shr
rcr
mov
push
shr
repnz
cmps
rol
in
stos
mov
inc
dec
add
cmp
les
enter
mov
mov
sub
mov
pop
cmp
push
push
add
and
jo
hlt
out
or
cmps
or
add
popf
fwait
pop
pusha
js
fadd
cmp
sub
test
jnp
adc
iret
and
dec
inc
jb
mul
jecxz
ror
test
xchg
pop
mov
les
leave
dec
mov
xor
gs
cmp
jno
(bad)
pop
clc
jle
scas
rol
lds
mov
pusha
dec
in
xor
dec
jno
rol
(bad)
jg
sub
(bad)
out
jmp
mov
inc
icebp
sub
mov
cmp
icebp
sub
push
mov
inc
pop
repz
pop
mov
(bad)
data16
dec
xchg
rcr
fidivr
sub
fstp
mov
xchg
scas
pop
das
cmp
jl
and
or
jp
fwait
xchg
out
mov
mov
jb
in
js
int3
fimul
fidivr
mov
and
sbb
mov
lods
fisttp
sub
dec
lods
rcr
movs
sbb
(bad)
xchg
adc
jo
push
xor
ins
je
jmp
jp
lahf
pop
jecxz
mov
xlat
jbe
dec
push
dec
fmul
jp
imul
idiv
cld
xor
jp
ds
mov
inc
call
pop
cmp
test
rcr
add
lock
retf
adc
shl
xor
aas
fs
mov
jle
push
push
bound
cli
ss
xchg
add
mov
sbb
inc
sbb
xchg
xor
aad
and
sub
retf
sub
add
ds
(bad)
adc
aas
shl
mov
add
popa
jge
popf
jp
test
inc
addr16
adc
arpl
xor
inc
add
lods
fdivr
and
fimul
mov
xchg
popa
es
add
(bad)
push
pop
mov
movs
inc
dec
cs
jnp
sub
leave
jmp
xor
pop
push
mov
fdivr
add
cmp
add
jno
adc
xchg
and
sub
push
mov
add
dec
fidivr
mov
aam
in
xor
dec
call
push
cmp
sbb
cmp
sar
test
outs
dec
les
inc
scas
push
inc
dec
retf
movs
outs
cmp
push
stc
addr16
pushf
pop
jge
icebp
xor
push
pop
(bad)
jae
mov
mov
ja
(bad)
test
movs
xlat
mov
js
ffreep
ins
imul
jg
adc
push
or
pop
cmc
mov
sahf
jge
or
cmp
sub
dec
ja
lods
xchg
xchg
rcr
cmp
(bad)
sbb
cmp
push
imul
adc
jge
push
scas
cs
xor
sbb
xor
retf
in
test
out
(bad)
outs
in
js
mov
push
push
cld
sbb
sbb
cld
movs
faddp
icebp
mov
ins
xor
call
push
fisub
bound
pop
jg
outs
push
sub
mov
imul
cmovo
cmp
fist
jg
or
dec
imul
mov
or
enter
lock
out
stos
sti
inc
push
dec
loop
jge
mov
and
and
inc
jle
dec
mov
fs
imul
pop
jl
aas
sub
scas
aas
mov
pop
fdiv
fimul
adc
into
int
(bad)
mov
nop
loopne
pop
pop
fiadd
xor
jo
fiadd
shl
cmp
sbb
push
mov
dec
pop
xchg
or
inc
out
punpcklbw
(bad)
dec
push
cmp
sub
adc
pop
sub
xchg
retf
add
stos
xor
add
sbb
rcr
pop
pop
movs
mov
adc
jns
daa
in
push
jno
and
jmp
and
dec
xor
or
pop
pop
in
ror
xchg
xchg
(bad)
fistp
pop
dec
jle
sbb
lahf
or
mov
cmp
adc
sub
retf
sub
cmp
imul
cmp
inc
dec
shl
jne
mov
mov
push
and
sbb
lea
cli
loop
(bad)
sahf
stos
xor
lods
xor
pop
stc
out
data16
adc
(bad)
(bad)
mov
adc
jmp
dec
pop
aaa
xchg
dec
cs
or
test
outs
cmp
cdq
dec
loope
call
mov
lahf
adc
daa
call
jbe
aaa
repnz
test
pop
hlt
inc
aam
mov
and
mov
test
mov
fstp
mov
dec
fs
jl
mov
and
icebp
call
ds
(bad)
jp
outs
and
rcr
inc
ins
fidiv
int
mov
out
stos
cmps
jne
popf
sbb
call
cwde
pop
inc
push
ret
pushf
rol
int3
push
and
and
gs
pop
clc
mov
jmp
jl
adc
retf
sbb
xchg
sbb
imul
pusha
pop
jmp
pop
pop
sti
mov
test
pushf
push
rcr
ret
fiadd
sub
daa
icebp
dec
xor
or
fiadd
retf
inc
xor
or
stos
mov
push
into
cmp
cmps
xchg
jne
cmps
sub
daa
inc
xor
ss
mov
cwde
xor
push
daa
push
cmp
adc
out
into
push
and
retf
push
std
xchg
scas
lock
rcl
fs
std
cld
es
mov
(bad)
mov
xchg
cmp
fidivr
xchg
xchg
stos
in
cdq
push
ins
aad
and
hlt
test
add
add
xchg
and
cmp
jnp
mov
fistp
push
xor
addr16
inc
mov
cmp
sub
xor
inc
dec
sbb
add
sub
add
xlat
add
pop
fs
add
jge
rcr
inc
stc
dec
push
loopne
xchg
test
cwde
mov
pop
mov
fcompp
fnstsw
cmp
or
sti
test
fild
dec
dec
leave
mov
mov
shr
push
repnz
mov
popa
ret
jae
jns
xor
arpl
push
dec
scas
ss
pop
adc
jno
addr16
jp
call
pusha
jp
retf
jb
call
sbb
test
loopne
sbb
mov
and
out
aas
cld
inc
aaa
cdq
or
sub
xor
fild
inc
add
shl
retf
add
xor
pop
sbb
fs
int
push
imul
out
mov
pop
loope
mov
push
mov
test
imul
pop
(bad)
push
push
sub
es
cld
(bad)
lods
sub
movs
outs
cdq
push
loopne
mov
inc
inc
in
std
lds
hlt
jns
pop
mov
jmp
adc
pop
adc
adc
push
xchg
(bad)
jle
call
jno
cmp
sbb
sbb
xor
loop
(bad)
sbb
xchg
jae
pop
outs
dec
in
nop
es
and
or
and
mov
mov
push
push
xchg
push
rol
or
std
jmp
mov
movs
std
cdq
push
push
or
test
xchg
and
fcomp
ins
jns
and
push
bound
sub
pop
data16
lea
lds
aaa
jb
call
pop
jl
pop
mov
es
inc
xchg
add
jne
and
ins
clc
jmp
lods
in
sub
adc
push
test
xchg
and
je
push
mov
jge
xchg
cmp
jo
mov
sub
icebp
mov
and
hlt
daa
mov
cmp
out
dec
mov
pushf
cmps
fimul
out
push
ins
push
mov
js
sti
jb
mov
xchg
mov
mov
jecxz
adc
jnp
and
sub
(bad)
jle
mov
jle
loope
cmp
out
lds
fidivr
jge
mov
shr
sbb
lds
mov
stc
dec
adc
mov
adc
dec
xchg
out
arpl
in
sbb
xor
neg
pushf
outs
push
or
xchg
stos
lds
rcl
jne
xor
pop
jle
popa
(bad)
leave
dec
xchg
fcmovnu
cwde
push
push
pop
jmp
xchg
adc
fucomp
push
sub
mov
ret
test
push
cmp
xchg
imul
shr
push
sub
outs
hlt
leave
cdq
imul
mov
lahf
dec
mov
mov
adc
push
pop
leave
xchg
mov
sbb
and
push
jbe
pop
dec
push
xor
js
and
inc
mov
mov
out
(bad)
out
mov
mov
pop
cld
loopne
xchg
cmp
push
call
in
or
add
inc
mov
mov
sbb
jmp
fbstp
sbb
fwait
add
arpl
push
and
movs
cld
adc
or
add
shl
sbb
or
pushf
push
inc
lahf
sbb
jecxz
ror
dec
inc
pushf
enter
dec
adc
xchg
mov
es
mov
int
jl
adc
lea
mov
(bad)
not
das
aam
xor
sbb
pop
ficom
mov
std
add
add
hlt
sbb
shr
cmc
es
push
data16
mov
outs
rcl
xor
add
mov
push
sub
push
call
stos
pop
xchg
sbb
sub
adc
aas
push
cmc
push
and
or
mov
popw
jb
add
push
lahf
ret
mov
dec
mov
rol
pop
call
sbb
add
(bad)
rol
call
dec
jp
mov
push
jnp
mov
jae
cmps
cdq
xchg
cmp
out
cld
jle
std
jo
call
cld
fstp
inc
jmp
adc
js
loope
in
jae
mov
(bad)
(bad)
cli
or
xchg
push
in
loope
div
sahf
jecxz
push
sbb
enter
and
mov
mov
push
mov
das
jp
mov
dec
pop
sti
int3
or
jg
nop
pop
and
mov
retf
and
xchg
add
mov
or
jo
mov
and
push
and
adc
jmp
pushf
sub
in
sub
inc
(bad)
daa
or
jl
jne
rcl
imul
cmps
push
fistp
mov
cmp
fwait
and
inc
lds
lds
in
clc
push
dec
rcl
cmc
pushf
hlt
shl
aaa
mov
pop
xchg
rcr
ja
mov
xchg
ins
inc
sbb
sbb
jg
out
les
sahf
inc
inc
pop
(bad)
call
call
or
jl
cmps
(bad)
rol
cmp
jle
loop
cmp
in
lock
pop
frstor
xchg
fisttp
bound
(bad)
cmp
xor
sub
and
(bad)
popa
ret
test
div
retf
xor
push
call
push
add
mov
mov
mov
mov
stc
sti
add
repz
test
push
imul
xor
jo
scas
cli
lock
(bad)
icebp
(bad)
push
adc
xchg
jns
arpl
in
inc
jmp
aad
push
add
sbb
not
shl
mov
cmc
jno
sbb
sub
fwait
ins
repnz
or
out
imul
and
(bad)
retf
mov
in
popa
in
arpl
jmp
in
call
xor
mov
xlat
push
or
enter
xor
xchg
es
mov
push
xchg
shl
xchg
adc
cmp
jne
dec
xchg
jecxz
in
fisttp
enter
inc
push
iret
aad
hlt
xor
xor
in
outs
nop
ins
dec
mov
sub
add
pusha
je
mov
call
shl
or
leave
lahf
retf
out
js
mov
cmps
in
fmul
ss
(bad)
(bad)
cmp
and
pushf
sbb
push
and
push
ficom
clc
adc
adc
cmp
cmp
frstor
inc
pop
rcl
test
imul
(bad)
or
(bad)
call
dec
add
lods
cmp
jb
jmp
lods
mov
aad
cdq
add
xchg
sbb
add
pop
lahf
iret
sub
jecxz
in
push
mov
fisubr
test
lods
mov
js
adc
sbb
dec
jae
ds
fbstp
adc
sbb
adc
push
adc
inc
cmc
sub
pop
sbb
pop
aad
push
(bad)
scas
jl
mov
ret
jl
cld
fsubr
cmp
push
pop
push
ds
retf
inc
mov
movs
in
loope
sbb
cmp
repz
jecxz
mov
sbb
push
mov
push
paddb
test
out
outs
and
adc
mov
ret
dec
icebp
push
pop
mov
push
mov
retf
jp
push
ror
test
inc
outs
jg
xchg
les
cmps
adc
inc
cdq
jg
test
shr
xor
mov
enter
xchg
and
into
adc
cdq
scas
inc
xor
mov
ds
inc
mov
aaa
xchg
ret
xchg
or
stos
sub
mov
pop
cmp
push
or
xor
mov
aaa
pop
les
leave
into
std
dec
dec
xor
lahf
or
mov
fstp
std
adc
mov
pop
xor
cmp
lods
out
cwde
out
push
dec
movs
shl
jns
pop
inc
inc
stos
mov
test
xor
sbb
cmc
dec
or
pop
loop
outs
dec
push
dec
sub
shr
movs
pop
jmp
mov
icebp
or
or
dec
cld
and
add
js
jae
pushf
sbb
cld
imul
mov
push
scas
push
fild
add
pop
test
fcomp
inc
fadd
sub
out
cmp
sub
adc
and
dec
jg
adc
outs
clc
and
add
test
mov
dec
jge
clc
dec
loop
test
loopne
rcl
jle
jno
xor
push
mov
inc
and
jle
in
call
xchg
and
sbb
outs
fs
fstp
jmp
xchg
jo
xor
jo
out
mov
dec
psubw
mov
inc
(bad)
cli
(bad)
outs
mov
out
jmp
fidiv
sub
adc
xchg
aam
sbb
pushf
mov
xor
clc
jle
popf
inc
inc
ins
pop
shl
addr16
test
xchg
push
cmps
cwde
or
xchg
ret
xor
jge
pop
or
pushf
jge
mov
movs
xor
idiv
retf
call
adc
ja
push
xchg
push
(bad)
in
(bad)
xchg
stc
fist
dec
std
cmps
xor
or
pop
pop
std
xchg
enter
jle
lds
aaa
(bad)
xchg
ins
je
cmp
fild
lods
mov
cld
mov
jmp
mov
push
repnz
ret
and
cmp
cmp
repz
pop
into
mov
enter
test
dec
aam
aas
fst
jl
and
lea
fcom
add
sub
in
mov
std
mov
neg
addr16
adc
add
sub
sub
pop
inc
sahf
cmps
pop
sbb
jnp
sar
jle
fldenv
pop
mov
icebp
jecxz
and
enter
push
cs
cdq
cmp
mov
mov
ret
fnstcw
shl
mov
inc
jmp
adc
loope
stc
(bad)
ret
daa
dec
jne
xor
mov
aam
xor
pusha
inc
cmps
mov
pop
sub
std
mov
popf
test
sub
ret
(bad)
cmps
push
js
mov
dec
cwde
rol
mov
add
and
add
and
mov
ss
das
add
mov
dec
into
pop
stos
mov
leave
or
jne
out
rol
into
dec
clc
js
gs
ins
jmp
mov
ds
inc
test
shl
mov
xlat
lahf
jae
sbb
inc
add
pushf
(bad)
or
sub
mov
jb
or
push
dec
aam
mov
mov
mov
es
inc
or
dec
jno
dec
in
in
sti
clc
dec
inc
sub
pop
in
sbb
pop
aam
and
retf
retf
mov
cmp
mov
push
call
pop
cmp
adc
dec
ins
es
add
push
push
mov
(bad)
out
daa
ins
cmp
fld
mov
imul
pop
ficom
pop
mov
mov
sahf
xchg
dec
sbb
movs
adc
xlat
inc
icebp
cmp
xlat
cmp
xor
and
inc
(bad)
xchg
mov
mov
mov
adc
out
mov
outs
jb
cmp
sbb
add
or
adc
pop
push
loope
inc
mov
pusha
jo
ins
mov
or
ds
xchg
fild
mov
xchg
dec
cmps
sbb
div
stc
mov
pop
dec
das
dec
mov
pop
jmp
jnp
in
ss
pop
les
fstp
mov
or
pop
inc
sub
jae
lahf
mov
int
jne
cli
sar
pop
cmps
and
mov
(bad)
cmps
add
inc
repz
jnp
push
mov
sahf
fcmovnb
retf
test
jecxz
fmul
mov
mov
xchg
xchg
ss
(bad)
int3
pop
xchg
inc
popf
mov
and
sbb
sbb
mov
inc
fsub
ja
cmc
dec
in
and
rcl
movs
jne
mov
inc
xor
scas
ins
inc
cld
fnstsw
retf
scas
aad
test
out
pop
imul
push
jmp
pop
iret
mov
adc
jmp
sub
sbb
fcmovnb
mov
mov
sub
mov
jmp
or
arpl
push
xchg
inc
cli
retf
add
xchg
push
add
mov
mov
sahf
mov
int
pop
sbb
ss
jg
cmp
(bad)
loop
sub
loop
push
pop
cld
test
pop
mov
mov
add
xchg
mov
addr16
push
mov
cmp
cld
rcr
pop
aam
dec
(bad)
mov
or
pop
xchg
(bad)
mov
sbb
mov
sub
mov
mov
jo
jmp
mov
inc
jno
fincstp
mov
and
dec
pop
inc
inc
inc
sti
adc
adc
icebp
dec
je
pop
xor
mov
icebp
pop
aas
call
movs
cmp
out
(bad)
pop
add
mov
rcl
js
imul
pushf
retf
mov
push
imul
or
xor
cmc
test
shl
das
and
ss
mov
out
sti
add
mov
lods
push
sub
inc
mov
daa
xchg
aas
and
fidiv
xchg
or
xor
jne
ins
xchg
xchg
push
jge
out
sub
mov
mov
icebp
xor
(bad)
lahf
adc
and
add
dec
push
data16
and
jnp
pop
xchg
xor
out
les
jmp
sbb
dec
mov
mov
sub
(bad)
cdq
push
(bad)
xor
icebp
loope
pushf
iret
inc
or
sbb
(bad)
fadd
(bad)
sub
movs
dec
fwait
add
cld
adc
mov
shl
shl
ret
or
fistp
in
scas
add
(bad)
loope
popa
or
jns
push
cmp
cwde
xchg
mov
mov
jg
ss
addr16
dec
push
jae
pop
mov
jp
jno
addr16
jb
adc
mov
dec
mov
scas
fbstp
loopne
inc
jl
lahf
nop
mov
pop
rol
adc
sub
or
cld
in
push
(bad)
xor
popf
xchg
outs
mov
xchg
inc
inc
repnz
mov
mov
retw
cmp
push
jb
jne
or
ror
dec
add
fsubr
and
les
enter
arpl
scas
cmp
pop
add
mov
leave
push
push
lahf
out
sub
pusha
fxch
mov
sub
and
sti
xchg
aam
jecxz
retf
mov
xlat
les
xor
int3
inc
jmp
lahf
fist
lea
mov
xchg
fmul
jno
sub
cmps
in
movs
sub
call
out
cmp
sub
aam
enter
inc
xor
hlt
(bad)
stc
dec
addr16
hlt
pop
mov
cmc
jns
or
shl
fwait
mov
add
fisubr
ffree
push
leave
mov
or
shr
adc
push
mov
jge
fsub
push
rol
xchg
call
cmp
loopne
add
mov
sub
icebp
mov
dec
xor
mov
xor
out
data16
test
or
retf
xor
xchg
mov
cmps
xchg
mov
(bad)
aas
pop
bound
daa
daa
pop
(bad)
in
xchg
mov
mov
test
xchg
sub
push
or
sar
push
push
inc
add
pop
inc
xchg
and
stc
adc
push
enter
loop
lods
mov
pop
mov
jnp
xchg
dec
jecxz
and
int
push
xlat
(bad)
cld
mov
pop
xchg
out
fild
loopne
inc
pop
sub
into
mov
cmp
sub
dec
xchg
test
lds
push
(bad)
xor
jnp
sti
in
mov
adc
push
or
scas
and
ins
mov
in
ror
mov
sar
call
or
xchg
jns
stc
rol
popf
push
jecxz
fwait
test
jp
sbb
mov
je
jnp
inc
push
dec
jmp
fcom
fild
fwait
mov
fistp
sub
push
pop
or
outs
stos
fidivr
bound
sar
sub
aas
mov
movs
add
jmp
int3
dec
mov
adc
xchg
pop
clc
push
inc
dec
inc
inc
cmc
xlat
inc
lods
push
ret
fisubr
hlt
ins
lods
call
mov
jge
test
pop
mov
xor
sub
inc
xor
add
inc
sbb
jmp
popa
test
xchg
xchg
sbb
cs
jae
outs
outs
add
xor
test
pushw
cld
jbe
or
cli
jnp
and
and
rol
jmp
call
clc
jb
sar
adc
int
fwait
(bad)
loop
push
stos
cmp
lods
cmp
ja
gs
push
mov
dec
in
repnz
and
das
call
in
xor
xchg
mul
jmp
(bad)
push
and
loope
jmp
pop
sub
outs
add
rol
jbe
xor
adc
rcr
in
movs
(bad)
mov
sahf
adc
lods
les
mov
loope
cld
in
mov
fisub
jle
int3
and
cmp
xor
clc
outs
jg
dec
xlat
xchg
in
jae
cmp
adc
stos
mov
cmc
cmp
hlt
out
mov
fld
int
cmp
fcom
out
ror
xlat
mov
dec
jbe
dec
pop
mov
enter
rcr
rol
mov
jae
mov
dec
fnstenv
mov
mov
inc
pop
mov
adc
lahf
int3
and
(bad)
addr16
(bad)
stos
and
mov
lods
outs
sub
ds
movs
jp
cmp
xchg
and
or
nop
mov
fwait
xor
in
cdq
nop
shl
pop
ja
or
push
aad
xor
pop
out
in
movs
ret
cmc
nop
push
enter
xchg
stc
(bad)
aam
jne
ins
out
test
and
scas
sbb
cs
fidivr
cld
retf
ins
pop
ss
ds
xor
ror
aaa
(bad)
push
mov
lods
mov
in
adc
jne
xchg
das
scas
rcr
mov
and
dec
cli
not
div
(bad)
cmp
and
inc
call
out
ins
push
inc
push
call
xchg
mov
dec
mov
mov
int
or
xchg
outs
lock
lahf
mov
jge
mov
sub
inc
dec
add
les
repz
ret
and
pop
test
jnp
stos
mov
jne
sahf
cmps
popf
fs
push
add
sub
push
dec
mov
aas
aas
inc
clc
call
adc
scas
nop
out
ror
mov
xor
scas
fdiv
mov
stc
add
call
mov
inc
arpl
cmps
shl
xor
stos
pop
pop
add
add
test
into
lods
outs
ins
ds
xor
cmp
push
cmp
test
sbb
loopne
inc
nop
rcl
movd
jns
enter
mov
cmc
test
lods
add
outs
in
cmp
cdq
and
adc
sbb
jb
dec
jle
dec
lds
jae
jecxz
cs
inc
shl
cmp
adc
hlt
pop
or
cld
or
imul
mov
fadd
fs
clc
jg
cs
mov
add
inc
xchg
pusha
xchg
shl
or
cmp
and
sub
out
fild
fbstp
mov
add
je
ins
clc
or
lock
jnp
(bad)
jecxz
add
pop
loopne
or
add
cmp
mov
jnp
jbe
inc
in
cld
xchg
enter
pop
pop
aam
add
add
std
push
cli
and
cdq
push
push
adc
mov
aaa
sti
sbb
je
ja
cmp
add
xchg
retf
leave
xor
add
test
pushf
retf
cwde
out
sub
ins
pop
nop
out
adc
push
add
inc
pop
paddsw
mul
and
and
popa
out
ins
inc
out
call
sahf
mov
add
jo
cld
outs
xchg
es
rol
xchg
jo
jnp
cmps
cdq
add
daa
nop
rcl
xor
mov
inc
test
mov
clc
sub
pop
xor
xor
push
fdiv
jg
nop
xor
addr16
or
mov
dec
inc
fistp
cld
loopne
aad
sub
and
inc
add
xchg
mov
ss
xlat
adc
mov
mov
jae
push
mov
out
aaa
mov
pop
lds
aam
fstp
dec
sub
movs
movs
jl
iret
fist
arpl
out
jno
cmp
movs
stos
jl
cmp
fcom
jne
sbb
jge
cmp
mov
jl
ss
stos
div
lds
pushf
sbb
jmp
push
cmps
fcmovne
jmp
ret
lds
lds
js
mov
fwait
add
push
jo
mov
jb
lods
rol
mov
inc
sub
jo
je
cmp
lods
or
jns
fstp
fnstenv
push
loopne
dec
mov
jmp
add
outs
cmp
add
mov
push
cmp
iret
sahf
sbb
add
ret
and
movs
inc
add
idiv
and
add
and
cmp
rcl
or
push
cmc
add
retf
popf
xlat
push
call
aaa
hlt
inc
test
adc
add
cmp
sbb
mov
movs
or
mov
jno
rcl
xor
aad
std
cmp
and
shl
ins
push
mov
jno
dec
pop
addr16
inc
(bad)
fwait
sbb
popa
pop
add
mov
pop
outs
xor
sub
arpl
sbb
aas
out
adc
ror
hlt
xchg
test
stc
ins
stos
scas
bound
jno
repz
fisubr
enter
(bad)
daa
or
dec
lods
sbb
(bad)
push
or
xchg
inc
adc
lea
aam
sub
and
pop
pusha
add
dec
mov
push
mov
mov
sbb
pop
cli
adc
es
inc
out
popa
mov
leave
xchg
jb
push
or
jbe
and
dec
aas
fld
jg
and
pushf
movs
movs
push
adc
movs
jl
mov
ss
mov
pusha
dec
mov
fcomp
inc
cmp
iret
les
sub
ds
(bad)
aad
je
call
arpl
dec
lock
and
cmps
cli
out
xchg
cmp
fsub
jae
fs
pop
int3
out
push
adc
das
out
(bad)
ins
int3
cmp
xor
std
(bad)
xor
popa
pop
push
jge
mov
int
fistp
and
xchg
(bad)
sbb
add
fbld
cmp
pop
inc
loopne
jmp
or
or
int
jg
out
ret
fild
xor
xor
jae
cmp
sti
arpl
rcr
xchg
outs
call
sbb
fsubr
and
mov
fld
sub
fisub
push
call
jno
xor
adc
out
push
test
(bad)
xor
pop
repz
pop
sti
dec
in
and
rol
jno
sahf
stos
pop
out
sbb
pop
clc
cli
jge
stc
scas
fild
inc
fimul
pusha
es
push
xor
pop
pushf
mov
mov
cmp
enter
xchg
and
adc
cmc
pushw
cmc
adc
jge
lea
punpckhwd
mov
add
push
pop
ins
das
adc
or
fldcw
mov
ins
lds
or
retf
add
in
call
mov
inc
mov
xchg
test
mov
mov
ds
mov
sahf
xchg
stc
cmp
mov
outs
loopne
dec
and
retf
aas
sbb
or
inc
pop
xchg
jmp
add
xchg
cmps
and
sbb
add
(bad)
outs
(bad)
pop
lea
push
or
rcr
scas
xchg
or
iret
jo
nop
adc
(bad)
(bad)
jg
test
aas
gs
imul
aaa
dec
movs
sub
jge
xlat
jmp
and
repnz
cmp
cmps
cmp
push
xor
cli
mov
jne
repnz
loope
int3
mov
mov
cmp
inc
retf
lods
imul
cli
hlt
out
popa
pop
sub
xor
stc
shr
sbb
push
sub
in
jnp
or
or
repnz
stos
push
cmc
pusha
dec
pop
ret
dec
add
pop
sbb
push
mov
pop
cdq
jmp
loope
packssdw
shr
sahf
inc
pop
and
int
xor
pop
dec
fistp
sub
mov
jp
inc
mov
pop
cmp
xor
repz
dec
out
or
ror
xor
add
inc
jnp
pop
mov
ja
das
ins
inc
jp
lock
cmc
xor
dec
call
cmp
test
mov
aaa
jmp
mov
shl
inc
int3
dec
inc
mov
cld
gs
mov
addr16
pop
sub
jmp
mov
xchg
sub
out
or
stos
adc
(bad)
popa
jb
pop
shr
lock
xchg
hlt
push
les
cmp
xor
jle
lea
cwde
fadd
call
xchg
popf
dec
sub
mov
loopne
jp
mov
cmp
xchg
stc
adc
or
fisub
sbb
jo
pusha
push
pusha
fmulp
sbb
xchg
scas
rcl
add
dec
inc
inc
dec
lds
push
and
jnp
into
pushf
in
add
outs
cmps
cmp
adc
xchg
pop
xchg
xchg
dec
jg
sar
xchg
mov
mov
mov
push
jns
dec
cmps
pop
fld
dec
repz
jge
xchg
test
jge
mov
sar
sbb
ss
pop
inc
dec
push
dec
push
sti
out
aam
(bad)
cmps
retf
aam
or
repz
pop
test
cmp
or
add
xchg
dec
or
or
add
inc
mov
mov
sub
es
push
popa
out
push
leave
inc
mov
inc
js
push
pop
sub
jg
(bad)
imul
sbb
or
out
pop
retf
push
pushf
cmps
mov
(bad)
movs
mov
and
jb
cmp
mov
dec
jge
aaa
or
std
inc
jecxz
mov
movs
push
mov
push
mov
xchg
out
xchg
in
sbb
push
shl
add
(bad)
div
sub
enter
sbb
jp
push
test
out
mov
call
in
jbe
ins
fdivr
xor
dec
pop
repnz
std
cmp
repnz
lods
add
out
lea
test
iret
loopne
cmps
adc
cmp
arpl
or
push
ds
enter
and
int
xor
sub
push
scas
fild
mov
std
mov
push
shl
add
in
sbb
pop
into
inc
sub
cwde
shl
fnstenv
cdq
adc
addr16
fisubr
cmps
(bad)
retf
fs
cmp
popf
mov
xor
mov
(bad)
sub
data16
mov
pop
xchg
xor
add
mov
ret
sahf
stos
ja
cwde
js
mov
icebp
adc
std
mov
lds
cmp
das
mov
add
adc
mov
cmp
(bad)
push
sahf
add
shr
loopne
mov
xor
int
out
mov
jmp
int3
adc
push
rcl
ja
pop
jnp
mov
in
jmp
push
adc
cmp
jbe
cmp
mov
mov
jmp
xchg
push
dec
cmp
xchg
sub
or
in
pusha
out
and
mov
pop
lds
pop
in
cwde
call
lods
mov
rcr
inc
test
test
push
xchg
xor
ins
movs
push
or
shr
cli
adc
sbb
jb
or
dec
mov
pop
add
call
xor
(bad)
inc
adc
rcr
loope
bound
test
js
cmp
mov
out
inc
data16
dec
or
sub
add
imul
mov
in
pusha
sahf
add
call
or
sub
mov
es
rcl
fidivr
ins
stc
aad
cmp
xchg
mov
jmp
stos
movs
out
push
and
jb
dec
je
call
test
cli
rol
bound
aaa
enter
mov
jno
scas
sbb
test
dec
arpl
jne
dec
and
hlt
repnz
dec
xlat
pop
repz
ficomp
lock
xor
inc
call
cs
inc
jle
jno
(bad)
ret
jo
daa
imul
enter
push
add
fmul
fbstp
out
xchg
shl
frstor
pminub
fdivrp
pusha
int
sbb
cs
sub
int
mov
(bad)
lods
out
mov
cmp
and
dec
(bad)
ja
or
adc
xchg
fiadd
pop
sub
inc
out
xchg
mov
cmc
lods
mov
mov
into
push
lods
cld
mov
mov
jne
addr16
cmp
pop
(bad)
dec
fnsave
into
jb
ret
xor
and
popf
pop
dec
vfrczsd
aad
sub
push
loop
xchg
lods
ds
jmp
push
icebp
push
mov
in
jmp
pusha
mov
pushf
fisttp
stc
ds
out
fdivr
fadd
sub
pop
test
mov
imul
sti
cmp
pop
pop
jo
sti
or
jle
(bad)
push
sub
jmp
ret
xchg
sahf
jge
pop
cmp
fwait
push
cmp
icebp
shl
xchg
xchg
mov
xor
xor
jmp
mov
jmp
mov
mov
in
dec
into
movs
mov
xchg
xor
mov
pop
inc
jge
xlat
clc
pop
adc
ja
mov
cmp
mov
mov
int3
jmp
push
in
inc
dec
and
fadd
inc
outs
test
data16
arpl
cld
cld
arpl
cmps
ret
cmp
stos
sbb
bound
int3
rcl
sub
popf
call
push
jb
pushf
hlt
inc
mov
sbb
sub
ror
retf
push
pop
out
adc
jmp
xchg
(bad)
mov
add
pop
add
dec
jae
in
jg
mov
xchg
push
push
outs
fld
mov
je
dec
push
xchg
mov
cmp
xchg
mov
imul
sahf
mov
test
jmp
mov
es
adc
mov
test
inc
or
or
mov
mov
add
sbb
callw
xchg
out
cld
es
ret
xchg
cmp
and
aam
xor
pop
inc
sahf
test
imul
in
invd
fwait
ss
aas
pop
mov
stc
hlt
fst
test
sbb
div
clc
(bad)
push
dec
jnp
pop
mov
test
adc
lock
push
movs
sar
and
outs
jae
or
fadd
pop
popf
iret
pop
(bad)
mov
lods
or
sub
pop
mov
outs
clc
repnz
shl
hlt
loopne
outs
and
mov
jp
sbb
cmp
mov
jnp
sbb
addr16
mov
adc
cwde
cmps
mov
loope
rcl
int3
dec
and
or
out
popf
int3
dec
cdq
inc
cld
mov
and
or
jmp
inc
lods
setns
dec
sbb
call
mov
out
and
hlt
cmp
xchg
sbb
sub
(bad)
push
mov
(bad)
cmps
test
dec
xor
pop
sub
xchg
jge
fst
dec
dec
pop
jno
out
xchg
test
dec
fchs
and
mov
mov
sbb
aaa
enter
pop
push
inc
add
xor
lods
(bad)
sub
dec
fs
adc
(bad)
cli
and
xlat
test
mov
dec
mov
je
jecxz
leave
outs
xlat
rol
mov
fwait
mov
fwait
add
dec
ret
fisub
xchg
pop
mov
shl
sar
ret
ror
mov
sbb
mov
mov
outs
sub
xchg
cmp
and
adc
dec
mov
retf
es
jge
into
leave
cmc
inc
arpl
xrelease
stc
ret
mov
jmp
fs
xchg
imul
js
fistp
xor
ja
mov
mov
cmp
ja
mov
neg
inc
loopne
in
sub
mov
pushf
in
out
arpl
and
pop
cmp
loop
inc
jmp
enter
into
lods
cmps
jno
call
imul
ret
mov
and
popa
xor
jg
(bad)
mov
cmp
mov
adc
scas
dec
jno
jo
xchg
cmp
or
mov
adc
loope
sub
pop
push
pushf
into
pop
add
pop
jb
xchg
mov
mov
inc
mov
push
in
xor
push
outs
je
sbb
lds
pop
call
cli
js
ja
pop
mov
(bad)
inc
pop
fiadd
mov
imul
hlt
sbb
movs
into
jmp
sub
mov
jno
sub
adc
popa
repnz
(bad)
fild
jno
stos
fstp
js
outs
retf
push
push
mov
or
mov
xchg
mov
dec
les
xor
adc
in
test
sub
jge
inc
jbe
lock
mov
cwde
movs
jnp
fdivr
mov
add
rol
cmps
sub
lds
in
imul
iret
popa
pop
xor
out
sub
out
fiadd
pop
mov
cli
dec
push
aad
mov
(bad)
cmp
fxch
mov
pop
add
ret
pop
add
shl
sub
loopne
pop
add
xor
add
jns
dec
jmp
adc
dec
pop
int
and
cmp
push
push
adc
out
fwait
iret
pop
mov
adc
jg
pop
test
cmovnp
(bad)
int
inc
or
in
int
or
adc
daa
mov
or
xlat
pusha
cs
sub
scas
outs
(bad)
int
jp
jecxz
pop
stos
sahf
jne
jo
popf
fdiv
mov
cmp
fs
pop
sbb
jmp
jb
dec
inc
mov
pusha
pop
mov
cmps
and
dec
test
pop
js
add
dec
xchg
dec
ficomp
xor
pop
sub
jne
jmp
sub
mov
jb
loope
xor
mov
outs
pop
lock
jb
rol
mov
xor
cmp
jg
iret
int
jb
sahf
adc
mov
jmp
ret
pop
cmps
or
stc
xchg
in
pop
repnz
push
jl
les
rcr
je
int3
aas
jge
add
add
leave
loop
sar
push
xchg
xor
adc
sbb
arpl
and
inc
mov
push
push
retf
sbb
jl
mov
cmp
inc
dec
sub
fldcw
out
inc
test
push
push
sbb
xchg
retf
inc
mov
retf
pusha
mov
fsubr
xchg
ss
push
pop
ins
or
ja
sub
mov
jle
push
arpl
mov
stos
mov
push
in
mov
outs
pop
loop
dec
pop
arpl
icebp
lds
ror
mov
fcom
je
sub
sub
test
add
push
rol
add
sbb
out
mov
out
cmp
mov
les
pusha
or
shr
xchg
push
rol
jns
pop
push
ret
add
mov
xor
pop
aam
std
inc
inc
and
fiadd
xor
and
out
jns
mov
lods
pop
retf
dec
cwde
pop
lds
and
ds
mov
cmp
add
push
adc
and
outs
jns
cli
xchg
rol
es
(bad)
jns
adc
push
aam
xor
repnz
aam
aad
cmc
aas
in
mov
xlat
movs
ds
mov
adc
fnstcw
and
jns
cwde
popa
dec
into
cmps
sub
sbb
ins
out
shl
pop
test
sbb
inc
loop
ret
xchg
ja
vorps
or
sbb
jl
stos
xchg
mov
jmp
bound
bound
jnp
outs
xchg
test
or
mov
xchg
or
pushf
adc
sar
daa
sub
ret
leave
out
jns
movs
adc
fdiv
mov
fisttp
add
dec
mov
pop
mov
lds
sub
dec
inc
retf
sub
xor
push
adc
sub
mov
cli
jmp
mov
jae
in
dec
aam
sahf
test
jnp
clc
int3
(bad)
lods
mov
popf
lods
jle
je
xor
lahf
std
xchg
mov
mov
fisubr
jle
addr16
leave
jo
pop
mov
sbb
sub
add
sub
int
leave
dec
xchg
adc
dec
retf
and
xor
sbb
sub
in
push
movs
jno
lock
add
or
sbb
push
shr
jno
iret
xchg
cmps
shr
jg
push
(bad)
fdivr
sub
inc
test
(bad)
sbb
add
popa
fcmovnu
adc
fcmovnbe
fbstp
inc
jg
or
fst
mov
hlt
sub
mov
xor
push
dec
add
add
add
nop
mov
inc
popf
fdiv
xchg
cmp
jge
push
add
stos
out
loopne
jae
pop
mov
inc
jmp
mov
bound
cmc
outs
pop
push
adc
(bad)
repz
xor
push
loop
and
mov
mov
pop
adc
xchg
icebp
div
pop
cs
out
fisubr
(bad)
std
push
daa
pop
pop
pop
mov
inc
scas
xor
sub
or
fdivr
jne
aas
sub
pop
push
data16
cmp
dec
push
mov
adc
repz
xchg
mov
or
cwde
and
nop
mov
ficom
xor
movs
popf
std
mov
mov
outs
(bad)
mov
cs
outs
mov
fsubr
fadd
hlt
ret
push
cmpxchg
xchg
ret
sahf
xchg
mov
dec
mov
ds
mov
dec
inc
icebp
add
(bad)
jno
sahf
pop
cmp
sar
xor
repz
add
pushf
sbb
stc
gs
and
and
or
rcl
mov
cld
mov
fdivr
xor
or
shr
mov
pop
dec
imul
mov
push
jle
stc
push
shl
psraw
xor
push
dec
sbb
cmp
xchg
mov
retf
movs
loope
in
pop
outs
xchg
fcom
in
push
int3
sbb
and
stos
cmc
jl
sar
imul
sbb
mov
nop
shl
sar
pop
movs
xor
setb
popa
inc
push
add
cmp
jg
enter
pusha
add
aaa
out
or
ror
sub
outs
scas
cli
mov
outs
scas
mov
mov
xchg
cmc
push
and
sub
sub
mov
mov
or
mov
jno
sub
ja
jle
test
add
mov
adc
sub
repz
jbe
mov
mov
mov
pop
(bad)
inc
out
and
rol
sub
mov
adc
adc
push
pop
ret
ret
sbb
sbb
mov
xor
sub
add
das
and
clc
cs
test
jno
xchg
in
mov
(bad)
scas
cld
xor
scas
dec
cmp
(bad)
loopne
cmp
rcl
fidiv
stos
push
retf
es
mov
icebp
pop
mov
dec
repz
repz
and
inc
xchg
xor
cmp
xlat
mov
pop
(bad)
rcl
xlat
push
call
(bad)
sbb
push
lahf
cmc
mov
cmp
xchg
jae
cmps
out
stos
jbe
sbb
adc
aad
dec
outs
push
mov
div
mov
jmp
and
js
and
add
ss
jnp
push
mov
mov
jb
push
outs
dec
push
out
inc
loopne
cmp
add
fidiv
pop
pop
fdivp
dec
inc
mov
add
sbb
movs
inc
cmps
paddq
stc
aas
retf
mov
popf
popa
dec
add
sub
add
in
sub
test
out
mov
sbb
ret
mov
cmp
dec
pop
into
aaa
mov
fs
cmp
loopne
(bad)
retf
pop
pop
retf
pop
in
cwde
pop
inc
jge
mov
fadd
lahf
pop
adc
dec
fisttp
pop
stos
sbb
mov
sub
fcmovnbe
movs
mov
rol
pop
cmps
sqrtps
call
adc
sar
movs
ds
ja
or
add
jp
clc
into
aad
and
sbb
xchg
retf
jg
add
(bad)
xor
push
ins
jnp
loope
test
lahf
dec
mov
xlat
stos
jge
xor
pop
mov
dec
sar
std
mov
inc
mov
sub
add
stos
push
push
push
loopne
mov
rcl
pop
jb
inc
jnp
lea
sbb
int
adc
xchg
mul
xchg
sub
xor
jno
jg
inc
pop
mov
int
das
or
ins
ins
mov
iret
jge
dec
fdivr
call
jl
cmp
es
imul
pop
dec
inc
pop
loope
mov
jae
add
dec
outs
movs
xor
sub
sbb
std
pop
pop
mov
pop
jl
int3
cmps
xchg
test
aad
or
jg
sbb
repz
mov
shr
sbb
mov
pushf
int3
pop
jae
cwde
jae
das
shl
in
std
test
jo
out
outs
push
add
add
push
shl
ror
and
xchg
retf
mov
mov
ins
pop
sub
shr
cwde
in
sub
lock
mov
daa
les
mov
adc
std
lock
sbb
cmc
sbb
cmps
loope
(bad)
out
popw
pop
jl
mov
iret
push
in
ja
scas
pop
push
bound
outs
pop
pop
(bad)
(bad)
jmp
aaa
je
out
jle
js
inc
fwait
ins
pop
xchg
or
cmp
or
add
repnz
sbb
and
pushf
mov
push
add
aas
js
cmp
or
jbe
dec
in
mov
imul
mov
xor
data16
scas
inc
add
adc
xchg
sub
or
loop
sbb
add
xor
mov
icebp
push
cdq
or
sbb
fist
fstp
push
fbld
cmp
push
mov
xchg
(bad)
push
jg
pop
mov
in
jne
push
cmp
sbb
inc
or
dec
stos
mov
or
icebp
loope
xlat
ss
clc
inc
imul
dec
test
adc
or
xchg
outs
push
test
add
and
out
mov
mov
inc
jle
jg
sar
icebp
cmps
test
dec
jbe
push
lds
mov
inc
out
in
pop
jmp
pop
and
mov
cmp
cmp
inc
jl
ret
jmp
adc
inc
mov
mov
cmc
push
(bad)
fiadd
aas
push
mov
ret
xchg
pop
aam
sub
test
rcl
ficom
loopne
xor
xor
xchg
jns
mov
dec
jle
dec
mov
int
cmp
in
push
sbb
pusha
add
inc
out
aam
adc
xor
int
pop
ss
push
cmp
scas
add
data16
adc
inc
ror
push
sbb
in
shl
dec
pop
xor
rcl
adc
add
test
aaa
jle
aas
movs
jle
jns
lods
xor
jp
sub
pop
fnstenv
pop
or
or
int3
(bad)
hlt
cmp
je
mov
icebp
sar
add
dec
call
adc
retf
and
ja
(bad)
pop
mov
js
adc
aad
in
and
shr
outs
stc
retf
lods
das
xchg
xor
mov
or
add
pop
sbb
pop
rol
bound
rcr
pop
loop
add
and
ror
dec
int3
jnp
adc
pop
sbb
out
mov
iret
xchg
in
int
retf
mov
pop
icebp
scas
push
push
shr
aaa
pop
push
xor
aaa
lahf
inc
mov
xlat
popf
jns
retf
out
pop
(bad)
sbb
cs
pop
rep
pop
mov
pop
xchg
leave
mov
xchg
dec
and
mov
adc
and
cld
xchg
cmc
mov
and
in
push
or
data16
and
aaa
mov
push
adc
addr16
mov
xor
out
shr
sub
in
sub
jl
jb
test
xchg
js
fcmove
jmp
aaa
(bad)
mov
sbb
or
dec
mov
fimul
test
ficomp
out
push
out
bound
int
jb
push
daa
mov
or
lahf
frstor
dec
addr16
cmp
clc
pop
pop
fisubr
fwait
lods
daa
arpl
cmp
jle
cmp
xor
inc
push
movs
push
push
adc
xchg
or
in
adc
or
dec
in
pop
sub
imul
mov
nop
jnp
in
jge
hlt
add
test
retf
ins
ret
ins
push
test
shr
dec
push
mov
jecxz
inc
stc
xor
mov
fs
jno
test
inc
mov
xchg
scas
mov
mov
fwait
mov
mov
icebp
hlt
cmps
(bad)
iret
popa
(bad)
jp
daa
jge
jle
mov
cmc
(bad)
enter
ror
xor
jmp
cli
icebp
push
scas
(bad)
mov
lods
or
xor
retf
or
cmp
icebp
inc
sub
jbe
movs
fist
mov
ins
out
or
scas
push
push
ds
clc
test
repnz
lock
jmp
and
mov
pop
pushf
(bad)
std
inc
dec
inc
push
cld
mov
mov
pop
cmps
lds
push
aad
mov
push
pop
xchg
retf
(bad)
ror
lea
scas
stos
leave
sub
mov
loopne
rcl
sbb
jg
call
in
adc
mov
xchg
fcmovnu
inc
imul
iret
lea
mov
xchg
cmp
fbstp
test
pop
mov
enter
mov
movs
in
es
inc
ds
imul
ss
push
inc
scas
xchg
repz
icebp
iret
fisttp
sbb
mov
adc
cdq
cld
jns
hlt
jmp
test
dec
push
ds
push
jmp
and
xchg
out
jmp
or
in
lea
inc
adc
mov
jns
jl
jp
sub
push
add
push
clc
sbb
imul
mov
xor
pop
add
push
daa
fwait
inc
dec
sub
cmp
lahf
mov
arpl
add
adc
cmps
xor
ret
or
or
jmp
cmp
sar
push
jae
or
int
cmp
cdq
out
int3
sahf
or
jmp
xor
pushf
scas
mov
sub
and
out
popa
push
sub
lods
push
outs
adc
sbb
ins
push
bswap
pop
dec
aaa
inc
xor
popf
mov
cmp
jp
(bad)
push
mov
xchg
lds
or
mov
outs
out
inc
retf
or
pop
movs
mov
inc
loope
scas
mov
int3
pop
out
xor
shl
inc
ds
adc
int3
icebp
loope
jnp
test
js
xchg
push
shl
inc
xchg
inc
in
xor
test
sbb
out
leave
pop
fwait
or
cmp
sub
dec
xchg
sahf
movs
jne
les
call
push
pop
scas
jns
dec
mov
xchg
lahf
and
retf
cld
mov
and
pop
cli
xchg
mov
arpl
int
rcl
data16
xchg
push
adc
fidivr
test
xchg
outs
lahf
call
pop
mov
mov
mov
mov
in
push
in
aad
stos
xor
mov
mov
scas
sub
dec
mov
and
xchg
retf
or
jnp
adc
push
and
jo
mul
arpl
iret
mov
lahf
test
std
xchg
jg
sub
aas
std
shl
push
adc
push
bound
aaa
enter
cmps
cli
adc
adc
ins
inc
pop
dec
dec
lahf
int3
add
or
sub
jmp
pop
inc
or
mov
xor
(bad)
mov
jne
push
mov
mov
in
mov
ins
sar
iret
adc
adc
lea
out
push
(bad)
dec
add
je
push
pavgw
xor
ins
xadd
jmp
xchg
push
rcl
add
mov
call
sbb
lahf
cli
ins
and
mov
mov
sbb
stc
call
(bad)
or
jge
add
mov
gs
or
mov
mov
inc
rol
sar
push
mov
ins
pop
jmp
call
mov
and
sbb
(bad)
imul
add
jmp
je
mov
cld
scas
and
xor
mov
xchg
add
(bad)
cli
mov
mov
add
push
ja
add
cmp
ror
dec
popf
in
mov
(bad)
dec
push
or
repnz
mov
popa
daa
lds
std
gs
test
popf
push
or
inc
mov
mov
push
mov
push
add
cmp
and
das
and
xor
jge
sub
inc
shl
fcomp
jmp
cmp
xchg
jnp
mov
stos
stos
or
mov
sbb
(bad)
fwait
inc
xor
cs
inc
fmul
fadd
leave
imul
push
mov
push
xchg
adc
scas
and
mov
jb
xor
mov
stc
out
retf
ret
rcl
dec
mov
in
jne
xchg
jmp
lods
nop
dec
ss
pop
je
sbb
sub
ja
data16
inc
ds
mov
int3
mov
cmp
bound
or
push
into
or
xchg
in
je
out
sub
mov
cmps
test
dec
mov
push
cmp
fdivr
inc
mov
daa
jo
mov
aam
cli
and
ins
fwait
sbb
shl
jno
fimul
imul
mov
mov
mov
dec
popa
iret
lds
and
cdq
xchg
lods
sub
popf
adc
into
and
push
fsubp
jmp
mov
sub
push
pop
hlt
sub
in
out
xchg
and
lea
mov
mov
addr16
enter
add
sbb
pop
mov
or
xor
loope
in
xchg
in
out
add
jae
out
sbb
ins
out
(bad)
fcmovbe
inc
stos
dec
push
push
aas
or
rcl
movs
stos
scas
neg
in
cdq
jmp
leave
clc
mov
fldpi
clc
into
dec
outs
push
stos
not
out
pop
jle
sbb
popf
jo
lods
inc
in
dec
fs
scas
shl
je
nop
dec
dec
or
adc
stc
cmp
add
and
lods
jmp
div
out
mov
pop
xchg
fldenv
adc
sar
xchg
cmp
jl
pop
in
xchg
and
fsubr
mov
lods
fwait
pop
sub
sub
outs
into
adc
(bad)
sub
imul
fld
int
and
adc
cmp
cmc
in
sub
in
mov
std
xchg
mov
mov
(bad)
sahf
imul
outs
clc
sar
mov
popf
inc
mov
xor
addr16
pop
movs
inc
ins
cmp
and
(bad)
adc
rcl
pop
jae
cmp
bound
rcl
call
sub
adc
pop
repnz
inc
aad
sti
scas
adc
or
lods
stos
imul
inc
add
dec
js
jno
xor
xchg
lock
(bad)
shl
mul
not
out
pusha
mov
rcr
test
sub
inc
xchg
xchg
inc
fcom
repz
imul
jmp
cmp
push
sahf
int
iret
in
xchg
and
adc
je
sub
or
inc
aad
cmp
aad
jnp
ret
addr16
mov
cmp
adc
cmps
sbb
jns
test
loop
cdq
ins
clc
or
loopne
lods
movs
inc
sub
push
push
lahf
jb
mov
xchg
cmp
fld
stos
sub
push
add
arpl
cmp
xchg
retf
stc
cmp
inc
dec
das
lods
fisttp
imul
lahf
arpl
jne
pop
inc
pop
mov
lods
lock
cmp
out
cmp
dec
xor
pop
fsubrp
xchg
push
fadd
test
dec
mov
not
std
pop
mov
adc
and
icebp
push
aaa
retf
cmp
das
pop
pop
vpminub
leave
inc
(bad)
ror
aad
fld
call
icebp
dec
or
and
add
fwait
daa
dec
loop
out
aas
xlat
xchg
or
sub
ins
push
popa
add
push
hlt
inc
mov
int3
pushf
jl
addr16
rol
data16
cdq
out
cmp
mov
pop
sahf
xchg
lea
push
aaa
(bad)
xchg
test
dec
sbb
dec
aas
das
fs
jecxz
popf
in
in
xchg
test
pop
sub
mov
add
in
pop
es
ret
xchg
mov
pop
lods
cmp
pop
jmp
test
mov
in
jnp
jae
(bad)
and
jmp
pop
jmp
push
fs
or
ins
es
movs
dec
std
fdiv
icebp
xor
ins
cmps
(bad)
mov
xor
xchg
pop
int
call
sbb
les
jp
mov
cmp
jo
xor
lods
jle
jbe
ror
cmp
mov
jb
jmp
loope
dec
repz
dec
out
stos
iret
scas
loop
mov
jmp
in
retf
jg
pop
mov
and
int
or
xor
push
outs
les
idiv
std
lahf
retf
pop
sbb
pusha
adc
jle
aam
add
cmp
mov
add
sub
mov
xchg
pop
es
xor
mov
mov
mov
dec
xor
pop
sbb
aas
and
pop
add
(bad)
xor
cmp
xchg
cmp
xchg
aas
or
loop
shl
jne
lahf
out
(bad)
jg
dec
push
jo
pop
jnp
jle
test
mov
mov
xor
xor
clc
stos
jnp
div
in
push
and
inc
leave
stos
xchg
mov
pop
pop
mov
arpl
jp
pop
push
aas
imul
cmp
mov
cmp
pop
(bad)
rcr
pop
mov
ret
push
adc
test
fs
push
cmc
lahf
(bad)
ror
dec
push
shl
(bad)
out
div
pop
jg
(bad)
ds
cs
jo
inc
or
cmp
add
xor
and
jns
dec
je
daa
aam
mov
jecxz
das
add
xor
sbb
repnz
and
cmp
jmp
(bad)
jg
bound
push
jmp
mov
(bad)
cli
mov
push
loop
sub
dec
pop
mov
ins
push
add
inc
cmps
pop
fs
outs
int3
lea
out
cs
fimul
sbb
pop
mov
cmp
rol
and
cmp
out
xchg
add
loop
push
cmp
adc
in
repz
dec
pop
mov
mov
fistp
push
inc
sbb
cmp
cmp
xchg
imul
pushf
push
daa
pop
push
int
cmp
adc
ins
sbb
loopne
add
add
(bad)
repnz
popa
icebp
adc
leave
mov
sub
aam
pop
mov
xchg
bound
sar
dec
pusha
addr16
sub
xchg
adc
ja
mov
mov
lea
xchg
jb
adc
jne
adc
adc
das
xor
jae
jmp
out
loopne
inc
dec
push
pop
repz
cld
or
cli
mov
push
xor
pop
and
fs
add
mov
adc
or
daa
retf
in
stc
or
iret
adc
enter
fst
jne
push
sub
dec
sbb
rcr
je
adc
adc
clc
arpl
(bad)
dec
push
call
adc
movs
cdq
pop
push
in
stos
movs
push
xor
xchg
cmp
jne
es
inc
mov
xlat
sar
jns
mov
(bad)
sub
dec
mov
fild
enter
mov
lea
int
and
mov
jae
rcr
popa
das
pushf
cwde
stos
aas
add
scas
push
inc
or
or
pop
jmp
sub
aam
jns
cwde
shl
xor
inc
xor
icebp
div
cmc
pop
mov
jecxz
ins
mov
or
addr16
ficomp
retf
mov
inc
mov
scas
popf
fist
cmp
clc
xchg
adc
data16
adc
imul
add
xchg
and
add
std
adc
add
mov
pop
mov
mov
dec
pusha
add
sbb
rol
sub
fs
jb
inc
or
or
rcr
mov
xor
jb
xchg
adc
mov
fwait
(bad)
rcr
popf
aam
jb
aam
sub
ss
cmp
mov
adc
(bad)
jne
adc
movs
(bad)
pop
dec
xchg
jns
push
mov
xchg
scas
and
ja
mov
and
retf
push
and
lods
add
(bad)
add
sbb
inc
ja
jo
arpl
cmp
shl
mov
sub
ret
xchg
adc
adc
imul
mov
movs
and
add
imul
rcl
mov
pusha
push
cmp
out
dec
cmc
inc
sti
stos
in
adc
pop
xchg
and
mov
cmp
pushf
shl
adc
sub
shr
sub
jle
imul
call
imul
or
mov
aad
adc
daa
push
adc
es
and
xor
lock
add
mov
aam
jbe
push
mov
cmp
push
(bad)
ret
cld
scas
add
jmp
cmp
and
lahf
(bad)
adc
lahf
gs
dec
ffree
fs
pop
les
daa
xchg
mov
ffreep
mov
add
cld
mov
jge
cmp
lods
ret
iret
inc
mov
jg
das
cmps
xor
cmp
icebp
jmp
or
mov
and
dec
fs
pop
std
jecxz
inc
fsub
mov
imul
mov
mov
jge
int
xchg
pop
sbb
pop
fcmovnb
sbb
pop
out
mul
jg
adc
jge
leave
dec
adc
ins
mov
test
jg
or
mov
out
dec
inc
(bad)
stos
push
jp
lea
int
jno
(bad)
sbb
daa
in
mov
mov
ret
call
cmp
cmp
(bad)
sub
xlat
cmp
sbb
jge
add
shr
ins
add
mov
pushf
iret
push
jmp
retf
mov
shr
jp
cmp
js
(bad)
fnstcw
xor
aam
mov
ds
mov
test
out
mov
ins
push
not
hlt
dec
mov
jae
imul
aad
imul
neg
pop
push
mov
dec
push
sbb
adc
int3
retf
mov
lahf
pcmpeqb
cmp
jp
xor
shl
out
inc
std
xor
jecxz
push
les
dec
lea
arpl
fild
pop
mov
pushf
sahf
inc
mov
push
pop
pop
mov
stc
mov
xor
test
fisttp
cmp
push
adc
mov
jl
mov
cmp
rcr
adc
clc
xchg
mov
cli
ja
ja
cmp
outs
inc
neg
jo
mov
mov
mov
xchg
in
mov
icebp
inc
inc
mov
pop
outs
(bad)
inc
(bad)
mov
(bad)
ins
out
sbb
ins
jo
sub
dec
sbb
(bad)
outs
jne
fmul
mov
aad
rol
call
and
inc
inc
sbb
jge
cmp
or
xchg
call
aam
jno
pop
push
jp
inc
push
nop
out
lods
pop
push
mov
push
xchg
rcl
inc
push
cdq
out
hlt
mov
jmp
mov
cli
in
mov
sub
xor
xchg
iret
les
push
(bad)
dec
fs
pop
das
outs
mov
sar
ret
shl
hlt
sub
jbe
repz
sar
fcmove
dec
daa
fiadd
add
dec
(bad)
cmps
mov
add
mov
jnp
pop
mov
neg
xor
jbe
test
pop
mov
ret
popa
push
mov
std
pop
mov
(bad)
sbb
jecxz
mov
jns
or
add
mov
sbb
lds
mov
mov
popf
mov
mov
and
das
mov
in
mov
and
jmp
(bad)
mov
cmp
mov
inc
xchg
(bad)
(bad)
mov
call
enter
push
movs
rol
retf
ss
ins
movs
outs
cmp
inc
sbb
pushf
mov
jo
sti
add
jmp
cmps
mov
sub
es
adc
iret
cli
lods
cmc
lods
bnd
ss
in
xor
mov
(bad)
scas
mov
dec
pop
cli
mov
call
or
xchg
test
sub
sti
in
sub
outs
in
pop
dec
jmp
test
fbld
xor
ficom
cmps
call
mov
aas
cmp
(bad)
push
add
popa
cld
cmc
adc
add
out
mov
icebp
lock
mov
jns
pop
cmp
push
rol
cwde
test
pushf
adc
jecxz
jns
mov
xlat
cmp
fstp
mov
imul
popf
sbb
out
pop
jg
or
lods
cmp
push
cmp
movs
mov
adc
sub
(bad)
mov
pushf
mov
into
loope
jle
jecxz
cs
lds
adc
cmp
mov
add
sbb
lock
retf
sti
push
mov
pushf
aas
jo
mov
loope
mov
rcr
int
shr
pop
dec
cmc
in
cmp
aas
stc
pop
stos
sbb
test
or
ds
and
or
loope
and
fcmovu
xchg
add
push
inc
add
jnp
fild
inc
fiadd
mov
add
(bad)
jg
sbb
(bad)
ins
add
adc
imul
mul
ja
mov
cmps
xchg
xor
mov
adc
cld
ja
scas
inc
jg
sbb
(bad)
sbb
push
std
hlt
sti
stc
jg
stos
sub
jo
push
and
je
stos
sub
dec
fcomip
popf
(bad)
adc
movs
ret
add
jge
mov
pop
xchg
js
enter
jb
in
jp
lea
mov
xchg
jbe
movs
aam
neg
sbb
mov
ja
jo
xchg
fisttp
jle
cmc
push
jl
fs
or
mov
jg
pop
int3
mov
sbb
xchg
movs
and
sub
add
and
cmp
cmps
mov
fimul
adc
aas
test
mov
int3
inc
or
lods
jmp
jmp
jl
data16
ja
retf
fs
push
call
call
das
pop
loopne
fdiv
popf
in
(bad)
call
pop
adc
xchg
and
cwde
imul
(bad)
js
vminss
les
xor
ret
xor
shl
nop
sbb
pop
push
mov
into
push
push
daa
xor
iret
push
inc
push
ins
mov
xchg
sub
mov
or
retf
fisttp
addr16
cld
mov
popf
push
mov
jecxz
mov
sub
rol
jp
dec
add
xor
push
cmp
test
mov
retf
push
inc
cmp
push
out
sub
enter
sub
movs
xchg
mov
dec
or
cmp
out
or
sar
mul
sbb
adc
mov
sbb
add
outs
ror
jnp
jne
sub
daa
aas
imul
shr
aad
inc
lods
retf
repnz
or
mov
mov
adc
fdiv
fwait
arpl
scas
xchg
bound
mov
and
adc
loopne
ror
mov
pop
cmp
cmps
jno
scas
add
push
les
push
lds
aad
mov
ins
cmp
or
aad
hlt
pop
add
int
xor
call
mov
dec
adc
mov
sbb
fstp
enter
movs
adc
and
pop
cdq
shl
stc
fnsave
repz
mov
push
mov
add
dec
retf
stos
inc
dec
pop
cli
cmc
jmp
pop
cmc
ficom
inc
imul
loope
jmp
fisubr
shr
pop
lock
outs
cmp
dec
std
cmp
sub
or
push
repz
add
pop
sar
add
sbb
pop
daa
popa
add
cmp
popf
cmps
rcr
call
dec
push
addr16
cmps
loope
cmps
cmc
call
cwde
xor
out
cdq
sub
and
idiv
pop
enter
pop
adc
int
loopne
cmp
mov
lds
(bad)
(bad)
jge
cmps
psrlw
ficom
mov
fstp
dec
loop
paddq
cmps
mov
dec
dec
ins
imul
dec
arpl
retf
stc
jge
cmp
push
int
xchg
call
fild
push
push
cld
in
xor
push
in
repnz
inc
jno
sbb
sbb
cmp
jb
jp
test
scas
iret
xchg
sub
jno
sub
push
and
aam
popa
dec
dec
cmps
pop
sub
fiadd
out
add
int
lock
sub
xchg
mov
mov
lods
sbb
adc
jge
pop
(bad)
mov
sbb
adc
pop
adc
cwde
fyl2xp1
mov
push
in
xor
out
or
es
and
jle
adc
cmp
or
jg
int
stos
mov
pusha
clc
jl
rol
shl
fs
test
outs
push
cdq
mov
test
jmp
sti
aad
sbb
dec
cmp
mov
int
cmp
outs
xchg
iret
dec
mov
call
push
add
jmp
shl
xchg
jno
xor
or
push
sbb
test
shl
adc
sub
outs
inc
jecxz
mov
lods
sub
not
pop
int
fs
mov
in
dec
int3
into
mov
jae
or
cmp
mov
inc
add
out
push
mov
adc
shl
xchg
jmp
mov
dec
or
dec
sub
or
jb
push
imul
mov
enter
mov
and
repz
push
pusha
mov
ror
inc
ror
fistp
fcomip
int3
in
push
inc
fld
cmp
movs
inc
ss
dec
ss
fld
nop
or
push
addr16
adc
in
ins
dec
or
sub
int
sub
ds
pusha
cli
jmp
push
dec
push
movs
(bad)
cmp
cld
mov
rol
shr
aad
cmp
lds
mov
imul
out
outs
sti
or
or
jno
lods
adc
mov
push
mov
ins
jmp
lods
cmovle
mov
popa
fwait
cli
vpaddw
mov
or
lods
cmp
sbb
(bad)
out
adc
leave
pop
mov
jmp
add
inc
sbb
fist
les
mov
push
adc
sbb
hlt
pop
jnp
in
and
mov
xchg
mov
jns
pop
mov
cmps
or
sub
pusha
cld
call
and
pop
fadd
xlat
popf
push
mov
(bad)
xchg
cmps
aam
repnz
push
jae
movs
jne
imul
addr16
loopne
stos
xchg
mov
in
xor
(bad)
aad
ins
mov
xlat
lock
rcl
sbb
push
mov
xor
popa
or
popa
or
adc
hlt
jmp
push
icebp
mov
xor
xor
test
pop
cmp
fdivr
outs
fcom
add
in
aas
jnp
pop
pop
pop
push
repz
dec
add
xlat
xor
gs
xchg
pop
fs
sbb
cmovp
icebp
test
iret
mov
sbb
jns
into
fs
ins
xchg
sahf
xor
ror
clc
jle
jmp
mov
into
xchg
lahf
xlat
(bad)
pop
mov
xchg
jns
aam
call
dec
and
fist
lods
mov
icebp
ret
xchg
in
fmul
clc
jmp
ret
test
inc
movs
xor
sbb
mov
mov
jmp
mov
call
push
int3
scas
scas
cmp
std
ins
xchg
mov
push
sbb
push
gs
iret
jle
repz
adc
lods
xor
or
xchg
sbb
pop
xor
popa
pushf
fs
cs
sbb
sbb
xor
sub
dec
push
ins
pop
mov
jmp
outs
sbb
mov
aam
adc
fldcw
mov
dec
inc
mov
push
sub
push
call
aam
out
outs
cdq
rcl
adc
rep
xor
mov
int3
call
in
xchg
out
add
pop
add
cmp
mov
lea
pop
fsub
and
dec
pop
loopne
inc
jmp
out
adc
jle
or
mov
xor
push
fdiv
ret
data16
mov
xchg
loope
adc
add
jns
lds
mov
sub
js
cmp
dec
les
inc
loop
ins
pop
add
cmp
jmp
pop
dec
jg
xor
ins
xlat
and
xchg
test
jns
jno
loope
mov
jecxz
scas
push
sbb
push
test
pop
mov
shr
xlat
xor
xchg
cdq
out
lahf
add
fcmovbe
push
cmp
mov
outs
ins
cmp
push
pop
sbb
inc
fadd
test
nop
push
push
and
mov
ds
adc
clc
adc
jge
call
jo
sub
jns
and
pop
sbb
xor
lea
mov
inc
test
in
js
mov
push
xchg
sti
cmp
(bad)
jp
mov
jmp
popf
sti
add
arpl
fnstenv
cmp
mov
(bad)
aam
mov
mov
stc
cmp
repz
add
ja
cmp
aaa
dec
call
in
ret
sub
adc
jg
les
mov
les
cmp
in
pop
mov
push
jae
jno
jo
xchg
xchg
cmp
les
je
push
(bad)
in
xor
mov
rcl
and
enter
xchg
loopne
int3
mov
or
push
mov
or
sub
lods
stc
pop
cmp
inc
dec
sahf
js
(bad)
out
mov
outs
or
lahf
sbb
cs
jp
iret
jmp
inc
adc
ret
push
aas
imul
leave
lods
mov
movs
mov
icebp
hlt
mov
cs
dec
jp
or
mov
mov
sub
add
inc
adc
leave
fs
mov
xchg
xor
cld
lock
xchg
out
jge
sbb
retf
jns
xor
sub
inc
push
leave
cmp
dec
xor
out
adc
xchg
cmp
or
cdq
xlat
sbb
leave
cmps
(bad)
sar
out
clc
push
test
mov
ja
leave
(bad)
jmp
leave
xchg
or
ss
dec
neg
add
sub
mov
sar
fcomip
nop
dec
push
call
add
mov
ret
sbb
sbb
or
mov
add
cmp
push
lods
int3
sub
cs
sar
bound
sahf
out
push
push
sahf
push
loop
loop
sahf
(bad)
loop
mov
pop
ud2
and
call
lods
and
xor
mov
les
movs
cmps
add
lods
ja
ds
mov
fcomp
inc
outs
cmp
jmp
and
jmp
lock
mov
fcmovb
lea
sbb
scas
sar
in
sub
sub
jns
sahf
or
pop
add
xor
pop
push
push
js
add
cld
test
daa
cs
mov
adc
inc
inc
sub
mov
pop
jmp
jbe
push
mov
pop
xchg
aas
out
pop
mov
shr
shl
div
stos
hlt
leave
mov
into
lock
inc
push
icebp
jae
and
out
in
dec
ins
push
add
mov
(bad)
mov
outs
ret
enter
mov
in
mov
leave
test
jb
push
adc
mov
add
scas
dec
enter
(bad)
out
add
push
mov
sub
push
out
jo
and
cmps
pop
mov
ror
and
mov
jmp
scas
sbb
sub
push
(bad)
sbb
lahf
add
hlt
push
jge
jae
xchg
loop
lock
cli
stc
inc
mov
lahf
cwde
add
retf
mov
out
mov
js
inc
loope
out
jle
xor
movs
out
mov
aaa
into
pop
jns
div
addr16
and
cmps
stos
lds
aad
aad
pop
add
pop
ja
cmp
push
jo
sahf
xlat
jbe
adc
jl
aad
in
les
je
sbb
sahf
test
les
mov
xor
add
xor
inc
ficomp
mov
test
pusha
scas
fld
inc
sub
bnd
mov
jnp
cmp
cmps
jb
add
dec
out
in
(bad)
sub
jo
dec
into
push
loope
ins
dec
push
and
loop
test
fdivr
or
pusha
cmps
mov
jge
or
push
loope
adc
pop
dec
xor
dec
cld
sahf
sbb
jbe
aam
icebp
jno
mov
data16
push
dec
sti
inc
stos
push
sbb
mov
mov
out
arpl
shr
fwait
push
into
dec
pop
push
pop
nop
pop
xor
pushf
(bad)
ins
xor
adc
loop
es
xchg
xchg
cs
inc
pop
sub
cmp
adc
in
int3
dec
test
mov
hlt
and
lock
imul
mov
or
cmps
out
sbb
lods
push
hlt
fidivr
jge
mov
mov
fld
push
nop
xor
cmc
ins
adc
jns
ja
les
mov
xor
or
or
fild
neg
add
mov
aam
stc
stc
push
repz
inc
fisub
jmp
repnz
movs
dec
inc
adc
inc
cmc
cwde
(bad)
(bad)
sahf
lea
mov
shl
leave
or
stc
jl
inc
mov
mov
daa
xor
xor
and
sbb
mov
daa
jae
mov
sbb
add
paddusb
cs
and
inc
mov
push
xchg
push
and
pop
mov
arpl
cdq
mov
fld
jns
shr
das
xchg
add
pop
adc
ror
mov
and
(bad)
(bad)
cmc
xchg
sub
jo
fisubr
lods
push
iret
stos
jae
mov
jl
sub
repnz
xchg
pop
in
mov
cld
fnstcw
lds
xchg
loop
push
push
icebp
std
jmp
lds
xchg
xchg
int3
enter
(bad)
sub
(bad)
jmp
(bad)
test
(bad)
(bad)
(bad)
mov
loopne
xlat
test
loope
mov
stos
mov
ret
pushf
jb
push
sar
(bad)
div
repz
in
adc
icebp
pop
movs
stos
stc
xchg
(bad)
mov
push
bound
push
xchg
mov
mov
test
or
pop
pop
mov
(bad)
lea
mov
das
pop
xor
jmp
lock
repnz
cmps
mov
inc
inc
or
add
daa
push
ret
out
popf
std
push
mov
popa
mov
or
nop
jb
pop
jmp
mov
add
sahf
int3
sub
sbb
cmp
sbb
sbb
aam
mov
push
push
xchg
xlat
ret
cs
cmp
mov
adc
in
sub
push
(bad)
cs
pop
ds
aam
jge
ins
popf
push
in
sbb
and
xor
stos
fcom
int
push
inc
aad
repz
lea
adc
icebp
sar
repz
cmps
xchg
xchg
test
fstp
mov
jg
lea
aas
cmc
mov
stos
push
clc
(bad)
or
out
sti
ja
adc
mov
out
call
add
out
fisub
cli
jl
fmul
pop
loop
mov
mov
imul
mov
dec
jp
xor
cmp
in
cmc
inc
pop
ins
jb
cmc
and
pushf
cmp
addr16
clc
jno
jmp
adc
int
xor
xchg
push
adc
adc
adc
mov
push
fs
mov
in
mov
imul
ds
xchg
and
mov
cmp
(bad)
pop
mov
jge
loop
jge
cs
inc
repz
data16
sub
sub
xor
jle
jp
imul
(bad)
(bad)
push
sbb
dec
gs
lahf
jl
fstp
rol
imul
fisub
cdq
movs
or
or
test
ret
push
rol
sti
xor
ins
addr16
push
cmp
sbb
mov
xor
out
adc
xlat
pop
loopne
maskmovq
test
and
xor
sbb
and
push
sbb
fcomp
cs
adc
mov
cmp
xchg
pushf
jb
outs
mov
fisub
xor
xor
mov
mov
dec
call
inc
sub
or
std
inc
mov
dec
mov
(bad)
sub
mov
mov
pop
xchg
(bad)
nop
lahf
jge
mov
fs
(bad)
dec
loopne
ja
test
loopne
mov
cdq
fmul
or
shr
out
int3
dec
dec
dec
lds
dec
cmp
mov
fild
retf
ss
or
imul
sti
xchg
into
fnstcw
aaa
int
outs
clc
inc
or
jae
pop
nop
lahf
pop
or
aam
jg
mov
pushf
stos
jle
mov
je
cmp
aas
add
sbb
jo
popf
cwde
mov
(bad)
inc
push
dec
fisubr
jne
mov
inc
or
xchg
cmp
cs
sbb
mov
in
mov
push
push
sub
dec
fstp
jb
inc
dec
xchg
mov
add
jns
dec
and
out
imul
add
mov
inc
xor
adc
imul
push
daa
in
push
int3
pop
and
(bad)
lods
mov
(bad)
fdiv
xor
std
add
je
enter
and
loopne
hlt
loop
mov
inc
pusha
sbb
and
mov
jae
dec
add
std
sbb
mov
adc
and
or
pop
or
push
mov
js
dec
mov
xor
jne
xchg
dec
stc
mov
retf
cmc
pop
fist
dec
mov
and
mov
xchg
mov
cdq
hlt
sub
cld
jb
daa
xchg
test
dec
movs
adc
dec
fwait
lds
add
popa
fwait
popa
les
test
or
mov
daa
std
push
stos
dec
sbb
out
and
mov
sar
sub
jo
mov
popa
addr16
movs
pop
loopne
test
or
(bad)
in
sti
adc
sbb
leave
stos
sbb
div
sbb
push
mov
or
ss
es
in
pop
mov
jae
or
mov
jmp
and
pop
inc
jno
jl
sbb
pushf
outs
lds
xlat
jnp
aam
cmp
daa
cmps
stos
jb
or
sbb
js
ins
jo
sahf
jge
std
inc
mov
sti
mov
cmp
cmp
and
mov
cli
inc
out
jbe
cmp
jge
mov
mov
pop
mov
retf
ficomp
fld
in
add
shl
cmp
fldcw
mov
(bad)
jecxz
retf
rcl
or
sbb
or
xor
sahf
lods
mov
movs
add
add
repz
std
pop
xor
enter
iret
arpl
(bad)
outs
or
into
scas
(bad)
xchg
cmp
(bad)
fwait
and
push
xor
sub
cmp
movs
lahf
push
dec
mov
fs
pop
(bad)
loope
xor
inc
sub
adc
jns
pop
pop
inc
mov
int3
out
inc
les
sub
xchg
cmp
xchg
sahf
retf
shl
call
inc
pop
sub
mov
std
mov
xlat
sub
dec
jmp
ins
cmp
mov
dec
cmp
mov
outs
push
jae
test
xchg
fnsave
cmp
lods
stc
xchg
repnz
jle
cwde
fucomi
in
mov
shl
retf
push
sbb
add
hlt
and
test
call
rcl
or
push
xor
call
arpl
es
xor
cmp
icebp
clc
imul
stos
popf
mov
call
mov
dec
jmp
js
nop
lods
pusha
pop
xchg
scas
stos
movs
cdq
in
sbb
lock
lock
jmp
cmp
push
fidiv
mov
mov
fbstp
mov
xchg
sbb
popa
cld
fldcw
inc
mov
test
and
mov
cmp
hlt
ins
jmp
imul
and
(bad)
cld
adc
cmps
push
xchg
ds
adc
push
mov
add
cli
mov
ss
mul
fsub
cs
repz
xor
push
out
pop
mov
test
or
aam
outs
dec
dec
pop
aaa
(bad)
shr
in
xchg
mov
mov
mov
movs
cdq
adc
pop
sub
shl
imul
add
stos
and
xor
std
dec
es
outs
das
sub
and
add
xor
push
cmp
call
and
mov
pushf
dec
push
call
fwait
xchg
fcomp
fnstcw
mov
pop
jns
and
out
dec
lods
cmp
ins
push
jmp
cli
dec
mov
lea
mov
pop
int
clc
mov
xchg
xor
loop
ret
jb
jne
sbb
cli
fnsave
inc
mov
bound
sub
push
in
sub
push
dec
int
ins
das
jmp
fadd
dec
add
dec
inc
lods
enter
xor
cmp
clc
shl
or
fsub
dec
ja
lods
ds
xor
sar
sbb
push
pop
js
jmp
int3
push
xchg
push
mov
out
xor
cli
(bad)
or
and
xchg
inc
aam
sbb
pop
jno
(bad)
es
fstp
(bad)
push
add
in
ror
mov
popa
jp
sbb
fdivrp
pop
inc
unpcklps
pop
loopne
xor
repnz
push
dec
jbe
adc
shr
data16
(bad)
push
push
mov
loope
test
sbb
pop
popa
dec
loope
test
cmps
rcr
lds
mov
fst
xchg
mov
leave
daa
dec
push
cli
cwde
dec
rol
into
out
lahf
jnp
xor
jmp
jb
mov
or
bound
sbb
loope
rcr
ds
or
mov
ret
xchg
pop
stc
stos
lds
fsub
dec
add
dec
or
and
jmp
dec
pushf
jmp
dec
cmp
or
push
add
fisubr
jae
sub
mov
shr
xchg
lea
and
sub
cmp
push
and
mov
add
(bad)
retf
das
cmps
xor
call
js
nop
pop
enter
cld
jle
dec
outs
add
xchg
xchg
mov
loop
int
icebp
ds
and
sti
ds
stc
repz
dec
mov
repz
cmp
sub
push
je
push
xor
ds
xchg
inc
adc
test
or
push
test
xchg
inc
inc
adc
call
jmp
daa
mov
pop
push
lahf
sub
xchg
xchg
pop
ins
test
rcl
push
(bad)
pop
inc
cmp
or
movs
movs
in
push
fsub
lods
mov
push
dec
ins
jmp
xchg
sti
cmp
scas
ror
(bad)
and
pop
pop
mov
mov
stos
scas
test
mov
ja
mov
push
mov
adc
fmul
lds
out
xor
(bad)
xor
retf
push
mov
mov
jns
ret
in
hlt
sub
adc
enter
mov
sub
retf
ret
lea
out
mov
sti
mov
in
(bad)
mov
dec
adc
iret
xchg
and
(bad)
fcom
fild
mov
push
pop
cld
ret
xor
pop
push
popa
pop
mov
repz
mov
jmp
lahf
push
call
in
dec
adc
pop
mov
(bad)
std
out
dec
aaa
sahf
jmp
sub
imul
mov
mov
out
pop
jnp
pushf
jle
fmul
sub
dec
jg
popa
(bad)
inc
sub
call
cwde
icebp
fidivr
add
sbb
sbb
fdiv
xchg
fnstsw
push
or
test
movs
mov
lock
shr
aas
push
mov
jp
imul
repz
mov
pop
sub
and
mov
(bad)
sub
sahf
mov
xchg
adc
movs
inc
fist
mov
cmp
cld
dec
mov
and
inc
push
fptan
xchg
je
push
push
loop
rcr
imul
pop
push
add
pop
repnz
xlat
xor
pushf
jle
jo
inc
jbe
and
mov
retf
in
add
mov
(bad)
stc
clc
mov
or
sar
push
imul
daa
pop
dec
dec
ret
in
loopne
push
hlt
ret
jg
outs
pop
sub
popa
shr
sar
fcmovne
jmp
enter
jg
xchg
jns
and
hlt
sbb
pop
add
call
or
fwait
sub
mov
add
int
bound
daa
pop
mov
icebp
test
push
cmp
adc
test
(bad)
xor
sub
nop
retf
aas
xchg
and
push
cmps
dec
or
mov
pop
jb
jle
aas
int3
hlt
mov
les
pop
adc
xchg
add
ret
mov
sbb
leave
xlat
stos
inc
in
nop
lds
movs
cmps
stc
sbb
and
add
mov
jmp
cmp
push
sbb
aam
pop
inc
dec
xor
pop
jns
sbb
add
retf
xlat
arpl
(bad)
inc
inc
sar
jno
mov
enter
pop
cmp
ds
jns
cmp
push
jl
xor
mov
popa
sbb
sub
push
fcmovne
mov
add
and
pop
jecxz
dec
jmp
sub
xchg
icebp
out
mov
jb
mov
mov
sub
or
out
mov
push
ins
div
or
or
mov
ror
jo
ins
mov
addr16
push
pop
aam
mov
out
icebp
xor
sub
push
ja
jmp
mov
fbstp
xor
sbb
mov
pop
lea
xchg
loope
lock
xor
add
pushf
je
in
fnstcw
mov
xor
pop
xor
inc
mov
cld
xchg
fsub
dec
arpl
cmps
inc
and
mov
std
pop
or
jne
call
cld
loop
mov
mov
inc
mov
inc
mov
pop
not
stc
pop
push
stos
adc
outs
push
push
cmps
es
mov
test
lea
xlat
lods
pop
push
popf
cdq
fsubr
add
mov
xchg
or
xchg
cmp
cmp
xchg
out
xor
aas
(bad)
je
jmp
jmp
inc
adc
pop
jae
repz
jecxz
loope
pop
inc
adc
pop
adc
or
les
jnp
lock
addr16
or
in
scas
jp
and
cmp
adc
xchg
push
dec
or
xlat
fwait
push
dec
pop
outs
dec
test
mov
cmc
add
pop
sub
test
js
sub
fdivrp
outs
ret
jae
sub
mov
out
xchg
inc
out
in
dec
fdivr
sbb
stos
(bad)
nop
push
fwait
mov
ror
cdq
mov
mov
pop
js
xor
test
in
inc
jg
sbb
xchg
jmp
sti
push
mov
adc
sub
mov
add
enter
mov
movs
test
and
lock
daa
ss
pop
pop
call
loopne
rcr
arpl
mov
adc
xchg
ret
jo
pop
jns
in
jns
cmp
dec
dec
add
or
outs
sar
out
inc
push
sbb
dec
sbb
popf
hlt
or
xor
inc
or
inc
mov
dec
mov
push
out
add
jnp
gs
cwde
enter
mov
shufps
and
rol
adc
test
out
pop
push
fbstp
inc
je
pop
pop
mov
(bad)
in
iret
add
addr16
xchg
fimul
sar
push
jb
outs
stos
fsub
ss
retf
or
and
rcl
aad
aaa
xor
xchg
or
lahf
mov
ins
sub
(bad)
loope
and
fisubr
js
xchg
lods
lea
cli
inc
sub
push
in
(bad)
(bad)
out
mov
and
enter
repnz
stos
dec
add
or
push
cmp
cmovge
xor
int
dec
ss
ds
ja
nop
jmp
int3
test
ficom
cmps
push
xor
hlt
pop
addr16
jb
cmp
jg
fsubr
movs
dec
fldl2e
xor
xchg
ds
es
enter
lds
xor
iret
mov
cld
sub
ja
push
pop
adc
ret
push
stc
xchg
scas
inc
and
adc
mov
fst
xchg
rcl
sti
add
int3
mov
idiv
js
stc
shl
cmp
imul
mov
div
jnp
cmp
fxtract
hlt
adc
mov
sar
jmp
(bad)
in
and
aaa
inc
fs
pop
lds
push
movs
mul
pop
stos
xchg
xlat
push
cmp
gs
das
adc
addr16
cmps
cmp
cmp
shr
push
push
cli
sbb
fidivr
les
lahf
jnp
push
arpl
test
mov
daa
xchg
add
aam
leave
imul
fbld
cdq
cld
xchg
mov
pushf
adc
pusha
push
push
fs
and
sub
es
leave
iret
push
sub
sub
dec
clc
inc
sbb
ror
loope
and
imul
mov
and
leave
xor
and
add
rcr
cld
jns
clc
push
into
(bad)
dec
or
dec
fucomi
jle
loope
add
(bad)
jp
push
daa
cmp
sar
dec
test
mov
mov
or
mov
popf
clc
scas
(bad)
ins
lds
in
jl
pop
sti
or
shr
sti
cld
popf
jno
cli
dec
push
xchg
fstp
jl
push
push
pop
jns
jge
sub
jg
pop
xchg
push
call
lea
inc
in
pop
mov
mov
int
mov
push
ja
shr
or
sbb
loope
push
lea
es
xchg
or
cmp
int
xchg
imul
xlat
xor
nop
mov
jmp
dec
dec
mov
(bad)
mov
gs
ret
pop
fsub
add
das
fs
sbb
popf
(bad)
outs
lods
lods
xchg
push
mov
test
mov
and
(bad)
xchg
mov
push
and
cmps
test
add
dec
ret
test
inc
stos
push
rol
movs
fs
shl
jbe
and
push
pop
dec
arpl
fnstenv
and
xor
(bad)
mov
ds
stc
jp
mov
in
neg
jae
fndisi(8087
loop
aaa
and
bound
gs
mov
cmps
loope
into
shl
dec
cmps
lea
(bad)
xor
lods
psubw
aaa
popa
push
stos
pop
xor
ins
sbb
fisttp
jg
fdivr
(bad)
fistp
push
jge
xchg
into
stos
cmp
mov
cwde
sub
popf
and
sbb
test
sub
cmps
cmp
test
mov
les
sub
dec
scas
lods
cmps
mov
sbb
xchg
and
nop
sbb
inc
mov
push
sub
cmp
(bad)
stc
imul
(bad)
jae
xor
outs
stc
cdq
out
sar
jbe
dec
clc
mov
mov
dec
es
and
movs
sub
xor
jmp
fild
enter
adc
dec
and
aam
sub
sub
push
cld
or
push
xchg
sbb
popf
dec
xor
nop
jne
mov
mov
ja
mov
jno
in
call
mov
or
add
or
or
jbe
fwait
lds
sbb
jecxz
cmp
sub
mov
xchg
js
push
in
cli
gs
jmp
push
lds
inc
jmp
sti
cmc
xchg
xlat
sbb
pop
in
jnp
and
and
scas
jg
ja
out
push
or
ja
push
pop
mov
arpl
(bad)
jg
lahf
xchg
fmul
leave
adc
fdivr
mov
(bad)
mov
jge
pop
pop
xchg
outs
data16
fwait
and
jle
je
sub
icebp
xchg
imul
inc
aas
iret
or
pop
nop
fcom
call
add
mul
icebp
pop
call
(bad)
pusha
(bad)
imul
repz
jo
scas
mov
jns
lods
outs
mov
xchg
xlat
cmp
sahf
fdivrp
mov
sub
std
shl
jae
shr
cmp
outs
ja
jbe
adc
jge
mov
test
scas
jbe
push
mov
aaa
out
ss
js
jle
das
cmp
cmps
iret
pushf
lods
mov
xor
sub
jge
xchg
mov
mov
dec
fcomp
lea
jns
jns
stos
mov
mov
xor
sub
or
push
cmp
cli
retf
ins
mov
inc
and
call
cli
adc
mov
call
cmp
lods
icebp
repz
xor
and
ja
fwait
stos
cmps
stos
js
ficomp
mov
imul
inc
loope
(bad)
not
mov
test
sti
mov
jp
sbb
fst
out
add
lahf
pop
adc
in
in
pop
pop
xor
clc
inc
imul
xor
(bad)
pop
xlat
in
hlt
push
adc
xchg
shl
out
pushf
mov
jae
cmc
js
push
fcmovnu
mov
cmc
mov
daa
fisubr
movs
sar
rcr
inc
out
sub
test
pop
(bad)
dec
sbb
int3
sahf
mov
scas
xchg
es
sbb
movaps
lahf
stos
dec
mov
cmp
shl
adc
jae
jns
adc
js
dec
scas
movs
movs
pop
xlat
push
adc
pop
fwait
retf
gs
jae
not
(bad)
jae
add
std
fst
sub
mov
outs
mov
aad
mov
dec
xor
sti
jo
popa
push
ja
das
push
imul
adc
jbe
int
repz
imul
frstor
xor
into
lahf
fst
repz
mov
retf
dec
cmps
test
and
jns
sub
and
fmul
movs
mov
jne
iret
dec
(bad)
(bad)
clc
je
add
jecxz
pop
jno
cmp
fwait
in
add
adc
out
in
jns
(bad)
out
jno
pushf
push
out
fdiv
cmp
xchg
stos
in
mov
xor
dec
xchg
aad
stos
xor
js
mov
iret
addr16
repz
adc
fcom
jnp
jmp
mov
jae
jnp
js
stos
imul
jl
test
inc
jmp
or
mov
in
sbb
push
xchg
pop
push
jae
jle
movs
cli
jmp
cmp
mov
adc
into
retf
repnz
cld
loop
add
sti
into
jle
inc
(bad)
out
xor
inc
out
call
dec
jg
fimul
jnp
dec
or
icebp
sub
mov
int
rcl
dec
xlat
rcr
outs
rcl
mov
jle
pop
ret
or
or
cdq
int3
sub
ret
movs
add
rep
add
jno
aad
push
cwde
test
mov
jo
(bad)
xchg
cmp
bound
mov
shl
adc
sti
mov
dec
xor
cmc
push
test
out
sar
aas
jae
cld
dec
mov
idiv
sbb
push
push
sbb
sub
aam
stos
retf
sti
jbe
loope
cmp
cld
loope
cli
mov
popf
inc
fist
jnp
cmps
(bad)
(bad)
fcomp
ins
ins
push
sub
push
shl
xor
sbb
pop
jnp
cmc
mov
inc
pop
cs
(bad)
xor
enter
jle
inc
push
dec
xlat
pop
icebp
retf
call
or
mov
test
loop
es
out
(bad)
lods
mov
call
mov
in
rcl
cmps
cli
inc
neg
aas
adc
fdiv
adc
fwait
adc
mov
mov
in
dec
dec
aas
xchg
dec
jge
pop
es
inc
dec
xchg
popf
sti
xor
sub
mov
mov
loopne
mov
xchg
push
jns
dec
jp
jle
xor
lea
jecxz
test
or
movs
xchg
cmp
daa
cmp
mov
pop
inc
push
dec
in
cmps
sbb
jne
call
jnp
aam
jmp
int
mov
gs
push
out
pop
sti
push
push
cmps
push
pop
idiv
jnp
out
xchg
in
inc
movs
jecxz
(bad)
lods
repz
mov
(bad)
aaa
fcomp
mov
pop
fsub
gs
cmp
out
nop
pop
add
(bad)
xlat
sahf
mov
mov
mov
jne
fcmovnu
mov
fnstenv
pop
ret
inc
inc
cmp
es
stc
pop
xchg
push
sbb
call
dec
push
push
jbe
pop
inc
fwait
dec
fild
mov
pop
std
rcr
sar
out
aad
adc
(bad)
(bad)
movs
jmp
aad
lods
ins
and
aaa
(bad)
cmp
(bad)
mov
jecxz
xchg
mov
xlat
mov
dec
sub
mov
std
ficom
scas
xchg
jg
mul
(bad)
outs
gs
jnp
mov
mov
aaa
pop
pop
jp
fsub
ds
inc
lahf
push
ficom
pop
sub
enter
icebp
out
fistp
fmul
push
add
mov
sbb
pop
pop
and
ret
push
pop
pusha
(bad)
jmp
(bad)
push
sti
repnz
inc
xchg
cli
sbb
pop
adc
aad
cmp
int
test
jns
inc
or
push
xchg
imul
dec
movs
rol
sahf
leave
sbb
push
hlt
les
shr
jmp
jnp
popa
ja
fnsave
inc
lahf
out
or
jmp
cmps
lods
aaa
push
scas
stos
into
(bad)
xchg
sub
mov
test
mov
xor
inc
xchg
mov
sub
cmp
retf
ficom
jl
ins
fild
mov
(bad)
(bad)
mov
in
push
jno
int
in
xchg
cmps
mov
ds
call
pop
or
mov
stc
dec
inc
cs
cmps
loopne
movs
pop
cli
lods
iret
xchg
out
xchg
test
cmc
push
pop
jmp
pop
mov
mov
enter
scas
pop
iret
sbb
stos
ss
dec
jbe
sti
sbb
jb
jb
pop
into
push
loope
sar
inc
xchg
scas
jnp
scas
sahf
push
cmps
int
mov
outs
push
std
call
stos
dec
into
sar
cli
in
movs
push
sahf
enter
arpl
jno
mov
sti
cdq
jo
cmps
mov
mov
outs
shl
stc
inc
push
pop
push
sbb
fucomi
ds
neg
sub
imul
lahf
mov
hlt
ficomp
and
retf
movs
xchg
pop
int
jbe
ds
ins
add
mov
mov
mov
xchg
cmp
test
xchg
fucomi
outs
xor
or
push
xlat
mov
sbb
or
xor
sbb
popf
shl
push
mov
in
jecxz
mov
lds
sar
(bad)
lahf
cli
pop
js
cmc
cmc
mov
sub
stc
fdivr
xor
inc
mov
dec
jmp
jae
sar
mov
nop
mov
(bad)
cli
xchg
pop
mov
xchg
lods
mov
aas
jle
(bad)
jmp
add
cmps
push
mov
xor
jp
in
daa
jge
call
mov
pop
mov
jae
sahf
xchg
inc
pop
call
ins
outs
sub
inc
movs
jne
dec
or
sub
popa
js
sub
jb
push
daa
ins
rcl
cmp
movs
cmps
pop
out
cmp
loope
popf
jmp
pop
mov
cli
adc
fnstenv
mov
addr16
push
sbb
jmp
and
loope
popa
sbb
add
push
stos
jle
pop
sti
lds
dec
mov
and
mov
mov
fwait
xchg
sbb
clc
mov
ret
fisub
xchg
repnz
mov
jb
loopne
jb
not
ret
cli
sub
jecxz
pop
cmp
fneni(8087
cmc
into
inc
aaa
mov
and
repz
call
ds
dec
cmp
cmps
xchg
arpl
push
std
sar
adc
call
xchg
dec
mov
xchg
in
and
(bad)
(bad)
sub
mov
jle
ret
(bad)
pop
jmp
fld
mov
mov
mov
ins
js
cmp
jno
out
jecxz
je
imul
push
xchg
push
push
mov
mov
js
cmp
in
out
cmp
pop
jl
push
cmp
sub
lods
jecxz
cwde
repz
je
lods
mov
out
xor
lahf
cwde
pop
jnp
pop
pop
ja
jae
dec
mov
fwait
xor
mov
inc
cwde
test
in
jns
(bad)
scas
sbb
sub
(bad)
or
mov
jp
mov
adc
inc
std
adc
cli
jmp
push
xchg
popf
add
ss
(bad)
and
(bad)
outs
lea
xchg
push
xor
xor
xchg
add
jg
stos
push
(bad)
mov
leave
mov
cli
mov
(bad)
pop
pop
cmps
inc
jle
pop
es
inc
xor
shr
hlt
test
pop
jb
adc
mov
cs
xchg
sub
pop
das
repnz
sbb
aas
sub
icebp
out
(bad)
imul
xchg
js
lds
jnp
rcr
cmps
xchg
retf
ret
xchg
cmc
push
ins
adc
cmp
fild
xchg
sbb
dec
sbb
inc
retf
lds
jmp
test
cmp
mov
test
sub
imul
in
leave
mov
or
sar
iret
push
or
stc
leave
leave
mov
cld
clc
outs
lock
les
mov
into
movs
sub
dec
aad
popf
mov
jp
js
lahf
mov
lock
jp
out
mov
popa
xlat
cmc
mov
ss
mov
into
sbb
xchg
sbb
movs
push
movs
ror
jmp
jge
fdiv
or
lods
cmps
aaa
iret
leave
ss
(bad)
test
lahf
out
out
ds
neg
xchg
pop
aas
mov
jl
mov
add
repz
jns
jle
pop
push
test
pop
mov
popa
in
xchg
scas
and
push
sub
in
jmp
ins
test
(bad)
aaa
dec
jns
sbb
ins
or
rcl
push
call
cmp
rcl
bound
inc
dec
(bad)
cmp
fstp
mov
data16
into
xchg
mov
adc
mov
scas
dec
in
cld
mov
xor
lahf
pop
inc
mov
stc
js
out
pop
fcmove
in
pop
mov
ret
gs
retf
shl
xor
jbe
cmp
sbb
xchg
ja
or
jne
movs
stc
out
mov
push
out
gs
les
sahf
sti
push
push
stc
(bad)
lahf
ds
pop
xchg
fwait
xchg
and
ficomp
(bad)
mov
xchg
mov
inc
mov
repnz
mov
mov
and
dec
sub
out
cmps
xchg
pmaxsw
adc
pop
retf
(bad)
fisttp
rcr
jns
fwait
sub
lahf
pop
mov
adc
(bad)
cmp
loop
jle
aas
xor
lods
idiv
sbb
mov
lods
repnz
call
es
mov
cmp
xchg
ror
ins
pop
and
or
shl
sub
out
cmp
clc
(bad)
dec
ds
loop
adc
repz
in
xchg
add
mov
xchg
(bad)
imul
inc
out
shr
bsf
(bad)
fst
stos
test
mov
std
call
dec
lock
mov
in
(bad)
mov
scas
sub
popa
ficomp
sub
mov
ins
stc
xor
xchg
pop
mov
inc
adc
mov
fsub
jg
dec
rcr
cmp
not
lds
js
(bad)
lods
fiadd
cwde
cmps
inc
leave
lods
in
push
(bad)
pop
mov
mov
mov
mov
syscall
mov
jge
in
jle
push
popf
dec
mov
and
push
fstp
retf
xchg
pushf
jge
prefetchwt1
dec
mov
inc
test
inc
jle
stc
jl
bound
(bad)
cmp
or
data16
mov
pop
and
jmp
jl
in
(bad)
pop
cmp
xchg
jg
fucomp
js
lock
out
inc
jb
jle
sbb
clc
cs
jbe
scas
loope
cwde
imul
mov
fadd
in
dec
mov
jmp
add
jle
mov
xlat
cli
mov
mov
ds
adc
sbb
push
mov
pop
fdiv
jbe
push
ror
repnz
pop
jb
div
fcomip
je
mov
in
pop
pop
mov
lds
dec
push
dec
fisub
pop
adc
aad
mov
and
jnp
in
imul
or
pop
popa
cmp
or
push
mov
loopne
imul
push
mov
retf
sbb
pop
outs
movs
lods
lahf
xor
adc
jecxz
cs
inc
xor
push
ss
sub
fucomi
cmp
cmp
fwait
pusha
and
mov
jmp
xor
out
lods
mov
in
mov
sahf
inc
fistp
movs
xor
add
pop
scas
retf
pop
fs
retf
or
(bad)
pop
call
shl
add
in
jmp
ins
clc
scas
jl
(bad)
in
gs
imul
or
ret
pop
nop
xchg
sbb
into
sahf
fwait
into
shl
cmps
xchg
ins
mov
out
sbb
lahf
push
mov
scas
jg
retf
sbb
mov
in
jns
mov
ror
mov
cmps
inc
mov
xchg
icebp
(bad)
out
dec
outs
add
inc
pop
jns
nop
mov
mov
call
(bad)
mov
mov
fs
xchg
js
les
loope
sbb
and
int
mov
test
(bad)
add
dec
sbb
data16
lahf
or
or
sub
inc
mov
push
ja
test
in
pop
fild
sub
loop
(bad)
leave
jle
rcr
mov
sar
fs
xor
cmpxchg
fs
mov
icebp
xchg
hlt
movs
out
adc
mov
xchg
jnp
cmp
xchg
inc
sub
mov
inc
inc
jbe
sahf
sbb
xchg
lods
inc
pop
sub
loop
xor
and
jg
xchg
aaa
lea
call
hlt
retf
sub
repnz
mov
mov
lds
fisubr
or
xor
sbb
pop
jle
scas
jecxz
mov
cmp
xor
mov
jno
fistp
inc
dec
movs
dec
dec
mov
or
push
fisubr
test
lods
mov
arpl
sar
mov
jne
fdiv
lahf
js
mov
call
mov
xchg
xchg
cmc
bound
mov
shl
mov
sbb
xchg
sbb
jp
je
int3
cmp
jmp
shl
stc
mov
or
cmp
cdq
inc
xchg
cmc
lock
push
pop
out
test
xlat
fcom
pop
push
mov
sub
movs
jmp
cmp
ret
movs
shl
push
in
dec
cmc
mov
les
push
fwait
cmc
in
mov
jl
xlat
pop
inc
js
std
mov
xchg
mov
jne
cmc
imul
jae
hlt
xchg
push
lahf
lahf
push
dec
jl
adc
mov
aas
loope
jl
xchg
(bad)
or
cmp
cdq
or
cld
repnz
pop
outs
sbb
add
ret
cmp
mov
imul
lea
inc
jnp
pop
sbb
imul
repnz
call
ror
mov
rcl
popa
jae
xchg
adc
mov
and
sub
and
call
jp
pop
nop
lods
xor
imul
mov
mov
jb
sahf
(bad)
in
push
repnz
and
xchg
xor
mov
(bad)
mov
scas
scas
lods
ds
push
sahf
pop
jne
jo
aaa
fldpi
out
arpl
call
pop
adc
imul
nop
repz
xor
inc
fisubr
int3
pop
imul
pop
gs
pop
xor
push
aad
in
sub
fst
outs
push
sbb
and
xchg
call
out
add
push
sar
sar
cli
mov
(bad)
aaa
shl
cmp
jl
popa
out
inc
mov
mov
(bad)
pmulhw
xchg
mov
push
js
lods
bound
addr16
leave
gs
mov
cli
dec
shr
and
cmc
push
(bad)
fnsave
shl
jge
mov
outs
cwde
shr
dec
(bad)
imul
and
push
push
repnz
scas
mov
aas
pop
pop
jo
out
lods
cdq
fwait
or
out
std
stc
mov
dec
jns
mov
lods
js
xchg
sub
dec
dec
daa
mov
frstor
xchg
jb
jp
in
inc
jecxz
dec
aam
test
pop
fistp
push
in
aas
xor
popa
jl
mov
cmp
xchg
jle
push
push
lahf
xchg
jl
sbb
push
(bad)
loope
dec
push
das
and
test
pop
dec
cmp
cmp
pop
xlat
push
loop
xchg
outs
leave
in
dec
out
cmp
mov
pop
sub
ret
adc
or
mov
mul
dec
xchg
push
or
das
mov
mov
add
test
add
fdivr
dec
fwait
lock
(bad)
les
rol
xchg
lahf
into
mov
jl
stc
jne
(bad)
js
test
repnz
mov
std
add
add
stos
out
xchg
shl
je
ret
pop
xchg
ja
xor
retf
in
movs
repz
lahf
leave
shl
out
aad
jmp
dec
inc
fidivr
mov
addr16
stc
xchg
jmp
mov
pop
xchg
adc
and
adc
gs
shl
cmp
in
xchg
scas
push
inc
es
pop
ficomp
dec
fs
jns
or
repz
ja
aam
int
inc
mov
mov
xchg
(bad)
iret
scas
pop
loopne
fist
mov
aam
mov
aaa
cs
mov
call
addr16
jne
fldenv
lock
repz
jbe
and
idiv
(bad)
inc
mov
in
aaa
into
pop
ja
sti
inc
ret
iret
lods
cld
sbb
ss
and
jno
mov
imul
je
call
ror
push
call
out
cmp
cld
mov
mov
lock
out
popf
out
sub
sar
loope
jae
fcmovne
xchg
test
jmp
sbb
jl
pop
mul
scas
cli
mov
jp
pushf
iret
push
fild
cmp
mov
xchg
lods
jbe
jno
xchg
outs
fs
leave
arpl
dec
dec
out
xor
lods
std
das
in
fstp
(bad)
push
fwait
call
outs
adc
(bad)
mov
sub
pop
inc
pop
sbb
xor
inc
imul
adc
xchg
inc
xor
push
addr16
cmp
mov
sbb
adc
cmc
pop
ja
sub
mov
in
fwait
lock
xchg
sub
lock
sub
arpl
ds
jecxz
cmp
cmc
into
sub
push
jmp
sahf
int3
data16
aad
fist
fwait
jge
sti
sbb
mov
std
jle
shl
mov
in
fwait
sti
(bad)
loopne
repz
add
stc
(bad)
add
dec
(bad)
xor
out
or
xchg
pusha
pop
aam
stos
dec
xchg
pop
mov
cdq
call
out
rol
imul
jns
sbb
jo
(bad)
sub
retf
pop
iret
adc
xlat
sbb
cmp
mov
mov
iret
add
mov
xchg
inc
push
push
push
icebp
xor
mov
pusha
mov
mov
xchg
fst
cmp
push
jne
pusha
pop
ins
adc
sub
dec
sub
push
pop
mov
in
loope
(bad)
leave
fnstsw
fs
call
(bad)
(bad)
cli
addr16
and
dec
mov
fmul
add
daa
pop
shr
pop
movs
gs
and
(bad)
xchg
mov
loope
cmp
repz
fisttp
(bad)
test
and
std
(bad)
xor
dec
aad
sub
or
popa
ja
out
jg
push
dec
mov
(bad)
fstp
or
movs
cmp
jge
data16
loopne
fimul
cmp
cli
(bad)
cs
out
fcmovnb
push
mov
aaa
sbb
jge
mov
imul
jg
dec
and
movs
xchg
es
pop
xchg
cmp
enter
mov
jl
lods
xor
jp
mov
es
jnp
(bad)
fild
sub
jbe
and
in
jb
fwait
xor
adc
loopne
test
push
je
inc
inc
fld
imul
pop
sar
push
pop
addr16
xor
cmp
xchg
(bad)
cdq
push
mov
jne
int3
neg
xchg
sub
call
pop
pop
inc
pop
jecxz
push
xor
and
cli
adc
jo
jmp
xchg
add
stos
dec
cmp
mov
inc
in
js
push
and
mov
test
jp
xor
pop
out
in
mov
pop
xchg
or
lods
in
jns
pop
mov
cmps
fimul
xlat
pop
jnp
mov
les
adc
loopne
push
call
cmc
scas
adc
cmp
cmp
pop
pop
cmc
or
cld
adc
outs
sbb
or
xor
xchg
cmps
(bad)
pop
(bad)
mov
(bad)
test
cld
dec
xor
jmp
fisttp
cmp
pop
clc
(bad)
xchg
out
call
retf
dec
(bad)
gs
xchg
fsubr
stc
fsubr
fsubr
mov
mov
inc
xor
pop
hlt
inc
add
sbb
data16
xchg
das
xchg
cwde
mov
mov
gs
call
fsubp
dec
lods
jmp
aas
mov
mov
lods
in
xchg
inc
ds
fsubr
mov
push
mov
cmp
test
xor
ins
mov
shr
mov
push
cmp
mov
vmovddup
cdq
out
aam
dec
into
mov
jg
sti
jne
mov
cmc
cdq
popf
shl
mov
dec
fild
sbb
sub
adc
or
xadd
dec
xchg
sub
call
cmps
inc
push
dec
push
popa
addr16
and
push
in
loope
cmps
iret
xchg
neg
pop
cwde
sbb
std
test
or
push
jnp
or
cdq
js
and
add
jb
mov
(bad)
retf
cwde
hlt
sub
or
or
test
es
push
sub
pop
pop
inc
sbb
xchg
pop
push
mov
and
inc
xor
jp
mov
add
mov
mov
stc
in
sub
pop
adc
pop
pop
push
or
in
cmc
cmp
daa
sbb
lock
jnp
pop
iret
sbb
int
pop
cdq
lahf
in
jmp
jge
xchg
push
mov
scas
cmp
sbb
add
pop
fnstenv
xor
scas
jp
mov
(bad)
lods
inc
sub
in
dec
mov
mov
xor
adc
pushf
movs
jg
popa
fild
imul
xor
adc
xchg
sti
stc
aad
rol
popa
(bad)
in
dec
mov
shr
outs
or
mov
jecxz
xor
lods
dec
fsub
jle
push
adc
sbb
les
sar
jae
retf
repnz
mov
aad
push
ds
push
hlt
jmp
dec
cwde
je
push
dec
call
or
inc
lods
ret
xor
dec
test
push
mov
sub
ds
or
mov
mov
bound
mov
xchg
mov
(bad)
push
outs
sbb
xchg
push
lods
rol
dec
lds
mov
mov
adc
pop
pop
shr
cmp
dec
cmp
popf
in
push
int3
arpl
fiadd
test
sub
test
mov
xor
xor
test
inc
test
add
adc
retf
or
dec
add
std
fild
leave
hlt
xchg
jae
sub
cmp
cwde
stc
cmp
loop
fcomp
leave
dec
mov
dec
ret
xor
push
inc
repnz
sub
inc
scas
sbb
mov
mov
adc
ror
jmp
ja
popf
xchg
xchg
dec
pop
out
push
je
sub
shr
inc
and
mov
mov
inc
sbb
mov
dec
push
ret
add
(bad)
mov
and
fcomp
mov
xor
movs
adc
add
mov
xchg
and
and
test
ins
dec
fild
xor
mov
cmc
stc
sub
out
mov
pusha
pop
mov
xor
cld
add
jecxz
movs
adc
pop
jge
mov
adc
or
push
mov
or
aas
and
pop
loopne
int
jbe
inc
stos
cdq
cwde
adc
xchg
lahf
adc
aas
or
jmp
and
mov
jmp
cwde
inc
popa
sub
sbb
in
inc
cwde
sbb
pop
mov
ds
inc
add
jp
gs
loope
sti
stc
stc
les
push
fild
inc
or
adc
imul
adc
xchg
ja
cmps
jo
dec
mov
xor
mov
dec
inc
sbb
add
jecxz
popa
idiv
xchg
and
sbb
inc
shl
(bad)
fs
fild
xor
call
cdq
push
ror
mov
xchg
les
fadd
adc
int
push
retf
inc
ins
cmp
mov
jae
mov
aad
pop
js
jmp
xchg
cdq
je
jns
es
xchg
pop
sub
arpl
popa
sbb
fisttp
outs
or
and
inc
or
repnz
sub
pop
xchg
dec
sbb
sahf
ja
in
push
inc
mov
inc
imul
dec
pusha
in
sub
jl
mov
scas
scas
lods
pop
sub
lea
lock
adc
xchg
mov
shl
adc
or
mov
dec
shl
adc
adc
aas
int
sub
cmp
lock
xchg
push
xchg
(bad)
pop
cmps
push
(bad)
mov
mov
mov
ret
adc
mov
icebp
fst
or
iret
clc
jmp
pop
retf
sbb
ret
xor
mov
imul
mov
push
and
jbe
or
dec
int3
dec
sahf
(bad)
mov
dec
aam
rol
adc
jns
adc
loop
dec
sbb
sbb
and
test
pslld
xchg
movs
fmul
arpl
inc
stos
jb
xchg
inc
push
cmp
or
adc
sub
mov
das
adc
jae
daa
mov
pop
daa
push
out
sub
push
pop
int
(bad)
les
stos
and
repz
loopne
cmps
and
adc
ins
(bad)
shr
and
jmp
sbb
jnp
cmp
retf
ja
adc
fmul
or
movs
mov
mov
sbb
sbb
and
out
pushf
xor
cli
sbb
jl
inc
aam
xchg
dec
loopne
dec
inc
pop
outs
les
arpl
sub
inc
das
ins
fwait
mov
mov
mov
xor
dec
push
sbb
pop
xor
call
jae
or
movs
adc
movs
clc
outs
adc
adc
ins
adc
enter
or
(bad)
and
or
ret
jae
pop
pusha
lds
inc
ror
jno
add
data16
retf
mov
icebp
xchg
mov
inc
or
mov
push
inc
cmps
sub
mov
cld
cmp
call
and
retf
ins
xchg
jae
ja
cmp
call
lds
xor
loop
sub
jge
sbb
sub
mov
adc
mov
sbb
push
adc
cmp
sbb
or
push
loope
mov
xchg
fsub
sbb
add
enter
or
iret
add
xchg
or
shr
or
pop
sbb
xor
ins
fadd
dec
(bad)
and
ss
add
mov
add
fmul
into
add
mov
shr
push
std
xor
movs
adc
push
test
cwde
and
jns
push
push
ins
inc
adc
dec
lock
clc
or
dec
clc
dec
and
xor
imul
jp
je
test
movs
daa
jge
push
popf
pop
js
and
rep
imul
sahf
cmps
les
push
lds
test
push
pop
mov
rcr
es
inc
inc
mov
sbb
sub
bound
js
mov
and
jbe
loop
mov
add
jle
xchg
add
and
sub
cmp
sbb
pop
pop
inc
icebp
out
outs
sbb
add
mov
sub
imul
mov
lods
sub
pop
imul
mov
mov
repnz
adc
cwde
and
push
or
push
push
add
push
cli
jl
(bad)
cmp
or
(bad)
mov
pop
lahf
sub
imul
inc
cdq
push
cld
push
sar
and
dec
(bad)
outs
inc
pop
cmp
shr
dec
outs
add
jmp
fidiv
enter
out
ror
push
not
retf
loope
jo
xchg
call
and
lock
jmp
mov
sti
enter
xor
cmp
in
cmps
and
jmp
popa
or
mov
clc
jnp
mov
in
and
xor
inc
iret
adc
lods
movs
ss
jo
xchg
xchg
push
mov
fbstp
or
inc
jmp
xchg
xor
enter
jmp
mov
cmp
je
lea
test
sbb
aaa
xchg
xchg
aas
or
inc
stos
add
inc
fsub
lods
leave
pop
mov
add
or
(bad)
loopne
and
jmp
push
dec
or
push
mov
test
sti
xchg
pop
inc
and
pop
or
or
ror
repnz
mov
pop
rol
mov
jno
or
sahf
rcr
fild
xchg
adc
add
add
aam
jae
adc
sub
out
push
fild
mov
ret
les
or
aaa
mov
retf
mov
call
sub
call
sub
inc
pop
or
mov
bound
mov
cmp
and
sbb
mov
lahf
ret
call
xor
inc
hlt
out
cli
popf
add
sub
add
dec
jno
adc
stos
lock
add
dec
pop
pop
jl
call
pop
xchg
jp
sbb
add
push
mov
sar
add
mov
xor
ret
pop
in
and
cmp
mov
jmp
cdq
inc
inc
or
clc
ins
cdq
push
jl
adc
lock
loop
call
(bad)
ret
scas
add
call
sbb
sub
invd
sub
push
mov
cmp
or
cdq
mov
inc
xor
mov
add
or
sub
sbb
mov
cmp
scas
jno
add
xchg
sub
std
inc
out
sbb
pop
xadd
inc
sbb
scas
in
xchg
or
fdivr
cmc
xchg
push
clc
ins
std
mov
scas
sbb
dec
movs
nop
call
les
(bad)
in
pop
add
mov
jp
inc
push
push
xchg
mov
rol
cmp
xchg
or
xchg
retf
and
enter
dec
adc
jmp
(bad)
enter
adc
ret
dec
mov
xchg
add
add
add
push
and
cs
adc
cdq
arpl
popf
add
dec
jle
sbb
lods
mov
lods
push
jb
sub
sbb
sbb
test
les
adc
add
jle
clc
nop
push
sub
dec
call
ins
add
arpl
push
scas
add
mov
call
cmps
ror
fldl2e
add
lock
and
sbb
mov
sub
cld
or
push
add
aaa
push
das
cmp
mov
or
test
dec
pop
sub
or
sar
outs
mov
std
jge
adc
adc
push
mov
xchg
xchg
push
push
adc
sar
pop
sbb
dec
fild
cmc
lahf
inc
jnp
pop
shl
enter
mov
loopne
inc
mov
inc
xor
xor
mov
or
xor
shr
bnd
int3
sub
xchg
cmp
neg
fs
push
mov
or
inc
push
pop
or
sbb
mov
pushf
cmp
inc
mov
movs
mov
shr
shr
jg
lock
test
sub
mov
imul
cwde
iret
pop
and
mov
inc
mov
inc
jge
push
rcl
sub
loop
mov
push
bound
jmp
pop
xchg
pop
ror
xchg
cmps
ss
ds
push
in
xor
inc
and
push
sub
dec
add
std
push
pop
aad
enter
fild
je
mov
xchg
jl
mov
inc
sbb
adc
dec
(bad)
ret
(bad)
popa
xor
and
cmp
nop
cmp
push
ds
hlt
out
push
and
cmp
mov
idiv
dec
dec
dec
pop
ret
(bad)
adc
mov
adc
movs
mov
push
les
sub
stc
inc
mov
fs
sub
mov
(bad)
xchg
adc
(bad)
in
out
stc
mov
cs
test
mov
test
pop
addr16
mov
xor
stos
inc
adc
push
mov
mov
das
loop
pop
inc
jecxz
xchg
add
fimul
stos
call
sbb
push
fsub
scas
sahf
or
out
jmp
pop
mov
or
(bad)
arpl
aad
xchg
adc
or
cmp
ud1
dec
rcl
xlat
push
xchg
or
sbb
(bad)
in
push
push
test
adc
xchg
pushf
es
jb
add
cmps
xor
push
jl
mov
inc
or
sub
jmp
inc
mov
pop
push
ret
enter
or
xchg
pop
and
and
lds
int
stos
rol
ret
cmc
sbb
inc
adc
fmulp
push
outs
add
ins
aas
fcmovb
add
or
xchg
stos
daa
scas
imul
cmp
inc
sbb
pusha
mov
lods
adc
pop
mov
and
sbb
and
xchg
fsub
movs
stos
inc
or
xor
jae
inc
in
adc
xor
or
dec
sbb
popf
push
pop
lock
sbb
xchg
jns
adc
std
mov
cld
in
cmp
dec
push
shl
out
pop
pop
mov
pop
bsf
xor
lods
adc
test
mov
and
lods
pop
rol
loope
sbb
dec
loopne
add
js
pop
add
popa
adc
mov
sbb
cmp
mov
adc
test
and
ja
mov
call
scas
add
jge
mov
and
mov
aad
mov
mov
int3
sbb
push
or
cs
ret
cs
dec
push
std
out
shr
aas
icebp
rcr
jb
push
mov
clc
adc
cmp
xor
push
ret
sbb
cmp
jmp
add
sub
push
retf
data16
and
mov
call
rcl
mov
sbb
jle
sahf
xlat
and
ins
ret
jmp
inc
inc
lds
fwait
test
dec
in
mov
cs
es
mov
adc
mov
dec
push
test
es
sti
int
ret
sbb
sbb
lods
fcomp
test
and
xor
lea
adc
les
rcr
enter
jl
xor
or
mov
xor
neg
or
mov
mov
push
aaa
sub
dec
xchg
addr16
or
sub
jecxz
mov
or
pop
dec
adc
fimul
adc
push
jp
inc
cmps
mov
test
loopne
call
in
add
sti
cs
and
xchg
lds
gs
or
and
clc
add
inc
sldt
fadd
inc
jle
pop
xor
adc
jge
iret
ja
and
push
add
dec
stos
add
ret
push
push
add
jp
adc
fnsave
dec
inc
add
dec
call
mov
push
scas
jp
push
ret
fs
jns
ins
push
mov
inc
repz
in
xor
call
jmp
loope
dec
xor
or
shl
retf
stos
in
push
fcmovne
add
cmps
mov
adc
movs
(bad)
mov
pop
sbb
mov
and
ins
and
aaa
adc
push
(bad)
test
add
sbb
ins
xlat
not
lods
dec
icebp
cmp
bound
scas
adc
inc
inc
mov
xor
mov
mov
xchg
mov
ss
jo
bound
outs
or
add
jmp
imul
lahf
dec
jg
iret
pop
or
jo
sub
mov
sbb
jne
bound
cmc
int
and
rcr
mov
aad
adc
out
loopne
adc
(bad)
std
or
add
fistp
mov
fdivp
jg
sti
push
cdq
adc
add
push
jp
lock
js
xor
adc
jg
pop
aas
xor
iret
scas
daa
cld
out
jge
pop
jle
hlt
push
cmc
cmp
idiv
stos
and
(bad)
mov
sahf
sbb
iret
jg
or
daa
shl
out
(bad)
mov
or
push
cmc
xchg
std
cld
jg
inc
(bad)
jg
pop
add
jbe
ret
fisub
sbb
ins
jnp
pop
xchg
fcos
mov
addr16
icebp
popf
push
clc
mov
into
jl
mov
call
popf
psrlq
clc
adc
mov
test
fisub
cmp
js
(bad)
jnp
xchg
clc
inc
mov
stc
inc
sti
sub
adc
pop
call
fimul
ds
adc
clc
lock
addr16
inc
iret
sar
mov
aas
mov
push
outs
adc
sbb
pop
push
test
hlt
aaa
sbb
push
ror
iret
sar
pushf
sar
mov
inc
jmp
loopne
ins
adc
lea
int
mov
xor
fisub
pop
sar
inc
js
std
mov
data16
or
test
test
jmp
inc
repz
std
and
inc
mov
int
cmp
inc
jmp
(bad)
je
rol
js
jo
push
adc
aam
fmul
icebp
xor
cmp
iret
adc
(bad)
call
cmp
ret
int3
fisub
aaa
add
inc
repz
jmp
jle
lea
stc
mov
push
imul
or
cli
int3
pop
in
inc
gs
pop
mov
push
xor
int3
add
xor
retf
repnz
sbb
jmp
inc
lock
push
inc
div
xchg
xchg
jg
sub
add
add
hlt
sti
popf
jno
js
push
movs
sbb
lods
ins
mov
(bad)
in
inc
jo
inc
shl
mov
inc
add
les
fs
test
mov
push
sub
push
cmp
(bad)
cmc
inc
mov
(bad)
cmp
and
sub
(bad)
pop
add
das
repnz
and
mov
mov
adc
es
jg
push
scas
mov
div
repz
in
cmc
repz
pushf
inc
mov
pusha
cmp
jae
jbe
mov
in
add
cld
fcomp
pushf
xchg
ret
mov
sub
pop
scas
sbb
jno
clc
mov
nop
sub
hlt
inc
daa
xchg
scas
add
fst
mov
and
sbb
or
add
jg
out
pop
sbb
ins
je
inc
out
test
dec
sbb
xchg
add
and
repz
or
das
les
jae
sbb
adc
fsubr
rcl
mov
fmul
loope
adc
shr
repz
call
mov
xor
jno
mov
cdq
cld
clc
mov
xor
mov
xchg
sub
lock
cmp
fs
xor
and
or
xchg
in
inc
icebp
mov
cld
adc
popa
int
pop
dec
mov
popf
add
dec
ror
mov
dec
add
(bad)
push
pop
lea
dec
clc
lahf
clc
jno
xlat
lahf
dec
out
lea
std
pop
push
icebp
ins
fs
leave
imul
popa
push
inc
jmp
add
pop
nop
aad
cli
adc
push
outs
out
shr
sub
pop
add
jecxz
inc
(bad)
in
jnp
je
mov
xchg
xor
je
in
dec
mov
mov
imul
test
fwait
daa
add
or
or
imul
xlat
ret
mov
ins
inc
jbe
pop
mov
inc
out
js
add
inc
lahf
cmp
shl
push
mov
out
cdq
inc
mov
pop
pop
pop
out
pop
mov
les
jecxz
cmp
xor
mov
hlt
xor
xchg
int3
jmp
mov
dec
bnd
adc
jge
xchg
loope
cmp
fstp
mov
xchg
dec
movs
mov
or
ror
or
and
jmp
inc
push
test
je
jmp
inc
loopne
int
adc
ins
cmp
aas
add
xchg
cli
into
scas
or
adc
cmp
pop
out
or
sti
xchg
mov
dec
pop
push
pop
or
xor
mov
mov
les
iret
xor
je
leave
mov
dec
add
aad
cmp
mov
mov
test
pop
ret
pop
repnz
clc
(bad)
jbe
pop
ja
sub
lods
inc
fs
es
sub
ds
lods
fisttp
or
jae
ret
lock
jmp
or
(bad)
mov
ja
pop
call
adc
shl
test
add
fidiv
std
xchg
mov
jl
lea
(bad)
inc
cmp
add
cmp
cwde
jecxz
shl
movs
xchg
shl
(bad)
mov
sar
or
xchg
pop
rcl
and
popa
or
aas
push
test
sbb
adc
cmps
adc
int
sbb
and
push
add
pusha
or
xor
mov
sar
add
jo
add
ja
dec
out
(bad)
(bad)
and
imul
jnp
sti
fdivr
add
inc
adc
push
mov
shr
pop
and
stos
push
arpl
inc
push
and
adc
movs
aam
push
pop
nop
push
inc
(bad)
(bad)
scas
and
fistp
xlat
retf
sub
cmp
jle
out
lahf
jmp
jns
push
xor
jmp
(bad)
repz
push
dec
adc
pop
mov
mov
push
arpl
xor
adc
les
mov
in
pop
mov
jno
cld
sub
das
leave
pop
pop
dec
jb
pop
es
cmp
xchg
xchg
fs
pushf
das
push
enter
cmp
dec
enter
ds
xchg
stos
mov
stos
stos
sub
outs
stos
mov
imul
mov
pop
cmc
mov
cmps
scas
stos
pop
retf
jne
scas
lods
jmp
lods
sbb
(bad)
mov
jmp
jmp
cmps
jg
out
dec
std
inc
jnp
mov
xor
ss
dec
push
ror
or
jecxz
push
xor
movs
cdq
jne
mov
out
dec
repz
(bad)
push
mov
push
les
cmp
mov
data16
fucomi
jbe
cmp
mul
pop
push
aad
addr16
adc
(bad)
and
fwait
call
mov
add
mov
inc
pop
adc
or
adc
mov
fsubr
dec
or
test
ret
mov
hlt
jo
mov
or
test
ret
mov
clc
xor
bound
inc
mov
adc
aam
and
call
jge
jbe
add
push
je
mov
vpsllw
ret
in
jo
cmp
pop
out
loope
cmp
scas
les
popf
clc
inc
cld
sub
cmp
stos
test
xchg
push
adc
dec
fisub
test
jl
xor
(bad)
in
repnz
mov
mov
sub
inc
call
je
jge
jle
aas
cmps
sub
es
hlt
push
jge
repz
in
adc
lahf
and
not
sbb
fisub
mov
fldcw
mov
ret
in
adc
and
sub
pop
sar
scas
loope
mov
hlt
jnp
outs
stc
arpl
idiv
(bad)
std
inc
(bad)
push
xchg
call
pop
icebp
mov
daa
jle
pop
xchg
mov
jmp
xchg
mov
lock
jge
mov
loop
stc
aaa
cld
cmp
lahf
out
js
jg
or
rol
shl
sbb
mov
mov
ja
dec
shr
dec
lock
lock
and
mov
xchg
adc
mov
bound
mov
in
adc
mov
loop
clc
dec
cmp
pop
sbb
xchg
mov
sub
xchg
pop
enter
mov
in
repnz
mov
retf
dec
stos
xchg
stos
mov
push
addr16
std
push
mov
stos
and
imul
cmps
out
stos
jg
mov
push
std
xchg
stos
jmp
push
std
test
mov
pop
hlt
xor
(bad)
div
mov
sub
out
out
rcl
or
sub
and
(bad)
jl
(bad)
call
fstp
xor
dec
push
pop
enter
ins
cmp
aas
test
jbe
popf
arpl
sti
cmp
(bad)
outs
outs
fdivr
xchg
jno
pop
cmp
aas
scas
fwait
jmp
xchg
jecxz
mov
out
jle
mov
xchg
daa
sub
xchg
or
imul
pop
fdivr
sbb
dec
or
popa
jp
and
pop
(bad)
adc
outs
test
sahf
out
iret
dec
pop
sbb
or
xchg
xor
mov
and
push
mov
sub
sub
pop
shl
xor
jno
fcomp
and
add
ret
sub
push
mov
lock
xchg
movs
sbb
inc
stos
adc
imul
sbb
xchg
sbb
inc
ss
pop
in
cmp
xchg
fnsetpm(287
adc
dec
mov
jb
cmp
cmp
push
je
popf
dec
pop
rcl
psrld
jmp
xor
int
jnp
xchg
or
ss
sub
mov
sbb
jbe
std
ret
repnz
and
mov
std
push
jle
jg
aas
(bad)
lahf
in
iret
hlt
pop
cli
stos
cld
(bad)
(bad)
outs
call
fcomip
push
repz
gs
xchg
sti
cmp
mov
sbb
(bad)
lock
cld
adc
stc
outs
jle
inc
das
repz
xchg
or
add
add
push
add
and
dec
xor
jl
ins
push
jbe
inc
sbb
retf
rcr
push
adc
push
mov
cmp
clc
inc
sub
pop
mov
loop
jno
cld
es
mov
lds
or
push
mov
in
and
retf
mov
cmp
pushf
sub
push
stc
mov
stos
repnz
stc
pop
mov
push
pop
add
popf
aam
jmp
push
mov
push
push
cli
pop
sbb
jne
cmp
mov
mov
lods
je
std
cmps
jle
(bad)
rcr
jmp
sar
push
jge
pop
xlat
div
jae
rcl
dec
mov
aaa
int
xor
jl
xor
push
data16
call
pop
rcl
sub
fcmovnu
jbe
std
in
push
cmp
dec
mov
fldenv
neg
lahf
in
cmp
ds
sub
bound
xlat
imul
pop
aas
aaa
aam
ja
frstor
int
jae
ror
push
xchg
scas
loope
lock
sar
sti
out
push
(bad)
mov
mov
mov
ds
mov
push
adc
cld
adc
aaa
call
add
sub
sub
xchg
cmc
jecxz
stc
pop
mov
and
test
call
push
psraw
xchg
ror
cs
stos
pop
ins
add
sar
fld
cmp
lock
shl
xor
sub
pop
pop
mov
push
leave
inc
or
inc
adc
inc
xchg
xlat
dec
add
or
iret
mov
les
jmp
mov
daa
lea
pop
dec
inc
fdiv
xchg
movs
or
mov
jg
pop
push
dec
movs
jl
aas
add
or
xchg
sbb
das
js
xchg
add
sub
sub
mov
repnz
cmp
dec
not
mov
(bad)
adc
push
(bad)
ror
cmc
popa
cmp
repnz
aaa
add
pop
cmp
shl
push
cmp
add
out
frstor
adc
std
and
repz
ror
add
mov
std
test
lock
hlt
mov
cwde
pop
mov
cwde
xchg
repz
sti
adc
es
das
xchg
mov
movs
pop
lahf
fcomp
fsub
fisubr
jmp
mov
push
push
call
mov
loope
scas
add
mov
movs
jnp
sub
aad
shl
int3
in
jge
out
repz
add
sbb
inc
jae
and
pop
mov
sub
clc
add
pop
xor
sbb
add
das
jmp
stc
gs
pusha
imul
inc
inc
retf
cmps
cli
inc
sbb
jae
aam
imul
xor
dec
leave
std
mov
cmp
push
pop
loopne
repz
mov
or
cmp
shr
xchg
jle
(bad)
ror
mov
xchg
pop
push
mov
out
pop
repz
clc
cmc
js
sahf
adc
sbb
push
adc
lds
icebp
call
sbb
addr16
sbb
test
ret
dec
inc
imul
aam
das
(bad)
iret
mov
cdq
or
aas
fld
jl
sbb
cdq
jle
xor
(bad)
je
ror
push
fist
sti
enter
pop
mov
pop
pushf
arpl
pop
sub
adc
jecxz
cld
cmp
inc
fcom
pop
(bad)
cmp
add
in
inc
or
dec
iret
mov
cmp
jecxz
adc
cmp
cs
jle
xlat
retf
push
mov
pop
jle
ret
repz
cmc
stos
add
sub
sub
call
(bad)
fisubr
xor
xor
dec
call
jae
dec
inc
sub
popa
div
aam
mov
adc
imul
mov
cmp
imul
fcomp
adc
repz
nop
or
dec
out
mov
cmp
sar
push
or
repnz
repz
dec
out
and
sbb
mul
push
sahf
adc
retf
xchg
std
adc
dec
inc
xchg
push
pop
pop
ja
dec
add
inc
div
pop
sbb
retf
mov
dec
cmps
push
jmp
mov
mov
sub
mov
iret
adc
inc
ss
lea
inc
fisub
fstp
jbe
gs
cmc
inc
sti
mov
icebp
jecxz
cdq
(bad)
pop
sbb
inc
aas
or
sar
jecxz
jns
push
iret
adc
popa
xchg
clc
push
xchg
jle
clc
call
add
dec
push
pop
push
inc
test
jmp
push
or
(bad)
bound
rol
test
inc
add
sub
in
push
mov
mov
adc
adc
fbstp
popf
add
cdq
or
mov
pop
mov
mov
push
and
pop
mov
into
inc
mov
push
mov
jge
stc
cmps
enter
add
test
in
sbb
ss
loopne
add
sbb
jecxz
adc
loopne
cmp
test
icebp
push
and
mov
add
dec
sub
js
dec
or
shl
inc
mov
js
fimul
cmp
test
add
pop
push
aas
int
pop
loopne
(bad)
lock
test
sub
pop
mov
mov
xor
ret
mov
or
add
xchg
es
mov
and
mov
add
leave
dec
xor
into
js
cdq
add
fwait
or
pop
mov
into
mov
mov
in
inc
sar
hlt
setno
sbb
inc
or
inc
shl
or
test
or
adc
sub
add
dec
fcmovnbe
push
mov
dec
add
hlt
movs
add
inc
jmp
add
rcr
movs
add
in
push
fisttp
retf
fidivr
inc
(bad)
shl
inc
call
add
lea
movs
push
mov
pop
and
push
gs
inc
xor
mov
shl
lods
sub
and
stc
mov
out
push
push
test
adc
mov
jns
jns
inc
(bad)
out
push
pushf
xchg
sahf
(bad)
mov
into
mov
jbe
nop
movs
xchg
xchg
(bad)
sub
jg
xchg
lods
hlt
not
jnp
cmp
pop
mov
js
cmp
pop
mov
(bad)
adc
mov
lock
popa
gs
jp
inc
jge
jle
mov
pop
dec
sub
lea
enter
mov
into
data16
dec
(bad)
rcl
je
lods
ret
dec
jle
pusha
data16
fcom
sub
mov
out
ss
mov
sbb
inc
mov
pop
pop
iret
pop
sub
(bad)
pop
comiss
shl
push
add
sub
pop
push
jg
call
jg
mov
ds
adc
mov
test
imul
add
cmp
adc
sub
sbb
aas
sbb
dec
lods
lods
pop
mov
mov
sbb
sbb
cmp
sbb
fwait
mov
sub
loope
js
add
pop
add
(bad)
fbld
sti
jmp
push
je
scas
cmp
test
pop
mov
call
cmp
pop
xor
xor
xor
movs
pusha
test
sub
retf
jle
xor
je
pop
push
fld
xor
mov
inc
pmulhw
ror
mov
aaa
jno
mov
jb
adc
in
sub
out
or
mov
mov
call
not
adc
int3
fiadd
test
add
mov
test
nop
bswap
and
xchg
ins
repnz
clc
jne
mov
mov
adc
xchg
inc
xchg
cs
jae
add
shr
hlt
mov
fisttp
push
adc
mov
inc
idiv
cmovle
or
repnz
sub
pop
std
stos
mov
or
or
mov
test
sub
fst
hlt
jae
ret
jae
xchg
adc
xchg
dec
popf
icebp
or
xchg
mov
pop
jns
enter
jl
or
jae
push
push
pop
jmp
push
test
leave
adc
mov
aad
add
test
rcr
jecxz
add
aas
inc
sub
adc
sti
jmp
cmp
es
fcmovb
lea
adc
add
xor
dec
stc
sbb
mov
test
scas
push
test
jge
push
jne
ret
fistp
adc
je
fimul
lods
mov
pushf
daa
arpl
push
fbstp
ficomp
stos
enter
mov
loopne
popf
xlat
ins
int
xor
into
mov
scas
inc
cmp
std
inc
push
jmp
xor
add
dec
xlat
mov
shr
or
enter
mov
fldenv
sub
mov
popf
sahf
jnp
and
dec
xor
cwde
add
fdivr
aaa
pop
out
out
in
cmp
cmps
inc
jne
xchg
stos
fs
fcom
mov
pop
or
cs
inc
repnz
add
jbe
cdq
dec
cmps
push
lods
and
mov
scas
jecxz
loope
push
adc
sub
aam
or
cdq
div
stos
lea
xor
xchg
adc
mov
xchg
rol
sbb
ins
cmp
adc
(bad)
jle
mov
push
xor
mov
push
jbe
fstp
and
sub
adc
xchg
lea
into
stos
stc
lods
std
outs
mov
and
jnp
xchg
cmp
pop
ficom
cmc
mul
gs
into
mov
ins
inc
js
pop
xchg
scas
(bad)
push
xchg
jo
xor
pushf
add
mov
fmul
in
mov
cmp
adc
mov
call
stos
test
pusha
jl
pop
cmp
or
inc
ret
sub
shl
sahf
(bad)
fwait
dec
add
dec
pop
rcl
lods
or
or
les
call
sbb
test
dec
jae
rol
xor
pop
cli
retf
adc
and
xlat
mov
pop
int3
push
xchg
popa
dec
xor
or
jne
mov
adc
fcomp
xchg
ret
(bad)
adc
pop
pop
cld
cmp
or
pop
or
dec
sahf
xchg
or
adc
call
ficom
fs
cmp
sahf
mov
(bad)
dec
aam
cmp
in
jae
mov
fdivr
cmp
xchg
jmp
mov
sub
out
add
jp
jg
mov
cmps
fsubr
aaa
push
jle
or
imul
psubsw
mov
movs
into
mov
sub
dec
push
xchg
movs
add
adc
popf
sar
mov
stos
cdq
sbb
call
mov
inc
inc
out
cmc
adc
aas
(bad)
mov
or
dec
ja
shr
test
lahf
call
pop
or
xchg
adc
shl
rcr
and
ror
push
jge
iret
in
xor
pop
fs
aaa
sub
mov
mov
scas
ror
or
ss
pop
sbb
mov
(bad)
or
add
popa
xor
fdiv
push
pop
adc
cmp
mov
bswap
and
dec
out
push
mov
int3
jmp
into
fs
fst
call
and
xchg
call
pop
inc
out
xchg
jmp
call
ret
addr16
ja
or
ficomp
cdq
xchg
mov
push
pushf
push
xchg
push
ss
out
jae
test
sbb
mov
call
xchg
sub
in
repnz
je
jmp
in
pop
movs
das
jmp
in
sti
arpl
jbe
pmulhw
ds
retf
jb
and
dec
mov
mov
(bad)
gs
push
out
cmc
pop
fmul
idiv
add
add
adc
add
gs
mov
add
inc
iret
inc
inc
sub
mov
push
xchg
mov
and
ficom
ror
mov
add
push
lock
jp
or
loope
mov
mov
sbb
retf
(bad)
and
mov
(bad)
push
daa
sbb
cmp
jns
sub
jmp
xor
(bad)
pop
(bad)
jl
repz
outs
jns
cmps
sub
and
xor
jle
jp
je
leave
inc
in
movs
pop
scas
push
sar
and
pushf
or
aas
push
xlat
aaa
(bad)
bound
and
gs
inc
dec
jnp
aam
bound
scas
sti
stc
jmp
cld
mov
jbe
jno
adc
aas
test
rcl
call
cmp
cmp
ss
jnp
(bad)
clc
inc
outs
xor
push
aas
add
add
add
jo
add
jno
add
add
jo
add
mov
pop
add
jno
add
add
jo
add
pop
add
add
jo
add
pop
add
add
jo
add
pop
add
add
jo
add
pop
add
add
jo
add
pop
add
add
jo
add
pop
add
add
jo
add
mov
pop
add
add
clc
jo
add
add
add
add
je
outs
fs
gs
popa
outs
fs
gs
add
add
add
je
jb
arpl
fs
jae
add
add
push
dec
inc
dec
xor
cs
ins
add
inc
xor
cs
dec
dec
add
push
inc
push
push
cs
ins
add
inc
push
xor
cs
ins
add
push
inc
push
dec
xor
cs
ins
add
xor
xor
fs
ins
add
dec
push
inc
push
dec
cs
ins
add
xor
cs
ins
add
inc
inc
push
push
xor
cs
ins
add
push
inc
push
xor
fs
ins
add
push
inc
push
dec
xor
cs
ins
add
add
add
add
add
add
in
les
add
loopne
add
add
add
add
enter
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
je
add
add
add
sti
add
mov
cmp
add
or
and
je
mov
push
or
mov
jmp
add
daa
add
adc
pop
dec
xor
mov
sbb
leave
add
add
push
add
sbb
(bad)
add
ja
jmp
lea
or
rcr
add
jne
(bad)
dec
adc
add
cmp
je
mov
mov
cmp
add
inc
test
rol
add
sub
add
add
add
cmp
je
mov
or
add
add
cmp
add
mov
sub
add
xchg
ror
mov
add
or
in
add
jmp
add
mov
lea
adc
inc
and
mov
inc
std
add
pop
ret
pusha
add
or
adc
or
adc
adc
mov
dec
add
sub
add
add
add
test
adc
xchg
and
add
add
add
add
inc
add
adc
add
rol
loopne
add
xor
add
and
test
add
jnp
and
or
adc
js
add
add
cli
push
adc
test
je
jbe
xchg
test
sbb
ja
add
sub
sub
add
xor
add
mov
add
shl
inc
adc
and
add
mov
add
add
pop
add
lds
adc
mov
add
add
and
or
and
add
push
test
xor
ja
adc
ror
xor
add
add
push
add
xchg
popa
push
add
inc
mov
je
cmp
lea
push
or
fist
mov
push
lea
push
add
push
sub
add
mov
test
cmp
(bad)
mov
inc
push
pop
sbb
mov
test
add
inc
fadd
sub
add
(bad)
adc
(bad)
inc
push
add
add
mov
push
add
push
add
and
adc
add
pop
test
inc
mov
lea
xchg
add
test
add
mov
adc
add
inc
add
ror
xlat
add
add
add
mov
cmp
jne
add
add
pop
and
add
hlt
add
push
inc
push
xor
add
add
jae
addr16
outs
js
add
imul
add
add
jb
jb
inc
popa
imul
outs
and
jo
jb
and
outs
ins
add
and
add
inc
bound
addr16
add
jb
jae
outs
je
mov
mov
add
add
add
adc
stos
adc
cmps
mov
cli
mov
adc
stos
inc
sahf
adc
mov
imul
add
stos
add
sbb
add
psadbw
push
in
push
adc
inc
jns
inc
rol
test
adc
add
pop
add
add
xor
daa
and
xchg
and
xor
fmul
or
push
inc
lea
aam
into
mov
lea
adc
push
push
push
inc
add
xchg
add
push
or
add
ret
dec
outs
arpl
inc
and
ins
ins
outs
arpl
add
inc
jb
add
ins
dec
outs
add
jbe
dec
gs
outs
jb
add
pop
gs
push
push
push
push
add
push
mov
mov
call
push
push
and
call
mov
add
add
mov
adc
push
sbb
push
mov
mov
sbb
add
leave
mov
sbb
sti
mov
mov
mov
add
mov
pop
mov
dec
add
xchg
add
call
and
mov
inc
and
push
add
mov
jle
or
pop
adc
mov
inc
in
sub
push
push
mov
push
mov
mov
adc
mov
inc
hlt
mov
mov
add
mov
jae
sub
dec
jmp
mov
sub
mov
mov
or
adc
push
jo
lea
sbb
cmp
adc
xor
push
sub
mov
add
gs
add
push
add
cmp
jae
add
mov
dec
mov
movzx
shl
or
add
inc
add
jmp
mov
and
mov
enter
loope
and
mov
dec
dec
je
adc
dec
jne
ins
cld
add
pop
sub
jmp
ins
push
push
adc
add
push
test
(bad)
or
add
daa
mov
out
add
add
xor
jl
jmp
gs
add
stos
add
shr
shr
sub
adc
jmp
jmp
xsha1
cmps
or
lea
bound
cmp
mov
mov
je
and
or
neg
sbb
add
mov
jmp
jge
add
test
mov
and
cmp
jne
push
xchg
adc
cmp
je
mov
adc
jl
jb
inc
rol
add
jne
push
lea
inc
add
enter
add
adc
mov
mov
jae
inc
or
mov
push
lock
sbb
xchg
cmp
je
mov
cmp
jae
sub
dec
add
add
daa
add
test
adc
mov
and
add
ror
dec
call
add
adc
inc
call
clc
push
call
mov
add
add
sub
sub
add
sub
mov
jne
(bad)
(bad)
jmp
push
pop
dec
sbb
cld
and
add
jmp
and
add
add
xor
ror
sub
and
xchg
add
or
adc
add
add
cmp
sbb
mov
and
add
stos
movzx
add
mov
mov
dec
mov
shr
add
inc
shl
cmp
jb
lea
cmp
jae
mov
add
inc
and
inc
jmp
mov
gs
add
stos
push
push
mov
loopne
xor
add
mov
push
lea
push
lea
push
mov
inc
adc
or
and
push
push
add
adc
call
jne
mov
add
dec
push
test
shr
and
adc
xlat
cmp
jae
add
cmp
adc
ja
mov
mov
shl
or
ja
movzx
and
mov
push
add
adc
mov
add
lock
adc
push
or
and
mov
mov
adc
inc
add
cmp
jne
push
pop
jmp
lea
xor
add
add
setne
dec
and
add
mov
lea
mov
cmp
or
or
xchg
add
movzx
cld
add
jno
add
ret
and
or
add
add
push
cmp
add
mov
add
adc
cmc
mov
adc
jmp
push
sbb
nop
sub
mov
add
mov
jge
add
push
xor
ret
add
ds
adc
ret
inc
adc
push
cmps
add
inc
in
inc
call
sub
xchg
mov
inc
jp
in
jne
push
push
call
(bad)
test
push
in
mov
inc
hlt
push
in
push
test
mov
push
pushf
mov
xlat
push
pushf
call
mov
movs
xor
popa
add
xor
xchg
cmp
add
ds
mov
and
inc
inc
add
fs
ret
cld
inc
push
seta
setne
add
pop
add
mov
xor
jmp
es
jl
add
pop
inc
or
xchg
or
mov
leave
add
call
mov
in
sub
jb
lea
push
bound
mov
mov
add
mov
mov
adc
inc
test
lock
and
inc
sbb
add
jmp
jne
add
add
inc
cwde
mov
push
mov
pop
xor
(bad)
cmp
jne
inc
inc
sbb
cmp
mov
inc
add
sar
lea
add
dec
sub
cmp
jne
cmp
add
mov
inc
jmp
mov
pop
shl
add
cmp
jae
mov
lea
sub
add
sub
add
add
shl
dec
jne
sub
mov
shl
add
mov
inc
cs
xor
dec
je
xor
add
add
add
dec
mov
mov
sub
test
cmp
(bad)
push
in
test
mov
lea
adc
inc
mov
xor
inc
cmp
jb
mov
pop
cld
or
mov
pusha
sub
add
jb
neg
cmp
mov
sbb
inc
mov
mov
jg
dec
call
adc
dec
in
mov
add
add
test
push
mov
and
ror
clc
and
jle
add
mov
call
add
sub
mov
add
cmp
jbe
mov
mov
mov
push
add
sub
add
inc
cmp
jbe
mov
or
sub
pusha
call
adc
mov
add
or
and
add
(bad)
jmp
mov
mov
push
mov
pop
shl
or
lea
mov
jne
lea
mov
pusha
add
bound
xor
in
push
cld
mov
mov
mov
sub
mov
shr
add
mov
sub
sar
sub
mov
mov
cwde
sbb
or
or
or
mov
add
sub
add
add
cmp
add
jb
mov
jmp
and
add
inc
or
or
push
cmp
shl
pusha
mov
add
mov
add
jmp
sub
mov
shl
mov
add
add
push
sbb
push
adc
add
add
inc
add
in
push
pop
shl
mov
shr
cmp
add
inc
push
(bad)
mov
mov
shl
add
jb
and
shl
test
je
xor
jmp
xor
add
mov
push
in
sbb
add
add
or
jb
call
jmp
jb
adc
test
lods
inc
clc
add
adc
inc
adc
sbb
push
xor
and
push
push
mov
jb
adc
jmp
adc
mov
mov
adc
or
pop
or
dec
push
xchg
(bad)
push
and
xor
icebp
push
push
mov
add
push
rcr
inc
cld
push
push
push
mov
or
mov
bound
xchg
push
push
mov
dec
sub
adc
jne
add
test
mov
push
push
lea
call
sub
test
mov
sub
mov
cmps
ja
mov
inc
scas
inc
mov
mov
mov
jge
mov
dec
adc
xchg
or
retf
ja
inc
sbb
lods
sub
hlt
add
add
inc
add
add
add
(bad)
stos
add
sahf
add
mov
jge
or
add
adc
push
mov
push
mov
adc
add
mov
mov
mov
ror
inc
sar
push
mov
call
jno
in
fimul
pmaxub
call
in
add
pop
push
pop
jmp
mov
adc
or
adc
add
add
cmp
jae
xchg
nop
and
movzx
mov
shl
clc
add
inc
add
jmp
jb
dec
je
xor
and
mov
movzx
shr
mov
xor
add
sbb
adc
mov
add
arpl
and
pop
in
ret
adc
mov
add
mov
mov
adc
add
test
jne
add
pop
or
mov
add
jmp
pinsrw
or
cmps
(bad)
mov
pop
cmps
mov
mov
add
adc
push
add
repnz
pslld
repnz
aaa
inc
add
or
adc
mov
es
push
adc
gs
mov
cmps
or
arpl
fisubr
fld
fnstenv
mov
pop
sub
add
jmp
inc
sub
add
xchg
or
test
and
cmc
mov
add
mov
jne
push
dec
xchg
je
mov
or
cmp
xor
inc
xchg
sub
test
jne
jb
and
add
daa
jge
pusha
shl
add
push
aaa
xlat
mov
ja
mov
jne
mov
(bad)
cmp
add
adc
pop
ret
jnp
imul
add
add
or
dec
cmp
add
jne
or
inc
add
dec
jne
daa
add
dec
inc
adc
sub
cmp
jne
add
or
add
gs
call
and
aad
cmp
xor
movs
or
add
cmp
and
sbb
push
lods
push
cmp
dec
or
retf
dec
jmp
imul
push
xor
test
mov
cmp
outs
jmp
cmp
jbe
sub
mov
cld
lock
btr
call
mov
pop
add
dec
pop
maxps
sub
push
dec
xchg
or
mov
push
dec
mov
mov
push
add
add
jb
loop
in
mov
cmp
lods
xor
rcr
ret
out
inc
and
mov
add
mov
mov
push
loopne
call
pop
add
xchg
or
not
add
dec
or
ret
sbb
ret
fisttp
mov
add
and
test
xchg
shr
add
stc
xor
xor
inc
xchg
add
movzx
and
add
add
add
add
jmp
test
sub
add
lar
mov
push
pusha
pop
aaa
add
enter
jb
jmp
xchg
or
dec
adc
ret
add
mov
pop
mov
xor
xchg
add
or
pop
xor
sub
inc
lock
jae
sub
xlat
and
pop
push
movzx
push
in
add
xor
dec
sub
mov
dec
or
ret
add
ret
mov
mov
inc
inc
mov
add
inc
inc
sub
jmp
xor
retf
cmp
add
jbe
sub
mov
mov
inc
inc
dec
jne
xor
mov
add
inc
inc
dec
ret
ss
hlt
jmp
adc
add
stc
shr
arpl
inc
hlt
bound
mov
add
jb
cmp
jb
jmp
out
mov
add
sub
shr
cmp
jae
mov
push
pop
test
jmp
movlhps
xor
mov
add
(bad)
rol
and
push
clc
sub
add
xchg
and
xchg
ret
or
loopne
push
adc
icebp
mov
mov
mov
jle
fmul
mov
sub
(bad)
hlt
je
inc
or
add
or
add
adc
push
push
call
retf
inc
cld
add
add
cmp
jne
add
sub
mov
add
cmp
cmp
jne
or
or
mov
mov
add
add
cdq
push
mov
add
adc
lea
fadd
and
push
add
push
mov
push
push
mov
call
or
add
push
mov
pop
rep
push
lea
jle
push
pop
mov
push
rep
pop
lea
inc
push
mov
pop
lea
add
lea
add
push
pop
add
adc
push
push
push
lea
xchg
add
xchg
pop
add
cdq
push
push
rol
js
or
shr
pop
push
add
inc
adc
inc
dec
adc
inc
outs
adc
add
add
pop
fadd
inc
add
ds
lea
push
jo
call
adc
add
jno
pop
leave
ret
add
adc
add
add
add
or
pop
add
add
loop
add
add
or
add
or
mov
lar
add
sub
add
add
es
push
add
add
add
sub
or
inc
or
inc
or
inc
or
or
inc
or
add
add
mov
add
dec
add
push
add
push
add
add
add
add
add
add
or
or
push
lar
add
add
add
add
add
add
add
push
add
jae
add
add
add
and
add
add
add
sbb
and
xor
add
inc
add
add
add
add
add
push
add
add
adc
sbb
and
inc
adc
add
pusha
add
add
pop
add
add
add
add
inc
inc
inc
inc
dec
call
(bad)
aas
inc
add
.byte
