ror
add
add
add
add
add
add
add
add
add
add
or
add
mov
add
mov
add
add
sub
add
sub
add
xor
add
add
adc
lea
add
add
push
push
add
add
sub
add
add
add
popa
add
jo
push
lea
add
add
adc
add
sub
xor
add
add
add
add
adc
sub
add
push
or
add
pop
add
push
or
add
jo
mov
sbb
or
push
add
or
adc
add
sub
add
push
sub
add
sub
add
xor
add
add
add
add
jb
add
jo
sub
sbb
or
push
add
add
add
mov
push
add
jo
sldt
push
movs
add
add
mov
add
mov
add
je
add
sbb
add
xor
add
add
add
add
adc
add
jo
test
add
sbb
or
push
add
sbb
add
mov
push
sub
add
push
sub
add
sub
add
xor
add
add
add
add
adc
lea
add
add
jb
add
jo
rol
add
pop
lea
add
add
or
or
sbb
adc
adc
add
es
add
jo
lea
add
add
or
and
add
adc
add
mov
add
push
lea
add
add
adc
add
mov
add
push
or
add
jo
mov
add
pop
lea
add
add
push
adc
push
jb
add
jo
adc
sub
add
push
je
add
sbb
fild
add
mov
add
pop
lea
add
add
movups
push
jb
add
jo
adc
sub
add
push
je
add
sbb
jo
mov
add
pop
lea
add
add
adc
adc
jb
add
jo
adc
sub
add
push
je
add
sbb
add
adc
add
jo
mov
add
pop
lea
add
add
adc
adc
jb
add
jo
mov
lea
add
add
adc
adc
adc
add
add
push
mov
add
push
je
add
sbb
push
push
adc
sub
add
or
add
adc
mov
jo
lea
add
add
or
add
adc
adc
jb
add
jo
sub
add
push
adc
jb
add
jo
add
push
add
push
adc
sub
or
or
sub
add
push
or
add
jo
inc
add
jo
pop
lea
add
add
adc
adc
push
mov
add
push
je
add
add
or
or
add
jo
sldt
push
je
add
add
or
add
jo
fwait
add
jo
or
lea
add
add
adc
adc
add
add
add
mov
add
push
ficom
adc
adc
sub
add
push
sub
add
push
fiadd
sub
inc
sbb
add
add
add
add
add
add
add
add
add
sub
add
sub
add
xor
add
add
add
add
add
push
add
push
or
add
pop
add
push
or
add
sbb
add
sub
sub
add
xor
add
add
sub
add
push
or
sub
add
or
adc
adc
adc
test
sldt
push
je
add
add
sub
push
or
push
or
add
add
adc
xor
adc
or
add
add
add
xor
or
add
add
add
push
sub
add
sub
add
xor
cmp
add
push
add
adc
mov
mov
lea
add
add
push
or
or
pop
add
xchg
pushf
pop
pop
pop
or
add
or
push
push
add
or
or
add
sub
push
add
add
add
sub
add
add
or
and
add
add
or
add
add
add
add
push
add
add
or
push
add
pop
add
or
add
add
or
add
sub
add
add
add
or
and
add
or
add
sub
add
add
add
or
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
pop
push
jns
je
ins
cs
je
imul
ins
jae
outs
jb
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
pop
(bad)
jecxz
mov
test
lods
push
and
cdq
fild
pop
lods
(bad)
mov
cs
retf
jae
sahf
test
frstor
imul
(bad)
pop
repnz
loop
out
dec
push
or
cmp
fyl2xp1
lock
call
test
in
not
das
jge
sub
jp
sysenter
push
fcomp
add
add
dec
repz
dec
dec
adc
ss
into
inc
dec
lahf
out
pop
es
mov
jb
add
add
add
add
pop
add
aaa
or
add
add
add
inc
or
add
push
add
pop
add
add
add
xchg
add
add
add
ins
or
add
add
add
push
add
popw
add
inc
add
add
pop
add
fild
add
bound
add
add
add
add
add
or
add
add
add
add
add
add
add
add
in
add
add
add
cmps
push
add
sub
add
cmp
dec
adc
dec
sub
dec
xor
and
dec
jge
jb
add
dec
jbe
ins
dec
sub
dec
pop
dec
sbb
dec
adc
push
dec
addr16
dec
dec
sbb
dec
gs
jnp
push
add
add
dec
push
dec
push
dec
ins
dec
pop
dec
outs
dec
adc
push
adc
dec
jbe
sub
dec
outs
dec
arpl
dec
ins
dec
push
dec
xor
dec
push
dec
cmp
dec
or
dec
pop
dec
sbb
dec
add
dec
inc
dec
push
or
dec
sub
dec
jp
cmp
dec
xor
dec
or
jne
jbe
ins
dec
inc
dec
cmp
dec
sub
dec
dec
dec
dec
dec
dec
dec
cmp
dec
dec
sub
push
dec
dec
or
dec
jp
add
dec
sub
dec
pop
dec
call
xor
adc
dec
jg
ins
dec
inc
dec
pop
dec
dec
dec
pop
dec
pusha
dec
or
sub
dec
jg
and
dec
and
dec
je
aas
dec
add
ret
dec
adc
dec
and
dec
push
dec
push
dec
and
adc
arpl
dec
jnp
es
xor
dec
add
dec
push
dec
or
dec
and
push
dec
jbe
pop
dec
jg
xor
dec
jl
sub
push
dec
ja
push
dec
cmp
dec
add
dec
or
dec
nop
jmp
add
dec
pop
dec
gs
daa
dec
cmp
dec
and
dec
pop
dec
pop
dec
pop
dec
das
dec
pop
dec
popa
dec
jl
imul
push
dec
pop
dec
es
dec
dec
jg
imul
add
and
dec
adc
dec
adc
dec
inc
dec
sbb
dec
push
dec
pop
dec
xor
dec
imul
sbb
dec
and
dec
add
add
dec
and
dec
adc
dec
pop
dec
jno
sub
push
dec
dec
dec
add
dec
or
dec
push
dec
pop
dec
je
imul
cmp
dec
je
jg
jno
push
dec
jp
adc
dec
add
ds
je
or
aaa
dec
adc
dec
pop
dec
arpl
dec
fisttp
sub
dec
adc
dec
sub
dec
arpl
dec
sub
sub
dec
dec
dec
js
xor
dec
fs
xor
dec
jb
fs
dec
jo
adc
sbb
dec
fwait
retf
dec
and
ins
dec
dec
dec
xor
dec
jg
push
dec
pop
dec
sbb
dec
imul
or
dec
popa
dec
gs
ss
cmp
dec
add
dec
jl
or
dec
das
dec
sub
dec
imul
dec
dec
dec
inc
dec
push
dec
aas
dec
das
dec
jne
ret
or
add
dec
dec
dec
add
dec
cmp
ins
dec
sbb
dec
inc
dec
jo
add
dec
popa
dec
sbb
dec
outs
dec
cmp
dec
inc
dec
gs
push
dec
imul
or
dec
dec
dec
pop
dec
push
dec
imul
imul
and
dec
pusha
dec
pop
dec
jo
add
inc
daa
dec
sbb
dec
push
dec
and
dec
and
dec
pop
dec
adc
dec
aaa
dec
cmp
dec
jge
daa
dec
cmp
dec
sbb
dec
add
dec
inc
dec
cmp
dec
adc
dec
adc
dec
pop
dec
sbb
xchg
add
sub
dec
cs
xor
dec
inc
dec
jp
inc
dec
push
dec
aaa
dec
ins
dec
jg
sub
dec
pop
dec
push
dec
xor
dec
adc
dec
xor
dec
dec
dec
pop
dec
inc
dec
xor
mov
dec
js
sub
dec
adc
dec
dec
dec
and
dec
pusha
dec
je
aaa
dec
fs
dec
dec
xor
dec
sbb
dec
aas
dec
add
dec
pop
dec
or
dec
sbb
dec
ins
dec
cmovle
dec
pop
dec
aaa
dec
cs
adc
dec
adc
aam
add
das
dec
daa
dec
sbb
dec
ja
add
dec
sbb
ds
jnp
inc
dec
arpl
dec
inc
dec
addr16
aas
dec
sub
dec
je
dec
inc
dec
pop
dec
js
outs
dec
cmp
dec
jb
add
jae
aaa
dec
cli
add
add
dec
ss
and
dec
adc
dec
and
dec
sbb
dec
push
dec
pop
dec
or
dec
cmovle
dec
gs
push
dec
push
dec
das
dec
dec
dec
dec
dec
bound
dec
or
dec
pop
dec
adc
dec
pop
dec
adc
dec
pop
dec
popf
xor
dec
inc
dec
cmovle
dec
and
dec
push
dec
jb
push
dec
inc
dec
es
sub
dec
cmp
dec
adc
dec
outs
dec
and
dec
or
and
dec
daa
dec
outs
dec
jno
outs
dec
adc
dec
jp
jo
adc
dec
js
jno
and
bound
add
dec
xor
xor
dec
cmp
dec
jns
jle
xor
dec
pop
dec
push
dec
je
and
dec
and
dec
inc
dec
add
dec
cmp
dec
pop
dec
push
dec
cmp
jge
adc
stos
add
cmp
dec
xor
dec
add
dec
push
dec
sub
dec
xor
dec
ins
dec
inc
dec
inc
dec
xor
dec
inc
dec
dec
dec
dec
dec
push
dec
push
dec
sub
dec
dec
dec
inc
dec
xor
dec
inc
dec
jb
and
ss
pop
loopne
add
cmp
dec
pop
dec
xor
push
dec
inc
dec
pop
dec
adc
dec
dec
sub
dec
dec
dec
aaa
dec
jle
and
dec
and
dec
cmp
adc
dec
je
sbb
dec
jo
add
dec
ins
dec
inc
dec
outs
dec
push
dec
pop
dec
ss
jbe
jno
adc
and
dec
outs
dec
cmp
dec
aas
dec
pop
dec
or
dec
pop
dec
push
dec
sub
push
add
dec
aas
dec
push
ds
jl
add
dec
cs
xor
dec
push
dec
ds
add
dec
sbb
dec
jle
push
adc
dec
pop
dec
and
dec
dec
or
dec
adc
dec
jbe
jo
sub
dec
push
dec
cmp
dec
cmp
add
inc
inc
dec
pop
dec
or
dec
sbb
dec
arpl
dec
pop
dec
cmp
jne
jae
sub
dec
sub
dec
push
dec
add
dec
dec
dec
pop
dec
sub
dec
pop
dec
cmovle
dec
dec
and
dec
pop
dec
add
dec
push
dec
dec
dec
push
mov
cs
dec
pop
dec
adc
dec
cmp
dec
jp
pop
dec
pop
dec
jae
push
dec
cmovle
dec
sbb
dec
push
dec
ins
dec
and
dec
dec
dec
sbb
dec
outs
dec
movs
retf
inc
dec
dec
jle
pusha
dec
push
dec
dec
dec
pop
dec
add
dec
addr16
sub
dec
pop
dec
pop
dec
and
dec
xor
dec
add
dec
sbb
dec
pop
dec
pop
dec
daa
dec
or
dec
pop
dec
and
dec
dec
adc
inc
dec
adc
dec
pusha
dec
inc
dec
adc
or
dec
sbb
dec
pusha
dec
or
dec
or
js
es
add
adc
dec
push
dec
sub
dec
ins
dec
jnp
jge
add
dec
dec
adc
dec
je
jno
or
dec
push
dec
addr16
sub
or
dec
and
dec
push
dec
adc
dec
jbe
or
dec
jb
or
imul
aas
jbe
add
jp
jae
imul
jb
inc
dec
adc
dec
bound
dec
sbb
dec
or
dec
push
dec
pusha
dec
or
dec
sbb
dec
push
dec
jle
cmp
dec
pop
dec
pop
dec
xor
dec
or
dec
sbb
push
dec
cmp
stos
add
js
cmp
imul
inc
dec
ins
dec
xor
dec
jae
push
dec
adc
dec
ds
and
dec
jb
ss
push
dec
sub
pusha
dec
and
add
dec
pop
dec
push
dec
dec
dec
pop
dec
push
dec
jno
inc
dec
push
dec
sub
mov
add
dec
dec
dec
adc
dec
bound
dec
jne
dec
dec
push
dec
inc
dec
jl
push
dec
add
dec
ins
dec
add
push
dec
cmp
jl
jne
sub
dec
xor
dec
sbb
dec
cmp
dec
cmp
dec
jl
pop
dec
adc
dec
pop
dec
cmps
inc
pop
dec
sbb
dec
pop
dec
sub
dec
sbb
dec
adc
dec
dec
dec
jp
dec
dec
or
dec
pop
dec
fs
add
dec
cs
xor
dec
push
dec
pop
dec
adc
push
dec
mov
push
add
addr16
sbb
dec
inc
dec
dec
pop
dec
inc
dec
fs
xor
dec
pop
dec
fs
jbe
jl
ins
dec
sbb
dec
jnp
pop
dec
cmp
dec
ss
js
and
add
pop
dec
and
arpl
dec
das
dec
addr16
sbb
dec
adc
dec
jns
jb
inc
dec
pop
dec
sub
dec
inc
dec
pop
dec
jle
ja
pop
dec
xor
dec
pop
dec
bound
dec
dec
dec
jp
or
dec
pop
dec
ss
push
dec
shl
jg
sbb
dec
cs
sub
dec
gs
adc
cmp
dec
pop
dec
dec
dec
jno
or
dec
outs
dec
sub
push
dec
xor
dec
push
dec
inc
dec
xor
dec
leave
stc
push
add
dec
sbb
push
dec
or
dec
sub
dec
gs
or
dec
pop
dec
sub
dec
inc
dec
add
push
dec
or
xor
daa
dec
dec
dec
sbb
dec
sbb
dec
add
dec
cmp
dec
jp
adc
dec
sbb
dec
xor
dec
imul
jmp
jg
pop
dec
sub
dec
and
dec
addr16
pop
dec
outs
dec
inc
dec
pop
dec
jp
sub
dec
dec
and
adc
dec
dec
dec
pop
dec
push
dec
add
dec
sbb
dec
inc
dec
arpl
dec
ja
addr16
inc
dec
ja
and
dec
cmp
ds
mov
pop
add
arpl
add
mov
cmp
jo
popa
mov
push
adc
xchg
pop
call
fidivr
jmp
jb
jmp
or
or
movs
mov
scas
ss
add
dec
pushf
dec
pop
or
shl
push
test
fsub
or
imul
jl
mov
and
mov
cld
movups
pop
movs
in
out
xchg
add
mov
aas
cwde
dec
imul
sub
fwait
adc
rcl
fsubr
dec
push
mov
lock
fistp
and
jne
imul
imul
or
sub
mov
mov
add
ficom
adc
mov
popf
and
retf
pop
sub
sbb
adc
or
inc
out
adc
leave
and
xor
fst
stos
retf
push
test
ins
sub
ds
dec
(bad)
lock
dec
adc
ja
fadd
inc
push
jae
mov
das
loopne
push
xchg
in
cmps
mov
dec
(bad)
cld
xor
(bad)
lods
mov
mov
sub
sbb
jb
mov
mul
in
push
or
cld
cwde
sbb
sub
jp
fs
mov
nop
jle
sub
push
mov
sub
inc
gs
out
fcomp
ror
cld
ror
icebp
jecxz
dec
in
aam
jbe
hlt
or
pop
and
imul
mov
xor
es
mov
mov
scas
scas
adc
sahf
dec
in
aaa
dec
call
fisubr
and
pop
(bad)
lods
lds
dec
adc
shl
pop
(bad)
call
fwait
nop
and
mov
in
add
and
repnz
pop
loopne
mov
xchg
addr16
xor
push
jmp
lods
shl
lock
(bad)
mov
repz
daa
xlat
ds
mov
(bad)
jmp
test
xchg
rol
or
jp
sbb
mov
xor
cmps
mov
(bad)
jecxz
and
jp
ds
rol
cmp
mov
or
add
fst
sti
iret
mov
or
shl
ins
popa
aad
call
pop
mov
stos
mov
test
into
pop
lods
pushf
dec
loopne
fs
pushf
test
mov
shl
fisttp
adc
outs
push
xchg
mov
ss
pushf
mov
mov
outs
inc
clc
retf
pusha
dec
mov
(bad)
jnp
ret
mov
pushf
pop
xor
jbe
test
xchg
xor
aam
test
xlat
bound
iret
out
jle
xchg
pop
js
pop
push
hlt
pop
fisttp
call
ins
ror
xchg
dec
adc
adc
stc
push
jge
pop
pop
adc
(bad)
or
sbb
pop
inc
mov
test
movs
mov
call
push
xor
sbb
pusha
fst
dec
dec
push
ins
inc
sbb
test
or
and
mov
aaa
inc
daa
mov
(bad)
imul
loope
popa
push
jle
(bad)
aad
mov
xchg
pop
add
sub
cdq
stos
addr16
cmovs
push
fstp
(bad)
(bad)
jno
daa
int3
and
xor
add
or
mov
dec
mov
mov
(bad)
xor
call
mov
cmp
out
ins
push
xchg
mov
xchg
cmp
dec
jp
pop
pop
add
sti
sub
inc
imul
cs
inc
adc
jne
xorps
shl
movs
sub
mov
sar
add
sub
sub
retf
sbb
in
loopne
fcom
daa
in
aas
cmp
add
dec
fimul
sub
dec
out
pop
cmp
xlat
in
xchg
sar
lods
fisttp
aad
in
pop
cdq
jl
in
outs
push
test
out
ret
dec
mov
or
cmps
enter
push
mov
retf
add
in
sahf
pop
and
sub
fadd
test
loopne
cmp
out
fs
cld
outs
mov
push
std
xchg
add
mov
and
mov
and
out
xchg
in
mov
ror
xchg
inc
push
in
add
mov
inc
dec
leave
xchg
fnstcw
and
push
and
ja
pusha
inc
iret
(bad)
jp
xor
stos
jle
out
jecxz
jb
pop
(bad)
rcl
xor
xchg
xor
loop
push
adc
xchg
movs
mov
pop
dec
out
adc
(bad)
ds
xchg
test
mov
adc
mov
xchg
inc
xor
ret
cmp
addr16
mov
cdq
loop
mov
dec
mov
cmp
xor
sub
jle
test
mov
jcxz
add
cdq
movs
xchg
in
out
fs
int3
popf
es
fnsave
and
push
retf
adc
lahf
dec
jge
dec
sub
jae
push
or
xchg
jno
cmp
pop
nop
adc
aaa
jnp
rol
fisub
inc
jmp
sub
jns
xchg
fisttp
mov
dec
sahf
pop
xchg
test
les
enter
cwde
lea
ror
xor
and
inc
scas
test
hlt
aaa
push
jecxz
bound
hlt
scas
cmp
aaa
mov
ror
mov
retf
cli
pop
add
pusha
rcl
addr16
xor
jae
shl
inc
cwde
cmp
pushf
mov
mov
test
mov
and
ret
inc
add
xchg
(bad)
fld
ret
loope
mov
mov
jge
pop
push
leave
xchg
dec
mov
iret
lea
clc
loopne
xor
mov
xor
cmp
xor
js
mov
push
add
mov
push
imul
into
pop
arpl
sub
adc
push
imul
add
ds
cmps
cmps
dec
lock
fbstp
pop
sti
mov
in
into
cld
in
int
inc
jge
mov
or
pop
das
out
shl
mov
pushf
ds
mov
mov
mov
mov
rcr
cmp
hlt
xchg
xor
fiadd
add
and
sub
inc
xchg
mov
cmp
xchg
mov
mov
xor
sbb
test
add
stos
ror
inc
add
cld
mov
je
inc
mov
cmp
add
inc
lods
inc
push
mov
cmp
dec
xchg
cmps
jg
dec
dec
push
push
test
sti
xchg
ins
cwde
cld
dec
mov
mov
or
pop
mov
pop
bound
icebp
xchg
(bad)
pop
call
js
and
rol
adc
test
ins
out
pop
stos
and
pop
jge
jae
inc
fsubp
into
aam
es
jle
mov
adc
scas
js
ja
outs
cmp
push
jnp
cs
adc
add
push
stos
sub
xor
cmp
sti
lods
push
int
inc
add
cmp
xor
int
ret
mov
dec
js
fadd
add
mov
loopne
jbe
scas
enter
mov
sbb
sub
cli
(bad)
cmp
scas
pop
ins
or
or
pop
cmp
jmp
movs
dec
mov
push
imul
inc
fstp
ss
test
sub
(bad)
dec
dec
pop
into
loop
jae
mov
int3
imul
test
stos
mov
add
mov
mov
add
pop
jno
xor
fcmovbe
push
pop
mov
cmp
das
mov
push
es
mov
(bad)
adc
sub
fldenv
pushf
mov
into
popa
(bad)
jo
sbb
jp
fwait
enter
stos
pop
repnz
dec
mov
mov
push
push
push
sub
loop
repnz
sbb
sbb
mov
adc
or
jecxz
cmp
mov
pop
jb
into
xchg
xchg
or
mov
into
loop
jl
and
test
dec
je
and
cmp
inc
and
mov
mov
mov
jns
mov
je
and
mov
cmp
inc
movs
adc
mov
mov
jne
xor
loop
xor
dec
mov
enter
mov
mov
jbe
mov
push
aad
xchg
(bad)
sbb
mov
jmp
lahf
jg
(bad)
cmp
sub
cmp
and
js
mov
pop
add
outs
xchg
mov
lahf
in
aad
stos
nop
mov
dec
punpcklwd
pop
push
mov
repnz
inc
add
cmps
cli
lahf
xchg
js
xor
jne
xchg
js
sti
xchg
mov
lahf
call
jo
and
add
in
mov
(bad)
(bad)
jmp
aad
mov
sub
jle
pop
(bad)
cmps
cs
push
mov
aaa
retf
test
mov
out
dec
cmc
sub
repz
or
jle
mov
fs
ror
jecxz
aas
mov
adc
inc
mov
test
jo
fidiv
dec
in
pusha
in
(bad)
enter
xor
mov
mov
aam
and
dec
adc
fwait
js
xor
(bad)
jmp
dec
cmps
jmp
xor
mov
pop
aas
dec
inc
push
bound
pushf
sar
je
dec
mov
rcl
shr
cmp
adc
mov
add
cdq
dec
and
push
cmps
sbb
js
push
push
(bad)
enter
clc
mov
in
aad
pop
add
fstp
stc
pop
loop
call
push
and
mov
xchg
xor
repnz
(bad)
pop
sbb
sar
jbe
pop
mov
test
out
int3
(bad)
test
push
cs
add
cmp
push
outs
lahf
in
hlt
xchg
stc
cmp
sbb
xlat
stc
inc
leave
add
imul
aam
pop
call
cld
aad
adc
inc
retf
mov
mov
aam
push
lods
cld
jl
in
stos
and
imul
pushf
sbb
lahf
inc
cs
into
jbe
test
outs
sbb
das
add
push
jp
ret
lock
pop
mov
cmp
dec
(bad)
cmp
mov
mov
xor
mov
cs
jns
mov
fcmovnb
pop
call
add
cs
hlt
cld
cdq
retf
or
push
pop
jno
call
pop
cmps
pusha
je
into
jmp
inc
lods
(bad)
enter
jne
(bad)
fwait
cld
cli
adc
and
(bad)
lods
clc
mov
push
rol
inc
cmps
mov
jno
mov
adc
cmp
mov
das
xchg
cmp
loope
mov
dec
mov
cwde
xchg
cmp
mul
fcomp
mov
push
push
jne
dec
xchg
jge
jecxz
movs
jge
add
pop
lahf
inc
(bad)
movs
out
pop
sbb
(bad)
sub
push
sub
and
(bad)
repnz
xchg
jno
pushf
test
mov
aaa
fisubr
pop
lock
sub
sub
cmp
push
dec
movs
cli
adc
loopne
mov
cmp
dec
add
js
out
xchg
fcmovbe
add
mov
loop
fisubr
push
and
mov
xchg
push
inc
out
adc
outs
cmps
or
push
bound
jo
mov
ficomp
shl
cmps
mov
cld
nop
and
add
mov
dec
retf
mov
add
and
dec
out
lahf
xchg
jns
pop
mov
and
es
or
adc
data16
movs
int3
(bad)
iret
mov
scas
into
sbb
sub
xchg
dec
retf
mov
(bad)
jge
popf
dec
ret
in
xor
xchg
fisttp
fisubr
ins
outs
jmp
mov
repnz
cmp
cs
pop
adc
push
xchg
daa
xor
cmps
sbb
mov
test
out
rol
loope
cmps
stc
lock
mov
mov
jmp
xor
gs
fs
in
push
ss
jb
xchg
aad
and
adc
mov
lea
fcom
cli
cmp
sbb
xlat
aad
rol
push
jg
fisttp
dec
pop
cmp
ss
(bad)
sbb
cmp
fdivp
int3
and
ss
out
fwait
mov
out
ins
retf
mov
loope
dec
sub
dec
aas
fsin
cmp
mov
pop
popa
mov
jo
(bad)
fwait
push
rcl
sar
dec
mul
clc
push
push
cmp
sbb
pop
inc
add
xchg
in
rol
stos
jl
push
nop
xor
fisub
and
sub
mov
lods
ins
hlt
push
mov
adc
or
or
aaa
iret
pop
push
cmps
xchg
shl
sti
fnstenv
test
push
push
add
mov
mov
or
(bad)
loopne
movs
jle
retf
jl
pop
mov
and
xor
dec
pop
in
xchg
inc
sub
xchg
dec
and
or
add
pop
mov
cmps
sti
fs
mov
aad
clc
inc
sbb
jge
(bad)
jle
dec
in
ret
jnp
loopne
xchg
dec
shr
mov
bound
jmp
in
or
test
lods
xchg
(bad)
cmp
add
mov
iret
out
rcl
out
xchg
in
add
dec
cmp
fldcw
mov
daa
xlat
pop
sbb
in
in
test
xchg
pop
push
out
call
std
or
inc
jnp
test
lods
sub
rep
pop
push
or
mov
in
into
in
sbb
out
fs
into
call
mov
lods
xchg
adc
fst
fnstenv
call
xor
pop
sbb
or
mov
pop
out
idiv
out
sub
ins
mov
xor
pushf
jns
xchg
pusha
pop
call
fldln2
adc
out
idiv
aam
fbld
push
gs
(bad)
push
mov
push
dec
xor
mov
dec
sahf
push
loope
fsubr
mov
mov
push
shr
outs
inc
add
mov
adc
mov
retf
fwait
ins
sub
mov
push
das
sub
inc
adc
(bad)
cld
dec
xchg
stos
bound
fbstp
mov
sub
mov
jmp
jns
lods
push
sbb
inc
call
mov
mov
jno
mov
movs
sub
add
fistp
ss
add
dec
cmp
(bad)
loopne
(bad)
aam
mov
cmps
xor
popf
scas
jge
fs
mov
adc
sbb
or
ret
jns
ja
iret
test
push
call
dec
jle
dec
lock
(bad)
in
cmp
ret
jle
add
mov
sti
and
xchg
push
pop
add
es
loopne
and
or
je
lock
ror
test
adc
pop
cmp
push
mov
retf
dec
mov
push
(bad)
mov
aas
cmps
loope
into
pop
push
jmp
es
mov
add
std
in
lds
xchg
pop
dec
push
sbb
fimul
int
inc
inc
or
mov
xor
push
mov
push
xor
sti
sub
cmps
or
mov
jge
adc
test
mov
pusha
inc
mov
hlt
mov
mov
out
lahf
and
push
fsubr
add
(bad)
nop
dec
mov
dec
movs
aam
push
(bad)
in
movs
sahf
add
in
mov
inc
push
and
xlat
mul
xchg
frstpm(287
fisubr
sbb
ret
repnz
div
in
cmp
imul
pop
cld
sbb
pop
push
ror
xchg
in
leavew
out
mov
dec
popf
lock
or
lods
add
bound
sbb
out
pop
scas
loopne
stos
inc
pop
std
xchg
je
xor
sahf
das
lea
jno
iret
mov
push
adc
and
fldcw
cmp
jp
outs
cmp
mov
in
ret
dec
dec
jne
jg
hlt
pushf
mov
xchg
dec
cmp
cdq
sub
mov
aas
iret
cdq
pop
xchg
push
add
jnp
xor
push
rol
push
push
xor
pop
xor
adc
adc
dec
dec
cld
fcomp
jb
jge
or
test
rol
js
lods
icebp
arpl
(bad)
shr
jne
sub
push
pop
inc
fsubr
popa
add
clc
jmp
xchg
mov
jae
cdq
ja
push
xlat
sub
and
das
data16
xchg
(bad)
out
pop
int
cmp
dec
mov
cmp
pop
xchg
inc
lock
ins
cmpxchg
push
ficomp
into
ins
xchg
retf
in
movs
das
js
out
fwait
pop
adc
test
adc
shr
dec
push
imul
add
sti
dec
add
arpl
or
stc
test
mov
ins
dec
adc
bnd
add
mov
pop
pop
pop
ins
xor
pop
jne
(bad)
fistp
xor
cli
and
push
mov
mov
arpl
mov
fldcw
dec
das
cdq
popa
jecxz
das
or
dec
test
sub
arpl
hlt
or
pop
pop
adc
and
push
jno
push
daa
popf
xor
push
cld
lahf
or
jo
pop
fbld
cwde
xchg
in
push
daa
inc
or
and
adc
iret
dec
push
(bad)
pop
adc
adc
fmul
sub
and
dec
add
hlt
mov
loopne
sbb
cmp
mov
cmp
inc
xchg
cmp
push
cmp
int3
cmp
sbb
jmp
int3
xchg
pop
cmp
pop
les
mov
scas
stos
test
cmc
jb
lock
jmp
js
loope
or
mov
fisub
arpl
(bad)
pop
xchg
xor
gs
or
(bad)
add
add
nop
jmp
shl
cmc
lea
cmp
xchg
adc
int3
clc
leave
mov
pop
int
cld
mov
call
xchg
cli
mov
mov
mov
repz
push
mov
xor
test
out
clc
mov
pop
jne
cdq
add
scas
cwde
jg
jg
push
sub
imul
jge
in
push
pop
sbb
or
ror
(bad)
pop
pop
jp
jle
adc
cmps
ss
mov
call
cwde
jns
add
jns
les
fisttp
mov
mov
stc
mov
bound
jb
push
pop
outs
adc
jo
mov
mov
sahf
out
inc
scas
or
cli
movnti
sub
adc
ins
add
xor
and
stos
stos
js
xlat
inc
pushf
cmps
xchg
fwait
jnp
ins
adc
inc
xchg
fdivr
sahf
pop
sar
push
xchg
cdq
pop
ret
adc
cmps
xchg
dec
ficomp
je
push
cmps
xchg
in
sbb
mov
inc
and
call
pusha
(bad)
push
outs
add
push
dec
popf
daa
adc
in
push
sbb
es
cmc
cmp
stos
popa
das
aam
(bad)
outs
aas
pop
add
jnp
iret
in
inc
(bad)
imul
arpl
jp
out
stos
xchg
neg
inc
jecxz
add
add
lea
mov
sbb
movs
nop
jge
mov
xor
js
and
push
jge
ins
in
in
call
mov
dec
xchg
mov
ja
test
push
push
add
pop
cwde
inc
cmp
jecxz
mov
pop
or
add
or
cld
sub
stos
retf
stos
sbb
iret
dec
into
pop
pop
cmp
pop
mov
xor
fld
pop
sub
lahf
dec
mov
int3
push
mov
push
popf
dec
pop
sub
repnz
ret
mov
loope
push
and
repnz
and
stos
rcl
cld
call
popf
adc
fdivr
mov
sbb
cmp
xchg
(bad)
cmc
jne
xor
push
cmps
pop
js
mov
push
xor
pop
int3
dec
ret
jmp
add
and
fwait
ror
movs
fimul
pop
cmp
pop
ret
hlt
fistp
test
js
outs
enter
(bad)
or
mov
test
(bad)
std
in
or
fadd
dec
cs
out
pusha
iret
mov
cs
mov
mov
cld
inc
and
fst
xlat
add
daa
imul
icebp
imul
ins
mov
xchg
push
inc
fsub
addr16
leave
mov
cmp
xchg
cmp
(bad)
sbb
jno
sbb
fisubr
and
leave
fstp
daa
xor
ins
xchg
rcr
mov
jmp
ret
push
daa
fldenv
xchg
retf
mov
dec
addr16
jle
repnz
ss
fwait
xchg
sub
sbb
adc
repnz
ds
xchg
fisttp
cmps
mov
xor
loope
call
and
ja
aaa
aaa
push
arpl
xchg
iret
jo
jmp
mov
cmps
mov
lods
push
sahf
mov
push
cmp
inc
jae
jecxz
fcmovu
arpl
xchg
xchg
neg
div
into
cli
mov
and
sbb
imul
mov
mov
push
mov
xor
xor
add
mov
ror
cld
hlt
out
fisttp
push
ror
sbb
pop
leave
ds
mov
jge
or
arpl
dec
xchg
clc
push
add
fild
cmc
jp
lahf
(bad)
(bad)
xchg
movs
gs
out
pusha
clc
pusha
adc
std
test
adc
push
xor
addr16
dec
and
xor
mov
xor
mov
mov
jg
jp
mov
out
fcomp
push
cli
mov
jl
mov
jl
push
xchg
jb
stos
mov
pop
inc
push
cmp
fiadd
aad
popf
sbb
adc
cmp
and
mov
data16
push
pop
mov
xchg
and
or
jge
push
and
sbb
jle
mov
(bad)
and
pop
in
add
(bad)
mov
(bad)
out
cdq
dec
mov
clc
popa
and
pop
aam
mov
xor
sbb
aas
pop
call
xchg
dec
out
test
mov
pop
mov
adc
mov
(bad)
icebp
mov
scas
jbe
cmc
adc
pop
fs
shr
in
sub
iret
push
xchg
inc
test
and
ror
inc
or
enter
xchg
pop
push
mov
and
sub
or
loopne
inc
xor
and
adc
push
jae
mov
out
loopne
inc
jmp
xor
sub
push
mov
cdq
fild
inc
loop
cmp
or
inc
xrelease
pop
sbb
sbb
(bad)
mov
jbe
(bad)
shl
sbb
mov
lds
push
fcmovnb
cmp
push
scas
sahf
add
pop
mov
int3
mov
nop
mov
sbb
cmp
mov
push
sub
add
or
call
push
and
inc
cdq
cld
movs
xor
popa
jo
jl
in
inc
pop
dec
imul
lahf
gs
in
es
pop
xchg
lods
pop
popa
dec
push
ja
jo
push
push
das
test
and
fs
or
in
lds
(bad)
rol
xor
and
stos
dec
and
adc
mov
cld
mov
dec
mov
out
test
xor
and
sbb
xlat
sahf
shl
pop
ja
lods
repnz
sub
data16
and
dec
push
rep
jle
mov
nop
push
add
loop
pop
aas
push
cwde
xchg
imul
cs
pop
add
push
sbb
push
cld
inc
fidivr
pusha
jne
(bad)
clc
add
add
mov
mov
in
test
addr16
inc
je
ja
cmp
test
neg
xor
lds
repz
jmp
add
mov
dec
movs
fdivr
jbe
xchg
adc
pop
lods
sbb
mov
jmp
or
mov
adc
test
dec
add
je
inc
gs
xchg
out
push
mov
mov
or
test
mov
and
push
data16
adc
pusha
adc
cld
mov
mov
jge
out
push
aam
outs
add
loope
xchg
mov
fcom
dec
inc
stos
mov
daa
mov
and
fs
add
lea
mov
jl
retf
imul
mov
je
scas
jmp
add
ins
das
add
jmp
xor
outs
fs
popf
push
jno
jge
mov
aaa
cmp
xchg
xchg
out
mov
sbb
push
and
fst
hlt
fidivr
push
cmp
inc
scas
in
dec
inc
bound
outs
test
lock
mov
or
ds
or
pop
jno
shr
out
ss
pop
cmp
int
rcl
push
xlat
push
cld
mov
call
sbb
jae
rol
ins
inc
es
mov
push
out
adc
lock
lds
push
and
aad
test
mov
out
imul
cli
jnp
mov
bnd
in
lods
pusha
jmp
push
out
add
sti
jg
scas
xchg
xor
add
std
sbb
pop
jle
jmp
gs
mov
les
dec
ret
sub
sub
adc
mov
and
scas
mov
rol
adc
pop
dec
stos
xchg
int
inc
icebp
sub
dec
inc
daa
test
add
add
jmp
scas
cmp
lods
add
out
mov
data16
ret
(bad)
pop
fisubr
pop
fidiv
push
adc
mov
jnp
in
push
inc
xchg
cs
pop
inc
out
dec
push
or
or
fimul
jmp
int3
adc
int
xchg
(bad)
aam
xchg
loope
mov
push
add
div
mov
les
in
add
pop
inc
jne
mov
imul
arpl
mov
cmp
ret
pop
sar
lods
movs
cmp
pop
bsr
pop
xor
outs
or
les
arpl
mov
cmp
lods
outs
mov
jo
xchg
xchg
sub
leave
mov
mov
add
jge
cmp
inc
bound
mov
fdivr
or
pop
fsub
dec
in
cdq
sbb
mov
retf
sbb
lods
scas
jnp
pusha
outs
fisttp
jp
mov
lea
and
fdiv
dec
hlt
hlt
iret
(bad)
or
add
shr
jle
mov
jecxz
lods
push
sbb
call
sbb
mov
out
aas
push
call
mov
mov
int
xor
fiadd
popa
sbb
mov
mov
(bad)
mov
push
adc
idiv
adc
inc
call
test
jne
gs
or
je
push
xor
out
sar
ret
inc
xor
pop
call
int3
in
rcl
pop
ret
popa
sti
and
inc
and
ror
add
add
cld
cmp
sub
into
pop
xlat
pop
cmp
aaa
xor
ins
pop
adc
jns
adc
fimul
pop
pop
sbb
mov
out
cdq
fisubr
cld
cmps
adc
cmp
scas
jne
xchg
pop
jo
inc
mov
xor
cdq
pop
xlat
sub
xchg
fld
or
ds
cmp
jp
mov
movs
jmp
push
rol
mov
inc
nop
sbb
js
and
cmp
and
push
dec
add
xchg
jo
pop
mov
ror
clc
mov
or
inc
dec
mov
add
mov
sub
pusha
inc
aam
mov
dec
and
fxtract
rcr
mov
(bad)
loope
mov
jbe
out
rol
ds
xlat
out
test
inc
neg
dec
idiv
inc
fs
aad
nop
sbb
jno
xor
mov
add
ds
and
test
jle
sbb
std
pop
cmp
call
mov
or
fist
mov
imul
mov
mov
add
pop
xchg
pop
pop
jnp
adc
cmp
in
pushf
test
div
stos
int
mov
scas
fmul
pop
rcl
addr16
popf
in
jecxz
dec
les
loope
push
xchg
call
jnp
pop
mov
mov
pop
addr16
mov
mov
scas
test
sbb
dec
loop
ret
enter
loopne
por
test
icebp
push
ja
ror
mov
mov
outs
sub
fimul
add
jecxz
out
sbb
ins
push
mov
lea
les
leave
push
jnp
dec
cs
or
xchg
minps
add
pop
inc
jmp
jns
pushf
jmp
mov
sbb
jmp
lods
hlt
popa
(bad)
sti
or
mov
aaa
add
mov
test
cmp
xor
lea
cdq
mov
cwde
idiv
leave
jecxz
dec
sbb
gs
pop
in
stc
xchg
in
or
jl
mov
cmp
xchg
xchg
mov
push
sub
dec
cmps
jbe
dec
mov
adc
cwde
dec
xchg
cmc
cld
rol
add
add
cmp
xor
out
hlt
ja
aam
add
xor
pop
int
ins
or
mov
push
jl
xchg
aam
jb
cli
sahf
sbb
pop
jbe
cs
mov
fcom
inc
xchg
outs
cdq
cmps
std
test
mov
cmp
mov
arpl
push
aad
inc
mov
pop
(bad)
sub
mov
push
gs
mov
jb
and
aas
std
test
add
call
sti
(bad)
add
push
dec
shl
cmp
jns
call
or
mov
fsubr
sub
pop
sub
ret
(bad)
mov
push
aas
jmp
lock
dec
popf
es
cmp
stc
scas
cdq
jmp
mov
adc
lods
sbb
xor
inc
or
fwait
loop
repnz
cdq
jne
loope
and
xor
push
jns
push
daa
gs
push
(bad)
out
inc
pop
hlt
ja
int3
push
jle
popa
mov
stos
mov
rcr
in
inc
inc
retf
(bad)
sbb
rol
stos
xchg
repz
ins
push
(bad)
bound
cmp
movs
ret
pop
inc
inc
imul
leave
jge
pop
cmps
out
pop
dec
pop
test
pop
cmc
cmp
xchg
mov
es
dec
test
pop
pusha
test
test
imul
fwait
pop
mov
in
push
ins
dec
sub
in
inc
in
mov
mov
stc
inc
sub
mov
rcr
sub
mov
sbb
jmp
cmp
adc
push
push
pop
mov
movs
xchg
xor
mov
call
adc
mov
push
sbb
and
pop
jecxz
pop
adc
adc
leave
ror
in
jae
push
rcl
test
inc
and
cmp
out
(bad)
push
mov
call
dec
ds
rep
imul
shl
mov
or
cmp
outs
call
aam
jo
mov
jo
(bad)
loopne
ror
ret
ret
mov
aam
in
clc
dec
(bad)
repnz
mov
pop
sbb
inc
adc
outs
jne
fs
sub
adc
xor
(bad)
(bad)
fbstp
daa
add
mov
(bad)
leave
or
and
mov
inc
stos
cdq
int
pop
iret
xchg
jno
call
and
div
mov
inc
outs
xchg
dec
mov
or
inc
pop
cmps
and
imul
fiadd
mov
mov
mov
cmc
add
out
push
push
jl
or
push
push
retf
push
(bad)
dec
sub
(bad)
cwde
dec
sbb
pop
aaa
xor
push
or
jmp
int
cdq
ret
(bad)
lods
shl
nop
cmp
pop
retf
dec
shl
stc
out
add
push
xor
lods
test
icebp
mov
xor
ja
scas
shr
clc
shr
cmc
ja
mov
cmp
rcr
fucom
in
pop
push
mov
lahf
ins
push
cmps
add
lods
fs
fdiv
out
push
or
(bad)
mov
loope
pop
(bad)
cmp
jp
(bad)
or
fidivr
int
and
xor
adc
sub
mov
stos
scas
scas
push
hlt
push
sub
bound
push
out
mov
push
mov
dec
jb
call
cwde
xlat
dec
sub
fnstcw
es
(bad)
pop
dec
ror
and
mov
sub
jno
jmp
ret
(bad)
movs
cli
add
push
pushf
jge
lods
or
xchg
adc
jae
in
mov
dec
push
inc
jb
and
test
call
mov
mov
xor
push
sub
xor
iret
fsubr
pop
or
or
cld
sub
dec
add
push
mov
stos
ins
mov
cmp
sub
dec
mov
pop
and
cld
es
mov
dec
icebp
and
inc
and
inc
call
mov
cmp
xchg
mov
push
mov
xor
push
xor
sbb
xor
fwait
push
push
out
sub
outs
xchg
push
repz
inc
mov
shl
in
fcmovnbe
ja
inc
sbb
mov
cmps
iret
dec
int
dec
dec
cmps
push
or
shr
dec
ret
call
movs
(bad)
dec
jmp
loope
loop
repnz
inc
fsubrp
movs
fisubr
repz
sar
mov
xchg
add
iret
aad
aam
xor
out
pushf
jl
enter
lea
push
movs
rcl
or
and
push
fmul
push
jp
in
cli
sub
add
popa
clc
mov
jp
cdq
mov
arpl
or
inc
(bad)
icebp
popf
push
push
bound
xchg
daa
jg
stos
movs
mov
pop
sbb
push
or
dec
dec
push
mov
sbb
js
fwait
inc
imul
pop
mov
sbb
mov
cmp
mov
xor
sbb
pop
popa
lock
push
pop
lods
sti
xor
sbb
(bad)
mov
adc
push
mov
sbb
jg
in
inc
movs
mov
push
in
icebp
loopne
xchg
icebp
rcl
repnz
or
dec
sbb
pop
sub
pop
sub
add
adc
adc
or
into
xor
push
lods
loop
jge
fsubr
and
rcr
or
xchg
daa
push
shl
mov
push
push
dec
mov
mov
fnstsw
pop
lods
inc
sub
xchg
jns
xchg
int
pop
xchg
jne
das
sti
mov
cmp
mov
ficomp
mov
imul
dec
rcr
push
ret
or
pop
pop
add
sahf
add
sbb
or
mov
mov
jmp
mov
inc
pop
cmps
mov
in
loop
inc
shr
push
int
push
add
adc
mov
push
fsub
jp
cmp
jns
cwde
pop
jg
aas
fdivr
arpl
jg
ins
sub
fucomi
sbb
xor
xchg
cmc
js
jle
out
mov
jnp
cmp
stos
mov
nop
movs
xor
in
daa
pop
loope
jns
or
scas
aam
xchg
adc
sub
outs
ret
pop
jb
in
inc
sbb
or
sub
mov
popa
push
les
mov
lods
mov
hlt
dec
add
push
iret
mov
inc
(bad)
clc
add
pop
mov
push
clc
ds
int3
(bad)
popa
adc
sbb
push
jge
inc
dec
retf
(bad)
pop
sub
push
and
sbb
jl
inc
dec
es
ret
dec
in
and
imul
inc
movs
mov
and
pop
call
mov
xchg
ja
push
xchg
mov
sbb
mov
inc
push
mov
(bad)
in
mov
pop
xchg
pop
in
pop
das
pop
adc
dec
add
sahf
fmul
pop
bound
add
ret
mov
mov
lock
loope
push
push
sub
push
mov
sub
das
imul
sub
and
jmp
cmc
xchg
xor
jmp
push
mov
jbe
pop
jmp
pop
pop
jmp
aaa
dec
in
mov
imul
xchg
xchg
push
cmp
inc
pop
mov
enter
mov
and
push
cmp
imul
loop
xor
cmp
sbb
mov
js
or
das
cmp
(bad)
in
mov
mov
mov
or
(bad)
mov
jns
jp
loopne
int3
imul
test
mov
push
and
or
lahf
mov
mov
jnp
sub
ffree
aas
js
mov
cmps
repnz
sub
lahf
call
int
cmp
stc
inc
sbb
rol
push
retf
aas
xchg
inc
fxch
or
jl
xchg
cmp
es
push
push
jge
imul
pop
xchg
ret
mov
nop
inc
fcomp
icebp
mov
fbld
xor
push
and
or
cld
and
ja
ins
ja
and
loop
lahf
lds
and
cmps
ss
mov
clc
push
push
sub
clc
jge
push
xchg
xchg
pop
mov
sub
jl
in
and
sub
mov
xchg
fwait
test
pop
ficomp
loopne
mov
loope
add
lods
dec
sti
mov
dec
fistp
adc
dec
adc
add
lds
inc
unpckhps
mov
js
mov
outs
rcl
jae
pop
mov
loop
xchg
(bad)
enter
jbe
dec
loopne
iret
mov
imul
aaa
fnstcw
fdivr
mov
ror
or
xchg
inc
inc
push
push
xchg
mov
push
xchg
dec
popf
pop
fist
fwait
test
cmp
stc
push
repz
dec
jl
lea
cmp
dec
rcl
ror
call
pop
cs
stos
jns
dec
cmp
test
cmc
pop
dec
repz
lea
(bad)
sbb
mov
sub
in
dec
adc
scas
out
shl
mov
sbb
and
scas
mov
pusha
in
push
mov
mov
mov
add
lods
(bad)
or
aad
pushf
push
jo
ins
cmp
int3
pop
outs
test
dec
sub
jmp
ret
push
jne
cdq
loopne
je
test
sub
popa
and
repnz
jae
in
fild
or
push
shl
(bad)
jb
mov
add
(bad)
cmp
mov
push
mov
mov
mov
push
or
jmp
pop
adc
pop
aad
sbb
inc
jne
(bad)
mov
dec
icebp
dec
stos
arpl
inc
push
and
int
js
(bad)
adc
push
pop
add
jne
loop
add
xchg
scas
sub
dec
popa
jae
ja
popa
ins
dec
cmp
test
add
hlt
jg
aam
bound
mov
cmp
mov
cmp
xlat
test
ins
push
dec
imul
push
mov
pop
add
jns
sub
lock
dec
outs
ins
jb
inc
push
in
mov
call
je
add
sub
cmps
sahf
cmps
add
loop
ds
jmp
fwait
pop
mov
or
and
shr
out
ins
add
push
sbb
add
retf
lods
mov
xchg
les
addr16
call
sbb
retf
hlt
sbb
pop
and
test
or
bound
es
jbe
dec
xchg
movs
mov
inc
sti
loopne
inc
not
add
cmp
lods
fdivr
mov
cld
test
mov
arpl
pop
mov
lods
stc
cmps
in
out
pop
mov
sub
cli
cmp
inc
mov
test
xor
pop
and
dec
in
xor
scas
jne
xor
popf
out
push
sbb
mov
pop
shr
xlat
clc
adc
js
sti
add
test
xor
jmp
sbb
into
shl
jmp
(bad)
and
maxps
popa
cs
xchg
addr16
paddusb
loope
and
in
dec
pop
add
xchg
sbb
push
mov
cmp
ja
mov
xchg
pop
xchg
add
or
pop
inc
clc
fistp
std
pop
and
test
shl
xor
cli
push
sbb
fcom
jnp
(bad)
clc
(bad)
imul
cmp
js
pop
repz
cmp
lock
int
sahf
and
mov
arpl
out
cmps
jg
xchg
out
jl
neg
outs
sub
jp
dec
stc
aad
sbb
mov
add
(bad)
xor
xchg
sub
mov
or
test
addr16
stos
nop
xor
inc
cmp
inc
je
scas
xor
out
mov
gs
xchg
xor
into
mov
sbb
xlat
sbb
jo
(bad)
jo
js
push
or
popf
cmp
xchg
jo
pop
aad
sbb
ja
scas
clc
in
stc
push
add
add
(bad)
movs
mov
dec
jg
push
add
push
push
inc
lods
lahf
or
inc
(bad)
pusha
(bad)
jmp
xchg
add
mov
ins
add
and
jno
out
nop
push
sub
push
ins
jmp
mov
pusha
xor
out
jnp
sahf
mov
mov
sbb
and
out
and
jno
out
cmp
lea
in
or
loopne
dec
sub
sbb
xor
jl
aad
int
shr
mov
xor
add
test
push
mov
sbb
pushf
inc
mov
xor
or
(bad)
aaa
dec
rol
or
pop
mov
mov
stc
test
popa
test
(bad)
fimul
pop
push
cmps
cmp
cdq
add
sbb
inc
push
mov
div
inc
xchg
call
xor
mov
inc
aam
dec
sub
xchg
xchg
cmp
pop
fwait
cmp
push
lds
inc
xchg
xchg
and
int3
or
stos
outs
outs
(bad)
cli
(bad)
in
jl
stos
pop
and
mov
idiv
add
lahf
pop
add
inc
cs
mov
data16
mov
repnz
mov
push
scas
jmp
pop
gs
mov
inc
pop
adc
mov
dec
out
(bad)
aam
add
(bad)
jecxz
push
ds
ins
icebp
mov
sub
jbe
or
iret
loop
sub
xor
mov
and
push
(bad)
pusha
imul
jmp
iret
and
lock
out
stos
lods
nop
sahf
(bad)
mov
test
dec
adc
add
iret
add
jle
cmps
adc
repnz
pop
movs
mov
or
or
scas
xchg
out
adc
aad
mov
pop
lods
inc
cmps
gs
mov
pushf
bound
pop
out
sbb
sti
xor
xchg
jns
lds
dec
ret
jecxz
push
movs
ja
hlt
std
mov
inc
sbb
aaa
je
jge
fcom
and
pop
jb
add
mov
push
mov
fwait
retf
iret
cmps
cdq
bound
mov
cmp
dec
cwde
mov
sbb
sbb
test
test
sbb
cmp
add
call
push
adc
and
imul
jbe
loop
clc
cmp
pop
mov
push
retf
xchg
idiv
jp
sbb
add
mov
fistp
sub
loope
push
hlt
scas
ja
(bad)
das
xor
add
jge
pop
mov
mov
ror
adc
mov
retf
or
lea
mov
test
fwait
cmps
shl
xlat
pop
inc
ret
leave
(bad)
sub
mov
cdq
xor
inc
shl
int
cmp
cli
in
adc
sbb
into
data16
adc
push
push
mov
dec
loop
stc
add
jecxz
aaa
mov
(bad)
(bad)
nop
inc
cmps
loop
jae
mov
lss
sbb
or
ins
pop
ss
mov
inc
xchg
dec
add
shr
push
popa
and
pop
icebp
outs
mov
retf
mov
adc
pop
cmp
cmp
adc
mov
inc
out
jbe
gs
pop
cdq
shr
and
adc
push
sub
ffree
(bad)
and
cmp
lahf
sbb
jp
add
jns
adc
sbb
and
es
fbld
fsubr
add
jne
bound
shr
jg
ficomp
fadd
mov
cmp
call
dec
xchg
mov
jne
int3
xchg
outs
fdivr
stc
or
adc
inc
mov
imul
inc
jge
retf
imul
imul
adc
loopne
xchg
mov
mov
pop
inc
xor
inc
push
loope
pop
cmps
test
adc
ficomp
jo
dec
inc
addr16
std
adc
or
dec
lods
lea
inc
push
lods
jle
js
popa
imul
gs
inc
loop
call
outs
div
in
mov
fldenv
test
push
xor
xchg
jb
sti
cwde
jle
in
sub
mov
aad
push
jl
add
cmp
fcom
pop
popfw
stos
call
fucomi
repnz
icebp
test
inc
cwde
cmps
test
mov
add
mov
mov
in
cld
jne
dec
mov
pop
xchg
mov
mov
mov
add
imul
jge
ret
mov
div
clc
mov
pusha
jg
inc
or
ror
fimul
pop
jg
xor
hlt
xchg
sub
dec
pop
push
in
pop
daa
test
test
aam
ss
inc
jb
xor
xor
add
jns
sub
daa
jl
and
and
ret
fld
icebp
addr16
iret
retf
in
mov
xchg
rcr
bound
call
test
sub
inc
pop
cmps
ret
pop
hlt
push
mov
or
in
pusha
pop
xor
daa
cwde
jbe
cmps
sbb
mov
xchg
ja
loope
mov
retf
xor
loopne
or
and
sbb
fistp
jns
jne
mov
cdq
sbb
ja
mov
xor
ss
jmp
leave
hlt
lods
(bad)
call
or
jbe
aam
or
mov
mov
mov
or
cmp
sbb
cld
pusha
push
add
mov
or
inc
shr
sub
mov
fidiv
push
(bad)
add
fild
lahf
jp
sar
mov
out
stos
or
int3
(bad)
ret
mov
(bad)
jl
inc
ds
leave
dec
cwde
sbb
ins
cwde
push
xchg
push
enter
icebp
and
shl
pusha
pop
shl
dec
mov
sti
fwait
sub
lahf
sbb
xor
push
push
leave
loope
xchg
mov
xlat
dec
daa
jp
mov
pop
or
bound
xor
in
mov
imul
sbb
stos
mov
mov
inc
nop
(bad)
movs
mov
rcr
mov
enter
mov
movs
in
ins
push
sub
scas
mov
inc
adc
std
cmp
cwde
icebp
sbb
mov
out
clc
sub
repz
nop
mov
ret
mov
adc
or
mov
push
mov
jp
cmps
mov
out
inc
cmc
and
pop
pusha
inc
dec
xchg
shl
fistp
iret
push
push
dec
pop
fild
dec
or
addr16
arpl
add
xor
mov
cwde
loop
je
push
push
sbb
push
push
mov
xchg
mov
ret
hlt
push
jo
in
ins
mov
pop
enter
mov
sahf
pop
mov
jmp
pop
adc
out
test
push
add
out
cdq
mov
je
aad
je
xor
std
sbb
xor
xor
jnp
nop
mov
lea
mov
(bad)
scas
call
push
popf
push
or
ins
push
in
outs
mov
sbb
repnz
fs
push
mov
cmps
setnp
test
dec
or
ins
inc
inc
mov
or
shr
popa
cmp
pop
jmp
leave
dec
clc
clc
and
loopne
loop
cmp
(bad)
mov
sub
pop
pop
cmp
fisubr
adc
(bad)
cmp
jae
push
and
neg
xchg
scas
and
xor
mov
pop
arpl
or
xchg
call
jle
imul
sbb
sub
imul
int3
push
in
in
mov
jp
push
push
inc
pop
and
cli
push
sub
add
jecxz
cmp
ja
pop
lock
repz
add
jmp
pushf
xor
movs
cmps
sub
xor
iret
push
cs
rcr
mov
test
inc
push
pop
movs
add
mov
(bad)
out
xchg
or
sar
dec
mov
pushf
push
mov
mov
out
cmps
iret
js
loop
in
cmp
mov
pop
cwde
and
jns
arpl
fimul
fist
dec
stos
leave
inc
(bad)
in
aam
dec
mov
xchg
push
fs
out
ins
ja
xchg
mov
xor
lea
adc
clc
mov
fmul
pushf
stos
(bad)
in
in
inc
fucomi
repz
jno
cmc
push
jne
ins
mov
push
cld
xor
fwait
push
xchg
xor
loop
movs
(bad)
ss
sub
ins
mov
add
xor
or
xor
jbe
in
sbb
xor
sahf
mov
xor
cmp
dec
xlat
lods
lahf
xor
sbb
into
mov
jg
stc
rep
sub
or
lods
add
mov
imul
and
xchg
pusha
pop
inc
fiadd
inc
ja
jecxz
mov
das
add
dec
into
jns
mov
push
sub
mov
pop
(bad)
ja
sbb
inc
push
sub
jmp
push
je
fbld
imul
popf
mov
stos
jnp
xor
mov
gs
xor
xchg
pop
aad
call
mul
push
pop
loopne
iret
sbb
fcomp
xchg
adc
fistp
and
jmp
loopne
cli
pop
sbb
mov
and
sbb
pop
xor
(bad)
daa
mov
jne
lods
dec
cmp
dec
xor
mov
sbb
fcom
adc
sub
sbb
jle
or
mov
pop
(bad)
es
dec
adc
cmp
pushf
pushf
sbb
stos
jne
lods
outs
inc
and
sub
dec
imul
sar
jge
xor
push
mov
ror
dec
dec
inc
mov
fdivr
and
movs
lock
pop
xchg
jp
push
xor
xchg
inc
enter
xchg
and
iret
je
pop
and
add
sub
cmp
jne
xchg
dec
call
retf
cwde
xchg
in
ins
loope
or
xor
pusha
fsub
fsubr
dec
test
dec
and
xchg
popf
or
or
arpl
sbb
mov
imul
int3
(bad)
pop
jmp
(bad)
sbb
and
call
xor
mov
xchg
cmp
sub
or
inc
dec
xchg
or
push
sub
pop
test
adc
jp
add
clc
cwde
add
aam
push
mov
mov
jecxz
jbe
adc
jo
push
mov
lods
cmc
push
test
inc
or
fs
xchg
clc
sbb
addr16
test
lea
dec
xchg
imul
push
fmul
inc
mov
mov
movs
in
push
or
mov
imul
xchg
sbb
ret
add
mov
aad
add
lods
inc
jo
inc
es
mov
cdq
or
push
xor
adc
xchg
call
push
cmp
ins
ss
adc
addr16
push
mov
int
leave
pop
inc
rcl
xchg
mov
push
mov
movs
icebp
int
loop
aad
cmps
push
xor
cwde
cmp
sbb
xor
jecxz
cmc
and
ret
(bad)
xchg
cli
xor
and
mov
test
sbb
push
inc
xchg
jne
jmp
inc
movs
iret
inc
int3
sub
add
mov
out
aam
ds
xchg
sub
dec
lock
bound
pop
shl
popf
bound
enter
or
mov
lock
fisttp
stos
jmp
jl
aaa
pop
mov
push
mov
mov
sbb
jnp
ja
xchg
pusha
xchg
fwait
cmp
ds
repz
jae
pop
xor
shl
outs
aaa
retf
imul
loopne
and
mov
test
push
pop
imul
out
xchg
and
add
not
inc
bound
sbb
movs
xchg
and
js
lock
mov
push
scas
pusha
xor
jp
pop
scas
inc
pop
xchg
cmp
cmp
mov
pop
test
lea
pop
jnp
jl
pop
mov
add
out
cmp
and
add
(bad)
cmps
inc
movs
aas
xchg
adc
jl
and
aas
les
cs
gs
pop
lea
xor
fcom
js
push
das
and
dec
cld
mov
lods
pop
ret
sub
aaa
jmp
or
ins
pushf
adc
fwait
cmp
std
push
imul
mov
div
mov
loop
jl
dec
xchg
adc
cmp
sbb
xor
jmp
hlt
fisubr
jmp
imul
mov
pop
mov
in
pop
idiv
push
std
pop
enter
push
mov
mov
inc
imul
jnp
std
inc
xlat
dec
mov
(bad)
xor
fist
outs
push
xor
add
pop
(bad)
push
hlt
jne
and
push
sahf
in
pop
retf
jae
inc
clc
leave
and
jb
pop
cmc
adc
mov
loopne
mov
mov
mov
add
dec
pop
repz
cmps
dec
mov
cld
push
scas
mov
push
push
inc
test
xor
jb
lock
adc
movs
pop
pushf
mov
mov
and
mov
call
test
shr
aaa
xor
neg
xchg
mov
imul
loopne
sahf
in
xlat
add
cmp
mov
(bad)
mov
push
adc
jbe
add
adc
sub
aad
into
sub
push
aas
bound
jg
mov
jne
or
sub
outs
inc
adc
iret
mov
cld
(bad)
int
mov
jnp
pop
xor
mov
mov
test
adc
ret
hlt
(bad)
fbld
adc
aad
mov
in
test
sub
lea
push
xchg
xor
(bad)
aam
inc
call
dec
rcr
sbb
sub
sub
adc
jb
add
rol
jnp
sti
adc
inc
fild
mov
call
stc
push
fcmovu
cmp
les
lock
sub
mov
jo
sbb
scas
repz
out
pop
scas
mov
pop
cmc
adc
jp
js
dec
and
fimul
aad
mov
inc
dec
push
and
scas
cdq
adc
inc
test
push
xchg
jl
xchg
mov
push
dec
mov
fcom
cmp
sub
retf
xchg
push
out
imul
pop
ror
add
xor
xchg
add
cwde
(bad)
jno
das
push
shl
pop
lahf
ins
icebp
mov
(bad)
fdivr
cdq
ror
imul
or
mov
cmpxchg
push
xlat
jae
sub
clc
call
iret
adc
retf
cmp
dec
int3
aas
xlat
addr16
call
es
retf
enterw
scas
and
dec
xchg
fidiv
mov
cmp
mov
mov
mov
in
pop
adc
leave
cdq
and
fcmove
(bad)
fwait
ds
mov
fiadd
hlt
and
jp
jge
xor
jle
out
push
mov
into
and
shr
sbb
push
cmp
(bad)
(bad)
ins
xor
and
clc
pop
pop
bound
shl
scas
add
rcr
mov
mov
in
push
mov
mov
sub
(bad)
mov
fadd
(bad)
out
mov
xor
jbe
dec
adc
xor
jl
(bad)
lock
lods
jbe
sahf
aas
sub
sti
sub
jmp
push
push
(bad)
xor
xor
inc
add
jmp
scas
fdiv
aas
aad
jle
popf
dec
pop
push
sub
loopne
dec
jp
jbe
test
inc
imul
mov
fadd
out
mov
pop
fwait
out
sbb
pop
and
push
in
(bad)
scas
aaa
sbb
int
jmp
inc
call
call
es
mov
and
out
xchg
pop
push
out
int3
cs
mov
dec
dec
loopne
mov
jge
bound
push
cmp
dec
mov
xor
movs
dec
jecxz
div
xchg
mov
sbb
popf
xor
iret
ficomp
jae
dec
aaa
das
out
inc
adc
pop
sub
pop
test
(bad)
fsubr
adc
jp
lea
arpl
std
or
mov
xchg
dec
push
stos
clc
loope
dec
test
add
mov
inc
cdq
xadd
add
jmp
xchg
gs
imul
aad
mov
add
call
xchg
in
and
or
mov
or
mov
ss
dec
dec
mov
xchg
sub
pushf
jecxz
or
enter
ret
pop
pop
xchg
add
dec
(bad)
inc
aas
out
call
sti
call
mov
xor
jl
push
adc
pushf
jnp
shl
sahf
mov
mov
cmp
mov
les
jbe
aas
lods
jecxz
sub
xor
leave
and
mov
cdq
sub
iret
mov
pop
lea
mov
aad
hlt
ins
lds
cmovge
arpl
iret
sbb
sub
mov
mov
mov
outs
pop
cmps
pop
jbe
add
out
sub
adc
sub
fist
xchg
icebp
int
shl
inc
cli
arpl
sub
and
or
aaa
adc
jae
stos
loope
mov
dec
ja
dec
pop
les
mov
dec
or
js
xor
(bad)
cmp
shl
sub
ds
sbb
outs
int3
cmps
cs
rcl
xlat
gs
mov
sar
test
es
icebp
mov
cmp
add
sub
mov
test
es
aam
pop
or
fisttp
icebp
pushf
dec
(bad)
aaa
mov
dec
push
add
mov
dec
pop
lahf
or
(bad)
dec
out
mov
cmp
jae
or
pop
jp
(bad)
out
jb
rcl
sub
imul
sbb
push
xchg
sbb
push
les
repz
mov
inc
ins
xor
cmps
mov
(bad)
xchg
jmp
lock
mov
xchg
iret
scas
(bad)
dec
cli
or
iret
mov
movs
ror
cmp
lods
jg
(bad)
and
mov
rol
dec
aaa
sbb
adc
sub
jp
pop
leave
mov
xor
sub
pop
sbb
mov
ret
xchg
mov
movs
es
(bad)
fnstenv
mov
bound
cmp
mov
mov
push
inc
push
or
dec
inc
outs
scas
in
add
mov
aas
mov
mov
sub
add
mov
xchg
pop
fidiv
packuswb
pop
cld
jne
mov
push
es
xor
mov
daa
gs
dec
loope
and
call
mov
pop
(bad)
mov
push
xchg
pop
add
or
mov
dec
inc
jbe
cdq
xor
mov
sub
imul
jo
lds
daa
pop
inc
xor
retf
add
xor
sbb
ins
cld
out
mov
dec
rol
add
cmp
fiadd
sti
adc
dec
push
loope
gs
adc
or
retf
inc
lock
pop
push
cs
xchg
fxch
shl
or
fistp
and
daa
sub
cmc
retf
sub
out
stos
retf
hlt
mov
inc
aaa
cmps
test
jecxz
inc
loopne
sbb
retf
lahf
mov
xor
pop
not
mov
mov
sbb
stc
adc
leave
test
test
jo
leave
loop
mov
sbb
repnz
push
push
loope
push
jbe
push
movs
leave
mov
shl
add
stos
daa
fwait
jg
push
mov
fcmovnb
les
mov
cwde
mov
or
pop
mov
leave
inc
or
mov
sub
(bad)
mov
jnp
mov
out
pop
cli
and
cmp
(bad)
nop
pop
ret
ja
xchg
sub
mov
lahf
cmps
push
push
leave
call
out
add
push
int3
dec
jp
out
stc
cmp
repnz
fstp
popa
xor
push
adc
fild
mov
xchg
loope
fstp
add
sub
sbb
pop
jp
mov
cs
test
xchg
xchg
jle
cmp
push
push
mov
pop
xchg
scas
mov
aaa
jns
add
mov
(bad)
clc
aam
and
push
adc
ja
mov
loope
sub
dec
imul
rol
or
cwde
mov
dec
sbb
mov
sahf
dec
inc
out
cmp
jb
pop
out
mov
leave
push
add
mov
pop
cwde
mov
sub
stos
xchg
int
push
add
retf
sahf
imul
sub
push
and
es
adc
or
outs
inc
sbb
push
mov
ds
hlt
data16
fdiv
adc
call
mov
fnstsw
cmp
push
fisttp
call
inc
xor
nop
xor
nop
cmp
mov
int3
xlat
xchg
sub
neg
mov
shl
fmul
mov
push
loope
mov
mov
lock
mov
int3
es
test
mov
mov
pusha
cmp
(bad)
sbb
and
xor
es
arpl
pavgw
mov
jg
clc
or
(bad)
fstp
inc
js
xchg
inc
(bad)
or
lea
cmp
clc
xlat
or
pop
add
or
xor
xchg
out
pop
push
in
retf
jecxz
add
sar
cmps
(bad)
jmp
mov
inc
push
dec
call
pop
rcr
inc
call
xor
in
fst
icebp
popa
js
pop
sub
fwait
(bad)
cmp
icebp
mov
in
call
inc
xchg
mov
push
pop
cli
imul
aas
out
aam
pushf
ins
xor
es
repz
out
in
adc
cmp
cmp
sbb
sbb
hlt
ds
fld
rcr
pop
inc
sub
fmul
ret
neg
xlat
mov
(bad)
lock
into
stc
outs
add
cmps
leave
sub
fwait
stc
add
mov
push
push
inc
and
fiadd
inc
ja
cmp
les
adc
ja
dec
jno
iret
mov
js
retf
cmp
rep
(bad)
push
addr16
dec
in
loop
mov
outs
inc
inc
repnz
ss
out
enter
mov
in
mov
xor
imul
jns
rcr
xchg
fsubr
cwde
sbb
out
call
cmps
pop
lds
aam
in
bound
sbb
movs
pop
retf
aad
sbb
xlat
xchg
fs
sti
mov
ja
das
popa
inc
pop
pop
(bad)
cld
in
xchg
idiv
jb
push
mov
lods
cmp
repnz
jge
call
sub
push
mov
pop
adc
dec
mov
jge
or
dec
xchg
aas
loop
add
fs
or
push
lea
xor
or
movs
cmp
mov
pop
xchg
fs
cmps
pop
sbb
push
mov
ins
aaa
and
out
inc
jmp
ds
and
arpl
jmp
mov
xor
sub
sti
adc
dec
mov
outs
stos
push
xchg
dec
jnp
or
loope
mov
fstp
int3
aaa
repz
stos
or
jecxz
scas
fsubr
sbb
jl
mov
add
adc
out
movs
xor
cmp
movs
scas
stos
push
mov
cmp
lock
outs
aad
mov
loope
xor
leave
cmp
pop
out
xor
jecxz
sbb
cmp
mov
ret
in
jg
popa
pusha
test
outs
or
inc
idiv
or
mov
inc
loop
(bad)
fdiv
fstp
imul
pop
shr
mov
loope
xor
pop
loope
dec
jp
jmp
cmp
inc
xchg
jg
setns
pop
mov
int
dec
fsub
add
and
int3
shl
mov
jmp
dec
adc
fisttp
stc
(bad)
xor
and
cs
cld
(bad)
(bad)
fucomip
mov
cs
dec
push
inc
shl
jp
mov
inc
lock
adc
dec
(bad)
std
jno
cs
not
pop
std
pop
sub
pop
mov
fsubr
clc
pop
pop
rol
inc
sbb
xor
or
mov
xchg
movs
xchg
jg
mov
mov
adc
xor
outs
rol
aam
in
adc
and
inc
add
xchg
sub
out
loopne
pop
jae
mov
test
adc
pushf
stos
inc
call
shl
lods
imul
fucompp
xor
(bad)
(bad)
rcr
adc
iret
aam
aaa
fisttp
fild
jns
loop
lods
mov
cmp
push
xor
inc
sbb
add
inc
adc
shl
je
cmp
mov
sbb
out
movs
cmp
(bad)
mov
(bad)
xchg
jno
test
mov
and
lock
pop
icebp
dec
in
or
and
loop
dec
sub
gs
mov
iret
mov
pop
call
add
dec
pop
mov
repnz
inc
add
push
retf
test
pop
jb
jno
vsubpd
mov
mov
mov
adc
aaa
or
mov
cmp
lahf
pop
pop
ret
mov
shl
adc
jo
jge
nop
push
add
(bad)
clc
fsubrp
sub
jmp
or
inc
xor
shr
rcl
and
aaa
push
out
xchg
mov
sub
jl
adc
call
mov
xor
cmp
out
xchg
scas
rcl
cmp
es
shl
push
inc
lock
sub
daa
jnp
inc
scas
enter
jo
shl
ret
push
push
scas
ss
push
int3
xor
inc
push
call
lods
outs
cmp
cmc
adc
in
fldcw
mov
or
sahf
inc
int
ins
aas
xor
jo
jne
aas
push
mov
add
cmps
add
inc
pop
shl
addr16
or
inc
fist
lahf
inc
sub
int
xchg
sbb
test
xor
adc
js
or
and
out
xor
jl
pop
inc
pop
mov
(bad)
xchg
packssdw
inc
lds
mov
rcr
and
fild
sub
cld
xchg
les
popf
cmp
shr
mov
sahf
repnz
and
push
rol
pop
jb
call
jmp
jge
jecxz
and
std
fist
jbe
je
jo
movs
mov
xor
add
jmp
pushf
ret
(bad)
call
data16
sbb
xchg
xchg
dec
xchg
cmp
mov
and
add
add
sub
fisub
adc
or
mov
bsr
mov
sbb
add
pop
mov
jns
pop
xchg
btr
aam
push
int
push
mov
or
or
xchg
jg
xchg
(bad)
jg
cmp
mov
cmc
mov
retf
sub
gs
adc
and
ins
cdq
les
nop
dec
movs
mov
fidiv
sti
mov
xor
mov
daa
xor
jbe
das
lahf
ret
iret
adc
inc
shl
ret
test
jb
xlat
dec
leave
xlat
xchg
je
sbb
jmp
sub
fsub
xchg
ds
pop
jl
call
mov
jo
xchg
(bad)
fwait
mov
mov
push
and
in
add
mov
call
mov
mov
inc
xchg
daa
jle
pop
pop
(bad)
sti
sti
sti
inc
ret
xchg
jmp
add
cmc
adc
aas
inc
shl
in
inc
adc
out
xor
cwde
loopne
retf
int
sbb
and
(bad)
add
mov
or
xlat
fwait
adc
add
pop
jle
test
push
xchg
lds
(bad)
mov
xor
dec
ds
fs
pop
lock
gs
scas
sub
dec
sbb
jp
lds
movs
es
mov
scas
mov
pop
add
retf
js
lods
sub
fistp
call
in
push
cmp
mov
or
aaa
mov
ins
dec
seta
or
xor
cmp
fild
adc
mov
add
aad
icebp
pop
xor
ins
ret
ins
lock
add
fwait
mov
jo
pusha
std
push
call
lods
loopne
jns
pop
sub
mov
data16
pop
push
scas
jg
mov
inc
push
bswap
sbb
jbe
pop
shr
outs
jg
cmp
add
xchg
sub
cmps
or
fidivr
aam
ror
push
ror
mov
cmp
bound
adc
jno
std
dec
mov
scas
mov
test
and
push
outs
retf
jg
test
mov
je
mov
inc
push
jle
test
test
mov
and
xor
(bad)
das
push
dec
ja
nop
ficomp
(bad)
cmps
push
bound
rcr
add
aas
pop
xchg
fs
enter
(bad)
scas
jns
(bad)
lea
adc
cli
sub
add
shl
loop
leave
jecxz
push
arpl
sbb
aam
pop
mov
and
mov
push
adc
cmps
add
inc
adc
or
rcl
xchg
aam
and
cmps
(bad)
sbb
pop
scas
js
rcl
pusha
or
mov
push
dec
jmp
shr
inc
xor
stos
mov
xchg
pop
cmp
int3
int
inc
add
scas
jb
and
loope
mov
mov
cmp
repnz
icebp
fwait
push
dec
mov
sub
rcr
out
push
rcl
cmp
cmc
mov
add
add
stos
push
jecxz
push
mov
cwde
aam
dec
imul
sub
inc
push
leave
(bad)
aad
xlat
xor
ds
lahf
sub
push
add
or
xchg
xor
xchg
sbb
arpl
adc
(bad)
fldcw
inc
fmul
loopne
xchg
hlt
sub
jle
dec
int3
imul
arpl
jle
sub
js
test
pop
dec
pusha
push
in
aaa
pushf
pop
sub
mov
pop
cld
sub
cmp
pushf
enter
les
fiadd
mov
cmp
jmp
in
inc
ss
add
lods
sbb
fadd
sub
aam
sub
push
or
(bad)
hlt
cmp
xor
pop
adc
dec
sti
arpl
xchg
les
fstp
fcom
jecxz
test
jb
pop
fidiv
jno
or
push
lea
std
jne
mov
jmp
rcl
pop
inc
movs
sub
push
xchg
lahf
and
cmp
ds
jmp
dec
xor
je
dec
fcmovnb
push
fistp
lds
push
mov
call
jg
ins
dec
clc
popf
or
lods
inc
ror
adc
outs
inc
mov
out
stos
pop
adc
(bad)
movs
cmp
jno
mov
mov
adc
xor
sbb
fmul
and
mov
mov
fadd
pop
xchg
pop
pop
cmp
ja
dec
xchg
js
xchg
xor
mov
out
out
cli
fnsave
loope
xlat
in
lea
and
xor
jno
mov
arpl
sar
push
xor
mov
xchg
sub
mov
jmp
jbe
xchg
mov
rcl
cmps
and
test
imul
inc
fs
lods
sbb
jns
cli
(bad)
(bad)
and
add
mov
bound
mov
xchg
out
dec
inc
jecxz
outs
imul
test
out
inc
and
aam
mov
and
jbe
es
cmc
repnz
sbb
lds
test
cmps
rcr
mov
or
rcr
gs
sahf
(bad)
rcr
es
xchg
jb
imul
(bad)
sub
dec
imul
ins
in
mov
(bad)
dec
push
push
xchg
movs
xchg
retf
movs
jmp
mov
leave
sub
inc
inc
in
(bad)
es
xor
int3
and
nop
mov
jmp
xchg
inc
shl
mov
aam
cs
ds
ins
xor
idiv
adc
xchg
jae
hlt
mov
jmp
xchg
in
popf
je
ficomp
mov
(bad)
sub
sar
mov
lods
sub
adc
adc
das
jns
aaa
imul
inc
fs
es
push
inc
out
call
stc
push
ja
repnz
cdq
scas
mov
in
inc
add
jge
repnz
cmp
cli
jecxz
add
ret
(bad)
test
inc
or
pop
(bad)
lds
repnz
pushf
pop
out
mov
pop
mov
jnp
mov
push
pop
cmp
mov
fwait
push
pop
icebp
add
fbstp
push
cmp
in
add
cdq
jmp
in
or
jle
ret
xchg
ret
inc
jo
movs
fnstsw
add
sub
cmp
xchg
out
inc
jnp
xchg
je
sahf
inc
mov
scas
push
mov
adc
cwde
das
xchg
pop
mov
(bad)
mov
add
push
add
lahf
(bad)
adc
inc
cmp
xor
sbb
scas
mov
lock
mov
ret
cmp
int3
adc
cmps
rol
or
dec
or
lahf
rol
and
dec
mov
jnp
scas
xor
cmc
retf
pusha
sbb
(bad)
std
pop
mov
lock
data16
cmp
in
rcl
cdq
xchg
sub
cmps
or
cmps
adc
inc
pop
jl
movs
fsubp
ins
xlat
mov
std
sub
clc
jmp
sub
mov
mul
les
push
dec
pop
retf
int
iret
mov
das
pop
in
clc
dec
(bad)
mov
dec
jmp
pop
idiv
cmp
mov
mov
push
inc
sub
jbe
or
lahf
int3
sbb
mov
jl
daa
cs
jge
mov
cmp
std
lock
fwait
pop
arpl
jle
pusha
and
and
out
ins
and
sbb
test
fcomp
movs
call
loopne
xor
pop
neg
dec
cmp
mov
mov
pop
sub
aam
stos
ss
push
sar
int3
adc
dec
xor
jecxz
mov
pusha
ror
(bad)
xchg
pop
in
push
fwait
mov
out
and
or
xchg
push
nop
addr16
js
push
daa
lds
jle
ja
mov
cld
clc
or
lea
rol
mov
add
jnp
cmp
xchg
jecxz
push
into
adc
xor
daa
jnp
outs
shl
mov
push
inc
adc
rol
fdivr
js
mov
inc
lods
jb
cs
test
sbb
inc
xchg
mov
call
aaa
jne
movntq
cld
dec
ss
jge
test
inc
int3
dec
es
xor
out
and
je
jo
lods
cmp
aaa
shr
jl
inc
popf
adc
iret
cmp
fs
std
(bad)
sub
dec
mov
push
xchg
mov
push
jo
in
jae
das
mov
std
sbb
and
sbb
mov
dec
dec
push
inc
push
bound
sbb
stos
xchg
adc
and
ss
arpl
jns
push
sub
pushf
push
and
mov
xchg
cmps
std
cs
int3
or
fisttp
loopne
pop
dec
repnz
adc
sub
jecxz
push
fwait
test
in
test
add
iret
mov
inc
pop
lea
fcmovbe
push
loope
push
cli
or
xchg
ds
in
jae
mov
dec
fst
pop
pop
inc
daa
xchg
push
xlat
int
mov
repz
push
cmp
mov
mov
inc
push
cdq
inc
mov
adc
call
mov
mov
iret
out
(bad)
add
loope
fcom
sbb
xchg
fidiv
sub
jae
dec
xchg
mov
and
mov
xor
pop
pushf
out
shl
adc
mov
xchg
test
call
adc
repnz
pop
cdq
mov
iret
iret
push
mov
ja
or
cmp
xor
cmp
sti
stos
jnp
push
xchg
rcr
loop
pop
fdivr
mov
inc
mov
fld
outs
jl
sub
mov
pop
push
lahf
cmps
push
adc
sti
jge
loope
nop
xchg
out
push
pop
inc
dec
lods
sbb
lods
sbb
div
sub
add
mov
pusha
movs
outs
rol
dec
pop
mov
in
push
and
xchg
or
mul
xor
loop
das
dec
push
dec
sub
and
(bad)
icebp
pop
cs
js
stos
out
nop
imul
mov
ins
add
jb
lea
xchg
xor
(bad)
out
outs
dec
or
jno
dec
inc
inc
mov
cmp
jle
pop
jns
cmps
(bad)
or
push
enter
push
adc
jb
js
jno
cmp
out
test
jb
loopne
pop
adc
add
sbb
fld
sbb
repnz
mov
loopne
xchg
out
mov
mov
cs
cmp
sbb
sbb
jmp
aas
inc
mov
add
ja
lods
jecxz
sbb
cmp
stos
lods
xchg
inc
cmc
jl
idiv
retf
pushf
mov
xchg
call
or
int
sub
cli
mov
jns
outs
push
sbb
xor
and
fld
aas
mov
sbb
xor
std
pop
es
pusha
jmp
int
xor
pushf
stos
ret
lock
daa
push
cdq
icebp
mov
fisubr
das
cs
sub
daa
arpl
cmp
or
shr
xchg
or
jno
jle
pop
jo
adc
and
dec
int3
mov
aas
push
arpl
(bad)
sbb
adc
inc
inc
mov
and
dec
pop
sub
cli
outs
ins
mov
(bad)
adc
mov
adc
add
jb
add
fist
hlt
(bad)
xor
bound
and
dec
rol
sbb
mov
push
mov
rcr
fldenv
add
aam
push
pop
inc
jo
xchg
sbb
rcl
or
xor
push
ins
sub
adc
dec
xchg
xchg
xchg
mov
jp
cmp
pusha
call
sub
sbb
mov
je
out
and
mov
jnp
aaa
outs
and
cmps
mov
in
mov
xor
cli
scas
sbb
pop
addr16
test
inc
data16
daa
fs
mov
aaa
jle
cmp
not
push
mov
push
sub
xlat
out
mov
push
fs
adc
out
jmp
and
faddp
jge
push
pop
shl
nop
shl
dec
test
mov
mov
lods
xor
and
imul
jb
neg
xor
aam
mov
xor
push
add
cwde
lock
imul
or
push
cmp
into
cs
inc
lds
and
xor
jp
mov
cs
mov
pop
vpcomub
sbb
test
rcl
cs
push
leave
dec
mov
hlt
jb
add
hlt
push
push
stc
cs
add
adc
pop
inc
fbld
shl
mov
cwde
cli
(bad)
loop
pop
call
or
imul
repnz
pop
fcom
sar
xchg
test
xacquire
jbe
mov
mov
movs
or
xchg
hlt
mov
int3
cs
lea
test
jmp
cmps
mov
dec
shl
adc
xor
dec
push
xchg
mov
fisubr
shr
daa
retf
into
jb
mov
into
jg
out
jnp
mov
scas
pop
cmp
clc
fist
test
pop
dec
mov
mov
(bad)
adc
cdq
mov
pop
or
pop
inc
xor
cmps
mov
or
cmp
and
das
or
pmaxub
call
xor
xor
sbb
push
aas
mov
lods
sub
inc
das
xchg
(bad)
pop
lock
call
pop
mov
daa
fbstp
xchg
xchg
jmp
cmc
lock
stc
call
cbw
movs
pop
or
cmps
adc
xchg
add
loop
fstp
fisub
mov
add
gs
loop
enter
loopne
pop
call
repnz
pusha
or
loopne
shr
fld
push
(bad)
fsub
imul
clc
push
push
push
mov
clc
pop
jg
pop
fdivr
fwait
popa
sar
popa
test
jnp
jno
int
test
jbe
in
lea
mov
sti
cmp
push
(bad)
in
push
lods
pop
mov
dec
and
mov
fidivr
inc
mov
retf
sbb
cmp
mov
pop
loop
mov
push
(bad)
xor
add
or
xchg
and
adc
out
lods
mov
xor
(bad)
xor
packuswb
add
inc
mov
int
xor
mov
cmc
xor
cwde
jmp
in
int3
add
retf
jle
sbb
scas
cmps
jmp
int
cld
mov
jb
pop
sub
jbe
(bad)
popa
mov
pop
or
mov
inc
xchg
add
ror
adc
sub
jne
shl
(bad)
xchg
push
std
mov
les
gs
add
or
ja
test
push
push
nop
call
add
std
sub
sbb
push
or
outs
(bad)
mov
mov
xlat
scas
mov
out
xchg
cs
cmp
retf
add
sbb
or
lds
dec
fs
mov
icebp
mov
test
scas
outs
out
shl
jmp
js
pop
fild
push
adc
movs
jae
cli
xchg
and
inc
mov
fcomp
lds
jle
pop
cmc
fld
dec
aam
fldcw
in
jns
add
mov
(bad)
xor
xor
fucomp
lds
dec
cld
mov
mov
or
push
aad
cmp
pop
or
xchg
adc
xlat
push
dec
lahf
xchg
adc
mov
loope
inc
mov
ins
int3
inc
mov
popf
fistp
or
inc
iret
aas
mov
sub
std
or
push
loopne
inc
lods
cmp
rol
aam
sti
push
or
mov
shr
fnstcw
pop
push
in
repnz
int3
xor
(bad)
xchg
ret
mov
pop
jmp
add
xlat
jecxz
jae
xchg
popf
repnz
ret
jae
cld
cwde
shr
cmp
and
and
mov
fs
fwait
loopne
xor
push
ret
mov
in
sbb
jle
pop
js
rcl
icebp
sub
std
adc
dec
mov
push
mov
sub
rol
(bad)
clc
cmps
retf
inc
pop
xchg
(bad)
jmp
inc
mov
iret
sub
add
cwde
pop
cmc
pushf
es
ss
add
jno
xchg
xchg
test
xor
ds
dec
test
jge
inc
mov
sbb
stos
test
jge
sbb
jl
adc
add
sub
imul
mov
mov
out
aam
inc
test
mov
and
or
int
cmps
add
mov
out
sub
pop
ds
sub
and
enter
mov
out
test
fwait
dec
iret
xchg
cmp
out
inc
add
mov
sbb
push
jnp
loop
gs
pop
jmp
pop
ret
outs
stos
mov
add
or
dec
adc
repnz
or
(bad)
mov
outs
sbb
push
push
lds
fild
fdivr
dec
(bad)
and
xor
xor
lods
mov
add
pop
and
or
in
mov
scas
dec
nop
ret
and
sub
cmp
mov
mov
jmp
rcr
xor
mov
cwde
mov
jl
xchg
sub
stos
shl
xor
test
cmps
push
mov
sub
jns
xchg
mov
add
ret
and
cmp
enter
clc
jno
inc
xchg
ss
jg
stos
jle
fisub
adc
sbb
push
xor
outs
push
sbb
(bad)
fldl2t
call
arpl
pop
jle
pop
jb
sbb
sbb
xlat
ret
int3
lea
fisub
jnp
sub
jl
push
pop
into
xor
in
cmp
lea
sub
mov
xchg
adc
fnstcw
jno
adc
stc
frstor
daa
mul
mov
inc
xchg
stc
pop
jle
lahf
add
push
cmp
xor
scas
fstp
fld
jmp
shr
ret
call
ret
xchg
sti
xor
rcl
jbe
pop
cld
mov
nop
sbb
jns
fwait
sub
pop
push
repnz
jmp
adc
mov
fistp
mov
in
mov
adc
pushf
mov
jmp
(bad)
jns
mov
jl
ins
add
mov
and
lock
or
jae
leave
or
shr
ret
add
popa
mov
jbe
xor
dec
xchg
jl
pop
mov
xor
push
scas
imul
jp
xor
or
loop
and
cdq
pop
mov
mov
xor
dec
lods
add
in
pop
imul
stos
jnp
lock
mov
mov
fmul
stc
dec
aaa
push
cmp
(bad)
and
mov
add
fwait
movs
push
jmp
fistp
mov
loop
test
mov
repnz
shl
adc
mov
dec
jo
dec
push
bound
out
loope
jge
mov
jg
sub
in
mov
adc
mov
leave
sub
mov
xor
sti
dec
xchg
mov
dec
std
xchg
sub
scas
sahf
dec
cdq
and
adc
test
push
clc
jnp
aad
repnz
mov
inc
inc
inc
sub
or
xor
add
cmp
jmp
jle
ds
or
jmp
mov
jmp
jns
or
int
xor
push
(bad)
jbe
mov
pop
cld
(bad)
out
lods
cmps
push
push
sti
xchg
pop
dec
xor
sub
xchg
inc
mov
sar
fmul
mov
lea
mov
arpl
cmp
shl
adc
(bad)
les
std
cmp
rcl
jmp
mov
in
mov
xchg
jne
mov
jecxz
inc
fwait
rcl
and
cmp
inc
lods
in
xchg
repz
pop
push
stos
sub
dec
loop
(bad)
(bad)
inc
adc
repz
shl
mov
test
fwait
stos
push
or
push
and
xchg
pop
sub
xchg
js
hlt
shl
sub
push
nop
cmp
in
imul
xor
jg
or
pop
mov
les
or
mov
popf
test
sub
inc
pop
outs
imul
cmp
inc
neg
stc
clc
pop
dec
cmp
jmp
lods
idiv
(bad)
mov
aad
imul
sbb
fs
aad
add
movs
inc
inc
js
rol
shr
out
movs
sti
fldenv
(bad)
mov
mov
int
sbb
jle
movs
aam
push
push
sbb
fild
cmp
xor
xchg
mov
test
mov
lahf
xchg
add
push
imul
retf
movs
or
mov
cmp
xchg
dec
stos
mov
xor
int3
and
test
push
rcr
mov
cmps
(bad)
lock
fwait
outs
lds
xchg
int3
push
je
test
in
xchg
push
mov
inc
(bad)
jbe
(bad)
cld
sub
fs
sub
lods
push
es
xchg
fnsave
aam
daa
xchg
inc
movs
and
pushf
lods
repz
enter
jmp
mov
mov
sub
pop
scas
mov
in
mov
in
into
xchg
push
jge
cmp
inc
sbb
mov
sahf
ret
sbb
outs
mov
adc
in
mov
pop
lods
je
mov
dec
out
ins
in
jb
xchg
mov
(bad)
inc
push
addr16
bound
xlat
xor
and
xchg
jle
fisub
mov
imul
add
inc
dec
int
mov
and
stos
mov
stos
in
mov
(bad)
add
mov
test
and
ja
in
xor
pop
push
enter
mov
jp
in
fcomp
add
jns
xor
data16
push
nop
xor
dec
xchg
sti
ins
retf
and
enter
test
push
or
xchg
jno
mov
cmp
lea
ss
jle
cmps
mov
pop
imul
es
es
rcl
fwait
cmp
data16
xor
push
in
sbb
push
push
mov
inc
ins
sbb
dec
jge
mov
loop
fnsave
cld
inc
xchg
fs
daa
pop
in
idiv
rcl
shr
cmp
cmovae
sub
xlat
inc
pop
test
push
or
xchg
adc
je
jbe
(bad)
cmp
jl
mov
dec
sbb
rcl
mov
ror
inc
inc
mov
mov
fstp
rol
in
add
inc
fyl2xp1
cmc
addr16
jmp
cmp
gs
retf
fs
mov
ret
cdq
dec
dec
push
cs
cmp
popa
cld
mov
push
cwde
aaa
jecxz
pop
sti
adc
pop
pavgw
cdq
nop
adc
div
mov
sbb
adc
sbb
jmp
in
scas
retf
inc
cwde
daa
cmp
mov
popf
mov
sahf
mov
inc
ret
test
pop
dec
jno
jno
call
and
cmp
in
mov
dec
pop
dec
aam
and
push
adc
mov
add
out
test
and
pusha
(bad)
mov
or
xor
dec
add
adc
cdq
dec
aam
or
idiv
mov
mov
jecxz
clc
in
test
sub
fs
inc
xchg
xchg
nop
je
into
xor
mov
cmp
adc
jbe
cmps
sbb
or
jmp
or
or
movs
jne
push
inc
cmp
ja
stos
in
add
or
pop
add
pop
daa
xlat
xchg
mov
arpl
adc
lods
dec
ja
inc
jle
arpl
xor
pusha
adc
cmp
fwait
mov
jecxz
dec
add
test
cli
stc
sbb
add
cwde
vpacksswb
cmp
mov
jb
xchg
lods
lds
jne
xchg
movs
fnstenv
dec
adc
and
fsub
mov
inc
pushf
pop
cmc
fs
xchg
movs
adc
les
dec
loop
jne
in
or
xlat
xchg
jae
loopne
pop
cmc
fwait
mov
sub
jnp
aas
cmp
sub
aam
scas
mov
push
push
add
push
mov
and
lods
daa
adc
in
int
mov
adc
(bad)
cmp
inc
push
js
jecxz
es
imul
lock
xor
imul
adc
mov
or
add
aad
mov
clc
outs
aaa
cmc
stc
jp
push
js
int
or
cmp
jge
bound
retf
mov
add
iret
adc
(bad)
and
rcl
push
xchg
and
mov
mov
fnsave
add
inc
das
mov
test
leave
pop
shl
(bad)
cli
outs
sahf
mov
jp
es
adc
push
mov
stc
nop
mov
jae
push
int3
push
rcr
cld
jo
adc
(bad)
aaa
sub
cmps
mov
jo
jg
adc
xchg
sbb
pop
sbb
in
cmp
sub
cmp
ja
lock
sub
add
loopne
cmp
ret
icebp
mov
inc
adc
test
pop
test
lahf
mov
xor
sbb
js
mov
mov
mov
fwait
sub
mov
lahf
das
dec
adc
js
or
popf
mov
push
pop
add
mov
ja
lods
mov
pop
div
mov
xchg
repnz
inc
mov
mov
cmp
cmps
push
pop
pushf
cmc
mov
push
das
mov
(bad)
hlt
aas
shl
jo
and
push
adc
ins
or
aaa
aas
jno
cmp
data16
or
daa
movs
out
(bad)
adc
jae
jno
adc
jmp
in
pop
add
loopne
push
xchg
jge
es
xchg
movs
adc
out
xchg
shl
cmp
jmp
lods
dec
and
adc
(bad)
sti
mov
and
jl
xchg
and
mov
(bad)
test
xor
cdq
ret
ja
(bad)
movs
adc
int
popa
test
cmps
rol
jne
xchg
outs
pop
jo
push
xor
inc
sar
xor
in
icebp
scas
jg
aas
xchg
test
jns
test
xor
dec
inc
inc
call
and
outs
and
outs
cmp
dec
push
test
sbb
push
mov
retf
mov
fistp
dec
int3
clc
adc
test
add
mov
mov
dec
xchg
outs
dec
adc
mov
test
cmp
fcmovb
push
mov
dec
sbb
pop
adc
test
sbb
or
push
pop
sub
lods
test
leave
lea
sub
jle
cmp
dec
dec
test
ins
mov
(bad)
out
sbb
dec
xchg
push
aad
mov
sbb
xor
pop
jbe
xor
jo
xchg
sub
sbb
mov
scas
dec
adc
dec
lods
or
mov
and
push
cmc
pop
cli
add
loope
inc
adc
jne
sub
call
test
(bad)
cmp
pop
xor
jne
in
sub
outs
mov
stos
mov
loope
test
sahf
jae
mov
jg
jl
not
pop
or
pop
outs
test
enter
stos
stos
(bad)
xor
push
cmc
and
cmp
cmc
push
adc
dec
sbb
scas
or
daa
movs
mov
or
call
jns
leave
sub
sub
mov
mov
cmps
scas
add
(bad)
adc
jmp
aas
cmps
retf
dec
dec
jb
fsub
or
mov
xor
xchg
test
or
cs
arpl
stc
mov
jae
pop
mov
shl
pushf
test
(bad)
fiadd
fidivr
adc
lock
imul
ret
mov
fmul
fld
aam
mov
dec
mov
sub
jmp
mov
mov
js
fisubr
nop
cdq
out
std
xor
js
shr
push
in
lea
pop
xor
fcom
leave
push
int3
and
xchg
loope
iret
adc
sbb
hlt
test
cmp
(bad)
imul
inc
fs
xchg
cli
pop
lea
adc
dec
mov
test
pop
pop
into
pop
lods
loop
aaa
imul
retf
mov
or
sub
or
push
adc
and
cmps
fsubr
lahf
sbb
jmp
dec
les
mov
ror
and
daa
cdq
or
cmp
ficom
(bad)
hlt
adc
push
(bad)
out
jae
mov
es
pop
out
jnp
cmp
hlt
shl
movs
jp
sbb
add
jl
mov
and
mov
cs
fisub
sub
scas
xor
sahf
jecxz
loopne
inc
inc
icebp
lods
iret
adc
mov
add
fs
push
dec
jge
jle
xor
je
adc
sbb
pop
sar
cmp
pop
sub
adc
mov
int3
xor
fbstp
mov
js
xor
sbb
and
add
popa
sub
xor
dec
push
(bad)
sub
jae
mov
mov
cmps
jbe
ftst
mov
das
or
push
xchg
pushf
icebp
and
jl
and
aam
lods
fisttp
adc
sub
and
sbb
in
cli
dec
mov
sbb
or
inc
movs
(bad)
mov
adc
push
inc
jns
out
(bad)
xor
xchg
test
add
pop
leave
pop
mov
jb
test
push
shr
jmp
mov
jl
les
mov
sub
fs
(bad)
fnstenv
je
movs
sub
rcr
adc
(bad)
fld
push
test
pop
(bad)
xor
popa
sbb
xor
mov
(bad)
push
jmp
sbb
inc
mov
push
(bad)
cli
gs
and
pop
cmp
mov
pop
mov
ror
bound
and
mov
repz
jb
push
and
inc
shl
mov
jns
adc
sub
repz
(bad)
or
add
jns
and
cmp
stos
jae
or
push
les
test
jb
lock
shr
cmc
out
mov
mov
push
inc
and
dec
xor
(bad)
cmp
test
xor
adc
inc
repnz
and
mov
xchg
fistp
and
scas
inc
and
rol
add
fadd
jne
jno
retf
jmp
or
fmul
popf
call
sub
ss
push
lock
or
clc
dec
push
dec
and
dec
mov
xchg
xchg
fpatan
add
sub
inc
scas
loop
aas
out
scas
and
outs
mov
call
push
add
int
pop
pop
jl
fst
imul
repz
ret
sbb
sub
ss
lods
mov
mov
pushf
icebp
mov
and
cmp
(bad)
jg
pop
dec
xchg
cmp
push
leave
retf
ins
dec
ret
push
push
fadd
xchg
adc
cmps
and
push
and
pop
mov
enter
pop
sar
and
adc
dec
popa
pop
out
(bad)
jg
pop
jne
repnz
jecxz
fsubr
fistp
(bad)
cdq
test
fnsave
retf
out
jo
div
repz
test
pop
mov
adc
stc
jb
cmp
fcmove
rol
lods
push
xchg
inc
sbb
cmps
fild
push
push
popf
enter
fdivp
xor
or
imul
pop
popf
pop
cmp
pop
inc
mov
out
mov
std
and
lock
or
stos
adc
pop
or
sbb
fidiv
adc
inc
outs
push
lods
popf
mov
sahf
pop
and
mov
xchg
mov
or
gs
ds
aas
lods
and
and
push
jb
loope
pop
pop
test
or
cmp
cmp
in
push
rol
mov
retw
mov
std
arpl
aad
and
mov
ror
stos
sub
xchg
nop
push
ror
jae
or
jg
ds
cld
lods
enter
adc
mov
outs
jmp
sbb
rcl
sub
xor
int
and
dec
lods
mov
push
fdivp
jge
es
pop
pop
adc
sti
ret
mov
(bad)
and
pop
mov
into
mov
ror
repnz
test
mov
add
mov
and
retf
mov
push
adc
cli
jmp
xchg
es
mov
xor
push
popa
or
and
data16
fistp
push
cmps
inc
mov
js
sbb
mov
jmp
dec
movs
push
ss
push
pop
sbb
ins
push
inc
test
jns
loope
retf
xchg
and
fwait
lods
scas
mov
jmp
inc
ds
rcl
das
sub
xchg
dec
pushf
cmc
mov
xor
cmc
test
add
pop
add
cmp
fiadd
loop
and
jnp
out
movs
int3
sbb
push
inc
leave
jno
retf
and
and
es
inc
mov
or
jmp
int
cmps
xor
(bad)
mov
std
das
inc
pop
xchg
sti
pop
jp
out
xchg
mov
test
jb
pushf
mov
int
ret
add
pop
push
or
and
pop
add
fsubr
into
or
mov
leave
mov
add
or
pop
pop
das
xor
jno
mov
push
cmp
cmp
jns
dec
jb
iret
scas
nop
scas
pop
adc
xchg
mov
test
or
ss
xchg
fst
jo
mov
pop
prefetchw
or
jmp
adc
pop
push
push
daa
xchg
cdq
test
push
cmps
push
call
or
ror
mov
mov
push
adc
in
inc
push
clc
les
inc
mov
imul
inc
test
jb
xchg
inc
add
dec
shl
pop
add
xor
test
ins
xor
jno
hlt
lods
pop
push
xor
and
jbe
arpl
sbb
push
test
and
shl
je
mov
call
pop
in
gs
leave
cmp
imul
es
mov
dec
and
pop
shl
les
dec
pusha
adc
mov
lock
or
call
inc
sub
test
imul
xor
cmc
mov
enter
scas
xor
loop
push
scas
movs
sub
push
mov
lds
push
add
aaa
fadd
aad
mov
mov
enter
pop
sbb
jnp
mov
and
xchg
shl
test
mov
movs
mov
mov
aaa
push
neg
ret
shl
lea
adc
xchg
out
(bad)
ins
push
sbb
sahf
jo
ja
int
(bad)
loope
stos
lods
mov
pushf
push
je
(bad)
retf
mov
cmp
add
stos
xor
mov
lahf
cmps
icebp
push
dec
iret
lods
cmp
dec
sub
out
push
addr16
repz
idiv
add
sub
imul
push
lds
pop
pop
and
xchg
mov
scas
mov
xchg
pop
xor
mov
gs
repnz
push
shr
or
dec
lahf
dec
adc
in
mov
and
dec
(bad)
out
and
inc
mov
mov
popf
mov
cmps
jge
push
jmp
sbb
sbb
cmp
or
push
je
in
(bad)
movs
ret
mov
imul
outs
(bad)
sbb
sub
mov
fcom
and
xchg
cmc
mov
movs
out
xchg
cdq
add
jecxz
or
mov
int3
inc
popf
sahf
jmp
and
ins
js
mov
cmp
loopne
lods
fild
cmp
or
test
dec
addr16
mov
jecxz
jne
push
pop
repz
loope
call
test
xor
ret
xor
shr
mov
hlt
pop
mov
mov
(bad)
dec
xor
in
repz
sub
mov
std
and
ror
jns
ds
push
jae
add
xchg
(bad)
cmps
nop
dec
inc
jno
sti
xor
int3
sub
out
pop
jmp
aad
test
jnp
add
xor
das
add
adc
mov
add
adc
push
jle
out
repnz
push
push
mov
cwde
arpl
fidivr
sti
cmps
push
(bad)
push
mov
push
aad
cdq
fst
dec
call
cmp
mov
mov
pop
sbb
movs
lea
sbb
mov
stc
adc
mov
imul
inc
clts
test
dec
mov
sbb
fadd
xor
jmp
popa
xchg
loop
mov
ret
pusha
jle
retf
call
inc
lds
pushf
add
jg
mov
loopne
mov
(bad)
xchg
gs
mov
(bad)
test
push
pop
scas
call
inc
sbb
add
rcl
sti
mov
push
sub
xchg
adc
setb
and
pop
cmp
cmp
lds
mov
pop
pop
dec
or
(bad)
gs
mov
xor
dec
icebp
jo
fadd
sub
sbb
lds
mov
pop
pop
add
les
sbb
push
test
repnz
push
add
and
sbb
fs
inc
mov
push
sub
test
mov
popa
and
pop
gs
mov
out
or
stos
inc
push
aad
pop
mov
add
pop
(bad)
ja
add
xchg
sub
jnp
push
lods
cmps
push
xchg
or
repnz
jns
ret
rcl
mov
add
pushf
xor
(bad)
cmp
popf
and
inc
mov
jbe
sbb
mov
add
add
test
inc
adc
mov
mov
xchg
fucom
sub
fs
retf
aam
add
or
add
(bad)
imul
popf
lods
frstor
hlt
dec
loop
fmul
xor
adc
xchg
neg
lods
sahf
inc
call
xchg
arpl
push
daa
stc
push
add
icebp
mov
retf
add
and
icebp
dec
mov
les
jbe
loop
push
adc
je
(bad)
shr
mov
and
mov
and
inc
or
xchg
and
and
sub
fwait
popf
call
jl
mov
mov
jmp
hlt
push
cdq
jg
cli
data16
pop
je
mov
lea
sub
sbb
popf
dec
stos
adc
imul
jns
push
fldenv
(bad)
scas
xchg
xchg
dec
dec
outs
push
fbstp
and
cmps
xlat
mov
icebp
pcmpgtd
movs
push
or
(bad)
sbb
ins
sub
xchg
add
retf
dec
jno
jnp
into
mov
outs
pop
add
xchg
mov
or
fild
mov
sbb
sub
adc
or
xchg
clc
retf
jo
xchg
in
xchg
inc
cmp
loopne
mov
cpuid
mov
dec
imul
mov
mov
jne
dec
jnp
aad
data16
push
and
lods
fdivr
cmp
xchg
in
mov
popa
shr
xchg
jno
mov
bound
inc
sbb
inc
(bad)
gs
cmp
ficom
inc
push
jae
pop
retf
cld
dec
add
lea
test
in
retf
cmc
xchg
jmp
and
in
iret
(bad)
call
outs
add
sahf
sbb
mov
xor
outs
sub
test
sub
pop
mov
mov
pop
push
inc
mov
data16
mov
out
aaa
xor
pop
pushf
ret
rol
loope
mov
bound
xchg
leave
test
fisttp
add
in
mov
movs
scas
out
jle
inc
xor
sbb
movs
dec
mov
test
rcl
sub
add
rcl
(bad)
and
inc
rcr
fld
ficomp
ds
jae
dec
jmp
into
js
jbe
imul
push
and
jmp
inc
jmp
add
cmc
bound
hlt
xchg
mov
mov
add
or
out
sbb
cdq
mov
xchg
cli
sbb
mov
sbb
xchg
test
jae
outs
inc
mul
push
inc
in
jns
lds
and
mov
test
pop
aas
not
or
movs
cmp
shr
gs
or
push
not
iret
cs
jno
in
or
mov
sar
je
rcr
cmc
sahf
push
jb
push
xchg
ret
ret
xchg
loop
xchg
add
outs
test
xchg
cmp
push
or
out
cmp
mov
pop
icebp
xchg
xor
and
pcmpgtd
xor
push
and
cli
xchg
sbb
stos
stos
sub
mov
aad
sbb
(bad)
mov
out
fsubrp
jo
inc
ret
js
fadd
retf
loope
daa
dec
or
es
and
sahf
mov
out
jge
jo
imul
jmp
pop
mov
inc
adc
jns
add
stc
dec
jnp
cmps
inc
cmp
sbb
out
inc
(bad)
sar
inc
leave
ds
push
fcomp
shl
ja
sti
mov
adc
frstor
add
mov
rcr
fbstp
test
gs
sbb
xchg
mov
loop
xor
mov
sub
jmp
or
xor
mov
jl
xchg
into
push
push
jne
xchg
sub
mov
mov
fldcw
cmp
sbb
mov
jg
push
jbe
fld
(bad)
jne
add
in
out
outs
fisttp
sbb
loopne
loope
popf
xchg
jp
mov
and
adc
jmp
and
mov
push
mov
add
mov
hlt
xchg
jne
and
ror
addr16
cmp
and
mov
mov
pop
imul
loope
jno
lea
and
pop
or
jne
sbb
dec
popf
push
sbb
mov
cmp
ret
mov
hlt
pop
adc
fld
stos
les
mov
hlt
rcl
inc
inc
and
jp
arpl
pop
mov
xchg
test
fiadd
(bad)
mov
je
rcr
add
iret
into
sub
and
shl
repnz
xor
mov
mov
nop
add
repz
dec
cwde
pop
mov
addr16
gs
mov
in
rcr
sti
test
std
repz
fidivr
scas
sahf
xchg
or
leave
inc
popa
mov
inc
xor
mov
and
test
into
and
adc
xor
jb
jbe
dec
cmp
cmc
xchg
or
loopne
icebp
pop
daa
or
cmp
or
xor
clc
int
push
push
xlat
pop
(bad)
pop
push
stos
stos
cmp
pop
(bad)
fdivr
xor
gs
push
add
dec
test
pop
imul
jne
inc
add
(bad)
mov
cwde
jne
xchg
xchg
popa
mov
(bad)
jbe
mov
sti
outs
mov
fdivr
push
mov
ins
xchg
push
mov
dec
push
inc
ins
jg
and
mov
adc
fisub
xor
ss
cmp
push
(bad)
push
lea
hlt
arpl
repz
fs
sub
jo
dec
out
mov
jg
(bad)
mov
loope
test
and
cs
xchg
sub
dec
xchg
retf
xor
fs
inc
dec
fs
push
adc
adc
add
imul
ja
xchg
cmps
js
add
mov
jno
fwait
push
pop
sahf
add
inc
adc
(bad)
mov
rcr
sub
cwde
(bad)
leave
call
push
mov
or
jno
push
add
(bad)
std
add
pushf
aaa
cmp
cmp
idiv
je
loope
mov
mov
jbe
pop
sub
mov
test
xor
aas
outs
pop
fiadd
mov
out
jg
lahf
ds
mov
ins
adc
(bad)
js
jmp
mov
outs
out
push
xchg
mov
das
fs
aam
push
mov
jecxz
cmp
rol
xchg
das
inc
int3
daa
loope
stos
test
addr16
inc
xchg
lods
addr16
jno
call
xchg
xchg
pop
ds
retf
ins
fdivp
(bad)
(bad)
or
add
pushf
movs
ins
lods
xor
push
ficom
and
ror
pusha
out
push
loopne
dec
add
adc
mov
pop
push
gs
std
pop
xlat
mov
cmps
push
adc
ficomp
mov
fsub
je
mov
push
popf
mov
push
mov
push
loop
sbb
push
pop
add
in
sub
push
sbb
push
ja
cdq
js
pop
dec
pop
mul
push
fwait
mov
mov
inc
inc
call
sbb
in
dec
ins
daa
or
icebp
repz
neg
mov
out
and
dec
dec
loop
mov
lods
fmul
daa
data16
fdivr
loopne
icebp
arpl
mov
repnz
push
aad
xlat
dec
(bad)
and
or
push
outs
pushf
cwde
and
jo
xchg
jge
ins
iret
and
cs
and
push
inc
cs
mov
lods
lods
repz
mov
pop
in
fldcw
ret
jb
ds
pop
push
adc
or
mov
xchg
sahf
dec
add
out
mov
clc
fidivr
xchg
jmp
jns
cdq
add
repnz
jg
dec
adc
mov
aad
xchg
jbe
mov
mov
inc
in
and
int3
sti
push
fucomi
sahf
mov
rcl
jge
sahf
and
pop
enter
outs
mov
cmp
cdq
and
iret
cmp
jl
mov
adc
pop
or
add
and
rcr
xor
push
div
int3
fimul
in
sti
(bad)
aas
xor
mov
out
pop
xor
sbb
out
into
jmp
pusha
mov
mov
mov
dec
inc
retf
and
data16
xor
mov
pop
call
sbb
mov
call
or
stos
mov
cmps
push
sbb
inc
movs
fcmovnu
pusha
scas
outs
(bad)
xor
aaa
cmp
jmp
dec
shl
in
scas
mov
adc
jmp
paddb
dec
loope
std
popf
enter
jp
or
iret
cli
adc
push
in
out
mul
mov
loop
pop
inc
pop
mov
xor
ret
mov
neg
xor
into
mov
xchg
pop
ins
test
add
fwait
repz
pop
retf
mov
out
(bad)
cld
cmp
mov
inc
test
xor
and
inc
fwait
push
aad
xor
(bad)
push
in
xor
mov
cmp
adc
jb
mov
adc
push
dec
dec
ror
inc
bound
leave
pusha
faddp
or
dec
je
cmps
(bad)
ins
mov
ret
daa
in
cmp
jle
mov
and
pop
pop
fdiv
mov
pop
shr
pop
push
add
int3
sub
jg
sahf
lock
xchg
ror
mov
loop
fdiv
and
mov
loopne
loope
dec
nop
pushf
pop
xchg
clc
push
test
mov
sbb
or
je
in
jmp
cvtps2pd
stos
pushf
or
mov
xchg
stos
push
cmp
fisttp
pop
div
mov
sbb
lahf
mov
stos
mov
loopne
mov
int
cld
test
ins
or
ins
mov
mov
loopne
jnp
jecxz
cmp
pusha
dec
in
pop
mov
pop
call
cmp
xchg
jmp
pop
mul
push
xchg
push
fstp
pop
dec
pop
mov
hlt
xchg
dec
repnz
inc
pop
mov
lods
pusha
lahf
mov
nop
aam
pusha
jmp
or
movs
push
imul
or
popa
push
dec
and
in
test
mov
ret
cmp
pop
mov
faddp
popa
or
mov
push
sub
add
xor
lahf
shl
fisubr
jne
mov
addr16
je
xlat
rcl
ins
clc
or
rcr
aad
std
lahf
jle
lock
cwde
sub
jmp
adc
jmp
cmp
les
push
nop
xchg
adc
cmp
jmp
stos
pop
jnp
pusha
(bad)
sti
arpl
jbe
pop
sub
ror
loop
jae
push
in
hlt
and
jg
repz
and
test
mov
adc
bswap
(bad)
adc
ins
neg
mov
(bad)
pop
mov
in
cmc
cmp
mov
xchg
enter
xchg
mov
adc
push
retf
aaa
cmp
xor
jp
lahf
inc
fstp
mov
lds
cmp
mov
adc
dec
iret
xlat
xor
js
sub
ins
push
xchg
sub
in
push
mov
int3
mov
call
gs
out
jbe
jb
fisubr
cmps
jg
movlhps
sti
or
jbe
ss
(bad)
imul
retf
ds
mov
cli
cmps
out
fdivr
movq
rcr
cmp
mov
sub
adc
mov
mov
imul
out
les
jo
fimul
adc
js
mov
pop
sti
xor
jae
sub
sub
mov
sbb
cmp
add
fdivr
scas
cmp
push
dec
sbb
pop
mov
adc
into
pop
inc
sub
jle
scas
add
mov
dec
(bad)
add
hlt
aas
cli
push
pop
pusha
xchg
jl
lods
xchg
inc
sub
jle
or
ds
cli
cwde
pop
out
(bad)
cmp
daa
mov
fcmovb
add
adc
imul
dec
add
pop
sets
xchg
and
rcr
cmp
jmp
loop
scas
fdivr
daa
cmps
das
mov
pop
lock
gs
push
cmp
mov
(bad)
stos
xor
mov
add
sub
dec
push
imul
shl
arpl
or
mov
repz
div
sar
scas
push
ret
jns
nop
add
jb
push
or
push
stos
adc
leave
movs
xor
out
mov
push
ins
dec
shl
sbb
mov
add
sub
(bad)
mov
xor
jl
pop
sub
or
dec
xchg
ja
pop
ss
test
daa
push
pop
fs
xlat
cmp
in
cwde
das
jne
aas
stc
sub
ins
mov
mov
pop
jge
retf
and
fistp
scas
adc
leave
sub
cdq
(bad)
(bad)
xor
xchg
mov
cmp
loop
in
sub
jb
mov
push
aas
dec
test
test
call
mov
fidiv
cmps
mov
fidiv
stc
ss
(bad)
pop
mov
add
outs
pop
pusha
jbe
fcmovu
cmps
jae
push
(bad)
inc
dec
pop
sub
imul
call
xor
or
cmp
mov
dec
xchg
(bad)
mov
xor
or
clc
sbb
sbb
jne
retf
in
jne
rcr
push
imul
(bad)
cmp
mov
retf
sbb
mov
jmp
out
aas
sbb
imul
and
lods
inc
jle
push
inc
xor
lahf
je
fld
js
mov
repz
push
and
outs
aas
inc
(bad)
call
xchg
(bad)
inc
mov
cmp
mov
jb
push
test
les
jecxz
sbb
sub
fist
cmp
sub
xchg
push
test
xchg
cmp
and
xchg
mov
jle
add
xlat
jle
rcl
mov
sub
or
jecxz
das
mov
mov
cmp
push
adc
shl
sbb
stos
mov
and
mov
(bad)
aam
test
(bad)
mov
jae
pusha
inc
mov
xor
lock
mov
popf
pusha
repz
xchg
out
sbb
scas
mov
call
loope
popa
xor
clc
gs
cmps
retf
jmp
mov
fld
lods
sub
cmps
add
xor
xchg
cld
cmp
add
jns
sub
shl
pusha
mov
xlat
xchg
mov
dec
retf
call
sbb
jmp
out
sbb
cmp
nop
mov
mov
ret
add
inc
dec
xchg
ss
pop
into
push
popf
xchg
test
sub
scas
int3
push
adc
addr16
into
dec
adc
cmp
and
mov
dec
shl
inc
imul
scas
sti
push
xchg
sti
ins
cmps
adc
adc
cs
add
stos
rcr
or
sbb
shr
test
sub
mov
mov
xor
xchg
add
mov
mov
pop
popf
and
ds
lods
lds
cld
fucomip
or
loop
repnz
fild
xor
mov
not
fs
rol
js
jne
ror
sbb
xor
ror
mov
jg
mov
inc
lods
bound
(bad)
pop
push
lea
gs
mov
int3
pop
xchg
lds
inc
mov
sub
pop
call
outs
pusha
mov
cli
popa
arpl
cmps
std
icebp
mov
enter
les
pop
(bad)
rcl
nop
cmp
xor
fs
sub
cmp
xchg
push
imul
xchg
cdq
scas
sbb
mov
fmul
mov
fistp
loope
cdq
je
or
push
inc
sub
imul
sbb
sbb
mov
jnp
ins
mov
gs
leave
ins
push
cwde
inc
aam
jl
dec
pop
and
mov
mov
push
into
adc
aaa
lods
and
jl
ret
add
adc
dec
cmp
and
mov
fisttp
add
adc
in
hlt
push
pop
mov
call
lock
fisubr
(bad)
jo
xchg
jmp
outs
popa
std
imul
sub
cli
popf
xchg
call
xchg
call
adc
inc
or
or
mul
outs
(bad)
and
sar
in
clc
sti
sahf
test
xor
rcl
jl
data16
test
mov
scas
(bad)
push
loopne
xchg
jge
lea
mov
mov
fisttp
js
jl
inc
cmp
(bad)
out
ins
cmp
fcomp
loop
call
cmc
adc
js
pop
imul
add
jne
mov
and
int
and
bound
xchg
mov
mov
push
pop
sub
mov
dec
(bad)
sahf
add
outs
adc
sub
stc
xor
lock
add
(bad)
add
add
xor
jle
clc
shr
scas
jl
cmp
dec
out
jae
fs
jp
mov
mov
push
mov
push
mov
or
push
and
xor
adc
mov
xchg
and
test
pop
mov
add
outs
sbb
mov
xor
nop
sahf
adc
(bad)
push
cwde
retf
fwait
jg
xchg
into
mov
arpl
popa
inc
jmp
es
pop
add
and
data16
dec
xchg
or
mov
add
cwde
mov
retf
in
std
sti
xlat
push
iret
sub
sti
mov
mov
sbb
inc
xor
push
iret
xchg
push
in
aam
aas
pop
(bad)
sti
jmp
add
enter
leave
gs
pop
adc
dec
popf
sub
mov
ds
or
test
scas
aaa
jmp
gs
jno
out
rcl
xor
repz
pop
cmp
adc
mov
xchg
mov
mov
jle
out
sbb
mov
pop
mov
leave
push
test
mov
push
pop
aad
loope
xchg
push
loopne
inc
and
jbe
xchg
jmp
fwait
xor
arpl
lds
test
inc
xchg
xchg
ror
bound
push
adc
sub
shl
inc
call
lds
jnp
adc
mov
pop
sti
pop
aam
les
mov
rol
jmp
add
xchg
into
cmps
fst
inc
sbb
sahf
(bad)
jp
add
or
ins
jl
leave
mov
dec
inc
ror
dec
or
jb
xchg
add
mov
jmp
mov
out
ret
call
sbb
adc
mov
sbb
xlat
pop
outs
jmp
cld
out
lods
adc
mov
out
mov
movs
shr
hlt
adc
cmps
call
aam
setg
fadd
ror
or
cmp
pop
outs
cmp
pop
adc
arpl
in
les
sar
sub
lahf
pop
add
inc
lods
cwde
aas
out
iret
out
add
sar
push
jb
add
push
push
push
stos
mov
rcr
lea
fistp
ret
lods
jb
adc
rcr
fs
jl
mov
enter
push
retf
(bad)
and
cmps
mov
or
in
loopne
cmps
jle
sbb
inc
add
arpl
shl
xchg
das
jno
push
pop
xchg
out
xor
icebp
mov
mov
xchg
mov
int3
jecxz
popf
adc
call
retf
or
rol
lods
cs
and
sbb
sub
dec
jae
mov
jg
push
jecxz
sub
pusha
ss
jne
retf
mov
pusha
out
movs
bound
mov
cdq
loopne
popf
(bad)
imul
cmps
ret
mov
cmp
pop
xchg
dec
add
dec
jmp
(bad)
adc
pop
call
aam
cli
aaa
repz
sahf
xchg
movs
pop
das
xor
and
rcl
and
sbb
mov
in
xor
push
leave
rol
push
out
xchg
sub
stos
cmp
xor
xchg
(bad)
rcr
in
mov
mov
xchg
test
sbb
test
mov
mov
ja
loop
inc
push
inc
daa
adc
retf
bound
cmps
out
repnz
mul
xchg
int3
leave
imul
(bad)
cs
(bad)
jns
dec
jecxz
hlt
cmps
dec
add
adc
push
clc
icebp
std
shl
sahf
adc
sbb
mov
sub
bound
push
inc
sub
pop
sbb
xor
jl
ja
retf
xchg
in
ins
push
lods
sbb
out
push
jo
cmps
adc
sub
dec
daa
add
es
mov
sub
(bad)
pop
jo
in
mov
retf
mov
and
out
xchg
(bad)
xor
fwait
cmp
cmp
sahf
sbb
xchg
add
pop
jge
sub
xor
in
jae
sbb
xor
stos
test
xchg
rcr
add
cwde
jns
sar
jmp
jns
push
test
mov
jp
add
js
xchg
adc
mov
inc
into
gs
push
mov
stos
inc
adc
ja
and
inc
(bad)
and
mov
add
adc
ret
inc
retf
fdivr
rcr
shl
retf
mov
cmp
fmul
fucomp
pop
out
int3
cmps
lds
mov
cmps
mov
stos
leave
retf
lods
ss
pusha
clc
mov
dec
aam
or
mov
add
gs
xstore-rng
cmps
test
aas
push
and
sub
xlat
or
add
mov
xchg
repnz
mov
mov
loop
push
test
and
js
enter
xchg
mov
sub
mov
fild
not
add
pushf
test
inc
push
test
inc
(bad)
mov
retf
inc
sub
cmps
aad
popa
(bad)
xlat
gs
xor
fnsave
fcmovne
mov
ja
fdivr
les
jne
into
lock
and
mov
inc
pop
out
jb
add
into
int
out
or
add
push
mov
dec
ins
cmp
push
mov
inc
xchg
add
cmp
and
fdiv
outs
pop
jne
cs
mov
mov
lock
push
cmp
jecxz
retf
sub
retf
ss
aas
pop
js
mov
sbb
cmc
and
mov
in
xchg
mov
das
shr
inc
push
pop
fisttp
pop
xchg
mov
rcr
xchg
in
jle
inc
test
push
lahf
pop
cmp
gs
inc
mov
sub
add
ins
cmps
mov
stos
lods
aad
pop
rcr
retf
mov
push
pusha
daa
xchg
mov
push
pop
dec
jns
mov
fwait
push
fwait
mov
mov
retf
pop
fs
(bad)
and
and
inc
sbb
cld
cmp
cwde
sub
add
jno
mov
daa
sbb
fbld
popf
push
mov
cwde
sub
bound
shl
jae
test
or
pop
ror
sbb
test
mov
(bad)
pop
xor
icebp
jg
inc
stos
test
mov
or
xor
mov
pop
jnp
in
rcr
jb
arpl
mov
hlt
pop
cld
rcl
fisubr
mov
fs
xchg
imul
out
sub
cmp
retf
mov
das
jmp
in
sti
loope
adc
jle
sbb
fwait
xor
sub
sar
movs
bound
xor
je
fsubp
push
outs
and
(bad)
dec
xor
pop
jl
lods
mov
pusha
pop
leave
mov
(bad)
ror
js
pop
aam
mov
in
hlt
and
shl
jge
xor
jecxz
fisttp
mov
or
push
xchg
inc
pop
pop
lds
idiv
xor
or
push
shr
in
push
sar
lea
add
fild
arpl
push
mov
ret
fisttp
xor
repz
mov
xchg
dec
push
div
js
add
push
aas
pop
stos
dec
ret
xor
rcl
sub
repnz
sub
aam
jge
es
jb
push
push
push
aad
retf
stos
mov
addr16
push
and
popf
scas
inc
loope
clc
xchg
dec
xor
in
sub
(bad)
outs
cli
pop
imul
stos
inc
stc
mov
xor
loopne
sub
inc
movs
push
in
adc
mov
and
xchg
inc
mov
outs
lods
out
inc
jmp
or
retf
sbb
cmp
fdiv
add
out
repz
cmps
lods
movhps
jno
push
aaa
push
or
sub
sbb
adc
lea
pop
imul
outs
dec
xor
ret
imul
lock
and
dec
inc
mov
jmp
not
mov
mov
fwait
and
(bad)
out
cmps
mov
and
mov
mov
popa
jle
ins
dec
jmp
pop
dec
mov
mov
cmc
and
mov
mov
bound
jno
fldcw
cld
out
sbb
sub
test
push
test
jmp
or
pop
(bad)
pop
or
cdq
(bad)
sti
sbb
dec
xchg
pushf
out
jo
jns
test
jl
mov
dec
jge
add
shl
es
add
out
mov
out
mov
xor
cmp
out
xor
call
fist
add
repz
mov
xchg
xchg
xchg
mov
cmps
jp
aaa
xchg
dec
jae
xchg
les
hlt
adc
idiv
jmp
cmp
inc
cs
mov
sahf
mov
ins
xor
fwait
pop
and
xchg
cmp
fldcw
add
mov
stos
mov
icebp
inc
or
lods
xchg
mov
or
sub
jg
dec
ds
inc
dec
xchg
push
das
jbe
data16
xor
mov
inc
jne
xlat
add
(bad)
jp
mov
mov
fild
daa
call
sbb
fs
xor
int3
cmps
test
popa
into
in
fisttp
sbb
cmp
retf
push
sub
movs
jb
cmc
push
xor
movs
xor
add
call
push
or
sbb
into
retf
daa
sub
test
repnz
jg
enter
xor
or
push
test
fadd
jg
cmps
out
sbb
push
call
or
mov
and
or
push
js
retf
ins
inc
add
jb
fwait
pop
call
inc
ins
mov
sar
jnp
ficomp
bswap
je
adc
mov
out
lahf
jae
ja
mov
std
inc
jg
lea
lods
and
jbe
(bad)
cdq
popf
sub
xor
jp
push
into
popa
addr16
test
sbb
stos
shl
jecxz
sbb
jmp
out
leave
pop
daa
push
mov
mov
jmp
dec
idiv
jae
push
in
shl
stc
xchg
dec
scas
jl
mov
cmp
push
sub
ret
fcomp
fs
(bad)
xchg
xchg
inc
inc
pop
enter
popf
enter
cmp
inc
and
cmp
rol
mov
push
(bad)
fnsave
lock
das
jg
xchg
inc
imul
into
add
adc
adc
cmp
outs
push
sub
shr
or
ret
cmp
outs
movs
jns
scas
xchg
xor
lock
pop
stc
jno
mov
dec
dec
xchg
mov
mov
out
adc
push
cmp
inc
and
scas
jae
inc
push
inc
imul
mov
push
add
repz
add
sub
aas
(bad)
dec
jge
mov
stc
dec
in
addr16
jne
stc
fs
push
mov
add
das
inc
scas
sbb
sub
add
adc
pop
cwde
rcr
add
pop
adc
cmp
repnz
push
push
aas
or
push
push
push
repz
fst
outs
and
ins
mov
dec
call
bound
xor
sbb
mov
popf
mov
sbb
sti
and
or
hlt
(bad)
je
stos
shl
adc
xchg
xchg
mov
sbb
and
adc
imul
pop
lods
dec
dec
cld
cmp
dec
mov
std
cmps
jnp
add
mov
repz
mov
sub
sub
ins
push
outs
in
cmp
jmp
xchg
cpuid
pop
mov
stos
cmp
adc
into
xor
(bad)
xor
dec
movs
imul
mov
test
rcr
int
outs
mov
jns
out
adc
mov
mov
outs
push
or
addr16
mov
xchg
and
xor
ins
movs
sbb
pop
xor
out
xchg
cmp
xchg
ins
fstp
push
and
aaa
out
mov
nop
xchg
test
imul
mov
cmp
pop
and
xchg
push
dec
mov
cld
mov
ret
out
icebp
xor
or
das
jnp
nop
leave
and
mov
xchg
movs
cmp
pop
or
cmps
fistp
movs
bound
or
ss
mov
cwde
cmp
repz
xchg
outs
mov
pop
not
xchg
mov
lds
jb
adc
test
repnz
push
pop
inc
loopne
je
cmps
jl
rol
out
push
cmp
cwde
adc
scas
cdq
jno
fiadd
inc
push
ret
repnz
pop
cdq
imul
xor
aaa
inc
push
inc
or
pop
xchg
dec
pop
jl
retf
jb
lock
retf
shr
xor
ja
ins
fstp
cmp
xor
jo
mov
adc
mov
xor
cmc
addr16
retf
cmps
movs
in
mov
mov
mov
inc
jo
cmp
push
inc
pop
xor
push
sub
pusha
sti
popf
sbb
push
adc
cmp
test
mov
xchg
div
adc
jl
test
(bad)
stos
call
adc
add
dec
xchg
push
aam
outs
daa
or
and
and
ins
push
inc
fld
aam
add
push
add
add
test
pop
out
dec
ss
inc
or
jg
mov
dec
mov
adc
iret
xor
and
cs
push
movs
scas
stc
jl
jbe
add
mov
js
ja
mov
mov
sti
mov
jb
lods
lods
mov
mov
or
mov
test
and
or
repnz
scas
addr16
mov
out
repnz
pop
or
ror
jge
enter
mov
repz
shr
dec
repnz
retf
mov
lea
cmp
push
mov
jne
rol
daa
or
out
popa
pop
inc
outs
and
int
sbb
and
iret
sbb
mul
lea
or
sahf
cli
pop
fild
adc
pop
jnp
aad
shl
hlt
in
push
cmp
je
ins
neg
adc
shr
xchg
xor
fsubr
call
xchg
inc
in
(bad)
sbb
sub
xor
enter
or
loope
sbb
loop
cmp
adc
stos
in
cmp
mov
mov
je
mov
and
test
dec
mov
push
pushf
sub
leave
(bad)
inc
int
ja
popa
lahf
popa
mov
mov
loope
pop
mov
mov
jge
sar
retf
pop
adc
mov
fild
cli
lock
fs
inc
adc
icebp
jne
mov
in
mov
test
jle
adc
lods
(bad)
test
aaa
int
xor
dec
loopne
into
xor
movs
das
xchg
cmp
xchg
pop
inc
aaa
movs
div
in
jae
pop
fld1
rcl
mov
lea
push
xchg
sbb
cwde
jnp
push
fisttp
jns
sub
or
les
leave
jge
mov
add
dec
(bad)
(bad)
push
add
or
hlt
into
inc
cmps
xchg
clc
mov
push
cwde
fstp
ror
inc
and
(bad)
adc
pop
mov
repnz
push
sub
jbe
push
mov
push
jne
mov
xchg
(bad)
lods
jno
inc
fisttp
ret
xchg
(bad)
into
hlt
pop
pop
out
mov
mov
inc
test
jne
sub
jp
adc
xchg
pop
call
ret
mov
inc
sbb
jb
stc
xchg
jmp
mul
les
jmp
ret
mov
add
mov
sub
and
sbb
outs
jmp
mov
cmp
mov
fcomp
and
mov
push
xchg
cmps
mov
jnp
adc
push
mov
mov
fabs
sbb
inc
push
aad
inc
adc
xlat
cwde
inc
rol
add
jne
movs
xchg
pusha
or
xchg
into
jl
shr
cmp
rol
int3
nop
cmc
sbb
jp
or
and
btc
es
sub
rol
fs
add
adc
cmp
and
jno
sbb
arpl
xlat
sahf
(bad)
and
loop
hlt
inc
sar
rcr
or
nop
ror
out
inc
clc
jmp
or
wrmsr
fs
daa
mov
add
pop
bound
fnstsw
xlat
loop
inc
mov
je
gs
or
mov
add
sbb
or
push
and
loope
sub
(bad)
out
xchg
mov
mov
popa
imul
adc
inc
idiv
push
out
sbb
fdiv
movs
mov
shr
dec
and
sub
in
or
stc
fisttp
or
xor
adc
pusha
mov
mov
push
sahf
retf
push
popa
fchs
push
movs
les
rep
cmp
jo
loope
out
mov
mov
sti
call
mov
enter
inc
adc
push
add
inc
xchg
out
cmp
out
xor
jp
mov
fistp
loope
or
test
and
xrelease
cmp
xchg
ret
xor
iret
xlat
fcmove
ins
jge
add
sub
stc
in
pop
and
imul
mul
xchg
js
sbb
mov
dec
iret
push
sbb
or
cmp
aad
mov
bound
test
es
and
jl
in
push
iret
std
cmp
push
jmp
mov
pop
out
add
je
rcl
mov
adc
or
and
jp
xor
je
loopne
cdq
adc
jns
mov
test
or
push
repnz
movs
in
das
dec
test
dec
std
scas
fild
test
or
push
fild
out
repz
push
das
push
jb
std
push
jge
mov
push
mov
in
daa
fnstsw
lock
hlt
dec
sub
pop
test
xchg
fdiv
repz
pop
in
or
dec
clc
jns
fisttp
repz
mov
and
pushf
mov
sub
mov
shl
test
sbb
int
lds
rol
(bad)
bound
popf
or
pop
inc
or
loopne
jecxz
adc
push
test
clc
pop
cdq
lock
in
push
inc
(bad)
in
pop
sbb
inc
adc
aad
sub
fistp
mov
xchg
cmc
fmul
js
pop
jbe
bound
cli
pop
add
inc
mov
leave
fdivr
mov
or
push
and
dec
fmul
arpl
(bad)
in
imul
pusha
loope
je
mov
popa
xchg
jne
mov
sbb
repnz
jmp
popa
or
push
push
sub
mov
xchg
mov
shl
in
pop
(bad)
js
lods
loopne
cmp
cmp
dec
retf
test
stos
push
push
psubw
pcmpeqw
dec
out
push
int3
jge
int
sbb
push
jecxz
jb
repz
aad
mov
mov
ja
adc
cld
outs
call
xchg
sub
xchg
mov
in
leave
sbb
push
and
into
mov
sub
dec
(bad)
push
fisttp
movs
out
dec
cmp
xor
retf
mov
popa
mov
add
sub
jb
mov
js
jae
dec
inc
ror
ret
dec
sar
inc
pop
stos
cmp
cs
loope
sbb
out
pop
jo
nop
mov
sbb
clc
fcmovu
les
fdivr
inc
fsubr
mov
enter
sub
mov
sub
add
pop
xor
push
icebp
shl
adc
sbb
jb
lock
vcvttpd2dq
jge
btc
inc
dec
sbb
out
in
fild
mov
ror
adc
sub
pop
in
or
cmp
out
push
xlat
imul
sub
scas
enter
enter
mov
mov
cmp
or
sub
pop
xchg
mov
cmp
arpl
inc
inc
retf
dec
push
pop
es
nop
pop
add
jns
sub
sub
inc
jno
xchg
pushf
inc
pop
fimul
pop
in
xchg
inc
outs
adc
inc
fwait
scas
mov
push
push
adc
cli
(bad)
cmp
mov
lods
mov
inc
sbb
rcl
sub
and
or
stc
pusha
sbb
clc
add
xor
sbb
les
mov
dec
into
cmp
(bad)
jb
jns
scas
xchg
rcr
popf
test
mov
inc
push
mov
mov
push
ds
add
fcomp
mov
pop
aas
adc
fidiv
lahf
in
push
retf
aas
mov
hlt
rol
inc
sahf
cmp
jo
mov
jns
cwde
mov
(bad)
in
mov
jno
out
or
stos
xor
int
and
cld
fwait
xor
xchg
add
sahf
stos
(bad)
lds
stos
outs
std
ja
in
or
loopne
push
xor
or
stos
sbb
cli
mov
mov
and
jbe
cmp
inc
out
xchg
retf
mov
push
pop
or
out
inc
sub
pop
and
retf
add
xor
sbb
ja
fnstsw
jecxz
fisttp
lods
dec
lods
jo
cmp
xor
xor
jle
test
int
(bad)
in
add
(bad)
push
setp
mov
or
cmp
adc
jge
sub
cmps
sbb
sbb
imul
sbb
inc
ret
jmp
rcr
outs
out
shl
sbb
push
push
mov
jecxz
inc
sbb
movs
cdq
jge
jecxz
xor
and
pusha
stos
mov
mov
or
popa
ins
aad
sub
or
mov
daa
cmps
into
in
jb
jmp
ja
adc
lds
movs
pop
(bad)
aad
inc
mul
add
sbb
mov
ds
cmps
xchg
sub
into
and
or
push
inc
jle
fnstsw
xchg
push
sub
cmp
jge
dec
fldcw
xchg
inc
fdivr
and
xor
fistp
dec
xchg
scas
or
dec
jmp
ret
data16
(bad)
ret
push
jge
dec
cdq
pop
push
push
je
dec
push
mov
xchg
xchg
adc
inc
sbb
adc
and
jmp
xor
push
ficom
cmp
stos
sbb
push
push
sub
push
das
into
inc
adc
xchg
cmp
shl
aad
or
pop
dec
outs
into
test
mov
in
fs
push
cmp
fsub
cmps
jmp
xlat
ins
out
adc
push
mov
mov
and
outs
icebp
push
test
ror
sub
xchg
push
addr16
cmp
mov
mov
repz
add
pop
inc
xchg
sbb
call
xor
fcom
loope
frstor
inc
mov
mov
or
repnz
dec
cli
das
push
cmp
xchg
stos
cdq
icebp
ficomp
scas
mov
mov
fs
push
retf
ins
jmp
scas
add
xchg
xchg
mov
jmp
loope
movs
imul
cmp
out
push
or
xor
sub
stos
popa
rol
call
sar
jp
enter
sti
pushf
retf
jp
lea
fsub
cld
ins
fbld
shr
add
push
imul
adc
dec
imul
adc
je
jb
es
test
sti
jg
jbe
(bad)
test
popa
fcmovbe
bound
inc
push
aas
dec
dec
pop
sbb
jmp
enter
inc
cli
mov
add
test
mov
cs
push
mov
mov
push
(bad)
loope
shr
add
cdq
cmp
stos
div
pop
push
mov
sbb
retf
pop
push
out
in
shl
(bad)
mov
mov
ds
push
sahf
add
add
rcl
outs
or
pop
ret
mov
xchg
in
dec
push
mov
or
fisttp
iret
or
push
std
bound
push
fild
jle
and
xchg
loop
sub
nop
push
sbb
pushf
dec
cmp
sub
sub
outs
adc
pop
adc
push
aaa
pop
push
jle
arpl
and
sub
cld
and
and
cwde
jle
mov
push
push
mov
mov
mov
sub
mov
js
in
(bad)
push
fld
add
or
xor
pop
mov
div
mov
mov
and
add
inc
repz
and
in
mov
pop
mov
shl
add
sbb
pushf
push
aam
inc
pop
cmps
arpl
dec
mov
cmp
jns
mov
and
push
mov
push
inc
scas
outs
mov
daa
pop
std
cmp
mov
mul
or
arpl
ds
sub
imul
mov
aaa
int
stos
aam
pop
(bad)
idiv
fwait
adc
or
repnz
test
sub
pop
xchg
outs
cli
mov
pop
mov
cli
mov
mov
pop
rcl
mov
sahf
inc
std
mov
leave
xchg
out
mov
push
scas
out
mov
scas
sub
sar
aam
xchg
cli
or
test
rcr
ins
arpl
je
in
and
test
sub
loope
jmp
scas
in
sub
jnp
inc
dec
push
shl
dec
xchg
xor
mov
lahf
movs
adc
aad
test
sbb
(bad)
pop
cwde
xor
push
jno
stos
or
imul
and
outs
cli
iret
stos
sub
push
sbb
out
jmp
aas
imul
sub
and
xchg
pop
(bad)
xchg
adc
push
cmp
dec
(bad)
xchg
mov
sbb
into
cwde
sub
(bad)
gs
xor
std
or
push
pop
cwde
add
jecxz
mov
movs
mov
adc
xor
dec
mov
(bad)
push
leave
and
mov
jno
les
add
dec
sub
gs
pop
es
mov
stos
mov
shr
xor
(bad)
cmp
mul
xor
mov
and
cmp
xor
xchg
and
sahf
mov
xor
xor
js
cdq
cmps
jmp
movs
xchg
imul
data16
cmp
pop
cmp
fnstcw
loope
ins
jmp
in
jo
clc
push
jmp
pop
test
pop
jo
jae
mov
push
or
test
test
pushf
sub
xor
inc
mov
in
fdivr
nop
add
push
push
push
sub
push
dec
out
movs
and
dec
xchg
sub
push
(bad)
add
stos
mov
lea
stc
xor
dec
push
mov
and
jno
xor
imul
clc
or
cmp
jns
inc
and
xor
adc
push
out
jne
outs
cmps
dec
les
repz
popf
pop
dec
mov
test
cs
inc
lea
and
xchg
fidivr
xor
out
loope
aam
mov
or
xchg
ret
pop
std
std
cmps
jg
pusha
adc
cwde
pop
inc
lock
mov
jmp
push
jle
inc
les
dec
sahf
mov
adc
fnstcw
movs
dec
add
push
iret
mov
mov
ins
(bad)
mov
push
int3
addr16
mov
sub
loop
out
and
jnp
(bad)
fidivr
rcr
pop
sub
mov
and
shr
sti
(bad)
call
(bad)
adc
rcr
and
jae
aam
js
rcl
inc
sbb
and
repnz
sbb
and
int
push
add
out
bound
push
xchg
mov
push
sti
sbb
sbb
pusha
mov
stos
fucomi
push
into
cmp
jmp
clc
xchg
mov
ror
pop
add
xchg
and
xchg
int3
and
mov
push
imul
mov
push
imul
adc
inc
fcom
cmps
aam
inc
or
xchg
pop
hlt
mov
ret
sub
retf
rcl
push
sahf
xchg
dec
fsubr
push
lahf
jnp
mov
xor
xchg
ds
imul
imul
iret
mov
dec
dec
sbb
inc
retf
dec
sub
pop
loopne
test
ret
push
xchg
pushf
das
sbb
call
jae
sub
jecxz
mov
mov
jno
mov
adc
lock
or
(bad)
adc
cmp
jo
sbb
xchg
call
xchg
or
add
lea
sbb
xor
mov
jl
jecxz
xor
mov
addr16
scas
inc
mov
add
retf
dec
ins
mov
fmul
pop
iret
mov
(bad)
jae
shr
out
(bad)
cmp
inc
jmp
xchg
scas
imul
mov
cld
pop
inc
dec
push
(bad)
push
stos
mov
ins
pop
and
sbb
lahf
jns
in
popa
aam
mov
repz
mov
mov
fcom
in
(bad)
and
pop
inc
(bad)
and
sub
adc
sbb
add
add
jle
pop
out
daa
jg
cmps
xor
mov
aad
jle
jmp
xchg
retf
cmp
xchg
mov
add
int3
cmc
mov
test
lock
adc
add
adc
mov
out
xchg
adc
ficom
movs
stc
iret
test
push
adc
test
aaa
push
stos
sbb
mov
jecxz
mov
mov
dec
add
clc
jle
sbb
ds
test
pop
les
mov
test
fs
ror
ss
aas
add
jb
ja
push
lds
aas
mov
jns
inc
ret
call
jl
adc
mov
stos
sbb
retf
das
dec
cmp
inc
out
aaa
scas
fs
pop
dec
ins
aaa
mov
push
sub
inc
mov
push
xchg
cmp
dec
xor
xor
aaa
inc
int3
ret
pop
push
scas
fisub
enter
jno
jno
pusha
ds
sbb
loope
nop
and
inc
mov
mov
movs
pop
lds
jns
out
mov
sub
out
mov
sub
das
mov
test
push
dec
mov
mov
(bad)
or
sub
inc
lods
test
ror
pop
test
sbb
clc
ret
xchg
sbb
rcl
out
rcl
stos
push
or
pop
fdivr
pusha
xchg
in
mov
sti
lock
push
mov
fs
mov
pop
adc
enter
aaa
adc
out
sub
in
in
mov
jmp
mov
push
or
call
rol
jmp
call
enter
xor
xor
stc
aas
test
lea
aam
sub
fs
jl
cli
mov
or
test
(bad)
movs
addr16
mov
sbb
push
mov
cmp
jnp
cmc
shl
push
loop
mov
pop
jl
leave
jmp
push
lods
mov
adc
add
scas
mov
cld
mov
add
xlat
mov
imul
outs
or
ins
fldcw
icebp
retf
pushf
repz
fs
xchg
xor
xor
and
xchg
in
mov
mov
push
neg
and
or
js
cdq
xchg
out
ror
and
sub
ins
lock
sub
aam
dec
mov
xchg
pop
addr16
loop
jge
sub
xchg
and
adc
adc
mov
xchg
lods
push
push
xor
cwde
mov
outs
sbb
cs
js
adc
retf
test
mov
aad
lods
pop
jmp
fcom
sub
mov
jmp
mov
les
lods
pop
inc
adc
xor
sub
fld
dec
mov
js
and
xchg
cmp
mov
xchg
aaa
xchg
out
or
mov
retf
sbb
aad
jg
(bad)
mul
adc
inc
cmp
xchg
push
nop
sub
jo
adc
xor
jo
outs
or
les
cmp
test
jle
jmp
aas
adc
sbb
mov
or
out
ds
sbb
fisubr
push
sub
int3
retf
dec
sub
pop
dec
sbb
jb
cmp
cmps
xchg
repz
adc
jns
and
repnz
outs
pop
out
mov
xchg
xchg
test
sti
das
dec
xor
pop
shl
pop
addr16
sbb
int3
or
xor
movs
mov
xchg
push
or
repnz
inc
scas
sub
mov
xchg
xchg
(bad)
cmps
xchg
je
jecxz
mov
dec
mov
pop
(bad)
lea
xchg
or
das
push
jbe
popa
fisttp
call
sub
or
es
test
adc
leave
adc
inc
inc
cwde
push
and
mov
aaa
xor
fst
and
cld
add
retf
jo
lock
or
mov
pusha
fnstsw
dec
sbb
pop
ins
fiadd
(bad)
repnz
push
fwait
adc
xor
sbb
mov
ss
pop
xchg
sbb
loope
jnp
pop
jne
xchg
ret
mov
daa
inc
add
sbb
or
out
mov
int
cmp
jae
fxch
jne
jle
dec
push
aam
add
mov
fistp
hlt
pop
cld
add
mov
push
push
push
imul
add
mov
and
repz
cmp
jbe
push
mov
jmp
mov
ret
outs
xchg
xor
pusha
push
dec
ret
xor
arpl
dec
mov
fs
fcom
ror
popf
(bad)
mov
stc
fs
(bad)
ror
(bad)
xchg
stos
mov
cmp
(bad)
fidivr
push
mov
pop
push
ds
outs
ins
(bad)
ds
jl
sar
push
jo
jmp
jmp
cmps
jbe
cmp
add
hlt
jl
jg
mov
mov
rcr
call
jmp
mov
or
mov
js
test
xchg
push
dec
sbb
mov
in
test
sbb
add
(bad)
cld
inc
shr
push
xchg
sub
inc
dec
cdq
retf
xor
dec
adc
stos
fwait
int
aas
outs
cmp
push
aad
popa
mov
jno
rcr
jle
push
inc
aam
add
xchg
xlat
mov
inc
push
jbe
mov
lock
pop
rcr
in
shl
adc
cmp
pop
xchg
(bad)
into
stc
jnp
mov
and
mov
ss
push
xor
push
aaa
icebp
daa
xchg
push
cmp
mov
jns
dec
les
outs
jns
adc
pushf
pop
or
mov
jmp
inc
mov
scas
(bad)
push
push
add
(bad)
jb
cmps
sbb
fstp
in
push
pop
mov
mov
mov
xchg
dec
ffreep
ror
(bad)
add
jmp
fadd
les
aas
das
pusha
imul
loop
mov
mov
stos
push
inc
in
cmp
xchg
test
ins
cmc
add
and
loopne
popf
fadd
cs
pop
xor
pop
cmp
in
jo
sub
mov
mov
hlt
or
xchg
shl
mov
hlt
lds
sub
cs
test
jnp
ret
jmp
getsec
dec
pop
push
sub
fs
out
int
jl
push
dec
or
movs
dec
ret
ror
cmps
enter
mov
inc
loop
xlat
xor
mov
mov
in
mov
lahf
sar
pop
inc
xchg
ja
aad
mov
mov
jmp
and
mov
mov
pop
call
sbb
add
mov
lock
sub
sub
cmp
adc
pop
xor
fnstsw
add
jg
mov
xchg
jle
cmps
lock
jmp
cmp
mov
mov
add
jbe
inc
imul
fisttp
pop
cdq
loope
outs
jmp
add
shl
cmps
cmp
and
and
dec
push
mov
std
dec
mov
sar
dec
adc
lea
jae
and
cmp
icebp
and
xor
mov
xchg
sbb
test
xchg
test
cmp
xchg
aad
int3
mov
sbb
aad
fsin
lock
mov
ja
std
and
adc
sbb
pusha
xor
inc
xchg
push
lea
push
cli
push
mov
rcl
(bad)
dec
xchg
(bad)
int3
xor
into
lods
and
xor
loopne
cmp
mov
mov
repnz
std
sbb
cld
push
cmps
xchg
leave
xchg
inc
(bad)
push
das
sub
ret
in
add
pop
pop
cli
sub
push
jmp
gs
int
jge
cmp
ss
sub
aad
dec
xor
xor
cmp
lods
mov
addr16
mov
push
stc
mov
adc
add
je
(bad)
hlt
fisubr
adc
push
inc
(bad)
jmp
inc
mov
mov
ret
jge
div
iret
pop
nop
push
adc
mov
cmps
adc
cmp
in
sub
xor
jl
mov
sti
and
push
paddsb
jge
sbb
and
pminsw
outs
lea
xchg
jbe
stc
cmp
cmp
lea
(bad)
sti
xor
jnp
pop
out
enter
mov
movs
fldcw
add
adc
bound
ins
fistp
cmps
imul
xor
push
add
sub
ret
inc
push
sub
stc
mov
test
xchg
mov
aaa
cmc
(bad)
cli
jp
test
add
push
adc
xchg
ds
pop
icebp
xchg
mov
std
cs
cmp
test
cld
pop
popa
pop
addr16
bound
sahf
sbb
jno
push
sub
out
sahf
ret
int3
cmps
xlat
nop
retf
pop
push
push
jp
dec
(bad)
xor
push
xor
lock
iret
mov
out
arpl
sub
jp
adc
dec
dec
loopne
xchg
mov
adc
clc
sbb
into
inc
mov
push
fcom
xchg
(bad)
aas
mov
stos
retf
add
mov
call
push
inc
pop
rol
push
lea
lods
mov
(bad)
jp
mov
std
sbb
cmp
jecxz
sbb
cdq
ss
xchg
test
scas
jg
sub
pop
push
mov
jmp
call
hlt
es
pop
sub
sahf
cwde
bound
stos
and
jnp
ds
bound
xor
adc
push
ins
mov
add
(bad)
cld
xor
fistp
mov
rcr
push
das
iret
xchg
mov
add
imul
adc
mov
shl
inc
ins
sbb
dec
mov
imul
cli
pop
(bad)
adc
addr16
pop
xchg
xor
pop
add
sub
xor
inc
sub
scas
inc
xchg
mov
cmps
jae
in
retf
enter
xor
bound
test
fbstp
sub
movs
mov
inc
pusha
add
adc
sbb
push
mov
js
xlat
pusha
push
cmc
into
jl
xchg
arpl
add
pop
push
cdq
out
out
push
arpl
and
pop
jecxz
fldenv
jno
fild
test
pop
inc
jecxz
pop
fld
call
cmps
movs
adc
mov
xor
in
test
hlt
mov
into
sahf
xor
mov
dec
outs
iret
(bad)
shl
dec
arpl
jl
adc
popf
jno
inc
sbb
dec
ror
jne
xor
xor
mov
mov
sub
add
sar
ret
lock
fld
push
popa
or
adc
dec
or
mov
(bad)
jmp
(bad)
cli
fwait
mov
test
mov
or
loopne
out
sub
lea
mov
sub
rcl
mov
sar
sub
inc
test
jecxz
scas
ja
movs
pop
and
aaa
inc
stos
sti
adc
or
movs
and
prefetcht2
test
xchg
sar
sbb
sahf
jg
xor
call
sub
outs
sub
loopne
mov
mov
mov
js
adc
test
imul
jno
punpckldq
std
je
jb
lods
xchg
pop
add
out
xlat
pop
xchg
loop
imul
add
(bad)
xchg
iret
sub
pop
dec
sub
fcmove
mov
std
xlat
inc
push
xor
movs
and
scas
sbb
lods
mov
xor
lods
movs
out
sbb
rol
js
dec
fadd
jle
dec
mov
inc
bound
adc
arpl
pop
icebp
xchg
jb
pushf
push
jo
fcmovb
fwait
pop
sbb
pop
xchg
and
mov
and
(bad)
xchg
ret
mov
add
mov
mov
fbstp
push
mov
mov
sbb
dec
aad
cmc
cmp
jb
(bad)
xchg
cmp
scas
sub
add
push
(bad)
(bad)
cwde
lahf
add
test
loope
int3
jg
mov
in
fild
pushf
fisttp
and
cmp
stc
loope
jmp
test
stos
sbb
out
jb
in
and
mov
fcom
icebp
mov
ins
cmps
fadd
sbb
das
fimul
test
jno
adc
sub
push
and
push
push
pop
xchg
mov
(bad)
jge
mov
add
into
mov
inc
push
push
xchg
(bad)
test
pop
call
(bad)
jmp
dec
hlt
jne
mov
in
cs
jb
mov
adc
mov
and
fmul
sub
cmc
lds
push
loopne
sar
xor
jae
ds
mov
mul
xchg
rcr
mov
ins
hlt
jp
or
xchg
ficomp
loope
daa
mov
fnsave
lods
mov
add
and
jae
popf
mov
push
(bad)
or
inc
(bad)
rcl
les
inc
test
bound
test
jp
inc
fcom
mov
jb
nop
mov
xor
sub
lahf
xor
dec
xor
dec
(bad)
ror
test
nop
pop
dec
pop
loopne
pop
adc
pop
pop
je
adc
and
pop
jmp
push
push
into
popf
(bad)
loopne
inc
dec
loope
repz
out
scas
clc
in
loope
cmp
fist
jle
add
mov
ins
push
cmp
outs
clc
test
lods
or
push
ret
into
jns
jecxz
xchg
std
inc
cdq
movs
and
jae
mov
addr16
pop
cmp
cli
or
sbb
shl
xchg
ins
adc
mov
mov
xchg
cmp
call
mov
ins
cli
pop
and
jmp
inc
pusha
xor
jmp
mov
mov
xor
adc
mov
push
adc
xchg
outs
loopne
pop
adc
cmp
int
add
sub
stos
add
(bad)
stos
or
xor
repnz
gs
rcr
outs
jne
sti
cmps
ret
sub
push
stos
or
jmp
outs
ja
cmp
pop
sub
inc
or
stos
xor
dec
push
mov
and
cs
in
pop
mov
cmps
dec
jge
jno
sub
add
stc
mov
inc
xor
or
xor
cmps
je
adc
addr16
outs
outs
mov
xchg
push
dec
jnp
scas
cmp
adc
or
mov
mov
in
inc
movs
test
into
nop
fwait
or
mov
ror
adc
mov
enter
popf
out
and
mov
enter
mov
adc
rol
fild
mov
test
add
sahf
mov
test
cdq
ins
mov
or
xchg
repz
hlt
in
out
stos
add
adc
stos
loop
fisttp
fxch
xor
test
mov
push
sbb
fild
stos
fist
push
mov
aas
outs
jne
add
jbe
dec
ss
sub
jae
stc
push
mov
pop
movs
xchg
aad
outs
push
pop
mov
ds
xor
add
push
cs
and
or
fscale
dec
nop
jge
xchg
cwde
push
jmp
xchg
mov
xor
stc
xchg
push
lock
and
cmp
xchg
(bad)
in
jo
mov
mov
enter
in
sbb
cmp
inc
cs
mov
jne
test
mov
mov
jecxz
jbe
arpl
les
arpl
fadd
loopne
jmp
mov
add
dec
cmps
sub
scas
lods
aad
popf
scas
ret
and
mov
loopne
cli
xchg
or
and
dec
adc
out
jnp
and
(bad)
dec
fsubr
sub
ins
add
fdiv
cld
ds
cmp
test
lahf
jmp
ficomp
imul
in
addr16
pop
sub
loope
outs
sbb
imul
repnz
or
mov
xor
outs
mov
nop
push
stos
pushf
mov
js
push
sbb
test
bound
and
in
inc
pushf
dec
cmp
pop
inc
push
mov
outs
outs
pusha
inc
fs
shl
stc
xchg
xor
scas
sar
ror
push
dec
inc
adc
adc
addr16
dec
sub
sub
inc
jns
lahf
(bad)
cmp
mov
in
mov
mov
outs
ins
pop
mov
jnp
dec
mov
adc
ret
fldcw
push
mov
and
sub
and
ror
xor
hlt
mov
fs
or
adc
les
aad
inc
mov
pop
das
lea
or
dec
daa
inc
push
jmp
sbb
pop
inc
sbb
ins
enter
call
lea
clc
push
jge
jo
loopne
jmp
and
xchg
mov
jecxz
call
xchg
arpl
stc
je
sbb
ss
sub
shr
sbb
jnp
mov
xchg
nop
sbb
push
jne
cld
xor
addr16
fwait
mov
xchg
test
je
pusha
dec
clc
fcom
dec
in
add
(bad)
or
lds
out
jae
fs
jo
jo
and
jbe
stos
jae
lods
sbb
mov
add
loope
xor
test
addr16
call
or
fbld
pop
mov
or
pushf
sbb
mov
mov
mov
or
jecxz
inc
sahf
frstor
cli
xchg
xchg
or
and
xchg
shl
int
sahf
pop
pusha
sbb
retf
std
xor
and
nop
jg
inc
inc
push
daa
fcom
bound
imul
sub
add
cmp
vmwrite
outs
js
popf
add
sbb
pop
xor
push
lock
fsub
cmps
in
xor
fs
dec
xchg
xor
pop
cmp
cmps
dec
loope
je
cmp
and
lahf
nop
push
rcr
xor
ins
clc
jmp
or
fs
data16
retf
pop
loope
or
fninit
clc
pop
jnp
mov
dec
daa
cdq
pop
push
arpl
jge
test
cmp
rcr
(bad)
int
lods
mov
outs
cmp
or
retf
es
(bad)
loopne
inc
mov
add
pop
mov
push
inc
adc
leave
jno
pop
fisttp
hlt
aam
jns
or
pop
sub
loop
(bad)
scas
(bad)
mov
mov
mov
jae
mov
cmp
cld
dec
sti
sbb
popa
jmp
or
and
xlat
fist
pop
dec
push
into
jo
repnz
fidiv
(bad)
out
in
add
xadd
dec
mov
out
or
sub
xlat
(bad)
ja
pop
(bad)
fisttp
sub
loop
cmp
(bad)
iret
fsubr
mov
test
and
(bad)
jno
inc
cmp
or
ucomiss
aam
aam
cmovae
xor
pusha
inc
aad
stos
pop
mov
jle
es
adc
push
jb
push
bound
mov
cmp
rep
int
push
(bad)
sub
call
fsub
or
xor
dec
jecxz
das
lock
sub
mov
arpl
fsubr
imul
addr16
test
cwde
jmp
push
je
mov
mov
pop
or
xor
mov
ret
or
into
push
jg
fsub
push
push
(bad)
imul
das
cmc
xchg
rcr
cmc
fstp
ins
or
jae
leave
jne
or
push
scas
mov
inc
outs
frstor
push
cmp
mov
addr16
push
xor
gs
sti
(bad)
jmp
mov
dec
push
jne
xor
push
pop
or
out
out
mov
mov
add
in
dec
dec
mov
pop
push
daa
pop
ss
in
adc
pop
in
cmp
mov
sbb
dec
push
jl
push
xor
jmp
stos
sbb
add
imul
mov
cmp
mov
ins
jle
lods
addr16
and
out
push
dec
push
mov
pop
ja
movs
xchg
adc
outs
mov
es
xchg
inc
adc
fwait
and
xchg
movs
xchg
leave
inc
inc
int
ds
mov
icebp
inc
fild
imul
out
add
inc
sbb
sbb
xor
dec
push
dec
pop
out
adc
sub
jo
popf
sbb
dec
cwde
in
imul
cmps
sahf
lea
cs
mov
mov
loopne
mov
nop
daa
jg
iret
cmc
sbb
mov
arpl
and
pusha
dec
or
fcomp
addr16
lock
mov
test
mov
arpl
int3
aas
fmul
push
push
lock
(bad)
push
mov
jnp
inc
fwait
rcl
add
in
jmp
std
rcr
jb
xor
std
cmps
nop
dec
push
scas
inc
shl
test
ss
scas
dec
arpl
nop
les
packsswb
mov
scas
loopne
es
pop
pop
xchg
sub
aam
aas
test
pushf
test
lahf
ja
aad
ja
pop
stc
enter
sbb
xchg
or
add
(bad)
icebp
shr
push
jns
mov
dec
inc
cmc
pop
jns
jge
mov
xor
adc
xor
adc
icebp
cs
or
inc
ja
push
mov
aaa
scas
add
inc
or
inc
stos
mov
movs
sbb
stc
sbb
aam
inc
and
mov
push
sub
push
(bad)
jmp
out
mov
push
das
xchg
and
and
jge
outs
lds
fimul
add
fld
or
mov
inc
repz
or
in
leave
popa
aam
cwde
inc
jmp
push
xchg
int
outs
inc
jns
neg
aaa
aam
cmp
neg
ja
sub
(bad)
int
cmp
sbb
mov
int3
cmp
je
pop
pop
mov
pop
xchg
arpl
test
sbb
mov
ins
test
add
and
and
mov
xor
xor
clc
cli
popf
lods
popf
imul
mov
add
jmp
dec
xchg
lds
in
inc
push
jo
test
pop
lahf
(bad)
scas
inc
cli
neg
cmps
mov
xchg
hlt
mov
push
inc
xchg
pushf
or
arpl
inc
movs
jae
mov
cmps
jg
ins
enter
cmp
xor
xchg
ret
cli
scas
mov
jmp
imul
aas
or
test
ins
int
(bad)
outs
ins
inc
sbb
jo
pushf
ins
mov
mov
fst
adc
fmul
mov
(bad)
xchg
jl
sub
in
mov
fbld
cli
mov
xor
jge
(bad)
out
std
leave
xchg
jno
int
mov
stos
inc
je
jb
xor
jne
data16
imul
movs
pop
push
rcr
addr16
repz
xchg
lds
loope
or
rcl
cmps
imul
dec
aam
push
cli
mov
push
cmp
jb
icebp
pop
inc
dec
aas
and
inc
inc
lods
(bad)
mov
add
sbb
and
lock
jb
sub
sbb
jle
and
dec
pop
jl
fcmovbe
vandnps
and
(bad)
fdivr
sub
xlat
loope
adc
xchg
push
mov
popf
pop
pusha
enter
or
push
ja
mov
lods
xor
aam
mov
mov
push
enter
movs
hlt
gs
add
mov
xor
mov
fcmovu
add
test
leave
pusha
fidiv
push
dec
call
xchg
jge
mov
sbb
fimul
sub
pop
xchg
pusha
mov
out
mov
add
mov
lea
inc
push
test
cmps
pop
in
fist
sbb
jg
adc
ins
xor
retf
push
arpl
inc
fsubr
or
and
pop
popf
sbb
pop
jecxz
mov
push
push
sbb
inc
enter
dec
frstor
cmp
(bad)
or
mov
xchg
gs
add
ror
test
cmp
sahf
mov
push
xchg
lahf
aaa
fcom
mov
jns
pop
mov
imul
inc
iret
fdivr
je
outs
dec
adc
cwde
xchg
adc
lahf
pop
adc
stos
popa
dec
push
out
sub
scas
dec
jp
mov
in
(bad)
cmps
mov
pop
jmp
push
sub
ins
dec
xchg
push
jl
adc
mov
je
nop
es
in
or
pop
mov
call
stc
and
cmc
adc
cli
pop
and
iret
xchg
fwait
or
shl
ja
inc
add
mov
push
sti
adc
cmps
ja
mov
rcl
adc
(bad)
aam
mov
adc
lods
push
cmc
fisttp
or
or
push
fbld
pop
xchg
push
push
inc
stc
fstp
int3
add
add
mov
mov
dec
fiadd
dec
mov
std
jb
sub
ret
mov
inc
test
(bad)
call
dec
cmp
push
int
add
jb
stc
xlat
into
mov
add
lds
popf
repz
fdivrp
push
jno
cs
jp
dec
jle
xchg
fwait
inc
inc
addr16
jne
inc
inc
sbb
cmp
adc
cmp
mov
sub
in
paddd
bound
cmp
pop
inc
or
inc
push
scas
cmps
mov
add
xlat
mov
inc
das
retf
dec
or
into
sub
in
jg
imul
js
aam
and
out
mov
call
lock
repnz
movntps
rcl
scas
and
in
popa
lahf
stos
out
or
xor
loop
sub
stc
add
cmp
sti
jae
call
lds
(bad)
jmp
repnz
adc
not
mov
ret
imul
fiadd
push
int3
dec
xor
jae
push
mov
adc
test
push
ret
dec
push
bnd
jns
dec
inc
cld
inc
(bad)
push
pop
sbb
inc
pop
jmp
mov
aam
inc
cmp
pop
and
cs
out
fbld
pop
or
retf
movs
pop
jne
pop
dec
inc
stos
movs
jb
and
adc
das
xchg
fmulp
and
jnp
pop
call
cmp
test
jns
addr16
pusha
nop
or
jne
adc
out
enter
mov
jbe
ins
jne
jmp
das
pop
and
fcmove
jo
mov
mov
inc
jg
outs
retf
cmp
add
outs
mov
stos
out
inc
stos
cmp
in
rcl
fs
mov
mov
xlat
fild
cmps
push
xor
jmp
jmp
stos
jo
pop
je
mov
pop
or
dec
xchg
push
pop
repnz
jo
frndint
xchg
loope
pop
test
add
sub
cmp
jno
into
js
int3
xchg
inc
sbb
repnz
pop
xchg
mov
das
jmp
mov
sub
hlt
mov
lock
aaa
sysexit
or
les
in
les
dec
jl
rcr
xlat
add
imul
pop
xor
in
fs
test
test
adc
leave
dec
mov
test
adc
xchg
cld
pop
xor
(bad)
movs
dec
ja
push
das
bound
pop
inc
xchg
shr
in
(bad)
scas
aam
mov
pop
out
outs
mov
pop
push
test
fdivr
(bad)
fistp
scas
cmp
cmp
adc
cmp
scas
xchg
mov
icebp
arpl
clc
gs
scas
pop
push
cli
mov
int3
inc
xchg
test
sahf
xor
rcr
mov
shr
and
xchg
(bad)
mov
xchg
sbb
es
jmp
sub
iret
add
pop
ficomp
icebp
icebp
sub
movs
shl
retf
or
cmp
push
loopne
xor
pop
pop
inc
ja
retf
mov
aam
push
cmp
fwait
ret
mov
pushf
inc
and
push
inc
cmp
pop
push
inc
pop
xor
mov
int
jno
add
push
neg
(bad)
xchg
sub
sbb
jg
push
push
pop
mov
dec
xchg
je
inc
xor
mov
fisub
jle
test
enter
sbb
push
mov
daa
add
or
test
out
jge
xchg
ficomp
or
pop
mov
es
or
outs
sub
lea
mov
mov
sahf
ret
bound
inc
ds
not
adc
pop
fisttp
mov
mov
cmp
xchg
jecxz
daa
aad
ins
int
fld
fmul
aad
fldenv
(bad)
(bad)
stos
and
stos
faddp
daa
repz
call
cmp
pop
xor
scas
call
das
inc
mov
and
adc
adc
sub
add
sahf
adc
ss
shr
jo
mov
sub
daa
or
loopne
mov
ds
xchg
ret
push
imul
push
mov
fnsave
scas
add
dec
xchg
repz
push
movs
cmp
inc
mov
adc
add
lahf
or
add
ds
ret
jp
cli
push
pop
cmp
xor
pop
popa
inc
pop
jae
or
push
and
gs
jmp
xor
sub
clc
cmp
iret
cmp
jl
inc
mov
xchg
jp
iret
sbb
push
xchg
mov
xor
sbb
mov
adc
inc
sub
pop
inc
and
inc
xchg
push
int
push
shr
mov
popa
das
add
add
or
mov
dec
stos
xlat
rcl
icebp
add
aad
pop
sti
pop
mov
mov
ret
mov
(bad)
cmps
gs
out
sbb
inc
dec
test
ret
mov
fld
movs
cs
push
jo
jg
popf
or
jl
call
in
stos
adc
inc
adc
sbb
sub
mov
cmp
fstp
retf
out
rol
add
sub
inc
retf
jmp
int
rcl
in
outs
mov
(bad)
and
push
pop
mov
loop
pop
bound
pusha
aaa
and
or
hlt
jecxz
mov
shr
push
mov
(bad)
hlt
xchg
xchg
aaa
cmp
mov
fsincos
jge
jbe
xlat
pushf
jmp
mov
ins
mov
jmp
inc
stos
push
cmc
jno
sub
cli
jmp
sahf
ret
or
inc
pop
cmp
ror
xor
sbb
popf
out
add
sbb
push
or
inc
xchg
dec
daa
ds
cmc
dec
add
push
(bad)
mov
push
mov
jns
rcl
cmp
int3
ss
loope
xor
cmps
pop
jno
xor
not
mov
inc
or
pushf
sub
mov
fidivr
pop
sar
lahf
mov
sbb
sub
std
mov
lds
push
in
mov
pop
dec
cmps
into
in
push
xchg
ror
or
(bad)
ficom
(bad)
out
pop
xchg
loopne
jge
cli
push
jge
dec
dec
adc
inc
sub
jae
int
cmp
or
or
push
movs
mov
cmc
xor
jo
jae
out
(bad)
fcompp
jmp
xlat
inc
xor
out
je
jl
pop
add
fistp
and
pop
jmp
sub
outs
or
movs
aad
sahf
sub
cmp
sahf
fcmovu
sbb
mov
popa
mov
ja
sahf
jp
lds
dec
call
pop
nop
cmp
leave
cmp
mov
and
pop
out
mov
mov
adc
xchg
sub
sbb
sub
push
ds
dec
ret
and
mov
cs
adc
or
xor
mov
jno
movs
loopne
sbb
inc
lea
pop
pop
dec
cmp
jge
pop
mov
cmp
add
cmp
adc
xchg
adc
cs
inc
push
xchg
sub
mov
jo
xor
adc
adc
xlat
mov
sbb
push
xchg
mov
dec
gs
mov
or
fidiv
lock
cli
cld
test
aad
stos
mov
aaa
xor
mov
fst
cwde
sti
or
xor
adc
rcl
mov
loopne
aaa
sub
add
enter
ret
sbb
sar
call
ja
jmp
mov
jns
(bad)
mov
mov
dec
mov
imul
dec
jg
leave
mov
adc
ja
add
mov
mov
cmp
cmp
lods
push
push
out
xchg
pop
sub
lea
stos
jmp
(bad)
push
popf
imul
or
je
inc
repnz
mov
out
fbld
mov
add
push
dec
push
jecxz
xchg
(bad)
std
call
adc
and
add
les
bound
test
cmps
jns
pop
mov
in
out
push
fnstenv
sub
jnp
bswap
sub
add
sbb
add
push
mov
out
mov
jbe
bound
mov
cmp
(bad)
xchg
mov
xor
mov
ret
push
lods
dec
push
mov
aad
shr
cld
jmp
push
cmp
inc
in
movs
call
ret
call
dec
fstp
(bad)
mov
inc
jmp
outs
xchg
fidiv
and
je
xchg
dec
inc
mov
cmc
mov
xchg
dec
test
pop
jecxz
mov
sbb
mov
cmps
add
lahf
popa
into
ja
xor
(bad)
sub
out
retf
and
sub
jecxz
popa
mov
outs
aas
add
outs
add
adc
arpl
test
out
jnp
(bad)
in
test
sbb
jns
stc
push
xchg
dec
mov
(bad)
sar
aas
lock
out
and
adc
sub
mov
out
adc
ret
xchg
mov
icebp
clc
int
stos
test
inc
dec
mov
shr
jns
movs
jae
push
call
(bad)
sbb
push
adc
mov
lods
pop
mov
xchg
mov
sete
das
xchg
mov
jle
inc
cwde
jl
int3
add
inc
(bad)
push
cmp
add
imul
pop
cdq
inc
and
xchg
mov
push
iret
mov
cs
iret
ins
xchg
ret
int
jecxz
cwde
int
mov
out
test
jmp
sar
(bad)
out
js
push
out
ret
loope
rcl
loopne
sbb
hlt
(bad)
mul
fbstp
fld
stc
outs
push
fstp
loopne
xor
cmp
enter
and
in
(bad)
jmp
xor
sub
push
aaa
popf
xchg
push
(bad)
jo
js
push
xor
jl
popf
lea
addr16
sar
cmps
test
pop
aad
popa
push
aaa
push
xchg
mov
sub
mov
lahf
xor
mov
div
cmp
cmp
mov
sbb
aas
fisttp
movs
xchg
(bad)
xchg
dec
stos
xchg
mov
out
or
cmps
cmps
idiv
pop
push
call
mov
xchg
inc
jmp
cmp
or
adc
xor
nop
fwait
dec
push
jno
adc
inc
repnz
mov
repnz
cmp
daa
ds
ss
inc
bound
mov
ss
ins
adc
push
ror
sbb
pop
outs
outs
retf
cmp
movs
and
xchg
xchg
shr
iret
cmps
sbb
sbb
mov
pop
jmp
sahf
iret
add
jmp
push
mov
mov
mov
outs
jmpw
loop
xchg
daa
jp
push
daa
js
test
movs
aad
mov
(bad)
cmp
mov
jmp
adc
(bad)
mov
xchg
inc
(bad)
push
call
xchg
add
cld
xor
dec
sbb
jo
xor
mov
add
mov
push
jbe
sbb
test
jb
sbb
fild
jge
fs
jno
xor
out
adc
ror
sub
ja
push
sub
mov
push
sbb
iret
push
xchg
mov
enter
sti
push
xchg
ins
and
mov
jg
or
(bad)
xchg
fcomi
aaa
ret
call
pop
and
shl
les
ror
cmp
ja
inc
push
inc
mov
adc
xchg
(bad)
ss
dec
and
repnz
xlat
cmp
movs
xor
je
test
sbb
mov
xchg
sbb
inc
mov
xchg
mov
lock
sub
add
aad
ins
xchg
jne
fbld
les
cmc
sbb
xchg
push
dec
add
push
cwde
retf
sbb
fwait
sub
xor
xchg
das
and
out
icebp
and
inc
fadd
loop
pop
dec
mov
comiss
stos
sti
xor
pop
popf
daa
(bad)
loopne
movs
pop
rol
dec
pop
mov
fst
sbb
fldcw
(bad)
(bad)
xchg
nop
inc
push
rcr
in
mov
pusha
cmp
repnz
inc
sahf
adc
cli
mov
sti
pop
mov
xor
loope
out
push
shl
pop
cli
sbb
dec
int
sbb
add
xor
inc
fwait
adc
into
repnz
add
fwait
jae
lahf
cmc
cmps
in
aam
mov
(bad)
cmp
mov
stc
mov
xchg
ret
inc
fsubp
test
xchg
mov
out
jb
push
xchg
xchg
out
jmp
shr
pop
or
inc
ja
xchg
js
sahf
sbb
mov
xor
mov
xor
aad
js
in
push
jo
les
cmp
loop
push
push
nop
movs
pop
ins
repnz
pushf
fiadd
xchg
xor
jmp
(bad)
shl
push
mov
int3
les
aas
daa
sub
fisttp
and
jnp
sar
jmp
push
or
mov
or
sub
pop
fisubr
dec
int3
call
ficomp
dec
cs
sbb
dec
repnz
inc
loop
test
inc
sub
mul
adc
ret
mov
and
push
jbe
xchg
and
int3
mov
sbb
test
cs
repz
mov
push
adc
les
sub
dec
add
movs
xchg
shr
lahf
push
stos
add
call
rcr
jno
iret
mov
xchg
push
jl
cs
cmp
(bad)
or
jnp
fsubrp
gs
mov
stc
out
jne
retf
cmp
jnp
mov
fstp
cmps
into
fcom
xchg
scas
cdq
movs
cmp
fwait
push
jp
fist
adc
into
inc
dec
jno
hlt
jge
rcl
inc
rol
push
mov
imul
rcl
or
ja
outs
pop
rol
cmc
out
sub
mov
sbb
mov
mov
pop
mov
pop
aaa
mov
je
leave
or
xor
cli
xlat
sahf
fist
sbb
xlat
ror
aad
cld
dec
inc
mov
inc
into
xor
adc
xchg
sbb
xor
jp
js
leave
add
jne
test
cwde
popf
out
xchg
mov
aad
xor
or
outs
test
mov
push
loope
mov
cmps
mov
rol
mov
repz
xor
pop
mov
sub
popf
(bad)
pop
or
out
pop
push
out
inc
dec
mov
std
adc
ret
cmp
add
imul
xchg
mov
es
mov
cmp
pop
add
in
pusha
pusha
clc
mov
mov
sbb
pop
mov
xor
or
bound
mov
xor
pop
fld
xor
out
mov
fs
scas
test
js
clc
aam
and
pop
ja
lds
and
jne
and
aaa
or
loop
jns
(bad)
xor
mov
xor
mov
outs
xor
aad
scas
sub
neg
jmp
xchg
or
pop
rcr
mov
mov
jmp
mov
jg
cmp
push
int3
test
js
xchg
sar
inc
mov
les
les
fisubr
nop
adc
fcmovnbe
in
fimul
inc
ins
jle
dec
mov
mov
jge
mov
push
xor
es
dec
and
sahf
jo
and
enter
jb
xchg
call
cmps
js
shl
xor
not
sub
cs
rdtsc
sub
cmp
sub
repnz
cld
inc
sub
cmp
adc
int
push
(bad)
or
adc
mov
stos
aam
dec
xchg
sub
and
(bad)
mov
jo
cli
fmul
push
xchg
fs
aad
or
jge
mov
stos
ror
out
jecxz
xor
push
jecxz
into
addr16
cmc
in
sub
mov
daa
sub
mov
xor
pop
adc
push
pop
scas
ret
xor
sub
sub
inc
mov
outs
or
movs
scas
in
and
cmp
cmp
cld
mov
cmp
xchg
cmp
ins
ins
sub
aas
sbb
mov
mov
sbb
pop
inc
stc
in
loop
add
clc
or
pushf
pop
pop
push
dec
dec
inc
push
mov
or
ins
scas
or
loope
push
rol
stc
popf
mov
cli
xchg
je
push
mov
mov
cld
inc
mov
mov
arpl
adc
es
iret
add
pop
adc
xchg
std
call
imul
out
movs
push
xor
leave
ins
add
pop
or
icebp
cmp
scas
movs
pop
mov
pop
mov
repz
fbstp
jmp
lock
push
std
sbb
fsubr
mov
jmp
sbb
ret
cmp
mov
pop
int3
mov
inc
xor
mov
jae
int
in
fmulp
mov
shl
fnstcw
and
test
dec
outs
sbb
fs
or
loopne
mov
mov
xor
in
repnz
xchg
(bad)
jmp
cmp
dec
(bad)
push
or
sar
das
and
jnp
mov
fcmove
or
dec
sub
mov
sub
mov
jecxz
sbb
fild
test
(bad)
test
and
xlat
jns
mov
loope
int
sub
nop
(bad)
and
iret
call
and
pop
jne
mov
test
mov
mov
fmulp
popf
inc
fcom
mov
jns
pop
cmc
ins
sbb
xchg
mov
jge
sbb
sbb
(bad)
push
cmp
pop
fadd
enter
xchg
adc
mov
imul
(bad)
lds
and
xchg
cmp
test
pop
pop
dec
dec
fdivp
mov
jle
jns
hlt
mov
std
mov
sbb
add
mov
in
rcr
pop
add
push
inc
sub
iret
pop
push
mov
das
outs
(bad)
int3
ror
or
in
mov
adc
or
shl
sbb
jne
movs
mov
mov
test
imul
push
out
push
xor
into
out
sub
movs
xchg
mov
ret
pop
mov
ret
jp
pop
mov
add
in
nop
push
adc
scas
pop
xchg
(bad)
adc
jge
js
pop
fidiv
mul
add
push
inc
mov
imul
inc
mov
xor
test
push
ficomp
cmps
mov
push
pop
out
cmp
mov
lock
pop
or
icebp
fisttp
ss
sbb
sbb
mov
retf
mov
out
sbb
and
test
adc
stc
mov
mov
push
scas
popf
ret
fldenv
fmul
inc
aad
mov
rcr
mov
push
mov
or
mov
loopne
fsub
adc
pop
or
sbb
push
push
scas
xchg
push
cli
sub
ret
ins
dec
cld
cmps
std
sbb
dec
mov
dec
inc
jae
xlat
xlat
out
int3
stos
push
or
mov
jae
cmc
iret
idiv
shl
jmp
pop
push
xchg
pop
loope
inc
loope
test
or
lods
(bad)
mov
data16
or
and
mov
cmp
out
jns
iret
stos
push
adc
dec
lods
inc
ss
add
push
iret
xchg
fwait
jecxz
xor
in
inc
das
fs
shl
lahf
adc
add
mov
sub
jmp
pop
nop
xchg
adc
ds
cmp
adc
jl
call
push
lds
mov
retf
mov
or
add
pop
sbb
add
ss
js
stos
and
loopne
and
xchg
xor
movs
pop
and
cmp
push
in
cmp
fs
pop
pop
fs
dec
fld
mov
mov
dec
sahf
xchg
test
into
xor
push
push
das
push
adc
inc
push
mov
and
ret
cmp
xor
setge
dec
inc
dec
push
xchg
sqrtps
mov
mov
xor
gs
jbe
pop
rcl
test
xor
push
popa
lods
or
sbb
test
loop
jl
imul
and
aad
dec
add
cmp
push
mov
cli
add
push
shr
jnp
out
les
call
pop
sahf
sub
push
les
mov
in
jmp
cmp
xor
clc
test
loope
sahf
test
in
mov
xor
sahf
sbb
test
scas
dec
add
push
daa
inc
jl
inc
test
mov
mov
aaa
mov
mov
rcl
jg
outs
ret
repz
test
mov
aas
or
pusha
jae
movs
int3
add
inc
(bad)
sub
(bad)
mov
dec
or
and
cmp
test
cmps
dec
inc
sti
add
aam
test
call
xchg
add
mov
mov
and
push
sbb
fs
push
push
scas
(bad)
aad
mov
out
jle
dec
outs
adc
and
push
sti
int
popa
cmp
mov
mov
mov
popf
jnp
in
das
sar
nop
dec
das
repz
push
retf
addr16
push
ja
std
adc
shr
inc
out
xor
push
push
fs
pop
mov
mov
rol
add
push
lods
push
mov
shl
add
mov
retf
retf
mov
rcl
mov
(bad)
jb
jbe
add
inc
movs
xchg
mov
mov
(bad)
mov
push
sbb
xor
or
jb
inc
adc
and
inc
sub
push
test
mov
(bad)
fwait
pop
mov
cmp
push
stos
and
push
(bad)
call
int
sbb
mov
out
sbb
pushf
mov
sbb
dec
cmp
rol
push
rol
iret
add
ret
inc
mov
mov
lods
pop
mov
push
enter
add
call
or
inc
aas
cmc
or
fs
test
loopne
dec
mov
mov
(bad)
retf
fst
lods
dec
pop
(bad)
addr16
retf
dec
pushf
pop
gs
dec
sub
call
jg
shr
cmp
mov
jg
xor
cmp
lds
cmps
mov
push
(bad)
lock
(bad)
in
ficomp
sti
push
jmp
movs
clc
xor
jp
mov
js
xor
add
sub
(bad)
dec
int
jne
cmc
jnp
imul
jge
sti
adc
pushf
xchg
test
or
lods
fchs
aam
call
rol
push
je
aam
add
push
rol
dec
addr16
into
addr16
arpl
ins
scas
shl
fcmovbe
push
jbe
hlt
cmp
inc
add
push
push
mov
jmp
(bad)
fmulp
outs
cmc
dec
popa
mov
push
iret
clc
pushf
push
enter
fnstcw
call
(bad)
mul
int
xchg
pop
rol
inc
ret
xor
loop
movs
and
out
jmp
fs
mov
mov
xchg
add
sti
es
cli
mov
jae
sbb
mov
std
push
fadd
sar
mov
ret
mov
int3
into
bound
repz
push
es
cmp
retf
lea
dec
jae
xchg
add
adc
push
in
sahf
in
sub
movs
inc
mov
pushf
in
cdq
xor
jo
xor
fdivr
adc
lahf
mov
inc
out
test
and
push
bound
gs
loopne
leave
mov
push
test
les
mov
mov
retf
std
pop
je
cmp
dec
dec
sbb
outs
pop
push
jecxz
data16
rcr
xchg
arpl
xor
cld
xor
cdq
repz
mov
pop
scas
mov
sub
test
add
(bad)
loope
inc
pop
int3
sbb
sahf
or
dec
add
adc
inc
call
push
pushf
push
addr16
rcr
dec
or
sbb
xor
add
push
bound
add
cmp
mov
xor
out
sti
sub
addr16
sub
xchg
cld
shl
xchg
hlt
clc
mov
and
(bad)
cmp
inc
push
mov
(bad)
rcr
daa
fbld
hlt
sar
mov
cmp
mov
xchg
loope
add
addr16
mov
mov
cmp
and
stos
add
pusha
xlat
inc
add
xor
and
push
push
jecxz
jno
jno
pop
jle
adc
or
es
mov
je
jmp
or
add
xchg
and
mov
mov
push
add
pop
push
mov
mov
xchg
pop
retf
ret
nop
jl
icebp
cwde
call
in
popa
dec
mov
out
xor
cmp
xchg
rcl
sub
ss
sbb
repnz
jge
push
(bad)
jmp
add
jmp
repz
icebp
ret
adc
push
dec
shl
sbb
cs
fadd
mov
jb
test
mov
cdq
int
stos
frstor
jo
sub
sbb
ja
popa
in
mov
lock
or
dec
dec
xchg
or
ss
rol
out
in
outs
(bad)
pop
or
mov
int
scas
lods
pusha
xor
shr
outs
or
cs
or
movs
and
cmp
popf
cdq
mov
cwde
push
fidivr
pusha
adc
xor
mov
pop
outs
xchg
xchg
push
jno
mov
and
(bad)
cmps
pushf
std
clc
rcr
cmp
int3
ja
into
xor
hlt
ss
(bad)
push
inc
mov
fidivr
icebp
xor
sbb
mov
icebp
pusha
add
or
dec
ins
outs
les
out
push
add
movs
lods
in
iret
jmp
push
mov
mov
sub
dec
ja
pop
loope
lahf
js
adc
aaa
xor
mov
jae
icebp
lock
cmc
lock
jg
xor
adc
(bad)
arpl
scas
inc
cmp
rol
movs
add
sub
or
bound
sub
out
mov
bound
mov
inc
sbb
(bad)
int
or
cmp
jmp
jl
iret
call
arpl
jbe
inc
dec
pop
cmp
cmp
test
mov
mov
mov
or
loopne
ss
add
loopne
test
xchg
adc
sub
jno
movs
push
mov
cmp
cmps
pop
call
jno
sbb
iret
mov
pop
mov
cmps
xor
arpl
in
inc
daa
push
or
mov
bound
clc
retf
adc
(bad)
cmp
mov
pop
loop
add
mov
xchg
jo
jge
push
icebp
cmp
cmps
cmp
pusha
or
dec
dec
cmp
dec
clc
loope
or
push
add
sub
and
xchg
jbe
add
inc
push
ror
test
inc
inc
arpl
jmp
inc
pop
jb
cs
test
adc
lds
mov
add
inc
in
cwde
pop
pop
xor
jne
add
mov
mov
or
fwait
js
mov
pushf
out
fimul
mov
xchg
stos
push
ins
retf
push
int3
xor
ret
sbb
fs
mov
or
xor
ds
rol
sub
outs
add
fdivr
push
std
inc
dec
add
data16
inc
xor
lock
(bad)
movs
cmps
or
lods
mov
jecxz
sbb
mov
push
sbb
pop
add
jb
inc
sahf
lahf
cmps
mov
adc
sbb
xchg
movs
out
(bad)
in
xchg
inc
adc
daa
sti
das
rcl
push
dec
jbe
sub
fsubr
pop
jne
arpl
imul
push
add
mov
jmp
imul
lds
inc
and
les
int
mov
sbb
mov
inc
fisttp
js
sub
(bad)
in
test
loop
push
jns
sub
jp
popf
jg
mov
push
mov
popf
cwde
in
bound
cld
int3
jmp
sbb
add
mov
pop
jbe
(bad)
ja
xchg
xor
push
shl
adc
es
add
pop
adc
and
cld
jbe
loopne
je
out
pop
outs
jge
(bad)
sbb
sbb
gs
mov
jae
jbe
mov
sbb
stos
fs
mov
cmp
test
sub
push
sub
inc
test
mov
stos
popf
icebp
leave
sbb
cmp
and
test
and
add
es
imul
adc
xchg
cmp
cmps
ss
mov
cmps
xchg
push
push
pop
stc
arpl
dec
enter
jb
mov
stos
mov
jae
(bad)
jecxz
mov
es
nop
or
es
ss
pop
mov
aas
rol
add
pop
ret
sar
push
aaa
div
sbb
shl
push
int3
and
fs
mov
sbb
cmp
sbb
(bad)
fisttp
enter
sbb
mov
popa
outs
in
jl
jp
sahf
fxch
jle
cmp
and
(bad)
test
cdq
xchg
les
cwde
not
data16
fsub
sar
adc
sub
test
ror
xchg
inc
sar
fmul
and
jmp
jle
(bad)
inc
out
sbb
fadd
inc
push
xor
outs
add
popa
mov
hlt
cld
xor
mov
pop
mov
loop
mov
jmp
mov
ins
sbb
mov
xchg
sti
in
shl
pushf
or
cdq
and
fbstp
mov
sti
and
mov
mov
xsaves
inc
push
xlat
push
push
cmp
repz
add
sbb
mov
fstp
test
inc
mov
push
test
ins
ret
icebp
repz
mov
(bad)
cli
sbb
jg
xor
test
and
imul
inc
call
inc
sub
fisttp
xchg
fsubr
pop
in
and
adc
inc
inc
loope
mov
test
sahf
push
movs
push
ins
push
cmps
adc
fcomi
int3
cmps
cmp
imul
(bad)
ja
cmp
mov
jbe
(bad)
scas
in
not
aaa
pop
jnp
pop
ds
in
pop
sbb
xor
and
je
test
push
xchg
fwait
out
js
push
xchg
pop
(bad)
cmp
push
fnstcw
sub
test
jecxz
fcomp
dec
cli
sbb
nop
js
adc
jne
and
sbb
jle
dec
jns
test
mov
and
inc
xor
cmps
dec
jmp
test
push
fsub
outs
mov
out
(bad)
jp
mov
add
pop
int3
ins
lds
sahf
pop
xchg
lods
les
mov
or
jbe
xor
mov
add
out
js
cld
inc
dec
adc
xor
add
out
retf
bound
jne
mov
das
xor
add
fwait
cmp
enter
fld
repnz
in
mov
xchg
test
jbe
sbb
inc
pusha
sub
out
or
mov
popa
push
mov
inc
(bad)
ss
outs
nop
cdq
ror
mov
fnsave
mov
imul
xor
cmps
and
in
sbb
cmp
int3
inc
dec
pop
in
(bad)
mov
sub
aaa
ret
mov
sub
ret
inc
mov
fcmovb
push
nop
pop
cmp
add
or
mov
dec
pop
mov
mov
das
xor
pop
iret
stos
ins
mov
ret
adc
push
push
cmp
cmps
loopne
enter
das
daa
sub
ja
lea
movs
(bad)
in
in
(bad)
add
mov
mov
jbe
es
ror
ins
pop
repz
frstor
std
sub
cdq
push
frstor
addr16
sub
mov
mov
xchg
mov
(bad)
jmp
push
add
xchg
es
pop
pop
out
cwde
push
inc
mov
imul
add
sbb
xchg
ins
xor
out
ins
inc
cld
fdiv
push
cmps
leave
adc
xor
xlat
sub
adc
js
inc
mov
dec
(bad)
cmps
(bad)
jp
cmp
push
sti
dec
inc
das
enter
repz
mov
mov
cmc
jle
or
bound
jp
or
adc
fisubr
movs
xchg
push
enter
mov
popf
cwde
ret
out
jmp
sub
data16
fcomp
add
adc
or
arpl
sti
mov
mov
cmp
pop
mov
sub
push
scas
cmc
aaa
mov
push
pop
ror
xchg
jg
adc
push
loope
(bad)
ficomp
pop
js
xchg
call
push
or
call
jmp
les
lds
jns
push
mov
jecxz
dec
xchg
in
scas
dec
cmp
push
mov
ret
sub
mov
fst
psubusw
cmc
out
push
xchg
das
mov
dec
jne
aas
pop
out
popa
mov
in
fiadd
inc
mov
pop
pop
cld
dec
ja
stos
cwde
cwde
lods
jnp
and
mov
pop
pop
or
(bad)
push
push
std
jl
mov
outs
(bad)
icebp
fimul
jne
pop
ins
in
mov
in
pop
ss
sbb
jo
leavew
jmp
sbb
jnp
aam
stos
loopne
rol
ds
mov
daa
sub
mov
add
mov
lock
aad
adc
jl
cdq
push
fiadd
into
aaa
pop
push
push
jo
cmp
rcl
in
sbb
cmc
cmc
popa
fcmovne
jle
jns
mov
cli
loope
mov
sub
cmp
js
jne
test
mov
fwait
push
popa
movaps
push
movs
mov
iret
pushf
mov
int
cs
test
mov
xor
jno
dec
out
mov
shl
add
movs
stc
jg
jg
repnz
dec
jmp
push
test
fcomip
nop
dec
test
mov
adc
shr
push
and
jle
adc
inc
loop
mov
inc
sub
jns
pop
fld
ficom
lods
pop
pop
and
ss
push
enter
xchg
std
loope
inc
in
adc
mov
ror
test
push
test
(bad)
repz
ins
rcr
and
outs
cmps
or
lea
xchg
mov
div
push
dec
out
mov
rol
xchg
repnz
sub
dec
test
xor
sub
xchg
mov
bound
dec
push
push
add
loopne
mov
cmp
cmp
(bad)
and
push
jno
movhlps
outs
je
shr
out
in
scas
jp
inc
cmp
sub
arpl
loope
(bad)
inc
or
jae
retf
mov
add
pusha
xor
retf
mov
add
in
cmps
jbe
sub
les
ret
sub
ret
pusha
(bad)
rcl
test
cs
aam
stos
scas
sub
and
ds
push
shl
(bad)
xor
mov
call
jbe
add
cs
mov
retf
and
leave
and
adc
pop
push
cmp
adc
sub
mov
inc
inc
iret
addr16
xor
fs
mov
es
cmp
push
cld
adc
adc
test
(bad)
je
sbb
popa
cdq
in
jno
dec
inc
jmp
jmp
dec
ret
jbe
loope
ret
adc
mov
in
popf
mov
inc
xchg
repnz
inc
data16
(bad)
dec
out
mov
out
fiadd
mov
and
jp
jno
xor
push
mov
xor
iret
loope
call
mov
sub
add
sti
mov
mov
mov
adc
pop
cs
pop
call
mov
pop
xchg
push
xor
push
aam
cmp
and
fisttp
pop
mov
pop
mov
jno
daa
sub
out
clc
es
test
pop
and
test
push
sbb
or
add
dec
mov
add
xchg
cmc
mov
push
mov
mov
jmp
cld
fldl2e
cmp
and
inc
push
cmp
lds
outs
mov
in
out
fwait
mov
mov
lahf
loopne
cmps
mov
stc
data16
mov
into
retf
mov
out
cdq
mov
sbb
push
cld
ds
sbb
xchg
test
sar
fcomp
adc
adc
imul
aam
scas
mov
cmc
imul
ret
dec
fdiv
pop
mov
test
cmp
inc
sbb
lock
sbb
jae
in
mov
ror
mov
movs
mov
shr
pop
les
xchg
test
add
sbb
and
jne
mul
dec
or
ins
aas
loop
rcl
add
fwait
pop
lea
ins
add
xchg
pop
add
daa
test
xor
aam
add
pop
xor
mov
and
xor
jg
add
hlt
sahf
neg
(bad)
pop
arpl
pop
sbb
neg
dec
sbb
lds
cmps
cmp
jg
sbb
jbe
shl
xor
fild
xor
retf
push
add
push
cmp
dec
sub
xchg
push
imul
cli
xlat
mov
js
push
sbb
xchg
and
xor
pop
inc
pushf
sbb
cdq
mov
cmp
fbld
jno
std
cmp
retf
and
test
call
popf
mov
or
ret
scas
in
mov
jl
or
xchg
stc
movs
cdq
and
dec
cmp
jo
xchg
ins
sub
jnp
scas
push
adc
clc
sbb
sar
dec
push
out
mov
in
pop
jne
dec
cs
xchg
outs
cmps
sub
adc
jo
push
stc
rep
cld
push
icebp
inc
movs
jne
rcr
imul
and
popa
mov
sub
ror
mov
retf
xor
shr
je
inc
xchg
xchg
jo
call
lea
int3
clc
repz
mov
es
pop
pmaddwd
lds
test
jns
adc
lods
pop
jns
adc
jp
xchg
loope
or
test
xchg
lods
gs
adc
xchg
xchg
js
adc
shl
jmp
pop
add
or
sbb
lock
ins
sub
cmp
xor
cmp
and
cmp
mov
test
neg
cli
(bad)
gs
sub
cwde
and
popa
jbe
(bad)
sar
cld
xor
dec
lahf
push
mov
mov
out
leave
lahf
mov
mov
sub
add
in
cmp
es
xor
xchg
mov
test
mov
adc
mov
fild
faddp
lods
jmp
inc
clc
lods
push
fadd
mov
mov
xchg
xchg
dec
adc
jp
loope
sub
dec
out
mov
jle
and
iret
cmps
mov
leave
(bad)
push
sub
cmp
hlt
jmp
repz
xchg
(bad)
adc
sbb
sub
xchg
test
imul
adc
or
neg
mov
push
jl
(bad)
jne
sahf
jns
mov
or
in
repnz
cmps
adc
lahf
dec
ss
adc
clc
lahf
mov
mov
push
jmp
mov
(bad)
cmp
lds
mov
jp
sub
mov
jno
jo
or
dec
jecxz
pop
mov
inc
std
in
sub
les
aaa
xlat
gs
pop
sub
popf
scas
mov
in
lahf
dec
(bad)
jno
rcr
jmp
xchg
ror
imul
sub
test
xor
idiv
lods
jb
jle
test
add
inc
dec
mov
dec
jns
dec
pop
cmps
shr
inc
mov
cmc
mov
adc
outs
repz
and
sti
aas
jp
std
lods
aad
int3
inc
xchg
adc
inc
jo
mov
adc
xchg
shl
hlt
inc
xlat
mov
jg
fdiv
cmp
inc
jae
push
int3
iret
inc
push
sbb
mov
adc
movs
sub
cmps
xchg
aas
cmp
xor
sti
shr
jg
mov
mov
dec
rcr
fcom
pop
aad
ror
dec
lea
dec
aam
sub
add
inc
push
out
call
lock
ss
pop
jmp
ja
sbb
in
xchg
xor
mov
add
xor
leave
ja
jbe
cmp
add
(bad)
(bad)
cwde
out
sbb
mov
addr16
ins
push
(bad)
lds
jle
or
add
and
pop
test
mov
enter
cmp
repnz
or
leave
dec
dec
stc
das
not
cmc
dec
adc
das
mov
fcom
fiadd
mov
cmps
pop
push
std
js
aas
and
mov
mov
ret
mov
push
sub
outs
das
add
push
cmp
mov
popf
add
stos
gs
inc
sbb
push
jae
jecxz
les
in
jl
xor
retf
dec
gs
int
ret
lods
and
sahf
and
add
lods
pushf
mov
jmp
gs
nop
cmp
aaa
inc
add
pop
push
xchg
(bad)
mov
test
imul
adc
sti
xor
and
fs
out
mov
add
icebp
jns
adc
push
add
imul
ficomp
add
cmp
mov
xchg
sbb
cmp
sub
xor
mov
adc
sahf
xchg
pop
inc
mov
jbe
jecxz
sub
pop
pop
push
xor
ret
icebp
cwde
dec
not
icebp
cwde
aam
mov
inc
int
jno
cmp
mov
xor
xchg
xchg
mov
loopne
push
sar
jmp
inc
test
fimul
stos
jg
inc
push
mov
imul
mov
pop
es
inc
retf
dec
add
hlt
repz
mov
fiadd
call
fxch
rcr
jbe
xchg
into
rol
or
scas
push
sbb
push
or
dec
lahf
imul
cmp
pop
out
outs
add
aaa
leave
stos
ins
iret
(bad)
cwde
pop
out
mov
fs
aad
dec
mov
mov
pop
mov
arpl
xchg
retf
arpl
or
push
fsubr
jns
ror
jae
push
sub
jb
(bad)
pop
sub
xor
lods
sbb
xor
cmp
inc
(bad)
iret
sbb
retf
xlat
sbb
bound
bound
iret
rcl
out
outs
push
pusha
lea
shl
leave
aas
enter
pop
pop
xchg
mov
out
adc
call
push
xchg
pushf
js
inc
mov
sub
mov
daa
adc
test
ret
xchg
adc
push
lods
shr
in
cwde
shl
cmps
hlt
in
jmp
lahf
push
jl
mov
dec
es
scas
sub
inc
lahf
fsub
fmul
sahf
shr
imul
scas
push
jmp
mov
add
leave
stos
icebp
imul
mov
dec
inc
mov
out
cmp
loope
xor
out
mov
add
jnp
pop
test
test
jae
es
xor
test
inc
pusha
aaa
add
cmc
pop
inc
pop
sbb
out
stos
cmp
jae
cmp
lds
ins
es
xchg
add
jno
xlat
out
push
xor
mov
outs
mov
out
fsubr
mov
xor
jae
xchg
xor
dec
and
and
cmp
pop
movs
sub
(bad)
jbe
pop
std
pop
xchg
inc
loope
cld
push
test
mov
fidivr
sub
leave
(bad)
jae
lahf
sub
dec
stc
bound
mov
je
dec
push
in
pop
mov
adc
cmps
scas
ret
pop
fsub
cmps
pushf
mov
jo
pop
jns
ss
stos
inc
adc
mov
add
pop
or
mov
mov
int3
mov
enter
xchg
nop
mov
retf
inc
mov
mov
aas
xchg
push
adc
push
das
jb
mov
cmps
adc
xor
inc
dec
jo
in
push
add
sub
add
push
cdq
sbb
xchg
mov
ficomp
cwde
pop
adc
xchg
jl
mov
cdq
call
(bad)
jb
inc
cmp
jae
jns
dec
jb
mov
mov
stos
sti
out
push
mov
jecxz
inc
xor
mov
mov
pop
out
xor
push
imul
mov
scas
mov
xor
jg
adc
jl
mov
aaa
cli
retf
stos
pop
push
loop
hlt
add
xchg
mov
nop
clc
adc
cmp
out
pop
jmp
imul
or
and
add
out
movs
inc
ficomp
js
cdq
cmps
mov
out
fcmovnbe
jmpw
pusha
pusha
mov
jle
jecxz
movs
xor
sbb
(bad)
icebp
aas
dec
repz
jle
xor
pop
mov
mov
std
push
sub
(bad)
rcr
inc
jmp
and
cmps
xor
stos
js
sti
push
jp
(bad)
(bad)
int
xchg
jg
(bad)
and
jne
cmp
push
adc
cld
pop
mov
pop
sbb
lods
pop
outs
call
dec
xchg
xchg
inc
jg
mov
pusha
sbb
xchg
sbb
mov
mov
(bad)
mov
cmc
mov
or
adc
mov
pop
push
adc
mov
(bad)
aad
jecxz
in
mov
jmp
and
dec
mov
outs
mov
dec
loopne
lea
pop
mov
imul
pop
jecxz
inc
inc
push
(bad)
aam
cld
xor
xor
loope
push
(bad)
cmps
add
push
mov
je
loopne
out
dec
icebp
in
xchg
cwde
nop
ficomp
add
repz
fsub
mov
(bad)
in
mov
xor
out
fcomp
retf
cmp
mov
jb
fmul
inc
and
jo
mov
jmp
jns
jo
stos
mov
xchg
xchg
adc
in
jo
mov
sub
repz
xchg
sti
push
push
jb
sar
xor
rol
stos
sub
dec
add
push
dec
lea
sar
add
shl
js
pop
pop
sub
mov
retf
cmp
cmps
aaa
sbb
dec
and
sub
add
inc
das
hlt
in
xchg
pushf
mov
(bad)
shl
pop
(bad)
lock
pop
pop
sub
or
sbb
mov
sub
xchg
jne
ins
adc
adc
add
jl
jl
fabs
mov
arpl
adc
ins
sub
enter
push
mov
out
adc
das
(bad)
lods
xor
pop
and
call
das
daa
mov
imul
leave
xchg
pushf
call
gs
sub
jnp
pop
sub
clc
shr
stc
ins
scas
sub
in
fistp
pop
sbb
sbb
xchg
lahf
aas
jno
test
cmp
inc
jno
xor
shl
cmc
loope
mov
dec
lods
mov
ja
lds
loop
cmc
dec
sbb
into
enter
sub
xor
jo
add
fwait
js
and
ds
jbe
or
or
imul
mov
or
dec
pop
fst
sub
test
out
jmp
test
xchg
sbb
mov
imul
jmp
sbb
test
lea
xlat
dec
retf
repnz
mov
pushw
outs
sbb
loopne
sbb
mov
xchg
cmps
jmp
out
xchg
ins
jle
dec
xor
in
adc
sahf
push
cdq
sahf
mov
cmp
mov
test
test
call
sub
popf
mov
mov
fdiv
xor
test
cmp
push
test
mov
cmps
and
mov
outs
out
(bad)
and
retf
push
mov
lods
pop
es
adc
dec
icebp
out
outs
jns
dec
rol
in
jbe
(bad)
push
mov
cmps
(bad)
sbb
mov
sahf
add
stos
jecxz
jp
xchg
cmc
or
push
mov
inc
bound
aam
div
sbb
mov
push
push
not
and
adc
jmp
loopne
enter
adc
loope
ins
(bad)
repz
ror
mov
fdivr
pop
std
pmaddwd
jg
jl
jbe
and
retf
pop
xchg
imul
fidiv
mov
jmp
xor
fmul
(bad)
fisttp
popf
ds
mov
pop
out
ins
sub
scas
jnp
icebp
dec
push
jne
(bad)
mov
add
push
pop
jmp
push
mov
out
iret
adc
mov
jbe
xor
gs
fisttp
lock
call
sti
fsubr
inc
dec
and
ss
movs
jo
jns
rol
aas
out
fsubrp
cmc
int3
push
dec
inc
sub
adc
pop
or
adc
cmp
push
pop
jge
mov
xchg
jmp
pop
rcl
stos
push
pop
pop
pop
repz
hlt
movs
dec
aaa
pop
arpl
mov
cld
xor
ror
pop
mov
xchg
xchg
adc
sub
jmp
leave
ficomp
(bad)
enter
adc
inc
cdq
popa
mov
inc
ror
jo
mov
ins
adc
cli
pop
mov
daa
pop
mov
pop
sub
inc
lea
dec
cdq
ret
loopne
or
in
jmp
fiadd
ds
cs
cdq
push
shl
int3
sar
(bad)
out
sbb
movs
aaa
pop
pop
push
dec
stos
mov
cdq
xor
pop
xchg
mov
dec
aam
or
cs
push
push
mov
imul
fs
mov
jnp
les
(bad)
xchg
pop
xchg
lahf
push
sub
stos
pop
std
aas
leave
rcr
aad
pop
scas
push
imul
sbb
xor
(bad)
dec
add
adc
call
gs
and
dec
mov
mov
pop
push
mov
retf
inc
push
mov
ja
popw
stos
and
aam
loope
ds
jle
repz
icebp
mov
ss
(bad)
rcr
loope
xor
cmp
and
fisttp
icebp
sti
push
test
mov
pop
in
fcomp
dec
bound
ds
mov
inc
clc
fisttp
xchg
out
push
cmp
push
or
nop
(bad)
rol
or
imul
mov
(bad)
sbb
mov
and
retf
and
std
push
mov
cld
aam
in
cmp
and
ins
test
and
fild
add
es
out
cmp
fwait
adc
dec
pop
push
je
push
mov
sar
push
aas
retf
mov
sub
lea
pop
push
dec
or
in
xchg
pop
mov
push
mov
dec
mov
dec
shl
dec
jl
mov
imul
shl
or
fist
test
or
and
jle
fs
jbe
add
data16
ficom
cli
jne
jp
sbb
xchg
scas
clc
ins
mov
les
daa
inc
call
lods
loop
cld
cmps
xor
je
cmc
mov
cdq
addr16
(bad)
jnp
js
leave
mov
dec
jae
push
adc
retf
dec
mov
adc
jge
push
xor
and
mov
(bad)
mov
(bad)
sahf
lds
and
gs
cli
cmp
lds
shr
sar
add
add
in
push
out
lds
scas
or
fidivr
adc
(bad)
jmp
inc
repnz
push
jg
cmp
aaa
jmp
pop
push
lock
jmp
push
xchg
add
inc
stos
xor
fstp
and
cmp
mov
or
cmp
outs
aad
(bad)
lahf
das
arpl
out
mov
movs
fist
push
dec
addr16
repz
div
or
ror
pop
lods
std
jecxz
jecxz
add
cmps
dec
loopne
inc
inc
data16
ins
loope
jae
and
mov
mov
jecxz
adc
fdiv
cmps
je
daa
out
or
gs
add
cmp
mov
sahf
aad
sbb
adc
(bad)
test
pop
mov
xchg
int
jbe
ins
pop
inc
pop
sti
xlat
imul
test
push
std
xor
inc
out
in
fidiv
dec
xchg
fdivr
mov
int
std
movs
dec
pop
xor
stos
lods
iret
xor
jl
js
jns
pop
into
mov
jne
aas
sub
push
sub
or
push
(bad)
gs
and
xchg
(bad)
jle
xchg
es
scas
in
cmp
pop
sbb
(bad)
sub
push
dec
daa
and
stos
rcr
mov
sbb
sbb
push
cmp
outs
and
test
and
into
sbb
mov
mov
imul
test
loop
sbb
lahf
jo
test
xchg
xchg
push
ins
pmaddwd
(bad)
ret
xor
xchg
sub
and
jne
xlat
out
and
mov
clc
push
inc
xor
inc
cwde
mov
in
push
cmps
sbb
sub
dec
(bad)
xchg
jge
shl
xchg
sub
mov
mov
int3
mov
(bad)
fstp
fwait
or
push
and
lahf
cmps
dec
lahf
ja
call
adc
stc
pop
and
arpl
mov
int3
mov
push
mov
sbb
enter
xor
cmp
lods
mov
out
sbb
call
outs
cli
xchg
in
add
adc
popf
lds
cli
push
cdq
daa
cmp
inc
adc
sbb
cli
cmp
dec
lods
cld
adc
adc
ror
leave
arpl
mov
popf
add
sbb
push
sub
data16
adc
xchg
xor
js
(bad)
and
cmp
xor
cmp
jb
ss
pop
call
sti
xchg
sub
sub
mov
mov
xor
sbb
jae
mov
nop
test
cmp
sbb
fisubr
test
add
sub
inc
sbb
dec
xor
push
sub
in
test
or
in
stc
inc
and
adc
inc
push
and
shl
shr
or
lea
adc
sub
hlt
subps
sbb
lods
or
inc
sbb
retf
ret
add
jecxz
adc
ret
push
out
cmp
sub
jne
scas
or
pop
mov
pop
retf
pop
stc
xor
sbb
in
push
pop
jo
repz
sbb
call
push
outs
jbe
enter
push
ficom
jo
jp
dec
pop
clc
mov
inc
cmps
add
jle
mov
out
fdivp
add
sbb
bound
jne
stc
mov
das
dec
outs
cli
out
fdivp
dec
loope
mov
int
cmp
dec
ins
retf
push
dec
ret
jb
xchg
jg
sub
push
or
jbe
loop
int
jno
test
psllq
or
jge
sub
mov
into
mov
jne
(bad)
rcr
fyl2x
sahf
sub
adc
(bad)
or
je
pop
test
nop
data16
cmc
and
daa
addr16
pop
(bad)
aad
push
adc
xor
(bad)
repnz
pushf
scas
cmc
jecxz
adc
cs
mov
xlat
push
push
add
add
cmp
stos
xlat
jmp
jo
dec
or
pop
adc
movs
ret
lock
cwde
aam
rol
shl
sbb
test
mov
pop
in
fnop
push
push
mov
mov
and
and
and
scas
dec
sub
xchg
iret
arpl
and
test
std
mov
and
(bad)
push
retf
ror
scas
fild
jp
sub
inc
daa
dec
cmc
sbb
push
push
mov
mov
sti
mov
addr16
pop
stos
xchg
loope
sub
out
pop
loop
jp
aam
rcr
adc
mov
aam
push
jb
cwde
cli
leave
ins
stc
dec
test
dec
xor
mov
pop
stos
std
popf
adc
(bad)
adc
repz
out
inc
add
adc
daa
jno
popf
jg
pop
dec
push
push
movs
add
xor
test
ds
xlat
sar
rol
and
inc
xlat
shl
fwait
es
adc
pop
je
pushf
shl
sub
lds
mov
adc
scas
fcomp
and
out
dec
(bad)
fnstenv
ficomp
sub
inc
jle
adc
lock
mov
mov
fdiv
icebp
(bad)
addr16
std
in
xchg
mov
adc
rcl
push
push
mov
pop
rsm
jbe
call
push
pop
fcomip
mov
pop
stos
jmp
psubd
mov
pop
adc
enter
sbb
scas
outs
fs
dec
and
xchg
xchg
scas
mov
repnz
or
ins
imul
inc
jno
adc
shl
add
dec
out
cmps
ficomp
xchg
jge
cmp
imul
es
sbb
(bad)
push
pop
mov
mov
ror
out
ja
sbb
mov
fbstp
jne
cdq
jg
pop
mov
scas
lea
fidiv
jnp
add
dec
out
jae
mov
mov
js
fistp
mov
fistp
cmps
sub
mov
gs
(bad)
mov
adc
push
or
jbe
repz
aam
dec
out
sub
aam
mov
aaa
test
xor
inc
fisubr
pop
lds
in
pop
push
inc
cli
cmps
add
adc
jmp
pop
test
add
movs
imul
lock
in
pop
pop
(bad)
push
mov
call
es
mov
inc
loop
jmp
sub
xchg
call
push
(bad)
jae
data16
ja
js
dec
add
(bad)
or
shr
popa
dec
pop
or
cmc
das
into
je
push
pop
jle
or
int
scas
xor
mov
fld
rol
pop
test
bound
retf
dec
push
dec
mov
cmps
adc
shl
loope
or
sbb
add
dec
mov
scas
push
ror
mov
fimul
int3
(bad)
pop
dec
xchg
stos
sti
icebp
rcr
popf
sub
jmp
xor
jbe
or
aad
add
mov
sub
adc
ret
test
(bad)
fild
test
pop
fstp
pusha
adc
cmp
stos
or
push
and
imul
outs
stos
cmp
add
pushf
xchg
call
pop
pop
(bad)
push
and
mov
xchg
retf
jo
(bad)
clc
mov
inc
add
cmp
sub
or
or
dec
cmp
mov
outs
(bad)
gs
bound
(bad)
shl
inc
inc
ins
lock
movs
aad
leave
mov
mov
xchg
imul
(bad)
xlat
jae
mov
imul
sbb
sub
pop
inc
mov
pop
and
imul
mov
push
into
lahf
cli
mov
int
inc
test
pop
or
lods
rol
mov
xchg
and
sub
(bad)
sub
jmp
ror
(bad)
push
push
mov
mov
xchg
push
inc
call
sbb
xchg
and
and
xchg
mov
jae
cmp
jns
jecxz
xchg
or
mov
retf
add
test
cmp
jno
push
stos
sbb
imul
iret
outs
xchg
pop
test
jbe
jge
(bad)
and
dec
aaa
popf
int3
cwde
cmps
push
dec
adc
jp
cdq
sub
ret
jmp
xor
sbb
in
sub
cmps
adc
loope
xor
aad
mov
test
(bad)
(bad)
out
arpl
or
cmc
jns
dec
popa
imul
shl
out
pop
dec
(bad)
je
jns
fild
xchg
(bad)
xor
ret
lods
push
sbb
jo
sub
mov
or
jns
dec
fld
mov
cmp
shr
ftst
or
out
rcr
or
pusha
aas
in
sbb
sbb
mov
pop
inc
(bad)
mov
xchg
add
mov
jg
xchg
in
test
fidivr
pcmpgtd
int3
stc
adc
jp
mov
cmp
in
lahf
jp
clc
mov
or
add
dec
cwde
pop
and
add
add
push
not
lahf
xorps
push
mov
cmps
sbb
cmp
cmp
das
mov
shl
or
paddb
cmp
sub
fmul
push
adc
xor
mov
hlt
inc
(bad)
cli
push
jo
pop
outs
mov
sub
call
add
pop
adc
sahf
aad
cmp
icebp
ja
scas
cmp
bound
jb
xchg
pop
mov
loopne
jnp
push
sar
scas
cmp
xchg
mov
sub
scas
neg
inc
jae
imul
ins
inc
mov
push
inc
sar
sti
cdq
adc
aad
mov
imul
mov
fbld
cwde
and
push
add
or
stos
shr
push
adc
inc
push
mov
mov
and
inc
xchg
les
pop
lock
or
xor
dec
add
mov
inc
lea
lea
outs
xchg
cmp
repz
test
mov
enter
pop
push
loopne
pushf
(bad)
push
outs
add
jmp
fbld
js
add
dec
mov
and
int
nop
in
mov
retf
retf
adc
in
das
dec
add
repz
xchg
in
mov
int
dec
gs
cmc
imul
cmps
(bad)
pusha
mov
neg
dec
int
xor
cmp
sbb
jo
push
mov
stos
jno
sahf
popa
mov
dec
fldenv
push
push
pop
jecxz
push
fcom
sub
xor
ret
pop
hlt
ficom
adc
cli
jae
sbb
inc
ins
rol
xchg
movs
mov
addr16
jnp
and
jne
sti
inc
and
xchg
test
outs
cdq
mov
dec
adc
mov
jne
outs
or
into
xlat
test
mov
sub
inc
(bad)
mov
call
lods
mov
icebp
pop
loop
std
add
imul
loope
inc
rol
sti
lods
inc
jmp
xchg
sub
sbb
jle
scas
sub
pop
pop
sub
cmp
ins
ror
push
out
(bad)
push
les
lods
and
in
pop
adc
fimul
inc
ffreep
dec
mov
ds
pushf
into
and
or
and
and
sti
xor
dec
mov
mov
jge
pop
ret
into
pop
adc
enter
inc
fisub
and
and
cmp
xchg
test
cwde
pushf
jb
imul
shrd
mov
(bad)
mov
or
push
adc
xor
int3
stos
aaa
addr16
clc
jne
dec
add
rcr
push
lods
push
out
mov
push
aad
shl
mov
jp
fsub
arpl
mov
mov
or
push
(bad)
push
aaa
leave
xor
(bad)
cmp
add
cmc
add
sbb
mov
cmp
repz
sub
ret
inc
fadd
push
sub
pop
(bad)
jo
jmp
pop
int
daa
jmp
clc
idiv
mov
outs
test
das
popf
mov
rcr
jle
jmp
push
add
cmp
fist
test
pop
aad
push
pop
dec
nop
dec
or
cmc
sbb
in
or
push
sahf
push
scas
add
inc
movs
das
mov
adc
mov
mov
mov
sar
mov
aas
xchg
lock
js
jmp
sbb
mov
test
adc
dec
mov
jle
aas
sub
cmp
rcl
lods
xchg
jne
jne
add
push
call
stos
enter
jno
mov
lea
push
sub
or
setno
cmps
jg
pop
xchg
or
cs
mov
lods
cmp
pop
into
cmp
in
inc
std
dec
ja
arpl
out
mov
rcl
or
inc
mov
pop
aam
les
mov
jne
dec
sbb
pop
inc
inc
sbb
shl
(bad)
mov
cmp
mov
jg
leave
or
jnp
push
jbe
dec
mov
dec
cmps
inc
or
(bad)
arpl
xor
xchg
dec
sub
and
mov
sti
and
push
push
dec
lods
loopne
mov
inc
or
xchg
fisubr
nop
mov
sbb
add
jmp
(bad)
jmp
xchg
aas
int3
or
aad
push
jbe
sub
int
inc
ja
neg
aaa
out
sub
push
mov
retf
aad
jbe
es
(bad)
sub
xchg
ror
push
mov
jle
add
or
movs
inc
inc
and
push
in
bound
pop
xchg
or
test
dec
jno
adc
pop
or
dec
fstp
adc
(bad)
test
cmp
inc
xlat
xor
mov
pop
push
enter
mov
loopne
and
int3
push
or
test
xchg
mov
(bad)
in
sti
lods
imul
push
dec
scas
call
and
sbb
loop
pop
dec
fwait
ins
jae
stos
mov
das
sahf
add
std
fldcw
xor
iret
in
pop
mov
xchg
call
inc
push
cli
in
cld
sti
push
sbb
xchg
enter
sbb
add
mov
add
mov
mov
scas
sbb
les
enter
icebp
imul
scas
xor
int
and
pop
dec
fst
jne
jo
(bad)
arpl
sub
adc
(bad)
or
div
into
jmp
mov
cmp
lea
push
xor
mov
inc
xor
pop
sbb
imul
ja
or
sbb
scas
mov
stc
xor
gs
cs
in
push
xor
cmc
dec
and
inc
stos
push
or
(bad)
aas
dec
out
pop
add
sbb
pop
iret
push
jnp
das
in
pusha
int
adc
sub
adc
les
push
cwde
cmp
cdq
in
sub
push
sti
inc
daa
jge
xchg
test
cmc
cmp
jne
xor
and
stos
out
jl
xor
pop
dec
fidiv
mov
sti
data16
pop
cld
xor
xchg
les
pushf
(bad)
cmp
jmp
mov
dec
jecxz
jg
sbb
mov
xor
xor
push
jo
mov
mov
pop
push
adc
sub
movs
pop
push
adc
loopne
push
cs
dec
pop
aas
scas
add
mov
mov
in
sub
mov
push
cmp
mov
jle
js
adc
sbb
cmp
sub
dec
ror
push
jno
shrd
push
jne
lods
pop
mov
dec
frstor
jns
std
push
lea
lahf
sbb
fidiv
dec
adc
jecxz
retf
outs
and
rcr
mov
js
jae
jle
mov
mov
lea
inc
cmp
fcomi
xchg
mov
mov
fisttp
fisttp
int3
stc
data16
imul
in
mov
ret
and
inc
pop
js
xchg
pop
push
mov
adc
pop
call
inc
adc
movs
add
scas
fsubr
or
mov
jo
lahf
mov
repnz
lds
hlt
sbb
and
in
mov
and
dec
out
out
adc
xor
and
sbb
sub
sbb
test
fldcw
xchg
cs
int3
clc
rcl
jns
add
loop
stc
cmpxchg
and
mov
(bad)
mov
dec
add
mov
inc
mov
stos
ja
fld
sbb
test
add
pop
or
imul
sbb
fbld
xchg
sub
(bad)
leave
or
cmp
(bad)
sahf
mov
sbb
test
mov
les
and
mov
jnp
inc
dec
cld
jp
imul
imul
rcr
jns
retf
or
xchg
out
or
rol
fimul
ja
sti
out
scas
and
sbb
cmp
aas
aam
pushf
jge
xchg
push
nop
fstp
mov
ret
adc
xchg
in
jbe
jae
and
sub
aaa
jmp
cmp
and
xor
jno
dec
(bad)
cmc
fs
sub
xlat
fcmovnb
push
sbb
out
(bad)
das
jg
jo
in
outs
fst
jle
sub
not
mov
mov
mov
push
push
std
dec
mov
in
dec
rcr
add
es
(bad)
out
pop
shl
ja
fmulp
push
push
push
add
aad
add
and
je
out
pop
push
jmp
mov
aas
adc
inc
scas
inc
daa
(bad)
and
cmp
movs
(bad)
fsub
or
add
inc
call
icebp
cmp
mov
push
pop
jbe
dec
jp
pop
dec
pushf
call
pop
(bad)
adc
pop
add
mov
sahf
fwait
sbb
movs
ret
jmp
push
test
sub
lock
pop
sub
mov
(bad)
icebp
aam
int
push
mov
repnz
fimul
pop
ja
or
aad
or
and
jmp
mov
xchg
das
sub
jne
mov
push
ss
jb
add
arpl
push
data16
not
inc
jno
lock
lock
jmp
fs
sub
aam
ins
aas
call
push
sub
(bad)
jmp
jbe
or
inc
out
test
inc
push
xor
cld
leave
xchg
fwait
out
add
fisub
shr
push
cmp
xor
lahf
or
sub
mov
dec
add
lea
add
xchg
pop
cld
(bad)
xchg
sbb
xchg
xchg
repz
mov
jecxz
and
cli
mov
pop
fidivr
mov
add
lahf
jle
jno
mov
ins
push
in
xlat
stc
repz
mov
adc
out
push
sbb
(bad)
scas
xlat
adc
(bad)
out
xor
int3
and
fbld
movs
mov
and
cmp
pop
mov
int
daa
retf
mov
xor
pop
dec
not
loope
ret
iret
xor
mov
push
mov
sahf
sub
push
add
sub
mov
jns
sub
inc
jb
mov
clc
add
cwde
adc
ss
sub
push
imul
les
test
cdq
mov
cdq
sbb
pop
mov
mov
jbe
lock
jp
xor
cmp
ds
pop
or
ins
jg
imul
icebp
jno
or
mov
and
jns
addr16
fdivp
aam
pand
mov
(bad)
cmps
add
inc
(bad)
call
cmc
xchg
cmc
ins
idiv
add
das
xor
pusha
movs
mov
(bad)
mov
pop
scas
aas
enter
xor
xor
mov
outs
test
pop
mov
inc
cmp
iret
mov
shl
cmp
jg
mov
xchg
cmc
scas
and
dec
ins
and
ret
or
mov
les
aam
ror
xor
sahf
out
aad
adc
xor
movs
ret
cmp
inc
mov
sub
xchg
add
add
outs
ret
test
ret
xchg
mov
inc
cmp
push
in
aad
lock
sub
jb
jae
xchg
cli
xchg
inc
data16
mov
loope
movs
addr16
loopne
dec
imul
stos
lods
sub
int3
add
sbb
loop
pop
mov
add
mov
lods
push
bound
jmp
(bad)
fdivr
test
adc
retf
imul
popa
int
xchg
test
retf
(bad)
outs
mov
(bad)
jbe
loope
pop
loop
es
out
adc
ja
(bad)
cdq
xchg
and
mov
mov
pop
mov
dec
sub
xor
push
test
or
inc
fidivr
lea
aad
push
lods
pop
les
push
xor
jns
mov
arpl
clc
jbe
and
sbb
push
loop
punpckhdq
push
aas
sub
fcomp
jl
cdq
jp
pop
inc
jl
stos
cmp
jmp
add
ret
stos
cld
pop
dec
mov
sub
(bad)
cli
cmp
cmp
or
cmp
xlat
cmp
jnp
inc
xor
int
ins
push
jle
ds
mov
pop
cmp
adc
push
mov
mov
cmc
ret
xor
into
sub
daa
jnp
in
mov
lock
addr16
and
lea
inc
sbb
mov
xlat
push
popf
cmp
and
cmps
mov
aad
push
mov
push
push
xor
ins
pop
ret
sub
daa
(bad)
loopne
retf
cmc
push
or
lods
adc
dec
and
sahf
xchg
adc
pop
jae
test
outs
aad
push
icebp
arpl
push
cmps
fdiv
lock
xchg
aas
jnp
(bad)
aam
sub
jns
cmp
push
mov
mov
inc
push
cmps
stos
xor
in
jmp
scas
(bad)
push
mov
mov
xlat
lahf
mov
sbb
outs
mov
inc
push
int
call
xor
or
add
push
xor
daa
ja
ds
and
mov
pop
(bad)
xchg
imul
ja
dec
mov
fnstenv
push
xchg
das
(bad)
jecxz
out
xchg
lock
or
add
fcom
adc
sar
xchg
pop
or
fbstp
adc
out
repnz
or
scas
dec
or
sbb
or
adc
cmc
outs
scas
ss
into
push
mov
cwde
xchg
movs
sbb
pusha
repz
jno
mov
mov
out
lahf
and
cmp
adc
inc
cs
xchg
sub
sbb
jmp
jecxz
xor
mov
test
mov
retf
stc
sbb
aad
mov
nop
retf
loope
nop
out
push
loopne
mov
mov
jmp
or
and
lods
test
or
sbb
mov
popa
xchg
iret
lods
enter
adc
ret
mov
loop
sub
mov
xchg
lds
push
xor
test
sub
add
pop
cmp
(bad)
xor
add
sahf
int
std
mov
out
lds
sub
mov
push
retf
push
add
xor
clc
repz
cmp
or
addr16
xor
aas
outs
xor
repz
xlat
cmps
and
cmp
dec
cmp
dec
jle
js
retf
es
mov
jle
inc
cdq
jl
shr
fs
inc
into
pop
js
jmp
ja
(bad)
loope
or
ficom
dec
adc
shl
ret
mov
xor
dec
xor
adc
adc
sbb
lods
cmp
cmps
outs
push
mov
imul
xchg
push
or
neg
xor
mov
neg
in
ret
mov
dec
scas
pop
test
sbb
add
addr16
frstpm(287
cmp
(bad)
out
ss
jbe
xlat
lods
jl
lods
xchg
mov
test
xchg
scas
push
xchg
lahf
gs
sub
jge
push
int
pop
arpl
jnp
dec
push
mov
arpl
test
mov
shr
mov
inc
push
ret
jp
mov
push
push
xor
or
jl
aas
mov
call
js
scas
inc
push
xchg
cmps
push
bound
fisubr
jg
dec
(bad)
sti
test
outs
adc
cmp
nop
cmp
lea
fs
add
xor
mov
arpl
out
xor
mov
adc
pop
pop
repnz
jle
xchg
mov
test
cs
in
jns
xor
cmps
dec
lea
in
xor
call
out
mov
adc
push
lds
test
in
mov
dec
mov
mov
test
cwde
mov
movs
dec
push
pop
cmp
mov
aas
popa
or
test
fidiv
in
addr16
outs
mov
in
mov
jmp
pop
int
into
loop
lahf
push
jg
ja
xchg
test
and
mov
dec
mov
rcl
cmc
sbb
fcom
dec
or
call
ss
cmps
shl
mov
inc
into
sub
(bad)
pop
pop
fisubr
adc
jmp
movq
dec
out
pop
mov
or
adc
cmc
fdivp
push
rol
and
clc
jnp
ficomp
fiadd
ret
dec
mov
and
movs
cmp
ffreep
sar
push
pop
mov
imul
xchg
sbb
mov
pop
dec
cmp
(bad)
push
retf
inc
and
xchg
inc
inc
std
cli
not
adc
hlt
lea
call
push
les
inc
push
out
inc
test
sub
xchg
or
ins
xchg
lods
mov
push
cmp
jmp
test
fs
fld
lods
popf
add
les
mov
mov
cdq
mov
(bad)
xchg
inc
adc
add
adc
push
xchg
xor
lock
enter
mov
test
cmp
dec
retf
mov
cmc
jl
sbb
jecxz
clc
pop
pop
xchg
imul
pop
or
ins
aam
add
out
aam
je
sti
out
inc
popa
mov
add
sub
mov
out
fs
lahf
sbb
sub
jp
or
dec
xchg
dec
cmp
lahf
inc
and
hlt
movs
ja
cmps
sub
inc
scas
mov
ficomp
jmp
cmp
and
std
cmps
xchg
mov
push
js
sub
or
inc
shr
mov
arpl
dec
(bad)
mov
test
push
sahf
out
or
push
and
cmp
and
lds
(bad)
fisub
dec
mov
pop
add
les
push
jmp
rcl
loop
and
inc
mov
push
add
jo
stos
pop
outs
retf
out
sahf
sbb
sub
mov
repnz
cs
idiv
sahf
sbb
movs
nop
xor
push
mov
mov
add
(bad)
cmp
out
pop
in
cwde
fnstcw
daa
(bad)
fild
push
and
mov
jp
(bad)
jmp
rcl
fmul
inc
aam
nop
xor
loope
shr
outs
daa
int
cmp
inc
ror
fs
mov
outs
sbb
jb
sbb
ror
lds
pop
inc
pop
pop
jne
or
cli
sub
jnp
sbb
(bad)
sbb
jo
inc
push
mov
push
mov
pushf
mov
and
int3
scas
das
adc
adc
out
add
jb
push
push
repz
xchg
mov
mov
jecxz
sbb
jge
adc
retf
mov
add
mov
sub
cmp
outs
and
inc
sahf
retf
cld
jge
or
(bad)
retf
sub
test
jmp
dec
adc
or
pop
mov
mov
pop
ficomp
sub
jle
jge
pop
pop
cmp
out
or
rcr
mov
mov
sub
shl
sub
ins
adc
loopne
(bad)
(bad)
fimul
xor
cmp
jns
fild
jne
mov
push
sub
sbb
pop
test
hlt
(bad)
pop
aam
sti
mov
out
push
xor
pop
adc
and
nop
retf
das
(bad)
sub
in
or
out
xchg
fiadd
inc
cmp
mov
mov
lahf
idiv
pop
xchg
adc
in
call
adc
in
xor
push
icebp
or
ins
cmp
adc
ins
test
mov
cmp
add
out
dec
pop
mov
into
push
mov
lea
retf
cwde
xchg
idiv
sbb
je
cmp
sub
xchg
std
jmp
(bad)
sbb
rol
nop
dec
xor
jne
scas
pop
xchg
fcom
je
cli
add
and
and
mov
or
data16
data16
and
pop
dec
pop
push
jmp
adc
xchg
push
div
xchg
pop
xchg
add
or
sub
jmp
sbb
sub
js
dec
dec
pop
inc
cmp
lahf
and
sub
adc
je
jnp
mov
or
fwait
or
ss
sti
mov
fwait
lock
div
leave
mov
mov
je
adc
push
push
stos
and
ins
outs
fsubr
pop
ins
push
dec
push
aaa
or
xchg
jbe
push
pushf
std
aam
mov
lea
push
gs
pop
xchg
pusha
push
mov
hlt
dec
and
cmp
push
inc
std
sub
push
pop
cmp
push
in
sub
ins
scas
ins
mov
cmps
int
not
sahf
in
or
in
sub
or
sbb
repnz
pop
shl
adc
inc
movs
test
mov
aad
aam
fisubr
in
xchg
pusha
ret
pop
and
adc
popf
jg
and
retf
and
pop
xchg
mov
mov
jb
xlat
mov
push
add
add
jecxz
mov
adc
es
push
inc
dec
mov
push
lods
inc
loopne
push
in
xor
sbb
out
push
push
jge
test
movs
sub
fist
or
push
frstor
ror
jle
jmp
cmp
pusha
fdivr
sub
imul
fwait
xor
cmps
movs
pop
dec
je
ficomp
in
jecxz
push
out
int
test
or
adc
mov
stos
lea
adc
push
pop
add
jo
sbb
(bad)
xor
call
jge
cwde
cmps
sahf
mov
or
push
mov
jle
push
fdivr
add
(bad)
push
adc
xchg
aaa
test
pop
adc
mov
(bad)
dec
jg
es
dec
pushf
stos
xor
mov
dec
mov
mov
lahf
push
inc
test
call
mov
and
call
xchg
sub
cmps
mov
xor
fwait
jmp
ret
pushw
data16
out
neg
adc
pop
adc
rcr
fs
loope
repnz
xchg
in
ja
cli
mov
fadd
cmps
pop
sub
ds
add
cmp
lahf
ins
(bad)
cld
imul
shl
inc
in
aas
cmps
fs
xor
xchg
retf
stc
stos
or
and
in
xchg
mov
sub
jge
or
push
inc
cli
aam
mov
fwait
jmp
je
rol
push
icebp
aam
pop
pop
push
loop
cmp
jbe
pusha
sub
test
call
push
add
mov
adc
fcmove
inc
mov
iret
adc
pusha
scas
call
dec
in
repnz
pop
jbe
sub
cmp
or
aad
xchg
adc
std
push
es
out
xchg
lock
pop
test
push
pusha
call
mov
mov
outs
mov
icebp
mov
add
jmp
cdq
ja
push
mov
es
sbb
stos
pusha
mov
stos
jmp
jp
inc
lods
fsubrp
cmp
sub
and
nop
push
and
out
(bad)
daa
jmp
mov
aas
xor
fld
sbb
jo
fistp
(bad)
outs
adc
dec
and
xor
push
movs
inc
jge
push
lds
mov
je
stos
sub
in
int3
aam
push
inc
dec
mov
ins
out
(bad)
je
inc
ret
sub
ficom
add
popf
in
dec
out
inc
das
inc
cmc
dec
sbb
adc
addr16
jne
sub
lds
lea
pushf
int3
jne
neg
pop
push
repz
bound
adc
or
cmp
sbb
push
xchg
sbb
mov
inc
jne
cmp
dec
sub
out
call
and
in
lods
cwde
push
sub
cmps
aas
lods
pusha
mov
inc
sub
push
stos
mov
push
dec
imul
adc
in
or
cmp
pop
sar
cs
ins
test
push
xchg
or
mov
fs
push
popf
fbstp
sbb
ror
cwde
mov
stos
inc
dec
and
xor
sbb
(bad)
(bad)
xchg
and
(bad)
aas
xor
arpl
ror
add
das
repz
leave
pop
xchg
jne
adc
les
fidivr
mov
sub
pop
xor
adc
in
mov
call
daa
adc
sbb
stos
shr
mov
push
out
(bad)
xchg
or
out
adc
sub
in
push
mov
cwde
sbb
dec
sbb
xor
xchg
inc
pop
mov
push
jae
fs
retf
pushf
adc
push
sbb
xor
neg
mov
loop
je
jns
or
sbb
out
jbe
in
repz
out
hlt
repz
add
dec
push
push
fidivr
cli
das
xchg
fsub
pop
int
outs
adc
fdivr
xchg
xchg
xchg
jmp
retf
loop
push
sbb
out
jg
mov
jns
cmc
pushf
dec
cs
sub
sbb
int3
adc
cmp
icebp
push
outs
mov
icebp
jns
push
fs
sbb
not
xlat
movs
push
xchg
jp
pop
lahf
dec
jmp
pop
mov
imul
dec
cmp
ffreep
push
xor
sbb
test
out
loope
pushf
fistp
fcomp
pop
std
or
and
cmp
mov
sbb
fs
ror
push
xchg
push
pop
jge
hlt
repnz
imul
call
add
mov
dec
(bad)
dec
inc
sbb
mov
gs
(bad)
mov
ins
dec
push
repz
or
sti
int
mov
dec
pop
xchg
retf
dec
in
mov
and
cwde
cmp
into
gs
push
(bad)
mov
cdq
xchg
js
sbb
clc
adc
mov
cmp
in
mov
push
adc
inc
pop
sbb
and
and
retf
jne
cmps
fld
aam
push
dec
out
repz
sbb
cmp
fcmovne
mov
pop
mov
enter
(bad)
repnz
sbb
popa
xchg
adc
cs
fidivr
ja
pop
mov
scas
mov
scas
movs
aaa
ins
add
cmp
xchg
mov
dec
out
cwde
mov
mov
fisub
inc
inc
sbb
push
lea
xor
ror
pop
sti
pop
lds
add
mov
movs
test
jns
movs
shl
inc
adc
shr
nop
mov
inc
adc
sti
adc
shr
push
test
les
mov
adc
cmp
xchg
add
(bad)
fmul
imul
or
iret
mov
sbb
and
fisub
xchg
fcomp
fistp
mov
push
ffreep
ret
jno
aad
dec
or
loopne
jns
pop
sbb
pop
mov
(bad)
mov
int
xchg
pop
mov
(bad)
push
jp
inc
ins
test
mov
ja
enter
or
sahf
das
and
mov
xor
mov
dec
in
out
pop
pusha
scas
xchg
icebp
push
pushf
and
(bad)
popa
dec
clc
and
mov
lahf
es
mov
ss
not
mov
xor
fdiv
aam
into
mov
ja
inc
pop
cmp
cmp
xor
fadd
clc
mov
(bad)
mov
cli
mov
push
cmp
jae
push
or
sub
loope
dec
loop
dec
(bad)
push
xchg
adc
and
push
xchg
sti
cmps
add
cmp
jmp
push
scas
jo
ss
popa
scas
ret
cmps
shl
and
and
ja
aad
outs
scas
push
mov
jmp
jl
sbb
ss
das
iret
je
jecxz
shr
pop
add
cdq
mov
and
lock
test
mov
bound
cmp
stc
(bad)
stos
les
cmp
(bad)
mov
cdq
ret
sbb
shr
in
jno
jl
jecxz
inc
inc
push
fadd
sbb
adc
jp
rol
fsubr
add
pusha
lods
jmp
js
push
cmp
cmp
xchg
and
fdivrp
dec
hlt
mov
mov
sahf
mov
inc
cli
mov
pushf
rol
imul
xchg
or
or
test
xor
imul
add
or
xchg
repnz
cmps
and
nop
arpl
mov
repz
jmp
push
add
daa
enter
loopne
jecxz
mov
pushf
sbb
movs
jae
mov
mov
inc
je
ins
add
lods
dec
xor
test
dec
out
push
cwde
stc
loop
adc
fldenv
sbb
sbb
jle
retf
xchg
mov
xchg
mov
xchg
push
out
aad
and
hlt
sub
(bad)
jecxz
ja
xchg
fisubr
jnp
sub
popa
pop
add
int3
lock
ins
mov
cld
pop
retf
movs
add
mov
mov
xor
out
cmps
cmc
xor
push
sub
xchg
mov
mov
mov
data16
pusha
iret
mov
ror
test
pop
sbb
aad
cdq
dec
mov
sbb
inc
cld
(bad)
jl
out
push
test
lea
mov
jmp
fs
add
jecxz
adc
cmps
bound
mov
mov
psubsw
xor
sub
inc
inc
aas
dec
dec
fcom
adc
pop
cmp
mov
xlat
xabort
arpl
ja
dec
mov
or
fs
jecxz
psubsw
dec
sbb
xor
mov
cmp
adc
add
movs
(bad)
xchg
iret
lods
fdiv
daa
test
ficom
repnz
add
mov
jmp
sar
cmp
mov
in
jle
mov
or
inc
adc
outs
lods
(bad)
mov
leave
xchg
out
call
xchg
gs
mov
stos
xor
in
cmps
dec
add
xchg
jmp
in
out
fldenv
add
mov
aad
mov
push
aaa
ror
jnp
mov
pop
sahf
add
jne
cmp
pop
mov
xor
scas
cdq
push
ins
lods
and
imul
out
sub
fwait
add
das
in
jns
mov
mov
mov
push
inc
push
and
out
push
sub
push
xor
lods
retf
mov
and
xchg
bound
(bad)
cld
cmp
loop
js
sub
jae
mov
pop
xchg
mov
out
in
inc
xchg
movs
mov
imul
stos
xchg
sbb
ins
call
ret
xchg
retf
std
xchg
cvtdq2ps
mov
cs
mov
dec
jne
in
jge
or
imul
gs
sahf
sbb
adc
fadd
push
or
sub
mov
fdivr
inc
sbb
cmps
sub
cmp
pop
xchg
jmp
popf
jns
cmc
sub
mov
cmps
rdpmc
(bad)
data16
mov
mul
das
sbb
les
xlat
xor
mov
stos
mov
inc
call
ds
xor
sub
pop
mov
pop
and
jb
icebp
nop
std
adc
(bad)
mov
jmp
jb
adc
xor
and
loope
sub
jge
clc
push
repz
stc
mov
pop
xchg
stc
int3
das
in
pop
psllw
loopne
imul
(bad)
mov
or
jg
cmp
lds
fisubr
xchg
xchg
lsl
adc
mov
push
jmp
jmp
ror
and
mov
push
mov
mov
dec
out
jmp
int
cdq
or
adc
aas
call
and
clc
enter
pop
push
mov
cmp
call
inc
icebp
mov
aaa
cdq
dec
aas
std
clc
push
out
out
popf
xchg
sbb
add
fs
fild
xchg
lock
jmp
or
lds
xchg
sub
lds
fucom
cmp
pop
inc
bound
pop
mov
or
jmp
cld
xchg
nop
fsubr
loopne
push
stc
xor
inc
or
in
clc
jmp
pop
mov
adc
inc
pop
fstp
cmc
in
mov
cmps
cld
enter
mov
mov
or
in
in
sbb
or
jle
mov
xor
ret
adc
sub
and
repz
xor
push
dec
inc
lahf
sbb
mul
push
(bad)
movs
call
mov
pushf
in
pusha
xchg
popf
cmps
mov
add
mov
mov
mov
mov
shr
retf
ins
push
lods
or
inc
call
(bad)
push
aam
call
mov
lods
pop
pop
add
inc
jle
dec
test
into
in
retf
push
xchg
pop
mov
leave
dec
add
add
or
inc
fst
xor
pop
mov
nop
repz
and
inc
ficom
push
sahf
xor
jge
test
aam
jmp
xor
fcomp
jns
fidivr
(bad)
cmp
mov
or
pop
push
xor
stc
sbb
sub
stos
call
lds
mov
aam
loopne
mov
or
xchg
xor
js
sbb
fcomip
add
(bad)
popa
repnz
addr16
pop
mov
add
cmp
cwde
mov
jle
pop
fisttp
cmps
add
sbb
sub
push
add
pop
dec
push
ins
mov
add
pop
jg
(bad)
repnz
je
dec
repz
fs
jb
in
dec
xchg
mov
js
cmp
push
je
lods
push
bound
jnp
sbb
into
mov
sbb
push
adc
inc
out
dec
lods
push
std
lahf
test
and
xchg
xor
inc
(bad)
test
dec
daa
outs
and
rcl
fsubr
adc
inc
push
push
add
pop
jmp
or
stos
and
fist
jecxz
out
sbb
cmp
test
jge
or
in
in
bound
and
fidiv
push
sub
in
cli
movntq
sub
out
xor
inc
jmp
pop
lock
jg
pop
xchg
xchg
(bad)
shr
mov
mov
test
fbstp
dec
movs
lods
ins
into
mov
cli
sti
mov
or
je
call
mov
sub
cmp
in
jns
push
add
mov
hlt
js
imul
ds
lds
mov
jmp
mov
add
pop
scas
in
jns
mov
test
mov
pushf
inc
pop
jle
jle
inc
fwait
pop
xchg
jnp
loopne
ins
add
sbb
push
stos
in
push
jbe
push
in
pop
or
(bad)
pop
push
inc
out
jg
push
mov
mov
dec
mov
push
call
mov
and
std
adc
dec
mov
jne
iret
movs
jg
bound
mov
adc
or
xchg
movs
div
and
jge
ja
mov
add
jae
xchg
ins
sub
addr16
ds
in
jne
xor
pop
inc
jmp
pop
dec
mov
or
lock
jne
test
push
jmp
dec
jo
jo
faddp
jle
push
mov
or
xchg
je
add
jns
gs
imul
sub
sub
test
hlt
jecxz
pusha
inc
push
cmps
push
(bad)
(bad)
and
push
into
mov
(bad)
call
fcom
ja
movs
ret
pop
inc
cmp
sbb
int
fdivrp
ficomp
jbe
adc
out
dec
into
lahf
mov
jo
jae
fldenv
mov
push
imul
scas
cmp
sbb
das
adc
or
rcl
popf
jmp
outs
pop
cmp
or
arpl
inc
jmp
lods
push
push
aaa
cmps
xor
jae
shr
push
sub
inc
jg
cmp
rcr
imul
add
jecxz
push
dec
test
dec
pop
xor
aas
jle
inc
icebp
xor
sub
add
jecxz
xor
and
jno
rcl
xchg
sbb
push
lods
mov
stos
repnz
fadd
or
adc
and
xchg
loop
cmp
pop
inc
(bad)
mov
stos
or
push
scas
push
add
daa
cdq
sub
push
addr16
jmp
(bad)
cmc
cmp
cmps
adc
or
stos
and
outs
arpl
mov
call
das
call
pop
movs
aad
fcom
cmp
pushf
adc
(bad)
mov
arpl
test
outs
dec
and
retf
js
fld
cmps
cwde
pop
aam
jae
mov
jno
adc
or
pop
xchg
sub
sub
arpl
retf
jg
inc
lock
(bad)
inc
loope
ror
mov
(bad)
cmc
popf
stc
adc
mov
jns
inc
out
adc
jnp
in
ins
fst
bound
inc
(bad)
fadd
sbb
stc
sbb
fimul
cmp
fbld
test
into
or
fxch
retf
xor
add
in
(bad)
std
lahf
xor
pop
cmps
bound
pop
aaa
push
xchg
(bad)
rcr
push
jno
add
push
retf
cmp
sti
mov
push
test
call
pop
pcmpgtb
imul
lea
(bad)
and
dec
popa
cdq
jo
pop
pop
add
xor
sbb
mov
pop
push
int3
sbb
dec
ins
int3
pop
cmp
(bad)
mov
lods
aam
jo
sahf
xor
push
xchg
push
sti
ficomp
fild
jp
(bad)
scas
pop
ficom
gs
ret
scas
push
mov
cmp
jae
js
out
jne
jmp
mov
fnstenv
or
js
adc
mov
cdq
sbb
dec
(bad)
jle
imul
pop
jnp
out
adc
repz
pop
jae
mov
or
xor
call
sbb
cmp
aad
(bad)
pop
dec
mov
mov
xchg
pop
push
cmps
sbb
fadd
lahf
mov
scas
rcl
mov
pop
addr16
adc
sbb
xchg
stc
or
xchg
and
(bad)
retf
mov
fst
sar
mov
or
push
cmp
mov
sahf
push
in
pop
mov
js
loopne
xor
pushf
lea
icebp
pop
jns
mov
jmp
fldcw
outs
idiv
shr
mov
fdiv
sbb
lods
(bad)
fistp
cmp
jp
enter
dec
sub
aas
jno
xchg
pop
push
js
into
mov
and
scas
pop
push
out
push
test
and
stc
ret
int
clc
mov
push
push
clc
pop
stc
jge
ins
jl
repz
icebp
retf
push
xchg
push
pop
fld
out
cmp
popa
(bad)
dec
out
cmps
xchg
imul
imul
xor
cmp
(bad)
lds
pusha
mov
sbb
xchg
adc
mov
and
sysenter
in
xor
sub
jno
out
or
or
sbb
ds
stc
aas
xchg
dec
lock
aas
and
xlat
sbb
js
shl
jnp
lds
dec
outs
jle
in
and
ret
pop
(bad)
jmp
lea
fimul
(bad)
ds
xchg
fcom
or
iret
imul
xor
sub
xchg
mov
outs
jbe
jns
idiv
mov
jle
test
sbb
xchg
test
pop
pop
push
addr16
push
movs
inc
call
mov
int
iret
lea
mov
or
push
cmc
push
mov
pop
mov
loop
add
leave
mov
cmp
retf
push
adc
and
or
daa
cmp
mov
test
cld
test
in
enter
aam
retf
cmps
push
(bad)
cmp
es
xor
pop
sbb
jmp
xchg
push
in
mov
ds
sahf
icebp
call
xchg
pop
jmp
icebp
std
or
cmp
in
jp
mov
push
cmp
adc
inc
mov
xor
or
sub
hlt
lea
cli
xlat
shl
loopne
clc
inc
pop
outs
stos
and
mov
shl
xchg
lods
out
push
mov
cld
mov
jo
shr
sbb
repnz
or
push
dec
test
mov
push
pop
mov
movs
test
js
enter
iret
movs
cmp
mov
in
les
jmp
stos
xor
in
push
in
pusha
inc
xlat
sti
shr
mul
xchg
enter
ror
xor
add
pop
cmp
aad
add
push
sbb
icebp
cmc
pushf
inc
xor
in
jo
jno
or
dec
popa
cmc
and
sbb
test
cmp
inc
mov
sar
mov
xchg
cmp
enter
mov
inc
and
loop
outs
mov
cwde
cmp
add
jmp
lods
sbb
(bad)
pop
retf
popf
or
xor
(bad)
push
lods
jae
addr16
imul
dec
mov
xor
sub
retf
cmp
std
test
test
jae
mov
pop
rol
and
in
cwde
lods
std
mov
jg
mov
xchg
sub
jge
fbstp
mov
mov
cmps
xchg
mov
(bad)
stos
cmp
lock
sbb
popa
dec
rol
lds
cmps
test
pop
mov
jg
popf
jne
push
dec
cmp
int
push
cli
mov
fcomp
or
inc
xor
sti
mov
push
repz
gs
gs
push
or
and
pop
dec
and
adc
pop
ja
cmps
dec
call
stc
mov
and
jle
(bad)
adc
push
cmc
inc
or
xchg
mov
pop
mov
mov
or
mov
xchg
add
inc
xor
jb
jnp
xchg
mov
sahf
jo
cmc
sbb
sub
cwde
jl
inc
loop
lea
(bad)
into
mov
out
xor
iret
mov
daa
and
mov
mov
xchg
adc
mov
rcl
fdivr
lods
sbb
aaa
inc
push
cs
aaa
cmc
push
(bad)
pop
sub
jbe
dec
sahf
mov
cli
jb
push
pop
es
aaa
mov
(bad)
shr
nop
jg
int3
push
sti
and
int3
push
or
or
mov
pop
rcl
or
test
imul
mov
inc
ror
jmp
stos
cmp
rol
lds
movs
jbe
jg
ret
repz
ss
stc
loopne
dec
mov
fucomp
cmp
ss
rcr
xchg
mov
mov
mov
shr
inc
push
add
gs
mov
icebp
pop
fnsave
or
scas
mov
test
ficom
adc
jp
push
sub
ja
add
xchg
adc
(bad)
leave
out
mov
(bad)
jl
adc
movs
sub
mov
mov
pop
and
out
xor
sub
and
dec
jg
sub
out
push
(bad)
cmps
mov
mov
out
or
mov
leave
fs
mov
pop
loopne
pop
mov
add
sub
and
fisttp
adc
adc
test
mov
(bad)
jmp
jp
add
adc
cmc
sbb
js
adc
pushf
ss
cmp
and
bound
loopne
adc
xchg
jae
fnstcw
mov
dec
dec
fistp
movs
xchg
cs
test
push
rcl
or
add
(bad)
hlt
lods
pop
movs
jno
and
jbe
addr16
pop
jecxz
lods
xor
ins
(bad)
pmaxub
xchg
lods
cmp
icebp
sub
mov
dec
enter
add
and
mov
test
or
imul
std
loopne
out
(bad)
mov
jmp
push
jnp
jg
inc
ins
pop
inc
cmps
inc
leave
mov
test
mov
inc
adc
test
cs
xor
add
popf
movs
push
sbb
into
popa
leave
aas
gs
inc
movs
into
inc
and
sti
sub
cmp
or
jle
pop
(bad)
inc
push
inc
sar
fs
pusha
test
leave
call
xor
mov
mov
cs
push
and
dec
faddp
inc
enter
imul
adc
inc
test
ret
xchg
pushf
es
sub
push
jnp
lds
lods
test
es
dec
adc
dec
sub
jl
shr
dec
xor
mov
mov
cld
lahf
cmp
pop
xor
sti
mov
and
mov
mov
pop
gs
dec
dec
sub
sbb
mov
xor
adc
pop
sbb
call
arpl
and
mov
add
inc
ja
mov
loop
fst
rcl
push
fnstcw
stos
xchg
popf
jno
xchg
sar
pop
fwait
clc
push
sub
data16
pop
inc
stc
xor
rol
fld
pusha
dec
std
mov
xchg
xchg
sbb
inc
pop
in
movs
fild
xor
repz
jecxz
xchg
inc
jmp
imul
sub
and
retf
pop
int
add
lds
dec
sub
(bad)
cli
cld
push
xchg
imul
pop
loope
mov
cmps
hlt
ret
lds
sbb
fsub
fadd
mov
iret
outs
fwait
inc
add
popf
or
std
or
les
push
pop
scas
push
push
test
lds
sbb
push
cdq
push
fisubr
sahf
mov
jp
arpl
int3
stos
lods
mov
gs
movs
dec
jns
aam
jge
dec
stos
imul
inc
adc
mov
imul
sub
leave
and
inc
jno
jmp
mov
pusha
stos
pop
bnd
sbb
cmp
mov
xlat
pop
inc
or
(bad)
movs
mov
js
add
cmp
jb
xlat
mov
push
cld
jne
retf
scas
inc
pop
pop
push
in
pop
sub
fst
cmp
loope
and
sub
adc
pushf
push
push
cmp
cmp
push
xchg
cli
popf
mov
ja
dec
xlat
jmp
cwde
mov
aas
retf
imul
je
test
xchg
mul
stos
or
sbb
push
popa
mov
xchg
push
pusha
out
adc
test
ret
sub
gs
outs
xor
fiadd
mov
leave
push
out
and
mov
jae
cmova
out
pop
(bad)
xlat
cs
mov
fnstsw
mov
dec
int3
jne
xor
sbb
cmps
popf
cmp
cmp
int3
(bad)
adc
cmps
push
rcr
jns
xor
and
jmp
retf
pop
(bad)
cmp
adc
jl
popf
sbb
pop
imul
test
cdq
xchg
cli
sub
in
dec
ins
xchg
pop
rcr
jae
loopne
and
pop
int
ja
push
mov
retf
das
push
xlat
leave
imul
in
fistp
jp
inc
cmps
stc
aaa
push
aas
inc
fdivr
pop
aam
packuswb
inc
push
or
mov
sbb
in
das
retf
pop
sti
jnp
pop
adc
fadd
push
test
jmp
xor
mov
mov
jmp
shl
ds
adc
popa
cmp
cmp
adc
jbe
mov
pop
enter
test
iret
pmullw
shl
call
push
mov
mov
test
popa
(bad)
in
mov
xchg
jbe
mov
(bad)
sti
cmp
jecxz
lock
dec
aaa
push
or
mov
cld
test
push
int
sti
push
stc
sub
leave
mov
stc
and
push
dec
les
repnz
or
scas
and
xchg
adc
push
xchg
mov
mov
inc
repz
(bad)
into
inc
test
mov
retf
fld
lock
data16
retf
aas
sbb
or
push
icebp
outs
fidivr
jp
cmps
retf
addr16
adc
jl
arpl
stc
aas
(bad)
loop
outs
jle
sbb
leave
and
fdivr
das
mov
stc
cmps
imul
stos
sub
mov
mov
mov
(bad)
pushf
cmp
cmp
cdq
mov
pop
icebp
aam
xlat
mov
mov
shl
mov
xchg
xlat
or
mov
inc
and
lea
fmul
retf
jmp
push
or
dec
adc
inc
dec
jge
ds
and
out
xchg
ins
outs
and
push
xor
hlt
sub
retf
js
or
xor
jo
mov
dec
sbb
xor
push
jbe
and
xchg
aas
les
rcl
js
and
cmp
mov
das
xor
sub
pop
mov
mov
icebp
lods
stos
or
dec
ja
sbb
rcr
mov
and
inc
imul
pop
or
and
gs
out
push
pop
xor
aas
mov
mov
das
aaa
mov
fistp
add
push
aas
add
pop
sbb
xchg
ja
mov
mov
or
mov
adc
into
push
aas
test
jo
ja
out
jns
repnz
jne
into
pop
js
push
and
int
xchg
mov
push
out
repnz
and
outs
popa
mov
fs
mov
(bad)
and
xchg
adc
repnz
mov
mov
pop
sub
mov
pop
xchg
test
movs
xchg
xor
std
cmp
lods
xchg
pop
imul
mov
into
push
inc
mov
(bad)
xor
shr
loop
jnp
lods
mov
cmps
xor
xchg
adc
pop
jmp
xchg
icebp
popf
add
sahf
jbe
lea
repz
in
add
pop
arpl
loope
jge
out
sub
inc
js
fcom
and
inc
rol
jns
pushf
jp
lods
stos
retf
xchg
xchg
sub
xchg
call
fnstsw
stc
daa
pusha
xor
or
fcmovnu
mov
test
shl
xchg
jecxz
mov
out
ds
pop
mov
pop
cmps
pop
data16
xor
retf
imul
mov
cmp
cmp
aam
call
push
cmps
fisub
call
xchg
xchg
mov
xchg
inc
add
loopne
push
lea
scas
arpl
fnsetpm(287
push
mov
xchg
or
popa
sub
jb
dec
cli
add
xor
and
test
popf
mov
adc
(bad)
and
movs
mov
xchg
pop
mul
adc
add
ins
jp
pusha
jle
pop
adc
into
lods
ss
xor
call
mov
fisubr
sahf
dec
or
pop
pop
and
fidiv
xchg
mov
jge
or
push
test
cs
pop
test
lahf
enter
xchg
mov
stc
jae
pop
push
cmp
stos
mov
or
loop
push
jecxz
mov
stos
jl
add
pop
xchg
inc
push
loope
lds
push
adc
stos
push
aaa
push
push
and
enter
daa
push
mov
adc
repnz
sub
sub
ror
jno
test
jecxz
stos
mov
mov
jne
xchg
mov
int
dec
imul
sbb
jmp
ficom
adc
mov
(bad)
popf
scas
inc
add
or
ss
push
imul
jmp
cmp
(bad)
ss
push
mov
xchg
mov
push
(bad)
movs
xchg
sbb
jne
(bad)
xor
lods
lock
pop
outs
add
lahf
aas
movs
stos
fs
and
sbb
or
imul
jmp
push
push
add
sbb
push
out
push
mov
lods
fisub
fdivr
int3
(bad)
xchg
jp
mov
repnz
dec
and
sbb
pop
pop
repnz
int
mov
fst
hlt
and
push
cmp
and
int3
out
sub
aaa
cmp
add
inc
push
lahf
les
imul
mov
xchg
and
push
(bad)
int3
scas
cwde
add
dec
mov
push
nop
popf
repnz
sar
and
inc
sbb
or
pop
cdq
xchg
or
and
pop
pop
xor
retf
int3
mov
cmp
and
movs
or
lods
int3
mov
test
aas
inc
jae
in
mov
cmps
dec
pop
dec
xchg
fcmovne
test
sub
gs
push
dec
out
jle
xor
lock
sbb
cdq
adc
push
fstp
in
das
sbb
cld
mov
mov
mov
add
call
or
inc
iret
or
mov
inc
lahf
ss
imul
or
out
test
and
or
(bad)
mov
clc
jmp
bound
mov
sti
retf
jle
push
out
div
mov
inc
mov
lock
cdq
scas
jb
push
jns
sub
pop
in
add
mov
xchg
sbb
sub
cld
retf
cmc
pop
xchg
dec
jge
adc
dec
fadd
jl
shl
das
mov
mov
mov
(bad)
arpl
mov
sbb
mov
dec
xor
popa
into
xor
stos
sub
inc
dec
pop
daa
mov
out
daa
shl
sahf
inc
cmp
or
jl
xchg
adc
outs
inc
inc
repz
pop
cwde
aas
aaa
in
xchg
test
imul
shr
pop
fsubr
sti
and
in
add
mov
mov
inc
inc
jmp
cmp
pop
cmp
out
mov
fcom
xor
pop
int3
fst
int
pusha
sub
dec
inc
mov
pop
cmc
std
pop
in
fs
adc
mov
data16
sub
movs
std
sbb
test
repz
mov
movzx
sbb
movs
mov
push
inc
mov
inc
daa
or
dec
pop
shl
daa
(bad)
shl
xchg
adc
arpl
or
into
in
inc
addr16
push
fistp
imul
sbb
outs
imul
outs
stos
fst
scas
push
xchg
mov
sub
mov
pop
outs
xchg
push
shl
push
outs
inc
and
(bad)
dec
not
out
fs
dec
dec
out
mov
fwait
adc
sub
bound
mov
xor
xor
mov
inc
nop
loop
push
stos
xchg
jge
bound
retf
rol
and
dec
push
and
cmp
adc
inc
adc
aad
int
std
jg
bound
jne
sbb
lock
in
bnd
pop
call
push
jmp
repnz
and
mov
xor
(bad)
mov
xchg
push
stos
shr
aad
sub
jae
push
cmp
push
jl
mov
movs
out
pop
movs
fnstcw
sub
fist
leave
das
movs
(bad)
jns
and
pop
int3
mov
fdiv
mov
sub
mov
fisubr
(bad)
push
sahf
outs
or
aas
jp
mov
cli
scas
dec
xchg
ins
leave
stc
and
cdq
popa
lea
adc
mov
test
add
imul
clc
addr16
test
mov
jnp
mov
sbb
adc
jge
push
mov
cli
call
adc
loop
imul
adc
mul
sti
outs
ret
fst
jne
imul
push
mov
ret
lock
sbb
pop
les
loope
jle
retf
outs
xor
lahf
outs
imul
ins
jge
inc
fcmovne
leave
cwde
test
jb
dec
xchg
mov
out
retf
loop
call
repz
push
and
(bad)
idiv
sub
jp
daa
loope
push
mul
popa
loope
(bad)
mov
sbb
push
pushf
pop
push
add
ja
jmp
enter
popf
stc
fsubr
sub
das
out
sub
arpl
push
dec
shl
jb
outs
xchg
aaa
in
out
fdivp
or
mov
dec
add
xor
xor
das
shl
mov
outs
xchg
pop
ds
xchg
push
cmp
xor
outs
adc
popa
and
ja
pop
es
jae
(bad)
(bad)
mov
xor
call
or
loopne
aaa
pop
mov
sbb
jns
clc
and
mov
inc
(bad)
sub
cwde
xchg
push
out
inc
add
fadd
pop
pusha
aaa
mov
jg
mov
adc
push
push
enter
mov
sub
iret
mov
xor
lahf
rcl
xchg
adc
js
sbb
adc
(bad)
fcmovb
xlat
push
adc
push
xchg
mov
in
retf
imul
sbb
inc
add
inc
mov
mov
xchg
or
inc
popf
stos
cld
xchg
mov
sub
popa
or
repz
xlat
sbb
lahf
xor
(bad)
and
nop
xor
icebp
lahf
xchg
popf
inc
mov
add
mov
ds
call
sub
and
xchg
xor
dec
cmc
ffreep
and
push
ins
popf
cmp
loop
and
in
jmp
aaa
in
jmp
jne
sub
push
in
movs
jb
dec
iret
retf
push
xlat
cmp
jecxz
xchg
(bad)
mov
rol
iret
add
out
(bad)
xchg
arpl
push
fild
mov
jae
(bad)
in
cs
dec
cmp
xchg
cwde
add
mov
lock
je
(bad)
loop
push
test
sbb
sbb
ror
xchg
fidivr
lods
and
mov
popa
ins
and
push
pop
mov
daa
xor
cmps
mov
(bad)
sar
sbb
lods
xlat
nop
inc
nop
and
dec
out
xor
mov
jecxz
add
(bad)
(bad)
stc
jb
call
sub
scas
in
jle
loope
lds
(bad)
mul
add
fimul
rcl
pop
ret
lods
sbb
dec
sbb
mov
xor
sar
dec
inc
jl
sbb
inc
(bad)
xor
stc
stos
inc
retf
jmp
push
and
jg
fwait
lahf
popa
pop
icebp
xor
mov
aaa
and
and
outs
clc
imul
dec
sahf
and
pop
cmc
sub
mov
fs
addr16
mov
or
and
ins
icebp
(bad)
outs
es
push
jge
push
loop
or
sub
push
arpl
aad
adc
xchg
lock
loop
call
(bad)
adc
stos
dec
retf
daa
outs
mov
arpl
test
aas
daa
xchg
mov
cwde
sar
int3
aas
cmp
ins
xchg
cdq
or
lock
pop
mov
jecxz
jns
and
mov
dec
test
leave
shl
inc
popf
nop
inc
out
(bad)
cmps
fsub
std
out
push
in
popa
dec
mov
call
cmp
push
dec
call
add
enter
ins
scas
add
dec
jns
cwde
ret
mov
or
out
pop
mov
or
jle
dec
pop
jbe
out
(bad)
xchg
fisttp
out
add
jbe
jo
xor
dec
mov
ins
pop
cmp
xor
or
bound
cmp
dec
jb
sbb
movs
daa
adc
ja
movs
imul
adc
cli
inc
(bad)
push
imul
(bad)
je
fstp
(bad)
and
scas
add
add
push
aam
out
sbb
mov
inc
or
cmps
pop
arpl
aas
mov
das
sub
adc
jp
ja
pop
inc
adc
sbb
into
es
movs
je
lahf
sub
clc
out
cld
in
or
in
lds
icebp
(bad)
and
out
xchg
dec
or
test
jle
xchg
stos
aaa
sub
pop
pop
pop
mov
dec
cmp
jo
jmp
out
mov
inc
sub
push
mov
jnp
mov
xor
repz
xchg
pop
add
call
repnz
int
sub
je
add
shl
popa
push
or
int3
pop
cli
test
arpl
sbb
dec
xor
into
mov
xchg
fstp
pusha
mov
ret
xor
retf
pop
jbe
xchg
xchg
mov
or
cmp
dec
and
jge
fdiv
fstp
push
popf
mov
jmp
inc
cmps
xor
pushf
(bad)
scas
xor
out
in
daa
fsubrp
loope
cmp
jle
cmp
test
xchg
add
jp
mov
sbb
xor
push
aam
sub
inc
and
fs
push
in
mov
sbb
retf
dec
fs
out
xor
ins
and
out
out
mov
jae
mov
jmp
out
jl
fs
xchg
adc
iret
cmp
jb
cmp
cli
fs
mov
data16
aad
stc
adc
add
test
movs
test
cmp
xchg
xor
mov
fst
pusha
dec
ret
outs
ficom
mov
icebp
push
xor
imul
addr16
and
jecxz
imul
add
jb
xchg
ins
cmp
cmps
dec
jns
sub
out
int3
jle
ja
rol
xor
(bad)
enter
sub
fwait
les
out
(bad)
inc
cdq
mov
popa
inc
loope
cmps
add
jecxz
cvtdq2ps
and
add
aad
aaa
jno
pop
in
cmp
xchg
xchg
add
and
outs
ret
cmp
in
das
sti
shr
xchg
cwde
mov
adc
jp
cmp
shr
lods
cmc
mov
adc
lahf
push
inc
fild
mov
inc
push
adc
sbb
jmp
mov
test
sub
inc
stos
push
inc
inc
mov
xchg
in
cli
add
movs
push
loop
and
or
mov
les
mov
cmp
fdiv
sbb
pop
pop
jmp
(bad)
mov
mov
jmp
jnp
cmp
pop
jb
cdq
shl
lods
mov
add
out
pop
push
fcom
mov
test
cmp
inc
das
fcmovnb
and
sahf
lods
pop
sub
ins
fstp
clc
fld
pushf
adc
nop
mov
jae
mov
mov
test
out
je
call
pop
outs
loop
vpsraw
jns
jp
ins
pop
mov
sub
sti
or
pop
inc
adc
pop
ins
cli
cmc
je
stc
inc
scas
iret
pop
mov
xchg
jae
imul
push
ficomp
mov
or
xor
xchg
jae
xor
cli
dec
xchg
push
mov
mov
mov
(bad)
mov
pop
pushf
push
adc
sbb
push
xor
xor
loopne
adc
inc
mov
or
(bad)
inc
std
cli
mov
outs
pop
or
dec
inc
sti
mul
stc
in
cmp
pop
add
movs
cmp
xchg
xchg
rcl
imul
ds
dec
mov
das
cs
and
pushf
mov
jb
repnz
sub
jecxz
fisttp
cmp
lock
adc
shr
push
ror
mov
push
lahf
inc
or
adc
mov
int
cwde
jl
xchg
xchg
inc
je
bound
xchg
mov
sub
scas
pusha
stos
sub
std
mov
add
popa
out
inc
retf
test
fadd
push
mov
or
cmp
in
dec
loop
fwait
pop
or
adc
outs
inc
push
xor
jae
(bad)
int3
fs
inc
add
and
jb
inc
xchg
repz
fsubr
in
test
(bad)
(bad)
mov
or
adc
sub
test
repz
inc
ret
icebp
mov
or
fnstcw
and
inc
adc
jb
lods
mov
inc
fiadd
repnz
jp
adc
out
popa
jb
mov
or
jmp
or
lahf
sub
loopne
int
bound
jl
mov
sahf
stos
add
mov
mul
sahf
push
clc
jp
or
mov
mov
pop
sub
add
pop
das
add
and
jnp
dec
jecxz
xchg
call
sahf
cld
jg
mov
xchg
aad
adc
mov
gs
test
les
scas
sbb
inc
dec
jnp
ja
movs
movs
dec
pop
push
das
xchg
mov
pop
push
xor
xchg
ja
mov
and
pop
out
cmps
mov
lea
pop
loop
sbb
mov
dec
fcomp
dec
loop
aas
repz
or
iret
shl
sub
push
ret
dec
xchg
out
jl
pop
jne
jg
iret
cmp
into
add
in
xlat
jle
and
or
pop
add
aas
int3
or
push
stos
jb
inc
push
adc
mov
or
pop
(bad)
cld
mov
cwde
lds
jmp
std
xchg
(bad)
lods
add
(bad)
test
ret
sbb
adc
jge
pop
outs
repz
xor
jmp
push
cmc
shr
ret
dec
xchg
mov
and
push
in
ret
test
adc
pop
push
jne
xchg
sub
dec
jg
and
sub
(bad)
fisubr
jmp
push
aam
or
ds
iret
mov
sbb
fst
pop
fistp
shr
call
cmp
xchg
ins
jp
push
out
(bad)
fs
xchg
xchg
push
(bad)
enter
dec
cmp
idiv
pop
popa
add
sbb
sbb
out
jo
pop
enter
lds
cmp
loopne
pop
or
cmp
adc
rcl
sbb
lds
mov
loopne
(bad)
lods
push
into
pop
lea
xchg
dec
stc
jne
out
adc
ret
or
aad
mov
hlt
sbb
aas
adc
xchg
(bad)
cmp
pop
mov
call
jbe
les
mov
icebp
inc
test
mov
int3
or
adc
je
sar
mov
push
push
pop
aaa
mov
xor
out
repnz
mov
(bad)
hlt
cmc
mov
mov
inc
dec
jo
aam
adc
or
fisub
leave
push
push
mov
inc
or
sub
pop
xor
xor
aaa
ret
(bad)
lahf
mov
inc
jbe
cmps
dec
loope
push
adc
data16
jb
inc
loopne
clc
in
xchg
xor
dec
in
mov
sub
adc
inc
and
lods
loopne
hlt
outs
jbe
xchg
test
shl
xchg
mov
push
mov
addr16
cmp
push
jmp
call
test
(bad)
and
jg
dec
(bad)
repnz
stos
icebp
mov
pusha
push
out
adc
mov
mov
pop
mov
add
and
push
les
cmp
stos
jmp
push
out
sbb
or
test
lds
mov
dec
mov
push
sub
pop
jmp
dec
(bad)
rcl
scas
xor
lods
outs
les
ret
mov
push
mov
adc
ret
(bad)
hlt
and
add
jge
das
mov
xlat
push
mov
add
cld
sti
ss
push
call
cdq
int
hlt
mov
mov
fsub
cld
clc
push
ret
fild
in
ret
lods
add
js
ins
rcl
dec
ss
enter
ss
jg
adc
xchg
xchg
cmps
or
lds
imul
dec
jg
inc
mov
cmp
inc
scas
stc
mov
pop
ror
inc
mov
mov
loope
pop
ins
add
jb
mov
fld
sub
int
dec
mov
inc
pop
push
scas
jg
aam
retf
inc
jecxz
hlt
leave
jp
push
xor
outs
sbb
or
repnz
dec
(bad)
cmp
cld
(bad)
mov
xchg
sub
jg
loopne
sbb
jnp
or
out
pop
dec
shl
adc
outs
movs
jge
bound
sbb
bound
mov
add
jns
test
xchg
movs
and
cmc
lea
nop
dec
fiadd
xor
mov
gs
repnz
inc
jo
arpl
int3
ss
imul
xor
pop
ins
scas
push
xor
push
and
adc
das
sahf
and
nop
add
or
imul
out
mov
xchg
and
mov
inc
scas
mov
inc
inc
cmps
sub
sub
or
mov
sub
outs
push
cwde
or
popa
mov
int
cmc
xlat
xchg
mov
lods
inc
mov
fistp
int
xchg
std
xor
rcr
mov
pop
jg
dec
in
cmp
hlt
pushf
lock
dec
or
xchg
in
sub
sar
xor
and
loop
jb
push
les
and
iret
cmp
cwde
jns
pop
jle
mov
pop
sbb
xchg
aam
sar
jg
dec
cmp
das
sub
push
mov
loope
or
mov
ss
sbb
adc
pop
clc
repz
jl
cli
call
xchg
sbb
test
nop
jmp
out
inc
or
jmp
pop
adc
arpl
in
adc
mov
jg
(bad)
jne
xchg
xchg
adc
int
outs
imul
rcr
xchg
mul
(bad)
fmul
inc
dec
xchg
call
cld
mov
ret
inc
sti
lods
imul
push
cmc
je
and
inc
bound
dec
fsubr
test
jne
sub
mov
aad
sbb
ins
mov
adc
mov
test
cwde
scas
xchg
jmp
adc
cmp
lea
mov
and
(bad)
sbb
out
test
mov
mov
je
sub
fldenv
movs
dec
inc
or
pop
cmc
sahf
jle
lds
jl
mov
add
inc
scas
jne
push
sti
movs
dec
cmp
movs
mov
sahf
push
cdq
addr16
outs
push
loope
gs
cdq
movs
push
cmp
dec
and
in
mov
add
mov
mov
shl
ficomp
mov
mov
mov
stos
and
out
sbb
not
fwait
or
inc
jnp
pop
inc
jae
sub
mov
dec
jo
push
inc
cmc
pop
fcomp
clc
ds
mov
jmp
imul
fstp
jbe
in
and
dec
adc
cmps
(bad)
daa
dec
mov
imul
stc
mov
test
add
gs
ror
sahf
sbb
ja
jecxz
push
in
imul
fst
push
lods
jg
sub
aaa
mov
mov
sub
pop
mov
cli
adc
xchg
leave
push
ja
and
mov
pusha
xchg
jns
loop
sbb
cmc
outs
rcl
icebp
cmc
out
imul
jmp
pop
test
adc
mov
popa
(bad)
aaa
jp
jb
sub
push
not
test
pop
jmp
xor
js
(bad)
pop
inc
xor
icebp
int
aas
jp
outs
xchg
mov
leave
retf
and
imul
call
inc
jp
sbb
sti
mov
inc
xchg
out
sbb
add
push
lods
adc
jae
(bad)
adc
mov
not
add
xchg
push
mov
add
and
jl
jns
add
mov
pop
cli
jnp
inc
and
retf
fst
call
into
mov
xrelease
pop
xchg
je
and
xchg
shl
inc
sti
cs
mov
inc
ins
sub
test
test
retf
or
nop
mov
push
jnp
xor
push
sub
dec
fsubrp
push
cmp
cmp
rcl
enter
inc
outs
mov
lahf
div
pushf
out
add
adc
outs
xchg
inc
test
arpl
lods
cmp
fs
leave
and
minps
fdiv
jns
fisttp
outs
(bad)
lahf
dec
xchg
loopne
lods
(bad)
clc
cmp
sbb
shr
fdivrp
test
cmp
scas
ja
fbstp
pop
mov
aaa
test
call
jbe
in
mov
movs
sbb
ds
ss
cmp
call
cmp
repz
movs
dec
les
push
or
es
and
lock
add
mov
cdq
xor
mov
add
cs
fsubrp
mov
cmc
stos
mov
daa
dec
test
es
adc
sub
adc
mov
or
loop
arpl
movs
xchg
test
imul
jne
cmp
pusha
mov
mov
rcl
daa
les
cdq
inc
and
leave
sti
fidivr
push
ins
rol
stos
jb
dec
addr16
and
sar
mov
call
stos
push
iret
or
pop
shl
dec
add
sbb
scas
add
pushf
and
pop
mov
lahf
shl
push
loopne
dec
inc
cmp
jle
xchg
fild
cli
ror
fxch
in
call
ror
push
jmp
loopne
mov
mov
mov
movs
(bad)
mov
stos
jns
inc
adc
repz
inc
add
push
jmp
pop
repnz
or
mov
cld
push
rcr
jecxz
xor
retf
cmovge
sub
push
inc
xchg
sub
es
mov
repz
xchg
mov
lds
pop
mov
adc
loope
std
ins
fidiv
repnz
lea
ins
fst
popf
lods
repz
aaa
aas
je
mov
mov
push
nop
int3
movs
pop
push
push
fsubr
hlt
jb
xlat
or
ds
enter
jl
mov
and
xor
mov
and
xor
mov
js
and
stos
sti
cmp
test
inc
imul
imul
mov
push
bound
gs
cmp
mov
ins
push
pop
out
and
test
jge
test
ins
in
sbb
or
lahf
push
sub
xor
or
inc
ror
sub
or
push
pop
fiadd
cmp
popf
out
out
mov
int3
leave
aad
mov
(bad)
ins
mov
(bad)
pop
(bad)
retf
icebp
cmp
xchg
(bad)
push
test
or
push
sub
xchg
ficom
test
jne
xor
push
cwde
(bad)
sbb
jne
arpl
pop
daa
inc
adc
mov
scas
pop
lds
inc
pop
pop
sahf
out
(bad)
mov
lea
imul
mov
and
inc
or
xor
ret
lods
cmc
jae
or
rcl
movs
call
test
movs
xor
jle
ins
add
hlt
mov
jno
or
pop
shr
mov
fidivr
jle
and
movs
pop
pusha
cmc
jl
and
or
adc
sub
sbb
enter
xor
jp
dec
test
test
pop
xor
mov
or
jmp
xchg
cmp
cdq
mov
push
xchg
cwde
cmp
or
push
test
mov
in
xchg
in
adc
nop
xor
mov
dec
mov
push
pop
call
jge
imul
retf
mov
xchg
std
cmps
jo
enter
fs
std
fmul
sub
movs
ror
pop
sub
and
cwde
ret
add
es
dec
pop
mov
xor
fldenv
stos
in
test
sub
push
inc
ret
(bad)
push
(bad)
std
cmp
(bad)
(bad)
std
lock
ret
fmul
mov
fiadd
out
xchg
jmp
mov
jp
xchg
push
shl
jge
popa
lea
add
repz
cmp
shl
retf
jmp
sbb
xchg
inc
cmps
pop
and
pop
sub
inc
adc
fmul
movs
call
das
ret
aam
ret
out
sub
xchg
add
ret
mov
sub
mov
cmp
das
ins
pop
aad
push
cmp
inc
sti
and
sbb
dec
inc
xor
ss
scas
outs
and
adc
(bad)
fsubr
push
xor
mov
push
push
cmps
dec
sbb
and
or
popf
xchg
mov
add
rcl
stos
sub
cmp
loope
mov
dec
push
xchg
push
xor
sti
enter
jle
ss
loop
push
(bad)
pop
mov
outs
jecxz
sub
sub
mov
xchg
jns
pop
cmp
pop
mov
jmp
mov
aaa
(bad)
xor
or
imul
fwait
stc
adc
mov
push
std
mov
fs
scas
jmp
imul
fnsetpm(287
(bad)
pop
lock
inc
iret
not
(bad)
daa
das
(bad)
xor
mov
out
iret
aam
cli
and
stos
data16
das
add
xor
scas
inc
(bad)
repz
adc
pop
inc
cmp
dec
adc
sub
dec
add
pop
pushf
pop
imul
test
cdq
idiv
shr
xor
(bad)
loopne
in
jle
test
jp
add
pop
dec
mov
push
aaa
mov
inc
cmp
xchg
xchg
mov
xor
mov
inc
test
sbb
inc
jp
sbb
lods
and
sbb
leave
rcpps
cmp
bound
and
fiadd
dec
retf
shr
push
push
cmps
inc
jmp
jecxz
add
pop
lea
mov
jmp
jmp
mov
cld
int3
in
jg
outs
sbb
xchg
push
js
dec
leave
pop
sub
ins
aaa
dec
pop
rcr
test
dec
push
cwde
cdq
into
inc
inc
jecxz
scas
mov
push
int
pop
mov
cli
out
pop
xchg
xchg
mov
dec
jmp
setle
pop
retfw
shl
inc
je
mov
test
les
les
or
rol
dec
(bad)
dec
jne
or
lods
pop
test
cld
mov
and
pop
push
lock
retf
cmp
add
inc
jle
mov
mov
mov
mov
sub
push
sbb
(bad)
outs
inc
test
ficom
es
pop
in
push
test
mov
pushf
outs
sub
xlat
fst
jp
add
ins
(bad)
cmp
jae
push
mov
mov
cmp
and
call
(bad)
sub
mov
shl
movs
aam
lods
pop
mov
mov
jp
adc
mov
dec
jbe
fnop
into
loop
mov
jl
shl
push
push
jp
movs
stc
pop
mov
js
mov
xchg
pop
mov
sub
rol
mov
mul
pushf
(bad)
mov
not
jne
popf
repnz
push
fcom
sbb
ins
movs
adc
or
xchg
cmps
push
das
mov
imul
jo
fild
imul
xchg
inc
test
xchg
and
dec
sbb
jl
sar
inc
ret
mov
jbe
shr
out
cmps
and
push
pop
xchg
sti
push
cmp
xchg
fadd
movs
xlat
popa
dec
sub
rcr
shl
ds
cmps
add
div
push
nop
fld
push
push
mov
imul
cmp
test
push
and
lea
and
cmp
nop
or
xor
popf
mov
sbb
dec
mov
jnp
stos
(bad)
cmp
aas
gs
bswap
fisttp
mov
aad
or
sbb
cwde
adc
adc
fnstcw
hlt
leave
clc
mov
xor
nop
sbb
inc
inc
retf
scas
push
mov
xchg
stos
push
mov
adc
mov
dec
mov
lahf
or
js
fistp
in
jmp
mov
mov
gs
mov
or
call
sub
fdivrp
dec
or
int
or
into
fdiv
add
in
add
leave
xor
push
xor
push
ds
push
(bad)
sbb
mov
out
cdq
ins
addr16
test
jnp
cmp
pop
adc
pop
lds
jecxz
stos
or
nop
daa
jmp
ds
adc
dec
mov
ins
test
call
call
sbb
sbb
sbb
pop
mov
rcr
mov
pusha
dec
dec
enter
mov
sub
xchg
jmp
test
push
pop
jbe
test
data16
jle
jb
(bad)
ds
data16
retf
adc
mov
ret
push
xchg
jno
leave
daa
cmp
add
fist
(bad)
test
jns
inc
cmp
bound
sbb
mov
mov
rcr
jne
mov
push
lahf
jecxz
retf
arpl
daa
outs
push
ins
xlat
jecxz
scas
add
movs
xchg
(bad)
data16
push
sti
jnp
mov
mov
dec
sbb
(bad)
push
(bad)
iret
xlat
mov
dec
pop
outs
mov
push
ds
pop
fisttp
test
or
add
sbb
push
mov
and
adc
cmp
jecxz
push
in
jle
nop
cmps
in
add
inc
cmp
out
std
clc
or
inc
jns
out
retf
pop
push
add
leave
adc
dec
sbb
inc
push
jge
and
pop
push
pop
inc
dec
or
sahf
iret
ret
icebp
jmp
cmps
mov
cmp
mov
imul
ror
cdq
into
dec
fwait
jo
aad
aaa
pop
bound
mov
push
push
sti
jmp
add
mov
mov
daa
mov
push
cli
mov
enter
or
icebp
lods
cs
out
cmp
pop
or
inc
or
stos
lock
add
inc
push
adc
pop
ror
icebp
sub
popf
dec
jmp
sbb
xor
sbb
sub
pushf
adc
adc
dec
out
add
imul
outs
int
mov
inc
test
xchg
movs
xchg
push
mov
movs
add
push
je
(bad)
cmc
adc
add
ja
and
test
add
sbb
not
jg
sbb
dec
jne
les
out
les
xchg
push
cmp
aas
fcmovnb
or
frstor
sub
push
shr
mov
fimul
dec
mov
addr16
(bad)
fst
in
fs
dec
sbb
mov
lds
mov
fbstp
dec
popa
jnp
inc
push
adc
js
neg
daa
add
xchg
rcr
mov
ins
fdivr
imul
pop
comiss
mov
or
sub
aaa
adc
xor
cmps
adc
sahf
(bad)
loop
call
jecxz
in
inc
rol
cmp
std
jno
inc
dec
push
ret
pop
push
cmp
sahf
mov
mov
add
sbb
mov
push
pop
lods
xchg
sub
jno
je
inc
lods
fs
dec
(bad)
sbb
rcl
dec
mov
fs
cmp
in
arpl
or
cdq
mov
push
sbb
test
jne
mov
cmp
xlat
dec
or
test
retf
pop
xchg
xor
inc
icebp
cmp
push
push
fsubr
outs
lds
sub
fs
sub
pusha
out
cs
enter
mov
stc
in
ret
cwde
inc
retf
daa
leave
cmp
int
jecxz
xchg
ret
pop
pop
outs
push
jno
xor
mov
dec
add
outs
out
or
xor
push
dec
mul
mov
shr
push
push
jmp
mov
cli
push
add
add
data16
pop
loope
cmp
xchg
mov
dec
mov
inc
mov
aam
ins
(bad)
and
pop
mov
pop
rcl
icebp
add
sbb
imul
jmp
inc
out
outs
icebp
push
add
xchg
cwde
test
clc
lods
sub
out
add
jp
xor
cli
cs
imul
sbb
xchg
dec
test
xor
jae
mov
push
sub
mov
pop
or
shl
jecxz
outs
in
mov
sbb
pop
mov
cmp
lea
push
stc
jg
imul
repnz
adc
cmps
dec
popf
push
or
sahf
in
(bad)
addr16
mov
xor
stc
cli
push
pusha
fild
push
jle
mov
add
jp
cmp
rol
mov
push
jecxz
(bad)
pop
xor
out
lds
and
dec
ret
mov
cmc
imul
fcom
xor
icebp
aam
test
mov
das
cmp
outs
imul
cmps
in
and
fwait
ins
fsubp
lea
enter
push
or
mov
mov
and
push
dec
jmp
popf
mov
inc
push
call
or
shl
pusha
xchg
sbb
pop
add
ret
pop
jg
ins
jp
jg
and
and
mov
fwait
dec
mov
sbb
pop
aad
stc
inc
xor
pop
enter
les
addr16
xchg
jmp
and
inc
ins
mov
iret
(bad)
std
neg
and
cmp
dec
stos
sti
(bad)
mov
pop
xchg
test
xor
(bad)
pop
cdq
fs
dec
xchg
xor
jle
shr
pop
jmp
jge
and
jl
adc
mov
sahf
and
iret
popa
les
cmp
out
push
out
cdq
idiv
xor
loope
aas
test
sar
fld
cli
mov
int3
(bad)
iret
addr16
adc
addr16
mov
ror
outs
jb
mov
inc
jmp
popf
aas
into
ins
clc
sub
clc
dec
mov
and
sub
jo
mov
xchg
push
adc
inc
adc
jb
push
mov
dec
int3
mov
test
test
jmp
aad
pusha
or
push
push
int3
add
mov
or
dec
mov
push
hlt
dec
scas
adc
push
ret
rol
cvttps2pi
icebp
and
or
aam
dec
ret
dec
adc
and
mov
mov
sub
out
xor
and
dec
mov
xchg
loopne
lock
adc
pop
xor
and
mov
jge
je
pop
or
cmp
push
(bad)
push
das
mov
mov
int3
movs
mov
inc
mov
add
or
mov
aaa
lods
sub
xor
push
nop
(bad)
or
dec
push
imul
in
(bad)
jecxz
in
into
pushf
out
daa
fiadd
pop
neg
mov
aad
pop
stos
adc
aad
mov
and
idiv
imul
push
jnp
jecxz
mov
outs
cmp
into
cmp
sub
push
inc
dec
ror
push
inc
leave
lds
jb
shr
or
imul
dec
xchg
xor
jl
aam
(bad)
aam
cmp
push
out
jmp
or
sti
movs
(bad)
mov
repz
and
movs
dec
and
xlat
sub
fadd
cmps
xchg
xor
dec
les
jge
mov
sbb
mov
pop
arpl
in
repnz
test
push
or
xchg
aaa
stos
rol
and
push
sahf
aas
cmp
dec
jnp
cmc
jo
in
xor
(bad)
das
pop
aaa
retf
inc
xchg
inc
mov
add
cmp
and
push
jp
sub
pop
or
add
push
pop
jns
lea
mov
add
mov
adc
test
pop
xchg
pop
icebp
adc
pop
ss
push
cmp
mov
imul
xor
mov
and
sbb
call
bnd
xor
sub
mov
sbb
adc
fisttp
fsubr
ja
pop
stos
jne
cmps
pop
inc
inc
cdq
jge
mov
dec
adc
ficom
mov
cmp
dec
mov
movs
rol
cs
sub
mov
mov
test
adc
sbb
icebp
cmp
fisttp
movs
and
mov
in
dec
lahf
aaa
mov
fisub
pushw
stc
push
and
mov
int
xor
shl
lahf
mov
sbb
dec
stos
cdq
adc
mov
fcom
add
lods
or
mov
pop
and
test
or
adc
cwde
movs
aad
sar
add
xor
cmp
dec
(bad)
add
add
mov
int3
pop
loopne
sbb
loopne
sbb
aad
(bad)
push
push
sub
cdq
jae
mov
xchg
bound
aam
addr16
xor
pop
pop
sbb
push
mov
loopne
ja
iret
mov
mov
adc
or
pop
adc
and
das
inc
not
ins
int
push
inc
scas
mov
inc
adc
ret
sub
ftst
ins
jne
xchg
mov
mov
icebp
fnstcw
test
popf
clc
push
inc
mov
stc
call
push
dec
sub
mov
mov
fstp
ss
leave
push
repz
int
out
(bad)
cmps
xchg
push
shl
adc
pop
sub
(bad)
cmp
bound
xchg
inc
fldcw
cs
mov
jne
push
mov
push
mov
iret
int
es
sbb
inc
ds
cmp
out
pop
mov
jmp
bsf
or
xchg
inc
jne
adc
xchg
stc
fistp
cmp
xor
push
mov
es
push
lss
and
pop
xor
inc
push
inc
pop
pop
cli
sti
mov
cmps
push
dec
enter
ins
adc
int3
mov
(bad)
call
jns
and
push
dec
ss
pop
in
adc
loope
pop
cli
ds
popa
mov
out
out
push
jnp
mov
sar
jno
rol
es
add
jmp
jb
cli
jp
(bad)
adc
pop
xor
jg
sbb
nop
push
push
cmp
adc
dec
lahf
sub
or
adc
aas
jns
loope
ret
movs
scas
stos
callw
xor
push
mov
ja
sub
mov
ins
pop
stc
add
outs
retf
out
jo
not
sub
std
retf
(bad)
rcl
cmp
retf
mov
into
xor
or
scas
mov
cmp
mov
jmp
or
jno
dec
sbb
aas
and
in
cmp
push
adc
les
sbb
xchg
hlt
pop
xchg
cmovp
xlat
dec
add
pop
jecxz
mov
test
pop
ss
(bad)
arpl
in
(bad)
add
push
adc
imul
dec
push
int
cmp
jl
inc
(bad)
sbb
push
iret
popf
jmp
lods
sub
popf
cs
push
adc
add
cmc
push
shr
ss
mov
mov
pusha
icebp
dec
into
mov
aam
mov
js
sub
mov
inc
retf
popf
(bad)
leave
mov
ins
mov
int
ret
jo
push
cmp
in
pusha
cmp
(bad)
scas
adc
lods
pusha
cwde
dec
clc
sbb
add
jp
sub
mov
repz
xlat
jae
pop
stc
lock
test
cmps
or
jns
add
retf
mov
push
jo
dec
fist
mov
das
repnz
ret
int
enter
inc
lods
aaa
mov
mov
stc
mov
fs
jae
sub
pop
movs
bound
inc
fisubr
cmp
bound
call
mov
jl
dec
aam
dec
inc
stc
cwde
rcl
pop
sub
aam
leave
mov
std
movs
mov
cmp
inc
ins
or
jecxz
adc
and
mov
sbb
mov
mov
push
inc
fist
cli
push
and
(bad)
jo
add
xchg
dec
push
mov
sbb
shr
push
jno
xor
adc
std
pop
mov
mov
push
retf
inc
pop
pop
sbb
jno
xor
call
mov
pop
in
jmp
mov
push
hlt
or
scas
inc
push
js
pop
or
lds
sub
retf
popa
push
or
adc
dec
mov
add
jl
ins
fldcw
xchg
sub
jecxz
jg
mov
xchg
call
(bad)
xor
fs
stc
or
pop
xchg
xchg
rcr
jge
add
mov
or
cs
jns
dec
jne
add
rol
inc
lds
hlt
or
(bad)
(bad)
aas
mov
xlat
fwait
lahf
xor
js
fdiv
sub
sbb
int
frstor
or
jbe
and
loopne
xchg
sti
push
test
test
xchg
inc
sub
and
repnz
aam
dec
push
sub
jl
mov
cdq
xchg
icebp
lea
jnp
dec
dec
mov
out
addr16
repnz
jg
sbb
lods
ja
les
test
mov
aaa
sbb
mov
push
push
pop
mov
bound
xlat
inc
neg
mov
stc
xchg
jb
daa
test
mov
mov
xor
cmovbe
clc
mov
mov
arpl
xchg
mov
and
xlat
popa
std
xchg
arpl
nop
mov
xor
in
sub
add
inc
mov
test
mov
cmc
cmp
fadd
fist
or
inc
sub
aas
ror
lds
add
nop
cmps
jmp
jns
push
dec
cmp
pop
div
jae
pusha
cld
add
sub
daa
push
pop
out
and
sub
adc
push
retf
pop
jbe
sub
cmp
mov
mov
les
mov
xlat
les
mov
adc
sub
xchg
mov
xor
xchg
aam
je
xchg
js
pop
inc
mov
xchg
and
mov
dec
(bad)
mov
sub
ret
ror
cmp
inc
cs
pusha
add
mov
mov
mov
inc
pmaxub
lds
and
pushf
retf
cli
lea
push
push
ret
popf
xor
mov
popf
popf
std
imul
mov
call
mov
inc
aaa
pop
hlt
shl
jge
scas
push
push
add
sbb
outs
(bad)
rol
push
add
mov
mov
retf
add
xchg
lods
cld
out
mov
jno
imul
xor
ret
outs
sahf
shl
std
mov
sub
jnp
xor
mov
iret
in
cmp
adc
mov
mov
in
inc
xor
dec
shr
movs
aam
inc
pop
dec
inc
jnp
cmps
cmp
std
jp
loopne
pop
shr
cld
sti
popa
xor
mov
fild
inc
and
ins
(bad)
js
pop
inc
lea
in
pop
daa
clc
cmp
dec
jmp
imul
jecxz
hlt
fcom
test
cmps
jns
iret
ret
and
pushf
and
or
cmp
and
jp
popa
mov
cmp
enter
cmps
mul
fs
rcl
jbe
stos
leave
mov
repz
mov
mov
push
add
sahf
and
std
hlt
sub
fisttp
jg
sub
inc
mov
stos
push
or
imul
pop
jmp
adc
mov
xchg
or
xchg
jmp
ins
mov
dec
and
push
and
inc
das
shr
mov
pop
push
sbb
inc
jmp
mov
push
sahf
sub
jo
gs
jbe
and
(bad)
cwde
push
sub
cmp
push
sub
dec
or
push
out
dec
pop
aad
out
aam
push
scas
jmp
jno
das
and
aad
aaa
cdq
pop
in
sub
or
loop
js
push
stos
sbb
pusha
sbb
and
int
(bad)
outs
fld
dec
call
pop
xchg
xor
xchg
fistp
js
mov
cmp
test
clc
fimul
mov
mov
mov
shr
push
hlt
pop
icebp
stc
imul
jno
sub
dec
ins
cwde
test
outs
sub
add
sub
cmp
test
push
mul
(bad)
pushf
inc
aad
stos
xchg
push
vmread
jae
and
(bad)
lock
in
jecxz
in
add
mov
fbstp
cmp
movs
out
and
sub
fcomp
inc
ss
jns
and
lods
fs
push
inc
ret
addr16
aaa
loopne
add
pop
sub
rcr
cmp
cwde
in
fwait
sbb
mov
push
stos
jge
dec
xchg
test
mov
inc
js
add
les
add
pop
jmp
push
ins
call
lock
jl
xor
and
mov
into
fsub
inc
fdiv
sbb
call
sbb
call
xchg
pop
retf
push
sub
ds
inc
jae
push
push
and
loopne
movhlps
adc
(bad)
leave
ror
repnz
add
pop
ds
es
fcmovnb
repnz
mov
mov
push
and
adc
xchg
pusha
clc
or
mov
add
in
push
push
and
cli
push
mov
sub
out
sub
and
movs
pop
or
xchg
retf
push
gs
sub
pop
fdiv
shl
call
and
mov
ret
fidivr
iret
lods
cmp
inc
or
inc
into
repnz
es
ficom
pop
inc
mov
mov
pop
rol
jno
cmp
push
(bad)
ffreep
cmp
aas
and
mov
or
mov
in
cmps
inc
sbb
cmp
inc
retf
retf
cmp
(bad)
outs
pop
push
shr
out
imul
adc
dec
mov
loope
add
inc
jne
shl
push
ret
pop
sub
inc
cmp
mov
and
push
test
xchg
mov
daa
sbb
cmp
mov
ja
mov
(bad)
sar
push
not
cmp
jbe
xchg
and
mov
test
cmp
scas
cs
lea
mov
dec
xor
adc
std
xor
xchg
stos
vmread
call
lods
mov
out
and
fadd
call
cmp
sbb
scas
cmovle
in
cmp
lods
add
sbb
cmps
sar
(bad)
dec
ret
mov
loop
sbb
std
movs
cmp
dec
or
shl
js
test
xor
repnz
arpl
pop
cmp
jns
jg
push
adc
adc
rcl
mov
xor
stos
enter
cmp
xchg
or
loop
cmc
shr
nop
rcr
mov
pusha
sbb
sbb
jno
(bad)
int
js
xchg
and
sub
xor
pop
jl
or
cld
xlat
xor
std
dec
test
ds
rcl
dec
xor
add
lods
jp
stc
movs
mov
fisubr
adc
ret
pushf
or
pop
sbb
jae
nop
dec
ins
mov
jmp
test
push
xchg
cmps
fisubr
loop
add
fldcw
daa
test
sub
or
or
arpl
xchg
repnz
xlat
jge
sub
add
sbb
push
xchg
ins
jl
lock
xor
jmp
test
outs
cmc
sbb
add
cmps
push
fs
sub
scas
mov
ins
fwait
int3
xor
hlt
enter
mov
sub
add
jp
popa
repnz
inc
pop
and
out
enter
outs
pop
adc
inc
push
pop
adc
jecxz
(bad)
stos
in
xor
sbb
ins
pop
out
pop
pop
scas
push
shl
adc
and
inc
cdq
jbe
imul
pop
xchg
test
pop
push
add
pop
sub
stos
movs
pusha
test
in
xchg
pop
nop
retf
retf
inc
mov
shl
fwait
mov
lods
aas
aaa
jmp
and
hlt
push
movups
push
test
adc
xchg
in
and
mov
add
jnp
in
pop
call
and
inc
jmp
sub
pushf
lahf
jmp
enter
in
mov
lahf
xchg
mov
pop
(bad)
sub
ret
(bad)
cmc
mov
xor
bound
ficom
dec
adc
in
les
sbb
dec
pop
out
dec
mov
jae
out
sub
xor
pushf
scas
jo
jl
sub
sbb
xchg
cmp
ja
mov
shr
movs
cli
adc
cmp
push
push
mov
dec
cs
push
push
jno
aaa
inc
stos
mov
adc
daa
jae
cmps
int3
jns
add
outs
push
sub
paddq
pop
(bad)
adc
out
and
inc
add
cmp
ja
push
mov
mov
in
lahf
fwait
gs
in
int
xchg
sub
ret
push
push
cmp
or
cdq
pop
call
mov
rcl
mov
jno
mov
sub
dec
and
jmp
mov
rcr
mov
pop
cmp
jp
std
mov
idiv
adc
sub
xor
popf
icebp
hlt
push
aad
es
mov
xor
pop
jns
cmp
cmp
loope
jecxz
sub
and
dec
sbb
arpl
ja
ret
es
pop
ss
push
in
push
jmp
adc
xlat
mov
bound
sub
retf
js
call
js
call
(bad)
pop
out
jne
jecxz
fs
xor
fdiv
mov
ds
loope
in
mov
push
dec
lods
gs
and
out
scas
pop
pushf
lods
leave
mov
jno
shl
xchg
or
push
outs
pushf
mov
rol
daa
xchg
jmp
call
lea
adc
loope
rcr
xchg
stos
loope
adc
jl
shl
pop
push
stos
popa
mov
call
ins
cmp
mov
outs
popf
cli
hlt
imul
push
stos
and
es
(bad)
in
jae
push
enter
add
out
test
retf
xchg
and
data16
cmps
out
push
call
enter
mov
cmps
jecxz
push
and
stos
out
pop
shl
retf
cmp
push
imul
mov
fcomp
repnz
mov
rol
mov
or
out
jo
push
fimul
fist
or
pop
pop
jmp
mov
popf
jl
out
inc
mov
cmp
inc
cmp
pop
push
sbb
jmp
jmp
xor
inc
fistp
daa
movzx
jl
push
inc
cmp
adc
ficom
add
arpl
push
es
or
lods
jge
test
and
sub
jb
inc
inc
xchg
mov
or
fs
sbb
cs
pop
pop
push
outs
cmp
pop
(bad)
mov
imul
movs
inc
das
cmp
shr
sbb
mov
fdivr
pushf
dec
adc
sti
cmp
iret
dec
xor
das
movs
fcmove
gs
(bad)
outs
adc
aam
cmp
out
pop
or
jg
hlt
mov
xlat
int
outs
mov
pop
sub
jp
jno
cwde
stc
push
push
push
sbb
and
js
sbb
add
xor
add
push
dec
aas
mov
imul
addr16
jge
sub
push
les
sub
lods
xor
xchg
pop
mov
mov
movs
test
mov
test
or
push
push
xchg
cmc
cmp
int3
sub
xchg
mov
and
add
ror
sub
cmp
sbb
fwait
and
out
mov
jp
jne
push
or
mov
das
(bad)
fldcw
jnp
push
test
std
test
fisttp
or
inc
mov
add
jl
mov
adc
mov
stos
sub
push
retf
mov
in
adc
mov
inc
pop
or
cmps
cmc
inc
nop
and
fsincos
push
imul
xchg
aad
aaa
inc
pop
cwde
xchg
dec
movs
pop
(bad)
js
sbb
cmp
hlt
mov
cli
mov
sti
cmovg
add
xor
in
sbb
hlt
or
lock
popf
popf
pop
(bad)
cld
sub
jg
xor
inc
mov
fdivr
mov
mov
dec
xchg
loop
loopne
(bad)
xchg
mov
iret
or
mov
mov
mov
and
dec
test
or
mov
lahf
jmp
ins
ret
mov
mov
sub
test
pop
pop
inc
ficom
sbb
mov
outs
mov
push
cmp
push
xor
shl
aaa
sbb
call
xchg
ret
pop
std
cs
imul
xor
call
int
jo
lods
jl
jne
jns
inc
btc
fsub
cwde
pop
xlat
sub
ret
stos
push
mov
mov
sbb
inc
adc
xor
xor
outs
lock
daa
fist
into
mov
mov
push
xor
sahf
std
jne
mov
pusha
(bad)
pop
and
stos
push
add
adc
mov
cdq
in
xchg
jl
hlt
mov
jne
pop
sub
dec
cmps
or
mov
jle
rcr
gs
push
add
ficomp
jg
jmp
mul
mov
in
mov
jno
lods
aaa
ss
xor
pop
mov
xchg
ret
and
xchg
outs
xor
daa
in
mov
xchg
pop
inc
and
adc
mov
cmp
sub
xchg
adc
ds
inc
ds
dec
or
push
mov
add
hlt
stc
and
mov
fisttp
cdq
pop
leave
push
xchg
pop
div
dec
cwde
jno
test
lahf
ret
mov
nop
inc
jns
push
add
and
pop
in
xchg
mov
jge
pop
popf
sbb
sbb
loope
call
inc
jge
pop
aad
xchg
movs
call
pop
retf
adc
cmps
iret
xor
lock
adc
jmp
bound
in
outs
or
xchg
pop
and
fnsave
in
fwait
xor
push
mov
jmp
(bad)
call
neg
imul
hlt
out
enter
xor
push
movs
mov
xchg
mov
push
dec
(bad)
and
jecxz
dec
jle
fscale
repz
cmps
sub
cmps
push
jne
mov
xchg
pop
sahf
xchg
push
push
adc
ror
pushf
pop
les
mov
pop
ret
push
int
pop
arpl
push
mov
xor
rcr
mov
fmulp
dec
xchg
adc
xchg
stos
pop
pop
leave
dec
pusha
mov
jnp
rcl
xor
inc
mov
sbb
pop
adc
imul
test
inc
adc
fbld
add
jae
shr
mov
stc
mov
mov
add
pop
cld
dec
mov
arpl
jb
outs
cs
fsub
jns
ss
(bad)
fmul
test
dec
gs
cmp
shr
dec
adc
popa
jb
jnp
div
jmp
mov
cmp
push
aam
lods
rol
mov
inc
lods
mov
mov
mov
repz
mov
inc
pop
in
data16
pop
jb
xor
dec
xchg
lea
pop
dec
xchg
pop
mov
sbb
lods
jecxz
and
out
and
arpl
dec
xor
dec
scas
test
clc
into
xor
adc
ja
rcr
shl
dec
sahf
jne
pop
cmp
xchg
and
push
out
imul
lds
imul
stos
xchg
cmp
pop
inc
or
adc
jp
jnp
pop
hlt
(bad)
test
out
(bad)
lods
xor
pop
call
ret
pop
iret
xchg
inc
icebp
ins
aaa
es
xor
ss
fwait
xor
or
iret
mov
mov
cs
mov
or
jno
jmp
jecxz
lea
lahf
nop
dec
repz
gs
rol
scas
xchg
ds
cdq
fidiv
in
add
pop
iret
in
ins
gs
(bad)
outs
popf
dec
inc
xchg
clc
out
fistp
fs
add
add
jmp
inc
xor
cmps
out
popa
add
pop
test
xchg
test
mov
xchg
xchg
ins
sbb
pop
sub
jle
and
sahf
and
push
pushf
in
add
sub
int3
mov
xchg
sub
cmp
push
pop
jmp
inc
ficomp
iret
in
int3
repz
mov
sub
je
rcr
mov
cmp
jbe
fimul
cmp
out
out
xor
aad
lahf
fwait
pop
pop
and
add
je
xchg
mov
inc
das
das
or
pop
in
jp
jns
sbb
std
outs
adc
mov
push
imul
dec
mov
mov
rol
and
or
sbb
es
dec
mov
pop
test
imul
out
aad
cmp
nop
pop
xchg
sbb
dec
pop
inc
inc
shr
xor
mov
inc
jne
push
mov
adc
scas
xchg
inc
jmp
lock
rol
sar
jne
pusha
aas
inc
shl
shl
fld
push
es
mov
cdq
sub
push
fld
and
mov
test
xchg
into
fidiv
into
and
pop
and
xchg
xor
pop
call
inc
xor
adc
xor
enter
inc
rcr
adc
test
inc
xchg
out
xchg
fdiv
call
xor
mov
stc
lods
sbb
retf
pop
inc
mov
adc
jmp
mov
and
jmp
fdivr
cmp
and
cmp
mov
aaa
sbb
lods
xor
lock
push
adc
out
sub
ins
push
test
cdq
cli
mov
cmp
clc
gs
xabort
inc
sar
lea
jno
xor
mov
pop
dec
mov
clc
es
ret
mov
repz
sub
fwait
inc
les
push
inc
into
rol
push
cmc
(bad)
xchg
inc
rcr
xor
test
mov
out
jno
jnp
lahf
and
mov
mov
aad
jnp
into
or
pop
stos
cmc
pop
adc
mov
stos
ss
pop
mov
fs
sub
mov
scas
dec
jecxz
jmp
test
inc
in
sub
jmp
mov
(bad)
or
int3
scas
movs
push
imul
std
jge
inc
pop
jg
inc
and
mov
xor
push
xchg
scas
mov
jmp
adc
out
into
sbb
xchg
dec
mov
mov
(bad)
sub
add
movs
mov
and
push
xchg
add
imul
loopne
xor
xor
inc
sub
jl
js
inc
pop
cmp
aad
inc
js
out
les
cmp
loop
(bad)
icebp
pop
add
outs
mov
jp
pop
mov
jmp
jp
arpl
pop
mov
sbb
pop
leave
add
jnp
je
in
adc
cmc
repz
cmp
adc
(bad)
push
sar
loope
gs
inc
mov
stos
jbe
mov
dec
dec
(bad)
mov
sub
mov
jne
jnp
scas
cmps
stc
xchg
jmp
(bad)
mov
inc
and
mov
add
jl
call
mov
fild
sub
das
mov
jne
adc
inc
jecxz
cmp
push
jle
aam
inc
mov
jbe
jbe
repz
iret
add
mov
scas
cmp
pop
enter
clc
aad
loope
adc
scas
cmp
shl
in
sti
jle
das
jmp
rol
aad
pop
push
aas
les
add
lock
inc
in
lods
sub
push
and
lock
leave
jge
ss
push
into
adc
xchg
inc
or
xlat
mov
xchg
int
enter
das
repz
xchg
in
rcl
imul
stos
repz
jae
and
ret
out
xor
dec
pop
add
(bad)
cmp
sbb
jnp
lahf
imul
inc
mov
sbb
es
imul
mov
adc
jle
lock
(bad)
inc
mov
adc
idiv
loope
test
inc
shr
cmps
out
dec
popa
dec
mov
jmp
clc
dec
dec
inc
fcom
sar
pop
mov
sub
cmps
dec
jp
bound
fadd
dec
outs
int3
or
cdq
cmp
mov
push
mov
jl
inc
daa
xor
mov
das
jne
mov
mov
xchg
inc
dec
jne
or
das
in
dec
push
mov
sbb
sbb
not
in
mov
mov
fimul
(bad)
mov
push
call
(bad)
(bad)
cmc
ret
cmp
dec
mul
addr16
pop
std
mov
push
arpl
ror
pop
or
clc
dec
and
mov
movs
enter
fcmovne
sahf
pop
xchg
mov
pop
sbb
pop
lods
pop
and
lock
cmp
fiadd
xchg
pushf
addr16
clc
sbb
outs
movs
xor
cdq
mov
bound
les
into
pushf
scas
aaa
xor
xchg
fs
test
xchg
mov
inc
aaa
cli
pop
push
mov
cli
repz
inc
(bad)
jp
mov
sahf
mov
mov
jae
ret
outs
pop
arpl
mov
test
inc
sub
and
movs
and
int3
js
fnstcw
and
mov
push
adc
pop
shl
and
fs
adc
mov
std
mov
cmp
ja
add
jmp
push
aam
cmp
lds
ds
or
in
jle
dec
sbb
adc
cwde
mov
out
mov
rcr
pop
and
xor
scas
push
xor
fst
and
mov
sbb
and
stc
iret
cmp
icebp
and
out
repnz
mov
add
fbstp
push
sahf
inc
push
daa
int
push
mov
std
(bad)
mov
adc
dec
mov
jg
daa
cmc
es
lods
cs
jg
push
inc
xchg
push
mov
sbb
mov
mov
call
jl
lods
add
xor
xchg
mov
sahf
jo
adc
sub
stos
jmp
outs
jb
jecxz
lahf
lock
xor
sbb
mov
shl
jb
scas
xchg
mov
ja
dec
jge
inc
mov
mov
add
lea
push
mov
nop
lods
call
jp
loop
fsubp
xchg
int3
ss
(bad)
mov
popf
push
or
jge
(bad)
ins
(bad)
add
mov
outs
dec
mov
mov
mov
inc
cmp
ret
fcmovbe
push
sub
je
mov
or
out
jb
enter
and
xchg
call
sub
push
dec
pop
fild
cmps
(bad)
cli
outs
pushf
in
aas
sbb
mov
idiv
lods
in
shl
mov
mov
daa
test
movs
xchg
xor
scas
dec
dec
out
div
mov
mov
clc
clc
ror
and
leave
jle
jbe
sub
push
call
stc
push
inc
std
sub
cmc
fwait
adc
paddq
or
mov
xchg
hlt
mov
js
cmp
ins
lds
xchg
sub
xchg
dec
adc
mov
in
and
or
daa
mov
scas
inc
retf
mov
xlat
mov
cdq
fwait
test
xchg
mov
mov
pop
mov
cmp
or
(bad)
call
mov
pop
adc
dec
into
xchg
push
add
or
jmp
addr16
inc
push
gs
nop
xor
pop
mov
icebp
cmp
popf
cmps
mul
retf
pop
mov
lahf
stos
pop
pop
imul
jle
bound
jmp
fwait
adc
addr16
pushf
vxorps
das
jge
popf
xchg
or
addr16
out
mov
xor
pop
xor
jle
push
cmps
mov
push
lods
push
or
ins
aad
sti
pop
xor
repz
out
mov
(bad)
xor
jae
lahf
or
push
movs
push
sti
cmps
outs
data16
repnz
jp
ror
aas
js
sbb
sub
loopne
push
je
pushf
outs
mov
sub
jb
add
loopne
xchg
xor
sbb
loopne
(bad)
cmp
retf
pop
mov
sub
test
pop
aaa
adc
inc
lods
es
lock
and
das
pop
cmp
scas
xor
popa
popfw
and
test
es
push
punpcklbw
std
push
sbb
adc
out
iret
int
into
mov
repnz
les
shl
mov
in
mov
xchg
shl
fst
jae
in
cmp
jg
lahf
mov
inc
mov
leave
sar
mov
dec
adc
sub
fs
pop
int3
pop
add
mov
rcl
ret
jge
xchg
bnd
add
cmp
rcl
adc
test
js
jge
js
ret
xor
fs
repz
pop
ds
xlat
sub
dec
mov
shl
inc
and
fadd
mov
or
sub
push
dec
xor
jo
xchg
dec
js
mov
in
adc
ret
pop
dec
or
push
and
ds
jge
in
pop
adc
test
test
test
dec
push
xchg
inc
les
mov
pop
ror
push
pop
jl
stos
loopne
add
adc
fld
nop
cdq
inc
xchg
pop
jle
ret
call
and
mov
xor
shl
mov
loop
xchg
sub
xchg
jecxz
in
mov
loopne
rol
(bad)
in
mov
mov
sar
pop
push
mov
inc
aaa
scas
mov
lea
cmps
cmps
div
xchg
mov
xor
pop
retf
rcl
lea
ror
mov
and
adc
loope
inc
jbe
jbe
stos
cmps
cld
sahf
mov
fst
cmc
int3
(bad)
js
or
jle
int3
or
pop
stos
(bad)
fimul
xchg
and
popa
xor
jo
xor
jg
sub
adc
cmc
iret
jnp
pop
mov
aad
pop
adc
sbb
cdq
movs
mov
or
and
adc
inc
push
push
rol
test
in
loopne
ins
inc
ret
inc
xor
mov
pop
ret
push
mov
lds
cdq
imul
outs
push
cmp
aam
inc
adc
mov
xchg
and
hlt
(bad)
sbb
cmp
push
pop
aam
stos
dec
fcomp
mov
jnp
jnp
cs
(bad)
adc
jmp
xor
inc
xor
pop
lds
jne
jbe
outs
(bad)
loop
int3
mov
ins
cld
xor
cmp
in
imul
sub
loopne
push
popa
add
(bad)
inc
aaa
movs
sbb
jne
dec
push
ror
lock
les
cwde
jns
cmps
hlt
imul
dec
and
addr16
gs
jl
cmps
dec
mov
lea
pop
cmc
(bad)
ficom
cmp
out
stc
adc
js
imul
cmp
mov
jmp
leave
repnz
inc
cmc
adc
cwde
fsubp
call
sbb
cs
and
dec
push
or
ret
pop
or
test
jp
mov
push
add
mov
mov
or
and
jge
test
sub
push
sub
shl
mov
mov
stc
test
sub
lods
jne
imul
aas
jge
ins
(bad)
(bad)
jge
sti
mov
test
rcr
fisub
dec
push
xchg
or
addr16
int3
(bad)
int3
and
or
fwait
add
mov
jp
or
xor
sahf
nop
test
clc
loopne
mov
int3
arpl
cmp
push
sbb
adc
jg
sbb
pop
int3
pop
outs
retf
in
sub
xchg
shl
fs
jno
cmp
ficom
and
pop
es
int
rol
mov
call
fsubrp
adc
out
mov
jge
pop
mov
push
jge
cmp
mov
es
add
mov
add
cmp
pop
call
pusha
xlat
push
repz
test
fisub
and
lock
out
std
or
popa
push
fbstp
push
push
sbb
xor
jmp
inc
add
enter
mov
inc
xchg
add
xor
sar
in
test
movs
iret
(bad)
cmp
aam
cmc
out
ret
push
scas
cmps
loopne
and
pop
sub
ror
dec
retf
ds
js
xor
sub
aas
idiv
call
fs
inc
xor
nop
xchg
(bad)
shr
or
jnp
pop
xlat
sbb
data16
aam
inc
sbb
aas
push
pop
stos
xlat
mov
(bad)
loop
lods
jb
and
sbb
jb
das
xor
dec
jp
fsubp
imul
popf
and
mov
add
enter
dec
leave
fcomp
xchg
cs
mov
fcomi
rol
xor
cmp
leave
sub
into
movs
jmp
mov
stos
xor
mov
aaa
dec
push
inc
(bad)
scas
lock
pusha
or
fistp
or
adc
sub
ret
push
sbb
pop
dec
jbe
adc
pop
cld
dec
out
jmp
adc
xchg
call
outs
xchg
adc
outs
sbb
inc
inc
retf
fisub
dec
fbld
adc
rcl
push
pop
adc
into
leave
in
push
dec
push
mov
in
adc
imul
push
fild
mov
div
aas
mov
in
icebp
cwde
fdivp
rcl
clc
call
dec
or
dec
popa
ficomp
pushf
out
and
cmp
outs
test
lods
sbb
mov
mov
mov
lock
sub
ja
mov
or
movs
test
pushf
mov
aad
gs
push
mov
pop
fwait
cs
imul
inc
movs
int3
mov
push
push
xor
sub
adc
scas
mov
stos
and
adc
lds
outs
and
out
inc
sbb
pop
inc
in
adc
push
not
fsubr
mov
xchg
push
aam
and
inc
popa
xor
iret
leave
call
mov
mov
mov
jg
loope
fcom
xor
cli
pop
add
je
dec
fs
mov
jl
test
mov
and
loopne
adc
iret
add
xchg
mov
mov
push
and
imul
push
addr16
stos
add
movs
pop
inc
xor
stc
mov
and
jno
adc
mov
add
jns
push
aas
(bad)
mov
outs
sbb
xor
inc
jo
sbb
add
push
inc
cdq
push
or
push
cmps
inc
stos
fisttp
dec
outs
leave
aad
inc
dec
mov
push
add
scas
retf
adc
jmp
mov
aaa
mov
pop
sub
pop
xchg
push
push
jns
fwait
mov
gs
xchg
mov
call
cmp
push
sti
xchg
push
dec
mov
dec
jmp
lahf
js
fwait
es
(bad)
mov
popa
fadd
xchg
jne
jmp
and
das
cld
and
pop
add
pop
jle
xlat
sub
daa
sbb
in
es
xor
into
push
retf
fs
ins
test
cmps
fwait
mov
mov
mov
call
cmp
aas
(bad)
jnp
stos
aas
dec
test
pop
fnstcw
mov
test
or
cmps
call
xor
retf
fistp
js
bound
inc
add
and
pop
inc
scas
ds
sub
dec
xchg
es
jne
xchg
int
or
push
jns
push
xlat
movs
jp
inc
lahf
adc
sbb
sti
ins
adc
fwait
pop
pop
inc
imul
mov
inc
pop
push
xor
xor
xor
lea
stos
ret
jmp
test
fbstp
xor
(bad)
call
mov
xor
inc
sbb
push
shr
pushf
sbb
fsubr
cmp
mov
lods
call
sub
xor
in
cmp
pop
cmp
dec
lock
in
bound
mov
cld
add
dec
stos
std
inc
or
pop
int
and
mov
sub
fisttp
daa
gs
xor
ss
inc
aaa
or
add
push
jb
repz
lea
jo
mov
out
mov
retf
hlt
sbb
push
mov
adc
jb
cld
xchg
dec
jl
(bad)
enter
(bad)
(bad)
ja
mov
and
adc
adc
xchg
iret
mov
fld
sbb
shl
(bad)
or
outs
xchg
cmp
dec
adc
ja
xor
pop
mov
lds
lahf
mov
(bad)
iret
(bad)
jae
imul
aad
adc
or
xchg
dec
sar
xchg
call
pusha
jge
push
jge
shr
fs
pop
arpl
add
lds
push
push
repnz
(bad)
lods
ror
ror
rcl
mov
pop
movs
int
jo
cdq
out
sub
leave
inc
or
popf
fwait
mov
or
jb
cmc
aaa
jno
hlt
jns
xchg
jp
int
retf
mov
aaa
cmp
icebp
sub
test
dec
dec
ds
ja
scas
(bad)
cmp
shl
rcl
sub
les
(bad)
sub
stos
xchg
lods
jmp
bound
or
fld
out
js
pop
sar
ja
cmp
or
ins
out
test
ret
data16
jae
(bad)
outs
push
out
outs
stos
mov
mov
fldcw
ja
ds
or
in
push
mov
and
dec
stos
push
jns
adc
and
popa
adc
mov
push
sub
out
clc
mov
mov
dec
sbb
xor
jae
dec
jl
cmp
les
add
nop
in
mov
xor
or
mov
jbe
out
mov
out
adc
ficom
mov
xchg
inc
mov
in
push
or
in
pusha
cwde
and
je
mov
mov
je
loopne
es
xor
(bad)
clc
mov
inc
sub
fistp
inc
pusha
aam
add
cld
cmp
retf
sub
fcomp
lods
mov
sbb
sbb
xor
(bad)
mul
int3
fwait
xchg
lea
push
sub
jl
aas
cli
xor
out
sbb
xchg
xor
jno
and
shl
jne
and
sub
jmp
mov
lods
scas
and
out
add
pop
retf
sub
inc
cdq
and
fbld
loopne
out
pop
xchg
jb
cs
xchg
jmp
or
sub
xchg
push
jbe
icebp
xchg
xchg
push
jp
add
and
das
mov
shl
bound
shr
popf
les
test
xchg
xor
pop
mov
loopne
pop
nop
mov
xchg
(bad)
push
imul
push
jmp
pop
(bad)
and
shr
mov
out
and
inc
jne
sbb
aas
js
fidivr
lea
xchg
pop
jns
bound
in
rcl
fidiv
mov
idiv
mov
sub
push
stos
cmp
lods
stc
pushf
adc
xchg
(bad)
out
mov
nop
push
mov
cmps
hlt
mov
or
ror
hlt
sub
ins
es
ja
cmp
scas
xor
adc
leave
fnstenv
xchg
and
ja
sub
jae
in
cli
cmp
je
jo
fdiv
xor
fimul
inc
pop
and
pop
jmp
test
fcomp
sti
mov
and
fistp
and
loop
popf
movs
sub
mov
js
mov
ds
mov
stos
and
xchg
pop
or
mov
mov
sub
in
pusha
aad
adc
rol
add
ret
rcl
das
jmp
out
mov
vmread
mov
(bad)
mov
mov
mov
xchg
popa
mov
and
sub
(bad)
out
mov
int3
(bad)
stos
fild
and
mov
fsub
jbe
xchg
jbe
out
lea
or
shr
xor
ror
scas
shl
mov
(bad)
mov
push
sbb
popf
xor
xor
adc
dec
push
sub
sti
add
shr
push
ret
dec
mov
or
jge
cdq
lea
pop
push
pusha
std
int
fld
dec
clc
sub
into
dec
or
pop
add
and
call
test
xor
call
aam
cmp
pop
ins
sar
dec
fwait
cmc
mov
inc
jge
fcomp
in
ret
out
mov
out
cmp
dec
or
fldcw
lods
lods
sti
sbb
retf
or
data16
jbe
mov
mov
inc
out
jmp
div
xor
add
or
clc
cld
or
in
les
mul
cmp
adc
dec
out
iret
xchg
nop
fstp
xor
dec
mov
cli
and
outs
test
idiv
ins
dec
mov
lea
test
mov
loop
and
cmp
jp
sahf
sub
adc
loopne
or
imul
mov
loopne
pop
xchg
mov
iret
(bad)
adc
mov
es
imul
cmp
ret
movs
jnp
inc
sub
fwait
and
cli
icebp
and
add
cmps
pop
jbe
iret
and
out
jp
ja
mov
fldenv
push
lock
adc
push
aam
mov
jb
pop
call
dec
push
dec
scas
xchg
mov
jns
(bad)
inc
mov
mov
sar
add
cmp
dec
pop
dec
pop
inc
and
pop
xchg
std
mov
retf
repnz
sub
push
call
inc
mov
sub
pop
pop
dec
scas
dec
mov
sub
int3
pop
sub
loopne
jecxz
jl
mov
sahf
in
xchg
fwait
xlat
popa
cmp
push
sets
clc
cmp
repz
pop
fidivr
aam
push
dec
ror
dec
inc
and
adc
dec
dec
cmp
jecxz
repz
imul
test
stc
lahf
mov
popf
and
jp
pop
pop
(bad)
dec
dec
sbb
loope
jns
pop
paddusb
inc
mov
inc
sbb
sbb
xor
mov
not
pop
lods
aad
add
mov
test
mov
es
loope
test
pop
pop
test
push
jo
movs
arpl
cli
gs
mov
fmul
mov
enter
push
fisubr
jno
cmps
daa
mov
cmp
test
dec
stos
push
jle
jbe
xchg
pusha
out
pushf
imul
mov
mov
jmp
adc
ret
ins
sub
sbb
fcomp
pop
mov
je
scas
sub
xchg
leave
(bad)
out
pop
push
jecxz
inc
cmp
add
mov
retf
fadd
outs
sbb
add
cmps
push
mov
push
jb
jo
xor
mov
dec
popa
inc
sbb
in
mov
jnp
or
xchg
sbb
icebp
sbb
jmp
mov
mov
sbb
addr16
icebp
xor
push
hlt
and
mov
cmc
enter
cmc
push
cmps
cmp
icebp
adc
loope
mov
or
icebp
retf
int3
(bad)
in
adc
xor
in
jo
test
and
pop
movs
ins
clc
test
rcl
xchg
pop
jae
or
xor
jmp
pop
xchg
cwde
mov
mov
movs
dec
or
sbb
mov
cmps
out
xchg
push
inc
mov
pop
mov
movs
ficomp
and
or
fistp
sar
xlat
jge
outs
push
mov
pop
scas
dec
out
push
(bad)
fsubr
pop
mov
das
jo
sahf
or
adc
jge
mov
mov
aam
fcom
test
mov
lods
shl
mov
jmp
push
sbb
sub
jle
call
pop
test
xchg
out
push
jne
sub
test
loop
sbb
mov
jb
xor
xor
add
pop
nop
loope
arpl
cwde
adc
mov
or
pop
aaa
repz
xor
inc
sbb
loopne
mov
aas
xor
in
mov
ins
fcomp
fmul
jmp
out
cmc
jno
add
add
and
xchg
test
jns
and
pop
mov
xor
in
sub
stc
jl
jmp
push
mov
push
adc
and
movs
add
jb
cmp
sub
jne
push
mov
sub
dec
jns
xchg
cmps
arpl
pop
mov
cmps
ret
sahf
mov
pop
add
mov
push
iret
lds
adc
jns
jno
(bad)
enter
pop
cmp
in
into
sub
fs
and
mov
retf
fbld
xchg
lock
add
sub
stos
gs
imul
daa
(bad)
xchg
int
das
xor
and
rcl
jmp
mov
pop
inc
dec
sbb
push
(bad)
ja
dec
sub
pop
fs
leave
arpl
outs
repnz
stos
movs
jp
out
xor
cmc
and
shl
shl
fiadd
push
and
sub
cmc
js
mov
ret
add
mov
sbb
arpl
jnp
dec
xchg
sbb
inc
fmul
fmul
inc
lea
cmp
jb
xor
sete
out
aad
mov
xor
push
pusha
jnp
add
aas
mov
jp
cs
mov
inc
sbb
dec
ins
daa
jno
xor
sub
loop
sub
outs
or
pop
and
push
cdq
push
lds
mov
clc
mov
rol
shl
cmp
shl
fimul
int3
stc
adc
mov
das
or
jmp
fbld
rcr
sbb
xchg
pop
jmp
cmp
and
cmp
inc
add
dec
mov
bnd
xor
popf
loop
(bad)
push
ds
fstp
leave
push
pop
inc
fs
das
pop
mov
cld
pop
mov
and
or
or
inc
repnz
jl
je
dec
mov
xchg
jmp
ja
cld
push
mov
outs
dec
loope
mov
sbb
call
gs
das
xchg
test
add
mov
in
xchg
xchg
call
cdq
pusha
push
ficomp
push
pop
push
jmp
(bad)
cwde
out
dec
aad
jmp
or
xor
dec
dec
(bad)
es
into
ins
mov
in
mov
mov
std
jbe
add
(bad)
mov
(bad)
jmp
cmp
mov
or
test
mov
cmc
shl
and
repnz
pop
or
push
sbb
shl
sbb
cmp
or
cmp
sar
xor
mov
(bad)
out
in
stos
aaa
scas
lahf
les
cli
imul
push
cmc
cli
or
mov
call
lea
test
pop
mov
inc
aam
in
jmp
pop
dec
je
mov
fnstcw
jo
iret
out
in
or
fs
jno
gs
sbb
pushf
idiv
fdiv
neg
or
aad
popa
mov
stos
and
lahf
jmp
sbb
xor
sti
iret
test
mov
sbb
mov
cmp
icebp
sub
push
dec
dec
mov
jmp
dec
jbe
mov
stos
je
mov
mov
inc
ds
mov
cmp
(bad)
fisubr
jg
lds
aas
shl
ror
nop
pusha
pop
sahf
cli
pop
push
mov
push
aad
aas
sub
in
imul
push
xor
cmp
xchg
jb
cmps
daa
adc
push
pushf
cwde
in
xor
mov
dec
fwait
test
mov
call
popf
int3
int3
jns
loope
popa
adc
push
mov
jle
inc
sub
inc
hlt
push
cmp
neg
clc
call
inc
inc
cs
fild
lds
add
mov
stos
xchg
or
fst
dec
fld
dec
call
or
das
mov
dec
in
jl
aas
aad
arpl
lds
mov
sub
and
pop
mov
or
rcr
(bad)
sbb
jle
mov
stos
push
inc
jge
movs
add
sub
(bad)
adc
xor
leave
popa
or
add
cmp
scas
mov
jbe
mov
int3
push
jge
mov
jmp
adc
mov
std
lds
test
dec
outs
cmp
sahf
ins
mov
push
inc
into
push
arpl
mov
ret
sub
lahf
xor
ror
push
leave
dec
loope
std
push
mov
jmp
aaa
les
add
arpl
in
rcl
sbb
jmp
in
stos
je
loop
xchg
cld
mov
xchg
in
ss
sub
cmp
mov
dec
in
fild
adc
out
pop
or
xchg
jecxz
mul
lea
or
dec
je
es
sti
jle
push
pusha
shl
jmp
aad
inc
mov
call
in
pop
aad
stc
js
pop
das
frstpm(287
lock
or
in
frstor
mov
jg
int
or
jbe
test
or
jbe
es
cmps
enter
push
je
ja
inc
add
and
inc
sub
inc
jecxz
loopne
pop
sbb
dec
xchg
rcr
sbb
pop
xor
xor
xchg
cmp
adc
dec
scas
pushf
inc
xor
imul
mov
(bad)
aaa
iret
inc
movs
mov
jmp
push
cmps
ret
pop
cwde
pop
sbb
mov
push
mov
inc
pop
dec
or
sub
pop
cs
add
clc
xchg
jb
into
jmp
fist
adc
rcl
mov
call
cmps
ins
push
jmp
mov
out
and
call
dec
adc
es
or
cmps
div
popf
nop
int3
jo
jmp
jnp
xor
clc
mov
cdq
push
outs
mov
shl
imul
enter
pop
xor
push
push
mov
mov
fcmove
cmp
mov
imul
adc
jno
and
stos
imul
enter
jecxz
sti
pop
sub
jmp
add
push
mov
test
add
sbb
into
fcmovnbe
push
fadd
in
jge
add
jmp
dec
ins
sub
inc
push
mov
cdq
out
push
xor
into
dec
shl
data16
adc
call
lods
inc
mov
fwait
rcr
bound
fnstenv
dec
rcr
add
cmc
pop
pushf
test
xlat
inc
mov
pop
mov
test
mov
xor
sbb
les
push
scas
mov
jle
inc
dec
out
stc
inc
stos
sbb
xchg
push
ss
add
add
jmp
(bad)
and
xchg
fcom
test
push
mov
das
arpl
push
jp
rcl
cmp
sbb
inc
sub
ret
push
dec
jbe
push
sub
sar
jle
mov
and
or
sar
popf
aaa
ins
or
in
shr
inc
or
adc
hlt
pop
xor
ret
inc
pop
sub
xchg
pusha
in
fidiv
dec
or
pop
adc
rcr
dec
fld
lods
cmps
int3
sysret
aaa
repnz
add
xor
scas
cwde
lods
jnp
push
cmps
cmp
mov
lahf
pop
jo
in
imul
sbb
adc
jae
mov
sub
loope
jle
and
addr16
and
pop
ins
push
out
repz
outs
lods
cdq
push
(bad)
jp
jg
sub
lods
adc
xchg
inc
not
xlat
mov
iret
sub
push
push
add
xor
jmp
cdq
aaa
out
ret
test
stos
jnp
hlt
jmp
push
aad
inc
clc
or
pop
rcr
jae
jp
cmc
movs
cmp
lods
mov
inc
(bad)
loop
pop
stos
(bad)
ror
cmp
lock
mov
stc
div
and
mov
repnz
jns
pop
mov
and
mov
mov
scas
sub
movs
add
dec
dec
test
aad
sbb
cli
enter
xlat
jge
or
repnz
test
xchg
sub
add
(bad)
adc
sar
pop
pop
mov
inc
fcom
mov
lods
dec
pop
mov
xchg
push
add
sbb
bound
or
outs
cdq
ins
cmp
popf
hlt
test
jo
ror
add
adc
push
dec
add
movs
mov
mov
jmp
out
dec
inc
or
or
cmp
push
push
xlat
and
ds
push
fdiv
sub
and
xor
or
jae
das
xor
push
mov
xchg
xchg
(bad)
int3
or
xchg
xchg
cmc
add
or
sar
lahf
test
aad
mov
(bad)
std
push
lds
add
call
leave
ror
into
shr
mov
sbb
enter
js
test
pop
test
and
aam
push
mov
xchg
lea
mov
in
cmp
mov
or
dec
mov
add
movs
das
cdq
repnz
xchg
adc
sbb
cmp
sbb
inc
pop
dec
jecxz
int3
fstp
push
lods
and
pop
fdiv
inc
mov
(bad)
popa
jns
out
aaa
adc
outs
or
xlat
cmp
test
imul
lods
outs
addr16
fs
mov
push
cli
pop
mov
mov
rcl
daa
hlt
adc
movs
cmp
xor
sti
mov
inc
mov
jne
sbb
adc
mov
sahf
mov
aam
sub
frstor
adc
push
xor
imul
adc
pop
dec
or
pop
dec
cmp
(bad)
push
push
or
iret
aad
shr
fst
fisub
mov
xlat
popa
jo
mov
jbe
mov
add
adc
cld
xor
pop
pop
jnp
mov
ret
push
int3
cmc
stos
lds
cdq
bound
mov
inc
add
mov
jge
jg
ds
jnp
fld
fld
sub
cmps
mov
dec
(bad)
pop
clc
mov
shr
or
xchg
scas
push
ret
jle
inc
mov
mov
pushf
repz
or
fldenv
xchg
in
lods
rcl
test
xchg
das
fsubr
sbb
mov
pop
in
lea
test
imul
mov
out
xchg
es
out
push
or
push
pop
pop
jg
hlt
push
aad
psubd
pop
outs
lahf
(bad)
adc
dec
push
lods
pop
and
push
jp
sahf
or
bound
sbb
and
and
pop
cmp
dec
ds
aaa
fst
add
adc
sbb
(bad)
imul
inc
adc
push
add
push
push
call
cli
sub
push
or
js
mov
lds
clc
inc
frstor
jbe
je
scas
sbb
(bad)
int3
adc
cmp
inc
fld
add
inc
mov
outs
(bad)
mov
push
out
push
(bad)
repnz
xchg
ins
dec
rcl
pop
dec
push
inc
out
pushf
ret
sbb
out
ss
dec
jnp
adc
pusha
add
fnstenv
adc
adc
outs
lea
and
mov
sbb
push
push
loope
rcl
pop
test
adc
push
lock
add
dec
pusha
pop
push
fs
iret
mov
mov
fstp
xchg
ins
pusha
test
inc
inc
jo
stos
mov
addr16
rcr
xlat
lods
push
mov
aaa
ja
pop
pop
cmp
cmps
js
cs
loope
retf
lods
sahf
aas
inc
clc
(bad)
(bad)
into
pop
pop
mov
loop
ror
push
mov
mov
cmps
mov
or
inc
fild
adc
sbb
cmp
icebp
pop
call
adc
push
pop
test
sbb
mov
(bad)
mov
xlat
jp
scas
pop
aad
fcmove
mov
(bad)
addr16
sbb
pusha
or
add
ss
pop
lea
jbe
dec
nop
adc
dec
adc
jne
and
push
popa
shr
pop
sbb
arpl
add
cmp
adc
das
mov
cli
jbe
sbb
bound
je
jae
mov
push
call
add
outs
pusha
shl
cmp
rcr
int
lods
pop
xor
add
and
pop
cmp
fcom
mov
dec
sbb
sti
in
cld
inc
push
dec
popa
mov
in
jg
mov
int3
sub
xor
dec
pop
xchg
xchg
or
sub
cmp
outs
gs
jne
cmps
scas
je
je
adc
ss
sti
out
(bad)
bts
cmps
add
aas
out
in
cdq
dec
push
dec
or
push
inc
inc
mov
aam
bound
cmp
call
sahf
sahf
idiv
inc
pop
in
aaa
xor
and
cld
adc
inc
nop
sbb
mov
cmp
xor
loop
ret
adc
mov
add
fisubr
hlt
fidiv
pop
bound
push
cmp
add
sti
cmps
inc
adc
mov
xchg
inc
inc
shl
leave
pop
dec
cmp
and
xor
mov
xor
ins
jge
lods
jae
xor
rol
es
es
pcmpgtb
aas
mov
xchg
in
loope
cmp
aad
xor
cmps
out
mov
fcom
jb
gs
jg
pop
sbb
lods
and
out
out
movlps
xchg
adc
imul
jg
ss
push
and
mov
dec
out
pushf
push
rcl
ds
push
inc
stc
ret
loope
sub
(bad)
(bad)
call
pop
repnz
mov
arpl
pop
dec
daa
stos
test
add
dec
push
loopne
adc
call
or
xchg
jmp
jnp
test
dec
ficomp
push
int3
out
sbb
jl
out
lods
or
dec
jecxz
jne
and
(bad)
xor
mov
or
movs
jbe
sbb
jl
and
push
inc
mov
sbb
fadd
loop
out
smsw
sbb
std
xchg
aad
push
sti
test
test
inc
in
pop
mov
sub
sub
inc
jp
pop
stos
stos
xchg
mov
mov
mov
sbb
push
xchg
in
out
xor
js
jmp
dec
cli
jg
push
popf
jae
mov
clc
mov
adc
stos
test
aam
scas
push
sbb
dec
cmovle
or
adc
or
pop
mov
in
imul
and
or
pop
xor
or
add
cwde
mov
dec
out
(bad)
fidiv
push
imul
pop
pop
pusha
mov
push
movs
cmps
pop
imul
scas
sbb
lock
xchg
lock
push
or
(bad)
fld
mov
cmp
cdq
or
enter
inc
or
stc
cmps
dec
lock
or
mov
hlt
mov
sub
lds
sbb
adc
js
shl
sub
and
dec
sub
adc
(bad)
mov
popa
sub
adc
stc
mov
out
fiadd
pop
sbb
ror
inc
or
add
cld
jbe
fstp
push
stos
jmp
xor
or
adc
pop
xor
jl
imul
dec
fwait
sub
push
movs
call
out
sbb
mov
stc
inc
into
mov
push
jl
shr
cld
dec
lods
movs
int
or
fistp
popf
stos
fisubr
mov
es
icebp
xlat
bound
mov
test
rol
std
test
test
mov
fnstsw
dec
mov
(bad)
cmp
jp
or
test
out
loopne
xor
mov
sub
add
mov
fisubr
adc
push
adc
xor
mov
xchg
ins
scas
cmp
mov
mov
add
iret
sbb
push
and
dec
ficom
mov
pop
into
adc
inc
sbb
call
dec
sub
or
cmp
mov
inc
test
mov
mov
push
jmp
or
pop
mov
aaa
ins
sbb
int
push
imul
cmp
hlt
arpl
or
or
movs
in
ja
jmp
rcr
push
iret
addr16
(bad)
ret
sub
add
mov
setp
fs
or
test
adc
mov
jmp
dec
mov
mov
mov
mov
and
test
int3
adc
jno
in
stc
aad
lahf
arpl
push
add
clc
cmp
into
ficomp
mov
sahf
add
test
mov
(bad)
loop
loopne
hlt
sub
cmp
mov
ins
sbb
cmp
fist
int3
call
lods
repnz
(bad)
stos
xchg
or
outs
pop
jge
ret
jno
pop
dec
lahf
add
xchg
stc
and
int
or
and
and
pop
ins
pop
iret
ins
mov
push
and
adc
jmp
jecxz
jge
movs
dec
aad
push
or
fxch
dec
out
mov
dec
jmp
cmp
jmp
inc
aaa
sub
dec
fs
mov
adc
dec
mov
imul
jmp
mov
test
dec
xchg
push
inc
fnstenv
pusha
xchg
xchg
das
retf
(bad)
push
jmp
stos
or
cmc
mov
mov
jg
and
loop
out
push
adc
imul
cmp
or
push
adc
sbb
sbb
fstp
repz
retf
dec
mov
or
sbb
push
dec
aad
sbb
pop
jb
ret
sub
pop
xchg
into
(bad)
scas
into
(bad)
jmp
cmp
adc
aas
and
mov
test
clc
push
xchg
xchg
adc
dec
pop
xor
push
push
pop
adc
pop
(bad)
in
adc
shr
leave
jo
add
sub
test
sbb
jge
cs
in
mov
test
inc
or
push
push
mov
sub
pop
aas
inc
test
cmc
jns
push
lods
dec
xor
jmp
dec
aaa
mov
pop
or
daa
sti
arpl
iret
xchg
hlt
scas
sbb
jo
jo
pop
(bad)
int3
imul
call
mov
pop
xchg
lods
pop
or
addr16
loopne
out
jno
mov
dec
test
push
adc
into
(bad)
sbb
dec
rdmsr
jo
mov
sar
lds
ror
aaa
enter
sub
dec
dec
push
hlt
jl
inc
arpl
lods
lock
sub
call
outs
mov
call
aaa
add
mov
js
xchg
add
fcom
test
add
push
mov
test
sub
ja
jl
sahf
int3
ja
das
pop
adc
cmps
mov
pushf
cmp
mov
mov
inc
mov
add
icebp
ret
retf
aas
mov
jmp
sbb
push
inc
sub
xchg
adc
(bad)
jb
outs
mov
in
rcl
retf
mov
dec
repnz
ss
push
aas
cmp
xor
(bad)
pop
jl
cmp
cld
popa
cwde
pop
push
bound
daa
mov
inc
jnp
jo
gs
add
push
cmp
ret
gs
cmp
push
mov
dec
dec
inc
cdq
sub
in
scas
cld
inc
dec
jb
sub
jge
cmc
int3
mov
cmp
inc
dec
ja
inc
xchg
fimul
push
repnz
fst
pop
jle
gs
xor
xlat
fwait
cmp
jbe
in
push
cmps
or
scas
dec
mov
jo
ss
pushf
pop
sub
loope
movs
cmps
push
jnp
lds
adc
xor
xchg
mov
popf
shl
mov
jmp
sbb
push
popf
dec
sahf
dec
imul
aaa
fisub
mov
mov
cwde
add
ss
mov
xor
fcomi
sbb
cmp
fstp
adc
es
inc
or
mov
fwait
(bad)
jg
loop
cmp
adc
sub
pop
xchg
push
cmp
outs
call
gs
xor
jp
fdiv
test
pop
adc
adc
cmps
ficomp
pop
push
jno
mov
fidiv
push
adc
stos
sar
mov
icebp
xor
pop
pop
add
pop
sbb
nop
leave
push
cmp
jns
retf
push
scas
add
push
jnp
jo
out
push
mov
cmps
fucomp
fucomip
xor
movs
fldcw
jle
out
test
js
fistp
jle
dec
xor
push
xchg
mov
imul
sar
inc
push
test
push
popf
mov
std
cmp
mov
dec
pop
sti
jmp
fcomp
(bad)
xchg
inc
cmp
cwde
pop
pop
push
add
mov
popa
push
jae
push
imul
xchg
fs
in
mov
retf
add
and
and
es
call
call
dec
inc
sub
jmp
dec
ins
(bad)
cmp
or
(bad)
sbb
lea
mov
fst
add
das
jno
jno
push
jo
ret
fcmovnbe
cmp
fisub
inc
not
cmps
inc
mov
stc
fbld
fimul
sub
neg
stc
xchg
ret
inc
jl
mov
mov
cmp
imul
je
cmp
xor
jnp
call
loopne
adc
shl
or
dec
add
ds
idiv
popa
fadd
xchg
shl
xor
xor
sub
ins
loope
iret
not
or
test
retf
sti
lods
dec
add
jo
nop
stc
iret
jecxz
mov
jmp
retf
inc
imul
jne
shl
pusha
loopne
or
es
test
repz
mov
loopne
sbb
ret
jmp
out
test
ds
dec
mov
mov
adc
sub
loopne
dec
ret
mov
adc
aas
call
sub
inc
pusha
xchg
mov
ja
int3
xchg
push
test
push
pop
cmp
inc
and
cmp
int
xor
mov
jle
data16
dec
mov
and
ins
mul
(bad)
adc
inc
movs
clc
mov
ret
cmp
dec
jle
cdq
adc
push
retf
mov
mov
in
mov
mov
popf
mov
movs
clc
inc
mov
ret
sub
movs
push
call
loopne
test
(bad)
adc
dec
adc
mov
stc
sub
nop
out
in
adc
xchg
ins
adc
outs
pop
sti
mov
sub
or
or
xchg
or
jmp
fsubp
pusha
push
retf
jmp
sub
pop
jae
push
fwait
xor
les
out
jecxz
push
or
push
push
xchg
sahf
ins
xchg
loopne
cmp
es
mov
stc
and
ja
mov
push
dec
sbb
sub
or
cmp
outs
lahf
add
pusha
sbb
outs
cmps
test
aas
(bad)
or
loop
cmp
inc
mov
cmp
data16
pusha
jmp
loope
fcomp
jo
cwde
mov
mov
call
cmp
sbb
sub
scas
jp
enter
inc
push
lods
or
xchg
xor
or
mov
lds
jae
or
mov
dec
adc
mov
outs
inc
or
xchg
lock
add
sbb
rcr
mov
js
frstpm(287
in
dec
pop
loop
cs
push
push
shr
fnstsw
and
int3
nop
cdq
xor
sbb
mov
mov
pop
rol
outs
test
xor
mul
xchg
cmp
xchg
(bad)
pusha
mov
test
cmps
pop
push
retf
mov
fxch
imul
xchg
inc
pop
cwde
int
push
mov
xlat
outs
jmp
jg
dec
cli
hlt
jo
(bad)
sti
sbb
cdq
cmp
ror
adc
dec
fwait
retf
out
fistp
outs
mul
cdq
add
int
jae
arpl
addr16
jae
mov
or
dec
jmp
call
jge
mul
xchg
push
jno
mov
(bad)
push
stos
in
loope
pop
jp
call
or
shr
in
cmp
mov
mov
rcl
or
out
add
jb
xchg
neg
out
cld
ret
je
cmp
dec
repz
pop
lock
cmps
push
mov
out
jbe
test
test
lock
in
jecxz
mov
mov
adc
test
dec
jb
fisttp
push
xchg
in
je
mov
mov
mov
dec
inc
sbb
cmps
shl
xor
xor
or
cwde
mov
dec
inc
inc
inc
xlat
or
pop
loope
fiadd
xchg
inc
test
fs
push
sub
adc
jno
sub
xor
sbb
xchg
pusha
test
aad
aas
mov
inc
dec
sub
rcl
cmp
adc
movs
outs
int
xchg
inc
enter
push
jnp
mov
js
hlt
shl
jmp
ror
dec
mov
aam
gs
pop
push
mov
cmp
sub
xchg
(bad)
xor
call
jno
pop
dec
in
in
mov
sahf
adc
pop
cmps
add
or
out
jecxz
mov
(bad)
pop
and
cmps
pop
ror
jnp
push
inc
arpl
dec
add
mov
(bad)
jnp
or
(bad)
aam
mov
jno
cmc
jae
std
pop
sub
push
fdivr
add
cmc
push
mov
mov
out
div
cmps
lods
sub
mov
out
xchg
mov
mov
clac
sti
cmc
push
jb
mov
dec
or
test
out
int3
mov
xor
sbb
pop
js
cmp
lds
inc
or
movs
mov
std
push
out
jmp
xchg
jae
(bad)
mov
xchg
js
sbb
jl
jle
mov
in
ret
inc
sar
gs
pop
ret
imul
push
push
xchg
mov
dec
xor
jb
adc
out
adc
mov
adc
and
sti
pop
lea
loop
test
sub
mov
pop
jne
sub
ins
mov
not
mov
sbb
in
in
xchg
popa
mov
push
adc
scas
cmp
jp
jo
jle
loop
pop
mov
cs
mov
lds
mov
movs
mov
push
sbb
mov
inc
popf
push
lahf
jne
icebp
push
std
mov
push
cdq
sbb
jmp
imul
je
mov
lods
xchg
in
(bad)
xor
ins
in
(bad)
(bad)
pop
adc
test
lahf
ins
dec
out
cmp
lods
gs
cmc
div
dec
nop
out
je
sub
sbb
or
cmp
sahf
sbb
mov
mov
dec
mov
mov
dec
enter
mov
or
adc
pop
pop
rcl
add
in
movs
das
pop
add
pusha
push
jbe
mov
add
or
inc
sbb
dec
pop
push
cli
pop
out
push
mov
aad
mov
jg
in
cdq
push
pop
scas
xor
fdivrp
test
fsubrp
add
pop
dec
lods
imul
test
in
leave
add
stc
sbb
and
xchg
das
or
ret
mov
mov
in
push
ins
shl
jecxz
dec
out
out
push
jle
imul
inc
ret
lahf
xchg
int3
pushf
add
jo
xchg
scas
(bad)
loop
stos
rcl
mov
inc
test
cmp
sbb
add
xchg
fs
mov
adc
mov
mov
mov
repnz
adc
enter
int
mov
add
add
das
jns
bound
loop
pop
inc
aaa
sbb
ins
inc
mov
mov
push
(bad)
add
sub
aad
dec
call
test
dec
inc
div
and
xchg
cmps
fwait
lahf
stc
sbb
push
sub
push
ins
movs
pop
imul
sub
lods
xchg
neg
arpl
sub
push
mov
arpl
push
xor
fnsave
pop
jge
sbb
retfw
je
pop
cmps
and
(bad)
or
pop
push
add
adc
cmp
inc
sbb
dec
jle
mov
inc
xchg
lods
adc
mov
pop
xor
jns
in
xchg
xor
fmul
jge
fidiv
lahf
push
or
inc
les
mov
ins
rcl
in
mov
movs
mov
shl
mov
cmps
or
es
jb
bound
loope
rcr
xor
cmp
xchg
nop
es
or
pop
jmp
fwait
cs
pop
ret
mov
jg
sub
iret
fld
adc
(bad)
mov
push
imul
pop
int
cmc
push
pop
movs
adc
pop
push
mov
mov
xor
mov
retf
ret
mov
jns
ret
leave
adc
test
sbb
int3
dec
push
mov
fiadd
sahf
sbb
sbb
pusha
out
jmp
std
xchg
fdivr
cmp
in
(bad)
push
cmps
aas
jle
jmp
sbb
mov
retf
cli
jg
mov
adc
cmp
dec
imul
bound
rcl
call
lods
mov
dec
mov
mov
test
mov
and
stos
outs
bound
inc
cld
ss
cwde
imul
(bad)
fadd
push
push
cmp
cdq
inc
and
adc
scas
pusha
scas
ficom
(bad)
lds
mov
dec
inc
int3
adc
dec
sbb
adc
xor
repz
(bad)
sbb
loopne
push
mov
retf
test
cmp
jnp
adc
mov
(bad)
sub
cmp
cs
xor
lock
aam
stos
inc
sub
dec
lods
sub
mov
test
enter
mov
mov
push
clc
popf
repz
outs
or
loope
push
int
hlt
mov
xlat
and
fcomp
dec
test
out
popf
leave
ror
das
mov
(bad)
pop
inc
pop
cmps
sbb
push
pop
(bad)
or
xchg
mov
and
and
xor
push
xchg
or
push
jmp
out
add
mov
inc
push
iret
cli
xchg
std
or
dec
and
lea
push
(bad)
xchg
ins
jns
sahf
movs
inc
cwde
push
jge
ds
cmp
pop
or
sbb
add
and
mov
dec
jbe
clc
jns
mov
cmp
nop
loopne
push
xor
ja
add
pop
lock
(bad)
cwde
mov
ds
sbb
fnstcw
xchg
xchg
mov
jno
test
pop
in
(bad)
loope
aaa
inc
(bad)
and
pop
sahf
jl
and
add
ins
add
and
cdq
jnp
test
mov
cli
loope
cmp
or
push
push
fadd
cmp
movs
psrld
sbb
sub
push
jl
call
lods
pop
push
hlt
pop
fidivr
jmp
fstp
mov
adc
mov
test
and
(bad)
jb
xor
push
mov
jmp
push
xchg
sub
fadd
mov
dec
jae
(bad)
mov
mov
popf
mov
mov
add
adc
sub
xchg
out
jl
or
inc
repz
ror
sahf
dec
push
dec
push
int3
in
or
or
stc
push
xor
shr
scas
shl
sti
jp
xchg
daa
jnp
jl
adc
enter
and
imul
(bad)
sub
scas
mov
adc
add
jnp
xor
jecxz
ja
inc
cli
sar
ja
add
cmps
add
call
xchg
sub
call
sbb
mov
scas
leave
out
jae
aaa
or
and
stos
add
(bad)
retf
in
neg
test
imul
adc
shr
mov
dec
(bad)
out
pop
mov
je
icebp
cdq
and
cdq
push
xchg
dec
cmc
retf
xor
cmp
test
mov
xor
ror
stos
inc
mov
mov
in
repz
daa
loop
pop
das
cli
cwde
inc
jb
xchg
pop
test
cmps
js
or
mov
fbstp
pusha
repz
cs
sub
out
je
mov
out
das
movs
leave
push
movs
pop
enter
nop
dec
loopne
sbb
neg
stos
pop
xchg
nop
fucomi
mov
repnz
or
shrd
aam
xchg
jns
outs
cli
fst
jge
les
xor
(bad)
lds
xor
add
mov
pop
push
rol
or
je
xchg
xlat
fsub
jecxz
mov
aad
mov
repnz
and
and
xor
mov
adc
imul
inc
jmp
aaa
(bad)
loop
xor
cmp
cmp
arpl
cmp
arpl
in
cmp
push
adc
lahf
data16
pusha
xchg
js
cwde
ds
push
test
mov
jne
sub
sbb
mov
and
adc
(bad)
add
mov
pop
sub
mov
out
mov
xchg
outs
pop
aam
inc
push
aam
aam
addr16
dec
and
add
test
fsub
fld
mov
xchg
icebp
setns
or
and
and
adc
add
inc
xchg
cdq
adc
dec
pop
jl
mov
inc
lahf
push
(bad)
mov
jmp
jp
sbb
jae
or
aad
stos
sub
pusha
mov
popa
repnz
add
dec
leave
retf
jno
pusha
pop
mov
into
inc
xchg
mov
inc
xchg
sbb
mov
cli
rcl
push
inc
mov
sbb
mov
ss
sub
mov
test
or
push
std
mov
dec
bound
or
(bad)
test
push
repz
xchg
cmc
sub
push
mul
sub
xchg
mov
and
retf
in
jmp
pop
loopne
mov
cmp
mov
(bad)
adc
std
cs
(bad)
retf
int
sti
dec
repz
test
ins
mov
add
ret
repnz
std
mov
push
nop
jmp
pop
cwde
mov
idiv
mov
pop
cli
cmps
js
loop
dec
adc
clc
hlt
ret
dec
mov
pop
add
push
aas
inc
cmps
push
ds
bnd
retf
popf
mov
out
pop
test
sar
outs
loope
inc
sar
mov
or
sbb
jne
fnstenv
mov
pop
mov
movq
clc
or
in
push
push
cmps
nop
jecxz
xchg
pop
enter
test
jmp
jae
je
pop
cmp
pop
fidiv
cdq
xchg
pop
or
and
ja
push
mov
jge
and
adc
or
fdivr
out
add
and
mov
scas
sub
inc
idiv
mov
mov
stc
mov
xor
mul
lods
mov
dec
sub
add
mov
sti
popa
xchg
call
mov
fisub
jnp
fild
pop
pop
loop
mov
xor
jnp
pop
sbb
rol
push
mov
sub
fiadd
mov
push
pop
mov
sub
and
mov
adc
cld
mov
sub
sbb
movs
push
gs
mov
sub
adc
xor
(bad)
adc
inc
push
gs
mov
xchg
popf
loopne
stos
fisttp
xchg
div
movs
and
cmps
retf
pop
xchg
retf
jge
sub
popa
cs
xor
dec
add
lea
mov
cld
ret
icebp
mov
push
jbe
mov
cmps
int3
mov
or
xor
leave
std
and
repz
cwde
enter
cmc
and
in
jno
dec
bndldx
addr16
imul
pop
in
fimul
outs
jg
jge
xchg
ret
pop
or
xchg
int
jb
retf
sbb
inc
push
inc
xchg
sub
test
push
call
nop
inc
push
fwait
lahf
cli
nop
jb
iret
sbb
xchg
ss
inc
movs
scas
addr16
sub
popa
cwde
add
loopne
loope
fcomp
xchg
int
enter
cs
test
push
xchg
mov
cdq
mov
(bad)
jmp
int
xchg
ds
stc
in
jb
iret
(bad)
pop
xlat
xor
clc
pop
movs
sub
sbb
enter
pop
xchg
movs
push
add
ins
or
cli
adc
jae
pop
pusha
cdq
test
or
movs
leave
push
clc
mov
sbb
out
aam
addr16
fwait
inc
sbb
xchg
cmc
mov
xchg
outs
and
jo
mov
xor
cwde
fild
mov
and
lahf
pop
fist
sbb
pop
mov
cmc
inc
or
cmps
cld
(bad)
or
adc
fs
cmp
cld
or
or
jecxz
jle
in
out
aam
into
and
pusha
mov
pop
call
add
sbb
paddsw
ret
sub
ret
pop
pop
cmp
repz
jge
dec
jle
test
movs
addr16
sbb
out
pop
(bad)
sbb
cmp
shl
cli
xchg
outs
ret
mov
lds
xchg
pop
push
sbb
sub
cwde
adc
clc
pop
repz
adc
movs
scas
ja
daa
jb
nop
mov
dec
jnp
push
inc
into
mov
push
clc
gs
(bad)
out
test
cmp
iret
repnz
cmp
sub
sub
mov
bound
or
pop
dec
add
xor
adc
hlt
aad
adc
sbb
test
std
add
push
je
inc
mov
mov
js
lock
mov
inc
sar
mov
xor
cld
or
or
dec
jnp
cmps
jo
stos
mov
jns
or
hlt
and
add
dec
int
fisttp
sbb
mov
js
sahf
(bad)
add
es
jg
mov
mov
dec
inc
adc
xor
cmp
push
jmp
xchg
popf
jg
in
mov
fidiv
test
retf
push
cmps
fwait
and
xor
sar
ins
push
and
mov
pop
add
and
cli
mov
xchg
jmp
int
push
jmp
sbb
adc
bnd
push
inc
jnp
xor
mov
jns
movs
cmc
lea
test
sbb
out
sahf
out
enter
or
push
mov
mov
rol
push
sbb
pop
jbe
inc
and
loopne
dec
(bad)
ret
(bad)
repnz
jecxz
pop
pop
in
jo
ret
pushf
mov
lea
(bad)
push
rcr
push
dec
inc
ret
push
dec
arpl
loop
xchg
xor
(bad)
neg
int
in
jae
jl
add
sub
popf
out
ror
rcr
and
fist
lods
mov
dec
dec
sti
fucomi
adc
jbe
pop
(bad)
cs
test
test
jp
loop
ss
pand
aas
jnp
ja
sbb
jge
cmps
cmps
fmul
xor
pop
pop
adc
gs
repz
shr
loopne
jmp
into
clc
xor
dec
mov
(bad)
fbstp
div
push
or
inc
fild
retf
mov
jns
push
and
mov
call
cmp
fimul
std
adc
jmp
pop
pop
dec
jne
pop
sbb
sbb
in
dec
inc
retf
jmp
out
inc
jo
mov
not
fild
bnd
push
lock
adc
adc
dec
aaa
mov
mov
and
in
push
in
mov
jno
mov
jp
push
jl
pushf
cs
pop
cmp
cmc
cmp
sub
cmp
popf
lea
mov
data16
cmp
sub
sub
fadd
pop
jne
mov
pop
movs
stc
adc
div
sbb
lds
sbb
xchg
addr16
ins
push
and
lea
int3
dec
adc
inc
js
pop
jp
icebp
push
cmps
and
sbb
mov
adc
xchg
dec
cli
jb
(bad)
sar
mov
or
mov
repz
adc
and
sub
inc
adc
sub
outs
push
bound
mov
sub
fcomp
push
movd
shl
sbb
push
push
push
inc
push
(bad)
stc
ror
lods
mov
pop
mov
call
ret
lds
ret
push
clc
cmp
cmp
scas
call
xor
mov
fimul
xchg
imul
sti
pop
push
sub
jno
adc
push
es
das
inc
dec
dec
adc
dec
pop
cmp
jb
xlat
mov
gs
xor
sub
hlt
push
inc
pop
mov
test
jmp
push
pusha
repnz
cmp
movs
pop
lahf
or
inc
sub
xchg
cmp
bnd
jmp
mov
in
mov
and
inc
es
cmps
popa
cmp
dec
xor
dec
fld
push
xor
lods
and
rcl
adc
cld
add
adc
pop
lods
call
mov
iret
add
lock
dec
add
adc
pusha
mov
xchg
imul
xchg
jno
in
imul
push
dec
imul
movs
xchg
jmp
fisttp
mov
cld
mov
or
mov
mov
dec
je
bnd
test
dec
cli
retf
hlt
add
and
cmp
aam
repz
mov
adc
sar
cmps
test
sbb
(bad)
cs
inc
dec
jb
xor
push
in
fisubr
les
xor
(bad)
lahf
cmp
mov
xchg
outs
xor
hlt
and
inc
push
imul
jg
pushf
mov
mov
sti
fdivr
and
ss
or
jns
pop
sub
ficom
xor
(bad)
push
leave
ret
cmps
jge
mov
out
sbb
push
jg
pop
push
and
vmwrite
jae
mov
inc
mov
xor
fsubr
les
ins
shr
stos
push
jge
mov
mov
in
hlt
or
dec
cli
add
out
ret
or
pop
jmp
xor
(bad)
mov
mov
imul
xlat
je
lea
inc
std
push
mov
inc
adc
jecxz
inc
std
gs
lds
call
sub
lock
adc
shl
xchg
cli
sbb
in
fwait
cmp
bound
cdq
retf
loopne
xor
pop
sahf
dec
mov
xchg
adc
pop
mov
or
adc
popf
in
mov
cmp
popa
ret
div
dec
repnz
xchg
mov
shr
ss
mov
xlat
mov
cli
sti
xor
or
sub
mov
xchg
add
dec
scas
sbb
xchg
add
out
sub
je
jno
lods
sbb
push
sbb
add
sbb
push
popa
std
pop
aaa
ror
xchg
dec
jp
xor
push
repz
mov
add
fdivr
or
mov
jne
dec
out
jecxz
jmp
aad
dec
fld
mov
mov
adc
mov
int
inc
inc
popf
inc
in
imul
dec
pop
sub
mov
cmp
xchg
push
fstp
mov
jp
jo
call
shl
into
int3
sbb
sahf
sahf
(bad)
repnz
les
lahf
iret
sti
push
mov
and
xchg
(bad)
test
sub
dec
inc
or
clc
cmp
test
jns
jle
xor
sub
or
aaa
sub
mov
cmp
bound
mov
in
sbb
jnp
xor
lods
cmp
mov
idiv
loop
sbb
mov
cmc
ds
push
scas
inc
rol
mov
shl
stos
sbb
push
daa
iret
xchg
push
leave
cwde
dec
sub
and
sar
scas
jo
sbb
jns
test
int
fsub
js
nop
mov
pop
inc
in
shr
adc
lods
mov
sub
add
mov
dec
xor
gs
fs
test
xchg
rol
xor
xchg
les
cmp
call
int3
lea
dec
fisub
sub
aas
and
cmp
or
mov
mov
xchg
icebp
les
xlat
pop
cmp
jno
ficomp
or
jb
repnz
push
dec
arpl
push
add
mov
in
out
jne
fsubp
call
push
ins
and
clc
loopne
in
std
push
pop
(bad)
test
pushf
sbb
arpl
cmp
sbb
nop
loopne
loopne
fnstsw
cmps
retf
dec
div
outs
xor
bound
cmp
test
pop
lds
pop
cld
fldcw
mov
retf
sbb
scas
cwde
(bad)
in
add
fwait
in
aam
jo
xchg
cli
lods
ret
js
inc
or
stc
in
jmp
arpl
outs
and
std
into
dec
clc
pop
dec
call
mov
sbb
lds
call
dec
mov
ja
mov
fcmovne
sub
data16
dec
adc
sti
sub
xlat
mul
shl
xchg
nop
bound
push
sahf
mov
js
pop
outs
iret
push
mov
inc
sub
mov
je
fld
cmp
fisttp
jge
mov
out
pop
mov
bound
push
xchg
and
mov
push
sbb
ret
enter
movs
stos
nop
out
mov
inc
sub
ins
ja
xor
mov
clc
out
sbb
test
mov
ss
es
(bad)
mov
cmp
or
repz
iret
xor
jp
addr16
push
mov
sbb
xor
rol
adc
sub
sub
or
mov
repnz
mov
std
ins
retf
push
fsub
das
fcmovnb
adc
push
(bad)
inc
jmp
inc
dec
retf
in
push
jmp
pop
mov
(bad)
sbb
(bad)
push
sbb
loope
mov
(bad)
adc
or
push
mov
push
and
inc
pop
call
inc
test
inc
ins
aas
les
push
push
sub
test
sbb
imul
xor
not
mov
aad
cld
inc
mov
shl
pop
xchg
xchg
retf
fild
test
and
sbb
aas
into
mov
stos
or
iret
jp
ss
repnz
jno
(bad)
sub
add
push
cmps
mov
cmps
cmps
addr16
sbb
add
data16
aad
rcr
inc
clc
mov
das
mov
in
xlat
cwde
retf
(bad)
adc
sbb
add
sub
push
aaa
and
sbb
xlat
dec
ret
(bad)
jle
mov
xlat
inc
jl
or
test
mov
sbb
mov
jne
push
repnz
loope
fistp
fsub
jle
js
clc
inc
sti
fst
and
lds
gs
or
cmp
mov
fs
or
inc
(bad)
(bad)
push
mov
inc
cld
xor
add
daa
sub
popf
movs
jne
xchg
xchg
inc
add
xchg
in
lea
mov
scas
pop
xchg
mov
jb
aaa
xchg
dec
out
loope
add
in
ins
cdq
add
stos
sub
fistp
xor
inc
cmpxchg
jnp
adc
out
mov
popa
out
ja
jbe
cmps
inc
mov
mov
shr
retf
gs
outs
add
mov
inc
push
lods
ret
cmp
(bad)
daa
or
outs
jle
xor
sub
or
cmovg
jmp
fild
popa
in
out
test
mov
and
mov
(bad)
(bad)
pop
pop
(bad)
clc
iret
mov
sub
xchg
(bad)
mov
int
adc
adc
adc
adc
xchg
faddp
repz
sub
mov
fidiv
retf
ror
cmp
dec
loop
iret
rcr
push
rcl
adc
sbb
pop
aaa
mov
cmp
dec
inc
jecxz
inc
add
les
sti
sbb
add
push
sbb
mov
xchg
arpl
pop
stos
adc
and
and
jmp
inc
xor
outs
jae
ss
inc
pop
retf
add
stos
pop
push
dec
(bad)
addr16
dec
out
dec
push
mov
dec
pop
jmp
sbb
dec
mov
arpl
popa
cmp
ret
ror
ins
pop
mov
ret
ds
test
gs
ret
mov
ds
lods
inc
call
movs
mov
pop
adc
jnp
sar
sub
(bad)
imul
push
ret
(bad)
jns
adc
stos
push
cdq
pop
add
in
cmp
loop
stos
pop
jmp
xchg
xor
xchg
out
add
push
movs
out
mov
test
mov
imul
inc
test
push
mov
dec
(bad)
lds
ins
ja
es
pop
sbb
or
pop
jb
add
cwde
jns
inc
dec
xchg
xchg
xor
popf
test
(bad)
mov
adc
(bad)
mov
test
pop
or
fs
mov
out
mov
(bad)
inc
frstor
push
(bad)
repnz
adc
(bad)
xor
and
ret
mov
adc
inc
mov
addr16
hlt
inc
xor
inc
push
push
js
cmc
mov
mov
sbb
mov
pop
test
cmp
mov
pop
test
mov
out
jns
int
in
movs
xchg
xchg
cld
call
cmp
or
in
fnstcw
stos
inc
push
arpl
xlat
test
mov
daa
shl
ret
rol
inc
lds
mov
dec
pop
das
imul
ret
sub
push
in
pop
test
mov
cmp
cmp
movs
cld
gs
mov
outs
xchg
out
loope
sub
cmc
sar
and
mov
adc
mov
cs
cmp
mov
or
mov
dec
jb
jg
cmp
stc
jle
mov
arpl
aad
aad
mov
push
dec
xor
pusha
popa
jnp
xchg
(bad)
arpl
cld
mov
push
dec
icebp
fsub
lods
sub
or
(bad)
popf
outs
sub
add
dec
cmp
add
dec
ss
sub
loope
mov
sub
cs
inc
ficomp
daa
mov
inc
dec
jp
imul
jne
sahf
inc
xor
scas
sub
(bad)
pop
les
xor
pushf
fwait
dec
cmp
cld
ret
(bad)
rcl
aaa
xlat
(bad)
aad
int3
loope
(bad)
fbstp
mov
xchg
fisub
or
sbb
retf
sub
mov
stos
mov
pusha
stos
jmp
dec
push
nop
sub
cld
pop
add
in
push
sub
or
dec
mov
bound
mov
es
into
add
es
jmp
scas
(bad)
out
xchg
jo
cmp
add
pop
cmp
xlat
daa
(bad)
dec
daa
sbb
stc
(bad)
daa
fmul
mov
(bad)
pusha
mov
mov
mov
mov
pop
repnz
icebp
jae
mov
outs
and
dec
adc
mov
xor
mov
fistp
mov
mov
sub
cmp
(bad)
mov
add
mov
pop
xchg
and
cmp
setnp
push
inc
loope
xchg
mov
adc
dec
push
stos
or
fcom
nop
retf
dec
dec
icebp
or
inc
add
push
scas
call
call
pusha
add
sub
stos
inc
dec
stc
and
into
cmc
cmc
lea
out
mov
mov
fcmovu
mov
mov
cmp
xchg
adc
fidivr
in
and
dec
lahf
mov
movs
add
mov
int3
sahf
(bad)
push
clc
mov
inc
jb
jbe
lods
inc
cmp
push
xor
addr16
jmp
jnp
jmp
push
jp
pop
ds
idiv
fstp
inc
cmovb
adc
cli
or
push
ds
ror
inc
push
repnz
std
dec
(bad)
pop
movs
dec
sbb
xchg
(bad)
add
in
cmps
neg
(bad)
cmc
cld
ins
add
dec
xor
fsubr
pop
ficomp
ja
sbb
sub
jno
outs
xchg
mov
ret
fild
cli
sub
mov
aaa
cwde
xchg
jp
cwde
pusha
mov
leave
mov
gs
cmp
and
sbb
mov
js
scas
mov
mov
imul
pop
adc
jmp
mov
mov
xchg
bound
cmp
test
cmp
or
ds
hlt
shl
sub
inc
push
sbb
(bad)
idiv
pop
xor
add
mov
mov
push
sbb
mov
dec
ds
xchg
dec
or
mov
jno
jbe
imul
pop
jnp
dec
add
mov
add
or
jae
iret
in
jbe
adc
out
dec
call
fcom
ficomp
jle
jge
popf
ss
jge
stos
call
mov
mov
jbe
mov
inc
loopne
sbb
out
movs
daa
pop
push
daa
into
shr
out
dec
gs
push
dec
lock
in
xor
mov
lods
cmp
and
(bad)
loop
out
and
gs
sub
or
add
ins
jle
pop
and
out
stos
jmp
sub
out
pusha
jae
mov
movs
(bad)
das
xchg
ins
mov
push
mov
das
data16
fimul
movs
ja
cdq
mov
dec
pop
push
sub
add
stc
test
data16
scas
mov
dec
xor
fisttp
sbb
outs
fnstsw
push
push
fnsave
pop
sahf
shr
pusha
mov
jns
ret
dec
xlat
pop
das
stos
sbb
call
stos
jmp
mov
jo
movs
movs
cwde
dec
inc
xlat
mov
ficomp
pushf
dec
sub
and
jg
dec
sbb
lock
test
push
pop
sbb
imul
sti
cmc
and
(bad)
and
push
jl
mov
pop
call
loopne
(bad)
test
movs
or
movs
mov
inc
shr
popf
cld
ds
popf
and
pop
xchg
jb
out
or
xchg
jecxz
jns
rol
sbb
int3
dec
(bad)
jb
fiadd
test
dec
jp
mov
scas
or
out
ja
sub
add
mov
sar
pushf
(bad)
jge
pusha
fcomip
or
daa
mov
ficomp
pop
sbb
pop
pop
cmc
bndldx
adc
dec
nop
mov
adc
ds
dec
aad
inc
loope
test
rol
bound
cmc
fidivr
cmp
in
fdivrp
adc
retf
fst
jl
shl
ss
sub
in
shr
sbb
add
shl
repnz
int
loope
test
and
mov
loop
in
cmp
push
or
push
sahf
mov
sahf
call
mov
xor
push
push
jae
mov
pop
ds
mov
add
sub
dec
cmp
cmp
sub
sbb
dec
lock
xor
push
rcr
or
add
and
rcl
out
inc
jl
sbb
xchg
push
adc
mov
cmp
cmps
arpl
or
jae
sbb
jns
pushf
movs
arpl
mov
out
xchg
daa
test
inc
setns
cs
imul
jmp
push
push
fld
sahf
in
mov
push
mov
clc
and
(bad)
mov
cmp
cmp
hlt
push
loopne
sahf
fstp
jb
cmp
fnstcw
in
std
xchg
adc
sub
and
or
bound
and
dec
or
loope
pushf
add
inc
outs
push
popa
fwait
out
dec
pop
cs
jge
mov
xchg
call
addr16
jmp
hlt
cli
into
mov
ins
aad
dec
scas
mov
mov
call
pop
test
jo
mov
cmc
fadd
xor
test
or
test
outs
repnz
pop
push
jge
scas
jae
int
(bad)
out
dec
push
mov
in
fidiv
xor
inc
mov
push
movs
imul
inc
inc
mov
call
sbb
in
xchg
pop
in
dec
lock
cmp
int
inc
push
vpmulhuw
and
fidivr
scas
lea
add
outs
adc
sub
jbe
pop
sar
int
pop
mov
data16
push
retf
es
push
lds
jbe
jl
add
dec
xchg
ret
(bad)
pop
dec
inc
xchg
xchg
add
push
(bad)
mov
es
dec
(bad)
(bad)
pop
mov
sti
mov
xor
mov
push
add
ja
pusha
mov
(bad)
daa
and
loopne
xchg
iret
push
add
inc
pop
cmp
mov
and
push
cmp
(bad)
jg
daa
sti
loop
push
inc
mov
ins
push
xchg
jl
and
dec
xor
js
(bad)
cdq
xchg
clc
sbb
aam
mov
mov
cmp
sub
push
out
adc
int
sbb
call
jge
loopne
pop
int
push
addr16
jbe
or
and
mov
mov
xrelease
cmp
inc
pop
or
iret
addr16
out
or
inc
outs
stos
dec
pop
push
fsub
mov
or
cmp
int3
in
jp
push
jb
int3
mov
or
cld
cs
mov
fidivr
sbb
jne
test
(bad)
fstp
and
add
jl
outs
or
jbe
or
je
imul
cld
push
mov
shl
dec
cmp
inc
dec
sbb
push
cmp
xor
dec
sbb
dec
dec
bound
rcl
add
push
adc
xor
or
gs
mov
pop
push
ds
push
pop
xor
cmp
fild
(bad)
loop
pushf
test
test
cmp
xor
add
cld
pop
int
mov
push
jno
pop
dec
jle
jns
xchg
xor
push
nop
push
mov
in
jmp
repz
jo
pop
pop
scas
adc
or
push
pop
sahf
mov
inc
into
mov
dec
mov
mov
push
jo
stc
(bad)
scas
or
out
push
and
test
cmp
mov
rol
in
push
or
in
fidivr
movs
sbb
push
rcl
(bad)
mov
add
enter
repz
sub
int3
jg
pop
daa
test
sti
jmp
mov
or
mov
mov
clc
xchg
das
in
mov
push
arpl
sub
push
out
jge
pop
jmp
cmc
pop
push
pushf
pop
xor
enter
xor
(bad)
pop
jo
jecxz
pop
icebp
jae
push
dec
jecxz
pop
out
sub
pop
retf
pop
(bad)
jnp
jecxz
xlat
hlt
dec
dec
add
xor
cmp
or
data16
dec
aaa
lahf
daa
aas
or
sti
push
test
jmp
add
in
mov
aad
and
mov
mov
mov
push
in
stos
(bad)
pop
movs
sub
sahf
mov
xor
das
xchg
sub
js
mov
inc
ret
sub
fwait
jmp
jmp
mov
jae
call
nop
xlat
xchg
mov
(bad)
call
test
dec
dec
cmp
enter
inc
or
cmps
mov
sbb
mov
mov
sbb
popa
movs
jge
fisubr
jecxz
push
retf
outs
add
mov
scas
mov
call
pop
outs
push
mov
jae
mov
iret
inc
cli
fwait
lahf
fistp
mov
fcom
(bad)
popa
push
ja
in
and
push
push
or
cld
xor
sbb
jecxz
ins
jp
outs
div
mov
dec
neg
or
(bad)
sub
imul
jmp
pop
push
push
movs
test
ins
xor
xchg
xor
sub
outs
mov
mov
add
jns
jmp
retf
and
dec
add
fldcw
sub
xor
or
push
jb
(bad)
out
pushf
and
iret
retf
and
adc
test
aad
adc
and
out
cld
pop
mov
fisub
dec
jmp
push
adc
inc
mov
add
add
inc
mov
movs
mov
or
adc
loopne
push
mov
adc
test
sbb
mov
adc
hlt
inc
sub
std
cdq
out
in
or
lods
cmp
imul
mov
fxtract
cmp
inc
sbb
into
sahf
leave
jmp
adc
ja
add
ud0
cli
push
fstp
jbe
mov
lods
push
pushf
enter
fld
out
xchg
jge
jp
push
add
shl
dec
cmc
popa
mov
loopne
aam
push
rol
mul
sub
cmc
aas
pop
or
mov
dec
or
dec
mov
mov
(bad)
mov
inc
imul
dec
outs
or
gs
jge
icebp
push
ss
mov
sub
aas
inc
shl
jae
clc
xchg
aad
in
(bad)
mov
mov
or
imul
mov
sub
fcmovb
sbb
sbb
out
push
xchg
push
lea
or
jno
add
dec
cmp
mov
pop
mov
ds
int
cs
hlt
mov
push
jmp
data16
dec
push
add
outs
mov
movs
jb
fs
ret
adc
lea
into
fstp
cli
lock
mov
popa
pop
jge
inc
fcomp
add
(bad)
mov
mov
sti
add
sub
xchg
xchg
gs
push
sahf
or
jbe
ins
sbb
jae
repnz
loope
pop
mov
iret
mov
rcr
data16
pop
push
add
dec
fwait
xchg
push
ins
in
sti
mov
int3
int3
push
std
into
ja
stos
call
jo
in
loope
pop
xchg
aam
mov
inc
sub
imul
xor
xchg
int
test
xlat
(bad)
cwde
aam
aas
cmp
fstp
push
sub
inc
out
or
cld
xchg
mov
out
cwde
mov
inc
add
dec
adc
fstp
or
or
push
mov
fist
mov
loope
sub
adc
and
mov
dec
icebp
jecxz
fisub
retf
imul
pop
xchg
jle
xchg
pop
mov
pop
cli
cmp
imul
mov
lock
js
pop
mov
sub
ror
inc
or
lds
push
add
xlat
pop
xor
(bad)
lods
mov
aam
jo
pop
leave
push
xchg
out
cmp
inc
mov
dec
cwde
mov
pop
js
and
iret
xchg
hlt
imul
cmp
add
scas
bound
mov
cld
sar
nop
jmp
sbb
mov
xchg
ins
cli
das
cwde
and
rol
jmp
pop
out
push
add
xchg
call
cli
xchg
aaa
dec
call
mul
jle
jg
pop
lock
enter
addr16
add
cmp
add
push
push
out
hlt
out
and
(bad)
cs
out
fdivr
jl
mov
push
add
sti
pop
(bad)
shl
cdq
jmp
jl
inc
push
ins
jl
cli
and
imul
and
cwde
stc
mov
das
nop
test
cmp
cmp
mov
jp
into
imul
or
(bad)
sub
xchg
stos
mov
dec
out
out
mov
call
or
movs
mov
pushf
xor
icebp
mov
outs
adc
imul
sbb
push
repz
cmp
mov
xchg
jmp
bound
and
jb
mov
add
and
out
mov
clc
rcr
ror
xlat
mov
or
push
repz
mov
add
and
sar
int
loopne
jg
cli
stc
dec
inc
push
jp
fild
inc
lods
ja
adc
loope
daa
pop
in
pop
call
out
xchg
ror
imul
das
cmps
pusha
mov
popa
inc
xor
out
xchg
adc
gs
add
mov
fdiv
repnz
sbb
add
sbb
lds
(bad)
push
xor
sub
cmp
pop
mov
cld
xor
stc
xor
mov
aaa
test
inc
bound
mov
out
frstor
push
data16
pop
pop
test
dec
sub
xchg
xchg
popf
dec
sub
pop
dec
push
cdq
outs
cmp
pop
fucomp
call
ss
fiadd
add
imul
push
mov
loopne
fwait
cld
cmp
push
push
jecxz
jns
std
sbb
jo
mov
mov
pop
xchg
ficom
push
and
dec
shl
sub
and
add
(bad)
dec
shr
retf
addr16
jmp
pop
mov
hlt
xchg
xchg
movs
outs
mov
jmp
ja
outs
(bad)
faddp
imul
std
push
pop
push
cdq
jns
push
cmp
mov
dec
loope
jae
int3
xchg
test
push
xor
dec
fmul
stos
mov
sub
or
(bad)
cmp
cwde
ins
scas
jmp
push
mov
xor
adc
adc
pusha
repz
mov
or
mov
inc
xor
xlat
push
cdq
aas
out
inc
sti
std
jge
mov
pop
mov
sbb
dec
push
jbe
dec
xor
pop
sbb
pushw
jg
data16
imul
mov
jge
lahf
loop
sti
ror
xchg
pop
pop
cs
pop
cli
pop
test
scas
mov
jge
lahf
lock
sbb
popa
xor
push
mov
ins
jb
xchg
(bad)
pop
dec
std
push
sub
outs
ins
cmp
mov
shl
and
rcr
das
call
adc
aad
pop
loope
pop
in
mov
sbb
push
pop
int3
sbb
cli
jo
push
retf
cmp
mov
test
repz
xlat
add
bound
pushf
ins
leave
pop
sahf
adc
arpl
cs
inc
je
cdq
mov
jae
xchg
in
sub
inc
sub
xchg
das
bound
cli
and
mov
xchg
add
cmp
push
stos
hlt
jae
ins
lds
(bad)
mov
xlat
push
scas
jecxz
inc
cli
loopne
and
les
in
push
cld
sti
out
outs
in
dec
imul
xor
pusha
out
adc
cmp
adc
cmp
ins
and
data16
gs
pusha
shr
cli
into
rcr
jbe
sahf
stos
or
push
std
sub
imul
(bad)
in
cld
pop
push
sbb
cli
adc
dec
push
(bad)
cdq
call
mov
push
fwait
cmp
lahf
stos
or
add
fnstsw
popa
outs
xchg
mov
(bad)
cwde
mov
rol
outs
mov
fnstcw
mov
or
adc
mov
lea
pop
and
pop
sti
mov
xor
or
dec
mov
inc
add
outs
push
fstp
push
and
mov
retf
ret
cmp
jb
stos
pop
pusha
hlt
mov
sbb
push
jle
and
mov
push
cmp
xlat
fild
add
pop
sbb
push
pushf
popf
cmc
dec
xor
push
push
(bad)
mov
push
jecxz
xchg
inc
pop
sub
addr16
push
enter
hlt
mov
pop
cmc
pop
inc
xchg
cs
mov
ds
ficomp
(bad)
and
xor
or
adc
pop
imul
inc
mov
fcomp
inc
repz
pop
fistp
pushf
fs
mov
mov
jae
pushf
imul
rcl
and
ins
ror
addr16
in
push
es
dec
int3
stos
and
and
cmp
loop
repz
pop
sar
repz
outs
scas
test
add
cmp
dec
stos
dec
cmp
imul
jl
pop
cmp
test
sbb
inc
std
in
bound
sbb
(bad)
movs
rol
call
ja
call
fisttp
adc
leave
ror
and
inc
sbb
xor
cmc
adc
xchg
push
xor
mov
cmps
sub
sub
sub
pushf
push
ret
mov
clc
pop
sub
mov
(bad)
fldln2
sbb
mov
fnstcw
(bad)
sub
out
jge
stos
jns
fist
pop
or
adc
scas
jle
mov
ret
out
out
scas
ror
push
sub
push
and
jno
mov
jmp
stc
ret
stos
cmp
dec
iret
mov
lock
shr
adc
inc
jl
cs
jl
ror
je
mov
in
outs
dec
push
fisttp
pop
lods
lods
and
inc
arpl
inc
shr
fadd
sub
into
jecxz
mov
dec
sbb
bound
je
sbb
movs
dec
fwait
hlt
sahf
push
pop
not
fimul
pop
pop
fs
ins
mov
jno
loopne
jl
ja
mov
mov
jns
mov
cli
jp
push
inc
cmp
mov
mov
mov
sbb
popf
adc
jo
sahf
pop
adc
jp
jno
hlt
cdq
pop
push
pop
cld
test
dec
(bad)
push
imul
push
repz
mov
std
repz
lahf
mov
fisttp
mov
fstp
sbb
xlat
leave
test
out
jmp
mov
jnp
rcr
jns
cwde
cmps
push
loope
out
jmp
repz
dec
xor
mov
aam
iret
movs
ret
or
movs
mov
sbb
and
(bad)
xchg
mov
call
inc
loope
sbb
stos
adc
ret
sub
ins
mov
mov
mov
cmp
into
fs
retf
adc
adc
mov
jmp
xor
shl
mov
ret
mov
hlt
popf
clc
mov
lods
jns
sbb
add
pop
pop
ins
jns
mov
mov
mov
jp
cmps
test
mov
inc
bound
cmp
cmc
adc
jge
mov
add
out
std
jno
add
dec
int3
or
xor
cs
pop
xor
pop
and
das
or
jp
jecxz
test
outs
add
jb
mov
imul
mov
ds
or
outs
jns
aaa
xchg
lods
jl
lock
xlat
jae
mov
out
jo
sub
sbb
cmp
btr
adc
mov
outs
stos
test
mov
cwde
repnz
add
fistp
loop
xor
cmps
push
xchg
sbb
sub
mov
pop
mov
fmul
push
xor
and
push
pop
inc
pause
jnp
add
mov
out
stos
xchg
adc
inc
imul
push
or
sbb
pushf
xchg
pushf
or
test
mov
hlt
das
ds
out
in
aaa
add
dec
mov
rcl
dec
popf
stc
retf
dec
ja
movs
fwait
lahf
gs
add
pop
cs
(bad)
test
out
xchg
dec
and
outs
punpckhbw
test
and
xchg
push
push
adc
mov
pop
es
dec
cmp
pop
inc
dec
jne
mov
mov
hlt
call
mul
jo
or
les
ret
xor
jl
aad
out
cmp
mov
outs
dec
jg
pop
sbb
push
jae
jmp
mov
dec
push
inc
mov
ss
pop
clc
or
dec
imul
sahf
inc
pop
and
mov
push
rol
fsub
push
js
inc
dec
pop
inc
and
ins
pop
(bad)
movs
pusha
push
cdq
fstp
pop
cs
inc
movs
aam
push
push
sub
xlat
mov
push
(bad)
xchg
neg
adc
dec
test
in
mov
sub
sub
mov
and
ret
add
xor
add
imul
fisttp
add
xor
imul
xlat
int3
mov
and
cmp
add
(bad)
cmc
hlt
sub
out
and
mov
xchg
aam
shr
bound
push
mov
mov
in
xchg
inc
inc
or
cmps
cmp
stos
jb
pop
xchg
mov
cmp
aas
or
fstp
xor
sub
call
or
pop
pop
loopne
(bad)
xor
xlat
(bad)
or
sub
popf
jns
into
jno
ss
sub
cmp
mov
addr16
pop
sub
sub
imul
loopne
mul
jmp
test
movzx
outs
fcomp
inc
sub
cmp
and
(bad)
(bad)
shl
or
int3
jae
add
sub
and
sub
fistp
in
xchg
loope
pop
jg
inc
aaa
add
mov
fiadd
gs
mov
pusha
pop
adc
ins
js
cmp
lods
mov
cmp
test
jbe
cmp
mov
adc
add
add
cmp
fwait
lods
xor
out
push
sbb
test
mov
imul
fstp
jne
cmp
pop
jecxz
mov
adc
aaa
cmc
mov
icebp
popf
push
ins
xchg
mov
pop
mov
adc
cmc
and
push
je
cli
test
cli
out
and
jno
sub
sub
pop
pop
aas
jmp
mov
in
test
push
pop
mov
(bad)
icebp
push
pop
jecxz
dec
jbe
shr
js
rcr
mov
outs
pop
add
push
xor
adc
jnp
dec
sub
mov
idiv
pop
mov
push
xchg
jns
data16
or
mov
push
aas
stos
xor
mov
add
dec
pop
mov
js
clc
popw
ja
mov
enter
lods
mov
and
jo
mov
leave
retf
inc
and
jmp
sub
stos
add
outs
xor
repz
inc
cmp
(bad)
dec
adc
mov
xchg
xor
aaa
retf
in
cmp
ss
inc
xchg
dec
jg
dec
sti
stos
mov
test
mov
jecxz
clc
mov
test
sbb
add
in
ja
and
add
out
sub
mov
and
stos
mov
push
dec
adc
popf
inc
mov
mov
fcom
mov
adc
rol
dec
inc
cmps
outs
ss
add
adc
xchg
push
mov
in
test
fdiv
shl
mov
fcomp
popa
(bad)
jl
imul
mov
int3
and
addr16
and
iret
sbb
push
fwait
sub
mov
and
popw
repnz
mov
jno
(bad)
mov
push
out
xor
out
xor
rcr
js
test
push
cmc
iret
push
and
imul
test
sbb
sbb
sub
pop
xor
lea
jnp
sti
out
cmps
lods
div
stos
stc
sbb
xor
in
push
add
cli
call
dec
jecxz
stos
out
add
or
lea
or
push
je
cmp
aas
stos
sub
adc
or
or
or
mov
cmc
cmps
adc
nop
mul
sbb
gs
out
adc
(bad)
repnz
fwait
inc
sub
aad
mov
xor
(bad)
movs
cmp
sbb
cmps
mov
fadd
les
les
and
sbb
es
sub
and
pop
sbb
sbb
rcr
ret
cli
pop
dec
cmp
sub
adc
loope
inc
mov
push
mov
sbb
dec
in
and
inc
aam
popf
out
div
fistp
cld
fisttp
pop
test
enter
jp
mov
xchg
iret
sub
xor
scas
mov
rcl
mov
gs
push
loopne
add
sub
dec
and
mov
or
add
call
adc
pop
xor
xchg
(bad)
xlat
(bad)
mov
imul
lock
cmp
out
jbe
mov
sti
sub
test
cmc
jecxz
aaa
cs
push
mov
nop
cmc
fisttp
mov
sar
jbe
mov
dec
imul
jle
mov
mov
data16
movs
fs
jb
in
jge
dec
pop
xchg
(bad)
call
xlat
push
add
out
xor
sbb
int3
jmp
cmps
pop
adc
mov
ins
into
in
xchg
jge
jecxz
out
cmp
pop
cmc
add
adc
nop
ins
test
dec
jmp
push
pop
cmp
lods
out
test
rol
ret
test
ret
cmp
or
adc
rcr
and
mov
rol
test
sbb
pop
iret
call
jecxz
ss
xchg
xchg
pop
cdq
jo
and
push
pushf
stc
mov
cmp
inc
dec
scas
dec
(bad)
call
dec
dec
lods
sub
xchg
into
mov
or
movs
or
adc
daa
dec
xchg
xor
inc
retf
aas
jp
jmp
test
sti
sbb
or
aas
sub
xchg
fmul
mov
push
loopne
jmp
mov
sub
mov
pop
cmps
jmp
push
jg
fadd
adc
mov
jne
fabs
mov
ret
dec
pop
enter
jnp
ds
jge
xor
add
mov
daa
out
xor
mov
push
push
mov
(bad)
scas
cmps
test
aam
push
clc
add
or
or
inc
cld
stos
jmp
ins
inc
je
rcr
fs
hlt
jg
jne
in
mov
outs
movs
jb
jb
inc
popa
push
xor
and
clc
cmp
adc
fdivr
fldcw
mov
(bad)
imul
mov
leave
jb
cwde
mov
mov
rol
mov
jle
cli
xchg
mov
scas
jae
pushf
arpl
call
test
scas
mov
popa
loope
and
loopne
fimul
repz
popa
bound
add
test
lahf
loop
cmps
shl
test
int
mov
push
ds
jo
push
std
xlat
xor
inc
nop
lods
(bad)
inc
pop
lds
rcl
outs
xchg
stc
inc
aas
lahf
cmp
shl
pop
dec
and
add
clc
gs
ror
jae
and
push
pop
push
pop
stos
mov
add
or
sub
(bad)
in
out
fisttp
adc
jmp
and
int3
(bad)
stc
sbb
cmp
aas
addr16
and
cmps
hlt
or
(bad)
jbe
adc
and
pop
les
daa
dec
or
or
cs
ins
cmp
push
and
push
and
dec
cmp
mov
jge
clc
jg
stos
inc
cmp
popa
xlat
xchg
jno
xchg
das
scas
ja
stc
fisub
lods
outs
inc
and
popf
add
(bad)
cmp
fst
mov
aad
inc
push
jp
mov
js
push
les
sbb
fidiv
aaa
adc
sub
cmp
rcl
mov
xor
mov
and
cs
sahf
mov
popf
das
sbb
pop
shr
or
loop
jae
inc
pop
dec
pusha
sbb
mov
adc
mov
(bad)
out
loope
xchg
pop
call
in
inc
jmp
inc
and
outs
stos
mov
repnz
in
mov
xor
or
jno
push
lds
or
xor
jle
ficomp
jmp
jmp
fwait
adc
sub
aas
jae
xchg
xor
dec
adc
pusha
in
mov
out
xchg
and
sbb
daa
cmp
add
and
test
rcl
adc
jb
ds
movs
clc
js
out
mov
int
es
push
pop
xor
nop
imul
cmc
fld
pop
not
fadd
push
mov
enter
clc
(bad)
cmps
fild
sbb
cli
(bad)
loopne
test
scas
cmp
loope
cwde
mov
(bad)
cld
mov
add
inc
sub
xor
aad
push
lahf
test
dec
inc
add
les
mov
pop
xchg
mov
neg
pop
(bad)
xlat
sbb
sbb
dec
mov
pusha
xchg
in
stos
and
inc
(bad)
jecxz
xchg
icebp
xchg
loopne
test
loopne
ins
xchg
xlat
add
imul
popa
add
push
pop
imul
pop
and
imul
push
add
fucompp
cli
add
add
sbb
in
or
aam
mov
into
popf
fild
shl
xchg
inc
stc
ja
pop
das
repnz
aam
int
pop
sub
dec
arpl
jmp
scas
sub
pop
(bad)
mov
inc
out
clc
(bad)
daa
ins
push
call
cmp
dec
sbb
mov
out
jge
ret
mov
inc
sub
das
jl
in
push
mov
push
and
push
int3
gs
arpl
mov
bound
jp
mov
popa
pop
push
xlat
in
je
leave
pop
xchg
das
out
mov
lods
imul
push
dec
call
les
mov
sbb
lock
stos
(bad)
out
jb
sbb
push
stos
jle
add
mov
xor
icebp
leave
xor
pop
dec
mov
mov
jmp
fidiv
ss
jmp
sbb
ds
lahf
lea
nop
fnsave
or
arpl
fadd
mov
nop
add
rol
mov
fwait
add
(bad)
jg
add
push
stc
inc
add
push
jno
dec
stos
sub
loopne
mov
push
jp
popa
xchg
nop
xor
stc
xor
and
pop
mov
or
mov
nop
push
movs
jecxz
sbb
mov
scas
push
shl
(bad)
mov
or
in
push
push
sbb
add
neg
in
add
scas
mov
adc
mov
stc
xor
sub
sbb
xchg
or
xchg
or
bnd
int
add
pusha
cmp
push
lock
add
ror
or
scas
sbb
cmp
jecxz
jae
jno
or
mov
das
mov
out
fiadd
movs
xchg
out
out
sbb
adc
mov
pop
into
jp
scas
call
mov
cmp
mul
pop
(bad)
dec
cmc
dec
mov
out
mov
fucomi
into
fs
sbb
test
loope
jl
sub
jg
sub
hlt
pop
shl
popaw
mov
sub
fstp
xor
cmp
sbb
loope
es
repz
loopne
dec
and
fdiv
cmp
in
and
adc
pop
sub
sbb
fist
lods
outs
pop
pop
out
sar
and
jmp
mov
xor
mov
and
cmp
loope
sbb
call
sbb
ror
aas
hlt
and
mov
loopne
loopne
or
loop
push
(bad)
push
iret
sub
mov
xchg
pop
stos
xrelease
jo
aad
dec
jle
xor
jae
or
add
mov
pop
mov
sub
movs
das
sbb
cld
lock
pop
ja
call
pop
int3
xor
lods
lahf
inc
lods
cs
jg
xor
cwde
bound
adc
popf
xor
sti
ror
test
push
es
jne
dec
pop
or
jmp
aaa
lods
scas
ins
and
adc
lahf
cmp
out
sub
push
mov
add
pop
jge
aas
pop
xor
push
mov
sub
aaa
xor
into
mov
sbb
mov
mov
sar
outs
mov
adc
pushf
adc
push
cmp
jo
test
(bad)
loop
add
jge
mov
sub
sbb
je
inc
int
sub
adc
jp
mul
ins
jno
and
mov
cmp
shr
sbb
je
repnz
mov
(bad)
jl
fdiv
ds
dec
mov
ss
dec
retf
rcl
pop
(bad)
xor
sbb
out
inc
and
adc
neg
fmul
jbe
hlt
xchg
sbb
stos
inc
sbb
mov
ins
cmps
out
push
adc
inc
fcomp
arpl
dec
into
xchg
xor
adc
imul
je
xchg
xor
fidiv
mov
inc
add
sub
xchg
dec
rcr
aad
inc
sbb
mov
aad
ss
mov
std
and
adc
sti
cwde
sub
sbb
jmp
out
mov
out
movs
jge
lods
sub
repz
(bad)
mov
mov
jns
push
push
int
sub
and
scas
sub
leave
xchg
push
sbb
cdq
out
mov
dec
mov
scas
or
out
inc
jb
out
call
sbb
imul
xchg
icebp
xchg
pop
mov
dec
fisub
inc
(bad)
mov
xor
int
pop
mov
out
nop
mov
adc
adc
jb
out
mov
adc
jp
xchg
or
adc
push
adc
sbb
int3
cmc
push
add
xor
daa
push
test
and
shr
mov
daa
jecxz
or
aaa
mov
repz
call
not
jge
lea
xchg
ja
aam
popf
push
pop
ins
add
ja
test
(bad)
mov
aad
jo
je
ins
and
xor
ins
not
jge
add
push
clc
cwde
or
outs
add
push
loope
jecxz
pusha
cdq
shr
and
pusha
mov
inc
(bad)
js
dec
fcmovne
(bad)
sbb
(bad)
xchg
pop
shl
push
test
sbb
dec
sbb
sbb
inc
call
pop
fistp
xchg
jo
out
mov
push
test
stos
pop
inc
dec
daa
sub
xor
mov
pop
and
(bad)
add
das
or
fstp
lods
out
cmps
push
sbb
mov
mov
jb
sub
sti
retf
xor
popf
jo
fidivr
outs
jae
pop
fld
sahf
jbe
arpl
leave
vpmaxsw
jb
ins
stc
ins
dec
jmp
cld
sbb
inc
xchg
mov
add
push
pop
jne
push
cmp
popa
gs
stos
push
repz
ficom
mov
jl
cmp
push
jns
jmp
iret
cmp
and
or
and
jg
xchg
xchg
pop
push
pop
push
mov
xchg
movs
test
rcl
xchg
cmps
shl
jb
fld
mov
cs
xchg
(bad)
rcr
mov
(bad)
int
retf
push
aas
add
pop
jne
or
cmp
rcl
sub
cmp
cs
test
out
push
sub
mov
push
push
ins
sbb
cs
stc
xlat
movq
test
pop
xchg
jns
jle
pop
inc
jecxz
cmp
outs
sub
rcr
fld
adc
ds
pop
and
mov
push
sbb
or
ss
pop
inc
mov
and
dec
sti
jne
pop
data16
dec
mov
cmp
xchg
call
jl
shl
mov
push
jno
and
xadd
cs
mov
arpl
enter
jns
(bad)
(bad)
and
sbb
pop
add
jmp
mov
clc
jle
imul
jbe
cli
dec
xchg
and
clc
pop
jne
inc
lea
add
shr
mov
mov
stc
or
jg
dec
icebp
shr
pop
imul
fs
(bad)
outs
cld
not
ret
push
cmps
xor
cld
aad
sub
xchg
test
fidivr
jo
les
outs
push
jne
jl
push
outs
xchg
xchg
(bad)
adc
fldenv
add
push
mov
cmp
dec
ret
in
mov
sub
(bad)
mov
loope
das
lods
loope
imul
scas
mov
mov
clc
adc
pop
cld
jmp
enter
jae
fadd
mov
pop
retf
mov
aad
ss
jecxz
sbb
pop
shl
aas
fstp
add
test
test
in
dec
std
xchg
xchg
jb
or
lds
add
leave
and
or
mov
add
fisttp
cli
push
out
push
cwde
ss
out
fwait
in
jb
cdq
add
mov
push
mov
inc
test
cdq
repz
call
xor
mov
cwde
test
in
movs
mov
movs
(bad)
jmp
adc
jmp
int
xchg
mov
push
adc
sub
lods
neg
out
(bad)
sub
push
xor
mov
and
adc
cmp
jnp
push
jb
ins
xlat
dec
scas
dec
inc
or
jg
or
popa
frstor
call
mov
and
mov
or
mov
cmp
fisubr
mov
mov
dec
outs
add
pop
stos
inc
xlat
jmp
sbb
popf
inc
jbe
sub
jecxz
les
stos
mov
pop
popa
jo
and
int
push
and
jecxz
fs
fimul
push
movs
pop
or
rol
add
mov
outs
aam
and
mov
cs
xchg
mov
push
cwde
add
mov
sbb
call
pop
ret
test
jae
mov
rep
inc
imul
cmpps
jg
cmp
jae
push
and
nop
inc
lahf
adc
test
mov
pop
and
outs
mov
mov
add
xor
aas
pushf
pop
jo
xor
fsub
or
lock
shr
mov
pop
sbb
mov
pusha
in
cmp
cmp
push
sbb
xchg
inc
cmp
addr16
sub
jecxz
test
xchg
shl
jae
lock
jmp
add
inc
pop
call
inc
data16
aad
push
inc
aas
jbe
je
sbb
rol
dec
test
push
cdq
cs
inc
xchg
cmc
cmp
mov
fidivr
ins
or
jns
sub
out
outs
mov
or
mov
gs
pop
dec
lods
mov
sbb
inc
and
sbb
xlat
jo
mov
lods
mov
inc
addr16
or
enter
aad
adc
xor
ds
rol
fs
inc
adc
pop
ret
push
shl
and
stos
push
or
lods
add
stmxcsr
sub
movs
mov
mov
sbb
cmps
sbb
(bad)
jnp
add
lds
sbb
jae
das
dec
inc
lahf
test
dec
jno
std
ffree
jmp
ret
pop
ins
pusha
dec
mov
xor
in
test
xlat
adc
fld
inc
ss
sbb
arpl
repz
jmp
mov
cmp
add
pop
cdq
mov
xor
scas
repnz
sub
add
sahf
arpl
dec
scas
ret
mov
(bad)
pop
dec
adc
call
pop
inc
sub
popfw
or
scas
pop
aad
hlt
mov
pop
jb
sub
(bad)
(bad)
fucomi
push
pop
dec
out
and
cwde
lds
push
mov
adc
rep
ins
pop
push
adc
jmp
jns
and
sbb
sbb
cs
and
mov
in
cwde
cmc
xchg
rcl
cmp
popa
out
adc
xchg
arpl
sar
xchg
lock
xor
sub
cmps
scas
mov
call
sbb
outs
aas
(bad)
sbb
(bad)
mov
fsubp
scas
mov
ror
js
inc
pusha
push
sbb
mov
cli
adc
pop
movups
pop
stos
dec
sub
lock
mov
jmp
not
push
mov
push
and
out
(bad)
daa
pop
push
in
fisttp
sbb
push
outs
mov
add
popa
lods
mov
jl
(bad)
aad
frstor
pop
add
inc
jmp
pusha
jecxz
push
jae
stos
imul
fwait
push
enter
sub
or
ins
sub
push
inc
test
jmp
and
(bad)
or
sbb
mov
stos
pop
mov
out
pushf
int
test
int
push
jmp
jle
cwde
sub
jnp
lds
arpl
sbb
imul
pop
iret
lahf
ret
daa
pusha
pop
sahf
(bad)
jae
cs
in
sti
sub
pop
sub
inc
adc
push
add
out
fistp
imul
push
inc
sub
dec
xchg
xor
inc
xchg
mov
bound
push
mov
mov
rcr
mov
hlt
mov
jns
or
les
ss
in
inc
xlat
and
and
push
push
pop
dec
loop
mov
js
mov
ret
cmp
clc
dec
sub
test
push
pop
jmp
fadd
lock
dec
push
inc
movs
ins
or
cmc
repz
push
jns
cmp
xor
fadd
sahf
jmp
xor
jl
cmp
adc
mov
cdq
jg
call
xlat
mov
ins
ins
pop
sub
or
sub
xor
push
mov
test
fistp
and
stos
mov
les
jb
ss
mov
shl
sbb
sub
adc
repnz
pop
jle
out
in
add
xor
pop
mov
sbb
lds
push
jg
fcom
hlt
jmp
mov
inc
cmp
pusha
jle
test
(bad)
and
cld
fidivr
rcr
out
inc
les
in
pop
clc
adc
int
xchg
inc
arpl
add
jle
fwait
or
mov
ret
fsub
jne
cmp
xor
iret
jecxz
(bad)
nop
mov
cmc
fdivrp
add
cs
cdq
inc
adc
pop
int3
loope
xor
cld
sub
ins
cs
sbb
mov
push
stc
mov
sbb
lods
dec
cdq
ficomp
and
sub
mov
scas
jae
repz
imul
cdq
add
retf
jae
dec
pop
xchg
lock
int
js
daa
sub
int3
in
fcomp
cmp
inc
movs
push
das
sub
inc
jecxz
lahf
in
aam
retf
movs
cmp
push
jge
mov
adc
gs
movs
fcom
push
dec
loope
(bad)
clc
ja
lea
in
retf
icebp
js
push
jb
fisubr
pop
mov
sbb
jp
inc
cwde
inc
in
shr
sbb
jmp
repz
xchg
mov
fild
xchg
jb
inc
(bad)
sbb
mov
jmp
dec
xor
imul
dec
fst
mov
xchg
inc
jns
sbb
and
aam
sbb
fdiv
add
adc
in
popa
sbb
(bad)
sub
mov
mov
or
jo
dec
lahf
movs
add
aad
add
and
or
in
xor
test
mov
imul
addr16
fnstsw
xor
clc
popf
xor
add
sbb
lds
jl
push
cmps
test
inc
and
add
push
mov
add
push
jne
push
mov
cmp
jae
shl
pop
or
(bad)
pop
sahf
fistp
cmps
stc
loope
mov
stc
outs
sbb
leave
jnp
mov
hlt
push
loop
in
stc
in
jmp
mov
dec
jno
icebp
xchg
mov
loope
(bad)
out
xchg
mov
std
cmp
fisttp
pop
(bad)
jmp
mov
int3
jnp
lods
sub
sub
ret
iret
sbb
in
dec
or
sub
(bad)
aaa
sub
push
dec
pop
pop
shl
push
cmp
xcrypt-ofb
cmps
scas
xor
adc
adc
loope
push
adc
fwait
and
adc
and
ja
cmps
sti
arpl
xchg
mov
jmp
test
xchg
jae
jecxz
leave
xchg
imul
push
pushf
scas
add
repnz
aaa
ss
out
mov
retf
mov
pop
outs
push
jmp
ds
jae
cmp
jae
in
scas
in
push
xor
outs
(bad)
add
jmp
dec
mov
xor
push
fbld
jecxz
jno
jle
cmp
sub
ret
push
mov
inc
mov
mov
mov
xchg
out
pop
and
jp
loope
dec
lahf
hlt
(bad)
outs
test
fistp
push
aad
dec
cmp
sub
sub
push
mul
add
enter
sbb
and
out
adc
lods
arpl
or
outs
int3
pop
mov
jmp
and
or
mov
sbb
ret
arpl
sti
test
adc
shl
dec
push
cs
adc
add
jmp
pop
pop
push
aam
ficom
test
mov
dec
sub
in
xchg
mov
rol
adc
add
jmp
jb
pop
stos
sub
in
or
inc
outs
hlt
ror
jns
lock
fsub
pop
scas
xor
movs
mov
and
clc
jle
sbb
push
jne
sar
ror
push
dec
icebp
icebp
xchg
pop
jae
mov
inc
mov
leave
mov
loopne
xchg
push
and
fucom
stos
dec
imul
daa
fistp
lds
popa
aad
(bad)
fnstsw
adc
add
fldcw
mov
jmp
retf
call
push
rcl
cmps
push
int
ret
mov
mov
add
add
stc
inc
movs
fild
in
jg
cld
mov
jmp
movs
xor
jne
mov
inc
pop
mov
fcomp
test
pusha
inc
or
int3
test
mov
outs
out
aam
ret
mov
cmp
hlt
add
sar
int3
jmp
inc
sti
cmc
mov
sub
add
dec
loope
fst
mov
push
sbb
aad
repz
pushf
push
dec
sbb
sahf
sahf
fidiv
jnp
jp
pop
jmp
clc
mov
ins
fcomp
sbb
mov
arpl
jmp
ins
cmc
jge
out
mov
adc
nop
loop
imul
test
add
sbb
add
shr
push
je
mov
cdq
fcmovnbe
cmp
mov
mov
mov
(bad)
xchg
jp
out
dec
rsm
xor
fld
rcr
pop
cli
pop
sahf
mov
push
push
mov
rcr
adc
popf
fmul
adc
push
push
xor
mov
sub
and
popa
and
push
test
movs
movs
aad
(bad)
mov
ror
and
clc
jecxz
fisttp
sub
lods
mov
push
(bad)
mov
xor
mov
test
cli
jo
rep
idiv
fpatan
push
sub
sbb
mov
or
sahf
aaa
pop
mov
mov
sbb
pop
mov
mov
xchg
jnp
mov
mov
dec
lea
dec
mov
pop
stos
jno
sbb
retf
les
stos
dec
add
add
dec
jns
int3
sbb
mov
add
call
scas
sbb
cdq
loopne
or
pusha
mov
sbb
rcr
out
ja
cmp
adc
daa
push
ror
inc
jno
repz
mov
add
sub
cmp
stc
jmp
clc
loop
adc
mov
jmp
mov
iret
push
xchg
mov
call
pop
clc
in
clc
outs
push
jnp
jmp
pop
dec
push
dec
out
mov
out
fild
mov
inc
xchg
inc
xor
add
imul
fldenv
pop
or
jno
mov
fidivr
and
pop
push
sbb
cmp
add
xor
ds
cmc
mov
mov
popf
jbe
jne
and
mov
jg
movs
out
mov
add
push
and
pop
mov
inc
jns
daa
jmp
mov
add
(bad)
hlt
pop
test
mov
mov
xor
lock
mov
in
dec
mov
loopne
push
(bad)
popa
sub
repnz
in
push
test
dec
stos
jns
outs
test
fild
mov
imul
loop
call
push
mov
loopne
pop
sti
inc
mov
hlt
push
les
dec
aaa
out
xor
inc
loopne
cmc
(bad)
xlat
repnz
push
sbb
adc
cmps
fmul
xor
and
js
xchg
popa
push
popa
std
test
sub
or
inc
or
gs
sub
cdq
xor
xchg
inc
outs
shl
jno
das
aam
dec
xor
ret
sbb
cmp
in
(bad)
jmp
rcr
sub
and
and
leave
sbb
push
imul
pusha
aam
lock
test
cld
cmp
call
scas
jmp
push
dec
and
sub
imul
pop
adc
(bad)
ret
lds
xor
jo
aas
cwde
add
inc
jo
adc
enter
cmovo
into
arpl
mov
cld
ror
xchg
add
and
pop
and
shr
inc
push
test
add
push
mov
add
ss
inc
shl
jae
push
call
rcr
jb
in
not
test
and
add
in
mov
inc
call
call
jmp
pop
cs
leave
cmc
xchg
dec
push
leave
pop
push
in
cmp
sti
les
push
ficom
and
movs
adc
aas
sub
or
lods
dec
cmp
dec
cmp
lds
jo
fidiv
push
xor
sub
cmp
mov
retf
cs
and
cmp
leave
mov
arpl
jecxz
cmp
les
loope
sub
out
jno
xor
cmc
nop
add
mov
inc
aaa
add
or
shr
imul
(bad)
fsub
outs
cs
mov
(bad)
mov
cdq
jle
and
mov
push
jb
or
(bad)
sub
push
call
out
pop
jae
or
xchg
ret
sbb
mov
pop
mov
pop
push
(bad)
pop
mov
or
cli
sub
dec
leave
jne
adc
test
xchg
gs
dec
add
push
nop
sbb
pop
inc
scas
inc
not
jl
inc
mov
outs
imul
call
adc
aaa
dec
or
bound
cli
inc
inc
dec
mov
ins
pop
aad
xchg
shr
mov
ja
pop
adc
ja
bound
mov
aad
cmp
jnp
leave
sbb
sti
jg
leave
jae
xor
mov
xchg
xor
in
pavgw
sub
test
aad
std
inc
push
mov
xor
call
arpl
cmp
int
es
mov
mov
test
sub
call
int
movs
adc
xor
or
pop
dec
das
outs
xlat
push
into
add
out
mov
lods
aas
sbb
dec
fiadd
call
out
out
mov
pusha
scas
pushf
(bad)
outs
add
adc
ror
addr16
mov
dec
and
push
cmc
fs
mov
ror
outs
cs
xlat
jp
ret
(bad)
push
test
test
(bad)
sbb
or
bound
enter
mov
aaa
mov
push
popf
call
lods
and
cld
jl
fmul
mov
mov
or
loop
mov
mov
hlt
ret
xchg
mov
dec
and
jns
push
hlt
mov
cli
or
push
push
add
js
jo
(bad)
or
pop
or
into
mov
mov
jae
mov
and
mov
mov
push
pushf
pop
cmp
loope
pop
(bad)
sub
hlt
xchg
cli
retf
in
xchg
jge
xor
pop
movs
js
inc
mov
mov
out
imul
jns
push
mov
nop
arpl
hlt
dec
xor
sahf
in
sub
loope
lock
(bad)
test
fdivrp
loop
xchg
into
ret
push
pop
repnz
inc
mov
or
cmc
cwde
ss
(bad)
jecxz
je
cdq
xor
sti
jl
ja
jg
scas
aad
out
repz
movs
push
out
rcl
in
and
cmp
retf
cmps
add
in
sahf
cwde
(bad)
mov
jne
mov
dec
sbb
cli
leave
int
jmp
in
or
scas
cmp
(bad)
mov
xor
and
mov
jmp
push
ins
sub
out
xchg
mov
out
std
dec
dec
adc
sbb
sbb
mov
sub
enter
mov
fisttp
ins
xchg
pcmpgtd
shl
addr16
jns
sbb
or
cmovb
mov
movs
sti
icebp
jo
mov
div
movs
ret
jmp
pop
adc
shr
sub
mov
lock
loopne
xchg
mov
jg
cmp
(bad)
push
bound
test
adc
adc
fsub
popf
sahf
push
fwait
fs
jg
retf
repnz
(bad)
ins
xor
pop
mov
cmp
mov
aaa
test
or
call
ret
mov
or
jecxz
das
sub
fisttp
xchg
mov
sub
sub
sbb
xchg
and
imul
xor
pop
gs
pop
adc
loop
dec
sub
pop
pushf
xor
mov
mov
into
into
xchg
loop
pushf
shl
out
test
(bad)
fstp
or
retf
repz
mov
fstp
mov
je
dec
xor
stc
sub
pop
ja
cmp
sbb
mov
popf
aam
and
mov
sub
(bad)
pop
mov
pushf
inc
sub
cli
mov
fimul
add
ret
enter
lds
enter
xor
fucomp
add
std
add
sbb
cmp
imul
jecxz
pushf
out
dec
mov
pop
retf
mov
fadd
cmc
jae
xor
inc
adc
push
jecxz
retf
xchg
mov
dec
sub
and
sub
add
scas
xchg
shl
mov
ret
shl
inc
dec
shl
jnp
and
xor
or
(bad)
push
sar
std
imul
push
dec
hlt
add
add
push
xor
xchg
dec
out
rol
das
dec
iret
xchg
and
xor
jg
test
and
lock
mov
jl
out
scas
cmp
ins
scas
inc
pop
cmovnp
out
cmp
or
fild
in
aaa
iret
scas
leave
retf
fcomp
jl
lds
dec
xchg
je
mov
inc
jmp
mov
inc
dec
jmp
loop
add
push
and
xchg
inc
xchg
pushf
jge
add
mov
shl
sbb
xchg
int3
mov
and
aas
(bad)
push
ret
push
dec
push
adc
mov
repnz
jle
shl
push
jge
icebp
cmps
mov
sub
push
cwde
push
add
push
sub
sub
sbb
xlat
cmp
cmc
mov
xor
and
loope
(bad)
mov
sbb
movd
lods
adc
pushf
mov
cmc
lahf
test
or
icebp
(bad)
(bad)
call
int
mov
or
aaa
repnz
test
jo
js
jmp
mov
into
dec
xchg
ja
xor
pop
ror
into
push
mov
sbb
pop
fmul
and
adc
sbb
pop
out
jno
loope
mov
mov
inc
loop
dec
not
pop
leave
mov
inc
inc
inc
lahf
aaa
loope
add
push
mov
and
push
push
sti
dec
cwde
mov
dec
mov
pop
fsub
dec
adc
div
push
mov
nop
xor
jmp
jb
push
sbb
jnp
mov
push
iret
sub
iret
cmp
int
sahf
push
jecxz
mov
repnz
xor
xor
push
cmp
push
cmp
adc
dec
pop
pop
mov
fidiv
sti
mov
xchg
xor
lea
mov
jecxz
push
or
out
sbb
ins
fstp
imul
mov
call
cld
inc
push
push
mov
inc
ret
(bad)
icebp
add
data16
or
popf
adc
adc
jae
in
or
mov
xchg
push
lea
repnz
aam
into
mov
jecxz
sbb
fsin
jp
retf
mov
jecxz
mov
test
and
push
(bad)
sahf
or
mov
cmps
ror
xchg
sub
adc
loope
jnp
cli
pop
mov
sub
cmp
fld
mov
jg
fidiv
daa
mov
mov
cmp
push
jmp
xlat
test
adc
mov
mov
add
ds
into
fmul
pushf
mov
adc
push
loope
or
pop
imul
or
dec
sbb
ins
rcr
in
imul
push
idiv
mov
stos
movs
sbb
sahf
cld
dec
out
ud2
ds
mov
jle
aam
clc
xchg
jnp
hlt
sti
loopne
es
and
or
mov
jno
test
lahf
mov
jge
loopne
jp
jnp
and
jbe
mov
in
dec
adc
jne
ficomp
(bad)
jns
push
push
cmp
push
pop
sub
movs
sub
ret
ins
leave
pop
mov
pop
mov
(bad)
cmps
inc
popa
sbb
adc
pop
ds
pop
das
pusha
ins
push
(bad)
clc
inc
data16
popf
cld
enter
mov
ds
cmp
sbb
pop
add
adc
pushf
std
je
push
or
retf
(bad)
(bad)
mov
or
xor
mov
push
scas
mov
push
rcl
lods
or
xor
cli
(bad)
hlt
mov
sub
push
mov
cdq
jns
call
lahf
jae
js
jmp
xor
sbb
iret
lea
xor
jne
push
mov
pop
aaa
adc
dec
xchg
mov
ins
ficom
sbb
push
or
jns
cli
shl
nop
cwde
and
inc
or
shr
push
popa
ret
cmps
xchg
popf
xchg
mov
add
movs
call
call
or
not
xchg
jo
push
xchg
xchg
mov
cli
ror
cmp
xor
pop
test
inc
je
ins
pop
mov
das
or
dec
pop
xchg
xor
xchg
lea
xor
push
mov
mov
imul
inc
aaa
stos
aad
stos
xchg
sbb
xchg
aam
or
xchg
in
into
inc
movs
jge
nop
push
push
cmp
arpl
add
or
jne
jg
jb
ja
push
in
test
cli
sbb
xchg
ds
into
push
iret
jne
mov
out
and
or
jle
fsubr
ins
jnp
sbb
fnsave
shl
jmp
and
call
sbb
sbb
popf
ins
inc
jae
xchg
aad
movs
test
mov
lea
adc
rdtsc
pusha
fndisi(8087
lds
sub
pop
inc
push
and
ret
or
mov
call
add
aas
retf
adc
mov
aad
pop
dec
sub
loop
(bad)
adc
mov
ins
adc
and
cmp
cmp
mov
xchg
scas
push
or
xchg
mov
mov
lds
lock
ds
imul
xchg
add
add
push
xchg
sub
adc
push
jmp
add
(bad)
imul
xchg
int
or
bound
leave
mov
sti
in
mov
fwait
jae
inc
inc
(bad)
retf
lahf
iret
loop
aam
push
call
std
mov
xchg
rcr
aaa
adc
and
xlat
retf
jb
mov
enter
add
dec
test
adc
fcom
cmps
popf
xor
mov
pop
fsubr
and
aas
cwde
shr
lods
sbb
mov
enter
int
aas
lods
test
(bad)
push
div
add
cmc
mov
outs
jnp
aas
jecxz
(bad)
call
or
jne
hlt
fiadd
fmulp
mov
stos
add
dec
jmp
nop
inc
out
jp
cmp
pop
push
out
fsub
mov
(bad)
mov
loop
mov
xor
aas
cmp
pop
push
xor
cwde
mov
shl
dec
mov
or
or
rcl
mov
stc
leave
cdq
sub
push
imul
cli
ud1
out
inc
pop
dec
xchg
inc
rcl
sub
(bad)
dec
out
jecxz
mov
jno
cmp
jmp
mov
pop
xchg
jnp
pop
and
mov
sub
push
cwde
in
cmc
js
jle
call
lods
(bad)
mov
cs
ds
or
das
add
mov
outs
sbb
and
pop
dec
sbb
xor
mov
sub
es
and
inc
xchg
rdtsc
sub
sbb
lea
not
mov
xchg
jnp
push
fstp
loope
adc
xor
mov
xor
loope
ds
sbb
enter
(bad)
in
or
inc
fmul
mov
sbb
inc
data16
call
cmp
and
retf
call
xchg
icebp
(bad)
xor
adc
hlt
jle
or
mov
push
bound
repz
mov
and
inc
xlat
jnp
jno
ss
mov
push
in
adc
(bad)
jle
mov
mov
cmp
pop
js
test
movs
mov
mov
pop
mov
shr
push
scas
test
aaa
push
and
jae
adc
cmp
or
(bad)
xchg
mov
imul
sub
in
shl
scas
push
ret
cmp
ss
mov
movs
mov
(bad)
test
cmp
and
cmp
dec
mov
xchg
jmp
outs
xchg
xor
xlat
movs
sub
mov
xchg
and
mov
xlat
cmp
fbld
in
cmps
jge
cli
movs
sbb
les
aaa
xor
call
add
mov
cmp
fwait
nop
cli
or
fidivr
mov
fidiv
and
ins
mov
aaa
lahf
ins
cmc
das
(bad)
repz
pop
dec
movs
push
mov
pop
jmp
jne
xor
and
jp
call
jge
rep
and
adc
push
pop
dec
test
iret
les
push
cwde
(bad)
leave
(bad)
aas
push
xor
dec
test
ficom
dec
add
imul
aam
scas
add
inc
jmp
retf
add
pop
dec
sbb
push
mov
repnz
mov
adc
fmul
push
lock
sub
lock
pop
fisttp
sub
(bad)
mov
loope
xchg
rcl
mov
push
xchg
mov
mov
(bad)
dec
xor
pop
bound
mov
pop
inc
pop
xchg
(bad)
inc
inc
inc
in
sbb
and
push
mov
push
mov
push
jae
push
adc
jp
lods
mov
xchg
inc
(bad)
enter
pusha
mov
mov
rol
cmc
scas
into
imul
or
(bad)
stos
push
push
adc
(bad)
cmps
push
sbb
cmps
pusha
adc
xlat
imul
cmp
or
and
add
mov
cwde
pop
arpl
outs
in
lahf
mov
or
shl
and
cmps
mov
pop
ret
in
pop
dec
mov
push
sub
mov
mov
mov
cdq
std
ret
loop
shr
ret
call
arpl
retf
loopne
pusha
sub
je
pop
sbb
scas
arpl
inc
add
ds
add
sbb
xchg
sar
repz
jmp
adc
sbb
fs
sub
int3
xchg
in
clc
daa
or
out
stos
ds
pop
sub
rcl
imul
shl
cs
lea
sub
cmp
ja
cmc
jg
pop
das
add
(bad)
xchg
sub
fs
mov
pop
adc
in
xchg
leave
and
test
loop
jl
cmp
shr
fwait
cwde
or
jle
mov
retf
stos
test
dec
ins
jg
xor
test
les
adc
and
fucompp
or
loope
jle
mov
sub
out
mov
inc
pop
add
xor
das
xchg
leave
cli
push
sub
mov
adc
add
cmp
jmp
lds
jo
das
fnstsw
not
loope
fisttp
inc
adc
inc
cmp
fbld
ins
aas
loope
sub
and
pop
and
(bad)
cwde
popa
add
ins
dec
xor
mov
cmps
lock
or
loope
repz
je
stos
cld
cwde
ret
push
(bad)
mov
jl
xchg
jmp
clc
inc
dec
ret
ja
test
aaa
mov
dec
movs
imul
push
push
mov
jne
inc
in
sub
push
shl
int
int
mov
sub
jle
repnz
(bad)
out
xchg
ds
pop
cmp
aas
test
ins
mov
clc
cmps
jp
dec
and
mov
sub
xchg
push
aam
jmp
mov
leave
add
mov
push
jmp
stos
cmps
imul
push
stc
and
std
mov
aam
movs
call
xor
add
repz
jp
lahf
xchg
test
mov
pop
punpcklwd
scas
ss
dec
mov
aad
ror
inc
dec
stc
and
xchg
jo
je
int3
cmc
adc
jge
push
mov
add
shl
add
adc
add
push
xor
jo
outs
add
outs
lahf
inc
es
push
xchg
out
or
dec
push
out
loope
xchg
mov
(bad)
popa
inc
ins
movs
loopne
jae
scas
mov
sbb
dec
data16
test
cmp
rcr
pop
hlt
lds
adc
sub
fmul
hlt
add
push
xchg
push
pop
popa
sbb
sbb
(bad)
push
hlt
sub
ins
mov
les
cmp
cwde
push
cmp
add
retf
mov
mov
data16
dec
fiadd
mov
sbb
adc
ds
cli
push
pop
sti
aam
xor
inc
outs
test
xor
add
sub
mov
pop
pop
lods
push
adc
outs
cmp
xchg
retf
lods
ss
xor
fld
jp
or
xor
das
out
loop
sub
mov
adc
cwde
gs
dec
sub
cmp
ret
ja
adc
sub
icebp
ss
push
xor
pusha
test
into
pusha
push
xchg
or
jmp
loop
call
cli
add
aad
cs
and
mov
xchg
or
or
fild
xor
sub
cmp
mov
test
scas
adc
lea
outs
jg
push
mov
mov
xchg
xor
stc
jl
test
or
(bad)
jmp
imul
sbb
adc
test
sub
cmp
and
and
pop
jbe
or
mov
ror
in
adc
inc
lea
test
jo
cli
inc
pop
jbe
(bad)
jmp
xor
mov
loop
cmp
inc
jnp
jle
push
imul
adc
in
mov
pop
mov
scas
inc
sbb
inc
xchg
xchg
cmps
icebp
in
int
pop
mov
jns
jbe
cld
mov
push
call
cmp
dec
out
cmp
mov
xchg
cli
ror
jp
jae
jns
push
dec
lea
mov
inc
pop
outs
int
mov
fnstsw
(bad)
sti
push
xor
(bad)
hlt
adc
and
sbb
mov
xchg
jg
pop
cdq
jns
push
aad
cmc
scas
fisubr
mov
repnz
out
popa
sub
adc
mov
ficom
push
add
xchg
xchg
dec
mov
dec
fnstcw
leave
mov
sbb
push
lahf
repnz
data16
adc
inc
in
and
pop
cmp
(bad)
test
inc
aas
jb
scas
jmp
mov
test
cmp
shr
xchg
adc
jne
sbb
mov
jmp
cmc
cmp
sti
jb
jb
or
out
xchg
test
mov
cs
nop
daa
sub
in
jmp
scas
fldenv
sub
dec
xor
add
dec
xchg
iret
pop
shl
hlt
mov
sar
add
or
mov
push
mov
adc
scas
retf
mov
mov
dec
cmc
or
sub
in
adc
shl
xor
aas
add
imul
mov
sub
arpl
cwde
jg
outs
push
mov
xchg
cmp
(bad)
pop
fcmove
ret
lock
inc
cmp
ss
jae
jne
inc
lock
int3
inc
stos
ss
mov
out
gs
mov
lahf
dec
jne
add
cmp
aas
stos
add
push
js
sub
adc
jg
and
(bad)
aaa
sub
icebp
aas
inc
icebp
js
pop
mov
cdq
and
push
jmp
xchg
xchg
jns
mov
mov
dec
pop
xchg
xor
rol
xchg
xor
fimul
and
cmp
in
lods
xchg
ror
push
jb
out
mov
jp
imul
or
call
dec
int3
push
inc
mov
ins
movs
bound
ss
adc
ds
cwde
stos
adc
(bad)
scas
js
fwait
leave
rcr
dec
sub
pop
xchg
(bad)
cmp
add
or
mov
ins
push
int3
popf
ja
aas
xlat
pushf
xor
mov
mov
test
xchg
stc
or
and
jo
add
out
test
outs
xchg
dec
cmp
repz
cmp
push
mul
nop
pop
dec
icebp
cwde
pop
dec
pusha
mov
outs
sub
bound
inc
push
xlat
sar
repz
xor
outs
scas
push
je
and
mov
sbb
in
sbb
loopne
push
adc
mov
dec
adc
sub
jae
and
mov
ss
dec
ret
outs
jp
into
nop
xchg
out
loope
call
jbe
mov
dec
jge
mov
jo
jmp
jae
pop
xchg
cmp
pop
xlat
(bad)
(bad)
or
lods
mov
jne
add
mov
sbb
into
add
mov
pop
fwait
sar
rol
xchg
shr
sti
mov
out
int
fcom
sbb
int
adc
lea
push
push
jmp
(bad)
mov
out
sub
lods
aas
loop
mov
sub
fsubr
rcl
jne
daa
test
jne
clc
jl
mov
dec
je
shl
xchg
jge
add
retf
dec
cld
lock
jns
inc
jle
daa
call
out
cmc
scas
aad
mov
xor
inc
push
dec
xor
jecxz
je
mov
cmp
jp
push
bound
out
jp
adc
dec
mov
jbe
or
lods
xor
jmp
jmp
mov
mov
mov
adc
ins
(bad)
push
jnp
mov
pop
cmp
jbe
push
(bad)
repnz
movs
fwait
push
dec
frstor
pop
jmp
pop
or
in
cmp
or
loope
and
aaa
add
es
or
jns
and
mov
ja
cmp
repnz
mov
mov
data16
xor
jge
xor
mov
mov
lds
fdivr
push
test
iret
icebp
adc
sti
and
ins
inc
dec
jmp
mov
call
xchg
test
jmp
xor
jge
fiadd
cdq
dec
es
out
aam
mov
call
or
stos
outs
lahf
call
test
mov
rcr
aam
add
test
jns
and
and
mov
push
xor
pop
test
pop
mov
xor
adc
mov
test
jnp
je
out
lods
push
aaa
adc
dec
or
cmps
aam
inc
enter
std
jp
xchg
shrd
outs
fisub
dec
shl
and
push
pop
sub
pop
ins
jmp
loope
xchg
std
ss
inc
jb
and
std
shl
sub
mov
ja
std
pop
add
js
push
dec
jl
jo
shr
sbb
dec
jl
sahf
mov
pop
push
call
in
mov
or
mov
mov
push
jns
loop
dec
add
mov
push
hlt
add
div
nop
(bad)
loop
jmp
loopne
data16
jmp
test
cld
sbb
fwait
xor
push
push
test
bound
mov
lods
ficomp
bound
dec
es
or
fisttp
rcl
pusha
xchg
xchg
repz
pop
dec
cmp
clc
cs
(bad)
and
jne
loop
mov
out
test
push
lock
pop
jp
pop
repz
je
stos
pop
pop
test
ret
xchg
jp
cmp
mov
outs
shl
add
jno
or
push
add
movs
xchg
jbe
loopne
pop
sbb
fcom
or
ja
mov
ins
mov
push
pop
cli
dec
cmp
push
jmp
(bad)
mov
jnp
push
mov
das
fsubr
add
mov
les
shl
or
cmp
jmp
adc
outs
pop
mov
retf
dec
inc
cld
dec
js
add
out
loop
sar
repnz
and
out
arpl
mov
inc
jl
cwde
ret
dec
mov
and
mov
and
sbb
cli
pop
xchg
fdivrp
mov
xchg
fs
bound
mov
stos
lods
jmp
aaa
xor
push
or
ret
(bad)
sbb
inc
push
dec
pop
dec
cmp
mov
mov
(bad)
cld
xor
cmc
bound
scas
mov
xchg
xlat
push
push
inc
scas
fwait
dec
xor
fisub
pusha
lds
jmp
push
cdq
pop
fsub
loopne
sbb
fidivr
js
cmp
pop
mov
sub
push
dec
xchg
aaa
adc
data16
pop
or
push
pop
out
je
movs
in
xchg
dec
mov
sub
sahf
lahf
test
std
retf
cmp
into
imul
mov
shl
loope
or
push
mov
and
scas
xchg
mov
cmp
jnp
mov
xlat
iret
bound
push
dec
push
(bad)
int3
ds
outs
movs
mov
mov
inc
dec
mov
mov
stos
lock
add
mov
das
ror
mov
or
ja
xor
shl
push
xor
jne
jg
inc
jp
(bad)
xchg
sbb
pop
xchg
adc
jge
loopne
js
push
cmps
(bad)
sbb
add
xchg
mov
pop
add
call
sub
jno
add
(bad)
mov
xchg
cdq
ret
dec
test
jno
fadd
push
mov
mov
adc
(bad)
fiadd
fistp
jno
or
sahf
pop
dec
aaa
mov
(bad)
or
rcr
sbb
clc
sbb
fistp
push
or
jge
mov
(bad)
adc
sti
fadd
pop
loope
out
and
dec
aaa
mov
mov
fidivr
push
add
es
push
add
ret
push
mov
into
dec
out
sub
fimul
sbb
sbb
pop
sub
add
mov
jbe
mov
sbb
je
out
push
cdq
lock
push
push
iret
mov
jge
mov
ret
mov
lds
(bad)
jecxz
stos
loop
pushf
mov
call
inc
test
cmps
pop
pop
cli
inc
stc
and
stos
lahf
add
xor
bound
movs
mov
jo
into
add
mov
adc
mov
sub
movs
fmul
hlt
scas
cs
pop
ins
lods
ss
(bad)
(bad)
sbb
mov
mov
repnz
movs
arpl
dec
rep
cs
dec
scas
hlt
jns
xchg
(bad)
push
sub
sbb
mov
add
xchg
jmp
ins
xchg
xchg
sar
movs
xor
rep
shr
loope
(bad)
sbb
pop
jbe
fnsave
jbe
or
jae
cmp
inc
cmp
sti
scas
gs
push
mov
mulps
mov
add
jo
retf
jne
int
dec
push
fisttp
or
bound
cmp
dec
(bad)
(bad)
ds
and
mov
dec
ret
cmp
call
inc
xor
aad
test
adc
and
outs
or
cmp
les
aad
fidiv
xor
mov
pop
mov
push
dec
stc
(bad)
inc
retf
iret
adc
xor
push
int
loop
in
fdivr
and
leave
mov
rol
push
das
or
stos
aam
packssdw
int3
rol
sbb
or
cmp
test
sub
mov
push
call
or
in
inc
xchg
jb
mov
cmc
ror
aam
mov
sub
enter
out
jl
jb
jmp
es
call
dec
jb
jge
out
add
push
bswap
out
cmp
stc
fimul
(bad)
sbb
adc
pusha
in
in
arpl
aaa
jmp
dec
push
imul
xchg
fistp
push
mov
cli
xchg
dec
pop
cmps
pop
and
or
(bad)
and
xlat
xor
pop
jae
add
in
push
mov
xchg
pop
ds
and
cdq
mov
sub
xchg
shr
lea
sbb
push
jl
jmp
mov
jo
out
icebp
mov
inc
sub
or
cwde
imul
inc
xchg
pop
mov
sub
push
mov
push
pop
jmp
xchg
push
mov
sbb
dec
cmp
pop
fdiv
shl
movs
sbb
add
stos
xchg
in
dec
pop
loope
mov
sbb
inc
addr16
sub
ins
shr
imul
in
or
jle
jmp
push
mov
sub
das
or
clc
jge
mov
and
test
loopne
inc
cmc
outs
jl
leave
adc
adc
xchg
mov
mov
(bad)
jns
test
fnstcw
jo
in
push
outs
pop
jmp
push
or
mov
dec
xor
add
ja
mov
and
(bad)
xor
imul
sbb
push
mov
push
jle
dec
push
push
stos
aam
adc
stc
sbb
popf
fs
rcl
sub
out
cmp
or
mov
fistp
cwde
(bad)
push
shl
out
xchg
mov
ret
xchg
cwde
jbe
aad
cmp
mov
clc
and
adc
aam
dec
jbe
fnstsw
mov
inc
test
iret
xchg
pop
in
repnz
int
int3
lock
add
jae
je
mov
inc
push
inc
hlt
cs
cld
dec
cli
ret
fidivr
cld
dec
imul
fistp
sahf
dec
pop
xor
fucom
mov
push
adc
retf
addr16
popf
jo
sbb
mov
and
lods
add
mov
int3
pusha
or
xor
cmp
push
int3
cmps
mov
jmp
sub
(bad)
lea
gs
mov
enter
fs
in
fcomp
rcr
lahf
push
retf
lahf
xor
sub
sbb
outs
shl
pop
addr16
sbb
fisub
adc
cwde
adc
vsqrtss
popa
inc
and
je
scas
inc
test
imul
sbb
rcl
cld
mov
or
push
sub
dec
sbb
sbb
int3
fs
into
mov
xlat
cmp
loopne
inc
and
retf
pop
pop
jl
rcr
fwait
out
or
imul
mov
outs
mov
jp
stos
mov
ror
out
push
lea
not
and
xchg
loop
int3
pop
into
add
test
(bad)
ret
imul
shr
sbb
loope
out
xor
inc
outs
add
xor
inc
jle
and
add
cmp
dec
(bad)
scas
and
add
sbb
out
leave
sar
fld
inc
sub
push
pushf
adc
mov
xor
or
push
mov
dec
aad
cmp
jae
and
cmc
int3
dec
mov
adc
push
cmp
sub
xor
cli
ja
push
adc
mov
push
sub
aaa
jp
mov
sbb
cmp
data16
adc
jns
or
xchg
ins
jbe
sbb
repnz
cdq
pop
sbb
lock
shl
fnstcw
scas
pop
cli
scas
push
jg
sbb
adc
pusha
mov
mul
retf
call
and
and
popa
cmc
pop
adc
int
xchg
addr16
out
int
mov
ret
hlt
adc
outs
sar
int3
aas
cmc
cli
cmp
inc
idiv
cmp
dec
push
aaa
xchg
gs
mov
pop
inc
mov
jl
pop
inc
mov
adc
lock
mov
inc
mov
hlt
push
sub
aam
xor
sbb
fwait
or
mov
mul
xchg
sti
cmp
call
add
dec
push
sub
mov
sbb
popf
xchg
push
imul
mov
movs
ds
lds
push
test
cmc
adc
test
or
mov
imul
(bad)
hlt
int3
jb
cmp
outs
pop
or
iret
leave
jmp
xchg
sub
and
and
cmp
jecxz
inc
daa
dec
xchg
fild
sahf
or
push
sar
sbb
cmps
dec
je
mov
pop
jns
jae
in
out
ins
and
adc
retf
add
sbb
mov
pop
ss
dec
(bad)
mov
(bad)
stc
scas
xor
sub
jmp
xchg
ins
mov
xchg
sub
dec
jbe
xchg
outs
out
movs
(bad)
aad
dec
xchg
(bad)
movs
out
jmp
outs
mov
adc
mov
or
in
jg
dec
xor
mov
mov
mov
arpl
(bad)
clc
dec
ret
mov
mov
movs
mov
push
fs
or
pushf
dec
ret
aas
dec
sub
mov
outs
test
sahf
mov
adc
retf
dec
push
retf
jecxz
push
jnp
arpl
shr
xor
mov
mov
fisttp
push
iret
aas
pop
mov
cwde
cmp
enter
push
push
sbb
iret
sub
adc
push
ds
ds
mov
mov
out
jno
cmp
jmp
jmp
ds
out
sbb
lahf
idiv
xchg
or
inc
idiv
addr16
je
push
mov
outs
(bad)
jg
adc
sahf
jmp
jae
jae
pop
push
popa
iret
pushf
cmps
mov
mov
dec
mov
sub
jns
std
dec
aad
pop
push
inc
in
pop
es
jbe
je
lock
(bad)
in
mov
or
jmp
(bad)
jmp
cmp
shl
pop
psllq
mov
jb
mov
sbb
add
adc
mov
xor
adc
ss
outs
je
push
mov
adc
jae
fcomi
inc
dec
xchg
js
push
iret
xchg
aaa
and
pop
mov
and
dec
rcr
push
test
xor
push
mov
dec
retf
and
mov
jle
inc
jno
ds
pop
loope
xor
popf
stos
mov
adc
icebp
xchg
push
jns
in
bound
cmp
cwde
mov
imul
pop
mov
je
dec
gs
aam
inc
xchg
test
sbb
mov
pop
cmp
xchg
xchg
pop
in
cld
lods
hlt
mov
jle
inc
lods
sub
in
lods
and
leave
(bad)
lds
cmp
retf
int3
(bad)
cwde
jae
rcr
shr
bound
or
push
fnstenv
aas
ret
sub
xchg
out
add
pop
xlat
je
push
aad
push
add
sbb
sbb
xlat
retf
nop
pop
out
push
adc
bnd
cmps
jp
dec
add
out
retf
dec
mov
sub
dec
xor
pop
imul
in
adc
jno
inc
loopne
and
in
push
test
and
sbb
xchg
aam
call
adc
iret
or
ss
dec
sbb
dec
pop
mov
movs
(bad)
je
leave
in
pop
jmp
cld
sbb
inc
outs
jmp
test
dec
push
add
(bad)
push
popf
inc
adc
jl
pushf
sbb
pop
addr16
sahf
mov
aaa
inc
loope
or
mov
cmp
gs
in
add
daa
push
jecxz
pop
fmul
or
pop
xchg
xchg
lods
jae
test
jo
push
fidivr
popf
add
pop
fs
add
mov
lods
dec
movs
mov
dec
mov
mov
scas
outs
push
xchg
inc
mov
jmp
punpcklwd
xchg
mov
adc
xchg
mov
push
shl
cli
test
inc
imul
adc
add
movs
lods
mov
sub
pop
leave
inc
fcmove
fdivr
out
cmp
xchg
and
xor
sub
pop
jecxz
outs
cmc
and
jnp
push
and
out
fwait
(bad)
jmp
and
xchg
ficomp
into
(bad)
sub
repz
xlat
ins
movs
rcl
pop
inc
cld
xor
mov
xor
ffree
mov
and
std
cmps
xor
int3
inc
jns
ins
lahf
sti
cmp
fbstp
or
xchg
imul
stos
cdq
setbe
adc
fistp
mov
ficomp
sar
pop
sahf
icebp
cmp
pop
push
or
cmp
les
xchg
xchg
and
add
ins
cmp
(bad)
loopne
shr
lods
inc
cmps
ret
pop
and
ins
xlat
adc
jne
push
sub
fldenv
adc
idiv
and
xchg
ret
and
leave
cmps
in
or
stos
jns
movs
lods
call
pop
rol
cli
jne
lods
mov
mov
pop
imul
cs
popf
xor
pop
test
retf
xchg
cmp
test
pushf
inc
push
imul
jg
mov
xlat
inc
and
add
add
push
and
test
aam
jge
(bad)
jp
push
clc
mov
cwde
add
dec
push
ret
ret
adc
mov
push
pop
(bad)
rcr
pop
mov
add
push
pop
sub
sub
mov
pop
mov
add
repnz
imul
sahf
mov
nop
jo
mov
xor
rdmsr
push
push
adc
(bad)
aas
cs
mov
inc
or
jo
rcr
dec
cmc
shl
loopne
or
mov
cmp
pop
ret
aas
clc
push
cld
bound
iret
call
or
je
cld
and
(bad)
mov
adc
pop
sbb
sbb
out
push
or
xchg
xchg
out
sti
and
test
call
cli
jne
sti
mov
or
data16
les
popf
sbb
lea
popa
imul
mov
xor
push
clc
dec
jno
jno
lods
les
lahf
xlat
test
frstpm(287
mov
rep
sub
jae
mov
lds
inc
pop
loopne
stos
mov
or
adc
daa
enter
mov
push
and
mov
mov
cwde
in
out
gs
cs
cmps
sti
enter
cld
hlt
and
sub
inc
lods
fwait
adc
mov
test
leave
loopne
mov
sbb
xchg
xor
sti
push
inc
jl
xchg
ds
fisub
sub
rcl
daa
movs
xor
mov
scas
fsubr
rcr
std
pop
loope
loopne
(bad)
cmp
cmp
lock
mov
sub
jb
pop
mov
dec
sbb
clc
mov
test
aam
scas
in
jns
jns
jecxz
stos
cmp
mov
sbb
pop
arpl
ja
add
stos
lds
fwait
stc
stc
cmp
shl
pop
xlat
pushf
pop
and
cdq
jns
jne
and
sbb
loop
adc
mov
cwde
and
pop
mov
test
mov
(bad)
mov
mov
comiss
mov
test
mov
mov
lods
adc
mov
test
mov
in
std
and
retf
mov
cmc
stc
aad
in
mov
mov
push
sbb
aam
mov
push
gs
loopne
cmc
stos
test
ficom
js
mov
fucomi
mov
xchg
pop
sbb
and
ja
scas
loop
jae
and
and
(bad)
aas
sbb
out
hlt
int3
pop
adc
sbb
(bad)
rol
pusha
das
and
scas
xchg
pop
inc
repz
inc
pusha
inc
repz
or
fisttp
sbb
(bad)
and
sbb
jmp
mov
jmp
jbe
and
and
lods
ror
nop
idiv
sub
and
xchg
leave
add
cmp
test
push
fcmovb
pop
loope
pusha
cld
adc
fistp
jo
ss
mov
sbb
out
push
jno
mov
dec
xchg
loope
or
adc
dec
test
into
in
inc
arpl
dec
xlat
stc
cmp
lea
(bad)
jmp
mov
xchg
imul
lock
pop
out
push
mov
(bad)
xor
xchg
xor
mov
inc
aad
mov
test
inc
mov
jle
jbe
xchg
dec
push
jae
loop
jge
dec
(bad)
das
xchg
loope
or
jle
mov
xchg
and
mov
and
xor
pusha
xchg
pop
xchg
adc
aas
sbb
ja
imul
adc
jne
je
cld
out
in
fst
push
xchg
push
inc
cmp
gs
mov
jmp
xor
(bad)
and
mov
jae
and
cmp
pop
loop
push
inc
neg
sub
call
mov
fcomp
push
jae
ins
daa
xor
xor
popa
lock
cli
mov
mov
pop
pushf
xor
jmp
jmp
sahf
aas
add
in
push
inc
or
mov
scas
push
aaa
jmp
and
rcl
cmps
mov
jb
and
gs
push
mov
test
xlat
fcomp
xor
cmps
mov
iret
lock
call
xchg
mov
jne
push
pop
test
daa
xor
ficom
add
imul
mov
imul
or
xchg
sbb
push
xchg
out
push
(bad)
add
lahf
dec
jge
sbb
data16
pop
pushf
daa
cmovbe
daa
ja
ficomp
push
mov
jp
dec
fbstp
aas
stos
enter
test
sahf
inc
pop
daa
out
rcr
ins
sbb
inc
push
std
stos
pusha
mov
pop
mov
outs
mov
(bad)
mov
sub
push
xlat
cwde
ror
sub
ja
mov
pop
inc
mov
mov
add
das
test
out
js
enter
jge
cmp
call
lock
inc
add
shr
sbb
pop
cmp
lds
adc
inc
sbb
jecxz
lods
dec
push
add
(bad)
push
xor
mov
jbe
pop
push
clc
fs
shr
imul
fimul
cmp
push
xchg
int3
fsubr
ds
les
adc
jg
xchg
or
or
mov
mov
mov
push
jmp
je
jns
enter
sti
push
popa
cmp
mov
aaa
and
cmp
fst
adc
fwait
add
pop
cmp
popa
clc
loopne
cmp
cmp
fimul
addr16
jae
sbb
and
xchg
cmp
imul
ret
mov
repz
clc
shr
and
sub
add
enter
ins
(bad)
fcmovu
push
pop
fdivr
or
mov
data16
ins
push
dec
lds
sbb
jnp
inc
mov
stos
jmp
inc
pop
xor
stos
jg
pop
(bad)
adc
test
sbb
(bad)
xor
fiadd
ss
and
mov
xchg
les
inc
jns
sti
ss
push
pop
or
lea
and
ins
pop
cdq
xor
arpl
clc
loop
(bad)
shl
fld
and
push
sbb
sub
nop
out
jne
add
jbe
mov
adc
and
pusha
jne
fld
sbb
std
mov
icebp
cdq
adc
loope
push
stos
xchg
adc
dec
clc
or
pop
loopne
add
je
sub
inc
lds
xchg
push
loopne
lods
cmp
mov
push
(bad)
movs
ins
mov
ror
mov
clc
push
cwde
or
(bad)
leave
pop
bound
sub
lds
mov
js
cmps
cmps
ins
xchg
pop
shl
data16
rcr
xor
inc
or
mov
xchg
mov
addr16
out
add
push
push
jecxz
mov
cmps
das
inc
es
rcr
jge
mov
jle
js
dec
(bad)
mov
outs
fisttp
std
movs
es
arpl
xchg
inc
out
or
aam
aad
push
pop
and
sub
push
in
les
repz
cmp
ins
stos
stc
mov
les
push
test
daa
jnp
xor
jmp
push
std
push
mov
add
xchg
dec
xor
ret
sti
lea
mov
inc
not
mov
push
jecxz
imul
ins
pusha
sbb
sbb
push
dec
mov
in
cmp
sub
cmp
addr16
mov
aam
frstor
cmps
retf
and
sar
fild
(bad)
sbb
aaa
jbe
or
lods
lds
xor
sar
jge
shr
xchg
jbe
faddp
imul
push
inc
int3
ds
inc
stos
sti
(bad)
imul
clc
xor
aaa
lds
pop
jle
push
lahf
mov
imul
lods
mov
xlat
or
push
jb
div
and
xor
pop
adc
pop
cmp
lock
shl
cs
jecxz
retf
and
and
inc
add
imul
xor
mov
mov
pop
or
inc
std
inc
inc
pop
jg
cdq
jns
cmp
shl
ret
cli
xchg
xchg
and
aad
push
cwde
outs
test
pop
stos
pop
inc
mov
inc
lods
pop
jecxz
mov
xchg
cwde
pusha
into
push
stos
xchg
hlt
push
jge
clc
jo
neg
test
mov
push
fsubr
mov
mov
test
jnp
call
cmps
sbb
xor
or
push
xchg
xor
cmc
jg
ds
push
xor
sbb
sub
(bad)
mov
lods
mov
jo
ret
in
inc
mov
ret
and
ja
scas
sbb
ret
xor
adc
cmp
call
or
daa
adc
mov
out
call
jns
fwait
or
fwait
jno
push
add
and
mov
xchg
add
leave
and
icebp
sti
adc
xchg
hlt
push
adc
push
and
fwait
adc
sub
xchg
sbb
inc
push
(bad)
mov
scas
push
mov
xchg
sub
cmps
pop
popa
sbb
call
ficom
mov
stos
push
jl
call
push
add
mov
and
retf
xlat
out
loope
test
xchg
jmp
(bad)
ret
(bad)
sub
add
fsub
outs
stos
mov
mov
mov
push
in
ficom
lds
or
imul
in
jl
push
add
mov
add
xchg
mov
pop
mov
xor
repz
cmp
aad
jecxz
adc
test
dec
cmp
or
push
mov
retf
sub
mov
push
(bad)
mov
jbe
and
pop
or
jnp
xchg
adc
or
lds
dec
mov
dec
mov
xor
sub
clc
paddw
pop
sub
popa
test
call
es
sub
push
mov
and
mov
and
inc
pop
xor
and
mov
dec
test
sub
fcomp
adc
xchg
add
mov
jae
pop
(bad)
push
dec
ins
adc
vcvtpd2dq
mov
hlt
xor
loop
dec
sub
pop
lahf
out
out
adc
or
aaa
jo
inc
pusha
out
inc
(bad)
ss
out
pop
sbb
sbb
sahf
inc
(bad)
dec
push
cmp
mov
adc
xchg
and
and
lods
pop
retf
int
fldenv
mov
mov
stos
jp
or
in
mov
push
lds
jns
icebp
xchg
cli
xchg
push
aad
inc
bound
in
jns
mov
cmp
int
push
pop
inc
cdq
sahf
fucomip
(bad)
aad
push
jo
sbb
push
daa
addr16
xchg
fwait
mov
or
inc
rol
cmp
int3
std
xchg
aad
into
xor
mov
pop
pop
fchs
jl
push
cmps
nop
mov
xchg
mov
ja
add
and
in
scas
pop
dec
test
push
mov
xor
push
je
mov
scas
fcom
inc
jno
xchg
into
repz
loopne
shl
and
mov
mov
repz
sti
call
pop
nop
fldcw
(bad)
xor
lahf
ins
and
add
pop
fiadd
sar
mov
lods
push
add
sbb
or
push
add
mov
ret
call
mov
sub
ds
dec
pop
sub
mov
jae
mov
sub
enter
adc
jbe
fild
pop
pop
jns
js
cmc
out
stc
adc
sahf
(bad)
xor
adc
pop
jns
jae
mov
pusha
sub
jl
aas
mov
cmps
lahf
std
movs
fld
arpl
and
xor
popa
scas
or
push
jle
call
movs
and
sbb
mov
das
sbb
popf
imul
daa
jnp
xchg
jnp
sbb
mov
mov
imul
push
cwde
inc
in
inc
cs
jnp
jp
loop
adc
jnp
dec
lahf
mov
mov
mov
stc
popa
imul
adc
popa
outs
test
cmp
in
ror
inc
xor
aam
fcmovnb
lds
inc
pop
jg
add
mov
push
cmps
fidiv
rcr
or
dec
mov
sub
stc
dec
jnp
std
rcr
mov
xor
jmp
pop
ja
push
jecxz
sahf
push
push
rep
ja
dec
mov
xor
shl
icebp
(bad)
pop
fucomi
inc
dec
xor
jne
(bad)
cli
push
jl
(bad)
sbb
cmp
sbb
ds
mov
push
push
scas
loope
pop
cli
(bad)
and
add
inc
push
fiadd
(bad)
xor
in
inc
add
les
adc
loop
loop
fcom
aaa
pop
or
test
scas
pushf
retf
add
js
repz
gs
pop
push
shr
jb
movd
shr
inc
cmp
or
cmps
out
daa
mov
push
stos
mov
out
inc
pop
movs
(bad)
std
and
or
pop
dec
fadd
cld
adc
cmps
es
pop
add
jecxz
jne
sti
cwde
add
push
aaa
aaa
movs
mov
dec
mov
sbb
imul
jns
pop
mov
fild
mov
xlat
ret
data16
xchg
mov
pop
shr
sub
scas
xchg
adc
jae
mov
jle
xor
ret
fldz
add
into
mov
push
sbb
xchg
in
lock
add
addr16
call
shr
mov
rcr
test
lods
clc
xor
inc
pop
cs
aas
jae
repz
ds
or
jbe
ficom
scas
pop
pop
push
pop
adc
pop
bound
ror
into
in
test
dec
mov
mov
inc
pop
je
xchg
(bad)
pop
pop
mov
xor
inc
shl
push
mov
nop
(bad)
fcom
es
or
in
xor
movs
addr16
addr16
sub
jg
ss
movs
fcom
lahf
sbb
(bad)
ja
push
mov
mov
or
imul
push
cs
pop
je
in
dec
xor
adc
jecxz
push
or
push
cmp
inc
xor
aam
imul
pop
sub
inc
outs
test
clc
mov
sbb
add
adc
jmp
jbe
std
or
(bad)
cmp
mov
inc
fadd
div
cmps
test
or
cmp
cmp
retf
cs
or
shl
movs
lods
ins
shl
movs
scas
retf
jp
push
test
stc
gs
aad
add
xchg
loop
pop
push
inc
or
ins
lock
scas
sub
and
push
(bad)
xlat
fwait
adc
dec
call
or
call
scas
out
xor
movs
imul
mov
or
out
sahf
add
xor
adc
sbb
adc
mov
aad
xchg
mov
push
add
mov
fadd
cmp
in
xchg
or
rol
rcl
pop
shl
cli
fs
sbb
inc
inc
dec
push
ret
sbb
ss
fiadd
mov
and
cmps
enter
xor
dec
adc
mov
call
je
mov
leave
les
adc
add
sbb
js
mov
out
lods
push
jb
cli
aas
xchg
or
dec
int
mov
cs
stc
jmp
dec
loop
mov
jbe
iret
dec
je
std
bound
nop
adc
adc
jmp
inc
mov
in
retf
jle
out
pop
pop
and
jge
aas
mov
xor
cmc
pusha
or
pushf
push
sbb
dec
jb
(bad)
into
gs
outs
xor
mov
and
cmc
es
jne
out
push
and
lds
adc
inc
inc
jbe
or
(bad)
rcr
or
imul
cmp
pop
xor
or
mov
pop
and
out
jle
adc
push
push
(bad)
std
les
push
sbb
pop
mov
or
js
adc
add
aas
in
clc
cmp
loope
sub
(bad)
xor
sahf
inc
stc
cmp
mov
push
aas
cmp
ret
xor
mov
(bad)
call
cmp
jecxz
cmc
jmp
push
jno
mov
scas
icebp
nop
aad
mov
scas
mov
shl
xchg
leave
or
scas
ficomp
dec
or
les
push
dec
inc
cmp
psrad
aas
loopne
and
(bad)
xchg
mov
sbb
adc
cld
or
xchg
jbe
fimul
mov
mov
mov
dec
out
or
jno
inc
outs
xchg
and
jl
shl
jmp
sub
(bad)
push
jne
or
mov
push
push
sbb
ss
inc
dec
cmp
mov
icebp
jne
inc
cmp
jmp
xchg
dec
xchg
mov
nop
cmp
mov
ret
lea
pop
loope
sub
push
pop
int3
sti
iret
fwait
ret
mov
adc
ret
sbb
into
(bad)
hlt
fld
test
cs
in
ss
push
ds
mov
xchg
dec
or
dec
sub
data16
or
mov
loop
and
arpl
mov
in
mov
inc
push
mov
xor
sbb
push
dec
mov
jno
inc
jl
jo
retf
mov
xchg
mov
aad
add
shl
mov
jno
fild
in
xlat
jmp
fdivr
cmps
mov
rol
cmp
cli
pop
fs
mov
js
inc
into
ins
xor
push
neg
das
call
pop
jae
ficomp
pop
jno
lahf
rcl
sub
addr16
pop
sbb
adc
add
ss
xchg
cli
daa
sbb
mov
jns
(bad)
in
call
inc
mov
jmp
cs
mov
push
inc
repnz
jbe
out
cmps
loop
or
push
pop
mov
lds
jge
in
mov
movups
and
in
imul
(bad)
mov
sahf
bnd
jae
(bad)
aad
mov
jecxz
jmp
pop
cdq
call
or
in
jnp
pop
xchg
mov
push
pop
and
outs
rcr
pop
retf
stos
jb
fdivr
pushf
pop
push
scas
sbb
pop
cmp
pop
shl
cmp
or
dec
out
stos
sub
sub
push
in
idiv
sbb
stos
dec
push
dec
add
xchg
pop
in
sahf
sbb
bound
bound
gs
push
and
dec
pop
test
xchg
dec
mov
sub
test
pop
xchg
cdq
xchg
push
mov
sub
lods
nop
sahf
pop
inc
stc
fwait
arpl
imul
hlt
pusha
icebp
scas
repnz
out
cmps
(bad)
mov
adc
or
lods
lods
cmp
fwait
bound
mov
call
or
mov
scas
mov
fwait
call
shr
push
jne
sub
mov
inc
inc
stc
cmp
or
(bad)
pop
out
in
js
xchg
je
rcr
xchg
adc
clc
add
lds
push
push
mov
jno
arpl
out
add
jnp
or
or
movs
or
test
retf
pop
loopne
movs
out
push
push
aad
stos
xlat
jle
pop
and
fucomi
and
adc
test
jae
fild
imul
jge
outs
push
mov
popf
or
pop
adc
pop
arpl
sets
into
jl
pop
imul
fimul
jp
jae
iret
les
mov
push
mov
loopne
push
push
leave
jle
lock
sbb
dec
call
sahf
lea
ja
and
cmp
lea
cmc
cmc
or
jecxz
xchg
push
hlt
or
lock
les
or
xchg
iret
adc
push
call
leave
sbb
push
jns
dec
sub
jnp
retf
jmp
mov
lods
pop
enter
das
mov
aam
data16
test
push
mov
and
mov
test
test
jne
adc
addr16
es
push
(bad)
stc
jo
mov
inc
jmp
mov
jb
push
das
call
fisttp
xchg
clc
pop
test
call
xchg
mov
sbb
clc
leave
out
cld
inc
push
movs
nop
and
mov
xor
out
xchg
mov
int
and
mov
cwde
adc
mov
push
and
cmp
imul
inc
out
rcr
cmp
lods
pop
enter
movs
ret
movs
aaa
ins
sub
out
mov
pop
push
pop
(bad)
jnp
jno
sahf
mov
mov
std
shr
inc
iret
out
mov
add
xchg
sbb
dec
scas
mov
mov
mov
pcmpeqw
pop
or
std
pop
in
(bad)
(bad)
int
ret
int
xchg
fsub
or
cmp
mov
inc
sbb
or
adc
test
xchg
cmp
jmp
jge
stos
sti
cmps
retf
mov
pop
jbe
sahf
movs
or
add
add
test
pop
lahf
test
inc
push
sub
sbb
sahf
jne
add
shr
and
icebp
sub
fisttp
jb
int3
imul
pop
add
mov
ss
xor
in
mov
ffreep
mov
scas
and
jo
dec
mov
adc
mov
jl
inc
push
imul
dec
add
inc
cli
in
shl
loopne
pusha
pop
loop
and
movs
adc
jp
int3
add
dec
push
mov
loop
out
in
aad
lods
mov
mov
add
repz
push
sub
xor
(bad)
push
push
bnd
aaa
xor
mov
mov
or
jo
sub
cmps
test
sub
lods
jecxz
rcl
mov
es
ret
fadd
int
lods
in
not
cdq
ja
xchg
inc
(bad)
pop
and
jle
jb
inc
push
movs
xor
cdq
jo
out
jle
retf
cmp
xchg
outs
or
in
idiv
aaa
imul
pop
and
std
hlt
mov
es
mov
daa
add
push
stc
sahf
mov
and
cli
xor
sbb
inc
(bad)
adc
cdq
retf
push
sub
ror
or
idiv
mov
cld
and
(bad)
mov
dec
dec
cld
popa
ins
imul
retf
and
pop
dec
(bad)
fiadd
or
aam
cmp
ins
inc
stos
pop
pop
leave
loop
pop
scas
mov
int3
cli
and
arpl
mov
xchg
cmc
clc
cmps
inc
cvtps2pi
call
fld
aas
ret
sub
sub
ror
jmp
inc
outs
sub
add
clc
sub
(bad)
shl
in
cdq
pop
and
sub
mov
or
scas
outs
xchg
data16
test
outs
add
iret
cmps
repnz
mov
(bad)
in
sbb
popa
ss
enter
lahf
xchg
cld
sbb
mov
add
in
lds
stc
rol
out
pop
retf
mov
mov
mov
jnp
xchg
inc
xor
dec
cmp
test
pop
mov
or
add
dec
retf
pop
test
lods
xchg
sti
add
jo
aaa
jmp
aas
add
jmp
mov
test
lds
jns
mov
in
pop
fcmovne
mov
loop
pop
in
test
hlt
or
leave
iret
cmc
adc
push
push
jbe
out
and
push
push
dec
rol
xor
xchg
in
push
add
sets
lock
push
je
test
outs
add
nop
outs
test
push
js
std
sub
cmp
inc
enter
loopne
mov
ds
fninit
jmp
clc
movs
adc
repnz
push
fiadd
push
fisttp
lds
aas
pop
cmp
fimul
mov
repz
mov
lds
push
lahf
in
cld
mov
test
cmps
mov
daa
(bad)
sbb
mov
(bad)
cld
push
and
xchg
stos
(bad)
outs
dec
rol
xchg
adc
jnp
(bad)
mov
daa
jnp
and
popf
adc
mov
dec
push
jmp
dec
cmp
sbb
cmp
inc
es
mov
mov
mov
test
and
into
je
push
jge
fabs
xor
sbb
and
jno
hlt
pop
loope
fild
ds
clc
aas
aas
into
hlt
popa
(bad)
dec
sub
pop
sar
je
sar
push
ss
test
sbb
pop
xchg
push
cmp
mov
repnz
mov
inc
repnz
ins
mov
xchg
mov
je
(bad)
out
mov
shl
jae
dec
fwait
cmp
shl
dec
js
ins
iret
or
outs
sbb
fadd
jl
(bad)
xchg
xor
pop
jmp
or
xchg
xchg
mov
test
repnz
icebp
adc
cmps
(bad)
cli
sub
add
pop
ret
push
mov
xor
test
jbe
mov
test
wrmsr
out
sahf
fisttp
push
fmul
mov
fs
ins
or
js
push
cwde
fimul
ficomp
push
cs
stc
mov
mov
mov
out
sub
adc
mov
pop
push
pop
scas
shl
out
imul
dec
lock
ins
call
add
out
in
xchg
adc
xlat
in
sub
cmp
pop
pop
sar
add
xchg
mov
cwde
pop
retf
lods
lods
adc
inc
mov
adc
inc
mov
mov
adc
cmp
loop
ds
mov
daa
or
pop
jmp
aad
adc
(bad)
xor
out
dec
sbb
(bad)
xor
hlt
jl
(bad)
ja
in
mov
jbe
rol
hlt
outs
jmp
rol
adc
out
inc
add
je
cmp
repnz
stos
imul
sbb
stc
adc
aad
popf
lods
stc
xchg
shr
add
jmp
cmp
adc
into
icebp
stc
cwde
mov
movs
xchg
dec
adc
pop
cmc
or
inc
dec
addr16
lods
je
xlat
aas
data16
retf
and
xchg
fwait
add
js
pop
mov
ret
dec
and
gs
and
mov
mov
or
inc
pusha
pop
fnsave
mov
push
shr
and
and
sub
or
or
jmp
es
not
add
dec
je
pop
xlat
xor
adc
push
sbb
mov
out
sbb
dec
scas
scas
movs
in
lock
aam
cld
ror
mov
mov
(bad)
shl
pushf
jbe
and
aad
inc
movs
push
push
or
adc
sub
(bad)
fsubrp
in
iret
push
test
xchg
cmp
push
(bad)
loop
pop
ret
aas
inc
(bad)
mov
push
mov
ds
mov
mov
mov
shl
fisub
pushw
sbb
lods
popf
fcom
sub
out
jne
and
pushf
aas
int3
retf
adc
fldcw
push
jecxz
int
push
dec
cmps
iret
adc
shl
xchg
fdivp
jo
shl
cmp
cmp
push
imul
or
mov
in
enter
ret
cmps
jg
mov
hlt
int
cld
sbb
sbb
stos
mov
cli
jo
and
push
jecxz
add
out
mov
repz
and
bound
cmp
or
ret
xor
jo
stc
push
mov
lea
or
dec
dec
fs
hlt
jno
aaa
inc
jmp
sub
je
and
(bad)
aas
aam
mov
jns
lahf
mov
lock
mov
daa
or
jmp
xor
dec
adc
pop
(bad)
cmps
dec
cmp
ds
jmp
push
jae
pushf
and
mov
push
xchg
dec
out
adc
add
fsub
pop
lahf
popa
enter
shr
xchg
lea
inc
shr
jl
sub
fldcw
ins
push
dec
addr16
xor
and
mov
dec
inc
mov
inc
push
sub
add
sbb
and
jle
rol
aaa
or
mov
fild
call
pop
cmps
mov
cmp
dec
fstp
jg
sar
lods
dec
sub
outs
gs
sahf
sar
fsubr
push
inc
push
mov
out
add
xor
mov
les
jecxz
add
inc
jne
or
and
call
add
cmp
jge
pop
dec
push
mov
cld
bound
sbb
pop
(bad)
and
push
stos
mov
xchg
ds
or
push
(bad)
adc
fwait
data16
lods
jno
mov
test
retf
scas
pop
and
out
jae
popa
cli
mov
test
clc
mov
clc
data16
inc
add
jmp
dec
cmp
cmp
cs
mov
adc
jb
enter
cld
aam
(bad)
mov
retf
xchg
jns
aas
outs
gs
adc
ret
cs
in
aam
clc
mov
jb
or
(bad)
repnz
div
imul
cmps
push
in
and
pop
jmp
xor
out
stc
xor
(bad)
cli
xchg
cmp
or
mul
pop
pop
gs
cmps
loop
ror
jns
lahf
xchg
xchg
sti
loopne
out
fiadd
pop
push
scas
xchg
dec
mov
shl
mov
inc
mov
cmp
xchg
push
mov
mov
test
test
pop
dec
sbb
push
ja
mov
mov
and
sub
les
mul
nop
add
jnp
push
(bad)
fmul
cdq
and
add
call
test
iret
mov
stos
ins
outs
daa
test
jmp
xchg
add
clc
mov
or
jl
jecxz
adc
gs
mov
mov
jbe
mov
xchg
jb
into
out
push
dec
in
jnp
retf
jmp
dec
fcomp
ja
jbe
push
xchg
rol
cdq
pusha
mov
mov
fsubr
mov
adc
ficom
mov
test
inc
inc
jns
xchg
xor
push
icebp
jae
seta
inc
daa
in
shl
sbb
xchg
leave
dec
or
call
stos
and
leave
sub
and
or
inc
jle
out
stos
mov
shr
sbb
fs
mov
in
dec
(bad)
and
and
scas
sbb
push
outs
pushf
and
out
lahf
stc
push
popf
jno
fld
xchg
mov
mov
push
nop
cmc
fs
push
arpl
stos
ds
adc
out
mov
pop
sub
dec
fincstp
inc
push
add
lock
mov
clc
jo
out
fisttp
lea
mov
mov
fdivr
dec
(bad)
addr16
ror
sahf
cmc
nop
aaa
fdivr
and
add
sub
aam
add
test
fiadd
shl
mov
popa
movhps
shr
addr16
jmp
push
jmp
mov
inc
fwait
mov
and
and
fistp
sbb
push
push
dec
dec
dec
dec
jnp
ror
loop
cld
push
jo
(bad)
clc
pop
and
retf
adc
imul
adc
and
lds
mov
xchg
imul
inc
jmp
push
dec
dec
mov
(bad)
call
jge
mov
(bad)
call
jecxz
add
inc
push
xchg
mov
inc
dec
iret
xchg
xchg
cmp
fdivr
pop
loope
lods
dec
ret
fcom
and
and
pusha
out
call
pop
jg
mov
add
test
shl
mov
es
popf
in
fist
inc
inc
mov
ins
lea
adc
jmp
add
loopne
mov
mov
lods
(bad)
shl
fcom
xchg
data16
cmp
sbb
retf
xchg
inc
rcr
xor
xor
inc
inc
ins
mov
xchg
dec
fcomp
clc
stos
pusha
cdq
jle
mov
jnp
add
pop
jmp
add
sbb
js
test
jnp
sbb
in
rol
pop
pop
sar
dec
imul
jecxz
mov
pop
or
dec
out
pusha
push
sbb
push
xor
xchg
push
inc
in
outs
in
cmc
jg
xor
xchg
popf
adc
push
jl
inc
and
mov
xor
mov
adc
pop
mov
ficomp
retf
scas
addr16
ja
mov
jbe
fisub
mov
daa
outs
and
in
neg
call
mov
popa
pop
or
mov
jecxz
cmp
sub
pusha
imul
popa
out
repnz
popf
mov
sbb
cmp
sbb
pop
movs
push
movs
xor
pop
inc
stc
int3
test
inc
sub
test
int3
dec
xor
sbb
lods
ret
cs
pop
jp
sub
addr16
cld
mov
arpl
pop
sub
cmp
inc
cld
pop
jmp
mov
jne
xor
fild
jg
clc
ins
ror
mov
ja
rcr
test
add
sbb
mov
jne
imul
call
pushf
ja
imul
loopne
shl
inc
loop
jb
push
cmp
test
push
push
mov
jne
hlt
adc
(bad)
dec
push
loop
cmp
inc
pcmpeqw
jae
dec
pushf
mov
stos
jmp
push
lds
xor
sahf
cmp
cli
pop
pop
inc
ja
rcr
xchg
jo
xor
mov
dec
mov
gs
mov
mov
xchg
ret
xor
stos
cmp
cwde
or
imul
dec
pop
stos
leave
loopne
stc
inc
ds
pop
add
push
cld
fdivr
xchg
(bad)
sub
mov
adc
rcl
arpl
mov
push
dec
sar
mov
lods
cmps
ins
xor
push
mov
cmc
pop
jo
xchg
pop
pop
dec
sub
jnp
je
fld
imul
aas
inc
lods
leave
xor
sbb
xchg
push
inc
mov
outs
outs
sub
mov
repz
aas
call
loop
fsubr
dec
mov
mov
pop
mov
sbb
mov
(bad)
mov
repnz
jns
nop
cmp
mov
test
dec
sbb
adc
cmps
mov
adc
pushf
faddp
arpl
mov
jb
(bad)
call
sub
push
dec
ss
cs
push
stos
in
ins
sti
xlat
pop
dec
xor
shl
loope
add
mov
add
xor
mov
jp
xchg
sbb
idiv
jecxz
jae
imul
enter
lahf
sub
stc
(bad)
mov
push
mov
dec
adc
pop
std
out
and
ror
int
movs
jno
loop
in
clc
fmul
sbb
dec
jmp
or
push
mov
clc
fadd
pop
loope
cmps
mov
es
inc
leave
nop
xor
pop
jmp
push
arpl
xor
add
mov
dec
adc
jne
pusha
fimul
outs
cmp
stos
arpl
sbb
xlat
adc
sub
push
jge
(bad)
retf
gs
jmp
in
jle
adc
xchg
pop
jp
mov
cdq
jb
test
xor
dec
std
mov
xchg
in
fadd
leave
pop
jp
shr
ret
jp
aaa
ss
das
mov
cmp
jno
int3
ror
sub
ins
ss
adc
lods
add
push
enter
sbb
loope
xor
and
sbb
xor
push
call
pop
repz
out
out
mov
imul
dec
inc
jns
mov
inc
in
mov
es
or
push
(bad)
xor
push
sar
sahf
push
cmp
or
lea
mov
test
imul
cmp
push
icebp
sahf
jg
mov
icebp
out
cmp
scas
fs
addr16
jmp
add
pop
(bad)
or
xchg
cs
js
xchg
add
push
or
pop
pandn
jo
pop
call
jle
loope
fsubp
jmp
sbb
in
cmp
xor
jbe
inc
ror
pop
in
imul
in
cwde
adc
(bad)
or
cmp
je
sti
mov
jmp
adc
jge
push
jge
inc
add
push
arpl
div
ret
(bad)
mov
mov
mov
mov
pushf
fsub
in
mov
dec
test
mov
cmp
les
mov
outs
sub
aaa
out
je
jne
nop
adc
test
jg
dec
test
xchg
idiv
add
gs
jecxz
cmp
pop
repnz
mov
mov
xor
sbb
sub
ret
into
repz
cs
push
clc
jecxz
not
jmp
aas
sub
in
rol
(bad)
gs
push
(bad)
loopne
add
bound
sbb
adc
repz
xchg
xchg
push
xor
jae
inc
mov
test
inc
dec
sbb
sar
cmc
mov
and
aas
xchg
pop
mov
fldenv
push
or
pop
and
push
fnstcw
(bad)
daa
push
popf
and
scas
add
push
push
mov
mov
xor
mov
cmp
sbb
test
out
cwde
dec
popf
sub
les
push
int3
push
push
dec
daa
add
inc
pop
xchg
sub
inc
or
sub
and
dec
enter
loopne
inc
idiv
jmp
iret
dec
mov
rcr
mov
in
push
test
fld
mov
aaa
in
daa
jmp
out
xchg
sbb
dec
and
mov
pusha
and
outs
sbb
mov
cmp
lds
ret
push
inc
into
sahf
sbb
push
mov
cli
test
cld
int3
cmc
cwde
or
(bad)
cld
cmp
and
loopne
mov
call
xchg
jns
rcr
jne
adc
hlt
mov
(bad)
call
xlat
ins
xchg
jle
(bad)
jo
retf
leave
neg
pop
jecxz
sub
pop
(bad)
int
outs
push
out
stos
(bad)
not
cwde
pop
in
cmps
mov
test
test
outs
jb
jno
stos
(bad)
retf
js
repnz
mov
mov
fisubr
data16
je
mov
pop
sub
push
pop
imul
cmps
test
xor
xchg
mov
push
fisub
adc
mov
xor
mov
loope
pop
imul
xchg
lahf
rol
jl
jmp
xlat
mov
push
add
sahf
jge
sub
mov
aas
xchg
retf
jb
mov
inc
push
sbb
xchg
cmp
xchg
and
ret
inc
sar
(bad)
mov
pop
enter
xchg
xor
aam
shl
outs
retf
mov
mov
popf
mov
imul
add
int3
movs
jge
stc
stc
xor
push
call
jg
xchg
(bad)
repnz
mov
cmp
mov
imul
cmp
sbb
bnd
sahf
lahf
jbe
jl
inc
mov
loop
pop
and
add
mov
popa
jne
mov
mov
sti
dec
imul
out
mov
je
ds
int
loope
pop
lock
pop
or
mov
iret
push
out
inc
sub
dec
sahf
sub
je
daa
in
or
pusha
xor
fstp
mov
lds
mov
ss
xchg
mov
(bad)
xchg
loop
inc
stc
adc
cmps
sub
jge
or
xor
pop
shl
or
pop
dec
sti
jno
pop
lock
pop
retf
jo
test
pop
and
sbb
adc
sub
out
daa
and
sti
hlt
js
pop
in
stos
xchg
pop
int
das
dec
stos
push
jp
inc
aad
sbb
cmp
push
mov
test
xlat
clc
stos
ins
gs
(bad)
out
mov
xchg
jbe
ror
bound
inc
ins
aaa
xlat
fs
adc
xchg
xor
cli
inc
test
jmp
pusha
test
imul
sub
pop
les
retf
pusha
lods
in
mov
outs
jecxz
adc
inc
ss
jbe
push
xchg
and
pop
fs
fild
and
cdq
xor
fs
add
(bad)
leave
call
fmul
or
test
push
mov
cmp
popa
sbb
cmps
push
sbb
das
or
pop
jae
gs
mov
outs
push
pop
pop
mov
pop
pop
(bad)
sar
and
sbb
into
mov
stos
inc
jl
pop
add
push
cwde
sbb
retf
jns
cmp
cmc
xor
aam
mov
loop
mov
int
lods
dec
or
xchg
in
ins
sub
mov
push
bound
push
mov
pop
jge
test
sbb
int3
dec
jo
loop
mov
inc
int3
add
and
imul
add
jmp
inc
shl
retf
jno
push
xor
scas
xchg
jmp
jmp
pop
(bad)
es
xlat
inc
xchg
repz
mov
inc
dec
mov
jnp
ins
dec
iret
sub
arpl
sub
int
pop
call
sar
int
dec
pop
arpl
imul
adc
stos
hlt
mov
in
inc
and
not
bound
push
xchg
iret
adc
xchg
outs
sub
mov
enter
add
jne
bound
lock
iret
loop
mov
clc
push
and
ret
jne
leave
std
sbb
pop
cmp
jmp
test
xlat
scas
cmp
sbb
push
in
add
bound
fadd
dec
pop
es
daa
lds
js
or
inc
push
xor
scas
add
fsubr
jae
pop
push
(bad)
mov
mov
mov
enter
clc
dec
and
dec
xchg
pop
mov
sub
push
pop
inc
add
and
add
out
add
mov
pop
jns
out
jno
pop
(bad)
push
sub
mov
or
lods
je
lock
ficomp
and
mov
mov
and
ss
inc
lods
fsub
aam
loope
repz
jmp
scas
sbb
movs
mov
cs
pop
jg
daa
mov
aam
pop
jnp
stos
cmps
arpl
lods
jo
(bad)
nop
jmp
cmp
adc
(bad)
mov
pop
(bad)
and
rcl
sbb
xor
inc
imul
or
std
ds
pop
or
js
adc
inc
or
mov
push
dec
shr
jge
xchg
adc
test
stc
adc
dec
js
jmp
lahf
jp
(bad)
hlt
add
jp
and
push
and
dec
push
jb
jno
cld
sub
mov
(bad)
mov
fs
into
stc
(bad)
push
pop
add
pop
push
cmp
add
xlat
ds
mov
mov
or
out
and
mov
push
dec
jmp
sbb
lea
rcl
call
pop
movs
inc
jge
jbe
lock
add
es
pop
jmp
xchg
mov
hlt
sub
push
inc
lea
imul
cdq
sub
cld
pop
lods
push
pop
cmps
pop
in
jno
lock
push
jle
cmc
xlat
jge
jmp
(bad)
mov
sub
push
push
pop
cld
mov
add
xchg
and
aad
jecxz
cmp
lds
jae
add
sahf
mov
test
pop
or
and
push
mov
fwait
cmc
inc
push
retf
xchg
shl
test
inc
test
and
neg
push
inc
mov
inc
mov
mov
mul
jmp
add
mov
adc
jo
mov
stos
test
mov
push
jg
dec
mov
push
leave
mov
mov
jl
fsub
(bad)
rcl
sub
bound
sub
xchg
aad
scas
jmp
xor
push
lods
or
mov
mov
adc
movs
add
dec
movs
sti
mov
mov
xchg
lods
sub
shl
sub
cli
jle
(bad)
pusha
and
jecxz
cmp
inc
cmp
sub
xor
mov
fucomi
test
add
xchg
sbb
enter
(bad)
pop
fcomp
outs
pop
ret
jnp
leave
mov
xchg
push
push
mov
(bad)
(bad)
inc
je
jp
cmps
call
cld
ret
ror
push
add
mov
sub
inc
inc
clc
fld
mov
leave
xor
xor
mov
and
sbb
clc
sub
jp
dec
pop
sub
addr16
pop
pop
outs
pop
push
leave
ins
call
enter
or
popa
jne
out
int
fbld
adc
ins
cmp
dec
dec
pop
or
sti
into
pop
sub
icebp
imul
pop
int
jo
cmp
icebp
cmp
xchg
mov
mov
sahf
call
in
dec
jp
bound
cld
or
dec
cmp
aas
sbb
gs
out
leave
movs
rcr
fsubr
fsubr
adc
xchg
(bad)
sti
mov
mov
scas
daa
add
daa
jg
push
and
ins
leave
push
sub
inc
mov
push
ins
in
mov
mov
mov
retf
call
push
xor
stc
mul
jno
inc
push
mov
jo
xor
test
in
sub
adc
sbb
inc
adc
std
mov
push
dec
icebp
adc
cmp
and
jg
cmp
sahf
xor
repz
jae
mov
test
stos
fcom
addr16
je
sub
mov
pop
or
mov
test
(bad)
pusha
shl
dec
sub
aas
mov
xor
(bad)
xor
loop
aad
lea
pushf
cmp
push
mov
push
outs
adc
jmp
sub
and
xchg
xor
push
or
push
push
jmp
xchg
cmp
cmp
lea
inc
(bad)
mov
fnstcw
jecxz
ror
mov
mov
lods
push
(bad)
fidiv
scas
into
imul
loop
sti
mov
retf
jle
out
lods
push
mov
xchg
mov
ss
xchg
mov
push
push
sbb
iret
add
rcr
(bad)
pop
mov
nop
pop
add
or
mov
xor
mov
cmp
or
jbe
or
add
into
pop
push
jl
movs
dec
popf
shl
adc
and
fidiv
xchg
dec
call
icebp
mov
sub
mov
pushf
push
inc
xchg
aad
sub
push
or
movs
std
inc
test
sar
jne
lods
stc
int3
repnz
pop
mov
std
aam
dec
push
ret
in
ins
mov
xchg
out
pop
push
add
int3
dec
ficom
lahf
xor
pop
adc
mov
jns
pop
call
jno
and
sub
mov
out
sub
jecxz
and
nop
xchg
or
sahf
dec
jecxz
or
push
pop
movs
dec
mov
out
sar
xchg
mov
jmp
pusha
xor
fisttp
es
push
inc
adc
inc
mov
ret
dec
adc
or
fwait
jge
stos
(bad)
xchg
and
retf
mov
mov
xor
lods
jb
mov
cmp
jae
mov
mov
outs
mov
ret
and
shl
lahf
ret
mov
dec
xor
push
int
loopne
dec
xchg
arpl
mov
ins
ret
aad
pop
mov
cmp
cmp
add
adc
jge
fimul
out
lds
repz
adc
ja
in
and
fld
ficom
(bad)
mov
mov
fisttp
jl
std
lds
inc
retf
sbb
repz
data16
jo
jno
jmp
adc
or
mov
popf
xchg
fistp
sbb
in
popf
cld
rol
and
scas
cdq
shr
fistp
nop
loop
aad
mov
pushf
adc
(bad)
xor
lahf
shl
int3
and
push
and
rcl
push
add
mov
stos
cmp
xchg
aam
and
icebp
mov
(bad)
cmp
popa
jnp
clc
rcr
dec
pusha
mov
mov
mov
daa
push
push
ret
call
std
clc
pop
sar
in
sti
cmp
mov
lds
das
cmp
jns
push
ficom
mov
add
push
loopne
out
lods
xor
pop
stos
xchg
in
push
push
cmps
xor
or
jno
test
mov
fs
pop
mov
adc
jno
or
fwait
or
pop
pop
sti
leave
addr16
clc
or
cmp
mov
and
push
(bad)
and
push
xor
sub
and
std
in
test
stos
adc
sbb
jle
or
ds
jmp
rcr
sbb
sub
jo
cmps
push
mov
ja
push
jle
push
pop
fdiv
sub
mov
mov
mov
fnstenv
xor
sbb
idiv
cmc
sbb
push
cmp
stos
imul
mov
jbe
lahf
inc
jae
arpl
push
mov
jle
popf
pop
mov
retf
popf
mov
pop
inc
pop
sub
xor
and
or
rol
into
pop
mov
fist
push
repz
aad
mov
mov
aaa
dec
std
push
call
fcomp
mov
(bad)
out
push
cmp
test
pushfw
and
or
mov
popf
retf
aaa
stos
mov
(bad)
leave
jae
fdiv
sbb
jl
xchg
mov
clc
das
hlt
out
sub
call
das
test
(bad)
in
dec
in
inc
je
inc
fadd
ja
jge
and
and
call
inc
in
adc
push
mov
xlat
jb
mov
mov
ss
push
jecxz
and
mov
mov
adc
jne
into
adc
test
sbb
mov
pop
xchg
xchg
adc
sub
scas
shl
jae
(bad)
pop
xlat
adc
inc
push
push
adc
dec
std
sub
inc
pop
test
nop
adc
ds
aaa
push
lods
fcomp
test
xor
(bad)
fisubr
pop
das
movs
ror
push
mov
lods
addr16
mov
and
mov
or
shl
add
xchg
push
jmp
pop
retf
jl
lds
sbb
add
jbe
bnd
sub
xor
xchg
fwait
mov
mov
outs
aaa
(bad)
test
cmp
and
hlt
cmps
fwait
lods
fcom
data16
mov
in
cmp
mov
or
loop
cmp
stos
jns
jg
imul
jmp
das
push
add
out
pusha
out
sahf
jmp
inc
fild
mov
psubusw
pop
jmp
add
ficomp
adc
mov
push
add
icebp
int
pop
repz
inc
add
xor
popf
adc
(bad)
mov
aad
cmp
lods
xchg
mov
sbb
sub
jo
scas
ret
hlt
and
ret
outs
xchg
inc
mov
movs
fisttp
mov
mov
call
pop
xor
scas
sbb
cld
scas
add
neg
jmp
pop
es
jmp
cmp
cmp
lock
xchg
pop
push
add
repz
pusha
imul
popa
add
call
mov
jmp
test
add
out
push
inc
enter
sbb
or
add
inc
xchg
cmc
call
pop
(bad)
out
pop
sbb
idiv
xor
ret
adc
mov
push
data16
mov
sub
fbstp
xlat
mov
dec
mov
push
aad
and
mov
call
mov
cmps
lods
in
mov
push
mov
sbb
(bad)
jno
jecxz
rep
and
(bad)
int
cli
popf
lea
mov
repnz
int3
outs
sub
jle
leave
add
in
fxch
jge
jo
popf
lds
outs
and
jmp
scas
mov
pop
jp
dec
inc
in
sbb
lahf
and
or
ds
sar
iret
inc
in
push
push
push
(bad)
pop
sub
fs
sub
sbb
cmp
push
mov
cmp
push
sti
jbe
aad
shr
aad
push
sub
aas
es
rol
dec
pop
jmp
es
bound
std
cmp
inc
sbb
mov
in
leave
into
out
ret
repnz
cmp
les
hlt
cli
in
adc
xor
int
ror
inc
adc
mov
mov
push
sub
push
repz
sti
or
push
inc
nop
cmp
mov
hlt
aaa
and
dec
hlt
jnp
imul
cmp
icebp
fimul
sbb
nop
and
adc
add
cdq
push
ficom
sbb
leave
xlat
mov
inc
mov
or
pop
das
xchg
ds
test
icebp
cs
push
(bad)
in
std
mov
inc
sbb
inc
test
lock
lods
mov
sbb
push
dec
stos
loop
dec
les
aam
sbb
daa
inc
cmp
in
push
inc
dec
xlat
cld
inc
fldcw
sahf
loope
ins
mov
xchg
and
movs
jb
enter
jmp
ja
lea
cmp
cwde
scas
and
jnp
add
sub
add
mov
fneni(8087
ins
cwde
mov
rcl
das
out
xor
xlat
cdq
aaa
push
(bad)
pusha
or
inc
mov
pop
mov
cs
and
pop
and
cmc
or
(bad)
jecxz
add
jg
mov
inc
imul
add
in
jo
call
sub
jno
je
icebp
aam
ror
ds
jg
popa
mov
(bad)
clc
enter
outs
cmp
xchg
es
idiv
cmp
(bad)
in
cwde
popa
mov
sti
retf
xor
sti
not
dec
adc
bound
test
jno
pop
push
jecxz
pop
push
into
out
inc
cmp
or
fsubrp
imul
sahf
(bad)
inc
je
pop
add
pop
repz
loop
test
in
push
out
add
sbb
jns
push
adc
dec
mov
arpl
lea
mov
xor
xchg
xor
mov
or
nop
call
outs
leave
add
and
adc
jl
aas
xchg
retf
xchg
jbe
adc
lds
push
mov
mov
mul
out
sbb
jne
lahf
add
jecxz
mov
cmp
or
push
aam
mov
jae
mov
inc
fdivp
in
inc
enter
xchg
mov
cmp
ins
sar
mov
dec
add
cmp
sar
push
cld
(bad)
cmp
enter
or
cmp
pusha
jl
cld
mov
hlt
dec
cmps
fwait
xor
mov
(bad)
div
dec
or
xchg
sti
or
fist
out
popa
add
in
setne
cmp
xchg
(bad)
sbb
ins
(bad)
cs
sbb
pop
push
movs
shr
inc
test
mov
adc
stos
mov
push
hlt
ss
push
xor
dec
out
sub
mov
cmp
cmp
adc
dec
in
jne
aas
aaa
fiadd
ret
or
xor
cmp
aad
inc
push
and
add
imul
or
out
scas
(bad)
cmp
mov
(bad)
je
nop
jecxz
xlat
inc
push
pop
cdq
fstp
dec
and
retf
mov
js
mov
xor
shr
out
xchg
outs
gs
movs
pop
cmp
lds
into
mov
call
and
(bad)
sti
ret
mov
cdq
push
out
adc
in
push
xor
sbb
pushf
leave
and
stos
call
jb
push
das
or
inc
add
ror
jno
inc
or
imul
sub
les
pop
sub
and
mov
pop
int3
sub
inc
add
fsubr
jmp
mov
mov
popf
dec
arpl
add
push
adc
loope
mov
xor
sub
fadd
je
iret
adc
loope
ins
sar
adc
jp
popf
sbb
(bad)
jmp
mov
ror
dec
xor
(bad)
fdivr
mov
inc
mul
jmp
retf
sub
aam
and
arpl
pop
or
inc
aad
shr
sub
jmp
push
loope
pop
or
sbb
fist
adc
scas
cmp
sbb
int3
push
mov
jge
add
(bad)
in
sbb
(bad)
push
loope
push
pop
cmp
sar
push
rol
sbb
adc
es
push
cmp
add
mov
leave
adc
addr16
jbe
out
adc
int
jl
ffree
inc
mov
jge
mov
stc
ds
popf
std
dec
push
test
sub
pop
push
jp
cli
sahf
popa
xor
leave
test
repz
xchg
popf
adc
aas
and
or
xchg
or
inc
jg
cmp
pusha
add
or
adc
jge
pop
repz
lds
je
adc
stos
bound
mov
or
into
aaa
jns
jo
mov
in
mov
add
pop
cld
sbb
pop
pop
mov
aas
(bad)
clc
dec
push
add
dec
shl
dec
pop
lods
sub
ins
and
pushf
shr
jo
iret
pop
outs
add
jmp
or
ins
mov
push
sub
or
popf
or
sar
inc
inc
fisttp
js
push
pop
cdq
fisttp
ds
or
inc
adc
cmc
in
test
lock
mov
mov
popf
fstp
jnp
xor
pop
dec
and
sbb
test
xor
mov
jne
and
inc
test
mov
dec
fcom
das
data16
and
cmp
lock
mov
adc
inc
rcl
pop
rol
test
add
mov
cmp
fs
sub
aad
mov
xchg
jg
dec
cmp
lods
mov
pop
cmp
ret
icebp
push
fisttp
in
pushf
xchg
inc
mov
cmp
sar
test
mov
jl
popf
loope
mov
cmp
pop
add
fisttp
ins
data16
push
call
jp
daa
test
sub
sti
xor
int
fbstp
sub
jg
(bad)
pop
sub
out
sbb
adc
bound
cs
enter
fsubr
pop
shr
in
cmps
or
mov
int3
mov
call
and
cmp
div
push
(bad)
and
mov
loope
or
loopne
outs
or
adc
shl
add
and
inc
sahf
inc
jno
jo
xchg
dec
mov
jnp
mov
iret
aad
in
lods
mov
in
adc
adc
mov
pushf
jl
dec
cmp
xchg
js
mov
int3
mov
and
(bad)
pop
test
je
dec
xchg
scas
fwait
int
and
jmp
shl
clc
es
xchg
ret
(bad)
(bad)
stc
test
inc
mov
pop
cli
(bad)
in
pop
pusha
jmp
leave
push
adc
inc
xchg
push
cmp
inc
out
rcr
mov
aam
cld
adc
lahf
ret
sbb
mov
popf
dec
imul
pop
daa
test
xchg
dec
xchg
pop
sbb
push
xchg
and
stos
sbb
pop
imul
dec
in
icebp
ss
ins
push
xor
push
jnp
cmc
xor
ins
or
fsub
frstor
mov
out
ffree
fmul
mov
cmp
push
cmps
mov
ins
pop
clc
call
repnz
cmp
mov
mov
dec
repz
dec
loopne
imul
xchg
jmp
sbb
mov
mov
add
stc
shl
inc
shl
mov
das
push
sub
fnstenv
retf
movs
or
inc
mov
xchg
or
mov
cmp
push
loopne
jo
sub
jecxz
jmp
push
sbb
add
(bad)
inc
ins
dec
mov
pop
xchg
in
lock
mov
dec
pop
out
or
inc
pop
and
jmp
push
mov
xor
fadd
sbb
mov
xchg
inc
stos
xchg
sub
call
enter
push
adc
inc
add
rcl
mov
popa
popf
ret
or
jle
adc
cmp
mov
and
xchg
stos
jae
inc
mov
push
in
mov
or
lods
lds
addr16
rol
ss
movs
or
stc
push
sbb
sub
adc
mov
fmul
(bad)
mov
xchg
cmp
retf
and
fld
sub
or
das
adc
dec
das
sub
xor
pusha
addr16
sub
cld
mov
ret
cwde
test
lahf
and
repnz
or
cmp
pop
retf
test
push
cmps
pusha
iret
stos
cli
paddq
jmp
shr
aam
and
dec
cmps
lahf
ja
ins
push
or
sub
bound
xchg
mov
rcr
into
dec
ror
clc
xchg
inc
xor
mov
scas
ja
xor
test
dec
(bad)
(bad)
mov
push
adc
xchg
popa
pop
(bad)
sti
ja
pop
(bad)
push
push
sbb
pusha
pusha
xlat
push
jl
mov
mov
adc
jmp
dec
clc
push
cmp
pop
cwde
pop
shl
outs
shl
icebp
cmp
push
retf
cmp
and
dec
pop
mov
scas
popa
jno
fdivr
jno
push
xchg
pop
or
mov
mov
fild
mov
cmp
mov
mov
cs
call
cs
or
arpl
jne
pop
(bad)
mov
push
fisubr
pop
mov
fadd
jmp
clc
aaa
push
push
jns
fs
pop
pushf
(bad)
xchg
pop
jb
mov
sahf
test
scas
je
and
mov
daa
adc
daa
jmp
fs
push
push
call
shr
pop
dec
jae
sbb
loope
call
mov
adc
lahf
movs
int
dec
aas
dec
outs
or
(bad)
add
mov
add
dec
inc
inc
xchg
test
and
cmp
movs
sti
dec
pop
dec
pop
bound
sar
movs
mov
jnp
mov
push
iret
and
int3
dec
push
pop
sar
in
in
and
mov
jg
xlat
push
push
xor
out
loopne
dec
push
and
dec
jns
sub
int
std
mov
shl
imul
fadd
xchg
mov
lahf
dec
ficomp
icebp
stos
sbb
cmps
lds
xchg
lock
es
out
sahf
sub
sbb
sbb
sbb
sti
neg
call
in
jae
stc
or
jnp
leave
stos
adc
scas
icebp
aas
push
jg
cmp
jne
sbb
or
jbe
push
das
push
dec
jmp
lock
cwde
pop
jae
push
jge
push
mov
mov
cmp
dec
mov
cmp
stos
loop
inc
cmp
adc
sbb
and
sbb
aas
pop
xlat
out
push
inc
mov
imul
fmul
mov
add
jmp
push
js
inc
clc
cmc
dec
shr
jbe
and
cmp
mov
and
fldenv
xchg
lahf
jo
cmp
movs
mov
mov
mov
ss
cmp
pop
int3
xor
push
pop
push
das
inc
or
xchg
add
cmp
push
xchg
call
imul
je
mov
shl
jle
xchg
push
pop
shl
cmp
jne
inc
pop
xor
(bad)
add
xor
pop
sbb
pusha
adc
dec
sbb
ja
sbb
xor
retf
aad
pusha
inc
adc
mov
jecxz
mov
jp
push
add
fist
or
std
fiadd
mov
mov
sahf
dec
pop
dec
ror
rol
push
adc
pop
(bad)
(bad)
mov
out
pop
xchg
pop
ins
sub
xchg
push
bnd
jbe
xchg
icebp
xor
or
cwde
inc
jl
mov
fdiv
sbb
repnz
jecxz
ss
mov
dec
cmp
imul
xchg
cmp
cmp
not
fwait
loop
cwde
mov
mov
jmp
pop
push
mov
adc
dec
retf
sti
loope
ds
sub
adc
fisttp
xlat
ss
ret
mov
xchg
fst
aaa
mov
sub
adc
sahf
xlat
cwde
pop
sbb
pop
push
je
jp
mov
dec
push
loop
push
out
jo
mov
gs
je
add
mov
test
fistp
hlt
jp
repz
mov
mov
imul
fldenv
loope
aas
mov
arpl
pop
jno
cmp
leave
jo
add
movs
aas
fs
out
push
xchg
rcl
xor
mov
ins
aam
stc
sub
sbb
nop
push
out
add
out
jp
mov
pop
rcl
xor
sbb
daa
ins
outs
cmp
pop
aas
dec
dec
fimul
cwde
data16
mov
adc
sbb
pop
ret
xchg
imul
mov
sbb
inc
sbb
jecxz
dec
jl
and
pop
(bad)
mov
jb
push
daa
sub
jb
leave
sub
inc
or
xchg
jo
int3
sbb
mov
loop
or
jp
pushf
cmc
mov
jecxz
fiadd
xor
mov
ds
mov
mov
pop
pop
mov
lock
dec
scas
mov
and
pop
daa
aam
xor
movs
push
and
xor
sbb
rcl
sub
mov
jle
add
push
(bad)
daa
pop
jge
dec
push
in
xor
mov
push
xchg
idiv
xchg
(bad)
mov
aad
cdq
mov
sbb
mov
das
outs
jne
not
loop
daa
sar
or
fs
out
jno
mov
shr
adc
dec
sar
imul
push
into
in
rol
jne
pop
push
push
pop
or
xchg
or
bound
pop
rcl
or
test
push
mov
xchg
dec
movs
ins
cld
scas
mov
adc
xor
fucomp
out
leave
jbe
xor
retf
xchg
in
outs
mov
je
je
(bad)
(bad)
mov
mov
sbb
adc
xchg
ret
jmp
inc
or
test
inc
sbb
call
push
jmp
je
mov
lahf
call
push
mov
push
push
popf
xor
sbb
repz
sbb
jns
xor
loope
in
or
jne
mov
fisttp
pop
lods
or
sbb
ins
test
pushf
xchg
in
mov
xchg
mov
cmp
xlat
sar
xchg
movs
aad
imul
cmp
sub
cmp
into
jecxz
adc
enter
rcl
jl
mov
mov
(bad)
mov
sub
inc
dec
inc
stos
jle
adc
pop
mov
shl
xchg
jmp
mov
and
in
pop
addr16
faddp
ror
nop
mov
ret
shl
(bad)
or
and
out
sub
and
or
cdq
push
clc
outs
test
sub
add
and
push
mov
test
nop
ret
lock
adc
cmp
mov
pop
rcr
lods
adc
and
cmp
mov
popa
cwde
aad
sub
cs
or
shr
(bad)
or
imul
dec
sahf
mov
push
sahf
test
outs
cmc
jmp
inc
nop
dec
and
xor
push
xlat
mov
xor
inc
clc
sub
jb
lock
sub
and
inc
sub
pop
(bad)
xchg
lods
add
and
push
xchg
ret
jnp
cwde
int3
clc
jnp
and
fcmove
out
xchg
mov
ds
add
add
mov
sbb
or
test
loop
addr16
inc
adc
into
inc
std
cmp
sbb
enter
cmp
fs
xor
(bad)
pop
xor
jnp
add
aas
in
std
movs
or
push
ss
xor
cmps
pop
stos
push
fcomp
stos
mov
rcr
fs
ins
or
daa
jo
mov
mov
(bad)
xchg
and
add
cli
hlt
push
push
das
out
mov
pushf
and
rol
cmp
loope
xchg
xor
lea
xor
mov
cmp
je
jg
adc
add
repz
xor
pushf
cmp
jecxz
cmp
jnp
stc
jae
ins
fcom
loope
pop
test
daa
jl
pop
cmc
sbb
gs
scas
cmps
cmc
in
mov
aad
xor
mov
push
pop
leave
push
sub
pop
call
jbe
int
dec
dec
fisttp
ret
mov
outs
pop
add
mov
mul
xor
jnp
fisttp
lea
and
jb
sbb
xchg
loopne
retf
sbb
mov
fimul
(bad)
sbb
and
add
sbb
je
jbe
les
mov
scas
and
xchg
stos
dec
lods
pusha
aas
mov
test
or
pop
mov
sahf
add
adc
cmps
lds
mov
(bad)
sbb
ror
mov
rcr
or
ds
ins
fimul
push
xchg
test
mov
mov
test
inc
ja
in
cdq
inc
ror
test
out
pop
call
xor
mov
cs
or
push
xchg
jge
inc
xchg
call
dec
imul
bnd
fstp
push
xchg
adc
mov
and
cdq
mov
lahf
inc
fstp
and
fcomp
mov
mov
push
icebp
cmp
cmps
jmp
push
jno
jecxz
sbb
sbb
sbb
sti
fnsave
aam
test
in
js
je
ja
(bad)
outs
leave
out
sbb
fs
(bad)
jnp
mov
push
scas
jae
repz
fdivr
inc
shl
sbb
add
cmp
add
pop
addr16
aad
xor
add
adc
mov
xchg
mov
loop
fwait
or
sar
sbb
xor
cmp
push
mov
mov
lods
sbb
mov
sbb
mov
jne
dec
sub
cmps
shr
loop
and
dec
in
push
fadd
sub
pop
daa
push
scas
cld
(bad)
and
int3
int3
inc
mov
inc
fs
sar
fs
inc
mov
in
or
pushf
repnz
repnz
jle
xor
xor
push
sub
xor
pop
pop
cli
xchg
xlat
test
lds
ins
sub
xchg
arpl
fisubr
retf
call
loopne
mov
cli
jno
jne
(bad)
shr
mov
mov
jb
(bad)
out
leave
mov
stos
xlat
nop
dec
mov
pop
xor
leave
(bad)
jne
in
push
out
inc
loopne
outs
not
aaa
sbb
sbb
fdiv
shl
cmp
jle
push
dec
add
scas
push
out
test
inc
xor
lds
jns
or
data16
sub
(bad)
loopne
fimul
ins
cdq
and
aas
inc
mov
push
out
pop
mov
pop
add
sahf
aaa
lock
addr16
movs
icebp
loope
jns
dec
xlat
push
loop
dec
scas
xor
or
cmp
sub
pop
mov
ror
cmp
ds
lahf
inc
mov
ins
in
in
push
jbe
cmp
dec
outs
repz
popf
cmps
push
jae
jp
lock
ficom
fidivr
in
(bad)
in
add
mov
rcl
inc
imul
sub
sbb
mov
jecxz
push
fstp
xor
push
ss
inc
sub
mov
movs
test
cli
int3
rcl
lahf
mov
pop
loop
mov
and
push
jae
out
nop
inc
fwait
push
(bad)
pop
adc
push
fnstsw
in
rol
fisttp
cmc
push
push
fisub
mov
xchg
in
sar
mov
or
sub
stos
pop
es
pop
into
dec
int
add
xchg
ficomp
hlt
xchg
into
sub
sub
push
fwait
jo
retf
ja
inc
lods
and
in
jmp
adc
(bad)
mov
shl
(bad)
aad
inc
jg
retf
mov
xchg
imul
loope
das
mov
jmp
push
popf
dec
mov
mov
xlat
jmp
xchg
in
pusha
retf
and
scas
xchg
inc
pop
add
in
imul
test
imul
ret
inc
jge
push
jmp
cmps
add
loop
ins
(bad)
xchg
dec
xchg
outs
leave
sbb
dec
outs
add
dec
add
push
aas
jmp
jl
jge
shr
shl
jmp
push
pop
repnz
jmp
mov
mov
push
pop
pop
lahf
aad
xchg
fwait
in
jno
jp
lds
mov
xor
mov
and
xchg
pop
stos
mov
(bad)
xchg
test
push
or
frstor
test
mov
scas
iret
lods
ret
mov
sahf
fidivr
sbb
ins
sub
(bad)
aad
mov
rcl
cmp
jge
jbe
leave
cmp
or
cmp
dec
pop
int3
jl
(bad)
sar
cmps
int3
jno
xor
mov
xchg
loopne
add
add
sbb
xor
add
std
sbb
add
pop
sbb
in
sub
cmp
sbb
mov
aam
inc
xchg
(bad)
jmp
leave
jnp
adc
jbe
mov
mov
int
in
inc
iret
(bad)
retf
out
test
and
test
std
test
push
cmp
xchg
jmp
xchg
push
ret
(bad)
(bad)
mov
ror
ror
data16
xor
sub
ss
popf
pushf
or
dec
mov
sub
out
ficomp
icebp
mov
push
dec
sub
xor
(bad)
cs
scas
inc
aaa
sbb
pop
fdivr
mov
or
jmp
mov
fwait
and
jo
inc
(bad)
adc
sbb
fwait
repz
inc
cmp
sbb
mov
push
pop
xchg
imul
in
mov
stos
ins
inc
nop
ret
sbb
mov
and
push
mov
cdq
daa
fistp
xchg
ficom
jp
sub
lods
das
icebp
adc
xchg
jmp
xchg
into
repz
add
push
xlat
(bad)
ret
outs
jle
push
fs
jmp
mov
retf
fwait
push
jle
jne
jo
js
jmp
(bad)
inc
jns
scas
movs
jl
call
xchg
ficom
aaa
ret
icebp
cmp
dec
pop
jbe
dec
and
adc
mov
daa
iret
sti
fild
push
(bad)
scas
fadd
mov
lea
stos
pop
fwait
rol
sbb
xchg
and
mov
add
div
add
push
adc
sbb
das
cmp
test
je
sub
stos
cwde
fstp
push
and
cli
ss
out
dec
ins
lock
cmps
sub
lods
dec
loopne
fnstenv
pop
lahf
push
std
push
cmp
inc
cmp
sub
gs
pop
cdq
cmps
mov
clc
pop
fisttp
fwait
inc
pop
jne
ins
pop
(bad)
adc
cmp
call
mov
push
push
sbb
jl
cli
stc
mov
mov
sahf
and
and
dec
pop
cmps
or
cmp
into
ret
jo
xchg
jmp
sub
add
and
test
arpl
cmps
mov
stos
cmp
cld
cmp
cwde
retf
dec
int3
mov
inc
repnz
repz
jnp
or
sub
and
scas
jle
sub
fwait
lahf
push
and
pop
icebp
adc
(bad)
sbb
pop
sar
jo
jmp
jb
loope
sbb
in
sub
cdq
shl
dec
mov
scas
sahf
stos
push
and
test
(bad)
cmp
cwde
rcr
pop
xchg
push
test
dec
jb
xchg
xor
test
int
(bad)
mov
inc
rcl
push
xor
and
out
mov
adc
dec
std
cmp
push
loopne
and
stos
xchg
jge
imul
xor
pop
xchg
loopne
push
loope
dec
mov
test
in
mov
dec
retf
pop
shr
mul
fs
sahf
jp
out
aad
pop
cmp
imul
loop
popa
stos
fldcw
div
jmp
lods
jmp
fcomp
lahf
icebp
inc
fnstcw
pop
inc
(bad)
jno
mov
daa
cmp
and
cld
cdq
mov
popf
jle
pop
into
push
(bad)
loope
pop
sahf
aaa
retf
dec
scas
and
cmps
or
int
jae
mov
inc
mov
mov
cmp
jae
fwait
cmc
ins
jae
mov
jae
xor
jae
outs
js
data16
mov
cwde
mov
push
cmp
cmc
rcl
popf
xor
xlat
outs
lods
add
data16
arpl
inc
cmp
and
jmp
inc
cmp
push
inc
inc
shl
shl
push
ror
ins
adc
(bad)
cli
popf
adc
ss
push
mov
mov
push
inc
pop
mov
in
icebp
loopne
das
ror
lahf
repz
mov
sbb
jo
xor
inc
repnz
movs
sbb
data16
popa
pop
and
(bad)
mov
shr
inc
jp
jp
xchg
lods
gs
pusha
imul
loop
xchg
retf
dec
push
push
sbb
sbb
dec
mov
mov
jbe
xchg
sub
cmps
test
ret
pop
inc
inc
in
or
jmp
and
xchg
add
sar
jnp
mov
ret
mov
xchg
nop
or
sub
ins
rcl
(bad)
lea
add
dec
pop
emms
jp
adc
loop
aad
cwde
cmp
or
xor
inc
sbb
mov
scas
add
dec
jge
movs
xchg
cmps
sub
out
xchg
push
(bad)
pop
sbb
(bad)
aad
or
mov
fdivp
mov
push
lahf
inc
popf
jno
into
movs
sub
jno
push
mul
popf
xor
ins
pusha
ret
out
cli
nop
pop
mov
jl
mov
mov
fcom
out
cmp
mov
mov
jecxz
test
sbb
sbb
mov
(bad)
not
inc
(bad)
jo
shr
jno
aad
cmp
add
mov
push
enter
lds
sbb
mov
cmp
pushf
out
call
jmp
dec
or
inc
jae
adc
adc
js
mov
pop
cmps
ja
sbb
cmp
xchg
cmp
int
inc
sbb
sti
push
outs
add
imul
daa
jno
(bad)
jae
lahf
aas
cmp
test
mov
pop
daa
add
clc
sbb
add
mul
jp
sbb
es
fucomi
mov
jle
push
sub
jne
jmp
adc
push
aaa
inc
rcl
scas
sar
in
aam
sub
sti
mov
retf
dec
cmps
pusha
pop
out
xlat
or
inc
std
xor
aam
rcr
lea
clc
jle
pop
jecxz
xor
mov
push
pop
xor
xchg
stos
push
sub
dec
scas
add
int3
cmp
push
or
or
cmc
leave
mov
add
in
repnz
xchg
outs
jne
fs
adc
stos
jle
inc
jns
repz
pop
pop
sbb
cwde
push
icebp
mov
aad
dec
and
jno
push
cdq
ficomp
es
sbb
test
dec
rcl
xor
sbb
dec
mov
mov
cld
pop
rcr
cwde
cmp
leave
cdq
pushf
jmp
add
stos
jmp
out
test
inc
or
cmps
adc
jno
jl
scas
jno
sub
xor
sbb
pop
mov
push
mov
not
sbb
cmp
push
cdq
in
mov
(bad)
push
outs
mov
add
dec
ds
div
and
pop
add
mov
inc
inc
pop
repz
push
das
dec
cmp
sub
xchg
xor
imul
add
(bad)
aad
mov
jle
dec
gs
push
aas
fwait
hlt
jmp
push
and
mov
inc
push
push
std
dec
mov
push
inc
xchg
push
pop
cmp
inc
jnp
sub
(bad)
push
test
imul
mov
repnz
idiv
scas
mov
imul
push
pop
into
adc
rol
push
mov
nop
jle
pop
js
adc
add
inc
mov
mov
pop
sub
xchg
(bad)
jne
repz
mov
pusha
xor
cdq
dec
dec
sbb
dec
cwde
dec
pop
lods
iret
sbb
fwait
outs
and
dec
pop
jp
sub
inc
xchg
mov
lods
mov
mov
sar
mov
xchg
movs
lds
les
jns
shl
push
inc
xchg
xchg
sbb
and
push
jb
xor
aad
jne
pop
mov
push
push
test
adc
mov
pop
adc
push
shr
in
loopne
mov
nop
stos
mov
cmp
dec
lods
add
xchg
sar
jmp
jne
imul
sub
ficom
add
adc
sbb
dec
jnp
je
adc
dec
out
repnz
pop
les
mov
xor
mov
cwde
cmps
std
mov
not
jmp
mov
xchg
push
call
cmp
out
push
add
out
out
sbb
inc
lahf
or
mov
bound
xor
scas
pop
mov
push
jne
xor
xchg
sub
cld
pop
test
xchg
pop
test
and
(bad)
idiv
push
xor
stc
test
sbb
jmp
sbb
fiadd
cmovnp
shl
mov
jg
shr
aad
aad
out
fsubr
xchg
and
bound
loopne
inc
push
xchg
dec
jecxz
rcr
pop
xchg
ja
ficom
inc
and
add
pop
pop
lods
sub
test
out
pop
retf
out
jmp
push
aad
out
pushf
pop
daa
xchg
adc
lahf
jge
xlat
adc
inc
pop
addr16
or
lods
(bad)
ss
stos
test
stos
dec
xchg
(bad)
clc
ret
pop
jecxz
stos
ret
aad
cmp
(bad)
mov
ret
and
das
out
enter
cmp
dec
pusha
pop
push
mov
sbb
adc
mov
or
addr16
loopne
ins
add
out
dec
ins
inc
pop
push
test
xor
mov
push
xchg
dec
neg
sub
ss
imul
test
ret
(bad)
inc
dec
in
jns
fadd
cmp
ins
test
retf
inc
push
mov
lock
jg
mov
out
test
shl
or
ret
or
dec
sbb
adc
je
jne
and
dec
adc
mov
dec
pop
sbb
jmp
dec
mov
sbb
dec
pop
or
sub
xlat
aaa
jecxz
mov
mov
inc
and
or
dec
mov
push
bound
mov
aas
mov
mov
xchg
rol
mov
fldlg2
nop
inc
dec
or
mov
cmp
fsubr
mov
push
sub
sar
xchg
mov
and
add
lahf
out
aad
dec
fdiv
push
movs
icebp
and
sbb
stos
imul
or
cmp
pop
fcmovu
mov
lea
les
dec
ret
rol
pusha
sub
sahf
pop
push
mov
mov
in
sbb
cmc
sub
jb
xchg
idiv
push
cmp
sbb
mov
rcr
push
cmp
inc
sbb
fsubr
out
daa
aas
cmp
push
adc
nop
sbb
gs
ins
inc
and
in
mov
mov
shl
add
cmp
add
icebp
sub
ret
xchg
data16
dec
jl
(bad)
cli
or
push
adc
dec
lods
push
iret
jo
jae
loop
test
in
mov
(bad)
mov
test
pop
(bad)
rcr
sbb
ret
int
adc
push
push
jns
mov
out
jmp
push
dec
mov
test
xchg
out
rcr
addr16
mov
adc
inc
dec
les
dec
mov
loope
jae
jbe
shl
gs
inc
sub
lods
sbb
clc
mov
dec
ins
lock
scas
fild
xchg
inc
cmp
cmp
scas
data16
cdq
test
lods
add
inc
imul
sub
stc
adc
adc
call
pop
mov
cwde
cdq
add
xchg
fisttp
jge
xor
ror
cmps
popa
jns
mov
dec
test
int3
sbb
inc
jbe
xchg
cmp
dec
or
out
mov
cs
xchg
pop
mov
and
xchg
outs
repnz
cs
icebp
je
inc
cdq
sbb
daa
in
sub
sbb
jmp
pop
call
or
imul
popf
(bad)
ret
out
lods
and
mov
je
jl
mov
adc
(bad)
out
in
cmp
icebp
jle
and
push
outs
push
movs
cdq
xor
mov
enter
push
sbb
dec
imul
jbe
xor
mov
stos
outs
cmc
enter
jge
add
pop
inc
xlat
push
or
push
mov
ret
std
add
or
sahf
cdq
mov
int3
mov
jp
jg
mov
cmps
cdq
inc
mov
aam
jae
pop
jmp
or
leave
inc
ins
jnp
add
or
(bad)
jg
mov
cwde
inc
fs
fwait
xchg
or
(bad)
sti
icebp
mov
and
cmp
in
or
jns
popf
dec
pop
add
mov
cmp
sti
ror
jnp
xor
sbb
push
lock
sti
mov
push
xchg
mov
out
leave
scas
cs
pop
dec
mov
sub
pop
je
xchg
hlt
leave
dec
(bad)
jb
pop
jecxz
jge
add
sub
sbb
fs
adc
push
pop
loope
out
fcmovnu
jmp
mov
cld
nop
cmp
jecxz
ss
xor
inc
dec
cmp
stc
jecxz
out
add
add
push
lds
dec
outs
xor
ins
bound
cmps
arpl
js
jo
add
bound
popf
ds
popf
xchg
jge
retf
lds
and
xchg
out
loop
movs
sar
or
ds
dec
xor
push
mov
jmp
iret
loop
xor
mov
iret
fdivr
add
(bad)
out
cmp
sbb
mov
loop
lea
dec
xor
leave
cld
sub
loop
lods
rol
ins
cmp
fs
in
int
fdivp
mov
rol
dec
push
and
cmp
ficomp
stc
lods
xor
and
ret
call
das
shr
hlt
fnstenv
mov
or
push
add
mov
push
mov
mov
adc
hlt
and
lea
mov
mov
daa
sti
and
xchg
jle
movs
cmp
enter
es
xchg
mov
ds
jecxz
jb
daa
fmul
or
mov
ret
sub
mov
or
bound
cmp
fistp
pop
std
adc
dec
popa
test
inc
clc
setne
dec
adc
mov
mov
rol
sub
or
lahf
retf
out
clc
fsub
xor
xchg
adc
mov
pop
mov
push
outs
add
outs
cli
push
jnp
pop
xchg
add
or
daa
mov
aam
sbb
jnp
nop
mov
mov
sbb
and
jmp
push
jecxz
dec
dec
inc
mov
pop
inc
xchg
sub
pusha
push
dec
cli
in
dec
xchg
pushf
xchg
pop
mov
cmp
ror
xchg
mov
test
fs
outs
call
xor
push
sbb
pop
or
adc
sub
imul
mov
retf
inc
dec
retf
movs
ficomp
jnp
sti
in
jecxz
mov
and
mov
loope
ret
aas
cld
lds
inc
pop
fstp
int
arpl
jl
push
rcr
mov
add
(bad)
jb
out
(bad)
xor
es
mov
jecxz
test
loope
test
sbb
or
adc
jge
in
dec
mov
mov
pop
int3
(bad)
(bad)
cmp
xchg
pop
dec
mov
fstp
dec
and
lahf
outs
sub
sbb
mov
cmp
xor
mov
in
dec
loope
mov
loop
mov
bound
loopne
pop
imul
mov
into
cmp
jmp
fwait
loop
iret
sub
loope
mov
inc
dec
push
push
rol
sub
inc
ret
int3
mov
es
sbb
jne
into
ret
(bad)
(bad)
fild
add
repz
call
mov
cmps
or
in
fistp
push
xlat
test
pop
les
pop
shl
jmp
mov
fist
xchg
inc
cmp
xchg
rcr
cs
ins
mov
jecxz
sub
push
mov
ins
shr
repz
mov
pop
xor
add
test
ret
mov
lods
and
stos
fist
adc
(bad)
test
xchg
xchg
gs
lea
adc
cmp
cdq
pusha
push
aam
les
cld
xor
mov
mov
mov
adc
aad
imul
push
inc
adc
iret
pop
pusha
ja
xchg
sub
push
sbb
xor
test
xchg
arpl
xchg
sub
stos
mov
adc
jge
scas
fcmovne
xchg
int
xor
pop
sub
xchg
or
mov
cwde
cmovp
retf
fcom
xchg
dec
cmp
test
push
je
ins
push
retf
in
push
sub
mov
mov
xchg
mov
int
call
and
fninit
sub
push
in
cmp
dec
jp
inc
mov
movs
loop
into
inc
pop
iret
in
call
fucom
xchg
nop
test
retf
xor
inc
iret
jge
sti
dec
or
aas
or
lahf
dec
xor
and
inc
cli
enter
xchg
mov
sti
cdq
adc
jmp
cmc
mov
fsub
and
mov
and
cmps
push
(bad)
push
(bad)
jne
xor
lods
test
or
sub
adc
mov
retf
je
xor
cmp
sub
repnz
pop
mul
sbb
aad
cmp
mov
(bad)
and
repnz
inc
shl
lods
mov
sub
shl
stos
shl
repz
and
push
cmps
or
in
mov
xchg
sbb
imul
or
xchg
jo
fldcw
dec
dec
dec
or
xor
and
repnz
add
aam
or
jb
sbb
push
xor
push
push
lahf
(bad)
clc
push
pop
and
jbe
sar
dec
ss
adc
sub
cmp
call
mov
test
mov
adc
cld
xchg
mov
add
out
cmc
xor
or
sub
ret
retf
cli
push
and
repz
sbb
sti
das
mov
cli
adc
stc
mov
fidiv
jl
fwait
and
xor
sti
sti
mov
xchg
inc
jb
aas
ins
scas
pop
xchg
pop
mov
mov
push
adc
das
fidiv
arpl
add
outs
shr
data16
mov
push
lea
fwait
inc
retf
xor
shr
or
or
(bad)
aam
sbb
inc
mov
push
ins
or
xor
loope
gs
pushf
or
mov
ds
ss
cmc
sti
pop
jecxz
pop
push
scas
xlat
fild
in
inc
xchg
sub
inc
hlt
and
xor
div
jns
xor
repz
dec
repnz
gs
je
add
adc
aam
dec
fidiv
or
movs
mov
mov
shl
loop
pop
mov
outs
sbb
add
jp
sbb
ds
add
fidivr
(bad)
(bad)
nop
push
jo
xor
inc
push
ins
cmp
out
es
arpl
fucomip
fdivr
push
and
into
ds
sar
sub
mov
pop
(bad)
in
mov
out
push
loop
xorps
imul
jb
lods
sbb
adc
cs
dec
xor
hlt
shl
ins
lahf
jmp
inc
mov
cwde
dec
(bad)
or
and
jmp
je
ret
scas
xchg
mov
inc
push
ret
pop
cmp
jmp
sbb
out
in
in
loope
pop
push
mov
stc
ret
ins
es
dec
retf
fisttp
sub
jae
call
push
push
lock
and
aaa
xchg
push
out
stos
xchg
out
cmp
mov
enter
ins
or
in
mov
pop
and
in
or
stos
iret
outs
fs
sbb
push
inc
mov
aas
push
inc
ret
sahf
outs
jns
mov
in
adc
test
jb
das
mov
gs
or
addr16
jge
(bad)
mov
dec
nop
ins
test
or
fsub
push
aam
addr16
sti
xchg
movs
adc
xor
sub
fidivr
int
mov
aad
ds
jl
mov
xchg
push
gs
mov
jnp
(bad)
jge
frstor
sahf
xor
ins
add
xor
stc
mov
cmc
xchg
js
ss
sbb
ror
ss
inc
clc
shl
mov
sbb
xor
scas
xchg
mov
aad
mov
sub
jbe
test
std
repnz
mov
dec
test
xlat
xor
dec
(bad)
loop
push
adc
loopne
in
icebp
sbb
xchg
cld
or
call
push
and
aas
push
xchg
mul
lock
test
or
push
retf
mov
aad
retf
dec
sbb
icebp
js
in
xor
adc
and
sbb
add
dec
inc
push
sub
popa
ins
mov
std
shl
or
mov
mov
sub
jae
add
outs
xchg
into
mov
aam
les
gs
push
jns
mov
and
push
ss
mov
push
das
mov
pop
js
jecxz
cmp
leave
(bad)
imul
jg
out
repz
push
and
add
xchg
sub
sar
xchg
inc
add
stos
inc
mov
jne
cmp
xor
iret
icebp
cmc
or
mov
nop
pop
mov
mov
inc
dec
in
jne
inc
ret
loop
daa
pop
jecxz
lods
stos
mov
stc
shr
and
jb
fdiv
mov
sbb
mov
cmp
enter
push
inc
sbb
fistp
pop
rol
push
jle
repz
fisttp
xor
adc
repz
call
pop
outs
sub
sbb
sub
mov
inc
fs
push
jnp
xchg
add
(bad)
movs
push
js
jecxz
sbb
aaa
jns
es
test
ror
repz
push
(bad)
idiv
xchg
adc
inc
cmp
js
shl
and
push
inc
bound
sbb
test
call
sbb
and
pop
ja
fisttp
out
inc
pushf
xchg
push
sbb
fwait
cmp
pushf
xchg
jnp
and
mov
mov
in
repnz
dec
add
test
pusha
icebp
mov
xchg
ins
adc
push
push
iret
mov
cmc
sbb
call
sar
sub
add
sbb
xchg
push
lock
mov
mov
mov
pop
cmp
pop
sbb
call
cmc
call
inc
shl
dec
and
dec
sar
cs
push
adc
movs
sub
ins
les
push
jb
(bad)
stos
xchg
out
data16
push
repnz
inc
sbb
rcl
push
loop
push
cmp
pop
sbb
imul
sbb
push
jae
imul
mov
sti
(bad)
(bad)
push
neg
inc
mov
int3
in
(bad)
retf
lods
out
xchg
push
adc
sti
jmp
jb
dec
cmp
jmp
dec
xchg
jo
inc
in
imul
fisub
repz
lods
mov
inc
sub
fiadd
stc
push
cld
pop
scas
(bad)
or
sti
iret
adc
bound
in
(bad)
mov
stos
mov
imul
sbb
cmps
jno
sbb
lock
and
adc
jmp
shl
shr
test
pop
cmp
int
and
or
clc
in
sar
sub
shl
nop
lods
fbld
rcr
popa
dec
(bad)
(bad)
xchg
shl
ins
push
xor
mov
push
and
outs
popa
movs
inc
mov
stos
popf
fdivr
cmp
icebp
popa
ja
shl
jl
and
cmps
(bad)
pop
mov
add
rcl
test
pop
and
lods
push
test
ds
or
in
and
mov
push
mul
enter
sub
ret
fld
pop
pop
movq
dec
sub
or
loope
mov
and
fstp
inc
xor
adc
or
xchg
or
fmul
lea
mov
lea
sub
es
mov
les
(bad)
adc
bound
jge
sub
fistp
jp
ret
push
push
dec
inc
sti
mul
inc
sti
arpl
pop
jmp
cwde
icebp
adc
jmp
sub
xchg
jae
jp
es
add
aaa
out
pop
inc
es
push
fs
fmul
adc
mov
xor
dec
mov
pop
mov
mov
adc
mov
jg
push
test
or
lock
mov
and
imul
mov
push
inc
ss
int
add
movs
push
sahf
fmul
dec
(bad)
and
mov
jmp
jb
xchg
(bad)
dec
lahf
ds
arpl
bound
popf
les
adc
data16
sbb
lods
jae
sub
adc
aaa
xor
test
adc
xlat
dec
lds
nop
data16
fwait
cs
and
dec
in
jmp
nop
sub
mov
out
lods
clc
fisttp
sahf
push
ret
or
cmc
cmc
inc
in
dec
mov
ins
sar
and
fimul
cmp
(bad)
mov
cmp
(bad)
sub
jl
imul
mov
jl
push
mov
cmp
pop
mov
call
cwde
inc
sbb
and
imul
sbb
pop
mov
fdivrp
aas
mov
xchg
aaa
lods
xchg
cmp
call
xor
xchg
adc
push
and
push
jmp
aad
push
popf
repz
in
inc
mov
lahf
sub
(bad)
jno
xchg
jp
mov
mov
jnp
push
add
das
out
dec
fadd
pop
(bad)
cmps
int
scas
retf
mov
fisubr
test
xor
jne
add
add
cdq
repz
(bad)
out
push
mov
jmp
mov
mov
cmps
cs
jne
mov
mov
inc
cmp
pop
or
in
in
ins
pop
pop
push
mov
shl
fucomip
jnp
test
leave
pop
ins
dec
mov
in
xchg
pop
iret
addr16
cld
fsubr
repz
in
xchg
adc
and
xor
inc
adc
sub
aas
fidiv
jae
lods
cmp
outs
sbb
pop
push
dec
shl
out
in
mov
fisub
shr
out
add
pop
mov
push
out
push
cs
pop
and
fist
daa
jne
aam
xor
push
test
sbb
out
lock
iret
(bad)
xor
test
mov
mov
cmp
jns
xchg
and
leave
cmps
dec
jne
je
test
clc
sbb
dec
or
fld
and
aaa
cmps
xor
retf
ds
inc
rcr
xor
push
rcr
cmps
inc
xor
icebp
xchg
fcom
inc
clc
enter
cmp
popa
in
repnz
scas
jg
shl
cdq
push
sbb
push
iret
dec
pop
jae
fiadd
retf
push
mov
push
test
aad
lea
cmp
cmp
popa
(bad)
jl
bound
mov
test
jp
adc
sub
mov
inc
xor
scas
into
pop
push
out
jg
shl
pop
stos
nop
add
sub
daa
movs
mov
add
push
adc
inc
ret
add
repnz
push
popa
jg
sub
pop
mov
movs
mov
mov
cmp
pusha
ins
stos
fdiv
push
data16
in
push
mov
jmp
jae
test
mov
sbb
int3
not
fistp
fmul
bound
adc
dec
and
sahf
push
stc
dec
sar
lock
imul
enter
mov
xor
ja
or
lock
pop
adc
mov
repnz
xor
jecxz
scas
out
pop
mul
ds
retf
movs
cmp
xchg
mov
push
loope
scas
loope
loopne
in
inc
and
fcom
adc
sub
cld
ja
mov
sub
or
mov
repz
mov
test
mov
hlt
dec
fdiv
js
mov
jo
inc
jb
sbb
mov
sar
fidiv
inc
push
test
and
mov
outs
mov
or
test
pop
jmp
fisttp
cli
jmp
adc
and
cdq
scas
xor
or
icebp
cs
jl
popf
adc
call
mov
outs
inc
aas
sub
ds
push
mov
push
push
sahf
and
jo
xchg
add
adc
imul
aam
mov
pop
jmp
ret
adc
pop
pop
jno
cmc
sti
xor
aad
dec
inc
out
push
or
and
pop
scas
mov
in
mov
mov
(bad)
pop
pop
mov
sbb
test
or
cld
pop
lea
pop
dec
jle
lods
cmp
mov
dec
in
dec
xor
ss
pop
iret
(bad)
in
or
shufps
aad
es
lods
pushf
add
sub
jmp
push
fld
mov
mov
lods
cli
outs
movs
movd
clc
in
mov
inc
loope
xor
add
dec
jmp
fdivr
(bad)
call
test
cmp
xchg
xor
popf
sbb
div
jo
stos
inc
pop
mov
or
pop
jg
std
hlt
int
int3
retf
lods
dec
xor
jno
adc
pop
lock
mov
mov
mov
push
(bad)
mov
into
retf
rcr
cld
call
cmp
xchg
(bad)
dec
icebp
call
and
inc
push
adc
and
(bad)
and
loope
cmp
aad
sar
add
sub
add
movs
jle
in
daa
fs
gs
jge
add
xor
jle
les
les
hlt
add
std
and
mov
rcl
cmc
xor
jp
outs
push
xor
dec
pusha
imul
jo
outs
and
popf
inc
and
inc
mov
mov
jbe
cmps
sub
push
pusha
sahf
lods
adc
inc
inc
inc
mov
xor
mov
shr
xor
xchg
loope
aas
push
add
iret
pop
xor
jno
in
sbb
popa
dec
bound
pop
inc
leave
jno
dec
jecxz
shr
mov
cwde
movs
aaa
push
retf
es
xchg
sbb
in
popa
cwde
mov
int
retf
xchg
mov
add
bound
(bad)
push
push
fstp
xchg
leave
xchg
ficomp
fs
or
or
ror
mov
pop
and
rcl
ss
popa
inc
dec
shr
jno
adc
or
(bad)
pop
dec
adc
sbb
pop
mov
ins
push
pop
sub
fstp
shl
sbb
xor
xchg
add
std
push
or
es
xchg
fdivr
lods
out
xor
fisubr
nop
sbb
pushf
sbb
xor
test
or
and
call
dec
xchg
test
ret
ret
(bad)
test
push
dec
sbb
hlt
in
neg
cmp
(bad)
mov
js
sub
mov
xchg
mov
inc
rcl
sbb
mov
scas
enter
retf
add
arpl
stc
aam
aaa
out
out
sbb
pop
out
test
loop
mov
pop
loope
jmp
cmp
aaa
jge
shr
lahf
mov
cmps
shl
jle
movs
(bad)
(bad)
and
fisttp
addr16
dec
add
stos
jmp
mov
jne
or
xchg
fistp
sbb
jns
push
inc
rol
pop
and
ror
add
(bad)
cli
ins
jae
out
mov
adc
in
aam
movs
push
(bad)
clc
(bad)
ins
bswap
ret
push
xchg
fldcw
std
shl
inc
icebp
sti
aad
lahf
sbb
sub
sbb
mov
sbb
pop
cmp
ja
je
cmps
xchg
and
cld
add
test
scas
scas
cmp
sbb
sbb
dec
push
jle
and
cmp
out
js
or
jns
xlat
dec
inc
jle
sub
cmp
pop
sbb
inc
cld
(bad)
ins
ficomp
push
mov
sahf
sbb
movs
movs
(bad)
dec
cwde
push
push
rol
fwait
dec
push
jo
cmovs
xchg
ficomp
mov
dec
aad
mov
aas
into
mov
jl
xchg
cmp
cli
jbe
jmp
jmp
mov
mov
daa
jecxz
popa
and
jmp
loope
mov
cmp
dec
call
mov
das
jg
sub
push
dec
push
ins
mov
jmp
test
outs
cmp
scas
sbb
test
int3
adc
pop
rol
mov
test
ja
and
sub
xlat
sbb
or
movs
pop
add
outs
mov
pop
retf
cmp
add
movs
lods
sub
cld
jb
or
push
aas
inc
cdq
popa
xor
in
and
in
loopne
loopne
fnstsw
sbb
xchg
loope
dec
movs
inc
jmp
cmp
xchg
cli
pop
adc
loope
mov
mov
push
cmps
retf
adc
sbb
dec
jae
pushf
push
and
pop
xor
retf
in
inc
stc
sti
jge
mov
or
sbb
fnstsw
hlt
mov
addr16
nop
mov
inc
push
push
test
or
sub
ror
adc
adc
fs
call
mov
nop
add
cmp
pop
sub
and
mov
enter
mov
scas
(bad)
mov
cmp
and
cdq
(bad)
pop
not
movs
and
lods
lods
(bad)
sub
jmp
add
imul
jge
popf
sbb
jns
ins
mov
or
cmp
push
or
fdiv
mov
and
adc
dec
add
adc
pusha
loope
jmp
pop
xor
pop
aaa
(bad)
and
push
pop
push
xchg
movs
and
mov
stos
retf
sti
pop
push
adc
sbb
rol
mov
and
dec
movs
mov
mov
xor
cs
mov
popa
jle
xchg
sub
addr16
repnz
pop
pushf
call
sbb
mov
mov
sub
lds
and
scas
in
dec
push
cmp
outs
(bad)
or
pop
cmp
and
mov
mov
cmp
or
gs
push
xor
xor
cdq
cdq
xor
in
loopne
int3
jmp
addr16
add
dec
ins
fist
add
lea
mov
sbb
pop
movzx
xor
gs
and
mov
add
mov
stos
mov
out
jne
daa
add
pop
push
dec
std
add
xchg
pop
ds
and
movs
rcr
rol
and
or
adc
sbb
lea
sbb
pop
xchg
sub
cmp
repnz
repz
push
push
pop
cmp
inc
push
mov
push
pop
ret
retf
push
cmp
push
cmp
or
mov
mov
and
mov
mov
add
stc
test
out
inc
imul
or
or
sbb
call
je
and
std
xor
rcr
push
add
hlt
xor
add
sbb
and
loop
(bad)
in
jnp
jb
int3
jns
cwde
pop
mov
mov
pop
imul
mov
test
ret
out
(bad)
push
mov
jecxz
jbe
mov
fist
outs
fsub
dec
gs
test
adc
push
adc
into
test
(bad)
mov
mov
xor
(bad)
(bad)
ds
rcl
sub
push
mov
mov
lahf
xchg
clc
int3
or
call
mov
xor
jl
cmp
pop
sar
pop
dec
xchg
xchg
mov
arpl
stos
sbb
jne
sbb
sbb
arpl
arpl
(bad)
sub
inc
push
mov
and
mov
push
push
clc
pop
push
xor
xchg
jmp
mul
int3
das
dec
or
cli
scas
mov
out
push
pop
pop
arpl
aad
aam
jp
ss
xchg
push
add
test
stos
push
lock
neg
xor
cmp
loope
jmp
mov
inc
xchg
arpl
out
dec
jmp
mov
rcl
ja
lds
jno
pop
add
aad
fild
xor
les
sbb
lds
shl
out
stos
mov
lods
adc
cmp
xlat
cli
mov
pop
push
imul
(bad)
jge
outs
lds
aaa
(bad)
dec
sub
jmp
jne
xor
clc
leave
jmp
jo
imul
in
push
mov
xor
and
xor
pop
iret
ss
cmp
xchg
stos
pop
ret
jo
inc
push
inc
jge
and
popf
ror
adc
sahf
(bad)
aas
pusha
mov
pop
cs
mov
sbb
mov
aam
icebp
js
mov
and
aam
xor
adc
test
std
cmp
sar
movs
sbb
xor
call
test
xchg
pslld
sbb
adc
jb
cmp
and
cdq
and
sub
pop
ss
dec
mov
je
dec
jns
scas
pop
mov
inc
xchg
cmps
cmp
mov
push
in
shr
cdq
add
aaa
mulps
daa
mov
in
fcomp
pop
xchg
mov
adc
mov
int
dec
jmp
movs
cmps
mov
adc
in
mov
inc
push
jo
aam
inc
and
dec
xor
or
ja
inc
das
xor
int
loope
ror
int
jnp
mov
or
push
fidiv
aaa
scas
xor
xchg
xchg
pop
pop
push
fstp
add
mov
iret
push
adc
pop
int
cmp
xchg
mov
add
pusha
call
pop
cmp
into
or
jo
(bad)
fdiv
shl
or
mov
sub
fnstenv
js
sub
inc
pop
push
test
pop
xor
icebp
pushf
std
repz
or
imul
ins
inc
cmc
ja
in
dec
imul
push
jle
into
pop
mov
and
cmp
out
mov
popa
(bad)
loopne
stos
adc
movups
pop
push
and
in
in
xchg
push
lock
jno
shl
xchg
lahf
mov
daa
sub
mov
xor
scas
test
or
or
xor
adc
pop
(bad)
(bad)
in
mov
sbb
ror
loop
sbb
jae
imul
mov
mov
inc
fs
imul
cwde
sbb
adc
scas
sbb
dec
inc
repnz
imul
sbb
neg
ins
jmp
push
in
int
cmp
(bad)
(bad)
loop
cmps
mov
cmp
loope
test
js
push
cmp
push
das
pop
imul
scas
xchg
imul
mov
in
std
or
std
int
dec
movs
int3
sbb
out
and
repz
mov
call
std
test
cmp
dec
xchg
rcr
ins
dec
or
dec
jae
or
xchg
out
xchg
fidivr
jns
into
cli
cmp
add
fsub
push
pop
repnz
inc
pop
stos
xchg
pop
and
lea
inc
pop
jae
pop
imul
or
rcr
dec
push
cmps
loope
dec
jae
xchg
add
jecxz
ins
inc
jae
les
push
lea
call
sti
mov
loope
jmp
mov
add
and
into
(bad)
mov
cmp
dec
dec
sti
mov
jmp
pop
loop
je
pop
push
cmc
mov
imul
div
cmp
inc
std
imul
push
mov
sysenter
dec
in
mov
repnz
out
xchg
scas
loopne
bound
std
push
jge
out
push
inc
scas
or
pop
clc
adc
test
rol
jmp
push
mov
(bad)
test
cmp
pusha
into
into
scas
scas
sahf
ror
add
loope
sbb
xchg
push
stos
out
(bad)
lods
leave
sahf
xor
leave
inc
mov
into
shr
or
jl
rol
add
xlat
or
inc
cmp
add
(bad)
or
mov
repnz
mov
mov
mov
xchg
outs
popa
cmp
jbe
ins
and
xchg
xor
add
pop
fild
cmps
aas
or
push
movs
add
retf
sbb
dec
or
sub
xchg
scas
repnz
mov
add
mov
fstp
or
inc
js
and
pop
js
cmc
mov
sub
imul
mov
mov
fidiv
mov
dec
mov
gs
push
ss
dec
cli
push
xor
repz
mov
sub
xchg
outs
nop
ret
stos
pop
inc
push
mov
or
push
stos
mov
int3
inc
or
ins
and
sub
add
mov
ds
inc
mov
and
xor
adc
sub
jmp
das
in
popa
push
xchg
jb
jp
adc
bt
in
cmp
in
jmp
test
xchg
sbb
xchg
ss
jmp
hlt
jo
sti
push
mov
xor
mov
cmps
mov
loop
repnz
outs
cmps
cld
loopne
pushf
mov
retf
aam
cmp
enter
rcr
ficom
add
in
stos
mov
lods
push
jnp
in
jnp
bound
mov
dec
add
jbe
push
rol
cmps
in
scas
jbe
lahf
fpatan
mov
dec
ja
or
(bad)
dec
sbb
jns
add
ins
in
pop
dec
iret
daa
sub
fdivr
push
(bad)
bound
jmp
sbb
in
int
mov
xchg
inc
ds
mov
mov
adc
sbb
or
ret
xor
lea
xchg
pop
inc
sub
mov
ins
rcl
inc
leave
leave
inc
adc
mov
and
repnz
inc
cmp
ins
lods
shl
rcl
ror
add
dec
sbb
push
test
jg
adc
(bad)
push
pop
jg
cs
cli
cmc
icebp
sbb
jne
push
push
add
sti
adc
popf
test
icebp
sub
pusha
pop
xor
test
mov
xchg
in
add
mov
mov
rol
imul
mov
xchg
lods
jae
out
ins
cmc
sbb
out
fsub
sar
test
inc
xchg
(bad)
xchg
xchg
out
test
ror
cmp
lods
add
xor
lock
sub
xor
dec
sbb
pop
jb
aad
push
pop
adc
stos
imul
cmp
xchg
xchg
jle
jl
mov
lock
daa
div
fcmovu
adc
ss
inc
(bad)
nop
or
mov
xlat
mov
stos
dec
out
push
sbb
lahf
xchg
(bad)
sbb
or
shr
push
mov
push
jbe
add
or
push
stos
mov
cmp
nop
rcl
mov
add
mov
and
jmp
scas
mov
scas
adc
jp
out
fdivr
or
and
test
sbb
jp
push
mov
jl
jne
aaa
les
pop
push
mov
clc
shr
and
in
aam
push
repnz
outs
xlat
jae
push
leave
mov
js
sbb
imul
in
repz
dec
pop
push
int3
push
add
cmc
pop
arpl
inc
icebp
xlat
cli
pop
jl
mov
inc
dec
(bad)
aad
enter
mov
and
loop
xchg
lea
sbb
inc
pop
in
mov
loopne
mov
push
repz
add
mov
and
int
xchg
cmp
cmp
in
jb
jle
xchg
jae
retf
les
(bad)
(bad)
je
int3
or
mov
dec
and
cdq
inc
aas
(bad)
daa
or
push
cmp
add
and
pop
and
push
mov
sub
push
mov
pop
popf
dec
(bad)
sub
pop
imul
jae
ret
xor
out
adc
int3
xchg
stos
mov
mov
or
mov
ins
pop
adc
test
xor
(bad)
jl
imul
jg
sbb
mov
cli
xchg
das
cmp
adc
mov
je
cdq
outs
jno
loopne
jbe
sbb
and
pushf
repz
mov
xor
jo
dec
pop
xlat
adc
push
arpl
popf
fldenv
(bad)
leave
imul
mov
mov
ds
sub
cmp
xor
mov
and
lidtd
pushf
pushf
jge
mov
inc
ins
pop
cmp
das
and
gs
cs
pop
push
dec
int
stos
mov
jg
jmp
mov
outs
aad
sub
mov
jge
mov
lods
xlat
mov
jne
add
xor
push
imul
adc
xchg
popa
add
dec
and
add
call
push
std
sub
(bad)
aaa
lahf
fs
cmp
inc
lea
cmp
pusha
pop
pop
mov
pop
cmp
in
icebp
imul
xchg
push
push
aas
nop
iret
movs
mov
repnz
out
adc
xor
jmp
mov
pop
nop
jns
jmp
shl
add
test
mov
jno
fadd
out
rol
or
xchg
push
lods
mov
push
daa
mov
ud2
fidiv
and
push
fidivr
add
add
cld
aad
cdq
movs
pop
push
dec
push
rol
adc
push
adc
cld
mov
mov
in
or
mov
jnp
inc
out
adc
cli
jge
adc
movs
aaa
fdivr
dec
iret
pushf
fadd
out
push
xchg
inc
push
scas
out
fadd
call
or
hlt
jp
jns
or
loope
pop
stos
mov
and
pushf
add
rcr
cdq
cwde
pop
into
cmp
jl
(bad)
test
mov
icebp
pop
bound
inc
mov
fst
push
mov
mov
stos
push
ja
pop
(bad)
push
data16
push
jl
call
cmps
out
outs
xchg
mov
imul
ret
cmp
int
push
fs
dec
dec
shr
cld
and
popa
inc
push
scas
cmp
int3
fstp
jb
clc
ret
cmp
and
cs
and
fsub
adc
cmp
dec
daa
cmps
cmp
fisub
pusha
jae
imul
fiadd
mov
div
stc
jne
sub
fwait
xchg
sub
fnstcw
jmp
add
loope
jecxz
jl
mov
call
mov
fsubp
or
fs
cmp
sbb
sbb
popf
cmp
xor
mov
fisub
and
cdq
pushf
dec
mov
jmp
ins
dec
int3
xor
mov
mov
jae
(bad)
(bad)
or
clc
add
push
int3
xchg
lea
scas
hlt
enter
movs
pop
jns
mov
stc
jmp
add
cmps
jb
pop
xor
je
push
add
(bad)
xchg
jo
nop
(bad)
mov
push
mov
xchg
inc
popa
add
lss
and
dec
ficom
retf
loopne
adc
sar
div
sbb
and
leave
or
dec
es
cmp
lds
sub
ret
ins
and
mov
jl
test
sub
ja
sub
lahf
cmp
lods
ret
push
loope
adc
int3
dec
pop
pop
mov
xlat
shl
push
xchg
push
adc
stos
jo
ror
mov
and
add
and
je
fcmove
xor
xlat
jns
scas
pushf
aam
cwde
dec
jmp
jno
adc
xchg
push
xchg
mov
fld
dec
ins
hlt
cmp
pushf
dec
jns
shl
lods
mov
add
add
mov
clc
mov
inc
or
sbb
call
call
and
xor
and
test
fld
adc
addr16
into
sbb
jg
pushf
add
sub
sti
add
jl
pop
mov
xor
scas
or
movs
inc
xor
lods
and
shl
repz
popf
pop
mov
test
ret
cmps
or
cmps
adc
sbb
adc
jle
xlat
jb
pop
in
loope
and
cli
aad
mov
rcl
or
mov
mov
pop
add
adc
cld
into
gs
loope
popf
dec
pop
sbb
mov
xchg
rcr
idiv
out
jle
icebp
adc
push
daa
data16
dec
js
out
dec
xor
popa
leave
stos
pop
leave
dec
mov
loop
in
fsubr
retf
inc
(bad)
in
inc
sub
mov
into
push
push
mov
fstp
shl
xchg
dec
outs
cld
mov
fisubr
cmc
mov
sbb
lock
mov
scas
dec
jno
lock
lea
mov
hlt
add
test
repz
jmp
add
xor
push
bswap
es
retf
push
lahf
stos
ja
lahf
test
(bad)
jb
sbb
fmul
inc
mov
mov
and
mov
cmp
pop
adc
stc
dec
xchg
xchg
push
push
jb
add
int
add
pop
mov
cmp
add
dec
inc
pop
sbb
add
sub
test
mov
in
cld
popf
out
push
mov
shr
iret
(bad)
dec
sbb
rcr
mov
stc
fwait
sub
sbb
ret
mov
ins
adc
pop
mov
int3
add
dec
xor
ror
repnz
cmp
inc
inc
ret
fcmovbe
retf
in
lahf
add
inc
or
test
cdq
push
movs
stc
xor
push
je
mov
cld
lock
cmp
data16
repz
xor
xchg
inc
mov
(bad)
mov
sbb
mov
in
imul
xlat
sbb
cwde
mov
jle
add
sbb
cmp
sti
push
jns
push
and
sbb
das
inc
sub
out
push
out
sbb
and
mov
test
jo
(bad)
sub
push
pop
adc
lock
and
icebp
cmp
out
add
mov
out
jg
mov
and
mov
pop
daa
jle
mov
jbe
shl
sub
xor
add
loopne
dec
jle
das
retf
call
sub
aam
sub
daa
mov
(bad)
fcomp
sub
(bad)
(bad)
sti
cmps
mov
mov
mov
mov
cld
jge
in
sbb
dec
sub
retf
mov
xlat
cmps
movs
aas
adc
cs
outs
dec
movs
adc
sub
pop
sbb
inc
outs
xor
jae
push
cmp
xor
xor
xlat
add
sub
cmps
shl
jo
or
push
dec
cmp
mov
push
addr16
hlt
mov
push
in
adc
add
pop
aad
ficom
jecxz
(bad)
add
jl
add
add
out
ja
push
mov
fst
movs
dec
cmp
jge
fsub
mov
push
push
and
(bad)
push
fdivr
data16
jae
pushf
xor
and
and
aam
inc
mov
cwde
lahf
pop
jmp
dec
out
or
pop
dec
dec
xor
mov
pusha
push
add
in
cmps
es
outs
sbb
jns
test
mov
push
xchg
popa
or
push
xlat
jae
or
xchg
mov
pmulhw
jns
fld
arpl
(bad)
std
out
and
add
out
mov
jmp
push
clc
(bad)
push
js
stos
and
mov
or
add
leave
pop
(bad)
dec
nop
push
lds
jmp
add
sar
nop
sub
test
or
dec
aas
pop
jnp
mov
mov
sbb
pop
out
jecxz
push
lds
xchg
mov
out
mov
stos
mov
shl
ret
sub
pop
xor
call
fcomp
cli
int3
(bad)
push
cli
jnp
sahf
cmp
mov
int
mov
mov
mov
ret
mov
cwde
(bad)
mov
xor
popf
jecxz
push
push
pop
ret
(bad)
into
push
jp
imul
adc
(bad)
pusha
out
sub
inc
xchg
div
loopne
out
xchg
mov
xchg
mov
sub
jne
push
lock
jp
gs
mov
daa
xor
(bad)
rol
xchg
push
jns
adc
pop
fucomi
mov
mov
push
xchg
lods
jo
mov
out
imul
pop
fwait
mov
or
push
dec
dec
push
pop
pop
into
jbe
or
jne
test
stc
fidiv
push
pop
(bad)
daa
aas
xchg
xchg
jg
(bad)
fcom
cmc
and
mov
stos
fld
and
jbe
adc
and
pushf
div
cmp
xchg
jo
jmp
aas
bswap
mov
int
sar
repz
add
loope
(bad)
jnp
stos
aaa
mov
xlat
test
cwde
and
hlt
outs
jo
rcl
cmp
jo
cmp
(bad)
jge
dec
loop
out
sbb
stos
outs
sbb
daa
test
out
shr
out
sahf
jo
and
push
pop
ja
jo
popf
aad
mov
inc
jb
sbb
cli
mov
push
fist
jo
mov
jge
cwde
push
mov
xor
lahf
and
aam
fwait
dec
mov
xchg
fstp
jmp
dec
call
add
xchg
test
mov
mov
cs
loop
pop
sbb
xchg
mov
lds
mov
xor
jae
mov
ret
mov
mov
add
cmp
outs
adc
xchg
pop
jo
jns
mov
sub
mov
retf
rol
inc
lea
mov
dec
daa
fnstcw
inc
xchg
or
(bad)
mov
cwde
add
push
mov
mov
lods
dec
fidiv
(bad)
sbb
xchg
loope
retf
(bad)
jmp
outs
jge
stos
add
ror
pinsrw
pop
addr16
mov
xor
mov
jmp
cwde
mov
out
mov
sub
or
push
mov
xchg
or
adc
inc
ret
sbb
xchg
data16
pop
pop
les
cmps
mov
add
gs
cmps
sbb
repz
and
mov
xor
inc
mov
fs
lods
mov
xlat
cmc
sbb
ss
sbb
outs
mov
dec
(bad)
fdivr
and
test
xor
ja
push
adc
jmp
mov
dec
jne
rol
add
jp
jo
inc
repz
in
xor
mov
enter
xchg
cmp
push
ins
sub
push
jo
cmp
repnz
lods
inc
(bad)
push
enter
mov
fdivr
mov
(bad)
imul
mov
sti
pop
shl
xchg
ds
repnz
adc
inc
imul
push
adc
push
jno
sub
pop
loope
imul
fist
jmp
dec
push
(bad)
repnz
ror
dec
outs
in
test
add
mov
sub
in
xor
push
neg
mov
xor
syscall
jns
imul
push
arpl
pcmpeqw
rcl
jo
xchg
in
pop
adc
sbb
out
and
dec
pop
inc
and
add
fwait
pop
mov
pop
push
ret
or
arpl
std
dec
push
pop
(bad)
out
add
push
les
mov
ret
ror
int
scas
out
jmp
dec
xlat
jne
sub
adc
aas
into
pushf
pop
rol
or
scas
jmp
inc
ret
mov
adc
daa
ins
mov
and
pusha
mov
pop
ret
and
and
mov
es
jbe
scas
xchg
rcr
outs
push
mov
push
mov
jnp
dec
adc
mov
xchg
push
cdq
shl
test
mov
push
jnp
out
das
cmps
es
mov
cmp
sub
push
sbb
test
mov
cdq
les
cli
adc
fwait
cmp
mov
lock
add
ret
jns
in
lea
popf
xchg
cli
outs
adc
stos
imul
mov
xchg
mov
aad
xchg
inc
dec
out
push
sub
cmp
jne
inc
push
jle
jge
cdq
jne
enter
push
je
sbb
(bad)
sti
in
push
jnp
push
inc
clc
mov
and
cdq
(bad)
add
scas
mov
xchg
iret
jae
jne
retf
aas
out
pop
arpl
ret
mov
jge
mov
jg
lods
test
div
clc
cmp
push
cmp
loope
outs
shl
fimul
rol
dec
clc
cmp
sbb
addr16
pop
adc
rcl
add
push
mov
cmp
xor
clc
imul
pop
cwde
sub
int
xor
dec
push
lds
div
ds
xor
cmp
adc
adc
sub
sar
xor
jb
xlat
movs
xor
jns
das
xchg
ds
sub
stos
out
es
ds
ds
ror
nop
dec
jmp
cmc
dec
iret
push
inc
lods
clc
jp
popa
sti
push
jg
cmp
imul
mov
push
das
jae
ss
clc
pop
jbe
jle
add
jnp
ins
shr
sub
pop
std
repnz
mov
push
jle
mov
inc
push
push
mov
mov
(bad)
xor
lea
cdq
mov
mov
fisubr
pop
cmp
fwait
pop
and
(bad)
sbb
adc
clc
cli
dec
mov
cmps
sbb
and
add
mov
cdq
and
aas
adc
leave
cmp
icebp
sbb
jg
mov
pop
jmp
pop
pop
or
imul
pusha
sbb
ss
fwait
lea
data16
(bad)
fwait
cs
loop
xchg
jp
xor
jns
retf
pop
inc
xor
bnd
mov
call
sub
sub
aaa
cli
sub
push
out
jmp
mov
cmp
adc
dec
xor
rol
in
add
mov
(bad)
aas
test
push
mov
stos
or
and
icebp
dec
pusha
add
sbb
xchg
ins
loope
(bad)
jecxz
ins
adc
dec
stos
lea
cmp
add
out
clc
sahf
repnz
stos
in
std
data16
mov
daa
aaa
das
sub
xchg
fincstp
add
(bad)
popa
cmp
sub
cmps
dec
sub
mov
sbb
mov
inc
push
sub
add
mov
push
scas
jg
jmp
xchg
test
dec
pop
pop
cmps
pushf
shl
pushf
(bad)
pop
or
fnstcw
inc
ja
add
pusha
push
and
or
sbb
xor
inc
stc
pop
test
inc
push
cmp
sub
pop
not
test
addr16
or
add
mov
nop
not
or
loop
je
push
add
pushf
xchg
push
and
dec
push
push
mov
xor
lds
daa
sbb
leave
cwde
rcl
jmp
xrelease
lds
or
push
lds
pusha
js
and
pop
in
xor
adc
cmp
gs
adc
addr16
jmp
sbb
gs
adc
movs
in
cmp
xchg
test
test
mov
push
rcl
aaa
inc
add
cmp
xchg
xchg
ss
jne
mov
fmul
push
(bad)
(bad)
int3
cdq
adc
je
jnp
test
adc
pop
push
gs
ds
dec
dec
test
push
and
je
cmps
pop
jo
cmps
fst
(bad)
out
call
mov
dec
pushf
adc
adc
inc
cmp
xchg
rol
jae
bound
in
xlat
sahf
inc
add
outs
jle
ss
inc
repnz
in
adc
leave
cmp
mov
(bad)
mov
retf
add
mov
lds
or
daa
push
xchg
js
shl
and
scas
in
aad
dec
es
xchg
cmp
sbb
or
js
push
jnp
daa
mov
mov
ja
lds
jle
fdivr
loope
mov
sub
mov
sub
cs
loopne
cmp
sub
sub
pop
fsubr
pop
xchg
jge
inc
aaa
add
fistp
ds
pop
cld
pop
cld
pop
and
jae
outs
dec
loope
sub
lahf
test
sti
jns
aad
push
lea
mov
cmc
lock
aaa
adc
cmp
frstor
shl
and
inc
adc
sti
(bad)
in
xor
jg
nop
cs
mov
mov
dec
pop
hlt
int
mov
pop
xor
xor
mul
lock
adc
movs
push
mov
lahf
fsub
mov
call
xchg
movs
fld
xchg
cmp
add
inc
jo
and
add
adc
adc
fidiv
inc
cmp
mov
loop
dec
inc
xor
xchg
cwde
iret
stos
iret
(bad)
sbb
dec
repz
movs
or
mov
cmc
lea
xor
pop
shl
aaa
scas
leave
ficomp
cmp
sub
jge
int
jecxz
pop
test
push
and
pusha
pop
rcr
adc
pop
push
cmp
push
call
push
jne
call
aaa
cli
addr16
jmp
lods
stos
fpatan
xor
call
xchg
(bad)
stc
mov
ret
scas
mov
aaa
in
mov
mov
stos
outs
call
inc
fist
push
ret
nop
and
movs
push
fsubr
sub
push
(bad)
cdq
push
je
xchg
and
adc
test
ins
xchg
jp
jns
inc
mov
mov
push
push
mov
jne
mov
inc
mov
mov
loop
lock
push
jle
jl
pushw
dec
jmp
sub
aas
repz
cli
push
lea
push
out
push
popf
mul
dec
sbb
jne
fptan
and
repnz
jecxz
push
lock
shr
jp
nop
cmp
fwait
paddw
jmp
sbb
dec
sub
std
mov
fsubr
mov
outs
push
jae
jecxz
(bad)
icebp
call
xor
cdq
lods
xchg
je
cwde
inc
fiadd
cs
xlat
inc
sub
rcr
or
dec
or
rcr
push
jmp
aam
loop
adc
dec
rcr
mov
cmp
or
neg
push
xchg
ins
inc
cmp
xchg
scas
mov
jae
sub
sbb
adc
mov
retf
aam
test
test
dec
fild
fisttp
(bad)
dec
mov
mov
ror
pop
sbb
jb
jg
inc
mov
adc
mov
call
push
outs
icebp
mov
jecxz
and
adc
jmp
popa
not
jp
stc
jg
jecxz
cli
ja
dec
fbld
sti
mov
leave
dec
sbb
ss
sbb
shl
gs
and
xlat
inc
push
pusha
fisub
jae
and
inc
in
fmul
cmps
loope
ds
xlat
shl
cmp
das
loopne
jb
sub
pop
out
jle
ficomp
mul
mov
lahf
mov
jmp
and
mov
push
bound
sbb
ret
jno
dec
loopne
dec
ja
ins
dec
mov
shr
fdivp
imul
adc
mov
retf
xlat
mov
stos
rol
ret
or
fwait
repz
dec
inc
in
cdq
mov
mov
and
xchg
jbe
cmp
es
push
popf
adc
or
aam
pop
(bad)
hlt
outs
jmp
push
stos
jge
jns
add
adc
or
xchg
xor
pop
dec
inc
push
sbb
jns
dec
fbld
popa
jns
pop
mov
xchg
stos
inc
fwait
xchg
in
dec
dec
inc
test
in
or
ja
clc
loop
inc
jne
mov
sub
loopne
and
or
popf
cli
cmp
jl
fwait
xchg
adc
push
push
and
test
das
out
cdq
(bad)
push
sub
dec
xor
or
cmp
dec
jb
and
inc
aaa
fcmove
pop
cli
stos
aas
imul
(bad)
ins
mov
cmps
xor
fld
repnz
fwait
adc
cdq
add
dec
stc
inc
scas
sti
mov
ret
fistp
or
and
push
push
daa
dec
loop
out
push
mov
dec
sbb
or
out
pop
cli
inc
pop
sub
add
xor
adc
mov
mov
cli
frstor
jnp
stos
mov
int3
loopne
das
sub
mov
aad
jbe
loop
mov
jmp
sub
shl
jbe
in
dec
add
(bad)
int3
pop
or
hlt
sbb
dec
adc
pop
fdiv
jmp
sti
mov
pop
jns
jl
xor
or
jbe
mov
mov
dec
jno
daa
retf
cmps
icebp
out
iret
repz
mov
inc
clc
xchg
or
lea
(bad)
popa
mov
inc
push
xor
mov
inc
sbb
arpl
int
int3
je
js
(bad)
out
loopne
xchg
inc
mov
xchg
xchg
and
ins
adc
and
jnp
and
dec
mov
loope
xor
enter
out
sbb
dec
in
cmp
xchg
call
xchg
bnd
ret
inc
rcr
and
xchg
push
clc
rcr
and
jns
pushf
clc
cs
dec
cmp
mov
fist
mov
(bad)
hlt
out
add
es
sbb
mov
inc
xchg
jl
pop
pop
mov
push
pop
movs
jns
out
loopne
fnstsw
or
mov
push
in
pop
and
fild
pop
leave
and
inc
imul
sahf
inc
div
sbb
mov
fisttp
mov
rol
jns
adc
pop
mov
(bad)
ins
xchg
retf
xor
std
fsub
push
sar
shl
sbb
add
xchg
int3
mov
mov
push
add
mov
outs
jmp
or
in
push
test
push
mov
sbb
mov
or
(bad)
out
(bad)
xchg
push
mov
inc
jae
rcr
call
(bad)
mov
sbb
cmp
cmp
cmp
mov
push
adc
lock
movs
jae
mov
mov
ja
les
sub
fs
pop
add
mov
mov
lds
loope
xchg
lds
xchg
scas
repnz
mov
fs
or
jne
fwait
mov
lock
xchg
fidiv
xor
pop
dec
mov
xchg
and
adc
mov
shl
js
push
fcomp
and
nop
mov
out
in
pop
fild
xchg
mov
or
mov
shl
push
push
imul
pusha
push
sub
jbe
popf
jae
(bad)
lea
jno
imul
xchg
mov
comiss
adc
push
ins
mov
rcr
imul
adc
fisub
dec
push
cmps
dec
add
aas
push
cdq
and
es
inc
mov
(bad)
jp
(bad)
(bad)
test
jo
(bad)
sub
jl
lods
dec
sub
movs
jmp
push
cmc
pop
retf
mov
mov
test
in
push
jecxz
dec
cld
dec
mov
add
add
or
pop
or
push
in
(bad)
push
mov
xlat
pop
call
into
mov
xchg
sub
and
mov
inc
je
cld
fild
mov
xor
mov
and
inc
or
xchg
mov
add
adc
jno
hlt
dec
push
xor
and
fwait
pop
xchg
pusha
xor
js
and
mov
sub
out
push
adc
dec
mov
mov
loope
pop
mov
call
arpl
and
(bad)
js
and
ret
ja
inc
cli
push
leave
cmp
or
dec
mov
mov
lods
imul
jns
js
int3
mov
mov
cmp
fistp
retf
pop
add
or
pop
push
push
imul
inc
jb
push
imul
fprem
jmp
mov
out
hlt
xor
xchg
jne
out
inc
sahf
lods
addr16
push
or
inc
les
jmp
push
jge
mov
and
(bad)
and
out
mov
xlat
fwait
jg
cmp
into
jmp
jge
(bad)
cmps
iret
sub
sbb
xchg
enter
push
sub
inc
mov
jg
sbb
int
int3
adc
lea
gs
popa
and
hlt
ret
inc
pop
pop
idiv
ret
mov
push
in
mov
ret
je
cmp
jne
fstp
in
cmc
aad
mov
lods
jo
int
push
rcl
ins
ins
in
push
icebp
in
in
js
and
es
cld
jb
cmp
daa
jnp
lods
cvtps2pd
xchg
(bad)
and
or
sub
fiadd
lods
dec
add
ja
div
je
xchg
repz
loope
ins
fild
bound
and
test
lods
mov
sbb
int3
jp
xor
pop
shl
out
jmp
add
mov
jns
sbb
sbb
(bad)
cli
sar
mov
mov
mov
or
add
fist
adc
push
pop
push
pop
mov
jmp
pop
scas
jnp
mov
jae
sbb
jns
mov
or
imul
mov
jmp
jecxz
sbb
sti
pop
stos
jmp
add
repz
mov
jmp
pop
or
mov
aad
sub
aam
xor
out
out
aam
mov
pop
pop
loopne
xchg
adc
aaa
sub
jb
or
or
arpl
imul
mov
cmp
in
repz
loop
pop
ret
das
sahf
xor
shr
mov
add
(bad)
ror
xchg
push
adc
in
cmp
sub
cmp
dec
(bad)
scas
test
xor
(bad)
in
repnz
pop
js
lds
ja
cwde
jg
mov
aas
sbb
adc
inc
adc
lds
(bad)
xor
xchg
int
jb
into
dec
aaa
popf
lea
(bad)
lods
fidivr
inc
bound
sbb
push
or
xor
inc
(bad)
ret
int3
aad
dec
pop
leave
ds
lods
jno
sbb
mov
daa
repnz
popa
pusha
sub
add
shr
cwde
test
clc
push
jg
movs
pop
adc
mov
xchg
push
aam
retf
(bad)
leave
adc
js
mov
xchg
pop
cs
dec
outs
daa
out
push
mov
not
fsubr
inc
jge
loopne
adc
dec
imul
mov
jmp
cdq
lods
(bad)
fwait
daa
ret
ins
push
mov
loopne
jle
rcr
push
inc
sub
xor
jl
mov
cmp
and
add
scas
ss
inc
mov
enter
mov
push
sub
test
push
adc
mov
sbb
movs
(bad)
cs
imul
fiadd
idiv
xchg
inc
mov
adc
into
fistp
fistp
leave
neg
js
pmovmskb
cmp
nop
ins
xor
test
sbb
cmp
ret
fwait
scas
rol
and
fstp
and
les
xor
fsub
push
test
(bad)
jae
mov
fnstenv
mov
or
adc
cli
loopne
mov
mov
mov
add
mov
es
and
cmc
jge
fwait
sbb
mov
xor
push
ret
adc
mov
(bad)
adc
xor
sbb
push
addr16
jmp
fwait
push
sub
out
fild
and
push
cli
pushf
mov
sti
push
sbb
jae
mov
mov
xor
or
push
or
int3
xor
in
shl
push
push
jb
out
xchg
xchg
and
jno
cmovbe
jnp
rol
jne
inc
movs
inc
loopne
leave
ins
rcr
loopne
ret
inc
hlt
shl
rep
push
mov
pop
scas
sbb
fdivp
enter
loope
leave
ins
ja
sub
or
bound
les
inc
out
dec
adc
(bad)
cld
lock
or
int
aas
loopne
push
in
push
adc
loop
push
cmp
lock
mov
mov
(bad)
ja
and
sbb
sub
jnp
retfw
mov
cmp
test
es
fstp
or
xor
ret
inc
ja
xlat
and
cmps
cmp
jmp
pop
jo
jp
call
adc
lods
jo
cmp
xchg
adc
mov
hlt
adc
jl
ret
mov
jne
xchg
push
in
mov
loop
(bad)
jle
aam
jns
mov
iret
mov
pop
loop
scas
cmc
cmp
and
repnz
xor
out
cmp
daa
add
ins
cmp
ret
enter
in
mov
jp
mov
or
cmp
repz
lods
and
fisub
cli
jae
ret
sub
(bad)
and
fdivr
xor
cmps
xchg
je
or
jns
(bad)
sub
sbb
loopne
cmc
popa
(bad)
nop
push
cmp
lock
stos
fisttp
mov
movs
sbb
daa
xor
pop
arpl
push
inc
outs
pop
retf
jnp
cmp
mov
adc
or
cmp
call
jl
jmp
sbb
xor
stos
push
pusha
js
adc
dec
and
add
mov
mov
fisubr
sbb
xlat
ret
ins
and
and
sub
pop
and
or
mov
mov
in
inc
hlt
inc
sbb
(bad)
xchg
inc
ins
xchg
or
xchg
movs
gs
fild
mov
call
jp
cmp
xchg
jg
push
adc
inc
dec
(bad)
leave
ror
in
cmc
shl
mov
xchg
nop
test
test
mov
bound
das
or
xor
xchg
push
mov
inc
out
es
loope
fcomp
pop
pusha
or
out
jle
and
cmp
mov
cmp
pop
inc
shl
jge
xchg
pop
pop
leave
ret
fst
shr
cwde
mov
into
shr
sub
sbb
sub
dec
push
sar
sub
jecxz
ja
push
cmp
pop
xor
out
(bad)
shl
(bad)
mov
(bad)
ror
xor
dec
sub
cmps
cmp
mov
ins
xor
test
fpatan
enter
and
cld
xor
pusha
mov
mov
pop
rcr
inc
jo
mov
xor
mov
mov
out
(bad)
xlat
mov
rol
aam
push
xor
pop
popa
mov
push
and
inc
arpl
mov
push
mov
stos
sbb
push
mov
mov
jno
scas
push
out
mov
cmps
lods
and
xchg
in
outs
xchg
outs
or
cmp
jb
int
jo
leave
mov
in
sbb
jle
adc
mov
ss
ror
clc
push
ds
and
jp
xchg
(bad)
xor
jbe
adc
loope
(bad)
fiadd
pop
jno
xchg
test
or
movs
nop
adc
popf
les
xchg
cs
popf
fs
es
mov
mov
fnstenv
arpl
mov
test
dec
clc
xor
mov
push
adc
push
into
adc
xor
inc
jb
mov
fbld
xlat
push
les
mov
jns
dec
sahf
stos
movs
pop
push
dec
dec
mov
daa
cmp
(bad)
xchg
cld
mov
cld
addr16
test
mov
jb
mov
or
push
int3
inc
out
mov
test
sbb
jnp
mov
mov
into
mov
sbb
sbb
sub
mov
call
fdiv
scas
jge
cmps
pop
(bad)
retf
in
loope
adc
inc
psllq
imul
pop
test
push
int
ret
hlt
arpl
pop
jmp
lahf
add
sbb
jmp
mov
sub
mov
add
sbb
rol
or
jno
popw
mov
cmps
stc
scas
(bad)
lahf
mov
xor
test
sbb
mov
dec
xchg
push
movs
pop
cmp
mov
mov
and
mov
pusha
mov
mov
fistp
or
popf
mov
stos
mov
cmp
pop
and
stos
rol
mov
sbb
out
adc
pop
int
fs
cmp
fld
test
jl
outs
jne
adc
fnstcw
test
pop
cs
shr
sbb
imul
je
push
(bad)
jp
mov
xchg
call
and
movq
xchg
push
mov
test
das
stos
fidiv
lods
imul
pop
cld
sbb
test
push
sti
es
cmp
inc
mov
dec
in
lods
fdecstp
and
sbb
lds
pop
movs
scas
jle
ds
or
bound
pop
clc
in
pop
rol
ins
inc
mov
sbb
outs
dec
mov
sub
jmp
mov
or
mov
mov
ins
pop
push
imul
dec
pop
(bad)
jg
push
mov
dec
out
adc
clc
jns
xor
add
cmp
mov
mov
loopne
ds
sbb
and
mov
int3
outs
mov
xchg
jnp
inc
xchg
imul
cld
test
push
xor
fidiv
mov
fbld
sub
test
out
repnz
dec
inc
inc
sub
fsubr
rol
cld
mov
jp
mov
out
cmp
add
fwait
aaa
stos
dec
cld
loope
push
push
sub
or
push
ss
mul
int3
mov
xlat
dec
les
push
fs
push
jge
add
mov
push
std
xor
xor
mov
jnp
ficom
sbb
and
es
add
mov
(bad)
(bad)
nop
pop
cmps
or
push
jecxz
retf
mov
mov
fsubp
sbb
and
fisub
pop
mov
movs
fadd
adc
cdq
imul
xlat
leave
mov
dec
loopne
push
xor
mov
jnp
clc
push
loopne
or
mov
nop
fwait
mov
cmp
jbe
into
jecxz
stc
fimul
sti
xor
mov
lods
adc
add
cmp
mov
mov
adc
ss
inc
lock
repz
and
jmp
add
xlat
add
push
in
jge
dec
xchg
loope
icebp
stos
push
adc
shl
scas
cli
ins
lea
pop
sbb
lock
inc
mov
mov
and
adc
arpl
fisubr
xor
call
push
adc
sub
and
cld
out
mov
rcl
ror
repnz
sbb
adc
pop
aaa
retf
dec
mov
movs
mov
nop
cmp
mov
mov
lahf
jnp
jbe
inc
pand
jnp
shr
xlat
pop
push
mov
in
push
xlat
xor
dec
mov
outs
adc
cmp
jge
push
test
mov
inc
fwait
mov
stos
fidiv
mov
test
test
jns
aad
mov
test
pop
popf
push
dec
mov
add
add
and
jnp
les
mov
inc
mov
stos
dec
jb
cmc
addr16
dec
iret
jo
sti
jge
ja
cmp
cmc
mov
test
ret
lock
inc
icebp
xor
inc
push
ja
push
lods
jge
mov
ret
sub
rol
outs
std
inc
and
pop
mov
(bad)
ror
pushf
repnz
jl
push
add
mov
xor
sbb
out
push
stos
adc
dec
in
(bad)
scas
sub
xchg
ins
or
mov
out
push
out
jbe
out
sub
xchg
sbb
outs
outs
leave
mov
push
ret
mov
or
into
cwde
mov
adc
imul
aam
ret
jo
sar
push
mov
jo
inc
fwait
jns
fld
push
push
cwde
ficom
(bad)
(bad)
js
inc
mov
je
adc
jnp
data16
pop
iret
push
lods
outs
adc
add
push
arpl
or
or
jmp
lods
or
inc
lds
push
popa
mov
lods
inc
fldcw
(bad)
cmc
jmp
push
pop
xor
ss
pushf
ja
cmp
das
jg
ds
or
pop
shl
imul
or
leave
js
sbb
bound
clc
sar
push
add
leave
push
movs
jp
bound
mov
cmp
rcl
lods
xor
cmp
je
ret
es
aad
push
cmp
cmp
dec
aaa
mov
jb
mov
out
daa
and
and
and
mov
clc
xor
gs
fst
fwait
test
out
fst
or
rcr
popa
mov
jge
fldcw
push
ins
inc
jne
cmp
pop
mov
fst
mov
lea
cmp
sti
xchg
adc
(bad)
mov
mov
adc
add
ins
cdq
xor
outs
ror
sub
xchg
push
mov
mov
xor
sub
xor
ja
or
inc
inc
leave
pop
test
pop
(bad)
adc
loopne
sbb
dec
sub
fldenv
les
inc
and
loope
jae
and
adc
(bad)
clc
jnp
test
and
mov
add
fild
clc
push
int3
pop
jmp
push
repnz
jl
push
outs
hlt
xor
sti
stos
pop
mov
sub
and
push
or
cmovns
lock
sbb
dec
and
pop
pop
scas
lahf
aaa
cld
jg
mov
scas
fcom
fistp
mov
push
jge
jge
xchg
or
scas
and
sbb
mov
mov
stc
loop
sbb
cmp
cmp
sub
pop
clc
jbe
dec
mul
fcom
sbb
pop
mov
pop
inc
je
inc
enter
test
add
and
push
dec
test
aad
shl
sbb
jecxz
out
cli
call
xor
in
jle
cmp
xchg
les
in
jmp
pop
pop
mov
es
pop
mov
out
in
ret
jns
aaa
sar
ret
sbb
or
mov
stos
or
push
scas
and
in
pusha
mov
je
cmps
cmp
sti
cdq
cwde
scas
je
push
xchg
test
pop
dec
adc
and
pop
dec
inc
lock
mov
sti
adc
out
inc
or
adc
loop
adc
xchg
xchg
push
jle
movs
xor
mov
pop
test
retf
(bad)
bound
pop
out
and
push
jne
xor
test
fcom
enter
xor
sub
outs
into
scas
xor
mov
retf
sbb
(bad)
neg
jecxz
or
imul
adc
cmps
lods
or
mov
stos
pop
cmps
cmp
fwait
mov
xchg
js
loop
push
jne
adc
mul
sar
sti
mov
leave
sbb
and
cmp
(bad)
inc
shl
xchg
mov
mov
jae
in
push
mov
sbb
fs
jmp
mov
mov
jo
mov
outs
jbe
cwde
adc
fcom
push
fcmovb
dec
pushf
dec
adc
retf
movs
call
or
pop
movs
in
cwde
jns
ins
add
xor
aaa
leave
sub
pop
xchg
daa
ss
mov
inc
or
dec
pop
push
mov
adc
icebp
test
jecxz
cmp
and
push
sub
test
sub
enter
sar
xchg
pop
xchg
dec
sbb
jecxz
add
cli
pop
test
add
xchg
xor
int3
cwde
int3
call
lods
ja
mov
fild
xchg
push
imul
das
mov
nop
pusha
or
or
and
mov
in
in
mov
xchg
mov
jmp
or
test
ret
mov
cli
aam
scas
fistp
(bad)
mov
int3
ss
sahf
jns
out
or
lods
call
push
hlt
adc
retf
fnstenv
inc
mov
xchg
dec
xor
jp
or
or
xor
sub
xchg
mov
ret
dec
mov
mov
call
ret
cwde
xor
fisubr
scas
icebp
(bad)
xlat
retf
jge
mov
cld
sbb
test
icebp
cmp
xchg
les
cmp
xor
xor
push
sar
scas
popf
push
dec
rol
inc
mov
mov
mov
add
cmp
loop
cmps
add
push
stc
ret
mov
jnp
lods
out
cmps
cmc
add
cmp
(bad)
pop
test
and
add
xchg
sbb
fwait
es
inc
pushf
shl
add
(bad)
mov
jnp
xchg
xchg
jbe
loope
xchg
push
je
icebp
add
daa
movs
sub
push
pop
dec
mov
add
imul
push
xor
test
js
(bad)
jl
call
jne
fldcw
inc
adc
and
mov
gs
out
push
or
add
jbe
xlat
push
test
and
movs
icebp
stos
retf
push
push
xchg
mov
dec
shl
xor
mov
push
mov
jecxz
fisubr
mov
cmp
adc
popa
(bad)
cmp
lea
fwait
push
jne
sbb
aad
test
ja
xor
sbb
push
jnp
outs
mov
bound
adc
jge
adc
or
(bad)
sbb
xchg
jle
es
jle
xchg
xchg
add
sub
push
bound
sbb
jg
sub
ja
xchg
add
xor
xor
mov
aad
xchg
cmps
xor
pusha
xlat
cdq
jmp
pop
push
xor
int
fs
pop
stos
sbb
pop
les
dec
in
ds
test
xor
lahf
sbb
ja
cli
sbb
pop
inc
xor
xchg
xchg
test
test
jo
xchg
movs
cmp
pop
imul
loope
push
push
in
es
test
inc
ffree
pop
dec
fmul
inc
mov
or
add
cmp
pop
rol
retf
mov
fst
xor
(bad)
fadd
pushf
inc
pop
and
jg
mov
imul
fstp
sub
scas
xrelease
lods
clc
(bad)
xor
jns
mov
xchg
test
in
addr16
and
js
fwait
data16
inc
imul
cdq
out
fldenv
jecxz
xchg
fnsave
or
sub
sahf
pop
adc
jo
mov
es
xor
dec
lahf
mov
sbb
push
xchg
out
(bad)
lds
cmp
jg
jl
movs
pop
jae
mov
cmp
inc
rol
outs
inc
mov
(bad)
(bad)
jg
pop
test
add
jg
dec
mov
adc
push
shld
stos
pop
cdq
mov
(bad)
(bad)
push
int
xchg
mov
(bad)
into
leave
lea
add
mov
sub
jmp
(bad)
int3
mov
mov
fisttp
clc
mov
jecxz
scas
push
adc
lods
nop
in
inc
arpl
push
pop
jmp
mov
adc
jne
and
fiadd
call
or
das
cmps
push
pop
vlddqu
jno
cmc
ja
push
aam
inc
mov
hlt
jns
(bad)
fsubp
loope
mov
sbb
out
jno
sbb
cmp
enter
sbb
test
mov
sbb
cmp
icebp
mov
stc
xchg
call
loopne
mov
pop
gs
js
adc
or
xor
imul
pusha
cld
mov
xchg
pavgw
in
ja
popf
mov
inc
jecxz
imul
inc
mov
leave
ja
adc
cmp
pop
movs
mov
add
mov
imul
xor
pop
aaa
rcl
rcl
jne
stos
mov
dec
mov
mov
lods
(bad)
pop
cmp
sub
enter
mov
jae
jl
pop
sub
daa
dec
scas
sbb
cmp
fdivr
cdq
mov
dec
retf
out
sub
inc
rcl
jae
lock
mov
cmc
jmp
mov
daa
adc
daa
cmp
gs
push
inc
jns
out
aaa
dec
popf
addr16
enter
das
(bad)
or
mov
lods
inc
test
sub
push
dec
mov
aam
rcr
xor
mov
sbb
cdq
xchg
push
fsubr
mov
(bad)
jmp
imul
mov
mov
pop
mov
adc
xor
inc
pop
jg
dec
add
pmaddwd
dec
dec
add
repnz
cmp
fimul
mov
jge
xchg
dec
aam
or
jl
gs
fistp
pop
mov
ret
inc
xchg
jmp
jb
bound
out
sub
retf
shl
sbb
sub
push
dec
int3
xor
add
scas
push
(bad)
fidivr
lods
cli
jmp
inc
xor
scas
push
ja
mov
xor
retf
fnsave
dec
ret
push
lock
test
repz
dec
mul
scas
xchg
xchg
sahf
cmps
push
aaa
scas
call
sbb
jg
fs
mov
mov
jge
cwde
dec
dec
cwde
outs
iret
mov
out
mov
and
pop
sub
pop
mov
mov
daa
mov
mov
int
in
jnp
fcomp
push
shl
push
stos
loop
adc
dec
clc
(bad)
or
aaa
shr
cmp
pop
pusha
ins
jbe
in
add
imul
ret
out
popf
(bad)
aam
add
push
xor
mov
mov
mov
clc
shl
(bad)
idiv
data16
jecxz
xchg
cmps
mov
dec
pop
push
or
sar
movs
clc
jne
jp
(bad)
fimul
imul
hlt
push
xchg
fild
and
jmp
cmp
pop
repz
inc
daa
push
jno
cld
jb
test
pop
push
lods
jae
enter
repz
inc
popa
inc
adc
or
popf
jnp
cmps
mov
fs
(bad)
movs
jne
jl
mov
sbb
lock
push
lods
or
fisubr
fdivr
mov
stc
jmp
ja
fisubr
sub
mov
loop
xor
neg
mov
shl
popa
shr
stos
movs
xchg
ds
mov
mov
xlat
dec
mov
pop
xchg
(bad)
push
inc
fwait
xchg
lds
adc
cmp
call
add
inc
jb
jb
mov
xor
test
adc
test
cmps
xchg
ds
out
push
sbb
nop
ds
movs
inc
sub
in
mov
inc
fnstenv
repnz
jns
or
dec
hlt
mov
dec
out
(bad)
retf
pop
div
cmp
jecxz
int3
cmp
popa
sub
pop
and
push
jmp
cmps
call
test
ins
sbb
fwait
xchg
sub
fimul
jecxz
mov
(bad)
sub
push
add
inc
inc
pushf
xor
jge
stos
mov
mov
xor
pop
mov
xchg
push
sar
mov
xor
jl
inc
dec
cli
in
bound
icebp
sub
and
idiv
and
mov
in
xchg
mov
mov
mov
adc
outs
das
ret
lods
mov
aas
or
cmps
das
aas
sar
and
sti
cli
push
dec
xor
ss
sbb
push
or
ret
pop
xchg
jg
pop
mov
ror
jae
dec
and
jno
lea
repnz
mov
arpl
and
(bad)
mov
loop
stos
sti
dec
addr16
cmc
pop
sub
or
sub
std
add
inc
sub
les
test
pop
test
sbb
mov
mov
mov
call
ds
sti
inc
icebp
call
or
adc
and
jmp
mov
cli
adc
mov
dec
stos
shl
in
nop
sahf
jb
or
fild
dec
adc
push
mov
inc
fs
jno
xor
xor
bound
jmp
inc
fdiv
push
pop
push
adc
xchg
xor
push
cmp
cmps
sar
je
imul
out
in
fucom
test
mov
aaa
mov
scas
cmp
(bad)
in
mov
push
popa
sub
adc
dec
push
ret
std
ret
div
pop
jg
enter
jne
cdq
sar
and
mul
cmp
sbb
fidivr
fadd
push
or
jnp
lahf
mov
jne
or
cmp
push
aad
cmps
sbb
add
mov
sbb
xor
inc
jg
mov
xor
stos
pop
test
pop
xor
add
stos
sbb
pop
callw
je
test
call
sti
stc
data16
jns
retf
xchg
out
daa
ds
popa
and
sub
mov
div
dec
dec
mov
xlat
sbb
mov
push
jb
and
call
scas
fwait
adc
cmp
jge
sub
clc
enter
push
sub
xchg
xchg
sbb
sub
push
cdq
leave
aad
cdq
out
ret
and
in
dec
or
retf
and
pop
std
mov
push
jbe
call
jo
adc
push
add
push
inc
leave
sub
mov
sbb
push
add
faddp
push
rcr
dec
dec
mov
nop
adc
sbb
enter
pushf
stos
sbb
lea
(bad)
or
xor
mov
xor
xor
sbb
push
cdq
popf
mov
push
es
inc
sbb
clc
(bad)
repz
cmp
fnstcw
movs
pop
mov
mov
je
xchg
push
cli
cli
sub
dec
int
jns
mul
movs
mov
mov
das
aaa
push
xchg
(bad)
gs
or
ins
in
sub
mov
or
or
add
jb
or
push
jne
mov
fldenv
sbb
mov
dec
jg
cmp
dec
mov
xor
(bad)
movs
lock
ds
lods
and
cmps
jge
push
(bad)
and
repnz
mov
mov
push
mov
xor
in
ss
(bad)
mov
lock
mov
test
(bad)
mov
jg
(bad)
js
movd
out
cmp
xchg
lea
js
add
cmp
dec
dec
adc
stos
pop
mov
add
add
(bad)
xchg
sub
pop
pop
nop
jecxz
add
jl
pop
in
test
adc
xlat
fidivr
and
pop
(bad)
xchg
in
fwait
inc
dec
xchg
and
cld
dec
in
push
es
dec
sahf
xchg
or
fst
cmp
add
push
mov
out
loopne
sbb
mov
aad
dec
sbb
test
mov
repz
or
and
cmp
inc
or
mov
loopne
movs
aaa
lds
mov
pop
cmp
mov
mov
fstp
hlt
mov
js
ja
and
or
repz
dec
bound
and
sbb
icebp
or
out
xor
imul
dec
dec
and
xchg
add
or
retf
push
loope
push
cmp
dec
mov
xor
mov
mov
inc
rcl
add
mov
sub
pusha
jo
sbb
mov
mov
popf
inc
call
jecxz
out
sbb
pcmpgtw
pop
mov
daa
jmp
push
icebp
adc
les
pop
sahf
mov
xchg
loopne
daa
push
adc
mov
push
cmp
lea
das
xchg
aad
push
sub
loope
in
pop
sbb
popa
mov
call
push
nop
les
rcl
jge
(bad)
popf
int3
js
in
mov
push
es
cwde
repnz
mov
daa
cdq
popf
int3
hlt
rcl
add
aad
loope
add
dec
inc
lea
cmc
sub
lods
iret
inc
loopne
add
lahf
xchg
xchg
push
or
lock
out
cwde
adc
aad
or
scas
mov
dec
lahf
sbb
fcmovnbe
cld
sub
or
mov
test
retf
out
xor
jnp
enter
jmp
mov
push
rcr
mov
sti
pop
imul
imul
mov
(bad)
out
cmps
jmp
fwait
call
xchg
mov
jae
lods
cmps
cmp
sub
lock
sbb
jg
aam
add
ds
scas
inc
ss
lock
arpl
pop
push
push
aaa
pop
nop
in
(bad)
jmp
jno
mov
pushf
jmp
daa
mov
jle
dec
push
dec
aaa
and
jae
into
dec
push
xchg
test
dec
loope
lahf
xchg
xor
xchg
mov
int
nop
xchg
repnz
jnp
xlat
inc
(bad)
cmp
in
push
inc
pop
pop
mov
ins
cwde
push
mov
mov
cwde
out
add
call
cmp
pop
xor
or
adc
jbe
ficomp
int3
inc
xor
or
and
push
(bad)
lock
xor
push
cmps
fadd
imul
jmp
jno
aad
mov
mov
mov
xlat
mov
cmp
jae
ss
mov
sbb
(bad)
adc
jbe
ret
call
fs
xlat
sbb
inc
in
adc
cli
sbb
xor
cdq
mov
jb
cld
jae
mov
das
xchg
and
fnstcw
sub
push
int
jno
ss
in
cli
pop
daa
cmp
outs
dec
stos
fcmovb
cmc
lahf
sbb
and
cwde
xchg
adc
nop
lods
push
cmp
jno
cmp
stos
fcompp
mov
shr
enter
dec
lods
out
adc
xor
enter
or
mov
(bad)
movs
xchg
jne
ret
int
dec
jmp
enter
outs
sti
adc
retf
cwde
sub
mov
test
sbb
fistp
mov
jg
sbb
add
adc
in
jbe
push
pop
pop
sbb
xchg
jnp
dec
and
(bad)
(bad)
call
xor
sahf
add
jno
jecxz
out
mov
fmul
xchg
push
jb
or
xor
mov
jge
sbb
adc
mov
xor
ror
push
xchg
outs
and
shl
repz
or
add
jne
mov
cdq
fcmovb
ja
imul
fld1
retfw
fcom
in
xor
add
cmp
stos
sbb
mov
mov
cmc
mov
das
out
fmul
sbb
ret
cmp
cmps
sub
push
stos
fwait
mov
sar
jmp
rcl
jmp
xchg
(bad)
clc
loope
loop
stc
jge
adc
pop
ins
xor
stos
push
cmc
add
mov
repnz
sbb
(bad)
xchg
cmp
cmps
xor
test
int3
(bad)
(bad)
dec
es
add
loopne
in
mov
ret
dec
rcr
(bad)
cmp
stos
xchg
jmp
(bad)
mov
(bad)
js
push
push
ins
icebp
cdq
sbb
jb
mov
pop
int3
jmp
cwde
cmp
jmp
and
in
in
pop
mov
mov
cmps
adc
in
jb
(bad)
cmp
popf
mov
sub
arpl
leave
pop
sbb
imul
mov
movs
pop
dec
cmp
mov
push
mul
add
(bad)
(bad)
mov
in
clc
cmp
jo
mov
jnp
out
outs
mov
xlat
popf
sub
loope
add
push
dec
jge
sub
pop
test
mov
call
imul
sbb
sbb
dec
xor
xor
shl
ret
ins
push
hlt
adc
or
mov
and
jmp
cwde
jg
or
sar
mov
loopne
iret
add
mov
popa
movs
not
sub
or
push
pop
push
pop
sbb
int3
enter
adc
cdq
cmp
loopne
bound
clc
jae
movsx
in
add
rol
lods
mov
enter
push
sbb
push
add
jo
lods
add
fwait
outs
fstp
mov
repz
and
mov
repnz
test
pavgb
fwait
stc
jns
jmp
xor
daa
sub
sbb
js
xchg
sbb
cmps
adc
xchg
dec
aam
in
aam
movs
movs
test
test
out
ret
scas
pop
xbegin
jg
test
(bad)
pop
scas
cmp
jge
cmps
pop
mov
dec
mov
mul
xor
ret
cmp
inc
adc
out
repz
addr16
mov
sub
cmp
arpl
scas
ror
inc
call
mov
cmp
jnp
arpl
xchg
adc
cld
jge
daa
jns
iret
push
mov
mov
cmps
mov
jb
sbb
test
repz
xchg
and
clc
out
cmp
fisubr
xchg
pop
mov
aaa
jl
xor
mov
fimul
iret
cs
add
mov
inc
outs
fnsave
scas
mov
xchg
push
jmp
popw
pop
fwait
pop
popa
lea
js
fwait
outs
push
pop
sub
add
ja
pop
aas
xor
loope
rcr
pop
jb
and
(bad)
push
dec
push
inc
inc
xor
and
add
pop
cld
dec
mov
loope
out
cmp
sub
sti
stos
and
mov
and
loopne
sub
jae
push
repz
add
bnd
adc
retf
mov
xor
loope
clc
icebp
iret
xlat
jae
addr16
mov
inc
leave
pop
mov
hlt
aad
xchg
movs
pop
enter
nop
dec
sub
out
call
dec
es
psrlq
bound
pop
js
dec
xchg
xchg
shl
fwait
out
xchg
and
adc
scas
mov
lea
xor
pop
xor
imul
fstp
sbb
or
dec
xor
sti
mov
in
in
xor
and
xchg
pop
aas
bound
dec
dec
cmps
xor
mov
add
dec
or
es
gs
push
xor
ret
sti
dec
cs
dec
enter
scas
pop
pop
dec
mov
int
call
test
lock
sbb
pop
out
xchg
dec
xchg
or
ret
sbb
cmp
jnp
xchg
sub
or
xor
popa
loop
xchg
movs
xchg
and
out
mov
sbb
adc
stc
pop
push
shr
xchg
lock
sbb
sub
sahf
cmp
mov
push
cmc
iret
pusha
leave
xor
idiv
(bad)
movs
jp
sti
mov
test
popf
cmp
mov
dec
std
mov
sub
mov
sbb
dec
mov
push
cmp
cvtps2pd
(bad)
mov
gs
or
into
fld
dec
sahf
jns
(bad)
pusha
leave
pop
stos
push
xlat
dec
or
sub
jno
test
jecxz
dec
mov
jmp
add
mov
push
hlt
sbb
cwde
push
xor
push
test
pop
sbb
sub
int
inc
jl
adc
pop
inc
sub
gs
or
xor
jmp
daa
or
jae
es
mov
call
data16
addr16
(bad)
mov
divps
bound
jne
loop
push
jno
dec
fdivr
pop
inc
pop
cmp
loope
dec
movs
dec
push
dec
pushf
pop
retf
dec
xchg
xchg
popf
push
das
pop
xor
hlt
pop
gs
fisttp
push
push
cmp
push
sbb
out
fdivr
into
or
sbb
lds
mov
(bad)
(bad)
fmul
clc
stos
call
mov
mov
lods
je
adc
xlat
aaa
mov
dec
dec
pop
push
xchg
push
or
retf
add
out
hlt
xchg
test
fcom
mov
enter
adc
dec
out
mov
and
out
push
std
call
daa
shl
mov
jae
mov
int
test
mov
imul
ja
push
pop
loop
jle
enter
inc
(bad)
cld
jmp
sti
push
dec
into
fcomp
leave
outs
pop
int3
dec
icebp
lds
push
loopne
xchg
test
xchg
mov
sbb
fistp
mov
cli
fild
mov
(bad)
ins
adc
clc
daa
mov
mov
xor
sti
enter
(bad)
mov
imul
fisub
rol
xor
pop
xchg
dec
scas
test
(bad)
dec
cmp
nop
jne
in
ds
xchg
popa
fisub
sub
mov
jmp
mov
pop
(bad)
call
scas
sbb
lods
add
cld
iret
pop
sbb
inc
shr
sub
push
sar
scas
mov
or
arpl
movs
pop
push
jge
data16
int3
movs
psubsw
xor
add
pop
pop
iret
adc
ins
pushf
ins
mul
loop
cmp
test
(bad)
int3
add
mov
push
inc
sub
push
in
mov
xor
gs
out
cmp
mov
or
es
movs
cmp
lods
add
outs
(bad)
xor
pushf
adc
and
or
loop
push
adc
or
retf
lds
adc
ss
sub
jne
sub
fimul
daa
and
add
jl
loop
jns
clc
cwde
sti
int3
pop
or
test
mov
mov
bound
aas
jmp
les
jae
lock
ldmxcsr
clc
clc
xchg
fdiv
cs
xchg
inc
mov
scas
jbe
xor
add
cmp
push
cmp
pop
sub
stos
test
inc
dec
icebp
xchg
ja
sub
fst
call
jmp
sahf
pop
lods
sahf
mov
scas
jns
xchg
repz
aaa
mov
push
pop
inc
add
inc
mov
sub
retf
xchg
ja
cwde
(bad)
sahf
invd
cld
arpl
stos
in
ficom
pop
ret
cmc
jns
cmp
sbb
jmp
fld
icebp
mov
call
pop
add
sbb
jb
pop
jno
loope
(bad)
lds
pop
mov
cmps
out
into
fidivr
inc
icebp
add
nop
pop
cmp
pushf
dec
shl
clc
fiadd
sub
cmps
adc
ret
or
aas
dec
clc
xlat
dec
xor
sbb
mov
dec
pushf
fisttp
inc
adc
and
mov
loopne
and
iret
xchg
mov
mov
call
sbb
pop
sub
es
sub
aam
mov
cmp
or
das
call
out
and
test
inc
mov
popa
mov
mov
scas
push
dec
cmp
enter
loope
adc
xor
test
icebp
pop
mov
cmp
stos
data16
(bad)
ror
pop
jo
shr
fwait
pop
(bad)
xor
lahf
or
in
xchg
stc
addr16
out
jmp
movs
jo
ret
gs
push
int3
aam
das
stos
xchg
call
ss
cmp
push
sbb
out
cdq
inc
bound
xchg
inc
and
pop
int3
popf
cmp
adc
fld
pop
(bad)
dec
cmp
iret
into
jmp
rol
jmp
sar
sar
(bad)
enter
jmp
mov
push
cmp
retf
out
dec
packssdw
outs
aad
mov
jp
in
sahf
jne
mov
xor
stc
xlat
sbb
loope
jns
or
in
xchg
adc
lods
sub
adc
and
in
xor
dec
loopne
enter
xlat
xor
scas
jecxz
not
scas
cli
into
fild
push
adc
xchg
je
ds
cmp
scas
pusha
adc
ins
dec
cmps
mov
dec
imul
hlt
or
(bad)
rcr
rcl
mov
dec
jmp
jne
dec
ss
std
push
je
sub
mov
int
movs
shr
cmp
xor
test
jo
ret
arpl
jae
mov
push
dec
je
outs
ins
add
push
add
jbe
(bad)
lds
data16
push
mov
or
xchg
sub
call
sub
cmp
push
add
xchg
cmc
and
dec
mov
sbb
xor
ret
scas
add
(bad)
sbb
(bad)
iret
dec
sbb
addr16
or
cmp
jmp
(bad)
jl
cmps
in
pop
loopne
jg
cmp
and
adc
xor
out
cld
jmp
mov
(bad)
(bad)
mov
loop
(bad)
cwde
xchg
jo
sub
and
cmp
scas
mov
xchg
aad
nop
jbe
cmps
pop
inc
(bad)
div
sub
test
pusha
sti
popa
dec
(bad)
std
pop
sbb
adc
dec
or
pop
scas
arpl
mov
push
xchg
xor
xor
out
xchg
(bad)
sub
xchg
push
mov
fld
cmps
fistp
and
jge
repnz
lock
sbb
mov
sub
dec
iret
bound
hlt
jge
dec
pop
stos
in
(bad)
aaa
and
mov
and
movntq
sbb
jnp
sub
dec
pop
imul
(bad)
fdivr
adc
arpl
adc
inc
cli
jl
std
xchg
inc
push
pop
or
cmps
push
lds
jg
adc
test
loop
fisub
addr16
and
ret
dec
cmp
push
movs
loop
mov
mov
int3
call
xchg
xor
dec
test
(bad)
mov
out
movs
ins
shl
(bad)
sbb
outs
movaps
out
out
js
add
test
loope
mov
push
hlt
mov
inc
inc
xor
push
cmp
and
sbb
into
ins
sbb
shl
fisttp
scas
mov
fsubr
jno
dec
and
sub
fld
xchg
(bad)
out
ins
call
push
pop
jge
adc
and
cmc
cmps
mov
call
rcr
inc
jnp
repz
cwde
jno
out
and
out
sbb
xchg
inc
fst
and
test
sub
movs
ds
inc
mov
jae
xchg
stos
sahf
sub
(bad)
movs
inc
ins
pop
test
or
jnp
inc
icebp
ret
mov
nop
std
sbb
test
test
jnp
jle
xchg
mov
cmps
xor
jge
and
bound
mov
sbb
and
cs
call
sub
mov
jne
add
in
cld
mov
mov
scas
and
sbb
aaa
adc
mov
fsub
jmp
gs
mov
push
scas
xor
je
mov
push
and
sbb
es
xor
mul
cmp
push
test
test
or
xchg
mov
std
pop
jne
rol
cdq
mov
sahf
and
cmc
xchg
add
jb
cdq
inc
loopne
jge
in
test
(bad)
sbb
inc
lahf
mov
out
aaa
xchg
xor
inc
scas
sbb
push
mov
mov
sbb
ret
outs
es
scas
sbb
cmp
hlt
std
push
das
stos
clc
sti
gs
fidivr
and
dec
cmp
sub
xor
fwait
scas
je
pop
xchg
leave
inc
fwait
retf
xor
mov
ret
std
push
test
(bad)
pop
and
ja
arpl
xchg
or
lods
cmp
arpl
push
aas
shr
adc
outs
jecxz
xchg
mov
mov
and
stos
test
cli
xchg
icebp
loop
(bad)
xor
aad
inc
mov
push
aaa
in
in
retf
mov
shl
pop
ds
pop
dec
cli
push
cmp
int
push
mov
cs
lea
sub
xor
cmp
cmps
hlt
shr
dec
adc
cdq
sbb
sbb
ss
adc
mov
aam
dec
gs
mov
mov
and
cmp
cs
sti
jo
test
mov
stc
mov
jmp
dec
xchg
daa
nop
mov
inc
xchg
and
gs
push
out
(bad)
daa
daa
jb
lds
sbb
or
fild
xor
imul
enter
xchg
popa
cld
xchg
iret
and
addr16
ficomp
repz
fisub
sbb
cmp
pop
pop
jnp
jmp
lahf
lea
mov
aam
mov
jge
add
xor
push
es
and
dec
sbb
push
mov
lock
sar
popa
cmp
and
call
(bad)
cmp
dec
or
nop
pop
push
xchg
mov
jl
sbb
cmp
std
sub
leave
loop
std
fs
cmc
lock
cdq
mov
jecxz
and
mov
mov
(bad)
imul
sub
mov
ins
out
jb
stc
std
fnstcw
xor
lods
movs
pop
(bad)
xor
out
popa
sti
push
pusha
xchg
jns
call
test
dec
mov
mov
pop
mov
sub
mov
add
in
push
xchg
inc
adc
dec
les
jmp
xchg
js
or
mov
movs
not
cmp
pop
xor
loopne
lods
outs
retf
mov
cmp
call
lods
call
push
pop
xchg
dec
mov
jbe
into
in
in
retf
sbb
xchg
fstp
retf
jmp
jnp
add
mov
xchg
out
adc
or
and
lods
ror
cmps
ret
pop
or
inc
or
or
jmp
cmp
fiadd
mov
jne
pop
lock
dec
mov
gs
ds
ja
cdq
outs
pushf
and
mov
gs
mov
fs
push
xlat
repnz
test
sbb
mov
dec
pop
test
lock
xor
xchg
lods
xchg
lods
mov
pop
cmp
adc
popf
mov
lods
add
dec
pop
mov
cwde
dec
dec
aad
shr
mov
lahf
mov
aad
test
push
cmc
jmp
icebp
gs
clc
push
cld
xchg
aaa
in
nop
cdq
ud1
mov
mov
pop
push
jp
arpl
scas
pop
sbb
sahf
mov
dec
lahf
test
xchg
imul
movs
jge
(bad)
sar
or
cmovne
jno
sar
(bad)
es
push
push
xchg
fstp
xchg
xchg
pop
inc
imul
ss
sub
div
adc
lods
sti
add
xchg
pop
and
adc
push
test
mov
mov
push
and
sbb
fs
out
or
packsswb
ins
popf
sub
pop
sub
mov
mov
je
xchg
sub
adc
outs
jae
mov
loopne
jb
adc
xchg
adc
call
jno
(bad)
dec
in
dec
ja
out
sahf
hlt
mov
and
adc
cmps
add
mov
inc
jmp
cmp
data16
xor
sbb
push
sar
fisub
rol
aas
and
mov
fcmovu
ins
jno
dec
mov
adc
jno
mov
out
jno
in
xchg
repz
or
mov
mov
ss
jbe
add
mov
and
jbe
ja
adc
xor
mov
xlat
adc
or
arpl
add
push
inc
jp
mov
int
test
cdq
stos
cmp
cmp
adc
aas
push
jmp
or
jns
js
loop
dec
or
push
movs
adc
out
lea
pop
xchg
adc
cld
fidiv
add
popf
mov
inc
and
push
jns
iret
into
out
xchg
imul
test
xchg
jmp
xor
in
jle
cmp
mov
in
add
mov
or
cli
pop
ins
xchg
dec
pop
pop
lods
pop
adc
ins
call
in
jb
mov
es
aaa
test
pop
fbld
ret
or
sahf
dec
ret
enter
adc
out
outs
mov
jecxz
sbb
xchg
pop
mov
out
push
out
out
mov
dec
pushf
sub
push
mov
int
mov
fstp
and
xchg
stos
out
and
and
ins
mov
ja
call
clc
repnz
(bad)
call
sbb
hlt
xchg
cld
aas
mov
lock
sbb
mov
(bad)
ins
inc
ins
iret
pop
ret
push
icebp
push
call
mov
icebp
ss
lods
or
outs
lock
scas
sub
jmp
inc
dec
add
lods
or
sahf
adc
iret
fs
xor
jns
push
inc
fwait
sbb
and
out
add
mov
imul
ss
sti
int
xchg
ds
hlt
nop
jo
cmps
jnp
fincstp
imul
jl
xor
cmps
std
mov
int3
push
inc
imul
xor
or
out
test
repnz
fwait
or
xor
mov
pop
push
add
dec
js
rol
in
sti
stos
les
call
xchg
adc
test
or
outs
sbb
jnp
mov
out
js
add
out
(bad)
jae
inc
int3
dec
les
push
retf
jbe
movs
lods
xchg
xchg
popf
outs
or
pop
fidiv
xor
aaa
xchg
add
mov
ins
inc
out
xor
lds
push
cmovb
inc
fmul
push
imul
dec
rcr
push
xchg
and
enter
imul
mov
pop
push
push
daa
out
mov
sub
pop
aaa
pop
xchg
jns
cmp
dec
mov
aaa
mov
call
shr
retf
dec
and
inc
iret
jo
mov
cmp
shl
xor
pop
nop
sub
fs
mov
scas
aas
xor
movs
push
(bad)
xchg
inc
push
leave
sub
adc
popa
cmp
mov
jno
mov
mov
repz
xchg
mov
(bad)
and
in
aaa
sahf
jno
push
mov
fld
leave
repz
push
fsub
inc
ja
in
sbb
mov
retf
iret
leave
xchg
iret
push
push
inc
sub
adc
out
mov
xor
mov
ds
(bad)
bnd
je
sub
in
or
jmp
pop
pop
xor
mov
cs
pushf
hlt
pop
pop
mov
push
adc
mov
xchg
lds
dec
inc
bound
push
dec
aad
xor
loopne
adc
jne
add
daa
ins
imul
dec
cmps
or
pop
dec
add
out
iret
sub
and
adc
sub
push
mov
aaa
movs
mov
sbb
shl
dec
out
mov
in
inc
cmp
push
push
inc
sub
ss
imul
stos
sub
inc
fwait
ins
lock
mov
in
pop
mov
mov
in
dec
test
fwait
mov
xor
fisubr
leave
scas
icebp
mov
je
or
jge
inc
in
sub
out
nop
fcom
and
sub
cmp
mov
ret
mov
push
fwait
inc
jns
mov
fs
shl
jmp
or
and
xchg
(bad)
(bad)
and
imul
mov
retf
or
cmp
mov
jp
mov
xchg
in
scas
in
out
movs
les
cmp
sub
es
inc
int
clc
std
mov
ror
push
je
adc
sti
inc
scas
jns
sar
les
pop
out
or
pusha
rcl
pop
movs
in
inc
cli
jmp
xchg
fwait
test
dec
xchg
int
movs
pop
cmps
cmp
aaa
fcom
mov
pusha
adc
pop
push
mov
in
nop
retf
sahf
out
cld
aaa
ins
test
sbb
dec
push
outs
jo
xchg
mov
sub
shl
dec
jmp
data16
jge
mov
aaa
xlat
pusha
inc
lods
inc
jmp
push
push
sti
push
and
ror
int3
inc
(bad)
in
sub
or
retf
mov
(bad)
js
call
cmps
cmps
sbb
inc
xor
xor
pop
mov
je
cwde
and
or
movs
adc
jp
int3
call
fisttp
loopne
sub
sub
out
aaa
cmc
fmulp
repz
fild
add
aam
inc
dec
jbe
ret
dec
lods
out
ins
sub
push
out
mov
dec
imul
and
shr
add
cmp
pop
test
aas
(bad)
mov
into
push
pop
pop
cmp
mov
ss
jmp
or
inc
dec
ins
ja
dec
jp
cmps
dec
xchg
jmp
mov
and
pop
movs
cmp
fmulp
pop
inc
mov
in
and
in
push
mov
sub
dec
jb
cs
xlat
aaa
inc
cmc
dec
in
mov
pop
jo
jp
sbb
popf
in
scas
jnp
enter
mov
(bad)
retf
cmp
cmp
sub
fist
xor
push
in
pop
aam
inc
xor
xchg
ja
into
adc
mov
or
cmps
adc
push
(bad)
dec
mov
pop
iret
push
ja
cmp
mov
or
(bad)
je
pop
sub
sbb
jb
push
cmp
cmp
mov
inc
rcr
out
cmp
sbb
push
sbb
mov
sar
outs
hlt
outs
add
(bad)
add
mov
(bad)
pop
jo
jne
inc
cmps
shr
xchg
sub
rol
mov
mov
sti
clc
movs
scas
test
lea
jne
repz
add
sbb
adc
add
jg
mov
mov
popf
dec
stc
cmps
scas
xor
sbb
(bad)
rcr
popa
and
addr16
push
pushf
push
stc
sbb
pop
es
xchg
vpaddusw
aas
inc
adc
jns
xor
cmp
and
sub
pop
out
sti
jne
lock
scas
mov
jnp
mov
sti
outs
cmp
lock
out
dec
gs
fisubr
push
mov
xchg
fsub
ja
retf
outs
bnd
jnp
ffree
ja
mov
in
(bad)
jb
adc
mov
outs
retf
inc
add
fs
sbb
jb
xchg
aam
das
xor
adc
jb
adc
lods
das
jb
cmps
mov
jle
xlat
jns
jb
pop
stos
or
sar
fwait
nop
(bad)
imul
fstp
cmps
repz
into
rep
jmp
repnz
xchg
adc
sti
fs
and
xor
std
(bad)
es
jp
dec
test
jns
adc
mov
pop
push
retf
mov
cmp
add
xchg
sbb
jno
mov
ss
or
fnsave
imul
xor
retf
enter
mov
hlt
push
retf
cmp
pushf
jp
ret
fist
inc
sub
iret
cli
dec
pop
sbb
lods
jmp
jle
dec
sti
pop
mov
test
es
fxch
pusha
lea
fs
test
test
pslld
iret
mov
mov
xor
arpl
outs
(bad)
cmp
mov
clc
out
mov
int
push
or
sbb
cmp
mov
add
or
adc
ins
xchg
xor
cmp
and
push
fs
cmc
mov
mov
sbb
je
or
pop
hlt
push
mov
dec
daa
fcom
push
and
out
sahf
adc
sub
sbb
xchg
std
sbb
cmps
adc
mov
adc
frstor
call
cmp
add
add
sti
fisttp
enter
inc
js
xlat
inc
push
push
sbb
mov
xor
in
movs
jg
adc
jp
leave
jg
mov
and
inc
inc
sbb
push
ret
pop
test
mov
sar
pop
mov
cmps
adc
js
xchg
pop
pop
xor
rol
and
neg
cld
in
scas
sbb
pop
jg
out
in
in
jne
(bad)
mov
scas
cmps
imul
xor
int
sub
cs
scas
aam
mov
push
or
fild
mov
adc
scas
rol
in
and
cmp
into
or
jge
dec
dec
es
xchg
test
out
call
jmp
gs
inc
and
les
jb
int3
dec
jns
not
inc
stc
mov
int3
jmp
sti
in
mov
sub
mov
and
std
aad
xor
ror
cmp
jno
and
inc
mov
retf
mov
push
aaa
ja
dec
xchg
cmp
inc
scas
aas
aas
(bad)
std
pop
xchg
sti
(bad)
jae
dec
adc
xlat
add
add
test
sub
shl
loope
pop
jb
add
pop
xor
jp
inc
call
(bad)
in
mov
stos
sub
sub
mov
inc
mov
ins
pop
sub
retf
xor
je
lods
dec
cmp
mov
adc
out
in
sub
cmp
fs
ret
arpl
adc
pusha
xchg
imul
(bad)
int
mov
fimul
push
in
fwait
add
mov
push
mov
jo
enter
adc
jmp
push
sar
push
pop
push
je
stc
mov
add
cmp
mov
mov
fild
in
sbb
mov
mov
imul
pop
fistp
lds
dec
lea
xchg
call
stos
mov
push
shl
int3
aam
sbb
jle
gs
xchg
mov
mov
inc
dec
push
dec
fsubr
adc
sbb
(bad)
push
cmp
xlat
repnz
jle
jmp
xor
fiadd
std
fwait
pop
adc
pop
sub
retf
add
mov
mov
jl
clc
dec
push
scas
push
mov
push
call
inc
dec
in
cli
dec
lock
pop
sub
mov
shl
cs
rcl
fnstcw
inc
or
js
or
pusha
aas
and
daa
or
in
stc
inc
out
call
ds
pop
fsub
scas
jecxz
adc
test
sub
inc
pop
jne
hlt
dec
or
outs
pushf
xchg
sbb
pop
jo
and
xchg
mov
ret
xchg
out
in
in
out
lock
int3
mov
sbb
(bad)
fcmovnb
addr16
mov
and
mov
jne
mov
cmp
dec
loop
lock
dec
sbb
ds
fsubr
jmp
sub
or
fisttp
movs
pop
dec
ja
mov
mov
gs
push
dec
loope
xor
out
pop
das
fld
add
or
ins
js
(bad)
jl
pop
xchg
cmps
movs
cmp
in
dec
or
ret
(bad)
sbb
aas
(bad)
aad
ja
pop
jns
cwde
or
push
dec
fist
lods
sbb
push
and
xchg
lea
pusha
rcr
call
out
jmp
lods
pop
cmp
sbb
lahf
push
repz
movs
clc
mul
cwde
add
retf
repz
pop
ror
add
sbb
mov
add
fs
pop
mov
mov
xchg
or
xchg
sub
pusha
lea
add
adc
push
(bad)
into
cmp
in
dec
jge
sub
loop
(bad)
movs
sbb
push
pop
and
sbb
rcr
mov
mov
push
sub
retf
adc
mov
ret
dec
ror
outs
fild
fidivr
leave
lock
les
outs
xor
ins
dec
mov
cmps
ins
in
sub
jle
jnp
and
ins
pop
and
cmp
idiv
cmp
xchg
stos
loop
(bad)
jae
rol
pushf
and
ss
ins
push
or
mov
xlat
das
(bad)
bound
stos
sub
movs
retf
or
push
jecxz
sub
test
ins
dec
fwait
jp
dec
shl
std
int
leave
(bad)
cwde
cmps
mov
push
add
mov
adc
sub
ds
(bad)
cmp
ds
pop
in
add
jno
inc
movs
sbb
imul
retf
shl
loope
adc
aaa
bound
es
pop
inc
repz
js
maskmovq
test
sbb
push
xchg
jno
in
div
leave
std
out
xchg
lea
cli
int
out
rcl
add
(bad)
lock
sbb
xor
into
int3
into
aas
sub
push
mov
jmp
xchg
xor
shr
push
xor
stos
loope
js
and
mov
(bad)
mov
cmp
mov
inc
sbb
mov
out
jno
adc
stos
into
jge
fadd
popa
hlt
scas
pop
leave
jne
stos
pop
fcomip
shl
cmp
js
mul
add
push
test
xchg
dec
mov
jmp
sbb
dec
std
or
mov
mov
icebp
test
ret
cs
inc
lea
jecxz
push
jmp
mov
xchg
out
push
mov
mov
add
je
xor
aaa
fcom
push
test
fimul
pop
stc
inc
mov
daa
addr16
mov
rcr
out
sub
out
mov
push
push
mov
cmps
pop
mov
mov
adc
arpl
jnp
aam
mul
jns
add
cs
mov
and
jge
sub
test
fidiv
mov
push
mov
adc
test
sti
and
mov
xchg
bound
pop
jno
in
xchg
mov
lods
imul
push
jmp
repnz
sbb
inc
and
jbe
movs
into
aas
xchg
pushf
ret
fs
pop
inc
lods
and
fs
cmp
lock
jg
sub
sub
outs
lds
mov
push
leave
in
(bad)
sahf
jb
movs
cmp
test
mov
lahf
xlat
jle
dec
jb
adc
sbb
adc
fistp
addr16
(bad)
popf
add
push
xchg
cli
daa
push
mov
mov
push
lds
and
sub
mov
frstor
adc
xor
adc
xchg
add
sbb
xchg
sbb
enter
pusha
lahf
call
push
add
or
rol
mov
leave
fcomp
push
cmc
xor
xor
shl
mov
repz
sar
repnz
xchg
mov
dec
add
and
bound
xor
aaa
ins
(bad)
in
push
fild
data16
sbb
(bad)
in
inc
pusha
jae
xchg
jmp
arpl
(bad)
in
mov
add
pop
fs
rol
fucom
pop
adc
push
xor
iret
pop
and
loope
and
pop
mov
mov
push
aaa
adc
clc
retf
or
mov
pop
push
(bad)
sbb
mov
xor
inc
int
sub
sbb
lds
icebp
adc
aam
dec
inc
test
pop
pop
dec
or
push
inc
mov
xchg
push
mov
les
pop
aad
sbb
loopne
in
jmp
rcl
je
add
int3
scas
mov
rol
movs
push
sub
shr
dec
movs
scas
xor
aaa
(bad)
cmp
push
(bad)
ret
fsubrp
mov
jl
mov
sub
in
adc
xbegin
pop
push
js
mov
(bad)
jmp
int3
push
mov
fcmovu
cmp
retf
push
xchg
ins
mov
add
(bad)
xor
in
inc
fisttp
ret
jbe
mov
fwait
arpl
clc
jae
xor
lds
fs
je
fisttp
mov
xchg
mov
mov
loop
cwde
inc
dec
xlat
xchg
mov
std
(bad)
nop
ret
in
mov
das
cmp
or
and
fcom
jg
cmp
adc
(bad)
scas
mov
jbe
and
fsub
inc
aad
bound
ds
dec
dec
mov
inc
jl
(bad)
lock
nop
jmp
int3
jge
fcomp
cmp
push
and
imul
scas
enter
mov
add
xor
mov
rcr
xor
mov
test
outs
ins
xchg
stos
lds
xchg
das
test
imul
test
ins
fisttp
sub
stc
sbb
xchg
cmc
inc
mov
push
int
gs
cmp
jnp
jne
mov
pushf
push
pop
sub
outs
push
fisubr
pop
add
inc
hlt
xor
pop
mov
ret
cmps
add
or
adc
ss
xor
loop
cmp
sbb
test
leave
jge
adc
inc
in
cli
movs
jg
mov
xor
popa
in
sub
mov
ds
dec
push
or
mov
addr16
add
enter
xchg
inc
mov
ins
push
repz
lods
jns
jecxz
scas
ja
mov
xor
dec
mov
retf
fld
sub
sub
mov
out
or
add
fisubr
cmps
cmps
push
cmp
jecxz
or
add
scas
push
lods
push
dec
mov
test
sbb
fld
sahf
mov
cmps
fdiv
sbb
rcr
pop
pop
mov
adc
icebp
xchg
push
out
mov
dec
mov
inc
jo
adc
push
loope
jmp
scas
scas
lds
push
sbb
dec
jne
nop
(bad)
cmp
stc
retf
std
lds
scas
dec
fidiv
mov
iret
or
movs
dec
push
test
repnz
push
dec
jne
and
sbb
mov
dec
inc
inc
cmp
aam
mov
icebp
(bad)
lods
inc
mov
mov
jno
adc
cmp
push
loope
nop
sub
mov
push
hlt
dec
xor
xchg
pop
ins
mov
(bad)
int
adc
repnz
arpl
popa
dec
xlat
mul
data16
sub
in
shr
jmp
outs
sbb
hlt
push
mov
lods
cli
xlat
lea
xchg
ss
mov
test
ja
mov
jbe
mov
inc
xor
cmps
mov
jle
(bad)
std
data16
pop
jb
loope
ins
mov
mov
je
adc
add
push
loopne
dec
stos
rdpmc
ret
enter
cmp
hlt
mov
push
imul
mov
lahf
leave
inc
adc
loopne
lods
cmp
pop
xchg
adc
out
xlat
jae
fs
retf
ins
inc
fild
mov
nop
call
xor
push
jg
cmp
(bad)
cli
sub
add
xor
jg
pushf
push
test
push
mov
add
clc
dec
add
test
pop
and
mov
mov
dec
js
inc
lea
and
call
(bad)
sbb
inc
mov
ror
and
push
mov
sbb
dec
push
sbb
enter
jl
push
lea
jns
push
popa
and
mov
push
stos
dec
jp
xor
jg
jbe
ins
push
js
sbb
ja
jge
pop
or
int
mov
xor
add
cmp
shr
sub
call
jb
mov
lods
retf
sbb
mov
into
pop
jbe
pop
sub
jmp
mov
add
aas
mov
sbb
test
cmc
jmp
pop
mul
data16
xchg
gs
fsub
inc
shr
mov
push
inc
mov
stc
test
stos
mov
adc
cdq
push
fucomip
mov
push
mov
add
imul
rcr
imul
mov
or
jmp
jo
and
sub
dec
or
sti
sbb
retf
inc
jl
bound
mov
scas
lock
nop
int
sahf
test
push
dec
mov
shr
jbe
les
dec
mov
mov
push
js
mov
bound
jnp
adc
mov
aad
pushf
sahf
or
pop
fwait
retf
push
cmp
popa
stc
dec
cwde
sub
inc
test
pop
(bad)
out
inc
and
mov
das
cmp
dec
mov
call
aad
mov
inc
in
fwait
dec
stos
xor
dec
sub
and
mov
fnstcw
and
adc
xor
mov
sbb
and
std
test
cmp
sub
cmp
rcl
fwait
stc
sub
(bad)
mov
outs
or
mov
jae
sbb
dec
push
sar
fwait
dec
js
mov
mov
test
inc
std
arpl
int3
in
pushf
ret
retf
arpl
inc
sbb
iret
mov
pop
or
adc
(bad)
and
xor
xlat
add
adc
call
and
inc
add
jge
sub
fsub
(bad)
pop
(bad)
movs
add
jbe
inc
fiadd
or
xchg
sub
mov
arpl
push
or
xchg
out
mov
out
mov
mov
rcl
rcr
push
mov
xor
dec
jo
addr16
shl
add
inc
retf
cli
pushf
lods
mov
rcr
inc
add
mov
cmps
mov
ficomp
push
cmp
jl
sbb
mov
xlat
xor
enter
jbe
popf
test
fbld
nop
sub
cmp
fidiv
dec
ins
das
jl
div
mov
mov
fiadd
xchg
push
jg
xor
pop
loopne
mov
iret
xchg
aad
jp
test
fistp
stos
dec
inc
mov
repz
push
mov
mov
cwde
(bad)
push
dec
pop
scas
adc
addr16
imul
pop
xchg
das
loope
mov
stc
adc
ins
and
movs
mov
push
outs
jno
dec
push
test
or
push
inc
in
rcr
and
push
fiadd
jo
(bad)
test
inc
rol
or
shr
mov
test
xor
xchg
mov
cmc
ret
push
mov
out
pop
ret
mov
jl
inc
(bad)
xchg
inc
dec
jmp
inc
js
call
dec
stc
lea
cmp
int3
fwait
movs
xchg
dec
fild
xor
test
imul
jns
inc
xor
or
stc
ficomp
icebp
mov
adc
(bad)
test
inc
pusha
mov
mov
xlat
and
xchg
jg
cli
xchg
add
or
xchg
sub
ret
pop
xchg
jp
jnp
mov
xchg
je
mov
shl
test
mov
fmulp
in
neg
mov
inc
imul
sar
mov
jae
mov
mov
test
push
xchg
inc
push
jmp
cld
and
cmp
in
repnz
(bad)
mov
push
xor
inc
ins
rcl
adc
mov
xacquire
push
mov
mov
xchg
stos
cmp
jmp
lahf
loope
mov
hlt
fs
pop
sub
push
cmp
cmp
mov
mov
mov
retf
pusha
dec
pop
in
pop
in
inc
int3
xchg
cmp
cmps
xor
cmp
sbb
and
pop
mov
arpl
jne
sti
imul
push
pop
cmp
outs
jg
cmps
out
into
and
xchg
push
inc
mov
xchg
stc
sub
sar
xlat
retf
sub
or
das
mov
mov
mov
shl
loop
sub
pop
lahf
jl
mov
mov
mov
cwde
and
stc
adc
iret
or
call
aad
add
xor
fist
push
test
ds
out
xor
push
xor
adc
outs
jne
cwde
add
jl
daa
xchg
mov
movs
sbb
nop
push
xchg
jae
inc
outs
scas
leave
xor
xchg
pushf
jo
cmp
xchg
scas
xchg
addr16
push
adc
xchg
xchg
push
jmp
mov
in
fild
mov
inc
retf
fcom
inc
aam
push
cs
outs
imul
sbb
popa
leave
inc
lods
cmp
pushf
add
retf
pop
pop
mov
and
mov
and
sbb
retf
inc
pop
mov
push
cmp
mov
ja
sar
mov
xchg
cs
test
cwde
dec
push
mov
mov
mov
push
xchg
mov
mov
xchg
mov
push
push
or
xchg
into
(bad)
mov
sub
sbb
mov
pop
mov
push
cdq
push
jmp
push
jae
rcl
(bad)
push
aad
stos
out
fwait
sbb
ds
movs
repz
jmp
pop
or
stos
mov
fild
push
fwait
lahf
cmp
retf
dec
aam
in
(bad)
leave
out
std
pushf
sbb
cmps
sbb
inc
xchg
add
imul
mov
fiadd
add
push
sbb
or
mov
jae
add
rcr
sub
mov
push
aam
xchg
cmp
aad
ds
je
xchg
xchg
xor
adc
xchg
push
dec
std
mov
out
out
stos
in
pop
xchg
(bad)
adc
data16
repz
fmulp
inc
js
adc
push
or
mov
xor
adc
repz
mov
lock
lock
loop
loope
fmul
retf
push
(bad)
pop
adc
mov
push
daa
(bad)
inc
mov
jmp
or
std
inc
hlt
fild
mov
mov
jae
gs
movs
push
div
cmp
mov
les
push
push
pop
push
pop
xchg
cmp
jne
or
xor
push
aad
rol
leave
mov
mov
ins
dec
fwait
pop
pop
sub
jbe
push
push
ror
jns
mov
fidivr
and
neg
sbb
jb
sub
nop
shr
xor
call
adc
dec
lahf
cmp
push
jae
jmp
shl
push
pop
dec
(bad)
(bad)
push
mov
pushf
mov
pop
cmp
dec
push
jl
dec
push
pop
in
push
sub
xchg
add
cwde
sub
add
fwait
rcl
repz
shl
pop
int
adc
syscall
cmc
cmp
jb
jmp
dec
inc
adc
mov
sti
lods
iret
xchg
pop
iret
jb
fstp
adc
inc
aaa
(bad)
push
imul
jecxz
enter
test
push
ror
add
and
pop
jo
ins
aad
cmp
jae
in
pop
repz
sub
fbld
cmp
int
pushf
loop
outs
jo
mov
fs
in
mov
pop
sub
jmp
and
push
inc
jb
jb
(bad)
lods
pop
ds
adc
ror
hlt
mov
es
xchg
pushf
inc
cmp
(bad)
cmp
adc
xchg
call
mov
add
cmp
neg
ret
jp
js
pop
pushf
add
pop
mov
add
js
adc
neg
xor
adc
mov
into
mov
jge
mov
and
pushf
test
jg
pop
out
lea
xchg
fwait
push
mov
loopne
lods
ja
lea
mov
(bad)
stos
aad
adc
cmc
loop
aas
inc
sub
sbb
lods
(bad)
jg
xchg
adc
cmp
mov
in
mov
push
gs
aam
popf
jmp
jp
dec
mov
mov
(bad)
mov
push
push
pop
sbb
inc
call
stos
xchg
add
es
sbb
fisubr
and
stos
test
sbb
aam
rol
inc
inc
fdiv
lods
mov
fcom
push
xchg
imul
fwait
pushf
das
xor
fisubr
sbb
xchg
cmp
dec
fs
jnp
(bad)
aam
je
mov
dec
clc
mov
nop
ret
xchg
jecxz
or
scas
xchg
mov
fwait
add
mov
push
xchg
jle
ret
mov
(bad)
mov
sub
daa
mov
mov
xchg
dec
test
(bad)
push
dec
test
addr16
aaa
inc
mov
mov
dec
div
loop
stos
xchg
lods
and
inc
push
aam
loop
sbb
sbb
mov
sbb
adc
call
mov
inc
neg
ret
lahf
or
dec
or
mov
xchg
push
mov
push
push
cmp
xchg
cmc
sub
mov
mov
adc
mov
adc
xlat
sbb
imul
lods
mov
cmp
and
dec
adc
mov
cmp
fiadd
pop
and
push
and
xchg
jbe
repnz
dec
sbb
cmps
test
(bad)
mov
pop
enter
out
cwde
out
scas
ret
push
(bad)
leave
jl
adc
repnz
in
hlt
xor
push
adc
dec
mov
lea
and
leave
sbb
and
jecxz
jb
icebp
push
add
mov
push
xchg
icebp
and
push
pop
mov
pop
in
popa
inc
cmp
shr
shl
retf
adc
scas
jle
jg
in
sub
and
retf
pop
nop
inc
cmp
cld
cmp
scas
push
sub
pop
test
dec
std
pushf
mov
mov
sbb
xchg
rcl
jl
mov
and
(bad)
mov
out
jecxz
loope
xor
mov
xor
xor
xchg
ds
xchg
mov
dec
clc
jge
aad
imul
out
repz
mov
out
sub
mov
jb
bound
outs
cwd
idiv
push
cdq
xor
fbld
jmp
call
cli
xor
gs
xchg
and
cdq
xchg
(bad)
int
out
and
xor
(bad)
das
in
push
cmp
mov
repnz
dec
inc
dec
push
mov
scas
lahf
mov
call
out
pop
mov
fs
es
repz
stos
push
aad
lods
sub
mov
pop
sar
xlat
inc
into
loopne
rcr
inc
sbb
inc
pop
fistp
jo
into
cmp
inc
dec
ja
mov
mov
shr
mov
gs
icebp
inc
xor
add
pop
bound
rcl
je
div
xchg
gs
movs
or
xor
adc
lods
(bad)
(bad)
mov
lods
lods
jae
push
retf
jge
loopne
ins
mov
fist
shl
inc
cs
sub
and
out
and
inc
and
ss
loope
je
push
jns
stos
sub
xchg
pop
jmp
mov
sbb
add
out
sub
push
call
in
stc
push
frstor
in
xchg
mov
ror
pop
jecxz
mov
mov
popf
fadd
fist
pusha
mov
xchg
cmp
adc
(bad)
hlt
sub
sub
cmp
cmp
imul
fdivr
ins
mov
and
movs
neg
mov
push
sub
push
(bad)
xor
sub
ret
sar
cs
dec
mov
pushf
push
jg
cli
ds
add
sub
sub
cmp
inc
rol
and
lods
xor
xor
stos
or
stos
fwait
bound
les
mov
adc
fwait
stc
adc
mov
sahf
push
shl
mov
(bad)
push
adc
call
mov
cmc
jl
jb
stos
dec
push
dec
stos
sbb
in
pop
sbb
or
pop
and
mov
add
or
shl
and
fwait
sub
inc
rcl
nop
dec
int
mov
daa
mov
(bad)
test
xlat
inc
cli
jg
lahf
add
or
or
(bad)
xor
sub
ins
dec
cmps
jge
jle
iret
loop
nop
inc
or
xchg
test
int
out
fcom
mov
in
sbb
loopne
fldcw
shl
sub
das
push
adc
inc
cs
shl
sub
xchg
mov
(bad)
fisttp
sbb
mov
adc
lods
xchg
cld
push
inc
cli
fmul
sbb
mov
push
leave
test
repnz
inc
out
imul
scas
pop
in
stos
out
jecxz
xchg
add
test
call
test
lock
mov
in
push
gs
sub
and
pop
dec
test
inc
push
xor
sub
imul
jecxz
inc
imul
add
and
push
enter
rcr
in
in
or
(bad)
shl
xchg
adc
outs
push
xor
cmp
jmp
std
in
arpl
inc
sub
pop
and
xor
hlt
sub
adc
sbb
into
sbb
jae
in
outs
push
and
inc
jmp
sbb
mov
out
fs
aam
shl
mov
in
pop
and
aas
outs
jmp
loopne
push
scas
fisttp
push
ret
xor
adc
sub
sub
fcmovnbe
nop
push
sbb
mov
in
xchg
pop
int
stos
sbb
mov
inc
call
mov
call
lahf
idiv
pop
(bad)
ds
dec
inc
cmc
and
jbe
cli
sub
and
cmp
ds
mov
sub
jle
sbb
imul
je
and
leave
scas
xor
xchg
rcr
or
daa
mov
sbb
sbb
mov
mov
adc
les
or
aam
aam
in
pop
popa
test
das
test
scas
clc
add
outs
pop
pop
xor
adc
xchg
sbb
in
hlt
mov
mov
pop
ret
in
icebp
pop
jnp
dec
inc
sbb
pop
inc
inc
mov
xchg
ja
or
(bad)
add
in
iret
cld
mov
inc
dec
and
aaa
push
cmp
test
mov
and
push
xchg
outs
mov
or
js
mov
(bad)
xchg
push
add
mov
in
add
(bad)
shr
or
stc
adc
jge
fbld
or
cwde
add
ins
cmp
ja
cmp
xor
movs
(bad)
push
inc
cs
repz
cdq
push
cmp
in
cld
inc
sbb
xor
je
jb
cdq
fisubr
pop
(bad)
mov
push
push
dec
fild
cmc
cmp
fmul
lahf
inc
dec
dec
cld
pop
movs
jae
fist
adc
popf
lea
stos
or
out
lods
es
popf
mov
sti
or
dec
lock
lods
push
cmp
call
repnz
int
mov
in
outs
jle
dec
pop
or
(bad)
(bad)
stos
sbb
and
(bad)
pop
mov
pop
lods
repz
add
push
mov
pop
sbb
dec
dec
jl
mov
es
stc
daa
xchg
add
ret
sbb
(bad)
mov
aad
into
shl
jge
add
sbb
jl
addr16
call
jp
inc
or
ss
mov
push
jbe
out
test
mov
cli
push
sub
fucompp
or
sub
cmp
test
je
sub
movs
lock
push
test
aaa
adc
jp
cmps
sub
ss
pop
jecxz
aad
rcr
test
movs
es
hlt
imul
jnp
test
rcr
outs
repz
dec
and
add
movzx
pop
cmp
adc
cvtpi2ps
sub
push
push
pop
or
stos
imul
scas
ins
sti
inc
retf
mov
loop
cmps
cmp
lock
sti
cs
cmc
dec
push
imul
adc
pop
sar
out
pop
div
dec
scas
jp
cmp
repnz
mov
leave
es
pop
pop
int
push
stc
loope
rcr
cmp
in
rol
movs
mov
sub
call
neg
jle
sti
push
(bad)
pusha
test
stos
mov
(bad)
mov
lock
int
mov
test
or
cmovp
dec
push
pop
sbb
sbb
ins
fisubr
int3
inc
fdivr
xchg
ds
out
arpl
fidiv
dec
lods
pop
fs
jmp
ss
xor
mov
sub
cmp
inc
xor
shl
fisubr
push
cmp
ds
add
mov
test
cdq
sub
outs
(bad)
mov
enter
outs
scas
test
lods
mov
jle
daa
sbb
out
iret
jecxz
pop
call
pop
and
xchg
jns
and
cld
pop
fnstcw
div
and
xor
sub
scas
aas
xor
pop
cmp
add
popf
xchg
pusha
fsubr
push
repz
or
xchg
mov
mov
push
push
mov
shr
inc
cmp
add
fs
stos
mov
sbb
popf
std
lods
pop
loop
adc
jge
pop
or
daa
stos
sub
rol
sub
cli
adc
mov
loop
sbb
add
push
mov
xlat
xchg
push
sub
dec
aaa
pop
dec
adc
adc
sub
mov
ret
xchg
inc
sbb
xor
js
outs
xor
inc
loopne
mov
cli
inc
int3
inc
lods
cmp
not
fcmovnbe
gs
pop
mov
cmps
fnstsw
adc
jne
push
iret
sbb
jecxz
enter
pop
loopne
scas
or
push
inc
(bad)
rcr
xchg
mov
and
add
shr
cwde
ret
xchg
lea
fild
xchg
iret
loopne
jle
mov
push
cdq
xchg
mov
push
add
add
addr16
pop
retf
pop
retf
mov
clc
push
cs
inc
or
cmp
lea
jne
mov
lods
xor
mov
popa
mov
call
add
sbb
shr
push
lods
xchg
mov
cmp
scas
pop
xor
mov
int
retf
arpl
inc
ret
sub
out
dec
or
(bad)
mov
jmp
dec
fnsave
xlat
pop
sub
xchg
jns
xchg
in
imul
cli
sbb
jge
(bad)
test
out
push
(bad)
or
and
inc
cmps
iret
pop
pop
cmp
and
jge
lods
sub
cld
mov
adc
sbb
pop
jne
pop
lds
pop
test
mov
push
retf
xchg
or
push
jge
xchg
jne
std
(bad)
sub
mov
and
lahf
les
dec
sti
dec
mov
xor
pop
and
shl
int3
pushf
cmp
mov
mov
or
ss
pusha
cmp
mov
leave
cs
inc
push
sub
imul
xor
movs
cs
loop
adc
(bad)
cmps
cli
add
jnp
pusha
or
div
mov
lds
jo
mov
popa
mov
cmps
scas
mov
fst
push
outs
mov
(bad)
pop
inc
xor
push
push
add
retf
loope
add
(bad)
cmp
xchg
dec
ins
adc
dec
sbb
mov
in
dec
addr16
mov
(bad)
(bad)
mov
pop
jp
cmp
mov
inc
sbb
push
add
stos
icebp
loop
add
dec
jl
je
xchg
adc
and
jae
outs
aas
mov
or
cmp
sub
lods
mov
addr16
lahf
dec
jbe
(bad)
cmp
mov
sub
adc
cmp
lods
outs
push
mov
(bad)
xchg
xchg
cmp
pop
loopne
jp
mov
push
popa
add
leave
jecxz
fldenv
or
scas
jecxz
retf
pop
popf
push
cdq
or
or
sub
cld
lods
ficomp
dec
outs
movs
add
outs
call
(bad)
xor
adc
cdq
jle
sub
leave
aas
loopne
call
das
pop
sti
jnp
sub
es
mov
dec
jno
out
xchg
xor
jbe
fwait
mov
sub
push
fcomp
push
icebp
or
sub
and
cdq
adc
ins
fisub
cmp
shr
mov
pop
xchg
cs
popa
call
adc
mov
aam
mov
mov
in
xchg
inc
jb
movs
dec
jge
outs
fcmovnu
(bad)
lahf
imul
test
scas
push
or
mov
jb
fcomp
add
xlat
mov
imul
mov
mov
fcom
fidiv
popf
fstp
out
pop
xchg
out
lods
retf
outs
cmp
push
push
es
adc
cdq
hlt
fstp
jno
push
mov
adc
cli
xor
fisubr
xchg
jns
mov
xor
mov
sbb
idiv
inc
mov
ret
in
mov
mov
out
std
xchg
pop
int
ins
inc
sub
mov
inc
and
fisttp
test
movs
dec
xor
repz
dec
test
add
shr
arpl
adc
ror
popa
jns
mov
scas
aaa
xchg
and
movs
add
xor
ins
add
xchg
stos
dec
pop
scas
aad
inc
bound
mov
sub
outs
aas
btr
(bad)
sub
in
and
mov
dec
(bad)
arpl
stos
inc
or
jg
mov
or
cmp
call
lea
jne
xor
outs
pop
fst
pop
(bad)
out
rol
lock
aad
dec
inc
sbb
pop
and
mov
pop
fwait
mov
sub
jbe
and
lds
bound
cmp
or
xchg
(bad)
idiv
mov
xchg
fidivr
ja
neg
pop
adc
stc
sbb
fsub
sub
(bad)
dec
shl
sub
frstor
sbb
xchg
xchg
inc
mov
fdiv
out
cld
sbb
mov
jne
mov
daa
or
push
push
sub
cmp
outs
cwde
arpl
mov
bswap
push
mov
stos
add
xchg
aas
rcr
adc
popa
xchg
add
arpl
(bad)
inc
mov
int3
rol
ret
aad
pop
xchg
in
push
push
cdq
enter
xchg
pop
lods
xchg
outs
popa
in
adc
pushf
jbe
addr16
push
add
xchg
lds
gs
mov
sbb
cmp
cmp
lds
inc
jb
shr
ss
mov
daa
lahf
es
shl
lods
ret
fwait
lods
push
mov
int3
sahf
mov
test
and
inc
out
cli
mov
pop
xchg
ret
dec
pop
pop
xchg
sbb
fisub
cmps
jno
adc
inc
inc
in
scas
or
rcr
fsub
std
fdiv
shl
sbb
mov
(bad)
mov
loopne
jle
in
and
mov
and
cdq
xor
sub
cmps
pop
mov
sbb
ins
sti
mov
push
cmp
add
rcl
(bad)
std
push
lods
gs
shl
and
jmp
leave
inc
sub
inc
xor
fst
mov
add
xor
or
mov
xchg
test
test
jbe
adc
stos
fsubr
fadd
mov
pop
mov
add
ja
push
test
in
xchg
enter
mov
popa
(bad)
lods
cmp
xor
out
mov
sbb
and
ret
dec
ins
icebp
out
stos
mov
sbb
popa
lock
or
mov
push
imul
test
xor
or
dec
call
push
lea
push
sbb
sub
aas
outs
pusha
jb
sub
mov
mov
adc
mov
sbb
xchg
arpl
mov
out
cmp
mov
mov
mov
mov
cmps
stos
fld
hlt
mov
jg
(bad)
cmc
repz
popa
call
cmp
xchg
xor
jmp
add
or
call
sbb
nop
(bad)
clc
outs
bound
push
inc
sti
out
(bad)
stos
mov
mov
xor
push
clc
xchg
pop
test
cmp
xor
jno
jmp
enter
ins
xchg
rcl
out
jp
je
popf
add
sub
mov
mov
pushf
dec
mov
push
mov
lea
(bad)
and
in
and
jo
xchg
sub
and
dec
enter
sbb
push
xor
and
imul
outs
jns
(bad)
in
and
dec
adc
jmp
cmp
jmp
lods
add
lea
lods
pop
jp
retf
stos
test
(bad)
rcr
pop
test
cli
mov
aaa
mov
dec
in
loopne
js
mov
mov
jbe
xor
cmc
sar
push
fstp
add
inc
movs
test
cld
mov
xor
sbb
jo
add
das
or
ins
sub
cmp
fwait
shl
or
mov
cli
in
out
mov
call
xor
mov
idiv
push
push
xchg
call
retf
nop
or
addr16
pop
mov
mov
and
cmp
push
aad
das
pop
stc
movs
mov
in
fst
shl
mov
scas
test
ret
pusha
out
(bad)
ja
inc
xchg
mov
adc
lock
pop
and
and
xchg
jecxz
popf
cld
dec
call
jb
call
pop
repnz
inc
repnz
aam
mov
add
adc
cmp
sbb
rcr
push
rcl
push
fadd
outs
sub
mov
mov
mov
push
retf
into
and
movs
jl
sub
outs
mov
jb
xor
inc
xor
rcr
ins
cmp
inc
mov
lods
pusha
ror
or
out
gs
adc
inc
(bad)
push
mov
dec
xchg
pop
ficom
data16
xchg
push
jmp
cmp
popa
in
ja
ret
fld
cmps
mov
sub
call
movs
dec
xor
imul
mov
mov
inc
push
push
push
in
mov
mov
cli
pop
std
fild
idiv
ja
mov
shl
xor
stos
repnz
xor
fiadd
push
sub
clc
mov
pop
int3
dec
pop
and
pop
jnp
cmp
mov
xor
aam
(bad)
dec
bound
arpl
repnz
or
jge
in
es
lods
jae
dec
xchg
mov
leave
jle
sub
add
pop
and
push
aad
cmp
push
mov
les
scas
add
fwait
cli
jae
and
mov
add
bound
(bad)
cld
dec
xor
pop
stos
ret
jno
es
mov
in
mov
jp
pop
mov
xchg
(bad)
es
sub
sbb
add
jl
mov
rcl
mov
adc
xchg
jge
and
test
jns
cdq
dec
cmp
xchg
push
inc
add
or
mov
jg
xor
and
push
jg
inc
ss
dec
push
xchg
(bad)
xchg
or
in
dec
imul
xchg
mov
retf
loopne
mov
jo
sbb
fidivr
stos
cmc
add
cdq
mov
pop
into
mov
clc
push
xchg
xchg
dec
sub
test
movs
sbb
push
mov
lods
cdq
nop
rol
shr
repnz
pop
inc
xlat
or
pop
test
ret
ins
stc
jbe
pop
jmp
stos
inc
mov
imul
xor
lods
cmp
cmps
sbb
jp
pop
clc
repz
mov
jge
jae
out
test
inc
and
pop
sbb
xor
jecxz
xchg
pop
pop
xchg
dec
mov
cmc
mov
iret
pushw
sbb
maskmovq
pop
cdq
cmp
cmc
sub
fstp
mov
cld
fmul
dec
sub
or
call
pop
movs
xor
sahf
pop
jle
mov
pop
mov
std
add
mov
es
daa
jnp
adc
xor
mov
mov
psubb
adc
mov
dec
xchg
and
sbb
(bad)
ins
fidiv
push
xor
jge
lods
repnz
mov
rcr
dec
xor
add
mov
mov
das
aas
cmps
sub
stos
pop
push
mov
or
xor
ds
(bad)
pop
stc
ds
rol
push
(bad)
jle
bound
es
push
fdivr
xchg
add
pop
out
sub
sub
cmps
(bad)
icebp
mov
adc
push
in
push
out
sub
aad
in
push
test
rcr
fbstp
jbe
in
popf
push
jbe
sub
rcr
add
add
cbw
and
or
and
xlat
dec
out
xlat
sar
xchg
aas
or
clc
jp
inc
fisttp
jge
aas
dec
push
cmps
cmp
pop
and
sbb
jle
fstp
pushf
xchg
sahf
adc
es
inc
popa
lea
prefetcht1
popa
test
mov
pop
inc
je
mov
aaa
and
mov
sar
scas
xlat
and
sahf
into
nop
sub
xlat
cld
cmp
sbb
push
cmp
int
add
cld
push
ret
add
jae
or
leave
sbb
not
dec
arpl
stos
fild
out
push
movs
loopne
icebp
add
std
lea
jl
fisttp
iret
dec
jmp
std
jecxz
fdivr
push
aaa
xchg
xchg
cmp
popa
lds
fisub
or
sub
pop
fnsetpm(287
cmp
mov
cmc
scas
ja
lock
inc
fidiv
pop
aaa
jmp
cmc
fcmovu
mov
add
xor
out
repz
sub
inc
in
mov
inc
scas
fidiv
inc
int3
ja
test
pop
stos
mov
push
mov
mov
dec
inc
cld
mov
imul
mov
or
aam
neg
test
gs
jb
popf
scas
add
outs
mov
cmps
mul
fnsave
mov
not
push
nop
xchg
fidivr
pop
test
aas
sbb
cmc
cmp
pop
out
sbb
inc
adc
arpl
push
or
in
scas
retf
jbe
jb
dec
add
add
cmp
mov
mov
je
(bad)
sub
ss
(bad)
or
xchg
cmp
sahf
stos
inc
mov
inc
cmp
data16
cmp
adc
adc
fdiv
bound
adc
xor
inc
push
popa
arpl
idiv
cwde
cmp
cli
test
aam
ja
ins
sbb
cmp
adc
call
std
imul
sub
bound
scas
lahf
cmp
mov
(bad)
je
test
or
pop
pushf
mov
cmp
mov
cmp
js
popa
cmp
call
inc
xor
scas
icebp
add
cmps
mov
int3
movs
jmp
imul
lahf
cli
add
mov
repnz
stc
aaa
cmp
push
or
push
mov
fcomi
imul
cmp
jmp
jns
xchg
sub
add
or
gs
dec
ror
mov
fbstp
xchg
mov
das
popf
jne
pushw
inc
stc
idiv
dec
mov
fs
(bad)
ins
or
(bad)
nop
jmp
add
xor
sbb
push
movs
and
ss
stc
mov
add
scas
and
mov
(bad)
imul
in
mov
fwait
pop
add
or
ins
(bad)
dec
xchg
add
mov
push
cld
imul
cmp
loop
cs
fiadd
clc
sub
shl
xchg
push
cld
jmp
or
lds
in
test
cmp
mov
pop
jge
or
sbb
dec
rol
cmp
ja
ret
pop
cwde
push
sahf
(bad)
fiadd
dec
loope
xchg
out
and
fs
hlt
je
mov
jne
out
xor
push
jne
loope
inc
dec
gs
cmp
jmp
ret
dec
ss
dec
pusha
cmp
cwde
test
sbb
cmps
cmp
scas
std
sub
mov
test
in
mov
pop
pop
mov
out
(bad)
or
pop
dec
xchg
bound
shr
and
or
cli
mov
add
nop
push
neg
mov
mov
in
inc
(bad)
or
add
mov
lods
push
arpl
jmp
nop
jns
sar
sbb
jbe
mov
je
push
sub
adc
xor
dec
repnz
movs
or
jg
sar
xchg
pop
hlt
pushf
cmp
loopne
mov
fsub
xchg
cmp
repnz
xchg
pusha
scas
push
push
xor
out
repnz
adc
push
inc
(bad)
mov
pushf
xchg
ss
mov
or
inc
push
dec
dec
mov
sahf
fwait
push
jecxz
or
or
dec
xchg
add
adc
jb
cmps
adc
xor
mov
jae
mov
(bad)
xlat
or
les
in
test
aad
sub
add
sub
clc
jne
mov
inc
sbb
mov
fadd
arpl
xor
daa
jo
adc
xor
push
push
mov
out
add
out
pop
outs
cmp
adc
xor
mov
sub
dec
retf
xchg
jno
xchg
aad
adc
icebp
ins
mov
jns
in
jnp
adc
sbb
push
dec
repnz
adc
out
pop
stos
fcom
lock
or
nop
scas
cmp
inc
pop
in
out
xor
adc
pop
cmps
repz
pop
js
fldenv
jp
inc
std
inc
call
pop
inc
push
jb
in
and
les
sbb
int3
push
xor
pop
js
out
sub
popf
xchg
adc
add
dec
and
mov
mov
sbb
adc
ror
jle
xchg
sub
(bad)
aas
xchg
in
xor
push
frstor
repnz
xadd
sbb
inc
mov
in
sbb
add
or
shr
mov
pusha
add
jae
dec
xchg
mov
in
and
das
add
mov
movs
ror
adc
outs
dec
mov
pop
add
repnz
leave
dec
div
mov
jp
mov
sahf
pop
movs
dec
daa
mov
retf
and
cwde
mov
fiadd
pop
les
movs
outs
std
(bad)
mov
jl
add
push
cmp
aaa
(bad)
rol
or
mov
jo
xor
pop
sbb
or
not
pop
repnz
jae
inc
ins
dec
test
xchg
mov
movs
loopne
xchg
push
xlat
ret
sbb
clc
stos
pop
pusha
lock
std
cmp
sub
adc
and
jecxz
mov
mov
xchg
test
repz
pusha
out
mov
sub
dec
or
xchg
jb
mov
shr
test
movhps
rol
pop
cmps
pop
pop
cmp
pop
in
(bad)
dec
xor
mov
or
bound
js
adc
cwde
sub
fild
jns
pop
retf
(bad)
les
and
and
or
dec
cmc
out
push
sbb
xchg
retf
mov
push
pop
xor
cdq
cdq
test
test
pop
mov
(bad)
in
(bad)
cmp
mov
sub
das
in
out
pop
sbb
ror
ins
cdq
ret
cmp
sub
(bad)
mov
sub
aam
dec
mov
cmc
je
mov
mov
mov
das
iret
in
leave
inc
js
cld
xor
push
xor
add
inc
add
push
lock
repnz
xchg
test
mov
fisub
fdivrp
push
outs
test
sub
iret
dec
jbe
call
cld
xor
cwde
cld
or
mov
(bad)
fidiv
pushf
xor
leave
dec
test
push
cmp
push
and
scas
pop
mov
sub
push
lods
stos
(bad)
adc
nop
add
test
sbb
clc
out
aaa
inc
jle
mov
push
fcmovnu
sbb
xchg
mov
dec
jecxz
aad
retf
loopne
hlt
pop
add
repz
adc
int
add
loope
xchg
mov
imul
ins
fs
xchg
xor
hlt
fst
add
jl
inc
jae
out
in
inc
jae
sub
test
scas
pop
sub
clc
pop
aad
fisubr
int3
xor
xchg
in
stc
(bad)
mov
lds
inc
fst
jmp
adc
dec
jmp
adc
stc
aaa
lods
stos
aad
jmp
jl
(bad)
dec
mov
sub
mov
mov
add
cwde
mov
les
(bad)
aam
ja
adc
addr16
push
jb
es
pushf
loope
pop
or
pop
push
mov
adc
and
xor
inc
pop
xor
dec
add
out
pop
js
mov
in
cmp
iret
jno
cld
stos
dec
imul
mov
jmp
in
lods
mov
dec
push
adc
scas
jno
mov
mov
push
mov
mov
stos
xor
data16
push
pop
pushf
mov
ficom
in
add
adc
sub
mov
aas
std
xor
sub
movhps
loopne
(bad)
mov
loope
ror
in
mov
or
jp
iret
(bad)
scas
(bad)
retf
adc
js
push
loopne
cwde
loop
jmp
or
jecxz
adc
lahf
adc
push
cli
call
and
push
jb
xchg
shl
fist
dec
mov
pop
into
dec
clc
popa
stos
sbb
call
(bad)
lock
stos
add
popa
enter
scas
jo
sbb
in
mov
adc
out
sti
mov
cmp
sti
ds
push
dec
jl
cmps
cmp
jmp
cmps
sub
cmp
std
lock
iret
and
fwait
dec
jae
push
xor
and
pop
int
jnp
fstp
leave
jl
(bad)
rol
shr
ret
xchg
xor
fcom
jl
and
fbstp
popf
or
mov
addr16
jp
dec
div
pop
mov
outs
cmp
call
mov
push
sub
mov
or
mov
add
pop
fs
mov
adc
cmp
or
scas
mov
dec
dec
adc
add
cmp
pop
pop
adc
adc
das
scas
xor
stos
idiv
push
lea
sub
daa
retf
(bad)
adc
div
mov
inc
cld
jae
mov
mov
mov
iret
mov
jne
lods
lods
stos
cmc
out
mov
hlt
lods
cmp
add
(bad)
test
or
xchg
ror
dec
fs
aam
(bad)
(bad)
in
ret
xchg
in
imul
fs
test
out
mov
imul
xchg
add
mov
cmp
leave
fdivr
not
push
add
xor
xchg
retf
dec
repz
xor
lahf
xchg
mov
aam
lahf
jno
shr
push
addr16
in
pop
ins
pop
push
out
adc
dec
jo
push
imul
imul
xchg
mov
stos
and
push
rol
cli
mov
sbb
iret
arpl
cmp
loopne
push
push
ss
add
sbb
mov
mov
rol
stc
sub
push
jo
mov
mov
loope
mov
cli
out
push
xor
ss
arpl
cli
cmp
out
mov
sub
sub
cld
data16
adc
sub
jl
js
imul
lahf
sahf
call
pop
mov
inc
fiadd
retf
mov
sub
sbb
xor
in
aas
in
fdiv
loope
mov
jle
push
pop
cmp
mov
jl
pop
rcl
mov
xchg
xchg
and
into
mov
mov
mov
popf
mov
jbe
push
cmp
dec
mov
xchg
mov
popf
gs
fild
inc
xchg
or
pop
jb
or
or
shr
call
sti
adc
inc
idiv
es
pop
nop
sti
das
xor
mov
rol
ins
mov
and
int3
movs
out
mov
sbb
call
movs
gs
add
mov
inc
in
int
push
and
push
lds
aaa
pop
jge
fwait
ja
(bad)
mov
imul
or
dec
add
jo
retf
mov
stos
jmp
(bad)
ja
cmp
lods
out
pop
cmc
stc
and
sbb
sub
dec
rcl
aaa
jnp
inc
cmps
fs
imul
mov
sahf
shl
mov
adc
sub
xchg
std
fild
jno
mov
cwde
jmp
push
inc
jle
or
addr16
mov
(bad)
not
xor
xor
in
pop
mov
mov
xor
movs
add
movhps
mov
xchg
hlt
hlt
pop
mov
div
outs
jecxz
in
xchg
inc
mov
loopne
sbb
push
or
inc
inc
dec
inc
popf
mov
sbb
dec
push
lahf
pushf
jb
inc
push
stc
mov
hlt
or
mov
lock
stc
jne
aad
in
shl
aam
pop
mov
push
ja
fisttp
adc
mov
ret
mov
pop
mov
mov
cli
popf
sub
mov
jo
lds
xor
outs
adc
inc
pop
test
cld
arpl
jp
jecxz
push
lds
push
ss
dec
sub
popf
lods
push
add
and
scas
mov
loop
mov
retf
movs
adc
push
pushf
xchg
fiadd
mov
xor
xchg
int
jae
clc
sar
fs
lock
fadd
mov
scas
push
(bad)
mov
inc
xchg
mov
jmp
dec
push
inc
adc
rcl
cmps
and
out
or
inc
dec
pushf
nop
popf
cmp
and
or
adc
adc
lea
push
dec
fimul
xchg
outs
or
icebp
popf
xchg
mov
dec
repz
std
cmp
dec
out
sbb
push
mov
jbe
dec
fwait
shr
shl
xchg
jge
cmp
out
dec
or
inc
lods
dec
push
sbb
push
xchg
fnstsw
sbb
sar
mov
xor
and
les
cmp
cli
xor
fs
les
inc
loopne
mov
mov
cmp
js
stos
in
adc
jo
sub
ins
dec
mov
jl
jmp
adc
repz
xor
sbb
jecxz
push
pop
ret
(bad)
retf
loopne
fs
shl
test
mov
out
pop
daa
call
rdpmc
sar
dec
mov
push
fisub
cmp
mov
je
rcl
daa
xor
pushf
ins
int3
lods
cmp
call
cmp
enter
aaa
jp
sbb
retf
mov
sidtd
(bad)
sbb
mov
arpl
popa
push
push
mov
mov
test
xchg
sub
jmp
fldenv
mov
cmc
clc
jmp
out
and
mov
or
xchg
mov
add
or
dec
mov
enter
mov
iret
mov
dec
fiadd
je
and
xor
sub
jge
mov
lods
stc
cmp
and
mov
into
call
(bad)
test
dec
add
xchg
movs
xchg
dec
inc
outs
loop
mov
and
(bad)
jb
inc
push
mov
pushf
mov
mov
lods
lds
jle
imul
pop
mov
sub
fisubr
not
push
and
ror
mov
aaa
rcl
sbb
jo
cmp
int
lahf
sub
dec
lods
fst
adc
pop
pop
pushf
jmp
aaa
adc
and
sub
push
xchg
xchg
or
xor
and
aad
sbb
popf
pop
xchg
repz
jmp
mov
jno
scas
aad
pop
mov
cdq
xchg
bnd
or
add
loope
pusha
outs
stos
mov
aas
mov
imul
rol
cmp
and
or
dec
push
cdq
(bad)
mov
rol
(bad)
lods
test
cmp
cmp
mov
rcl
or
mov
mov
mov
mov
pop
out
adc
idiv
js
loope
mov
cmp
inc
push
sbb
add
icebp
push
jl
dec
jge
imul
fisttp
mov
retf
dec
outs
cmp
out
scas
cwde
mov
test
push
inc
jo
mov
mov
jg
push
mov
(bad)
repz
push
add
push
mov
sbb
mov
fnstcw
mov
and
imul
mov
pop
dec
pop
jo
dec
mov
mov
lahf
sti
or
dec
aam
push
push
test
cli
out
inc
outs
jae
or
cdq
das
push
into
leave
jp
cmp
push
sbb
mov
push
mov
clc
test
mov
cs
jb
leave
mov
or
imul
aaa
jno
add
shr
cdq
add
cmps
sbb
pop
in
nop
cmp
jecxz
imul
js
jne
jae
sbb
lds
xchg
push
adc
add
sbb
and
in
inc
stos
test
mov
pop
mov
inc
lss
jge
rcl
xchg
mov
or
jmp
xor
pushf
js
mov
inc
dec
sbb
xchg
hlt
sbb
cmps
jns
pop
dec
inc
mov
loope
mov
icebp
pop
pop
ins
cs
xchg
or
mov
mov
push
jns
dec
sub
mov
mov
push
arpl
xchg
xchg
test
add
(bad)
imul
loopne
cmps
adc
inc
lahf
xchg
sub
daa
or
hlt
xchg
inc
sti
push
in
int
out
cmp
hlt
mov
inc
nop
dec
(bad)
pop
push
test
cs
adc
xchg
imul
ret
adc
retf
cmp
push
ror
(bad)
xor
jbe
mov
sbb
pusha
test
lods
mov
fisttp
fcom
into
sub
xchg
std
int
push
je
xor
adc
cld
data16
nop
cmps
jl
fs
pop
push
pop
inc
sub
push
fwait
sbb
out
out
push
push
cli
movs
popf
dec
js
xchg
sbb
pop
repz
pushf
test
dec
ins
and
dec
aas
std
mov
dec
ds
jnp
cmp
inc
push
repnz
stc
fwait
enter
push
adc
sub
mov
push
shr
popf
push
das
mov
xor
jo
ret
mov
and
pop
mov
push
pushf
test
cmp
mov
jbe
or
(bad)
cld
int3
or
jmp
data16
adc
pop
mov
cmp
outs
push
test
cs
repz
sub
inc
dec
jmp
ror
cmp
(bad)
test
imul
add
cli
sbb
xchg
mov
gs
mov
mov
ins
adc
and
inc
cmp
(bad)
push
or
jbe
cmp
mov
loopne
dec
lds
loop
ret
cli
push
adc
daa
nop
shr
push
sub
push
aaa
sti
mov
adc
jecxz
dec
and
pop
loop
and
add
pushf
lods
in
push
gs
daa
dec
loope
push
fldenv
in
ja
adc
js
out
push
dec
(bad)
outs
sub
pop
mov
adc
sbb
les
lock
aas
push
pop
dec
daa
push
neg
movs
icebp
loope
xchg
fsubr
lock
repnz
imul
int
jno
xlat
repnz
sbb
mov
mov
add
fadd
lods
test
ret
sti
push
(bad)
inc
or
pushf
lods
shl
mov
frstor
adc
add
pushf
add
mov
xlat
cmp
or
pop
fistp
fnstcw
mov
mov
bswap
in
hlt
popf
and
mov
mov
ja
inc
jae
dec
data16
loopne
jb
cmp
popf
push
add
ja
je
push
mov
cmp
cs
shr
adc
stos
punpckldq
sub
in
cli
jmp
out
cmc
ret
xchg
jecxz
jecxz
adc
mov
xor
push
cmps
or
aas
aam
pop
stos
jae
mov
pop
leave
push
sbb
leave
dec
jno
add
sbb
scas
mov
stc
mov
xor
bnd
inc
dec
daa
je
fs
sub
lods
ret
lea
and
push
sti
mov
push
xor
data16
das
sub
call
cdq
adc
(bad)
jae
test
jnp
mov
outs
pop
dec
call
inc
fcmovb
or
popa
out
and
loop
ds
and
cmp
mov
in
mov
outs
push
cli
xchg
jae
ror
aas
sahf
shr
hlt
fisub
push
aaa
inc
mov
cmp
jge
mov
(bad)
and
loope
(bad)
jle
fisttp
repnz
mov
loope
add
xchg
dec
sbb
fld
add
push
cdq
cmc
std
cmp
push
jg
adc
xor
mov
(bad)
out
sbb
sbb
jb
fcmovu
sbb
mov
pop
and
add
jmp
mov
mov
data16
pusha
gs
jmp
mov
fwait
jno
mov
mov
sahf
dec
cs
pop
daa
or
bound
cmp
inc
or
scas
mov
xor
xor
pushf
loope
xchg
sbb
stc
cld
pusha
inc
gs
call
adc
movs
sar
xor
lods
adc
add
mov
jno
mov
add
movs
shl
push
inc
fs
xchg
test
int
popf
mov
jecxz
push
call
sbb
pop
xor
pop
test
dec
inc
in
fbld
or
xchg
cmps
cmp
jg
int
mov
adc
inc
into
in
sbb
or
cld
ss
jae
retf
pop
outs
pop
add
or
cmp
cdq
outs
shl
cmp
rcr
pusha
daa
pop
cmp
(bad)
sbb
xor
cli
iret
rcl
or
pop
mov
fdivr
cdq
ja
mov
cmp
fcom
(bad)
sbb
fidivr
lock
cli
xchg
into
rcl
stos
cli
out
mov
in
fnsetpm(287
cmp
test
pop
inc
add
push
pop
jbe
arpl
sbb
lods
add
mov
adc
add
adc
mov
add
dec
mov
test
jmp
leave
scas
in
lea
ins
add
ins
pop
sbb
jae
mov
push
fcomp
das
(bad)
in
mov
pop
lods
or
xchg
cmp
pushf
mov
push
inc
sahf
call
dec
scas
and
out
jge
or
adc
setl
popa
cwde
mov
inc
outs
data16
adc
ret
cmp
dec
movs
in
or
jecxz
retf
rcr
add
cmp
clc
dec
mov
sub
data16
push
push
xchg
jge
mov
fsubrp
and
fdiv
in
mov
into
sub
push
shl
or
add
jne
sbb
sbb
push
fcmovne
jae
rcr
cs
xchg
scas
and
(bad)
out
std
jmp
pop
scas
fnsave
mov
retf
int3
mov
nop
ins
rcr
retf
dec
xor
jb
xchg
jp
sbb
add
cmp
pop
jl
ds
push
xor
das
lock
movs
scas
pop
dec
dec
stos
arpl
std
dec
sub
test
mov
dec
mov
inc
aad
inc
push
and
mov
outs
dec
lea
dec
iret
adc
loopne
(bad)
loopne
fisttp
jmp
xor
adc
mov
push
add
in
mov
cdq
nop
mov
lods
fld
rcl
out
pop
pop
ret
inc
add
jecxz
int
call
sahf
loopne
mov
cli
movs
dec
hlt
out
mov
cmp
and
jl
pop
pop
call
jns
dec
stc
dec
adc
sbb
movs
hlt
jb
scas
imul
add
popa
push
cdq
mov
(bad)
cmp
pop
in
fiadd
inc
rol
retf
(bad)
jno
mov
push
pop
arpl
loope
mov
and
sar
mov
xor
push
sbb
dec
jl
add
add
jne
jb
jnp
cmp
cwde
sbb
inc
and
ds
mov
xchg
enter
mov
push
std
jmp
xchg
inc
cmp
(bad)
sbb
repnz
jmp
push
jle
dec
fsub
stos
mov
and
test
outs
mov
bound
in
pop
and
icebp
call
pusha
add
push
jo
xchg
iret
les
cmp
jns
int3
xchg
(bad)
cmp
inc
pop
mov
(bad)
cli
xor
sbb
cmp
bound
dec
sub
jl
sbb
ret
out
sbb
mov
pop
cmp
call
dec
test
adc
mov
adc
mov
xchg
jbe
and
imul
inc
and
and
and
fcomp
sbb
and
add
(bad)
(bad)
and
dec
fidiv
jecxz
ins
pop
pop
or
jecxz
xchg
cli
or
in
jns
into
popf
adc
mov
rcl
fwait
dec
lahf
clc
test
pop
in
pop
mov
mov
inc
aaa
cmc
mov
and
imul
retf
in
shl
ds
rcl
cli
gs
xor
mov
ss
sahf
enter
xchg
in
add
scas
mov
cmp
push
xchg
lds
adc
lea
pop
ret
pushf
test
and
add
jecxz
xor
mov
dec
push
movs
retf
rcr
sub
test
in
cmp
push
jg
mov
jp
fiadd
mov
mov
pop
or
les
mul
xor
stc
adc
ret
pop
aas
movs
xchg
and
sar
in
inc
xor
mov
jge
out
shl
pop
inc
cmp
mov
mov
jle
and
movnti
sar
and
cmp
inc
scas
push
and
sbb
mov
icebp
mov
cmp
std
aam
rol
pop
mov
sub
aas
xchg
gs
xchg
out
jne
out
lahf
xor
push
aas
dec
pop
inc
adc
mov
mov
retf
push
cmp
xchg
cmp
in
ret
push
mov
fbstp
mov
mov
add
(bad)
(bad)
push
lods
out
push
xor
xchg
cli
fs
je
outs
iret
or
ret
clc
mov
jp
frstor
xchg
in
mov
and
int
(bad)
cmp
adc
add
sub
cmp
lods
cld
cmp
or
rcr
add
cmps
sub
sub
cmp
mov
or
dec
or
mov
in
jae
push
std
push
jle
mov
dec
cmp
adc
xor
cld
dec
ins
adc
cli
mov
pop
ret
pop
pushf
in
aaa
and
je
vmovaps
mov
jge
pop
adc
inc
and
cmp
jle
fdiv
dec
xchg
ficom
retf
rcr
(bad)
xor
test
scas
mov
fdivr
xor
cli
cmps
ins
in
or
inc
and
popa
mov
fwait
inc
mov
ret
mov
pop
mov
jnp
push
dec
push
fidivr
ds
mov
call
repz
push
and
push
sti
ficom
mov
aad
adc
cdq
loope
in
ss
mov
lods
test
adc
cmp
adc
cmc
jp
cmp
or
mov
mov
stos
adc
shl
pop
inc
ja
push
mov
xor
gs
mov
in
mov
and
scas
(bad)
jne
test
adc
sbb
in
(bad)
stos
jo
mov
xor
inc
pushf
in
xor
(bad)
bound
mov
jmp
push
mov
jp
out
fwait
std
sub
cli
mov
div
jnp
cmp
fwait
sbb
push
fst
jo
cmc
mov
push
push
scas
mov
mov
cmp
add
inc
sahf
out
pop
cli
inc
ret
stc
sbb
push
xchg
sti
out
sbb
retf
xchg
mov
push
mov
(bad)
scas
leave
fsub
leave
cld
adc
in
call
test
arpl
xor
xor
lods
loopne
out
les
push
js
call
xchg
xor
push
sub
mov
test
push
shr
fstp
fbld
ss
mov
lds
loop
pop
dec
add
jbe
lock
pop
jl
sar
(bad)
dec
retf
add
mov
cdq
icebp
cdq
mov
fwait
push
sub
adc
lock
and
xor
mov
movs
(bad)
in
stc
rcl
leave
test
fsubr
inc
sar
mov
and
jp
pop
ja
pop
xchg
retf
cmc
int
out
mov
inc
mov
fsubr
dec
lods
jno
arpl
mov
or
add
push
add
mov
test
and
cmp
sub
cmc
(bad)
arpl
ds
scas
cmp
imul
xchg
lahf
stos
jns
sub
mul
mov
jmp
jns
cmc
push
sub
mul
enter
jbe
cwde
cmc
inc
dec
xchg
jl
sar
clc
fdivr
icebp
or
lds
add
out
loop
or
hlt
cdq
scas
xor
cdq
or
retf
pop
mov
pop
mov
popf
xchg
inc
jns
pop
aas
cwde
mov
(bad)
mov
mov
mov
ficom
and
adc
adc
les
lock
add
ds
lahf
jge
ficomp
jge
(bad)
sbb
fnstsw
loop
arpl
data16
test
cmp
scas
xchg
add
leave
sti
ds
and
add
ds
repnz
push
xchg
fmul
enter
inc
sub
fnstcw
mov
jnp
in
lds
(bad)
jmp
aas
cs
(bad)
cli
outs
xor
loope
out
(bad)
adc
(bad)
aaa
fmul
jp
fisttp
sahf
or
xor
cmp
ja
pusha
dec
or
imul
xchg
mov
jbe
mov
inc
sbb
cli
add
or
mov
clc
repz
(bad)
(bad)
and
pushf
stos
in
xchg
jbe
pop
xor
scas
dec
jge
nop
inc
mov
sub
in
fst
test
mov
sbb
xchg
inc
lock
lods
sub
popf
mov
das
xor
inc
mov
add
mov
mov
retf
sbb
or
mov
lock
xor
jg
push
push
bound
sub
jo
sbb
icebp
jg
mov
push
out
dec
pop
mov
cmp
push
shl
dec
fisub
hlt
repz
rcl
mov
repz
outs
lods
daa
inc
or
out
xchg
fwait
jnp
arpl
mov
push
data16
inc
or
in
mov
cwde
bound
jnp
jnp
jns
test
test
jge
jmp
bound
in
jge
data16
repz
mov
inc
xchg
xchg
stc
sbb
cs
sahf
je
rcl
bswap
dec
stos
cmps
int3
dec
xor
data16
aam
add
xchg
dec
mov
mov
out
dec
sti
mov
popf
add
mov
mov
jge
rcr
jmp
bound
scas
into
repnz
popa
loopne
lods
cmp
push
jmp
int
xchg
lds
out
cmp
xchg
inc
and
sub
jp
dec
out
mov
and
pop
sbb
gs
adc
or
pop
add
cmps
add
scas
in
(bad)
rcr
repnz
popf
sub
xchg
mov
pop
mov
sti
fldenv
test
ret
aam
pop
sub
cmps
mov
cmovs
bound
push
or
mov
fwait
mov
loop
xchg
sti
mov
mov
das
es
ss
je
jne
pop
mov
jle
pop
mov
jnp
or
ss
(bad)
call
lock
std
(bad)
(bad)
(bad)
lods
clc
jns
(bad)
out
pop
xchg
ins
pop
(bad)
(bad)
aaa
pop
out
inc
aad
cmp
sbb
(bad)
or
cdq
scas
retf
xor
mov
daa
xor
dec
add
mov
stos
mov
sbb
mov
jo
push
mov
pop
mov
cmp
adc
pop
test
pop
xor
jae
adc
jo
cli
add
xor
fidivr
fsub
add
add
jmp
loop
dec
mov
push
mov
inc
js
enter
ins
test
or
xchg
fnop
fisubr
aaa
(bad)
daa
js
jp
mov
les
mov
dec
push
mov
push
dec
sub
mov
pop
pop
cmp
sub
test
push
push
xor
dec
pop
imul
outs
mov
jae
test
push
pusha
adc
cmp
out
inc
xchg
cmc
jo
mov
add
in
xor
test
mov
mov
rol
in
mov
retf
cmps
adc
in
nop
nop
inc
test
pop
or
repz
push
nop
mov
or
push
test
mov
dec
shl
fcmovbe
call
imul
cmp
push
xor
pop
xor
inc
push
dec
nop
call
adc
xor
mov
fs
fisubr
adc
call
call
inc
rcl
stos
cld
xchg
dec
adc
or
mov
push
ins
pop
fist
inc
xor
push
dec
sahf
jne
out
jp
sub
pop
loope
dec
xlat
mov
lods
test
push
xchg
cmp
fisubr
test
pop
or
div
jp
clc
ins
push
retf
sbb
(bad)
loope
mov
daa
push
xchg
lods
inc
mov
jmp
test
xchg
mov
ret
fadd
and
mov
(bad)
not
sub
pushf
mov
mov
mov
fidiv
jmp
push
outs
je
in
adc
cdq
mov
mov
jbe
pop
out
into
(bad)
cmp
mov
inc
daa
mov
in
push
fidiv
xchg
scas
sub
pop
(bad)
and
sub
js
pop
dec
jne
xor
test
lds
popf
add
jo
adc
sbb
pop
mov
jl
inc
sbb
fsubr
pop
mov
add
inc
and
push
(bad)
mov
lahf
sub
fistp
mov
ds
xchg
sbb
jmp
or
and
aad
mov
xor
(bad)
rcl
mov
jb
lahf
sbb
jae
mov
fst
jl
into
shl
sbb
push
adc
mov
ins
mov
addr16
sub
call
(bad)
lea
push
dec
in
and
sbb
push
xchg
jl
into
enter
lods
jno
test
mov
or
fild
aam
pop
mov
and
xor
das
mov
push
dec
cdq
pop
cmp
lds
fsub
ret
dec
inc
add
and
pop
cld
mov
push
cmp
in
lods
pop
cmps
rcl
xchg
adc
dec
ins
sub
test
pop
scas
and
xchg
clc
cmp
out
xor
dec
stos
mov
retf
fs
mov
(bad)
sar
sub
mov
add
cmp
call
mov
mov
fld
jae
xchg
mov
jmp
add
xchg
sub
das
adc
mov
pop
mov
cdq
int
cmp
mov
movs
pop
cmp
mov
out
cli
rcl
pop
mov
sbb
add
(bad)
cmp
das
outs
push
push
or
adc
fcmovnb
scas
jg
rcr
repz
inc
(bad)
adc
pop
mov
mov
aam
ret
lods
inc
ins
outs
sub
retf
jecxz
(bad)
(bad)
pushf
cmp
sub
sbb
adc
xchg
mov
inc
mov
std
inc
sbb
into
xor
and
lahf
enter
out
fadd
mov
paddd
mov
push
aam
sbb
mov
aam
push
loopne
xchg
push
fs
int
retf
mov
(bad)
fistp
cmps
fld
or
pop
in
xor
dec
enter
test
std
arpl
jo
mov
stos
adc
fist
loop
add
sahf
and
cmp
sub
es
dec
(bad)
inc
repnz
jmp
dec
jl
xor
int3
fsubr
pusha
push
aaa
mov
scas
or
jl
gs
mov
jecxz
ins
pop
movs
neg
mov
(bad)
std
dec
add
repnz
pop
in
dec
aaa
cmps
out
add
mov
std
scas
arpl
push
in
cmps
mov
mov
gs
cmp
retf
popa
aad
clc
test
jle
in
fwait
stos
pop
dec
js
xchg
dec
push
sub
xchg
jp
dec
icebp
retf
test
call
int3
fs
jl
mov
in
push
in
loopne
out
push
call
repnz
or
clc
rep
mov
push
out
pusha
leave
cmp
cdq
stc
cdq
add
aad
popf
not
test
js
call
std
and
in
cmc
jmp
xor
imul
add
mul
lock
adc
aaa
(bad)
rcl
div
pushf
push
pushf
jge
das
fsub
mov
shl
sub
xchg
cmp
clc
adc
mov
sar
mov
dec
xchg
call
or
es
arpl
lods
inc
adc
mov
dec
dec
pusha
mov
leave
out
frstor
loopne
movs
(bad)
ror
fs
imul
cmc
in
dec
stc
inc
jl
shr
mov
outs
add
pop
mov
and
cmp
fnstenv
imul
cmc
test
ss
imul
add
and
neg
addr16
repnz
push
iret
or
loopne
neg
jmp
inc
enter
std
adc
and
push
int3
emms
int
jno
iret
fst
ja
cli
mov
mov
sub
aam
pusha
dec
(bad)
mov
xor
xchg
mov
push
pusha
cmp
loope
sub
(bad)
scas
add
xor
and
jge
loop
sbb
lock
test
jge
mov
or
jns
inc
inc
out
or
add
sar
inc
xchg
test
in
inc
or
sbb
ret
loopne
jns
lahf
jns
iret
inc
pop
neg
or
jmp
aaa
adc
scas
or
aas
(bad)
mov
mov
mov
xor
imul
js
dec
loope
add
cmps
push
dec
lds
cmps
fwait
ret
clc
sub
xchg
inc
cmp
or
aam
fild
mov
fdivr
loop
mov
sbb
fdiv
xchg
sub
pop
(bad)
mov
or
mov
jbe
jge
mov
sar
fnstsw
test
int3
pop
xor
setnp
and
cdq
pop
mov
icebp
mov
ins
pop
and
ficom
add
in
mov
fsub
cmps
les
add
(bad)
call
stc
inc
sbb
fist
fld
push
(bad)
(bad)
dec
nop
inc
inc
mov
mov
xor
lock
push
cli
and
ja
jle
inc
(bad)
stos
fsubr
xor
cmp
xor
das
aam
fwait
mov
imul
(bad)
or
adc
dec
jp
das
(bad)
test
xchg
jmp
(bad)
sbb
jmp
aaa
fcomp
(bad)
jae
adc
adc
repnz
enter
fwait
push
fistp
dec
(bad)
lods
call
ja
mov
pusha
std
xchg
(bad)
sub
jl
jno
lods
mov
cli
and
inc
prefetch
sar
punpckhdq
js
mov
pop
jl
push
xchg
inc
ja
xlat
std
adc
je
xor
ja
loopne
mov
or
adc
out
(bad)
cld
lods
mov
jbe
(bad)
xchg
sbb
(bad)
mov
into
sbb
out
mov
sbb
xor
jmp
das
mov
hlt
mov
(bad)
xlat
xor
hlt
push
push
dec
inc
leave
or
xchg
clc
(bad)
adc
fdiv
inc
mov
sub
fiadd
or
xchg
fisttp
mov
(bad)
cmp
std
lods
and
sub
dec
jmp
icebp
jae
bound
ja
xor
or
(bad)
mov
icebp
xor
stos
mov
jmp
dec
repz
jg
call
clc
cmp
cld
loopne
xchg
fmulp
and
cmp
sbb
out
push
ud0
cli
mov
and
mov
lahf
arpl
icebp
in
mov
arpl
stc
adc
mov
jl
je
sbb
(bad)
and
pop
jl
or
xchg
sbb
(bad)
adc
cmp
frstor
add
shr
stos
mov
rcl
fs
ins
jo
stos
dec
loop
sbb
mov
jl
mov
in
popf
(bad)
mov
sbb
or
sub
outs
mov
mov
inc
sti
sub
mov
sub
bswap
ds
mov
or
test
into
mov
into
sahf
pop
loop
push
or
push
jl
sbb
ins
mov
dec
inc
fldl2e
out
lock
jg
outs
inc
outs
js
outs
mov
test
xlat
mov
xor
aas
adc
jno
pop
xchg
imul
cdq
add
sub
adc
jb
and
test
out
fistp
out
dec
lods
xchg
mov
test
fnstenv
std
inc
xchg
push
movs
arpl
xchg
mov
add
jbe
lods
test
jle
fimul
adc
xchg
inc
std
clc
mov
icebp
rcr
sbb
push
sub
aad
xchg
movs
dec
mov
push
jbe
mov
sub
mov
in
aas
repz
sbb
repz
jmp
movs
test
mov
pop
mov
cwde
cdq
jl
xchg
dec
add
and
jnp
test
sbb
adc
inc
data16
add
add
mov
pop
xor
push
jg
push
xor
mov
inc
call
jg
daa
in
add
cmp
aam
pop
pushf
sbb
mov
lahf
mov
inc
and
out
cmp
test
sar
dec
jp
nop
cmp
adc
pop
das
sub
xchg
into
push
jmp
xchg
pop
mov
gs
jno
push
mov
xor
jno
pop
and
div
sub
jbe
es
add
sbb
push
div
xchg
jl
enter
jnp
lods
jbe
outs
test
gs
mov
fstp
lods
jp
stc
cmp
xor
loop
or
jmp
outs
out
add
pop
retf
mov
jns
xchg
sbb
addr16
outs
dec
fsub
add
mov
add
jnp
jno
movs
or
mov
cs
inc
sbb
jb
rep
lods
adc
sub
test
push
rcr
sbb
xor
sbb
bound
(bad)
jp
dec
scas
aad
ret
xchg
test
push
mov
push
(bad)
mov
icebp
inc
scas
mov
pop
gs
fisubr
pop
sub
mov
dec
jge
call
jns
(bad)
xchg
sti
jmp
inc
dec
cmp
in
or
dec
(bad)
cdq
aas
push
xchg
pop
pop
mov
out
push
jo
jae
push
nop
push
mov
(bad)
fidiv
aas
xchg
jne
push
cwde
mov
call
xor
mov
push
sbb
sbb
stc
(bad)
sbb
jno
sar
imul
pop
test
cmc
dec
inc
jb
push
in
adc
xchg
and
xchg
mov
push
(bad)
(bad)
cmp
lahf
jg
ss
and
mov
loope
fnstsw
daa
faddp
ficom
dec
lods
lods
(bad)
pusha
hlt
loop
je
jo
xchg
cdq
pop
aam
fcom
push
cdq
lods
ja
out
in
inc
dec
out
jmp
gs
fnsave
sub
ins
fs
cwde
xor
sub
ds
sbb
mov
shr
push
pop
jle
stos
imul
shl
mov
ret
jb
shl
jb
outs
dec
jnp
scas
mov
xchg
xchg
jbe
xchg
aam
sub
push
ret
pop
fisub
cmc
mov
out
inc
sub
pop
shl
and
mov
mov
cmp
pop
pop
lds
inc
or
push
adc
adc
cmps
ds
pop
stos
push
sbb
xor
xor
and
shl
xor
adc
inc
stos
dec
add
ds
pop
mov
enter
mov
idiv
xor
es
mov
inc
sar
movs
neg
pushf
add
mov
xor
lahf
fnsave
or
mov
jp
ret
fwait
fwait
xlat
and
sbb
lea
ret
push
sub
push
pop
mov
xor
jmp
xlat
repnz
mov
pop
jge
dec
inc
popa
push
mov
int
mov
mov
das
mov
in
sub
push
jge
pop
jg
out
sbb
or
xchg
ret
and
fld
push
test
mov
add
add
shl
mov
mov
in
clc
mov
loop
jne
pushf
mov
push
aad
push
fcom
imul
out
xlat
bound
aad
sbb
popa
mov
sub
out
jge
iret
daa
jmp
cs
stos
mov
test
and
cwde
cmp
iret
retf
mov
jge
push
fldcw
rcr
dec
sbb
loop
pusha
cmc
ins
add
push
push
dec
and
pop
mov
cmp
sahf
clc
fistp
aam
mov
into
push
xor
push
mov
xchg
imul
jnp
or
push
sub
cmp
push
cmp
imul
jmp
data16
leave
rcl
cmps
fdivr
daa
(bad)
in
mov
movs
test
hlt
sbb
mov
lods
inc
jg
pop
idiv
push
pop
pop
jl
out
mov
pop
ficomp
mov
sti
psubsw
hlt
stos
add
cmps
(bad)
stos
scas
or
sbb
mov
shl
imul
inc
pop
adc
es
clc
and
dec
lods
clc
jle
push
jg
test
pop
ficomp
std
sub
pushf
ds
or
mov
test
or
clc
mov
push
call
jmp
add
cwde
mov
imul
adc
cwde
(bad)
lahf
aad
in
sub
fsubrp
xor
mov
outs
adc
fs
(bad)
sahf
push
jmp
loop
add
repnz
cmp
sbb
jg
mov
aam
jmp
pop
test
rcl
xor
adc
fndisi(8087
popa
mov
xchg
sti
loopne
jne
jmp
out
shl
mov
jb
xchg
stc
jp
and
lock
sti
les
inc
in
add
sub
cmp
aaa
ss
dec
mov
(bad)
ins
pop
mov
int3
in
(bad)
and
icebp
aam
iret
(bad)
js
or
pop
movs
push
sbb
aas
pop
fwait
cdq
and
div
or
imul
mov
xlat
bound
and
xor
mul
in
icebp
movs
aad
pop
push
and
std
fistp
int
clc
cmp
adc
jge
lea
inc
mov
push
or
loopne
sti
(bad)
mov
stos
mov
popf
mov
xchg
jecxz
aaa
in
cmp
xchg
mov
test
add
xchg
clc
sbb
call
inc
add
push
loope
rcr
cs
xchg
inc
aad
repnz
out
pop
sti
sub
aad
pop
push
in
mov
sbb
push
dec
cmp
dec
adc
mov
pop
dec
push
mov
icebp
inc
inc
outs
xchg
xor
sub
inc
cmp
mov
cmp
inc
hlt
sbb
aas
mov
lds
or
inc
adc
sbb
out
into
pop
add
jge
adc
nop
outs
mov
sbb
icebp
push
inc
fisttp
div
sti
sbb
test
push
xchg
xchg
movs
dec
movs
fisttp
dec
push
lea
xchg
sub
outs
or
and
cmps
hlt
jl
out
repz
in
jmp
jns
jl
pop
jae
push
mov
inc
movs
mov
lahf
imul
mov
daa
xor
and
dec
sub
mov
stos
add
xor
jge
add
in
push
ret
cmp
add
shr
lahf
pusha
dec
add
ins
cmp
xchg
imul
xor
das
lahf
cmp
les
and
mov
adc
hlt
addr16
int
mov
out
jp
popa
sub
bound
ficom
or
pushf
jecxz
(bad)
rol
mov
in
mov
or
cdq
pop
xor
or
ins
nop
sub
es
(bad)
not
xchg
leave
and
xchg
js
and
in
loop
xchg
loope
inc
mov
xchg
add
push
les
xor
cdq
dec
int
sub
dec
call
sti
push
jmp
std
dec
test
sub
imul
mov
ss
shr
xchg
cs
add
xlat
mov
inc
mov
test
xchg
inc
(bad)
fsubr
adc
inc
or
push
daa
mov
inc
fstp
sar
add
retf
and
xor
stos
lods
(bad)
mov
test
cmova
pop
cmps
or
int
mov
mov
stc
pushf
or
jmp
movs
jno
mov
adc
movs
push
fldcw
push
xor
out
jle
cmps
and
pop
inc
pop
mov
outs
test
xchg
pop
add
inc
pop
and
popf
add
inc
sbb
mov
adc
fidivr
inc
mov
in
cld
adc
outs
sub
pop
daa
pusha
and
shr
loope
adc
adc
mov
sar
retf
jle
lods
mov
cmp
montmul
cmps
xchg
jg
test
adc
jno
sbb
jg
jne
movs
and
mov
shl
or
cmps
idiv
pop
ja
cmp
cdq
imul
arpl
pop
mov
test
retf
push
xor
(bad)
push
call
adc
dec
aad
cmp
call
mov
fcmovbe
repnz
ret
rsqrtps
shr
hlt
fs
in
xor
sbb
cmp
push
in
inc
mul
sbb
sub
pop
adc
pop
or
dec
fist
lea
adc
rcr
bnd
mov
ret
mov
stos
cmp
xchg
and
clc
and
inc
mov
pop
ret
jns
mov
cmps
(bad)
std
push
lds
jne
ja
sti
add
loopne
mov
adc
jnp
dec
cmc
mov
jne
xor
mov
jb
retf
imul
pop
mov
mov
movs
fsub
push
inc
xchg
jo
(bad)
xchg
movs
mov
mov
out
fstp
mov
adc
sbb
push
in
into
mov
xor
ror
outs
out
pop
sbb
inc
ja
add
sbb
lods
loope
cmp
jecxz
movzx
pop
sahf
jnp
mov
scas
xchg
je
push
daa
ror
mov
fdivr
mov
(bad)
jae
lahf
jbe
vunpckhpd
sbb
out
jno
cs
out
push
and
inc
inc
xor
pop
inc
lods
aaa
dec
leave
popa
cmps
push
cmc
outs
push
stos
je
or
dec
or
push
sub
xor
fidiv
popf
pop
inc
and
xchg
leave
sbb
xchg
ss
mul
popa
cmp
push
mov
mov
push
cmp
aam
sub
inc
cmp
fimul
lods
dec
retf
xor
cmp
cmp
fstp
inc
lods
out
xchg
inc
sbb
or
call
sbb
add
pop
in
rol
pop
adc
fist
pop
sbb
not
xchg
shl
cmp
out
xchg
out
ret
sub
test
ins
inc
icebp
adc
jnp
inc
cmps
sub
xchg
cdq
cmps
js
cwde
add
enter
or
jbe
bound
jno
rcr
mov
inc
sub
dec
or
(bad)
sbb
inc
or
push
pop
std
xchg
xlat
mov
xchg
hlt
aaa
push
or
aas
fwait
call
shl
jno
pop
pushf
sar
xor
popf
jns
test
adc
in
pop
or
std
mov
sbb
loope
or
add
and
movs
mov
cdq
imul
aam
ret
test
jge
sbb
mov
ds
add
push
je
fnstenv
jno
mov
sbb
push
sub
mov
js
scas
loop
fld
outs
int3
push
shr
or
in
pop
cmps
sbb
pop
(bad)
fnstenv
mov
cmp
fdivr
(bad)
mov
jp
inc
fwait
jle
pop
rcl
test
adc
icebp
pop
mov
popf
icebp
aad
cli
sub
push
or
add
jecxz
fist
fwait
inc
call
inc
inc
cld
and
mov
sahf
mov
mov
lahf
push
(bad)
retf
mov
cmp
sub
dec
push
inc
inc
xor
cmp
fstp
jb
pop
dec
jno
mov
jmp
push
mov
imul
dec
xchg
popf
sbb
in
push
mov
xor
pop
inc
ds
cmp
pop
push
jo
push
out
popf
inc
push
jns
out
(bad)
xchg
mov
or
int
pop
loopne
stos
sub
jne
iret
or
sub
imul
aas
loopne
loopne
mov
cld
sub
(bad)
(bad)
jmp
(bad)
test
push
shl
push
out
xchg
dec
mov
loopne
adc
outs
add
aaa
push
sbb
push
stos
out
sbb
fdivp
les
cmp
movs
nop
ja
imul
mov
dec
adc
dec
or
mov
sbb
test
loop
jl
(bad)
aas
ss
pop
(bad)
lods
mov
sbb
lods
inc
push
dec
imul
data16
or
sbb
retf
or
fwait
dec
push
pop
outs
and
pushf
fsub
dec
xchg
shl
ror
sbb
lea
mov
cwde
jmp
sub
ja
add
adc
pop
cmp
cmp
fcom
cmc
dec
fild
movs
test
(bad)
push
xor
imul
xchg
jb
pop
dec
push
push
stc
(bad)
sub
mov
(bad)
fsub
xor
data16
cli
cmps
push
dec
adc
mov
sub
mov
push
jns
aam
lods
lock
int
push
lock
enter
shl
outs
lds
mov
xor
(bad)
xchg
aad
gs
mov
leave
sub
cmps
ficomp
xlat
(bad)
sbb
dec
pop
add
push
dec
clc
retf
fnstsw
or
add
cmp
out
aaa
inc
(bad)
mov
mov
or
mov
test
test
adc
mov
xchg
lods
add
inc
imul
adc
adc
sti
adc
call
outs
cli
cmps
stc
or
and
cmp
stc
push
in
push
or
push
mov
cmp
jno
and
ins
sbb
dec
pushf
xchg
jge
jbe
xor
rcr
add
jmp
adc
jno
test
push
mov
lahf
pop
cld
lahf
repnz
ss
data16
push
(bad)
mov
(bad)
pop
fidiv
jmp
push
into
xchg
pop
and
loope
fwait
movs
push
sub
sub
dec
add
rcr
adc
cmp
adc
lock
sub
cdq
movs
loopne
sub
dec
pop
iret
pop
icebp
jp
mov
arpl
sbb
jne
nop
inc
retf
mov
sbb
mov
mov
pop
sbb
sbb
mov
adc
xor
dec
nop
mov
stos
pop
inc
nop
jns
daa
mov
cs
cmp
lahf
(bad)
mov
push
mov
push
inc
inc
sbb
fdivr
sahf
mov
mov
push
(bad)
cmp
xchg
sbb
aas
lods
sti
loop
fnstsw
sbb
xorps
test
xor
cld
sbb
and
jmp
cmp
ja
shl
enter
inc
push
cmp
out
cmp
add
adc
xchg
fsub
(bad)
xchg
mov
es
js
dec
std
mov
add
pop
add
and
stos
adc
pop
cmps
retf
xchg
push
rol
pop
test
(bad)
aad
movs
(bad)
and
sub
mov
jbe
xchg
mov
dec
loop
iret
xchg
repnz
or
dec
push
xchg
mov
pop
mov
stc
dec
daa
data16
leave
pop
sbb
inc
pop
repnz
jmp
add
fwait
mov
xchg
repnz
push
add
push
leave
leave
out
mov
mov
mov
inc
aaa
stos
mov
pusha
pop
adc
pop
push
pop
fisub
jl
aas
and
mov
clc
test
jp
scas
inc
mov
xchg
sub
push
fcomp
test
mov
lock
mov
adc
jp
sbb
cdq
add
mov
lahf
cmp
gs
fadd
and
inc
push
xchg
jb
fs
pop
or
nop
movs
inc
jp
je
icebp
bound
js
js
adc
cmp
clc
adc
add
mov
icebp
(bad)
pop
pop
int3
and
lock
jecxz
test
jae
xchg
jge
jg
xor
mov
jecxz
(bad)
mov
sahf
jmp
dec
out
mov
(bad)
xor
test
aad
out
mov
leave
adc
add
int
mov
mov
push
push
sub
sbb
push
and
pop
stos
pop
mov
inc
jmp
fcomp
inc
xor
xchg
retf
mov
push
mov
xchg
push
pop
nop
pop
sub
hlt
xor
xchg
push
ja
call
adc
cwde
and
bound
push
movs
xor
shr
jmp
mov
sbb
mov
cli
mov
xor
(bad)
int3
fst
popf
enter
jg
cmp
cmp
in
mov
jmp
jl
cmps
jl
push
lods
xor
mov
js
dec
mov
jne
cmc
out
inc
(bad)
mov
push
sbb
repnz
jmp
xchg
int3
inc
gs
test
daa
cmp
outs
cld
or
and
in
sbb
pop
lods
adc
add
sbb
mov
cmps
rol
fistp
fdiv
paddd
mov
mov
mov
mul
jnp
fs
hlt
(bad)
mov
inc
std
and
pop
xlat
(bad)
xor
cmp
fcom
inc
mov
and
xchg
cmp
(bad)
or
jae
nop
mov
call
scas
and
enter
cld
mov
push
sub
mov
push
xlat
jmp
stc
aad
add
fnstenv
push
inc
dec
pusha
loopne
inc
test
cs
xlat
sbb
add
retf
xor
push
push
jmp
mov
dec
jl
loope
ret
add
rcr
repz
jmp
xchg
pop
mov
loope
or
(bad)
jp
loop
dec
lock
pushf
das
clc
repz
mov
and
gs
push
(bad)
xlat
mov
or
pop
call
stc
adc
mov
push
adc
mov
push
shl
(bad)
jp
inc
mov
xor
les
push
jmp
test
in
outs
jne
and
inc
pusha
aaa
jbe
jle
inc
shl
add
and
dec
cmc
xchg
ins
and
pusha
fnsetpm(287
popf
shl
sbb
fbld
call
jle
cmp
sbb
xor
jmp
call
js
add
outs
adc
gs
test
test
jge
mov
inc
push
fs
inc
rcl
mov
movs
addr16
pop
mov
jbe
pop
cli
in
jmp
push
not
or
test
iret
cmp
push
ss
rol
aad
jne
sbb
inc
mov
push
mov
in
jo
xchg
daa
lea
mov
pop
pop
dec
inc
lock
movs
stc
jl
call
xor
add
pushf
lods
mov
lahf
jl
sub
test
jmp
loop
lea
test
stos
not
dec
pop
jo
into
and
imul
mov
aad
pusha
ja
into
pop
jmp
mov
cmp
inc
fidivr
loop
adc
gs
pop
cmp
std
mov
jg
mov
inc
scas
cmp
test
fucomi
xchg
data16
push
rcl
add
mov
dec
ret
iret
cmp
pushf
retf
and
out
jbe
in
xor
mov
or
fdivr
ins
arpl
sar
and
push
cmc
loopne
pop
cmp
out
out
out
pop
cmc
pop
jle
xor
into
push
or
ins
sub
popa
add
mov
imul
sub
jmp
mov
push
inc
cmps
movs
pop
fisubr
movs
outs
scas
jns
popf
aad
(bad)
bound
lods
iret
ds
and
add
push
test
call
inc
sbb
dec
and
sbb
aas
dec
inc
test
jno
stc
out
(bad)
adc
in
add
cwde
sub
popf
retf
fwait
xlat
int
or
js
stos
in
int
repnz
imul
out
int3
sub
sub
mov
je
push
shl
and
sub
pushf
and
cld
xor
std
pop
out
icebp
dec
fcom
(bad)
sub
xchg
shl
jae
mov
test
ror
je
scas
in
xchg
iret
test
push
into
xor
(bad)
jb
cmp
push
inc
xchg
pop
jns
mov
jbe
push
push
pushf
add
jg
addr16
das
dec
dec
(bad)
popa
push
mov
xor
jo
out
mov
mov
adc
scas
cmp
xchg
jae
push
loopne
aas
xchg
in
cmc
dec
sub
call
nop
pop
jne
adc
mov
mov
dec
fidiv
popa
cmp
mov
dec
mov
imul
and
mov
in
or
pop
cmp
sar
scas
pop
push
sub
xchg
push
cli
adc
dec
mov
sar
lock
push
ss
out
(bad)
inc
retf
xlat
xor
cmp
aam
dec
fcom
push
and
lahf
rcl
out
sub
dec
(bad)
pusha
and
mov
xchg
sbb
cmp
pop
push
xor
mov
pop
pusha
imul
inc
mov
fxch
fild
(bad)
push
mov
lds
push
pop
mov
jne
push
adc
or
ds
stos
xchg
jo
add
mov
repz
jae
(bad)
leave
dec
repz
sub
lock
lock
ret
test
js
dec
cmp
mov
in
bound
test
(bad)
jnp
adc
mov
jne
ret
and
adc
cmp
sbb
push
loop
in
bound
sub
xlat
push
xlat
pop
cmp
mov
xor
lods
mov
mov
mov
aas
and
out
lods
enter
lock
dec
nop
(bad)
adc
mov
jo
call
mov
add
mov
pop
xor
xchg
push
mov
inc
(bad)
(bad)
ror
sbb
dec
movs
push
aas
in
test
ror
push
les
shl
xchg
add
out
dec
jo
xchg
clc
push
inc
mov
jne
push
in
sar
pop
pop
leave
fild
das
js
gs
adc
adc
in
retf
mov
ret
hlt
repnz
push
jp
loope
out
cs
test
gs
arpl
iret
daa
(bad)
call
jg
outs
jae
xor
cmp
mov
outs
xor
lods
mov
rcr
sbb
jo
push
shl
out
mov
fsubrp
jp
jns
(bad)
mov
mov
into
and
test
lds
and
add
call
xlat
out
push
xor
push
sub
jno
push
(bad)
in
dec
stos
mov
rol
xor
out
xor
mov
sar
popf
mov
pop
les
repz
jae
fmul
jno
jns
pop
aaa
jae
arpl
cmp
sub
pop
fwait
std
js
dec
xor
xchg
xor
dec
movs
fadd
xchg
loop
xchg
push
sbb
std
dec
xlat
xor
jns
jmp
push
mov
ins
cld
and
arpl
std
popa
sub
ds
(bad)
test
jne
push
dec
mov
xchg
movs
xchg
add
test
repnz
psubusb
bound
pop
neg
add
mov
jno
test
or
mov
popa
out
inc
stc
out
into
jnp
jg
pushf
sub
and
rol
push
lods
or
mov
cmps
jle
pop
(bad)
imul
xor
xchg
mov
lahf
stos
imul
xchg
out
into
jl
stos
and
mov
in
int3
jno
pushf
jecxz
retf
std
inc
retf
pop
inc
pop
dec
push
aad
stc
ror
sbb
out
fadd
mov
add
mov
xchg
imul
and
hlt
mov
xor
out
xor
fwait
push
mov
mov
fld
adc
sub
and
mov
fisttp
cwde
mov
jge
aaa
pop
movs
mov
sbb
push
out
retf
dec
mov
mov
mov
add
mov
inc
xor
add
into
jecxz
fldenv
cmp
cmp
mov
xchg
rcr
retf
pop
in
adc
mov
adc
cmp
mov
fwait
mov
pop
inc
mov
mov
repnz
pop
movs
xchg
fdiv
out
rcr
inc
push
inc
dec
mov
daa
push
and
xor
adc
ins
or
push
in
(bad)
(bad)
nop
movs
or
and
call
and
pop
sub
clc
shl
enter
jnp
mov
fcomp
push
outs
jb
jbe
aas
inc
movs
or
in
mov
or
cmp
js
movs
call
leave
rol
ficom
add
sbb
outs
retf
push
sbb
cmp
fmulp
in
jp
scas
loop
cs
sub
jno
addr16
ret
mov
in
sub
leave
stos
fld
sti
out
dec
lahf
or
shl
into
xor
mov
inc
jae
cmp
or
jo
or
repz
js
(bad)
ins
inc
push
add
loopne
xor
int3
mov
cmp
adc
adc
mov
inc
outs
jnp
fist
imul
aas
push
inc
cwde
xchg
add
cwde
sbb
loop
cmp
ret
fcmovne
hlt
je
adc
xor
sti
leave
mov
or
(bad)
fucomp
cli
sbb
or
push
fsub
out
popa
out
shl
mov
sub
pop
and
ds
neg
xchg
mov
pop
cld
hlt
stc
mov
pop
pop
out
inc
adc
cli
and
jb
and
(bad)
jl
out
gs
fisubr
ins
or
mov
aaa
imul
xchg
sub
pop
inc
sbb
xchg
(bad)
(bad)
dec
dec
cmps
xchg
jecxz
dec
ds
xchg
aaa
mov
or
or
jbe
cdq
jnp
shl
sub
dec
scas
dec
test
pushf
je
mov
adc
xchg
xor
or
cmp
cmp
adc
jg
mov
sti
into
aam
pop
aam
add
xor
(bad)
outs
and
cdq
lahf
push
jno
mov
lea
mov
test
adc
out
pop
mov
adc
adc
or
cmc
pop
imul
cmp
call
js
push
dec
inc
out
leave
lods
mov
xor
cmp
les
pop
mov
xlat
daa
push
bnd
movs
sbb
mov
mov
sbb
out
out
fmulp
je
pop
test
jb
pop
sti
popa
gs
adc
les
jmp
jo
push
in
nop
popf
stos
popf
in
adc
mov
sbb
add
push
imul
pop
sahf
inc
cmp
lods
mov
stos
rcr
test
xor
cmp
fsub
aas
mov
push
add
mov
sbb
minps
inc
(bad)
push
mov
mov
loopne
in
xor
out
iret
push
lea
adc
sbb
mov
cmp
aad
cmc
stos
mov
dec
mov
mov
xchg
lea
loope
adc
dec
sbb
ds
or
xor
lods
fistp
shr
leave
push
cs
sbb
cmc
pop
scas
push
push
mov
push
inc
xchg
fldcw
mov
and
sub
ds
imul
mul
mov
aas
int3
add
arpl
ins
dec
sub
jg
inc
ins
fidiv
pushf
lods
bound
loope
push
inc
lods
aam
cdq
lock
out
xchg
or
mov
mov
jecxz
(bad)
aad
or
and
int3
inc
lods
mov
add
fs
dec
call
into
cmp
xor
ja
mov
sbb
push
mov
mov
dec
sub
(bad)
and
clc
sahf
xchg
dec
adc
inc
test
cmps
mov
xchg
outs
or
sub
inc
mov
retf
ret
aas
lods
cmps
mov
jg
sbb
in
or
dec
push
mov
jg
and
aas
cmps
inc
add
pop
pop
mov
outs
(bad)
out
hlt
inc
or
pop
adc
jg
xor
adc
jb
popf
sbb
mov
xchg
test
mov
xchg
xchg
stc
or
(bad)
neg
loopne
cld
idiv
mov
cmc
into
mov
xor
cwde
or
jle
daa
cmp
iret
add
xor
inc
add
hlt
in
icebp
xchg
mov
out
xchg
jne
div
dec
call
cmp
(bad)
(bad)
addr16
gs
dec
lods
sahf
int3
mov
push
xor
arpl
mov
repz
dec
sub
shl
xlat
daa
inc
imul
test
add
(bad)
cld
mov
test
lock
mov
push
jo
stc
xor
retf
jge
mov
sub
xchg
movs
pop
cs
(bad)
adc
mov
dec
setle
aaa
adc
lods
shl
movs
or
je
cwde
mov
push
and
shr
clc
pop
inc
adc
sbb
data16
inc
inc
inc
out
sub
push
jecxz
xchg
push
mov
mov
mov
dec
popa
pop
ja
mov
in
out
inc
loope
cwde
cs
dec
sbb
je
jnp
aam
mov
pop
sahf
xor
fwait
mov
lods
jo
ret
outs
dec
std
clc
mov
inc
cmp
dec
mov
cmp
add
loopne
pop
jg
pop
and
sub
cmps
pop
jle
dec
pop
inc
inc
fiadd
pop
cmps
sti
test
jno
mov
mov
pop
cmp
inc
loop
mov
test
mov
adc
adc
test
xchg
div
js
jns
and
in
inc
(bad)
jecxz
jl
popa
jmp
inc
repz
push
jb
adc
out
mov
int
mov
xor
jl
fdiv
repnz
sub
jmp
fnstcw
shr
fs
cmc
jg
jecxz
pop
repnz
dec
test
(bad)
addr16
mov
std
lods
stos
pop
sbb
dec
lock
loope
sub
push
ror
jg
mov
mov
leave
push
cwde
lds
add
sbb
adc
pop
dec
jne
ss
adc
inc
xor
loop
test
ret
inc
iret
repz
loope
inc
xor
mov
lods
stc
aaa
repz
daa
mov
mov
jecxz
mov
ja
repnz
or
inc
(bad)
push
(bad)
push
leave
stos
dec
xor
cld
mov
test
cs
add
sbb
sub
mov
and
lods
cdq
dec
ja
jle
adc
pop
push
sbb
nop
cli
mov
add
fsub
pop
push
xchg
pop
call
sbb
sub
call
cmps
inc
ss
pop
fild
fdivr
dec
(bad)
lahf
(bad)
out
(bad)
jg
mov
mov
push
dec
scas
std
lods
mov
(bad)
shl
add
mov
mov
mov
nop
mov
fcmovnbe
cli
cmp
mov
data16
rcl
adc
sbb
add
push
(bad)
adc
das
ins
mov
cmp
add
(bad)
jmp
jns
mov
add
mov
mov
mov
and
adc
in
cmc
push
jmp
lds
fmul
je
mov
and
movs
mov
mov
jno
add
test
sahf
jg
test
dec
pusha
push
ins
outs
inc
lahf
repnz
dec
pop
adc
add
xchg
push
sbb
mov
sub
fidiv
add
push
ja
(bad)
jmp
inc
dec
adc
and
add
cs
ficomp
adc
cmp
adc
mov
scas
icebp
rol
repz
addr16
dec
rol
cmp
pop
adc
and
ins
loop
ret
dec
outs
adc
les
sub
sbb
gs
clc
out
dec
sar
inc
mov
stos
sbb
ss
sbb
sar
push
sbb
pop
retf
out
cmp
jnp
(bad)
jp
les
sbb
jl
dec
pop
mov
mov
loopne
popf
pushf
cli
cmp
inc
sahf
sub
mul
push
sub
or
enter
sbb
sbb
js
pop
cmp
sbb
mov
aas
scas
bound
sub
pop
xchg
sub
into
cmp
cwde
call
cmps
jb
jge
and
jecxz
sub
cs
jmp
cmps
or
icebp
mov
sbb
aad
js
loop
sbb
xchg
jp
rol
fmul
mov
repz
cdq
or
and
addr16
call
movs
outs
pop
retf
or
inc
push
xor
stos
add
cmp
clc
popf
ret
stos
or
into
out
nop
cmp
mov
int3
cmps
xchg
call
cdq
mov
loopne
loope
lods
std
fdivr
push
add
repz
fidiv
cmp
pop
xchg
xchg
sahf
out
xchg
outs
cs
pop
mov
pop
add
or
ds
mov
sub
jns
fld
push
fld
xchg
adc
xchg
fstp
ja
pop
mov
adc
jmp
push
call
dec
sbb
sbb
repnz
push
mov
arpl
popa
sub
sbb
sbb
int3
xlat
daa
adc
(bad)
adc
aam
pop
lea
lods
les
mov
loopne
push
sbb
daa
pop
ret
sbb
retf
lds
jmp
mov
pop
mov
adc
iret
ja
mov
(bad)
(bad)
cmps
jbe
aaa
push
adc
data16
cmp
mov
in
or
sbb
mov
ret
adc
inc
jl
cmp
jb
sub
jnp
rcl
xchg
inc
adc
shl
jp
bound
cmp
adc
mov
push
mov
fisttp
aam
es
push
sti
clc
xchg
jbe
jmp
js
jb
add
inc
ret
push
sub
cmp
sub
or
lods
jmp
push
lock
stos
(bad)
movs
jge
js
or
add
aad
mov
mov
dec
stos
and
xchg
inc
add
movs
pop
inc
pop
(bad)
xor
ror
jno
and
(bad)
fsub
stos
pop
mov
jno
repnz
stc
push
fidivr
outs
jae
push
add
iret
arpl
lock
push
or
push
ds
(bad)
mov
push
mov
mov
dec
lock
inc
pushf
cmps
dec
cs
stc
ins
not
ja
pop
xchg
ret
shl
mov
popa
sub
mov
cld
mov
ins
jno
in
inc
sbb
jmp
(bad)
into
out
mov
les
ja
pop
out
ret
or
jg
loopne
mov
mov
dec
(bad)
das
clc
sbb
idiv
or
stos
inc
mov
adc
sti
call
mov
jmp
leave
neg
mov
in
icebp
inc
dec
add
hlt
stc
cmp
ret
aas
movs
mov
ret
mov
aam
ret
lock
out
inc
pop
mov
and
jecxz
mov
lods
daa
mov
ins
ds
mov
dec
mov
mov
sbb
mov
outs
cmp
js
hlt
daa
jg
movs
add
mov
shl
repz
sbb
js
outs
xchg
jbe
mov
(bad)
iret
out
mov
add
fcomip
adc
mov
das
or
pop
std
jle
cmp
xchg
shr
add
aad
fadd
jecxz
add
hlt
retf
cs
inc
or
outs
jno
imul
dec
mov
mov
xchg
test
inc
mov
mov
scas
sti
test
cmp
rcr
mov
mov
shr
pop
xor
nop
ss
jmp
(bad)
sahf
clc
call
adc
outs
out
loop
iret
cld
repz
mov
xchg
ficomp
movs
and
clc
mov
jmp
or
xchg
sbb
sub
popa
mov
in
adc
inc
jne
stos
data16
inc
stos
pop
push
repnz
fild
cmp
iret
jno
xor
test
adc
cmc
jno
adc
sbb
repnz
call
inc
retf
jno
cmps
out
imul
retf
rol
mov
jno
sub
xchg
ins
sub
cmps
mov
xchg
test
jbe
sub
jmp
sbb
lods
sub
pop
icebp
in
shl
cld
or
push
mov
push
xchg
sub
inc
and
ss
inc
loope
call
les
cmp
mov
(bad)
(bad)
jae
out
xor
sub
mov
aas
out
or
ja
cmp
jle
mov
cli
cmp
dec
cmp
xor
cmps
test
test
dec
mov
mov
adc
hlt
and
imul
stos
stc
xor
xlat
ins
ror
sbb
jae
dec
add
mov
sbb
mov
test
inc
push
add
out
mov
rol
outs
clc
popf
dec
dec
cmps
es
nop
inc
aas
mov
mov
test
shr
mov
add
xchg
ins
mov
enter
mov
pop
xlat
shr
psllq
mov
mov
dec
fbld
out
mov
ja
inc
pop
xor
(bad)
jg
fwait
adc
dec
mov
xor
rep
push
xor
bound
leave
loopne
and
movs
mov
adc
adc
mov
loop
into
mov
and
jb
in
jbe
dec
mov
call
sti
xchg
and
xchg
gs
les
sbb
rol
aam
push
or
je
push
stos
ret
mov
aad
cdq
stc
retf
inc
retf
push
jbe
popa
repnz
call
jle
loop
mov
push
in
add
and
pop
mov
sub
mov
test
fwait
xor
fsub
pop
call
add
enter
adc
pop
or
ficomp
mov
jmp
cdq
adc
in
adc
cmp
ins
sar
(bad)
pop
test
mov
int
ror
cmp
call
stos
aas
and
int3
push
push
inc
and
dec
pop
sbb
cs
mov
int3
mov
mov
sub
cmc
push
mov
out
test
sbb
aas
mov
hlt
ret
dec
lods
dec
cmp
mov
inc
and
aad
push
pushf
xor
cmps
cwde
lock
(bad)
(bad)
std
(bad)
mov
push
jmp
shl
into
sub
nop
sahf
dec
cmp
test
leave
adc
pop
sbb
sbb
jg
pop
je
pop
mov
loope
jmp
(bad)
ja
stc
sbb
xor
ss
pop
fst
test
(bad)
and
dec
fs
mov
push
adc
cld
mov
mov
cmp
scas
rcr
fnstcw
fbstp
xchg
popa
cwde
js
adc
clc
aad
push
jo
add
add
sbb
mov
push
int
test
into
imul
pop
in
xchg
jge
xchg
lods
push
jnp
add
mov
push
inc
adc
movs
mov
cmp
or
mov
pop
mov
popf
dec
pop
mov
sbb
cmp
or
shl
sbb
dec
loopne
loope
or
lods
les
fadd
cmps
add
popa
cmps
and
push
nop
sbb
xor
ud0
dec
les
aad
out
xor
das
stos
test
inc
hlt
push
add
xchg
lock
sti
(bad)
in
gs
jns
loope
icebp
cmc
jns
push
mov
movs
adc
sbb
mov
stc
mov
add
aam
sub
push
ins
pop
mov
mov
inc
ret
mov
add
scas
hlt
mov
fsub
fidiv
jle
and
cdq
adc
inc
add
or
sub
push
push
sub
or
and
sahf
aas
inc
adc
xor
leave
idiv
addr16
out
jmp
rol
mov
mov
fadd
xor
cmps
dec
xchg
pushf
fwait
add
jne
xchg
sbb
in
jne
popf
lds
mov
jl
rcr
push
mov
push
dec
add
pusha
clc
and
and
call
test
add
jae
add
ss
test
cli
(bad)
repnz
(bad)
mov
test
call
fsub
jmp
mov
mov
sub
and
lods
add
xor
jne
imul
neg
test
mov
mov
xor
(bad)
xchg
rol
dec
push
ins
or
cmp
lds
int
mov
mov
adc
fisttp
jno
push
sti
test
lods
icebp
or
std
shr
mov
ins
lods
arpl
fwait
push
push
mov
fincstp
sar
or
cmp
and
aaa
imul
jnp
fiadd
and
outs
out
shl
add
xchg
rcr
jno
mov
(bad)
mov
test
mov
addr16
push
adc
sub
(bad)
ret
loope
and
stos
retf
and
jg
ds
fcmovnu
pusha
jnp
add
or
pop
mov
mov
fs
repnz
mov
xor
pop
pushf
adc
push
mov
sub
popf
adc
push
pop
out
test
mov
je
jo
pop
xor
lock
mov
mov
jge
in
js
call
test
mov
lea
or
addr16
mov
daa
push
les
adc
pop
pop
and
popa
mov
arpl
jmp
xchg
push
and
test
jmp
add
sbb
mov
pop
pop
mov
pop
int
pop
lds
xchg
mov
and
pop
call
xor
stc
cli
pop
test
jo
mov
and
xchg
lds
inc
xor
jecxz
aam
cmps
pusha
mov
dec
sbb
into
aaa
bound
cld
std
jns
cs
fcomp
aaa
pop
pop
movs
jb
les
movntps
cmps
jns
pop
fcom
pop
mov
sub
(bad)
xchg
shl
fisttp
xchg
pop
sar
popa
push
sub
lds
shl
std
xchg
pusha
aad
test
jo
loope
sbb
cmp
rcl
rcr
sub
(bad)
cmp
ficomp
pop
push
cmp
and
xchg
int
leave
stos
dec
(bad)
xchg
sub
lea
(bad)
xlat
sub
jo
add
sbb
(bad)
sbb
push
pop
mov
mov
out
not
and
jbe
add
adc
es
jmp
mov
push
and
cmps
push
test
xchg
xchg
jge
je
sbb
mov
sub
adc
mov
and
xor
pop
pop
test
jle
adc
xor
mov
push
lods
sub
outs
inc
jmp
gs
jle
icebp
mov
or
xchg
ror
scas
and
push
leave
xchg
jne
jno
and
idiv
inc
jp
in
push
fcomp
jg
cmp
ds
xor
mov
or
cmp
or
daa
jl
jp
sbb
cmp
sbb
mov
jno
stos
cmp
dec
addr16
or
outs
xor
je
aaa
mov
movs
in
mov
lahf
inc
scas
or
rol
stos
repnz
(bad)
sub
out
(bad)
cli
hlt
mov
xchg
xchg
cmps
xor
cmc
sub
cmp
mov
ffreep
ins
js
pop
cmp
add
stos
aad
fwait
mov
mov
mov
pop
jmp
icebp
arpl
clc
shl
das
sbb
aaa
aam
add
sbb
loop
test
jae
cmps
aam
and
jmp
loope
or
outs
les
scas
cmp
js
push
jl
dec
and
pop
sub
or
gs
mov
and
adc
dec
cmp
icebp
jns
cmp
push
jecxz
inc
mov
dec
and
push
mov
push
outs
sbb
shr
ins
inc
push
pop
mov
jmp
inc
movs
mov
loope
add
jne
fcomp
stos
js
loopne
xchg
inc
dec
jb
xor
pushf
cli
sbb
mov
jmp
xchg
push
or
jbe
loop
not
mov
xor
lods
push
test
lahf
repnz
sbb
ret
jne
xchg
arpl
stos
push
sbb
pop
pxor
cdq
stc
inc
mov
in
dec
inc
cwde
jle
mov
mov
(bad)
loope
dec
xchg
mov
ficom
cmp
inc
or
cmp
pop
sbb
cmp
pushf
retf
retf
test
fldenv
dec
mov
and
fwait
out
pop
mov
xchg
(bad)
stos
enter
popf
imul
bswap
or
xor
js
stos
jg
pop
ja
sahf
fdivr
sbb
xor
fwait
push
pop
or
and
dec
pop
or
xacquire
sahf
pop
repz
xlat
fmul
sub
std
pop
lds
out
rol
xchg
cli
dec
adc
push
sar
pop
xor
and
in
fwait
add
enter
adc
push
push
mov
mov
push
xor
xchg
mov
mov
movs
fbstp
nop
daa
scas
mov
jb
xor
inc
pushf
test
xchg
dec
adc
rol
xchg
adc
or
mov
mov
pop
ja
dec
imul
cld
pop
xor
test
bound
retf
jmp
xlat
aad
mov
inc
mov
dec
test
sbb
addr16
jbe
aad
ret
fidivr
aas
mov
test
xor
ds
out
mov
out
sub
icebp
sub
mov
test
inc
frstor
(bad)
and
fwait
mov
xor
mov
adc
pop
mov
fs
outs
add
repz
test
mov
inc
or
mov
je
fwait
and
sub
sbb
aad
ins
fimul
aam
or
inc
fild
sti
test
jle
jae
mov
jno
scas
sbb
in
pop
mov
repz
inc
leave
cmp
adc
loope
mov
inc
add
pushf
inc
iret
ins
movs
retf
sahf
xor
jg
sbb
lods
lea
lea
dec
aam
ja
dec
ror
lock
les
jecxz
out
mov
inc
fadd
push
popa
pop
mov
imul
add
cli
daa
gs
jmp
xchg
cmp
repz
xor
sub
lahf
scas
(bad)
mov
retf
xchg
ds
popf
out
mov
mov
jbe
jbe
scas
aad
pcmpeqd
ins
aaa
pop
inc
cld
ret
pop
jg
fidiv
or
es
iret
pop
(bad)
pusha
xchg
ss
cmps
dec
push
bound
add
mov
stc
cmp
in
cwde
je
call
in
add
lock
(bad)
and
leave
repnz
push
xlat
(bad)
data16
rep
fs
sub
mov
sub
js
ret
daa
cmps
fidiv
movs
or
lea
jle
in
hlt
mov
in
leave
or
and
mov
jmp
jbe
mov
cmps
fisubr
and
aas
or
dec
dec
dec
lock
sub
out
test
aam
jbe
mov
cmc
into
pop
sub
add
pop
leave
call
cmp
pop
push
in
gs
sbb
mov
mov
pop
cmp
inc
in
jl
shr
or
and
retf
sahf
js
lods
cmc
mov
inc
fadd
push
mov
(bad)
jg
pop
push
sar
aad
(bad)
(bad)
outs
add
cmp
mov
push
lock
popa
jae
xor
test
push
jmp
lds
mov
sti
mov
popa
and
stc
rcl
or
sbb
fwait
pop
mov
rol
aas
xor
mov
gs
out
(bad)
in
inc
leave
pushf
push
xchg
push
jg
mov
inc
test
jl
mov
mov
mov
fadd
repnz
clc
sbb
scas
(bad)
fild
adc
push
test
inc
imul
lds
ret
xor
mov
inc
xchg
ja
jmp
mov
sbb
sub
sub
iret
lods
pop
mov
adc
cmps
scas
jmp
out
movs
fisubr
jns
dec
cli
pop
push
cmp
mov
popa
data16
pop
mov
cmp
fcmovb
and
call
mov
push
sbb
push
fwait
sbb
aaa
xchg
ss
mov
and
mov
outs
mov
inc
cld
int
cmp
add
mov
cmc
adc
xlat
jp
jle
std
cdq
add
movs
iret
mov
add
add
xor
adc
push
fisubr
test
xor
and
sbb
aam
cmp
fsub
push
or
test
xchg
and
repz
cli
sub
xor
(bad)
int3
scas
inc
push
aad
test
pop
inc
and
mov
push
sub
xchg
in
fwait
movs
jo
push
push
sbb
adc
in
add
mov
push
aaa
mov
pop
mov
pop
xchg
adc
or
push
mov
pop
add
jne
mov
aaa
xchg
push
jl
or
loopne
fisttp
je
xor
add
js
das
sub
cmc
jp
movs
out
sbb
pop
leave
dec
push
add
mov
retf
push
xlat
xor
je
fst
mov
aam
hlt
cmps
int3
(bad)
mov
stos
xchg
cmc
push
scas
test
cmp
adc
sbb
int3
sbb
out
sbb
sbb
adc
sub
imul
mov
fist
mov
xchg
scas
popa
push
lods
cli
and
test
sub
add
mov
in
xchg
fnsave
pop
dec
leave
or
inc
xchg
cmp
lock
mov
stc
jl
repnz
call
popf
adc
test
push
lds
in
(bad)
retf
pushf
sub
popf
sub
(bad)
xor
repnz
(bad)
(bad)
loopne
scas
dec
cmps
pushf
jge
je
test
sub
mov
jnp
add
nop
mov
hlt
mov
mov
outs
mov
mov
dec
push
pop
push
mov
lods
loopne
sub
mov
cmc
jmp
push
jo
inc
pop
sti
add
xchg
mov
jae
jo
ret
sbb
jbe
pop
sbb
loopne
pop
sbb
adc
push
cmp
mov
lea
movs
or
jnp
pop
shl
add
in
inc
dec
xchg
call
xor
mov
popa
mov
add
pop
mov
stos
adc
cmp
stc
cmp
jbe
sub
dec
jno
daa
xor
push
test
shl
outs
jl
fadd
ins
int
add
jecxz
push
sub
shl
ror
and
fiadd
xor
push
adc
ss
xor
inc
sub
ret
push
xlat
mov
cdq
xor
add
cmc
sbb
pop
fdiv
(bad)
and
ret
ss
mov
push
pop
xor
dec
cmps
(bad)
cmp
inc
aad
or
jns
or
rcl
scas
mov
sbb
clc
push
mov
sbb
mov
retf
xor
aam
push
dec
push
sbb
(bad)
out
adc
mov
pop
adc
sbb
call
and
addr16
lds
and
out
pop
add
or
jg
dec
push
adc
and
jb
test
lahf
mov
mov
mov
xor
mov
xchg
les
sar
sbb
adc
push
xor
push
fwait
int
in
aas
scas
das
push
mov
pop
jge
repz
call
lea
(bad)
clc
fbstp
sub
xor
xor
cmps
imul
adc
in
mov
fwait
cld
adc
and
mov
enter
fistp
clc
pop
xchg
jnp
push
call
push
jg
pop
sbb
call
push
out
popa
cmp
add
int
stos
cmps
retf
sbb
or
jo
shl
test
sbb
outs
ja
fbld
xor
mov
in
icebp
jl
out
add
test
dec
mov
cmp
or
lea
cmps
out
iret
fs
mov
arpl
lods
pop
ja
cmp
jmp
mov
adc
data16
nop
adc
in
scas
loop
iret
cli
mov
jbe
inc
pop
fdiv
fwait
xchg
push
addr16
icebp
inc
fst
jp
jp
xlat
test
in
aam
pop
in
call
imul
mov
xor
dec
(bad)
movs
add
shl
cs
repz
adc
add
jnp
sub
push
add
push
mov
jmp
add
mov
push
adc
mov
ror
outs
test
xor
test
inc
xchg
pop
xchg
mov
dec
jg
jg
ror
out
push
dec
pop
inc
pop
daa
test
data16
hlt
adc
and
jae
add
arpl
sub
fcmovnb
add
xor
push
stos
popa
adc
call
cmp
sub
sub
and
sub
in
xchg
xor
jae
icebp
inc
icebp
push
addr16
ret
mov
outs
cmp
cwde
mov
data16
pop
mov
arpl
out
push
aad
jge
and
cmc
sub
fs
outs
push
je
add
push
stos
shl
adc
cwde
mov
mov
loope
loope
push
push
jno
cmp
loop
mov
retf
in
adc
mov
push
stc
cmc
ins
push
ds
and
retf
rcr
push
push
cmp
std
pop
mov
mov
int
xor
dec
lods
outs
and
mov
(bad)
mov
mov
lods
add
movs
xchg
add
push
rcr
iret
pop
pop
sub
sbb
ret
mov
rcl
xchg
inc
add
lock
pop
add
mov
jnp
or
xchg
arpl
push
icebp
lods
out
mov
cli
bound
out
aad
out
push
xor
add
pop
push
xor
aaa
int
add
pop
jge
aad
push
loop
jge
and
jge
push
push
jns
fs
xchg
and
push
fld
dec
xchg
sbb
xchg
scas
xor
pushf
fld
cmp
imul
sub
retf
and
leave
push
xchg
repnz
add
xchg
cmp
clc
adc
add
push
sub
ja
out
pop
mov
mov
and
mov
sub
jge
add
cmc
out
ret
adc
mov
pop
push
pop
(bad)
sbb
movs
cmps
aaa
loopne
in
and
into
sbb
inc
gs
xchg
jl
jl
imul
jnp
stos
in
dec
fidiv
push
call
fnstenv
dec
(bad)
(bad)
fidivr
fcmovnb
mov
shl
cmps
test
inc
mov
xchg
(bad)
push
jbe
out
xchg
std
out
pop
leave
dec
cmp
sbb
into
dec
in
pop
xchg
daa
stos
mov
push
dec
push
call
add
data16
mov
or
test
mov
in
push
cmp
lods
mov
sub
cmps
jecxz
sub
xchg
retf
imul
mov
push
cmps
sbb
loopne
xchg
cmps
sbb
sub
in
mov
stc
or
and
cmp
stos
mov
(bad)
lds
inc
sub
jnp
fdiv
std
(bad)
push
add
jne
push
fs
jmp
jns
je
sbb
inc
adc
sbb
or
push
aam
dec
jae
icebp
push
lds
scas
xor
clc
or
ins
fsub
jns
xlat
iret
jmp
jmp
loope
loop
adc
add
imul
or
dec
jnp
push
test
lods
sbb
data16
repz
push
dec
pop
js
hlt
pop
outs
daa
cmp
fimul
sbb
and
dec
pop
fst
fidiv
lea
aas
int
dec
lds
and
and
mov
icebp
imul
jle
adc
pop
movs
leave
dec
fs
in
xchg
inc
adc
leave
push
add
out
add
push
pop
fnstcw
inc
cwde
sub
imul
cwde
inc
call
sti
movs
mov
mov
sub
nop
lods
add
test
dec
(bad)
stos
xor
retf
lods
xchg
cmps
add
stos
aaa
cmp
jbe
loopne
call
popf
xchg
mov
cmp
or
cmps
jnp
cwde
mov
mov
stos
fild
adc
cli
xor
cld
fimul
mov
mov
mov
out
jnp
movs
mov
jecxz
xchg
dec
das
inc
mov
inc
fdivr
dec
push
xchg
mov
sub
fldenv
rcl
mov
mov
lahf
xor
mov
stos
gs
ret
aad
cmps
sub
mov
out
enter
xchg
jge
shl
ror
aam
in
adc
aas
nop
adc
addr16
sub
and
outs
jno
sti
cmp
pextrw
dec
or
pop
ins
inc
(bad)
arpl
adc
push
leave
push
push
add
jo
mov
jne
pop
outs
mov
cmp
int3
mov
push
xchg
or
mov
xchg
mov
cmps
outs
xor
iret
lahf
or
dec
cmp
stc
mov
push
and
ins
imul
dec
adc
add
lds
mov
mov
jp
xchg
jbe
xor
data16
in
push
mov
dec
sub
jae
pop
and
pop
js
pop
xor
in
jle
jg
std
pusha
imul
xchg
sub
shl
mov
retf
inc
adc
add
sti
test
call
sbb
push
cwde
mov
cs
loopne
xor
xchg
mov
pop
xchg
mov
xlat
fstp
imul
or
xlat
sbb
icebp
cmp
in
dec
jbe
pop
pop
mov
in
cwde
pop
fsubr
je
push
mov
cmp
or
je
lds
pusha
or
push
pop
imul
dec
push
adc
sub
adc
stc
out
xchg
leave
dec
push
scas
inc
jbe
bound
cdq
ficom
dec
scas
test
test
int
adc
jp
or
xchg
xor
lods
(bad)
lds
sbb
out
outs
ins
icebp
rol
mov
add
push
jp
(bad)
in
jmp
test
test
mov
push
(bad)
adc
scas
inc
dec
sti
mov
int
sub
jbe
cmps
stos
daa
stc
cmps
adc
addr16
mov
or
ins
je
ja
push
jle
add
ins
cdq
dec
xchg
or
adc
movs
mov
ins
(bad)
or
outs
inc
jmp
aad
mov
mov
dec
das
adc
mov
sbb
test
push
inc
pop
mov
pop
mov
xchg
stos
adc
gs
scas
ins
sbb
cmp
xor
int3
xchg
(bad)
rol
sub
dec
fs
fiadd
cmp
pop
inc
xchg
xlat
les
pop
dec
cmp
sbb
arpl
xchg
loopne
adc
mov
push
jnp
cmp
repz
push
out
sub
jecxz
std
clc
mov
mov
mov
inc
je
mov
(bad)
sub
xchg
jne
jmp
mov
nop
ret
xchg
outs
nop
loop
cs
pop
add
in
sbb
push
jge
ins
sub
inc
repnz
mov
enter
mov
mov
(bad)
sbb
scas
mov
dec
imul
jns
or
rol
es
cmp
mov
cmps
mov
pop
imul
sub
mov
cmp
xor
cmp
push
mov
loope
ds
xchg
shl
dec
jg
mov
jmp
push
sahf
cmps
xchg
push
xor
and
dec
(bad)
es
pop
(bad)
loop
dec
inc
mov
dec
bound
loope
sbb
pop
outs
movs
movs
push
or
sub
shl
test
sub
xor
scas
daa
popa
gs
call
mov
loopne
add
inc
stos
or
aas
(bad)
rcl
loopne
add
test
mov
xlat
mov
imul
push
push
inc
pop
mov
loop
jbe
mov
jno
pop
(bad)
pop
fst
hlt
and
pop
into
adc
lahf
add
call
les
pushf
ret
imul
mov
test
adc
pop
addr16
xor
ret
and
aaa
or
mov
repz
add
push
sti
fidiv
lock
pop
iret
fistp
setl
pop
sbb
fcmovnb
xor
pop
nop
rcr
jno
(bad)
(bad)
push
mov
xchg
int3
fwait
pop
jo
xchg
xor
pusha
ins
ins
push
fild
push
inc
dec
push
sbb
cld
in
mov
ins
int3
pusha
mov
push
mov
scas
xchg
add
test
mov
xchg
imul
pushf
nop
jp
inc
sti
out
div
fdiv
mov
push
mov
ret
repz
xchg
ss
ja
push
test
hlt
jne
dec
in
mov
out
sti
xor
sub
fwait
add
adc
mov
movs
push
(bad)
dec
hlt
fld
push
sti
add
xchg
inc
cdq
mov
sub
sub
stos
je
jecxz
test
sar
jle
test
cmc
xchg
leave
loopne
mov
lahf
jp
jne
nop
pusha
or
adc
sti
aaa
movs
pop
add
inc
jb
lods
mov
adc
ja
cs
xor
lahf
jecxz
sbb
jp
cwde
es
sbb
xor
or
hlt
mov
pop
and
lods
iret
pop
xchg
inc
inc
mov
pusha
ins
movs
inc
mov
cmp
mov
nop
in
movs
xchg
aad
sar
ret
cs
mov
and
cmp
fiadd
push
mov
ds
pop
fcom
data16
cli
out
mov
mov
(bad)
fmul
repnz
sub
bswap
dec
je
in
lds
aam
push
jb
arpl
movs
out
jae
(bad)
in
lods
add
pop
in
pop
sahf
ret
pusha
adc
call
fwait
inc
aas
iret
inc
mov
shr
push
shr
dec
jp
sar
inc
mov
mov
lods
pop
push
repz
test
mov
jmp
mov
cmp
jmp
cmp
push
retf
imul
xchg
jno
dec
sbb
jp
mov
and
mov
cmp
aad
rcr
icebp
sbb
push
fist
out
pop
loopne
and
sub
xor
aad
jmp
leavew
mov
mov
imul
imul
in
add
xchg
test
sahf
jg
mov
dec
xchg
fincstp
cmc
js
and
jge
mov
adc
xchg
push
inc
cli
(bad)
jg
popa
push
push
mov
aaa
and
adc
fwait
sub
movs
es
sub
push
dec
xor
mov
call
or
pushf
inc
movs
sahf
push
pop
addr16
cmc
loope
fs
test
outs
sbb
cmp
call
add
pop
addr16
pop
out
loope
loop
dec
sbb
jle
out
sub
loope
add
mov
dec
sbb
xchg
out
and
xchg
mov
sbb
popa
lds
lahf
fwait
dec
sar
pop
aaa
leave
dec
hlt
outs
int3
mov
fisttp
loope
bound
test
jns
data16
pop
xchg
mov
scas
jecxz
int3
(bad)
xchg
push
fnstenv
dec
jnp
movs
pop
jecxz
push
loop
lea
stos
jnp
mov
mov
std
cmc
icebp
loopne
adc
xor
jp
lods
inc
(bad)
dec
test
ret
loopne
push
pop
das
aas
bnd
pop
dec
test
cmp
in
push
pop
mov
fdiv
dec
mov
cld
pop
lds
jmp
addr16
int
shl
add
fistp
(bad)
pushf
enter
cwde
aam
push
mov
pop
xchg
xor
js
adc
ror
out
jae
mov
icebp
lods
sub
fisubr
adc
in
int
nop
(bad)
and
add
jnp
sub
mov
cwde
fistp
movs
fiadd
mov
loope
xor
jo
sar
jle
push
add
pop
out
jae
test
ror
icebp
mov
aaa
mov
sub
jmp
xchg
ins
xchg
mov
xchg
dec
in
adc
push
lahf
das
mov
ins
jmp
xor
sbb
cwde
call
push
clc
xchg
mov
nop
mov
inc
adc
rcr
ret
das
mov
sar
outs
cmp
add
in
push
cmc
cdq
sahf
cli
add
push
lds
psubw
shl
inc
sbb
shr
cmc
jne
popf
fadd
mov
pop
mov
jl
xor
pop
lods
fs
dec
aad
ja
mov
fisubr
call
int
pop
jne
add
push
scas
inc
or
mov
jg
or
sub
ds
mov
outs
addr16
inc
ret
dec
loopne
cmps
loope
fs
mov
gs
xor
adc
out
push
sahf
movs
aam
stos
test
ret
adc
mov
rcr
xchg
fldenv
mov
iret
xor
dec
sub
sub
xor
js
dec
mov
and
push
imul
xor
(bad)
std
sub
aas
enter
mov
in
pop
pop
cld
(bad)
ins
pop
fild
sbb
call
pop
fisub
icebp
xor
ds
and
scas
cmp
jmp
cdq
mov
jno
mov
add
in
adc
pop
jne
fsubr
cmp
fiadd
test
jg
sti
add
repnz
inc
and
sub
dec
ficom
push
pop
in
test
push
cmps
cdq
ins
mov
or
shl
pop
push
mov
shl
sub
mov
mov
leave
xchg
or
test
js
sti
sub
sbb
mov
xor
ds
mov
lods
adc
mov
fs
mov
sbb
xor
xor
push
into
or
sub
fsub
cs
in
in
dec
cmp
hlt
pop
mov
inc
repnz
sub
in
lds
ja
add
es
pop
in
popa
add
imul
xor
dec
ins
pop
in
mov
cmp
pop
mov
push
sahf
loop
adc
(bad)
lods
xchg
xor
xchg
or
jge
cwde
movs
and
jp
cmp
icebp
adc
add
cmp
sbb
adc
in
sti
mov
sub
and
int3
sbb
mov
into
mov
inc
push
xor
out
test
int
dec
mov
sub
popf
div
in
cli
bound
inc
aam
mov
test
fadd
es
fcmovnbe
retf
xor
rcl
jbe
fs
dec
cmp
push
dec
iret
mov
iret
xchg
sti
outs
fst
cmc
cmp
jns
ins
adc
xor
stos
(bad)
fs
sub
or
out
adc
and
inc
(bad)
add
or
movs
pop
arpl
sbb
and
pop
out
sub
pop
loopne
pop
mov
retf
sbb
scas
pop
push
pop
es
ret
mov
popa
jp
aam
dec
popf
dec
out
in
push
mov
sub
gs
mov
pop
push
push
loope
leave
das
pushf
test
cmps
xor
cmp
aam
inc
sbb
jno
ret
pop
jp
les
push
push
pop
add
out
call
and
(bad)
clc
xchg
(bad)
retf
daa
aas
pop
or
cmps
inc
sub
xchg
imul
daa
das
push
ss
loop
outs
es
repnz
outs
push
jbe
imul
(bad)
dec
mov
out
jle
or
mov
pop
mov
jmp
inc
dec
xchg
jmp
jnp
(bad)
stc
add
and
jbe
rol
out
dec
pop
mov
lods
imul
xlat
test
jns
cmp
pop
call
mov
push
aaa
(bad)
push
dec
(bad)
cmp
xor
repnz
in
mov
aam
push
int3
arpl
mov
mov
xchg
int3
out
cli
push
jle
mov
fdivr
loop
dec
test
and
and
push
cdq
dec
test
cmp
mov
mov
leave
cmps
xor
jo
sbb
movs
fidiv
push
xchg
mov
sub
cs
pusha
mov
add
movs
inc
ss
ret
sub
in
jnp
data16
rol
fucom
xlat
lods
mov
pop
ficom
sub
data16
pop
nop
jno
retf
test
xchg
push
sub
stos
jnp
(bad)
jl
pusha
inc
and
mov
lods
jmp
mov
pop
add
adc
push
imul
sub
enter
and
nop
cmps
adc
fcmovnu
cmp
mov
adc
test
arpl
sti
cmps
shl
sub
(bad)
dec
js
xor
add
call
addr16
push
lods
or
lods
dec
jae
add
popa
stos
jae
mov
add
xchg
or
inc
ds
test
or
push
pop
sub
inc
test
js
jg
ret
xor
jp
xor
loopne
vminpd
es
ss
pop
or
pop
ficom
sbb
fisub
movs
and
in
cmp
fdiv
lods
mov
inc
(bad)
cmp
push
adc
push
sub
and
das
xor
and
pop
call
or
dec
aaa
xchg
push
and
movs
sbb
dec
fisttp
sahf
sub
pusha
js
cmps
mov
xchg
xor
sti
fstp
fisubr
pop
repz
or
(bad)
das
push
cmps
jp
aad
mov
scas
in
shr
or
push
inc
and
(bad)
cmp
outs
enter
sbb
sbb
scas
popf
sub
jbe
fucomp
mov
jg
test
add
xchg
jp
push
movs
movs
sub
pusha
fs
(bad)
mov
inc
or
mov
movs
xchg
fstp
test
xor
push
jno
stos
das
mov
add
and
nop
sbb
jae
lock
push
(bad)
and
jle
shl
xchg
lahf
cld
mov
xchg
or
sbb
stc
jne
push
mov
pusha
in
out
outs
jne
outs
mov
js
pop
clc
xchg
mov
push
mov
test
mov
(bad)
out
retf
and
stos
mov
out
js
xor
inc
dec
loopne
xor
aaa
je
jo
jb
in
fs
fdivr
(bad)
fdivr
mov
sbb
xchg
add
repz
or
and
ins
push
and
jmp
scas
je
mov
mov
ja
aas
mov
adc
sub
loop
sub
imul
ret
xchg
hlt
fidiv
xlat
sar
scas
adc
ins
repnz
nop
jecxz
jp
mov
xchg
sbb
dec
(bad)
cdq
das
loopne
lods
mov
xor
sub
or
sub
mov
ja
lahf
mov
mov
adc
(bad)
fimul
mov
mov
gs
xchg
dec
outs
lahf
cmps
fimul
xchg
into
rol
(bad)
aad
adc
stos
ret
pop
dec
xchg
jo
xor
(bad)
mov
dec
mov
loopne
mul
add
ror
nop
lea
lds
shr
fcomi
iret
fs
retf
popa
ds
pop
mov
shl
int
ins
sti
sub
rcl
or
test
xchg
scas
shl
or
test
cld
int
mov
in
sub
inc
jno
and
loopne
xchg
xor
xchg
ja
sbb
and
push
stos
pop
out
ins
jnp
bound
lea
int
add
pop
jg
fisubr
fcomp
sub
and
xchg
test
xor
push
je
pop
aam
sti
mov
sar
sub
scas
nop
test
icebp
shr
aam
(bad)
xchg
adc
int3
and
ja
jge
sbb
adc
adc
shr
inc
pusha
cwde
dec
push
pop
and
push
cmp
aam
fst
sbb
rol
sub
ss
inc
cmp
mov
pop
sbb
and
(bad)
xlat
aas
xor
cld
std
cmp
popa
lods
aam
dec
mov
dec
fiadd
leave
jo
xchg
jno
scas
lahf
ins
jmp
icebp
test
data16
pop
sub
mov
xor
out
call
loopne
stc
push
mul
sub
xchg
into
inc
ret
pop
mov
and
ret
pop
add
call
fisttp
inc
in
inc
or
xor
inc
(bad)
or
dec
inc
cmp
sub
aaa
sub
or
inc
push
sub
outs
xlat
push
pop
gs
popa
ds
aas
pop
xor
xor
mov
mov
aaa
add
cmc
(bad)
in
movs
adc
bound
jmp
scas
xlat
icebp
imul
dec
sbb
test
fimul
mov
cmps
or
ret
add
pop
clc
mov
sub
dec
push
jp
out
rol
stc
xor
dec
mov
or
ins
xchg
mov
pusha
mov
cmp
mov
in
(bad)
fstp
jnp
fwait
push
or
sbb
mov
cs
xor
xor
sbb
lea
mov
lods
daa
shl
fmulp
mov
adc
cmps
jmp
movs
cmp
int3
outs
inc
xor
dec
div
daa
inc
or
push
mov
sar
fld
xor
and
ret
xlat
cmp
sub
fnstsw
mov
jno
out
pop
pushf
mov
loop
stos
mov
jecxz
(bad)
shl
fdivrp
outs
pusha
ja
loope
in
lahf
cmc
and
pop
test
inc
dec
sbb
pop
in
enter
(bad)
or
rcl
lds
cld
mov
jno
mov
jae
add
or
popf
iret
mov
inc
fist
mov
jae
mov
xchg
mov
push
aad
test
mov
xchg
pop
push
mov
lea
imul
sbb
or
test
xchg
movs
mov
pop
and
mov
shr
jb
push
pop
push
fistp
repnz
stc
cmp
sbb
fldenv
daa
sub
xor
pop
in
lock
xor
inc
cwde
iret
xor
(bad)
jle
mov
jno
retf
idiv
cmp
into
sar
xchg
addr16
sub
pop
inc
cmp
cld
(bad)
outs
ret
icebp
push
jnp
sbb
mov
ds
mov
rol
xor
gs
add
std
sub
imul
cdq
pop
mov
push
(bad)
sbb
stc
in
push
aas
push
sbb
or
mov
cmc
add
test
nop
sti
jnp
aas
jmp
pop
sub
xor
call
add
in
in
push
out
push
adc
aas
fsubr
mov
int
pop
outs
jno
and
jmp
or
jo
jb
adc
inc
ins
popa
hlt
jmp
mov
cmp
jle
push
imul
sub
xchg
ret
pop
jmp
push
(bad)
leave
cmps
scas
adc
sub
mov
mov
pop
adc
xchg
xchg
pusha
dec
push
dec
sti
test
and
int3
std
xor
sub
xchg
cmp
arpl
xchg
imul
ret
mov
and
mov
daa
stc
adc
fsub
mov
leave
movs
mov
jecxz
mov
mul
push
pop
xor
daa
adc
adc
into
inc
cmp
adc
retf
adc
push
sti
xchg
add
call
dec
pop
mov
pop
std
sbb
sbb
nop
jae
lods
(bad)
jg
pop
xor
mov
je
dec
or
fmul
fistp
xchg
jbe
mov
inc
cwde
mov
fisubr
cmp
es
mov
push
pop
(bad)
nop
push
mov
test
lds
cmc
lahf
mov
ds
cwde
mov
out
addr16
adc
loop
inc
fbld
test
pusha
cmps
sub
fnstsw
cmp
je
add
xchg
mov
ins
pop
mov
(bad)
sub
add
cmp
pop
pusha
or
loope
and
outs
int
ror
(bad)
stc
add
mov
sub
fs
and
sbb
loopne
sbb
call
inc
add
mov
(bad)
mov
add
lds
mov
ds
add
or
add
sbb
stos
sbb
inc
(bad)
stc
inc
mov
sub
dec
in
xchg
(bad)
cwde
bound
adc
je
test
pop
enter
or
frstor
sahf
pop
(bad)
fst
add
std
and
mov
xor
mov
pop
les
xchg
or
inc
lods
or
adc
xor
scas
nop
das
loop
inc
and
xor
add
pop
inc
stos
and
ja
ins
jg
(bad)
js
add
outs
test
push
je
aaa
jo
stos
stos
fs
aam
mov
sub
cmc
outs
pop
pop
or
sub
js
dec
sbb
inc
(bad)
rol
pop
push
xchg
ret
and
scas
popf
in
fsub
dec
pop
das
push
xor
adc
or
xor
push
jae
clc
movs
dec
mov
ret
stos
xlat
call
xor
or
fstp
outs
enter
push
dec
add
cdq
pop
lods
out
arpl
jmp
adc
mov
(bad)
mov
xchg
movs
dec
sbb
pop
pop
add
lds
scas
enter
lea
push
push
into
xor
cli
push
call
es
sub
pop
clc
retf
pushf
pop
mov
or
or
sbb
mov
push
adc
pushf
mov
test
xchg
addr16
sub
mov
adc
ret
rcr
adc
scas
cmp
dec
retf
pop
or
add
xor
xor
mov
mov
inc
imul
push
adc
into
pop
cmp
mov
test
je
or
inc
sub
cs
scas
setl
stos
test
test
jmp
or
sbb
sbb
push
sbb
fdiv
scas
bound
add
stos
push
add
xchg
fidivr
das
jge
dec
mov
daa
out
cmp
scas
mov
aaa
dec
cmp
push
mov
fcomp
cmc
sti
loope
sbb
pop
add
or
(bad)
scas
in
inc
dec
outs
out
test
xchg
mov
sahf
jns
lods
mov
clc
repz
mov
sub
cli
sbb
inc
and
adc
(bad)
lods
mov
push
jo
popf
and
movs
(bad)
mov
js
test
xchg
sub
pop
fcom
enter
sbb
ins
pop
mov
movs
aad
or
mov
jo
les
mov
adc
dec
ror
xchg
cmc
xacquire
xchg
cdq
inc
mov
push
maxps
mov
gs
and
add
mov
hlt
js
sbb
clc
out
or
mov
sbb
add
pop
mov
addr16
jno
clc
jmp
sbb
popa
push
cs
fst
sub
or
push
jns
imul
dec
sub
or
push
popa
movs
(bad)
jge
xchg
jle
retf
scas
adc
push
xchg
add
sbb
imul
sub
pop
jle
lea
cmp
cwde
jb
pop
inc
jmp
fprem1
dec
xchg
movs
jecxz
push
outs
push
add
int
jg
test
mov
je
popa
(bad)
jmp
add
mov
cmp
inc
pop
xchg
sbb
bound
mov
call
inc
dec
cwde
(bad)
mov
mov
jmp
pop
(bad)
adc
lea
mov
(bad)
mov
and
aam
cli
ins
std
ins
dec
mov
mov
repnz
int3
in
lock
sbb
or
sub
pop
xchg
mov
cs
push
mov
mov
inc
mov
sbb
rcl
or
mov
sub
ret
and
js
fcomp
cwde
xchg
addr16
popa
imul
clc
cmp
jmp
dec
fmul
loopne
outs
xlat
sbb
outs
cmp
fisttp
xchg
xor
dec
lods
xor
or
shl
push
pop
in
out
fstp
and
xor
sub
and
inc
or
adc
sbb
fsubr
fs
(bad)
pushf
cmp
mov
xchg
mov
test
pop
jg
fwait
xor
and
and
lock
call
add
add
or
bound
push
dec
loope
seto
loope
sub
clc
sbb
loop
cmp
je
cmp
loopne
push
mov
test
movs
vmovhps
mov
mov
popa
pop
lahf
inc
mov
scas
mov
dec
inc
iret
es
movs
xchg
in
shl
loop
push
es
add
add
push
scas
adc
out
retf
adc
push
jo
jl
xor
sahf
lahf
nop
sub
int
in
into
xchg
dec
test
mov
push
adc
(bad)
jle
lock
in
dec
sbb
adc
jl
ret
pop
mov
scas
push
jle
stos
pop
ror
leave
cmps
mov
cld
out
pushf
(bad)
stos
loope
jae
cmc
inc
test
fsub
popa
xchg
sar
mov
bound
(bad)
cmps
lods
inc
mov
mov
push
mov
pop
mov
(bad)
call
jns
cmps
retf
push
or
mov
sub
mov
and
add
imul
scas
out
push
xor
rcr
pop
add
scas
(bad)
xor
jp
xchg
(bad)
xchg
inc
add
in
scas
repz
fsub
mov
out
in
stos
fimul
test
in
or
sub
cmps
loopne
repnz
rol
in
add
pop
dec
dec
stos
repz
xor
(bad)
cdq
(bad)
jns
push
or
add
mov
js
popa
and
push
inc
dec
das
fimul
fisttp
je
sbb
jne
(bad)
cs
inc
not
pop
minps
aam
cwde
aam
add
je
in
xchg
push
xchg
fnsave
mov
xor
arpl
add
jbe
mov
dec
adc
jge
mov
fild
sbb
inc
push
sub
jg
mov
add
cmp
bound
iret
lahf
fmul
cmp
adc
cmps
pop
pushf
dec
mov
je
xchg
repz
cs
arpl
jo
cmp
sub
ja
sub
aaa
std
ins
test
or
jmp
push
sahf
ins
(bad)
mov
cli
cmps
sbb
retf
outs
div
inc
or
clc
dec
xor
fwait
aaa
aad
pop
mov
jge
pop
pop
inc
or
pusha
xor
in
aad
adc
sbb
stc
fldenv
(bad)
in
cmp
les
ret
xchg
out
push
add
jmp
pop
dec
mov
scas
pushf
(bad)
icebp
lds
jmp
cdq
add
nop
movs
cmp
push
add
sbb
shl
sbb
push
leave
jle
add
mov
xlat
out
out
rcr
or
mov
add
test
push
mov
push
mov
xor
imul
mov
inc
jmp
rcr
mov
inc
or
push
stos
pop
inc
and
xor
je
xchg
xor
nop
pop
aad
imul
push
ins
arpl
xlat
mov
out
mov
lahf
jbe
test
std
xchg
retf
jmp
jg
add
xchg
bsf
cmp
fbld
dec
inc
add
outs
inc
adc
pusha
test
fcom
ror
(bad)
jge
fstp
inc
cmps
xor
(bad)
in
inc
neg
jge
pusha
xchg
mov
mov
mov
and
push
adc
inc
add
push
outs
mov
push
mov
mov
mov
sbb
xor
fwait
xchg
cmp
cs
rcr
fsub
jns
repnz
imul
cmp
dec
test
aaa
addr16
popa
js
cld
popa
mov
mov
adc
jmp
call
dec
movs
imul
lahf
push
or
stos
sub
js
out
and
or
shl
xchg
pop
xor
pop
das
push
lods
scas
(bad)
lds
xchg
mov
jp
jno
mov
fsubr
or
(bad)
add
xchg
push
inc
sti
cmps
cmp
cmps
mov
xchg
inc
mov
push
imul
ins
cmp
pop
cmp
sbb
sahf
popf
test
sub
(bad)
mov
dec
out
push
(bad)
mov
cmps
jne
or
popf
cmp
mov
outs
mov
ret
dec
or
arpl
fidivr
sbb
rcr
test
ja
cmc
inc
enter
test
mov
pushf
test
retf
xchg
lock
ret
xchg
mov
jbe
jmp
jg
mov
push
ins
sbb
sar
sti
mov
pop
mov
sbb
(bad)
jb
(bad)
jb
xlat
(bad)
cli
outs
ds
cld
fidivr
adc
add
jmp
adc
js
loop
(bad)
(bad)
ret
push
inc
pop
pushf
sbb
jno
arpl
and
clc
in
adc
test
cld
ds
sub
pop
scas
jmp
cs
test
jmp
cld
adc
adc
cs
xor
js
hlt
neg
out
mov
pop
jo
outs
add
daa
in
fidiv
jnp
adc
dec
retf
popa
pop
(bad)
out
arpl
mov
adc
scas
(bad)
jmp
jmp
cmp
shl
push
push
push
(bad)
sbb
add
dec
and
sub
ret
mov
shr
jecxz
movs
jnp
jecxz
(bad)
push
mov
dec
test
iret
mov
jae
in
ret
call
xchg
mov
jecxz
push
inc
mov
cmp
iret
jg
mov
cdq
stos
xchg
jecxz
inc
mov
jl
ins
and
(bad)
mov
jae
fldcw
add
call
bound
mov
iret
mov
int
push
cld
sbb
push
test
es
jge
in
das
shl
jnp
xchg
pop
mov
(bad)
cmp
add
sub
or
fist
pop
in
jnp
leave
in
hlt
mov
and
mov
dec
push
mov
cmps
mov
push
push
push
inc
out
mov
test
xchg
cmp
add
test
mov
das
pop
sub
push
cmp
(bad)
pop
cmp
imul
lock
lods
dec
jp
mov
sbb
mov
mov
aam
dec
push
jae
cmps
jmp
int3
test
test
mov
call
aaa
jae
stos
out
push
pop
movs
fdivr
into
sub
mov
or
aas
std
pop
ror
jnp
push
test
xor
mov
mov
fiadd
daa
je
dec
xchg
sbb
pop
and
pop
ss
test
shl
iret
pusha
mov
and
jmp
inc
fwait
or
add
lods
loopne
cdq
out
push
sbb
fild
xchg
dec
pop
push
test
jl
ror
push
or
mov
push
lods
mov
ins
or
fpatan
and
ret
leave
push
sti
and
push
or
dec
dec
mov
jne
cdq
lock
(bad)
bound
jl
into
loop
sub
pop
outs
leave
xor
add
fs
out
cmp
pop
arpl
xchg
ds
sub
sbb
sub
xchg
outs
cli
mov
jge
add
xor
inc
(bad)
adc
and
rol
addr16
mov
adc
inc
pop
neg
test
sub
push
and
lods
mov
cld
das
xor
dec
or
aas
cli
popa
mov
jb
pushf
(bad)
add
jns
xor
dec
mov
call
jno
rcr
mov
ss
add
loop
movs
sub
adc
and
addr16
or
push
pop
call
mov
adc
pop
ins
mov
push
loopne
add
fbstp
add
movs
ins
sbb
dec
pop
or
addr16
and
add
cmp
enter
js
icebp
push
stc
mov
iret
retf
cmp
adc
xchg
loop
jo
lods
les
ds
inc
and
hlt
retf
xchg
and
das
sub
sub
mov
cmp
in
mov
gs
loopne
in
(bad)
mov
das
xchg
mov
mov
push
adc
sbb
cmp
aam
mov
pop
mov
sahf
aam
rcl
or
mov
pop
lods
push
mov
push
pop
cmp
shl
jnp
jge
or
push
cmp
mov
pop
and
test
push
lods
or
data16
ror
sub
mov
and
cdq
bound
arpl
and
arpl
cmp
cmp
cld
les
je
jmp
jg
mov
mov
cld
mov
or
and
mov
ins
mov
pop
fdivr
test
or
js
test
sbb
jge
xchg
fs
inc
ret
and
nop
dec
aam
add
retf
and
ret
mov
and
pop
dec
xor
mov
stos
mov
or
loope
push
mul
retf
push
xchg
mov
outs
inc
inc
sub
cmp
dec
add
mov
in
(bad)
jb
fmul
xor
movs
addr16
fstp
mov
xchg
add
xchg
retf
xor
xchg
xchg
imul
daa
pop
ss
ds
call
cmp
adc
jge
retf
adc
sbb
pop
mov
dec
xchg
sub
or
ret
sub
mov
or
inc
leave
mov
or
retf
jbe
sbb
bound
loopne
mov
lea
ins
clc
fsubr
mov
add
inc
push
push
push
dec
imul
movs
into
pop
xchg
mov
in
mov
enter
pextrw
jl
xor
test
test
dec
sub
pop
push
dec
in
mov
pushf
ss
adc
mov
sub
push
dec
call
inc
outs
retf
lock
nop
ret
mov
stc
jmp
dec
repnz
aaa
jmp
sbb
inc
mov
les
scas
push
clc
ja
repnz
push
enter
into
sub
xchg
push
inc
retf
ds
pop
push
daa
pop
retf
dec
(bad)
in
and
(bad)
push
stos
pushf
cld
inc
xchg
dec
mov
jne
cdq
(bad)
push
cs
cld
hlt
hlt
test
pop
dec
jle
lea
shl
loopne
(bad)
bnd
or
cmps
fisttp
test
fwait
gs
(bad)
vcomisd
jl
sbb
inc
mov
sbb
inc
shr
mov
mov
std
pop
iret
icebp
mov
or
jb
inc
inc
jne
jmp
loop
inc
xor
imul
shl
test
xchg
arpl
add
inc
mov
xchg
leave
pusha
cmps
int3
fwait
inc
pop
sahf
rcl
cmp
cmp
xor
jno
aas
dec
inc
jge
jge
or
mov
inc
inc
(bad)
test
mov
xor
aaa
or
push
mov
or
jmp
mov
jg
inc
leave
push
push
int
sub
cmps
push
scas
add
sbb
push
xor
jbe
aas
int
jge
push
and
aam
jge
mov
(bad)
fsubrp
ins
aam
rcr
inc
in
mov
jo
xor
dec
retf
adc
push
lock
(bad)
fidiv
fisubr
adc
cld
test
jbe
jo
(bad)
popa
or
fcomi
jmp
test
push
outs
or
push
js
mov
push
(bad)
outs
andnps
and
cld
push
cld
scas
inc
sub
jmp
popa
add
jge
ficom
sub
lea
outs
(bad)
in
add
stos
test
push
test
cmp
or
adc
movs
ffree
inc
xchg
sbb
gs
(bad)
sbb
and
lods
mov
stos
xchg
shl
mov
jecxz
adc
pop
and
sbb
test
mov
outs
scas
jns
scas
push
inc
mov
mov
mov
outs
add
jo
jno
jge
xor
stc
shr
or
mov
cmp
(bad)
mov
xchg
std
sbb
push
pop
pop
push
or
mov
iret
push
or
mov
scas
std
mov
fldenv
jl
fxch
fucomip
loop
xlat
jbe
mov
stos
add
call
mov
cmp
add
iret
enter
dec
push
adc
das
inc
ficomp
imul
add
sub
outs
sbb
in
cmp
inc
push
cmp
jne
shl
jmp
iret
xor
pop
dec
mov
jne
ja
ds
and
mov
mov
fmul
pop
fcom
int
bound
idiv
mov
out
packssdw
xor
or
bound
sbb
xor
aas
sbb
sbb
xlat
xor
dec
xchg
add
sub
int3
or
cmps
loop
popf
mov
hlt
enter
and
cmp
les
inc
jnp
addr16
(bad)
in
out
pop
int3
cmp
pop
xchg
and
daa
aad
jge
push
(bad)
pop
retf
jmp
jb
fwait
jge
shl
and
inc
(bad)
jne
dec
cwde
lods
sub
or
sar
repz
in
jns
sbb
mov
and
fs
out
lea
xor
jne
mov
popa
xor
jl
mov
test
je
sub
ror
pop
popf
cmp
(bad)
into
cld
jo
sti
cli
mov
push
or
sbb
sbb
cdq
pop
sbb
lock
or
add
mov
pusha
xchg
pop
mov
test
into
js
movs
(bad)
jl
mov
fist
movs
jbe
inc
or
xchg
addr16
(bad)
sbb
pminsw
test
dec
repz
inc
ret
in
(bad)
fnsave
test
mov
stc
adc
popa
mov
pop
cmps
push
dec
mov
aad
mov
push
imul
add
imul
in
xchg
jle
int
cmp
fcomp
in
cmp
in
out
in
or
(bad)
out
outs
sub
dec
test
xor
pop
sbb
adc
or
dec
jmp
pushf
(bad)
jnp
call
rcr
jb
das
in
ror
mul
adc
mov
imul
xchg
mov
aam
mov
pop
lea
in
jae
mov
shl
and
arpl
push
xor
stos
cmc
scas
cmc
shl
das
push
outs
das
out
add
sbb
pop
leave
fwait
out
pop
sub
cld
(bad)
and
stc
mov
adc
es
das
and
push
inc
sub
xchg
mov
mov
(bad)
out
jae
or
in
pop
mov
in
outs
and
bound
inc
sub
scas
(bad)
or
mov
xlat
push
test
(bad)
cmp
outs
loopne
daa
out
mov
pop
adc
jns
loopne
mov
(bad)
fidiv
jg
dec
(bad)
neg
test
inc
fdiv
inc
xchg
mov
push
push
shr
jbe
or
xchg
lahf
ja
mov
xor
dec
xchg
add
movs
push
stos
fist
mov
mov
out
pop
mov
and
sahf
add
loope
sbb
imul
sbb
jmp
jp
imul
add
daa
inc
jo
xor
stos
jecxz
mov
push
das
nop
movs
add
test
and
test
mov
xor
or
add
sbb
bound
add
sahf
stc
pop
sub
(bad)
ins
cld
arpl
out
mov
retf
sub
sub
fxam
imul
or
in
bnd
push
and
mov
dec
ret
jnp
nop
mov
loop
fidivr
cs
pop
mov
sar
jnp
loop
imul
popf
call
pop
cmovnp
into
sbb
pop
sub
leave
cmp
and
push
or
hlt
mov
pushf
mov
xor
je
jmp
mov
mov
xchg
ja
cmps
push
sub
clc
rcl
int3
sub
cmc
and
ret
(bad)
push
mov
in
ret
icebp
sbb
jne
and
cmc
imul
sub
or
or
test
mov
ret
jge
pop
jl
and
jns
sbb
es
paddd
fxam
(bad)
aas
aas
int
mov
test
xor
jecxz
mov
mov
inc
popa
adc
mov
in
fld
cmp
or
hlt
daa
mov
xor
jl
push
pop
and
cmp
cmp
stc
(bad)
mov
mov
jns
out
ror
test
in
popa
cmps
fdivrp
jg
jnp
popf
add
mov
lea
mov
shr
inc
icebp
or
xchg
pop
fld
push
ss
or
mov
jb
pop
hlt
cs
mov
mov
push
cs
dec
mov
ss
mov
jg
pop
mov
in
cmp
ins
fnsave
xchg
in
and
sub
cs
jecxz
mov
sub
scas
leave
fs
call
sti
shl
cmp
adc
ins
mov
movs
fldlg2
shl
cmp
jnp
mov
sbb
or
mov
je
push
mov
push
stos
push
leave
rol
xchg
mov
push
lahf
pop
jnp
xchg
jp
inc
xlat
mov
inc
push
mov
push
push
xchg
out
sar
push
outs
mov
stos
dec
cs
shl
dec
ins
movs
sbb
scas
lock
enter
(bad)
cwde
jnp
push
jns
sbb
sti
adc
outs
shl
ficom
ja
daa
mov
sti
add
in
mov
mov
jmp
jno
xor
cdq
stos
cdq
adc
rol
cmp
and
mov
sbb
cs
pop
push
inc
icebp
imul
les
mov
cmps
imul
in
in
pop
sar
or
jle
add
data16
push
pop
call
add
xchg
mov
add
adc
dec
sub
mov
push
dec
or
loop
movs
mov
xlat
daa
outs
cmp
and
mov
call
dec
push
shl
ins
stc
cmp
adc
jg
sbb
mov
adc
lds
sub
add
mov
sub
jns
ins
xchg
jecxz
arpl
push
pushf
cmp
dec
nop
add
and
sub
sbb
xchg
jmp
and
rol
loope
sub
pop
jo
jmp
pop
adc
push
sar
(bad)
sbb
push
iret
lods
sub
inc
push
icebp
or
icebp
dec
xor
aam
jp
or
test
pop
jns
daa
jbe
inc
and
push
jno
pop
shl
std
and
mov
and
loope
imul
rcr
push
jb
lea
es
sub
ja
mov
push
cmps
inc
xor
mov
mov
sbb
popa
and
dec
icebp
test
xor
jnp
pop
push
in
das
rcr
sti
push
jno
and
jo
or
aam
popa
push
in
add
rcl
frstor
xor
pop
(bad)
test
ins
mov
sub
jecxz
add
dec
aas
test
mov
push
xchg
add
lea
xor
xchg
test
loop
push
sbb
jo
fdiv
add
aas
sar
fisub
lock
mov
test
xor
or
cli
mov
icebp
(bad)
dec
rcr
sar
sar
mov
scas
pushf
leave
lds
sti
sub
mov
retf
rcl
leave
push
add
(bad)
mov
inc
inc
jg
sub
inc
or
xor
call
sti
in
mov
iret
lods
cmp
fcomp
call
pop
xchg
aam
pop
call
iret
xchg
pop
addr16
mov
push
(bad)
jmp
scas
arpl
lods
cmp
adc
jg
das
xchg
and
into
sbb
mov
xor
lock
mov
in
dec
sub
xchg
or
loopne
fdiv
pop
cmp
imul
fild
and
cmp
retf
sbb
cmp
data16
repnz
mov
jmp
bound
adc
ins
push
or
mov
adc
dec
rol
push
xchg
sbb
dec
fdivr
cli
jl
pop
pop
pop
xchg
stos
icebp
jbe
mov
add
fist
sbb
mov
das
pop
aaa
mov
mov
xchg
lahf
cmp
mov
jg
sub
cmp
ins
xor
pop
sti
mov
scas
mov
inc
lods
pop
xchg
imul
fnstcw
out
jmp
sar
xor
popf
pushf
push
mov
dec
call
jge
and
pop
retf
aam
dec
outs
add
add
pop
js
xchg
cld
lea
adc
jmp
leave
jno
dec
jnp
out
int3
pusha
mov
mov
(bad)
int
mov
je
jp
fs
mov
and
fisubr
in
daa
jnp
inc
test
jmp
and
mov
or
ret
xchg
aaa
jno
cmp
push
pop
loopne
jo
inc
in
cmp
js
sub
ficomp
scas
pushf
stos
dec
bound
pop
lahf
or
pop
rcr
jnp
sub
pop
inc
xlat
dec
cmc
inc
mov
pop
add
stos
cmp
addr16
fiadd
inc
mov
(bad)
rcr
test
pop
add
nop
jno
iret
in
sub
cmps
(bad)
sub
rol
test
cmp
jb
test
dec
sbb
cmp
push
jg
xchg
jmp
int3
jae
sub
in
(bad)
cmc
int3
sbb
inc
sub
js
arpl
shl
call
js
bound
sub
cli
add
test
inc
xchg
stc
xor
call
mov
adc
loope
add
xchg
fnstenv
xchg
push
xchg
and
iret
pop
dec
test
pusha
cld
fild
xchg
popf
adc
mov
adc
xor
xchg
xchg
xor
(bad)
mov
daa
stos
repz
xor
call
dec
inc
(bad)
retf
mov
sub
ret
(bad)
push
repnz
aas
mov
adc
cmp
sub
ds
(bad)
mov
pop
das
retf
fadd
addr16
xchg
pushf
test
inc
push
mov
test
dec
nop
pop
cli
adc
and
mov
jno
adc
cli
jmp
add
inc
fidiv
mov
ret
push
xchg
inc
fs
dec
push
outs
ret
xchg
xor
inc
rcl
nop
hlt
sbb
pusha
xchg
enter
mov
stos
pop
jne
jns
aaa
jl
icebp
mov
aad
mov
sbb
xlat
in
icebp
test
or
das
(bad)
out
cmp
nop
ret
int3
mov
or
dec
xor
jle
clc
fisttp
push
dec
mov
mov
xchg
leavew
mov
xchg
mul
addr16
jmp
push
mov
inc
popf
and
and
mov
mov
push
adc
jns
or
dec
test
pop
xchg
lahf
mov
lds
cs
xchg
mov
stos
and
inc
sub
ds
jbe
mov
adc
xor
inc
cmps
arpl
fisttp
movs
int
xlat
sbb
out
stc
imul
fcmovnb
test
nop
es
and
ins
jne
push
sbb
mov
pushf
(bad)
popf
lock
xchg
adc
test
xchg
ins
mov
xor
mov
cmp
mov
dec
rcl
imul
icebp
jbe
div
test
retf
es
sbb
adc
jb
je
push
jg
inc
lods
adc
in
cmp
adc
stc
dec
addr16
push
test
fsubr
cdq
inc
ins
(bad)
movs
and
push
fld
fst
jecxz
pop
ss
mov
jmp
sbb
fsubr
cmp
jge
pop
sbb
call
mov
sbb
(bad)
xor
cmc
pop
inc
iret
call
mov
adc
es
js
push
xor
arpl
dec
aad
xchg
test
repnz
pop
cmp
popa
inc
sahf
ss
mov
aam
ja
or
fucomp
cmp
jl
sti
or
jl
jne
cmp
scas
xchg
pusha
lods
add
out
in
das
out
mov
push
push
or
xchg
lock
test
jg
in
cdq
dec
pop
and
cmp
fsubr
aad
push
dec
mov
arpl
fist
(bad)
daa
jle
rcl
jecxz
call
xchg
les
mov
jl
fiadd
cmp
mov
in
jle
xor
or
xchg
add
or
push
sti
out
add
inc
arpl
inc
arpl
icebp
pop
jmp
mov
enter
rcl
int3
xlat
shl
movs
xchg
mov
or
test
hlt
mov
mov
aam
or
inc
mov
mov
and
test
movs
jl
outs
das
pop
jg
cmp
add
fcmovb
jb
cmps
and
adc
cwde
scas
inc
leave
pop
dec
pushf
repnz
std
mov
ret
(bad)
clc
out
fldln2
int
jae
test
xchg
sti
sti
xchg
mov
outs
mov
aad
dec
push
jmp
or
aaa
xchg
sub
dec
test
xchg
loope
jne
fwait
sub
es
jmp
push
outs
stos
inc
dec
xchg
jge
scas
enter
adc
mov
in
push
ins
xor
cs
jmp
xchg
jecxz
pop
push
jmp
pop
cmp
cmp
jmp
mov
je
sbb
fwait
call
stos
in
dec
dec
push
xchg
mov
lods
jbe
cs
jno
aad
dec
(bad)
cmp
stc
sbb
popa
pop
call
(bad)
pop
add
adc
lds
inc
(bad)
mov
inc
xchg
lds
fimul
push
mov
cli
mov
aaa
shr
nop
repz
pop
test
mov
cmp
stos
aas
sub
cmp
into
shl
test
jp
ret
cmc
ja
icebp
and
and
xchg
out
movs
das
pop
enter
mov
cwde
cmp
push
cdq
out
popf
lods
xchg
repnz
sbb
xchg
je
pop
dec
rcl
inc
ret
sub
(bad)
jmp
mov
xor
mov
jne
pop
es
cmps
cmp
push
pusha
mov
xor
daa
cmp
mov
rcr
into
jp
sbb
mov
mov
sbb
push
mov
mov
and
fsubrp
adc
fwait
test
and
imul
push
xchg
ds
into
movs
ins
popa
adc
mov
mov
jmp
mov
hlt
loope
and
imul
jmp
imul
movs
pusha
dec
sbb
test
(bad)
jo
inc
cmp
push
sbb
fnsave
xor
addr16
dec
aas
push
fcom
adc
nop
jbe
(bad)
push
in
in
lea
jge
add
dec
movs
sbb
sbb
add
pop
fwait
sbb
and
rol
pmullw
sar
pushf
stos
mov
inc
sbb
inc
js
arpl
mov
imul
mov
push
adc
pop
xchg
sub
adc
or
pop
test
add
int
sub
shl
cwde
mov
stc
inc
rol
popa
or
and
mov
mov
in
add
xor
aam
push
cmps
out
add
outs
int3
in
test
add
fwait
jmp
cs
fnstenv
cdq
jmp
loop
add
ret
std
cmp
aaa
push
pop
inc
stos
inc
or
test
pop
jg
mov
ja
push
dec
cwde
retf
lds
fadd
mov
sub
movs
test
mov
push
(bad)
xor
jne
add
dec
push
ror
popf
xchg
loopne
or
adc
sub
movs
or
in
icebp
fiadd
fcomip
fdivr
dec
xor
stos
div
inc
push
mov
pop
ins
push
out
sub
mov
aaa
lods
icebp
mov
fs
clc
fwait
icebp
stos
push
ds
dec
(bad)
in
ds
mov
inc
int
pusha
xor
add
std
sub
sbb
into
gs
cld
bound
shl
push
fld
mov
in
clc
jb
fld
addr16
(bad)
fisubr
stos
mov
adc
inc
in
cmp
or
adc
int
not
bound
fs
rcr
or
jge
jo
inc
cld
mov
xlat
inc
dec
dec
enter
sub
enter
sbb
inc
cmps
and
sub
enter
shr
lea
xchg
jg
sbb
in
xor
cmp
or
fld
jmp
mov
inc
ds
aaa
cdq
mov
jns
daa
aad
cmp
in
xchg
test
pop
mov
adc
repz
fcmovne
push
dec
rcr
sub
and
xchg
xchg
in
sub
xor
xor
or
adc
jge
jnp
cmc
pop
pop
xor
ret
mov
mov
jae
mov
push
fdivr
jge
ds
stos
and
aas
out
sub
fdiv
adc
repnz
fadd
sub
sub
outs
mov
das
or
es
sub
leave
inc
out
mov
lar
punpckhdq
sbb
imul
in
adc
push
inc
mov
sbb
int3
outs
mov
popa
or
and
sbb
and
shl
jmp
scas
int3
mov
cs
sbb
cmp
jp
xchg
aaa
sti
shl
out
jle
mov
ficomp
inc
movs
mov
out
cdq
xchg
div
xchg
aad
sbb
jmp
sbb
sub
jge
sub
loopne
repnz
mov
dec
lock
jnp
outs
repz
cmp
cmp
outs
movs
push
mov
repnz
lahf
jecxz
es
nop
(bad)
jge
sub
sbb
mov
adc
mov
pop
jmp
pop
or
fisub
jb
not
jb
push
adc
test
(bad)
and
dec
clc
mov
out
pop
push
mov
mov
push
test
dec
xor
into
cli
mov
push
mov
js
xor
mov
test
test
mov
int
das
push
je
dec
mov
add
inc
inc
fstp
and
xchg
ret
nop
mov
cmp
cmps
out
sub
sar
mov
push
mov
mov
in
or
mov
xchg
mov
sti
in
lahf
pop
mov
leave
hlt
(bad)
mov
pop
ret
push
sahf
imul
mov
pop
es
arpl
pusha
xchg
out
loop
mov
bound
add
loop
cmp
jo
or
or
fmul
push
pop
(bad)
outs
push
cmc
adc
ja
test
and
adc
clc
call
dec
hlt
sub
mov
sub
xchg
push
pop
mov
adc
dec
neg
push
mov
jo
push
je
fisub
mov
das
add
push
gs
xchg
imul
retf
loopne
test
xor
mov
and
out
shr
psubd
push
xor
ficom
fwait
inc
fnsave
push
or
out
cmp
es
push
out
mov
mov
mov
popa
adc
sbb
mov
add
fnstsw
and
add
(bad)
mov
pop
sahf
mov
mov
xchg
jo
out
sti
sbb
mov
lds
mov
push
mov
xchg
stc
mov
mov
repnz
lock
call
and
push
scas
ins
cmp
cmp
adc
inc
mov
and
shl
adc
imul
aad
mov
and
retf
sbb
add
mov
iret
cmp
xchg
inc
cmp
out
fidiv
and
jae
add
jae
sbb
xor
loope
in
sbb
mov
(bad)
fldcw
lods
jne
mov
mov
test
fcmovnu
retf
jbe
jmp
jg
in
sub
movs
push
es
shl
xor
jno
sbb
adc
fs
jle
and
retf
sub
fnstcw
enter
fisubr
(bad)
sbb
aaa
pop
call
out
dec
adc
and
iret
mov
ret
je
adc
cmp
lods
pop
daa
ss
and
push
inc
cmps
adc
imul
movs
dec
dec
inc
enter
bound
shl
imul
fmulp
(bad)
jb
push
addr16
push
pop
pop
xor
inc
call
sbb
mov
jo
mov
inc
push
in
cmp
mov
and
daa
inc
adc
mov
cmps
int3
lds
in
imul
ret
cmp
and
cmp
pop
cli
loop
xchg
les
lds
jb
pop
inc
stc
outs
fldenv
mov
xor
mov
sar
mov
and
xchg
movs
movs
mov
jne
dec
repz
jae
pop
mov
pop
stos
pop
fwait
loop
pop
mov
fwait
or
sub
jge
(bad)
push
xor
test
pop
add
add
(bad)
std
jns
and
es
addr16
(bad)
mov
mov
loopne
mov
test
shl
and
movq
(bad)
shrd
jp
repnz
or
dec
sub
adc
mov
sbb
js
hlt
xor
sti
or
dec
xlat
sub
jnp
test
popf
push
xchg
xlat
mov
adc
xor
push
icebp
jbe
retf
lea
rcr
cmps
test
pop
push
and
les
sbb
adc
inc
out
jmp
ins
cli
push
inc
(bad)
in
jge
cmp
hlt
jge
in
rcl
stos
and
fs
pop
pop
test
loop
cmp
jo
add
test
and
shl
jnp
cs
dec
jmp
pusha
rcr
push
dec
cmp
mov
sub
(bad)
sbb
sbb
in
or
fwait
test
cdq
test
add
sub
mov
sub
inc
(bad)
mov
mov
pop
jecxz
jo
and
aam
push
sub
push
out
xor
lods
xor
push
test
cmp
retf
pminsw
(bad)
imul
fisub
and
jg
cmp
movs
sti
mul
cmp
repz
leave
jo
daa
add
sbb
fs
push
mov
pop
xchg
sub
mov
shl
aam
in
into
xor
cmp
(bad)
enter
in
mov
rcl
or
mov
and
sub
lods
pop
sahf
es
sahf
sahf
sbb
sbb
(bad)
sbb
out
lea
popf
loopne
jb
dec
mov
pop
xor
cld
enter
retf
adc
push
fadd
xchg
and
(bad)
mov
inc
fiadd
stc
add
enter
cmp
sahf
fisubr
fs
cmp
cmp
dec
retw
cs
mov
test
mov
repz
rcr
inc
fld
jecxz
xchg
sub
xchg
xor
sub
xor
xor
lods
xor
jg
push
adc
cmp
add
jb
mov
leave
sbb
ins
mov
inc
(bad)
not
add
mov
dec
dec
adc
pushf
popf
mov
adc
mov
adc
add
xor
cmp
aam
sub
mov
or
add
fstp
add
adc
and
inc
inc
hlt
xor
push
sub
pop
mov
gs
sub
in
pop
movs
pop
cmp
mov
or
push
out
xchg
(bad)
jbe
pop
and
(bad)
mov
imul
rcl
xor
or
inc
mov
outs
sti
(bad)
aad
sti
pop
ret
sub
shl
add
ror
loope
in
mov
aaa
push
ret
data16
push
push
pop
ret
jb
movs
test
mov
ret
dec
scas
fistp
(bad)
cmp
and
inc
mov
in
fiadd
adc
cdq
xor
test
dec
loop
enter
jmp
dec
test
loop
cmp
xor
cmp
cmp
xchg
sub
or
cdq
inc
cli
inc
push
retf
adc
mov
dec
dec
adc
aam
imul
imul
cld
mov
repnz
adc
push
push
jbe
(bad)
and
push
or
xchg
in
dec
js
cs
clc
test
adc
sti
inc
outs
jp
push
aas
xor
adc
cs
pop
xchg
mov
cmp
inc
call
mov
lds
push
outs
dec
les
daa
ins
inc
xchg
xchg
pop
int
pop
push
or
imul
sub
cwde
fisub
and
pop
adc
js
jo
push
(bad)
cmp
mov
inc
xor
dec
ss
sbb
adc
jecxz
jge
inc
test
xor
dec
mov
xlat
cwde
and
or
pop
adc
add
pop
and
mov
dec
xor
jmp
adc
ret
or
inc
jne
mov
or
fcomi
loop
ret
in
out
adc
shl
dec
sub
add
gs
stos
pop
fldcw
(bad)
push
mov
in
push
into
mov
dec
(bad)
iret
fild
xchg
and
call
in
scas
push
ja
adc
ror
push
xchg
stos
push
in
repz
xchg
xor
adc
mov
and
add
and
(bad)
pop
fwait
daa
inc
pusha
add
or
rcl
sbb
shl
(bad)
and
mov
jl
popf
xchg
xor
jo
add
xor
pop
js
(bad)
shl
sub
and
mov
nop
mov
dec
(bad)
arpl
dec
and
dec
std
xor
add
enter
pop
out
jmp
loopne
or
scas
in
mov
outs
nop
stc
or
dec
daa
fsubr
pop
xor
nop
dec
ret
xchg
outs
out
lods
mov
dec
cmps
sub
cmp
jne
ss
or
test
repz
xor
das
imul
inc
(bad)
(bad)
push
(bad)
iret
dec
dec
cmp
adc
call
pop
xor
loop
test
push
and
test
jp
lahf
xchg
ja
rcr
push
sub
sub
cli
xor
xchg
bound
lahf
or
xchg
or
fwait
imul
mov
xor
icebp
mov
xor
jmp
adc
mov
gs
repnz
xchg
sti
loope
sbb
inc
jecxz
and
pop
test
pop
aas
(bad)
cmc
push
jae
sbb
jmp
xchg
mov
and
stos
fisttp
js
jl
push
mov
add
mov
sar
xchg
jmp
mov
mul
pop
lea
sbb
push
cmp
out
xchg
jne
xor
push
sub
or
jo
and
popf
and
push
in
mov
or
test
ret
shl
mov
jle
mov
mov
fwait
call
push
pop
jg
xchg
cmp
mov
mov
dec
jmp
push
mov
xlat
mov
je
aam
inc
clc
mov
(bad)
cmp
pop
push
pop
ja
cdq
add
xchg
sbb
test
jge
and
imul
push
cmps
cmp
push
popf
push
mov
clc
sbb
push
pop
in
mov
push
adc
idiv
pop
push
shr
stos
shl
sbb
mov
jg
psllq
mov
sub
jp
call
pop
jmp
mov
mov
jp
push
bound
mov
out
inc
mov
sub
ror
or
sub
jmp
leave
push
pushf
mov
jbe
pushf
sbb
jae
pop
mov
imul
lea
iret
sub
pop
cmp
xchg
retf
dec
loope
push
lahf
xor
sub
jns
xchg
adc
mov
addr16
adc
cmc
daa
ret
pop
jae
push
clc
ins
cmp
or
add
js
mov
mov
pop
inc
lea
or
retf
sbb
dec
inc
xchg
cmp
scas
xchg
inc
mov
ins
pop
not
fwait
pop
fs
or
push
xor
push
dec
lock
out
mov
loope
dec
(bad)
div
cmps
test
test
sbb
fld
jmp
cmps
pop
push
or
dec
pop
stos
scas
xor
inc
mov
push
ins
repnz
pop
in
nop
ins
push
cmp
ficom
pop
outs
xor
jno
call
aam
mov
push
js
dec
mov
add
call
xor
push
(bad)
js
rol
add
lods
push
pop
jnp
es
and
or
mov
push
xor
repnz
jne
or
pop
arpl
jle
js
push
jmp
sub
cld
(bad)
mov
and
sub
or
lods
mov
push
ins
dec
xor
repnz
add
jnp
jg
sub
xchg
jp
stos
or
addr16
fsub
sub
cwde
dec
test
and
push
or
aam
sahf
push
adc
prefetch
push
test
imul
pushf
or
imul
mov
xlat
jno
pop
test
mov
call
nop
pop
push
sbb
push
fcmovb
cmps
fstp
popa
das
cld
ror
cmp
das
shl
mov
or
mov
jo
leave
sbb
test
xchg
imul
fsub
xlat
inc
mov
or
inc
push
mov
sub
xor
xchg
out
mov
ss
mov
or
pushf
pushf
popf
fst
fcom
popf
xchg
test
sbb
repnz
popa
outs
scas
and
js
fbstp
sub
call
and
xor
stos
idiv
cmp
push
mov
mov
cmps
and
add
sub
mov
sbb
out
push
mov
add
dec
cmp
jl
jmp
jae
mov
dec
shl
fistp
adc
in
mov
repnz
cld
int3
mov
aam
and
cli
and
xlat
movs
adc
sar
scas
push
jo
inc
push
push
push
es
ss
xor
ds
and
imul
daa
dec
adc
xchg
popa
and
call
add
push
mov
cmp
loope
xchg
fstp
push
imul
xbegin
mov
jno
lock
loop
cld
pop
push
fimul
mov
mov
cmp
jmp
ror
popa
stc
je
push
popa
mov
out
shl
mov
leave
out
cdq
push
out
xchg
sub
repnz
stos
sahf
outs
(bad)
lock
dec
ja
push
(bad)
jle
pop
cld
adc
out
jns
imul
mov
fcomp
fbld
fistp
xchg
sub
cmp
mov
mov
ror
mov
es
pop
(bad)
push
sub
inc
push
mov
sbb
push
push
out
mov
inc
mov
push
push
xchg
and
imul
sbb
les
xchg
cwde
sub
cld
ins
pop
lods
fiadd
int
imul
inc
stos
ins
mov
or
mov
scas
dec
pusha
inc
jbe
(bad)
mov
sbb
add
jnp
jg
ja
pop
popa
pop
sub
mov
pop
and
xchg
jne
xchg
sub
ins
xchg
(bad)
iret
addr16
pop
or
pop
jns
pop
je
and
fmul
xchg
cmp
cmc
inc
in
inc
add
repz
test
jecxz
cwde
mov
loope
add
sbb
movs
pop
repz
pop
jecxz
push
cvtpi2ps
aad
push
lock
sbb
sar
jge
push
xchg
shl
or
xchg
adc
fstp
ror
push
mov
push
cmc
gs
shl
pop
outs
(bad)
sub
shl
pop
xchg
out
sub
add
inc
mov
mov
jle
adc
mov
or
xor
mov
and
imul
gs
push
mov
pop
shl
jno
push
mov
repnz
es
mov
jecxz
hlt
sub
ficomp
test
outs
sar
add
call
mov
pop
ss
add
rol
int3
cmp
sub
mov
(bad)
pop
cmp
popf
dec
mov
sbb
jae
call
leave
xor
push
lock
stos
sbb
sti
cld
pop
data16
ret
lahf
retf
mov
xor
rol
pop
mov
fld
test
fs
and
cmps
daa
mov
inc
imul
sub
or
mov
add
inc
iret
mov
push
push
retf
test
add
jnp
loopne
sbb
cmps
dec
cmps
sbb
imul
js
pop
(bad)
rcl
adc
(bad)
jmp
jl
fisttp
fnstenv
sahf
in
lds
in
cmp
mov
scas
int
cmp
in
call
cli
cs
stc
mov
loop
jp
push
movs
fstp
push
imul
cwde
mov
int3
sahf
add
rol
pop
xchg
add
add
cmp
int3
aas
sti
push
cmp
in
loopne
test
or
add
jnp
(bad)
pop
mov
cmp
jle
fidiv
sbb
and
xchg
test
mov
mov
jp
jne
ret
cwde
movs
xchg
mov
ret
loopne
stc
dec
adc
rol
imul
or
jmp
mov
inc
clc
pusha
jns
(bad)
arpl
xor
sub
in
repnz
and
or
popa
jbe
rol
mov
ins
sbb
ret
nop
xlat
loop
je
sub
mov
pushf
adc
jg
ds
lahf
mov
and
je
cwde
test
(bad)
push
or
mov
jmp
inc
jle
(bad)
imul
gs
std
(bad)
pop
hlt
mov
hlt
mov
sub
and
out
cmc
nop
in
adc
dec
lea
mov
sbb
dec
mov
scas
push
sub
xor
outs
push
std
inc
cmp
js
push
sbb
cmp
xor
push
retf
fdiv
das
cmp
cmc
jo
dec
inc
outs
and
jnp
jns
je
cmp
pop
dec
push
push
add
int
push
jmp
mov
lods
(bad)
dec
pop
in
aad
icebp
push
dec
iret
movs
addr16
add
std
xor
and
call
fnstsw
clc
sbb
and
call
mov
(bad)
fadd
sub
push
cmps
add
pop
aam
xor
in
inc
xchg
xor
adc
xor
test
jg
loope
inc
jae
sub
nop
stos
cmps
sti
pusha
mov
dec
je
sbb
stc
mov
sti
fld
fwait
push
das
cwde
outs
out
jbe
pop
dec
pop
repz
or
sbb
aam
mov
fadd
adc
mov
adc
push
in
scas
imul
xor
xchg
scas
(bad)
movs
jecxz
jo
push
movs
push
arpl
mov
push
jns
xlat
fsub
sbb
mov
inc
xor
imul
sti
adc
(bad)
mov
dec
pop
xor
sar
sub
aad
cwde
and
xchg
je
lock
int
mov
sahf
movs
(bad)
into
mov
mov
sub
xchg
call
stos
or
sbb
ror
std
mov
jnp
test
(bad)
mov
pop
jmp
xchg
out
or
push
dec
(bad)
retf
push
mov
jbe
sbb
fs
or
psrlw
fdivr
push
addr16
enter
out
xchg
pop
jmp
push
push
les
sub
mov
cwde
bound
mov
cmp
data16
cmp
jno
mov
jb
jno
inc
test
cwde
pop
inc
(bad)
mov
in
sub
mov
leave
xchg
ja
fimul
lds
mov
mov
out
inc
and
fsubr
add
inc
jg
ins
adc
call
sbb
sbb
pop
adc
stos
push
push
mov
fldcw
pop
call
dec
mov
(bad)
jns
jns
(bad)
xchg
pop
ror
les
and
push
(bad)
sbb
aaa
adc
scas
out
or
push
mov
pop
xor
adc
ds
jo
xlat
call
xchg
arpl
cmp
(bad)
sbb
shl
pop
lahf
ds
add
xchg
out
mov
jmp
mov
xor
fwait
and
jecxz
xor
sub
and
mov
sub
sub
fmul
sahf
outs
xor
cmp
add
ret
lds
sub
ins
ret
xchg
xchg
push
leave
sbb
sahf
push
dec
pop
es
call
jnp
call
push
mov
push
ins
hlt
sub
inc
repz
add
test
into
sub
jl
push
jb
jns
mov
mov
outs
stos
adc
imul
cmp
addr16
hlt
out
into
aam
sbb
ret
cld
loop
cmp
sbb
fwait
xchg
fisttp
mov
xor
xchg
push
dec
cmps
inc
call
nop
jl
call
outs
push
push
push
shl
pushf
out
mov
mov
nop
cmp
(bad)
test
loop
jge
mov
movs
je
cmp
dec
mov
inc
popa
leave
mov
or
into
cmp
sbb
(bad)
fist
ins
pop
ficom
xor
fisubr
fild
mov
adc
push
pusha
xor
mov
or
jno
loopne
(bad)
aaa
mov
out
inc
loope
xor
xchg
push
jnp
push
ins
sub
and
inc
test
rol
pusha
pop
push
shr
(bad)
scas
repz
jno
cmp
rol
pop
ins
pop
fcomp
sahf
aad
cmp
ins
test
daa
adc
(bad)
lock
push
cmp
sub
div
sub
add
pop
pushf
pop
out
aaa
in
add
stos
cwde
leave
add
stos
mov
pop
arpl
pop
fsubr
and
int
push
pop
lahf
call
out
fwait
mov
mov
into
call
adc
aad
stc
cmps
mov
dec
push
cmp
stc
out
cld
aaa
pop
shl
addr16
hlt
and
ss
movs
test
lods
test
fstp
shr
push
bswap
(bad)
scas
mov
imul
mov
xchg
xor
stos
js
out
mov
add
pop
xchg
dec
ret
sub
pop
xor
(bad)
sbb
sbb
call
loop
rol
loopne
xchg
aas
mov
xor
dec
sahf
mov
test
ins
adc
jne
add
mov
jmp
retf
retf
push
mov
test
mov
cmp
sbb
loop
pop
js
xchg
inc
int
int3
pop
lock
ins
test
cmps
(bad)
dec
fwait
addr16
enter
pop
lahf
mov
inc
imul
sub
shl
es
jl
add
push
add
js
es
stc
push
ret
ja
mov
ins
add
inc
retf
lock
jecxz
stos
cmps
sbb
cmp
push
pop
or
fisttp
mov
gs
leave
lods
xor
daa
fiadd
pop
out
pop
xchg
popf
mov
das
(bad)
sub
push
mul
jg
jge
push
add
cmps
pusha
cmc
or
enter
inc
mov
fisttp
ret
into
sub
inc
popf
sbb
int
cmp
cmps
mov
jb
rcl
test
ss
loop
or
dec
(bad)
mov
sahf
adc
(bad)
add
jae
in
push
out
or
pop
or
pop
xlat
lock
pop
mov
adc
jns
xchg
repnz
das
mov
test
add
cmp
idiv
repnz
or
popa
dec
(bad)
cmps
call
xor
mov
out
xchg
mov
das
fwait
xchg
push
add
xchg
out
push
mov
and
pusha
mov
mov
ror
jmp
(bad)
adc
mov
imul
mov
not
cmp
clc
pop
and
dec
cmp
mov
mov
rcr
jo
je
mov
add
adc
shl
and
sar
jl
outs
rcr
add
clc
sub
xchg
xchg
sti
pop
loopne
sbb
mov
outs
jne
sbb
fcmovnb
call
add
jmp
(bad)
icebp
pop
xor
or
mov
sub
sbb
mov
test
push
ja
xor
call
aas
cwde
test
cmp
test
cmc
cmps
jne
movs
xchg
jl
adc
aad
jle
sbb
cmp
bound
adc
out
push
push
std
daa
or
pop
jnp
shl
sbb
sbb
dec
cmps
push
(bad)
frstor
bound
adc
sbb
mov
sbb
das
lahf
mov
jnp
or
xchg
cmp
outs
(bad)
fdivp
mov
retf
cmp
stos
iret
aad
cmp
loop
cdq
inc
mov
and
lds
pop
pop
sbb
sbb
ds
push
(bad)
cmp
add
out
ins
int
jmp
shl
dec
clc
xchg
adc
repnz
xchg
mov
sbb
adc
lods
inc
or
add
in
mov
xchg
lods
mov
inc
rol
adc
xor
inc
inc
loope
int3
jb
scas
pusha
cmps
xchg
push
jmp
je
sub
xor
ret
sub
xchg
xchg
add
pop
leave
mov
cld
sbb
test
and
mov
push
add
jno
mov
movs
adc
sub
dec
mov
es
(bad)
sahf
jns
(bad)
inc
loopne
jmp
ret
dec
xor
int3
adc
in
xchg
mov
ins
sub
je
popa
ins
test
stc
call
(bad)
mov
cmp
sub
mov
and
loopne
pop
jge
jae
add
movs
or
das
aaa
push
lods
data16
jae
sub
cwde
sbb
rol
jnp
sbb
test
jns
push
stos
mov
repz
push
movs
fwait
inc
idiv
or
xchg
(bad)
mov
sub
ret
sbb
dec
enter
push
cs
pushf
and
push
xchg
jb
xor
cmp
movs
(bad)
ja
push
cmps
and
gs
cmp
xchg
xor
ror
jge
into
cmp
call
neg
or
dec
xor
test
fld
cs
dec
push
imul
loopne
mov
repnz
scas
push
ins
in
xchg
add
imul
mov
in
or
or
shr
jg
inc
cmp
inc
dec
xor
lea
push
mov
mov
cli
das
cmps
loop
push
sbb
out
cmp
lea
test
or
pop
jp
sar
jnp
push
push
sbb
dec
ss
aaa
test
mov
or
aas
jge
out
repz
(bad)
xchg
jle
sub
mov
xor
adc
dec
mov
mov
xor
or
push
inc
sub
loop
call
aam
out
das
das
sbb
jae
or
pop
loope
and
xchg
lods
and
jge
push
push
cmp
sub
inc
dec
adc
fsub
mov
imul
sub
jbe
xor
fucomi
jge
xlat
cwde
sbb
test
pop
movs
sub
(bad)
jecxz
sub
sar
pop
retf
xchg
pop
pop
cmp
dec
sar
adc
imul
pop
or
lds
dec
mov
fcomp
test
sbb
(bad)
mov
and
pop
mov
jnp
pusha
pushf
adc
push
xchg
aad
popa
dec
cmp
cmp
ror
pop
mov
(bad)
fcomp
dec
pop
inc
fimul
sbb
add
shr
mov
adc
or
pop
aad
jbe
or
popf
adc
jle
retf
neg
add
jge
sahf
daa
cmp
arpl
xlat
xor
mov
hlt
or
shl
call
shl
or
(bad)
mov
dec
cmp
add
lods
mov
shl
mov
push
pop
push
fld
inc
fild
pop
ret
mov
cmp
sbb
xor
dec
cmc
icebp
mov
cmp
scas
cmp
sti
(bad)
imul
inc
inc
sub
adc
ins
stos
sbb
stos
mov
adc
inc
sti
jns
jmp
jnp
and
int
mov
sbb
mov
sbb
arpl
sub
xor
pushf
sbb
mov
pop
fcomip
cmps
out
xchg
icebp
int
sub
jmp
(bad)
mov
aas
inc
jge
mov
outs
adc
pop
pop
out
inc
adc
test
(bad)
lahf
inc
cwde
dec
mov
inc
xchg
je
(bad)
rcl
or
test
cmp
add
and
cmp
xchg
dec
xlat
jl
mov
fidivr
push
loope
adc
(bad)
mov
jl
xchg
int3
or
lahf
call
cld
jmp
adc
movs
in
sbb
shr
lods
addr16
pop
retf
fiadd
xchg
sbb
fisubr
xchg
test
das
xlat
cmp
xchg
test
fadd
das
leave
(bad)
dec
pop
jmp
fwait
rol
inc
nop
inc
call
hlt
scas
mov
xchg
aaa
out
mov
push
jnp
ins
sbb
rol
mov
pop
mov
push
imul
dec
aam
inc
cmps
adc
inc
mov
pop
stc
test
test
mov
gs
sub
es
cdq
scas
jne
movs
stos
jp
add
inc
mov
fwait
sbb
(bad)
push
imul
(bad)
lock
mov
or
mov
leave
pop
mov
jnp
mov
retf
or
jno
mov
retw
dec
or
sbb
adc
sub
mov
sbb
sti
rol
enter
inc
out
jle
fstp
mov
pop
pop
sbb
rol
test
ja
repnz
in
or
mov
or
int3
inc
(bad)
cmp
(bad)
sbb
in
js
imul
mov
jp
call
pop
stos
add
pop
int
add
cmp
and
popf
idiv
jmp
shr
ficomp
cli
mov
dec
loopne
sub
sbb
jbe
test
in
sti
out
mov
in
pop
adc
data16
outs
mov
inc
loop
ins
(bad)
out
xchg
jmp
push
popf
pop
in
shl
jns
xor
cwde
lock
popa
das
mov
xchg
(bad)
imul
fld
cwde
mov
cwde
std
cdq
pop
mov
fistp
mov
cli
ret
mov
test
in
sub
sub
std
dec
or
into
call
mov
(bad)
repz
sub
sbb
bound
mov
inc
sbb
test
cmp
ja
mov
cs
daa
pusha
jmp
jecxz
add
xlat
into
cwde
and
inc
fst
loop
inc
je
xchg
je
fmul
fdiv
pushf
push
xchg
daa
outs
iret
add
xor
mov
jb
adc
popf
sub
lods
xchg
and
lods
or
push
dec
fs
mov
leave
and
jg
mov
stos
enter
popa
lods
mov
jmp
lds
pop
cmp
fisttp
inc
jl
cmp
adc
outs
inc
push
ret
push
(bad)
jge
sar
mov
xor
cmp
pop
adc
pop
or
cmp
mov
or
mov
rcr
mov
add
pop
int3
jecxz
jne
mov
cmp
jae
nop
sub
sbb
dec
fcom
bound
daa
lea
push
shr
and
scas
imul
sub
outs
add
pop
mov
and
adc
mov
leave
test
adc
dec
jbe
cli
test
inc
hlt
out
lahf
adc
stos
cmp
jno
mov
mov
and
mov
clc
hlt
out
pop
inc
push
mov
repnz
xchg
stc
add
shl
bound
sub
inc
stos
mov
test
movs
mov
cmp
ja
daa
daa
xchg
cmp
push
pop
pop
daa
pop
mov
mov
outs
sar
cmp
mov
cmc
or
xchg
adc
(bad)
bound
sbb
adc
sbb
or
or
add
sub
pop
jp
retf
hlt
mul
dec
call
adc
jne
pop
sub
fild
popf
sub
(bad)
lea
aas
xchg
or
ror
cmc
pop
sbb
lock
pop
push
pop
cmp
leave
rol
or
sbb
sub
in
or
mov
arpl
sub
mov
leave
out
repnz
push
sub
divps
xchg
test
sub
retf
js
mov
(bad)
jnp
mul
movs
mov
loop
stos
cmp
add
mov
pop
adc
mov
cmp
jmp
aaa
push
mov
std
inc
push
or
inc
lar
jb
(bad)
lea
retf
jb
dec
daa
jecxz
jb
cmp
out
pushf
pop
cmp
rcr
sub
dec
push
push
sbb
je
mov
push
cmp
xchg
dec
or
ins
mov
(bad)
adc
adc
sub
ret
sbb
nop
push
push
dec
imul
and
jns
sub
jp
jge
jne
stos
dec
out
push
mov
pushf
mov
xor
pop
mov
push
or
in
cmp
mov
(bad)
repnz
inc
repz
pop
aad
enter
bound
add
sbb
mov
cwde
jo
jle
xlat
fdivr
add
neg
cmp
les
rcl
rcr
push
ins
xor
test
js
mov
mov
retf
xchg
mov
jg
adc
ret
iret
dec
out
lahf
dec
fiadd
shl
out
jl
repnz
pop
jmp
mov
lock
or
mov
sub
adc
cmp
in
xchg
mov
cli
pop
dec
push
sar
xchg
addr16
mov
mov
pop
sub
sar
xor
fdiv
inc
jae
rol
mov
xor
je
loop
push
xor
(bad)
jp
add
pushf
lods
pop
sbb
mov
push
imul
mov
outs
jmp
or
ret
sahf
outs
call
push
inc
leave
jbe
xchg
add
cmp
mov
and
or
mov
mov
mov
inc
push
sub
in
out
jno
leave
jnp
and
lea
xor
rcr
push
xor
das
scas
int
jmp
dec
sub
cmp
adc
and
xchg
add
mov
mov
inc
sub
sbb
push
inc
inc
dec
js
add
ss
xchg
sar
inc
cli
nop
pop
movs
inc
pop
add
aaa
clc
jbe
iret
dec
es
cmp
jp
mov
adc
mov
add
inc
push
scas
clc
xchg
sti
fcom
out
xchg
es
popf
outs
(bad)
push
add
cmp
pop
cmc
js
xchg
lahf
nop
mov
mov
jecxz
out
push
sub
push
xchg
pop
sahf
or
ret
push
nop
push
or
ins
(bad)
mov
std
shl
aas
ins
cdq
cmp
neg
(bad)
adc
ins
fcomp
mov
cwde
mov
stos
ret
mul
mov
push
mov
adc
inc
arpl
jmp
data16
fidivr
add
(bad)
jnp
ror
and
inc
inc
imul
adc
retf
hlt
jg
mov
hlt
push
push
inc
int3
mov
or
cmp
jb
mov
ret
cmp
das
jle
and
jecxz
out
fs
jbe
mov
xchg
(bad)
mov
sub
outs
jp
or
mov
jo
or
inc
repz
jmp
int3
repnz
sub
mov
or
and
cs
and
xor
sbb
add
lock
(bad)
cmp
fisubr
ret
xchg
push
ret
cmp
mov
add
std
and
les
es
sub
push
jbe
mov
int3
cmp
call
aaa
ins
fwait
dec
rcl
call
sub
cmp
mov
test
shl
sub
xchg
pop
js
jge
xchg
call
pop
xor
inc
rcl
xchg
xor
ins
cmp
addr16
pop
inc
jb
jb
les
inc
rcl
pop
out
mov
mov
nop
pop
cdq
sbb
(bad)
fstp
stos
xchg
retf
mov
or
pop
ss
je
sbb
pop
mov
lea
sahf
mov
or
jg
aam
push
pop
or
add
sub
test
xor
cli
and
mov
mov
xchg
int
and
lds
cld
je
fisubr
jo
sbb
jne
(bad)
sbb
adc
aad
push
(bad)
cmp
fadd
mov
mov
mov
aam
mov
rcl
push
mov
rol
mov
popa
add
inc
out
add
icebp
pop
and
sahf
cs
or
or
call
hlt
scas
cld
cmps
xchg
sahf
jecxz
push
add
aad
jmp
cmps
gs
enter
dec
and
mov
test
out
das
lods
out
out
add
aad
push
loop
and
push
test
stc
cmc
mov
dec
jb
inc
cbw
dec
pop
mov
adc
das
xor
mov
and
arpl
into
dec
jb
add
scas
pop
and
xchg
jo
pusha
leave
sbb
scas
pop
pop
push
iret
jecxz
sub
cld
gs
push
pusha
cs
inc
div
xor
test
loope
sbb
add
and
adc
repz
jp
dec
xchg
push
hlt
lods
lahf
pop
sub
enter
popf
test
push
pop
imul
pop
aad
test
(bad)
push
or
and
xchg
push
jle
in
add
iret
and
mov
mov
inc
pop
xchg
mov
sub
pop
add
jle
mov
jg
or
test
pop
or
rol
(bad)
pop
sub
or
repnz
lods
mov
fsub
mov
pop
les
loop
rcr
xchg
outs
inc
push
daa
out
jmp
xchg
fst
and
dec
push
aaa
sub
push
loop
push
sub
imul
mov
xchg
fdivr
push
jl
hlt
outs
out
enter
rcr
popf
cdq
lahf
jge
xchg
inc
sar
xchg
sub
imul
pop
imul
adc
ror
cmps
dec
inc
popa
retf
or
das
xor
xchg
iret
dec
and
adc
inc
fs
xor
lock
fadd
push
add
jecxz
pop
mov
cmps
jecxz
pop
add
adc
jbe
push
(bad)
cli
retf
imul
sub
call
sub
push
or
sar
mov
bound
out
adc
push
jne
fwait
ja
into
push
sar
jmp
inc
adc
mov
mov
jle
movs
fs
push
add
jmp
std
mov
test
mov
test
jge
jb
test
int
cmp
xor
push
inc
call
retf
mov
pop
jo
sub
jmp
push
out
icebp
leave
dec
repz
mov
cmps
sub
fisub
mov
out
loop
fdivr
jecxz
push
jo
adc
out
add
outs
jns
popa
aas
or
push
xchg
add
imul
add
retf
mov
cmp
add
adc
mov
movs
add
push
cli
iret
mov
xchg
test
mov
fs
xchg
(bad)
ss
mov
rol
xor
xlat
adc
cmp
or
dec
bound
gs
(bad)
mov
ja
sub
cwde
xlat
lock
pop
adc
ins
shl
sar
repnz
or
in
fbld
retf
test
pop
add
test
shr
adc
inc
(bad)
out
jp
and
cmc
cs
jp
cmp
xchg
cmps
mov
pop
loop
pushf
ret
imul
inc
jbe
adc
pop
dec
mov
dec
cld
adc
mov
mov
jl
sbb
mov
aas
inc
cmp
in
push
sbb
jnp
dec
(bad)
adc
xchg
(bad)
(bad)
cmp
arpl
xor
push
lods
scas
cli
test
lds
in
mov
mov
stos
pop
outs
mov
ror
pop
sbb
imul
dec
and
(bad)
lods
jge
in
sbb
(bad)
and
push
sub
inc
fs
aaa
dec
std
pop
adc
inc
sub
mov
ins
enter
xchg
cwde
in
sbb
scas
outs
jecxz
jne
test
mov
mov
mov
cmp
add
xor
addr16
mov
out
in
into
dec
ins
jns
cdq
sti
cmp
fsub
jo
mov
pop
popf
jmp
cmps
jmp
or
mov
pop
xor
push
sub
mov
movs
xchg
div
int3
fidiv
daa
in
push
(bad)
jne
repz
pop
enter
pop
pop
jle
out
xchg
leave
jne
inc
test
test
xchg
retf
scas
js
pop
vmread
sub
(bad)
or
fwait
movs
neg
push
pushf
ds
shr
sub
dec
retf
sub
jle
or
fcmovnbe
test
stc
mov
xor
mov
and
push
aad
pop
out
clc
add
cwde
pop
push
mov
jle
repz
imul
and
mov
push
mov
vmread
dec
cmp
sub
cmps
scas
scas
outs
call
adc
imul
pop
cmp
ins
imul
call
pop
outs
(bad)
lahf
jbe
pop
xchg
mov
es
dec
repnz
gs
add
xchg
sbb
out
jns
fs
bound
pop
and
xchg
jne
out
add
jbe
add
add
dec
sbb
cmp
lods
push
xor
(bad)
in
fdivp
pop
idiv
test
lahf
fwait
push
push
push
mov
inc
out
mov
or
push
xchg
and
inc
adc
int3
in
and
sbb
xchg
adc
mov
clc
jbe
jmp
push
aaa
xlat
mov
fs
or
xchg
xor
clc
push
pusha
sahf
cmp
cmps
hlt
test
jl
or
ins
mov
jb
arpl
adc
popa
mov
mov
jg
sbb
fcmovb
cmc
adc
adc
jge
inc
jle
add
test
fld
xchg
xor
loope
icebp
sbb
in
jne
add
in
outs
mov
mov
xchg
cmp
stos
cmp
sub
retf
push
mov
cmps
xchg
sbb
and
sbb
pushf
add
xor
pop
add
sbb
sbb
cs
aaa
adc
dec
cmc
gs
mov
out
mov
int
pop
fcom
sbb
mov
pop
mov
xchg
jne
test
sar
mov
xchg
popf
imul
ins
and
mov
imul
pop
and
ret
cmp
lds
rcl
test
outs
ret
sub
or
shl
pop
xor
cmp
loope
cmp
adc
xlat
sub
mov
pop
sbb
(bad)
adc
sub
dec
or
sbb
adc
jae
fcom
lea
mov
xor
sub
sahf
dec
outs
adc
jl
out
mov
cs
mov
cmp
lods
inc
sub
outs
jge
adc
aas
jbe
pusha
popa
xor
xchg
rcl
xlat
sbb
push
rol
mov
std
lahf
lock
leave
inc
ret
call
pushf
ins
ins
and
adc
push
fldenv
test
jmp
adc
pusha
in
test
out
push
dec
add
mov
call
(bad)
in
sbb
ret
je
ds
mov
jg
sti
jb
cdq
dec
adc
les
repz
pop
fsub
mov
push
mov
ret
dec
rol
xchg
int
xchg
lock
outs
in
cwde
pop
iret
jnp
adc
in
xchg
inc
outs
mov
and
jle
fcom
cmp
cmps
dec
adc
pop
jnp
sub
fcmove
dec
xchg
inc
shr
dec
ror
dec
mov
sahf
or
xchg
push
add
jbe
cdq
mov
shl
aad
xchg
pusha
shr
in
mov
sub
fiadd
jb
push
(bad)
mov
adc
push
hlt
leave
stos
adc
sbb
push
inc
inc
mov
add
mov
lods
and
mov
ja
mov
mov
enter
cmp
xchg
int
inc
dec
mov
sbb
xlat
pop
mov
jne
fbstp
pop
hlt
add
fmul
mov
mov
pop
sub
daa
cmp
and
xchg
shr
repz
imul
mov
out
lea
les
pop
arpl
jle
jecxz
jns
sbb
or
adc
popf
or
sbb
js
xor
jmp
daa
cwde
push
cmps
fidivr
dec
xor
and
loop
inc
pop
daa
mov
ins
std
rcr
in
jmp
fwait
sti
push
dec
test
adc
jmp
dec
or
push
mov
and
ret
repnz
ss
aas
or
xchg
push
push
je
sub
stc
ror
out
mov
pop
aaa
xor
pop
bound
and
xchg
add
adc
aas
enter
cdq
and
fdiv
mov
sub
and
push
lea
nop
inc
(bad)
in
jo
jae
mov
adc
sbb
mov
cmc
shl
aad
xchg
das
jmp
or
add
and
es
inc
jae
in
sub
test
and
fucom
mov
popa
cmp
xchg
jmp
(bad)
pop
leave
mov
mov
inc
aad
push
nop
cmp
push
mov
jmp
sub
adc
mov
xchg
js
and
fyl2x
loope
mov
fist
adc
inc
clc
ror
in
call
push
fs
and
dec
sbb
scas
retf
ja
jecxz
xor
rcl
xchg
leave
loope
rol
pop
add
in
mov
gs
scas
sbb
test
push
(bad)
xchg
add
aas
test
and
and
gs
outs
call
xor
or
inc
test
xor
sti
mov
push
inc
dec
cld
sub
stos
pop
dec
and
mov
lods
mov
or
mov
sbb
xor
xchg
sbb
or
mov
jnp
dec
pop
dec
in
mov
mov
dec
cdq
dec
sbb
xchg
cmp
adc
add
xor
or
dec
sahf
ds
(bad)
pop
or
lea
mov
mov
jns
inc
fimul
inc
push
test
mov
sub
ja
lds
(bad)
in
dec
jl
mov
sub
and
ficom
mov
add
or
bound
popf
inc
popa
nop
dec
dec
dec
or
and
sbb
inc
mov
push
mov
aas
lahf
pop
pop
sti
inc
add
imul
in
xchg
push
test
push
call
inc
not
mov
xlat
clc
and
outs
popa
adc
mov
stos
mov
call
and
loop
add
push
sbb
jg
stos
mov
nop
xlat
stc
xor
movs
xlat
nop
adc
out
popf
xor
pop
hlt
jmp
jecxz
or
xchg
loopne
shl
ret
or
loopne
stc
test
mov
out
sbb
mov
shl
jg
das
push
sub
icebp
fs
stos
or
retf
jle
outs
xor
inc
idiv
and
mov
stos
std
sub
mov
mov
mov
(bad)
int
out
cmp
jnp
pop
pop
mov
cwde
jge
jb
stos
out
pop
and
sub
inc
sbb
push
dec
add
cmp
cmc
test
xor
adc
jne
call
ds
cmp
or
(bad)
(bad)
jbe
setae
mov
outs
mov
jb
test
test
push
pop
jle
inc
aam
packuswb
lock
xchg
sub
dec
stos
dec
cmp
jns
mov
push
ins
(bad)
push
ds
outs
pop
and
jl
pop
pop
jge
fwait
test
xchg
jmp
ss
popf
in
sub
mov
iret
daa
test
data16
inc
out
mov
(bad)
or
lods
and
cmp
inc
lods
mov
cmp
ja
ins
cmp
xchg
cmp
fld
push
mov
mov
sbb
xor
jmp
sbb
xchg
test
add
call
loope
cmp
xchg
jno
sbb
mov
mov
pushf
sar
out
xchg
dec
in
stc
mov
pop
adc
add
mov
jno
add
dec
adc
adc
je
clc
sbb
mov
add
add
gs
fsubr
push
mov
xchg
adc
xchg
daa
aas
ins
pop
xor
dec
aad
inc
cmps
xor
mov
add
and
not
loopne
cld
shl
jnp
mov
mov
xchg
adc
jnp
adc
mov
cdq
push
inc
ins
loop
dec
movs
jmp
test
lods
fnstcw
imul
cmova
inc
rol
das
pushf
push
jo
aam
jp
push
and
and
jl
stc
fst
jmp
inc
mov
or
test
leave
cmp
pop
dec
fadd
popa
scas
pop
and
sti
xor
adc
ret
or
mov
loop
mov
cmp
movs
test
outs
sbb
xchg
fdivr
jne
mov
push
mov
add
inc
dec
scas
(bad)
pop
icebp
jns
jmp
mov
movs
dec
dec
xchg
push
das
mov
repz
push
xchg
std
mov
xchg
mov
shr
fidiv
aad
outs
repz
xchg
adc
cmc
hlt
mov
cmp
clc
out
std
sbb
xchg
xor
push
sbb
cmps
pop
jp
int
loopne
lock
xor
add
xor
std
push
in
pop
adc
shl
leave
stos
mov
mov
push
push
and
add
xchg
cld
mov
mov
push
dec
bnd
loop
add
jge
outs
loope
inc
cli
dec
aam
dec
mov
push
fldcw
aas
stc
mov
test
jno
fcmovnu
hlt
mov
fld
cmp
ret
pushf
sub
xor
inc
psadbw
xor
popf
xchg
cwde
test
loopne
mov
stos
or
cmps
inc
adc
inc
fxch
jbe
popa
lea
pop
dec
movs
ss
jne
daa
and
dec
in
push
xchg
pushf
sbb
xor
test
mov
or
pushf
stc
pop
xchg
inc
test
xor
push
aaa
into
jns
jno
push
sbb
cmp
dec
das
xchg
mov
test
adc
and
mov
and
push
in
mov
xchg
aas
retf
fild
es
mov
sbb
mov
jecxz
test
(bad)
stc
ja
aas
adc
repz
and
push
xor
pop
dec
fistp
(bad)
push
lods
sub
xchg
test
arpl
in
stos
xchg
std
cmp
add
inc
sub
out
xor
ss
imul
add
inc
xlat
nop
call
and
push
pop
cmp
sar
xchg
rcr
cmp
aad
out
popa
cld
pop
or
sub
in
jne
ja
ins
mul
mov
jbe
mov
cmp
sub
ja
adc
popf
sub
shl
xchg
or
xor
loope
mov
into
into
call
in
fidiv
movs
loop
pop
ins
jb
add
xor
call
fs
adc
leave
out
and
inc
jbe
js
dec
push
stos
daa
lock
sub
xlat
jb
add
inc
cmps
and
adc
mov
call
cmp
fisub
iret
mov
pushf
xlat
push
pop
scas
push
push
lods
cmps
mov
mov
jmp
xchg
xchg
call
je
dec
mov
fidiv
and
in
inc
popa
sbb
das
ss
mov
inc
pmaxsw
adc
lds
jmp
hlt
add
loop
xchg
cmp
das
and
dec
mov
(bad)
sub
or
in
jl
mov
mov
popf
add
dec
or
fisub
xchg
movs
ret
shl
sub
dec
fsubr
fld
leave
nop
adc
dec
mov
cld
ja
fs
rsm
stc
js
aam
adc
sbb
pusha
push
cmp
cdq
and
pop
adc
pop
scas
out
jbe
cmp
ds
in
cmp
jmp
xchg
push
fsub
inc
xor
movs
arpl
and
das
mov
xlat
call
call
sub
sbb
pop
sub
xchg
aam
arpl
and
loopne
shl
loope
(bad)
and
or
push
add
xor
aad
out
repz
and
icebp
sbb
inc
retf
cmps
add
ret
ds
bound
aam
xor
jno
scas
push
jg
sub
mov
ss
jge
mov
mov
minps
mov
in
push
rol
sbb
sub
test
inc
jns
cmp
stos
mov
xchg
cmps
pop
add
push
push
je
inc
lahf
lldt
mov
bound
or
lods
and
shr
outs
xchg
cli
adc
push
out
add
fmul
pusha
inc
jae
xor
and
pushf
and
mov
cmp
jmp
jg
mov
xchg
xchg
jl
int3
add
rcl
pushf
enter
mov
mov
pop
stos
jl
add
or
cmps
jbe
push
jecxz
inc
aas
jle
add
or
xchg
or
or
imul
sub
clc
leave
mov
sbb
mov
sbb
hlt
mov
imul
pop
jmp
lds
cwde
push
xchg
push
call
and
mov
fidivr
inc
sub
shl
mov
inc
cmp
push
iret
pop
mov
fs
not
test
call
in
inc
sbb
jl
in
lods
pop
push
icebp
fdivr
pop
pop
retf
push
xor
test
ds
nop
add
or
xchg
mov
mov
popf
push
and
sub
and
inc
or
sahf
fidivr
loope
stos
mov
jp
enter
pop
dec
lods
adc
push
push
dec
push
pop
std
movs
aad
std
adc
fist
in
ss
mov
sbb
pop
dec
cmp
out
sub
cmps
ds
frstor
or
jb
arpl
dec
mov
aad
dec
jns
les
and
imul
add
inc
mov
jo
jne
jnp
push
xchg
fnstenv
or
mov
movs
xor
mov
nop
int3
dec
mov
jecxz
fsubp
popf
into
mov
mov
cli
(bad)
push
mov
fidiv
xchg
sbb
gs
(bad)
shl
test
or
pop
push
inc
push
and
mov
in
mov
test
and
shl
pop
cmp
adc
and
or
jle
icebp
push
push
movs
add
sahf
dec
dec
mov
das
pop
fistp
or
movs
inc
inc
ins
jmp
jge
xchg
cdq
repz
lock
les
sub
fsubr
scas
fmul
add
lods
mov
xchg
out
sbb
push
mov
cli
push
addr16
fwait
add
xchg
in
ds
fild
cmp
test
mov
mov
setno
xor
stc
inc
sbb
addr16
into
xor
ss
sahf
sahf
jmp
dec
ss
mov
fstp
and
pop
bound
mov
xchg
pop
mov
push
adc
movs
or
nop
retf
out
add
push
push
inc
icebp
xchg
inc
rol
pop
mov
test
mul
push
xor
(bad)
pop
hlt
test
and
pushf
sub
retf
mov
mov
xchg
sbb
test
in
xchg
xchg
jbe
inc
xor
movs
jmp
xchg
shl
aam
fxch
pushf
cmp
sbb
mov
mov
cmc
cli
pop
add
hlt
dec
ja
ins
push
shl
push
leave
scas
push
je
outs
lahf
jo
lods
out
retf
dec
ins
mov
or
inc
repnz
into
push
scas
pop
retf
movs
jp
cmp
push
or
adc
lock
hlt
mov
iret
clc
jnp
sbb
ret
inc
mov
inc
neg
sbb
sbb
outs
sub
or
jecxz
and
test
aaa
cmc
and
loop
es
ror
push
or
pop
add
xor
mov
jnp
sti
int
mov
daa
pop
sbb
popa
fsub
cmps
jmp
push
jp
aad
inc
mov
and
ins
rcl
adc
xchg
and
cmc
sti
leave
das
rol
xor
xchg
retf
test
add
int
jnp
jmp
adc
and
daa
popf
pop
sbb
and
xchg
mov
mul
hlt
inc
adc
jl
pop
inc
xchg
movs
(bad)
shl
sbb
mov
xor
xchg
xor
std
push
out
leave
iret
push
push
mov
addr16
mov
pop
xchg
mov
call
mov
ja
adc
and
adc
push
je
or
mov
lahf
pop
cli
ret
scas
inc
shr
aas
prefetchnta
sbb
ret
out
pop
inc
adc
rol
jecxz
add
int
sar
sbb
scas
call
fmul
add
mov
inc
outs
out
push
mov
add
mov
and
int
lods
dec
int3
(bad)
outs
data16
fdivr
adc
inc
call
or
mov
stc
in
(bad)
xor
in
mov
jbe
aam
test
fwait
sahf
sbb
cmp
adc
aam
leave
inc
sets
out
cmc
and
mov
sbb
movs
add
pop
and
cmp
sbb
push
aam
sub
pop
pushf
mov
mov
fs
pop
stos
cdq
jb
adc
std
ret
(bad)
retf
dec
daa
out
xor
and
(bad)
xor
or
adc
fmul
(bad)
push
xchg
inc
clc
cli
sbb
jmp
cmp
mov
mov
xor
fidiv
out
rcr
mov
jbe
pop
or
loop
ins
lock
mov
mov
sub
jmp
int3
(bad)
xchg
test
(bad)
jp
in
(bad)
xor
imul
lds
out
xchg
or
frstor
sbb
mov
mov
pop
scas
mov
jp
xchg
enter
xchg
ja
xor
mov
lods
fcomp
inc
out
daa
shl
jnp
jbe
and
(bad)
pop
mov
xchg
push
stc
fadd
cmps
dec
je
pop
mov
lea
inc
dec
sub
or
aam
mov
das
int3
jae
push
push
cdq
push
cmc
clc
sbb
fmulp
fwait
xlat
jnp
push
stc
jno
push
xchg
xchg
mov
cmp
in
xchg
pop
dec
cli
hlt
inc
dec
fcmovne
sahf
xor
movs
imul
cmp
cmovs
call
xchg
jg
fldenv
mov
pusha
cmps
(bad)
pusha
cmp
lock
(bad)
jge
das
mov
in
aad
adc
enter
std
inc
push
mov
inc
fnstenv
xor
stc
lea
mov
hlt
mov
pop
fst
dec
push
cs
sub
push
push
adc
cwde
retf
bound
xor
sar
and
xchg
cdq
jmp
sub
retf
and
dec
inc
cwde
xor
xchg
ja
jmp
xor
div
stos
sub
add
xchg
dec
ds
sbb
push
add
test
mov
jg
iret
pop
xchg
push
or
inc
cmp
ds
xchg
js
les
(bad)
jecxz
and
and
int3
cmc
aad
iret
fsubr
mov
cmp
or
pop
adc
out
adc
(bad)
clc
mov
jg
xchg
sbb
inc
pop
mov
ds
sahf
pop
in
inc
sub
xor
xor
cdq
add
test
nop
sub
movs
(bad)
cwde
sub
imul
int3
jae
mov
ins
pop
cmp
pop
outs
and
dec
pop
jne
stc
scas
ja
mul
inc
sti
shr
cmp
mov
hlt
shr
push
xchg
sbb
lods
push
dec
sub
cmp
mov
sbb
gs
fcom
xor
cmc
push
xor
mov
mov
pop
std
mov
xchg
imul
or
jmp
jno
mov
stos
dec
fwait
pop
add
push
daa
scas
push
mov
mov
mov
mov
jg
jne
cwde
xchg
push
sub
push
xchg
pop
std
es
mov
mov
pop
in
jg
inc
out
(bad)
adc
rcl
push
mov
bound
dec
(bad)
lahf
ret
aaa
mov
jno
and
(bad)
pop
es
clc
pop
inc
arpl
out
into
js
(bad)
fld
pop
mov
hlt
cmc
test
lds
test
dec
sbb
sbb
repz
imul
mov
fist
push
ret
aaa
adc
sub
icebp
or
nop
rcr
outs
ss
cmp
adc
(bad)
adc
retf
xor
cmc
mov
div
lock
jmp
sbb
cmp
stos
mov
or
test
jnp
jae
stos
data16
ret
cmp
imul
push
mov
push
jns
lods
lods
pop
out
es
xor
lock
sar
push
stc
mov
mov
jecxz
push
jl
sub
ins
jmp
mov
xchg
mov
ins
xor
ins
pop
push
pop
dec
ins
adc
lods
pusha
sbb
xchg
ja
ficomp
pushf
jmp
mov
cwde
pop
int3
adc
retf
cmp
push
outs
push
xchg
arpl
sahf
jmp
fbld
jnp
icebp
fnsave
push
loopne
test
push
jl
mov
jne
stc
mul
movaps
cmp
aam
sahf
pop
push
cmp
adc
imul
mov
inc
sub
push
aam
arpl
test
and
or
fwait
cld
repnz
(bad)
std
mov
repnz
xor
xor
or
test
cmp
cmp
push
jmp
sbb
jne
or
mov
xchg
dec
lea
inc
rcr
push
cmp
pop
(bad)
out
jo
fs
scas
jo
movs
cmp
xchg
mov
mov
sbb
and
test
mov
cmp
xor
pusha
movs
sbb
shl
dec
mov
in
mov
loop
mov
sbb
das
pop
push
sub
sahf
jnp
fisubr
cmp
ja
pop
adc
call
mov
rol
inc
jb
repz
lahf
push
test
movs
push
fnstenv
fisub
icebp
cmc
ss
sub
gs
in
data16
push
loopne
sbb
cmp
pop
mov
mov
scas
(bad)
push
enter
dec
test
jecxz
(bad)
sbb
(bad)
xor
lods
push
in
mov
or
aaa
and
js
cmp
sub
mov
dec
and
pop
sbb
hlt
es
inc
pop
imul
fist
cmp
cmp
add
mov
xor
dec
add
iret
xchg
or
push
adc
aaa
jecxz
retf
sbb
adc
cmp
in
(bad)
outs
and
mov
xor
fwait
jnp
cli
push
leave
push
mov
jae
jae
(bad)
mov
add
xchg
xchg
xchg
jge
inc
stc
out
xor
pusha
loop
nop
xchg
fnstsw
xchg
mov
add
xchg
aaa
pop
out
dec
in
stos
inc
xor
add
xor
pop
enter
and
push
mov
sub
repnz
add
or
aaa
mov
popa
mov
in
call
aam
test
mov
adc
fwait
pop
push
pop
push
cld
add
ja
pop
push
push
fs
cmc
adc
dec
outs
shl
data16
cs
mov
add
iret
pop
sub
ror
ds
add
cwde
xor
icebp
mov
or
mov
out
scas
ret
enter
mov
pop
fist
faddp
dec
xchg
dec
cmp
dec
fcom
jg
xchg
pop
stos
mov
jno
inc
sbb
add
mov
stc
pop
jno
shr
es
aaa
mov
cli
ror
aas
jb
mov
in
sbb
call
in
pop
fiadd
sbb
out
enter
inc
mov
jne
mov
faddp
aad
xchg
out
pop
and
jp
cmc
adc
std
xchg
cs
loopne
push
xor
gs
cmp
mov
(bad)
outs
xlat
push
cmps
xor
imul
retf
sub
out
or
add
and
cld
sub
cmp
adc
and
pop
cs
and
jns
imul
jg
retf
sar
stos
adc
in
cld
mov
push
mov
addr16
adc
mov
xor
push
pop
rcl
retf
adc
rcr
cli
cwde
inc
lods
repz
xor
jns
fdivr
and
jmp
into
retf
adc
jmp
les
jbe
lods
icebp
loop
(bad)
arpl
scas
jno
jg
addr16
cmp
int3
jb
xchg
shl
fcomi
loope
iret
sub
and
stos
retf
xor
adc
push
cdq
out
mov
out
leave
stc
nop
xor
mov
xchg
adc
xchg
in
scas
sbb
xchg
mov
daa
fidiv
cdq
rcr
and
ins
outs
stc
les
call
sub
cs
or
lahf
or
cwde
gs
sub
and
pop
mov
in
inc
neg
repnz
mov
add
adc
stos
stos
mov
cmp
mov
das
in
fdivr
mov
mov
mov
mov
pop
std
cmc
mov
adc
xchg
xor
imul
dec
jecxz
dec
daa
pop
or
hlt
scas
jp
xlat
mov
mov
retf
mov
aas
(bad)
into
iret
fwait
pop
mov
scas
jp
pop
inc
adc
add
inc
mov
test
jns
xor
das
jg
dec
push
dec
or
add
(bad)
outs
outs
adc
test
mov
and
mov
mov
xchg
loop
test
fwait
shr
jns
jns
not
mov
loop
or
push
(bad)
loope
adc
jae
aad
pop
cli
test
mov
(bad)
xor
jl
aam
data16
stos
and
mov
jle
mov
pop
sbb
sub
push
sub
adc
(bad)
mov
ss
iret
and
stc
cmp
push
dec
adc
xchg
sub
xor
cwde
adc
mov
in
fs
(bad)
scas
dec
daa
and
jmp
int
sti
pop
and
xchg
imul
mov
pop
outs
repnz
dec
pop
xor
xor
retf
or
jmp
popf
ja
pop
imul
pop
xchg
and
mov
shl
mov
jne
test
mov
enter
ret
stos
mov
push
std
jae
xchg
xchg
outs
popa
and
jbe
jae
mov
cmp
leave
and
inc
lea
mov
mov
stos
ins
stc
mov
dec
jno
mov
cmps
jmp
dec
add
out
jne
lea
jl
cmp
sub
xor
inc
jns
jbe
or
dec
push
es
cmp
add
(bad)
mov
loopne
lea
cmp
jb
daa
pop
cmp
cmp
icebp
push
mov
add
cmp
aas
aam
pop
xlat
fdiv
xchg
cmp
enter
(bad)
fdiv
or
add
sub
xchg
jnp
std
icebp
mov
out
xor
ins
xchg
pop
inc
add
mov
sbb
int3
jmp
test
push
push
mul
scas
mov
jg
push
inc
movs
cmp
aaa
mov
add
and
and
xchg
cli
arpl
lods
pop
icebp
push
ret
inc
cmp
add
cmc
mov
cld
cli
mov
cwde
loop
in
out
js
test
imul
into
mov
sub
fcom
sub
jle
mov
ret
aas
mov
jne
xlat
in
dec
loope
jb
mov
xlat
mov
jne
add
dec
jbe
xchg
mov
ja
jmp
fs
push
inc
sub
adc
xchg
jnp
mov
ds
jp
push
sub
fwait
mov
xchg
xchg
inc
cmps
push
les
or
aam
cli
cmp
sub
sbb
xchg
pusha
pop
pop
pop
sub
into
push
jmp
and
pop
mov
jo
int3
sub
test
int
adc
leave
push
ret
sbb
imul
(bad)
fcmovnb
mov
fs
fidivr
fst
cmp
adc
mov
call
fneni(8087
jmp
jle
pusha
mov
push
sub
fldenv
mov
out
imul
mov
ror
xchg
mov
retf
xchg
and
daa
(bad)
jmp
sti
mov
dec
inc
(bad)
fcomp
out
and
mov
mov
pop
fadd
cmp
in
push
jp
mov
dec
pop
jge
sub
sti
jl
jp
icebp
std
call
aad
mov
cmp
lds
or
xlat
pusha
outs
push
mov
xor
test
pop
mov
inc
dec
or
ret
adc
inc
jp
cld
mov
test
add
pop
adc
cmp
mov
dec
addr16
das
xor
scas
ret
repz
cli
(bad)
aad
mov
sbb
and
adc
ret
(bad)
(bad)
inc
shl
aaa
cwde
pop
add
leave
sti
pop
pop
(bad)
ror
lods
enter
push
icebp
mov
add
mov
cmp
dec
stos
in
cmp
sbb
adc
fld
(bad)
and
add
rcl
xchg
jl
xor
mov
xor
cwde
adc
adc
cld
imul
jmp
xchg
mov
xchg
mov
fiadd
adc
mov
dec
adc
xlat
mov
jbe
leave
je
xchg
jae
sub
std
cmp
xchg
jae
sbb
pop
lods
imul
sbb
mov
dec
cmp
shl
mov
xchg
cwde
inc
(bad)
repnz
cmp
push
sub
lock
fstp
aad
sub
sub
dec
enter
loop
mov
(bad)
(bad)
loopne
mov
retf
iret
mov
arpl
pop
mov
lods
push
lods
fsubp
pop
icebp
(bad)
out
jnp
pop
(bad)
enter
daa
je
mov
adc
fisub
mov
sbb
xchg
outs
(bad)
mov
inc
(bad)
js
add
push
mov
add
fist
int3
adc
xchg
or
out
stos
outs
mov
in
cdq
fsub
push
cli
mov
scas
scas
inc
jne
jmp
cmps
outs
test
shl
dec
xor
adc
mov
stos
jns
mov
sbb
fs
pop
push
bound
ficom
fnstsw
sar
push
loop
jnp
cmp
fs
fisub
sti
mov
pusha
pop
out
pushf
aam
std
sub
fbld
or
cmps
and
mov
iret
sbb
cmp
mov
popf
mov
sbb
and
dec
push
ja
jmp
jne
sbb
add
xchg
ss
pushf
jno
pop
inc
inc
xchg
add
mov
out
sub
inc
(bad)
cmps
or
xor
mov
cld
lahf
inc
clc
push
adc
ficom
std
mov
stos
mov
sbb
mov
mov
xchg
ror
clc
lea
xor
push
nop
push
jmp
xchg
(bad)
or
jnp
ins
sub
adc
xchg
cmp
pusha
ins
gs
cli
pop
into
(bad)
shl
imul
dec
inc
push
jae
out
mov
cmp
aas
imul
jg
popf
fist
lods
push
imul
es
fwait
xchg
xchg
sbb
call
mov
clc
add
(bad)
cmp
clc
jp
out
inc
enter
pop
or
in
ss
push
adc
cs
imul
mov
or
xchg
cwde
mov
inc
js
out
test
(bad)
std
fwait
retf
out
pusha
pop
inc
cs
mov
pop
in
pusha
in
adc
jns
shl
sbb
sbb
aaa
mov
retf
std
mov
or
shr
or
call
shl
cmp
cmc
jp
mov
xlat
nop
mov
(bad)
push
stos
mov
mov
sub
sub
test
arpl
push
and
sub
into
stc
fcmovnbe
jno
rol
xchg
dec
mov
retf
(bad)
aam
mov
dec
sbb
int3
xor
int3
test
cmp
or
push
or
and
mov
je
jle
inc
lahf
hlt
aam
add
mov
rcr
xor
lock
leave
mov
xchg
sub
xchg
pop
pop
rol
add
jp
sbb
or
add
arpl
cwde
fidiv
or
fcomp
mov
(bad)
in
test
cwde
xchg
ins
xlat
mov
lods
popf
bound
mov
pop
and
imul
dec
xor
and
adc
test
pop
dec
iret
dec
push
repz
fld
sahf
mov
mov
ror
mov
mov
or
cwde
add
lods
retf
(bad)
add
iret
shr
jecxz
or
xchg
mov
push
jge
adc
pop
xor
adc
sahf
sbb
shl
call
idiv
lds
dec
repnz
push
enter
xchg
mov
cmps
sub
arpl
xor
pop
jle
leave
sbb
xchg
pop
in
ficom
pop
test
inc
mov
sbb
pop
sbb
retfw
mov
push
push
cmp
lods
pop
sbb
repz
mov
aad
pop
add
mov
xlat
loopne
imul
ret
mov
ss
repz
fild
push
bound
loop
jne
push
lock
repnz
mov
retf
dec
mov
xchg
rol
inc
pop
aaa
sub
xor
into
push
std
sbb
cwde
arpl
or
ins
jne
jge
pop
mov
cmp
bound
les
adc
and
data16
test
push
aad
pop
ret
jmp
das
and
stc
sub
fstp
shl
mov
sbb
xchg
push
inc
sbb
mov
(bad)
pop
es
and
psubd
cmp
imul
jbe
mov
psubb
(bad)
xchg
pop
inc
sub
int3
cmp
jnp
fsubr
mov
popf
fcmovb
mov
lock
sbb
adc
shl
add
adc
add
retf
mov
inc
mov
fadd
pop
in
lods
adc
retf
lods
(bad)
call
mov
punpckhbw
xchg
fmul
or
pop
push
sahf
mov
push
add
lods
mov
nop
xor
mov
fcom
sub
cmps
inc
imul
cmp
pop
ins
test
repz
dec
mov
cmp
mov
ds
fisubr
div
xchg
out
push
xchg
lock
loope
adc
mov
test
push
sub
jmp
cmc
push
and
mov
and
int
fs
adc
into
xor
cwde
fnstsw
call
sbb
aaa
pop
dec
sub
out
jle
test
daa
pop
pop
mov
mov
(bad)
mov
mov
dec
pop
mov
into
inc
sub
adc
or
outs
popf
fiadd
fst
adc
ror
in
adc
imul
cmp
push
inc
idiv
sbb
mov
aaa
dec
and
popa
cmp
mov
mov
adc
jb
fadd
fcomp
sti
xchg
cld
lahf
sbb
lahf
idiv
aam
or
fld
cdq
rol
leave
call
mov
fsubr
call
int
inc
pop
adc
jecxz
mov
std
jp
scas
jmp
inc
xor
clc
leave
hlt
cmp
call
pop
ror
jmp
in
xor
pop
int3
cmps
stos
sub
xchg
pop
mov
inc
inc
outs
fs
jecxz
xor
xchg
adc
cwde
je
aas
or
dec
fnstsw
ret
inc
mov
sahf
out
push
outs
push
arpl
out
pop
push
mov
mov
cmp
movs
outs
fs
movs
fs
sub
sbb
icebp
rol
pop
int3
ror
xchg
(bad)
cs
test
pop
jecxz
scas
mov
cwde
adc
jbe
sar
dec
mov
repnz
aam
loop
cdq
pop
sub
mov
or
test
stc
test
jle
sub
xchg
adc
sbb
ret
cld
test
int
or
push
push
pop
jae
mov
fist
xchg
lock
loope
ret
mov
jl
loop
aaa
pop
mov
retf
mov
fcmovbe
pop
rcl
mov
adc
jecxz
sub
outs
lahf
jmp
mov
push
mov
xor
retf
arpl
inc
inc
cmp
int3
repnz
add
xor
mov
lods
rol
das
imul
jns
sbb
jle
xor
call
pop
outs
dec
jp
jg
or
nop
(bad)
mov
fcom
adc
cs
je
jmp
(bad)
cmp
pop
es
rcr
xchg
dec
stos
lahf
sahf
clc
or
in
movs
bound
ja
ins
sbb
or
xor
or
popf
or
push
dec
mov
sar
ss
mov
outs
lock
out
xchg
push
mov
fwait
retf
fst
imul
sub
mov
push
ret
call
dec
or
or
push
in
in
cmp
sub
aad
jo
(bad)
test
adc
push
loopne
fidivr
or
int
mov
xchg
pushf
retf
jmp
movs
push
addr16
sahf
call
push
lock
bound
scas
push
outs
cmp
(bad)
dec
pop
push
aas
pop
cwde
aas
lea
mov
ja
xor
shl
(bad)
cli
mov
shld
sbb
les
cmps
add
ret
xor
push
(bad)
mov
fidivr
or
inc
cmp
shr
ins
xchg
(bad)
hlt
lods
ins
ss
or
push
out
loope
not
imul
aam
cld
add
lds
out
jl
add
inc
dec
fwait
push
in
pop
mov
in
sub
inc
pop
mov
add
sbb
aam
cmc
xor
retf
sub
add
mov
push
cmp
sub
inc
xchg
in
cdq
jne
and
xlat
nop
ins
lea
loope
outs
aad
mov
arpl
dec
add
bound
fmul
out
push
mov
imul
in
mov
mov
out
loopne
adc
repz
daa
xlat
pop
pushf
pop
cmove
or
jge
cmp
dec
push
call
arpl
mov
jae
loope
xor
sbb
test
sbb
mov
test
jno
jl
fwait
pop
add
cmps
scas
dec
mov
iret
pushf
jp
shl
icebp
cs
out
xor
aas
fsubr
xor
add
retf
pusha
(bad)
sahf
fsubr
or
push
ja
dec
push
cli
mov
rep
push
mov
mov
and
dec
pop
and
xchg
stc
das
mov
(bad)
xor
jb
in
xor
imul
and
out
mov
call
jo
mov
push
dec
mov
shr
mov
push
sti
paddq
test
mov
or
pop
cdq
adc
xor
cmp
fndisi(8087
cmp
push
lods
add
or
add
xor
ja
pop
add
jb
test
push
std
scas
arpl
or
fcmovbe
and
cld
jnp
inc
div
fistp
push
gs
push
jg
inc
cmps
out
mov
mov
push
push
jo
test
scas
imul
pusha
ins
sub
xchg
je
sub
add
jecxz
cli
dec
cwde
cmps
fcomi
sub
ins
jge
dec
push
gs
inc
fisttp
mov
sar
ror
clc
imul
lock
mov
push
(bad)
cmp
and
les
lds
popa
es
fsubr
dec
test
lock
pop
and
rol
in
ds
pop
mov
mov
push
pop
and
push
push
sar
lods
dec
arpl
adc
jo
sub
jmp
inc
cmps
xchg
cdq
xor
ret
sahf
jg
push
out
mov
inc
jmp
sub
sti
xor
dec
lods
cmp
popa
aas
dec
xchg
push
dec
in
jnp
pop
jb
mov
mov
push
jnp
push
xchg
mov
cli
xchg
stc
cmp
cmp
(bad)
es
xor
pop
xchg
lds
xchg
adc
inc
je
inc
pop
jb
xor
ds
test
xor
pop
cli
into
dec
fsub
test
stc
dec
mov
call
daa
iret
jae
mov
mov
xor
jg
lea
dec
xor
jbe
inc
arpl
add
adc
sub
sysret
(bad)
js
mul
push
jo
jp
es
cmp
fistp
jae
cdq
pop
inc
jmp
lods
sbb
or
pop
mov
xor
ins
rcr
push
sbb
jle
outs
add
mov
test
cld
sub
loope
out
cmps
pop
retf
inc
aam
out
adc
push
iret
add
nop
div
lods
sbb
mov
outs
mov
xor
or
lahf
and
pop
xchg
pop
and
adc
popa
gs
int3
inc
xor
not
in
inc
lea
rcr
jo
repnz
int3
add
mov
push
cli
(bad)
mov
mov
gs
in
lods
mov
arpl
pusha
sti
pop
out
aaa
in
mov
fstp
xor
sub
and
call
cmp
test
in
arpl
xchg
sbb
xchg
cdq
jno
ret
aaa
sub
mov
daa
xor
aam
jnp
cmp
repnz
gs
call
test
outs
sbb
sahf
clc
hlt
mov
sub
pop
out
fwait
retf
pop
imul
mov
(bad)
es
ret
gs
ret
ins
dec
xchg
fsubr
lds
mov
aaa
pop
mov
repnz
ins
sbb
and
loopne
jae
fsub
scas
test
sub
cmp
mov
sbb
ins
mov
fld
jmp
js
push
sbb
inc
sub
mov
mov
setp
jge
(bad)
mov
les
inc
js
xor
cmps
xchg
push
nop
data16
in
ins
aas
mov
fmul
xor
cwde
jmp
mov
inc
jl
loop
adc
outs
imul
push
sahf
clc
xchg
mov
xchg
inc
fmul
addr16
and
loop
push
ja
sub
sbb
into
clc
sub
jne
jb
pushf
pop
cs
xchg
jmp
push
inc
cwde
add
scas
xchg
(bad)
push
fild
or
(bad)
push
sub
mov
out
jmp
xor
test
xor
add
jecxz
jmp
sub
add
cmps
push
cli
sti
js
jbe
call
mov
fld
dec
mov
in
push
out
push
mov
cmp
loopne
add
and
mov
ss
or
dec
adc
jns
mov
sahf
xor
stos
and
enter
sahf
in
out
jl
in
cmps
fist
in
fs
add
ror
cwde
mov
imul
ret
imul
sar
mov
(bad)
jb
dec
repz
push
iret
int
ins
in
add
mov
std
sub
cwde
mov
inc
adc
fld
add
inc
push
call
mov
jno
ret
ins
sbb
(bad)
mov
and
sbb
repz
pop
popa
outs
mov
fld
hlt
adc
mov
push
dec
mov
mov
inc
inc
sub
mov
cmp
inc
les
iret
imul
jno
aas
movs
test
and
popf
fcmovnu
jmp
xchg
lock
dec
pop
sbb
and
add
movs
(bad)
dec
sbb
aaa
lahf
dec
jo
aam
or
shl
popf
and
sbb
out
mov
inc
lahf
lahf
cld
xchg
push
pop
mov
inc
outs
mov
mov
clc
inc
outs
fild
lock
jle
mov
lahf
addr16
and
xchg
fneni(8087
xlat
ret
aad
inc
jno
mov
fwait
xor
aam
cmp
adc
jnp
ss
out
jmp
or
jl
mov
push
push
fild
dec
ins
dec
pop
jbe
sbb
retf
push
cli
sub
pop
pop
mov
sub
fsubr
jb
lahf
idiv
dec
dec
inc
mov
je
div
aas
scas
pop
mov
xor
mov
dec
call
iret
adc
mov
jo
mov
sub
xlat
sub
enter
scas
shl
adc
push
fild
cdq
adc
adc
or
int
push
adc
add
mov
das
mov
mov
cmp
jnp
xor
cwde
push
mov
jg
push
pop
dec
daa
fst
inc
pushf
xor
rol
inc
sahf
loopne
mov
rcl
adc
into
and
addr16
rcl
aas
add
sub
cmc
fbstp
push
cmp
lock
mov
rcl
ss
xor
outs
div
pop
iret
inc
jae
xchg
mov
cmp
xchg
push
std
mov
or
dec
loop
push
sub
adc
jbe
and
into
push
out
test
in
test
jg
sti
jge
mov
mov
cmp
adc
xlat
pop
push
cmp
xchg
dec
cwde
xor
loope
dec
mov
ret
fst
xchg
mov
enter
outs
or
ja
jge
and
cmc
cmp
iret
adc
dec
jns
leave
adc
and
icebp
jle
xchg
test
mov
add
jl
test
mov
std
fld
and
mov
adc
xor
fdiv
out
fnsave
fwait
loop
mov
cmp
pop
jne
out
mov
fnstcw
aas
adc
mov
aad
rcl
mov
sbb
sub
ret
stos
in
xor
pop
sbb
ja
test
aam
popa
hlt
push
pop
add
fs
sbb
fistp
push
mov
rsqrtps
imul
jno
inc
hlt
mov
sbb
pop
cmps
inc
xchg
mov
movs
lea
xchg
xchg
jnp
in
mov
and
cmps
lods
pop
rcl
sub
in
inc
xchg
sbb
cdq
jmp
ret
stos
dec
cdq
test
and
or
shr
xchg
mov
fstp
xchg
mov
xchg
mov
js
mov
xor
adc
(bad)
lods
pushf
cld
mov
popa
xchg
out
dec
shl
nop
iret
cmp
fld
aad
dec
xlat
aam
jnp
addr16
jnp
xor
lods
mov
cmp
push
cmp
sub
jae
xor
add
retf
(bad)
jmp
mov
(bad)
mov
dec
cs
imul
mov
call
mov
mov
mov
pop
sti
into
unpcklps
ja
fld
ja
popa
mov
xor
retf
mov
and
mov
fnstenv
test
jno
cs
mov
imul
pop
fwait
pop
or
test
bound
xor
lods
sub
mov
sbb
jae
dec
out
and
mov
pop
je
repz
cwde
adc
in
scas
sahf
jno
xchg
dec
cmp
in
push
cmps
popf
mov
retf
std
repnz
pusha
xchg
or
cmps
addr16
fidivr
sbb
(bad)
jle
push
jb
push
jmp
and
js
fcom
push
aad
cmp
and
sub
jmp
xor
retf
test
adc
ja
push
ror
jae
addr16
data16
movs
stos
adc
(bad)
(bad)
gs
and
icebp
fs
push
dec
fst
arpl
je
sar
(bad)
cmp
mov
adc
cs
pop
xor
sbb
or
rol
pop
aam
push
jnp
adc
outs
retf
(bad)
cmp
sub
cmc
mov
adc
fidivr
(bad)
xchg
push
inc
add
into
das
mov
cwde
outs
mov
and
pop
mov
fwait
retf
add
jo
ror
and
sti
fwait
pop
cld
push
sbb
sub
mov
sub
mov
gs
pop
cld
std
int
mov
ja
dec
test
cmp
daa
pop
or
mov
sahf
sub
out
xlat
inc
push
jno
mov
mov
stos
cmp
lahf
and
cmp
fidivr
pop
movs
pop
ins
fist
or
push
or
cmp
xor
adc
and
gs
adc
mulps
popf
xchg
lds
mov
xchg
fwait
push
popf
je
fnstcw
cmp
out
stos
sbb
xor
sub
data16
in
imul
mov
add
sbb
sti
das
int
popf
leave
out
mov
repz
out
(bad)
ja
mov
scas
sub
aas
add
pop
aaa
cmps
loopne
mov
adc
cmp
jmp
xchg
std
ret
jp
cdq
bound
and
sbb
jne
je
or
stc
and
xor
and
aad
xchg
push
push
hlt
es
std
inc
mov
push
add
push
inc
jns
sti
lock
mov
dec
std
jmp
(bad)
mov
jb
pop
jo
jp
imul
dec
and
inc
xor
imul
sub
sbb
mov
aaa
sub
cmp
xor
jl
cwde
mov
or
sbb
out
or
syscall
cmp
cmp
mov
shl
inc
and
inc
fld
sbb
in
ffreep
xor
or
rcl
movq
push
mov
repnz
mov
jmp
in
(bad)
mov
leave
mov
sahf
xor
push
enter
add
in
pop
jmp
arpl
mov
cmp
dec
icebp
add
mov
or
fs
xor
mov
outs
mov
add
lods
dec
scas
hlt
and
bound
add
shl
out
add
repz
or
add
xor
jp
arpl
push
cmc
jns
call
imul
xchg
jb
neg
mov
test
mov
inc
dec
loop
and
or
push
jno
lahf
sbb
es
retf
mov
add
mov
dec
lods
mov
mov
imul
jnp
cli
mov
sti
and
repnz
dec
call
xchg
pushf
sub
ror
mov
inc
pop
rol
pop
imul
aaa
mov
pop
sbb
rol
sub
jns
add
das
or
dec
and
and
push
or
xor
in
xchg
jo
jl
mov
jbe
pop
sub
imul
jp
rcl
or
lock
pop
in
xlat
fisub
gs
fdivr
add
ins
loope
mov
push
pop
cmp
pop
call
pop
daa
inc
xchg
mov
add
retf
frstor
(bad)
pop
and
inc
lods
jecxz
mov
dec
mov
(bad)
fidiv
push
mov
sub
fild
cmp
ins
xor
dec
iret
sbb
xor
adc
pop
ficomp
out
xchg
xor
inc
retf
mov
sub
test
mov
fdiv
aad
popf
stos
mov
add
cdq
test
dec
xlat
mov
push
cmp
xor
xchg
sahf
imul
les
les
mov
sbb
mov
ret
out
xchg
in
mov
jge
ret
jb
test
jnp
and
add
pop
cld
shr
test
dec
(bad)
mov
push
mov
xlat
fwait
addr16
(bad)
pop
test
lock
mov
mov
aas
add
mov
sar
jmp
fcmovu
sub
call
movs
push
gs
jno
pop
push
daa
frstor
loop
xchg
call
xlat
retf
xchg
popa
cmps
inc
adc
mov
test
sub
add
or
pop
push
repnz
fdiv
arpl
sub
push
cmps
mov
jmp
cmp
(bad)
loopne
in
or
addr16
shl
adc
mov
xchg
call
pop
int3
add
xor
cmc
(bad)
out
xchg
jbe
loopne
sti
pushf
mov
ins
sbb
cmps
jp
xchg
ret
dec
add
push
push
popf
or
add
adc
push
sub
fdiv
dec
xchg
fdivr
mov
bound
jns
xchg
mov
pop
ss
out
loop
sub
xor
push
shl
and
sbb
(bad)
fsubp
aam
inc
sub
stos
mov
cmp
fisttp
out
inc
mov
iret
or
adc
stos
mov
add
pop
jns
ror
in
outs
cdq
mov
cs
aam
fdiv
dec
pop
inc
pushf
or
push
cli
push
test
(bad)
jo
sbb
shl
and
test
repnz
popa
gs
arpl
lods
mov
jae
jns
fiadd
jo
mov
mov
push
popa
test
dec
mov
xchg
int3
adc
(bad)
leave
pusha
jno
jmp
sub
pop
xor
out
push
dec
push
sahf
test
push
daa
sbb
nop
add
and
or
popf
jp
imul
or
cmp
pushf
retf
jne
dec
mov
mov
in
arpl
aam
rol
cld
repz
jno
pushf
inc
jnp
and
xchg
and
adc
cmps
pop
push
daa
pop
xlat
xchg
(bad)
or
outs
cmps
(bad)
stos
inc
mov
inc
gs
jo
cmp
push
or
push
outs
loope
dec
mov
jo
(bad)
push
pop
sbb
and
inc
pop
loope
push
sbb
sbb
lock
or
mov
mov
stc
xchg
push
pop
(bad)
in
or
cmc
call
iret
ficomp
jecxz
push
sbb
pop
out
sti
adc
bsr
xchg
xchg
pop
pop
cmp
movs
dec
popa
pop
sahf
popf
call
jb
xchg
mov
xchg
inc
out
ja
leave
or
adc
mov
sub
icebp
movs
lock
mov
push
jge
test
mov
bound
sub
adc
mov
lods
stos
in
and
repz
popf
xchg
xchg
xchg
loope
add
pop
push
push
inc
cmp
jo
pop
dec
(bad)
(bad)
aad
or
cwde
cmps
xor
retf
or
dec
adc
sbb
ins
mov
out
push
jb
test
bound
inc
shl
and
cmp
aad
inc
xchg
mov
jno
(bad)
aam
push
pop
test
sub
mov
js
(bad)
out
and
mov
leave
add
xchg
nop
popf
sbb
call
aad
lods
dec
jl
push
cld
mov
cld
cmc
mov
xchg
mov
jmp
adc
cmp
add
mov
xchg
cmps
fsubp
pusha
imul
cmc
inc
call
cld
ret
pop
sub
xor
jns
(bad)
lods
or
mov
cmps
mov
fild
xchg
dec
rcl
jecxz
or
xlat
scas
gs
leave
mov
retf
rcl
lahf
(bad)
cld
stc
sbb
inc
mov
mov
and
call
xchg
adc
std
or
xor
mov
sbb
jp
js
ins
(bad)
jno
(bad)
ds
lahf
cmc
imul
dec
jne
retf
bound
outs
push
xor
sbb
ficomp
mov
out
loope
repz
call
pop
cmp
ins
mov
ret
iret
mov
add
(bad)
test
hlt
lods
dec
push
sub
retf
xor
dec
jge
leave
out
sbb
mov
movs
add
pop
and
mov
pop
stos
or
mov
popa
loope
fwait
xchg
jp
gs
sbb
lds
cmp
fwait
scas
into
clc
adc
and
es
xchg
pop
mov
dec
cmp
and
mov
in
sub
cmp
test
in
inc
mov
ins
std
js
out
dec
movs
sub
cmps
xchg
(bad)
adc
inc
dec
jge
iret
mov
jp
add
stc
push
ficomp
(bad)
movs
hlt
sub
adc
mov
jge
call
jne
pop
mov
dec
inc
loop
jbe
sbb
into
push
and
add
and
aaa
es
scas
mov
push
out
jl
jle
popa
pop
aad
fpatan
push
jmp
sbb
shl
mov
loop
int
lods
popf
ins
stc
pop
xchg
xor
leave
mov
push
das
inc
lock
xor
and
lds
pop
xlat
std
or
lahf
mov
inc
dec
add
(bad)
out
pop
inc
les
std
imul
mov
mov
mov
jg
adc
imul
push
sar
movs
hlt
outs
iret
xor
int3
not
ret
cmp
sar
ds
pop
sbb
es
or
out
sub
xchg
popf
rol
aam
ja
(bad)
xchg
dec
imul
jns
(bad)
(bad)
iret
scas
inc
ss
in
mov
xlat
sub
mov
out
fbstp
in
and
out
pop
jecxz
inc
(bad)
shl
rcl
fild
xchg
pop
sbb
ret
rcr
xor
hlt
ffree
not
mov
popf
mov
dec
push
iret
cmps
jmp
jno
addr16
ret
cmp
das
dec
pop
dec
ficom
pop
in
outs
sbb
sub
stos
mov
mov
stc
pusha
aas
push
pop
mov
pop
imul
(bad)
in
sub
push
cmp
pop
cmp
inc
ss
stos
pop
pop
hlt
inc
dec
inc
fs
imul
fs
dec
fbstp
icebp
sub
das
xchg
add
or
cmp
sub
jmp
mov
push
fdivr
xchg
jge
mov
pop
movs
icebp
jp
aas
(bad)
lds
push
xchg
mov
repz
(bad)
out
fmul
test
adc
mov
adc
push
mov
and
sbb
mov
jl
pop
std
inc
int3
jbe
ficom
retf
sar
outs
push
sbb
mov
daa
dec
js
jo
add
fbstp
xchg
push
fldcw
(bad)
stos
xchg
inc
outs
xchg
mov
es
lods
add
int3
retf
jl
ret
aaa
dec
add
pop
mov
or
pop
or
dec
lds
push
out
jge
leave
aaa
inc
sbb
push
leave
loopne
jge
clc
push
xor
push
jp
lock
pop
ja
or
cmp
mov
mov
or
sbb
push
add
add
(bad)
mov
cmp
xchg
ret
mov
ja
ins
and
cmp
out
lds
(bad)
push
outs
in
stos
shl
cmc
xor
pop
out
ror
mov
repz
mov
imul
dec
jnp
mov
arpl
sti
xchg
sbb
push
into
test
jle
and
sbb
add
test
xchg
mov
cmp
loopne
fwait
adc
shl
into
inc
mov
sub
jbe
pop
mul
shl
arpl
cmps
xor
mov
xor
dec
xchg
sbb
addr16
movs
into
xchg
mov
loop
mov
std
int
imul
dec
sbb
(bad)
pop
jo
out
or
mov
inc
jmp
cs
xlat
or
out
leave
mov
aaa
cmp
mov
dec
push
mov
mov
cmp
call
xchg
sar
test
mov
mov
mov
xchg
lods
iret
cs
sub
jmp
xor
inc
imul
xchg
repz
sub
xchg
push
jl
into
pop
xor
dec
mov
bsf
pop
jne
xchg
jge
popa
fsincos
gs
popf
lds
mov
mov
clc
cli
popa
cs
pop
ror
sbb
jmp
enter
add
jnp
dec
retf
test
loopne
xchg
fbstp
mov
(bad)
jnp
ins
jmp
pushf
mov
stos
pop
out
aad
lods
fist
(bad)
ins
jg
out
scas
repz
push
xchg
fild
pusha
mov
pop
mov
stc
and
mov
fst
movups
lods
jmp
sbb
std
iret
in
cdq
loop
daa
jo
push
call
mov
pop
inc
loopne
push
cmp
hlt
pop
and
jecxz
inc
nop
icebp
sub
es
cmp
push
jl
stos
xchg
mov
pop
fadd
aam
jl
iret
inc
cmp
int3
and
mov
fs
jo
cmc
int3
mov
fld
aaa
jecxz
adc
jecxz
and
pop
mov
jmp
mov
ins
out
aaa
mov
push
xchg
sub
adc
mov
push
test
je
aas
call
jnp
fmul
test
stc
das
pop
fwait
or
(bad)
cmp
out
popa
test
sahf
stc
retf
sti
ror
movs
xchg
dec
mov
fwait
test
cmp
mov
(bad)
inc
xor
push
loop
mov
jnp
scas
cdq
pop
ret
clc
sub
adc
sbb
adc
pop
and
lock
enter
mov
ret
enter
scas
sbb
mov
jge
daa
jns
ror
and
adc
daa
addr16
pop
mov
(bad)
fist
fldenv
out
and
push
cmps
hlt
stos
mov
push
xor
mov
pop
dec
xchg
jo
mov
das
xor
rol
or
add
jmp
push
sub
into
sbb
jo
(bad)
hlt
jns
daa
je
in
cmc
pop
mov
sbb
inc
xchg
pushf
mov
mov
lods
adc
pop
out
mov
lods
inc
dec
add
add
or
adc
rcl
outs
jno
stc
xchg
sbb
in
repz
push
scas
ret
xor
icebp
int
push
add
(bad)
mov
adc
int3
movs
inc
sbb
xor
fs
out
fimul
sbb
dec
rol
addr16
cmps
gs
popf
adc
das
out
cmp
jno
or
and
shl
test
loope
nop
sbb
out
cmps
or
push
jne
pushf
push
repnz
cmps
mov
inc
addr16
sbb
sub
jne
(bad)
rol
xchg
add
push
mov
xchg
pop
push
push
dec
pushf
sub
ins
aad
xchg
pminsw
lea
nop
mov
jns
pop
ret
in
(bad)
(bad)
sub
scas
ret
sbb
retf
push
in
cmp
fsub
jnp
(bad)
dec
sbb
inc
ins
outs
add
jecxz
adc
mov
jmp
pop
cmp
push
retf
xlat
mov
mov
mov
or
and
les
jp
mov
rcr
leave
aas
adc
sub
mov
xchg
ds
enter
lock
and
inc
retf
xchg
stos
outs
mov
nop
sbb
mov
inc
or
jmp
cmc
jl
clc
pop
std
popf
imul
(bad)
js
retf
and
push
mov
or
repz
sbb
mov
dec
rcl
push
dec
xchg
mov
dec
cmp
mov
(bad)
shl
cmp
dec
loop
inc
push
inc
sbb
mov
sub
shl
mov
mov
loop
dec
ret
mov
or
and
jns
sar
outs
jle
mov
fsubr
mov
mov
enter
push
in
jne
xchg
movs
sar
arpl
lods
(bad)
mov
inc
jnp
aam
retf
xchg
cmp
inc
push
in
(bad)
inc
adc
push
aad
ds
jle
inc
shl
ror
call
fcmove
xlat
xor
push
test
xlat
mov
push
stc
ret
(bad)
data16
arpl
ins
mov
xor
dec
and
mov
pop
out
loopne
mov
lods
pusha
call
or
sar
inc
out
sti
push
into
or
je
in
inc
cdq
lahf
loop
xor
lods
dec
mov
add
aas
add
xor
arpl
fwait
adc
cmp
mov
lods
stc
jae
test
(bad)
fwait
dec
inc
push
outs
mov
xchg
mov
mov
repz
stc
cdq
mov
mov
cdq
mov
dec
push
xchg
xchg
loopne
push
mov
add
cmp
cmp
retf
xor
movs
movs
adc
pop
ret
mov
out
in
cmp
push
xor
mov
mov
mov
fdiv
cmp
sbb
aas
xor
test
icebp
ja
test
ss
cmps
mov
pop
icebp
das
daa
mov
xchg
in
std
(bad)
sub
ror
cmp
xor
ins
idiv
(bad)
sub
scas
rcl
addr16
jns
mov
int3
mov
and
ja
mov
mul
mov
ret
pop
std
pop
add
pop
xor
iret
jmp
and
mov
(bad)
out
xchg
outs
daa
(bad)
inc
fbld
fisttp
sub
and
out
inc
inc
hlt
cmp
mov
or
pop
jae
ins
cmc
mov
jo
mov
add
add
fcmovnbe
lods
je
daa
jp
sub
pop
jl
pop
push
inc
cmp
arpl
leave
mov
add
or
mov
pop
mov
xor
or
inc
jl
fs
int
cwde
sbb
pop
(bad)
pop
mov
push
mov
test
call
cmp
adc
in
jns
mov
cmp
data16
xchg
cli
popf
mov
xor
jge
dec
push
jnp
in
mov
jns
(bad)
popf
outs
stos
add
out
mov
or
push
mov
cmp
stc
sbb
lahf
in
sub
outs
and
jo
es
xchg
cmp
outs
jge
and
scas
inc
mov
js
cdq
(bad)
mov
sbb
aam
mov
bound
loopne
enter
icebp
je
iret
repnz
inc
inc
dec
rcl
outs
call
bound
sbb
xchg
hlt
jmp
cmp
aaa
loop
fsubr
xchg
nop
add
push
xchg
pop
pop
add
gs
aad
inc
bound
out
add
outs
jbe
sahf
xor
(bad)
mov
out
lahf
test
xlat
or
mov
push
jge
and
mov
fnstcw
xchg
mov
es
retf
(bad)
repnz
cmp
mov
mov
pop
cmc
add
stos
pop
push
push
lock
xchg
stos
mov
and
mov
das
mov
out
cmp
stos
or
stos
adc
aas
ficom
add
movs
adc
ins
fmul
nop
icebp
outs
mov
dec
arpl
cmp
ror
mov
retf
cwde
dec
dec
add
and
cmp
dec
xlat
rcl
mov
rcr
inc
or
ds
ror
inc
xchg
push
mov
test
mov
or
mov
cmp
xchg
mov
inc
jns
fisttp
or
shl
jns
fs
push
cmps
jno
dec
xor
movs
aaa
cmp
ret
xchg
sbb
push
push
ja
leave
and
jmp
jb
outs
add
xor
and
sbb
inc
inc
or
push
mov
div
sbb
sbb
shl
fisttp
and
ins
sbb
ror
inc
loopne
mov
call
sbb
data16
shl
sahf
int
out
ret
inc
popa
int3
sbb
xor
push
mov
mov
sub
ins
push
aaa
push
stos
jg
mov
bndstx
test
adc
dec
xchg
pop
and
adc
aad
cmp
dec
lods
inc
mov
xchg
shr
add
dec
dec
retf
or
dec
xchg
mov
jno
adc
js
and
retf
add
pop
cmp
dec
stc
pop
movs
in
adc
xlat
stc
xchg
clc
ret
imul
add
(bad)
pop
pop
jne
in
pushf
loopne
sub
sbb
jae
mov
pop
shr
jl
and
mov
fnstcw
inc
je
call
jno
add
js
rol
inc
mov
pop
xchg
sbb
adc
mov
jne
cwde
xor
add
lahf
xchg
dec
vmovntps
xor
mov
xor
je
std
aaa
lods
pop
xor
pop
clc
or
pushf
out
ss
mov
xchg
retf
jnp
pushf
retf
xor
popf
cmp
shl
sbb
call
sbb
jbe
in
xlat
sub
add
ins
aas
jmp
loop
aam
mov
nop
and
push
pop
das
clc
(bad)
ja
push
jbe
add
mov
inc
int
jl
ins
mul
pop
cdq
add
ss
mov
cwde
(bad)
jb
rol
in
js
xchg
adc
test
mov
(bad)
fcomp
test
loopne
push
fimul
xor
inc
inc
jns
cs
into
ficom
ss
arpl
sbb
out
jmp
inc
sub
std
adc
dec
pop
xchg
dec
aad
xchg
jbe
cld
mov
fdiv
xchg
sub
mov
sbb
cmp
and
xor
in
and
retf
cmp
xchg
mov
(bad)
aas
iret
fs
xchg
pop
pop
hlt
not
sbb
ret
or
jb
dec
jge
cmps
dec
inc
leave
fcmovnu
push
mov
add
mov
out
adc
sbb
mov
out
pusha
test
push
sar
(bad)
cmp
jp
sub
mov
add
int3
(bad)
or
mov
mov
rcl
xor
xor
in
inc
enter
push
mov
std
out
pop
retf
xchg
sbb
ins
jne
test
jle
push
xchg
stos
dec
repnz
push
xchg
mov
adc
(bad)
cmp
mov
(bad)
jb
and
jns
loop
retf
xchg
cmp
jmp
aas
jp
dec
cmp
jge
imul
push
cdq
adc
mov
(bad)
adc
xchg
sti
dec
aas
sub
add
add
add
jns
cs
lds
repz
sbb
ret
fprem
xor
mov
aaa
mov
sbb
repz
(bad)
sbb
jne
mov
xchg
neg
ret
cmp
stc
cld
jecxz
jne
mov
sub
sub
retf
add
(bad)
cmps
mov
stos
les
cmp
mov
mov
cmps
in
add
and
sbb
cwde
inc
push
adc
jl
pusha
sub
pop
out
clc
or
retf
inc
clc
jecxz
in
fiadd
pop
mov
(bad)
mov
dec
push
retf
push
icebp
xchg
push
xlat
test
cmp
mov
rcl
test
xchg
inc
and
mov
mov
out
jbe
cmps
inc
mov
inc
and
push
outs
xor
xor
leave
in
aam
push
dec
les
stos
(bad)
pop
xchg
retf
pop
imul
inc
mov
pop
sub
in
test
imul
clc
and
jae
cmp
mov
push
pop
mov
stc
jb
sub
shr
or
xchg
xor
dec
rol
push
sbb
inc
and
xchg
movs
bsf
sbb
pop
xchg
and
adc
sub
out
lea
fs
movs
ss
rcr
daa
ror
int3
cs
jmp
lock
adc
jne
jae
mov
jecxz
add
scas
shr
xor
push
jns
adc
add
pushf
les
shl
xchg
jmp
es
imul
sub
xlat
jnp
movs
dec
or
add
test
les
in
adc
stos
mov
sar
xor
push
retf
icebp
lock
or
test
mov
and
pop
sbb
xchg
jo
scas
xor
popf
fwait
hlt
mov
jbe
dec
adc
dec
ins
lods
push
xor
or
imul
das
push
sbb
mov
mov
mov
xchg
dec
loopne
pushf
push
rep
fild
push
push
push
add
(bad)
xchg
ds
adc
mov
mov
hlt
xchg
or
mov
pop
lea
bound
add
push
or
xchg
jae
xchg
dec
pop
push
xor
dec
pop
pop
inc
(bad)
sub
push
iret
xchg
movs
adc
adc
xchg
call
xchg
sbb
scas
out
xchg
cs
sbb
xor
in
(bad)
fisubr
jo
stos
mov
or
mov
mov
fwait
das
out
sbb
out
sub
cmp
or
es
imul
inc
sub
ror
sub
lock
pop
std
and
mov
or
rcl
lock
mov
sub
rcl
jl
test
in
adc
push
fnstcw
push
push
pop
in
test
sub
and
(bad)
pop
dec
sti
(bad)
jmp
int
shl
push
cmp
sub
mov
sub
ret
ins
repnz
xchg
aas
pop
xor
fisub
iret
loop
push
mov
test
dec
das
jns
hlt
test
jg
cmp
sahf
xchg
pop
inc
jle
mov
jp
xor
fld
cdq
jo
aam
xchg
cmp
and
loopne
sbb
std
(bad)
fsub
xchg
push
lods
ins
sub
repz
test
inc
out
add
jns
xor
and
jo
in
cld
and
rol
xchg
aas
rcl
xchg
xor
ja
adc
mov
icebp
xor
push
xchg
xchg
mov
outs
div
sub
jnp
out
fsub
mov
bound
clc
adc
xor
cmp
shl
mov
and
add
add
push
rol
inc
inc
mov
inc
pushf
push
pop
nop
add
aas
add
cs
movs
push
jge
sub
rcl
xchg
cmp
in
sar
add
jnp
xor
jl
and
sbb
icebp
aad
sti
loope
out
out
cmp
xchg
jno
add
bound
inc
push
in
movs
inc
shl
jnp
sub
bound
or
sub
jp
sbb
jecxz
lea
jecxz
popf
push
xchg
adc
lods
sbb
in
in
push
rcr
lock
or
outs
and
add
push
pop
xor
lods
xchg
cmps
mov
jp
fst
xor
pop
mov
es
sahf
dec
pusha
jae
jl
mov
mov
loop
dec
cmp
xor
mov
inc
xor
cld
shr
fcomip
ins
daa
dec
stos
push
call
cli
sub
jg
dec
cmp
fsubr
inc
out
or
mov
(bad)
xchg
hlt
mov
ror
xor
cwde
test
pop
std
mov
dec
jl
out
push
out
gs
mov
popf
les
daa
call
(bad)
mov
dec
sub
push
pop
out
mov
int3
jg
cli
fistp
call
popa
les
sbb
fwait
mov
addr16
imul
inc
jbe
nop
icebp
jbe
fadd
pushf
or
inc
and
stos
je
sub
push
push
and
dec
push
jecxz
sbb
les
pop
(bad)
mul
call
xchg
jl
xchg
dec
mov
out
xor
mov
jmp
iret
fs
imul
outs
jp
sti
push
mov
pop
retf
fnstcw
jecxz
test
adc
iret
cli
pop
or
push
(bad)
inc
out
xchg
pushf
aad
out
gs
jbe
in
inc
xchg
pop
hlt
adc
es
nop
out
inc
jg
mov
and
fs
fwait
ss
pop
out
jbe
xlat
aaa
loopne
bnd
cmp
mov
sub
mov
adc
cld
sub
loopne
mov
movs
das
in
(bad)
fisub
and
pop
loop
and
mov
jae
mov
mov
scas
push
pop
popf
mov
dec
ret
cld
and
es
fcomp
mov
inc
pop
mov
aas
lahf
jg
scas
pop
inc
push
and
xlat
mov
test
arpl
inc
dec
in
je
ror
int
pushf
or
jp
leave
popf
ror
mov
mov
jecxz
push
xchg
sbb
test
inc
mov
test
jae
daa
sbb
sahf
(bad)
aam
mov
cmp
cmp
mov
xlat
xor
aad
xchg
mov
(bad)
hlt
sbb
add
test
add
sbb
add
mov
repz
sti
leave
mov
mov
mov
cmp
and
daa
daa
mov
hlt
in
jp
ret
jae
push
mov
mov
mov
lea
pop
jl
jg
adc
fisttp
into
les
das
inc
mov
mov
adc
add
and
and
in
ds
shr
bound
rcr
test
adc
mov
das
adc
mov
xor
jecxz
ror
xchg
fstp
imul
dec
cli
push
sar
inc
sti
scas
fmul
fst
and
test
xor
cmp
les
aam
sub
pop
xor
imul
mov
sbb
inc
into
lods
ret
shr
in
adc
out
pop
scas
xchg
retf
xor
add
and
shl
sub
fnstenv
push
sub
movs
inc
aas
sub
lea
pop
cmp
mov
jno
mov
mov
mov
leave
xchg
leave
mov
aam
leave
test
mov
sahf
lock
pusha
sbb
dec
shr
loope
push
xor
call
call
mov
jne
cld
adc
mov
pop
out
jns
retf
mov
xchg
dec
add
mov
aaa
pop
fnsave
jecxz
jmp
cli
xchg
inc
inc
outs
xchg
dec
xor
adc
mov
pushf
inc
pop
cs
dec
fsubp
add
sub
rcl
lea
mov
xchg
ss
mov
(bad)
icebp
bound
imul
mov
jne
imul
adc
cmp
jecxz
pop
dec
xlat
mov
xor
jne
xor
sub
int3
pop
or
jmp
or
bound
dec
inc
push
push
xor
mov
xchg
cwde
inc
scas
aad
daa
fcmovne
pop
mov
dec
dec
jne
xor
addr16
ja
xlat
lods
mul
pop
and
dec
jg
(bad)
push
test
xchg
xchg
sbb
call
sbb
mov
push
repnz
outs
adc
addr16
mov
ror
les
fs
repz
out
scas
std
mov
jp
jmp
or
je
push
mov
loope
loope
setnp
mov
pop
je
sar
dec
xor
push
popf
test
mov
imul
cmp
je
mov
rcl
sti
mov
inc
and
xchg
jle
arpl
div
and
cs
mov
cmp
(bad)
mov
lds
retf
in
jb
and
adc
rcl
paddw
jae
xor
xchg
mov
leave
shl
sar
mov
in
outs
in
pop
xlat
call
mov
test
and
pop
loop
out
inc
or
jl
sbb
and
aas
mov
out
cmc
adc
cmp
cmp
cmp
cmps
pop
sti
cmp
and
jne
xlat
imul
in
(bad)
sub
inc
mov
cmps
lods
popa
shr
popf
mov
mov
test
cmp
out
cdq
call
shl
pop
xchg
lahf
xor
xlat
lods
inc
pop
sbb
fmul
std
push
jmp
push
test
xchg
popa
ss
movs
adc
cmp
xor
ss
sbb
push
sar
(bad)
pop
pop
sbb
pop
cli
dec
icebp
and
fbstp
cmps
push
jns
sub
pop
mov
sub
dec
dec
jecxz
fist
cmp
std
cmp
and
arpl
mov
adc
not
pop
neg
inc
ins
stos
push
push
dec
pusha
or
push
(bad)
lds
dec
inc
aas
mov
seto
xor
sub
fs
or
push
cmc
retf
add
in
out
nop
push
stc
cdq
dec
outs
clc
pop
lahf
movs
imul
retf
push
cld
sub
sbb
xor
sti
dec
and
cmp
inc
xor
test
cmp
pop
stc
push
ficom
push
jae
sub
lds
mov
cld
adc
mul
and
xor
clc
out
dec
aas
adc
lock
xor
(bad)
test
mov
int
or
pop
dec
and
inc
mov
cmp
loopne
or
and
and
xchg
add
popa
jo
add
lahf
pop
int3
inc
into
imul
ror
inc
push
pop
enter
frstor
cmps
jns
(bad)
ds
xlat
sbb
out
cmc
jb
repz
jno
dec
sub
xchg
mov
mov
pop
loop
push
jle
and
jge
cdq
loop
sub
xlat
mov
adc
or
sbb
loope
push
stos
adc
or
mov
fdivr
xor
(bad)
pushf
push
xor
dec
sbb
add
mov
(bad)
fidivr
out
outs
jo
mov
add
mov
mov
lds
stc
gs
inc
mov
push
adc
cmps
mov
mov
aad
imul
and
in
and
xor
xor
into
movs
inc
icebp
outs
inc
bound
pop
sub
push
cmc
cmps
addr16
ins
lods
test
fiadd
mov
xchg
mov
pop
add
outs
jle
push
and
and
and
push
cdq
jecxz
fild
mov
mov
test
cmp
push
popf
rcl
pop
pop
sub
sbb
fld
les
dec
cmp
xor
aam
fiadd
enter
lods
sahf
push
scas
push
add
adc
sub
mov
loop
mov
loop
push
xchg
(bad)
ficom
icebp
xchg
in
jecxz
pop
in
dec
mov
les
xor
loopne
dec
or
(bad)
or
daa
adc
dec
outs
mov
mov
in
xadd
je
cmp
adc
sar
inc
sub
sub
aad
xchg
or
adc
ja
daa
popf
or
jne
mov
cwde
cld
xor
in
lds
retf
test
and
outs
xor
loopne
mov
out
cmp
xchg
(bad)
mov
scas
and
add
leave
jecxz
push
inc
mov
jg
sbb
jns
jl
inc
adc
movs
imul
je
mov
mov
into
test
out
arpl
sbb
retf
cmps
or
jnp
inc
test
inc
aaa
inc
push
push
xor
psubsb
stc
ret
imul
cli
mov
xchg
inc
call
retf
cli
out
xor
jp
or
fisub
mov
dec
xchg
sti
jbe
mov
repnz
sahf
popw
leave
push
loope
and
aad
adc
mov
push
int
cmp
dec
sbb
ins
mul
cmps
add
xchg
lods
stos
mov
and
ins
fsub
xor
sub
and
outs
pop
sbb
loope
lods
pushf
jp
fmul
pop
cs
pop
stc
pop
sbb
xor
(bad)
cmp
sub
inc
mov
xor
mov
bound
in
mov
fcomp
into
push
es
out
(bad)
rol
retf
shl
sti
mov
mov
mov
shl
ins
mov
icebp
addr16
xchg
pop
pop
(bad)
push
pop
stos
ret
cmp
retf
jp
mov
inc
aad
add
push
js
test
out
or
and
push
xchg
mov
js
cmc
jg
ror
les
and
hlt
xor
add
inc
jp
pop
push
dec
pop
adc
out
push
inc
aad
push
sub
call
clc
jmp
imul
mov
xchg
mov
aaa
std
jb
mov
fiadd
rcr
and
(bad)
dec
arpl
fnsave
rol
jne
sbb
cmps
aad
push
shl
(bad)
or
or
pop
fisub
push
in
outs
out
add
pop
push
cmp
inc
and
test
pop
mul
and
int3
xchg
mov
fimul
pop
jmp
jge
int
and
inc
test
repz
jb
xchg
jp
fs
out
adc
dec
sbb
jl
stos
js
idiv
dec
pushf
dec
pop
and
lods
xchg
jmp
scas
in
mov
(bad)
jge
or
adc
fcomip
aaa
xor
(bad)
mov
fwait
mov
xor
cmps
sbb
repnz
jns
dec
fadd
dec
cwde
xor
out
mov
sub
lea
aam
cmp
cmp
imul
addr16
cmp
jle
cmps
je
mov
inc
or
out
dec
lods
inc
cmc
mov
mov
das
xchg
dec
mov
jmp
into
enter
loopne
int
sahf
loop
imul
inc
imul
mov
or
inc
aas
sub
sbb
xor
mov
clc
(bad)
(bad)
ret
jge
xchg
sti
bound
xor
adc
xchg
add
arpl
dec
mov
scas
leave
into
cld
out
cmc
inc
cmp
stos
xchg
push
ror
jno
and
and
popf
push
cmp
sbb
mov
add
rol
cmps
dec
mov
sti
rcr
iret
ret
out
add
sbb
jmp
sub
data16
mov
fcmovnb
sti
mov
pop
push
mov
inc
fldenv
es
jmp
cli
mov
dec
jp
test
ret
inc
iret
mov
scas
cmp
fdiv
xor
sub
mov
sbb
xor
leave
scas
out
ss
pop
fimul
aam
aad
(bad)
in
sbb
dec
jno
(bad)
retf
xchg
(bad)
jl
cmp
xor
ds
sbb
in
mov
mov
xor
jl
jmp
cdq
jns
or
fstp
cmp
popa
xchg
arpl
mov
dec
sub
sub
and
cmp
fsubr
sbb
jecxz
lds
outs
and
cmp
ins
push
es
fimul
push
stc
sub
mov
push
xchg
mov
sub
add
ds
(bad)
daa
jmp
jmp
push
leave
out
cld
mov
jecxz
push
xchg
cli
aas
out
sub
jno
ins
icebp
aad
adc
cmp
imul
push
push
test
push
or
sbb
out
mov
sub
std
pop
ins
sub
inc
inc
stos
cmp
stos
sbb
add
(bad)
aam
adc
dec
(bad)
xchg
scas
push
add
mov
test
fcmovne
push
mov
mov
nop
nop
(bad)
stc
cmps
ret
xor
mov
lock
jge
mov
xchg
stos
scas
fs
cmp
(bad)
jp
adc
dec
pop
ret
rcl
mov
mov
out
mov
lock
sbb
adc
add
and
cmp
jge
aaa
inc
pop
jne
fisttp
lods
aad
stc
test
xor
ins
jo
add
enter
pop
ds
shr
popf
push
stos
push
pop
fwait
arpl
xlat
test
repz
aam
dec
jmp
mov
cmps
push
add
sub
sahf
dec
and
xchg
mov
xchg
fild
fwait
pop
mov
adc
je
pop
pusha
inc
out
lea
aaa
xchg
inc
add
ja
into
fwait
xchg
cmp
sbb
(bad)
jl
loope
loop
fnstsw
and
stc
bound
ins
or
mov
mov
mov
mov
retf
popa
pop
xchg
xchg
arpl
(bad)
in
cli
repz
mov
push
mov
cmps
add
inc
mov
dec
imul
(bad)
pop
aaa
sub
xor
and
bound
cld
lods
scas
and
ja
jnp
ror
call
repnz
pop
jge
in
fiadd
pop
loop
shr
loopne
icebp
push
(bad)
ds
pop
adc
mov
outs
out
(bad)
sub
push
xchg
push
cmps
xchg
ret
push
mov
arpl
xlat
inc
xor
outs
stos
mov
movs
add
repnz
fs
cmps
jmp
in
add
fmulp
(bad)
push
inc
mov
cmp
clc
push
test
cwde
and
mov
out
pop
mov
scas
sbb
rcr
push
mov
imul
scas
add
adc
outs
ror
and
xchg
sbb
mov
sbb
and
shr
cdq
xchg
fimul
data16
mov
fsub
jmp
mov
xor
cmp
add
inc
mov
pushf
inc
ins
stos
fs
cmp
mov
mov
cmps
js
shl
(bad)
jb
sar
adc
mov
rcr
sub
xor
or
pop
cwde
push
mov
sub
outs
fsub
nop
in
rcr
adc
fst
or
cmc
sub
jmp
(bad)
pop
inc
add
out
inc
nop
push
out
cdq
adc
and
inc
sysenter
adc
sbb
sahf
repnz
jns
daa
ret
hlt
hlt
sub
cs
jp
mov
loopne
retf
sub
dec
adc
mov
and
outs
loope
jp
cmp
mov
push
setg
daa
lods
add
pusha
mov
mov
mov
(bad)
fld
das
mov
(bad)
sbb
movs
gs
pop
inc
and
jmp
(bad)
add
daa
xchg
cmc
ret
sub
test
mov
cmps
daa
sub
out
call
cmp
(bad)
rcl
div
pop
rol
dec
enter
push
and
lods
push
push
pusha
hlt
fcom
pushf
or
shr
or
ja
nop
fwait
cmp
mov
mov
lods
iret
sti
adc
fwait
mov
retf
mov
dec
and
cmps
xor
push
scas
ja
repnz
bound
in
pop
out
stos
dec
retf
aas
or
xchg
add
cmps
je
mov
add
ins
mov
push
outs
jne
or
mov
lods
popf
shl
shr
pushf
xor
dec
sbb
jns
mov
push
dec
jp
or
pop
ins
xor
bound
rcl
mov
fadd
out
retf
scas
adc
jmp
or
cli
pop
cmp
retf
(bad)
movs
mov
jmp
retf
out
mov
sbb
push
cmc
pop
jns
rcr
and
hlt
in
mov
sub
mov
fiadd
retf
push
push
addr16
ficom
imul
cmp
(bad)
mov
(bad)
mov
pop
mov
outs
ss
jle
nop
mov
dec
mov
mov
sbb
ja
jns
gs
call
or
mov
mov
jle
xor
jbe
push
sub
cmps
xchg
mov
or
push
mul
mov
push
sub
sti
ja
and
xchg
ins
push
call
jge
mov
xchg
loop
cld
icebp
adc
not
test
mov
call
cld
inc
scas
jge
mov
xchg
mov
jnp
mov
fadd
dec
scas
adc
test
fwait
push
repnz
pusha
dec
push
mov
push
icebp
jo
mov
js
icebp
cmp
cwde
jmp
mov
popa
inc
or
in
lahf
sbb
repz
stos
(bad)
and
cld
sub
mov
add
and
and
cmp
xchg
retf
es
inc
jmp
cmp
push
cmp
pop
scas
call
add
lock
aaa
addr16
cmps
test
or
cs
add
mov
ds
(bad)
(bad)
aas
out
ja
movs
gs
arpl
mov
repz
adc
adc
(bad)
push
out
aad
push
jno
stc
mov
pop
lods
dec
and
cli
hlt
xchg
jno
cli
stos
sub
ror
and
in
xor
cmp
inc
xchg
mov
xlat
pop
mov
mov
mov
test
fldcw
shl
outs
fidivr
(bad)
nop
popa
in
lahf
cs
mul
xchg
or
fisubr
mov
mov
mov
scas
sti
test
retf
int
xor
cdq
stc
int3
mov
pop
test
test
addr16
lods
mov
add
(bad)
sar
mov
cmps
cmp
ins
xchg
inc
add
lahf
fidivr
loop
xlat
push
repz
and
adc
mov
sbb
(bad)
mov
test
es
retf
dec
push
and
pop
mov
adc
outs
xor
loop
icebp
fadd
mov
in
out
xor
test
pop
jne
shl
mov
sbb
ret
aad
enter
loope
mov
adc
push
sub
icebp
dec
pop
push
adc
(bad)
adc
pusha
cmps
shr
and
cmp
int3
out
in
adc
xchg
adc
cmp
(bad)
pop
icebp
sahf
ret
jl
xchg
or
aad
test
jno
out
xchg
dec
(bad)
aas
push
or
pop
xchg
lods
pavgb
and
mov
movs
sbb
sub
sbb
repnz
out
pop
es
das
dec
push
push
xor
mov
cmps
jno
scas
and
xchg
and
cmc
loopne
jns
mov
mov
push
pop
push
add
mov
mov
inc
xor
pop
mov
call
jp
sahf
fwait
in
inc
push
retf
out
mov
scas
dec
adc
popa
in
ret
inc
and
push
jmp
inc
lds
xor
fucom
sub
sub
jmp
addr16
retf
mov
aaa
lock
fnsave
aaa
pop
mov
xor
push
xor
cmps
lahf
(bad)
cmp
cwde
dec
xor
and
mov
pop
arpl
lock
shl
call
or
add
shr
and
lea
xchg
mov
jg
scas
mov
(bad)
adc
xchg
mov
fadd
pop
lock
xchg
leave
push
jnp
in
cmp
(bad)
sub
or
rep
arpl
movs
fild
mov
sbb
xlat
lahf
xor
push
mov
repnz
push
xchg
pop
mov
call
ret
push
pusha
add
daa
pop
jne
cmp
idiv
scas
(bad)
push
in
push
(bad)
shl
jl
stc
or
cmp
mov
dec
dec
inc
cwde
cmp
rcr
sub
out
dec
and
inc
clc
adc
jns
add
push
cdq
mov
pop
push
sbb
cs
sub
div
add
in
popa
lds
adc
pop
lods
cmps
leave
fisttp
dec
inc
(bad)
add
mul
int3
push
div
xchg
xor
fst
or
in
mov
pop
sbb
sbb
out
test
psrlq
push
add
repnz
mov
sub
jmp
push
sti
ror
or
adc
cmp
loopne
stos
mov
mov
push
cmp
dec
mov
call
sti
repnz
(bad)
loopne
lods
(bad)
call
xlat
neg
mov
inc
aam
imul
rol
jmp
mov
push
out
neg
das
sti
fisubr
sub
xchg
mov
mov
cmp
emms
pop
mov
jo
call
jecxz
cmps
jo
enter
fcom
ins
sub
push
mov
(bad)
inc
pop
ror
addr16
mov
sbb
cmp
not
adc
inc
xchg
xor
rcr
and
mov
cmp
xchg
and
cmp
call
xchg
test
push
adc
sahf
dec
xchg
dec
and
shl
aas
scas
loopne
mov
xlat
aaa
stos
std
dec
pop
popa
sbb
mov
movs
repnz
adc
(bad)
pop
sub
aam
add
aam
(bad)
in
ja
dec
das
in
sbb
or
cmp
push
add
jp
aad
inc
mov
repz
gs
lods
test
adc
jb
lahf
lods
mov
inc
std
ins
adc
or
int
mov
out
xor
or
call
and
rol
jge
cli
mov
cmp
or
dec
push
and
xor
and
dec
push
mov
mov
and
add
xor
mov
fsub
dec
adc
les
push
mov
mov
pop
movs
(bad)
cmp
es
aaa
and
lods
out
pop
jbe
push
pop
mov
rcl
iret
out
int3
aam
aad
sub
jle
push
and
xor
push
xor
scas
mov
mov
xchg
in
jae
xchg
xchg
or
cwde
fcomip
push
pcmpeqb
jns
ficomp
or
mov
shl
idiv
arpl
int
rcl
dec
jne
push
fadd
shl
sahf
sub
(bad)
cmp
scas
test
(bad)
aad
push
test
fwait
(bad)
in
ror
adc
jmp
xchg
stc
dec
add
jg
dec
aam
daa
gs
xor
scas
cmc
rcr
ret
repnz
scas
imul
scas
dec
ret
sub
gs
int
mov
jle
pop
jne
fs
dec
dec
mov
ret
dec
(bad)
xchg
sub
(bad)
fadd
sbb
jg
cli
syscall
icebp
jns
dec
push
add
mov
sbb
mov
shr
push
xchg
bswap
cmp
push
in
jmp
xor
lock
and
or
xor
and
cmp
sbb
cmp
cmp
xchg
pop
mov
inc
movs
sub
and
lods
or
and
sub
cli
into
cmp
pop
cmc
xchg
pop
cmc
and
retf
adc
jmp
push
stos
cmp
out
sub
or
mov
and
mov
sub
jecxz
pop
mov
inc
icebp
in
cdq
outs
mov
mov
ficomp
jmp
shr
xchg
lds
retf
into
outs
dec
jmp
sub
pop
sbb
xchg
mov
or
mov
push
mov
and
mov
aaa
mov
into
stos
and
shl
(bad)
sbb
idiv
call
repz
adc
jp
jae
and
nop
inc
(bad)
sub
adc
sbb
pcmpgtw
inc
xchg
ja
cld
add
in
sahf
inc
jo
xchg
xor
(bad)
call
cwde
(bad)
adc
jecxz
xor
stos
clc
adc
dec
fcmovnbe
imul
leave
imul
jmp
in
inc
push
xchg
shl
punpckldq
xchg
in
or
push
dec
cmp
mov
push
imul
inc
scas
push
pop
xor
mov
pop
lods
xchg
inc
add
adc
mov
push
xor
or
jmp
mov
jg
sbb
popa
adc
jnp
push
and
push
jl
mov
jmp
out
add
clc
and
ds
cmc
in
lods
cmp
retf
sbb
xchg
(bad)
pop
pop
sub
mov
in
ds
(bad)
not
(bad)
pusha
repnz
mov
addr16
(bad)
pop
pop
jnp
dec
sub
or
jo
movs
test
movs
add
mov
inc
xor
jg
jmp
or
mov
pop
push
add
outs
push
jl
inc
cmp
aam
and
mov
sar
adc
call
sbb
jmp
mov
sub
add
sti
(bad)
cli
add
mov
adc
cmps
push
dec
lea
ins
add
stos
movs
xchg
inc
retf
jmp
cmp
pop
mov
scas
sbb
scas
adc
mov
xchg
test
add
lods
sbb
(bad)
jg
add
or
cmp
jle
or
retf
mov
aas
rol
pusha
jecxz
fs
gs
xlat
xchg
inc
mov
pusha
rcl
ror
mov
gs
dec
add
retf
cmp
dec
mov
mov
or
loop
pop
dec
pushf
mov
pop
popa
adc
xor
and
ret
add
pop
xchg
int3
dec
(bad)
sub
test
je
(bad)
cmp
or
movs
and
pop
bound
inc
and
add
add
fsub
fldcw
imul
sbb
dec
and
ja
push
cmp
fisttp
mov
dec
jb
push
cmp
fcom
or
xchg
pushf
mov
icebp
je
push
call
jbe
imul
dec
test
(bad)
inc
sub
div
rol
int
ja
and
jnp
rcr
or
inc
out
outs
add
stc
ins
push
jge
push
mov
je
popf
fs
and
add
jmp
cmp
movups
mov
add
push
fs
in
data16
fbstp
jge
in
xor
xor
push
movs
(bad)
movs
nop
das
adc
mov
ja
call
pop
cmp
je
mov
ins
push
push
jbe
es
xchg
dec
sbb
push
jne
or
and
push
inc
popa
(bad)
dec
adc
mov
sbb
sub
or
sbb
in
loopne
int3
(bad)
gs
mov
jecxz
and
jno
push
mov
and
lds
not
xor
sbb
fst
addr16
jbe
push
jae
xor
xchg
(bad)
loope
mov
out
jmp
adc
pop
fst
cmps
xor
push
dec
pop
push
enter
push
mov
js
adc
cwde
push
in
adc
add
int
movs
mov
rol
xchg
inc
jle
jns
test
push
mov
daa
imul
cwde
push
adc
adc
pop
je
or
sysenter
cmps
xor
int3
mov
dec
mov
mov
bound
jo
(bad)
pop
scas
lea
loope
sub
test
mov
adc
loope
inc
cmp
imul
mov
(bad)
fnstcw
push
jnp
adc
outs
mov
fsub
cmp
lods
imul
not
jns
stc
les
dec
scas
mov
xchg
shl
xor
push
outs
and
aaa
jecxz
dec
inc
inc
fwait
repnz
test
outs
xchg
cmp
jge
xor
les
pop
fistp
stc
lgs
mov
cli
dec
in
push
jge
int3
fs
mov
loope
int
mov
fs
movs
adc
mov
fucomp
or
jle
xchg
imul
add
stc
xchg
test
sub
std
xchg
inc
ja
mov
cmp
iret
mov
icebp
fild
and
sahf
and
repnz
ss
sbb
cmc
ds
jno
sbb
pop
jge
jnp
imul
ins
sbb
cs
push
or
cmp
adc
arpl
(bad)
imul
mov
mov
adc
shl
iret
mov
out
dec
(bad)
inc
mov
aad
addr16
cmp
sub
mov
ins
push
es
pop
push
iret
movs
xor
push
sbb
xor
and
or
das
xor
sbb
popa
or
lds
arpl
ret
leave
setle
sub
lods
ror
call
test
jne
xchg
mov
test
add
or
pop
jo
imul
ja
sbb
out
imul
js
repz
xor
loope
lock
retf
je
les
xor
jmp
sub
fisubr
aam
cmps
jmp
sub
fsubr
push
sti
xor
(bad)
nop
xlat
cwde
inc
jns
fstp
add
mov
and
push
xchg
fwait
and
pop
cmp
movs
push
pop
das
out
jmp
int3
test
sub
adc
inc
inc
mov
retf
adc
xchg
push
sahf
mov
cdq
das
pop
out
sub
add
imul
test
jo
fs
xchg
adc
jmp
data16
ror
inc
push
xor
adc
adc
in
jp
ja
les
jns
xor
repnz
xchg
lock
lock
mov
jecxz
pop
das
adc
sub
or
into
mov
add
xor
or
mov
add
repnz
xor
scas
arpl
call
mov
in
cmc
push
xchg
bound
mov
adc
cdq
pop
xor
or
jno
sbb
mov
mov
dec
les
loop
jp
add
jp
aam
sbb
jg
loop
jmp
jecxz
cdq
call
cmc
arpl
pushf
fcomip
mov
dec
dec
pop
mov
inc
aaa
sbb
out
push
int3
aad
mov
or
je
push
mov
or
ret
mov
mov
(bad)
imul
sbb
dec
rep
ins
into
lahf
add
gs
es
sbb
jae
sub
stc
addr16
xchg
dec
call
push
sahf
pop
pop
pop
scas
sub
dec
jmp
in
cwde
test
cmps
fld
ja
add
jle
cmp
mov
xchg
int3
dec
xchg
scas
retf
aas
stos
jne
and
cmps
xrelease
pop
or
mov
call
push
(bad)
xor
jp
add
and
std
iret
lahf
lds
in
pop
dec
ins
adc
movs
clc
in
js
jae
add
pop
dec
mov
push
dec
popa
fild
sbb
xor
in
lds
mov
mov
(bad)
retf
mov
mov
mov
add
dec
xor
fsubr
movs
add
jp
mov
and
adc
xchg
jb
gs
test
inc
test
mov
mov
aam
xchg
mov
push
out
mov
(bad)
hlt
rcr
adc
sbb
fdivr
iret
popf
pop
sub
jmp
(bad)
stc
inc
mov
fcomp
mov
mov
add
adc
inc
cmps
fwait
mov
ja
es
cld
push
xchg
pop
push
adc
stos
aas
push
pop
les
mov
add
(bad)
int
push
jmp
xchg
adc
dec
ror
dec
pop
mov
xor
bnd
popf
outs
outs
xor
mov
dec
ror
jb
int
sar
popf
aad
sbb
and
mov
fnstcw
(bad)
mov
and
or
add
pop
jnp
(bad)
es
xor
and
fs
jle
jne
fldenv
xchg
mov
sub
mov
lock
cmp
push
or
inc
shr
add
jno
call
repnz
jbe
jb
dec
add
mov
jmp
push
fs
pop
lock
mov
mov
retf
cmp
jnp
sti
push
dec
push
mov
inc
mov
lods
ds
jb
jg
add
jg
or
outs
loop
retf
fwait
(bad)
xchg
shl
cmp
call
cmp
pop
ss
movs
sbb
push
push
dec
inc
mov
and
jmp
dec
(bad)
cli
adc
inc
idiv
xchg
test
dec
jge
cmovb
scas
ret
jecxz
or
dec
xchg
xor
shr
and
movs
imul
stc
fadd
imul
cmp
xchg
jmp
sbb
sub
xchg
pop
stos
cmp
push
mov
fadd
push
lods
and
mov
jmp
cmp
jp
push
mov
daa
mov
pop
adc
(bad)
cmp
loop
stos
(bad)
nop
fs
cli
popf
pop
push
adc
xchg
xlat
in
aam
mov
mov
pushf
cld
mul
add
cmps
or
fst
jmp
adc
sti
sbb
push
or
inc
pop
xor
into
pop
fldenv
or
push
in
sub
or
mov
mov
mov
call
jge
bound
or
test
sar
or
mov
mov
imul
pop
imul
test
or
jecxz
js
add
arpl
jle
repz
mov
enter
sar
add
add
jnp
mov
ret
mov
cdq
shl
neg
adc
push
mov
sub
jne
mov
mov
call
and
mov
sahf
xchg
int3
inc
push
bound
outs
fdivr
bound
(bad)
ins
sub
sbb
jnp
inc
mov
ins
mov
sub
jnp
jns
pop
add
sbb
div
addr16
jne
test
shl
adc
addr16
push
pushf
out
call
push
aas
mov
mov
icebp
aas
leave
cli
leave
cmps
shr
xchg
sub
pop
pop
adc
xchg
movs
xchg
bnd
dec
cmp
fwait
inc
jbe
sbb
cmps
movs
pushf
push
repz
mov
enter
or
pushf
retf
inc
sbb
xchg
push
xchg
(bad)
mov
mov
and
jp
push
push
mov
jae
test
out
call
mov
lea
xchg
out
or
hlt
cmp
push
xchg
nop
mov
cli
mov
pop
and
jmp
stc
pushf
icebp
imul
arpl
ficom
pop
push
push
popf
sub
scas
loope
push
push
adc
xor
jbe
lock
clc
mov
cmps
jnp
and
ficom
std
ja
ret
push
jecxz
into
(bad)
retf
loop
test
adc
push
jg
fadd
fld
xor
jge
push
out
fst
and
test
jmp
inc
ins
(bad)
jns
add
iret
xchg
dec
or
xor
cmp
ret
fild
mov
mov
mov
cmp
push
mov
sahf
jl
jecxz
out
dec
jbe
nop
mov
cmp
dec
mov
call
pop
pusha
(bad)
fadd
xor
sbb
out
mov
or
adc
mov
shr
xchg
cdq
test
xchg
es
imul
je
add
sbb
inc
js
loop
xor
aaa
sub
push
jle
cmp
sbb
or
adc
push
inc
rol
iret
clc
xchg
(bad)
es
or
jno
jno
aaa
add
fisub
push
jnp
movs
push
jle
ret
inc
push
sub
jae
push
mov
shl
cmp
jnp
xchg
or
xchg
pop
or
or
das
inc
mov
xchg
dec
fcmovne
and
(bad)
fsubr
leave
mov
ret
jnp
test
xlat
test
dec
cld
test
sbb
jmp
ds
bound
sub
xchg
dec
or
add
cmp
pop
mov
ins
loop
xchg
cs
inc
icebp
xor
xchg
adc
xor
clc
dec
ins
jge
or
in
inc
mov
push
bound
rol
pop
out
aaa
and
add
xor
movs
jle
cmps
fbld
lods
(bad)
retf
pop
add
lock
call
bound
mov
adc
fld
push
pop
xchg
mov
les
div
inc
cmps
sbb
rcr
stos
into
add
es
in
and
xlat
imul
inc
inc
mov
sahf
(bad)
rcr
mov
sub
inc
bound
lods
dec
outs
adc
sbb
shr
leave
push
mov
aad
mov
clc
dec
dec
push
push
aas
xor
fdecstp
sub
mov
repnz
pop
jmp
aam
rcr
xchg
sbb
pop
fidivr
xor
sbb
and
and
bound
add
inc
out
push
pop
imul
jl
jno
fbld
ds
fistp
push
xchg
mov
add
push
inc
push
xchg
push
les
fnsave
jmp
mov
pop
pushf
call
cmp
cmps
daa
sbb
(bad)
pop
scas
add
shr
pop
pushf
int
push
inc
dec
std
xor
push
lds
push
xor
dec
adc
inc
icebp
daa
add
mov
pop
inc
ror
les
xor
inc
popf
mov
retf
js
mov
mov
push
lea
scas
(bad)
sub
es
mov
loopne
sub
cmps
gs
adc
mul
test
mov
pop
push
push
repnz
push
(bad)
jg
sbb
or
movs
lods
inc
xlat
lea
aaa
ins
jmp
mov
push
add
sub
(bad)
xchg
scas
push
push
push
aaa
nop
ret
gs
adc
mov
and
and
fs
(bad)
fstp
or
in
pop
or
out
inc
scas
repz
jle
add
lahf
xor
iret
stc
mov
push
ds
xlat
fild
inc
pop
out
jnp
and
dec
(bad)
xchg
mov
lods
push
call
cmp
cmp
add
test
(bad)
repnz
and
push
(bad)
jbe
nop
fwait
arpl
add
sahf
fisub
jg
jge
mov
test
xchg
popf
(bad)
iret
movs
test
mov
loope
sbb
jmp
into
outs
imul
jbe
pop
cs
gs
dec
mov
jmp
outs
lea
push
jns
lods
lods
cmp
lods
or
daa
cmps
int
dec
jg
inc
sub
mov
in
mov
out
aad
out
push
loope
lds
add
shl
sbb
mov
xchg
das
add
and
hlt
cmps
(bad)
shr
xchg
mov
push
outs
jmp
mov
or
pop
lahf
test
loope
pop
jle
xchg
lss
sub
sbb
jg
ja
pop
out
clc
xor
(bad)
loop
pop
mov
push
and
mov
mov
cmp
xor
out
xchg
xor
je
lea
fwait
retf
or
ret
sbb
mov
mov
jbe
aam
mov
nop
dec
arpl
push
xor
mov
push
cmp
jecxz
xchg
cmp
push
or
fild
pop
mov
fs
arpl
in
dec
mov
add
jecxz
ins
mov
lods
loope
and
stos
das
sti
push
sbb
das
test
mov
xchg
dec
popa
jne
mov
mov
scas
mov
xrelease
cdq
dec
std
dec
cmp
scas
rol
xlat
xor
or
xchg
push
or
mov
and
mov
push
push
stos
dec
mov
sub
jge
mov
push
jnp
neg
mov
dec
arpl
push
xor
stc
in
stos
mov
jmp
push
lahf
test
mov
sti
mov
outs
add
rcl
add
sub
lock
or
xor
imul
push
xchg
jmp
jmp
movs
cmps
ja
sub
add
sti
add
call
rcl
sbb
sub
or
push
retf
push
mov
pop
mov
repz
in
sub
dec
out
les
add
or
lahf
je
mov
retf
popa
outs
adc
sub
fcomi
lea
dec
js
mov
mov
cmp
retf
dec
xlat
mov
pop
in
mov
cmps
adc
and
add
stos
adc
hlt
xchg
xchg
aam
xchg
or
dec
mov
cmp
mov
imul
mov
cmp
cmp
mov
cmp
pop
cmp
sbb
xor
not
popf
dec
mov
sub
mov
jg
or
iret
(bad)
cmp
or
hlt
(bad)
jl
adc
aaa
psubsw
mov
popf
test
mov
add
imul
out
retf
push
mov
ins
jne
mov
sub
cwde
mov
mov
(bad)
aam
test
scas
mov
dec
push
mov
nop
in
cs
pop
mov
cli
jecxz
call
adc
jns
fist
lar
xchg
jne
push
sub
outs
ins
pop
inc
xor
or
test
or
fadd
sub
mov
ret
inc
retf
test
adc
xchg
cmps
aaa
push
stos
adc
ins
adc
ja
sbb
fist
add
pop
jmp
dec
jmp
sub
mov
sbb
and
dec
lock
xor
push
ret
or
or
mov
or
sti
jp
mov
sbb
jnp
jmp
mov
fwait
out
dec
lods
or
shl
daa
in
xor
ror
push
sti
adc
adc
(bad)
test
int3
int
or
pop
(bad)
xchg
cmp
shl
sbb
inc
and
sbb
ja
ss
dec
jb
sbb
shr
ret
addr16
or
add
inc
into
cmp
jns
pop
adc
repz
fs
jmp
mov
xchg
inc
mov
icebp
(bad)
mov
xchg
(bad)
xor
and
mov
arpl
jno
dec
in
aaa
mov
add
(bad)
sti
sbb
jge
mov
jnp
mov
push
jnp
rcl
sbb
mov
jle
mov
shl
xchg
js
ret
fld1
and
ror
xlat
push
cwde
cmp
add
jg
push
jecxz
repz
ins
push
sbb
data16
and
pusha
mov
lahf
xchg
bound
jns
xor
test
rcl
jmp
push
in
pusha
int
mov
jp
jmp
inc
and
test
out
test
fdivp
test
fistp
or
dec
add
out
cs
mov
lahf
adc
movs
gs
ret
inc
mov
sbb
sub
jmp
in
or
cld
adc
adc
repz
ror
or
shl
imul
loope
rcl
movs
dec
mov
push
inc
aaa
push
cmps
test
xor
imul
adc
adc
sbb
sub
iret
cmc
ret
pop
xor
push
in
lock
push
out
gs
pushf
mov
mov
push
xor
sbb
dec
or
xchg
call
and
mov
ret
mov
in
test
ss
mov
or
imul
jne
push
rcr
and
cmp
dec
mov
push
sbb
imul
adc
cdq
test
adc
(bad)
xlat
fwait
xor
jbe
jmp
adc
rcr
xchg
ret
jge
mov
fimul
in
adc
lock
pop
and
ja
shr
(bad)
shl
add
cwde
mov
sub
xor
dec
imul
dec
imul
fisub
ja
lahf
aam
pop
jae
call
mov
loop
shr
and
jl
mov
int
push
enter
or
add
pop
ret
call
(bad)
ror
sbb
aas
or
call
je
fsubr
sub
das
adc
inc
scas
xchg
shl
das
sub
push
push
in
data16
mov
data16
imul
add
jmp
in
addr16
pop
rol
imul
jno
add
test
adc
ins
push
test
adc
aas
arpl
out
into
test
mov
cmp
add
cli
loop
fidiv
je
sbb
mov
in
sti
mov
sbb
lds
shl
scas
sahf
fisttp
dec
add
std
pop
jg
sub
mov
inc
xor
xor
mov
push
dec
aas
int
ds
cli
adc
pusha
mov
scas
push
mov
hlt
push
loopne
add
mov
or
cwde
aad
outs
in
push
out
inc
por
adc
add
push
pushf
les
dec
jns
into
jb
iret
pop
xchg
retf
in
or
inc
sar
dec
and
stc
outs
xor
dec
addr16
fsubp
xor
dec
and
sbb
pop
fisttp
es
out
out
test
jmp
jb
mov
lahf
sub
inc
jg
int
mov
adc
jp
mov
adc
sahf
push
jne
pop
push
pop
jbe
inc
jecxz
neg
stc
ins
push
aad
test
popa
mov
popf
lods
inc
sub
enter
je
inc
and
aam
dec
sub
or
jmp
ffreep
xchg
out
mov
jmp
(bad)
dec
push
mov
adc
adc
ret
lea
cmp
cmp
jbe
clc
push
loopne
outs
inc
pop
add
jecxz
mov
pop
jmp
rcl
or
jg
xchg
adc
dec
sti
std
inc
fldenv
mov
mov
adc
sub
fwait
inc
dec
fisub
sub
jmp
sbb
sahf
mov
mov
sbb
push
pop
(bad)
push
cmp
int
call
movs
movs
pop
aad
or
inc
xchg
js
sbb
int3
mov
sbb
sahf
or
or
cmp
jb
adc
add
mov
mov
fild
loope
ss
push
ror
repnz
inc
fimul
ret
xchg
fst
test
nop
adc
pop
sbb
out
or
movs
enter
(bad)
aad
mov
jmp
jg
sub
inc
mov
sub
jp
cs
(bad)
cmps
mov
iret
or
mov
lds
sbb
pusha
ds
inc
popf
repnz
mov
js
jmp
xor
push
test
inc
or
sbb
cmp
mov
mov
sub
mov
sub
mov
adc
leave
cmp
pop
xchg
cmps
retf
xchg
inc
arpl
inc
or
int3
sbb
outs
aas
mov
mov
jns
hlt
xor
xlat
cwde
movs
inc
stc
fdivr
ss
loop
inc
mov
in
pop
fimul
xchg
bnd
rep
sbb
fcom
sti
xchg
push
xor
test
push
popa
sbb
fistp
int3
jecxz
mov
push
or
ins
xchg
ror
in
mov
dec
jmp
fist
cmps
imul
retf
jmp
jo
xchg
sbb
inc
(bad)
test
mov
(bad)
call
stos
push
adc
mov
jmp
loopne
dec
bswap
outs
jnp
fld
mov
push
test
cmc
and
inc
push
dec
movs
test
xor
jle
inc
sbb
add
and
inc
sti
mov
cmp
aaa
add
repnz
fbstp
das
cmp
push
jge
mul
or
jb
and
sbb
jae
mov
fld
das
rcl
dec
out
push
stc
and
mov
sub
adc
call
pop
(bad)
cmp
cmc
dec
movs
pusha
push
int3
mov
pop
popa
mov
sub
mov
shl
aam
inc
jb
pop
xlat
jne
jmp
(bad)
cmc
inc
mov
and
inc
movs
pop
loopne
aad
cmp
or
jnp
repz
in
add
mov
push
test
push
jl
push
add
shr
pop
and
pop
les
inc
sti
and
dec
sbb
addr16
inc
call
leave
lahf
xor
rol
xor
cld
imul
or
(bad)
fdiv
cmp
(bad)
call
clc
shr
jecxz
clc
pop
gs
jo
lods
adc
lods
xchg
fnstsw
dec
retf
jno
std
push
mov
ror
pusha
cld
stos
dec
(bad)
ja
jo
jmp
sahf
test
out
ins
std
jb
aad
push
imul
ins
aaa
lods
(bad)
ins
call
and
stos
pop
mov
cmp
xchg
inc
mov
mov
mov
out
lods
imul
ins
ror
sti
fnstsw
mov
mov
mov
movs
rcl
pop
mov
add
in
dec
inc
les
jae
aam
xchg
dec
in
adc
movs
repnz
and
sub
stos
xor
inc
popa
lods
pushf
outs
sbb
cmp
pop
mov
pop
sbb
stos
iret
mov
mov
dec
mov
xor
add
cmp
xchg
popa
lock
scas
cmp
data16
mov
out
clc
push
mov
jg
fsubr
jns
cld
ss
sbb
movs
mov
imul
retf
inc
cmp
ret
mov
xchg
xor
shl
cmc
or
hlt
dec
adc
fdivr
sbb
jnp
ror
pop
mov
add
or
ret
adc
and
mov
push
mov
cmp
lahf
shl
or
mov
or
add
inc
call
push
lods
mov
mov
push
inc
xchg
shl
xchg
or
call
test
test
test
adc
mov
addr16
push
lahf
dec
adc
jmp
xchg
sub
fs
pop
jecxz
jp
push
mov
xor
and
out
push
cmp
push
cs
pop
dec
fistp
jns
add
pop
dec
lds
out
push
xchg
mov
add
les
pop
sbb
ret
aaa
pop
out
jbe
ficomp
icebp
and
fmul
sbb
add
sbb
and
mov
mov
push
xor
fidivr
mov
dec
fistp
pusha
add
rcl
fs
jne
push
and
jnp
cmps
loope
fnstenv
fs
(bad)
out
mov
loope
pop
dec
jg
cwde
popa
pop
lods
inc
fbstp
dec
sub
lahf
and
(bad)
pop
enter
jmp
push
inc
mov
add
xchg
xchg
inc
ss
push
cmp
pop
repz
in
cmps
and
push
lahf
addr16
iret
(bad)
xchg
xchg
cmps
mov
mov
sub
addr16
mov
push
or
addr16
push
aaa
mov
shl
push
(bad)
xlat
adc
aad
inc
stc
mov
xchg
and
ds
pop
pop
adc
xlat
mov
aas
dec
mov
xor
pop
enter
jmp
bound
xchg
pop
cdq
dec
(bad)
push
pop
add
dec
aad
mov
mov
pop
cs
sub
adc
mov
cmc
mov
inc
mov
es
xchg
pop
jmp
sub
xor
dec
dec
shr
jecxz
(bad)
(bad)
sub
cmp
inc
push
mov
iret
jg
adc
sub
inc
or
mov
dec
(bad)
push
xor
sbb
arpl
or
cmps
aaa
add
pop
jge
je
or
stos
inc
imul
test
mov
shl
test
mov
outs
add
fs
and
mov
inc
or
add
cmp
out
sbb
push
pop
dec
cmps
pop
or
pop
push
int3
sub
dec
in
pop
add
bt
pop
mov
retf
pop
push
cwde
std
pop
call
inc
imul
cs
dec
div
fist
pop
inc
repnz
je
pop
xlat
mov
pop
ficomp
cmps
jg
pop
ja
in
pop
nop
popa
adc
shr
dec
test
dec
call
in
jmp
loop
mov
pop
daa
stos
iret
out
sbb
iret
push
or
xor
mov
movs
mov
xchg
adc
lods
push
mov
lods
ins
gs
lock
(bad)
stos
push
imul
pop
dec
adc
mov
adc
mov
jmp
sbb
inc
ret
dec
or
jbe
pop
jno
lahf
jmp
lods
pop
cld
outs
fiadd
inc
pusha
sub
stos
inc
fsubp
fidivr
xchg
inc
add
xor
sbb
fsub
stos
add
xor
jge
icebp
cmp
out
fs
cld
lods
inc
inc
jb
pop
fwait
xchg
(bad)
cmps
or
cmp
mov
and
xor
sub
leave
test
dec
sub
popa
lahf
dec
iret
xchg
push
nop
ror
jne
repnz
lea
jmp
push
jae
pusha
inc
das
xchg
pop
daa
in
sbb
mov
cmp
jmp
mov
cwde
and
mov
call
xchg
cmps
iret
inc
int3
push
jge
jge
cmp
cmp
(bad)
sbb
mov
push
push
dec
inc
cwde
adc
jns
shr
test
lds
adc
jnp
mov
mov
push
fdiv
aas
and
cmc
outs
xor
in
pop
repz
sar
call
adc
out
fist
push
cmp
es
cmp
leave
sbb
ins
inc
test
mov
and
arpl
adc
pop
jmp
inc
pop
(bad)
mov
push
retf
push
(bad)
and
cs
mov
cmp
cmc
jecxz
push
mov
out
sti
and
repz
fs
dec
div
fwait
(bad)
sub
push
out
xchg
push
movs
outs
mov
sub
pop
and
add
sbb
dec
mov
rcl
cdq
das
outs
inc
jmp
or
inc
rcl
fdiv
iret
repnz
lods
popa
adc
ins
retf
mov
sbb
fs
adc
aas
dec
retf
fwait
push
pop
cmps
jg
inc
push
xchg
in
(bad)
call
mov
imul
jle
sbb
idiv
jns
xor
int
xchg
push
int3
ss
mov
sbb
dec
(bad)
retf
mov
sar
lods
mov
cmc
(bad)
adc
sub
jg
gs
(bad)
fucomp
js
stos
scas
xor
cmp
mov
xlat
imul
sub
mov
add
rol
popf
cli
xor
data16
fimul
push
sbb
sub
xchg
jmp
shl
xchg
test
fcomp
dec
not
in
sub
cmp
xchg
popf
jnp
imul
jmp
xchg
lods
pop
icebp
ds
mov
out
sbb
add
cmp
icebp
test
adc
repz
and
sub
out
int3
dec
add
scas
jb
fld
adc
sar
(bad)
lock
ror
add
xor
cmp
ret
outs
imul
in
or
mov
push
(bad)
rcr
push
fwait
(bad)
popa
lea
mov
sbb
or
dec
cmp
jnp
adc
sbb
aas
dec
xchg
in
cmc
out
lock
sti
imul
add
mov
call
mov
jbe
aam
out
mov
test
cmp
pop
js
adc
xchg
movs
and
aad
push
movs
adc
rcr
xor
ja
jp
call
xor
jo
sahf
cmps
mov
xchg
xchg
ds
scas
jne
and
bound
cmp
push
scas
loop
cmp
inc
sub
mov
arpl
sbb
aaa
test
xor
mov
shl
shl
pop
fcmovbe
arpl
cmp
xchg
mov
xchg
push
movs
sbb
fdiv
movs
jge
jne
ffreep
clc
jns
xor
into
sbb
xchg
movs
mov
les
mov
cmp
test
mov
mov
sbb
leave
enter
pop
or
jge
and
popa
cmp
lods
mov
jge
mov
mov
xchg
out
jo
xor
jecxz
jmp
outs
aas
ins
leave
inc
lock
lock
push
push
loope
xchg
jle
jle
and
sub
xchg
xor
scas
mov
cmc
retf
inc
clc
fwait
xor
cli
mov
dec
shr
push
hlt
call
mov
(bad)
aam
sar
jmp
arpl
pop
push
inc
imul
push
shl
sub
(bad)
(bad)
stc
nop
dec
mov
jecxz
xor
adc
jl
ins
jge
sar
mov
stos
pop
enter
fcom
pop
lock
adc
sub
xlat
pushf
pop
mov
inc
icebp
fwait
(bad)
xchg
fiadd
xchg
mov
mov
jmp
fdivr
push
rol
sahf
and
mov
pop
cmp
or
add
push
inc
xor
rcr
mov
mov
xor
cmp
push
fistp
xchg
ss
pop
ret
movs
int
cmp
shl
add
mov
test
fldcw
test
sbb
fisub
or
jo
scas
cmc
test
and
bound
jl
sbb
cmps
fcomp
adc
out
jl
loopne
enter
inc
add
mov
out
ins
jne
aas
cmp
das
jl
js
cmp
xor
ss
es
call
jo
(bad)
xchg
push
xlat
fisttp
or
(bad)
outs
mov
cmp
jmp
mov
js
mov
add
xor
jg
jmp
pop
xor
mov
cmp
jno
adc
add
out
xchg
loop
cmps
sbb
mov
call
imul
loope
jbe
dec
dec
out
xlat
dec
xchg
cmp
mov
push
rol
cwde
ret
addr16
popf
dec
xchg
leave
jle
jns
push
or
jmp
imul
jl
ret
add
mov
fs
mov
out
add
sbb
xor
pop
adc
repz
idiv
mov
(bad)
and
fdiv
je
xchg
xchg
dec
iret
stos
fld
xchg
retf
jp
pushf
loop
adc
test
js
jge
enter
daa
push
jle
ret
dec
mov
dec
xchg
clc
sar
call
ret
daa
mov
fdivrp
loopne
mov
repz
xor
aam
xchg
stos
or
dec
pop
dec
add
mov
ins
jae
ss
loopne
mov
dec
and
popa
mov
adc
jne
cmp
push
push
mov
inc
push
xor
fmul
cmp
jae
push
shl
lods
push
push
pop
cld
push
dec
lods
xor
ret
jg
or
push
mov
scas
pushw
lahf
stos
rcr
xchg
cmps
ror
es
das
or
in
sbb
sub
fs
lods
(bad)
mov
jns
push
pop
int
dec
ret
pop
nop
jno
push
pop
pusha
lock
scas
daa
ins
(bad)
cli
xor
movs
int3
jl
stos
or
test
pop
sti
fwait
adc
icebp
mov
aad
mov
or
stc
movs
rcr
cmps
call
fsub
push
bound
lea
out
mov
dec
je
xchg
pop
cmp
shl
div
cli
xchg
mov
sbb
aaa
les
inc
out
xchg
add
mov
ins
test
dec
or
inc
or
rcr
rol
mov
mov
mov
mov
add
cld
add
add
add
sbb
sar
fild
lods
aas
pushf
cs
jecxz
jns
add
test
fisttp
lods
out
retf
imul
pop
(bad)
sub
sbb
dec
test
sbb
dec
in
pop
mov
(bad)
jmp
leave
sub
mov
jecxz
add
stc
mov
push
dec
sti
sub
jmp
xchg
jbe
sbb
inc
sub
xor
fstp
pop
push
test
retf
out
aas
mov
mov
aaa
out
jb
sbb
jmp
sub
aam
jns
dec
or
mov
mov
jl
sub
iret
jge
ret
xchg
sub
loope
js
in
mov
mov
retf
and
mov
cmps
inc
and
dec
add
and
dec
or
imul
adc
cmp
in
mov
fstp
(bad)
pop
sbb
or
cmp
push
dec
sbb
sbb
repz
repnz
inc
jne
aaa
xchg
dec
sub
sub
sbb
rol
es
sbb
sub
lock
push
cmc
pop
push
cmp
sbb
cmc
aad
fstp
das
sub
mov
ss
adc
loopne
daa
fs
pop
and
popa
outs
mov
stos
mov
in
lods
xchg
cwde
fisttp
mov
lods
in
or
cmp
mov
lahf
jmp
dec
iret
or
pop
stc
pop
push
push
dec
jmp
mov
out
inc
cdq
lahf
rol
stos
jae
sti
sar
inc
les
push
cmc
cli
push
fsub
sbb
xor
xor
sar
mov
or
in
ret
cwde
mov
jmp
call
mov
cs
jmp
cld
push
loop
jg
mov
mov
scas
repnz
fucomip
cld
mov
sub
push
jle
jle
mov
xor
pop
push
stos
pop
inc
fcmovnb
inc
cmp
ds
pop
jle
pushf
sbb
xlat
cmp
ror
mov
mov
ins
outs
cmc
in
add
repz
inc
loope
dec
push
cwde
call
jns
ret
es
movs
sahf
rcl
fnsave
aam
leave
out
mov
imul
cli
loopne
loope
mov
lahf
pop
xchg
pop
xor
dec
jmp
gs
mov
scas
ja
fisubr
pop
add
popa
(bad)
fwait
and
data16
inc
sbb
sub
out
cld
call
out
mov
lods
or
pop
cmc
mov
or
sub
pop
movaps
jae
fstp
push
and
sbb
movs
stc
jns
xchg
stc
out
jae
pop
jg
push
xchg
dec
jbe
cdq
int
inc
jns
mov
pusha
retf
mov
mov
fist
lahf
das
(bad)
retf
retf
aam
retf
jmp
xchg
cmp
add
je
adc
shl
pop
push
or
out
jnp
jnp
adc
inc
push
mov
sbb
mov
xchg
push
add
popa
push
pop
ins
push
mov
xchg
div
adc
cli
add
mov
jo
shl
outs
dec
lds
sti
mov
add
ds
cmps
popa
pop
jmp
lahf
inc
(bad)
jmp
ret
adc
loop
hlt
mov
arpl
cs
sub
ja
iret
cdq
mov
pusha
int
fld
xor
out
push
call
dec
out
push
retf
push
jge
(bad)
dec
pushf
ret
cmp
shl
fdivr
rcl
hlt
call
pop
mov
sti
lods
add
mov
cs
mov
push
ins
out
jbe
sub
daa
das
xor
dec
iret
mov
mov
lods
xor
jp
mov
or
cs
lea
pop
(bad)
ret
pushf
test
lds
pop
ja
mov
bound
call
or
mov
outs
rol
repz
icebp
enter
lods
jg
mov
scas
push
mov
jmp
fcomip
sti
sub
mov
or
sbb
stc
jns
mov
jb
sub
mov
into
sbb
push
and
mov
push
test
int3
out
jle
jns
movs
outs
sbb
push
dec
call
(bad)
cmp
je
retf
scas
out
call
mul
add
xchg
retf
ret
push
xor
dec
into
xchg
mov
dec
xchg
mov
jne
enter
out
leave
shr
and
dec
clc
out
or
xlat
jle
les
cmc
das
pop
ins
scas
pop
mov
ret
es
cmc
cli
mov
mov
jmp
sbb
adc
dec
lods
mov
mov
pop
in
sahf
and
int3
jno
ss
ror
imul
rcl
sub
xor
push
mov
add
in
push
in
cmp
fdivp
(bad)
test
jmp
fistp
mov
call
pop
push
cmps
pop
or
test
mov
lahf
neg
cwde
push
movs
ja
dec
jns
outs
aas
lock
iret
pop
stos
ins
cwde
jmp
out
adc
mov
(bad)
in
ror
popa
pop
div
mul
in
movs
popa
imul
jmp
mov
lods
cld
sbb
jae
xor
dec
pusha
lods
scas
cmp
fwait
inc
outs
jle
mov
pop
or
clc
aas
mov
push
and
jg
or
fwait
repnz
push
int
push
sti
cmp
mov
test
or
iret
ficomp
dec
(bad)
mov
xchg
push
xchg
retf
mov
icebp
sub
fbstp
and
inc
jg
mov
or
push
div
and
push
dec
xchg
es
rol
ja
clc
xor
pop
sbb
push
push
mov
inc
jl
std
gs
(bad)
fwait
pop
xchg
aad
dec
push
pop
test
out
sbb
(bad)
dec
xchg
imul
pop
inc
pop
cwde
xchg
mov
sti
cwde
jmp
retf
pop
retf
or
retf
sbb
ss
daa
sbb
xchg
fsub
jns
fistp
dec
pop
scas
xor
scas
hlt
gs
mov
bound
jno
cmp
shr
(bad)
dec
ret
leave
push
sbb
ror
ret
test
inc
xor
mov
xchg
add
mov
shr
retf
frstor
les
push
push
sub
add
sbb
dec
in
xchg
lods
xchg
or
jp
in
sbb
outs
test
cld
mov
aad
outs
or
mov
mov
das
stc
pop
cmc
cdq
pop
xchg
jl
dec
loopne
fisttp
cdq
cwde
sub
or
sbb
xchg
(bad)
push
add
sahf
shl
dec
stos
inc
cmp
sub
call
dec
push
cdq
xor
ins
stc
dec
inc
dec
ds
sbb
cmc
add
cmp
mov
cmp
in
test
and
dec
inc
aam
(bad)
bound
push
mov
leave
mov
rol
push
adc
inc
or
xchg
pushf
jg
and
data16
cmps
fidiv
inc
aas
pusha
pop
ja
or
sbb
xchg
sbb
shl
xor
rcr
js
aaa
inc
lods
lahf
inc
lahf
movs
mov
not
and
arpl
mov
cld
inc
fstp
jns
rcl
shl
xchg
jmp
lahf
dec
pop
inc
xor
retf
jl
xor
pslld
mov
lock
jmp
xor
add
repnz
fwait
mov
inc
mov
cmp
sub
fbstp
adc
and
imul
int3
rcl
xchg
and
ins
jl
stc
rcr
cmp
adc
sbb
and
popa
test
pop
retf
imul
xchg
pop
pusha
inc
popa
add
jns
gs
push
mov
ficom
nop
scas
rcl
inc
jno
(bad)
shl
in
sbb
aad
mov
cs
mov
mov
mov
adc
addr16
iret
mov
ins
jmp
inc
repnz
pop
cmp
test
aam
call
inc
add
xchg
xchg
xchg
jmp
sub
jp
stos
and
lods
xchg
push
pop
mov
xor
hlt
arpl
xor
cmp
xor
jo
mov
div
icebp
xor
mov
loop
lods
add
xor
(bad)
xchg
icebp
fcmovne
js
aas
pop
jae
jo
push
iret
div
setns
xor
or
push
or
retf
and
mov
and
fdivr
inc
jp
or
sbb
(bad)
mov
or
mov
and
mov
movs
fucomi
out
les
cdq
ins
in
mov
mov
scas
sub
push
aas
in
xchg
pushf
dec
enter
in
test
mov
adc
das
sub
push
repz
cmp
push
cs
or
adc
sub
imul
retf
lds
stos
pop
jns
std
shl
push
retf
cli
fdivr
fcom
out
int
cmc
mov
icebp
std
jb
test
std
jecxz
fnstcw
jge
cwde
mov
shr
push
add
(bad)
xor
push
jae
pop
sbb
push
ror
mov
rcl
pop
cs
inc
xchg
pusha
add
scas
hlt
sbb
lds
push
fcomp
pop
in
sbb
fstp
and
xchg
jle
push
sahf
cdq
pop
mov
aad
outs
popf
jnp
ss
stc
push
cmp
add
mov
dec
pop
push
sbb
mov
in
popf
loope
stc
out
cmp
inc
into
push
jp
lods
enter
push
jecxz
retf
lods
or
adc
leave
sbb
cmp
out
xchg
sub
mov
inc
mov
dec
iret
inc
sahf
sbb
or
cmp
push
or
inc
mov
push
stc
xor
iret
retf
dec
push
pushf
mov
mov
jl
or
jl
aas
xchg
mov
cmp
add
call
scas
lea
dec
sbb
sbb
test
scas
jno
pop
pop
cld
pop
(bad)
hlt
(bad)
or
call
(bad)
outs
pop
add
iret
push
arpl
cmp
mov
leave
out
call
inc
arpl
clc
push
sti
mov
repz
jmp
sub
shl
sbb
jne
mov
xchg
test
fsub
mov
xchg
fxch
(bad)
dec
dec
adc
pop
sbb
stos
test
xor
rcr
stos
dec
cmp
push
cmp
je
mov
(bad)
mov
jno
and
imul
adc
or
sti
call
repnz
(bad)
shl
outs
ins
iret
dec
out
lds
icebp
loope
mov
out
call
(bad)
sub
in
push
lods
fidiv
jno
rcl
mov
pop
jbe
and
jg
call
dec
out
xlat
into
(bad)
gs
clc
jge
shr
(bad)
lock
dec
dec
mov
xor
or
sti
pop
and
fs
fdiv
cmp
ds
jbe
push
xor
push
dec
jb
sub
push
imul
xchg
test
(bad)
cli
push
ins
mov
rcr
inc
fst
and
repz
inc
or
jle
or
std
in
std
cmp
mov
cmp
sub
js
xor
sbb
push
rol
mov
enter
es
xchg
cmp
imul
fisttp
mul
adc
jns
jmp
lock
cmp
(bad)
xor
out
in
jmp
ss
cwde
jb
dec
les
mov
cmp
not
mov
out
cmp
mov
or
outs
out
add
sbb
sbb
je
cmp
jns
out
daa
test
adc
in
rcl
(bad)
ret
cld
xor
fwait
test
js
fnstenv
sbb
mov
pop
or
jae
pop
mov
std
cmps
or
adc
cdq
mov
xor
sbb
js
mov
inc
leave
jg
clc
nop
push
pop
mov
fdivr
mov
mov
sbb
and
dec
xchg
mov
cmps
je
sbb
les
ret
mov
sbb
bnd
fsubr
std
shl
test
add
sub
and
cmp
mov
cdq
cmp
dec
xchg
and
in
pop
add
inc
or
stos
popa
mov
xchg
loopne
mov
movs
adc
dec
or
sti
xor
loop
cmp
js
scas
stc
fdivr
retf
loop
retf
cli
xchg
mov
mov
mov
lds
ficomp
popf
push
add
cmp
neg
push
ror
(bad)
cmp
mov
(bad)
setae
mov
pop
mov
or
loop
sbb
adc
rcl
fwait
ja
out
mov
test
cmp
dec
push
or
aad
cs
jne
mov
cli
and
cmps
adc
je
aad
push
ror
push
fidiv
hlt
scas
pop
xchg
fld
dec
popa
push
add
sbb
sub
push
xchg
add
inc
shr
stos
rcl
push
and
mov
fs
out
mov
or
data16
add
out
adc
add
lea
sbb
and
cmp
adc
xor
jns
dec
mov
dec
shl
pop
xchg
ins
push
or
test
pop
imul
or
add
adc
int
sub
das
call
loopne
mov
bound
ret
mov
xchg
mov
dec
test
out
sbb
sti
pop
les
mov
lea
push
wrmsr
cld
xor
adc
jbe
or
xchg
enter
adc
repnz
xchg
mov
mov
add
mov
push
adc
ror
mov
dec
push
pop
icebp
es
in
jmp
fistp
mov
mov
cmp
cvtps2pd
test
not
cmp
add
cmp
mov
mov
mov
mov
push
cli
push
retf
aas
cmc
retf
(bad)
out
ja
push
jge
(bad)
push
cmp
dec
enter
pop
popf
dec
imul
mov
xlat
mov
jecxz
jno
mov
push
test
lahf
push
fnstsw
jmp
or
movs
sbb
xchg
popa
cmp
push
lahf
bnd
addr16
dec
jle
(bad)
xor
sub
push
fcomp
jecxz
or
fcomp
fcomp
mov
add
cmp
add
mov
js
cmp
leave
jae
jnp
std
arpl
fwait
dec
jle
repnz
lock
sbb
xchg
outs
and
fdivr
xor
mov
xchg
adc
sbb
out
outs
push
add
lea
push
inc
sub
movs
rcr
jp
ja
inc
mov
and
adc
mov
test
ins
or
ret
lea
lahf
fwait
or
sub
cs
push
imul
and
movs
push
popf
jnp
adc
mov
sbb
or
xchg
pop
rcr
push
adc
sbb
push
sub
sub
inc
repnz
popa
loop
cmps
jle
jecxz
pop
in
(bad)
adc
shl
xor
jb
cmp
mov
jo
push
call
dec
fst
push
fadd
pop
sub
and
push
adc
cmps
das
rcr
dec
test
cmps
int
sbb
adc
cdq
jge
add
les
adc
xchg
dec
mov
popf
int3
xor
aam
push
mov
es
or
fwait
stc
outs
or
into
push
aam
dec
pop
(bad)
shl
in
cmps
push
(bad)
sahf
or
jno
rcl
mov
test
cmps
in
pop
aad
repz
jl
std
stos
or
or
pop
gs
xchg
xlat
imul
shl
fmul
in
jmp
jno
test
inc
mov
in
inc
ficom
ja
ins
push
ds
mov
push
scas
stos
jmp
sub
dec
add
adc
adc
(bad)
sbb
dec
loope
inc
mov
into
rcr
rol
ja
push
out
and
jp
jae
xchg
sub
inc
or
push
retf
xlat
xor
mov
push
in
xor
in
xor
out
movs
jnp
add
daa
push
xchg
test
cmp
and
mov
int
aaa
retf
push
and
rol
mov
push
cmp
cmp
(bad)
es
out
xchg
xchg
adc
fs
inc
in
xchg
in
(bad)
fbld
lds
xor
not
add
adc
mov
push
and
jg
adc
lahf
out
mov
mov
mov
(bad)
adc
cli
data16
in
push
inc
sub
and
popf
ins
imul
in
mov
dec
int
xchg
sub
in
jnp
jl
std
cli
mov
das
push
mov
mov
imul
adc
call
sbb
lods
add
mov
fldenv
cld
push
in
je
cdq
or
rol
sub
pop
mov
adc
xchg
inc
into
jp
sbb
rcr
cli
pop
and
icebp
inc
sbb
cs
out
(bad)
cmp
push
lds
adc
movs
and
xchg
dec
nop
xchg
adc
lahf
sbb
push
push
inc
or
iret
mov
mov
pop
out
add
push
lock
add
sub
ret
test
inc
push
imul
popa
lds
inc
sbb
xchg
std
test
fisubr
push
sub
rcr
or
daa
daa
repz
push
ror
(bad)
fld
add
ret
add
xor
cmp
dec
and
test
sbb
sahf
cld
xchg
pop
pop
test
std
gs
push
push
imul
loop
inc
push
sbb
cmp
pop
call
(bad)
fld
push
ins
jnp
pop
sbb
fdiv
push
sahf
sbb
push
cmp
int3
imul
xchg
aaa
mov
rol
jmp
scas
popa
and
dec
or
cwde
outs
ret
inc
add
(bad)
shl
jnp
jmp
add
loopne
(bad)
cli
sbb
(bad)
and
mov
and
mov
pusha
sbb
rcr
push
push
xchg
adc
sub
push
(bad)
mov
in
les
lods
push
clc
or
dec
int
int3
push
mov
xchg
mov
dec
add
xchg
sti
jne
bound
cmp
test
mov
inc
dec
sbb
and
add
(bad)
icebp
jle
inc
sti
cwde
sbb
jne
call
mov
test
mov
cld
call
in
adc
adc
pop
dec
cmps
out
fild
movs
jb
mov
push
dec
fs
pop
push
inc
mov
mov
repz
dec
mov
(bad)
jns
or
popf
sbb
mov
cwde
jp
test
mov
xor
mov
aad
std
test
adc
dec
aam
add
mov
jp
xor
add
jb
mov
jnp
aam
rol
jne
hlt
push
rol
sbb
sub
loope
sbb
fwait
push
hlt
dec
in
stos
lds
adc
stos
outs
inc
lods
cmp
mov
test
test
jnp
jnp
aad
xchg
dec
ret
dec
mov
icebp
dec
sbb
jl
repnz
repnz
retf
test
push
dec
mov
daa
mov
dec
mov
pop
gs
mov
dec
pop
in
aam
cmps
imul
xor
and
arpl
xchg
xor
ds
xor
xor
adc
je
arpl
imul
loopne
lahf
sbb
jmp
test
rol
pop
xor
adc
dec
xlat
xchg
jne
or
push
xor
popf
fs
movs
jmp
(bad)
mov
scas
call
push
(bad)
icebp
scas
or
rol
adc
or
inc
xor
mov
dec
pop
ins
in
into
dec
call
test
movs
shl
clc
arpl
popa
or
test
outs
mov
test
pop
mov
jle
mov
jmp
cmp
mov
xchg
out
mov
jb
mov
jge
pop
sbb
xor
sub
xor
loope
repnz
(bad)
sub
shl
loop
mov
loope
pop
cmp
adc
in
arpl
inc
aad
sub
gs
mov
test
jle
add
(bad)
mov
and
frstor
xchg
inc
mov
sub
mov
sbb
pop
dec
push
pop
jl
jno
call
daa
leave
sar
mov
mov
test
sbb
sbb
mov
ins
or
xor
add
inc
dec
imul
adc
dec
inc
test
add
(bad)
js
addr16
outs
mov
xchg
ret
and
adc
inc
icebp
cmp
rcr
jns
clc
outs
fisub
sbb
and
repz
idiv
mov
mov
jmp
rol
mov
push
xchg
push
les
stos
xchg
sub
push
xchg
mov
or
mov
out
inc
les
dec
(bad)
fild
or
(bad)
mov
add
in
adc
sub
xor
add
int
dec
pop
or
and
adc
sub
jge
popf
mov
or
int3
mov
or
pop
rol
push
stos
inc
push
adc
adc
addr16
aas
xchg
ja
shr
(bad)
into
mov
test
cmps
gs
lods
adc
loopne
out
xor
shl
xchg
enter
ja
lods
push
leave
or
inc
jnp
cdq
xor
aas
mov
pop
test
push
sti
cli
add
adc
xchg
lods
neg
enter
into
les
add
pop
cmp
fistp
push
call
xor
mov
lds
movs
lods
pop
pop
mov
add
pop
or
pop
dec
mov
ins
int3
ret
out
into
xchg
mov
mov
fldcw
loop
xchg
shr
sub
add
push
jbe
repnz
push
dec
sbb
jo
out
in
sub
jmp
mov
popf
dec
enter
leave
push
xor
xlat
repnz
pop
mov
fidivr
dec
mov
jnp
mov
pop
inc
mov
push
push
mov
dec
fst
ja
jno
add
fld
or
mov
mov
out
inc
mov
push
inc
and
pop
mov
loop
pusha
jbe
mov
fild
pop
jl
nop
lods
out
inc
mov
je
(bad)
in
mov
jno
sahf
cmp
stc
cs
mov
aaa
repz
xor
and
pop
jl
cld
inc
rol
int
ret
cmp
jno
xor
fbstp
loopne
cld
(bad)
scas
sub
and
and
mov
sub
mov
movs
mul
jmp
test
jb
xchg
cld
adc
mov
xchg
sub
aam
dec
xchg
jge
jb
push
jbe
sub
pop
mov
inc
fst
xor
ins
daa
or
loop
loopne
push
fidiv
ret
push
cmp
bswap
mov
outs
adc
xor
dec
fcmovne
mov
cdq
jbe
je
das
aas
std
aas
or
sar
or
or
arpl
dec
adc
and
pop
pushf
and
mov
mov
cwde
cmps
push
movs
fidiv
add
loopne
loop
arpl
mov
ror
ins
sbb
push
cmp
movs
sub
aam
out
pop
scas
ret
outs
add
fdivr
mov
dec
cs
fnstcw
shr
repz
(bad)
push
pusha
mov
and
outs
movs
xor
pop
(bad)
xor
cmps
popf
xlat
and
test
std
add
sub
pop
aas
sub
sbb
mov
xchg
jne
or
push
xor
jo
aaa
cs
ret
idiv
fcomp
jne
mov
push
cmp
repz
in
loop
mov
pop
cdq
cmp
test
sub
mov
mov
push
mov
jp
(bad)
imul
jne
stos
push
ss
adc
sbb
(bad)
rol
jl
gs
fwait
add
scas
adc
aas
imul
cmps
jo
or
fld
add
(bad)
(bad)
or
jb
retf
xor
cmp
aad
test
stos
cmp
and
pop
aaa
cmp
clc
std
add
xchg
jp
xor
jb
por
outs
sbb
mov
stos
(bad)
pusha
int3
aad
nop
pop
xchg
mul
sub
jle
adc
xor
movs
lock
cmp
sbb
daa
popf
mov
dec
sub
pop
cmps
nop
pusha
call
mov
repz
sbb
add
sub
and
movd
dec
(bad)
mov
dec
xchg
fwait
cmp
mov
scas
jecxz
(bad)
mov
test
repnz
lea
mov
push
js
jle
jmp
aaa
cmc
pop
cmp
add
sbb
lods
loopne
ins
pop
sbb
sbb
mov
pushf
inc
pop
iret
sub
mov
adc
stos
xchg
movs
stos
push
call
in
add
cmp
cmp
jmp
jmp
and
not
and
or
fsubr
adc
ret
(bad)
(bad)
call
xchg
push
aas
jecxz
call
sbb
sbb
and
mov
stos
jns
add
loope
lods
sub
aaa
(bad)
push
imul
pop
jl
mov
cmp
push
out
mov
call
test
retf
addr16
jns
lods
(bad)
jmp
pop
xchg
std
es
inc
shl
call
jge
and
dec
sbb
adc
sbb
push
sub
repnz
out
data16
mov
(bad)
push
dec
popf
adc
pop
test
sbb
xchg
or
sub
data16
imul
jge
test
cmp
ret
sar
test
cmp
mov
inc
jae
add
xchg
mov
ja
test
mov
cmp
add
xor
mov
imul
retf
shl
(bad)
inc
cmp
ret
retf
ss
jae
call
sub
std
add
stc
out
and
in
lahf
stos
retf
sti
jnp
mov
sar
push
sbb
cmp
add
or
or
fdiv
sbb
and
loop
sbb
xor
or
adc
or
jb
hlt
(bad)
enter
sbb
mov
movs
rcr
adc
mov
lea
jne
add
aas
shl
inc
idiv
sbb
mov
cs
sbb
call
sub
stos
mov
push
push
(bad)
rcl
shl
(bad)
xor
sbb
jmp
sub
or
sti
sahf
out
and
push
add
and
sub
test
sbb
add
xor
push
xor
cmp
cdq
mov
sbb
ins
pop
test
or
jecxz
fbstp
shr
inc
mov
jbe
imul
push
and
sbb
cdq
jmp
arpl
or
xor
ja
jmp
or
fld
dec
aaa
mov
int
and
push
dec
mov
leave
jnp
movs
arpl
mov
cmp
mov
js
arpl
mov
and
and
int3
adc
rol
cli
dec
sahf
pop
cmps
retf
mov
dec
mov
jp
in
mov
jne
jb
shl
cli
int3
push
shr
imul
jecxz
adc
push
fisubr
cmp
cli
sbb
mov
ja
mov
mov
inc
mov
inc
mov
addr16
inc
(bad)
int
push
jecxz
nop
xor
sbb
push
std
jae
clc
push
xor
loop
xchg
enter
jbe
mov
daa
jne
mov
rcr
ficomp
std
xor
jnp
xlat
sahf
dec
and
xchg
(bad)
mov
xchg
stos
pop
jg
pop
pop
fiadd
dec
adc
or
xchg
adc
in
add
adc
cmp
add
fcmovb
aaa
xchg
outs
cwde
mov
(bad)
mov
dec
adc
mov
adc
inc
jbe
and
cli
dec
sbb
(bad)
mov
sbb
push
sbb
xchg
cmp
out
xchg
push
(bad)
lods
(bad)
aaa
sbb
leave
add
push
hlt
gs
out
movs
and
pusha
xor
ja
or
or
cmp
and
mov
out
out
mov
cmp
sbb
fdivp
push
inc
sahf
gs
adc
or
mov
mov
das
into
sub
movs
(bad)
cmps
and
out
pusha
stos
sbb
xchg
pop
pop
mov
dec
loope
cmp
adc
fs
sti
mov
nop
lds
retf
adc
xchg
test
xor
xchg
push
cmps
in
test
add
enter
sub
push
jle
call
pop
jae
stos
jp
stos
mov
ficom
mov
dec
repz
sbb
dec
dec
retf
cmp
lds
push
mov
cmp
xchg
cmp
jle
jge
movs
js
fidiv
pop
mov
or
les
lea
in
sbb
inc
repz
mov
and
jle
inc
inc
cmc
gs
popa
and
xchg
xor
xchg
bt
sbb
sub
movs
mov
inc
inc
push
stos
push
push
clc
or
aaa
pushf
retf
jle
or
inc
sub
push
jbe
push
(bad)
fcomp
inc
dec
sbb
mov
xchg
xor
(bad)
clc
mov
gs
push
rcl
mov
jp
(bad)
xchg
cdq
test
mov
push
ins
mov
cs
lods
in
mov
and
adc
aas
jmp
mov
jno
pushf
ds
jbe
cld
imul
cmc
push
jb
stos
aam
or
mov
push
push
and
xchg
add
or
jge
jnp
jo
push
nop
mov
pop
das
and
mov
daa
xor
fistp
adc
cmp
aaa
push
dec
out
ins
xchg
or
call
jmp
movs
cwde
mov
scas
and
dec
jne
aad
adc
repnz
je
mov
jg
cmp
push
xchg
or
pop
lods
jg
inc
movs
adc
push
mov
dec
or
sbb
jge
es
adc
mov
xchg
pop
inc
rcr
mov
inc
sti
cmps
dec
or
pop
std
scas
add
ficom
scas
pop
xchg
sbb
sbb
aaa
and
add
inc
stc
aaa
pop
loop
jne
aam
add
add
daa
stos
xchg
dec
rol
stos
cmp
mov
cmp
mov
stos
inc
in
data16
add
sbb
push
(bad)
js
je
aas
out
lods
(bad)
daa
sbb
int
mov
add
rol
xor
mov
pop
hlt
dec
inc
data16
or
pusha
pop
dec
mov
movs
dec
stos
sub
mov
mov
test
in
xchg
movs
xchg
nop
xor
jge
test
fwait
mov
shl
dec
fsubr
sti
adc
inc
clc
or
cli
daa
inc
mov
or
dec
xlat
add
mov
(bad)
popf
outs
adc
push
imul
cwde
std
sub
sub
aas
mov
lds
stos
mov
out
mov
push
nop
stos
jnp
fwait
mov
out
sub
jmp
mov
fs
call
dec
jp
mov
fsub
or
pop
outs
pop
xor
pop
das
push
lods
dec
lods
ins
jae
mov
jo
push
rol
mov
arpl
ss
xchg
sub
lods
sbb
je
not
sub
pop
test
aaa
mov
cdq
leave
sbb
les
and
mov
xchg
jns
dec
push
and
xlat
leave
xchg
mov
ds
lds
mov
xchg
fs
fnstcw
pusha
repnz
adc
test
xchg
cmp
inc
aam
(bad)
mov
repnz
aaa
sti
sbb
lock
mov
outs
push
repz
in
leave
sbb
mov
or
dec
add
mov
push
repnz
imul
iret
push
push
dec
adc
aaa
leave
cwde
icebp
mov
or
sbb
loop
popa
enter
aas
(bad)
sbb
outs
push
aam
(bad)
cmp
xchg
and
lods
sahf
int3
cmp
mov
inc
test
push
nop
loop
daa
in
dec
push
lahf
inc
jne
loop
std
jle
xor
je
mov
int3
and
bound
leave
jbe
xlat
stos
shl
mov
or
or
push
sbb
movs
std
and
ins
dec
cmc
cli
outs
mov
fucomip
sub
pop
sub
adc
ret
mov
es
mov
mov
and
and
es
mov
cmps
pop
xor
iret
push
jmp
or
and
or
ds
push
adc
arpl
pop
or
sub
shr
imul
pop
adc
adc
or
push
add
xor
sub
adc
in
pop
dec
pop
stos
fcmovnb
xchg
aam
fmul
sub
les
into
bound
(bad)
jp
mov
outs
and
pop
jbe
inc
outs
mov
dec
mov
xchg
ret
jl
pusha
push
sbb
out
mov
jo
cmp
inc
(bad)
(bad)
movs
pop
aad
ror
nop
dec
adc
(bad)
and
xchg
dec
popf
sbb
add
mov
xchg
push
lods
aam
cmps
outs
sbb
dec
jg
int3
cmps
outs
sub
pop
and
mov
xchg
in
push
or
out
fidiv
cmp
sbb
jb
mov
sub
mul
inc
sahf
mov
xor
jmp
test
jecxz
sbb
enter
adc
adc
adc
ffreep
repz
sbb
call
and
jg
imul
and
lea
ret
xchg
ins
out
inc
(bad)
aam
test
adc
add
sbb
mov
dec
(bad)
mov
adc
aas
out
push
fcmovnb
stos
sahf
adc
ins
hlt
es
je
inc
sar
ret
inc
jp
xlat
int
vorps
mov
pop
into
jecxz
es
xchg
leave
sub
fst
cmp
dec
sbb
lods
xchg
daa
add
xchg
jno
mov
mov
retf
arpl
push
and
mov
les
sahf
push
dec
add
sbb
and
add
jmp
imul
pop
pop
(bad)
pop
xchg
iret
mov
cmp
inc
stos
mov
loope
mov
xor
rcr
add
fst
xchg
push
push
add
push
ds
jae
or
cmp
fdivr
cmp
enter
clc
jmp
movs
inc
or
sar
ret
push
inc
mov
shr
xor
sar
aam
adc
rol
loope
jmp
xor
push
pop
push
loop
cmp
or
jmp
les
daa
push
mov
mov
pop
push
imul
add
inc
push
push
pop
cmps
rcl
dec
mov
or
aaa
mov
push
es
imul
mov
outs
adc
push
out
ja
in
fdivr
outs
out
imul
pop
inc
or
in
and
rcl
jmp
jmp
xor
lahf
std
ins
mov
xor
je
int3
aaa
iret
sub
cli
inc
pop
dec
mov
and
cmp
xchg
pop
out
retf
push
cmp
js
retf
in
xchg
repnz
lods
cmps
movs
fwait
sub
mov
add
in
mov
cmp
scas
pop
fild
push
sbb
mov
push
out
gs
jno
xchg
or
jp
call
scas
ret
mov
or
add
jmp
inc
repz
fisttp
lahf
in
mov
sti
dec
int
cmps
mov
imul
and
pop
push
jne
fsub
adc
xor
shl
rcr
or
mov
mov
cmp
std
add
mov
mov
mov
iret
mov
jge
stc
pushf
or
mov
inc
sub
sahf
dec
xor
dec
mov
pop
loope
pop
inc
cdq
sub
mov
pop
mov
mov
xor
imul
int
or
sub
fs
lock
das
(bad)
loop
loop
lock
and
inc
int
pop
cwde
jp
ins
pushf
push
adc
sahf
outs
sub
pop
call
or
bound
mov
pop
xor
pop
scas
push
mov
inc
pop
fistp
ror
pop
push
aas
retf
mov
fxch
in
int3
or
ins
mov
punpckhbw
pusha
and
jecxz
xchg
(bad)
mov
arpl
call
add
push
(bad)
push
pop
mov
stc
js
dec
std
add
rcr
xchg
call
fcomp
sti
lods
imul
xor
push
ins
jae
mov
fwait
sub
adc
and
lock
cmp
hlt
stos
outs
scas
test
jo
popf
pop
push
out
jne
or
push
sub
repnz
js
lea
or
aad
cmp
add
cmp
xor
xchg
push
sbb
add
int
loope
mov
push
(bad)
int3
dec
sbb
sbb
xchg
mov
out
leave
push
or
mov
sub
inc
mov
push
in
iret
movs
or
fild
cdq
sub
jae
push
cwde
ja
es
adc
lock
in
dec
lods
add
sahf
jecxz
mov
es
pop
mov
out
ins
ja
push
jmp
pushf
sbb
xchg
ins
mov
test
stos
xchg
cmp
mov
adc
ins
movs
repnz
fbstp
jns
sub
popa
les
les
push
repz
jl
imul
xchg
(bad)
pop
push
cmp
xor
push
ja
(bad)
clc
fdivr
mov
push
xchg
iret
push
shl
xor
mov
outs
test
out
inc
pop
pop
aaa
mov
mov
in
push
iret
dec
push
ret
push
out
sar
push
jo
add
adc
adc
mov
loop
aam
cmp
mov
mov
hlt
jecxz
push
cwde
mov
mov
or
ins
mov
jle
das
je
aad
adc
mov
imul
xchg
mov
jp
retf
dec
call
push
outs
inc
mov
ds
sar
push
popa
icebp
mov
sti
adc
xchg
mov
xor
cmp
xor
aaa
mov
nop
or
fst
(bad)
stc
pop
fsubr
add
xchg
int
mov
fnop
stos
enter
mov
(bad)
movs
outs
fisub
xchg
retf
in
js
data16
imul
data16
inc
sbb
mov
sub
addr16
mov
and
sub
dec
jg
pop
sti
mov
aad
jmp
adc
ja
cld
sti
div
jecxz
fwait
jle
mov
dec
lods
pop
rcr
hlt
jmp
stc
xchg
retf
mov
ja
arpl
into
test
ror
and
loop
pushf
and
mov
ins
dec
add
or
xor
js
not
dec
arpl
outs
add
push
jne
dec
retf
in
xchg
imul
sbb
mov
(bad)
jmp
mov
jl
mov
push
repz
stc
mov
imul
xor
jl
jecxz
(bad)
cmp
das
cwde
mov
outs
fild
enter
add
adc
mov
xchg
xor
pop
arpl
lods
jne
mov
jge
cmp
daa
push
pop
data16
mov
xor
push
test
not
mov
mov
mov
xor
mov
hlt
js
cmps
xlat
cmp
(bad)
jns
(bad)
xchg
js
dec
sahf
pop
(bad)
mov
das
mov
cmc
or
daa
loop
push
lock
sar
fistp
push
push
cwde
jmp
(bad)
jp
push
imul
rcl
in
test
into
xchg
es
xchg
std
jmp
pop
mov
and
mov
in
xor
mov
popf
les
sub
xchg
les
imul
push
sub
mov
leave
or
jnp
fiadd
fidiv
mov
les
not
mov
nop
mov
xlat
bound
jne
xchg
mov
xor
loop
in
lods
fild
outs
loopne
outs
call
xchg
ins
(bad)
cmp
xor
sbb
or
add
out
(bad)
arpl
repz
mov
test
nop
push
stos
dec
push
and
add
mov
jae
in
shl
arpl
lds
push
xchg
(bad)
push
dec
dec
clc
mov
lea
aaa
push
rcl
mov
repnz
(bad)
sub
jno
mov
cld
sahf
(bad)
fdiv
inc
mov
and
or
add
test
fistp
cwde
jo
sub
adc
test
or
ja
mov
out
les
add
jg
and
aam
dec
out
fldl2e
jae
int3
repz
sub
shl
mov
push
mov
and
adc
(bad)
dec
clc
nop
je
or
dec
sbb
xor
mov
pop
jnp
mov
lock
into
jecxz
stos
icebp
jge
sbb
xor
mov
or
je
xchg
inc
sub
adc
in
es
not
movs
sub
and
pusha
mov
out
mov
scas
hlt
cmp
jmp
jnp
or
pop
jg
inc
ja
mov
add
xor
mov
mov
mov
mov
xor
jge
mov
fcmovbe
sti
imul
rcl
push
mov
into
lods
jno
gs
pop
dec
es
xchg
jge
mov
inc
std
pop
inc
mov
xchg
inc
cmp
pusha
out
in
ret
mov
sti
mov
push
outs
cmc
test
mov
inc
push
xor
sub
les
mov
jne
xchg
jmp
inc
mov
pop
es
or
xchg
jb
xchg
sbb
movs
fimul
daa
mov
in
push
jmp
sub
jo
es
xor
xchg
fld
ror
mov
jg
add
cli
lahf
je
sub
add
add
mov
mov
dec
add
sbb
fistp
mov
(bad)
iret
and
add
and
push
mov
mov
mov
bound
fldcw
retf
nop
xlat
into
push
dec
jge
jl
push
mov
test
pop
loope
adc
test
daa
shr
xchg
cwde
jg
pop
bound
or
(bad)
jmp
xchg
addr16
mov
and
sub
test
pop
int
aaa
mov
sbb
das
cmp
and
push
jp
(bad)
cs
scas
pushf
jecxz
cmc
jb
ror
inc
es
mov
jecxz
pop
(bad)
rol
stos
iret
jmp
mov
(bad)
repz
mov
jo
aad
sbb
adc
ss
mov
mov
ins
aam
cmp
push
add
fimul
cmp
adc
and
shl
sub
mov
adc
and
not
popa
into
shl
jns
out
das
adc
jl
cs
adc
push
pop
and
add
mov
inc
sbb
out
jo
dec
cmp
mov
pop
mov
nop
mov
mov
cmp
les
stos
ds
sub
je
test
and
inc
out
(bad)
pop
xor
fmul
sub
mov
xchg
pop
jb
inc
mov
pusha
xor
add
push
out
pusha
repz
jnp
xor
sbb
and
(bad)
call
stos
ins
das
test
dec
xor
add
push
into
clc
dec
cmp
push
lds
fwait
fs
xchg
mov
mov
pop
inc
pusha
fdiv
fsub
push
inc
and
mov
cmc
clc
shl
push
ss
enter
loop
sahf
jl
pop
mov
les
jge
add
sub
and
int3
or
mov
ror
loop
jb
lods
xor
mov
xor
aam
std
mov
cmp
int
(bad)
jo
push
xor
icebp
sbb
mov
dec
in
dec
(bad)
sti
push
cmp
xchg
adc
int3
icebp
pop
leave
push
cwde
jnp
fistp
mov
pushf
mov
and
test
out
mov
jmp
mov
rcl
dec
mov
out
push
xor
scas
adc
imul
fnstcw
jmp
mov
pop
cmp
ins
loopne
dec
rcl
fld
data16
push
imul
jns
sub
inc
loop
std
inc
pop
clc
hlt
es
xchg
cmps
je
std
stos
test
int
mov
push
test
in
(bad)
aas
mov
rcr
fs
add
(bad)
iret
fdivr
sbb
rol
mov
(bad)
mov
sbb
add
pop
inc
xlat
(bad)
lods
pop
xor
add
cmp
and
xor
xchg
add
mov
lea
rcr
mov
outs
pop
sub
fisttp
xor
mov
popf
pop
test
mov
or
sbb
xchg
mov
dec
pop
sbb
rol
lods
fst
dec
xchg
and
pop
stc
data16
mov
xchg
sahf
ret
mov
mov
inc
icebp
pop
call
jle
xchg
pop
loop
cmp
cmp
jb
push
adc
mov
or
pop
jno
jl
ds
inc
pushf
jge
out
inc
pop
mov
sbb
mov
call
in
mov
mov
cdq
mov
fst
mov
in
in
xchg
loopne
sbb
or
cmp
jmp
(bad)
mov
push
xchg
out
adc
ins
fwait
mov
(bad)
in
inc
pop
fstp
pop
js
jl
sbb
leave
scas
test
inc
mov
jg
arpl
gs
push
fsub
adc
jmp
scas
(bad)
mov
mov
icebp
loope
xor
(bad)
(bad)
leave
ret
popf
rol
fwait
and
sbb
mov
out
or
jae
xchg
popa
xchg
(bad)
test
fidivr
inc
in
hlt
mov
lea
mov
push
es
fmul
mov
jo
cs
(bad)
jecxz
jle
jecxz
dec
dec
mov
and
pop
ror
mov
imul
neg
jbe
xchg
mov
in
jo
sub
xor
ror
cmp
call
and
jmp
push
adc
movs
jo
(bad)
in
jmp
test
(bad)
jmp
lock
pushf
test
mov
in
dec
pop
fiadd
loope
out
cwde
dec
test
aam
dec
call
jns
xchg
or
sar
push
mov
or
sbb
and
jge
daa
push
push
cmp
cmp
mov
arpl
sub
ins
iret
push
out
pop
mov
retf
jmp
mov
pop
xor
add
imul
mov
mov
loopne
cli
stos
loopne
and
fisubr
jmp
jecxz
sub
xchg
loopne
lds
out
sbb
mov
or
adc
(bad)
jmp
cmp
sbb
xchg
push
sub
std
in
cdq
pop
push
sub
cmps
cmps
cli
arpl
sbb
mov
xchg
pop
fs
mov
inc
mov
mov
mov
cwde
sub
loopne
popa
cmp
fidivr
call
inc
mov
les
add
dec
fisub
mov
adc
out
and
inc
jnp
lods
pop
adc
mov
sbb
aam
jmp
push
add
push
xchg
mov
pop
sub
test
cmps
out
xchg
out
cmc
sub
mov
sub
je
cmps
xor
shr
mov
mov
and
test
enter
in
jge
mov
add
lea
push
mov
fistp
xchg
cmp
mov
retf
ins
mov
inc
cmp
pop
mov
pop
fstp
add
loope
sub
sahf
push
mov
(bad)
jmp
xchg
js
cmps
sbb
test
pop
cwde
xchg
dec
and
arpl
mov
leave
pop
jo
cmp
xchg
std
or
test
and
mov
cmp
xor
(bad)
ds
out
outs
in
jg
xchg
sti
inc
jo
xchg
push
and
add
in
mov
mov
jmp
push
cmps
and
dec
hlt
xor
pop
iret
lea
sub
sub
cmp
dec
xchg
scas
pop
push
fild
sub
fisttp
retf
jo
(bad)
mov
inc
jbe
fadd
push
jno
jmp
popf
adc
into
loope
inc
sbb
or
dec
in
inc
test
pusha
push
xor
and
and
in
mov
movs
dec
icebp
mov
jecxz
mov
adc
les
jmp
gs
arpl
xor
push
movs
or
mov
push
cmps
push
push
test
mov
cwde
out
shr
(bad)
jl
int
mov
(bad)
outs
dec
fldcw
or
retf
add
test
push
xor
push
and
jb
jecxz
test
or
test
push
fadd
loop
fdivr
addr16
jmp
inc
sbb
mov
add
rol
cmp
mov
inc
fbld
cmp
pop
xchg
(bad)
push
imul
jl
outs
inc
xchg
pop
add
xor
mov
call
call
inc
mov
xor
fwait
not
bound
jp
int3
(bad)
imul
push
pop
jg
sub
inc
aam
xor
enter
test
mov
in
les
in
ror
mov
scas
push
mov
arpl
push
(bad)
mov
sbb
loop
jno
sbb
mov
xchg
inc
pushf
lods
xchg
sbb
paddusb
repnz
cmp
xor
imul
leave
sbb
pop
cmp
test
and
pop
mov
ds
pop
outs
int
inc
dec
sbb
jp
and
popa
inc
push
xor
outs
aaa
test
jmp
movs
mov
xor
xor
xchg
jo
or
mov
pop
arpl
cmp
scas
jge
mov
call
mov
inc
inc
mov
ins
mov
mov
sub
xchg
out
mov
mov
dec
mov
sbb
leave
ins
mov
xlat
outs
ins
cmp
mov
arpl
sbb
cdq
movs
add
mov
jnp
scas
mov
popa
dec
lods
sub
cwde
(bad)
jle
retf
pop
xchg
pop
mov
stos
xor
jecxz
xchg
pop
or
ror
or
jmp
dec
adc
fwait
xor
jg
inc
imul
ret
out
mov
aaa
aam
push
xchg
cmp
or
bound
jbe
xchg
rol
cli
leave
xchg
jg
pop
push
into
iret
xchg
or
mov
retfw
xchg
mov
xor
lods
adc
ja
xchg
and
test
(bad)
jmp
fsubr
xor
cmps
aad
xchg
add
sbb
(bad)
loop
adc
jecxz
adc
ins
jp
xchg
push
fnstenv
int3
sub
push
mov
mov
in
and
scas
add
fcom
jmp
clc
stos
dec
je
sahf
fwait
popf
rcr
pop
adc
cmps
test
adc
std
pop
pop
mov
or
inc
or
pop
sub
mov
arpl
shr
(bad)
cmps
xor
fld
and
cmp
ret
mov
jle
pop
mov
jae
jno
or
adc
push
scas
push
xchg
add
push
je
scas
push
sbb
stos
leave
aad
rol
cmp
mov
ins
mov
mov
mov
data16
addr16
sbb
mov
ins
scas
in
pop
popf
cdq
push
inc
call
popf
stos
xor
mov
fxch
sbb
fs
stos
mov
sbb
mov
push
and
in
dec
mov
and
loope
(bad)
(bad)
cmps
shl
xor
or
pop
mov
aad
mov
or
ins
inc
leave
pop
aam
inc
jbe
ret
icebp
(bad)
pop
mov
int3
xchg
aam
mov
test
sbb
push
and
xor
sub
jmp
adc
jp
iret
leave
je
and
call
or
ins
and
xor
jns
es
data16
or
push
xchg
mov
out
or
daa
mov
and
mov
sbb
int3
cmp
loop
ret
mov
mov
jmp
jne
(bad)
adc
daa
nop
in
xchg
ins
xor
sar
aad
pop
mov
mov
inc
adc
push
movs
js
mov
jbe
jg
or
or
xchg
scas
icebp
push
cmp
scas
jecxz
sub
movs
imul
enter
mov
ror
pop
pop
iret
ja
cs
or
(bad)
mov
fwait
shr
call
adc
es
inc
mov
xchg
xchg
fs
cmp
movs
shr
fstp
cmp
cmp
in
jp
leave
scas
pop
or
shl
shl
push
sub
add
ins
mov
leave
push
sbb
in
fist
xchg
push
arpl
pop
xor
push
cmp
push
lahf
daa
leave
(bad)
sti
pop
movs
xor
or
outs
into
jmp
jns
push
mov
neg
cmp
not
imul
cmp
and
lods
jmp
add
mov
scas
jp
dec
jg
in
push
cwde
std
cmps
aaa
sbb
test
mov
movs
xor
lods
jbe
push
sar
aad
dec
fimul
neg
shl
add
ds
push
aas
push
cdq
dec
or
into
jp
mov
mov
fstp
das
inc
mov
rcr
adc
cmp
inc
movs
pop
js
cwde
and
pop
nop
shr
in
in
(bad)
out
dec
jmp
push
leave
cmp
push
xor
mov
test
aam
jmp
and
xor
not
lea
xchg
jbe
add
std
pop
xchg
push
daa
cmp
xchg
jp
daa
in
inc
jecxz
add
or
mov
inc
inc
pop
lods
dec
fwait
popa
fucomi
jb
icebp
push
cmc
movs
sub
test
sbb
add
stos
jecxz
ins
in
stos
pop
pop
loope
mov
mov
mov
(bad)
daa
scas
mov
push
clc
push
push
push
sub
pop
out
fwait
mov
push
adc
or
lock
enter
xor
hlt
into
mov
ret
cmp
lds
in
push
es
push
jle
jmp
ss
call
scas
and
scas
jl
retf
daa
retf
sub
fcomp
leave
cmp
(bad)
icebp
not
cli
je
ret
sub
cmc
cwde
push
ret
out
and
cdq
or
push
jle
std
in
inc
push
int
hlt
and
or
and
xchg
or
sub
imul
call
push
mov
jne
add
dec
pusha
fadd
hlt
jmp
ja
add
ds
cmp
mov
outs
xlat
push
mov
jmp
es
xchg
mov
push
or
iret
(bad)
cmp
aam
sbb
(bad)
(bad)
cmp
add
sub
sub
add
(bad)
mov
aas
out
mov
(bad)
aas
pop
mov
retf
jle
fild
rcl
pushf
(bad)
scas
cmp
es
arpl
iret
xchg
movs
inc
leave
cmp
test
mov
xor
sbb
push
retf
mov
repz
lods
inc
push
jge
arpl
jle
shr
or
in
fld
inc
mov
xor
repnz
jo
fs
ds
sahf
add
sub
repz
xchg
adc
fdivr
cmc
adc
(bad)
jae
and
test
jge
out
popf
inc
mov
push
cli
pop
mov
and
xlat
jno
retf
push
out
jle
aaa
ror
xor
or
mov
xor
add
sar
fiadd
mul
les
mov
or
sub
add
aam
out
xor
neg
inc
(bad)
sar
xsha256
cmps
push
xchg
push
sub
imul
rcl
aam
fimul
leave
push
repnz
inc
int3
fcmovne
dec
sbb
popf
mov
retf
cmp
add
stc
cmp
stos
test
jg
retf
int
mov
ret
jmp
push
or
pop
ss
sub
popa
in
mov
or
dec
out
adc
inc
popf
cmp
cmp
inc
jle
rcl
aas
sub
xor
lea
test
frstor
jb
mov
popf
add
rcr
int3
sub
mov
push
fst
mov
pop
add
or
loopne
mov
mov
sbb
into
adc
out
outs
call
jno
dec
pop
mov
ss
lock
cmp
nop
test
out
or
(bad)
lds
jl
int3
mov
bound
mul
out
pop
sbb
hlt
jno
sub
fwait
sub
pop
(bad)
fld
shl
movs
push
ja
lahf
push
test
mov
popf
push
mov
inc
sub
and
mov
ret
ret
(bad)
cwde
inc
dec
aaa
jl
(bad)
loope
adc
inc
(bad)
pop
call
mov
outs
arpl
xor
test
ja
les
mov
pop
cdq
mov
push
js
mov
pop
mov
sub
rol
test
xchg
mov
xchg
dec
pop
clc
jle
mov
dec
js
std
mov
add
or
dec
je
loopne
mov
loopne
push
outs
fsub
jb
push
jp
(bad)
aam
pop
call
movs
fisttp
push
xchg
and
or
sub
xchg
scas
jbe
stos
xchg
stos
lds
cmp
mov
mov
enter
xchg
lock
int
ja
pop
sbb
inc
aad
movs
into
adc
es
pop
cli
sbb
(bad)
xchg
cwde
stc
in
retf
arpl
dec
lahf
push
test
jae
mov
xchg
push
jns
and
popf
pop
(bad)
data16
jp
jl
push
cmp
jg
mov
push
jbe
movs
adc
out
jle
mov
or
pop
dec
push
imul
bound
pushf
dec
mov
cmp
push
(bad)
test
add
or
mov
add
out
lods
jbe
jmp
das
int
xchg
(bad)
imul
cwde
popa
(bad)
cmp
adc
jns
in
mov
sbb
jg
js
jg
and
xor
imul
pop
mov
push
push
ins
jge
out
ds
xor
inc
lea
inc
adc
and
loopne
adc
jp
mov
aas
(bad)
and
rcr
add
mov
scas
hlt
sahf
or
imul
xor
dec
ins
add
jg
retf
(bad)
sbb
pop
ja
mov
pop
(bad)
and
fist
cmp
jmp
dec
jmp
add
(bad)
mov
mov
fmul
jnp
ds
pop
mov
test
cwde
mov
adc
test
(bad)
dec
xor
inc
sub
scas
dec
sti
das
mov
push
retf
or
push
inc
xor
hlt
lahf
mov
sysexit
ret
rcr
xchg
push
push
sbb
pop
clc
test
lods
xchg
jecxz
outs
cld
test
out
(bad)
jmp
xor
lock
rcr
test
jns
in
arpl
sbb
mov
mov
and
retf
inc
jge
iret
lods
push
pop
jb
add
sahf
sbb
repnz
pop
mov
imul
pop
push
lods
imul
lods
imul
dec
sub
scas
or
fcmovnbe
pop
mov
sub
stc
push
ficomp
jmp
add
add
imul
pop
(bad)
fldcw
jne
inc
xchg
and
cld
or
lods
mov
(bad)
cmc
ja
fsubrp
or
push
not
adc
pop
fwait
push
daa
or
or
adc
cdq
in
repnz
xlat
inc
repz
sar
icebp
enter
mov
jo
sub
xchg
scas
pop
xor
das
fs
jge
inc
ds
out
sbb
aam
sti
sbb
dec
cwde
inc
mov
push
mov
jns
cmps
sbb
out
mov
ins
(bad)
fwait
cmp
xor
jns
adc
ins
mov
mov
pop
add
mov
mov
push
ss
push
fnstenv
xchg
es
sbb
mov
int
rcl
xor
xor
push
fs
sti
adc
mov
cmp
ret
mov
inc
push
movs
dec
aas
push
pop
nop
iret
xchg
push
lds
ret
lock
mov
ficom
xchg
sub
arpl
sbb
pushf
xor
cmp
stc
xchg
mov
xchg
ds
xchg
dec
fadd
outs
test
in
arpl
setb
inc
mov
mov
clc
jge
ins
xchg
sub
mov
ret
mov
ror
mov
lea
push
cmp
fdiv
xor
pop
fsubr
rcr
sbb
cmp
cs
mov
stos
xchg
in
ins
mov
(bad)
ins
test
lea
mov
fadd
loope
cld
adc
std
sub
mov
ja
loop
scas
jne
adc
or
dec
lods
in
xor
xlat
adc
in
js
hlt
out
pop
test
repnz
jmp
xor
loopne
dec
rcl
jge
mov
mov
outs
repz
xlat
sub
mov
adc
inc
mov
test
shl
pop
(bad)
pop
leave
js
cli
sbb
cmp
dec
sub
adc
retf
xor
xor
dec
fwait
inc
push
imul
stc
pop
push
push
loopne
ins
arpl
xchg
rol
add
mov
test
cmp
pop
int3
xchg
aaa
imul
clc
sub
xlat
pop
in
and
out
ss
aam
rol
cs
mov
jae
aaa
cs
lds
stc
shl
and
push
stc
add
(bad)
sti
inc
xchg
mov
(bad)
cmp
scas
icebp
mov
test
xor
ret
jns
push
movs
arpl
stc
push
pop
and
stos
daa
mul
mov
sbb
aaa
mov
cmps
mov
in
sub
or
adc
sbb
loope
jns
xchg
sbb
xchg
push
(bad)
mov
and
cwde
sub
cld
cmp
adc
inc
and
dec
xor
scas
xchg
(bad)
loope
stos
lock
lock
inc
retf
ret
popf
call
stos
jmp
imul
mov
out
lods
(bad)
push
jge
add
inc
clc
jne
sbb
or
or
sub
push
mov
jnp
jle
jl
cmc
sbb
lods
push
int3
ds
add
mov
mov
mov
or
fld
fld
pop
sub
fwait
pop
adc
call
jae
sbb
jae
sub
outs
adc
lods
(bad)
ds
cs
inc
daa
sub
mov
dec
push
mov
gs
or
sbb
and
(bad)
jmp
repnz
dec
push
add
js
imul
(bad)
retf
mov
scas
aas
dec
cli
pop
mov
xor
add
movs
push
mov
mov
pop
test
sbb
xlat
xor
mov
out
dec
mov
aas
sti
fcom
loop
add
fisub
cld
fs
cmps
(bad)
stos
push
stc
movs
and
sbb
push
cmp
dec
cmp
mul
adc
fxch
popa
ja
mov
xchg
iret
fdiv
loope
push
cmp
in
push
in
test
stos
call
push
or
cmp
and
clc
mov
push
jl
dec
(bad)
add
ss
cmc
add
hlt
dec
retf
mov
sub
dec
sbb
test
xor
or
mov
movs
sub
jo
dec
addr16
dec
push
dec
adc
(bad)
mov
push
dec
test
xor
dec
xchg
cmps
mov
push
retf
adc
inc
sti
je
xchg
mov
fnstenv
call
jnp
cmp
and
push
mov
inc
test
pushf
clc
mov
sub
mov
dec
lea
(bad)
in
into
cmps
js
cmp
mov
mov
mov
pop
cmp
and
bound
mov
das
mov
dec
sbb
add
outs
jge
outs
dec
jbe
mov
or
sub
jg
jae
sbb
push
fadd
iret
mov
pop
retf
pop
call
mov
adc
retf
mov
mov
dec
mov
clc
mov
jo
mov
test
mov
pop
sub
out
pushf
dec
pop
call
ret
pop
cmps
out
push
jle
aas
xchg
jno
fstp
pop
or
lock
fmulp
popf
pusha
xor
cmps
(bad)
rcl
jge
outs
lahf
dec
jle
xlat
jmp
inc
xlat
mov
clc
cmp
scas
push
mov
loop
xchg
call
mov
adc
imul
lea
test
sar
inc
popa
xchg
cmp
xor
pop
dec
sub
out
std
push
in
pop
loop
ficom
in
adc
jo
cmp
mov
sbb
lea
xchg
mov
push
loopne
jg
mov
jg
std
xor
add
cmp
sub
imul
lds
ror
xchg
in
rcr
dec
xlat
out
push
dec
dec
lds
lea
xchg
div
not
lods
add
or
je
icebp
test
push
or
push
div
cmp
mov
cmp
int
lea
cmp
test
aad
add
lods
mov
call
rol
pop
shl
cmp
cmps
js
adc
ins
ficomp
mov
pop
or
clc
jl
movs
cld
mov
pop
adc
mov
pop
xor
outs
adc
xchg
adc
and
in
ret
lods
cmp
leave
aaa
inc
pop
pop
jg
inc
mov
out
scas
and
push
fld
inc
or
lahf
shr
sbb
lods
out
sub
sub
dec
mov
lds
jbe
pop
scas
xlat
mov
popa
lea
imul
cmc
imul
cmp
mov
cdq
rol
fs
test
dec
cmps
pop
pop
xchg
and
arpl
ret
or
hlt
push
jmp
pop
test
pop
cdq
shl
xchg
(bad)
js
loopne
jae
cmc
adc
lds
ja
xchg
jmp
mov
sbb
imul
mov
into
inc
dec
stos
int3
add
popf
push
cmp
dec
scas
mov
ss
(bad)
xchg
mov
ja
push
push
adc
test
stos
xor
xor
inc
mov
inc
cmp
mov
fisttp
push
shl
dec
jae
and
int3
sbb
cmc
sub
jle
ret
mov
fnsave
push
mov
adc
outs
jns
xchg
jge
cdq
jl
sub
or
dec
dec
jl
loopne
fbstp
in
loop
dec
push
mov
stc
and
xor
mov
and
jo
dec
sbb
mov
pop
fcomp
cs
stc
sub
or
dec
or
in
jbe
repnz
js
imul
dec
jecxz
fs
push
cs
push
es
(bad)
jo
sub
sub
inc
sti
call
adc
mov
add
mov
icebp
data16
dec
dec
mov
inc
mov
xlat
pop
add
into
sbb
repnz
sub
jecxz
xor
iret
push
pop
add
call
mov
jle
and
fisttp
neg
add
pop
test
idiv
repnz
or
in
out
push
mov
mov
das
out
and
fcmove
push
sbb
fidiv
call
cmp
xor
mov
sub
daa
and
in
sbb
pop
jmp
sbb
push
lods
repnz
or
enter
inc
jae
into
loopne
nop
mov
in
loop
and
aaa
or
not
leave
out
call
les
sbb
jmp
fwait
mov
mov
out
mov
in
aad
mov
mov
cmovl
jle
pop
in
push
inc
jo
adc
arpl
ins
test
and
inc
rcl
xchg
dec
jnp
(bad)
bound
dec
adc
inc
adc
retf
mov
mov
inc
push
cmc
pushf
pop
out
cld
popf
add
mov
nop
sub
cmc
mov
pop
int
push
cdq
pushf
mov
(bad)
jle
ins
mov
lahf
gs
inc
push
clc
inc
xlat
sub
adc
push
jge
add
push
or
pop
out
fwait
fs
mov
mov
push
mov
div
ret
sahf
loopne
mov
pop
cdq
dec
ror
mov
jns
pop
push
xor
retf
loope
mov
dec
mov
scas
xor
pusha
push
jl
xor
imul
jbe
xchg
jnp
push
into
dec
(bad)
jne
mov
xchg
jnp
adc
jmp
jb
jb
jbe
inc
add
jbe
(bad)
push
push
inc
mov
lahf
dec
mov
push
loopne
cwde
xchg
mov
clc
xchg
iret
inc
xchg
in
(bad)
xor
mov
adc
movs
mov
outs
jecxz
sbb
in
js
hlt
add
cmc
pusha
int
cdq
ror
lds
sub
lea
cmc
push
popa
mov
mov
inc
mov
icebp
mov
test
or
mov
(bad)
jns
fbstp
popf
mov
daa
jne
and
lea
retf
dec
rcl
div
into
les
imul
popaw
neg
or
lahf
xor
daa
adc
push
push
push
push
push
xor
int3
xchg
and
adc
lock
test
sub
inc
push
inc
mov
jnp
push
add
xchg
movs
hlt
jmp
ror
ficomp
sbb
mov
push
icebp
das
lock
lahf
push
leave
adc
pop
stc
stos
cmc
scas
mov
movs
loopne
xor
test
jle
ins
int
fisub
dec
jp
ins
cdq
or
idiv
mov
adc
pop
arpl
mov
add
jne
push
jns
repz
ja
ficom
mov
out
lods
cmp
inc
call
xchg
cmp
jno
fs
cld
jg
aam
test
imul
loop
mov
mov
fidiv
xchg
jmp
jle
push
aas
(bad)
(bad)
mov
dec
mov
out
(bad)
stc
lods
dec
push
nop
loop
inc
daa
jp
std
movs
push
scas
or
sbb
adc
adc
dec
xor
xor
mov
(bad)
clc
(bad)
and
enter
enter
fld
dec
cmc
test
adc
fwait
add
ret
adc
cs
cmp
inc
iret
mov
and
xchg
sbb
xor
stc
pop
mov
push
aam
subps
mov
sub
xor
mov
inc
movs
or
fwait
adc
popa
clc
jne
fcomp
adc
xchg
mov
cld
xchg
sahf
lds
cmps
lds
adc
or
jmp
hlt
xlat
out
iret
aas
pusha
mov
pop
les
pop
int
xchg
add
lods
shl
sub
(bad)
mov
sub
nop
xor
and
pop
loop
mov
shl
push
fstp
push
pop
mov
fwait
loope
inc
jne
sub
test
fwait
test
adc
adc
xchg
inc
scas
cmps
mov
out
dec
sub
lds
mov
push
cwde
inc
mov
pop
cmps
and
or
in
pop
cmp
std
mov
mov
js
sahf
add
inc
sub
sub
(bad)
iret
gs
jbe
repz
mov
xor
repz
in
test
adc
lods
jnp
stos
(bad)
and
push
pop
scas
jns
xlat
lods
push
fs
lea
xchg
adc
mov
add
cmp
mov
test
pop
bound
jo
sub
setnp
sub
push
dec
ror
and
mov
adc
add
sub
test
ret
fisttp
out
pusha
fwait
rcl
mov
sbb
mov
lock
and
cmp
dec
retf
lods
add
cmp
dec
fs
xchg
(bad)
in
lods
pop
pop
jo
in
std
int
lods
mov
xchg
xor
rol
xor
cmp
sbb
icebp
(bad)
lahf
movs
out
mov
xor
outs
jle
sahf
ror
push
(bad)
push
int
idiv
pop
cdq
shr
ret
aam
mov
mov
scas
add
or
das
aam
test
out
or
xchg
or
fbld
xor
out
xor
cmc
data16
aad
jns
aam
pop
in
xor
mov
jno
mov
push
add
sbb
mov
sbb
lea
fimul
loop
icebp
pop
and
xor
cmc
and
loope
imul
(bad)
jmp
(bad)
adc
popf
rol
xchg
push
leave
icebp
push
mov
jns
popf
pop
mov
dec
sbb
push
inc
sbb
xchg
fadd
and
sahf
rcr
mov
jnp
mov
push
mov
xchg
mov
mul
mov
cmp
xchg
push
out
cmp
clc
sbb
mov
neg
xor
jp
and
add
call
das
les
and
sbb
cs
and
mov
mov
call
gs
rcr
aas
aaa
(bad)
mov
stos
or
or
cdq
das
je
add
cmp
call
int
xor
test
add
sub
mov
xor
jnp
cmp
mov
scas
sub
sub
fcom
pop
in
mov
out
cld
push
ficom
xchg
ins
pop
xor
xchg
out
stos
test
popa
or
and
retf
cs
and
pop
outs
fnstenv
pop
xchg
movs
jbe
std
fldcw
cmps
in
aas
sahf
popa
pop
mov
pushf
jmp
or
popf
repz
cmc
cmps
push
popa
scas
repnz
ror
pop
pop
lea
dec
xchg
xlat
sbb
or
shr
js
popa
inc
and
adc
fmul
ins
(bad)
out
loope
jns
sbb
or
int3
sbb
pop
push
push
mov
jl
out
dec
pop
bound
rcl
fimul
fisttp
aad
(bad)
inc
or
mov
mov
(bad)
fild
mov
or
daa
inc
adc
inc
lahf
push
test
push
(bad)
out
add
pop
pop
push
adc
inc
xchg
pop
or
dec
imul
xchg
sbb
clc
cwde
and
jae
retf
fdivr
and
aaa
call
rcl
cmc
fsubr
inc
dec
push
inc
cmc
mov
sahf
adc
vprotw
iret
idiv
lds
scas
and
cwde
dec
imul
ins
sbb
iret
lock
frstor
sbb
mov
lock
ins
push
(bad)
sbb
inc
or
faddp
dec
pop
cmp
cld
adc
adc
adc
dec
jl
cmp
add
xchg
fstp
(bad)
and
push
mov
cmps
mov
shl
xchg
stc
pop
push
es
xlat
shr
cmc
stc
dec
jbe
fwait
popa
bound
(bad)
out
pop
inc
imul
and
xor
xchg
adc
rcl
int3
pushf
xchg
mov
push
jb
mov
xchg
dec
mov
pop
nop
add
push
xor
push
jns
fidivr
test
out
fld
inc
inc
daa
sahf
inc
cmp
adc
or
cmp
push
in
outs
sbb
push
pop
xchg
fbstp
in
xor
stc
mov
jle
sahf
push
sbb
in
mov
cli
push
sar
pop
jae
fidiv
cld
fisub
xor
stos
cmp
aas
bound
xor
cmp
push
mov
pop
sub
pop
inc
into
or
dec
xchg
xchg
pop
movs
mov
(bad)
mov
ficom
add
scas
lahf
div
je
cmps
nop
sahf
mov
aam
cmc
sub
imul
push
scas
adc
into
pop
xchg
pop
cmps
gs
lock
test
push
jne
xor
sbb
in
ins
dec
mov
mov
int3
jns
outs
add
pop
mov
or
stos
rol
jb
add
add
and
popf
sbb
aaa
ret
daa
pop
outs
je
sahf
nop
pop
inc
mov
clc
(bad)
rcr
ss
ret
pop
ror
push
retf
push
repz
xchg
call
jle
xor
lds
cmp
iret
cmp
jo
push
mov
clc
xchg
sub
ss
dec
xor
or
pop
cmps
sub
mov
mov
add
into
movs
sbb
fwait
lock
xchg
adc
push
in
mov
push
inc
je
mov
lods
add
sti
repz
test
test
lods
dec
out
(bad)
cmp
sbb
vmovsd
outs
(bad)
in
inc
pop
(bad)
jmp
lods
out
aam
lea
xor
add
mov
leave
dec
lea
fmul
dec
inc
jl
clc
sbb
mov
das
aad
addr16
xchg
fld
add
ins
bound
add
into
mov
jnp
cmc
sti
adc
dec
outs
cld
jmp
pop
add
and
adc
pop
mov
xor
jle
mov
hlt
mov
sbb
cmp
sbb
lock
(bad)
rcr
push
sbb
inc
ja
pushf
aaa
int3
stc
adc
out
jo
sti
ja
mov
ins
cs
mov
jae
sahf
ret
outs
dec
fidivr
xchg
jecxz
dec
dec
xchg
fcomp
sbb
cmp
xchg
sbb
(bad)
xor
push
loope
stc
nop
repnz
and
push
push
cmp
jae
nop
jecxz
outs
jmp
xchg
cs
retf
js
xor
fistp
imul
rcl
and
xchg
and
(bad)
xchg
jne
test
cmps
mov
adc
sbb
fcom
repnz
xchg
pop
add
leave
lods
jno
mov
test
retf
out
sar
add
push
shl
xchg
sub
call
fstp
sbb
push
and
sbb
std
ss
xchg
pop
mov
movs
int3
(bad)
out
aaa
outs
mov
lds
(bad)
stos
mov
jns
cli
mov
enter
stos
aam
ins
sub
jnp
loopne
push
ret
hlt
pop
sbb
pop
daa
jae
sar
add
pop
mov
pusha
ds
hlt
sbb
mov
test
inc
cmp
mov
xchg
(bad)
pop
test
cmps
out
cs
and
bound
jbe
dec
jnp
fs
data16
mov
sub
xchg
sub
dec
xchg
imul
jb
stos
mov
pmaxsw
add
dec
into
out
mov
jb
push
jl
pop
das
lahf
scas
ret
sub
ins
mov
repnz
mov
jmp
xor
push
(bad)
mov
(bad)
jne
xor
push
dec
popa
scas
mov
cwde
out
pop
outs
sub
cmp
loop
hlt
mov
sti
jge
adc
out
sub
mov
jg
cmp
jl
jmp
mov
jo
or
or
je
sbb
lds
jno
sub
arpl
jmp
or
out
inc
ja
sub
into
mov
push
js
idiv
hlt
stc
adc
test
add
mov
push
mov
hlt
mov
push
test
lock
leave
into
lds
cmc
iret
daa
cld
das
fadd
sbb
jmp
pop
(bad)
pop
fisttp
aas
mov
loope
xlat
sbb
cmp
xor
mov
cmp
cwde
movs
push
sbb
cmc
mov
in
or
xor
lock
rcr
clc
dec
inc
in
cmp
xchg
ficom
mov
(bad)
xor
adc
cmps
arpl
cmps
(bad)
ds
jp
fdiv
lea
test
jae
xchg
addr16
xchg
push
les
adc
std
cmc
ficomp
cmp
mov
into
cmp
stos
std
cmp
pop
into
or
jle
ja
xlat
adc
inc
fimul
addr16
(bad)
mov
arpl
push
push
clc
out
mov
hlt
cdq
into
jmp
leave
loop
mov
cli
fidivr
jmp
push
adc
ins
jl
shl
jg
sbb
push
cwde
daa
pop
xor
and
xchg
es
sti
dec
pop
pop
add
ficomp
mov
fmul
adc
pop
jmp
test
(bad)
inc
or
gs
out
(bad)
cmp
(bad)
stos
enter
test
push
lahf
leave
mov
out
loope
and
mov
fistp
push
xor
xchg
stos
ins
adc
cld
dec
in
mov
pushf
xchg
xor
mov
shr
sbb
jne
adc
dec
cld
pop
jg
cmp
mov
jnp
lds
retf
xor
xchg
pop
dec
and
pusha
xchg
jp
bound
mov
test
push
add
ins
and
pushf
add
add
push
imul
fmul
sbb
xchg
popa
jno
inc
push
sbb
pop
xchg
clc
sub
int3
es
ds
je
mov
into
adc
leave
cld
add
jae
inc
inc
jae
out
rol
xchg
and
pop
push
icebp
xchg
and
sub
add
mov
enter
in
pop
pop
or
les
ficomp
mov
mov
clc
stos
pop
jge
and
push
jo
xor
xchg
mov
sub
inc
sbb
jne
outs
sbb
std
stos
sub
neg
or
sub
mov
inc
dec
xchg
cld
xor
pushf
mov
pushf
arpl
les
fs
jb
icebp
add
in
mov
mov
jae
xchg
clc
ins
xchg
xor
cmc
xchg
fstp
push
movs
sbb
dec
(bad)
shl
rol
inc
jbe
ins
shl
cmp
mov
adc
leave
pop
(bad)
cmps
mov
test
and
mov
mov
(bad)
aam
hlt
inc
push
imul
pop
cmp
add
retf
pusha
xor
nop
arpl
adc
call
test
mov
mov
daa
jns
cmps
inc
xlat
sbb
stc
cmp
retf
js
jmp
imul
jbe
sub
inc
addr16
jmp
out
repz
inc
push
push
icebp
mov
mov
(bad)
iret
retf
fwait
push
and
jle
mov
sub
jmp
call
xchg
jnp
mov
lea
fucomi
xlat
loope
inc
jmp
or
out
ret
pop
fs
add
xchg
mov
inc
shr
mov
adc
add
call
js
push
cdq
jmp
dec
into
dec
push
addr16
mov
sub
mov
nop
cmp
xor
inc
ss
fwait
sub
inc
leave
sub
push
sub
arpl
retf
femms
xor
mov
sti
inc
das
or
adc
ret
xchg
les
mov
test
push
add
pop
imul
add
add
scas
sub
jbe
es
mov
nop
pushf
(bad)
jmp
ds
sub
add
cmp
adc
jecxz
pop
push
add
mov
stos
mov
fcomp
aam
mov
xchg
xchg
(bad)
mov
test
in
jge
retf
mov
jle
cmp
push
cs
retf
jae
popf
push
std
jb
add
leave
cdq
jg
lahf
ss
neg
sbb
mov
loopne
out
and
sbb
push
pusha
mov
dec
sbb
cs
cld
scas
xchg
xor
fwait
rcr
sbb
pop
int
test
adc
push
lods
pop
arpl
scas
ins
popa
scas
push
and
cmc
stos
mul
cdq
xor
push
sbb
jns
cmp
adc
outs
xor
pop
ret
push
ss
rcr
jbe
xchg
pop
retf
sub
mov
das
scas
jle
aas
aad
push
mov
test
add
pop
loope
rcr
aas
fild
dec
int3
jno
inc
das
adc
(bad)
inc
aaa
loopne
shl
mov
leave
push
shl
fist
mov
dec
inc
fnsave
or
jno
and
cmc
mov
push
mov
pop
jmp
aas
jp
sub
pop
bswap
into
pop
icebp
xchg
outs
lods
add
xchg
enter
dec
push
and
lock
mov
loopne
or
mov
jne
dec
mov
xchg
out
enter
and
pop
add
iret
pop
inc
ins
in
cmp
cli
jmp
push
movs
inc
and
loop
add
aad
jne
mov
icebp
sahf
mov
inc
and
ds
mov
shr
mov
mov
dec
(bad)
leave
jge
mov
test
sar
popf
push
jp
clc
ror
sbb
inc
adc
mov
ss
ds
mov
jl
push
adc
(bad)
jo
pop
push
push
sbb
jecxz
mov
shl
iret
sbb
sbb
imul
xchg
push
in
je
int3
and
sbb
mov
mov
mov
rcl
and
je
mov
push
cmps
jb
lahf
dec
jecxz
pop
add
mov
lahf
or
push
dec
dec
fs
test
jns
push
dec
sub
push
and
fucompp
dec
pop
cdq
retf
sbb
lea
or
icebp
and
sub
mov
cdq
loopne
aam
and
dec
repnz
and
(bad)
jne
xchg
fsub
cmp
push
test
cs
not
and
bound
push
push
pop
pop
jmp
fldcw
push
mov
outs
in
(bad)
sbb
fs
out
rol
pop
pop
ficom
xor
mov
inc
sbb
mov
jno
std
ret
jbe
out
not
inc
xchg
adc
ror
ins
mov
int
shr
pop
cmp
mov
inc
xchg
int
sbb
leave
sub
pop
mov
cmp
pop
fwait
sub
outs
pusha
jnp
stc
push
sbb
ins
in
lahf
or
cmp
and
fisttp
sbb
(bad)
adc
pop
imul
jmp
pop
das
xchg
push
dec
adc
add
loopne
mov
mov
xor
pop
ja
and
push
cmp
bound
pop
outs
clc
mov
jns
inc
lds
lock
xor
pop
test
mov
jns
in
push
fst
out
sub
in
push
xor
jb
jle
xor
das
sub
and
mov
ja
or
xor
mov
hlt
jbe
cld
adc
adc
push
push
ret
arpl
jns
out
outs
arpl
clc
xchg
xor
ds
xor
jmp
jmp
mov
icebp
xchg
sbb
into
je
ins
enter
jno
and
jno
sbb
call
dec
jl
and
pop
pushf
mov
inc
mov
leave
ss
out
mov
aam
dec
xor
dec
(bad)
dec
or
(bad)
retf
inc
jno
rcr
xor
adc
and
cmp
iret
test
and
sbb
inc
and
lea
cmp
jg
dec
adc
in
cdq
nop
jp
mov
mov
jmp
mov
movs
add
inc
clc
(bad)
int3
sub
(bad)
push
inc
fwait
stc
cmc
dec
jnp
cmp
in
mov
mov
dec
pop
cld
fs
pop
mov
mov
sahf
ret
dec
out
std
cmps
in
arpl
mov
and
sahf
push
sub
loope
inc
push
push
jo
mov
pop
scas
outs
repz
aam
mov
jecxz
iret
mov
popa
sbb
push
cmp
cld
aaa
and
xlat
or
mov
retf
clc
dec
aas
sub
adc
inc
cs
scas
adc
add
int
or
xchg
repz
cmp
fnstsw
mov
(bad)
jp
dec
inc
lods
ficomp
es
jge
mov
inc
outs
cmp
(bad)
mov
xlat
inc
lea
mov
out
clc
lea
stos
hlt
cmp
xor
or
add
inc
les
lahf
mov
mov
out
cld
sbb
mov
js
cmps
ret
cmp
loop
inc
dec
push
mov
dec
mov
call
outs
fwait
ss
jmp
inc
into
jb
push
push
dec
fimul
into
push
retf
aaa
dec
sub
dec
cwde
xchg
(bad)
dec
mov
stc
pop
pushf
out
jbe
rol
icebp
aas
xchg
xor
hlt
fst
lea
inc
scas
aam
out
lds
mov
push
clc
outs
cmp
lods
xchg
sbb
mov
xor
dec
inc
mov
push
xchg
inc
cmp
pop
xchg
and
inc
dec
and
mov
pop
xor
push
test
sti
pop
cmp
mov
mov
imul
js
ja
fadd
shl
in
add
push
lods
jnp
xlat
fld
mov
pop
fsubr
es
push
dec
xchg
jo
sbb
mov
push
adc
loope
icebp
add
rol
mov
imul
(bad)
call
js
push
pop
ror
cli
jae
out
shl
xchg
push
les
cli
adc
inc
or
push
sbb
pop
xchg
sbb
xchg
inc
rol
(bad)
cmp
vandpd
repnz
add
mov
cmp
stos
dec
pop
pushf
enter
xchg
sbb
cmps
es
jp
add
fsubr
xchg
push
movhps
mov
fisubr
mov
sbb
cli
bnd
fldln2
jbe
cmp
(bad)
cwde
pop
xchg
xchg
in
pop
outs
out
movs
add
jp
pop
pop
push
ret
or
sub
push
stos
rcl
or
cmp
fst
pop
adc
(bad)
stos
mov
push
(bad)
push
pop
xchg
jge
xchg
ror
xchg
sub
ss
outs
mov
sbb
sub
add
movs
mov
popa
imul
retf
into
sbb
popf
or
mov
push
in
repnz
cmc
ds
sbb
ins
fidivr
je
add
lds
lock
pop
lods
sbb
xchg
mov
dec
cmps
mov
or
retf
pop
(bad)
ficomp
int3
sbb
push
sahf
push
dec
loopne
sub
mov
push
pop
add
jae
ror
retf
pop
push
jg
nop
pop
cmc
ror
outs
(bad)
out
xchg
cmps
jge
enter
mov
ds
bound
add
mov
and
xchg
push
(bad)
aam
push
push
and
fldcw
ror
pop
fsub
ins
xchg
cmp
daa
(bad)
(bad)
pop
cmp
imul
inc
movs
(bad)
aaa
aaa
test
call
and
rol
add
inc
(bad)
stos
cmc
mov
jbe
lea
mov
push
jg
dec
retf
or
xlat
lea
pop
into
xor
xlat
in
lds
and
jae
je
(bad)
xor
(bad)
mov
movs
xchg
aaa
(bad)
fst
mov
repnz
adc
rcr
iret
inc
lds
arpl
jb
fs
push
sub
(bad)
xor
pop
cmp
sub
out
movs
dec
mov
(bad)
xchg
jmp
sub
push
mov
out
in
loope
cmp
dec
adc
and
push
mov
pop
push
hlt
and
addr16
fwait
sub
(bad)
jl
and
cmps
icebp
fadd
xchg
jecxz
mov
add
mov
add
sahf
loopne
mov
fild
and
cmp
inc
dec
mov
fldenv
in
imul
cli
xor
sub
xor
sar
jno
dec
(bad)
sub
popa
ror
dec
pop
mov
not
cs
inc
ins
movs
dec
sub
sar
out
rcl
push
enter
inc
lock
dec
pop
and
repz
inc
push
adc
push
jbe
push
push
and
or
and
sbb
mov
jb
inc
inc
push
push
mov
fwait
lahf
jbe
mov
icebp
jbe
push
scas
pop
lock
and
jle
adc
mov
and
sub
test
dec
push
sub
xor
or
mov
stos
jnp
sar
mul
test
and
mov
(bad)
test
gs
push
ficomp
cmp
adc
int3
jge
push
and
out
int
mov
push
dec
ror
or
scas
mov
sbb
inc
and
cmp
add
cmp
ja
cmp
inc
mov
cmp
stos
adc
out
push
adc
mov
dec
and
sbb
int3
jno
sbb
loop
pop
movs
mov
loopne
jp
xchg
add
lods
movs
jge
cli
adc
mov
aaa
cs
cmps
and
add
imul
cmp
imul
xchg
cmp
adc
sbb
pushw
sbb
cmc
or
ss
addr16
sub
xor
scas
jno
adc
xchg
and
sub
sub
test
push
mov
ret
fdivr
sub
adc
mov
xchg
lods
add
and
mov
mov
mov
(bad)
pushf
ffreep
fcomi
imul
icebp
fstp
fisttp
push
inc
mov
mov
xchg
dec
jbe
std
pop
jl
mov
and
addr16
lods
vmwrite
pop
jge
dec
push
sub
sub
adc
add
sub
jecxz
push
ins
push
clc
or
cmc
jp
enter
(bad)
jae
lds
push
sahf
sub
cmp
cld
daa
data16
and
std
push
(bad)
dec
int
(bad)
in
stc
sahf
push
mov
mov
inc
inc
cmp
adc
inc
jmp
mov
cdq
jne
jbe
fcom
xchg
movs
fistp
cmp
retf
shl
sbb
cmp
add
gs
xor
mov
pop
xor
sub
xchg
mul
jno
cdq
call
and
out
out
shl
xor
sbb
mov
cmps
(bad)
int3
inc
out
sbb
sbb
fldenv
jmp
jns
fnstenv
sbb
leave
mov
out
lods
in
cmp
stos
dec
pop
push
fwait
sub
cli
sbb
or
xchg
leave
push
shl
sbb
or
push
push
mov
add
push
mov
add
test
lds
jmp
das
jno
cmp
fild
aam
or
inc
jae
pop
xchg
test
shl
mov
pop
test
jae
popa
xchg
and
test
test
popa
ss
hlt
xor
pop
mov
sub
repnz
mov
push
push
pop
int
pop
jp
das
adc
jmp
add
xchg
lahf
(bad)
hlt
jmp
dec
sub
es
sar
rcr
xchg
mov
retf
or
inc
bound
jl
xchg
add
xchg
test
dec
jl
stos
enter
(bad)
mov
dec
inc
lea
nop
jg
xor
adc
mov
out
cmp
outs
in
xchg
push
mov
out
dec
arpl
jge
cmps
dec
inc
xchg
retf
cld
out
cmp
mov
xchg
out
mov
dec
loopne
inc
push
add
pop
and
stos
inc
clc
inc
ins
push
adc
mov
dec
push
mov
cs
and
fs
rcl
sbb
inc
dec
add
adc
push
adc
inc
push
(bad)
ins
mov
js
push
mov
xchg
popa
clc
out
cld
(bad)
xchg
cmp
mov
aad
lds
mov
cmps
or
jmp
in
pop
fimul
mov
sub
jg
jae
fwait
xor
and
into
shr
pop
push
xor
pop
inc
call
ffree
xchg
sub
(bad)
ins
sbb
das
gs
sub
inc
stc
js
arpl
lahf
sbb
ror
cmps
ins
fstp
loope
popa
push
xchg
js
xlat
les
(bad)
data16
and
pop
shl
ret
test
and
cwde
inc
and
stc
lea
sub
cwde
daa
ins
std
icebp
pop
adc
jge
jmp
jge
test
(bad)
retf
cmp
inc
ja
mov
jae
mov
std
jo
mov
fist
movs
add
in
cmp
and
fist
lods
and
stos
pop
jge
fdivr
iret
jo
push
lods
(bad)
(bad)
xchg
popa
push
les
xlat
jno
scas
mov
out
sub
cwde
jmp
push
sub
mov
jnp
jns
mov
dec
push
sub
sti
retf
jb
int3
adc
arpl
sar
imul
mov
jnp
stos
xchg
push
pop
int
and
pop
jne
pop
lods
aam
or
cld
loope
pop
mov
fwait
xor
xchg
fidiv
mov
outs
dec
mul
(bad)
fisttp
add
mov
jmp
xor
and
add
inc
int3
or
add
sub
repnz
pop
xchg
push
clc
shr
out
and
mov
test
inc
out
hlt
jo
lock
xchg
sbb
xlat
(bad)
call
aas
xor
sar
dec
pop
es
cmp
loope
xor
arpl
movs
mov
mov
dec
sub
mov
xor
jno
ret
loopne
mov
fxch
into
or
cmps
js
int
icebp
cwde
push
push
ret
gs
jmp
hlt
and
pushf
jg
add
and
nop
mov
fyl2xp1
and
pop
dec
jmp
in
sar
loopne
mov
mov
adc
ret
lods
mov
mov
mov
or
shl
pop
outs
outs
movs
jae
(bad)
ret
clc
js
mov
pusha
call
fwait
leave
in
mov
pop
mov
push
mov
daa
(bad)
(bad)
jl
mov
sub
bound
sub
pop
mov
inc
push
cmp
ins
xor
sbb
repnz
sub
jg
cdq
mov
jo
retf
xchg
test
adc
test
add
outs
inc
call
mov
je
cmp
neg
mov
pop
jne
fwait
cmc
les
xlat
scas
jb
ins
sub
xchg
xor
aas
int
sbb
mov
dec
cld
mov
lock
and
dec
xchg
jmp
popa
and
lea
outs
cmovns
ins
das
xor
sbb
lea
daa
nop
pop
inc
loop
jp
jecxz
mov
sahf
fs
in
pop
inc
lods
add
xchg
retf
aaa
rcr
push
pop
jo
shrd
test
add
shl
inc
xchg
mov
retf
bound
arpl
xchg
repz
fidiv
xchg
stos
stos
inc
mov
loope
pop
pusha
cmp
push
dec
out
sub
out
cmp
mov
adc
and
pop
push
ret
pusha
test
int
adc
sbb
dec
push
in
imul
rol
xor
(bad)
pusha
movs
cmp
xchg
sbb
add
inc
cli
xchg
mov
mov
setb
jbe
rcl
mov
clc
cmp
push
sbb
adc
call
movs
mov
lds
xchg
and
hlt
repz
jp
pop
and
sbb
cmp
dec
pop
fsubr
sub
arpl
mov
push
cwde
xchg
fiadd
jmp
jp
mov
cdq
pusha
lahf
pop
call
retf
fdivr
test
mov
imul
jp
add
sbb
xor
dec
pop
jb
dec
sbb
cmp
cmp
test
pop
call
and
push
add
pop
jmp
loope
adc
pop
jne
push
das
cli
jmp
lock
shr
mov
call
jl
ret
and
sub
scas
and
inc
dec
and
mov
xchg
cmp
repnz
cli
cmps
mov
lods
push
sub
fbld
inc
bound
retf
add
pop
xchg
jg
sub
xor
push
dec
push
xor
cmc
inc
imul
cmp
test
jns
ss
add
jbe
lods
jg
imul
mov
jb
cwde
cwde
cs
ja
xbegin
sub
rol
addr16
inc
fist
fsubr
pop
gs
inc
dec
fldcw
mov
nop
cmc
fisubr
stc
pop
stos
js
mov
imul
add
adc
adc
pop
movs
mov
cmp
repz
xor
sbb
mov
add
(bad)
call
ins
mov
jns
xor
stos
call
xchg
outs
retf
and
mov
pop
mov
das
jle
mov
sub
xor
in
es
in
mov
mov
inc
or
adc
fs
pop
xlat
mov
les
cmp
int
stc
push
mov
inc
add
sub
gs
and
inc
aam
and
xchg
jg
xor
or
jg
dec
ja
xchg
popf
test
jns
mov
jae
out
add
shl
mov
xor
sti
adc
nop
hlt
into
push
jecxz
test
shl
jns
ret
stc
dec
push
cmp
adc
shr
rol
or
xchg
out
inc
test
lock
or
stc
mov
dec
test
inc
mov
retf
int
xchg
push
mov
mov
daa
jge
jg
jmp
sbb
stos
fdiv
xchg
dec
or
out
mov
and
out
add
dec
cdq
sbb
fimul
cs
inc
jns
sahf
icebp
or
push
xor
sbb
jle
sub
xchg
fstp
mov
sub
or
push
jmp
xor
jle
lea
call
movs
sub
sub
fnsave
inc
pusha
push
mov
adc
or
repz
add
cmp
nop
(bad)
lock
test
(bad)
mov
push
sub
(bad)
ret
outs
in
jb
(bad)
jmp
jmp
popf
jle
mov
mov
(bad)
sahf
jge
hlt
cmp
cmp
dec
pop
fisub
jg
add
or
mov
lahf
stos
shr
mov
adc
imul
in
fcmovnu
lock
xchg
dec
jge
mov
inc
cmp
imul
shr
jl
sbb
jl
mov
xchg
and
aam
in
pop
gs
leave
pop
or
pop
outs
sub
stos
adc
sub
cwde
dec
shr
mov
sub
ror
and
xchg
xor
adc
icebp
pop
and
loopne
ret
sub
pusha
stos
movs
push
xchg
cmp
adc
adc
pushf
or
pop
ds
or
or
js
arpl
push
or
dec
push
sub
ins
or
and
xor
lds
cs
pusha
sbb
xchg
lock
les
add
imul
xchg
push
int
in
mov
aad
and
dec
xor
lahf
push
dec
fs
outs
xchg
add
push
jge
sbb
test
jp
int
stos
sti
in
adc
sahf
fdiv
scas
rcl
inc
xor
hlt
idiv
or
xchg
push
es
dec
movs
(bad)
xor
xchg
sbb
sbb
out
fdiv
push
or
mov
ret
xchg
icebp
iret
mov
jmp
or
iret
mov
outs
sbb
outs
cli
mov
pop
pxor
or
push
rol
dec
jo
or
fsubr
daa
repnz
(bad)
lds
loop
pop
(bad)
sub
sub
out
call
add
sbb
push
fld
inc
mov
xor
pop
pushf
mov
cli
fimul
lahf
jmp
clc
scas
js
data16
jo
aad
mov
(bad)
cmps
retf
mov
fild
fcmovbe
iret
rcr
jmp
mov
inc
in
call
popf
cmps
mov
lock
xchg
xchg
sbb
(bad)
aad
mov
movs
loopne
xchg
add
sub
call
mov
repz
lods
retf
sbb
faddp
jl
pop
adc
stos
shl
or
cmp
mov
xor
outs
gs
xchg
cmp
sar
jmp
jmp
xchg
mov
pop
add
pusha
ret
cs
xchg
shl
pop
inc
adc
sub
ins
or
xchg
pop
push
pshufw
push
repz
pop
fadd
mov
jo
fnsave
loopne
add
repnz
(bad)
stc
push
(bad)
outs
jbe
(bad)
dec
cmps
sbb
(bad)
sti
sub
jmp
aas
mov
fwait
inc
push
js
sbb
dec
popw
inc
add
test
cmp
outs
add
pushf
js
iret
push
jl
sub
inc
xchg
ficomp
aaa
fimul
pop
pop
mov
paddw
adc
cmp
pushf
in
jmp
dec
mov
pushf
sub
xchg
retf
dec
sbb
mov
out
inc
pop
cmps
sbb
dec
popf
xchg
and
xchg
loope
mov
movs
js
and
test
(bad)
out
data16
scas
sar
mov
sub
mov
iret
pushf
cs
jge
mov
pop
sbb
aad
sti
sub
jecxz
loope
or
add
clc
aam
sub
fimul
movs
push
cmp
lds
test
imul
xlat
fistp
sbb
call
push
push
cmp
mov
mov
jno
dec
jecxz
adc
retf
xor
loop
test
sub
mov
aas
add
call
loope
test
lock
push
shl
pop
xchg
push
mov
push
into
loopne
repz
dec
rol
push
movs
xor
stos
pop
mov
jg
dec
int3
dec
mov
popw
cld
xchg
and
call
les
(bad)
jge
mov
mov
mov
fucomi
push
pushf
leave
out
lods
adc
int3
mov
pop
push
ret
cmp
fstp
jns
adc
movs
cmps
stc
outs
jb
sub
jnp
xchg
inc
clc
pop
fisub
test
inc
and
call
and
stc
movs
xor
cmps
jae
dec
sub
sahf
cmp
adc
cmp
int3
add
scas
adc
dec
inc
in
fdiv
cmp
popf
(bad)
fisubr
mov
dec
stos
les
or
call
lods
inc
add
cld
cdq
sub
daa
cli
pushf
push
adc
lods
rol
mov
popf
(bad)
add
gs
int
inc
push
dec
add
cmp
retf
shl
sbb
mov
adc
fisttp
inc
xchg
pop
add
xchg
pop
iret
jns
nop
es
mov
or
jp
fldenv
jp
inc
mov
or
fiadd
mov
test
fmul
dec
popa
inc
shl
adc
in
sbb
and
sub
xor
retf
jno
mov
test
push
out
fldln2
or
xlat
cmp
sbb
mov
push
mov
movs
adc
fs
adc
xchg
mov
sbb
mov
or
ins
lock
idiv
bound
sub
out
data16
push
movs
cdq
repz
shl
cwde
lea
pop
mov
popa
mov
push
fdivr
xchg
icebp
jo
inc
adc
or
dec
in
(bad)
(bad)
dec
mov
shl
aas
lods
and
dec
xchg
inc
dec
dec
fnsave
inc
push
jge
mov
push
icebp
icebp
jle
fnsave
pop
cmps
rcl
pop
icebp
push
sub
in
adc
hlt
outs
and
fistp
xor
xor
rcr
test
mov
jp
retf
cmp
daa
mov
repz
xchg
push
mov
mov
or
mov
xchg
cmps
dec
cmp
dec
adc
or
lock
ficomp
or
and
cmps
and
test
leave
int
scas
cmp
or
push
test
aam
scas
mov
mov
mov
mov
xchg
and
push
mov
or
mov
xor
(bad)
and
nop
loop
mov
call
aad
mov
das
xchg
cmp
imul
jnp
jle
push
hlt
ds
out
test
cdq
jno
fs
out
js
pop
mov
retf
cmps
xchg
dec
jmp
add
es
pop
add
pushf
fild
rcr
mov
dec
or
xor
(bad)
std
dec
adc
shr
out
or
icebp
mov
pop
sbb
mov
imul
xor
ror
mov
test
imul
push
inc
test
pop
ficomp
sub
mov
lock
jo
adc
mov
mov
fwait
xor
(bad)
cmp
pusha
popf
mov
dec
mov
lods
popf
jnp
repnz
nop
cmp
sti
push
paddb
xchg
cwde
(bad)
fstp
sub
dec
popf
xor
test
das
add
test
jmp
pop
in
xor
arpl
stos
pop
cmp
add
shl
neg
in
test
fldcw
sub
sti
aad
mov
and
(bad)
mov
pushf
aam
(bad)
in
push
adc
ins
sub
xchg
fs
cmp
adc
call
xor
stos
inc
inc
jg
pop
(bad)
imul
mov
out
mov
sub
mov
dec
jnp
push
int3
xchg
ret
dec
and
test
mov
add
pop
stos
lds
lods
inc
bound
(bad)
bound
in
xor
pop
xchg
xchg
and
mov
shl
push
adc
pop
or
push
ja
into
and
lods
cmp
dec
fdivr
adc
movs
pand
mov
(bad)
cmp
leave
pop
retf
sti
pop
test
sub
xchg
sti
ins
jp
jns
sub
xchg
icebp
int3
ins
jns
adc
and
jecxz
cmps
mov
sbb
std
pop
cli
inc
out
sbb
outs
(bad)
xor
gs
mov
div
push
stos
lahf
shr
jb
jle
adc
jle
mov
loopne
jmp
int3
or
xor
or
pop
sub
jbe
jo
add
ins
adc
mul
pop
rol
mov
psubsw
aaa
lods
or
ja
popf
iret
cmps
sbb
test
int3
mov
rcr
push
cmc
cs
push
ucomiss
(bad)
dec
dec
stc
push
pop
adc
bound
pop
cmp
cmp
lock
dec
call
xchg
mov
sbb
cmp
jnp
xor
addr16
lea
push
mov
jo
into
test
or
pop
test
and
inc
dec
movs
dec
jne
mov
cli
ss
rol
jl
hlt
outs
popa
cs
pusha
cmc
jl
ret
retf
movs
scas
je
imul
adc
push
scas
xor
stc
cmp
or
xchg
fs
sahf
out
(bad)
sbb
mov
mov
enter
cmp
out
(bad)
cs
movs
popa
sbb
(bad)
cmp
adc
ins
inc
(bad)
sub
dec
outs
mov
ss
sbb
aas
pop
(bad)
sub
add
lea
add
iret
jmp
lds
jnp
mov
aad
les
call
icebp
(bad)
mov
out
cs
push
xchg
jmp
mov
push
scas
stc
cmp
mov
es
cmp
cmp
mov
add
(bad)
cmps
lock
aaa
es
cli
ss
sbb
push
sbb
in
mov
add
enter
xor
mov
jecxz
mov
les
jp
mov
pop
cwde
sahf
jle
(bad)
xlat
cmp
std
into
(bad)
xlat
test
xor
xor
inc
adc
sub
mov
ja
cmc
jnp
aaa
fdivr
xlat
xchg
mov
sub
xlat
iret
cmp
dec
dec
cmp
leave
lahf
stos
mov
and
in
lds
xchg
pop
lods
pusha
cmp
addr16
hlt
xchg
repnz
mov
stos
mov
data16
mov
jmp
fwait
sub
jmp
jnp
sub
dec
sti
cwde
movs
adc
in
movs
dec
cmps
or
daa
push
sub
rcl
call
mov
es
ins
xchg
(bad)
(bad)
(bad)
mov
mov
loop
inc
push
fsubr
jecxz
mov
dec
dec
hlt
int
push
cld
out
imul
sbb
push
idiv
inc
push
dec
mov
and
cmp
pop
test
(bad)
dec
inc
xor
enter
xchg
lods
mov
sub
dec
sti
shr
lea
cmps
mov
push
mov
sub
movs
pop
mov
add
fistp
lods
or
jae
inc
imul
sbb
test
cmp
push
push
or
jge
pushf
arpl
jp
(bad)
cmp
test
push
(bad)
call
pusha
jmp
sub
cmp
jae
cmp
in
xchg
cdq
retf
sahf
xchg
cmp
sbb
scas
sbb
dec
test
in
sub
shl
pusha
jno
ins
dec
out
xor
(bad)
xchg
cmp
sub
push
or
push
das
nop
cmp
or
sub
int
or
sub
pusha
scas
sar
and
inc
pop
add
shl
inc
lahf
aas
scas
pusha
dec
sbb
adc
das
pushf
je
in
add
in
or
and
or
shl
ret
push
clc
inc
ins
out
pushf
sbb
pop
rcl
mov
sub
push
add
push
sub
fbstp
fadd
(bad)
jp
and
fwait
mov
cmp
add
aas
adc
inc
push
clc
mov
in
fdivr
pop
stos
(bad)
cmc
addr16
lahf
mov
into
js
mov
vpcmpeqb
mov
loope
mov
pushf
test
call
scas
cmp
adc
jbe
call
jnp
imul
(bad)
pop
xor
stc
inc
jns
push
pop
cmp
xor
dec
ss
lods
mov
test
fsubp
adc
cli
lock
xlat
fsub
in
js
xor
mov
mov
aas
cmp
mov
out
ret
inc
mov
imul
jbe
fwait
(bad)
fld
fldenv
dec
movs
ret
cmp
pop
retf
mov
ins
add
fwait
inc
add
mov
in
and
add
pop
mov
ins
rcr
call
xor
pop
enter
fbstp
aam
fcmovne
outs
imul
cmps
and
push
jl
cmp
aad
mov
daa
xchg
jmp
or
cwde
dec
xor
and
inc
sub
inc
fwait
sub
push
xchg
sar
hlt
call
ror
xchg
pop
pop
inc
mov
fbld
dec
mov
data16
or
retf
lahf
adc
(bad)
and
out
nop
pop
repnz
jne
mov
push
ins
out
mov
(bad)
push
call
mov
out
iret
and
not
dec
xor
cmp
pop
popa
adc
and
cmps
pop
mov
call
out
int3
popf
in
jg
dec
cli
cmc
mov
xchg
adc
cmp
popa
jnp
clc
clc
fisub
data16
in
sbb
dec
cmp
cmp
mov
mov
fist
sub
dec
jl
cmc
inc
jecxz
lds
call
hlt
pop
stos
loop
rcl
in
mov
xchg
sub
sub
ins
or
jmp
jnp
retf
or
jo
xchg
lea
movs
jecxz
(bad)
pop
jb
push
xchg
cmp
cdq
pop
retf
(bad)
ds
ja
push
fs
repnz
mov
sub
cmp
pusha
xor
cmp
cmp
in
rdpmc
dec
xor
and
pop
xchg
mov
repnz
test
push
xor
bound
dec
add
dec
mov
sahf
in
scas
sbb
hlt
cli
or
retf
mov
mov
mov
pop
jmp
sbb
jns
(bad)
mov
mov
js
enter
pop
xchg
sub
push
ins
popf
push
dec
pop
and
enter
mov
push
jg
and
push
nop
out
add
sbb
pop
mov
xchg
jmp
lods
push
pop
fldenv
inc
aad
out
push
sub
aaa
mov
outs
xor
inc
push
jns
lods
dec
add
aam
xor
cmps
or
shl
pop
mov
shr
and
jb
xchg
inc
test
mov
pop
bound
test
cmps
xor
sub
mov
loop
(bad)
in
cmp
rcr
jl
xchg
jl
xor
push
cld
push
out
push
mov
pushf
in
adc
pop
and
sub
or
(bad)
push
addr16
dec
repnz
scas
jmp
xlat
cdq
mov
call
rol
clc
pop
data16
lods
ins
add
jmp
inc
sbb
and
gs
stos
fld
and
and
fisttp
movzx
mov
test
nop
(bad)
not
cmp
gs
jnp
enter
fsubr
cwde
lahf
inc
gs
jae
mov
sub
fwait
jb
rep
dec
fs
iret
push
mov
out
sbb
or
clc
into
lea
dec
pop
pop
rcr
sub
cmp
mov
mov
push
push
push
cs
push
dec
dec
pop
int
in
or
fst
(bad)
pop
fdivr
and
push
xor
mov
mov
adc
mov
shr
arpl
call
or
mov
xchg
and
add
loope
sub
sar
jmp
call
ss
popa
push
mov
test
in
xor
pop
add
and
or
push
mov
sar
fisub
les
aas
dec
loopne
call
and
in
clc
ficomp
fucomip
xor
aaa
not
push
(bad)
cmp
ja
push
add
sar
add
mov
in
(bad)
push
pop
xchg
in
call
push
and
(bad)
cld
loope
cmp
jmp
mov
jno
stos
std
lods
mov
jg
jge
fistp
inc
mov
(bad)
mov
ret
xor
out
clc
jmp
movs
and
and
sahf
cld
dec
xchg
dec
pop
out
std
mov
cmp
push
mov
out
xchg
repnz
jmp
sahf
dec
icebp
pop
dec
lods
xor
fcmovnu
dec
rol
cmp
test
inc
inc
pushf
(bad)
pop
sbb
lahf
in
and
or
mov
dec
add
mov
push
in
sub
pop
pop
scas
jb
ins
adc
lods
push
(bad)
lds
cs
sti
scas
aaa
xor
push
std
(bad)
dec
push
sbb
push
jecxz
xlat
aas
mov
imul
inc
(bad)
pop
and
outs
sbb
jns
icebp
jl
in
xchg
adc
js
add
mov
cli
jmp
dec
pop
(bad)
jecxz
cs
sar
xor
mov
jbe
psubusw
sub
lock
pop
lds
add
es
icebp
leave
xor
idiv
aam
mov
push
enter
jecxz
push
mov
outs
mov
cs
pop
adc
cld
sbb
loop
in
stos
pop
push
sub
ret
xor
mov
hlt
outs
cld
pop
adc
inc
scas
test
push
cmp
inc
inc
and
mov
dec
xchg
mov
pop
pop
cmp
movs
xchg
sbb
out
jbe
mov
(bad)
mov
std
mov
pop
sub
pop
and
xchg
jmp
shl
fucomi
cmc
loopne
and
xchg
sti
adc
ret
in
es
xchg
xchg
ds
xchg
xchg
cmp
cmps
cmp
pop
scas
mov
lds
hlt
(bad)
pop
test
bound
mov
int
cld
mov
xor
sbb
ja
pushf
or
cmp
inc
mov
push
rep
repz
or
lods
xor
add
dec
aam
cwde
xchg
or
jbe
cmp
pop
daa
jne
and
nop
push
std
inc
pop
outs
xchg
and
xor
int3
scas
adc
cmp
jo
int
ret
dec
in
pop
mov
adc
int
pop
adc
test
stc
imul
outs
dec
push
fwait
pop
cmps
mov
xchg
mov
jae
fnstsw
cmps
inc
dec
cwde
push
sbb
mov
push
cmp
call
loop
dec
in
cli
js
pop
jecxz
add
mov
movs
jo
or
sub
not
cmp
loop
sbb
mov
pop
call
jne
faddp
jmp
mov
popf
adc
adc
dec
data16
fistp
jno
mov
retf
and
mov
clc
pop
or
sub
add
cmps
scas
mov
inc
push
cwde
iret
and
cli
pop
and
cdq
pop
movs
lea
cdq
xchg
cmps
cmp
frstor
mov
lds
mov
pop
and
sub
cmp
push
(bad)
pushf
idiv
push
mov
clc
xchg
dec
or
sbb
int3
push
fist
pop
test
jp
mov
inc
in
pop
pop
outs
add
cmps
mov
std
push
jno
out
mov
push
or
aaa
mov
inc
adc
ja
repz
mov
or
sbb
pop
mov
stc
jns
jecxz
xchg
mov
or
packuswb
adc
es
out
inc
adc
ins
lods
enter
push
jne
les
xchg
mov
mov
cmp
jae
addr16
push
mov
mov
push
in
das
jnp
out
push
xchg
cli
out
adc
xchg
stos
test
lds
adc
loop
bound
(bad)
and
sub
outs
push
and
sti
jnp
xchg
xchg
push
les
sbb
adc
aad
mov
rcr
cdq
ins
jge
das
xchg
nop
je
pop
mov
push
pushf
aaa
cmp
in
test
mov
cld
dec
(bad)
fdivr
pop
or
aas
lahf
ror
std
cmp
or
imul
ja
push
(bad)
jmp
inc
mov
outs
xchg
sub
add
(bad)
mov
retf
mov
int3
sbb
loopne
and
movs
inc
lahf
lock
cmp
jge
lds
add
pop
adc
cdq
mov
out
cmps
fmul
pushf
jp
pop
jo
stos
imul
or
movups
cli
and
sti
and
cmp
in
enter
fisub
push
mov
or
and
xchg
mov
(bad)
pop
popf
mov
das
(bad)
lods
and
sub
xor
loope
retf
sub
dec
test
aam
ret
js
ldmxcsr
stos
xor
bound
fdivr
or
cdq
inc
(bad)
cmp
jne
cmp
add
(bad)
test
shl
jg
not
loope
aad
sbb
add
shl
jle
push
dec
lahf
in
inc
mov
pop
loopne
dec
jno
arpl
ins
lahf
aam
outs
inc
in
mov
jge
stc
adc
cmps
and
or
popa
push
sti
(bad)
in
pop
pop
adc
dec
add
xchg
fdivp
jge
hlt
jmp
sar
add
dec
loopne
ja
adc
imul
neg
test
and
mov
dec
xchg
mov
pop
std
pop
aas
shl
shl
mov
jmp
gs
into
int
xor
push
test
int
(bad)
xlat
cld
ss
ins
and
jmp
cdq
pop
xor
rol
mov
in
sbb
push
call
sti
and
(bad)
add
out
mov
mov
cli
clc
in
push
jmp
xchg
out
push
rol
sti
enter
outs
jg
mov
adc
div
cmp
inc
fldcw
add
test
in
loope
xor
js
das
je
ss
xor
push
ds
xor
xlat
cdq
in
loopne
or
sbb
xlat
leave
or
cmps
int
std
ds
in
cmp
repnz
loopne
loop
mov
enter
jbe
jno
add
sub
mov
jbe
xchg
inc
sbb
sub
sub
pop
dec
int3
test
repz
mov
cmps
mov
nop
or
pop
xor
xchg
fst
repnz
push
sub
das
lods
fldcw
stos
shl
jo
adc
mov
pop
je
mov
(bad)
lahf
ret
mov
jmp
dec
mov
xor
mov
push
jge
js
pop
add
movlps
sti
ds
mov
push
or
xchg
neg
mov
and
fisubr
test
inc
jg
movs
push
(bad)
cmp
cwde
aas
mov
add
out
and
adc
ss
or
(bad)
imul
or
out
cmp
and
pop
cmp
or
jge
push
lods
inc
jnp
sbb
cmps
inc
add
mov
inc
sbb
in
inc
push
mov
iret
into
stos
ficomp
aas
add
add
shr
or
ret
pop
pop
and
sbb
fimul
ret
test
psubq
scas
sbb
cmp
sbb
mov
std
jl
jnp
jno
popf
push
adc
fnclex
sbb
jg
loopne
lods
inc
out
out
xchg
jns
mov
pop
nop
rol
call
dec
test
aad
jne
add
lock
loopne
mov
movs
loopne
scas
aaa
or
test
stos
mov
push
imul
cmps
sbb
out
movs
sbb
sbb
sbb
lods
jbe
std
movs
call
or
pop
sbb
loopne
cmc
mov
and
cmp
das
pop
dec
ret
fidivr
ret
(bad)
mov
xor
cmc
push
cmp
and
(bad)
fistp
and
and
into
in
add
dec
push
ins
xor
ja
gs
and
out
push
fistp
ficomp
add
popf
lods
mov
ja
mov
lods
mov
rcr
movs
stos
ret
or
icebp
inc
jmp
shr
xor
ins
sahf
push
inc
mov
clc
jg
jae
dec
ret
xchg
cld
mov
stc
imul
inc
(bad)
ds
mov
sbb
call
push
in
cwde
hlt
pusha
mov
inc
pushf
in
fstp
xchg
inc
mov
lea
xor
mov
mov
sti
mov
add
jg
aad
ds
fs
adc
inc
pop
loope
sub
call
pop
add
jne
lods
shl
daa
push
packsswb
dec
cld
pop
dec
mov
push
sti
mov
sub
push
aaa
dec
inc
and
lock
or
push
jne
jmp
pop
dec
inc
js
jmp
fldenv
mov
jge
enter
dec
(bad)
push
xor
push
xchg
mov
mov
jo
ret
add
addr16
arpl
push
dec
(bad)
push
scas
fwait
mov
xor
mov
js
xor
fist
aas
std
adc
icebp
jb
xor
das
mov
lock
dec
mov
mov
sbb
pop
mov
sbb
jnp
adc
sbb
xor
int
dec
or
sbb
inc
gs
jp
int
pop
jge
jmp
ret
inc
out
and
sub
jbe
add
mov
fcmovnu
jp
call
stos
inc
test
dec
gs
out
arpl
dec
das
push
(bad)
call
inc
out
or
sbb
pop
xchg
xchg
mov
cmpxchg8b
aas
aam
pop
ja
int
inc
inc
push
dec
xor
sahf
push
dec
es
push
mov
popa
sub
dec
xchg
loopne
mov
mov
retf
jecxz
je
xor
add
(bad)
out
jmp
pop
mov
cwde
push
jecxz
add
ins
(bad)
jmp
cmps
gs
mov
adc
or
sbb
cmp
imul
mov
jno
(bad)
addr16
mov
cld
fld
jae
cli
out
pushf
jae
mov
jnp
out
sbb
(bad)
xchg
not
adc
and
push
push
adc
jns
sti
outs
add
xor
out
mov
aaa
(bad)
lods
mov
push
xchg
mov
xor
pop
imul
retf
pushf
aam
leave
shr
nop
clc
stos
addr16
cmp
fsub
add
xor
aad
pop
sbb
jge
pop
leave
xchg
ja
(bad)
pop
arpl
xor
dec
out
fnstsw
cmps
jecxz
push
dec
sar
sbb
sbb
lods
data16
scas
pop
mov
into
pop
sub
repz
cwde
loopne
lahf
out
inc
stos
fistp
sbb
xchg
shr
rcl
mov
mov
clc
subps
and
lods
mov
shl
fwait
sub
and
xor
jge
pusha
push
add
jno
stc
or
add
out
push
and
or
jns
jb
mov
mov
retf
test
out
cwde
repnz
nop
inc
xlat
adc
call
arpl
jmp
or
ins
push
sbb
add
dec
int3
xor
pop
rol
cwd
xchg
mov
xor
cs
aad
jo
push
movs
pop
sub
aas
(bad)
and
jle
cmp
ins
and
stos
int3
ret
ds
scas
lahf
rol
icebp
xchg
lea
leave
add
scas
cdq
dec
or
adc
push
fcmovb
pop
pop
jno
mov
(bad)
ror
sub
ret
push
mov
jne
fwait
pop
mov
xchg
imul
in
cmp
mov
sar
jb
xchg
xchg
fld
fcomp
jmp
add
inc
jg
popf
movs
mov
push
dec
jmp
adc
mov
inc
inc
mov
stc
sub
test
imul
loope
add
out
jmp
xor
cdq
and
push
push
enter
push
cmp
push
sbb
popf
shr
sti
pop
scas
jl
in
cli
add
ss
adc
mov
retf
loop
lea
dec
push
lds
bound
fidivr
inc
or
out
lock
mov
imul
pop
fsubr
or
cmc
cs
test
movs
dec
mov
ds
mov
outs
loop
xor
bound
inc
push
push
jae
lods
xchg
cmp
(bad)
pop
out
pop
aas
pushf
or
fst
int3
jb
cmp
rol
cli
xchg
push
movs
mov
add
fs
retf
push
inc
and
addr16
loop
mov
aas
inc
aad
mov
lea
sbb
xor
push
mov
iret
cmp
in
xchg
jae
dec
out
xchg
push
test
shr
pop
add
mov
(bad)
icebp
test
and
fs
repz
cs
xor
pop
shl
mov
push
movs
sbb
xchg
dec
cmp
push
jp
cmp
jae
add
popf
sbb
pop
out
sahf
jno
(bad)
mov
fcmovnbe
xor
mov
xchg
sbb
imul
fdivr
xchg
adc
loop
dec
and
jo
pop
lods
or
adc
sub
cli
ret
mov
pop
cmp
in
imul
xchg
test
fwait
add
fldenv
nop
ja
in
add
xchg
or
push
push
jmp
sub
xor
sar
stos
push
inc
cmp
cli
test
mov
or
jo
fcom
jb
mov
push
xchg
xchg
out
jnp
mov
pusha
adc
fld
shr
or
push
jne
pusha
ja
nop
pushf
ret
bound
dec
loope
xlat
cmps
mov
push
stc
mov
bound
cmp
lds
lock
call
and
js
push
inc
movs
add
cmp
mov
sub
(bad)
fmul
arpl
push
dec
imul
scas
or
push
imul
sub
cmps
ins
fsubrp
movs
dec
call
jo
xchg
pop
fld
das
clc
repz
(bad)
call
repz
fld
sub
lahf
and
sub
(bad)
fdivrp
mov
xchg
sub
dec
cdq
add
sbb
xchg
pop
xor
out
stos
sbb
mov
scas
stc
xor
jmp
sbb
dec
inc
cwde
data16
cmp
dec
mov
lock
pop
or
sar
(bad)
cwde
(bad)
mov
mov
cmc
nop
(bad)
mov
repnz
fldcw
jae
mov
ror
out
es
jnp
stc
jns
and
mov
push
dec
push
pop
mov
xchg
cmps
xchg
add
cmp
inc
sub
imul
dec
mov
jo
lds
cmp
movs
inc
(bad)
cmp
pop
dec
ds
mov
(bad)
fwait
dec
sub
lods
pop
sbb
jo
and
shl
pop
jg
mov
xor
call
retf
rol
cmp
repz
loope
dec
into
inc
repnz
adc
xor
cmps
xchg
popf
dec
dec
sbb
adc
jbe
icebp
pop
push
loop
cs
sub
xlat
cmps
nop
dec
xor
call
adc
cmp
inc
push
push
pop
scas
pop
dec
out
test
jle
(bad)
lds
lods
popf
lea
xchg
scas
adc
dec
pop
jmp
mov
add
sti
outs
push
push
pop
out
mov
out
adc
mov
jmp
ret
ret
mov
mov
fidivr
es
adc
popf
mov
fcomip
add
mov
sbb
repz
sub
push
jle
inc
cdq
sub
(bad)
dec
sub
(bad)
mov
pop
jbe
and
test
cs
cmp
loopne
mov
retf
xchg
jge
loope
xlat
cmp
iret
mov
ret
xor
aad
dec
(bad)
fmul
pop
and
cwde
adc
xor
xlat
mov
cld
push
cmp
adc
es
inc
shl
ret
jle
ret
mov
xor
fstp
sti
inc
(bad)
loope
xchg
je
mov
icebp
dec
mov
outs
enter
dec
sub
lock
ret
out
test
std
sbb
fucomip
(bad)
mov
push
push
adc
ds
push
xchg
cmp
inc
or
ret
push
test
mov
fs
pop
cwde
pop
popa
mov
dec
sub
test
(bad)
aam
mov
ret
jae
int
pop
and
nop
test
sbb
cmp
inc
jecxz
sti
and
pop
sub
ja
or
dec
jb
sub
pop
aam
mov
mov
mov
mov
je
adc
scas
(bad)
(bad)
sar
push
jae
ret
pop
leave
sti
ret
jne
std
test
cs
mov
pop
call
pop
add
in
sub
out
pop
pop
dec
ror
add
jp
(bad)
inc
aas
xchg
int3
mov
mov
gs
pop
pop
enter
mov
xor
not
inc
mov
sbb
xchg
xor
jnp
mov
fnstsw
sbb
adc
es
jg
test
jge
fstp
pop
mov
xchg
and
mov
xor
sub
adc
cwde
dec
addr16
mov
test
bound
jp
xchg
inc
jp
add
jno
lahf
call
add
adc
add
fnstcw
xchg
push
retf
std
push
xchg
sbb
jp
call
hlt
add
mov
loop
pop
inc
inc
daa
xchg
jbe
dec
adc
jmp
or
xchg
or
sbb
rcl
sbb
add
jae
movs
mov
xchg
in
sub
pusha
add
dec
lds
sub
popa
add
bound
mov
jmp
jo
mov
sub
jle
or
pop
outs
shl
retf
sub
xchg
sbb
cdq
rol
pushf
mov
sub
adc
inc
or
mov
cmps
jmp
or
ins
xor
dec
mov
cli
retf
fld
pushf
call
rcl
adc
xor
and
shr
or
adc
ins
cmp
mov
cld
push
repnz
out
push
imul
mov
cwde
xor
test
dec
add
into
sub
push
mov
sti
mov
sahf
xchg
xchg
loopne
xchg
inc
ror
pop
push
imul
aad
aaa
ret
and
xchg
popf
fwait
sub
mov
mov
cmp
cmp
fbld
add
adc
inc
mov
pop
sub
ret
jns
lds
xchg
mov
pop
push
clc
ficom
mov
xchg
test
lods
or
ja
xor
stos
(bad)
sbb
or
fnstenv
push
or
xor
adc
push
dec
pop
enter
jecxz
(bad)
stc
(bad)
pop
ins
js
bswap
pop
or
mov
or
mov
pop
inc
out
pop
or
fld
dec
arpl
clc
push
call
fldenv
jp
stc
push
mov
pop
inc
inc
mov
aaa
jbe
pushf
dec
cmps
inc
stc
and
and
(bad)
pop
gs
sub
jb
repnz
inc
cmp
add
popa
dec
add
(bad)
sbb
pop
or
outs
inc
mov
or
sahf
je
imul
test
fcom
imul
ret
dec
test
or
mov
or
popf
in
cs
adc
in
or
out
aad
loope
lods
pop
pop
sub
int
dec
ins
xchg
les
test
sbb
push
push
mov
call
sar
sti
int
sub
or
or
mov
lahf
cmp
icebp
dec
lea
in
sahf
jmp
mov
lods
imul
sub
icebp
mov
movups
(bad)
fbld
(bad)
mov
dec
xchg
clc
and
sbb
pop
push
jmp
cwde
pop
cmps
retf
aas
and
ins
in
add
lods
out
jecxz
dec
xlat
xor
sub
sub
test
inc
pop
(bad)
inc
and
(bad)
movntq
test
jbe
sbb
lds
pop
daa
out
cmp
les
jle
lock
call
inc
mov
jnp
jmp
sub
test
rol
jp
test
mov
mov
fldenv
inc
and
clc
sti
mov
inc
jle
mov
rol
aam
imul
pop
jp
cmp
mov
fwait
cmps
fidiv
imul
mov
(bad)
mov
and
dec
cdq
iret
jb
dec
scas
mov
ja
add
ret
stos
inc
sti
addr16
adc
test
pop
sub
push
jmp
mov
pop
mov
in
and
rcr
(bad)
loop
xchg
test
sbb
cli
jle
ins
sbb
lods
mov
test
mov
cmps
or
jecxz
jmp
call
mul
mov
repnz
or
jbe
cmp
mov
push
sub
add
fmulp
shl
xor
imul
jns
pop
sbb
add
mov
pop
push
nop
cdq
push
icebp
aad
ret
sub
xor
daa
push
in
mov
fisub
scas
mov
jl
cmps
or
(bad)
mov
sub
cmc
jp
or
pusha
xchg
loopne
in
cmp
mov
outs
pop
mov
and
push
loope
adc
jp
daa
jmp
call
cmps
mov
cdq
retf
lahf
in
pop
sbb
in
imul
scas
(bad)
call
stos
call
mov
and
ja
or
sbb
aad
add
pop
mov
fdivr
outs
(bad)
stc
inc
repnz
daa
arpl
mov
mov
cmp
and
test
out
jbe
ror
xchg
push
clc
repz
mov
repz
cmp
or
out
sub
sub
mov
cmp
pop
or
movs
sub
cmp
shl
jae
or
les
xchg
jbe
clc
jo
int3
or
cmp
push
stos
je
iret
cwde
rcr
mov
popf
or
and
adc
add
cwde
jmp
adc
out
inc
sahf
scas
mov
mov
jbe
xchg
inc
dec
xor
dec
int3
sar
push
scas
int3
sub
bound
jb
add
xchg
test
stos
xchg
ficom
popa
ss
cmp
stos
test
cmps
pushf
push
out
ret
xchg
and
div
movs
movs
fmulp
mov
mov
cld
out
mov
lock
mov
jmp
adc
jbe
clc
push
aam
retf
mov
test
xchg
fidivr
(bad)
cmp
out
mov
loop
mov
gs
(bad)
cmc
pop
jbe
adc
ftst
push
sbb
repz
outs
scas
cmp
jae
or
push
mov
nop
jg
repz
xchg
iret
mov
dec
pop
dec
mov
xchg
sar
inc
jp
pop
sub
imul
push
inc
js
retf
fistp
mov
mov
mov
aaa
mov
pop
and
sbb
pop
xchg
or
inc
xor
in
jbe
dec
jb
inc
scas
xor
pop
inc
mov
ins
or
sub
call
pop
sti
nop
xor
outs
inc
movs
sub
repz
out
fwait
and
mov
add
sub
and
push
js
mov
daa
cdq
xchg
mov
test
push
mov
cli
jbe
adc
int3
mov
cmp
pop
cld
js
xchg
out
push
les
arpl
jg
shr
or
pop
ins
mov
loop
jmp
push
dec
stos
cmc
and
pop
sbb
cmp
jle
adc
repz
push
test
leave
arpl
xlat
mov
clc
add
mov
pushf
push
add
inc
(bad)
repz
add
iret
repz
mov
hlt
push
out
fnsave
js
xchg
out
repz
sbb
bound
stc
xor
add
sbb
mov
push
shl
dec
rcl
shl
retf
and
jmp
das
cmps
nop
jno
movs
test
pushw
sub
jno
add
xchg
push
pop
fistp
xchg
sub
sahf
push
hlt
dec
pop
xchg
(bad)
retf
adc
(bad)
jns
test
mov
imul
mov
adc
out
loop
sub
or
dec
jge
pusha
sar
fsubr
cwde
jns
arpl
pusha
lahf
mov
ins
pop
das
repnz
pop
adc
jle
jne
ins
arpl
xor
and
inc
inc
fidiv
fwait
dec
mov
jp
js
pop
sub
dec
add
and
xchg
test
int3
cld
mov
jb
pop
mov
retf
outs
inc
jmp
xor
and
mov
mov
fcmovnu
test
push
in
mov
arpl
cs
stos
sbb
sub
jno
xor
xchg
mov
mov
ins
adc
and
adc
inc
sbb
stos
ror
and
sbb
dec
test
out
(bad)
iret
and
pop
sti
pop
dec
aaa
leave
sbb
std
in
call
movs
cmp
sub
lea
retf
push
shr
add
je
daa
and
ds
inc
jno
or
xchg
repz
iret
imul
loopne
xor
dec
dec
jae
push
sbb
sub
sbb
loop
lahf
(bad)
int
sub
add
aas
sti
in
jmp
movs
sti
add
mov
shl
fsub
retf
clc
sub
jecxz
(bad)
fisubr
push
jge
mov
aaa
cmp
lds
pusha
je
rcr
mov
test
nop
sub
cmp
push
jle
inc
(bad)
xchg
(bad)
fcom
pop
push
in
outs
sub
out
xor
(bad)
jg
push
rcr
mov
jb
dec
cmp
sahf
pop
mov
push
add
in
jl
jmp
jo
pop
dec
ret
mov
push
mov
cwde
and
fst
iret
movs
scas
ret
popf
mov
ffreep
pop
enter
cmp
inc
or
aad
mov
lea
add
jmp
or
cs
ss
mov
retf
ficomp
mov
out
xor
shl
pop
lock
call
push
rol
inc
out
test
jecxz
arpl
arpl
add
aad
mov
push
movups
fmul
push
push
out
push
mov
stos
inc
mov
dec
mov
gs
xor
cmp
ds
stc
mov
xor
leave
mov
ja
pop
mov
out
pop
mov
call
cmp
push
aaa
cmp
push
add
sbb
or
dec
push
mov
fistp
sar
fwait
pusha
xchg
popf
repnz
inc
xchg
inc
and
aad
loope
push
dec
mov
cmp
inc
lods
fsub
and
aam
nop
mov
lock
test
stos
cwde
call
ror
push
retf
test
push
xor
sahf
jns
add
cmp
inc
jmp
and
lods
cmp
or
outs
addr16
inc
or
adc
retf
mov
scas
push
(bad)
xchg
lds
or
in
push
cli
ret
mov
fsub
jecxz
cmps
xchg
dec
sbb
imul
sbb
mov
rcl
pop
mov
push
(bad)
(bad)
pushf
mov
xor
xchg
and
cdq
retf
add
ficomp
nop
loope
aad
pop
sbb
mov
inc
adc
add
(bad)
sti
mov
in
xchg
in
pusha
mov
shr
dec
push
fstp
push
and
popa
and
sub
or
mov
sub
es
stos
inc
shl
leave
push
lods
or
mov
jg
jmp
and
(bad)
call
xor
repz
push
les
mov
scas
and
(bad)
push
inc
stos
sub
fist
jmp
loop
in
test
push
sub
retf
imul
fst
pushf
in
mov
cli
sub
sub
std
push
sbb
and
lods
mov
in
loopne
stos
sti
je
push
xor
mov
clc
icebp
shl
nop
mov
loopne
lods
mov
inc
cmp
test
pop
and
mov
cli
or
sbb
ss
aad
sbb
popf
xchg
rcl
fldpi
ret
stos
adc
xchg
jo
xchg
cmp
and
xor
mov
gs
dec
add
enter
mov
sbb
es
rcl
cmp
add
jl
(bad)
enter
xchg
push
out
xor
xor
fs
jne
adc
push
pop
ret
loop
data16
inc
inc
fneni(8087
sti
xchg
repz
sub
jnp
enter
pop
popa
and
pop
cmp
cmps
and
enter
test
fist
xor
xor
sbb
daa
cld
les
popa
ficomp
jl
and
dec
push
jbe
pop
inc
adc
mul
cmp
cmp
bound
stc
pop
out
mov
sub
jge
jo
and
mov
and
sbb
cmp
dec
xchg
stc
xor
mov
aas
arpl
(bad)
jbe
sub
daa
or
ss
add
out
jle
mov
sub
mov
cmp
das
jmp
mov
cwde
sub
mov
xchg
or
sti
cmc
xor
iret
(bad)
fwait
aaa
jge
xor
pop
int3
xchg
test
jmp
inc
pop
pop
in
mov
pop
sbb
mov
out
ds
push
(bad)
mov
mov
call
pop
ret
fsubr
rcl
(bad)
dec
mov
ror
adc
ja
cmps
push
and
push
xchg
ret
pop
sub
fs
out
bound
call
js
pop
xor
mov
ins
ror
inc
pop
lock
rcl
int3
cmp
outs
lahf
xchg
mov
cmp
js
mov
cwde
aaa
add
jecxz
pop
js
test
div
sbb
dec
addr16
sbb
jmp
pop
mov
or
pop
and
xchg
call
xor
imul
cmp
sar
aad
dec
jnp
rcl
jmp
mov
imul
jmp
iret
ja
jne
fs
clc
test
repnz
sar
cs
pop
jae
jns
xor
inc
scas
sti
pop
stc
das
aas
or
adc
pop
jge
ja
repnz
lods
ins
mov
div
adc
xchg
in
mov
inc
push
pop
push
xchg
fadd
std
jo
or
inc
imul
sbb
outs
push
sbb
retf
mov
jmp
lock
cli
or
push
lea
or
mov
out
loopne
and
shl
arpl
aad
sbb
xor
imul
inc
jmp
ins
call
lahf
loop
retf
mov
pusha
(bad)
je
(bad)
enter
jecxz
scas
mov
pop
ss
adc
cmp
push
clc
push
xchg
jecxz
add
cmp
inc
xor
pushf
int3
mov
retf
jae
push
or
sub
inc
mov
dec
fisttp
push
cmps
mov
nop
repz
clc
inc
or
sbb
inc
pop
fldcw
addr16
dec
push
retf
stos
cmp
dec
in
mov
movs
(bad)
xor
cmc
pusha
ss
fld
lock
pop
cmp
sub
add
sti
pop
pop
pop
(bad)
push
aas
out
cmp
mov
(bad)
dec
pop
retf
and
adc
std
nop
mov
jp
mov
adc
in
fwait
das
xchg
push
mov
js
xor
cmp
push
ds
cmp
test
ror
and
or
in
jo
cs
cli
add
pop
adc
lea
jl
imul
cmps
xlat
pop
or
jecxz
loope
mov
sub
xchg
pop
dec
pusha
mov
imul
test
test
sbb
call
push
dec
popa
test
pop
loope
lds
(bad)
cmp
jae
and
and
add
mov
add
cmp
fiadd
inc
sbb
dec
int
push
rcl
and
xor
iret
ror
pop
aad
cmps
clc
mov
cwde
xor
cli
pop
loope
imul
xchg
int
adc
fnstenv
jb
outs
fsub
out
xor
mov
push
pop
cmp
cwde
mov
movs
shl
jae
jge
fwait
adc
dec
fstp
lods
cmp
jmp
mov
movs
push
test
sub
sahf
or
pop
ret
daa
add
and
fcmovb
shl
lea
in
popf
lods
shr
pushf
test
pop
test
pusha
cwde
inc
lods
(bad)
imul
imul
ret
add
jo
and
inc
pop
xchg
dec
int3
es
in
sahf
ror
xor
popa
mov
hlt
ret
jb
add
push
mov
cwde
pop
mov
and
arpl
sbb
retf
push
adc
mov
mov
xlat
sub
jbe
push
fnstsw
sbb
sahf
xor
lahf
test
sbb
repnz
pop
jno
fst
or
mov
xor
sbb
pushf
je
push
or
nop
mov
and
scas
imul
data16
leave
xor
and
outs
cmps
fsub
cmp
mov
mov
or
ins
repnz
shl
dec
cdq
lods
mov
jmp
aas
stc
test
push
xchg
shl
add
(bad)
push
lock
clc
sbb
or
fdiv
mov
mov
inc
lock
and
or
jmp
fs
rcr
sub
push
mov
into
and
xor
jns
stos
and
arpl
(bad)
cmps
adc
mov
push
push
cli
mov
jbe
dec
inc
jno
mov
jae
pop
xchg
int
enter
stc
push
push
clc
or
scas
daa
cmps
mov
add
push
retf
das
jb
stc
add
pop
mov
cmp
scas
js
(bad)
in
sahf
dec
stos
mov
fsubr
add
leave
out
pop
jne
mov
int3
ds
sub
xchg
test
mov
stc
out
mov
or
and
arpl
cld
jge
xchg
xchg
cmp
lahf
fisttp
jno
das
scas
add
sub
aam
popf
imul
jecxz
xor
and
fs
(bad)
(bad)
fild
lods
nop
in
or
adc
jbe
and
mov
es
push
mov
ins
adc
in
cmp
and
cmp
mov
push
or
or
pop
mov
inc
jb
and
popf
mov
faddp
add
movs
xor
in
ds
dec
xchg
es
popaw
das
dec
adc
loop
jnp
imul
fstp
dec
lock
lea
not
cmp
jmp
mov
or
call
pop
pop
adc
call
shl
push
ins
pop
test
pop
sbb
std
int
xacquire
gs
cmp
cmc
retf
jb
jecxz
push
call
cmp
or
cmps
cmp
add
mov
in
fcmovbe
xchg
or
inc
and
movs
cs
or
fidiv
icebp
mov
popa
mov
aam
cmp
iret
call
cmps
iret
ins
cmp
jmp
pop
aaa
ja
fcom
mov
js
lea
in
pop
and
pop
loop
cmps
popa
bound
pop
mov
enter
arpl
lods
pop
add
cmp
push
sbb
xchg
dec
push
(bad)
lahf
mov
sbb
xor
out
sub
and
fcom
xor
popa
imul
and
xchg
push
jecxz
pop
pop
dec
in
xlat
shl
dec
jge
pop
rcr
inc
mov
rol
jno
add
xchg
ror
fidiv
xchg
popf
aas
xchg
jmp
mov
test
jge
or
out
and
in
pop
adc
add
int
pop
gs
jne
sti
sbb
or
dec
pusha
int3
add
enterw
xchg
inc
mov
mov
loope
test
pop
xor
lahf
and
popa
pop
or
mov
aam
xor
fwait
pop
dec
les
add
(bad)
jno
add
std
lds
repnz
fadd
push
inc
sub
sub
jmp
popa
mov
pop
sub
cmp
or
inc
mov
adc
cmp
aad
sbb
(bad)
xor
je
add
xchg
cmps
mov
pop
sbb
das
(bad)
les
sub
sub
in
mov
adc
sub
jbe
je
jae
push
in
jmp
(bad)
not
or
jecxz
dec
mov
inc
ret
pop
nop
std
mov
pop
(bad)
mov
mov
mov
shr
sti
push
pop
rcl
dec
cdq
stos
xor
bound
cmp
xor
inc
cmp
inc
movs
(bad)
mov
aam
std
lods
iret
jae
or
or
out
loope
adc
cs
hlt
dec
add
adc
out
dec
and
xchg
mov
jg
xor
cmps
ins
pop
xchg
mov
ins
xchg
in
mov
sbb
push
ret
loop
xchg
jno
pop
js
pop
sar
lods
scas
mov
jno
inc
jo
int3
pop
sbb
pop
loop
pop
push
imul
sbb
stos
fadd
fld
jp
into
jmp
push
dec
xor
adc
out
pusha
(bad)
fisub
adc
lock
les
mov
pop
dec
xor
and
aaa
sub
fidivr
test
enter
xor
xchg
call
mov
je
int3
fwait
mov
pop
cdq
pop
push
ds
es
dec
add
stos
cmc
mov
movs
push
mov
jmp
cmp
inc
popa
ret
retf
adc
or
dec
das
mov
pop
sbb
xchg
psraw
test
ins
loop
popf
test
pop
cmps
adc
ret
push
fs
scas
mov
seta
sbb
scas
call
adc
scas
pop
cmp
push
mov
jp
scas
shr
mov
in
xor
or
and
loop
cmp
sti
lahf
into
out
fmul
adc
ins
shr
add
(bad)
xor
mov
cmc
loopne
push
add
dec
movs
pop
sub
pop
xchg
mov
js
inc
fidivr
pop
jecxz
xor
movs
es
sbb
scas
and
test
pop
fcom
mov
push
jl
cmp
jg
xor
pushf
xor
mov
rol
mov
lock
ret
and
dec
mov
cmp
retf
outs
les
lds
mov
jl
cmc
adc
dec
outs
hlt
mov
push
mov
test
out
retf
fld
test
(bad)
in
fs
mov
fnstenv
lds
xor
daa
inc
addr16
daa
sbb
(bad)
push
test
jl
mov
pushf
mov
call
pop
and
jmp
lahf
mov
jmp
sahf
xchg
add
mov
jns
dec
inc
sub
in
call
cs
icebp
fcom
lods
sahf
test
std
fsub
pop
add
jg
sahf
mov
xchg
call
mov
add
dec
pop
pop
push
dec
lahf
xchg
in
mov
add
xchg
dec
and
jne
fdivrp
adc
pop
clc
cmp
arpl
test
(bad)
mov
iret
es
or
call
fcom
xor
cs
sub
ins
mov
add
mov
sbb
xor
pushf
push
cmc
jbe
loop
test
jl
popa
sub
add
fld
sub
xor
or
retf
sub
aad
mov
aaa
ficomp
cs
xor
mov
fcmovb
jne
aad
cmpxchg
push
dec
rcl
icebp
aaa
mov
pop
outs
test
add
ins
cmp
in
retf
and
ins
(bad)
adc
inc
std
adc
xchg
mov
rcl
cmp
jbe
pop
and
or
les
push
imul
xchg
mov
movs
or
jle
aaa
inc
cwde
jae
push
pop
adc
repnz
cmp
sbb
sub
mov
ficomp
lods
xchg
fdiv
shl
push
pop
or
jl
inc
bound
xor
je
(bad)
scas
cmps
xchg
dec
xlat
test
(bad)
mov
jns
cwde
(bad)
mul
or
clc
xor
pushf
add
fs
sub
sbb
dec
dec
mov
in
aad
add
dec
fdiv
push
ja
out
dec
mov
adc
adc
dec
and
(bad)
std
cmp
add
add
add
cmps
mov
out
shr
cmps
or
xlat
mov
daa
dec
adc
int
into
and
retf
fadd
(bad)
fild
xor
jne
cdq
mov
stc
push
xchg
outs
sub
and
in
or
push
idiv
push
sub
mov
sbb
pop
pop
sub
sbb
add
neg
fneni(8087
mov
in
push
mov
mov
push
bound
cmp
and
dec
mov
add
dec
add
mov
add
mov
xchg
xchg
push
pop
and
cs
pop
mov
leave
idiv
les
js
sub
sbb
and
scas
out
sub
lds
push
adc
mov
xchg
push
lea
mov
jae
popf
jnp
in
sahf
mov
xchg
repz
lea
inc
popa
movs
jb
mov
jne
daa
ret
ret
cli
adc
jno
(bad)
cmp
(bad)
scas
iret
lea
call
test
inc
daa
lahf
les
pop
dec
fistp
mov
jl
je
ret
scas
mov
sahf
icebp
fld
dec
cmps
jae
push
inc
mov
xor
dec
leave
jb
fdivr
jecxz
lds
sub
jns
ds
std
stos
push
addr16
ror
(bad)
les
test
sbb
mov
cmp
xchg
jns
inc
movs
dec
xchg
sti
(bad)
jne
mov
cli
pop
mov
sub
loope
in
or
(bad)
adc
popa
addr16
addr16
in
ficomp
inc
cmp
sbb
or
mov
les
jo
xlat
rol
je
cmc
cmp
push
mov
push
movs
(bad)
sbb
scas
pop
nop
xor
aaa
es
jno
inc
pop
sahf
rep
and
add
pusha
xchg
inc
jg
jns
xor
mov
je
push
enter
cdq
pop
inc
or
xor
mov
cmp
in
sbb
xor
adc
ins
jbe
xchg
push
xor
nop
out
cld
dec
mov
adc
mov
and
scas
jl
sbb
arpl
sbb
sub
in
xor
or
push
and
jge
push
fiadd
mov
call
in
sti
out
push
jae
test
out
sbb
les
fisttp
mov
es
push
push
jmp
loopne
sahf
out
retf
jg
dec
cmc
and
cld
pop
push
jbe
data16
mov
jecxz
dec
jmp
pop
test
sbb
xor
fsubr
movs
imul
leave
fdivr
push
adc
stos
mov
(bad)
cmp
xor
loope
sti
mov
mov
call
and
test
sbb
mov
dec
xchg
jnp
iret
je
adc
in
test
add
lods
or
jo
lahf
(bad)
or
out
je
xchg
and
test
movs
sub
ret
sbb
inc
loop
cmc
cmp
(bad)
push
cmp
mov
jl
adc
into
or
adc
idiv
daa
lea
add
mov
mov
or
arpl
inc
xchg
add
pop
xor
mov
mov
push
dec
or
sbb
test
stc
add
mov
push
pop
out
push
mov
inc
or
dec
das
and
test
inc
xor
ret
xchg
loopne
in
or
sub
xchg
stos
dec
in
inc
cs
cwde
pop
sti
jmp
retf
outs
mov
inc
in
leave
dec
test
test
dec
jnp
mov
fisttp
js
cdq
lods
jp
cmp
loopne
pop
lea
fsubr
call
mov
dec
cmps
or
test
xor
mov
dec
shl
inc
add
jecxz
mov
sbb
lea
mov
out
jle
push
jns
pop
rcl
dec
sbb
jmp
cmp
mov
cmp
mov
fcom
js
sub
cmp
xchg
cmp
fimul
fs
inc
mov
mov
pop
xlat
pop
ins
mov
call
mov
cmc
nop
mov
ins
(bad)
cmp
(bad)
inc
out
xlat
aas
sub
stos
fnstenv
xor
pop
jmp
icebp
cmp
je
mov
dec
iret
xchg
neg
enter
jae
out
in
lods
iret
xchg
es
or
push
jp
fnstcw
xor
enter
leave
sbb
adc
dec
je
jecxz
sub
sar
xchg
mov
mov
addr16
push
daa
(bad)
scas
iret
in
and
push
xor
test
adc
add
xor
sar
out
pop
data16
mov
jnp
icebp
and
dec
jo
and
outs
or
idiv
test
lds
rcr
add
mov
ficom
in
xor
jl
jmp
out
fld
movs
mov
mov
jmp
js
push
stc
out
lds
ins
mov
push
cmps
loop
hlt
bound
je
xchg
adc
and
push
dec
ins
add
mov
sub
ja
icebp
mov
fisubr
aaa
aam
jb
pop
xchg
jp
xor
add
repz
xchg
add
jnp
jp
inc
mov
pushf
js
add
jmp
retf
mov
mov
cmp
repz
jne
and
cmpps
dec
test
xor
cwde
inc
and
xor
fbld
sbb
lock
mov
inc
or
loope
stos
imul
xor
loopne
xor
scas
and
xlat
xchg
sbb
fcomi
jbe
inc
pop
dec
cmc
ds
sbb
in
mov
sub
cmp
call
lahf
push
jbe
inc
stos
sbb
cmp
aas
es
xchg
mov
in
out
push
popa
int3
loopne
(bad)
mov
lea
es
or
inc
inc
lods
push
fnsave
sahf
fmul
push
or
ja
retf
je
mov
stos
out
aaa
mov
mov
ret
out
popa
imul
sbb
jmp
xchg
inc
stc
pop
call
and
inc
movs
mov
sbb
mov
adc
das
inc
prefetch
push
nop
out
ror
and
mov
test
fcomp
loopne
pusha
jp
or
sub
xor
mov
mov
dec
movs
popf
push
scas
inc
push
pop
ret
out
(bad)
ins
mov
inc
jmp
cmp
xchg
inc
xor
rcr
lds
imul
jg
into
outs
movs
or
ja
mov
and
es
fimul
push
lds
or
ror
sbb
stos
movs
sub
xor
icebp
test
fdivr
shl
fistp
(bad)
mov
inc
jecxz
test
add
mov
push
pop
push
pop
int3
ins
dec
push
jp
cmp
(bad)
(bad)
jmp
jb
(bad)
pop
sub
dec
xor
mov
mov
adc
pop
or
inc
or
movs
mov
xchg
sub
fwait
std
stos
mov
and
or
sahf
fsub
mov
gs
sbb
jmp
pushf
andps
or
shl
(bad)
shr
(bad)
loope
movs
(bad)
jg
mov
mov
cmps
loop
xor
xor
sahf
rcr
aam
dec
cli
rol
mov
mov
sbb
dec
sahf
(bad)
xor
(bad)
adc
fdivrp
pop
pushf
pop
test
mov
push
(bad)
repnz
xor
(bad)
mov
(bad)
adc
je
std
and
push
mov
dec
push
es
ja
or
fisttp
aad
call
test
inc
je
std
lock
call
push
test
(bad)
(bad)
rcl
pop
cmps
and
fwait
or
sar
inc
and
icebp
ds
jnp
or
nop
fdiv
sar
mov
sub
ror
mov
jmp
mov
push
cmp
ins
mov
jno
cdq
adc
lods
adc
xchg
mov
sbb
ss
pop
fistp
das
push
rol
inc
nop
xchg
sbb
sbb
xchg
mov
(bad)
call
sbb
pop
push
repnz
mov
jmp
popf
mov
stos
je
ins
(bad)
lahf
jns
pop
pop
pop
sub
lods
movs
push
std
loopne
(bad)
mov
push
jnp
jecxz
or
mov
pop
mov
mov
push
pop
mov
sbb
mov
aad
mov
xor
jns
xchg
adc
xchg
adc
cli
mov
push
fbld
in
jp
(bad)
in
sbb
add
inc
je
mov
and
dec
sub
dec
inc
and
ror
inc
adc
jecxz
push
cmp
in
shl
mov
pop
mov
jp
cdq
loop
mov
sub
sbb
popf
xchg
fcom
push
or
inc
stos
je
mov
cmp
push
or
rcr
and
lods
pop
mov
or
inc
lahf
mov
add
add
xor
int
xor
dec
or
icebp
lds
or
xchg
cli
packuswb
push
push
push
out
mov
xchg
retf
or
jne
daa
out
inc
sub
xor
frstor
inc
pop
mov
jns
(bad)
or
int
fld
stc
mov
lds
mov
jmp
push
aas
and
mov
cmp
jle
add
add
mov
xor
outs
xlat
sub
mov
popa
jl
push
mov
ror
jae
pcmpeqd
xor
aad
rcr
xor
das
push
sbb
stos
mov
inc
push
in
mov
cmp
pop
xlat
push
xor
inc
js
cmp
or
mov
dec
shl
imul
aas
xchg
nop
cmp
jno
mov
fwait
mov
out
inc
pop
pop
or
and
imul
lahf
mov
stos
xor
mov
and
pop
push
(bad)
test
shr
adc
mov
and
hlt
mov
pop
mov
dec
add
pop
cmp
(bad)
dec
sbb
sti
repnz
inc
fsub
aas
nop
cld
jle
mov
outs
mov
xchg
inc
sar
daa
push
sbb
rcr
lods
mov
push
jecxz
imul
adc
adc
loope
in
fist
sbb
adc
cmc
sbb
xchg
pop
push
mov
xchg
cmps
jecxz
pop
jo
cdq
aad
mov
jp
sbb
adc
mov
dec
int3
jno
adc
cmp
daa
lods
inc
sbb
aam
es
popa
adc
cmp
call
movs
aad
mov
xchg
inc
jecxz
xchg
into
in
xor
mov
fcomp
or
fs
out
xor
ret
stos
jb
dec
xor
lahf
popa
movs
dec
add
push
fst
in
(bad)
mulps
(bad)
movs
lock
or
lods
xor
push
call
add
xor
cmp
loopne
sbb
cmp
out
ins
jnp
add
adc
lods
push
xchg
or
nop
inc
loop
mov
rol
mov
adc
test
xor
add
call
dec
xchg
scas
js
pop
pop
ss
nop
cmps
and
jge
and
cwde
retf
or
fwait
adc
add
retf
sub
cmp
fucomi
mov
cmp
add
ficomp
aaa
adc
push
pusha
inc
test
adc
retf
pusha
lods
out
pop
push
scas
cmp
fmul
mov
push
cmp
sbb
loopne
cwde
inc
mov
push
icebp
retf
or
push
push
test
xor
xor
and
dec
sub
inc
push
mov
mov
mov
xor
pop
pop
cmps
addr16
xor
test
push
dec
(bad)
jns
jne
xor
mov
sahf
cld
in
pop
inc
out
mov
inc
mov
(bad)
icebp
cmp
or
inc
fyl2xp1
jne
mov
inc
mov
int
clc
pushw
ja
in
imul
xor
cmp
repz
mov
xor
sbb
cld
or
fnstsw
iret
mov
and
popa
jg
fisttp
mov
sbb
or
mov
push
sahf
in
inc
scas
dec
xchg
pop
xor
sbb
mov
out
xor
sub
jno
mov
cs
enter
xlat
mov
cld
sub
stos
jbe
and
sti
push
jbe
push
pop
cmp
mov
jp
jle
fcmovu
data16
movs
ret
lock
or
mul
jge
test
xor
adc
rol
movs
cwde
shl
jns
pushf
jb
mov
sbb
push
and
or
and
loopne
jb
jg
cmps
xchg
retf
jg
out
pushf
mov
loope
outs
mov
pop
and
std
mov
mov
or
lods
inc
cmc
cmp
xor
(bad)
cs
stos
inc
inc
test
mov
xchg
test
aam
jg
and
out
adc
lock
sub
out
sub
pop
dec
movs
add
out
test
xchg
shl
sub
dec
cmp
repnz
popf
out
fdiv
ror
adc
and
jl
mov
loopne
dec
pop
dec
in
dec
popf
in
shr
mov
outs
and
dec
xchg
call
ja
pop
retf
dec
jge
push
clc
mov
iret
fisubr
ds
stos
popa
xchg
lods
sub
jae
xor
push
jl
push
clc
mov
add
imul
lds
call
fsincos
(bad)
jecxz
pop
test
mov
ret
std
inc
cmp
ins
or
mov
fadd
retf
cs
fld
mov
mov
sub
xchg
jge
jle
pop
jno
xlat
pop
fwait
mov
jb
pushf
add
cwde
pop
rcr
lds
adc
loope
jp
sbb
test
gs
scas
cmp
mov
mov
jp
cli
cmps
jmp
mov
shl
sbb
jb
cmps
call
xor
add
dec
mov
and
stos
sub
ja
jl
lock
ss
adc
loop
out
retf
sar
jbe
mov
jl
pop
or
mov
jbe
adc
add
mov
jg
in
or
jno
std
mov
dec
(bad)
scas
inc
dec
jo
push
sub
loop
push
jnp
jbe
movs
je
mov
cmp
mov
lods
adc
lahf
mov
mov
jnp
dec
dec
or
xor
xor
jns
lock
repz
mov
adc
add
or
lea
push
rcl
pop
inc
cmps
add
mov
aas
pop
movs
mov
repnz
push
sub
xchg
or
inc
popf
(bad)
ja
or
xor
cmps
sar
mov
popf
movs
shl
xor
sub
dec
push
push
mov
pop
inc
call
or
out
stc
jg
mov
xor
cdq
arpl
sbb
lock
out
cdq
aaa
lea
dec
pusha
lods
inc
sar
sub
jmp
mov
sub
mov
cld
scas
loopne
sbb
loopne
shl
mov
(bad)
push
mov
push
dec
imul
mov
aam
mov
pushf
(bad)
jg
ss
movs
rcl
jl
dec
imul
lock
push
mov
mov
pusha
push
sub
push
xchg
jbe
stos
test
int
jmp
sbb
cli
xlat
xor
add
pop
fs
push
fadd
ss
int3
dec
je
retf
into
jp
out
out
pop
xor
(bad)
hlt
xor
xchg
stos
or
inc
pop
jmp
pop
in
es
inc
les
sti
sbb
mov
out
rcr
pop
pop
clc
xor
jnp
ins
iret
aaa
sahf
aad
xchg
les
xlat
leave
lods
push
pop
or
imul
inc
(bad)
sti
mov
lahf
push
push
clc
dec
cmp
xchg
adc
(bad)
jo
popa
fstp
and
icebp
and
sbb
sahf
mov
dec
pusha
movs
push
adc
xchg
mov
cmp
aas
jle
repnz
jg
push
jb
jae
shl
inc
add
into
cdq
inc
push
mov
call
pop
dec
in
xor
add
out
cwde
dec
retfw
pop
ror
or
adc
shl
mov
jmp
push
inc
pushf
loop
xor
mov
jecxz
push
mov
sub
or
and
(bad)
jno
dec
loopne
push
fmul
in
scas
ja
jae
sbb
loope
fs
jnp
xor
loope
cwde
lock
fwait
xor
shr
pop
cs
cld
mov
jo
push
dec
ds
adc
sar
mov
les
out
test
jmp
or
sub
jge
ins
xlat
adc
mov
lods
sbb
or
inc
mov
xchg
cmps
and
cwde
xchg
(bad)
inc
pusha
dec
xor
mov
imul
mov
pop
xor
std
pop
stos
fmul
mov
rcl
xor
add
cmp
dec
mov
outs
or
add
stos
fidiv
lods
pop
rcr
test
fistp
sub
adc
daa
dec
sub
sbb
dec
nop
in
call
push
repz
enter
mov
and
jmp
nop
sbb
stos
pop
add
fcmovnu
sbb
jbe
sbb
packuswb
sub
cmp
loope
mov
cmps
je
ins
xchg
out
(bad)
repz
inc
xchg
lods
xor
mov
cmc
jp
sub
adc
add
cmps
lahf
cmps
pop
jmp
add
sbb
adc
retf
push
int3
fld
mov
mov
sub
sbb
inc
and
mov
mov
add
outs
jge
les
gs
outs
mov
movs
xor
or
inc
addr16
jne
push
mov
outs
addr16
xchg
fnstenv
pop
cmp
sub
adc
rcr
jmp
mov
dec
in
or
mov
int3
fs
push
jo
(bad)
out
arpl
nop
outs
ret
add
cli
jmp
lds
add
and
adc
jnp
sbb
and
outs
cli
test
arpl
pop
jge
xchg
pop
clc
jge
aam
jnp
xchg
div
cs
fst
lds
mov
cmp
sbb
adc
jl
mov
fxam
xchg
mov
pop
stos
mov
push
daa
inc
fstp
and
out
push
mov
push
inc
dec
out
imul
in
jbe
fsub
xchg
(bad)
dec
ret
jae
enter
call
push
mov
(bad)
xlat
cmp
outs
sbb
pop
and
mov
shl
stos
push
adc
cmp
pop
and
(bad)
outs
and
jbe
pop
arpl
xor
pusha
push
ror
fnstsw
int
ins
jecxz
mov
pop
in
les
stos
xchg
sub
or
xchg
int
push
sub
pop
test
fcmovbe
pop
rol
cli
outs
jns
inc
add
dec
pusha
cmp
push
mov
cmp
jp
sbb
adc
out
loop
xchg
and
shl
int3
movs
mov
(bad)
push
push
(bad)
(bad)
jns
pop
mov
ins
ins
retf
pop
setl
aas
ds
(bad)
jle
add
(bad)
mov
in
rcl
adc
cli
jno
add
pushf
mov
and
cwde
xor
pop
dec
dec
out
(bad)
mov
dec
jg
jno
out
ss
cmp
cmps
pop
test
stc
jne
xchg
xor
mov
fst
bound
and
dec
and
stc
or
xor
daa
sub
xchg
ret
jmp
mov
push
aam
mov
cwde
ret
xor
jg
lods
fimul
pop
adc
or
hlt
sub
cmp
mov
ret
jmp
test
and
jge
mov
stc
fwait
test
in
sbb
aam
push
idiv
adc
stos
sub
add
sub
test
push
ss
or
iret
mov
add
fild
in
out
xchg
mov
enter
mov
jnp
xchg
int
pop
or
push
lods
xchg
sbb
in
pop
jl
ror
xchg
pop
les
movs
je
pop
stos
add
imul
ficom
mov
inc
xchg
clc
outs
pop
mov
push
pop
adc
ror
jmp
xor
cmp
xor
add
mov
mov
dec
sti
push
pop
fnsave
push
push
sbb
jns
lods
test
or
test
std
mov
inc
cmp
pop
pavgw
fild
add
push
push
popf
int3
lods
test
cmp
xor
sbb
add
or
mul
xor
adc
fsubr
ins
mov
cs
mov
push
mov
out
ja
pushf
dec
push
or
loopne
pushf
jp
jns
push
xlat
inc
outs
mov
cwde
dec
(bad)
mov
pop
jmp
push
fcmovnbe
xchg
xchg
add
xlat
rcr
arpl
sub
or
in
and
sbb
int3
jp
dec
jb
pop
pop
popf
nop
sar
dec
add
and
fsub
mov
sahf
je
add
cld
dec
mov
aam
hlt
and
fcomp
sub
addr16
pop
sub
pop
fs
jl
sbb
pop
imul
js
sub
mov
mov
jg
ins
clc
adc
fsubrp
pop
adc
fs
jl
int3
cmp
sbb
adc
loopne
add
sub
pop
outs
dec
mov
mov
rol
sahf
push
pop
xor
inc
into
pop
test
add
jecxz
sub
ror
int3
cmp
retf
add
cmp
sar
scas
mul
mov
mov
jge
repnz
adc
into
cmp
in
loop
(bad)
cmps
fwait
xchg
jle
xchg
jmp
ja
imul
sar
pop
call
call
movs
xchg
test
xchg
and
ret
cwde
push
(bad)
mov
cmp
mov
je
push
pop
push
shl
mov
cld
enter
test
std
daa
and
mov
enter
adc
adc
nop
inc
xchg
add
mov
sub
push
je
sub
xchg
inc
cs
iret
pop
mov
int
add
add
pusha
mov
pop
and
sub
push
sub
xor
rol
movs
mov
fwait
mov
and
jb
jo
cmps
or
aad
mov
push
sti
shr
push
(bad)
fs
xchg
mov
jmp
or
lock
pushf
and
sbb
imul
xchg
inc
enter
inc
add
xlat
in
add
pushf
es
(bad)
or
jns
mov
retf
outs
fnsave
xor
shr
ss
cs
call
pushf
repz
mov
mov
outs
repnz
fwait
sti
mov
mov
jo
pop
xor
mov
(bad)
mov
pop
mov
(bad)
or
sbb
sbb
ins
inc
ror
sub
jns
and
dec
call
mov
mov
nop
lock
sbb
das
neg
mov
xor
xor
js
adc
movs
sub
sub
pop
pop
jle
jp
pop
in
ret
mov
in
cmps
cmp
xchg
xchg
movs
and
ins
jnp
call
or
out
or
add
je
cmp
add
icebp
popf
inc
(bad)
scas
(bad)
pop
mov
cmp
div
mov
xor
adc
iret
cmc
outs
mov
jmp
pusha
or
mov
cmps
mov
sub
jae
mov
push
mov
add
or
ja
mov
cmp
popf
sub
cwde
outs
xor
mov
adc
call
cli
cs
mov
gs
test
jns
not
scas
cmp
mov
and
in
pop
rcl
push
add
bound
das
out
sbb
jb
sbb
out
sub
cmp
pushf
or
jge
pop
push
push
or
enter
stos
adc
pop
push
push
and
mov
xchg
fsub
sbb
lahf
sbb
test
xor
(bad)
dec
cmp
enter
cmp
add
dec
and
mov
push
cmps
xor
add
pop
push
pop
out
mov
lock
bound
outs
call
js
dec
pop
pop
pop
cmp
iret
inc
outs
nop
jns
dec
js
cdq
xor
fadd
ja
loopne
shl
xchg
scas
cmc
lock
fst
imul
cmps
push
rcr
js
and
rol
dec
xchg
pop
push
add
inc
cmps
hlt
or
movs
ret
clc
cmp
es
dec
jmp
aad
dec
cs
xor
jp
mov
out
lods
std
outs
push
stc
mov
neg
xchg
mov
inc
(bad)
(bad)
fcomp
dec
mov
dec
js
lock
push
pop
std
and
push
or
aam
mov
xchg
cmp
pop
xor
mov
xlat
jae
scas
sub
retf
inc
push
fwait
xor
push
sub
ja
adc
sbb
pusha
inc
sub
or
aaa
cmps
push
lahf
xlat
jnp
or
mov
cwde
xchg
cmp
xchg
pop
daa
mov
das
jl
and
pop
push
lock
mov
or
icebp
dec
push
iret
out
jl
sub
sbb
xchg
push
stos
fsub
cmp
movs
jl
inc
sub
mov
sub
mov
pop
aaa
sub
pop
lock
movs
lahf
inc
cmps
loope
leave
adc
inc
fnstenv
outs
bound
les
popa
loopne
fstp
out
cmps
sbb
loope
cmp
shl
jae
xchg
pop
push
out
mov
fcomp
loop
dec
push
xlat
or
sbb
les
call
scas
cmp
mul
and
mov
stos
sub
jmp
rol
call
addr16
call
or
mov
fsub
adc
mov
cmp
dec
clc
and
mov
lods
test
inc
or
movs
mov
adc
xchg
ds
sub
and
neg
out
(bad)
imul
mov
mov
daa
jle
aam
ss
nop
mov
call
xchg
stc
dec
xchg
outs
push
xchg
popf
inc
dec
nop
and
stos
mov
or
hlt
mov
out
sub
cmp
mov
out
jl
pop
pop
out
shr
fs
sbb
add
pop
xchg
xchg
add
iret
jno
and
fisubr
ins
int3
scas
gs
test
xor
pop
in
and
or
fst
xchg
sbb
out
mov
fsubr
leave
xchg
lods
lods
enter
cdq
into
or
jb
lahf
mov
dec
cmp
and
sbb
fwait
mov
lods
xor
shl
xchg
iret
mov
inc
or
(bad)
mov
add
std
jo
xor
(bad)
int3
addr16
xor
cmc
sti
lds
mov
(bad)
mov
xor
scas
das
mov
idiv
enter
mov
(bad)
icebp
cmps
jmp
test
jnp
(bad)
mov
cdq
(bad)
jae
pop
inc
gs
out
scas
(bad)
shl
retf
cld
je
mov
pop
shr
mov
cmp
movs
mov
mov
pop
cmp
sbb
in
xchg
fimul
repz
dec
sti
or
push
das
jg
dec
retf
inc
les
jno
inc
pop
retf
iret
int3
imul
mov
xlat
cmp
dec
and
scas
sbb
push
clc
fist
repz
or
adc
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
and
add
push
add
add
outs
in
mov
mov
in
mov
mov
in
movs
in
mov
mov
in
xchg
in
cwde
in
(bad)
in
test
mov
in
mov
mov
in
test
mov
in
scas
in
mov
mov
in
cwde
in
mov
mov
in
xchg
in
popf
in
fwait
in
xchg
in
test
add
add
imul
mov
mov
in
mov
mov
in
xchg
in
and
mov
mov
in
lods
in
test
mov
in
mov
mov
in
mov
mov
in
movs
in
mov
mov
in
mov
mov
in
popf
push
add
add
inc
in
and
lahf
in
xchg
in
mov
mov
in
mov
mov
in
xchg
in
(bad)
in
cmps
in
cwde
in
xchg
in
xchg
in
lods
in
mov
mov
in
xchg
mov
add
jne
mov
in
(bad)
in
xchg
in
xchg
mov
in
xchg
in
mov
mov
in
cmps
in
stos
in
mov
mov
in
nop
in
xchg
in
scas
in
movs
in
(bad)
in
stos
in
mov
mov
in
cmps
in
scas
in
mov
mov
in
mov
mov
in
cwde
in
mov
mov
push
push
add
add
mov
in
popf
in
xchg
in
xchg
in
scas
in
test
mov
in
xchg
in
mov
mov
in
mov
mov
in
scas
in
lods
in
sahf
in
mov
mov
in
mov
mov
in
cwde
in
xchg
push
pop
add
add
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
xchg
in
mov
mov
in
mov
mov
in
mov
mov
in
xchg
in
mov
mov
add
jb
mov
in
mov
mov
in
movs
in
xchg
in
mov
mov
in
mov
mov
in
xchg
mov
in
mov
mov
in
xchg
mov
in
mov
mov
in
xchg
in
mov
mov
in
mov
mov
in
test
mov
add
cmp
mov
in
xchg
in
mov
mov
in
test
mov
in
xchg
in
xchg
mov
in
stos
in
test
mov
in
stos
push
or
add
data16
xchg
in
mov
mov
in
and
mov
mov
in
sahf
in
xchg
in
test
mov
in
mov
mov
in
xchg
in
lods
in
mov
mov
in
lahf
in
sahf
in
(bad)
in
xchg
in
xchg
in
mov
mov
in
test
or
add
pusha
in
xchg
mov
in
lods
in
xchg
mov
in
stos
in
xchg
in
mov
mov
in
popf
in
xchg
mov
in
test
mov
in
mov
mov
in
mov
mov
in
call
in
cwde
in
add
add
add
mov
in
movs
in
mov
mov
in
cwde
in
mov
mov
in
mov
mov
in
test
mov
in
mov
mov
in
pushf
in
cwde
in
mov
mov
in
mov
mov
in
mov
mov
add
ins
in
cmps
in
mov
mov
in
mov
mov
in
and
and
mov
mov
in
mov
mov
in
xchg
in
stos
in
xchg
mov
in
mov
mov
in
stos
in
and
stos
in
and
mov
mov
push
push
add
add
mov
in
xchg
in
sahf
in
popf
in
mov
mov
in
mov
mov
in
mov
mov
in
lahf
in
mov
mov
in
mov
mov
in
mov
mov
in
xchg
in
and
mov
mov
in
nop
in
mov
mov
push
sldt
add
in
mov
mov
in
xchg
in
xchg
mov
in
(bad)
in
stos
in
mov
mov
in
mov
mov
in
mov
mov
push
adc
add
pop
in
scas
in
cmps
in
cwde
in
xchg
in
mov
mov
in
pushf
in
mov
mov
in
popf
in
and
cmps
in
mov
mov
in
cmps
in
and
xchg
in
mov
mov
in
xchg
in
mov
mov
in
mov
adc
add
outs
in
movs
in
lods
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
movs
in
mov
mov
in
and
mov
mov
in
cwde
in
scas
in
test
mov
in
xchg
mov
in
test
mov
in
scas
in
mov
adc
add
push
in
mov
mov
in
mov
mov
in
test
mov
in
lods
in
stos
in
mov
mov
in
test
mov
in
test
mov
in
cmps
in
mov
mov
in
mov
add
mov
in
mov
mov
in
xchg
in
xchg
in
test
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
movs
in
mov
adc
add
jb
mov
in
stos
in
xchg
in
mov
mov
in
cmps
in
mov
mov
in
lods
in
test
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
lods
in
xchg
in
cmps
in
(bad)
in
mov
mov
in
and
mov
mov
push
adc
in
xchg
mov
in
stos
in
and
mov
mov
in
test
mov
in
mov
mov
in
mov
mov
in
xchg
in
mov
mov
in
cdq
in
xchg
in
movs
in
mov
mov
add
inc
in
nop
in
cdq
in
movs
in
cmps
in
mov
mov
in
fwait
in
call
in
lahf
in
mov
mov
in
mov
mov
in
mov
mov
add
jne
mov
in
test
mov
in
mov
mov
in
call
in
mov
mov
in
mov
mov
in
mov
mov
in
lahf
in
mov
mov
in
stos
in
mov
mov
in
mov
mov
in
mov
mov
in
lahf
in
nop
push
sbb
add
inc
in
mov
mov
in
xchg
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
cmps
in
mov
mov
push
sbb
add
push
in
cmps
in
pushf
in
cdq
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
cwde
in
movs
in
and
scas
in
mov
mov
in
cdq
in
xchg
in
xchg
push
sbb
add
outs
in
mov
mov
in
mov
mov
in
mov
mov
in
test
mov
in
xchg
in
mov
mov
in
mov
mov
in
fwait
in
call
in
mov
mov
in
test
mov
in
mov
mov
in
add
add
add
mov
in
xchg
in
mov
mov
in
cwde
in
xchg
in
cmps
in
lods
in
mov
mov
in
lods
in
mov
mov
in
and
mov
mov
in
mov
mov
in
mov
sbb
add
imul
lahf
in
mov
mov
in
xchg
in
mov
mov
in
mov
mov
in
nop
in
test
mov
in
and
mov
mov
in
stos
in
and
(bad)
in
stos
in
mov
mov
in
pushf
in
test
mov
in
mov
mov
add
push
in
mov
mov
in
mov
mov
in
xchg
in
mov
mov
in
xchg
in
cmps
in
mov
mov
in
mov
mov
in
popf
in
scas
in
xchg
in
lods
in
mov
mov
in
mov
add
mov
mov
in
mov
mov
in
lods
in
and
scas
in
sahf
in
xchg
in
mov
mov
in
xchg
in
mov
mov
in
mov
mov
in
mov
mov
in
stos
push
pop
add
add
mov
in
xchg
in
cdq
in
xchg
in
movs
in
test
mov
in
xchg
mov
in
mov
mov
in
mov
mov
in
cdq
in
cmps
in
and
mov
mov
in
pushf
in
xchg
in
xchg
in
xchg
in
mov
mov
push
and
add
pusha
in
mov
mov
in
xchg
in
mov
mov
in
nop
in
cmps
in
test
mov
in
lahf
in
mov
mov
in
test
mov
in
call
in
xchg
in
cmps
in
(bad)
in
stos
in
(bad)
in
cdq
in
movs
in
scas
in
cwde
push
and
add
dec
in
cmps
in
call
in
cmps
in
pushf
in
and
movs
in
mov
mov
in
movs
in
mov
mov
in
cdq
in
mov
mov
in
cdq
in
mov
mov
push
and
add
pop
in
stos
in
mov
mov
in
and
and
mov
mov
in
lods
in
mov
mov
in
test
mov
in
mov
mov
in
mov
mov
in
(bad)
in
popf
in
test
mov
inc
add
les
cmp
loop
or
out
mov
xchg
bound
jbe
cmp
pop
xlat
nop
pusha
aaa
cmp
jg
stc
jmp
popf
aaa
icebp
cli
jmp
mov
and
pushf
xchg
imul
pop
push
adc
scas
xchg
outs
dec
data16
pop
dec
xchg
jmp
or
and
xor
or
mov
cmps
dec
cdq
out
add
push
in
jg
or
jne
mov
push
fwait
mov
jae
push
mul
not
and
imul
pop
jmp
sbb
push
mov
ret
out
dec
jp
stos
mov
sub
in
call
call
cmp
xchg
lds
inc
cdq
inc
mov
std
loop
in
movs
ficom
jle
and
je
cdq
dec
scas
jmp
shl
mov
(bad)
xlat
pushf
add
leave
stos
add
in
cmp
inc
fstp
aaa
mov
xchg
ds
sub
out
mov
adc
xchg
popa
sar
and
inc
pop
mov
inc
neg
dec
add
jno
add
adc
sub
int3
aam
(bad)
dec
adc
or
les
jae
je
scas
in
inc
mov
sub
daa
adc
push
add
sub
aas
or
fisttp
in
inc
outs
jge
xchg
push
enter
aad
ins
fsub
shl
inc
je
and
pop
mov
and
inc
mov
push
inc
sbb
pop
xor
ror
jnp
push
das
cmp
mov
xlat
inc
inc
in
fimul
int3
jns
and
push
fdivr
add
push
push
lea
xchg
xlat
jl
lock
(bad)
sub
retf
add
(bad)
sub
movs
pop
jle
leave
jp
cdq
mov
xchg
push
test
inc
mov
(bad)
or
(bad)
imul
or
movs
xor
xchg
jb
lods
mov
in
jg
jmp
fwait
cmp
cmps
icebp
js
in
adc
into
ss
xchg
gs
xor
ret
push
dec
xchg
push
inc
loope
shl
push
imul
xchg
dec
mov
lock
mov
or
shl
push
jo
jg
mov
out
idiv
cmp
jo
fs
inc
cmc
push
rcl
rcl
jmp
mov
cmp
js
lds
xlat
enter
or
lea
in
je
test
mov
outs
loope
xchg
and
or
loop
cwde
pushf
dec
pop
fst
mov
adc
rcr
cmp
and
into
loopne
xor
movs
leave
inc
jp
mov
enter
lods
push
mov
xchg
cmp
adc
xchg
ds
or
jbe
loope
sbb
out
inc
push
stos
jle
pop
mov
data16
in
and
ins
loope
imul
call
out
cs
dec
mov
addr16
pop
adc
rol
scas
ins
and
pop
inc
gs
add
jo
pushf
jl
sub
jl
int3
dec
pop
fcmovnb
cld
sub
or
cmps
or
push
cmp
push
and
adc
sbb
mov
and
dec
jmp
jmp
movs
out
cmps
fnstsw
push
sbb
cmp
or
retf
shl
add
push
pop
push
imul
cmp
and
nop
mov
or
cmps
fwait
call
or
dec
fild
mov
mov
pushf
bound
xchg
daa
lea
dec
and
jnp
and
push
mov
std
xchg
push
daa
ds
fimul
mov
sub
xor
stos
ror
push
repz
(bad)
adc
pop
(bad)
adc
push
cmp
jno
je
mov
cmc
adc
mov
les
jne
jp
retf
inc
push
cmp
mov
ss
out
cvtpi2ps
ins
jno
arpl
jns
jno
mov
(bad)
out
mov
cmps
xchg
stc
cs
xor
ins
jo
xor
xlat
and
into
sar
and
fwait
ds
jg
popa
call
inc
les
push
cli
in
jecxz
int3
add
stc
adc
push
mov
add
xchg
lock
inc
stos
ret
jae
push
sub
shl
mov
sub
jmp
test
push
mov
pop
or
jne
loop
retf
ins
push
jbe
mov
or
pop
rol
sar
sbb
ficomp
mov
(bad)
jnp
lods
pop
push
outs
or
stc
test
fsubr
mov
mov
push
inc
jns
sbb
dec
dec
dec
movs
push
enter
es
inc
(bad)
scas
cwde
scas
or
push
std
push
adc
sbb
cmps
mov
adc
mov
adc
add
xor
push
das
push
adc
pop
inc
cmp
data16
add
add
mov
pop
and
pop
mov
dec
(bad)
push
add
push
fnstcw
dec
stos
mov
adc
jns
ficomp
bound
loope
daa
fdivr
xor
aad
xchg
jl
jnp
pop
clc
adc
ret
loopne
(bad)
jbe
fldcw
iret
push
mov
popf
and
cmc
and
fild
mov
lea
cdq
pop
inc
scas
aaa
jg
fnstsw
pop
ret
mov
movs
cmp
push
mov
pusha
aam
inc
cmp
jbe
dec
cmp
sar
scas
pop
lea
add
call
int
mov
pop
add
je
adc
adc
xor
aas
cmp
arpl
fdivr
jns
mov
mul
fild
aam
aam
mov
cmp
xor
adc
sub
sub
div
stc
xchg
lahf
add
xchg
xor
inc
fs
aaa
cdq
int3
or
jae
popf
movs
pop
(bad)
mov
pop
add
jle
xor
xor
add
inc
fidivr
cmp
cmps
data16
shr
outs
rol
(bad)
loop
mov
ret
add
xlat
push
pop
frstor
iret
jbe
scas
aam
cmp
cdq
lock
mov
mov
call
inc
xchg
cli
and
std
scas
pop
hlt
sub
mov
pushf
rol
sbb
pushf
mov
ja
mov
outs
or
pop
sub
pop
push
aam
add
push
dec
das
arpl
aas
ds
pop
mov
jge
icebp
adc
retf
push
fs
add
mov
push
or
aam
xchg
jmp
ins
nop
loopne
cs
sahf
push
push
hlt
pop
mov
in
cmp
loopne
arpl
sbb
fimul
cmp
push
and
rcl
scas
clc
jno
cwde
xchg
fwait
(bad)
shl
(bad)
pop
data16
movs
mov
jae
adc
pop
mov
js
inc
mov
shr
ret
mov
xchg
mov
(bad)
stos
xchg
jns
jmp
inc
push
imul
cmps
xchg
cmp
repnz
add
and
adc
push
fidiv
push
js
not
mov
jno
cli
dec
ret
or
dec
mov
xor
lods
pop
xchg
jg
fld
push
add
jl
daa
xchg
cdq
cmc
mov
cmp
mov
mov
jmp
loop
into
jno
aaa
aaa
pop
jp
(bad)
scas
inc
jnp
popa
jmp
mov
sub
aaa
inc
iret
inc
loopne
dec
(bad)
mov
push
mov
rcl
aaa
sub
stos
adc
daa
sbb
xchg
(bad)
(bad)
cs
sti
cmp
(bad)
adc
mov
adc
icebp
push
enter
out
cmp
xlat
inc
inc
push
mov
or
cld
dec
jmp
pop
hlt
cmc
push
data16
push
jnp
add
adc
adc
retf
add
aas
xchg
jnp
loop
jmp
xchg
pop
push
and
loop
js
sti
xchg
sub
les
xchg
outs
cmp
xchg
stos
bound
pushf
fisubr
mov
ins
xchg
jnp
aad
jecxz
jae
sub
outs
(bad)
repnz
ins
pop
in
jns
pushf
mov
test
enter
or
push
sbb
inc
push
dec
or
iret
push
mov
ret
fstp
shl
(bad)
xchg
adc
adc
sbb
repnz
addr16
je
int3
lea
out
adc
(bad)
pop
lahf
je
xlat
cmc
bound
add
scas
adc
mov
push
popf
nop
push
jl
adc
je
add
in
xchg
stos
mov
add
jns
jp
sti
aad
sub
fcomp
mov
iret
in
push
and
lea
sar
sbb
push
pop
xor
xor
dec
pmuludq
mov
xor
mov
(bad)
ds
push
dec
je
cmp
ss
std
jb
loop
inc
(bad)
data16
xor
(bad)
and
ss
push
pop
mov
sar
call
jae
lds
pop
xchg
pop
movs
sub
jle
shl
push
pop
xchg
xlat
lods
std
mov
mov
out
sbb
dec
add
mov
pop
call
enter
mov
retf
stos
ins
fstp
cmp
ins
aaa
jb
xlat
jae
(bad)
adc
sub
ins
push
ror
sbb
dec
lds
and
mov
out
add
ds
ja
(bad)
jecxz
inc
(bad)
cmp
mov
imul
push
push
cmp
hlt
test
daa
outs
sbb
nop
loope
shl
rcr
add
ja
sbb
stos
xchg
jp
out
or
sub
bound
test
add
push
add
cmc
int
sahf
add
pushf
and
xor
loopne
sbb
mov
loope
js
das
pusha
and
inc
shl
cmp
or
add
pop
out
movs
add
ja
cmp
jge
fnsave
icebp
or
pop
and
inc
inc
daa
mov
adc
mov
in
xor
cli
(bad)
mov
inc
xchg
jmp
stos
mov
lock
dec
clc
pop
gs
mov
inc
mov
je
or
xchg
jmp
icebp
in
outs
iret
stos
jmp
adc
sub
and
sti
in
dec
inc
and
cli
cmp
cmps
je
or
shr
mov
popf
test
xchg
mov
mov
les
adc
jecxz
movs
mov
push
inc
aam
popf
fisubr
xor
and
mov
stc
xor
not
and
loopne
imul
test
in
rcl
push
jbe
daa
loop
sub
leave
retf
aad
xchg
jb
cli
sub
pop
mov
jne
mov
(bad)
iret
cmps
sti
bound
retf
prefetch
or
movs
xor
inc
out
lods
dec
mov
imul
retf
push
shl
add
fsubr
data16
(bad)
lea
ror
push
test
mov
bound
mov
sti
push
jecxz
pop
cmps
push
push
das
inc
cli
outs
pop
xor
pop
mov
push
fmul
jns
ins
dec
lea
ret
mov
pop
loop
data16
mov
fsub
sbb
call
mov
and
pop
shl
pop
cmp
xchg
(bad)
mov
movs
lods
mov
fdiv
add
jmp
test
cmps
inc
cmp
sub
fadd
ror
sbb
cwde
popa
call
sbb
lods
pop
jo
fild
inc
stc
push
stos
jp
fcomp
daa
imul
sub
add
dec
jmp
call
popfw
mov
mov
and
je
dec
fstp
mov
adc
das
sbb
xchg
cmc
sub
sub
addr16
call
pop
ret
ret
(bad)
ror
cmp
jle
mov
xchg
mov
pop
inc
adc
cs
aaa
imul
mov
mov
add
jg
mov
shl
int3
cmp
movs
adc
cmps
or
inc
call
lock
pop
xchg
jne
push
and
ss
loopne
pop
repnz
and
inc
xchg
sar
mov
mov
(bad)
nop
scas
popa
jmp
and
gs
xor
xchg
frstpm(287
cmp
fwait
es
mov
(bad)
xor
sub
cs
xor
stc
xor
jne
push
jno
xor
mov
jne
adc
lahf
cwde
cwde
mov
test
fmul
mov
pop
fdiv
ins
jl
jae
shl
lahf
jmp
and
shl
sub
or
shr
aas
push
repz
loope
lods
adc
out
imul
lds
xor
push
and
jae
and
movs
(bad)
jns
pop
xchg
ss
inc
ss
xchg
push
mov
cmp
test
or
pop
(bad)
sub
mov
(bad)
jp
mov
fisttp
add
cmp
out
xchg
cmp
mov
push
inc
in
mov
pop
push
sbb
rcr
xor
sub
aas
fst
int
popa
addr16
xor
dec
xor
or
hlt
loope
out
shl
dec
aad
jp
push
sbb
pop
stc
cmc
inc
xor
sbb
cmp
and
mov
lods
rcl
mov
xor
mov
scas
push
jg
xlat
loopne
dec
inc
scas
adc
stos
xchg
pop
cmps
iret
imul
(bad)
ret
sub
cdq
dec
xchg
neg
add
pop
mov
fild
scas
fsubp
ss
adc
(bad)
test
(bad)
outs
arpl
les
jmp
xor
adc
sub
jmp
(bad)
cmp
outs
iret
aad
xor
or
int3
popa
fidivr
out
xchg
push
cmps
push
leave
xchg
daa
repz
sub
push
ds
sbb
or
inc
cmp
jo
jbe
adc
in
aaa
add
push
lock
movs
outs
xor
pusha
sbb
sbb
int3
mov
pusha
mov
xchg
retf
stos
push
mov
aam
mov
xchg
ja
xchg
out
mov
add
clc
(bad)
sbb
adc
std
jb
mov
cli
mov
or
not
dec
mov
sub
inc
ja
inc
xchg
jg
push
retf
cwde
ret
xor
cwde
ins
push
loop
sbb
fwait
cmp
loopne
repz
nop
xlat
ret
sahf
sbb
inc
loop
jmp
add
cmps
jecxz
hlt
mov
shr
mov
add
add
ror
xor
iret
js
mov
jl
or
test
in
jnp
or
dec
aad
dec
inc
lods
mov
inc
mov
cwde
push
icebp
cmp
(bad)
cwde
iret
ret
mov
mov
jmp
fiadd
aad
jl
sub
fsubp
leave
stc
fwait
mov
pop
mov
ss
add
rcl
ror
cdq
mov
and
out
pop
or
neg
mov
retf
inc
out
adc
mov
push
mov
loope
(bad)
jo
aam
sub
push
outs
pop
push
mov
cmps
jecxz
movs
or
sub
shr
shl
lods
push
jecxz
retf
nop
mov
sbb
pop
mov
int
movs
test
or
std
jg
dec
pop
sub
stos
mov
push
cdq
xor
inc
dec
dec
fimul
mov
sbb
sub
cmc
shl
ss
pushf
add
push
sti
add
dec
sbb
or
repz
outs
aas
stos
jbe
add
and
ja
sub
push
aad
push
call
jg
sub
rcr
or
xchg
cld
jmp
jp
mov
sbb
add
retf
xor
mov
sub
mov
or
int3
push
pavgb
sar
pusha
or
clc
(bad)
mov
sbb
scas
mov
(bad)
aam
jg
iret
repz
sub
pop
shr
cmp
mov
push
bound
pop
sub
add
fpatan
add
push
stos
cdq
mov
mov
inc
or
jns
nop
in
push
sub
inc
cmp
iret
pop
xchg
les
fbld
leave
enter
jmp
ss
fbld
gs
dec
push
in
(bad)
mov
popa
int
sbb
and
test
ja
stc
xor
jnp
jecxz
adc
mov
(bad)
xor
xor
cmp
stos
sbb
dec
push
push
daa
sub
pop
hlt
mov
dec
mov
cmp
inc
in
ret
xor
dec
(bad)
sub
mov
jb
ja
dec
clc
lods
rcr
rol
cmp
pop
call
sub
mov
sbb
dec
dec
pusha
in
mov
rcl
mov
shr
retf
dec
push
pop
xchg
das
mov
jmp
xor
idiv
jg
scas
out
ret
cmps
push
out
mov
inc
and
and
in
push
movs
inc
sub
inc
dec
push
pop
mov
scas
aas
sbb
out
cmp
inc
jmp
cli
and
sbb
fld
cwde
pop
(bad)
cld
pushf
push
pusha
adc
sti
fdiv
jle
jmp
dec
pop
cld
push
movs
test
xchg
scas
cmc
arpl
pop
(bad)
cmp
popa
pop
in
cmp
pop
out
outs
dec
(bad)
loop
lds
pop
rcl
retf
lods
add
xchg
test
jecxz
sub
movs
cdq
adc
xchg
pop
in
mov
jo
repnz
push
adc
pushf
retf
dec
in
mov
push
mov
jmp
or
call
jno
sar
add
(bad)
lahf
mov
or
dec
scas
sbb
mov
pop
cmp
aam
cmp
push
stos
dec
ja
or
popa
sti
mov
mov
xor
mov
or
add
cmp
(bad)
sbb
ins
neg
adc
push
pop
data16
or
dec
(bad)
mov
pop
mov
or
mov
outs
scas
push
popf
sbb
push
mov
push
test
adc
dec
lods
mov
call
int
mul
movs
int
mov
stos
gs
je
pop
mov
jmp
mov
mov
mov
rcr
imul
xchg
test
test
cdq
test
in
fimul
sbb
cwde
(bad)
push
sbb
xchg
fs
pop
pop
xchg
adc
ss
pop
mov
mov
xchg
in
clc
mov
cld
(bad)
in
movs
sahf
test
(bad)
je
mov
pushf
adc
push
mov
push
outs
sbb
call
pusha
pop
and
mov
icebp
push
cmps
mov
imul
xlat
jnp
jo
sub
les
or
stc
push
popf
sbb
xchg
jecxz
es
lahf
sbb
dec
jl
push
mov
cmp
js
fadd
and
push
jne
data16
mov
fdivrp
cmp
sbb
adc
sbb
cs
vmovss
xchg
and
xchg
sub
sbb
xchg
loopne
mov
add
stc
fadd
les
out
test
inc
retf
and
stos
cld
sbb
mov
pop
and
imul
or
xchg
xchg
sbb
jne
dec
bndldx
outs
push
mov
dec
dec
sahf
inc
ss
inc
adc
fistp
stos
lahf
mov
outs
adc
xchg
je
cmp
mov
or
mov
add
xor
mov
ror
or
xchg
iret
mov
mov
mov
test
cmc
repz
stc
jle
lods
leave
and
inc
mov
jge
mov
(bad)
xlat
ins
es
add
leave
call
xor
nop
xlat
adc
fdivrp
mov
and
push
ficom
fild
in
loopne
ret
repz
fistp
arpl
sub
fwait
inc
popa
jmp
and
pop
les
out
sub
repz
lods
shl
push
or
jle
sbb
in
test
mov
js
xchg
lods
mov
add
and
imul
xchg
fist
scas
add
jo
mov
xor
test
mov
push
clc
sbb
out
enter
jl
dec
pop
js
push
cmp
xlat
add
sbb
mov
loopne
sbb
cmp
jge
push
sbb
jb
idiv
and
das
lods
repz
xchg
lock
outs
ficomp
ds
mov
out
sti
fs
adc
or
scas
fwait
mov
dec
ror
lock
xor
and
pop
arpl
inc
aas
jmp
in
cld
add
and
sbb
cmp
in
iret
sub
shl
and
xor
es
out
xchg
mov
xchg
enter
shr
out
pop
fnstsw
imul
mov
enter
mov
mov
adc
gs
adc
sbb
rcl
nop
mov
pop
int3
xor
jb
xor
mov
push
mov
(bad)
(bad)
dec
xchg
mov
aam
pop
dec
sbb
pop
aaa
pop
lea
push
fild
js
pushf
daa
fdivr
nop
in
lds
pop
push
arpl
push
push
or
jno
dec
pop
pop
outs
or
scas
repz
jmp
xchg
cs
mov
fwait
add
ins
aas
xor
adc
pop
push
rcr
retf
jle
aaa
push
xchg
pop
sbb
jge
jbe
in
fidivr
lahf
pop
pusha
pushf
loop
adc
nop
inc
jl
les
bound
mov
and
adc
cs
les
sbb
mov
xchg
cwde
jbe
and
js
push
pop
fnstcw
mov
daa
outs
xchg
inc
loopne
pop
sbb
scas
mov
cmps
mov
and
loope
stc
aad
push
not
std
and
outs
into
(bad)
jge
sub
jecxz
push
call
push
mov
fisttp
xor
test
nop
shl
push
sub
and
push
mov
xchg
sbb
and
les
into
push
xor
dec
jae
mov
mov
jecxz
or
das
sub
stc
mov
repz
sbb
repz
xchg
cs
pop
(bad)
je
into
xchg
inc
mov
enter
and
(bad)
fld
add
test
jns
pop
hlt
ins
mov
in
xlat
imul
cs
and
lahf
and
aas
mov
retf
sub
ficomp
mov
mov
and
jmp
pop
pop
push
push
push
inc
das
aaa
gs
lods
daa
(bad)
jae
pop
fadd
jl
xor
data16
in
cmps
sti
pop
retf
mov
cdq
inc
mov
mov
adc
(bad)
adc
mov
add
fisubr
test
enter
xor
pop
mov
sbb
xor
frstor
aaa
dec
jns
add
cmp
adc
stc
ss
div
data16
and
jmp
imul
scas
leave
js
cmps
adc
mov
scas
fcmove
outs
and
mov
and
push
adc
sbb
fisubr
jbe
and
cmp
dec
pop
(bad)
and
test
jbe
scas
cmp
inc
or
cmp
mov
stos
inc
push
ds
aad
in
pop
fcom
js
(bad)
ret
add
xchg
inc
mov
xor
shl
data16
and
pop
call
dec
mov
and
push
lds
fbld
fwait
dec
aam
(bad)
push
data16
shl
leave
test
push
mul
punpckhbw
test
cmps
movs
dec
dec
in
jne
pop
pop
add
push
movs
mov
inc
jecxz
daa
bound
push
mov
pop
retf
test
stos
push
mov
sub
cmp
adc
xchg
sub
push
in
cs
mov
stos
jecxz
add
push
push
pop
call
outs
les
scas
push
movs
mov
mov
inc
add
(bad)
push
and
mov
fsubr
jecxz
pop
repz
xor
pop
(bad)
fidiv
popa
xor
loopne
jmp
jp
lods
mov
rol
push
fnstsw
fwait
stc
add
mov
dec
or
or
shl
jmp
sbb
rol
sub
out
jl
sbb
xchg
daa
arpl
xor
pop
dec
sahf
add
cmp
stos
or
adc
cdq
inc
jp
leave
stc
push
sbb
add
(bad)
aas
lahf
out
std
xor
push
xchg
inc
mov
loope
lahf
stos
push
and
sahf
leave
lds
mov
cld
daa
inc
or
call
cmp
stc
arpl
pusha
push
ret
pop
retf
jmp
and
loopne
pop
xchg
mov
jbe
mov
adc
xor
out
(bad)
(bad)
hlt
xchg
cmp
mov
mov
cmc
rol
sub
mul
pop
icebp
sbb
jns
imul
lods
loopne
jo
push
jecxz
and
cwde
in
push
inc
inc
mov
pop
out
sub
cmp
cwde
(bad)
shl
cld
outs
mov
dec
mov
push
xlat
and
mov
adc
aaa
mov
xchg
retf
push
cwde
mov
jb
mov
int3
xlat
inc
mov
xlat
cmps
cwde
(bad)
(bad)
addr16
mov
adc
sub
sbb
cmc
push
sub
xchg
stc
das
call
or
leave
jg
ds
dec
cmps
dec
lahf
pop
ret
dec
rol
mov
hlt
ret
or
in
inc
jae
(bad)
jg
mov
mov
jne
gs
mov
or
fidiv
cmps
in
cmp
and
push
dec
shl
or
ss
test
lods
dec
loop
mov
xor
rcr
daa
jae
aaa
push
sub
(bad)
clc
and
mov
fs
js
aad
scas
mov
mov
xor
aaa
push
out
scas
xor
xchg
jnp
cld
pop
imul
ja
fwait
lea
shr
xor
push
inc
in
sub
xor
ror
sub
inc
outs
arpl
xchg
pop
or
push
and
dec
arpl
movs
adc
cmp
mov
shr
ins
mul
inc
adc
mov
pop
lods
mov
add
xchg
cmp
mov
je
and
and
lea
(bad)
ins
xchg
fsubrp
xchg
xchg
cld
int3
add
or
out
out
add
cmp
mov
clc
cmp
add
pop
mov
shl
jbe
jno
push
mov
loopne
jl
sbb
sub
or
and
dec
movs
jae
push
inc
cmp
sbb
mov
add
inc
ins
inc
push
sbb
rcl
dec
xor
dec
push
(bad)
es
mov
add
outs
sbb
pop
xor
push
int3
fimul
ret
ror
cmp
xlat
aas
ret
imul
jo
mov
jge
pop
mov
pop
or
call
loop
aaa
cmp
out
mov
aaa
jnp
pusha
pop
jmp
adc
shr
icebp
pop
fsubr
add
imul
into
add
mov
jle
xchg
or
pushf
int
test
push
add
sbb
adc
into
push
cmc
add
in
arpl
sub
jl
fs
pop
jmp
or
aad
dec
pop
stos
dec
inc
push
adc
push
loopne
pushf
and
out
cmp
xchg
neg
sbb
out
push
in
jns
in
push
shl
mov
inc
aad
aaa
daa
mov
(bad)
sbb
mov
xchg
out
and
shl
push
jno
push
xchg
and
outs
sbb
sub
in
loop
cwde
or
data16
out
sar
imul
out
xor
and
int3
xchg
sub
mov
outs
mov
popa
xor
mov
bnd
and
pop
in
ss
xchg
mov
cmp
mov
push
or
gs
sub
ins
retf
adc
sub
movs
xor
cmps
arpl
in
or
xor
repnz
push
jne
fisub
outs
or
or
out
fisubr
mov
dec
push
cmp
adc
dec
xor
cmps
jecxz
iret
pusha
fs
jmp
cli
rcl
fisubr
jbe
sub
mov
js
add
jnp
mov
push
fist
cli
sub
test
psllw
adc
in
lds
mov
jmp
ret
mov
es
pop
clc
fadd
clc
add
inc
pusha
adc
out
mov
(bad)
aas
cmp
ins
dec
sub
fs
jne
and
adc
out
jnp
ins
mov
jecxz
mov
js
imul
mov
sub
ds
pop
loop
stc
push
outs
mov
push
int3
push
sub
mov
jnp
retf
popa
arpl
jp
push
sub
retf
hlt
sub
scas
ds
mov
xchg
enter
mov
aas
jmp
cwde
pop
lahf
jb
sub
cmp
and
jne
inc
or
out
lahf
out
xor
jg
test
adc
cmps
or
push
xlat
jle
imul
repnz
jl
shl
pop
xor
test
call
test
xor
mov
mov
jne
sbb
ins
pop
call
or
fistp
lods
sbb
mov
or
sub
cld
movs
sub
(bad)
in
and
out
xchg
loopne
sub
ins
add
sub
jnp
push
pop
in
pusha
ins
push
jo
test
pop
clc
fisub
call
xor
dec
and
push
xor
out
push
mov
fnstenv
sbb
lahf
into
in
hlt
pusha
mov
push
(bad)
ja
psubq
cld
(bad)
dec
adc
push
cmp
cwde
ret
scas
cmp
and
xchg
gs
sub
aam
mov
xchg
ja
pop
cmps
dec
test
aaa
adc
push
dec
xchg
mov
ss
repz
sbb
leave
aad
inc
sub
out
mov
das
stc
into
inc
pop
or
cwde
push
dec
sti
fstp
pop
cmc
push
int3
cmp
sub
adc
aaa
cmp
cmps
jmp
dec
pop
dec
add
fldlg2
xor
sar
or
scas
pop
pop
lock
push
cmp
push
pop
test
push
adc
jns
adc
dec
pop
adc
jmp
popa
leave
into
push
ins
pop
iret
dec
out
sub
add
push
jb
fisubr
push
pop
inc
xchg
pushf
(bad)
out
icebp
das
sar
mov
loop
bound
(bad)
mov
xchg
call
and
pushf
adc
ret
lock
sbb
adc
ficomp
mov
mov
cmps
add
test
aaa
bound
xchg
cli
popa
mov
sbb
rcl
add
shl
out
or
into
into
cwde
cld
sbb
(bad)
enter
mov
repnz
mov
or
push
test
shr
clc
dec
dec
cmps
iret
adc
or
mov
sub
add
pop
mov
les
xlat
dec
mov
xchg
ja
jge
inc
cdq
pop
movs
cmp
loopne
mov
or
add
hlt
ss
and
pop
mov
jp
es
je
out
xor
pop
mov
jp
nop
in
and
push
jo
inc
cdq
lds
jnp
xchg
jmp
mov
rcr
sub
test
dec
or
ins
mov
fisubr
sbb
jmp
dec
jmp
(bad)
out
jmp
or
jge
hlt
xchg
and
imul
in
arpl
lock
dec
je
leave
add
add
jbe
(bad)
shl
stos
out
push
sbb
push
sti
xor
test
dec
dec
shl
int
sub
add
add
dec
fmul
cmp
out
enter
xchg
push
mov
or
sahf
mov
into
mov
imul
cmp
mov
outs
jno
in
lods
bound
inc
or
add
xchg
das
call
enter
sbb
mov
out
lock
or
in
loop
mov
mov
push
jl
mov
sbb
inc
pop
ja
mov
sti
add
mov
sbb
add
call
mov
test
adc
loopne
ret
mov
xchg
rol
jg
xchg
das
mov
adc
or
rcl
jp
out
add
pop
pop
scas
pop
sar
dec
mov
xchg
test
pop
and
sbb
mov
jb
inc
shr
je
cld
lahf
test
movs
jns
js
pop
dec
js
js
add
cmp
cmp
fmul
mov
push
mov
inc
lock
cdq
mov
pop
in
aaa
les
xchg
mov
out
outs
mov
dec
out
pop
mov
sbb
movs
push
out
(bad)
scas
mov
mov
add
lods
bound
loopne
fadd
aaa
fimul
xlat
ds
mov
icebp
cmp
cli
mov
add
lods
push
test
popa
push
aam
cmps
enter
jbe
pop
enter
and
xor
jbe
push
mov
iret
push
js
xchg
jno
es
(bad)
adc
xor
push
jmp
mov
out
in
mov
push
into
call
cmp
sub
les
ficom
xor
xchg
add
data16
cmp
lock
ins
jbe
enter
xchg
cs
test
ror
push
call
add
in
sahf
(bad)
push
add
xchg
mov
push
mov
pop
adc
jae
pop
js
pop
xchg
add
adc
clc
xor
sbb
icebp
pop
adc
push
loopne
rol
xchg
(bad)
shl
call
push
stos
pop
cld
outs
lods
fisttp
aaa
shl
jne
inc
jno
cwde
or
(bad)
stc
push
xchg
cmp
pushf
jmp
mov
das
dec
aad
cmp
push
mov
add
test
push
and
in
into
fist
(bad)
int3
ins
jno
rol
repnz
js
test
jmp
push
les
add
ss
nop
sbb
cmp
rcr
in
sub
hlt
test
inc
jb
popa
adc
sub
and
idiv
jbe
push
out
movs
mov
push
inc
dec
fs
sahf
aas
icebp
arpl
icebp
scas
(bad)
jns
ret
mov
repz
popf
hlt
cmp
xor
shl
fsubr
outs
(bad)
adc
idiv
ret
adc
pop
(bad)
in
inc
mov
cmp
or
fstp
movs
int3
cmp
retf
pop
lock
dec
cmp
rcr
ror
lea
outs
mul
clc
popa
ror
repnz
add
dec
adc
inc
add
sbb
adc
pushf
fist
sub
and
aad
xchg
(bad)
fiadd
push
cmp
inc
mov
xor
les
cmp
out
push
push
mov
cdq
(bad)
or
sub
(bad)
(bad)
repnz
pop
jge
movs
icebp
ret
dec
inc
mov
sbb
jmp
(bad)
sar
cmps
fmul
(bad)
aaa
inc
jmp
pusha
gs
jb
xchg
fisubr
xor
outs
bound
sub
xchg
mov
dec
mov
lahf
pop
jae
dec
push
mov
mov
hlt
loop
push
in
je
jmp
sbb
push
arpl
fist
and
dec
inc
mov
movs
mov
and
hlt
rcl
(bad)
ss
sbb
mov
sbb
xor
ins
pop
push
add
cmp
(bad)
rcl
call
pop
imul
add
(bad)
imul
jnp
mov
lahf
mov
cmps
jns
mov
cld
retf
cld
and
mov
sbb
mov
adc
xchg
xchg
and
mov
fstp
push
in
xlat
aas
lods
imul
outs
xchg
jbe
imul
jne
xlat
sub
sbb
lds
jmp
rol
jo
cmps
mov
std
dec
rcl
adc
retf
cmp
in
cmp
retf
inc
ss
sub
sub
sub
cs
rol
pop
push
mov
and
(bad)
mov
lods
fdiv
bound
jne
int3
or
pop
sbb
shl
inc
push
cwde
gs
mov
arpl
hlt
and
in
pop
cmps
mov
or
dec
fxch
add
cdq
jp
add
dec
mov
enter
and
mov
leavew
loopne
fnsave
addr16
xor
push
shr
dec
xchg
shr
scas
repz
sub
je
das
mov
call
push
fidiv
push
push
adc
cwde
mov
ret
jo
(bad)
cmp
movs
and
test
xchg
mov
push
aad
stos
stc
cwde
adc
add
lods
xor
fisubr
ret
push
inc
test
xchg
cmps
fisttp
repnz
jnp
xlat
ins
pushf
pushf
xchg
into
dec
es
ja
loope
xchg
callw
aas
lods
aam
call
xlat
cmp
sub
or
or
loop
aas
add
jmp
cmp
shl
das
es
test
sbb
mov
shr
push
adc
push
ins
stc
or
and
jns
and
test
ins
cmp
stc
jnp
fmul
addr16
push
cmp
mov
mov
sbb
mov
stc
sbb
pop
xchg
mov
dec
xor
pop
int
pop
adc
sahf
cwde
cmp
add
cs
in
jge
adc
and
out
rcl
rol
pop
mov
and
sub
das
sub
mov
adc
int
stos
pop
sbb
adc
pop
mov
fild
rcr
outs
cmp
nop
add
shl
ins
sbb
ret
jno
mov
stos
into
(bad)
aaa
sub
dec
sbb
aas
pusha
xor
retf
cmp
stos
xchg
stos
jl
jne
xor
inc
mov
repnz
outs
pop
retf
adc
in
xchg
pop
stos
int
cli
xchg
fs
xchg
lahf
adc
pop
stc
pop
jae
dec
inc
push
aad
xchg
adc
aad
es
mov
not
mov
pop
(bad)
int
inc
pop
and
sbb
stos
push
mov
out
imul
push
pop
cs
sbb
ds
sbb
clc
retf
pop
adc
sbb
xchg
sahf
ret
dec
mov
cmp
imul
in
xor
retf
je
add
or
fwait
inc
ss
imul
shl
mov
out
dec
mov
loope
jnp
push
stos
loop
jne
es
in
cmp
aam
xor
scas
jmp
shr
fcom
jecxz
mov
jmp
aaa
add
push
dec
inc
cwde
fs
dec
add
mov
inc
dec
or
ins
imul
mov
dec
inc
(bad)
ins
xor
pop
test
inc
adc
dec
pop
das
sub
or
fdiv
in
or
inc
shl
jmp
test
jp
jp
and
pop
ins
lahf
into
or
push
enter
cmc
imul
pop
pop
mov
or
sbb
xchg
fidiv
pop
(bad)
fbld
jmp
pop
imul
inc
(bad)
les
mov
and
inc
push
mov
and
retf
jno
adc
pop
icebp
rol
jg
mov
add
popf
jae
add
inc
or
data16
or
lods
aas
lock
pop
stc
ins
push
ins
out
mov
(bad)
cld
rol
mov
jmp
mov
fdivr
in
add
(bad)
call
je
push
push
jne
inc
push
ds
pop
jge
inc
repz
jp
mov
and
movs
jnp
or
mov
sub
in
(bad)
sar
hlt
aam
mov
xchg
clc
inc
cmp
retf
add
mov
je
fiadd
xlat
pop
mov
mov
dec
xchg
call
test
bnd
adc
call
mov
jg
cmps
lds
retf
push
dec
xchg
daa
jbe
jae
cli
loope
les
xor
jl
inc
in
mov
fstp
(bad)
mov
and
xor
in
adc
add
push
sub
push
fwait
loopne
bound
mov
push
inc
cmp
iret
pop
lock
dec
and
adc
fsubr
sahf
outs
fbld
pop
jnp
inc
mov
into
mov
push
ja
fisttp
push
mov
rcl
mov
sar
inc
jne
popa
out
test
lahf
or
jg
jne
mov
(bad)
neg
pop
in
fucomip
shl
cmp
test
fst
jmp
popa
mov
mov
add
sbb
jnp
adc
push
stc
inc
les
cmp
xchg
and
push
or
out
xchg
js
adc
dec
dec
xchg
add
jge
add
gs
arpl
or
retf
bound
aam
stos
mov
test
mov
dec
repnz
sahf
out
lods
mov
outs
sub
mov
xor
dec
neg
fistp
lahf
outs
loopne
test
dec
mov
shl
movs
test
jg
xor
xor
aaa
or
adc
cmp
arpl
push
cmps
out
cmc
stos
cmp
scas
mov
pusha
psrlw
inc
ror
in
stos
mov
xor
cmc
hlt
out
sub
shl
out
out
or
repz
mov
or
push
lods
jg
(bad)
mov
in
dec
xchg
mov
retf
mov
shr
sbb
stos
mov
xor
jo
mov
mov
setge
xor
sahf
arpl
inc
iret
xlat
rcr
dec
into
jbe
xor
dec
mov
sub
jmp
shr
int3
popf
cli
push
sbb
je
push
or
popa
mov
xchg
add
adc
jmp
inc
jmp
fadd
xchg
push
add
pop
cld
fnsave
sahf
sbb
jne
pop
idiv
imul
cmps
mov
mov
loop
xchg
pushf
pop
test
pop
inc
and
add
adc
cli
cmp
xlat
nop
push
sbb
popa
inc
into
lods
jmp
mov
push
sbb
mov
or
inc
ret
repz
call
movs
cmp
int
adc
sub
pusha
not
mov
sub
add
pop
push
push
daa
(bad)
(bad)
popf
ins
mov
lds
xchg
sub
push
movs
xor
sti
push
dec
out
cmc
in
ja
and
or
mov
push
cmp
pop
in
sbb
test
popa
in
dec
test
sub
pop
add
popf
cmp
pusha
sbb
pushf
or
iret
mov
jae
push
mov
mov
nop
mov
gs
sbb
icebp
push
push
push
mov
pop
inc
nop
mov
dec
mov
mov
out
mov
inc
stos
push
sub
neg
(bad)
xchg
addr16
mov
mov
jge
nop
sub
out
iret
mov
cmp
pop
repz
jmp
mov
dec
dec
and
mov
adc
repz
add
pop
lds
sti
in
add
and
pop
jmp
inc
fild
mov
push
sbb
sbb
add
inc
dec
mov
loop
lock
mov
push
daa
adc
dec
jbe
push
dec
repnz
shr
aaa
leave
fwait
pop
inc
aaa
xchg
hlt
inc
jnp
mov
jge
ins
ror
cs
imul
imul
inc
push
(bad)
mov
mov
fstp
mov
mov
mov
pushf
cmps
mov
inc
dec
arpl
mov
xchg
cmps
sub
movs
dec
xor
(bad)
aad
and
push
ins
call
xlat
or
lahf
lea
push
dec
xchg
dec
aaa
pop
jmp
jg
xchg
mov
repnz
mov
rcr
inc
gs
xchg
addr16
and
mov
mov
mov
xchg
sub
addr16
sar
int
jo
movs
enter
scas
ja
int3
push
imul
cmp
xchg
cmc
mov
push
push
mov
loopne
and
xor
mov
mov
jl
int3
fs
mov
jl
xlat
cmps
retf
scas
out
sbb
hlt
jmp
mov
bound
inc
cmp
jno
mul
cmp
test
daa
pop
cmp
mov
inc
inc
repz
loopne
cmps
pop
fnstenv
repz
mov
and
fcomp
jl
cdq
sbb
lods
in
jb
fwait
add
add
ins
cmc
(bad)
movs
mov
mov
inc
cmp
inc
and
xor
jl
jne
pusha
cmp
dec
jge
or
mov
push
push
and
cmc
xchg
jo
adc
sbb
dec
push
pop
stos
aaa
sub
and
mov
neg
push
cmc
dec
pop
das
xchg
dec
adc
inc
int3
xor
adc
shl
xchg
popa
mov
xor
sbb
imul
fisubr
int3
mov
sub
scas
push
cmp
pop
jno
outs
pop
jge
jp
jb
jg
cwde
add
pusha
cmp
mov
pop
movs
outs
add
jl
(bad)
retf
loop
mov
outs
(bad)
je
lea
into
xchg
aas
daa
push
popa
in
inc
mov
sbb
(bad)
test
fst
xchg
sbb
ja
pop
in
pop
xor
push
scas
dec
push
sbb
ins
clc
enter
imul
adc
jmp
xor
xor
shl
ror
mov
pop
mov
xchg
cmp
out
mov
cmp
push
xor
(bad)
push
inc
inc
sbb
cwde
mov
push
jb
jmp
ror
push
push
push
lods
faddp
repz
cmp
bound
pusha
sti
xchg
jecxz
mov
xor
cwde
retf
outs
fdivr
sbb
pop
xor
jecxz
daa
cli
jnp
shl
call
movs
mov
sub
imul
enter
xchg
mov
hlt
add
mov
xchg
pop
cli
fidivr
inc
dec
jp
or
jbe
aaa
cmps
push
inc
push
mov
ret
xchg
add
cmp
jb
or
(bad)
fsub
out
adc
mov
mov
cmps
mov
pop
adc
push
mov
inc
xchg
rol
mov
mov
jmp
mul
div
xchg
imul
cmp
pusha
sar
popa
fistp
push
ins
and
(bad)
pushf
jbe
vpunpcklqdq
aaa
xor
adc
push
and
loop
pop
xchg
xchg
jno
dec
pop
outs
inc
outs
scas
mov
rol
rcl
xchg
mov
xchg
(bad)
clc
lea
adc
push
test
xor
cmp
pop
shr
std
xor
cdq
data16
(bad)
out
adc
retf
jmp
jle
sub
mov
dec
ins
stos
retf
lods
(bad)
mov
clc
sbb
and
mov
fwait
out
xor
inc
pop
pop
lahf
fsub
in
(bad)
cmp
sti
in
(bad)
cwde
jo
std
push
adc
add
jle
vunpckhpd
xor
aas
add
dec
sub
mov
ds
or
cwde
mov
idiv
call
xchg
jns
pop
call
rol
shl
inc
adc
jae
sbb
mov
lds
or
dec
in
test
mov
inc
and
cli
or
aam
(bad)
loop
and
push
fdiv
jp
lea
div
retf
cmp
jno
xor
out
ficom
fidivr
xchg
add
and
adc
clc
ror
sub
cs
jge
ret
jbe
out
cdq
sbb
enter
xchg
ffreep
push
pop
imul
fidivr
lods
mov
call
fsubr
ins
adc
lds
mov
(bad)
mov
cwde
loope
adc
icebp
jae
adc
dec
adc
dec
push
or
jb
cmp
jnp
es
sbb
push
ss
sbb
ret
cmps
and
fisub
jp
scas
in
mov
ins
nop
add
push
mov
mov
call
cmps
idiv
ja
push
mov
jne
mov
aad
push
les
push
mul
cmp
cmp
mov
fsub
pusha
test
dec
pop
dec
add
or
repz
jb
xor
rol
or
mov
jecxz
ins
xor
mov
sub
sub
mov
(bad)
out
dec
sbb
xchg
push
das
mov
or
push
mov
jns
ds
cmp
cld
(bad)
mov
(bad)
aaa
loope
arpl
mov
ss
shl
shl
dec
mov
loopne
pop
std
pop
jmp
mov
es
push
and
ror
or
jl
push
dec
cmp
stos
movs
aam
imul
test
outs
and
mov
data16
mov
enter
lods
cmp
pusha
(bad)
call
daa
int3
in
test
push
dec
jge
add
adc
add
jb
add
call
jle
out
jbe
(bad)
aad
dec
mov
lods
(bad)
out
movs
inc
add
push
clc
leave
xchg
hlt
sub
pop
adc
retf
push
ja
addr16
hlt
jl
sti
push
mov
and
(bad)
mov
and
pop
cmp
pusha
jl
mov
pop
mov
or
in
cmp
repnz
push
mov
xor
inc
rcr
out
or
cmc
sbb
inc
xor
call
and
xchg
mov
mov
cmp
xchg
cmp
xor
mov
in
pop
fild
jle
inc
sbb
add
loope
cmps
push
stos
movs
rcr
jae
add
scas
sar
xchg
pushf
aas
or
adc
jns
sub
aaa
cmps
adc
mov
stos
pop
(bad)
push
xor
(bad)
lock
js
stos
lods
(bad)
xchg
hlt
jo
and
push
mov
adc
repnz
add
repnz
cmp
(bad)
ins
cli
mov
sar
out
pop
aad
retf
pusha
rcl
xchg
pop
mov
test
sbb
sti
jl
add
inc
test
arpl
lahf
sbb
and
inc
sar
and
jns
sbb
xor
dec
or
mov
inc
test
cwde
gs
int3
aam
out
push
dec
mov
or
jb
dec
dec
aam
mov
test
fwait
and
push
popf
sbb
mov
loop
retf
cmp
mov
jmp
xchg
sub
mov
test
xor
ja
adc
xor
fdiv
sub
push
mov
push
fucomip
sbb
adc
and
cld
int
inc
jmp
sbb
mov
movs
std
pcmpgtb
mov
inc
mov
jne
std
das
dec
mov
mov
dec
imul
mov
out
ret
lods
lods
scas
add
sub
ds
outs
sub
lock
aad
dec
arpl
cdq
mov
cmps
inc
inc
fidiv
pop
hlt
fild
or
xor
jp
and
inc
cmp
cld
xchg
jg
add
int
leave
mov
push
add
inc
jle
jo
dec
fcomp
retf
leave
push
addr16
xchg
(bad)
hlt
mov
mov
cmp
lock
rol
xacquire
bnd
sbb
sti
push
dec
inc
(bad)
(bad)
cmp
adc
xor
adc
dec
pusha
aaa
push
ins
jbe
push
int3
or
pop
fadd
jae
xchg
aas
cmp
mov
xor
int3
jle
or
jmp
sub
push
das
cmps
test
sbb
cmp
lods
in
and
and
sub
sbb
stos
gs
inc
retf
cmp
aad
mov
addr16
push
bound
dec
push
adc
sbb
mov
cmc
jne
cmovo
cmp
cwde
cli
and
daa
aaa
and
mov
pop
push
or
xor
scas
das
fidivr
or
cli
mov
pop
sub
jp
(bad)
jnp
push
inc
repnz
sub
iret
adc
(bad)
data16
scas
into
xor
mov
sbb
push
test
rcr
mov
ret
imul
hlt
push
add
stc
add
or
repz
daa
call
call
addr16
jne
call
sub
ja
pop
jmp
jne
test
jg
sbb
mov
sbb
cmp
xor
jns
xchg
js
std
popf
out
cmp
pusha
bound
push
xor
sbb
mov
sbb
jae
lahf
cmp
xor
and
jmp
jae
(bad)
mov
test
and
idiv
push
(bad)
and
test
fld
cs
icebp
sub
jo
cmp
iret
sbb
xchg
cs
sub
(bad)
dec
mov
mov
out
cld
jbe
jns
arpl
cmps
jl
in
stc
icebp
and
enter
cmp
clc
fisubr
dec
movs
xchg
cdq
cld
push
mov
push
sbb
sbb
push
push
daa
mov
pop
add
sbb
pop
add
ror
or
pop
push
cld
mov
gs
jmp
loop
dec
test
faddp
lods
dec
mov
jbe
cwde
loope
xchg
xor
xor
(bad)
mov
loop
and
fucom
pop
in
sti
cwde
sti
sbb
in
or
fnstcw
inc
movs
(bad)
arpl
push
and
cmp
sbb
sbb
mov
gs
cmp
retf
cmp
aad
xor
pop
ins
ret
mov
dec
loop
pop
daa
fild
add
into
outs
and
inc
pop
xor
sub
stc
cmp
jne
pop
push
add
loopne
push
jle
mov
add
adc
in
test
stc
cmp
mov
rcl
in
out
ret
pop
mov
les
dec
jo
fbstp
add
leave
enter
daa
inc
aam
xchg
(bad)
pop
xchg
xor
hlt
loopne
rol
jmp
aam
pop
ins
(bad)
and
or
out
pop
popa
into
shl
jecxz
xchg
xor
(bad)
push
dec
adc
mov
ds
loop
arpl
xchg
aas
mov
add
cmps
int
lahf
sbb
and
call
aas
pop
pushf
xchg
jmp
jmp
inc
enter
stc
test
pop
add
imul
xchg
sub
and
ret
dec
cmps
jge
shl
arpl
mov
sub
out
retf
mov
or
sub
push
xor
retf
jg
dec
ss
jnp
mov
xchg
inc
cmp
xchg
sub
xchg
jae
xor
cmp
mov
and
jmp
xor
(bad)
sti
pop
(bad)
rep
nop
sti
(bad)
sbb
cmps
test
and
iret
mov
fild
out
int3
fisttp
dec
arpl
test
loope
xchg
rol
dec
aam
(bad)
sub
ss
icebp
cmp
loop
dec
pushf
enter
or
pop
or
outs
jg
clc
mov
or
call
dec
int3
or
jg
in
mov
test
movs
aas
popf
xchg
dec
clc
xor
xor
hlt
xor
fcmovbe
into
ds
in
jmp
shl
xor
sbb
(bad)
test
leave
mov
cmp
mov
jecxz
fisubr
aam
mov
dec
jb
pop
push
xchg
call
in
lahf
dec
mov
ja
je
jg
cmp
push
push
mov
pop
imul
imul
add
outs
pop
sti
xor
int3
fldenv
xor
lods
outs
mov
movs
into
sar
rol
mov
mov
xchg
popf
jge
leave
pop
movs
dec
or
cmp
adc
mov
xor
cmp
sbb
das
sub
int
mov
daa
adc
test
dec
and
fcomip
sub
xchg
sbb
dec
and
mov
idiv
in
sub
push
mov
mov
sbb
xchg
xchg
and
push
repnz
in
jge
fdiv
outs
push
pop
stos
mov
or
int
movs
mov
jae
inc
shr
(bad)
(bad)
mov
xor
retf
test
lea
add
push
movs
jle
adc
cli
dec
cmps
cmps
not
addr16
mov
(bad)
outs
ror
adc
(bad)
xor
push
div
jg
ins
fwait
and
sub
mov
(bad)
or
xlat
ffree
(bad)
jecxz
std
mov
call
xchg
es
cld
jmp
es
or
push
imul
mov
pop
cmc
(bad)
les
cli
sbb
out
jae
xchg
test
lahf
(bad)
and
shl
push
retf
add
adc
add
int
out
rol
xchg
loop
push
ins
xchg
mov
stc
adc
add
and
add
aad
imul
cmp
mov
push
push
mov
gs
call
xchg
jb
cmps
sti
cmps
mov
inc
and
ins
into
fwait
addr16
out
stos
xchg
popf
mov
adc
push
scas
jge
dec
inc
add
call
sahf
mov
inc
push
pushf
dec
gs
jae
stos
jg
jg
inc
pop
inc
movs
aad
jmp
es
mov
(bad)
fs
loopne
push
xchg
sub
std
movs
nop
jge
enter
fldcw
adc
ja
add
inc
cmp
sbb
pop
pop
movs
fld
pop
out
pmaxsw
std
jp
jmp
test
(bad)
and
add
jmp
sub
(bad)
out
mov
enter
inc
inc
loop
nop
lahf
(bad)
fmul
movs
cmp
adc
jno
mov
int
cli
add
xlat
test
mov
xlat
add
je
jo
jo
pop
loop
call
(bad)
nop
adc
cmp
pushf
vminps
enter
retf
xrelease
xchg
pop
cld
into
add
jbe
sub
retf
fbstp
cs
or
xlat
mov
cli
sbb
sbb
inc
iret
cmp
push
repnz
cmp
add
xor
data16
mov
mov
or
sub
sub
shr
cmp
jbe
aad
adc
xchg
cmps
cmp
mov
cmp
scas
lahf
sbb
sub
sbb
test
(bad)
adc
xchg
inc
adc
xchg
ud2
fild
mov
and
cmp
ror
push
lods
push
les
in
mov
push
test
inc
inc
pop
je
adc
(bad)
mov
adc
scas
neg
adc
shr
data16
sub
jne
adc
dec
(bad)
fst
mov
loopne
inc
jnp
sub
mov
mov
inc
iret
xchg
test
das
fld
jge
fcomp
or
ret
clc
rcl
sbb
aas
fdivr
ret
or
ror
scas
add
mov
jno
or
dec
fisttp
retf
adc
mov
and
mov
hlt
mov
adc
loopne
xor
pop
les
mov
sub
bound
xchg
inc
mov
push
outs
sbb
pushf
out
clc
adc
or
shl
cmc
cmps
out
xor
push
mov
add
jp
cmp
inc
adc
adc
add
and
mul
xchg
xchg
lds
into
mov
push
je
bound
mov
cwde
pop
mov
and
fucompp
sbb
out
xor
adc
(bad)
xchg
fst
mov
sbb
test
pop
repz
movs
xchg
adc
and
or
leave
repz
xchg
loope
pop
mov
mov
data16
mov
xchg
popa
imul
ins
add
jno
inc
std
sub
mov
sar
stos
popf
(bad)
xchg
imul
bound
movs
jmp
out
cmp
test
adc
iret
lahf
adc
pop
shl
and
or
imul
jno
pop
sub
ret
ret
push
cmp
scas
dec
fmul
lea
ret
mov
adc
xor
(bad)
pushf
mov
out
sub
xchg
cmp
outs
cmps
mov
popa
retf
stos
stos
in
repnz
aaa
icebp
and
aam
push
jb
sahf
push
pop
out
mov
xchg
movs
or
rcr
mov
fimul
popa
push
cdq
lods
(bad)
in
(bad)
rol
stos
or
mov
dec
mov
cdq
fdivr
in
jmp
mov
mov
ss
cmp
into
inc
sti
jmp
xlat
xor
dec
rol
dec
das
shl
pop
fucomi
mov
les
add
push
inc
adc
test
xor
cdq
push
fisttp
call
ins
lods
jne
adc
scas
stos
mov
sub
mov
rcr
ins
pop
(bad)
pusha
nop
lahf
push
or
mov
aam
and
push
pop
mov
push
push
outs
xor
arpl
xchg
call
push
icebp
outs
fisub
fwait
(bad)
shl
lods
cmp
shl
(bad)
fisub
es
ffree
mov
pushf
int
int
dec
call
fisttp
adc
dec
cmp
int
ret
add
push
cmps
jl
xchg
retf
inc
(bad)
leave
sub
outs
loopne
adc
fcomi
sub
pop
lods
push
cmp
dec
scas
inc
sub
outs
clc
js
mov
int
add
outs
fisttp
rcl
ficomp
pop
cmp
dec
and
es
jge
mov
int3
js
xor
cmp
jo
xor
stc
add
int
mov
jecxz
sub
add
jle
gs
imul
in
mov
push
sti
jo
and
dec
mov
cmc
daa
add
(bad)
clc
mov
jmp
das
jne
fisttp
test
or
pop
mov
sub
outs
nop
iret
push
outs
dec
pop
mov
ret
fimul
test
enter
pop
adc
inc
cs
aas
mov
out
xor
fwait
cmp
inc
std
xchg
mov
dec
scas
ja
fwait
movs
sbb
mov
dec
pop
dec
shl
jnp
fisub
iret
push
in
push
adc
or
sub
std
or
xlat
frstor
js
test
ins
lock
sbb
push
stc
mov
mov
into
pop
mov
pop
fadd
push
sub
in
enter
out
jbe
js
push
jmp
shl
(bad)
mov
inc
jae
(bad)
aam
cmp
dec
test
iret
mov
xor
(bad)
iret
cwde
xchg
inc
jge
movs
jno
inc
and
(bad)
cmp
fwait
ret
out
xchg
and
sar
xchg
adc
and
jp
mov
fst
sbb
in
push
jne
and
aas
xor
or
xor
lods
mov
aaa
arpl
xor
fld
dec
jecxz
lds
(bad)
mov
dec
or
mov
ds
dec
sub
fistp
inc
push
xchg
cmp
cdq
sub
hlt
push
push
icebp
jmp
mov
push
repnz
dec
call
sbb
jge
fcomp
and
push
cmp
arpl
cmp
cmp
dec
fwait
repz
leave
test
dec
xor
movs
mov
lds
ret
lea
in
test
sbb
enter
xor
and
sbb
cld
in
xchg
inc
lea
test
push
inc
mov
in
out
push
push
in
fcomp
lock
jns
push
or
clc
fistp
jl
add
mov
jbe
sbb
rcl
out
je
pop
inc
aam
(bad)
ss
(bad)
mov
cmc
mov
rcl
push
iret
cmp
loop
mov
imul
mov
mov
push
xchg
add
sbb
loopne
ror
inc
xchg
push
fild
rcl
fcomp
test
dec
xchg
sub
es
jecxz
cmp
pop
inc
mov
dec
mov
add
xchg
sub
loopne
pop
js
dec
imul
and
mov
xchg
mov
cs
icebp
mov
inc
mov
clc
or
push
push
loop
cmp
sub
inc
sub
mov
jg
or
aad
inc
popa
or
out
mov
push
jecxz
mov
sub
add
fmul
push
sbb
pop
ja
xchg
pop
sub
xchg
xchg
push
jae
push
mov
movs
sbb
sub
or
stos
xchg
lds
xadd
jbe
jnp
loopne
sar
sub
aad
ret
mov
xor
leave
sti
inc
loopne
inc
ret
jns
popa
dec
cmp
and
sbb
clc
ret
sti
push
outs
mov
cmp
leave
outs
cmps
push
push
sbb
or
icebp
setge
ror
cdq
jnp
in
xor
cld
jns
hlt
ret
adc
mov
imul
rcl
in
xchg
sub
pop
xlat
in
cmps
mov
(bad)
rcl
jb
call
(bad)
xchg
mov
movs
inc
adc
xchg
cmps
(bad)
enter
add
push
dec
mov
iret
inc
rol
sub
sbb
cmp
pop
nop
jecxz
mov
push
int
add
or
enter
dec
inc
inc
and
mov
xor
repnz
sar
hlt
ja
(bad)
mov
shr
(bad)
jg
add
jb
imul
pop
push
nop
iret
xchg
cmp
cmp
cmc
jnp
js
cmp
or
shl
mov
dec
pop
das
mov
mov
lea
cmp
je
inc
dec
hlt
in
mov
xchg
push
jae
mov
sti
enter
push
inc
jo
push
mov
add
add
out
xchg
test
aaa
rol
cmps
clc
int
pop
adc
and
ret
lods
cmp
in
scas
xchg
and
push
xlat
adc
xchg
lds
push
mov
or
or
scas
pop
inc
loop
inc
add
mov
rcr
xlat
in
sub
mov
out
pushf
jno
mov
loopne
(bad)
mov
call
movs
test
pop
push
mov
in
jge
call
sub
aas
push
lods
and
xchg
jae
adc
sar
push
push
pop
adc
adc
mov
pop
or
dec
cmp
mov
xchg
add
(bad)
aas
movs
mov
sub
arpl
or
pop
test
push
ret
jmp
pop
pop
sub
shl
xchg
loop
push
iret
cdq
psllq
ror
add
(bad)
out
ret
adc
jb
mov
xchg
xlat
fild
ja
adc
inc
sbb
jne
hlt
fcom
pop
in
adc
jmp
and
js
iret
jmp
xor
loopne
adc
ds
inc
jmp
mov
ret
jb
dec
mov
addr16
sub
bound
mov
cmp
shl
inc
mov
sub
retf
repz
shr
cmp
fdivrp
das
push
inc
hlt
lahf
test
mov
popa
shr
push
nop
es
aas
cld
mov
or
(bad)
jae
shl
fs
jmp
iret
sub
inc
pop
sub
mov
mov
inc
mov
(bad)
adc
bound
mov
or
mov
inc
out
inc
adc
fs
aad
stos
imul
add
ins
xchg
dec
adc
xchg
loop
cmc
pushf
push
jnp
mov
retf
xor
push
in
pop
scas
jnp
out
and
jbe
sar
bound
cmp
mul
jno
repz
fstp
leave
jno
add
sub
inc
arpl
jle
dec
fs
pushf
repz
jge
mov
mov
test
inc
(bad)
mov
movs
repz
pop
or
dec
xlat
sbb
ds
pop
out
ror
out
or
dec
mov
cs
push
mov
inc
in
ror
inc
dec
cmc
int3
(bad)
adc
fimul
jbe
icebp
(bad)
sub
mov
dec
dec
push
popf
dec
das
mov
pushf
shl
inc
mov
push
call
dec
cmp
lds
pop
jns
pop
call
pushf
movs
cmp
push
and
sub
mov
push
jg
ror
inc
jle
dec
xor
lds
mov
retf
inc
inc
pop
int
mov
and
pop
pop
cs
add
shl
mov
ja
das
pusha
cmp
int3
mov
or
push
nop
retf
pushf
cld
call
sub
mov
pop
cwde
xor
inc
into
sbb
stos
xchg
push
(bad)
and
xlat
retf
(bad)
(bad)
leave
(bad)
xchg
addr16
mov
and
fs
sbb
lods
inc
std
mov
clc
xlat
mov
pop
lods
cmps
pop
push
ss
icebp
(bad)
mov
out
aad
movs
cmps
adc
push
push
and
inc
popf
xor
ret
retf
outs
aam
rcr
popf
and
or
and
xchg
mov
adc
sub
and
jnp
mov
sbb
(bad)
je
cmp
mov
out
aam
adc
mov
mov
enter
adc
mov
imul
push
cwde
test
rcl
sti
aam
adc
dec
add
jmp
push
dec
cmps
cmp
dec
add
je
jmp
inc
pop
out
xchg
shr
jg
or
xchg
inc
fwait
push
mov
rcl
mov
sbb
gs
cmp
(bad)
push
jmp
test
daa
pop
cli
addr16
neg
push
dec
mov
cmc
mov
push
mov
pop
out
lods
or
js
retf
pop
scas
retf
jecxz
rcr
stc
jbe
inc
daa
loope
mov
shr
(bad)
leave
sub
jns
jmp
out
push
retf
adc
psrad
mov
adc
ror
jne
movs
inc
data16
lea
jmp
add
or
push
adc
mov
cmp
cmp
cdq
mov
hlt
mov
aam
cmps
dec
add
pop
imul
ror
mov
out
fadd
(bad)
adc
add
xor
lea
and
in
lods
xor
push
xor
sbb
xor
sbb
(bad)
sub
adc
sbb
dec
movs
xchg
sbb
jns
fmul
call
push
sub
shl
in
sub
pop
inc
std
lods
sti
std
sar
div
(bad)
push
es
std
aam
dec
xor
call
push
add
out
lock
(bad)
fistp
push
popf
xor
sbb
xchg
mov
in
cmps
call
sub
pushf
inc
dec
ficom
pushf
imul
call
iret
mov
enter
cmp
pop
das
push
push
cmps
cmp
loopne
sub
push
adc
in
push
fwait
mov
jg
outs
cmp
outs
test
jg
cwde
mov
repnz
pop
shl
jg
sbb
jmp
and
test
mov
in
rcl
sbb
jbe
push
les
dec
add
fdiv
retf
mov
pusha
push
or
sub
(bad)
xchg
push
rcr
xchg
popf
icebp
jns
sbb
ss
push
sar
scas
daa
cld
pop
inc
pop
dec
pop
and
fld
mov
imul
mov
cmc
mov
pop
scas
mov
xchg
push
jle
inc
pop
push
cld
arpl
in
ja
cld
icebp
std
sbb
dec
(bad)
push
fsub
mov
push
xchg
clc
sbb
int3
pop
int3
mov
aas
pusha
mov
test
sub
and
mov
es
pop
inc
test
inc
cli
sti
stos
sbb
pusha
cmp
dec
sti
imul
rep
xadd
sub
nop
loop
ins
pushw
mov
dec
rcl
dec
inc
xor
xchg
popa
inc
xor
dec
cli
retf
fs
adc
push
cmp
xchg
or
pop
lea
xchg
sbb
sbb
push
pusha
and
sahf
mov
shl
pop
mov
mov
in
es
adc
test
push
xor
shr
fild
xor
push
test
pop
stos
xchg
jne
int
mov
leave
adc
xchg
jo
inc
ins
pop
(bad)
push
aas
repz
in
xlat
sbb
imul
movs
mov
sub
jmp
mov
sbb
sub
loop
cmp
pop
dec
and
aad
fdivr
pop
or
(bad)
mov
out
jo
dec
xor
hlt
dec
movs
repnz
mov
test
es
arpl
mov
adc
inc
sbb
repnz
call
mov
ins
sbb
rcr
adc
movs
scas
fnstenv
xor
fstp
stos
add
sbb
lea
hlt
aaa
jle
scas
adc
xchg
mov
dec
lods
mov
dec
ret
addr16
xchg
popf
out
jno
sbb
data16
aas
stos
fmulp
jg
jb
sub
pop
pop
int3
jg
adc
inc
xchg
ins
fiadd
pusha
cmp
add
mov
cld
shl
sti
sub
jecxz
and
mov
ins
add
aad
mov
repz
mov
mov
sub
scas
mov
sub
inc
add
jmp
pop
test
bound
sar
test
xchg
pop
dec
test
fcomip
inc
es
inc
and
sbb
mov
cmp
adc
or
add
imul
dec
adc
aaa
lea
lock
stos
mov
aaa
add
pop
sahf
dec
mov
mov
mov
pop
popa
and
mov
mov
fs
(bad)
scas
nop
mov
push
aam
out
push
add
mov
in
out
mov
jge
pop
mov
out
fistp
test
mov
out
mov
(bad)
mov
xchg
inc
pusha
cmp
rol
movs
mov
cmp
pop
push
mov
jle
push
scas
sbb
repz
cmp
ret
adc
cmp
inc
xchg
iret
fadd
test
xor
sahf
dec
adc
adc
sub
push
data16
jg
retf
jb
pop
js
pusha
add
scas
or
lds
sbb
cwde
dec
rol
mov
(bad)
loopne
add
fld
xchg
sbb
(bad)
aam
add
fcom
out
jnp
push
clc
mul
aam
sub
pop
jno
outs
mov
nop
jae
sbb
cmp
in
mov
stc
xor
add
mov
jecxz
scas
cmps
mov
xor
or
mov
(bad)
mov
js
inc
sbb
mov
hlt
or
adc
mov
xchg
ror
sahf
add
dec
sbb
or
je
jns
mov
stc
test
in
lods
jb
fld
xchg
nop
out
in
mov
sahf
sbb
dec
mov
mov
fdiv
add
or
sub
pop
data16
xchg
xchg
sub
xor
push
js
lods
neg
(bad)
sub
or
add
push
xchg
sahf
jecxz
pop
enter
mov
jg
loop
shl
mov
inc
or
scas
add
mov
loop
and
add
mov
scas
cmp
mov
movs
call
cdq
sbb
retf
or
pop
push
fisttp
inc
mov
or
(bad)
popa
cmps
cmps
lea
push
push
clc
mov
cmp
mov
dec
out
push
ret
or
inc
mov
in
xor
dec
rcl
push
dec
lods
cwde
lds
mov
mov
adc
mov
sub
mov
add
push
jle
jo
lds
sub
iret
cwde
and
mov
imul
je
xchg
inc
cmps
mov
add
daa
out
and
fcom
popa
mov
xlat
(bad)
pop
jmp
inc
sbb
and
mov
retf
div
sar
mov
adc
or
xchg
cmp
sub
aam
(bad)
rcl
and
and
imul
enter
xlat
or
xchg
popf
inc
sbb
or
adc
jb
jae
sub
jo
xchg
in
adc
mov
mov
sub
ror
xchg
add
jmp
jge
test
cmp
push
iret
adc
dec
scas
mov
(bad)
xor
xchg
and
daa
(bad)
scas
lock
and
aam
mov
verw
adc
fld
les
lahf
je
xor
shl
push
pop
ins
sar
stos
rcl
xor
sbb
xor
ins
dec
es
in
inc
sahf
(bad)
scas
repnz
mov
xor
loopne
xlat
cmps
mov
cmp
mov
outs
adc
idiv
sub
inc
mov
or
push
loopne
addr16
jo
cbw
vaddss
lods
outs
cld
inc
ss
sahf
jecxz
or
nop
xchg
dec
mov
bsf
mov
in
inc
jae
retf
xchg
dec
mov
test
xor
mov
(bad)
xchg
ret
mov
and
idiv
push
and
add
mov
adc
jmp
lahf
fwait
xchg
popa
(bad)
adc
cmp
dec
jmp
jmp
jg
pop
loope
enter
fisubr
dec
or
fld
jnp
fcom
ret
mov
inc
aaa
popf
xor
jmp
xor
xchg
sbb
lods
(bad)
mov
and
repnz
xchg
pop
mov
sub
and
imul
mov
int3
cwde
hlt
lahf
inc
and
ds
sti
xchg
jmp
inc
sar
fiadd
dec
loope
ror
dec
mov
mov
cmps
ror
adc
imul
imul
cld
or
cmp
sub
push
dec
mov
fcomp
pop
test
mov
mov
push
test
mov
dec
ss
ds
lahf
xchg
sub
xor
push
cwde
cmp
enter
imul
xchg
mov
sub
mov
fbld
or
push
sub
mov
mov
or
js
mov
std
out
out
xchg
(bad)
rcr
adc
mov
push
lods
loope
pop
sar
in
inc
and
sbb
loopne
(bad)
cld
mov
call
pop
lock
mov
aas
mov
in
jae
aaa
and
push
dec
mov
stc
xor
or
sub
mov
lods
aam
add
mov
mov
cmps
mov
jb
ins
add
dec
lahf
cmc
ret
xor
les
imul
cs
jecxz
sub
in
fcomp
and
dec
mov
xor
mov
cs
jp
dec
dec
fstp
out
dec
adc
sahf
dec
pop
sub
test
mov
fadd
mov
or
fsubrp
or
sub
jns
out
sub
loope
lock
xchg
adc
in
sub
pop
jecxz
mov
mul
mov
sbb
pushw
ror
cmp
add
jne
inc
lods
mov
jne
outs
push
loope
and
mov
int
push
cmp
add
xor
jmp
mov
bound
mov
push
jo
popf
xchg
ret
popa
push
sub
aam
xchg
pop
ja
sub
adc
cmc
enter
cli
loopne
pop
jl
popa
pop
in
adc
ja
arpl
jp
inc
call
sub
aaa
push
pop
test
les
mov
rcr
add
je
into
sahf
sub
dec
shl
sbb
push
clc
cli
daa
jg
aaa
stos
je
movs
push
js
xor
call
fs
mov
je
mov
xor
xchg
nop
jecxz
sbb
ja
push
pop
jo
out
dec
mov
mov
add
retf
xor
jns
pop
cld
xchg
pop
jecxz
pop
scas
push
nop
movs
pop
ds
imul
cmp
or
test
pop
and
fld
sbb
imul
sub
xchg
mov
inc
inc
fnstcw
mov
cmp
jle
cmp
mov
test
dec
call
fucomi
mov
fdiv
test
adc
lfs
inc
outs
ret
push
pop
ss
je
(bad)
push
adc
in
sbb
xchg
nop
lea
in
ret
cmp
jg
inc
(bad)
rcl
pop
mov
adc
test
sub
pop
cmp
lods
mov
or
inc
and
and
mov
inc
nop
cmc
jg
aam
test
aad
push
data16
add
(bad)
xchg
pop
push
shl
fldcw
mov
stc
add
fiadd
out
cmc
mov
cwde
and
ins
dec
mov
jle
movs
mov
sub
xlat
fsub
retf
dec
shl
int3
imul
rcr
fimul
je
adc
mov
loope
aam
pop
int3
cli
aam
and
push
or
repnz
pop
mov
jg
add
sbb
or
push
lahf
mov
ficom
in
xchg
cmps
ret
xchg
dec
stos
or
cmp
sub
clc
outs
arpl
dec
lea
mov
ret
inc
pop
imul
jmp
pusha
or
mov
cld
adc
sub
idiv
and
add
fadd
jmp
jmp
call
cmp
fwait
leave
retf
call
js
ret
scas
pcmpgtd
mov
(bad)
lea
xor
bound
xor
jnp
repz
adc
or
add
mov
xor
and
mov
inc
xchg
add
cmp
js
test
pop
push
fsubp
enter
std
mov
jmp
mov
inc
push
inc
and
fild
sub
and
pop
mov
xchg
mov
inc
in
and
shl
mov
iret
mov
or
dec
stos
pop
jo
(bad)
lahf
mov
test
in
xor
hlt
cmps
leave
add
cmc
(bad)
dec
out
fwait
int
repz
lahf
ins
mov
(bad)
into
adc
jmp
pushf
xchg
push
shl
sub
fwait
mov
xchg
call
sahf
cmc
popa
int
sub
arpl
pop
(bad)
dec
mov
shr
and
lock
dec
movs
ret
mov
pop
mov
es
jae
in
loope
pop
pop
leave
mov
dec
mov
push
sub
inc
xchg
jns
stc
ds
cli
xlat
jmp
add
sbb
nop
ret
inc
test
fld
jmp
retf
pop
pop
or
xchg
pop
lahf
mov
xchg
inc
cmp
sbb
cld
jns
sti
aas
lahf
js
fild
test
shl
pop
ffree
mov
add
inc
jmp
sub
pop
mov
iret
int
repz
add
int
lea
imul
enter
push
cmc
sub
pop
mov
add
out
cmp
pop
mov
(bad)
fimul
fwait
pop
jle
push
(bad)
jbe
push
cs
scas
pxor
or
dec
dec
retf
scas
rcr
jnp
push
push
jl
aas
lock
push
add
stos
pop
xlat
std
adc
xor
pop
cdq
cwde
sahf
punpckhdq
leave
nop
lock
(bad)
out
jns
std
adc
and
aas
out
fstp
retf
mov
or
movs
mov
test
pop
pop
ret
inc
dec
and
cli
add
add
inc
add
mov
je
data16
mov
lods
cmp
in
je
sub
lds
mov
push
cdq
inc
gs
bound
jl
lahf
out
aaa
popa
nop
sub
in
pop
and
gs
cmc
popf
mov
(bad)
fisubr
sbb
das
dec
mov
and
add
(bad)
repnz
leave
cmp
mov
aam
mov
sbb
xor
icebp
push
pop
sub
jb
mov
out
movs
sub
cli
sar
les
dec
ins
es
ins
out
ins
jns
and
mov
sbb
aaa
repz
ret
in
mov
outs
and
loope
or
adc
dec
mov
arpl
aad
xchg
push
or
sub
mov
mov
mov
rcl
cs
fld
inc
xor
pop
jo
ror
inc
xor
div
jmp
daa
cmp
jle
(bad)
dec
cmp
mov
outs
inc
mov
xchg
cmp
or
xlat
imul
stos
push
mov
mov
outs
gs
not
fs
dec
mov
stos
adc
int
xchg
iret
push
cmp
mov
jne
dec
lods
xchg
call
shl
int
push
stos
dec
sbb
pop
or
and
dec
jnp
dec
or
sahf
adc
adc
pop
push
mov
jns
addr16
fwait
sub
lods
pop
sbb
pop
jg
pusha
cmp
jb
push
mov
xchg
inc
xchg
(bad)
sbb
pop
(bad)
imul
push
jp
cmps
in
loope
add
leave
lock
pop
jne
cmp
int
mov
mov
out
xlat
or
(bad)
fistp
jmp
pop
xchg
add
sahf
mov
popa
ins
mov
lods
mov
mov
sbb
loopne
push
mov
cmp
pop
cld
test
fld
fidiv
enter
lahf
mov
ds
or
dec
js
xor
mov
std
pop
mov
pop
loop
sbb
mov
adc
adc
pushf
inc
xchg
leave
inc
fnsave
xchg
or
pop
add
in
sbb
sub
iret
xchg
xchg
add
and
xchg
xor
mov
pop
jo
pop
mov
mov
adc
pop
mov
ins
(bad)
int3
jecxz
sbb
xor
sar
icebp
pop
ins
xchg
and
paddq
push
jns
push
cmps
mov
ret
ss
arpl
inc
je
pop
push
retf
xchg
jge
int3
ror
inc
out
mov
fs
or
loope
jo
push
ja
int
add
push
cwde
xchg
sub
and
test
fist
mov
les
mov
shl
cmps
pop
jle
std
jnp
xchg
clc
shl
mov
or
sbb
rcr
lods
jp
mov
ret
cli
inc
call
jle
jmp
or
sub
pop
mov
fist
dec
jmp
push
adc
add
add
push
cmps
or
pop
(bad)
pushf
bsr
mov
jb
xchg
sub
and
lea
mov
cmp
add
push
pop
pushf
mov
xor
ins
jecxz
xchg
cmp
fld
fistp
sti
jns
sbb
stc
push
(bad)
int3
mov
push
repz
inc
sbb
push
out
inc
mov
or
mov
fs
push
fwait
rcl
sbb
sbb
(bad)
jns
add
(bad)
ja
leave
cmp
adc
test
sbb
in
and
inc
jecxz
push
in
push
adc
addr16
sub
stos
mov
jecxz
lods
inc
in
xor
push
jle
mov
mov
and
push
jle
mov
cwde
popa
sbb
inc
xchg
popa
adc
(bad)
cmps
xchg
pop
cmp
aaa
cli
mov
jnp
jge
adc
push
xchg
arpl
frstor
lds
mov
adc
or
mov
add
mov
retf
lods
or
xchg
popa
cli
in
jo
sbb
out
cs
push
arpl
jecxz
mov
inc
pop
cmovne
adc
daa
loope
mov
movlps
scas
in
std
cmc
xlat
mov
(bad)
in
ins
mov
cmp
xor
in
mov
xchg
movs
jno
pusha
jle
movs
mov
bound
add
dec
das
cmps
mov
sbb
or
loopne
or
mov
pop
in
mov
outs
out
cmp
inc
inc
cli
int3
pop
mov
(bad)
push
jno
xchg
push
fs
test
retf
in
shl
das
pushf
repnz
icebp
fldcw
aaa
inc
shr
sbb
xchg
js
nop
add
aad
push
jns
retf
je
xor
arpl
dec
in
and
or
test
jg
and
sub
and
retf
mov
pop
test
ror
(bad)
(bad)
shl
and
cld
or
stos
xchg
mov
scas
mov
inc
loop
jb
or
mov
pop
jns
fcomip
mov
inc
adc
xor
ffreep
jmp
xchg
(bad)
cdq
mov
cmc
in
ror
out
jmp
add
mov
pop
push
pop
lea
repnz
sbb
popa
xlat
pop
sahf
or
lea
sahf
pop
gs
and
dec
leave
mov
rcl
sub
sbb
mov
dec
or
mov
ds
scas
push
call
or
jmp
sahf
jp
adc
pop
scas
retf
dec
and
not
pusha
lds
xchg
pop
jae
stos
imul
rcr
vmwrite
jle
push
(bad)
outs
test
inc
pop
push
sbb
shl
loopne
mov
pop
add
scas
mov
popf
lods
xchg
sbb
xchg
pop
xchg
test
fcmovne
sar
pop
xchg
sbb
movs
and
in
add
clc
mov
push
pop
mov
dec
cmc
loope
loope
pop
repz
out
int
loopne
jl
push
sub
and
cmc
mov
push
or
xchg
stos
ror
test
jo
adc
ins
xchg
cmp
pop
jno
ror
pop
cmps
mov
sti
in
sub
push
(bad)
bound
dec
xor
ja
mov
jns
pushf
cld
sbb
adc
jo
xlat
loop
cmp
adc
or
push
sub
mov
mov
sbb
(bad)
lods
sbb
push
ins
cmp
popa
fisubr
inc
push
in
cli
jmp
cs
cmps
mov
out
nop
xor
mov
pop
cmp
loop
neg
ds
ret
(bad)
sub
arpl
xchg
jo
jp
sbb
repz
(bad)
mov
xor
jmp
je
aad
inc
out
daa
lds
push
mov
sub
pusha
(bad)
dec
cmp
loopne
xchg
frstor
mov
cld
and
xor
bound
jo
mov
inc
frstor
pushf
mov
test
jnp
fchs
imul
inc
push
aam
cmc
scas
cmp
gs
out
in
and
pop
dec
ret
jg
mov
int
and
ds
inc
lds
inc
dec
aas
das
cmp
pop
and
(bad)
and
ins
and
add
cmps
mov
inc
mov
out
cmps
and
test
dec
push
push
sbb
jnp
lods
sbb
mov
ins
(bad)
ror
push
sub
dec
jl
sub
or
jmp
mov
sbb
(bad)
xchg
mov
loopne
mov
cdq
lods
push
sbb
movs
sub
or
jp
jp
in
inc
mov
xor
adc
ret
fs
out
adc
scas
cmp
test
jge
cmp
sbb
cmps
mul
inc
jo
sub
fiadd
pop
push
ins
xchg
daa
popa
iret
sbb
xor
pushf
mov
das
and
mov
xor
dec
mov
outs
and
mov
jb
cs
dec
inc
jge
inc
jecxz
test
mov
xor
popa
lods
mov
push
clc
add
rol
enter
or
(bad)
sbb
add
add
mov
pop
cwde
int
jbe
test
xor
je
xor
or
(bad)
aad
mov
and
push
loop
ret
dec
aam
adc
in
pop
xchg
mov
pop
dec
in
xor
mov
jo
cmps
or
mov
xor
wrmsr
je
(bad)
mov
nop
mov
pop
inc
mul
xchg
xchg
xor
mov
dec
pop
popf
pushf
dec
inc
push
sar
aas
xchg
das
in
sbb
jmp
aaa
xor
(bad)
mov
xchg
(bad)
and
mov
pop
xchg
add
push
ja
outs
mov
fwait
jmp
mov
aad
loop
pop
jle
rcl
sar
in
adc
retf
mov
imul
and
mov
adc
dec
mov
repz
sub
nop
mov
ins
mov
in
mov
cmp
xchg
sub
gs
pop
sbb
mov
repz
popa
mov
loope
ror
xor
stc
test
lock
adc
push
push
into
xchg
hlt
popf
nop
ja
retf
push
inc
mov
lock
add
fimul
mov
pop
popa
cmp
xor
(bad)
loope
mov
loopne
cmp
adc
aaa
push
outs
jmp
stc
lock
jb
adc
clc
jp
sub
mov
mov
clc
mov
movs
scas
xchg
jmp
jmp
gs
cdq
mov
mov
or
repnz
cs
mov
push
jne
shr
pop
mov
sbb
mov
and
cli
sbb
daa
sahf
jnp
xchg
add
hlt
lods
stc
outs
dec
pop
xchg
vmovups
aas
ret
aad
call
add
xchg
mov
sar
jmp
leave
ins
stos
ret
popa
push
inc
shl
sbb
mov
les
add
mov
lock
loope
adc
cli
sub
inc
and
pop
xor
aaa
popf
push
mov
cmp
or
inc
mov
cmp
xchg
jge
nop
and
mov
sub
cmp
mov
cmc
cmp
fimul
nop
jns
pop
jg
movs
scas
inc
mov
xor
sbb
pop
dec
pop
push
hlt
inc
ror
mov
adc
mov
sar
iret
jo
pop
sbb
jne
aas
jg
jbe
jg
or
mov
pushf
xchg
inc
out
out
je
popf
outs
sub
das
inc
test
and
mov
push
dec
cld
sub
out
sub
fidivr
popf
ins
je
aam
jne
shl
dec
mov
outs
adc
jbe
mov
push
add
mov
push
pop
inc
arpl
leave
jns
rcl
and
mov
adc
dec
sahf
popf
mov
das
shl
sub
(bad)
sub
sbb
cmp
outs
stos
dec
sub
and
or
fidiv
cmp
lock
cmp
gs
(bad)
(bad)
cld
sbb
adc
sbb
cli
jg
sub
sbb
cmp
into
shl
fisub
pusha
mov
sub
add
call
dec
inc
jbe
mul
mov
and
mov
test
ins
xor
push
jno
pop
loope
shl
or
div
addr16
rcl
shr
loope
jo
(bad)
mov
jo
outs
cmp
int3
(bad)
imul
cmp
aam
push
add
popf
rol
cmps
and
mov
push
and
hlt
out
icebp
pop
dec
jecxz
push
mov
out
add
lock
cmp
idiv
imul
pop
vunpcklps
sti
cli
mov
xor
cmps
mov
pop
xchg
dec
push
dec
(bad)
jg
adc
cli
mov
movs
sub
push
stos
dec
pop
mov
adc
pusha
and
test
movs
pop
mov
rcl
(bad)
imul
adc
dec
jg
rcl
cmp
sub
lahf
xchg
xchg
or
cwde
xchg
push
fadd
xor
repnz
dec
pushf
test
leave
mov
mov
pop
loop
sub
test
xlat
mov
inc
mov
push
push
add
scas
(bad)
in
sbb
xchg
mov
(bad)
scas
test
addr16
xchg
icebp
mov
adc
and
ret
mov
inc
cdq
mov
je
pop
inc
mov
sub
shr
out
lea
jecxz
jmp
mov
(bad)
push
xchg
sti
pop
aam
repz
adc
pop
hlt
push
jno
outs
in
jb
push
scas
jmp
loop
jmp
sbb
xor
push
sbb
movs
test
mov
sbb
test
mov
inc
adc
fnstenv
jmp
fstp
mov
pop
xor
xor
out
inc
cmp
ret
add
push
push
mov
bound
imul
ins
fnstcw
ss
sbb
cmp
jmp
xchg
push
call
fisttp
mov
push
lods
cmp
scas
or
sar
cmp
adc
mov
push
and
inc
xor
xchg
pusha
xchg
fwait
inc
inc
fist
sbb
lahf
mov
jle
xor
das
inc
or
add
jmp
cmp
shl
mov
or
sbb
pop
push
sar
jp
std
and
out
push
push
push
and
fiadd
cli
cmp
xor
imul
xchg
nop
into
fadd
push
jae
push
std
imul
(bad)
mov
xchg
inc
mov
ja
add
retf
add
enter
xor
sub
and
lock
lods
or
xchg
repnz
sbb
xor
cmp
mov
mov
stc
sbb
adc
inc
test
jge
push
imul
sbb
and
pop
jmp
or
movs
sub
outs
and
add
mov
ja
repz
xchg
aas
dec
test
shl
stos
fwait
jo
xlat
jb
xor
unpckhps
add
gs
sub
pop
int3
pop
frstor
xor
sub
or
push
icebp
popa
and
pop
rol
dec
mov
push
sub
ins
nop
dec
enter
data16
addr16
(bad)
mov
mov
add
out
mov
or
push
sub
movs
loope
pop
push
adc
push
lea
mov
or
dec
mov
jne
pop
xchg
lock
push
dec
mov
loopne
outs
mov
mov
and
popf
sar
adc
(bad)
pusha
xor
adc
xchg
inc
cmp
ins
cmp
sub
fisubr
or
loop
adc
mov
imul
dec
xor
sub
sbb
cmps
mov
out
add
xchg
addr16
(bad)
xor
fnstcw
idiv
adc
cmp
xchg
in
sub
xlat
cmc
fadd
sbb
gs
fst
mov
sub
sbb
out
sbb
jo
(bad)
xor
or
or
xchg
xchg
sti
dec
int
jne
push
lods
clc
shl
add
mov
and
outs
std
(bad)
mov
and
add
dec
and
jge
fcom
dec
inc
les
cmps
imul
pop
cs
pop
cmp
stc
xor
add
or
retf
push
stc
fcmove
popf
adc
int3
dec
xlat
cmps
addr16
sub
sub
add
jecxz
mov
push
pop
lock
xchg
jl
inc
xor
fmul
push
xor
fmul
int
je
(bad)
mov
imul
add
jl
xor
mov
stos
add
inc
lock
pop
mov
iret
cmp
frstor
das
popf
inc
inc
test
pop
repz
dec
inc
mov
nop
inc
xlat
mov
push
fst
xlat
movs
les
dec
xchg
imul
jnp
cmp
xlat
xor
aad
out
cmp
hlt
inc
mov
retf
xor
inc
xor
lods
sbb
sub
out
push
ins
jo
clc
add
mov
sub
mov
loop
pop
lods
xchg
mov
rol
sbb
mov
dec
mov
dec
xor
cld
mov
jae
shl
pop
cli
pop
je
inc
mov
pop
mov
push
inc
ret
push
push
push
adc
rol
popf
mov
out
fwait
and
das
add
mov
and
test
cmps
add
arpl
jge
rol
mov
outs
inc
addr16
sti
xlat
mov
sar
mov
out
push
or
mov
sbb
not
add
push
das
inc
inc
rol
adc
add
out
cmp
xchg
sbb
test
mov
sti
inc
push
scas
mov
retf
dec
test
mov
nop
pop
cmps
ss
movs
mov
(bad)
clc
push
ins
aas
std
int
push
sub
or
lea
pop
gs
pop
xchg
inc
sti
push
ins
cwde
pop
fcomp
rcr
in
xchg
jb
add
pushf
jmp
mov
add
mov
fdivr
sub
cmp
cmp
xor
movs
cli
jecxz
push
scas
jmp
push
adc
ins
adc
in
add
pop
pop
sti
xchg
cmps
cmp
sbb
add
ret
adc
jmp
push
movsx
jge
out
or
popa
add
test
(bad)
mov
jns
add
mov
or
into
push
cld
xor
adc
sahf
inc
(bad)
adc
cdq
sbb
mov
xchg
jmp
leave
mov
out
dec
mov
adc
pop
mov
pop
out
stc
pop
inc
xchg
mov
xor
dec
pop
pop
jne
loop
dec
cmp
inc
and
push
xchg
push
ret
stos
mov
ror
cmp
je
dec
fwait
pusha
fadd
int3
sbb
scas
mov
and
aam
jbe
jmp
xor
scas
das
pop
ins
out
push
push
sbb
mov
push
icebp
shr
cmp
push
cmps
inc
retf
stos
in
push
dec
mov
dec
ss
das
lahf
dec
push
jecxz
ret
loopne
mov
inc
lods
imul
test
scas
into
dec
xchg
cmps
fcmovnb
sbb
ficomp
lahf
out
mov
fiadd
mov
pop
daa
inc
or
movs
mov
mov
push
enter
dec
(bad)
cdq
call
hlt
sbb
mov
dec
call
mov
ds
rol
fwait
call
dec
(bad)
fistp
les
call
ja
jp
ins
ss
sbb
pop
or
mov
lods
lea
dec
in
cs
enter
dec
stos
fwait
bound
pop
pop
ret
xchg
retf
dec
jnp
nop
push
aam
aaa
jge
push
pmullw
jo
lods
add
(bad)
and
or
mov
sbb
repz
xor
pop
(bad)
ins
sub
xchg
loope
mov
stc
dec
xor
sbb
xchg
sub
nop
mov
test
fst
jae
dec
fisttp
rol
add
cld
sbb
dec
xlat
jne
pop
scas
add
mov
leave
fcmovbe
mov
out
mov
xor
xor
lods
(bad)
pop
jge
lds
jnp
in
imul
mov
or
and
shl
mov
addr16
sub
rol
fstp
xchg
mov
fwait
leave
fimul
pop
pop
sbb
dec
or
xor
mov
dec
sub
xor
(bad)
(bad)
xor
scas
imul
pusha
popf
cmc
ins
cwde
iret
dec
xchg
in
retf
imul
push
sti
aas
pop
push
ins
dec
cld
sub
and
inc
add
mov
imul
mov
pop
popa
jl
push
mov
or
dec
mov
in
and
mul
sbb
iret
mov
cmp
ins
pop
xor
sbb
jns
pop
jl
adc
push
stos
ja
out
aad
mov
cmc
nop
push
(bad)
rcl
test
lahf
add
std
push
ret
xor
xchg
pop
retf
leave
shl
push
(bad)
jb
rcl
xchg
ds
call
psubsw
push
push
add
lock
mov
jmp
mov
and
ret
push
in
pop
push
pop
scas
cmp
out
call
ret
aam
jne
bound
pop
push
mov
xor
fdiv
sbb
dec
loope
xchg
jp
sub
mov
pop
jmp
push
pop
popf
ror
push
fdivr
sbb
enter
dec
adc
aas
xchg
fwait
(bad)
loope
or
stc
jbe
(bad)
mov
cmp
jns
dec
fcos
mov
sub
mov
or
fdiv
aam
or
loope
and
mov
or
add
fistp
loope
out
pop
out
div
outs
call
test
xchg
mov
cmp
jns
sub
(bad)
mov
push
dec
int
adc
push
dec
pop
mov
rol
mov
dec
lahf
repz
into
pop
sbb
adc
jno
cmp
into
imul
xor
push
xchg
and
cmp
mov
or
add
clc
cmp
int3
jmp
xlat
adc
adc
pusha
push
test
cmc
xchg
mov
xchg
scas
imul
cmp
push
adc
cmp
and
in
xchg
mov
mov
mov
pop
add
xlat
enter
dec
stos
test
mov
idiv
xor
or
inc
push
xchg
add
cmp
mov
lods
mov
test
xor
xchg
cdq
push
sar
dec
push
push
nop
cmp
mov
mov
adc
je
(bad)
adc
test
jg
jmp
or
mov
adc
out
es
enter
jle
enter
mov
pop
stc
mov
cmps
push
lahf
retf
sbb
pop
jmp
sbb
out
jae
jge
enter
add
call
jl
cmp
inc
jmp
js
inc
ret
or
inc
aad
pop
cli
mov
and
mov
or
enter
cmps
inc
jno
fmul
rcl
push
jnp
inc
mov
jne
fdiv
and
inc
neg
add
mov
sbb
enter
loopne
mov
inc
mov
mov
(bad)
mov
test
sub
push
sub
and
enter
(bad)
std
retf
pop
sahf
addr16
inc
add
fs
std
or
fs
repnz
rcr
push
xchg
test
mov
arpl
fistp
xor
xor
ins
popa
movs
jne
mov
pop
cmc
sbb
outs
cmps
jmp
cmp
jns
imul
(bad)
ror
bound
mov
push
shr
(bad)
jbe
mov
xchg
lds
push
xor
sub
add
js
imul
jnp
adc
and
mov
push
nop
and
sbb
pop
nop
int3
fldl2e
inc
std
enter
stos
dec
fistp
outs
sub
(bad)
retf
pop
xchg
bound
add
nop
lahf
add
mov
and
icebp
mov
lea
dec
lock
mov
std
and
push
adc
xchg
jmp
push
mov
push
retf
ins
mov
scas
and
loopne
xor
pop
dec
pop
mov
jmp
cwde
rcl
mov
shr
cmc
sbb
js
mov
xor
push
mov
stc
xor
test
xchg
je
mov
loopne
jno
adc
shr
out
xor
int
adc
and
(bad)
aaa
xor
retf
adc
push
outs
and
addr16
or
and
enter
mov
cmp
xor
jb
call
pop
loopne
mov
out
inc
mov
fbld
dec
jmp
cmps
inc
push
add
into
pop
inc
inc
dec
out
jmp
sbb
test
test
jb
std
mov
mov
xor
sahf
cmp
mov
ins
or
add
std
loop
std
mov
cmp
cmp
pop
mov
aad
or
xchg
lea
imul
(bad)
iret
add
xchg
jle
mov
into
dec
sbb
cmp
add
inc
adc
int3
mov
xor
popa
fdiv
shl
mov
je
adc
stos
cdq
xor
data16
sub
or
mov
into
les
push
sbb
cwde
pusha
mov
ins
push
scas
push
and
push
xchg
je
adc
repz
push
or
dec
in
xchg
scas
xchg
retf
fcom
cs
jb
push
(bad)
loopne
mov
sub
push
jmp
jne
mov
xchg
(bad)
shl
sub
mov
iret
sub
pusha
mov
dec
mov
sub
(bad)
sbb
test
cmps
or
aam
mov
and
fwait
out
rcr
mov
mov
cmc
pop
pop
int
mov
test
rcr
cld
mov
sbb
mov
cmp
mov
mov
inc
shl
dec
in
sahf
stos
or
cmc
jge
and
lock
inc
mov
dec
mov
mov
dec
jl
js
push
shl
pop
mov
movs
arpl
arpl
xor
retf
jbe
in
adc
fcomp
adc
mov
das
mov
movs
daa
xchg
shr
xor
dec
sub
pop
add
xor
cmp
push
mov
push
jns
stos
jmp
adc
inc
or
cmp
retf
mov
xor
mov
sbb
xor
add
ret
test
ret
lea
jecxz
dec
dec
pop
int
or
sti
pop
mov
xchg
cdq
fistp
les
outs
jb
xchg
stos
cmp
call
dec
push
test
lea
out
jg
stc
aaa
jg
movs
fwait
icebp
adc
leave
xor
repnz
mov
fstp
inc
jns
pop
repz
mul
and
mov
cmp
push
jno
cmp
mov
jl
imul
repz
xor
repnz
mul
ja
mov
sar
and
adc
xor
out
mov
sbb
push
jo
pusha
xor
lea
imul
clc
stc
push
cdq
xchg
out
add
hlt
pop
popa
pop
lahf
mov
pop
ja
int3
(bad)
inc
sbb
push
movs
call
mov
inc
shl
dec
mov
cmps
test
adc
mov
mov
jmp
add
dec
adc
out
adc
lea
neg
int3
cmp
sub
add
(bad)
push
and
scas
pushf
mov
ins
sub
xchg
jb
inc
jg
dec
movs
(bad)
inc
or
mov
adc
add
addr16
jl
adc
int
inc
mov
in
push
dec
icebp
dec
leave
dec
(bad)
mov
adc
shr
xor
sbb
push
adc
pop
sub
iret
or
inc
mov
stos
push
xor
push
pusha
scas
xor
mov
js
mov
movs
enter
mov
and
repnz
sar
sbb
js
mov
aaa
jp
xchg
inc
mov
loopne
push
lock
je
(bad)
rcl
fsin
repz
jo
imul
jns
mov
popf
js
push
pop
stos
out
repnz
inc
out
jb
hlt
mov
xchg
and
popf
add
mov
fs
mov
push
adc
popa
popf
add
xor
es
push
cmp
sbb
mov
test
push
ds
add
fistp
stos
push
(bad)
lds
lods
jne
fcomp
mov
(bad)
and
adc
test
sti
sub
jg
mov
mov
and
mov
repnz
mov
add
sub
and
mov
pop
cmp
inc
add
retf
push
mov
outs
stc
clc
adc
dec
mov
sub
sub
xor
(bad)
aad
or
cwde
cdq
repnz
movs
repz
sbb
loope
jo
into
call
pusha
repz
icebp
jecxz
push
and
adc
(bad)
lock
mov
outs
pusha
shr
ds
inc
dec
add
cmp
pop
popa
add
shr
jo
aas
jne
adc
imul
cmps
xor
aam
mov
popa
cmp
and
jnp
ins
mov
pop
push
pop
pop
or
cmp
leave
mov
push
sub
xor
fbld
daa
gs
iret
iret
jno
push
ffree
or
data16
adc
lea
pop
fldcw
pop
push
lods
mov
inc
pusha
adc
or
mov
xchg
sbb
fadd
ss
cmp
cs
mov
outs
jne
sub
jbe
clc
dec
arpl
popf
mov
ins
add
mov
push
xchg
sub
mov
pop
mov
dec
addr16
add
int
bound
into
xchg
pop
int
adc
xlat
inc
scas
bnd
jle
cmp
inc
pop
xor
add
(bad)
cmp
push
pop
pop
or
gs
inc
mov
sbb
(bad)
mov
ret
scas
xchg
(bad)
into
sbb
dec
push
aad
or
mov
add
pop
pop
sahf
inc
sahf
jno
jl
call
sub
pop
or
jmp
mov
stos
rcl
and
(bad)
jb
jnp
test
sbb
sub
jl
push
sahf
mov
push
mov
je
std
jg
jae
ret
ins
shl
loop
test
jne
add
mov
leave
mov
sbb
push
clc
and
cmp
add
mov
jmp
lahf
or
aam
or
mov
mov
inc
xor
test
imul
push
in
divps
adc
pushf
in
jb
and
xchg
jns
movs
arpl
popw
inc
les
mov
dec
mov
(bad)
adc
mov
mov
in
out
mov
retf
inc
push
std
idiv
loopne
fstp
mov
stos
out
fst
mov
lock
pop
int3
lock
xchg
test
inc
cli
adc
std
push
imul
scas
(bad)
xor
pusha
sub
cmp
rcl
div
popf
mov
ins
mov
leave
and
cmp
fs
mov
cmps
inc
mov
push
(bad)
popf
outs
(bad)
or
test
xor
push
test
scas
ud2
jge
mov
sti
jge
fiadd
ja
popf
push
push
sbb
outs
in
in
push
dec
inc
std
stos
leave
sub
adc
stc
add
adc
xchg
mov
mov
pop
or
cmp
ja
loope
fist
cmp
je
test
popf
imul
pusha
mov
pop
kmovw
pusha
loopne
push
inc
jge
dec
scas
push
popa
mov
enter
pop
sahf
int3
push
(bad)
and
mov
cmp
or
add
pop
pop
and
push
cmp
loop
pop
cmp
or
inc
or
push
(bad)
les
test
outs
pushf
jnp
mul
push
shl
push
pop
inc
cmp
or
stc
aad
fs
inc
stos
cmp
mov
and
fwait
xchg
pop
ds
mov
fist
mov
jne
mov
cmp
dec
cmps
call
add
inc
xchg
sub
arpl
test
movs
(bad)
daa
repnz
xchg
sub
adc
iret
aad
pop
add
mov
std
pusha
into
mov
cs
dec
jecxz
mov
mov
sti
dec
xchg
movs
(bad)
or
push
jne
mov
xor
in
pusha
nop
adc
bound
mov
inc
pop
jmp
(bad)
sbb
data16
xor
in
mov
(bad)
sub
mov
aad
xchg
sub
or
mov
outs
mov
rcr
inc
les
inc
add
movs
mov
push
xchg
cmp
xchg
int
mov
and
cli
jl
sbb
adc
cmp
cmp
scas
das
lock
inc
cli
scas
xchg
in
out
xchg
lahf
nop
aas
sub
test
sub
aad
sahf
cmp
call
push
es
mov
adc
movs
daa
mov
mov
jbe
jo
xor
popf
sub
push
out
adc
ror
inc
imul
addr16
mov
out
aam
rol
lea
or
mov
push
and
(bad)
fiadd
cli
push
hlt
lea
xor
fisttp
add
xor
jb
retf
cs
mov
jmp
jmp
adc
and
fs
mov
cmp
rcr
jns
dec
jnp
jo
pop
shl
ins
sbb
cld
jmp
cmps
sub
call
fs
dec
pop
dec
rol
mov
in
and
arpl
or
push
inc
or
std
jp
test
ret
xchg
mov
dec
cmps
fs
dec
leave
sahf
inc
pop
or
adc
inc
push
add
in
push
out
mov
dec
fcmovnu
fcomp
ret
cmps
mov
mov
xchg
push
repnz
fistp
mov
mov
inc
or
loope
movs
data16
or
jb
cmp
and
inc
fcom
mov
nop
mov
div
jl
xchg
mov
cmps
add
cs
in
sbb
xor
fisubr
loope
scas
ret
aam
xchg
inc
fisubr
(bad)
das
pop
xor
pextrw
push
or
movs
cmp
addr16
xchg
cld
in
mov
mul
pop
(bad)
xchg
cs
cdq
lock
ds
dec
iret
cmp
imul
xor
movs
push
inc
inc
std
repz
jp
hlt
fs
pop
in
mov
rcr
cmp
sbb
mov
mov
fs
aad
sti
cmp
bound
cmc
dec
add
mov
push
cmp
sub
popf
loope
and
jo
xor
xchg
xchg
and
dec
repnz
xchg
lds
nop
adc
ja
enter
cmc
sub
mov
test
popa
punpckhwd
push
mov
or
not
mov
loope
(bad)
jmp
lahf
enter
in
rcr
xor
mov
inc
push
ja
and
bnd
ds
movs
movs
adc
test
pop
xor
mov
pop
mov
pushf
cmp
cld
add
push
sbb
xchg
mov
or
adc
xor
mov
xor
and
in
xchg
shr
push
cmp
ror
cmp
mov
push
leave
into
leave
mov
sti
fist
mov
or
fs
xor
(bad)
xor
xchg
xor
test
cmps
call
ret
aad
fisubr
mov
fisttp
xor
out
mov
int3
xchg
mov
data16
fisubr
je
pop
mov
push
scas
jp
outs
call
inc
mul
cmp
(bad)
sub
lea
dec
pop
sti
jbe
iret
popa
aad
movs
or
push
mov
sub
sbb
fs
or
jne
shl
and
ror
adc
add
or
aas
add
cld
jle
dec
cmp
xor
push
in
cmp
call
mov
in
pop
addr16
cld
adc
mov
jne
outs
xchg
jae
add
cmps
popf
aas
arpl
or
in
ret
jbe
inc
jo
cwde
aas
loope
cmps
mov
add
add
(bad)
das
(bad)
cmps
push
popa
dec
fxch
retf
mov
fst
or
mov
and
jge
cmp
aaa
mov
sahf
loope
outs
jnp
xchg
jl
jge
dec
xchg
mov
or
push
hlt
std
dec
cmp
xor
push
jle
fist
cmc
in
(bad)
cvttps2pi
arpl
lock
sub
mov
adc
fwait
lahf
es
adc
pusha
push
lahf
sub
ins
pop
xchg
jnp
fwait
xchg
and
nop
popf
repnz
pop
(bad)
cmp
aad
fwait
mov
stos
lock
cmps
dec
mov
push
in
ret
cli
lock
cmp
aam
xchg
mov
jne
ds
pop
xchg
push
jnp
pop
add
dec
dec
add
out
adc
or
dec
cmp
or
leave
leave
xchg
aam
add
(bad)
(bad)
push
es
jecxz
push
je
ror
jnp
test
sbb
lods
mov
test
std
cdq
dec
pusha
ss
push
fcom
adc
mov
cdq
and
pop
or
mov
stc
mov
aad
pop
nop
push
(bad)
mov
movs
retf
repz
xchg
ror
jne
ret
lods
jno
inc
push
js
mov
sbb
aad
in
rol
pushf
aam
test
add
push
push
sub
sbb
mov
cmps
sbb
pop
jmp
(bad)
fst
pop
and
jge
scas
mov
js
add
std
stos
lahf
jno
mov
out
mov
imul
fst
icebp
not
add
pop
loopne
mov
or
mov
adc
test
pop
jl
adc
jnp
or
xor
popa
ins
xchg
xchg
or
adc
retf
out
xchg
sbb
dec
repz
jmp
pop
inc
(bad)
rol
and
dec
outs
add
les
cmp
inc
cmp
xchg
sahf
repz
out
xor
aas
push
fidivr
popf
mov
add
(bad)
(bad)
mov
push
mov
or
adc
sub
mov
inc
jo
dec
mov
xor
inc
mov
lods
popa
lea
mov
mov
pop
mov
cmp
push
cld
xor
pop
mov
lock
add
fcom
and
in
pushf
rcl
and
mov
ficom
aas
push
sbb
pop
mov
push
ret
jge
pop
(bad)
ja
mov
pop
xor
mov
jg
iret
lahf
sti
pop
cmp
call
addr16
into
loop
jne
push
ror
mov
out
xor
mov
repz
fucom
dec
mov
retf
sub
ror
pop
mov
(bad)
aam
and
inc
or
adc
call
dec
and
out
mov
jne
sbb
jp
xor
and
ja
and
loop
std
mov
inc
sahf
imul
outs
pop
ds
out
cmp
xor
(bad)
sti
pop
and
xchg
cwde
xchg
mov
aaa
(bad)
xchg
test
out
xor
jg
iret
pusha
(bad)
in
dec
sar
ret
data16
push
mov
rcl
(bad)
call
adc
xchg
sub
sub
inc
xor
push
movs
fmul
aad
xchg
jg
xor
fs
nop
sbb
iret
sti
mov
adc
pop
ins
push
lods
loop
mov
stc
fistp
arpl
dec
adc
xor
adc
mov
inc
jmp
inc
out
ins
sub
mov
lds
hlt
mov
push
in
fsub
pop
sbb
push
adc
lea
call
gs
pop
inc
imul
mov
mov
mov
addr16
pop
dec
loope
popa
pop
leave
(bad)
pand
and
mov
dec
daa
dec
cmp
movs
adc
mov
mov
test
(bad)
sbb
jg
mov
loop
push
mov
push
and
iret
xchg
sub
jg
push
mov
pop
and
mov
mov
pop
pop
sub
lods
jmp
fwait
cmc
inc
in
xor
jmp
mov
es
adc
pushf
xor
(bad)
movs
stos
aaa
jb
shl
jmp
add
(bad)
rep
(bad)
mov
fst
int
inc
sub
out
aad
sar
and
inc
cmps
xchg
mov
add
aad
add
push
enter
fld
out
push
dec
adc
imul
(bad)
ror
sbb
mov
mov
loop
nop
les
mov
jmp
inc
push
sbb
dec
push
rol
repnz
jbe
xadd
add
sub
cmps
pop
inc
mov
outs
jp
sahf
into
and
loope
sbb
xor
inc
ret
xchg
jb
lock
pop
sub
repz
add
cld
stc
(bad)
add
fisttp
and
sub
adc
mov
push
ins
jmp
mov
jae
push
aam
out
adc
jecxz
js
js
retf
popa
add
or
in
stc
pusha
pop
mov
in
call
dec
sahf
mov
push
movs
and
mov
test
retf
nop
daa
pop
cmp
add
jnp
adc
shr
xchg
fild
add
push
test
inc
sub
xor
aam
sbb
popa
aad
xchg
push
xchg
and
(bad)
dec
ja
xchg
cmp
scas
std
test
push
fs
movs
or
dec
xchg
jo
xor
clc
sbb
mov
xchg
test
pop
fcomp
sbb
mov
popf
fbld
les
xchg
inc
pop
cmp
jg
mov
push
xor
retf
or
jg
mov
bound
out
cmp
xchg
pop
dec
jns
les
inc
dec
dec
xlat
mov
or
ficom
mov
iret
and
cld
neg
lods
mov
(bad)
or
jmp
aaa
aaa
or
retf
fcomp
aas
inc
lods
fld
ss
retf
call
in
mov
push
bnd
es
mov
(bad)
pop
adc
jg
xchg
div
rcl
jns
pop
addr16
cwde
(bad)
aam
ins
mov
add
ret
rcl
push
mov
les
jbe
js
push
jle
mov
jb
dec
je
mov
dec
push
nop
mov
sbb
aam
out
adc
push
aam
lock
xor
outs
lods
push
stos
test
lock
xchg
cmp
int
daa
and
pop
mov
enter
adc
mov
pop
and
mov
retf
adc
push
dec
pop
aaa
loopne
in
sbb
js
and
adc
es
(bad)
aaa
or
xor
sbb
push
icebp
lds
and
test
add
movs
inc
sub
xor
mov
mov
jg
jbe
sahf
pop
stos
lock
cmovl
data16
out
or
(bad)
xor
movs
or
pop
sti
outs
xchg
popa
inc
popa
xor
addr16
dec
adc
or
imul
inc
inc
mov
popa
outs
(bad)
add
cmp
int
xor
das
ret
icebp
cmp
xor
xlat
imul
cdq
and
sbb
inc
cmp
or
cdq
push
in
retf
inc
adc
int3
gs
repz
sbb
pop
or
out
xchg
repnz
cmp
ss
dec
push
sbb
pop
popf
jno
in
cs
loopne
dec
into
and
into
jae
jmp
aaa
inc
sub
cmp
pop
cmps
cmp
call
push
dec
xor
sub
cmp
pushf
into
fcomp
mov
dec
dec
push
aas
jns
xchg
jmp
into
xor
cmp
xchg
sahf
jae
and
outs
ins
pop
pop
fwait
mov
mov
(bad)
and
sub
jl
inc
retf
imul
sbb
inc
mov
movs
(bad)
adc
inc
fwait
in
pop
ret
xchg
jns
mov
push
rcl
lods
push
ins
sub
and
mov
cmp
fwait
dec
xchg
and
mov
add
jne
lods
das
adc
dec
and
std
hlt
rcl
mov
imul
jnp
inc
and
inc
les
jecxz
mov
cmp
(bad)
shl
xchg
mov
dec
dec
jmp
mov
pop
mov
repz
das
rol
test
aaa
in
ins
push
push
cmp
push
inc
jecxz
bound
outs
pop
cmp
fs
adc
mov
inc
cmp
repz
or
pop
cwde
lahf
int
ds
xchg
test
mov
je
outs
or
test
outs
xor
addr16
ret
sbb
cmp
and
pop
mov
dec
aad
sub
test
retf
or
mov
mov
add
or
test
(bad)
mov
(bad)
mov
shl
aad
loopne
bnd
xchg
or
hlt
loop
and
(bad)
(bad)
(bad)
ins
push
fwait
mov
mov
outs
mov
mov
mov
mov
aad
or
in
add
retf
shr
mov
mov
aas
sbb
fadd
pop
(bad)
xor
xor
inc
pop
in
scas
cmp
in
push
mov
add
ss
leave
ret
jp
outs
loop
out
adc
or
pop
in
jbe
cmps
call
out
dec
dec
sti
push
push
adc
inc
jno
out
mov
nop
sysret
jge
mov
xor
outs
mov
aam
sbb
xchg
mov
ja
mov
clc
cmps
push
pop
es
clc
out
imul
(bad)
call
daa
mov
es
cmp
imul
xchg
es
and
jle
sub
push
dec
ss
fdivr
(bad)
fistp
adc
xor
outs
mov
out
in
lock
and
sbb
pusha
push
pop
scas
test
loope
push
jae
inc
scas
jmp
add
sub
adc
std
lods
rol
jno
leave
pop
sahf
(bad)
in
sbb
enter
les
fstp
ret
jl
sub
call
(bad)
outs
retf
push
inc
mov
cdq
or
inc
mov
call
sub
into
pop
and
scas
pop
out
sbb
cmp
sub
mov
fbstp
pop
fnstcw
sub
jo
or
mov
ret
mov
inc
xchg
jg
(bad)
retf
call
push
mov
iret
hlt
adc
iret
push
test
movs
sbb
sub
stos
test
xchg
test
mov
mov
daa
test
xor
inc
jmp
mov
jno
jecxz
xchg
movs
xor
mov
cmc
pop
stos
leave
lahf
lea
rep
outs
sbb
imul
cmc
test
out
mov
push
call
pop
cs
pop
shl
cmps
mov
sti
sbb
movs
add
xchg
repz
push
mov
inc
rcr
xchg
in
cs
in
and
outs
fwait
lods
xchg
cli
fsub
aam
stc
jne
inc
(bad)
lods
or
les
push
aad
xor
or
outs
rol
mov
add
push
clc
jge
mov
fcom
sub
rol
aam
ja
nop
sub
jb
call
arpl
imul
in
mov
push
or
sti
and
imul
adc
xchg
cmc
stc
aad
enter
cdq
mov
pop
mov
in
pop
mov
cmp
daa
sahf
std
inc
ror
aaa
adc
sbb
jbe
stc
jae
cmp
sub
cs
test
mov
sub
sbb
int
mov
scas
clc
out
fnstenv
push
jne
retf
jae
mov
xlat
pushf
inc
and
xchg
movs
and
jp
sar
xchg
fisubr
rcr
loopne
adc
xor
cmp
loope
xor
mov
aad
mov
cli
scas
mov
inc
pop
pop
inc
call
mov
mov
loope
shr
mov
push
xor
mov
push
and
cmp
gs
mov
lea
and
pop
xchg
pop
mov
xor
pop
hlt
clc
jb
jp
xchg
jnp
or
pop
out
gs
jns
xor
cs
fs
leave
test
jge
and
outs
test
and
jg
mov
out
xchg
add
mov
fwait
cmps
imul
and
fs
ja
jno
icebp
jp
xchg
cwde
rol
dec
std
jne
test
popf
and
jnp
sbb
ret
enter
into
xchg
cmp
or
sbb
adc
fcomp
adc
rcl
fwait
dec
mov
mov
and
push
hlt
xchg
mov
jmp
fsub
mov
and
not
adc
xchg
xchg
test
jb
daa
push
push
jbe
jecxz
cmp
fsubr
mov
add
call
sbb
inc
in
repz
punpckldq
mov
mov
inc
loope
leave
aam
mov
fcmovbe
loopne
inc
int3
push
mov
cli
inc
and
inc
sub
mov
cmps
push
(bad)
(bad)
bnd
jns
push
jmp
in
neg
xor
in
mov
xor
push
sub
(bad)
pop
hlt
mov
dec
test
cld
inc
cwde
out
sahf
jmp
cmp
push
mov
test
mov
test
test
add
mov
xchg
(bad)
sbb
ficomp
mov
neg
ds
jmp
cmp
mov
imul
nop
fisubr
arpl
popa
fbld
fldenv
pop
ins
fild
sub
cmp
sub
xchg
push
jae
les
scas
mov
jle
(bad)
es
cmp
pop
pop
inc
scas
movs
push
addr16
repz
stos
push
cli
(bad)
mov
mov
loop
lods
add
daa
stos
fldenv
(bad)
fincstp
sbb
or
cmps
dec
mov
jae
jno
push
shl
or
cmps
inc
out
stos
add
and
mov
leave
and
mov
jns
jbe
inc
dec
and
mov
mul
gs
out
dec
rol
out
dec
jmp
adc
scas
xchg
dec
mov
cdq
daa
test
fsubr
dec
mov
add
popf
popa
enter
loopne
lds
popf
sti
cmp
dec
fld
pop
scas
sbb
ror
jg
adc
xchg
clc
add
int
push
jnp
jmp
mov
mov
mov
je
pop
popa
sbb
inc
mov
pop
mov
inc
dec
ret
xor
sbb
nop
jmp
call
scas
or
scas
push
ficom
bound
aad
cmp
push
dec
fwait
sbb
push
daa
sbb
ins
push
mov
repnz
dec
hlt
mov
sbb
jmp
arpl
repz
cmova
retf
xor
outs
and
xchg
leave
mov
cs
pop
inc
(bad)
(bad)
ficom
sbb
xor
aaa
jae
mov
gs
(bad)
(bad)
or
mov
out
pop
jmp
sub
push
mov
movs
sahf
adc
cmp
jmp
xchg
outs
inc
int3
iret
scas
int3
clc
adc
push
sbb
mov
ins
cli
jno
cwde
cs
fadd
das
into
mov
fldcw
cmp
jnp
mov
inc
adc
or
mov
inc
adc
cld
dec
loop
test
popa
mov
sub
pushf
add
adc
push
dec
adc
adc
push
or
out
test
cmp
aam
shr
dec
sbb
mov
adc
mov
call
push
add
mov
sub
or
inc
(bad)
mov
or
pop
sbb
add
fwait
and
stc
pop
std
cmpxchg
leave
jecxz
mov
mov
repnz
add
mov
pop
cwde
mov
pop
adc
retf
jb
pop
mov
retf
les
inc
adc
imul
sbb
cmp
push
outs
test
add
movs
push
push
pop
fcomip
jecxz
add
das
xchg
mov
jae
dec
dec
std
add
stos
inc
dec
addr16
out
xor
mov
push
push
fimul
(bad)
and
or
dec
and
jecxz
lods
fnstenv
xchg
ds
xchg
sti
jb
mov
fdiv
or
outs
pusha
jmp
fst
ucomiss
loop
mov
and
pop
shl
mov
mov
lods
lds
mov
fwait
mov
int3
jo
outs
mov
in
jo
cmps
xchg
(bad)
loop
sahf
add
adc
dec
xor
ja
(bad)
nop
ds
sahf
mov
xchg
mov
mov
ins
rcl
aaa
and
sbb
repnz
call
inc
(bad)
cs
jb
dec
xor
and
cmc
test
mov
pop
shr
cmps
out
ret
popa
or
cdq
add
stos
sahf
scas
fidiv
icebp
out
inc
jb
mov
jns
xchg
scas
(bad)
pusha
cli
clc
and
in
mov
cdq
sbb
data16
loopne
out
mov
aam
loope
into
cwde
push
mov
jle
ss
test
call
pop
mov
sub
sbb
push
mov
jg
cmc
ja
sar
mov
or
outs
mov
mov
fisttp
push
pop
mov
mov
dec
push
jo
sub
adc
retf
(bad)
aam
addr16
jnp
lahf
xchg
sub
cmc
push
mov
fisub
sbb
fs
xchg
cld
or
xor
cdq
or
xor
movs
sti
add
in
xchg
pusha
sub
fdivr
fistp
lea
ds
lea
ds
mov
xchg
stc
xor
sbb
or
push
not
dec
cs
inc
xor
sub
cli
jecxz
es
(bad)
out
dec
inc
cmp
fimul
sar
pop
pop
daa
or
jmp
xor
sub
and
xchg
and
jp
(bad)
inc
mov
xchg
gs
sahf
adc
sub
movs
xor
mov
mov
dec
push
or
in
xchg
outs
stc
call
push
std
push
xor
and
test
scas
aaa
ins
sub
sub
dec
add
ficomp
mov
fidivr
jmp
jnp
sub
pop
pop
mov
push
daa
mov
mov
repz
repnz
jp
xchg
and
add
jge
xor
mov
int
inc
in
adc
loope
je
push
repz
in
adc
add
jbe
shl
add
cmps
sbb
xchg
push
xor
and
stos
call
jge
dec
(bad)
or
mov
neg
jbe
stos
push
jmp
fs
cmp
neg
(bad)
pop
sti
dec
mov
fld
xor
or
sbb
into
mov
retf
cmp
adc
mov
dec
movs
mov
mov
clc
adc
sub
daa
mov
inc
cli
inc
xchg
retf
pop
and
pop
int
jo
fld
sbb
pop
ins
int3
in
inc
out
sub
in
icebp
push
aaa
or
xchg
dec
outs
jmp
xchg
(bad)
dec
mov
addr16
ja
cmp
aaa
les
fidiv
sbb
int3
jno
mov
lods
int
imul
cmps
mov
out
sub
outs
dec
push
push
ds
mov
lahf
call
shr
sar
scas
push
repnz
or
sub
sub
dec
mov
out
jno
or
out
dec
push
cdq
stc
cld
xchg
xor
and
mov
call
jp
lahf
mov
adc
push
outs
jl
sbb
mov
in
in
mov
mov
cwde
sbb
outs
mov
adc
mov
xchg
cmp
dec
mov
es
out
mov
xor
xor
mov
es
aas
xor
(bad)
fisub
jnp
mov
imul
jg
les
hlt
out
add
mov
xor
mov
or
sub
test
sub
out
push
xchg
sahf
or
cmps
push
cli
cs
(bad)
shl
(bad)
cmp
imul
jle
in
xor
(bad)
and
adc
test
xor
out
pop
lea
mov
test
adc
jp
call
jp
push
loope
or
hlt
cmp
test
pop
int
movs
std
dec
cwde
xor
push
jge
arpl
inc
cmp
dec
lods
ins
inc
in
les
sub
jle
sbb
dec
push
fadd
data16
jno
in
dec
cli
movs
push
call
retf
ja
push
ror
mov
adc
hlt
mov
sub
and
adc
int
jno
leave
mov
add
lea
jnp
push
inc
push
sbb
cwde
retf
mov
cmp
mov
push
mov
pop
pop
inc
mov
fadd
add
xor
test
lea
lds
dec
push
pop
push
addr16
sbb
sbb
or
adc
pop
mov
xchg
jns
lock
cmps
add
and
adc
lods
aaa
fcmovne
out
in
clc
retf
leave
aad
bound
ret
retf
xchg
imul
dec
les
fnsave
sub
mov
jg
aas
out
mov
xor
add
inc
fistp
xor
adc
(bad)
addr16
sbb
aam
mov
cmps
clc
fs
xor
lock
scas
pop
jg
jae
lods
mov
mov
mov
jae
in
push
ins
das
fadd
push
pusha
dec
dec
rcl
push
sbb
and
xor
fcmovu
call
aaa
fdiv
inc
xor
sbb
xchg
xor
loop
adc
mov
mov
mov
push
dec
sbb
pop
popa
(bad)
in
add
sbb
clc
out
outs
out
jmp
mov
daa
push
scas
test
or
sahf
xor
xor
fwait
mov
outs
push
jnp
movs
adc
cli
sar
pop
inc
ret
mov
xchg
stos
fwait
movs
sbb
dec
xchg
push
add
std
lods
stc
pop
sbb
mov
pushf
leave
mov
inc
inc
imul
mov
ja
xchg
repz
fidivr
(bad)
rcr
mov
pop
jb
(bad)
cmps
mov
jmp
jnp
mov
adc
sar
fs
mov
push
lods
jmp
pushf
fbstp
test
mov
pop
bound
lods
mov
(bad)
sbb
and
out
inc
ror
call
ds
sahf
lea
mov
mov
cmp
or
clc
mov
retf
cmp
mov
lods
pop
enter
ja
jge
or
jle
inc
dec
outs
call
sub
or
and
(bad)
std
test
sbb
retf
xor
inc
minps
(bad)
les
pop
or
les
jns
cmp
std
mov
jp
dec
pop
test
in
push
cs
aaa
std
(bad)
jecxz
pop
inc
inc
ror
dec
mov
xchg
pop
pop
fninit
retf
cmp
movs
rol
adc
sbb
daa
jo
add
rol
inc
jno
pop
dec
dec
jp
cmp
(bad)
in
ja
daa
mov
mov
lahf
mov
pusha
pop
pop
mov
bound
in
aas
rol
and
inc
ds
pop
sub
test
jo
mov
clc
adc
xchg
icebp
mov
adc
ss
adc
stc
arpl
and
push
mov
xchg
popa
popf
cli
inc
xlat
jle
xchg
es
(bad)
sub
jg
lods
dec
popa
add
pop
sub
adc
in
call
jge
lds
and
(bad)
push
adc
dec
cmp
das
jnp
lods
mov
sub
jg
jbe
(bad)
cmc
jne
mov
push
xor
push
in
(bad)
dec
cld
cwde
or
fldpi
push
out
in
icebp
loopne
push
mov
imul
test
pop
push
(bad)
cmp
cmc
jecxz
leave
mov
(bad)
mov
or
cmp
dec
sbb
(bad)
push
ins
test
jne
dec
add
cmp
cmp
and
test
in
out
xlat
in
fbld
jmp
push
in
add
jg
test
enter
out
jne
loope
push
cmps
sbb
mov
lea
cdq
jnp
push
in
cli
rcl
pop
add
push
call
es
ins
pop
in
push
or
jle
inc
sahf
daa
cli
or
fbstp
jmp
mov
jmp
imul
adc
mov
loopne
jb
in
push
imul
dec
sub
pop
fwait
sbb
sub
cli
mov
loopne
hlt
shl
jmp
cwde
sbb
lea
mov
dec
movs
test
and
mov
cmps
xor
and
in
adc
shl
mov
shr
stos
retf
shl
mov
and
add
mov
mov
xchg
in
sbb
jecxz
pop
mov
ret
sbb
pop
aas
ss
and
lahf
(bad)
xchg
imul
rcr
les
das
push
mov
pop
in
pop
stos
push
je
(bad)
push
pop
jbe
daa
mov
or
cdq
mov
mov
pusha
ins
je
adc
shl
mov
add
fild
retf
fxch
or
sub
arpl
imul
(bad)
dec
push
dec
(bad)
in
xchg
push
pop
fadd
test
jge
call
sti
les
sti
aad
enter
xchg
js
jae
adc
jae
dec
stc
pop
sbb
in
shl
(bad)
js
adc
ror
push
sahf
in
sahf
(bad)
pop
in
pop
inc
mov
mov
or
xchg
or
mov
(bad)
cmp
jno
sbb
mov
outs
xchg
inc
popa
out
or
push
popa
add
div
inc
mov
pop
shl
stos
sbb
test
or
push
and
push
ret
clc
and
push
addr16
test
jae
sub
sahf
adc
mov
pop
jmp
jmp
sub
push
jg
stc
sti
das
retf
inc
inc
jmp
push
mov
sbb
push
mov
sub
jns
or
in
and
sub
pop
aad
sbb
int
lods
cmp
test
aas
dec
sbb
ins
jne
xchg
dec
(bad)
inc
js
out
out
or
dec
test
ret
adc
inc
and
xor
sbb
lods
je
fst
mov
jmp
(bad)
xchg
xchg
sub
test
add
mov
mov
repz
mov
xor
sbb
mov
mov
xchg
mov
test
mov
mov
adc
push
and
xchg
mov
jo
dec
jmp
jns
in
mov
aad
adc
loopne
icebp
mov
cmps
jno
jl
popa
iret
cmp
mov
aad
jle
or
mov
add
push
in
pop
lahf
adc
push
cmp
stc
sub
sahf
pop
mul
push
iret
sbb
aaa
push
xchg
stos
push
xchg
or
push
mov
xor
in
lods
ret
push
popa
xchg
les
pushf
lds
adc
inc
(bad)
loope
inc
cs
mov
inc
out
mov
lods
dec
mov
test
scas
mov
pop
movs
jl
dec
call
(bad)
mov
dec
dec
push
push
cmp
cmp
ficom
sub
popa
mov
sub
push
bound
(bad)
push
mov
jp
cld
mov
or
in
arpl
jmp
dec
stos
ret
push
adc
scas
mov
dec
sub
mov
fild
test
or
xchg
fidivr
inc
retf
mov
outs
sub
xchg
test
and
lods
mov
push
xchg
xor
xchg
jp
call
add
inc
(bad)
or
and
xor
js
push
repz
or
inc
test
sbb
call
lahf
mov
sbb
mov
les
dec
cmps
inc
outs
push
sub
dec
jns
test
push
lahf
nop
sahf
aad
xor
popa
(bad)
into
int3
iret
lahf
xchg
xchg
inc
xor
mov
ds
xor
cmps
clc
jmp
fcom
test
fmul
adc
pop
stc
push
fisttp
or
cs
sbb
xor
ins
mov
leave
jmp
xlat
les
ja
imul
cmps
dec
enter
adc
aas
jno
lea
scas
fisub
mov
neg
neg
cmp
fld
fisttp
ds
aaa
push
int3
or
and
jg
outs
lds
test
repz
test
(bad)
movs
and
fisttp
cmovo
jo
adc
inc
xor
or
cmp
arpl
(bad)
adc
dec
adc
sbb
cdq
pop
lock
xchg
data16
std
imul
adc
hlt
fldcw
dec
mov
pop
jne
lea
jno
pushf
fnstcw
or
jecxz
xchg
jge
jmp
or
lock
fadd
pop
les
and
sar
dec
lods
jle
movs
push
repnz
nop
popf
ja
rcr
pop
jp
or
cmps
fdiv
sahf
push
mov
aas
add
hlt
add
or
and
add
push
push
shl
int
push
mov
in
push
cli
xor
mov
and
inc
pop
fs
push
or
fistp
ins
pop
leave
xchg
or
into
dec
out
ss
rol
mov
icebp
das
and
cmp
push
cmp
cmp
ins
int3
mov
jg
ss
call
popa
and
loopne
xchg
add
aas
call
jae
rcr
ficomp
test
pop
mov
mov
inc
icebp
or
push
pop
adc
add
movs
xchg
test
xchg
add
mul
rcl
inc
jmp
mov
inc
or
sbb
push
dec
je
cmp
xchg
jmp
out
inc
retf
xchg
or
push
push
mov
pop
ret
sahf
inc
fsubr
bound
jbe
xchg
in
mov
std
fdivr
repnz
mov
jmp
into
mov
cmps
cmp
jp
inc
sub
scas
push
shl
ins
ins
pop
bound
mov
test
out
sti
ror
ins
push
je
fs
sub
fwait
push
adc
cmp
jnp
loope
movs
mov
xchg
shl
or
xor
and
jbe
pop
pop
pop
push
mov
sti
sar
push
(bad)
cmp
sub
sbb
jo
pop
xchg
gs
cmp
rcr
fdiv
jge
aaa
retf
mov
push
cwde
sahf
jae
inc
mov
(bad)
mov
xchg
popf
push
adc
icebp
jp
mov
mov
es
jno
test
add
or
xlat
pop
fadd
or
push
push
cmp
in
push
out
outs
retf
scas
hlt
and
adc
pop
cdq
mov
push
xor
mov
test
push
mov
add
mov
repz
movs
dec
in
xor
dec
gs
or
xor
imul
cmc
xor
jno
jmp
cmps
push
das
fs
xor
and
pop
mov
inc
cmp
cmp
(bad)
int3
outs
lods
in
adc
jo
fild
or
cmp
fisubr
pop
retf
mov
jns
push
pop
push
mov
push
arpl
inc
div
lods
test
ror
xor
(bad)
xchg
and
pop
clc
ret
sub
out
cmps
sar
jo
nop
pop
movs
popa
inc
mov
push
outs
cmp
loopne
out
lea
adc
je
popf
fisubr
sub
jae
div
mov
xchg
lock
mov
xor
and
fistp
fucomi
mov
and
mov
cmp
pop
(bad)
dec
mov
pushf
push
mov
ds
out
divps
ret
cmp
(bad)
in
mov
call
jb
cld
cs
push
adc
jg
mov
popf
jns
mov
and
and
push
repnz
sahf
scas
xor
sub
push
dec
cdq
enter
fidiv
jo
out
loopne
scas
imul
rol
cli
push
mov
lahf
cli
jmp
and
push
mov
(bad)
clc
rcr
and
xor
jge
pop
push
dec
add
sub
jl
jno
dec
lock
loopne
popf
pop
scas
nop
sub
lds
inc
push
xchg
push
lahf
inc
and
into
pop
sbb
aam
mov
cmp
dec
ret
mov
mov
add
data16
jno
xchg
outs
cwde
inc
ja
fs
fist
mov
sub
sbb
jns
jmp
js
jg
loop
sbb
dec
jmp
push
sub
dec
gs
xchg
push
and
enter
out
xor
jo
sbb
and
fcom
test
pusha
mov
imul
test
mov
cmp
bnd
shl
dec
ss
loopne
dec
std
xchg
call
in
retf
xor
inc
ret
and
call
je
outs
sbb
pushw
dec
pinsrw
cwde
push
xor
stos
lahf
mov
mov
xchg
stos
sbb
das
xor
cmp
outs
js
or
xor
and
sub
and
adc
or
pop
sub
ss
mov
mov
push
leave
rcl
add
push
sbb
or
or
repz
js
test
out
mov
inc
clc
inc
sbb
xor
scas
xchg
xor
xchg
rol
arpl
test
aas
jns
sub
push
loope
leave
sbb
xor
push
enter
jmp
pushf
cs
fabs
and
xor
jne
aam
imul
enter
icebp
jp
enter
jnp
add
scas
and
enter
nop
in
inc
pop
and
std
icebp
inc
mov
xchg
cwde
std
fnsave
jmp
pop
aam
inc
inc
sbb
cmp
pop
popf
call
add
out
outs
test
jl
scas
pop
push
jbe
int3
in
cmp
add
sub
push
mov
sub
pop
jp
mov
inc
fcom
dec
fmul
adc
sbb
je
mov
inc
adc
daa
int
dec
cli
cli
shr
pop
push
mov
mov
scas
cmps
shr
or
mov
je
out
jl
shr
dec
scas
jg
pop
mov
mov
aad
addr16
scas
xchg
jb
dec
mov
es
xchg
jp
fs
pminsw
paddsb
loopne
ins
push
aad
xor
outs
das
push
xchg
sbb
push
enter
fild
call
adc
or
test
mov
push
sbb
iret
mov
dec
ror
inc
sbb
add
ficom
call
(bad)
mov
test
lock
mov
mov
(bad)
ds
cli
or
lds
jle
into
fcmovu
push
xchg
inc
arpl
sahf
xchg
xchg
add
dec
sub
push
call
sub
sub
inc
cmp
pop
cmp
fild
mov
cmp
push
mov
xchg
mov
add
stos
mov
test
push
inc
mov
fcom
push
mov
(bad)
js
(bad)
or
mov
mov
or
mov
(bad)
push
sub
push
sbb
ja
fld
xchg
push
call
jbe
lea
icebp
fst
adc
dec
mov
shl
xchg
jae
push
cmp
lds
call
and
test
jo
mov
jnp
icebp
mov
dec
test
or
cld
into
add
and
lahf
cs
push
xchg
push
push
add
outs
sub
into
pop
ficom
cdq
xor
mov
stc
out
call
jge
loop
pop
shr
push
movs
mov
pushf
push
pop
push
loope
add
cwde
mov
jle
daa
shl
add
cld
fidivr
fcomp
mov
ja
dec
ds
dec
xor
sub
push
clc
rsqrtps
jmp
das
jle
(bad)
mov
loop
jns
bound
call
retf
jae
push
dec
in
jbe
or
out
mov
push
push
cmp
xchg
add
xor
mov
jb
stos
cmovnp
jl
rcl
movs
and
pop
pop
and
stos
sti
sbb
das
mov
jge
sub
xchg
mov
sti
xchg
add
and
movs
aad
or
or
jle
int
sub
dec
arpl
ror
in
arpl
call
mov
inc
pop
pop
inc
lock
sbb
mov
sar
adc
icebp
mov
jle
push
adc
push
sub
add
pop
push
xchg
add
push
fisub
hlt
add
and
pop
xchg
out
xchg
add
cmps
mov
push
dec
add
out
sub
cmp
retf
rcl
adc
rol
ins
rcl
pop
imul
xor
mov
retf
sbb
sbb
xchg
dec
popf
test
xchg
jbe
push
push
fdiv
jge
pusha
cmps
sbb
outs
add
test
push
mov
jmp
and
rcl
and
cmc
adc
push
push
retf
stos
xor
cmc
fiadd
xlat
xor
iret
add
xchg
sbb
sahf
sti
ins
in
jo
adc
shl
fdivr
leave
mov
aaa
xor
sub
into
xchg
ret
sar
or
sub
ss
jae
std
std
rol
and
out
stos
pop
mov
pop
outs
fsub
test
lock
jle
call
add
or
mov
sbb
xchg
addr16
mov
xchg
push
cmp
cs
add
repnz
mov
push
cmps
mov
retf
aas
dec
adc
sar
or
mov
mov
mov
xchg
lea
xor
sub
popf
in
loopne
fstp
sbb
fcomp
or
out
in
pushf
loope
cwde
test
push
pop
push
jp
fild
jmp
inc
push
outs
mov
inc
(bad)
cmp
sbb
xor
sbb
(bad)
dec
xchg
stos
and
mov
ss
mov
sub
mov
call
out
aaa
add
int3
fwait
cmp
add
or
pop
jmp
xchg
xor
mov
mov
out
and
popw
inc
ret
inc
inc
xor
cmc
sbb
xchg
mov
or
xor
(bad)
mov
(bad)
pop
stc
fadd
inc
out
jle
cwde
add
mov
push
mov
ds
mov
aas
out
shl
mov
outs
das
stos
inc
pop
shr
pop
inc
js
rcr
jmp
sub
sbb
jmp
inc
add
fld
enter
inc
cld
addr16
add
clc
repz
fstp
push
aas
(bad)
ds
cmc
retf
mov
clc
(bad)
ins
jle
mov
repz
inc
push
sahf
pop
stos
mov
ffree
fwait
adc
stos
leave
shl
ds
cli
shl
retf
in
(bad)
jne
adc
mov
sbb
jge
pop
inc
movs
sbb
rol
fsubr
imul
sti
clc
into
imul
std
test
dec
jb
or
mov
pop
popa
rcr
aad
mov
xchg
mov
dec
pusha
xchg
mov
and
test
cld
imul
stos
or
adc
mov
ror
push
and
mov
jno
sub
cmps
dec
push
jno
xchg
lods
(bad)
(bad)
fild
jo
fdiv
push
sbb
xchg
in
out
arpl
add
aaa
xor
out
jl
or
je
adc
dec
aaa
sbb
test
loope
(bad)
mov
scas
xlat
cmc
inc
cdq
push
jecxz
xchg
push
call
inc
outs
sahf
mov
jbe
cmc
not
(bad)
xchg
jno
jnp
shr
add
in
loopne
test
mov
scas
push
ja
movs
(bad)
adc
adc
jmp
popf
sbb
add
fstp
adc
aad
frstor
inc
mov
sbb
push
mov
fild
mov
pop
sub
jmp
adc
inc
jb
out
pushf
rcl
stc
jmp
mov
cmp
mov
loope
dec
cmp
test
call
mov
daa
pop
mov
pop
xchg
outs
inc
sahf
push
mov
int
arpl
xchg
or
jns
mov
add
add
jg
jp
push
into
jg
(bad)
jg
cli
aam
mov
mov
jg
inc
lahf
xor
pop
aam
enter
movs
lahf
mov
pop
jo
xchg
out
sbb
mov
pop
xor
mov
and
sub
mov
daa
jp
cmp
loopne
jmp
jmp
pushf
ffreep
sub
repnz
or
sbb
mov
mov
arpl
popa
dec
rol
mov
cmp
jmp
inc
shl
loopne
adc
mov
add
stc
ret
sbb
mov
movs
daa
adc
scas
push
cdq
in
lea
push
push
int
aad
rcr
fs
xor
jne
adc
sub
ins
call
add
pop
add
test
and
inc
sahf
es
cmp
dec
or
retf
jle
sub
je
stos
inc
int3
pop
and
and
xlat
rcl
popf
jecxz
retf
data16
pop
jbe
pop
je
mov
mov
cmp
mov
cmps
jg
inc
xor
or
popf
push
dec
es
inc
inc
out
jb
loope
mov
leave
popw
push
pop
in
jne
mov
inc
js
sub
imul
out
or
es
call
mov
outs
test
fld
or
stos
stos
mov
mov
or
and
inc
push
mov
(bad)
mov
jmp
cmp
int
out
xchg
test
xor
test
lods
fistp
outs
mov
inc
add
sbb
retf
ja
ret
add
stc
mov
test
push
adc
push
cld
popf
je
dec
mov
out
je
mov
mov
aaa
cmps
push
jno
scas
cmp
inc
loop
push
popf
leave
mov
jecxz
add
popf
fwait
aas
enter
push
and
fistp
enter
mov
call
and
cmp
mov
sbb
in
jo
pop
dec
int3
mov
retf
adc
inc
or
pop
jmp
call
int
test
fs
(bad)
fidiv
js
dec
cmp
jle
mov
stc
dec
cmp
mov
nop
neg
sbb
leave
daa
mov
aas
xlat
mov
(bad)
mov
sub
push
outs
sahf
repz
cmp
cs
lods
lds
nop
add
mov
mov
and
in
adc
(bad)
(bad)
fstp
test
jle
rcr
and
mov
xchg
aaa
out
ss
pop
cs
xor
cld
test
sub
cmps
pop
mov
adc
mov
cmp
(bad)
sti
sbb
adc
mov
retf
inc
xchg
out
stos
cmp
cs
and
sbb
loope
dec
or
test
gs
test
dec
pop
fstp
dec
xlat
xchg
loopne
inc
int3
out
ja
pop
lock
ins
xchg
sti
cmp
imul
enter
mov
sub
or
xor
jge
pop
cld
shl
ret
in
mov
mov
test
push
fld
int
mov
cli
jo
jge
addr16
mov
test
iret
add
cld
xchg
or
aam
icebp
out
ret
int3
push
popf
call
xor
js
sahf
ror
fadd
loope
cdq
adc
pop
xchg
xchg
jae
sbb
pop
mov
pop
pop
pop
cmp
pop
imul
sbb
and
or
rcl
sbb
mov
(bad)
fdivr
stos
sbb
cs
dec
mov
xchg
outs
xchg
out
(bad)
call
mov
dec
mov
ret
gs
and
shl
movs
push
sub
inc
cdq
aad
aaa
inc
push
test
imul
cmp
arpl
mov
jl
mov
cmp
repnz
std
push
jo
mov
dec
mov
xor
rcr
mov
inc
sbb
addr16
mov
std
xchg
jae
add
fdiv
mov
dec
dec
lock
push
inc
popf
push
scas
ret
push
adc
(bad)
dec
cmp
bound
lahf
ss
dec
cmc
std
sahf
xor
repz
add
push
sub
arpl
add
ror
jb
jmp
aad
repz
mov
cmps
xlat
inc
ins
mov
push
push
fiadd
ds
sub
gs
and
pop
sti
mov
xchg
cmp
(bad)
cmp
neg
push
mov
pusha
or
aad
or
in
mov
and
pop
jns
and
stos
jecxz
jecxz
sbb
out
sub
sbb
or
gs
xchg
aad
pop
int
outs
push
adc
jbe
loop
dec
jnp
xor
js
(bad)
icebp
dec
xchg
sbb
inc
xchg
jle
ror
mov
inc
pop
pushf
in
mov
adc
leave
cld
sbb
(bad)
mov
push
push
int3
xor
jmp
sbb
out
imul
arpl
mov
add
shr
in
pusha
xchg
int3
jno
lock
in
fild
ds
xchg
test
les
(bad)
mov
add
cmp
je
movs
xchg
div
mov
sub
(bad)
jle
aad
cdq
fidiv
sub
mov
aas
mov
mov
xor
daa
or
jge
xor
lock
push
mov
pop
psubb
rcl
add
mov
jne
sbb
fs
push
inc
adc
add
fcos
push
lock
mov
fidiv
adc
cwde
pusha
jl
test
push
push
xchg
mov
sbb
test
and
jecxz
fist
jbe
test
les
push
inc
retf
push
aaa
ins
and
daa
mov
(bad)
retf
inc
loopne
aaa
imul
ds
xchg
pop
xchg
call
or
mov
mov
dec
sti
int3
xchg
push
mov
push
cmp
jne
adc
dec
adc
je
xor
out
inc
xor
mov
lds
call
ror
fdiv
adc
or
fimul
les
outs
sti
push
cmp
loopne
pop
out
inc
mov
adc
cli
fs
out
push
lods
cmps
mov
or
sub
les
in
dec
pop
out
call
arpl
pop
js
out
sub
jmp
fnstsw
in
cmps
mov
sar
repnz
cld
pop
outs
mov
test
cmp
mov
cli
jg
fsub
inc
jmp
jmp
or
test
and
xchg
js
mov
outs
and
xchg
aaa
or
ror
sbb
dec
and
or
aas
ret
xchg
ins
pop
mov
cmp
mov
lods
fld
dec
xor
mov
sbb
repnz
xchg
and
(bad)
std
int3
mov
out
aas
pushf
into
into
sub
and
mov
fcmovu
in
fild
scas
fs
gs
out
push
mov
lahf
arpl
dec
cmc
(bad)
inc
push
jno
cmp
scas
imul
scas
adc
in
rcr
mov
lahf
push
and
cld
rcr
xchg
jb
add
stos
push
adc
mov
iret
les
push
retf
sub
fnstcw
mov
in
cmps
js
push
push
xchg
sub
or
pop
scas
dec
in
xchg
mov
(bad)
xor
sar
div
cmp
nop
xchg
push
pop
sub
rcl
pop
mov
inc
pop
and
mov
test
popa
xor
pop
mov
jmp
ins
imul
pop
jmp
add
lahf
ds
pop
call
or
inc
mov
push
hlt
fisub
(bad)
mov
jge
nop
adc
push
enter
push
test
add
or
jmp
repz
jl
dec
gs
mov
ficomp
mov
ss
cmp
adc
repnz
in
movs
or
cli
sahf
push
jl
mov
sub
das
retf
adc
fistp
outs
sbb
xchg
fcomp
sbb
movs
or
pop
inc
xchg
pop
jnp
nop
les
jg
hlt
inc
outs
sub
xchg
mov
addr16
sti
icebp
pop
fsub
cld
enter
(bad)
loopne
retf
rcl
add
xor
pop
jmp
jg
hlt
ins
fisttp
push
lods
imul
sbb
cmp
dec
into
test
dec
mov
xor
mov
jae
push
add
pushf
push
sbb
add
and
push
pop
stc
pop
fmul
out
mov
aam
jnp
pop
xor
mov
cs
push
xchg
push
dec
ret
movs
cmps
cmc
jg
xchg
push
sbb
popf
call
jno
push
push
arpl
dec
out
adc
jle
pop
adc
(bad)
in
and
dec
fcmovnu
int3
mov
ror
in
loopne
push
or
mov
sahf
mov
add
pop
retf
stc
mov
jl
das
cwde
sub
scas
fdiv
and
push
test
cmp
mov
inc
mov
lea
and
enter
aaa
lods
jle
es
(bad)
aas
xchg
mov
add
mov
leave
mov
hlt
sub
sti
aad
cmp
ss
fld
lods
pop
nop
and
jmp
and
dec
loopne
fild
dec
popa
loopne
mov
out
neg
rol
cmp
(bad)
jmp
mov
test
adc
loop
movs
adc
shr
mov
sub
ds
xchg
imul
aas
aaa
(bad)
xchg
fcom
push
mov
ret
add
mov
outs
push
cmp
pop
add
mov
sti
mov
lds
mov
cwde
aam
mov
out
bound
sub
jmp
dec
push
push
aas
add
inc
imul
je
stos
cmp
ja
fcom
arpl
out
sbb
sub
test
jg
aad
es
xchg
lea
xchg
sub
fadd
push
inc
movs
xchg
xchg
call
add
clc
and
cmp
pop
movs
cmp
out
fcomi
and
mov
bound
sub
jmp
mov
fs
pop
scas
xor
sbb
aad
pop
(bad)
stos
jns
mov
mov
sahf
xor
addr16
xor
and
call
jecxz
test
pop
arpl
je
outs
aad
or
das
inc
repz
stc
cmp
push
dec
jge
xchg
adc
mov
cmp
ja
cld
shl
inc
push
mov
add
loop
xor
add
sbb
nop
and
(bad)
call
xor
je
push
(bad)
imul
pop
popf
push
mov
push
ficomp
nop
push
xor
fs
je
out
or
retf
lahf
push
shl
out
lds
int
fstp
retf
jmp
push
xchg
aam
xor
out
or
bound
out
and
addr16
xchg
icebp
pop
inc
rcl
jge
adc
push
out
xchg
outs
aam
rcl
loope
cmps
pop
mov
(bad)
ror
imul
imul
jo
jle
jmp
out
je
jae
sbb
jecxz
or
add
xchg
jg
mov
ret
and
mov
fadd
repz
dec
jae
adc
push
ss
inc
mov
pop
iret
lds
mov
pusha
outs
push
sar
sbb
dec
sahf
imul
cmps
push
cs
(bad)
in
leave
sub
xor
jle
clc
repnz
jbe
push
sahf
cmps
add
and
sub
jo
fcomp
push
mov
cwde
lahf
push
in
push
pop
xor
add
ds
xor
ss
call
test
stos
scas
(bad)
ficom
fadd
push
cwde
pop
sub
test
repz
ret
fist
sbb
por
cmps
push
adc
jg
fdiv
mov
sub
sti
pop
mov
xchg
adc
inc
pop
int
imul
push
sbb
pop
pusha
iret
retf
xlat
pop
and
sbb
rcr
jnp
je
jmp
inc
mov
and
ins
call
add
pop
or
mov
add
cmp
loopne
arpl
xchg
mov
push
and
dec
(bad)
les
(bad)
stos
in
xchg
mov
inc
adc
imul
cmp
shr
xor
ss
and
push
ret
jne
sbb
xchg
hlt
aad
arpl
and
ret
inc
test
inc
pop
shl
sahf
shl
mov
ds
int3
call
or
jb
inc
out
fcmove
push
pop
fbstp
push
dec
push
mov
xchg
(bad)
adc
cmp
sbb
adc
rcr
lahf
mov
cld
cwde
pop
into
sbb
jmp
mov
jmp
cmp
int3
and
dec
jg
ins
push
loopne
mov
sbb
pop
and
jl
xor
mul
or
shr
inc
or
nop
mov
add
mov
cmc
(bad)
arpl
jnp
add
or
rcr
mov
xchg
fs
pop
or
stc
shl
pop
sub
in
in
mov
xchg
jle
scas
inc
jmp
dec
inc
(bad)
retf
adc
pop
retf
and
xchg
adc
inc
inc
cmc
pop
je
mov
mul
test
xor
jmp
sub
mov
jl
xchg
int
aam
mov
push
stos
retf
xchg
out
call
ror
xor
retf
xor
out
jno
or
jno
xor
mov
inc
and
fxch
or
es
xchg
ficom
test
and
dec
push
outs
mov
xor
mov
ror
lock
test
ret
(bad)
into
mov
xor
jo
push
out
aam
cmp
mov
mov
pop
mov
push
cmp
cmp
or
inc
movs
lock
(bad)
cmp
xchg
and
sti
nop
sar
push
xchg
cmp
(bad)
outs
jecxz
inc
dec
shl
lds
cmps
xor
mov
mov
test
out
adc
ja
call
lds
loope
(bad)
cmp
aas
inc
mov
nop
inc
inc
pop
test
cdq
pop
xchg
sbb
sbb
push
jmp
in
dec
pop
cmc
push
jo
sub
shr
daa
inc
mov
mov
jle
xor
out
mov
cmp
sbb
std
mov
mov
mov
jmp
xor
xor
cmp
sbb
test
popf
xor
or
cdq
cmps
xchg
cmps
test
jecxz
push
xor
paddb
mov
out
les
mov
or
(bad)
jnp
or
cmp
(bad)
xchg
pop
add
dec
mov
jmp
cmp
jg
and
jno
and
adc
and
pop
aad
pop
xchg
sti
mov
dec
push
inc
movs
and
pop
(bad)
enter
cwde
add
jmp
pop
das
dec
mov
push
fdivp
xor
jnp
adc
jl
jno
cmc
add
shr
mov
sahf
or
pop
mov
dec
stc
sbb
xor
mov
loop
dec
scas
inc
mov
sub
push
das
and
test
fs
mov
or
push
sbb
push
aas
push
in
ins
retf
sbb
dec
add
repnz
jns
popf
imul
xchg
or
adc
(bad)
iret
rcr
jae
in
fcom
xlat
xchg
addr16
adc
(bad)
loopne
adc
inc
ret
jge
cmp
xchg
test
call
retf
sub
and
jmp
cmp
aam
loope
xor
pop
cdq
push
mov
jp
and
fisttp
pop
add
aam
repz
adc
jbe
in
pop
ds
fistp
adc
cs
and
push
xchg
das
(bad)
sbb
and
retf
sub
jle
not
xchg
(bad)
dec
push
mov
arpl
mov
das
mov
stc
int
fld
add
xor
lea
stos
dec
pop
cs
addr16
or
loope
dec
(bad)
jl
xchg
mov
shl
loopne
xchg
in
dec
mov
cs
mov
inc
xor
jnp
popa
cwde
inc
jbe
mov
pop
and
outs
test
aas
xchg
xor
push
add
out
add
mov
nop
not
push
js
mov
mov
pop
clc
push
(bad)
(bad)
adc
out
out
mov
xor
cwde
test
or
mov
out
inc
dec
add
mov
repnz
cmp
sbb
(bad)
push
and
sti
fwait
xchg
sbb
push
cs
and
in
pop
xor
push
xor
cmp
mov
retf
xchg
inc
rcr
loop
cs
or
add
test
aaa
cmp
movs
nop
or
rcr
adc
push
pop
add
mov
frstor
cwde
stos
adc
sbb
les
push
sbb
mov
xor
hlt
adc
sub
dec
addr16
sub
lods
lock
jl
sbb
xor
sbb
inc
not
adc
sbb
sahf
or
or
and
mov
pop
dec
cmc
lock
jecxz
shr
sbb
dec
mov
(bad)
mov
int
call
mov
and
dec
dec
sub
push
add
mov
mov
push
mov
gs
mov
add
xchg
lock
cmp
pop
push
rcr
leave
xchg
mul
and
fadd
xchg
sub
and
movs
sub
mov
test
inc
into
in
pop
push
or
lock
xor
jae
push
push
mov
pushw
mov
add
mov
push
addr16
mov
cmp
add
sbb
jno
jno
mov
cwde
(bad)
mov
pop
push
movs
inc
pop
inc
adc
pop
or
enter
ret
jp
fwait
push
test
dec
push
outs
retf
retf
sahf
icebp
cmp
not
popf
sub
sqrtps
mov
(bad)
xchg
xor
(bad)
leave
jecxz
jge
mov
or
mov
arpl
sbb
jne
or
in
xor
daa
nop
fbld
xor
sub
push
lods
dec
rcl
sbb
or
inc
mov
addr16
mov
jae
xchg
dec
pop
xor
sub
xor
and
xchg
add
int3
push
jge
mov
daa
pop
jl
mov
add
jmp
mov
adc
dec
cdq
sbb
sbb
sbb
int
stos
fiadd
add
pop
mov
retf
and
cmc
jle
mov
loopne
ins
mov
mov
or
outs
mov
jbe
mov
push
jecxz
or
cmp
lods
pusha
push
idiv
mov
mov
mov
jecxz
mov
fidivr
xchg
mov
addr16
cmc
push
shl
lea
movs
or
or
ret
(bad)
shl
stc
push
ret
scas
and
mov
xor
mov
xchg
ins
xchg
cdq
cmp
mov
inc
cmp
mov
punpckhwd
and
stos
popa
les
pop
sbb
mov
(bad)
lahf
push
mov
out
xor
mov
pop
xor
es
cwde
mov
aaa
popa
ss
jae
aaa
lea
ret
jle
sbb
in
mov
or
or
bswap
jne
mov
mov
pop
in
xor
sbb
ss
lds
stc
enter
cld
test
xor
jmp
dec
fcmove
cmps
inc
push
jo
pop
jecxz
inc
cwde
mov
mov
and
dec
fisttp
inc
or
into
sbb
xor
movs
and
pop
es
loop
and
sub
pushf
mov
dec
fmul
dec
scas
push
jns
and
xlat
lea
loop
adc
(bad)
sbb
ret
retf
add
mov
adc
enter
fs
inc
enter
push
dec
push
or
and
aaa
stos
cdq
jne
fwait
repz
mov
cld
out
push
pop
sbb
scas
or
mov
mov
mov
bnd
add
mov
out
xchg
ss
fisttp
fidivr
xor
xchg
jns
dec
add
xchg
inc
inc
or
nop
lods
scas
xchg
inc
call
mov
cmp
frstpm(287
mov
fnsave
jp
push
rcr
cmps
xor
pop
daa
fsubr
pop
add
push
lahf
adc
bound
sbb
sbb
pop
pop
mov
add
pop
inc
neg
cmp
mov
mov
fisubr
dec
lahf
cmps
push
movs
pop
mov
xlat
or
jmp
jge
sbb
outs
and
imul
imul
mov
rcl
or
push
retf
jo
in
loope
cs
lods
xor
scas
(bad)
push
xchg
sbb
shl
sub
shl
or
int
push
mov
pusha
mov
ror
cli
cs
xchg
dec
arpl
xor
add
test
dec
push
or
pop
push
test
push
out
or
(bad)
fidiv
sysexit
adc
(bad)
sbb
xchg
or
clc
pushf
(bad)
pushf
jmp
or
pop
sub
xor
iret
rcr
xchg
jp
cli
int
test
pop
inc
xchg
push
sti
(bad)
in
xchg
xchg
sub
mov
pop
jecxz
repz
ss
add
xchg
loop
mov
fsin
pushf
or
movs
stos
push
movs
mov
push
add
repz
nop
sub
and
fstp
push
mov
fistp
pop
xchg
jno
jp
aad
lea
sub
mov
pop
mov
and
inc
push
ror
int3
add
sub
sbb
adc
cdq
fadd
in
inc
mov
cs
sahf
push
dec
cmp
or
mov
movs
xor
dec
jmp
add
(bad)
das
jo
int
cld
lods
pop
adc
sbb
dec
jnp
cmps
fld1
dec
xor
aad
bound
jns
sub
pop
clc
mov
xor
push
xlat
adc
cli
jne
fwait
rcl
cs
mov
retf
and
add
xor
cld
mov
repz
push
lods
inc
sbb
imul
jg
sbb
clc
in
xchg
lods
dec
call
xor
loope
loopne
lea
cmps
shl
outs
mov
sub
sti
imul
iret
add
cmp
mov
xor
mov
fnsave
mov
mov
int3
dec
(bad)
fist
iret
sahf
into
or
mov
jg
jecxz
sar
xchg
fs
out
test
test
pop
push
jae
or
cmp
fcom
int
jb
push
arpl
inc
add
sub
mov
mov
sub
fadd
fs
popa
(bad)
out
ja
scas
dec
xchg
pop
and
out
xor
adc
or
xlat
mov
or
push
rcr
sahf
(bad)
xor
adc
fstp
(bad)
add
mov
xor
lods
add
clc
xor
push
mov
mov
inc
stos
mov
push
sbb
rol
jo
sub
jae
in
mov
lds
addr16
fisubr
ds
jbe
xor
dec
xor
and
loope
cmp
retf
stos
stc
and
sub
test
es
sub
cdq
mov
inc
outs
mov
loop
js
push
pop
imul
in
adc
mov
sub
iret
out
popa
das
ja
mov
sbb
ss
mov
ficomp
(bad)
addr16
mov
(bad)
add
add
sbb
std
sti
lds
ret
xchg
xchg
cwde
pop
jnp
call
push
loop
pushf
mov
and
test
sahf
add
in
loopne
push
(bad)
inc
rcr
cs
aaa
xchg
pushf
pushf
adc
(bad)
adc
inc
and
inc
xor
ret
scas
sub
pop
adc
jmp
and
pop
add
xchg
or
neg
jmp
mov
sbb
inc
xchg
pop
add
push
repnz
adc
jg
imul
xchg
stos
mov
into
jo
(bad)
aam
jp
aam
or
ins
push
fs
dec
pusha
outs
dec
jl
or
in
sub
retf
push
jle
mov
aam
inc
pop
pusha
inc
or
inc
std
and
xlat
psubsb
mov
in
ret
out
and
je
mov
mov
fnstenv
cdq
dec
xor
mov
add
cmp
out
sub
fidiv
pop
gs
out
(bad)
jmp
call
je
cmc
cdq
shl
imul
add
ins
jns
jl
sbb
or
mov
idiv
popf
mov
sub
in
and
movs
mov
adc
scas
(bad)
jne
xchg
dec
sbb
pop
mov
mov
inc
ins
test
xchg
js
xor
xchg
pusha
mul
sar
shl
je
enter
jno
cmp
sti
sbb
je
(bad)
adc
ror
cmps
loope
mov
dec
and
lds
retf
loopne
nop
test
fadd
jge
out
jno
gs
xor
out
ret
das
cld
rcr
loopne
push
call
sub
stc
aaa
inc
idiv
retf
imul
jg
ret
and
fcom
pop
test
daa
movs
pop
ds
sbb
fwait
shl
ret
mov
pusha
push
inc
sbb
out
jl
ror
add
daa
imul
sbb
and
ret
push
test
add
pushf
dec
gs
add
push
or
fild
adc
aad
pusha
fcmovne
xor
mov
ret
in
das
mov
mov
mov
sbb
push
test
jae
cmps
cwde
xchg
shr
sbb
jnp
xchg
pop
mov
jecxz
aam
(bad)
dec
cmc
mov
test
adc
int
inc
adc
jmp
mov
int3
gs
aaa
mov
fidiv
int
xchg
sbb
dec
icebp
jmp
xchg
std
xchg
mov
mov
and
mov
fwait
sar
push
pop
int
(bad)
jo
sbb
jl
out
test
add
mov
mov
xchg
and
dec
mov
adc
push
imul
pop
(bad)
or
clc
push
mov
mov
scas
push
mov
jl
adc
and
pop
fist
mov
in
sbb
into
sub
mov
push
mov
mov
fist
or
bound
rol
fs
cmp
sbb
ret
sbb
ret
xor
movs
sar
pop
sub
jmp
cwde
pop
jae
xchg
dec
inc
outs
and
push
fucomip
mov
iret
add
sub
es
aad
(bad)
mov
shl
dec
push
mov
sub
push
out
repnz
call
pusha
dec
test
outs
dec
daa
rcl
sub
cld
test
cmps
xor
adc
sti
mov
test
dec
ror
dec
fmul
cwde
sbb
jno
call
inc
pop
jmp
inc
lea
rcr
add
xchg
ins
in
and
cmp
mov
shl
clc
cli
push
sub
or
ins
inc
dec
fbstp
(bad)
mov
imul
dec
jbe
jne
hlt
sub
cmp
call
loop
push
test
retf
clc
cmc
fldz
fld
adc
les
test
inc
jl
pop
test
push
das
add
jo
inc
push
jle
sub
out
ds
mov
mov
stos
pop
xor
mov
cmp
and
push
dec
mov
imul
add
pop
jb
mov
mov
mov
add
loope
enter
lahf
push
sahf
jns
lods
mov
fist
clts
movs
sbb
aad
xchg
repz
push
sub
aas
out
pop
retf
pushf
adc
xchg
xor
jae
loopne
jl
pop
adc
cli
xor
push
outs
pop
sahf
add
mov
mov
in
enter
adc
and
sub
mov
mov
mov
mov
test
sbb
inc
mov
cld
push
xlat
inc
sbb
(bad)
enter
jmp
mov
bound
sbb
leave
sbb
push
loopne
dec
into
lods
leave
mov
dec
or
xor
cmp
cmp
outs
jmp
pop
cmps
sub
and
bound
xchg
jae
jnp
inc
or
leave
jbe
lds
dec
dec
(bad)
ja
sub
call
lds
jmp
popa
push
rcl
std
addr16
pop
sub
xor
ins
cld
xchg
sub
or
adc
ret
popf
scas
stc
jns
es
ret
push
pop
aam
js
add
rcl
(bad)
pop
sar
out
sahf
xchg
fcmovnu
mov
dec
push
pushf
call
jg
sbb
fild
inc
cmp
jp
cmp
in
pop
hlt
and
dec
adc
mov
mov
pusha
int3
sbb
mul
mov
cwde
pop
retf
scas
and
xlat
int3
imul
fild
aad
cmps
inc
pop
mov
cwde
lods
(bad)
mov
movs
or
or
push
cmp
sub
stos
xor
loope
(bad)
mov
(bad)
xchg
fimul
sub
ins
dec
cmc
neg
adc
in
mov
xor
push
mov
sbb
inc
mov
and
jecxz
mov
cli
cld
mov
and
test
xor
jne
or
(bad)
inc
adc
or
(bad)
jo
pop
out
jnp
stos
xor
movs
jno
dec
(bad)
cmp
out
enter
pop
shr
iret
jno
cmps
xchg
mov
mov
and
xchg
sbb
add
stc
push
lods
jg
stos
dec
int3
lods
mov
push
repz
sti
div
or
(bad)
adc
pop
hlt
stc
int3
inc
dec
push
mov
dec
in
push
mov
repz
adc
mov
push
xor
jg
(bad)
movs
or
jge
lds
mov
push
pop
dec
std
mov
dec
inc
repz
jns
adc
je
leave
out
retf
addr16
inc
mov
into
ds
jge
aad
lods
idiv
jbe
xor
jnp
adc
mov
enter
shl
xor
mov
or
or
aam
test
sub
jnp
dec
dec
das
popf
imul
dec
add
mov
nop
loop
inc
cmps
xchg
jg
push
mov
inc
sub
inc
scas
dec
or
jg
xor
call
stos
arpl
hlt
dec
(bad)
jmp
xchg
mov
xchg
mov
(bad)
jmp
jo
aam
lods
cmp
(bad)
jl
adc
xchg
inc
xchg
sub
pop
ror
arpl
mov
or
es
push
cld
cmps
(bad)
mov
aam
cmps
jle
mov
add
and
add
addr16
nop
sbb
sti
cmps
cmp
and
xchg
inc
shl
mov
inc
movnti
mov
jne
rcl
xlat
(bad)
mov
xor
pop
jns
repnz
mov
stos
add
xor
push
popa
jb
add
inc
push
adc
dec
pop
and
int3
or
sub
add
mov
aaa
cmc
push
icebp
mov
dec
xchg
pop
or
sub
push
push
pop
and
ins
sub
pop
scas
ror
mov
cmps
shl
nop
or
sbb
test
addr16
out
loope
enter
loope
xchg
adc
pop
or
xchg
jne
push
cmps
xor
push
mov
imul
mov
arpl
pusha
mov
jnp
sub
bound
loope
inc
mov
mov
mov
ret
lahf
imul
xor
push
cs
jmp
pop
js
or
ss
or
pusha
fimul
popf
cmc
mov
clc
mov
ins
inc
cmp
loope
dec
mov
stos
loope
popa
movs
inc
and
sub
sbb
adc
into
sub
jmp
movs
mov
neg
iret
inc
(bad)
adc
mov
in
mov
cmps
and
sub
ror
inc
push
jnp
out
stos
(bad)
f2xm1
in
inc
push
cwde
mov
loope
cmp
dec
stos
jmp
push
push
cmp
test
inc
mov
out
popf
imul
(bad)
adc
or
mov
inc
inc
jp
inc
mov
pop
sub
mov
dec
addr16
cmp
scas
jmp
idiv
add
mov
fdivr
or
dec
push
or
pop
cmp
mov
cmp
xor
push
out
ja
and
xchg
inc
cli
iret
fcom
enter
push
mov
cmps
and
fwait
aad
push
mov
sub
daa
movs
pop
pop
fdiv
or
(bad)
fdiv
pop
adc
and
nop
add
or
and
scas
inc
mov
les
(bad)
mov
and
mov
dec
(bad)
dec
lods
pop
sbb
scas
adc
mov
sbb
std
inc
jecxz
enter
shr
scas
xor
in
pusha
pop
out
fistp
int
jb
imul
outs
mov
add
fimul
fwait
shr
test
jge
jae
popa
ret
add
mov
cs
jbe
in
out
dec
add
mov
jns
ret
cmp
cmp
mov
aaa
iret
sub
mov
je
add
ds
loop
jb
pop
(bad)
sbb
popa
stos
push
bound
cmps
out
sahf
cld
jg
lahf
daa
imul
test
stos
mov
cwde
mov
scas
jmp
xor
out
mov
mov
lock
push
jge
sub
cmp
pop
pop
xchg
cmp
in
(bad)
shl
pop
out
sahf
dec
dec
jge
inc
sub
out
cmp
arpl
(bad)
inc
pop
cmp
cli
pop
retf
fs
mov
scas
adc
(bad)
jmp
xchg
fisubr
ins
(bad)
movs
arpl
in
les
jne
test
aam
sti
mov
jo
int
jmp
and
jmp
mov
or
pop
fxch
jp
enter
xor
sub
pop
cmp
jb
and
and
add
cli
test
leave
mov
lahf
adc
cwde
lock
adc
sub
inc
cmp
xchg
arpl
sbb
out
movs
and
adc
inc
and
mov
test
and
jmp
lock
lds
leave
mov
sbb
das
popa
sbb
push
daa
inc
stos
in
out
retf
cs
(bad)
bound
pop
hlt
sbb
mov
icebp
or
inc
js
jmp
jp
sub
sbb
imul
das
xor
in
scas
add
xor
mov
add
ss
mov
xchg
dec
xchg
daa
int3
add
or
pop
pushf
add
inc
or
jo
mov
sub
mov
xor
jb
lods
ret
mov
(bad)
xor
iret
push
dec
mov
shl
dec
fidiv
adc
ror
push
sub
sub
jnp
mov
leave
in
out
call
mov
das
loopne
pop
xchg
xchg
mov
mov
mov
ret
cmp
pop
jge
mov
xlat
jecxz
leave
pushf
iret
pusha
in
mov
xchg
mov
cdq
ss
in
cmps
inc
mov
(bad)
adc
jo
(bad)
mov
int3
pop
mov
(bad)
sbb
push
daa
xchg
or
sahf
push
cmp
out
aaa
pop
clc
push
xchg
and
lods
popf
(bad)
ds
cmc
ds
mov
adc
outs
push
xlat
add
out
shr
test
into
test
fdivr
mov
movs
push
or
and
adc
fwait
leave
imul
or
repz
xor
dec
jne
xchg
xchg
xchg
pop
pop
ror
mov
mov
imul
adc
stos
add
out
cli
int3
stc
or
int3
mov
std
test
adc
lock
xor
pop
cmp
mov
idiv
jp
les
shr
mov
fcmovnbe
cmc
int3
add
cmp
or
and
or
push
test
or
fwait
cmp
jnp
push
int3
push
xchg
cmp
movs
or
adc
mov
dec
fbld
int3
pop
push
jmp
push
xor
loopne
pop
mov
sbb
repnz
cmp
(bad)
pop
pop
dec
rol
xor
loopne
push
adc
pop
test
mov
push
jp
out
fcom
ret
add
jb
mov
push
jmp
rol
loope
jne
fld
push
mov
sbb
mov
fwait
push
and
sbb
fwait
mov
xchg
int
sti
pop
ja
fisttp
mov
mov
add
sahf
xchg
shr
mov
sbb
sub
xchg
xor
loopne
push
stc
nop
cld
pop
cmp
and
mov
fbld
sbb
or
mov
jo
call
stos
mov
mov
sub
test
movs
cmps
daa
cmps
add
repz
inc
adc
ss
cmovl
popa
dec
mov
ficom
cmp
leave
jg
in
push
mov
stc
int3
pop
and
retf
fisttp
push
xor
mov
adc
icebp
pop
scas
div
adc
sbb
jnp
ss
lods
clc
(bad)
push
mov
ins
push
fist
xchg
xchg
cwde
jp
jle
mov
inc
sub
mov
pop
jo
aad
and
retf
ss
mov
imul
rcr
add
inc
outs
in
pushf
sahf
mov
add
xor
(bad)
pop
mov
ror
xchg
sbb
aam
sub
scas
inc
jmp
pop
dec
test
and
cmps
rcl
jecxz
adc
lods
jge
bound
jmp
fucomp
cmps
cmc
mov
jb
mov
or
je
nop
sbb
mov
lock
and
cmps
dec
inc
sbb
jmp
scas
lock
cmps
in
outs
gs
add
sbb
popf
in
push
lock
pop
mov
call
push
mov
mov
mov
mov
adc
pop
das
inc
test
push
xchg
cmp
mov
rol
xchg
and
out
ror
inc
repz
test
add
sbb
sbb
imul
pop
fwait
sbb
and
mov
pop
movs
mov
cli
div
and
adc
movs
btr
pop
jp
retf
mov
xchg
push
dec
stos
push
push
into
out
push
call
lock
mov
test
clc
mov
cli
lea
mov
fidiv
idiv
sub
pop
mov
xor
and
data16
stc
(bad)
int3
daa
loopne
stos
das
(bad)
sub
push
shr
cdq
mov
jge
mov
retf
and
cs
std
imul
or
cmp
cdq
in
retf
sbb
pop
pop
add
loope
pop
inc
mov
int3
dec
movs
mov
sub
pop
inc
repnz
push
fldenv
sbb
push
retf
lea
fmul
dec
(bad)
sbb
sub
imul
add
and
jne
pop
int
adc
mov
int
or
pop
jg
and
add
out
mov
and
jge
mov
es
jl
xor
fdiv
(bad)
rol
jne
inc
pop
pop
push
ja
sub
mov
test
pop
mov
jmp
mov
dec
fild
test
mov
lds
fwait
dec
loopne
sbb
fcmove
test
and
ss
stos
push
loop
mov
aam
and
mov
sub
data16
stc
cld
ret
outs
sbb
lods
test
mov
int
mov
mov
mov
lea
test
fidiv
test
iret
add
xchg
ja
int
jno
cmp
div
jmp
fnsave
dec
add
jbe
lgs
popf
and
jmp
cmc
gs
push
in
push
test
dec
xor
and
push
icebp
push
push
fadd
jbe
mov
inc
jmp
mov
inc
lds
mov
mov
jp
adc
mov
pop
xchg
test
les
loope
(bad)
popa
loop
loope
sbb
mov
adc
(bad)
push
and
jg
sub
int
cmps
pop
mov
fiadd
lea
(bad)
call
cli
aas
retf
cmps
aas
popa
sub
jle
loop
mov
mov
mov
inc
int
rcr
lds
(bad)
sbb
and
in
fisubr
mov
cmc
push
daa
pusha
fld
ret
mov
jg
and
cmp
add
sub
cmp
lock
not
shl
dec
cli
adc
xchg
dec
mov
cwde
fyl2xp1
loope
mov
add
mov
sar
xchg
push
shl
mov
cmps
xchg
pop
fsub
mov
cs
xchg
cdq
shl
aad
adc
ror
mov
adc
shl
jb
movs
js
cli
ja
lea
(bad)
loopne
push
das
stos
xchg
aam
dec
shl
lahf
loope
xchg
inc
xchg
call
dec
call
rcr
and
dec
xchg
mov
daa
xchg
add
xchg
sbb
das
scas
popa
lea
movs
sbb
jg
stc
xchg
lea
mov
test
adc
sbb
jno
dec
mov
and
mov
push
imul
imul
push
dec
mov
push
pop
pop
pop
dec
xor
pushf
nop
fwait
jnp
inc
fistp
imul
xor
sub
and
mov
inc
push
data16
xor
sbb
push
in
inc
mov
lds
pop
outs
ret
lahf
adc
(bad)
dec
in
(bad)
inc
imul
jl
dec
int3
xor
xor
stos
nop
lods
js
loope
imul
aaa
or
xchg
mov
call
fisttp
cmp
push
sti
ficom
stos
xor
(bad)
xor
(bad)
adc
stos
jne
out
or
jae
jp
cmps
push
dec
test
in
and
or
lea
sti
sar
std
sub
ret
dec
out
dec
enter
fst
cmp
shr
ja
cmps
fwait
inc
sbb
add
mov
ins
jno
jmp
pop
xor
in
shl
mov
(bad)
or
sahf
int
add
outs
inc
mov
mov
jnp
into
aam
lock
loope
xor
sub
add
xchg
dec
div
std
aad
test
out
out
stos
test
sahf
ds
or
lods
les
(bad)
and
add
mov
and
sbb
in
xchg
out
js
movs
cli
fs
xor
mov
in
jle
adc
mov
ja
xor
inc
cmp
arpl
adc
adc
aaa
push
(bad)
daa
mov
in
je
rep
outs
imul
mov
inc
ret
stos
sub
loop
dec
inc
or
sbb
es
(bad)
pop
jns
sub
mov
mov
fwait
(bad)
mov
mov
mov
movs
xchg
dec
int
sbb
mov
jnp
int
inc
and
pop
or
and
lea
jb
dec
push
hlt
add
(bad)
(bad)
push
or
push
mul
pop
mov
or
and
in
push
ds
ret
adc
lock
or
sbb
push
push
jp
cmp
jae
std
xor
rol
adc
test
(bad)
(bad)
bound
cmps
aad
inc
push
enter
adc
mov
sub
ja
dec
(bad)
pop
xor
fnstcw
xor
dec
adc
loope
or
ror
or
mov
addr16
(bad)
adc
pop
enter
sbb
or
and
mov
sahf
mov
imul
sti
ret
add
jo
(bad)
xchg
or
pop
mov
loopne
ds
mov
mov
retf
imul
test
pop
pop
dec
or
jmp
pop
adc
data16
aaa
xchg
or
adc
push
bound
clc
repnz
xor
jl
sbb
or
inc
int
les
(bad)
fisub
jae
out
and
jo
scas
aas
cdq
pop
pop
mov
pop
shl
daa
shl
and
dec
push
out
pusha
mov
jg
jb
mov
sbb
mov
mov
or
in
loop
cs
mov
sub
(bad)
pusha
push
adc
cmp
push
lds
(bad)
pop
push
aad
(bad)
out
cmp
call
or
dec
or
jge
mov
mov
jge
cs
pop
nop
push
or
loope
jecxz
sub
xor
inc
ins
les
movs
in
dec
mov
(bad)
xchg
xchg
mov
mov
mov
dec
push
pop
add
(bad)
adc
jbe
cld
out
mov
cs
dec
outs
mov
xor
jo
lods
mov
les
push
ret
ror
sub
jmp
movs
out
push
int3
add
nop
or
mov
mov
dec
push
(bad)
fwait
xchg
sub
sti
sbb
ds
cmp
pop
dec
cmp
add
push
repnz
jns
sar
push
xchg
out
xor
movs
or
cmp
mov
sub
out
pop
jae
fs
fimul
fs
and
fs
shl
mov
rcl
test
pop
pop
or
test
dec
sahf
inc
neg
mov
std
scas
nop
ins
rcl
mov
js
arpl
ss
or
dec
xchg
jns
loope
mov
inc
jno
not
bound
jb
shl
push
out
mov
ins
cs
xchg
ds
xchg
mov
test
(bad)
ja
lock
cmp
sbb
and
inc
mov
lods
retf
ror
shl
push
ds
adc
pop
xor
push
and
sub
xchg
add
push
mov
inc
jae
hlt
or
dec
pop
xor
dec
(bad)
loope
lods
sbb
sar
cld
test
outs
jle
xor
xchg
xchg
fs
cmp
or
inc
sub
pop
(bad)
jno
pop
xchg
sahf
dec
and
jns
mov
push
lahf
repnz
test
mov
fimul
pushf
pop
leave
add
lods
and
test
vsqrtsd
dec
retf
in
out
or
inc
jae
mov
xor
fwait
movs
scas
shl
loop
pop
add
inc
mov
pop
test
mov
inc
leave
inc
adc
pop
ss
clc
sti
jg
inc
retf
dec
int3
mov
sahf
icebp
daa
pop
movs
dec
fwait
xor
jo
jp
cmp
add
lods
pop
popf
scas
add
sar
sub
push
idiv
test
mov
adc
jl
jo
gs
inc
and
sub
mov
sub
mov
jo
sbb
loop
or
inc
cmp
je
fsub
fwait
mov
cs
xor
jb
leave
cmps
jmp
js
mov
or
push
or
ins
mov
and
jo
fwait
pop
das
mov
xchg
mov
(bad)
sti
addr16
mov
add
sbb
mul
pusha
or
mov
xlat
loope
mov
aas
push
xchg
outs
movs
jge
sahf
dec
push
addr16
sub
in
jmp
(bad)
movs
sub
jo
push
or
xor
mov
nop
stos
and
aaa
aam
pop
push
js
or
test
repz
mov
stos
test
xchg
sar
(bad)
xchg
xchg
mov
mov
jnp
test
fdiv
sub
sbb
movs
or
retf
or
mov
mov
push
push
add
imul
push
sub
aad
xchg
fwait
mov
pop
mov
ja
push
iret
fstp
ror
pop
stos
xchg
mov
sbb
mov
pusha
xchg
pop
test
loopne
dec
mov
jmp
frndint
add
sbb
cdq
rep
xlat
pop
sub
mov
(bad)
add
(bad)
test
mov
jns
or
mov
cli
and
test
imul
mov
cmp
int3
icebp
stos
pop
xchg
or
les
mov
sub
std
sahf
leave
test
mov
mul
inc
ss
pop
pop
mov
std
loop
(bad)
in
cli
sti
mov
je
add
dec
test
nop
sti
add
ins
xchg
js
call
pop
sbb
aad
sub
icebp
push
(bad)
out
add
mov
sti
addr16
into
(bad)
lock
loop
push
shl
lock
loope
sub
sbb
cdq
cld
or
mov
ins
mov
repnz
dec
sbb
add
push
adc
scas
xchg
mov
xchg
pop
je
inc
pop
sbb
inc
rep
xor
loope
cmps
push
xor
mov
test
dec
test
loope
stc
shl
outs
shl
ja
pop
nop
rol
data16
pushf
shl
or
scas
add
sbb
sub
sub
das
mov
sbb
push
or
popf
dec
(bad)
les
lods
sbb
dec
push
sahf
inc
jp
pop
lods
cmps
pop
loopne
jns
add
push
imul
push
je
jo
mov
out
pop
(bad)
push
lds
push
mov
cdq
inc
inc
sbb
mov
xchg
xchg
and
shr
movs
inc
pop
cmp
sbb
adc
sub
add
arpl
mov
sub
push
adc
push
imul
jns
pop
imul
mov
jmp
pop
inc
mov
mov
fs
cmp
es
ret
inc
pop
cld
scas
loopne
lock
int
leave
(bad)
stc
xchg
and
cmc
call
sub
in
sbb
and
lods
xor
add
jne
jmp
fs
mov
pop
lods
pop
ficomp
jnp
add
push
aaa
dec
mov
jns
mov
je
(bad)
dec
mov
xor
cmp
and
or
mov
cmp
dec
daa
dec
mov
mov
jle
jle
stos
call
xchg
idiv
ds
scas
or
xlat
(bad)
ins
dec
bound
rcr
ins
jno
fsub
test
cwde
je
arpl
fwait
hlt
jb
js
cli
xor
push
rcl
ins
jg
push
loopne
mov
nop
enter
pop
call
or
pusha
cs
or
scas
stc
jmp
mov
lock
idiv
mov
ror
lds
in
cmp
inc
stos
xchg
xchg
cmps
(bad)
fs
fdiv
mov
dec
lahf
jle
in
add
mov
bound
cmp
sub
dec
push
inc
fwait
movs
or
jb
sub
cwde
imul
jmp
stc
cld
cld
popf
jge
cli
jbe
dec
aas
xor
cmps
jbe
jne
push
ins
dec
adc
xchg
jo
jmp
je
xchg
cmps
xchg
sub
(bad)
fcomp
adc
lods
vmovaps
fldcw
jo
inc
outs
nop
adc
mov
push
popa
out
(bad)
jecxz
mov
popf
(bad)
in
loope
pop
or
in
idiv
mov
sbb
or
in
mov
xchg
jns
hlt
ins
fistp
sbb
sub
xlat
or
(bad)
ins
call
mov
iret
dec
cmp
ja
fidivr
add
push
mov
aad
xchg
pushf
dec
aad
pop
mov
retf
div
and
int3
dec
or
jge
mov
pushf
(bad)
popa
ins
pop
enter
and
(bad)
ror
in
lods
(bad)
cli
pop
add
push
mov
call
imul
cmp
movs
push
sbb
cwde
xchg
repz
std
(bad)
comiss
cmp
je
lock
jae
jne
pop
inc
out
jae
mov
cld
mov
push
ja
scas
out
dec
push
jmp
mov
or
outs
inc
popa
and
(bad)
fist
xor
pop
and
fmul
inc
mov
cwde
and
repnz
das
jl
aas
add
mov
sbb
out
cld
dec
es
aam
mov
ret
mov
dec
rcr
mul
cmp
daa
push
aad
xchg
lods
out
(bad)
cmc
inc
lods
push
cmp
cmc
xor
and
xchg
or
lock
clc
push
in
cmps
in
ss
mov
inc
sbb
ret
(bad)
cld
jo
out
jge
pop
mov
lahf
mov
dec
fs
and
inc
mov
sahf
scas
dec
jbe
mov
push
xchg
sbb
ret
fistp
dec
in
(bad)
xchg
jnp
das
rcr
sti
inc
loop
das
and
push
mov
xor
nop
loopne
sbb
cs
sbb
add
pop
test
sub
ss
adc
test
jb
xlat
or
dec
retf
sti
ins
inc
add
xor
iret
movs
dec
jmp
out
xor
xor
bound
inc
push
fstp
arpl
pop
mov
xor
or
loope
sub
add
push
jg
ficomp
push
xor
mov
pop
push
adc
(bad)
icebp
rol
icebp
dec
fwait
adc
push
test
push
mov
push
mov
add
push
sar
cmp
mov
test
movs
cmc
jge
mov
lea
rol
pop
jl
dec
sub
cmp
stc
mov
xor
(bad)
cmc
fcomp
js
icebp
lock
test
jno
mov
les
add
stc
imul
ins
rcr
hlt
imul
int
cmp
jmp
pop
arpl
scas
cmp
inc
cmps
(bad)
add
xor
sbb
dec
cmc
test
out
pop
bound
ins
adc
mov
ins
pop
idiv
loope
test
stos
or
push
sbb
jb
retf
lods
add
lods
sahf
rol
jle
sbb
(bad)
retf
fst
mov
nop
scas
adc
pop
lods
retf
jb
jg
inc
adc
pop
mov
adc
fwait
nop
stos
xchg
scas
in
test
lods
outs
and
lahf
icebp
outs
and
dec
mov
cmp
jecxz
or
imul
pop
jp
lods
js
(bad)
jne
push
and
and
fs
jns
or
sbb
imul
inc
mov
icebp
dec
mov
mov
inc
sti
sub
mov
jbe
data16
pop
jecxz
mov
mov
sub
shr
mov
add
jge
mov
je
inc
mov
iret
jb
rcr
lods
ret
pop
arpl
shl
(bad)
adc
xlat
ret
dec
push
xchg
adc
repnz
adc
pop
mov
pop
jmp
mov
in
rol
push
push
and
and
adc
sbb
(bad)
fidiv
loope
mov
cmp
fcom
sbb
cli
mov
push
icebp
pop
add
fcomp
in
xor
test
push
push
sub
push
inc
(bad)
es
xor
sbb
adc
jmp
push
mov
fsubr
or
test
inc
scas
fisub
lock
push
popf
aam
cli
outs
mov
out
repz
nop
push
adc
sub
mov
push
cmps
or
daa
scas
cmp
stos
(bad)
shl
push
cld
pop
test
in
pushf
add
jle
push
dec
ficom
rcl
and
ror
outs
out
xchg
jge
scas
sbb
mov
mov
push
fs
sbb
sbb
popf
mov
jne
inc
jne
sar
cmps
add
icebp
xchg
test
push
jp
push
cmps
inc
mov
fimul
int
fyl2xp1
mov
arpl
ret
xchg
xor
mov
pop
jmp
add
or
(bad)
aad
and
call
mov
fsub
je
pop
scas
outs
and
popf
loop
adc
sub
test
push
xchg
mov
sti
add
ja
mov
jnp
cmp
shl
retf
xor
add
push
push
pusha
inc
push
xor
sbb
mov
jbe
inc
fst
push
(bad)
fidiv
cmp
xchg
cmp
and
aaa
mov
sub
pusha
push
jl
or
sub
repz
xchg
repz
mov
fidiv
fst
and
pop
das
jmp
jne
mov
ss
shl
rcl
cmp
(bad)
fld
retf
stos
pop
pop
xor
aam
sub
ins
into
jmp
cld
xchg
ficom
cdq
sbb
test
sub
fwait
mov
aam
std
jb
aam
mov
popf
pop
sub
sub
test
lea
aas
ds
mov
xchg
arpl
sbb
jmp
fisubr
mov
lods
cdq
rcr
cmp
mov
ins
hlt
fstp
push
mov
call
mov
or
cmps
jbe
mov
retf
sti
add
les
sbb
jb
fsubrp
mov
fwait
popf
mov
repnz
adc
push
ret
pop
push
push
jg
popf
fistp
sub
(bad)
jmp
and
inc
xchg
icebp
test
test
stc
and
dec
pop
push
shr
dec
sbb
push
imul
fisubr
or
lds
les
pusha
adc
jecxz
mov
push
pop
and
lods
enter
push
adc
xchg
dec
push
hlt
mov
cmp
adc
jae
or
sub
and
pop
jle
sar
test
xchg
add
xchg
pop
rol
pop
or
ret
or
(bad)
js
test
xor
adc
push
jle
or
movs
(bad)
loopne
in
push
xchg
loope
dec
adc
jle
out
repz
xchg
sub
add
loopne
and
pop
sbb
pop
fisub
shl
dec
cmps
loop
xchg
fistp
aam
adc
or
cmp
dec
ins
in
cmp
movs
push
fsub
xor
dec
jbe
imul
cwde
(bad)
(bad)
out
push
inc
fstp
inc
loopne
jne
(bad)
or
pop
dec
sbb
movs
xchg
stos
sub
rcr
cmc
mov
mov
jne
add
lds
loopne
ret
loopne
into
(bad)
ficomp
dec
add
dec
rol
movs
int
xor
push
lahf
pop
sbb
call
pop
idiv
inc
jg
je
sbb
icebp
arpl
fwait
jg
inc
lds
fcom
(bad)
dec
dec
inc
mov
pusha
or
test
in
mov
push
cmp
and
mov
mov
shl
ror
inc
add
adc
pusha
imul
push
outs
neg
sub
push
or
bound
(bad)
ja
sbb
test
data16
pop
dec
scas
inc
ror
aas
push
add
jg
ret
or
cwde
pusha
or
retf
out
xchg
ror
lahf
data16
or
mov
out
daa
or
ror
ret
mov
loopne
jg
sbb
loope
loop
and
push
jle
mov
mov
sbb
out
int3
mov
nop
adc
cmp
mov
jecxz
xchg
je
inc
outs
scas
xchg
adc
(bad)
sahf
xor
push
and
mov
mov
stos
lahf
shl
xor
test
mov
enter
push
cmc
(bad)
repnz
mov
fdivr
sub
sbb
dec
and
cmp
or
add
sub
xlat
mov
push
retf
xchg
dec
outs
enter
jbe
xor
dec
mov
and
cwde
jmp
dec
mov
mov
aad
jge
push
pop
stos
pop
mov
xor
cdq
jo
test
xor
xchg
jno
inc
fdivrp
in
mov
or
add
jns
fwait
adc
add
pop
nop
aaa
sub
push
outs
test
popa
xchg
push
cmc
jl
punpckldq
scas
idiv
mov
gs
pop
retf
adc
jp
inc
ins
lahf
fimul
inc
pop
mov
cmps
cmp
imul
in
or
sbb
sbb
add
adc
pop
shr
push
aad
aaa
jno
sub
les
out
movs
jg
mov
adc
push
into
fst
xor
push
clc
stos
(bad)
js
cmp
popa
fwait
test
pushf
call
fsub
test
add
sub
add
pop
sbb
bound
adc
cwde
fstp
cmp
pminub
and
jg
cmc
addr16
jb
jns
pop
jp
imul
jl
add
pop
mov
cmp
cmp
int
mov
xchg
stc
in
add
or
or
adc
out
and
jecxz
fmul
push
(bad)
and
ret
sahf
fstp
test
xchg
mov
out
inc
mov
(bad)
fs
or
xchg
push
cdq
out
inc
dec
ja
ss
push
test
(bad)
(bad)
in
pop
es
xlat
aad
lahf
xchg
arpl
out
inc
mov
aad
loop
(bad)
hlt
ins
cwde
(bad)
in
xchg
mov
(bad)
out
cmps
retf
dec
stc
scas
inc
dec
push
loope
pushf
or
test
mov
lea
js
inc
adc
adc
mov
in
pop
(bad)
adc
push
add
xlat
pushf
in
xchg
shl
mov
out
in
jp
sub
or
mov
cmp
push
retf
fisttp
loop
sbb
cmp
retf
aad
inc
cdq
lds
fistp
(bad)
push
jno
pop
xchg
in
in
lods
push
inc
add
mov
dec
test
test
sub
mov
dec
and
sbb
scas
jno
cmps
cs
bound
or
call
mov
test
xchg
into
mov
push
je
lock
jp
nop
mov
cmp
shl
or
lea
pop
jb
jmp
sub
sub
jne
mov
adc
sbb
lock
dec
and
loopne
shl
dec
mov
bound
sbb
or
(bad)
push
xor
or
inc
fcomp
dec
mov
je
aad
out
shr
add
inc
pop
loop
or
push
or
stos
loopne
mov
rep
fcom
inc
pushf
dec
mov
sbb
jecxz
retf
loope
pop
xchg
mov
test
cmc
or
pop
pop
sbb
call
push
xchg
push
aas
sub
mov
fwait
out
call
or
jecxz
sub
out
dec
and
pop
out
icebp
loopne
mov
pop
and
mov
or
mov
mov
jg
test
pop
cmp
jmp
mov
adc
push
sbb
jns
mov
cmc
inc
sub
pop
and
cmp
xor
mov
add
jle
cmc
xchg
or
and
and
in
js
pop
mov
cli
aam
push
in
(bad)
callw
sub
sub
jnp
imul
jae
loop
repnz
call
fimul
sbb
cli
adc
dec
jne
div
push
aas
test
sar
dec
mov
out
mov
jge
inc
js
jg
push
and
dec
mov
or
fist
mov
sub
sbb
push
sbb
in
dec
jo
inc
out
aad
mov
ja
(bad)
jmp
enter
fild
cmp
cmp
fisttp
push
or
call
sbb
int
sbb
xchg
stos
inc
out
and
cmp
loope
inc
push
mov
cmp
jae
fistp
fidivr
popa
in
(bad)
cli
mov
and
pop
cld
test
push
sbb
test
jmp
adc
xor
fcmovnbe
dec
mov
dec
retf
stos
pop
and
add
jne
jle
push
shl
fld
inc
adc
icebp
or
aas
mov
mov
xor
pop
xchg
imul
clc
jmp
daa
add
sub
xor
(bad)
sub
cmps
ja
retfw
(bad)
mov
pushf
xlat
sbb
fdiv
mov
jp
push
fwait
int
sbb
sbb
xor
xchg
adc
outs
mov
retf
jg
movs
sbb
out
in
je
jae
or
mov
mov
mul
pop
mov
pop
cs
or
dec
ds
xchg
movs
(bad)
mov
add
push
sub
push
and
mov
xchg
or
mov
cmp
mov
add
pushf
sub
mov
imul
sub
add
jnp
mov
push
or
aas
scas
add
push
inc
aad
push
pop
call
pop
cld
add
pop
xchg
inc
or
out
xchg
mov
icebp
mov
fcmovnb
fist
adc
cmp
jg
adc
pop
cmc
call
dec
ret
push
sbb
ins
jl
outs
xchg
xor
mov
mov
cdq
arpl
lods
push
cmp
adc
sub
test
fld
mov
std
add
pop
or
shr
mov
dec
into
cmps
icebp
fistp
lock
jno
loope
mov
repnz
sbb
popf
shl
sahf
mov
iret
xlat
cmp
dec
jmp
or
fbstp
daa
icebp
or
test
jb
scas
xor
in
stos
jns
xchg
xchg
dec
pushw
hlt
jecxz
and
in
mov
mov
jmp
push
dec
aaa
loopne
loop
ficom
out
movs
cli
xchg
xor
jns
in
popa
and
adc
aaa
add
xor
in
pop
jb
sbb
(bad)
(bad)
fistp
mov
movs
add
lea
dec
lahf
dec
add
fsub
xchg
dec
in
xchg
aam
inc
xchg
call
or
popf
jp
and
pop
add
mov
and
pushf
(bad)
daa
mov
xchg
sbb
dec
lea
pushf
enter
out
scas
and
cld
repnz
int
pop
sbb
push
or
xchg
cdq
ret
jl
(bad)
dec
test
mov
add
inc
movs
aad
daa
cmps
test
cmps
sbb
sahf
nop
adc
out
adc
rcr
stc
arpl
aaa
mov
mov
and
test
lahf
adc
mov
retf
cli
fdivr
ds
inc
mov
frstor
call
or
jbe
mov
out
mov
std
jbe
sub
test
add
aad
mov
jl
lods
adc
push
into
mov
in
xchg
lock
inc
les
in
add
movs
aam
push
ss
leave
bswap
push
add
and
push
aam
out
mov
sub
xchg
sti
sbb
not
mov
push
xchg
add
sub
sub
mul
jg
mov
xor
aam
dec
pop
xchg
ret
mov
and
sub
pushf
repnz
out
cmp
cmp
arpl
adc
cld
jmp
imul
jp
cmp
mov
mov
xchg
cwde
out
cmps
mov
add
js
adc
adc
dec
mov
jnp
in
pop
ficomp
or
lock
inc
jno
jecxz
stos
push
and
ins
inc
nop
aad
lahf
push
push
mov
cdq
xor
xor
fs
jbe
jle
sub
xchg
and
add
jns
jae
push
retf
add
or
dec
ja
sub
adc
mov
adc
leave
sub
and
dec
(bad)
ins
pop
dec
aam
cdq
lods
push
push
lods
pop
(bad)
pop
(bad)
repz
xor
sbb
jg
stos
adc
mov
lock
cwde
je
mov
pop
jmp
int
fmul
scas
push
xor
call
push
stc
fwait
(bad)
scas
enter
arpl
push
int
jecxz
adc
mov
dec
movs
add
pop
and
out
or
sbb
mov
mov
mov
xchg
xor
ins
retf
pop
adc
push
and
sbb
jb
das
and
sbb
sbb
mov
pushf
idiv
adc
fcomp
dec
(bad)
fmul
xchg
pop
sbb
lods
jge
sbb
mov
sbb
dec
push
sbb
(bad)
pop
hlt
loopne
inc
push
fisttp
repz
scas
and
mov
ret
mov
fld
cmps
movs
sub
cdq
adc
sub
call
fcomp
push
xor
inc
push
loope
fcmovbe
mov
cwde
push
mov
sub
adc
sbb
shl
mov
into
lea
lea
je
mov
jno
imul
jae
aad
call
inc
and
dec
sbb
cmp
cli
scas
cmp
or
inc
mov
call
fst
adc
loopne
push
mov
cwde
mov
fwait
add
mov
loop
inc
fldenv
ja
in
mov
or
test
outs
out
dec
add
dec
shr
mov
and
add
push
(bad)
mov
xchg
cmp
mov
pop
xor
(bad)
pop
sbb
jae
dec
mov
xchg
jmp
popf
mov
and
fisub
fwait
adc
mov
mov
fmul
jg
int3
scas
adc
call
cmc
(bad)
jns
repz
cmc
scas
jp
fdivr
mov
pop
stc
dec
rol
pop
adc
ret
inc
pop
popa
inc
mov
jbe
shr
xchg
sahf
sub
pop
adc
xchg
aas
cmc
xor
aas
push
dec
pop
push
lock
(bad)
clc
inc
btc
mov
int3
stc
mov
inc
adc
not
mov
lds
sbb
and
jmp
jge
je
push
mov
jns
pop
sub
add
xchg
loopne
mov
addr16
fstp
ins
pusha
pusha
push
stos
nop
mov
sar
(bad)
dec
bound
js
or
jne
xor
int
call
addr16
add
mov
mov
xchg
ret
mov
jmp
or
lods
xchg
std
repnz
ins
inc
xchg
xchg
lea
or
ins
mov
neg
mov
dec
sbb
fiadd
loope
jno
shr
cmps
dec
aam
jne
and
or
movs
data16
xchg
and
fadd
sahf
pop
pop
lock
and
data16
scas
leave
std
outs
xchg
inc
sar
dec
out
loope
das
jns
xor
out
jge
les
mov
adc
addr16
mov
pop
push
inc
xor
sub
xchg
inc
mov
loopne
cli
in
sub
std
fwait
sub
sar
pop
push
ret
dec
in
int3
icebp
xchg
push
sub
(bad)
out
out
(bad)
fstp
mov
cmp
fdivr
lds
je
mov
push
cmp
mov
ret
sbb
outs
jne
xchg
mov
test
fst
cmp
pushf
add
or
les
pop
push
shr
fwait
push
and
xchg
cmc
mov
add
test
mov
xlat
les
push
adc
mov
mov
adc
mov
in
jne
inc
sbb
aas
add
fsub
fimul
cmp
inc
mov
inc
fmul
mov
pop
call
fild
repnz
mov
pusha
stc
les
inc
(bad)
es
or
sub
mov
clc
mov
enter
inc
fcmovnb
loopne
data16
jecxz
fs
dec
js
fs
cli
retf
cmp
in
retf
imul
test
inc
jmp
js
ss
sbb
daa
fwait
and
outs
xor
xchg
popa
xlat
call
xor
or
mov
cmc
imul
dec
jg
jg
sub
xor
fs
loop
dec
mov
fsubr
mov
(bad)
imul
dec
sub
push
push
push
test
aaa
iret
loop
or
dec
repnz
sub
in
ffreep
inc
sbb
and
loope
jb
pop
cmp
dec
and
cli
es
mov
loope
lahf
xor
and
xor
jp
mov
(bad)
xor
cmp
jge
loop
push
sar
retf
inc
mov
add
stos
gs
stos
dec
js
in
jl
dec
push
adc
mov
and
ins
mov
mov
push
mov
dec
push
sub
or
push
and
mov
mov
clc
lods
inc
push
lock
std
pop
dec
mov
mul
mov
add
jnp
dec
rcr
pushf
push
cmps
xor
fadd
push
xor
lods
shl
scas
repnz
mov
adc
gs
dec
ror
cwde
out
arpl
std
jns
add
mov
retf
fnstenv
push
xor
sbb
clc
jo
enter
popa
test
inc
mov
sub
push
jge
adc
push
aam
(bad)
inc
(bad)
jp
imul
mov
jle
add
sahf
push
inc
mov
push
sub
les
aad
xor
out
inc
pushf
fdiv
mov
ror
inc
push
xor
dec
push
jge
les
mov
mov
in
daa
or
clc
cmps
call
and
jno
pop
in
outs
fs
cmp
pusha
movs
int3
mov
mov
rcl
sub
mov
push
or
repz
(bad)
push
mov
mov
jbe
cmps
ret
cs
xchg
(bad)
pop
lds
gs
lods
imul
jp
ins
inc
out
aad
mov
xchg
sar
les
pop
(bad)
repz
sbb
bound
push
stos
std
pop
inc
jne
int3
mov
xlat
add
out
mov
sbb
cmp
hlt
dec
rol
in
rcl
jle
xor
mov
push
fidivr
xchg
arpl
test
ja
js
push
and
add
xor
dec
xchg
(bad)
ficomp
mov
popf
xchg
cli
rcr
imul
xchg
inc
aas
push
rol
int
repz
fstp
lahf
xchg
das
jmp
mov
in
mov
shl
div
lock
test
push
test
pop
int3
dec
gs
mov
mov
pop
mov
inc
lds
sub
inc
mov
cmp
cmps
mov
mov
sahf
add
mov
mov
push
(bad)
pop
add
sub
cs
cli
jmp
pop
mov
jb
(bad)
sbb
clc
pop
rcl
cmp
(bad)
mov
daa
scas
mov
jno
paddusb
push
push
cmps
jne
add
in
inc
xchg
int
daa
sub
(bad)
int3
adc
xor
inc
out
in
aas
cmps
lods
xrelease
or
dec
les
jae
jno
or
loop
mov
mov
mov
pop
ins
jo
or
jbe
ins
nop
out
mov
mov
adc
aas
sub
mov
out
mov
(bad)
out
add
add
enter
lea
pusha
frstor
pushf
xlat
sbb
jmp
sar
fst
js
jns
ins
imul
xchg
ins
jl
mov
fld
xchg
cld
cwde
gs
iret
adc
inc
cli
push
(bad)
adc
retf
pop
test
mov
or
sub
mov
push
and
les
aad
cmp
xlat
pop
adc
or
aam
into
sub
cmp
addr16
test
leave
mov
inc
test
daa
arpl
xchg
js
shl
mov
mov
jle
sub
test
add
mov
mov
gs
push
xlat
mov
jmp
movs
sbb
nop
inc
aaa
leave
sbb
stos
enter
pop
ret
pop
lods
inc
and
adc
test
cmp
ror
push
xchg
push
mov
out
and
pop
inc
xchg
jb
nop
retf
leave
lahf
leave
xor
je
je
cmp
push
lods
push
popf
test
or
mov
or
cmp
cmp
xor
pop
jns
enter
rcl
sbb
enter
mov
(bad)
stos
mov
daa
int3
mov
rcr
cli
je
aam
add
xor
or
xchg
jp
mov
push
nop
fwait
add
dec
xchg
mov
jae
jle
add
icebp
jge
xchg
dec
pop
and
ins
lahf
push
jns
pop
rcr
or
adc
pop
push
mov
(bad)
xor
push
mov
adc
repnz
ret
xchg
pop
inc
add
pushf
pop
arpl
sbb
pop
jp
pop
mov
shr
jg
ins
mov
jmp
xor
mov
ret
or
sti
iret
xor
or
jb
adc
loope
sti
cmp
sub
das
xchg
retf
leave
and
cmp
in
fdiv
mov
sti
jg
mov
iret
sbb
or
mov
outs
push
dec
cmp
mov
xlat
sub
cld
lods
sbb
mov
aam
cmp
in
sbb
cmc
das
jnp
and
(bad)
and
fld
dec
(bad)
mov
cmp
mov
sahf
ds
loopne
fsub
gs
pop
in
mov
and
out
pushw
out
clc
adc
xor
cmp
mov
pop
sar
cmp
mov
xchg
mov
push
loopne
xchg
jle
inc
arpl
outs
xchg
xchg
cmp
jo
mov
fisttp
mov
les
dec
test
mov
sbb
in
sbb
add
sti
ror
bound
xchg
jno
mov
out
xchg
xchg
sbb
dec
outs
pop
add
jge
addr16
xor
bound
(bad)
sti
jno
shr
xchg
cld
inc
retf
mov
sbb
push
(bad)
mov
aad
clc
jle
add
mov
fs
pop
push
leave
mov
inc
mov
lods
push
cmps
ins
or
aas
rcr
jnp
xlat
rol
mov
int
int3
xchg
inc
fsub
push
repz
xlat
pusha
addr16
dec
cwde
int3
xor
pop
imul
and
bound
jmp
ret
cmp
arpl
imul
ficomp
mov
jnp
out
mov
adc
daa
cmp
retf
sbb
or
scas
jle
and
test
jge
aaa
mov
inc
or
mov
cld
xor
in
push
cmp
aam
shl
and
fs
mov
out
ins
and
(bad)
sti
ins
jle
xchg
mov
and
mov
dec
add
fsubp
out
sbb
out
test
cli
and
adc
push
or
loope
push
adc
(bad)
test
xor
jg
adc
or
retf
ret
sbb
repz
adc
rcl
stos
jmp
or
and
push
sub
xchg
shl
xchg
imul
ins
add
cli
sub
aad
in
xor
mov
push
mov
in
shr
cmp
jecxz
stc
pop
xor
and
sub
inc
test
pusha
ins
mov
lods
jno
ds
test
jg
ret
loop
dec
in
pop
lock
push
stos
movs
xchg
dec
pop
push
das
cld
(bad)
shl
dec
jns
outs
fild
add
mov
inc
test
or
hlt
mov
scas
fidivr
(bad)
mov
xchg
test
push
sar
arpl
pop
test
clc
push
cmp
pusha
mov
push
in
retf
sbb
test
scas
lds
lods
cmp
push
add
nop
mov
adc
inc
jne
loop
mov
mov
int
(bad)
in
ds
inc
jbe
add
xchg
mov
mov
lahf
cmc
and
out
ds
cmps
xchg
pop
adc
and
xor
jb
push
and
shl
dec
mov
mov
ja
lock
das
sahf
fcmovu
adc
sbb
cmp
mov
jg
ror
and
push
cld
mov
movs
fs
jo
push
xchg
stos
add
test
jmp
call
call
jle
dec
imul
or
aad
out
cmp
sbb
push
push
les
ss
xor
jp
jae
pop
cwde
and
xchg
xor
mov
or
imul
es
sub
or
xor
into
adc
repnz
in
dec
mov
lahf
test
aad
xchg
mov
outs
sub
and
jnp
mov
sub
fsubr
jmp
les
loopne
in
addr16
push
cli
imul
inc
pop
add
scas
in
push
ss
jnp
and
mov
push
add
push
add
sub
mov
inc
xchg
clc
aaa
js
dec
xchg
inc
xchg
lds
xchg
xor
xchg
je
mov
and
lea
rcl
mov
add
shl
jo
inc
mov
movs
dec
inc
out
fld
imul
jmp
arpl
cs
add
jne
dec
sar
lock
jne
test
sub
repnz
and
cmp
retf
test
stos
mov
sbb
or
push
es
test
jno
xchg
sub
push
ror
pop
xlat
push
mov
inc
or
or
sbb
pop
mov
dec
lahf
pop
pinsrw
sbb
cmp
leave
icebp
xchg
fnsave
repz
xchg
cmp
pop
dec
pop
nop
cmps
xchg
cs
mov
int
xor
xchg
add
mov
cli
jnp
stos
dec
mov
test
iret
jmp
sbb
and
loopne
jbe
sbb
sbb
xchg
cmc
pop
sub
xor
cmps
sti
je
pop
ja
adc
(bad)
out
and
call
pop
sbb
inc
mov
adc
addr16
popa
(bad)
jmp
cmp
or
mov
gs
int3
adc
data16
jp
pop
cmp
jp
and
ret
adc
xor
inc
mov
jnp
popa
lea
jge
int3
dec
rcl
fsubr
mov
lds
call
mov
xor
xchg
lods
vcmpsd
in
lea
adc
mov
nop
adc
mov
push
and
jne
xchg
(bad)
test
sbb
retf
cmp
mov
(bad)
and
fs
jb
pop
xchg
inc
std
jb
push
add
lock
mov
fdivp
or
ja
loope
dec
(bad)
pop
sub
inc
or
mov
fidivr
cwde
in
call
mov
ins
inc
xor
sub
mov
mov
bound
xor
sub
cwde
sub
leave
mov
push
jae
jae
stc
add
dec
push
call
pushf
pop
lds
push
jbe
stos
std
mov
lock
popa
dec
mov
mov
adc
jnp
(bad)
mov
fstp
lea
jp
lods
jecxz
or
sub
nop
lods
ffree
lahf
mov
add
retf
scas
push
dec
loope
outs
scas
push
fcomp
adc
ffreep
or
jmp
cwde
sbb
(bad)
push
inc
aam
pop
in
cmp
push
fs
jns
sbb
int
bound
mov
cmps
ins
jmp
retf
jle
mov
sti
fidivr
jecxz
arpl
pop
addr16
je
xlat
cdq
fidivr
xchg
rol
js
push
jl
test
mov
xchg
sub
cmp
add
in
test
lds
cmp
add
add
push
fbld
push
and
jno
imul
cmova
mov
and
into
into
add
mov
cli
leave
cmc
out
sub
pop
(bad)
int3
adc
inc
adc
mov
jmp
dec
jge
in
leave
int3
add
mov
int3
in
push
cmp
adc
and
push
and
in
xor
xchg
inc
inc
dec
fadd
rcr
or
mov
in
mov
iret
push
sub
and
sbb
inc
dec
sub
mov
add
movs
out
fld
test
pusha
mov
and
adc
mov
jbe
mov
push
inc
test
imul
dec
xchg
js
adc
jg
jbe
sbb
div
out
pop
inc
cld
sub
mov
add
cmp
push
mov
retf
jnp
mov
jns
movs
adc
out
ret
ret
sti
mov
outs
push
sub
mov
mov
cwde
das
scas
sub
fsub
add
int
js
sti
fsubrp
cmp
shl
mov
fnstsw
ret
pusha
clc
(bad)
fcmovu
jecxz
mov
mov
mov
shl
and
push
out
out
pop
mov
les
fild
sbb
aaa
enter
pop
int
(bad)
(bad)
call
imul
int3
cmp
fdivr
shl
pop
stos
push
not
movs
add
sbb
cmp
jmp
mov
add
js
add
out
mov
mov
outs
mov
fcomp
sub
mov
mov
lds
test
mov
jns
xor
ret
pop
adc
dec
pop
xchg
jmp
mov
int
imul
jo
es
fwait
les
jns
push
and
rcr
rcr
push
fstp
movs
sbb
arpl
mov
movhps
cmp
or
retf
cmps
sbb
lods
in
and
mov
add
xchg
outs
ret
or
(bad)
stc
sbb
clc
les
xchg
push
fst
lahf
std
nop
popa
xor
xchg
in
sub
fcomp
hlt
xor
addr16
mov
push
push
push
jnp
mov
imul
clc
out
pop
ret
out
repnz
out
clc
(bad)
mov
and
pusha
or
scas
mov
add
sub
inc
jle
(bad)
cmp
adc
jno
shl
pop
std
jmp
dec
mov
jmp
push
push
sub
mov
shl
jae
xlat
scas
stc
push
int
mov
push
push
rol
pop
mov
(bad)
cmps
aad
or
call
lds
aam
xchg
jnp
imul
scas
(bad)
pop
scas
in
js
in
shl
mov
mov
mov
lods
jb
sub
inc
xchg
jg
sbb
sub
cmp
sbb
mov
mov
inc
mov
fs
into
cs
loop
jae
push
fidivr
addr16
mul
stos
addr16
sbb
hlt
or
jl
inc
stos
mov
retf
in
ds
lds
pop
push
adc
pop
out
(bad)
mov
jmp
jae
test
pop
ss
call
cli
mov
in
mov
(bad)
js
xlat
cmp
hlt
mov
lods
test
pop
shl
cdq
pop
cmp
or
jnp
inc
inc
xor
inc
or
push
fcomp
dec
scas
push
jge
add
xchg
mov
fcom
sub
imul
fdiv
cmps
fs
ins
cmp
jo
fld
out
pop
mov
or
push
cmp
das
sub
out
js
pop
cmps
ror
or
or
xchg
ds
loop
cmp
sub
pop
pop
lods
cmp
sub
retf
movs
dec
add
scas
out
or
fwait
mov
pinsrw
jecxz
fnstsw
imul
enter
dec
jne
popf
retf
out
jle
inc
or
call
lahf
xchg
xor
lea
scas
idiv
adc
gs
je
pusha
fs
and
cld
jns
mov
sub
add
add
push
dec
(bad)
stc
cs
mov
or
pop
mov
repnz
dec
sbb
stos
int
fnstenv
jb
lahf
popa
mov
std
adc
jmp
jnp
pop
scas
pop
(bad)
div
and
dec
bound
ins
cmp
cmp
call
fist
or
retf
in
or
clc
cmc
(bad)
punpcklwd
jbe
lahf
sar
call
inc
mov
mov
mov
repz
jns
enter
sbb
mov
pop
add
xchg
cmc
retf
(bad)
nop
rcr
jae
adc
jle
push
sub
mov
cmp
ja
outs
stos
das
dec
pop
in
shl
add
dec
cmc
and
imul
add
mov
pop
sub
mov
movs
jg
jl
(bad)
std
and
cmp
jo
add
adc
mov
push
mov
inc
jl
jnp
sar
arpl
push
test
shld
test
cmp
dec
inc
push
mov
fsubr
repz
jnp
sub
xor
out
loope
mov
(bad)
addr16
std
(bad)
aam
cmp
(bad)
lea
rcl
fisubr
fcomp
pushf
push
pop
lods
mov
pop
fiadd
(bad)
xchg
cmc
(bad)
daa
outs
jno
xchg
shr
sub
mov
in
mov
mov
push
jmp
loop
add
dec
out
cmps
ja
loop
pop
and
nop
mov
cmp
fdiv
sbb
lods
loop
pushf
loope
imul
mov
(bad)
mov
call
mov
and
push
push
retf
icebp
lea
dec
xchg
adc
fiadd
xor
in
cmp
pop
int3
fdivr
stc
mov
push
add
and
inc
das
dec
fcomp
dec
fnstsw
push
test
mov
hlt
scas
push
jmp
rcl
xor
(bad)
xor
sbb
xor
jg
loope
fcmovnbe
jae
jmp
mul
jecxz
push
sub
ret
pop
(bad)
mov
fld
adc
xchg
add
lock
push
pusha
mov
mov
int3
bound
push
and
jle
hlt
int
mov
add
fisttp
xchg
(bad)
sub
test
daa
mov
out
push
mov
arpl
repz
dec
js
cs
mov
lds
inc
and
lods
or
loopne
je
adc
add
ins
rcr
ret
(bad)
pop
add
adc
das
popa
inc
pslld
lock
ins
mov
jmp
aad
out
cwde
daa
sbb
inc
xchg
int
pop
loopne
out
push
cmp
push
and
aas
sub
pop
ds
pop
cmp
push
and
and
dec
pop
mov
aas
push
out
add
sbb
and
int3
adc
adc
add
in
enter
(bad)
fwait
in
dec
dec
push
pop
inc
xchg
xchg
add
lods
je
lock
mov
mov
sbb
mov
popf
xor
pushf
neg
pusha
data16
sti
not
and
add
sar
xor
mov
mov
dec
cdq
push
fmul
out
add
and
rcl
ret
wbinvd
add
cmp
and
sbb
mov
retf
mov
jne
ret
std
mov
jl
test
(bad)
mov
and
shr
dec
jmp
jns
mov
or
ret
xor
ja
daa
inc
xchg
xchg
call
or
or
or
pop
or
dec
(bad)
lock
mov
mov
jge
mov
dec
mov
movs
push
dec
xchg
gs
call
ins
cdq
pop
data16
adc
adc
enter
icebp
fdivr
out
add
pop
push
sub
pop
push
mov
ins
xchg
sub
inc
mov
enter
call
shr
mov
inc
mov
mov
mov
inc
pop
cmp
outs
and
cmp
sti
sbb
push
rol
cli
daa
push
pop
inc
xchg
in
in
xor
(bad)
pushw
adc
movs
jno
arpl
push
popa
fdivr
ins
xchg
jg
call
in
in
cs
cmp
xor
imul
jnp
cld
sti
pop
sbb
inc
push
gs
push
movs
sbb
aaa
pop
xchg
(bad)
and
adc
shl
test
jnp
jmp
sbb
or
cmps
add
fst
enter
shrd
into
retf
leave
adc
int
xor
or
fwait
test
mov
add
inc
or
sbb
fsub
adc
retf
add
das
xlat
push
popf
push
xor
jae
and
or
loop
jne
push
sbb
push
cmc
mov
daa
pop
adc
icebp
sub
inc
jnp
movs
inc
cwde
pop
cmps
jo
pop
jmp
lods
retf
nop
je
mov
and
lods
jns
sub
sub
jns
adc
dec
loop
mov
adc
retf
mov
stos
xchg
cmps
stos
les
iret
and
push
test
add
je
fadd
iret
cmc
call
jl
das
cmp
cmp
add
(bad)
fcomp
push
add
stos
push
or
cdq
not
outs
adc
or
repnz
shr
mov
imul
mov
sbb
or
mov
jb
sti
mov
dec
or
or
jno
mov
rcr
lods
cs
(bad)
rcl
out
mov
in
cmp
dec
mov
jbe
adc
cmp
pop
pop
int3
and
lods
dec
repz
xchg
mov
int
ror
xchg
xlat
fist
add
dec
retf
and
dec
out
fwait
cmp
inc
mov
mov
inc
lea
ds
mov
dec
sub
stc
aad
test
sbb
pusha
mov
xchg
adc
jecxz
jge
out
test
jl
ds
fwait
ins
adc
and
mov
mov
push
ja
sbb
pop
xchg
addr16
scas
mov
mov
cmps
xor
xchg
cwde
rcl
int
or
push
arpl
adc
scas
or
push
jbe
rol
daa
and
jae
(bad)
pop
push
mov
cmp
leave
mov
push
mov
(bad)
adc
jbe
sbb
retf
mov
inc
add
jbe
adc
rcl
inc
cld
sbb
sub
sbb
imul
fbstp
push
jno
push
aad
enter
cwde
xor
ins
adc
retf
cmc
mov
mov
xor
dec
icebp
pop
out
ja
mov
inc
jl
fs
rcl
daa
sbb
nop
(bad)
call
push
xchg
sub
shl
out
out
call
aam
adc
inc
xchg
push
add
enter
nop
loope
jne
jg
or
push
lock
inc
jmp
fnstsw
xchg
retf
ins
or
jge
popf
cmps
jecxz
sub
ds
int3
sub
cwde
aaa
inc
ret
push
sbb
outs
mov
push
imul
pop
inc
mov
int
and
pop
push
xchg
jae
clc
mov
mov
mov
cld
out
jmp
fwait
pop
push
(bad)
(bad)
pop
cld
jecxz
iret
cwde
push
clc
ja
mov
cmp
pop
xchg
pop
push
mov
xchg
ret
fs
pop
sub
icebp
stos
inc
adc
sbb
pusha
test
jo
xor
bound
(bad)
xchg
cmp
push
in
imul
ret
mov
dec
repz
call
in
and
cdq
inc
retf
inc
imul
fdivr
into
in
sub
cmps
inc
mov
xchg
mov
pop
pushf
push
add
xor
jnp
enter
hlt
mov
test
push
or
pop
pop
int
pushf
adc
repnz
xor
(bad)
popa
pushf
add
inc
jne
fmul
inc
sub
or
cdq
sbb
and
jne
cmpps
js
sbb
das
mov
xchg
stos
and
cld
or
mov
jge
mov
mov
sub
pusha
sbb
pop
and
leave
mov
fcomp
fwait
jle
sbb
pop
lods
mov
dec
dec
ins
cmp
mov
adc
push
mov
outs
clc
xchg
xchg
cmps
shl
push
cld
js
out
popa
xor
sbb
xchg
int3
adc
popa
jbe
pop
out
jo
addr16
fist
mov
mov
cmps
sti
imul
dec
adc
retf
dec
mov
sbb
mov
test
bound
pop
fcmovnb
cld
xor
aas
rcl
enter
dec
push
lahf
imul
cmp
xchg
rcr
repz
arpl
mov
sbb
clc
idiv
aad
xor
and
push
std
xchg
lds
cs
out
neg
push
ss
jp
stos
sbb
fdivp
inc
pushf
push
js
in
push
cmps
in
or
mov
shl
xchg
(bad)
scas
cmp
fnstenv
movs
add
mov
sbb
movs
cwde
inc
adc
nop
std
test
dec
pop
cmp
fst
int
leave
mov
push
lods
pop
add
dec
test
dec
(bad)
or
push
inc
jg
int
daa
sbb
ds
shl
xor
jecxz
ss
cli
xchg
dec
mov
sub
mov
cmp
loope
inc
pop
sbb
retf
pop
mov
cmp
jnp
daa
(bad)
popa
aas
pop
xor
loope
xor
in
mov
outs
(bad)
test
sub
jmp
hlt
ss
adc
outs
rcl
mov
push
out
prefetcht1
imul
pop
jmp
not
enter
push
cmp
rcr
inc
xchg
inc
ret
jmp
int3
push
push
dec
inc
cmp
aas
fcomp
popf
mov
inc
sti
or
nop
xor
inc
add
xor
pop
cwde
mov
rcl
fcmovnu
call
jmp
xchg
aaa
stos
or
retf
popa
inc
push
hlt
(bad)
pop
add
loopne
enter
loopne
inc
retf
and
mov
mov
and
push
jnp
fild
lock
fwait
mov
jns
or
push
loope
test
lea
lea
cmp
mov
and
fisub
sub
inc
(bad)
int
movs
push
inc
mov
push
jmp
hlt
retf
cmp
and
push
rcl
pop
loope
retf
push
or
push
dec
xor
sub
inc
pop
ror
fild
cmp
mov
dec
and
add
adc
test
jns
sbb
cwde
shl
test
aaa
push
es
xchg
retf
fimul
js
pushf
std
sar
aas
and
call
xor
loope
xchg
add
sbb
lea
mov
push
shr
into
mov
and
and
inc
imul
push
cli
dec
ja
add
leave
fnstenv
and
pop
clc
mov
leave
jmp
dec
add
jmp
lds
mov
xchg
cmc
jne
jl
retf
and
shl
adc
je
push
mov
scas
ins
icebp
cmp
dec
push
int3
lock
mov
gs
das
cmp
repnz
dec
in
outs
outs
add
cli
lods
mov
pop
(bad)
or
pop
enter
out
xchg
push
mov
or
arpl
sub
cli
inc
pop
sub
mov
inc
jns
mov
ficom
mov
(bad)
lods
retf
xchg
jle
jmp
and
bound
adc
mov
mov
inc
and
gs
jns
into
addr16
mov
mov
inc
aam
(bad)
scas
sbb
mov
jb
movs
frstor
add
mov
js
addr16
mov
aas
shl
jne
push
dec
lods
lods
call
call
ret
jno
mov
call
call
aas
out
scas
loope
cdq
nop
push
fs
test
in
add
lock
(bad)
dec
lock
push
(bad)
pop
rcl
lods
mov
aad
cmps
or
pop
retf
mov
dec
jbe
(bad)
push
int3
inc
sbb
mov
push
sbb
adc
jns
fucomip
je
mov
jecxz
mov
xor
mov
fdiv
xlat
loopne
adc
scas
push
push
sub
xor
out
int
std
pushf
mov
lahf
sub
lahf
icebp
xor
(bad)
je
test
mov
inc
imul
and
or
mov
arpl
push
jp
inc
xor
in
jno
int3
loope
ja
in
cmps
(bad)
sub
inc
adc
or
pop
movs
stos
cmp
lock
ins
xor
in
push
mov
and
mov
and
xor
(bad)
in
cmp
(bad)
retf
push
sahf
repz
pop
push
push
push
nop
data16
jb
inc
xchg
cmps
fmul
lahf
cmp
inc
push
movs
pop
push
push
xchg
mov
xor
pop
push
pop
and
mov
cmps
ret
mov
aas
int
dec
inc
rcr
push
mov
xor
xchg
lock
rol
lds
sub
inc
adc
add
nop
adc
push
xor
nop
jo
pop
and
xchg
daa
jae
pushf
clc
retf
xchg
push
xchg
xor
cmc
sub
pushf
cdq
in
pop
cmps
jl
jo
or
dec
add
and
repz
or
add
push
rol
lahf
(bad)
fild
cmp
out
cmp
enter
inc
pushf
inc
xor
test
mov
and
xor
mov
pop
cmp
frstor
lock
pop
inc
adc
sbb
mov
or
mov
clc
retf
loop
sub
js
std
sbb
inc
loope
ja
inc
mov
mov
(bad)
(bad)
popa
jns
mov
(bad)
push
sub
pop
mov
aaa
popa
mov
add
sbb
jp
xchg
dec
scas
xchg
int3
push
in
fisubr
pop
pop
cmc
push
mov
sub
mov
addr16
lods
ja
mov
push
sti
int
mov
pop
mov
mov
rcr
push
adc
out
or
shl
cmp
pop
das
sub
and
stos
add
push
test
lods
sbb
pop
add
mov
cmp
or
xlat
jae
aad
mov
outs
rcl
push
push
cwde
jns
xor
shl
push
movs
int3
push
cmc
cmc
xchg
or
adc
test
loopne
cmp
cmp
xchg
icebp
jne
int3
sahf
cmp
push
cmp
les
gs
or
fwait
mov
cmp
push
sbb
pop
outs
imul
xor
mov
addr16
push
dec
out
pop
jae
ins
pop
mov
jbe
adc
pusha
inc
outs
in
scas
jl
ins
jbe
jg
lods
add
cmp
mov
mov
adc
sub
enter
sbb
mov
aaa
popa
fs
mov
bound
push
lock
mov
mov
fnstsw
push
rcr
fwait
xchg
add
les
sub
cmc
cdq
ds
ins
movs
bound
xchg
cmp
scas
add
jnp
call
push
cmp
mov
or
inc
sub
inc
test
sbb
fidiv
out
pop
pop
pop
cmp
popa
add
icebp
jns
fldenv
(bad)
jp
jnp
mul
cdq
sbb
or
push
cmp
addr16
add
pop
pop
cmps
clc
retf
and
retf
popf
jmp
lock
cmps
dec
js
xor
mov
fwait
mov
movs
push
mov
add
push
add
inc
push
mov
cs
adc
mov
fisub
movs
xchg
cmp
fdivr
jns
mov
pushf
add
or
or
sub
ins
push
mov
inc
test
loop
xchg
das
das
mov
and
scas
inc
push
xor
pop
(bad)
xor
mov
ja
mov
dec
bnd
inc
out
repnz
aaa
sbb
pop
sbb
inc
jg
shl
std
sbb
or
mov
mov
mov
arpl
adc
nop
test
xchg
dec
ror
rcl
in
add
mov
(bad)
stos
jecxz
cmp
pushf
outs
rol
out
dec
xlat
mov
ja
scas
jns
leave
add
(bad)
test
pop
les
ret
sbb
cs
add
adc
push
xor
jne
mov
mov
ja
xchg
daa
or
mov
pop
and
xchg
push
in
or
(bad)
jle
xlat
ja
mov
loopne
out
xchg
pop
movs
or
clc
mov
dec
es
sub
ficom
inc
pop
sar
outs
or
cwde
fsub
xchg
jge
sbb
sbb
mov
add
nop
sub
rcr
shl
cmc
jns
add
xchg
(bad)
or
inc
push
movs
rol
aam
and
fbld
stos
add
push
cmp
std
inc
pop
dec
push
sub
inc
or
mov
aaa
(bad)
fnsave
xchg
jle
sbb
dec
sub
add
xor
pop
sbb
imul
add
inc
add
inc
mov
mov
sbb
sti
arpl
mov
dec
and
fwait
lods
or
and
cmps
icebp
cmp
push
sbb
xchg
cli
cmp
pop
mov
test
retf
scas
shr
(bad)
pushf
pop
stos
inc
xchg
mov
in
mov
mov
xchg
dec
and
call
cmc
add
ss
bound
out
or
jl
push
push
enter
add
xchg
or
mov
add
loop
adc
loope
not
pop
sbb
xor
cmp
call
inc
xor
cmps
jne
mov
dec
and
sti
mov
rol
jne
in
add
movs
mov
ret
icebp
leave
xchg
push
mov
inc
fbstp
cwde
add
icebp
add
add
int3
or
stos
lea
pushf
xchg
or
xchg
push
test
test
pop
and
fsub
pop
mov
arpl
pop
sub
out
in
cmps
ficomp
fstp
mov
mul
lods
aas
or
ret
fbstp
das
call
jle
push
mov
pusha
mov
aad
cld
test
into
add
xchg
lods
jecxz
mov
bound
nop
dec
pop
xlat
jecxz
retf
arpl
sbb
out
movs
pushf
xchg
out
xor
enter
dec
aaa
shr
inc
movs
xchg
outs
add
loope
dec
and
sahf
punpcklwd
bound
in
jne
aaa
(bad)
adc
jne
mov
arpl
xchg
or
retf
jle
inc
pop
xchg
stos
pop
or
aam
push
and
pop
in
(bad)
addr16
xor
jmp
cmps
mov
lods
aad
inc
imul
test
pop
adc
xchg
xchg
dec
mov
jle
xchg
addr16
push
xor
xlat
dec
adc
(bad)
cmp
adc
aaa
pop
push
nop
in
mov
xlat
test
and
jne
mov
mov
mov
adc
es
jo
ins
or
xor
movs
push
cli
popa
js
push
mov
dec
jae
adc
dec
adc
or
mov
mov
and
push
sub
mov
jge
cmp
test
(bad)
retf
(bad)
pusha
dec
aam
or
pop
cmp
add
and
adc
(bad)
xchg
ins
popa
test
sub
in
cmp
stc
jno
sar
call
and
cmp
pop
jnp
imul
enter
scas
jp
pusha
cmp
jne
js
sub
sub
add
lock
jbe
inc
cs
xlat
lods
in
daa
push
push
inc
test
push
fcos
out
jne
or
popf
adc
pusha
mov
push
jmp
sbb
(bad)
or
xchg
push
push
fist
dec
popf
sub
sub
and
jbe
mov
or
pushf
inc
or
bnd
in
mov
(bad)
sbb
mov
pop
sub
mov
mov
mov
cmp
sbb
fwait
dec
push
mul
mov
stc
jg
fsubr
ret
loope
xchg
pop
fnsave
je
sbb
adc
jnp
jmp
xchg
xor
jmp
ja
adc
jge
jle
jo
xor
jge
cmp
adc
in
mov
jns
push
rol
addr16
aad
int
or
and
jnp
cmps
adc
jg
mov
sbb
hlt
or
inc
cmc
fstp
sub
pop
cmp
or
int
in
jmp
pop
jle
pop
pop
sub
mov
arpl
sbb
test
fsubr
sbb
mov
adc
jns
inc
jnp
mov
cmp
icebp
sbb
xor
ret
mov
xchg
call
adc
dec
sub
in
(bad)
xor
in
mov
push
xchg
or
mov
or
ror
cmc
ror
xchg
mov
mov
dec
xchg
dec
in
sub
ror
js
push
mov
outs
xlat
mov
sub
xchg
in
ins
jmp
fs
or
imul
shl
sti
sub
cmp
fs
cmp
push
cmp
cdq
icebp
popf
pop
js
hlt
mov
sbb
add
test
sbb
test
mov
ds
dec
dec
pop
test
push
sub
xchg
(bad)
lahf
xchg
hlt
loop
loope
mov
lea
mov
sahf
mov
or
hlt
stos
mov
std
jp
mov
cmp
xchg
out
mov
sub
das
dec
and
push
mov
jg
mov
aam
pusha
xchg
shl
mov
scas
(bad)
(bad)
mov
popf
call
retf
test
jecxz
sbb
dec
call
aas
cmp
dec
add
jmp
stos
pop
dec
jecxz
gs
dec
mov
xchg
repnz
jecxz
mov
cmp
pop
or
(bad)
cmps
pop
push
rcr
and
adc
cmp
or
push
ins
and
push
rol
mov
jne
mov
push
stos
jmp
test
scas
push
int
das
icebp
iret
sub
repz
mov
sbb
test
push
dec
(bad)
cmp
jmp
mov
iret
lock
mov
jp
loop
cli
adc
cmc
pop
es
mov
mov
and
test
fcomp
test
leave
cli
fisubr
(bad)
das
or
jge
arpl
inc
or
and
out
adc
jnp
fucomip
out
cmc
xchg
icebp
shr
jo
mov
bound
jp
sub
lods
adc
loope
add
push
xchg
add
call
push
imul
into
loope
fild
jle
cmp
inc
mov
inc
adc
(bad)
or
push
cmp
mov
ret
das
xor
add
in
out
in
data16
leave
mov
xor
push
mov
mov
repz
sbb
(bad)
and
mov
dec
sbb
gs
out
cmovp
or
or
cmp
xlat
call
jb
popa
push
xor
fistp
mov
out
sub
mov
and
mov
mov
pop
js
fdivr
stos
add
mov
push
mov
rcr
pop
pop
fiadd
scas
xor
or
rcr
cld
test
fadd
pop
ror
std
movs
pop
xor
lods
ds
push
lods
pop
fild
or
push
movs
jmp
mov
fstp
xchg
ror
dec
push
adc
inc
push
clc
add
sahf
adc
cmp
push
aam
into
inc
jmp
ret
cdq
mov
inc
pusha
neg
mov
xlat
cld
inc
mov
pop
pop
cmp
or
mov
sub
mov
jmp
and
add
add
lea
adc
shr
out
out
sahf
xor
mov
loope
sub
fdivrp
sti
ja
stos
int3
pop
xor
aam
fucomp
push
cmc
adc
xchg
(bad)
ds
inc
pop
imul
sub
sbb
cli
push
push
in
lahf
dec
in
enter
cs
pop
gs
xchg
adc
sbb
call
sub
outs
mov
xchg
retf
xchg
or
pop
add
cmc
and
sbb
cmp
imul
jge
js
ins
jo
pop
jecxz
mov
icebp
fbld
inc
ror
sub
dec
mov
jp
push
and
enter
add
jb
or
in
pop
mov
and
gs
je
inc
xor
icebp
push
lds
imul
call
(bad)
push
mov
adc
jecxz
inc
leave
and
retf
adc
ret
std
(bad)
cmp
int3
idiv
daa
xor
loope
rol
ficomp
add
xor
cmc
ja
icebp
and
test
xchg
mov
scas
(bad)
lea
sub
outs
aaa
cs
imul
retf
jmpw
fwait
dec
gs
mov
cs
aas
lea
mov
pop
and
dec
xchg
pop
or
lods
push
cli
add
mov
into
data16
push
aam
sar
(bad)
mov
in
lock
jo
xchg
sub
fmul
jl
je
test
popf
call
bound
adc
lea
dec
rol
into
sub
and
fcmovnbe
dec
jge
data16
inc
iret
or
sti
add
xchg
push
inc
add
ins
idiv
shl
mov
(bad)
push
or
fiadd
out
js
pushf
loop
jmp
sub
sbb
stos
imul
lods
dec
cmp
hlt
dec
pop
xor
dec
inc
(bad)
xchg
sub
lea
test
inc
mov
mov
mov
arpl
or
push
(bad)
lds
add
out
fdivr
test
sar
loopne
cmps
mov
dec
push
ins
jns
xchg
pop
pusha
in
jmp
int3
jne
sub
out
out
rcr
leave
(bad)
or
pop
add
mov
jmp
or
and
hlt
add
mov
into
in
pop
arpl
cmps
aas
xchg
cli
jg
arpl
xchg
lea
cmp
sub
xor
movs
ja
sbb
cmp
sub
mov
retf
es
xchg
movs
mov
(bad)
aam
call
pusha
in
(bad)
mov
inc
(bad)
dec
rcl
mov
in
cmp
push
dec
dec
rol
inc
sbb
push
or
sub
and
(bad)
cmps
sbb
pop
push
jge
addr16
mov
retf
mov
in
ret
je
ss
mov
clc
cmps
xchg
fcom
aam
jp
bound
movs
loop
imul
mov
jae
pop
sbb
push
out
xor
sbb
shl
or
mov
xchg
add
dec
mov
lock
repnz
arpl
enter
mov
dec
rcl
outs
inc
movs
stos
cmp
dec
push
daa
add
ror
arpl
stos
jb
jno
outs
in
mov
(bad)
lock
arpl
out
ja
pop
adc
xlat
and
push
and
xor
test
outs
sbb
push
jno
lods
test
push
inc
imul
jno
mov
call
mov
jns
scas
fiadd
into
sbb
in
mov
xchg
lods
pop
adc
dec
adc
int3
test
imul
rol
fidivr
and
inc
mov
inc
dec
pop
inc
inc
inc
push
ds
mov
add
pop
add
out
pop
iret
mov
in
ja
sub
push
(bad)
out
outs
mov
xor
and
cli
inc
inc
mov
push
adc
cmps
js
sbb
test
lock
pop
shl
push
and
ror
mov
test
(bad)
pop
outs
sbb
jg
repnz
mov
dec
sub
inc
jo
jge
cmp
push
scas
xor
(bad)
repnz
sbb
or
add
jp
add
cmp
out
in
pop
test
sahf
sbb
jl
jmp
mov
inc
int3
out
mov
xchg
retf
fwait
or
sbb
or
jo
(bad)
call
loop
add
sbb
pop
test
lea
and
movs
les
or
and
dec
cmp
stc
sub
sbb
movs
dec
mov
cmp
ret
mov
ja
sub
and
lods
into
int3
pop
mov
addr16
mov
jmp
jp
rcl
jmp
or
stos
jp
and
fstp
or
jns
or
add
aaa
ret
and
mov
ret
jnp
push
jne
pop
out
aad
fldcw
jbe
push
ret
fisub
inc
mov
or
idiv
add
mov
fbstp
adc
dec
push
enter
pop
mov
aas
inc
ins
aaa
fsub
sti
xor
jle
jecxz
xchg
mov
mov
pop
sbb
push
xchg
mov
aas
fisttp
or
rol
fsub
sbb
cmp
repz
in
aam
or
sti
or
movs
jmp
sub
icebp
inc
jl
ins
retf
inc
(bad)
xchg
mov
push
int3
lock
pop
dec
scas
or
xor
push
push
(bad)
jp
les
(bad)
ror
gs
je
mov
(bad)
lahf
movs
hlt
add
mov
pop
or
pop
pop
idiv
xchg
pop
xchg
(bad)
dec
fist
jecxz
and
shl
sub
dec
stos
ds
cmp
xchg
(bad)
out
pop
test
xchg
(bad)
mov
inc
jmp
and
retf
(bad)
fild
cmp
add
lods
dec
lods
sub
test
loop
dec
or
rol
aam
lds
retf
push
lods
rcr
mov
div
push
dec
sub
shl
cmps
mov
xor
shl
jg
or
test
mov
adc
or
add
cdq
and
fadd
add
daa
jno
test
mov
add
pop
sub
fnstenv
xor
sbb
cmp
lahf
movs
leave
and
sbb
mov
mov
(bad)
fistp
test
push
pop
out
push
enter
jmp
(bad)
test
jae
test
or
inc
inc
mov
aad
sbb
cmp
in
mov
adc
(bad)
or
out
es
les
mov
rcl
jg
add
push
cmp
mov
cmps
sahf
ins
int
rcl
sub
stos
push
push
mov
mov
jae
xor
jnp
(bad)
jecxz
enter
inc
sahf
xor
mov
leave
pop
sub
push
sub
aaa
mov
inc
add
retf
mov
sbb
inc
repnz
mov
jg
in
push
(bad)
movs
lods
mov
inc
fcom
push
enter
ins
std
test
jno
push
cmp
gs
ret
pop
xchg
adc
gs
or
xor
imul
ret
mov
das
xor
xchg
addr16
mov
mov
add
push
loop
push
call
xchg
xchg
fs
in
sub
test
mov
jns
popf
jo
outs
js
sbb
lods
sub
loopne
mov
aaa
aad
nop
jmp
aam
xor
scas
mov
arpl
mov
xor
scas
add
(bad)
stc
in
fbld
out
je
jp
sbb
add
scas
in
dec
movaps
jl
add
mov
data16
loopne
out
cli
or
jae
pop
shl
(bad)
sbb
sbb
test
xchg
add
sahf
ficomp
dec
push
pop
adc
dec
pop
adc
cmp
inc
sar
int
cmc
dec
or
fnsave
push
push
mov
imul
(bad)
xor
scas
lods
clc
mov
aad
call
xor
retf
dec
pop
add
out
xor
(bad)
int
dec
dec
push
movs
jns
mov
push
inc
mov
and
xchg
push
ret
adc
xor
xor
int
mov
xlat
xchg
(bad)
cwde
lods
movs
xchg
test
repz
adc
jmp
addr16
pop
dec
adc
add
fs
aad
repz
daa
xchg
fnsave
sbb
clc
fisttp
repz
call
out
pusha
ins
dec
out
xchg
js
in
inc
push
mov
jo
adc
shl
and
mov
gs
or
mov
inc
push
adc
cmps
mov
add
test
and
mov
addr16
jle
push
test
jmp
in
test
out
xor
call
mov
out
mov
lods
push
adc
out
pop
or
push
xchg
inc
jb
push
repz
retf
pop
ret
icebp
push
dec
ficom
jmp
sahf
mov
push
sub
cmp
sti
imul
cmps
in
pop
pop
mov
shl
dec
fcmovu
fiadd
jp
adc
movs
cwde
neg
jae
pop
adc
jle
nop
sbb
xchg
out
jno
adc
push
cmps
add
ss
(bad)
into
jge
ret
test
sbb
dec
loope
jecxz
add
pop
add
sahf
push
loop
and
push
xor
mov
dec
sub
sti
jg
cmps
(bad)
call
pusha
mov
mov
add
dec
shl
add
(bad)
cmp
into
pop
mov
in
test
test
inc
cli
imul
call
adc
jmp
inc
mov
out
adc
out
xchg
xor
movs
fadd
into
repz
jge
sbb
xor
out
lock
mov
jmp
or
movs
ror
pushf
test
dec
mov
gs
popa
sahf
mov
mov
adc
cs
pushf
enter
(bad)
push
inc
mov
into
test
sar
jo
sahf
or
add
inc
sar
jb
je
vmwrite
and
pop
shr
ss
pusha
adc
(bad)
movs
aam
mov
jp
inc
cli
jp
sub
bound
(bad)
popf
jmp
int
scas
stc
daa
cmc
fiadd
push
sub
shl
test
jbe
outs
mov
pop
popf
fsub
repz
(bad)
mov
push
pop
ins
jp
clc
or
lock
stc
sbb
cdq
stc
ja
and
(bad)
mov
sub
je
mov
not
dec
pop
out
mov
clc
push
ss
lahf
(bad)
iret
mov
iret
cdq
lds
push
(bad)
sub
push
ds
jo
xchg
inc
repnz
inc
fld
pop
mov
sub
into
cmps
xchg
inc
add
inc
or
push
cmc
jmp
bnd
fwait
fwait
lea
jp
test
xor
mov
fldl2e
adc
push
aaa
gs
aad
add
mov
into
mov
xor
jno
psubq
fwait
jecxz
or
arpl
inc
mov
call
pop
clc
aad
xchg
fdiv
pop
pop
push
dec
pop
xor
adc
jo
(bad)
fstp
clc
push
in
sbb
xlat
fdiv
sahf
(bad)
mov
je
and
mov
movs
push
sti
dec
push
jg
or
fisubr
das
dec
jecxz
jbe
test
mov
sti
push
aaa
mov
jp
mov
cmp
hlt
scas
stc
call
or
cmps
cdq
test
cmp
mov
cmp
mov
shr
pop
sbb
dec
shl
jae
into
push
dec
and
mov
dec
outs
fs
push
cmps
cmp
xchg
add
add
dec
or
jo
dec
mov
ret
popf
aaa
push
mov
inc
dec
inc
pop
and
sar
shl
cmc
js
pop
jo
hlt
fld
xchg
aas
ins
cmc
ds
pop
(bad)
test
and
inc
popa
ficom
popa
sbb
sub
ror
mov
fwait
xchg
mov
cmp
pop
(bad)
loop
mov
pushf
mov
pop
retf
cmp
pop
pusha
nop
icebp
jmp
xor
push
idiv
inc
sbb
leave
add
and
xchg
shr
sbb
and
or
popf
mov
mul
lea
(bad)
in
aam
call
movs
mov
sahf
mov
clc
sbb
movs
mov
je
pop
push
cwde
mov
fild
xchg
or
dec
sub
icebp
xor
mov
ret
jbe
sbb
jecxz
dec
movs
pop
scas
jns
mov
add
shl
cmp
sbb
sub
mov
cmc
push
out
das
pop
dec
cmp
jl
pop
jmp
mov
dec
mov
clc
xor
push
xor
jns
xor
jmp
mov
leave
sbb
push
ret
or
idiv
cmp
and
sbb
jmp
mov
xor
inc
dec
daa
in
sub
add
push
pop
sub
jmp
aad
fwait
push
add
push
jmp
imul
gs
push
lods
mov
add
add
sti
jnp
xchg
cmp
outs
pop
inc
retf
arpl
icebp
sbb
sbb
fs
cmp
shl
outs
in
frstor
pop
and
imul
push
adc
(bad)
mov
adc
sbb
lods
mov
(bad)
push
pop
push
mov
mov
imul
mov
inc
je
cmp
fistp
scas
cmps
or
ret
mov
mov
add
lea
mov
mov
pop
in
js
add
dec
repnz
mov
dec
add
fmul
fild
inc
xchg
cmp
xor
mov
cmp
leave
xor
sub
loope
mov
xor
push
or
inc
mov
es
or
sub
jns
add
dec
loopne
lock
jl
inc
sbb
sub
sbb
cmc
xchg
cli
sub
(bad)
iret
dec
movs
pop
and
xchg
sub
mov
mov
mov
imul
ret
loop
retf
sbb
push
daa
cmp
sar
jne
sbb
repnz
into
in
ins
jl
pop
popf
cli
add
imul
sbb
xor
arpl
xchg
xchg
cmp
pop
mov
jmp
dec
iret
sbb
jmp
xor
cmp
mov
faddp
mov
cmp
sub
sub
push
mov
cmps
mov
xor
ret
dec
xor
ins
hlt
jge
pop
jns
ror
jno
gs
jle
mov
mov
cwde
test
pop
mov
ftst
(bad)
and
lock
xor
mov
pop
icebp
fs
jne
cmp
fwait
test
xchg
jmp
xchg
imul
call
les
div
pop
ss
cmc
mov
int3
xchg
add
aad
push
mov
mov
popa
mov
out
mov
cs
add
(bad)
aad
push
cwde
cwde
push
mov
mov
hlt
and
mov
data16
jp
pop
test
xor
pop
nop
stos
outs
mov
jne
xchg
sbb
push
cmps
mov
fwait
inc
sub
or
pop
sub
dec
lods
adc
fnstenv
pushf
push
xchg
mov
mov
cli
add
test
or
xchg
outs
dec
sar
fcom
out
enter
enter
pop
fist
fidiv
pushf
adc
cwde
add
shr
cli
xor
(bad)
xchg
xchg
xchg
xor
cmc
stos
int3
out
bound
xor
add
rcr
in
sbb
mov
mov
cmp
xor
jg
call
ins
sub
jecxz
mov
push
sub
sbb
nop
cwde
es
cmc
sub
clc
dec
(bad)
stos
jmp
mov
dec
cmps
dec
into
fdivp
cmp
int
lock
lock
push
or
mov
mov
xchg
iret
test
adc
jno
fs
out
add
(bad)
retf
fidiv
dec
jno
push
or
retf
jg
adc
in
nop
out
arpl
mov
test
xchg
dec
mov
pop
stos
cld
fimul
add
fcomp
jns
mov
scas
add
sub
dec
ror
sbb
shl
mov
jmp
mov
popf
loop
sub
cli
jmp
adc
shl
arpl
fsubr
mov
cmps
loopne
adc
test
data16
dec
add
mov
sti
xor
(bad)
cld
cmp
xchg
pop
mov
push
adc
sbb
jae
mov
mov
cmp
add
or
dec
add
jg
aaa
pop
movs
or
xchg
jae
mov
sbb
and
jmp
frstor
xchg
sbb
jnp
(bad)
fnsave
test
mov
jns
aaa
arpl
push
mov
fidivr
adc
push
dec
push
cmp
aad
mov
mov
and
sbb
mov
adc
cld
stc
pop
cli
imul
sub
sbb
jg
add
jle
jle
xchg
or
xor
mov
push
ret
test
xor
scas
dec
aam
push
sti
sub
or
xchg
xor
inc
sar
sbb
lods
lods
push
popf
call
shl
add
xchg
push
xchg
sbb
repnz
mov
xchg
repz
jp
xchg
fldcw
daa
cmc
sbb
lods
mov
popa
cli
mov
mov
call
lods
dec
mov
(bad)
sbb
je
cmp
xchg
pop
daa
adc
push
add
fwait
push
test
lods
mov
mov
cmp
mov
mov
js
and
dec
mov
stc
out
and
inc
in
popa
shl
and
mov
out
fsubr
imul
dec
dec
ds
pop
movs
pop
jl
(bad)
xchg
dec
(bad)
jecxz
inc
xchg
rcl
int3
push
inc
ins
mov
shr
add
xchg
dec
aas
xchg
cmp
jb
dec
sub
sub
mov
out
adc
adc
jb
aad
iret
lahf
dec
ror
mov
(bad)
outs
cld
jp
mov
pop
push
sbb
jl
mov
lahf
popa
cmp
sar
outs
js
hlt
mov
pop
mov
pop
in
dec
or
cli
dec
in
sbb
nop
sub
and
out
jle
mov
fld
mov
leave
inc
dec
jl
dec
xchg
sbb
or
and
dec
rcl
cmps
fimul
je
std
pop
popa
xor
out
(bad)
xor
lds
in
clc
mov
jbe
and
test
shr
push
ins
les
cmp
aas
ja
call
bound
les
cmp
add
cs
ja
xor
in
push
mov
cmc
jle
add
mov
scas
fwait
shl
adc
movntq
mov
lds
jbe
add
test
popa
mov
aam
mov
xor
add
data16
dec
pusha
push
out
outs
aaa
in
push
dec
loop
pop
daa
mov
int
fidivr
mov
cmps
lds
push
addr16
out
or
mov
ins
sbb
add
jo
sbb
mov
or
push
xchg
xor
jne
fcomp
and
add
and
xchg
inc
sbb
repz
scas
cs
jno
out
jmp
xchg
xor
mov
scas
sub
mov
push
popf
ror
imul
xor
and
icebp
ins
push
popa
xchg
push
aas
sub
xchg
shl
stos
ror
enter
xchg
(bad)
lock
dec
pop
cdq
leave
sbb
dec
call
loop
out
movs
dec
or
das
sti
push
inc
push
xor
fstp
mov
jmp
retf
sub
rcl
jae
int3
sbb
ficomp
jno
cwde
add
ja
dec
xchg
mov
addr16
lds
ret
mov
and
push
mov
(bad)
pop
pop
(bad)
ins
js
arpl
outs
sub
push
pushf
dec
fs
xor
loopne
jge
out
push
test
repz
mov
stos
xor
outs
test
push
test
mov
sti
sub
cmp
push
addr16
icebp
and
xor
xor
jmp
mov
xchg
fucom
les
xchg
in
jg
js
mov
ret
and
shr
add
push
sub
or
xchg
enter
ins
dec
inc
inc
cmps
cld
push
cmps
adc
hlt
clc
or
dec
add
push
sub
add
and
add
jl
mov
movs
fild
cmps
(bad)
adc
push
dec
xchg
cmc
cmp
aam
inc
shl
and
or
and
mov
jg
jno
xchg
mov
fadd
outs
cli
loop
in
push
mov
cdq
repnz
and
data16
lahf
dec
ins
add
dec
das
mov
outs
movs
lds
pop
fistp
movs
inc
cmp
xor
inc
jecxz
out
lds
jns
sbb
mov
xchg
jge
push
pop
lea
dec
std
bound
sub
aas
(bad)
pop
jmp
fwait
mov
ficomp
shr
mov
and
jl
add
icebp
loope
jp
test
cmp
jle
aad
xchg
retf
push
idiv
pop
inc
test
clc
jp
mov
inc
shr
sub
lahf
and
push
fldcw
repnz
sub
in
shr
xchg
mov
ror
xchg
cvtps2pi
loopne
iret
jno
xchg
cli
jp
sbb
and
add
jb
push
sbb
icebp
nop
xchg
dec
rcr
or
pop
int3
mov
popf
pop
sub
adc
pop
sub
shl
mov
lea
xor
fdivrp
inc
jae
mov
mov
mov
xchg
jno
fldcw
xchg
mov
dec
lock
fstp
ins
ins
mov
cld
push
pop
test
xor
mov
mov
not
sbb
leave
jecxz
jnp
gs
into
add
enter
sub
int3
mov
movaps
test
adc
push
xor
jo
rol
bound
fdiv
in
daa
xor
stos
test
add
inc
ins
(bad)
test
mov
movs
or
(bad)
repnz
add
mov
jo
cdq
dec
mov
add
mov
hlt
sub
neg
rol
not
cmp
cwde
pushf
mov
scas
retf
nop
xor
ret
push
pop
jmp
jle
jne
mov
adc
sar
mov
adc
sti
sub
mov
fisttp
test
and
and
stos
stos
mov
ins
ss
inc
sbb
cmp
lods
into
or
xchg
pop
push
rcr
in
scas
jo
dec
dec
adc
jmp
lea
loop
jb
dec
jg
cmp
mov
push
iret
(bad)
jp
popf
scas
xchg
cmp
lods
jecxz
into
mov
xchg
mov
xor
sbb
imul
les
jmp
pop
mov
test
lods
shr
dec
jecxz
loope
test
movs
cmps
adc
mov
enter
jle
mov
add
ss
jecxz
mov
out
push
dec
(bad)
jbe
adc
jbe
ds
jo
cmp
mov
sub
retf
aaa
dec
icebp
shr
mov
rol
mov
call
les
xor
jnp
clc
in
fmul
outs
adc
cmp
mov
add
sbb
xor
xlat
push
test
ins
loop
test
out
ins
(bad)
fmul
nop
push
rcl
mov
in
(bad)
xchg
ins
lock
push
fistp
imul
push
adc
jmp
repnz
xor
mov
stc
mov
mov
xlat
fld
mov
addr16
xor
test
inc
outs
(bad)
sbb
or
outs
aam
(bad)
es
(bad)
cs
jae
ins
sub
into
dec
(bad)
call
inc
pop
inc
mov
imul
or
leave
jne
fadd
lds
lods
scas
lds
fdiv
xor
test
push
int3
xor
jmp
int3
test
mov
int3
push
int3
retf
jb
and
js
jecxz
xchg
mov
int3
jmp
push
retf
sbb
pop
cld
cmp
data16
xchg
or
test
cli
adc
in
test
gs
or
punpcklwd
jno
add
(bad)
mov
popa
(bad)
jp
jle
dec
sub
loopne
es
push
cmp
xchg
stos
gs
push
adc
lods
mov
jmp
and
mov
cmp
push
in
xchg
fcmovu
pop
clc
aad
mov
ins
push
int
adc
shl
sahf
pop
pop
scas
jp
mov
fsub
adc
retf
int
cwde
pop
sbb
push
in
mov
jnp
fisttp
add
add
or
test
in
mov
or
xor
add
or
mov
std
in
das
loopne
push
jno
sahf
inc
add
mov
not
lods
in
pop
cmps
sub
adc
pop
sbb
stos
mov
popa
fs
mov
pop
xor
stc
xchg
inc
(bad)
cli
push
movs
jmp
push
or
mov
(bad)
adc
pop
dec
shl
dec
movs
clc
js
in
inc
push
mov
mov
xchg
stc
daa
xlat
jbe
sbb
adc
or
adc
pop
dec
sbb
fisttp
dec
out
fsubr
adc
xor
inc
in
mov
adc
ret
add
and
lahf
or
pop
dec
push
adc
movs
fwait
loop
ins
jno
xor
not
jo
fimul
jo
or
mov
add
add
mov
imul
outs
(bad)
or
cmps
cmp
pushf
mov
cli
push
sub
iret
push
fist
mov
je
popf
xchg
adc
jmp
inc
lahf
into
xchg
push
mov
jl
jbe
inc
xlat
pop
imul
mov
rol
cmp
add
lods
lea
xchg
lahf
add
jg
dec
fnstenv
jle
xlat
leave
add
xor
xor
movs
in
xchg
sbb
mov
xchg
stos
jle
cs
retf
daa
sar
push
and
out
out
scas
(bad)
or
xor
or
adc
mov
addr16
inc
into
sub
bound
popa
cmps
mov
mov
dec
sub
adc
in
pop
clc
(bad)
std
sub
sub
shl
(bad)
cmc
bound
mov
mov
cld
std
retf
and
rol
fisttp
dec
push
push
adc
jae
fwait
pop
ja
cli
adc
arpl
jns
add
shr
mov
jecxz
aas
cld
push
popf
add
or
xchg
cli
cmp
inc
xchg
inc
lea
add
pushf
loope
pop
daa
std
cmp
cmp
mov
(bad)
loop
mov
or
ins
and
stos
inc
add
mov
fld
ja
nop
stos
in
ret
pop
adc
inc
cmp
inc
add
dec
fisttp
dec
movs
xor
aaa
and
add
out
mov
mov
xchg
call
or
dec
push
and
fnstenv
shl
jmp
add
jbe
pop
stos
clc
jg
mov
mov
inc
cmc
xchg
jmp
jge
pop
cmc
mov
outs
mov
pop
std
mov
mov
call
xor
imul
pop
mov
fidiv
data16
cli
push
movs
popf
lds
pop
aad
pop
sub
int
leave
cmp
gs
adc
aad
adc
xor
mov
xor
popa
adc
out
lahf
inc
outs
sbb
aam
jg
push
adc
pop
push
dec
call
mov
enter
jp
icebp
pop
call
dec
mov
xchg
out
or
pop
sub
inc
ins
cmps
cwde
lahf
push
retf
xlat
and
test
cmp
fsubr
enter
and
mov
mov
dec
xchg
pusha
into
xchg
mov
inc
mov
xor
daa
cmp
cmp
imul
cmp
movs
jle
into
ds
and
fisttp
stc
adc
ds
add
adc
ret
(bad)
jl
or
xchg
fdivr
add
xchg
mov
jae
and
popf
stos
xor
les
jmp
jecxz
add
lahf
bswap
jno
movs
xchg
popf
dec
bnd
test
pop
xchg
outs
sub
test
scas
xchg
popf
not
xor
nop
or
(bad)
adc
mov
jge
inc
pop
(bad)
cmps
xlat
fisttp
xor
stos
add
mov
mov
pop
sti
sbb
xchg
and
xchg
cmp
dec
add
jae
add
dec
out
push
int3
jle
(bad)
add
js
add
push
lock
lock
adc
push
(bad)
jg
adc
outs
jmp
add
mov
mov
or
inc
outs
int3
call
mov
dec
pop
cld
mov
fwait
adc
lock
stos
stos
and
push
repnz
idiv
xchg
clc
jbe
xor
or
cld
cmp
mov
cs
sub
mov
mov
or
call
loope
retf
gs
push
pop
cwde
in
mov
mov
sahf
nop
xor
cmp
xor
fadd
icebp
sub
pop
iret
pop
in
cmp
xchg
or
outs
inc
pop
mov
mov
outs
xchg
sub
fld
dec
mov
mov
or
xchg
jg
adc
jno
adc
shl
test
push
lods
lea
mov
push
jo
cmc
addr16
mov
test
dec
rol
ins
jmp
(bad)
sar
pop
das
inc
jecxz
into
enter
dec
jecxz
bound
mov
aad
lahf
fimul
push
dec
rcr
fcom
ss
adc
addr16
pushf
je
mov
sysret
mov
mov
inc
dec
inc
lahf
xchg
call
mov
ficomp
je
rcr
in
jg
cmp
gs
sub
mov
jbe
mov
clc
mov
mov
aad
sar
stos
ins
bound
adc
aam
(bad)
ror
cmp
call
out
jmp
jmp
nop
ret
lods
mov
cmp
sub
out
out
or
fld
or
mov
mov
stos
fldenv
rcr
pop
jle
jb
push
shl
mov
push
jo
mov
pop
outs
adc
int
popa
mov
dec
bound
mov
and
loop
fwait
scas
mov
cmp
jecxz
ds
xor
sbb
int
pop
jb
bound
or
pop
mov
dec
or
xchg
shl
loopne
add
out
cmp
sub
enter
sbb
retf
add
adc
inc
mov
mov
retf
and
cdq
push
jmp
xchg
fst
sar
add
dec
xchg
mov
daa
retf
inc
(bad)
cwde
lock
outs
add
xor
ins
dec
xchg
ins
outs
xlat
push
test
add
pop
pop
mov
retf
in
(bad)
xor
je
mov
bswap
inc
or
lods
pop
js
pop
and
mov
outs
fs
movs
sahf
dec
and
jle
push
icebp
shl
xor
test
mov
sub
push
push
jae
shl
dec
rcr
sbb
add
cmp
dec
inc
loopne
gs
mov
repz
mov
arpl
mov
pop
inc
sub
movs
jmp
das
in
shr
pop
adc
dec
adc
and
les
pop
add
inc
icebp
xor
jo
dec
hlt
es
sub
mov
aas
(bad)
psrlw
mov
jns
push
arpl
in
jns
aaa
push
arpl
aad
mov
(bad)
and
out
adc
popf
popa
out
sbb
jbe
inc
mov
lock
adc
inc
fwait
sub
stos
jb
sub
and
popa
xlat
pop
movs
and
push
xor
mov
fadd
dec
xchg
stc
add
es
(bad)
stos
test
ds
sub
mov
inc
sub
inc
movs
test
xchg
add
shr
aam
fwait
cmovo
mov
cmp
sub
adc
retf
imul
sbb
pop
and
xor
lea
adc
push
mov
jns
jecxz
sbb
lock
es
xor
je
inc
push
xor
mov
pushf
int
push
popf
cmp
and
pop
loopne
mov
xor
das
call
aaa
and
xchg
lock
out
mov
pusha
push
sub
retf
rol
out
arpl
cli
outs
scas
push
lock
xchg
jbe
retf
xor
in
in
mov
xor
ss
adc
jae
mov
cmp
mov
in
cs
loop
xor
rcl
ret
cmps
fdivr
cwde
push
dec
iret
sbb
ret
cmc
int3
push
cmp
(bad)
in
xor
lea
mov
xchg
jae
mov
cmc
add
hlt
in
push
and
sbb
imul
or
cmc
or
xchg
scas
fadd
lods
sbb
mov
stos
sub
pop
repnz
sahf
mov
xchg
mov
daa
add
adc
icebp
sub
in
jno
int
je
hlt
leave
aas
out
pop
cmp
push
sbb
and
pop
scas
mov
sbb
jmp
inc
jecxz
push
dec
xchg
xchg
cmps
mov
or
int3
push
loopne
sub
nop
mov
push
mov
mov
sbb
and
sub
jns
mov
push
sub
daa
mov
dec
pop
dec
adc
and
dec
jl
sbb
xchg
mov
jb
ror
cld
je
(bad)
into
xor
pusha
dec
mov
jg
push
fsub
shr
mov
inc
iret
rol
jge
enter
cdq
cmp
xchg
scas
push
or
ss
inc
sahf
pushf
sbb
sbb
xor
cs
pop
sbb
xor
fcomp
mov
xchg
sbb
cmc
scas
out
cdq
ror
xchg
sbb
jl
cmps
adc
cmps
loop
dec
mov
push
adc
or
add
fisttp
shl
movs
sub
ret
std
sub
test
test
daa
retf
call
adc
shr
(bad)
ds
mov
les
inc
out
jne
movs
lods
add
sub
jle
enter
push
callw
mov
stc
loope
dec
jne
add
bnd
add
pushf
les
loope
xchg
outs
test
sbb
mov
cmp
popf
inc
cs
lods
sub
pop
mov
mov
push
gs
mov
call
mov
jge
inc
or
or
push
jnp
adc
ins
test
xor
or
inc
jns
inc
out
addr16
test
pop
add
add
(bad)
mov
push
sub
jnp
int3
push
rol
lea
add
inc
or
loopne
xchg
shr
lods
inc
pop
dec
inc
cmp
jge
sbb
push
mov
pop
mov
out
imul
xor
shl
jno
idiv
jns
or
retf
dec
inc
popf
mov
cmps
pop
and
test
aad
repz
shr
xchg
push
loope
lods
pop
mov
mov
inc
jae
cli
ja
lahf
out
mov
dec
add
or
push
ret
mov
push
xchg
add
xchg
nop
data16
xor
stc
clc
push
movs
mov
pop
aad
mov
pusha
aad
xchg
ja
out
in
sti
or
sbb
test
fbld
push
sbb
call
mov
mov
push
int3
leave
mov
push
ds
inc
(bad)
ror
lods
sbb
adc
xchg
in
inc
pop
dec
ins
cmps
dec
dec
sti
in
mov
mov
mov
mov
push
xlat
mov
inc
mov
sar
int
ror
sbb
dec
shl
fld
jge
jmp
enter
jg
sub
pop
ror
push
mov
inc
inc
jo
or
addr16
mov
xchg
popf
mov
or
inc
pop
xor
pop
inc
xor
jl
sti
ja
adc
adc
or
div
sbb
mov
or
lock
inc
or
lock
mov
leave
pop
daa
std
push
pop
push
(bad)
or
push
sbb
sbb
ret
mov
stos
jge
aam
add
mov
or
jnp
mov
mov
pusha
hlt
xor
inc
mov
enter
sub
pusha
sar
push
mov
popf
xor
mov
leave
stos
fisttp
push
jne
pop
dec
or
stc
sar
cmp
stc
ja
stos
adc
es
addr16
jg
out
mov
data16
pop
mov
jne
and
shl
iret
push
sub
or
retf
sub
add
mov
xor
push
inc
inc
lock
add
mov
or
rcl
adc
fwait
adc
cmp
jnp
or
sar
call
mov
sar
mov
rol
rcl
cmp
jg
or
adc
and
outs
test
pop
push
(bad)
and
pusha
sub
jno
pop
pop
inc
cdq
push
into
jo
int3
sub
hlt
jnp
lods
inc
stc
mov
(bad)
jo
mov
out
push
ins
jp
dec
xor
jmp
loopne
mov
(bad)
clc
loop
dec
jg
popf
test
dec
dec
xor
xor
xchg
clc
test
inc
sti
shl
adc
(bad)
int3
dec
mov
je
or
inc
nop
mov
dec
pushf
mov
(bad)
xchg
add
fwait
stos
adc
call
jb
imul
push
ss
and
lds
fcom
rol
mov
cmp
sti
pop
pop
pop
mov
nop
xor
(bad)
leave
ins
and
push
test
mov
jmp
or
xchg
test
ins
into
jns
sbb
das
adc
call
loopne
sub
xchg
jae
cmps
std
push
push
dec
pop
jno
loop
pop
test
test
push
scas
vphaddwq
mov
mov
sbb
out
and
pushf
mov
xchg
dec
xor
std
pusha
fmul
or
inc
xor
out
push
cmp
sub
mov
(bad)
or
test
push
pop
and
shl
xchg
mov
pop
push
xor
lahf
pop
jmp
int3
pop
sbb
mov
jmp
xchg
out
xor
clc
jmp
sbb
push
add
sbb
dec
jo
dec
outs
call
scas
jne
fisub
sbb
pop
adc
sub
jo
pop
fcomp
xchg
fistp
dec
out
pop
ds
cmp
fdiv
jmp
mov
dec
xor
jp
popa
pop
adc
jl
dec
xor
mov
and
sar
and
scas
stos
or
cmp
or
and
dec
or
push
test
int3
jo
and
les
jmp
pop
lock
pop
mov
rol
xchg
imul
sub
and
repz
mov
xor
adc
daa
retf
jns
sub
repnz
sub
fcmovu
cmp
(bad)
(bad)
mov
xchg
dec
push
sub
push
inc
test
and
test
push
pop
sbb
pop
aaa
cmp
push
xchg
frstor
or
icebp
inc
pop
pop
mov
jne
cmc
pushf
mov
test
and
lods
pop
addr16
loope
mov
sbb
int
sbb
enter
xchg
jmp
dec
cmp
jmp
and
jb
(bad)
std
jecxz
and
cld
push
ret
retf
xchg
es
jnp
xchg
and
daa
fsubr
arpl
call
loopne
dec
into
pop
es
sub
test
inc
shl
push
add
adc
sbb
jecxz
fmul
scas
idiv
call
xchg
arpl
test
outs
ror
jne
mov
push
repnz
xchg
gs
xchg
sbb
and
sti
test
fidivr
jl
lea
rcl
les
sub
out
gs
lods
call
jp
mov
es
xor
mov
mov
add
mov
div
out
sub
or
mov
ficomp
xchg
push
jl
or
mov
mov
lods
adc
(bad)
or
ficomp
call
aam
pop
push
jb
cdq
movs
mov
aad
dec
ret
cli
fsub
imul
dec
push
inc
into
bound
inc
sar
in
mov
and
call
ficom
add
stos
sub
(bad)
pop
mov
jnp
jg
pop
inc
push
xor
cli
sbb
jmp
add
add
jle
xor
adc
not
xor
cwde
(bad)
std
mov
bound
mov
lahf
mov
in
mov
out
mov
outs
add
cmp
call
jmp
fs
les
stc
dec
or
movs
bound
rcr
lods
sub
in
out
imul
stc
cmp
daa
jbe
cmps
jae
in
xor
jmp
sbb
in
jns
sub
xlat
sub
mov
cmps
adc
or
xchg
sbb
jns
test
call
inc
sbb
rcl
into
xlat
xor
data16
cwde
jae
dec
je
xchg
xchg
inc
shl
mov
pusha
mov
xor
or
mov
inc
fwait
lods
sbb
std
loopne
sub
cdq
ja
or
and
stos
(bad)
inc
push
jns
add
pop
stos
lahf
lods
cld
lea
jmp
(bad)
outs
stos
pop
in
pop
cs
(bad)
inc
xor
data16
loop
retf
test
cmp
enter
push
cdq
enter
inc
pop
adc
or
cmps
(bad)
shl
and
or
ins
mov
mov
or
in
repnz
fidiv
aam
jbe
aas
pop
sub
mov
mov
je
(bad)
je
or
fwait
mov
(bad)
mov
add
xchg
je
int
push
push
in
sahf
rcr
lahf
mov
dec
icebp
sub
mov
addr16
dec
mov
mov
fdivrp
cmp
adc
sub
sti
stc
out
data16
pusha
dec
loop
arpl
mov
pop
in
repz
cdq
mov
mov
xchg
and
push
push
sbb
fstp
ds
adc
ficom
nop
fdivp
mov
mov
mov
xor
fdiv
lahf
dec
je
jae
lock
js
(bad)
in
ret
or
cmps
push
mov
pop
aam
ret
popfw
jbe
lods
xor
mov
inc
std
out
dec
mov
mov
push
cmp
cdq
jg
or
mov
sub
inc
xchg
xchg
bound
inc
cwde
push
mov
hlt
cli
mov
mov
xchg
push
push
adc
dec
rcr
(bad)
out
mov
or
sub
push
loope
inc
or
cmp
sub
mov
mov
imul
scas
test
push
push
and
jg
cmc
retf
in
pop
(bad)
cli
adc
push
fdivr
pop
mov
cmc
push
into
sbb
adc
mul
sbb
shl
push
or
mov
out
lahf
out
rcr
xchg
fistp
fs
jl
aas
dec
pop
mov
cs
push
aad
dec
movs
add
lds
ins
int3
pusha
sbb
rcl
jp
inc
rcl
sbb
aas
cwde
or
test
neg
mov
cmp
ficom
add
cmp
jmp
cmp
jmp
call
add
out
mov
or
xchg
jecxz
cwde
and
mov
sub
es
(bad)
and
pop
or
jnp
sub
mov
mov
pop
out
pop
test
jb
pop
test
ficom
add
lods
ss
movs
enter
ror
jmp
inc
sbb
les
mov
push
mov
adc
movs
adc
es
push
fcmovb
jl
push
fdivr
popa
ins
clc
div
xor
loopne
loopne
sub
rcr
gs
aaa
pop
adc
mov
mov
xor
jecxz
mov
pushf
dec
jl
loopne
push
jp
inc
adc
mov
xchg
jmp
popa
inc
and
inc
mov
(bad)
cmp
dec
vmovntps
cld
out
pushf
sub
mov
jbe
bound
enter
push
mov
scas
xchg
mov
je
outs
call
ror
pop
mov
and
dec
xchg
and
shl
cmp
neg
in
lea
iret
sub
jecxz
pop
retf
arpl
mov
dec
rcl
scas
sbb
and
or
popa
add
inc
lea
iret
fild
out
pushf
sbb
lock
jno
push
aam
test
push
retf
and
popa
je
stos
or
dec
mov
lock
and
pop
mov
push
fwait
pusha
mov
cmc
or
jecxz
out
jmp
or
ins
les
xchg
xchg
stc
fistp
iret
cmp
and
lods
fisubr
mov
xchg
out
test
popa
ret
pop
outs
in
sub
jp
xchg
mov
push
fnstcw
pop
inc
ins
cmp
add
imul
aaa
das
pop
repnz
repz
xchg
adc
push
fiadd
ja
ja
shl
sbb
cmp
mov
sub
rol
push
sub
push
add
fstp
lock
push
rol
xor
xchg
cmps
dec
pop
mov
pop
or
out
rcr
mov
cmps
outs
test
mov
and
ror
iret
jmp
mov
xlat
push
add
sub
imul
hlt
in
or
shl
fcomp
jns
movs
jp
sbb
or
cmp
jnp
test
call
fcmovb
clc
scas
jne
jno
xchg
push
xchg
or
movs
lahf
aam
shl
leave
xchg
je
cmp
mov
cmp
or
sbb
test
test
out
sti
add
int3
inc
inc
xchg
das
fsub
repnz
mov
out
imul
and
sub
jp
ja
es
daa
cmp
xchg
and
or
dec
sub
adc
call
inc
add
mov
and
jp
pop
dec
ds
test
jle
fwait
out
lahf
ret
inc
xor
fcom
cmp
push
repnz
in
pop
movs
adc
and
inc
nop
sub
mov
xchg
call
icebp
cmp
jmp
pop
add
dec
and
or
jno
sub
cmp
mov
retf
imul
sbb
and
pusha
mov
shr
ins
dec
out
dec
jp
mov
lds
jle
cwde
arpl
lods
jbe
add
mov
push
dec
out
push
xchg
adc
push
sub
sub
retf
jne
xor
dec
pop
movs
add
mov
scas
xor
lea
loopne
outs
out
inc
jae
xchg
dec
xor
push
xchg
xor
int3
sbb
dec
mov
das
cwde
sub
(bad)
cmp
shl
jp
and
pop
cdq
mov
gs
loopne
xchg
aad
mov
pop
je
jp
push
and
xchg
mov
cmps
push
xor
mov
int3
mov
xor
ror
retf
push
cmp
cld
retf
mov
or
push
mov
push
push
test
int
nop
clc
test
fsubr
or
outs
(bad)
xlat
sub
mov
cmp
sahf
sub
mov
aas
and
inc
out
loopne
stc
pop
imul
or
(bad)
and
dec
daa
cld
jns
xchg
sbb
xor
jns
xchg
rcr
mov
cli
cmps
cmps
cmp
inc
mov
cli
push
loop
enter
dec
(bad)
jns
sub
or
xchg
cmp
std
cmps
addr16
mov
ds
jmp
and
hlt
add
pop
lahf
mov
push
adc
mov
cwde
or
push
adc
add
or
jp
pop
scas
jb
scas
test
mov
sbb
shr
inc
out
scas
push
dec
and
push
mov
call
xchg
jle
inc
ret
test
fisubr
and
dec
stos
dec
les
pop
pop
arpl
inc
icebp
fchs
daa
mov
xchg
and
dec
adc
out
jecxz
test
sub
sub
mov
clc
lds
mov
add
repz
aam
ja
aaa
push
jae
ja
out
dec
lods
leave
or
cmp
xchg
je
(bad)
pop
fcom
mov
mov
sub
sub
bswap
mov
push
mov
lahf
sbb
outs
add
or
jbe
or
pushf
shl
adc
inc
fisttp
mov
jmp
ror
je
xor
loope
dec
retf
xlat
pop
sub
cmp
je
(bad)
or
stc
into
ds
mov
cmps
fnstsw
mov
inc
cmps
pop
mov
jb
xor
ret
jge
int3
push
pop
jmp
movs
and
in
sbb
in
(bad)
aaa
cmps
imul
cmovae
jmp
lock
cmp
pusha
aad
add
out
dec
pop
adc
arpl
stos
cmps
or
jle
or
enter
pop
aas
sub
sar
and
adc
lods
aaa
sbb
out
sub
sub
jb
jg
add
js
jmp
cmp
cmp
dec
cmp
fdivrp
into
imul
mov
dec
mov
aad
sbb
adc
inc
mov
sbb
cmp
cmps
pop
aam
jne
sub
lods
fild
mov
dec
xchg
jl
jecxz
in
(bad)
lahf
sub
or
and
pop
lods
mov
inc
push
(bad)
add
mov
(bad)
ret
mov
inc
inc
pusha
xchg
mov
push
push
call
lods
adc
dec
fidivr
movs
out
mov
pop
add
stos
repz
mov
aad
test
test
mov
je
jns
nop
xor
and
push
mov
mov
es
outs
stos
cli
movs
add
scas
push
jg
inc
fstp
and
mov
cdq
fwait
and
mov
hlt
xor
shr
les
adc
fsub
jp
jl
aam
xor
into
inc
mov
mov
cmps
loope
ret
adc
cmp
mov
cmc
std
push
xlat
or
xor
enter
ds
mov
push
mov
mov
jns
xor
adc
mov
mov
popf
arpl
jae
fwait
icebp
call
pop
xchg
fcomp
mov
push
adc
add
mov
jno
ins
xor
push
stos
and
sbb
fist
or
in
out
xor
dec
adc
mov
pushf
cmp
xlat
sub
in
push
xchg
add
push
shl
jmp
mov
loope
data16
mov
imul
mov
inc
imul
jg
inc
jle
call
xchg
jmp
and
cmc
inc
xchg
shr
push
sbb
hlt
add
dec
sub
lods
xchg
repz
out
pop
les
jp
inc
mov
addr16
cmp
mov
(bad)
ret
ins
retf
retf
add
mov
xchg
(bad)
(bad)
cmp
cmp
retf
mov
adc
adc
into
fs
test
into
mov
push
enter
retf
outs
cmp
push
xchg
add
aaa
stos
pop
loop
dec
mov
cmps
movs
push
pop
imul
clc
cmp
sbb
fmul
xor
pop
mov
hlt
jecxz
sub
(bad)
in
(bad)
or
iret
test
xchg
icebp
sar
jbe
outs
ins
cs
adc
sbb
xor
mov
iret
addr16
pop
and
mov
cmp
pop
mov
aam
or
push
test
mov
rcr
inc
aad
xchg
aad
add
fimul
and
jl
dec
add
mov
js
jmp
mov
and
cmc
loopne
shl
shr
movs
aas
and
ja
pop
sbb
dec
out
(bad)
and
das
add
pushf
sti
call
dec
xchg
(bad)
loopne
imul
nop
push
xor
cmps
and
pop
ret
aas
retf
outs
es
jl
pop
test
lods
outs
xor
mov
push
xchg
stc
out
dec
xchg
inc
psrld
stc
push
sub
enter
add
dec
lods
mov
dec
sbb
dec
popf
and
cld
xchg
push
dec
into
shl
jp
mov
jnp
cli
inc
sti
inc
mov
dec
gs
cmp
xchg
into
lock
push
mov
paddusw
mov
dec
and
mov
mov
and
das
loope
in
mov
aam
inc
movs
xchg
or
adc
pop
imul
xchg
push
clc
aaa
mov
mov
pop
or
jl
sub
mov
ins
push
imul
mov
pop
fcomp
mov
push
test
mov
icebp
sbb
dec
sbb
cmps
push
cmp
in
and
inc
call
mov
cmp
fidivr
cwde
loopne
and
xor
add
sbb
pop
das
xchg
xchg
retf
or
lea
push
dec
neg
jp
xor
pop
lods
dec
fisub
sub
in
and
aam
test
mov
sbb
add
test
and
xor
mov
jb
scas
out
das
dec
cwde
push
rcr
push
add
adc
cmp
fs
sub
push
mov
mov
add
clc
fnstenv
fs
mov
fst
pop
sub
inc
push
out
jecxz
or
xor
jecxz
mov
inc
fsubr
mov
and
add
je
imul
mov
xchg
mov
pop
in
(bad)
outs
scas
shl
jb
add
(bad)
jmp
cli
stc
(bad)
fistp
and
call
xor
mov
push
sub
xchg
es
and
xchg
jns
xor
dec
and
sub
ins
pop
sub
sub
mov
ror
stc
push
inc
int3
mov
aas
arpl
jecxz
stc
xchg
call
sub
int
imul
lods
jb
cmps
adc
jmp
je
mov
dec
push
js
and
push
push
mov
arpl
pop
ret
dec
mov
sbb
cmp
sahf
dec
cs
aam
mov
(bad)
je
push
hlt
div
xchg
cmps
jns
adc
push
int
mov
mov
push
loop
mul
mov
fs
(bad)
sti
ins
push
or
pop
jnp
and
mov
push
ins
addr16
outs
popa
mov
xor
or
cmp
jae
cli
rcl
push
daa
out
mov
add
sub
test
add
push
dec
cmps
push
into
sbb
dec
pop
je
mov
ret
or
or
mov
xchg
mov
jmp
xlat
cmps
cmp
loop
loope
cwde
nop
std
sub
(bad)
retf
rol
out
fisttp
and
lods
add
xchg
add
mov
inc
rcl
mov
add
dec
stos
ds
mov
jo
pop
sar
in
sahf
into
lock
pop
dec
ret
mov
dec
adc
fldl2t
add
int3
jnp
movs
lds
lods
test
sub
mov
push
mov
jae
icebp
inc
mov
aas
jge
jns
movs
int
jnp
mov
sar
sbb
inc
inc
test
fisubr
pop
mov
jnp
xchg
enter
pop
rcr
mov
jae
enter
sub
push
pop
out
mov
adc
jle
lds
lods
ins
scas
nop
dec
bnd
cmp
mov
test
jo
push
xor
pop
pop
inc
stos
movs
and
mov
mov
mov
into
xchg
dec
inc
pop
mov
pop
sub
adc
fldl2t
push
xchg
push
pop
pop
fs
adc
movs
add
bnd
mov
add
popa
fwait
sbb
and
mov
inc
out
cs
dec
scas
(bad)
push
outs
add
push
xchg
xor
cdq
sbb
addr16
inc
lds
iret
jo
cld
cmp
pop
fisub
sub
je
xor
fwait
cmp
or
in
movs
iret
fs
xchg
ins
pop
sar
cmp
ins
bound
clc
imul
sub
mov
mov
pop
sbb
add
sbb
adc
sub
xchg
mov
mov
sbb
pop
and
popa
push
mov
shl
int3
jmp
push
pop
push
(bad)
cmp
sti
jecxz
mov
out
and
cdq
out
and
jmp
(bad)
cmp
icebp
add
jg
add
add
push
in
mov
adc
lods
or
ficomp
lds
inc
jge
addr16
cdq
in
sbb
adc
xchg
or
adc
ds
leave
or
add
lods
xor
mov
mov
(bad)
cld
push
ins
xchg
sub
shl
mov
aad
jl
leave
mov
lods
cdq
xor
pushf
push
push
sar
pusha
repnz
pop
push
push
inc
sub
pop
outs
scas
sbb
sub
lahf
sub
aas
fs
div
inc
mov
mul
mov
imul
mov
xor
lahf
dec
imul
sub
jae
sbb
test
xchg
push
dec
les
pop
repz
test
out
sar
in
paddw
sbb
test
movs
sub
sbb
popa
pop
popf
ret
into
outs
or
pop
add
cld
push
pop
test
retf
and
sub
fs
ss
cs
lea
adc
xor
lock
pop
inc
popf
call
adc
lds
into
push
inc
mov
(bad)
ins
daa
mov
mov
dec
xor
cmps
or
cmc
leave
adc
or
push
cmp
ficomp
sbb
xor
icebp
and
mov
push
mov
and
call
jne
xchg
jl
and
xchg
mov
add
pop
shl
cdq
adc
inc
loopne
pop
loop
dec
in
outs
stos
mov
xchg
sbb
xchg
arpl
and
dec
or
test
inc
in
rcr
fmul
lock
push
inc
arpl
xor
pop
jge
popa
jmp
cmps
into
ins
out
jmp
dec
es
es
cmp
mov
lods
inc
pop
pushf
test
fimul
and
ss
jg
not
in
sahf
mov
mov
lahf
mov
popf
int
hlt
and
pop
or
inc
out
push
pushf
add
js
push
movhps
in
dec
shl
aaa
in
lahf
pusha
fmul
cdq
int
lods
xchg
or
shr
es
(bad)
cmc
xchg
retf
dec
inc
dec
cmp
mov
jne
std
pusha
ins
out
nop
cmp
repnz
mov
repnz
mov
loope
xchg
test
jecxz
dec
dec
add
fcom
xor
in
sbb
inc
dec
dec
mov
repnz
sbb
iret
mov
fwait
cmp
dec
sbb
aad
test
adc
inc
(bad)
in
std
pop
out
jl
adc
icebp
sbb
jmp
xor
xchg
aas
ja
jnp
inc
sar
sub
fcmovnb
(bad)
dec
jb
gs
arpl
push
adc
inc
les
lea
jge
mov
fcom
mov
fimul
retf
xchg
jl
mov
ds
cdq
add
das
xor
aaa
mov
ficom
ja
adc
push
jp
mov
push
icebp
ja
in
add
add
xor
pop
pop
in
and
cdq
dec
jb
and
ja
sub
adc
or
inc
daa
popa
iret
xor
mov
fmul
xchg
mov
cld
or
repnz
xchg
sbb
nop
pushf
push
cmps
or
gs
and
adc
mov
les
(bad)
fwait
ja
sub
(bad)
cwde
xor
hlt
(bad)
cmps
pop
rcl
outs
inc
mov
xchg
sbb
dec
mov
or
ds
jg
sbb
jbe
xchg
xchg
imul
jne
mov
test
lahf
(bad)
inc
push
mov
mov
fcomp
mov
popa
call
test
xor
push
xchg
cld
stos
ds
jmp
lea
mov
in
mov
xchg
popf
push
xor
mov
push
adc
add
cld
xchg
sbb
lahf
iret
std
enter
inc
ret
jns
mov
lahf
in
std
les
push
xchg
pop
test
pop
or
test
cmps
push
add
imul
sbb
xchg
(bad)
outs
fadd
aaa
or
xchg
xchg
pop
sbb
xor
aam
sbb
aad
jns
mov
std
scas
adc
cs
adc
adc
retf
pop
push
daa
adc
or
jmp
(bad)
hlt
daa
aaa
cmp
call
cmp
fdiv
adc
xor
jge
pushf
jmp
enter
adc
jno
and
cmp
mov
xor
fbld
rcr
rol
in
retf
div
mov
retf
(bad)
fisub
mov
loopne
ss
jo
sub
lods
loop
inc
mov
retf
cmps
mov
stc
fcmovbe
xor
jle
jmp
and
mov
cmps
out
into
repz
scas
add
popa
mov
xor
jns
daa
jecxz
rcl
cmc
in
and
sbb
jmp
inc
les
mov
gs
nop
fmul
int
das
sbb
mov
mov
inc
(bad)
jo
jmp
inc
add
xchg
shl
ja
fisub
mov
ss
loop
lods
cli
fisubr
ja
mov
mov
jnp
out
(bad)
mul
not
call
add
or
xor
hlt
xchg
xor
or
mov
in
jae
dec
mov
lds
retf
mov
(bad)
xlat
jl
or
sbb
pop
mov
lahf
ja
fcomp
enter
(bad)
cmp
add
mov
out
xor
and
push
fist
ror
and
add
push
(bad)
mov
push
aam
sub
addr16
mov
dec
adc
cmp
xchg
imul
cli
hlt
loop
jae
dec
in
aaa
or
retf
mov
cmp
and
cmp
and
adc
cmps
sbb
inc
push
adc
xor
sahf
mov
xor
fld
and
xor
out
push
mov
pop
xor
es
leave
into
loopne
mov
fisub
popa
mov
dec
cmp
pop
dec
add
xchg
fisttp
pop
xchg
cmp
xchg
push
mov
and
call
out
jne
pop
push
mov
(bad)
push
dec
add
push
cmps
dec
xor
clc
inc
add
jp
mov
xor
jecxz
aad
push
ret
test
inc
jge
and
(bad)
jmp
mov
gs
add
lods
push
and
cmp
cmp
in
cdq
sahf
jmp
mov
loopne
inc
jg
jp
out
in
ret
daa
push
ds
out
mov
add
mov
xchg
adc
aad
pop
inc
shl
daa
jo
sbb
div
cmp
add
jecxz
push
cmp
loop
rcl
jae
mov
sbb
adc
cmps
mov
in
retf
lock
idiv
in
loope
out
jno
sbb
cdq
mov
and
sbb
mov
pop
loopne
add
xor
test
into
adc
loop
mov
mov
pop
inc
inc
pop
dec
mov
adc
mov
je
sub
dec
mov
fsub
movs
loope
xor
inc
pop
data16
pop
inc
repnz
inc
mov
adc
or
pop
add
mov
into
in
mov
call
pop
shl
sub
(bad)
mov
jp
cmps
xor
mov
in
push
jg
ret
mov
jl
rcr
repz
loopne
dec
xchg
ret
daa
inc
mov
add
push
ror
rcr
lods
mov
lock
mov
adc
jp
push
ret
inc
adc
in
mov
pop
stos
dec
add
inc
jge
sub
xchg
sbb
inc
xchg
dec
xchg
cs
dec
js
and
sti
push
adc
jg
dec
adc
in
mov
faddp
sub
outs
xchg
cmp
addr16
inc
lods
pop
aas
inc
jg
arpl
inc
lods
push
and
sub
sbb
dec
in
cs
push
mov
lods
ret
cwde
cmovbe
or
shl
test
jbe
iret
mov
xchg
out
imul
jo
popa
test
fsub
das
test
mov
test
cli
retf
ds
jecxz
inc
retf
movs
lahf
hlt
or
push
adc
aaa
adc
aam
cmp
je
mov
es
cdq
cmp
out
or
add
aad
fadd
mov
out
pop
xlat
ins
repz
(bad)
pop
aad
js
adc
bound
out
inc
pop
cmc
and
mov
mov
mov
cmp
jg
pop
loope
mov
mov
cwde
stos
cmc
mov
inc
push
pop
(bad)
push
lock
ret
arpl
mov
ret
inc
sbb
jmp
xchg
inc
add
clc
stc
xor
clc
aad
and
out
cmp
in
dec
cmp
outs
pop
push
xchg
lea
mov
push
jle
stos
cmps
cmc
xlat
cmp
test
sti
sbb
push
in
sbb
fidivr
sub
sub
cli
mul
ins
repnz
mov
inc
pop
and
ror
rol
jnp
sbb
xor
mov
pop
test
push
lods
cs
lea
add
jmp
and
jp
dec
push
outs
add
shr
xlat
loope
les
sub
and
cmp
gs
mov
out
out
xor
jnp
add
push
jmp
sbb
mov
ret
mov
xor
sub
leave
jno
mov
and
daa
push
ja
cmp
push
pop
addr16
icebp
stc
jns
jo
inc
xchg
and
mov
(bad)
dec
or
cmp
imul
add
in
xchg
daa
xchg
call
pushf
fistp
ins
cld
mov
les
retf
jb
dec
std
add
mov
test
outs
xchg
inc
in
mov
ss
add
push
inc
fnsave
push
div
and
rcr
fwait
sub
sbb
push
add
xor
arpl
push
inc
lea
arpl
stos
popa
enter
mov
call
mov
xchg
xchg
dec
xchg
sub
cmp
sahf
fcom
jbe
jno
aam
aas
nop
fdivp
std
lods
mov
aas
sub
push
adc
sub
cdq
popa
add
or
push
icebp
xor
push
inc
leave
popa
xchg
out
inc
push
push
int3
in
cwde
mov
ret
push
addr16
xor
push
and
(bad)
repnz
mov
movs
ret
aam
mov
jle
shr
fsubr
stos
fsub
push
test
or
fnstenv
push
cmps
cmp
ss
popa
add
push
fmul
(bad)
(bad)
imul
xchg
sbb
or
add
jecxz
jmp
jnp
pop
gs
mov
push
mov
jb
mov
mov
cmp
and
pusha
mov
and
dec
out
dec
inc
mov
push
aam
addr16
and
sub
mov
and
nop
aas
rol
setno
jo
mov
frstor
call
sahf
jns
fdiv
(bad)
pop
fs
or
mov
ins
xor
lds
inc
cdq
mov
ds
std
ds
retf
push
add
sbb
and
xchg
fisub
xlat
sub
xchg
stos
dec
jmp
in
imul
aad
imul
(bad)
jne
add
aaa
mov
xor
outs
jg
mov
jnp
mov
out
pop
repz
repnz
push
dec
jecxz
enter
mov
mov
cmp
mov
xchg
push
push
adc
leave
sar
add
and
(bad)
fnstcw
sub
call
adc
out
(bad)
fld
cmp
mov
in
ror
mov
cmp
mov
in
loopne
add
shr
sub
div
fild
aam
xor
pop
fwait
mov
movs
lods
in
jecxz
movs
(bad)
gs
ficom
test
jb
sub
icebp
cdq
iret
mov
sbb
leave
mov
cmp
pushf
int3
add
sbb
stc
ss
xchg
fcomp
cwde
imul
mov
fistp
ja
enter
or
test
jb
jns
lods
cld
push
sti
sub
dec
stos
and
loope
dec
cmp
enter
mov
lods
mov
and
dec
aas
push
cmp
arpl
imul
popf
fcmovnu
mov
mov
scas
retf
inc
cmp
xlat
call
or
push
sbb
mov
in
scas
dec
mov
pusha
imul
jo
fld
and
lods
fisttp
sbb
out
fistp
lods
lods
fisttp
ficom
outs
dec
jo
xchg
cmps
out
shl
imul
(bad)
in
sub
xchg
jne
mov
sahf
xor
ror
inc
out
cdq
xchg
sub
xchg
sbb
adc
mov
push
add
ret
pusha
xchg
inc
jmp
scas
les
sub
test
sahf
das
lahf
jo
lock
push
push
js
lea
into
xchg
loop
movs
adc
pop
mov
(bad)
sbb
cmp
adc
mov
xchg
stos
das
push
mov
fwait
es
jle
mov
mov
push
adc
dec
cld
add
fdivp
mov
push
lods
int3
cs
or
adc
mov
and
popf
leave
pop
stos
sti
es
leave
lods
fdivr
jmp
mov
push
jmp
shr
push
ret
(bad)
xor
dec
pop
cmp
and
gs
movs
cmc
jbe
pop
mov
cmps
cwde
sbb
dec
push
inc
sar
dec
aas
daa
or
daa
xor
shl
mov
imul
das
ins
movs
jle
xor
add
cs
adc
xor
cmp
imul
pop
hlt
std
xor
pop
or
in
dec
not
into
call
xchg
clc
pop
aaa
adc
sbb
ficomp
shl
ins
xor
test
xchg
and
imul
imul
rcr
or
sar
push
std
pop
or
push
mov
mov
dec
mov
sbb
call
fadd
push
aaa
dec
popf
sub
add
cmp
(bad)
pop
sbb
mov
pop
or
or
adc
and
xchg
pop
pop
ds
jl
xchg
mov
inc
jle
cld
pop
in
xor
cmc
repnz
js
pop
out
add
popf
repz
jne
clc
outs
mov
cmc
jp
lods
mov
sbb
call
xchg
aas
lods
call
mov
mov
cs
rol
inc
push
pop
xchg
pusha
jmp
mov
pop
sbb
gs
jl
div
gs
xor
xlat
sub
inc
mov
inc
inc
push
stc
cmp
cmp
daa
sub
imul
xor
(bad)
cmp
push
pop
mov
xchg
pop
retf
les
in
cwde
jle
mov
or
es
enter
inc
jl
movs
and
cmp
fadd
mov
cmp
cld
lea
imul
lock
xchg
pop
lock
cmp
jb
sub
add
ins
mov
sub
xchg
retf
movs
mov
jbe
fsub
lods
pop
mov
jae
sar
mov
cmp
jne
mov
adc
mov
add
adc
add
ja
or
sbb
sahf
dec
adc
mov
in
aad
inc
ret
dec
cmp
xchg
mov
ret
xchg
aad
or
jg
cmp
ja
cdq
cmovbe
cmp
sar
sbb
popf
add
mov
pop
lea
mov
into
loope
pop
cmp
enter
and
sbb
stos
fs
and
es
shl
or
iret
cdq
iret
sbb
mov
mov
mov
push
fld
cmc
aad
jbe
mov
xor
mov
cmp
(bad)
pop
in
loopne
sub
cs
sub
lods
xchg
push
sbb
mov
pop
jae
sahf
das
add
fild
setp
mov
add
repnz
mov
ins
push
adc
call
mov
add
(bad)
jnp
dec
mov
xor
jle
loop
xor
dec
push
pusha
fmulp
xor
xchg
cdq
push
lods
ror
xchg
or
add
jmp
inc
lods
dec
mov
pop
jns
rol
mov
sub
aad
shl
enter
xchg
pop
jp
xchg
mov
loope
ficom
ss
cli
(bad)
shl
xor
ins
xchg
add
push
fcom
js
mov
fisttp
pop
sub
aam
xchg
sbb
adc
xor
fisubr
jo
xor
idiv
or
sub
sub
add
add
dec
xchg
cmp
imul
repz
cmps
mov
sub
rcl
imul
mov
lea
ja
pop
out
int3
movs
cld
add
dec
xchg
push
xchg
and
movs
inc
test
dec
jp
push
cld
cmp
fbld
int3
inc
lods
cmp
mov
pop
out
(bad)
fadd
sbb
movs
(bad)
ja
ins
sub
iret
or
jge
or
mov
sti
and
cdq
cli
pop
adc
jg
das
inc
ret
sub
int
inc
jg
mov
mov
lds
popf
inc
dec
mov
jmp
retf
aam
fs
cmp
in
push
and
add
loope
cli
fldcw
in
push
mov
jle
arpl
mov
gs
mov
ins
adc
fsubr
mov
jmp
cwde
rcl
fst
mov
xor
and
mov
cmp
jmp
fcom
sub
inc
mov
and
sub
retf
mov
xlat
push
loop
add
jmp
mov
retf
pop
out
ja
repnz
add
add
xchg
cld
mov
fdivr
loopne
inc
ja
lods
out
or
sub
data16
dec
mov
mov
out
xor
ss
xor
rcl
int
mov
push
lods
cli
dec
aaa
ja
xor
neg
bound
lahf
ins
push
jge
mov
sbb
retf
jmp
push
ins
out
push
les
sahf
fnstcw
ret
jno
cmc
jle
out
jb
xchg
popa
test
sahf
adc
mov
stos
cdq
aas
push
rol
push
mov
push
mov
and
mov
pop
hlt
sbb
test
or
cmp
out
retf
mov
or
bound
lea
ret
mov
jmp
out
sbb
scas
jmp
dec
repz
js
out
cmovl
das
rcr
sar
and
ins
jmp
rol
clc
fnstenv
push
mov
adc
mov
xor
sub
pop
pop
out
repnz
sub
es
int
loop
ins
cmp
shl
mov
add
jg
sbb
hlt
push
les
iret
mov
jl
mov
dec
mov
add
cs
mov
fisttp
hlt
repnz
pop
popa
inc
sbb
ror
sbb
mov
loop
sti
(bad)
outs
xor
jo
enter
stc
test
in
sahf
ss
add
jmp
dec
dec
jmp
aas
dec
mov
imul
clc
mov
retf
dec
add
std
imul
mov
pop
adc
das
inc
lds
repz
xchg
mov
jge
mov
nop
aam
enter
add
adc
xor
(bad)
popf
xor
mov
xchg
xchg
dec
lea
scas
and
or
lods
push
push
daa
or
sub
leave
(bad)
sahf
adc
je
nop
xchg
repnz
push
sbb
cmp
pop
sub
repnz
sub
and
inc
sbb
xchg
or
aad
call
jnp
sbb
xor
lods
jge
add
test
jne
fidiv
je
mov
pop
mov
(bad)
jg
fadd
jg
push
dec
popa
dec
push
xlat
dec
fs
(bad)
sbb
mov
xchg
shl
gs
rcl
outs
lods
jmp
shr
mov
mov
fdiv
xchg
test
jne
loope
mov
out
push
add
repnz
mov
or
js
sub
repz
sar
add
daa
xor
leave
popf
shl
les
mov
sub
pop
or
jmp
(bad)
xlat
jbe
inc
inc
pop
fsub
sbb
cmp
mov
dec
(bad)
add
pop
and
fwait
retf
xor
sub
test
add
inc
sbb
dec
repz
or
sbb
dec
rcl
imul
in
aas
in
dec
scas
xchg
out
push
pop
jae
mov
outs
aaa
push
movs
dec
or
pop
cmc
mov
pusha
shl
xor
ins
xor
mov
(bad)
cmp
loopne
adc
out
cmp
pop
lds
inc
popf
mov
pusha
pop
xor
inc
add
shl
push
mov
rol
fidivr
shl
bound
test
jmp
dec
xchg
imul
cmps
sub
cmp
paddd
push
hlt
icebp
cmp
test
jp
shl
and
(bad)
jne
xor
jae
or
out
sti
popa
popa
sbb
mov
cmp
and
mov
sub
mov
mov
add
icebp
adc
inc
fdivrp
add
xchg
xchg
dec
lds
jecxz
mov
push
jmp
inc
movs
ret
inc
in
es
retf
out
fcom
test
dec
jae
retf
jp
inc
mov
aaa
cmp
push
mov
push
or
inc
mov
sbb
mov
xchg
(bad)
jmp
ret
cs
int3
popf
sbb
adc
gs
xor
loop
(bad)
(bad)
jb
xchg
dec
push
sub
in
or
aaa
xor
in
lods
es
call
pushf
push
xchg
test
arpl
mov
enter
cmp
adc
jle
loopne
xchg
js
add
test
xchg
lea
aas
mov
test
test
(bad)
xor
adc
fnsave
sub
psubb
add
mov
test
loop
mov
fdivp
mov
cmp
xor
cmp
stc
daa
jo
div
dec
std
enter
mov
sbb
or
mov
cmp
lods
movs
dec
neg
test
mov
xchg
add
sbb
add
jmp
(bad)
push
pop
sub
fsubr
cmp
mov
outs
mov
xchg
mov
jno
jmp
xchg
ret
dec
dec
stc
retf
mov
pop
call
fst
fstp
pop
mov
add
das
mov
xchg
push
xchg
inc
push
cmps
stos
repnz
clc
jmp
adc
dec
mov
inc
pop
pusha
jp
pop
out
lea
jnp
or
std
push
xchg
aas
cwde
sub
into
pop
add
sbb
pop
lea
icebp
mov
int
push
test
mov
cmp
pop
aaa
mov
push
popf
pushf
mov
sbb
(bad)
mov
fsub
int
mov
sub
cmp
sub
cs
jne
and
cmps
jg
sub
pusha
add
mov
(bad)
xchg
call
shl
jbe
mov
fs
and
sbb
(bad)
clc
out
loop
jae
dec
daa
hlt
test
sub
pop
cmp
mov
fld
out
dec
mov
test
pop
pop
call
mov
in
call
pop
fwait
(bad)
out
icebp
into
jo
cmp
mov
bswap
push
mov
mov
mov
pop
outs
mov
into
xor
inc
jle
xor
loop
out
xchg
cs
iret
rol
fidivr
jmp
outs
xchg
je
movs
dec
in
cmp
jmp
push
stc
in
pushf
jmp
lods
cmps
fild
push
mov
sub
jle
cmps
retf
xchg
dec
rcr
mov
push
cmp
pop
bound
dec
(bad)
inc
jne
in
cmp
fdiv
sub
rcl
mov
xchg
aas
or
call
sti
jne
stos
jp
ja
cmp
adc
xchg
fistp
push
ins
jns
add
push
and
test
std
in
std
dec
iret
lahf
ins
fs
ror
stc
push
dec
or
push
and
mov
jo
sub
mov
jg
push
lods
cmc
cdq
sahf
add
xor
sahf
das
shl
xchg
push
fsub
hlt
push
inc
addr16
add
xchg
into
popa
mov
sbb
cmp
push
mov
xlat
mov
jecxz
push
xchg
movs
pop
mov
and
pop
imul
popf
fucompp
les
sbb
shl
mov
mov
out
jmp
cwde
mov
xor
adc
sar
add
lahf
nop
ror
push
jp
mov
sbb
dec
push
out
das
lahf
test
cmc
or
push
movs
sbb
or
int3
into
jge
fs
iret
cmps
dec
add
clc
xor
daa
sub
jecxz
push
lahf
pavgb
xchg
ffreep
lods
mov
fwait
sbb
xor
addr16
pop
inc
mov
push
in
mov
inc
adc
inc
mov
das
je
sub
test
sbb
cmp
das
pop
sbb
push
test
ficomp
xor
cmps
pop
sub
aam
dec
push
lock
imul
clc
in
dec
sbb
pop
dec
(bad)
mov
or
dec
pop
cmp
cmp
sbb
inc
in
fucom
adc
es
addr16
aam
adc
ror
xchg
fcom
(bad)
cdq
and
xor
in
pop
or
xchg
adc
push
adc
clc
add
jecxz
cmps
(bad)
push
inc
ins
popa
ror
ja
or
or
test
fwait
cmp
outs
push
outs
ins
sbb
add
mov
ret
shl
ret
ja
into
arpl
out
inc
imul
xchg
dec
and
add
adc
push
sub
ret
ja
dec
add
inc
imul
cwde
daa
jns
ja
jo
push
in
inc
and
mov
jg
mov
nop
xor
(bad)
retf
xchg
out
test
add
sar
pop
imul
jp
jge
stc
ret
sbb
cdq
(bad)
bound
mov
imul
adc
sar
adc
xchg
mov
xchg
bound
outs
lds
push
cmp
jl
dec
sbb
sbb
cmc
das
and
xchg
aad
fimul
adc
mov
xchg
fldcw
popf
dec
mov
inc
(bad)
sbb
add
shr
jbe
jne
xchg
das
xor
fst
test
jmp
sar
push
shl
mov
lahf
fdivr
jge
jne
xor
sub
mov
rol
icebp
xlat
inc
sbb
inc
or
jg
out
cwde
movs
cmps
arpl
in
adc
ins
dec
push
pop
test
cmp
mov
mov
fst
adc
inc
out
push
xor
outs
mov
xor
fsubr
jl
ss
sbb
jbe
jmp
dec
sbb
xchg
pop
inc
dec
loopne
scas
inc
std
sbb
add
sub
shr
cmc
(bad)
mov
dec
cmp
imul
xor
std
outs
popa
fimul
icebp
push
inc
cli
pop
repnz
int
loope
jle
xchg
and
jno
adc
cdq
stc
mov
popa
shl
push
cmps
rcr
shr
push
jecxz
mov
cs
or
cmp
or
movs
mov
shl
add
inc
cs
scas
aad
shl
jecxz
addr16
or
cmps
and
add
fsub
push
std
(bad)
pop
xabort
inc
clc
scas
xor
mov
(bad)
dec
xor
or
into
ss
iret
xchg
xchg
sbb
dec
clc
push
inc
mov
inc
pop
inc
mov
mov
movs
fisttp
pop
inc
inc
push
jge
ds
mov
xchg
sub
sbb
add
into
push
ins
pop
scas
adc
cmp
shl
pop
mov
ds
mov
mov
lds
outs
mov
and
test
inc
aas
mov
add
mov
loope
data16
icebp
jno
rcl
xchg
inc
js
inc
int3
xor
mov
out
and
addr16
adc
mov
mov
mov
(bad)
mov
jne
fst
dec
or
mov
add
push
loopne
(bad)
cmp
mov
pusha
call
nop
sbb
repz
mov
mov
nop
adc
xor
adc
fisubr
ret
adc
pop
adc
retf
aam
jae
mov
push
jge
unpcklps
call
int3
(bad)
not
or
cmp
rol
(bad)
retf
test
pop
adc
xchg
xchg
ja
aad
out
cld
std
add
cmp
popa
pop
mov
xor
fcomp
and
outs
mov
xlat
cmp
cmp
(bad)
fwait
sub
sbb
into
pushf
lds
sub
mov
(bad)
rcr
test
and
shl
movs
out
lock
add
mov
scas
mov
cld
into
sub
fst
(bad)
mov
(bad)
aas
push
push
fbstp
jmp
aad
cmp
mov
mov
ja
fbstp
outs
mov
and
loope
sar
xchg
adc
loopne
jl
clc
mov
mov
xchg
push
sbb
(bad)
test
or
mov
or
cmc
add
push
mov
or
das
in
mov
mov
jae
call
repz
add
dec
add
mov
inc
inc
daa
ret
pop
push
loop
xchg
add
jg
stos
loope
outs
cmp
push
mov
adc
pop
inc
fs
cmp
inc
jno
push
add
inc
xor
cmps
jl
xchg
pop
ss
jns
outs
ins
ja
jge
add
push
test
add
sbb
cmp
scas
jne
and
add
push
test
and
jns
loop
dec
rcl
ret
cmp
add
inc
xchg
ds
mov
clc
mov
add
popa
jae
xor
fld
mov
dec
jns
sub
xchg
pop
mov
pop
jp
jmp
sbb
aam
lock
adc
sahf
mov
mov
xor
jae
mov
fisttp
pop
or
cmp
inc
push
je
jmp
xor
or
mov
gs
shl
repz
and
jb
pusha
xchg
cmp
js
(bad)
mov
ja
inc
outs
nop
jmp
mov
loope
mov
pusha
out
mov
add
cmp
fld
sub
int
loopne
inc
adc
cwde
xor
xor
sbb
fild
mov
add
mul
sbb
pop
push
push
and
pop
sub
jmp
cmc
pop
add
sbb
push
(bad)
jmp
aam
loopne
push
hlt
pop
sub
inc
xchg
int3
and
test
imul
inc
mov
and
and
mov
repnz
xor
mov
stos
das
push
ror
stc
xor
and
scas
mov
femms
gs
je
pop
mov
out
je
xchg
cmp
xor
clc
out
leave
mov
ja
and
push
push
aaa
cmp
pusha
or
mov
inc
jmp
jg
mov
fidiv
pmovmskb
in
test
out
mov
jp
fwait
push
inc
(bad)
fnstenv
jne
push
(bad)
repz
test
(bad)
leave
retf
jmp
fisub
fdiv
ss
jno
mov
test
fld
cmp
sbb
push
into
jle
xchg
push
fdivr
jg
loope
imul
and
dec
enter
pusha
test
mov
cmp
mov
dec
jno
je
pop
xchg
jmp
repnz
lock
and
or
xchg
fs
(bad)
lods
add
push
dec
sbb
inc
scas
sbb
fmul
mov
je
xor
mov
mov
cwde
ror
cmps
jmp
in
dec
outs
dec
into
push
and
or
mov
adc
ss
jp
jmp
adc
xor
and
sbb
add
push
or
and
scas
test
(bad)
enter
jae
mov
inc
cmp
mov
cmp
(bad)
mov
jmp
mov
pop
or
xor
cmp
enter
push
add
jnp
push
cs
(bad)
cli
in
loop
jle
div
xor
(bad)
int3
lock
xchg
adc
lods
out
cmp
test
aam
pop
imul
or
push
xor
and
sbb
out
ins
lods
gs
push
mov
sbb
call
repnz
add
out
add
sub
mov
(bad)
xchg
arpl
enter
enter
xor
lahf
push
bound
movs
out
push
inc
sbb
dec
and
cmp
push
(bad)
enter
jmp
in
sahf
rcl
cmp
jp
sti
test
xor
out
xchg
int
ret
and
popf
adc
scas
imul
xor
cld
inc
pop
test
or
addr16
and
shl
loop
sub
mov
push
subps
xor
mov
mov
jp
sub
xlat
inc
sbb
sub
in
pop
mov
xchg
and
cmp
les
inc
mov
sub
dec
xor
sub
xchg
mov
fwait
es
stos
stos
lea
sbb
jp
call
sbb
xchg
jb
in
sbb
inc
mov
outs
mov
cmp
jns
loopne
movs
and
iret
lds
outs
dec
jno
jns
jecxz
add
popa
or
adc
cmp
jg
mov
sbb
lea
add
dec
sbb
mov
sub
stc
aaa
mov
cli
push
push
stos
mov
fwait
mov
icebp
in
and
mov
push
clc
test
dec
stc
ja
xor
aaa
call
sub
jge
inc
(bad)
mov
dec
(bad)
sub
jmp
int3
fmul
popf
movs
cmp
jns
pop
loope
clc
push
rcl
push
popa
rol
and
jecxz
sar
xor
adc
dec
and
push
inc
scas
imul
pop
sub
jecxz
cwde
rcl
mov
mov
fnstenv
imul
pop
rcr
pop
mov
jno
jne
mov
mov
sub
rcl
fisttp
ins
popa
pop
out
fadd
(bad)
xor
inc
and
lods
es
dec
in
retf
jmp
scas
cmps
movs
in
ins
cs
movs
out
jne
adc
or
out
fcom
push
imul
scas
jg
les
call
fdiv
inc
fdivr
(bad)
inc
sbb
add
push
ficom
cmps
pop
inc
lea
mov
sbb
mov
outs
repnz
mov
or
int
scas
das
dec
cmps
stos
cmp
enter
inc
jge
sbb
pop
jae
jmp
nop
add
movs
jecxz
aam
jbe
mov
mov
pop
push
(bad)
into
sub
dec
aas
sbb
test
mov
cmp
aam
addr16
in
inc
pusha
adc
dec
in
sbb
arpl
neg
jno
cmps
mov
pop
iret
adc
js
and
mov
push
xchg
pop
sbb
adc
(bad)
popa
cli
les
stos
ret
jns
or
lea
shl
jbe
ins
das
imul
sar
mov
xchg
and
clc
rcl
and
cdq
enter
and
(bad)
(bad)
jmp
test
dec
in
je
xor
xchg
dec
repnz
push
sbb
add
mov
add
xchg
dec
push
adc
xchg
loope
retf
mov
pop
adc
lahf
add
fst
outs
lds
arpl
lock
nop
add
pop
push
cdq
(bad)
clc
dec
jl
jl
pop
jmp
xchg
mov
loopne
(bad)
mov
jnp
out
data16
jb
or
mov
push
sub
js
push
pop
mov
dec
mov
std
mov
inc
sahf
mov
mov
pop
inc
in
sub
push
out
xor
out
cmp
mov
repz
les
mov
or
cmps
imul
mov
mov
and
xchg
(bad)
out
sbb
loop
rcl
test
mov
jnp
(bad)
pop
jne
mov
xchg
mov
adc
aaa
push
add
shl
inc
dec
test
std
int
std
test
add
cld
or
repz
mov
in
retf
les
adc
aaa
aaa
scas
inc
inc
pop
mov
sub
lods
mov
fistp
outs
out
in
jmp
ins
mov
into
popa
sub
xor
push
fld
xor
dec
push
std
mov
bound
sub
xlat
arpl
outs
jecxz
sub
lahf
pop
repz
iret
shr
fcmovnb
xor
cmp
popa
sub
inc
fnsave
push
push
iret
data16
pop
cli
aaa
ja
ret
popa
xlat
or
ss
(bad)
dec
dec
call
sub
(bad)
outs
pop
push
cmps
sub
rcr
retf
aas
push
cmc
adc
scas
sbb
cdq
test
shr
jbe
cs
stc
mov
push
cmc
push
mov
out
xor
cli
scas
cs
in
inc
out
jns
push
sbb
pop
lahf
bnd
pop
mov
les
lods
in
pushf
lock
adc
push
out
jle
dec
dec
push
icebp
jp
sub
aam
xchg
cmps
pop
into
pop
es
xchg
mov
test
push
lods
outs
mov
les
jae
stos
mov
xchg
dec
mov
sti
jnp
pop
out
xchg
add
call
scas
cmp
sbb
mov
hlt
in
pushf
inc
lods
jbe
cdq
mov
(bad)
mov
lea
push
cs
dec
les
sub
test
dec
pop
pop
pop
stc
xchg
std
mov
stos
jmp
xchg
(bad)
jno
jne
outs
sub
xor
xchg
pop
jge
mov
inc
sub
adc
nop
cmp
ret
shr
jno
xchg
adc
jmp
movs
xor
cmc
gs
movs
loope
mov
call
repnz
dec
popa
add
mov
js
(bad)
fisttp
dec
fs
mov
dec
out
adc
push
mov
dec
pop
aas
movs
lods
xor
rcl
aad
sub
cli
das
sub
cld
cs
inc
(bad)
jno
fdivr
lds
pusha
clc
mov
push
inc
mov
inc
icebp
or
add
nop
sub
or
or
mov
mov
ja
jnp
movs
rol
xchg
jbe
push
adc
or
dec
daa
mov
scas
addr16
shl
sbb
test
cs
icebp
jo
jno
les
jmp
cmp
fs
out
iret
mov
mov
sub
mov
mov
sub
js
push
xor
mov
(bad)
and
sbb
add
icebp
repz
jl
xchg
(bad)
jb
loop
mov
push
push
out
mov
xor
test
imul
add
fucom
mov
test
or
mov
lahf
idiv
jno
cmp
nop
mov
jecxz
aas
stc
xchg
hlt
inc
sbb
mov
lock
xchg
mov
add
cmc
inc
jb
sbb
daa
ret
aaa
push
or
mov
daa
clc
mov
jg
jno
(bad)
sbb
fst
movs
sub
xor
sti
scas
xor
pop
aam
xor
jnp
pop
cmps
test
cmps
push
mov
shr
arpl
pop
push
mov
call
jo
ja
dec
cmps
enter
adc
and
mov
call
push
jmp
xchg
aam
lds
sub
mov
fisub
push
test
inc
push
xor
xchg
and
jns
out
mov
mov
cwde
sbb
stos
cmp
mov
add
dec
add
push
push
jbe
xchg
shr
xchg
ror
inc
pusha
cmp
adc
movs
pop
jle
pop
cld
xor
inc
dec
mov
popa
jmp
imul
jbe
xchg
test
pop
sbb
add
adc
shl
out
fistp
sbb
push
jbe
daa
add
jg
and
jb
dec
jg
imul
mov
test
ins
out
dec
mov
mov
push
push
jl
or
or
mov
sbb
sub
shl
xchg
xor
push
add
mov
sbb
xchg
pop
retf
xor
or
dec
fnstcw
gs
add
data16
das
and
inc
(bad)
retf
mov
xchg
dec
jb
mov
adc
fwait
and
aas
test
inc
cli
arpl
adc
ror
lahf
xchg
aaa
lds
ret
jnp
sar
mov
leave
jno
test
fmul
sbb
adc
lds
dec
std
cmc
addr16
adc
test
(bad)
pusha
and
dec
pop
dec
mov
icebp
stos
les
rcr
popa
mul
movs
sub
dec
cdq
(bad)
bound
sbb
jecxz
or
sbb
inc
inc
push
adc
fmul
push
xor
cmp
add
imul
fmul
cld
add
sub
or
sti
aaa
sbb
cs
xor
cs
inc
adc
arpl
cmp
add
out
dec
dec
call
inc
dec
xchg
cmps
xchg
sbb
jle
pop
mov
or
aas
aam
popa
test
add
mov
jnp
std
sbb
hlt
arpl
dec
add
inc
pop
mov
icebp
mov
test
xor
test
ss
push
clc
xor
test
inc
jo
cwde
in
mov
loopne
mov
sub
add
inc
mov
ret
leave
std
mov
fstp
iret
cmps
test
retf
inc
lock
ins
adc
ins
cmp
test
daa
arpl
jnp
std
mov
cmp
dec
cmc
out
repnz
ret
loope
cmc
cmp
cmp
pop
test
lds
dec
inc
jge
jp
add
pop
push
mov
ret
xor
test
jl
fmul
jg
arpl
sti
inc
int
or
mov
fdivr
mov
cs
div
addr16
mov
sahf
jno
sub
sub
fdivr
sub
fstp
push
mov
shr
push
jmp
xchg
cmc
xchg
xor
loop
mov
fnsave
add
aad
inc
pop
add
fidiv
enter
jmp
es
stos
mov
sbb
mov
pop
cdq
sbb
mov
out
imul
inc
inc
hlt
xlat
and
xchg
pop
mov
adc
fadd
jg
mov
sub
pop
test
lods
sub
mov
mov
mov
(bad)
xchg
lds
push
mov
dec
add
inc
div
loope
int3
ret
aad
xor
aas
push
pop
rcr
or
jmp
ins
mov
clc
push
das
push
push
mov
adc
(bad)
hlt
mov
js
mul
mov
cli
sub
push
je
sbb
stos
jmp
pop
mov
js
test
aad
mov
cs
sbb
in
sub
into
mov
pop
or
or
ror
cdq
xlat
add
pop
add
mov
add
jmp
aam
sbb
mov
ss
mov
pop
xlat
inc
mov
shl
je
inc
je
xchg
dec
or
std
mov
inc
aas
imul
pop
mov
in
inc
test
pop
or
or
movs
mov
mov
enter
fstp
jp
jmp
push
cmp
test
movs
xor
cli
mov
xchg
pop
adc
loopne
or
mov
idiv
js
mov
fisttp
adc
mov
lds
push
out
jl
test
test
and
xor
fwait
sar
out
inc
lods
loope
dec
leave
cmps
shl
popf
mov
and
int3
les
fdivr
lock
mov
jge
outs
mov
(bad)
adc
and
xor
nop
pushf
aam
jbe
std
in
stos
fst
mov
add
cmp
hlt
cmp
(bad)
shl
int
sbb
cmp
add
sar
ret
rol
jmp
push
std
(bad)
lock
lods
mov
dec
xlat
jmp
dec
mov
js
shl
lods
iret
push
xor
and
retf
mov
or
int
and
call
sbb
fsub
stos
sbb
dec
aaa
push
sub
(bad)
push
in
pop
cli
test
cmps
dec
in
icebp
lods
fcomp
pop
sub
loopne
lock
dec
aas
sti
cld
stos
fs
mov
lds
mov
movs
dec
repnz
mov
movs
sbb
or
mov
mov
inc
pop
push
fisub
adc
sbb
cwde
arpl
mov
adc
test
test
lock
call
xchg
mov
jnp
cwde
lods
in
sbb
aam
out
mov
xor
pop
or
xchg
mov
popa
sahf
les
jecxz
xchg
sub
sti
adc
adc
aas
or
jo
or
fwait
dec
pusha
mov
sub
imul
hlt
xchg
popa
hlt
push
mov
ret
dec
lods
mov
clc
mov
mov
pusha
pop
mov
mov
les
lods
fnsave
js
sub
or
sub
loop
outs
push
inc
jle
adc
(bad)
push
xchg
(bad)
mov
mov
push
pop
mov
mov
int
jecxz
sbb
lods
(bad)
or
cmp
mov
mov
das
movs
js
mov
ret
shl
cmp
sti
sub
loop
add
fwait
cmp
or
inc
mov
push
sub
mov
rol
xor
cli
cwde
jmp
and
xlat
movs
xchg
jl
out
in
inc
movs
aam
popf
std
ret
outs
cmps
sbb
mov
mov
or
dec
pushf
loope
aas
sar
or
mov
lds
popf
cmp
adc
es
pop
cmp
adc
(bad)
sub
add
cmp
lods
das
clc
movs
inc
cdq
and
adc
scas
test
xchg
and
dec
(bad)
push
jmp
js
data16
inc
mov
mov
mov
jmp
cs
fild
pop
pop
js
sbb
xchg
ficomp
cmp
dec
add
mov
xchg
sub
movs
mov
and
cmc
shl
lds
mov
repz
call
lods
inc
retf
ror
cdq
bound
inc
push
ret
cs
or
out
jge
(bad)
cld
cmps
mov
aas
popa
add
push
test
mov
inc
cmp
adc
inc
xor
in
jecxz
cmp
add
ja
mov
push
dec
mov
lods
in
mov
and
adc
rcl
jle
sub
pop
test
pop
out
mov
mov
int
mov
pop
add
jmp
xor
inc
pop
(bad)
jb
loop
pop
inc
cmc
mov
je
or
mov
push
mov
aam
retf
fsubr
sti
dec
jecxz
mov
arpl
xchg
inc
mov
jp
bound
jne
and
cmc
or
xor
mov
hlt
enter
jne
push
in
inc
retf
mov
push
push
jae
enter
movs
mov
mov
or
sub
xchg
cld
push
sub
stos
das
lods
sub
adc
in
and
xor
stos
inc
dec
xchg
and
popa
sbb
imul
scas
aam
not
cwde
aaa
cld
and
add
push
sbb
or
fisttp
movs
xchg
push
pop
jno
adc
mov
shr
push
cmps
jo
dec
cmp
mov
sbb
xchg
inc
out
ins
bound
mov
mov
lahf
sbb
cmp
push
dec
xlat
dec
into
mov
mov
sub
aam
dec
or
xor
push
add
bound
js
jne
pusha
or
sub
stos
rol
scas
sub
jp
mov
pop
push
ror
daa
pop
or
sub
sbb
mov
mov
idiv
nop
jmp
das
int
or
rol
or
shl
dec
out
ret
fwait
je
fidiv
jmp
dec
les
ss
mov
rcr
iret
loopne
jmp
scas
mov
fld
add
or
add
repnz
jl
(bad)
cmps
movhps
out
sub
cmp
aas
cmc
adc
mul
je
sar
and
mov
ins
popf
mov
out
cmp
add
js
int3
and
outs
jecxz
jge
push
mov
popf
daa
inc
sbb
int
ret
mov
push
stos
dec
je
jae
sub
push
(bad)
loopne
shr
mov
push
sub
call
push
cmps
xchg
jmp
mov
gs
cmps
sub
sub
push
dec
jle
cld
mov
vmread
call
pop
jne
push
and
aaa
popa
dec
pop
or
xor
dec
cmp
shl
daa
ss
cli
in
add
call
test
mov
in
es
add
out
inc
shr
sahf
pop
outs
repnz
mov
and
cs
xor
inc
outs
gs
(bad)
cmp
add
and
xor
fcomp
cwde
xchg
pop
pop
xchg
pop
xlat
mov
sbb
or
mov
dec
sbb
jne
sti
xchg
sbb
sub
jae
push
mov
pop
push
jae
pop
xchg
iret
add
inc
and
inc
stos
cmps
and
pop
test
(bad)
sub
sub
jns
gs
call
push
inc
xchg
or
leave
mov
pop
xchg
xchg
jae
pop
inc
adc
out
jp
lahf
or
push
imul
dec
cmps
jle
leave
retf
add
shl
xchg
mov
cmp
sub
xchg
pop
pop
mov
iret
movs
jmp
into
inc
add
jne
jbe
mov
or
mov
stc
test
and
sahf
lahf
imul
cwde
or
in
mov
mov
addr16
daa
xchg
test
mov
pop
add
jmp
and
xor
call
sahf
div
push
push
jae
pop
aaa
popf
pop
test
jge
dec
in
pop
xchg
hlt
jbe
dec
push
outs
push
outs
jns
hlt
fadd
std
sahf
(bad)
iret
or
aad
mov
(bad)
mov
cdq
push
add
aad
fucom
pusha
ret
in
popa
into
xchg
mov
jns
jno
or
das
shl
in
(bad)
jb
adc
xchg
out
push
sub
push
pop
dec
shl
jmp
xchg
ja
sbb
mov
fidiv
out
adc
jle
jnp
fs
jp
leave
(bad)
icebp
xor
(bad)
jns
out
call
pop
mov
xchg
jle
mov
push
sub
or
push
(bad)
clc
lods
mov
mov
push
out
sub
jmp
push
xor
sub
mov
sbb
or
mov
mov
in
push
add
sub
sub
jp
mov
cdq
mov
xchg
das
xor
repnz
ret
add
icebp
push
mov
jbe
sbb
sub
ins
sub
dec
js
pop
retf
retf
jecxz
test
mov
outs
sub
call
(bad)
jmp
push
push
les
add
and
pop
push
cwde
xchg
and
mov
adc
push
popf
mov
jo
aas
dec
call
test
dec
movs
cmps
scas
pop
cmps
or
jl
jl
mov
cmp
fist
pop
mov
ja
mov
test
jns
rol
aad
push
xchg
inc
clc
jmp
enter
sub
mov
(bad)
mov
mov
cmp
ins
in
dec
fucom
sbb
int
mov
jecxz
jb
adc
dec
jmp
neg
sbb
push
inc
add
fcom
add
cmp
xchg
stc
(bad)
int3
fsubr
or
mov
sub
psubusw
cmps
daa
enter
mov
js
dec
push
mov
mov
fs
inc
lods
div
nop
bnd
repz
mov
loope
les
(bad)
jnp
dec
push
sbb
mov
push
sbb
jb
fisub
mov
aaa
mov
xchg
push
int
daa
sbb
mov
in
mov
xchg
ins
xchg
aam
in
clc
sbb
and
arpl
sbb
pop
jno
nop
sub
inc
rcl
shl
mov
ror
inc
leave
xchg
pusha
inc
scas
or
pop
push
mov
lods
push
and
clc
cmp
es
sbb
xchg
fwait
dec
retf
sub
ret
dec
pop
in
pop
xchg
loope
push
and
mov
or
jno
shr
push
dec
neg
xchg
cmp
idiv
retf
fld
data16
(bad)
into
bound
lods
stos
inc
test
icebp
cmp
std
push
mov
push
call
lods
pushf
add
fiadd
enter
adc
xchg
sbb
mov
call
jmp
push
ds
ret
or
mov
iret
(bad)
lds
and
js
(bad)
sub
or
cmp
dec
js
or
xchg
call
outs
jae
pop
mov
repz
clc
mov
cwde
dec
mov
jp
aas
sub
sbb
dec
ins
lods
mov
or
cwde
sbb
cmps
jg
mov
fdiv
pop
aad
jne
mov
leave
gs
pop
mov
(bad)
sti
push
fst
test
jl
mov
outs
xchg
cdq
inc
out
adc
cmp
stos
ins
jecxz
ss
loopne
sbb
mov
int3
fcom
adc
ret
mov
fdivp
inc
mov
push
sub
fs
in
out
mov
pusha
imul
mov
aaa
imul
push
out
add
push
aam
mov
push
mov
fsubr
xchg
scas
xchg
add
enter
cdq
sar
push
test
xchg
lock
repz
pop
mov
and
repnz
adc
inc
dec
xchg
push
inc
(bad)
xlat
outs
and
and
inc
dec
cmp
sub
sub
ja
pop
dec
hlt
or
nop
popf
mov
mov
(bad)
(bad)
sbb
std
fdivr
fwait
loop
pushf
pop
mov
jo
in
cli
shl
push
out
addr16
jecxz
lahf
pop
(bad)
repz
stc
sub
sub
mov
stc
xor
cdq
clc
jge
mov
add
in
shl
dec
cmp
jecxz
mov
repnz
fwait
test
mov
or
sbb
outs
jae
cmp
int3
shl
mov
and
ss
jmp
retf
add
lahf
out
xchg
sub
add
and
inc
movs
cmp
mov
(bad)
sub
aaa
xor
in
dec
and
fcomp
ret
jmp
adc
mov
lods
xor
mov
scas
out
sub
inc
xrelease
mov
retf
rcl
sbb
xchg
cmp
les
sbb
clc
or
mov
inc
outs
xchg
sahf
add
fs
(bad)
aam
repz
and
sbb
repz
push
js
aaa
ins
mov
test
cs
mov
add
jbe
pop
sbb
arpl
lods
std
fstp
fcom
sbb
add
(bad)
pop
lea
dec
ja
fild
xchg
push
js
out
or
imul
outs
cdq
pop
inc
cmp
pop
data16
cli
popaw
ins
cmp
mov
mov
pop
hlt
ds
mov
sahf
jae
xchg
sbb
pop
add
out
arpl
cmp
mov
cmp
push
hlt
mov
lods
pop
push
adc
test
dec
pop
adc
jbe
adc
jg
pop
ja
pop
or
push
mov
aam
test
push
jecxz
loopne
adc
mov
inc
mov
jmp
xchg
icebp
in
push
xor
aaa
lods
pop
pusha
adc
ins
test
sbb
mov
scas
pop
(bad)
cmp
inc
neg
ja
or
jmp
fisttp
lea
sahf
bound
and
cmps
push
addr16
sti
enter
movs
sub
inc
int3
jmp
test
imul
dec
fs
loop
pop
xchg
fld
mov
add
int3
clc
jne
popa
out
sbb
fstp
aam
out
inc
and
rcl
xor
mov
aas
jns
push
(bad)
adc
emms
xchg
popf
sti
ror
dec
dec
push
add
and
lea
adc
cmc
xchg
xchg
add
dec
test
adc
jbe
and
add
add
cld
fsubr
mov
xchg
adc
cmp
sub
add
add
dec
inc
add
add
add
add
or
add
jbe
xor
xor
xor
cmp
add
add
add
jle
add
add
adc
add
and
jb
outs
addr16
add
add
add
mov
add
and
add
pop
add
adc
add
and
dec
inc
add
add
pop
add
cmp
add
and
outs
bound
add
add
add
inc
push
add
or
add
add
add
add
add
add
add
push
add
add
add
mov
add
adc
add
adc
add
or
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
dec
add
add
add
add
(bad)
add
add
(bad)
add
add
add
add
add
add
add
pop
dec
add
add
push
dec
add
add
cmovnp
push
add
add
dec
add
add
add
add
add
add
cmovnp
push
add
paddw
add
add
mov
pushf
add
add
add
add
add
add
add
add
add
add
add
ret
add
add
add
add
add
or
add
add
add
add
add
add
add
or
add
add
add
add
or
add
add
add
add
add
add
add
adc
cmp
ret
add
add
add
adc
loop
ret
add
add
add
add
add
add
add
adc
xor
ret
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
xchg
add
outs
add
add
add
add
add
xchg
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
or
adc
sub
add
add
add
add
add
add
xchg
cmp
cmp
adc
js
add
add
adc
nop
add
and
add
add
add
add
add
add
adc
xchg
add
add
add
adc
sbb
int
adc
pushf
and
add
add
add
add
adc
cmp
loopne
adc
mov
add
add
adc
rol
add
add
add
add
test
add
add
adc
xlat
pop
std
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
xchg
add
or
adc
add
add
add
xchg
add
or
add
add
and
xchg
add
or
add
add
xchg
add
or
add
add
and
xchg
add
or
add
add
xchg
add
or
adc
sbb
xchg
add
or
adc
sbb
add
add
xchg
add
or
adc
and
xchg
add
or
adc
and
add
add
xchg
add
add
and
xchg
cmp
cmp
adc
xor
xchg
add
add
xchg
add
add
and
xchg
add
add
xchg
add
or
add
add
add
add
xchg
add
or
add
add
add
add
add
add
add
add
xchg
add
or
add
add
add
add
add
add
add
add
xchg
add
or
add
add
add
add
add
add
add
add
xchg
cmp
cmp
adc
pusha
and
xchg
add
or
adc
fs
xchg
add
or
adc
push
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
xchg
add
or
add
add
add
add
add
add
add
add
xchg
add
or
add
add
add
add
add
xchg
add
or
add
add
add
add
add
xchg
add
or
add
add
add
add
add
xchg
add
or
adc
mov
add
add
xchg
add
or
adc
mov
add
add
xchg
add
or
adc
mov
add
add
add
and
xchg
add
add
and
xchg
add
add
and
xchg
add
add
and
xchg
add
or
add
add
and
xchg
add
or
add
add
and
xchg
add
or
add
add
and
xchg
add
or
adc
fsub
xchg
add
or
add
add
and
xchg
add
add
and
xchg
add
or
add
add
and
xchg
cmp
cmp
adc
lock
xchg
add
or
adc
hlt
and
xchg
add
or
adc
clc
and
xchg
add
or
adc
cld
and
xchg
add
or
adc
add
add
add
xchg
add
add
add
add
xchg
add
add
add
add
xchg
add
add
add
add
xchg
add
add
add
add
xchg
add
or
add
add
add
add
xchg
add
or
add
add
add
add
xchg
cmp
cmp
adc
and
add
add
xchg
add
or
add
add
add
add
xchg
add
or
add
add
add
add
xchg
add
or
sub
add
add
xchg
add
or
xor
add
add
xchg
add
or
xor
add
add
xchg
add
or
cmp
add
add
xchg
add
or
adc
cmp
add
add
xchg
add
or
adc
inc
add
add
xchg
add
or
adc
inc
add
add
xchg
add
or
adc
dec
add
add
xchg
cmp
cmp
adc
push
add
add
xchg
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
xchg
add
or
fs
add
xchg
add
or
push
add
add
add
add
add
add
add
add
add
xchg
add
push
or
adc
je
add
add
xchg
add
push
or
adc
js
add
add
xchg
cmp
cmp
adc
and
add
add
add
add
xchg
add
or
adc
mov
add
add
xchg
add
add
add
xchg
add
or
adc
nop
add
add
xchg
add
add
xchg
add
cwde
add
add
xchg
add
add
xchg
add
add
add
add
add
xchg
add
push
or
adc
test
add
add
xchg
cmp
cmp
adc
add
add
sti
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
jl
sub
cmp
cmp
or
cmp
cmp
or
mov
stos
add
add
mov
adc
mov
ret
add
adc
mov
add
push
fld
adc
mov
jmp
pop
test
fld
jno
cmp
push
add
cmp
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
or
add
sbb
add
sub
and
or
add
or
add
add
add
add
jne
add
add
add
add
push
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
pop
add
add
add
add
add
push
popa
push
je
dec
push
jno
bound
push
pop
add
ins
add
arpl
ins
imul
gs
cs
imul
inc
outs
jb
jae
in
call
in
mov
mov
in
xchg
in
pushf
in
mov
mov
in
mov
mov
in
scas
in
mov
mov
in
xchg
in
mov
jb
jae
jne
arpl
add
ins
jb
inc
imul
gs
push
push
add
jne
xor
pop
xor
dec
jo
push
inc
add
arpl
outs
jb
push
fs
imul
ja
dec
add
jb
push
outs
outs
push
gs
data16
push
arpl
jns
je
ins
add
jb
dec
push
dec
push
dec
xor
dec
push
add
xor
jno
jns
gs
push
fs
add
push
push
addr16
ja
inc
jno
cmp
cmp
pop
dec
ja
js
dec
inc
jp
addr16
dec
outs
push
push
inc
jp
jno
inc
add
inc
push
xor
js
inc
dec
jns
push
jns
add
outs
jo
jb
jns
outs
outs
add
jae
gs
cs
gs
arpl
outs
add
dec
pop
dec
arpl
outs
inc
dec
jp
inc
ins
gs
add
cmp
js
bound
outs
imul
jne
xor
dec
je
push
dec
dec
je
pop
addr16
add
inc
push
jb
xor
popa
je
dec
pop
inc
ja
xor
inc
jno
js
inc
outs
inc
addr16
add
inc
popa
pop
dec
dec
bound
push
jns
push
push
add
je
xor
popa
dec
outs
inc
pop
ja
jne
push
jb
add
aaa
jbe
jne
xor
add
dec
dec
jo
pop
inc
jbe
ins
dec
imul
dec
ja
inc
outs
jbe
imul
dec
dec
add
push
pop
ja
push
aaa
add
inc
xor
push
inc
push
inc
jae
je
xor
jb
add
jb
ins
inc
jb
popa
jns
je
jb
bound
add
arpl
add
arpl
jp
js
dec
imul
add
jae
ins
bound
dec
gs
outs
fs
outs
outs
add
arpl
je
outs
outs
add
je
add
data16
ins
ins
inc
inc
add
jo
push
ss
add
ja
xor
dec
jae
js
jbe
dec
jp
pop
ja
arpl
dec
ins
add
dec
jo
jp
cmp
js
je
add
push
inc
push
push
inc
xor
xor
push
add
push
push
jns
cmp
push
pop
js
push
add
dec
dec
imul
push
push
popa
dec
dec
addr16
push
je
imul
push
push
jp
pop
push
ins
push
dec
add
cmp
push
xor
jae
imul
popa
jb
inc
jae
add
imul
jne
jp
push
data16
push
imul
ss
addr16
outs
gs
dec
xor
outs
push
cmp
jp
cmp
dec
inc
inc
jb
dec
xor
xor
add
xor
cmp
push
dec
gs
xor
pop
jb
xor
arpl
gs
add
xor
arpl
pop
aaa
xor
jo
ja
jo
inc
jo
dec
inc
add
je
jns
gs
or
mov
sub
stos
loop
stos
loop
lods
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
stos
loop
(bad)
loop
scas
loop
mov
sub
(bad)
loop
stos
loop
stos
loop
lods
loop
scas
loop
lods
loop
lods
loop
lods
loop
stos
loop
lods
loop
stos
loop
scas
loop
stos
loop
lods
loop
mov
sub
lods
loop
scas
loop
mov
sub
jb
jo
jb
jns
loop
(bad)
loop
lods
loop
scas
loop
(bad)
loop
mov
sub
lods
loop
mov
or
lods
loop
(bad)
loop
mov
or
loop
scas
loop
lods
loop
lods
loop
scas
loop
(bad)
loop
lods
loop
mov
sub
(bad)
loop
lods
loop
mov
sub
scas
loop
lods
loop
lods
loop
stos
loop
stos
loop
mov
sub
scas
add
or
lods
loop
stos
loop
lods
loop
scas
loop
mov
sub
mov
sub
scas
loop
stos
loop
mov
sub
loop
mov
sub
loop
scas
loop
scas
loop
scas
loop
scas
loop
(bad)
loop
scas
loop
mov
sub
loop
stos
loop
mov
or
scas
add
je
dec
gs
popa
addr16
sub
mov
or
scas
loop
stos
loop
lods
loop
scas
loop
mov
sub
mov
or
stos
loop
mov
or
(bad)
loop
stos
loop
mov
sub
lods
loop
mov
sub
stos
loop
lods
loop
(bad)
loop
stos
loop
(bad)
loop
mov
sub
scas
loop
scas
add
jae
popa
addr16
outs
js
push
push
imul
jae
ins
je
loop
stos
loop
(bad)
loop
stos
loop
mov
or
stos
loop
scas
loop
mov
sub
scas
loop
scas
loop
lods
loop
lods
loop
mov
sub
stos
loop
mov
or
scas
loop
lods
loop
stos
loop
stos
loop
scas
loop
mov
or
loop
lods
loop
stos
loop
lods
loop
stos
loop
lods
loop
scas
loop
scas
loop
lods
loop
scas
add
je
popa
ins
jne
add
sub
lods
loop
stos
loop
stos
loop
lods
loop
lods
loop
(bad)
loop
stos
loop
stos
loop
lods
loop
stos
loop
scas
loop
(bad)
loop
lods
loop
(bad)
loop
mov
sub
scas
loop
lods
loop
lods
loop
scas
loop
scas
loop
stos
loop
lods
loop
stos
loop
scas
loop
stos
loop
scas
loop
stos
loop
scas
loop
stos
loop
stos
loop
(bad)
loop
lods
loop
lods
loop
(bad)
loop
stos
loop
stos
loop
scas
add
je
gs
outs
fs
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
scas
loop
lods
loop
mov
sub
lods
loop
lods
loop
lods
loop
mov
or
mov
sub
loop
mov
sub
stos
loop
stos
loop
stos
loop
stos
loop
stos
loop
(bad)
loop
scas
loop
mov
sub
scas
loop
lods
loop
stos
loop
stos
loop
mov
sub
jo
inc
jno
popa
ins
imul
sub
loop
lods
loop
lods
loop
stos
loop
mov
or
loop
(bad)
loop
(bad)
loop
scas
loop
stos
loop
scas
loop
lods
loop
stos
loop
(bad)
loop
scas
loop
lods
loop
stos
loop
scas
loop
scas
loop
mov
sub
stos
loop
lods
loop
lods
loop
lods
loop
lods
loop
scas
loop
scas
loop
stos
loop
scas
loop
mov
sub
gs
outs
fs
popa
jae
add
jbe
imul
or
(bad)
loop
lods
loop
mov
or
stos
loop
scas
loop
stos
loop
lods
loop
mov
or
stos
loop
stos
loop
lods
loop
stos
loop
mov
or
scas
loop
stos
loop
scas
loop
mov
sub
loop
mov
sub
(bad)
loop
lods
loop
(bad)
loop
scas
loop
lods
loop
mov
sub
loop
scas
add
xor
xor
dec
push
jns
dec
cmp
fs
dec
xor
je
add
push
bound
dec
push
imul
xor
inc
xor
xor
ss
dec
add
pop
addr16
xor
imul
xor
push
push
add
push
pop
jae
dec
push
jbe
pop
xor
xor
xor
ja
inc
inc
inc
dec
xor
imul
inc
jb
inc
xor
dec
inc
dec
imul
je
dec
pop
xor
xor
aaa
dec
dec
add
dec
aaa
push
js
cmp
push
jp
arpl
dec
dec
jbe
jns
dec
jae
push
ja
dec
jno
popa
inc
jp
add
jp
bound
jns
je
inc
xor
push
dec
add
jns
push
cmp
addr16
inc
inc
add
jno
arpl
inc
inc
ins
cmp
jne
jne
add
arpl
ja
jne
push
add
dec
dec
dec
push
outs
inc
ins
dec
xor
popa
push
popa
add
dec
outs
xor
xor
cmp
gs
push
push
imul
jns
dec
add
ins
ja
xor
xor
dec
popa
bound
inc
push
push
push
imul
inc
dec
add
push
cmp
cmp
pop
add
inc
imul
je
add
je
inc
push
dec
inc
outs
add
jo
dec
xor
pop
jae
dec
push
imul
dec
push
jb
push
push
jbe
push
dec
xor
pop
outs
pop
pop
js
add
jns
xor
xor
dec
push
inc
add
js
dec
jns
push
inc
push
jb
popa
jp
jbe
inc
add
dec
data16
xor
jne
jp
popa
jae
add
gs
inc
dec
dec
jae
inc
cmp
inc
push
cmp
xor
jp
arpl
imul
ins
popa
je
cmp
inc
jns
push
inc
add
pop
ja
push
xor
push
jns
inc
add
jae
dec
push
xor
add
push
je
inc
ja
data16
ins
push
push
jp
push
push
xor
dec
outs
bound
jns
xor
jp
ins
push
add
jns
xor
popa
inc
popa
inc
add
imul
cmp
ins
push
js
jo
inc
add
outs
xor
dec
bound
push
ss
add
aaa
bound
js
inc
jbe
inc
push
pop
dec
dec
push
pop
cmp
dec
add
popa
gs
ss
xor
xor
xor
push
push
dec
inc
bound
push
imul
push
jne
ja
imul
pop
ins
dec
inc
add
inc
ins
push
xor
inc
push
js
arpl
inc
data16
jae
jno
xor
push
push
add
inc
jns
inc
pop
pop
gs
xor
imul
gs
add
imul
push
outs
push
jno
xor
fs
dec
push
dec
dec
je
inc
imul
add
push
push
xor
push
xor
jp
xor
jp
imul
jbe
gs
jo
jp
outs
inc
dec
je
dec
xor
jb
dec
add
pop
inc
ins
dec
push
push
cmp
inc
push
addr16
add
dec
outs
jae
jne
inc
imul
dec
arpl
bound
aaa
je
xor
gs
js
dec
xor
jns
jae
inc
outs
add
dec
push
popa
outs
bound
outs
inc
dec
push
je
cmp
push
inc
inc
xor
xor
popa
dec
jne
push
jae
jp
push
dec
dec
push
gs
push
xor
cmp
imul
add
push
jbe
inc
push
push
xor
jne
add
xor
arpl
dec
push
add
xor
inc
je
addr16
outs
ins
ins
dec
imul
jns
jp
addr16
dec
pop
jo
jp
jne
add
jb
xor
inc
pop
push
inc
add
jb
ins
jo
dec
pop
bound
add
xor
outs
push
inc
push
add
xor
push
inc
outs
popa
inc
xor
jo
arpl
push
push
pop
inc
cmp
xor
xor
pop
pop
inc
jb
dec
outs
jbe
xor
inc
push
xor
push
inc
xor
dec
addr16
add
ins
xor
push
ss
xor
jbe
pop
add
xor
bound
inc
cmp
dec
jp
jo
imul
ins
push
jo
push
imul
pop
ins
add
push
inc
arpl
outs
dec
inc
xor
inc
xor
outs
jns
jb
arpl
add
outs
inc
push
bound
push
gs
jo
add
inc
inc
dec
push
push
inc
cmp
bound
js
jo
aaa
dec
inc
ins
jb
gs
bound
inc
arpl
dec
bound
xor
outs
inc
jne
push
aaa
xor
outs
dec
pop
dec
fs
inc
inc
add
xor
push
imul
ins
js
addr16
jns
xor
dec
push
push
inc
add
ss
dec
ins
inc
jae
jae
push
push
ss
push
jae
ins
xor
cmp
add
je
inc
jo
jb
inc
xor
add
jbe
inc
inc
dec
push
jo
dec
add
push
jns
push
push
xor
imul
add
push
pop
push
push
add
inc
push
xor
ss
xor
push
dec
jp
data16
bound
imul
add
cmp
jae
inc
push
dec
inc
xor
push
inc
add
inc
gs
dec
push
ins
imul
dec
pop
bound
inc
push
dec
push
push
add
push
push
xor
push
jns
push
pop
push
xor
add
push
jo
jns
ins
arpl
inc
bound
add
inc
xor
inc
xor
inc
push
fs
add
imul
xor
push
push
inc
aaa
jb
jbe
jno
pop
add
xor
jne
jo
jne
inc
pop
xor
cmp
push
push
inc
xor
dec
inc
data16
push
inc
push
add
dec
bound
inc
inc
xor
xor
dec
dec
imul
dec
push
push
add
push
aaa
arpl
inc
dec
imul
inc
push
addr16
add
ins
ja
push
inc
pop
push
ins
jne
jns
xor
ins
inc
jns
imul
xor
bound
jns
push
add
push
imul
add
jo
ins
jae
jne
push
arpl
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
gs
jb
jo
imul
imul
jne
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
jae
ins
bound
imul
imul
jae
gs
bound
imul
outs
outs
inc
je
jb
bound
add
jbe
jb
imul
inc
outs
fs
je
jb
bound
add
jae
gs
cs
arpl
imul
pop
push
add
jae
je
add
add
add
jne
jb
imul
add
jb
jns
jo
je
outs
add
jb
popa
add
push
add
jns
ins
add
add
add
arpl
inc
add
add
jb
imul
ins
add
pop
inc
add
add
je
add
add
jb
jns
jo
je
outs
add
add
jae
je
add
add
add
ins
add
arpl
je
imul
add
jb
outs
add
add
je
jns
dec
add
data16
add
push
add
je
push
add
ins
add
add
pop
push
add
jae
je
add
add
add
jne
jb
imul
add
jb
jns
jo
je
outs
add
jb
popa
add
push
add
inc
add
jns
jo
je
outs
add
add
outs
add
data16
jb
ins
add
daa
push
add
popa
add
jae
data16
jb
ins
add
imul
ins
add
ins
add
arpl
imul
or
outs
add
je
push
add
jae
je
add
add
arpl
je
imul
je
outs
add
add
add
je
add
outs
add
je
popa
add
arpl
add
das
push
add
jae
je
add
add
add
add
add
outs
add
add
add
add
add
or
ins
add
add
add
add
jae
je
add
add
add
outs
add
jb
arpl
add
add
add
outs
add
jb
arpl
add
popa
add
popa
add
add
add
pop
dec
jge
cmp
and
dec
xor
dec
push
dec
sbb
and
dec
inc
dec
arpl
dec
jne
jl
xor
dec
dec
dec
cmp
dec
adc
dec
add
jae
je
add
add
add
ins
add
arpl
je
imul
add
jae
jae
add
bound
ins
add
add
inc
add
je
inc
add
add
jne
je
imul
inc
add
jae
add
bound
ins
add
add
inc
add
je
dec
add
push
add
je
add
dec
jp
jae
imul
jb
inc
dec
adc
dec
bound
dec
sbb
dec
or
dec
push
dec
pusha
dec
or
dec
sbb
dec
push
dec
jle
cmp
dec
pop
dec
pop
dec
xor
dec
or
dec
sbb
push
dec
cmp
dec
jge
jg
pop
dec
sub
dec
and
dec
addr16
pop
dec
outs
dec
inc
dec
pop
dec
jp
sub
dec
dec
and
adc
dec
dec
dec
pop
dec
push
dec
add
dec
sbb
dec
inc
dec
arpl
dec
ja
addr16
inc
dec
ja
and
dec
cmp
ds
add
dec
push
ds
jl
add
dec
cs
xor
dec
push
dec
ds
add
dec
sbb
dec
jle
push
adc
dec
pop
dec
and
dec
dec
or
dec
adc
dec
jbe
jo
sub
dec
push
dec
cmp
dec
add
push
add
jae
je
add
add
je
jb
imul
pop
add
add
inc
add
je
push
add
ins
add
add
pop
push
add
jae
je
add
add
add
jne
jb
imul
add
jb
jns
jo
je
outs
add
jb
popa
add
push
add
imul
add
add
add
outs
add
add
add
pop
dec
add
jns
add
add
dec
add
popa
add
adc
je
jb
jns
push
add
imul
add
push
add
jae
je
add
add
add
ins
add
arpl
je
imul
add
add
add
add
outs
add
outs
add
or
jbe
outs
add
add
or
popa
add
add
add
pop
mov
stos
jge
adc
push
add
add
mov
pop
push
sbb
mov
add
add
add
sbb
or
add
or
or
add
sbb
sbb
sbb
sbb
push
add
sbb
sbb
add
add
add
pop
adc
push
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
adc
adc
sbb
push
pop
push
adc
sbb
sbb
adc
sbb
push
sbb
sbb
pop
add
add
sbb
add
or
sbb
and
adc
adc
add
adc
push
add
add
add
and
push
push
and
sbb
sbb
sbb
or
and
sbb
add
add
push
or
add
xor
and
add
sgdtd
or
inc
ins
push
imul
sgdtd
or
arpl
cmp
imul
add
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
or
ja
aaa
dec
imul
or
xor
cmp
add
add
add
or
add
or
add
add
sgdtd
or
xor
jne
inc
add
adc
add
cmp
cs
cs
xor
cmp
add
sbb
jns
je
ins
cs
arpl
imul
imul
cs
arpl
imul
jae
imul
imul
ins
jae
outs
jb
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
imul
gs
imul
outs
outs
add
add
lods
retf
into
retf
add
add
ror
add
add
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
