inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
jmp
xchg
jmp
adc
mov
scas
xor
add
mov
add
arpl
xchg
xor
add
sub
mov
add
jl
or
daa
int
inc
inc
jmp
mov
or
shr
jmp
in
pop
sub
dec
xor
add
or
jmp
add
cmovle
daa
xor
add
xor
sbb
add
lods
jmp
jg
sbb
jmp
test
ss
lock
add
clc
hlt
jmp
or
fnstenv
or
(bad)
sub
or
add
sub
jmp
xlat
xor
icebp
jmp
test
jmp
add
xor
add
jno
pop
mov
jl
or
cli
push
icebp
jmp
or
add
xor
add
xor
add
or
mov
in
xor
add
add
sub
or
sub
enter
or
mov
push
xor
add
xor
add
xor
add
jmp
jns
xchg
xor
add
mov
jmp
ret
cdq
fs
mov
xchg
sbb
mov
imul
xor
add
xor
fucomip
test
bound
pop
xor
add
in
sub
mov
pop
ret
push
mov
sub
mov
mov
push
call
lea
sub
mov
call
jmp
mov
mov
mov
call
mov
pop
ret
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
movzx
cmp
je
mov
mov
jmp
mov
mov
add
mov
mov
cmp
je
mov
jmp
mov
add
mov
mov
cmp
je
mov
add
mov
mov
mov
movzx
cmp
je
mov
mov
movzx
cmp
je
mov
jmp
mov
add
mov
mov
cmp
je
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
mov
pop
ret
push
mov
sub
mov
mov
mov
mov
movzx
mov
mov
movzx
mov
sub
mov
cmp
jne
mov
cmp
je
movsx
mov
cmp
je
mov
mov
add
mov
cmp
je
mov
cmp
je
mov
add
mov
jmp
mov
mov
pop
ret
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
cmp
je
mov
jmp
mov
push
lea
mov
push
cmp
je
mov
cmp
je
mov
cmp
je
mov
mov
cmp
jae
mov
mov
add
push
mov
mov
push
mov
call
cmp
je
mov
add
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
jmp
mov
add
mov
cmp
je
mov
push
call
cmp
je
push
cmp
je
mov
mov
mov
add
mov
cmp
je
mov
mov
cmp
je
mov
mov
movzx
mov
mov
mov
add
mov
cmp
je
mov
mov
mov
mov
add
mov
mov
cmp
jne
cmp
je
mov
mov
cmp
je
mov
mov
mov
mov
mov
cmp
jae
mov
mov
mov
mov
add
mov
cmp
je
mov
cmp
je
mov
mov
mov
lea
mov
mov
add
mov
cmp
jne
mov
jmp
mov
mov
add
cmp
je
mov
mov
mov
add
cmp
jne
mov
mov
mov
jmp
mov
add
mov
jmp
cmp
je
mov
mov
cmp
jne
mov
mov
jmp
mov
add
mov
mov
sub
mov
jmp
mov
mov
pop
ret
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
push
call
lea
push
mov
mov
push
call
cmp
je
mov
cmp
je
mov
mov
jmp
push
call
lea
push
push
push
push
call
mov
mov
mov
cmp
jne
mov
jmp
push
call
mov
mov
jmp
mov
add
mov
mov
mov
add
cmp
je
mov
mov
xor
mov
mov
cmp
je
mov
mov
mov
add
cmp
je
mov
mov
cmp
jae
cmp
jb
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
cmp
je
mov
mov
jmp
push
call
mov
mov
mov
push
call
cmp
jne
call
jmp
mov
jmp
mov
mov
pop
ret
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
call
add
push
push
push
call
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
push
call
mov
add
cmp
je
mov
cmp
jne
push
mov
mov
push
mov
call
mov
mov
cmp
je
add
mov
cmp
jne
jmp
mov
mov
mov
add
mov
mov
jmp
mov
mov
mov
mov
cmp
jne
cmp
jne
or
jmp
mov
mov
mov
mov
mov
pop
ret
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jbe
movzx
mov
cmp
je
movzx
cmp
je
mov
movzx
cmp
jle
movzx
or
mov
mov
cmp
je
mov
mov
movzx
cmp
jle
mov
movzx
or
mov
mov
mov
mov
mov
cmp
je
mov
cmp
jne
mov
jmp
movzx
movzx
mov
cmp
je
mov
mov
jmp
mov
add
mov
mov
mov
mov
cmp
jne
mov
pop
ret
push
mov
sub
mov
mov
mov
jmp
mov
add
mov
mov
mov
cmp
jae
mov
mov
mov
mov
add
mov
cmp
je
mov
cmp
je
mov
mov
mov
jmp
mov
pop
ret
push
mov
sub
mov
mov
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
cmp
jbe
jmp
mov
add
mov
mov
mov
mov
mov
add
mov
jmp
mov
pop
ret
push
mov
sub
mov
mov
mov
mov
mov
mov
lea
push
call
push
push
push
push
cmp
je
call
cmp
je
mov
add
push
lea
push
lea
push
call
add
push
lea
mov
push
lea
push
mov
call
add
cmp
je
mov
push
lea
push
lea
push
mov
call
cmp
je
mov
call
cmp
je
push
lea
mov
push
cmp
je
mov
mov
push
mov
cmp
je
mov
push
call
mov
add
mov
push
lea
push
mov
lea
push
call
add
mov
push
lea
push
lea
mov
push
call
add
cmp
je
mov
add
push
call
mov
add
cmp
je
mov
push
call
mov
mov
mov
mov
add
mov
cmp
je
push
mov
call
mov
jmp
mov
add
mov
mov
cmp
jae
push
lea
push
lea
push
cmp
je
mov
mov
push
lea
mov
push
lea
push
call
cmp
je
mov
add
push
lea
push
cmp
je
push
mov
push
mov
cmp
je
mov
mov
lea
push
mov
call
add
cmp
je
mov
lea
cmp
je
add
mov
lea
push
call
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
jmp
xlat
push
lods
lds
and
jg
out
sti
sub
add
sahf
add
add
sub
je
dec
push
dec
inc
dec
jb
dec
ss
stos
sub
xchg
outs
xchg
lock
jnp
(bad)
cld
fwait
pop
cmp
add
mov
add
add
mov
mov
out
sub
bound
lods
imul
sbb
sti
dec
xchg
add
jnp
and
jmp
or
movs
sub
mov
mov
pop
and
cmp
pop
push
test
mov
retf
pop
(bad)
out
fsub
mov
sbb
ret
dec
test
jbe
push
mov
sti
loope
les
xchg
repnz
or
sub
stc
dec
add
mov
loopne
call
push
imul
cmp
ins
enter
xor
xchg
loopne
dec
push
cs
ffreep
jae
loop
add
sti
add
add
push
mov
iret
fcmovbe
fs
adc
xchg
mov
test
inc
out
pop
add
sbb
jecxz
jmp
mov
sub
add
adc
xor
(bad)
push
dec
adc
cmp
repnz
call
mov
xchg
mov
loopne
dec
jb
out
mov
mov
(bad)
add
lock
push
daa
aas
dec
arpl
out
ficom
push
out
jae
mov
mov
and
adc
adc
(bad)
jg
add
call
adc
dec
ss
inc
ror
out
cmp
fmul
mov
(bad)
push
sub
movs
das
enter
popa
jbe
(bad)
mov
retf
aaa
fadd
je
sti
mov
and
jmp
sahf
ins
js
push
or
add
fcomi
mov
repnz
(bad)
lods
push
cwde
inc
iret
cmps
push
push
push
mov
cwde
cmp
dec
rcl
mov
lea
jp
or
push
arpl
dec
xchg
adc
and
add
jp
xchg
jle
sub
add
stos
add
in
popa
ror
pop
push
jl
cli
das
add
adc
cmova
ficomp
mov
mov
js
xor
pop
imul
sti
not
mov
add
push
scas
xchg
in
xchg
cs
ud1
das
imul
jb
enter
push
push
push
pop
xchg
add
fs
xchg
push
iret
aam
or
xchg
lds
add
sub
sub
lock
fs
jnp
scas
enter
rcl
sub
mov
sub
std
jnp
mov
mov
add
jb
aaa
je
repz
js
or
out
ja
jle
jno
xor
adc
pop
into
sbb
sbb
pop
ins
lds
out
arpl
pop
ret
mov
sub
addr16
or
pop
data16
(bad)
fcmovnb
sbb
and
lahf
xor
sub
push
or
push
cwde
push
pop
cmp
jbe
cmc
cmp
js
or
dec
les
cmps
mov
call
or
(bad)
jmp
push
cmp
or
sbb
xor
ins
sub
push
ins
dec
cs
hlt
xchg
cmp
dec
arpl
(bad)
xchg
out
sti
sbb
dec
in
ja
xor
sar
movs
xor
cmp
ins
lods
ins
(bad)
popf
cmp
xchg
cli
add
jae
out
sbb
mov
sub
test
stos
repz
add
add
add
dec
lock
mov
sub
rcl
xchg
add
cmp
pusha
push
sbb
mov
leave
rcr
fmul
shl
je
mov
mov
ret
push
mov
sub
and
fdiv
adc
mov
enter
cmps
test
mov
movs
clc
jns
pop
cmp
movs
lods
loopne
ds
stc
cdq
in
mov
ja
iret
mov
push
nop
paddsw
stos
jmp
stos
mov
icebp
jge
shr
jle
sbb
jne
stos
retf
xchg
adc
icebp
and
scas
cmp
popa
das
sbb
test
pop
mov
xor
call
mov
(bad)
fcom
xor
push
leave
fs
movs
mov
mov
fist
pop
sub
(bad)
(bad)
jno
mov
xor
ror
dec
jno
jnp
ja
or
sbb
fadd
mov
fst
js
ror
push
xchg
mov
push
fstp
test
mov
shl
fsub
or
cmp
add
cli
fcomp
xlat
sbb
in
fmulp
(bad)
pusha
ins
clc
cmps
jno
hlt
cmp
inc
les
rcr
neg
pop
jge
aaa
shl
cli
or
cmp
sar
adc
retf
int3
inc
pop
xchg
mov
arpl
arpl
cld
mov
xchg
outs
pushf
add
bound
xchg
ja
aad
fistp
sbb
jecxz
stos
sti
adc
mov
push
enter
out
imul
js
pop
sahf
ret
int3
dec
xchg
xchg
popa
ja
jge
aaa
push
sub
movs
mov
mov
out
movs
inc
and
and
nop
movs
aaa
loopne
or
bound
js
cdq
(bad)
jmp
pop
shl
icebp
into
or
int3
sahf
pushf
test
dec
adc
mov
dec
jnp
push
add
dec
add
outs
sub
(bad)
dec
push
movs
in
mov
pop
nop
clc
out
mov
int
movs
dec
and
stos
fistp
test
add
and
(bad)
stos
mov
jo
popa
cmp
jno
(bad)
sbb
xchg
stc
int
jae
push
add
ss
aas
push
pusha
jl
imul
pusha
add
add
shl
scas
loop
dec
jb
pop
fnstenv
pop
call
addr16
inc
jno
xor
mov
das
fadd
orps
out
lds
pop
mov
add
ficomp
fwait
shl
cmps
mov
or
call
ror
xchg
(bad)
mov
add
out
xchg
(bad)
cmp
mov
jae
pop
fcmovnb
call
pop
retf
or
sbb
push
pop
jg
xchg
mov
dec
iret
aad
out
xchg
pop
stos
je
gs
loope
sub
cld
add
test
adc
mov
lea
bound
out
xor
push
and
aad
std
xchg
mov
sub
daa
inc
jmp
xor
pop
dec
pop
add
in
(bad)
sub
lods
jmp
stos
xchg
das
repz
mov
xor
(bad)
test
loop
xor
stos
(bad)
inc
sub
out
push
sar
js
cmp
add
and
rcr
pop
stc
mov
add
push
mov
adc
out
jg
adc
imul
xchg
in
fist
mov
adc
loope
fwait
xor
into
inc
mov
and
dec
loop
xor
xor
push
test
jno
emms
sbb
imul
aas
not
shr
(bad)
inc
mov
push
jb
fmul
call
into
cwde
clc
mov
je
xor
(bad)
scas
stos
sbb
test
dec
movs
xchg
cmp
add
int
arpl
outs
cmp
push
daa
fmul
mov
xor
and
xlat
into
or
mov
pop
inc
xchg
and
xchg
mov
ret
cld
imul
loopne
out
mov
add
es
inc
xor
xchg
shl
push
enter
stos
xor
aam
mul
lea
ss
cwde
aam
sub
mov
sahf
out
test
adc
retf
xchg
cmp
js
rol
pop
mov
xchg
jl
in
retf
gs
(bad)
mov
test
ins
jb
js
cld
ins
scas
xor
sub
add
xchg
add
add
add
sbb
add
aas
xchg
shl
ret
aas
repz
jmp
xchg
lea
xlat
cmp
test
lahf
xor
mov
push
aad
daa
movs
test
sbb
cmp
jmp
xchg
or
cld
inc
mov
add
out
into
ss
sbb
out
cwde
enter
dec
inc
push
js
test
jle
fs
clc
popf
(bad)
xchg
dec
bound
stc
(bad)
not
pop
jae
imul
retf
nop
xchg
shl
mov
add
cmp
pop
adc
and
mov
aaa
jmp
push
movs
pop
jecxz
sahf
mov
pop
hlt
dec
mov
push
(bad)
(bad)
pop
dec
shr
sbb
repnz
repnz
out
repnz
jecxz
(bad)
cmps
ror
xchg
pop
je
push
repnz
inc
pop
adc
push
and
aaa
ja
and
int3
adc
int3
arpl
xchg
ja
loopne
popa
fcomp
ss
jbe
loop
int
adc
sub
jge
popf
add
cmp
out
in
inc
sti
std
or
out
fstp
mov
stos
imul
call
mov
adc
leave
add
add
sbb
add
in
jp
jge
call
and
cmp
sub
mov
inc
gs
sub
sub
ins
mov
fild
pop
push
push
xor
mov
lds
sbb
xchg
rcl
jmp
dec
das
mov
sar
mov
ins
icebp
mov
test
push
movs
arpl
sub
call
fs
cmp
scas
jg
sbb
pop
data16
cwde
push
sub
add
lods
dec
mov
xchg
inc
jns
cwde
hlt
xor
fs
loop
es
add
js
push
add
sbb
sbb
(bad)
ret
outs
mov
inc
arpl
cmps
pop
mov
xor
jb
mov
xor
mov
retf
mov
imul
(bad)
xor
clc
and
mov
cld
dec
add
or
or
hlt
jno
stos
ret
in
xchg
(bad)
dec
inc
jp
adc
xor
fwait
xchg
sbb
je
cmp
inc
lds
or
mov
mov
push
in
push
push
inc
cmp
es
shr
cmp
cmovns
aad
icebp
cmp
sbb
add
setno
pop
jnp
shl
jae
xor
nop
adc
dec
xor
imul
imul
or
dec
and
push
fwait
movs
aas
and
sti
add
mov
mov
add
mov
push
jno
sahf
cmp
mov
sub
leave
push
fs
in
jecxz
pop
not
or
add
cdq
cmc
sub
dec
xchg
and
ret
jg
add
mov
adc
pop
ins
setg
sub
add
push
and
ss
cmp
dec
sti
cmp
lahf
movs
cmp
fisttp
mov
push
sbb
cmc
push
aas
lods
pop
xchg
in
pop
fst
les
sbb
xchg
adc
push
repnz
dec
scas
ror
mov
pop
push
popa
jnp
je
repnz
movs
jne
push
and
fneni(8087
push
std
outs
or
pop
mov
ins
sti
add
fdiv
mov
pop
popf
xchg
push
stos
je
nop
out
out
push
sbb
xchg
sub
sub
bound
pxor
jmp
sbb
ficom
jns
and
add
pop
sbb
stos
xor
fisub
adc
fwait
retf
data16
out
pop
cmps
jl
push
mov
ss
mov
xchg
mov
add
add
test
adc
hlt
mov
lods
ins
(bad)
lock
mov
cdq
fcmovb
das
aaa
retf
push
xor
cmps
inc
push
hlt
jbe
inc
scas
rol
or
jmp
push
cmps
out
pushf
jns
pop
xchg
outs
fwait
sbb
fisttp
std
sti
pop
nop
int3
mov
fimul
xor
fisubr
xor
sbb
jmp
stos
test
xor
inc
hlt
iret
out
and
into
cmp
stos
cmp
jmp
dec
push
jecxz
mov
test
and
rcr
call
dec
adc
sahf
adc
mov
sub
adc
das
and
scas
pop
xchg
ret
cwde
pop
push
adc
cdq
fcmove
fmul
xchg
pop
adc
lods
mov
out
push
imul
push
dec
ds
dec
or
gs
mov
jbe
shl
fst
or
clc
cmps
leave
mov
mov
sahf
aad
daa
mov
bound
sti
push
xchg
les
and
les
inc
sbb
mov
aam
push
adc
popa
xchg
sub
pop
test
in
(bad)
mov
jbe
inc
test
mov
lock
push
in
clc
xchg
cmps
jmp
pop
js
jae
pop
mov
push
inc
in
or
cmc
lahf
push
shl
adc
adc
adc
ficom
(bad)
mov
push
sti
cmp
pop
outs
adc
push
and
and
scas
stc
arpl
aas
mov
in
in
pand
mov
and
(bad)
jmp
mov
jl
das
jg
cmp
movs
jns
cdq
cdq
out
and
imul
jbe
je
adc
(bad)
movs
push
fmulp
mov
stc
mov
pop
xor
and
in
pop
imul
vpacksswb
mov
into
jg
cmp
pop
ds
xlat
and
or
fsub
std
aas
sbb
pop
sahf
xchg
jmp
fwait
and
jg
adc
data16
jae
add
dec
adc
sub
sbb
pop
push
pusha
mov
mov
or
aad
clc
inc
aam
jnp
scas
(bad)
adc
pop
stos
ins
mov
ffree
sub
jns
cmp
enter
cdq
pop
int3
jmp
fsub
lods
and
or
and
mov
retf
fidiv
dec
or
dec
add
out
fnclex
xchg
cmp
bound
(bad)
pop
loop
sar
addr16
push
jge
mov
cmp
fscale
cwde
push
aad
data16
pushf
shl
adc
mov
sbb
shr
int3
shr
daa
dec
icebp
js
in
jp
fwait
cli
add
jp
push
xchg
sub
pop
adc
sar
inc
stc
adc
and
loop
xor
or
fild
push
aad
lock
ror
inc
cmps
cmp
xchg
mov
mov
sub
ss
push
jno
ret
pop
inc
hlt
test
outs
imul
push
(bad)
cmp
rcr
add
inc
pop
add
repnz
add
add
mov
or
inc
push
test
fild
fidivr
pop
xlat
xchg
aas
mov
inc
les
sbb
mov
(bad)
push
pop
xchg
and
lods
in
and
mov
sbb
and
push
adc
dec
mov
lea
movs
ja
add
or
lahf
pop
and
int
xchg
movhps
mov
stos
sbb
mov
ret
cmp
pop
sbb
push
sti
fadd
mov
js
or
sub
fldcw
(bad)
jmp
addr16
pop
bound
dec
xor
mov
cmp
sub
and
(bad)
pop
xchg
movs
shr
sub
sub
xchg
add
call
pop
sahf
aam
sub
xchg
sub
adc
xor
mov
adc
cld
ja
sub
xor
fsubr
push
dec
pop
scas
push
sbb
adc
adc
lods
hlt
imul
call
push
es
je
sub
retf
mov
dec
inc
mov
jns
lock
mov
sbb
mov
xchg
in
cmp
cwde
cmps
cmp
xchg
retf
stos
pop
lods
ret
or
rol
(bad)
repnz
gs
aad
xor
push
jne
ret
repz
mov
fiadd
mov
mov
aad
div
mov
cmp
push
xor
ss
enter
xchg
int3
sbb
and
push
push
mov
pushw
out
xchg
int
stos
cdq
data16
jmp
mov
mov
movs
pusha
loop
dec
sbb
add
pop
mov
push
dec
fcom
xlat
dec
jb
dec
fst
jmp
pop
xchg
pushf
xor
pop
jae
mov
push
inc
sbb
jb
gs
std
out
sti
push
jge
dec
fmul
dec
pop
or
xchg
movs
mov
xor
ss
sub
and
dec
es
popa
and
xchg
ja
ret
shr
out
sbb
xchg
rcl
jmp
cmp
call
pop
test
push
outs
int3
inc
and
mov
mov
jb
popa
stos
cld
sub
lock
or
call
xor
mov
push
ins
sti
pop
test
dec
in
pop
rol
test
daa
dec
(bad)
jo
dec
test
in
ffree
std
jns
icebp
dec
fistp
jecxz
push
ds
and
sub
imul
loop
retf
test
push
sbb
mov
pop
(bad)
iret
adc
jl
icebp
pop
push
clc
jle
(bad)
cli
jb
aas
mov
outs
js
sub
pop
lea
cmps
jmp
add
pop
mov
call
idiv
in
add
out
dec
dec
test
retf
clc
data16
push
sbb
inc
sbb
and
xchg
in
mov
das
xchg
cmps
pop
adc
sbb
cdq
dec
out
jmp
cmp
test
mov
inc
jb
sbb
arpl
dec
sbb
add
int3
out
mov
in
movs
icebp
mov
ret
pop
mov
cdq
repz
push
pusha
mov
push
outs
stc
out
add
adc
stc
lahf
pop
cmp
lods
or
aaa
sbb
out
mov
pop
das
or
pusha
jle
fistp
or
add
cmps
jl
enter
push
out
jge
(bad)
in
adc
sahf
fwait
and
out
(bad)
cdq
push
jae
scas
add
xor
sti
js
jecxz
shl
mov
push
cli
xchg
popa
jns
das
push
aad
rcr
mov
cdq
ja
lods
mov
pop
sub
mov
and
push
jb
cld
retf
pop
push
dec
repz
xor
test
pop
mov
dec
mov
in
mov
call
jno
xor
push
mov
cmp
inc
jp
cmps
in
outs
rcr
push
adc
pop
push
push
mov
xchg
out
stc
add
mov
mov
and
aad
fs
push
dec
rcr
mov
pop
sbb
arpl
mov
sahf
dec
dec
dec
idiv
jbe
aaa
(bad)
push
in
push
jp
cdq
xchg
mov
cld
adc
in
pop
scas
fistp
mov
xchg
pop
out
jbe
(bad)
out
stos
and
inc
frstor
out
movs
mov
sub
jbe
sub
ficomp
outs
sbb
ds
fmul
test
test
outs
mov
mov
call
mov
das
mov
clc
jmp
inc
xchg
mov
push
add
mov
bound
push
loope
pop
cmps
and
jae
push
test
fs
fdivr
sbb
sbb
push
cmps
rcr
mov
lock
pop
clc
dec
dec
mov
addr16
scas
sub
xor
add
imul
fs
retf
jbe
cs
add
push
push
loop
inc
repz
shl
adc
push
ret
(bad)
cmp
sahf
aad
dec
(bad)
lods
push
inc
sbb
or
sbb
ss
rcr
mov
fld
push
cmp
sub
xor
jp
mov
sbb
iret
pop
(bad)
pusha
fstp
jg
enter
arpl
mov
test
bsf
mov
ins
inc
icebp
jae
inc
call
das
jmp
mov
mov
test
push
in
add
mov
gs
push
outs
mov
pop
xchg
or
iret
ins
add
std
or
rcl
(bad)
and
mov
and
imul
push
or
ror
cwde
aad
addr16
pop
ret
test
and
dec
xchg
inc
or
aas
xor
and
jge
sti
and
adc
or
sbb
mov
cs
cmp
ja
(bad)
inc
test
aaa
js
cmp
mov
or
test
mov
mov
sbb
sub
outs
and
cli
add
add
dec
cmp
lea
sub
cmp
data16
xor
jb
sbb
jecxz
(bad)
sbb
adc
imul
mov
cs
mov
cmps
or
jecxz
xchg
jmp
ret
sbb
icebp
mov
ja
or
push
dec
sbb
mov
aad
stos
pop
cld
adc
jns
and
(bad)
iret
test
cmp
inc
repz
stos
dec
(bad)
sub
dec
mov
jnp
pop
jecxz
and
xor
xor
cmp
pusha
les
shr
and
test
xor
aad
shl
cmc
jmp
mov
xor
inc
jbe
pop
jne
push
cli
jb
xchg
dec
mov
pop
nop
aam
es
push
fild
and
mov
xchg
xor
aaa
cmp
in
mov
mov
mov
or
and
div
lods
jmp
sbb
mov
pushf
pop
mov
jb
jle
in
xchg
sub
test
xchg
sub
add
xchg
xchg
lock
inc
lods
and
xor
cmc
in
lods
inc
inc
sbb
pusha
in
and
cdq
out
fisub
or
scas
call
xor
je
cmps
xchg
aaa
sahf
dec
bound
fwait
nop
scas
xor
xchg
repz
retf
pusha
dec
sub
jbe
or
mov
fcom
jl
push
mov
inc
sbb
and
dec
inc
ins
rcl
out
push
test
add
inc
fstp
movs
std
scas
jbe
or
or
sub
in
xor
(bad)
lock
xor
stos
popa
xor
jge
add
loop
jb
fnstcw
pop
mov
ror
aaa
xor
inc
inc
das
push
and
pusha
pushw
xor
test
(bad)
pop
xor
popf
adc
push
jl
mov
ds
cmp
aad
loope
add
stos
popa
fadd
mov
out
xchg
mov
(bad)
in
pop
xchg
pusha
arpl
ffree
xchg
mov
inc
loopne
(bad)
jo
retf
mov
sysexit
fmul
push
in
mov
cmp
dec
push
cmp
xor
fsubr
or
mov
(bad)
rol
jns
int3
pop
out
mov
outs
cld
pop
xor
adc
jbe
fsub
(bad)
out
mov
xchg
in
sar
sub
(bad)
call
sub
lea
in
jle
adc
or
into
mov
jmp
xor
add
test
mov
jb
dec
cli
cmp
or
inc
in
out
arpl
movq
outs
add
mov
add
sub
add
xor
fimul
jns
arpl
iret
jecxz
data16
adc
jge
xchg
inc
in
or
outs
push
daa
adc
and
lods
xchg
(bad)
stos
xchg
add
js
cmp
xchg
mov
pop
pop
mov
ins
sbb
push
adc
addr16
push
dec
xchg
gs
add
leave
dec
mov
dec
mov
into
mov
out
movs
jbe
fist
xchg
sar
pusha
fimul
jmp
in
sub
stos
int
cwde
aad
aaa
push
mov
clc
push
cs
inc
jns
push
or
pop
std
stc
lods
xor
inc
les
(bad)
inc
cwde
loope
adc
sbb
loop
bound
test
xor
mov
ja
xor
cmps
inc
or
sub
jmp
pop
ror
lods
pop
pop
pop
ss
and
push
retf
and
addr16
sub
inc
(bad)
cmp
jbe
aaa
bound
push
jp
dec
shrd
ja
in
sbb
mov
mov
icebp
xor
dec
stc
mov
call
call
pop
stc
nop
cmp
xor
loopne
(bad)
faddp
mov
push
leave
lahf
in
test
mov
rcl
ins
fldl2t
cmps
jbe
mov
xlat
dec
shr
je
loopne
shr
loope
mov
mov
icebp
mov
mov
adc
add
pop
xchg
mov
lods
mov
and
outs
rol
mov
mov
jnp
fs
mov
loop
das
mov
add
jge
popa
cli
jmp
dec
aaa
add
xchg
pop
jns
scas
loop
sar
jnp
fld
imul
mov
iret
sub
hlt
add
or
mov
sbb
adc
pop
mov
test
ret
xchg
jmp
jmp
xor
xor
xchg
mov
or
xlat
cwde
mov
movs
mov
adc
xchg
mov
hlt
xchg
mov
ja
(bad)
leave
sub
fbstp
xlat
sub
mov
shl
lds
sbb
and
shl
xchg
shl
retf
(bad)
(bad)
adc
sbb
and
(bad)
leave
push
and
lea
cmp
xchg
mov
jge
xor
sti
imul
je
std
mov
add
push
fiadd
add
xchg
push
sbb
inc
bound
push
push
xchg
push
sub
cmp
xchg
loope
or
mov
mov
or
sbb
jbe
es
dec
and
loope
pop
jg
cmp
cmp
jle
mov
fnsave
jae
jmp
icebp
inc
xor
loop
mov
adc
or
mov
stos
and
cmp
cmp
out
xchg
ret
jnp
enter
repnz
mov
cdq
lea
mov
js
pushaw
ds
sub
xor
jnp
movs
repz
jbe
adc
xchg
scas
adc
xor
scas
jmp
push
dec
xchg
xchg
push
test
xor
pop
sub
fs
sub
(bad)
fcom
xor
test
div
push
repz
or
les
dec
icebp
mov
into
test
mov
add
fadd
add
imul
adc
nop
call
push
xchg
adc
mov
(bad)
shl
pop
add
xor
ss
adc
cld
or
xchg
fcmovu
repnz
iret
fnstenv
xchg
jno
jns
(bad)
ret
pop
cli
dec
(bad)
cdq
cmps
and
or
(bad)
push
xchg
(bad)
xor
jecxz
cdq
cmp
imul
and
fmul
push
popf
adc
add
call
(bad)
movs
jmp
mov
aaa
shl
xor
and
enter
xor
sbb
cmp
je
mov
sub
inc
pop
sub
int3
shl
xchg
lods
xchg
fisttp
outs
inc
leave
add
jp
cmc
inc
ins
pushf
imul
mov
xor
(bad)
es
fldlg2
xor
popf
inc
test
stos
push
mov
out
inc
or
jne
push
mov
sbb
les
(bad)
lock
xchg
xor
mov
dec
imul
ja
mov
ins
jl
push
jmp
sbb
test
xchg
ss
enter
mov
xor
repz
inc
sahf
movs
int3
sub
push
or
or
adc
cmp
mov
test
repnz
cdq
das
cmp
xor
int3
pop
enter
test
and
call
imul
mov
inc
sbb
arpl
in
in
pop
mov
mov
or
ja
sbb
ret
call
push
xor
add
cmp
xchg
mov
mov
add
xor
mov
mov
mov
add
enter
adc
inc
sub
scas
(bad)
push
pop
cmps
aad
and
aam
mov
dec
imul
daa
lods
cs
add
pushf
and
mov
pop
addr16
movs
imul
es
sahf
(bad)
out
or
ins
mov
imul
xchg
xor
jp
clc
inc
mov
mov
add
jnp
dec
call
pop
jle
mov
xor
push
add
xchg
rol
inc
add
shl
add
sbb
test
scas
and
cmp
dec
push
pop
dec
mov
imul
xchg
push
cmp
cdq
fbstp
out
icebp
mov
in
nop
xchg
sub
jge
push
in
repz
fild
dec
ins
mov
add
pop
add
dec
and
clc
sbb
pushf
shl
jge
rcl
inc
sbb
mov
dec
cs
sbb
fwait
xchg
ror
into
push
fdivrp
inc
cld
jp
xlat
sbb
out
outs
sbb
scas
jno
pop
hlt
leave
dec
fnsave
test
sti
(bad)
mov
lock
sar
or
cmp
dec
and
int3
fmul
cld
xor
sbb
neg
cmp
adc
xchg
dec
sub
jmp
sar
mov
mov
lods
ss
scas
stc
cmp
das
(bad)
sti
xchg
push
inc
cmp
jg
mov
icebp
jae
xlat
popf
push
jl
shl
mov
nop
cmc
lock
cmp
(bad)
fstp
fs
adc
sub
sbb
dec
jae
lods
xor
test
dec
rcl
rcl
dec
retf
addr16
mov
sub
cmp
push
push
mov
add
rol
pop
and
add
leave
ds
or
not
int3
cmp
lock
rcr
mov
ss
ins
jae
loope
inc
lock
adc
cwde
btc
xor
or
shl
gs
pop
add
neg
sub
lea
rep
pop
imul
call
pop
mov
pop
rcr
clc
daa
mov
les
sub
add
clc
xor
jnp
xchg
inc
pop
aaa
adc
mov
mov
adc
xor
mov
fnstsw
cmp
and
add
ret
xor
leave
ds
into
into
inc
mov
mov
push
mov
int3
xchg
cmp
inc
les
sbb
loopne
dec
push
bound
lahf
jge
mov
inc
nop
shr
inc
inc
ret
mov
push
lds
addr16
inc
mov
push
or
or
lds
dec
fdivp
xor
cmp
mov
xchg
or
addr16
jmp
xchg
(bad)
jnp
les
adc
mov
ret
inc
idiv
mov
pop
sbb
imul
cmp
mov
push
sub
jl
stos
adc
scas
sub
ins
pushf
lock
rol
cdq
hlt
ds
and
out
(bad)
sbb
lahf
(bad)
jmp
out
das
inc
das
cld
push
dec
jl
scas
into
test
push
adc
push
jno
test
nop
sbb
scas
cdq
jns
xor
xchg
xor
(bad)
adc
xchg
mov
es
ja
jmp
cmp
xchg
mov
std
inc
or
fistp
and
and
mov
fwait
sbb
sahf
jnp
add
push
jns
mov
push
rcr
xchg
jno
push
(bad)
and
and
mov
popf
cmps
outs
lods
mov
scas
inc
pop
pop
cli
push
push
adc
mov
cmps
mov
aad
inc
xchg
mov
out
fcomp
out
sub
icebp
test
mov
call
bound
mov
xlat
inc
cli
scas
and
or
mov
and
adc
pop
(bad)
inc
add
lods
pop
jne
call
sub
pop
rcl
sbb
adc
ins
shr
jecxz
mov
loopne
je
inc
jmp
lods
inc
dec
dec
mov
sub
mov
inc
lds
fbstp
add
mov
jmp
or
ror
pop
or
stc
js
leave
push
fsub
shl
xchg
mov
add
xchg
ret
mov
hlt
sub
pop
js
iret
fiadd
enter
jecxz
or
test
movs
sub
add
das
adc
pop
cvtdq2ps
jp
mov
loopne
jne
sub
sub
icebp
(bad)
cld
xchg
fsub
xchg
cmp
hlt
hlt
test
add
lock
shl
enter
pushf
pop
popa
lahf
fnsave
push
mov
(bad)
ficomp
rcr
xchg
dec
push
dec
out
jne
mov
mov
clc
das
jb
out
xor
mov
fdiv
cmp
push
adc
cmps
call
test
inc
cs
in
cmp
aaa
aas
mov
jmp
jmp
jmp
and
push
out
sbb
push
pop
ja
mov
fs
xchg
das
ss
(bad)
into
in
call
sub
xchg
jo
fucomp
mov
fs
jmp
xchg
mov
mov
or
sub
jno
jnp
stos
icebp
retf
push
mov
popf
mov
xchg
stos
ins
lea
xor
rol
dec
ret
mov
jecxz
ss
icebp
adc
dec
jbe
push
pop
xchg
shr
dec
push
aad
inc
or
les
bound
lahf
jbe
adc
jbe
cmp
movs
lods
shr
sti
push
cwde
mov
icebp
daa
outs
inc
scas
mov
add
stc
mov
stos
xor
adc
xchg
mov
loopne
sbb
pusha
loope
inc
pop
fnstcw
icebp
or
stos
call
retf
xor
jmp
add
cmovnp
bt
cmps
movs
test
movs
jae
jbe
mov
or
cs
mov
scas
adc
or
clc
sub
ins
std
ins
fisttp
popa
movs
sub
out
jecxz
mov
mov
(bad)
push
pop
inc
xchg
push
out
jmp
ret
test
mov
lods
sahf
and
jmp
inc
push
mov
inc
les
lahf
inc
ror
push
add
inc
mov
(bad)
sub
fwait
cmc
adc
ret
mov
icebp
frstor
retf
out
icebp
mov
into
pop
xchg
cmps
fs
es
outs
fimul
loopne
stos
mov
repz
mov
mov
shr
popa
cmps
cmps
push
ret
out
xchg
mov
mov
cwde
xchg
cmps
je
xchg
mov
mov
dec
fld
aas
pop
add
loope
add
nop
and
jns
push
xchg
stos
shl
daa
mov
les
cmp
add
ds
mov
(bad)
push
dec
or
(bad)
test
inc
sahf
popa
cli
jecxz
retf
cli
push
and
out
mov
mov
cmp
repnz
das
add
sub
leave
jecxz
popf
or
xchg
sar
pop
ret
and
xchg
push
push
sbb
and
bound
push
imul
fld
out
adc
out
iret
sbb
mov
test
mov
sbb
imul
fiadd
push
push
xor
jmp
shl
scas
pop
and
retf
imul
mov
xchg
test
mul
push
mov
jb
xchg
mov
push
xchg
pop
cmps
jbe
mov
jmp
ja
(bad)
data16
sub
sar
sub
ja
lods
pop
dec
jo
mov
jl
scas
xor
cmp
sar
xchg
shl
mov
or
jmp
pop
mov
mov
cwde
pop
ja
retf
aam
adc
outs
and
(bad)
lods
rcr
js
lea
jmp
dec
(bad)
xor
jge
or
fwait
rol
push
mov
icebp
cdq
xor
lods
push
cmc
push
or
in
xchg
jns
test
ror
shl
push
jl
ja
push
push
xchg
pop
or
call
cld
xchg
data16
into
dec
hlt
dec
add
jmp
test
hlt
idiv
mov
jno
test
fs
pop
mov
mov
pop
aam
jle
adc
out
sbb
sbb
mov
inc
(bad)
mov
mov
fild
jge
sub
loopne
push
sbb
sub
pop
and
lock
loope
or
sbb
cmps
jno
cmp
data16
hlt
mov
mov
fadd
dec
mov
icebp
jmp
test
mov
sti
mov
lds
in
pushf
xor
jl
cwde
sub
and
ins
in
ret
cmc
lods
sti
retf
mov
cmps
sahf
push
cdq
loop
mov
push
lds
add
fstp
push
cmp
ja
mov
lahf
pop
cli
mov
addr16
icebp
xchg
jnp
and
das
jle
xchg
sub
push
or
ds
adc
pop
mov
adc
repnz
ja
mov
xor
pop
inc
dec
add
out
(bad)
sub
sti
or
mov
sbb
aas
mov
mov
sbb
fs
xchg
leave
retf
pop
loop
push
push
xchg
dec
xor
or
sub
push
popf
pop
popf
lock
xchg
and
pop
aas
and
cmp
inc
jmp
fsub
xor
mov
xor
popf
int
xor
mov
pop
sbb
call
aam
shl
inc
jmp
jmp
sub
dec
test
inc
pop
stos
sbb
dec
xor
fadd
not
inc
mov
leave
sbb
lea
fst
push
adc
jo
loopne
fs
int
xchg
mov
out
cs
inc
mov
fbstp
cmp
add
cmps
sar
or
push
xor
jnp
test
sbb
idiv
cmp
(bad)
mov
mov
cmp
jp
mov
pusha
jmp
call
mov
sub
ds
sti
or
jg
repnz
mov
dec
scas
mov
inc
outs
cmp
or
jge
into
mov
mov
pop
mov
fild
adc
dec
adc
adc
mov
mov
dec
repnz
fwait
stos
cmp
repz
ds
cmps
movs
jb
sbb
push
add
outs
xor
(bad)
out
test
arpl
sbb
pusha
mov
mov
pop
jl
(bad)
xor
imul
xor
movs
sbb
movs
push
lahf
out
cdq
cmp
add
stc
ins
je
add
jg
jl
ret
and
out
push
cmp
mov
aaa
fld
cld
retf
push
lahf
scas
add
jle
blsic
jns
into
mov
bound
mov
out
push
dec
inc
sub
out
popf
and
cmp
shl
jg
clc
xchg
arpl
jecxz
cld
cmp
inc
or
xchg
das
sub
daa
fs
cmp
pop
ret
in
fstp
and
mov
mov
into
movs
mov
xchg
(bad)
out
imul
clc
adc
jbe
mov
ret
push
cwde
rcl
sub
loop
cmc
jg
xchg
(bad)
xchg
cmp
(bad)
mov
mov
stos
mov
lods
dec
sahf
mov
and
xchg
jecxz
(bad)
icebp
cmp
inc
out
inc
sub
inc
push
sbb
call
ret
pop
mov
and
ficom
pop
les
(bad)
call
ret
dec
hlt
xor
push
jne
shr
inc
outs
sbb
popa
mov
mov
lock
sub
or
sbb
loope
cmp
movs
and
push
and
fisub
lahf
xchg
push
mov
inc
nop
add
scas
jnp
push
mov
dec
fdiv
cmp
in
cld
jecxz
in
pop
bound
bound
mov
mov
jb
rcr
pusha
ret
adc
aad
sub
neg
or
pop
or
pop
mov
scas
sbb
movs
test
mov
cmp
cmp
test
push
hlt
xchg
mov
loope
pop
sub
xchg
shl
dec
xlat
and
test
cmp
xor
inc
xor
xchg
cli
inc
pop
hlt
xlat
test
sbb
dec
cmp
(bad)
test
xlat
dec
test
das
mov
retf
pop
push
mov
cmp
add
in
pop
pop
mov
stos
fcmove
push
adc
pop
inc
iret
push
das
cmp
and
js
inc
xchg
retf
shl
sbb
sub
jb
(bad)
push
rcl
pop
cld
jne
cmc
add
mov
int3
jo
sub
imul
cmp
jne
jae
das
mov
ja
push
pop
xor
nop
je
and
iret
and
cmp
mov
add
jns
int
jne
(bad)
cmps
jnp
dec
mov
add
add
add
mul
inc
(bad)
movs
outs
mov
dec
retf
xchg
ins
js
pop
mov
sahf
add
pop
cmp
sar
mov
iret
dec
push
or
add
dec
pop
push
inc
add
stc
xchg
or
jle
mov
les
push
mov
add
int
adc
movs
push
mov
xchg
xor
(bad)
dec
jge
dec
stos
add
ja
out
lods
fisubr
stc
push
aaa
scas
aad
lds
dec
jle
out
ret
xor
xor
cwde
fiadd
and
xchg
stc
mul
stos
(bad)
or
daa
mov
pop
jge
add
aad
rcl
mov
push
jno
jp
mov
in
adc
lods
sbb
dec
arpl
retf
je
dec
stos
jns
cmps
cmp
xor
dec
xor
out
inc
cmp
or
pop
xor
mov
int3
ret
test
cmc
xchg
sbb
cmc
bound
outs
in
out
ret
aad
push
retf
xor
outs
rcr
mov
add
add
add
add
daa
xchg
mov
push
jmp
stc
xlat
gs
sub
xor
mov
jne
inc
(bad)
xor
dec
test
outs
imul
mov
push
and
mov
cli
call
inc
push
imul
das
cs
push
idiv
mov
mov
mov
sbb
sbb
cwde
ret
add
cmp
mov
xor
out
scas
pop
out
ror
push
jl
jmp
es
xchg
xor
stos
cwde
sbb
aad
or
add
mov
jge
sub
push
and
fdiv
jne
sbb
mov
cmp
xchg
adc
les
inc
sar
aas
add
mov
xor
jo
and
jle
xchg
cwde
adc
test
icebp
mov
test
loope
mov
aaa
test
es
cli
mov
dec
ins
je
dec
stc
sub
loop
shl
add
sbb
xchg
jno
xchg
shr
ins
jecxz
sbb
jmp
sbb
and
sbb
xchg
pop
sub
aaa
inc
mov
cli
cmc
cmp
mov
xor
iret
(bad)
adc
or
mov
push
jle
inc
outs
iret
sar
pop
lock
cld
push
jbe
mov
inc
es
(bad)
(bad)
mov
or
into
jle
or
pop
leave
or
iret
mov
push
cmps
mov
jp
movs
pop
cdq
xchg
jns
jbe
lahf
or
inc
adc
les
mov
mov
xchg
jecxz
xor
out
adc
and
cli
div
jmp
lea
or
mov
mov
inc
dec
test
icebp
jg
pop
cmp
cmc
fild
push
movs
outs
jno
cmp
stc
pop
scas
or
push
jb
add
jo
enter
sti
push
jmp
inc
mov
mov
mov
shl
lahf
gs
xchg
nop
repz
mov
jbe
(bad)
js
or
inc
data16
mov
adc
pop
or
cmps
fistp
mov
test
add
scas
scas
push
sub
push
jno
sbb
scas
(bad)
not
leave
xchg
pop
jne
scas
sti
and
add
mov
and
sbb
mov
jne
clc
xchg
or
pop
popa
xchg
int3
test
push
ja
cmp
dec
and
jnp
pop
cmps
xor
jle
jmp
aad
int
ror
lods
inc
mov
inc
dec
aas
push
mov
xlat
(bad)
lods
or
sar
fxam
cli
sub
xchg
inc
mov
mov
js
inc
outs
outs
mov
mov
adc
repnz
sbb
xchg
sbb
push
xor
lahf
pop
pop
dec
mov
add
push
jno
aam
jnp
pop
xor
in
sbb
rol
adc
mov
in
xchg
(bad)
push
pop
add
rol
retf
sbb
mov
cmp
mov
push
xchg
dec
cld
adc
(bad)
xor
cmp
leave
jae
je
pop
lods
jae
mov
out
rol
cmp
mov
adc
lahf
adc
adc
sub
sub
xor
or
cmp
cdq
push
bound
and
popa
mov
and
push
pop
gs
jge
inc
fsubr
add
jmp
in
fmul
test
ins
adc
add
xchg
int
std
add
add
add
inc
dec
sbb
mov
outs
lods
je
fchs
inc
aad
adc
sbb
jl
in
stc
or
and
push
daa
enter
cmps
aam
enter
inc
cmp
scas
xlat
leave
adc
in
inc
retf
mov
daa
or
shl
push
out
mov
dec
popa
out
pop
mov
ret
xchg
aam
shl
cmp
dec
(bad)
add
or
cli
mov
cmps
jmp
popf
outs
jmp
call
test
dec
out
ins
add
out
push
rol
xchg
xlat
dec
cmp
iret
pop
int3
mov
and
jae
mov
xchg
xchg
xchg
lods
imul
mul
sub
dec
out
xchg
test
xchg
fistp
ret
sub
jmp
mov
repz
scas
arpl
mov
pop
outs
imul
ins
inc
add
or
or
enter
paddusb
lods
shl
sbb
mov
mov
jmp
inc
int
retf
or
push
jo
jle
dec
inc
push
mov
fimul
mov
in
push
add
sub
mov
scas
sbb
ds
sbb
outs
pop
sbb
ins
cmp
pop
iret
mov
enter
mov
dec
jmp
test
dec
xchg
xchg
jg
push
push
movs
cld
inc
mov
xchg
xor
add
dec
shr
add
sub
xchg
sub
add
add
nop
stc
fisubr
dec
inc
out
mov
test
icebp
xchg
daa
in
add
mov
pushf
adc
imul
movs
daa
add
sahf
out
inc
or
imul
push
iret
retf
adc
push
ss
push
into
inc
pop
adc
cmp
outs
mov
(bad)
jbe
mov
push
or
fbld
repnz
bound
sbb
imul
xor
sub
ds
lahf
push
loopne
stos
(bad)
mov
sub
mov
repnz
jb
xor
xor
cli
pop
data16
loopne
inc
xor
or
mov
mov
jecxz
jo
gs
jbe
lods
dec
adc
lods
daa
neg
add
cmps
xor
push
arpl
ins
fdivr
sbb
shl
mov
jnp
dec
jl
(bad)
xchg
sbb
aaa
(bad)
sub
mov
or
cwde
push
ins
mov
shr
mov
push
fs
into
lods
aas
mov
gs
sti
jno
mov
ds
pop
push
sti
mov
in
sub
dec
test
sbb
push
add
aad
and
adc
mov
not
nop
push
xchg
stc
fnsave
pop
mov
mov
sbb
stos
cmp
push
pop
loope
adc
lock
out
sbb
outs
mov
or
sub
jl
movs
out
adc
xchg
push
lods
leave
rcl
sbb
inc
adc
shr
sub
mov
pop
repz
pop
mov
iret
pop
mov
push
jge
cld
jne
mov
ss
cli
push
push
fmul
dec
sub
jle
aam
in
jns
push
icebp
jns
movs
(bad)
gs
enter
xchg
(bad)
cli
sub
int3
jecxz
xor
xchg
adc
lahf
sti
sbb
fcom
dec
jno
jle
cmp
mov
mov
cmc
pop
shr
ss
mul
je
mov
adc
or
in
jae
test
xchg
idiv
and
hlt
mov
repnz
mov
pop
sub
cld
ja
sub
adc
jmp
mov
test
ror
retf
mov
call
pop
cld
pop
jg
or
(bad)
je
jp
sbb
call
cmp
jmp
pop
cmp
cmp
jg
and
inc
push
(bad)
and
imul
and
test
dec
and
(bad)
xor
int3
dec
icebp
jl
test
ret
and
add
xchg
jns
pop
jb
icebp
or
pop
ss
pop
movs
or
sbb
cmp
mov
xor
out
add
ja
add
hlt
xor
lds
pop
sub
mul
(bad)
and
leave
mov
pop
xor
cwde
mov
fsub
rcr
ins
movq
add
add
add
mov
add
jne
sbb
push
xchg
jp
add
out
adc
cs
inc
stos
inc
dec
ins
pop
mov
cld
sar
inc
lea
adc
(bad)
mov
ins
dec
or
or
ror
repnz
les
aad
xor
mov
mov
lods
sbb
leave
xor
test
pop
lock
movs
or
cmp
cmp
ins
mov
or
xchg
cmps
add
repz
or
movs
mov
fwait
inc
ss
ret
jno
pushf
or
and
cmps
dec
add
mov
call
fild
xor
outs
xchg
mov
adc
cmps
out
or
mov
scas
inc
fs
sahf
mov
(bad)
retf
or
adc
jbe
dec
adc
inc
out
pusha
mov
inc
mov
dec
ins
cmps
loop
ds
es
mov
(bad)
jg
scas
jb
clc
xchg
addr16
sbb
fmul
and
(bad)
pop
mov
adc
mov
push
adc
hlt
jl
es
cmps
mov
imul
jbe
xchg
mov
jmp
and
jbe
shr
or
stos
xchg
inc
ds
fisttp
xchg
jle
mov
jo
and
mov
ret
lds
mov
inc
sbb
(bad)
adc
xchg
pop
(bad)
sub
syscall
xchg
xor
xor
xchg
(bad)
gs
pop
fstp
cmp
and
push
sbb
adc
das
mov
cmp
rcr
xchg
and
fidivr
test
add
pop
xor
vmovsd
and
or
dec
sbb
aad
std
mov
mov
push
mov
jmp
call
or
int
mov
clc
or
adc
setl
and
call
push
out
sbb
pop
std
ret
repz
das
(bad)
xchg
es
ret
cmovo
or
sub
xchg
lods
aad
sub
scas
and
xor
ins
das
stos
ja
or
faddp
mov
cdq
push
push
mov
sbb
cmp
pop
in
idiv
or
std
mov
imul
xchg
mov
jmp
ja
mov
fdivr
pop
lock
in
cmp
jecxz
xor
ret
cdq
out
mov
movs
stc
xchg
sti
mov
jecxz
dec
out
sbb
nop
popf
pop
std
repnz
fist
mov
push
fmul
(bad)
jo
shl
xor
inc
sub
ins
dec
adc
je
adc
aaa
lods
cdq
div
adc
add
arpl
shr
popa
push
(bad)
popf
jnp
adc
push
cwde
inc
imul
pop
mov
push
jb
xchg
jle
pop
adc
pop
mov
lock
fs
pusha
mov
push
out
cmps
pop
test
lahf
or
pop
xor
cmps
sub
(bad)
loopne
adc
push
adc
lods
shl
jp
cs
push
add
pop
add
addr16
movs
inc
dec
mov
ins
add
jl
push
fucom
push
inc
sub
xor
jg
test
mov
xchg
mov
push
ins
loop
mov
ss
aaa
sbb
cs
sahf
jge
dec
xor
mov
mov
lods
enter
jb
pop
cwde
setge
enter
shl
pop
mov
retf
mov
sub
inc
mov
aam
mov
mov
mov
mov
sub
and
das
ret
aad
sub
lods
(bad)
scas
leave
ret
and
test
push
xchg
data16
hlt
lods
iret
or
jecxz
jo
scas
push
mov
outs
or
push
add
or
push
ficom
aaa
fnsave
pinsrw
fiadd
or
mov
(bad)
jp
inc
imul
mov
jmp
movs
push
inc
or
or
(bad)
mov
shl
into
stos
cli
leave
cdq
cmps
gs
popa
sub
sub
xchg
sbb
jp
jge
jno
movs
cmp
and
or
loope
xor
sti
jb
test
std
and
shl
mov
imul
sub
loope
add
pop
sbb
add
sbb
test
mov
(bad)
fdivr
neg
inc
push
imul
fs
dec
js
out
pop
hlt
add
loope
and
into
dec
push
xchg
div
ret
mov
sbb
popa
add
cmp
inc
dec
push
xchg
fcmovnb
aas
inc
jp
sar
imul
sar
orps
add
add
add
cld
mov
outs
retf
push
sbb
sbb
stos
pop
call
mov
popf
jmp
xlat
xor
or
push
(bad)
cld
popf
jmp
inc
in
sbb
sti
ja
int
scas
(bad)
aas
retf
jge
(bad)
adc
push
fisttp
dec
sub
rcr
(bad)
test
jne
(bad)
jo
iret
mov
cli
push
ror
fmul
jns
shl
clc
and
push
frstor
lds
iret
adc
out
inc
cdq
and
leave
and
inc
(bad)
jecxz
xor
fwait
jo
dec
out
fdivr
xchg
sbb
or
push
cmc
adc
sbb
ret
ror
andps
call
sub
xor
adc
js
xchg
xor
loopne
pop
xlat
addr16
push
jp
movs
sbb
mov
neg
inc
call
lods
shl
mov
inc
mov
cs
pop
add
shl
lods
inc
sbb
fcom
dec
cmp
inc
or
pop
sbb
in
out
les
mov
mov
jbe
imul
daa
addr16
in
aad
push
jmp
xchg
stc
(bad)
pushf
xor
test
repz
jmp
xchg
data16
adc
sbb
cmp
outs
cld
stos
fdivr
or
mov
push
xchg
les
pusha
pop
loop
mov
pop
popf
jmp
mov
cmps
xchg
jo
ret
jmp
xchg
sbb
mov
shl
data16
xchg
inc
ss
adc
mov
into
adc
ret
add
add
add
rol
add
and
inc
cmc
ja
dec
int3
mov
pop
lock
mov
nop
push
jb
out
(bad)
(bad)
or
movs
xor
jmp
repz
or
mov
nop
fld
in
fadd
data16
push
add
mov
pop
imul
push
mov
mov
inc
mov
mov
retf
push
movs
retf
sub
ficomp
cs
inc
shl
lods
mov
sti
cmp
fwait
xor
dec
and
xchg
ret
mov
inc
xor
jle
dec
ret
lock
sahf
ja
xchg
add
jnp
xchg
ins
dec
push
dec
dec
mov
xor
pop
or
test
dec
inc
push
pop
inc
mov
sub
pop
retf
sahf
ins
add
mov
fild
ja
fdivr
into
mov
fwait
repnz
cwde
loop
add
lea
std
les
cmp
mov
cmp
jmp
jecxz
sub
inc
mov
test
inc
xchg
cmp
imul
adc
mov
xchg
xchg
pop
test
xlat
push
(bad)
pop
(bad)
(bad)
jmp
adc
test
cwde
pop
inc
or
mov
mov
jns
pop
pop
rcl
sub
test
pop
ss
arpl
gs
js
sbb
jg
adc
xor
mov
test
data16
push
xchg
and
inc
(bad)
sar
out
jnp
mov
inc
xchg
repnz
ins
sbb
pushf
dec
out
das
cmps
js
outs
jle
and
xchg
jle
jp
xlat
stos
xchg
call
hlt
or
stos
test
mov
push
mov
retf
ja
cli
lods
push
mov
nop
ffree
loopne
test
lods
cs
jno
jmp
int
sub
jge
(bad)
clc
ds
push
push
popf
adc
cmps
mov
and
or
mov
stos
dec
xchg
xchg
push
repz
ins
retf
fadd
pop
imul
hlt
pop
inc
mov
into
mov
xor
leave
add
or
arpl
in
lock
push
idiv
push
test
or
call
adc
mov
dec
fdiv
leave
fild
sub
sbb
push
and
lods
dec
aaa
arpl
mov
fsub
cmps
sbb
mov
aaa
adc
and
jb
mov
iret
add
add
aad
repz
dec
and
xor
lahf
test
pop
jge
in
test
adc
xor
mov
jg
repz
ins
pop
xchg
mov
push
adc
mov
sub
sbb
push
pusha
es
popf
adc
xor
mul
nop
and
mov
rcr
xchg
cmc
xlat
mov
sbb
dec
sub
sub
push
popf
fiadd
push
push
movs
jae
mov
or
jmp
jmp
outs
inc
rol
rol
push
xchg
mov
push
clc
push
or
sbb
add
cs
jecxz
push
gs
xchg
xchg
sahf
pop
lods
arpl
mov
pop
fimul
mov
std
push
outs
in
in
lods
adc
out
inc
das
cdq
jge
ja
mov
adc
(bad)
inc
mov
xor
ret
xor
cmc
(bad)
cmc
(bad)
sub
mov
shl
xchg
sbb
adc
(bad)
mov
popf
jg
adc
jmp
jmp
les
inc
and
sbb
xchg
movs
imul
stos
cmp
mov
mov
cwde
sub
mov
pop
adc
inc
push
int3
daa
lods
sub
inc
cmp
push
in
imul
andnps
pop
or
daa
dec
loop
aas
(bad)
(bad)
cmp
xchg
scas
push
iret
cmp
loop
movs
add
daa
neg
pop
loopne
xchg
out
scas
retf
addr16
daa
jno
sbb
push
mov
fdiv
movs
retf
rcl
or
adc
imul
dec
xor
or
cli
movs
dec
sbb
ud0
fmul
mov
cmps
xor
ret
outs
mov
push
cmp
sbb
stc
(bad)
out
jge
les
leave
in
test
or
jg
pop
push
add
xor
mov
jae
int
push
ret
mov
xchg
xor
dec
int3
add
mov
loopne
or
clc
test
push
sub
sub
ret
mov
and
pop
dec
jbe
and
adc
jo
pusha
cwde
jnp
mov
mov
sub
xor
sub
and
adc
adc
jle
loope
test
mov
aas
movs
cli
pop
sbb
dec
pop
or
gs
(bad)
fild
add
movs
cdq
jle
cdq
jecxz
les
sbb
leavew
mov
jmp
jg
sbb
mov
repz
clc
and
push
iret
loopne
jae
scas
test
fsub
scas
hlt
adc
shl
enter
mov
sub
call
rol
mov
mov
adc
retf
jmp
mov
and
data16
lods
repnz
sub
bound
mov
repnz
into
iret
mov
scas
cmps
xlat
jns
inc
push
or
mov
call
mov
adc
(bad)
outs
sti
fsub
gs
xchg
push
inc
and
pop
mov
cmp
pop
ret
push
mov
mov
pop
and
pop
sar
rol
repnz
(bad)
inc
sbb
sub
loopne
daa
pushw
daa
inc
mov
es
loopne
ret
push
add
out
arpl
aas
ss
pusha
in
jae
dec
ins
sahf
inc
ficomp
xor
mov
stos
idiv
sub
cmp
mov
xchg
les
int3
test
sub
mov
ins
imul
stos
push
inc
in
sahf
jg
jno
fidivr
jne
jae
mov
fs
jne
sbb
add
lods
add
cmp
pop
jbe
in
mov
xchg
push
xchg
lahf
xchg
pop
jo
or
or
add
mov
and
push
push
pop
sub
push
mov
lea
ret
cmp
sbb
xchg
push
cmps
popa
sbb
jl
jo
jmp
inc
pop
or
lods
ins
jg
movs
push
jnp
cmp
push
adc
sahf
imul
xlat
cmp
(bad)
inc
xchg
pop
inc
psubd
sahf
cld
pop
pushf
add
push
add
dec
sub
mov
jecxz
(bad)
je
xor
add
add
add
push
arpl
das
xchg
jp
sbb
or
jge
lahf
mov
fmul
jle
aad
stos
jmp
fwait
xchg
lods
aas
sbb
enter
pop
xchg
or
pop
inc
mov
jl
aaa
xchg
stos
icebp
add
push
xor
daa
jo
into
fwait
mov
xor
test
in
lds
mov
mov
jle
pop
mov
dec
idiv
shl
retf
repz
ret
out
add
outs
lea
push
dec
in
jns
iret
sbb
sbb
mov
cld
or
or
(bad)
cmp
scas
jbe
push
pop
dec
in
mov
dec
mov
(bad)
push
int3
test
retf
int3
ja
mov
dec
hlt
cmp
add
aam
push
out
dec
pushf
(bad)
pop
pop
mov
sbb
test
and
ins
ss
inc
cmp
mov
dec
sbb
fiadd
xor
jecxz
movs
test
add
scas
pop
add
cmp
push
push
into
repnz
scas
pop
(bad)
mov
push
jnp
push
lahf
sahf
dec
pop
test
add
ret
fwait
xchg
scas
sbb
xchg
and
sbb
loopne
jmp
pop
mov
test
cmc
xchg
xchg
imul
adc
jge
mov
sub
inc
std
leave
xor
sub
(bad)
ins
aad
dec
fs
pop
sbb
test
das
sub
cmps
and
xchg
fcmovb
test
mov
and
int
and
popa
mov
xor
pop
xor
add
maskmovq
idiv
sub
fwait
xor
aas
pusha
dec
and
push
loope
cs
pushw
retf
xchg
retf
push
inc
xchg
je
inc
gs
inc
retf
mov
add
mov
add
pop
jge
jge
dec
sub
push
imul
and
(bad)
dec
fld
out
dec
mov
leave
stos
cmp
adc
pop
inc
mov
inc
mov
sbb
leave
movs
pop
iret
icebp
xchg
inc
ja
out
out
hlt
add
mov
push
xor
push
xor
dec
std
fsub
xchg
mov
adc
inc
inc
or
test
aas
xor
jnp
inc
mov
test
sbb
clc
mov
jbe
pushf
(bad)
inc
cwde
and
pop
not
es
sub
inc
adc
rcl
and
xor
inc
push
jl
stos
daa
call
xchg
push
jmp
clc
pop
js
push
sbb
push
jnp
(bad)
cmp
fmul
cmps
enter
shl
pop
shr
mov
mov
xor
mov
pop
xchg
test
loopne
or
ins
mov
aaa
mov
in
sub
cmp
das
(bad)
inc
sar
mov
jo
fcmovne
pusha
rcl
ror
inc
push
loop
mov
inc
jb
cld
inc
lods
ror
xchg
mov
push
xor
fisttp
cmps
aam
in
inc
push
out
and
lods
test
loopne
sbb
mov
iret
adc
enter
mov
aaa
xchg
stos
data16
jne
dec
dec
mov
scas
inc
add
scas
sub
adc
(bad)
stc
xchg
pop
xor
mov
pop
ss
scas
xchg
gs
xchg
sbb
cwde
je
inc
gs
mov
mov
inc
in
fs
outs
jmp
xchg
lds
stos
adc
push
push
test
ret
xchg
aad
xchg
movs
jl
ja
mov
outs
out
jmp
repnz
xlat
and
cwde
movs
lods
jl
aam
jns
adc
jnp
das
mov
repz
push
(bad)
and
jp
arpl
in
push
(bad)
add
cmp
mov
mov
(bad)
enter
repnz
push
je
or
ret
push
mov
dec
fs
in
xor
mov
pop
and
adc
push
push
mov
mov
add
sti
add
add
jnp
pop
(bad)
aam
and
pop
sbb
jle
(bad)
jecxz
jmp
push
mov
sbb
and
jb
lods
movlps
sahf
sbb
and
add
xor
jmp
adc
lods
loopne
aam
sbb
push
push
xor
jle
xchg
lods
ins
outs
or
mov
jbe
jbe
out
mov
outs
mov
mov
ins
fstp
repz
sbb
jno
xchg
mov
call
lock
inc
mov
out
retf
dec
daa
xchg
inc
in
xchg
js
mov
sahf
cmp
or
dec
repnz
lods
sub
mov
ret
rcl
fnstsw
rol
adc
fld
pop
jmp
jmp
pcmpgtd
popa
imul
test
pop
xor
stos
jge
adc
pop
add
ret
sbb
adc
jno
sbb
jle
out
das
mov
(bad)
fistp
add
cli
stc
inc
mov
ins
jg
mov
dec
xor
mov
xchg
ret
xor
adc
or
jb
push
aam
cmp
(bad)
sub
ret
dec
or
shr
pushf
sti
mov
mov
mov
mov
mov
inc
mov
pop
mov
push
into
into
cs
fstp
pop
jb
in
shl
push
das
shl
rcr
jo
and
icebp
cmps
pop
xor
or
add
sbb
xchg
lods
sub
cmps
adc
jnp
jmp
ret
and
sbb
cmp
(bad)
cmp
push
ja
and
adc
das
imul
loope
xor
xchg
adc
jb
jno
mov
mov
cmp
pop
sbb
xchg
sbb
or
and
les
push
mov
and
push
jge
bound
inc
nop
pop
jp
fist
adc
dec
rcl
mov
arpl
and
test
xlat
xchg
ret
(bad)
jb
stos
lods
push
fdivr
pop
and
mov
shl
lock
pop
mov
aad
and
dec
mov
popa
fldcw
imul
xor
or
imul
enter
xor
xor
add
and
add
mov
inc
out
movs
cmps
mov
imul
into
sub
ret
(bad)
and
jnp
test
cld
lahf
movs
inc
sti
pop
add
add
add
add
loope
mov
das
jecxz
add
xchg
mov
push
jl
leave
sub
xchg
(bad)
inc
inc
inc
lea
or
and
inc
xchg
(bad)
add
add
xor
mov
sti
mov
es
inc
dec
aad
adc
out
loopne
pop
mov
test
mov
sub
jmp
mov
fucom
test
in
mov
aam
inc
int3
ss
cmp
dec
jb
icebp
or
ret
mov
out
leave
inc
or
pusha
les
mov
jmp
mov
push
sbb
xor
repnz
shl
xchg
mov
push
jmp
xchg
mov
mov
shl
or
loope
(bad)
jns
xchg
addr16
dec
push
aam
jp
enter
jns
aam
adc
adc
aad
inc
add
addr16
dec
(bad)
jbe
mov
dec
mov
fimul
push
mov
(bad)
out
loope
sub
push
push
mov
jnp
and
lahf
bound
test
cmp
repz
rol
or
add
push
leave
xchg
ins
fild
and
pop
jmp
mov
push
and
cwde
cmp
adc
pop
stos
sub
call
sub
and
push
lahf
sahf
in
jmp
lds
dec
pop
add
fsubp
(bad)
and
out
pop
fsubr
ins
clc
lahf
in
push
xor
and
int
enter
pushf
dec
jbe
sub
popf
retf
and
sub
and
jmp
xchg
xchg
std
aam
pop
retf
stos
add
stos
or
rol
push
pop
and
dec
adc
rol
xor
daa
pop
jo
inc
add
scas
movs
pop
sahf
shr
je
inc
xchg
clc
dec
mov
xchg
jle
in
mov
addr16
sub
and
add
push
xchg
mov
aad
outs
lds
sbb
fistp
push
jbe
jmp
dec
push
add
pop
les
stos
jmp
adc
dec
ins
ins
xchg
xor
fild
xor
add
add
add
jno
sbb
xchg
hlt
aas
(bad)
xchg
mov
test
dec
fs
dec
pop
out
and
cmp
mov
xchg
int3
xor
ficomp
and
in
mov
jge
mov
cmp
ds
dec
jp
mov
into
retf
and
cmp
cmp
ins
enter
inc
jl
cmps
and
ret
jbe
sub
sbb
lea
call
imul
ret
outs
jb
cmc
lds
retf
pop
cdq
stc
call
ins
ins
les
test
test
push
xchg
cwde
jb
repz
pushfw
inc
mov
sar
mov
push
cdq
inc
fisubr
dec
mov
push
mov
or
inc
xchg
push
mov
xor
ffree
push
xchg
mov
inc
jmp
cld
icebp
push
cmp
ins
or
or
cmp
mov
mov
add
outs
add
sbb
out
lahf
cmp
es
adc
and
mov
mov
mov
popf
popa
mov
sbb
scas
sti
dec
and
mov
das
sub
xor
inc
jbe
sub
cs
test
jmp
and
or
mov
loope
rcr
leave
into
int3
adc
pop
or
mov
and
push
or
imul
loope
push
push
ja
lock
jl
cmp
jg
sbb
bound
adc
and
es
ja
ret
(bad)
fstp
mov
daa
ret
sub
loope
xchg
out
in
cmp
push
adc
add
mov
lods
inc
cmp
shr
cmp
push
push
test
mov
rol
cs
into
aaa
mov
movs
sbb
sahf
sbb
adc
addr16
fstp
mov
or
fimul
xchg
rcl
mov
jp
sub
mov
mov
jle
sbb
or
ja
mov
pop
ror
std
sub
sbb
xchg
pop
loopne
and
and
jp
adc
sbb
cmp
leave
xor
je
int3
hlt
and
out
xchg
hlt
ret
(bad)
inc
lods
dec
xchg
add
push
out
mov
sbb
int
adc
fucomi
scas
jbe
stos
add
cld
fneni(8087
mov
neg
xchg
sbb
dec
scas
lea
stc
into
or
cmp
inc
add
jmp
loopne
push
(bad)
aam
add
inc
test
ss
daa
pop
push
jle
mov
enter
sbb
(bad)
sub
xlat
test
rcl
imul
or
xchg
inc
into
push
fwait
(bad)
jge
cmc
mov
push
cwde
dec
or
int
sbb
ins
xchg
pop
push
jp
movs
pop
mov
mov
std
js
hlt
aad
jo
or
loop
mov
jne
sub
rol
(bad)
jno
mov
mov
jnp
arpl
inc
je
(bad)
out
std
sub
dec
mov
mov
and
fisttp
and
mov
or
not
push
pop
jb
in
out
shl
pop
xor
sbb
xchg
or
retf
ficom
add
fadd
inc
popa
jne
mov
sbb
jns
jmp
xor
dec
cwde
and
bound
dec
arpl
pop
pop
stc
inc
adc
inc
cmp
mov
je
xchg
push
xchg
pusha
mov
out
sbb
adc
inc
rol
stos
sbb
xchg
out
mov
mov
jo
add
add
push
jns
or
clc
in
inc
and
inc
cdq
push
fs
(bad)
call
add
dec
push
xor
arpl
cmp
fwait
xchg
pop
lods
dec
xchg
or
push
cmp
and
sub
mov
and
adc
jbe
cmps
into
mov
push
popf
sbb
mov
cmp
test
push
xor
imul
inc
pushf
adc
call
add
inc
scas
jns
sbb
inc
movs
aas
frstor
fdivr
repnz
jge
sbb
or
lahf
dec
cmc
push
jb
repnz
pop
or
icebp
xchg
sbb
mov
mov
jecxz
out
out
mov
dec
call
jp
scas
mov
add
add
inc
sub
adc
rep
add
rol
jns
ror
dec
push
jp
jecxz
add
add
add
add
add
and
mov
mov
dec
sti
ss
aad
cmp
out
or
mov
fadd
add
cmp
movs
pop
push
mov
mov
or
pop
push
pop
mov
mov
or
fidivr
mov
(bad)
mov
mov
(bad)
inc
addr16
call
xlat
mov
es
xor
fnstsw
ins
(bad)
in
inc
hlt
jae
xor
cmps
mov
in
retf
aad
aam
mov
inc
movs
pushf
lods
pop
jmp
sbb
test
sbb
pop
inc
daa
dec
sbb
and
xor
xchg
ror
ja
imul
inc
scas
out
sub
xchg
repz
ret
pusha
ins
or
mov
out
lds
data16
idiv
enter
mov
cs
sub
jl
outs
jge
add
jge
daa
test
stos
and
retf
repz
and
xchg
loop
mov
or
xlat
aam
mov
in
push
sub
mov
aam
inc
xchg
mov
into
div
dec
dec
in
bound
sub
jbe
and
jno
mov
fucomip
lock
bound
adc
sub
pop
test
addr16
daa
cmp
mov
pop
mov
and
sub
psubb
mov
sbb
add
adc
or
and
sub
inc
mov
sbb
mov
ret
into
push
jo
cmc
cli
scas
add
mov
cmp
lahf
mov
int3
mov
dec
jmp
test
retf
mov
ret
pop
add
lods
or
mov
fs
lods
mov
mov
jbe
sbb
mov
xchg
in
inc
mov
sbb
inc
(bad)
aaa
xlat
add
xlat
jmp
outs
push
outs
adc
lods
scas
addr16
mov
and
jle
scas
cli
lods
dec
dec
push
mov
sbb
jbe
test
mov
adc
std
inc
adc
sub
mov
pop
les
adc
jnp
dec
inc
int3
scas
ins
dec
inc
xchg
pop
and
dec
test
movs
mov
leave
(bad)
fistp
and
ds
cmps
mov
stc
sbb
inc
shl
dec
jb
popa
rcr
xlat
pop
or
xor
mov
repnz
out
inc
push
sbb
or
add
shl
outs
xor
icebp
dec
test
sub
call
mov
push
fist
and
fisttp
jecxz
(bad)
add
leave
arpl
ret
push
stos
mov
std
addr16
adc
bnd
and
loop
ja
dec
add
add
add
out
push
add
cmp
jle
mov
out
and
mov
sbb
sahf
test
mov
jo
xchg
dec
dec
arpl
(bad)
out
push
dec
inc
jbe
cdq
cld
inc
sbb
pusha
xchg
das
ret
push
xchg
fnsave
mov
les
jb
repnz
test
loop
sbb
jno
retf
cmp
shl
mov
dec
and
sub
out
xchg
xor
push
xchg
and
jmp
xchg
into
fistp
adc
jge
xchg
jb
mov
int3
cdq
push
dec
inc
sbb
sahf
fimul
in
jmp
pop
leave
mov
pop
pop
mov
pop
aas
add
xchg
or
test
cmp
pop
lock
movs
loopne
movs
lahf
sbb
out
into
push
mov
push
out
in
ret
pop
inc
jmp
push
cmps
add
out
jne
adc
das
sub
or
push
sbb
mov
mov
je
aam
sti
sub
pusha
cmp
(bad)
push
aas
dec
iret
inc
mov
and
test
nop
push
adc
add
mov
cmp
jbe
outs
lock
outs
sbb
and
cwde
sbb
sub
add
(bad)
fist
jg
arpl
mov
adc
aaa
adc
das
loopne
(bad)
mov
out
pop
inc
(bad)
adc
or
out
xor
lods
dec
xor
fidivr
outs
jb
inc
mov
daa
test
and
call
dec
pop
lods
xor
scas
cmp
repz
loopne
fs
cmp
push
lods
cmp
ret
in
pop
add
je
ins
jae
loopne
jbe
(bad)
add
pop
fmul
fldenv
not
xor
test
pop
add
mov
pop
inc
sbb
movs
(bad)
dec
leave
jmp
dec
in
sbb
je
stc
test
push
adc
fldln2
mov
ja
cwde
mov
aad
cmp
popf
gs
inc
adc
mov
shl
jae
and
sbb
fsub
cmp
pcmpgtd
test
into
cwde
mov
mov
push
(bad)
outs
test
sahf
adc
mov
std
movs
lods
push
xchg
faddp
mov
pop
cli
out
add
push
jge
pop
call
push
and
repnz
pop
adc
and
nop
sbb
mov
js
cmp
mov
xchg
nop
lods
rcl
in
mov
cmp
leave
xchg
imul
movs
and
lods
repnz
add
(bad)
ja
dec
stc
in
xor
cs
cmp
scas
jecxz
rcl
xcrypt-ctr
cmps
fnstcw
mov
retf
popf
iret
iret
imul
xor
pushf
pop
xchg
cmp
ja
and
ret
inc
jae
mov
dec
dec
inc
sbb
lock
inc
mov
xchg
mov
mov
xchg
mov
shl
mov
inc
arpl
pop
out
jmp
lock
add
rol
dec
push
retf
pop
jmp
je
xchg
dec
fsub
or
jb
xor
add
cmc
data16
aad
ret
popf
push
fistp
imul
stos
pop
add
enter
xchg
dec
sub
aaa
adc
adc
xor
inc
or
xchg
mov
sub
into
(bad)
std
ror
push
cmps
mov
mov
sbb
mov
adc
mov
test
pop
mov
je
aas
je
sbb
add
push
mov
lahf
push
push
or
mov
(bad)
jmp
sub
xor
adc
enter
push
ret
push
xchg
test
les
mov
les
test
in
retf
jecxz
imul
xor
repz
gs
repz
mov
xchg
and
push
inc
fsubrp
sbb
xor
jnp
xor
out
dec
and
xlat
and
jmp
mov
adc
fwait
jle
add
cld
sti
daa
shl
mov
call
add
mov
out
dec
sbb
fld
jmp
cmc
jmp
fwait
repnz
icebp
push
inc
gs
(bad)
pop
and
arpl
mov
pop
sbb
ss
sub
pop
inc
leave
fnstsw
sar
scas
xchg
sub
xlat
sub
adc
mov
fist
inc
xor
mov
aam
fimul
jbe
rcr
mov
arpl
dec
inc
stos
pop
adc
sbb
in
enter
int
push
xor
sbb
xor
test
icebp
retf
pushf
in
and
dec
push
mov
(bad)
ficom
fcom
cmp
inc
test
(bad)
and
call
hlt
mov
push
add
dec
pop
stos
mov
cdq
mov
fwait
test
sti
(bad)
enter
mov
retf
cmps
adc
jl
aad
inc
jbe
lods
mov
ins
add
nop
ja
popf
in
dec
pop
xor
cdq
fild
ss
ja
cmps
cmp
sbb
cmps
sbb
test
ja
ficom
dec
jp
pop
xchg
jns
pop
stc
pop
jns
mov
or
inc
stc
(bad)
pop
xchg
stos
add
(bad)
shl
cmc
stc
leave
in
test
pop
test
jno
dec
cmps
test
js
mov
js
pop
aas
std
mov
rol
daa
sub
dec
movs
or
mov
fld
or
loop
adc
push
mov
mov
xchg
add
add
add
and
(bad)
dec
mov
imul
pop
aam
aas
inc
rol
fstp
std
in
or
gs
fbld
call
dec
xchg
test
cwde
push
pop
pop
xchg
in
inc
xchg
dec
sahf
sti
cmc
push
jns
dec
xor
push
mov
cmp
dec
add
cmp
enter
jmp
jp
sti
cmp
mov
inc
sbb
pop
push
cmps
xor
repz
add
dec
and
sub
add
cmps
lods
ins
inc
scas
xchg
lods
cmp
pop
mov
icebp
mov
fstp
pusha
xor
mov
addr16
nop
rcl
mov
inc
fcomp
mov
add
xlat
push
call
pop
adc
push
scas
ret
push
push
and
into
std
push
xchg
and
mov
and
stos
pop
pop
sub
or
mov
popf
aad
(bad)
xor
outs
scas
(bad)
(bad)
addr16
push
add
adc
pop
cld
add
aad
idiv
bound
push
loope
out
sar
add
outs
push
fiadd
xchg
loop
outs
pop
mov
ins
pop
jmp
fsubr
push
retf
dec
dec
mov
in
lock
pop
retf
ret
leave
call
in
push
adc
xor
das
sar
or
pop
pushf
and
icebp
jge
jb
mov
shl
imul
mov
neg
cld
loopne
es
mov
pop
xchg
push
xchg
push
das
out
(bad)
cld
jl
int
xor
push
add
ss
nop
pop
sbb
jbe
dec
xlat
test
shld
lea
ins
push
gs
(bad)
adc
stc
sub
mov
loope
and
movs
rcl
mov
mov
cmc
cwde
xchg
and
mov
cmp
adc
push
ins
or
mov
(bad)
xchg
iret
subps
sub
lods
jmp
add
dec
out
pop
mov
(bad)
enter
(bad)
leave
and
mov
push
mov
outs
mov
rol
mov
ret
aas
sbb
(bad)
push
(bad)
cli
adc
cld
inc
cmp
sub
push
in
and
add
cwde
fidivr
int3
das
sub
inc
pop
push
mov
femms
iret
sub
jp
cld
jbe
push
leave
icebp
(bad)
pop
add
mov
cwde
sahf
int3
sbb
es
mov
jg
dec
jmp
cwde
out
jl
mov
jmp
retf
sub
imul
js
movs
retf
cmp
add
sbb
imul
retf
enter
xchg
push
cli
daa
inc
and
pop
inc
outs
xor
push
and
jnp
rcl
push
pop
or
mov
dec
pushf
les
rcr
add
gs
push
mov
pop
inc
call
dec
fs
hlt
retw
mov
loope
sub
xchg
xor
push
pop
mov
(bad)
int
and
pop
sub
jg
call
movs
jae
sub
push
and
popf
ds
pop
mov
add
mov
aam
in
daa
xchg
sub
rcr
addr16
iret
aaa
xor
retf
fistp
fadd
pusha
div
dec
fisttp
cs
rcr
xchg
out
cwde
adc
int
js
push
mov
aas
leave
pop
(bad)
xchg
std
rol
leave
push
push
push
cmps
fcomp
add
or
add
xchg
mov
inc
cmp
repz
mov
sbb
aaa
mov
enter
repz
enter
jl
dec
pop
ret
pop
cmps
cmp
out
jle
sub
pop
rol
out
mov
mov
gs
sub
mov
test
sbb
push
sbb
test
dec
into
mov
pusha
(bad)
jmp
sub
ja
push
outs
or
fucomp
sbb
pop
mov
mov
and
push
mov
xchg
push
aam
add
loope
(bad)
jmp
pop
mov
pusha
xchg
mov
loop
xchg
retf
and
mov
clc
mov
stc
add
adc
xchg
xchg
or
retf
adc
sbb
sbb
and
repnz
cwde
jmp
stos
(bad)
cmp
or
dec
jnp
or
jmp
sub
cmp
mov
add
mov
bound
in
rcl
aaa
cmp
push
mov
cmp
xchg
sub
pop
mov
dec
xor
and
adc
mov
js
or
cmp
std
(bad)
cmp
popf
pop
jl
mov
std
mov
imul
popf
fild
mov
and
cmps
sub
pop
dec
xchg
dec
(bad)
xor
(bad)
and
push
and
xor
mov
mov
mov
push
les
mov
pushf
mov
mov
add
in
cmps
jl
mov
and
mov
sbb
sub
test
inc
pop
mov
ret
add
cmp
cmp
test
ja
push
jmp
sbb
fiadd
stos
ins
mov
int3
sbb
je
das
outs
and
fsubr
or
xchg
lods
dec
jns
test
inc
aam
jg
nop
and
push
xacquire
jae
or
xor
add
fsub
jg
jmp
retf
and
mov
or
dec
lds
jp
jl
mov
stc
es
das
shr
or
jge
inc
cwde
cmp
mov
test
xchg
push
in
je
xor
bnd
popf
or
movs
adc
inc
scas
icebp
cmp
sbb
out
sti
pop
shl
mov
dec
lock
sbb
cmp
sbb
cmp
(bad)
daa
test
mov
in
into
and
cwde
cwde
sub
int3
fld
stc
jno
jno
dec
outs
push
gs
push
fisubr
mov
dec
shl
ins
scas
out
gs
xchg
add
dec
mov
xor
dec
and
shl
push
sub
fadd
dec
in
xchg
ins
sbb
cmp
addr16
addr16
test
fst
mov
add
movs
out
adc
je
add
xor
jo
push
fild
movs
mov
(bad)
rcl
cdq
mov
mov
out
add
add
pushf
adc
or
or
iret
inc
fwait
bt
mov
icebp
jns
(bad)
jne
movs
mov
retf
gs
inc
push
dec
mov
or
sub
outs
inc
arpl
jp
jge
add
sbb
cmp
lods
cmp
xor
stos
inc
push
pop
jmp
jne
and
inc
cmc
lea
ja
cmps
ror
sbb
jp
icebp
imul
jnp
stc
pop
test
sbb
js
jge
shr
push
cmps
adc
and
adc
retf
mov
dec
push
push
repnz
mov
arpl
pop
jno
ret
adc
popa
outs
xchg
repnz
push
call
ss
call
je
jmp
popa
xchg
sub
rcl
mov
mov
mov
fisubr
adc
imul
fs
jg
mov
lods
(bad)
jbe
push
test
cmp
dec
dec
repnz
fdivr
sub
mov
dec
push
out
or
push
fs
pop
(bad)
xchg
inc
jae
push
loop
in
push
shl
lods
retf
shl
mov
pusha
and
inc
push
sub
xchg
push
inc
mov
pop
pop
adc
fadd
xchg
into
(bad)
stos
ret
lock
pop
(bad)
cmp
pop
xor
out
push
mov
mov
les
rdmsr
mov
xchg
dec
adc
adc
adc
(bad)
addr16
jnp
cld
mov
xor
iret
cmp
int
and
(bad)
imul
fdiv
loopne
sbb
push
ret
or
mov
clc
icebp
pop
packssdw
fisub
frndint
sub
stc
dec
ret
lds
dec
pop
clc
mov
ret
mov
in
mov
push
cmp
stc
mov
stos
inc
xchg
fwait
mov
icebp
ret
movs
xor
aad
ja
(bad)
pop
jne
jmp
cdq
and
cs
scas
xor
aad
sub
enter
ffree
(bad)
adc
test
pop
ss
loope
cmp
mov
je
adc
mov
mov
sub
pop
add
ret
cmp
mov
ror
ret
loop
ja
and
push
dec
push
jno
scas
test
pop
jno
and
ins
scas
mov
or
ins
in
or
jl
mov
test
or
push
mov
lods
sub
stc
shl
pop
and
inc
jmp
pop
mov
retf
xlat
jge
fsub
enter
and
loop
lods
rcl
iret
mov
mov
push
jbe
jecxz
cs
xchg
mov
out
loop
push
in
mov
mov
push
xchg
cld
out
dec
(bad)
or
add
fs
outs
sub
mov
(bad)
mov
lods
loop
inc
pop
xchg
cmp
xchg
cmps
sbb
mov
or
jo
movs
jb
mov
pop
das
leave
dec
ror
inc
add
outs
jp
inc
cmc
adc
stos
cli
arpl
outs
outs
pop
(bad)
imul
icebp
sbb
jno
or
lock
ret
mov
add
cmps
pop
jne
loope
mov
pop
(bad)
nop
das
shl
dec
mov
cmp
sbb
loop
cmp
shr
mov
shr
in
aam
out
or
retf
stc
inc
ret
daa
adc
mov
jge
in
mov
setl
jp
add
ficomp
jmp
adc
pusha
fsubr
cmp
call
iret
pop
pop
rcl
cmp
mov
(bad)
xor
push
mov
sub
cs
fs
dec
xlat
ss
add
inc
mov
aas
mov
and
cld
push
push
mov
pop
daa
imul
cmp
inc
push
add
push
push
add
sub
mov
add
loopne
push
icebp
mov
and
adc
mov
jbe
push
aam
nop
mov
mov
mov
pop
jb
push
call
aas
jb
out
aam
movs
xlat
std
stos
mov
sbb
mov
scas
in
xchg
stc
sub
jno
dec
lods
push
fdivr
mov
jno
lock
sahf
sar
addr16
mov
scas
pop
(bad)
and
call
imul
xchg
jmp
outs
fmul
jbe
jl
mov
enter
aas
or
cwde
inc
stos
cmc
shl
pop
scas
sbb
imul
push
adc
loope
cld
call
sub
jb
mov
retf
les
not
jb
stos
ss
imul
and
sahf
xchg
sub
fnstenv
pop
push
or
scas
(bad)
fisub
lock
jno
adc
adc
stos
jmp
test
ins
dec
push
in
nop
retf
mov
cli
int
daa
push
pop
arpl
xchg
jb
xor
jmp
push
pop
or
pop
inc
cmps
adc
fisttp
test
adc
addr16
cwde
xor
fwait
pop
xlat
pop
test
sbb
lds
aaa
mov
movs
movs
adc
(bad)
dec
xchg
sub
les
add
dec
leave
pop
pop
int
and
imul
inc
pop
fiadd
push
jne
mov
add
jp
pop
xor
adc
fsubr
and
jne
push
push
dec
bound
ss
shl
adc
aas
and
es
cmp
jne
pop
xor
sahf
ficomp
pop
and
xor
cmp
test
mov
xor
out
xchg
ret
loopne
adc
sahf
mov
ds
mov
mov
out
add
ja
cmc
adc
xor
fcom
outs
int3
call
rcl
cmc
jno
fld
(bad)
dec
lods
fdivrp
sar
push
mov
dec
pop
aas
out
mov
cmp
xor
push
or
sbb
stos
(bad)
loop
fucomp
loopne
enter
popf
loop
int3
ds
dec
in
jae
paddd
fs
int3
xchg
mov
xlat
retf
pushf
rcr
sub
jle
aad
les
aas
out
xchg
mov
xchg
inc
mov
out
add
inc
mov
ror
sbb
mov
lahf
pop
mov
fbld
call
adc
std
enter
push
call
xor
mov
pop
mov
pop
pop
dec
xchg
and
mov
push
(bad)
cmps
outs
fsubr
repz
pop
cmp
or
(bad)
inc
data16
sub
in
movs
cmps
dec
aam
dec
mov
imul
clc
aaa
arpl
shr
lods
aas
iret
jp
(bad)
push
xor
dec
xchg
nop
outs
lea
adc
sub
int
jns
enter
addr16
test
adc
shl
ss
pop
dec
add
mov
sub
pop
jecxz
and
(bad)
hlt
(bad)
mov
scas
in
js
out
mov
sbb
inc
pop
mov
or
cmp
push
in
not
push
xchg
adc
pop
inc
movs
adc
adc
setns
sub
mov
xchg
mov
cmp
shl
mov
jb
jnp
mov
and
push
mov
bound
xchg
xchg
neg
outs
mov
cdq
aam
enter
jbe
dec
mov
pop
mov
shr
cdq
mov
ja
ror
adc
add
pusha
(bad)
repnz
nop
fld
in
fwait
dec
dec
sti
sbb
xor
dec
loop
jl
mov
or
fsubr
push
jo
dec
push
repnz
sbb
jmp
outs
push
jmp
push
and
xor
jbe
mov
not
addr16
add
adc
std
pop
ret
movs
test
sbb
push
dec
seta
repz
xchg
int
inc
mov
rol
es
arpl
add
repnz
push
mov
xchg
loop
test
push
rcr
xlat
push
sub
(bad)
out
pop
mov
daa
mov
push
mov
bound
ret
sub
sbb
dec
test
daa
loopne
fisttp
jne
repnz
mov
cmp
(bad)
popf
fisubr
xchg
mov
mov
push
stos
(bad)
(bad)
mov
pop
pusha
push
inc
in
mov
dec
neg
xor
add
int3
sbb
loop
mov
cs
pop
or
pop
jge
(bad)
xlat
xlat
sbb
xchg
jnp
or
clc
and
mov
and
push
jg
lock
push
pop
out
mov
mov
jb
mov
pop
fldenv
lds
mov
mov
in
xchg
mov
hlt
gs
test
push
mov
(bad)
jb
scas
inc
retf
add
pop
adc
shr
test
jge
sti
cmp
repz
add
pop
mov
inc
mov
pop
xchg
push
cs
pop
inc
pushf
ficomp
mov
outs
daa
lods
jbe
lods
jmp
cmp
push
(bad)
scas
push
data16
(bad)
dec
addr16
fistp
pusha
mov
fs
(bad)
mov
rcr
dec
cmps
imul
and
xor
mov
rcl
pop
scas
push
popf
jmp
retf
push
or
mov
mov
jae
call
mov
and
inc
das
fidiv
sahf
cld
mov
js
add
add
add
add
add
mov
add
les
dec
dec
das
loopne
mov
add
ins
mov
stos
sar
sub
and
mov
scas
or
pop
sub
push
dec
ins
or
pusha
xor
push
std
popf
test
dec
and
cld
scas
lods
pop
ins
(bad)
popf
xchg
mov
sbb
stc
jle
mov
mov
push
push
neg
dec
xlat
mov
push
jge
push
cmp
popf
jns
xchg
aad
in
jae
push
jl
test
cmc
call
xor
js
das
add
daa
getsec
in
loop
fmul
xchg
sbb
pop
jl
sbb
or
xor
push
push
rol
cwde
shr
pop
and
mov
sub
outs
out
and
and
inc
hlt
div
call
or
mov
sti
mov
sbb
and
add
jnp
popf
(bad)
cld
or
rol
jno
int
xor
in
daa
daa
retf
call
fs
inc
and
test
and
mov
add
in
jp
cwde
or
xchg
sbb
cmp
jmp
(bad)
sub
cld
ffreep
xor
neg
xor
leave
je
jb
rcl
inc
ret
mov
mov
out
rcl
outs
adc
mov
xor
mov
mov
cwde
mov
rcl
sub
mov
fidivr
(bad)
sub
outs
mov
hlt
jns
xchg
shr
repnz
inc
add
mov
jne
icebp
out
ret
inc
jns
xchg
test
and
cmp
lea
sbb
popa
xor
daa
adc
popf
leave
gs
mov
int3
cmc
cmp
repz
(bad)
shl
(bad)
xor
popa
or
adc
jmp
mov
mov
inc
adc
mov
inc
sbb
add
add
add
outs
jae
jp
xchg
sub
fsub
lods
sbb
push
mov
jle
push
adc
retf
and
bound
and
cmc
imul
scas
pop
gs
aad
xchg
sbb
xchg
ss
pop
mov
mov
add
push
inc
push
or
mov
les
addr16
mov
mov
mov
inc
(bad)
retf
push
jae
or
mov
(bad)
in
stc
addr16
inc
push
mov
inc
inc
popa
mov
daa
iret
in
push
add
and
mov
and
ret
cmc
fsubr
fcom
inc
or
mov
pop
test
fdivr
dec
neg
sbb
retf
popf
mov
pop
ja
(bad)
pop
test
and
xor
sbb
cmps
xchg
or
in
mov
and
mov
shl
in
adc
movs
adc
into
cmp
mov
mov
not
mov
jge
rol
(bad)
fdivr
icebp
xchg
pop
or
movs
jns
je
jbe
xchg
push
popa
sub
push
cmp
dec
inc
dec
or
sub
push
shld
ss
icebp
inc
or
out
sbb
adc
es
or
js
ins
mov
sbb
push
xor
ret
adc
cmc
mov
pop
test
pop
not
push
push
push
je
mov
xchg
mov
xlat
and
and
or
push
mov
or
cmp
xchg
daa
add
mov
pop
mov
mov
xlat
call
(bad)
push
sub
shr
and
adc
ret
rcr
or
xchg
push
popf
test
lahf
xor
ins
inc
jno
mov
fmul
sub
jns
(bad)
add
loopne
fidiv
iret
hlt
inc
das
loope
add
loope
(bad)
sbb
xchg
cmp
aaa
push
fdivr
imul
addr16
jb
and
retf
std
and
jecxz
adc
jno
or
add
mov
ficomp
retf
hlt
loopne
aad
inc
sbb
hlt
and
xchg
inc
test
call
sahf
repz
lds
jno
dec
jo
stos
ror
cmp
sahf
jmp
jne
sub
cld
clc
push
xor
out
sbb
stos
js
adc
pop
add
iret
inc
cmps
leave
imul
pop
adc
jbe
jne
(bad)
xor
adc
gs
push
dec
inc
jo
inc
(bad)
xchg
aas
lods
bound
mov
cwde
and
cmp
aad
add
xchg
sub
push
jle
or
mov
(bad)
dec
cs
jl
sbb
pop
cmp
ins
in
js
adc
or
xchg
mov
and
pop
out
jp
fisttp
xor
cmp
mov
inc
inc
xchg
outs
push
ficom
fldcw
sub
push
sbb
xchg
pop
inc
mov
test
mov
xchg
rol
mov
fdiv
fnsave
dec
add
ss
nop
xor
inc
dec
or
repz
add
add
add
fmul
ja
sahf
ja
and
movs
lods
stc
es
xlat
or
push
add
scas
push
add
mov
push
inc
dec
subps
jg
jmp
sbb
repnz
mov
inc
data16
lods
jle
movs
and
stc
ret
div
dec
pop
xor
arpl
rcl
push
cmc
and
sahf
(bad)
inc
stos
push
test
sti
inc
inc
sub
xchg
cwde
imul
mov
dec
and
jmp
leave
in
lea
ret
scas
push
cmp
mov
inc
add
jge
fbstp
xchg
fimul
sbb
mov
(bad)
ficom
dec
data16
imul
jns
push
sbb
inc
jl
mov
scas
pop
jns
es
cmp
cmp
rcl
xor
sbb
push
sbb
sbb
push
test
xchg
data16
icebp
lds
xchg
je
dec
sbb
lds
inc
daa
add
out
jl
jmp
icebp
aad
push
daa
or
mov
mov
cld
(bad)
fstp
sbb
jne
ret
jns
xchg
int3
mov
in
pop
cmp
test
mov
cs
(bad)
cmp
adc
ss
push
pushf
xchg
aas
ja
jge
inc
adc
div
movs
push
xchg
out
mov
cmps
cmp
bound
push
fist
xchg
sahf
add
fdivr
inc
cmp
ror
sbb
scas
jl
in
xchg
dec
out
pop
dec
in
jne
add
add
sbb
std
ins
stos
in
dec
xor
push
and
mov
call
sub
dec
xchg
cmp
cmp
xlat
lea
(bad)
ror
lods
xchg
inc
pop
jmp
sbb
outs
lds
xchg
push
push
inc
jae
mov
(bad)
mov
lods
repz
xor
jns
bound
pop
int
sub
jmp
scas
push
cwde
jae
mov
pop
loop
in
and
xor
jg
cmp
jmp
mov
test
les
cmp
nop
cmovns
fmul
scas
mov
xchg
frstor
int3
jmp
mov
inc
out
mov
hlt
push
fwait
jb
push
jmp
adc
mov
ins
enter
inc
push
rcr
mov
jg
ret
repz
in
push
in
loope
xchg
repz
sti
cli
cmp
push
xchg
pop
(bad)
sub
mov
sbb
xchg
imul
jns
iret
sub
retf
mov
push
push
test
add
xrelease
test
push
mov
and
adc
xchg
dec
or
adc
xchg
push
xchg
adc
addr16
xchg
pushf
sahf
add
stos
sbb
in
cmp
or
pushf
std
or
jg
jle
dec
jns
mov
out
push
mov
mov
xchg
stos
loop
stos
aad
pop
sti
pusha
push
int3
pushf
jne
fnsave
movs
stos
mov
push
nop
push
jb
jecxz
cmp
xchg
gs
push
jae
stc
clc
or
xor
xor
rcl
shl
and
imul
call
and
cmps
mov
test
fbstp
retf
pushf
loope
and
inc
enter
ficom
and
lock
imul
mov
mov
adc
add
call
jp
xchg
add
push
shl
outs
daa
cmps
nop
scas
xchg
inc
xchg
jmp
xchg
cmp
push
out
(bad)
rcl
rcl
jne
in
xor
xor
retf
pop
pop
add
sbb
aam
pop
sub
test
in
stos
push
xchg
mov
cmp
dec
sbb
sahf
jb
inc
push
mov
aam
and
cmp
ja
loop
sub
push
rcr
mov
and
xchg
cmps
scas
pop
int
add
out
pop
jo
call
and
and
fdiv
cmp
cdq
pusha
out
dec
call
mov
push
xor
push
call
into
movs
sub
jne
push
and
call
loopne
in
mov
fs
add
hlt
push
pop
test
pop
hlt
test
retf
pop
lahf
and
(bad)
mov
repnz
push
mov
pop
xchg
scas
ss
cmps
pushf
int3
cld
xchg
cs
push
sbb
fbstp
add
out
cdq
test
and
mov
enter
dec
test
movs
inc
shr
push
sbb
inc
jmp
imul
rcl
xchg
push
daa
pop
jns
adc
adc
jmp
popf
xchg
push
fnstsw
inc
mov
movs
jge
loope
out
mov
jmp
js
adc
in
cmps
sbb
ret
out
popf
jp
mov
add
xchg
das
scas
jnp
mov
(bad)
call
xor
dec
iret
call
in
jg
clc
jmp
gs
xor
mov
stos
loop
pusha
xchg
shl
sbb
or
pop
jmp
inc
push
cs
outs
inc
nop
(bad)
imul
jle
push
adc
in
ss
pop
sbb
test
jmp
int
loope
sub
pop
clc
cmc
add
pushf
out
retf
data16
inc
imul
jo
cld
movs
push
sub
dec
xchg
sar
adc
mov
mov
pop
ret
cld
mov
cmp
push
aas
cmp
sbb
push
(bad)
gs
pop
lds
call
inc
outs
add
xor
xor
mov
pop
bound
adc
mov
lods
arpl
mov
and
movs
(bad)
cli
(bad)
bnd
inc
jl
cmp
stos
repz
xchg
xor
loop
add
add
lock
sbb
mov
mov
mov
aas
add
fisub
fwait
xchg
add
pop
push
add
cmps
inc
xchg
in
mov
pop
repnz
mov
add
add
add
add
add
ds
ror
clc
add
or
pop
ins
loope
fwait
popa
shl
out
pop
push
call
fimul
pop
jns
inc
(bad)
push
rol
mov
test
outs
mov
test
cmp
pop
out
loop
(bad)
fsubr
push
push
dec
mov
out
push
pop
push
push
(bad)
stc
mov
adc
or
mov
mov
or
cli
push
mov
or
pop
call
jl
imul
push
push
popa
cmp
ds
ss
shl
fs
dec
cmc
repz
test
sbb
test
call
test
retf
mov
fisub
ja
push
call
mov
addr16
xchg
(bad)
sti
leave
pop
cmp
(bad)
add
pop
cli
push
push
inc
test
fisttp
sub
xchg
cmps
movs
mov
mov
ja
stos
mov
dec
rol
mov
arpl
xchg
popa
stc
and
pushf
push
enter
add
add
push
add
add
add
(bad)
push
mov
leave
imul
jge
jnp
or
repnz
ror
test
inc
cmp
mov
das
rcl
or
sub
lahf
sti
xor
xchg
es
jg
shl
rol
sub
mov
mov
clc
sbb
scas
ins
(bad)
mov
xlat
test
fdivr
cmc
xchg
inc
ret
cdq
cli
retf
inc
shl
push
lods
xor
aad
sub
or
test
xor
cmp
inc
ds
test
imul
jmp
int3
imul
into
fnstsw
test
push
add
int
jmp
inc
repnz
ins
jmp
mov
pop
xchg
mov
dec
lds
jbe
cmp
jg
ret
cmp
mov
jge
adc
dec
xor
pop
test
cdq
mov
sbb
fisttp
sbb
pop
ret
or
push
inc
sub
jno
js
sbb
hlt
or
pusha
pop
popf
daa
xchg
shl
xchg
jns
ins
hlt
into
push
shl
xchg
sbb
add
jb
inc
push
add
mov
ds
pop
xor
int
xchg
rcr
pop
mov
out
sub
call
add
xor
cwde
ret
hlt
add
sub
and
mov
lock
xor
das
leave
arpl
mov
jmp
arpl
test
cmps
call
xchg
frstor
fcmovb
xor
dec
mov
cmp
fistp
out
das
repz
(bad)
imul
scas
cmp
push
mov
lock
cmp
xlat
sbb
jb
in
jmp
cmp
fnstsw
leave
ins
xor
loop
mov
or
add
das
xchg
into
jno
pop
jp
adc
xor
or
mov
test
cmp
stos
xchg
or
and
inc
call
jp
(bad)
fmul
les
xchg
and
outs
adc
sahf
lea
stos
mul
pop
mov
fcmovu
pop
mov
push
pop
test
shr
neg
push
xor
fistp
leave
cld
les
iret
shl
lds
sbb
mov
push
mov
out
mul
adc
call
stc
and
daa
xchg
pop
shr
mov
fld
repz
sub
mov
fistp
or
imul
test
arpl
add
sbb
add
iret
fdiv
push
xchg
iret
pop
add
daa
xor
mov
adc
enter
fs
mov
sahf
test
imul
mov
add
mov
lods
push
lds
mov
jne
push
aaa
ror
(bad)
pop
int
cmps
mov
push
fs
xchg
js
ret
mov
push
mov
lea
mov
pop
sub
int
push
cmc
jmp
inc
add
add
add
sbb
adc
jp
and
hlt
push
div
pop
xlat
int
lahf
pop
out
retf
and
push
jl
or
cmp
push
sti
fnsave
pushf
(bad)
cmps
sbb
sbb
mov
cli
cs
(bad)
mov
jecxz
cmp
retf
sbb
or
int
cli
test
loope
sub
sub
xchg
mov
mov
lods
dec
jmp
mov
ins
fnsave
cmp
adc
ret
imul
outs
rol
out
test
xchg
cs
mov
adc
test
(bad)
push
fdiv
cmp
jmp
mov
rol
movs
fcom
dec
jp
jp
fisub
or
imul
repnz
cld
sbb
adc
push
push
data16
in
push
and
stos
sbb
or
cmp
add
cmps
fwait
outs
mov
dec
mov
mov
mov
(bad)
repz
add
xchg
mov
or
inc
add
inc
or
js
jp
stos
jbe
daa
sub
push
xchg
les
add
cmps
pop
mov
jmp
rol
call
and
clc
outs
pop
cs
sub
shr
sbb
cdq
mov
daa
in
movs
clc
leave
adc
pop
pop
test
jnp
jb
sbb
aas
das
or
bound
adc
aas
inc
js
in
aas
mov
fild
imul
mov
mov
adc
add
retf
and
ret
aaa
(bad)
shl
loope
fmul
inc
mov
cmp
mov
sub
(bad)
xchg
pop
sbb
aaa
sbb
xchg
mov
mov
mov
mov
retf
jg
mov
jns
mov
mov
lds
mov
retf
mov
pop
mov
hlt
dec
rol
rcl
pop
pop
into
out
lahf
ret
push
imul
daa
mov
out
cli
inc
imul
mov
outs
outs
jmp
enter
imul
das
mov
adc
std
stos
cmp
sub
fisubr
mov
mov
ror
ret
pop
pushf
mov
pop
pop
push
jno
fadd
add
je
sbb
push
lea
pop
dec
test
cmps
icebp
dec
sti
cmp
pop
das
jne
push
and
xchg
mov
into
or
xlat
pop
fsub
mov
int
ss
mov
repnz
inc
test
cmp
fsubp
and
repz
sti
and
inc
jo
jno
dec
ss
xor
inc
and
repz
cmp
hlt
stos
sbb
repnz
mov
inc
xlat
mov
iret
dec
cld
(bad)
popa
push
repz
jo
add
push
icebp
imul
jg
out
push
inc
scas
mov
pop
das
jp
fidivr
out
cwde
add
mov
or
jp
adc
fwait
or
sbb
xchg
inc
xor
ror
add
add
add
add
add
add
add
js
movs
fucomi
xchg
inc
outs
jle
mov
dec
leave
stos
(bad)
pavgb
lods
je
jmp
(bad)
mov
int
retf
scas
mov
imul
ins
imul
inc
cmp
in
leave
jg
aaa
jns
add
(bad)
or
inc
lods
(bad)
mov
in
inc
mov
and
xchg
mov
imul
loopne
shl
mov
add
in
adc
call
dec
fst
hlt
xchg
(bad)
cmps
call
test
inc
mov
(bad)
cmp
xor
aad
fldenv
in
div
mov
sti
mov
sub
fsub
(bad)
jbe
mov
jge
dec
loope
nop
adc
dec
dec
push
out
mov
xchg
adc
jge
repnz
movs
xchg
jbe
(bad)
aam
pop
add
pop
pop
sub
retf
pop
inc
adc
dec
loop
dec
and
mov
ins
mov
cmps
pop
icebp
mov
and
sbb
call
shl
cmp
pop
push
cmp
jmp
call
jne
cmps
mov
scas
rol
push
frstor
out
(bad)
rcr
repz
sti
cli
jne
ins
mov
dec
in
test
add
xchg
fcom
in
cmp
push
xchg
mov
adc
and
xor
ss
leave
mov
push
sbb
push
mov
popa
or
mov
push
sbb
xchg
xor
aam
dec
mov
inc
scas
mov
sbb
xor
and
ds
sti
mul
(bad)
fmulp
xchg
or
cmp
or
inc
inc
mov
jae
jne
xchg
mov
xchg
add
or
fcom
cmp
mov
in
out
gs
adc
cli
add
xchg
js
xchg
int
xor
vmovhps
inc
pop
std
add
dec
inc
jl
push
popa
cmp
xor
mov
gs
fwait
pop
sub
cmp
movs
sahf
dec
test
aam
dec
dec
nop
popa
add
jb
sbb
aaa
test
and
sar
leave
popa
std
xor
test
mov
and
inc
shr
sbb
xchg
shr
outs
push
jp
loop
or
xchg
cmc
fcmovu
push
outs
nop
dec
dec
enter
cmps
repz
and
pop
icebp
jle
shl
mov
inc
or
outs
ins
add
or
(bad)
jbe
mov
dec
xchg
fst
mov
xchg
xchg
sbb
mov
dec
pop
push
xor
popf
mov
inc
(bad)
aaa
jmp
stos
(bad)
mov
adc
push
adc
aas
retf
test
ror
aaa
jo
add
clts
and
cmps
push
imul
push
mov
aam
stos
mov
in
shl
push
lods
sbb
push
or
dec
into
call
mov
sbb
sbb
scas
add
adc
add
in
add
mov
fwait
inc
mov
cmp
sub
jo
mov
pop
cmp
sbb
sbb
pop
stc
or
cmp
pusha
sub
js
cmp
out
xchg
ror
popf
cmp
mul
sub
jbe
lods
dec
jp
(bad)
mov
or
xchg
cdq
mov
ins
inc
hlt
xchg
push
and
arpl
fsub
enter
out
repz
movs
adc
pop
pop
inc
xor
es
or
xor
pusha
leave
jne
in
adc
mov
imul
(bad)
fdivr
test
adc
push
dec
fst
pop
inc
cmp
inc
ja
xor
mov
sbb
cmp
imul
mov
aam
cmp
lods
or
enter
aas
fld
addr16
hlt
addr16
aam
push
sbb
mov
inc
dec
xchg
mov
scas
jge
mov
xchg
jmp
pop
daa
mov
fs
repz
mov
add
push
pop
xor
test
(bad)
cmp
lods
mov
inc
lods
ret
pop
arpl
mov
stos
push
rcl
sbb
jmp
xchg
inc
add
cmp
xchg
push
lds
mov
out
and
sti
add
mov
sar
push
push
pushw
jg
sti
push
in
popa
stc
repnz
dec
push
add
loop
push
jne
add
clc
mov
add
mov
mov
xor
mov
push
push
sub
pop
ret
mov
xchg
pushf
push
and
outs
and
cmp
pop
mov
mov
neg
cmp
popa
stc
xchg
test
mov
jmp
daa
adc
and
push
inc
(bad)
pop
mov
sbb
mov
mov
dec
mov
inc
mov
in
push
sti
dec
(bad)
retf
movs
xor
ret
sbb
or
and
and
adc
icebp
mov
inc
push
cmp
test
imul
inc
pop
movs
adc
js
inc
jnp
(bad)
xchg
loope
retf
movs
mov
sub
aam
push
sub
iret
gs
xchg
lahf
ss
fld
mov
movs
xor
mov
mov
les
popf
gs
mov
retf
into
lahf
mov
lods
mov
imul
cdq
arpl
inc
push
mov
neg
mov
stos
xor
sub
hlt
(bad)
(bad)
jne
mov
or
mov
sbb
fwait
inc
or
and
or
out
fadd
ret
sub
push
push
and
cwde
fistp
fisttp
and
dec
sti
cmp
sar
push
imul
xchg
cmp
loope
outs
jae
daa
jo
add
lods
jp
xor
ret
xor
add
test
pushf
add
lea
pop
ret
jne
test
push
mov
pop
aad
dec
enter
pop
sub
or
jns
(bad)
int3
inc
mov
(bad)
cmp
sub
cmp
push
cmc
pop
pop
dec
push
mov
cmps
cdq
adc
add
imul
ds
xor
js
or
pushf
or
dec
repnz
inc
mov
dec
mov
adc
pop
data16
inc
movs
outs
dec
pusha
addr16
pop
add
jp
das
xchg
test
mov
jmp
inc
aam
cmp
das
sub
scas
repz
test
cld
mov
daa
inc
movs
xor
fst
adc
pop
(bad)
inc
loopne
int3
int
adc
out
add
jae
lahf
jbe
lods
int
inc
daa
jmp
fst
inc
cwde
and
pop
sbb
gs
das
cmp
mov
out
inc
push
js
nop
mov
inc
aad
jl
mov
pop
add
pop
addr16
fisttp
or
les
fidivr
fsub
test
adc
lahf
call
push
addr16
sub
int
outs
cmp
mov
mov
cld
fstp
mov
dec
adc
lahf
ss
daa
jbe
ins
repz
xchg
push
push
xchg
xor
cmps
out
mov
sti
lds
mov
addr16
retf
xor
loope
and
jl
call
pop
fdivr
js
and
idiv
inc
sar
out
sbb
lods
outs
shl
test
sbb
jp
jmp
not
adc
out
dec
arpl
jbe
cmps
lods
movs
popa
fidiv
dec
shl
jns
xchg
iret
out
jge
je
and
mov
or
jo
add
mov
call
add
lahf
and
inc
push
sbb
je
or
mov
xlat
push
mov
rcl
movs
sub
popf
adc
int
mov
sbb
add
sti
pop
loope
fadd
(bad)
dec
xchg
dec
fidivr
enter
lods
mov
inc
pop
jmp
adc
repz
out
cmp
jl
xchg
xor
mov
pop
push
int
test
and
lea
inc
cmc
cmp
mov
xchg
outs
cmp
adc
add
outs
pop
iret
sti
test
loope
pop
sub
fs
out
pop
lock
jns
jmp
int3
pop
jne
shr
mov
aas
pop
sbb
mov
daa
dec
shl
loopne
aas
jmp
or
dec
add
xor
add
outs
pop
add
sub
mov
xor
fild
ins
add
enter
outs
jmp
js
loope
sub
sahf
(bad)
mov
sub
adc
xchg
iret
xchg
shl
lock
inc
xor
pop
scas
arpl
pop
jb
push
cmp
or
lods
cwde
mov
jb
cmps
mov
adc
lods
retf
int3
mov
in
retf
add
cs
pop
mov
xchg
add
jo
push
sbb
cmp
cmps
cmp
jnp
and
std
xchg
aam
rcr
and
sti
sub
outs
jle
pop
not
xchg
jo
push
(bad)
cmp
or
fs
in
sahf
in
pop
stos
mov
pop
bound
cmp
popa
pop
ds
(bad)
test
mov
ins
out
dec
mov
or
inc
inc
lea
dec
mov
(bad)
mov
pop
arpl
sbb
pushw
dec
mov
push
std
mov
gs
mov
hlt
fwait
mov
xlat
lods
xlat
jp
and
imul
(bad)
push
iret
xchg
jno
jmp
or
push
and
jne
push
ins
and
cmp
jae
jle
pop
jg
xchg
push
fdiv
push
ss
dec
test
(bad)
fistp
sbb
adc
bswap
fs
(bad)
mov
addr16
adc
jae
mov
cmp
test
ret
mov
mov
enter
add
pusha
(bad)
fsub
mov
push
fs
or
pop
cmp
aam
(bad)
or
mov
jg
inc
cld
lods
bnd
cli
dec
ret
jl
mov
fld
cdq
inc
frstor
das
test
ret
xor
push
cmp
sbb
and
cmp
ss
pop
mov
aam
cmp
xlat
ins
(bad)
mov
xchg
rcr
loopne
(bad)
scas
pop
(bad)
imul
push
fimul
(bad)
dec
push
xchg
sti
adc
fcmovb
add
xchg
dec
fmulp
scas
ss
movs
mov
out
push
cmp
cmp
adc
enter
bound
jb
push
add
(bad)
pop
mov
push
sub
popf
push
xor
iret
cmps
push
push
jle
sti
movs
jae
push
(bad)
sbb
mov
adc
mov
pop
je
pusha
push
and
mov
dec
and
or
mov
mov
and
cli
cmp
mov
push
xchg
retf
ja
jne
jno
jne
add
into
jecxz
xchg
push
add
dec
pop
push
ins
sub
std
arpl
hlt
call
add
pop
mov
mov
push
fld
push
xor
enter
pop
leave
push
hlt
shr
fstp
fimul
ja
dec
movs
mov
fldenv
dec
mov
aad
inc
xchg
scas
add
and
retf
mov
mov
add
ja
pop
arpl
push
pop
ins
fisub
pop
mov
push
mov
lock
addr16
repz
cld
push
out
cli
aad
fcom
xchg
sub
sbb
repnz
mov
mov
stc
in
int3
add
les
ret
ret
or
jl
pop
cmps
frstor
cld
push
loopne
pushf
mov
shl
fisttp
call
push
ja
bound
scas
ret
idiv
cmps
aad
jg
pop
or
hlt
test
rcl
sub
cmp
enter
push
stos
fisub
push
shl
test
sub
inc
mov
fs
ja
test
pop
add
ret
cmps
call
cmp
cld
xor
or
mov
out
out
clc
retf
cmps
inc
sbb
stos
and
outs
cld
mov
mov
cmps
cs
and
adc
add
push
adc
scas
mov
jmp
jge
fist
mov
mov
adc
ss
xchg
test
(bad)
out
mov
or
js
sbb
sub
popa
cdq
push
arpl
jo
(bad)
bnd
sar
stos
push
xor
mov
xchg
cmp
cmp
ret
test
adc
sbb
xchg
into
scas
and
mov
or
cdq
add
pop
sbb
(bad)
jmp
jnp
sbb
add
out
jp
cmp
scas
pop
scas
jbe
les
sbb
or
xchg
jns
je
push
mov
mov
xchg
out
and
adc
fwait
mov
pop
jns
xchg
loopne
cs
inc
mov
lds
mov
imul
clc
jmp
clc
gs
es
(bad)
mov
push
xlat
mov
cmp
sbb
sbb
fmul
out
jb
jmp
push
dec
pop
loope
sti
add
cld
mov
add
fwait
dec
loop
(bad)
loope
outs
push
(bad)
retf
fwait
repnz
dec
pop
je
mul
mov
pop
sub
hlt
push
pusha
dec
sbb
repnz
mov
mov
mov
ret
inc
jo
out
leave
call
or
rcl
push
cs
sbb
and
(bad)
mov
adc
lods
add
mov
mov
mov
(bad)
scas
inc
cdq
arpl
inc
and
sub
clc
jns
out
jb
inc
mov
push
fiadd
mov
mov
pop
xchg
(bad)
jne
sub
or
xchg
sbb
(bad)
aaa
mov
sar
jmp
dec
xchg
hlt
and
add
push
mov
or
mov
push
pushf
std
sbb
adc
mov
adc
sub
add
pop
pop
call
imul
leave
jnp
cmp
xor
cs
lock
stos
out
dec
jo
dec
mov
fisubr
outs
rcr
test
enter
add
xchg
jns
(bad)
jl
pusha
arpl
jl
repz
inc
mov
(bad)
ins
pop
push
jmp
mov
push
scas
ficom
and
cmc
stos
inc
add
dec
fsub
xchg
mov
and
fldenv
lsl
and
jo
inc
dec
pop
jl
pusha
push
nop
inc
jb
in
addr16
jbe
in
call
cmp
ins
add
add
add
add
xchg
gs
call
adc
or
dec
into
adc
icebp
push
cmp
arpl
adc
xchg
pushf
dec
jecxz
and
mul
lds
in
jecxz
movs
dec
sbb
mov
push
mov
mov
std
xor
or
mov
ins
cwde
xchg
or
mov
xlat
push
mov
cmc
sbb
(bad)
(bad)
mov
sbb
xchg
sub
xchg
ins
pop
out
je
sbb
mov
(bad)
cmps
push
cdq
fadd
or
jp
(bad)
jge
xchg
jo
xor
and
movs
and
test
or
outs
and
push
into
test
xor
scas
push
xor
rcr
xor
fist
adc
sbb
repnz
inc
xor
push
cmps
pushf
scas
addr16
mov
test
sahf
addr16
test
jl
pop
test
clc
mov
jecxz
mov
imul
push
movs
(bad)
(bad)
mov
in
in
or
div
pop
js
xor
sub
push
les
retf
cmp
jle
xor
push
std
add
push
addr16
adc
shl
add
scas
outs
push
pop
mov
mov
inc
in
data16
or
test
xchg
in
out
(bad)
stos
pop
mov
popf
dec
ins
cdq
cmc
bound
(bad)
scas
push
push
shl
popa
jnp
loope
(bad)
(bad)
fcos
arpl
fistp
neg
pop
stc
mov
mov
mov
nop
popa
pop
pushf
sub
scas
xor
xchg
xor
je
cmc
cwde
xchg
cmp
xor
push
jmp
mov
stos
(bad)
mov
dec
xor
dec
sub
repz
push
pusha
push
or
mov
jmp
stos
cmc
push
hlt
stos
stos
inc
pop
inc
(bad)
(bad)
stos
inc
inc
leave
mov
and
nop
adc
pop
inc
add
aad
mov
bound
xchg
scas
outs
cmp
ror
add
jg
cdq
mov
pop
xor
add
mov
push
lods
sub
inc
repnz
push
cmps
int
adc
outs
xchg
push
mov
push
push
mov
mov
lods
cwde
xchg
jp
mov
jmp
push
es
je
std
test
mov
movs
call
push
pop
mov
mov
add
dec
pop
add
mov
push
(bad)
ror
out
test
add
or
add
jno
(bad)
cld
dec
push
dec
jl
pop
jbe
or
es
mov
aad
call
push
push
ret
enter
(bad)
fstp
in
out
mov
jge
push
mov
adc
pusha
cmp
or
jo
mov
cmp
aas
repnz
ins
stos
aaa
aas
les
lea
aad
(bad)
pop
inc
mov
mov
imul
push
lea
inc
cmp
leave
xor
xor
(bad)
mov
sub
cmp
rcl
push
mov
out
cdq
pop
xchg
aam
repz
mov
cmp
mov
inc
jnp
add
loopne
test
jle
push
cwde
dec
stos
pop
add
jp
pop
je
mov
(bad)
in
fldenv
imul
jp
mov
xor
push
outs
call
adc
sar
xlat
and
pop
ret
in
xchg
iret
hlt
stos
or
leave
cmps
xchg
sbb
cmps
sti
fiadd
das
or
jecxz
jg
mov
arpl
dec
jmp
inc
xchg
push
push
(bad)
mov
mov
aad
adc
cs
out
aad
xchg
jne
mov
push
mov
inc
cmc
loopne
dec
or
ret
or
pop
shl
arpl
daa
mov
sbb
mov
xchg
mov
push
pop
and
inc
sub
or
mov
dec
mov
scas
loop
neg
pop
pop
cmp
pop
adc
pop
les
(bad)
fnstcw
pop
and
test
daa
add
xor
mov
movs
sbb
jnp
sbb
ror
out
or
push
jmp
sbb
mov
test
push
daa
xor
in
mov
call
cmc
push
pop
xchg
test
pop
cmp
in
fdivp
and
es
jl
lods
inc
aad
cmps
cmp
pop
mov
mov
cmp
aam
es
sbb
ss
fs
aam
mov
push
xchg
inc
pop
pop
xchg
cld
add
pushf
mov
pop
(bad)
inc
fs
shl
sti
nop
mov
daa
fisub
sub
fistp
call
or
jne
int3
jb
push
cmc
sub
sub
jno
daa
mov
fwait
cmp
mov
xchg
(bad)
retf
retf
push
ret
fsub
test
call
and
add
push
cmps
pop
pop
adc
out
imul
sub
aad
fs
lods
scas
inc
in
dec
jle
cmps
jae
je
rcr
pop
scas
in
adc
push
scas
cmp
jne
cmp
sbb
jns
mov
jno
jbe
out
or
arpl
xchg
aaa
cdq
test
sbb
mov
xor
add
and
rol
jmp
gs
jmp
inc
mov
fcomip
mov
stc
mov
push
jle
xor
fadd
jo
loop
cmp
arpl
sbb
jae
push
add
jmp
stc
out
rol
sbb
push
pop
shl
loope
int
nop
out
cmp
xor
out
in
xchg
fdivr
xor
adc
dec
movs
movs
mov
mov
mov
in
mov
in
xor
xor
mov
or
jae
inc
inc
jae
test
mov
ret
sbb
dec
enter
out
mov
push
push
mov
add
mov
push
add
fldenv
scas
sti
jnp
fucomp
in
ror
leave
push
dec
clc
xor
fmul
mov
imul
dec
push
jns
mov
mov
jg
inc
in
add
or
xchg
sbb
(bad)
into
call
mov
cdq
cmp
in
push
jmp
icebp
enter
clc
xor
retf
xchg
fxch
sahf
pop
sub
jnp
les
dec
adc
pop
dec
add
mov
std
fld
cmp
jb
inc
jns
enter
in
stos
cmp
pop
sub
leave
test
xchg
imul
or
data16
xchg
adc
(bad)
gs
std
scas
js
inc
fldcw
jo
lods
fstp
jnp
cmp
xor
in
and
xchg
sbb
pop
pop
(bad)
cmp
mov
fisub
data16
and
dec
xor
mov
push
xchg
jns
pop
mov
repnz
into
ins
jo
call
scas
movs
or
xor
loopne
sub
mov
cmp
xor
outs
(bad)
mov
clc
cmovl
pop
jno
pop
call
jle
dec
xor
and
pop
mov
sbb
jno
in
aam
sub
add
lods
pop
jmp
loope
mov
adc
pushf
dec
add
cmp
sub
test
dec
cmp
cmp
mov
dec
shr
cli
mov
daa
popf
lds
or
in
or
scas
gs
pushf
ret
sbb
jbe
xchg
xchg
out
mov
xchg
jle
lods
(bad)
(bad)
jmp
scas
out
jae
adc
adc
hlt
jge
jns
mov
pop
xor
xor
jp
mov
imul
or
mov
test
push
pop
inc
add
shl
fdivr
xchg
dec
test
sar
sbb
data16
data16
repnz
push
frstor
inc
sub
test
cmps
push
retf
push
push
jne
pop
cmp
mov
jbe
loope
test
mov
inc
xchg
add
test
out
cdq
movs
repnz
std
repnz
ja
mov
inc
repnz
sub
ret
les
js
clc
xchg
jnp
jbe
fsubr
dec
int3
jmp
js
fwait
mov
xchg
sar
int3
or
xchg
test
ds
aad
push
enter
das
movs
inc
adc
loop
mov
test
mov
cld
and
mov
mov
in
es
cmps
jo
cmp
sahf
cmp
or
call
xor
sub
sub
(bad)
adc
sbb
jmp
mov
jae
add
mov
or
xchg
or
retf
pop
mov
mov
mov
sbb
inc
(bad)
in
icebp
pop
out
or
ret
(bad)
sbb
or
or
inc
fidiv
in
(bad)
adc
inc
ss
add
add
mov
mov
adc
stos
xor
fld
addr16
cmp
imul
aaa
dec
lods
push
adc
mov
imul
loop
push
hlt
xor
ret
cmc
sbb
xor
and
les
gs
out
add
pop
int3
lds
scas
(bad)
outs
xchg
xchg
mov
mov
xor
add
call
jae
push
nop
jmp
or
mov
arpl
mov
cmp
ss
js
outs
jmp
and
pop
pop
call
movs
mov
cwde
sub
jae
mov
jp
fs
mov
mov
call
outs
movs
mov
cwde
loop
daa
shr
adc
jnp
cmp
aas
repz
cdq
xor
or
mov
mov
loopne
xchg
xchg
mov
int
jmp
shl
iret
cdq
xor
cdq
push
mov
fidiv
loop
cmp
or
pop
sbb
jo
xor
jnp
mov
int3
adc
sbb
ret
jo
xor
(bad)
sti
xor
inc
dec
pop
jecxz
test
ftst
repnz
sahf
mov
jge
mov
aaa
out
adc
imul
xchg
daa
sahf
int3
xchg
cli
inc
sbb
xor
fcom
jb
push
sub
loopne
jno
sub
fmul
outs
jg
aam
jle
pop
(bad)
cdq
mov
test
aas
cs
jecxz
icebp
mov
sub
adc
shl
jmp
and
adc
call
ret
and
sub
(bad)
stc
adc
mov
cld
inc
pop
or
push
hlt
inc
jmp
push
xor
xchg
arpl
and
in
std
sub
fstp
fist
ins
in
jo
inc
aam
xchg
sub
push
xchg
xor
fist
sub
in
push
jmp
mov
jge
add
stos
loope
dec
sub
jns
loop
jecxz
es
inc
jecxz
lods
scas
xlat
xchg
mov
loopne
movs
imul
mov
in
jae
lods
movs
neg
sub
ins
add
dec
xchg
adc
jmp
sbb
mov
xchg
jmp
adc
jno
mov
aam
mov
les
(bad)
push
cmp
iret
jo
retf
cmp
push
cmp
cmp
inc
lods
je
or
lahf
mov
mov
ror
ret
aam
pop
pushf
fwait
(bad)
je
mov
or
cli
cmp
pop
cmp
adc
xlat
ss
add
lods
and
pushf
mov
cmp
jns
out
pop
sub
int3
adc
(bad)
not
mov
mov
sbb
or
movs
jne
ffree
mov
dec
imul
pop
and
out
sub
popf
pop
adc
mov
ret
or
test
in
mov
dec
popa
adc
mov
ds
cmp
test
rcr
push
imul
cmps
push
cdq
push
inc
or
cs
aam
mov
iret
ins
jmp
fstp
mov
add
imul
mov
cmc
mov
mov
stc
sbb
stos
out
sbb
jmp
out
popf
lds
jb
pushf
ret
mov
inc
je
es
fild
mov
stc
lahf
rcl
aas
lock
jmp
ins
cmp
adc
xor
sar
pop
cwde
dec
rol
push
dec
mov
scas
mov
lds
ss
in
mov
mov
clc
jb
das
adc
pop
enter
frstor
xchg
mov
fwait
jle
shr
pop
pushf
ds
out
jmp
ins
jno
dec
aas
add
je
loopne
dec
jnp
in
mov
pop
fcomp
in
xor
xchg
adc
cmp
inc
fisttp
and
push
mov
out
test
test
ffreep
or
dec
fld
gs
mov
pop
mov
push
aaa
dec
(bad)
test
scas
cmp
mov
mov
aad
cli
loopne
sub
adc
push
add
stc
gs
fld
aaa
mov
jns
repnz
inc
int3
inc
and
inc
mov
push
pop
sahf
mov
pop
aaa
into
cs
test
aad
stc
(bad)
loopne
std
mov
cli
or
jo
std
pop
cli
repz
pop
mov
pop
pusha
fs
push
xor
daa
fs
cmps
ret
jmp
add
out
(bad)
mov
cmc
stc
test
int
rcr
jo
push
or
inc
and
sar
sub
push
and
lss
enter
or
inc
sub
pop
mov
xchg
push
cmp
out
out
sub
mov
xchg
mov
data16
adc
es
pop
push
push
aad
and
mov
sub
sahf
ins
je
push
sub
jne
fcmovnbe
mov
fcom
jne
mov
test
sbb
push
out
jo
(bad)
call
add
fcom
xchg
mov
sti
push
or
cmp
mov
js
aad
fcmovnu
mov
outs
add
(bad)
push
stos
mov
adc
sub
or
mul
jbe
mov
ins
ins
xor
ja
push
dec
xor
fs
jle
dec
cmc
lds
push
cdq
nop
gs
les
ss
mov
fldcw
(bad)
sti
sti
mov
jl
push
call
mov
jae
jmp
loop
sbb
sbb
cmp
repz
ret
push
stos
sbb
loope
sub
in
icebp
cli
xchg
push
ja
jl
test
push
fadd
mov
es
rcr
mov
js
pop
xor
inc
adc
lods
mov
pop
sbb
inc
mov
loope
mov
data16
mov
dec
pop
jbe
retf
push
nop
rcr
mov
mov
lahf
cmp
fisub
int3
mov
pop
in
movs
jle
and
out
das
jo
pop
mov
pop
js
xchg
sti
(bad)
not
cwde
outs
ret
jmp
cmp
cmp
ret
fbld
in
fwait
sbb
xchg
fsubr
push
stos
mov
mov
pop
xchg
mov
mov
jo
add
sub
imul
and
xchg
cmp
out
sbb
sbb
and
retf
mov
cmp
xor
adc
jns
jno
or
fs
imul
pop
leave
das
jne
sti
out
inc
sbb
and
(bad)
loop
js
scas
movs
stc
in
out
mov
push
cmp
push
xchg
movs
imul
out
pop
ds
fcos
and
mov
jnp
and
add
cmp
and
icebp
les
scas
out
sub
dec
or
shr
ror
push
in
xchg
stos
in
mov
jp
jmp
push
pop
xor
push
jnp
or
dec
movs
adc
aaa
arpl
test
mov
pop
sbb
fbld
xor
icebp
push
or
push
mov
mov
xchg
ret
dec
jge
or
loope
jp
test
les
pop
jns
lock
ins
pushf
mov
mov
fmul
(bad)
ss
or
mov
inc
xchg
sbb
pop
mov
mov
bound
ror
sub
cmc
dec
dec
(bad)
rcl
cwde
dec
mul
pop
stc
mov
mov
jl
fisub
inc
cmps
call
jp
mov
retf
and
xlat
stos
loopne
hlt
shl
dec
(bad)
jae
pop
mov
and
add
loop
sbb
xchg
(bad)
cmp
xchg
jge
xor
cmc
mov
push
push
or
out
adc
inc
in
xchg
pop
xor
mov
jmp
(bad)
mov
pop
inc
jmp
jo
push
dec
(bad)
xor
adc
enterw
mov
movs
in
dec
in
scas
fdiv
and
sti
inc
xor
enter
and
mov
out
dec
stos
cli
jmp
adc
sbb
movs
fdiv
jno
cdq
dec
out
mov
or
pop
in
(bad)
push
jae
pop
cmp
into
push
dec
push
das
movs
cmp
pop
outs
ds
icebp
cwd
fstp
jbe
or
pop
cdq
(bad)
rol
and
out
imul
add
mov
dec
dec
adc
pusha
add
inc
push
push
mov
daa
xchg
fstp
dec
push
cmp
cmp
inc
scas
dec
rcr
sbb
outs
mov
push
sub
and
and
push
pop
sbb
shl
call
mov
cmp
jae
ss
scas
mov
and
mov
fidivr
imul
mov
mov
call
scas
es
repz
loop
push
pop
push
xchg
fld
mov
jne
aam
and
mov
ds
mov
mov
int3
jge
arpl
xchg
adc
mov
pop
or
(bad)
test
das
sub
out
push
jmp
add
cmps
push
jge
enter
mov
xchg
sub
enter
dec
pop
ins
xchg
daa
push
cs
sbb
imul
ss
fwait
xchg
outs
stos
xor
hlt
adc
sbb
adc
ins
fs
in
outs
leave
add
fisttp
mov
ins
pop
sub
and
or
push
add
add
add
push
add
add
movs
out
in
mov
dec
es
neg
push
adc
sbb
nop
es
add
shl
mov
add
fild
or
add
leave
cmps
data16
in
fst
test
jge
push
sub
mov
xchg
je
xchg
inc
loope
fimul
pushf
jge
das
mov
xor
sub
std
popa
sub
pop
dec
js
outs
nop
cmp
dec
cld
loopne
mov
dec
mov
mov
mov
(bad)
sar
cmps
adc
push
pop
pop
pop
out
test
dec
mov
push
and
jmp
xor
cmp
idiv
cmps
imul
rcr
iret
stos
pop
lock
mov
fiadd
call
sub
fcom
fist
gs
dec
out
in
mov
xchg
mov
pop
daa
and
push
adc
scas
and
fiadd
rcr
mov
cmp
(bad)
scas
ret
in
outs
mov
add
push
mov
loop
sub
mov
lahf
or
icebp
outs
ret
mov
adc
add
add
mov
lods
xchg
stc
std
nop
enter
mov
xchg
jae
jmp
fdiv
dec
ret
lahf
in
and
xchg
jb
jo
xor
sbb
adc
icebp
mov
mov
mov
dec
rcl
lock
in
popf
add
loop
call
test
push
hlt
dec
lds
scas
pop
sahf
xor
mov
sbb
call
xlat
mov
cmc
pop
inc
data16
dec
dec
(bad)
jp
(bad)
cmp
push
push
jno
xor
inc
fstp
fwait
fs
mov
(bad)
lock
in
in
jecxz
(bad)
outs
in
sub
dec
call
or
pop
sbb
xchg
fnstcw
lods
mov
inc
imul
sbb
dec
test
sub
jnp
sbb
ins
pop
or
pop
sbb
(bad)
aad
or
sbb
(bad)
loop
loopne
sub
add
ds
add
jno
stc
into
cmp
inc
cmps
inc
lds
jp
cmp
jne
push
imul
mov
or
xlat
cli
sbb
lds
push
mov
dec
ret
pop
jbe
(bad)
push
pop
cmp
push
je
loopne
dec
and
xor
xlat
gs
retf
xchg
je
adc
leave
sub
xchg
xor
cmp
push
push
adc
loope
xor
leave
fmul
in
push
adc
ja
mov
fdiv
scas
lahf
jbe
xor
mov
das
outs
loop
test
push
cmp
popf
icebp
pushf
jo
retf
xor
push
movs
or
(bad)
push
mov
int
sub
or
mov
mov
clc
fidivr
test
and
and
ret
mov
das
lods
mov
fistp
or
mov
sbb
sub
push
sub
aam
ins
pop
cmp
scas
sti
pop
xor
stos
xor
nop
(bad)
mov
jns
ja
pop
test
mov
test
lods
fdiv
(bad)
xchg
sbb
pop
mov
je
sbb
popa
bound
outs
les
sbb
push
test
mov
mov
xchg
bound
sbb
movs
adc
pop
inc
fsubrp
or
pop
and
enter
pop
xchg
or
repz
mov
mov
imul
push
mov
sbb
inc
loope
lods
jmp
push
inc
cmc
xchg
cmc
ins
pop
cmp
movs
adc
(bad)
ss
jge
or
nop
pop
in
push
jmp
out
jecxz
mov
lds
retf
and
cmp
mov
mov
jo
inc
icebp
mov
add
into
retf
mov
xchg
push
cwde
inc
or
add
sahf
dec
inc
jns
sub
or
mov
mov
int3
jle
mov
push
into
push
and
xchg
jno
push
aas
sub
lock
leave
xchg
dec
lea
mov
les
mov
test
jmp
mov
push
inc
add
add
pop
add
repnz
dec
jg
push
enter
call
jb
scas
push
int
cmp
jnp
retf
jns
push
xchg
inc
push
mov
cmps
sub
clc
push
test
mov
or
pop
cs
xchg
pop
cmp
xor
repz
shr
(bad)
call
int
sbb
loope
push
scas
xor
jp
pop
shr
dec
cmp
inc
dec
mov
ss
cmp
lods
daa
in
mov
jae
or
movs
xor
mov
fsubr
mov
pop
enter
cmp
nop
or
push
test
arpl
dec
xor
imul
nop
cmp
push
xchg
(bad)
mov
ret
cs
cmps
add
jb
mov
sbb
xor
retf
xchg
call
jge
jp
dec
adc
sub
int3
push
lahf
rol
ror
fcmovu
or
outs
push
mul
shl
push
jmp
aam
cs
shr
mov
sub
xchg
jno
gs
sbb
in
xchg
push
sahf
inc
clc
mov
xchg
xchg
inc
scas
div
mov
pop
shl
push
inc
pop
and
xchg
lods
inc
adc
add
dec
(bad)
les
add
cmp
out
fild
test
js
mov
sbb
cwde
jp
ret
pop
aas
push
frstor
mov
(bad)
scas
cmp
shr
and
push
aaa
inc
js
xor
inc
mov
es
aad
mov
test
jmp
pushf
in
inc
pusha
fnstenv
pop
icebp
test
sbb
cs
in
ret
hlt
stos
and
push
add
shl
lods
enter
adc
mov
xchg
mov
ror
lahf
sbb
push
ins
dec
pushf
(bad)
lea
in
sar
push
push
jge
fbld
cmp
lods
daa
mov
test
aam
jmp
mov
jp
stos
movs
pushf
dec
aas
sbb
(bad)
mov
test
push
(bad)
inc
pop
mov
jg
sub
sub
pop
jne
fs
js
dec
adc
xchg
ins
inc
outs
mov
mov
mov
inc
xor
neg
cdq
cdq
mov
pop
lea
(bad)
fdivr
mov
das
adc
ins
or
dec
addr16
and
jge
xchg
aaa
jle
cmp
push
xor
mov
sub
les
lea
jmp
lods
ins
in
fs
or
enter
sahf
adc
pop
repnz
out
imul
cwde
cmp
data16
stos
jg
mov
(bad)
loopne
inc
out
jecxz
or
and
cli
add
sub
iret
pop
out
cmp
jle
or
mov
cdq
push
inc
push
call
jne
inc
mov
daa
test
out
pop
movs
shl
push
push
fnstenv
push
dec
rol
xor
mov
push
inc
iret
outs
cdq
ins
xchg
mov
cmp
add
loope
add
and
pop
sbb
or
loope
xchg
pop
enter
and
retf
xchg
rol
mov
and
(bad)
(bad)
pop
scas
adc
mov
bound
adc
xchg
fdivr
xchg
mov
popf
das
sbb
sar
jl
pop
add
ds
adc
dec
ss
je
popf
(bad)
mov
out
fnstsw
ins
mov
dec
cmp
je
or
dec
dec
sbb
cmps
call
add
xchg
aas
jmp
ds
int
cdq
out
mov
jg
ss
stos
push
or
add
mov
ficomp
add
or
adc
xchg
push
add
xchg
sar
mov
mov
sti
add
mov
retf
pop
int3
fistp
push
mov
call
cmp
jle
jns
mov
add
aas
mov
test
aam
pushf
cmp
push
jecxz
movs
cmp
mov
xlat
dec
in
into
mov
iret
shr
ins
cs
pop
stos
inc
inc
pop
(bad)
sub
repz
inc
jl
aaa
pop
leave
shr
cmc
add
and
out
inc
xlat
xor
in
cmps
xchg
lock
push
ret
cmp
adc
leave
xor
sub
cmp
pusha
rcr
inc
adc
lea
dec
jnp
jle
mov
fldenv
pop
jnp
popf
(bad)
(bad)
xor
dec
and
and
adc
dec
pusha
push
mov
xor
mov
inc
das
out
and
pop
sub
out
mov
adc
pop
pusha
mov
icebp
pushf
lods
push
cdq
add
aam
(bad)
addr16
in
or
cmp
xlat
sbb
sbb
jp
fimul
dec
jmp
pop
pop
data16
sbb
xor
sti
sub
pop
scas
mov
cmp
retf
ins
pushf
mov
mov
push
xor
lods
cwde
je
lock
fild
ds
or
and
mov
ret
rcr
ja
xor
test
fs
dec
mul
add
ss
xchg
(bad)
loopne
cmc
mov
retf
xchg
aam
out
ins
dec
push
pop
fisub
ss
test
push
cdq
cmp
sbb
mov
dec
xchg
adc
sbb
pop
(bad)
fistp
movs
ja
xor
int3
iret
xor
fstp
fist
xor
fxam
ret
jo
gs
mov
(bad)
jae
mov
lds
loope
push
inc
hlt
lods
leave
add
jmp
add
cmp
leave
fild
and
out
cmp
retf
jmp
hlt
popf
mov
imul
bound
sub
cmp
push
aad
push
lods
rcr
les
mov
xor
add
cmp
shr
dec
retf
pop
or
pop
and
pop
(bad)
imul
call
sub
or
sbb
lds
jns
mov
cmps
dec
loopne
mov
icebp
dec
mov
jp
push
loope
fnstcw
pop
fcmovnu
jno
ret
jl
arpl
stos
gs
es
cs
test
aam
or
push
push
call
push
cmp
mov
or
outs
pop
mov
not
mov
xchg
test
in
imul
and
pop
popa
jae
pop
bound
and
ficomp
out
pop
pop
jbe
imul
xor
test
mul
mov
mov
das
pusha
jecxz
xchg
das
adc
push
mov
js
pop
popa
mov
sub
cmp
xor
addr16
call
retf
loope
xchg
jecxz
and
sbb
mov
mov
jmp
mov
ficom
or
pop
in
pushf
outs
mov
push
out
loopne
mov
push
fcomp
imul
test
std
data16
es
sub
movs
sar
call
out
cmps
inc
cld
test
pop
sbb
cmps
out
and
(bad)
lds
jmp
jmp
lahf
sub
add
add
and
mov
clc
dec
iret
pop
xlat
xor
in
sub
mov
pop
retf
jo
inc
(bad)
jl
in
scas
push
or
out
jns
and
or
and
mov
(bad)
retf
sti
sub
lds
(bad)
(bad)
fdivr
push
outs
push
sub
lock
push
movs
repz
mov
out
in
cmc
test
test
out
call
neg
and
out
add
nop
mov
cmp
dec
adc
mov
imul
mov
dec
fstp
jmp
mov
fsincos
pushf
cmp
add
xor
add
mov
sbb
jecxz
out
sub
sub
test
push
(bad)
cmp
test
xchg
pop
cmp
aad
push
test
mov
stos
adc
add
mov
push
add
push
pop
adc
fsub
jno
and
mov
test
cmps
push
push
push
push
mov
jne
js
mov
push
pop
popf
je
sar
out
pop
dec
lds
int
sbb
inc
test
mul
mov
mov
or
out
push
fucom
jmp
dec
fwait
mov
add
add
fwait
xchg
mov
dec
pop
popf
sub
cmp
fstp
ret
fwait
cld
xor
push
sbb
cmp
loope
add
inc
xor
dec
push
and
out
fimul
sub
xchg
(bad)
dec
xor
xchg
fdivr
mov
mov
or
adc
sbb
es
mov
push
es
lods
pop
push
mov
add
push
pop
(bad)
jmp
inc
scas
stos
scas
cdq
nop
mov
cwde
sub
cmc
adc
and
repnz
leave
jmp
nop
repz
test
mov
pop
fsubr
stos
mov
xchg
scas
and
jp
mov
ja
das
and
stos
inc
push
xor
loop
out
adc
pop
dec
leave
popf
movs
(bad)
adc
stc
xor
enter
push
call
and
out
and
cmps
cld
fcomp
ins
jnp
push
push
sbb
jnp
xchg
mov
mov
mov
dec
(bad)
loop
inc
mov
mov
mov
mov
xchg
addr16
mov
lods
dec
cwde
pop
and
cld
mov
and
pxor
and
les
pop
cmp
jge
pop
push
(bad)
and
cmp
inc
scas
popf
popf
test
push
push
add
fcmovnbe
push
or
xchg
mov
lock
mov
push
je
imul
or
mov
sbb
mov
pop
cli
popf
adc
mov
and
cmp
lock
dec
mov
aam
stos
mov
pop
inc
mov
int3
pop
cmc
xchg
ret
add
cmp
cmps
lea
sti
lods
add
adc
mov
cmps
fld
add
pop
mov
xchg
jno
cwde
xor
jmp
jl
push
pop
xor
xchg
xor
cwde
jmp
ss
mul
cld
and
nop
shl
xlat
xchg
mov
stos
dec
mov
jmp
aas
xchg
out
outs
mov
xor
inc
jl
dec
loop
stos
mov
icebp
cmp
pop
inc
mov
imul
jae
mov
arpl
sub
fimul
inc
leave
retf
vmovups
push
fcom
movs
lock
cmp
test
or
retf
mov
in
fsub
shl
pop
cmc
push
cmp
and
js
fdivr
dec
sub
mov
pop
into
push
push
sub
jecxz
mov
jmp
mov
rcr
xchg
inc
mov
leave
popa
rcr
out
rcr
mov
mov
(bad)
dec
stc
xchg
nop
mov
lahf
popa
sub
daa
dec
pop
inc
xchg
shl
sbb
mov
mov
enter
cdq
xchg
mov
aas
pop
push
push
fld
cmp
call
mov
mov
div
hlt
xor
cmp
ret
int
xchg
out
inc
push
sbb
inc
cmp
dec
pop
or
out
mov
fmul
adc
ss
pop
jmp
shr
pop
jge
mov
xor
es
(bad)
dec
mov
iret
pop
repz
cdq
test
call
mov
not
jne
dec
inc
test
jge
push
pop
inc
je
je
mov
in
xchg
in
mov
xchg
movups
mov
mov
test
shr
cmp
not
dec
aad
xchg
xor
cs
xchg
jecxz
clc
and
cmp
sbb
stos
aas
inc
xor
inc
and
add
int
movs
mov
je
ss
sub
xchg
into
hlt
lods
lods
pop
pop
pop
into
in
adc
pop
inc
shr
rcl
inc
leave
mov
rcl
jg
push
pop
push
jae
or
jecxz
add
push
pop
cwde
out
lods
outs
jl
ds
mov
jnp
push
fs
mov
inc
jl
(bad)
lods
inc
add
sti
mov
mov
adc
sbb
pop
shl
push
cld
scas
shl
ret
bound
mov
sbb
lock
ja
in
mov
xchg
jl
cmc
sbb
jno
in
loope
(bad)
dec
ret
xchg
call
sbb
bound
pusha
jecxz
sub
enter
nop
idiv
out
jbe
lods
gs
test
(bad)
aad
call
cdq
or
push
jnp
aas
data16
xchg
jae
xor
jbe
jmp
(bad)
outs
dec
push
mov
sub
into
mov
and
jle
loopne
cmp
lods
(bad)
add
and
pop
mov
xchg
retf
inc
cmp
sbb
inc
pop
js
jmp
lods
sbb
movs
inc
mov
adc
out
dec
std
xlat
daa
rcl
cmp
dec
leave
stos
mov
jecxz
fs
lods
popa
jae
(bad)
lods
inc
add
jnp
(bad)
mov
add
add
push
add
sub
add
cs
add
adc
mov
cmp
pop
inc
adc
arpl
mov
out
mov
stos
sub
mov
shl
sbb
sub
les
ins
and
daa
add
daa
sub
adc
lods
push
repz
cmp
adc
in
sbb
das
xchg
jmp
inc
mov
mov
and
mov
loope
dec
xchg
mov
stos
adc
pop
push
fmul
popa
retf
add
inc
push
mul
xchg
test
mov
gs
mov
push
xchg
(bad)
adc
ja
mov
fcmovnu
ins
mov
xchg
pop
mov
mov
mov
lahf
add
xor
jbe
mov
ja
push
(bad)
pop
push
sbb
imul
pop
sbb
push
mov
enter
push
xchg
mov
push
push
test
cmp
ret
ins
sbb
jno
lea
fistp
cmps
jnp
fidivr
push
pop
pop
bound
dec
(bad)
xor
test
in
inc
push
pop
xor
pop
mov
imul
xchg
out
mov
add
xchg
dec
stc
shl
or
sbb
or
pusha
(bad)
mov
adc
cmp
add
scas
pushf
mov
jl
mov
mov
lods
rcl
or
sub
push
mov
sti
loop
xchg
int
jnp
sub
inc
or
adc
adc
(bad)
icebp
mov
jmp
fsubr
add
fisub
inc
pop
mov
xlat
or
popf
(bad)
getsec
jmp
or
and
mov
push
out
ja
jmp
mov
xor
mov
aaa
sbb
inc
mov
ret
call
es
dec
daa
mov
fstp
out
adc
clc
out
popa
cld
jns
sbb
dec
adc
sub
sbb
lahf
inc
push
xchg
rol
dec
enter
outs
lods
call
fimul
cmps
cmps
mov
dec
push
ret
out
in
retf
jmp
dec
cmp
or
jbe
in
sub
jb
ret
inc
push
mov
int3
rcl
inc
jns
xor
xchg
xlat
out
stos
outs
fwait
or
loop
sbb
mov
(bad)
push
dec
pop
sar
loope
xchg
jbe
dec
push
jae
idiv
mov
inc
dec
or
int
mov
movs
jo
jle
xchg
and
mov
mov
ins
jecxz
mov
loop
out
call
push
ret
dec
repz
push
outs
ror
and
inc
dec
and
pop
cmp
cld
jmp
mov
sbb
inc
gs
clc
or
xchg
push
inc
out
mov
cs
add
jnp
bound
pop
jmp
sbb
std
int3
aam
stc
popa
jns
pusha
push
cmp
or
mov
mov
les
xchg
out
xor
pushf
cmp
lea
and
push
dec
jmp
dec
xor
adc
arpl
sbb
inc
loop
jp
inc
push
xor
fwait
sbb
out
(bad)
out
out
leave
pop
nop
aaa
fisub
sub
push
mov
cld
xchg
xor
ds
lods
sub
cld
push
inc
rcl
xor
xor
das
or
out
inc
(bad)
jmp
(bad)
pop
sbb
iret
inc
out
adc
cdq
mov
bnd
push
(bad)
call
inc
dec
lahf
or
fst
add
sub
test
popf
stos
test
cdq
mov
arpl
loopne
sbb
mov
push
lock
mov
dec
and
dec
and
mov
fsub
je
or
or
sbb
cmp
out
icebp
test
cmp
shl
test
imul
push
in
mov
jnp
test
icebp
int3
jnp
jmp
jo
xchg
mov
mov
out
mov
dec
push
adc
mov
shl
stos
aas
inc
mov
mov
jns
xor
xchg
fcom
and
xchg
push
sbb
int3
dec
xor
test
mov
adc
pop
pop
mov
out
sbb
inc
pop
popf
in
outs
out
sbb
pop
lahf
div
mov
loopne
icebp
rcr
pop
(bad)
sub
data16
js
jb
pop
mov
cmps
mov
mov
aad
and
pusha
inc
shld
pop
cmp
aas
mov
lods
push
mov
stos
mov
sar
mov
push
add
jmp
mov
push
xchg
pop
push
js
sub
dec
dec
not
aad
mov
add
in
daa
cmps
push
adc
mov
shr
lods
cmp
dec
jle
les
or
gs
aad
push
dec
dec
cmps
(bad)
(bad)
enter
scas
cmp
jne
pop
pop
popf
in
dec
and
mov
pop
pop
into
jp
enter
scas
cmp
pop
popa
jae
adc
adc
sbb
repz
push
mov
sti
loope
jmp
add
fist
jns
inc
ja
fisubr
or
adc
repz
dec
jmp
les
mov
jb
xchg
sbb
call
scas
fs
jg
add
and
fidiv
xlat
push
mov
pop
xor
sbb
test
pop
inc
inc
push
push
push
ins
lahf
or
or
xchg
jle
shl
cmp
loop
xchg
movs
ja
mov
movs
leave
cmp
into
js
outs
es
aaa
in
inc
mov
stos
loope
dec
add
dec
inc
sub
push
mov
out
(bad)
out
inc
add
pop
scas
push
enter
retf
add
dec
mov
mov
cmp
or
(bad)
lods
lods
shr
xchg
jae
fsubr
dec
sub
mov
lock
cmp
loopne
(bad)
add
das
outs
shr
inc
sub
inc
daa
fs
lahf
imul
call
add
cmp
shr
push
sahf
test
and
mov
cs
mov
sub
pmaxub
push
lods
xchg
call
mov
add
add
add
xor
movs
push
sahf
mov
(bad)
adc
sub
call
inc
xchg
adc
cmp
sbb
(bad)
shrd
aaa
or
sub
jbe
neg
xchg
mov
enter
cmps
mov
mov
or
mov
xor
adc
leave
xor
cmps
push
scas
xor
and
inc
xchg
dec
mov
or
loopne
(bad)
fisub
mov
or
xchg
cmp
aam
clc
pushf
pop
dec
repz
inc
inc
test
sub
add
div
rol
add
stos
cli
inc
cs
adc
dec
inc
lock
push
push
adc
ss
test
add
retf
add
xor
in
xor
mov
hlt
imul
cmps
push
add
add
out
jno
mov
pop
scas
imul
into
call
push
pop
or
repnz
xchg
mov
pop
cli
shl
sbb
mov
arpl
lods
add
outs
in
lock
jg
xchg
sbb
inc
ins
xor
mov
iret
stc
and
lods
in
frstor
fcmovnbe
fwait
add
fwait
mov
jne
adc
adc
add
jns
in
pop
jmp
sets
loop
sub
scas
xor
shr
mov
xchg
xchg
push
pop
popf
aaa
jge
add
inc
jb
add
add
add
add
(bad)
popf
jae
int
sub
inc
mov
jmp
pusha
mov
outs
add
jg
in
and
out
shl
popa
sti
aam
test
push
cmp
mov
neg
or
jl
add
xchg
xchg
mov
add
jp
push
lods
fidiv
pop
inc
std
inc
adc
mov
inc
aad
pop
pop
fsub
leave
jge
call
xchg
push
inc
mov
gs
jb
mov
pop
xor
xor
sub
loope
adc
mov
push
add
adc
mov
fst
sub
in
mov
cmp
fild
mov
mov
sub
sbb
add
movs
sahf
shl
leave
push
adc
imul
leave
xor
inc
adc
aad
ret
or
outs
inc
mov
mov
dec
or
out
or
repnz
ss
loopne
pop
fcmovnbe
mov
mov
and
fidivr
lahf
jnp
adc
stc
pop
repz
pop
std
mov
js
add
xchg
movs
jle
push
out
pop
dec
inc
and
cli
sub
jnp
sub
std
xor
ficomp
in
icebp
leave
xchg
lds
mov
push
and
pusha
adc
mov
iret
jge
sbb
jl
adc
jle
test
pop
xchg
nop
hlt
les
adc
retf
jl
jecxz
scas
mov
mov
jle
dec
pop
jne
cmps
and
pop
into
jmp
or
xor
push
adc
mov
test
call
mov
jecxz
(bad)
cli
outs
pop
inc
xchg
cmp
aad
test
orps
out
xchg
cmps
lahf
fdivr
neg
and
dec
into
ss
mov
icebp
fisubr
sbb
mov
aaa
adc
pop
mov
sub
test
or
mov
inc
mov
add
je
out
cld
stc
rol
xor
hlt
cmps
or
sub
dec
adc
pop
popa
fild
add
loopne
lea
jge
rol
nop
add
or
push
dec
xchg
or
icebp
ret
inc
enter
loope
(bad)
sar
add
xor
repz
and
outs
hlt
outs
sbb
cwde
in
clc
mov
out
inc
stos
pop
das
or
pop
pop
aam
or
cli
pusha
mov
push
jo
cmp
mov
add
add
add
add
jnp
hlt
hlt
lds
sub
sub
jecxz
dec
jge
in
ret
mov
ret
call
sbb
add
out
dec
sahf
test
inc
pusha
sub
xor
push
test
std
nop
(bad)
cmps
cmp
push
(bad)
cwde
fs
adc
(bad)
mov
hlt
iret
ror
sar
mov
addr16
mov
xchg
test
xor
data16
sbb
xor
iret
or
jns
icebp
call
outs
pop
xor
pusha
retf
inc
pushf
fidiv
push
push
rol
(bad)
push
mov
push
je
push
sbb
mov
or
fdiv
out
sbb
mov
cwde
rcr
mov
retf
fidiv
push
jns
fisubr
cmp
dec
push
ins
cld
mov
or
pushf
mov
aad
jmp
test
xchg
gs
or
adc
push
adc
(bad)
inc
jne
(bad)
bound
loop
lar
(bad)
sub
sbb
dec
pop
pop
pop
mov
adc
fcmovnb
push
imul
scas
dec
jo
pop
sub
mov
inc
in
in
jmp
in
mov
(bad)
(bad)
sbb
lea
into
mov
in
xor
fisub
push
sub
jle
dec
ins
cld
push
bound
pop
rol
fisttp
mov
popf
mov
sbb
int3
mov
sbb
adc
retf
dec
cmp
and
fs
pop
sub
leave
adc
or
add
fdiv
fsubr
aaa
out
sbb
xchg
pop
adc
jp
lahf
bound
or
jb
aas
test
out
sbb
pop
add
xchg
scas
std
push
js
dec
cli
int3
int3
add
stc
adc
mov
pop
xchg
cmps
xchg
jg
inc
lods
jmp
xchg
inc
pop
cld
test
outs
fldenv
daa
xchg
in
into
lods
dec
sbb
add
add
add
add
(bad)
movs
pusha
pop
cmp
and
sub
fbstp
mov
mov
loopne
jmp
int3
mov
aas
cmp
fistp
mov
imul
and
stos
jg
stc
popw
sbb
cld
jmp
cmps
jecxz
inc
fimul
in
sbb
dec
sub
movs
or
loop
mov
xchg
xchg
inc
sti
cwde
rcl
sub
pop
mov
je
test
or
mov
mov
push
in
or
push
xor
iret
loope
nop
pop
jb
mov
add
call
add
enter
xchg
or
in
jmp
retf
jbe
pop
push
mov
jno
mov
pop
inc
mov
pop
test
das
cmp
pop
out
adc
aad
xor
jnp
into
retf
pop
sub
in
mov
pop
daa
xlat
es
cmp
popa
mov
ins
and
inc
mov
add
xor
mov
movs
push
mov
xor
enter
cli
mov
(bad)
adc
jno
mov
aaa
hlt
or
inc
es
xchg
or
sub
jb
fild
scas
aad
mov
mov
push
fidivr
test
push
arpl
dec
jb
call
push
nop
and
mov
xor
dec
jbe
fcomp
push
inc
mov
add
aaa
add
dec
loope
mov
repz
push
cld
and
js
sahf
movs
lock
ins
dec
inc
add
xlat
xor
add
adc
stos
lock
add
xor
mov
lea
mov
leave
mov
cli
mul
push
mov
loope
out
inc
js
add
dec
cld
repnz
jp
pop
xor
or
jmp
sahf
or
and
sbb
jbe
sbb
xchg
jno
pop
adc
push
or
retfw
ds
sbb
and
or
(bad)
mov
xchg
mov
mov
jle
scas
movs
xor
jb
sahf
in
adc
mov
push
aas
push
or
fucomi
jle
dec
scas
inc
inc
mov
aas
add
push
adc
push
call
push
push
cmc
dec
fbstp
aaa
int
movs
imul
fisubr
inc
xor
gs
add
mov
sbb
pop
fnstcw
scas
adc
aam
loope
pop
push
xor
ja
sbb
jg
xlat
addr16
and
or
dec
add
sub
dec
(bad)
pushf
dec
mov
(bad)
out
movs
inc
sub
dec
mov
out
clc
clc
add
mov
call
jle
sbb
in
lahf
or
mov
fsub
xchg
out
add
in
in
cmp
mov
mov
repnz
mov
popf
ins
(bad)
std
outs
sbb
mov
cmp
jmp
loop
cmp
jecxz
cmp
adc
sub
aam
pop
test
add
and
push
js
sub
aad
xor
in
jnp
mov
stc
repnz
mov
das
cli
test
inc
ret
repnz
mov
aaa
adc
cmp
and
adc
jp
std
movs
dec
inc
je
and
ret
fldenv
outs
cmps
sub
mov
data16
push
mov
fld
or
fidiv
push
jl
in
lds
sahf
dec
xchg
cmp
cmp
add
xchg
inc
iret
popf
retf
shl
xchg
mov
cld
add
jne
ja
sub
movs
adc
sub
cmp
data16
mov
mov
scas
outs
push
pop
mov
dec
dec
or
jno
fisttp
in
jl
pop
out
ret
in
retf
addr16
mov
popa
cli
daa
pmullw
outs
xor
test
mov
mov
inc
xchg
test
sbb
inc
mov
faddp
inc
push
inc
adc
stos
dec
pop
or
rcl
inc
sub
cs
jae
sub
inc
jmp
cld
dec
sub
sbb
int
adc
(bad)
mov
push
pop
and
mov
aas
(bad)
hlt
cmp
daa
ds
cmc
js
sahf
nop
add
jg
ins
pop
je
loopne
jle
int
ror
sbb
mov
lods
adc
and
jmp
sub
lahf
out
mov
dec
pop
out
mov
inc
bound
test
mov
inc
cmp
or
fdivr
sbb
mov
dec
loop
jae
pop
jb
add
xchg
xchg
adc
cmp
dec
std
ins
adc
aam
(bad)
and
mov
shl
dec
xchg
or
cmp
cmps
dec
call
adc
repnz
pop
and
in
mov
inc
scas
adc
int
and
and
jle
popf
int3
arpl
je
dec
shl
(bad)
and
ror
out
pusha
retf
jo
jnp
inc
mov
inc
xchg
xchg
addr16
push
mov
sti
es
pop
ss
dec
call
pop
sbb
test
sbb
or
sub
sahf
sbb
xor
test
pop
jp
clc
popf
pop
sahf
mov
dec
dec
pop
jo
out
pop
sub
movs
test
add
fwait
retf
out
mov
aam
jl
sbb
inc
movs
inc
push
adc
dec
stos
inc
sahf
sub
scas
mov
(bad)
call
push
jge
push
jecxz
in
mov
and
add
push
ja
jge
into
test
cmc
scas
(bad)
out
scas
pusha
inc
aas
mov
pop
outs
aaa
retf
push
retf
and
pop
ret
js
push
mul
btr
sbb
sub
adc
sbb
je
inc
push
outs
jbe
mov
push
adc
xor
fwait
mov
mov
inc
jbe
and
retf
dec
clc
mov
mov
cdq
dec
jnp
shr
scas
bound
jae
adc
cmp
popa
fs
pop
in
out
cld
imul
mov
pop
push
dec
js
xor
out
cmp
fnstsw
ret
sar
dec
xor
push
loop
(bad)
cmps
pop
adc
pop
je
jae
hlt
cmp
push
xor
jns
cmp
retf
ds
pop
clc
sahf
xchg
aaa
in
add
dec
aaa
sti
nop
mov
test
aad
in
jle
out
fbstp
jecxz
inc
cmp
sti
mov
mov
add
add
sub
pop
lea
lock
mov
neg
sub
das
in
xlat
mov
xor
sub
dec
lods
mov
lods
mov
mov
iret
pop
xchg
xchg
jnp
ret
stc
add
jb
icebp
and
xlat
push
xchg
xchg
and
jecxz
fbstp
retf
mov
mul
addr16
ds
jns
pop
xchg
pop
(bad)
call
cmp
mov
xchg
dec
cmp
in
ins
add
add
movs
out
push
scas
stc
sub
ret
mov
add
sti
and
lods
outs
aam
clc
sbb
xor
sub
add
pushf
imul
cwde
gs
mov
movs
mov
sbb
jl
adc
sub
call
stc
(bad)
inc
das
and
jns
repz
lock
fbstp
test
in
cwde
call
jb
das
jp
fidiv
ss
rcr
cmp
pop
cmp
(bad)
jae
adc
call
js
adc
mov
sar
call
jp
loop
test
and
add
mov
sub
pop
xor
xchg
pop
clc
inc
sub
fmul
dec
ja
jmp
jns
or
outs
leave
jns
movs
mov
out
stos
cmp
shr
clc
adc
pop
push
shr
push
jge
mov
fs
cmps
mov
jnp
cmps
daa
pop
popf
loopne
ret
into
pmaddwd
pop
(bad)
jmp
ss
adc
sub
sub
aam
sbb
xchg
mov
cld
pusha
hlt
(bad)
adc
cmp
pop
into
jo
fisub
outs
test
test
cmc
ret
lock
retf
jp
and
outs
pop
mov
and
push
inc
std
(bad)
push
jnp
jno
out
es
les
retf
jle
xchg
leave
scas
cdq
push
xchg
aas
(bad)
jle
(bad)
cmp
data16
fistp
dec
mov
xor
(bad)
ficomp
and
mov
mov
jle
lds
imul
cmps
or
mov
in
dec
nop
push
das
test
ret
punpckldq
cli
push
loope
popf
jge
stc
aad
or
pop
shr
mov
or
outs
jge
arpl
lea
jmp
sbb
imul
xlat
repz
and
adc
fnstenv
mov
cmp
adc
fnstcw
mov
and
xlat
xchg
stc
in
xchg
movs
mov
pop
or
cmp
inc
sub
imul
fimul
mov
(bad)
out
stc
push
xor
add
das
cmp
loopne
dec
xchg
fs
in
pop
cmps
xchg
or
pusha
cmp
rcl
vxorps
jnp
loop
xor
into
std
jge
imul
fistp
in
iret
dec
mov
xchg
cmp
int
push
push
fwait
or
sti
or
pop
fidiv
push
enter
stos
xlat
cmp
mov
dec
sub
div
popf
es
xchg
jnp
fdivr
push
xor
imul
enter
push
pop
aas
call
push
xor
sub
(bad)
jns
adc
cld
das
arpl
mov
pop
sbb
(bad)
jae
ja
or
jp
xor
xor
inc
push
cwde
(bad)
sbb
xchg
xor
stc
adc
gs
pop
cmp
(bad)
data16
add
add
add
nop
xchg
mov
enter
add
push
jecxz
add
pop
and
pop
fdivr
adc
movs
repz
outs
cs
xlat
jb
and
sub
sar
fadd
sub
out
loopne
sub
inc
mov
or
fst
outs
mov
inc
jp
jns
mov
add
imul
lea
sbb
mov
jbe
(bad)
ds
sub
pop
mov
jmp
xor
sub
(bad)
xlat
mov
cmp
inc
ins
add
pop
xchg
sar
adc
(bad)
cli
cmp
aam
lds
xor
pop
or
(bad)
repnz
add
jge
cdq
xchg
lds
mov
sub
test
call
push
test
icebp
sbb
and
xor
das
callw
scas
enter
pop
push
or
push
cmps
pop
outs
or
fwait
and
jmp
(bad)
(bad)
jmp
push
out
push
inc
outs
mov
push
jp
std
scas
iret
ins
or
pop
mov
sti
add
popa
data16
pop
and
add
and
sahf
outs
or
and
pop
mov
idiv
shr
add
push
stos
lods
mov
push
or
rcl
hlt
cmc
jl
jmp
xchg
(bad)
push
add
sub
and
mov
loopne
fst
push
jmp
daa
push
xchg
rcr
imul
retf
pop
xchg
clc
pop
outs
mov
mov
jo
lock
cwde
push
pop
inc
pop
popa
add
inc
test
xor
call
xchg
fcom
mov
scas
or
in
(bad)
or
gs
js
sub
in
xor
into
mov
pushf
add
stc
ss
fild
mov
loopne
cmc
in
ds
inc
idiv
or
js
push
add
mov
push
fimul
mov
scas
inc
pop
int3
xchg
dec
fild
cmp
pop
in
pop
scas
sbb
sub
addr16
sbb
pop
inc
fwait
test
push
gs
jo
inc
pop
or
cmps
pcmpgtw
pop
clc
adc
jmp
out
ins
add
push
or
jno
pop
sbb
push
popa
repnz
or
sub
arpl
sub
push
movs
dec
ja
cmps
test
ss
push
push
adc
dec
sbb
jae
ins
inc
push
jmp
ins
sub
fadd
xor
mov
fmul
inc
xlat
cmp
mov
js
loop
adc
and
pop
mov
jbe
mov
fstp
mov
sar
ja
jg
pop
fcmove
inc
pop
(bad)
xor
pop
or
sti
xor
xor
xchg
mov
dec
jl
push
repnz
ss
shl
mov
and
pop
sub
mov
inc
rol
mov
add
dec
stc
adc
popf
mov
inc
xor
xor
sbb
or
or
xor
repz
and
sbb
push
xchg
ret
jmp
aas
or
and
movs
rcr
sub
inc
push
mov
xor
adc
addr16
pop
dec
dec
into
and
popa
cmp
xchg
add
or
stc
xchg
mov
aaa
mov
sti
mov
lahf
addr16
add
sub
add
add
rol
fstp
shl
out
fist
jmp
int3
fidivr
pop
adc
sbb
xor
xchg
adc
dec
xchg
and
mov
prefetch
or
mov
cmp
frndint
adc
add
loope
test
arpl
daa
push
sub
sub
call
(bad)
jg
sbb
adc
fs
and
mov
inc
lods
mov
inc
add
xchg
jge
sub
es
lock
(bad)
les
out
cmp
xchg
in
(bad)
aam
fmul
adc
jno
ds
jb
movs
ins
cmp
inc
out
lock
push
mov
rcl
int3
out
lds
pop
jl
mov
sahf
xchg
pop
cmp
addr16
lock
fwait
aas
mov
jmp
fwait
xchg
outs
arpl
test
mov
daa
lds
inc
out
pop
lock
xor
jns
sub
out
jmp
jecxz
pop
in
ins
xor
mov
(bad)
stos
push
or
aam
sub
add
jg
add
std
add
add
inc
in
ins
push
sbb
ss
stos
and
cmps
push
clc
mov
xchg
loopne
and
sub
sbb
repz
bound
and
aam
dec
pop
jbe
bound
fdivr
retf
xor
hlt
mov
scas
xor
mov
or
cdq
adc
test
pop
fsubr
out
das
jmp
pop
mov
sub
jg
add
add
add
stos
cld
repnz
enter
sbb
add
mov
mov
push
sub
lods
mov
pop
mov
inc
xchg
cmp
cs
ins
mov
imul
aas
jp
inc
adc
jns
and
ror
or
(bad)
mov
ficom
mov
push
sbb
adc
xchg
adc
mov
xor
gs
sbb
retf
mov
and
sbb
clc
cmps
pop
mov
add
add
add
xor
jg
ret
mov
pop
jp
not
inc
sub
mov
jg
xor
fnstcw
lds
stos
pop
mov
iret
jno
pop
xlat
int3
pop
iret
repnz
pusha
cli
cs
in
es
inc
xchg
sub
sub
out
iret
ins
or
jno
stos
test
cmp
cmp
aam
(bad)
shl
xchg
jge
int
mov
retf
test
push
and
aas
ins
mov
xchg
add
cmps
lods
ins
outs
mov
push
adc
repz
sub
rol
jmp
out
add
or
arpl
addr16
ja
movs
jecxz
lea
aam
xor
rcr
xchg
(bad)
lds
fcmovnbe
dec
(bad)
xchg
mov
(bad)
(bad)
cdq
cmp
out
ds
out
inc
dec
pop
(bad)
sub
push
jbe
sub
in
inc
test
xlat
cmp
inc
rcr
nop
jle
mov
movs
retf
mov
aam
or
nop
hlt
xor
mov
adc
mov
leave
pop
pop
lea
mov
xchg
push
mov
inc
add
ja
mov
and
dec
and
in
aam
inc
sbb
mov
dec
push
xchg
hlt
mov
jae
cmc
pop
dec
mov
sub
les
and
dec
sbb
cdq
int
jmp
add
or
xlat
lods
ja
and
js
mov
pmaxub
add
call
xchg
and
(bad)
pusha
pop
pop
mov
and
cmp
repz
push
popa
imul
ret
pop
cwde
lods
scas
pop
test
les
repnz
icebp
adc
enter
popf
xchg
mov
jecxz
popa
push
jnp
push
test
sbb
jns
dec
or
cmc
inc
pusha
shl
xchg
xchg
das
inc
and
int3
inc
out
sub
sbb
fstp
mov
add
aam
(bad)
bound
sub
std
or
jbe
adc
xor
mov
imul
repnz
sbb
fcomp
jl
loopne
retf
push
jb
or
push
xchg
or
daa
adc
(bad)
iretw
inc
sahf
imul
and
pop
ja
movs
in
xor
lds
je
stos
jmp
aad
cmp
pop
jle
inc
or
fcom
pop
sbb
inc
jl
xor
fnstenv
xor
mov
mov
repnz
add
es
inc
push
shl
cmp
call
movs
nop
fwait
dec
sbb
mov
xlat
xor
dec
inc
ficom
mov
jns
out
fnstcw
sub
and
pop
xchg
(bad)
jmp
add
outs
inc
jmp
mov
jle
mov
mov
sub
cdq
xor
xchg
inc
adc
sub
cmp
in
inc
mov
cmp
sub
inc
clc
sbb
push
pushf
pop
int3
and
xchg
rcl
in
in
enter
dec
ins
movs
lahf
push
sub
sub
jp
mov
sar
xor
fwait
push
clc
retf
scas
lods
je
fadd
mov
jbe
pop
sub
pop
add
dec
sub
pop
(bad)
daa
adc
mov
je
ss
popf
cli
cdq
sbb
arpl
(bad)
push
in
mov
mov
call
adc
fwait
inc
aas
inc
push
or
clc
test
jl
test
cmp
sahf
cdq
loope
hlt
pop
out
dec
movs
fild
add
mov
add
fiadd
xchg
(bad)
ja
xchg
gs
xchg
int3
xchg
cmp
mov
pop
nop
lahf
les
cli
xchg
xchg
jns
ret
loope
add
xchg
call
(bad)
pop
jge
push
xchg
std
bound
popf
or
and
inc
sbb
arpl
jge
mov
aas
or
mov
dec
mov
sti
adc
outs
adc
cmps
cmp
mov
rcl
inc
push
mov
mov
(bad)
sub
xchg
cmp
movs
push
push
xchg
cmp
mov
and
mov
gs
sub
mov
or
cmp
xor
fmul
xchg
jmp
xlat
xor
xchg
fst
bound
sbb
ins
sub
imul
or
pop
imul
or
ins
sub
out
cmp
sar
pop
ret
push
sub
mov
retf
fnstenv
mov
lahf
xor
xor
mov
pop
inc
mov
xchg
mov
jmp
push
push
jmp
jecxz
lds
loope
into
js
sysret
cmp
mov
fist
pop
cdq
mov
add
or
cmp
push
sbb
arpl
sub
adc
mov
or
arpl
jne
loop
and
ret
pushf
add
pop
(bad)
ja
pop
sar
aam
(bad)
out
mov
test
mov
gs
push
sub
addr16
add
pop
or
call
mov
lock
push
adc
loop
mov
call
fs
cdq
mov
cmpxchg
gs
jg
in
add
outs
repz
jp
pusha
ret
mov
inc
cli
jno
fyl2x
dec
fisubr
cld
push
je
popa
lods
and
std
xchg
mov
int3
mov
outs
add
mov
mov
outs
cmc
mov
xchg
cmps
add
adc
push
dec
cmps
ror
neg
jns
and
push
push
addr16
inc
push
rol
jmp
aam
data16
xor
repnz
mov
enter
add
sbb
adc
mov
imul
addr16
sub
movs
xchg
aad
into
sbb
sar
scas
je
div
(bad)
pop
xor
adc
sub
out
add
lods
sub
inc
adc
sub
xchg
cmp
and
pop
xchg
dec
mov
rol
dec
add
sbb
and
mov
cwde
scas
hlt
dec
outs
sub
out
mov
adc
mov
push
in
stos
push
nop
ins
lahf
ffree
fnsave
xor
aaa
adc
test
fidivr
daa
inc
jmp
mov
mov
xchg
adc
lods
lds
stos
mov
xchg
pop
in
nop
adc
stc
sbb
(bad)
call
data16
push
jmp
pop
shr
xchg
mov
test
ja
mov
test
arpl
ja
jns
mov
xchg
scas
aaa
sti
pop
cmp
jno
inc
ret
jecxz
xor
jle
dec
jecxz
data16
(bad)
rol
jecxz
sbb
cmps
rcr
out
inc
stc
push
sub
xchg
in
jo
sbb
fimul
mov
push
fnstcw
add
adc
ds
sbb
xchg
xor
clc
(bad)
push
xor
and
fstp
xchg
(bad)
sbb
jle
push
mov
add
mov
shl
mov
push
leave
xchg
repnz
and
adc
cmp
dec
push
(bad)
sti
fwait
and
cs
clts
or
xchg
js
scas
mov
stos
addr16
outs
out
cld
xchg
aas
lds
fistp
retf
lock
bound
jge
in
mov
pop
movs
jg
in
lods
out
mov
test
inc
call
shl
lods
mov
cdq
clc
mov
jge
dec
mov
sahf
jecxz
daa
and
xchg
jl
push
and
int
adc
push
mov
fistp
pop
clc
mov
cmps
mov
seto
dec
jecxz
lea
dec
push
add
adc
inc
and
data16
lods
shr
frstor
or
mov
cli
adc
xchg
add
xlat
adc
call
adc
or
jl
or
pop
xchg
xor
pop
aaa
sti
popf
scas
test
mov
mov
rcl
jo
push
sub
sbb
and
in
mov
jl
cmp
and
jmp
scas
xor
mov
adc
sbb
add
inc
pusha
adc
cmp
(bad)
pop
stos
xor
je
ds
stc
sbb
dec
dec
push
mov
dec
push
and
ds
mov
loop
dec
jns
and
out
push
mov
ja
jnp
xor
xchg
push
xlat
lock
clc
mov
xor
leave
in
hlt
nop
(bad)
rol
jae
push
sahf
pop
dec
cmp
push
das
retf
sbb
add
cdq
sub
add
clc
rcl
call
test
or
aas
cmp
shr
sbb
jmp
popf
ja
cmp
cmc
sub
lods
mov
gs
scas
call
add
retf
add
add
add
fsubrp
(bad)
dec
arpl
out
and
push
mov
jmp
pop
std
rcl
aam
outs
std
fmul
aaa
in
pop
jecxz
bound
ja
mov
mov
jge
jmp
sub
jmp
cmp
aas
adc
adc
rcl
mov
mov
mov
xor
xor
jge
rcr
jne
ds
cmp
xor
push
jle
gs
jae
fcmove
sbb
stos
pop
neg
jp
fldenv
fdivr
add
mov
ret
mov
dec
adc
mov
test
inc
sub
adc
mov
sar
cld
in
inc
lahf
dec
inc
popa
aas
ds
neg
shl
aas
sbb
mov
fiadd
dec
xor
in
and
fwait
pop
cdq
je
adc
aaa
ror
inc
and
ins
xchg
sti
cmp
std
add
popf
push
jp
and
inc
and
jne
rol
jle
inc
int3
jge
xor
loop
imul
jmp
enter
and
cwde
shl
jmp
pop
lods
xchg
pop
arpl
in
pop
das
addr16
mov
xor
ds
jp
xchg
ins
ss
(bad)
arpl
cdq
mov
jp
xor
fstp
shl
sub
jp
in
(bad)
xchg
inc
pop
call
jl
or
aas
mov
xchg
aaa
dec
enter
inc
pop
into
mov
mov
adc
fdivrp
imul
retf
scas
xchg
aaa
mov
mov
movs
out
int
pop
pop
cmp
(bad)
mov
push
and
(bad)
jne
push
sub
mov
fst
jmp
push
call
cdq
inc
fcom
jge
pop
mov
div
repz
or
clc
mov
repnz
call
dec
push
push
inc
push
mov
fld
add
fwait
(bad)
pop
xchg
rcr
add
(bad)
iret
dec
jle
scas
shl
(bad)
mov
jl
imul
jmp
add
sbb
mov
pop
push
jge
sbb
add
jo
(bad)
es
mov
jbe
es
loope
or
add
movs
pop
xchg
push
lods
adc
in
adc
jle
or
lock
mov
sti
push
cmp
or
add
adc
(bad)
sub
shl
cmc
ret
jo
neg
sub
pop
and
jne
mov
pop
out
mov
jl
xor
out
adc
ja
call
sar
fs
test
sub
sar
sti
and
pop
jl
adc
inc
push
dec
leave
mov
inc
jno
adc
dec
inc
cmc
mov
sbb
pop
mov
outs
(bad)
and
jecxz
lods
ret
sbb
loope
push
mov
push
lods
clc
xchg
mov
or
ja
jecxz
cwde
xchg
add
cmp
cmp
fnsave
dec
pop
cwde
mov
or
mov
bnd
fisttp
dec
pop
pop
cmp
lods
pop
sbb
push
in
xchg
jle
jbe
ja
sub
cld
(bad)
fdivr
cmp
xchg
stos
ins
arpl
xlat
cmps
cmp
sub
(bad)
cmp
push
jle
das
adc
pop
inc
or
fs
jmp
pushf
out
out
in
cmp
add
add
out
jp
xor
test
and
push
push
inc
ds
daa
jo
cmps
xor
cmp
pop
jo
jns
fistp
sub
mov
ror
push
xor
pushf
in
inc
pushf
and
movs
xchg
jns
mov
xlat
bound
push
jno
pop
stc
inc
or
test
icebp
sub
push
mov
sbb
sti
dec
push
sbb
(bad)
fdivr
lods
xchg
sub
dec
je
sbb
pushf
mov
cmp
in
adc
push
(bad)
mov
scas
std
xchg
rcr
out
std
sub
jp
xchg
cmp
(bad)
fxtract
push
mov
pop
stos
fld
jo
dec
or
fistp
sub
xchg
inc
mov
mov
mov
jmp
or
leave
cli
pop
addr16
ins
jge
ret
bound
arpl
in
std
js
lahf
lods
dec
inc
ins
pushf
cli
mov
leave
add
jb
pop
out
pushf
mov
addr16
leave
(bad)
in
stos
xor
mov
jle
(bad)
dec
sub
cs
sub
das
pop
jmp
jne
cmp
in
dec
scas
mov
js
jnp
jo
shl
test
xor
into
lods
cmp
push
sbb
sub
or
lahf
test
jmp
(bad)
or
call
pop
jbe
or
adc
and
or
outs
or
sub
cli
ret
dec
scas
add
cmps
mov
nop
adc
pop
je
sbb
or
xor
fstp
pop
pop
imul
jl
inc
inc
repz
xlat
jns
push
jb
sub
ins
enter
add
fisub
in
and
inc
inc
or
(bad)
push
pop
xor
inc
inc
in
imul
dec
loopne
dec
test
add
in
lock
ins
arpl
mov
push
test
int
mov
dec
lea
imul
aaa
bound
je
jns
fst
and
ja
jne
mov
cmps
(bad)
mov
ss
clc
stc
adc
rcl
push
movs
and
imul
xchg
add
fsub
lea
test
mov
mov
and
bound
stos
retf
cmp
jb
mov
loop
dec
ret
cs
fsubrp
cli
jno
push
mov
jecxz
sar
imul
ret
jno
ins
xor
movs
dec
test
lds
lea
jmp
fwait
sbb
rol
in
test
cmp
inc
js
or
cmc
push
arpl
movs
lods
jl
cmp
push
jns
mov
dec
ds
out
lods
fcom
aam
sti
xchg
push
pushf
and
push
cdq
jnp
ret
adc
and
mov
ja
add
jge
jmp
fsub
push
lods
jmp
fnstsw
(bad)
or
push
xchg
xchg
in
mov
mov
xor
mov
pushf
sub
mov
and
fwait
out
sbb
lock
fldenv
scas
jmp
xchg
pop
pop
cmps
pop
lea
xchg
push
push
mov
popa
pop
mov
aaa
in
shr
xchg
inc
lea
es
mov
cli
jmp
(bad)
loopne
lock
xchg
cmp
pop
mov
and
sbb
push
jmp
loopne
repz
mov
div
pop
test
pop
test
xor
pop
mov
inc
push
sbb
add
out
into
fdiv
jne
jg
into
arpl
(bad)
ficomp
repz
bound
loopne
cmps
loopne
out
test
les
cmps
dec
ret
mov
inc
popf
adc
or
scas
test
outs
xchg
daa
clc
call
stos
mov
fsubr
loopne
and
cmp
and
inc
push
inc
fldenv
ret
jbe
sar
loop
(bad)
(bad)
xchg
jle
call
add
mov
gs
jo
push
pushf
mov
mov
inc
xchg
push
nop
push
add
rcl
scas
mov
shl
pop
aaa
arpl
movs
pusha
in
enter
add
pop
or
popf
test
adc
in
jl
mov
or
ins
ret
test
xor
inc
mov
mov
out
xchg
or
mov
leave
ins
clc
lock
fsubr
lahf
arpl
mov
jb
aad
dec
xchg
lods
out
movups
inc
and
push
pop
add
xor
mov
adc
or
iret
ins
jnp
call
ret
xchg
daa
xchg
lods
cmps
test
mov
fs
and
push
into
or
(bad)
mov
xchg
repz
out
xchg
into
lds
dec
pushf
cmp
ja
cmp
inc
mov
daa
add
ret
fadd
add
mov
stos
add
xchg
push
into
push
cwde
cmps
pushf
leave
pop
into
out
mov
xchg
(bad)
lods
sbb
shl
rcr
mov
cli
fcom
mov
aaa
into
ins
mov
mov
sbb
clc
movs
or
mov
cmps
xchg
add
mov
cmps
scas
xchg
and
push
or
pop
mov
aas
and
push
leave
data16
lods
dec
cmp
mov
shr
mov
call
mov
mov
add
nop
xchg
jmp
mov
xlat
es
xor
aaa
jb
push
mov
jbe
leave
dec
push
out
inc
loopne
dec
int3
pop
jbe
lods
leave
mov
mov
sbb
mov
ins
dec
retf
xchg
(bad)
cwde
mov
or
sub
nop
mov
pusha
cmp
loope
imul
push
ja
retf
icebp
mov
repz
inc
mov
cmp
and
adc
mov
ror
stc
call
popf
ss
push
adc
jmp
mov
call
retf
mov
dec
test
dec
inc
out
call
rep
cmp
mov
or
loope
pop
ins
jle
dec
adc
lods
add
dec
adc
or
(bad)
cmp
adc
xor
repnz
out
mov
fwait
movs
mov
dec
xchg
mov
pop
add
cmp
pusha
jne
repnz
add
nop
out
das
add
add
add
add
mov
add
and
in
xchg
mov
cli
aad
aas
pop
test
sub
sub
dec
cmp
jo
jmp
out
loope
mov
mov
pop
stc
mov
and
out
jae
push
cld
adc
cmc
pop
dec
(bad)
push
shl
jo
adc
mov
test
(bad)
out
mov
push
cmp
lea
pop
xchg
pusha
sub
xchg
rcr
aas
xchg
fwait
lahf
out
mov
push
mov
xchg
js
pop
(bad)
fld
(bad)
mul
pop
not
xchg
inc
add
mov
xor
ins
pop
loop
addr16
push
cld
aad
lods
mov
fadd
or
pusha
or
ja
aad
dec
pop
scas
xor
arpl
movs
bound
jne
mov
adc
mov
jecxz
xchg
adc
mov
cmps
xlat
(bad)
dec
cmps
add
dec
fidivr
sbb
and
jg
out
outs
(bad)
add
mov
mov
jl
push
cmp
or
rcl
push
xchg
pop
arpl
jnp
loop
push
lods
call
cli
(bad)
out
push
mov
pop
push
xchg
das
and
fbld
dec
jmp
inc
out
and
lods
jns
int
jmp
pop
jbe
bnd
mov
sbb
cld
cmp
out
push
and
sub
inc
cwde
stos
and
and
mov
enter
or
scas
cwde
jecxz
(bad)
pop
sbb
cwde
inc
xor
mov
cmp
(bad)
shl
popf
cwde
mov
popf
lods
mov
cdq
mov
ret
pop
jno
mov
or
mov
inc
dec
xor
lock
add
xor
lods
rol
dec
ficomp
and
aaa
jbe
fs
retf
xchg
lods
inc
ins
mov
inc
adc
jmp
clc
aas
mov
lea
dec
mov
mov
call
push
jge
push
test
xchg
xchg
test
push
fbstp
jno
adc
adc
pop
inc
inc
xchg
push
pop
jle
xchg
jmp
test
jb
push
adc
or
mov
xor
fsubr
xchg
adc
push
out
sti
xor
and
xchg
sahf
cmp
stos
arpl
iret
ds
test
adc
movs
enter
jl
scas
sub
loope
xor
jo
or
adc
pop
ins
stc
sar
int3
xchg
(bad)
push
or
ins
fs
test
cmp
in
jmp
nop
sahf
retf
pop
jb
enter
je
stos
push
into
mov
enter
push
jns
gs
dec
ja
int
std
leave
cli
pushf
imul
les
jmp
cmps
sub
(bad)
fnsave
jno
jne
cmp
pushf
mov
fld
mov
popa
into
cmp
push
test
xor
jle
shl
adc
add
lods
(bad)
enter
mov
xchg
mov
dec
(bad)
or
xchg
test
pop
outs
adc
pop
and
mov
xor
inc
or
jl
xchg
cmp
aam
(bad)
out
push
or
lods
adc
inc
and
xchg
add
jecxz
xor
mov
dec
push
xor
xchg
fmul
cmps
cwde
xor
lds
xchg
sbb
nop
push
jns
mov
xchg
pop
fmul
cld
mov
dec
adc
ins
pop
scas
rol
dec
cli
das
call
push
ss
loopne
mov
fcomp
lock
not
dec
jo
sbb
ret
xchg
jmp
outs
or
aaa
mov
sbb
push
enter
icebp
mov
in
fld
ds
inc
cmp
mov
nop
pop
mov
imul
shl
xchg
(bad)
iret
in
outs
push
jg
into
ins
inc
pop
lods
pop
mov
mov
lahf
out
sub
cmc
rol
and
out
mov
test
pop
(bad)
inc
xchg
stos
fisub
inc
popf
jnp
pop
in
and
pop
push
pop
jns
sub
aad
push
jo
(bad)
add
add
pop
add
fld
add
jmp
lods
pop
(bad)
push
cmp
ins
frstor
imul
pop
mov
jo
lods
dec
cs
inc
sbb
fsubr
jne
not
lds
mov
setno
push
shl
mov
sar
int
or
and
inc
ret
cmc
(bad)
pop
sbb
aas
hlt
pop
pop
push
cmp
jg
jecxz
stos
ror
mov
adc
sub
into
pop
mov
add
aaa
cwde
inc
(bad)
repz
mov
sbb
pop
neg
retf
add
aad
xor
inc
enter
int3
xor
sub
fst
les
ror
sahf
pop
lahf
jnp
inc
dec
xor
sub
iret
cs
(bad)
sub
jno
ins
sbb
push
into
cmp
pop
jbe
rol
sbb
(bad)
mov
add
out
mov
mov
addr16
not
fwait
pop
retf
into
icebp
retf
js
inc
arpl
cdq
add
mov
add
adc
push
sub
jg
sbb
jp
outs
inc
out
repnz
mov
nop
and
je
add
push
xor
mov
ins
fistp
dec
into
in
pop
push
aaa
movs
movnti
and
je
inc
pop
mov
mov
cmc
pusha
enter
loop
or
fcomp
and
cmp
xor
xor
fwait
add
jecxz
pushf
cmp
jae
std
xchg
cmc
adc
or
in
shl
adc
int3
jp
push
icebp
dec
sub
cwde
inc
lods
inc
and
add
pop
sub
ja
push
inc
push
push
out
xchg
cmc
mov
mov
call
loopne
push
push
popa
shr
retf
add
std
mov
icebp
xchg
repnz
sbb
push
xchg
xchg
mov
xor
mov
mov
mov
sub
jb
outs
nop
jg
(bad)
mov
and
(bad)
cs
int
fnstsw
imul
pop
nop
mov
call
mov
inc
mov
sti
xchg
fstp
out
(bad)
aam
cwde
dec
dec
and
jg
(bad)
fimul
(bad)
(bad)
call
adc
sub
push
lods
inc
mov
je
sbb
int
test
push
xchg
pop
pop
pop
sub
outs
cld
int3
add
mov
xor
dec
add
xchg
adc
mov
mov
ds
mov
push
pop
mov
add
push
call
sbb
movq
jae
loopne
mov
xchg
leave
data16
or
jne
sub
fucomp
mov
mov
stos
sbb
mov
sbb
cmps
pop
push
lods
enter
jle
paddsw
sahf
adc
loopne
retf
nop
xor
std
dec
and
inc
dec
sbb
cld
inc
mov
jnp
lahf
imul
pop
mov
sub
(bad)
jp
sub
jecxz
mov
loop
repnz
jle
or
mov
xor
or
test
ins
mov
movs
jno
ret
ror
das
push
mov
lahf
fisub
dec
cmp
repz
push
in
leave
in
xor
sti
(bad)
xor
xchg
mov
mov
lds
fidiv
mov
in
loopne
outs
aam
mov
or
imul
ret
shl
mov
(bad)
adc
jne
jmp
into
je
cmps
rol
sar
push
jnp
das
xchg
push
inc
imul
out
int
iret
jl
mov
inc
xchg
cmps
add
mov
je
out
lods
outs
xchg
mov
jmp
rcr
pop
(bad)
and
mov
sub
in
test
imul
add
pop
and
cli
sbb
mov
cdq
add
sahf
mov
arpl
ins
sti
dec
mov
xchg
fdiv
outs
clc
sahf
xchg
call
xor
mov
lahf
(bad)
dec
xchg
jge
ficom
iret
pop
ficomp
push
mov
arpl
jecxz
sub
inc
sbb
not
pop
movs
aam
outs
push
jle
jmp
cdq
jns
xor
mov
mov
push
(bad)
push
push
sub
out
lea
inc
fst
inc
pusha
xor
sets
mov
(bad)
dec
and
fdiv
jne
lods
mov
adc
repnz
mov
mov
scas
pusha
pusha
xchg
call
or
and
jecxz
dec
fisubr
cmp
xor
outs
loopne
mov
dec
stos
adc
push
xchg
scas
xchg
(bad)
mov
and
lock
xor
and
jno
xor
and
and
xlat
mov
xchg
push
or
pop
sub
pop
sub
outs
sahf
popa
cmc
mov
cmp
retf
out
and
pop
cmc
mov
sub
test
sub
cmc
shl
ss
int
mov
aam
dec
ss
bound
sub
mov
repnz
(bad)
enter
mov
(bad)
movhps
sub
cdq
iret
ds
jmp
imul
mov
aad
cmp
jecxz
add
aaa
pushw
(bad)
and
loopne
mov
out
lds
cmp
jno
and
stc
sbb
popf
mov
sti
xchg
or
mov
cmps
popa
cmp
sub
mov
fmul
outs
(bad)
ss
xchg
cmp
fst
je
int
(bad)
pop
arpl
clc
add
jno
mov
ins
sbb
add
mov
jns
fisubr
cwde
repnz
mov
icebp
mov
test
cmps
adc
sahf
sbb
imul
(bad)
js
out
addr16
xchg
cs
jle
(bad)
cmp
repz
popf
push
cmp
mov
fldenv
cld
lods
test
adc
fidiv
pop
mov
hlt
xor
(bad)
push
mov
add
ins
test
out
lods
arpl
push
add
sti
scas
mov
(bad)
sbb
dec
pop
mov
mov
call
mov
mov
hlt
loope
xchg
out
push
pop
push
test
idiv
ficom
int
and
rcr
ins
int3
dec
fwait
test
cmc
stc
test
stos
sti
adc
mov
ret
and
shr
sbb
lds
jl
push
or
jmp
std
retf
das
out
sub
jns
ss
adc
dec
(bad)
jecxz
pop
out
push
bound
addr16
inc
jecxz
cmp
cmc
gs
shl
mov
pop
jmp
(bad)
fisubr
mov
push
scas
bound
addr16
xchg
jbe
mov
pop
mov
or
xchg
push
sub
dec
test
test
sub
push
push
mov
pop
imul
mov
inc
fisttp
push
fst
call
jl
add
add
add
add
in
fmul
xchg
je
shl
inc
cmp
lods
jecxz
adc
jle
fwait
dec
cmp
jb
sub
mov
into
sub
mov
mov
and
mov
jl
mov
jmp
sbb
dec
mov
cmp
shl
sub
mov
inc
jmp
mov
jbe
mov
pop
js
xchg
push
sbb
push
mov
ja
in
ins
jge
in
repnz
out
ins
push
mov
adc
fwait
cmp
or
out
aaa
sbb
sbb
mov
(bad)
in
or
or
xchg
das
sbb
mov
aas
ror
push
syscall
in
arpl
test
jg
or
adc
jp
popf
or
push
test
pop
push
jmp
dec
inc
out
pop
nop
js
out
les
test
inc
sahf
aaa
and
add
aad
push
dec
xchg
ror
inc
xchg
test
inc
(bad)
push
mov
ins
jmp
jb
fdivrp
cmps
(bad)
and
(bad)
adc
in
pushf
add
(bad)
stos
imul
ret
mov
fidivr
jo
dec
mov
mov
add
mov
jb
push
pop
jl
fisubr
cmc
push
mov
jl
sbb
(bad)
dec
retf
pop
sub
sbb
sbb
into
je
adc
jo
scas
sbb
or
inc
outs
les
inc
das
cmps
movs
movs
adc
iret
or
pop
shl
scas
inc
addr16
sub
dec
inc
in
cli
neg
push
lock
mov
hlt
fadd
push
jmp
xchg
movs
ss
mov
mov
mov
add
jae
adc
data16
adc
test
movs
ret
dec
(bad)
cli
bound
lahf
adc
cs
or
call
sbb
icebp
pop
pop
push
divps
fs
fistp
add
inc
adc
or
mov
aad
push
inc
or
lods
mov
sub
(bad)
xchg
adc
repz
xlat
(bad)
cmp
clc
xor
xor
dec
setp
stos
pop
sub
pop
cdq
push
mov
dec
into
leave
fiadd
movs
int
retf
push
(bad)
mov
cmps
fldenv
jmp
rcl
not
sbb
inc
xchg
icebp
or
aam
outs
and
mov
in
adc
in
sbb
fsubr
add
pop
jnp
jle
or
or
and
add
add
cwde
inc
shl
dec
or
or
add
int
cmp
mov
push
sbb
lea
push
and
jp
xchg
inc
sbb
mov
jecxz
in
retf
pop
ret
pop
aas
imul
enter
mov
lods
movs
jmp
mov
push
int3
mov
add
sub
jmp
xchg
ss
std
lock
cld
in
jae
add
fst
jae
cmp
mov
push
aaa
cmp
into
test
mov
cmp
aaa
push
in
into
in
xchg
lods
xchg
xor
cmp
ins
sub
xlat
std
out
dec
fstp
or
mov
retf
out
sub
mov
scas
and
repz
ret
not
xchg
js
xor
inc
leave
(bad)
push
iret
jo
shl
imul
mov
xor
and
jnp
cmp
lods
test
ud1
ret
jmp
std
pop
xchg
repnz
xchg
xchg
lahf
mov
stos
pop
sub
or
adc
std
out
xchg
out
mov
das
(bad)
stc
mov
aas
call
dec
cdq
adc
or
dec
test
idiv
sahf
mov
push
jbe
and
fiadd
adc
les
mov
jecxz
sbb
inc
dec
rcr
or
and
lds
inc
inc
pop
push
cmps
lea
clc
inc
cwde
xchg
aaa
sbb
repz
and
mov
cmp
mov
jnp
xlat
add
mov
out
sbb
imul
fdivr
loopne
push
loop
stc
xor
shl
std
jecxz
(bad)
ret
out
mov
sub
(bad)
xor
out
jbe
push
ret
rol
in
out
sub
daa
int3
xchg
push
mov
mov
addr16
dec
push
out
stc
xor
inc
lods
repz
jne
mov
mov
push
mov
mov
jae
xchg
push
jle
sub
xor
cdq
sub
add
pop
add
cmps
std
outs
ins
mov
ss
mov
xor
or
loop
std
test
das
outs
cmps
int
mov
and
cmp
sbb
int3
or
stc
xor
shr
fst
or
adc
mov
jle
mov
or
cmp
dec
retf
in
sbb
lds
fsubrp
cmc
popa
fcmove
bnd
jne
scas
mov
sub
aad
dec
sbb
lock
gs
or
lahf
mov
jns
lea
imul
adc
ja
lods
mov
adc
add
shl
mov
and
ja
popf
or
mov
xor
jge
jns
inc
jl
dec
xor
cmp
adc
jmp
cmp
imul
test
xchg
(bad)
test
gs
cmp
cmp
mov
loope
inc
rcl
stos
ficomp
in
stos
adc
lock
xlat
fidivr
cmp
xchg
cmp
lods
jae
out
mov
loop
arpl
jmp
sub
loop
mov
and
jl
sahf
add
aam
call
in
xchg
repnz
fstp
call
stos
jmp
enter
(bad)
sub
xchg
xchg
adc
ins
xor
inc
or
repnz
sub
mov
shl
push
call
stc
test
mov
sub
in
sbb
push
(bad)
outs
mov
mov
or
js
fs
push
in
repnz
pusha
int
and
addr16
or
add
xchg
push
xchg
ins
adc
or
mov
(bad)
mov
and
and
xchg
aam
push
shl
mov
dec
icebp
inc
repnz
or
cmp
add
jmp
cmp
fadd
push
mov
jmp
pop
mov
rol
test
cwde
jbe
pop
aad
cmp
xchg
retf
cmp
sbb
mov
xchg
jbe
push
cs
adc
ret
xlat
fwait
cmp
jmp
pop
jp
(bad)
ins
mov
cmps
into
xchg
icebp
mov
pop
and
pop
mov
and
mov
js
add
mov
or
xchg
lock
xchg
movs
push
pusha
sub
jbe
xchg
or
in
lods
xor
xor
in
pop
push
les
push
out
or
sbb
lods
inc
cmps
scas
iret
or
pushf
ins
cmp
dec
cmp
add
out
popa
into
mov
jns
retf
pop
pop
popf
cmc
stos
mov
dec
jns
pop
inc
loope
sub
xlat
push
jle
pop
push
xor
addr16
imul
pusha
lods
push
lock
dec
xchg
mov
add
and
ret
mov
pop
cmp
mov
xlat
xor
mov
sub
inc
xor
push
inc
cmc
shl
mov
adc
mov
xor
sti
retf
scas
dec
pop
aad
or
outs
int3
sbb
xor
mov
les
ins
sbb
push
push
fistp
jmp
xchg
ret
xor
mov
and
in
mov
pop
xchg
popf
pop
sub
fsub
jg
cld
sbb
sbb
or
aaa
push
add
pop
stc
pushf
mov
or
arpl
cmp
imul
popa
repz
inc
test
mov
repz
outs
ins
popa
aas
ss
mov
(bad)
aad
inc
inc
leave
lods
jns
sub
xor
stc
test
leave
xor
lds
jns
gs
cmp
test
mov
popa
movs
(bad)
cld
cmc
sbb
hlt
hlt
pop
mov
jl
or
ja
and
popa
mov
push
test
out
test
jmp
xchg
mov
push
daa
jecxz
and
jecxz
addr16
mov
lods
push
sub
push
enter
sar
cmp
and
jl
rcr
btr
or
add
jp
jp
cmps
or
not
jbe
ins
jge
ficom
sbb
add
scas
icebp
xor
pop
rol
lea
ret
repnz
ins
nop
sbb
push
rol
sub
adc
xchg
dec
lds
addr16
retf
jbe
mov
in
sbb
call
xchg
lea
scas
les
fld
inc
popf
(bad)
rcl
out
ds
inc
clc
stc
sbb
shl
sub
int3
add
jbe
repnz
dec
jnp
hlt
cmc
xor
(bad)
mov
aas
or
mov
or
mov
inc
hlt
sub
pop
iret
jb
(bad)
(bad)
ds
xlat
mov
pop
and
arpl
xor
int
add
addr16
jmp
call
ins
adc
movs
jnp
retf
xchg
lock
xor
jecxz
aad
pop
enter
adc
push
cmp
outs
das
mov
fwait
adc
imul
repz
push
rcl
ds
ds
nop
mov
jge
inc
repz
rcr
pop
xor
jmp
jmp
call
movs
mov
push
fs
pop
fwait
mov
stos
push
lahf
push
xor
and
mov
push
out
push
lds
mov
enter
dec
rol
mov
inc
sub
mov
fs
imul
(bad)
stc
loopne
push
jl
lea
stc
add
and
cld
dec
jp
sbb
and
mov
lock
jmp
shl
jns
jno
mov
cmp
cli
add
cld
jo
sbb
and
sbb
nop
push
ficomp
adc
mov
add
add
add
jbe
sbb
rol
aas
add
jb
cmps
leave
xor
mov
int
dec
jmp
jb
test
inc
pop
fisubr
mov
push
inc
outs
shr
xor
pusha
std
pop
pushf
lahf
push
and
pushw
jns
repnz
mov
dec
push
push
in
pop
lahf
cmps
sub
xchg
out
and
(bad)
or
stos
mov
(bad)
xchg
and
in
cmp
jo
mov
retf
jno
xchg
test
ret
add
push
adc
cmps
sub
add
scas
repz
xor
hlt
cmc
js
pop
mov
sub
inc
sbb
inc
fld
nop
dec
dec
call
jns
in
loopne
inc
das
adc
mov
sbb
and
sub
jnp
ins
arpl
jbe
in
clc
int
shl
call
jae
inc
xchg
data16
aad
mov
cli
jge
stos
(bad)
xchg
mov
(bad)
movs
push
cmp
ret
mov
jmp
pop
jae
cmps
(bad)
ss
jecxz
shl
popf
and
icebp
daa
aad
and
pop
push
xchg
pop
push
(bad)
into
cli
mov
push
mov
fisttp
xor
xchg
arpl
aas
icebp
add
add
mov
pop
mov
ret
add
and
mov
mov
jg
and
add
pop
push
add
(bad)
push
add
mov
inc
in
jae
mov
jne
test
jp
in
push
clc
dec
loopne
in
daa
xor
fs
retf
es
inc
ins
daa
cmp
adc
(bad)
add
fs
dec
add
pop
jbe
sbb
xor
jecxz
retf
bound
inc
and
push
push
fbld
xor
div
hlt
inc
js
or
(bad)
mov
jne
(bad)
enter
(bad)
xor
pushf
jl
xchg
push
cmp
and
xchg
dec
dec
inc
dec
jno
push
and
inc
ret
repz
jle
mov
xchg
jg
scas
sti
jns
mov
(bad)
jl
mov
mov
push
test
ret
jnp
xchg
xor
out
stos
fwait
aad
(bad)
xor
es
sbb
cli
das
dec
jecxz
pop
xchg
sub
sahf
push
rol
aad
and
mov
mov
mov
pusha
xor
or
push
jmp
je
xlat
xchg
fimul
jnp
retf
aaa
dec
loopne
stos
mov
(bad)
paddusw
popa
data16
pop
ret
imul
mov
push
nop
jp
xlat
mov
adc
mov
sub
and
mov
push
add
popa
inc
or
clc
push
mov
xchg
jno
sbb
xchg
pop
cmps
pushf
push
pop
xor
hlt
push
cld
ins
mov
popf
enter
sti
mov
das
or
hlt
mov
push
push
cdq
inc
scas
jmp
test
adc
jge
mov
and
dec
pop
repnz
call
xchg
in
out
fstp
xchg
faddp
mov
movs
ins
cmp
cmp
enter
jmp
outs
shr
fyl2xp1
pop
js
lds
xor
pop
fist
stos
in
aad
fwait
mov
retf
es
mov
test
std
mov
dec
xor
rcl
inc
push
jle
jp
mov
scas
push
sub
ds
stos
repz
or
pop
push
repnz
jne
clc
shr
xchg
aas
enter
gs
arpl
add
fwait
(bad)
jnp
icebp
ja
in
cmovo
(bad)
xchg
or
cmp
cdq
adc
dec
lahf
xor
mov
sahf
(bad)
cmp
push
fnstenv
mov
inc
movs
jmp
adc
jmp
sbb
jg
cmc
adc
das
adc
cmp
les
cli
ins
xor
or
in
jecxz
push
jl
xchg
push
cmp
rcl
mov
pop
cmp
dec
push
lock
or
inc
call
dec
aas
sub
and
mov
push
dec
fistp
dec
(bad)
pop
into
inc
push
lds
push
in
mov
sbb
sub
sub
cdq
(bad)
sbb
shl
pop
push
popf
fwait
add
outs
pop
outs
clc
dec
sbb
ja
mul
dec
loopne
jb
xchg
ins
sahf
sub
(bad)
dec
fisttp
imul
cmp
std
xchg
xchg
aam
jecxz
lahf
test
jle
add
inc
ins
xor
imul
dec
sti
sbb
loop
mov
inc
data16
not
mov
cmc
repz
push
adc
inc
inc
loopne
movs
dec
pop
nop
std
sub
pop
mov
add
test
lods
pop
sub
cmp
push
inc
repz
and
fidivr
push
popf
(bad)
xchg
cmps
mov
add
fwait
mov
or
out
jmp
mov
test
jge
int
mov
push
movs
dec
add
or
(bad)
push
sahf
xchg
jne
repz
jno
push
mov
arpl
lahf
cmp
cmp
in
sar
ins
mov
imul
in
sub
jbe
scas
cmp
aad
inc
push
sub
jp
jno
push
paddq
inc
loop
dec
js
pop
aas
mov
dec
xchg
fbld
push
mov
and
inc
popa
sbb
aaa
test
xchg
rcr
imul
pushf
stc
ret
jle
lahf
rcl
dec
cld
cwde
mov
sbb
aas
mov
je
push
shr
and
mov
xor
fidiv
cmps
cmp
push
stc
sbb
in
and
dec
jae
das
popa
jae
and
push
pop
(bad)
fadd
fst
pop
lods
push
pop
mov
shl
sub
and
pop
ins
movs
(bad)
push
lds
mov
xchg
pop
ficomp
jo
push
fst
inc
push
pop
lea
xchg
mov
(bad)
fsub
jno
jns
and
fcom
jno
out
lock
cli
ror
icebp
(bad)
pop
scas
adc
pushf
test
repnz
add
clc
cli
popa
or
pop
sbb
cmp
dec
repz
std
out
loope
idiv
jne
mov
push
cs
jmp
xchg
fdiv
cmp
pop
add
jl
xchg
pop
dec
cld
(bad)
pop
cmp
xchg
lds
sub
xchg
adc
mov
push
js
lahf
mov
test
sbb
add
jnp
inc
fwait
neg
and
dec
stc
push
ret
retf
adc
out
rcr
push
adc
(bad)
call
fs
fcmovnbe
into
xor
ret
sub
mov
pop
inc
push
pop
sub
inc
loope
bound
sbb
and
loopne
idiv
out
out
mov
pop
add
or
mov
cli
pop
test
leave
mov
pop
mov
pop
popf
out
enter
pop
cs
and
das
fnstsw
xchg
push
add
adc
into
nop
sbb
cmp
lds
sti
into
sbb
jg
inc
add
add
call
cmc
nop
mov
shl
outs
(bad)
pop
lods
leave
in
xchg
pop
xchg
aam
mov
mov
imul
enter
fcomip
sbb
ins
mov
scas
sbb
sub
mov
sbb
xchg
mov
fneni(8087
cmp
dec
xlat
scas
lock
jno
push
cwde
xchg
fisub
mov
xchg
retf
dec
es
push
mov
push
push
push
and
add
push
inc
inc
retf
cmp
int
lahf
cmp
outs
dec
(bad)
and
mov
xchg
test
and
sbb
out
stc
sub
jg
jl
scas
pop
jle
xchg
test
sub
push
sbb
in
sar
adc
sbb
shr
lods
or
call
ret
test
adc
and
inc
jge
mul
cwde
ret
add
mov
mov
pushf
jg
xchg
jo
out
pop
jmp
daa
mov
xchg
pushf
aam
stc
mov
leave
push
cmc
int
xchg
mov
xchg
out
jo
fdiv
mov
adc
or
jmp
mov
mov
xchg
push
js
inc
fwait
sbb
sar
int
lock
sbb
jmp
outs
sub
xchg
in
int3
mov
cmp
jae
adc
(bad)
sbb
not
xlat
or
mov
jns
push
fild
adc
jbe
call
push
stos
out
daa
jp
test
add
fcom
das
outs
sub
int3
lods
mov
inc
iret
jmp
int
push
sub
das
popf
adc
sti
dec
das
mov
jle
iret
mov
(bad)
leave
bnd
pop
xchg
pusha
xor
cmps
les
mov
pop
pop
push
xchg
mov
push
adc
std
inc
and
xlat
popf
hlt
inc
imul
js
cmp
xchg
add
sahf
xchg
fistp
cmp
cmp
fistp
(bad)
push
sub
adc
movs
fs
jecxz
ins
xchg
movs
cmc
pop
jb
dec
adc
pop
and
xchg
enter
js
jns
pop
ret
in
test
xor
in
xor
fiadd
dec
scas
icebp
jne
pop
aaa
sbb
rol
(bad)
lahf
fidivr
mov
push
call
dec
pop
pop
mov
into
scas
push
std
ret
and
lea
iret
mov
fstp
ror
movs
add
push
jne
mov
push
movs
and
xor
fmul
stc
dec
aad
jne
mov
jge
add
or
lock
mov
cli
(bad)
jb
or
mov
cmp
jp
inc
push
lds
add
fdiv
sahf
bound
cmc
jp
add
jo
jp
mov
sbb
xor
xlat
cs
test
rcl
dec
mov
loop
not
mov
loope
dec
(bad)
cli
fwait
cli
lds
cmp
mov
prefetch
mov
in
adc
adc
cwde
pop
(bad)
cmp
mov
fdiv
ret
imul
jne
sbb
stos
add
dec
mov
inc
pop
sub
or
mov
outs
push
and
ficom
(bad)
enter
sbb
stos
xchg
daa
mul
adc
aas
mov
inc
xchg
sbb
vcvttps2dq
add
movs
jmp
jg
jbe
adc
call
jbe
xchg
and
push
sub
imul
pusha
adc
nop
mov
jne
js
adc
popf
shl
mov
dec
and
cld
adc
std
fwait
lock
mov
mov
xor
adc
mov
fisttp
loope
test
sbb
adc
push
add
sbb
xor
xor
fwait
jb
pushf
retf
push
sub
mov
mov
in
pop
dec
popa
sti
imul
cmps
push
jg
call
ins
rcl
fld
movs
mov
push
add
sub
sub
gs
xor
(bad)
into
in
or
mov
sar
inc
shl
inc
in
xor
xchg
aas
cs
xor
sub
cmp
xchg
dec
xor
mov
pop
jmp
mov
scas
mov
sar
mov
or
not
jmp
xlat
mov
enter
lods
and
cdq
push
add
dec
xchg
in
xchg
pop
dec
scas
adc
fcomp
out
aad
fld
mov
jo
(bad)
cmp
sbb
cs
int3
jnp
adc
cld
cmp
xor
aam
mov
cmc
inc
xor
call
jbe
adc
es
popa
ret
push
icebp
loope
les
mov
push
mov
shl
mul
out
stos
add
jmp
jle
xchg
cmp
mov
xchg
(bad)
push
mov
test
adc
mov
inc
pop
mov
outs
sbb
push
adc
xchg
xchg
add
mov
inc
(bad)
ins
movs
cmp
xor
shr
out
fisttp
push
mov
add
retf
aam
cld
inc
imul
enter
xchg
lods
cwde
mov
xchg
add
adc
xor
popa
out
xchg
adc
pop
fstp
or
lahf
xor
aad
xchg
lahf
fs
jmp
sahf
mov
retf
or
inc
push
cmp
sub
mov
xchg
repz
sbb
addr16
data16
push
je
in
pop
test
mov
mov
dec
retf
inc
call
jb
jle
mov
jmp
push
pop
pop
or
les
adc
mov
or
pusha
inc
mov
sub
out
push
ret
sbb
lds
loop
test
mov
loop
mov
dec
iret
fst
cmps
int3
sbb
jo
dec
jge
shr
jb
inc
cmc
mov
test
imul
into
and
sbb
mov
inc
(bad)
nop
dec
shr
push
cwde
imul
push
inc
popa
add
sub
inc
xor
push
pop
out
push
in
ror
and
xchg
jecxz
xlat
stos
lahf
cmp
adc
cmp
fcmovu
and
adc
or
jo
mov
test
push
fxch
mov
outs
movs
fstp
int3
mov
inc
pop
and
or
pop
cld
bound
xor
fdivr
push
mov
outs
add
lea
ret
xor
push
cmp
push
jmp
mov
and
inc
nop
push
pop
in
mov
stos
push
inc
int
cmc
or
in
bound
lea
je
ret
(bad)
and
mov
add
imul
jns
and
mov
jo
mov
push
jo
(bad)
mov
imul
sub
adc
sub
xor
in
leave
test
mov
std
(bad)
sub
imul
add
adc
adc
jg
xchg
pushf
movs
mov
out
ret
mov
mov
mov
push
inc
push
shl
pop
xchg
mov
pop
push
cmp
mov
and
out
das
add
sti
arpl
cmp
mov
fs
rol
fcomp
jae
sub
stos
pop
mov
push
js
pop
fidivr
idiv
(bad)
mov
pop
xor
add
inc
push
sub
xchg
data16
ja
movs
mov
pop
xor
ss
and
(bad)
(bad)
cmp
dec
imul
jecxz
or
sbb
xor
pop
push
add
adc
ret
stc
jl
xchg
jno
push
(bad)
mov
or
sub
test
dec
rcl
les
pop
pop
and
jl
repz
pop
xchg
sar
adc
shr
aam
ja
xor
sub
adc
lea
add
bound
add
hlt
add
add
fs
dec
and
pop
arpl
push
outs
xor
in
into
mov
cmp
cwde
outs
and
adc
and
push
lds
icebp
jmp
imul
idiv
xchg
popf
inc
jg
lods
fs
cli
scas
add
and
retf
pop
xchg
mov
dec
or
xor
jl
lods
leave
xchg
xor
mov
mov
dec
pop
jnp
call
clc
mov
fimul
xor
rcr
and
push
in
cmp
cmp
add
xchg
imul
xor
xor
fs
es
(bad)
loop
dec
adc
in
gs
call
jnp
xor
retf
retf
aad
xchg
rol
pop
xchg
xlat
mov
pop
adc
pusha
pop
ret
out
pop
imul
dec
and
je
xor
jno
out
outs
orps
fldln2
pop
data16
pop
jae
jb
mov
xchg
dec
daa
out
lods
push
mov
push
push
xor
(bad)
xor
loop
cmp
push
mov
pop
cwde
aaa
mov
add
icebp
mov
pinsrw
out
fxtract
xor
xchg
lods
cdq
push
ror
jmp
ss
jecxz
sar
scas
cli
push
inc
call
adc
inc
pop
daa
pushf
das
cmp
xchg
dec
adc
cmp
popf
sub
lds
jecxz
rcl
lea
inc
adc
loope
xor
in
jmp
mov
out
outs
out
xchg
inc
or
cmp
or
movs
cmp
dec
mov
mov
ret
retf
cmp
repnz
mov
xchg
pushf
aad
lea
or
aaa
adc
jns
fwait
out
jmp
sub
jo
pop
std
jnp
jg
and
and
inc
inc
cmp
cld
sar
xchg
(bad)
fistp
mov
sbb
fs
adc
adc
push
mov
fcmovu
xor
test
or
push
sbb
mov
rcr
push
and
xlat
iret
dec
adc
inc
xchg
(bad)
je
push
jne
imul
jbe
add
add
add
mov
pop
sbb
fcmovne
(bad)
mov
add
mov
imul
mov
(bad)
xchg
and
fcmove
dec
inc
sbb
out
mov
fild
mov
mov
inc
in
pusha
in
and
lods
xor
or
bound
sbb
sub
push
adc
mov
jl
call
int
in
std
sti
cli
pop
mov
sbb
mov
pop
imul
test
jmp
xor
mov
nop
push
mov
sbb
jmp
pusha
and
cmps
push
push
push
mov
into
es
xor
(bad)
sbb
(bad)
dec
and
in
div
div
jmp
pop
aaa
mov
loop
ja
in
repz
pop
mov
mov
in
and
push
inc
std
add
jne
sti
jnp
inc
or
lea
dec
(bad)
mov
mov
dec
cli
mov
jno
push
xor
inc
leave
loop
mov
aas
pop
(bad)
gs
jbe
fisttp
stos
outs
fs
fwait
lods
add
out
ja
call
dec
push
xchg
mov
jns
add
xchg
rcl
mov
sub
inc
push
jge
and
adc
mov
jo
inc
gs
fs
add
pop
int3
jp
loopne
ret
fs
js
outs
mov
xchg
das
outs
adc
jnp
inc
xor
dec
mov
out
mov
push
jns
and
ins
jle
test
cmp
xchg
mov
pop
sbb
inc
xor
push
pusha
jle
xor
xor
pop
add
hlt
loop
dec
jge
nop
mov
add
and
(bad)
cmps
data16
or
ror
mov
and
jle
jecxz
je
cs
mov
xchg
mov
and
cli
movs
sbb
je
and
jb
jns
add
or
push
sbb
(bad)
mov
loope
and
enter
xor
sbb
div
gs
call
dec
dec
into
add
xor
aam
sahf
test
mov
adc
lods
mov
(bad)
sbb
xchg
add
jno
add
jmp
and
mov
es
pushf
fild
enter
dec
mov
push
jmp
xchg
jno
xchg
mov
push
hlt
and
push
popf
fdiv
mov
jge
fcmovb
add
cmps
push
push
jno
mov
mov
jmp
jo
(bad)
push
cmp
out
scas
pop
in
mov
ds
out
dec
mov
xchg
xchg
bnd
mov
rol
imul
push
mov
add
inc
or
adc
bound
xchg
(bad)
ins
in
jge
ret
adc
mov
je
lds
and
lea
test
int3
loopne
imul
aam
xlat
loop
ror
fcom
xchg
or
xchg
fnstcw
mov
in
jp
or
call
sbb
call
pop
js
xor
aad
jmp
xchg
add
ror
jecxz
adc
ds
adc
push
jb
sub
xchg
inc
icebp
xchg
and
ret
sub
mov
mov
add
mov
adc
outs
call
jb
or
mov
loopne
into
scas
ins
jbe
mov
out
repnz
lahf
sub
ret
stos
loop
lods
stos
and
neg
rcr
sbb
in
mov
or
dec
popa
push
in
cmp
shl
jmp
sbb
cmps
xor
loopne
mov
pop
dec
ss
cmc
or
push
cmc
cli
dec
push
(bad)
jle
mov
dec
and
sbb
cmps
push
add
mov
ds
test
cmp
stos
adc
sbb
mov
pop
mov
ss
icebp
popf
imul
jbe
or
neg
inc
ins
inc
mov
cmp
ins
ror
in
pop
cmp
lds
fwait
imul
retf
push
fdivr
cdq
mov
outs
mov
pop
in
jbe
(bad)
jmp
push
stc
push
fist
in
retf
fist
cmps
jg
dec
addr16
rcr
stc
and
movs
ss
push
push
cmps
fwait
mov
lahf
int3
push
sub
scas
das
cwde
and
cmp
ss
mov
cs
pop
jl
mov
inc
push
cmps
nop
leave
dec
add
das
push
(bad)
mov
lock
aad
pop
arpl
mov
xor
adc
enter
aaa
cld
mov
rcr
cdq
nop
jg
xchg
jae
stos
in
sub
test
shr
cmp
adc
mov
xchg
or
cmp
push
test
adc
mov
or
sahf
sahf
push
sbb
scas
pusha
inc
scas
or
popa
out
xchg
stos
mov
mov
mov
aas
add
xchg
dec
movs
stos
aaa
pop
(bad)
iret
dec
xlat
stos
pop
shl
mov
push
stos
repz
aaa
ss
ja
int
push
push
sbb
mov
sbb
xlat
cs
mov
add
push
add
in
scas
fcom
or
rcl
fimul
pop
cmp
lods
in
cwde
sbb
add
pop
hlt
and
jecxz
mov
or
lods
jo
sub
dec
jmp
xor
or
shl
add
cmps
cld
test
mov
imul
inc
xchg
push
call
popf
mov
push
pop
sbb
jne
sub
jg
or
ins
fild
dec
pop
mov
push
shl
adc
ja
ins
inc
jae
in
cs
push
ret
pop
pop
dec
outs
sbb
jmp
(bad)
push
jne
in
fwait
lahf
pop
xlat
dec
sar
icebp
repnz
adc
leave
mov
adc
pop
xchg
jno
mov
lahf
xor
pop
sub
or
xchg
jle
push
call
test
dec
mov
sar
rol
mov
je
test
imul
mov
icebp
jnp
add
or
mov
dec
stos
sub
xchg
in
fst
retf
xlat
push
mov
cmp
pushf
je
or
sbb
iret
mov
stc
pusha
xchg
out
shl
sbb
pusha
jmp
mov
call
cmp
push
cmp
imul
ja
imul
jle
sub
cmp
cld
cli
daa
push
push
cmps
repz
test
push
mov
cmp
stos
pop
xchg
shr
add
jns
pop
inc
push
mov
jne
push
adc
ds
dec
mov
daa
rol
inc
enter
aam
fisub
push
xor
xchg
and
loop
sub
out
test
pop
mov
cmp
pop
aad
xchg
mov
cs
mov
adc
jnp
shl
call
scas
mov
aam
cmp
jo
xor
fnstcw
and
mov
test
add
and
push
push
sahf
fs
push
movs
movs
inc
pop
sbb
inc
and
inc
or
movs
xchg
punpckldq
(bad)
xor
push
movs
cmc
jle
mov
sbb
js
pop
outs
aas
call
sub
pop
fdivr
les
mov
div
mov
mov
jnp
cmps
scas
pop
cwde
adc
inc
and
mov
mov
sti
add
ins
es
(bad)
aad
pop
mov
sub
adc
je
sbb
jge
popa
mov
xchg
pusha
ret
jecxz
enter
sub
xor
in
fst
push
retf
sbb
add
jae
psllq
inc
pop
and
imul
xlat
push
loop
add
cld
mov
aaa
and
jmp
retf
lods
adc
jle
sub
stc
or
cmp
cdq
in
mov
pop
inc
adc
cmp
mov
loope
retf
inc
xchg
mov
cmp
(bad)
int
sub
add
or
xor
stos
xchg
and
add
mov
(bad)
or
mov
xchg
repz
cmp
test
mov
addr16
stos
push
push
cwde
dec
jle
lds
aam
mov
test
cwde
add
div
imul
or
aam
ror
and
mov
int3
mov
inc
test
std
mov
sub
xor
lds
sub
inc
test
jnp
or
rcr
(bad)
and
xor
inc
jo
cmp
xchg
sti
mov
outs
mov
mov
loopne
push
call
jnp
sub
stos
daa
xchg
ror
xor
jl
shl
xlat
inc
sar
mov
jmp
lock
jne
adc
(bad)
mov
pop
ins
push
(bad)
(bad)
data16
jno
xchg
push
pop
add
hlt
std
or
inc
and
bsr
mov
mov
push
and
test
xor
push
cdq
add
test
mov
stos
adc
retf
or
adc
dec
inc
aas
enter
es
mov
pop
int
adc
in
and
xchg
out
int3
xchg
jnp
add
out
mov
loopne
dec
scas
add
es
cmp
inc
mov
adc
clc
out
inc
add
cmps
out
xchg
pop
dec
jnp
mov
sbb
fwait
cmpxchg
fnsave
push
fisub
cmp
les
add
rol
cmp
pop
ds
into
push
sub
and
icebp
pop
cli
mov
(bad)
cmp
sbb
jle
test
fsubr
pop
add
out
adc
and
cwde
outs
stos
mov
jae
das
(bad)
pop
push
repz
jge
sar
fdivr
inc
xchg
nop
(bad)
jb
and
sahf
imul
mov
adc
ins
mov
arpl
mov
jae
lods
cmp
adc
pushf
xchg
dec
push
push
popa
ja
mov
or
stos
add
or
fld
jno
cmps
xchg
jb
push
xchg
mov
fsub
push
inc
fild
outs
xor
add
mov
mov
jl
and
push
cmp
loop
shr
xor
xlat
daa
pop
shl
loope
jmp
dec
cmp
add
(bad)
out
sbb
mov
aad
mov
or
lea
xchg
cwde
(bad)
pop
jmp
iret
jmp
adc
in
mov
and
ret
cmp
jno
jb
int3
sbb
mov
and
inc
dec
(bad)
mov
enter
inc
inc
adc
and
and
jnp
es
mov
je
mov
in
js
mov
not
mov
retf
nop
add
or
xlat
ror
mov
push
mov
(bad)
or
xor
daa
or
jmp
cmps
mov
sbb
jmp
pop
and
sub
sub
jmp
jl
sbb
pop
int3
dec
ss
ret
out
cmp
retf
mov
pop
add
add
add
cdq
pop
adc
popf
je
hlt
dec
jge
xor
pop
cwde
mov
mov
cmps
jbe
mov
(bad)
bound
cmp
dec
in
mov
pushf
ins
cmc
adc
pusha
imul
arpl
ficomp
and
pop
xchg
pop
mov
sbb
jae
xor
sub
scas
in
outs
in
fistp
fcomi
in
inc
sub
cmp
ss
mov
jb
or
or
inc
adc
jle
stc
out
fs
xchg
push
push
sub
mov
movs
pushf
movs
je
pop
jnp
(bad)
enter
sub
or
mov
sahf
pusha
cmc
pop
fwait
mov
iret
jp
out
cmps
ret
push
mov
pop
cs
mov
(bad)
(bad)
jle
push
scas
pop
lods
inc
pop
movs
push
add
and
push
lds
add
scas
nop
xor
xchg
ret
jo
pop
or
add
mov
xor
pop
call
in
lods
pop
jb
sar
out
cs
inc
cmp
gs
xchg
repz
or
add
add
add
cs
add
mov
retf
fmul
jns
dec
retf
(bad)
stc
jns
out
retf
sti
repnz
or
and
cs
repz
shr
loopne
arpl
add
aaa
js
mov
cs
and
dec
repnz
test
leave
in
lahf
xor
inc
jle
lahf
xor
cs
loope
push
scas
in
push
popa
fldcw
leave
sbb
(bad)
sub
adc
fcom
xor
in
dec
stos
xor
iret
imul
gs
ss
stos
push
push
pop
and
or
pop
pop
push
cmp
pusha
loopne
jo
imul
inc
push
sbb
sar
repnz
movs
sar
test
cmp
aam
jp
in
sub
mov
popf
dec
adc
sub
cdq
adc
push
sub
cmp
xor
add
sti
jbe
out
stos
sub
shl
xor
fs
push
enter
adc
fiadd
shl
jecxz
fs
icebp
sub
hlt
movs
push
lods
cmp
aam
retf
stos
movs
repz
mov
fwait
fs
cmovbe
shl
sahf
xor
out
mov
pop
xor
adc
jmp
mov
push
imul
fsub
out
inc
mov
bound
adc
cwde
icebp
cld
jne
pop
mov
sbb
push
push
jno
enter
mov
inc
jbe
ret
push
sbb
nop
ror
hlt
(bad)
(bad)
imul
movs
push
push
add
dec
or
les
push
jge
jo
sbb
dec
(bad)
xor
push
or
scas
and
mov
cli
dec
scas
mov
jl
mov
ss
cmp
jo
jp
push
mov
aam
mov
(bad)
(bad)
jnp
rcr
call
test
mov
les
cmc
push
pop
xlat
stc
add
push
push
outs
jns
fcmovnbe
in
ja
int3
movs
in
(bad)
fs
cdq
lock
dec
cdq
push
fs
inc
ins
fisubr
pop
sbb
mov
cmp
int
icebp
jmp
call
or
jb
push
movs
jg
xor
sahf
jp
mov
mov
push
push
cmp
sar
pop
add
outs
retf
add
mov
jbe
sub
call
adc
sahf
jl
stos
add
sub
add
inc
rcl
lods
outs
mov
xor
jae
push
in
test
call
xor
mov
push
cli
ja
mov
jle
inc
in
popf
cmps
fistp
mov
adc
out
lock
ret
inc
fstp
push
jno
iret
adc
loopne
arpl
jmp
scas
dec
call
mov
jmp
xor
jo
adc
push
jg
cwde
clc
ret
pop
pop
push
jns
or
xor
jnp
aas
in
les
dec
data16
cli
cmp
push
mov
dec
pop
sbb
inc
inc
sub
xchg
sar
push
xchg
aas
xor
aad
ss
shr
sub
push
add
test
(bad)
movs
sbb
cmc
add
inc
imul
mov
add
add
add
add
add
add
repz
push
jp
and
mov
lahf
push
xchg
adc
test
add
sub
add
pop
retf
enter
bound
sbb
in
add
addr16
aad
out
adc
cdq
mov
daa
lahf
nop
mov
repnz
shl
iret
pop
cmp
int3
scas
mov
ss
adc
(bad)
xor
pxor
sub
retf
dec
loope
xchg
into
jmp
dec
in
lods
cdq
adc
sbb
sar
sub
push
inc
jbe
test
adc
inc
es
pop
dec
aas
lea
xor
sbb
pop
cmp
mov
inc
cmps
test
xor
lds
iret
mov
imul
ja
add
adc
sahf
mov
push
xor
scas
or
std
sub
gs
fimul
daa
inc
(bad)
cmps
iret
icebp
sub
inc
imul
pop
pop
into
cmps
mov
jp
popf
in
inc
call
and
mov
daa
cmps
aad
add
in
sbb
or
xlat
jg
jl
ret
jmp
je
loop
jge
scas
xor
cmp
inc
repnz
mov
ss
dec
mov
es
leave
aas
(bad)
cmp
mov
clc
cmp
push
mov
fld
sub
cld
hlt
pop
pop
std
add
inc
int3
aaa
mov
in
aas
lea
add
xor
in
jno
loopne
(bad)
xlat
sub
add
sti
ja
out
jmp
jmp
das
fbld
out
sub
and
daa
dec
and
in
mov
sbb
lea
cdq
ins
inc
loop
sub
inc
rcl
dec
cmp
(bad)
int3
retf
call
fwait
aas
and
sbb
or
imul
loopne
leave
mov
push
mov
xchg
pop
xor
js
retf
lods
xchg
lods
test
daa
sbb
push
jle
jl
call
sbb
loope
lods
mov
or
sub
sub
test
test
fwait
mov
punpckhbw
out
retf
stos
ftst
icebp
xlat
or
stos
fsub
out
or
shr
cwde
jp
dec
aas
pop
ror
loope
mov
(bad)
xchg
fidiv
or
and
out
stos
and
mov
or
mov
fstp
in
xchg
xchg
pop
mov
mov
shr
nop
lea
cli
fidivr
add
bound
cmps
adc
sub
cmp
sbb
dec
mov
movs
ss
jle
add
add
or
cmp
mov
test
adc
test
cmps
mov
ins
loopne
fsubrp
push
cdq
cmp
add
cmp
inc
mov
adc
adc
jp
es
xchg
fdiv
jge
or
loopne
out
test
out
retf
icebp
lock
(bad)
arpl
push
jg
push
fld
inc
or
out
and
xchg
fnstcw
nop
add
mov
test
es
enter
sub
jge
sbb
xchg
mov
in
xor
mov
lods
xchg
rol
mov
xchg
dec
add
add
add
push
adc
add
mov
xor
sahf
or
aad
sub
dec
ret
lock
inc
cs
xchg
sbb
pop
and
outs
sar
cmp
test
out
mov
fwait
and
xor
jno
call
pushf
cmp
adc
out
mov
test
nop
ja
push
outs
jmp
sub
outs
dec
adc
fndisi(8087
frstor
jp
ins
sub
ins
mov
std
lods
js
fld
(bad)
rcl
(bad)
mov
aam
xchg
dec
mov
xor
mov
xor
popa
mov
ins
xor
mul
sahf
pop
inc
jnp
mov
into
(bad)
not
test
mov
cs
outs
push
mov
dec
fnstenv
outs
push
jge
aad
mov
pop
iret
test
jno
jne
add
adc
and
shl
das
test
imul
xchg
popa
call
lds
xchg
mov
mov
or
xchg
dec
icebp
or
hlt
daa
es
hlt
or
inc
dec
mov
dec
push
mov
push
dec
pusha
test
test
lods
mov
stos
pop
mov
add
loope
xor
push
add
add
add
add
push
fdivrp
mov
xchg
dec
data16
jg
stc
(bad)
movs
adc
dec
int3
add
loop
push
ror
push
adc
ja
push
adc
sti
test
ins
cmp
repnz
xor
adc
cmp
adc
clc
(bad)
retf
sbb
xchg
mov
std
xor
shl
dec
sub
gs
rol
push
dec
test
xor
push
fidivr
push
sti
rcr
cdq
test
shr
inc
movs
xor
or
pop
adc
mov
lock
movs
sub
retf
xor
cmp
sbb
retf
loop
iret
jg
mov
inc
fcom
rcr
xchg
int
popf
rol
ret
cmp
cmc
xchg
ret
add
(bad)
pop
jmp
int
loope
icebp
rol
js
adc
retf
and
mov
pop
and
mov
sbb
ret
cvttps2pi
in
lock
scas
dec
and
sahf
adc
cmp
jge
pop
sbb
xor
mov
add
ds
idiv
jecxz
shld
fcomp
(bad)
loopne
ins
fstp
inc
dec
xchg
sbb
sbb
daa
(bad)
xchg
out
pop
or
dec
dec
dec
rcr
adc
xlat
and
mov
adc
loope
stos
enter
jae
xchg
fs
lds
(bad)
leave
dec
faddp
daa
(bad)
mov
xchg
int
shl
cmp
out
push
inc
popf
ffreep
imul
add
xor
imul
inc
pushf
lods
pop
and
ins
push
and
adc
(bad)
and
iret
xchg
cmp
or
xlat
xchg
ss
or
maskmovq
div
(bad)
pop
cs
scas
dec
mov
inc
fdiv
call
cmp
adc
imul
mov
pop
dec
lods
in
dec
xor
sub
mov
xchg
dec
pop
in
xlat
(bad)
ficom
ret
mov
outs
inc
mov
arpl
scas
mov
mov
in
pop
xchg
dec
aas
inc
jns
aam
call
scas
loope
cwde
fwait
jg
mov
jno
dec
mov
jo
add
lods
mov
xor
push
jg
popf
dec
cmp
cdq
enter
pusha
mov
fistp
cmps
xchg
cmps
pop
add
xchg
mov
jge
loop
mov
mov
jno
pushf
push
pusha
adc
lods
push
mov
cli
or
and
jle
shr
mov
dec
adc
lods
sub
xor
fnstsw
lea
mov
pusha
in
push
push
xor
dec
les
mov
imul
push
push
(bad)
and
pop
sbb
(bad)
push
stos
not
mov
mov
rcl
add
pusha
and
inc
test
xor
push
in
pop
cmp
aam
adc
sub
xchg
mov
jecxz
clc
add
dec
in
push
ds
es
push
push
(bad)
push
jo
retf
imul
mov
cmp
into
inc
pop
cmp
imul
mov
inc
adc
cmc
(bad)
xchg
inc
add
push
ffree
sbb
pop
fmul
cdq
push
les
gs
rcl
in
mov
mov
xor
push
jmp
and
test
inc
int3
mov
or
lahf
sub
aam
and
pop
(bad)
aas
mov
loopne
sahf
or
fbstp
imul
xchg
sti
fwait
push
ins
fild
movs
fwait
adc
sbb
out
ss
mov
jmp
add
add
cmp
mov
movs
test
js
dec
xor
dec
not
jno
in
cmp
push
add
add
jo
enter
icebp
mov
inc
push
int3
sub
mov
pop
xchg
jmp
sbb
add
push
sbb
sub
push
or
mov
dec
adc
push
nop
fist
sbb
and
dec
aam
std
shl
in
(bad)
aas
dec
rcl
sahf
imul
leave
enter
xor
in
and
shl
mov
xor
fisttp
mov
cmps
shr
(bad)
in
outs
inc
fisub
inc
es
fnstcw
jle
js
sbb
stos
pushf
xor
fild
dec
xor
arpl
mov
jns
mov
retf
test
jge
aam
sahf
repnz
or
fs
fcmovnb
jbe
sbb
push
mov
das
(bad)
add
push
xchg
(bad)
lahf
mov
or
cwde
das
sbb
les
mov
loop
pop
movs
stos
cmp
push
outs
dec
pop
mov
jno
aad
xor
cs
fwait
push
jnp
std
sbb
mov
lock
sbb
or
fild
hlt
jne
push
mov
das
neg
mov
mov
adc
pop
ror
sbb
ja
add
mov
adc
in
fucomp
mov
mov
ss
clc
hlt
cmp
cmp
stc
fild
movs
inc
fs
mov
adc
out
adc
add
das
or
pop
and
bound
sub
cdq
aaa
push
dec
fs
js
or
aad
push
fsubrp
punpcklbw
mov
gs
lea
fwait
mov
dec
leave
jno
mov
dec
jg
cs
sar
jmp
mov
jmp
shr
cld
push
add
or
sbb
push
pushf
dec
sahf
das
jmp
popa
sar
in
(bad)
(bad)
shl
int
repnz
sub
fs
mov
jmp
xor
call
(bad)
out
cdq
push
push
or
pusha
adc
xchg
mov
push
jno
js
add
(bad)
neg
mov
(bad)
loopne
dec
mov
pusha
test
sub
and
sbb
mov
push
scas
cmp
loop
scas
pop
adc
call
stos
sub
in
xchg
inc
jae
shr
inc
mov
xor
repz
(bad)
mov
shr
xchg
test
sbb
inc
loope
and
sub
ds
aad
push
test
movs
enter
test
xchg
popf
fnstsw
fcmovne
outs
jg
mov
scas
mov
dec
outs
cmp
cmp
and
or
ins
push
div
add
adc
mov
ss
inc
sbb
sub
shr
int3
xlat
fsubrp
sub
sbb
dec
dec
mov
add
mov
sub
adc
xor
loopne
add
add
sti
jnp
ret
outs
and
dec
dec
fsubr
scas
xor
and
and
std
dec
bnd
xor
ins
push
mov
mov
cmp
shl
sbb
scas
mov
rcr
outs
push
or
mov
pop
fsubr
jnp
je
push
test
clc
cs
sub
add
sub
add
add
adc
mov
xchg
sub
aas
nop
add
jae
and
js
clc
stc
cmc
and
inc
(bad)
aas
rcl
les
std
mov
and
mov
xchg
mov
ficomp
test
icebp
fcomi
dec
loopne
sub
xchg
sub
mov
retf
lahf
cwde
mov
jmp
adc
adc
lods
(bad)
xlat
dec
inc
sbb
pop
or
push
mov
xor
mov
inc
popa
jb
push
je
xchg
int3
and
ss
mov
sub
adc
lea
mov
das
add
test
cmp
push
sbb
pop
mov
xchg
(bad)
repnz
add
pushf
jmp
xor
shl
minps
pop
or
sbb
xchg
movs
push
sbb
retf
push
or
call
int
out
dec
inc
jp
loope
jecxz
repnz
jnp
cmp
arpl
scas
cmp
and
call
push
or
scas
dec
(bad)
mov
xor
sub
lods
jb
inc
xchg
retf
jle
outs
lock
sub
xchg
xchg
sub
push
fwait
es
cmps
movs
ins
and
or
test
shl
in
add
test
in
mov
xchg
mov
ins
mov
fucomi
add
mov
int3
sbb
in
mov
add
addr16
jae
test
jns
xor
and
sbb
mov
aam
add
movs
hlt
movs
lock
dec
ret
xchg
jae
push
or
stos
ficomp
(bad)
daa
std
push
movs
inc
cmp
rcl
push
dec
into
xchg
aaa
push
mov
mov
mov
pop
lock
cs
test
lock
retf
sub
xchg
rcr
adc
mov
and
lds
(bad)
lods
mov
mov
sbb
std
xor
cmp
jmp
out
pop
jbe
(bad)
clc
mov
jmp
jno
dec
and
mov
adc
in
cmc
cmp
and
adc
pop
mov
out
jo
sbb
and
add
icebp
movs
shl
fisub
jecxz
cld
push
sbb
fisubr
je
mov
jg
dec
xchg
dec
imul
sub
cmps
mov
pop
fidiv
lods
fs
push
cmps
mov
repz
jnp
pop
mov
outs
and
cmp
cmps
enter
jb
xor
arpl
pop
xchg
xor
dec
push
jle
jns
dec
xchg
pop
xor
rcl
inc
ret
push
mov
imul
mov
mov
mov
(bad)
mov
cli
cmps
and
fstp
cmc
mov
fnstcw
fimul
shr
jns
loope
dec
mov
adc
leave
push
inc
std
xchg
pop
fsubr
out
daa
mul
fcom
movs
cmc
nop
stc
jmp
cmp
mov
xor
gs
add
jg
repnz
ror
adc
dec
jg
inc
repz
xor
inc
or
test
(bad)
mov
mov
jbe
push
pop
ss
and
stc
call
fld
sbb
and
inc
mov
sub
xchg
jg
push
ja
xlat
movs
or
jne
jle
adc
pop
(bad)
out
or
jg
iret
ins
jae
push
dec
mov
icebp
jno
lea
cmp
retf
retf
dec
movs
or
out
movs
sti
adc
je
cmp
stos
into
retf
push
clc
and
cmp
mul
in
jg
cmps
and
push
sbb
adc
mov
jle
lods
je
mov
out
stos
xchg
add
int3
add
add
add
rol
jge
scas
mov
xchg
mov
jl
enter
fstp
in
into
pop
(bad)
mov
inc
gs
mov
cli
(bad)
std
or
adc
lods
std
sub
sub
loop
ret
fbstp
lds
sahf
test
stc
out
je
(bad)
add
pop
mov
dec
xor
shl
pop
add
xor
clc
lahf
retf
jbe
sar
mov
pop
mov
mov
out
dec
call
cmp
test
jo
pop
aad
int3
jl
les
xlat
inc
xchg
cmp
nop
xor
dec
or
leave
test
(bad)
mov
aaa
icebp
jbe
popa
pop
push
push
push
and
ror
cmps
cmps
arpl
mov
xchg
or
enter
call
fmul
or
mov
mov
push
inc
fidiv
inc
push
gs
hlt
in
jp
adc
jmp
push
out
ret
push
jmp
std
movs
hlt
cmps
popf
imul
jmp
sbb
cmps
sub
icebp
pop
scas
or
and
lods
stc
popa
cld
sbb
les
test
stos
mov
or
jb
je
sbb
fdiv
cs
call
lock
add
(bad)
int3
cmp
push
or
dec
inc
out
ror
movs
inc
pop
or
xchg
gs
nop
adc
sar
icebp
mov
cwde
arpl
add
out
cwde
sbb
(bad)
out
xchg
repnz
cmp
in
ins
dec
in
(bad)
sbb
xor
xchg
repz
arpl
ja
mov
cmp
sub
mov
jmp
and
lds
pop
(bad)
das
sar
add
sub
sbb
add
cmp
xchg
mov
xor
pop
inc
mov
pop
aam
cwde
cmp
arpl
cmp
xchg
cmp
and
imul
cmp
ret
ficom
lock
mov
adc
inc
sti
xor
pop
xor
mov
into
ss
push
dec
and
loop
std
dec
push
xor
xchg
popf
daa
push
push
xchg
imul
inc
clc
pop
push
mov
jp
mov
sub
gs
and
ficom
pop
cmps
inc
jge
cdq
sub
xchg
fadd
das
push
sti
movs
leave
jge
push
mov
repz
mov
and
stos
dec
dec
(bad)
mov
pop
adc
retf
push
xchg
test
icebp
xchg
nop
(bad)
aad
push
mov
jle
or
retf
xor
push
outs
push
sub
cld
mov
nop
mov
into
shl
jnp
push
cld
cmp
cmp
imul
icebp
mov
aaa
dec
jbe
mov
cmp
mov
jbe
add
repnz
inc
daa
mov
xor
pop
test
dec
sbb
retf
inc
les
cs
and
jle
mov
xchg
sti
jo
sbb
jg
jl
sar
mov
fistp
or
das
jmpw
lahf
enter
arpl
mov
inc
leave
push
dec
lds
cs
xchg
retf
(bad)
ins
inc
and
cli
call
mov
gs
sub
jb
outs
or
rol
ror
jno
and
mov
and
rcl
jno
call
fisttp
into
dec
sbb
mov
adc
add
pushw
add
mov
jo
jns
lods
push
push
cdq
dec
and
int3
and
(bad)
ds
mov
hlt
xor
mov
neg
popf
or
(bad)
dec
aad
xchg
push
jae
push
push
jle
inc
(bad)
retf
sti
jns
test
inc
imul
clc
mov
arpl
cmp
(bad)
cmp
aaa
or
fwait
popf
dec
and
inc
daa
arpl
sub
sub
movs
xchg
jne
mov
in
xor
lods
pop
or
jb
mov
retf
imul
bound
sahf
jo
xchg
mov
ins
jmp
cmps
dec
sub
mov
mov
repz
sub
stc
sub
or
cmps
(bad)
jmp
out
mov
ror
fadd
adc
movs
mov
xchg
and
jmp
dec
sub
mov
pop
push
fsub
adc
jmp
(bad)
loopne
fisttp
and
retf
ror
test
jmp
mov
or
inc
ss
xchg
add
call
xor
jnp
push
cdq
outs
aad
or
into
adc
ins
add
sbb
inc
adc
sub
out
xchg
jo
xor
mov
push
fst
or
mov
add
dec
mov
repnz
imul
cmp
(bad)
shr
xchg
mov
mov
arpl
jno
mov
test
and
stos
xor
in
cmp
and
jb
jb
push
movs
sub
cld
push
mov
inc
dec
push
shl
cmc
nop
retf
and
pop
(bad)
popf
ins
loopne
mov
lea
mov
inc
fwait
ret
movs
movs
mov
jge
in
popa
cmp
xchg
jae
mov
cmp
es
aas
and
(bad)
ja
push
add
push
xchg
pop
add
xor
(bad)
idiv
xor
fs
stos
les
stos
sbb
nop
sbb
jg
or
push
mov
cmps
pop
xor
pop
in
push
jo
cmc
fmul
pop
xor
inc
fisttp
mov
call
iret
addr16
dec
mov
int3
inc
push
jne
ds
retf
cmp
push
nop
push
fnsave
scas
dec
or
push
and
aas
pop
jno
imul
div
mov
aad
into
loope
and
mov
xor
pop
mov
xchg
mov
xor
push
or
xchg
int
mov
cs
outs
loop
dec
cmp
repnz
call
loopne
out
mov
cmp
fdiv
adc
imul
jp
in
mov
jmp
pop
rcr
jo
mov
adc
xchg
mov
movaps
inc
push
push
repz
jbe
inc
aad
push
ret
ffreep
mov
xor
push
int
fmul
dec
loope
add
scas
div
das
mov
fld
and
jns
and
(bad)
mov
add
and
and
je
int
push
enter
push
dec
sar
or
loope
and
mov
sti
fs
lahf
sti
mov
pushf
mov
fsub
icebp
mov
test
loopne
jb
push
stos
jo
std
dec
repz
scas
add
movs
add
adc
push
repnz
jae
das
in
xchg
rol
xlat
outs
mov
push
and
cmp
out
repnz
xor
sbb
cmps
add
sub
nop
je
cmp
fstp
cmp
bound
bound
cli
movs
in
xor
stos
and
and
aad
mov
push
dec
or
push
loope
mov
clc
inc
in
push
adc
push
inc
call
mov
mov
dec
fld
test
iret
sbb
mov
jo
push
fmul
fs
and
and
repnz
inc
xlat
mov
ss
or
push
fs
sub
pop
cmp
mov
mov
add
mov
aad
movs
addr16
daa
or
ficom
cmp
in
fbstp
les
mov
jb
in
clc
mov
ins
sar
pop
sub
inc
sbb
fidivr
push
mov
icebp
lock
inc
in
mov
test
(bad)
pop
shr
push
inc
push
jb
cmc
cld
jb
(bad)
addr16
sbb
cmp
mov
sbb
scas
repnz
xchg
add
(bad)
xchg
xchg
cmp
ret
fbstp
ret
inc
mov
outs
sbb
inc
fsubr
cmp
arpl
daa
xchg
jg
jo
into
lock
adc
int3
cs
iret
sbb
test
jne
movs
xor
enter
xlat
sbb
imul
fimul
int
mov
ja
in
div
pop
xchg
push
pop
and
(bad)
loope
lods
sbb
pop
cdq
sbb
lea
push
(bad)
jmp
mov
push
lds
mov
dec
dec
ret
xlat
jno
and
inc
scas
adc
test
mov
mov
or
js
(bad)
mov
lea
int3
xchg
mov
mov
and
lds
repnz
xor
inc
xchg
sahf
retf
das
mov
hlt
jne
add
mov
ret
sub
jle
ss
loope
sbb
jnp
xchg
cmp
xlat
shl
lods
xchg
mov
shl
pop
add
add
add
pop
add
add
mov
dec
popa
sbb
nop
fimul
adc
rol
out
cwde
ficomp
pop
adc
mov
repz
imul
sbb
add
add
add
cmps
bound
scas
scas
pop
pop
sbb
jbe
inc
or
std
shl
ret
(bad)
movs
shl
xchg
jae
stos
cmp
sbb
loope
xchg
loop
inc
pop
xchg
xchg
rcl
or
ja
into
pop
lods
mov
cmc
dec
push
sti
(bad)
rcl
mov
in
dec
add
fs
add
pusha
mov
lea
enter
arpl
(bad)
jmp
out
out
lods
xchg
dec
or
ja
push
sbb
push
sbb
lahf
scas
dec
and
jl
sub
xchg
xchg
and
mov
or
lods
(bad)
fdivr
cdq
jae
nop
ds
push
pushf
or
pop
inc
cs
push
jg
jg
shr
adc
aad
xor
movs
call
or
sub
ins
fcomp
pop
lahf
outs
retf
retf
fs
(bad)
bound
je
mov
jmp
stc
xchg
add
or
dec
pushf
adc
lods
mov
lahf
popf
aaa
mov
cmp
loop
push
xchg
out
dec
aam
sbb
cmps
pop
mov
mov
cmp
xchg
movs
lea
pop
popa
int3
cmps
push
inc
or
ret
cmp
and
or
push
xchg
gs
inc
out
repnz
mov
je
jp
sbb
push
scas
pop
fwait
popf
jbe
sub
mov
cmp
jmp
inc
adc
sbb
outs
or
out
jecxz
xchg
xor
aas
dec
jns
jae
test
xchg
iret
dec
xlat
loop
sub
mov
jg
std
cmps
push
push
test
ins
xor
xchg
(bad)
cli
pop
jnp
add
popf
cmps
addr16
in
push
out
add
or
call
outs
jno
xor
xchg
sub
jge
push
sar
push
sti
clc
xor
xacquire
rcr
or
add
imul
adc
lock
cld
out
or
pop
push
ror
cmp
stc
loop
push
nop
jmp
dec
test
xor
pop
addr16
fidiv
xchg
pusha
adc
mov
pop
add
mov
cmp
and
icebp
sahf
dec
popf
adc
idiv
push
adc
ss
movs
sbb
int
mov
xor
and
(bad)
adc
ss
add
mov
ret
pop
push
mov
mov
pop
jle
jo
shl
ror
sub
pop
sbb
lea
aas
call
xor
lods
(bad)
fs
scas
les
sub
call
inc
xchg
lahf
mov
push
push
mov
xchg
push
stos
jecxz
xor
push
daa
jmp
jbe
jg
out
imul
aam
not
xchg
scas
js
adc
loop
pop
ins
inc
mov
inc
push
dec
xchg
cmp
inc
test
push
jge
dec
(bad)
mov
mov
push
shl
sbb
mov
cmp
mov
cmps
jl
inc
movs
repz
inc
sahf
call
jnp
into
sub
mov
aad
xchg
pop
test
retf
jg
faddp
(bad)
ss
xchg
add
mov
cs
imul
mov
push
repz
pop
icebp
enter
mov
rol
sar
dec
dec
add
lahf
repz
xchg
in
stos
rol
call
rcl
push
lahf
push
fst
dec
and
out
je
jge
pop
jo
fldenv
outs
fldenv
pop
aam
nop
aad
(bad)
xor
retf
jae
rcl
jnp
(bad)
cmc
aad
ins
jle
and
int3
mov
pop
jle
xor
je
nop
add
inc
mov
outs
mov
sbb
lods
jo
icebp
fdivr
adc
mov
leave
sbb
or
pop
repnz
stc
xor
jle
adc
out
xor
fnstcw
pop
inc
sbb
scas
dec
add
and
and
int3
leave
xor
mov
sbb
(bad)
jno
adc
pop
cmp
(bad)
(bad)
xchg
lds
xor
sub
mov
cli
stos
push
popa
jno
mov
les
or
int
mov
int
rol
xchg
(bad)
mov
xchg
add
add
add
add
add
cmps
sub
add
sub
sub
jecxz
movs
mov
push
mov
sbb
mov
pop
xor
adc
xor
cmp
mov
(bad)
jecxz
jo
inc
mov
fnstenv
das
mov
fdivr
xchg
jp
jo
add
mov
pop
push
xchg
mov
inc
cmps
dec
rol
ror
adc
std
in
sub
push
jmp
test
push
xchg
fcom
test
pop
cs
adc
mov
icebp
repnz
pushf
int3
lea
pop
fild
inc
or
lea
movs
sbb
mov
push
sub
test
mov
outs
sahf
test
std
or
push
xchg
cmp
addr16
sub
in
je
cdq
cmp
sbb
je
cs
retf
add
fld
cdq
(bad)
call
lods
sub
sub
pop
fdivr
bound
push
inc
leave
mov
push
(bad)
jmp
mov
mov
call
cmp
jnp
popa
and
push
dec
xchg
scas
fucomip
pop
adc
mov
mov
mov
arpl
std
adc
add
mov
ror
out
sbb
fisubr
dec
jecxz
ret
ret
xchg
cmp
cmc
fistp
les
jmp
cs
fs
pop
and
cmc
sub
mov
xor
inc
add
or
sbb
mov
pushf
add
jns
pop
lea
daa
lsl
mov
repz
sbb
test
imul
push
iret
sbb
mov
xor
adc
jmp
inc
mov
pop
cmp
scas
mov
xchg
push
lea
je
ja
movs
add
aad
add
jno
add
icebp
clc
adc
leave
sub
xchg
push
call
daa
cmp
pop
pop
jg
and
loope
sub
(bad)
imul
adc
retf
add
add
ins
push
fcomp
addr16
cmc
add
sub
lock
adc
sub
cdq
call
mov
rcr
push
sbb
imul
mov
inc
pop
jge
jmp
xchg
xchg
pop
ror
and
xor
jle
rol
mov
mov
or
(bad)
push
adc
add
faddp
mov
(bad)
imul
xor
or
(bad)
push
pop
xchg
out
adc
jne
cs
int3
add
std
cmps
ja
test
mov
hlt
push
pusha
inc
out
xchg
jge
aas
mov
addr16
or
adc
xlat
fild
out
push
mov
pop
push
inc
rcl
jge
cmp
mov
and
add
es
ror
cmc
shl
jo
mov
ins
out
adc
or
cmp
sub
jmp
jne
and
int3
ins
xchg
and
call
mov
fstp
(bad)
sbb
enter
test
mov
or
mov
cmp
cmps
pop
sub
fadd
cmps
push
cmp
fs
add
nop
pop
cmp
pop
and
xchg
pop
mov
imul
inc
dec
xchg
das
and
rcr
das
out
mov
fiadd
fmul
jge
lds
fsubr
xchg
xchg
dec
inc
pop
push
sub
xor
dec
push
adc
inc
sahf
or
mov
sahf
jmp
dec
mov
cwde
in
inc
inc
(bad)
jmp
mov
cmp
out
mov
imul
shr
adc
(bad)
out
or
test
pop
mov
repz
addr16
sub
lahf
leave
pop
or
mov
aaa
and
and
call
jge
jp
mov
xchg
sar
fs
mov
sbb
repnz
shl
adc
cmp
push
popf
in
jbe
dec
iret
stos
sbb
clc
pop
lods
mov
mov
sbb
idiv
popa
iret
or
fwait
icebp
ret
push
sar
repz
loope
mov
cdq
imul
cmp
nop
and
inc
addr16
mov
popw
dec
dec
bound
adc
cmp
mov
lock
add
add
add
add
add
add
fidivr
pop
jmp
push
das
hlt
addr16
or
mov
in
out
aam
inc
and
cdq
outs
fnstcw
mov
push
xchg
cmp
in
jg
jmp
push
jno
aad
fnsave
sbb
into
and
adc
sti
fwait
mov
or
pop
and
lock
jle
imul
sub
test
bound
add
aas
jmp
sub
sbb
adc
sub
push
sbb
mov
enter
clc
or
add
test
aas
pop
rcr
sbb
xor
xor
and
jo
(bad)
cld
add
mov
lods
mov
mov
das
pushw
adc
adc
cmp
mov
(bad)
cdq
jns
pushf
inc
sub
or
jmp
jmp
lea
inc
mov
jecxz
cli
jp
or
xchg
add
test
pop
cmp
xchg
cmc
jp
pop
daa
mov
mov
sub
add
stos
mov
adc
es
or
sub
add
adc
ins
and
push
add
std
out
mov
mov
or
movs
dec
repz
cmc
sub
jne
or
hlt
mov
repnz
daa
mov
imul
sub
shl
xor
daa
push
fisub
test
cmp
add
push
xlat
(bad)
das
dec
imul
(bad)
loop
xlat
mov
sub
out
sar
dec
pop
sbb
mov
jns
(bad)
bswap
xchg
(bad)
lods
push
(bad)
sub
add
in
add
inc
and
dec
(bad)
mov
lea
ds
push
movs
icebp
fcomp
inc
std
dec
test
adc
sub
and
and
xchg
ret
cmp
retf
mov
mov
fimul
mov
pop
stos
es
iret
pop
das
xchg
add
mov
sub
not
cdq
ficom
sar
jo
add
mov
movs
test
push
repnz
mov
movzx
xor
je
pop
and
mov
loop
into
(bad)
stc
test
xchg
fbstp
bound
in
dec
mov
xchg
cmp
out
inc
pop
mov
mov
mov
and
popa
cwde
imul
call
test
mov
push
popa
ja
mov
mov
psubd
ds
ret
(bad)
call
push
jbe
fldcw
push
jb
test
sbb
dec
pop
push
add
mov
mov
mov
mov
push
(bad)
mov
inc
xchg
add
test
jg
mov
sti
sar
or
fdivrp
xor
into
punpcklwd
add
cmp
icebp
clc
mov
dec
retf
add
fs
xchg
dec
dec
je
sub
cli
cmp
dec
sub
xor
inc
mov
sbb
std
aad
fwait
retf
retf
jb
ror
or
mov
lds
mov
cli
sbb
pop
retf
xor
jmp
cwde
pop
xor
cmps
mov
movs
fistp
retf
xchg
call
mov
iret
or
push
mov
push
mov
and
stos
cwde
mul
ins
sbb
and
dec
outs
sub
int3
lods
rcr
daa
and
xchg
jle
inc
rcl
inc
fwait
inc
std
or
mov
icebp
jns
xchg
sar
adc
jns
fisub
adc
pop
inc
fcmovnb
stos
add
les
jge
mov
sub
shl
fbld
mov
in
out
mov
mov
xlat
(bad)
call
mov
cmps
fnstcw
mov
ror
adc
jns
mov
movs
dec
aaa
sahf
push
mov
mov
jecxz
in
xchg
stos
(bad)
imul
jae
and
push
imul
scas
xchg
cli
dec
bound
cli
(bad)
iret
sbb
fcmovnb
sub
xlat
ins
cmps
jmp
repnz
(bad)
cld
(bad)
shl
idiv
sahf
cmp
es
add
push
aam
aam
gs
pop
push
push
and
and
jg
(bad)
in
pop
loopne
jne
adc
jle
mov
add
cmp
sti
adc
aas
jae
sub
add
add
pop
add
add
mov
nop
dec
loopne
js
fs
(bad)
mov
xchg
xchg
mov
lods
push
xor
mov
adc
dec
cmps
popf
cmp
int
shl
jne
call
stos
or
daa
xchg
inc
pop
xchg
add
rcr
aaa
jl
mov
movs
in
in
mov
leave
cmp
movs
jmp
add
add
add
add
mov
pusha
out
imul
cmp
cmp
and
inc
jecxz
std
cmc
ffreep
imul
mov
xor
ficom
add
xor
add
inc
add
inc
lds
inc
dec
and
mov
stos
jg
xchg
mov
add
jo
add
push
lahf
ret
shr
push
mov
dec
xchg
sahf
mov
jmp
nop
aam
ret
std
add
popf
sub
std
loop
sbb
loope
sub
int3
(bad)
repnz
in
frstor
and
out
or
movs
inc
mov
or
sar
pop
loope
xchg
iret
data16
sbb
(bad)
and
movs
dec
mov
out
mov
push
mov
xor
push
mov
sub
sbb
rcl
aas
aad
mov
inc
retf
sar
xor
pusha
shr
xlat
bnd
jmp
call
lods
sti
pop
ds
icebp
xlat
pop
jmp
mov
movs
scas
dec
cmc
icebp
xor
test
ins
cmps
pop
outs
mov
lea
mov
addr16
jno
or
cmp
inc
adc
mov
xchg
nop
stos
cmp
or
lock
cdq
xlat
push
fst
(bad)
push
jbe
push
cld
clc
xor
stc
cs
retf
ins
xor
ja
cmp
(bad)
scas
inc
adc
movs
mov
adc
mov
or
xor
rcr
jno
or
fnstcw
xor
sub
mov
inc
repz
xchg
clc
imul
int3
add
mov
fisttp
fisttp
arpl
lds
sbb
movs
jp
mov
mov
add
dec
dec
adc
jo
xchg
xchg
cmp
ins
nop
add
xor
adc
in
loope
sub
fxam
sti
nop
or
rcl
aad
pop
lods
jbe
mov
and
add
add
lock
xchg
ins
imul
xchg
sub
sbb
inc
push
cmp
and
icebp
rcl
push
inc
or
inc
je
cmp
addr16
sub
jae
fsubr
dec
push
(bad)
xlat
data16
pop
inc
pop
scas
jns
sub
out
lahf
cmp
sahf
xor
cmp
push
mov
test
aaa
sub
and
(bad)
sar
xor
nop
cmc
clc
mov
jns
and
and
jmp
jge
or
adc
fistp
jns
inc
ret
mov
xchg
je
jae
ret
out
into
hlt
ficom
or
dec
sub
inc
xlat
sub
add
test
dec
int3
(bad)
mov
xor
push
ret
mov
mov
mov
pop
xor
mov
fcmovnbe
mov
xor
aad
xchg
les
cld
add
mov
add
dec
cmps
into
out
out
ficom
sbb
pop
repnz
cwde
inc
push
sub
aas
or
fld
into
pop
(bad)
(bad)
pop
test
bt
ret
dec
or
sub
sub
mov
popf
imul
xchg
or
cmps
outs
mov
pop
xchg
jo
and
pop
out
pop
xor
mov
mov
sbb
(bad)
ror
or
adc
mov
xlat
push
frstpm(287
sbb
cmps
xor
push
mov
iret
jnp
outs
pop
cmp
dec
pop
stos
call
mov
push
and
(bad)
popf
(bad)
push
lea
mov
int3
jne
cmp
xor
sbb
mov
inc
mov
(bad)
fild
cmp
inc
pop
inc
cwde
(bad)
mov
(bad)
push
lds
fistp
jle
add
outs
test
mov
sbb
hlt
mov
xor
repz
mov
xchg
cmp
add
scas
in
xor
mov
cmp
adc
fadd
out
not
ret
sub
ror
test
rcl
retf
retf
mov
mov
ss
mov
or
sbb
lea
das
leave
jns
pop
pop
jg
mov
test
and
dec
and
xlat
inc
mov
retf
mov
clc
mov
int
imul
mov
xchg
jae
adc
push
enter
xor
inc
fmul
push
push
jae
inc
(bad)
or
pushf
lods
lods
xor
push
cmp
mov
sbb
mov
dec
addr16
sub
loopne
test
sahf
mov
aam
mov
pop
adc
dec
cmp
pushf
call
cmp
add
out
or
push
mov
ficom
push
dec
retf
mov
out
lahf
hlt
loopne
dec
retf
mov
cmp
dec
arpl
xchg
loop
mov
and
(bad)
sub
pushf
lods
inc
pusha
jae
daa
sbb
mov
push
jg
popf
mov
fisub
iret
push
repz
and
retf
outs
ss
push
xor
adc
scas
aaa
pushf
inc
test
(bad)
test
mov
jbe
nop
pop
or
jnp
leave
mov
rcr
(bad)
and
test
fnstcw
pop
outs
mov
movs
hlt
lods
nop
add
lods
(bad)
mov
jecxz
pop
jae
cmps
mov
sbb
push
js
addr16
and
or
inc
mov
(bad)
xchg
jns
je
jp
cmp
or
stos
or
jmp
lock
sbb
pop
jae
test
retf
icebp
popf
(bad)
fwait
sbb
fidivr
jmp
add
jne
cmp
hlt
xchg
cmp
test
jmp
add
gs
dec
mov
xchg
loop
jbe
(bad)
int3
cmps
mov
aaa
test
add
pop
mov
leave
(bad)
les
xchg
push
sub
add
(bad)
mov
das
and
les
mov
mov
fcompp
and
sbb
into
stc
jne
cmp
mov
pop
adc
xchg
pusha
pop
pop
or
push
(bad)
sub
inc
cmp
sub
jb
mov
mov
inc
or
push
inc
jnp
outs
lock
(bad)
daa
imul
jmp
sti
loop
imul
cdq
lods
js
jmp
in
scas
jnp
in
push
aas
sbb
jbe
aam
push
scas
or
sar
mov
xor
les
and
and
push
inc
add
cmps
fisubr
iret
pop
retf
cmp
fs
add
fucomp
mov
jp
xlat
scas
add
mov
repnz
sbb
or
and
xchg
int3
mov
xchg
in
and
dec
std
add
add
add
add
add
es
sbb
add
mov
lods
pop
out
das
sub
leave
fisubr
sbb
popa
pop
fsub
jmp
and
cmps
and
mov
xchg
mov
lds
add
rcl
jmp
mov
aas
and
fcomp
sbb
pop
cmp
pop
inc
push
jne
mov
push
xor
scas
adc
sbb
mov
jo
cdq
icebp
rcr
inc
fcmovne
cmp
sti
xor
imul
out
movs
pop
out
mov
inc
ss
jb
ss
xchg
push
es
ret
fsub
in
leave
xlat
cmc
loope
pop
je
dec
or
ins
fwait
and
cs
neg
in
mov
and
pusha
push
adc
or
es
mov
or
xlat
(bad)
mov
add
out
in
dec
lods
jg
push
aad
arpl
ds
in
(bad)
cmp
rcr
xchg
dec
fdiv
clc
dec
inc
sbb
scas
test
and
pop
dec
(bad)
lods
adc
dec
dec
pop
push
jnp
sub
jo
jmp
inc
sub
stos
ss
and
sahf
cmp
(bad)
jp
jne
pop
push
pushf
(bad)
aad
mov
outs
les
jmp
retf
loope
ins
jnp
cmps
(bad)
outs
jmp
adc
ja
pop
inc
dec
push
xchg
std
jl
xor
push
xor
pop
aam
std
cmc
push
xchg
imul
jl
pop
rcl
sub
mov
popa
cmps
ds
inc
imul
call
les
sbb
jne
test
jmp
push
fld
test
cmc
jecxz
imul
xlat
mov
jno
fnstenv
stc
fst
push
inc
cmps
mov
int3
pop
fiadd
xchg
cmp
aam
sbb
js
dec
(bad)
loope
mov
ss
ds
sahf
mov
test
and
mov
data16
sti
adc
adc
mov
mov
push
pop
add
addr16
outs
inc
mov
enter
setbe
outs
adc
das
daa
pop
(bad)
leave
es
jbe
imul
shl
jle
popf
ss
mov
inc
cmp
jno
adc
test
cs
jge
aam
cmp
add
mov
aas
mov
(bad)
dec
xor
mov
and
js
pop
or
out
push
scas
or
nop
sbb
or
mov
and
xor
pop
xor
and
lds
bound
xor
imul
push
std
and
and
cli
add
rcr
in
add
push
add
adc
add
jle
push
add
retf
into
adc
add
push
in
ds
lods
sub
mov
jbe
test
adc
shl
fild
cmp
popf
cmp
or
leave
mov
mov
rcl
jnp
sub
in
aad
dec
sti
xor
call
mov
mov
leave
or
jg
mov
and
pushf
dec
push
mov
aam
mov
xor
inc
lds
test
data16
inc
into
cmps
int3
mul
inc
inc
or
or
fldenv
call
push
stos
adc
xor
dec
int
addr16
test
scas
or
mov
dec
pop
std
enter
dec
(bad)
sbb
mov
aam
fadd
div
(bad)
mov
jge
add
jmp
das
addr16
push
in
or
nop
mov
and
nop
pop
cmp
mov
in
out
outs
js
fisttp
sahf
adc
paddq
iret
cdq
sar
stc
sti
sbb
or
mov
inc
dec
xor
arpl
mov
int
adc
mov
add
push
push
mov
mov
pop
mov
adc
mov
cwde
and
test
and
repz
mov
xchg
addr16
mov
rcl
adc
jp
xor
sub
adc
mov
mov
out
fxch
add
inc
mov
ss
cmps
cmps
dec
lahf
pop
push
mov
mov
push
cmps
dec
inc
test
pusha
push
add
mov
ror
pmaddwd
mov
or
jae
out
fsubr
and
inc
test
mov
pop
retf
fwait
repz
neg
mov
imul
mov
jge
xchg
push
or
stos
mov
push
inc
stos
jmp
pop
xchg
cmps
xor
mov
inc
std
retf
xlat
mov
push
stos
gs
push
sbb
je
and
mov
cs
push
nop
popa
arpl
lods
sub
push
or
dec
and
jge
aad
es
mov
scas
stos
pop
xor
and
aas
and
leave
xor
enter
push
pusha
sub
push
mov
mov
lock
mov
test
clc
pop
mov
out
ret
dec
fdivr
push
add
pop
movs
add
pop
daa
and
retf
and
sbb
cmp
jno
adc
mov
push
js
and
xor
daa
clc
jno
pop
test
test
dec
cmp
in
fcom
out
mov
mov
mov
and
xchg
jo
adc
popa
cwde
inc
and
fisttp
and
dec
dec
sbb
lds
das
iret
cmp
dec
scas
dec
rol
xor
fisub
call
cli
retf
dec
sbb
cmps
and
mov
add
cmp
nop
in
(bad)
sbb
mov
push
pop
mov
adc
scas
repz
mov
out
cmp
(bad)
sbb
(bad)
and
movs
nop
lods
mov
sub
mov
movs
mov
setp
jmp
inc
mov
call
imul
xor
in
adc
ss
adc
enter
push
or
mov
push
pop
les
xchg
jae
popf
sub
lods
lds
arpl
nop
es
add
cdq
mov
push
xor
and
jo
mov
ja
leave
(bad)
dec
inc
jmp
aas
lahf
push
xchg
cmc
cmp
xchg
into
push
pop
gs
and
xor
pop
aaa
dec
dec
adc
imul
mov
cmp
cmp
outs
mov
pop
lods
xor
les
(bad)
or
cmp
shl
ja
into
push
call
repnz
cli
(bad)
xchg
push
pop
pop
popf
and
cli
sub
inc
dec
stos
test
inc
dec
mov
aam
into
jns
(bad)
mov
sbb
mov
outs
leave
push
pop
lock
je
clc
inc
(bad)
fsubr
sbb
aas
std
push
cmp
ds
aas
mov
adc
inc
out
in
jl
je
cwde
and
sub
call
mov
cmp
xchg
fbld
dec
jmp
dec
dec
adc
push
inc
xor
jnp
or
inc
ja
in
vsubsd
sub
cli
jne
ficomp
xchg
out
scas
ds
jne
(bad)
jmp
add
mov
inc
pop
in
js
cdq
leave
adc
test
repnz
dec
fild
lds
cli
push
mov
movs
pop
hlt
in
je
push
and
cmp
lods
inc
sahf
jmp
jl
outs
pop
sbb
adc
and
cmp
inc
push
add
xor
cmp
call
jp
int
imul
arpl
and
aas
mov
jge
push
or
push
cmp
mov
pop
cmp
mov
shl
sar
out
xor
or
jle
jmp
pop
aas
or
or
lods
stos
jae
outs
cmp
pop
lods
push
push
loope
cmps
fmul
or
mov
mov
fist
out
in
lods
test
xchg
xchg
and
jmp
xor
(bad)
not
push
cld
aam
cwde
ret
xor
sbb
adc
inc
frstor
stos
push
xchg
(bad)
scas
loopne
stos
loop
and
(bad)
add
inc
retf
xchg
fild
fist
dec
mov
scas
loop
and
sub
cmc
jne
push
mov
dec
jnp
mov
sbb
cmp
jl
dec
fild
repz
or
bound
xchg
es
mov
inc
and
pop
(bad)
xchg
aam
xchg
mov
aad
xor
mov
bound
scas
push
pop
jle
dec
add
xchg
movs
sub
or
push
imul
imul
cmp
jb
(bad)
jge
call
sub
out
sbb
mov
or
sub
mov
fistp
sub
int3
xchg
push
add
fwait
push
add
popf
loope
test
push
xor
in
fadd
jmp
push
dec
rcl
cmp
repnz
movs
dec
mov
jns
cmc
push
popa
ret
idiv
ds
and
ficomp
push
push
enter
in
jns
mov
dec
mov
mov
mov
add
dec
push
(bad)
mov
pop
push
mov
test
xlat
push
pusha
icebp
std
das
inc
lock
mov
cmp
push
ja
mov
adc
mov
add
ins
sbb
leave
mov
stos
cli
cdq
test
jg
push
ins
adc
imul
gs
push
out
sbb
jl
pushf
or
push
push
sbb
cdq
cmp
adc
xchg
(bad)
sub
jmp
mov
dec
adc
or
test
cmp
aam
and
xchg
(bad)
push
adc
fsubr
cmp
cli
mov
inc
sub
adc
add
add
not
add
inc
jno
xchg
and
add
adc
(bad)
into
inc
xor
mov
mov
vmovntps
add
inc
(bad)
ret
xor
bnd
(bad)
shl
and
fwait
aaa
aad
pop
pop
xlat
xchg
pop
jns
xchg
mov
and
aaa
push
inc
loope
es
ins
jo
xor
jnp
ret
sub
and
mov
repnz
fisub
test
or
enter
cmp
stos
dec
jno
clc
jmp
imul
pop
or
or
test
(bad)
es
fdiv
sub
mov
push
fisubr
lahf
stos
rcl
test
xor
sbb
cmps
cld
clc
fwait
jmp
repnz
push
outs
loopne
ret
mov
jl
addr16
icebp
cmp
xchg
int
enter
lahf
dec
cwde
sbb
add
mov
cmp
xor
add
aaa
xchg
cdq
dec
fwait
mov
push
and
push
fimul
dec
icebp
sbb
or
add
jnp
push
lods
cli
push
ffreep
ins
aad
(bad)
xchg
xor
xchg
fs
cmp
and
xchg
mov
vpmovsxbq
shl
test
ret
(bad)
jno
xchg
fidiv
das
xchg
push
sub
inc
ret
pop
loope
test
push
mov
push
fidivr
outs
test
inc
in
arpl
or
mov
sub
popf
call
scas
js
and
mov
out
(bad)
xchg
xchg
pop
mov
xchg
fild
pop
pop
cdq
add
pop
(bad)
retf
outs
int3
pop
xor
jmp
pushf
mov
movs
arpl
icebp
cmp
push
imul
bound
jmp
(bad)
mov
test
test
std
push
mov
mov
fstp
push
les
int3
not
pop
sbb
cmp
pop
inc
lock
cmp
(bad)
push
rcl
add
sbb
jns
pandn
clc
out
fwait
call
bound
fist
xlat
clc
aam
sti
xor
aam
outs
fwait
dec
add
xchg
cmp
div
mov
xor
je
clc
mov
hlt
std
xor
sbb
jae
push
xchg
pop
in
jno
xchg
jbe
outs
repnz
lea
or
aas
dec
xchg
mov
sub
aaa
call
ret
bound
inc
test
test
into
jne
call
push
aas
popa
xor
repz
sbb
sbb
call
and
fisttp
mov
dec
(bad)
xlat
shr
popa
inc
mov
or
jmp
jbe
jmp
rcr
xor
and
fwait
cmp
add
mov
cwde
mov
ret
mov
jne
cmp
int3
jb
cmc
es
ja
push
repnz
jne
jns
jbe
(bad)
jae
sbb
adc
and
xlat
cmp
retf
xor
ss
cmp
pop
loope
and
push
or
sbb
adc
fwait
daa
jb
retf
aas
scas
adc
mov
or
add
mov
test
xor
xchg
or
stc
aas
xchg
mov
cmp
in
addr16
jecxz
adc
daa
pushf
es
and
mov
ds
lods
(bad)
jle
sub
inc
dec
cdq
push
call
iret
mov
jl
pop
test
xchg
xchg
push
mov
mov
adc
jge
outs
sub
imul
(bad)
(bad)
jp
ds
xchg
pop
fnstcw
xchg
fsub
mov
sub
fld
cmc
mov
and
shl
stc
out
dec
test
test
repz
ret
stos
cwde
cdq
cld
popa
push
pop
fiadd
sahf
xor
xchg
push
ficomp
push
dec
mov
cwde
cmps
scas
addr16
mov
sbb
test
mov
mov
mul
xchg
stos
aas
out
inc
(bad)
and
imul
mov
add
out
scas
push
pop
popf
push
dec
mov
push
sti
cmp
data16
fsubr
sub
adc
nop
cwde
cmp
adc
test
imul
ret
sub
ins
mov
repz
jae
cwde
pop
(bad)
std
cmps
or
stos
jp
dec
addr16
mov
jnp
jo
movs
lock
movs
fiadd
out
test
mov
xor
lea
out
pop
jns
dec
scas
xchg
xlat
mov
mov
je
inc
out
jnp
arpl
adc
sbb
sub
fidivr
xchg
dec
jmp
push
mov
cmp
sti
js
retf
cmp
or
scas
iret
xchg
shr
shl
mov
jae
retf
adc
les
daa
push
pop
rcr
inc
pop
or
jl
aaa
scas
xor
test
std
and
movs
mov
stc
fmul
jecxz
int3
icebp
cmp
stos
(bad)
retf
and
scas
mov
mov
add
add
jge
add
xor
jb
dec
inc
sub
push
push
push
es
enter
data16
(bad)
push
mov
or
daa
pop
out
inc
and
or
push
xlat
(bad)
push
push
mov
or
arpl
pop
sbb
bound
push
cmps
adc
add
nop
add
add
sbb
push
adc
out
hlt
inc
lds
jecxz
xor
dec
repnz
adc
push
das
adc
jecxz
cli
sub
push
pop
ret
pop
cmp
push
sbb
sub
dec
inc
(bad)
push
int3
cmp
fisttp
icebp
pop
enter
imul
fdiv
pusha
sbb
pop
leave
rcr
js
pop
repz
mov
push
outs
mov
cmp
(bad)
jl
push
mov
sub
shl
push
(bad)
inc
jnp
in
jae
add
fist
push
cmp
jns
cmc
into
sub
hlt
fcom
mov
pop
pop
inc
xor
cli
test
jp
fisub
test
and
imul
shr
hlt
sub
shl
dec
sbb
dec
jmp
inc
popa
popf
jnp
mov
pop
mov
push
sbb
push
out
sahf
cdq
pop
pop
dec
test
push
mov
lds
mov
fnstsw
leave
movs
test
in
pop
scas
int
cdq
sbb
retf
mov
xor
mul
cwde
(bad)
mov
iret
sub
div
inc
js
cmp
fdiv
push
adc
lahf
jp
leave
clc
mov
xchg
loope
adc
xor
pop
adc
icebp
pusha
xchg
lds
pop
in
retf
repnz
jbe
ffree
or
scas
outs
inc
arpl
adc
mov
push
in
(bad)
mov
fld
jp
push
add
es
enter
dec
or
les
push
aas
xor
mov
loope
je
std
mov
test
into
xchg
mov
ja
int3
dec
mov
enter
and
clc
jno
sar
push
retf
mov
mov
in
iret
xlat
(bad)
cmp
repnz
inc
call
pop
sti
mov
sbb
dec
xor
push
mov
xchg
sbb
xchg
xor
and
jmp
jns
jmp
pop
pop
mov
out
pusha
adc
shl
outs
into
outs
cmp
(bad)
and
xchg
inc
push
stos
mov
mov
add
xchg
mov
(bad)
xor
jecxz
push
out
js
cmp
cmps
adc
xchg
sahf
addr16
aas
aam
jmp
adc
dec
mov
aad
mov
sub
aas
and
imul
cmps
les
nop
xchg
popa
mov
ret
clc
in
ins
mov
test
push
jns
xor
add
mov
adc
mov
stos
out
(bad)
popa
cmp
inc
test
mov
jp
adc
inc
mov
in
and
xchg
aam
ss
mov
fadd
stc
xchg
pop
pop
add
sbb
add
enter
jge
out
iret
mov
xchg
mov
(bad)
jle
cdq
ret
and
pop
es
xchg
js
ret
jg
xchg
and
mov
add
sbb
sub
push
mov
xlat
js
inc
test
sub
mov
mov
jae
lods
dec
dec
pop
jp
popa
imul
ret
pop
mov
test
fwait
xor
xlat
mov
push
sub
inc
xchg
inc
mov
fstp
jnp
sbb
stc
xchg
xchg
fs
cmp
pop
or
push
hlt
inc
in
push
jo
or
sbb
xor
dec
ss
or
stos
sar
mov
sbb
or
je
cs
cmp
cmps
and
push
fcomp
mov
push
xchg
xor
outs
add
mov
pop
jae
sub
push
jp
mov
pop
cmp
in
adc
(bad)
fist
and
test
lods
inc
lahf
jle
sbb
inc
jnp
lods
inc
or
dec
bound
test
fstp
jecxz
dec
(bad)
dec
jmp
or
adc
mov
js
xchg
xor
daa
push
rcr
lods
jge
jmp
loop
fdivr
jecxz
mov
push
fwait
xchg
inc
test
stos
and
or
pop
enter
test
and
mov
mov
es
mov
cli
retf
inc
iret
(bad)
mov
mov
retf
sub
push
sub
mov
lock
lds
inc
sub
pop
mov
xchg
lock
add
jmp
movs
and
push
pop
xor
add
xor
outs
or
pop
sub
xor
lea
dec
mov
aaa
sti
sub
sub
in
aas
or
sbb
pushf
icebp
or
pop
rcr
in
jne
cmp
sar
rol
xchg
js
xchg
push
shl
fist
ret
push
pop
xor
sub
jg
sbb
sahf
arpl
shl
mov
cmps
lock
xchg
xor
xchg
pop
jnp
je
jl
fld
out
pop
cmp
shl
push
add
mov
out
sti
ja
push
pop
mov
retf
and
sbb
add
out
add
dec
or
add
out
cmps
xor
mov
pop
rcr
mov
jne
sbb
mov
mov
and
mov
inc
lock
inc
cli
dec
nop
dec
fsub
cmp
xchg
fdivr
mov
or
icebp
out
fwait
push
cmc
xor
repz
(bad)
xor
or
jmp
jne
ja
leave
pop
sbb
lods
outs
cmp
cmp
sub
inc
in
mov
adc
jmp
or
test
aam
ror
sub
mov
pop
loopne
push
lock
out
pop
xor
aaa
clc
mov
enter
dec
adc
cmp
xor
mov
les
outs
add
adc
outs
sub
mov
jne
clc
and
push
add
mov
out
enter
mov
dec
cld
lock
jbe
jo
mov
push
dec
add
dec
push
pushf
cmp
hlt
fidiv
pop
jp
push
xchg
mov
lock
add
mov
mov
aaa
xor
dec
arpl
repz
rol
out
or
push
fiadd
sub
push
jbe
(bad)
jnp
cmps
outs
mov
aaa
gs
cwde
aaa
mov
xor
(bad)
cli
push
inc
rcr
pop
cld
leave
xlat
push
fmulp
std
cli
adc
or
ins
mov
fidivr
cmp
jns
pop
jo
cmps
pusha
popa
xor
mov
lahf
lahf
dec
lods
std
xchg
lods
pop
repnz
not
in
test
mul
jle
icebp
xor
retf
push
movs
sub
fistp
jl
pop
or
cli
jo
and
inc
sbb
(bad)
out
retf
ins
adc
push
arpl
loope
pop
sub
inc
in
ins
test
fldcw
dec
leave
aad
push
xor
mov
mov
out
hlt
lods
xor
push
mov
and
or
cld
mov
addr16
outs
cmp
pop
hlt
ss
std
and
sahf
mov
shr
mov
js
pusha
pop
mov
cmps
lahf
dec
lds
cmp
fsubr
por
(bad)
xlat
mov
mov
jmp
imul
mov
je
pop
ja
xor
xlat
cmc
push
loope
dec
mov
call
loope
mov
cld
shl
sbb
jnp
sub
sub
mov
push
mov
push
xor
dec
push
mov
jecxz
jns
leave
mov
repz
shl
inc
jbe
inc
outs
outs
aam
or
xchg
fwait
mov
mov
and
cld
pop
pop
push
(bad)
jmp
imul
fs
push
push
adc
aaa
xchg
push
xor
cdq
adc
add
xchg
and
mov
cmp
jl
ds
mov
pop
mov
in
sbb
dec
movs
retf
xor
sbb
(bad)
lock
push
sbb
mov
cmps
inc
push
push
push
outs
leave
ror
sbb
adc
cwde
not
mov
push
or
mov
pop
in
aaa
clc
sub
mov
cdq
xlat
test
test
mov
inc
movs
xchg
stc
shr
jmp
and
pusha
pusha
ins
xchg
out
mov
paddw
push
adc
dec
xlat
fwait
popf
jmp
sub
cmp
loop
xor
xchg
std
sbb
mov
test
addr16
push
inc
arpl
or
mov
push
int
xor
push
addr16
iret
mov
push
bound
rcl
jmp
(bad)
adc
or
aam
jnp
xchg
packssdw
test
dec
pop
inc
test
rol
arpl
std
imul
cwde
mov
repz
mov
push
push
leave
mov
(bad)
call
aam
push
ins
cmp
mov
pop
daa
es
mov
fiadd
push
jno
jns
mov
jge
sub
jmp
cmp
xchg
pop
loope
dec
jge
inc
xor
aam
retf
in
adc
mov
in
cmp
and
pcmpgtd
or
loopne
xchg
imul
bound
add
cmc
and
test
and
adc
inc
(bad)
fistp
mov
les
das
mov
fst
push
dec
cmps
test
imul
mov
movs
in
fnsave
in
test
iret
or
mov
sub
rcl
jmp
mov
ror
mov
adc
push
imul
cs
das
xchg
mov
rcr
lahf
push
jp
in
dec
push
aas
jne
in
outs
cmc
stos
mov
test
mov
loop
popa
bound
sbb
mov
std
xchg
pop
mov
cs
sub
shl
rcr
popa
in
add
mov
dec
jo
jno
jo
mov
test
mov
xchg
mov
jo
push
ds
push
fucom
std
pushf
mov
les
stos
fisub
(bad)
push
fs
in
dec
(bad)
fistp
popf
and
sbb
adc
ins
add
rcl
in
adc
push
cmp
imul
cmp
call
mov
(bad)
out
pop
xor
and
stos
push
cmc
cmps
scas
add
mov
verw
push
sub
jb
mov
bswap
push
imul
sbb
sub
or
test
ss
lods
and
in
adc
in
pop
and
pushf
and
and
ja
das
jmp
or
cmp
int
sahf
jecxz
or
mov
mov
iret
shl
mov
pop
push
dec
adc
in
jmp
sahf
inc
sub
mov
dec
xchg
(bad)
retf
inc
loopne
fist
test
sub
outs
xchg
or
lea
outs
pop
inc
pop
lahf
fisttp
push
sub
and
and
xchg
icebp
ins
les
punpcklwd
push
fadd
pop
in
and
data16
icebp
scas
call
mov
add
addr16
dec
inc
pop
jmp
stos
shl
cmp
jae
int
sbb
iret
pop
inc
or
movs
rcr
inc
cmps
sub
in
add
mov
lods
repz
xchg
and
stos
je
xchg
out
mov
mov
rep
cli
enter
cwde
push
mov
pop
cmps
enter
pushf
cmovo
test
add
test
nop
xor
aam
and
test
ss
(bad)
pusha
fadd
in
sub
(bad)
lods
sbb
xor
xor
mov
xor
movs
mov
inc
mov
or
push
sbb
xlat
pusha
into
lock
xor
test
mov
imul
js
mov
or
cmp
loope
pop
enter
and
or
cwde
mov
push
mov
sub
ror
and
dec
mov
pop
push
push
add
add
add
add
iret
dec
jmp
lock
stc
and
or
and
(bad)
xchg
js
sub
inc
mov
or
(bad)
fimul
and
dec
data16
pop
xor
lock
push
(bad)
xchg
and
push
outs
lock
test
fldenv
dec
inc
lds
push
or
ret
(bad)
in
clc
data16
mov
xchg
pop
adc
xor
inc
and
dec
mov
mov
nop
adc
mov
pop
loope
sbb
stos
mov
sub
sar
add
jmp
adc
add
je
loopne
lock
xchg
cmp
push
adc
popa
pushf
jge
sbb
imul
movs
dec
inc
int3
mov
in
retf
cs
sbb
jecxz
fimul
aam
out
js
mov
adc
aas
and
cmc
mov
pop
out
call
fst
pop
pop
loop
push
xchg
fisubr
sbb
adc
jecxz
or
data16
rol
data16
in
repnz
add
pop
add
xor
add
cmp
pop
adc
dec
and
iret
jno
push
hlt
inc
icebp
adc
pushf
jae
loope
in
(bad)
xchg
jg
mov
popa
shr
shl
mov
and
je
mov
mov
pop
movs
add
sti
xchg
mov
fiadd
cdq
pop
imul
ficomp
aam
xor
dec
xor
mov
xchg
cs
dec
cli
cmp
mov
sub
rcr
loope
jmp
(bad)
shl
and
and
add
or
sbb
(bad)
imul
push
int3
(bad)
cmps
cmp
dec
ins
pushf
inc
push
inc
push
mov
ror
xchg
and
sub
stc
cmp
int
jnp
mov
cwde
(bad)
jbe
(bad)
out
adc
pop
addr16
add
imul
fmul
ins
movs
push
ret
cmc
pop
es
push
and
and
clc
lds
enter
xor
cmp
add
or
add
push
out
aad
mov
in
sti
pusha
int3
cmp
pop
pop
xlat
pop
adc
int
mov
dec
mov
jae
add
or
aad
rol
cld
into
ror
xchg
pop
add
in
cmp
(bad)
dec
pop
dec
ja
push
loope
mov
cdq
enter
push
adc
dec
pushf
fucomp
inc
adc
dec
xchg
cmp
fwait
mov
ret
adc
scas
into
shl
cmps
xchg
mov
lock
add
cli
fadd
xchg
aam
outs
les
mov
adc
lds
fwait
pop
cdq
dec
or
xor
xchg
inc
mov
jmp
and
jle
mov
push
lock
enter
fs
ja
push
jmp
cs
add
xchg
clc
push
int
adc
mov
adc
loopne
ss
nop
ret
call
cmp
jl
jns
loop
pop
adc
fs
push
inc
mov
and
fidivr
xchg
dec
aas
cmc
ins
leave
push
add
sbb
and
mov
(bad)
xchg
ror
mov
mov
xchg
jle
jo
ins
xchg
pop
repnz
movs
in
pop
fnsave
jo
out
movs
call
in
ret
mov
popa
push
mov
arpl
add
in
rcl
or
and
sbb
mov
mov
sub
push
xor
jnp
inc
inc
xchg
cmps
in
push
scas
adc
dec
enter
mov
adc
sub
xor
fiadd
imul
push
ins
or
ins
inc
and
pop
jg
xchg
arpl
sbb
adc
sub
into
ffree
mov
aam
dec
adc
xchg
mov
js
xor
leave
fadd
scas
push
mov
jno
mov
fs
rcl
repz
fcom
inc
ins
adc
mov
das
cmp
pop
nop
and
scas
and
or
lods
fs
jg
sbb
add
pop
scas
js
and
xor
mov
sbb
pop
mov
push
mov
aaa
mov
and
mov
loope
or
stos
cmp
or
push
push
dec
push
test
lahf
adc
push
(bad)
pop
adc
dec
pushf
mov
mov
dec
or
xchg
push
ss
enter
ins
pop
int3
push
cmps
idiv
jbe
adc
mov
jl
(bad)
pop
bnd
inc
jmp
cli
jl
sahf
sahf
mov
jbe
dec
aam
std
sub
test
or
rol
push
ret
xor
test
enter
adc
call
(bad)
ss
lock
dec
mov
and
adc
push
les
inc
and
shl
xchg
and
fsub
cli
jp
arpl
jmp
xchg
ror
jl
pop
xor
ror
int
cmp
je
push
and
leave
pop
movs
scas
cmp
add
fmul
jo
cmp
xchg
cmps
loopne
mov
jbe
nop
and
cmps
xor
cmp
push
adc
scas
ds
call
test
push
push
or
aam
shl
sub
test
cmc
xchg
imul
pop
mov
xchg
sbb
pop
xor
cmps
and
dec
mov
pushf
cmp
push
imul
mov
dec
add
lahf
sbb
push
addr16
les
mov
lds
push
outs
pop
jo
lds
pop
dec
lods
aas
cmps
lahf
sar
jbe
push
nop
mov
popf
clc
cmps
mov
jbe
ins
test
repnz
xchg
dec
mov
cmp
mov
mov
pop
iret
push
pop
sar
and
xchg
jnp
mov
xchg
retf
in
icebp
pop
pop
dec
xchg
sahf
(bad)
push
sbb
or
bound
pop
out
xor
jge
pop
aad
fwait
(bad)
dec
jne
xor
out
sbb
retf
or
inc
fcomp
sub
push
mov
and
cli
or
lods
in
cdq
mov
sub
adc
push
data16
arpl
cmp
and
int
xor
ror
inc
test
add
fidivr
sar
sbb
adc
mov
test
add
push
(bad)
pushf
mov
xchg
imul
les
mov
repz
jmp
(bad)
pop
xchg
inc
test
dec
in
out
je
movs
ror
mov
out
aaa
add
cs
push
addr16
movsx
test
jno
fs
cld
hlt
movs
add
int3
xor
jns
add
push
lods
loope
pusha
mov
repz
inc
popa
xor
addr16
cli
mov
sahf
jmp
pusha
test
xchg
ret
fisub
and
push
pop
fdiv
push
cmp
rcl
pop
inc
jnp
(bad)
das
pop
mov
sub
jge
mov
fisub
sub
xchg
inc
jle
jno
mov
xchg
fsubp
sub
push
in
outs
sar
cmp
add
shr
mov
sbb
inc
stos
add
out
pushf
sti
call
push
adc
(bad)
jecxz
mov
je
fs
retf
mov
mov
sub
out
sub
mov
jle
and
into
adc
nop
stos
cmp
inc
jp
or
mov
scas
leave
bnd
jne
jno
add
inc
imul
pop
jnp
lods
pushf
cmp
pop
sbb
ds
cmp
dec
jbe
or
idiv
dec
in
repz
inc
fs
addr16
std
aad
sbb
repz
cli
inc
cdq
popf
pop
sar
push
outs
pop
(bad)
pop
mov
lods
and
cmp
push
and
cmp
jge
push
fwait
push
pop
pop
add
cld
cmp
push
mul
mov
add
inc
test
loopne
or
ins
addr16
stc
pop
add
xchg
push
outs
hlt
sbb
push
inc
clc
add
add
add
int
fmul
and
aas
mov
or
mov
push
xor
add
cmc
repnz
test
inc
jmp
sub
mov
fcom
stos
xchg
arpl
mov
pop
pop
pop
clc
ins
cwde
addr16
lods
xor
das
in
aaa
sub
mul
dec
shl
adc
mov
xchg
stos
movs
mov
out
adc
inc
and
fiadd
mov
cld
sbb
out
sub
xor
and
xchg
push
push
xchg
sub
call
outs
out
cmps
out
cs
push
repnz
inc
sub
jb
lea
popa
or
fidivr
jle
mov
mov
popa
in
push
cs
or
in
out
push
mov
push
jl
in
ficom
daa
popa
inc
xchg
and
bound
xor
mov
ror
retf
rcr
jb
add
popa
xchg
ss
jns
mov
in
push
test
pop
es
std
mov
into
or
adc
enter
sub
mov
push
and
aaa
outs
fcmovnu
mov
inc
sbb
inc
stc
sub
int
dec
jns
rol
fwait
push
popa
shr
or
inc
adc
pop
xchg
mov
pop
lahf
sub
and
jbe
scas
xor
repz
arpl
sbb
out
repnz
inc
mov
cwde
sub
and
jp
imul
sbb
lods
mov
inc
sbb
or
pop
aas
or
cmp
pop
repnz
repnz
mov
test
mov
inc
cmp
in
rcr
pop
and
pop
or
sbb
clc
data16
adc
sti
xchg
mov
pop
inc
int
push
pop
jnp
out
pop
in
sub
xor
jge
mov
add
jns
add
pop
add
add
xchg
inc
and
jmp
or
pop
inc
inc
adc
in
cmps
scas
xchg
inc
cmp
cmp
dec
xchg
retf
sub
out
(bad)
in
aas
mov
mov
pushf
jmp
mov
daa
adc
sbb
shl
out
and
cmc
js
rol
cld
(bad)
shl
xor
xchg
xor
jl
or
jns
xchg
test
pop
push
push
dec
jmp
push
add
mov
add
sbb
repnz
mov
push
test
outs
sbb
rcl
push
jbe
adc
movs
pop
cs
cmp
mov
into
inc
adc
cs
cs
movs
jae
jmp
cwde
fdivr
loop
mov
pop
int3
mov
push
aas
xchg
out
mov
push
cmc
mov
cmp
nop
es
shl
or
iret
push
or
add
repz
dec
lock
leave
add
add
add
add
out
outs
mov
stos
jecxz
jnp
lods
shr
xor
xchg
ret
into
nop
rcr
popf
jns
mov
stc
cwde
xor
call
adc
add
mov
loop
xchg
in
mov
mov
or
popf
popa
sbb
sbb
popa
pop
jb
aam
or
inc
int3
mov
test
dec
push
fnstcw
mov
(bad)
leave
(bad)
jge
mov
and
dec
shl
pushf
maskmovq
idiv
fdiv
sub
sbb
cld
cmp
test
or
test
es
(bad)
pushf
xchg
push
repz
lods
cmp
cmc
lock
lods
cmp
(bad)
out
xor
mov
adc
(bad)
mov
adc
lgs
adc
imul
mov
mov
sub
mov
mov
mov
(bad)
push
sub
stc
fld
sub
jne
push
loopne
mov
add
push
add
add
add
add
shl
push
adc
cmp
jp
xor
mov
repnz
test
push
mov
push
repz
xchg
cmc
sbb
and
fwait
xchg
loope
hlt
adc
call
int
sbb
js
lahf
mov
add
push
add
mov
add
mov
mov
sahf
jmp
or
add
ret
retf
mov
mov
mov
ins
test
int3
loop
sbb
in
mov
(bad)
jmp
lahf
lods
inc
push
in
and
xchg
xchg
mov
or
aas
ins
push
lock
inc
and
bound
cmp
adc
adc
lea
xchg
jmp
pop
dec
(bad)
jge
adc
mov
outs
dec
jae
popa
imul
popf
call
je
mov
call
pop
push
dec
fsub
add
push
push
scas
mov
nop
in
jb
arpl
adc
dec
push
inc
add
loope
in
mov
div
jmp
sbb
mov
sahf
dec
sub
out
push
rcl
jmp
xchg
pop
aaa
outs
jnp
test
loop
adc
adc
dec
pop
mov
aam
mov
imul
ins
aaa
out
ret
xor
push
jecxz
jmp
scas
jl
push
retf
call
cmps
repz
jge
sar
(bad)
jno
push
rol
sub
push
outs
cwde
imul
dec
xchg
js
imul
sbb
and
mov
jno
or
xchg
dec
jp
out
shl
jp
stc
test
adc
lods
sub
(bad)
rcr
test
mov
or
cmp
inc
sbb
stc
pop
sbb
cmps
jmp
fsubp
maskmovq
fld
dec
cmp
xor
sub
xchg
fsub
xchg
inc
and
xchg
pop
je
hlt
or
arpl
add
sub
cmc
pop
(bad)
out
dec
inc
cli
jle
ss
bound
(bad)
aam
xlat
call
mov
cmps
sbb
or
nop
jle
arpl
jge
pop
iret
add
lahf
int
push
push
push
cdq
push
lea
pop
pop
jbe
sbb
movs
loop
es
mov
push
cdq
fisttp
push
dec
cs
pop
hlt
iret
or
mov
pop
pushf
popf
(bad)
imul
retf
js
pop
or
sar
leave
jl
ret
dec
cmp
xchg
add
in
daa
dec
pop
cld
add
lock
add
data16
mov
jmp
dec
shr
sti
adc
dec
sbb
lods
cli
(bad)
das
dec
push
js
loop
fidiv
and
out
jno
clc
adc
xchg
adc
cmps
test
mov
mov
dec
xchg
add
mov
sbb
xchg
popa
cmps
add
inc
pop
in
dec
mov
jl
sub
test
sub
inc
add
mov
pop
jae
mov
aas
xchg
jecxz
and
sahf
mov
fucomi
ins
(bad)
aas
cli
cli
xor
sbb
outs
pop
int
jo
rcr
and
sub
aad
sbb
push
je
inc
inc
mov
inc
std
add
pop
jp
stc
push
lock
(bad)
jge
jp
and
rol
mov
fmul
clc
jne
out
gs
jmp
add
mov
inc
(bad)
sahf
repz
dec
ja
and
test
dec
sbb
sbb
mov
push
fcmovu
ja
xor
and
jmp
fwait
nop
dec
outs
xor
push
sbb
dec
lods
mov
in
ficom
adc
inc
dec
imul
arpl
mov
push
fstp
outs
clc
adc
add
ret
bound
fisubr
inc
mov
add
mov
daa
outs
cmp
xor
mov
push
ds
mov
ror
fld
leave
or
push
ins
jne
idiv
into
push
mov
sub
inc
push
push
in
xchg
nop
sbb
popf
inc
les
jmp
pop
pop
dec
call
and
push
ja
mov
(bad)
fisttp
ds
lock
jmp
sub
in
and
out
movs
add
iret
ins
jle
imul
adc
mov
(bad)
fld
(bad)
rol
(bad)
fidiv
out
mov
sar
add
xchg
xor
sbb
mov
jecxz
je
out
(bad)
mov
(bad)
call
nop
mov
cmp
mov
push
scas
mov
(bad)
in
shl
mov
mov
add
push
mov
cmp
lods
dec
call
cld
mov
popa
cwde
mov
inc
sar
not
xlat
popf
fild
mov
popf
cwde
xor
aad
popf
pop
gs
mov
leave
xchg
push
jns
les
inc
jns
xor
push
cmp
pop
dec
cmp
cmp
adc
pop
nop
ret
adc
fwait
cmp
add
pminub
jbe
or
jno
mov
inc
pop
mov
aas
jmp
sbb
pop
dec
xlat
mov
mov
test
ficomp
adc
mov
int
mov
sti
inc
inc
hlt
jg
imul
mov
lods
loopne
and
mov
ins
push
cmp
mov
out
out
push
dec
cmp
push
retf
pop
(bad)
int3
inc
ret
div
or
sbb
xor
sbb
mov
mov
xor
(bad)
js
lods
cmps
xchg
ins
out
pop
int
out
jmp
sbb
in
dec
es
clc
xor
fcmove
(bad)
mov
sub
imul
sbb
mov
jbe
and
not
outs
jecxz
jmp
sar
and
lea
mov
pop
xor
idiv
cli
xlat
test
push
dec
xor
loope
sbb
mov
popf
retf
jle
hlt
mov
aaa
(bad)
jp
push
sbb
add
xor
cwde
cmp
cmps
push
call
test
aam
nop
rcr
push
xchg
fisubr
cmp
fsub
xor
adc
pop
jne
scas
in
in
sub
js
int3
fbstp
mov
out
add
xor
cmps
mov
add
jo
and
sar
jp
lds
xchg
test
cwde
push
lahf
mov
repz
es
jno
fsubp
push
ret
call
add
cs
dec
scas
mov
leave
sub
sbb
add
mov
add
aad
add
daa
cmp
cmp
stc
mov
dec
shl
repz
sbb
dec
lds
bound
cmps
push
iret
(bad)
mov
mov
dec
push
dec
mov
lods
dec
adc
cmps
mov
xchg
test
push
icebp
push
iret
cmps
sbb
fs
data16
jne
xchg
jo
and
movs
inc
fs
jle
gs
jmp
pop
pop
inc
xchg
(bad)
repz
xlat
push
aas
ficomp
cmp
mov
jno
adc
cmp
cdq
adc
jbe
ficomp
pop
mov
test
inc
mov
mov
ret
(bad)
jno
sbb
unpckhps
fisubr
cmp
test
mov
and
push
xchg
dec
pop
cmp
xor
std
int
and
fisub
(bad)
out
jge
into
mov
cld
jmp
pop
out
jnp
fdiv
jno
pop
add
in
sub
sub
mov
bnd
cmp
cmp
cdq
sub
xchg
(bad)
int3
cmp
(bad)
(bad)
dec
xchg
or
ins
mov
stos
adc
jge
push
(bad)
lock
fldcw
dec
je
test
mov
mov
ret
and
pop
mov
fisttp
sbb
in
dec
shl
in
repnz
push
jle
xchg
gs
push
mov
mov
test
inc
cli
arpl
mov
dec
es
ins
imul
ja
push
jo
jge
xchg
stc
out
xlat
jo
shl
je
call
mov
popf
cmp
ins
push
mov
adc
sar
push
push
xor
inc
cmps
inc
sahf
into
xchg
fild
fbld
cs
popa
scas
pop
retf
test
sti
shl
adc
sbb
push
icebp
cmps
mov
cwde
inc
push
pushf
div
mov
fadd
in
dec
aam
push
pushf
retf
mov
xor
mov
mov
mov
cmp
sbb
adc
movs
in
data16
xor
add
je
mov
cmps
imul
mov
pop
adc
mov
sahf
(bad)
mov
(bad)
fisttp
icebp
jae
in
callw
add
add
add
add
add
nop
push
lods
xor
das
data16
sub
inc
dec
ret
pop
jne
sub
into
imul
shl
scas
adc
ret
sbb
dec
push
inc
repnz
inc
mov
pusha
shl
dec
shl
sar
inc
mov
cmp
out
cmp
xor
xchg
add
sar
mov
jo
stc
mov
mov
jmp
inc
add
sub
ins
sbb
add
ret
rcr
pop
cli
jge
ret
push
in
(bad)
lds
popa
mov
jg
pop
jp
mov
jp
outs
mov
ds
cmp
into
aaa
dec
jnp
and
dec
mov
jns
mov
sub
jp
sub
lods
and
js
cwde
test
push
and
add
mov
shl
int3
lods
cli
ds
push
clc
cs
xor
sbb
jnp
xchg
addr16
jle
mov
cmp
aam
mov
xor
out
mov
add
and
lods
adc
fild
fwait
jmp
jg
cmp
xchg
es
retf
adc
or
sbb
shl
pop
push
(bad)
mov
xchg
arpl
jp
shl
push
sub
mov
ins
jo
(bad)
mov
jg
jae
jg
js
pop
clc
jp
into
daa
lds
lea
out
dec
ret
inc
icebp
ins
sbb
xchg
addr16
mov
inc
aas
mov
and
adc
stos
les
pop
jo
aaa
mov
fisub
jg
sub
xor
adc
addr16
stos
mov
shr
frstor
leave
dec
xchg
je
fld
push
ins
into
and
lea
cmps
out
retf
mov
shl
push
mov
les
xor
test
ins
ror
loop
jbe
jl
inc
stos
jg
lods
xlat
neg
daa
mov
mov
test
xor
out
push
adc
pop
lds
sub
cmc
mov
cmp
mov
mov
xchg
in
call
inc
fisub
adc
sbb
call
push
test
ds
aam
and
loopne
pop
and
loopne
or
ds
inc
movs
mov
add
(bad)
(bad)
mov
inc
dec
sub
lods
fwait
and
mov
imul
pop
les
aam
stc
mov
imul
dec
sti
fs
mov
loop
sub
test
inc
jns
push
(bad)
pushf
or
sub
adc
fild
outs
daa
pop
lock
(bad)
mov
push
loope
test
aad
cli
cmps
jp
int3
xchg
sbb
or
fs
popa
jle
push
sbb
add
int
pushf
push
out
xchg
cwde
adc
into
cmp
cld
pop
aas
mov
test
pop
aaa
call
mov
bound
prefetch
jae
jne
add
mov
or
in
shr
loop
sub
mov
nop
push
call
aad
mov
movs
inc
jge
scas
in
test
dec
call
xor
or
popa
push
jl
repz
adc
jo
xlat
dec
add
iret
push
mov
ret
jmp
cmp
neg
lds
mov
popf
cmps
(bad)
cmp
push
dec
mov
emms
and
sti
pop
dec
cmp
inc
mov
bound
xchg
int
push
adc
retf
sahf
arpl
mov
xchg
imul
add
mov
jg
inc
sbb
pop
adc
mov
outs
and
jae
mov
jge
pop
dec
imul
pop
jnp
xchg
push
or
gs
popa
cmp
mov
(bad)
std
xor
fsub
inc
add
dec
mov
fstp
stos
sbb
mov
xchg
or
sbb
mov
test
inc
add
push
add
add
add
shr
mov
je
jbe
stc
inc
fs
fidivr
int3
xor
jne
mov
gs
mov
unpckhps
cdq
les
mov
test
pop
arpl
retf
jns
xlat
jp
(bad)
outs
repnz
dec
mov
mov
and
test
jbe
and
pop
test
jl
add
xchg
test
push
mov
ins
popa
xchg
fisubr
jae
lods
add
sti
mov
push
(bad)
sbb
adc
cmps
push
ins
out
ret
loope
and
xor
retf
cmps
cmp
or
cli
or
xchg
push
shl
ret
cdq
leave
clc
cmps
pop
out
aaa
shr
in
imul
out
sub
dec
cmp
inc
jmp
add
repz
jo
xor
sbb
stos
add
js
lea
std
outs
pop
push
dec
mov
daa
pop
stos
ret
lods
xor
inc
sbb
in
fistp
fwait
in
cli
jmp
ror
popf
(bad)
sbb
fisttp
daa
xchg
daa
sub
lods
inc
dec
mov
fwait
imul
cmps
lahf
outs
inc
inc
ins
iret
cmps
inc
mov
(bad)
adc
and
out
pop
push
rol
outs
daa
mov
xchg
ja
mov
fld
fcmovu
mov
stc
xchg
in
test
mov
ficomp
pop
nop
sub
xor
ret
mov
xchg
pop
cwde
cld
push
out
cli
imul
pusha
(bad)
and
or
ret
ins
into
mov
call
mov
push
retf
aaa
xor
mov
lods
or
(bad)
ss
mov
inc
mov
bts
aas
(bad)
stc
xchg
push
dec
and
mov
and
push
push
jno
xor
fnsave
into
jle
pop
arpl
mov
xor
jle
push
inc
arpl
sbb
cmp
push
push
mov
in
mov
out
rol
retf
inc
cli
dec
adc
pushw
(bad)
mov
sbb
or
daa
sahf
jnp
pop
cld
mov
adc
mov
or
addps
push
ss
lods
rol
jmp
enter
enter
jecxz
pop
add
jg
div
fsubr
xor
cmp
push
cs
or
stos
test
mov
bound
pop
xor
je
or
cmp
push
xchg
or
pop
fs
jp
in
fiadd
imul
cmc
mov
out
dec
and
push
cmc
push
xchg
adc
repz
movs
fistp
sbb
rol
cld
call
addr16
and
nop
push
pop
(bad)
push
or
jb
test
in
mov
popa
dec
dec
not
aam
jge
and
cwde
cmc
jbe
jge
icebp
mov
mov
inc
sub
retf
cmps
push
or
scas
lahf
jmp
mov
test
and
mov
adc
push
dec
adc
lahf
outs
cmc
imul
inc
stc
push
ja
cmp
sbb
adc
scas
push
mov
mov
push
and
pusha
lock
aas
adc
jmp
lods
jmp
ret
ins
xor
scas
jb
mov
pop
or
dec
imul
shl
jl
mov
sbb
fstp
push
lock
retf
cld
fwait
retf
and
adc
dec
jmp
adc
jne
fdiv
xor
jne
fdivp
cld
je
test
sub
cli
mov
pop
jmp
sbb
lods
jmp
jb
mov
mov
ja
sub
outs
lods
aas
ins
fwait
xchg
pop
int
out
or
and
inc
ins
mov
js
sbb
add
add
add
in
add
dec
(bad)
jmp
shl
push
or
retf
xchg
fcom
sbb
sub
popa
inc
pop
or
xor
daa
mov
xchg
mov
inc
adc
xlat
retf
(bad)
test
and
ret
push
mov
prefetcht1
mov
ret
sub
test
lods
adc
or
out
mov
in
cmp
fcom
mov
pop
dec
jns
cli
and
ror
(bad)
out
outs
call
mov
mov
ret
stc
loope
(bad)
sbb
repnz
dec
scas
aas
or
xchg
jmp
and
cmp
adc
cli
cmps
mov
xchg
pop
and
jmp
repnz
dec
int
push
pop
push
mov
push
jmp
popf
cmp
loopne
pop
dec
and
mov
xor
imul
sbb
sbb
dec
dec
enter
fnstsw
lock
in
pop
adc
ds
push
push
punpcklwd
repz
in
icebp
stos
mov
fsubr
dec
inc
outs
cwde
mov
fisttp
iret
and
(bad)
neg
out
push
inc
or
push
add
ss
cmc
mov
mov
and
sub
adc
loop
std
pusha
xchg
les
out
jnp
btr
stos
push
or
popa
scas
pop
lahf
adc
in
add
pop
pop
sar
inc
pop
mov
arpl
add
inc
cld
cmp
inc
cmp
(bad)
jns
adc
out
mov
mov
enter
shr
aam
push
cmp
fiadd
(bad)
popf
add
dec
stos
outs
scas
push
sbb
xchg
xor
cdq
inc
(bad)
(bad)
xor
popa
je
push
xchg
push
test
push
push
push
mov
sbb
fmul
call
dec
mov
cdq
lods
ror
sbb
fsubrp
ds
mov
push
repz
popf
into
mov
call
mov
je
inc
mov
inc
ja
inc
sti
sbb
in
and
movs
iret
sub
es
ins
sbb
mov
stos
fstp
pushf
scas
data16
sbb
mov
hlt
pushf
jmp
ret
adc
std
dec
clc
rcr
rcr
xlat
dec
adc
enter
dec
pop
sub
loop
scas
mov
into
icebp
fbld
jmp
cmp
inc
push
mov
popa
jnp
xchg
inc
icebp
jnp
cmp
les
sahf
add
sahf
pop
cdq
jmp
jns
jne
ins
jo
mov
jecxz
test
test
jmp
call
iret
lock
je
mov
loop
std
cmp
clc
xor
mov
mov
and
ds
xor
lds
mov
stos
stos
xchg
jbe
xchg
add
sbb
aad
xchg
adc
mov
xchg
not
int
mov
dec
pop
in
add
sub
movs
pop
push
mov
inc
sti
xchg
(bad)
sub
or
jnp
push
cs
jle
aad
inc
sbb
aam
sub
cld
adc
sbb
lods
mov
dec
mov
adc
test
nop
xchg
in
xchg
adc
das
or
loop
pop
fdiv
int
mov
sub
ror
fstp
mov
or
mov
push
push
adc
add
movs
scas
aad
int
in
jae
movs
pop
call
inc
mov
cmp
sbb
cmp
cli
lods
fwait
aad
in
mov
scas
loopne
cmp
ja
sub
ins
mov
enter
stc
push
dec
inc
data16
in
inc
fprem1
push
cmps
stos
dec
fisubr
not
scas
xor
div
mov
adc
test
xor
add
or
pop
mov
push
push
retf
push
aaa
movs
jo
sub
ins
pop
ret
aaa
and
nop
push
pop
and
hlt
pop
fisub
test
rcr
arpl
movs
retf
push
dec
push
jl
push
add
push
call
xor
cmp
fcomi
push
push
enter
cwde
lds
scas
xchg
sbb
mov
mov
sti
add
aas
mov
adc
mov
mov
and
clc
adc
mov
test
scas
adc
hlt
retf
jmp
and
inc
(bad)
cmp
mov
cmc
fisubr
js
mov
cmp
jns
popa
jbe
sub
mov
in
jp
lea
inc
push
stc
iret
cmp
leave
mov
test
xchg
jns
sbb
outs
mov
in
pusha
fmul
fidiv
outs
inc
sub
mov
shl
mov
inc
xlat
aaa
pop
call
outs
sbb
call
hlt
mov
(bad)
call
out
mov
xchg
jp
xlat
es
out
int
jmp
(bad)
jmp
xor
add
mov
(bad)
jmp
fwait
cmc
jge
loop
iret
pop
lahf
ds
dec
dec
xchg
or
xor
mov
(bad)
scas
adc
out
ret
fs
or
adc
xchg
scas
mov
(bad)
cmc
mov
or
gs
in
movs
or
shl
mov
mov
mov
cld
(bad)
jbe
std
frstor
mov
lods
popa
int3
das
pop
jmp
pop
sub
shl
mov
ds
xor
push
shl
in
stos
je
lods
jmp
mov
cld
sar
mov
bound
idiv
adc
mov
(bad)
in
sbb
mov
sahf
std
and
push
ret
cs
(bad)
(bad)
nop
dec
out
pop
add
mov
sbb
xchg
sbb
add
xor
jmp
xchg
xchg
in
adc
push
mov
pop
mov
sbb
inc
outs
aad
push
cmc
sbb
cmc
pop
ds
dec
(bad)
jmp
sub
jnp
sbb
lods
pop
ss
sbb
scas
gs
inc
push
sub
test
xor
pop
pop
jae
push
stc
xchg
xor
dec
mov
rol
mov
call
idiv
jo
mov
pop
mov
idiv
shl
gs
jo
repz
cmp
cmp
aas
ret
cdq
and
inc
dec
test
mov
mov
data16
fsub
xchg
sub
push
stc
cmp
pop
fcmovb
mov
sbb
lds
inc
jne
loopne
and
es
jp
jo
mov
pushf
push
cmp
pushf
jo
sbb
add
add
add
add
add
sub
mov
mov
pop
aad
pop
fbld
jge
cmc
dec
in
xor
cmp
pop
in
lods
xor
test
loopne
int3
(bad)
call
iret
out
cmps
sub
fisubr
xor
mov
int
xchg
int3
jo
scas
xor
call
dec
mov
sbb
(bad)
jmp
sbb
and
aad
inc
clc
inc
(bad)
pop
movs
mov
cmp
in
je
cmp
pushf
test
xchg
enter
pop
adc
cmp
jecxz
mov
inc
retf
cmp
and
not
push
dec
stc
out
mov
or
push
xor
jmp
add
les
in
cs
(bad)
iret
xor
and
mov
cdq
adc
push
sub
cmps
sahf
jp
call
leave
repz
dec
push
imul
out
and
arpl
sar
jae
mov
pop
shr
int3
mov
mov
aam
paddsb
inc
ret
push
xor
and
(bad)
jp
shr
inc
xor
fwait
pop
fwait
aaa
clc
xchg
icebp
mov
sbb
jo
daa
cmp
hlt
push
mov
fsubr
bound
sub
or
das
ins
xchg
push
pop
mov
std
adc
mov
test
adc
and
sbb
jae
pop
pop
xchg
mov
pop
aas
sbb
adc
ss
les
mov
inc
or
mov
jno
retf
add
adc
push
les
out
sti
daa
clc
repz
sub
add
movs
pop
je
pusha
nop
jge
xchg
sbb
sub
lahf
xchg
xor
loopne
fiadd
leave
push
xor
popa
and
inc
not
lea
cmp
nop
cli
ins
pushf
or
inc
mov
cmp
pop
inc
repnz
(bad)
lock
pop
mov
push
push
adc
sti
dec
ins
cmp
push
dec
mov
shl
xchg
push
lods
mov
cli
clc
or
cmp
aas
add
adc
pop
fst
mov
xchg
mov
vpmacsswd
mov
push
(bad)
xor
add
add
add
add
jl
dec
out
jge
aaa
push
mov
xor
push
push
cmps
push
bound
or
dec
push
fidiv
cmp
aas
add
xchg
mov
in
adc
mov
add
lods
sub
pushf
scas
cmp
mov
mov
test
mov
jl
mov
dec
std
mov
test
stos
ins
sbb
dec
lds
mov
in
dec
fs
stos
pop
mov
pop
jp
sbb
pop
cmp
movs
dec
fcomip
dec
hlt
sbb
jge
mov
mov
(bad)
sbb
or
sbb
(bad)
xchg
cdq
cmp
hlt
popa
mov
rcr
movs
hlt
push
pop
sbb
adc
xchg
scas
fwait
pop
lea
cmps
dec
fcom
std
out
repz
cmp
fwait
cs
test
xor
ins
jbe
adc
sti
dec
jae
fs
mov
cmp
aaa
js
mov
push
mov
mov
add
bound
push
xor
sbb
cmp
loop
mov
mov
div
or
and
fcmovbe
out
shl
outs
out
mov
addr16
dec
test
push
adc
mov
push
xor
mov
ins
out
call
dec
loopne
xchg
xor
jp
inc
scas
daa
xchg
aad
jmp
adc
stos
cmp
mov
test
movs
shl
stos
test
jno
das
cmp
push
ins
sbb
rcr
inc
sbb
call
or
or
add
sbb
scas
call
movs
push
mov
mov
repnz
dec
mov
mov
jecxz
cdq
lea
movs
mov
sub
fmul
pop
mov
mov
and
ins
pop
imul
jns
xchg
test
mov
cli
jbe
(bad)
fisubr
(bad)
cmp
pop
mov
jmp
inc
movs
mov
sbb
and
cmp
push
xlat
(bad)
out
popa
cmp
fisub
sub
mov
fwait
outs
cmp
pop
mov
xchg
in
fsub
std
push
and
fsubp
pop
call
jle
ins
sub
sub
xchg
xchg
xchg
imul
scas
or
sbb
jmp
push
mov
dec
jp
bound
in
pop
repz
dec
mov
int3
sub
aaa
call
inc
mov
mov
pushf
ret
das
and
je
mov
int
sbb
or
pop
pop
loop
xor
mov
sub
dec
cmp
cmp
xchg
sub
sahf
sbb
dec
adc
push
hlt
fdiv
or
bound
add
jge
(bad)
or
inc
loop
lahf
sub
push
sbb
repnz
mov
sub
call
sahf
shl
jb
mov
pop
add
(bad)
leave
addr16
(bad)
aad
into
xor
mov
xchg
aaa
das
hlt
loope
cmps
push
sbb
inc
sbb
imul
mov
xor
jle
sub
pop
test
fld
pop
cmps
cs
cmc
loopne
in
out
scas
fild
push
add
cmp
lock
xlat
xor
jns
(bad)
pop
jb
popf
cmp
jmp
mov
das
jo
mov
sbb
out
leave
daa
adc
xor
int3
or
movs
scas
xchg
or
mov
dec
(bad)
in
mov
jl
clc
push
pop
jp
enter
shl
pop
cdq
lods
cwde
pusha
push
push
pop
adc
mov
jnp
sar
push
xor
movs
and
(bad)
pusha
adc
mov
inc
loope
adc
inc
mov
and
scas
push
sbb
cld
mov
in
mov
stc
out
pushf
mov
daa
xor
outs
retf
xchg
cmps
cmp
clc
inc
sahf
sub
ins
outs
imul
js
sub
jg
out
jg
sub
sub
adc
in
cwde
fistp
lds
fldenv
dec
or
push
mov
mov
leave
fnstsw
dec
jp
(bad)
ror
out
and
jnp
xchg
lahf
dec
fst
ret
jmp
or
sbb
icebp
ror
test
ror
xor
icebp
mov
jmp
jnp
xchg
sbb
jno
mov
bound
sub
or
hlt
cmp
sti
div
mov
mov
lods
pop
add
cmp
push
push
mov
push
aam
inc
pop
adc
jae
fwait
sub
jecxz
fldcw
sub
xchg
add
add
add
add
inc
pop
mov
mov
leave
repz
call
cmp
xor
les
pusha
call
je
and
inc
outs
sub
das
adc
push
sbb
cmp
jb
sbb
shl
stos
mov
lods
hlt
mov
stc
imul
test
fcomp
jle
out
xchg
arpl
stos
mov
stc
movs
je
mov
fwait
xor
mov
je
mov
data16
xor
shrd
outs
ja
xchg
push
in
and
sub
icebp
into
ss
cmps
add
cdq
add
inc
ins
loope
xchg
aam
xor
sbb
xor
das
ss
cmp
sahf
cmc
push
mov
fimul
mov
call
out
xchg
or
mov
ror
fwait
sahf
and
inc
into
div
and
add
xor
push
push
jmp
sub
push
dec
pop
es
in
les
loop
pop
jne
sbb
repz
out
jl
or
fst
jle
pop
arpl
xor
retf
add
loopne
je
xchg
pop
jge
int
cmp
(bad)
cmp
dec
inc
retf
jmp
push
out
sub
xor
adc
cli
aas
push
clc
dec
rol
adc
pop
inc
jmp
sbb
or
les
push
fwait
outs
jne
popf
adc
fs
dec
rcl
repnz
in
loope
sbb
push
xchg
mov
imul
mov
fwait
or
(bad)
pop
icebp
lds
push
xor
adc
and
imul
idiv
inc
(bad)
push
(bad)
adc
cmps
adc
imul
mov
cmp
cmp
sub
jne
xchg
in
or
jl
clc
push
sti
xlat
pop
imul
mov
jle
int3
push
xchg
(bad)
mov
adc
jg
std
fbld
dec
out
adc
xchg
xor
movs
jnp
mov
inc
push
mov
jecxz
in
mov
cmp
in
jmp
inc
xchg
pop
fdiv
out
pop
mov
pop
add
jmp
retf
hlt
test
push
xchg
movs
loope
mov
call
ss
mov
cmp
lock
sbb
jle
aaa
pop
test
je
(bad)
and
push
shl
mov
arpl
add
ror
dec
arpl
(bad)
and
jbe
mov
and
inc
push
movs
pop
mov
cli
sbb
push
cld
retf
dec
sub
mov
jne
fwait
iret
or
fisub
cmp
pop
cmp
cdq
jne
push
cmp
jecxz
(bad)
ja
lahf
inc
mov
(bad)
aad
inc
and
jmp
and
push
sbb
cdq
lock
das
lock
adc
pop
and
dec
popa
mov
xchg
push
or
movs
retf
out
push
or
test
pop
xchg
popf
pop
aas
pusha
lds
sub
sub
mov
pusha
push
xchg
sbb
adc
scas
cmp
rcr
push
es
test
xchg
repz
or
jae
mov
js
inc
or
mov
shr
dec
and
inc
push
jb
sar
pmaddwd
fcomp
loop
scas
mov
sbb
adc
js
mov
jb
xor
push
lock
out
mov
push
xlat
push
retf
xchg
(bad)
push
std
mov
jp
mov
xchg
and
inc
jp
dec
adc
pop
xor
or
iret
aam
cmp
xor
push
fadd
in
xor
xlat
xor
fstp
std
fldenv
bound
out
js
inc
clc
test
jne
or
push
pop
adc
jecxz
cmp
add
xchg
or
popf
fld
mov
mov
inc
aas
and
std
push
lock
jg
xchg
dec
pop
jae
xchg
mov
fwait
icebp
jl
in
sub
outs
cmps
jbe
jnp
adc
cmp
loopne
fwait
and
icebp
out
das
fild
mov
sbb
add
add
add
jbe
add
push
retf
cmp
mov
push
xor
cs
(bad)
hlt
xchg
inc
pop
xor
push
sub
fistp
ror
ret
jo
(bad)
aam
jge
popf
mov
dec
push
(bad)
leave
out
ds
movs
sub
fbstp
dec
int3
int3
cwde
jns
mov
pop
and
(bad)
mov
add
add
add
iret
add
add
repz
fdiv
adc
fbld
pushf
outs
xchg
mov
loop
adc
adc
fiadd
pop
adc
daa
sub
mov
cli
sbb
cmp
jne
add
pop
dec
mov
rcr
xlat
les
cmp
jmp
and
jp
xor
pop
(bad)
(bad)
out
hlt
xor
mov
fcomp
push
mov
cmp
mov
cmps
xor
sbb
int3
ret
mov
sbb
push
enter
push
mul
pushf
es
mov
xchg
lods
add
int
ins
cmc
ror
mov
(bad)
mov
add
aad
push
inc
add
cmp
aad
or
(bad)
sti
sub
inc
sbb
adc
fbstp
and
test
jo
inc
das
fld
(bad)
lods
push
mov
retf
cmp
jmp
xor
push
pop
loope
retf
ror
sar
in
and
pop
pop
jns
in
push
in
jp
xor
ret
xchg
pop
(bad)
mov
jae
cmp
cmp
es
mov
jbe
mov
cs
sbb
xor
stos
fistp
(bad)
push
push
push
pop
mov
sahf
rol
fcmovne
xor
adc
call
and
mov
inc
lock
fst
pop
adc
aam
or
dec
out
push
cwde
mov
jns
fnstcw
jns
fistp
cld
mov
pop
jo
or
fs
retf
cs
pop
cmps
fistp
stos
add
lods
push
sbb
call
xchg
add
add
jecxz
lahf
mov
outs
pop
push
fldenv
test
pop
mov
sbb
mov
cdq
out
sbb
inc
push
(bad)
push
mov
push
inc
(bad)
push
imul
sub
xchg
loop
mov
pop
or
popa
(bad)
(bad)
into
leave
iret
cs
sub
ror
pop
xchg
and
dec
call
add
sbb
cwde
xchg
jns
lock
retf
xchg
fisub
adc
in
test
push
les
jb
sti
stos
std
stc
add
mov
jnp
gs
xor
mov
cld
jae
cmp
pop
or
mov
push
test
div
ins
cmp
fnstsw
sbb
dec
xor
movs
dec
lods
mov
jg
jbe
xchg
add
cmp
pop
pop
rcl
adc
push
pop
lahf
or
or
movs
inc
pop
leave
sbb
dec
sub
out
pop
aam
mov
(bad)
aam
ins
retf
mov
test
lahf
sub
rcr
hlt
leave
test
js
push
xchg
and
cwde
mov
lods
call
es
jge
lahf
or
cmp
add
xor
cmp
or
mov
test
bound
push
ret
(bad)
fwait
cmp
das
dec
jo
jg
fstp
xlat
int3
sub
sar
pop
lahf
inc
fidiv
mov
sbb
addr16
fild
mov
pop
div
test
imul
stc
iret
fwait
mov
test
or
stc
adc
add
(bad)
jg
push
shl
in
jle
retf
push
out
adc
or
xchg
or
dec
add
aaa
fs
aas
cld
(bad)
sub
xchg
or
(bad)
aas
pop
sub
test
mov
neg
out
add
cmp
sbb
push
pushf
es
cmp
inc
sbb
mov
jb
push
or
out
mov
lods
arpl
mov
push
int3
js
and
dec
mov
add
mov
jne
loop
popa
sbb
ret
dec
(bad)
pop
xor
enter
mov
cli
sar
xor
dec
daa
mov
lea
shl
and
out
jae
jp
aam
inc
fild
xor
push
sar
rdpmc
mov
ins
mov
jmp
mov
xor
or
fdivr
jnp
xor
sub
dec
sbb
test
call
bound
in
out
lahf
repnz
fstp
dec
ins
xchg
sbb
xlat
fcmovne
pop
jne
sub
inc
sub
outs
push
add
inc
jecxz
pop
jns
std
mov
ins
call
lock
add
lahf
jg
ret
push
cdq
pop
jmp
jge
int
mov
pop
test
xchg
daa
mov
int
cmp
inc
mov
sbb
sbb
(bad)
dec
ret
dec
dec
jl
scas
imul
xchg
xchg
test
pop
fsubr
nop
out
mov
dec
ja
mov
mov
fnstcw
leave
cli
mov
sahf
dec
lds
daa
mov
retf
retw
and
cmc
inc
inc
mov
lods
hlt
fwait
repz
xchg
daa
cdq
pop
jnp
push
sub
mov
mov
pop
dec
in
cmp
cwde
jg
cmp
sbb
sub
cdq
xchg
mov
dec
cld
add
push
and
push
sahf
mul
mov
sti
jmp
in
and
mov
dec
inc
mov
mov
or
popf
jmp
pop
xchg
inc
std
and
lock
push
or
mov
(bad)
ret
cmps
cmp
dec
je
jle
mov
fisttp
mov
add
clc
jp
in
cmp
dec
sbb
cmp
and
call
ret
add
sti
inc
lahf
subps
sub
out
scas
ret
add
dec
mov
cmp
inc
dec
dec
cmp
xor
cs
(bad)
xchg
pop
mov
(bad)
loop
jle
sahf
int
arpl
xchg
in
call
retf
fld
add
push
add
mov
(bad)
push
icebp
dec
xor
cdq
sub
sbb
xlat
fs
add
xchg
inc
pop
test
mov
fist
scas
pop
or
int3
nop
mov
mul
loope
shl
enter
or
mov
sbb
xchg
pop
cmp
stos
xor
clc
xchg
fwait
jnp
sahf
cmp
inc
(bad)
mov
cmp
xchg
push
aad
neg
jo
xchg
stos
or
push
imul
les
push
stc
movs
cmp
dec
mov
xchg
inc
clc
sub
imul
pop
loopne
add
mov
rcl
jnp
fimul
mov
dec
adc
push
fs
inc
stc
js
push
fwait
je
mov
imul
aaa
pop
imul
mov
and
ret
mov
sbb
cs
mov
or
sub
ds
(bad)
jp
mov
add
xchg
ja
data16
ja
jnp
addr16
mov
inc
mov
jecxz
dec
lock
push
inc
in
out
lods
fmulp
adc
shl
xchg
pop
cmp
or
jmp
pop
stc
test
or
in
mov
scas
adc
push
sub
jbe
fsub
or
xor
gs
shr
sbb
loopne
cmp
lods
cmp
jbe
cmp
inc
aaa
inc
xchg
sub
mov
int3
push
jb
xchg
data16
cmp
nop
sti
pop
dec
mov
in
mov
pop
pop
test
cli
shr
shr
inc
ds
or
jmp
push
loope
in
adc
and
push
retf
adc
jbe
inc
jge
or
mov
xchg
in
out
shr
and
add
fmul
test
outs
sub
push
and
(bad)
clc
sbb
add
push
out
(bad)
mov
mov
sbb
jmp
pop
inc
in
sahf
loope
cwde
retf
loope
pusha
aad
pop
pusha
std
out
mov
sub
jmpw
hlt
jmp
in
cmp
pop
mov
xor
pop
cmp
movs
jecxz
xor
ins
inc
rcr
repnz
sub
inc
mov
stc
and
and
loop
mov
(bad)
mov
fs
fst
test
xchg
and
mov
and
addr16
in
mov
retf
scas
sub
gs
not
push
or
mov
das
data16
jp
sbb
and
cmp
test
xchg
in
loope
popa
jge
cmp
bound
sti
clc
push
jp
jmp
mov
aad
in
jmp
std
cmp
adc
lea
cmps
pop
mov
outs
cli
imul
test
int
aas
dec
fisttp
mov
out
add
lods
jl
sub
sub
cmp
(bad)
sbb
push
mov
pusha
cmp
ins
jg
dec
mov
and
clc
add
in
and
(bad)
nop
(bad)
fidiv
fwait
(bad)
shl
mov
imul
add
mov
inc
mov
adc
nop
sbb
mov
jo
repz
(bad)
mov
xor
mov
clc
and
stc
test
xchg
and
mov
pop
and
clc
je
pop
std
imul
inc
jg
jne
imul
cmps
test
aam
out
aam
pop
xlat
lock
popf
popaw
lods
inc
jns
dec
cmp
movs
push
out
or
push
mov
dec
leave
mov
xlat
retf
push
popa
retf
test
dec
add
popf
les
push
jno
jb
sub
inc
push
and
mov
int
popf
ret
and
movs
icebp
fdiv
jmp
les
cmp
cmps
popa
mov
and
sti
ficomp
adc
dec
mov
inc
dec
push
shl
add
pop
xor
in
ins
popf
(bad)
addr16
dec
jns
js
imul
icebp
test
(bad)
jno
dec
loopne
jne
adc
sbb
sbb
adc
jno
fs
cmc
call
ror
cmp
push
add
lahf
mov
xchg
xor
and
inc
add
(bad)
mov
xor
pop
inc
aas
aas
add
pop
imul
xchg
jbe
scas
js
jmp
iret
fwait
lods
push
mov
in
sbb
pop
pushf
push
(bad)
mov
fbstp
jge
cwde
(bad)
sub
shl
stos
mov
ins
ins
repnz
cmp
mov
cmp
sub
push
lahf
dec
xor
popf
pop
mov
mov
add
(bad)
mov
mov
in
outs
or
xor
es
sbb
or
loopne
sub
mov
ins
adc
push
dec
cmps
pop
aam
add
stc
pop
add
movs
or
add
and
(bad)
xchg
sbb
adc
call
jns
mov
icebp
(bad)
cs
movs
fidiv
add
stos
into
cmps
addr16
in
adc
xor
mov
mov
popa
sub
into
iret
(bad)
in
add
add
movs
mov
aaa
mov
add
jge
dec
adc
mov
jne
dec
pop
ret
int
in
sbb
icebp
je
xchg
test
xor
xlat
mov
jbe
retf
lock
enter
dec
pop
sbb
add
sub
loop
(bad)
push
dec
dec
scas
or
loopne
or
jmp
fcom
jl
ret
jecxz
mov
add
xchg
mov
test
or
cmc
fwait
add
imul
dec
xor
push
jle
cmp
jnp
jo
or
pop
adc
push
in
test
mov
mov
jle
add
fnstcw
inc
xor
mov
aad
mov
fild
add
pop
std
inc
jge
sub
push
mov
jne
inc
cli
(bad)
cmp
pop
test
mov
adc
mov
adc
xchg
xor
lods
mov
mov
add
dec
aaa
xchg
adc
mov
fs
repnz
push
loopne
xchg
cmp
mov
mov
outs
ins
leave
dec
dec
pop
mov
popa
lock
jecxz
lods
push
jo
xor
ret
mov
jecxz
dec
mov
mov
inc
dec
ja
or
shl
pop
das
test
cmc
jp
shr
iret
pop
(bad)
jno
xchg
dec
iret
cmp
mov
and
cs
fld
test
inc
mov
cmc
push
repnz
sub
jecxz
inc
xor
push
sahf
test
push
jmp
fwait
push
mov
or
mov
mov
mov
dec
mov
ret
mov
or
adc
xchg
rcr
jg
pop
xchg
pusha
stos
imul
xchg
jb
int3
popf
jb
adc
inc
push
sbb
sahf
cs
(bad)
ja
inc
adc
push
jmp
inc
call
ror
xchg
pop
add
lock
out
or
in
and
cmps
cmp
lahf
test
int
add
cld
fwait
jne
shl
daa
repz
sub
sub
test
rol
push
push
xor
or
xchg
cmp
mov
ret
stos
popa
or
jp
xlat
adc
test
ja
xor
iret
sbb
rol
jecxz
xchg
dec
pop
les
fcom
scas
adc
mov
push
mov
aam
(bad)
pushf
adc
mov
repz
bound
pop
and
retf
jecxz
add
add
push
inc
fldcw
inc
lea
mov
nop
lods
lods
shl
mov
push
adc
out
pop
adc
out
jmp
outs
adc
xchg
push
pop
jo
fs
pop
push
aad
or
pop
into
pop
mov
retf
rcr
movs
mov
mov
dec
push
fnstsw
leave
dec
sub
mov
inc
xchg
call
(bad)
loopne
mov
pop
lock
(bad)
pop
jmp
add
push
add
mov
test
push
loope
adc
outs
movs
(bad)
pop
mov
popf
jnp
in
add
or
jno
mov
ins
cs
adc
xor
push
adc
mov
add
ja
xor
mov
xchg
adc
leave
mov
aad
repnz
stos
cld
imul
jl
and
ins
pusha
jo
inc
mov
jle
pop
fistp
mov
cmp
out
fisub
inc
ins
stos
xchg
jae
sub
xor
jmp
ss
add
repz
mov
ins
sub
test
xchg
lods
inc
aaa
pop
jns
mov
test
shr
stos
daa
inc
add
aam
fs
rcr
fist
outs
mov
stos
jl
clc
fiadd
mov
into
xchg
out
out
mov
or
jmp
cwde
out
addr16
lds
aas
(bad)
dec
add
xchg
sti
sub
push
push
push
pop
mov
cmc
or
ss
push
(bad)
out
(bad)
xlat
mov
stos
out
out
fldcw
jl
push
leave
pop
pop
jnp
pop
(bad)
ins
inc
and
xchg
sbb
aas
dec
pusha
sar
cwde
loopne
or
call
mov
push
repnz
push
dec
mov
loopne
sub
ret
and
sbb
stos
sbb
cmps
mov
in
xlat
add
push
mov
pop
mov
mov
mov
pop
leave
sub
pop
outs
jecxz
jb
out
ret
fbstp
popa
mov
sbb
mov
mov
mov
jns
pop
pop
fisubr
and
mov
dec
push
ins
je
pop
push
mov
fsub
add
test
jo
jg
cmp
(bad)
(bad)
bound
sti
add
sahf
enter
das
ds
push
andnps
clc
sub
clc
loopne
sbb
addr16
popf
jg
mov
ins
xor
pop
(bad)
popa
cwde
sub
sbb
(bad)
sar
fwait
jnp
gs
jl
push
ret
inc
lahf
(bad)
pusha
jg
dec
mov
push
sbb
and
cli
or
pop
cmps
sub
jle
mov
into
ret
mov
pushf
xor
mov
mov
repnz
rcr
mov
add
sbb
xor
sbb
addr16
pop
imul
xor
push
stos
test
bound
and
mov
mov
push
int3
inc
mov
mov
jbe
cmps
dec
add
pop
xor
imul
jge
popf
aaa
mov
loope
push
or
es
ds
shl
in
mov
dec
addr16
dec
into
gs
not
lock
mov
in
aaa
cmps
cmp
push
jle
sti
cmp
adc
jne
adc
adc
inc
xor
add
xchg
sahf
mov
call
movs
dec
adc
lods
xor
pop
retf
inc
jne
cmp
repz
frstor
mov
add
sbb
(bad)
fsubp
jg
scas
jae
sub
and
jl
add
ret
mov
rcl
xor
mov
or
pop
dec
sbb
cmp
jl
in
or
push
daa
scas
pop
mov
add
data16
mov
call
mov
addr16
cwde
add
adc
in
or
mov
xchg
or
aas
int3
cwde
hlt
and
add
add
ror
and
stc
ja
xchg
dec
push
jmp
in
in
gs
push
pop
cld
popf
mov
mov
mov
xchg
pop
xor
ja
mov
cmps
add
add
add
test
add
mov
in
dec
xchg
test
enter
jmp
cs
sar
dec
xchg
xlat
repz
bound
jmp
xchg
out
mov
retf
ret
inc
sub
ret
ds
pop
sub
shl
pop
test
out
scas
mov
push
sub
ins
xor
mov
and
nop
(bad)
arpl
push
lds
jge
gs
add
or
add
inc
mov
call
data16
sbb
test
jp
fisubr
enter
push
popa
xor
out
mov
mov
pop
rcr
dec
dec
in
rcl
push
add
push
stos
cs
mov
push
pop
mov
mov
add
fst
enter
sub
adc
push
lds
popa
dec
(bad)
(bad)
(bad)
fcmovbe
or
jle
push
hlt
or
outs
in
mov
xchg
sub
movs
pop
lods
sbb
call
dec
rol
loope
(bad)
outs
sti
je
lea
loope
iret
or
sbb
mov
out
add
adc
cmp
int
sbb
cmc
lock
inc
adc
outs
test
lock
mov
in
inc
inc
mov
dec
int3
test
jo
mov
shr
mov
add
adc
std
jle
jg
xor
arpl
xor
stos
jl
pop
sbb
popf
ret
fbstp
mov
mov
jmp
ror
gs
shl
dec
retf
mov
adc
jae
jns
or
fdivr
jb
aam
ficom
sbb
xchg
and
fist
jmp
scas
imul
movs
mov
push
fld
jnp
cmp
sub
out
xchg
retf
enter
shl
and
jns
xlat
mov
popa
imul
outs
xchg
xor
push
mov
inc
cmp
add
nop
push
iret
add
push
adc
jno
sub
fsub
xchg
daa
rcl
int3
xchg
jnp
push
pusha
jg
gs
xchg
mov
in
pop
sub
movs
pop
jo
and
pop
cld
leave
push
dec
xor
sbb
retf
cmps
aaa
int3
dec
call
xchg
mov
sub
mov
pop
lods
mov
push
cmp
pop
pop
daa
loopne
lea
aaa
sbb
mov
add
scas
inc
test
push
int3
xchg
test
bound
adc
mov
push
xor
add
ins
dec
push
xor
add
jnp
aas
push
and
or
mov
jmp
movs
scas
push
cmp
sbb
xlat
xor
dec
(bad)
fcomi
mov
xor
cmp
pop
push
push
out
out
cwde
test
adc
fwait
dec
push
in
xchg
add
add
inc
cmp
bound
push
enter
xor
fldenv
adc
mov
std
xchg
int
outs
mov
cdq
mov
mov
sub
and
mov
call
xchg
pop
out
test
mov
int3
je
shl
or
inc
mov
stos
inc
xchg
push
xchg
fisub
rcr
retf
xchg
dec
cmp
push
inc
dec
adc
push
cmp
pushf
jmp
and
dec
ja
pop
adc
mov
cli
jge
add
sbb
ret
das
nop
test
in
shl
jno
push
imul
jmp
les
push
int3
hlt
idiv
shl
mov
or
fmul
sub
repz
xchg
popf
into
pop
mov
pushf
arpl
push
nop
(bad)
pop
dec
out
leave
test
mov
ror
sbb
cmp
icebp
and
add
sbb
xor
mov
scas
test
xchg
mov
retf
pop
outs
repnz
adc
mov
fild
bound
ins
xor
sbb
cmc
jb
push
jmp
mov
sbb
scas
mov
(bad)
std
jnp
cmp
push
shl
cmp
loopne
adc
sahf
xchg
pusha
lds
inc
mov
es
dec
xor
fstp
or
out
es
sar
leave
xor
retf
sub
je
mov
and
or
mov
stos
lods
inc
sbb
scas
cmp
(bad)
mov
mov
cs
repnz
retf
xor
cmps
gs
test
add
in
sahf
and
(bad)
mov
mov
leave
jmp
mov
pop
cmp
mov
cmp
cmp
out
ins
call
popa
(bad)
adc
lahf
pop
hlt
xchg
dec
xchg
xor
and
cli
arpl
lods
cmps
pop
fwait
inc
cmc
jp
mov
xor
outs
aam
add
and
mov
mov
xor
(bad)
in
mov
mov
in
loope
xchg
dec
bnd
push
(bad)
test
out
cmps
movs
adc
ds
xor
mov
das
xor
or
vmread
push
in
or
xchg
mov
or
jge
pop
loopne
mov
mov
and
je
mov
sbb
jmp
or
leave
xlat
and
mov
sbb
fmul
in
xchg
mov
jge
add
sahf
sbb
ss
retf
xchg
pusha
pop
nop
xlat
add
push
xchg
ret
sub
sbb
sub
or
add
or
test
jl
test
push
mov
lods
retf
pop
mov
shr
test
push
mov
xor
mov
call
jmp
mov
fcomp
stc
dec
movs
jo
fs
mov
mov
sbb
adc
cmp
xchg
add
sub
dec
cmc
or
and
sar
shr
std
pop
ficomp
pop
sbb
ret
(bad)
dec
(bad)
call
fwait
loop
cdq
test
cmp
push
xchg
gs
push
je
cmp
inc
popf
push
pusha
call
pusha
inc
bound
sub
xor
mov
call
scas
cmps
bnd
sbb
fist
retf
int
jmp
and
repz
mov
pop
xchg
xor
retf
xlat
and
fwait
mov
lahf
stos
pop
or
or
sub
pop
hlt
jmp
add
rol
popf
pop
sbb
xchg
daa
mov
sahf
lods
add
cmp
(bad)
pop
sbb
cmp
ja
idiv
mov
test
lods
js
adc
xchg
rcl
pop
pop
or
jg
push
or
fnop
xchg
bound
fstp
ds
mov
and
inc
and
jl
test
test
sbb
or
loop
cmp
mov
pop
pusha
stc
outs
xchg
xchg
stos
sub
or
(bad)
push
add
or
fldenv
sub
add
push
sysexit
call
push
pusha
push
inc
pushf
popa
add
xor
ins
jb
(bad)
in
cli
rcr
dec
sbb
lods
push
lahf
pop
popf
push
repz
fmul
in
out
aam
jne
push
sub
movs
pop
aad
add
lahf
test
jecxz
cmp
sysret
add
gs
add
push
sub
dec
das
ret
cmp
ins
maskmovq
imul
mov
push
ins
loope
mov
(bad)
jns
(bad)
pop
call
and
dec
stos
ins
out
mov
cmp
fs
fs
stc
sub
dec
jle
xor
dec
jge
mul
dec
aad
enter
inc
fsubr
mov
cld
add
cdq
jns
sub
or
arpl
xchg
and
dec
fwait
movs
aaa
addr16
sti
pop
mov
or
jae
loopne
out
push
mov
or
add
jb
call
ss
outs
rol
cmps
pushf
setle
(bad)
sub
mov
paddw
pusha
push
cld
mov
mov
retf
push
add
fnstsw
add
in
enter
jle
fld
retf
ds
xchg
adc
push
xchg
fcomp
xlat
cwde
or
mov
out
lds
adc
push
dec
xchg
pop
ins
dec
outs
shl
mov
push
ins
cld
(bad)
fisubr
cmp
sar
movs
ret
pop
and
call
mov
add
pop
sub
inc
mov
sub
mov
out
or
push
loopne
cld
mov
pop
dec
ins
adc
fcomi
lods
jge
leave
ror
add
in
mov
aas
aaa
sub
inc
mov
hlt
mov
ret
xor
jg
cmps
stos
sub
push
pop
cmc
sbb
xor
out
mov
popa
fldenv
lock
mov
mov
push
popa
add
or
fadd
aas
mov
inc
test
add
fbstp
sub
sbb
add
sub
sti
push
stc
xchg
or
or
int3
sbb
push
dec
pop
les
mov
mov
lds
in
xchg
cmp
add
mov
rcl
add
pcmpgtw
lods
lds
sbb
outs
int3
jmp
test
fs
fmul
and
aaa
test
lock
repz
aam
pushf
cmc
adc
mov
shl
rcl
aas
movs
cmc
int
pushf
int3
outs
add
mov
test
or
into
addr16
cs
mov
mov
iret
test
add
sbb
sbb
sub
(bad)
cmps
sbb
sbb
and
cmc
fiadd
inc
mov
sub
jle
sub
mov
jl
push
or
aad
xchg
mul
pop
mul
movs
dec
fsubr
hlt
xchg
(bad)
jmp
cmp
push
sbb
jecxz
ds
js
fs
lods
add
mov
out
pop
pop
lahf
loope
cmp
call
dec
adc
pop
shr
sbb
fstp
icebp
or
mov
adc
cmc
jbe
inc
cmps
retf
sub
cmp
and
ret
imul
sbb
repnz
xchg
into
inc
sub
fidiv
mov
mov
call
cwde
lds
and
ror
inc
test
mov
push
mov
sahf
das
inc
push
sbb
fist
xor
je
push
js
(bad)
fwait
xchg
(bad)
stc
sbb
or
add
mov
outs
enter
xor
dec
pushf
inc
xor
inc
add
mov
pop
adc
cmp
call
ret
push
sub
xlat
mov
cs
popf
daa
shl
push
mov
push
repnz
test
add
xchg
lock
in
fbstp
ins
daa
add
ja
sbb
das
ss
jmp
ret
fstp
mov
cwde
lock
fnsave
inc
mov
shr
std
xor
aas
stos
mov
push
mov
loope
int3
ror
sbb
ss
repz
cli
inc
jnp
das
les
dec
addr16
mov
fisub
daa
pop
cmp
sub
dec
cmp
mov
push
ficom
outs
add
stos
js
and
push
cmp
jmp
cmp
cwde
mov
push
push
mov
push
cmp
mov
or
sbb
cmp
daa
lahf
cmp
mov
add
pop
jmp
dec
fs
cwde
jge
pop
out
out
daa
imul
pop
sbb
bound
call
sbb
js
cld
shl
(bad)
and
in
aaa
mov
xor
dec
(bad)
retf
(bad)
sub
es
sbb
vpcmpgtb
sbb
je
out
movs
stos
enter
cmp
xchg
in
push
xchg
push
jo
xor
retf
inc
outs
pop
fucom
push
jae
lock
mov
push
mov
adc
add
icebp
pop
ss
lods
adc
dec
jmp
cmp
and
mov
movs
test
ja
fstp
push
inc
sbb
inc
adc
or
enter
mov
hlt
or
lock
icebp
ret
xlat
cmp
dec
cli
jmp
jb
aad
mov
stos
dec
pop
rcl
rcl
imul
dec
js
cmc
xchg
jne
mov
sub
test
and
sahf
or
and
push
pop
je
mov
sbb
loopne
jge
xcrypt-ofb
cmps
scas
inc
in
aam
adc
lods
adc
mov
lods
scas
leave
pusha
fild
call
nop
mov
in
adc
and
adc
pop
jno
mov
out
aas
mov
fistp
xchg
mov
jo
sbb
cld
inc
pop
movs
cmp
loope
sub
sub
retf
fnstcw
les
in
out
jnp
lock
sub
push
inc
xor
xchg
ds
mov
(bad)
xchg
jo
aas
rcr
mov
mov
pop
popa
(bad)
and
pop
sbb
leave
das
jae
sub
in
test
sbb
dec
pop
mov
je
and
test
cmp
leave
stos
js
jmp
unpcklps
jp
sbb
pop
movs
into
lods
mov
push
(bad)
sbb
(bad)
sub
push
nop
inc
addr16
nop
test
jle
paddb
push
cwde
mov
dec
das
jb
aam
aas
adc
add
pop
pop
add
addr16
add
or
arpl
adc
test
ins
sbb
mov
mul
cmp
iret
xor
loop
xchg
icebp
or
sbb
or
cwde
cmp
lahf
lods
call
retf
sbb
loope
addr16
loop
jnp
cwde
pop
mov
popf
fild
(bad)
sbb
retf
std
mov
sar
push
and
xchg
fcom
je
stos
xchg
addr16
hlt
ja
call
les
rcr
push
pop
bound
dec
shl
leave
(bad)
or
jecxz
and
aaa
xchg
inc
nop
and
mov
std
xchg
mov
nop
cmps
ficom
cdq
stc
popa
sub
in
movs
mov
sar
(bad)
outs
jl
mov
pop
nop
loop
sub
push
jb
sub
and
repz
dec
push
push
sub
fsubr
jmp
dec
and
inc
cdq
lods
fist
fld1
out
push
dec
(bad)
cmp
(bad)
stos
xor
and
xor
pop
rcr
jmp
sub
inc
sub
fwait
jne
mov
imul
cmp
test
lods
mov
das
test
lods
imul
jmp
mov
fidiv
mov
lea
mov
jl
mov
xchg
add
pop
nop
sbb
push
call
test
mov
popa
sub
push
aad
bound
jbe
test
push
adc
xor
repz
xchg
mov
push
and
adc
ss
mov
(bad)
cmp
push
push
outs
(bad)
in
ror
into
aam
cmps
push
cmp
inc
rcl
cmp
icebp
scas
(bad)
fist
or
mov
bound
cmps
test
dec
imul
pop
sti
xchg
xor
cli
sahf
jb
fcomp
hlt
dec
xchg
push
cmp
in
xchg
(bad)
sub
dec
mov
push
adc
jge
lods
push
in
push
retf
mov
jl
outs
dec
nop
sub
retf
adc
pop
repnz
mov
je
adc
jns
mov
sub
mov
iret
xchg
aas
push
ds
arpl
cmps
adc
arpl
les
ins
cmp
jl
call
stos
inc
jne
ins
jmp
or
mov
aaa
arpl
out
pop
call
je
pop
or
adc
dec
xchg
or
lods
loop
adc
push
jge
sub
push
or
jg
pop
out
push
shl
jecxz
or
cwde
div
cld
mov
outs
fld
mov
test
(bad)
out
fsub
inc
mov
test
in
mov
dec
pop
and
mov
pop
mov
add
cmp
and
ret
inc
pusha
push
(bad)
scas
jnp
adc
repnz
je
xchg
std
(bad)
(bad)
not
xchg
pop
xchg
sub
dec
mov
push
or
sbb
or
jnp
enter
popa
adc
cmp
push
or
or
lock
or
into
jge
mov
sbb
xlat
dec
fld
call
lods
pop
cmc
and
movs
mov
rcr
xchg
fld
push
add
cmp
push
mov
std
dec
fwait
sub
xchg
bnd
in
ss
loopne
pop
xchg
shl
jmp
mov
mov
dec
aam
imul
nop
xchg
jo
jmp
xor
outs
ins
test
mov
push
inc
inc
popa
sub
adc
les
sub
cli
stc
mov
jmp
ja
sbb
cli
add
sub
cmp
popa
jae
cwde
int3
scas
xchg
(bad)
dec
ficomp
(bad)
leave
add
mov
stos
sub
cmp
fsubr
mov
addr16
in
sub
mov
pop
mov
sub
ret
jb
inc
add
aam
mov
or
inc
push
xor
sbb
inc
sbb
(bad)
fcompp
cmps
mov
inc
sbb
push
int3
fadd
or
aas
mov
dec
pusha
imul
sub
lds
bound
lds
in
mov
sbb
sahf
je
leave
adc
xchg
out
pop
mov
adc
ror
add
leave
adc
inc
mov
gs
add
mov
cmp
stos
popf
mov
push
mov
lods
(bad)
mov
(bad)
loop
scas
push
adc
enter
enter
ror
cdq
xchg
movs
mov
ret
sub
ds
pop
inc
out
in
jge
mov
or
mov
retf
jmp
mov
outs
fstp
addr16
mov
adc
xchg
pop
pop
ins
or
xor
and
xchg
arpl
shr
mov
jmp
fistp
vpunpckhbw
jno
clc
pushf
repz
add
inc
cmps
pop
and
cli
mov
out
pop
out
pop
push
icebp
mov
adc
stc
dec
js
sti
mov
jo
mov
dec
add
mov
jmp
cld
mov
(bad)
aad
mov
hlt
pop
cmp
mov
iret
xor
jmp
dec
mov
sub
mov
mov
jo
lods
es
xchg
fnstenv
test
shr
and
jle
test
dec
jl
retf
call
imul
and
jmp
in
xchg
std
xor
ss
xor
into
repz
je
mov
or
push
adc
mov
sti
cmp
sar
dec
mov
xchg
jbe
not
scas
mov
jmp
test
push
mov
adc
dec
xor
mov
cmp
sbb
stos
bound
mov
outs
or
out
cmc
aas
imul
in
push
jmp
in
pop
dec
sub
lea
or
je
mov
push
add
loope
out
jge
call
shr
pop
push
xor
and
aaa
mov
lahf
gs
bound
loope
ja
pop
in
xlat
imul
mov
jnp
ret
iret
call
add
mov
jmp
lea
push
push
sub
xor
or
in
cmp
or
fisttp
sub
pop
cld
in
mov
lods
out
xchg
pop
push
add
adc
mov
(bad)
leave
jmp
in
fstp
jbe
mov
mov
(bad)
sub
retf
push
jmp
ins
mov
ss
sbb
leave
push
ins
loopne
inc
dec
loope
fisubr
jb
and
icebp
icebp
pop
mov
fisub
xchg
xchg
leave
dec
leave
mov
mov
mov
dec
or
or
add
push
out
(bad)
lahf
sbb
add
jg
xchg
call
dec
fdivr
cmp
jmpw
js
xor
mov
out
pop
xchg
inc
stc
pop
push
mov
push
inc
sub
jae
out
push
test
clc
add
enter
push
out
cmp
and
stc
push
push
jb
fs
pushf
in
neg
out
sub
lods
out
cld
jo
push
out
pop
xchg
stc
add
imul
neg
shr
jmp
sbb
shl
inc
ins
arpl
pop
jb
jnp
idiv
sub
dec
shr
rol
push
test
fs
out
jb
out
inc
jmp
adc
push
ror
ds
jns
mov
inc
in
jmp
mov
xrelease
nop
mov
jbe
repz
xchg
add
hlt
mov
or
rol
lds
mov
cdq
fnstcw
div
adc
loopne
sbb
das
std
mov
(bad)
mov
cmp
fwait
scas
scas
xchg
inc
sti
es
mov
push
ds
retf
fbld
addr16
pop
jno
jno
and
call
stc
sub
sbb
inc
jecxz
pop
dec
dec
outs
push
pushf
es
popf
ret
pop
mov
popf
(bad)
xor
jl
jg
adc
add
imul
lods
lahf
mov
outs
fisubr
out
outs
addr16
aaa
mov
(bad)
fadd
cmc
xor
sbb
(bad)
xchg
movs
retf
mov
out
lods
je
xor
or
icebp
cdq
adc
xor
cmp
cld
mov
mov
aas
test
aam
shl
mov
leave
and
mov
inc
(bad)
jmp
push
push
push
aas
jae
and
stos
pop
outs
mov
sbb
add
psubsw
pop
jno
ror
cli
outs
sbb
(bad)
adc
outs
neg
or
int3
xor
inc
pop
adc
cld
xchg
test
jns
or
loope
mov
shr
jp
mov
popa
add
add
and
movs
(bad)
div
sbb
xor
cli
(bad)
int
dec
mov
aad
and
mov
les
mov
into
dec
mov
mov
ds
xchg
call
ret
add
mov
mov
add
div
retf
pop
aad
cld
leave
jecxz
push
sbb
not
outs
adc
and
inc
cli
cmp
sbb
xchg
jnp
aaa
scas
cli
cdq
mov
cmp
fild
xchg
mov
cmp
mov
or
or
pusha
sub
dec
mov
add
mov
push
call
dec
dec
pop
fdivr
sbb
and
dec
push
cli
(bad)
jb
js
out
popa
mov
faddp
adc
jbe
test
jae
or
xlat
rcl
push
sub
ror
push
dec
ret
mov
inc
fwait
call
rol
mov
jae
inc
shl
test
jmp
out
pop
es
push
adc
add
aaa
inc
scas
mov
cmp
cmp
and
into
dec
(bad)
cdq
imul
repz
inc
pop
dec
jns
cld
cmp
loop
mov
cli
imul
add
cmp
and
in
es
jle
ins
jmp
jne
repz
xchg
fld
xor
sbb
int
arpl
adc
out
add
sbb
mov
pop
pop
adc
stos
daa
xor
and
adc
cmp
jmp
aad
push
or
js
in
test
mov
popf
out
arpl
mov
cmp
sub
aam
mov
or
xchg
movs
retf
inc
mov
and
xor
add
sbb
fsubr
mov
dec
arpl
cmp
scas
xor
jno
pop
xchg
js
test
cmp
aam
mov
xor
xor
stos
daa
lea
adc
paddsw
push
xor
adc
add
pop
jb
xchg
sbb
arpl
dec
add
icebp
out
sahf
xor
retf
jge
data16
fwait
mov
pop
daa
stos
adc
sbb
imul
push
(bad)
rcr
jle
imul
call
push
add
add
add
jne
ins
jmp
pop
sti
mov
jmp
or
dec
out
or
mov
ret
(bad)
sub
mov
mov
push
jmp
add
aaa
call
ins
lods
clc
aaa
cwde
arpl
scas
jecxz
and
jno
xchg
push
jns
push
or
test
cmp
call
push
mov
inc
mov
add
pushf
cmps
aad
add
fdivr
retf
sbb
push
xchg
(bad)
mov
das
stc
pop
push
daa
and
(bad)
jmp
dec
call
(bad)
cmp
mov
in
test
repz
and
stos
add
push
ror
cmp
or
mov
cs
mov
mov
adc
xchg
fstp
enter
inc
pop
xchg
jle
push
xchg
sahf
ret
frstor
bnd
dec
lock
push
daa
clc
(bad)
push
push
rcl
cmp
sub
cmc
mov
in
leave
into
jns
push
xchg
jnp
xor
mov
imul
inc
dec
lock
jns
mov
rcr
push
test
iret
and
fsub
cmp
sbb
sub
fcom
aam
mov
or
fisubr
rcl
or
mov
bound
fs
inc
out
sub
test
cli
not
ficomp
push
push
add
add
add
push
jne
jnp
imul
mov
ror
mov
add
ror
(bad)
cs
test
or
mov
adc
pop
clc
(bad)
out
inc
xchg
dec
loope
test
push
mov
xor
cli
and
hlt
cmc
adc
mov
repz
pop
(bad)
icebp
cld
and
push
or
push
jae
add
arpl
lea
cmp
push
inc
dec
mov
jmp
adc
aaa
iret
in
and
pop
pop
jmp
push
gs
inc
jge
gs
fmul
out
(bad)
or
(bad)
ins
invd
sbb
jnp
in
add
cmp
adc
sub
sbb
xor
out
or
add
cld
xchg
sbb
mov
repz
int3
fstp
rcl
mov
std
pushf
icebp
mov
jmp
popa
adc
in
repnz
push
mov
outs
nop
repz
cmp
pushf
mov
les
xor
mov
mov
leave
jmp
and
int3
xor
dec
push
sbb
(bad)
mov
dec
pop
add
push
or
add
mov
and
aaa
inc
lea
in
sub
das
test
mov
jmp
mov
jg
mov
mov
iret
or
cmp
mov
sub
cmp
setae
fld
mov
sbb
or
aas
daa
mov
ja
lods
cs
das
leave
xor
loopne
mov
and
jmp
rcl
push
dec
into
popa
adc
add
push
lahf
call
sub
imul
dec
xor
int
dec
and
sti
js
adc
and
push
scas
add
dec
retf
repnz
inc
aad
loope
outs
mov
mov
mov
pop
push
adc
add
cld
xchg
std
mov
mov
cdq
into
inc
sub
call
mov
ins
adc
sti
jle
scas
ins
cs
into
pop
mov
loope
fld
inc
pop
es
addr16
mov
inc
jecxz
cmps
cmp
mov
dec
int
mov
repz
adc
outs
into
sar
jae
inc
adc
cmps
les
pop
test
int
(bad)
cmp
mov
cwde
(bad)
int
test
mov
into
retf
icebp
and
clc
sub
and
jbe
xchg
leave
xchg
gs
sub
dec
lahf
cmp
sbb
mov
movs
inc
jne
jl
sahf
aaa
scas
pop
jge
fdivr
xor
xor
ss
in
cmp
fst
dec
out
and
dec
push
xor
ficom
rcl
frstor
xor
push
lock
shl
adc
in
and
es
xor
or
jne
sbb
xor
sbb
push
add
add
or
xchg
push
push
sub
push
cmp
sbb
out
mov
push
aaa
dec
pop
enter
out
xor
xchg
dec
imul
push
sahf
and
sar
jmp
jecxz
int3
and
loopne
imul
dec
call
scas
adc
(bad)
pop
or
mov
cmps
call
test
hlt
inc
call
add
lock
jae
retf
sbb
push
icebp
xor
sbb
das
xchg
enter
pop
xor
aaa
adc
mov
sbb
call
(bad)
xlat
lock
xchg
push
jecxz
and
push
add
inc
das
ret
mov
jae
retf
xchg
push
or
sbb
mov
je
jno
loopne
movs
add
mov
cmp
shl
clc
and
aam
add
xchg
addr16
repnz
movs
pop
add
adc
cmp
mov
enter
and
pop
sbb
pop
stos
mov
inc
sbb
cld
lock
xchg
cmp
sti
ror
mov
cwde
pop
lahf
lock
or
mov
cmp
inc
(bad)
adc
loopne
setnp
and
mov
rcr
scas
test
push
cld
sub
inc
les
cmp
pop
jecxz
repnz
jp
int
pop
ins
pushf
(bad)
adc
test
loopne
rcr
in
jo
sub
imul
xchg
aad
js
cmp
test
mov
sbb
sbb
mov
dec
sbb
push
arpl
out
dec
cmp
pop
popf
sbb
xor
xchg
add
mov
nop
sub
out
int3
ja
jmp
out
(bad)
popf
sub
push
ror
pop
mov
sub
or
cwde
scas
mov
into
mov
sbb
sahf
mov
dec
je
cmc
add
in
or
xor
adc
or
jmp
pop
push
mov
leave
adc
in
test
stos
jg
dec
xor
push
bndstx
dec
das
out
movs
ds
scas
cmps
mov
stos
scas
pop
cld
stos
add
jbe
add
push
rcr
sbb
cmp
sahf
(bad)
rcr
xchg
mov
add
ja
and
mov
and
mov
sbb
cmp
xchg
shr
mov
fsubr
mul
in
iret
mov
pop
mov
aad
push
loopne
mov
mov
outs
outs
mov
push
adc
nop
je
lods
xchg
and
adc
jp
jecxz
pop
add
mov
test
test
cmps
leave
lock
rcr
fimul
inc
cmp
pushf
sbb
mov
aaa
enter
imul
cmp
fimul
inc
push
arpl
je
nop
out
lods
in
jo
aad
pop
lods
push
inc
les
xlat
loopne
xchg
ja
int
pop
int
(bad)
cmp
mov
xlat
push
(bad)
jnp
inc
les
cmc
jp
stos
and
cmc
adc
push
(bad)
fnsave
js
mov
call
fidivr
jns
aas
popf
(bad)
mov
test
jnp
test
fdivr
mov
and
push
pop
addr16
push
xchg
lds
int
cmp
call
mov
lds
int3
and
aaa
add
mov
mov
aas
ja
cs
add
fiadd
mov
rcr
pop
iret
cmp
fsubr
jmp
hlt
mov
mov
push
cmp
push
mov
mov
cwde
adc
test
cmp
lods
cmp
mov
(bad)
into
mov
cs
and
inc
jle
or
adc
mov
push
pop
ds
xchg
jo
cmp
xlat
das
ss
mov
sbb
push
push
push
push
pop
(bad)
popa
xchg
ss
ins
sub
cmp
fisub
cmp
test
popa
dec
jb
retf
mov
loope
loope
push
cmp
sbb
cmp
xchg
in
inc
cmps
adc
inc
or
sbb
dec
stos
and
jmp
add
sub
les
test
xchg
repnz
and
or
xchg
jne
pop
sub
xchg
and
scas
jo
sar
pop
inc
mov
sbb
fnstsw
mov
adc
mul
xchg
sbb
push
mov
inc
rcr
test
inc
movs
push
pop
stc
or
imul
bound
add
cmp
add
add
push
add
sbb
add
cmp
jge
test
sub
mov
push
imul
mov
push
mov
pmulhw
add
cwde
push
xor
test
inc
sbb
dec
sbb
scas
add
out
add
mov
int
add
cs
sbb
mov
bound
or
out
mov
xchg
xchg
out
sub
aad
rcl
outs
data16
dec
cwde
pushf
dec
and
cmp
sub
pop
adc
dec
adc
pop
cmp
sub
call
or
ret
aad
shl
pop
push
sub
sbb
rcr
sbb
jo
mov
lock
pusha
aaa
cs
add
and
inc
sbb
pop
pop
test
push
mov
mov
test
cmp
je
mov
sahf
shl
dec
sysexit
jmp
imul
repz
aad
mov
(bad)
cmp
rcl
cmp
and
imul
cmps
in
pop
sti
or
fnsave
rcl
cmp
xor
imul
fidiv
out
in
mov
(bad)
test
into
cmp
lahf
cs
dec
xchg
sub
or
fnstsw
(bad)
jo
add
pop
push
mov
push
jecxz
xor
mov
adc
lds
mov
bound
xchg
push
test
call
push
loope
mov
xchg
stos
sub
movs
adc
mov
adc
xchg
dec
mov
push
loope
ja
fldln2
jecxz
sbb
cmps
mov
xor
pushf
xor
iret
adc
xchg
es
cmps
xchg
add
and
mov
adc
loop
(bad)
call
cmp
scas
push
ror
mov
fdivr
neg
popa
jecxz
std
push
cld
cmp
xchg
pop
xor
ret
or
xor
push
jo
xlat
and
cmps
push
stos
inc
pop
gs
jle
sbb
fbld
stos
inc
fdiv
adc
mov
fisubr
dec
stos
stos
xor
scas
or
or
call
dec
lock
jne
mov
aam
mov
scas
inc
ror
(bad)
out
ins
mov
push
sbb
(bad)
icebp
xchg
test
inc
(bad)
call
gs
xchg
hlt
adc
xchg
(bad)
pop
cmps
add
mov
push
pop
sub
push
mov
sbb
test
imul
or
jo
push
call
xchg
xchg
call
sar
sbb
enter
xrelease
inc
in
in
out
fistp
out
ret
and
mov
ins
jp
or
pop
mov
and
xor
icebp
sub
mov
ss
jl
test
adc
dec
push
int3
push
xchg
gs
pushf
jb
test
jb
mov
pop
movs
adc
mov
fadd
mov
pop
repnz
pop
push
adc
ds
movs
mov
out
xchg
inc
cmps
daa
cld
(bad)
dec
les
loop
jmp
dec
stos
scas
or
cmp
cmp
xor
mov
mov
cwde
inc
push
movs
jo
inc
xor
fwait
sbb
and
cmp
pop
mov
fdiv
push
push
mov
pop
jne
xor
adc
and
test
jb
jns
addr16
sub
xor
sahf
cmc
pop
jmp
cmp
mov
jp
xchg
call
stos
mov
popf
and
loope
cmp
mov
ins
cs
jmp
sub
or
sbb
mov
add
sbb
add
jle
add
inc
call
lea
in
rcr
jg
xlat
push
(bad)
mov
nop
mov
or
fisttp
jne
imul
leave
cld
cmp
nop
and
jle
dec
icebp
ds
pop
movs
jmp
xor
inc
adc
out
mov
test
mov
cdq
int
mov
jle
jmp
ja
pushf
sbb
(bad)
xchg
jno
inc
cwde
lahf
aad
dec
mov
pop
mov
mov
rcr
aaa
rcl
sub
mov
stos
data16
adc
mov
div
lods
fnstenv
das
xor
dec
out
add
sti
cmp
cs
xor
ficom
pop
xor
pop
shr
mov
ret
sub
cmp
scas
hlt
mov
xchg
push
mov
call
mov
dec
cwde
or
push
arpl
xor
je
mov
and
test
scas
or
enter
adc
add
movs
repz
cmc
ret
test
inc
lods
sbb
out
and
ss
(bad)
and
inc
and
or
cld
mov
cli
and
fs
pop
ins
cwde
loop
mov
nop
adc
mov
push
adc
enter
jbe
imul
fsubr
push
xchg
push
jne
jmp
mov
fwait
pop
mov
outs
fmul
ins
enter
call
fstp
test
inc
and
(bad)
or
loop
mov
mov
dec
push
test
xor
jmp
pushf
aaa
mov
call
or
xchg
sbb
(bad)
and
lock
cmp
scas
cwde
das
rol
lahf
jbe
xor
and
sahf
loop
adc
push
mov
sbb
pop
jecxz
and
mov
sub
cdq
xor
xor
xchg
jnp
in
lods
mov
scas
ret
ror
popa
dec
cmp
out
lods
inc
mov
jno
ror
push
enter
pop
nop
mov
push
leave
xchg
push
les
cmp
(bad)
pop
pop
fmul
mov
mov
inc
pop
mov
(bad)
shl
ja
sub
mov
cmp
jns
push
lods
mov
mov
inc
xor
stc
fwait
cmp
icebp
call
cmp
ins
in
ds
shl
adc
cmc
xlat
sbb
leave
mov
cmp
bound
call
iret
cmp
hlt
xchg
cmp
imul
add
pop
mov
mov
movs
clc
or
scas
xor
add
push
mov
jns
outs
loope
mov
sar
sbb
(bad)
fisubr
dec
std
(bad)
in
out
cmps
in
mov
ins
dec
xchg
and
xor
jns
jge
iret
inc
adc
repz
ja
fwait
or
out
imul
repz
cmps
ret
pop
outs
sub
sbb
(bad)
in
mov
push
inc
fwait
aam
je
xor
pop
jle
fisttp
mov
adc
in
push
repz
and
fidivr
xor
jmp
shr
add
mov
mov
jb
add
push
mov
xchg
mov
or
test
or
pop
mov
les
push
fcom
sub
jmp
cmp
mov
lods
push
test
cmp
dec
arpl
gs
fisubr
add
cmp
or
push
pop
add
rcr
int
cmc
mov
sbb
jg
mov
popf
(bad)
fs
pop
push
and
stc
data16
jmp
mov
push
fs
retf
outs
or
mov
mov
call
aam
mov
iret
pop
mov
retf
test
hlt
cmp
xchg
rol
dec
bsf
adc
jge
adc
adc
std
lahf
and
inc
push
not
call
sub
push
int3
xchg
loop
xor
sub
scas
(bad)
mov
and
mov
pop
sbb
rol
movs
pop
xor
push
cmp
add
mov
cmp
inc
lahf
cmp
daa
xchg
mov
fcomip
lods
mov
inc
jmp
push
push
jae
gs
scas
jle
jo
push
inc
movs
push
sub
fdivr
(bad)
push
cmp
fwait
mov
out
daa
das
sbb
mov
(bad)
cld
pop
mov
pop
fs
push
lea
cmc
pop
mov
aas
mov
mov
popf
jp
jge
adc
and
lods
pop
out
jb
sar
daa
icebp
jmp
inc
cdq
and
nop
xchg
(bad)
out
cs
pushf
cdq
test
or
ret
ds
aam
jnp
stos
sbb
retf
popa
jp
cwde
repz
(bad)
dec
dec
aad
je
inc
fmulp
jl
call
arpl
sub
push
(bad)
hlt
fisub
mov
sbb
cmc
sub
pop
cwde
add
lds
dec
mov
add
adc
xor
pushf
sbb
mov
jp
push
stos
enter
inc
adc
(bad)
ror
aas
push
and
sub
ss
mov
fwait
shl
inc
je
xchg
test
sub
add
cs
xor
leave
cmps
sub
adc
inc
imul
pop
add
mov
adc
push
mov
movs
sti
or
inc
dec
mov
xchg
mov
mov
cmp
sti
sub
loopne
pop
xchg
fsubr
mov
std
or
mov
xchg
inc
jmp
dec
pushf
mov
fdiv
sub
jge
jae
(bad)
sub
inc
nop
lea
adc
dec
cmps
pop
mov
ret
lea
stc
inc
loope
data16
fs
test
and
jl
repnz
leave
cmp
or
and
out
inc
add
and
mov
arpl
gs
cmps
mov
dec
repnz
repz
and
in
or
repnz
mov
and
out
fstp
es
mov
nop
inc
dec
sti
add
xchg
jmp
xor
push
sub
(bad)
enter
inc
arpl
pop
cdq
arpl
inc
dec
dec
pop
fisttp
dec
ja
outs
loopne
outs
jg
cmp
stos
mov
rcl
mov
js
dec
xchg
push
add
jge
fs
xchg
xor
pop
aam
push
mov
lods
dec
fadd
sub
jb
call
dec
mov
adc
hlt
popf
ret
cmp
dec
cmp
dec
fmul
mov
test
push
imul
jg
sar
and
sbb
call
or
mov
jno
or
inc
stos
in
cmp
retf
adc
inc
lods
push
jbe
fld
loop
imul
aas
sbb
or
adc
push
mov
mov
push
hlt
pop
bnd
fld
dec
loope
and
shr
or
mov
cmps
adc
shl
les
and
fs
arpl
pop
cdq
xor
stos
xchg
dec
leave
loope
das
xchg
mov
js
xchg
jnp
jb
lgs
scas
cs
mov
mov
mov
mov
test
inc
shl
(bad)
xchg
push
retf
mov
(bad)
repnz
(bad)
hlt
and
out
(bad)
scas
stos
lea
sbb
pop
mov
outs
sub
jecxz
dec
sub
mov
lock
out
dec
xchg
dec
out
push
and
push
lods
inc
dec
popf
mov
fdivr
mov
jge
cmp
sub
ja
loopne
jo
ins
enter
fmulp
jo
lds
mov
jle
aas
xor
jb
cmp
pop
cmp
xor
mov
xlat
popa
mov
js
ret
xor
jge
aaa
into
mov
ja
add
dec
mov
out
sub
push
mov
mov
push
test
inc
mov
loopne
je
ins
aad
stos
sub
add
push
retf
lock
jge
sub
xchg
loopne
push
enter
(bad)
out
shr
inc
push
mov
imul
xor
sbb
fucomp
sar
or
ret
lock
pop
pop
jnp
sbb
mov
push
call
xchg
dec
addr16
out
fidivr
call
mov
(bad)
int3
push
(bad)
push
push
out
jnp
or
(bad)
aas
test
mov
int3
cmp
loopne
imul
fimul
imul
pop
out
pop
data16
lods
out
out
xor
xchg
cmps
pop
jmp
(bad)
adc
aas
les
shl
faddp
push
adc
(bad)
(bad)
cmp
popaw
clc
popf
mov
mov
lock
pusha
and
je
(bad)
inc
push
pop
inc
out
cdq
xor
and
lea
jae
mov
pusha
fidiv
ds
xchg
add
retf
(bad)
aas
cmc
sub
cmp
lahf
lahf
in
cmp
cwde
sbb
xor
and
out
mov
aas
test
adc
or
inc
add
dec
mov
pop
fwait
daa
add
add
push
add
mov
add
imul
jnp
push
push
sub
retf
and
push
rcr
mov
mov
add
push
bound
pusha
mov
ds
xchg
cli
mov
cmps
out
aam
dec
ja
ret
sbb
mov
xchg
in
pushf
outs
mov
cwde
lea
fidivr
sbb
push
js
inc
gs
(bad)
rol
(bad)
sub
imul
lea
mul
xor
es
xchg
mov
outs
fcmovnu
jnp
ret
cs
and
inc
inc
scas
loopne
push
lea
rcr
in
push
and
test
push
ds
dec
jecxz
das
jl
jmp
push
mov
mov
es
inc
leave
jmp
fnsave
xor
cmp
movs
mov
movs
retf
leave
jmp
jl
dec
dec
fst
call
jne
push
jmp
mov
(bad)
outs
sahf
fadd
movs
je
ret
mov
jp
or
jns
xchg
pop
adc
in
cmps
out
outs
rcl
call
(bad)
xor
daa
mov
push
scas
fs
leave
mov
xor
dec
sub
adc
jl
lds
ins
mov
iret
inc
jne
repnz
mov
inc
fsub
xchg
mov
dec
iret
cmp
push
cmc
ret
lods
jmp
push
pop
push
loopne
loope
xchg
data16
jle
(bad)
jg
rcr
in
xor
sub
ins
or
mov
(bad)
je
repnz
frstor
jmp
push
or
rdtsc
ds
sbb
jmp
push
cmp
xor
cmp
pop
std
neg
push
cli
dec
dec
pushf
cli
jae
mov
daa
repz
bsr
data16
add
sbb
nop
das
dec
dec
dec
inc
inc
cmp
daa
add
jg
movaps
cmps
jge
xchg
in
bound
out
repz
push
adc
cmp
outs
mov
rcl
in
push
jmp
enter
retf
arpl
test
push
retf
inc
sahf
popa
or
pop
jo
push
mov
cmc
pop
aaa
inc
lods
in
jmp
in
sbb
(bad)
mov
xor
cmp
push
rol
add
inc
jns
repz
mov
xchg
stos
push
jge
sahf
mov
lods
adc
or
lods
daa
cmp
jmp
pop
xchg
sbb
pop
call
pusha
mov
jge
pop
pop
ret
push
test
jecxz
out
adc
xor
or
inc
mov
mov
dec
and
movs
or
cmc
shl
adc
int
das
in
icebp
not
jae
and
imul
push
pop
popa
mov
xor
(bad)
xchg
xchg
jle
mov
mov
pop
rcl
sub
lds
or
jg
fiadd
push
jg
sbb
mov
and
dec
icebp
mov
jbe
leave
cmp
push
int3
rcr
xchg
and
(bad)
dec
mov
adc
gs
push
stos
addr16
imul
fs
fiadd
inc
fstp
les
add
mov
test
pushf
stc
or
xchg
shr
stos
or
push
aam
arpl
jb
stos
xchg
add
(bad)
fmul
idiv
xor
mov
mov
dec
push
xchg
add
push
in
ret
popa
stos
ds
and
mov
call
fs
jmp
jo
dec
xchg
inc
cdq
dec
outs
mov
in
jno
jle
popa
sbb
std
push
xchg
aas
test
and
pusha
(bad)
call
dec
xchg
push
sub
rcl
add
push
arpl
xor
push
push
sbb
fstp
push
in
aad
jo
call
int3
push
lahf
ins
daa
add
(bad)
jo
test
fisttp
ret
jmp
mov
(bad)
leave
cmp
and
call
jbe
bound
xchg
out
(bad)
loope
mov
sti
xchg
lea
xchg
das
pop
push
cdq
sahf
xchg
in
out
jle
adc
add
nop
and
iret
outs
jle
aas
cli
or
imul
push
(bad)
ins
jno
mov
shr
ficomp
imul
or
cdq
adc
lock
ficomp
jp
jp
xchg
sbb
sub
sbb
inc
pop
adc
adc
test
mov
mov
cdq
mov
stc
pushf
mov
out
pop
enter
add
sbb
dec
adc
stos
cs
fiadd
lahf
mov
out
mov
aaa
mov
jmp
jmp
inc
sbb
mov
dec
cld
bound
dec
sbb
cmp
jmp
adc
sbb
rol
(bad)
and
shl
dec
jae
aam
out
pop
jmp
(bad)
outs
cmp
push
dec
int
add
sub
xchg
and
mov
retf
mov
dec
xchg
aaa
scas
inc
test
popf
mov
imul
pop
mov
adc
add
pop
aas
pop
(bad)
and
(bad)
inc
jnp
xchg
fwait
xacquire
ror
adc
mov
inc
loope
dec
sub
leave
pop
mov
add
sti
add
es
loopne
push
xchg
jecxz
push
sahf
mov
imul
inc
idiv
call
jmp
in
dec
aas
ja
test
stc
jecxz
outs
(bad)
jae
inc
xchg
int
sub
xor
cld
dec
inc
xor
popf
cli
sti
sahf
xor
cmp
and
ror
jmp
stc
cmps
sub
ret
out
(bad)
imul
lahf
mov
push
ins
les
add
jno
jb
mov
popa
adc
aad
xor
cmp
jnp
cmp
sub
popf
je
rol
out
pop
mov
test
xchg
cdq
rcl
jp
sbb
pop
pop
fidiv
sub
mov
daa
in
jge
pop
xchg
bound
std
pop
push
stc
rol
call
sbb
add
add
add
stos
in
adc
xchg
fwait
mov
jmp
sbb
inc
rcr
or
jmp
add
clc
xor
in
inc
pushw
in
sbb
pusha
jo
ins
in
xchg
popf
test
dec
int3
adc
push
xor
les
sti
push
xor
fldcw
xor
cwde
mov
add
jnp
jp
test
mov
test
pop
fwait
xlat
movs
outs
xchg
dec
in
pop
sahf
dec
or
ja
nop
stc
adc
push
mov
mov
xor
test
repz
jmp
fild
arpl
or
out
xchg
add
push
xchg
mov
arpl
rol
add
sti
cmps
jge
scas
jo
imul
xlat
or
or
aaa
jg
jecxz
repz
xor
scas
mov
and
jo
push
cli
pop
cmp
or
mov
scas
lds
cmp
cdq
add
inc
pop
push
iret
retf
sub
push
mov
test
shr
dec
mov
dec
stc
xchg
jae
test
mov
and
sub
fsub
xor
pop
jmp
xor
pop
push
cmc
pop
or
aam
pop
push
ss
iret
or
cli
sbb
mov
jmp
push
jp
imul
push
arpl
adc
cwde
fsubr
pusha
stos
xchg
sbb
jbe
(bad)
sti
xchg
add
add
sahf
cmp
cld
xchg
clc
retf
xchg
cmps
pusha
(bad)
xchg
and
dec
call
mov
push
or
lock
retf
xlat
repz
mov
dec
sbb
clc
(bad)
push
sbb
cmc
or
into
sti
or
mov
sbb
xor
stos
ins
adc
lock
cld
pop
pop
cmp
clc
or
je
cmp
dec
jnp
dec
add
ja
jg
ja
arpl
(bad)
xchg
or
loopne
xor
adc
lock
inc
arpl
sar
add
cld
push
mov
push
mov
fistp
add
pop
fmul
adc
pushf
jmp
cs
jae
je
jge
dec
sbb
scas
(bad)
cmp
lds
les
add
inc
daa
mov
pop
(bad)
es
mov
cmp
xchg
and
push
test
lea
jmp
test
lahf
sbb
adc
mov
add
jmp
xchg
(bad)
cmps
stos
je
outs
mov
lods
cmps
sbb
frstor
dec
mov
gs
jae
sub
and
cs
mov
pusha
mov
retf
mov
xlat
xlat
cwde
jecxz
push
cmp
je
cwde
sti
lods
call
pop
jo
aaa
inc
inc
dec
jno
jns
jmp
push
fstp
inc
jno
xor
mov
xor
or
and
in
loope
(bad)
paddb
adc
(bad)
test
test
dec
push
pushf
sbb
imul
sbb
ins
fisub
sahf
xchg
push
inc
cmp
(bad)
adc
add
pop
xor
aam
fadd
sbb
xor
inc
xchg
mov
hlt
imul
mov
out
in
xchg
(bad)
adc
pop
retf
scas
jmp
xchg
pop
inc
xor
shr
adc
ror
jmp
jo
jmp
xchg
push
jg
xlat
push
je
push
mov
mov
int3
jmp
sbb
daa
and
std
ret
xchg
in
and
aaa
and
es
jno
and
push
sub
push
in
outs
mov
stos
js
cli
add
mov
(bad)
pop
(bad)
ins
push
and
mov
push
cli
repz
adc
mov
dec
pop
inc
sub
and
ffreep
test
cmp
mov
imul
in
iret
sbb
inc
call
imul
pinsrw
dec
dec
addr16
sbb
(bad)
popf
rcl
cmps
add
xor
sbb
stos
mov
push
pop
or
cmp
fsub
sub
mov
test
add
and
xchg
mov
push
cmps
inc
mov
outs
inc
mov
or
mov
push
push
rcl
retf
xchg
cmp
sbb
jmp
lods
fidiv
lock
adc
inc
fstp
(bad)
hlt
ret
int3
jg
mov
sub
cs
(bad)
bound
xchg
mov
mov
sub
adc
push
mov
cmps
arpl
sub
sub
ret
cdq
icebp
call
ror
add
outs
test
push
je
cmps
(bad)
mov
pop
pop
mov
fiadd
outs
pop
ret
mov
mov
into
push
out
and
push
sub
loope
mov
pop
push
mov
xchg
aad
daa
and
push
cmp
shr
lods
or
out
pop
or
push
pop
pop
cdq
inc
cwde
pushf
sub
pop
nop
push
mov
mov
scas
sbb
shl
lock
jnp
mov
call
add
or
adc
not
clc
inc
dec
xchg
jb
les
or
push
mov
mov
out
mov
push
xchg
cmp
pop
push
or
add
cmps
and
clc
call
loop
mov
dec
cs
lods
mov
retf
loope
xor
cld
mov
iret
jbe
lds
fisub
ret
nop
sbb
mov
mov
jmp
inc
adc
adc
inc
inc
call
jl
sub
jp
in
(bad)
out
push
jnp
pop
ins
repz
push
int
jge
mov
mov
fldcw
add
add
or
not
sti
sti
push
mov
xchg
or
mov
repz
mov
mov
jnp
scas
stos
xchg
repz
ret
icebp
pushf
push
rcl
enter
cmp
cmp
pop
fs
push
mov
xor
stos
je
push
push
sub
lods
mov
enter
sahf
iret
adc
cmp
xor
pushw
mov
cmp
fbstp
xor
push
retf
aam
lods
mov
inc
mov
(bad)
(bad)
cmp
or
adc
test
adc
fbld
ret
or
cwde
pop
xlat
mov
or
cs
scas
and
aam
mov
iret
xchg
icebp
dec
or
in
mov
jmp
inc
jbe
call
pop
mov
imul
cli
add
and
push
enter
xchg
xor
bound
imul
popa
sub
leave
int
and
call
data16
cmc
(bad)
mov
mov
xlat
ficom
inc
mov
adc
enter
iret
leave
call
xor
and
add
(bad)
pop
push
or
lds
mov
dec
in
je
cld
push
cmp
add
jl
jo
mov
mov
mov
bound
cmp
daa
loop
imul
(bad)
cmp
ss
push
xchg
je
xchg
mov
mov
(bad)
cmp
cmps
sbb
movs
jecxz
lock
clc
lea
sbb
aaa
movs
sar
dec
(bad)
xlat
ror
popa
jo
outs
sahf
lods
dec
and
ds
pop
push
add
xchg
fisttp
loop
retf
leave
xchg
or
jle
clc
out
iret
xor
int3
add
xchg
repz
mov
sub
dec
push
dec
fs
data16
mov
pop
jmp
outs
xchg
mov
jmp
inc
loop
call
aaa
test
xchg
ins
add
mov
in
leave
jl
dec
dec
pop
out
xchg
pop
and
fst
sub
mov
dec
repnz
dec
outs
mov
ret
jb
(bad)
lods
inc
mov
jb
jecxz
popf
out
cdq
push
and
adc
fidiv
mov
popa
sub
pop
popf
ficomp
int3
pop
lods
(bad)
mov
mov
cmp
in
daa
cld
not
inc
xchg
bound
inc
or
int3
in
call
test
mov
dec
pop
jno
into
rcr
cmp
inc
lods
or
jb
push
es
mov
fsubr
add
dec
rol
movs
dec
push
lds
(bad)
cdq
(bad)
xor
aaa
jecxz
cmp
or
xchg
mov
lods
jo
jnp
mov
push
and
jae
sub
fs
jmp
cwde
sub
je
mov
sub
test
sub
pop
inc
loopne
xchg
jmp
lahf
mov
scas
(bad)
mov
jns
mov
retf
fadd
and
outs
(bad)
cmc
push
retf
mov
(bad)
mov
sar
or
fild
movs
mov
inc
fcomip
stos
repnz
or
into
es
daa
in
or
pop
pop
sbb
sbb
in
jne
sub
int
and
add
push
or
into
pop
fnsave
adc
int3
cmp
xor
arpl
pop
scas
icebp
(bad)
xlat
pop
fs
pop
lahf
jmp
sub
dec
cmp
jg
inc
retf
movs
cwde
pop
mov
inc
in
fnsave
jmp
arpl
movs
pop
call
cwde
add
jmp
into
cmp
xor
sar
xchg
inc
and
push
mov
retf
cmp
call
loop
neg
dec
jl
pop
cmp
aam
push
pop
out
pushf
push
push
pop
js
(bad)
iret
movs
mov
js
outs
into
in
pop
fst
xor
mov
add
add
pushf
sbb
lea
push
out
test
ins
call
or
data16
shl
outs
jns
shr
enter
xor
(bad)
cmp
jmp
std
retf
push
jns
cld
scas
dec
push
xchg
(bad)
add
imul
inc
pop
loope
mov
pop
ss
cmp
mov
push
movhps
in
add
fs
dec
mov
add
push
sahf
aas
pop
je
fwait
cmps
pop
jg
cmp
cmp
gs
inc
fbld
xlat
push
cmps
(bad)
lods
ret
dec
out
inc
frstor
out
pop
out
arpl
lock
add
add
xor
add
sbb
inc
outs
inc
push
add
pop
cmc
push
std
lock
bound
repnz
enter
mov
mov
add
xlat
mov
add
es
lock
mov
push
xchg
sti
in
pop
mov
sbb
sub
ins
std
mov
jae
cs
fidivr
adc
jmp
mov
push
push
test
jae
jle
and
daa
pop
adc
ins
adc
mov
mov
cmp
cmp
mov
xchg
bnd
fist
cmp
jp
gs
outs
lds
push
sti
movs
cmp
pop
movs
adc
push
fisttp
aam
cmps
or
add
ins
cmc
and
pop
jb
imul
adc
loopne
in
jmp
and
addr16
sbb
loop
test
movs
xchg
bound
jp
scas
mov
mov
das
mov
in
cmps
je
push
dec
add
in
and
cld
ins
fdiv
std
push
xchg
cdq
jg
mov
icebp
dec
inc
sub
js
test
sub
popf
jge
or
fimul
cs
push
ss
stc
out
int3
and
out
repnz
scas
and
cli
push
cmc
loope
iret
(bad)
fld
gs
stos
jp
mov
imul
push
or
xor
ds
jo
inc
sub
fisubr
mov
sar
lds
aaa
mov
enter
mov
arpl
fucom
addr16
sub
popa
popf
enter
pop
dec
mov
pusha
cld
bound
ins
inc
in
inc
pop
push
mov
mov
xor
sbb
cmp
push
sbb
pop
xchg
adc
mov
add
push
(bad)
lods
out
clc
outs
adc
dec
mov
cmp
jbe
aaa
idiv
jecxz
popa
xchg
jbe
(bad)
sbb
outs
mov
fst
pushf
mov
iret
aam
sbb
fwait
jmp
push
repz
dec
cmc
jns
pop
add
jns
gs
fxch
mov
test
mov
adc
loop
leave
jmp
rcl
jmp
imul
cwde
add
ret
dec
scas
dec
sbb
imul
add
dec
xor
cmp
and
jg
aaa
cmc
mov
xor
cmp
inc
pop
sti
leave
adc
cmps
movs
and
pop
es
lock
out
in
xchg
dec
and
xchg
in
pop
push
cld
out
int3
movs
lea
jnp
xchg
xor
les
shl
cmp
mov
movs
jle
(bad)
push
popf
rol
cmps
or
sbb
ret
in
xchg
dec
add
jnp
mov
mov
add
cmps
mov
test
js
adc
out
out
add
pushf
cmp
arpl
sahf
adc
mov
les
movs
push
adc
sub
test
imul
cmp
adc
dec
mov
adc
movs
sar
leave
inc
xadd
ds
adc
bound
ret
fwait
xlat
sub
sub
scas
dec
imul
sbb
mov
pop
in
ss
cmp
in
sub
sub
inc
repnz
ins
push
mov
fiadd
sub
push
dec
rcl
xchg
mov
fist
test
popa
ja
xchg
in
cmp
ds
dec
in
cmp
add
int
xchg
dec
or
mov
clc
add
add
addr16
lods
mov
pop
push
(bad)
(bad)
or
enter
xchg
repz
stos
(bad)
fild
adc
cmp
jg
mov
sbb
mov
retf
into
mov
add
shl
sbb
push
push
lea
sahf
mov
jne
cmp
rol
ror
les
mov
call
cmc
mov
nop
aaa
dec
mov
sbb
mov
fxch
pushf
dec
xor
push
(bad)
sbb
dec
aad
jge
fwait
cmp
dec
cmp
lock
mov
mov
leave
adc
jge
cmps
fidiv
jge
adc
pause
ret
dec
jae
mov
jns
pop
loopne
mov
mov
xor
xor
xor
mov
repnz
inc
xchg
in
loop
dec
pop
outs
xor
jl
cmps
std
mov
lods
lds
aam
in
dec
and
iret
icebp
ss
inc
out
pop
in
mov
std
ins
in
jns
inc
mov
xchg
pop
add
pushf
ss
xchg
mov
mov
xchg
dec
xchg
fistp
scas
ss
or
mov
jbe
adc
mov
mov
cmps
xor
es
sar
dec
lock
jmp
add
mov
jno
test
js
adc
adc
mov
ss
cmc
in
xor
in
lods
sbb
arpl
mov
add
aaa
ret
cwde
cld
jne
dec
adc
push
ins
and
mov
stc
or
inc
gs
mov
outs
aaa
retf
cmp
dec
sahf
pusha
xor
cmp
mov
dec
scas
push
add
add
add
mov
add
cmp
or
je
mov
push
push
not
mov
fcom
sar
outs
sahf
fsubr
push
mov
dec
aaa
pop
push
or
sub
mov
cld
mov
sahf
inc
aas
jmp
pop
std
pop
cld
dec
lods
mov
es
add
out
pop
add
es
movs
cmp
mov
sub
fcomp
std
popa
outs
fcmovb
sub
fidiv
test
inc
in
or
repz
sbb
rcr
aaa
shr
call
mov
sbb
mov
add
ja
enter
cmp
(bad)
js
arpl
push
pop
mov
shl
mov
rol
xchg
test
dec
adc
sbb
xchg
xchg
mov
popf
dec
rcr
cmp
movs
cld
enter
dec
jmp
jecxz
xchg
adc
xlat
lods
shl
hlt
pop
inc
mov
outs
sub
xor
adc
icebp
arpl
les
pop
xor
stc
call
mov
push
jge
ror
mov
(bad)
in
fild
xor
mov
xchg
mov
xor
fisubr
lock
dec
das
xchg
xchg
add
fld
cmp
call
jnp
sbb
retf
loopne
mov
inc
pop
push
cmp
lahf
dec
leave
sbb
xor
hlt
add
(bad)
pop
dec
cs
push
jg
mov
and
int3
je
xchg
jne
jne
push
das
js
repnz
clc
inc
inc
repnz
iret
es
sar
fisub
pop
dec
ss
lahf
je
shl
lods
xor
dec
in
jae
dec
adc
lock
std
and
ds
ret
ins
iret
mul
pop
adc
mov
fisttp
mov
mov
push
or
sbb
mov
add
daa
fdiv
fst
(bad)
lahf
outs
je
and
mov
popa
push
adc
mov
mov
or
add
bound
sar
outs
mov
lea
imul
aaa
outs
pop
inc
lds
sub
sbb
dec
inc
ror
or
pop
bound
jb
push
push
sysexit
push
xchg
pop
push
test
pop
out
mov
sti
sub
mov
pop
fnstcw
and
dec
cmp
xchg
in
mov
rcl
xchg
sahf
test
mov
push
xchg
mov
pushf
mov
enter
stos
not
mov
pop
sub
ss
mov
mov
arpl
lock
jbe
mov
fs
pop
jp
loope
dec
mov
sbb
cdq
mov
add
les
pop
jnp
dec
inc
adc
cmp
jne
push
push
add
push
cld
pushw
fldcw
or
(bad)
aad
jno
imul
ficom
xchg
pop
dec
call
sub
mov
xchg
push
test
dec
adc
je
jae
or
in
mov
cdq
iret
sub
add
lock
jge
test
xlat
jmp
push
cdq
outs
xchg
cmp
lahf
lods
or
jmp
and
arpl
push
or
in
inc
jnp
mov
test
xchg
sub
push
jb
test
jno
mov
inc
js
xor
fwait
outs
adc
mov
outs
(bad)
jge
xchg
adc
ins
dec
add
jle
in
xchg
test
imul
dec
lea
sub
es
cwde
push
mov
mov
pop
sahf
and
data16
in
test
sub
push
xchg
std
pop
repnz
scas
xchg
cwde
cmp
and
test
fld
sbb
les
movs
push
mov
dec
lods
inc
xchg
xlat
sbb
(bad)
inc
sub
(bad)
pop
cmc
ret
jo
xchg
outs
lahf
jae
popf
push
out
mov
repz
outs
addr16
mov
jo
or
xlat
ja
cmp
inc
test
xor
mov
jp
add
ins
adc
jns
add
(bad)
jmp
loop
or
out
ins
fcmove
xchg
cmps
out
mov
into
dec
adc
nop
or
inc
fistp
cmp
or
(bad)
and
sub
jecxz
cmp
pop
clc
sbb
mov
je
inc
clc
adc
xchg
sub
push
shr
mov
push
mov
test
pusha
loop
loope
stos
into
add
ror
mov
mov
sub
sbb
sbb
dec
test
sub
jne
jb
and
ja
movs
fcmovbe
in
(bad)
mov
test
cmc
xchg
fs
mov
mov
aam
sub
loope
fist
imul
mov
mov
rcr
ss
in
fmul
pop
scas
(bad)
sbb
add
cmp
pop
pop
cwde
inc
sbb
fucom
pop
push
inc
clc
xchg
bound
sbb
xchg
test
pop
xor
pop
sbb
fldenv
arpl
out
inc
mov
dec
test
scas
jb
cld
sbb
aam
push
and
shr
sbb
add
sub
sub
sub
sysexit
inc
loope
lock
adc
xor
jmp
ds
add
or
xor
int
add
xchg
pop
push
daa
rol
int
cmp
cmp
dec
in
fdivr
fwait
or
dec
in
add
inc
mov
out
out
pop
cmp
in
xor
pusha
dec
inc
jp
or
jmp
ficom
or
jmp
or
push
adc
push
neg
enter
dec
je
push
lods
(bad)
push
or
js
dec
retf
out
pop
dec
(bad)
jnp
ins
cmp
outs
repnz
sub
movs
pushf
dec
stos
inc
xchg
cmp
xchg
or
mov
xor
mov
xor
pop
or
pop
rol
mov
pop
lock
mov
sub
pop
push
out
call
pop
retf
or
or
add
scas
add
lods
repz
out
lahf
lds
pop
ficom
sub
cmp
add
xchg
mov
cli
xchg
jmp
mov
sbb
mov
mov
jo
adc
and
pop
fiadd
mov
dec
repnz
mov
mov
or
push
mov
dec
xor
xor
(bad)
jno
dec
cmp
not
popa
mov
jno
mov
in
fst
das
arpl
or
pushf
cli
jmp
inc
and
(bad)
aas
fistp
add
add
add
shl
jbe
mov
inc
cmc
mov
addr16
lock
enter
cdq
or
stos
dec
mov
or
stc
jo
or
pop
mov
pop
jbe
fst
fbld
push
xor
mov
mov
sbb
ss
cmp
inc
sahf
mov
sub
sub
lahf
test
push
push
dec
xor
jb
mov
sub
push
out
xchg
popa
xlat
sar
push
mov
add
ror
push
loop
jg
add
pop
ss
xor
adc
sub
jl
adc
add
js
sbb
jb
enter
vcvtsi2ss
lds
xor
push
jb
jbe
lods
mov
int
pop
dec
loop
ins
test
fist
mov
shl
icebp
sbb
call
jge
daa
xchg
push
das
mov
sbb
fwait
ret
inc
cmp
icebp
mov
fbstp
mov
ror
aad
and
cdq
hlt
retf
pop
xor
and
neg
sbb
or
push
add
jmp
pop
inc
sar
clc
cmps
mov
lods
imul
add
inc
and
adc
loop
adc
addr16
mov
in
mov
fwait
aas
hlt
pushf
mov
loope
scas
scas
or
push
pop
add
xchg
inc
stc
mov
aaa
cmps
or
ins
dec
call
xor
lea
int3
pop
enter
mov
jmp
data16
leave
jecxz
add
sbb
out
inc
iret
cld
fwait
bound
mov
mov
outs
mov
push
jl
scas
scas
jne
movs
rol
adc
xchg
inc
pop
sub
sbb
(bad)
lods
(bad)
xchg
outs
in
test
ret
mov
rcr
pushf
push
dec
test
pop
pop
ss
(bad)
sub
pop
jle
dec
cmp
dec
into
jnp
push
cs
push
icebp
pop
pop
fisub
cld
xor
sbb
push
pop
pop
cmp
jle
ret
mov
cs
pop
enter
mov
ins
adc
in
daa
inc
xchg
pop
adc
xor
add
push
adc
mov
repnz
fldcw
scas
loop
data16
adc
inc
adc
mov
xchg
adc
dec
arpl
push
inc
mov
arpl
fnsave
movs
fisubr
ret
add
gs
rcr
addr16
mov
mov
nop
(bad)
cmp
test
mov
xor
cmp
push
xor
and
xor
pop
dec
in
cli
xlat
cli
add
dec
dec
mov
(bad)
in
mov
dec
mov
fisubr
mov
and
es
mov
jae
pop
inc
retf
pushf
inc
pop
and
cwde
xor
loope
test
aad
add
cmp
(bad)
pop
adc
aam
mov
and
mov
and
xchg
mov
dec
mov
push
mov
fs
aam
(bad)
cmp
ins
add
dec
adc
faddp
es
jge
mov
mov
das
jp
cmps
sub
stc
pop
scas
mov
stos
jo
sti
sti
pop
repnz
jno
pop
pop
ret
inc
mov
adc
xchg
outs
jmp
jb
icebp
adc
pop
inc
cmps
or
xor
retf
sub
push
je
xchg
test
retf
push
ins
cmp
rcr
outs
pop
push
fwait
popf
push
mov
mov
fcomp
or
bound
add
mov
mov
pop
cmp
adc
fnstcw
jecxz
or
fisttp
imul
mov
mov
pop
les
or
(bad)
pushf
mov
sar
xchg
and
dec
inc
push
xchg
inc
test
jl
dec
ins
cmp
(bad)
pop
inc
(bad)
jb
cdq
inc
mov
je
pop
or
mov
ins
not
lahf
mov
jno
inc
clc
jne
cmp
gs
pop
or
inc
imul
sub
loope
xchg
push
mov
and
bound
aad
test
xor
add
in
dec
mov
mov
pop
lods
lock
mov
retf
loop
out
je
dec
add
jge
sbb
sub
and
(bad)
pop
stos
adc
cmp
stc
nop
int3
mov
cmps
ret
xchg
retf
push
mov
cmp
fimul
lods
xchg
mov
or
std
repz
sbb
dec
pop
retf
jg
dec
dec
xor
addr16
cmp
fnstenv
xchg
js
call
jns
and
into
jecxz
cwde
(bad)
adc
xchg
scas
(bad)
cdq
lahf
mov
jp
mov
add
imul
jae
cli
retf
pop
sub
inc
jne
es
sub
push
adc
add
lods
and
fstp
mov
mov
(bad)
or
fwait
push
add
sbb
enter
jmp
pop
push
cmps
call
(bad)
sub
les
pop
cmp
sub
fstp
cdq
outs
xor
jmp
fucomp
inc
out
jl
sahf
jge
mov
inc
fcmovnb
lods
sbb
add
cmc
add
add
add
xor
sbb
sub
cmp
sbb
cmp
add
lock
mov
pop
sti
es
add
retf
dec
mov
iret
neg
cmp
scas
push
or
sbb
call
cli
cdq
add
fbld
adc
daa
sub
ficom
into
jae
push
pop
outs
xchg
aam
pop
in
adc
mov
cmp
add
jmp
xchg
pop
inc
mov
js
mov
sbb
mov
ins
or
in
and
mov
(bad)
outs
fs
stos
retf
imul
xchg
jnp
pop
push
xchg
xor
add
push
xchg
(bad)
adc
fild
enter
std
or
xchg
cmp
popf
and
jge
std
fxch
adc
mov
push
fild
dec
fwait
ins
mov
adc
xchg
cvttps2pi
pop
test
iret
and
xor
es
sub
sbb
pop
sar
mov
push
sahf
pop
jnp
jp
jg
ficom
dec
into
lods
fdivr
movs
popf
mov
pop
xor
and
loopne
pusha
daa
lahf
pop
int
(bad)
into
in
xchg
aaa
loop
and
into
dec
mov
and
sti
das
dec
jmp
ss
data16
dec
or
sbb
cs
jbe
sbb
add
dec
mov
cdq
dec
push
lea
rol
mov
push
jb
xlat
xchg
mov
mov
jne
and
xor
jbe
out
mov
pop
dec
mov
push
out
inc
mov
add
fsubrp
out
popa
pop
jae
push
sbb
ins
mov
or
in
push
and
test
icebp
in
cli
cmp
mov
jno
or
aad
lods
mov
in
cmps
jmp
adc
retf
repnz
les
adc
and
ins
retf
jb
xchg
and
cdq
enter
pop
xchg
add
sbb
mov
seta
inc
int
mov
rcr
shr
loop
cmp
lds
mov
jle
ins
jbe
mov
mov
test
mov
ja
adc
lahf
jecxz
loopne
push
xchg
cmp
pusha
pop
push
lods
(bad)
lock
push
or
sub
pop
int3
mov
push
mov
enter
inc
mov
add
pop
sbb
and
in
mov
aaa
push
push
and
pop
mov
dec
jg
cmp
pushf
push
mov
jmp
(bad)
adc
mov
or
call
out
shl
mov
test
ins
retf
pop
jmp
mov
mov
pop
mov
pop
add
nop
scas
(bad)
stos
xchg
jp
mov
pop
xchg
(bad)
cmc
sti
addr16
fcomp
pushf
and
cmps
shl
call
pusha
or
mov
mov
(bad)
dec
es
push
imul
cmp
jecxz
push
sbb
or
sbb
xchg
pop
add
cdq
(bad)
pop
(bad)
jmp
jl
mov
and
outs
mov
xor
mov
jle
add
test
pop
sti
leave
dec
jp
rcl
enter
fs
cmp
xor
xchg
mov
shl
dec
mov
pop
data16
xchg
or
outs
lahf
xor
test
or
xchg
aad
dec
hlt
pop
xchg
inc
hlt
push
fcomp
in
iret
in
ret
jmp
pop
and
pop
xor
mov
fidivr
lods
aaa
mov
xchg
fist
js
mov
cld
clc
or
bnd
out
scas
fsub
les
imul
mov
and
pop
push
push
inc
cld
inc
pop
ret
sbb
add
pop
xor
lahf
shl
jmp
scas
and
je
jae
xchg
pop
aas
jle
pop
sbb
pop
scas
les
iret
add
ror
cmp
mov
lea
mov
test
jae
cmp
int3
jmp
fdiv
hlt
mov
lds
pop
inc
mov
ss
int
hlt
(bad)
adc
sbb
and
add
loope
sbb
pop
mov
pushf
mov
xchg
mov
mov
xor
push
adc
push
xor
aad
scas
addr16
lods
call
nop
pop
pop
fcom
std
(bad)
in
push
loope
and
dec
jecxz
loope
sbb
dec
sbb
lods
push
add
sub
add
aam
add
inc
add
add
in
jle
push
cmp
(bad)
xchg
and
(bad)
sbb
popa
sti
push
push
loopne
add
inc
adc
adc
ror
or
ja
cld
in
cs
fnsave
xchg
jb
push
sub
or
(bad)
jns
es
xor
xor
je
int
dec
call
xchg
mov
xchg
sti
mov
aad
into
xor
div
mov
fisub
test
mov
mov
adc
xchg
inc
icebp
ins
push
ret
xor
jge
lds
jns
cmp
js
xlat
ins
in
loope
lods
scas
jecxz
lock
ja
dec
jns
jae
sbb
addr16
pop
sbb
sar
and
push
movs
xor
jge
outs
mov
jb
(bad)
das
int3
pop
mov
sahf
mov
iret
rcl
fiadd
ins
dec
mov
outs
cmp
inc
xchg
mov
sub
mov
pop
hlt
mov
das
sub
adc
xor
aad
into
das
mov
xlat
jl
mov
sahf
fmul
push
mov
push
(bad)
(bad)
call
mov
ins
xor
outs
(bad)
scas
scas
xchg
add
jnp
sub
mov
rcr
push
test
xchg
xor
mov
mov
add
ja
test
lea
ins
add
sub
in
mov
adc
cmp
mov
dec
(bad)
cwde
xor
lods
scas
movs
xor
(bad)
into
or
mov
sub
pusha
inc
cmps
or
jnp
loope
pushf
es
mov
sbb
pop
jnp
inc
int
mov
lock
xchg
cmp
rcl
outs
xor
or
in
mov
lods
inc
dec
mov
or
clc
test
xchg
or
xchg
or
sub
mov
and
sub
movs
or
(bad)
fisubr
call
bound
add
adc
addr16
cmp
push
xlat
adc
pop
std
test
je
ins
push
xchg
enter
sbb
sub
add
sahf
add
mov
sbb
add
pop
mov
test
push
jmp
ret
sub
jmp
cwde
jno
mov
test
pop
jno
jmp
mov
fnstenv
jle
push
jmp
fcomp
and
out
mov
adc
arpl
shl
pop
cmp
jno
fnstenv
fsub
shr
loope
push
imul
lds
cwde
adc
sbb
arpl
pop
cmc
outs
ret
nop
movs
out
inc
jl
rcl
cmps
mov
xor
adc
push
retf
xlat
call
xor
mov
dec
cmp
aad
stos
call
add
and
pop
add
ds
add
ficom
popf
pop
and
sbb
je
(bad)
scas
bound
mov
(bad)
retf
mov
sbb
repz
pop
ret
mov
scas
ja
push
jmp
mov
in
popa
je
jb
retf
(bad)
jp
xlat
push
add
cli
mov
dec
push
or
mov
call
gs
call
in
call
xchg
inc
push
in
iret
sub
adc
or
mov
mov
je
fbld
and
jae
dec
ret
popa
ret
jmp
popf
rcl
imul
sub
add
jo
add
sbb
je
in
(bad)
out
retf
retf
arpl
cdq
xchg
out
imul
adc
and
bound
mov
call
dec
adc
cwde
es
lods
push
ret
dec
cld
std
lea
mov
mov
loope
(bad)
jo
sub
push
rcl
sbb
fstp
fdiv
adc
mov
gs
pop
int3
mov
stos
lds
fisttp
je
ror
adc
cmp
mov
scas
test
int
add
and
ret
stos
pop
repnz
(bad)
shl
scas
sub
mov
aaa
out
aad
ins
sahf
pushf
push
mov
loope
stos
pop
enter
(bad)
scas
jbe
fisubr
in
mov
cs
and
sub
dec
fistp
pop
xchg
dec
sub
popf
mov
jb
imul
cs
jbe
lods
jnp
aaa
push
call
es
(bad)
pop
xchg
push
xchg
mov
retf
pusha
imul
dec
nop
out
test
xchg
add
(bad)
in
imul
pop
js
repz
lahf
mov
sahf
movs
push
xor
sbb
xor
out
mov
fisttp
cmp
xchg
or
jmp
mov
inc
(bad)
sbb
sbb
pop
sbb
jno
and
out
ficom
xor
xchg
(bad)
lods
mov
mov
adc
aad
adc
icebp
leave
adc
call
jmp
cmc
loopne
ficomp
rcl
or
cmps
scas
sar
pop
stos
fist
fmul
test
pop
nop
int
test
push
das
cwde
nop
jmp
pop
fstp
(bad)
sub
cld
cli
cmp
call
or
mov
lahf
mov
mov
sbb
in
lods
in
mov
movs
xor
js
lock
cmp
sbb
shl
(bad)
aad
and
add
add
add
cmps
add
add
mov
dec
and
or
fnstsw
leave
repnz
inc
ftst
mov
mov
arpl
xor
push
gs
imul
ja
jecxz
test
dec
sub
cmps
iret
push
pop
sbb
in
xchg
adc
cli
js
in
pop
shl
mov
bound
jecxz
lods
adc
and
js
sti
pop
add
push
pushf
cmp
retf
call
in
or
test
or
and
xchg
div
stc
inc
daa
movs
xchg
or
or
push
xchg
repnz
xchg
adc
out
sub
xchg
aaa
scas
out
test
cmps
fadd
das
(bad)
repnz
or
ret
xchg
sar
mov
pusha
dec
jp
add
inc
ds
adc
dec
out
cmp
frstpm(287
and
mov
aaa
ror
xchg
fs
call
aas
xor
pop
or
retf
jge
aam
jnp
cmp
test
std
push
mov
mov
shl
inc
mov
xor
xchg
xor
jbe
xchg
addr16
stos
xor
iret
enter
sub
push
push
mov
sbb
inc
(bad)
daa
dec
leave
fs
xchg
jmp
ret
es
dec
add
jae
(bad)
jmp
out
div
popf
xchg
shld
sbb
xor
xchg
xchg
retf
stos
sar
jl
ret
mov
sti
(bad)
xchg
dec
in
or
mov
pop
dec
or
loope
jno
sbb
or
add
into
je
pop
sbb
push
pop
into
aam
and
hlt
xchg
lods
sbb
aad
cmp
lahf
xor
neg
xchg
mov
mov
por
nop
and
popa
enter
inc
xchg
mov
test
mov
add
call
imul
push
xor
sbb
outs
add
in
scas
mov
sti
jno
dec
and
retf
es
mov
dec
pop
scas
mov
and
xor
or
pushf
pushf
jno
cs
sar
or
mov
fs
xor
mov
jns
test
in
clc
hlt
xor
lds
push
mov
jbe
mov
stos
into
pop
shl
nop
imul
mov
adc
push
fsub
aam
mov
sbb
mov
xchg
cmp
jle
gs
ins
ror
sub
add
std
add
enter
loope
mov
sub
push
retf
cmp
xor
outs
jmp
hlt
daa
inc
inc
cli
jmp
ja
jmp
pop
sub
adc
inc
mov
jo
pop
cs
sub
jne
mov
jno
xchg
sub
adc
movs
outs
loopne
or
lds
and
or
aam
repnz
dec
push
(bad)
dec
daa
pop
dec
icebp
and
scas
cmps
jno
loop
shl
je
sub
xchg
ins
sbb
cmp
rcl
test
jg
lea
mov
or
cmp
fsub
sbb
xchg
ret
out
adc
dec
shl
lods
mov
mov
fcom
ins
adc
fucom
imul
add
mov
xchg
rcr
inc
fs
jge
test
into
test
out
jno
fdivr
and
and
aaa
aaa
jnp
out
inc
push
jg
and
cmp
loopne
in
push
xchg
std
xchg
add
dec
cmp
xor
fmul
mov
icebp
sub
or
push
mov
mov
les
jno
mov
test
shr
outs
out
push
cmp
scas
in
ror
pop
popf
sti
sahf
jo
movs
mov
inc
je
mov
cmp
mov
cmp
xor
add
add
cld
(bad)
mov
jmp
mov
pop
js
jle
mov
cmp
pop
retf
mov
js
mov
and
add
fiadd
jo
retf
lods
fisub
aam
aad
dec
(bad)
out
popa
dec
fcomp
das
and
add
push
rol
popf
add
jnp
ja
popf
cmp
or
jl
pop
lods
xlat
ret
aas
inc
imul
jge
daa
adc
pop
je
sub
aad
push
pop
mov
jne
xchg
jmp
sbb
ret
mov
sub
jp
mov
cld
jge
imul
mov
sbb
jnp
loope
jl
fwait
leave
add
cmps
std
cmps
gs
adc
cmp
lahf
imul
mov
in
aaa
sub
pop
mov
imul
sub
int
pusha
adc
adc
sub
je
scas
gs
mov
or
fwait
adc
clc
fwait
adc
aaa
and
fdivr
ss
rol
pop
xor
mov
push
push
cmps
sbb
or
mov
mov
icebp
dec
cmp
adc
lods
mov
add
mov
nop
pop
mov
scas
push
call
cmp
sti
push
shr
jle
out
pop
inc
movs
lock
mov
(bad)
pop
aas
sbb
add
push
cmp
push
sub
mov
jg
pushf
cmp
add
or
xchg
sbb
(bad)
jg
push
dec
mov
pushf
add
push
(bad)
pushf
in
pop
mov
(bad)
add
dec
add
or
inc
sub
mov
ins
jmp
mov
or
cmp
xor
retf
das
enter
fcom
xchg
into
add
je
in
clc
jo
aad
js
out
pusha
mov
ds
inc
loop
(bad)
push
repz
mov
dec
hlt
pop
mov
outs
adc
cmp
pop
xor
xchg
mov
and
scas
outs
(bad)
lahf
push
imul
jecxz
stc
inc
lock
lds
shl
je
cli
test
rol
mov
(bad)
loope
retf
sahf
cmc
enter
add
jp
pop
fwait
cmc
and
mov
jb
mov
push
mov
mov
std
xchg
dec
jno
nop
xchg
imul
cdq
stos
sbb
xchg
repz
inc
pop
cmp
dec
enter
outs
fidivr
ret
icebp
test
mov
pop
push
xchg
jl
adc
jo
lds
icebp
call
daa
shr
jp
push
fidivr
jmp
imul
mov
sbb
mov
shl
(bad)
int
adc
(bad)
cmp
bound
cld
fldcw
rcl
cmp
icebp
test
sbb
mov
push
mov
or
das
xchg
and
(bad)
fwait
sbb
mov
and
pop
mov
mov
mov
pavgb
sub
sahf
loopne
gs
dec
mov
mov
push
(bad)
jl
test
mov
daa
and
add
add
sub
add
int3
(bad)
xchg
jbe
fild
mov
xchg
out
loop
ja
dec
inc
xor
xchg
xchg
mov
lock
in
xor
push
add
jge
pop
and
sub
sub
imul
mov
stos
jbe
xor
push
or
lods
mov
add
or
movs
mov
dec
sub
popf
ins
fcom
lea
dec
mov
inc
or
clc
adc
dec
sub
gs
out
inc
push
je
into
mov
test
arpl
test
and
xor
and
ror
xor
movs
adc
in
sub
pop
rcl
lods
fwait
jmp
mov
cmp
sar
and
fcomp
int
data16
mov
dec
adc
sub
and
or
repz
push
setg
dec
add
inc
pop
add
push
loop
imul
or
ss
push
stos
sbb
addr16
xchg
pop
mov
push
push
mov
in
adc
push
imul
stc
jns
mov
aad
or
push
mov
mov
int
pushf
xchg
xor
inc
lods
ins
mov
aas
xchg
push
ficomp
jns
out
push
js
pop
add
mov
mov
ficom
xchg
jo
scas
and
ja
sub
inc
stos
fdivr
sub
mov
jmp
sub
inc
movs
xor
bound
int3
loope
arpl
sbb
mov
pusha
lock
or
and
pushf
mov
dec
pop
sahf
or
xchg
loope
cwde
inc
push
jae
bound
pop
iret
pop
shl
adc
adc
rcr
lods
dec
or
popw
mov
test
pop
mov
(bad)
mov
mov
mov
inc
sti
mov
dec
dec
pop
xchg
stos
fcmovu
pop
xlat
out
mov
xchg
imul
mov
cdq
stos
cmp
sti
xchg
adc
mov
rcr
pop
cs
nop
fwait
dec
movs
lods
ror
ret
repnz
test
sti
sbb
mov
xor
(bad)
imul
scas
sub
call
add
test
outs
push
push
ficomp
loope
mov
js
push
fcom
sbb
xor
and
not
(bad)
xchg
retf
sar
mov
cmp
xchg
jns
xchg
lds
sahf
mov
dec
xchg
push
in
push
adc
or
add
xor
cmp
mov
push
add
in
les
(bad)
lock
das
pop
call
aad
ja
adc
mov
in
cmp
test
pop
push
xchg
fistp
mov
fldenv
in
call
out
repnz
adc
or
dec
mov
xchg
pop
movs
fnstenv
popf
jne
push
dec
adc
cwde
jecxz
pushf
push
rcl
sub
mov
pop
xor
sbb
add
test
jl
mov
int
stos
mov
push
push
dec
mov
push
mov
fcomp
cmps
xchg
imul
(bad)
repz
iret
jecxz
fild
xor
repz
xchg
and
add
mov
retf
cmp
xchg
push
pop
inc
xor
jmp
out
mov
jae
push
pop
push
mov
fstp
int
jmp
mov
fcmovnu
cmp
cmc
mov
pop
dec
frstor
loop
and
cmc
(bad)
ins
fisubr
pop
cmc
(bad)
inc
adc
loope
in
ret
and
je
add
repnz
ins
ss
push
jecxz
and
pop
dec
jge
mov
lds
fwait
dec
xor
pop
mul
into
sub
ret
mov
scas
pop
scas
pop
add
add
add
add
add
call
xor
inc
pop
pop
std
ret
int
push
add
adc
inc
inc
adc
xchg
mov
stos
daa
addr16
jb
icebp
nop
mov
lods
scas
stos
sbb
(bad)
popf
lea
loopne
mov
inc
out
sbb
outs
leave
jg
test
jmp
mov
fwait
inc
mov
cmp
mov
jns
cmp
xchg
xor
lahf
or
xchg
mov
nop
(bad)
push
add
(bad)
loop
or
fadd
or
cmp
data16
or
inc
fisubr
mov
xchg
cld
mov
jecxz
pop
pop
inc
or
(bad)
fdiv
(bad)
je
add
lock
lods
push
mov
jp
leave
bswap
cs
ror
cmps
cmp
jecxz
inc
xchg
sbb
jmp
ins
ins
mov
xchg
gs
out
push
pusha
pushf
sahf
mov
push
cmc
jmp
popf
repnz
dec
push
lock
and
fsub
retf
faddp
fs
xor
sahf
dec
sub
fsubr
popa
and
rcl
sbb
(bad)
cmp
cli
rcl
int3
hlt
push
cwde
movs
imul
or
sti
dec
repz
rcr
sbb
sbb
nop
pop
mov
aas
aas
adc
cmp
xchg
xlat
push
or
fdivrp
mov
xchg
jae
sti
sahf
pop
or
inc
xchg
fidivr
mov
cvtps2pi
and
xor
int3
(bad)
mov
cmc
fincstp
lods
fs
push
pop
test
int3
fwait
outs
imul
ds
mov
out
ins
or
sbb
push
xor
enter
xchg
xchg
sub
clc
inc
ret
or
sub
aam
sahf
push
sbb
aaa
call
lock
fisub
and
mov
jo
stos
bound
pop
push
mov
imul
gs
scas
pop
and
jo
push
(bad)
xor
popa
push
mov
dec
sbb
out
push
cmp
std
or
adc
mov
cmc
cmps
imul
mov
ror
enter
int
inc
xor
xchg
dec
test
pop
or
mov
push
inc
bound
sub
push
xchg
inc
repz
jbe
and
loop
lahf
jmp
mov
pop
inc
movs
sub
inc
mov
mov
aam
sbb
loope
repz
fwait
jg
hlt
sar
dec
test
mov
iret
pushf
dec
aaa
stos
imul
imul
pop
inc
mov
adc
mov
stc
popa
es
cmps
rcr
(bad)
mov
lods
or
jno
xchg
imul
les
ror
cmp
mov
imul
xor
mov
fs
push
xchg
imul
inc
sub
pop
in
push
js
jns
clc
xchg
xor
sahf
xor
and
lods
fsub
ret
retf
push
jo
adc
xlat
movs
js
arpl
sahf
pusha
shl
dec
push
outs
mov
test
imul
sbb
das
push
pop
sub
shr
ret
pop
addr16
mov
ficom
push
pop
xor
mov
add
dec
add
add
mov
repnz
inc
sbb
lahf
aas
inc
inc
(bad)
cs
dec
mov
sbb
cmps
mov
popf
push
push
mov
add
fwait
in
out
adc
das
dec
jp
dec
repz
sar
loopne
loopne
cmp
out
test
ud0
sub
dec
out
neg
in
lock
dec
fisub
jno
push
(bad)
(bad)
fisub
xor
cwde
mov
gs
push
xchg
ret
inc
mov
or
xchg
repz
mov
push
push
mov
pop
dec
fisubr
addr16
or
mov
add
fs
lods
add
mov
gs
xor
test
(bad)
mov
add
jecxz
adc
dec
xchg
fist
pop
and
xchg
loope
xchg
int3
lods
cmc
bound
daa
xchg
push
add
lock
push
in
lahf
or
pop
aas
(bad)
ret
ins
mov
into
mov
cmp
scas
ret
xchg
push
rcl
scas
sbb
add
jge
dec
in
(bad)
jne
jmp
adc
sub
ss
movs
fist
adc
add
mov
movs
(bad)
nop
dec
shr
xor
jns
cmp
pop
inc
enter
in
cs
jno
loopne
pop
sub
in
mov
sbb
mov
mov
push
or
retf
stos
sbb
xlat
inc
stc
cli
cmp
push
mov
sbb
jecxz
pop
fidivr
mov
push
fst
dec
sbb
dec
scas
or
aaa
sti
sahf
sbb
mov
push
popf
cmp
xchg
xchg
mov
adc
loope
(bad)
fidivr
xor
xor
jge
mov
dec
hlt
push
imul
fstp
add
stos
out
inc
cli
pop
sbb
ja
lock
jae
cdq
pop
(bad)
das
jnp
or
test
test
pop
movs
data16
in
add
sub
jg
aas
dec
cmp
xor
pop
sub
and
mov
loope
cmps
test
pop
les
cmps
cmp
jmp
xor
retf
jns
cmp
outs
iret
pop
pusha
push
ret
movs
mov
xchg
ret
pop
sub
je
fst
or
cmp
test
ins
stos
call
xor
aam
xchg
or
pop
jae
fistp
stc
mov
sub
movs
or
enter
pop
les
mov
push
dec
pop
fmul
add
dec
mov
add
dec
and
sbb
sub
stc
sti
mov
js
sbb
(bad)
std
mov
mov
daa
cmp
cdq
adc
jnp
les
or
mov
in
sbb
sti
out
fimul
xlat
mov
jecxz
je
xchg
into
xchg
das
mov
sub
scas
push
xor
push
xchg
aad
frstor
push
lahf
iret
dec
loope
mov
rol
pop
pushf
lods
cwde
xor
jg
les
jae
call
ss
xlat
jns
rol
xchg
push
stos
out
jbe
mov
add
add
add
aad
add
jno
xor
xchg
mov
add
xlat
mov
mov
xor
cmc
xor
push
jmp
pop
pop
lock
inc
pop
xor
pop
test
sbb
push
ficomp
out
lahf
xchg
outs
clc
push
ins
(bad)
cwde
out
mov
xlat
cmp
sub
dec
xor
dec
pop
fwait
in
inc
cmp
adc
inc
pop
cmc
push
jb
mov
ds
scas
mov
push
or
mov
xchg
mov
add
loop
enter
int3
int
mov
pop
sahf
mov
inc
add
or
jecxz
cmps
jmp
xchg
out
jl
ss
movs
pop
sub
xchg
cmp
outs
adc
int3
dec
xor
inc
ret
jae
cmp
push
(bad)
xor
inc
add
push
add
jecxz
sti
outs
xchg
(bad)
push
push
(bad)
sti
add
sar
pop
fld
push
js
cmps
sbb
jns
adc
xchg
and
retf
movs
mov
lea
xchg
mov
add
cld
repz
jo
xlat
mov
mov
xchg
icebp
(bad)
test
jle
mov
js
test
fwait
mov
rol
movs
test
ss
(bad)
pop
jbe
pop
and
mov
pop
sbb
fptan
stos
int
mov
sar
aas
aas
aas
cmps
lods
arpl
or
data16
cmc
sbb
sbb
mov
push
repnz
fldl2e
push
xor
pop
jmp
enter
adc
sub
mov
iret
sub
in
add
push
fidivr
enter
sbb
test
sahf
fdivr
xor
cmps
add
mov
add
in
aas
sbb
imul
cmps
adc
shr
scas
mov
push
jb
adc
mov
jmp
push
add
in
dec
les
(bad)
jecxz
jmp
fst
mov
pop
sahf
xchg
aas
mov
leave
mov
outs
lods
jge
dec
and
jmp
sub
test
xor
xor
cmp
in
in
movzx
hlt
dec
call
test
add
and
retf
in
jl
inc
mov
inc
hlt
inc
popa
xchg
(bad)
add
push
add
sbb
shr
outs
mov
jo
stos
jge
gs
pop
pop
jle
jns
mov
sub
mov
pop
sub
or
movs
sub
loopne
or
cmp
fist
movs
push
daa
cmps
dec
add
icebp
lods
fbstp
push
xor
pop
in
sub
retf
mov
jl
fist
push
cli
mov
test
add
pop
pop
inc
push
pop
cli
shl
lea
jne
shl
int
and
sahf
and
lods
or
push
and
xor
add
fldcw
mov
jecxz
(bad)
cmp
dec
xchg
(bad)
jnp
mov
dec
aaa
mov
mov
cmp
ins
aad
mov
pop
mov
adc
mov
jmp
mov
mov
mov
inc
mov
mov
stc
jno
(bad)
pop
or
pop
loope
out
outs
(bad)
cmp
add
dec
sbb
imul
xor
lea
pusha
stc
cmc
enter
dec
jle
dec
and
popf
imul
shl
push
and
iret
call
mov
popf
nop
adc
pop
push
inc
jns
out
jmp
les
(bad)
shr
add
lods
mov
add
pop
cdq
fild
fdivr
mov
adc
xchg
or
pop
in
ss
(bad)
cwde
add
ss
sti
jb
dec
inc
and
aam
and
fwait
nop
mov
gs
sub
sbb
push
dec
cmp
lock
lds
adc
xor
std
sub
xchg
out
(bad)
mov
std
xor
and
sbb
mul
mov
jmp
movs
aam
jb
cmps
(bad)
(bad)
(bad)
sbb
fwait
jmp
mov
dec
or
and
in
shr
inc
jmp
mov
jp
ficomp
lods
stos
and
retf
daa
mov
nop
add
push
xlat
and
das
mov
je
call
mov
arpl
lods
hlt
imul
mov
push
add
aad
jb
pop
lods
retf
sbb
mov
into
dec
jl
sar
add
(bad)
jecxz
or
fdivr
sbb
and
jb
aaa
or
fcmove
in
and
cli
xchg
cmp
ret
dec
mov
mov
xor
lock
out
and
or
xchg
push
jp
push
fsubr
pop
add
jg
repnz
mov
inc
push
test
loop
aaa
add
std
frstor
popf
call
sub
adc
sti
inc
dec
lods
loopne
or
gs
lods
les
sbb
inc
dec
jnp
push
out
adc
loop
jmp
test
push
cmp
lods
outs
rcr
sbb
les
daa
ds
pop
jmp
xor
je
rcl
adc
xor
jecxz
push
sbb
dec
popa
imul
cwde
xlat
ss
dec
mov
sub
cmps
pop
call
adc
jp
pop
fsub
jbe
leave
push
data16
arpl
imul
dec
sbb
adc
fsub
int3
push
push
ins
xor
push
mov
loop
outs
adc
icebp
loope
push
adc
fucomi
mov
ret
pop
loopne
xchg
aaa
add
stos
cmps
or
shl
sbb
mov
xchg
fidiv
pop
or
cmc
out
pop
cmp
add
add
add
add
add
in
xchg
loope
test
in
push
push
cmps
xchg
mov
lods
jg
push
outs
pop
push
(bad)
pushf
push
sbb
retf
and
in
jg
nop
mov
call
jp
pushf
jns
dec
adc
sahf
dec
mov
xchg
cmp
sbb
pop
jo
fstp
add
aaa
arpl
mov
sbb
es
xchg
lahf
sar
call
gs
stos
mov
mov
(bad)
stc
or
inc
nop
mov
xchg
and
jno
ss
jno
and
imul
sub
movs
nop
dec
xor
cmp
cmps
or
inc
(bad)
out
push
rol
jl
bound
imul
mov
inc
dec
out
ror
les
fisubr
aad
loop
adc
sahf
jmp
pop
mov
imul
mov
(bad)
loop
add
mov
pushf
inc
pop
cdq
xchg
push
xchg
fist
ficom
aad
mov
jae
push
cmp
out
lock
mov
stc
movs
outs
(bad)
cmp
pop
sbb
lds
pop
je
mov
retf
xchg
inc
or
xor
xchg
pop
mov
data16
jbe
shl
xchg
test
and
xor
dec
sti
push
rol
loopne
nop
mov
add
pop
xor
test
push
fwait
popf
shl
xchg
out
jns
cmp
loop
sub
sar
sub
jge
push
imul
mov
sbb
loop
sbb
out
fs
add
mov
add
add
pop
add
xor
add
or
dec
dec
cmp
outs
pop
in
mul
or
jmp
imul
jecxz
jp
inc
fldenv
out
jl
mov
fdiv
mov
xchg
mov
test
xchg
fdivr
cmp
dec
call
dec
not
xchg
and
fs
pop
sbb
or
scas
(bad)
addr16
and
pop
(bad)
inc
sub
lds
pop
ins
ror
push
push
in
xchg
xlat
stos
loope
retf
xor
aas
popf
sub
inc
mov
sub
(bad)
xchg
(bad)
das
add
push
call
jns
sub
pusha
push
and
(bad)
sbb
inc
mov
in
dec
into
mov
ss
mov
mov
call
add
adc
sbb
mov
test
mov
and
sub
pop
aas
std
jecxz
mov
cmp
jl
xor
mov
xchg
hlt
pop
mov
jle
test
fsubr
fiadd
pop
(bad)
push
test
push
inc
and
retf
mov
dec
pop
xchg
ret
jne
pop
popf
scas
icebp
add
test
mov
scas
mov
test
test
jecxz
daa
sub
stos
ins
push
lods
dec
jmp
xchg
push
xchg
sbb
adc
mov
mov
sbb
out
inc
jo
xchg
or
xor
test
out
(bad)
adc
dec
sbb
and
pop
test
cmp
cmp
and
iret
ins
and
std
inc
outs
adc
in
nop
jns
popf
push
icebp
loopne
loope
adc
ror
and
push
aad
dec
rcr
sub
dec
sahf
sbb
xor
mov
dec
mov
lods
inc
ret
test
and
mov
mov
inc
pop
aaa
sbb
jne
jl
div
clc
push
fwait
shl
xor
push
iret
add
(bad)
test
pop
fidiv
je
jne
jnp
ficomp
sub
adc
mov
outs
loop
movs
in
imul
pop
xor
cs
icebp
test
outs
sub
sti
retf
cmp
or
mov
mov
mov
mov
jmp
pop
test
push
mov
cli
and
out
or
and
cmp
test
push
xor
fist
mov
mov
or
mov
adc
xchg
jmp
inc
push
in
shl
jne
push
mov
jmp
push
dec
xchg
mov
mov
and
retf
or
mov
mov
nop
stos
hlt
xor
pop
xor
ds
push
mov
sub
outs
loopne
lahf
jle
cmp
shl
(bad)
or
add
add
sub
jnp
push
push
push
inc
int3
xchg
cmp
shl
adc
out
xor
add
fidivr
(bad)
aas
mov
inc
sub
cmc
dec
sub
cmp
adc
movs
sub
jns
mov
(bad)
outs
add
mov
call
fs
ins
mov
mov
mov
push
jle
call
mov
aam
das
shr
sbb
clc
xor
adc
cld
jge
int
dec
stos
vmovntdq
in
retf
aas
stos
cmp
(bad)
pop
cmp
fidiv
sub
and
clc
cmp
outs
das
and
call
xor
mov
jb
add
pop
dec
retf
mov
add
imul
inc
dec
dec
loop
pop
aam
jns
push
cmps
(bad)
mov
cmp
dec
test
bound
lahf
fcom
or
push
enter
pop
das
mov
lea
movs
(bad)
adc
sahf
popa
jp
xchg
rcl
aad
in
push
push
push
jb
xchg
test
xlat
fmul
imul
mov
push
adc
pop
int3
test
add
mov
mov
in
adc
xor
jle
div
test
push
inc
cmovge
xchg
call
outs
adc
mov
(bad)
loopne
jnp
call
aas
jno
gs
mov
mov
loopne
ffree
sub
adc
push
ds
push
sub
jg
pushf
pop
leave
pop
imul
sbb
sbb
mul
mov
xor
shr
js
and
enter
and
test
fs
jns
mov
(bad)
gs
adc
xor
cwde
out
cmp
fwait
shr
pop
stos
loope
jb
sub
inc
jo
sqrtps
xor
js
pop
cli
icebp
sub
jecxz
cs
jp
ror
cmc
popa
popf
xor
retf
push
mov
cld
je
fisttp
lods
dec
mov
fldenv
icebp
arpl
(bad)
sar
stc
test
mov
(bad)
or
push
jecxz
gs
enter
dec
pop
xchg
mov
cmps
into
out
fdiv
inc
xlat
jmp
out
sahf
xlat
mov
sbb
pop
add
int3
mov
movs
mov
mov
arpl
dec
push
nop
push
imul
(bad)
in
jnp
shl
xor
sub
outs
lods
push
(bad)
mov
aad
sub
cs
dec
packsswb
or
rcr
and
aas
fnstenv
xchg
lock
lods
cwde
into
gs
sub
cmp
hlt
outs
sub
arpl
add
ja
jo
in
jecxz
and
gs
call
(bad)
mov
movs
pop
xchg
bnd
icebp
dec
or
cs
inc
mov
fidivr
fistp
js
push
inc
dec
out
idiv
out
mov
cmp
dec
xchg
call
daa
test
sub
cli
sub
xor
xchg
push
call
and
xor
add
hlt
jp
push
stos
jle
ret
pusha
sub
push
dec
outs
jbe
ja
jl
xor
shl
sbb
push
mov
cmp
popa
nop
xor
jo
mov
fdivr
add
sbb
pop
cmc
(bad)
enter
inc
cmp
cmp
stos
imul
xchg
(bad)
fwait
stos
xor
les
dec
lods
ret
jg
mov
and
pushf
bound
das
xor
pop
jne
sub
mov
and
aaa
sub
xor
out
mov
mov
inc
test
aaa
and
(bad)
jmp
leave
inc
fisubr
mov
dec
fcom
fild
sub
loope
in
sub
sbb
xor
jne
or
rcl
enter
daa
add
jae
(bad)
ja
in
daa
repnz
movs
mov
add
jl
retf
xor
push
mov
sbb
aaa
ins
test
(bad)
jo
adc
imul
pop
repnz
mov
add
add
add
repnz
add
xor
jno
and
ss
dec
jns
adc
cld
call
test
and
bound
call
jg
scas
or
psrlw
iret
mov
(bad)
or
cmps
es
jno
addr16
stos
mov
shl
fstp
jne
pop
cwde
inc
loop
inc
mov
push
das
cld
fs
fbstp
cli
push
pop
mov
(bad)
add
mov
push
cmc
lods
jno
pop
and
and
(bad)
movs
jle
fistp
xor
stos
sub
or
test
repz
lds
cmc
daa
out
add
sbb
jl
mov
stc
ret
ret
loope
outs
inc
mov
or
jl
dec
or
or
mov
push
push
jge
or
mov
jmp
sar
adc
mov
dec
ds
mov
movs
lea
xor
div
push
mov
ror
daa
add
arpl
iret
sbb
cmp
enter
les
xor
dec
push
jge
pop
fwait
call
lods
into
cmp
sbb
xor
(bad)
sbb
outs
fidiv
mov
push
sub
jns
test
push
jp
call
and
mov
dec
xchg
hlt
pop
sbb
cmp
xor
jecxz
js
xchg
jmp
and
aaa
dec
rol
and
neg
scas
sbb
sub
xchg
lods
fisub
jne
pusha
or
lea
push
cmc
jmp
cmc
sub
sti
sub
les
(bad)
das
lods
adc
fisub
leave
mov
jno
into
xor
jl
pop
and
add
xchg
jg
int3
(bad)
mov
retf
ins
push
call
(bad)
ins
push
jo
mov
pop
aad
cmc
xchg
cmp
mov
out
sbb
adc
into
movs
cmps
je
sbb
dec
adc
pop
mov
daa
sti
xor
add
loop
push
fsub
sti
test
ds
mov
dec
test
cmp
ret
lock
dec
fucomp
ds
add
int
mov
fs
or
mov
in
test
iret
imul
xchg
enter
retf
cmps
(bad)
mov
nop
mov
jbe
lods
pop
jb
push
jns
rol
add
mov
push
mov
fld
sub
push
mov
xor
or
aad
fcomi
xchg
pop
mov
adc
std
xchg
imul
inc
sbb
in
sbb
push
(bad)
adc
retf
ds
adc
mov
repnz
mov
out
int3
repnz
xchg
jecxz
icebp
mov
repnz
push
ins
push
xchg
pop
mov
inc
push
push
dec
push
aam
ret
repz
jl
stos
mov
dec
inc
ins
adc
mov
cli
inc
add
pop
jl
outs
cld
or
jns
fnstcw
push
xchg
push
mov
jle
pcmpeqb
inc
movs
jb
xchg
dec
and
jno
iret
cmp
(bad)
popf
bound
in
xchg
cli
ins
into
aad
dec
in
jo
xor
push
pop
fstp
mov
mov
jnp
loope
jl
push
mov
sbb
dec
dec
out
es
adc
xchg
in
xchg
jmp
xor
inc
ret
int3
and
sbb
popf
mov
inc
retf
push
or
dec
sbb
not
popf
clc
in
mov
retf
and
cmps
mov
ja
ins
fisttp
push
push
dec
jmp
repnz
jecxz
xor
mov
into
mov
sbb
(bad)
inc
and
das
push
xor
cmp
xlat
ret
jo
jbe
test
xor
aas
sub
and
les
add
ret
cdq
cmp
in
and
jb
pop
inc
(bad)
push
jb
(bad)
(bad)
out
xor
dec
pusha
jmp
xchg
xor
fsubr
push
cmc
je
fcmove
xchg
or
mov
out
or
xor
iret
cmps
retf
inc
arpl
stos
jge
in
xchg
aam
dec
cdq
rol
pop
and
mov
fld
dec
or
xor
jl
xchg
fwait
sbb
pop
mov
test
sbb
pusha
and
imul
je
push
(bad)
nop
(bad)
mov
aas
cmp
xchg
addr16
and
push
enter
dec
ror
pusha
sbb
sti
sbb
dec
mov
fadd
daa
sahf
test
jnp
jne
inc
ss
lods
mov
fnsave
enter
fidiv
retf
jo
es
cmp
ins
mov
aad
and
or
lahf
xor
add
mov
jns
pushf
jno
scas
cmp
stos
or
cmps
test
lds
es
ret
dec
pop
lahf
xchg
xor
dec
in
sbb
ret
movs
into
outs
loop
out
icebp
cmp
adc
out
adc
(bad)
in
sar
mov
clc
add
push
fdivr
push
or
movs
loope
jmp
outs
pop
imul
jl
sub
and
push
(bad)
mov
(bad)
jae
(bad)
fistp
push
cmp
pop
push
ret
cdq
stc
data16
xchg
lock
mov
sub
imul
lahf
outs
(bad)
div
dec
fdivr
jne
adc
pop
outs
mov
fsubr
cmp
dec
push
out
test
mov
xchg
inc
mov
inc
add
mov
add
push
gs
out
out
scas
jle
enter
sub
jb
jnp
inc
cmp
or
adc
mov
jno
enter
jno
cdq
fdivr
add
add
lds
add
pop
or
dec
mov
jbe
push
movs
mov
pop
xor
push
ins
mov
adc
mov
mov
enter
lahf
retf
fnsave
jge
or
iret
fisubr
(bad)
popa
mov
addr16
xor
add
jp
add
mov
cli
xor
mov
jge
bndstx
push
push
gs
aad
mov
sbb
adc
dec
test
out
jecxz
jo
or
lock
and
adc
idiv
mov
or
xor
fild
xchg
mov
inc
fisub
inc
cli
adc
cdq
inc
out
bswap
pop
cli
ret
cmp
cmp
adc
dec
in
adc
and
jp
sar
test
adc
test
hlt
or
in
inc
jo
mov
pop
iret
jns
xchg
pop
fdivr
int3
or
sbb
xchg
cli
(bad)
pop
xchg
add
mov
push
push
cs
xchg
pop
daa
int3
mov
mov
rcr
dec
dec
(bad)
mov
adc
cdq
ret
js
add
push
add
imul
or
(bad)
pop
in
push
and
mov
lods
popf
cmps
dec
cdq
loope
push
aad
dec
mov
dec
(bad)
adc
stc
jecxz
dec
xchg
test
pop
popf
sub
ret
aas
(bad)
sti
enter
aam
sub
xor
loopne
arpl
cs
pop
pop
stc
push
xchg
dec
sar
mov
push
fidiv
(bad)
xchg
mov
(bad)
sbb
(bad)
popf
mov
pop
mov
std
shl
xor
jo
adc
aad
dec
xchg
ret
inc
add
jecxz
dec
(bad)
adc
icebp
jae
pusha
nop
test
test
not
add
pop
push
mov
jns
push
push
icebp
or
mov
adc
cmp
loop
pop
sub
shl
pop
inc
cli
mov
push
loop
repz
retf
jle
nop
jne
add
push
mov
sub
sbb
and
loop
popfw
inc
clc
stos
jg
cs
inc
in
xor
xor
int3
mov
fcmovbe
cld
cmp
repnz
mov
lock
fisub
ss
pop
ja
or
push
dec
jge
fisubr
jp
std
cmovs
mov
in
sbb
jge
lods
test
ins
sub
mov
cmp
lods
mov
jbe
mov
das
jmp
xchg
dec
jbe
scas
inc
push
outs
outs
add
and
movs
add
jbe
push
push
clc
cli
pop
xchg
and
mov
stc
imul
in
aad
xor
lods
scas
and
jg
push
mov
arpl
cmps
fcomp
pushf
popf
sub
jle
or
scas
cli
pop
push
test
mov
or
jge
xor
push
(bad)
jne
pop
xor
ror
xchg
pop
cdq
cwde
jne
lea
ret
jo
inc
cmp
xchg
lock
pop
popa
xor
jmp
jne
outs
dec
xchg
jg
into
test
mov
sub
repnz
cmp
call
cmp
ror
jecxz
dec
jb
push
cld
hlt
jmp
stc
fs
stc
mov
popf
pop
cmps
pop
repnz
(bad)
pop
cmp
bound
xor
bound
xchg
mov
lahf
mov
retf
es
bts
cmps
int3
jb
pop
adc
add
sub
cmp
mov
inc
(bad)
int3
or
cmps
inc
in
pop
jnp
(bad)
rcr
(bad)
(bad)
mov
and
popa
in
jae
pop
pushf
push
xchg
dec
cli
jecxz
xor
jmp
jns
xchg
test
out
sahf
mov
pop
jle
not
lock
pop
iret
iret
push
fst
mov
pusha
or
movs
in
push
xchg
retf
mov
mov
push
pop
add
rol
sub
xchg
aad
dec
js
popa
rcr
inc
outs
pop
icebp
or
movs
lahf
xlat
lods
in
mov
sbb
out
xchg
nop
xchg
pavgb
mov
out
mov
xchg
(bad)
popa
mov
jns
aam
xchg
aas
or
jp
out
fist
inc
dec
sbb
mov
daa
mov
ins
adc
test
jg
enter
add
jp
xchg
sub
sub
les
mov
inc
or
inc
inc
add
or
add
xchg
add
mov
clc
aad
mov
sub
les
jmp
adc
add
(bad)
stc
xor
cmps
(bad)
cs
call
inc
pop
ficomp
jb
movs
or
sbb
or
add
jmp
and
cmp
movs
xchg
movs
bound
mov
test
sbb
clc
test
add
or
jp
sub
xor
push
mov
pop
ds
cmps
ins
push
inc
movs
mov
mov
mov
fbstp
dec
lods
retf
movs
xchg
dec
mov
(bad)
rcr
dec
sbb
inc
xchg
addr16
loopne
mov
pop
adc
rsqrtps
xchg
leave
int3
adc
mov
push
pop
add
mov
pop
or
mov
inc
pop
push
popa
out
xchg
ds
into
int3
gs
lahf
imul
shrd
ret
aaa
dec
adc
jmp
mov
push
mov
jbe
test
or
xor
or
test
xchg
lahf
xchg
cmp
in
loopne
mov
adc
ja
out
inc
inc
dec
cmp
sub
and
push
out
mov
dec
fadd
popf
push
stos
mov
pusha
pop
pop
jne
push
cli
mov
fist
(bad)
add
fdiv
mov
xchg
pop
and
and
pop
xor
ins
stos
lds
dec
mov
iret
cmc
je
fs
pop
test
fwait
dec
mov
sub
bound
in
outs
ss
mov
jecxz
xor
neg
xchg
and
in
imul
jno
movs
adc
xlat
inc
jbe
sbb
pop
cmps
jns
mov
cmc
mov
xchg
mov
jl
daa
leave
das
pusha
out
out
addr16
ret
pop
xchg
push
pop
lahf
jae
stos
mov
or
gs
in
pop
lods
fsub
xor
dec
lea
into
push
xchg
stc
pop
xor
inc
retf
mov
or
pop
push
xlat
out
sub
jmp
sbb
pop
inc
stos
sbb
pop
jb
je
cmp
mov
sbb
mov
xchg
inc
shl
sbb
mov
leave
and
inc
or
(bad)
dec
pusha
sbb
or
inc
ret
js
or
das
or
and
inc
sbb
mov
or
(bad)
mov
out
jmp
sar
mov
xor
cmps
aas
jbe
sbb
test
jb
ss
jmp
popf
out
sbb
sbb
stos
enter
outs
daa
pop
jnp
(bad)
jnp
push
ret
into
pop
sbb
or
fdiv
push
js
jbe
mov
inc
dec
sbb
mov
or
fadd
retf
(bad)
mov
into
and
and
retf
pop
fistp
out
ins
or
cmp
aas
inc
retf
ss
push
les
mov
cmp
(bad)
icebp
mov
add
mov
pop
jne
sbb
ds
dec
mov
or
sahf
jb
inc
ins
push
sets
mov
daa
push
mov
jmp
mov
push
cld
mov
pop
or
fadd
push
cmp
rcl
idiv
xor
pop
sti
mov
sbb
pop
lods
stos
std
and
(bad)
aaa
push
ins
cmp
nop
js
ret
mov
and
fdivr
pop
imul
adc
push
jae
add
pop
xor
leave
js
jmp
jnp
inc
nop
int3
adc
and
repz
mov
ret
push
xor
int3
mov
repz
push
out
or
stos
ds
(bad)
inc
pop
in
(bad)
mov
mov
mov
test
cmp
pushf
leave
xchg
pop
or
or
and
clc
and
dec
xchg
jg
hlt
push
mov
imul
fbstp
add
in
and
mov
outs
push
jne
mov
mov
and
js
test
mov
icebp
push
into
js
xlat
out
xchg
cmps
out
scas
jp
das
test
mov
xor
std
xchg
sahf
ins
ja
ins
cmc
add
mov
gs
js
adc
das
sub
test
(bad)
cmp
adc
repnz
mov
mov
lds
fcmovu
(bad)
pop
outs
mov
adc
pop
fild
jo
mov
adc
lock
xor
pop
sub
sub
leave
cdq
outs
lahf
cmp
aaa
inc
icebp
xor
dec
jmp
in
arpl
add
push
cld
cmp
call
adc
pop
inc
lods
or
sub
dec
fdiv
and
in
mov
(bad)
xchg
jecxz
mov
inc
aas
push
pop
mov
mov
adc
xor
repz
mov
ins
push
sub
or
in
sub
shl
jp
hlt
hlt
cmc
(bad)
inc
and
xor
xor
xlat
setg
out
(bad)
push
std
mov
and
ss
mov
repnz
into
add
(bad)
into
cmps
dec
rcr
cld
adc
pop
xchg
into
adc
dec
setp
or
loop
jg
and
popa
inc
rcl
jae
lock
mov
mov
lahf
outs
(bad)
rcr
adc
adc
add
inc
add
add
add
add
ins
ret
fimul
test
aad
test
cmp
sbb
and
sbb
mov
jle
jle
jmp
push
out
sub
cmp
and
push
loope
stos
mov
mov
and
not
mov
loop
xchg
mov
(bad)
les
inc
push
or
sbb
sub
test
pop
xchg
and
xchg
fidivr
movs
sbb
scas
xlat
push
lods
mov
int
fwait
mov
and
outs
sahf
add
mov
jbe
ins
or
fiadd
jmp
mov
push
mov
push
out
gs
sbb
loop
imul
fiadd
or
pop
jns
sub
ja
call
iret
repz
fld
aad
mov
popa
mov
push
ins
and
dec
xor
outs
push
ds
fcom
push
rcr
dec
je
sti
xor
stc
sbb
cmc
dec
bswap
mov
cmps
hlt
mov
pop
xchg
jae
dec
jo
jns
pushf
cld
push
mov
mov
mov
imul
add
add
add
ins
adc
or
dec
cmp
cmc
adc
test
inc
bound
sti
iret
retf
pop
jnp
sub
ss
sub
or
mov
and
jle
mov
int
test
leave
aas
hlt
outs
fnsave
retf
adc
cli
cld
sub
push
into
cmp
or
sbb
pop
push
int
(bad)
mov
je
and
push
scas
adc
and
fucom
jae
jge
jae
dec
arpl
push
sub
popf
xor
in
xor
lods
sbb
adc
hlt
repnz
int3
addr16
jmp
jge
or
icebp
fcmovnu
push
cdq
mov
cmc
jle
aad
lds
data16
daa
std
les
add
ins
cmp
jb
jp
mov
or
fnstenv
bound
dec
inc
cmps
out
pop
mov
mov
push
idiv
cmc
jne
jno
aam
cdq
sbb
in
xchg
xchg
bound
mov
cmps
cli
sti
sub
iret
cwde
mov
or
push
rcr
sbb
mov
mov
cmp
pop
push
inc
and
icebp
mov
inc
outs
dec
sti
mov
or
pop
lods
popf
test
jge
push
in
lods
pop
xor
inc
sbb
lahf
out
and
scas
sub
(bad)
or
fiadd
stc
sub
aas
in
cmps
pop
pop
cmp
dec
mov
mov
int3
xor
outs
clc
pop
mov
ja
aas
jb
jno
iret
fisttp
adc
movs
push
inc
call
jbe
sub
fisttp
push
xlat
fmul
push
dec
out
lock
in
sbb
sub
ins
pop
mov
adc
cmp
mov
push
hlt
stc
adc
in
imul
mov
jo
scas
in
pop
mov
jno
mov
rcr
aad
fs
cmc
ret
sub
pop
out
inc
arpl
xchg
cs
dec
mov
lock
mov
ficomp
cmps
loope
scas
loopne
enter
add
movs
ja
aam
repnz
(bad)
dec
imul
push
repnz
repnz
or
fcmovnb
jb
dec
xchg
pop
fistp
mov
fcom
dec
sub
lods
xor
jne
mov
or
pop
(bad)
cwde
popw
cs
mov
pop
add
retf
repnz
ja
mov
pop
jae
(bad)
xchg
pop
xor
icebp
jmp
test
cmp
loopne
ja
sbb
jle
pushf
xlat
retf
cmp
pop
mov
(bad)
les
lock
mov
in
sub
pop
cmp
xor
mov
mov
push
jecxz
(bad)
rcr
fdivr
in
pushf
xchg
sahf
inc
sub
jecxz
push
mov
dec
xchg
shld
arpl
aaa
in
enter
mov
sub
mov
retf
mov
cli
push
popf
sahf
fdiv
pop
mov
out
out
mov
fisubr
scas
les
cli
scas
rcl
retf
sahf
cmp
stos
loopne
aad
iret
hlt
movs
xor
scas
sub
lahf
xor
and
mov
mov
jne
js
inc
or
jmp
push
inc
push
(bad)
sbb
push
gs
mov
mov
sbb
sbb
stc
pop
ja
retf
push
lea
lds
jg
fisub
pop
ret
stc
dec
ins
stos
push
loop
add
add
add
lea
cwde
pop
dec
call
test
cli
push
mov
push
xor
jmp
in
retf
jp
sbb
cmc
mov
lods
push
jmp
mov
push
mov
jns
cmp
push
ret
add
and
push
movs
dec
add
xchg
and
push
into
xchg
(bad)
aas
cmp
in
aam
fidiv
add
pop
std
mov
dec
jo
pop
dec
sbb
bound
push
test
mov
mov
sbb
xor
hlt
xor
dec
sar
dec
add
mov
xlat
shl
push
arpl
pop
pop
div
cmps
ror
cmp
push
stc
inc
dec
jbe
lods
mov
push
mov
pop
mov
and
mov
(bad)
in
inc
sti
jecxz
pusha
xchg
dec
imul
jno
jle
cmps
adc
(bad)
cmp
les
and
dec
add
aas
repz
dec
xchg
sbb
mov
xchg
pop
mov
pop
sbb
mov
cmps
adc
mov
cld
sub
cmp
xor
addr16
cwde
mov
adc
fcmovu
test
and
retf
mov
jae
sub
jle
sbb
and
mov
cmp
popa
enter
sub
bound
pop
mov
pop
int3
test
int3
mov
mov
bswap
push
mov
rol
jl
das
jnp
xor
jle
rcl
test
jp
stos
pop
cmps
loope
pop
add
clc
sti
mov
mov
lea
repnz
cmps
fstp
out
inc
cli
call
add
jecxz
(bad)
scas
dec
jo
retf
sub
jg
bound
(bad)
mov
push
push
mov
pop
push
add
mov
imul
rcl
fwait
je
in
daa
and
cmp
icebp
scas
add
adc
loope
inc
jmp
loop
mov
sbb
rcl
outs
scas
cmp
inc
add
cmp
or
add
retf
enter
in
or
mov
mov
cmp
cmp
in
mov
arpl
xchg
jge
mov
inc
cdq
dec
fcom
fist
or
mov
hlt
add
fidivr
xor
pop
ja
xor
cmp
jl
sbb
inc
mov
add
push
mov
and
jbe
xor
push
out
adc
adc
cmp
pop
loop
mov
xchg
inc
aam
call
fs
iret
cmp
xor
mov
jecxz
pop
xchg
mov
call
mov
dec
dec
and
ss
bound
(bad)
scas
cmps
cs
dec
jbe
in
nop
fiadd
cli
mov
sub
jg
nop
xor
les
fld
loopne
aas
les
inc
mov
in
mov
inc
xlat
shr
outs
arpl
sar
fcom
leave
cdq
cmc
dec
shl
aaa
ss
rcr
sahf
cmp
jne
jae
inc
adc
shl
and
push
retf
push
in
and
lock
xchg
daa
pop
cmp
std
sbb
xchg
rol
mov
xor
sub
add
push
dec
imul
pop
das
push
fidivr
xchg
mov
ret
push
enter
xor
adc
cmp
dec
nop
ja
mov
mov
shl
cld
js
test
cwde
jecxz
retf
and
push
sar
cmp
or
into
adc
inc
aas
adc
(bad)
dec
cmps
loop
shl
mov
sar
mov
fmul
dec
cmp
sbb
in
cmp
fst
adc
push
mov
or
std
popf
dec
jge
or
lods
xchg
jp
mov
sbb
xchg
ins
sbb
xchg
xor
xchg
sbb
add
scas
(bad)
mov
fdivr
daa
pop
test
loopne
mov
jno
inc
mov
scas
jnp
sub
rcl
into
ds
sub
in
add
sbb
xchg
mov
xchg
adc
sbb
xor
lea
mul
loope
ins
or
pop
(bad)
jecxz
xor
(bad)
fucomp
mov
mov
(bad)
jns
ss
inc
pusha
pop
mov
sahf
mov
pop
pop
push
adc
xor
gs
cs
nop
jno
mov
idiv
icebp
pop
sbb
mov
push
mov
out
cmp
mov
popf
daa
retf
call
mov
scas
push
pop
cmp
mov
bound
push
test
outs
mov
or
pop
repz
mov
movs
cmc
push
imul
inc
push
test
popa
mov
movs
ja
loop
and
dec
aaa
xchg
fiadd
add
add
add
or
cmp
cmp
leave
mov
in
pop
adc
pop
mov
cmp
dec
js
shl
jne
loopne
xlat
neg
fcom
dec
pop
or
xlat
adc
lds
test
mov
fimul
cmc
ret
cmp
shl
adc
or
into
cmps
jle
cli
in
imul
aaa
sahf
cmp
push
xlat
in
cmp
icebp
cld
(bad)
or
sbb
adc
dec
aam
lock
ror
or
dec
in
adc
jge
jne
(bad)
scas
mov
out
cmp
inc
push
das
sub
inc
lods
xchg
cmp
xchg
movs
repz
push
jmp
add
scas
jmp
push
inc
pop
aas
fwait
push
cmp
ja
sbb
lea
mov
jae
sbb
retf
dec
leave
div
jecxz
retf
cmp
out
push
in
es
popa
or
push
xchg
lds
in
or
adc
inc
xor
outs
sub
lds
lods
lods
test
loopne
(bad)
loop
push
xchg
add
dec
sbb
fwait
adc
aaa
sub
call
push
pop
aam
jne
push
mov
pop
adc
jecxz
pop
(bad)
sub
push
add
dec
or
adc
cwde
jne
xor
imul
(bad)
int
mov
push
mov
mov
lahf
popf
mov
mov
push
lock
shl
(bad)
adc
jmp
pop
shl
or
hlt
mov
and
test
xchg
dec
inc
adc
(bad)
push
in
(bad)
adc
xor
jae
ftst
mov
in
bound
aas
or
xor
les
aaa
cmp
mov
dec
adc
das
(bad)
(bad)
inc
(bad)
retf
cld
jge
movs
aas
test
int3
aaa
and
ret
mov
cmp
pop
jb
mov
addr16
or
cdq
test
in
mov
js
inc
xchg
mov
jecxz
mov
inc
push
push
call
xor
dec
mov
adc
xor
outs
fadd
pop
sub
dec
jae
push
bound
shl
xor
rcl
mov
mov
rol
daa
dec
movs
xor
add
mov
loopne
sar
pop
cmp
mov
stos
aaa
xor
stos
out
sar
enterw
lods
je
dec
iret
ret
jb
sbb
fstp
pop
ss
pop
icebp
push
dec
mov
dec
repnz
(bad)
mov
mov
sub
jbe
adc
loope
bound
pop
and
jns
pop
xchg
fiadd
jo
or
push
loopne
(bad)
repz
daa
adc
nop
fdiv
push
or
mov
movs
int3
cmp
jo
xor
push
xlat
mov
pop
xor
cmp
push
and
dec
mov
hlt
js
jo
aaa
add
mov
jle
out
add
or
ret
push
dec
bound
mov
inc
dec
sbb
lods
cmp
sub
add
xlat
sbb
adc
cs
sbb
outs
pop
neg
add
loopne
out
aam
out
sti
loopne
sub
fs
dec
jno
ins
lods
pop
mov
cmp
dec
and
mov
jbe
dec
sub
adc
push
pop
shl
cmp
sbb
shr
aaa
mov
rol
cmp
pop
aam
dec
test
push
pushf
(bad)
ret
add
sub
out
and
cwde
int3
cld
fistp
xchg
dec
push
int3
push
dec
dec
test
or
ds
and
jbe
cwde
cmps
pop
les
in
xchg
nop
add
cld
mul
mov
mov
sbb
or
add
adc
xchg
mov
sub
mov
inc
lods
loope
xlat
jnp
mov
jg
mov
addr16
jo
and
mov
cmp
jg
test
inc
cwde
std
(bad)
imul
ins
push
pop
pusha
xor
adc
lahf
(bad)
sbb
ja
imul
xor
cmps
daa
push
xchg
pop
dec
mov
xor
xor
loopne
cmps
lea
mov
stc
mov
movs
mov
or
jmp
pop
ss
sbb
mov
push
jo
retf
add
js
int
pop
push
dec
ja
fwait
(bad)
push
dec
sbb
repz
cmc
pop
mov
lods
dec
sbb
frstor
rol
mov
stos
faddp
shr
int
add
add
add
push
pop
jecxz
and
sub
mov
ds
cmc
(bad)
push
in
mov
mov
jne
out
pop
or
fwait
div
mov
inc
push
(bad)
mov
faddp
push
and
jns
dec
or
jno
hlt
xor
test
pop
mul
aam
and
xchg
mov
sub
pop
repnz
out
rcr
lahf
push
dec
js
(bad)
xor
test
das
xchg
and
cmps
(bad)
out
in
and
jb
inc
or
inc
mov
popf
mov
mov
cmp
mov
jo
jmp
fwait
dec
das
les
ds
inc
mov
add
stos
inc
sub
mov
push
test
dec
rol
jo
retf
mov
ficomp
xlat
or
fld
xchg
jae
and
fcomp
hlt
clc
mov
adc
or
jmp
jle
ss
xor
rcr
call
mov
cmp
jg
add
in
cmp
imul
sahf
inc
loopne
or
inc
pop
jge
mov
fisub
sub
inc
iret
dec
dec
test
arpl
mov
stos
dec
jae
les
aam
xchg
pop
dec
fsubp
mov
jmp
out
push
inc
fcmovnbe
fmul
pop
sbb
fimul
mov
xchg
cmovb
jmp
cmp
in
xchg
popw
push
xchg
movs
jo
icebp
inc
cmp
pop
fwait
stc
pop
(bad)
jmp
mov
xlat
mov
(bad)
jmp
je
aad
ror
xor
stc
jmp
daa
or
push
ret
dec
add
add
add
inc
cmps
fcmovnbe
fdivp
xchg
mov
outs
and
lahf
fs
or
adc
add
rol
add
cmp
mov
xchg
cdq
out
and
mov
jne
fist
lods
shr
pop
imul
retf
or
lock
cmp
in
pop
das
addr16
pop
xchg
mov
dec
pop
sub
sub
pop
jl
or
aaa
xor
inc
xor
xlat
cs
pop
jecxz
lds
add
and
adc
xor
sbb
push
lds
sar
cmps
scas
or
jl
or
inc
out
sub
xchg
add
jl
ss
sti
mov
add
loop
loopne
adc
push
jmp
out
daa
aam
mov
in
iret
mov
xchg
sub
cdq
push
fs
ins
push
jp
(bad)
es
ror
add
jg
arpl
xor
add
fdivp
push
ins
(bad)
push
mov
cmp
mov
mov
push
test
mov
cmp
xchg
add
mov
std
jnp
clc
cmp
(bad)
push
push
cmp
fstp
xor
mov
out
cmp
cwde
add
add
lds
outs
cs
fmul
in
fld
ret
in
pusha
pop
shr
popf
mov
rcl
repz
inc
cmps
inc
push
push
pop
inc
jge
mov
jmp
xchg
push
ss
mov
nop
test
cmps
mov
sub
mov
push
and
sbb
test
outs
sbb
add
or
push
dec
and
sbb
jne
cli
(bad)
mov
jno
sub
retf
lea
dec
mov
sub
(bad)
int
outs
(bad)
arpl
jg
jmp
sub
add
add
fisttp
push
mov
gs
ret
inc
test
popa
jae
out
cmc
(bad)
xchg
mov
mov
mov
adc
xchg
or
xchg
and
jmp
mov
cmp
cwde
xchg
stos
jp
sub
mov
sbb
out
mov
(bad)
mov
hlt
lods
mov
adc
hlt
cmps
adc
cmp
mov
stos
cli
pusha
push
pop
xchg
in
fs
fsub
add
cmp
stc
fcom
xchg
adc
sub
cmc
std
mov
pop
mov
xor
inc
push
and
xchg
push
fbstp
addr16
jge
push
mov
pop
sbb
pushf
popf
push
sar
fwait
in
dec
inc
out
loopne
dec
into
inc
jmp
cmps
loop
mov
data16
and
aas
or
mov
pusha
pop
vmread
js
outs
dec
inc
push
cmp
sbb
sub
dec
inc
add
jnp
fwait
cmova
xchg
cli
gs
or
cli
pop
mov
clc
aam
xchg
mov
xchg
adc
fisttp
pop
in
cmp
jb
add
mov
push
test
push
sub
out
or
jnp
mov
fs
(bad)
and
xor
and
shl
cmp
aas
mov
jb
push
dec
xchg
scas
jno
push
xor
inc
fsubrp
aas
xchg
sar
xchg
movs
mov
or
mov
dec
pusha
sbb
test
inc
clc
out
int
jge
popa
inc
inc
das
inc
push
cwde
fcom
mov
sbb
lods
inc
mov
fcmovnu
popa
mov
fsubp
leave
mov
add
xlat
add
add
add
in
movs
adc
idiv
scas
js
rol
pop
call
pop
imul
push
and
and
lods
push
(bad)
jecxz
(bad)
xor
jae
stc
or
movs
arpl
jge
or
jns
dec
fs
add
xor
sub
rol
cmp
adc
cld
movs
push
and
sub
inc
fidiv
fmulp
pusha
jmp
cdq
xchg
sub
xlat
xchg
idiv
mov
adc
ins
ror
jp
sub
push
pop
lock
pop
xor
loopne
mov
pop
xor
jae
mov
pop
out
mov
int3
sub
data16
sub
xor
dec
mov
scas
xchg
jno
(bad)
jg
int3
xchg
pop
mov
lea
mov
pop
xchg
lods
jns
xchg
jmp
push
cmp
movs
push
add
mov
cmp
imul
and
xchg
dec
mov
cmp
hlt
addr16
dec
inc
repnz
sub
mov
push
repz
or
xor
sbb
pushf
jbe
cmp
sbb
push
inc
loope
add
or
pushf
frstor
call
repnz
push
es
aam
call
inc
pop
lods
sbb
imul
movs
loopne
cmp
into
push
xchg
lahf
fmul
in
mov
enter
cmp
xchg
pop
test
xchg
sub
test
push
lods
mov
xor
call
fisub
(bad)
ficom
lods
popa
dec
pop
sub
inc
adc
xor
mov
retf
xor
mov
cdq
pop
sbb
pushf
cmc
jl
movs
pop
or
not
cli
cmp
hlt
pop
pop
sti
lds
ds
aam
jg
das
fdiv
xor
jmp
(bad)
jge
xor
adc
gs
sbb
xor
cmp
in
(bad)
cmp
adc
mov
cdq
xor
ror
pusha
cli
lea
xor
xchg
xor
mov
xchg
mov
int
or
push
fldenv
cdq
push
push
fsubr
mov
rcl
jb
test
test
call
ror
out
dec
retf
pusha
popf
mov
jmp
push
cmp
scas
cmp
loopne
inc
sub
jbe
jmp
mov
xor
repz
and
cmps
fbstp
dec
outs
or
mov
ins
pop
push
mov
imul
fcomp
inc
outs
sub
mov
or
cmps
sub
stc
loop
int3
retf
ret
pushf
imul
test
fucomp
and
sbb
imul
dec
adc
jp
adc
and
int3
enter
leave
xor
jbe
push
push
mov
xor
(bad)
lods
sbb
addr16
(bad)
adc
xchg
popa
in
mov
jnp
sar
(bad)
hlt
push
mov
or
cmp
test
(bad)
ins
fs
sub
fdiv
inc
in
je
jge
leave
in
xchg
add
cwde
and
xchg
ret
xchg
out
adc
and
daa
pop
ins
mov
in
or
ja
jp
xchg
int
cmp
call
cld
(bad)
cmps
or
jo
xor
mov
mov
pop
leave
jle
sub
retf
ins
cmp
xor
sbb
loop
(bad)
sbb
xchg
pop
popf
adc
jmp
mov
aaa
add
cmp
int
add
fimul
sub
shl
dec
sahf
out
mov
mov
shr
mov
lea
xchg
jne
call
add
adc
sbb
mov
cmp
out
mov
mov
mov
nop
xchg
cmp
pop
ss
pop
aas
inc
nop
test
add
movs
ret
out
cmp
push
or
inc
mov
fs
lock
jb
adc
cld
xchg
or
pusha
cmps
addr16
inc
sub
jle
push
pop
aad
jo
pushf
frstor
bound
pop
xlat
push
mov
dec
dec
mov
cdq
jg
pop
sti
dec
ficom
cmp
push
cld
test
mov
aas
xchg
scas
adc
mov
add
add
int3
pop
add
and
inc
pop
add
xor
int
stos
cmp
jle
add
dec
push
arpl
pop
push
pop
or
je
loopne
fwait
xchg
mov
lods
dec
test
in
ja
sub
ja
fbld
sbb
mov
fadd
mov
icebp
xor
outs
mov
sub
xor
lock
js
psadbw
fnstenv
pop
test
fbld
cld
inc
mov
popf
fwait
xlat
test
or
leave
aad
pop
aaa
sub
mov
jno
imul
(bad)
test
div
js
imul
popa
adc
out
hlt
push
dec
iret
sbb
mul
aaa
push
in
inc
ret
dec
repz
add
repz
call
push
sub
inc
outs
imul
outs
push
inc
xchg
sub
sub
or
xchg
iret
push
jecxz
xchg
mov
ret
dec
outs
mov
xchg
test
sbb
xor
cmp
cmc
cmps
or
les
(bad)
or
scas
fwait
into
mov
dec
mov
push
jmp
outs
outs
pop
das
fs
xlat
push
lds
sub
dec
inc
inc
xor
jo
cwde
ss
call
clc
or
jle
test
in
xor
ret
add
call
das
test
stos
jmp
(bad)
in
mov
add
fiadd
rcr
sub
cmc
push
jmp
and
push
mov
int
mov
xor
sbb
xchg
pop
push
int3
push
or
cmps
cmp
scas
mov
push
call
adc
sub
mov
mov
bswap
out
push
je
pop
mov
dec
jno
mov
into
mov
pop
dec
mov
shl
fist
in
dec
lahf
push
movs
sub
in
pusha
mov
fild
cmp
jle
imul
mov
xor
ror
mov
into
cld
mov
(bad)
lds
or
aaa
inc
hlt
sbb
jb
xchg
ss
jle
mov
push
sbb
jnp
aaa
lods
gs
or
push
fst
retf
pop
dec
xor
or
lods
sti
in
sub
ins
sbb
dec
adc
movs
jmp
nop
(bad)
sbb
and
icebp
inc
pop
pop
sub
dec
add
lods
inc
aam
out
cli
cs
cmp
jle
jp
cld
mov
xchg
jmp
lods
pop
pop
mov
pushf
xchg
add
push
jnp
cmp
popf
cmp
mov
rol
pop
cmp
push
test
xor
mov
shl
jno
test
xor
mov
xor
sub
test
outs
dec
pop
mov
pop
(bad)
or
push
xchg
imul
cs
test
test
sub
leave
push
xor
xchg
ret
aad
xchg
mov
daa
and
stc
sub
adc
push
pop
push
dec
ss
stos
xchg
rol
mov
fs
rcl
mov
icebp
or
enter
pop
jle
pop
rcl
push
xchg
out
cmps
stos
ja
mov
movs
mov
sbb
imul
out
loop
xor
outs
xchg
in
jne
inc
mov
adc
je
in
mov
rol
push
mov
mov
push
fwait
inc
mov
popf
and
adc
mov
mov
fsubp
rol
adc
dec
mov
inc
jne
mov
dec
jmp
shr
push
scas
fdivr
jecxz
das
cmps
fst
mov
mov
stos
and
mov
or
jnp
scas
cli
dec
cwde
sub
pop
fstp
scas
jne
mov
in
imul
push
(bad)
call
ss
and
push
clc
jno
loope
test
jp
ffree
into
inc
dec
retf
push
(bad)
cmp
or
push
jmp
cwde
or
mov
fcmovnbe
sub
and
pushf
in
(bad)
push
xor
push
pop
test
sub
fiadd
sar
shr
(bad)
dec
pop
mov
mov
imul
mov
adc
leave
mov
inc
outs
sub
ins
or
jns
adc
push
jp
ins
dec
pop
inc
mov
add
adc
(bad)
mul
hlt
iret
mov
push
xchg
rcr
fld
inc
in
xor
out
enter
scas
mul
(bad)
fiadd
(bad)
xchg
(bad)
cmc
daa
mov
jno
sub
(bad)
pop
pop
out
dec
fbld
jns
mov
ss
inc
mov
push
xchg
xchg
push
push
pop
push
mov
mov
fistp
jmp
les
sbb
sub
shr
cmps
cmp
dec
call
mov
inc
addr16
jae
ss
mov
movs
mov
loop
adc
out
sti
xchg
cwde
dec
push
mov
mov
mov
sub
dec
pusha
iret
or
dec
repnz
jns
call
xchg
inc
and
mov
pop
pop
loopne
hlt
test
mov
pushw
outs
add
jns
in
push
fisttp
inc
sbb
pop
jnp
iret
sub
sub
out
xchg
sub
je
movs
sar
fmul
dec
out
xlat
inc
fmul
aas
into
push
les
lock
mov
sbb
repnz
lods
retf
stc
(bad)
pop
dec
adc
add
jecxz
mov
retf
in
add
retfw
add
push
or
push
push
mov
add
out
loope
cmp
outs
push
mov
jne
xchg
and
fld
outs
clc
jb
push
push
sbb
mov
cli
add
or
shr
imul
jo
add
pop
push
hlt
ja
dec
cmp
sti
mov
xchg
sbb
sbb
cmp
add
pop
outs
shl
mov
lods
int3
sbb
adc
xchg
jnp
jne
sub
(bad)
imul
les
pop
aad
inc
xor
pop
sbb
fistp
jb
add
push
fiadd
or
mov
and
sbb
cld
lea
sub
gs
push
dec
cmp
cmp
sub
fcom
les
push
jmp
push
lahf
das
pushf
pop
ins
push
adc
push
int
cmc
mov
inc
mov
mov
fadd
rcr
dec
xchg
pop
mov
es
jle
adc
cwde
pop
add
stc
pop
add
cmp
mov
cmps
mov
scas
pop
call
add
scas
ss
mov
(bad)
sti
aas
xchg
xchg
sbb
lds
cmp
jb
outs
dec
js
test
in
push
out
cmp
sub
fisub
push
push
mov
xchg
xchg
daa
add
mov
mov
mov
rcr
in
lock
mov
out
xor
cmp
pop
aad
inc
inc
mov
int3
ins
shl
adc
jbe
dec
pushf
dec
sti
lods
push
sub
xor
das
push
rol
cmp
imul
jg
dec
icebp
dec
pop
inc
sbb
jl
retf
js
xchg
movs
push
fdivr
jbe
inc
and
mov
dec
daa
jp
loopne
mov
loope
cld
sbb
in
add
repnz
and
mov
data16
mov
lahf
cmc
mov
xor
aaa
fld1
mov
mov
jmp
and
mov
fldenv
xor
ret
mov
(bad)
mov
loope
ret
aam
ret
mov
ja
adc
inc
(bad)
mov
dec
in
xchg
loopne
xrelease
repnz
mov
jmp
add
sbb
fwait
mov
mov
jp
(bad)
inc
out
jl
scas
mov
xchg
aas
cmp
jp
add
jno
cmp
ror
pop
push
pop
iret
jbe
ins
mov
sub
sub
mov
mov
cmps
pop
js
push
jae
cmp
push
in
popa
add
mov
sbb
adc
test
or
jle
sbb
das
popa
in
test
gs
sbb
lea
repnz
scas
xchg
ror
jb
test
test
xchg
pop
test
mov
xchg
je
jne
sti
or
xor
loopne
sti
in
(bad)
mov
sar
test
call
cmps
ins
xchg
mov
dec
pusha
lods
and
sub
and
mov
cmp
mov
out
clc
inc
push
or
imul
xchg
add
mov
push
mov
mov
shl
rcl
ret
fcomip
lea
xchg
ret
sbb
jl
enter
leave
pop
(bad)
or
inc
mov
test
adc
jnp
pop
sub
pop
mov
xor
inc
dec
sbb
call
inc
pop
and
mov
popa
int3
sub
add
sbb
test
or
lea
sahf
jne
push
pusha
add
das
iret
ja
fs
pop
mov
mov
xor
lock
jle
mov
and
sti
je
and
dec
and
cmp
pop
lds
(bad)
mov
test
mov
lods
or
or
mov
add
out
and
test
ja
xchg
ja
std
dec
sti
cs
fild
xchg
push
shr
xor
cmp
into
mov
push
(bad)
jle
(bad)
jo
outs
mov
xchg
das
ins
inc
scas
mov
pushf
call
ret
dec
cmp
jl
movs
mov
push
and
sub
xchg
and
aad
sub
sub
fcom
sub
mov
dec
mov
push
stos
call
in
retf
add
idiv
frstor
rol
and
out
jmp
dec
int
loopne
xchg
cmp
rol
sub
or
add
dec
sbb
scas
call
or
out
xor
push
(bad)
inc
xor
out
push
jp
outs
mov
data16
push
mov
adc
cmps
cmc
xchg
jne
xor
fs
dec
push
or
leave
mov
icebp
lods
mov
jmp
add
adc
xchg
loopne
dec
call
movs
in
scas
fild
sbb
mov
mov
sbb
push
ja
ror
sar
cmp
jp
mov
in
cs
jns
sub
pop
push
add
sbb
inc
cmp
and
jmp
add
das
stos
jp
loope
jle
leave
xchg
fstp
cmp
jb
out
push
inc
test
inc
loop
stc
retf
jmp
add
movs
sub
adc
push
fbld
(bad)
arpl
enter
aas
cwde
adc
sub
mov
cli
inc
sub
xchg
and
movs
and
inc
out
xor
xor
out
sahf
gs
xchg
sub
xor
mov
ror
sub
mov
xor
aas
xchg
xchg
cmp
repz
out
cmp
adc
jmp
enter
js
out
inc
sub
rcl
je
rol
push
in
xchg
dec
aas
and
out
dec
imul
stc
jbe
call
sub
test
xchg
stc
ins
adc
mov
lea
lods
pop
outs
movs
jmp
mov
(bad)
and
icebp
push
pop
std
test
mov
enter
fistp
sub
xor
add
mov
adc
xor
push
sub
test
mov
lods
sub
dec
out
pop
das
jmp
xchg
push
xor
pop
push
jno
xchg
mov
(bad)
push
aam
or
pop
fild
into
xor
fcom
jmp
fcmove
mov
das
loopne
add
adc
or
retf
and
clc
jae
push
ret
cwde
inc
(bad)
jb
fild
push
data16
dec
adc
mov
(bad)
fstp
ins
(bad)
sub
inc
and
jl
inc
fs
or
adc
or
adc
dec
sar
sbb
inc
imul
mov
push
sub
test
fcom
fwait
push
and
scas
call
push
pusha
pop
pusha
lea
repz
loop
cld
test
mov
adc
fst
jne
inc
gs
dec
cmps
xor
data16
inc
hlt
ret
je
leave
dec
call
adc
xchg
pop
push
leave
sbb
repnz
gs
std
fisubr
sbb
xor
xor
sbb
xor
out
fist
pop
out
cdq
(bad)
pop
and
or
retf
clc
jno
xchg
adc
and
aad
inc
shl
int3
mov
mov
imul
in
sub
hlt
shl
jne
out
inc
push
aam
shl
fstp
mov
push
gs
pop
add
(bad)
xor
adc
dec
bound
js
ret
fmul
jge
cmp
jae
stos
pop
loope
(bad)
sbb
mov
push
inc
or
pop
and
dec
(bad)
rol
rol
imul
xchg
mov
mov
les
jg
dec
mov
sbb
test
cmp
inc
or
fdivr
xor
add
push
mov
ret
adc
mov
add
add
add
add
mov
pushf
and
xor
out
imul
mov
das
push
iret
and
push
cli
in
nop
repz
xchg
test
push
shr
inc
mov
fisttp
ss
sub
movs
repnz
push
sbb
lock
lahf
jmp
out
enter
aad
shr
mov
jmp
dec
pushf
mov
movs
inc
xlat
dec
es
sub
std
jae
iret
fstp
mov
mov
pop
stos
mov
movs
sbb
xor
fcom
or
jecxz
ins
jg
lea
loopne
not
test
das
leave
jbe
mov
hlt
popa
fistp
push
mov
cmp
in
cmp
xchg
stc
data16
mov
xor
mov
sbb
jb
push
out
mov
cdq
inc
sub
add
push
stos
pop
pusha
dec
mov
aas
mov
loope
dec
sbb
sub
gs
and
cld
xchg
and
mov
adc
xor
jbe
ficom
cmp
mov
sub
add
add
push
add
add
not
dec
loopne
push
dec
aas
sbb
imul
pop
adc
lahf
jbe
add
fwait
add
add
mov
and
leave
mov
loopne
cmp
mov
ins
stos
sub
inc
add
inc
pushf
ja
mov
nop
das
mov
push
xchg
xchg
ror
xor
test
sub
push
(bad)
leave
std
retf
mov
stos
(bad)
mov
je
jb
mov
mov
and
mov
pop
icebp
ins
imul
pop
rol
dec
and
sbb
(bad)
xchg
cs
in
xchg
and
and
push
push
cmps
(bad)
cmp
mov
imul
mov
(bad)
push
(bad)
out
mov
(bad)
loop
or
pop
xchg
xchg
dec
jecxz
add
and
xor
ror
movs
pop
loop
add
jbe
out
cmp
xor
in
and
cdq
adc
push
stc
sar
dec
mov
fdivr
mov
ds
lock
loope
or
(bad)
enter
ret
in
(bad)
cmps
fsubr
lock
dec
cmp
adc
call
mov
addr16
fistp
test
movs
add
scas
out
adc
jl
mov
in
push
mov
out
inc
retf
sub
(bad)
int3
aam
dec
inc
pop
lds
pop
ja
out
xchg
aam
ins
test
jns
jns
adc
cdq
mov
rcr
ins
xchg
push
inc
aas
mov
xchg
in
dec
dec
pop
stc
addr16
jbe
push
inc
or
mov
fstp
dec
fst
or
idiv
jb
(bad)
lea
movs
sub
push
icebp
mov
xchg
push
cmp
js
jmp
xchg
mov
je
mov
aam
cwde
je
push
mov
imul
adc
xchg
aad
dec
or
fwait
(bad)
ja
fild
mov
xor
xchg
xor
push
fidivr
dec
rcr
add
and
jle
push
rol
or
sbb
lods
xchg
mov
adc
out
mov
jnp
imul
retf
out
shl
cld
mov
add
iret
inc
enter
mov
xchg
fwait
int3
add
rcl
pop
and
retf
mov
aam
mov
popf
push
in
mov
fs
int3
mov
mov
jge
movs
ds
cli
push
adc
int
xor
pop
jl
aad
sti
and
or
shl
sar
shr
cmp
dec
jp
cmp
in
xchg
setnp
(bad)
jl
xchg
stos
cmp
xor
xchg
aam
(bad)
fdiv
movs
sbb
(bad)
push
jbe
xor
rol
in
inc
movs
xor
adc
mov
int
int3
imul
adc
xchg
(bad)
mov
or
cdq
outs
jnp
fsubr
sub
sub
mov
jmp
icebp
(bad)
adc
adc
pusha
es
push
(bad)
mov
shl
ss
pop
mov
cwde
popf
mov
jmp
cld
test
les
xor
leave
pop
sub
je
cs
mov
enter
mov
pop
sti
loopne
fisub
jecxz
xchg
sbb
sub
shl
pop
cld
daa
lock
imul
inc
or
xor
or
loope
stos
lds
test
mov
dec
xor
or
xor
cmp
cs
xchg
in
mov
fwait
pop
adc
ins
push
jno
mov
sub
mov
mov
(bad)
and
dec
data16
sbb
loope
das
ins
ins
mov
out
cmp
and
xor
fnsave
pop
dec
dec
or
loope
rcl
jno
and
fld
adc
mov
hlt
out
jae
sbb
in
pop
push
and
test
mov
xchg
xor
jno
sbb
call
xchg
scas
(bad)
(bad)
mov
into
jg
ja
lods
jle
mov
mov
out
js
into
ja
fcmovu
xchg
retf
xchg
dec
scas
ret
ja
jg
xor
mov
hlt
jnp
cmps
mov
and
imul
popf
idiv
mov
leave
sahf
pop
mov
xor
mov
test
lea
or
int
jns
fcomp
mov
dec
jns
loope
adc
push
ret
pop
das
mov
mov
dec
add
shr
lock
xlat
ins
cmp
xor
xor
xchg
mov
inc
sbb
sub
repnz
push
mov
xor
or
add
(bad)
les
pusha
sub
lea
shl
and
adc
pop
sbb
ds
nop
dec
mov
inc
cmp
lea
dec
and
movs
dec
stos
push
retf
jge
iret
pop
cmp
jbe
addr16
push
mov
inc
and
stos
mov
xor
fild
mov
loop
and
adc
not
std
pop
stos
mov
ud1
das
mov
add
ret
add
add
neg
lods
popa
jge
push
and
or
sub
mov
mov
mov
int
in
add
mov
cmp
sub
clc
sub
cmc
loop
push
mov
mov
pop
pop
jb
mov
pop
mov
sahf
xchg
push
sub
and
(bad)
in
xchg
and
sbb
pop
mov
xchg
sub
mov
stos
pop
test
fisub
sbb
add
in
mov
outs
retf
cmps
push
and
xor
cmp
jl
and
push
adc
lods
pop
jmp
push
adc
add
inc
push
imul
add
loop
add
sti
add
add
mov
scas
popf
mov
cs
fsubr
add
xchg
sub
cmp
and
(bad)
rcl
rcl
push
sahf
fwait
mov
arpl
in
xlat
pop
lock
sub
or
dec
adc
jne
inc
jl
repz
fld1
test
push
sub
or
mov
xor
jnp
mov
xchg
ss
mov
adc
add
pop
(bad)
into
scas
cmp
pop
aad
rcr
les
ret
mov
ja
data16
(bad)
movs
(bad)
sbb
xchg
fimul
scas
inc
fdivr
adc
(bad)
imul
retf
test
adc
fwait
pusha
div
clc
sub
dec
neg
cmp
in
push
adc
rcl
mov
in
push
ret
inc
into
dec
outs
in
inc
out
out
xchg
mov
sub
jnp
mov
pop
pop
sbb
jne
call
xchg
or
fist
rol
aam
sti
cmp
pop
adc
aad
jae
shl
xor
call
sub
leave
std
ror
das
sahf
push
mov
fsqrt
or
fild
ret
jl
les
jne
jg
mov
inc
add
and
push
pushf
sbb
lds
pop
push
cld
inc
or
xchg
jbe
test
mov
movs
xchg
mul
popf
add
add
fdiv
jne
add
mov
stc
add
or
imul
fst
cmc
push
and
add
dec
dec
movs
xor
xchg
xchg
jne
push
cld
adc
cmp
test
mov
xchg
call
mov
jnp
add
movs
dec
mov
test
xchg
int3
int
std
lds
repz
mov
les
and
sbb
pop
mov
mov
xor
hlt
sahf
xor
sahf
sahf
dec
into
loopne
cwde
loop
xchg
mov
in
ins
inc
stos
inc
mov
xchg
push
mov
push
push
js
or
mov
into
push
and
push
fidivr
inc
mov
data16
in
dec
mov
sbb
mov
enter
(bad)
sub
std
adc
stc
lods
jbe
cmp
pop
jmp
iret
inc
or
jbe
push
lea
inc
cmps
daa
adc
push
enter
xchg
shr
or
jnp
mov
dec
sahf
cmps
adc
push
aam
aam
xor
imul
and
dec
int3
lds
clc
pop
scas
pop
mov
xchg
sub
jp
(bad)
ins
xchg
xor
mov
cmc
jl
cli
lods
pop
mov
xchg
fsub
mov
sub
cld
in
push
aas
mov
pop
shl
pop
xor
jne
bound
test
cs
aas
imul
push
sahf
jecxz
imul
lods
(bad)
stc
in
jo
ds
add
inc
pop
rcr
sbb
sub
xor
sbb
in
in
popf
dec
lods
repz
nop
loop
pmaddwd
stos
shr
mov
aad
xchg
xor
loop
jge
sar
cs
in
pop
in
mov
jb
inc
xlat
(bad)
push
(bad)
adc
push
(bad)
dec
repnz
mov
push
push
and
das
xchg
sbb
std
jmp
mov
icebp
outs
das
ds
retf
or
pop
pop
and
ins
ss
sbb
mov
fcomp
outs
rcr
and
jbe
sbb
imul
mov
addr16
repnz
adc
sar
arpl
adc
pushf
sahf
mov
inc
pusha
sbb
adc
or
mov
fwait
pop
dec
dec
sub
or
cmps
add
scas
jnp
rol
jo
mov
movs
and
shr
fwait
aaa
repz
int3
cmp
ret
dec
(bad)
xchg
inc
jns
out
out
inc
jmp
xchg
inc
push
bnd
fmul
push
push
call
push
bound
sti
cs
jae
add
je
lahf
cdq
mov
pop
mov
pop
std
fst
cdq
cli
ins
mov
jnp
test
in
es
aam
js
fstp
dec
mov
cld
lods
xor
cwde
les
sub
loope
popa
mov
movs
cmp
mov
jbe
mov
lahf
push
outs
jae
xchg
push
fnstcw
pushf
aam
jg
sbb
cld
sti
cmp
add
add
dec
pop
add
adc
retf
push
daa
jns
pop
std
sub
or
arpl
mov
shl
mov
inc
shr
adc
mov
sub
aad
dec
xchg
pusha
in
sub
xchg
inc
jp
mov
cli
test
test
(bad)
mov
mov
scas
pop
xor
out
rcl
icebp
add
mov
outs
mov
std
scas
pop
aaa
mov
das
adc
push
jmp
inc
inc
or
or
xor
sbb
push
and
mov
fwait
adc
int
ins
das
or
addr16
push
adc
jbe
std
int
cmc
call
xor
fidivr
inc
lock
xor
mov
mov
sti
fsub
add
or
add
inc
gs
clc
xchg
dec
add
xor
rcl
jp
adc
movs
mov
push
loope
push
jmp
jecxz
jnp
jp
inc
loop
add
sub
inc
add
adc
dec
mov
add
mov
imul
ins
push
movs
rcl
retf
mov
cld
test
iret
xchg
icebp
adc
mov
sbb
mov
dec
mov
imul
or
add
in
xchg
adc
dec
sub
ret
ror
push
mov
xchg
xor
mov
(bad)
fndisi(8087
fld
push
(bad)
cdq
(bad)
mov
xchg
fdiv
push
jbe
(bad)
fmulp
jbe
inc
aad
xor
sub
clc
inc
iret
jae
ror
test
test
dec
adc
cmp
in
and
loopne
test
push
or
loopne
ret
mov
neg
sbb
fs
sbb
inc
clc
mov
jne
repz
sub
mov
mov
mov
push
cmc
outs
and
and
xor
mov
jns
add
in
cmp
mov
cwde
adc
ret
das
(bad)
push
mov
mov
(bad)
(bad)
scas
test
sar
outs
mov
push
mov
xchg
mov
movs
(bad)
leave
add
jle
sti
repnz
dec
inc
bswap
add
push
js
mov
(bad)
jp
mov
mov
jo
jl
sti
bound
call
fst
inc
or
jg
cwde
push
sti
xor
cmp
jno
outs
hlt
xchg
jo
sahf
mov
cld
pcmpgtb
cmc
(bad)
mov
push
sbb
inc
inc
aam
and
dec
jmp
sbb
fist
cmps
or
shr
daa
dec
inc
stc
cs
adc
mov
dec
aad
clc
sti
jno
call
push
or
add
ror
mov
mov
jp
(bad)
inc
inc
or
jp
hlt
int
shr
pop
mov
xchg
and
loope
(bad)
adc
js
test
push
and
cwde
add
add
int3
fadd
int
or
xchg
(bad)
fnsave
sbb
ja
mov
lods
mov
xchg
ja
pop
sub
lds
out
dec
lahf
xlat
mov
mov
div
in
mov
loop
xlat
test
push
and
leave
jae
mov
in
data16
adc
push
test
adc
jle
ss
push
add
ror
and
pusha
cmp
out
push
cmc
(bad)
jg
adc
test
icebp
push
pop
dec
mov
setns
stc
xchg
fdivr
mov
imul
(bad)
in
loop
in
icebp
dec
xor
cmp
imul
and
pop
ds
clc
sbb
mov
pop
int3
dec
pop
mov
(bad)
jge
out
jmp
rcl
pushf
or
arpl
or
(bad)
int3
jle
iret
(bad)
rcr
aad
nop
scas
div
movs
(bad)
iret
add
idiv
mov
in
push
jno
lea
xlat
jge
xchg
lock
sbb
jmp
dec
push
aad
addr16
push
mov
sbb
std
cmp
int
push
std
int3
xchg
push
retf
(bad)
(bad)
movs
xlat
xlat
fisubr
xchg
and
jb
(bad)
dec
adc
fwait
ins
ds
jnp
mov
movs
sub
cs
inc
imul
xor
out
mov
sbb
xchg
add
movs
sub
aaa
mov
daa
add
retf
sub
(bad)
ds
lock
add
sbb
pop
inc
mov
xchg
pop
fldcw
cmp
sbb
inc
jmp
push
cmps
mov
ss
mov
fcom
daa
sti
or
pop
lock
inc
mov
jb
push
push
dec
fsubp
pop
in
mov
clc
pop
jg
ret
dec
jp
imul
pop
pop
jecxz
clc
lea
mov
cmc
xor
movs
stc
inc
jo
pop
loopne
xchg
movs
adc
test
pop
jbe
or
add
lods
sbb
jl
push
dec
pusha
or
(bad)
sahf
jp
popf
call
fbld
hlt
aam
adc
cmps
inc
mov
dec
add
pushf
pop
cmp
jnp
in
sti
mov
(bad)
repnz
pop
out
test
cli
adc
mov
or
icebp
jns
xchg
mov
cmp
add
mov
ror
pop
mov
add
(bad)
out
mov
dec
fstp
js
movs
or
xchg
dec
pop
rcl
cmp
dec
out
add
ss
retf
in
sub
imul
retf
pop
imul
push
mov
clc
mov
mov
pusha
xor
ffreep
sub
(bad)
popf
jne
out
jno
or
movs
add
xchg
fstp
and
aad
popf
movs
jnp
data16
in
mov
mov
adc
and
xchg
mov
hlt
js
or
jns
push
and
push
mov
sub
test
gs
and
push
cmps
stc
sbb
sar
add
popa
hlt
jns
dec
add
test
or
add
push
cmp
adc
cmp
ja
xor
jmp
(bad)
outs
sub
mov
inc
ret
into
push
jp
mov
push
xlat
inc
into
pop
addr16
out
inc
cli
fisttp
pusha
jne
and
aad
dec
jge
push
jbe
dec
mov
imul
or
jbe
cmp
popa
cmp
dec
out
or
sbb
or
out
lahf
jb
xor
fiadd
mov
cmp
fnstsw
lock
jnp
aam
inc
(bad)
jp
int3
nop
shr
mov
push
jmp
or
(bad)
pop
inc
mov
ret
test
jno
arpl
(bad)
push
movs
movs
cmp
hlt
pop
pushf
movs
mov
push
mov
es
pushf
mov
or
mov
xor
pop
arpl
scas
pop
in
pop
or
pop
sahf
jmp
jmp
cli
xor
cmp
or
test
xchg
movs
gs
mov
ds
popa
scas
adc
ss
aaa
xor
rol
iret
sub
cs
stos
cmps
int3
dec
mov
push
jae
retf
push
iret
sbb
xor
mov
and
(bad)
popf
(bad)
jmp
mov
(bad)
cmc
dec
inc
xor
pop
xor
lds
js
ficomp
dec
adc
push
in
dec
and
neg
mov
cmp
aas
jmp
dec
cdq
lahf
push
pop
mov
lea
arpl
jbe
cli
out
sub
ds
shr
fadd
mov
ret
push
shl
dec
rcl
push
das
stos
popf
dec
adc
mov
(bad)
ds
sbb
mov
cmp
add
cld
jne
add
popa
adc
add
(bad)
xchg
and
or
ret
jo
popf
mov
out
mov
dec
cld
mov
fdivr
ins
cmp
inc
add
fcomp
or
stos
sbb
popf
xor
cmp
sti
push
lods
or
bound
jae
jp
icebp
xchg
mov
pop
aas
sbb
mov
jl
mov
sbb
adc
dec
dec
out
icebp
(bad)
or
jp
pop
mov
outs
xchg
call
mov
retf
mov
movs
mov
jmp
mov
dec
and
sub
sub
or
mov
cdq
jle
test
and
mov
aam
in
out
stos
in
addr16
jo
xor
pop
ret
lahf
add
sbb
add
int3
les
inc
aas
jnp
add
mov
je
xchg
sub
jno
add
retf
xchg
dec
inc
arpl
xchg
sar
jne
pop
jg
and
(bad)
mov
loopne
lahf
mov
fs
out
clc
cdq
push
icebp
and
imul
lock
xlat
movs
out
retf
push
pop
movs
std
mov
(bad)
mov
mov
sub
mov
xchg
les
fiadd
scas
test
jno
cli
out
xor
mov
aaa
mov
mov
dec
xor
and
je
nop
inc
cmp
pop
test
hlt
jle
repz
daa
ja
or
call
and
mov
adc
mov
sub
push
sub
and
je
fs
jle
dec
dec
loopne
stos
dec
mov
inc
jb
push
dec
mov
rcr
std
rol
xor
out
outs
shl
popf
sbb
sbb
(bad)
xchg
and
jge
xchg
jno
push
test
xchg
xor
lahf
mov
inc
add
test
cmp
jle
or
stc
stos
and
xchg
dec
sub
mov
cwde
outs
sub
sub
mov
scas
fs
sbb
rol
cmp
xchg
rcl
push
jno
mov
cwde
cmps
fidivr
sub
ins
pop
mov
pop
or
out
jbe
or
and
adc
fwait
int3
sti
or
sbb
ret
cmp
add
sbb
fild
test
rcr
enter
fadd
cmp
imul
dec
sub
mov
lds
ds
pop
clc
and
outs
add
cld
ret
mov
hlt
cmp
sub
ds
test
or
mov
and
jecxz
arpl
int3
pop
arpl
adc
adc
push
xor
mov
push
jns
movs
imul
cmovns
mov
mov
add
mov
push
mov
loop
dec
and
ins
inc
sbb
adc
mov
pop
jns
push
cmp
add
popf
aaa
retf
add
aad
shr
dec
lahf
xor
int
cmp
add
xchg
call
and
mov
stos
mov
fmulp
or
test
push
push
xor
sbb
jp
std
inc
loop
inc
inc
jns
into
pop
imul
cs
imul
hlt
out
or
push
and
shr
push
ficom
(bad)
dec
mov
dec
call
and
data16
jmp
sar
mov
ret
mov
inc
push
mov
mov
mov
pop
xchg
imul
xchg
icebp
out
out
jecxz
popf
les
mov
ins
rcr
ss
stc
sub
sbb
loope
and
adc
push
and
and
ins
push
mov
xor
xchg
cmp
push
push
repnz
cld
lock
ret
pop
mov
clc
jp
test
sbb
mov
push
lods
test
cmp
xchg
adc
inc
dec
push
and
lock
jnp
call
call
movs
xor
outs
call
cmc
and
test
push
cmp
nop
inc
mov
or
lods
inc
pop
and
aaa
imul
mov
div
call
out
clc
jbe
pop
jbe
and
int3
leave
and
ja
jl
xchg
movs
mov
into
stos
cmp
and
shr
shr
mov
jp
popa
push
(bad)
mov
pop
sub
mov
popf
mov
or
aad
jnp
int
adc
jo
stos
adc
fdivrp
or
adc
sub
cmp
jo
cmp
mov
push
sbb
loop
push
jl
pop
in
mov
push
adc
adc
sbb
push
lahf
xor
jecxz
shl
pop
sahf
vmovaps
xlat
and
ret
pop
inc
stos
jp
stos
xchg
cwde
scas
xchg
inc
inc
adc
stos
xor
jmp
into
mov
hlt
dec
xor
jns
cwde
pop
mov
add
add
add
add
xchg
aam
movs
jmp
push
div
out
mov
frstor
and
add
leave
sub
pop
test
xchg
add
cwde
mov
in
cwde
cmp
mov
mov
cli
jo
iret
dec
adc
adc
inc
fistp
pushf
or
and
test
int
pop
cmp
call
aam
jp
call
jne
mov
in
push
xlat
fstp
adc
jl
mov
add
push
movs
jne
dec
ss
sub
inc
xor
ret
push
add
adc
movs
call
pop
pop
in
imul
in
sub
add
les
pop
vcvttps2dq
jle
mov
not
int
and
mov
movs
shl
push
adc
cmc
inc
(bad)
mov
jne
retf
push
sub
sbb
push
pop
mov
imul
adc
push
xchg
fsub
arpl
das
sub
neg
sar
jno
mov
pop
xor
movs
adc
ror
mov
pop
(bad)
movs
int3
push
mov
or
fs
addr16
inc
imul
outs
add
add
jg
push
or
(bad)
push
xor
pop
ret
rol
in
jns
adc
push
test
push
sub
test
and
pop
sti
nop
sbb
mov
(bad)
or
add
loope
das
(bad)
push
loopne
dec
mov
fst
inc
xor
test
(bad)
mov
or
adc
mov
sbb
jg
fisub
in
push
sub
xchg
ja
test
jae
mov
bswap
mov
mov
rcr
sbb
mov
inc
cmps
outs
dec
sbb
(bad)
sbb
jp
lds
adc
into
in
outs
hlt
add
gs
mov
xchg
pop
sbb
(bad)
sti
and
cs
cmps
xchg
add
gs
jne
js
sbb
ret
xor
popf
inc
and
sar
inc
retf
or
sbb
push
push
cmps
push
dec
sbb
fnsave
int3
mov
jge
inc
pushf
sbb
ins
ret
loopne
jbe
inc
mov
mov
mov
retf
cs
mov
fwait
(bad)
pop
ret
xor
ficomp
mov
ja
ja
sub
inc
fsubr
fcmovnbe
mov
cli
fwait
jbe
mov
jmp
imul
std
add
dec
jmp
push
ss
sbb
outs
push
test
sar
out
call
pusha
jne
ins
xor
mov
and
or
push
jle
fwait
jg
popa
pop
popf
fs
in
je
dec
pushf
xor
(bad)
xchg
mov
inc
ins
enter
scas
push
sub
or
gs
adc
mov
push
mov
test
dec
call
or
dec
mov
xor
iret
scas
cld
or
dec
xchg
popf
xchg
dec
cmp
pop
or
test
pusha
add
dec
lea
scas
mov
xor
fnsave
test
out
fwait
inc
lods
cmp
add
arpl
ins
cmp
pop
sti
mov
add
mov
or
cmp
aaa
ins
inc
mov
rcr
xor
loopne
imul
dec
and
clc
inc
jns
jle
fisttp
pop
jns
aas
push
sbb
movs
hlt
aas
ins
and
out
push
popa
ret
ror
mov
jnp
rcr
push
cmp
int3
push
jmp
fs
pop
xchg
pop
inc
sub
in
js
mov
outs
in
xchg
xor
xchg
fdiv
bound
das
pop
pop
sub
mov
and
les
pushf
push
int3
fbstp
pushf
and
retf
aam
pop
mov
ins
out
popf
xchg
retf
repnz
stos
std
sub
and
pop
aaa
lahf
std
test
sub
cmp
jecxz
xlat
std
mov
call
jnp
mov
jg
data16
xabort
outs
out
(bad)
loope
outs
jns
lahf
cmp
jbe
retf
xchg
rcr
inc
push
push
add
sbb
pop
fldenv
add
pop
add
cmp
pop
fisubr
add
mov
sub
cli
mov
outs
repnz
xchg
add
out
cmp
into
push
push
int3
test
cdq
mov
dec
arpl
and
and
repz
sub
clc
cld
sub
lock
inc
jmp
and
and
mov
cli
or
das
or
mov
addr16
loopne
xor
addr16
push
lahf
mov
fistp
push
dec
adc
pop
mov
and
xor
sub
add
mov
jp
popa
outs
call
sahf
sbb
dec
jbe
neg
sar
rcl
and
mov
or
cmp
(bad)
dec
imul
push
pop
adc
xor
pop
sub
shl
sub
dec
inc
xor
jle
adc
call
cld
mov
or
rcl
in
stc
test
repz
mov
push
cmp
add
add
and
lods
xchg
add
aam
push
or
push
push
ret
mov
rcr
movs
mov
mov
push
dec
ss
cmc
popa
(bad)
mov
stos
jns
push
cwde
inc
push
loopne
push
add
add
push
jge
adc
outs
js
inc
popf
test
fwait
dec
sbb
inc
into
lods
(bad)
xor
and
jo
inc
addr16
jne
mov
in
call
pop
call
jmp
adc
push
out
(bad)
push
push
jp
add
les
sahf
fisttp
retf
dec
adc
adc
scas
in
mov
sbb
rcr
pop
lods
jb
ret
mov
inc
gs
dec
aad
pop
rol
pop
mov
stos
push
mov
xor
rcl
cmps
xor
stos
pop
fs
cmp
mov
adc
mov
mov
jns
lods
icebp
xlat
push
dec
icebp
add
add
push
inc
cli
cdq
add
add
loope
pusha
or
jl
loopne
inc
add
(bad)
mov
jge
adc
loope
call
pop
stc
cmp
bound
outs
mov
fst
push
mov
or
mov
clc
jmp
fs
scas
ret
int
dec
je
or
add
sbb
mov
jl
inc
push
and
loopne
(bad)
loope
mov
es
in
mov
xchg
push
ins
jl
movs
clc
xor
(bad)
xor
sbb
inc
ins
mov
leave
mov
add
push
add
add
data16
imul
(bad)
xor
jmp
adc
dec
retf
add
or
or
xor
or
push
inc
push
arpl
and
icebp
jg
pop
aas
scas
loope
addr16
mov
jmp
mov
mov
fs
and
fcomp
jecxz
sbb
fcom
pop
and
aaa
adc
repz
ret
aam
fbld
mov
cmp
adc
cmp
hlt
add
stc
xchg
call
jecxz
loope
dec
bound
inc
mov
xchg
aad
sbb
in
jne
daa
test
and
mov
cwde
jp
adc
sbb
mov
push
push
jbe
mov
push
and
sbb
xor
jmp
and
popf
popa
jl
ret
push
jae
int3
bsf
mov
push
xchg
adc
sub
sahf
mov
ds
or
cs
loopne
sub
jmp
xor
mov
jp
cmp
cmp
jmp
lea
cmp
jnp
fwait
cli
mov
sbb
and
imul
aaa
and
and
aad
adc
test
jg
das
push
sub
inc
xchg
ja
idiv
or
mov
inc
pop
jns
mov
adc
dec
das
lds
cwde
pusha
lock
mov
dec
cmp
adc
add
dec
xchg
cmp
pushf
mov
mov
xchg
or
cmps
pop
add
mov
sbb
xchg
cmp
push
jecxz
inc
rdpmc
inc
es
xchg
int3
pop
clc
loop
and
repnz
xchg
imul
and
sbb
sbb
add
(bad)
xor
adc
add
lds
xadd
sub
enter
pop
shl
stc
fadd
in
out
in
push
sub
ficom
movs
gs
repnz
aaa
vpunpcklqdq
sbb
fidivr
call
retf
jecxz
adc
in
add
jmp
add
add
push
add
xor
mov
dec
dec
push
xchg
outs
fcom
mov
mov
mov
mov
sub
xchg
dec
out
outs
mov
bound
push
call
mov
cmp
or
je
dec
push
add
hlt
lahf
(bad)
in
push
mov
pop
rol
rol
pop
sub
adc
jge
jb
mov
mov
loope
or
out
sub
int3
push
imul
mov
cmc
pop
cmp
popa
mulps
scas
push
pop
or
pop
dec
jmp
ret
aad
pop
mov
outs
mov
add
add
adc
enter
mov
or
mov
add
or
xchg
xchg
or
sub
cmp
movs
push
inc
pop
and
or
pusha
xchg
fdivr
sbb
ja
pop
mov
mov
jmp
or
in
mov
(bad)
into
(bad)
leave
xchg
aaa
(bad)
fstp
mov
adc
arpl
sti
jg
push
jg
cdq
cld
hlt
mov
push
and
pop
mov
inc
je
loope
sbb
inc
or
(bad)
jle
test
ret
mov
xlat
dec
mov
mov
movs
xchg
arpl
call
jmp
sub
and
inc
es
cmps
cmp
sub
imul
jmp
ja
inc
sub
dec
mov
out
push
repnz
outs
imul
sub
stos
inc
or
mov
mov
stc
outs
fidiv
in
int3
loope
lods
add
add
jae
mov
into
ror
pop
scas
ss
ret
into
mov
pusha
xchg
or
xchg
jecxz
mov
adc
outs
repnz
addr16
sub
stos
je
daa
and
in
arpl
mov
popa
clc
mov
add
push
sub
add
(bad)
push
cs
and
xchg
sub
adc
mov
cmps
adc
push
es
leave
data16
adc
push
pop
jmp
jno
movs
push
jb
and
mov
add
add
hlt
pop
cmp
cs
sub
xor
bnd
loop
mov
and
pop
sbb
fsin
sub
inc
addr16
push
retf
mov
and
into
mov
lea
icebp
jne
mov
cmp
xor
cmp
loop
cdq
add
int3
add
inc
clc
call
xchg
cmpps
icebp
mov
cwde
out
aas
jne
mov
add
push
adc
int
mov
sub
adc
popf
adc
or
jp
sahf
dec
sahf
fnstcw
(bad)
ror
fisubr
adc
outs
jmp
jns
mov
movs
adc
sbb
loope
dec
(bad)
or
dec
ins
cmp
inc
sti
leave
fisub
dec
mov
out
mov
pop
sub
dec
push
cmp
jb
jne
fsubr
shr
test
sar
jbe
sti
repz
adc
inc
fistp
js
pusha
mov
mov
fdivr
dec
mov
push
dec
fdivr
and
mov
mov
sbb
jne
sub
mov
test
js
adc
cwde
sbb
cmc
retf
fiadd
add
jmp
or
or
jp
pop
mov
rcr
mov
xchg
jg
mov
int
ins
mov
xchg
out
sub
add
icebp
and
fs
je
push
jb
cld
cmp
sub
xchg
mov
fcom
clc
(bad)
inc
popf
imul
add
and
lock
adc
mov
arpl
xor
cs
cmp
push
cmp
cmp
pop
push
out
ss
pop
gs
repnz
mov
(bad)
lea
ins
nop
mov
mov
xchg
add
test
aam
pop
xor
into
fnstcw
cmp
addr16
pop
jle
xor
dec
mov
mov
out
adc
cmovb
sbb
mov
cdq
loop
mov
pop
sahf
cld
sub
(bad)
push
jae
mov
lods
clc
adc
scas
scas
adc
test
call
jnp
or
ins
jnp
adc
in
scas
adc
stos
adc
outs
jmp
jp
cmp
dec
mov
not
icebp
dec
mov
inc
mov
xor
mov
and
mov
fwait
or
stos
repz
into
mov
mov
push
outs
in
mov
mov
push
xchg
nop
fisub
test
pop
adc
cmps
jbe
movs
mov
pop
mov
xchg
rcr
jmp
mov
xchg
sub
mov
gs
cmp
(bad)
ja
xor
(bad)
test
(bad)
out
inc
jecxz
sar
shl
cmc
outs
lods
inc
inc
stos
inc
fnstenv
je
adc
mov
push
outs
sub
cmp
sub
sar
cmp
daa
jle
add
loop
mov
mov
data16
push
cs
cmc
xchg
sub
ins
sub
loop
jg
jnp
fucomi
mov
dec
cmps
enter
nop
xchg
mov
jmp
sub
mov
daa
into
(bad)
push
fsub
mov
cmp
das
mov
stos
fisubr
aaa
fldcw
lahf
cs
add
mov
daa
push
push
push
adc
jbe
cmp
je
out
push
out
xor
inc
aad
stos
loope
adc
mov
jb
xchg
and
push
jmp
dec
dec
pop
pop
scas
lds
adc
cmp
fbstp
aas
enter
pop
push
hlt
(bad)
in
dec
xchg
icebp
jmp
jb
cmp
call
(bad)
addr16
rcr
(bad)
ficomp
xchg
xor
pusha
jae
jne
sar
mov
daa
ja
fst
cdq
xor
add
add
add
add
add
mov
lods
jg
std
aaa
dec
jge
xchg
push
movs
add
push
repnz
or
jmp
push
push
retf
scas
shl
mov
cwde
sbb
jnp
(bad)
push
add
repnz
leave
stos
ret
inc
mov
ret
push
mov
call
ds
add
adc
cld
loopne
mov
inc
aas
es
jge
pop
out
fwait
pop
xor
pop
cdq
int
les
xor
inc
mov
call
xchg
loope
adc
movs
sbb
enter
mov
jl
cmp
stos
leave
neg
fdiv
sbb
mov
test
mov
fcom
inc
push
xor
cld
sbb
push
rol
data16
cdq
inc
fistp
sub
jmp
retf
mov
dec
lahf
mov
push
add
dec
ret
add
add
add
add
add
add
mov
xchg
jp
pop
jle
push
std
cmp
inc
enter
cmps
daa
movs
or
push
push
cdq
mov
jne
xor
mov
jo
clc
dec
shr
inc
popa
adc
int3
jbe
pop
jmp
and
nop
fwait
std
mov
sub
mov
jae
dec
dec
je
out
sub
lds
cmp
jo
mov
ins
lock
jmp
loopne
sub
push
std
es
aam
ja
lods
addr16
adc
fwait
or
push
mov
cdq
mov
cwde
lods
mov
jno
or
mov
out
cdq
cdq
retf
xchg
in
(bad)
pop
dec
mov
fisubr
pop
pop
jg
push
mov
adc
(bad)
fnstsw
mul
mov
fmul
dec
icebp
push
ins
ret
das
and
out
mov
push
or
popf
pop
lea
jle
add
cmp
test
mov
mov
xadd
sti
or
movs
int
dec
stc
int3
sub
ins
xchg
pop
jecxz
into
ss
xchg
or
push
cdq
xchg
shr
jnp
push
sahf
arpl
addr16
or
mov
xor
ret
aam
push
pop
fbld
and
out
mov
mov
pop
mov
pop
lods
or
xchg
mov
cmc
adc
adc
or
jo
cmp
in
out
test
call
xor
call
mov
cli
mov
sti
push
jmp
cwde
es
or
adc
add
mov
push
xor
push
arpl
sbb
xor
add
add
add
jp
out
pop
(bad)
jb
loop
(bad)
and
fistp
adc
and
std
iret
jl
lock
popa
jmp
sbb
cmp
sbb
std
pusha
ins
dec
xchg
pop
iret
xor
mov
in
push
fs
lahf
pop
ret
adc
sub
adc
and
mov
push
pushf
lds
dec
(bad)
cdq
pop
and
inc
push
sub
imul
cmp
mov
mov
int
xor
jecxz
cmp
sub
aas
(bad)
in
(bad)
int
pop
sub
sub
mov
aad
sti
imul
retf
cmps
dec
aaa
sub
add
lds
out
stos
pop
add
jle
dec
xor
cmp
adc
add
mov
mov
jle
rcr
dec
cmp
cs
xchg
xor
ins
iret
mov
out
std
sti
or
add
mov
sbb
mov
cmp
mov
mov
pop
dec
int3
jmp
pop
je
movntps
test
sbb
(bad)
mov
inc
mov
add
add
sub
jae
sbb
jne
leave
jo
mov
inc
js
xchg
add
dec
mov
sbb
cmp
push
inc
js
es
pop
retf
mov
fisub
mov
icebp
jecxz
jne
cli
jecxz
in
push
mov
dec
loopne
jmp
push
dec
push
enter
pop
cmc
outs
xchg
sbb
jmp
cmc
adc
push
fcmovnbe
push
inc
fcom
xchg
fdiv
sub
dec
dec
fidivr
add
popf
xor
aad
cld
sub
dec
in
fadd
push
jmp
sbb
stc
and
inc
push
jle
xor
sub
stos
xchg
add
jnp
and
pop
or
push
sahf
xor
mov
test
mov
cmp
scas
out
leave
adc
xor
scas
and
gs
adc
daa
add
ret
xchg
sbb
dec
jno
sbb
adc
test
outs
mov
jb
add
jmp
mov
sbb
jle
lea
data16
addr16
call
div
std
mov
scas
stos
pop
aam
dec
xchg
jbe
imul
pop
mov
cmp
scas
daa
int
inc
sbb
sahf
arpl
int3
or
repnz
mov
sahf
(bad)
imul
popa
loope
dec
hlt
pop
adc
cmp
adc
gs
pop
hlt
iret
dec
cmps
add
pinsrw
mov
adc
(bad)
mov
ins
int
jns
inc
sbb
push
test
adc
popf
xor
dec
and
cmp
jno
(bad)
ror
or
lea
mov
hlt
retf
lds
mov
cmp
dec
in
cdq
dec
xchg
jbe
xchg
push
or
sub
pushf
test
fisubr
adc
and
inc
fs
pop
lods
and
imul
cs
(bad)
xor
stos
(bad)
ret
add
(bad)
loop
xchg
or
adc
jp
test
es
jecxz
sub
mov
and
cld
xchg
fiadd
imul
sub
add
mov
jmp
pushf
ja
xchg
dec
bound
daa
dec
adc
xor
hlt
jno
fidivr
dec
ret
sbb
int3
dec
mov
dec
scas
lock
cmc
sti
daa
adc
sub
fistp
or
pop
out
div
sbb
sti
bound
pop
jecxz
sbb
rcl
call
fcom
push
dec
mov
js
call
push
and
lods
movs
leave
ins
mov
fldenv
jbe
aas
fsubp
imul
add
add
sub
xchg
sahf
xlat
xor
(bad)
(bad)
xor
ds
cmp
test
enter
jecxz
shr
cs
jns
std
test
jp
mov
sub
push
loope
(bad)
ret
jb
push
sti
push
pop
xor
push
dec
jg
cmps
test
pusha
add
push
clc
(bad)
loope
fldenv
sahf
out
das
mov
cs
fld
jg
mov
xchg
enter
icebp
jecxz
mov
cld
pop
pop
and
clc
pop
std
jno
mov
or
vmovdqa
gs
jmp
sub
imul
test
lods
pop
or
xor
inc
or
cli
xor
fs
pop
and
push
shl
adc
mov
sti
or
lods
or
jno
inc
pop
ja
jnp
icebp
xchg
mov
sbb
sub
cli
mov
imul
cmps
dec
pop
stos
sub
clc
cdq
xor
ret
gs
xor
jo
xchg
mov
pop
iret
cmp
push
xchg
mov
or
sub
stc
stc
(bad)
aad
xchg
in
mov
xchg
lods
jl
hlt
xor
mov
aam
pushf
or
or
(bad)
hlt
call
stc
mov
jecxz
add
mov
repnz
mov
pop
stos
jecxz
outs
push
scas
out
out
add
mov
sub
cmps
sbb
mov
add
xor
adc
adc
ror
push
xchg
and
outs
shr
(bad)
ja
or
lar
xor
cmp
or
or
popa
add
and
mov
cmp
pop
cs
repz
or
es
xchg
std
dec
cmp
test
in
popa
imul
fwait
sbb
jg
outs
iret
pusha
gs
mov
xor
je
retf
out
sub
jb
cmp
mov
or
mov
adc
stos
test
jl
fisub
dec
(bad)
xor
repnz
jae
jmp
xor
shl
sbb
dec
shr
mov
adc
movs
mov
sub
ret
cdq
lahf
leave
mov
and
jno
dec
jmp
or
push
dec
add
cmps
aam
sahf
dec
hlt
dec
adc
fs
mov
repz
call
test
in
js
inc
inc
rol
pop
mov
loope
sub
sub
pusha
stos
pushf
xchg
jae
mov
and
pop
ror
adc
inc
ins
mov
je
call
jnp
cld
test
push
cs
mov
jp
xchg
xchg
push
stos
(bad)
movs
pop
outs
int
dec
jae
mov
xor
je
jmp
ss
inc
test
sub
sub
mov
rol
lods
pop
sbb
mov
add
mov
xchg
mov
xor
ins
push
(bad)
mov
push
and
cmp
adc
fld
rcr
add
outs
jo
adc
fs
xchg
into
adc
push
mov
fist
icebp
sub
cli
icebp
sub
add
mov
push
aam
fild
mov
add
stos
push
dec
fsub
loop
adc
xchg
pushf
sub
jmp
imul
sbb
mov
and
test
notrack
push
xchg
pusha
dec
ret
or
jne
mov
pop
daa
sub
outs
dec
std
stos
mov
or
or
xchg
xor
push
fidivr
mov
add
das
adc
push
fisubr
dec
inc
and
jne
in
mov
push
dec
xchg
jno
ss
in
pop
aad
fld1
sbb
int3
or
push
add
lahf
aad
ret
sub
push
xor
(bad)
out
sti
xchg
dec
lods
jg
jnp
loop
inc
(bad)
xchg
das
xchg
mov
mov
in
mov
fdivr
and
lods
jbe
addr16
cmp
sub
push
push
xor
mov
dec
cdq
fs
jle
sub
adc
fldlg2
xor
mov
test
pop
xchg
mov
sub
rol
cwde
mov
nop
data16
mov
popf
arpl
test
cmp
movs
int3
hlt
arpl
xchg
loope
inc
jne
cs
int3
fsubr
mov
pop
jmp
js
(bad)
adc
push
push
imul
das
test
iret
mov
cld
xor
dec
mov
sbb
push
in
ins
mov
lods
inc
(bad)
out
mul
adc
scas
dec
hlt
adc
mov
push
cmp
clc
jmp
cwde
and
jl
adc
scas
pminub
jae
push
fwait
dec
pop
imul
xor
mov
mov
xchg
or
fucomp
ds
loope
xor
addr16
dec
or
pop
pop
mov
mov
xchg
mov
mov
mov
pop
inc
out
mov
mov
js
(bad)
push
imul
or
inc
or
popa
ffree
int3
adc
adc
scas
cmps
mov
mov
inc
(bad)
mov
ins
adc
aad
cwde
jp
push
jg
mov
in
cmp
push
nop
xchg
clc
pop
daa
sbb
imul
das
lods
xor
cld
mov
pop
adc
jae
mov
xchg
cmps
in
or
cmp
and
cld
push
outs
cwde
(bad)
mov
(bad)
sub
sub
(bad)
loopne
(bad)
and
xor
fwait
imul
test
pushf
pop
fwait
or
sub
enter
mov
jbe
jmp
loopne
jno
mov
mov
cmp
movs
and
jg
jmp
mov
rcl
retf
mov
jp
sbb
popf
lahf
bound
cs
ret
scas
scas
fadd
add
add
add
add
add
enter
xchg
mov
xchg
push
mov
cli
xchg
out
ds
lock
cdq
sbb
adc
cmp
jb
push
imul
lods
push
pop
adc
cmp
dec
cmp
call
and
mov
or
sub
and
xor
call
das
add
stc
fstp
cld
leave
test
out
cld
mov
fcmovb
sti
sbb
adc
repz
sti
idiv
push
cmps
cmp
sbb
pop
cmp
fsubr
adc
fimul
(bad)
aas
dec
hlt
or
mov
adc
jmp
mov
inc
pop
cmp
sub
pop
(bad)
fcomi
lods
pop
ret
(bad)
mov
add
pop
add
outs
(bad)
mov
outs
xchg
lods
sub
xchg
adc
adc
adc
out
sbb
push
push
popf
mov
in
pop
sub
jmp
fistp
mov
fst
inc
movs
repz
fnsave
fistp
imul
and
or
mov
dec
dec
imul
ret
add
dec
dec
aad
pop
pop
xchg
lahf
iret
lods
call
inc
or
imul
cs
sti
jbe
lods
sub
pop
adc
lods
iret
xor
xlat
shl
or
dec
mov
movs
mov
mov
nop
cmps
lods
call
addr16
jmp
push
xor
push
in
std
push
in
lds
mov
in
lahf
lahf
mov
bound
pop
and
pop
(bad)
jo
test
or
aam
sbb
xchg
xor
adc
xor
mov
test
sahf
ins
leave
sub
scas
addr16
mov
xor
test
(bad)
gs
xor
(bad)
ds
dec
imul
mov
xor
mov
mov
popf
xchg
sbb
in
jns
je
repnz
shr
add
rol
pusha
pop
push
mov
popf
pop
mov
shl
or
jbe
out
lea
out
dec
push
pop
dec
int
mov
inc
mov
lods
daa
jmp
jno
sbb
outs
mov
sbb
dec
pop
fs
ins
pop
test
out
and
sbb
sub
rol
cmp
xchg
mov
jmp
(bad)
mov
adc
jno
cmp
mov
nop
pop
pop
push
jb
shr
enter
xchg
aam
mov
or
mov
scas
stos
dec
adc
lahf
(bad)
jmp
pop
mov
inc
or
jge
lds
mov
xchg
popa
js
sub
sub
dec
inc
or
jae
and
in
js
xor
rcr
shl
shl
or
xor
inc
xor
cmp
ret
repnz
out
fistp
pop
int
xchg
cmp
adc
push
imul
inc
and
or
fdiv
cmp
test
retf
repz
sub
dec
out
mul
aaa
sbb
bound
xchg
push
pop
push
xor
sar
inc
xor
out
mov
pop
icebp
(bad)
fiadd
shl
mov
arpl
icebp
sub
cmp
fnsave
mov
mov
mov
jmp
adc
int
mov
icebp
dec
mov
fnstsw
cmp
ja
imul
dec
cmp
int
imul
jmp
mov
hlt
imul
mov
sbb
je
outs
inc
jbe
movs
and
test
es
mov
lea
in
xchg
cli
scas
push
loopne
fdiv
into
push
pop
xchg
mov
jmp
push
add
cmp
pop
mov
shrd
mov
cmp
xchg
nop
add
icebp
inc
mov
pop
inc
inc
xchg
xlat
rol
push
lds
lods
lods
shl
nop
sbb
out
mov
push
out
adc
xchg
mov
xchg
mov
dec
lds
push
cld
dec
rcl
clc
mov
out
xchg
daa
pop
jns
cwde
xor
ret
and
push
nop
add
gs
aad
sbb
scas
or
dec
dec
outs
pop
inc
jb
das
dec
sub
shl
jo
imul
loopne
cs
imul
int
ret
add
xor
mov
add
loopne
xor
movs
neg
test
pusha
scas
cmp
lea
sbb
daa
in
add
lock
loope
push
jb
(bad)
(bad)
stos
add
loopne
dec
std
mov
dec
fisubr
pop
imul
lea
test
inc
mov
xchg
sub
jo
cmc
outs
rol
xchg
sar
fisttp
inc
dec
das
or
xchg
jle
js
jge
adc
daa
inc
mov
daa
clc
out
pop
scas
sub
inc
mov
jnp
jg
cmp
xchg
dec
cs
or
jo
imul
xor
mov
cmp
jg
inc
sbb
sub
pop
cmp
lods
retf
nop
dec
jmp
xor
and
int
les
or
leave
cmp
inc
jno
dec
mov
call
les
push
cmp
jp
push
addr16
clc
xchg
nop
fstp
in
cld
in
adc
(bad)
pop
and
push
cmp
sub
push
dec
or
xor
int
test
adc
xor
imul
and
xchg
fsubrp
cmp
popf
ret
or
xlat
icebp
fstp
les
adc
sti
push
out
ror
aas
retf
ror
inc
adc
sub
(bad)
loopne
aad
(bad)
push
xor
outs
add
ins
jle
xor
sar
daa
dec
jnp
or
mov
fwait
push
jno
pop
xor
int
xor
in
jecxz
js
mov
inc
cmp
adc
lea
in
cdq
pop
stc
jp
(bad)
sub
test
xor
push
outs
fisttp
push
ins
movs
jbe
out
sbb
dec
(bad)
rcr
pop
pop
aam
xor
add
dec
in
loope
and
in
gs
daa
add
adc
pop
lock
mov
jne
ins
arpl
mov
repnz
cmc
(bad)
loope
in
sbb
mov
sbb
or
mov
jmp
jp
xchg
mov
int
mov
sbb
xchg
cmp
cmp
(bad)
das
iret
and
jno
push
inc
fdivr
jo
icebp
mov
sbb
cmp
inc
jl
inc
add
add
add
mov
add
dec
hlt
jno
cmp
pop
shl
dec
mov
or
sbb
pop
and
icebp
retf
cdq
adc
imul
loop
mov
sub
push
int3
inc
daa
test
add
or
push
mov
lods
enter
popa
mov
scas
or
loopne
pop
out
dec
in
jbe
sub
cmp
and
hlt
push
xchg
pusha
pushf
mov
(bad)
sahf
add
inc
xor
push
out
rol
xor
and
rcl
imul
or
push
jle
mov
int3
xor
lods
sub
loop
cmp
push
aaa
dec
adc
inc
fmul
pop
inc
inc
cmps
imul
mov
sub
jmp
mov
push
arpl
loop
fdiv
movs
push
sub
push
xchg
ins
(bad)
lods
cmp
popf
lods
cmps
stc
clc
in
pop
addr16
inc
or
adc
push
outs
xchg
into
js
iret
pop
push
inc
ret
and
jb
int3
xchg
inc
retf
ror
sub
or
add
arpl
shl
sub
push
jle
jmp
jmp
icebp
dec
xor
test
mov
sbb
aad
xor
cmp
in
adc
loopne
inc
sahf
dec
fmul
dec
jae
sbb
test
add
push
inc
hlt
inc
push
retf
aad
mov
dec
jl
fld
js
sbb
(bad)
adc
dec
leave
lods
test
mov
and
jp
dec
and
jns
mov
mov
pop
test
fsub
fsub
mov
inc
lea
cmp
mov
fs
xchg
mov
mov
xchg
cmp
int
cmp
les
test
add
retf
xor
les
push
mov
mov
xchg
repz
jae
hlt
mov
or
iret
stos
cdq
mov
mov
hlt
out
push
xchg
pop
push
sar
mov
dec
bound
loopne
mov
jmp
ret
inc
adc
push
sbb
(bad)
jge
scas
push
rcr
jl
cmp
cmc
mov
adc
add
sub
cmp
aas
(bad)
fdiv
inc
inc
jge
xchg
sbb
fdiv
dec
pop
mov
add
out
xor
pop
jge
jecxz
push
cld
cli
mov
jge
mov
pusha
sbb
sbb
movs
push
scas
repnz
inc
das
lock
cmc
in
mov
mov
pusha
test
jle
scas
jns
ret
xchg
xchg
xchg
or
sub
cmp
push
jp
push
faddp
les
addr16
dec
sar
bound
jne
xor
sub
adc
xor
inc
dec
adc
push
push
das
test
test
mov
fs
pop
adc
outs
ja
nop
es
sub
mov
cmps
pushf
cmp
xchg
data16
and
cmp
xchg
mov
add
dec
popa
int
fimul
mov
movs
(bad)
mov
jbe
xlat
imul
mov
jge
push
shl
enter
pop
adc
and
out
iret
sbb
push
adc
cmps
cmps
aas
push
mov
stos
xchg
add
daa
stos
outs
sub
leave
sbb
sub
or
fwait
mov
cmp
add
dec
cmps
stos
cwde
adc
cwde
ins
daa
ins
and
cmp
xor
(bad)
mov
in
outs
xlat
(bad)
xchg
xor
adc
neg
retf
fwait
nop
mov
pop
les
cmc
outs
lds
add
mov
mov
push
dec
cmp
jp
(bad)
dec
add
adc
dec
gs
repz
pop
aam
xor
lods
int3
adc
test
sub
inc
ds
pushf
pop
mov
cmp
add
loop
add
sub
add
xchg
jo
scas
jnp
aaa
sbb
sbb
inc
and
and
outs
push
into
push
mov
popa
(bad)
mov
(bad)
jne
fs
(bad)
add
mov
jmp
push
js
jb
sub
pusha
or
inc
jge
pop
(bad)
mov
or
and
push
and
stos
and
vpaddsw
pushf
cmps
mov
mov
mov
xchg
into
rcl
ins
retf
mov
test
sbb
fnsave
fidiv
call
int
sub
and
shr
xchg
or
ds
inc
jle
popa
mov
push
cmp
aam
mov
pushf
std
fwait
out
adc
mov
call
sbb
mov
sbb
and
sub
sub
mov
loope
push
iret
icebp
mov
cmc
into
outs
or
out
sbb
jne
shl
pusha
mov
aaa
loope
dec
(bad)
loopne
xor
sbb
fidivr
int
inc
pop
test
mov
dec
in
dec
hlt
in
or
ins
xor
mov
(bad)
shl
or
imul
repz
sbb
pop
frstor
addr16
out
mov
and
lahf
div
mov
xchg
cmp
leave
test
test
enter
aas
repnz
je
inc
cs
retf
and
jnp
xor
mov
imul
rcl
add
into
or
fnsave
sub
inc
out
push
add
rol
stos
mov
loopne
push
div
fist
xor
xchg
mov
xor
out
lea
push
aas
and
cwde
and
and
enter
cmps
jne
sub
mov
sbb
arpl
dec
ins
es
mov
popf
add
add
add
add
adc
jle
sub
xor
push
mov
pop
cmc
loop
test
pop
call
xchg
shl
xor
js
call
ret
jno
cli
mov
mov
pop
scas
push
inc
leave
fs
enter
jmp
sub
mov
cmc
sbb
push
jb
(bad)
pop
or
dec
cmps
xor
mov
push
mov
sahf
ins
jne
inc
test
retf
imul
add
mov
pop
and
imul
or
and
pop
mov
test
mov
xor
push
mov
inc
xchg
rcl
ficom
mov
ja
push
std
mov
sbb
inc
xchg
popf
adc
push
test
mov
out
int
push
inc
sti
push
loope
mov
into
pop
mov
cmp
adc
sbb
pop
inc
add
cmp
bound
inc
sub
mov
sbb
in
sbb
pop
xchg
pop
fnsave
lock
ffreep
or
cmp
cld
aaa
sbb
fistp
jecxz
test
retf
sahf
test
cld
inc
cmps
clc
mov
fist
ret
scas
jns
mov
clc
fst
loopne
ret
shl
inc
std
outs
pop
in
out
cmp
and
into
dec
(bad)
xchg
ret
push
sbb
enter
lds
push
mov
loopne
(bad)
shr
push
adc
mov
(bad)
test
cmps
jmp
ins
(bad)
adc
sar
dec
mov
mov
jo
xor
sbb
pop
fwait
dec
push
sub
ins
pop
add
mov
mov
push
aaa
loop
sbb
xor
jb
int3
mov
sbb
add
fidivr
fisubr
cmps
sub
addr16
test
dec
dec
add
stc
xchg
test
iret
mov
mov
jae
mov
addr16
in
jno
(bad)
cld
pop
sbb
add
dec
or
(bad)
adc
out
sbb
push
xor
mov
hlt
lods
xchg
or
and
jle
loope
lock
retf
inc
daa
es
push
jle
inc
retf
ret
xchg
cmps
cmps
aaa
jg
xchg
push
cmp
push
imul
scas
test
ins
mul
mov
mov
push
xor
(bad)
add
add
add
add
add
inc
pop
pop
aaa
push
and
adc
adc
ins
cli
cmp
mov
int3
test
inc
adc
mov
add
inc
pop
jo
test
push
ret
mov
into
sub
les
cmp
sbb
in
and
adc
push
cmc
inc
and
dec
mov
mov
ss
jecxz
sbb
add
inc
mov
imul
sti
inc
cmp
imul
mov
or
cmp
les
aam
into
dec
or
xor
add
xor
fwait
inc
(bad)
mov
mov
dec
sub
inc
push
sbb
add
ret
jno
jmp
dec
inc
sahf
sub
mov
addr16
push
xor
clc
mov
lods
pop
mov
add
jmp
push
add
and
ss
and
xor
jbe
retf
jo
fmul
mov
ja
rcr
je
iret
xchg
add
cmp
xchg
enter
imul
nop
xchg
repnz
ret
xchg
cmp
pop
xchg
xchg
or
inc
in
mov
ja
and
pop
stc
vcvtsi2sd
dec
jge
imul
hlt
xchg
les
and
mov
sbb
jmp
mov
clc
outs
mov
shl
inc
xchg
xor
dec
pusha
add
in
add
aaa
mov
retf
cmp
sbb
jl
xor
add
scas
movs
pop
mov
test
shr
sbb
das
aad
lds
cmp
sar
int
and
pop
push
rcr
fidivr
call
nop
inc
mov
aas
dec
xlat
sub
push
ficom
adc
sbb
xchg
lds
stc
push
and
aam
and
xor
int
rcl
sbb
retf
in
mov
gs
rcl
(bad)
cli
sti
jmp
mov
in
repz
call
frstor
mov
mov
enter
cmps
inc
mov
ins
mov
cld
xor
outs
cmp
(bad)
mov
stc
push
rcl
ret
xchg
jnp
(bad)
loopne
cmc
out
jns
dec
jle
mov
test
fsub
xchg
cmps
jecxz
mov
loope
sahf
movs
cld
aad
movs
sbb
push
jno
mov
fld
call
imul
dec
cmp
inc
test
inc
test
arpl
jg
jae
push
push
imul
xchg
inc
call
rol
inc
ror
(bad)
(bad)
dec
xrelease
pop
pop
mov
jmp
lahf
out
outs
scas
mov
(bad)
repnz
jmp
cmp
cmp
xlat
fisttp
imul
dec
mov
loope
inc
push
sub
ja
jmp
fadd
adc
push
mov
mov
popf
add
pop
fld
mov
mov
mov
in
idiv
imul
mov
(bad)
pusha
sbb
xchg
xor
enter
cld
adc
push
pusha
in
lahf
(bad)
xor
or
dec
sbb
push
mov
in
cmp
pop
movs
in
sub
mov
pop
movs
mov
jne
or
mov
cld
mov
cmc
mov
dec
jg
push
add
add
or
jb
sub
cdq
fs
or
xchg
cld
and
adc
aad
loope
jecxz
jo
xor
jne
jae
mov
outs
les
std
loope
sub
adc
push
clc
div
lods
jmp
cwde
ss
mov
push
sahf
cmps
out
enter
je
push
xor
inc
xchg
or
les
mov
gs
and
xor
fst
jae
addr16
(bad)
mov
xchg
popa
loopne
jge
sbb
jbe
adc
data16
out
jo
pushf
iret
rol
test
outs
enter
add
lock
mul
ret
mov
loope
iret
mov
(bad)
in
pop
(bad)
dec
int
push
addr16
imul
out
xchg
adc
mov
inc
add
xchg
or
and
mov
sbb
sub
std
push
lods
pop
imul
sahf
movs
sub
hlt
scas
jmp
(bad)
imul
repnz
(bad)
movs
mov
add
jle
cmp
mov
dec
cmps
xbegin
aam
ror
xor
push
fcom
in
cli
cli
or
ins
retf
btr
je
adc
(bad)
call
xchg
sub
call
in
test
and
test
sbb
push
inc
pushf
rcl
ror
dec
ins
rol
jnp
gs
or
xchg
push
dec
sbb
and
mov
loop
push
imul
push
cli
cmc
push
or
faddp
add
in
call
sbb
fidivr
mov
xchg
outs
addr16
and
push
cli
pop
jbe
mov
add
ins
and
test
test
lock
(bad)
call
movs
aaa
add
test
pop
pop
fs
ret
pop
pop
cmp
stos
(bad)
mov
(bad)
cdq
cld
mov
push
dec
adc
mov
add
mov
neg
xchg
jbe
ds
popf
xchg
(bad)
cmps
sub
pop
xchg
cli
test
popa
and
mov
xchg
adc
aad
and
pop
cmp
cmps
fadd
sub
inc
and
push
adc
mov
or
xor
repz
inc
pop
movs
adc
inc
hlt
nop
push
and
ja
push
xchg
pushf
mov
daa
adc
sbb
pcmpgtd
jae
pop
mov
out
add
stc
sbb
retf
aaa
adc
sub
test
stos
scas
lds
mov
jmp
and
xchg
loopne
mov
adc
mov
repz
outs
in
mov
mov
iret
jl
arpl
leave
loope
inc
jmp
mov
imul
cmp
or
mov
movs
leave
addr16
adc
push
ins
fs
sti
retf
cmp
jno
loopne
fstp
inc
lock
pop
and
jbe
sar
fldenv
movs
dec
or
pop
jns
hlt
into
mov
test
jmp
add
jle
jmp
call
pop
mov
in
aam
add
sub
test
repz
push
outs
fldcw
mov
test
cmp
fwait
jp
out
hlt
sbb
lahf
inc
outs
cmp
test
cmp
add
lods
ins
in
fxch
add
sbb
aad
fst
dec
jne
cmp
or
xor
lahf
mov
out
in
je
leave
(bad)
pop
scas
pop
daa
cmp
ret
popa
mov
bound
or
dec
es
add
test
dec
xchg
les
int
dec
sti
int3
mov
mov
pop
cwde
(bad)
rcr
cmp
jp
pop
xchg
loope
popf
push
cdq
(bad)
call
dec
(bad)
xchg
ret
pop
sub
xor
into
cmp
sub
fadd
loopne
shr
and
popf
jmp
jae
adc
mov
adc
test
ds
or
mov
jge
call
cld
fwait
bound
std
out
push
or
icebp
inc
inc
cmp
jge
sub
addr16
outs
dec
push
les
aad
mov
dec
xchg
mov
enter
and
mov
sar
out
dec
sahf
pop
cld
inc
cmc
mov
mov
and
mov
xor
loopne
mov
scas
dec
movs
mov
int
mov
les
pop
cmp
inc
pop
mov
adc
xor
in
retf
fs
icebp
cmps
and
dec
and
sub
inc
adc
ja
pop
sub
inc
out
jae
lahf
jp
sbb
adc
jmp
ja
xor
lea
fldenv
in
retf
clc
and
inc
sbb
pop
and
stos
mov
pop
mov
jmp
arpl
push
xchg
mov
add
add
add
add
mov
pop
pop
aad
push
xchg
mov
outs
mov
movs
stc
sub
jecxz
jl
loopne
repz
jle
jbe
cdq
jne
scas
and
and
pop
outs
or
or
inc
jmp
popf
push
mov
or
xchg
xor
rol
mov
jecxz
pop
jmp
xor
ret
xchg
out
pop
mov
leave
cmp
ret
sbb
push
mov
lds
not
jo
sub
popa
fild
mov
sbb
sub
mov
imul
lods
shl
pusha
sbb
addr16
xor
nop
stc
out
lods
out
sbb
sahf
hlt
inc
add
test
mov
cmp
dec
add
(bad)
call
sbb
ret
pop
mov
imul
pop
daa
push
or
jbe
pop
(bad)
imul
sbb
fcomp
pop
and
int3
test
inc
sub
jmp
nop
int3
retf
(bad)
(bad)
sti
lock
inc
or
mov
xor
lahf
xor
mov
or
mov
lock
ret
cmp
jns
retf
adc
and
(bad)
dec
iret
scas
gs
loop
repnz
fdivr
ins
int3
rep
das
xor
jns
imul
cld
lods
scas
stos
mov
fxch
test
int
mov
test
push
or
push
scas
adc
ds
fild
jle
movs
add
sbb
dec
xchg
xchg
jo
and
sbb
adc
inc
jbe
clc
or
scas
sub
pop
test
jge
push
cdq
mov
mov
clc
stos
cmps
fadd
xchg
into
in
data16
push
push
fsub
xor
popa
push
mov
push
pop
dec
scas
pop
cmp
call
add
xor
cmp
clc
call
scas
in
in
stos
push
mov
xchg
cdq
mov
xchg
inc
iret
add
jno
mov
add
pop
jl
adc
mov
mov
retf
sbb
pusha
out
mov
(bad)
idiv
mov
ret
test
jmp
fs
stos
repz
aad
movs
retf
adc
leave
lds
or
cli
loopne
icebp
inc
scas
ins
jl
dec
mov
adc
sub
(bad)
aaa
jno
adc
scas
imul
ja
add
out
mov
mov
push
lock
loope
fild
iret
repz
aam
js
mov
enter
stc
mov
xchg
adc
jge
(bad)
push
in
inc
jmp
hlt
ins
and
jecxz
fstp
inc
add
push
xchg
lds
xchg
or
pop
mov
aaa
sbb
lds
cli
loopne
es
lods
clc
outs
loop
push
lahf
xlat
adc
fistp
popf
aaa
pop
mov
fsub
aaa
retf
mov
push
xchg
(bad)
push
cmp
imul
push
mov
sbb
test
pushf
fiadd
mov
fild
inc
add
push
mov
je
dec
frstor
mov
add
cmp
add
jecxz
outs
push
or
or
xchg
retf
imul
mov
inc
sbb
jne
cwde
xchg
rcr
(bad)
add
jecxz
jl
pop
fsub
mov
ror
sbb
shl
jg
add
add
pop
add
xchg
cs
aam
jb
push
fild
inc
lds
inc
jp
pop
mov
dec
xor
xlat
sub
xchg
push
push
in
sub
in
mov
mov
mov
fmul
sbb
xchg
call
std
jnp
sbb
bswap
xchg
mov
inc
push
adc
push
test
ret
or
sub
daa
adc
mov
es
nop
mov
ficom
fwait
pop
sbb
mov
adc
mov
mov
inc
ds
pop
outs
sahf
cmp
cwde
(bad)
and
push
xchg
jmp
pop
sub
shl
int3
sar
push
adc
call
push
sbb
cli
adc
pop
outs
pop
scas
push
test
push
cmps
outs
push
jle
mov
mov
nop
inc
(bad)
div
(bad)
mov
inc
mov
cwde
mov
sbb
or
or
mov
adc
sub
popa
inc
cmp
cmp
adc
(bad)
push
push
cmp
cmp
fsub
daa
in
and
cmp
aaa
xlat
sub
pop
stc
aas
mov
mov
cmp
clc
iret
fistp
sbb
les
dec
pusha
mov
bound
jae
adc
daa
mov
scas
pop
loop
sahf
xchg
adc
enter
push
and
fs
(bad)
out
enter
mov
mov
es
xor
mov
js
xchg
and
sub
mov
dec
outs
sahf
dec
test
ret
mov
cli
ins
aam
push
mov
add
shl
xchg
push
add
sbb
add
pop
mov
sub
fmul
je
sub
test
and
xor
add
mov
add
loop
cmps
iret
mov
out
mov
js
xor
push
(bad)
test
jns
out
sbb
mov
pop
xor
mov
dec
ret
dec
mov
jne
fimul
fsubr
xor
(bad)
or
in
ins
add
push
mov
repnz
mov
push
icebp
loop
push
mov
mov
rol
in
ret
scas
jo
add
add
lock
mov
jmp
out
mov
dec
in
clc
lods
jb
inc
pop
in
lods
sbb
xchg
sti
shl
cmps
enter
shl
mov
int3
out
dec
call
in
fwait
push
ds
mov
lock
push
mov
rol
(bad)
sub
and
mov
inc
adc
sub
and
cli
rcr
fbstp
shl
or
popa
movs
lahf
mov
xor
push
pop
jmp
outs
es
xor
mov
fst
pop
iret
pusha
push
lock
je
mov
dec
std
rcl
dec
jp
adc
pop
mov
mov
mov
cmps
xchg
popa
cmp
pop
push
sbb
mov
jbe
xchg
jb
and
std
test
add
xchg
aas
mov
push
inc
jp
icebp
mov
repnz
sbb
mov
inc
outs
jle
xchg
out
test
push
mov
xor
jmp
loope
mov
fistp
push
ins
pusha
push
dec
push
out
(bad)
mov
mov
xor
jg
and
jg
ja
xchg
stos
shl
adc
inc
cmp
jbe
jnp
sbb
or
fucomip
sub
sub
push
mov
mov
and
test
sahf
add
pushf
xor
push
xchg
cmc
ficomp
mov
and
fsub
cmp
sbb
xchg
jno
ds
jne
mov
in
or
in
cld
mov
(bad)
in
rcl
mov
aad
mov
adc
repnz
mov
xchg
xor
cwde
add
fsub
jge
aad
add
int
pop
sbb
loope
xor
jne
or
lock
arpl
add
(bad)
mov
dec
retf
push
push
mov
xchg
xchg
inc
add
mov
xor
popa
dec
(bad)
fiadd
pop
pop
js
aad
fs
out
cmc
xor
mov
aam
jge
pop
cmp
dec
mov
jne
cld
xor
loop
cs
and
icebp
adc
sbb
fdivr
sar
mov
out
jmp
sbb
jp
lock
jb
test
aad
xchg
sub
shl
push
sbb
xchg
jns
sub
loopne
push
js
xlat
les
gs
lods
xchg
int
out
xchg
sub
jae
mov
and
int3
mov
mov
xchg
jl
or
inc
push
shl
cmps
cmps
inc
fsubr
ret
out
inc
xor
cmp
sbb
dec
dec
popf
and
mov
xchg
fs
xor
adc
xchg
aam
outs
mov
push
adc
inc
cmp
mov
push
adc
mov
out
jne
inc
jg
dec
nop
leave
(bad)
mov
mov
int3
mov
frstor
adc
scas
ins
cs
fnsave
loopne
jl
pop
rcl
fwait
jge
std
les
or
shr
fmul
rcr
mov
and
cs
int
enter
ins
cld
outs
push
adc
xchg
ins
mov
jmp
push
fst
mov
test
bound
jmp
jl
jns
dec
push
push
inc
mov
mov
and
jle
add
je
jno
ss
push
rcr
adc
in
fwait
xchg
ss
jmp
cmps
(bad)
addr16
push
out
sub
stc
mov
fcomp
xchg
leave
pop
ret
test
push
and
shr
push
add
loope
stos
jbe
jbe
shl
popf
aad
mov
cmp
jbe
mov
fadd
shl
in
push
(bad)
clc
mov
push
pop
jbe
cmp
and
fsubr
mul
mov
sub
fmul
cld
mov
mov
jne
pop
add
xchg
repz
cld
cmp
in
mov
push
push
cmps
pop
rcr
and
sub
into
add
cs
mov
add
add
pop
add
adc
cdq
outs
xchg
sbb
mov
mov
push
repz
push
or
mov
ror
sub
in
jbe
out
sbb
fdivr
(bad)
stc
lods
ja
fbstp
ret
jbe
call
aam
mov
call
pushf
and
sbb
mov
in
sub
mov
sbb
enter
pop
push
mov
rol
or
pop
outs
ins
jmp
clc
(bad)
(bad)
and
xchg
add
and
lahf
mov
gs
xchg
cmp
xchg
cmp
(bad)
test
test
ds
adc
mov
push
cmps
or
and
xor
test
fcomp
sbb
cmc
add
stc
ss
ret
test
mov
dec
lahf
jbe
mov
ins
cmp
cmp
enter
gs
mov
cmp
and
fist
and
adc
push
jno
(bad)
movs
jb
pop
xor
ds
jmp
in
sbb
dec
push
stos
jge
in
ds
(bad)
push
(bad)
and
(bad)
bound
jno
jg
jmp
pop
enter
cmps
xchg
jbe
cld
push
icebp
mov
out
test
push
cli
pop
jg
inc
push
add
hlt
(bad)
adc
pusha
xchg
xchg
jecxz
xor
mov
bound
retf
scas
in
aas
out
cmp
pop
dec
dec
jge
add
dec
mov
and
add
ja
mov
adc
pop
ds
or
jl
(bad)
and
ja
jnp
mov
and
adc
sub
int
pop
shr
cmps
ins
out
jmp
adc
adc
je
test
bound
mov
retf
mov
popa
shr
(bad)
in
adc
mov
mov
imul
jbe
shl
and
(bad)
mov
push
jns
or
push
and
jecxz
jne
or
cmp
mov
pop
xchg
mov
pop
fs
cmp
cmps
and
les
test
in
adc
or
jge
jbe
push
mov
adc
fld
mov
pop
dec
and
adc
cmps
jmp
mov
sar
inc
and
or
ret
sbb
das
loopne
sti
push
xor
mov
sbb
adc
xor
les
cld
cmps
enter
std
xchg
push
fisub
xor
or
xchg
and
jg
sahf
cld
fisubr
push
xor
sub
dec
fild
and
adc
and
adc
int
mov
arpl
mov
or
mov
xor
sbb
pop
movs
dec
movs
stc
inc
sub
xchg
ficomp
push
xlat
push
sub
daa
adc
add
pop
pop
(bad)
cmp
in
outs
adc
sub
push
iret
mov
imul
adc
test
mov
sbb
(bad)
cwde
mov
out
retf
movzx
imul
loope
or
inc
add
push
pcmpeqb
cmps
in
or
fsub
repnz
pop
(bad)
add
sbb
adc
lods
(bad)
and
pop
jp
aam
loopne
(bad)
mov
xlat
gs
(bad)
mov
lds
mov
mov
mov
or
int
xchg
shr
enter
sbb
imul
pusha
out
cmp
pop
out
dec
push
mov
mov
xchg
inc
jge
sub
cmp
out
jecxz
xchg
call
pop
shl
aaa
enter
aaa
jbe
ins
ss
jns
std
jmp
loop
aas
shl
fisttp
and
lock
loopne
adc
cs
pop
mov
stos
xchg
cmp
xor
repz
cmc
add
cwde
scas
cmp
mov
loop
sub
mov
pop
(bad)
xchg
mov
and
sbb
out
dec
rcr
mov
pop
pop
int
int3
leave
ret
ins
sbb
mov
fcomp
gs
ds
rol
mov
std
push
iret
or
mov
(bad)
sub
int3
and
iret
movs
call
push
pop
inc
push
leave
and
in
xor
mov
jmp
data16
or
js
push
mov
cmp
stos
lahf
jmp
sbb
mov
mov
or
cmp
out
pop
daa
xor
ret
mov
fmul
jno
fmulp
and
and
mov
jge
add
shr
xchg
int
arpl
scas
(bad)
push
adc
scas
retf
xlat
sbb
cli
mov
or
xor
mov
in
int
inc
add
enter
add
pop
call
stc
dec
xor
es
jae
cmp
sbb
and
dec
mov
cld
push
jns
cmp
sbb
mov
cvtpi2ps
inc
sbb
(bad)
ds
bound
std
adc
push
xchg
lock
pusha
pop
sbb
test
mov
sbb
stos
test
rcr
js
xchg
dec
cmp
xor
fiadd
iret
scas
jb
cdq
jae
fmul
jge
adc
pop
fs
mov
lea
cwde
adc
mov
inc
adc
mov
test
sahf
jbe
adc
bound
jp
imul
outs
jne
dec
xchg
icebp
dec
or
imul
dec
arpl
test
mov
or
nop
loop
in
mov
cmp
cli
add
and
mov
mov
mov
xchg
lods
add
push
add
call
test
xchg
xor
xchg
rcl
sbb
popa
test
dec
fstp
sahf
jmp
test
push
xchg
test
jge
jb
xor
mov
and
lods
int3
(bad)
fiadd
(bad)
inc
test
in
mov
pusha
lea
retf
leave
es
cmp
add
lods
xchg
add
add
jp
mov
xor
(bad)
movs
inc
out
aaa
cmp
fsub
and
push
cmp
mov
cli
adc
or
sub
mov
jbe
popa
out
inc
cmp
add
sbb
xor
hlt
push
stos
mov
call
cmc
or
xor
popf
popa
jae
mov
cmps
daa
rcr
adc
outs
add
dec
mov
jp
shr
inc
movs
inc
loop
push
ficom
call
or
out
jle
aas
push
sub
in
mov
call
repnz
outs
int3
mov
sbb
mov
retf
cmp
lods
out
jo
rcl
shl
mov
mov
dec
ja
les
imul
fisub
mov
sbb
jle
icebp
bound
xchg
xlat
push
jmp
dec
icebp
push
push
add
pop
jle
xlat
xchg
mov
push
xor
js
pop
leave
ss
add
stc
sbb
inc
add
fcom
stos
pop
aad
cdq
(bad)
sbb
repz
in
rcr
cmps
pop
(bad)
in
jo
pop
cmps
js
jle
xchg
arpl
xchg
popa
or
lahf
hlt
mov
push
add
pop
popa
sbb
cmc
jmp
mov
out
mov
mov
ds
into
rcr
inc
es
pop
xor
mov
int3
imul
adc
push
jno
mov
sub
outs
mov
mov
pop
repnz
test
scas
in
repnz
cmp
and
ins
out
push
push
push
loope
int
mov
pop
mov
stc
outs
dec
mov
stc
stc
in
hlt
repnz
jo
leave
cld
cmc
add
cmp
clc
rcr
xor
add
mov
push
adc
xchg
iret
(bad)
xor
sub
pusha
lahf
lock
push
test
iret
cs
inc
jmp
adc
ja
(bad)
scas
inc
sbb
arpl
rcr
pop
out
clc
in
int
dec
das
pop
dec
jmp
outs
imul
jns
xchg
call
push
cmps
mov
jge
add
sub
sub
sub
sbb
rcl
push
or
jo
mov
mov
shr
push
pop
rcl
push
cmp
push
inc
pop
xchg
stos
fwait
add
xchg
test
push
add
or
popf
das
or
rol
cmc
test
cwde
in
push
mov
xor
rol
pop
cdq
iret
mov
push
add
or
cmp
call
int
jmp
cld
add
sub
xchg
dec
inc
push
push
xchg
fmul
out
push
inc
cmp
mov
sbb
fld
(bad)
sub
mov
mov
sbb
mov
adc
dec
hlt
xor
pop
xlat
push
xchg
stc
movs
int
ins
test
mov
and
outs
xchg
repnz
add
fadd
sub
add
mov
inc
or
mov
add
mov
mov
cli
mov
cmps
sub
ret
pop
iret
lahf
dec
mov
push
stos
scas
js
into
sbb
ret
sub
pushf
jne
les
test
jbe
mov
push
pushf
xchg
adc
jae
hlt
aas
jnp
xchg
ins
iret
xchg
imul
pop
mov
test
stos
ins
sub
enter
adc
sbb
test
dec
out
mov
jmp
dec
xchg
mov
shl
jmp
push
jg
push
daa
inc
sbb
out
(bad)
sub
jae
push
into
cdq
cwde
inc
cmp
cmps
xlat
ins
fwait
mov
neg
fcom
(bad)
aad
sub
imul
imul
aas
pop
loope
push
add
aas
sub
out
adc
ins
je
sar
aas
pop
pushf
add
call
jmp
ds
jp
test
or
icebp
out
pop
jmp
sub
call
in
xor
or
iret
pop
xchg
fs
mov
scas
test
mov
add
cli
pop
mov
pop
mov
adc
mov
lods
or
ins
out
iret
bound
add
jo
inc
enter
mov
inc
das
test
dec
push
shufps
xchg
inc
js
mov
mov
loop
xor
(bad)
(bad)
jmp
lds
pop
adc
(bad)
ins
dec
push
pop
(bad)
lods
shl
stos
pop
cmps
jne
in
and
cmc
mov
stc
out
(bad)
and
ror
push
xor
push
inc
pop
outs
and
adc
aas
sub
xchg
es
cmp
pop
sub
sub
sbb
test
movs
fisub
adc
sbb
adc
and
daa
and
push
cmp
add
scas
pop
dec
ds
xor
inc
lds
aam
mov
test
dec
sar
xor
jmp
mov
xor
inc
mov
into
retf
mov
inc
retf
stos
fwait
stos
js
(bad)
pop
push
adc
retf
ds
push
push
repz
cmp
dec
cdq
adc
(bad)
fdiv
cmp
lock
fidiv
test
push
pop
dec
imul
xchg
push
imul
dec
xchg
test
xchg
add
les
out
mov
sbb
addr16
add
leave
into
cmps
push
or
push
push
mov
rol
mov
fmul
ds
nop
fild
add
mov
adc
or
cmps
mov
or
sahf
fnstenv
xor
in
lods
sbb
push
scas
hlt
sar
(bad)
imul
mov
inc
mov
pusha
out
stos
into
lods
into
test
inc
fst
xchg
jg
adc
cmc
mov
out
pusha
call
dec
retf
xor
xor
adc
jne
fstp
int
xchg
xor
sbb
mov
dec
adc
std
pop
daa
fst
in
rol
dec
sbb
dec
test
push
sub
fdiv
pop
inc
xchg
test
mov
jecxz
adc
sbb
hlt
cdq
xchg
push
outs
(bad)
jmp
mov
sbb
mov
mov
(bad)
arpl
mov
popa
jmp
out
cmp
fs
push
push
fmul
stos
mov
xor
dec
inc
repnz
inc
jne
xchg
xor
inc
neg
mov
daa
cmp
pop
arpl
mov
sbb
pusha
xchg
aam
mov
dec
mov
(bad)
mov
imul
xor
and
add
rcr
pop
(bad)
mov
std
and
lods
inc
dec
sub
repnz
or
mov
int3
push
mov
sub
jecxz
rol
sbb
jno
loopne
jmp
lds
cmp
imul
addr16
adc
ss
xlat
test
ret
loopne
pop
mov
lods
test
retf
xor
mov
sahf
sub
dec
adc
mov
mov
inc
inc
das
pushf
push
jl
ins
inc
and
and
inc
dec
dec
cmps
xor
dec
push
stos
cmps
dec
mov
mul
jb
scas
cmp
jle
cmps
mov
retf
(bad)
popa
push
dec
jbe
ins
shl
sub
scas
clc
jmp
retf
mov
retf
add
jmp
ffree
test
and
test
add
mov
xor
call
dec
js
in
mov
stos
adc
imul
movs
mov
cwde
sub
gs
push
cld
sar
dec
lods
jb
sub
or
das
push
adc
mov
popf
jmp
(bad)
mov
retf
cmp
addr16
aad
or
mov
mov
and
inc
add
rcr
jmp
or
cmp
mov
xchg
out
sub
scas
out
pop
into
push
sub
push
mov
pop
mov
jo
xchg
cmps
lods
(bad)
sub
mov
sub
fnstenv
div
adc
mov
dec
inc
mov
and
xor
and
cli
sub
xchg
sub
add
repnz
jp
adc
sub
mov
mov
loopne
pop
xchg
fistp
out
clc
jbe
loop
int
fadd
ret
adc
mov
stc
mov
dec
pop
pop
adc
dec
les
add
mov
add
rol
add
fimul
lea
ins
dec
test
ja
or
lock
sahf
pushf
stc
cmp
popa
cmps
cwde
fist
xor
dec
jnp
jno
pop
and
inc
push
cmps
call
imul
push
(bad)
push
push
packssdw
mov
push
fisttp
adc
in
cmp
icebp
sar
int
loop
ins
inc
in
mov
xlat
nop
adc
mov
dec
mov
or
and
cmp
xchg
xlat
pop
cs
adc
jns
push
aas
outs
pop
dec
jmp
gs
push
sub
retf
dec
not
inc
xlat
into
aas
sub
dec
lock
in
dec
and
mov
ins
(bad)
es
and
or
xor
sub
pop
into
and
sbb
stos
add
cmps
mov
shr
cmp
mov
in
mov
and
stc
sub
cmps
mov
arpl
or
sbb
xchg
jae
cdq
pop
pop
xor
loopne
adc
ss
and
out
dec
sbb
mov
adc
jo
pop
sahf
pop
das
loop
sti
retf
inc
js
ret
xor
xlat
aaa
sbb
idiv
data16
movs
ror
enter
popa
sti
add
movs
mov
shl
xchg
sub
pop
loop
rcl
in
mov
push
jl
out
xor
retf
mov
sbb
bound
sbb
shl
in
inc
xchg
sbb
and
loope
pop
test
dec
hlt
inc
stc
push
ja
or
mov
(bad)
repnz
leave
inc
add
and
mov
pop
xor
jns
in
push
pop
sbb
mov
ret
push
(bad)
cmp
mov
pop
push
js
test
push
mov
jno
push
adc
or
and
fld
jmp
js
fidiv
cmps
fwait
xchg
sbb
mov
ins
movs
ds
cmp
not
jmp
in
retf
retf
jno
retf
mov
push
pop
enter
pop
jecxz
sub
aas
cmp
mov
iret
dec
lock
mov
clc
inc
push
jg
xchg
xor
or
loopne
cmp
scas
cmp
ror
imul
scas
daa
add
push
cmp
xchg
add
add
add
or
fld
fisttp
outs
mov
ins
ss
cmps
stc
lea
push
pop
sbb
and
xor
cmps
mov
aaa
or
jle
cmp
(bad)
sbb
idiv
js
add
dec
xchg
jae
arpl
mov
lahf
fmul
loopne
jge
mov
imul
rcr
dec
mov
ss
aad
cmp
test
retf
pop
mov
and
inc
push
arpl
cmc
call
mov
aad
out
inc
stc
aaa
or
mov
jp
sub
push
mov
test
in
ret
test
stos
int
add
pop
jnp
into
(bad)
bound
mov
mov
pop
adc
add
in
call
lds
stc
and
ins
sub
inc
ss
add
pop
test
enter
cmps
nop
jmp
retf
mov
pop
or
shl
(bad)
int
push
dec
xchg
sbb
lea
cwde
add
xchg
fwait
push
mov
cwde
push
inc
push
es
out
fcom
mov
xor
push
outs
(bad)
(bad)
scas
enter
add
movs
and
mov
fwait
mov
and
(bad)
int3
(bad)
xlat
push
xor
pop
xor
mov
xor
stos
mov
sbb
scas
adc
clc
stc
pusha
mov
out
in
ficomp
sbb
mov
movs
das
fidivr
cmps
imul
jl
push
sbb
inc
and
mov
cmps
inc
add
adc
xlat
shl
jg
push
push
or
addr16
adc
imul
inc
push
sub
outs
adc
push
adc
js
pop
ret
mov
bound
xchg
inc
je
shl
cmps
dec
ins
push
xchg
dec
dec
adc
jo
je
addr16
stos
inc
dec
fxch
ret
fbld
mov
popa
mul
(bad)
ins
push
loopne
or
mov
out
(bad)
inc
push
scas
jo
ins
xlat
jmp
sub
mov
test
jl
xchg
or
(bad)
gs
sub
pop
(bad)
aaa
loope
adc
push
inc
test
mov
rol
aaa
imul
inc
cli
jg
push
or
sahf
ins
les
or
push
inc
mov
and
test
fcom
mov
hlt
stos
mov
test
cmp
xchg
les
sub
int
rcr
cmps
pop
mov
or
lods
or
mov
cld
outs
pop
fsubr
imul
xor
das
mov
cmc
jl
push
mov
mov
ret
cmps
inc
data16
dec
push
cdq
sub
imul
adc
leave
jne
dec
pop
pop
popa
fmul
icebp
pop
shr
addr16
fbld
add
jg
jp
or
addr16
add
rcr
(bad)
jno
mov
mov
jle
sub
sub
shr
(bad)
xchg
cs
xchg
mov
sub
dec
mov
dec
jae
sbb
retf
and
rcl
jnp
add
into
add
add
scas
ficom
inc
push
sar
scas
push
and
push
and
mov
push
push
imul
xchg
xchg
mov
stos
outs
rcr
jecxz
add
cmps
xor
add
imul
movs
in
jecxz
loop
sbb
(bad)
dec
pop
ins
je
jnp
aaa
mov
add
das
push
fidivr
aas
jl
add
xchg
dec
add
adc
sbb
mov
dec
xchg
xchg
in
js
sub
sub
rcr
jmp
adc
pushf
mov
in
cmc
fist
repz
cmp
(bad)
sub
mov
cmc
sbb
fisttp
add
cmp
std
or
pop
inc
pop
add
fsubr
cli
das
mov
or
loope
test
stc
xor
(bad)
lahf
pop
add
inc
fst
mov
jno
js
add
outs
sbb
sar
pop
or
sbb
add
or
arpl
xor
and
jmp
mov
ficom
sbb
mov
pop
pop
fdivr
jmp
jae
loope
xlat
shr
frstor
aad
enter
mov
mov
loop
xchg
mov
mov
jmp
cmps
mov
popa
retf
mov
jns
add
adc
add
lahf
pop
fwait
xor
inc
mov
adc
cwde
aad
xchg
scas
dec
push
push
int
jp
lock
cmp
inc
mov
cmc
push
shl
call
mov
or
imul
add
inc
(bad)
cmp
xor
dec
nop
mov
scas
mov
xchg
test
cmp
arpl
lahf
dec
push
outs
(bad)
cli
sub
imul
mov
sahf
sub
adc
add
add
add
add
add
sbb
xor
aas
mul
xor
ins
in
(bad)
(bad)
or
aam
pop
mov
sbb
mov
jo
cdq
fcomip
push
bound
data16
outs
les
loop
sbb
sbb
cli
pop
loope
push
adc
pushf
test
aas
jb
push
cmps
adc
ins
ret
or
out
shl
in
sbb
repz
push
test
xor
arpl
fwait
test
mov
pushf
mov
jo
and
jno
mov
push
jno
sub
stc
jg
xor
jmp
aas
(bad)
fld
mov
sub
repz
leave
or
lds
enter
inc
jns
jns
and
popf
in
mov
ds
retf
pop
xor
jmp
xchg
mov
sbb
cmp
and
mov
or
test
(bad)
ret
pop
mov
mov
lock
pop
push
xchg
imul
xor
xchg
adc
mov
pop
pop
ins
icebp
mov
int3
mov
cmc
push
xchg
(bad)
mov
jnp
push
in
or
xor
mov
mov
fwait
add
jbe
mov
pusha
cwde
in
cmps
scas
stos
xor
jno
test
lds
push
add
add
push
add
pop
push
add
popa
cmp
jns
jecxz
pop
inc
sahf
fild
in
out
jnp
call
outs
ret
push
inc
nop
dec
mov
adc
leave
xchg
outs
mov
adc
iret
mov
ds
jecxz
stos
xor
in
inc
ror
sub
dec
popa
push
pop
loop
adc
clc
clc
ja
fidivr
rsm
mov
add
sub
mov
cs
jge
lods
mov
xchg
fwait
repz
push
int
mov
add
les
(bad)
popa
inc
(bad)
out
movs
bound
(bad)
outs
fidiv
leave
mov
xor
jmp
cmp
push
mov
addr16
mov
je
push
out
inc
sub
xchg
daa
sub
xor
adc
adc
and
or
sub
cmp
pop
iret
add
aad
cmp
ds
iret
mov
adc
cwde
call
popf
in
or
push
(bad)
cmp
into
xchg
mov
add
jp
pop
sahf
xchg
inc
ss
ins
das
mov
sbb
push
dec
mov
test
pop
fadd
inc
push
movs
mov
xchg
cmp
mov
xlat
push
ins
mov
stos
jmp
ret
in
push
xchg
sbb
jnp
(bad)
stos
lods
xchg
sti
cdq
stos
dec
lock
lea
dec
jae
les
sbb
ds
pop
mov
mov
cdq
loop
std
arpl
movs
add
inc
popa
sub
loopne
jo
sub
push
add
or
(bad)
das
bound
jo
(bad)
jmp
jge
jp
rcr
cmps
or
xchg
mov
mov
add
int3
shl
fadd
add
xor
pop
fmul
sub
out
movs
clc
out
sbb
mov
dec
push
and
or
add
mov
repz
cs
mov
test
mov
cmp
or
cmp
int3
ret
jo
bound
imul
or
adc
sbb
retf
push
jbe
or
ds
mov
xlat
pop
mov
inc
adc
sbb
popa
jae
mov
in
push
out
dec
adc
imul
in
lds
push
lock
fidiv
(bad)
pusha
jmp
dec
push
inc
and
in
out
mov
jmp
jnp
shr
popa
test
(bad)
and
popa
pop
and
mov
or
jmp
retf
rcl
movs
xchg
sti
pop
loope
hlt
add
rcr
stc
rcl
retf
fld
out
mov
aad
dec
dec
imul
mov
stos
add
or
mov
adc
mov
lods
test
std
out
add
add
add
mov
push
jl
sbb
sbb
cmp
mov
mov
dec
and
xchg
das
out
mov
pop
hlt
xor
in
add
xor
ins
mov
adc
loope
push
jae
xor
daa
cmps
retf
bound
es
addps
mov
jecxz
mov
or
pusha
and
jb
repz
push
pop
repz
xchg
xchg
stos
dec
and
mov
adc
ds
adc
daa
jmp
int
mov
or
add
arpl
xor
mov
cld
sbb
lock
adc
popf
inc
hlt
sbb
mov
jg
cmc
sbb
push
addr16
sbb
adc
test
sub
idiv
push
push
jbe
and
mov
imul
inc
jl
dec
adc
sti
repnz
adc
loop
mov
jge
mov
xchg
(bad)
adc
neg
scas
and
mov
leave
and
sbb
mov
cmp
fisttp
sbb
loopne
pushf
add
or
jle
dec
xchg
ins
iret
or
(bad)
pop
inc
rcr
push
lods
ja
xor
xchg
(bad)
xchg
cmp
mov
cmps
cli
ret
out
and
fsub
bound
shl
fdiv
jecxz
mov
jecxz
dec
int3
fwait
jns
inc
pmulhw
sbb
jl
xchg
pop
adc
jns
sahf
inc
adc
cwde
hlt
pusha
pop
jb
dec
lock
(bad)
int
popa
nop
fmul
sahf
xchg
push
sbb
pop
test
mov
add
stos
hlt
cld
sub
dec
xor
mov
ins
inc
in
sub
add
push
jnp
jmp
shl
inc
pop
and
pop
pop
test
dec
imul
and
push
pop
mov
mov
cmp
cmc
jno
jbe
or
push
nop
mov
in
adc
inc
add
inc
sub
aam
add
dec
std
das
inc
loopne
stc
pop
mov
(bad)
sahf
and
dec
es
sbb
lods
jae
popf
jle
jb
mov
jo
sbb
dec
loop
call
jecxz
sub
jb
leave
jp
jne
cmc
jno
cmp
loop
sub
test
jp
mov
mov
cmps
int
mov
hlt
push
push
cmp
push
pop
cmp
fadd
jge
push
sbb
(bad)
cmp
out
mov
mov
loopne
sub
imul
and
dec
xchg
mov
push
mov
call
mov
fldenv
popf
repz
ds
cmp
mov
test
sahf
jmp
sub
jnp
inc
mov
iret
dec
rcl
pop
xchg
push
pusha
inc
xlat
mov
add
add
pop
add
or
inc
mov
cmp
mov
jno
mov
stos
push
adc
xor
test
mov
inc
xchg
dec
imul
aaa
in
test
into
movs
xor
or
fbld
popf
xor
hlt
out
adc
test
jo
push
or
xor
call
jecxz
and
loopne
mov
test
addr16
cmp
dec
push
jmp
inc
jmp
ror
mov
jg
jne
fwait
pop
mov
cmp
fnop
mov
push
pushf
shl
xchg
push
sub
mov
cmps
cmc
nop
call
inc
scas
xor
repz
or
mov
adc
mov
ret
pop
sar
into
out
popf
(bad)
stos
hlt
xor
fucomi
xor
rcr
icebp
xor
ja
pop
loope
call
xchg
xlat
sub
jbe
pop
cmp
pop
call
movzx
ins
int3
xor
sbb
mov
mov
dec
push
sbb
js
aam
pop
mov
xor
add
add
xor
nop
fs
adc
xchg
jo
imul
or
cs
sub
lds
enter
jne
or
ja
add
or
pop
push
jns
mov
inc
cmp
jecxz
ins
sbb
in
cs
pop
call
and
xchg
cmps
jmp
or
in
fisttp
test
xchg
addr16
add
mov
dec
lock
mov
in
bswap
sbb
fstp
xchg
js
inc
ror
sbb
retf
mov
and
sbb
and
or
or
imul
bnd
sub
rcl
les
rol
call
std
shr
mov
bound
add
mov
xor
adc
and
inc
aad
cmps
stos
sbb
cmps
jae
cdq
sbb
sbb
and
mov
xchg
shl
sbb
pop
cmp
and
xor
mov
outs
push
stos
fidivr
mov
mov
or
ins
mov
mov
shr
ds
ret
(bad)
repz
icebp
fnstcw
icebp
cmp
and
dec
cmp
push
mov
(bad)
xlat
jae
into
shl
xor
inc
fmul
inc
mov
sub
pop
stos
ja
or
mov
pop
mov
lock
rcl
(bad)
enter
rcl
jo
dec
ins
ds
fdiv
add
cmp
jo
adc
mov
repnz
add
mov
pop
test
mov
cmp
pop
out
out
enter
retf
lea
mov
push
lahf
(bad)
test
enter
aad
xor
test
sub
adc
add
sbb
or
cmps
jb
int
xchg
push
sbb
aas
push
and
popa
outs
(bad)
dec
int3
jle
cmp
push
xchg
push
mov
popf
sub
test
loope
mov
lods
sbb
pop
or
mov
daa
jmp
aam
mov
pop
pop
push
sub
and
je
es
push
inc
inc
mov
and
fnsave
sbb
in
adc
retf
mov
sbb
les
retf
test
pushf
inc
call
nop
pop
bound
or
(bad)
scas
fist
(bad)
(bad)
aaa
stc
jnp
jns
sub
jne
in
in
add
test
fisub
dec
imul
add
aas
fwait
adc
and
inc
enter
inc
sub
retf
xchg
daa
stos
jmp
add
aad
(bad)
nop
add
out
sbb
in
scas
add
mov
inc
or
pushw
pop
cmps
jnp
dec
add
inc
(bad)
cld
(bad)
push
inc
stc
push
mov
mov
je
nop
dec
jmp
jge
cmp
xchg
cmp
add
jle
jle
sub
lods
inc
jmp
pop
xor
sub
jns
jmp
sub
fst
pop
fst
(bad)
clc
les
add
add
mov
je
pop
das
pop
xor
xchg
pop
mov
cdq
mov
dec
outs
push
out
aas
mov
pop
sub
cli
mov
outs
pop
ins
add
inc
ret
nop
out
test
ret
test
push
(bad)
mov
js
push
ss
into
add
lods
in
mov
mov
push
std
aad
jmp
cmp
retf
jo
aam
aaa
out
or
je
out
sar
aam
pusha
into
nop
jge
(bad)
and
inc
bound
jo
jecxz
pop
mov
xchg
mov
(bad)
jbe
aad
adc
mov
cmp
jg
jnp
inc
and
xchg
jp
scas
fmul
loopne
into
jns
mov
test
xchg
fwait
mov
jg
xchg
inc
or
lock
enter
aaa
rol
stc
lea
loop
mov
cmps
jns
and
fidiv
ins
sbb
mov
mov
ins
xlat
sub
test
xchg
xor
pusha
dec
xchg
popa
inc
icebp
lods
dec
js
adc
pop
lea
je
sbb
fld
xchg
xchg
xor
aas
loop
(bad)
ss
cmp
add
jb
int3
cmp
sbb
jmp
lea
int3
or
mov
dec
hlt
shr
pop
add
test
enter
mov
scas
addr16
cmp
xchg
and
mov
jle
jg
call
daa
ja
dec
test
cld
add
out
fdiv
daa
popa
rcr
dec
shr
sahf
aad
pop
sub
xchg
stos
daa
and
fdivr
mov
and
lock
shr
push
jmp
popa
adc
inc
xchg
pop
pop
fnstenv
dec
cmp
mov
fdiv
dec
or
mov
push
movs
and
in
cmp
adc
(bad)
adc
pushf
mov
jge
xchg
dec
dec
call
cmp
arpl
test
repnz
push
mov
pop
jmp
movs
push
sahf
int3
repnz
lods
pusha
jo
mov
fisub
(bad)
movs
movs
les
mov
xlat
cmp
cs
sbb
pusha
adc
xchg
mov
mov
ret
mov
adc
iret
and
repz
push
push
test
aaa
and
jb
pusha
std
pop
rol
nop
mov
movs
cmc
and
out
sub
pop
test
mov
dec
sub
test
sub
push
out
(bad)
mov
pop
jg
(bad)
dec
or
rcr
dec
mov
ins
cmc
inc
shl
pop
jp
adc
cli
push
sub
or
xchg
(bad)
lods
lds
(bad)
aas
(bad)
jae
lods
and
add
add
stc
pop
add
add
push
inc
shr
mov
push
jmp
stos
in
dec
cmp
dec
loope
adc
jo
arpl
js
stos
iret
daa
loop
ins
pop
push
cmp
mov
dec
mov
adc
mov
mov
jl
mov
les
inc
inc
or
push
cmp
loopne
stc
add
add
pop
fiadd
mov
pop
push
lods
aad
jnp
lods
fldenv
in
push
pushf
mov
or
enter
repnz
jl
jge
bound
mov
retf
mov
ins
arpl
sbb
ds
xlat
inc
mov
push
aaa
icebp
lods
jge
inc
fcomp
or
les
jg
sar
bound
mov
pop
cld
inc
addr16
xchg
arpl
adc
or
aam
push
movs
mov
retf
cdq
mov
(bad)
cmp
adc
mov
div
cdq
scas
dec
push
cdq
mov
mov
mov
cdq
into
mov
sub
mov
rcl
popa
jmp
int
xchg
jno
div
mov
or
pushf
sbb
adc
(bad)
fimul
cmp
xchg
arpl
lea
mov
iret
adc
adc
dec
retf
leave
jnp
pop
mov
fist
sbb
retf
cmp
pop
jnp
xchg
sbb
cmp
adc
aad
xchg
ret
and
cli
rol
dec
pop
dec
cmps
cmp
mov
and
jp
mov
sub
(bad)
lods
xor
dec
dec
push
add
ror
mov
and
hlt
jbe
or
mov
shl
jl
and
inc
jge
jecxz
ret
dec
fnstcw
mul
push
cmc
dec
in
cmp
xor
jl
add
or
jle
add
mov
fwait
dec
sbb
rcl
mov
pop
jmp
mov
inc
outs
xor
cmp
jmp
rcr
inc
sar
mov
xchg
imul
fbstp
or
test
xchg
retw
mov
js
jecxz
mov
mov
cmp
push
je
adc
xlat
fld
adc
loop
jg
add
inc
(bad)
ja
cmc
sub
adc
retf
retf
sub
fisttp
ja
mov
sub
fisttp
pop
into
pop
push
push
cdq
adc
sbb
mov
pop
fldcw
arpl
sub
inc
pushf
and
pusha
jne
sbb
mov
adc
(bad)
push
and
inc
fcom
imul
out
(bad)
mov
mov
sahf
icebp
jns
add
xlat
in
xchg
cli
loopne
cmps
fidiv
sbb
sub
jnp
iret
loope
repnz
inc
or
icebp
and
stos
xchg
(bad)
aam
repnz
mov
rcr
scas
mov
ja
mov
fiadd
aaa
push
fcomp
jecxz
push
int
jp
cmp
je
adc
mov
xchg
movs
js
rcl
mov
xchg
test
out
add
mov
lahf
xor
les
sub
xchg
cmp
pop
out
in
sbb
inc
and
lock
ins
(bad)
jecxz
data16
(bad)
out
pop
call
pop
jb
ret
out
imul
(bad)
fldenv
mov
imul
xchg
lds
adc
fstp
inc
jb
out
aaa
adc
push
mov
inc
mov
sub
(bad)
in
inc
fcmovbe
hlt
push
int
jae
fisubr
cli
or
fstp
retf
jmp
adc
(bad)
fsub
xchg
dec
rcl
add
popf
clc
xchg
repnz
add
pop
repz
xchg
cmp
dec
push
es
leave
xchg
loopne
outs
push
xchg
sbb
cld
jg
arpl
fnstcw
movs
adc
sahf
ds
push
mov
dec
or
shl
and
aam
lods
dec
inc
jnp
ret
xor
test
inc
xchg
pop
add
aam
or
sub
cmps
cmp
mov
push
mov
fs
into
push
mov
aad
mov
pop
std
mov
cdq
add
or
jmp
adc
mov
add
repnz
add
inc
sbb
cmp
jmp
add
mov
mov
inc
fisubr
push
sbb
mov
cmp
jne
repnz
push
mul
lock
adc
cmp
(bad)
lods
test
cmp
jl
cs
or
std
in
mov
pushf
fstp
push
shl
mov
in
stc
pop
or
ret
test
outs
add
push
dec
scas
mov
aam
mov
xor
jbe
xor
fidiv
mov
(bad)
jnp
jmp
push
fdiv
mov
mov
mov
inc
clc
ja
cmp
stos
es
rcr
jnp
gs
pop
add
ret
(bad)
fistp
mov
mov
xchg
inc
dec
lock
imul
pushf
and
das
xor
dec
fist
pop
jmp
rcl
fidivr
sub
imul
std
shr
mov
cdq
cld
adc
xlat
loope
inc
and
data16
inc
and
pop
shl
in
mov
loop
movs
xchg
xor
xchg
cld
jmp
cmp
test
repnz
and
push
aam
jle
ins
sar
xchg
rcr
and
loop
and
pop
cmc
mov
or
lods
xchg
test
mov
ja
cmc
pop
fcom
pop
sar
test
xchg
test
sbb
(bad)
sub
mov
mov
pop
or
fdivp
xchg
dec
shl
nop
lock
and
jge
xchg
cs
lds
lds
sub
scas
fdiv
cld
xor
or
fnsave
cmp
mov
jg
popa
mov
cdq
imul
arpl
cmp
pusha
inc
mov
mov
jns
inc
out
out
mov
adc
jno
jecxz
add
mov
mov
in
mov
dec
jne
jnp
les
mov
push
xor
inc
xchg
(bad)
test
cwde
bound
retf
inc
dec
mov
call
xchg
inc
jmp
out
sbb
sar
int
cmp
add
aad
cwde
push
aad
mov
aam
and
sub
fs
fcom
ffreep
pushf
jnp
(bad)
outs
sub
jo
jmp
rol
add
arpl
add
add
add
sub
xchg
mov
cmp
cli
retf
ins
inc
js
cld
(bad)
cmp
sbb
imul
dec
popf
jns
push
jmp
outs
mov
mov
mov
loope
in
and
stc
outs
add
xor
push
sahf
(bad)
int3
std
pop
mov
add
cdq
jle
les
xor
lds
or
repz
adc
das
cmc
fxch
arpl
xchg
sbb
push
clc
out
or
push
sbb
fs
div
dec
call
jns
sub
cld
inc
retf
push
(bad)
jb
pop
or
aad
loope
dec
out
icebp
or
cmc
jns
mov
sbb
xchg
xchg
cmp
sbb
push
and
(bad)
pop
jg
and
push
cmp
(bad)
movs
(bad)
dec
adc
aam
mov
call
enter
jmp
(bad)
stos
sbb
shl
add
sbb
push
js
aaa
clc
sub
js
cmp
or
into
arpl
push
adc
ins
ret
sahf
add
pop
xchg
iret
sub
div
mov
out
out
mov
pop
push
pop
in
pop
pop
inc
retf
loopne
pusha
je
icebp
xchg
(bad)
aaa
and
pushf
mov
dec
pop
cs
mov
or
call
and
fst
mov
pop
push
ins
and
aam
jecxz
cmp
cmps
jns
push
mov
ins
sbb
int3
imul
test
adc
int3
cmp
les
shl
ja
sub
mov
test
inc
leave
cld
(bad)
xchg
jge
and
mov
fwait
push
mov
jp
mov
inc
and
ins
inc
mov
pop
inc
and
mov
xor
push
xchg
mov
adc
cmp
inc
mov
clc
fisubr
mov
(bad)
popa
call
mov
mov
push
and
cmp
jmp
(bad)
(bad)
jo
sub
out
js
push
call
pop
mov
add
jo
lds
xor
push
xor
shl
cwde
imul
mov
cmp
ins
or
lods
out
cli
sti
call
mov
mov
inc
or
outs
(bad)
jecxz
jne
nop
adc
test
scas
cdq
sub
mov
xor
arpl
pop
or
jne
or
enter
nop
popf
scas
mov
out
cmp
pusha
in
or
ins
inc
enter
fsubr
mov
and
ins
mov
dec
mov
(bad)
popf
(bad)
dec
aad
sub
or
xchg
cli
adc
gs
sbb
adc
dec
into
xor
and
aad
mov
call
fistp
(bad)
xor
xor
sub
cs
xchg
inc
pushf
fdivr
pop
popf
aas
int
lods
(bad)
xor
imul
sub
mov
(bad)
out
jmp
ret
mov
adc
or
sbb
sbb
jae
(bad)
push
sbb
cwde
outs
std
repnz
imul
out
pop
mov
mov
or
mov
cmps
adc
(bad)
aad
rcl
ror
scas
fcom
cmp
and
pop
fdivr
addr16
cmp
fisttp
ja
and
sub
into
dec
or
mov
mov
xchg
ja
fdivr
jecxz
sub
les
mov
lock
xchg
push
jg
sub
movs
(bad)
push
loop
in
inc
out
cmp
push
cmps
sbb
xchg
out
cmp
adc
aam
push
mov
mov
fisub
mov
addr16
lock
int
jp
pop
js
(bad)
popa
dec
es
rol
xchg
sbb
dec
or
rcr
clc
fdivr
clc
add
add
add
cli
xor
or
sbb
cmp
jmp
inc
fiadd
pusha
inc
inc
hlt
add
pop
dec
push
leave
pop
xchg
daa
shl
sub
es
enter
jne
cdq
jmp
fidivr
aad
outs
popf
call
mov
or
push
push
or
pusha
jo
or
call
mov
add
jl
cwde
or
adc
jl
fdivr
leave
push
fist
jno
ins
int
out
fstp
pop
fistp
push
jno
mov
pop
call
push
add
sub
push
bound
jl
sub
dec
into
dec
jns
aas
rcr
fcom
fmul
icebp
cmps
jmp
mov
fs
add
call
or
mov
enter
mov
stos
xchg
loope
rdtsc
test
(bad)
(bad)
clc
daa
inc
fcomi
ret
jo
enter
add
dec
inc
sbb
loop
nop
cmp
arpl
rcl
nop
movs
xchg
and
add
out
fucomi
and
repnz
xor
movlps
mov
add
lock
sbb
xor
add
pop
xor
inc
mov
(bad)
jl
and
call
mov
cli
add
sub
cmp
pop
add
mov
mov
adc
sub
jns
das
ret
aam
outs
aas
add
and
mov
mov
fcomp
(bad)
scas
ret
cmps
mov
xor
xchg
popa
into
ins
aam
sub
jmp
xchg
imul
test
mov
jp
rcr
inc
xor
pop
inc
or
jno
ja
push
out
add
pop
sahf
jl
mov
mov
(bad)
mov
jno
jle
jl
clc
push
shl
popf
div
lds
ret
imul
xor
out
or
es
lock
mov
test
adc
push
loop
ret
push
in
fadd
call
sub
cmp
cmps
and
iret
pop
xchg
mov
mul
push
idiv
or
sbb
data16
jns
aaa
(bad)
out
push
mov
or
mov
fwait
push
rcr
stos
add
jmp
fs
add
add
xor
pop
add
pop
and
adc
jbe
add
sub
movs
mov
(bad)
jecxz
fdiv
stos
(bad)
and
inc
fiadd
aad
push
add
hlt
lock
cdq
popf
inc
mov
xor
fucomip
dec
call
push
stos
in
and
fdivp
mov
loope
ror
jmp
arpl
cli
jge
adc
cmp
ss
iret
xchg
daa
cmp
or
outs
adc
mov
sahf
push
sbb
pop
rcl
adc
add
xchg
pusha
enter
push
push
or
mov
mov
test
hlt
retf
test
sbb
movs
mov
cmc
jae
je
sub
pop
sbb
or
xor
mov
(bad)
adc
mov
sub
inc
or
push
jl
movs
dec
jae
in
and
cdq
retf
pushf
mov
pop
outs
movs
pop
out
cmp
jmp
arpl
outs
rcl
push
jae
test
int
sub
into
(bad)
mov
sub
push
fcmovne
pop
retf
xor
outs
fnstcw
icebp
arpl
les
sbb
leave
mov
inc
inc
xor
sbb
mov
ret
push
pavgw
aam
mov
push
adc
inc
dec
clc
mov
mov
js
xlat
jns
daa
jmp
ret
lock
jge
shl
dec
vmwrite
jno
jo
sbb
mov
sub
je
inc
lods
mov
mov
out
adc
dec
shl
mov
ds
ss
mov
cmc
mov
push
retf
jecxz
test
pop
inc
push
xlat
test
jecxz
and
popa
enter
mov
test
adc
add
jb
scas
imul
(bad)
xor
jnp
in
das
addr16
dec
and
in
aam
mov
sbb
call
aad
ficomp
push
fnstenv
fwait
aam
ds
rol
cld
cld
fcom
mov
pop
test
or
push
mov
lahf
leave
sbb
scas
or
mov
xchg
cmp
xchg
mov
sbb
daa
or
mov
ror
xor
das
cmp
mov
inc
ss
sbb
jns
xlat
sbb
push
ror
repnz
mov
pop
popf
jbe
mov
(bad)
(bad)
sbb
adc
jmp
popf
jb
or
ret
std
cmp
leave
rcr
call
addr16
jne
outs
jo
push
adc
mov
jmp
in
int3
icebp
movs
mov
add
psubusb
pop
and
dec
xor
cmp
xchg
pusha
pusha
fdiv
loopne
jmp
retf
or
push
push
ds
pushf
icebp
cmp
outs
cmp
(bad)
shl
icebp
mov
outs
mov
dec
mov
fwait
or
or
(bad)
aaa
sbb
pop
out
mov
adc
or
push
xor
and
cdq
arpl
out
xor
aas
imul
xchg
dec
imul
(bad)
fstp
jnp
xchg
sbb
cmp
jle
inc
mov
mov
inc
retf
adc
sbb
lods
mov
loop
xor
sub
cmp
sbb
add
loopne
repz
jp
fstp
lea
(bad)
in
stos
bound
popf
ret
cmps
adc
stos
inc
adc
fwait
inc
sub
xor
jb
aas
movs
out
push
pushf
jecxz
loope
xchg
and
idiv
xor
add
std
adc
mov
aas
lds
test
lock
pop
(bad)
mov
xchg
stos
fidivr
jle
int3
and
mov
pop
arpl
mov
pop
pop
sub
mov
mov
dec
mov
fdivr
fadd
inc
lods
shr
jp
das
cmps
int
mov
mov
std
mov
mov
repnz
cmp
dec
cli
pop
xor
sar
hlt
ins
xchg
mov
call
mov
int3
retf
inc
jne
sbb
pop
pop
xchg
cld
push
rcr
loope
outs
add
or
pop
fcomp
adc
cmp
inc
cwde
pop
sub
cmps
test
cli
mov
xor
pusha
sub
in
test
xchg
dec
mov
(bad)
xchg
or
xchg
outs
call
arpl
ror
fbstp
mov
push
clc
rol
aaa
imul
dec
fcmovnbe
add
push
pop
std
iret
fucomi
repz
(bad)
in
aas
xlat
rcl
add
mov
xor
xchg
bound
call
sub
mov
mov
das
pop
xchg
test
and
loop
cmps
rol
jae
(bad)
xchg
lds
cli
mov
in
jo
hlt
shl
(bad)
add
stc
and
cmps
leave
gs
mov
xchg
retf
fcomp
icebp
scas
jmp
sub
(bad)
cmp
clc
das
mov
xchg
jg
add
test
call
mov
sti
pop
fimul
push
mov
jo
or
jp
add
add
xor
add
add
lea
and
or
push
jb
fistp
popf
inc
xchg
sbb
fst
cdq
mov
pushf
daa
dec
clc
cdq
loopne
push
rcl
mov
inc
enter
data16
mov
not
jl
pop
jo
mov
adc
mov
mov
loopne
inc
mov
(bad)
sbb
add
rcr
popa
int
or
sub
ss
ret
inc
mov
sub
pop
mov
inc
gs
or
cdq
mov
and
or
pusha
shr
pop
sbb
xchg
push
pop
jb
mov
icebp
ret
pushf
dec
adc
ss
jp
fistp
mov
pop
jb
fs
(bad)
adc
out
jmp
shl
shr
and
pop
xchg
add
pcmpgtb
pop
xchg
ds
push
xchg
xchg
inc
sbb
ins
push
mov
xchg
hlt
call
data16
jmp
mov
ja
popf
outs
daa
xchg
sub
or
arpl
shl
sub
loop
dec
mov
or
ins
std
xchg
dec
test
pushf
shl
(bad)
push
popf
pop
test
fs
out
(bad)
xlat
jo
push
sbb
mov
test
push
sbb
popa
push
out
ficomp
push
jle
mov
gs
repz
sub
add
loopne
iret
or
hlt
je
arpl
xchg
call
in
sbb
cld
dec
repnz
lds
pop
mov
cmp
add
mov
jmp
jns
dec
popf
js
fisub
sbb
jbe
dec
add
dec
rcr
and
sub
in
inc
stos
sbb
pop
xor
inc
and
inc
push
sbb
imul
(bad)
out
arpl
lahf
mov
push
sbb
add
aas
ins
inc
mov
mov
scas
pop
popa
imul
mov
xor
jmp
shr
or
jg
adc
inc
jecxz
fwait
stos
iret
pop
add
dec
jmp
xchg
pop
stc
mov
ret
loop
sbb
sub
scas
in
repnz
sub
sti
pminsw
inc
mov
mov
pop
jnp
xchg
das
repnz
xchg
sbb
sub
cld
mov
mov
outs
not
adc
dec
fwait
jmp
arpl
xor
aaa
xor
arpl
jl
scas
push
ins
test
mov
lods
dec
inc
into
cmp
dec
sar
xor
push
and
lds
(bad)
lods
xchg
out
mov
(bad)
mov
mov
adc
cmp
gs
sbb
mov
inc
sbb
push
jge
sbb
push
mov
mov
lds
xlat
add
loop
pop
add
pop
adc
push
jnp
inc
das
xchg
test
loopne
mov
cwde
icebp
and
mov
jnp
cmp
sbb
in
mov
imul
nop
mov
test
xchg
sar
add
or
sub
jns
xchg
gs
fst
sub
leave
in
daa
mov
clc
out
xor
adc
mov
xchg
mov
inc
dec
inc
push
sub
push
push
and
mov
jmp
leave
sub
jmp
push
xchg
cmps
xor
test
jne
push
adc
mov
or
pop
hlt
lods
clc
cdq
pop
adc
fadd
xor
into
dec
push
fstp
ss
inc
sub
shr
movs
or
adc
iret
mov
iret
(bad)
rcl
fcomi
jp
mov
rcr
adc
jmp
mov
dec
cmc
jmp
outs
jb
sbb
and
inc
stos
push
sti
leave
mov
clc
das
xchg
les
pop
rcr
es
les
adc
out
cdq
test
imul
ficomp
or
and
pop
clc
cvtps2pi
dec
mov
fwait
and
out
adc
sub
cmps
dec
mov
in
rol
or
movs
out
and
pop
(bad)
push
repnz
popa
lods
movs
fldenv
inc
mov
ficomp
jmp
loope
scas
call
dec
fcom
aam
sbb
jg
in
dec
xor
data16
dec
jns
push
popa
xor
inc
hlt
das
lods
sbb
imul
and
mov
frstor
and
lods
mov
sbb
out
mov
xchg
sub
mov
cmps
gs
rol
fld
or
cld
inc
add
adc
mov
pop
xlat
and
pop
jno
add
shl
jo
aas
ds
xchg
ror
mov
arpl
loop
dec
je
sar
mov
cld
cmps
add
and
ja
pop
out
pop
or
jge
das
xchg
xchg
repz
cwde
ja
sub
fcomp
cmps
test
aaa
nop
jge
fsubr
jae
clc
fadd
sub
sbb
mov
fadd
movs
adc
call
push
aas
jp
xchg
push
mov
add
ins
cmp
jae
xchg
inc
fdivrp
loope
retf
xchg
in
jle
(bad)
ins
rcr
jp
inc
aad
xor
adc
mov
and
sbb
ret
cmp
das
out
jae
sbb
test
enter
les
into
dec
pushf
stc
mov
jmp
(bad)
push
and
mov
jne
add
outs
dec
jmp
push
out
add
call
pop
xor
jg
sub
inc
mov
cdq
loop
mov
popa
cmp
cmp
ret
push
nop
jge
push
sbb
pop
sub
xchg
pop
ds
xor
and
aam
ins
mov
adc
mov
push
jne
sahf
retf
jmp
in
js
inc
mov
jb
test
add
call
sub
mov
mov
(bad)
adc
add
xor
fstp
mov
pushf
or
xor
xor
jo
inc
out
mov
pop
push
std
stos
push
cmc
push
dec
sbb
clc
inc
frstor
jb
dec
xor
pop
dec
xchg
aaa
std
daa
push
test
xchg
cmc
sbb
add
mov
push
inc
or
xor
add
scas
mov
ja
aam
fld
cmp
ret
stos
dec
jmp
and
jae
sahf
inc
or
(bad)
out
clc
movs
jl
jae
pop
dec
mov
pop
ror
ds
repnz
rol
in
js
adc
aad
fnstenv
fisubr
adc
push
jmp
bnd
dec
add
fistp
lds
ret
arpl
mov
jnp
prefetch
ja
xor
aas
rol
out
fnstenv
hlt
ror
dec
ja
jl
ret
std
mov
cmp
sub
mov
arpl
or
jge
aas
add
bound
jne
in
cmp
retf
and
outs
mov
ret
ss
pop
push
sar
inc
jle
or
test
out
xlat
or
mov
add
add
add
fiadd
je
stos
pusha
mov
sub
and
iret
xor
lahf
pop
popa
test
lods
ficomp
loopne
mov
stc
iret
ins
sbb
(bad)
loop
mov
call
push
push
fldenv
xchg
faddp
outs
out
sti
sbb
imul
push
push
test
js
dec
imul
mov
push
jl
scas
out
adc
mul
retf
mov
call
in
cmp
into
pop
and
jecxz
out
leave
sub
pusha
and
add
jno
mov
push
pusha
xor
addr16
push
out
inc
mov
jns
imul
pop
xchg
aas
xor
out
mov
sbb
mov
push
xor
arpl
out
push
ins
cdq
xchg
out
add
and
retf
and
cmp
dec
cmp
mov
jg
lods
cmp
jo
mov
mov
mov
adc
cdq
or
jge
popf
je
inc
nop
fs
fidiv
lods
sub
pop
push
pop
std
mov
xchg
jns
inc
xchg
pop
clc
gs
jmp
movs
dec
nop
pop
mov
inc
xor
sbb
xchg
adc
or
mov
mov
mov
or
mov
pop
or
add
loope
leave
and
dec
xor
xor
jae
mov
cmp
adc
jnp
push
cmp
sbb
jnp
push
mov
sub
je
add
into
mov
and
xchg
or
sbb
and
imul
pop
xor
cdq
or
imul
retf
mov
stc
gs
sbb
test
jg
std
enter
pop
jbe
loope
jecxz
adc
mov
mov
(bad)
daa
push
loopne
pop
out
imul
push
mov
in
cmp
adc
jmp
ss
cmp
mov
jecxz
daa
pop
das
push
movs
mov
xor
cmp
pop
mov
adc
ins
popf
jae
lds
pop
jnp
mov
imul
jno
in
xchg
mov
cld
xor
or
xor
ror
or
sar
leave
add
push
sbb
sub
add
mov
sub
fsub
inc
adc
punpckhdq
into
lods
adc
test
xchg
inc
(bad)
enter
scas
inc
popa
fmul
imul
jnp
daa
outs
dec
stc
push
sub
pushf
xchg
jns
mov
sub
nop
xchg
sub
fldcw
and
push
fadd
push
fldenv
gs
test
stos
dec
inc
xchg
stc
shr
dec
push
outs
leave
in
and
mov
out
test
es
jmp
repz
int3
(bad)
sbb
shl
jmp
mov
out
jle
inc
arpl
jp
sbb
sbb
retf
xor
pop
and
fwait
aad
pop
sub
mov
ret
pop
xor
pop
push
push
les
(bad)
xor
and
bound
fs
test
(bad)
and
add
dec
clc
repz
xchg
mov
xor
repz
cmp
add
or
mov
push
jmp
pop
sbb
pop
jle
cmp
(bad)
mov
pop
adc
sub
push
stos
or
je
mov
mov
dec
xchg
or
push
cmp
stc
(bad)
cmp
sub
repz
push
aam
mov
les
loope
cwde
aas
push
daa
clc
lock
mov
paddsw
fxtract
cli
jmp
inc
or
adc
les
dec
lods
jbe
dec
dec
iret
adc
lea
in
outs
mov
and
sahf
ficomp
add
inc
pop
mov
sbb
iret
cmps
push
icebp
out
data16
mov
mov
loop
cmp
mov
cmps
push
and
inc
hlt
push
push
adc
sbb
cdq
cdq
xchg
ror
push
add
push
rol
lds
(bad)
mov
ins
call
and
xor
outs
jl
xor
shl
hlt
add
sahf
loopne
pop
adc
push
pusha
test
pop
bound
mov
adc
xchg
xor
enter
jnp
in
mov
inc
or
and
add
(bad)
push
imul
lods
aas
or
or
jle
cmp
pop
mov
fnsave
mov
mov
mov
stos
ss
loop
mov
push
mov
mov
mov
xchg
cmps
mov
add
push
mov
test
xchg
jno
add
add
jns
add
push
inc
push
xor
ret
pop
bound
int
test
mov
pop
and
pop
daa
cmps
cwde
cmc
(bad)
fs
cmp
mov
fwait
prefetcht1
inc
dec
mov
ins
pop
and
jbe
test
cmp
scas
repnz
scas
and
repz
cmp
or
sub
mov
retf
xchg
xchg
mov
outs
mov
punpcklbw
inc
jne
aas
outs
adc
and
dec
and
adc
aad
or
and
ror
adc
fild
push
les
xchg
out
and
shl
and
mov
or
cld
or
in
mov
(bad)
sub
xor
lea
cmovg
mov
push
aaa
pop
add
dec
pushf
cmp
jge
pop
adc
xchg
xchg
cmps
xchg
dec
xor
fisttp
dec
cmp
cmp
(bad)
jmp
mov
sbb
xchg
les
jmp
sti
sahf
push
aad
cmp
cmp
and
mov
lods
mov
adc
push
push
scas
push
and
in
lahf
push
lea
mov
hlt
jle
and
js
mov
and
out
jns
and
or
jg
repz
pop
push
sbb
(bad)
and
out
test
imul
push
loop
fisttp
in
mov
add
push
aas
mov
and
push
and
mov
icebp
cmc
mov
ret
bound
popf
fsub
mov
rcr
mov
in
jae
add
jmp
mov
mov
mov
pop
sub
(bad)
cwde
cmp
leave
(bad)
mov
mov
enter
(bad)
std
fidiv
out
or
push
xchg
mov
popf
stos
loope
sbb
xlat
rcl
jb
cmc
lahf
jmp
xchg
aas
or
mov
jmp
clc
push
mov
lea
(bad)
test
in
sti
adc
fwait
out
cmp
nop
adc
in
or
dec
je
pop
jno
jl
nop
call
xor
inc
adc
repz
lods
cmp
(bad)
pop
test
dec
ins
mov
sub
retf
mov
ins
sbb
xor
sub
dec
mov
into
adc
push
cmp
lods
mov
sbb
xchg
lock
dec
jmp
xor
dec
les
fs
jo
loop
jnp
idiv
out
or
pop
fneni(8087
std
out
ret
jle
jne
mov
adc
pop
enter
add
iret
jbe
fmul
push
pop
int
(bad)
cmp
test
jle
jecxz
retf
scas
sti
push
cmp
sbb
or
mov
arpl
and
mov
cmp
pusha
lock
push
xchg
test
xchg
sub
add
test
enter
jecxz
test
pusha
dec
pop
imul
sub
(bad)
cmc
jb
mov
xor
inc
add
mov
mov
lds
dec
cmp
test
xor
sbb
push
stos
push
cli
adc
push
ret
lods
cmp
das
pop
in
es
add
jl
mov
adc
xor
imul
push
loopne
leave
daa
mov
fisttp
adc
ret
pop
pop
xor
mov
xchg
cwde
fimul
scas
mov
jecxz
dec
push
xor
jne
aam
xor
(bad)
xor
mov
mov
pusha
cmps
inc
mov
push
movs
and
pop
cmps
inc
push
mov
fisubr
pop
fwait
mov
push
push
js
cmc
mov
ret
and
int
sub
mov
stos
mov
and
in
stos
mov
mov
ss
loope
push
ins
ds
push
add
hlt
rcr
cmp
push
add
ins
(bad)
cmp
or
cmc
push
sub
(bad)
push
adc
jno
shr
xchg
add
aaa
mov
fsubr
cmp
jo
push
ror
push
clc
(bad)
(bad)
jmp
mov
lods
pop
push
lods
and
mov
push
adc
sub
jmp
test
cmp
dec
aam
jl
xor
stos
in
iret
sub
adc
push
jo
pop
in
xor
sbb
jnp
adc
cs
pop
dec
enter
loop
xor
jge
pop
cvtdq2ps
lods
and
sub
pop
es
test
ret
icebp
loope
and
or
call
pushf
inc
and
shl
dec
ja
lods
jno
arpl
rcl
lods
imul
jae
lods
call
inc
sbb
sbb
jmp
repz
(bad)
sahf
inc
jle
sub
test
fnstsw
outs
push
fdivr
pop
xor
cs
fnstenv
and
add
outs
add
add
add
mov
call
pop
xor
div
push
aad
vmovupd
mov
clc
inc
hlt
sub
xor
mov
mov
aas
(bad)
xchg
add
jb
call
jne
icebp
dec
popa
dec
(bad)
es
xchg
mov
div
or
ja
aaa
jmp
dec
pop
adc
stos
dec
sub
and
cld
test
cmp
shr
fwait
cmc
add
out
xchg
pop
cmps
push
pop
movs
iret
cmps
and
jmp
lods
dec
scas
push
mov
nop
adc
into
push
push
or
aam
jns
sbb
pop
vorps
fwait
jmp
sub
loopne
les
cs
retf
and
test
mov
and
dec
push
enter
(bad)
movs
nop
inc
sbb
aad
out
scas
mov
adc
jmp
sbb
fwait
adc
mov
jmp
imul
jno
xchg
dec
aaa
mov
cli
pop
in
cmps
mov
xor
mov
jg
lahf
call
dec
ror
imul
or
lods
inc
adc
jg
or
mov
aaa
fnsave
or
add
sub
mov
imul
test
retf
ret
push
stos
arpl
pop
stc
sub
repnz
adc
js
dec
adc
clc
cmp
fwait
mov
adc
pop
jb
ret
shr
(bad)
pusha
fdivr
aad
adc
not
dec
sbb
or
sbb
push
ret
pop
inc
and
ins
cli
int3
icebp
loopne
push
add
lds
push
retf
mov
sub
add
mov
jo
lahf
pop
xchg
push
mov
add
mov
lahf
aaa
in
lock
xchg
mov
push
jge
push
repnz
fst
mov
ss
add
outs
sti
or
mov
inc
repnz
fcom
fild
int
cmps
repz
(bad)
fadd
pop
addr16
popa
cdq
jne
arpl
pop
add
gs
ins
mov
inc
(bad)
retf
adc
lock
and
jnp
daa
aaa
cmp
pop
movs
es
lock
dec
stc
leave
icebp
bound
jns
call
pop
xlat
adc
pop
add
sbb
(bad)
mov
jle
add
add
or
xchg
ret
dec
lea
mov
test
int
and
loopne
push
rcr
enter
popf
(bad)
dec
adc
sub
sub
fs
jae
movs
cmp
lea
pop
clc
fbld
neg
jno
pop
dec
icebp
inc
int
xchg
jl
xchg
fild
call
dec
xchg
mov
push
aas
xchg
rol
jmp
pop
push
int
mov
mov
xor
sub
int3
in
aad
loope
adc
call
ins
pusha
jle
sub
clc
rcl
mov
mov
xchg
sbb
sahf
push
ror
or
push
mov
fisttp
hlt
push
sbb
xchg
cmps
and
inc
icebp
mov
and
xor
inc
pop
leave
xor
out
pop
xor
and
push
adc
call
cmc
ret
cmp
mov
jno
sbb
lock
sub
jmp
pop
cmc
push
push
dec
mov
lock
sub
aas
push
cld
inc
je
mov
sbb
mov
dec
or
data16
pop
pop
add
daa
or
std
popa
xchg
xor
ficomp
(bad)
and
adc
mov
fild
add
outs
cmp
ret
pop
stos
xchg
in
dec
push
inc
stc
jp
movs
cmp
push
sbb
xchg
sti
cld
inc
jo
ret
std
movs
mov
or
or
mov
cmps
push
mov
pop
mov
bound
xchg
nop
mov
xchg
test
jmp
adc
adc
inc
push
in
push
jle
adc
push
xor
dec
sub
int3
and
xchg
jns
xor
pop
int3
ja
mov
dec
mov
ins
and
pop
rcl
and
adc
jne
shr
pusha
jp
(bad)
gs
add
retf
inc
cwde
mov
fs
or
ins
lock
xchg
dec
sub
addr16
mov
lods
and
test
fs
popa
pop
xchg
(bad)
scas
and
test
mov
(bad)
or
out
add
mov
aas
adc
jmp
push
and
cmp
lea
adc
and
fst
dec
clc
(bad)
push
cmp
mov
mov
mov
stc
jo
xchg
xor
in
mov
jnp
es
(bad)
sub
movs
retf
push
test
ret
cdq
test
adc
sbb
test
push
mov
adc
cmp
mov
xor
add
in
add
std
push
add
adc
lods
mov
hlt
xor
mov
jne
shl
mov
call
push
push
iret
or
lods
adc
imul
xchg
xor
or
push
mov
fisub
cld
adc
add
aad
movs
xchg
test
pushf
or
dec
xor
xchg
sti
(bad)
push
xchg
sbb
cld
push
lods
jnp
push
mov
(bad)
cmp
dec
pop
inc
push
hlt
pop
sbb
and
clc
pand
loopne
mov
loopne
sub
outs
pusha
and
add
sbb
xor
inc
mov
mov
fsubrp
jecxz
pop
dec
mov
lahf
push
repz
inc
inc
movs
movs
mov
rcl
lods
mov
addr16
mov
add
pop
call
lods
(bad)
cmp
inc
or
mov
mov
frstor
test
fmul
icebp
shl
mov
fs
sub
clc
and
aaa
popf
jno
mov
(bad)
ss
jg
je
dec
pusha
mov
popa
xor
rol
fstp
fcomp
loopne
cmp
xor
sbb
(bad)
stos
pop
sbb
adc
add
jmp
imul
dec
loopne
das
inc
int
xor
ss
adc
mov
dec
scas
adc
lahf
div
xchg
(bad)
mul
outs
lock
sbb
sbb
lock
mov
hlt
dec
fmul
pop
cmp
sar
xlat
and
mov
sbb
neg
cdq
repnz
in
outs
faddp
(bad)
jo
pop
cmps
jp
lods
mov
jp
jb
neg
scas
aas
aas
or
adc
or
das
in
mov
outs
mov
pop
ss
out
pxor
imul
mov
js
adc
sar
ss
and
xchg
sub
sub
div
xchg
add
jno
imul
es
cmp
aaa
xor
pop
daa
push
xor
stc
xchg
mov
ins
(bad)
jb
cwde
retf
fisubr
in
jmp
xchg
rcl
or
in
inc
push
rcr
lahf
std
call
xchg
clc
pop
dec
(bad)
mov
inc
aad
cs
add
les
cli
ror
outs
rcr
adc
sbb
mov
addr16
sbb
and
ficom
dec
jo
sahf
push
(bad)
fwait
cmp
xchg
out
fisub
inc
jmp
scas
cmp
jmp
cmp
jmp
repz
or
push
outs
stc
cmp
arpl
imul
movs
cwde
adc
mov
xchg
jecxz
jns
(bad)
or
std
(bad)
mov
es
retf
and
mov
rol
retf
popa
data16
pop
shl
stc
inc
mov
lds
xlat
ins
pop
jg
inc
inc
add
(bad)
in
imul
push
pop
sbb
sub
sub
les
pusha
ret
dec
test
xor
jb
addr16
scas
ins
or
aad
mov
push
lock
test
dec
bound
mov
and
out
jb
or
aam
nop
cmc
dec
test
fistp
xchg
sahf
outs
xlat
xchg
push
shl
pushf
stos
push
fadd
(bad)
fmul
fidivr
cmp
dec
or
mov
fidiv
mov
pusha
ss
and
ins
sbb
fs
and
xor
dec
clc
pop
mov
neg
out
shr
jmp
push
mov
and
out
xchg
fisttp
das
push
pop
(bad)
enter
loop
jmp
fstp
jno
mov
xchg
dec
mov
push
popf
xlat
sahf
fdiv
movs
imul
inc
push
mov
xchg
call
lea
cmp
iret
push
out
test
or
and
or
xlat
in
jns
jecxz
jne
adc
scas
(bad)
int3
mov
ins
retf
cmp
movs
jae
iret
lahf
mov
fistp
mov
sub
sbb
fs
pop
nop
xchg
fs
inc
or
shl
mov
inc
xor
jo
adc
pop
push
jne
(bad)
adc
inc
mov
sbb
fadd
push
mov
dec
leave
out
mov
dec
enter
cmp
outs
cmc
les
push
push
add
scas
ret
mov
push
xor
pop
push
or
or
mov
sbb
push
dec
push
jne
cmp
aam
mov
mov
dec
jmp
and
aas
fdiv
test
and
jmp
xchg
jge
and
leave
or
mov
pop
rcl
call
sar
movs
sbb
dec
mov
add
das
(bad)
call
das
call
in
fistp
ins
jle
ins
repnz
mov
shl
or
inc
xor
add
pop
add
inc
ret
mov
pop
leave
jecxz
pop
inc
mov
stos
xor
mov
sub
jp
inc
cmps
mov
pop
fldlg2
ins
xlat
jge
push
je
test
cmps
jnp
lds
or
outs
js
sar
xor
fmul
iret
push
stos
(bad)
int3
xor
and
add
mov
push
jle
call
leave
jno
pop
jmp
add
scas
call
mov
call
sbb
or
cmp
mov
dec
fs
sub
mov
mov
sbb
gs
cld
jno
rol
jl
inc
push
mov
push
mov
jae
mov
cld
jnp
fisub
sub
retf
pusha
adc
aaa
push
out
js
pop
push
mov
daa
int3
inc
sbb
xor
xor
xor
sahf
jns
ins
fidiv
dec
stos
enter
xor
aad
jae
inc
(bad)
loop
daa
add
test
movs
mov
mov
ror
stos
jmp
rcr
cdq
xchg
pavgb
sbb
ds
mov
mov
cmp
in
mul
movs
js
dec
sbb
mov
and
in
sub
shl
jmp
mov
dec
push
clc
xchg
fadd
repnz
xor
(bad)
sti
pop
pop
sbb
rcl
mov
movs
inc
add
jns
cmc
cmp
mov
mov
iret
out
jmp
mov
pusha
mov
mov
lea
sub
add
mov
rcr
pop
cld
cwde
bound
dec
int3
mov
inc
cmp
scas
repnz
cmp
or
out
dec
std
sub
dec
fs
shl
add
xor
jno
enter
inc
test
fs
sub
xchg
mov
and
test
stc
jne
mov
inc
cmp
sub
leave
cli
sbb
ror
xchg
ds
pop
or
sbb
dec
(bad)
(bad)
mov
imul
jno
and
js
inc
xchg
lods
call
push
inc
dec
adc
icebp
bswap
jae
stos
and
mov
jbe
xchg
fucom
inc
cwde
jle
xor
sub
std
aad
dec
mov
int3
mov
sbb
mov
sub
repnz
addr16
push
cmp
in
das
leave
xlat
push
outs
mov
cmps
and
pop
mov
sahf
sbb
mov
cmp
imul
fprem1
add
nop
sar
les
dec
ror
xlat
and
idiv
push
aam
jnp
push
pop
xor
mov
aad
or
dec
cmp
test
mov
jecxz
and
cmp
add
cs
in
mov
mov
jns
cld
sti
(bad)
and
out
or
xor
retf
dec
aas
xor
sahf
lea
add
jb
icebp
sbb
xlat
xor
bt
clc
ss
sar
pop
and
retf
div
add
push
mov
sbb
mov
cmp
jb
fst
in
mov
mov
lods
or
lahf
lahf
mov
inc
je
cmp
pop
push
add
add
xchg
add
shr
push
push
mov
pop
and
pop
lds
aad
rol
adc
pop
sbb
jnp
pop
aaa
jmp
sub
iret
push
fwait
call
ja
cdq
arpl
daa
xchg
in
in
pop
repz
adc
jmp
jmp
(bad)
mov
into
out
or
scas
jne
fcomp
(bad)
add
jge
xchg
clc
lock
cmp
(bad)
shl
xor
sub
(bad)
ficomp
(bad)
mov
aaa
or
mov
out
jg
cmp
call
stos
(bad)
retf
dec
push
mov
mov
pop
cmp
leave
and
jmp
pusha
inc
das
popf
not
add
xchg
les
js
fs
mov
mov
dec
popa
sbb
jmp
mov
inc
outs
mov
hlt
xchg
mov
add
jns
push
pop
ins
lods
mov
cmp
sub
test
ret
jmp
ins
fbld
int
fimul
xchg
mov
xor
add
add
add
add
mov
in
shr
pop
clc
xchg
shr
add
ret
or
inc
addr16
push
out
imul
cli
mov
pop
sub
dec
iret
movs
push
(bad)
test
mov
fwait
push
out
pop
rcr
ret
test
xchg
ins
test
sbb
jge
repz
pop
into
add
ja
xchg
mov
push
cli
cmc
mov
call
frstor
mov
add
out
dec
pop
xor
fdivr
xor
loope
cmps
iret
hlt
(bad)
cli
call
in
stos
cmp
repnz
rcr
jno
movs
push
xor
inc
push
fdivr
add
jae
test
mov
aas
inc
jno
cdq
or
or
cwde
jp
sbb
pop
popf
clc
dec
lea
pop
and
aad
nop
cli
inc
xchg
cmp
rol
push
inc
retf
psllq
dec
xor
jnp
push
mov
jo
fsub
int3
push
xor
xchg
or
sti
ss
test
rcl
pop
xchg
mov
or
xchg
rcl
lods
out
jecxz
mov
fld
pop
and
sahf
dec
pusha
lea
arpl
rol
pushf
adc
(bad)
push
imul
sub
into
xor
addr16
shl
fidivr
or
fwait
lock
cmp
xor
sbb
mul
ror
inc
retf
sub
inc
std
imul
dec
fwait
jae
or
pop
repnz
nop
fadd
pop
popa
lds
xchg
ins
jmp
fcmovu
mov
adc
hlt
scas
inc
jg
adc
sahf
xchg
push
sub
inc
(bad)
dec
mov
aaa
pop
enter
sbb
xchg
mov
or
xor
fwait
test
mov
jg
or
jnp
xor
enter
cmp
jp
stos
cmp
xor
dec
test
mov
inc
pop
adc
add
mov
out
mov
push
(bad)
pop
les
lods
scas
push
sub
rcl
pop
hlt
jle
sub
push
pop
jmp
push
xchg
dec
dec
cmp
jl
cmps
mov
xchg
xchg
xor
pop
call
repz
into
nop
lods
mov
or
mov
jo
jl
sub
xchg
aaa
push
xor
xchg
pop
fcmovnb
mov
ror
jp
and
test
lea
mov
and
or
jecxz
ds
mov
sub
adc
out
jl
adc
add
mov
loopne
jmp
jb
xchg
mov
adc
mov
add
mov
loop
pop
ins
mov
inc
and
ss
sub
fwait
jno
inc
fsubr
xor
dec
pop
into
hlt
xchg
mov
push
xor
sahf
pop
pop
stos
dec
pop
(bad)
mov
mov
lock
popf
sti
jns
fwait
cwde
adc
sar
ss
loopne
lods
retf
or
add
sbb
ds
cmps
adc
in
mov
mov
outs
xor
mov
shl
cmp
or
fdivr
cmp
adc
xchg
mov
pop
jno
jle
mov
cmps
xor
and
cmps
cdq
pop
and
add
ret
xor
ja
push
pusha
xlat
icebp
dec
ret
ja
and
fidivr
iret
aad
xor
cmp
jo
cmp
popa
(bad)
xchg
inc
int3
pop
add
lods
mov
add
jo
adc
mov
jb
popf
imul
mov
mov
rcl
pop
xchg
xchg
sbb
cmp
inc
ret
jae
leave
in
(bad)
mov
mov
and
shl
add
push
add
add
add
jns
scas
addr16
(bad)
pop
mov
mov
test
in
aam
ins
(bad)
push
es
ds
lods
in
dec
leave
push
rol
push
dec
sbb
add
xchg
push
cmc
sbb
jle
xchg
xchg
xchg
cmps
xchg
arpl
(bad)
xchg
popa
enter
and
add
mov
pushf
lea
out
jecxz
sub
sub
xor
loope
push
push
loop
mov
push
xadd
inc
ins
jb
mov
or
mov
xchg
mov
fadd
call
dec
fcom
imul
addr16
pop
xchg
mov
dec
push
cmp
enter
jmp
into
call
cmp
ds
xor
cmps
out
cmps
mov
fstp
add
adc
out
or
das
xchg
dec
adc
int3
daa
jecxz
aaa
lea
adc
xor
and
inc
pop
pop
iret
aaa
push
sub
add
test
and
test
xor
inc
jmp
dec
dec
pop
rol
mov
cmp
std
add
sbb
jmp
xchg
nop
adc
mov
mov
pop
call
xchg
gs
lahf
pop
inc
stos
sub
adc
scas
popa
pop
or
aam
sbb
jmp
mov
loopne
(bad)
je
pop
ret
std
cmp
and
mov
push
add
ret
movs
cmp
packsswb
pushf
pop
mov
xchg
pop
adc
ret
cwde
das
hlt
or
mov
add
fidivr
sub
sahf
lds
inc
test
sub
mov
ds
(bad)
aam
push
fisttp
push
inc
jae
cld
outs
rcl
pop
rcr
pushf
push
repz
nop
mov
pop
pop
mul
out
cwde
out
push
mov
ss
and
aaa
pop
(bad)
loopne
mov
ret
add
add
add
add
inc
cmps
mov
adc
mov
xchg
mov
loopne
mov
movs
std
pusha
fwait
and
hlt
mov
add
int
dec
je
movs
out
adc
and
push
out
fld
sub
outs
les
out
pavgb
sti
sahf
dec
das
test
push
mov
(bad)
fcomp
fwait
mul
sti
repnz
push
ins
ret
fsubrp
mov
jb
and
imul
cwde
popa
fs
iret
dec
aam
and
cmp
fcmovu
adc
inc
push
mov
xlat
xchg
sub
or
and
not
and
sub
jae
int3
lea
ss
xor
or
push
add
loope
mov
les
lea
jns
push
fdivr
imul
movs
lahf
dec
cmp
xlat
cmp
pop
xor
sar
sbb
or
scas
cmp
pushf
sbb
inc
stc
push
jmp
cdq
sti
call
test
test
mov
(bad)
test
adc
jecxz
fucomip
ret
cmc
mov
jns
test
jo
xor
retf
dec
mov
mov
pop
xchg
inc
jne
(bad)
cs
cmp
loop
fwait
dec
scas
(bad)
addr16
cmc
lock
and
rcr
outs
jo
inc
data16
fdiv
mov
clc
add
sub
pushf
ror
pop
cmp
(bad)
pop
into
sbb
(bad)
mov
cmp
pop
shl
fsub
dec
in
add
xor
inc
sbb
loope
stos
xchg
mov
(bad)
call
dec
dec
jle
push
aaa
scas
mov
jo
inc
stos
jb
sub
push
mov
dec
xchg
mov
mov
and
jne
jecxz
jp
fidiv
pop
mov
xor
test
es
fdivr
rcl
jecxz
push
adc
outs
mov
dec
mov
xor
out
(bad)
inc
or
rcr
lods
and
ror
icebp
push
cmp
inc
or
sbb
pop
push
mov
jo
sbb
arpl
xor
call
xor
mov
in
mov
mov
pop
mov
push
leave
sbb
pop
dec
fidivr
dec
mov
mov
fisttp
mov
arpl
and
push
(bad)
dec
cld
xor
ss
xchg
mov
mov
nop
or
repz
aaa
mov
mov
cld
inc
pop
add
cli
pop
add
mov
ret
cmp
push
fdivr
jnp
jge
mov
sub
mov
sbb
js
inc
ret
pop
movs
sbb
idiv
or
iret
fidivr
push
dec
aas
jnp
inc
popf
xchg
inc
pop
stos
xor
mov
jmp
add
mov
xchg
js
add
cmp
dec
xor
push
mov
xchg
and
mov
hlt
(bad)
fcomp
push
sub
fisub
jle
pop
add
or
or
xor
jecxz
cmp
leave
adc
lock
fstp
jp
xlat
jae
sub
inc
out
pop
fcomp
jp
imul
and
and
mov
and
push
pop
pusha
push
dec
enter
std
loopne
cmp
push
sbb
mov
gs
cli
fs
mov
xor
sahf
adc
adc
repnz
mov
xlat
jns
(bad)
jge
inc
jmp
jmp
sub
mov
mov
mov
and
ret
sub
dec
retf
cmc
adc
push
clc
bound
iret
call
test
pop
idiv
loop
retf
pop
xchg
test
inc
pop
xchg
ret
cwde
xor
lods
jb
ja
pop
jmp
xlat
add
xchg
ins
cmp
(bad)
icebp
mov
add
mov
in
add
inc
push
xlat
mov
std
pop
je
out
add
cmps
push
int3
popf
cs
leave
test
rcr
and
pop
cdq
rcl
inc
mov
bswap
xor
inc
inc
rol
sbb
scas
fdivr
dec
fidivr
ret
movs
aad
xchg
aas
loopne
retf
lahf
mov
dec
sbb
out
cli
iret
sbb
hlt
sbb
outs
mov
out
or
mov
mov
test
xchg
stos
(bad)
sbb
xor
in
or
sbb
sub
push
adc
scas
or
mov
out
ror
jge
vmread
xlat
xor
cld
push
xchg
int3
dec
in
add
jne
dec
ins
xchg
sub
or
fwait
push
lds
and
adc
jge
mov
aas
(bad)
mov
fld
pop
jge
js
div
xor
fst
gs
jne
call
bnd
(bad)
cli
jecxz
das
dec
out
and
xchg
(bad)
jo
push
and
sub
fmul
das
lahf
sbb
punpcklwd
dec
imul
xchg
jae
inc
pop
dec
daa
xor
ror
xchg
int3
add
aaa
in
pop
test
inc
pop
or
rol
in
ins
out
sub
into
and
fdivp
fisubr
cs
xlat
fadd
xchg
push
dec
adc
sahf
adc
imul
ffree
outs
jg
data16
or
fcomp
inc
fwait
push
sub
bound
std
mov
jl
js
mov
test
ret
pop
aam
(bad)
and
push
retf
div
cmp
nop
and
sub
push
xchg
call
vhaddps
scas
push
cmps
cmps
xchg
pop
(bad)
cmc
sbb
adc
mov
retf
pop
pushf
mov
xchg
out
repz
cmp
fisttp
xor
adc
jecxz
ins
xchg
pop
push
(bad)
jg
dec
(bad)
std
push
jecxz
test
arpl
ret
adc
test
ficomp
stos
les
inc
push
repz
outs
lods
xchg
dec
push
cmps
test
push
inc
out
(bad)
mov
jno
shl
xor
in
inc
mov
stc
sbb
(bad)
in
mul
cmps
mov
push
loope
mov
mov
jmp
retf
rol
or
mov
pusha
cmp
(bad)
inc
loope
cdq
xchg
and
out
rep
mov
jecxz
inc
dec
clc
or
and
cs
xchg
daa
outs
cmc
sub
jne
adc
daa
push
xchg
jle
fisubr
sti
mov
fisubr
ror
and
push
mov
dec
inc
jnp
or
test
push
ret
rol
pop
jmp
cmp
adc
pop
xchg
push
lea
retf
sar
inc
(bad)
jns
test
pop
bound
cli
test
inc
es
xchg
sub
(bad)
ret
pop
test
push
stos
test
cmp
push
les
imul
mov
jecxz
loopne
ins
popf
xor
rcl
cdq
out
jo
ins
sub
(bad)
jmp
mov
enter
xor
pop
xchg
pushf
xchg
push
cmps
jmp
sub
(bad)
rcl
jmp
jmp
outs
cld
fsub
fild
pmulhw
and
or
inc
jmp
xchg
sbb
fcmovnbe
out
inc
sub
jo
jecxz
cwde
das
into
inc
and
inc
loop
out
out
jae
movs
xchg
int
lock
lahf
int
pop
cwde
adc
or
imul
mov
mov
jl
dec
jne
mov
cmp
hlt
(bad)
fidivr
ja
lea
addr16
test
sbb
or
out
pushw
shl
out
aad
mov
ins
fistp
mov
add
(bad)
push
ds
mov
adc
push
xchg
jl
push
test
out
adc
adc
push
cmp
js
mov
pop
lods
jle
xor
pop
daa
adc
shr
pop
push
int
cmp
fistp
jecxz
cmp
sar
jmp
add
or
loop
imul
jge
or
adc
scas
xor
in
call
or
in
pop
xor
ret
shl
data16
mov
mov
iret
mov
aam
sar
sahf
(bad)
out
jbe
cmc
dec
aas
(bad)
out
hlt
je
mov
sbb
jmp
adc
mov
minps
jl
dec
and
xor
shl
out
jne
imul
sbb
push
pop
mov
pop
aaa
scas
in
or
jb
retf
adc
leave
enter
jnp
mov
fbstp
sub
sbb
cs
or
clc
pop
ins
ds
dec
arpl
(bad)
lock
mov
cmp
fsubr
xor
xchg
pop
cli
(bad)
jns
cmps
mov
movs
mov
fnsave
sub
dec
in
pop
(bad)
adc
mov
popf
push
arpl
out
xor
or
dec
jbe
mov
and
jl
cmc
push
rsqrtps
clc
add
or
add
imul
sub
sbb
jecxz
add
push
cld
ja
hlt
lods
jmp
pop
popf
dec
push
xchg
push
(bad)
fsubr
xchg
mov
or
fld
fadd
inc
adc
rcr
test
icebp
outs
fld
mov
popf
push
xor
xchg
cdq
cmc
xlat
js
call
ja
jmp
call
or
mov
xor
lods
cmp
push
xlat
popa
shl
or
into
jnp
sbb
mov
pop
cmc
adc
hlt
jo
cwde
icebp
retf
lea
test
cmp
in
adc
gs
stc
lahf
das
sub
mov
jns
add
mov
or
mov
inc
pop
shr
adc
fild
sub
arpl
jae
lds
fnstsw
fsubr
sub
and
jl
mov
inc
add
dec
add
(bad)
xor
aam
cmp
pushf
sub
pop
(bad)
ss
cmp
mov
rcl
aam
outs
lds
push
mov
mov
arpl
and
ret
int
cmp
cmp
int3
mov
(bad)
iret
sbb
loopne
mov
test
int3
repnz
xchg
mov
in
mov
mov
or
shl
test
push
div
pop
cwde
aam
ret
daa
or
cmps
xchg
sub
nop
cmps
cs
cmp
movs
rol
mov
(bad)
loope
pushf
lods
je
mov
xchg
adc
or
aas
jnp
fcom
imul
addr16
clc
inc
push
and
fmul
push
adc
outs
jge
jge
push
stos
xchg
test
cmp
rcr
adc
jle
lods
push
sub
jmp
cs
aam
dec
mov
shl
int3
mov
xor
(bad)
ror
ss
xlat
out
or
daa
push
jmp
and
lock
xor
mov
ds
aam
into
push
push
popf
fmul
or
cmp
out
mov
gs
rcr
add
mov
popa
hlt
mov
mov
iret
mov
xchg
mov
cwde
cs
aas
jnp
inc
pop
dec
stos
mov
dec
(bad)
bound
scas
cmp
mov
cmp
cmps
mov
mov
add
pop
mov
mov
call
stc
shr
xor
cli
push
je
pop
or
test
push
inc
stos
xor
mov
fadd
and
ficomp
cld
mov
mov
lds
ret
push
pop
push
push
data16
push
xchg
in
xchg
mov
mov
int3
xchg
fadd
adc
inc
pusha
cwde
sbb
ja
and
scas
hlt
sbb
scas
cdq
das
ss
popa
call
mov
xchg
shl
mov
mov
inc
mov
lock
in
loop
pop
jo
cmc
mov
outs
imul
pop
sub
mov
cmp
loope
jns
in
pop
xchg
jmp
in
stos
push
pushf
mov
cmp
pop
(bad)
xchg
push
std
sbb
xchg
xchg
cli
add
lods
es
or
test
xor
fisub
dec
lock
lahf
xchg
js
dec
fs
fsub
cmps
pop
inc
out
jbe
mov
push
pop
add
inc
xchg
pop
inc
xchg
or
xor
aad
sbb
outs
in
ret
xlat
repnz
add
inc
add
mov
fidiv
icebp
aad
test
push
mov
mov
cmp
repnz
sbb
jecxz
mov
dec
enter
ds
test
popa
loopne
aaa
in
xchg
dec
mov
or
aad
mov
cld
(bad)
jecxz
pushf
mov
xchg
xor
cmp
ins
pushf
repnz
adc
push
int3
dec
rcl
push
loopne
or
adc
idiv
cmp
or
iret
shl
jg
cmp
push
xchg
fcomp
sbb
pusha
pop
movs
dec
dec
dec
add
out
inc
sti
mov
sbb
push
mov
inc
sbb
or
mov
(bad)
dec
mov
mov
mov
test
mov
(bad)
rcl
add
mov
in
mov
add
cmp
fld
shl
repnz
cmps
dec
lds
and
mov
aam
adc
and
inc
pop
stos
inc
pop
test
movs
stos
adc
dec
out
int
sti
mov
and
imul
jle
push
das
test
add
push
inc
stc
or
psubusw
hlt
sbb
mov
gs
bound
add
or
leave
nop
jg
sti
cli
adc
hlt
mov
pushf
push
xchg
pop
cmp
mov
adc
pop
ds
fdiv
stos
xchg
pop
inc
mov
push
mov
jp
icebp
les
mov
xchg
addr16
fild
cmp
mov
inc
hlt
push
jmp
out
xchg
adc
mov
test
pusha
int3
stc
and
ins
adc
outs
dec
pop
jmp
lahf
cmp
shr
out
rcl
leave
popf
iret
out
push
fidivr
mov
out
cdq
adc
clc
cwde
in
inc
mov
jmp
and
nop
cmc
clc
out
mov
push
push
push
add
add
add
add
add
xlat
adc
ins
shl
mov
mov
or
adc
cli
loopne
jae
outs
sbb
bound
iret
test
lea
inc
jecxz
bound
mov
cld
mov
ret
pop
mov
xchg
into
fiadd
or
cwde
in
dec
jo
add
iret
nop
add
or
or
dec
sub
ss
push
sub
dec
ror
and
xor
les
scas
pop
mov
pop
gs
mov
cmps
ds
(bad)
mov
jecxz
cmps
cmp
lahf
jno
mov
sbb
repnz
jae
ror
mov
int
dec
jle
shr
les
sub
push
add
dec
lock
pop
call
jmp
bound
int
les
sbb
inc
sbb
paddusw
xchg
inc
mov
sbb
imul
cli
loop
mov
std
inc
in
clc
je
xchg
stos
add
fiadd
adc
add
and
sbb
mov
movntq
out
pop
mov
test
dec
push
pop
jmp
dec
int3
adc
jmp
jb
dec
pop
jae
sub
mov
in
mov
sub
fwait
sti
jmp
or
adc
dec
shl
in
shr
int
pop
cmp
xor
outs
fs
xor
mov
adc
adc
addr16
jbe
clc
mov
mov
inc
mov
or
std
scas
sbb
call
or
mov
test
xchg
test
shr
mov
or
pop
out
adc
fisttp
rcl
movs
in
aad
lods
imul
in
mov
xor
inc
sub
xlat
in
xor
sahf
jmp
sub
idiv
outs
add
(bad)
jmp
push
inc
cdq
push
sub
push
xchg
push
data16
or
push
push
dec
repz
lock
retf
aaa
imul
inc
fsubr
(bad)
dec
and
iret
inc
jmp
movups
test
cmp
stos
inc
xchg
mov
int
adc
xchg
xchg
dec
xor
inc
pop
int
lods
push
adc
sub
retf
repz
dec
gs
sbb
add
addr16
test
hlt
xchg
fcmovb
push
cmc
in
cmp
xor
std
mov
xchg
add
cwde
sbb
call
nop
js
(bad)
sahf
cmp
in
imul
pop
sbb
sub
sbb
add
out
mov
pop
adc
push
sbb
dec
cwde
mov
xor
cli
jne
mov
pop
sub
int3
add
add
add
add
das
fst
adc
jp
call
inc
addr16
pop
sub
pop
or
jge
pop
(bad)
mov
adc
popf
dec
out
neg
push
pop
push
adc
cmp
fidivr
dec
inc
push
imul
(bad)
loopne
adc
add
arpl
jbe
sbb
out
lods
cmps
adc
loope
push
sub
stos
shl
add
xor
sahf
xchg
mov
push
imul
clc
push
cmp
mov
cmp
cmp
(bad)
xchg
sbb
mov
cmps
enter
mov
fadd
push
sbb
movs
jb
fwait
inc
in
jns
(bad)
fld
test
push
lods
aam
inc
imul
retf
push
mov
mov
xor
arpl
retf
movs
aaa
push
jae
sub
xchg
add
loopne
into
in
aam
push
mov
lods
clc
pushf
mov
xor
es
call
cs
dec
jle
sub
out
out
jns
xchg
fwait
pop
cmp
jp
icebp
pop
fsubr
div
out
sbb
sar
es
sti
adc
mov
out
sbb
mov
dec
jo
mov
scas
into
xor
std
dec
jno
mov
cwde
fadd
xchg
and
mov
fld
jg
mov
out
adc
mov
lock
sti
shl
aaa
sbb
enter
mov
clc
xchg
rol
scas
das
lods
in
inc
fsub
in
lea
dec
inc
movs
mov
jecxz
dec
dec
test
daa
mov
mov
int
pop
paddb
lahf
mov
xor
push
dec
push
ret
lock
or
cmps
and
cmp
adc
out
push
fsub
iret
stc
jg
out
lock
shl
ja
retf
mov
add
xchg
in
mov
push
sbb
fiadd
mov
xor
hlt
outs
int3
out
pop
cmp
test
xor
xchg
cmp
or
(bad)
mov
(bad)
rcl
out
adc
jecxz
test
cdq
pop
int3
fwait
push
pusha
das
xorps
mov
adc
repz
in
xchg
bound
add
in
daa
mov
xor
into
add
pop
cmp
inc
cmp
adc
cs
cli
hlt
cmc
aaa
push
mov
fdiv
pop
mov
js
out
and
cmp
(bad)
push
xchg
dec
sbb
mov
ins
sub
mov
sub
mov
je
outs
lods
scas
cmps
les
out
sti
add
inc
arpl
xlat
popf
push
or
pop
jge
mov
retf
or
cs
sbb
add
test
add
in
jg
pop
cmp
fstp
adc
rol
pop
mov
inc
cs
sub
call
int3
ror
in
(bad)
xor
(bad)
adc
test
xor
jb
jmp
gs
mov
sbb
xchg
push
dec
ss
fdivr
jp
fdiv
pop
mov
mov
outs
jae
cmps
lea
retf
push
ficom
out
leave
shl
adc
mov
adc
cld
int3
scas
(bad)
je
xchg
aaa
sub
dec
pop
and
jbe
int3
outs
mov
div
and
shr
or
(bad)
ror
mov
dec
cmps
cs
mov
jne
sbb
mov
add
stos
ror
adc
fadd
adc
or
(bad)
jo
pusha
(bad)
mov
data16
xchg
into
scas
cmp
and
cmp
fisub
sbb
mov
push
sub
mov
pop
mov
add
add
mov
in
mov
pop
mov
or
cmp
fcomp
popf
sbb
test
ror
inc
add
push
lods
(bad)
pop
daa
pop
gs
cmc
sub
jae
xchg
lea
add
mov
movs
mov
pop
movs
sbb
mov
sbb
test
jb
jnp
sub
dec
(bad)
mov
mov
cdq
push
dec
ja
cmp
push
xor
popa
push
and
push
(bad)
dec
nop
sahf
scas
dec
scas
fs
ret
inc
add
arpl
dec
push
pushf
mov
push
and
sbb
mov
rol
enter
test
ins
adc
out
outs
xlat
or
ja
pop
push
inc
fistp
jge
pop
das
sbb
cmps
push
pop
ret
movs
xchg
rcr
addr16
dec
ja
mov
jns
mov
shl
inc
xchg
lods
loope
cmp
cmp
add
retf
xchg
inc
aam
(bad)
fcmovnbe
out
sub
in
xor
mov
mov
sub
dec
in
scas
dec
enter
mov
(bad)
jns
push
ret
pop
inc
mov
test
mov
cli
imul
test
xor
adc
ja
xchg
call
lods
xor
repnz
push
cmp
stc
pop
dec
pop
shr
out
gs
sti
mov
rcl
cs
mov
les
imul
lock
pop
loope
out
push
push
rcl
cmp
and
jge
jg
(bad)
stc
mov
cmp
ja
ss
inc
out
call
scas
ror
shr
cmps
arpl
call
imul
jno
hlt
push
push
sub
push
mov
dec
outs
push
push
(bad)
cmp
es
icebp
jns
fs
lods
sbb
sbb
ret
lods
or
xor
and
pusha
mov
jns
or
les
mov
xchg
(bad)
daa
pop
xor
je
mov
and
pop
fmul
daa
(bad)
and
mov
mov
aam
sbb
hlt
out
cwde
or
test
xchg
adc
sub
fdivr
sub
mov
and
jge
sbb
push
xor
in
lods
jbe
fwait
cmc
and
push
inc
sub
rol
enter
cmp
popf
out
outs
mov
std
(bad)
push
pop
xchg
mov
imul
call
adc
retf
lods
lds
imul
test
jae
out
cmps
xchg
loope
cmp
test
dec
pop
pop
les
sbb
mov
out
lahf
add
out
sbb
nop
hlt
mov
(bad)
imul
fcmovne
out
xchg
cmp
xchg
(bad)
lods
dec
sahf
cmp
xchg
add
lds
(bad)
mov
nop
and
adc
adc
pop
or
clc
retf
fcmovbe
mov
aas
fs
jle
or
popf
jns
inc
outs
push
or
adc
inc
mov
xor
iret
xor
sbb
add
ja
sub
pop
loop
mov
jns
cmp
test
ds
mov
pop
aas
mov
jns
xor
pop
mov
sbb
mov
ror
inc
in
dec
mov
cmp
and
outs
jge
sbb
(bad)
and
mov
xor
lods
xor
popf
mov
add
cwde
mov
adc
call
adc
in
push
addr16
pop
or
(bad)
cld
mov
jnp
call
add
(bad)
popf
out
jmp
pop
xor
aam
push
add
inc
lods
dec
adc
or
(bad)
pusha
test
shr
scas
jno
loopne
jmp
xor
cmp
mov
retf
xor
jmp
mov
icebp
xchg
cmp
pushf
fsubr
cmp
pop
and
add
sub
mov
in
movs
retf
jns
sub
mov
xchg
sbb
mov
add
add
add
mov
sbb
outs
bound
call
adc
cli
cmp
dec
cmp
test
jbe
or
fdivp
jecxz
jno
adc
mov
cmc
inc
inc
xor
dec
into
adc
stc
loopne
rol
sbb
lea
jle
or
add
test
jns
jp
jmp
cmp
fistp
xor
mov
fst
sub
pushf
sub
sub
sub
imul
xor
pop
test
int3
imul
cli
adc
test
sub
jae
dec
sbb
lea
stos
sub
mov
test
sub
add
add
jge
sbb
cmp
fcomp
or
fwait
xchg
sub
or
daa
retf
inc
xchg
mov
sub
xor
sub
aam
push
cmps
(bad)
ja
dec
div
pop
das
fmul
rol
inc
retf
repz
add
sar
xor
or
outs
pop
call
in
cmps
xor
call
into
sub
pop
jecxz
xor
cmp
push
mov
push
mov
jp
iret
and
inc
jl
push
add
aas
push
pushw
(bad)
jmp
and
adc
test
popf
and
xchg
imul
inc
test
mov
(bad)
in
jo
cmp
repnz
or
or
leave
xor
leave
ret
and
or
(bad)
retf
shl
aad
out
jg
or
int
lock
add
adc
scas
add
mov
std
ret
xchg
sbb
cld
xor
rcr
add
add
add
call
push
sub
retf
fwait
enter
imul
jne
pop
repz
in
and
jbe
enter
add
fadd
fadd
mov
jle
jb
ja
aas
mov
cmps
add
dec
cmp
mov
xchg
sub
(bad)
cmps
push
lods
dec
test
dec
push
xchg
adc
add
or
pop
(bad)
pop
or
inc
call
xlat
fbld
pushf
xlat
test
jae
lods
xor
fcmovbe
cli
xchg
pop
add
stos
and
in
lods
mov
pop
sub
movs
pushf
repz
pusha
pop
retf
and
es
in
mov
aaa
shl
or
not
sub
mov
nop
dec
dec
enter
(bad)
push
and
xor
jg
inc
shl
and
lods
stc
lods
inc
and
xor
adc
into
retf
lahf
or
aas
nop
or
inc
std
cmp
sbb
jmp
in
pop
and
out
sahf
or
out
mov
push
std
add
mov
js
movs
inc
enter
and
js
cmp
xor
pop
fadd
enter
lock
xor
in
pop
inc
into
cmp
sbb
test
mov
add
cwde
fisubr
jbe
fld
jp
outs
push
call
mov
mov
repz
adc
ret
push
jne
jg
imul
and
call
sbb
inc
push
ins
add
sub
loopne
outs
out
sbb
push
(bad)
xor
adc
out
nop
pop
adc
dec
sbb
add
fisubr
fist
idiv
cmps
mov
stos
int
test
test
enter
aad
add
sbb
cmp
das
outs
call
stos
mov
fst
xlat
push
inc
inc
(bad)
aad
lahf
das
ja
xor
fild
xor
imul
(bad)
and
xor
xor
jle
sbb
cmp
sbb
push
movs
jmp
les
lea
das
out
mov
cmp
in
test
popa
movs
add
(bad)
cs
or
mov
outs
jg
imul
hlt
icebp
inc
(bad)
cdq
or
add
jp
lods
jae
outs
daa
test
sub
imul
loopne
daa
fnsave
jmp
dec
shl
out
cmps
mov
mov
mov
or
push
sub
fiadd
pop
lock
mov
jb
mov
cmps
inc
mov
push
cmp
jecxz
je
sub
mov
sub
mov
ins
rol
sub
jnp
cmp
cli
xchg
jl
mov
sub
pop
push
ldmxcsr
ins
(bad)
cmp
ins
lds
cmp
add
lods
(bad)
adc
out
or
xchg
dec
inc
stc
cmp
add
add
add
jbe
cld
fld
lea
dec
ins
cmp
outs
adc
xor
ret
adc
pop
jae
cmp
or
test
cmp
sub
div
xchg
adc
mov
push
add
add
dec
retf
adc
cmc
xor
mov
mov
xchg
aas
pop
mov
lds
sbb
cmp
sub
or
(bad)
xchg
cmp
loopne
js
not
xchg
in
call
push
cmp
xchg
std
or
add
xlat
sub
jecxz
cdq
int3
inc
scas
(bad)
fisttp
aaa
stos
ins
push
mov
mov
cld
scas
fadd
icebp
out
inc
jle
jle
punpcklbw
mov
mov
addr16
push
popf
xchg
jmp
dec
outs
fdivp
adc
add
(bad)
pop
cwde
call
adc
mov
je
jnp
dec
enter
rcr
sar
jle
xor
jle
aaa
sahf
cmps
jle
mov
stos
fbstp
push
inc
mov
sub
add
std
stos
mov
dec
test
cmc
(bad)
imul
aas
push
cmp
mov
dec
inc
pop
xchg
cmp
pop
popf
xor
out
xchg
sub
ret
addr16
jmp
jp
mov
xchg
xchg
call
test
rcl
popa
test
icebp
rol
jnp
push
xchg
or
(bad)
and
dec
sub
test
fistp
in
jns
pop
out
dec
cmc
jns
(bad)
inc
or
scas
adc
mov
add
push
jecxz
cmp
test
mov
rcr
or
iret
add
dec
dec
sti
mov
pop
mov
add
aaa
cdq
xchg
push
fs
pop
cld
or
(bad)
fs
(bad)
pusha
imul
shr
push
retf
in
mov
jmp
mov
push
nop
(bad)
sbb
(bad)
mov
and
pop
retf
xor
xchg
mov
inc
sbb
mov
adc
xor
jno
add
push
push
mov
adc
add
mov
sub
dec
mov
inc
je
jl
cld
mov
sar
or
gs
mov
in
inc
or
stos
xor
and
ds
mov
sub
nop
sub
adc
pop
xlat
sbb
movs
fld
pop
test
cmp
popa
dec
jo
test
dec
push
pop
jecxz
cmps
mov
cwde
adc
iret
adc
jno
xchg
push
adc
pop
sbb
cld
xchg
pushf
fld
pusha
loop
sub
mov
das
add
fsubr
test
add
add
add
add
add
dec
jmp
or
fwait
mov
aad
inc
or
clc
repz
mov
pop
xlat
shr
sti
(bad)
add
inc
push
aad
pop
les
fisttp
enter
inc
sbb
jp
mov
icebp
jecxz
xchg
xor
lahf
dec
mov
xlat
arpl
or
mov
scas
call
xchg
pop
pop
push
imul
out
loope
fwait
in
xor
jmp
xchg
sub
stos
mov
pusha
fld
div
pop
mov
jmp
dec
retf
loopne
inc
sub
add
mov
retf
mov
pop
mov
jns
xchg
mov
push
sbb
daa
adc
add
jmp
(bad)
and
retf
jl
sahf
ja
jle
inc
not
test
shr
daa
mov
push
sub
in
or
inc
ret
xlat
mov
inc
mov
es
jne
mov
mov
ror
adc
push
mov
mov
mov
(bad)
shl
ja
mov
xchg
mov
pop
movs
dec
push
push
cld
icebp
out
clc
xchg
jmp
pop
sub
iret
cmp
and
or
out
fistp
(bad)
mov
jns
test
ins
cmps
arpl
sub
cmp
sbb
cmps
sub
xchg
fs
sti
pop
pop
xor
push
(bad)
cli
xchg
and
nop
outs
pop
cld
(bad)
adc
pop
mov
repnz
retf
outs
pop
stc
ds
sbb
inc
xchg
adc
xor
outs
mov
or
es
sub
aad
(bad)
adc
jp
sub
xchg
inc
test
lea
jl
xor
dec
out
mov
sbb
pop
pop
ja
aaa
xor
cld
mov
jbe
pop
cmp
fiadd
fucomi
pop
inc
mov
add
gs
jecxz
fist
nop
cmp
mov
bound
adc
xor
arpl
fs
xor
in
push
sti
cwde
and
retf
inc
or
add
and
loope
jbe
cmp
and
push
xchg
rcr
ins
inc
in
mov
movs
mov
adc
cld
sbb
pop
bound
mov
xor
movs
hlt
push
in
mov
(bad)
jg
test
lea
mov
jg
in
mov
cmc
mov
in
pusha
test
sub
ret
xor
adc
rol
xor
fnstsw
call
mov
int3
jl
int
xor
test
xchg
outs
in
repz
repz
mov
in
pop
jb
jecxz
(bad)
rcr
sbb
adc
ficomp
mov
jmp
mov
add
inc
or
add
aaa
std
and
outs
or
inc
adc
add
sub
daa
push
inc
je
xor
pop
not
mov
leave
aaa
pop
jg
sub
movs
pop
stos
adc
inc
leave
inc
mov
cmps
push
push
xor
push
(bad)
ja
aaa
retf
frstor
call
and
inc
test
xchg
or
outs
jg
aam
jle
stos
cmp
lahf
sar
xor
dec
add
dec
test
fisub
xlat
sbb
addr16
add
dec
or
add
icebp
leave
cld
dec
into
dec
jle
mov
sub
adc
jmp
les
in
int
jl
jne
push
sbb
sub
xchg
adc
or
and
aam
ret
mov
push
or
pop
jne
add
pop
jb
mov
fcmove
pop
mov
dec
cmp
mov
call
loope
cmp
js
fmul
xchg
enter
or
sbb
xchg
sbb
shr
adc
jl
fist
bound
inc
mov
in
jbe
mov
mov
movs
js
cmp
add
cmp
cmp
sbb
call
and
dec
sahf
pop
(bad)
fwait
out
shl
or
out
into
imul
push
test
xor
push
or
icebp
fsubrp
mov
scas
xor
mov
sub
(bad)
sbb
ror
jg
and
mov
mov
mov
inc
fdiv
cvtdq2ps
das
call
dec
clc
push
movs
or
rol
inc
ds
cmc
sar
or
lods
adc
mov
add
add
cmp
retf
loop
cld
xchg
push
in
mov
add
xlat
iret
mov
inc
mov
inc
or
and
mov
pop
aam
enter
test
jnp
mov
or
(bad)
mov
add
retfw
ret
cli
fcom
ret
or
lods
push
cmps
loop
mov
fadd
inc
dec
(bad)
ficom
dec
or
jecxz
pop
mov
cli
mov
pop
xor
sbb
xchg
cmp
xchg
in
call
or
sbb
call
pop
or
add
rcr
ins
ret
jmp
xor
adc
mov
imul
dec
pop
call
pop
clc
into
repnz
daa
jns
inc
sub
enter
and
push
mov
call
dec
rcl
jnp
or
cmps
mov
sbb
or
(bad)
jg
xor
and
xlat
loop
stos
out
cmp
movs
enter
call
(bad)
inc
test
scas
dec
adc
dec
mov
addr16
and
mov
pcmpeqd
gs
jbe
mul
rcl
sbb
and
inc
xor
retf
mov
loop
dec
or
jb
out
fmulp
les
add
ret
rcl
mov
pop
add
fwait
add
adc
es
jge
(bad)
mov
cmp
sbb
outs
ficom
cwde
adc
data16
pop
add
jmp
(bad)
loope
daa
stos
(bad)
retf
mov
nop
mov
inc
sub
in
xor
xor
sub
add
or
mov
in
mul
test
add
xchg
ins
mov
(bad)
sbb
mov
inc
ret
sti
rol
aam
cmc
push
or
sub
xor
repnz
out
pop
add
mov
sbb
sbb
cs
push
add
push
adc
sbb
jecxz
mov
push
mov
push
data16
jmp
inc
xchg
inc
jmp
outs
cmp
mov
cmc
sub
(bad)
stc
cmps
mov
test
fild
sbb
pop
fs
(bad)
iret
mov
in
cs
mov
lock
aas
lahf
jge
mov
mov
fstp
clc
and
cld
mov
fucomip
data16
aaa
inc
mov
and
loopne
dec
cmp
jno
adc
sar
cmps
jb
lods
mov
int3
ror
cdq
sub
ins
fld
add
cdq
sbb
jp
jb
push
mov
scas
dec
adc
sub
mov
jmp
shl
or
shl
or
clc
enter
(bad)
loop
dec
mov
loope
push
inc
xor
sub
daa
sub
scas
xchg
test
mov
pop
jmp
mov
cmp
ins
add
cmp
ins
push
iret
in
pop
jge
out
cdq
gs
les
mov
fadd
adc
mov
add
cmp
lods
je
aas
outs
cmp
mul
movsx
pop
pop
sbb
mov
out
jmp
mov
mov
pop
enter
or
ins
stos
and
sbb
clc
pop
inc
and
mov
jnp
icebp
push
dec
dec
sub
jo
sbb
xor
(bad)
loope
push
sbb
popf
paddusw
pop
stos
push
je
sbb
mov
stos
popa
push
jmp
sub
je
mov
test
lahf
jmp
in
xchg
and
lods
push
ja
daa
push
imul
jg
ins
push
clc
out
mov
inc
les
shl
sub
sahf
sbb
xchg
out
inc
rep
add
es
cmp
dec
adc
push
xchg
sti
repnz
in
pop
jne
sbb
fsub
loopne
adc
xlat
dec
int
jno
sub
pop
lahf
dec
cmp
popa
test
push
cmps
mov
imul
and
or
adc
aam
sub
mov
dec
ins
pop
mov
inc
movs
mov
arpl
pop
adc
push
jne
loopne
out
pop
push
cmp
js
sti
std
adc
mov
mov
mov
cmp
xchg
scas
jne
sti
xor
aas
sub
xchg
mov
add
or
mov
xchg
in
xor
fwait
mov
shl
mov
aad
dec
into
mov
xchg
sbb
test
ins
js
mov
(bad)
mov
pop
repz
in
sbb
adc
data16
icebp
test
popf
shl
leave
and
pop
and
lds
jb
xchg
pop
movs
cwde
int3
not
cmp
mov
jle
mov
cmps
fsubr
notrack
mov
cwde
inc
fld
cmc
sub
imul
mov
add
call
cmp
jno
push
sub
and
mov
mov
xor
push
arpl
test
imul
neg
fstp
test
fldcw
adc
ja
cmps
stos
sahf
mov
xor
xor
mov
inc
imul
mov
add
add
or
add
in
push
add
int3
pop
push
push
sbb
aaa
ds
push
jp
les
ins
cmp
cld
ins
loopne
pop
dec
add
dec
(bad)
fistp
and
cmp
out
and
mov
xor
outs
stos
daa
scas
and
out
push
jns
mov
data16
cs
stc
dec
sub
mov
and
mov
sbb
sub
ins
(bad)
repnz
push
push
and
inc
in
sub
xor
sub
sub
es
repz
or
cmps
cmps
push
xchg
or
stos
xchg
mov
jmp
mul
xor
je
jmp
dec
repz
repnz
enter
rol
out
fidivr
cmp
xor
mov
mov
jmp
adc
jno
aam
inc
pop
repnz
or
or
arpl
inc
retf
je
clc
shl
in
jb
cmp
push
sub
mov
adc
adc
sub
sahf
jo
(bad)
stos
lods
pushf
sub
(bad)
test
hlt
pop
je
sti
and
test
lea
xor
inc
test
adc
pop
inc
or
(bad)
enter
es
pop
mov
cmps
pop
js
mov
jge
rol
jne
jno
jns
scas
dec
cmp
xchg
scas
in
dec
in
mov
jnp
ss
inc
pop
push
xchg
push
or
or
cmp
ins
push
ret
jae
cmps
or
cmp
jbe
leave
pop
scas
loopne
clc
sar
inc
outs
scas
pushf
repz
push
mov
push
loopne
mov
scas
inc
les
hlt
ins
dec
cmp
add
dec
push
cli
mov
call
vdivss
mov
push
pop
test
mov
test
xor
sub
das
push
push
sbb
addr16
ins
repnz
dec
mov
pop
(bad)
call
pop
mov
sar
push
not
dec
adc
leave
pop
shl
jo
mov
js
cmp
add
lock
inc
or
cmp
xchg
push
mov
lods
or
add
test
(bad)
out
cmp
jmp
push
sar
bound
test
push
dec
lds
xchg
and
xchg
rol
data16
pop
scas
ins
xchg
cld
push
lock
xchg
push
sub
push
fsubr
ss
inc
cmp
cmp
xchg
xchg
retf
mov
dec
mov
ins
add
cmp
enter
enter
sub
out
adc
jecxz
ja
pop
sub
outs
push
mov
push
test
out
stc
ficomp
or
push
push
xor
jns
pop
push
xor
mov
dec
cmps
adc
sub
nop
(bad)
pop
push
div
xchg
or
leave
pop
enter
bound
inc
pusha
(bad)
repnz
dec
add
sbb
test
gs
sub
add
sahf
and
sbb
xchg
sub
push
mov
ins
sti
dec
aas
repz
daa
xchg
pop
mov
fimul
retf
add
fsub
test
jns
dec
xor
and
ds
jb
push
cmps
and
loopne
mov
scas
in
(bad)
sbb
and
mov
out
and
push
retf
jo
out
int
dec
iret
sbb
mov
cmps
or
mov
call
(bad)
leave
jne
pop
jo
ds
inc
dec
shl
daa
(bad)
dec
scas
add
mov
and
lea
jmp
sbb
xor
inc
sbb
(bad)
mov
js
(bad)
dec
push
xchg
lods
xor
pcmpgtw
in
lds
xchg
mov
(bad)
sub
fdivr
call
mov
je
int3
fstp
pop
and
out
shl
adc
jp
push
mov
enter
loop
mov
dec
cmp
mov
repnz
xor
cwde
ffreep
test
push
nop
mov
push
dec
sahf
pusha
adc
sbb
sbb
jmp
outs
fs
fsubr
adc
mov
push
fisttp
ret
lds
inc
mov
dec
inc
push
pushf
mov
sbb
mov
xor
and
jne
add
in
adc
das
cmp
sub
lock
dec
pcmpeqb
outs
out
leave
mov
aam
xchg
mov
dec
adc
and
out
add
xchg
(bad)
pop
sbb
out
xor
push
das
loope
stos
mov
xchg
inc
nop
sbb
push
mov
adc
cmps
cmps
mov
cmp
xor
jmp
cdq
aas
sub
icebp
mov
stos
push
push
mov
cld
test
sub
push
pop
pop
or
or
xor
loop
fistp
(bad)
cs
(bad)
data16
jecxz
or
mov
push
out
jne
pop
xchg
icebp
fld
fwait
sub
add
fwait
js
stos
or
shr
outs
xchg
or
(bad)
call
ja
out
rcr
in
jp
mov
cmp
movs
lds
retf
cmp
xchg
push
cmp
or
in
icebp
fwait
cmp
mov
(bad)
loopne
add
dec
ins
test
(bad)
out
repnz
or
fxch
push
mov
pop
cld
inc
xchg
popa
cwde
test
push
pop
mov
(bad)
mov
adc
loopne
aad
bound
mov
jecxz
cmp
xlat
push
xchg
jne
cmp
xchg
xlat
aam
jle
lods
cmps
test
adc
mov
sbb
inc
pop
aam
(bad)
jecxz
aaa
cmps
test
mov
add
adc
pop
jbe
popf
popa
push
arpl
fwait
adc
cwde
cmp
push
mov
push
add
jb
imul
fstp
push
loope
outs
ds
push
hlt
pop
adc
mov
aaa
aas
test
xor
std
pushf
outs
mov
imul
or
push
mov
scas
mov
lods
inc
out
nop
js
dec
fild
or
mov
outs
popa
fstp
mov
das
loop
dec
xlat
jno
gs
xchg
mov
xchg
add
shr
pusha
push
scas
stc
xlat
stos
push
push
addr16
push
outs
aas
retf
data16
or
mov
(bad)
hlt
test
xchg
stos
and
outs
sti
or
push
adc
lahf
ret
inc
push
add
lds
inc
sysret
shl
lea
call
mov
aam
cld
sbb
aad
mov
sbb
mov
mov
cmp
(bad)
fistp
push
xchg
mov
xor
mov
cmps
je
cmps
enter
out
xor
sub
cmp
adc
adc
pop
mov
mov
cmc
xor
sar
std
es
pop
sbb
js
dec
fwait
mov
mov
mov
loope
in
mov
jg
sti
aam
pop
outs
and
dec
push
enter
pop
dec
jnp
pop
pand
(bad)
jl
pushf
xor
cmp
add
in
add
add
add
add
or
jb
adc
inc
mov
or
sbb
imul
call
or
lahf
dec
in
jbe
fs
pop
sar
mov
popa
fld
sbb
arpl
add
mov
fsub
and
mov
pop
push
add
dec
cmc
retf
dec
sbb
inc
add
push
mov
cmps
mov
(bad)
retf
dec
inc
jmp
ins
fs
ret
cmp
mov
ja
fwait
repnz
mov
fcomp
pop
jae
int3
sbb
ja
rol
xchg
test
std
xchg
(bad)
dec
mov
rol
mov
aas
out
loop
mov
ins
and
cs
mov
sub
add
icebp
inc
pop
fld
add
add
add
js
push
pop
repnz
cli
pop
in
retf
movs
cld
iret
inc
loope
xchg
mov
popa
pop
and
adc
cli
and
ror
lods
jae
into
inc
gs
lods
test
popf
push
or
xchg
adc
sbb
mov
jge
lock
push
push
dec
clc
adc
or
dec
cmps
push
cmps
cs
inc
or
icebp
hlt
cmp
xor
dec
xchg
cmp
push
jg
lods
test
fisttp
jg
jnp
cld
fsub
adc
nop
sbb
dec
sub
add
add
popf
or
imul
bound
lock
push
repz
adc
(bad)
(bad)
xchg
lahf
pop
leave
cmp
mov
mov
mov
xchg
gs
ret
gs
jmp
mov
sti
push
xchg
in
and
and
ret
sub
sbb
inc
in
(bad)
mov
sbb
mov
mov
cld
(bad)
stc
out
pop
fbstp
nop
int3
inc
daa
mov
pop
adc
test
hlt
shl
push
enter
mov
cmps
inc
dec
(bad)
add
cwde
cs
pop
in
stos
repnz
jmp
fsub
inc
cmc
seto
cs
sar
cmps
mov
mov
xor
iret
cwde
repnz
lds
(bad)
cmc
out
loope
not
add
int
xchg
out
(bad)
hlt
fldcw
mov
das
test
dec
xor
ret
pushf
adc
adc
sub
dec
cmp
adc
sbb
adc
jge
sub
mov
dec
data16
das
lahf
or
or
out
fiadd
call
jl
cmp
sbb
mov
pop
adc
sbb
les
inc
sbb
popa
inc
sbb
aad
add
sbb
jp
outs
cld
sahf
dec
(bad)
push
pop
push
repz
aaa
sti
pop
adc
dec
push
jg
lods
ficom
dec
(bad)
loop
icebp
retf
push
jbe
mov
sbb
inc
jecxz
in
out
xor
imul
or
sbb
cld
mov
push
imul
dec
div
jp
push
in
mov
push
jp
ret
sub
mov
rcr
fidiv
dec
xor
cmps
shl
inc
and
inc
xor
push
pop
clc
stos
aaa
popa
sub
test
pop
mov
shl
and
(bad)
jo
xlat
stos
mov
sub
jb
aas
push
arpl
sub
ror
data16
sub
fs
jno
pop
dec
pop
or
ret
ins
jmp
aas
jbe
test
inc
jmp
retf
leave
add
pop
fs
xor
fsubr
aaa
rcr
into
mov
ja
stos
and
xlat
xchg
in
pop
and
and
jmp
pusha
adc
mov
push
jo
add
test
dec
imul
dec
push
push
aas
adc
and
(bad)
mov
mov
imul
xchg
mov
push
aas
out
fsubr
sbb
iret
jb
push
adc
scas
sub
ja
pop
pop
das
or
movs
adc
std
xrelease
fs
repz
dec
inc
xchg
or
fwait
arpl
mov
retf
inc
aaa
pop
lahf
pusha
in
push
outs
jae
ucomiss
jmp
cmps
mov
mov
sub
pop
fcom
mov
into
popf
pop
jae
jmp
xchg
call
popf
leave
ins
inc
cmc
push
js
inc
leave
shl
sbb
adc
pop
mov
mov
daa
xchg
mov
jb
and
aas
lahf
repz
cmp
mov
sub
lds
xchg
loop
nop
ret
mov
fdiv
jmp
shr
enter
scas
inc
mov
loop
outs
out
or
cmp
mov
outs
mov
mov
sbb
jnp
aad
add
mov
out
mov
push
loopne
mov
inc
into
out
loope
ror
fwait
push
push
jle
inc
cs
jle
repnz
xor
sub
test
adc
dec
jmp
clc
xchg
or
push
sar
fadd
pop
dec
ins
push
dec
xor
cmp
dec
xor
imul
in
test
push
push
push
sub
dec
push
sub
pop
dec
or
lods
repz
int3
cmps
les
jmp
fcom
jge
mov
icebp
push
dec
xor
fwait
ja
fadd
shl
or
cwde
rol
(bad)
push
inc
add
add
add
cmp
test
sub
in
push
xchg
sub
jo
lock
or
dec
dec
add
push
fwait
dec
cmps
push
cmp
xchg
add
jp
push
daa
je
pop
inc
push
inc
icebp
call
mov
ror
dec
lods
in
add
inc
push
mov
iret
lods
xchg
stc
cmps
xchg
dec
mov
arpl
movs
shl
lea
jge
add
sub
add
push
popf
cmp
mov
and
imul
mov
icebp
mov
pusha
repnz
sti
and
sbb
pushf
aam
and
aas
test
lock
xor
int
sahf
popf
aaa
and
adc
mov
out
add
scas
xchg
xor
jp
repnz
aaa
scas
push
out
stos
mov
cmps
xchg
jl
imul
into
sub
jns
push
xchg
pop
adc
dec
lods
imul
in
jmp
and
dec
pop
jne
or
jbe
loopne
mov
cmp
sbb
mov
loopne
in
jmp
loop
lods
fild
fild
xchg
mov
fwait
cs
dec
cdq
movs
outs
pop
dec
aas
rcr
mov
cmp
adc
ror
jle
into
add
clc
mov
mov
mov
jno
or
popa
imul
mov
rol
mov
cmp
add
inc
mov
in
cmp
es
rol
icebp
add
dec
je
jbe
popa
push
cdq
mov
mov
mov
(bad)
loop
mov
add
xlat
add
ja
lods
inc
mul
mov
mov
add
jbe
add
jmp
fldcw
sub
dec
cld
mov
sti
push
inc
fldenv
imul
mov
ja
sbb
inc
adc
jg
mov
dec
or
(bad)
int
sbb
cmp
add
int3
or
jb
sbb
retf
mov
aam
and
mov
sbb
sub
mov
cwde
and
addr16
sbb
dec
test
jb
lods
push
loop
movs
dec
ins
jmp
adc
pop
out
(bad)
push
test
add
or
jns
pop
aas
cs
sahf
inc
sar
and
cwde
add
mov
lods
shl
jmp
xchg
pop
js
cmp
arpl
and
and
mov
icebp
jg
xchg
fdivr
or
adc
out
mov
pop
clc
dec
repz
lds
(bad)
xchg
pop
imul
gs
push
out
call
adc
rcl
and
lods
xor
push
lea
push
pushf
xchg
stos
jp
in
(bad)
push
or
push
sbb
mov
pop
ret
xor
cmc
mov
shr
aad
sar
push
xchg
adc
mov
rol
ror
out
popa
push
das
sub
lods
jmp
into
push
out
not
cdq
xchg
dec
push
or
(bad)
in
sbb
xor
jno
xor
or
jmp
mov
repz
(bad)
or
addr16
imul
lea
mov
add
xchg
scas
jl
test
stos
xor
js
pop
inc
mov
xchg
aaa
dec
add
dec
mov
xor
xor
xchg
or
or
in
mov
lock
push
aas
adc
adc
fsubr
sbb
xor
fbstp
out
loop
mov
retf
dec
test
add
in
xlat
jmp
pop
(bad)
and
pop
in
mov
inc
xor
push
xchg
shl
adc
jne
push
aas
out
icebp
mov
xchg
fwait
mov
mov
ins
scas
push
das
loope
fisttp
and
inc
(bad)
data16
push
ins
pop
mov
push
fiadd
xlat
jne
loope
pop
orps
push
or
xchg
les
add
adc
push
mov
adc
mov
(bad)
mov
xor
or
cmp
movs
add
test
outs
jno
mov
pop
imul
xchg
or
xor
scas
lds
repz
cld
xor
xor
xlat
fisub
push
cmp
ret
mov
or
mov
cmp
je
mov
push
sbb
repz
mov
test
or
loopne
jp
sahf
jp
sbb
xor
xlat
das
and
ins
mov
xchg
inc
call
sub
or
cmp
dec
adc
ins
pop
cmp
in
push
(bad)
pusha
sub
and
es
xchg
or
adc
ffreep
cwde
inc
jno
ret
pop
sbb
(bad)
repz
inc
cmc
outs
mov
mov
xor
cwde
icebp
ins
movs
scas
or
ins
cmps
push
inc
lds
cmp
mov
loop
and
fcomp
sbb
sbb
out
sbb
adc
je
jg
in
xchg
rcr
movs
fsubr
mov
arpl
sub
inc
mov
mov
adc
movs
push
cdq
dec
dec
aaa
gs
cmps
ror
and
sbb
lahf
and
sti
mov
(bad)
(bad)
push
fptan
jmp
or
and
push
cwde
popa
retf
(bad)
xchg
inc
dec
mov
pop
xor
lods
retf
lods
sub
sahf
sub
pop
in
ins
pop
(bad)
jge
or
outs
leave
lds
into
cmp
adc
adc
bswap
xchg
outs
sub
and
sti
mov
out
mov
and
fisub
xchg
jo
nop
out
push
mov
out
hlt
jno
pop
in
jle
pop
inc
test
out
out
sbb
les
aam
test
cmp
add
lea
add
mov
add
sub
sti
(bad)
pop
inc
jmp
lahf
not
cmp
jmp
pop
jp
add
cmp
adc
xchg
fild
fisubr
aam
mov
add
inc
xchg
into
xor
in
and
pop
inc
adc
and
mov
mov
das
push
pop
cmps
aaa
push
mov
imul
mov
jecxz
sub
mov
sub
in
sub
push
inc
ret
add
add
add
add
sub
jbe
std
sar
adc
xchg
push
cmp
aas
mov
or
mov
adc
xchg
lahf
mov
movs
(bad)
lock
add
inc
inc
shl
cmps
fadd
mov
ror
pusha
inc
(bad)
cmp
jne
mov
bswap
fs
movs
sti
cli
jb
cmp
jno
pop
ret
aad
in
clc
push
xor
les
push
scas
out
inc
rcl
xlat
aad
dec
nop
mov
in
and
inc
mov
aaa
cld
fs
sbb
mov
movs
lahf
xchg
xor
mov
jne
(bad)
outs
xor
(bad)
xchg
aam
movs
mov
fs
fs
cmp
xlat
ds
mov
test
call
add
xor
xlat
dec
lods
cmp
pop
adc
es
inc
inc
int3
das
xchg
(bad)
mov
scas
maskmovq
imul
add
sub
jae
enter
adc
leave
dec
inc
lds
not
xor
mov
loope
add
mov
ss
mov
(bad)
adc
call
push
call
enter
sub
call
mov
mov
mov
jne
dec
mov
cmp
stos
(bad)
lahf
or
jecxz
xchg
dec
xor
jmp
and
xchg
or
jno
mov
fild
in
nop
xchg
lea
test
cld
outs
enter
daa
mov
xchg
mov
push
and
das
test
call
retf
inc
clc
das
out
bound
mov
hlt
jmp
lahf
int
shl
mov
out
xchg
outs
pop
ror
shl
jecxz
daa
mov
call
ret
add
(bad)
data16
sub
jnp
mov
dec
mov
idiv
xchg
ss
adc
mov
cmp
cmp
out
lds
mov
icebp
sbb
pop
mov
pop
ret
or
fiadd
mov
mov
lock
add
cmc
pusha
fidiv
push
add
or
inc
mov
sar
aaa
ret
mov
int3
pop
inc
div
pop
push
test
and
sahf
mov
in
xchg
sti
fs
ret
inc
cwde
xchg
sub
add
shr
je
add
rol
push
jmp
sbb
lock
jno
lea
inc
sar
sub
retf
cwde
ss
in
jmp
cli
fimul
xchg
sub
adc
das
inc
jns
dec
cld
xlat
retf
mov
mov
push
and
mov
pop
out
sub
pop
stos
bound
imul
inc
add
pop
pop
std
jmp
mov
mov
loop
inc
jl
inc
and
or
ss
lods
and
jns
std
or
mov
arpl
mov
push
inc
jbe
movs
rcl
ret
or
popa
push
xor
repnz
mov
(bad)
mov
test
enter
adc
mov
xor
popf
or
es
cmp
xor
cmp
cmp
ins
fidivr
jmp
dec
mov
scas
mov
inc
lods
add
add
std
cmp
xchg
xchg
lahf
sbb
test
in
ins
pop
xchg
jmp
xchg
cmp
pushw
mov
pop
sub
pop
xor
add
inc
sub
(bad)
lods
scas
pop
adc
pop
push
add
and
into
stc
ficomp
and
cld
stos
jle
popf
cmps
sub
mov
shr
mov
cmp
jecxz
shl
test
push
dec
ss
mov
push
pop
fisubr
fiadd
xor
fnstsw
mov
es
or
pop
xchg
jo
xchg
fadd
fcomp
and
push
sub
inc
jno
(bad)
mov
xchg
xchg
pop
adc
cli
fisubr
out
imul
adc
sub
jp
in
(bad)
aas
loope
(bad)
arpl
sbb
mov
cmp
sub
fwait
call
ffree
pop
jnp
mov
and
xor
fild
fnstcw
jnp
jb
pop
fidivr
and
push
sbb
push
mov
aas
lss
imul
inc
stos
mov
stos
das
repz
cmp
pusha
popf
xor
mov
iret
pushf
ret
ins
std
lds
xor
in
fimul
mov
add
loop
test
inc
inc
js
adc
dec
jnp
loop
adc
int
cdq
cmps
xor
xor
loop
push
fs
push
out
jmp
fistp
and
rol
sbb
or
retf
xchg
xor
idiv
sti
pop
push
jb
dec
call
cs
xchg
fdivr
mov
ja
sbb
cmp
xor
jecxz
imul
sahf
dec
lods
fcomp
xchg
pop
gs
add
cmp
stc
in
sub
jmp
sbb
xor
rcr
xor
and
je
ret
lea
adc
xor
(bad)
jmp
int
mov
jmp
inc
call
jl
je
sbb
data16
jmp
cwde
shl
cmp
xor
in
loopne
sub
pop
in
lock
jns
cmps
int3
inc
daa
adc
sub
xchg
jbe
adc
pop
test
xor
repz
ret
ret
out
xchg
pop
or
xchg
rcr
jecxz
cmps
pop
aas
out
leave
outs
mov
push
test
mov
mov
cmp
push
xchg
rcl
jae
nop
mov
inc
xchg
cmp
stos
std
test
inc
repnz
jnp
push
stos
push
mov
out
sbb
pop
push
sub
mov
mov
call
and
sbb
iret
pop
or
pop
fistp
mov
pop
fst
ffree
ins
(bad)
push
cdq
cmp
repnz
xchg
xor
dec
sub
mov
mov
push
cdq
xor
or
cmp
xchg
in
pop
sbb
outs
inc
ret
(bad)
add
icebp
stos
mov
jecxz
push
aaa
mov
imul
adc
out
retf
jbe
lds
sub
ficom
and
sbb
and
jns
repz
sub
ficom
sti
popf
(bad)
pop
dec
xchg
xchg
sbb
or
pop
dec
xor
sbb
js
add
rcr
push
outs
loopne
mov
mov
lea
dec
mov
mov
jecxz
ja
cmp
std
arpl
cdq
enter
dec
(bad)
pop
out
cmp
enter
(bad)
xchg
repz
and
popf
aad
test
sbb
ficom
mov
repz
inc
fld
cli
int3
push
stos
ins
push
jb
add
or
clc
leave
jne
(bad)
ins
add
adc
enter
das
mov
or
push
mov
sbb
dec
rol
xor
xor
dec
pop
lahf
lods
stc
mov
mov
sub
push
dec
mov
add
add
pop
add
and
add
mov
sahf
sbb
inc
gs
push
cmp
iret
pop
push
dec
cmps
mov
ins
adc
das
outs
mov
sbb
xchg
ficom
push
push
inc
nop
push
js
inc
mov
inc
add
fnsave
bound
test
pop
xchg
mov
jle
dec
sti
xchg
scas
sbb
mov
(bad)
cmps
cli
(bad)
pop
mov
sub
cmp
pop
in
inc
and
fmul
ins
cmp
pushf
jbe
jno
mov
arpl
push
in
jns
call
xchg
lock
fldz
adc
retf
imul
js
sbb
jl
mov
dec
(bad)
push
test
addr16
mov
dec
in
sub
mov
mov
mov
mov
(bad)
(bad)
push
xor
ficom
sub
xchg
or
imul
xor
and
test
addr16
(bad)
cmp
push
dec
(bad)
jns
inc
sbb
adc
loop
movs
xor
imul
push
xchg
pusha
fcomp
xor
loop
mov
stos
or
les
ffree
(bad)
and
ror
in
fwait
sbb
out
aam
test
push
or
xchg
imul
inc
scas
mov
retf
rcr
retf
mov
or
inc
cli
popf
pop
(bad)
clc
xor
imul
push
pop
jno
adc
mov
ret
mov
sub
sti
aam
or
jmp
pop
inc
xchg
scas
cmp
inc
pop
push
frstor
cmc
sbb
push
les
mov
pop
addr16
mov
mov
repz
loopne
daa
xor
out
jns
jmp
and
inc
ret
mov
es
(bad)
das
bound
daa
and
ret
sahf
test
lock
push
movs
mov
sub
push
push
jmp
pop
xchg
out
push
dec
mov
or
call
mov
dec
adc
popf
cmps
mov
inc
test
ret
lock
sbb
sti
xchg
lds
jmp
cwde
retf
leave
mov
into
mov
xor
xchg
pop
mov
movs
and
or
je
and
pop
add
fadd
push
aad
shl
js
xchg
bnd
sbb
pop
dec
add
retf
or
fdivr
sub
jne
movs
sub
daa
adc
rcl
ror
jnp
shl
add
xor
dec
xchg
mov
cdq
add
scas
mov
jp
mov
fld
mov
jge
ret
adc
adc
outs
ja
sar
fstp
push
fnstenv
push
rcr
mov
cdq
cmp
push
into
or
imul
and
enter
out
xor
fwait
push
mov
dec
retf
add
jb
pop
push
cmp
retf
mov
fabs
dec
cmp
pusha
cmp
fadd
and
push
mov
outs
sub
imul
mov
xchg
inc
(bad)
mov
call
or
stc
popa
(bad)
out
pop
dec
mov
das
(bad)
jnp
mov
loope
addr16
stos
mov
fild
fist
in
or
lds
dec
std
pop
sub
push
leave
pop
dec
movs
push
lods
xchg
cs
push
out
or
mov
dec
xor
in
xor
repnz
sub
mov
jo
ror
in
xor
popa
pop
dec
push
pop
add
lods
xchg
mov
pop
iret
cld
xchg
and
adc
push
sub
fldcw
push
mov
adc
xchg
xchg
jg
lods
hlt
inc
sub
nop
sub
mov
xchg
cld
fsubr
dec
dec
stc
mov
int3
jbe
repnz
cdq
dec
movs
out
leave
fwait
inc
shl
mov
sti
cmp
pop
pop
dec
in
mov
push
push
mov
in
repnz
mov
(bad)
push
xor
fadd
sub
test
mov
aas
push
adc
loope
fadd
into
or
pop
mov
test
add
js
adc
inc
sar
js
fadd
iret
mov
pusha
repnz
jbe
cmp
mov
dec
jmp
jno
push
push
xor
or
xchg
jno
into
retf
and
inc
fdivr
xor
int3
call
aad
stc
and
ins
(bad)
ss
jbe
aad
xchg
jno
mov
aad
stos
fucom
sar
mov
push
icebp
xor
test
rol
ss
and
xchg
xchg
adc
ja
rol
mov
movs
dec
mov
pop
push
or
pop
stos
inc
ret
mov
into
pop
jae
dec
ficom
sub
ret
into
mov
mov
std
xor
outs
push
(bad)
imul
add
xchg
push
adc
push
push
sub
add
mov
mov
retf
ffreep
add
xchg
xchg
cmp
push
outs
or
xor
or
push
pop
out
pop
or
cmp
loop
mov
xchg
dec
test
sub
mov
xor
fistp
loopne
sbb
mov
stos
lahf
xchg
mov
xchg
enter
push
movs
mov
mov
jmp
repnz
hlt
(bad)
fstp
xor
push
mov
es
aam
(bad)
push
data16
retf
outs
push
popa
orps
and
cmp
(bad)
and
xchg
dec
dec
shl
push
cli
cmps
inc
pop
sub
pop
pop
sar
xor
or
sbb
jge
pop
jl
ins
inc
add
inc
mov
ror
aam
mov
popa
(bad)
outs
test
stos
stos
pop
iret
popf
jbe
adc
out
mov
rol
bswap
out
outs
mov
ins
mov
stos
and
adc
sti
test
mov
out
test
test
dec
mov
or
lahf
int
retf
retf
jnp
xor
xlat
ror
lods
mov
out
inc
je
fidiv
jecxz
aam
lahf
fiadd
sbb
fidivr
inc
aas
pushf
dec
adc
xor
and
(bad)
jo
inc
jge
push
and
inc
fidiv
push
push
xchg
js
xchg
sub
sub
cmc
pandn
mov
sub
push
jnp
push
cmp
cmc
iret
mov
ret
pop
into
jno
xchg
call
push
cdq
jne
mov
or
popf
mov
sbb
mov
push
adc
sets
mov
xor
ja
out
sbb
div
inc
lock
mov
mov
sbb
push
rol
sub
cmp
jnp
mov
mov
pusha
or
lods
fidiv
shl
lds
and
adc
pop
js
into
test
daa
sub
inc
dec
sbb
add
inc
cld
mov
and
mov
inc
dec
and
lahf
sub
ror
mov
and
dec
aam
mov
cmc
pop
dec
hlt
out
push
(bad)
lds
add
add
add
add
sub
sbb
and
fdivrp
cmp
lahf
pushf
add
out
into
stos
xor
pop
mov
ds
rcr
into
xchg
sahf
into
je
cmps
popa
sahf
add
rep
popa
or
jne
inc
dec
inc
jb
ds
adc
push
jae
xchg
sbb
shl
ror
dec
movs
(bad)
js
adc
pop
add
(bad)
cmps
in
ret
add
call
test
add
add
add
add
add
jmp
cmp
setno
outs
fnstcw
mov
dec
fmul
lahf
jl
in
add
push
sub
xor
mov
mov
shl
mov
fstp
ja
inc
repz
sahf
add
cmovne
enter
xor
icebp
or
arpl
dec
mov
std
mov
sub
pusha
in
mov
leave
push
sub
ror
pushf
jg
in
jnp
outs
fs
ja
jb
cmp
cmp
adc
cmp
mov
pop
mov
les
fld
lods
clc
sub
jp
inc
cmps
mov
int3
fiadd
ss
sub
sbb
dec
in
cmp
ror
lea
ins
ficom
sbb
jae
pop
rcl
sub
aam
test
mov
jne
aam
mov
lock
std
gs
loop
push
sub
repnz
pop
pop
mov
inc
sub
jecxz
sub
pop
std
or
mov
mov
aaa
fisubr
pop
inc
xchg
xor
xlat
pushf
(bad)
idiv
and
mov
cmps
add
movs
inc
jbe
xchg
mov
(bad)
lds
cmp
sub
inc
nop
push
retf
aad
mov
or
mov
push
xor
add
cli
pop
mov
movs
std
jbe
dec
dec
pop
push
sub
cmp
sub
in
sahf
cmovae
jae
(bad)
pushf
in
sar
dec
cmp
inc
or
setg
and
dec
adc
jmp
or
pop
push
jno
repnz
fucomp
loope
repz
pop
loop
push
push
out
adc
push
jge
cmps
loopne
push
jne
add
repnz
jae
and
retf
pop
mov
push
push
repz
pop
pop
fistp
push
jp
out
xor
inc
lds
and
and
xchg
movs
pop
into
mov
dec
xchg
push
ret
in
in
pop
dec
icebp
fdiv
call
enter
xchg
sub
xor
ficom
fild
jae
lea
jl
sbb
pop
lods
shl
test
fmul
lods
pop
jb
std
or
outs
inc
std
pop
jae
cmp
jle
cli
fdiv
stos
dec
in
shl
cmp
sub
inc
mov
or
iret
cdq
fldz
outs
(bad)
xchg
cli
lea
out
imul
xchg
fmul
mov
das
popa
sbb
xlat
pop
add
out
sahf
outs
xchg
pop
stos
test
xchg
xor
pop
test
push
sub
call
pop
je
aaa
dec
scas
data16
in
sbb
inc
mov
cmps
inc
jp
jb
mov
arpl
leave
xor
out
mov
mov
cld
add
cmps
repz
lds
pop
xchg
mov
inc
ficomp
dec
and
adc
and
inc
leave
cmp
mov
out
cli
out
(bad)
jno
xchg
xor
pop
inc
add
and
jno
adc
iret
inc
sub
or
sbb
and
sar
xor
xchg
cmp
scas
pop
mov
jmp
mov
adc
lahf
scas
jne
lods
pop
pop
aam
pop
and
inc
xchg
mov
mov
adc
jo
lahf
jge
out
mov
in
popf
jp
add
add
add
jmp
jo
addr16
ret
inc
ss
imul
add
jb
mov
jnp
shl
add
jb
push
stc
in
inc
(bad)
leave
imul
(bad)
mov
mov
cmp
cmp
xor
in
pop
aam
imul
test
mov
inc
(bad)
mov
jmp
mov
(bad)
mov
push
push
dec
pop
pushf
mov
adc
pushf
pop
mov
scas
jnp
aaa
mov
xor
cmps
add
pop
ret
mov
and
sbb
ins
mov
daa
xchg
pushf
push
push
sahf
adc
cs
shr
dec
(bad)
out
xchg
sbb
lods
aas
inc
xchg
pusha
inc
mov
aaa
xchg
leave
scas
pop
shr
sub
iret
mov
loop
jmp
adc
or
adc
fld
fdivr
into
xchg
mov
mov
inc
or
clc
add
sti
loope
push
inc
adc
inc
in
test
mov
and
push
xlat
shr
mov
leave
fxch
shl
push
jns
dec
cmp
int3
das
fisttp
imul
xchg
sub
sub
inc
cmp
std
cmp
add
xor
dec
movs
pop
cmps
or
and
lea
(bad)
xchg
jno
and
add
dec
outs
das
fist
sbb
std
ja
dec
push
jae
enter
pushf
jnp
icebp
jge
sub
xchg
xor
mov
add
mov
mov
call
inc
inc
mov
fst
push
dec
(bad)
in
jno
addr16
add
sysret
repnz
cwde
std
clc
xor
in
in
pop
jmp
aas
adc
stc
adc
nop
imul
pop
pushf
popa
fsub
sbb
adc
bound
ins
enterw
scas
push
dec
out
inc
pop
repz
adc
cmp
test
das
jmp
sub
(bad)
ja
cdq
std
inc
dec
add
xchg
(bad)
fmul
loopne
xchg
sti
add
sub
add
icebp
add
ja
jle
cli
push
mov
or
jo
je
mov
imul
out
ss
xchg
mov
cmp
push
ffreep
mov
stos
inc
jne
and
push
(bad)
mov
lahf
repnz
jg
bound
lods
mov
push
xchg
in
loopne
(bad)
fs
push
inc
jo
cs
dec
addr16
into
loope
cmp
mov
js
fiadd
ins
adc
mov
adc
push
dec
ins
xchg
test
pusha
movs
and
movs
cmp
mov
push
rol
sar
sub
and
jno
mov
aas
lahf
out
test
mov
pop
xchg
arpl
ss
shr
fsubp
lods
cmp
and
outs
xor
loope
popa
mov
jg
gs
jecxz
fld
inc
data16
mov
dec
pop
cwde
inc
jae
mov
cmp
or
jno
or
mov
cmp
fwait
and
mov
cli
ins
jae
jg
call
push
nop
and
jb
xchg
pop
sbb
retf
and
mov
mov
or
jmp
les
lea
test
xchg
int3
adc
int
mov
dec
mov
or
popa
jmp
xor
mov
mov
aaa
call
rcl
xchg
add
lods
fisub
dec
popa
jnp
cmps
or
cmc
in
out
aas
mov
push
sub
xchg
mov
add
enter
xlat
pop
sub
in
sbb
dec
xchg
or
and
ror
fsubr
in
mov
xchg
mov
pop
mov
nop
mov
pop
ja
push
fnstcw
in
mov
or
add
fstp
retf
xchg
pushf
add
in
cmps
out
pop
into
ss
mov
pop
push
xchg
(bad)
push
idiv
inc
jnp
es
mov
sbb
mov
sub
cs
mov
inc
in
and
xor
dec
shl
scas
xchg
(bad)
push
mov
sub
mov
or
outs
push
lods
jecxz
adc
aaa
add
jne
dec
aad
ficom
mov
dec
sti
test
mov
and
enter
xacquire
mov
adc
mov
mov
sbb
mov
mov
(bad)
adc
dec
push
call
dec
dec
push
out
pusha
and
fwait
jg
xor
imul
cmp
push
into
pushf
cmps
mov
and
ds
inc
cmc
fdivr
nop
sbb
nop
(bad)
addr16
daa
and
adc
movs
inc
adc
cmps
int3
cmps
es
pop
push
inc
jmp
js
inc
arpl
popa
mov
or
icebp
sti
call
mov
ss
jae
int
dec
push
lods
jp
cmp
mov
cmp
stos
jecxz
mov
mov
(bad)
sub
pusha
mov
push
jbe
push
outs
cdq
rcl
cdq
cmc
in
gs
inc
adc
mov
push
xchg
nop
and
and
pop
cvtps2pi
push
std
aaa
data16
add
mov
mov
pop
imul
mov
inc
xchg
outs
pop
fsubr
push
sbb
jb
lds
push
jle
aas
dec
and
jns
sub
adc
inc
cld
(bad)
repnz
jg
fidivr
loope
push
inc
mov
popf
movs
cmp
mov
xlat
cmp
inc
cmp
bound
std
fidivr
imul
push
test
cli
cmp
adc
inc
ret
fwait
pop
push
(bad)
retf
xlat
adc
(bad)
jg
ss
xor
loopne
inc
mov
sbb
or
sub
aad
add
dec
jl
or
mov
not
mov
lods
xor
rcr
addr16
sar
sub
xor
add
frstor
cmps
mov
mov
push
add
push
(bad)
push
shl
mov
daa
cmp
cmp
xor
and
add
enter
scas
jno
mov
es
pop
imul
imul
aas
cdq
scas
xchg
into
sbb
fnstenv
rcr
fadd
dec
mov
or
fwait
sti
inc
sbb
or
mov
dec
dec
sub
adc
push
lods
cmp
out
gs
cmps
push
je
int3
inc
test
dec
rol
aas
push
xchg
pop
inc
call
jae
popf
cs
mov
outs
or
(bad)
xchg
jmp
cmp
fwait
adc
inc
fiadd
sti
add
add
add
and
fdivr
out
pop
pusha
mov
or
cwde
scas
dec
fdiv
cmp
fild
das
int3
xor
inc
dec
out
pop
add
inc
mov
je
cld
or
mov
mov
loop
or
dec
xor
jo
cmc
mov
mov
dec
bound
shr
jae
jl
jno
xchg
scas
popa
sub
out
std
fcomp
pop
jb
pop
pop
adc
test
pop
mov
jo
imul
fisub
sub
push
pop
xchg
in
pusha
mov
inc
add
jmp
adc
(bad)
cli
aad
repnz
xchg
jecxz
movs
pop
ss
leave
sbb
test
lea
cld
mov
movs
sub
(bad)
cs
mov
xlat
stos
(bad)
push
arpl
add
mov
cmp
jb
call
addr16
ret
iret
frstor
pop
repz
mov
pushf
xor
sbb
in
jno
xor
xchg
or
int3
ins
out
mov
xor
cmp
fcomp
push
pop
int
repnz
sbb
jl
fild
xchg
mov
int
out
cmp
push
sbb
in
adc
mov
(bad)
hlt
pushf
jp
adc
cdq
clc
add
and
and
xchg
bound
das
xchg
stos
mov
mov
out
lods
push
fs
ss
push
faddp
mov
les
xor
sub
das
jl
shl
add
ror
shr
xor
pop
scas
push
and
mov
aaa
jecxz
loop
out
cmp
fcom
imul
xchg
mov
and
xchg
jnp
int
push
xchg
jmp
data16
hlt
enter
push
popa
pusha
jle
jl
fwait
xchg
mov
aam
sub
shl
ins
stos
cmp
sbb
mul
dec
or
sbb
mov
pop
xor
mov
pop
jns
out
scas
sbb
and
jmp
pop
dec
and
in
mov
jg
xchg
in
jg
out
cmc
inc
int3
rol
adc
test
xor
or
jmp
lea
stos
ins
and
jmp
fsubr
adc
loopne
dec
stos
xchg
mov
stos
inc
movhps
sbb
(bad)
aad
loop
mov
fimul
mov
lock
retf
cmp
jmp
jp
pushf
or
add
pop
stc
les
loopne
outs
data16
dec
cmps
and
out
mov
test
xchg
xor
and
mul
nop
dec
jno
push
jl
in
or
into
cwde
retf
inc
adc
lea
xchg
sub
push
nop
xchg
sub
xchg
cmc
jle
iret
dec
cld
pop
repz
or
arpl
retf
ss
mov
mov
out
daa
pop
ins
or
aas
inc
cdq
inc
jb
pusha
mov
xlat
imul
or
and
adc
es
add
int
add
xor
dec
call
jmp
lock
ins
cdq
mov
sbb
inc
fs
or
or
xchg
pushf
pop
lds
gs
(bad)
push
pusha
push
sbb
stos
int3
call
or
or
add
inc
and
mov
push
jno
popf
jns
fld
clc
adc
scas
xor
push
nop
pop
or
xchg
fidivr
stc
test
adc
push
cld
jbe
add
add
add
dec
fidivr
adc
ja
pop
in
adc
cmps
ss
sbb
and
mov
xchg
mov
add
and
loop
dec
and
mov
js
or
push
int3
and
xlat
sub
jno
pop
lds
jae
dec
shl
xchg
(bad)
sbb
stos
xchg
xchg
sahf
int
add
rol
sbb
inc
in
pushf
inc
xor
lods
xchg
mov
mov
mov
jb
mov
sub
retf
xchg
retf
gs
and
mov
jb
pop
sub
loop
inc
outs
mov
mov
ss
ret
ins
sub
cmp
jno
jnp
cmp
mov
(bad)
push
pusha
push
ins
pop
cmp
adc
adc
adc
jle
jo
xor
nop
xchg
lds
sub
push
cmp
call
and
lahf
ds
pusha
cmc
or
push
sti
out
rcr
shl
ins
add
dec
fist
rol
adc
and
push
call
jmp
mov
pop
movs
or
ds
inc
out
jns
fcmovbe
xor
sbb
cmp
gs
xchg
(bad)
push
stos
or
mov
bnd
ficomp
arpl
dec
jnp
push
sbb
test
add
loopne
clc
jns
maxps
cli
inc
mov
jle
rcl
ret
stos
out
mov
call
xchg
ret
enter
mov
clc
fidiv
sbb
xchg
mov
ja
ror
add
outs
popa
and
(bad)
(bad)
pop
cdq
jns
outs
sub
fcmove
(bad)
mov
xchg
stos
adc
mov
lock
loope
mov
dec
pop
jp
cli
pop
fmul
dec
pushf
(bad)
seto
lock
aam
test
mov
add
jne
lods
jl
fwait
popf
pop
adc
or
push
mov
mov
out
call
mov
xchg
leave
and
jno
mov
pop
pop
arpl
adc
push
shl
add
iret
sub
push
sbb
add
icebp
add
add
sar
cmp
mov
or
sahf
iret
ds
(bad)
push
mov
push
push
or
pushf
mov
sub
ret
(bad)
out
sbb
sbb
mov
cmps
inc
inc
dec
rcl
mov
enter
mov
jmp
das
lods
xor
movs
out
cli
(bad)
hlt
mov
jbe
add
mov
adc
ret
dec
movs
ds
das
adc
gs
or
mov
adc
xor
mov
jmp
lds
xor
mov
jle
or
lahf
fdivp
(bad)
repnz
ret
push
hlt
xlat
stos
out
aad
shl
addr16
(bad)
push
pop
sar
fsub
mov
add
cmp
mov
jp
pushf
and
(bad)
mov
test
push
jge
sub
(bad)
test
and
mov
pop
xchg
sub
pop
ins
in
inc
jbe
xchg
and
movs
inc
icebp
lds
icebp
fs
retf
mov
or
inc
test
aaa
lods
cmp
inc
pop
retf
or
mov
out
and
test
movs
mov
sub
mov
xchg
ins
xchg
adc
ffreep
nop
movs
sbb
pop
test
pop
lock
outs
scas
std
lea
jg
movs
cwde
push
into
int3
ja
push
cmp
mov
dec
mov
sbb
jecxz
xlat
fld
leave
inc
mov
xchg
test
ins
push
or
shl
xor
xchg
data16
inc
pop
sub
jle
icebp
cmp
lock
lock
xchg
dec
jle
add
clc
int3
push
xlat
jmp
push
adc
xor
fidivr
call
ins
loopne
jle
cmps
sub
lea
add
dec
cmp
retf
cld
adc
(bad)
fs
push
sub
aas
aaa
scas
push
outs
into
pop
inc
jno
or
adc
out
dec
call
xor
(bad)
repnz
cmp
cmp
scas
fmul
adc
ror
lock
xor
xchg
scas
fiadd
cmp
lods
mov
xchg
cmc
dec
jge
pop
imul
and
pop
data16
adc
out
mov
cmp
loope
fidivr
mov
mov
and
or
jns
ror
cmp
xor
xchg
nop
stos
or
dec
jle
setge
and
jae
push
es
pop
mov
xor
dec
or
sar
scas
xchg
jge
pop
mov
push
add
add
mov
enter
js
into
sub
outs
xlat
mov
push
dec
xchg
sar
adc
daa
xor
imul
(bad)
xchg
xor
mov
jge
dec
mov
xchg
mov
sub
mov
mov
jecxz
add
and
jl
adc
in
out
(bad)
mov
pop
sbb
xchg
leave
stos
push
repnz
cmc
push
(bad)
repz
lods
ja
(bad)
cwde
push
xchg
inc
jmp
and
daa
inc
pop
xchg
inc
hlt
add
call
jecxz
mov
fstp
mov
setg
lods
in
in
stos
push
cmp
mov
pushf
mov
bound
lods
pop
(bad)
pop
jne
fild
scas
inc
sahf
pop
das
pop
mov
fild
mov
lahf
fmul
aad
and
js
mov
adc
hlt
or
jmp
daa
cmps
xor
(bad)
ficomp
add
fstp
xchg
mov
(bad)
movs
jae
mov
test
jmp
sar
jae
stos
cmps
jecxz
icebp
cmp
sub
xor
xchg
mov
call
adc
out
(bad)
jne
hlt
lea
retf
fidivr
in
imul
retf
pushf
test
add
add
add
add
out
jecxz
adc
dec
sub
test
cmp
jo
daa
retf
ja
mov
loope
out
and
xor
dec
shl
ret
daa
cwde
or
gs
inc
jmp
xlat
mov
mov
and
cli
sahf
fild
pop
je
cmps
xor
xor
ret
aas
pop
mov
mov
jbe
repz
clc
js
push
into
push
pop
xchg
outs
loopne
loope
xchg
mov
dec
cmps
push
or
sub
xchg
nop
loop
test
inc
xchg
push
jmp
(bad)
cmp
push
ds
in
inc
mov
inc
xor
repz
iret
pop
xlat
sahf
or
popf
fbld
inc
mov
jle
std
pop
dec
inc
jmp
call
not
push
ins
nop
hlt
jmp
sbb
mov
jmp
or
add
idiv
dec
and
mov
jl
test
push
fild
dec
scas
push
mov
stc
idiv
jp
jb
lock
pop
xor
int3
bound
inc
int3
mov
jae
repz
sub
adc
loope
(bad)
call
inc
jo
and
popa
pop
jns
or
lods
xor
jne
aaa
out
data16
(bad)
fwait
push
mov
xor
dec
sub
in
or
lods
fisubr
outs
retf
clc
aaa
dec
hlt
jg
sbb
int3
add
push
adc
test
jl
fiadd
sbb
cmp
sub
sub
fdivr
in
cld
push
and
mov
retf
retf
(bad)
adc
stc
xchg
dec
dec
cmps
mov
cmp
and
fild
inc
mov
and
or
mov
fld1
cmp
mov
mov
jmp
mov
nop
(bad)
cli
or
pop
push
sub
pushf
mov
and
cs
xchg
jecxz
xchg
stos
je
ss
mov
jp
xor
or
pop
retf
stc
pop
sub
loopne
sbb
mov
hlt
pop
or
xchg
add
inc
mov
fwait
enter
(bad)
lea
add
jl
pop
lods
test
or
pop
pop
lahf
(bad)
mov
frstor
jae
fs
int3
xchg
cwde
lods
jg
sub
jb
popa
adc
inc
ja
xchg
lea
jp
jp
mov
aad
push
lahf
sub
cmc
mov
cmp
pop
cdq
cmps
xchg
pop
in
pop
daa
push
xchg
rol
push
and
inc
ret
jecxz
mov
push
mov
sub
xor
dec
mov
ficomp
std
mov
popa
lea
sub
push
and
fisttp
stos
dec
sbb
xchg
inc
(bad)
aam
das
add
sar
mov
xchg
cwde
or
out
pop
aad
mov
add
push
add
xchg
hlt
test
jno
les
push
cmp
dec
(bad)
pushf
cmps
jb
pop
ins
vunpcklps
mov
pop
push
jmp
mov
sbb
dec
push
mov
cli
lods
jg
test
sbb
fwait
leave
fstp
inc
inc
data16
xchg
in
jno
imul
or
jmp
inc
(bad)
mov
out
in
pop
popa
cld
and
jnp
enter
test
dec
bound
ins
movs
sti
int
(bad)
sub
push
xor
adc
int
in
aaa
ins
stos
sub
add
add
push
iret
popf
pop
dec
fs
loopne
mov
out
or
push
inc
xchg
pushf
loopne
mov
stc
inc
stos
push
shl
bound
out
rcl
lods
mov
cwde
shl
retf
mov
sub
dec
dec
adc
out
inc
jne
scas
cli
xor
push
loope
fsub
sbb
add
inc
lods
popa
sti
jp
fisttp
movs
mov
std
jle
or
mov
push
lahf
xchg
retf
and
retf
retf
cs
std
mov
lds
fsubr
jp
push
call
adc
mov
adc
test
xchg
rcr
outs
jbe
mov
mov
or
retf
icebp
pop
addr16
aaa
xor
and
mov
mov
leave
cmp
retf
xor
mov
clc
cs
or
dec
cmp
xor
xchg
xchg
xchg
pop
pop
pop
test
push
sub
push
ins
pushf
jae
or
jmp
(bad)
adc
push
fstp
dec
pop
jae
adc
dec
pop
inc
push
push
loope
mov
mov
jmp
sti
out
pop
mov
jmp
mov
or
inc
sbb
push
shl
iret
sbb
mov
les
jmp
rol
adc
sub
(bad)
fstp
lock
pusha
ins
and
push
push
push
(bad)
(bad)
(bad)
pop
and
jb
cmc
mov
lds
pop
pop
jmp
int3
xchg
rcr
mov
and
xor
and
pop
adc
popf
mov
addr16
cmp
push
xchg
pusha
fimul
dec
xor
rcr
in
test
sub
push
ja
and
call
inc
pop
shr
fndisi(8087
(bad)
jmp
jge
retf
rcl
movs
iret
mov
mov
mov
xor
mov
inc
aas
sbb
xchg
cs
imul
or
adc
or
aas
pop
or
jno
inc
leave
ror
pop
xor
inc
repz
adc
iret
pop
adc
xchg
(bad)
xchg
adc
cmp
mov
jge
jmp
push
xor
jns
sub
push
shl
dec
mov
dec
out
inc
jns
xor
sahf
adc
mov
in
shr
(bad)
and
lock
jo
dec
shl
out
jb
jno
fcomp
in
rcr
repnz
mov
cmp
xor
aaa
and
or
stos
popa
ret
lea
cli
outs
xlat
cmp
mov
int
nop
push
and
xor
ds
sbb
loop
pop
push
ficom
adc
idiv
sbb
mov
or
aas
fdivr
dec
dec
mov
fwait
sub
mov
shl
or
ret
aas
out
aaa
xchg
mov
sub
xor
jmp
repz
push
jmp
daa
dec
mov
outs
ds
nop
dec
jge
push
enter
xor
popa
imul
outs
aas
in
sbb
mov
mov
fcmovb
(bad)
les
xor
cmp
adc
xor
mov
add
add
mov
jp
movs
pop
out
xor
jns
cmp
enter
gs
push
mov
loope
sar
push
jmp
dec
dec
cli
mov
cs
les
in
lock
icebp
fist
loop
sbb
fidivr
dec
mov
out
fimul
jecxz
(bad)
movs
sar
or
jp
cmp
mov
mov
out
jmp
cmp
retf
push
sar
pop
or
andps
mov
and
xlat
lahf
sahf
aad
adc
call
cmps
push
pop
xchg
add
xchg
pushf
mov
lods
add
pusha
in
pop
and
or
out
shl
add
not
iret
jns
ror
popa
mov
outs
cmps
sub
push
pop
and
rcl
cmp
(bad)
int3
ret
repz
push
test
fild
mov
or
sbb
adc
scas
mov
hlt
inc
sbb
pop
fld
add
add
xchg
add
lea
dec
sti
outs
dec
add
loop
xor
push
popf
lods
jg
mov
outs
fsubrp
jnp
pop
ss
scas
lahf
xchg
fidivr
ret
add
push
mov
movs
xchg
xor
add
xchg
inc
and
clc
mov
cdq
ins
outs
push
scas
daa
adc
fild
xchg
inc
lods
cmp
and
pop
nop
enter
ret
push
cmp
push
and
sub
fist
cmp
ja
cmp
shl
sbb
mov
jecxz
xor
jle
outs
jecxz
out
cdq
(bad)
mov
inc
pop
stos
clc
xchg
push
ss
call
ror
sar
jmp
mov
retf
and
mov
jge
jmp
mov
daa
test
data16
xor
scas
cmps
dec
jne
repz
gs
cwde
mov
sub
jmp
aas
adc
ss
sbb
jns
and
outs
push
std
xor
fldcw
ret
enter
stc
ficom
mov
jno
jmp
jbe
retf
jbe
xchg
movs
pop
pop
or
ror
push
xchg
mov
mov
xchg
aas
das
and
mov
pop
push
mov
and
fs
or
es
test
lods
cmp
std
(bad)
mov
jmp
fwait
aad
mov
ss
dec
cs
or
movs
adc
jbe
push
sbb
xor
scas
sub
test
push
fcom
aas
iret
push
sbb
fcomp
mov
lahf
sbb
cmp
mov
loope
(bad)
std
fdivr
das
test
inc
mov
retw
fdivr
in
jae
int3
jmp
(bad)
and
sbb
into
push
pop
inc
cmp
mov
sub
mov
jno
fnstsw
fmul
push
cmp
loope
and
push
or
les
add
push
inc
push
pop
lods
popf
nop
mov
lahf
(bad)
xlat
push
xchg
pop
ret
push
ja
adc
pop
enter
rol
pop
jmp
pop
jno
retf
pop
sbb
leave
jns
jmp
test
(bad)
hlt
fcom
cmp
pop
(bad)
cwde
jbe
mov
icebp
jne
xor
fwait
sbb
ds
jge
xchg
pop
mov
pop
mov
or
add
sub
adc
pop
dec
in
jmp
mov
xor
(bad)
shl
mov
push
sub
(bad)
mov
cmps
pop
(bad)
mov
int3
iret
sti
inc
adc
out
push
cmp
ror
lock
push
mov
dec
sub
xchg
pop
into
and
out
fistp
fwait
add
mov
jecxz
fst
xchg
fst
add
push
(bad)
adc
mov
add
mov
push
int3
xchg
sar
in
xlat
adc
dec
(bad)
hlt
push
rcl
outs
(bad)
sub
in
pop
loop
fcom
daa
fidivr
pop
xchg
add
and
cmp
cmovae
les
inc
inc
pusha
or
cwde
or
inc
int
fnsave
loope
mov
fmul
add
mov
pop
aaa
push
cmc
dec
or
inc
out
pop
adc
gs
inc
cmc
pop
xchg
in
loop
cdq
pushf
mov
rcr
hlt
nop
pop
sbb
(bad)
xchg
jp
gs
icebp
loop
mov
fcom
mov
mov
ss
pop
sbb
inc
or
mov
jmp
jnp
cs
bound
add
push
mul
mov
dec
sub
dec
je
adc
sbb
cli
call
enter
add
(bad)
cmovbe
outs
es
pop
loopne
adc
inc
pop
xchg
fucom
scas
mov
sub
out
or
cmp
mov
(bad)
mov
add
sbb
push
sbb
mov
inc
adc
dec
aad
adc
xor
ret
sbb
es
or
inc
adc
jle
(bad)
loopne
xor
nop
pop
xor
cmc
jno
mov
jb
add
ss
retf
pop
loop
jo
and
(bad)
cmp
add
ret
je
ja
arpl
jns
stos
inc
in
jns
jae
sbb
push
ja
add
out
ins
and
cmp
mov
push
sub
cwde
neg
mov
push
xchg
adc
sbb
or
lahf
in
leave
xchg
push
iret
out
and
push
in
cdq
dec
cmc
fwait
es
cwde
or
ja
jno
and
push
xchg
push
mov
dec
jbe
pop
or
inc
mov
jmp
dec
or
clc
jmp
pop
push
push
es
add
sbb
out
add
add
or
add
xchg
add
mov
and
sbb
jbe
mov
ret
test
pop
sahf
mov
and
fdivr
ins
imul
jge
out
and
fsubr
les
sub
test
ins
ja
add
fst
icebp
xchg
arpl
jle
fbstp
jno
enter
scas
pop
pop
sbb
push
cld
sbb
movs
daa
xchg
int
push
retf
arpl
jo
cmp
sbb
mov
ffreep
mov
jle
cmps
inc
ja
jg
(bad)
sub
sbb
(bad)
in
mov
cmp
mov
std
xchg
push
pop
out
cmps
inc
stc
repnz
icebp
mov
(bad)
shl
mov
sti
test
xchg
mov
jmp
adc
push
ds
jbe
adc
mov
and
bound
sbb
push
jmp
fsub
int3
mov
enter
fild
mov
add
aam
dec
je
and
sub
mov
mov
jbe
data16
pop
cmps
mov
xchg
add
cld
rcl
cmc
sar
xchg
(bad)
mov
pop
movs
push
xchg
cmp
lock
push
jnp
cli
test
mov
lods
jne
(bad)
xchg
loopne
hlt
add
imul
sahf
popa
jo
popa
jo
mov
mov
in
jle
pop
pop
in
mov
jns
lahf
loopne
push
push
dec
mov
in
mov
pop
adc
sar
loop
jge
mov
mov
push
enter
(bad)
xchg
into
push
(bad)
ret
dec
xchg
push
fdivrp
in
push
ror
pop
jg
cmp
xor
(bad)
in
push
sbb
fs
movs
cwde
xchg
or
movs
leave
addr16
cmp
inc
pop
add
cmc
addr16
push
outs
jg
mov
ret
adc
dec
dec
mov
mov
xchg
sti
gs
sub
in
push
or
pop
mov
test
sbb
aaa
addr16
shr
ret
inc
mov
ficomp
mul
cmp
inc
jle
cs
daa
out
push
aaa
aam
mov
push
sub
dec
or
cmps
cld
test
shr
mov
push
xchg
jb
in
add
jge
fistp
aad
ja
jg
inc
sub
dec
sbb
adc
aam
pop
adc
mov
ret
jmp
xchg
mov
fs
dec
jmp
out
push
out
cmp
adc
fdivr
(bad)
mov
jl
cmp
call
pop
rcl
sub
inc
das
popa
or
rol
sbb
sub
jg
xor
ja
movs
sbb
test
fs
jno
ja
pusha
div
(bad)
fnstenv
pop
arpl
pop
or
in
cmp
push
(bad)
and
aaa
lea
cmps
cdq
ins
sbb
xchg
sub
outs
mov
js
ins
aad
shr
inc
mov
xchg
test
ins
cmp
jl
std
push
sbb
mov
int3
test
xlat
(bad)
hlt
data16
push
jo
mov
ins
fist
fwait
hlt
jo
scas
sbb
call
xlat
js
ficomp
retf
(bad)
xlat
xchg
in
jb
mov
cs
daa
pop
dec
mov
ret
and
mov
sub
cmp
xchg
and
lods
and
data16
or
jg
in
call
mov
add
xor
xchg
call
mov
int3
test
dec
mov
push
xor
fisttp
mov
push
cmps
mov
imul
jns
mov
or
(bad)
std
sub
loop
mov
imul
cs
aam
push
test
mov
mov
pop
ret
test
push
in
push
arpl
rcr
js
dec
jns
fisubr
out
mov
dec
dec
mov
movs
jns
mov
xchg
add
mov
ror
jp
aad
sbb
aas
and
jg
pop
fld
pop
ds
sahf
iret
push
and
repz
jnp
jmp
mov
mov
icebp
and
mov
fnstenv
pop
xchg
xor
leave
mov
sahf
inc
das
mov
jnp
adc
lea
mov
sub
scas
adc
fwait
push
call
aaa
loopne
pop
ins
jb
data16
push
dec
rol
inc
sti
lods
pop
out
lea
dec
push
push
(bad)
pop
push
es
in
int3
jae
loop
popf
mov
not
xchg
sub
mov
aaa
call
(bad)
push
out
push
pop
in
(bad)
fldenv
retf
ins
cmps
mov
fiadd
stos
pop
out
cmp
(bad)
hlt
rol
mov
nop
sub
jmp
imul
lods
or
xor
cmps
ficomp
stc
jge
mov
lods
inc
jle
pushf
ins
nop
and
bound
inc
iret
dec
fild
jecxz
jne
sbb
repnz
dec
push
fcmove
push
pop
ins
dec
push
add
cmp
ins
imul
cmc
(bad)
xlat
xchg
stos
sbb
in
nop
mov
mov
retf
add
into
xchg
enter
fst
repnz
push
mov
mov
(bad)
mov
and
popa
in
je
(bad)
pushf
or
aad
ja
(bad)
or
ror
aam
inc
(bad)
(bad)
je
or
xchg
int
push
push
push
bound
ins
pop
mov
cmp
push
int3
pusha
fisub
or
cmp
scas
mov
cs
push
bound
ds
sub
movs
in
mov
je
sbb
fcom
imul
mov
dec
and
jnp
repnz
call
mov
cmp
stc
push
push
js
sbb
cmps
xor
or
add
inc
mov
fiadd
mov
rcl
imul
fucomi
call
mov
out
xor
mov
shr
and
fidiv
xor
test
push
push
shl
jmp
nop
in
push
test
mov
mov
mov
adc
push
lds
add
add
add
add
add
add
lods
arpl
inc
push
xor
ins
cmp
ret
loopne
sbb
repz
and
leave
mov
inc
cdq
div
jne
adc
jne
xor
fcom
hlt
mov
push
and
lods
out
xlat
mov
loopne
mov
pop
pop
in
xchg
jbe
mov
std
test
xchg
jmp
daa
mov
scas
inc
dec
jb
inc
xlat
jecxz
in
rol
and
xchg
push
lea
in
push
outs
outs
pusha
mov
pushf
jnp
push
sbb
push
jo
pop
jnp
punpckldq
jo
ins
mov
add
ds
outs
sbb
push
call
fwait
leave
push
add
xchg
fsubp
bswap
fnsave
adc
in
inc
hlt
add
adc
in
ja
sub
call
js
lea
in
dec
xchg
retf
push
cmp
retf
push
mov
and
nop
sti
lahf
jl
addr16
test
(bad)
jo
xchg
dec
xor
push
fsub
xchg
or
xor
xor
or
jb
jne
dec
cli
or
push
rcr
sub
pop
cmp
retf
sub
or
jne
mov
jo
push
push
sbb
dec
mov
call
ja
mov
add
or
add
stc
ins
push
data16
add
aad
shr
pop
(bad)
mov
repnz
das
or
stos
jmp
mov
pop
add
js
pop
lea
js
and
xor
das
into
stos
(bad)
jmp
out
sbb
ins
int3
sub
fst
sub
cmps
cs
pushf
int3
or
push
add
pop
rol
aad
retf
inc
sbb
or
jmp
aam
repnz
mov
inc
push
ret
jmp
int3
js
pop
xor
loopne
mov
add
cmp
jb
stos
cmp
xor
pop
xchg
imul
mov
pop
sti
fst
cli
cdq
jo
push
clc
xor
inc
mov
add
call
mov
out
inc
push
inc
push
ins
push
xchg
inc
add
adc
or
sub
loop
push
jne
or
and
ret
jmp
cmp
ret
test
je
sbb
push
test
sbb
xchg
mov
and
mov
(bad)
(bad)
and
xchg
or
icebp
jne
dec
mov
cmp
mov
pop
jno
fmul
dec
repnz
lods
push
jno
sti
or
xor
mov
pusha
enter
sar
push
movs
jl
xchg
(bad)
scas
jmp
mov
movs
daa
call
pop
cmp
jne
jmp
test
cmp
imul
lods
mov
(bad)
retf
inc
das
std
scas
sub
iret
lahf
and
addr16
mov
sahf
int3
sbb
stos
std
in
(bad)
xor
aas
adc
inc
add
push
cmp
out
iret
cld
cmps
mov
mov
jne
fadd
jmp
rcl
or
jg
mov
jo
mov
pop
push
(bad)
clc
jo
call
mov
jle
push
jae
pop
dec
cmp
jmp
ins
mov
(bad)
ret
cs
mov
out
add
outs
lods
vshufps
jae
and
stc
adc
nop
xlat
xchg
jnp
(bad)
sbb
mov
and
dec
xor
xor
push
mov
cwde
fs
push
push
int
(bad)
js
cdq
loop
inc
inc
inc
data16
retf
push
add
outs
pop
add
or
das
shr
xchg
xor
push
call
jmp
sbb
lods
and
push
fsubr
inc
popf
fnstcw
aas
sub
mov
sub
pop
fist
add
out
ins
enter
mov
dec
xor
push
dec
repnz
ja
gs
pop
jp
repnz
es
dec
nop
mov
jg
test
pusha
mov
push
push
inc
pop
ror
sbb
push
jbe
call
cmp
xor
clc
test
adc
sub
(bad)
loopne
jne
ret
jl
sti
cs
or
pop
sub
pop
mov
push
xor
(bad)
dec
das
xor
repz
stos
sub
aas
dec
cli
jo
call
daa
bound
cwde
int
stos
jmp
or
std
pop
cmps
push
xor
jne
push
sub
ins
mov
add
movs
jg
push
inc
inc
jle
adc
dec
jecxz
lods
lahf
xchg
loop
out
arpl
test
mov
adc
pop
mov
cmps
sbb
mov
or
or
icebp
mov
sub
mov
jecxz
repnz
push
mov
pusha
xor
shr
cmp
les
pop
pcmpeqd
inc
(bad)
(bad)
pushf
push
push
cmp
or
or
cli
inc
mov
mov
jl
or
fwait
cmps
pop
out
les
pop
aas
ret
test
fild
jo
mov
cs
mov
retf
xor
(bad)
sar
rol
dec
mov
loopne
push
add
ror
hlt
jg
pop
push
idiv
adc
imul
xor
daa
shr
cli
sub
xchg
or
cmp
lods
xchg
mov
inc
inc
adc
imul
mov
shl
int3
xchg
and
xor
aaa
les
test
sbb
aad
(bad)
leave
jmp
mov
stc
loopne
or
mov
rcr
jo
mov
jmp
repnz
mov
outs
shl
or
ror
daa
pusha
sub
mov
cs
or
xchg
inc
pop
mov
inc
ret
pop
(bad)
jge
push
movs
push
call
imul
cli
movs
and
mov
xchg
adc
xor
pop
sub
rcr
mov
cs
fcom
into
out
popf
mov
push
add
xor
fst
rcl
mov
push
and
sbb
cs
cmp
loopne
xchg
push
dec
xchg
leave
adc
test
(bad)
cmps
or
test
cdq
cmp
cdq
sub
mov
inc
ret
or
in
jno
ror
push
jae
daa
xchg
fisubr
sar
xor
ins
das
mov
adc
call
call
inc
pusha
push
pop
pop
sub
movs
inc
cwde
jmp
jmp
stos
add
sbb
cvttps2pi
adc
push
adc
push
iret
fneni(8087
xchg
stos
mov
sub
in
sbb
cmp
fsubr
dec
ins
jbe
lods
mov
xor
adc
icebp
cmp
jae
shl
or
(bad)
and
inc
das
ficomp
iret
sar
push
lods
push
js
add
mov
mov
enter
and
jp
mov
retf
call
jo
retf
sti
pop
sbb
icebp
push
pop
mov
sbb
sbb
jno
sbb
xchg
scas
adc
push
jae
ins
mov
(bad)
lock
pop
xchg
and
jns
pop
js
cmp
xlat
cwde
int
(bad)
js
lahf
in
cld
inc
test
push
sbb
or
lock
int
cmp
inc
lods
test
repnz
fild
push
xchg
movs
inc
mov
sar
div
xchg
push
pusha
cmp
or
mov
sti
les
jno
jo
ret
xchg
mov
push
shr
cmp
cmp
and
inc
jns
jge
and
cs
mov
fld
mov
ror
cmps
dec
popf
clc
(bad)
stc
push
sub
sbb
xchg
cli
sub
and
add
adc
xchg
inc
xchg
stos
arpl
push
cmp
mov
ins
rcl
test
mov
pop
gs
mov
loope
pop
jnp
les
outs
cmp
stc
mov
fild
mov
inc
aas
sub
ss
loopne
xchg
jg
xor
lods
fcom
sbb
fidivr
pop
xchg
or
movs
mov
mov
cmps
stc
mov
mov
leave
outs
ficomp
fwait
(bad)
daa
push
and
retf
dec
xor
add
es
sbb
mov
jmp
cld
stos
push
pop
xchg
mov
lods
cdq
xchg
aas
loop
pop
mov
jl
inc
int
lods
jb
test
ret
cmp
mov
jae
adc
imul
mov
cmp
jecxz
adc
ficom
pop
dec
cmp
mov
dec
(bad)
dec
loop
pop
(bad)
scas
(bad)
into
push
jg
not
ret
test
cli
sub
into
fdiv
lds
mov
cmp
stc
cdq
add
out
mov
call
sbb
lock
mov
paddusw
mov
je
lahf
fwait
cmp
cld
sub
(bad)
jmp
add
stc
push
mov
sahf
scas
call
push
leave
enter
or
loop
clc
inc
test
leave
retf
pusha
ins
in
dec
and
punpckhwd
stos
dec
imul
push
xor
sub
jmp
pop
shl
jge
push
cwde
fwait
and
xchg
jne
imul
mov
cmp
popa
xor
loopne
imul
pop
fs
add
loopne
push
mov
imul
jp
mov
inc
and
outs
fist
mov
fstp
xchg
pop
jle
ins
mov
xchg
(bad)
jl
or
(bad)
das
fsub
sub
xchg
aam
or
mov
inc
dec
mov
cmp
(bad)
xor
cmp
inc
mov
dec
xor
out
aam
add
jle
add
call
retf
and
mov
xchg
add
ja
lds
mov
push
stc
mov
fwait
pop
cmp
sbb
and
add
push
shl
ds
xchg
and
push
jmp
pop
sbb
sar
cmp
sub
lods
std
or
push
inc
inc
xor
jb
cdq
mov
mov
es
mov
cwde
js
or
aad
cmp
jns
fistp
aas
out
add
cmp
or
sbb
xchg
fadd
stos
cmp
pop
adc
inc
std
dec
adc
jle
mov
pushf
xor
mov
xchg
out
mov
mov
sub
mov
pop
jno
aaa
mov
jo
xlat
or
sbb
xchg
jg
cld
mov
ins
gs
push
mov
xchg
push
add
or
in
mov
movs
jmp
(bad)
mov
push
add
xor
pop
into
xchg
fwait
shr
pop
xchg
sub
push
mov
test
dec
push
inc
adc
jp
dec
dec
cdq
xchg
inc
xor
hlt
dec
add
or
pop
xchg
jmp
ficomp
push
xor
pop
lahf
mov
or
test
mov
ja
push
pop
push
jmp
stos
sbb
xor
sahf
frstor
pusha
retf
rcr
cld
int
dec
pop
push
rcr
mov
cmps
mov
pop
sub
inc
movs
pop
fst
aad
mov
mov
push
out
stc
ror
popf
mov
test
push
push
adc
sub
mov
rcl
or
lds
or
cmp
xchg
pop
pop
enter
call
movs
js
or
inc
mov
imul
mov
in
pop
add
(bad)
jmp
aad
inc
jg
into
loop
dec
xchg
(bad)
pop
rol
pop
outs
push
jecxz
xlat
adc
les
daa
cmp
add
mov
jnp
cmove
mov
pop
enter
cmp
fbld
shr
mov
xchg
pushf
cmps
sub
xchg
test
pop
xchg
mov
jae
dec
or
mov
or
sar
jp
enter
(bad)
movs
nop
dec
or
popf
sub
push
or
ja
sub
inc
and
adc
sub
into
cmc
ficom
ins
mov
dec
bound
(bad)
ret
pop
aas
xchg
cld
cmp
fisttp
ret
mov
ja
sub
xchg
push
(bad)
mov
push
iret
jl
or
cli
and
retf
out
cwde
sub
xor
xor
outs
pop
mov
shl
mov
cmp
fucomi
sub
stos
jle
xor
cwde
adc
and
stos
push
fimul
mov
push
mov
pop
adc
inc
cli
std
inc
ins
fdiv
les
xchg
into
int
out
pop
sub
xchg
adc
xchg
es
repz
mov
mov
pop
aad
push
(bad)
scas
test
dec
xchg
push
mov
xor
push
adc
sahf
gs
nop
movs
mov
cdq
xchg
mov
add
push
add
add
jg
pop
popf
mov
int3
pop
cmp
dec
jne
xchg
fsubr
fcom
jnp
rcr
loope
repnz
lods
cli
movs
inc
jp
rcr
mov
and
fwait
mov
lahf
jns
cmp
xor
adc
lods
mov
xchg
mov
outs
lds
(bad)
and
pushf
push
pop
out
call
ins
mov
sbb
xor
jmp
call
arpl
fs
stos
push
in
dec
shl
sbb
rol
aad
sar
movs
adc
mov
movs
fidivr
add
movs
xchg
aaa
stc
inc
mov
or
jb
add
es
dec
ss
xchg
movs
in
mov
and
push
mov
js
test
(bad)
(bad)
sar
std
xor
stos
mov
xor
lahf
mov
jge
xchg
jmp
ret
inc
sbb
inc
push
jecxz
push
xchg
jl
cmp
movs
fwait
jp
retf
dec
mov
pop
pop
shl
scas
enter
test
cli
inc
les
add
and
cmp
dec
retf
adc
lods
imul
mov
dec
(bad)
repnz
dec
xchg
clc
fwait
adc
xor
int3
or
ja
jbe
clc
push
mov
pop
shl
inc
jmp
les
ror
outs
sbb
lahf
inc
js
and
mov
mov
sub
ins
sub
fstp
fisub
dec
xchg
dec
mov
sbb
stc
ficomp
cmps
ret
out
lods
je
xchg
jae
popf
push
retf
mov
xlat
xor
stc
pop
and
inc
neg
fmul
dec
mov
pop
aam
leave
popa
in
xor
hlt
arpl
fwait
call
aas
mov
xchg
cmp
(bad)
cli
dec
das
and
aam
mov
aaa
rol
ret
mov
jne
add
iret
movs
mov
xchg
mov
or
and
dec
dec
mov
push
aad
cmp
sbb
rol
jnp
aad
aaa
clc
jle
xchg
jp
and
or
ret
imul
push
and
retf
cs
adc
xchg
pop
lods
and
lahf
jle
mov
ins
mov
jne
jl
adc
loope
inc
mov
rcr
mov
call
jns
(bad)
xor
lods
js
jl
sub
call
leave
mov
or
dec
pusha
xor
nop
jl
test
stos
cmc
cmp
gs
and
in
sub
or
(bad)
or
mov
sti
push
outs
add
mov
xchg
mov
repnz
push
fcmove
lahf
cld
fsub
and
and
sub
popf
jp
in
mov
int3
ins
(bad)
sub
fxch
pop
sub
jl
cmc
fild
sub
retf
or
and
pop
adc
mov
xchg
fidivr
inc
(bad)
xchg
inc
push
into
jo
inc
mov
jge
loopne
add
jb
out
mov
fwait
or
and
int3
push
sub
dec
(bad)
loope
das
movs
xchg
xchg
outs
mov
scas
lock
adc
rcr
add
add
add
retf
add
cmp
and
mov
mov
and
pop
cli
mov
xor
sub
jne
retf
mov
into
int3
cmps
stos
mov
push
test
cld
(bad)
jle
shr
out
cld
and
nop
pop
xchg
sub
movs
sbb
jmp
pop
out
sbb
adc
neg
mov
call
aad
fbld
xchg
inc
retf
fs
jecxz
jg
mov
jge
mov
sub
jo
sub
ja
lods
fdiv
sbb
ins
and
test
and
retf
aaa
into
sub
sub
aam
mov
in
xchg
cs
data16
add
dec
pop
addr16
(bad)
rol
mov
xchg
test
mov
jle
je
adc
jmp
dec
stc
stc
xor
test
stc
rol
xchg
and
sbb
test
inc
inc
cld
clc
retf
add
mov
nop
aam
mov
in
cwde
div
shl
mov
test
inc
or
mov
aaa
pusha
repz
cs
sub
hlt
jge
pop
mov
inc
jo
jmp
es
xchg
aam
ds
push
sbb
(bad)
xchg
(bad)
frstor
std
mov
lods
add
adc
jmp
(bad)
in
inc
xchg
outs
inc
jl
adc
enter
adc
sub
pop
int3
and
sub
mov
xchg
(bad)
scas
cmps
xor
ror
xchg
push
hlt
icebp
push
jmp
mov
inc
cmps
sbb
sbb
jb
(bad)
cmp
mov
aas
sub
add
mov
scas
xor
(bad)
cmc
test
or
adc
outs
adc
sub
sub
mov
pop
std
xor
jne
sbb
das
xor
bound
xor
jmp
imul
test
adc
mov
(bad)
popa
loope
ja
adc
inc
(bad)
fcom
popa
into
mov
lods
cld
push
jns
jnp
push
lds
lahf
loope
add
add
add
add
cmp
addr16
inc
gs
dec
xor
shr
shl
mov
cwde
enter
push
mov
and
xchg
enter
add
out
cld
dec
sbb
mov
jmp
je
bsr
adc
fsub
pop
jb
adc
push
(bad)
push
pop
jg
jo
ror
and
or
popf
mov
out
shl
es
mov
add
xlat
xchg
cmp
mov
add
and
xchg
or
xor
into
loopne
cdq
popa
addr16
or
les
xlat
sahf
mov
fadd
jnp
and
add
mov
pop
push
fbld
mov
les
dec
in
cmp
addr16
push
xor
out
mov
adc
shl
jl
std
outs
outs
fnstcw
inc
or
fcomp
inc
push
in
jne
loope
mov
call
and
in
popf
mov
test
xchg
lahf
neg
push
add
in
mov
sar
adc
push
sub
jo
cmp
add
add
movs
xlat
imul
bound
push
popa
js
xchg
sbb
int
xor
xor
outs
into
inc
aad
les
outs
mov
shr
and
or
loopne
sbb
in
ja
movs
test
aas
mov
js
mov
jnp
adc
mov
test
fadd
push
les
outs
pop
test
retf
sbb
test
clc
push
mov
rcl
rcr
test
imul
pushf
popa
fincstp
hlt
mov
cmps
push
jge
imul
jbe
retf
mov
or
push
jecxz
and
pop
pop
outs
xor
pop
out
retf
jne
loopne
and
jmp
ror
or
loope
push
test
add
ins
and
shl
xor
outs
or
adc
adc
pushf
fdivr
stc
jns
scas
mov
mov
and
mov
inc
mov
pusha
adc
pop
(bad)
int3
push
fisttp
mov
daa
or
sbb
and
aas
add
pxor
ret
enter
sahf
ins
fwait
pop
xor
mov
fwait
pop
add
popf
push
xor
dec
gs
jno
fs
and
xor
add
fs
sahf
sub
cmc
cmp
cmps
fcomp
cs
pop
and
in
pop
addr16
rcl
adc
cmp
adc
into
cmc
lds
fisub
xchg
jne
out
pop
int3
mov
adc
js
fsubrp
retw
pushf
call
repz
adc
sbb
es
popf
pop
jp
sub
adc
mov
and
mov
mov
out
lahf
push
jl
xchg
ins
imul
aaa
lods
cmp
out
dec
pop
inc
inc
and
loop
scas
out
adc
aam
pop
push
fmulp
mov
sub
sahf
push
jmp
cmp
xchg
cmp
outs
aad
push
mov
push
sub
jnp
xchg
jmp
mov
mov
push
push
addr16
fstp
pop
enter
cmc
xchg
bound
or
outs
adc
cmp
test
jecxz
add
jmp
xor
call
icebp
stos
mov
xor
call
xchg
scas
sbb
fild
retf
mov
bound
cmp
pop
xor
cmp
repnz
popa
into
ss
pop
add
push
mov
mov
jo
por
ror
clc
mov
sub
xor
and
adc
and
xchg
or
pop
inc
icebp
cmp
sar
fistp
dec
jmp
les
loope
push
sbb
stc
stos
mov
jo
pop
pusha
idiv
xchg
or
inc
pop
arpl
repnz
cmp
pop
xchg
mov
call
xchg
hlt
pusha
pop
push
xchg
test
pusha
xlat
call
cmp
dec
aas
pop
pusha
jle
popa
xchg
pop
pop
xchg
inc
enter
int
fwait
push
mov
scas
clc
mov
mov
leave
ret
jl
leave
and
in
test
loop
inc
mov
in
push
pushf
test
lods
ds
jmp
mov
mov
adc
mov
xchg
arpl
xor
mov
adc
pop
sbb
jg
sub
pop
lahf
pushf
and
inc
jmp
mov
loop
icebp
loopne
div
xor
mov
shl
sub
adc
loop
gs
or
dec
ror
pop
inc
xchg
das
fdiv
xchg
jg
jl
rcr
jo
jmp
xchg
mov
jnp
sub
add
shl
int
(bad)
das
xchg
mov
mov
pop
mov
movs
inc
xchg
loop
jb
in
jl
push
ret
clc
ins
jae
ret
(bad)
int
repnz
imul
inc
fld
add
adc
cmp
jecxz
je
scas
outs
ret
scas
nop
jl
and
mov
int3
loop
jle
rol
int
lods
push
stos
xchg
push
xor
push
xor
cld
int3
aam
popf
iret
pop
imul
lods
mov
movs
mov
les
test
xor
push
add
add
add
add
ins
mov
cmps
or
(bad)
out
shl
push
imul
test
call
mov
fistp
xchg
sub
(bad)
aad
mov
jno
jge
pop
push
sbb
mul
xor
lds
test
push
out
jmp
jno
dec
add
cmp
jmp
retf
retf
into
dec
fimul
cmp
dec
aaa
adc
(bad)
(bad)
mov
pop
sub
stos
push
out
popf
push
add
pop
call
mov
and
mov
lahf
add
in
and
jmp
(bad)
dec
bound
and
adc
in
mov
xor
push
cmp
iret
push
shr
arpl
fist
test
je
push
bswap
sbb
adc
xchg
ins
cwde
cmp
push
movs
mov
repz
mov
dec
mov
shl
cld
test
mov
or
mov
movs
pcmpgtw
aam
outs
pop
aam
sub
outs
int
or
jo
ds
cmp
loopne
adc
out
sbb
jle
mov
mov
cmps
dec
cmp
push
jecxz
in
fadd
je
sub
push
sub
pop
inc
lods
xchg
mov
add
xor
jmp
dec
jo
add
xor
ja
jmp
shl
xor
xchg
in
mov
aaa
dec
je
push
mov
dec
pop
pusha
test
in
or
in
sub
inc
ins
fisttp
xchg
xlat
and
sub
mov
or
jmp
nop
sbb
xor
cmp
push
data16
inc
fwait
aaa
mov
fwait
stc
sbb
retf
cmps
xchg
adc
vcomisd
test
ret
ret
scas
scas
or
or
sahf
je
sub
popf
bound
ins
cmc
sar
jp
(bad)
into
xchg
mov
and
(bad)
repnz
dec
cmp
or
sahf
or
scas
mov
(bad)
test
push
aaa
adc
add
sub
leave
mov
test
and
int
dec
jl
leave
sbb
imul
out
cdq
dec
shl
lods
jl
retf
sub
div
push
retf
mov
call
ss
ror
neg
lock
mov
mov
jb
out
je
mov
add
mov
test
out
mov
inc
sbb
in
lods
and
ins
adc
aad
sub
push
pop
shr
dec
cmps
jns
fsubr
cmc
adc
pop
fst
adc
js
mov
adc
rcr
push
fs
ror
retf
arpl
inc
lock
scas
cmp
js
or
(bad)
sbb
push
or
mov
or
aam
push
or
cmp
cwde
dec
test
loopne
sbb
rol
sub
mov
jmp
xor
push
adc
jo
lods
add
add
add
add
mov
push
mov
arpl
push
inc
sbb
mov
aas
and
xor
fcmovbe
xor
hlt
movs
dec
jecxz
hlt
lds
into
add
push
push
cmp
popa
jp
cli
icebp
inc
inc
fdiv
or
bound
je
adc
int3
xor
or
pop
cdq
mov
sbb
fist
cwde
cmp
icebp
xchg
fwait
outs
cmps
gs
(bad)
sar
nop
inc
enter
xor
push
jmp
arpl
sub
sub
nop
cmp
inc
xlat
mov
ss
fucomip
test
iret
and
test
cmps
call
fdiv
cld
or
xchg
dec
inc
cld
out
jmp
dec
addr16
sub
dec
ins
js
(bad)
cmp
fwait
adc
xchg
cld
aaa
jmp
dec
mov
push
rcl
pop
or
pop
out
mov
jl
cli
push
xor
push
mov
sbb
in
pop
dec
pushf
dec
sub
repnz
loop
mov
(bad)
das
call
pop
jmp
push
cmp
and
aam
push
ins
xchg
fsubr
je
push
mov
and
fist
test
jmp
test
enter
xor
movs
jae
ret
dec
icebp
(bad)
push
sub
or
test
mov
movs
out
out
retf
push
cmp
push
mov
fs
add
mov
loope
inc
sub
lods
mov
fnsave
cli
test
sbb
clc
or
ss
jmp
jmp
sbb
lds
inc
cmps
mov
iret
adc
jge
xchg
out
xor
mov
stos
cmp
out
loope
cmps
xor
imul
cmps
cmps
push
loopne
call
xchg
jmp
push
scas
movs
out
cdq
hlt
sub
fs
xchg
push
fnsave
pop
daa
icebp
add
jmp
sub
inc
jb
or
and
cmp
adc
push
(bad)
jb
cwde
ret
xchg
sbb
inc
es
adc
and
cmp
outs
xchg
sub
dec
imul
test
(bad)
stc
inc
ret
add
sbb
fnstsw
and
and
bound
dec
push
inc
cli
in
lods
sub
jp
mul
xchg
js
scas
cmc
mov
dec
arpl
adc
js
pop
sbb
mov
fsub
dec
xchg
loop
ja
inc
cmp
dec
and
popf
sub
sbb
push
sbb
pop
lods
jae
fld
lods
sub
add
add
add
add
add
adc
inc
xchg
sub
cwde
pop
push
jp
xor
popa
pop
icebp
aad
pop
jge
pop
sub
fistp
arpl
in
and
imul
out
scas
sbb
mov
cmps
jecxz
adc
js
jmp
dec
(bad)
sti
cwde
ins
mov
and
pop
(bad)
sbb
xchg
call
call
add
or
(bad)
idiv
das
mov
mov
adc
push
adc
mov
jbe
and
movs
ror
sbb
aam
in
shld
fwait
xchg
jnp
xor
pop
cwde
or
ss
jne
mov
stos
or
js
pop
dec
addr16
sub
mov
sbb
hlt
add
jmp
(bad)
js
pushf
std
sbb
loop
pop
icebp
dec
stc
or
cmp
cmps
out
push
test
fucomip
sub
sbb
stos
push
add
scas
pop
pop
test
sbb
mov
je
stc
das
cmp
loope
mov
push
mov
add
mov
push
add
fnstenv
mov
adc
xor
inc
sbb
lock
out
addr16
js
mov
(bad)
hlt
push
sub
jb
push
xchg
pop
inc
fwait
sub
inc
xor
shl
push
push
pushf
add
mov
mov
dec
mov
mov
mov
mov
adc
les
scas
stc
mov
jp
push
jmp
inc
mov
jno
js
fcomp
cmps
mov
imul
mov
xor
int
sbb
add
dec
cmp
imul
jne
gs
(bad)
jmp
(bad)
call
pop
pop
lahf
pop
imul
loope
iret
inc
xchg
sub
xor
xchg
mov
test
das
int
inc
and
add
aas
fld
jmp
mov
xchg
loope
jb
cmp
(bad)
lock
out
inc
push
mov
jno
outs
adc
out
add
push
fcmovbe
gs
ins
jge
cmc
data16
dec
lods
es
cmp
(bad)
dec
pop
push
idiv
fldcw
mov
push
loop
adc
jne
mov
mov
jmp
fcom
jg
pop
sbb
ins
dec
push
add
jne
out
int3
jno
xchg
pop
(bad)
adc
call
push
sub
inc
cmp
cmp
push
cwde
and
sub
daa
arpl
push
ins
aas
or
jbe
push
mov
imul
mov
gs
xor
add
jp
mov
dec
sbb
cmp
mov
mov
cmp
(bad)
sub
mov
and
inc
mov
mov
(bad)
xchg
data16
leave
mov
(bad)
mov
jbe
(bad)
pop
add
cmps
fisub
fstp
dec
sub
mov
aad
push
add
dec
bound
dec
ins
fld
sbb
dec
ret
add
or
mov
jle
(bad)
sbb
mov
or
int
ss
repz
adc
pop
ins
jns
frstor
test
test
imul
push
pusha
jl
mov
out
lea
pop
rcl
push
(bad)
add
cmp
xor
(bad)
push
out
mov
push
mov
dec
test
nop
push
xchg
jo
dec
stc
jae
cmps
add
mov
or
sub
push
jnp
inc
pushf
sub
rcl
jno
add
mov
or
jo
mov
xchg
jnp
lahf
jmp
enter
mul
movs
mov
or
movs
mov
outs
push
pop
addr16
(bad)
jnp
(bad)
movs
mov
push
cdq
push
pop
dec
inc
mov
xor
adc
mov
push
test
inc
pop
add
cli
mov
cmp
xor
pand
jb
scas
jbe
dec
jae
cmps
pop
jle
dec
cmp
shr
outs
call
pop
push
aad
lods
addr16
dec
xor
int
jmp
bound
push
cmps
lahf
fcmovne
adc
xor
mov
inc
dec
mov
cmp
and
ret
xchg
xchg
lods
call
push
retf
lahf
bound
mov
repz
and
leave
outs
push
mov
push
and
and
and
mov
stos
aaa
ins
mov
bound
fs
sar
pop
addr16
stos
push
mov
push
stc
or
add
xchg
daa
xor
stos
mov
add
fsubr
add
mov
sub
(bad)
(bad)
cmovp
jg
adc
scas
ss
pop
dec
push
bound
test
in
or
gs
movs
mov
add
lock
dec
cmp
add
and
mov
leave
ss
lahf
add
cld
xchg
retf
not
rcr
mov
jb
mov
int3
jp
mov
aad
pop
jbe
dec
adc
ja
lock
mov
add
inc
mov
jg
jl
sbb
push
cmps
xor
test
and
daa
push
pop
loope
pop
and
(bad)
adc
out
into
inc
jge
test
mov
push
push
imul
out
mov
push
test
(bad)
repz
mov
jge
cwde
cmp
lds
mov
or
in
inc
shl
mov
and
push
dec
mov
loopne
mov
shr
xchg
sar
sub
outs
jbe
push
push
sbb
sbb
add
sbb
ja
cmps
enter
xor
in
leave
add
or
mov
adc
mov
outs
jnp
sub
rcr
dec
lea
mov
adc
inc
aam
jbe
mov
mov
mov
mov
inc
pusha
sbb
test
fsubr
lods
xlat
imul
sbb
add
out
scas
mov
mov
jno
add
loop
dec
push
into
movs
and
xchg
inc
pop
int3
add
sub
push
xchg
mov
mov
push
xchg
and
cmp
cmps
sbb
mov
cmps
mov
xchg
sub
lods
ja
add
aam
add
or
add
dec
adc
leave
ret
adc
ds
dec
jbe
xchg
or
jp
sysret
jecxz
std
ror
jae
enter
test
lea
ins
dec
stos
mov
mov
or
je
mov
sahf
jmp
std
sub
into
dec
retf
and
and
je
shl
into
ret
in
pushf
fst
lods
sbb
push
sbb
cwde
sub
daa
cli
jo
call
mov
pushf
rcl
push
(bad)
cmp
adc
(bad)
pushf
cmp
out
cmp
mov
mov
xchg
(bad)
sbb
lods
mov
mov
mov
push
jbe
aaa
mov
ins
inc
inc
dec
cmps
out
mov
sub
fiadd
jecxz
jge
xchg
into
push
adc
call
xor
push
test
xchg
xor
shl
mov
lods
into
out
push
outs
push
js
fs
sub
call
inc
push
shl
movs
(bad)
mov
adc
mov
sub
out
or
push
gs
sbb
adc
push
or
push
push
test
xchg
jge
push
fdiv
mov
cmp
mov
adc
popa
lea
push
bound
loop
jnp
out
test
mov
inc
out
xchg
cli
cmps
pop
arpl
lods
into
push
neg
pop
and
scas
and
sub
outs
sub
xor
test
and
dec
cmp
sahf
dec
retf
jno
adc
js
xchg
push
cli
mov
ds
rcl
sbb
add
push
stos
pop
push
xchg
jmp
(bad)
push
(bad)
jecxz
push
out
scas
pop
sub
(bad)
fsub
pop
fwait
push
push
ja
in
jle
fdiv
fisttp
or
jl
inc
xor
inc
not
jnp
das
aam
mov
mov
sbb
pop
inc
pop
jo
push
call
mov
stos
test
cld
dec
inc
sub
jnp
movs
aad
repnz
dec
xchg
adc
test
push
imul
je
jge
les
imul
dec
jns
gs
shr
push
cmp
mov
div
icebp
add
(bad)
stos
cmps
cld
popa
imul
jno
(bad)
out
in
jo
fidiv
into
cmp
retf
add
push
aaa
fidiv
mov
leave
xchg
and
outs
jno
das
mov
xor
xor
pusha
movs
sbb
out
mov
jl
test
(bad)
jmp
pop
xchg
add
jg
or
mov
mov
or
mov
inc
xlat
mov
rcr
arpl
je
pop
push
pop
das
push
or
out
jecxz
fs
(bad)
push
loopne
dec
add
stos
jae
popa
mov
sub
mov
(bad)
xor
sub
retf
xchg
cwde
mov
cmp
dec
test
(bad)
jge
or
sbb
scas
loope
mov
pop
xchg
stos
mov
adc
xor
mov
sub
out
mov
loop
fnstcw
out
pusha
xchg
lahf
not
pop
xor
loopne
jae
test
pop
jmp
adc
add
jne
sub
cmp
loopne
ret
push
in
jmp
push
and
pop
cmc
ins
xchg
jnp
xchg
add
dec
and
mov
inc
scas
mov
popa
adc
mov
fst
loopne
retf
push
push
sub
arpl
fstp
pop
out
sar
mov
jle
(bad)
popf
imul
mov
or
xor
in
add
adc
addr16
mov
add
ret
mov
fst
or
loopne
sar
sbb
mov
jne
adc
inc
call
mov
aaa
lock
push
lods
fninit
(bad)
sbb
das
dec
mov
mov
aas
cmp
xor
dec
daa
dec
sti
or
add
rcr
sub
cmp
(bad)
pop
outs
dec
pop
pop
mov
into
jl
add
shl
mov
test
xchg
dec
pop
fstp
mov
sbb
push
arpl
jne
test
ror
fisubr
data16
call
adc
pop
scas
xchg
das
sbb
xchg
pusha
scas
mov
adc
and
enter
mov
and
jae
fistp
or
fidivr
jmp
std
jbe
aam
add
in
inc
outs
jnp
dec
sub
faddp
int
cmps
inc
in
in
cmc
mov
mov
xor
dec
sbb
add
and
push
mov
and
fs
jl
mov
sbb
mov
lds
xor
test
test
inc
(bad)
loope
jae
jnp
inc
scas
xlat
mov
mov
push
add
jl
aam
arpl
jecxz
cmp
xlat
xchg
test
and
or
mov
dec
popf
cmp
jne
jno
and
(bad)
lea
retf
sahf
push
fs
xlat
fxch
scas
push
in
dec
pop
xchg
xchg
out
cdq
cmp
add
mov
iret
mov
push
mov
leave
fst
inc
scas
push
shl
movs
arpl
xchg
jge
jnp
or
or
dec
mov
adc
sbb
lahf
jb
pushf
dec
push
inc
out
sub
inc
leave
addr16
inc
add
sub
ficom
arpl
test
les
mov
dec
test
sub
fcmovbe
cmp
jno
xor
push
dec
dec
dec
xor
or
mov
mov
imul
ret
sbb
hlt
push
or
mov
push
scas
test
stc
adc
test
inc
popa
inc
in
dec
xchg
das
sub
mov
ror
popf
sbb
sti
pop
imul
and
and
call
in
pusha
leave
sti
jg
jmp
shl
iret
pop
mov
and
xchg
inc
add
inc
pop
xchg
pop
pop
dec
add
scas
imul
push
repz
pop
xor
add
push
sbb
jecxz
hlt
adc
test
bound
add
iret
and
cmp
add
push
or
jle
jne
cmp
mov
jne
inc
pop
and
xchg
aad
mov
les
shl
lods
mov
pop
ret
fmul
jae
xchg
sbb
jb
push
and
scas
mov
sub
push
(bad)
xchg
or
mov
push
test
jne
daa
sahf
pop
xor
lods
int3
mov
jg
jge
xchg
adc
frstor
dec
adc
stos
mov
call
cmp
dec
push
and
mov
xchg
popf
add
stc
mov
and
adc
inc
mov
ss
fnstsw
call
gs
adc
lods
rcr
inc
sub
and
pop
mov
stos
in
sub
dec
jne
add
icebp
add
add
add
cld
and
rcr
mov
sub
loopne
mov
cmp
cwde
inc
add
out
push
dec
addr16
fist
dec
inc
sub
sbb
jg
mov
jns
mov
mov
icebp
cs
dec
add
push
pshufw
mov
das
jge
sahf
pop
stos
das
cmp
enter
fiadd
jge
sti
sub
retf
fs
xchg
imul
mov
xchg
fidiv
hlt
xor
outs
aas
mov
cmp
scas
faddp
cld
push
out
sti
xchg
aam
loopne
mov
cmp
adc
jmp
xchg
cmps
mov
dec
mov
mov
xchg
mov
das
neg
sbb
hlt
loop
or
xor
jb
and
and
das
dec
sbb
movs
fadd
mov
dec
stos
push
and
mov
push
rsqrtps
sub
dec
outs
sti
int3
not
jae
js
pop
cmc
pop
push
dec
push
adc
add
xor
or
test
jne
out
pop
or
repz
push
pmuludq
(bad)
cmp
aam
jecxz
pop
xor
shl
mov
retf
sbb
adc
mov
cdq
pushf
adc
repz
sti
push
outs
cmp
push
inc
(bad)
dec
outs
in
ret
mov
jp
mov
outs
inc
jae
jo
loopne
inc
mov
movd
cmp
adc
cs
jle
fcom
in
(bad)
icebp
mov
or
dec
xor
pop
scas
mov
add
fiadd
jno
fldl2e
cwde
jne
and
jg
fild
and
cmc
jb
adc
mov
cld
mov
dec
in
sub
sub
repz
scas
fstp
jb
push
popf
or
xchg
lock
aaa
lods
pushf
clc
dec
xor
out
(bad)
out
mov
fcom
add
mov
fnstsw
aad
pop
and
bound
test
out
push
jmp
lock
mov
jle
imul
xchg
rol
jecxz
adc
test
fwait
loopne
out
sbb
jne
gs
call
jg
imul
les
jl
jae
das
loopne
call
xlat
pop
loop
and
xchg
xchg
mov
fidivr
cld
call
xlat
adc
aaa
lea
or
push
cmp
inc
mov
mov
ins
fcomip
mov
lods
jae
sbb
xlat
pop
icebp
and
mov
cld
mov
jo
jge
dec
cmp
xchg
mov
mov
cmps
int
mov
push
jne
xor
cmp
xchg
pop
pop
loopne
scas
loop
ret
xor
dec
outs
cmp
push
cwde
mul
dec
(bad)
push
ror
push
push
mov
fcmovbe
mov
iret
inc
in
pop
je
outs
or
jno
sub
fld
mov
ss
xor
les
xchg
cmp
mov
aaa
in
cld
pop
xor
cmp
cmp
mov
and
lods
mov
pop
frstor
jmp
aad
dec
scas
jno
pusha
mov
xlat
xor
sbb
push
popa
ins
mov
cmp
pop
loopne
pop
xadd
int3
pop
adc
stos
xlat
fiadd
je
jmp
xor
pusha
xchg
jle
pop
xchg
xchg
stos
test
pop
and
push
fcmovu
jae
cdq
outs
dec
dec
call
add
push
pop
xor
inc
dec
push
(bad)
leave
clc
shl
fwait
inc
add
outs
shl
je
jl
xlat
mov
mov
xor
int3
pop
pusha
fst
lods
cmp
cld
push
test
movs
imul
lds
int
into
out
sub
or
push
fnsave
iret
(bad)
xchg
add
mov
test
push
xor
pop
out
push
ret
retf
mov
sub
fiadd
or
arpl
lahf
pop
jl
icebp
mov
(bad)
dec
inc
lds
xlat
mov
scas
div
retf
fdiv
xchg
mov
cmp
jb
xor
push
jl
das
fwait
push
or
test
into
jle
pop
fst
sbb
jmp
sar
and
jne
inc
stos
es
cld
cdq
mov
movs
scas
mov
cdq
fwait
(bad)
mov
stc
dec
sub
sar
ret
jo
fld
mov
stos
daa
and
cmp
mov
bound
test
push
daa
sti
adc
jb
jg
add
add
add
add
add
xor
cdq
in
ins
xor
aas
add
xchg
imul
repz
mov
pop
call
sub
xchg
stos
jge
fidivr
sti
cmps
shl
test
mov
cmps
add
add
add
add
dec
clc
push
lods
mov
inc
add
pop
pop
add
jo
jecxz
setnp
movs
xchg
add
dec
(bad)
adc
push
push
push
in
jns
add
loop
sub
adc
sbb
lods
fdivr
sbb
test
push
jbe
adc
add
pop
ret
dec
test
jg
sub
dec
ja
adc
dec
lea
test
std
les
cmps
push
icebp
mov
jae
outs
mov
mov
jmp
fld
rcr
dec
imul
out
dec
mov
jp
sbb
retf
mov
aas
dec
stos
and
mov
dec
mov
jbe
cwde
mov
dec
stos
arpl
push
jns
rol
popf
dec
dec
imul
call
sub
mov
int3
pop
ret
mov
mov
jne
xchg
pop
ret
stos
mov
cmp
les
adc
mov
mul
add
loope
jmp
push
fwait
pushf
gs
mov
gs
xor
jg
and
scas
mov
mov
jmp
mov
outs
push
xor
xor
and
sti
xchg
mov
gs
icebp
popf
leave
lods
psubusb
or
inc
or
and
or
mov
adc
mov
icebp
lea
push
mov
dec
adc
xchg
sub
jp
mov
pop
icebp
movs
je
jg
jbe
int3
or
addr16
fdivr
fcmovb
lock
cli
cmps
mov
out
add
cwde
retf
push
cmps
stos
imul
out
pop
je
mov
inc
xlat
pop
mov
cmc
xchg
dec
call
enter
pop
iret
fwait
inc
xchg
loop
fs
test
add
data16
test
sbb
jmp
gs
push
add
and
jne
adc
leave
std
sbb
cs
(bad)
mov
add
fcmovb
mov
sub
xlat
add
dec
xchg
hlt
and
enter
add
jmp
mov
stos
cmp
pop
add
out
xor
cmps
iret
cli
xor
pop
scas
mov
add
mov
cmp
push
fmulp
cmp
icebp
loope
push
pusha
cld
out
jle
mov
jno
loop
jbe
xchg
dec
aad
mov
ss
jne
and
pop
sar
and
clc
xchg
cld
or
ficomp
jmp
push
inc
fnstsw
leave
push
imul
inc
xchg
mov
in
popa
es
sbb
scas
push
ds
stc
pushf
inc
mov
dec
push
call
inc
jo
add
std
mov
mov
ja
sbb
test
push
pop
ja
scas
xchg
shl
popf
ror
sbb
out
cmp
push
sbb
int
ja
mov
(bad)
stc
pop
dec
fs
cmp
push
loopne
sbb
or
rol
stc
and
ss
js
cmp
scas
push
sub
in
rcl
ss
ror
cdq
loop
inc
je
retf
mov
mov
in
sub
cmps
cmc
iret
lods
jp
loopne
xor
mov
loop
mov
add
mov
ja
sar
into
or
mov
add
push
add
add
add
add
popf
inc
fs
out
sbb
fisttp
(bad)
scas
sbb
je
in
sub
cmp
rol
mov
adc
sub
retf
vandps
movs
pop
movs
lds
cmp
mov
icebp
adc
cs
je
sbb
jmp
hlt
loope
sub
fisubr
es
mov
mov
mov
pusha
dec
mov
pop
stc
push
mov
mov
adc
fsubr
adc
fbstp
jecxz
jge
popa
pop
dec
cwde
pop
push
dec
sub
add
cli
call
je
popf
mov
push
cli
push
add
jns
iret
push
xor
int
xchg
cmp
xchg
iret
das
lds
retf
movs
mov
mov
test
mov
and
sub
adc
rcl
pop
mov
int
aad
movs
push
fild
cdq
imul
push
ret
or
je
movq
mov
cmp
or
movs
lea
scas
call
pop
sub
lods
pmaxub
iret
imul
xchg
ror
ja
or
add
inc
add
add
mov
repz
mov
pop
shrd
bound
cmp
cmp
hlt
addr16
icebp
or
cli
je
mov
rcr
in
cmp
sub
leave
aad
lods
push
mov
ins
int3
int3
add
sbb
push
sahf
clc
outs
imul
or
mov
pusha
adc
jns
dec
scas
mov
int3
jecxz
jbe
iret
(bad)
int3
xlat
cmc
call
call
rol
jle
dec
and
mov
sub
iret
sub
test
fst
pop
ret
push
fadd
push
das
bound
and
mov
inc
rol
adc
test
movs
aas
cmps
dec
movs
movzx
lahf
ret
pusha
dec
(bad)
cmp
sti
loope
out
inc
dec
imul
es
add
cld
cmps
movs
hlt
shl
xor
cmp
ins
jb
imul
jmp
mov
add
add
adc
xchg
mov
jae
mov
dec
mov
jbe
mov
jmp
(bad)
cli
push
lods
adc
push
ficomp
or
pop
int3
sbb
jg
cmp
jge
xor
call
sbb
arpl
fld
mov
in
xor
xor
(bad)
test
mov
jmp
cmps
mov
mov
xchg
stos
(bad)
lock
test
fsubrp
mov
push
ror
cmp
lods
mov
cli
pop
xor
mov
push
in
repz
xlat
jmp
je
sub
xor
pop
add
pop
rcl
dec
(bad)
xor
mul
mov
sti
bound
and
mov
sub
cmp
mov
push
add
call
cmps
mov
lods
in
dec
pmullw
mov
repnz
or
jae
add
ins
pop
fiadd
lods
test
jp
mov
(bad)
sub
fisttp
mov
pop
pop
mov
sbb
xchg
xchg
sahf
lea
lods
sti
mov
into
sub
pop
lods
jo
aas
dec
dec
push
jge
mov
cmps
mov
mov
scas
imul
push
push
idiv
loop
scas
mov
jmp
xor
rcl
fwait
add
(bad)
jnp
fwait
and
jmp
mov
pmaxsw
scas
arpl
stos
add
mov
sti
test
lods
call
mov
xchg
loop
push
dec
jp
pop
pop
in
or
(bad)
lods
inc
push
cmp
mov
and
pushf
fild
cli
push
mov
jno
jge
cmp
fidivr
pop
mov
lods
imul
(bad)
mov
mov
frstor
pop
movs
icebp
xchg
push
pop
jle
sbb
call
push
es
loope
cmp
hlt
push
or
call
jns
cmp
imul
and
(bad)
out
out
stos
cmc
jb
sub
repnz
data16
xchg
jle
cmp
je
cmp
jmp
aad
sbb
push
pop
xor
rcl
xor
mov
push
mov
retf
adc
inc
lds
adc
mov
not
inc
push
and
test
jmp
out
mov
imul
add
add
mov
add
mov
inc
dec
test
into
adc
push
mov
data16
inc
xlat
xchg
pop
xchg
push
bound
imul
in
test
mov
cmp
fsub
jne
mov
test
das
mov
pop
imul
lea
pop
(bad)
cmp
ins
cmp
dec
cmps
call
retf
lds
fimul
mov
pop
mov
sar
push
inc
mov
daa
or
repnz
jmp
sub
scas
mov
repz
jle
ins
dec
mov
add
in
mov
out
cmps
retf
mov
movs
je
cmc
mov
rcr
movs
xchg
popf
xchg
loop
dec
push
jmp
mov
fisub
movs
je
mov
sub
lds
mov
mov
fnstcw
pop
and
stos
pop
jl
retf
mov
pop
sbb
jmp
and
jns
fucomip
(bad)
clc
cmp
xchg
cmp
cmps
sub
xor
sbb
mov
lds
(bad)
imul
dec
and
jmp
aaa
jo
pop
mov
pop
in
pop
fild
sub
fwait
mov
scas
mov
dec
jg
fs
js
sbb
sub
sar
xchg
cs
mov
movs
mov
mov
or
fdiv
mov
adc
pop
ds
mov
mov
xchg
stos
(bad)
in
mov
loope
inc
and
pop
jns
test
push
inc
mov
cmp
mov
call
lock
test
arpl
sub
push
lea
jp
stos
xchg
pop
mov
jnp
dec
xchg
les
clc
ror
inc
fcompp
jne
daa
mov
add
in
mov
cld
shl
ret
cs
rcr
ds
out
sar
and
div
ss
pop
jns
add
cwde
or
or
mov
adc
leave
mov
mov
pop
scas
jo
call
loop
gs
push
push
mov
mov
nop
cli
mov
mov
pushf
add
xor
push
or
sahf
sub
sbb
addr16
aam
lahf
in
cwde
scas
push
(bad)
sbb
aad
and
cld
mov
add
pop
fstp
sahf
dec
dec
leave
dec
add
(bad)
mov
cmp
cdq
hlt
mov
mov
inc
mov
jecxz
add
pop
jne
mov
pop
iret
lock
addr16
aas
ja
and
xor
jbe
pusha
jp
sub
fnstcw
in
xchg
pop
or
cmps
push
lahf
and
pop
stos
test
shr
jg
jne
or
das
jl
cmp
imul
pop
mov
cs
jbe
sub
dec
ret
popf
inc
cli
sub
hlt
push
xchg
movs
les
std
imul
sub
jo
push
gs
ret
push
lock
in
fadd
jns
xchg
add
pop
je
mov
dec
mov
jnp
add
xchg
push
das
faddp
lock
sbb
aad
xor
and
inc
push
aad
add
cmps
dec
mov
cmp
or
cdq
xlat
push
int
xchg
scas
pop
or
fst
dec
pusha
cmps
shl
retf
xor
cmp
mov
add
into
or
rcr
cwde
sbb
daa
adc
lea
or
aad
mov
es
mov
jmp
cmp
xchg
xor
xor
imul
rcl
nop
pop
dec
push
inc
bound
inc
push
ds
pop
ret
int3
and
xchg
movs
sar
sub
adc
push
popf
cmp
jmp
push
popf
mov
dec
pusha
sbb
push
pusha
addr16
aam
or
test
xchg
aam
mov
jp
pop
sub
inc
push
out
jl
(bad)
xor
cmps
call
mov
div
jno
ja
movs
dec
mov
int
pushf
add
add
add
inc
ret
mov
out
adc
mov
jmp
ficomp
dec
pop
xor
retf
inc
xchg
sbb
mov
cmp
adc
les
out
push
and
mov
jae
(bad)
jno
cmc
cmp
(bad)
fs
inc
push
cmps
pop
or
daa
sub
dec
inc
fdivr
inc
aas
push
push
dec
add
jae
mov
jl
push
push
and
out
xor
int3
(bad)
shl
xchg
or
ins
cmps
mov
push
xchg
and
fwait
ja
popa
dec
cmp
int
test
aaa
inc
or
div
jnp
adc
pop
jmp
fdivr
loop
or
ds
mov
stos
push
mov
data16
imul
mov
fcomp
nop
sbb
fsubr
sbb
(bad)
fld
xor
inc
mov
xchg
in
mov
xor
mov
jns
mov
mov
cdq
dec
enter
dec
popf
fcomp
mov
sbb
cmps
cmps
mov
lods
jno
fimul
add
mov
cli
pop
dec
push
(bad)
in
loop
and
sahf
mov
movs
sahf
stc
pop
fdivr
in
iretw
test
bound
shr
jmp
jb
out
or
(bad)
lea
rcr
pop
loop
or
sbb
pop
imul
mov
mov
and
in
push
rcl
inc
cld
test
and
mov
and
stos
dec
mov
push
(bad)
jp
mov
ret
jae
or
inc
call
fxch
test
cmps
out
cmp
cmps
jo
jns
mov
ret
push
dec
xchg
inc
cdq
xchg
dec
mov
adc
cmc
add
mov
sub
and
jne
sub
adc
push
add
push
push
inc
xor
aaa
aaa
or
imul
popf
push
inc
dec
out
cmp
arpl
popf
test
jp
mov
mov
inc
pusha
call
js
xlat
mov
hlt
sbb
shl
dec
mov
or
inc
cld
gs
js
mov
jbe
lock
pop
repz
xchg
xchg
sbb
pop
icebp
into
int3
popa
jne
xchg
adc
xchg
movs
add
loop
pop
inc
scas
cmps
adc
jb
mov
xchg
xchg
popa
retf
pop
fidivr
mov
pop
sbb
xchg
mov
push
fcom
dec
loope
rcr
and
push
test
mov
xchg
push
seta
and
(bad)
out
cmp
sub
mov
dec
loopne
sbb
scas
xchg
sahf
xor
ins
xor
mov
sub
jg
fbstp
add
jno
jbe
pushf
dec
jmp
scas
sbb
pop
in
dec
(bad)
aad
sub
ret
dec
xchg
sbb
outs
out
mov
or
cwde
sbb
sbb
inc
xchg
cmp
xor
cmp
dec
mov
or
aam
arpl
cmp
cdq
dec
push
adc
mov
push
dec
xchg
imul
xor
jge
aas
stos
dec
popa
mov
sbb
sbb
cmp
push
cmps
je
jmp
ret
inc
scas
mov
xor
or
mov
pop
cmp
pop
jae
out
retf
les
or
jmp
and
lods
stc
loopne
cmp
scas
pop
stos
fwait
inc
pop
mov
jl
mov
scas
in
xchg
mov
(bad)
or
stc
mov
and
fstp
(bad)
sbb
add
mov
scas
jge
jl
pop
cli
ins
lea
std
xchg
add
mov
ficom
rol
sar
sbb
ret
cwde
test
into
sub
adc
xchg
dec
jns
loope
in
dec
push
pop
inc
icebp
clc
adc
sub
sbb
cmp
stc
jl
jmp
cmp
daa
repnz
push
scas
sbb
(bad)
scas
lea
adc
into
cmp
ret
(bad)
icebp
mov
and
push
out
dec
mov
je
xchg
and
pop
jp
out
jno
add
adc
xchg
test
mov
push
inc
outs
push
add
mov
jno
sub
arpl
data16
fdiv
into
addr16
(bad)
xor
and
sub
mov
cmps
mov
xchg
out
ror
icebp
and
xchg
push
sbb
push
add
push
data16
aad
adc
cmp
mov
adc
ror
inc
cmps
or
xchg
popf
pusha
cli
jge
sub
(bad)
fsub
push
pop
test
fucomi
adc
mov
movs
mov
cmc
cs
test
xchg
mov
inc
mov
cmc
lock
lods
dec
mov
or
inc
dec
sub
pushf
repz
adc
dec
out
in
stos
int3
mov
test
repz
mov
dec
shl
or
out
retf
cwde
fild
icebp
or
cdq
std
add
js
add
scas
cmp
jle
cwde
pop
sbb
xor
movs
mov
scas
pusha
shl
dec
and
in
add
aam
xor
mov
movs
mov
out
jne
sub
icebp
int
adc
jae
mov
ror
in
jp
adc
xchg
dec
add
add
sbb
cmp
add
xor
pop
leave
add
ret
stos
lods
bound
jnp
push
lea
jbe
mul
push
aad
scas
fldcw
mov
sbb
rol
daa
xor
pop
jmp
mov
es
jle
fdivr
cmp
dec
out
movs
inc
loop
push
lods
(bad)
xor
mov
jg
out
repz
ins
mov
push
call
hlt
dec
cld
sbb
inc
clc
mov
retf
add
xchg
scas
cs
hlt
push
(bad)
int
sti
shl
pop
lea
js
popf
dec
add
xchg
or
stos
shl
sar
and
push
push
(bad)
or
inc
inc
inc
jle
imul
inc
lock
mov
inc
rcl
cmp
jmp
ins
ss
(bad)
jbe
cmp
cmp
jmp
test
cmp
inc
sbb
cdq
or
jl
pop
ins
stc
sub
mov
sbb
cdq
(bad)
lods
frstor
iret
jno
push
fdivp
outs
mov
repnz
jo
call
mov
and
imul
push
jne
inc
jl
push
loop
xor
push
stc
out
inc
dec
sbb
sbb
shr
mov
xchg
adc
int3
jle
jp
xchg
xchg
mov
das
xor
add
ficom
push
(bad)
xchg
add
leave
mov
sub
push
adc
mov
push
ins
popa
pop
push
dec
rol
jo
sub
out
inc
inc
push
xchg
xchg
ss
in
dec
jnp
push
sti
mov
outs
xor
pop
(bad)
(bad)
in
jo
in
mov
movs
int3
sbb
sub
test
xor
out
out
inc
imul
fdivr
mov
pushf
xchg
or
mov
xor
add
jbe
outs
outs
or
sub
push
jmp
lods
cmp
add
int3
sbb
sub
sub
js
std
dec
call
daa
push
shr
and
cmc
pop
sub
cdq
mov
add
inc
cmps
add
push
mov
mov
enter
lea
xchg
scas
(bad)
cli
push
ret
nop
sbb
xchg
xchg
test
(bad)
retf
or
xor
lods
jno
retf
pop
and
lds
in
test
(bad)
(bad)
ror
jp
adc
xor
ss
and
les
add
push
(bad)
jmp
clc
enter
std
add
(bad)
stc
jmp
mov
repz
rol
fwait
pushf
jne
add
mov
cld
xor
mov
mov
mov
shl
and
xchg
cmp
ret
xchg
not
mov
adc
pop
cld
mov
rol
dec
pusha
pop
fsub
cld
sub
sbb
xchg
pushw
dec
cs
xlat
and
push
add
retf
lea
cmp
dec
xchg
sbb
ds
pop
ins
add
mov
push
inc
cs
xchg
and
test
add
out
add
xchg
add
add
and
mov
inc
or
xbegin
in
dec
call
add
bound
cmc
lahf
fst
mov
sbb
scas
cmp
jbe
cmp
cmps
add
jmp
pusha
or
stc
adc
mov
adc
cmp
push
repnz
push
out
clc
cmp
add
into
pop
xor
push
call
scas
ss
in
jbe
mov
arpl
ret
mov
out
test
mov
retf
aaa
push
mov
fmul
pop
or
push
imul
xchg
jo
imul
mov
lds
cmp
pusha
cli
leave
es
push
xor
xor
mov
hlt
push
xor
inc
loop
stos
shr
add
add
add
add
lock
xor
mov
aaa
jl
inc
fidiv
inc
repnz
dec
sub
xchg
test
or
jno
mov
jo
and
mov
test
inc
xchg
xlat
fstp
scas
icebp
sbb
test
jmp
adc
aad
and
jge
bound
test
adc
mov
add
fwait
rcr
imul
cwde
dec
outs
xchg
or
sbb
mov
inc
fadd
push
add
sti
sub
addr16
in
jns
in
fldcw
stc
inc
cdq
(bad)
sti
repnz
fbstp
mov
mov
add
add
add
add
add
jmp
cwde
or
hlt
mul
(bad)
jne
das
xor
inc
mov
lods
cmps
movs
push
mov
and
cwde
sub
xchg
cwde
cdq
mov
pusha
ins
push
xor
add
mov
aam
(bad)
sub
arpl
pop
jbe
and
jmp
pop
adc
iret
mov
jb
not
xchg
nop
les
or
mov
paddusb
inc
sub
lahf
aad
je
fnstenv
mov
pop
call
aad
mov
jp
adc
sti
mov
pop
in
shl
mov
and
imul
push
xor
jg
stc
addr16
jge
pop
in
sbb
ret
pop
leave
outs
(bad)
sbb
scas
push
inc
xchg
mov
js
cmps
push
xor
pop
mov
add
js
dec
imul
lds
pop
sbb
aaa
out
movs
dec
(bad)
enter
shl
push
mov
mov
imul
(bad)
cmp
fcmovb
icebp
and
jge
shr
inc
cli
push
and
rol
jmp
test
(bad)
lock
jo
cmp
fs
add
shl
ins
adc
fwait
stos
nop
mov
pop
jns
aam
getsec
mov
jmp
retf
adc
pop
(bad)
aas
call
call
out
push
test
rcl
xor
mov
mov
cli
stos
shr
ret
inc
inc
leave
call
push
stc
jl
clc
fwait
dec
movs
sub
mov
(bad)
mov
mov
ss
cmp
jne
(bad)
dec
mov
sar
gs
pushf
sti
sub
pop
xchg
mov
mov
sbb
jmp
(bad)
dec
sbb
pop
out
(bad)
push
mov
test
push
ins
out
sbb
movs
jmp
sbb
dec
inc
xchg
call
fimul
bound
add
scas
add
add
add
jnp
aad
into
push
mov
xchg
push
fidiv
push
cmps
and
mov
imul
fild
pop
cmp
sub
xchg
cs
and
test
fistp
adc
sbb
cmp
sahf
test
(bad)
int3
sti
mov
data16
mov
inc
scas
(bad)
lds
jle
sar
cld
inc
cmp
xchg
clc
fwait
dec
jmp
out
or
mov
dec
xchg
pop
inc
mov
int
jl
mov
rcr
xchg
xor
add
test
dec
fsub
add
icebp
jnp
fstp
jecxz
or
mov
add
add
add
add
sbb
xchg
out
pushf
mov
push
scas
add
outs
xchg
pop
not
mov
jge
loop
pop
repnz
cmp
sbb
jmp
mov
mov
cmp
sub
nop
cwde
xor
mov
sbb
lea
push
(bad)
in
xchg
retf
pop
in
or
es
pop
ss
adc
jno
mov
mov
(bad)
xchg
sbb
out
inc
xor
or
repz
cmc
mov
pop
sar
mov
or
shl
sub
loop
inc
in
and
mov
ins
aaa
add
das
or
pop
in
dec
aaa
xor
rol
icebp
add
jecxz
stos
in
push
clc
popf
sti
add
fcmovnb
or
and
jp
bound
sub
add
(bad)
sti
mov
lock
inc
je
jne
and
into
lea
fst
(bad)
repz
jo
call
mov
pop
dec
rcl
jbe
pop
adc
je
inc
shl
mov
jns
fldenv
fnstsw
xlat
xlat
jg
pop
or
leave
xor
stos
adc
les
sahf
cmp
add
mov
mov
lods
dec
icebp
fadd
nop
sbb
(bad)
shr
jb
scas
inc
cmp
ss
push
aam
cmps
mov
lahf
loope
ficomp
fbld
adc
cs
push
mov
int3
mov
lds
(bad)
iret
push
and
and
dec
shr
dec
xor
jae
in
mov
dec
add
cmps
jle
clc
scas
(bad)
in
adc
xor
outs
cmps
sbb
pop
pop
cmps
or
mov
into
xor
pop
mov
leave
adc
push
push
call
add
test
xor
jo
and
sub
bnd
out
sbb
fld
clc
mov
mul
ret
pop
dec
sti
test
adc
cdq
cmps
inc
js
mov
sub
retf
sahf
mov
inc
mov
stos
out
or
fnstsw
sbb
scas
push
push
xchg
xchg
js
iret
inc
xchg
fisttp
add
push
je
mov
enter
sbb
mov
mov
inc
mov
outs
enter
loopne
aas
xor
add
mov
push
rol
jl
lock
cli
addr16
(bad)
xchg
mov
popa
push
sbb
int3
mov
ins
dec
pop
sar
gs
push
xlat
jns
add
add
jecxz
add
pop
clc
repz
ffreep
mov
daa
mov
test
xchg
adc
(bad)
push
sti
out
mov
mov
in
push
mov
gs
push
js
mov
aam
push
add
ret
data16
mov
xchg
rcr
cli
test
arpl
popa
cmp
cmc
jg
(bad)
mov
shl
inc
(bad)
push
test
rcl
xor
cs
std
sub
jmp
xchg
sar
ds
fcomp
data16
out
mov
jl
cmp
sbb
push
scas
(bad)
aam
hlt
(bad)
add
or
xor
xchg
movs
sbb
jle
or
adc
js
test
movs
stc
dec
cs
and
or
hlt
daa
and
stc
cmp
pop
cwde
test
movs
fmulp
xor
dec
int3
and
addr16
out
push
aaa
scas
sub
dec
or
sub
js
push
iret
xor
push
and
xchg
out
sub
and
fstp
dec
pushf
adc
ins
sbb
loop
cmp
imul
call
dec
adc
and
mov
push
jb
pushf
cmp
loope
cmc
push
test
cmp
cwde
imul
ins
inc
rol
push
xchg
ret
jmp
pushf
sub
lds
and
xor
push
shl
mov
test
xchg
gs
ja
inc
fild
clc
test
scas
(bad)
js
cmp
rcl
adc
adc
mov
sub
(bad)
test
sbb
mov
cdq
xor
inc
mov
test
adc
xchg
or
aaa
and
sub
imul
(bad)
idiv
fcomp
jne
sbb
test
(bad)
or
test
retf
add
add
and
addr16
cmp
xor
cs
inc
xchg
jnp
(bad)
fwait
arpl
lahf
(bad)
sbb
pop
add
(bad)
imul
mov
adc
mov
inc
add
push
pusha
out
pop
inc
imul
pop
addr16
out
sti
cwde
dec
or
pop
rcr
xor
pop
cmp
inc
sbb
pop
push
sbb
push
fdiv
jbe
retf
test
jne
inc
or
movs
xor
inc
scas
or
adc
rol
mov
clc
dec
shl
in
pusha
lds
pop
dec
std
fldenv
jbe
or
xchg
jp
or
jp
xchg
lods
idiv
push
mov
pop
outs
in
sbb
and
add
xchg
and
imul
or
sar
xchg
pop
fst
mov
push
out
(bad)
pop
js
mov
pushf
addr16
lock
sbb
movs
mov
out
lods
push
push
ja
or
dec
out
sbb
sbb
mov
mov
mov
addr16
jecxz
push
mov
imul
cmps
fwait
shr
test
sub
out
pop
add
loop
test
dec
(bad)
int3
jp
mov
jp
(bad)
xor
enter
int
push
xor
push
arpl
and
pop
(bad)
fistp
xchg
cmp
and
jl
outs
movs
jg
pop
stc
push
lock
and
sub
dec
push
mov
pop
daa
movs
pop
mov
ins
push
adc
mov
jae
lods
xchg
and
test
add
(bad)
int3
mov
adc
outs
cmp
(bad)
retf
jmp
ss
ret
sbb
sbb
dec
mov
and
mov
jnp
pop
mov
clc
nop
addr16
or
inc
loope
enter
enter
push
and
outs
lods
ins
loop
jmp
push
daa
aaa
lahf
ds
xchg
inc
or
cmp
adc
or
or
ret
mov
loop
ins
ja
repz
and
mov
cli
fisubr
pushf
mov
cld
add
sti
dec
int3
cmp
push
lods
loop
shl
and
data16
call
xor
sbb
call
jbe
xchg
cld
mov
dec
fucomi
mov
inc
mov
clc
sub
fcom
ror
push
push
cs
and
stos
sub
dec
pop
push
or
pop
retf
xchg
das
pop
nop
scas
push
and
cs
(bad)
stos
(bad)
dec
out
outs
mov
pushf
mov
push
jmp
daa
rol
inc
and
fcmovb
fs
lock
ins
mov
fst
pop
push
movs
mov
pushf
retf
aas
test
mov
das
fidiv
mov
ret
(bad)
std
and
retf
(bad)
cwde
int
shr
aam
into
stos
xchg
mov
adc
fisttp
jae
bsf
call
loopne
addr16
pop
test
jno
or
mov
pushf
mov
sahf
stos
lahf
test
adc
xchg
push
cmps
cmp
imul
jmp
mov
ins
jnp
mov
outs
(bad)
rcl
xor
shl
adc
(bad)
xor
or
jp
lods
xor
movs
call
dec
sub
in
xor
jbe
js
stc
dec
xchg
test
test
or
adc
daa
out
jecxz
xor
pop
xchg
aaa
movs
retf
ret
shr
enter
jl
call
fdivr
and
or
out
imul
ret
cli
cmp
fst
gs
pop
push
sbb
(bad)
shl
in
sahf
pop
call
mov
rol
idiv
pop
push
push
enter
arpl
repz
xor
add
lahf
(bad)
inc
inc
adc
out
ret
sub
imul
cdq
jns
cwde
push
push
retf
call
jp
iret
imul
cmp
xchg
pop
adc
jns
enter
popa
jbe
retf
jae
dec
outs
jecxz
push
pusha
ins
imul
inc
(bad)
sbb
jns
test
mov
sbb
test
inc
aaa
pop
neg
xchg
rol
push
pop
and
and
movs
(bad)
addr16
lock
inc
outs
retf
daa
(bad)
repnz
retf
cmp
xchg
sahf
cs
mov
adc
loopne
in
fidiv
cmps
repz
xchg
or
dec
fs
sbb
dec
push
mov
dec
inc
cmp
push
cld
data16
lock
push
movs
or
fs
push
lock
sbb
gs
push
jmp
pushf
fwait
cmp
ficom
in
fisub
adc
xchg
fadd
fs
xor
sbb
imul
je
mov
(bad)
inc
loope
or
imul
scas
pop
pop
pushf
loopne
lds
or
mov
sub
push
xchg
addr16
fcmovnbe
shl
clc
mov
int
jne
in
mov
pushf
cmp
into
loope
mov
mov
mov
jns
mov
(bad)
or
mov
xchg
cld
mov
cdq
fwait
mov
dec
int3
cmc
rcl
add
add
jns
add
add
jno
and
sub
retf
test
jno
xchg
jl
repz
ret
mov
mov
mov
imul
dec
enter
mov
ret
xchg
fdivp
popa
xor
and
add
shr
jmp
js
xchg
and
mov
jl
xchg
add
nop
movs
test
fsub
lods
sti
pusha
push
adc
ret
xchg
rcr
out
pop
inc
push
fld
pop
jae
(bad)
sbb
ins
inc
ror
aas
das
fld
mov
xchg
jp
mov
dec
cmp
jbe
push
int
jno
jnp
ret
fwait
iret
pop
fisttp
adc
xchg
mov
lds
sbb
sbb
sbb
pushf
add
div
xchg
push
fnstcw
pop
mov
or
scas
or
cmps
cmp
(bad)
ins
mov
xchg
jmp
xor
xchg
popf
xor
add
add
add
in
inc
mov
and
and
jg
xor
add
pop
inc
retf
xor
xor
xchg
stos
jg
ja
xor
pop
(bad)
frstor
bound
xor
jae
ds
aaa
push
mov
fnstsw
xor
stc
test
pop
outs
and
mov
mov
mov
mov
sub
out
adc
mov
rcr
sbb
int3
mov
(bad)
xchg
sti
cmp
mov
jb
mov
scas
jg
adc
push
dec
es
idiv
or
(bad)
dec
addr16
dec
pop
mov
push
mov
and
repnz
fdiv
loopne
xlat
xlat
push
pop
pop
leave
pop
cs
stc
sub
cwde
mov
iret
xchg
sub
add
xchg
outs
and
vpmaddwd
push
sbb
ins
mov
sub
push
xchg
jp
in
retf
jmp
pop
cld
pop
in
xchg
sbb
sahf
std
imul
xchg
sbb
loopne
adc
cmp
cmc
arpl
and
mov
in
(bad)
repz
xor
sub
push
push
sub
rcr
outs
mov
push
(bad)
adc
jmp
fwait
clc
mov
push
add
adc
jge
mov
mov
push
sbb
out
cmp
ja
push
add
shl
pusha
and
gs
sbb
xchg
mov
idiv
push
sub
or
adc
retf
(bad)
mov
inc
(bad)
jmp
pop
test
add
sub
fild
shl
cmp
(bad)
sbb
push
add
and
fadd
mov
cmps
rcr
xor
push
icebp
pop
pop
data16
xor
(bad)
mov
xlat
dec
shl
cmp
push
xchg
adc
dec
pushf
test
mov
popa
adc
jo
clc
aam
aam
push
movs
add
cdq
mov
movs
jno
sti
call
in
pusha
aam
push
ds
xlat
jmp
ins
xchg
jbe
xor
or
sbb
ficomp
repnz
(bad)
sub
add
mov
jmp
aas
pusha
iret
xlat
xor
pop
add
xchg
dec
mov
sbb
sbb
mov
or
mov
ins
sbb
cmp
xchg
movs
jae
jmp
adc
in
test
aad
inc
cmps
stos
sbb
mov
mov
jo
push
jne
lock
or
data16
fmul
(bad)
pop
loopne
sub
neg
sbb
int
lods
jne
jmp
cwde
push
mov
mov
lods
pop
push
je
mov
cmp
(bad)
dec
jbe
leave
cdq
mov
pop
jl
push
int3
or
loope
jae
push
cld
add
test
rol
sub
jle
mov
sahf
push
cmp
push
out
push
inc
push
stc
mov
mov
mov
jl
int3
stos
enter
popf
sbb
out
mov
ds
out
ret
pop
mov
cli
cmpxchg
inc
cmp
pop
inc
sub
nop
inc
enter
mov
sahf
repz
pop
lods
push
dec
dec
mul
adc
dec
ja
pop
retf
inc
dec
mov
(bad)
loopne
test
adc
call
test
add
add
pop
add
add
mov
into
pop
dec
mov
cmps
fbld
test
ins
inc
nop
ss
icebp
je
xor
xor
mov
mov
pop
pushf
add
shl
ror
sub
cld
inc
or
sub
xor
pop
or
pop
(bad)
jmp
fiadd
or
dec
jo
sub
fldcw
daa
retf
fldcw
ret
aas
dec
jmp
stos
jmp
pop
cmp
clc
mov
repz
rol
or
sbb
xchg
cmp
sbb
sub
inc
or
loop
std
nop
lahf
jae
xor
call
cwde
(bad)
mov
jmp
sub
enter
(bad)
push
in
mov
sub
inc
shl
(bad)
loope
aam
pop
stc
adc
pop
mov
pop
jge
adc
test
fistp
jge
jle
and
pop
mov
(bad)
pop
jp
sbb
(bad)
jmp
stos
ret
dec
add
or
dec
sub
pop
push
frstor
xchg
mov
das
jmp
test
imul
or
and
ins
add
add
dec
add
add
out
add
pop
xchg
cli
mov
call
cmp
sbb
stos
fcomp
daa
shl
arpl
jno
xchg
mov
pop
andnps
sahf
mov
js
dec
fcom
cld
out
mov
xor
mov
or
push
popf
sbb
pop
(bad)
cdq
sub
jmp
ins
pop
jns
xchg
xchg
cwde
sahf
(bad)
or
mov
adc
scas
sub
jb
fild
sbb
mov
cmp
es
mov
test
dec
imul
mov
test
leave
push
jge
es
cmps
rcr
pop
adc
cs
dec
std
call
rcl
add
imul
mov
or
mov
push
xor
das
jmp
out
push
(bad)
psllq
je
ror
mov
sbb
cmps
or
push
test
imul
pop
retf
out
sahf
ins
mov
push
mov
stc
jb
(bad)
sbb
jmp
mov
mov
or
div
loope
dec
xchg
aas
xor
call
pop
inc
int3
mov
inc
pop
pop
xor
xchg
(bad)
icebp
repz
mov
rcr
mov
adc
xchg
ins
fldenv
cmp
sbb
adc
out
mov
mov
pop
test
cmc
cmp
push
push
xchg
dec
sbb
loop
push
jecxz
repz
data16
pop
inc
mov
pushf
jl
repz
leave
pcmpgtb
movs
movs
dec
ds
cld
mov
mov
rcl
cli
icebp
mov
and
movs
iret
das
or
dec
inc
addr16
cs
add
xchg
jae
mov
mov
mov
loope
sub
aad
push
mov
out
loopne
retf
jo
test
retf
mov
xor
jge
xor
sti
loopne
(bad)
ins
les
xor
das
jo
xchg
xchg
rcr
icebp
and
out
pop
and
and
call
xlat
dec
push
add
fcomip
lods
mul
mov
outs
jge
inc
leave
fs
fs
out
dec
retf
add
add
add
gs
das
enter
add
into
or
pop
fs
ret
and
inc
cmp
popf
mov
lods
nop
ss
xchg
add
fild
push
scas
mov
fwait
mov
cs
mov
xchg
add
out
aas
ret
retf
in
ins
das
mov
inc
retw
push
(bad)
cmovns
push
xor
int
pop
std
mov
arpl
test
and
fmul
leave
dec
rol
aad
repz
stc
dec
add
pop
xor
in
adc
cdq
cli
ds
mov
call
int3
in
hlt
or
cmp
data16
or
jns
push
cld
mov
add
(bad)
fsub
mov
les
fidivr
mov
pushf
fs
xor
xchg
arpl
pop
ss
loope
int3
jmp
jmp
fidivr
scas
or
push
inc
popa
lock
pop
mov
call
xchg
mov
add
and
movs
ret
fstp
cmp
stos
cmp
stc
repnz
mov
mov
mov
retf
sbb
dec
sub
sbb
(bad)
(bad)
jmp
jmp
add
bound
test
xchg
jle
push
jno
sahf
mov
adc
push
add
push
scas
and
aad
sbb
mov
mov
xchg
push
fidiv
pop
fs
cmps
cdq
push
rol
xchg
jns
sub
sbb
lock
sbb
lea
sar
add
fsubr
fcmovu
xchg
fsubr
cmp
mov
je
pop
mov
fmul
push
jae
jo
or
pop
hlt
xlat
fnstsw
xchg
or
jns
adc
adc
repz
cmp
xlat
or
imul
les
jecxz
ds
mov
add
add
add
movs
movs
fimul
jnp
mov
pop
jp
out
call
adc
jo
mov
push
test
cdq
in
stos
jbe
test
repnz
dec
pop
lea
stos
in
sub
add
data16
aam
in
daa
(bad)
(bad)
jnp
jns
movs
retf
pop
ss
cmp
mul
inc
mov
mov
stos
jbe
pop
arpl
mov
aam
fisttp
xor
fdiv
sahf
xor
sub
shl
ins
sbb
push
mov
sbb
inc
fcomp
loopne
inc
inc
cmc
adc
xchg
jmp
bound
dec
inc
or
ss
jmp
inc
movs
jno
fdecstp
xchg
ret
fwait
pop
test
sti
sar
(bad)
and
out
inc
out
sbb
xchg
jno
popa
mov
add
jmp
loopne
jb
mov
inc
int3
sbb
adc
mov
mov
into
sub
neg
je
mov
pop
call
jl
xchg
xchg
loopne
or
jmp
mov
fimul
outs
cmp
out
and
inc
xlat
out
jmp
dec
int
sysexit
jno
and
xchg
mov
mov
adc
push
dec
ret
jae
pop
or
test
enter
inc
test
mov
cmp
jnp
fld
es
stos
xchg
jno
dec
jge
dec
sub
call
(bad)
push
bound
ins
idiv
sti
dec
jmp
iret
test
xchg
retf
imul
sti
mov
ins
ret
pop
test
outs
mov
enter
ins
push
xor
call
sub
scas
leave
out
and
push
out
push
lock
rcr
mov
fst
pushf
sti
les
mov
dec
xchg
inc
sub
in
dec
adc
mov
cmp
and
test
or
(bad)
jge
pusha
xchg
in
push
mov
lock
loop
mov
and
pusha
into
pop
rcl
scas
lds
aam
clc
adc
mov
push
ins
or
stos
xor
or
mov
mov
test
add
mov
cli
jg
mov
sahf
ins
pop
pop
push
(bad)
pop
nop
push
ins
push
fwait
xlat
and
daa
dec
ins
xor
mov
aad
call
mov
lds
mov
test
ret
int
cmps
movs
adc
retf
add
iret
sbb
aas
out
xchg
outs
ja
pushf
push
mov
xchg
jns
aaa
xor
pop
daa
fwait
(bad)
ja
mov
inc
iret
in
adc
mov
mov
xchg
inc
sub
popa
cmp
cmp
shl
data16
test
lock
nop
adc
sub
and
jae
in
inc
cmc
aad
mov
and
pop
ficomp
(bad)
sahf
sub
mov
dec
xchg
ficom
stos
dec
mov
xor
sub
add
add
add
sbb
in
xor
mov
push
sti
mov
mov
jge
(bad)
cli
or
mov
sbb
outs
out
mov
or
adc
pop
sub
jno
imul
push
xchg
clc
dec
icebp
popa
outs
jp
movs
ins
adc
sbb
out
ins
stc
stos
in
add
ds
dec
mov
retf
arpl
inc
jmp
or
in
mov
inc
xchg
cmps
cmp
ret
add
add
add
push
cmps
xor
retf
int3
jmp
xlat
enter
mov
inc
xchg
jmp
push
pop
dec
xchg
cmps
add
cmp
and
sahf
stc
xchg
push
(bad)
out
cmp
jmp
xchg
or
test
aad
pop
fsubr
cmp
jbe
test
test
pop
js
jns
(bad)
mov
push
push
add
stc
lods
inc
in
add
lods
jns
mov
in
add
test
ins
xor
sub
dec
jbe
or
out
and
pop
mov
pop
in
das
pop
xchg
and
adc
mov
cdq
hlt
xchg
or
mov
(bad)
jmp
movs
ins
push
mov
jmp
outs
cmp
add
inc
or
pop
and
pop
test
or
sub
outs
dec
out
imul
inc
(bad)
(bad)
or
pushf
mov
mov
imul
or
in
in
lock
xchg
das
in
cmp
clc
push
fistp
ret
sub
add
pop
adc
mov
sub
xchg
sub
or
mov
dec
pop
stos
push
xchg
into
fninit
retf
enter
or
sub
int3
mov
addr16
mov
xchg
nop
sub
repz
dec
adc
bound
es
stos
mov
push
cmc
(bad)
imul
and
inc
mov
xor
movs
jne
in
mov
mov
jl
sbb
push
sub
fwait
or
mov
sbb
lea
scas
xor
jle
jno
adc
sub
mov
fnstcw
dec
frstor
dec
(bad)
clc
xchg
scas
icebp
mov
pop
pop
fmul
cmp
std
sbb
inc
fucomi
and
xor
(bad)
sar
movs
out
mov
loope
push
ret
add
xor
xchg
imul
sub
or
push
jne
mov
jae
fst
cmp
pop
loope
mov
inc
aas
xchg
dec
out
test
data16
fcom
mov
hlt
xor
shl
push
test
fcmove
mov
and
inc
mul
push
addr16
ins
sub
daa
test
xchg
cmp
pop
cli
(bad)
cli
inc
and
movs
sahf
pop
dec
pop
push
inc
pop
(bad)
cmc
iret
sub
add
stc
jb
jl
xor
mov
cmp
push
in
pushf
mov
(bad)
mov
add
add
add
add
add
cmp
xchg
mov
sbb
xor
mov
mov
add
cmp
push
adc
xor
in
pop
int3
push
pop
(bad)
jb
push
sub
in
jae
gs
pop
(bad)
pop
push
pushf
mov
ja
nop
stos
push
or
mov
inc
jg
or
or
and
jmp
aaa
mov
ds
jg
mov
imul
test
enter
mov
inc
xor
add
inc
pop
jp
cmp
jb
mov
or
cmc
or
cwde
cld
push
enter
retf
dec
inc
int3
int3
daa
dec
jmp
sub
outs
jl
dec
test
imul
outs
push
iret
dec
fs
pop
cwde
popa
cmc
(bad)
ffree
inc
jle
add
pushf
cmp
cmp
scas
adc
pop
or
jae
push
adc
sbb
sbb
in
and
fmulp
jmp
outs
push
xchg
push
add
addr16
xor
jecxz
mov
pop
push
push
lods
mov
addr16
dec
add
data16
xchg
push
inc
cwde
xor
xchg
jo
pop
arpl
leave
and
fnstenv
mov
daa
sbb
pop
sub
inc
shl
jns
sub
mov
pop
xor
jnp
mov
xor
jmp
jmp
mov
push
adc
stos
dec
inc
cmp
iret
sbb
mov
cli
push
imul
jnp
stc
shl
iret
sbb
pop
cmp
xor
ins
cmp
mov
jo
jbe
outs
mov
and
push
sbb
cmps
nop
std
add
daa
outs
mov
shl
movs
adc
lea
test
pusha
or
dec
sub
ret
add
add
mov
repnz
stos
lods
xchg
cmp
int3
fstp
pop
lahf
hlt
mov
pusha
xor
(bad)
xor
xchg
cmps
pop
shl
aaa
xor
leave
pop
mov
pop
imul
mov
mov
cli
inc
or
cmp
sub
mov
sub
sub
test
sti
out
add
push
(bad)
inc
jb
daa
pusha
repz
cdq
xchg
mov
push
push
data16
push
mov
mov
(bad)
jge
outs
bound
fidivr
sbb
sub
cdq
inc
or
sub
outs
pushf
mov
jae
mov
xchg
sub
jmp
pop
adc
sti
sbb
retf
jnp
out
mov
or
sti
sub
xchg
fisubr
ins
mov
aas
jb
sub
inc
call
in
rep
sub
xor
mov
mov
sbb
cdq
jecxz
inc
(bad)
or
push
(bad)
iret
mov
inc
out
fstp
adc
push
ja
popa
fild
lods
repnz
push
pop
dec
addr16
mov
dec
(bad)
sti
ret
ja
in
clc
mov
neg
xchg
out
fmul
cwde
inc
adc
cmps
fmul
sub
arpl
loope
popa
test
add
out
sbb
pop
inc
shl
inc
inc
mov
shr
mov
xchg
sub
es
adc
dec
mul
retf
jle
out
loope
and
fidivr
sbb
sub
ret
add
pop
in
repnz
stc
sbb
mov
mov
and
and
in
sub
arpl
(bad)
cwde
arpl
xor
push
xor
movs
js
sbb
mov
add
and
add
int3
mov
push
push
ror
dec
icebp
push
adc
(bad)
jp
call
aam
sub
add
xor
mov
sbb
cwde
arpl
inc
rcr
test
out
xor
cs
je
(bad)
in
jg
sbb
and
ror
dec
or
xor
jno
inc
fmul
lock
int3
sbb
rcr
shr
sub
addr16
dec
nop
cld
mov
fmul
xor
rcl
jecxz
jp
std
rcl
pop
lock
xchg
or
(bad)
xlat
repnz
pusha
call
jmp
push
std
aam
nop
mov
jb
out
ins
fs
stc
(bad)
jmp
adc
mov
stc
pop
js
bnd
inc
outs
repz
push
inc
call
inc
jnp
ins
mov
xor
ss
cmp
sub
jecxz
xor
les
ins
aas
fmul
dec
pop
xlat
pop
ins
add
jg
jg
jne
ret
cld
push
int3
push
xchg
push
loop
xchg
xchg
jl
clc
jb
popf
and
and
enter
not
outs
mov
out
fst
aaa
push
push
cs
mov
clc
sti
mov
and
jmp
not
cdq
(bad)
call
sbb
sbb
add
add
add
test
cmp
outs
lds
mov
std
js
jnp
por
dec
cmc
dec
add
imul
retf
sbb
inc
mov
fs
xchg
(bad)
fstp
repz
pusha
push
jge
test
sti
neg
xchg
cmp
pop
adc
dec
add
xchg
lods
mov
adc
adc
ret
pop
fidiv
and
jbe
sbb
sbb
xor
lahf
jg
jnp
imul
(bad)
sub
inc
add
out
xchg
jno
sbb
in
push
inc
out
aas
das
je
push
push
mov
pop
scas
push
or
push
repz
jb
xchg
(bad)
ins
and
(bad)
cmp
icebp
jno
(bad)
jnp
(bad)
fdiv
and
(bad)
mov
mov
jecxz
out
rol
sbb
das
push
js
addr16
and
fiadd
sar
(bad)
sub
mov
sbb
jmp
xor
lea
pushf
enter
pop
mov
jb
push
daa
push
mov
xor
bound
retf
xchg
pusha
mov
push
mov
pop
mov
pop
pop
cmp
pop
xchg
mov
jbe
adc
std
push
jmp
and
jmp
push
mov
loope
mov
add
mov
rcr
cli
jmp
pop
jecxz
adc
xor
mov
cmp
ins
mov
push
daa
push
pop
sar
push
stos
sbb
xlat
cmps
adc
in
ins
into
dec
imul
gs
rcl
sbb
shr
push
in
jne
cmc
push
mov
cmc
or
in
sahf
ins
pop
and
ja
add
outs
sub
cmp
jo
inc
pop
int
push
add
ret
dec
jmp
std
sbb
mov
aaa
shl
push
popa
mov
int
xor
jg
sub
aam
cmps
out
mov
in
mov
cmp
add
add
or
add
rcl
mov
and
sub
inc
inc
inc
shr
popa
ret
(bad)
(bad)
jg
lock
cdq
jno
add
and
mov
xchg
int
add
addr16
out
in
jne
js
inc
lahf
(bad)
out
inc
stos
mov
or
fadd
add
outs
in
mov
scas
adc
xor
stos
fcom
ss
xor
rol
dec
cmp
sbb
lahf
push
je
add
clc
mov
imul
mov
icebp
popf
or
sub
pop
jb
ds
pop
push
out
lock
icebp
cmp
out
jp
push
jmp
mov
lods
pushf
push
(bad)
adc
and
int
mov
add
cmp
call
call
jmp
mov
frstor
mov
jge
aam
sbb
fwait
cdq
enter
clc
test
and
not
jg
mov
data16
adc
aas
mov
sti
or
(bad)
ror
xchg
mov
jbe
(bad)
retf
push
cmps
adc
call
nop
inc
add
stos
push
call
or
cwde
sbb
push
jae
inc
push
call
xor
test
aaa
stos
ficom
inc
jo
loop
and
push
dec
gs
xchg
nop
xchg
mov
add
jle
(bad)
mov
xchg
push
and
sub
jp
or
sbb
adc
xlat
or
mov
mov
into
jmp
enter
ss
dec
aas
loopne
leave
inc
shl
jb
(bad)
fld
jmp
hlt
(bad)
cmp
rol
xchg
in
outs
lock
arpl
rcl
ins
cdq
push
fbld
jmp
mov
sub
xchg
push
cwde
or
mov
add
xor
retf
es
sahf
mov
out
int
mov
movs
push
iret
test
and
mov
sahf
add
out
std
jns
pop
push
inc
rcl
lods
mov
iret
cmps
cwde
ins
mov
add
neg
push
cmp
jne
xchg
retf
sbb
jle
sub
jmp
mov
mov
stc
bound
data16
mov
adc
xchg
pop
mov
push
mov
cs
les
std
sbb
inc
push
xlat
scas
pop
inc
add
retf
jg
(bad)
sbb
icebp
jl
fnsave
loope
jg
std
aaa
ja
and
out
cld
fisttp
loop
push
xor
pop
inc
je
pop
repz
jmp
mov
jl
hlt
push
test
add
les
fmul
pop
test
test
jmp
jl
pop
aaa
icebp
int
jp
sbb
mov
mov
lahf
jmp
test
dec
ja
ret
add
jo
out
sub
pop
jae
inc
ins
out
popf
jl
cmps
adc
test
adc
imul
retf
xchg
addr16
adc
mov
cwde
cdq
dec
inc
cdq
bound
stos
xlat
in
inc
cmp
xchg
lods
xchg
ja
mov
ds
sbb
jae
inc
sbb
clc
or
xchg
lods
leave
ret
addr16
rcl
and
jns
ins
loope
out
es
pop
lods
(bad)
shl
test
lods
imul
dec
pop
das
mov
sbb
in
xchg
fstp
imul
shr
gs
add
sahf
pop
out
shl
push
mov
cmp
push
xor
xchg
(bad)
sti
sbb
pop
jmp
adc
adc
jg
xchg
addr16
fsubr
push
sub
cmp
sar
xchg
pop
push
and
or
mov
je
inc
add
nop
sub
cwde
imul
xor
call
mov
and
ins
or
int3
imul
jns
loope
pop
lahf
pop
pop
dec
sub
sbb
or
mov
add
iret
mov
mov
dec
dec
mov
jg
jmp
clc
jnp
cdq
out
cli
nop
(bad)
outs
cmc
hlt
(bad)
push
sbb
into
jnp
cmps
pusha
jcxz
mov
rol
mov
fwait
cld
daa
test
mov
mov
ins
xlat
sbb
cmp
mov
adc
sub
popa
ret
dec
mov
stc
or
mov
hlt
jp
cs
mov
sub
xlat
loop
daa
ret
push
push
xchg
outs
mov
es
int
push
adc
dec
mov
dec
xor
inc
adc
in
ret
dec
jnp
mov
jnp
dec
xchg
out
sbb
cs
mov
fnstenv
adc
bound
retf
enter
pop
in
(bad)
enter
xchg
xor
pop
loope
retf
aaa
mov
sub
dec
mov
pop
inc
jg
out
add
inc
test
jmp
dec
into
ins
je
jne
aam
xlat
inc
mov
mov
es
jl
movs
retf
jns
jle
mov
add
sub
or
jmp
idiv
mov
jo
adc
xor
movs
(bad)
repnz
sbb
leave
jne
sub
jno
mov
fistp
xchg
stc
or
dec
lds
xchg
arpl
mov
cld
cmp
pushf
dec
push
int3
aam
pop
test
scas
xor
or
out
cmp
dec
fdiv
push
adc
push
mov
sbb
mov
cmp
shl
mov
clc
outs
(bad)
push
add
ins
mov
jmp
xor
sub
pop
leave
shl
popf
scas
(bad)
pop
popa
jl
rol
pop
call
call
xor
xor
cmp
arpl
pop
(bad)
push
inc
add
fcmovbe
push
fidivr
lods
inc
sub
adc
inc
push
jl
popa
cs
(bad)
jl
pop
pop
push
cmp
xchg
shl
jno
rol
dec
popa
jbe
dec
mov
inc
dec
cdq
je
scas
(bad)
stos
push
lods
es
movs
(bad)
ja
cwde
mov
and
xchg
outs
inc
sbb
mov
mov
pop
pop
ja
xchg
or
gs
xchg
(bad)
loopne
add
mov
lea
or
inc
fcom
mov
je
movs
cmp
push
test
(bad)
xor
loope
icebp
rcr
mov
pop
adc
dec
push
xchg
lock
int
jmp
(bad)
sti
(bad)
dec
cmp
dec
add
push
scas
scas
les
mov
mov
scas
adc
aas
add
cmp
test
mov
and
adc
(bad)
sub
xchg
cmp
(bad)
loop
pop
mov
adc
push
xchg
push
jae
pop
dec
icebp
into
jp
cwde
sub
adc
jns
sahf
sub
retf
cli
js
cmps
xchg
inc
pop
fiadd
add
mov
add
xchg
add
add
jecxz
mov
dec
pop
fld
xor
cmp
mov
lods
pop
sar
fs
adc
adc
ds
mov
sub
popa
(bad)
adc
stos
sub
mov
aam
fcom
test
enter
inc
or
and
popf
ds
int
std
cld
push
and
rol
push
sbb
pushf
cmp
das
fisttp
pop
pop
sahf
stos
sbb
inc
(bad)
in
xor
jmp
cld
setb
xor
pop
dec
sahf
ret
cmp
mov
data16
sbb
mov
pop
cmp
data16
dec
call
std
outs
bound
jns
test
mov
or
add
cwde
ds
dec
mov
loopne
xchg
push
imul
push
xchg
or
(bad)
loop
enter
aad
leave
sbb
push
into
jmp
jns
and
xor
bound
mov
mov
mov
add
jnp
(bad)
mov
cmp
scas
icebp
sbb
mov
imul
pop
mov
xchg
push
fld
xor
xchg
into
call
das
mov
(bad)
dec
lods
ret
mov
push
adc
or
adc
xor
dec
fsubp
push
outs
and
jbe
stos
sbb
add
add
cli
add
add
inc
lock
xchg
dec
xchg
iret
sbb
inc
ja
jle
ret
cmps
das
out
dec
in
or
mov
js
inc
adc
fidivr
mov
popf
lds
mov
mov
aam
icebp
sti
pusha
add
xchg
scas
ret
mov
jb
nop
dec
add
add
adc
pop
mov
push
cmp
inc
into
xchg
xchg
hlt
std
or
add
mov
xchg
cmps
mov
bound
int3
loope
jmp
xchg
js
push
iret
sbb
mov
retf
subps
xlat
(bad)
cli
jae
jl
jge
adc
stos
cdq
push
imul
iret
popa
mov
loop
test
mov
mov
jecxz
fnstenv
pop
push
aad
and
dec
cld
xchg
fldenv
and
loop
add
push
ret
inc
push
sub
mov
or
push
inc
into
pop
xlat
pop
gs
shufps
and
mov
dec
les
pop
jmp
arpl
mov
sub
sbb
jmp
and
add
cmp
sbb
call
push
popa
dec
ror
outs
popa
test
fstp
jl
push
push
popa
add
and
mov
dec
mov
or
mov
sti
add
ins
xor
stos
sub
jl
push
sbb
cmp
mov
mov
and
daa
movs
push
movs
(bad)
call
fstp
lahf
iret
xchg
fbstp
xchg
ss
mov
cmp
xchg
rol
xchg
lds
movs
out
sub
fdiv
pop
out
call
jg
fisttp
ja
lods
pop
lahf
push
add
imul
mov
xchg
mov
and
sahf
push
cmp
dec
add
test
out
mov
loop
(bad)
(bad)
add
fisubr
push
cmc
mov
adc
(bad)
popf
imul
imul
push
push
and
jmp
fsubr
call
jg
fwait
jnp
ret
mov
lock
inc
dec
xlat
pop
addr16
jmp
fwait
cmp
mov
xchg
pop
inc
out
dec
pop
imul
adc
leave
inc
call
pop
add
imul
and
ret
adc
(bad)
stc
ret
sbb
inc
ret
aam
fdiv
dec
xor
stos
push
out
stos
sub
push
aam
outs
mov
sti
inc
mov
rcl
fstp
xor
retf
inc
lock
shl
add
xchg
push
jecxz
pusha
fild
iret
push
add
xchg
std
cwde
stos
add
call
cmps
mov
das
addr16
jno
add
mov
idiv
je
cmp
xchg
movs
in
es
mov
add
mov
cld
jo
loop
mov
scas
mov
jmp
and
mov
push
mov
mov
and
fidivr
mov
(bad)
inc
add
mov
pop
rcr
sar
scas
jo
pop
inc
push
mov
loopne
aaa
shl
(bad)
lods
inc
mov
xchg
cli
mov
add
clc
pop
and
sub
jne
fs
dec
mov
js
fwait
(bad)
in
sti
or
fstp
hlt
sbb
push
jne
jecxz
add
xchg
xor
outs
rcr
cmps
cmp
adc
gs
fadd
fsubr
popf
lock
retf
jnp
jo
inc
cmps
cmp
mov
jmp
rcl
mov
cli
das
mov
jo
cli
scas
inc
xchg
mov
inc
in
in
cld
lahf
xor
jae
sbb
mov
(bad)
aas
push
mov
mov
lds
mov
dec
inc
inc
fs
xlat
test
mov
fist
xor
mov
xchg
aaa
sbb
cli
mov
bnd
ss
jp
popf
cli
jle
fcomp
xchg
cmp
mov
pop
xor
sub
rol
scas
mov
test
aaa
sub
(bad)
sub
push
mov
or
xchg
nop
adc
rol
jae
enter
cdq
push
push
dec
pop
addr16
sub
add
sub
dec
add
int3
cmp
in
js
test
pusha
retf
clc
pop
sub
jb
test
iret
nop
mov
out
clc
dec
and
pop
inc
ret
ror
jae
adc
inc
int3
jmp
or
pop
lock
aaa
int3
jae
dec
jecxz
ror
mov
cmps
jle
cmps
mov
xor
sbb
fnsave
add
inc
dec
dec
les
mov
mov
pop
dec
pop
repz
jle
in
xor
inc
add
mov
fldenv
mov
sub
add
push
sub
sub
cmp
sti
out
xchg
cmps
dec
jp
cmps
xor
(bad)
es
int3
push
mov
ins
jno
pop
sbb
dec
and
xchg
fbstp
movs
mov
adc
jmp
and
in
pop
stc
sbb
les
jne
pop
push
(bad)
pop
xor
dec
dec
mov
cmp
fcomp
push
scas
or
sti
mov
mov
imul
add
mov
nop
lds
jns
sti
jne
mov
and
xlat
lods
adc
push
push
lds
mov
(bad)
cli
repz
and
ds
addr16
xor
xlat
neg
inc
movs
inc
mov
add
bnd
sbb
dec
nop
stos
xchg
std
add
cmps
adc
adc
jl
push
push
push
(bad)
icebp
add
aas
into
cmps
js
rcl
xor
adc
gs
fs
int
out
mov
fidivr
add
movs
inc
cmps
and
je
lods
push
rcr
pop
mov
and
ficom
dec
imul
cmp
add
dec
add
add
push
int3
dec
cld
push
rcr
mov
sbb
pop
pop
add
sub
cmp
nop
fs
addr16
scas
imul
cmp
mov
pop
push
(bad)
adc
add
ret
das
and
mov
dec
leave
sahf
call
mov
in
adc
call
and
jnp
repnz
inc
cmp
into
inc
cmp
out
mov
les
adc
add
and
mov
add
push
sub
lods
fimul
mov
mov
cmp
in
dec
mov
(bad)
pushf
data16
popa
enter
repz
jae
inc
int3
loope
or
nop
scas
mov
inc
cdq
dec
or
mov
pop
inc
call
popf
inc
sahf
clc
jns
dec
pop
out
ja
sub
push
or
out
inc
adc
test
ja
mov
into
movs
ss
cmc
sti
inc
rcr
sub
test
sti
rcl
push
xor
jns
js
dec
stc
push
jbe
sub
sub
xchg
ins
(bad)
pop
or
sahf
xor
mov
out
sub
popf
mov
pop
repnz
addr16
cs
loope
ret
mov
mov
ret
repz
call
add
ret
(bad)
mov
and
push
jl
jnp
(bad)
cmp
pop
adc
mov
imul
pop
jne
dec
push
inc
out
push
xor
and
jne
arpl
fs
jae
test
sahf
inc
xchg
aas
je
loopne
adc
dec
xchg
sar
(bad)
lock
push
and
pop
jl
out
and
shl
out
inc
inc
cmps
and
(bad)
ja
shl
add
outs
ins
iret
and
xchg
nop
pop
xor
mov
(bad)
lock
adc
stos
and
sar
jp
js
sbb
pop
jae
pusha
pop
xchg
out
mov
ret
pop
adc
or
neg
inc
or
shr
bound
pop
mov
jp
sbb
cld
mov
mov
inc
mov
into
mov
(bad)
ficomp
or
ret
and
xchg
jle
mov
cmp
or
inc
dec
lahf
mov
mov
outs
dec
iret
popf
enter
jmp
lds
xchg
adc
jmp
(bad)
mov
movs
ins
cmp
pop
inc
mov
push
pop
xlat
jbe
jmp
(bad)
jge
aas
stos
xchg
mov
and
sbb
and
push
repnz
pcmpeqw
xchg
jb
xchg
dec
dec
jb
(bad)
call
add
ins
add
ficom
xchg
jecxz
sbb
mov
mov
or
sti
neg
adc
inc
stc
loop
retf
jl
stos
call
(bad)
mov
retf
mov
inc
shr
add
cmc
and
dec
inc
fiadd
repz
arpl
dec
shr
adc
cmp
adc
cmps
jae
mov
pop
test
push
add
inc
mov
jbe
push
mov
sub
pop
mov
sti
sbb
jb
add
jp
cdq
sub
dec
dec
mov
xchg
xchg
pop
out
mov
in
fprem1
dec
neg
inc
into
mov
mov
dec
call
and
sbb
add
mov
push
and
in
data16
pop
enter
sub
cmp
lea
cmp
cmp
xchg
pop
loop
xlat
test
cmp
push
jl
xchg
jg
mul
pop
mov
add
add
add
ss
loopne
aam
das
xor
mov
fcmovbe
mov
jecxz
aam
fld
sbb
outs
or
dec
or
mov
adc
fnstsw
int
addr16
dec
pop
push
dec
dec
sub
(bad)
frstor
cmp
xor
jmp
pop
adc
sub
adc
das
gs
add
ret
rcr
mov
sub
ret
shl
leave
mov
loop
xchg
imul
push
sti
pop
and
imul
lahf
and
push
or
mov
mov
mov
xchg
sar
push
lock
lahf
ins
push
jmp
fidivr
sub
or
sbb
nop
into
jl
in
push
pop
int3
xchg
loop
les
mov
add
(bad)
jns
or
and
movs
sbb
sub
loope
pop
xlat
fadd
movs
jne
retf
les
lahf
inc
push
clc
pop
and
iret
mov
arpl
dec
ds
mov
pop
mov
in
mov
jnp
mov
mov
stc
inc
std
iret
xor
add
sbb
(bad)
pop
xchg
in
loop
arpl
sar
jne
xchg
jno
retf
imul
cld
(bad)
call
mov
out
loopne
and
cs
sahf
fdivr
test
aas
retf
mov
push
ins
ret
imul
xor
div
jne
loopne
add
loopne
lds
popf
stos
lock
xchg
jo
xlat
scas
xchg
ds
fcom
dec
dec
in
cs
adc
pop
movaps
add
dec
hlt
push
jmp
xchg
std
push
sbb
mov
inc
cmc
sbb
dec
movs
mov
sbb
sub
sub
sbb
mov
lock
sbb
pop
fld
dec
push
push
int
mov
push
fmul
ss
je
shr
cmp
or
or
xor
mov
les
bound
xchg
fbld
stos
xchg
mov
jnp
jnp
test
jecxz
mov
loop
xchg
ret
fucomi
jo
adc
imul
test
popa
and
inc
fsubp
retf
int
std
into
cdq
and
xchg
es
mov
stos
addr16
xchg
daa
mov
in
imul
stos
ret
and
hlt
pop
rcr
mov
js
inc
in
mov
cli
rcl
sub
jmp
inc
xchg
xor
retf
xchg
je
jbe
in
or
pop
inc
ss
lds
push
rcl
push
adc
xor
movs
fisttp
pop
lock
movs
push
inc
dec
cmps
imul
adc
pop
add
xchg
outs
push
inc
in
mov
push
mov
iret
fs
ja
pop
dec
movs
retf
ss
or
(bad)
and
repz
sahf
es
push
lods
dec
mov
mov
dec
jg
jno
cs
push
bswap
iret
sbb
fmul
ja
pop
xchg
psrad
pop
jmp
gs
bnd
xchg
fld
iret
jnp
popa
cs
cmps
mov
rol
mov
pop
jg
out
ret
fadd
cmp
mov
clc
pushf
sub
add
mov
cmp
mov
inc
mov
(bad)
add
pop
hlt
scas
dec
pop
or
mov
dec
ja
mov
dec
xchg
add
fidiv
es
cmp
mov
packssdw
ins
mov
sbb
das
scas
mov
in
push
lea
dec
pop
sahf
iret
push
mov
inc
jecxz
ret
dec
arpl
push
dec
into
das
(bad)
jbe
add
inc
sbb
jmp
xor
cmps
dec
xchg
sahf
mov
xchg
xor
jmp
jecxz
or
jns
inc
xchg
push
cmps
outs
(bad)
jno
bound
int3
pop
mov
imul
cmp
call
inc
pop
into
stc
mov
mov
and
cli
sub
sbb
iret
sbb
adc
cmp
dec
fmulp
xchg
or
add
mov
mov
in
and
push
lods
out
sahf
(bad)
ins
cli
hlt
xor
mov
aaa
xchg
in
sub
mov
cmp
cmps
test
push
jno
or
and
and
pop
addr16
push
push
adc
sub
sub
sbb
shr
dec
dec
mov
sbb
jg
add
(bad)
add
mov
scas
jge
retf
mov
aaa
mov
xchg
or
fisub
inc
xchg
inc
out
fst
push
shl
(bad)
(bad)
leave
jp
dec
ret
fs
dec
(bad)
jo
pop
cld
(bad)
(bad)
dec
mov
mov
bound
push
xchg
inc
outs
xchg
adc
sub
sbb
push
pop
(bad)
(bad)
add
popa
add
add
add
dec
jb
and
push
fild
std
mov
shr
xchg
ror
cmp
inc
into
imul
push
pop
scas
push
mov
mul
cmps
dec
xlat
dec
scas
sbb
mov
jle
xchg
or
aaa
lahf
gs
es
pop
jle
sbb
mov
pop
arpl
push
lods
xchg
ja
inc
jo
jne
es
imul
gs
popa
and
fmul
stos
pop
mov
jb
jl
or
dec
and
push
imul
pop
add
imul
jmp
stos
or
cmovno
jo
test
mov
loope
stos
lods
inc
stc
xor
call
aaa
popf
push
mov
adc
dec
xchg
push
cmp
in
cmp
jo
jecxz
outs
repz
int3
cmps
adc
adc
cmp
cli
jbe
retf
jl
and
test
dec
sub
dec
pop
je
pushf
or
pop
push
scas
mov
pop
jg
xor
dec
jae
rcl
mov
pop
cmc
jae
xor
pop
out
js
out
push
inc
inc
std
sbb
aad
int3
sbb
inc
enter
sub
add
and
clc
je
mov
es
cdq
push
add
mul
add
mov
push
push
xchg
adc
scas
call
mov
cmp
jmp
lea
repz
xchg
add
in
pop
pushf
sub
movs
pop
test
repz
adc
or
mov
jns
sub
cmp
stc
shr
loope
push
sbb
adc
inc
sar
(bad)
out
dec
xchg
mov
push
clc
(bad)
repz
and
jbe
fidivr
ins
cmc
mov
xor
fucomi
sti
pop
push
(bad)
cmps
std
mov
ins
repz
lock
adc
add
xchg
pop
imul
loopne
ins
jne
push
or
fs
ins
xchg
push
in
push
test
push
not
icebp
call
or
sbb
sbb
stc
adc
repnz
xor
mov
jl
mov
add
mov
add
das
add
add
xchg
fisttp
ret
sub
lods
push
mov
pop
addr16
daa
mov
outs
or
fcomp
test
mov
inc
loop
mov
pop
sub
cmp
mov
ins
jmp
lock
arpl
rcl
adc
in
push
fdivr
cmp
lock
dec
or
bound
jp
pop
rcr
(bad)
daa
cmps
jmp
mov
stos
push
cmp
add
(bad)
out
pushf
in
or
test
xchg
sub
aas
inc
add
wbinvd
sbb
je
sub
mov
pop
aaa
mov
call
mov
jle
dec
adc
adc
sti
outs
push
xor
and
mov
fstp
fmul
sbb
hlt
push
sub
mov
fiadd
outs
sub
and
jbe
aad
mov
dec
adc
push
lds
xor
cmp
push
addr16
mov
and
pop
jmp
repnz
push
add
jp
add
pop
jbe
pushf
mov
jmp
jno
out
inc
scas
add
pop
jo
loope
loopne
sbb
cld
pop
jp
ror
adc
xchg
ja
inc
punpcklbw
dec
push
add
pop
sub
arpl
into
jecxz
cmc
out
jns
xchg
mov
data16
adc
mov
aad
pop
lea
and
ficom
ins
outs
out
sbb
sbb
iret
push
in
pop
and
addr16
fs
icebp
stos
sub
ret
add
loopne
(bad)
push
cmc
cmps
mov
push
inc
in
fiadd
jno
adc
lea
push
or
lods
dec
and
idiv
xor
pop
scas
jb
dec
mov
cmps
jns
add
movs
iret
jno
cmp
and
jmp
jns
ja
push
jnp
dec
jecxz
dec
cmp
push
in
or
mov
pushaw
push
test
shr
pop
pop
test
repnz
sbb
push
leave
mov
iret
sahf
sti
(bad)
jmp
and
xchg
mov
(bad)
movs
out
xor
jne
xor
xchg
adc
xchg
adc
push
(bad)
shl
mov
jecxz
lock
add
pop
mov
and
adc
ret
loop
mov
jg
ins
mov
mov
push
bound
jecxz
push
mov
lahf
jge
mov
jne
out
xchg
mov
(bad)
sub
fisttp
cld
xor
pop
xor
push
adc
mov
inc
rcl
cmp
leave
inc
shl
jp
icebp
mov
mov
repnz
inc
sub
nop
sbb
retf
dec
cmp
adc
jns
lahf
ror
adc
jge
(bad)
movs
mov
scas
mov
or
sub
fxch
test
mov
xor
mov
cmc
ja
jp
dec
push
stos
clc
popf
push
test
call
pop
mov
mov
fldenv
mov
(bad)
int
inc
test
mov
adc
dec
dec
jno
cmps
and
pop
stc
xor
dec
jne
cdq
inc
push
and
mov
jo
clc
add
add
add
sbb
iret
xor
sbb
sbb
aas
js
inc
retf
popa
sbb
aas
and
or
enter
scas
ja
fsubrp
(bad)
sbb
sub
mov
jecxz
add
mov
lahf
aas
push
mov
loop
or
xor
fistp
or
in
std
jnp
jae
test
(bad)
cli
or
lods
pop
jbe
into
xor
mov
add
inc
leave
mov
test
mov
xchg
nop
sbb
into
inc
mov
mov
jbe
ins
aad
repnz
dec
xor
scas
sbb
aad
cmc
and
lods
int3
sbb
mov
pop
xchg
xchg
push
loope
mov
fist
dec
jmp
cmc
jle
adc
in
mov
test
cmp
mov
das
mov
dec
and
lds
add
push
or
les
mov
or
sbb
ss
pusha
int3
fldenv
xchg
push
(bad)
out
pop
mov
hlt
xor
cs
fadd
xchg
call
add
arpl
mov
and
fmul
or
stos
dec
mov
pop
jne
xor
sti
movs
sbb
(bad)
dec
ja
xor
mov
in
jp
sti
mov
cli
mov
jmp
arpl
mov
pop
icebp
stc
push
stos
jne
lfs
pop
inc
test
or
repnz
sub
mov
loop
cdq
jnp
in
jecxz
inc
sub
xor
cmp
mov
ins
lds
inc
add
add
xchg
aas
push
stos
stc
adc
ficom
cmp
call
jne
mov
sbb
(bad)
outs
aaa
jne
retf
shl
sbb
push
adc
test
push
daa
and
mov
test
jb
call
(bad)
cwde
sub
inc
cmp
int3
cdq
stos
aas
outs
popa
add
sbb
or
ret
cmps
(bad)
div
mov
test
push
mov
push
mov
pusha
aas
ss
xchg
jmp
into
aam
push
outs
mov
mov
imul
cmp
and
das
push
sbb
nop
sub
lahf
call
xchg
outs
xchg
or
cmp
xor
std
jne
mov
in
test
add
dec
mov
in
xchg
das
mov
sub
inc
pop
(bad)
daa
mov
scas
(bad)
ret
xor
dec
repnz
cmp
call
and
push
aas
out
inc
inc
aam
fdivr
sbb
lea
and
aas
jne
jle
mov
popf
inc
jnp
or
pop
aaa
cwde
ds
mov
sahf
and
and
xchg
jge
adc
cmp
gs
out
loope
push
add
push
add
imul
mov
rol
js
push
aas
rol
sahf
push
in
add
push
push
cdq
jns
fs
fistp
pop
test
inc
dec
push
fistp
adc
inc
inc
out
repz
push
inc
push
fldlg2
icebp
rcr
rcr
sti
jecxz
pop
pop
inc
xchg
stos
bound
dec
ins
sbb
inc
call
jmp
(bad)
int
lock
xor
loopne
fsubr
ret
xchg
pop
pop
xchg
adc
ins
aas
mov
loope
cmp
jl
mov
(bad)
bound
jnp
(bad)
into
jmp
or
into
in
ss
loopne
cmp
add
in
rsqrtps
dec
retf
neg
sub
push
jae
and
push
iret
rcr
sub
cdq
retf
fcmovnu
adc
movs
and
mov
adc
sbb
loopne
push
mov
push
sub
call
sub
nop
cmps
sub
shr
pushf
les
mov
xchg
int3
lock
clc
out
aam
xlat
pop
jge
mov
or
outs
adc
in
and
mov
js
shl
mov
add
push
jno
popa
mov
loop
push
retf
and
cmc
enter
movs
dec
ror
inc
dec
xchg
add
adc
xchg
push
and
jo
pusha
adc
xchg
call
jno
lods
mov
test
fwait
mov
movs
xor
aam
pop
xor
call
mov
outs
sti
jl
js
cmp
fmul
push
int
scas
inc
push
cmp
cmps
fild
out
lea
and
jae
loopne
jl
lods
lahf
push
cdq
ins
imul
rcl
call
or
ins
clc
sbb
aam
xor
test
aad
or
xor
inc
fstp
(bad)
jg
stos
adc
sahf
mov
enter
sub
mov
cmp
test
mov
and
xor
pop
jo
dec
adc
mov
je
pop
push
adc
pusha
mov
call
(bad)
xor
pop
pminub
(bad)
cld
mov
add
lds
into
test
js
js
dec
(bad)
bound
mov
scas
in
sbb
pop
fistp
cmp
scas
sbb
inc
push
add
pop
adc
cmp
pop
mov
fisttp
lock
mov
xchg
test
jnp
repz
jg
and
sbb
je
je
mov
push
pop
pop
sub
mov
mov
aad
sub
jae
pop
or
loope
jle
(bad)
cmp
stos
pop
mov
fisub
call
jge
ds
jnp
jmp
pop
sub
cmc
mov
or
adc
xor
rcl
(bad)
add
pop
les
adc
loopne
das
xchg
or
sbb
push
pop
fmul
xchg
lds
cli
aaa
pop
pop
add
cmp
in
fld
jae
xchg
in
shr
not
dec
into
adc
and
inc
sbb
cwde
cmps
mov
fnstcw
xor
je
pushf
das
push
call
cmp
(bad)
fs
mov
pop
pop
sbb
jns
fadd
add
add
stos
pop
add
arpl
nop
push
add
jmp
xor
aad
out
das
test
rcr
sub
shl
inc
cli
mov
or
nop
adc
dec
js
dec
loopne
mov
test
fdiv
cmp
inc
popa
(bad)
out
in
int
jmp
sti
xlat
outs
es
dec
test
std
rol
mov
lea
sbb
fnstcw
leave
stos
popa
lock
jecxz
jp
js
lods
test
outs
(bad)
sti
mov
nop
ss
sub
jno
cmc
mov
push
fcomp
cmp
in
sub
das
sbb
dec
add
adc
push
out
inc
sbb
fimul
sbb
lods
mov
pop
sar
sbb
loope
lahf
xrelease
sti
push
pop
cmp
inc
add
dec
pop
push
mov
and
cli
jns
mov
int
xor
shl
std
mov
push
cli
push
push
jae
aam
cmps
xchg
push
ret
sbb
dec
ds
lea
xor
push
cmp
inc
lods
adc
(bad)
sub
int
sar
in
sbb
(bad)
lods
fs
jmp
(bad)
mov
lds
loopne
cmp
xchg
hlt
mov
or
int
xchg
and
pop
push
jg
dec
repz
ret
stos
sbb
repz
or
or
dec
mov
pop
jnp
mov
(bad)
push
add
mov
fild
mov
cmp
mov
dec
push
cwde
sub
jl
push
inc
sub
je
dec
or
push
shr
dec
std
(bad)
(bad)
es
xchg
shl
or
movs
pop
test
pop
call
in
les
cmps
fst
mov
gs
adc
sbb
mov
pop
fldenv
pop
jl
xchg
cwde
fdiv
dec
add
mov
je
jg
add
jb
jns
jmp
out
(bad)
cmc
pop
pop
mov
push
dec
je
hlt
mov
mov
dec
push
in
imul
pop
sbb
enter
push
fbld
in
(bad)
dec
sub
and
fwait
pop
jl
cwde
ret
dec
xchg
add
fistp
cwde
pop
push
cdq
adc
lods
outs
pop
jnp
mov
push
adc
imul
ret
sub
arpl
jne
stc
mov
retf
xor
inc
and
pop
xor
xor
leave
cli
stos
loope
lahf
out
retf
je
pop
inc
pushw
cmp
std
iret
std
push
stos
call
dec
fcmovnb
lahf
xor
inc
jge
lock
out
fdiv
jne
pop
adc
or
repnz
cmp
push
or
mov
sbb
inc
leave
stos
push
inc
inc
pop
add
pop
fnsave
push
sbb
sar
in
lods
dec
adc
repz
sbb
int
jg
imul
lods
pop
mov
push
mov
or
and
cwd
and
jp
jge
in
mov
adc
stos
xchg
or
lods
push
std
sbb
mov
sbb
test
dec
cwde
pop
cmp
push
into
mov
or
and
adc
dec
mov
nop
stos
push
pop
js
cmp
and
loop
xchg
inc
data16
pushf
repz
mov
out
pop
fdivr
out
movs
pop
xchg
ins
mov
out
cld
repz
mov
js
cld
cwde
push
xchg
sbb
jne
inc
stos
movs
xor
(bad)
xchg
and
mov
add
adc
bound
mov
lods
push
cmp
hlt
into
jle
pusha
mov
loop
xor
(bad)
cmc
jb
mov
(bad)
in
dec
adc
bound
mov
push
movs
sar
out
repnz
(bad)
or
mov
stos
cmp
in
jmp
xor
xor
cmp
ins
(bad)
cmp
outs
out
mov
sub
mov
mov
loope
lods
imul
and
popa
cmp
dec
pop
xchg
push
add
jo
xor
call
aad
and
ret
adc
rol
add
cmovge
mov
movs
push
mov
pop
aam
retf
dec
shl
inc
add
std
sub
test
adc
mov
inc
mov
mov
sti
in
dec
ja
mov
inc
mov
and
imul
out
fwait
test
call
and
sub
in
xor
mov
test
and
cwde
xchg
mov
jecxz
xchg
push
lds
mov
hlt
dec
sbb
mov
cmp
xchg
xor
loop
push
fwait
scas
rcl
rcr
mov
cmp
es
imul
push
test
les
dec
xchg
ss
mov
cmc
inc
cmp
fcmovnb
fld
(bad)
sti
mov
test
test
nop
scas
scas
pushf
ins
or
rcl
dec
shr
js
dec
mov
cmp
push
mov
bound
sub
dec
fidivr
or
clc
(bad)
jb
jp
aam
popf
sub
sbb
mov
pop
add
iret
cmp
(bad)
test
xor
sub
mov
and
bound
pop
mov
je
fadd
pop
dec
aas
dec
cs
daa
popa
lods
jg
pop
pusha
(bad)
imul
sar
cmps
arpl
pop
inc
cld
cmp
mov
sub
push
stos
adc
or
mov
aam
jo
inc
in
shl
or
lea
jecxz
outs
mov
fisttp
retf
jmp
out
mov
xchg
dec
ss
mov
pop
jecxz
call
push
test
daa
cmp
je
clc
ins
je
dec
test
xchg
test
push
push
loopne
cdq
sbb
mov
call
sub
mov
bnd
gs
push
fnstsw
fcomp
mov
bound
ret
inc
jo
mov
rcl
loopne
sbb
stc
call
push
test
mov
mov
and
rcl
sub
push
xor
add
sub
push
sbb
into
mov
aam
push
inc
sub
into
aam
jmp
imul
cmp
ret
dec
mov
sar
add
cmps
push
add
cld
push
add
(bad)
mov
lods
fcom
and
or
call
push
out
dec
xchg
and
push
daa
gs
cmps
xchg
or
test
mov
pop
mov
jl
xchg
fnstsw
jge
es
test
pop
push
nop
je
loop
push
mov
or
or
sub
sub
fwait
sub
enter
and
mov
loop
frstor
movs
bound
mov
fidivr
sub
or
(bad)
das
(bad)
push
inc
cdq
push
sti
daa
jecxz
xchg
cmp
popf
pop
sub
stos
adc
test
adc
jmp
or
fadd
xchg
nop
mov
xor
(bad)
out
lock
into
cmps
mov
iret
(bad)
mov
loopne
arpl
sub
mov
out
stos
into
repnz
push
pushf
ss
mov
fs
sti
mov
push
add
mov
mov
in
sar
and
daa
push
js
dec
lahf
mov
xor
stos
xor
out
mov
inc
pop
lock
pop
iret
push
test
(bad)
jno
xor
push
sub
cmp
sub
or
xchg
sbb
bswap
cld
in
jnp
call
mov
ror
pop
mov
idiv
and
pop
sub
mov
popf
or
(bad)
sar
inc
xor
fwait
pushf
or
pop
xchg
mov
sub
inc
sub
jmp
enter
or
sahf
sub
test
mov
sbb
sub
sub
inc
std
and
push
inc
adc
inc
mov
sub
inc
sub
int
fcomp
and
fsub
push
jp
leave
pop
xor
and
inc
mov
enter
mov
rol
test
loopne
movs
test
imul
clc
cs
sbb
mov
xor
mov
ret
mov
imul
and
cmp
jle
cdq
jb
fwait
pusha
sbb
jl
push
neg
and
add
pop
xchg
and
adc
sub
sbb
xchg
bound
sar
imul
lods
mov
dec
icebp
jns
or
(bad)
adc
sub
xchg
dec
push
xchg
mov
jnp
sub
out
(bad)
je
add
and
or
rol
and
jp
ret
movs
add
(bad)
stos
mov
or
mov
psubq
mov
sbb
(bad)
dec
xor
add
cmp
outs
pop
aad
pop
pop
imul
mov
xor
movs
out
pop
pop
inc
arpl
jl
inc
push
xor
in
adc
adc
mov
pop
sti
int
mov
mov
xchg
xchg
xor
das
add
(bad)
std
pop
xchg
movs
xchg
out
sub
add
inc
mov
pusha
(bad)
push
sbb
call
int
sbb
adc
adc
clc
shr
arpl
dec
sbb
cmp
pusha
or
cmp
dec
retf
inc
loope
push
dec
jl
dec
nop
xchg
fstp
inc
imul
or
daa
daa
cli
xchg
mov
inc
icebp
dec
sar
push
cmp
cld
mov
inc
adc
test
ret
xor
inc
and
and
fstp
pop
hlt
test
sbb
mov
mov
mov
and
push
test
jecxz
add
push
out
data16
xlat
add
jl
jo
(bad)
or
int3
sub
mov
mov
(bad)
cdq
fiadd
loop
std
xor
rol
ror
pop
mov
sbb
jo
mov
add
pop
lods
ss
call
loopne
lods
ds
inc
out
xlat
mov
loop
jo
or
jmp
test
inc
arpl
push
arpl
push
fmul
in
add
mov
mov
retf
cmps
call
sbb
push
mov
mov
in
rol
test
jo
stc
mov
and
cdq
add
adc
sub
sbb
dec
mov
loop
push
mov
mov
loop
cmp
push
es
out
mov
or
push
cmp
or
mov
retf
and
jmp
enter
mov
mov
pop
adc
sub
call
imul
lahf
jno
mov
retf
mov
stos
push
stc
add
add
pop
jbe
adc
xor
mov
sub
sub
ret
adc
sbb
mov
mov
dec
lods
out
and
xchg
dec
mov
std
lock
adc
pop
cmc
fdivr
cld
mov
fimul
sbb
lock
es
mov
stos
ss
mov
mov
repnz
jg
xor
mov
test
or
sti
mov
xchg
jmp
popa
test
dec
jno
inc
add
push
scas
push
xchg
std
jp
dec
das
mov
dec
lea
nop
push
jg
mov
xor
pushf
repz
mov
pusha
bound
mov
mov
push
inc
movs
xchg
jmp
xchg
retf
test
mov
cmp
jmp
cmp
push
retf
xlat
inc
in
push
and
sub
and
fisubr
pop
into
hlt
icebp
sub
xor
test
addr16
mov
ret
cmps
imul
add
push
jbe
std
mov
ror
sar
inc
push
pop
loope
loope
shl
scas
loopne
pop
mov
xor
xlat
or
dec
gs
icebp
repnz
bound
and
enter
add
and
call
push
dec
mov
adc
add
cmp
retf
xor
shl
loopne
adc
adc
and
mov
mov
add
add
je
retf
xchg
push
push
pop
jp
cmp
sbb
dec
sub
out
aaa
lock
inc
jno
push
sbb
inc
adc
(bad)
and
out
adc
jecxz
inc
push
jne
repz
jmp
ror
int3
imul
pop
inc
push
lods
loope
cdq
inc
cmps
ret
push
test
pop
cmc
lahf
gs
cmp
stos
inc
fidiv
push
mov
add
dec
xchg
add
cwde
push
ret
movs
(bad)
mul
mov
and
cdq
bound
cmp
inc
mov
test
and
ds
push
jb
xor
sub
js
xor
dec
or
test
sub
xchg
int3
lods
in
out
test
inc
pushf
jns
or
stos
or
pop
cmp
sbb
pop
xor
adc
cmps
mov
sbb
nop
repnz
pop
xor
leave
jns
pop
jmp
and
or
cld
in
test
mov
movs
pop
xchg
cmp
pop
mov
stc
cdq
jecxz
fcmovnb
sub
cmp
loope
xor
adc
ret
ds
push
nop
retf
stos
or
in
sbb
xchg
mov
pop
or
idiv
jnp
push
scas
push
sbb
out
js
add
leave
pop
cs
imul
sti
xor
les
out
push
ins
outs
test
sbb
loopne
inc
cwde
mov
mov
sub
sub
(bad)
adc
push
addr16
movs
(bad)
xor
fsubr
out
test
add
add
pop
add
imul
and
push
sub
mov
mov
hlt
lahf
sbb
adc
adc
frndint
retf
pop
mov
not
push
(bad)
jl
push
jge
jmp
jg
in
cmp
clc
test
push
pusha
push
jbe
sbb
hlt
rcr
cmp
retf
(bad)
fprem
lds
push
jmp
les
cdq
ins
(bad)
push
fst
in
mov
sub
add
cmp
and
je
ficomp
aaa
push
cmp
xchg
fmul
mov
out
(bad)
mov
jl
cmps
outs
jmp
dec
add
dec
call
push
or
jecxz
pop
dec
adc
pop
hlt
arpl
and
jle
jne
out
xchg
mov
ret
sub
mov
add
and
jp
adc
xchg
xlat
xchg
imul
in
mov
test
pop
jbe
add
jne
(bad)
(bad)
scas
movs
jo
loopne
pop
setg
push
ja
out
mov
cs
fidiv
int3
cmp
sahf
pop
mov
mov
mov
dec
cmc
cmp
mov
dec
add
add
not
adc
cli
mov
or
sub
mov
add
repnz
mov
stc
popa
adc
adc
jnp
cmp
push
push
fwait
repnz
lods
adc
push
loop
std
test
int3
or
jo
test
test
aam
mov
ffreep
sub
popf
stos
cwde
loope
in
mov
cmps
mov
mov
scas
cmps
sbb
cwde
cld
mov
in
retf
push
cld
ins
sbb
pextrw
inc
retf
dec
mov
call
popf
adc
iret
adc
sub
adc
or
ret
mov
cli
adc
(bad)
push
sahf
out
sub
adc
enter
arpl
(bad)
jmp
push
inc
and
outs
sbb
clc
cmc
scas
mov
push
pushf
punpckhbw
pop
mov
jbe
lds
loopne
js
test
popf
aas
xchg
or
jns
push
xor
fimul
aas
pop
cdq
adc
fmul
push
out
jnp
mov
call
add
xchg
dec
mov
in
inc
mov
inc
imul
inc
lods
xchg
icebp
mov
cdq
inc
push
inc
pop
xor
xchg
mov
les
cmp
jmp
shl
div
ja
mov
xchg
dec
aaa
inc
stos
mov
stos
das
mov
push
ss
cmps
xor
bound
arpl
add
mov
imul
xchg
ds
clc
cmps
and
jmp
sub
arpl
inc
ja
jo
mov
aaa
popa
daa
jne
outs
and
and
sbb
pop
ds
inc
sbb
sub
lea
es
les
mul
cwde
dec
xor
jecxz
mov
inc
pop
gs
xchg
loopne
fsubr
xchg
inc
call
push
and
push
call
retf
push
xor
mov
int3
outs
stos
dec
test
out
add
add
pushf
cli
mov
cmp
add
int
mov
jl
in
cmp
shl
inc
(bad)
mov
or
and
mov
sbb
icebp
es
inc
inc
int3
aaa
arpl
sahf
cmp
add
inc
out
loopne
ins
pop
sbb
push
out
ins
mov
pop
(bad)
push
enter
add
loopne
out
xor
cmps
js
rol
retf
icebp
cmp
jnp
int3
pop
gs
dec
jae
rcr
pop
dec
fsub
xor
mov
jne
adc
and
ins
(bad)
inc
mov
ins
scas
add
into
mov
test
mov
inc
scas
aas
cmp
mov
push
inc
ror
pop
xlat
icebp
hlt
loop
rol
mov
lahf
cmp
inc
cli
pop
add
push
sbb
push
or
push
fldcw
outs
inc
(bad)
cmps
mov
aam
nop
popa
adc
or
jbe
ja
xor
jmp
in
mov
dec
cmp
sbb
xchg
loope
and
loopne
dec
push
lock
movs
sub
mov
retf
mov
sahf
(bad)
repnz
rol
jne
xor
fwait
es
scas
xlat
or
(bad)
xor
dec
int3
fcom
inc
sbb
add
inc
jg
dec
push
adc
add
push
out
loopne
scas
and
fisubr
adc
mov
rcr
pop
add
out
inc
sub
push
pusha
mov
sub
sub
loop
adc
pop
leave
or
neg
pop
push
pop
jbe
push
and
psubsb
mov
sub
inc
nop
xor
fsubr
loopne
popf
out
push
(bad)
xor
(bad)
jl
(bad)
in
sbb
stos
gs
push
pop
mov
mov
call
lock
(bad)
lea
xor
aaa
test
cmp
stos
cdq
adc
cmp
push
xor
ds
retf
aam
out
push
xor
jg
pop
pop
push
mov
mov
xchg
mov
addr16
jmp
or
in
loop
pop
xor
in
out
mov
mov
in
dec
cli
mov
cmp
popf
fst
cdq
call
jbe
les
and
out
add
mov
pop
mov
jp
add
bound
ss
xchg
and
mov
mov
lds
mov
imul
ret
sub
add
cld
cwde
jnp
pop
xchg
test
cmp
imul
jg
out
es
loopne
dec
xor
jo
dec
mov
and
sub
lods
cli
mov
mov
(bad)
sub
loopne
(bad)
mov
xor
dec
mov
pop
loopne
dec
jp
rcl
cs
scas
arpl
test
ret
add
sbb
in
cwde
push
int
sbb
cld
inc
sbb
loopne
pop
sub
das
and
arpl
cmp
out
movs
xchg
mov
jb
popf
pop
cmps
rcr
fnstenv
test
ror
mov
push
hlt
push
std
repz
jmp
add
add
pop
add
cmp
mov
nop
test
loop
fidivr
jo
or
int
rcl
shr
int
stc
popa
mov
xchg
fs
mov
push
shl
cli
xchg
ins
add
in
jp
fdivr
leave
mov
xchg
(bad)
pop
shl
mov
inc
pop
push
rcl
pusha
out
inc
jl
test
xchg
jno
loopne
or
dec
aad
mov
(bad)
(bad)
jp
dec
adc
ret
mov
cdq
xor
int
adc
push
sbb
repnz
pop
jb
(bad)
stc
cmps
inc
sub
pop
xchg
pop
sbb
mov
mov
xor
scas
cmp
js
mov
cli
pop
adc
mov
aam
jl
pusha
push
dec
es
push
dec
pop
cmc
fimul
pop
mov
test
dec
mov
xchg
mov
fbld
jns
into
push
sahf
cmps
pop
sbb
pop
loope
das
aad
inc
gs
icebp
arpl
mov
xor
aas
xchg
mov
jp
sub
inc
int
pop
adc
inc
dec
or
adc
mov
sti
in
or
add
stos
lock
add
ret
out
or
sbb
call
gs
stos
add
sti
(bad)
lea
mov
pop
xor
add
jg
sub
inc
mov
das
and
sub
push
xchg
push
mov
mov
popf
jae
pop
neg
dec
pop
in
jge
sar
aaa
in
sub
adc
jae
xlat
jecxz
out
jns
call
cmps
jns
jle
ja
jp
f2xm1
or
pop
das
loope
mov
pop
adc
push
pop
jmp
cli
aaa
popf
push
in
arpl
call
pop
or
addr16
cwde
lea
repz
and
lods
xor
fwait
add
out
jns
xchg
in
jmp
sbb
jmp
push
adc
mov
mov
fld
push
pushf
cld
retf
jmp
lds
adc
retf
pusha
fsub
fs
and
or
jno
xchg
sbb
sbb
shl
jle
int
das
in
pop
aaa
sbb
movs
mov
mov
sbb
mov
add
sar
xlat
pop
imul
dec
stc
mov
jae
aam
jno
push
lods
xor
rcl
xchg
xchg
test
hlt
xchg
add
iret
repz
push
icebp
xchg
(bad)
nop
pop
cmp
or
(bad)
int3
ret
enter
sti
push
adc
jne
imul
add
stos
or
jnp
pop
push
dec
ss
ins
cmps
pusha
push
aad
push
inc
push
loopne
jne
adc
inc
int3
xor
out
add
loop
ret
out
inc
sbb
mov
xor
mov
(bad)
lods
enter
xchg
nop
xor
shl
out
addr16
pop
push
mov
push
cmp
push
cwde
adc
inc
mov
inc
dec
leave
fnstenv
push
in
ins
push
adc
push
dec
in
dec
dec
add
rcl
mov
imul
add
shr
call
(bad)
jmp
nop
xchg
imul
lea
or
sbb
sbb
ins
in
daa
inc
mov
(bad)
ja
outs
jle
xor
mov
out
or
xchg
jmp
sbb
lea
daa
dec
inc
sub
push
(bad)
mov
pop
sbb
icebp
aad
rol
push
jb
mov
add
fisttp
imul
mov
bound
xchg
push
xchg
dec
cwde
pop
jecxz
shr
cld
xchg
mov
inc
inc
and
cmc
adc
jns
sti
add
sbb
enter
loope
add
out
out
iret
inc
scas
jmp
mov
sbb
mov
mov
xor
aad
pop
lods
xor
js
outs
out
mov
out
repz
sub
inc
out
push
(bad)
jne
dec
int3
ja
adc
std
jb
cli
daa
das
and
dec
mov
lods
xchg
mov
loop
ror
xchg
pop
jns
mov
sbb
mov
into
scas
mov
loopne
and
push
jne
rcr
daa
push
adc
retf
test
hlt
(bad)
mov
add
xchg
movd
mov
(bad)
push
(bad)
loopne
pop
stos
xor
jg
add
jg
movs
xchg
ss
outs
jne
push
(bad)
jl
add
repz
ficom
in
add
inc
sub
imul
cmp
fucomip
aas
repnz
mov
pushf
cwde
add
xor
ja
into
rol
movs
fnsave
mov
xchg
and
mov
cdq
mov
xor
aam
mov
or
out
(bad)
push
aaa
cs
jmp
call
cmp
fs
fnsave
fmul
inc
sbb
and
dec
ss
mov
jae
jp
xor
or
ret
and
xchg
fcom
sub
adc
sbb
pushf
sub
cwde
mov
js
popf
test
xor
movs
inc
push
inc
push
test
mov
cld
stos
cli
lahf
mov
jnp
shl
dec
add
and
out
pop
pop
xchg
scas
cmp
or
mov
adc
add
push
call
lds
or
fist
push
in
pop
add
or
aam
jmp
add
outs
jle
dec
and
scas
mov
push
aas
lea
ins
adc
jns
fcom
push
(bad)
mov
cld
rcl
icebp
div
adc
ins
jge
loopne
pop
mov
(bad)
mov
xor
aad
cmp
repz
cmc
and
cmc
mov
leave
xor
pop
mov
inc
mov
sbb
hlt
add
outs
pop
mov
lods
outs
dec
push
adc
inc
cmp
dec
inc
into
clc
pop
(bad)
js
adc
mov
adc
mov
aam
(bad)
rcr
adc
add
ja
cld
sub
cmps
inc
popf
sub
pop
mov
es
ror
loope
mov
xor
add
pop
loope
xchg
cmps
div
cmp
lea
inc
imul
in
push
jp
mov
push
push
xchg
movs
or
add
cmp
dec
mov
pop
cmp
rcl
mov
cdq
sub
cmp
dec
lahf
add
add
push
add
movs
push
add
inc
les
imul
add
test
cmps
xor
pop
cmp
adc
icebp
jl
xor
mov
add
das
or
mov
xchg
arpl
hlt
mov
and
xchg
sub
in
call
popa
mov
mov
lahf
bound
adc
pop
(bad)
outs
sti
xor
and
fadd
movs
pop
in
cmp
movups
inc
dec
ss
push
add
xlat
loope
aas
(bad)
sahf
push
(bad)
jmp
and
push
sub
ins
or
mov
mov
xchg
jge
fwait
dec
out
jg
cmps
cmps
or
pushf
cmp
repz
scas
push
push
jle
sub
jnp
pop
pusha
je
cmp
cmp
jnp
imul
sub
inc
mov
pop
daa
imul
or
cmp
or
mov
(bad)
paddsw
add
sbb
xchg
sub
pushf
mov
mov
fcomp
mul
mov
sti
retf
(bad)
cs
mov
push
es
or
sbb
jmp
cmp
xchg
jbe
in
aas
stos
lahf
pop
jg
cmp
pop
lea
pop
mov
adc
out
cmp
loop
mov
dec
(bad)
jo
shl
xchg
dec
inc
sbb
cvtps2pd
xchg
jo
ds
push
js
retf
(bad)
or
jecxz
jp
sbb
out
cli
adc
fistp
push
outs
dec
inc
pop
xor
inc
sub
add
cmp
je
mov
or
cmps
mov
xor
movs
sub
ja
outs
popa
add
ret
jnp
loopne
sbb
push
push
retf
loop
sbb
data16
es
adc
out
sbb
dec
cmc
(bad)
xchg
or
sub
jecxz
inc
inc
pop
mov
hlt
jns
(bad)
stos
arpl
pop
mov
mov
push
pop
cmp
aam
push
stos
mov
xor
and
ins
(bad)
lods
call
inc
stos
xor
xchg
pop
imul
jp
cmp
pop
test
inc
mov
dec
cmps
mov
jbe
cmp
fs
push
cld
sub
mov
mov
fdivr
(bad)
jecxz
mov
dec
test
or
cli
int
mov
adc
cmp
add
in
push
es
xchg
xor
or
push
xor
hlt
out
dec
rcl
mov
sti
push
and
test
les
xchg
mov
lods
inc
aas
retf
lahf
push
jno
sar
mov
sub
popa
or
sbb
mov
jge
or
mov
cli
xchg
cdq
cmp
mul
jmp
mov
mov
mov
lock
leave
jl
push
mov
add
gs
ins
cmp
mov
adc
and
and
in
jmp
popf
aas
jle
add
adc
not
ret
scas
and
push
jae
mov
add
loop
inc
es
dec
inc
or
xor
fs
rol
pop
mov
cwde
jmp
pop
loopne
fmul
mov
lea
cwde
push
push
sub
mov
ficom
movs
shr
sbb
int
pop
jecxz
mov
fcomp
(bad)
jno
push
arpl
jmp
test
cmp
jno
pop
nop
mov
out
xchg
push
aas
mov
cmc
xor
pop
add
sub
lahf
push
fbstp
dec
or
pop
sbb
sub
jne
pop
jae
repnz
cdq
jge
fnstsw
dec
and
inc
(bad)
into
and
and
popa
test
(bad)
out
pop
push
stc
jecxz
cmc
adc
xchg
ret
sbb
fcomp
mov
add
icebp
cmovnp
cmps
add
lahf
xor
and
adc
xor
sar
xor
hlt
and
in
int3
stos
cmp
mov
mov
inc
call
dec
add
sbb
cld
push
mov
out
and
and
in
lock
lock
push
pop
mov
adc
fmul
ja
xchg
adc
add
ret
push
mov
and
test
mov
std
sub
js
cmc
int
mov
idiv
ret
fimul
mov
adc
fild
pop
setle
mov
sahf
pop
push
jo
lahf
fisttp
gs
or
fnstenv
jae
and
sbb
mov
es
and
xchg
xor
mov
mov
mov
retf
in
bound
loope
jnp
pop
inc
(bad)
retf
test
mov
outs
stos
and
xchg
mov
ds
jge
movs
rsm
iret
outs
xlat
fcom
in
push
mov
pop
xlat
pusha
sbb
mov
jmp
test
adc
jbe
jp
ss
fidivr
out
gs
fs
push
mov
push
dec
mov
out
fwait
int3
adc
pusha
fild
or
push
and
je
pushf
jb
aas
sbb
sbb
xor
les
popa
lods
movs
scas
adc
loop
dec
add
jns
cmp
xor
xchg
sbb
je
stc
xchg
push
pushf
adc
fsubr
push
fnstcw
cwde
sahf
sbb
sbb
in
sbb
xchg
add
ficomp
mov
add
add
add
add
add
add
hlt
ds
pop
scas
and
pop
js
or
pop
rcr
fdiv
sbb
dec
fwait
test
out
push
mov
fucomi
inc
push
lahf
sub
sbb
enter
stos
jmp
jecxz
dec
pop
push
add
jbe
push
(bad)
outs
push
test
(bad)
pusha
and
loopne
imul
xchg
fwait
int3
sti
jmp
or
mov
cmp
call
scas
std
pop
jno
xchg
adc
sbb
aas
sbb
dec
(bad)
xlat
xor
mov
jl
push
int3
cmp
mov
and
inc
xor
or
jno
xchg
and
mov
xor
xor
mov
stos
jbe
stos
icebp
ja
mov
(bad)
xchg
in
xchg
xchg
jmp
push
stos
(bad)
(bad)
adc
cmp
sti
(bad)
mov
aas
xchg
xchg
stos
cmps
mov
cwde
dec
mov
mov
adc
mov
pop
dec
inc
call
jne
sbb
inc
xor
sub
sar
stos
(bad)
ret
or
lock
out
sub
leave
pop
adc
clc
arpl
jo
jg
ret
push
movs
push
and
or
xchg
dec
fistp
pop
or
daa
inc
pop
xor
inc
inc
fsub
outs
pop
ds
scas
fwait
pop
rol
adc
stos
xor
xor
into
stc
fstp
xchg
(bad)
jo
in
mov
jb
or
jne
and
jecxz
sar
aaa
sbb
out
add
mov
int
inc
lea
cld
and
xor
inc
pcmpgtb
pop
pop
hlt
mov
test
pop
xchg
pop
imul
dec
sbb
outs
stc
(bad)
mov
sub
inc
pop
inc
push
mov
or
cli
mov
inc
lahf
rcl
es
inc
xor
jnp
sbb
sub
fidivr
es
mov
(bad)
into
sar
mov
add
add
add
add
add
fdivr
lods
cmp
mov
test
mov
dec
adc
cmp
test
mov
(bad)
fld
shl
push
adc
cmp
cmps
bound
xchg
or
pop
and
cmp
hlt
rol
outs
(bad)
cmc
loope
dec
lods
int3
jge
in
add
mov
lock
xor
enter
xchg
scas
add
lods
sbb
stos
movs
lock
mov
push
fcomp
cmp
jg
movs
test
mov
scas
fwait
pop
outs
and
loop
jae
push
push
dec
push
and
mov
out
mov
lea
cmc
outs
push
pop
cmp
mov
mov
mov
jge
aas
mov
retf
int3
pop
adc
ja
mov
cli
lods
scas
popa
inc
ret
mov
test
mov
imul
mov
daa
add
shl
xor
int3
pop
jge
sub
movs
fimul
es
dec
pop
fwait
outs
or
cmp
loope
aas
jns
dec
or
mov
jnp
cmp
stos
xchg
outs
or
inc
or
add
and
cdq
stos
inc
into
adc
pop
out
(bad)
cmps
xchg
movs
push
jge
inc
mov
cmp
mov
sbb
or
in
mov
dec
adc
or
es
pop
mov
aam
cli
dec
movs
sbb
idiv
xchg
add
call
pop
and
enter
mov
scas
xor
sbb
jecxz
nop
mov
in
lock
push
push
sbb
rep
xchg
mov
inc
addr16
or
xor
inc
sub
in
cmp
mov
xchg
push
jo
ret
cli
xor
addr16
cmp
sub
(bad)
mov
cs
out
sbb
inc
enter
dec
adc
mov
or
and
cld
shl
cmp
pop
push
mov
dec
jge
cmp
scas
aaa
mov
inc
mov
mov
(bad)
jmp
hlt
fbstp
lock
fisttp
dec
xchg
push
and
jnp
cdq
mov
mov
fdiv
or
sbb
xchg
mov
int3
lds
out
cmp
sub
push
dec
sub
call
add
or
fdivrp
xor
data16
dec
cmc
jae
out
(bad)
mov
dec
fldenv
outs
jg
call
jl
pop
mov
sbb
jmp
inc
xor
sub
jmp
push
jo
call
shr
mov
pop
(bad)
and
xchg
lahf
movs
outs
cmc
retf
fs
jl
sbb
adc
mov
mov
pop
adc
les
mov
sub
push
mov
jl
xor
add
push
jge
movs
sbb
sbb
mov
loope
adc
aas
jmp
(bad)
lea
add
dec
outs
adc
mov
jmp
setge
and
mov
frstor
test
add
xor
test
xchg
dec
jbe
xor
imul
loopne
fcomp
fwait
pop
in
or
sar
mov
pushf
or
loop
cmp
and
fbstp
push
stos
inc
xchg
fiadd
shl
jge
repz
jecxz
push
imul
and
ins
cmp
add
add
add
xor
add
pop
add
add
mov
xchg
ror
in
stos
jne
lea
mov
cwde
js
jae
loope
and
push
out
cmp
xchg
shr
jbe
mov
ins
aam
push
mov
xchg
push
jo
jb
jg
stos
mov
push
mov
pop
jmp
mov
lock
push
in
data16
cmc
enter
jp
imul
mov
mov
inc
sbb
and
stos
and
fcmovbe
das
sbb
idiv
mov
pop
scas
xor
es
imul
cmc
cmp
push
loop
dec
popa
shl
mov
repnz
outs
and
push
into
jp
jecxz
jb
cli
adc
push
sub
xlat
cmp
mov
pusha
adc
leave
cmps
jmp
mov
push
mov
cmp
stc
(bad)
inc
and
add
sti
mov
cld
mov
dec
dec
fsub
movs
sub
add
mov
lea
cmc
lods
jecxz
stos
out
out
pop
sub
outs
mov
(bad)
push
sti
rcr
jbe
jmp
repnz
mov
adc
xchg
mov
aas
jl
rcl
int
scas
mov
(bad)
fstp
sbb
btc
jle
aam
or
test
xor
jns
cdq
clc
mov
cs
test
adc
sbb
sti
fadd
mov
cmp
mov
pop
fmul
push
xchg
in
out
cmps
sub
nop
push
lock
xchg
mov
test
mov
mov
dec
dec
in
jge
imul
jle
pop
cwde
das
push
shl
clc
xor
loopne
push
aaa
loopne
jl
imul
dec
push
int3
pop
ins
out
pop
std
retf
push
ds
jae
jmp
outs
fs
dec
pop
mov
xor
push
pushf
or
dec
mov
out
xlat
sbb
hlt
aaa
add
ins
movs
cmp
mov
mov
stos
loope
rcl
sti
test
add
add
add
add
inc
adc
mov
jp
pop
fild
adc
cmp
and
ud1
out
inc
adc
das
mov
or
bound
xor
pop
or
cli
xor
fcom
and
dec
imul
je
or
aas
add
add
scas
xor
dec
cmps
and
or
sub
lds
jmp
sub
jo
in
xor
push
enter
addr16
xchg
cmps
mov
lods
mov
cli
xchg
mov
test
cmp
sub
ds
ja
fs
cs
imul
cmps
out
bound
ret
pop
mov
ror
or
sbb
jg
fstp
or
call
jnp
push
scas
shl
repnz
jp
sub
xor
jne
dec
add
sub
sbb
gs
lods
push
fnstsw
pop
(bad)
out
fwait
mov
mov
xchg
(bad)
outs
push
push
imul
pusha
test
cmc
mov
sub
stos
test
icebp
inc
adc
nop
push
jne
(bad)
sub
dec
mov
gs
dec
inc
mov
movs
jnp
sub
and
aad
sub
ficomp
mov
enter
fdiv
shl
aaa
aas
and
xchg
xor
jns
sub
pop
mov
gs
and
pop
jbe
aad
pop
or
sub
das
mov
pusha
xchg
mov
push
jp
or
clc
mov
ret
sbb
jp
movs
aad
push
jbe
fsubr
mov
add
scas
mov
add
inc
or
int
xor
(bad)
push
mov
cmc
jb
adc
lds
jmp
xor
stos
dec
cmc
xchg
ror
les
sub
pop
and
les
movs
pushf
lods
jle
and
inc
(bad)
mov
add
int
pop
adc
mov
adc
popf
and
(bad)
and
sub
addr16
fist
pop
cmp
dec
pop
into
lahf
or
pop
and
pop
leave
ficomp
in
(bad)
jno
jle
ds
popf
and
cmp
mov
cmp
or
and
outs
dec
imul
mul
inc
xchg
repnz
mov
call
lahf
or
fadd
call
push
(bad)
pop
xchg
or
test
int3
test
pop
pop
fisttp
dec
sub
ret
add
cmp
add
imul
fs
shl
cmps
repnz
pop
sahf
jo
mov
ja
and
pushf
push
pop
in
cmps
jmp
stc
(bad)
rcl
push
cld
and
adc
out
jns
mov
xchg
xor
jg
and
imul
sub
inc
cmp
call
into
arpl
nop
jecxz
daa
stos
inc
movs
push
pop
pop
inc
push
(bad)
out
aam
mov
sub
cmc
dec
popf
xor
adc
(bad)
xchg
pushf
and
xchg
ficomp
push
int
mov
dec
dec
sub
pop
in
lods
push
pop
add
pop
pop
add
loopne
cmp
loop
xchg
sub
mov
hlt
jg
es
imul
cli
xchg
add
imul
pop
push
pop
ja
les
stos
neg
pop
das
lds
repnz
cmp
mov
and
pop
imul
mov
stc
xchg
ins
bound
mov
mov
rcl
nop
movs
xlat
fimul
mov
int
and
and
sbb
outs
sbb
mov
(bad)
cmc
cmp
or
push
sub
sbb
mov
inc
pop
js
adc
call
xor
ss
fistp
loope
fcom
fstp
in
xor
es
cmp
into
cmc
inc
jo
call
xchg
leave
ror
loopne
fisub
retf
sbb
and
adc
nop
fdiv
xor
adc
xor
repz
fidiv
stos
lock
add
cli
jg
ret
inc
lahf
aam
rcr
pop
mov
fisubr
mov
mov
lock
dec
adc
jae
jae
int3
push
xchg
pop
cmp
(bad)
xchg
or
mov
jle
imul
or
stos
pop
push
jo
adc
sub
(bad)
cdq
xor
jbe
in
popa
push
sti
cmp
fiadd
pop
outs
mov
jnp
and
adc
retf
fs
movs
cmps
(bad)
shl
dec
mov
cmp
pop
mov
jb
fcomp
sub
or
(bad)
jbe
mov
sub
mov
xor
ins
pop
in
ror
mov
test
add
clc
inc
mov
mov
adc
ret
imul
sbb
test
dec
daa
ja
(bad)
and
push
call
push
pop
lahf
push
lods
mov
test
fcmovnbe
push
add
hlt
dec
call
inc
scas
jae
cmp
pop
sar
xchg
nop
and
mov
fs
and
imul
push
arpl
aaa
dec
jmp
dec
mov
out
adc
cmps
mov
dec
in
adc
push
inc
fdiv
or
lods
xlat
gs
dec
js
sub
fisubr
jns
sbb
leave
je
xchg
push
jecxz
jg
ja
(bad)
scas
jb
xchg
retf
add
cld
mov
adc
(bad)
stos
shr
mov
aas
jns
mov
cmp
repnz
(bad)
ins
mov
loope
jle
xchg
cmp
ret
or
jmp
xor
fmul
sbb
fidivr
lock
jle
xlat
jnp
stc
js
movs
xor
rcr
xchg
push
(bad)
shl
xor
loope
aad
test
push
jmp
pop
or
jle
movs
in
test
mov
sbb
lods
dec
push
dec
sbb
shl
xor
ror
mov
cld
stc
sbb
jmp
lods
cmp
aam
xchg
jnp
cmp
add
or
pop
sbb
xchg
inc
inc
jb
xchg
push
jecxz
loopne
add
lods
aad
xchg
hlt
fs
cmc
jmp
inc
xor
dec
jbe
add
sbb
jo
sbb
das
loopne
pushw
adc
adc
sbb
mov
and
xchg
jl
cmp
fnstenv
nop
enter
out
and
sbb
data16
mov
loope
dec
(bad)
mov
ret
lods
cmp
jmp
xor
jbe
inc
mov
xor
xchg
ss
ds
rcr
rol
out
lock
xor
lahf
pushf
or
mov
mov
lods
jne
and
pop
iret
add
jo
and
nop
imul
mov
int
push
sub
in
inc
adc
ret
fucomp
ret
sbb
push
movs
jbe
jb
adc
jo
mov
in
inc
out
push
and
retf
jecxz
dec
mov
test
pop
fsub
setae
aas
cmp
xlat
in
std
ds
addr16
jnp
ret
sub
sbb
inc
pushf
sar
sub
cdq
repz
arpl
fsubrp
call
dec
ins
sbb
ror
xchg
mov
sub
inc
out
add
pop
cld
dec
cwde
xor
js
jns
outs
lods
ss
dec
inc
dec
aas
push
or
lock
push
sbb
dec
out
xchg
inc
jnp
lods
sub
mov
js
xor
retf
int
iret
pop
xor
sub
cmp
lea
add
aam
js
outs
push
int3
arpl
test
test
fsubp
icebp
inc
out
pop
xchg
imul
push
jo
mov
inc
mov
movs
mov
stos
adc
les
std
sub
pop
push
mov
cdq
mov
cmp
mov
cmps
movs
retf
jbe
mov
shr
aam
(bad)
ds
lods
pusha
xor
cmps
test
nop
mov
sahf
in
repz
push
loop
pop
addr16
pop
push
int3
sub
mov
push
fild
jmp
pop
fisub
mov
jne
repnz
dec
dec
fs
scas
std
leave
and
inc
and
mov
in
adc
xchg
or
test
loopne
fisttp
repz
mov
ins
add
mov
sub
mov
fsubr
(bad)
int
loop
popa
or
dec
cmp
es
push
(bad)
jno
ror
inc
movs
jp
imul
test
dec
and
cld
aaa
(bad)
sti
pop
lahf
mov
sti
sub
stos
push
adc
xor
ins
xchg
pusha
mov
jo
pop
sub
idiv
mov
pusha
inc
jns
rol
mov
jnp
adc
hlt
mov
mov
xchg
sub
and
xlat
xor
lods
sub
dec
mov
and
cmp
pop
cli
jmp
mov
inc
ins
sbb
and
pop
jno
daa
popf
(bad)
cdq
shr
push
and
rcl
sbb
out
mov
push
inc
cmp
xchg
sbb
cwde
jns
stos
retf
out
adc
mov
(bad)
push
lock
imul
in
xchg
add
pop
add
loope
in
add
dec
pop
(bad)
pop
leave
cdq
cs
jns
adc
ins
cli
popf
fs
inc
mov
dec
ss
pop
add
fsubr
inc
jp
test
and
inc
jmp
mov
das
dec
(bad)
push
shr
xchg
xchg
push
call
in
sub
xor
xchg
mov
loopne
jns
out
pushfw
imul
inc
add
add
add
icebp
adc
add
pop
into
je
mov
sub
xor
xchg
add
mov
int3
je
pop
lds
mov
add
fisub
xor
inc
popaw
mul
pop
stc
sub
inc
pusha
aas
mov
or
dec
(bad)
xchg
sub
cmp
jecxz
dec
test
pop
cmp
add
push
int3
push
mov
jae
push
pop
mov
xchg
jb
inc
inc
aam
xchg
sbb
push
xchg
inc
xor
jb
sub
jbe
lahf
enter
mov
ret
mov
test
jmp
add
leave
xor
clc
aas
adc
mov
jl
(bad)
movs
push
push
aaa
aaa
or
mov
xchg
dec
aam
cmp
stc
nop
loopne
mov
mov
sbb
movs
add
in
ins
les
popf
sub
gs
(bad)
pop
cwde
mov
jge
pushf
hlt
add
pop
xor
fisubr
inc
cwde
retf
jae
xlat
or
addr16
xor
cmp
jns
stos
imul
jmp
push
popa
fldenv
fst
call
or
out
push
push
aad
cli
lods
jle
(bad)
pusha
jno
jno
adc
and
ret
jo
and
mov
xor
push
adc
int3
(bad)
ja
div
aad
fwait
dec
sar
cmps
dec
in
fwait
inc
pop
xor
dec
cs
push
outs
js
lds
(bad)
pop
dec
imul
sub
dec
push
int
fdiv
mov
sub
jae
mov
(bad)
ss
mov
test
in
call
jecxz
dec
fstp
enter
inc
mov
or
cmps
xor
xchg
jl
inc
jae
ret
(bad)
enter
movs
cmc
into
fwait
ret
sahf
jb
push
mov
shl
(bad)
sub
rol
jns
repz
jecxz
jecxz
push
mov
mov
lods
add
clc
inc
std
jnp
leave
sub
repnz
mov
mov
into
adc
loope
clc
ins
out
cmp
aam
popa
idiv
xchg
adc
add
or
out
add
add
add
add
jmp
push
outs
jne
adc
stc
or
ins
add
sub
repz
inc
mov
(bad)
leave
or
je
lock
and
std
inc
mov
cmc
fdivr
cmps
jp
not
inc
fld
xor
mov
push
mov
es
mov
push
(bad)
mov
jecxz
push
or
jmp
jg
sub
nop
pushf
xchg
dec
jmp
mov
push
or
aad
lods
cmp
xchg
mov
mov
push
adc
clc
lea
xchg
or
int
aad
stos
sbb
cmps
scas
and
add
add
add
add
adc
and
and
mov
imul
mov
mov
push
scas
mov
xor
inc
and
popf
loope
push
jno
push
jbe
scas
jnp
push
lahf
cmp
pop
ins
or
mov
sti
fldcw
stos
mov
mov
ror
rol
in
adc
and
xchg
mov
mov
retf
sub
xchg
in
es
mov
push
movs
test
enter
fwait
jae
shl
or
cmps
xchg
inc
lods
mov
mov
das
movs
xor
and
jmp
and
cmp
loopne
add
leave
repz
jns
and
js
(bad)
out
or
call
ja
pop
add
mov
xchg
cdq
and
ins
mov
ins
add
fwait
sbb
fisttp
rcr
mov
mov
mov
xlat
test
mov
xchg
mov
std
mov
scas
stos
cmp
xchg
(bad)
jno
inc
enter
shr
mov
ss
cs
adc
iret
adc
xlat
add
inc
pushf
sub
inc
in
ret
mov
pop
ror
push
and
sbb
shr
pop
cmp
lahf
cmps
mov
paddsw
dec
stc
addr16
inc
adc
or
fnstsw
test
pop
int
inc
loop
cli
adc
mov
(bad)
cmp
dec
arpl
loope
mov
inc
dec
inc
cmps
push
jmp
dec
mov
mov
ins
out
shl
cwde
mov
adc
aam
or
or
xchg
int
aas
inc
loopne
fistp
push
jecxz
mov
xchg
stc
out
push
pop
inc
out
pushf
push
adc
aam
push
inc
(bad)
jnp
imul
cmp
dec
and
cs
pop
ucomiss
xsaves
jnp
cmps
or
dec
and
test
jns
mov
dec
test
int
jl
das
jae
xchg
cld
lea
cdq
fs
cmp
sub
shr
test
xchg
xlat
dec
bound
aas
pushf
jb
push
call
pop
xchg
jmp
scas
mov
sub
bswap
jne
loopne
lea
pop
sbb
mov
cmp
mov
stc
arpl
push
scas
sub
sahf
fistp
cmp
inc
pop
mov
test
xor
add
jne
js
xor
ins
test
add
mov
mov
test
fsubr
enter
jns
add
andnps
add
fistp
dec
xchg
jecxz
(bad)
fisttp
ret
out
jecxz
pop
aad
cmp
das
push
popa
pop
xchg
in
jl
aad
in
(bad)
int3
mov
hlt
xchg
lea
test
cmp
push
ror
inc
loop
mov
jle
arpl
xchg
lods
xor
dec
icebp
jb
mov
inc
and
jg
adc
ret
fiadd
rol
aaa
xlat
outs
repnz
mov
jns
out
adc
js
clc
sahf
mov
movs
pushf
(bad)
mov
es
es
cs
pop
daa
add
js
ins
stos
push
aam
aad
mul
and
cmp
cwde
ret
inc
add
push
jbe
xchg
sti
mov
add
addr16
iret
call
jnp
ffreep
daa
mov
sti
movs
dec
ins
loope
ror
ror
jl
sub
mov
mov
xchg
xor
ret
shl
or
std
dec
neg
in
inc
xchg
dec
mov
pop
aaa
cmps
mov
nop
jp
(bad)
xchg
push
jge
mov
ins
pushf
or
int3
out
aad
jae
cmp
lock
jmp
(bad)
fsubr
jg
idiv
adc
mov
push
adc
test
ss
mov
xchg
or
inc
or
int3
and
xabort
xlat
call
loop
sbb
mov
pop
xchg
adc
and
movs
mov
mov
mov
push
cmp
scas
cmp
in
out
loop
dec
add
pop
push
adc
jae
imul
cdq
repz
jg
scas
adc
sub
mov
push
sub
jg
dec
sahf
xchg
stos
sub
jnp
mov
neg
jnp
mov
movs
icebp
jno
sub
or
(bad)
add
add
jmp
pop
ret
mov
stc
jnp
in
jmp
cmp
push
xchg
pop
mov
inc
add
xchg
fdiv
push
nop
fld
(bad)
sti
xchg
add
adc
in
fs
pop
stos
adc
(bad)
(bad)
fxch
pop
cmp
push
mov
je
cli
jmp
push
imul
add
aaa
dec
jmp
pushf
stos
and
ret
sub
or
and
stos
dec
sbb
lods
ficomp
psubsb
pop
addr16
inc
push
mov
dec
std
js
dec
push
retf
setg
cmp
out
sub
pop
retf
das
xchg
xchg
cmc
pop
xchg
jnp
push
(bad)
mov
xchg
in
aam
add
sub
add
mov
imul
shl
xor
xor
daa
add
or
fs
xlat
xchg
add
cmc
cmps
xchg
push
je
test
jo
ja
inc
jg
mov
sbb
scas
cld
retf
mov
es
sahf
sti
xchg
xlat
jl
xchg
adc
mov
mov
pop
(bad)
jmp
stos
into
out
pop
push
test
pop
jmp
and
mov
cli
or
inc
pushf
fisttp
pushf
or
xchg
fdivr
push
sub
test
mov
inc
js
or
add
das
push
cli
mov
mov
iret
inc
pop
repnz
int
xchg
scas
inc
fistp
fbld
xchg
and
shl
or
je
clc
loopne
lock
add
test
nop
pop
sub
pop
jp
pop
mov
cmc
clc
jno
lods
jmp
mov
xchg
test
xor
out
adc
jo
jmp
retf
xchg
push
dec
loop
adc
retf
test
hlt
lock
cmp
sbb
and
and
sbb
retf
push
jno
(bad)
adc
gs
fsubr
mov
jno
cmp
es
mov
xchg
sub
jb
push
add
jne
nop
loope
fist
add
pop
dec
fadd
call
mov
or
push
sbb
fwait
dec
add
mov
inc
rcl
jle
mov
jns
push
repz
popf
scas
sub
out
mov
inc
jmp
dec
js
fdivr
mov
imul
mov
imul
ins
cli
movs
push
ret
sbb
add
and
and
pop
pop
adc
nop
adc
stos
mov
mov
inc
mov
aaa
push
push
cmp
(bad)
shr
or
sub
fistp
in
or
jmp
xchg
into
jecxz
pop
mov
fcom
lock
xor
adc
lock
icebp
cli
mov
dec
mov
ja
push
jmp
idiv
inc
mov
add
sbb
stos
xchg
loop
out
cmps
fucom
out
rol
xchg
and
dec
scas
stc
xchg
pop
jb
add
arpl
xchg
aad
jecxz
and
mov
rol
not
mov
and
mov
and
ret
adc
cmps
xor
inc
sbb
pop
jmp
add
sub
scas
sbb
test
inc
mov
fs
cmp
cmp
mov
pusha
and
mov
jns
shl
or
test
mov
pop
jae
stos
scas
rcl
xor
daa
cmp
inc
adc
repnz
into
movs
cmp
pusha
cmp
add
dec
mov
cmp
aas
xor
or
pop
pop
(bad)
mov
mov
out
movs
lods
fsub
jb
je
test
or
mov
movs
(bad)
(bad)
push
call
jg
jns
mov
repz
or
xor
nop
ret
ror
out
jno
arpl
outs
dec
loopne
xor
jl
pop
int
(bad)
mov
sub
inc
(bad)
sahf
inc
idiv
hlt
in
repz
add
inc
jo
pop
in
movs
cld
lds
lods
add
js
mov
or
add
xchg
add
add
add
pop
mov
xchg
mov
icebp
sar
xor
sahf
js
pusha
cwde
inc
mov
std
(bad)
cmp
sbb
and
loop
aas
aaa
jne
mov
or
es
gs
arpl
add
inc
int3
hlt
js
sahf
cwde
and
pop
mov
fimul
mov
and
iret
(bad)
test
sti
jnp
dec
call
xchg
pushf
xbegin
sub
or
adc
or
cmp
push
add
sahf
(bad)
fidivr
push
jmp
shr
ins
aas
icebp
cdq
jl
mov
(bad)
and
popf
and
jb
(bad)
int3
xchg
adc
push
in
ret
ficomp
call
retf
scas
enter
jno
arpl
sahf
clc
inc
push
mov
retw
daa
sbb
dec
dec
nop
add
arpl
inc
sbb
and
pop
and
dec
stc
cdq
out
cmp
loope
pop
sub
pop
mov
dec
jb
fs
jno
xor
or
daa
lods
and
in
mov
sar
sar
(bad)
(bad)
push
cmp
xlat
sub
sub
in
fild
je
sub
mov
cs
enter
out
jne
sub
scas
or
jbe
icebp
xor
push
pop
xchg
mov
add
push
test
mov
push
enter
jbe
es
fisubr
leave
fmul
mov
test
repnz
mov
push
cdq
cmp
cmc
daa
out
(bad)
ds
inc
mov
inc
pop
or
xchg
loopne
add
pop
mov
scas
stos
sbb
xlat
fisttp
cmp
adc
data16
jne
repz
xchg
jb
pop
add
ds
fnstenv
push
(bad)
repz
add
push
dec
popf
dec
mov
cmp
rol
or
adc
pop
shr
out
(bad)
cmp
ins
xadd
push
mov
dec
or
mov
arpl
xlat
pop
rol
in
xcrypt-ofb
cmps
outs
shl
mov
cmps
pop
clc
stos
mov
(bad)
push
sub
push
cmp
mov
cmp
jne
xchg
mov
mov
jo
fisttp
jmp
pop
nop
mov
push
adc
mov
fwait
push
inc
jo
adc
inc
mov
sub
push
aam
mov
clc
sub
sti
mov
cmps
loopne
int3
pop
adc
retf
repnz
cmp
outs
fild
(bad)
jg
std
cld
adc
pop
cmps
jmp
call
test
cmp
push
mov
clc
mov
sbb
mov
gs
xchg
div
mov
mov
mov
xlat
pop
jmp
xchg
xchg
lahf
lds
mov
ficomp
add
mov
mov
clc
or
fs
fidiv
mov
sahf
ror
push
sbb
mov
scas
lods
pop
loope
push
xor
retf
sbb
push
int
repnz
or
out
test
add
sbb
push
cdq
cmps
jecxz
jno
ins
cld
pop
sbb
sub
fstp
mov
std
fisubr
mov
(bad)
stos
(bad)
adc
xchg
xor
iret
arpl
(bad)
jmp
adc
stc
push
jmp
leave
cmc
xor
test
inc
pop
fcmovne
mov
lods
pop
push
jb
popf
retf
rcr
loopne
or
inc
popa
add
sbb
mov
dec
test
out
ror
mov
repnz
jno
or
shr
jmp
mov
mov
je
adc
mov
xor
sbb
add
adc
mov
xlat
aaa
xor
aas
xor
retf
ret
add
shl
gs
pop
mov
frstpm(287
mul
movs
in
add
mov
or
inc
sbb
cmp
or
sti
xor
and
xchg
sbb
jno
cmc
push
dec
xlat
lods
fimul
cmp
mov
xchg
mov
mov
adc
lea
loopne
lds
mov
fadd
cdq
fld
add
pop
push
add
rol
add
test
jae
jp
fs
call
sbb
add
mov
or
(bad)
mov
cmp
mov
movs
pop
in
clc
push
inc
js
xchg
imul
mov
lds
push
pop
dec
pop
cmp
xchg
inc
xor
pop
adc
lock
push
add
sub
mov
lahf
mov
and
xor
movs
mov
inc
mov
lds
pop
movs
(bad)
rol
pop
mov
add
sbb
test
jp
pop
in
cld
cli
or
cmps
jmp
add
mov
lods
xchg
inc
(bad)
sub
adc
bound
mov
dec
pop
or
sar
xchg
iret
std
mov
mov
in
leave
fidiv
mov
iret
lods
jb
add
int
call
xor
sahf
jmp
fidivr
inc
fistp
scas
jmp
mov
ja
inc
adc
inc
mov
push
mov
inc
test
mov
cli
and
call
add
aam
push
test
xchg
icebp
dec
mov
fs
and
cmp
xchg
adc
outs
dec
rcr
(bad)
sbb
cli
out
xor
sti
mov
leave
cmp
enter
int
out
pushf
fist
lock
js
arpl
push
mov
ja
add
or
and
mov
and
xor
pop
jmp
jae
fstp
sub
inc
fwait
call
inc
lea
push
jno
xor
adc
xchg
addr16
push
aad
adc
mov
xchg
mov
es
or
jecxz
jg
cmp
jbe
ins
jmp
xor
scas
shl
loop
mov
jecxz
pop
mov
fs
mov
jp
and
inc
mov
jmp
mov
add
scas
inc
or
push
enter
mul
nop
fwait
mov
pop
loopne
inc
push
mov
stos
imul
clc
mov
out
xor
cmps
frstor
push
or
and
mov
int3
in
xor
inc
dec
or
sbb
addr16
fst
(bad)
shr
mov
xchg
or
mov
jo
(bad)
ret
out
jle
pop
xor
mov
inc
shr
(bad)
adc
and
int
pop
push
push
sbb
std
inc
and
popf
retf
stos
cld
daa
inc
push
mov
ins
popf
add
ins
ficom
out
sbb
pop
mov
jmp
mov
pop
push
jno
sub
jl
jl
arpl
push
(bad)
fincstp
retf
inc
sbb
dec
gs
std
pop
inc
js
repnz
adc
movs
sub
ins
out
cmp
jb
push
movs
and
test
add
fwait
div
push
inc
or
inc
pop
cmps
popf
out
aaa
fnop
js
jecxz
xchg
rcr
test
out
and
lds
add
and
ss
imul
add
rcr
sbb
mov
mov
mov
adc
stos
(bad)
icebp
pop
(bad)
and
lock
cwde
rcl
lock
xor
dec
jns
fisub
mov
mov
out
mov
inc
cli
sbb
outs
mov
repnz
jae
jecxz
nop
fstp
adc
into
test
push
adc
in
outs
lea
sbb
call
call
cmps
mov
add
push
adc
push
bound
xor
mov
push
cs
nop
cld
xor
inc
or
adc
ror
jnp
popa
adc
push
pop
xchg
movs
inc
sahf
pop
clc
and
cmps
jb
cmp
adc
ret
pop
aad
pop
cmp
cwde
adc
inc
arpl
dec
dec
cdq
test
add
xor
shl
daa
mov
inc
call
jg
ret
adc
xchg
jmp
xchg
sbb
sbb
ret
ds
popa
loop
or
pushf
and
mov
sar
jl
mov
jecxz
jbe
fldenv
icebp
out
test
dec
mov
push
aad
retf
imul
add
js
pop
ins
push
jno
jno
or
je
sub
cmp
xor
loope
mov
(bad)
fsub
xchg
cmp
arpl
cmp
lods
es
imul
pusha
ins
(bad)
add
jne
add
lds
mov
pop
cmp
mov
sub
ficom
ror
and
aam
mov
lea
jmp
mov
xor
cmps
repz
pop
and
add
hlt
loopne
or
jecxz
pop
pop
pop
sub
sbb
pop
in
jmp
mov
iret
dec
cdq
add
mov
sahf
fwait
mov
and
fidivr
ror
ins
cli
retf
mov
pop
and
and
test
rcl
inc
ret
cmp
add
xor
(bad)
sub
sbb
bound
push
mov
aaa
xchg
mov
mov
hlt
xor
push
xchg
add
sbb
push
out
or
dec
mov
cmps
nop
out
aad
adc
pop
add
dec
stc
nop
loopne
lock
jne
pop
xlat
mov
(bad)
rol
pop
test
cdq
push
push
mov
aam
addr16
or
arpl
cwde
sub
jb
xchg
shl
cmp
jp
xlat
mov
imul
jecxz
sar
pop
test
jl
cmp
sbb
pop
pushf
popf
xchg
or
adc
leave
sbb
stos
loop
ds
add
inc
imul
dec
ins
mov
jge
push
jmp
cli
stc
sahf
add
add
add
adc
add
xchg
xor
pop
pop
arpl
push
pop
icebp
mov
cli
jo
frstor
ds
loope
pop
rcr
push
mov
lea
sbb
push
addr16
int
xor
jmp
popf
ja
xchg
sbb
ss
ins
pop
hlt
xchg
loope
push
sti
rcr
pop
mov
push
out
gs
cld
lods
sti
out
xchg
mov
cs
add
pop
sar
bound
popf
dec
cmps
inc
mov
xor
cmp
clc
sub
movs
mov
pop
gs
push
sub
fbstp
ds
inc
xor
add
test
pop
loop
pop
jle
cwde
mov
scas
and
iret
mov
scas
mov
push
inc
or
or
jbe
clc
xchg
xor
cli
pop
mov
es
jno
js
fdivp
out
movs
push
sbb
popa
adc
or
cmp
mov
leave
sbb
fdivr
aas
mov
loop
jnp
jae
lds
xor
push
in
sahf
push
mov
test
push
das
shl
xlat
xor
jo
fstp
mov
ins
cdq
scas
xchg
cli
dec
mov
lods
mov
dec
mov
xchg
inc
and
dec
sbb
mov
pop
inc
or
pop
test
jbe
(bad)
dec
or
mov
push
iret
mov
nop
ss
(bad)
and
cmps
jg
xchg
inc
cmc
dec
push
sar
cmp
repnz
add
cld
mov
loopne
(bad)
sub
cmp
pop
cmp
fld
jecxz
mov
mov
mov
jp
fnstsw
mov
lock
mov
(bad)
jl
mov
retf
xor
imul
mov
cwde
push
fst
xchg
adc
cmps
clc
aam
or
sbb
aad
sbb
sahf
cwde
and
dec
int3
mov
inc
scas
int3
dec
pop
das
mov
cmp
mov
or
ror
repz
jmp
jno
test
xchg
je
adc
je
fidivr
mov
jno
push
retf
pop
(bad)
cmp
jmp
xchg
xchg
sbb
test
or
or
push
sub
sbb
lds
shl
and
pushf
sbb
xor
leave
addr16
inc
in
lahf
dec
xchg
pop
add
jo
sub
stos
sub
in
dec
sbb
jbe
push
imul
daa
sub
ds
cmps
data16
sbb
test
xchg
daa
fadd
movs
mov
cmp
call
in
jp
pop
enter
mov
mov
jbe
xchg
pop
xor
xchg
pusha
mov
hlt
mov
mov
or
jne
and
mov
dec
adc
rcl
aad
pop
push
pop
cmp
cmp
fisubr
hlt
in
mov
mov
dec
push
dec
dec
pushf
pop
mov
popf
imul
sub
mov
bound
and
cdq
cmp
ja
mov
ins
test
xchg
fisubr
call
add
add
add
add
and
xor
or
jg
cmp
ret
imul
xchg
push
rep
aad
pop
adc
or
sbb
scas
test
(bad)
hlt
inc
adc
xchg
inc
mov
or
icebp
bound
out
std
inc
loopne
popa
and
sub
lock
cmc
push
xor
out
fdivr
out
adc
sbb
stc
je
lods
(bad)
lds
(bad)
jg
dec
(bad)
aaa
or
and
shl
adc
dec
cmps
fdiv
cmp
adc
jb
ror
cmps
cvtdq2ps
cmp
loopne
dec
(bad)
xchg
inc
dec
dec
mov
xor
or
mov
adc
shr
into
call
test
nop
pushf
mov
sub
in
pop
pusha
dec
shl
xlat
pop
lods
cmp
or
rcr
push
mov
mov
mov
fcom
je
hlt
xchg
lock
rol
sub
cmp
jmp
mov
mov
inc
aad
mov
pushf
push
pop
mov
outs
cwde
ins
stos
cs
adc
and
aas
push
jmp
ins
pop
push
dec
(bad)
ficom
sbb
fmul
dec
add
imul
cmp
adc
push
das
mov
stos
pop
xor
es
mov
(bad)
(bad)
das
in
mov
jne
add
clc
xchg
xchg
mov
fist
jmp
repnz
mov
mov
cld
into
pop
mov
jmp
pop
mov
das
pop
clc
iret
sbb
and
imul
outs
jl
repnz
bound
sti
add
mov
mov
scas
add
popf
pop
and
aad
stc
bound
mov
(bad)
sar
fstp
mov
pop
and
imul
fisubr
jns
ret
cmps
les
lea
loope
mov
and
out
out
pop
test
jb
push
movs
js
fsub
sbb
cmp
and
dec
cmp
aaa
mov
cmp
inc
mov
sub
idiv
ret
xor
test
inc
(bad)
inc
cmp
and
ins
adc
cmp
adc
ja
jnp
sub
in
call
stc
into
loopne
push
push
mov
sub
in
cs
push
int3
sbb
xor
inc
mov
mov
pop
(bad)
xor
mov
sbb
dec
dec
dec
daa
xor
xchg
in
add
pop
mov
xor
inc
push
loopne
dec
and
rcl
pop
add
adc
in
inc
adc
and
hlt
pushf
fwait
stos
dec
cld
inc
xchg
fdivr
adc
mov
sti
sti
in
mov
hlt
pop
inc
sahf
loop
ds
pop
inc
pushf
xchg
imul
pop
dec
sbb
das
sub
or
sub
out
lahf
jnp
mov
cdq
pop
aaa
push
movs
sbb
data16
idiv
pop
and
xchg
sub
add
div
cmp
icebp
iret
push
in
mov
push
loop
sar
addr16
aas
mov
pop
push
sub
or
test
xlat
or
jp
jne
cmps
repnz
pushf
hlt
ret
clc
dec
ds
das
push
push
lods
mov
fsubr
int3
jbe
rcl
out
and
sbb
inc
mov
pop
stos
adc
loopne
dec
ds
dec
pop
cwde
and
jb
test
pop
mov
retf
fdiv
lea
jno
or
popa
mov
in
ret
gs
sub
and
adc
pop
push
lahf
cmp
push
inc
sub
cld
add
mov
daa
loope
ins
mov
ffree
jb
cmp
sbb
mov
jne
jl
dec
out
adc
inc
pop
mov
out
iret
out
data16
mov
repnz
inc
jecxz
mov
cmc
call
jae
mov
xchg
ja
fdiv
inc
fcmovnu
sub
sub
and
rcr
test
ss
jo
gs
jno
push
push
sbb
pushf
ds
jle
dec
pop
add
sub
pop
inc
jnp
xchg
xor
mov
sbb
and
cmp
popf
push
out
std
pop
inc
inc
int3
inc
mov
call
inc
inc
shl
or
dec
pop
shl
mov
jne
cmp
int3
repz
pop
pop
in
cmps
or
adc
xor
ds
loope
jg
cmp
dec
xchg
lods
xchg
pusha
cmp
fs
rol
jne
pop
inc
imul
push
out
fsincos
xor
call
daa
cli
loopne
aad
sahf
or
cmp
inc
add
pop
sbb
call
dec
cmp
or
add
dec
pop
add
add
mov
push
jge
jl
mov
sub
inc
idiv
jne
jmp
mov
cmp
int3
fnsave
push
mov
inc
out
xchg
mov
sti
mov
outs
call
jnp
push
mov
adc
adc
into
pop
sbb
out
out
aam
cdq
inc
enter
cmps
nop
push
jb
mov
scas
dec
test
movs
xlat
inc
dec
add
cmp
(bad)
inc
aaa
retf
mov
shl
rol
mov
jge
cmp
cmp
das
in
pusha
fstp
mov
(bad)
stc
(bad)
aam
les
xchg
sub
ss
mov
xchg
xchg
jb
dec
push
iret
jecxz
ror
add
xor
mov
outs
mov
xchg
push
push
fs
(bad)
adc
jg
lods
add
or
xchg
inc
icebp
shr
movs
out
xor
(bad)
lods
imul
xchg
inc
jnp
aaa
jmp
das
pop
ficom
scas
leave
push
(bad)
fisttp
aas
out
fisttp
pushf
pusha
add
jbe
daa
outs
fcmovnbe
or
dec
xchg
aam
data16
dec
mov
add
js
xchg
call
(bad)
and
dec
cdq
retf
mov
mov
or
or
ret
inc
scas
xchg
inc
xchg
ds
sub
push
clc
dec
and
xchg
imul
dec
push
jne
pop
and
pushf
clc
mov
test
pop
or
(bad)
mov
scas
jno
dec
jnp
pop
not
add
jns
rcr
(bad)
or
push
xchg
sub
xor
jmp
mov
xor
mov
stc
mov
ret
cmp
fild
xor
mov
movs
shr
int
hlt
(bad)
dec
jle
sbb
mov
and
scas
pushf
xchg
aad
dec
push
sub
aas
jl
and
(bad)
aaa
sar
scas
xchg
adc
retf
(bad)
sahf
push
addr16
cwde
mov
test
ja
ja
or
mov
(bad)
ja
mov
sahf
leave
shl
lahf
(bad)
jbe
pop
scas
mov
pop
out
cmp
fidivr
(bad)
push
sub
dec
mov
mov
jae
pop
in
xchg
stos
retf
inc
and
out
pop
int
pop
mov
fstp
pushf
pop
popa
xor
test
lahf
push
(bad)
xor
and
cld
pushf
sar
cmp
sbb
pop
mov
retf
(bad)
stos
xchg
dec
into
jmp
xor
pop
cdq
add
loop
jne
sbb
jnp
repz
(bad)
cmp
push
mov
repnz
jbe
loopne
adc
push
fistp
test
jl
dec
lods
push
cmc
movs
jb
cmp
push
mov
or
(bad)
push
push
jbe
ss
and
aad
and
sahf
retf
sbb
xor
sub
into
or
xor
mov
dec
loope
fbld
adc
jo
dec
push
inc
setb
cmp
xor
imul
daa
or
sub
sar
mov
movs
test
mov
and
push
push
cmp
clc
daa
out
clc
int
cmp
dec
jae
out
inc
inc
pop
dec
hlt
adc
and
push
imul
ret
out
int
jae
jle
push
pop
call
lods
xchg
mov
inc
jmp
inc
(bad)
arpl
add
popa
mov
test
in
or
and
hlt
test
ror
inc
out
lock
fs
sbb
es
fcom
push
fdivr
call
xchg
add
xchg
cmp
hlt
outs
test
into
xchg
cwde
dec
mov
rcr
mov
pop
mov
retf
nop
iret
jge
fidiv
push
mov
das
(bad)
ins
push
ret
je
leave
mov
sub
loope
ja
push
dec
cs
sub
(bad)
jmp
mov
pop
dec
sbb
xchg
addr16
out
sti
arpl
int3
int3
cmp
mov
inc
hlt
fsub
push
adc
dec
jo
imul
jle
cmp
lea
(bad)
or
arpl
inc
ret
ror
out
sbb
mov
adc
push
cdq
mov
adc
ja
mov
jb
xchg
dec
push
and
popa
je
sub
mov
mov
mov
movs
add
in
movs
aas
mul
je
xchg
mov
xlat
xor
ins
repz
fs
(bad)
fxch
or
inc
shl
or
adc
ins
adc
ja
ins
add
iret
movs
xchg
xor
push
in
adc
xchg
jg
les
stos
dec
idiv
jb
leave
mov
rcl
lea
fmul
jne
mov
fst
stc
and
dec
out
push
mov
push
or
ins
xor
mov
inc
jnp
push
stos
into
jl
fst
push
push
int
hlt
add
(bad)
dec
mov
pop
(bad)
xchg
lahf
mov
pop
iret
xbegin
shl
out
int3
xchg
xchg
inc
iret
mov
xchg
test
add
xchg
neg
lock
or
jmp
scas
cmp
cs
lahf
arpl
cld
push
sbb
xchg
sbb
mov
pop
add
scas
push
pop
sbb
and
xchg
rcr
repz
mov
inc
dec
sti
mov
gs
xlat
test
sbb
push
dec
arpl
iret
sub
les
add
mov
(bad)
pop
loope
cmps
jb
std
dec
cdq
and
inc
popf
adc
sbb
ja
aaa
sub
movs
cmp
sub
push
into
xchg
jp
(bad)
fiadd
fsin
cmp
inc
ins
stos
mov
dec
jo
mov
dec
xchg
mov
mov
scas
pop
mov
sahf
daa
call
mov
mov
repz
adc
xchg
popf
call
and
push
fld
jl
xchg
imul
jb
scas
test
mov
cmp
pop
sub
cli
hlt
cwde
mul
arpl
icebp
fdivr
repnz
(bad)
pop
shr
mov
ins
xchg
inc
(bad)
mov
enter
cmp
jns
sar
stc
jmp
cmp
cmc
(bad)
outs
lods
or
cmp
in
cmp
aad
push
shl
test
and
and
cmp
add
mov
or
add
pop
lock
add
xchg
outs
adc
xchg
ret
shr
xchg
sbb
dec
jbe
jnp
fcmovnu
inc
aam
mov
add
in
pop
stc
dec
cmps
stc
or
ror
jo
shl
test
push
sti
mov
dec
or
imul
loop
je
xchg
pop
fcomp
sbb
dec
or
push
sub
and
int
das
mov
mov
mov
pop
mov
je
dec
mov
lods
dec
and
mov
fmul
pop
or
cmp
dec
cs
cmp
call
mov
inc
jno
std
dec
stc
mov
pop
push
push
jle
and
mov
enter
ficom
dec
fstp
repnz
in
lods
pop
jmp
or
adc
sti
and
fwait
loope
xor
cli
movs
out
sbb
push
pop
fld
jle
sub
jns
shl
jno
popf
sub
call
dec
xor
mov
mov
fiadd
shr
mov
mov
sti
xchg
jae
stc
fsub
loop
(bad)
aam
cmp
jns
out
mov
ss
sbb
sbb
cwde
scas
mov
push
mov
in
pop
outs
repnz
pop
push
mov
add
jp
sbb
mov
es
dec
add
fs
aad
movs
dec
stos
ss
xor
(bad)
(bad)
mov
mov
cmp
xor
sbb
mov
push
or
call
cmp
dec
in
lock
mov
ja
add
inc
ins
push
mov
(bad)
mov
jp
mov
(bad)
xchg
in
mov
into
sub
push
rcl
sbb
adc
movs
pop
rcr
xchg
inc
add
dec
adc
sbb
lock
scas
retf
stc
push
jne
mov
int
or
imul
mov
cmp
mov
sbb
cmp
into
push
adc
(bad)
sti
test
add
stos
sub
ret
pop
int3
mov
test
push
gs
mov
ret
jne
xor
mov
pop
nop
mov
dec
jno
jae
add
mov
inc
or
jecxz
test
jbe
xchg
inc
sahf
add
jmp
fisubr
or
aad
in
xor
push
call
or
sub
mov
sub
jmp
inc
jae
loop
dec
into
fdiv
and
mov
add
push
lods
sar
pop
mov
mov
mov
mov
mov
push
push
push
stos
scas
xchg
dec
ss
cmp
or
push
aaa
stc
dec
jne
sbb
sub
lock
mov
mov
leave
add
xchg
xchg
test
mov
popf
push
mov
test
xchg
in
jno
clc
fcomp
pop
mov
(bad)
dec
jno
mov
movs
add
push
push
mov
je
shr
mov
xchg
lds
dec
retf
or
cwde
push
pop
imul
pushf
mov
mov
popf
pusha
adc
imul
aaa
test
cmp
mov
dec
sbb
push
mov
push
mov
in
jo
stos
jle
fwait
pop
adc
and
and
retf
enter
adc
sbb
cld
jae
pushf
cmps
sbb
cli
popf
cmp
into
jno
movs
push
jmp
sub
mov
jnp
push
cmps
cmps
mov
push
into
push
adc
and
aam
(bad)
bound
push
ret
cmp
cld
mov
dec
pop
in
or
rcl
dec
sbb
push
(bad)
cmp
sub
int3
mov
mov
push
mov
xor
sbb
jmp
loopne
sub
popa
mov
add
jecxz
js
inc
pop
push
jl
ja
xchg
mov
and
mov
cmps
xor
call
inc
ins
cmp
mov
fst
std
ss
or
push
enter
in
inc
mov
lods
bound
sti
dec
xor
sub
out
sbb
jmp
pop
inc
push
mov
int3
ret
aam
popf
sub
push
adc
or
mov
and
inc
pavgb
movs
add
mov
mov
cmp
xchg
das
push
aad
sbb
sub
ins
pop
(bad)
aas
add
or
jecxz
movs
icebp
call
pop
(bad)
adc
sub
loop
mov
mov
outs
stos
mov
mov
adc
aaa
stc
popf
ds
std
and
mov
xor
mov
and
xchg
cmp
and
xor
je
sub
mov
adc
stos
jmp
or
or
xchg
(bad)
inc
jecxz
aad
jno
mov
sbb
mov
push
dec
jae
(bad)
(bad)
repnz
cmp
jne
ins
cmp
std
(bad)
jl
sbb
jl
jmp
call
fiadd
mov
xchg
js
mov
sbb
outs
sar
and
push
mov
fnstcw
dec
sbb
jbe
lds
mov
es
push
pop
and
test
test
jecxz
fld
add
sti
leave
sahf
cwde
popf
or
lods
sub
pushf
cdq
add
popf
jb
mov
int3
inc
add
sbb
jle
push
pop
inc
out
push
into
cmp
jle
pop
pop
popf
retf
pushf
bound
dec
stc
rcr
ficom
in
inc
jnp
es
dec
ret
ret
inc
shld
jae
lea
push
test
and
xchg
inc
bound
je
iret
push
sbb
dec
add
sar
sub
in
adc
push
sbb
mov
dec
xchg
(bad)
cwde
call
pop
mov
push
loop
adc
scas
je
ror
sbb
arpl
shl
fimul
mov
jae
cmc
and
in
jl
xchg
data16
xchg
(bad)
test
aaa
adc
inc
inc
cmps
jb
inc
mov
adc
inc
push
test
cmp
adc
cmps
mov
int3
push
stos
scas
mov
add
in
imul
lods
icebp
cmp
cmp
sub
push
retf
neg
jno
std
pop
add
fabs
jmp
or
mov
and
pop
ja
stc
and
stc
mov
add
shl
adc
adc
mov
mov
xor
sti
xchg
popf
cmp
ja
pop
or
add
jnp
retf
cmp
xchg
xor
fisubr
aam
sahf
push
jmp
mov
and
fistp
xor
cmp
pop
mov
rol
add
pushw
add
jge
add
or
xchg
call
add
stc
dec
(bad)
mov
in
push
lahf
mov
jle
call
cmp
lods
ret
js
mov
dec
cmps
push
ret
cmps
add
(bad)
imul
cmp
retf
inc
jne
ins
push
cmp
cmp
xchg
in
inc
je
pusha
or
sub
into
repz
inc
jnp
idiv
cmp
or
test
aam
sbb
in
gs
sub
iret
fs
scas
jg
adc
inc
mov
cmp
pop
(bad)
adc
mov
pop
cmc
jne
retf
add
imul
xchg
push
mul
retf
xchg
data16
fsubr
inc
jg
pop
fs
cmp
sbb
xchg
and
jo
mov
jo
mov
or
fs
sub
in
shr
pushf
push
xor
int3
ror
xor
add
xchg
aam
popf
xchg
add
(bad)
dec
push
adc
popa
or
cmps
repnz
cmp
add
inc
sub
jmp
bound
clc
cmp
and
ficomp
dec
cmps
hlt
jg
hlt
mov
mov
cmp
cmp
arpl
leave
mov
jge
xchg
xchg
addr16
outs
ror
lods
dec
xchg
mov
sbb
dec
xchg
sar
push
in
xor
std
lds
mov
cld
(bad)
icebp
outs
rcl
mov
retf
lds
out
pop
jb
lods
jecxz
pop
lods
cld
jmp
inc
movsx
int3
scas
adc
jmp
int
mov
mov
add
gs
and
jb
adc
dec
test
dec
mov
shr
gs
cmp
xchg
inc
jmp
outs
adc
jnp
daa
daa
out
push
or
add
sub
and
xchg
push
pop
xchg
stc
and
sub
sub
or
push
outs
pop
mov
add
inc
scas
cmp
pop
xor
(bad)
jo
fild
shl
into
add
push
jno
(bad)
daa
jnp
daa
xchg
sub
adc
ror
jno
test
push
mov
repnz
pop
jne
xlat
adc
and
add
ffree
jle
outs
repnz
rol
add
push
cli
dec
add
adc
(bad)
jne
ins
sub
dec
ret
lahf
enter
or
aaa
push
lock
or
xor
stc
adc
mov
mov
jne
cmc
rol
sub
mov
pop
push
fidiv
pop
mov
loop
fmul
push
in
cmps
aam
aas
and
stos
into
cld
test
jmp
jnp
es
xor
and
sbb
add
outs
ficom
ja
lock
and
std
cwde
je
xchg
mov
add
icebp
xor
xor
xchg
stc
add
daa
jmp
mov
add
sbb
jb
es
sar
dec
mov
jnp
shl
shr
push
xchg
pop
jb
or
rcr
pop
sbb
sar
jmp
pop
push
cwde
dec
fmul
adc
jno
sub
and
inc
mov
xor
jg
loop
cmps
push
sub
pop
fwait
int
cmp
pop
das
js
add
fsubr
in
sbb
pusha
inc
stc
fnsave
les
dec
cmp
push
loopne
and
inc
daa
cdq
rol
fisubr
cmp
(bad)
mov
mov
clc
cld
push
stos
sahf
xchg
or
adc
fild
out
pop
ficom
cld
xor
push
dec
and
test
aad
loopne
gs
scas
dec
jne
sub
xchg
push
test
hlt
xchg
imul
push
pop
pop
scas
ins
dec
sbb
(bad)
pop
add
jbe
inc
adc
jbe
ret
push
fistp
test
push
mov
test
stos
adc
out
cmps
ins
leave
and
ret
xchg
push
inc
xor
inc
xor
dec
cmc
cdq
push
(bad)
adc
mov
xor
xchg
loope
call
lods
adc
and
in
rol
inc
fimul
mov
xchg
adc
pop
fs
mov
pop
add
clc
mov
mov
or
push
aas
pop
fmul
mov
jb
push
sub
sar
fwait
gs
push
rcl
jbe
mov
jbe
jnp
js
dec
pop
inc
ins
jbe
mov
jnp
fisttp
out
fmul
rol
(bad)
sbb
push
mov
fwait
mov
loop
hlt
mov
rcl
out
or
ja
mov
mov
sbb
test
imul
outs
cli
xchg
mov
sbb
daa
lods
lock
test
pop
rcr
sub
out
test
dec
jns
xor
inc
pop
adc
xchg
cmp
daa
fisubr
or
mov
lea
stos
arpl
inc
shr
add
mov
lods
sub
xchg
pop
fidivr
xchg
mov
hlt
push
xchg
cmovs
js
dec
cmp
arpl
or
mov
cdq
jmp
mov
in
mov
cmp
into
das
aad
jb
xchg
mov
dec
pop
cmp
xor
inc
jl
repnz
mov
push
scas
call
rol
lods
mov
mov
les
jo
push
sbb
sub
adc
xlat
mov
sbb
repz
pop
sbb
push
test
xlat
dec
pop
pop
and
cmc
cmp
cmps
push
movs
loope
dec
or
in
jae
daa
and
mov
xor
add
and
mov
imul
add
push
add
repnz
mov
jmp
in
mov
inc
mov
lods
mov
cmps
lods
add
pusha
mov
sahf
aam
pop
cmps
cmp
mov
xor
sti
push
(bad)
mov
out
arpl
sbb
clc
aas
in
test
aaa
jne
push
pusha
js
push
in
jno
div
dec
(bad)
lds
or
push
and
bound
int3
jno
inc
je
xor
mov
pop
lods
mov
add
add
mov
sub
pusha
cmp
mov
sbb
dec
arpl
das
jnp
cmp
shl
(bad)
loopne
int
xor
mov
fs
(bad)
or
push
bound
daa
out
ds
mov
jg
xlat
dec
cmp
mov
mov
dec
pop
jns
pop
mov
jl
and
adc
test
push
xor
or
inc
fisub
popf
mov
arpl
dec
jnp
push
gs
or
xor
je
call
pushf
jo
sbb
cli
cwde
inc
adc
jecxz
sub
cmp
mov
xor
adc
mov
cmps
or
mov
out
dec
out
std
xchg
push
adc
loop
sub
lahf
add
out
test
sbb
sbb
ds
xchg
rol
xchg
lahf
sbb
sub
sbb
(bad)
mov
je
repz
lds
mov
mov
mov
js
jl
rcr
and
int3
inc
stos
lahf
dec
out
adc
addr16
das
int
xchg
inc
mov
leave
fld
cmp
push
push
sub
fcom
fcomp
arpl
addr16
or
icebp
cdq
adc
mov
mov
pusha
mov
popf
in
jo
hlt
das
rep
cmp
scas
or
push
out
mov
mov
xchg
pop
sbb
inc
iret
and
hlt
jl
lds
xchg
mov
out
nop
mov
pushf
sub
idiv
pop
xchg
and
ins
mov
cmp
hlt
mov
cmps
fld
inc
adc
retf
test
ins
idiv
mov
call
push
pop
(bad)
scas
adc
fwait
outs
ds
fnstcw
imul
outs
mov
int3
sbb
loop
sbb
push
js
mov
movs
cmps
aas
cmp
popf
fcomip
stos
out
jbe
pushf
outs
xchg
inc
stos
jl
(bad)
mov
inc
(bad)
mov
sub
leave
out
adc
std
hlt
cli
or
jae
xchg
jp
xchg
out
shl
sub
mov
mov
mov
int
idiv
rcr
out
cdq
inc
cdq
inc
scas
jns
loop
and
inc
retf
dec
sub
lds
rol
ret
mov
and
add
std
push
addr16
adc
mov
fadd
pop
mov
(bad)
int3
dec
neg
repnz
std
ror
clc
or
jmp
xchg
adc
xor
mov
rcl
and
scas
sub
push
pop
pop
push
xor
or
gs
rol
pusha
popa
sahf
les
adc
sub
pop
cdq
add
je
mov
cdq
popa
jae
add
stos
xchg
cmp
add
fcomp
in
call
inc
dec
es
int3
loopne
cld
pop
mov
(bad)
and
repz
push
fisubr
jmp
push
out
or
shl
sub
xor
je
in
cwde
mov
shr
nop
adc
xchg
pushf
sahf
sbb
mov
pop
cld
lds
sub
dec
popa
or
out
sbb
sub
xchg
mov
mov
cmp
sbb
fld
jl
sub
cdq
ins
cmp
xor
pop
mov
cmp
cs
sub
repnz
push
repnz
mov
mov
mov
fs
test
push
lods
retf
push
imul
cmps
test
adc
scas
sub
pusha
repz
cs
inc
jge
scas
xor
pop
inc
ror
das
or
jmp
fst
ja
ss
jg
cmp
in
mov
lock
cmp
push
pop
pop
xchg
inc
scas
ss
in
mov
jne
cmp
iret
mov
lods
shl
mov
jae
and
jl
mov
xor
cwde
jle
pop
cld
lea
jg
cmc
daa
nop
test
inc
ss
xor
pusha
xor
std
or
std
rcr
jb
lock
xchg
loop
in
lea
test
aam
inc
xchg
adc
stc
pop
pop
adc
mov
push
push
sahf
sahf
xor
test
repz
jns
call
jo
mov
pop
dec
xor
rcl
pusha
or
push
xlat
ins
jno
or
mov
and
and
push
inc
xor
jmp
test
shl
and
push
test
(bad)
cmp
pusha
call
and
loopne
add
rol
add
pop
add
cmp
xchg
mov
pop
bswap
cmps
mov
cli
jmp
pop
fnstenv
test
mov
pop
stos
retf
mov
jmp
daa
out
rcr
das
xchg
inc
retf
mov
(bad)
xchg
iret
iret
dec
push
jo
or
enter
loopne
(bad)
int
xchg
mov
dec
bound
cli
push
mov
mov
imul
pop
pop
push
test
movs
repnz
dec
jns
mov
xor
fcom
ins
xchg
fstp
dec
xor
push
xlat
adc
pop
ins
lods
mov
test
push
mov
shl
xor
stc
xchg
inc
mov
jnp
mov
mov
or
dec
jecxz
push
or
sub
mov
dec
outs
pushf
clc
std
cli
mov
repz
jns
cmps
int
dec
arpl
retf
cdq
sub
and
ja
aaa
in
inc
in
mov
stos
dec
or
js
jle
add
push
or
retf
std
inc
or
stc
not
mov
sbb
arpl
xor
jno
cs
aas
arpl
mov
pop
jo
cmc
adc
clc
sar
jp
xchg
dec
int3
ffreep
pop
jnp
pop
inc
test
mov
mov
pop
jle
loop
or
and
fadd
jne
in
push
call
sub
cmps
jne
repz
ins
(bad)
test
xor
fisttp
nop
es
call
nop
aas
(bad)
pop
adc
dec
imul
les
cmp
adc
mov
mov
fdiv
inc
xchg
fisub
push
mov
data16
mov
jns
data16
popa
rcr
dec
cmp
xchg
outs
repnz
adc
cwde
sub
jns
lahf
mov
dec
cmp
add
shl
cmp
mov
mov
push
mov
ja
mov
les
xor
sti
popw
mov
and
ret
imul
dec
push
push
sbb
jbe
or
es
sub
lds
ss
fstp
call
das
fbstp
or
in
jmp
inc
mov
int3
adc
std
icebp
cmp
inc
or
rcr
out
sub
inc
addr16
ins
test
jb
inc
test
or
cmps
addr16
loop
gs
or
mov
jg
mov
rol
test
les
mov
adc
jnp
repnz
retf
jg
into
sub
call
mov
in
int
icebp
xchg
mov
ret
dec
add
idiv
adc
dec
stos
(bad)
jle
into
or
stos
push
add
ins
ins
mov
push
nop
fidivr
jmp
mov
or
jl
movs
dec
sbb
les
jg
hlt
lds
ret
leave
jnp
jbe
inc
inc
jl
test
sar
lock
jmp
mov
xor
cmp
and
sub
mov
rcr
lahf
sbb
pusha
bound
jno
inc
and
push
cmp
jns
add
mov
int
test
mov
xchg
stc
fist
jl
mov
jmp
(bad)
add
jae
pop
sub
push
adc
lods
push
dec
add
bound
sbb
and
sub
mov
sahf
sub
push
dec
pop
sahf
dec
out
cmp
cmp
pop
sub
mov
ja
pop
dec
js
(bad)
cmc
lock
cmc
aaa
jb
mov
xlat
cdq
call
push
in
icebp
mov
mov
mov
pop
popa
sbb
cwde
cmp
and
lock
mov
loopne
test
push
cwde
mov
mov
jl
jge
lods
dec
(bad)
jbe
test
out
(bad)
(bad)
jmp
std
(bad)
mov
sbb
mov
sbb
mov
xor
adc
mov
popa
fwait
cmp
repz
push
xchg
(bad)
repz
arpl
pop
adc
bound
sti
cwde
push
cs
mov
push
shl
dec
gs
stos
push
xchg
jmp
add
and
clc
mov
dec
fwait
and
push
ror
inc
mov
jnp
pushf
push
and
leave
pop
xchg
jmp
mov
cmp
inc
adc
push
mov
ficomp
(bad)
stc
jo
or
xlat
shr
jmp
in
aad
mov
dec
inc
ror
daa
xor
jb
pop
(bad)
(bad)
stos
mov
ins
(bad)
inc
or
fisubr
xchg
ror
mov
(bad)
ins
test
leave
aas
and
(bad)
and
sub
fimul
shl
dec
adc
fimul
int
mul
setp
and
(bad)
popw
mov
outs
xor
and
xchg
pop
sar
ret
cwde
in
or
mov
sub
or
xchg
cmp
jnp
loopne
cmp
out
cld
sbb
mov
jle
mov
loope
or
mov
shr
sbb
scas
daa
xlat
or
out
inc
adc
mov
mov
sti
test
inc
jle
jmp
imul
jg
sub
ret
sub
jge
and
dec
(bad)
sbb
sub
addr16
xor
cmc
xchg
xchg
ficom
gs
mov
(bad)
jmp
dec
xchg
push
das
add
sub
inc
cmp
xchg
ror
xor
clc
mov
lahf
jno
add
add
jo
inc
shr
or
pop
sti
cmp
sar
cs
pop
and
out
mov
adc
test
jne
js
fisttp
pop
and
outs
xchg
inc
scas
mul
mov
cmp
push
xor
fcos
inc
jo
inc
test
xchg
pop
xchg
mov
in
jbe
mov
sub
(bad)
adc
mov
mov
xchg
mov
mov
mov
popa
cmp
mov
gs
lock
or
push
mov
ds
cwde
jg
jne
or
std
mov
call
pusha
cdq
cs
push
xchg
idiv
and
jnp
lahf
inc
dec
push
fwait
and
(bad)
cmp
fistp
xor
push
and
sub
hlt
inc
sub
aaa
jl
and
in
mov
(bad)
cmp
daa
fldenv
adc
add
push
cmp
cmp
push
mov
pop
sti
mov
into
pop
push
mov
cmp
fsubr
adc
xor
jmp
sub
ss
ins
(bad)
sub
sub
jmp
mov
and
popa
repnz
xchg
cwde
into
mov
lds
lds
hlt
add
xor
add
int3
add
add
jbe
cmp
xchg
and
std
sbb
enter
mov
fbstp
fsub
push
fimul
or
mov
mov
pushf
cld
inc
jmp
push
dec
out
leave
popf
or
xchg
into
inc
mov
dec
cmp
ret
mov
adc
xor
fcom
mov
jp
mov
retf
test
and
cmp
jmp
test
mov
mov
cmps
pop
in
mov
shl
inc
sbb
fsubr
xor
rcl
adc
stos
frstor
fdivr
jle
sub
pop
in
call
adc
add
and
fisubr
lods
sub
mov
fcom
pop
inc
fist
and
lods
gs
push
jge
mov
sbb
jle
or
cmp
pusha
jp
pop
lods
push
or
mov
adc
arpl
ret
sar
test
jp
ret
push
cdq
in
mov
mov
push
sub
addps
out
sub
mov
sbb
sbb
shl
imul
or
and
popa
out
lods
add
pop
xchg
out
les
xchg
pop
fisub
je
nop
and
dec
mov
pop
fwait
or
call
and
js
xchg
or
jg
mov
jbe
dec
adc
jmp
mov
jnp
(bad)
int3
push
and
rdtsc
mov
add
lods
xor
in
bswap
adc
jle
cli
xchg
inc
jbe
fmul
xor
fst
call
cmp
mov
adc
pop
add
shr
mov
xchg
sbb
aaa
push
mov
push
(bad)
fidivr
mov
(bad)
(bad)
xor
stos
es
nop
fwait
ret
jmp
mov
pop
call
jns
mov
rol
mov
pop
and
out
adc
pop
into
sub
push
cmp
js
push
sahf
in
enter
fist
adc
jbe
or
call
mov
out
xchg
xchg
mov
or
pop
daa
icebp
stos
sub
dec
adc
mov
(bad)
jle
lea
dec
outs
loop
in
or
gs
es
stc
xor
aas
mov
cmp
pop
sar
retf
dec
out
xchg
xor
cmc
push
retf
jle
add
xor
rcl
jb
and
test
data16
jae
push
xchg
jno
mov
cmp
shl
pushf
adc
fsub
push
mov
mul
(bad)
pusha
jg
pop
sub
mov
adc
xchg
cdq
add
pop
inc
movs
iret
fucomi
push
in
mov
stc
nop
xor
movs
add
inc
add
push
add
jae
add
rcr
mov
inc
cs
mov
fstp
sbb
daa
jno
test
outs
inc
sub
es
(bad)
aaa
mov
sbb
mov
jmp
pop
push
jp
es
test
lds
fisub
push
jecxz
mov
icebp
or
in
in
fisttp
inc
fisttp
cmp
sahf
xor
les
fidivr
mov
push
mov
ins
clc
mov
mov
xchg
lahf
jle
mov
dec
jnp
xlat
aas
xor
into
ins
add
dec
imul
pusha
adc
mov
jo
mov
or
int3
jp
sbb
lods
jl
adc
enter
jmp
mul
push
out
adc
sub
shr
aas
nop
cs
xchg
lods
dec
pop
cmp
cmp
lds
cmps
sbb
(bad)
ja
push
dec
xchg
jns
icebp
sahf
add
pop
push
mov
ret
cmp
es
sbb
mov
nop
or
mov
xor
ja
mov
sub
xchg
outs
int
sahf
fsubp
jo
jne
inc
xor
dec
neg
into
mov
xchg
mov
ficomp
call
push
div
push
out
jb
adc
outs
jb
mov
loope
pusha
std
movs
jecxz
jecxz
ror
(bad)
in
cmps
mov
mov
neg
ror
jmp
les
popf
xchg
cli
movs
mov
and
mov
dec
add
popa
xchg
add
int3
(bad)
shl
adc
stc
jg
and
mov
pop
lock
sub
ffree
cmp
mov
push
sub
int3
scas
mov
cmp
outs
fstp
outs
sub
daa
push
in
add
out
sub
ret
xor
ds
xor
sbb
mov
sbb
scas
ins
sahf
mov
dec
pop
or
mov
sub
imul
sar
das
cmp
mov
cwde
ds
mov
out
jno
xchg
xor
mov
dec
fild
jne
lods
inc
sub
or
push
cmps
pop
or
movs
inc
arpl
sub
test
jb
jns
ror
shl
jae
out
or
stos
and
pushf
sbb
dec
out
or
hlt
clc
fnclex
add
rol
jmp
arpl
int3
mov
rdpmc
leave
sub
xor
inc
xchg
xor
jl
dec
mov
stos
sub
sub
adc
dec
mov
or
addr16
add
mov
mov
(bad)
cwde
cmps
sub
push
jno
repnz
mov
popw
loope
add
pop
or
push
std
nop
cmc
xchg
shl
fwait
adc
push
leave
ins
fnstcw
aas
push
xchg
out
rcl
cmps
inc
lock
cmp
mov
pop
pushf
mov
imul
sbb
sbb
cmp
adc
mov
retf
outs
stos
mov
sbb
push
dec
mov
test
lock
cmp
cdq
adc
out
retf
pop
stos
and
sahf
div
sar
sub
ret
xor
sbb
xchg
push
pop
mov
sub
jg
push
mov
aas
std
adc
dec
les
adc
xor
shl
fistp
les
pop
mov
pop
and
int3
arpl
mov
and
arpl
cmps
shl
or
sbb
in
dec
ins
xor
jnp
push
sbb
xlat
xor
rcr
sar
mov
mov
icebp
inc
push
rol
call
pop
fmul
rol
(bad)
pop
cdq
mov
push
push
lods
jmp
and
iret
and
adc
adc
sub
repz
jp
pop
mov
retf
mov
imul
ror
xchg
adc
jl
imul
inc
mov
pop
js
mov
sahf
test
jl
jmp
fst
xor
movs
sub
xlat
mov
mov
pop
or
cs
arpl
xor
add
into
dec
add
mov
cmp
ds
xchg
ss
adc
movs
(bad)
dec
or
cmp
test
or
or
loope
(bad)
push
pop
mov
cdq
push
call
jle
mov
push
inc
in
icebp
stc
mov
in
push
ret
jae
xchg
pop
das
push
dec
jge
jge
arpl
loopne
push
loope
movs
icebp
xchg
in
xchg
mov
mov
inc
lea
cs
into
unpcklps
pop
imul
inc
sbb
(bad)
cli
(bad)
dec
mov
xchg
loope
mov
int3
fs
mov
ja
loop
inc
mov
cld
mov
or
in
mov
hlt
cmp
dec
scas
lock
(bad)
retf
xchg
test
movs
sub
push
xchg
ds
inc
add
sar
cmp
packssdw
aam
inc
inc
stos
sub
icebp
arpl
mov
das
xchg
push
push
inc
popf
dec
scas
inc
or
sub
scas
cmps
mov
add
in
mov
dec
mov
enter
mov
sub
cmp
xchg
mov
push
pop
call
sub
mov
pop
dec
(bad)
ror
mov
xor
aam
mov
push
mov
sbb
pop
sub
cmc
or
aas
cmp
sbb
jecxz
fsub
popw
pusha
int
arpl
jmp
add
add
int3
add
add
mov
daa
popf
popf
add
(bad)
daa
movs
test
das
in
sti
lods
lods
pop
ss
inc
ja
loope
stos
fimul
xchg
jae
mov
inc
lods
pusha
es
data16
dec
mov
mov
ins
xor
jmp
fild
add
push
add
data16
(bad)
sub
iret
mov
mov
mov
iret
repnz
mov
push
push
xchg
mov
ins
out
inc
les
xor
pop
jns
sbb
push
mov
sub
add
pop
sbb
push
or
fcomp
cmp
ss
cmp
cld
arpl
imul
popf
cmp
icebp
nop
mov
test
sub
and
bound
mov
xchg
repz
push
push
addr16
mov
mov
sbb
push
dec
test
retf
fwait
push
int3
fmul
es
lock
xlat
xchg
or
neg
push
inc
sbb
fldcw
sar
in
imul
lods
or
cli
aad
aad
dec
pop
add
cmp
cmp
lahf
popf
cmp
adc
mov
movs
cmp
leave
pop
stos
xor
mov
mov
and
bound
pushf
in
ds
jecxz
les
push
push
mov
xchg
inc
bound
adc
pop
xor
sahf
sti
jnp
cmp
push
jecxz
push
lahf
sub
cmp
pusha
and
adc
inc
out
shl
mov
dec
adc
pop
jnp
rcl
xchg
xchg
cmp
sub
into
(bad)
(bad)
push
cwde
test
jmp
sbb
jnp
lea
pop
(bad)
cwde
stos
popa
mov
std
test
adc
mov
push
mov
(bad)
out
(bad)
aas
mov
jg
leave
jae
sub
cs
lea
cmp
adc
pushf
cmp
jns
adc
bnd
sub
add
sub
xchg
jecxz
(bad)
pop
fcmovu
bound
out
inc
inc
adc
adc
adc
inc
ficomp
or
outs
je
jne
jne
sbb
(bad)
stos
in
cmc
xchg
cmp
xor
jp
dec
std
hlt
cs
push
pop
xor
jp
retf
push
retf
ins
fldcw
mov
mov
and
pop
push
adc
aas
push
mov
data16
fidiv
ja
xor
add
idiv
adc
mov
stos
mov
and
xchg
adc
popf
add
cmps
mov
mov
sar
outs
xor
mov
scas
in
inc
inc
and
xchg
or
add
push
pop
jmp
add
lods
jo
movs
mov
sub
cmp
adc
adc
mov
jo
jnp
pop
fcomp
dec
inc
fbstp
test
cmp
xchg
outs
pushf
dec
enter
and
imul
mov
fs
lahf
inc
lock
inc
cmp
into
inc
add
pop
push
(bad)
inc
xchg
int3
mov
mov
mov
xor
mov
(bad)
cmp
stc
cli
mov
je
dec
outs
xor
mov
out
adc
sub
lds
pop
sar
gs
outs
pop
fstp
fadd
sbb
ror
retf
mov
cdq
lea
ror
adc
rcr
jecxz
smsw
mov
ins
cdq
pop
aaa
test
call
lods
mov
xor
(bad)
out
push
xor
scas
mov
jae
jae
sar
nop
aas
xor
retf
fwait
dec
push
test
sub
cmp
push
jnp
add
and
and
and
push
pop
mov
and
aad
xor
jl
sbb
add
mov
(bad)
(bad)
loop
or
fbstp
mov
cwde
jns
and
pop
test
sbb
fidiv
nop
mov
cmp
pop
sub
je
xchg
push
aad
mov
dec
(bad)
jecxz
inc
mov
jns
dec
js
sbb
push
pop
pop
sbb
dec
pop
test
add
xor
clc
or
repz
cmp
and
and
(bad)
pop
loop
mov
in
movs
mov
jecxz
scas
mov
mov
xchg
inc
pusha
dec
mov
push
ds
mov
jae
push
inc
push
mov
call
ins
cmps
add
fisubr
or
vunpcklps
push
pop
push
sbb
mov
mov
ins
inc
add
dec
push
in
mov
xchg
push
xor
jp
gs
lods
scas
dec
inc
inc
test
(bad)
pop
mov
pop
and
xchg
fcomp
sub
xchg
test
imul
retf
aaa
inc
cwde
adc
or
aam
sahf
or
push
push
cmp
lea
adc
push
cmp
pop
cmp
stos
lods
sub
cli
icebp
jecxz
dec
xchg
mov
xor
pusha
or
out
cmp
pcmpgtd
dec
dec
ret
sti
dec
dec
mov
or
scas
jg
fidiv
out
or
lods
adc
jl
jmpw
mov
aam
mov
ror
push
test
fisubr
mov
pcmpgtw
jp
mov
inc
clc
retf
sub
gs
sub
vmread
inc
aas
push
clc
icebp
lock
into
pop
out
shl
push
add
add
xchg
inc
sti
xor
rol
cld
jp
jmp
mov
ds
sbb
imul
ror
cmp
add
jge
out
push
pop
sahf
and
jle
rcr
sbb
std
adc
mov
inc
cmps
stc
jecxz
clc
mov
cmp
sti
mov
jo
cmps
ins
loope
fwait
xor
ja
cld
lahf
xchg
leave
int3
repz
sbb
push
and
mov
adc
jmp
push
mov
repz
mov
mov
push
mov
mov
fnstcw
and
sbb
sbb
jp
and
addr16
xchg
or
movs
ja
gs
adc
mov
cmp
lea
lahf
fs
and
xor
in
mov
nop
dec
lods
movs
jge
daa
inc
dec
test
(bad)
fcomi
and
aaa
fild
aaa
fs
(bad)
rcl
pop
jmp
add
pop
sbb
aas
sub
xor
and
jecxz
mov
bound
out
ror
xchg
fld
push
lea
xor
cmp
dec
push
and
adc
jno
pop
cld
push
or
rcl
and
xchg
movs
daa
hlt
lods
sahf
cld
fild
jge
inc
lahf
push
lock
pop
jg
lea
cmps
shl
scas
dec
ret
data16
cli
imul
sahf
pop
add
mov
add
push
mov
pop
adc
xchg
mov
and
mov
push
outs
test
sbb
jmp
jecxz
jno
pop
xlat
cs
inc
dec
pop
push
sar
(bad)
in
imul
mov
je
pusha
aaa
sub
xor
mov
in
pop
push
inc
cmp
and
retf
jl
aad
jp
xchg
repnz
push
and
xchg
adc
loop
out
(bad)
call
daa
pop
xor
pop
xlat
lahf
push
int3
(bad)
or
mov
fs
push
loope
sar
loopne
bound
or
repnz
add
cmp
retf
lds
cmp
push
cdq
adc
in
js
inc
scas
add
push
les
nop
cmp
popa
je
push
(bad)
rol
aad
aaa
pop
mov
aas
xchg
mov
xchg
gs
xchg
add
pop
gs
inc
jmp
push
arpl
iret
aaa
and
cmp
stos
xchg
add
into
test
xor
shr
ds
enter
arpl
mov
mov
jno
in
mov
and
ds
pop
jl
arpl
jmp
ret
sub
push
ja
push
ret
inc
call
lods
push
pop
jae
add
test
pop
daa
sub
push
mov
and
jge
movs
pop
bound
sbb
xlat
test
in
or
jge
movs
aas
rcl
out
dec
push
cmp
arpl
pop
hlt
cli
dec
cmp
out
adc
cmp
cmp
fs
and
pop
inc
aam
mov
adc
sbb
fs
cmc
cmps
push
and
add
add
add
add
add
add
xor
sahf
pop
xlat
stos
jecxz
sub
cld
cmp
dec
in
mov
xchg
fucom
outs
pop
rcl
xchg
jbe
fsubrp
jae
sahf
mov
ds
ret
movs
int
add
or
cmp
mov
(bad)
jle
pop
inc
ret
and
sti
inc
in
pop
pop
aam
mov
cmp
xchg
jne
inc
test
cmp
cwde
fs
cmp
into
lods
jbe
or
push
jmp
mov
into
xchg
pop
aas
fnstcw
adc
rol
in
retf
stos
test
add
enter
cdq
push
and
sbb
jne
cmp
push
daa
push
lahf
leave
or
inc
clc
sbb
xchg
out
mov
shl
ins
sar
mov
leave
cmp
xor
jmp
fmul
je
adc
add
push
arpl
add
in
out
xchg
cmc
rcr
xchg
mov
ja
cmps
mov
mov
fcmovnb
jg
mov
(bad)
pop
xor
jmp
stos
aam
dec
popf
sub
repz
pushf
test
push
pushf
pop
(bad)
arpl
out
mov
cmp
adc
mov
add
sub
xchg
cmps
sub
mov
pop
lock
add
add
and
mov
repnz
inc
jmp
xor
push
jmp
cs
mov
test
enter
xor
dec
jb
pop
add
and
jo
es
in
movs
lods
mov
dec
xor
js
push
shl
aas
bound
jg
adc
data16
jmp
aam
sar
in
lock
test
inc
mov
inc
mov
pop
mov
xor
mov
inc
mov
adc
aam
mov
mov
push
es
mov
add
ret
cmp
sti
cmp
adc
inc
repnz
push
test
or
arpl
in
sub
ret
inc
mov
jmp
cld
test
je
mov
jmp
(bad)
mov
(bad)
int3
gs
dec
and
std
(bad)
jae
ret
(bad)
dec
enter
leave
and
dec
push
pop
call
xor
rcr
xchg
popa
ins
fisubr
add
into
aad
stos
mov
mov
push
imul
mov
inc
gs
in
and
inc
cmp
and
repnz
imul
xchg
or
cmp
leave
cs
xor
jne
mov
fimul
cwde
sahf
outs
jge
xchg
jb
pop
jl
iret
call
inc
fadd
and
adc
sti
pop
popa
mov
jno
popa
fidivr
outs
push
imul
mov
pop
sbb
ds
imul
nop
and
aad
syscall
cmp
stos
inc
(bad)
lock
int
hlt
arpl
pop
retf
rcr
sbb
fsub
dec
cmp
jo
(bad)
cli
and
sbb
mov
movs
pop
sub
sub
stc
add
and
lods
jmp
inc
data16
pop
and
fdivr
add
pusha
and
call
(bad)
enter
ins
ds
(bad)
ins
inc
repnz
mov
fidiv
repz
fst
pop
jmp
cmp
and
sbb
add
pop
add
clc
pop
add
xor
mov
add
or
mov
fstp
(bad)
cmp
jp
mov
fistp
call
ret
imul
jno
daa
mov
mov
mov
nop
xchg
push
push
jmp
ds
div
lock
cmp
pop
inc
loop
push
scas
aaa
add
dec
rol
aad
int
pop
es
inc
ss
and
pop
je
leave
jmp
push
cmp
retf
js
mov
dec
jb
add
xor
sub
sbb
aad
push
dec
jp
pop
and
lds
jge
adc
dec
lea
dec
test
nop
neg
sub
daa
or
stc
ror
push
lea
jns
hlt
lods
outs
jb
dec
jne
mov
(bad)
out
xchg
inc
adc
and
pop
mov
scas
icebp
mov
xchg
in
call
mov
sub
pop
jnp
sti
add
xchg
sbb
ror
(bad)
pop
fisttp
fidiv
inc
mov
(bad)
jle
xlat
mov
xchg
mov
leave
rcr
and
adc
push
or
cld
mov
(bad)
iret
das
jmp
icebp
bound
sbb
aaa
inc
retf
icebp
cmp
ds
js
jmp
mov
mov
fdivrp
xchg
and
push
ja
out
cli
jns
aas
cmp
mov
push
jp
and
cwde
fstp
jecxz
mov
sub
loop
inc
dec
mov
(bad)
push
jecxz
push
adc
adc
ret
aam
cmp
test
jb
ins
inc
pop
mov
xor
rcr
inc
and
push
aas
ins
inc
ja
inc
mov
sbb
inc
outs
jle
out
call
lock
and
add
out
and
test
scas
ins
movs
cmps
mov
mov
repz
push
pusha
mov
mov
mov
push
or
pop
sub
push
cwde
jg
out
fcomip
or
(bad)
sti
jns
in
cmps
es
(bad)
(bad)
push
in
adc
jle
outs
ins
mov
lds
jmp
or
fisub
ror
loop
push
jae
add
imul
cdq
mov
mov
jae
lods
sbb
xlat
stc
movs
push
push
fwait
xchg
mov
out
xor
dec
fcomp
jmp
das
mov
les
daa
test
call
ss
ss
pop
fild
cdq
scas
call
jae
test
pop
jns
mov
xor
sub
pop
imul
dec
sub
lods
inc
pop
xchg
sub
cld
mov
add
jg
or
cmp
test
(bad)
jle
call
and
xor
enter
jecxz
mov
retf
xchg
enter
popa
xor
jb
push
sbb
mov
xchg
daa
fwait
push
clc
ds
cmp
mov
stos
fwait
inc
jmp
mov
xchg
inc
es
dec
and
xor
xor
lds
enter
mov
add
addr16
aas
outs
outs
mov
mov
popf
fstp
pop
jecxz
cmp
mov
test
or
std
and
je
fnsetpm(287
mov
pop
sub
(bad)
into
repnz
cwde
fcom
sub
clc
pop
add
or
aas
jo
(bad)
cmp
mov
sub
adc
push
xchg
adc
mov
dec
xchg
and
into
xchg
into
aas
mov
or
inc
dec
iret
xor
(bad)
push
push
in
xchg
inc
outs
cmps
xlat
xchg
shl
bound
mov
inc
xor
xor
sbb
hlt
pop
stc
inc
jmp
inc
loopne
sub
fsub
lods
and
pop
add
mov
frstor
addr16
push
add
outs
mov
in
push
jecxz
mov
les
in
pop
jecxz
dec
adc
aad
sbb
cwde
mov
pop
ja
push
inc
cld
inc
call
cmp
add
mov
adc
or
outs
xchg
pop
push
sub
(bad)
call
es
or
mov
sbb
cmc
call
xlat
fild
ret
test
add
sub
and
ud0
push
js
dec
icebp
data16
sbb
jle
imul
js
xchg
adc
fs
or
xchg
test
repz
lahf
(bad)
push
mov
push
pushf
jb
into
not
outs
loop
mul
push
jmp
inc
or
mul
mov
ret
jp
jmp
and
rcr
push
mov
add
inc
or
(bad)
mov
mov
xor
test
mov
dec
pop
fdivr
dec
pop
xchg
call
paddq
ins
xchg
and
clc
(bad)
scas
les
pusha
repz
int
mov
jp
or
adc
jmp
adc
std
(bad)
jno
xchg
inc
(bad)
push
inc
daa
mov
cmp
test
mov
shr
adc
add
iret
xlat
sub
pop
les
jl
push
push
xchg
cmps
out
mov
pop
lahf
scas
xor
fbld
cli
mov
add
pop
loope
fwait
and
jge
mov
add
mov
shl
(bad)
call
mov
sbb
mov
ins
xchg
jp
mov
xchg
pop
loope
cmp
xor
xchg
out
cld
add
cmc
inc
pop
fisub
push
pusha
in
inc
fs
jnp
int3
inc
scas
and
or
loopne
cmc
fucomi
int
push
lock
mov
pop
adc
popa
sub
and
les
ret
test
(bad)
add
lds
xchg
push
jbe
aam
jns
sbb
aad
popf
es
call
mov
and
mov
xchg
cli
cli
and
(bad)
jo
pop
imul
sub
test
jo
xor
fild
pop
int3
movs
shl
outs
outs
addr16
jo
lahf
jns
jecxz
cmp
call
add
mov
cmp
and
or
mov
push
pop
loopne
sub
into
dec
ins
inc
and
sub
fs
add
fwait
jmp
bound
mov
icebp
inc
dec
leave
jle
js
xchg
scas
sub
dec
mov
aam
jnp
push
loope
fist
in
mov
jle
mov
pop
push
inc
hlt
rcr
ins
xchg
aad
push
cmp
pop
daa
ss
inc
int
inc
jae
push
add
xchg
cmp
jns
xor
repnz
aam
pushf
outs
(bad)
add
cmp
es
mov
ds
lahf
jne
push
aas
xchg
inc
(bad)
sti
es
loopne
repnz
xchg
ss
ror
dec
clc
pop
stc
repz
sar
mov
adc
adc
dec
out
movs
pusha
daa
cmps
xchg
ficomp
sub
rcr
(bad)
jo
sbb
in
cmp
retf
aaa
jl
sar
ret
pop
rcr
lahf
add
add
push
add
xor
je
ret
mov
cmp
mov
mov
mov
popa
lock
cwde
cmp
(bad)
adc
sbb
add
aam
loopne
jo
(bad)
push
add
xlat
push
xchg
inc
push
sub
jl
div
out
inc
hlt
xchg
test
xor
adc
fsubr
in
cmc
clc
adc
jge
popa
popf
or
xlat
mov
fiadd
loopne
push
add
ss
lahf
jmp
cld
adc
cs
(bad)
aad
clc
fwait
xor
jne
xchg
mov
inc
jl
jmp
aas
inc
pop
adc
test
repnz
mov
jl
pop
jecxz
sbb
cmp
cmp
call
push
frstpm(287
pop
out
sbb
push
(bad)
aam
xchg
mov
mov
push
or
repz
xchg
xor
xchg
or
jne
inc
shl
stos
cmp
out
dec
fbstp
ins
mov
shl
jecxz
add
sbb
loopne
pop
rol
sbb
es
cli
push
inc
sbb
xor
pop
mov
sub
clc
imul
jbe
or
aaa
add
pop
retf
and
dec
imul
mov
sub
movs
into
jg
cmp
mov
test
mov
arpl
retf
push
fild
int
test
test
fs
fist
aad
(bad)
mov
fstp
push
jle
loope
test
cmps
inc
xor
sub
je
loope
retf
gs
stos
dec
mov
outs
push
and
fadd
adc
mov
into
sub
outs
stos
sub
mov
mov
out
xchg
cmps
call
mov
out
loope
jo
cs
sub
ja
out
push
repz
push
icebp
das
mov
inc
mov
xor
push
aad
movs
mov
cmps
cmp
ins
adc
mov
cwde
dec
dec
mov
push
popf
retf
jp
(bad)
xchg
cdq
lods
stos
(bad)
popa
out
fyl2x
cli
ss
dec
test
iret
dec
aaa
iret
jecxz
xadd
ror
mov
mov
or
stc
add
sti
rol
adc
xchg
sti
mul
popa
mov
push
shr
fsubr
mov
enter
jge
inc
fst
test
aam
mov
js
mov
ins
hlt
cmp
out
push
arpl
sub
cmps
sbb
mov
mov
out
mov
scas
shl
test
test
ret
rcl
pop
enter
test
lahf
into
push
pop
cmps
pop
jae
mov
(bad)
xchg
stos
(bad)
push
in
lds
push
xchg
xchg
test
push
mov
sbb
fs
jle
cmp
bnd
inc
iret
dec
mov
test
ds
push
or
ins
lds
inc
movs
push
imul
inc
mov
popa
jmp
(bad)
cmp
(bad)
mov
in
inc
cld
scas
inc
ds
test
jg
fs
test
les
shl
push
mov
repnz
loop
jo
inc
cmps
inc
push
repnz
lahf
dec
jle
jmp
addr16
jmp
and
sub
cmp
cmp
lea
push
xchg
je
sbb
xor
ins
add
pop
dec
out
imul
aam
mov
(bad)
cld
add
inc
(bad)
xchg
push
(bad)
retf
fst
mov
xchg
shrd
cmps
dec
push
jae
call
scas
in
jecxz
add
(bad)
xor
xchg
ins
in
jmp
cmp
mov
aas
inc
loop
in
or
mov
mov
mov
sbb
xor
xor
add
retf
inc
sbb
jl
and
or
adc
pusha
or
fsubr
fiadd
shr
movs
(bad)
lock
test
add
dec
lea
in
movs
adc
movs
into
and
nop
push
push
xor
pop
pop
push
shl
push
ror
xor
push
jle
ss
fwait
std
sub
pop
mov
call
push
jb
sbb
push
outs
loopne
jnp
cmps
and
push
jb
jb
and
js
adc
in
or
push
push
dec
pop
sahf
(bad)
adc
inc
mov
out
repnz
xchg
pop
sbb
test
and
xchg
jbe
hlt
sub
les
sahf
ror
mov
je
sbb
inc
cmp
add
mov
xchg
inc
push
mov
shl
fldcw
jg
dec
sbb
xor
add
pushf
cmp
push
clc
iret
mov
dec
push
xchg
add
inc
cmps
lods
add
aas
mov
imul
sub
inc
mov
jns
loop
adc
jb
lods
mov
(bad)
sbb
sahf
out
xor
rcl
shl
cmp
mov
pop
jbe
repnz
iret
and
daa
mov
cld
lea
nop
mov
xchg
popf
and
xchg
outs
and
dec
sbb
(bad)
stc
(bad)
int
push
push
push
push
and
in
add
pop
aad
push
push
popa
or
clc
(bad)
fwait
int
mov
arpl
mov
add
xchg
mov
pop
jg
ja
push
adc
ss
mov
xchg
jae
(bad)
jnp
sub
lahf
xor
or
jmp
xor
test
cld
and
(bad)
mov
sbb
pushf
push
test
call
mov
lock
nop
jae
jo
or
xor
pop
and
call
push
movs
mov
outs
aad
pushf
jmp
mov
aad
pop
stos
xchg
(bad)
pop
xor
sbb
popa
ficom
into
xor
or
mov
and
lea
mov
or
mov
int
mov
dec
shl
in
push
aas
sbb
cmc
out
or
xor
push
cdq
jb
dec
(bad)
hlt
lahf
mov
cdq
dec
xor
sbb
and
jg
mov
(bad)
mov
sahf
dec
int
pop
retf
aam
lahf
jae
popf
and
add
add
push
add
fstp
adc
mov
jmp
jl
nop
(bad)
movs
shl
icebp
mov
mul
push
adc
lods
div
inc
sti
push
sti
nop
fild
imul
lahf
lods
jns
or
jecxz
dec
cli
jnp
ins
xlat
scas
shl
inc
(bad)
movs
sbb
into
jl
xchg
fcmovne
sbb
repz
in
mov
sub
lock
xchg
je
push
rcl
dec
(bad)
movs
rcl
lahf
mov
scas
cs
imul
iret
pop
or
retf
movs
push
mov
pop
add
adc
in
in
ins
xlat
bound
inc
test
loop
jmp
push
rcr
aaa
add
(bad)
ja
popa
fld
stos
sbb
sub
or
and
push
sub
cmp
push
test
mov
fcom
js
mov
add
pop
in
and
add
lods
pop
or
push
out
cmp
sti
adc
repnz
dec
retf
les
cmp
inc
clc
loopne
lock
sub
sub
pop
int
sub
movntq
daa
adc
loope
pop
jb
out
jmp
push
mov
call
add
and
stc
push
add
fdivr
lods
data16
xlat
clc
call
and
outs
movs
sub
or
out
mov
lods
enter
jp
fcmovu
mov
mov
jbe
cmp
test
inc
jne
aad
or
inc
dec
out
inc
in
stos
and
ins
aad
loop
or
cmp
cmp
sti
ja
dec
je
jmp
sub
int
es
ins
fistp
(bad)
lahf
fmulp
mov
pop
mov
lea
hlt
in
cwde
mov
mov
(bad)
(bad)
jb
dec
pop
jno
jo
push
ins
jle
mov
cbw
inc
in
xor
jo
jg
stos
jmp
sbb
sbb
stos
jl
sbb
aad
stos
cmp
leave
adc
push
(bad)
cmp
cli
sbb
aam
(bad)
jmp
stos
jns
or
xchg
mov
scas
add
mov
inc
les
lods
stc
cmovo
or
jmp
jne
mov
rcl
les
pop
jl
retf
aad
dec
outs
or
call
sub
call
out
sbb
sub
fstp
ret
push
adc
int3
push
mov
cmps
dec
jno
neg
stc
ss
(bad)
push
adc
xchg
or
(bad)
in
lds
push
and
aad
sbb
jle
sub
xor
add
push
ret
gs
push
scas
sub
pop
xchg
mov
xchg
mov
inc
add
xor
cmp
jno
cmp
(bad)
cmp
ss
fwait
xchg
mov
ds
pop
push
rcl
mov
jns
in
popa
sahf
stos
xchg
aam
cli
or
mov
repz
and
push
push
les
push
cmp
add
dec
aaa
retf
and
cmp
push
xor
and
fidiv
pop
xor
mov
fst
pop
xor
jbe
icebp
mov
jmp
jbe
mov
loopne
mov
jg
mov
test
mov
mov
lahf
xchg
or
xchg
xlat
and
xchg
mov
dec
aad
add
shl
pop
and
es
mov
cmp
dec
xchg
enter
rcr
je
mov
mov
(bad)
bound
ret
mov
aaa
jnp
adc
jle
sub
add
sbb
ins
xor
ret
or
out
and
popa
push
or
std
push
add
loop
jo
pop
inc
mov
in
aam
dec
mov
xlat
or
adc
push
(bad)
mov
mov
mov
into
hlt
iret
cdq
aas
jecxz
xchg
sbb
cmp
push
aad
add
push
hlt
lea
pop
mov
mov
mov
push
sbb
(bad)
ins
xor
stc
and
fadd
sbb
pop
cmp
arpl
jmp
dec
in
out
dec
add
neg
in
inc
loope
pop
cmp
sub
mov
pop
cli
iret
fdiv
std
adc
jmp
or
and
add
xchg
das
int
mov
popf
aas
sbb
adc
and
xchg
mov
jo
(bad)
dec
(bad)
(bad)
stos
out
int3
or
sub
xor
pop
mov
int3
sub
sahf
dec
mov
in
mov
jmp
and
xchg
(bad)
dec
xchg
imul
mov
sbb
lock
arpl
pop
leave
ins
jmp
sub
shr
inc
pop
adc
add
cmps
out
mov
sbb
daa
fwait
jo
in
gs
in
scas
jo
cs
outs
inc
(bad)
xor
dec
das
in
inc
push
dec
and
into
fidiv
(bad)
frstor
push
ins
or
mov
aas
and
jle
inc
cmps
mov
popa
or
mov
push
jno
adc
(bad)
dec
cmp
adc
adc
push
dec
dec
ins
jnp
fwait
shr
scas
aad
ror
add
push
sub
sbb
cwde
mov
ds
mov
mov
or
retf
xchg
retf
inc
pop
push
adc
int
add
sub
aad
xchg
xchg
aad
jmp
fcomi
inc
xchg
repz
lock
int3
push
inc
lods
icebp
int
mov
or
imul
jmp
push
or
push
dec
pop
sti
loop
mov
and
lock
ins
sub
mov
inc
pop
adc
in
cmps
adc
popa
pop
ins
dec
inc
test
test
iret
jns
inc
xchg
pop
pop
jp
cs
in
push
fldenv
lock
add
sub
ror
cmp
add
mov
jp
dec
inc
mov
add
shl
add
add
repnz
sahf
push
dec
and
sbb
int
in
and
test
inc
and
enter
pop
sbb
cmp
loop
jg
cmps
adc
mov
lods
jge
lock
push
out
mov
push
dec
imul
scas
out
into
pop
mov
fstp
rcr
ficom
mov
inc
loop
dec
add
stc
popa
out
icebp
adc
fidivr
mov
test
sbb
mov
sub
xor
(bad)
js
push
out
ins
adc
test
jbe
(bad)
das
jb
sbb
push
aaa
push
(bad)
jl
or
sub
fs
or
push
inc
icebp
mov
(bad)
push
xchg
inc
popf
or
xchg
sub
js
jb
add
cmp
xor
mov
dec
add
pop
adc
push
lahf
jnp
xchg
out
xchg
fisttp
jnp
cmp
stc
and
jecxz
mov
dec
xchg
xchg
or
cmp
jns
pop
jl
(bad)
pop
fbstp
pop
(bad)
pop
mov
mov
aas
inc
gs
mov
fdivr
add
pop
data16
dec
ret
adc
dec
pop
stos
(bad)
dec
(bad)
int3
push
adc
shr
rcl
seto
mov
sbb
push
cli
sub
xor
sbb
lea
pop
mov
into
adc
adc
mov
fdivp
out
sub
daa
cmps
(bad)
xchg
mov
aas
sbb
outs
inc
inc
das
sbb
xor
cmps
jg
mov
push
push
jo
xor
pusha
das
xor
mov
sub
imul
and
imul
outs
xchg
int3
adc
inc
push
push
ret
push
jmp
sub
ss
xchg
mov
push
daa
pop
scas
imul
test
int
jne
dec
push
ss
add
pop
inc
sub
arpl
push
je
das
xor
xor
std
mov
xchg
fwait
xor
inc
sbb
js
iret
xor
cdq
cmp
sar
dec
cmp
retf
xchg
xor
lods
cmps
daa
jns
jecxz
cmps
xchg
mov
pop
in
js
push
or
mov
add
push
and
repnz
cmp
inc
(bad)
js
dec
mov
rol
ror
iret
movs
jl
mov
cmp
push
js
in
fcmovnb
mov
nop
sub
sbb
dec
xor
fdivr
les
test
push
sub
(bad)
pop
cmc
faddp
mov
push
adc
shr
pop
sbb
mov
(bad)
les
jb
inc
or
icebp
cmp
jmp
lock
or
rcl
cs
cmp
syscall
lahf
in
mov
mov
adc
jns
loop
pop
je
ja
aaa
ins
ds
call
out
jmp
daa
push
hlt
push
jns
rol
inc
cmps
aam
repz
repnz
jo
scas
imul
add
jbe
pushf
push
lahf
mov
xchg
pop
xor
pusha
fsub
inc
mov
pushf
shl
dec
(bad)
mov
sahf
sub
cli
jmp
clc
xor
adc
int
sbb
dec
out
loop
lods
xor
sbb
push
fist
jbe
in
in
mov
test
enter
inc
call
shl
retf
lods
push
stos
sbb
cmp
lods
and
ret
xor
mov
add
cmps
sahf
loope
and
jae
ja
cmp
and
cmp
dec
and
adc
cmp
sbb
loope
ds
jp
and
mov
in
pusha
mov
or
loope
fadd
in
cmp
cmps
xchg
aam
jno
lods
ins
and
push
data16
cmp
push
jg
sub
mov
lahf
pop
popa
int
jge
test
jmp
call
jg
les
es
cld
xor
adc
daa
mov
test
cld
dec
inc
xchg
mov
out
cmp
out
stos
paddq
jp
or
mov
mov
imul
mov
dec
into
and
add
dec
mov
jecxz
popf
mov
ror
movs
mov
mov
jae
imul
shl
pop
jmp
mov
mov
clc
cli
cmc
mov
cmp
(bad)
fs
push
imul
retfw
add
cs
rcr
push
mov
jg
repz
push
sbb
ror
mov
mov
shl
repz
dec
bound
mov
pop
pop
jb
out
lods
pop
ins
sub
xchg
jge
sub
shr
and
mov
outs
ja
mov
jmp
loop
and
arpl
gs
push
jae
lahf
mov
outs
test
bound
cmp
adc
imul
mov
push
(bad)
mov
aad
dec
ret
(bad)
mov
les
mov
lahf
movs
and
and
ins
pop
inc
in
mov
pop
push
cs
add
xchg
add
retf
sub
inc
xchg
icebp
cmps
ja
and
aaa
retf
pop
cmp
stos
pop
jnp
es
es
int3
aaa
sbb
pop
gs
add
loop
adc
mov
hlt
movs
pusha
lock
pop
mov
movs
repz
in
cmc
lock
mov
test
test
pop
xlat
clc
fwait
adc
xchg
div
mov
movs
ror
xlat
(bad)
arpl
lea
pop
aad
in
imul
outs
add
or
idiv
fidivr
loopne
(bad)
aas
sbb
or
nop
mov
mov
mov
shl
pop
div
inc
cli
clc
pop
mov
es
cmc
lock
pop
adc
and
test
add
push
das
jne
sub
sub
aad
push
popw
mov
movs
xor
mov
fadd
jge
neg
sub
pop
mov
call
call
jae
cmp
add
loop
xor
or
push
mov
xchg
btr
js
(bad)
mov
sahf
xor
cmc
dec
dec
stos
and
iret
retf
mov
jo
inc
shl
stos
push
out
in
sub
loop
fbld
movs
leave
sar
fild
add
jmp
data16
mov
adc
sub
jo
or
sbb
ins
stos
xchg
int3
test
adc
jae
call
sahf
pop
les
ins
add
add
add
add
je
xor
popa
and
cmp
add
add
aad
xor
and
fst
xchg
push
add
push
ins
test
ret
inc
jecxz
shl
mov
fdiv
loope
xor
xlat
dec
or
icebp
add
test
loope
fidivr
mov
cmp
nop
lds
je
fistp
pushf
xchg
daa
call
pop
ins
dec
iret
sub
dec
fwait
mov
xor
in
(bad)
in
inc
adc
inc
test
mov
xchg
(bad)
outs
mov
xchg
int
neg
mov
cld
sbb
(bad)
mov
dec
imul
mov
sti
jp
cmps
xlat
std
aas
cmp
mov
jbe
stos
mov
in
adc
pop
sti
icebp
mov
mov
leave
add
pop
push
push
mov
sar
ins
neg
adc
(bad)
aam
test
xchg
adc
push
adc
push
test
fimul
gs
inc
and
rol
rcr
xor
sbb
mov
aad
push
mul
pop
or
jl
bound
sti
or
xor
sbb
fist
lahf
repnz
jmp
add
jp
jge
nop
ds
pop
jp
imul
push
pop
data16
mov
sbb
cmp
shl
dec
mov
dec
xor
stos
pop
push
daa
js
and
xchg
ss
mov
dec
dec
push
push
xchg
call
data16
push
jb
inc
aaa
(bad)
stc
or
in
jecxz
(bad)
into
cld
call
in
ror
(bad)
rol
and
add
call
sub
(bad)
jo
aad
jo
icebp
push
adc
xchg
test
sti
pop
jne
fbld
vfrczsd
add
sbb
mov
push
test
push
inc
push
jbe
adc
mov
sub
out
fwait
loope
daa
mov
repz
and
aad
(bad)
leave
(bad)
mov
cwde
and
add
xor
sbb
fs
movs
ror
pusha
out
(bad)
cmps
outs
and
jmp
sbb
and
add
jmp
jmp
pop
repnz
or
mov
cmp
xchg
loope
fwait
adc
sub
jmp
nop
or
xchg
pop
imul
inc
lea
mov
adc
ja
in
cmc
call
cli
pop
lods
les
cmp
ins
ret
(bad)
shl
pop
and
push
test
jo
dec
outs
jne
add
and
ds
daa
ret
cmp
outs
aaa
push
inc
push
mov
push
xchg
dec
lods
jno
mov
scas
xor
add
jnp
call
mov
jge
(bad)
hlt
in
add
outs
inc
mov
loop
ficom
in
jns
mov
push
sub
pop
mov
pop
in
pusha
sbb
xor
in
or
jnp
or
cmp
cs
add
add
add
add
add
dec
mul
ds
push
lods
sbb
movs
adc
adc
fst
cli
loope
and
inc
push
in
ja
or
mov
lds
mov
mov
leave
or
bound
adc
adc
dec
xchg
mov
(bad)
call
jmp
push
ficomp
call
mov
loopne
inc
in
(bad)
mov
push
movs
ins
(bad)
sbb
(bad)
mov
xchg
rol
pusha
mov
sbb
cmp
mov
or
push
in
test
cmp
sbb
icebp
leave
dec
add
pop
ss
mov
ins
ret
inc
pushf
pop
xor
mov
addr16
pop
js
push
inc
pop
scas
and
dec
lods
repz
sub
call
in
adc
movs
cli
inc
jecxz
jmp
arpl
fdivr
mov
movs
sub
push
fsub
or
ss
call
clc
mov
repnz
xor
js
lds
leave
push
gs
fnsave
cmp
jmp
arpl
pop
js
mov
stos
popf
aad
mov
cmps
rcr
shl
shr
xor
cmps
(bad)
dec
cmp
mov
mov
mov
dec
call
gs
loope
or
mov
aad
jno
or
push
mov
rcr
push
sbb
cld
pop
sub
pop
mov
xchg
int
pushf
push
jne
mov
ds
(bad)
loope
jae
add
sub
bsr
mov
out
fsubr
mov
jl
jbe
mov
loopne
or
(bad)
out
pop
cld
outs
pusha
dec
cs
sahf
push
out
lods
and
push
out
(bad)
mov
gs
sbb
xor
cli
add
add
add
add
and
xor
lds
and
nop
sub
jp
out
push
loopne
and
and
stos
mov
pusha
pop
sub
xlat
out
lea
jl
sub
mov
push
xchg
lods
clc
pop
xchg
loopne
(bad)
sbb
shl
ds
push
inc
outs
pop
or
push
mov
xchg
js
push
dec
rcr
(bad)
movs
xchg
dec
daa
xchg
cld
and
icebp
test
inc
jmp
xchg
out
(bad)
xchg
in
mov
addr16
imul
out
sbb
and
pop
adc
jo
adc
push
movs
or
les
ret
sub
dec
jmp
add
dec
sbb
sub
pushf
je
and
fwait
mov
cs
xchg
adc
xchg
jle
xchg
mov
pop
aas
push
inc
scas
test
mov
ret
ds
and
bswap
xchg
ds
pop
or
cmp
sub
cmp
xor
daa
std
and
add
in
inc
arpl
stos
push
(bad)
call
mov
fmul
adc
push
cmp
imul
cmp
daa
jae
xchg
pusha
call
aad
mov
inc
dec
hlt
xor
std
add
cld
les
sbb
in
mov
jnp
mov
nop
cs
sbb
loop
jno
mov
sbb
pop
call
xchg
fcmovbe
popf
jo
shr
push
inc
sbb
pop
rcr
cmp
push
pop
pop
push
fild
jnp
jnp
and
pusha
dec
cdq
adc
ds
mov
les
mov
popa
mov
rol
xlat
in
sar
cwde
bound
in
(bad)
and
xor
out
(bad)
mov
fistp
iret
and
mov
push
cmp
ins
or
data16
sbb
fsubr
scas
retf
fsub
lods
sbb
dec
add
imul
pop
lods
dec
pop
mov
shl
popa
loopne
movs
rcl
lahf
call
xor
add
cs
inc
ja
int
fild
and
fucom
(bad)
mov
adc
and
std
pop
outs
aam
inc
sub
ret
xchg
pop
push
in
sub
pop
or
cmps
call
xchg
mov
xchg
in
xlat
aaa
ins
or
les
xchg
inc
adc
xchg
mov
add
add
cmp
mov
popf
int3
jmp
loop
cmp
dec
into
mov
cmp
lods
mov
adc
out
cli
fild
mov
test
xchg
push
mov
(bad)
(bad)
(bad)
inc
adc
sbb
dec
into
xor
xchg
fwait
(bad)
pop
mov
mov
inc
xor
jns
mov
jb
rcr
sbb
inc
or
iret
lea
loopne
mov
leave
aam
scas
jb
mov
int3
jno
mov
sbb
mov
fld
xchg
call
in
xlat
repnz
movs
inc
inc
in
loop
xchg
lds
push
xor
or
inc
pop
not
xchg
mov
mov
mov
cdq
retf
out
loope
dec
shr
cmp
call
(bad)
sbb
pop
sbb
fidivr
test
or
sbb
mov
dec
outs
mul
adc
sub
mov
mul
shl
fwait
push
sub
mov
fwait
inc
sbb
scas
test
ss
xor
push
fsub
nop
cmc
cli
push
in
pop
fisubr
shr
(bad)
sub
lods
add
add
add
add
imul
mov
daa
xchg
inc
add
dec
sbb
fadd
popa
jbe
inc
(bad)
or
xor
mov
pop
push
jl
xlat
mov
outs
out
test
xor
(bad)
arpl
dec
jg
mov
mov
adc
cmp
adc
sbb
hlt
pushf
mov
cld
push
leave
and
fbstp
xchg
cdq
test
and
scas
pop
mov
fs
xor
pop
and
out
mov
ja
call
das
out
fs
imul
dec
or
cdq
sbb
pop
xchg
push
pusha
push
jo
add
xor
jae
dec
shl
div
pop
push
mov
and
push
jp
mov
scas
mov
mov
adc
jnp
add
dec
out
std
aam
ins
hlt
and
test
cmp
cli
add
push
imul
(bad)
jb
ret
cld
mov
ss
cmp
arpl
dec
sbb
retf
inc
daa
adc
cdq
scas
sbb
int
xchg
dec
and
cwde
test
push
call
lahf
outs
sahf
and
xor
js
jmp
das
sub
xchg
(bad)
rcl
xor
pop
retf
jno
cmp
xor
and
retf
mov
mov
dec
pop
stc
push
ret
xchg
pushf
jle
xor
test
movs
shl
adc
xchg
xchg
mov
imul
lahf
in
sahf
(bad)
add
xchg
aad
and
sub
neg
in
call
push
cmp
movs
cmc
xor
push
int3
add
lahf
cld
addr16
push
addr16
mov
and
add
cmps
inc
repz
nop
push
iret
pop
cs
js
jmp
stos
cmp
xchg
adc
xor
imul
icebp
sahf
push
imul
dec
ds
jmp
mov
jp
ins
les
adc
add
imul
xchg
pop
sahf
shr
push
adc
pop
or
jle
sub
cmp
xchg
daa
mov
jns
xchg
fmulp
movs
mov
or
(bad)
aam
fisttp
pushf
dec
pop
inc
test
dec
or
sahf
int3
sub
into
xchg
lock
push
or
adc
push
test
jb
add
push
push
xor
cmp
mov
dec
ret
out
mov
adc
mov
pop
aaa
mov
push
mov
add
je
pop
xchg
or
sbb
mov
pop
push
mov
xchg
xor
mov
mov
retf
call
xchg
and
int
adc
pop
jge
or
cmp
addr16
test
xlat
hlt
xor
push
cmp
(bad)
js
xchg
inc
sbb
fiadd
dec
inc
and
jno
jmp
pop
neg
xchg
xchg
jmp
lods
mov
pop
es
push
xchg
sbb
das
mov
movs
xchg
and
cli
mov
inc
inc
sbb
dec
inc
xor
gs
xor
adc
cdq
cmp
test
aaa
nop
adc
or
mov
pop
scas
loop
push
movs
ss
retf
fimul
outs
xor
dec
push
sbb
scas
jne
das
jl
cmps
sbb
push
xor
xor
(bad)
in
ltr
aaa
gs
ds
dec
cld
xor
mov
mov
mov
scas
or
mov
jge
fadd
ins
lods
pop
fdiv
enter
mov
xchg
pop
stos
cli
cmps
mov
pop
dec
cmp
in
adc
movs
int3
push
retf
fistp
call
loopne
shr
or
stos
rcr
push
mov
ja
mov
sub
push
jbe
mov
pushf
fwait
(bad)
mov
adc
in
adc
dec
xchg
mov
popa
cmps
inc
dec
dec
xor
add
jecxz
jmp
xchg
fistp
sub
stc
lods
xor
outs
dec
or
cmp
daa
mov
das
xchg
ja
xchg
push
or
sub
clc
jb
xlat
xchg
ficomp
test
daa
cwde
fwait
retf
lock
inc
les
or
ret
push
mov
call
ret
sub
mov
mov
cld
mov
mov
xor
or
inc
pusha
sub
fist
mov
adc
pop
into
dec
xor
mov
je
aas
dec
aas
mov
jmp
xlat
xchg
jnp
mov
sbb
mov
push
push
mov
and
int3
xchg
and
out
sbb
and
cmp
retf
repz
sahf
stos
or
popf
mov
add
test
mov
jne
cmp
cmc
push
add
xchg
cmps
sti
pop
inc
outs
popf
and
sub
sbb
mov
and
call
adc
out
xchg
xor
ret
gs
dec
outs
mov
jo
out
mov
xchg
push
je
mov
inc
push
dec
mov
(bad)
xchg
jmp
xchg
pop
mov
add
push
sbb
(bad)
fisttp
mov
sub
ficom
add
jb
add
and
add
push
add
fisub
pop
mov
test
cs
or
mov
adc
mov
fiadd
mov
les
push
jne
call
add
xor
pop
outs
push
or
in
scas
fs
cmp
js
push
jge
pushf
cmps
outs
shr
pop
fidivr
inc
xor
sbb
loop
jle
loopne
daa
push
fidivr
or
add
leave
xor
test
mov
add
mov
fnstenv
or
sub
and
xchg
inc
popf
xchg
popa
fdiv
les
rcr
adc
out
arpl
(bad)
rcl
into
in
(bad)
mov
dec
mov
push
(bad)
dec
out
jp
daa
mov
ds
and
leave
cmp
xchg
sub
adc
dec
in
xchg
mov
sub
pop
dec
shr
add
pop
dec
popa
out
rcr
or
sub
pop
in
add
jno
mov
xor
jns
mov
cmp
gs
mov
xchg
stos
mov
sar
xor
xor
movs
jnp
jle
sub
outs
(bad)
rol
je
push
push
inc
push
cli
adc
es
pop
scas
pop
(bad)
add
dec
rol
shl
mov
and
adc
repnz
jb
push
push
sub
jecxz
or
loope
cli
xor
xchg
fcom
push
cmp
xor
daa
lock
pop
out
adc
retf
jns
mov
shl
add
test
dec
fidiv
or
mov
mov
mov
cmc
adc
add
ss
fisttp
dec
retf
pop
jo
sub
jmp
dec
bnd
pop
mov
and
sub
push
push
dec
cmp
outs
movs
icebp
jmp
sub
cmp
xchg
loop
inc
lds
fst
call
pop
jbe
div
or
sub
dec
cmp
scas
inc
dec
cmp
not
stos
cli
dec
outs
adc
movs
cld
ror
les
imul
and
(bad)
sub
mov
stos
dec
cmc
sbb
js
jmp
push
mov
push
pop
rcl
out
fsub
push
lock
inc
ins
mov
lea
aas
(bad)
sbb
scas
test
fcmovnbe
inc
dec
xor
fs
mov
scas
outs
loop
mov
jne
mov
idiv
dec
rol
out
xor
movs
arpl
ret
or
int
pop
lds
leave
out
jmp
cmps
ds
(bad)
scas
fimul
pop
dec
cmp
mov
cmp
pop
xchg
rol
mov
or
sub
inc
adc
cmp
test
xchg
xor
ret
and
addr16
and
mov
gs
int
pop
lea
jo
in
add
ret
jbe
or
cs
xchg
into
xor
adc
je
aad
mov
clc
push
inc
popf
dec
cmc
mov
inc
inc
ins
push
pop
retf
out
popf
dec
or
sbb
aam
ret
rol
add
add
add
inc
add
test
ror
(bad)
movs
and
adc
or
xchg
jmp
movs
ins
test
fsubr
pop
mov
in
push
fwait
adc
fist
xor
mov
out
xchg
in
(bad)
sbb
mov
jnp
cmps
jbe
aad
inc
or
or
repnz
push
cmps
add
mov
push
das
mov
jae
push
jo
push
das
pop
cmp
jmp
sti
or
cld
or
jnp
and
outs
mov
fwait
cmc
fs
fsubr
push
add
jne
add
and
jl
rcl
cmp
ret
lahf
xor
rcr
inc
cs
add
inc
lock
lahf
fimul
js
adc
sbb
and
jg
bnd
fist
sar
xor
jge
and
cmp
xchg
lods
pop
add
jle
xchg
hlt
cdq
shr
leave
jle
lea
fwait
cmp
cmps
mov
push
mov
jl
scas
cmps
iret
mov
xchg
stc
outs
mov
inc
or
dec
pop
lods
adc
sbb
das
fcmovnu
inc
and
ja
je
mov
cld
mov
popf
imul
sub
adc
cmp
sbb
shl
push
xor
ds
pusha
(bad)
mov
icebp
rcl
mov
adc
imul
mov
sti
test
xchg
jle
es
pop
stos
xor
cmps
inc
pop
cmp
repnz
and
outs
test
lahf
cmp
xor
out
pop
imul
jmp
lds
fidiv
addr16
rcr
jmp
adc
xchg
push
movs
hlt
daa
push
enter
jmp
fcmovnb
movs
inc
dec
cmps
scas
popf
dec
cmp
mov
fadd
retf
test
fldl2e
stc
jb
pop
add
push
push
xchg
dec
adc
dec
jmp
aas
xchg
mov
mov
dec
pop
out
add
dec
push
stc
mov
clc
push
pop
mov
jmp
sahf
div
xor
sub
sahf
fwait
out
mov
in
xchg
pop
scas
dec
dec
rol
sbb
arpl
cmp
mov
push
sar
cmp
out
mov
inc
push
fistp
jp
pop
and
cmp
sahf
fdivr
mov
in
push
das
sub
out
pop
pop
push
push
nop
(bad)
out
scas
cmps
mov
(bad)
pop
mov
sar
fcmovb
imul
jnp
pop
cmp
cmp
sub
cs
in
fld
and
stos
and
enter
sub
or
int
jo
dec
ins
add
clc
clc
add
push
out
stos
lock
mov
rol
add
bound
adc
test
jmp
cwde
(bad)
imul
xchg
mov
icebp
push
cs
pop
push
addr16
push
cld
add
in
xor
pop
jns
cmc
addr16
imul
nop
ja
mov
dec
movs
pop
aas
mov
xlat
inc
adc
xchg
add
sbb
fwait
xchg
sub
js
loope
repz
cwde
push
aam
int3
push
or
push
dec
nop
je
mov
ins
xchg
dec
fisttp
cmp
xor
and
test
sahf
test
ins
adc
pop
jne
test
pusha
outs
dec
mov
lods
leave
jecxz
icebp
dec
adc
(bad)
cmp
inc
mov
mov
xor
pop
jmp
xchg
das
push
pop
and
jmp
call
xchg
push
push
aas
jg
shr
xor
cdq
jae
imul
pop
loope
lock
je
xchg
or
lea
xchg
rcl
dec
xor
or
sub
sbb
fs
sub
bound
fiadd
dec
ja
mov
adc
scas
jecxz
mov
outs
lds
adc
xchg
js
mov
leave
dec
aas
mov
and
jnp
or
aas
imul
or
mov
jle
ja
xor
cmp
pop
dec
dec
stos
jae
pushf
mov
jae
(bad)
and
scas
pusha
xor
push
ss
leave
push
cmp
cmp
shl
sbb
xchg
jl
jge
pop
int
imul
dec
sar
xchg
push
push
repz
push
out
mov
jg
addr16
retf
jg
sahf
push
xchg
mov
(bad)
push
push
inc
repz
sbb
push
loope
push
aaa
sbb
mov
dec
and
fld
push
pop
mov
mov
inc
push
dec
mov
xchg
sbb
jg
xlat
ror
stos
daa
loopne
sbb
in
int
out
adc
(bad)
jmp
pop
inc
cmp
pop
pushf
shl
dec
js
dec
sub
pop
mov
loope
fsub
fisttp
ror
call
sbb
adc
push
sub
(bad)
shl
inc
lock
daa
sbb
test
inc
adc
jb
push
rol
mov
xor
pop
and
retf
or
sbb
mov
sahf
mov
inc
loop
fdivr
(bad)
xor
cli
and
or
enter
aam
jnp
xchg
adc
sti
add
push
out
dec
cli
mov
jp
push
retf
nop
test
push
sub
lods
loopne
or
leave
lods
sbb
push
dec
and
jmp
scas
adc
add
add
xor
pop
sub
cmp
xchg
ds
push
lods
mov
mov
pusha
cmp
adc
inc
pop
addr16
imul
mov
mov
ins
inc
push
add
add
das
xchg
out
sub
add
add
add
add
add
xor
das
inc
jg
cmp
mov
jle
mov
push
shr
push
movs
cmp
push
repnz
mov
stc
call
or
(bad)
sbb
cmp
mov
ss
add
inc
xchg
retf
cmp
retf
fisubr
fwait
sbb
sub
pop
add
data16
jno
cmp
test
fwait
pushf
dec
in
sub
adc
jae
jnp
jecxz
or
jecxz
sbb
arpl
cwde
pop
(bad)
ins
imul
fadd
mov
push
adc
jecxz
clc
and
arpl
pop
push
lods
fnstsw
les
gs
test
xor
jne
push
mov
push
fld1
nop
jp
xor
mov
pop
jb
or
push
push
xchg
mov
popf
cmp
xchg
pop
test
fsub
mov
and
add
(bad)
xchg
jb
pop
rol
push
inc
das
scas
in
push
jl
popf
mov
lea
cmp
retf
ins
call
sub
or
sub
(bad)
sub
mov
jns
dec
in
cmp
sub
mov
es
add
sar
fisubr
push
ins
pop
or
test
inc
out
cld
or
into
push
pushaw
cmp
push
jge
mov
sahf
in
loop
sub
pop
xlat
int3
add
add
repnz
(bad)
std
push
inc
retf
hlt
in
mov
cdq
cmp
pop
popf
bound
add
ss
mov
or
imul
and
push
mov
test
jmp
stc
in
ja
xchg
mov
adc
(bad)
jns
ret
dec
in
mov
jo
out
ror
cli
adc
loopne
ret
inc
fstp
jecxz
nop
inc
pop
pop
xchg
push
pop
jae
test
jae
repz
sti
in
retf
or
daa
mov
cld
sar
repz
lods
aad
jbe
jae
daa
mov
and
pop
cli
das
mov
xor
cmp
dec
(bad)
or
out
aam
or
sub
outs
pop
jl
scas
sub
xchg
pop
push
inc
ss
jb
shl
mov
out
add
stos
sbb
mov
(bad)
lds
or
cwde
pushf
std
xlat
add
cmps
jnp
rcr
test
xchg
pusha
mov
ret
push
mov
aaa
mov
mov
outs
rcr
(bad)
in
aaa
jns
sar
cld
or
aad
loopne
es
arpl
call
in
mov
jp
sbb
es
mov
aaa
xchg
cli
mov
sbb
ins
inc
sti
jle
cmp
loopne
inc
int
movs
push
mov
and
dec
jg
push
out
jge
mov
arpl
mov
adc
push
(bad)
enter
outs
jmp
mov
mov
test
fisubr
ins
pop
mov
aas
mov
cmp
push
popf
ins
jae
sbb
(bad)
pop
cmp
mov
repnz
(bad)
popf
sbb
sbb
xchg
dec
dec
out
clc
dec
mov
stc
dec
inc
stc
cwde
inc
mov
stc
in
fwait
dec
hlt
aas
pop
xor
add
push
dec
ficomp
(bad)
(bad)
add
inc
ins
and
sub
aad
mov
jne
jo
pop
mov
inc
push
sbb
enter
ss
mov
shr
cmp
aaa
or
push
inc
or
fs
test
retf
fiadd
push
push
pop
jns
rcl
out
mov
xchg
inc
cmp
sbb
push
jae
out
repz
or
das
(bad)
pop
cld
sbb
dec
ss
out
xor
aam
add
add
rcl
inc
adc
mov
push
push
pop
imul
shl
cwde
loope
in
push
adc
jmp
ror
or
mov
imul
mov
aaa
jb
adc
push
sbb
inc
out
iret
cmp
pop
push
fwait
ins
jns
ins
pop
dec
mov
jmp
mov
pop
mov
pop
and
fcomp
int
sub
jecxz
xor
pop
xchg
int
add
ficom
dec
pop
lock
or
popa
cmps
jae
in
mov
dec
push
jnp
shl
cmps
pop
out
push
movs
pusha
(bad)
xchg
jbe
lods
test
inc
pop
int
jge
call
xor
xchg
and
bound
xlat
add
fdiv
imul
xor
mov
mov
shr
stos
cmp
ds
cwde
and
shl
rcr
inc
sahf
xchg
inc
add
imul
push
cld
jnp
aad
sar
push
jno
inc
push
in
inc
xchg
inc
retf
cmp
fcomp
or
imul
and
dec
(bad)
xchg
pop
inc
in
mov
sub
retf
pop
dec
cmc
jo
test
jb
add
adc
mov
in
movs
mov
cmp
xor
mov
sub
cmp
dec
jmp
cwde
cmp
lea
cmp
repnz
sar
neg
xor
mov
cld
outs
js
call
loop
outs
and
ds
test
xchg
loopne
adc
loop
jns
pop
push
sar
mov
add
ja
adc
or
lds
adc
jmp
push
(bad)
pop
xchg
cmp
mov
sbb
ss
pop
inc
sbb
loop
mov
test
lods
pop
daa
sub
sub
ficom
jnp
mov
mov
ja
cmps
and
xor
stos
mov
mul
pop
iret
adc
cs
lods
jae
ret
popf
and
inc
push
ficomp
aaa
jmp
inc
(bad)
out
es
mov
pop
adc
imul
dec
mov
sti
pop
inc
in
dec
dec
sbb
(bad)
movs
mov
ins
ins
xchg
fwait
btr
stos
xor
cmps
fidivr
lds
cmp
fbstp
pop
cdq
loopne
(bad)
xchg
mov
daa
popf
sub
loopne
loopne
scas
out
sub
mov
(bad)
out
loopne
test
ds
repnz
out
iret
ja
xor
loopne
fst
ds
imul
mov
je
lock
or
iret
in
(bad)
mov
(bad)
ins
xor
pop
leave
loop
mov
das
and
ja
cmp
xor
pop
inc
cmps
mov
lahf
and
push
mov
not
mov
pusha
and
sbb
fcmovnu
stc
pop
sahf
or
cli
xchg
in
or
sar
popa
repz
call
cmp
xchg
pop
aam
sub
outs
hlt
daa
pop
cmp
cmp
in
mov
jne
aad
xchg
call
sbb
inc
test
sub
and
movs
sbb
xchg
or
mov
and
cwde
lock
mov
inc
call
inc
sub
adc
std
cmp
out
mov
int3
sub
aad
inc
movs
dec
mov
add
pusha
jmp
sbb
dec
and
pop
mov
xchg
js
sub
(bad)
jbe
into
je
(bad)
call
mov
retf
xchg
scas
icebp
lods
sub
mov
dec
and
fcmove
iret
call
xor
inc
and
inc
das
inc
hlt
cld
js
shl
add
cmp
enter
stos
jnp
test
inc
jmp
dec
enter
xor
sar
jmp
in
dec
pop
adc
and
arpl
shl
adc
lds
into
jae
js
inc
js
jns
adc
mov
sbb
mov
test
xchg
jmp
jecxz
mov
pop
xchg
arpl
adc
mov
(bad)
stos
mov
push
mov
fs
xchg
mov
jbe
jg
imul
mov
dec
test
xchg
mov
sub
or
out
or
test
or
retf
lock
fbld
call
pop
dec
ds
ret
scas
test
ins
push
int
push
shr
cmp
sbb
icebp
jbe
adc
sub
jle
pop
jns
iret
jge
push
mov
inc
je
test
outs
jmp
xlat
dec
sbb
ss
adc
mov
mov
inc
repnz
(bad)
std
je
std
xchg
lea
mov
adc
sbb
mov
sub
repnz
inc
jbe
xchg
neg
rcl
icebp
or
pop
sbb
inc
adc
in
aam
push
cmp
mov
push
shl
add
add
add
out
sbb
sbb
push
mov
mov
and
test
fmul
sbb
pop
lock
push
jge
into
mov
push
mov
mov
daa
outs
pop
push
jae
aad
cmc
call
int
add
and
dec
mov
mov
push
sbb
daa
mov
add
out
mov
xchg
ror
cmp
iret
push
jg
push
adc
popa
jo
ficomp
sbb
fwait
adc
and
scas
xchg
cmovae
stc
pop
bound
retf
inc
loop
or
ja
lds
add
imul
jbe
into
(bad)
push
jno
or
aad
jp
add
imul
push
ret
push
mov
les
cmps
jno
into
xor
xor
mov
es
out
test
in
pop
sub
dec
leave
lods
inc
popf
fwait
clc
or
cmp
pop
or
xchg
int3
pop
mov
or
arpl
or
scas
test
mov
or
xchg
add
mov
adc
data16
mov
sbb
mov
pop
xor
jno
and
cdq
pop
int3
and
and
aas
rcr
inc
cmps
bound
sti
fs
cmp
mov
and
in
jne
jmp
mov
mov
jne
cdq
inc
out
pop
(bad)
xchg
stc
ror
push
push
adc
xor
ins
test
out
sbb
xchg
addr16
fcmovne
call
ret
cwde
xchg
mov
push
fld
enter
jp
jbe
inc
xlat
cs
movs
call
lahf
dec
in
fidiv
aaa
pushf
test
(bad)
movs
or
push
loope
loopne
mov
shl
sub
xor
cmp
adc
test
add
mov
adc
jnp
in
fnstsw
mov
jbe
inc
sbb
or
in
xor
(bad)
adc
cmp
test
push
loope
mov
pop
stos
pop
mov
dec
mov
rcr
(bad)
xlat
call
cmps
lods
cmp
data16
or
rcr
test
mov
test
adc
mov
iret
push
jp
cli
cdq
add
and
leave
lock
outs
fwait
inc
fld
sahf
adc
sar
cmp
xor
clc
mov
mov
xchg
es
sub
or
imul
xchg
pop
add
cmp
out
xchg
shl
fisubr
aaa
dec
jl
retf
ins
retf
add
inc
movs
out
in
fcmovbe
fldenv
pop
icebp
call
xchg
xchg
dec
mov
stos
cdq
sub
cmps
jo
cmp
xchg
and
jle
cdq
sub
jecxz
imul
inc
mov
cmp
mov
inc
lods
mov
fisub
xchg
ss
adc
imul
pop
xchg
lea
fsubr
iret
and
cmp
or
retf
xor
add
fwait
scas
jbe
mov
mov
jp
or
iret
jp
and
sbb
or
js
and
mov
out
xor
mov
mov
and
out
mov
retf
pop
in
adc
fadd
add
cmc
add
add
je
mov
jae
imul
enter
add
loope
shl
test
or
xor
mov
out
jle
dec
outs
xlat
xchg
inc
lods
xor
mov
les
pop
mov
and
ins
stos
xlat
mov
sbb
outs
rep
or
xor
cs
stos
mov
es
add
adc
jns
xor
popa
add
add
adc
xchg
push
xchg
in
dec
inc
pop
inc
push
fld
cs
or
cdq
cmp
adc
cs
outs
or
nop
test
push
popa
jb
mov
push
fcom
(bad)
cli
(bad)
pop
sbb
sbb
and
stc
test
cmp
mov
jbe
or
add
sbb
push
add
pop
mov
mul
ins
out
pop
sub
jo
jp
cmp
jne
movs
pop
in
pusha
call
(bad)
pop
xor
fidiv
std
cli
mov
mov
adc
daa
ficomp
xor
pushf
sub
rcr
iret
cmp
ins
jl
data16
jne
scas
sbb
adc
dec
pop
in
cmp
gs
and
xlat
sbb
mov
fucomip
sub
dec
sub
ja
cmp
mov
xchg
mov
jbe
mov
je
inc
ror
out
jge
adc
pop
push
ds
into
leave
add
inc
daa
mov
fild
hlt
xor
jo
es
add
pop
jae
push
push
pop
mov
clc
in
loop
jmp
jnp
pop
retf
sbb
movs
adc
mov
dec
aaa
push
xor
ficom
jl
pusha
lods
repnz
mov
sbb
lea
js
inc
cmps
jmp
add
mov
or
ins
xor
dec
push
ficom
push
cmp
paddusb
mov
mov
mov
iret
int3
dec
lock
or
or
cld
lods
mov
inc
adc
xor
imul
ins
pusha
out
and
cmovg
daa
jp
push
lds
loop
daa
outs
jae
xor
dec
cmc
xlat
cs
inc
dec
push
arpl
mov
mov
push
push
add
pop
or
pop
mov
shl
add
popf
sbb
leave
(bad)
mov
jp
in
cmp
shl
call
inc
rcr
dec
mov
test
imul
in
ins
xor
push
retf
dec
mov
inc
inc
outs
shl
xor
adc
xchg
push
aam
test
ror
es
out
lods
lea
mov
adc
sub
mov
outs
sahf
mov
cmp
jp
push
les
or
retf
shl
shl
pushf
pop
das
jp
mov
outs
jge
jp
js
(bad)
push
inc
(bad)
adc
test
fadd
jecxz
cmp
xor
jmp
push
test
(bad)
and
xchg
mov
mov
push
cmps
pop
mov
mov
sbb
scas
dec
jmp
jle
int
pop
or
loopne
lds
mov
retf
sbb
dec
retf
pop
pop
fdiv
int
lods
test
adc
mov
push
inc
mov
inc
pop
icebp
mov
(bad)
int
dec
xchg
and
xchg
daa
and
push
sbb
pop
shr
jbe
jecxz
imul
adc
cmp
cs
inc
dec
or
pop
movs
les
add
jl
add
imul
jl
mov
push
pop
out
xchg
sub
push
fcom
ja
pushf
inc
fs
pop
je
(bad)
push
mov
popa
adc
jle
jnp
addr16
xchg
ror
jle
jecxz
mov
std
and
sub
loopne
dec
mov
pop
in
in
jp
inc
xchg
popa
inc
cmp
sub
jmp
adc
lods
pop
mov
hlt
setb
sbb
lods
xchg
jl
out
cmps
ficom
sub
and
mov
lock
and
cmps
popf
cmps
adc
bound
fisub
adc
xor
aad
inc
inc
bound
mov
hlt
cs
pop
pushf
stc
pusha
lds
or
sbb
loop
jmp
fwait
mov
aam
inc
mov
cmp
cmps
loop
push
pop
in
sbb
daa
mov
push
mov
inc
hlt
pop
pop
mov
mov
dec
xor
addr16
push
aam
add
adc
mov
xor
loop
cmps
sbb
or
pushf
mov
sti
adc
or
(bad)
jg
adc
sbb
ins
neg
in
mov
dec
push
outs
push
jge
lahf
lds
adc
adc
fs
adc
xchg
je
daa
fs
nop
fcmove
mov
popf
sub
retw
mov
mov
fcomp
imul
jl
dec
mov
adc
test
jne
xor
nop
test
sub
int3
sub
call
jg
pop
or
and
movs
sbb
pop
je
cmp
gs
ja
mov
jle
mov
call
pop
mov
pop
dec
push
mov
or
mov
fidivr
ja
call
or
shl
jge
icebp
mov
stc
cmp
out
push
jmp
pop
in
xchg
jmp
(bad)
cs
mov
rdtsc
repz
and
(bad)
xchg
push
in
test
xchg
push
imul
test
dec
jge
dec
cdq
inc
in
sub
daa
out
sub
push
mov
dec
test
dec
push
test
xchg
mov
pop
sti
imul
daa
and
inc
adc
mov
jl
or
cs
jp
fldlg2
push
sub
mov
push
dec
add
(bad)
or
jnp
xchg
add
cld
bound
sbb
add
mov
out
fist
bnd
cmp
pop
cwde
adc
pop
leave
ins
(bad)
lock
add
add
add
sbb
add
repnz
adc
cwde
mov
gs
sub
push
outs
int3
cdq
mov
imul
ss
mov
movs
inc
add
pop
lahf
push
and
pop
add
scas
or
cli
test
(bad)
mov
push
pop
adc
push
js
js
inc
sub
int3
cmp
pop
mov
mov
(bad)
sub
jmp
(bad)
xor
mov
das
sub
call
scas
mov
pop
mov
jno
cmp
sub
add
pop
bound
repz
push
daa
xchg
ret
lods
push
retf
mov
jno
push
or
or
adc
push
push
cld
push
fsub
enter
cld
mov
(bad)
xchg
mov
xchg
fnsave
jle
xor
push
cmps
mov
pop
xchg
push
(bad)
pop
dec
pushf
or
xchg
mov
and
mov
sub
pop
push
loopne
call
mov
mov
mov
or
fwait
adc
clc
das
sbb
arpl
ins
cwde
add
into
mov
pop
je
addr16
mov
cmps
enter
add
mov
add
add
pushw
in
mov
push
jno
inc
add
out
cwde
leave
test
data16
test
and
in
push
adc
pop
add
fisttp
jno
fidiv
leave
cmp
pop
mov
sar
sbb
sbb
(bad)
jp
jnp
push
pop
or
ss
add
sti
clc
pop
loop
mov
fs
mov
je
add
lods
test
mov
and
pusha
mov
hlt
lods
mov
ffreep
outs
imul
cld
pop
dec
in
xor
push
jmp
int
cli
ins
int
mov
ss
sbb
xor
dec
mov
ret
push
mov
pop
popa
dec
cmps
mov
retf
sub
icebp
ret
(bad)
imul
repz
inc
jecxz
dec
je
imul
xor
or
add
stos
adc
out
sub
mov
add
mov
mov
push
mov
add
aas
mov
ds
ffreep
test
xor
mov
fadd
in
jg
(bad)
dec
vcvttsd2si
inc
(bad)
pop
inc
int
(bad)
jb
sbb
cwde
cmp
adc
cmp
add
sahf
xchg
cmp
push
sub
push
and
xchg
in
push
mov
and
jmp
cmps
dec
push
xchg
push
xchg
je
sbb
in
leave
and
xor
pop
shr
cld
retf
and
add
inc
add
inc
add
sti
jecxz
sub
jecxz
ins
inc
add
jmp
adc
push
jecxz
mov
pop
in
retf
icebp
inc
xchg
rep
fwait
mov
lods
mov
jnp
xchg
mov
xchg
or
or
rol
test
movs
outs
popa
or
adc
cs
push
cmc
mov
shl
mov
xchg
imul
cld
sti
scas
mov
fisubr
movs
push
mov
js
ret
pop
push
jl
jmp
mov
xchg
push
mov
daa
jp
rol
cmp
xor
test
daa
xchg
mov
jp
cdq
adc
ds
mov
add
jge
sbb
and
dec
aam
pop
jno
jo
cmp
les
cmp
test
mov
arpl
jne
or
jbe
pop
js
fadd
bound
daa
cmp
std
scas
jecxz
int
not
pop
ja
cmps
jle
test
mov
pop
fld
iret
mov
or
ss
rcl
aam
scas
into
outs
mov
loopne
loope
fmul
ss
lahf
and
ja
xor
in
and
xor
stos
(bad)
push
pop
sti
add
out
das
fcomp
arpl
adc
ja
add
mov
pop
pop
cmp
shr
mov
jne
add
sahf
popf
and
arpl
imul
pop
adc
mov
rol
mul
aam
jns
dec
std
loope
(bad)
repnz
or
mov
(bad)
imul
push
mov
xor
lahf
adc
out
and
scas
rol
dec
fld
mov
popf
pop
adc
or
pop
adc
sub
stc
popf
inc
sar
add
jb
xor
xchg
add
push
les
fidiv
push
cs
fs
cmp
jno
xchg
add
add
add
add
(bad)
fbld
stos
lea
mov
pop
jb
push
ja
push
cld
inc
cmp
and
sub
fbstp
out
sub
pop
ss
outs
aad
adc
into
ror
xchg
mov
or
jns
xchg
push
and
pop
int3
fbstp
xchg
push
add
stos
pushf
retf
xchg
dec
jp
js
stos
dec
iret
ja
stos
cmp
shl
xchg
inc
cmps
and
jle
mov
mov
cld
jmp
sub
or
sar
jl
call
sub
jno
add
mov
loop
push
push
sahf
mov
std
and
cmps
popf
arpl
push
cli
and
cmps
daa
aam
lahf
test
jne
pop
int3
jge
pop
push
mov
sbb
push
xchg
or
jne
cmps
xor
aas
popa
mov
nop
mov
cli
add
push
adc
js
int3
retf
push
xor
sub
dec
push
fiadd
ins
jns
sub
mov
pop
rol
stc
pop
adc
pop
jae
push
mov
bound
sbb
xchg
xchg
repz
test
pusha
jae
cmp
jne
js
xchg
pop
push
pop
enter
pop
jne
(bad)
lods
cli
popf
pop
test
rol
fidiv
mov
mov
(bad)
push
popa
pop
mov
clc
stos
ficom
jl
faddp
mov
shl
jo
(bad)
fild
mov
rcl
retf
mov
shr
or
pusha
adc
mov
das
lahf
fld
mov
push
push
ret
clc
add
lods
and
jmp
js
sub
xor
cmp
push
ss
pop
stos
cmp
xchg
xchg
fs
js
cmps
(bad)
jne
or
loopne
sub
jp
mov
dec
idiv
pause
mov
add
jmp
push
pop
fld
movs
aad
dec
aaa
sub
(bad)
cmp
rol
cmps
cmp
mov
or
retf
jbe
out
jg
in
xchg
xchg
mov
cmc
add
retf
sbb
xchg
mov
jne
fisubr
inc
add
jbe
mov
je
push
jg
jne
das
adc
call
inc
pop
lds
std
inc
pop
out
sar
repnz
enter
sar
jl
push
jbe
and
(bad)
(bad)
mov
pop
inc
ds
ret
xchg
(bad)
lods
sub
push
fwait
sub
(bad)
push
xchg
test
add
add
inc
add
shr
into
xchg
ret
sti
push
stos
add
jmp
mov
(bad)
test
gs
or
cmp
mov
mov
jo
mov
and
and
dec
push
mov
ror
inc
rcl
xchg
addr16
stc
prefetchwt1
jns
(bad)
inc
push
push
sub
imul
add
adc
clc
dec
or
mov
movs
in
out
cmp
push
xchg
sbb
push
add
xchg
popf
lock
push
inc
pushf
push
sub
addr16
aad
jge
mov
push
data16
inc
sbb
cmpxchg
jo
jae
fidiv
cmp
or
ds
jb
pop
imul
test
mov
shl
and
movs
ins
pop
jge
rol
mov
mov
aad
arpl
stos
lods
rcr
push
out
cmp
dec
rol
loop
jo
inc
adc
sbb
jbe
sti
int3
pop
movs
mov
dec
mov
shl
sbb
dec
add
add
sar
cmps
test
jmp
and
adc
dec
and
iret
sub
mov
xor
in
jmp
and
(bad)
push
add
cld
loop
lods
pop
call
xchg
mov
mov
(bad)
mov
sbb
test
loop
pop
mov
int
add
lock
fcomp
pop
push
jmp
arpl
dec
jmp
mov
jns
push
(bad)
call
xor
mov
test
jmp
and
jg
push
ds
in
pop
mov
jno
or
aam
sbb
jecxz
stos
out
sbb
fcom
mov
addr16
add
imul
rcl
sbb
ja
xchg
das
inc
pushf
ds
retf
or
fidiv
sub
or
loop
outs
xor
dec
add
ret
movs
pop
adc
jae
jnp
sti
push
icebp
sub
test
jp
ja
sbb
repz
jmp
in
pop
lods
xor
loope
and
imul
dec
inc
cld
push
fld
jge
lds
int
or
movs
xchg
xchg
mov
mov
mov
dec
fdiv
xor
mov
out
add
dec
stos
and
sbb
mov
add
push
cmp
pop
xchg
add
jecxz
inc
or
adc
loopne
pop
add
push
adc
or
pusha
xor
adc
xor
movs
mov
and
lock
ins
xor
mov
xchg
test
xor
mov
fisttp
mov
add
xchg
push
in
ror
mov
stos
fs
sti
add
jl
cmps
mov
sti
add
jmp
adc
shl
push
add
mov
ret
aas
fld
mov
sbb
mov
cmp
dec
icebp
daa
or
(bad)
xchg
add
push
arpl
sub
push
out
pop
jno
(bad)
adc
mov
outs
cmp
cmp
xchg
jb
jne
inc
cwde
mov
or
in
sbb
nop
sbb
scas
push
lods
es
popf
ins
sub
push
test
pop
pop
sub
mov
call
jns
dec
cmc
jle
pop
push
cmc
mov
sub
inc
je
sahf
stos
dec
jne
jecxz
pop
iret
lea
mov
xor
cld
mov
xchg
test
adc
test
jg
inc
add
test
mov
test
inc
addr16
cmp
scas
push
fidivr
stos
jge
xor
fs
mov
inc
jg
or
xchg
dec
push
add
mov
cmp
jnp
(bad)
mov
dec
jecxz
mov
mov
add
gs
sub
and
inc
stos
push
cdq
adc
inc
imul
cmps
or
jmp
aad
out
fsubr
out
ja
push
mov
mov
loop
xor
or
jne
mov
or
sub
cli
dec
sub
jmp
add
mov
xlat
inc
cmp
lds
jns
fcmovbe
ret
stos
pop
and
rol
mov
imul
add
rol
push
mov
loope
div
xor
scas
dec
rcl
jg
xchg
inc
push
push
push
pop
mov
sbb
mov
ds
nop
jno
loop
push
call
jnp
jp
mov
sti
cli
fadd
sub
shl
mov
pop
mov
jg
cmp
repz
sbb
inc
jg
add
jae
fwait
sub
push
add
aaa
sbb
push
pop
retf
cld
cmp
inc
sbb
das
push
imul
lock
fmul
jmp
jo
push
push
xor
popf
sub
jbe
mov
cwde
xchg
(bad)
fcmovnbe
mov
in
push
fist
ds
and
jne
pop
xor
pop
jmp
imul
xchg
jae
movs
dec
in
pop
aaa
test
iret
xor
inc
adc
(bad)
fld
stc
sar
lea
loop
push
out
pop
xor
adc
xor
cmp
inc
outs
loope
retf
les
mov
bound
(bad)
aad
dec
push
mov
cmc
fdiv
test
dec
and
sbb
lods
es
push
sbb
dec
outs
or
jmp
adc
mov
mov
sar
adc
call
jp
fisttp
(bad)
retf
inc
pushf
fwait
rcr
pop
mov
mov
cli
mov
mov
add
fwait
lds
int
hlt
mov
xor
mov
fmul
mov
aam
mov
cmp
ds
pop
cmp
(bad)
push
push
cmc
jno
inc
xor
ror
push
jmp
add
adc
mov
ret
mov
repz
add
mov
repnz
jp
jp
not
add
add
stos
pusha
int3
dec
std
(bad)
pop
sbb
inc
push
test
xchg
dec
lahf
loope
cmp
inc
push
mov
loop
cli
mov
sar
add
inc
stos
out
loope
xchg
push
push
or
daa
test
pop
fistp
mov
jne
push
inc
out
pop
jns
test
les
push
adc
repz
xchg
xchg
xchg
sub
jge
sbb
adc
sbb
leave
outs
adc
mov
popa
sbb
sbb
xchg
cmps
sar
in
(bad)
xchg
adc
inc
sahf
sub
and
ins
stc
pop
mov
leave
xchg
loopne
add
in
add
add
jne
add
lods
jo
test
ja
ficomp
adc
or
leave
shl
ja
mov
cmp
in
mov
ja
pop
mov
shr
xchg
fsubr
push
xchg
pusha
(bad)
xchg
sbb
int
fwait
add
mov
jp
push
jecxz
mov
or
pop
popa
shl
inc
push
sbb
pop
sbb
jmp
out
mov
or
and
mov
pop
mov
xchg
mov
xor
into
jb
pushf
inc
mov
cli
scas
mov
popa
mov
mov
sub
cmp
fdiv
add
cmps
das
pop
sbb
das
or
xor
adc
in
loope
clc
push
gs
and
jg
cdq
ds
cwde
xchg
add
in
test
(bad)
fsubr
imul
fwait
shr
xor
jb
inc
mov
pop
sahf
xchg
and
aam
jge
cmps
xchg
int
rcl
cmp
xchg
sub
popf
aas
push
mov
mov
in
mov
mov
pop
fdivr
retf
loop
and
jo
inc
or
sar
or
(bad)
push
xor
inc
adc
ret
(bad)
mov
and
or
dec
fcom
(bad)
repnz
cmp
lods
add
push
hlt
leave
jecxz
inc
push
push
add
loopne
fadd
scas
aaa
pop
sub
enter
mov
stc
mov
mov
lods
(bad)
or
jl
fstp
dec
je
dec
adc
inc
xchg
aaa
mov
adc
loope
mov
dec
push
and
cmp
lea
sub
ins
sub
(bad)
clc
mov
push
push
jb
mov
mov
and
ja
(bad)
mov
je
fadd
cwde
cmps
sbb
ins
outs
pop
inc
ds
adc
js
push
mov
outs
test
hlt
xchg
into
push
mov
ret
push
(bad)
xor
aam
mov
sub
pop
push
jo
cdq
xor
sti
fnstenv
not
or
pop
retf
pop
or
pop
mov
mul
lds
outs
in
rcl
ja
js
repz
pop
push
inc
bound
mov
push
add
iret
pop
rcr
lds
imul
scas
sbb
jno
(bad)
mov
jl
pop
ret
adc
xchg
punpckhwd
add
xor
cwde
sub
inc
addr16
stc
xor
xchg
push
inc
and
wrmsr
fbld
xor
cmp
(bad)
xchg
or
mov
push
pop
adc
sbb
stos
fsub
ins
cmp
ret
mov
or
lahf
pusha
data16
mov
push
aam
jnp
jb
outs
ret
adc
mov
enter
cmp
fcmovne
mov
push
pop
in
inc
sbb
adc
push
xchg
sahf
das
test
pop
std
in
pushf
outs
fld
sbb
sbb
mov
ret
jb
(bad)
(bad)
daa
mov
lea
pusha
xor
sub
jae
jne
xor
sbb
adc
dec
sar
xor
pushf
mov
jp
movs
ds
pop
lock
out
or
cmp
cmp
xor
retf
popf
mov
aaa
xchg
mov
cmp
aas
iret
sahf
xchg
and
jmp
push
push
xor
jb
scas
std
repz
test
call
das
lods
push
jne
arpl
jge
aaa
pop
mov
test
xchg
dec
scas
add
ins
out
dec
pop
or
cmp
jne
in
rol
test
cmp
pop
call
jo
retf
xlat
cmc
xchg
add
cmc
imul
fcomp
lds
push
push
movs
cmp
imul
mov
adc
mov
out
pop
and
add
cs
ss
lods
retf
mov
add
xor
lds
pusha
int3
sbb
xor
cwde
sub
mov
cmp
sub
xchg
jae
pop
xchg
pop
sbb
or
push
fcomp
sub
xor
inc
mov
add
add
ins
add
add
add
add
inc
ret
je
fadd
add
mov
adc
jbe
push
lds
fild
push
cs
add
sub
in
fisttp
mov
(bad)
pushf
push
add
shl
jbe
or
xchg
sbb
aam
mov
outs
cmp
mov
or
ins
and
jmp
sub
xlat
cmp
and
jb
and
jecxz
cli
bound
scas
mov
mov
repnz
out
push
xor
jbe
ss
stos
cmc
or
ror
bound
mov
(bad)
mov
arpl
lods
cmp
mov
mov
popf
aam
clc
add
stos
sbb
jo
outs
mov
jo
pop
adc
add
or
in
je
inc
dec
rol
aas
sti
mov
rcl
dec
lds
sahf
test
shl
xchg
push
or
mov
test
pop
outs
(bad)
in
jae
inc
mov
fimul
jmp
sbb
shr
mov
jno
inc
daa
and
inc
outs
pop
and
leave
in
sbb
enter
aaa
sub
jns
or
mov
xor
jge
popf
in
sar
mov
jg
inc
outs
fild
mov
(bad)
mov
(bad)
jg
or
jg
sub
movs
mov
jp
jge
or
daa
popf
adc
adc
mov
xor
int
aam
add
pop
inc
pop
cmp
sahf
mul
cwde
fistp
je
mov
mov
and
add
iret
cli
mov
mov
fbstp
xchg
cmp
fst
cmp
sub
pop
mov
and
scas
leave
mov
lds
test
and
cmp
push
mov
cvtps2pi
clc
mov
arpl
mov
xchg
cdq
je
inc
les
cdq
stos
push
dec
mov
pop
pop
push
sbb
pop
fdivr
(bad)
pop
out
jae
adc
in
jo
xchg
mov
out
fidiv
mov
movs
arpl
mov
xchg
and
cmp
into
jns
cld
shl
push
mov
xchg
inc
test
ss
int
mov
pop
mov
add
mov
add
add
sub
jb
in
mov
or
stos
jns
mov
jmp
inc
fstp
iret
mov
xor
pop
aaa
jl
jl
cmp
rcr
inc
jae
mov
mov
or
ror
sub
mov
pop
xor
mov
jae
jae
gs
aas
dec
ss
out
adc
xlat
dec
cli
in
xchg
xchg
jecxz
xlat
jmp
stc
(bad)
retf
(bad)
mov
call
retf
ret
and
jne
fwait
dec
je
and
stos
xchg
pop
jns
loope
je
mov
loop
mov
xchg
dec
jb
sub
mov
mov
mov
adc
repnz
(bad)
mov
adc
mov
inc
stos
jmp
dec
sub
xor
cwde
mov
cmps
xchg
adc
dec
nop
push
out
jbe
js
sub
cmp
cdq
adc
test
mov
mov
jle
and
dec
adc
out
add
dec
bound
or
imul
adc
xor
mov
movs
add
pop
pop
retf
daa
dec
cmps
inc
mov
out
sysenter
jmp
inc
ss
cdq
cmp
sub
in
dec
mov
popa
jg
retf
scas
in
sbb
mov
dec
cld
loop
out
aad
imul
pop
fld
mov
sbb
scas
jnp
or
(bad)
hlt
xor
out
or
add
jb
xor
fild
std
in
leave
call
ja
daa
adc
push
add
icebp
mov
push
or
xchg
adc
fwait
dec
repnz
mov
jle
adc
push
or
sti
aaa
std
cmc
sbb
cmc
cmp
mov
addr16
jne
mov
mov
add
lods
cld
xchg
jnp
fimul
mov
xor
daa
repz
clc
cwde
xchg
daa
mov
push
mov
and
dec
or
dec
xchg
std
mov
rcr
pop
adc
les
cmp
mov
sar
inc
lods
retf
fisttp
js
outs
movs
or
movs
push
call
shr
jmp
(bad)
mov
mov
pop
in
fxch
mov
ins
mov
cwde
pusha
mov
iret
test
dec
icebp
aas
add
jmp
cwde
(bad)
pop
inc
ss
xor
loopne
mov
cli
addr16
xchg
push
dec
dec
xchg
pop
test
adc
movs
out
loopne
adc
add
aas
xor
xchg
mov
dec
mov
xor
inc
out
(bad)
stos
rol
stos
sub
push
out
movs
jp
cmp
and
aad
cli
push
pop
mov
sbb
mov
prefetchwt1
(bad)
adc
mov
fwait
add
out
fcmovnb
outs
xchg
mov
push
xchg
stc
dec
push
aaa
stos
pop
sub
ret
pop
shl
cmc
sub
clc
ror
out
pushf
dec
jg
and
movs
aad
xchg
jg
sub
fadd
test
outs
aad
sub
push
jb
int3
xchg
ficom
pop
pop
pop
sbb
xor
pop
dec
dec
gs
in
mov
push
mov
ds
pop
jnp
push
test
mov
and
mov
push
retf
push
mov
imul
or
sub
ds
inc
rcl
push
push
pushf
lahf
mov
fs
push
sbb
push
lods
cmp
mov
push
std
dec
popa
jg
pop
sahf
arpl
fdiv
xchg
inc
xor
pop
push
jge
mov
xchg
mov
xor
push
movs
mov
mov
(bad)
shl
fwait
push
jp
mov
iret
add
(bad)
dec
jno
xor
pop
mov
jne
stos
dec
mov
jnp
mov
adc
cmp
or
leave
xor
pushf
and
scas
in
mov
(bad)
add
inc
dec
adc
xchg
sbb
pop
mov
jl
or
nop
aad
int
iret
fdivr
int
mov
mov
daa
(bad)
fcomp
jp
fiadd
add
jmp
sar
pushf
fs
aam
es
sbb
or
xor
ss
jmp
loope
cmp
aam
jns
cmps
cdq
pop
pop
loopne
cmp
mov
lea
mov
or
in
test
xor
aam
cmc
adc
adc
ficomp
ror
lods
xchg
f2xm1
mov
(bad)
sbb
jge
stos
mov
add
mov
fbld
fnstsw
pop
les
lods
xchg
sahf
push
and
dec
cld
push
sbb
sub
mov
push
jp
pusha
lahf
clc
jmp
loop
sub
mov
add
mov
jg
(bad)
sub
sbb
loopne
loopne
fwait
push
dec
enter
icebp
sub
or
push
xor
mov
out
pop
adc
push
dec
enter
cld
ret
or
in
imul
xchg
cld
js
mov
mov
mov
xchg
push
or
(bad)
xor
or
(bad)
pop
jmp
xchg
mov
mov
fsubp
xor
jg
adc
stos
or
iret
sbb
mov
aad
mov
ins
push
cmp
js
xchg
loopne
call
cld
icebp
or
xor
retf
fwait
fs
in
cmp
repnz
prefetch
retw
or
das
cwde
mov
cmp
cmp
add
adc
pusha
call
xor
pop
movs
js
ror
test
imul
dec
mov
mov
dec
fdiv
test
or
sub
mov
sbb
stos
xchg
sbb
pusha
sub
cdq
xor
rol
xor
inc
push
mov
and
(bad)
pop
jmp
popa
xchg
jmp
mov
and
xchg
cmps
movs
jbe
stos
call
push
lahf
outs
or
test
xchg
and
sahf
outs
imul
adc
fwait
test
mov
ja
jb
fld
aaa
xor
sti
mov
ja
cmc
pop
inc
call
jle
mov
jne
mov
fcom
repz
(bad)
fcom
jno
pop
xor
clc
mov
mov
jae
push
ret
jmp
iret
jle
aam
fsubr
jp
adc
push
imul
and
retf
add
push
outs
ds
sbb
sahf
sar
add
sbb
(bad)
ja
inc
sahf
pop
rcl
test
repz
dec
movs
sbb
ja
out
or
test
push
xchg
(bad)
push
xor
push
(bad)
test
mov
mov
push
mov
dec
dec
jecxz
inc
arpl
call
scas
popa
daa
or
dec
ins
pop
fld
in
adc
xor
jnp
(bad)
fsub
jo
add
fiadd
aam
adc
cmp
push
mov
out
pop
loopne
and
sar
inc
jbe
inc
xchg
pusha
sbb
mov
xor
mov
mov
push
out
inc
lock
shld
or
pop
std
ror
push
aam
or
dec
pop
dec
sub
mov
mov
pusha
or
fsubr
lock
fs
call
push
pop
bnd
pop
dec
test
add
cmp
xor
imul
or
sub
mov
nop
sbb
(bad)
cld
adc
adc
pop
out
add
icebp
xchg
push
jae
fdiv
loopne
shr
inc
out
das
shl
icebp
push
xchg
xor
icebp
loopne
pop
test
lods
into
sbb
pop
inc
add
add
add
add
lahf
lods
(bad)
jmp
out
rcr
sbb
push
push
das
lahf
cwde
cmps
loope
push
push
cmps
adc
adc
out
ds
xchg
les
aaa
lea
sbb
cmc
or
cmp
dec
fmul
movs
or
loopne
cmc
jbe
and
dec
test
adc
cmp
je
sub
jne
js
sub
data16
cdq
add
mov
sub
je
out
mov
inc
inc
int3
into
and
repnz
sbb
xchg
hlt
shl
(bad)
jg
clc
cmp
sbb
pop
push
sub
jb
fst
(bad)
xlat
mov
in
ds
stos
mov
in
sub
ficom
cmp
or
adc
xchg
loope
push
sbb
sti
mov
retf
aad
sbb
jbe
jge
and
xor
sub
loope
frstor
mov
mov
aad
sub
and
dec
and
pop
dec
jmp
adc
cmp
and
mov
sub
fwait
and
in
test
cmp
(bad)
inc
adc
aaa
jecxz
imul
shl
add
adc
add
aaa
push
add
push
add
loope
inc
js
xchg
inc
mov
mov
mov
push
mov
inc
mov
add
ins
ffree
xchg
retf
sahf
inc
adc
cs
lahf
fnsave
sbb
add
leave
xor
inc
pop
pop
icebp
test
pop
sub
aaa
xchg
sub
icebp
inc
jne
adc
sub
mov
mov
and
dec
loopne
mov
sti
lock
pusha
lods
or
shl
rcr
dec
add
push
push
and
sbb
aam
ret
in
xchg
mov
cmp
fsub
jo
mov
hlt
arpl
das
das
pmaddwd
pop
adc
cmp
push
cmps
push
cmp
and
cmp
aam
cs
xchg
add
push
inc
ret
xchg
and
out
push
sti
stos
jmp
add
loope
sbb
mov
sub
pop
pusha
jo
or
test
xchg
mov
sub
mov
xchg
aad
test
cli
test
arpl
arpl
pop
outs
inc
dec
hlt
cmp
into
or
scas
jnp
sar
dec
mov
jmp
mov
(bad)
popa
adc
sub
sub
sub
inc
inc
add
mov
test
hlt
mov
add
xor
push
popa
pop
ins
xlat
div
inc
mov
out
sbb
cdq
xchg
loope
mov
lds
loop
cmc
dec
dec
mov
scas
ins
shl
je
mov
into
lds
sub
adc
rcl
(bad)
in
sahf
dec
mov
add
xor
ss
loope
jmp
push
add
or
mov
cmp
mov
pop
xchg
jmp
mov
sub
fs
std
movs
sti
fnstsw
xor
cmc
pop
adc
mov
imul
stos
dec
sub
pop
jbe
push
pop
cmps
in
imul
dec
add
push
mov
dec
(bad)
addr16
and
mov
mov
xor
cmp
stc
retf
mov
aam
test
inc
fwait
out
mov
in
lods
xchg
imul
push
dec
mov
sti
repnz
ret
xlat
in
mov
inc
es
out
std
adc
or
lahf
in
cmp
or
ds
dec
(bad)
cwde
push
scas
fidiv
jle
iret
sahf
test
xor
adc
pop
test
inc
mov
mov
or
popa
dec
add
je
and
arpl
pop
enter
and
loop
nop
fidivr
xchg
aad
dec
nop
stos
ins
cmp
in
in
push
data16
mul
xchg
repnz
push
xchg
add
xchg
push
(bad)
xor
out
lods
xlat
pop
retf
pop
enter
mov
and
add
xchg
(bad)
xor
dec
(bad)
fcomp
test
xor
(bad)
enter
jnp
mov
pop
sub
mov
pusha
lods
aas
ror
shr
sbb
jno
jnp
inc
pop
fdiv
ret
rcr
std
out
push
aas
push
mov
lock
pop
aas
aam
pop
sub
sbb
stc
aas
cmp
jo
out
ins
aas
(bad)
dec
loopne
push
jl
movs
adc
loope
int3
out
mov
add
mov
ins
jl
ret
cmps
enter
pop
adc
daa
scas
pop
lahf
sub
stos
mov
pop
aaa
fs
xor
stos
jnp
pop
call
cmp
call
cmp
xor
dec
fisubr
jns
adc
stc
cdq
(bad)
xchg
xchg
sub
xchg
cmp
inc
in
xor
pop
imul
mov
leave
mov
(bad)
lods
cdq
cmp
jp
push
cli
cmps
stos
cmc
aad
fdiv
jbe
sbb
xchg
inc
jmp
adc
push
loope
jno
arpl
jb
mov
outs
inc
lea
arpl
stos
mov
mov
inc
cmc
mov
retf
(bad)
mov
mov
fldl2t
push
lea
dec
push
(bad)
pop
jl
ds
jmp
and
add
cmps
out
in
mov
mov
dec
jae
cmp
dec
retf
repnz
sti
jp
add
jbe
and
sbb
jbe
test
and
sbb
movs
xlat
mov
dec
xor
lahf
mov
test
xor
aaa
pop
push
fsubr
add
sti
or
imul
pop
xlat
xor
cmp
add
rcl
stos
call
cmp
inc
aas
call
sar
xor
cwde
in
in
xor
dec
xchg
pop
push
ins
movs
call
ds
cmps
pop
loope
jl
jmp
xchg
ds
pop
xor
std
inc
and
and
xor
mov
and
(bad)
xchg
dec
sbb
and
les
mov
cwde
addr16
sbb
push
aam
stos
cmp
mov
jle
sbb
lods
iret
idiv
cmps
cwde
imul
movs
push
xchg
aas
int3
gs
pop
sbb
mov
retf
outs
cmps
mov
cs
mov
dec
jns
outs
leave
push
mov
jne
push
(bad)
hlt
shl
ror
(bad)
push
call
push
lods
clc
ins
cmc
push
js
test
shl
mov
sbb
stc
imul
jmp
inc
push
test
pop
ret
(bad)
add
add
add
scas
dec
retf
cld
jmp
nop
mov
mov
adc
mov
ins
mov
xor
adc
mov
repz
push
in
aaa
in
addr16
shl
lahf
cmc
(bad)
adc
(bad)
ja
adc
(bad)
stos
aad
popa
enter
fwait
lods
xchg
xchg
cmp
mov
xlat
inc
mov
scas
test
and
movs
ficomp
retf
jmp
inc
rcl
les
cmp
inc
int
pop
loopne
in
jmp
cmps
mov
in
cs
sub
popa
frstor
or
xor
mov
scas
(bad)
cwde
push
into
cmc
in
mov
retf
add
rep
pop
les
jmp
ins
outs
popf
iret
adc
sbb
adc
stos
sub
sbb
jbe
adc
ret
push
inc
jns
push
or
imul
loop
fldenv
test
inc
inc
retf
es
(bad)
inc
rcl
add
adc
xor
and
jge
add
jb
sub
and
retf
dec
sahf
sbb
or
dec
mov
lds
call
jne
sub
pop
cdq
xchg
out
jg
sub
adc
aas
cmps
(bad)
int3
xor
es
mov
pop
pop
or
jo
pop
bound
nop
xchg
fstp
mov
push
ins
mov
mov
pusha
push
rcl
xor
arpl
out
sbb
leave
mov
lsl
ror
nop
jl
lds
dec
adc
push
push
mov
cwde
cmps
fsubr
push
sbb
fnstcw
lahf
jl
add
dec
popf
cmp
(bad)
or
jo
mov
ror
mov
dec
jmp
xchg
fdiv
xor
or
js
popa
push
clc
mov
push
popf
xchg
pop
xor
sbb
leave
cmps
sbb
aam
in
pop
jmp
pop
inc
mov
sub
loopne
iret
and
(bad)
dec
and
adc
and
fild
sbb
adc
and
pushf
push
push
sbb
jl
(bad)
cwde
sahf
xchg
lahf
cmc
mov
popa
push
pop
mov
cmp
mov
loopne
inc
outs
push
and
dec
jmp
mov
das
pusha
jne
test
push
sbb
pop
push
push
push
or
jo
arpl
mov
push
mov
in
repnz
nop
mov
fistp
icebp
xor
xchg
in
sahf
sbb
push
mov
lea
gs
(bad)
rol
hlt
jnp
popa
xor
(bad)
xchg
iret
or
jp
(bad)
jecxz
ins
fist
or
dec
xchg
les
scas
mov
ins
mov
mov
lods
add
dec
pop
(bad)
leave
cs
cmp
pop
aas
(bad)
sub
in
ds
jle
or
add
(bad)
and
(bad)
mov
add
sbb
popf
lahf
and
in
jl
or
and
cmp
das
adc
jne
or
out
and
jae
outs
pusha
movs
sub
jecxz
and
or
stc
(bad)
push
mov
mov
pop
adc
arpl
push
bound
jb
sti
jo
gs
repnz
into
pop
add
mov
and
mov
sti
pop
arpl
jae
icebp
sbb
enter
push
fidiv
fbstp
imul
lods
cmp
retf
adc
xor
add
(bad)
xor
mov
mov
sbb
adc
xchg
scas
cmps
loopne
jb
pop
mov
mov
repnz
cmc
push
mov
dec
mov
dec
adc
mov
xor
nop
mov
pop
xor
shl
leave
mov
jns
inc
out
xchg
cmps
shl
outs
data16
pop
cdq
movs
rol
jle
addr16
pushf
into
or
lods
aad
cmp
icebp
mov
push
inc
jnp
movs
xlat
mov
hlt
leave
jp
push
adc
(bad)
icebp
ficomp
scas
jg
lahf
sbb
jecxz
rcl
sbb
in
pop
stc
xchg
xor
icebp
cmp
lock
lds
ja
jb
push
imul
mov
add
add
and
add
mov
push
sti
pop
cmp
adc
movs
test
pop
jmp
mov
imul
lahf
jp
jae
enter
idiv
adc
fnstcw
int3
inc
or
jo
and
push
sub
ret
jl
xor
enter
test
sub
jbe
inc
mov
dec
and
retf
clc
aad
scas
jb
outs
mov
clc
push
add
je
add
fdivp
mov
mov
mov
add
ins
lea
cmp
not
sbb
pop
daa
sbb
test
in
mov
out
in
test
dec
inc
daa
cmp
add
pop
div
pop
mov
sahf
jle
adc
and
push
mov
cmps
inc
inc
arpl
adc
inc
xchg
cmp
dec
push
cmp
sub
shl
sub
(bad)
fmulp
pop
sub
mov
sub
add
sahf
inc
mov
ja
jecxz
jnp
rcl
sub
sub
pop
push
ds
push
shr
(bad)
dec
pop
push
xor
lahf
push
int3
adc
lock
inc
pop
icebp
jnp
jae
push
xchg
shl
and
push
jmp
mov
inc
in
cli
pop
add
dec
stos
sub
cmp
push
add
das
imul
xor
cmp
cld
cmp
pop
call
dec
dec
fiadd
cmp
dec
dec
(bad)
inc
inc
push
add
inc
sar
jae
cmp
dec
gs
mov
retf
sub
inc
jae
das
and
in
out
fbld
push
add
add
push
fild
enter
out
mov
push
and
xchg
outs
iret
out
dec
es
(bad)
jb
in
lods
jae
cmp
mov
add
call
std
dec
test
shl
xchg
fcomp
push
cmp
mov
out
in
adc
mov
popf
xor
cmp
mov
xchg
mov
gs
add
cli
je
or
mov
in
sahf
mov
test
cmp
pop
loope
xchg
mov
sbb
jae
jno
jg
mov
jl
mov
cmp
pop
loopne
out
out
(bad)
pop
jo
xchg
adc
add
fld
retf
clc
out
jne
xchg
cmp
outs
adc
xor
xchg
and
xor
jp
mul
and
lods
mov
popa
inc
pop
push
call
loope
mov
lea
cmp
xor
xchg
shl
add
imul
inc
stc
cmp
add
fild
xchg
imul
jnp
fidiv
das
mov
stos
xlat
jecxz
call
jmp
xchg
lods
pop
cmp
in
jmp
call
sbb
das
push
push
jp
cmp
aas
inc
js
mov
pusha
mov
xchg
shr
xor
and
iret
jns
mov
xchg
jnp
pop
or
adc
xlat
sbb
lods
pop
sub
rol
test
int
push
cmc
or
data16
scas
fnstcw
jo
pop
push
loopne
js
out
xchg
sbb
dec
fld
(bad)
adc
or
inc
in
push
lock
jp
imul
popf
xchg
nop
imul
scas
into
inc
aad
out
shl
xor
ret
mov
repz
lods
icebp
fscale
sbb
sahf
adc
push
jo
mov
movs
or
sub
mov
mov
sub
push
div
inc
sbb
xchg
ds
mov
fdivr
aad
jg
and
sbb
fst
std
cs
sbb
push
dec
cdq
in
sub
jne
pop
add
adc
out
not
aad
lock
xchg
in
push
sbb
and
dec
sub
out
push
pop
imul
inc
sub
fld
xchg
shr
enter
ret
(bad)
movs
rol
retf
sbb
push
cmps
retf
or
mov
mov
popf
idiv
cmp
cmp
xor
mov
test
push
int3
loop
imul
sub
inc
loopne
and
pushf
movs
mov
shr
fcomp
int
xchg
out
jns
add
adc
jb
mov
mov
or
out
fild
and
imul
addr16
repnz
push
fistp
mov
fist
ins
(bad)
and
rol
loop
punpckhbw
jno
js
sar
sbb
popf
push
ds
(bad)
ins
out
enter
dec
daa
sbb
loop
pop
std
aam
popf
mov
lods
mov
sub
sub
sub
add
xchg
cmc
loope
dec
(bad)
jno
pop
in
mov
cdq
add
cmps
pusha
mov
sub
inc
mov
xchg
and
int
outs
fisttp
mov
imul
inc
mov
mov
enter
popa
cmp
push
repnz
sub
leave
jg
jle
xor
adc
outs
ins
push
loopne
add
retf
sbb
cld
aam
push
fadd
stos
out
adc
(bad)
adc
push
sbb
cmp
hlt
jecxz
jmp
jo
or
stos
out
enter
hlt
mov
add
(bad)
jae
cmps
pop
mul
aam
mov
push
add
pop
outs
mov
out
inc
addr16
push
(bad)
int3
sub
add
pop
jbe
add
std
mov
ins
push
mov
scas
lea
fstp
das
mov
js
pop
into
xchg
lds
shr
inc
mov
add
mov
inc
pop
jp
cmc
mov
movs
adc
fisttp
and
loop
push
xor
xchg
mov
stc
aam
test
cmps
pop
and
out
clc
jmp
daa
cmp
nop
lock
pop
leave
(bad)
dec
jae
movs
mov
int3
inc
mov
popa
push
xor
xor
bound
fstp
sub
jl
cmp
je
cmp
(bad)
cwde
(bad)
jle
adc
mov
dec
pop
loope
and
sbb
push
cld
xchg
sbb
dec
fs
stc
jmp
inc
movs
mov
mov
mov
jno
add
xor
push
adc
fdivr
or
pop
mov
push
pop
addr16
icebp
enter
jmp
fiadd
xchg
inc
sbb
xlat
aad
pop
mov
push
jb
call
pushf
mov
push
and
mov
mov
mov
push
cmp
imul
add
add
add
add
sub
loopne
ret
pop
inc
(bad)
lds
ins
dec
outs
push
push
mov
add
loope
add
inc
add
addr16
ins
scas
ins
popf
mov
aad
gs
nop
test
inc
loope
mov
dec
jl
push
mov
addr16
sar
pop
and
push
test
sahf
in
or
imul
(bad)
adc
adc
jmp
push
adc
xor
and
sub
mov
pop
and
push
mov
mov
fsub
and
push
fucomip
dec
cwde
or
lods
imul
dec
cmc
dec
pop
jmp
inc
rol
jmp
or
pop
xchg
dec
leave
mov
mov
into
ficom
icebp
std
pop
dec
cmp
add
xchg
gs
cmps
jae
js
pop
and
jle
pop
retf
pop
push
pop
fbld
and
jg
imul
dec
jg
add
aam
fadd
mov
or
cmp
pop
push
jne
bound
inc
test
jge
stos
push
mov
jno
jmp
pusha
rcr
cwde
mov
adc
mov
out
mov
or
mov
movs
rcr
imul
out
popf
jecxz
xchg
sbb
mov
ja
xor
lahf
dec
call
(bad)
je
hlt
imul
xchg
movs
std
jp
addr16
xor
mov
(bad)
rcl
mov
retf
fisubr
popa
sub
stc
bound
add
movs
sub
or
clc
hlt
lods
fnstsw
mov
push
and
jle
movs
adc
jecxz
fcmovnb
(bad)
jmp
mov
xor
add
cmp
sub
imul
jmp
iret
loopne
inc
shl
shl
push
dec
out
pop
jae
inc
cmp
push
(bad)
mov
mov
fisub
repnz
lods
sub
data16
mov
and
adc
imul
mov
mov
push
mov
(bad)
cmp
mov
mov
lds
inc
in
push
cmc
pop
popf
imul
fist
repnz
mov
jo
fnstenv
jg
lods
mov
xchg
aas
hlt
cmp
jg
push
adc
jl
es
daa
loop
cs
or
in
mov
mov
lds
xchg
push
pop
lds
sub
cmp
(bad)
push
iret
sti
xlat
adc
and
test
das
add
push
nop
dec
fnsave
xlat
mov
or
aad
stos
xchg
mov
call
mov
popa
mov
add
mov
inc
lahf
loop
pop
mov
mov
imul
scas
inc
xlat
repz
mov
pop
movs
aaa
push
call
outs
adc
stos
mov
jo
bound
sub
stc
imul
pop
mov
pop
add
movs
mov
(bad)
scas
(bad)
and
add
aaa
mov
aam
cwde
jge
or
mov
ds
shl
cmp
daa
shr
addr16
mov
pop
test
sahf
add
inc
loopne
and
cmps
dec
cmp
pop
xchg
call
jnp
sub
shr
mov
cwde
xchg
mov
aas
call
jnp
xor
punpckhdq
xchg
add
jl
inc
clc
add
and
std
int3
ins
or
add
mov
nop
sbb
rol
lock
jo
xlat
shl
jmp
cmps
nop
xor
retf
aas
sbb
push
cld
ja
mov
dec
mov
mov
ins
cdq
and
test
popf
push
dec
jmp
sbb
inc
dec
cmp
in
inc
add
(bad)
nop
add
inc
call
cs
popa
ret
mov
add
mov
in
jnp
or
pop
sub
pop
ret
dec
cmc
addr16
arpl
ds
inc
aaa
ret
dec
cmp
push
cwde
stos
adc
inc
adc
jp
ja
sub
je
push
(bad)
hlt
mov
cwde
arpl
retf
mov
cwde
xchg
mov
cli
dec
data16
push
mov
pop
jmp
repz
into
pop
dec
(bad)
pop
scas
aam
movs
jl
(bad)
cmp
lods
sbb
mov
hlt
(bad)
ds
fcomp
xchg
dec
xchg
lock
in
push
inc
cli
add
frstpm(287
add
popa
add
add
popa
(bad)
hlt
pop
add
rcr
aad
out
sar
pop
push
arpl
cli
sbb
and
(bad)
and
retf
(bad)
dec
inc
or
xor
jno
push
sbb
lahf
gs
mov
lods
xor
mov
xchg
pop
iret
loop
inc
jmp
and
inc
add
fucom
pusha
sub
lock
sbb
inc
cmp
je
shl
(bad)
mov
sbb
sub
mov
fdivp
xor
pop
adc
fld
jae
jg
bound
xor
dec
dec
push
dec
jns
rcl
into
mov
sbb
scas
sbb
in
jne
mov
mov
je
sub
mov
das
push
out
fdivr
aad
scas
lods
pop
push
push
jecxz
rcl
je
cmovs
das
xchg
outs
xor
inc
repnz
js
fcomi
out
sbb
xchg
push
shl
scas
call
pop
jns
xchg
inc
cwde
inc
mov
jae
pusha
ret
push
shr
es
loope
pushf
xlat
mov
repz
aad
nop
lock
adc
push
aas
mov
jmp
push
cmc
xchg
enter
add
push
sbb
add
jne
daa
xor
jne
(bad)
cli
push
cmc
es
rcr
pop
sbb
xor
and
daa
xchg
mov
retf
xor
add
movs
lods
or
add
or
or
dec
js
push
pop
cs
scas
push
or
xor
pop
xlat
pop
cwde
cs
out
dec
fwait
and
aaa
mov
and
lock
xor
cmp
jle
adc
fstp
hlt
or
aam
mov
test
out
or
outs
xor
inc
mov
call
push
adc
fidivr
pop
xor
sub
push
fist
lods
fdiv
fwait
and
stos
mov
mov
into
ficom
xor
pop
std
(bad)
or
test
imul
das
xchg
cdq
movs
ret
inc
and
mov
cmc
ja
mov
es
push
leave
mov
xchg
jb
in
pop
stos
inc
nop
xchg
dec
mov
push
out
mov
cmp
xchg
repnz
bound
jmp
add
adc
cmp
jmp
fmul
mov
and
fcmovnu
jae
fild
mov
xor
inc
add
xchg
int
mov
ss
clc
rol
lea
sub
sub
xchg
cdq
xchg
cmp
or
adc
or
mov
ror
dec
dec
scas
inc
cmps
mov
inc
add
shr
sahf
and
out
adc
push
add
sub
rcl
fwait
lahf
cwde
addr16
out
add
add
add
rep
inc
push
call
stc
gs
xchg
fcmovnbe
loop
xchg
push
out
js
inc
daa
cmps
fwait
push
jmp
std
enter
test
jle
add
fdivr
cmps
outs
add
add
add
add
lock
jg
sbb
imul
dec
xor
push
jmp
shl
out
fucomip
icebp
mov
jle
inc
jmp
mov
add
or
ins
lods
retf
(bad)
push
(bad)
push
dec
dec
loope
out
addr16
aam
iret
cmp
test
das
js
mov
stos
xchg
inc
in
mov
lea
rol
jne
das
ror
ins
(bad)
(bad)
xor
cmps
iret
mov
outs
inc
dec
jae
push
and
or
or
sbb
es
shl
jmp
adc
movs
sub
xor
and
inc
adc
iret
inc
daa
pushf
sub
sub
adc
popf
push
inc
cmp
mov
test
shl
and
test
mov
add
in
cmp
inc
cdq
xor
pusha
loope
loop
std
test
std
cmps
das
xor
imul
inc
jle
or
inc
xchg
ins
int
pop
das
nop
(bad)
outs
ds
push
push
ror
or
call
cmp
ud1
shl
inc
repnz
or
mov
inc
mov
movs
call
mov
in
fs
mov
cli
xlat
push
push
sahf
loop
fucomip
into
pop
or
adc
jge
xlat
jmp
pushf
imul
pop
mov
mul
mov
std
cmp
jo
pop
ret
sub
adc
adc
fistp
jno
push
add
push
cmp
xchg
or
out
xchg
leave
(bad)
pop
mov
sbb
xchg
pop
in
dec
js
dec
jecxz
adc
sub
push
pushf
xor
add
pinsrw
cwde
jmp
outs
gs
push
mov
xlat
mov
nop
pop
lods
push
scas
mov
(bad)
in
cmp
in
or
(bad)
retf
mov
jp
sbb
in
lods
cwde
pusha
imul
inc
fwait
xor
sub
or
hlt
sub
lock
cmp
sub
mov
pushf
or
inc
cs
xor
mov
mov
adc
cmps
add
add
xor
daa
and
popa
mov
leave
xchg
pop
fwait
jecxz
int3
push
or
mov
dec
cmp
jle
jl
inc
mov
push
mov
je
es
rcl
sysret
sub
dec
addr16
xchg
ss
les
mov
adc
loopne
icebp
xchg
sbb
outs
jo
inc
sub
dec
sub
nop
cmp
pmaxsw
lods
push
and
inc
not
cdq
mov
outs
jo
sbb
jnp
cs
(bad)
loopne
inc
cmp
push
pinsrw
or
pop
mov
jne
mov
stos
xor
sbb
sbb
push
iret
icebp
sub
pop
mov
mov
sub
jne
sub
dec
mov
cli
mov
add
dec
push
jns
add
or
jmp
cmp
push
push
mov
sbb
(bad)
ja
and
inc
xchg
ret
jp
xchg
or
xor
imul
stc
mov
sub
sub
cmp
push
jmp
mov
pop
inc
mov
stc
push
sti
out
aam
and
jmp
add
(bad)
loop
pop
dec
cmp
push
stos
clc
mov
sbb
sbb
ret
cmp
push
mov
sar
out
jl
xchg
cld
ins
or
js
add
xchg
adc
inc
imul
or
pop
das
xchg
les
add
mov
sub
arpl
arpl
(bad)
or
cmp
iret
std
lds
xchg
xchg
fcom
shr
(bad)
cs
mov
pop
push
je
push
(bad)
or
mov
add
or
cmp
repnz
push
loope
sar
test
outs
outs
and
cmps
call
sub
mov
inc
popf
jmp
in
leave
dec
dec
jp
sub
and
lods
ss
mov
xchg
add
fadd
int3
sbb
fcomp
cmp
mov
(bad)
loopne
dec
jns
icebp
adc
cmc
add
dec
and
inc
fmul
jo
xchg
pop
mov
mov
cmp
scas
mul
lea
test
push
and
dec
sub
and
lds
and
loopne
das
xor
shl
movs
xor
mov
push
fidiv
xchg
lods
jp
mov
shl
sbb
les
push
test
lods
adc
pop
xchg
mov
xor
data16
dec
add
icebp
push
push
fcomp
fisubr
add
call
mov
pop
adc
jne
adc
lahf
shl
loop
mov
push
into
and
cmps
cmp
jne
add
pop
cmps
rcl
push
frstor
jns
sub
pusha
gs
and
jmp
sahf
shr
outs
movs
mov
xchg
or
outs
mov
jb
repnz
add
cmc
icebp
push
dec
shl
sub
(bad)
push
aaa
and
xchg
icebp
sub
in
stos
movs
sbb
fs
pushf
mov
jg
jp
mov
test
pop
fistp
imul
jno
nop
pop
mov
iret
xchg
cmps
mov
outs
out
sbb
sub
jmp
jns
(bad)
and
mov
ret
cmp
js
in
cmps
and
fs
and
cmps
ss
call
and
sub
mov
xchg
(bad)
ds
fs
sub
fldenv
jl
inc
xor
jge
fsubr
and
inc
jno
mov
lock
arpl
add
mov
inc
sbb
fld
rol
out
int3
call
pop
cwde
sti
mov
adc
xor
fimul
push
or
mov
jnp
shl
jns
dec
cmp
pop
rol
enter
push
idiv
jbe
shl
inc
nop
(bad)
mov
sbb
jmp
ficom
sbb
and
imul
std
adc
movs
mov
clc
push
xor
pop
dec
adc
or
mov
mov
push
imul
jo
test
push
cs
mov
mov
fmulp
iret
(bad)
test
repnz
out
push
pop
push
hlt
retf
xor
jns
mov
fstp
add
in
and
inc
xor
push
sahf
push
outs
xor
jmp
pop
iret
les
jge
rol
cmps
out
daa
out
out
(bad)
jp
or
push
or
(bad)
mov
cmp
pop
ja
push
lods
scas
adc
jns
in
frstor
pop
mov
xor
ss
or
fild
arpl
shr
je
fiadd
adc
xchg
dec
cmp
add
scas
loope
add
dec
mul
xor
or
dec
test
fcom
mov
sahf
fdivp
mov
mov
ror
jmp
mov
pushf
sbb
push
(bad)
(bad)
int
sub
(bad)
or
(bad)
fisub
fild
add
add
pop
pop
add
ja
add
inc
fs
inc
dec
aas
mov
cli
pop
cmps
ja
imul
dec
retf
loopne
pusha
cli
mov
jl
dec
repnz
xor
(bad)
inc
ds
cmps
jae
xchg
cmp
inc
(bad)
xchg
arpl
cmp
mov
mov
cli
xchg
inc
pusha
sub
fwait
inc
ret
int3
rcr
ja
gs
sbb
add
jmp
xor
dec
pop
dec
push
push
sub
inc
(bad)
in
imul
push
hlt
inc
xor
lea
test
adc
sub
mov
mov
lea
mov
pop
mov
call
xor
add
mov
dec
xchg
adc
leave
out
xor
mov
(bad)
mov
mov
test
mov
adc
mov
dec
lds
fs
jmp
inc
cmp
mov
out
lods
mov
mov
retf
aas
and
clc
xor
test
ret
imul
out
fadd
jg
das
jle
jecxz
(bad)
xor
shl
or
dec
lahf
in
inc
and
mov
movzx
cmp
into
jae
cmp
mov
inc
(bad)
pop
(bad)
popa
xor
inc
jp
ret
and
xchg
inc
dec
sub
cmp
cmp
in
xchg
stc
and
push
jns
pop
pop
(bad)
push
adc
stos
pop
lock
mov
mov
mov
inc
mov
or
jae
repz
and
mov
scas
jno
ins
jnp
xchg
test
pop
fdivrp
fwait
pop
cmp
adc
jecxz
push
jae
leave
stc
stos
(bad)
push
mov
mov
bsf
ret
imul
jge
add
pop
inc
inc
add
sbb
movs
jns
inc
cmp
ret
fcomi
pop
push
inc
cmp
sbb
inc
shl
or
dec
das
add
cmp
inc
mov
cmc
push
repnz
mov
call
mov
mov
or
sub
push
push
pop
nop
cld
push
test
inc
hlt
sar
vorpd
ds
fnsetpm(287
jb
sub
loop
mov
ja
dec
cmp
fisttp
iret
dec
push
mov
cmp
outs
push
std
add
or
sub
push
mov
js
jo
mov
cmp
mov
das
cmps
or
ins
arpl
out
mov
scas
dec
or
push
mov
out
ds
dec
jae
jge
mov
fcom
test
mov
sbb
stos
or
add
ins
sbb
pop
stc
mov
mov
xchg
and
fcmove
(bad)
sub
add
cmp
xchg
test
mov
out
popa
or
aam
xor
aas
loope
mov
jns
push
push
jne
jg
add
xchg
cmps
adc
or
or
and
hlt
addr16
adc
dec
cmp
in
setb
pop
cmps
and
mov
and
ret
cwde
(bad)
cld
add
pop
jp
fsub
retf
inc
xor
outs
push
mov
mov
je
cmc
dec
js
(bad)
pop
push
add
in
jnp
sub
cwde
popa
pop
(bad)
out
jmp
fwait
daa
nop
or
ror
rcl
sub
std
xchg
mov
mov
leave
sub
bound
iret
mov
mov
sbb
sbb
pop
sbb
cdq
test
sub
neg
jge
lock
push
pop
xchg
ins
in
jge
dec
jmp
rol
push
inc
pop
inc
outs
mov
mov
pop
sbb
mov
jnp
(bad)
cdq
jbe
daa
(bad)
shl
test
cmc
cwde
in
inc
ds
mov
fst
lods
mov
sub
jg
(bad)
(bad)
loope
es
out
test
push
jno
div
mov
mov
dec
mov
xchg
and
or
mov
cmc
popf
cmp
enter
clc
inc
stc
popf
inc
adc
jbe
pop
sbb
add
pushf
jnp
add
xlat
add
xchg
ins
and
pop
loop
or
cmp
inc
xor
je
pop
stc
push
pushf
cmc
push
cmps
push
jo
mov
jnp
inc
push
popf
in
mov
mov
push
xchg
fimul
jg
xor
fs
popa
mov
std
addr16
fsubr
scas
enter
sub
pop
dec
push
and
out
mov
xchg
xchg
into
fsub
int
int3
cmp
mov
dec
mov
xchg
fs
fiadd
inc
mov
mov
inc
cmp
jae
and
ja
cmps
cwde
push
sub
fistp
in
push
mov
call
pop
ds
push
jno
jl
mov
add
sub
addr16
pop
clc
in
or
shl
pop
push
out
pushf
and
push
sbb
jmp
bound
or
call
popa
out
shl
push
mov
and
cmp
int
stc
jmp
test
jae
out
add
sahf
icebp
sbb
sbb
(bad)
adc
movs
outs
cs
psubq
je
aam
mov
fnsetpm(287
cmp
push
sbb
ret
das
bound
mov
and
repnz
pop
pop
hlt
xchg
ss
xor
or
xchg
mov
out
arpl
fwait
push
sbb
xchg
mov
lods
loop
or
or
out
ret
(bad)
in
rcr
pop
mov
cmc
dec
dec
xchg
retf
call
add
and
aad
sbb
pusha
push
jb
fist
imul
aas
pop
cli
xlat
loop
mov
(bad)
(bad)
push
dec
shl
push
push
push
(bad)
rol
ret
mov
mov
xor
fwait
shl
mov
cmp
mov
in
std
loope
push
xor
mov
pop
ins
pop
cmc
or
and
in
push
pop
std
(bad)
repnz
mov
lds
mov
int3
cmp
cmc
mov
sahf
mov
xor
jns
je
aad
sbb
mov
push
lods
and
xlat
fcmove
shl
sub
cdq
cmp
push
adc
retf
mov
leave
sbb
jmp
imul
mov
sbb
adc
add
mov
leave
pop
jle
sbb
sub
add
adc
fwait
rol
push
xor
adc
cmp
stos
idiv
pushf
jbe
loope
inc
shr
cli
adc
xor
rol
ja
cmp
mov
jmp
js
adc
push
das
test
jne
outs
lea
bound
test
sub
fidivr
rol
es
inc
pop
jp
mov
jo
iret
xchg
mov
add
add
add
movs
or
hlt
arpl
jae
out
dec
(bad)
mov
push
push
jne
lock
call
jmp
mov
call
xchg
and
stos
inc
sti
lods
loopne
pop
fcom
mov
jp
mov
add
fwait
jnp
loope
or
daa
stos
imul
lds
dec
sub
or
jecxz
pop
fimul
mov
pop
and
imul
stos
mov
in
icebp
jae
xor
xlat
jmp
sub
cmps
imul
stos
mov
adc
jo
fs
test
and
add
lock
movs
cli
fild
jb
sub
push
add
xchg
push
add
mov
fsub
and
push
out
inc
jmp
les
mov
mov
aaa
enter
scas
ret
or
adc
mov
jo
cli
jmp
dec
cmp
inc
mov
mov
into
lock
inc
dec
push
push
shr
cs
stc
ds
pop
xchg
pop
sbb
cwde
stos
sbb
pop
js
and
mov
jmp
mov
jg
cmp
cmp
rcl
into
adc
ret
or
sbb
pop
cmp
imul
shl
mov
push
les
adc
xchg
jnp
dec
dec
xor
mov
cmp
mov
adc
jnp
xchg
out
sbb
mov
bound
ins
cld
fisubr
xor
shl
sbb
xor
ds
inc
mov
mov
popf
repz
push
not
mov
dec
sub
std
jg
mov
xchg
inc
xchg
int3
shl
(bad)
or
mov
jno
xor
pop
fadd
outs
dec
mul
push
sub
and
inc
xlat
mov
ret
lea
iret
fucom
mov
xor
or
out
inc
pushf
inc
add
mov
bound
mov
and
inc
xchg
xchg
sbb
jl
xor
and
movs
inc
inc
test
sbb
mov
retf
shr
or
jecxz
rol
sbb
aaa
sbb
sbb
fnsave
mov
jbe
into
xchg
aaa
cmps
push
(bad)
scas
cdq
paddq
sub
sbb
sub
add
(bad)
xor
fnsave
cmps
imul
mov
or
in
xor
das
push
dec
add
test
in
les
mov
je
(bad)
rcl
or
mov
test
xchg
xor
pop
loopne
mov
xor
aas
jb
adc
push
retf
(bad)
adc
in
mov
push
scas
inc
push
sbb
pop
out
mov
pop
(bad)
xchg
(bad)
ins
out
sar
into
imul
jl
je
add
mov
cmps
sbb
(bad)
ror
inc
add
ss
inc
cmp
pop
dec
pop
jg
add
jecxz
and
pushf
push
push
add
mov
pop
push
les
rcr
enter
das
jo
(bad)
inc
fbld
sbb
mov
add
jl
push
ret
pop
adc
xchg
push
xchg
mov
adc
mov
inc
mov
pop
pop
jmp
pop
sahf
inc
or
shl
push
(bad)
add
popf
jo
inc
daa
cmp
mov
pop
imul
adc
mov
sbb
fidivr
scas
call
inc
push
push
mov
shl
cmp
jne
xor
xchg
fistp
jp
in
jno
cmps
xor
pushf
gs
push
ret
cmp
in
push
outs
cmp
xchg
sahf
stos
stos
pop
push
pop
lock
call
xor
(bad)
jbe
mov
shr
stos
scas
(bad)
(bad)
popa
jl
jl
mov
mov
mov
mov
jmp
inc
xor
mov
jmp
movs
push
and
test
pop
xchg
jmp
mov
ficom
bound
jp
rol
add
add
add
mov
sbb
jbe
add
dec
jmp
(bad)
ss
xchg
inc
or
mov
out
sbb
xchg
stos
jnp
ss
push
sub
push
and
add
or
pusha
cdq
ror
ins
enter
fsubr
cmps
das
add
call
xor
jg
into
xchg
stc
mov
and
xchg
std
adc
mov
sbb
inc
jge
int3
(bad)
mov
xchg
out
(bad)
xor
xchg
adc
movs
pop
pop
retf
fldenv
mov
ja
add
push
mov
pop
pop
add
lds
add
pop
popf
inc
mov
retf
out
cmp
ret
xchg
and
cmp
inc
pop
pop
out
sub
push
daa
cmp
cdq
repz
enter
pop
imul
call
xchg
aad
adc
test
jae
lahf
sbb
iret
mov
add
fidivr
mov
out
cmps
sahf
lahf
loope
cmp
and
dec
rcr
fsub
leave
shr
cld
mov
adc
lock
neg
mov
xchg
into
cdq
adc
mov
cmc
retf
and
je
add
sub
test
lods
cmp
inc
je
inc
xor
nop
pop
std
adc
or
jmp
add
inc
jnp
mov
(bad)
jl
or
ins
jp
cmc
stc
ds
and
xor
enter
sahf
leave
(bad)
jl
iret
mov
mov
in
jmp
fisub
pop
push
aam
mov
imul
das
sahf
add
jl
and
push
or
sub
call
and
lea
repz
pop
popa
push
xchg
push
pop
sub
shr
fucomp
pop
mov
xor
push
leave
and
call
out
xlat
add
jmp
arpl
cmp
mov
fst
repz
fcom
mov
inc
(bad)
les
xor
jp
scas
cmc
jle
fsubr
cmp
(bad)
es
jl
mov
mov
imul
mov
lahf
outs
mov
mov
lds
pop
mov
ss
pop
pop
jbe
add
mov
xlat
or
out
cwde
fdiv
mov
test
scas
mov
xchg
dec
frstor
cli
es
cmps
sahf
mov
push
in
stos
mov
fwait
loopne
xchg
adc
xlat
ss
sub
jp
mov
(bad)
adc
lods
mov
outs
fcmovbe
jo
in
mov
or
dec
push
sub
sar
pop
inc
loopne
cli
jmp
jmp
inc
jns
loop
xor
fincstp
jnp
movs
jnp
xor
bound
add
or
sbb
scas
div
sub
sbb
xchg
dec
sbb
adc
mov
adc
pop
mov
mov
jg
mov
arpl
inc
jo
hlt
or
inc
outs
pusha
clflush
mov
and
adc
sbb
xchg
ins
mov
push
or
xor
out
add
pusha
shl
jbe
jb
cmps
dec
les
sahf
fisubr
mov
jp
outs
inc
mov
cmp
jl
mov
sbb
dec
xchg
mov
cwde
ins
push
adc
jge
std
sbb
imul
shl
js
cmp
cmp
jle
dec
pop
in
mov
xsaves
push
fisub
or
cdq
inc
jmp
out
dec
xlat
or
pop
hlt
(bad)
mov
jl
jmp
sbb
and
outs
xchg
(bad)
(bad)
and
mov
adc
test
sbb
xor
adc
js
ins
cmp
fmul
mov
imul
push
mov
jb
mov
xchg
sub
call
pop
imul
sub
xchg
jmp
mov
stos
call
sub
imul
in
pop
xchg
sbb
inc
mov
lahf
mov
fisttp
fmul
mov
mov
movs
idiv
add
lock
sahf
add
popf
(bad)
call
jp
mov
aam
push
popa
push
aad
outs
push
aaa
fiadd
sub
push
daa
ret
xlat
das
popf
push
mov
out
mov
nop
pusha
cmp
test
inc
xchg
dec
neg
add
lahf
cdq
and
fmul
xchg
mov
add
les
or
cmp
pusha
ror
call
loop
sti
rol
dec
outs
pop
(bad)
rcr
dec
inc
pop
xchg
loopne
xchg
xor
inc
push
jg
neg
lock
in
fsubr
mov
cmp
jmp
test
stc
sbb
cli
addr16
and
lods
pop
in
mov
sbb
xor
jae
sti
sahf
cmc
inc
cmps
ds
add
push
dec
xchg
sub
jae
mov
stos
outs
sub
pop
cmp
out
mov
cmc
pop
in
aaa
mov
xchg
xchg
sbb
sar
inc
mov
ret
xor
push
call
lea
(bad)
xor
gs
arpl
fld
push
add
test
mov
push
mov
mov
mov
in
xchg
pop
scas
push
or
cmp
(bad)
pop
jg
fs
and
(bad)
xor
mov
test
cwde
adc
dec
xchg
std
les
stos
movs
cwde
das
pop
dec
mov
dec
inc
icebp
mov
inc
fsubr
jge
xchg
push
repz
test
mov
shl
sahf
in
(bad)
mov
and
arpl
fisttp
mov
enter
enter
mov
mov
sub
push
mov
sbb
mov
popf
cmp
sub
(bad)
cmp
lock
repnz
mov
add
jmp
sbb
bswap
mov
test
mov
jecxz
jno
and
mov
jbe
ss
and
sub
cmp
pop
stc
push
dec
jne
xor
movntq
xor
add
cmps
ficom
xchg
mov
and
(bad)
and
push
mov
call
jl
or
cwde
fisub
sub
sub
movs
push
jg
shl
mov
fsqrt
adc
cmp
jb
mov
mov
cmp
add
shl
outs
sar
fsubr
xchg
xor
mov
mov
outs
push
mov
xchg
adc
shl
jno
mov
dec
out
in
inc
inc
add
mov
aam
xchg
xor
(bad)
cmp
mov
pusha
ret
xchg
add
xor
or
inc
push
mov
lods
push
cmp
jle
xor
lods
stc
and
add
mov
or
cli
pop
sar
add
(bad)
in
jl
sub
or
(bad)
sbb
xor
cmp
adc
aas
retf
fistp
jge
je
call
pop
inc
xor
inc
sti
cmp
mov
dec
mov
dec
int
out
outs
adc
outs
or
ficom
xor
cdq
cwde
xor
sbb
scas
jg
inc
add
add
add
add
add
add
in
nop
(bad)
pop
add
pop
cmp
jb
mov
lds
or
inc
icebp
enter
pop
sbb
ins
add
pop
out
loop
mov
inc
sub
or
fmulp
imul
dec
sbb
mov
pop
aas
mov
lds
pop
jbe
push
retf
xchg
aaa
(bad)
and
ss
mov
fistp
cmp
cmp
int
sub
in
test
cwde
sbb
(bad)
sbb
jb
hlt
sbb
inc
xchg
ja
les
cmps
fdivr
in
push
push
or
pop
test
test
mov
pop
out
sub
in
pop
xchg
scas
mov
lods
fld
jmp
sub
enter
pop
xor
pop
les
mov
rol
imul
mov
dec
sub
cmp
out
loopne
cs
dec
pop
dec
mov
cmps
cld
sahf
sbb
cmp
in
arpl
mov
cmps
jmp
and
inc
push
mov
jle
mov
cmp
mov
cs
test
mov
fist
popa
mov
fisub
imul
ins
rol
bound
cmp
push
mov
clc
xchg
inc
xor
pop
icebp
mov
cld
push
cmps
out
pop
(bad)
call
ss
pop
jecxz
popf
outs
xchg
mov
sbb
mov
retf
or
(bad)
mov
jne
jp
fmul
and
sub
and
mov
mov
in
imul
retf
sti
sbb
cli
dec
hlt
or
repz
and
jmp
sub
xchg
daa
or
jle
test
xor
dec
mov
mov
push
sbb
fdiv
xchg
lock
xor
jmp
out
inc
cdq
push
dec
mov
cmp
inc
(bad)
xor
in
ficomp
ins
add
aaa
pop
fadd
loope
mov
dec
lock
dec
shr
jb
inc
and
(bad)
jmp
mov
add
aam
mov
into
mov
gs
mov
inc
push
lock
add
movs
gs
jb
sbb
and
or
pop
xchg
movs
rcr
stc
mov
dec
push
pop
addr16
int3
mov
pop
pop
into
mov
enter
nop
rcl
test
addr16
sar
fadd
pop
push
mov
imul
push
xchg
mov
fistp
std
sub
movs
imul
out
jge
push
aas
or
cs
dec
push
add
retf
push
add
cld
mov
mov
es
cli
movs
fild
cld
dec
pop
dec
test
sub
jns
stc
jg
pop
mov
xchg
inc
add
inc
mov
pop
or
movs
cmc
mov
mov
(bad)
jg
retf
in
cs
popa
mov
cmp
pusha
lahf
clc
dec
sub
mov
repz
aam
out
fidiv
imul
ss
xor
inc
sbb
das
ret
and
push
adc
(bad)
arpl
rcr
dec
pop
adc
test
test
inc
mov
and
hlt
jne
lds
pop
mov
icebp
sbb
push
sub
jo
sahf
jmp
adc
fbstp
dec
cmp
fcmovne
out
xchg
nop
dec
sbb
mov
call
inc
out
aaa
xchg
scas
jge
xor
inc
ret
add
xchg
mov
xor
div
call
mov
cmp
and
fld
pop
adc
int
sub
adc
pushf
lods
inc
jge
xchg
cmp
mov
pxor
lods
add
add
pop
mov
and
add
jns
fstp
adc
sbb
dec
fwait
fs
ret
mov
imul
inc
jmp
push
ss
or
std
dec
or
mov
push
in
je
int
repnz
xchg
push
mov
pop
stos
icebp
int3
fbstp
mov
fdiv
jns
mov
ret
inc
in
xchg
push
jnp
mov
fimul
ret
mov
sar
mov
push
psubsb
mov
aaa
loop
std
(bad)
jle
aam
xchg
push
hlt
cmp
cmp
ds
dec
pop
retf
fld
out
cmp
mov
push
sbb
mov
dec
in
std
movs
sub
or
lods
mov
and
popa
arpl
dec
push
sar
inc
retf
pop
sbb
adc
iret
aam
pop
jae
jbe
jbe
jg
jbe
jnp
xchg
repz
in
xchg
dec
cmp
(bad)
lahf
std
bound
fldenv
aaa
pop
icebp
arpl
jbe
cmp
sbb
cmp
cmp
ret
jno
push
dec
lahf
clc
arpl
mov
retf
jno
xchg
js
fdiv
mov
dec
xor
jo
mov
xchg
inc
lahf
cs
cmp
mov
lahf
sbb
xor
mov
pop
dec
(bad)
stc
mov
dec
retf
icebp
cmp
ds
gs
pushf
addr16
jle
mov
xchg
rol
mov
and
fwait
repz
mov
fld
xor
fstp
add
mov
inc
in
js
idiv
inc
sub
test
inc
cli
jne
xor
xchg
mov
in
sbb
cdq
popa
mov
data16
fdiv
mov
push
mov
inc
or
inc
xor
mov
pusha
(bad)
xchg
ins
add
out
cmp
movs
idiv
shl
(bad)
dec
aas
les
add
cmp
addr16
add
(bad)
sub
sub
adc
(bad)
out
dec
clc
dec
push
in
dec
outs
mov
les
and
ja
push
sbb
sar
jge
fs
and
jae
sbb
jl
push
mov
shl
mov
(bad)
mov
sbb
out
dec
aaa
shl
(bad)
ss
leave
mov
jmp
bndstx
dec
mov
rcl
dec
ficomp
add
mov
push
enter
ja
iret
mov
pop
das
daa
inc
jge
adc
push
dec
mov
(bad)
sub
add
cmc
sub
cmp
and
adc
sub
or
loope
xchg
out
and
shr
repz
sbb
mov
scas
in
icebp
and
movs
lods
out
ds
shl
div
mov
push
cmp
fidiv
popa
and
in
aas
cmp
push
mov
xchg
bound
mov
sar
push
popf
leave
stc
cmps
data16
push
inc
push
ins
leave
stc
lods
and
(bad)
fstp
sbb
pop
pushf
pop
mov
out
mov
dec
cs
adc
and
in
cmps
mov
cmc
push
out
mov
inc
add
xor
rcr
inc
lea
mov
addr16
jmp
adc
cmp
add
inc
cmp
pop
sub
add
rol
xor
pop
lods
pop
rcl
and
jb
mov
popf
mul
xchg
mov
jns
xchg
std
scas
adc
test
pop
rcl
or
out
retf
je
cmps
movs
ds
call
ror
jecxz
and
pop
adc
push
out
fcmovb
dec
xor
lds
or
sub
sub
ret
cmp
in
ds
ins
sbb
fs
pop
js
jmp
daa
imul
xchg
mov
xchg
pop
es
or
ins
cdq
pop
fsub
daa
lods
add
dec
lods
std
mov
adc
pcmpgtw
rcr
xchg
xor
mov
push
sahf
call
gs
ror
out
pop
in
or
push
test
jmp
pop
cmp
adc
(bad)
outs
push
adc
call
int3
sar
mov
dec
mov
lds
add
xlat
mov
mov
sub
nop
mov
mov
inc
mov
jne
cmp
in
xor
cbw
sar
inc
scas
pop
daa
call
pop
jg
out
or
(bad)
jge
inc
adc
clc
lea
jae
pop
pop
jne
mov
pushf
fnsave
daa
lea
add
add
add
add
add
xlat
rcl
cmp
stc
cli
into
cmps
push
js
out
pop
mov
xlat
arpl
push
pop
sub
div
lds
repnz
fs
stos
adc
call
fs
push
stos
xor
cld
jle
xchg
inc
fdivr
adc
inc
mov
addr16
loope
jge
mov
(bad)
in
cmps
ds
je
fcmovbe
and
or
mov
imul
adc
or
adc
jne
add
and
(bad)
cmp
int3
xchg
pop
mov
not
mov
test
mov
fs
enter
adc
mov
ja
inc
jnp
push
idiv
sbb
in
gs
imul
loope
sahf
adc
sub
fwait
dec
mov
pop
fdiv
cmps
in
mov
jno
fistp
bnd
cmps
je
mov
scas
push
xchg
and
add
jmp
sub
out
cdq
out
or
ror
inc
mov
sub
sub
imul
lods
and
xor
ror
ins
mov
mov
int
out
dec
add
mov
xchg
pop
sbb
adc
test
jmp
imul
rol
in
xchg
pop
daa
mov
add
mov
stos
int
ja
sbb
popf
inc
or
mov
adc
cmp
jns
jle
stos
inc
xor
mov
push
xor
push
mov
call
dec
mov
aam
xchg
nop
xchg
jmp
jmp
sub
retf
test
xchg
test
jmp
pop
dec
mov
jmp
pop
adc
loope
xor
add
cdq
xlat
in
dec
adc
dec
out
mov
aaa
ins
mov
out
pop
or
sbb
jne
rol
mov
hlt
stos
fcmove
les
sub
loopne
das
and
(bad)
push
js
das
pop
or
mov
aam
ins
mov
sub
jo
(bad)
jp
mov
and
mov
adc
jno
popa
adc
int3
(bad)
nop
jge
mov
ror
mov
inc
fcomp
jbe
movs
cmp
sbb
mov
mov
rcr
lods
push
into
cld
stos
cmp
in
add
fsub
inc
pop
scas
xchg
push
jge
mov
mov
push
and
loope
(bad)
movs
fild
sti
mov
popf
sub
dec
adc
ja
pop
push
cs
lock
mov
mov
adc
cwde
stos
add
cmp
rcl
punpckhdq
mov
hlt
and
sbb
sub
lea
stos
cmp
xchg
xlat
xor
(bad)
retf
prefetcht1
sbb
iret
mov
adc
adc
in
cmp
sbb
sbb
inc
sub
dec
and
add
lahf
and
sub
pop
bound
add
mov
pop
inc
call
int3
sub
ja
cmp
mov
xor
mov
jne
cmps
loope
shl
pusha
inc
iret
into
xchg
xlat
inc
sar
das
dec
bound
js
jge
dec
ins
jbe
or
ror
fistp
inc
or
movs
std
and
(bad)
xlat
pop
pop
lahf
cld
out
cli
les
mov
fnstenv
xchg
pushf
inc
fwait
div
xchg
inc
leave
fstp
pusha
jne
xchg
mov
es
mov
bound
pop
(bad)
cmc
dec
repnz
mov
ds
dec
(bad)
call
mov
and
cli
or
test
cmp
scas
(bad)
test
lods
repnz
and
iret
push
pop
mov
in
shr
or
ds
call
jo
jb
loopne
cmp
cld
fcom
sub
or
retf
(bad)
mov
inc
xchg
lods
and
pop
lock
mov
fbstp
jnp
out
inc
push
mov
jmp
fadd
or
dec
fsub
retf
add
sbb
movs
ret
(bad)
mov
ret
mov
out
mov
(bad)
jl
mov
lods
icebp
jge
sub
sub
sub
pusha
aam
pushf
mov
mov
mov
jp
nop
xlat
cmp
jb
ficomp
mov
jb
in
xor
inc
dec
dec
mov
jl
adc
jae
cli
and
mov
fld
scas
jns
lds
fdivr
xor
ds
shl
xchg
sbb
dec
and
inc
fcomp
jb
xor
call
pop
mov
mov
inc
scas
mov
or
je
or
in
jmp
or
or
cmp
jns
in
or
leave
xor
xchg
xchg
(bad)
aas
stc
int
gs
das
leave
cmp
(bad)
fcmovnbe
(bad)
leave
xor
and
sub
jns
gs
std
neg
ret
lahf
pop
hlt
daa
movs
mov
dec
jnp
and
inc
mov
rol
retf
jbe
xor
clc
add
mov
add
jecxz
test
mov
pop
sahf
int
retf
jb
es
retf
pop
test
lods
test
cmp
adc
iret
icebp
fidivr
pop
jp
fisub
cmps
out
or
ret
xchg
cmp
popf
sbb
out
xor
mov
sub
adc
push
frstor
rcl
jmp
lods
test
and
push
cmc
xor
repz
push
mov
push
sar
lea
(bad)
xor
push
or
stc
pop
xor
add
aas
aad
jmp
push
cmps
leave
xchg
pop
movs
loope
int3
push
mov
imul
add
aaa
push
bound
add
jbe
adc
add
sbb
loop
lods
mov
push
sub
sar
into
cmp
ss
inc
sub
cdq
jno
mov
out
and
sbb
xchg
xchg
mov
aam
leave
add
sbb
std
jbe
dec
xchg
dec
retf
ret
sub
xor
imul
adc
mov
inc
add
lds
adc
ret
jne
cmp
push
pop
push
mov
add
add
pop
add
aaa
jmp
mov
lds
dec
push
lds
lahf
push
stos
xchg
and
jb
inc
dec
into
aaa
enter
cld
pop
sub
les
cmps
in
mov
push
xchg
jmp
mov
jmp
push
mov
fwait
pusha
dec
(bad)
pop
xchg
or
mov
ja
rcl
scas
(bad)
mov
popf
xchg
int3
push
sahf
pop
lahf
jmp
pusha
not
add
push
adc
jmp
lods
ins
lock
xchg
and
inc
es
inc
mov
test
in
xor
imul
es
pop
jle
int
and
cmp
mov
(bad)
test
(bad)
mul
sahf
into
aaa
jp
enter
xor
mov
inc
xor
sahf
ret
loopne
jo
retf
jmp
aas
ret
xor
jg
pop
leave
cmp
jmp
sbb
lods
inc
xchg
pop
mov
jb
pusha
sbb
hlt
push
dec
jge
jl
cwde
in
add
cmp
pop
cmp
mov
js
and
inc
movs
dec
jns
movs
push
dec
jmp
mov
jno
in
xchg
inc
loop
adc
int
add
loopne
addr16
mov
cmps
arpl
mov
pusha
cmp
ins
push
call
(bad)
lods
sub
sbb
repz
xor
dec
mov
push
sbb
mov
aas
cwde
sub
mov
jmp
and
jp
inc
cmp
cld
and
gs
inc
fldcw
mov
dec
pop
dec
shr
sbb
aas
dec
ja
icebp
retf
imul
mov
mov
mov
shl
sub
in
outs
cmp
mov
xchg
sbb
test
rcl
pop
cmp
out
arpl
call
ja
push
fld
xchg
ds
fist
xor
sub
into
pop
inc
sub
test
mov
sub
jge
ror
and
adc
pushf
cdq
outs
cdq
fcomp
mov
jecxz
sbb
in
cmp
mov
push
loope
movs
xchg
sbb
ret
call
mov
out
mov
loopne
cmps
out
and
sahf
mov
mov
mov
mov
je
xor
pushf
pop
or
mov
inc
mov
or
dec
push
jl
ins
jle
push
and
cmp
in
xlat
loopne
popa
arpl
nop
jmp
and
in
fild
sbb
out
call
adc
mov
pop
das
jno
(bad)
jl
mov
jb
retf
lds
push
push
fist
mov
sar
jo
dec
pop
mov
cmp
fnstcw
inc
adc
dec
and
adc
outs
jecxz
sbb
sub
add
sbb
aaa
ins
or
pop
inc
mov
cld
repz
mov
lds
(bad)
push
dec
push
sub
xchg
xor
bound
rcl
inc
nop
test
xchg
js
push
std
das
rol
aaa
sbb
adc
xor
ins
ja
fsubr
movs
loop
xchg
and
mov
imul
push
xlat
mov
fidiv
xor
and
adc
pop
push
inc
sahf
shl
dec
push
jle
jecxz
or
mov
adc
cmps
movs
xor
jecxz
lahf
in
movs
or
cmp
sbb
mov
adc
pop
adc
into
je
in
das
or
fs
add
repnz
push
jle
adc
cmps
call
pushf
pop
imul
sub
imul
loope
mov
push
mov
xchg
cli
retf
mov
in
xchg
repz
fsubrp
mov
ror
clc
out
pause
sub
or
jg
repnz
sbb
mov
shl
cli
pop
mov
in
jno
(bad)
hlt
pop
rcr
fimul
mov
jno
xor
sbb
into
neg
push
adc
pop
and
ror
and
lds
aam
loope
aam
enter
xchg
cmp
xchg
ins
shl
test
pop
xor
in
pusha
(bad)
and
test
adc
push
arpl
js
add
jp
and
push
inc
js
and
ror
test
enter
xchg
and
imul
and
xor
lahf
pop
and
data16
scas
imul
pop
mov
nop
jb
jle
test
int3
jmp
sub
inc
cli
loope
(bad)
call
out
sti
loop
mov
xor
add
les
pop
sbb
xchg
cmp
in
stos
or
mov
shl
adc
inc
mov
push
sahf
pop
push
sub
jb
ins
rcr
xchg
pop
mov
xor
in
ret
or
cli
inc
(bad)
in
aas
cli
outs
popf
cwde
sar
sbb
or
and
pop
adc
mov
adc
test
xor
dec
es
xchg
pop
pop
sub
xlat
xchg
in
(bad)
jmp
fld
stos
add
fwait
cmp
adc
loope
loop
aam
mov
fwait
push
ret
test
cmps
popa
mov
add
test
and
(bad)
imul
adc
repz
push
mov
shl
mov
out
jno
and
imul
(bad)
jbe
fwait
mov
mov
ins
push
adc
into
movs
(bad)
ds
sbb
mov
les
ja
inc
ja
jo
sbb
dec
add
hlt
dec
cmp
(bad)
pusha
sub
pop
push
and
adc
aad
xor
fld
push
in
cwde
int3
and
js
mov
xor
scas
in
in
(bad)
ss
inc
inc
ret
mov
mov
mov
cli
cwde
icebp
mov
pushf
mov
call
and
push
lahf
out
inc
sbb
cld
neg
sar
cdq
pop
cwde
mov
adc
lods
push
das
mov
and
xchg
mov
cmps
pop
sbb
loop
ja
inc
xor
pop
nop
int
in
test
imul
pop
inc
dec
pop
fucomi
xchg
adc
cmp
pop
ds
pop
sahf
imul
lahf
test
jno
sbb
push
ins
and
cmp
dec
jmp
hlt
test
lahf
add
add
add
add
mov
add
and
adc
fwait
nop
cmps
fldenv
(bad)
test
dec
in
mov
imul
xchg
dec
mov
cmp
push
sub
(bad)
or
pop
fild
mov
mov
dec
pop
mov
cmp
jae
rcl
jmp
cmps
adc
ror
xchg
push
mov
pushf
pop
dec
add
movs
push
in
push
imul
int3
outs
mov
xlat
fprem1
sbb
push
pop
xchg
xchg
mov
mov
sbb
mov
rcl
mov
inc
mov
mov
xchg
mov
dec
out
adc
jl
mov
int3
cmp
or
add
inc
mov
aaa
mov
pop
xor
repnz
iret
add
adc
ret
jns
cmp
ret
jbe
pop
jmp
sbb
pop
lods
rcl
in
push
es
(bad)
shr
add
add
adc
enter
inc
addr16
outs
push
inc
cwde
xchg
jno
test
jg
jb
test
int
dec
int
sti
push
repnz
sbb
lea
fisubr
out
adc
inc
pop
inc
push
inc
gs
test
mov
scas
repnz
sbb
aaa
mov
scas
jns
mov
pop
jbe
ds
int
cmp
les
fimul
adc
xchg
and
out
clc
fidivr
ja
xor
cmp
out
cmova
mov
adc
arpl
dec
pushf
test
jnp
jmp
inc
pop
xchg
lds
pusha
xor
data16
jge
mov
out
test
pusha
pop
(bad)
adc
jg
sar
mov
sti
sub
(bad)
adc
leave
data16
inc
in
push
sub
cmp
push
(bad)
lea
es
pop
sbb
add
rol
jmp
les
dec
push
daa
xchg
shr
daa
lock
pop
test
aam
imul
mov
pop
sub
loopne
pop
(bad)
(bad)
fst
and
pop
clc
fsin
aad
push
push
call
jns
inc
aam
inc
es
fist
push
mov
cwde
push
pusha
ret
sbb
add
cmp
jmp
cli
add
(bad)
out
dec
leave
xor
repnz
repnz
lods
out
outs
fcom
sbb
mov
xchg
jge
imul
fwait
jns
mov
pop
xchg
movs
add
fstp
outs
or
cdq
lds
xor
mov
(bad)
inc
jae
and
jno
lods
mov
cld
test
pop
jle
and
mov
cdq
(bad)
cmps
shr
or
mov
add
mov
fld
push
xchg
iret
mov
and
daa
and
rcr
scas
test
(bad)
scas
xor
dec
or
adc
fisttp
or
mov
rcl
fistp
xchg
jp
retf
pop
xchg
outs
pushf
test
loope
cmc
rol
int
icebp
lods
push
pop
pop
repnz
add
add
add
or
or
mov
sbb
mov
mov
mov
stos
call
cmc
jp
pop
xchg
fstp
inc
pusha
scas
mov
cdq
inc
or
out
(bad)
adc
push
pushf
cmp
or
mov
iret
pop
test
mov
cmps
xchg
shl
mov
pop
outs
cli
xchg
sub
pop
cwde
loope
and
test
xchg
pop
xchg
add
cdq
lds
(bad)
ins
int3
fisttp
xor
push
test
scas
mov
adc
js
xchg
pop
mov
push
ins
movs
xchg
or
bound
fdiv
fidivr
int3
fbstp
lods
(bad)
out
fist
mov
push
repz
xor
mov
out
call
aas
out
sub
hlt
or
ds
jmp
repnz
ror
or
mov
das
xor
push
jecxz
mov
jmp
mov
es
pop
jmp
and
pop
push
and
fild
xor
mov
inc
pop
inc
mov
outs
nop
mov
shr
ret
in
add
stos
xchg
stos
sbb
nop
push
movs
aad
mov
mov
push
inc
test
adc
pop
jg
repz
mov
in
mov
das
mov
inc
sbb
cmp
or
cwde
add
cdq
jp
and
xchg
fld
into
cs
stc
outs
mov
add
dec
and
clc
dec
jnp
push
mov
call
push
sbb
ja
ret
in
sub
mov
in
inc
pop
inc
aam
popf
in
test
and
(bad)
cmp
or
adc
mov
test
loop
or
or
and
push
psraw
push
jecxz
retf
loope
mov
pop
jo
add
sti
add
mov
or
(bad)
fwait
jo
popa
lods
das
pop
shl
xchg
test
cli
sub
sub
add
cmc
push
sub
aaa
push
adc
das
aaa
jmp
retf
fimul
call
fcom
cmp
xor
neg
adc
lahf
repz
loopne
in
add
test
add
popa
push
add
xor
cmps
jmp
pop
push
mov
jge
lahf
pop
jo
lds
sub
push
in
mov
movs
sub
mov
mov
aam
idiv
and
fcomi
fisttp
cmps
xor
test
pop
adc
ins
ins
cmp
test
pusha
mov
add
or
rcl
out
test
dec
fcmovnbe
xchg
ins
pusha
into
inc
cmps
mul
(bad)
mov
dec
je
ret
xchg
sahf
sub
ud1
push
dec
int3
or
aam
sub
and
add
adc
pop
push
scas
enter
iret
xchg
or
cmps
repnz
in
push
lods
sub
fist
jno
xor
popa
push
arpl
dec
mov
sbb
or
cmp
(bad)
stos
add
xor
fs
sbb
adc
mov
shl
aaa
push
xor
pushf
scas
loopne
sahf
mov
mov
dec
sub
mov
mov
mov
cmps
mov
xchg
mov
push
jmp
and
(bad)
scas
(bad)
jge
fild
push
pop
adc
cs
push
inc
(bad)
(bad)
cs
aas
jle
push
imul
jle
xchg
das
mov
(bad)
in
pop
xchg
out
dec
push
adc
push
test
pop
outs
sbb
sbb
xor
cwde
and
stos
pop
xor
pop
call
loop
pop
retf
mul
lea
iret
ins
out
outs
arpl
xchg
les
cmp
xchg
int
sti
push
out
jmp
adc
push
test
add
retf
(bad)
out
pop
mov
nop
cli
sub
cli
cs
int
mov
push
and
xor
and
fisub
or
in
ret
clc
cmp
mov
pop
push
int
lods
xchg
or
out
test
in
mov
scas
aaa
mov
jnp
lahf
fs
push
xor
cmps
cmps
lea
data16
and
gs
sbb
or
sbb
lds
nop
scas
ret
push
scas
jo
in
shl
sbb
xlat
and
stos
shr
or
xchg
mov
ds
(bad)
cmc
and
cmp
and
in
jp
test
shl
inc
cmp
dec
mov
xchg
xor
dec
push
add
in
popa
and
iret
in
dec
and
int
pop
jns
xor
jmp
fcmovnu
mov
xchg
push
movs
adc
inc
int
mov
call
popa
dec
adc
sbb
or
ss
movs
aad
out
or
pop
sbb
or
iret
enter
outs
gs
adc
push
sar
(bad)
in
jns
xor
xlat
sub
mov
aaa
dec
pop
push
sbb
leave
jmp
push
movs
aas
push
fst
jmp
dec
and
gs
or
sbb
cli
vpextrw
lds
je
sbb
hlt
or
jmp
ins
fldcw
sub
pop
outs
cmp
pop
imul
dec
mov
mov
loope
cmps
and
sub
cmp
sbb
add
adc
add
andps
(bad)
pop
jb
add
movs
push
icebp
mov
movs
imul
and
rcl
sbb
cli
pop
cld
test
add
jecxz
xchg
imul
dec
jmp
rcl
test
ret
lock
jp
loope
sub
addr16
and
(bad)
call
cdq
(bad)
pop
sbb
add
test
pop
enter
inc
test
adc
mov
loopne
push
pop
push
sar
add
ret
mov
outs
xlat
inc
fs
adc
or
cmp
push
or
je
sub
push
cmp
mov
hlt
out
xchg
bound
cli
daa
xchg
pop
call
cmps
fadd
dec
jo
jge
inc
imul
push
rol
mov
sub
mov
sbb
cmp
and
pushf
xchg
and
push
aad
rol
adc
pop
mov
movs
and
scas
jo
(bad)
and
inc
rcr
jle
das
loop
pop
sbb
pusha
or
jb
(bad)
jl
das
add
push
dec
ja
xchg
dec
icebp
jns
dec
popf
and
mov
dec
daa
jg
pop
fdiv
xor
push
ret
(bad)
nop
inc
call
push
mov
aad
stc
inc
xchg
fwait
outs
ds
mov
cmps
js
or
add
pop
in
retf
jmp
jp
inc
pusha
push
add
adc
adc
inc
xlat
xor
ss
aaa
inc
mov
sub
out
popf
retf
or
out
mov
xor
in
popfw
jmp
into
iret
aad
mov
jno
ja
les
fdivr
js
and
jmp
or
or
stos
cdq
jnp
jne
(bad)
sbb
jp
cmc
ins
jle
xor
loope
hlt
in
outs
stos
sub
mov
add
idiv
rcl
add
add
mov
add
cdq
test
(bad)
repz
adc
popa
add
add
xchg
sti
sbb
out
pop
loope
dec
fstp
sti
xchg
cwde
sbb
mov
pop
push
cmp
and
call
xchg
ja
loopne
mov
pusha
mov
icebp
jle
fs
sub
sbb
(bad)
mov
inc
jmp
neg
jl
and
shr
push
int3
cmovno
and
mov
nop
cmc
stc
rcl
and
mov
scas
adc
and
stc
or
in
dec
xor
loope
adc
or
cs
(bad)
fnstenv
ror
mov
stos
out
xor
stc
lods
xchg
xor
fmulp
xor
jmp
aad
les
mov
jl
xor
pusha
ja
ret
jae
mov
es
jecxz
adc
je
outs
mov
cli
ins
cmps
add
mov
sub
add
cmc
cmc
movs
xor
push
mov
add
jmp
xchg
retf
xchg
ss
stos
sbb
pop
(bad)
cmc
cli
mov
cs
mov
mov
pop
and
jns
pop
shl
fist
loop
mov
pop
jle
sbb
xor
shr
fcomp
sbb
or
pop
mov
mov
add
ds
inc
js
rcr
pop
pop
pop
test
sub
outs
adc
(bad)
push
sbb
icebp
in
adc
fnstcw
sbb
xchg
adc
into
fmul
adc
test
movs
retf
rcl
aas
add
leave
outs
aad
jne
punpckhbw
rol
push
jge
jmp
push
push
repz
es
or
icebp
outs
mov
inc
push
jmp
jmp
jge
cwde
popa
mul
push
pushf
mov
pop
stos
movs
sub
loope
mov
in
xlat
jnp
and
pop
rol
stos
fldenv
movs
add
add
or
mov
ins
or
xchg
pop
push
jp
add
mov
xchg
push
or
jb
xor
mov
call
nop
or
cmp
xchg
inc
aad
stos
add
shl
pop
mov
mov
jl
scas
(bad)
test
inc
push
inc
jmp
and
stos
das
lods
fdiv
out
imul
(bad)
std
nop
movs
in
mov
scas
xchg
iret
sub
shl
adc
sub
jl
jmp
add
fadd
lea
sbb
mov
jmp
push
adc
or
hlt
les
push
xor
repz
xchg
mov
mov
xchg
dec
sti
mov
fs
push
pop
cmp
sub
sub
mov
or
push
jecxz
data16
jle
into
cmps
pop
test
push
movs
cmp
rcl
rcr
jle
shl
in
sub
inc
cdq
repnz
dec
push
cmp
or
cld
pop
push
ror
mov
jmp
adc
fstp
and
ja
push
repnz
test
pop
ror
sar
imul
sbb
and
mov
inc
mov
dec
sbb
cdq
clc
xchg
in
stc
jecxz
mov
inc
or
outs
mov
mov
mov
jo
cmp
mov
pop
cmps
stc
cmovp
push
dec
hlt
mov
or
mov
rcl
xchg
and
xchg
jl
jno
es
loop
inc
stos
pop
fbld
push
pop
xchg
jecxz
xchg
lds
test
jae
push
fstp
xor
dec
scas
xchg
push
pop
ja
cmp
pop
in
xor
dec
and
mov
mov
adc
repnz
leave
shr
std
sbb
retf
call
fdivr
jecxz
mov
mov
push
cli
sbb
mov
add
out
scas
or
aam
aaa
dec
mov
icebp
push
std
or
mov
add
add
add
add
add
mov
jae
test
add
ja
in
imul
loop
enter
xchg
xchg
xchg
mov
lds
sub
sub
sbb
sub
cmp
push
mov
xchg
je
push
and
push
ds
mov
jne
cli
dec
pop
jl
sbb
sbb
mov
mov
ja
loop
das
mov
mov
jmp
aam
(bad)
mov
mov
push
add
and
dec
pushf
push
test
mov
aaa
and
push
ret
and
push
aas
and
mov
cdq
dec
lahf
sbb
in
call
and
in
pop
retf
cmp
lods
or
mov
retf
aad
addr16
dec
jnp
clc
call
fild
and
pop
ret
in
iret
(bad)
fld
shr
push
xchg
arpl
retf
dec
call
(bad)
repz
mov
mov
lock
mov
sub
sub
bound
or
fdiv
in
shl
lods
out
adc
push
jno
and
mov
ret
test
test
sbb
mov
mov
out
das
pop
dec
rol
popa
jns
xor
ins
jne
add
jae
pop
pop
jne
mov
push
push
mov
outs
mov
mov
and
xchg
xchg
hlt
loopne
outs
retf
test
int
call
xor
test
cmc
jmp
dec
dec
push
jg
and
lods
mov
imul
add
(bad)
iret
loop
movs
cmp
mov
xchg
and
push
push
jle
hlt
in
inc
(bad)
push
(bad)
rcr
aam
test
and
stc
sbb
loopne
xor
jle
and
cmp
cmp
mov
data16
call
idiv
fstp
lods
sub
dec
mov
in
jle
int3
xchg
push
scas
xchg
outs
sbb
pop
sub
shr
pop
xor
inc
ja
pop
dec
dec
(bad)
pop
adc
dec
add
popf
pop
rcr
sub
cmps
nop
adc
inc
fcomp
or
loope
sahf
push
(bad)
test
cmp
and
sbb
xor
ss
xchg
cwde
iret
mov
mov
sahf
fdivrp
icebp
call
push
hlt
sbb
bound
cli
cli
call
mov
pop
cmc
and
xor
xor
cmps
adc
icebp
push
imul
mov
scas
adc
imul
leave
mov
mov
mov
adc
add
add
call
fadd
movs
retf
inc
push
dec
icebp
lods
inc
xchg
mov
dec
hlt
push
mov
sub
mov
fild
mov
push
das
dec
inc
pop
(bad)
pop
das
movs
gs
xor
cmps
addr16
retf
retf
push
adc
xchg
mov
loopne
jmp
movs
test
add
mov
fucomi
aam
shl
ficom
pop
jns
aam
push
push
push
cmp
push
mov
sahf
adc
movs
lods
popa
xor
ror
mov
and
xor
or
fsubr
push
loop
sub
mov
xchg
fs
leave
dec
jge
pop
mov
pop
ins
inc
shl
dec
test
je
ins
adc
xor
or
mov
adc
sbb
jg
dec
and
lock
xor
mov
test
xor
test
pop
sub
push
shl
mov
hlt
mov
mov
jmp
or
sbb
ficomp
xchg
fsub
out
fstp
jne
push
pop
out
das
fnstsw
push
ret
mov
add
adc
fimul
add
mov
jnp
in
ret
or
xor
addps
jle
xor
sbb
jp
(bad)
sub
(bad)
dec
push
fwait
cdq
fstp
int3
xor
call
push
mov
hlt
data16
loope
enter
mov
pop
jb
mov
dec
pushf
jbe
iret
cmps
sbb
es
fs
push
(bad)
repnz
je
dec
test
loopne
repz
retf
pop
leave
jo
stc
mov
imul
retf
fmul
ret
xchg
mov
sub
adc
pop
aam
arpl
adc
sub
movs
dec
and
adc
push
inc
mov
fnsave
mov
push
fiadd
push
jle
or
sar
xor
sahf
in
call
sbb
fdivrp
mov
out
sar
cwde
push
out
jecxz
(bad)
ins
daa
jg
adc
pop
mov
mov
in
call
xchg
dec
mov
mov
jnp
dec
in
jmp
dec
imul
rol
mov
fidiv
add
mov
clc
stos
mov
push
and
mov
mov
je
(bad)
jnp
cmc
in
or
push
bound
cmps
lea
fdivr
mov
out
sub
cmps
addr16
fs
pusha
in
dec
rcl
or
add
mov
lods
add
nop
ss
jmp
cmp
ins
fdivr
mov
mul
mov
enter
push
imul
push
push
or
dec
cmp
pop
lods
pop
jbe
pop
stc
jge
adc
cld
inc
pop
clc
mov
sbb
mov
fidivr
xchg
mov
test
dec
adc
ror
mov
sti
xchg
add
(bad)
jmp
cmps
jl
pop
mov
and
or
daa
pop
call
add
daa
add
retf
xchg
cmc
jge
call
sub
(bad)
hlt
xchg
or
push
dec
sub
mov
(bad)
sub
dec
das
xchg
ret
xor
imul
iret
pop
push
dec
xor
add
add
add
int3
test
fstp
add
stos
imul
in
sub
sub
out
bound
(bad)
dec
xchg
xchg
ror
mov
dec
jl
push
jno
mov
jnp
push
aas
stos
fdivp
jne
and
cmp
in
xor
cld
dec
xchg
jmp
test
gs
jmp
push
push
mov
test
sub
cmp
sbb
cdq
add
lea
sub
xchg
rcr
or
inc
cmp
ss
shr
(bad)
mov
or
test
pop
push
pop
sbb
pop
jl
(bad)
sub
pop
cmc
dec
outs
daa
or
ja
clc
fnstcw
cs
stc
ds
sahf
pop
and
push
mov
mov
push
cmp
ss
jl
lock
mov
add
(bad)
pop
cmp
sub
jae
add
push
test
(bad)
fld
leave
movs
std
mov
sbb
adc
stos
dec
dec
cmp
push
xchg
fnstenv
lahf
mov
add
add
add
pop
add
adc
xchg
movs
fbld
inc
push
cmps
clc
neg
ins
fsubr
in
or
add
retf
mov
dec
mov
(bad)
ins
xchg
dec
mov
mov
inc
shl
das
xchg
jge
and
and
cmp
dec
lods
(bad)
ja
xlat
test
outs
mov
iret
rol
ds
out
int
fimul
mov
add
xchg
sti
rcr
jecxz
(bad)
and
mov
aam
call
ret
adc
(bad)
pop
xor
mov
pop
xchg
pushf
inc
pop
mov
test
xchg
xchg
mov
movs
mov
movs
jmp
(bad)
in
add
mov
cmp
loop
inc
ins
add
add
and
popa
lds
or
enter
nop
sbb
jo
retf
call
repnz
mov
lods
popa
stos
jle
mov
retf
fidiv
loopne
jne
cmc
test
in
pop
ins
or
out
std
int3
hlt
xchg
xor
out
mov
pop
(bad)
cli
sbb
retf
mov
inc
dec
aad
into
repz
mov
aad
inc
push
std
movs
test
shr
push
mov
mov
shl
cmp
add
push
push
push
into
sub
or
push
pop
(bad)
mov
out
xor
mov
repnz
stc
jge
repnz
cs
jbe
sub
loopne
repz
cmp
mov
jecxz
scas
loope
jle
cmp
ins
lea
fs
adc
cmp
push
bound
dec
mov
mov
(bad)
add
out
or
mov
std
xchg
mov
dec
cs
adc
xor
pop
sub
popf
ja
fs
xor
movs
icebp
jmp
jnp
inc
cld
mov
movs
inc
int3
test
sbb
cmp
scas
aam
add
test
mov
fbld
out
sbb
lock
push
cmp
pop
xor
pop
jmp
cmp
add
add
pop
scas
lahf
arpl
sub
cli
mov
inc
adc
add
push
lods
mov
dec
inc
cmp
xchg
das
and
jg
pop
retf
stc
xor
cmp
pop
jecxz
push
jae
mov
pop
xchg
inc
jg
(bad)
std
push
sub
xchg
adc
mov
jl
repz
jbe
mov
inc
sbb
or
jmp
push
and
mov
xchg
ins
je
fisttp
pop
add
loope
fistp
sbb
pop
js
jmp
inc
addr16
push
mov
and
adc
jbe
repnz
sub
sbb
nop
das
outs
mov
pop
jnp
pop
cmp
mov
and
xchg
stos
stos
scas
mov
pop
pop
in
or
sbb
push
fldenv
pop
shl
push
iret
sub
out
mov
pop
rol
mov
jge
ror
or
in
push
fstp
sti
sub
mov
jnp
into
mov
jnp
lds
ret
inc
pop
xchg
imul
sti
add
mov
mov
cmp
shr
out
lds
inc
mov
push
xor
leave
or
or
mov
push
jmp
jmp
ss
xchg
push
adc
pop
test
retf
push
sub
in
out
pop
push
mov
xchg
lock
push
xchg
xchg
bound
jnp
shr
cmp
imul
xlat
cmc
or
and
dec
(bad)
in
daa
es
sub
call
fld
add
repz
inc
shl
(bad)
cmp
jbe
xchg
ret
(bad)
mov
into
and
push
lea
jbe
jmp
sub
das
mov
mov
repnz
mov
int3
rcl
stos
xlat
ss
dec
nop
mov
adc
ret
fld
cmp
and
(bad)
call
fldenv
sbb
ret
pop
stc
mov
or
je
dec
mov
in
in
jl
cmp
push
xchg
mov
mov
push
pop
xchg
ret
xor
pusha
pop
jne
and
scas
mov
mov
mov
dec
mov
adc
or
push
bound
sbb
inc
cmove
js
rol
xchg
ret
pop
pop
scas
loop
in
and
aam
sub
sub
mov
dec
and
(bad)
std
mov
outs
xor
xchg
sub
in
mov
and
outs
inc
cmp
cmps
xacquire
mov
jle
cmp
pop
xchg
pop
mov
mov
cmc
in
mov
or
adc
jle
mov
(bad)
ss
cmp
neg
(bad)
shl
gs
popf
jnp
(bad)
(bad)
idiv
push
mov
out
mov
jae
sbb
ja
lds
jb
xchg
sahf
ss
sub
mov
adc
sti
xchg
outs
cmp
loope
dec
sbb
mov
and
enter
ins
lea
add
cmps
(bad)
cmp
mov
(bad)
sub
push
int3
lahf
dec
jl
fnsave
data16
vmovdqa
mov
and
pop
lea
call
pop
adc
xor
push
or
fnstsw
xor
adc
inc
push
ss
fdiv
pop
movs
xor
in
cwde
test
cmps
xor
lahf
mov
out
inc
mov
xchg
popa
bound
or
pop
add
int
std
in
and
inc
loope
jno
dec
lock
add
xor
jno
int
xchg
push
wrmsr
popa
shl
mov
jg
es
or
shl
scas
jge
mov
ja
scas
in
leave
out
ja
jnp
mov
fxch
iret
mov
scas
mov
cmps
jbe
iret
in
shr
adc
les
mov
add
push
lea
xchg
cmc
(bad)
jb
or
sbb
cmp
div
jo
xchg
outs
dec
fcmovne
xor
lds
lea
rcl
jmp
dec
in
jno
div
gs
addr16
scas
jecxz
inc
inc
rol
icebp
mov
loop
mov
jo
xlat
and
lods
mul
test
jae
adc
jmp
cmp
nop
inc
jge
and
or
enter
xchg
xor
xchg
pop
dec
mov
fnstcw
sbb
sbb
mov
inc
clc
std
pop
jne
and
cmps
dec
shl
cmp
or
cli
add
xchg
ror
out
and
ins
xchg
fidiv
inc
movs
cmp
pop
add
push
out
repnz
sub
or
mov
mov
std
fidiv
jl
in
loopne
adc
jnp
mov
mov
mov
lock
add
add
add
(bad)
xchg
cwde
(bad)
mov
outs
and
mov
loop
setnp
pop
dec
mov
ds
xchg
popaw
push
loop
stos
mov
into
xor
push
push
repz
clc
cmp
mov
movs
dec
popf
bound
sti
dec
das
cli
jge
xor
in
test
call
sub
and
xor
cmp
outs
add
outs
jmp
out
sub
mov
mov
js
lahf
stos
lods
dec
pop
ret
fs
cld
push
adc
dec
xor
xchg
aas
sub
(bad)
and
push
mov
inc
mov
lahf
mov
dec
cmp
adc
movs
mov
nop
loope
leave
mov
mov
pop
pop
xor
xor
cmps
pop
sub
mov
mov
xor
xchg
fist
jae
adc
push
adc
shl
fcmovu
pusha
fdiv
shl
and
adc
test
mov
adc
ins
or
or
push
push
data16
jmp
out
adc
xchg
or
lsl
dec
push
and
and
inc
pop
mov
jmp
dec
sahf
fldenv
or
not
outs
fld
test
rol
stos
cmc
pushf
xor
fcmove
mov
ds
mov
and
push
out
jp
mov
xor
lods
imul
cmp
scas
(bad)
mov
and
xor
push
out
or
nop
cmp
cmp
inc
or
push
(bad)
push
daa
inc
test
xor
adc
ja
cmp
std
cmp
push
pop
mov
js
xor
add
cmp
aaa
pusha
pop
out
ret
in
pop
mov
fcom
mov
pop
push
sar
push
jo
js
pop
pop
inc
and
rol
test
mov
repz
pop
jle
mov
sbb
mov
mov
sbb
sub
xchg
mov
fcom
into
ins
pop
pop
push
mov
inc
jl
fild
jge
inc
imul
dec
sti
out
cmp
bnd
cmp
das
call
sbb
retf
sub
cs
js
push
ja
push
xchg
inc
xor
mov
mov
and
xchg
ds
in
rcl
xchg
aad
pop
xchg
enter
push
xchg
cwde
je
jno
sbb
cmps
ret
jns
sub
xchg
aam
and
dec
iret
adc
xor
xchg
xor
cmp
(bad)
adc
or
repnz
pop
std
fwait
push
stos
out
repz
aaa
or
sub
into
and
lock
nop
mov
push
test
das
imul
add
bnd
out
loope
les
xor
mov
gs
sbb
push
jns
cmp
pop
push
jge
cmp
push
stc
imul
sbb
pop
out
lock
js
add
add
leave
adc
mov
adc
xor
add
(bad)
in
loopne
mov
aad
lods
fldenv
inc
nop
scas
mov
mov
bound
imul
cld
or
pop
pop
mov
out
add
add
add
adc
pop
addr16
loope
xlat
(bad)
add
jle
sbb
cmps
or
ja
ret
dec
mov
gs
cmp
sub
push
nop
add
loope
jl
pop
jnp
cmp
push
iret
mov
shl
call
movs
ds
int3
nop
enter
cmc
cmp
xor
or
cmp
sbb
push
mov
pusha
and
push
and
les
stos
mov
imul
jno
mov
loop
and
int3
mov
push
pushw
jno
xchg
mov
pop
mov
out
dec
int
adc
mov
dec
and
icebp
or
fwait
xchg
mov
jmp
inc
xchg
add
or
sbb
jecxz
mov
gs
(bad)
popf
xchg
mov
cmp
mov
adc
pop
in
ret
ror
mov
mov
imul
mov
into
mov
inc
mov
cmps
(bad)
(bad)
out
repz
mov
jp
inc
xchg
call
sbb
and
ja
test
cdq
push
jbe
addr16
mov
aam
les
mov
stc
shl
ds
(bad)
outs
jns
test
jmp
cmc
fsubr
push
or
inc
jg
add
leave
and
mov
gs
cs
das
dec
not
jne
jo
push
sub
popf
fwait
iret
and
xor
add
add
add
add
add
add
push
fadd
or
fsubr
int3
adc
jp
add
ficomp
into
xchg
add
in
mov
add
retf
outs
mov
retf
push
mov
outs
ins
icebp
loop
pop
xchg
or
mov
dec
dec
jl
adc
outs
(bad)
xor
outs
leave
fwait
sar
mov
mov
push
or
xor
stc
loope
dec
loop
mov
mov
js
inc
pushf
cmps
stc
ss
sbb
xor
or
leave
or
mov
jo
push
arpl
stos
imul
cmp
inc
std
mov
repz
or
ret
mov
out
cmp
xchg
popf
mov
imul
mov
retf
mov
adc
jmp
push
fisub
into
push
adc
cmps
mov
adc
pop
jle
jnp
sub
into
xor
sbb
dec
movs
mov
sub
pop
and
outs
mov
cmp
into
shl
dec
push
inc
xchg
jns
jg
pop
cdq
popf
mov
lea
mov
xchg
dec
mov
iret
imul
push
push
sahf
shl
and
out
xchg
add
jae
xchg
daa
inc
nop
xchg
lods
mov
mov
in
mov
push
sub
bound
adc
mov
dec
jle
xchg
xlat
aaa
xor
fdivrp
dec
scas
call
xor
push
xlat
loope
sub
ffreep
cmp
xchg
sbb
nop
and
lock
mov
pusha
scas
clc
pop
(bad)
mov
inc
test
ror
fnop
out
jecxz
xchg
inc
jmp
mov
ret
add
into
pusha
das
div
jns
loopne
push
jg
mov
dec
mov
jno
lods
out
lock
xor
dec
retf
sahf
mov
adc
jae
sub
jb
dec
cmp
cmp
retf
xchg
movs
pop
test
(bad)
sub
imul
mov
sub
ja
jle
mov
call
dec
dec
scas
dec
mov
sbb
sub
inc
sahf
jge
int3
mov
or
xchg
std
ret
fadd
push
aam
push
pop
int3
pop
pusha
jp
xlat
cs
mov
das
arpl
or
loop
mov
(bad)
mov
call
je
in
push
stc
dec
mov
shl
rol
cmp
pop
mov
fcomp
imul
mov
les
stos
xor
jo
dec
mov
push
or
shl
jmp
stos
retf
push
stc
mov
mov
push
es
fwait
inc
sub
xor
mov
xchg
jnp
mov
lds
std
shr
pop
(bad)
push
fmulp
jg
and
std
sbb
mov
test
icebp
ds
add
sub
add
add
jmp
arpl
xor
push
cmp
inc
rep
mov
imul
repnz
repnz
push
fisttp
aaa
pop
movs
retf
push
push
cmp
in
xchg
in
dec
movs
sub
pop
pop
push
dec
sbb
mov
cmc
lock
test
pop
ja
es
fwait
xlat
sub
in
mov
test
jns
std
cdq
out
add
jbe
xchg
enter
sbb
ret
mov
pop
push
jmp
mov
aam
sub
push
xchg
mov
jns
pop
mul
mov
mov
arpl
ret
sahf
loope
dec
add
imul
or
xor
add
mov
test
adc
aaa
jno
call
pop
add
add
mov
mov
jno
jmp
mov
cmp
sbb
mov
adc
movs
mov
fild
test
push
xchg
test
arpl
rol
or
add
popf
push
xchg
sub
push
out
mov
adc
test
hlt
mov
lea
test
xor
mov
mov
rcl
push
adc
outs
mov
pop
cmp
mov
pop
sahf
pop
inc
mov
and
aad
fisubr
repnz
(bad)
out
or
jns
ins
mov
imul
pusha
cs
xchg
jmp
fisub
lea
mov
push
js
pusha
add
sbb
mov
pop
dec
(bad)
fcom
mov
inc
dec
xor
sti
fnstenv
mov
enter
push
pop
cs
outs
shl
outs
add
push
jbe
and
cmc
iret
fs
push
pop
push
push
adc
push
xchg
cmp
sub
push
inc
or
jb
cmc
ret
pop
xchg
inc
stos
mov
pusha
loop
addr16
std
outs
jl
cwde
xchg
and
(bad)
ss
pop
jbe
jg
std
push
add
aam
lds
push
xor
fcmovb
retf
push
mov
inc
iret
push
xchg
std
jl
inc
(bad)
adc
fmul
mov
cmp
add
xchg
fwait
push
push
test
jb
dec
aas
pop
add
adc
fbstp
or
pop
pop
push
mov
iret
test
add
shl
mov
bnd
leave
mov
cmps
test
loopne
cmpxchg
popf
xchg
ja
scas
sub
pusha
mov
and
imul
push
cdq
(bad)
and
inc
push
xor
ror
push
fisubr
push
mov
mov
(bad)
dec
add
mov
jae
cmp
pushf
jge
sar
in
std
in
pop
xchg
cmp
movs
sub
int
stc
dec
xchg
pop
stos
push
adc
and
inc
iret
push
jo
mov
test
aas
or
nop
retf
(bad)
loopne
fbld
and
xchg
pop
out
rcl
mov
icebp
das
xor
pop
cwde
mov
call
mov
xor
ss
cmps
sub
mov
and
cmp
enter
or
hlt
stos
mov
add
or
test
cmp
and
mov
ins
into
in
repz
dec
pop
in
dec
mov
sbb
push
jmp
ret
sbb
add
daa
dec
and
rol
pop
in
ror
jecxz
push
pop
scas
jl
xchg
stc
push
cmp
ds
rcr
fmul
call
pop
dec
push
ficom
xor
pop
sbb
pop
cmps
xchg
loope
shl
or
es
xchg
sbb
adc
sub
adc
fwait
arpl
test
aam
movs
mov
lods
aad
add
and
lds
adc
(bad)
sbb
jg
mov
jo
dec
cli
sbb
fdiv
in
bswap
pop
cmp
sbb
icebp
sbb
xchg
add
jno
and
dec
dec
retf
test
leave
push
(bad)
in
mov
xor
add
sub
or
fnstcw
xchg
call
ins
pop
dec
add
out
add
pop
nop
bound
jmp
inc
inc
(bad)
pushf
scas
pop
add
ja
lods
xchg
and
retf
push
shr
fwait
jne
inc
imul
sbb
shl
adc
rol
jge
mov
aam
xchg
pop
loopne
or
outs
out
xchg
cdq
lea
ficom
ss
push
xor
jle
cdq
mov
and
sub
sub
fcom
push
movs
or
xchg
dec
sbb
enter
cmp
sbb
dec
push
sbb
gs
out
rol
sbb
and
int3
add
and
sahf
mov
or
mov
popa
sub
cmp
ficomp
inc
add
add
push
add
cdq
pop
add
dec
test
xchg
retf
cmp
mov
pushf
popf
xor
pop
add
test
mov
js
in
outs
mov
lidtd
adc
retf
int3
or
mov
dec
leave
sub
out
sahf
mov
mov
ins
mov
mov
data16
xchg
fcomi
(bad)
sahf
loop
cmp
cmp
imul
fwait
call
cmps
int
ds
mov
imul
fwait
ins
pop
adc
(bad)
stos
into
cmp
xchg
outs
jmp
add
es
jns
sub
stos
adc
(bad)
mov
inc
call
sub
xchg
js
lods
mov
push
fisttp
aad
cmps
addr16
inc
jmp
jne
or
fimul
jmp
jae
mov
aaa
inc
add
aam
jmp
adc
push
fidiv
cmp
jno
leave
sub
mov
and
sahf
push
xchg
hlt
mov
mov
aam
inc
mov
add
mov
out
mov
clc
(bad)
xor
popf
into
test
outs
xchg
imul
fs
nop
cmp
std
adc
jg
retf
mov
jmp
int
shl
mov
jo
arpl
clc
aaa
push
cmps
xor
int3
int
aaa
dec
lea
lea
sub
or
mov
mov
cmp
repz
enter
cmp
mov
mov
pop
push
jle
xchg
lock
adc
xchg
xor
retf
mov
movs
popf
sar
leave
sti
sbb
add
mov
mov
imul
mov
or
nop
ror
stc
data16
inc
cmp
out
inc
adc
or
and
or
mov
out
movs
outs
mul
cmp
stos
rcr
lock
popf
cli
and
(bad)
mov
jb
pop
inc
xchg
add
adc
dec
daa
cld
push
cmp
jecxz
bound
or
xor
shl
icebp
lahf
(bad)
int3
fild
mov
pop
pushf
daa
scas
in
mov
call
mov
es
push
into
mov
sbb
jne
fdiv
int3
test
ss
popf
cmc
ins
xlat
fistp
bound
sbb
push
in
mov
aad
xor
mov
cmp
sub
les
imul
mov
fs
pushf
fadd
mov
inc
adc
inc
lahf
or
rol
pop
fnstcw
jmp
jl
jb
push
(bad)
dec
mov
sbb
ret
(bad)
cmp
and
dec
mov
ja
sub
fdivp
or
push
jne
xor
ficom
mov
jp
out
xchg
movs
mov
stos
dec
pop
daa
daa
cli
cmps
test
in
in
mov
aam
sbb
jg
xor
icebp
or
lods
pusha
push
inc
and
pop
mov
fisttp
or
jmp
test
stc
pop
inc
jae
nop
push
and
(bad)
out
(bad)
xor
sub
imul
jl
sbb
dec
sub
int
fisttp
xor
out
mov
inc
imul
iret
inc
shl
fwait
xchg
adc
movs
aas
movs
mov
aad
jno
test
rol
clc
push
das
mov
and
mov
test
and
(bad)
cmp
loope
jmp
sbb
adc
lods
sbb
push
sbb
sub
or
xchg
jno
pop
in
loope
inc
ins
test
jae
arpl
(bad)
int3
sti
or
push
inc
cwde
push
jp
loopne
retf
stos
mov
push
enter
sub
mov
fist
dec
movs
sub
ins
sbb
mov
cmp
sbb
mov
jmp
cmp
cmp
fbld
mul
xchg
adc
push
cmp
dec
inc
pop
fadd
mov
mov
retf
mov
pop
adc
(bad)
setge
jecxz
loop
adc
xchg
fucomi
xchg
dec
inc
xor
cmp
xor
jo
dec
call
sbb
adc
and
mov
stc
mov
add
dec
pop
push
mov
and
sub
mov
dec
mov
push
add
shr
imul
aaa
add
daa
xlat
mov
mov
jae
arpl
in
fmul
add
sbb
outs
int3
xlat
inc
pop
test
popf
push
xor
rcl
sbb
xchg
cld
add
sub
clc
in
hlt
je
jae
inc
dec
scas
inc
loopne
xchg
pop
lea
ds
pop
jle
mov
data16
fs
cmp
dec
inc
test
fwait
test
or
pop
xchg
cld
xor
cmc
mov
inc
pusha
arpl
xor
sar
jns
or
data16
jnp
in
hlt
scas
add
and
movs
adc
mov
push
and
jnp
idiv
in
popf
sub
cmps
div
or
iret
rol
ror
ror
sub
retf
mov
neg
jcxz
xor
stc
gs
sbb
pop
xor
or
sahf
xchg
push
shl
ret
mov
mov
dec
push
mov
in
sub
sub
fs
sbb
sbb
inc
fidiv
jmp
js
retf
cmp
adc
or
or
and
(bad)
pop
add
pop
sbb
inc
sahf
xchg
test
stos
add
inc
pop
and
and
sub
mov
(bad)
push
dec
sahf
ja
mov
add
fisub
push
dec
pop
nop
sar
adc
cmp
out
movs
imul
or
in
out
inc
pop
bound
push
(bad)
sub
and
fdivrp
jl
and
jmp
mov
ret
inc
cs
(bad)
shl
ins
or
arpl
jmp
sti
pop
call
and
xor
jns
jle
movs
sbb
ror
pop
xor
std
xchg
add
xor
xor
push
pushf
mov
push
sub
test
stos
shl
xchg
adc
in
jb
mov
test
add
dec
add
add
add
add
cmps
jp
popa
pop
in
xchg
pushf
shl
push
fwait
and
or
loopne
mov
iret
mov
mov
mov
mov
jge
xchg
sbb
cmc
add
test
fwait
nop
cmp
ror
dec
nop
bound
cld
mov
adc
cmp
into
xor
imul
fwait
ss
and
ja
adc
xchg
jle
inc
push
mov
or
loopne
or
sahf
lods
xchg
(bad)
jge
push
pop
and
fs
xlat
gs
or
sub
int3
scas
xchg
dec
adc
pcmpgtd
adc
dec
daa
sbb
sub
fnstsw
out
fild
cmp
dec
pushf
mov
jge
xor
ret
outs
or
scas
sub
scas
lahf
retf
mov
mov
inc
jns
or
pop
jne
(bad)
rcr
inc
inc
out
inc
je
or
mov
mov
adc
ins
shr
xlat
in
add
repnz
cdq
sbb
loope
dec
or
sub
in
jp
xchg
pop
and
xchg
das
push
dec
retf
mov
inc
sub
jp
icebp
xchg
scas
sbb
add
push
add
xchg
jl
imul
inc
push
mov
or
out
cwde
dec
fistp
sti
lahf
inc
clc
ret
push
or
cmp
sbb
mov
adc
add
xlat
das
loop
sbb
xor
leave
jne
fdivr
(bad)
rcl
mov
and
imul
lods
and
sbb
loope
les
fs
stos
in
cmps
mov
mov
add
fs
int
fsubp
popa
add
push
jmp
into
retf
or
rol
(bad)
xor
inc
hlt
and
enter
add
mov
es
xchg
jb
stc
inc
repz
mov
outs
mov
pushf
lock
adc
xchg
lea
push
inc
in
xor
or
push
movs
xchg
int3
rcl
test
pushf
mov
jo
cmps
dec
aaa
pop
ror
sar
and
xchg
ins
jbe
pop
in
push
cmp
sub
cmp
pushf
gs
ins
sar
pop
pusha
pusha
loope
lds
mov
lods
mov
sti
adc
sbb
dec
fsubrp
push
xor
leave
sar
push
adc
xor
lods
cld
adc
mov
push
sub
ret
stos
mov
das
xorps
cmp
jecxz
lahf
or
retf
mov
mov
leave
aas
mov
movs
clc
inc
push
xor
test
std
ss
imul
sar
dec
cdq
int3
sbb
xor
xor
add
std
fs
mov
pop
inc
call
(bad)
and
test
sbb
repnz
xor
push
push
jp
sbb
cmc
sub
push
cmp
cld
mov
ficomp
inc
in
ds
fldenv
push
cmp
add
clc
stos
aaa
adc
mov
jb
imul
rcr
ss
ret
in
xchg
cmc
adc
ds
div
sub
call
pop
sti
ror
or
ds
fidivr
iret
aaa
in
mov
out
jae
pop
jmp
and
inc
aas
push
mov
or
mov
icebp
dec
inc
jae
cmps
cmps
out
adc
mov
push
push
ficom
xchg
stos
mov
push
das
test
(bad)
cwde
aam
adc
(bad)
mov
sahf
mov
retf
pop
js
sub
push
mov
dec
sar
addr16
(bad)
and
pop
jae
jmp
lods
ss
out
inc
test
mov
lock
push
nop
sub
jp
sbb
mov
ins
(bad)
fwait
aaa
cmp
push
sbb
push
fist
stc
jecxz
jecxz
add
pop
fldenv
push
lea
pop
mov
mov
int
sti
test
aas
xor
clc
cmps
(bad)
dec
or
dec
pop
icebp
je
loope
(bad)
leave
bound
in
and
nop
mov
xlat
push
mov
push
mov
std
test
es
cmc
clc
aaa
scas
(bad)
mov
aam
je
or
or
jg
jmp
jmp
cmp
out
or
stc
add
daa
pop
les
imul
add
xlat
mov
js
cmp
stos
inc
adc
outs
sbb
ja
aad
sbb
rcr
in
fsub
fsubr
xchg
or
repz
mov
icebp
jmp
mov
sub
fmul
cwde
ja
jno
sub
cmp
jmp
xor
sub
push
loop
lds
mov
fnstenv
or
movs
pop
inc
sbb
xor
xchg
sub
inc
sub
iret
mov
adc
shl
sbb
hlt
lahf
add
loope
div
sahf
cs
inc
aam
sub
jns
sbb
shl
stos
ret
jno
sub
dec
or
adc
mov
ds
(bad)
lds
stos
xchg
fcomip
js
jmp
scas
repz
add
inc
ret
mov
fs
aad
scas
ins
rcr
pop
rcr
push
in
dec
stc
lea
sbb
je
mov
dec
mov
fs
in
outs
cdq
add
pop
cmp
jg
mov
repnz
add
in
or
jmp
fcmovne
enter
shl
test
retf
(bad)
js
pop
inc
add
and
and
sbb
mov
xlat
popa
sti
cwde
adc
test
or
xlat
fbstp
adc
push
push
fs
scas
sbb
out
lahf
dec
sub
je
std
aas
xor
jp
xchg
test
cli
bound
repnz
pusha
inc
pop
jecxz
in
mov
lods
xchg
ins
xor
sub
fdivr
cmps
and
push
jne
add
mov
rcl
mov
inc
cmp
push
jb
xlat
mov
daa
popf
cmp
xor
pop
punpckhbw
sbb
jae
out
xchg
stc
push
dec
loopne
out
mov
into
mov
iret
out
pop
in
leave
popa
and
enter
pop
cmp
call
mov
repnz
dec
sub
fld
clc
sub
test
push
adc
push
loop
sub
cs
jge
sbb
hlt
or
in
mov
retf
nop
cmp
das
sahf
stos
or
sti
xchg
or
mov
inc
or
mov
stos
test
cmp
push
add
ss
push
jbe
add
in
xlat
out
stc
outs
out
cmps
pop
inc
jae
adc
push
jae
movs
jne
xor
xchg
dec
ins
xchg
pusha
xor
test
and
aad
std
mov
add
and
add
outs
popa
out
dec
in
xchg
int
xor
pop
xchg
jbe
retf
addr16
ds
ret
sub
mov
div
dec
call
lds
push
(bad)
test
mov
pusha
out
mov
pusha
xor
and
or
add
add
add
add
add
popa
cmp
mov
mov
or
std
arpl
ins
mov
add
inc
repnz
pop
inc
pushf
popf
rcl
xchg
cmc
mov
mov
cmc
out
lahf
adc
adc
mov
mov
les
add
bound
lods
lds
or
out
movs
in
pop
or
inc
mov
jns
fdivrp
jo
xchg
inc
ss
in
sbb
lahf
or
in
mov
ins
imul
inc
imul
fild
shl
repz
dec
mov
sbb
pop
sub
xor
dec
mov
mov
mov
xchg
mov
(bad)
mov
gs
sbb
repnz
fst
add
cs
xor
jecxz
push
push
mov
loop
mov
clc
imul
ret
(bad)
mov
stos
push
(bad)
pop
icebp
icebp
jno
mov
loopne
inc
cdq
imul
jge
push
lds
mov
stc
jmp
mov
pop
push
js
jge
hlt
inc
mov
inc
rep
les
mov
lods
sbb
mov
or
popa
push
stc
cmp
xor
xlat
or
int3
and
setno
mov
dec
xchg
cwde
inc
cdq
mov
cli
dec
stos
mov
stc
lods
jb
out
pop
fiadd
pushf
dec
cdq
pop
out
adc
push
xor
adc
or
leave
dec
xchg
mov
pop
inc
cmc
push
loop
test
leave
arpl
dec
sar
int
ret
call
push
clc
cld
mov
cmp
xor
mov
mov
arpl
mov
pop
gs
mov
or
repz
mov
out
vphsubwd
mov
mov
pusha
aas
mov
fst
out
shr
cmp
mov
and
into
ss
(bad)
popa
push
and
out
in
sub
fdiv
shl
mov
xor
stc
out
rol
imul
mov
stc
fcomp
mov
xlat
adc
push
xchg
mov
frstor
mov
add
es
dec
(bad)
rcr
popf
retf
jno
add
(bad)
push
sahf
push
push
sub
movs
scas
(bad)
push
jmp
jae
gs
mov
dec
int3
mov
dec
xor
inc
sbb
test
mov
jmp
mov
dec
sub
push
shl
xchg
dec
inc
xchg
(bad)
cmps
dec
jo
repnz
jno
mov
call
(bad)
cmp
jbe
pop
mov
dec
hlt
xchg
xchg
jb
call
jle
xchg
pop
aas
or
sub
push
xor
add
add
add
add
add
add
push
push
mov
(bad)
outs
add
popf
and
cmp
aad
cwde
repz
pop
sar
imul
fcomp
(bad)
jl
out
cmp
push
nop
fidiv
cwde
and
mov
shr
sahf
jns
out
imul
iret
les
sub
push
out
jnp
inc
or
or
movs
imul
mov
retf
cmc
mov
inc
clc
mov
push
ror
test
add
jae
mov
xchg
adc
js
nop
jbe
lds
popa
mov
mov
xchg
out
mov
aaa
in
mov
stos
nop
cs
outs
fmul
in
dec
cmp
retf
ins
and
xchg
aad
ins
cmc
cmp
jbe
add
mov
imul
dec
repnz
call
les
pop
fucomi
push
fdiv
adc
out
pop
adc
scas
adc
aam
daa
mov
shl
or
xlat
movs
mov
xor
mov
adc
enter
es
cwde
das
into
xchg
mov
jecxz
cmp
sub
inc
gs
daa
sbb
test
repz
sbb
inc
adc
jmp
push
xor
fcmovnb
fld
mov
out
jg
mov
pop
jne
or
add
or
retf
(bad)
daa
in
pop
mov
(bad)
retf
arpl
inc
mov
push
ret
lea
out
and
sub
fcomp
inc
aas
pusha
cmp
push
int
jmp
mov
lods
jb
add
sbb
arpl
pop
retf
xchg
and
xchg
icebp
mov
ja
xor
sbb
jl
cmp
data16
icebp
or
xor
xor
cs
fcom
mov
sbb
xchg
inc
icebp
ret
cmp
(bad)
out
add
mov
jbe
xchg
dec
push
push
sar
dec
pushf
push
sbb
dec
pop
cmp
sbb
jge
in
jo
gs
scas
jns
popa
int3
dec
mov
test
sub
cmp
inc
adc
iret
daa
xchg
and
lods
mov
inc
scas
push
sub
adc
pusha
and
cmp
xor
xchg
sub
jmp
mov
inc
stos
jge
dec
push
popa
lods
dec
ja
mov
mov
pop
xchg
jae
dec
cmp
sbb
arpl
cmp
adc
mov
(bad)
imul
repnz
pop
sub
sub
cmps
inc
add
pop
add
jg
and
mov
stos
add
push
les
or
inc
xchg
adc
cmp
mov
ins
sub
(bad)
je
imul
std
sub
jno
ror
aaa
(bad)
outs
fld
or
mov
or
bound
mov
jecxz
sahf
or
jbe
jmp
cmp
loope
in
enter
jne
xchg
adc
popf
js
mov
stos
jmp
outs
ins
mov
in
imul
clc
xor
xor
(bad)
fsub
pop
or
stos
cdq
mov
test
rcr
movs
cmps
stos
adc
inc
sbb
out
popa
mov
push
cld
push
(bad)
in
inc
dec
lds
(bad)
sti
inc
frstor
mov
pop
ss
push
ins
xor
push
pop
cmp
or
scas
popf
repnz
cmc
pushf
(bad)
out
rcl
push
(bad)
sub
cld
sub
dec
test
(bad)
xor
sub
or
es
test
pop
add
mov
sahf
adc
jmp
jecxz
clc
outs
out
mov
shr
and
into
stos
and
cwde
cmp
lds
rol
pop
cmc
inc
adc
push
(bad)
mov
mov
sbb
jns
dec
popaw
(bad)
cmc
jbe
dec
push
jb
aas
lahf
and
shl
jge
and
popf
daa
hlt
aas
daa
imul
cmp
adc
int
sub
js
mov
(bad)
rcr
mov
(bad)
popa
test
mov
addr16
cmp
test
cdq
(bad)
sub
retf
inc
clc
ins
or
mov
push
fs
mov
adc
pop
and
mov
or
test
out
or
or
out
mov
aam
test
push
cmp
xor
cld
and
add
cmps
retf
or
setl
cmps
movs
and
cwde
popa
in
dec
stos
aas
inc
lahf
sbb
(bad)
xchg
xor
arpl
pop
ret
xchg
gs
sbb
loopne
scas
mov
mov
and
mov
pop
out
sbb
pusha
lods
jae
imul
lods
les
int
loopne
es
xor
pop
jno
fwait
(bad)
xchg
mov
push
hlt
cmps
push
inc
pop
jbe
mov
arpl
mov
and
push
ss
mov
dec
push
xlat
(bad)
pop
cmp
cmps
into
mov
mov
xor
jmp
call
enter
pop
mov
lods
scas
dec
mov
jb
lea
movs
add
cmps
inc
cmc
pop
outs
xor
push
ficom
push
js
aad
into
xchg
je
js
addr16
js
xor
mov
or
pop
jmp
mov
cld
repz
pop
iret
jmp
mov
pop
xchg
xchg
mov
pop
jmp
ja
arpl
and
pushf
pop
popa
adc
add
outs
in
int3
fcom
pop
jmp
dec
int3
or
xor
push
dec
mov
nop
cmc
inc
cmovne
pushf
jns
fwait
sub
sahf
sub
xor
jg
fild
push
fmul
xchg
jo
mov
repnz
sub
mov
int3
into
lods
or
dec
jne
ss
loop
xchg
xchg
sub
jae
in
ret
mov
xchg
(bad)
data16
ficomp
push
fiadd
shl
fs
cmp
pop
psrlw
scas
or
mov
xchg
stos
pop
nop
cmp
and
aaa
cli
rcl
pop
in
mov
push
shl
retf
adc
inc
xchg
retf
and
into
push
pop
out
fnstsw
xor
mov
int3
cmps
test
and
xor
dec
pop
push
push
xor
adc
or
jno
adc
sbb
sbb
xchg
add
inc
imul
jnp
dec
push
lahf
xchg
add
retf
lods
add
das
(bad)
adc
add
stos
xchg
nop
or
pop
fsub
or
and
dec
(bad)
jnp
cmp
in
or
or
and
push
push
jmp
inc
movs
mov
sub
or
scas
push
les
fld
adc
dec
mov
mov
adc
call
out
jecxz
dec
scas
adc
xchg
and
and
or
fs
aam
mov
mov
(bad)
cli
add
aas
int3
pop
rcr
mov
jecxz
or
enter
xlat
movs
inc
stos
pop
add
sahf
test
call
mov
outs
neg
aam
outs
arpl
jo
or
stos
jmp
shl
inc
push
sbb
push
pop
enter
sbb
cld
retf
sti
lds
and
pop
das
retf
pop
not
xchg
xchg
push
jo
je
icebp
mov
sbb
or
mov
push
xchg
addr16
int
sub
enter
(bad)
cmps
arpl
in
mov
sahf
(bad)
(bad)
mov
leave
push
push
lods
pop
daa
xchg
and
or
cli
xchg
sbb
sub
std
fstp
and
or
mov
loope
jle
nop
cmp
and
or
jnp
les
or
sub
or
fistp
stos
jne
movs
ins
(bad)
(bad)
jmp
pop
stos
lea
cmp
fild
cmp
pop
jge
push
ret
lahf
and
adc
xchg
push
xchg
or
gs
imul
mov
pop
adc
jne
cmp
call
mov
popa
xor
(bad)
cmp
and
(bad)
clc
inc
and
mov
xor
(bad)
jno
fisttp
mov
inc
push
adc
adc
addr16
add
sub
das
pop
(bad)
repz
xchg
pop
xor
push
(bad)
in
call
pop
repz
push
inc
sbb
jge
aad
imul
jg
(bad)
cmc
push
cmps
out
xor
inc
dec
ss
inc
mov
cmc
leave
movs
inc
pop
add
add
push
add
enter
jp
xchg
jbe
inc
xchg
push
cli
shr
mov
ss
and
sahf
js
adc
xor
fisub
aad
pop
or
sbb
cli
stc
inc
call
pusha
aam
jo
rol
inc
sub
mov
repz
xchg
int3
clc
les
aas
adc
mov
clc
mov
or
push
stc
cmps
out
test
test
xlat
pop
lods
sar
inc
scas
retf
and
push
cwde
(bad)
xlat
clc
or
or
ret
repz
call
loop
fs
js
xor
pop
mov
sti
adc
aam
test
add
test
inc
xchg
loop
lods
(bad)
js
and
aaa
(bad)
int
ins
aaa
xchg
test
mov
fs
adc
cmp
push
sbb
xor
adc
or
sub
inc
push
(bad)
sar
xchg
cmc
call
xchg
push
xor
jb
pop
cdq
or
scas
cwde
and
fstp
pop
cmp
iret
mov
inc
inc
shl
inc
in
cmp
or
addr16
mov
push
repz
int
ret
xchg
or
cdq
push
or
xor
pop
push
ds
mov
or
popf
enter
sbb
sbb
icebp
inc
xor
pop
das
scas
cmp
push
and
out
(bad)
jl
and
sub
js
jg
push
call
xchg
and
sbb
xchg
jne
jae
scas
pop
mov
jae
stos
fstp
fdiv
int
push
in
jecxz
pop
sub
jne
or
jmp
mov
shr
adc
xchg
ins
jnp
lods
sub
clc
inc
inc
mov
push
push
jo
xchg
push
pop
jmp
in
xor
and
jl
test
js
cmp
cmc
clc
enter
dec
xchg
ficom
mov
fistp
and
fs
sub
(bad)
xchg
pushf
sub
sbb
mov
ror
xor
movs
sub
clc
sbb
enter
call
leave
fadd
adc
out
rol
xor
pop
and
popa
iret
popa
mov
js
push
ins
scas
in
btc
cmp
dec
cmp
push
ss
mov
mov
push
mov
jge
ins
adc
(bad)
je
jmp
ret
xchg
es
dec
push
xchg
mov
xor
xchg
aas
push
jmp
jl
(bad)
mov
mov
inc
or
mov
add
test
shl
sar
mov
call
pop
jmp
cmp
int
add
jmp
and
and
mov
xor
mov
in
dec
mov
jmp
retf
dec
fs
push
iret
hlt
jne
push
rcr
loop
inc
test
int3
popa
jmp
push
sub
test
mov
in
and
inc
or
dec
dec
xor
mov
imul
dec
push
adc
xchg
jmp
daa
dec
ss
fimul
cli
sub
mov
pop
aam
adc
xchg
pop
inc
hlt
push
mov
add
and
fsub
call
cmp
jecxz
imul
sbb
ret
sbb
mov
out
call
neg
cld
out
inc
adc
mov
sbb
or
and
pushf
outs
push
outs
xor
jno
repz
or
xchg
aaa
dec
fsub
pop
icebp
mov
lahf
les
(bad)
loope
pop
push
cmps
lods
mov
cdq
fcomp
pop
test
iret
jbe
pop
add
mov
call
jge
outs
das
sbb
leave
rol
sbb
ja
jmp
pop
mov
dec
pop
lods
in
(bad)
sub
mov
lahf
xchg
pop
mov
sub
add
lea
jg
test
xor
ss
xor
or
test
dec
call
imul
stos
icebp
sbb
jl
xchg
mov
movs
out
sub
das
sub
cwde
and
and
mov
sbb
dec
adc
mov
(bad)
lahf
jmp
(bad)
xor
mov
(bad)
jne
outs
mov
fist
cmp
rcl
rcr
add
cmp
inc
inc
mov
stos
pop
data16
xor
push
jne
sahf
neg
and
jge
loop
sar
and
adc
cmp
xor
outs
jg
pop
jbe
bound
mov
sahf
dec
call
lods
repnz
pop
adc
mov
leave
inc
daa
xchg
into
leave
rol
jae
stc
xlat
repnz
mov
pusha
ret
test
jae
idiv
icebp
lock
push
loope
sbb
add
add
add
add
or
mov
pusha
pop
or
and
repz
int
dec
sub
adc
jg
test
xchg
(bad)
or
and
fmul
pop
mov
cs
fwait
pop
xchg
pop
push
and
mov
pop
jbe
and
sbb
or
xchg
lods
jne
retf
lock
mov
inc
jne
icebp
aas
(bad)
pop
int
cmp
mov
push
and
leave
fadd
mov
cmp
fstp
mov
repz
jle
add
nop
jl
sahf
push
mov
jecxz
pusha
rol
(bad)
xchg
or
iret
in
nop
mov
std
xor
lock
pusha
fisubr
cmp
lods
or
leave
jmp
xlat
xor
lods
push
jecxz
repnz
in
pop
iret
add
inc
in
dec
sbb
fxch
inc
dec
aam
xlat
sbb
cmp
jno
lods
sbb
mov
out
mov
jge
push
xchg
sub
das
movs
push
mov
jmp
cli
xchg
imul
je
inc
or
xchg
pop
loope
movs
xchg
dec
push
xchg
dec
mov
sub
jg
sbb
xchg
sti
mov
rcr
inc
xchg
(bad)
xchg
push
stos
sbb
jmp
sub
das
clc
mov
js
inc
mov
adc
movs
imul
and
sub
in
push
lods
scas
cld
sub
pop
add
popf
add
sbb
xchg
outs
cmp
pop
and
popa
sbb
outs
or
out
ret
es
mov
jle
scas
aas
mov
jmp
xchg
xor
cmp
mov
dec
scas
fistp
mov
push
sub
(bad)
das
mov
in
pop
js
ss
enter
stos
adc
or
aaa
sahf
push
cmps
xchg
ja
xor
xchg
xchg
(bad)
loopne
test
nop
daa
lahf
or
mov
mov
sub
dec
mov
xchg
sahf
ss
test
(bad)
into
scas
jl
mov
xchg
enter
xchg
inc
and
cdq
xor
jle
test
adc
pusha
add
add
repz
cmps
call
add
(bad)
pop
push
call
pop
pusha
sub
out
xor
sar
sbb
and
in
add
add
add
add
add
or
repz
leave
adc
sub
mov
arpl
jmp
jmp
shl
xor
jo
sbb
and
sub
jmp
icebp
adc
outs
out
cwde
loope
sbb
inc
add
add
lea
inc
and
xlat
mov
mov
lods
loopne
fild
mov
add
ds
retf
cmp
xchg
mov
fistp
mov
sbb
call
out
outs
test
dec
ret
add
xor
ror
(bad)
jns
add
mov
in
push
fcomi
add
add
fs
xchg
xchg
sub
cmp
sub
in
out
sbb
popf
es
arpl
push
xchg
inc
cmp
fs
cmp
loope
xor
mov
scas
push
clc
xchg
call
loope
outs
pop
xchg
in
mov
sub
mov
xor
push
xlat
sub
mov
(bad)
xor
or
sahf
mov
call
adc
adc
push
dec
and
sbb
jo
lods
call
sahf
js
into
pop
sbb
mov
mov
adc
push
dec
mov
mov
fst
mov
(bad)
dec
test
dec
push
(bad)
cmp
jg
pop
jg
dec
push
fcmovbe
loopne
stc
rcl
outs
jnp
jge
enter
adc
cs
(bad)
lds
inc
enter
ret
jl
pop
fisttp
pop
test
inc
push
pop
call
add
mov
call
mov
mov
fcom
inc
ffreep
lods
mov
arpl
enter
cs
inc
pop
fcmovbe
push
xchg
jecxz
dec
fwait
pop
add
pop
or
add
call
in
sar
nop
std
(bad)
in
loope
retf
movs
push
bound
and
cdq
and
mov
and
push
fcomp
cli
mov
icebp
xor
leave
inc
mov
pushf
push
push
mov
add
inc
jp
inc
push
in
xor
out
scas
lock
cmp
push
or
dec
icebp
mul
xchg
jo
ret
aad
cli
loopne
aas
mov
sub
pop
popf
std
loopne
xor
sub
cli
mov
daa
xor
cs
retf
push
je
fmul
fwait
gs
jge
and
iret
push
sbb
add
or
mov
sbb
cdq
sbb
stos
pushf
mov
adc
call
and
inc
xchg
pop
imul
push
cmp
push
mov
jle
call
stc
jmp
mov
repz
cdq
jmp
cmp
xchg
jg
fistp
cmp
(bad)
call
std
lods
sti
sar
mov
xor
popa
int
shl
leave
addr16
inc
inc
(bad)
cmp
icebp
std
pop
mov
(bad)
mov
adc
cld
xor
(bad)
clc
sbb
js
inc
mov
imul
jg
cmp
mov
dec
icebp
out
ins
mov
adc
movs
loop
(bad)
mov
(bad)
scas
adc
cli
xchg
add
out
inc
mov
add
movs
mov
(bad)
jg
add
jbe
pop
mov
xor
es
push
add
mov
and
sbb
lock
seto
lods
sub
mov
sbb
mov
mov
jecxz
or
imul
dec
popa
jl
or
in
or
sub
out
push
pop
int
and
xor
lea
xor
cs
cmps
out
add
sub
dec
cli
jp
mov
pop
add
movs
(bad)
(bad)
mov
aad
cmps
mov
jge
retf
mov
popa
or
pop
cli
inc
adc
pop
inc
inc
sbb
push
inc
jnp
test
mov
cmp
add
pop
(bad)
pop
sub
inc
push
and
(bad)
test
xor
sub
sub
sbb
mov
dec
hlt
pop
out
sbb
icebp
jmp
inc
lods
jg
ins
lea
push
push
pop
push
xor
fisttp
out
test
and
jno
sbb
mov
xchg
je
pop
ror
fs
push
cwde
dec
sbb
arpl
dec
xor
mov
sbb
imul
cmp
(bad)
mov
lds
imul
and
pop
add
sub
and
scas
jecxz
stos
mov
cmp
push
and
and
(bad)
jge
dec
sti
mov
mov
scas
push
shr
jp
sub
or
xlat
out
aam
xor
adc
or
inc
mov
pop
stos
mov
dec
(bad)
out
inc
add
(bad)
mov
and
push
sahf
and
bound
cs
sar
pop
or
xchg
pop
rcl
outs
inc
pop
xchg
mov
imul
fistp
push
and
fdivr
cli
iret
jge
gs
mov
mov
retf
jge
adc
adc
(bad)
(bad)
xchg
add
frstor
cmps
test
sub
pop
xor
xchg
call
jmp
test
and
adc
jmp
push
xacquire
dec
mov
push
imul
dec
ins
push
add
scas
inc
in
std
or
push
cmc
lock
or
adc
mov
out
xchg
fs
movs
in
(bad)
call
gs
ins
sbb
adc
dec
rol
mov
push
jp
cmps
inc
popa
std
pop
dec
jb
or
out
sahf
mov
xor
jmp
fldl2t
sar
mov
xor
test
fstp
repz
jb
cmp
mov
mov
mov
pop
sub
and
jg
hlt
(bad)
xchg
mov
hlt
(bad)
push
call
cmps
jmp
ds
loopne
pop
shl
xchg
div
cmp
sub
jg
(bad)
xor
push
push
mov
inc
xor
mov
inc
xchg
fs
cmp
repnz
outs
push
add
adc
div
fisubr
mov
test
jno
sbb
sbb
mov
pop
jmp
mov
mov
aam
ss
sub
dec
mov
xchg
cmp
adc
int
cmp
int
pop
cmp
mov
popf
cmp
mov
inc
xchg
push
imul
pop
gs
cmc
mov
mov
xchg
js
repz
adc
xor
pop
sbb
loope
sub
inc
cmp
and
adc
(bad)
les
scas
xor
pop
lock
dec
dec
inc
sbb
pop
scas
xor
sub
mov
cmps
call
call
std
gs
add
call
clc
add
inc
jnp
pop
xor
test
jp
sub
push
test
pop
cmps
mov
adc
jns
xchg
xor
mov
mov
mov
push
in
xor
sbb
(bad)
and
loopne
mov
push
and
(bad)
sub
and
dec
ja
mov
adc
cmp
out
or
pop
iret
enter
push
mov
pop
fist
sti
pop
aad
stc
imul
xchg
ficomp
jne
add
sbb
in
dec
xchg
jnp
imul
outs
(bad)
cmps
fs
jmp
cld
loop
es
cmc
in
push
test
fadd
scas
repz
ror
sub
cmc
dec
outs
out
mov
add
xor
out
imul
test
mov
scas
adc
or
enter
xor
pop
int3
int3
retf
rcr
nop
ins
dec
mov
retf
scas
bound
movs
jnp
adc
push
pop
movs
jnp
xchg
xchg
cmps
cmp
add
das
aad
fwait
ror
or
push
(bad)
adc
aaa
adc
pop
int
cmps
adc
pusha
call
cld
mov
iret
xor
mov
cwde
addr16
and
jo
stos
or
adc
xor
out
shr
lds
xor
addr16
cmp
jmp
pop
loop
and
dec
cli
shr
jae
ins
cdq
and
div
or
outs
dec
inc
cmps
or
lea
lock
ds
mov
adc
jmp
test
jp
pop
and
(bad)
mov
mov
neg
xchg
inc
cmp
in
div
movs
mov
repnz
(bad)
cli
clc
pop
pop
or
jnp
push
int
into
add
add
in
test
and
add
inc
inc
mov
lahf
call
not
mov
cmp
sar
mov
jg
sub
and
mov
inc
lds
out
dec
rol
mov
and
stos
loope
inc
xchg
nop
test
mov
and
ins
jle
xchg
test
mov
inc
add
jae
mov
mov
ret
ins
mov
leave
sbb
test
jae
aam
sbb
sub
or
inc
add
lock
adc
int
cmp
lock
mov
jne
call
mov
xchg
std
popa
ffree
or
clc
test
in
mov
add
dec
inc
inc
pop
push
push
mov
lea
xchg
mov
scas
mov
iret
mov
enter
dec
mov
movs
or
call
xor
js
int
ret
fist
dec
xchg
pusha
push
cs
scas
leave
in
jo
enter
es
sub
jmp
pusha
mov
adc
cmp
mov
pushf
pop
mov
mov
dec
jecxz
mov
xchg
mov
pop
mov
loopne
jae
cmps
test
cmp
je
sub
jmp
je
stos
nop
pop
jmp
int
or
imul
and
jmp
ja
mov
lahf
(bad)
jbe
push
scas
pop
pop
arpl
sar
push
mov
cmps
jecxz
(bad)
cli
fwait
cmps
push
mov
xchg
dec
lea
jl
inc
push
sahf
mov
mov
pop
test
push
mov
and
cld
cdq
fs
shl
(bad)
push
aaa
pop
dec
xlat
mov
or
add
popa
and
cmp
xlat
and
push
in
shl
jmp
push
sbb
loope
xchg
push
popf
sbb
fist
retf
cmp
cmp
push
add
or
mov
data16
inc
adc
sbb
and
stos
push
cmps
repnz
sbb
push
das
rol
xchg
sub
sub
inc
inc
cmp
pop
push
mov
scas
mov
jmp
xchg
pop
in
bound
add
sbb
jmp
call
ret
inc
xor
add
loope
addr16
call
out
fisttp
mov
pushf
fild
retf
popa
pushf
pop
popf
inc
pop
cmps
adc
ror
cdq
inc
sub
cmp
mov
(bad)
xchg
sti
add
xchg
sbb
cmovg
mov
mov
(bad)
sti
shl
jg
dec
(bad)
shl
(bad)
pushf
and
mov
sbb
dec
fcom
test
adc
and
call
fisubr
cmp
adc
mov
(bad)
fistp
inc
dec
cmc
dec
ror
mov
hlt
sbb
mov
clc
inc
lods
cld
xchg
xchg
sub
or
stc
ret
adc
ja
dec
addr16
adc
cmp
imul
dec
push
shr
dec
cmp
call
rcl
adc
in
ss
inc
sahf
push
ins
cli
ss
nop
shr
frstor
cmps
in
mov
int
sbb
push
sbb
sbb
lahf
enter
ja
stc
pushf
cmps
adc
adc
mov
add
outs
imul
jo
xchg
jp
inc
inc
pop
jmp
pop
add
retf
and
in
je
mov
sbb
into
mov
stos
mov
pusha
lock
inc
xlat
arpl
icebp
mov
xchg
cmovae
nop
hlt
(bad)
cmc
push
cwde
mov
push
scas
dec
dec
mov
test
pop
sti
(bad)
mov
inc
jge
shl
fistp
daa
rcr
mov
dec
mov
dec
call
or
mov
ss
mov
sar
mov
push
es
test
int
jp
pop
mov
ret
mov
mov
dec
(bad)
push
leave
sahf
imul
xchg
and
jno
mov
and
dec
aam
shl
jmp
ror
or
(bad)
pop
and
ret
js
into
sub
(bad)
ss
xchg
pop
pop
gs
push
(bad)
xor
call
add
push
pop
add
add
mov
pop
sar
fsubr
and
pop
sbb
sub
lahf
cld
add
scas
(bad)
loope
sub
out
push
inc
fwait
shl
gs
pop
mov
cdq
push
jno
rcl
jecxz
pop
(bad)
scas
jnp
retf
movs
push
scas
outs
ror
push
pop
pop
test
add
add
add
add
jb
test
rol
sub
adc
int
lock
fs
push
sahf
sub
inc
mov
in
aaa
push
mov
inc
(bad)
mov
pushf
jmp
push
mov
or
sbb
mov
push
xor
pop
push
pop
mul
clc
repz
cmp
mov
xlat
outs
aam
add
xlat
fist
fidivr
rcl
fwait
dec
mov
je
movs
icebp
mov
repz
fstp
std
adc
or
(bad)
fdivr
out
jle
aaa
mov
xchg
(bad)
(bad)
lods
or
mov
mov
cdq
cs
psubw
adc
sbb
xchg
idiv
fcmovne
xor
cmc
xor
jecxz
mov
std
ror
fisubr
push
rcl
inc
pusha
and
outs
pop
lods
xchg
lds
jp
push
ret
mov
fadd
movs
push
daa
push
mov
fs
lock
add
xchg
or
in
leave
js
mov
syscall
cld
adc
or
jecxz
aas
out
mov
stos
int3
dec
movs
mov
fidivr
jae
ss
aam
jecxz
sti
mov
rdtsc
xchg
mov
out
imul
adc
push
stos
arpl
jno
dec
pop
xchg
(bad)
fidivr
inc
div
ss
push
jnp
pop
test
mov
leave
mov
jmp
(bad)
fmul
jle
outs
jmp
xor
test
fcmovu
adc
xchg
dec
xchg
mov
add
xor
dec
js
sar
and
fldcw
mov
or
shr
cmps
mov
jo
loope
or
mov
inc
pop
rcr
dec
cmp
jmp
inc
pop
es
je
mov
and
xchg
retf
xor
mov
lea
xor
push
inc
clc
sub
es
bound
dec
mov
mov
dec
jp
shl
mov
movs
mov
in
jmp
cli
cmp
mov
mov
or
inc
jl
in
popa
adc
mov
imul
clc
inc
in
out
repz
sbb
(bad)
push
or
cmp
or
loop
push
inc
pop
push
inc
push
scas
mov
add
stos
outs
mov
(bad)
inc
fwait
outs
mov
add
add
jne
jmp
es
(bad)
ins
adc
pop
jo
jp
pop
inc
jns
jmp
repnz
into
(bad)
sar
jmp
int3
nop
mov
repz
push
repnz
sti
adc
mov
and
mov
mov
enter
and
sbb
xchg
and
rcl
pop
push
movs
mov
push
nop
jl
pop
pushf
jnp
test
or
in
bound
cmp
push
stos
(bad)
mov
in
nop
leave
inc
lahf
or
jecxz
xchg
push
sbb
jp
pop
sbb
cmps
ds
bound
dec
retf
sbb
and
mov
adc
jle
push
jmp
les
ja
sbb
cmp
shl
ret
(bad)
xchg
lods
mov
ds
mov
adc
lahf
movs
fild
or
int3
cmps
or
or
into
adc
mov
cmps
pop
(bad)
out
and
cmps
imul
ret
(bad)
int3
xor
adc
add
mov
fistp
repz
xchg
das
add
mov
in
and
mov
sbb
xchg
push
pop
xchg
mov
ins
mov
sbb
ss
push
sbb
(bad)
pop
rol
pop
adc
adc
scas
sar
xlat
add
lock
stos
jge
lahf
add
dec
std
xchg
clc
sub
sti
retf
out
out
mov
stos
mov
and
std
jmp
push
sub
(bad)
leave
mov
int3
jge
lods
mov
xchg
xlat
jns
push
cli
leave
xchg
mov
(bad)
push
pusha
ret
jno
lods
xchg
(bad)
pop
test
test
pop
push
(bad)
pusha
push
mov
(bad)
mov
jle
out
pop
jae
fwait
test
push
aaa
fdiv
leave
dec
inc
sub
(bad)
movs
(bad)
push
scas
int3
(bad)
mov
inc
jno
aas
outs
add
dec
push
fmul
mov
adc
adc
(bad)
xor
fild
repz
push
or
loop
dec
hlt
mov
cmp
mov
test
retf
adc
pop
jb
test
fcomp
popa
xchg
int
jnp
mov
xor
cwde
push
inc
push
or
retf
outs
daa
mov
sub
mov
xchg
scas
mov
push
cmc
ror
cdq
outs
fwait
ret
xlat
nop
les
(bad)
inc
sub
mov
clc
ds
pop
add
push
add
add
add
(bad)
pop
and
and
ret
imul
cmp
pop
and
call
ins
inc
and
push
out
arpl
imul
cdq
into
mov
ds
xchg
popf
sbb
nop
mov
aas
div
test
and
inc
lds
cmps
scas
je
clc
add
aam
ret
pusha
lods
sti
pop
push
xchg
pusha
inc
in
outs
fwait
mov
jmp
inc
inc
push
xor
in
shl
mov
pop
movs
daa
mov
xchg
mov
fsub
mov
jnp
cmp
adc
sbb
jno
scas
loope
xor
mov
retf
xor
pop
in
(bad)
jo
dec
push
mov
int3
bound
test
jl
fcom
pop
inc
jmp
sti
repnz
inc
repnz
or
(bad)
dec
loop
js
xchg
cli
sub
fimul
inc
aad
nop
imul
lea
hlt
leave
sti
inc
push
into
bound
push
hlt
lea
int
fnstsw
push
mov
push
and
inc
ins
into
push
stc
sub
sub
xchg
xchg
out
ins
xor
jge
dec
inc
pop
pop
push
adc
stos
repz
enter
mov
cmps
dec
or
(bad)
sub
mov
push
shl
sub
mov
or
dec
arpl
dec
not
jmp
or
fisttp
jne
xchg
mov
arpl
xor
lahf
mov
imul
hlt
outs
push
sub
add
aam
outs
pop
scas
retf
shr
mov
cmp
cmp
pop
cli
jns
std
out
or
or
jne
xor
ja
in
test
fcomp
cmp
sbb
xor
xchg
das
loope
mov
push
sbb
cmps
popf
repz
sti
add
pop
in
xor
adc
mov
int
pop
pop
hlt
shl
retf
or
sub
or
mov
ja
popf
fmul
pushf
int
mov
cmps
sahf
mov
je
xchg
mov
sub
fstp
daa
(bad)
data16
sahf
push
add
dec
and
fisubr
add
or
mov
dec
rcr
out
cmp
(bad)
std
pop
add
jle
xchg
sar
jno
push
ret
inc
sbb
sbb
pop
je
test
fistp
cmp
push
cmp
push
pop
jne
sub
push
and
xchg
mov
push
or
scas
ins
fst
ins
push
jb
jl
adc
sbb
ja
(bad)
in
in
outs
cs
leave
je
xor
push
mov
and
lea
frstor
jge
repnz
cmp
pushf
stos
data16
pop
out
in
xchg
xor
cs
lock
jo
and
mov
xchg
(bad)
xor
cli
mov
outs
jnp
outs
jo
test
lods
xchg
mov
adc
rcr
popf
cld
xor
and
adc
loope
loope
lock
adc
jae
mov
lahf
lock
xchg
(bad)
fisttp
cmp
and
stc
je
test
or
lahf
loopne
daa
aas
loopne
xchg
jne
popa
push
retf
call
sub
cmp
in
add
ret
les
(bad)
(bad)
lahf
int
sbb
mov
xor
lahf
mov
dec
push
dec
cmp
xor
push
mov
retf
nop
test
dec
adc
cmps
stos
stos
inc
pusha
cmps
push
jmp
mov
dec
fwait
test
pop
add
cmp
cmp
sbb
mov
jb
jmp
pusha
movs
inc
in
lahf
dec
dec
icebp
test
lds
test
lock
fwait
jns
xchg
xor
aaa
cmps
getsec
out
mov
and
in
ffree
adc
cld
es
pop
pushf
(bad)
add
(bad)
cs
and
cmp
push
xchg
into
pop
lock
outs
arpl
inc
mov
mov
aam
mov
xor
cmp
cld
daa
cmp
mov
ficom
movs
popf
aad
pop
nop
ret
xchg
mov
lds
out
xor
(bad)
aas
add
xor
lds
shl
ds
div
mov
shr
outs
ret
repnz
cdq
ds
das
inc
ja
inc
jb
sbb
lock
shl
mov
enter
shl
stos
adc
jp
jmp
inc
lods
stos
not
in
jo
(bad)
adc
inc
pushf
int
in
outs
lods
(bad)
or
mov
in
mov
mov
mov
mov
aam
jmp
cmps
ins
scas
jecxz
(bad)
in
cmp
out
sti
pop
rol
movs
dec
imul
lahf
xor
jmp
int3
sub
and
xchg
add
xchg
mov
scas
lea
ss
jmp
adc
push
mov
dec
sbb
xchg
je
out
push
mov
mov
imul
jmp
cmp
mov
xchg
mov
sahf
jg
arpl
dec
pop
rcr
dec
and
push
mov
inc
mov
rcl
add
sar
xchg
cmp
std
push
(bad)
jge
mov
inc
ins
shl
dec
or
jb
mov
mov
retf
rcr
sbb
mov
jge
sbb
in
js
popa
leave
cmps
jecxz
pop
cmp
ret
outs
sar
out
adc
jecxz
loopne
mov
aas
and
ds
mov
fcom
mov
sbb
sub
lahf
xchg
pop
sub
sub
sbb
jl
lods
add
jg
ds
sbb
das
(bad)
sub
sub
inc
or
rol
retf
in
cmp
pop
(bad)
pop
mov
std
ins
ror
pop
out
jno
in
xchg
pusha
sub
push
adc
jnp
sub
ja
xor
cmp
mov
movs
jmp
xchg
(bad)
dec
inc
test
out
cmp
fsubr
sub
sbb
add
add
mov
outs
push
xchg
pop
outs
xchg
pop
and
scas
fwait
inc
push
ds
shl
add
add
cmp
pop
in
enter
jg
mov
fidiv
rcl
jbe
mov
fwait
test
mov
mov
cs
add
push
outs
and
ins
mov
cmp
push
mov
push
pop
push
mov
jae
loope
mov
mov
imul
arpl
daa
cmp
(bad)
lods
mov
mov
mov
iret
bnd
pop
aaa
stos
xor
(bad)
fistp
hlt
jo
fldcw
cmps
add
stos
hlt
push
xchg
scas
mov
out
(bad)
mul
and
sbb
retf
call
sbb
inc
lods
dec
sub
fwait
and
mov
mov
ja
scas
dec
push
gs
fmul
stos
push
or
movs
ins
hlt
cmp
dec
inc
mov
rcr
jge
stos
fdivr
sub
xchg
mov
stc
mov
rcr
das
ret
sbb
push
add
sahf
rcr
xchg
add
xlat
cmp
xor
imul
sbb
lock
sbb
mov
mov
adc
mov
inc
in
(bad)
int
rol
cmp
test
sbb
mov
adc
movs
or
iret
cli
pop
jne
mov
mov
sbb
pop
rcr
popa
xor
pushf
movs
punpckhbw
fimul
xor
retf
popf
pop
add
scas
xchg
(bad)
mov
jge
pop
mov
not
mul
cmc
jae
sub
addr16
or
(bad)
lock
loopne
movs
inc
xchg
sub
sub
xchg
mov
sti
or
push
push
push
or
mov
(bad)
imul
cmp
cmp
sub
jne
mov
sub
jbe
sub
lods
lods
mov
clc
mov
adc
xor
push
ins
jg
pop
in
lock
cmp
mov
mov
(bad)
neg
ss
sbb
mov
pop
rol
sbb
es
push
fsub
fstp
xor
adc
shr
sar
jbe
scas
inc
out
add
outs
mov
pop
inc
test
aad
dec
mov
inc
add
pop
cld
je
(bad)
sbb
sbb
ret
push
add
stos
mov
mov
cmp
sbb
dec
je
scas
mov
push
pushf
fisttp
test
and
mov
fidiv
and
mov
ins
mov
daa
bound
ret
std
pushf
arpl
jg
jg
mov
bound
fwait
push
mov
ins
xor
aad
mov
aaa
cwde
push
in
cli
push
xchg
xor
jno
push
sar
add
add
add
nop
adc
or
pop
lods
and
pop
pop
and
jecxz
push
aaa
or
hlt
test
mov
int3
loopne
jl
stc
popf
push
jge
push
sbb
test
push
xchg
in
(bad)
cmp
and
mov
jno
sbb
in
mov
test
xchg
jmp
mov
into
pop
and
xchg
aad
dec
icebp
ja
xor
icebp
cdq
sub
arpl
or
cmc
mov
out
mov
dec
fstp
repz
movs
data16
fistp
daa
inc
daa
call
push
enter
fild
ss
dec
xchg
adc
sbb
xchg
and
repz
jecxz
mov
mov
(bad)
pop
movs
sti
add
aad
xchg
call
gs
and
mov
clc
jmp
leave
cld
xchg
dec
xlat
leave
mov
push
push
pop
inc
cmp
fadd
inc
sbb
iret
dec
jmp
inc
leave
xchg
in
cld
push
fsub
add
mov
pop
cmp
cmp
lds
pushf
sbb
pop
push
mov
push
xlat
jmp
cmps
mov
aad
mov
xchg
pop
stc
dec
add
pop
fwait
sub
inc
mov
push
jmp
retf
mov
lds
mov
and
ja
and
jle
jne
jno
pop
dec
push
fstp
out
mov
jp
or
test
sub
loope
cmp
into
test
sar
pop
push
shl
repz
repz
fnsave
xchg
div
inc
add
and
xor
in
jbe
rcr
lods
mov
xchg
inc
cvttps2pi
xchg
aaa
mov
fidiv
test
ds
sahf
xor
movs
jno
mov
dec
fnstenv
and
sbb
test
ja
dec
test
inc
xchg
js
lahf
cmp
adc
retf
jge
mov
js
or
(bad)
and
inc
sub
call
lea
mov
inc
mov
dec
jge
sbb
retf
aad
inc
mov
mov
mov
sbb
add
cmp
xchg
fcom
(bad)
sub
sub
xchg
(bad)
aad
mov
fs
xchg
retf
lods
pop
push
mov
test
mov
mov
xor
push
fisttp
mov
fnstcw
pushf
mov
and
adc
arpl
cld
jb
cmps
jo
push
out
hlt
dec
cmp
cmp
fldenv
sbb
arpl
inc
push
add
xchg
retf
and
(bad)
das
shr
xchg
leave
or
and
push
jno
nop
pop
dec
clc
cmps
call
enter
push
and
sub
aad
pop
add
xor
mov
pushf
cmc
sbb
aam
jg
cli
test
cmps
scas
mov
cmp
shr
mov
xor
call
mov
xchg
pushf
cmp
cmp
rcl
mov
cli
dec
push
in
add
ins
lock
jge
add
jle
xchg
lock
daa
jl
xchg
cli
jecxz
add
dec
(bad)
push
add
outs
(bad)
nop
xchg
inc
sub
add
mov
add
or
add
cmc
je
retf
pop
add
cdq
or
fwait
inc
sbb
xor
int3
jl
jo
cmps
push
mov
call
push
ja
sub
lds
movd
pop
popa
sbb
jnp
cli
std
ds
push
sti
bound
jb
jae
jae
or
rcr
les
cmp
add
push
aas
mul
fidivr
jb
loopne
sub
je
lahf
icebp
push
mov
mov
mov
dec
idiv
mov
shl
mov
mov
sti
xchg
test
mov
retf
pop
into
fcom
sbb
xchg
fistp
es
test
mov
or
loopne
stos
cmp
pop
fistp
and
cmp
cdq
arpl
push
or
add
(bad)
scas
popa
mov
clc
adc
mov
into
imul
pop
ja
shl
psubsb
sbb
pop
bound
mov
fimul
cmp
rcr
test
pusha
retf
xchg
push
pop
popa
ds
or
mov
and
mov
fst
or
cmp
adc
adc
inc
sbb
dec
sbb
aad
out
inc
mov
sub
pop
jnp
test
jg
and
pop
ret
test
ja
xchg
aas
inc
and
xor
jo
push
push
sbb
fwait
test
inc
inc
mov
mov
cmc
xchg
push
aaa
test
stos
lods
mov
xchg
xchg
ret
fistp
sbb
js
xchg
push
call
add
lahf
in
iret
cmp
mov
cmp
rol
ret
lods
push
push
jmp
mov
sbb
jo
sar
pop
sbb
mov
jns
arpl
sar
lds
enter
push
jmp
push
add
retf
pop
cli
shl
cmp
jp
ins
and
lods
js
sub
imul
xor
shl
outs
cmp
xor
movs
xchg
pop
xchg
or
daa
jge
mov
out
mov
adc
mov
outs
cli
jo
ficom
mov
(bad)
add
aas
mov
ret
sub
(bad)
sbb
xchg
dec
cmps
out
jb
or
das
xor
xchg
es
push
xchg
stos
xor
out
or
pop
inc
cld
sbb
push
and
or
mov
cwde
(bad)
aaa
fld
mov
sbb
imul
push
and
test
mov
fldenv
dec
mov
jne
inc
or
js
scas
push
in
hlt
push
fdivr
adc
test
lea
mov
dec
cmp
(bad)
rcr
dec
pop
mov
adc
popf
sub
xlat
test
push
jmp
mov
push
jmp
shr
(bad)
fmulp
xchg
jbe
outs
aad
imul
jmp
pop
dec
mov
add
xor
sti
mov
cld
adc
das
inc
in
add
adc
daa
jmp
and
out
jmp
jnp
mov
test
xchg
inc
pusha
jae
cs
adc
lahf
cmps
sti
xchg
je
pop
mov
aaa
cli
out
bound
cmps
sub
dec
punpckhwd
inc
jmp
adc
xor
cdq
push
ds
mov
cmp
mov
mov
retf
fistp
jb
and
mov
push
ja
leave
loopne
cwde
(bad)
fdiv
dec
into
and
or
jmp
or
int
out
cmc
add
cld
imul
ficomp
sub
xlat
xchg
mov
lea
ins
cmp
mov
movs
pop
sub
int
jns
jns
inc
lods
imul
out
add
add
lods
in
pop
pop
or
push
cld
or
push
or
loopne
inc
fs
mov
or
inc
lea
dec
jle
xchg
or
sbb
stc
pushf
sub
mov
push
jno
add
in
loope
into
dec
dec
or
call
jb
mov
pop
sbb
fild
test
bound
mov
aad
fwait
jae
data16
push
fs
outs
ret
xchg
idiv
ret
aaa
out
sub
push
nop
jmp
add
rol
inc
xchg
push
mov
pop
cmc
leave
aam
mov
(bad)
jg
popa
xor
dec
setp
in
test
in
xor
add
inc
mov
test
ds
test
popa
imul
retf
(bad)
es
int3
bound
inc
dec
cmc
call
xchg
pushf
and
enter
ror
movs
popf
mov
mov
aas
or
push
pop
arpl
hlt
inc
scas
adc
inc
jns
js
mov
pusha
push
pop
fadd
es
(bad)
pop
aas
pop
int
fwait
mov
test
movs
int
test
adc
out
or
pushf
mov
and
jp
push
or
sub
idiv
int3
scas
mov
test
jmp
mov
(bad)
mov
mov
retf
jnp
mov
ss
aaa
adc
mov
(bad)
adc
popf
xor
in
shr
mov
lea
movs
dec
cmp
fst
movs
lods
xchg
dec
push
add
jecxz
mov
push
xchg
test
(bad)
scas
cmps
lea
mov
or
stos
jge
dec
mov
cmp
out
push
mov
sub
cdq
fld
les
cmps
cmp
cmp
cmc
lods
test
adc
or
in
jb
in
mov
and
lods
cli
test
out
or
cmp
arpl
nop
pop
(bad)
cmc
gs
clc
push
dec
daa
dec
sbb
lea
jmp
stc
movs
or
jae
in
ret
mov
mov
add
sbb
(bad)
stos
xor
ret
or
pusha
call
lea
dec
(bad)
pop
mov
popf
popa
and
call
pop
mov
inc
(bad)
dec
mov
ja
int3
push
jl
stos
cs
pop
icebp
jno
add
call
inc
std
dec
pop
fwait
adc
pop
or
and
cwde
and
dec
ret
test
mov
add
idiv
xchg
or
jl
sub
sti
jecxz
lods
daa
movs
dec
pop
fdivp
sahf
and
jnp
out
mov
and
loop
jmp
pop
test
cmpxchg8b
mov
out
mov
adc
mov
fnsave
scas
push
popa
lods
push
adc
inc
out
jnp
rcl
cwde
dec
mov
imul
mov
mov
mov
lods
xor
sub
xor
enter
test
dec
psllw
dec
add
add
add
cmp
ret
fwait
dec
sbb
lds
ret
sti
sbb
fnstcw
add
jecxz
cmp
and
loopne
sub
pop
xor
loopne
scas
in
mov
sar
bound
shl
cmp
inc
dec
iret
sbb
cli
and
dec
ja
cs
sahf
sbb
sti
mov
pusha
mov
or
sar
mov
dec
clc
rol
mov
xchg
(bad)
stos
aam
call
or
xor
les
or
pop
into
xchg
push
(bad)
cld
and
in
test
ret
idiv
xchg
loopne
cmps
je
sbb
clc
adc
outs
in
pop
pop
cmps
xor
sti
cmps
xor
and
aas
addr16
add
iret
lods
mov
pop
imul
pop
popf
movs
pop
ret
xor
cmp
jnp
gs
call
in
rol
push
pop
fcmove
(bad)
mov
or
and
sbb
addr16
adc
dec
jnp
ja
cmp
scas
int3
jmp
jne
pop
sbb
and
(bad)
fsub
aas
xor
cmp
pop
and
push
mov
cwde
pop
in
out
fnstcw
push
push
les
es
fstp
outs
retf
dec
jo
xor
xlat
push
xor
adc
lods
and
fs
scas
in
push
or
aad
test
or
mov
xchg
(bad)
scas
xchg
push
cs
or
dec
lods
jns
push
repnz
(bad)
jmp
fs
jmp
mov
add
cld
mov
and
xchg
xchg
sub
(bad)
pop
lock
jns
mov
je
jmp
fidiv
cmc
movs
add
add
jle
mov
jbe
jg
ret
inc
les
gs
stos
push
lods
xlat
retf
push
mov
ret
push
bound
lds
adc
or
lds
outs
or
mov
into
shr
mov
leave
lods
push
scas
nop
outs
shl
inc
test
dec
dec
loopne
ins
jmp
call
in
pop
aaa
push
(bad)
fbld
sbb
fnstenv
stos
(bad)
leave
inc
popa
xor
pop
movs
pop
lods
xchg
rcr
cmp
cli
int3
sub
jb
leave
mov
iret
mov
shl
or
mov
scas
or
inc
mov
or
add
xor
sbb
mov
or
cli
aas
jbe
ss
loop
out
mov
ins
cmp
jmp
pop
sbb
pop
and
add
and
mov
clc
mov
mov
inc
sti
mov
inc
das
scas
cld
dec
cli
xchg
imul
test
jl
ret
ds
sub
xchg
add
(bad)
(bad)
retf
pop
mov
(bad)
movs
push
push
repz
cmps
loop
mov
push
dec
xor
rol
in
adc
jle
pop
jg
aad
(bad)
xchg
jo
mov
xor
dec
ja
test
(bad)
mov
mov
inc
jmp
(bad)
outs
call
arpl
jne
ins
pop
cmp
mov
mov
test
fstp
frstor
adc
(bad)
(bad)
cmp
in
inc
or
loopne
inc
sub
or
rcl
cs
jg
pop
popf
mov
daa
in
push
(bad)
fstp
add
xor
push
add
pop
mov
dec
adc
mov
clc
push
repz
xchg
repnz
mov
ret
mov
cmc
push
sub
pop
scas
dec
jmp
out
rcl
shl
mov
xor
and
xchg
clc
ins
aas
sub
out
lea
lods
mov
cs
adc
dec
push
inc
in
repz
out
repz
test
mov
mov
mov
fs
hlt
or
repnz
xlat
push
int
retf
push
sbb
rol
add
outs
bound
cmp
fstp
cmp
add
fisub
fsubr
cmp
xchg
inc
jge
je
pop
ficom
fsubp
xor
jo
and
jo
dec
fld
inc
pop
in
xlat
pop
and
movs
jbe
inc
xor
xchg
xor
mov
push
push
xor
popf
out
or
add
cmps
dec
mov
sbb
dec
push
xchg
pushf
outs
fs
or
stos
jecxz
inc
and
xchg
xor
rcr
pop
cdq
mov
les
ret
mov
mov
int
mov
pushf
(bad)
int3
scas
push
scas
cmps
lahf
cmp
imul
mov
mov
jmp
pushf
pop
cmps
sub
ja
inc
mov
pop
cmp
xchg
sti
adc
sub
es
xor
xor
xchg
mov
adc
dec
dec
fs
shl
std
aam
das
cmp
jbe
ins
clc
inc
cmp
ds
push
sub
aaa
or
mov
sub
lds
push
pop
cmps
mov
jle
ss
xchg
dec
jnp
jl
sti
sbb
mov
out
cmp
dec
outs
das
std
sub
xor
test
nop
es
ins
loop
push
out
or
cli
aad
xor
es
shr
sahf
ret
push
pop
adc
dec
rcr
sub
daa
or
fld
add
leave
push
stos
xchg
pop
sub
outs
data16
adc
pop
inc
test
mov
stos
loopne
mov
iret
mov
mov
nop
jno
xlat
mov
jge
cmps
push
pusha
imul
jg
lahf
mov
shl
pop
int3
adc
dec
mov
cli
dec
outs
aad
xchg
mov
push
pop
jo
jle
mov
dec
push
jne
mov
add
jge
ret
inc
ss
mov
ficom
out
imul
mov
stos
jg
mov
dec
ins
pop
das
cmp
add
fwait
sar
popa
add
jp
shl
scas
jnp
xchg
or
test
fucom
jnp
sbb
retf
push
sub
clc
lods
clc
adc
xchg
jne
loop
mov
pop
xor
movs
(bad)
xor
ret
push
inc
retf
push
in
xor
loopne
fnsave
pop
hlt
rol
clc
inc
mov
jne
fsubr
and
cmc
xlat
push
jns
mov
adc
aaa
cs
jnp
cld
cmp
test
lods
test
mov
scas
por
(bad)
out
xor
mov
cwde
loope
push
mov
test
mov
arpl
jecxz
mov
in
push
scas
fmul
mov
repz
sbb
cmp
add
dec
(bad)
es
pusha
movs
sbb
in
adc
outs
test
push
adc
push
inc
fsubr
std
cmc
icebp
pop
dec
mov
mov
adc
lds
rcl
and
xor
dec
ret
xor
stc
(bad)
mov
ss
cdq
and
xchg
jg
sti
xchg
cmc
cli
xchg
cmp
mov
push
or
aam
pusha
shr
in
ja
sbb
popf
mov
jnp
xchg
cmp
aaa
call
aaa
xchg
push
clc
mov
nop
cmps
cmc
out
sahf
les
sbb
call
xor
dec
call
push
lds
rcr
push
push
dec
cmp
inc
test
retf
xchg
in
vfrczss
cmp
outs
ret
stos
aas
adc
xchg
fadd
das
mov
lahf
outs
dec
xor
xchg
cdq
retf
out
pop
push
(bad)
mov
aas
sbb
lds
xchg
retf
inc
mov
and
mov
dec
cmp
cmp
pop
daa
or
xchg
cmp
sbb
retf
add
lock
push
lahf
dec
dec
mov
ja
(bad)
xlat
arpl
and
sbb
mov
jg
mov
xor
test
inc
mov
or
(bad)
div
adc
inc
and
fmul
push
cwde
lods
xchg
mov
xor
or
xchg
pusha
mov
(bad)
int
jmp
sbb
inc
mov
lock
jmp
push
mov
ror
inc
jp
pop
dec
mov
sub
ins
imul
scas
ins
add
mov
popf
cdq
ds
outs
and
cmp
(bad)
aaa
jge
dec
mov
std
fwait
in
jmp
mov
push
pop
and
or
sub
mov
sub
fwait
pushf
and
inc
mov
add
sar
in
pxor
cmps
push
xor
xlat
adc
jmp
psubd
sub
shl
mov
pop
je
or
push
lea
mov
js
cmps
icebp
cld
movs
inc
adc
ins
test
int
cld
(bad)
add
in
aaa
cs
ret
js
lahf
loope
cdq
add
fdiv
outs
fld
out
push
dec
das
rcl
inc
xlat
test
sahf
bound
cmps
push
add
add
add
mov
add
sub
inc
push
pop
and
ins
jo
nop
out
scas
inc
popa
test
mov
imul
mov
jmp
pop
mov
test
in
pop
rcl
push
and
inc
pop
or
lds
cmps
in
ds
pop
dec
cmp
push
mov
add
mov
pop
lds
add
fs
pusha
nop
test
inc
pop
pop
dec
(bad)
sti
fistp
popf
jmp
dec
xchg
repz
fnstenv
xor
push
movs
aam
mov
cli
hlt
mov
mov
loopne
dec
mov
hlt
cmp
sbb
adc
push
mov
cs
aad
repnz
mov
jmp
ins
pusha
arpl
(bad)
in
inc
jne
mov
cmps
sub
test
and
push
shl
jmp
xor
mov
push
or
fist
jbe
repnz
lock
cld
push
mov
inc
xchg
into
ss
and
(bad)
inc
cmp
jno
sub
pop
pop
push
(bad)
push
xchg
add
jp
mov
push
mov
adc
fs
mov
mov
out
sahf
sub
pop
popf
jle
fwait
nop
adc
fs
shl
(bad)
mov
adc
scas
inc
lea
push
pop
(bad)
je
and
stos
std
pop
adc
dec
pop
xor
jbe
pop
adc
nop
xor
sbb
ret
push
push
repz
int3
inc
add
pop
mov
inc
(bad)
sub
pushf
cdq
dec
jle
fcmovnbe
xor
xchg
lds
xchg
jbe
iret
xchg
push
imul
ret
imul
and
cmp
push
sti
mov
lahf
and
fstp
into
faddp
scas
dec
in
xor
push
ds
out
add
sub
shr
mov
aas
pop
pop
aas
cmp
ficom
and
mov
pop
xchg
dec
fiadd
add
inc
dec
(bad)
and
xchg
or
xchg
hlt
lahf
jae
and
in
aas
dec
dec
nop
cmp
push
js
call
or
pop
lods
cmp
jecxz
inc
adc
and
retf
scas
mov
xor
fist
imul
cmps
add
add
out
add
ins
add
add
aam
sbb
retf
loop
add
jge
stc
xchg
pop
(bad)
(bad)
popa
adc
fmul
cli
jb
lea
sub
repnz
retf
test
retf
push
pop
stos
push
mov
int3
stos
sbb
pop
popa
mov
pause
dec
jns
rcr
xchg
push
sbb
daa
cmp
adc
outs
arpl
jmp
push
int
rcr
hlt
je
lea
add
loop
int
bound
or
xor
xchg
pop
jg
push
jne
mov
clc
and
jle
xchg
mov
xchg
iret
pop
imul
fdivr
je
sbb
lods
pop
sbb
call
setg
leavew
(bad)
sub
out
and
sbb
repnz
out
dec
xor
imul
fdiv
das
pop
inc
leave
das
lods
imul
lds
mov
call
pusha
lods
and
pop
ss
sar
pop
fsubr
fstp
loop
pop
test
pushf
loope
and
pusha
ret
push
pop
iret
dec
add
lss
movs
mov
call
bound
sbb
add
mov
ds
add
lods
mov
adc
rcl
pop
cdq
mov
jae
call
test
ins
push
and
out
push
xlat
mov
jp
lods
imul
ss
ret
push
pop
mov
fdiv
ror
push
aad
imul
cmp
push
jbe
movs
adc
sbb
xchg
stos
mov
inc
nop
adc
adc
and
dec
mov
xchg
fiadd
mov
addr16
jo
push
jnp
xchg
test
fnstenv
out
(bad)
out
scas
gs
add
push
call
sahf
adc
fwait
movs
popw
sbb
pop
stos
push
ficom
aaa
sbb
mov
sub
(bad)
push
mov
xchg
push
in
dec
push
mov
int
inc
enter
imul
fwait
out
(bad)
mov
sahf
ret
push
out
aam
int
addr16
push
cmp
dec
pop
retf
push
test
add
xchg
mov
or
jl
adc
out
xchg
or
loopne
sbb
cmc
xchg
out
jno
ss
stos
mov
test
idiv
out
mov
call
sbb
cmp
scas
jae
rol
dec
mov
jmp
pop
push
iret
mov
dec
ret
imul
push
hlt
sbb
arpl
add
add
add
add
adc
pop
push
cmp
pop
dec
adc
mov
int3
shr
jmp
xchg
icebp
and
mov
call
ins
shl
inc
add
xchg
movs
scas
push
ss
iret
cmp
stos
stc
adc
test
arpl
or
cmp
out
cmp
dec
inc
push
inc
in
xor
mov
push
dec
ret
ret
or
bound
dec
in
xlat
jle
nop
sbb
das
or
push
test
hlt
inc
add
js
div
cmp
push
stos
dec
mov
push
sbb
jle
and
into
test
ror
cdq
sahf
add
iret
lea
cmp
ins
xor
or
inc
clts
add
cmps
or
push
lods
mov
dec
dec
ins
cmp
mov
popf
in
into
std
nop
dec
outs
adc
aas
sub
pop
cli
(bad)
jno
imul
mov
mov
mul
bound
jns
sub
xor
xlat
xchg
pop
aad
jne
xor
push
fs
test
jl
jnp
mov
mov
inc
push
mov
inc
mov
test
outs
mov
imul
or
inc
sub
and
cmp
cdq
sub
or
fild
sub
adc
dec
lock
(bad)
sub
test
js
mov
mov
pop
nop
fs
movs
jl
fs
cmp
sbb
les
inc
leave
inc
xlat
arpl
or
xlat
in
in
push
pop
fstp
out
mov
or
adc
hlt
xchg
pop
xchg
repnz
sub
pop
std
or
pop
sbb
sub
aas
mov
sbb
es
add
repz
xor
leave
xor
push
sub
ret
mov
lea
fiadd
stc
sti
pop
cmc
lds
in
push
dec
test
je
mov
add
push
iret
repnz
mov
enter
fld
imul
xchg
fimul
mov
test
ds
jg
loop
sub
sahf
jmp
jmp
retf
pop
jmp
stos
xchg
in
push
stos
and
pusha
addr16
jmp
xor
in
sub
cmp
cmp
fsub
sbb
push
mov
add
in
and
cwde
dec
test
(bad)
(bad)
mov
iret
and
jecxz
dec
sub
shr
and
dec
xor
(bad)
fisttp
sub
mul
in
call
xor
or
hlt
add
cmc
addr16
and
in
adc
not
cwde
jnp
mov
mov
dec
xor
out
leave
(bad)
jmp
aam
bound
hlt
and
in
mov
xchg
mov
cmp
xor
pop
jl
aas
push
jbe
mov
dec
idiv
jno
int
xchg
and
ret
or
std
mov
push
pop
pushf
mov
push
js
int
dec
cmp
bound
ins
lods
int
cmp
add
stos
lds
add
pop
xchg
mov
mov
not
movs
inc
push
iret
clc
shr
fstp
rol
cli
popf
test
xor
stos
imul
cdq
pop
mov
enter
dec
xchg
xchg
scas
inc
push
or
pop
lea
xor
xchg
jg
add
into
inc
inc
pop
lods
adc
lds
imul
fsubr
das
jmp
and
inc
rol
movs
push
cs
(bad)
ror
push
or
in
movs
lock
pusha
or
mov
inc
test
test
test
jmp
mov
arpl
mov
aam
cmp
sub
js
(bad)
pop
mov
cmps
mov
js
sti
jl
and
dec
inc
dec
es
in
hlt
and
popa
jmp
psraw
xchg
call
fucomi
jmp
out
outs
(bad)
add
ror
adc
repnz
cld
pop
adc
jb
push
loopne
clc
cmp
xlat
dec
repz
outs
loop
fcomp
ja
ins
icebp
dec
push
mov
or
sbb
aad
(bad)
daa
aam
mov
xor
push
push
test
jb
imul
or
jmp
jge
xchg
push
fbld
pop
fistp
rcr
in
fisubr
inc
pop
add
inc
les
add
add
call
mov
or
jno
les
js
aam
ds
xor
mov
fidivr
lds
out
inc
repz
dec
cwde
push
cs
jbe
xor
xor
jnp
push
pushf
ja
je
sbb
movs
pop
cs
cmp
xchg
mov
out
out
jg
and
jecxz
pop
jmp
push
jno
in
dec
enter
mov
in
xchg
pop
jmp
and
aaa
jae
inc
sbb
jle
add
push
in
sahf
mov
test
or
bound
icebp
jle
pop
jmp
fstp
jo
cs
sub
hlt
sbb
aaa
xor
cmps
loope
inc
imul
push
adc
pop
es
mov
mov
repz
push
push
add
push
inc
push
cmp
jmp
push
or
jmp
pop
dec
adc
jns
mov
sbb
pusha
stos
test
adc
aad
addr16
jae
popa
loopne
inc
or
mov
cli
or
mov
mov
pop
inc
xor
cdq
test
sub
xchg
jae
enter
das
sub
pop
mov
sub
jmp
loope
iret
push
iret
dec
sub
push
jae
not
adc
in
sub
in
stc
gs
mov
push
jge
or
int3
xchg
ins
mov
add
add
push
push
jbe
sbb
pop
adc
movs
call
mov
shl
push
inc
adc
dec
bound
push
sbb
mov
jle
neg
xchg
mov
jle
or
push
and
xchg
or
enter
nop
mov
jecxz
leave
xor
(bad)
inc
(bad)
into
mov
mov
(bad)
mov
imul
cmps
mov
pop
push
adc
cmc
pop
dec
dec
cmp
aaa
sbb
iret
jo
push
xchg
sbb
jecxz
and
jne
add
sub
sbb
mov
and
xchg
mov
(bad)
xor
lock
mov
mov
add
in
pop
out
in
mov
pusha
xchg
push
add
sub
fdiv
add
jmp
jle
add
(bad)
test
pop
adc
jmp
icebp
mov
push
mov
sbb
ja
and
stos
inc
pushf
int3
sbb
popa
ss
cmp
loope
mov
jmp
mov
jbe
pop
out
add
mov
inc
or
jnp
xchg
or
cwde
push
and
enter
sbb
js
div
aam
daa
xor
xor
sbb
cmps
cmps
in
mov
add
xchg
call
aam
dec
ret
les
pop
mov
adc
sbb
movs
mov
inc
cmp
xchg
in
sub
dec
ins
fs
xor
pop
jae
push
add
imul
add
push
push
or
nop
add
rcl
jbe
leave
fcmovne
bound
or
loopne
pop
xchg
je
js
or
dec
lahf
jbe
xchg
or
ss
add
xor
push
sbb
xchg
pop
jno
inc
test
lock
repnz
loopne
shl
test
ins
sbb
sbb
scas
and
pop
movs
push
push
add
mov
inc
ss
imul
jge
(bad)
mov
adc
retf
or
xchg
mov
data16
stos
fisttp
sub
cmp
(bad)
icebp
(bad)
dec
pop
xchg
sbb
inc
or
pop
ret
inc
ror
fimul
in
and
ret
icebp
in
scas
dec
xchg
push
sub
inc
movs
add
mov
enter
popa
lods
xchg
gs
inc
jb
leave
and
stc
adc
pop
imul
jns
rcl
std
leave
push
cmc
movs
xlat
mov
xchg
xor
or
xchg
xchg
sti
push
lea
dec
(bad)
push
cli
mov
push
push
dec
xchg
repnz
jmp
or
div
int
push
arpl
fstp
fmul
pop
sbb
ins
dec
cmp
dec
inc
js
sbb
push
pop
imul
push
out
xchg
pusha
(bad)
popf
ret
aaa
repnz
mov
jnp
adc
xor
sub
outs
cmc
and
lods
ins
mov
cmp
sbb
xor
cmp
nop
test
pop
mov
fild
adc
lods
and
(bad)
repz
push
mov
fwait
stc
dec
leave
gs
leave
js
dec
mov
imul
fbld
mov
xor
inc
cdq
ins
sub
dec
gs
cmc
enter
push
or
sti
pop
mov
pop
imul
js
(bad)
stos
or
xor
sahf
pop
jecxz
xor
lods
stos
inc
sub
sbb
add
pop
xchg
xchg
(bad)
fst
test
sub
sub
movs
cmp
fstp
sahf
jle
jle
pop
add
nop
shl
data16
sbb
ds
inc
int3
fidivr
mov
pop
scas
add
fdivr
and
out
arpl
aaa
sub
jae
adc
pop
push
rcr
outs
cmps
push
call
xor
cli
popf
repnz
xor
adc
jmp
fwait
jno
aad
in
add
sub
and
fistp
je
adc
bound
loope
push
adc
arpl
adc
jae
pop
xor
popf
gs
out
outs
xor
(bad)
or
in
sar
outs
leave
cmp
test
bound
je
adc
mov
cmp
mov
xor
les
cs
mov
ror
and
cdq
jo
cmp
mov
dec
push
push
mov
ins
dec
mov
ror
sub
adc
sar
xchg
arpl
pop
test
lods
push
sub
pop
pusha
icebp
push
sbb
push
jp
lods
(bad)
push
mov
cwde
out
jecxz
mov
push
pop
in
jg
jecxz
(bad)
adc
push
mov
imul
cwde
loope
or
retf
repnz
rol
push
sbb
imul
out
fwait
jge
daa
pop
mov
jp
test
repz
sbb
scas
movs
pop
mov
mov
sbb
add
pop
xor
ins
xchg
shr
cli
movs
add
push
cdq
pop
(bad)
ror
repz
adc
sbb
in
movs
xor
jno
shr
fcomp
data16
add
push
pop
add
fiadd
add
jmp
or
daa
add
idiv
dec
jg
fistp
add
jne
pusha
cld
pop
add
pusha
fs
mov
cmp
xor
jo
inc
and
clc
push
pushf
or
icebp
xchg
ds
imul
sub
cmp
stos
sbb
(bad)
cmps
mov
stos
inc
and
jecxz
sti
pop
jp
lods
cmc
(bad)
mov
xlat
sbb
sub
pop
mov
mov
pop
push
ds
in
fucomip
and
lods
out
leave
jl
sti
pop
xor
add
xchg
jb
add
lods
cmc
mov
stos
sti
mov
add
fsubr
call
loop
loop
mov
jp
mov
mov
dec
ja
xchg
and
mov
jns
lea
movd
cld
ins
pop
daa
adc
cmp
inc
push
ds
popf
jnp
mov
inc
add
ret
mov
or
jecxz
outs
mov
(bad)
xchg
sar
stos
or
pop
lahf
and
arpl
(bad)
push
(bad)
and
dec
and
mov
cli
loope
clc
add
xor
xchg
mov
fisub
daa
add
dec
xor
pop
and
enter
fwait
mov
fidivr
pop
enter
jp
and
inc
fidiv
add
loopne
ja
aad
mov
daa
repnz
push
sbb
in
jb
or
(bad)
xchg
out
fcomp
imul
dec
scas
cdq
out
int
ds
push
dec
sahf
jbe
push
sub
jns
xchg
xor
dec
cmp
outs
(bad)
es
and
sbb
dec
fs
repz
inc
arpl
test
ds
add
sbb
mov
fmul
rcr
cmp
sbb
(bad)
adc
ja
xchg
movs
dec
clc
popa
dec
(bad)
pop
repz
fisttp
les
add
pushf
mov
mov
inc
pusha
cld
cmps
xchg
cmp
stos
sbb
or
pop
xchg
xlat
mov
adc
out
sbb
sub
jbe
mov
std
cmp
push
jp
adc
hlt
xlat
call
dec
jp
or
sub
pop
(bad)
cmp
popf
out
add
js
retf
movs
xchg
bound
push
mov
in
add
add
push
dec
push
fwait
pop
dec
fdiv
fsubr
cmps
icebp
push
push
pushf
jge
push
jl
mov
or
dec
push
and
in
iret
js
and
pop
mov
out
arpl
jmp
sub
and
cmp
add
mov
xchg
pop
scas
fisttp
pop
jb
call
rcr
hlt
adc
dec
xlat
mov
frstor
jae
xchg
pop
gs
xchg
leave
ds
test
icebp
mov
jge
push
aaa
add
sub
push
push
xor
mov
fisubr
or
cmc
imul
jmp
jnp
jge
fsubr
or
xchg
xchg
xchg
dec
ret
pop
push
gs
enter
pop
push
push
adc
sub
stc
fwait
out
dec
mov
push
fimul
mov
ins
and
xor
repnz
lods
jb
xor
xchg
in
push
pop
mov
je
rol
adc
pop
cwde
xchg
fs
pop
xchg
mov
jmp
mov
icebp
shr
lods
pop
popf
jecxz
add
xchg
cmps
xadd
pop
adc
clc
call
mov
hlt
xchg
cwde
push
push
jns
inc
sub
xchg
or
jns
jb
dec
fstp
fistp
movs
mov
mov
retf
not
hlt
fld
lds
pop
mov
outs
pop
push
xchg
out
add
cli
mov
dec
not
mov
fst
into
(bad)
push
xchg
imul
pop
repz
loopne
in
lods
jle
and
movs
push
xchg
ror
add
aam
dec
ret
stc
repz
stos
inc
mov
scas
or
add
push
int
mov
test
arpl
mov
jae
mov
sub
lods
xor
shl
jmp
imul
in
xor
mov
dec
(bad)
jno
push
fst
adc
add
mov
repnz
sar
add
cmp
add
sbb
inc
aam
repnz
or
mov
xchg
arpl
and
cmp
inc
popf
jmp
loope
pop
repnz
les
jne
loop
jmp
mov
arpl
cmp
(bad)
dec
ud2
jnp
cmps
(bad)
sub
movs
push
cmps
push
mov
call
dec
retf
into
dec
pop
push
or
shr
cmp
xor
xlat
mov
xor
pop
sbb
or
xchg
int
mov
cmp
pop
dec
xchg
pop
adc
mov
aas
mov
xchg
lahf
out
data16
ins
inc
sbb
cmps
cmp
test
aam
out
inc
ds
and
iret
mov
and
adc
add
into
(bad)
call
cld
fdivr
retf
mov
ins
dec
test
outs
lea
xchg
retf
ins
loop
int3
aas
mov
retf
jbe
or
dec
ins
xchg
mov
rcl
ds
rcl
push
jae
xchg
shl
stc
push
adc
sbb
fisubr
sub
call
aaa
in
mov
add
adc
fdiv
lea
jae
sbb
cmps
and
mov
inc
dec
(bad)
(bad)
jne
aas
mov
push
out
add
jmp
repz
mov
cmp
xor
iret
add
and
xor
inc
fistp
push
es
sahf
imul
in
inc
pop
iret
jl
call
pop
dec
xor
outs
jno
pop
cli
test
dec
loope
call
mov
mov
sahf
lods
mov
cdq
shl
inc
push
fwait
pop
xchg
and
mov
mov
enter
push
pop
or
mov
cmp
xor
lods
pop
stos
lock
pop
out
(bad)
outs
sub
nop
or
shl
sbb
(bad)
adc
mov
(bad)
jmp
bound
stc
leave
ret
pop
inc
jmp
jge
jbe
sahf
push
push
cwde
ficomp
data16
sbb
mov
fwait
les
daa
pop
les
jnp
in
and
aam
dec
ja
(bad)
sub
shl
mov
sbb
mov
jb
test
push
xlat
pop
add
add
add
add
add
xor
push
retf
das
sbb
fbld
and
ds
jb
sti
xchg
mov
cmp
dec
test
push
pop
imul
mov
loope
jl
or
repnz
es
fst
dec
and
inc
out
retf
xchg
jle
in
and
or
push
sub
fs
mov
popf
mov
mov
fsub
cld
rcr
scas
xor
call
cmp
lods
adc
test
lds
aas
outs
add
xchg
jo
sbb
(bad)
movs
sub
push
dec
cdq
sbb
inc
push
dec
mov
test
(bad)
xchg
mov
mov
inc
jmp
pop
movs
test
ret
adc
test
adc
or
add
and
mov
inc
neg
test
jne
dec
push
ins
adc
stc
cmp
shl
dec
inc
xor
ins
fucomi
adc
fmulp
push
mov
xchg
dec
cld
aad
shl
push
add
fcmovnbe
jne
scas
cld
mov
pop
cs
inc
cmp
rcr
cmps
mov
loope
jle
aaa
std
outs
cmc
mov
int
xlat
mov
les
push
icebp
and
jno
sahf
push
mov
sbb
ret
stc
adc
ins
mov
jb
test
inc
xchg
pcmpgtd
ror
out
sbb
dec
lods
sub
cmovge
shl
sub
test
pop
inc
pop
hlt
jno
mov
test
movs
add
ja
sub
pop
jo
lahf
mov
xor
ins
arpl
outs
cmps
test
xchg
cmps
sbb
inc
jg
and
leave
pop
sbb
mov
cmp
stos
add
leave
repz
jge
pop
scas
and
inc
test
out
pop
mov
pop
mov
or
xchg
cmp
inc
jno
xor
xlat
js
(bad)
sub
enter
mov
mov
sub
add
jmp
cli
pop
repnz
pop
xchg
adc
shl
inc
js
iret
mov
xchg
das
scas
pop
out
xor
mov
inc
mov
repnz
lods
test
inc
sahf
push
xor
in
inc
in
mov
mov
xchg
mov
lds
(bad)
pop
inc
popa
xlat
pop
movs
in
fild
xchg
add
aam
push
ds
mov
add
loop
(bad)
aaa
dec
ins
pop
fadd
sti
sub
test
imul
ins
vaddss
std
sub
dec
retf
adc
add
mov
fldenv
stos
adc
cmp
shr
adc
inc
out
push
mov
xchg
inc
ror
push
add
xchg
cs
xor
inc
into
mov
popa
add
fcomp
in
mov
push
call
mov
sbb
xchg
repz
pop
xor
fisub
xchg
imul
adc
sub
or
mov
ins
mov
call
push
add
pop
mov
pop
pop
or
mov
(bad)
cli
xchg
dec
hlt
fdivrp
retf
dec
or
xor
xchg
addr16
add
mov
movs
xchg
fdivr
xchg
sub
mov
pop
mov
add
in
add
add
push
mov
loope
outs
repz
lods
ds
cmp
push
lods
cmp
sub
in
jge
sahf
int
push
cmp
dec
ss
popf
or
jmp
jg
fimul
outs
or
mov
sub
dec
cmp
adc
out
inc
sbb
pop
repnz
cli
fcmovnb
adc
jle
inc
fsub
sbb
(bad)
jge
mov
jge
enter
outs
cmp
sub
push
dec
cmp
sti
cmc
cwde
inc
pop
xor
and
xchg
iret
outs
lahf
out
loop
sub
cwde
(bad)
xchg
mov
adc
scas
inc
sub
cs
in
pop
rcr
dec
pop
mov
pop
(bad)
pop
mov
sbb
jo
retf
cmps
fld
ret
pushf
stos
loopne
add
inc
xor
and
xchg
jecxz
jmp
sub
sub
ret
stos
enter
mov
push
(bad)
aaa
ss
arpl
push
xchg
xchg
adc
adc
outs
aam
xchg
cwde
aaa
push
test
sar
fdivr
(bad)
add
pop
js
call
js
inc
leave
or
clc
sti
arpl
mov
js
adc
pop
xor
push
jle
das
mov
ins
daa
stos
das
addr16
xchg
imul
fidiv
stos
jno
mov
inc
neg
inc
adc
sbb
out
cli
out
out
jp
add
inc
push
outs
data16
xor
xor
leave
sbb
sbb
int3
pop
push
xchg
add
(bad)
into
jne
xchg
add
or
pushf
repnz
int3
jge
sub
mov
push
idiv
inc
sub
mov
in
ja
(bad)
mul
mov
jo
mov
jb
adc
int3
out
inc
fwait
bswap
das
das
sub
adc
repnz
fstp
addr16
adc
mov
pop
js
mov
pop
cmp
scas
sbb
out
ret
or
in
stos
mov
or
nop
test
or
pop
push
cwde
fwait
add
nop
sub
xlat
lds
and
pop
test
add
jb
jge
add
movs
ja
xlat
bswap
in
sub
scas
fsubr
js
xchg
sub
mov
mov
sbb
test
loop
sub
inc
sar
clc
dec
jae
(bad)
mov
lds
ficom
retfw
cmp
js
aas
mov
retf
into
and
loopne
cmp
(bad)
push
push
scas
rol
pop
xchg
xor
icebp
sti
cmp
push
adc
in
or
xor
popf
mov
enter
jno
push
arpl
xlat
adc
add
add
add
add
ja
cmp
rol
mov
stos
push
ret
fnstsw
je
xlat
fdivr
mov
adc
jge
cmp
(bad)
(bad)
or
sub
call
scas
outs
inc
outs
aam
pop
dec
aad
push
cmp
add
sub
dec
pop
(bad)
arpl
push
cmp
sbb
xchg
repz
pop
outs
mov
cmc
cwde
push
adc
lahf
inc
cmp
loopne
mov
dec
xchg
push
pop
xlat
retf
dec
clc
aas
push
in
test
mov
or
jae
push
arpl
imul
sbb
sbb
cmps
xor
jmp
enter
jns
push
(bad)
sub
aas
fxch
pop
inc
rcl
ret
dec
mov
mov
mov
jae
addr16
mov
pushf
ja
lea
push
inc
jbe
imul
push
pop
jne
js
and
cmps
jge
aaa
dec
add
jbe
pop
sbb
in
mov
mov
cmc
cmp
mov
jge
outs
add
sbb
adc
enter
fbld
mov
retf
lods
pop
pop
inc
sbb
inc
and
enter
imul
ret
lea
mov
cs
int3
push
jecxz
dec
push
in
call
mov
mov
mov
loope
sar
and
stos
dec
stos
outs
pusha
xchg
inc
xchg
sub
icebp
in
and
mov
cmp
inc
adc
add
add
add
add
lock
push
mov
lock
mov
movs
push
ja
adc
jo
or
mov
xchg
sbb
stc
push
inc
mov
cmp
cmp
add
data16
pusha
mov
test
xchg
mov
dec
jp
mov
(bad)
loopne
shl
jbe
addr16
pop
jne
(bad)
mov
scas
jb
int
sub
push
and
add
test
cmc
push
adc
jno
shl
adc
xor
shl
mov
in
mov
adc
aas
cli
js
mov
mov
in
mov
ret
or
div
xlat
test
jle
mov
pop
sbb
xchg
lea
sub
or
mov
inc
mov
or
in
mov
ins
imul
aam
xchg
push
cmps
xchg
cmp
xor
mov
cmp
xor
stc
sahf
outs
mov
cmp
adc
push
int3
and
xchg
sub
adc
mov
aaa
jbe
fdivp
test
jg
cmps
sub
int3
not
xor
cmps
jo
sub
stc
inc
cmp
dec
xchg
inc
mov
addr16
pop
std
out
adc
aad
push
aaa
sub
retf
sbb
cdq
jnp
cmp
scas
ins
cmp
(bad)
sbb
idiv
retf
or
mov
jne
rol
ja
dec
outs
and
pop
mov
les
fidivr
sbb
ds
int3
xchg
popa
ja
cmp
call
out
dec
cmp
jne
mov
lods
aad
inc
sub
(bad)
jmp
lock
fwait
daa
push
jns
sbb
jge
sub
icebp
in
out
adc
hlt
xchg
(bad)
mov
sub
cwde
shl
clc
(bad)
adc
pop
pop
and
test
(bad)
hlt
dec
cmp
mov
(bad)
pop
call
ficom
arpl
xchg
or
iret
inc
push
aad
ds
dec
inc
popf
loop
repz
in
jo
pushf
mov
jbe
or
push
(bad)
pop
scas
aad
add
test
call
and
push
scas
sbb
jb
shl
lea
scas
in
pop
and
mov
adc
in
mov
push
out
rcr
mov
test
xchg
out
mov
inc
pop
dec
fsubr
sar
mov
pop
rcr
sub
lods
rcl
mov
dec
aam
test
cmps
mov
fwait
in
arpl
jp
retf
pop
ja
movs
data16
jbe
adc
mov
add
cmp
outs
or
fisub
mov
jns
stc
mov
inc
rol
loope
ficom
xchg
hlt
sbb
adc
ins
jns
ret
adc
pop
in
dec
(bad)
mov
pushf
push
cmc
pop
lds
mov
lods
fs
int3
sub
sahf
das
adc
dec
aas
pop
les
xchg
lahf
push
mov
dec
jmp
pushf
ret
shr
pusha
and
dec
in
(bad)
cmps
mov
add
(bad)
cmp
cmp
daa
push
std
cmps
fld
clc
js
inc
out
call
sbb
jo
jmp
stos
jnp
enter
cld
lock
xchg
mov
call
push
das
or
(bad)
aam
mov
in
jo
xchg
ror
mov
xor
jle
cld
push
clc
xchg
xor
iret
jp
hlt
push
and
outs
mov
jns
ss
out
pmaxsw
mov
pop
fsub
xlat
mov
xchg
js
mov
mov
or
outs
sbb
inc
dec
and
out
mov
push
sbb
aad
xor
ja
stos
std
cmp
push
lods
xor
fidivr
cmp
cdq
movs
shr
or
sub
std
mov
leave
jno
lods
or
or
(bad)
inc
fs
pushw
or
inc
stos
sbb
push
push
xchg
fldcw
push
or
repnz
xor
shl
jb
psrad
dec
dec
(bad)
cwde
rol
sti
mov
adc
or
das
pop
jae
ret
imul
test
pop
pop
loop
cmc
mov
xor
ret
clc
fisttp
ror
xchg
(bad)
and
fsubr
outs
sbb
inc
add
loop
ss
pop
push
cmps
jp
ss
inc
sti
adc
mov
dec
inc
rcl
pop
mov
in
and
adc
popa
pop
pop
and
(bad)
xchg
inc
fistp
or
mov
arpl
call
and
shl
gs
or
xchg
xchg
sar
sub
in
repnz
sbb
inc
inc
(bad)
call
sbb
xchg
repnz
repz
jg
or
push
cs
(bad)
leave
pop
push
mov
xlat
(bad)
ror
fwait
sbb
addr16
or
sbb
js
pop
cli
outs
inc
fadd
iret
data16
leave
add
sbb
push
mov
cmp
pusha
mov
retf
mov
xor
pusha
mov
xchg
pop
dec
aam
push
(bad)
xor
leave
iret
xchg
shl
mov
inc
jnp
push
fbld
mov
loopne
xchg
sub
std
retf
cmp
jp
loopne
ss
mov
sbb
and
ins
mov
pop
xchg
jecxz
add
mov
and
int3
ss
into
sub
imul
lea
fs
shl
and
cwde
xchg
cmp
cld
mov
jns
mov
and
mov
dec
inc
sbb
ds
push
mov
mov
fsub
stos
jg
mov
retf
(bad)
mov
test
cld
mov
fld
str
rcr
jmp
mov
mov
adc
add
push
add
add
add
add
mov
or
inc
cmp
popf
xchg
int
inc
push
jecxz
mov
cwde
mov
movs
(bad)
sti
retf
jle
pop
push
add
sub
movs
retf
or
enter
call
pusha
idiv
cmp
inc
cmp
push
int3
fldenv
or
cmp
push
cmp
xchg
add
jp
mov
ins
(bad)
ins
dec
pop
dec
ret
cmp
xchg
rcl
sbb
add
pop
push
inc
jbe
jg
push
jmp
test
add
ins
ror
or
push
fld
out
test
push
shl
loopne
mov
aaa
push
frndint
loopne
stc
bnd
lahf
jmp
rcr
and
dec
inc
fidivr
movs
popf
idiv
leave
cmp
dec
movs
dec
dec
sub
(bad)
push
out
(bad)
jnp
pop
mov
stos
das
push
div
sub
arpl
or
push
jnp
es
sar
lds
cmps
push
jmp
out
and
mov
sti
pop
mov
push
cmp
mov
mov
sbb
push
sub
(bad)
push
mov
movs
in
aam
sbb
jnp
movs
sbb
(bad)
retf
or
jmp
pop
in
vmaxsd
jge
outs
out
or
(bad)
mov
mov
pop
retf
(bad)
mov
pushw
jmp
xor
add
adc
in
xchg
scas
pushf
scas
gs
xchg
push
sar
push
lahf
push
sbb
xchg
inc
mov
hlt
out
adc
push
outs
dec
jb
mov
sahf
sbb
sub
inc
fldenv
adc
into
pusha
repnz
xor
aas
jbe
xchg
dec
adc
jecxz
adc
sub
jmp
sub
sub
ins
repnz
imul
mov
xor
pop
sbb
arpl
pushf
cld
std
inc
inc
or
mov
adc
shr
cld
xchg
mov
xchg
enter
mov
mov
das
xor
stc
arpl
sub
push
(bad)
jo
(bad)
mov
cmp
inc
push
pop
add
cld
test
leave
scas
aaa
lahf
fstp
push
pop
popa
ds
rcl
push
push
jne
sbb
or
xchg
sbb
lock
xchg
xor
mov
lahf
dec
mov
push
fwait
add
es
pop
in
add
mov
xor
push
(bad)
lods
mov
pop
sub
aam
shl
adc
xor
jnp
adc
sbb
(bad)
pop
adc
aas
dec
fdiv
das
sbb
push
test
enter
es
xchg
push
jb
or
mov
dec
inc
or
scas
aam
mov
sbb
test
mov
out
jne
pusha
inc
les
pop
aad
scas
mov
imul
sbb
mov
movs
es
and
adc
ja
retf
jg
in
addr16
sbb
adc
xchg
cmp
xchg
cmp
rol
add
jle
add
or
add
adc
int
and
push
test
aad
push
jmp
jbe
push
sub
jb
adc
mov
xchg
mov
es
xchg
lods
dec
lods
test
fldenv
sub
or
xor
data16
cvtdq2ps
idiv
aad
sti
ins
fadd
xor
sbb
pop
lods
nop
repnz
ret
repnz
repz
in
jno
(bad)
dec
imul
push
mov
or
inc
or
call
sbb
push
inc
jae
push
stos
arpl
jae
adc
imul
(bad)
xchg
sar
fld
imul
inc
jge
adc
lds
inc
imul
adc
or
and
add
mov
xor
xor
int
nop
call
rcl
pop
mov
lods
xchg
movs
mov
push
(bad)
and
push
arpl
lds
cmp
out
popf
sub
movs
cmp
fstp
sbb
push
int3
dec
fisttp
and
push
jmp
jp
cmp
adc
scas
icebp
test
fld
cmp
into
mov
mov
mov
jno
pop
mov
jg
inc
pop
aad
mov
cs
mov
(bad)
popa
push
arpl
sub
xchg
xlat
imul
xlat
mov
xor
add
add
jmp
jmp
not
in
fwait
jne
mov
pop
push
push
retf
leave
jmp
cld
clc
(bad)
movs
dec
pop
jno
adc
dec
out
fild
pop
jo
adc
ror
cmp
adc
call
(bad)
in
iret
dec
cmps
int
popa
pushf
daa
(bad)
loope
jmp
push
mov
xchg
rcr
fisttp
xchg
pop
xor
mov
fcmovnbe
retf
adc
jp
mov
adc
push
mov
mov
sub
pop
gs
cwde
pop
add
fist
aas
dec
mov
dec
pop
sub
fild
mov
xchg
in
movs
lods
pop
mov
pop
push
push
xor
push
call
mov
cmps
pop
loopne
mov
pop
test
push
ret
fbstp
iret
lock
into
pop
aaa
(bad)
cld
and
or
xor
adc
stos
(bad)
enter
js
jg
into
inc
les
sar
mov
and
mov
xchg
push
shr
popa
aas
cmps
jmp
int
xor
hlt
mov
pop
xchg
sub
cmp
pop
ret
loope
(bad)
cdq
mov
ret
xchg
(bad)
js
fiadd
mov
xor
lods
jns
repz
fdivr
push
aad
push
cmps
imul
adc
leave
add
sbb
test
popa
cmps
xor
jae
repnz
sub
mov
jno
mov
sahf
mov
pushf
xor
dec
lahf
mov
in
push
and
into
shl
retf
ins
div
clc
ss
xor
pop
imul
pop
test
popa
xlat
mov
adc
cwde
mov
adc
push
pop
push
jg
inc
push
loope
xchg
in
jmp
mov
addr16
sbb
sub
mov
movs
mov
xor
test
or
ins
xor
pusha
imul
lock
xchg
pop
mov
adc
cld
(bad)
mov
jns
push
push
push
test
jge
mov
push
les
dec
cmovge
nop
push
push
dec
arpl
leave
or
push
dec
mov
adc
pop
cmp
cmp
loop
sub
or
and
iret
xor
cmp
and
mov
daa
xchg
ss
sub
rcl
inc
lahf
out
scas
dec
retf
test
inc
adc
mov
jle
xchg
clc
std
sub
add
push
or
shl
or
pop
fs
dec
fisttp
inc
into
rol
sbb
stos
adc
rcr
rcr
aad
lds
cwde
push
jne
sub
and
pop
mov
popf
mov
sbb
in
jno
push
cmc
jmp
shl
push
dec
push
jnp
sti
dec
jg
imul
je
mov
lahf
popf
xor
xchg
mov
in
push
or
in
dec
pusha
pop
pop
mov
pop
dec
and
popa
jno
mov
mov
add
arpl
xchg
sub
loop
mov
inc
repnz
stos
mov
aam
add
mov
push
cmps
int
pop
sub
mov
mov
test
cmps
jmp
call
adc
hlt
mov
cmp
sbb
push
cmp
rol
retf
retf
xor
add
ds
daa
in
jne
and
jmp
cmps
ja
sub
retf
ins
mov
pusha
adc
fdivp
fisttp
xor
push
leave
std
adc
clc
add
cmp
dec
inc
add
sar
cmp
icebp
into
xlat
imul
loope
push
sub
mov
sbb
lea
adc
mov
jne
test
inc
retf
push
js
mov
das
ror
shl
push
imul
push
dec
pop
lods
les
gs
jae
call
ret
mov
sub
repnz
nop
mov
push
lea
lds
frstor
inc
cdq
xor
cmps
mov
jmp
sbb
mov
scas
ins
cmp
push
jno
jae
push
add
sub
adc
retf
repz
shr
mov
or
pusha
xor
sub
rcr
pop
ja
shl
cmps
jmp
cmp
pop
leave
pop
cli
out
std
int3
xlat
mov
sbb
shl
jmp
add
aas
mov
fcomip
daa
mov
add
add
add
add
add
dec
push
test
cwde
xchg
test
add
out
and
mov
cmps
es
inc
xchg
ds
pop
mov
int
jle
retf
(bad)
cs
jno
xor
mov
test
or
shr
les
and
jmp
add
ret
inc
dec
pop
bound
(bad)
cmps
jmp
(bad)
mov
lods
sbb
das
xchg
mov
aas
mov
int3
xchg
int
cmp
mov
mov
stos
jb
pop
sbb
dec
cmp
icebp
sbb
inc
icebp
aaa
adc
push
adc
nop
push
bound
add
mov
popa
fbld
mov
or
cli
arpl
lods
enter
cmps
bound
pusha
push
jmp
dec
sbb
addr16
lods
push
jno
mov
cdq
xor
ret
and
ja
pop
add
cli
into
add
add
mov
ds
not
adc
cwde
pop
leave
pop
fcmovu
(bad)
and
sub
xchg
test
mov
sbb
test
add
fldenv
aaa
dec
xchg
stos
mov
fs
hlt
adc
movs
xchg
lahf
je
shr
mov
fisubr
fstp
imul
add
inc
mov
and
scas
xor
or
add
test
mov
jae
(bad)
cmc
mov
(bad)
add
cld
daa
in
pop
(bad)
aad
cmc
sbb
rcl
jnp
je
shl
popf
aas
dec
out
jbe
cli
(bad)
imul
xor
(bad)
sti
sub
mov
data16
out
test
pop
or
movs
test
psubd
mov
adc
sbb
imul
iret
cmp
xor
test
xchg
ss
scas
sbb
adc
dec
inc
adc
and
inc
sub
sub
dec
mov
loop
sub
push
mov
push
les
ja
mov
pop
push
sub
xchg
xor
mov
(bad)
nop
mov
cli
enter
inc
jns
mov
(bad)
(bad)
sbb
sub
cwde
push
add
out
ret
mov
push
pop
in
jp
jp
fidiv
call
(bad)
push
dec
popf
push
test
es
mov
(bad)
iret
pop
jecxz
movs
sbb
lods
aad
and
inc
mov
adc
test
sub
mov
lahf
mov
lods
in
xchg
mov
imul
cmps
jnp
mov
mov
movs
adc
test
jg
pop
cmp
jne
stos
sbb
pusha
xchg
and
jbe
xchg
popa
add
mov
mov
mov
cs
dec
ds
xor
movs
test
scas
cld
cs
ret
ror
adc
arpl
repnz
les
sbb
aam
jl
imul
and
or
aam
add
cmp
int3
sbb
popw
xchg
sub
xchg
call
daa
xor
dec
push
test
pop
cs
sbb
in
mov
mov
ret
(bad)
ss
(bad)
(bad)
cs
jmp
jg
les
aaa
or
or
enter
xchg
pop
push
pop
out
in
inc
xchg
imul
dec
das
jo
and
aas
mov
xchg
dec
mov
and
jno
or
xchg
inc
popa
out
cwde
repz
xchg
sbb
add
aam
add
cmp
add
jae
sbb
dec
loopne
ins
pop
mov
dec
mov
jle
inc
dec
js
cmps
adc
hlt
in
add
cs
pop
mov
loope
mov
clc
push
inc
ror
ficom
mov
imul
xor
inc
ret
jg
dec
sbb
leave
(bad)
sub
fistp
out
ins
cmp
pop
push
mov
aad
loope
(bad)
movs
mov
or
in
push
xchg
mov
outs
inc
jo
xlat
fmul
pop
cmp
and
add
icebp
hlt
call
lea
xchg
dec
je
ss
mov
jmp
data16
push
push
xchg
jne
add
or
pop
mov
jnp
pop
adc
cmp
jo
jmp
adc
outs
cli
and
inc
leave
(bad)
clc
das
push
repz
dec
sbb
mov
mov
xchg
adc
adc
imul
scas
ds
cli
dec
inc
rcr
xor
pusha
push
std
pusha
sub
cdq
mov
std
lock
mov
(bad)
mov
mov
out
jb
data16
mov
jp
xchg
ss
ins
scas
pop
mov
sahf
scas
mov
pop
mov
cmps
cmps
mov
sbb
add
pop
and
mov
dec
inc
in
retf
stos
pop
jg
popf
rol
or
push
add
push
je
fs
(bad)
stc
popf
bound
(bad)
loope
imul
stc
xor
fstp
cmps
jecxz
aas
(bad)
lock
jmp
rol
out
xchg
je
jge
into
and
sub
retf
test
or
or
pop
fldcw
or
cmp
addr16
mov
mov
jl
or
das
pop
mov
mov
or
xchg
push
mov
dec
dec
push
mov
mov
stos
inc
addr16
pop
outs
clc
cli
push
xor
test
(bad)
ss
(bad)
or
cld
mov
xchg
hlt
pop
adc
dec
add
lahf
and
aaa
out
cmps
mov
retf
cdq
(bad)
and
pop
cmp
daa
ds
movs
and
hlt
pop
push
cmp
lahf
mov
repz
fidiv
xchg
sub
in
push
jo
lock
sub
push
lods
es
inc
push
push
int
out
inc
loope
sub
cmp
add
jp
mov
and
arpl
leave
movs
sub
jno
jge
nop
and
or
adc
movs
pop
xor
add
popa
pop
pop
push
and
mov
outs
sub
and
jmp
adc
mov
sub
jne
daa
mov
lods
arpl
fmul
mov
js
sbb
pusha
lock
add
mov
cmp
mov
(bad)
out
fidivr
aaa
push
xor
in
sub
mov
push
loopne
xchg
cmps
push
xor
pop
push
push
add
xor
and
xor
stos
push
shr
mov
add
icebp
pop
(bad)
add
dec
iret
mov
cwde
ds
sub
sub
jns
call
add
repz
cld
xchg
fld
not
clc
dec
xor
ins
test
retf
mov
outs
movs
xchg
sbb
or
or
out
jbe
sar
sahf
outs
(bad)
(bad)
jno
push
jmp
shl
add
jae
sbb
sub
sbb
bound
xchg
and
je
sbb
jecxz
(bad)
icebp
movs
xchg
cmp
nop
dec
sbb
sub
mov
fsubr
outs
ret
adc
test
imul
hlt
mov
mov
out
in
arpl
enter
dec
dec
xchg
jmp
cli
push
jecxz
(bad)
test
gs
xor
test
pop
loopne
and
mov
push
es
lds
das
or
rsm
pushf
inc
mov
mov
inc
scas
lods
sbb
or
xor
shl
adc
std
push
stos
mov
inc
les
xor
retf
stc
mov
int
imul
jb
pop
stos
fidivr
add
dec
or
jge
rol
dec
in
fwait
stos
test
or
mov
push
add
sub
arpl
cmp
push
inc
nop
and
adc
or
(bad)
movs
sub
arpl
adc
or
add
mov
cmp
sbb
int
mov
dec
and
dec
pop
mov
stc
xchg
jbe
or
out
lahf
inc
call
pop
imul
cmp
(bad)
cli
xchg
pop
stos
iret
out
and
mov
lock
frstor
pop
loopne
ds
pop
jns
dec
sahf
mov
(bad)
out
shr
in
fcomp
(bad)
xchg
icebp
(bad)
jb
xchg
jp
push
inc
mov
leave
mov
cmc
cmp
lds
cmp
popf
nop
jne
mov
jp
sub
sbb
adc
movs
mov
sub
nop
xor
daa
cmp
mov
mov
iret
mov
add
xor
(bad)
mov
and
mov
mov
xor
adc
dec
xor
mov
pop
inc
add
xor
(bad)
cwde
je
add
add
pop
push
add
test
mov
mov
gs
pushf
mov
idiv
xor
(bad)
call
nop
or
inc
stos
js
leave
xchg
add
and
or
mov
imul
cmp
sbb
or
or
pop
mov
stos
imul
xlat
and
imul
pop
loop
in
mov
cmc
pop
test
loopne
mov
push
aad
jge
adc
push
scas
cmp
or
int
scas
mov
sbb
mov
mov
sti
sbb
mov
sub
ja
mov
mov
cmp
popf
clc
pushf
jg
addr16
cmps
test
push
test
pop
in
or
push
es
or
out
jne
out
fbstp
scas
xchg
mov
jae
jbe
loop
and
imul
or
jns
mov
shl
or
mov
sub
pop
outs
mov
test
pop
pop
push
cli
into
pop
push
iret
mov
ins
pop
xlat
add
inc
add
pop
sbb
xor
jp
mov
sub
loopne
rol
xor
leave
mov
mov
cmp
push
pop
ins
outs
jp
jbe
pop
js
jecxz
outs
cli
stos
icebp
out
xchg
stc
or
xor
dec
xchg
movs
mov
push
push
xchg
iret
test
cdq
in
shl
into
push
lock
fucomp
mov
sbb
cmp
add
mov
in
in
push
imul
cmps
out
outs
ja
pusha
xchg
push
pop
or
xchg
inc
je
shr
lock
push
cld
in
mov
jecxz
add
mov
mov
std
(bad)
add
fs
dec
sbb
adc
or
xlat
or
inc
pop
sahf
mov
jmp
jg
jnp
imul
xchg
xchg
mov
ins
xlat
cmps
fcom
or
jecxz
out
(bad)
cmp
push
clc
push
in
add
sti
xchg
jns
xor
cmp
mov
pop
push
push
xor
inc
call
xchg
jbe
out
mov
push
clc
pop
fadd
fdiv
push
or
imul
fist
loopne
sub
aad
(bad)
pop
sbb
inc
cli
imul
cmp
pop
nop
popw
es
add
dec
inc
push
push
or
jbe
dec
pop
mov
sti
loop
movs
int3
cwde
adc
cmp
mov
and
mov
sbb
sbb
and
sahf
adc
sar
and
or
pop
mov
into
icebp
sbb
fist
inc
loopne
or
dec
push
xor
pop
movs
dec
sbb
and
mov
jbe
scas
rol
and
cmp
xor
(bad)
mov
movs
dec
xchg
cli
lods
sub
push
xchg
xor
jecxz
nop
dec
pusha
es
xor
ins
pushf
rol
cmp
iret
mov
gs
fwait
js
int
stos
mov
xchg
sbb
mov
mov
cmp
push
mov
cmp
dec
mov
cld
inc
push
imul
lods
mov
or
pop
retf
xor
jg
push
adc
daa
sahf
mov
pop
shr
push
imul
xlat
(bad)
ror
mov
das
push
push
sti
(bad)
mov
inc
fs
imul
daa
xchg
test
push
call
xor
pusha
(bad)
test
xchg
mov
jns
xor
outs
je
xchg
and
dec
out
(bad)
(bad)
dec
fdivr
xor
mov
lea
mov
dec
and
es
retf
add
nop
mov
jae
(bad)
leave
stos
pushf
ds
pop
jo
mov
inc
retf
push
cmp
pop
lods
jo
imul
data16
adc
sbb
aam
add
and
pop
lock
fsub
pushf
das
adc
pop
and
je
mov
mov
jne
out
mov
cmp
hlt
dec
stos
and
cmps
(bad)
xchg
popa
(bad)
mov
or
mov
add
add
pop
jbe
xchg
ss
cmps
push
xchg
dec
fiadd
dec
sti
pop
enter
inc
shl
fiadd
(bad)
jg
xor
in
inc
(bad)
push
mul
adc
(bad)
fidivr
out
sbb
cmc
retf
mov
jmp
or
push
repnz
cmp
sbb
cmp
call
xor
dec
lds
cmp
(bad)
fs
lods
mov
fwait
rdtsc
into
xchg
ror
cdq
int3
mov
mov
push
repz
rcl
jb
sahf
add
fidivr
leave
add
dec
sub
and
inc
nop
mov
enter
jbe
and
xor
div
and
add
(bad)
push
neg
lods
sbb
sub
pusha
jo
add
sub
js
(bad)
stos
xchg
jb
imul
popa
test
pop
ja
mov
sub
xchg
and
xchg
pop
test
(bad)
bound
ins
bound
outs
movs
jp
inc
ss
add
sub
dec
adc
gs
int
mov
fs
xchg
call
out
mov
mov
mov
fadd
(bad)
out
fmul
sbb
and
push
outs
pop
jle
jmp
add
sbb
add
push
add
add
js
cmps
ins
xchg
xchg
into
pop
jbe
pusha
xchg
repz
adc
into
movs
push
lock
mov
mov
xor
in
cli
push
pop
push
jecxz
mov
fadd
push
lods
setnp
cmp
xchg
mov
std
dec
push
push
mov
enter
cli
xor
cwde
shl
jae
cmps
xchg
inc
pop
sbb
sub
sbb
hlt
inc
loopne
jge
ja
cmp
lea
loopne
and
lds
jmp
imul
pusha
pop
ds
cmp
fidivr
rcr
fdiv
pushf
out
jo
retf
jg
add
(bad)
pop
int3
cmps
fisubr
enter
call
jmp
inc
add
jae
test
leave
add
pop
dec
adc
mov
stos
and
dec
or
jmp
mov
and
jb
iret
shr
ret
sub
retf
aaa
retf
sbb
pop
mov
ins
mov
fidiv
inc
int
and
retf
std
inc
rol
xchg
sbb
push
outs
mov
adc
mov
jecxz
(bad)
sbb
ret
lock
inc
stos
bound
jne
test
outs
test
stc
test
in
clc
aas
xor
jecxz
xor
mov
jae
cmps
xor
in
jl
imul
adc
stos
(bad)
push
jmp
push
and
pop
ret
mov
pop
xor
int
popa
mov
push
xchg
in
je
es
push
sub
add
inc
xchg
jns
mov
mov
cmp
call
or
pop
test
add
pop
fcom
or
add
dec
inc
jb
jmp
rol
repz
mov
lahf
repz
jl
jo
pop
and
add
aad
jns
pop
mov
push
mov
push
push
jle
jmp
dec
and
es
loop
mov
xor
xchg
mov
adc
jns
sub
xchg
scas
dec
ret
or
leave
scas
push
sub
push
scas
jnp
push
adc
mov
call
in
rcr
cmps
out
inc
into
js
xchg
cmps
mov
les
test
adc
clc
pop
(bad)
les
adc
bndstx
mov
sub
(bad)
ja
mov
ds
xor
or
fs
xchg
push
mov
pop
mov
fwait
jmp
rcr
enter
and
cwde
test
inc
int
jge
fs
rcr
dec
iret
dec
shl
sbb
mov
or
fs
pop
cmp
and
cmp
les
xchg
cmps
mov
or
jno
sub
fsubr
jge
xchg
xchg
scas
add
aas
cli
jbe
add
test
jecxz
(bad)
mov
fmul
sbb
lods
sub
push
je
add
add
add
add
add
std
stos
jg
sbb
sub
movs
rcl
xor
mov
hlt
dec
(bad)
out
adc
pop
pusha
cwde
xor
sar
xor
test
jo
std
push
in
push
inc
jmp
inc
sub
mov
out
movs
ret
iret
xor
add
dec
loop
and
les
sub
sub
cmp
mov
loop
mov
dec
mov
out
xchg
mov
shr
or
movs
popa
ror
push
or
imul
js
push
shl
rcr
ins
cld
gs
mov
inc
inc
rol
aam
jecxz
mov
fsub
xor
shl
(bad)
adc
(bad)
lds
in
ds
test
(bad)
adc
rcl
(bad)
cmp
aaa
push
cmc
mov
sbb
push
xchg
jb
push
imul
xchg
mov
mov
mov
mov
and
sti
ror
jnp
lea
pop
lods
mov
ds
fucomi
sti
pusha
ror
sub
add
mul
cmp
call
xchg
in
pop
lock
stc
inc
dec
loopne
and
sar
hlt
cmp
fld
in
movs
addr16
stos
inc
dec
frstor
add
ss
outs
mov
or
stos
aaa
ret
push
or
gs
xchg
ss
pop
iret
or
stos
pushf
(bad)
mov
xchg
mov
aam
test
mov
fdivr
adc
lock
xor
jne
fs
mov
jg
jae
jp
mov
fbld
push
das
into
lahf
outs
into
sbb
rcr
rol
(bad)
scas
cwde
or
cmc
sbb
cmp
aad
fisubr
loope
dec
xchg
mov
into
ins
call
js
dec
pushf
out
sub
(bad)
aas
sbb
cli
(bad)
jg
outs
repz
int3
mov
adc
and
or
les
push
sbb
out
dec
js
or
cli
stos
push
xor
mov
mov
jno
pop
stos
sub
mov
lods
jecxz
retf
aad
das
in
cmc
int
xor
pop
and
call
data16
(bad)
arpl
xlat
xchg
daa
xlat
push
pop
push
adc
outs
movs
cmp
mov
test
adc
xchg
xchg
test
xor
fiadd
nop
xor
arpl
aas
xchg
data16
xchg
pop
pop
fcom
adc
cmp
inc
mov
push
xor
call
jg
add
add
mov
repnz
inc
adc
mov
aam
out
sar
ins
sub
in
xor
cmps
sbb
dec
mov
jle
sar
cld
inc
cmc
push
shr
jnp
test
fld
xchg
retf
movs
(bad)
mov
add
add
add
fistp
and
sub
xor
ins
xchg
movs
sub
jbe
scas
es
in
mov
pop
mov
call
scas
cmp
(bad)
cmovle
shl
inc
jbe
mov
mov
(bad)
in
sub
sbb
mov
into
sahf
pop
lds
test
jecxz
cmps
(bad)
push
loopne
adc
retf
pop
aas
sub
cmc
and
sbb
cmp
aam
iret
mov
xchg
push
clc
test
aad
xchg
cmp
(bad)
or
mov
sub
add
dec
in
dec
and
(bad)
jp
push
in
cdq
jno
data16
out
push
jno
lods
cmc
popf
push
gs
aas
arpl
mov
adc
add
push
(bad)
ja
nop
movs
fs
lods
push
push
ret
mov
xor
cmps
jmp
mov
mov
retf
loop
and
xchg
fucom
ret
sub
sub
js
mov
(bad)
jno
std
les
popa
push
out
pusha
pusha
or
pop
mov
adc
pop
sbb
fadd
jo
scas
add
jbe
cmp
xor
add
sti
push
int3
cwde
mov
shr
or
bound
add
frstor
aas
jl
fimul
and
sub
loop
cmc
pcmpgtd
sbb
mov
pop
out
fdiv
addr16
or
pop
aam
ss
je
jbe
fsubrp
dec
sbb
pop
pushf
xor
test
idiv
mov
cmp
add
cmp
in
mov
shl
mov
sbb
enter
ins
inc
rcl
loope
jns
add
outs
fwait
mov
jmp
fcmovu
test
and
in
iret
push
fmul
xor
popa
push
mov
movs
mov
inc
dec
add
add
std
sub
icebp
push
aad
mov
aam
fmulp
push
sbb
in
mov
sahf
inc
jp
or
int3
dec
stos
mov
mov
add
mov
loopne
sbb
daa
cmp
sub
jle
mov
movs
iret
mov
dec
jmp
pusha
fdivr
fbstp
imul
mov
cld
ins
(bad)
iret
and
pop
jb
ror
cmp
add
xor
es
sar
rol
data16
jmp
stc
lds
stc
fistp
bound
int3
in
mov
inc
and
fcmovnu
cmps
icebp
(bad)
jl
sbb
pop
popf
mov
je
clc
sub
push
xchg
ds
xor
int
cdq
xchg
push
xchg
sub
sbb
pop
jo
test
shr
cli
xchg
mov
mov
push
add
or
sub
xor
(bad)
not
dec
dec
pop
das
xor
movs
mov
jne
sub
cmp
lahf
xchg
add
test
add
push
or
add
fldenv
sub
push
fld
pop
aam
inc
xor
int
(bad)
jmp
int3
xchg
push
idiv
xchg
(bad)
arpl
ins
cmp
adc
cs
jnp
pop
mul
pop
xor
pop
popa
inc
xchg
and
and
je
ret
call
dec
(bad)
fmul
inc
push
out
fstp
sub
jb
jns
adc
test
mov
mov
test
neg
aad
xchg
pop
arpl
clc
or
or
and
pop
(bad)
inc
ret
lds
xlat
rcr
fcom
mov
jge
ret
bound
inc
jg
cmps
fcom
lods
sar
jp
xchg
fist
lods
inc
mov
aas
enter
nop
mov
mov
imul
dec
jnp
inc
adc
mov
fisub
dec
or
cmp
cld
cld
jmp
mov
mov
shr
ss
jecxz
or
fidiv
and
xor
fs
sub
sbb
lods
sbb
ja
mov
(bad)
xchg
xor
add
push
mov
dec
mov
mov
mov
jle
out
cmp
jecxz
sub
aam
pusha
ins
adc
adc
mov
in
dec
inc
cmp
rol
jl
loopne
dec
ffree
out
mov
dec
mov
jns
test
cmp
out
add
cmp
retf
and
retf
or
mov
or
add
push
mov
and
int
(bad)
push
pop
fmul
test
dec
cmp
inc
fcomp
movsx
ds
dec
or
jg
mov
(bad)
pusha
sbb
mov
call
mov
mov
jmp
out
jg
ja
call
xchg
sahf
rcl
loopne
mov
mov
clc
imul
lods
movs
out
enter
xor
dec
push
retf
xor
adc
stc
test
push
or
loope
ret
imul
shl
(bad)
fild
xor
ds
(bad)
jmp
add
clc
out
push
and
(bad)
pusha
jnp
loopne
stos
outs
lods
cwde
enter
and
jbe
test
inc
jge
sahf
dec
leave
sub
add
sub
ss
pop
push
and
movs
test
pop
dec
ret
enter
dec
mov
or
push
mov
inc
sahf
pop
pusha
lahf
and
stc
xchg
push
mov
jge
add
popf
xor
jbe
les
in
pop
pop
xor
xchg
js
ret
(bad)
fwait
mov
jle
adc
leave
(bad)
and
adc
test
sbb
inc
inc
pop
inc
sbb
popf
imul
jle
xor
and
cmp
mov
dec
ins
(bad)
popf
mov
out
jp
(bad)
ret
and
into
push
jo
push
shr
mov
movs
(bad)
and
out
lock
into
sbb
sbb
retf
movs
call
call
adc
fs
pusha
jecxz
mov
xor
mov
popa
stos
clc
add
dec
pushf
loop
pop
dec
lods
or
push
les
in
jge
ins
adc
std
mov
adc
jne
inc
leave
jge
inc
xchg
into
dec
jae
pop
mov
dec
xor
lds
lock
out
popa
mov
cmp
das
fcom
gs
sub
fwait
xchg
pop
adc
retw
repnz
leave
repnz
call
in
ret
add
mov
sti
xor
jecxz
(bad)
jne
push
nop
adc
arpl
loope
mov
into
adc
mov
xor
push
pop
add
xchg
fcmovnb
push
and
adc
mov
xchg
or
or
xor
cld
jg
mov
jo
movs
xchg
pop
fwait
mov
pop
das
push
mov
(bad)
pop
xchg
push
xlat
mov
pop
fst
popf
sub
call
icebp
sbb
push
push
pop
cmps
push
mov
fcomip
sti
popa
sbb
rcr
call
mov
shr
mov
jp
pushf
jnp
sub
lea
aaa
jae
in
or
out
xchg
xor
push
icebp
rcl
mov
sub
js
stos
aam
ret
jb
mov
idiv
xchg
pop
daa
xchg
or
pop
adc
or
jg
bound
jmp
les
cwde
cmp
lock
dec
pop
inc
jg
jp
sbb
lods
js
aas
pushf
push
xchg
fisub
inc
(bad)
push
into
jmp
adc
and
enter
in
cmp
fnstsw
push
push
fnsave
je
xchg
ja
mov
adc
cmp
mov
ins
xchg
outs
mov
inc
jmp
aad
jns
and
ds
xor
aas
and
jns
mov
push
popa
rol
lahf
pushf
add
sbb
and
add
jae
adc
sub
add
or
fisub
mov
outs
cmp
pop
gs
adc
cli
fisubr
mov
and
js
cmp
les
sbb
dec
sub
out
jle
div
popf
outs
gs
pop
xchg
mov
test
lods
call
test
xchg
(bad)
clc
pushw
pop
xchg
lods
lds
or
jecxz
pop
es
xor
int
pop
mov
jne
xchg
xor
adc
xchg
test
add
push
xchg
movs
lock
sbb
sub
loope
in
mov
arpl
(bad)
hlt
mov
inc
loop
in
add
into
mov
nop
mov
mov
std
or
mov
in
popa
mov
inc
lods
jecxz
das
sub
jge
jne
aad
inc
xchg
daa
inc
test
es
js
retf
mov
mov
mov
push
pusha
jp
sbb
mov
(bad)
sbb
jge
fdiv
pop
inc
cmps
adc
pushf
jmp
push
pop
xchg
stos
lea
test
cli
loopne
push
fdivrp
adc
xchg
sbb
dec
loop
jmp
add
leave
fucomip
mov
dec
lds
and
mov
sub
int3
dec
xchg
imul
repnz
jle
sub
in
outs
ja
ss
test
ins
repnz
pop
sbb
(bad)
or
xchg
inc
imul
xor
dec
jmp
ins
ja
bound
add
ret
and
mov
ret
pop
sub
mov
pop
or
icebp
pop
inc
push
jle
in
add
in
adc
sbb
mov
push
inc
(bad)
js
cmps
jo
ror
sti
sbb
add
add
add
loopne
shr
out
aad
xlat
add
les
test
add
add
add
inc
das
retf
cmp
cmp
movs
jae
dec
and
sbb
in
push
into
sahf
pop
inc
jmp
adc
out
(bad)
jbe
movs
pop
inc
cmc
mul
or
loope
mov
outs
(bad)
jbe
pushf
(bad)
scas
cmp
mov
ror
dec
cwde
loop
movs
pop
push
cmc
add
xchg
stos
fsubp
shl
popf
push
enter
mov
sbb
adc
mov
cdq
mov
cmp
sbb
mov
or
sbb
cmp
sub
push
add
arpl
jp
sbb
pop
iret
xchg
icebp
xchg
scas
fst
lock
pop
mov
add
or
cmp
and
inc
jg
test
gs
cmp
lea
ins
add
xor
(bad)
(bad)
out
xor
push
mov
out
clc
mov
or
or
sbb
popf
fwait
or
dec
out
mov
pushf
movs
jge
xchg
xor
xchg
xor
test
test
and
adc
ror
test
mov
cmp
add
add
loopne
dec
push
jmp
(bad)
(bad)
(bad)
jbe
scas
mov
in
jge
std
dec
mov
loopne
cdq
loopne
jno
mov
scas
dec
inc
sbb
adc
repnz
jp
ss
sbb
adc
(bad)
and
lahf
adc
mov
sbb
or
data16
leave
pop
in
or
loopne
loop
call
call
adc
mov
outs
xchg
xor
cmps
enter
pushf
jbe
jecxz
dec
outs
and
arpl
daa
popa
dec
retf
mov
add
data16
int3
iret
jmp
push
std
fbstp
xor
sub
sahf
retf
push
and
jno
xchg
ret
mov
cvttps2pi
jns
adc
pop
mov
sar
dec
sahf
imul
scas
xchg
mov
mov
outs
cmp
aam
cld
mov
xor
xchg
jmp
inc
stc
mov
adc
in
mov
add
ret
mov
dec
les
ins
jb
es
daa
dec
sbb
mov
shl
jno
popa
and
sahf
repnz
xlat
rcl
xchg
adc
or
sub
(bad)
cmp
xlat
mov
pushf
add
loope
adc
mov
fcom
out
stos
arpl
dec
push
adc
(bad)
sub
mov
(bad)
outs
xor
ins
mov
dec
mov
jge
dec
loopne
push
(bad)
pop
loopne
mov
dec
out
jnp
test
push
push
loope
dec
xor
inc
dec
pop
mov
bound
sub
jl
xor
jno
dec
or
mov
jmp
mov
xchg
sti
in
fild
adc
out
neg
mov
ss
fstp
jl
dec
cwde
test
push
cmp
jb
ins
mov
mov
add
mov
cmp
push
int
mov
push
cli
or
jns
fwait
dec
sub
jecxz
sub
(bad)
mov
push
aam
push
mov
enter
pusha
cmp
xchg
jmp
jno
xor
ret
adc
xchg
nop
mov
or
(bad)
ds
(bad)
cld
xor
repnz
out
push
dec
bound
bnd
fiadd
dec
bound
and
add
inc
push
rcr
lds
fdivr
pop
iret
jo
loope
mov
ds
cli
fcomi
or
jno
jg
cmps
inc
lods
pop
ret
in
rcl
call
inc
push
es
or
mov
mov
ror
dec
mov
mov
movs
inc
inc
adc
out
arpl
ficom
push
hlt
and
pop
int3
pop
enter
sbb
cwde
pop
or
test
rcl
xor
and
mov
add
cmp
and
cmp
das
fmul
xchg
(bad)
adc
cmp
adc
mov
dec
dec
adc
daa
arpl
repz
mov
jge
lock
mov
nop
push
push
std
bound
push
fnstcw
popw
hlt
sub
add
jns
fucomi
mov
dec
jp
loop
je
mov
jno
xchg
adc
(bad)
test
mov
test
mov
sbb
(bad)
xlat
inc
inc
out
and
scas
mov
repz
or
mov
mov
inc
pop
movs
inc
xor
(bad)
cmc
mov
hlt
push
sbb
jo
loope
cdq
test
inc
vcvttsd2si
int
or
cmp
cli
push
dec
movs
lods
mov
mov
cmp
ja
pushf
imul
mov
sub
xor
test
stc
jl
sahf
(bad)
bound
xchg
out
or
mov
sbb
mov
adc
loop
popa
inc
aaa
dec
rcl
xor
dec
inc
test
xchg
push
mov
or
out
mov
movs
jnp
mov
stos
lods
mov
retf
std
dec
mov
and
or
lea
shl
fs
cdq
xor
mov
cmp
je
ja
cmp
ins
mov
pop
shr
sbb
sub
dec
out
into
cmp
stos
outs
ret
sbb
test
mov
sub
int
fiadd
pop
call
mov
sub
inc
and
add
xchg
push
mov
iret
cmp
data16
cmp
outs
loope
sub
idiv
aam
jg
stos
dec
fcmovnu
call
push
jb
inc
sbb
cmp
mov
mov
push
gs
or
push
js
xor
cld
dec
mov
sti
sahf
icebp
cmp
loope
in
add
(bad)
push
(bad)
and
es
inc
xchg
inc
lods
or
rol
and
nop
pop
je
mov
lock
cld
(bad)
cmp
jmp
sub
dec
neg
(bad)
aad
xor
in
int
adc
cmp
mov
adc
in
loope
js
imul
add
mov
add
cmp
add
int3
inc
xchg
pop
ins
call
rcr
push
cmp
xchg
fs
popf
enter
mov
outs
jp
push
pop
(bad)
adc
fsubr
fdiv
xchg
test
int
sub
add
add
jp
or
mov
xchg
cmps
bound
pop
xchg
ja
dec
adc
sar
or
(bad)
in
(bad)
adc
sbb
and
sub
mov
push
sbb
mov
pop
pop
imul
fwait
(bad)
push
test
push
cmp
test
mov
or
ret
xchg
mov
xor
cli
pusha
in
jmp
cmps
inc
out
int
nop
xor
stos
popa
add
pop
icebp
add
pop
mov
push
ret
jge
fwait
inc
xor
sbb
jb
test
and
fwait
mov
(bad)
(bad)
lahf
add
pop
xchg
leave
cmc
mov
push
mov
pop
pop
adc
dec
call
movs
sub
in
icebp
xor
pop
ins
enter
sbb
xchg
cmps
jle
inc
jg
jno
stc
dec
or
stos
jle
in
pop
fs
rcr
dec
out
ror
add
mov
sub
xor
inc
int
and
xor
mov
leave
arpl
mov
mov
(bad)
in
mov
or
xchg
daa
jo
gs
sub
adc
loop
aam
cmp
or
inc
xchg
mov
sar
ret
xor
pop
sbb
das
fbstp
mov
add
cmp
lock
jns
pop
jnp
inc
movs
sti
stos
int
loope
pop
test
jae
(bad)
mov
aad
sbb
js
jmp
jno
mov
or
sub
push
or
ja
fst
popa
fcmovnb
push
pand
jmp
ret
mov
aaa
retf
jecxz
jns
ja
int3
aas
movs
pop
sbb
cmp
jecxz
jmp
fmul
or
dec
test
cdq
into
push
xchg
leave
mov
lods
xor
adc
or
aas
xchg
out
daa
pop
aaa
mov
xchg
lea
xor
pop
call
push
sbb
jg
push
xchg
test
adc
cs
fstp
scas
leave
and
add
hlt
cmps
add
xchg
jo
dec
mov
pop
xor
(bad)
stc
loop
and
mov
and
cmp
icebp
in
cmp
and
mov
leave
mov
jmp
dec
cmp
pop
aas
xchg
and
mov
inc
push
pop
mov
ins
push
bound
add
stc
jbe
stc
dec
mov
xor
jmp
or
in
cmps
mov
sub
ins
jnp
test
in
mov
cmp
mov
scas
je
lods
sbb
inc
into
sbb
or
dec
add
or
loop
outs
mov
out
mov
fiadd
jno
sub
repnz
jmp
lahf
nop
jno
and
pop
sub
loopne
add
loopne
push
cmps
lahf
popf
(bad)
popa
mov
aad
sub
repnz
xchg
or
sub
xlat
and
cmc
into
jl
mov
mov
fcmovne
pusha
mov
pop
push
lock
loop
sub
dec
outs
adc
and
cmps
ds
mov
dec
and
jmp
rol
jns
xchg
pop
lock
mov
jb
add
xor
pop
shl
out
shl
xchg
mov
shl
xchg
scas
cmp
ja
add
or
sub
adc
sbb
add
xchg
jg
sbb
push
cdq
sahf
xor
mov
aad
mov
std
jnp
jmp
sub
inc
push
jecxz
xor
out
add
fstp
repnz
fisub
inc
and
daa
sar
int3
xchg
(bad)
and
sbb
jbe
in
in
pop
hlt
and
mov
mov
mov
fmul
retf
das
movs
lods
push
repnz
xchg
mov
fadd
inc
test
fimul
jno
add
int
daa
and
rcr
pop
aaa
dec
mov
cli
arpl
pop
gs
adc
fist
dec
fsub
(bad)
or
(bad)
loopne
repnz
ds
dec
jmp
or
ja
fimul
bound
mov
stos
ret
fstp
imul
push
push
and
aad
scas
cdq
fcom
ret
int
and
xor
popf
push
in
inc
(bad)
cmps
or
loopne
jns
scas
lods
dec
mov
xor
dec
xor
(bad)
or
jge
(bad)
cdq
aam
push
and
pop
out
(bad)
xchg
js
retf
cmc
or
jns
dec
ret
jmp
sbb
pop
movs
xchg
mov
inc
movs
and
adc
jecxz
popf
push
int3
scas
dec
jg
xlat
lea
xor
mov
aas
push
fcmovnbe
aaa
ins
push
pusha
xchg
fcmovnb
ret
ret
repnz
lods
xor
cmp
shl
(bad)
add
xor
push
push
lea
fcomp
into
rcr
movs
mov
test
lock
movs
dec
mov
test
mov
xchg
cmp
xchg
(bad)
adc
in
pusha
dec
aaa
sub
(bad)
push
jns
stc
pop
ret
xchg
dec
mov
imul
movs
push
mov
jp
push
push
push
and
mov
retf
cmc
push
rcl
sub
or
lods
push
pop
das
sub
sbb
call
jp
iret
or
adc
or
lds
inc
xchg
mov
inc
aad
and
push
adc
in
fiadd
dec
movs
movs
inc
dec
sub
int3
cmp
dec
push
jl
ins
daa
push
pop
pop
popa
loop
cmps
push
fldcw
(bad)
xchg
in
jbe
inc
push
mov
sub
imul
push
cmp
fidivr
mov
fild
sbb
pushf
xchg
xor
add
dec
xchg
(bad)
cdq
test
or
lods
mov
scas
out
in
fld
pop
and
sub
sahf
sar
test
in
jp
lea
mov
or
stc
inc
dec
mov
sub
cwde
enter
shl
sbb
imul
aad
nop
in
cmp
mov
cmc
ds
sbb
arpl
ror
test
sar
data16
nop
shr
dec
ror
ds
xchg
bnd
(bad)
mov
repnz
inc
mov
out
push
loop
jge
jge
pop
mov
or
pop
push
cmp
xchg
ja
jle
in
xor
ins
out
cmp
push
ret
lods
mov
jns
sub
push
sbb
add
sysret
add
aam
add
int3
out
ret
dec
or
es
int
cmp
loop
ins
ja
out
test
cdq
neg
add
cli
mov
push
pop
daa
mov
adc
push
aas
ds
adc
push
dec
(bad)
fwait
and
xchg
cmp
adc
popf
stos
mov
add
xchg
popa
pop
pop
or
(bad)
lahf
(bad)
mov
mov
iret
ins
outs
ret
jno
std
xchg
add
scas
int3
adc
dec
aad
push
stc
out
aam
std
cmps
das
out
out
push
lods
or
push
mov
mov
std
and
sub
adc
and
fmul
xchg
or
aas
push
aaa
mov
push
popf
dec
mov
inc
loope
push
mov
xor
adc
frstor
dec
scas
imul
sub
call
rcl
inc
fnstcw
adc
fimul
xchg
inc
jne
xor
sub
fsubr
je
inc
xchg
fsub
cmp
inc
dec
mov
fs
data16
(bad)
jecxz
pop
mov
push
or
bound
rcl
pop
sbb
mov
nop
jl
stc
sbb
jae
inc
xchg
fstp
gs
sbb
dec
mov
add
mov
sub
inc
pop
sub
cld
pushf
push
pop
out
out
sbb
das
dec
push
mov
inc
or
lods
dec
jbe
movs
jmp
out
cmp
test
es
push
rcl
push
fist
mov
mov
inc
mov
test
sbb
ins
lods
pop
pop
mov
jb
push
sub
jbe
pop
add
mov
into
das
pop
movs
int
sbb
ins
fwait
cmp
xchg
cdq
mov
pop
loope
jnp
(bad)
cmp
sbb
dec
sbb
(bad)
out
ins
dec
mov
sbb
sar
fidivr
int3
stc
ds
ror
jnp
leave
and
sub
add
shr
lahf
mov
sub
icebp
cmp
push
mov
mov
mov
pop
retf
ror
or
fadd
fsubr
pop
sub
push
xchg
loope
(bad)
xor
and
xchg
es
ficom
(bad)
sti
arpl
mov
jmp
xor
mov
sbb
movs
(bad)
and
dec
cld
mov
in
or
(bad)
dec
mov
jp
push
loopne
data16
pop
call
addr16
adc
and
inc
pop
xchg
adc
cld
push
mov
pop
mov
xchg
dec
push
jbe
add
popf
or
dec
lahf
inc
inc
cmp
pop
enter
inc
jg
sbb
mov
int3
mov
push
inc
dec
rol
jecxz
adc
push
mov
rcl
lds
popa
jo
ret
das
and
pop
scas
sub
or
addr16
cdq
adc
jmp
in
xlat
cli
mov
dec
or
inc
hlt
ret
jae
sub
jle
ins
(bad)
pushf
or
mov
in
int3
(bad)
pop
mov
mov
dec
mov
jmp
cmp
xor
xor
cmp
push
jecxz
ss
repnz
test
inc
in
pop
cmps
ret
and
or
pop
jmp
shl
cs
loop
xchg
fsub
das
or
mov
icebp
xchg
nop
mov
test
cmc
out
stc
pop
push
adc
jp
pushf
movs
push
inc
sub
sbb
mov
int
mov
add
cli
cwde
pushf
sub
jo
dec
repz
xor
movs
or
push
jns
ficomp
push
cmp
push
clc
rcl
cmp
loope
fdiv
mov
dec
adc
stc
mov
and
xchg
add
mov
out
xchg
jns
test
call
(bad)
(bad)
sbb
shr
iret
or
inc
and
dec
sub
dec
jmp
pop
movs
(bad)
pop
outs
push
das
sub
mov
std
mov
jno
cdq
cwde
aad
sub
cmp
xlat
icebp
pop
and
scas
push
pop
loope
sub
mov
test
loop
scas
push
mov
jnp
mov
dec
add
sbb
jo
dec
into
idiv
pop
push
out
clc
pop
cmp
sahf
(bad)
fcom
test
push
pop
addr16
nop
bound
je
add
cmp
cs
leave
lods
bound
mov
retf
inc
adc
mov
sub
loop
or
test
in
pop
fdiv
xchg
mov
push
push
mov
cs
xchg
ds
add
lods
and
dec
pop
aam
jmp
or
sub
sub
daa
push
in
cmp
sbb
in
pop
aaa
imul
mov
mov
jg
mov
inc
and
daa
shl
sbb
(bad)
clc
aas
xchg
mov
lods
sub
jbe
push
mov
push
push
arpl
sar
call
inc
loope
mov
outs
ja
cmp
or
cli
lock
lods
mov
cld
add
push
sub
int3
jmp
lods
(bad)
pop
int
push
lds
sbb
inc
dec
(bad)
fchs
jo
outs
cld
or
add
stos
stos
(bad)
pop
push
mov
dec
xchg
test
ins
sbb
inc
aam
cmp
lock
jnp
fcom
sbb
ins
rcl
std
pop
dec
cli
rol
mov
aas
inc
aam
jecxz
lods
pop
and
push
outs
push
aas
inc
xchg
xchg
cmp
sahf
add
arpl
int3
cld
(bad)
add
mov
xchg
(bad)
aam
arpl
mov
mov
enter
sbb
xchg
sbb
loopne
pminsw
push
inc
pop
int3
pop
in
fisubr
mov
popf
mov
jno
mov
add
nop
nop
cmp
(bad)
leave
sub
jle
cmc
cs
jo
cmps
xchg
hlt
xchg
mov
sti
mov
test
xor
lods
pop
push
jne
xchg
sub
adc
xchg
pop
rol
push
call
sub
leave
outs
mov
cmc
mov
ss
mov
data16
fcomip
xor
pop
repnz
loope
dec
aaa
rcl
mov
sbb
in
xchg
push
test
hlt
and
cmp
jne
sbb
add
push
add
sub
div
fnstenv
mov
out
mov
sub
jns
loop
sbb
out
pop
inc
shr
rep
and
shl
(bad)
xchg
ss
js
xor
loopne
xor
dec
inc
mov
test
mov
jae
imul
cmps
mov
or
push
icebp
scas
cwde
mov
cmc
or
jecxz
dec
or
add
jnp
lock
jg
adc
inc
enter
adc
sub
test
int
not
(bad)
ss
xchg
inc
mov
sub
sbb
cmp
js
xor
mov
jmp
xchg
mov
rcr
hlt
push
pop
jnp
iret
mov
mov
dec
test
ret
iret
lods
iret
(bad)
aaa
dec
sti
retf
mov
dec
mov
int
fisttp
pop
xor
mov
push
bnd
cld
rcl
xchg
repz
popa
scas
or
stos
xlat
adc
pusha
push
xchg
cmc
aaa
jecxz
inc
dec
and
jb
lea
mov
sbb
out
cld
inc
push
movs
mov
inc
movs
cmps
cmps
std
fdivr
in
into
loope
nop
imul
jecxz
stos
pop
dec
sbb
push
sbb
and
inc
pop
xor
fidivr
jle
lahf
push
jle
mov
sub
adc
sbb
push
popf
cmp
js
jge
aam
sbb
push
jmp
and
out
cmps
das
cmp
loop
cmp
sbb
in
es
xor
and
movs
mov
dec
sti
mov
xchg
ins
xchg
xchg
sub
adc
mov
rcr
sbb
sbb
mov
cdq
enter
dec
pop
out
lods
xchg
xor
jle
xor
shr
dec
aaa
(bad)
sbb
mov
or
mov
mov
repnz
mov
jp
jno
fisubr
into
pop
loop
pop
loop
push
pop
mov
mov
out
jbe
jae
pop
test
stos
add
dec
jo
dec
popf
hlt
lods
retf
adc
or
fs
repnz
xor
aam
arpl
inc
inc
and
adc
mov
leave
pop
test
outs
pushf
sbb
add
pop
retf
pop
scas
xchg
xchg
cmps
jb
ror
fwait
ins
out
mov
or
ficom
and
mov
inc
push
cmps
addr16
sbb
bound
inc
adc
adc
call
or
sub
push
mov
sub
popf
mov
or
push
cmp
inc
outs
pop
push
and
popf
sahf
adc
jo
std
std
jne
addr16
xchg
dec
jb
jbe
mov
sbb
das
xor
cmps
ins
ins
mov
hlt
sti
(bad)
cld
loopne
mov
xchg
and
sbb
sbb
rcl
rcr
xchg
clc
xchg
pop
xchg
fsubr
nop
inc
(bad)
sti
jns
fs
popf
retf
das
retf
outs
lahf
popf
adc
push
dec
clc
sar
and
sbb
push
mov
lods
lock
mov
push
jno
xchg
arpl
inc
lods
xchg
add
dec
popa
mov
loopne
or
mov
out
test
dec
vpmaxsw
lock
daa
aas
inc
in
test
popa
dec
xor
push
xor
jne
call
lea
sub
mov
aas
xor
fadd
mov
cmp
xchg
cmp
loope
loop
xor
sar
test
fidivr
inc
sub
mov
dec
sahf
push
cwde
dec
(bad)
jmp
inc
pop
lods
std
add
xor
push
fistp
sub
xchg
daa
ret
shr
test
ja
test
in
jp
mov
push
mov
mov
or
fadd
xor
jnp
adc
dec
and
movs
shr
cdq
fistp
je
xchg
mov
icebp
ss
xchg
inc
ret
test
les
xor
add
pushf
mov
(bad)
out
pop
jbe
cmps
pop
xor
lahf
jg
cwde
jns
loope
ja
clc
arpl
arpl
add
mov
fisubr
xchg
lods
push
sbb
jle
and
push
inc
xchg
daa
cdq
call
adc
clc
cmp
add
idiv
call
mov
push
pop
or
dec
and
outs
ret
movd
dec
hlt
out
das
imul
mov
mov
push
out
mov
shl
add
ja
adc
test
xor
adc
leave
inc
xchg
movs
add
retf
or
adc
pop
rcl
xor
imul
mov
test
iret
cs
xor
push
sbb
jo
int
mov
add
sbb
fdiv
fadd
daa
mov
fild
cmp
shl
sbb
stos
dec
ret
in
fsub
call
aaa
mov
fsubr
or
dec
add
outs
adc
hlt
sbb
cmp
or
ss
hlt
adc
leave
aas
scas
stc
loopne
push
dec
into
lds
movs
int
mov
nop
jmp
cmp
sahf
add
pop
add
dec
or
add
push
push
mov
jae
add
xchg
ja
add
in
jne
movs
pop
mov
aas
inc
ds
popf
out
fmul
das
popa
es
in
popa
or
add
out
mov
ins
loopne
xor
fistp
push
and
jne
movs
or
(bad)
in
test
pop
xchg
mov
mov
xchg
lahf
inc
lods
out
in
mov
clc
ret
fwait
repz
sbb
mov
dec
je
arpl
out
mov
shr
cwde
cmps
int3
retf
pusha
push
dec
clc
add
retf
lods
repnz
sbb
mov
movs
cmp
push
packsswb
cmps
cli
and
pop
dec
pop
sar
fs
xor
callw
mov
xor
hlt
xor
sbb
jp
dec
scas
leave
pop
rcr
inc
arpl
fcom
hlt
push
jbe
push
dec
xchg
scas
cli
popa
sub
push
loop
fcom
jno
test
outs
ret
retf
hlt
pop
mov
mov
push
dec
pop
inc
push
pusha
or
push
inc
adc
jecxz
stos
dec
rcr
loop
(bad)
sbb
mov
data16
nop
push
stos
xlat
sar
lahf
inc
sub
mov
xor
adc
sbb
mov
inc
fidivr
xchg
push
bound
xchg
retf
daa
mov
pop
addr16
mov
in
mov
out
data16
pop
in
stos
shl
dec
ins
int
leave
adc
mov
cmp
rcl
pop
test
cs
loop
out
(bad)
adc
iret
mov
xor
call
mov
and
cmps
neg
hlt
lea
push
popf
cmc
mov
mov
adc
stos
nop
inc
ja
xor
aas
movs
fcom
(bad)
js
(bad)
loop
dec
mov
aas
retf
sbb
xchg
call
cld
or
test
inc
dec
push
adc
dec
or
and
imul
jns
and
xchg
daa
jnp
or
mov
jecxz
out
popf
sti
ds
arpl
xor
push
sbb
(bad)
cld
or
dec
add
pop
cwde
pop
pop
inc
aam
sbb
jb
loop
fcomi
xor
out
add
mov
hlt
jecxz
movs
fs
pop
mov
and
mov
and
mov
test
mov
mov
add
or
mov
nop
nop
xchg
push
mov
push
ins
sbb
or
dec
fcmovb
popf
xor
shl
mov
push
std
jae
jbe
stos
add
mov
xchg
test
aad
sbb
mov
lock
mov
stc
call
jmp
mov
out
(bad)
out
and
xor
add
in
push
pop
xor
xchg
popa
pop
pop
jo
mov
dec
popa
push
mul
enter
retf
xor
dec
xor
lock
push
ins
jecxz
jecxz
sar
and
stc
(bad)
in
mov
daa
add
ins
pop
mov
jne
daa
lea
add
icebp
and
ja
fstp
or
in
pop
push
arpl
mov
dec
mov
cli
xor
ror
push
outs
sub
mov
xor
call
push
shr
(bad)
adc
push
pop
clc
add
push
(bad)
das
sub
leave
scas
pusha
mov
cmp
int
cmp
push
and
cmp
rol
mov
pushf
adc
dec
jns
cmps
sub
sub
arpl
xchg
aas
dec
xchg
xor
pusha
movs
outs
movs
and
jbe
xchg
or
aas
add
aam
pop
add
mov
jg
stos
mov
jecxz
or
pop
outs
idiv
ror
cwde
ret
mov
add
cmps
sub
sub
push
mov
idiv
push
(bad)
neg
jns
mov
in
ins
cmp
cli
adc
ins
pusha
adc
(bad)
or
pushf
xchg
sbb
pop
out
push
mov
adc
in
scas
xchg
cmps
and
xchg
xor
rcr
mov
jmp
sub
(bad)
jbe
loope
push
or
add
push
(bad)
test
out
inc
retf
pop
sub
out
mov
les
adc
fstp
das
push
add
cwde
cld
xchg
in
inc
pop
sbb
fnsave
xchg
scas
retf
in
(bad)
in
add
xor
movs
or
ret
jnp
retf
(bad)
cmps
je
lgs
addr16
dec
(bad)
retf
push
sbb
fisub
bound
mov
add
push
adc
jb
adc
int
inc
ret
lahf
mov
inc
not
fs
cmc
cld
iret
imul
and
cmp
jmp
pop
xchg
rcl
sub
xchg
lds
mov
sub
leave
je
(bad)
js
push
scas
ret
xor
fldcw
inc
addr16
cmp
pop
scas
(bad)
mov
xor
xchg
lods
scas
dec
dec
movs
movs
lock
sbb
fwait
stos
sbb
aam
jecxz
ins
fcomp
add
mov
lock
test
scas
lods
fld
jle
sar
xor
or
jo
and
cdq
mov
xchg
mov
sti
fsub
fwait
xchg
and
jl
pusha
dec
out
pop
xchg
and
xor
xchg
jnp
fistp
stos
add
dec
js
xchg
push
xor
mov
jne
jbe
sar
stc
mov
lods
outs
xor
jp
fs
out
xor
rcr
pop
fcomp
cmp
mov
pop
push
cmp
mov
std
adc
mov
and
rol
out
out
or
aad
cmp
mov
in
inc
mov
les
hlt
push
push
dec
outs
in
outs
nop
push
lds
imul
lahf
test
das
nop
lahf
sar
dec
jl
pop
cdq
fwait
out
mov
in
mov
fdivr
cmps
inc
sub
call
pushf
scas
sub
inc
(bad)
es
add
in
dec
push
aaa
int
aam
adc
dec
fbstp
call
sub
mov
and
adc
repz
inc
sub
mov
mov
aaa
jl
adc
add
push
mov
int3
inc
push
sub
jecxz
loopne
js
nop
and
repz
push
rcr
imul
andps
and
cmp
ss
push
xchg
(bad)
push
push
mov
inc
adc
mov
sub
cmp
pop
sti
fs
stos
jo
mov
add
or
cld
add
mov
test
loopne
(bad)
xor
adc
fisub
inc
in
mov
mov
dec
or
stos
add
jae
out
mov
fidivr
adc
xchg
sbb
stos
inc
repnz
sub
jecxz
out
popa
dec
lahf
cmps
push
pushf
pop
mov
xchg
dec
jmp
cmp
jne
enter
scas
repz
test
imul
dec
fs
add
ds
add
loopne
add
hlt
cmp
cmc
push
mov
mov
(bad)
addr16
cmp
cld
vpaddd
adc
(bad)
pop
inc
mov
(bad)
into
mov
repz
pop
mov
add
sbb
clc
mov
sbb
push
imul
retf
push
in
mov
popf
daa
lods
inc
pusha
jae
aad
cmp
ja
pop
xor
mov
movs
(bad)
jns
stos
dec
es
icebp
inc
clc
shl
pop
push
jne
or
fidivr
(bad)
cs
idiv
adc
and
jle
mov
mov
and
arpl
xor
inc
pop
out
movs
loope
mov
mov
xor
cwde
or
retf
inc
shr
push
mov
inc
add
pop
mov
mov
cmovl
sub
ret
(bad)
loopne
iret
daa
not
adc
addr16
jae
div
jecxz
mov
in
jne
loopne
pop
leave
jg
stos
int3
adc
or
xchg
mov
repnz
mov
popa
or
ja
pop
xchg
adc
enter
(bad)
int3
push
dec
mov
out
shl
mov
sub
ins
dec
xchg
and
ins
clc
jbe
aas
pop
outs
sub
enter
dec
fidiv
fs
rol
clc
sub
xchg
sbb
icebp
fist
aad
jge
loop
ins
dec
jbe
push
sub
pusha
pop
inc
aam
mov
fucomp
mov
movs
scas
mov
inc
icebp
aaa
ss
jle
cs
test
and
fsub
lods
movs
xchg
pusha
dec
dec
retf
pop
dec
or
outs
test
xor
mov
in
aaa
inc
cmc
xor
add
push
fadd
test
push
int3
out
into
xchg
(bad)
inc
stos
popf
mov
enter
jecxz
inc
fisub
cmp
movntps
sbb
pop
shr
or
shl
adc
or
fiadd
add
iret
leave
loope
int
jnp
push
retf
sbb
mov
dec
dec
mov
push
xchg
and
inc
jl
mov
cli
call
dec
ins
jge
lods
cmp
jmp
cli
mov
push
scas
push
and
pop
in
xor
(bad)
xchg
stos
lock
in
sbb
adc
inc
cld
fcomp
mov
or
ds
xor
push
fdiv
pop
mov
and
int3
sti
lahf
jle
gs
jbe
dec
jnp
inc
jmp
out
stc
xor
into
jl
pop
sub
xchg
mov
shl
outs
dec
and
push
push
inc
mov
pusha
mov
je
ja
sbb
jl
lahf
add
sbb
or
mov
ja
jns
inc
neg
not
loop
out
(bad)
(bad)
adc
jg
retf
fistp
repnz
inc
lock
aad
and
aam
jecxz
sbb
popf
jne
fsubr
sbb
mov
cmp
and
repz
sbb
leave
out
adc
cmp
or
pop
mov
jne
push
mov
retf
sub
test
sub
fadd
dec
or
aad
adc
stc
and
jmp
xor
imul
pop
push
call
icebp
leave
jge
daa
(bad)
push
fist
pop
adc
jns
loop
pop
mov
pop
shl
sar
push
mov
setp
daa
xor
jecxz
scas
add
mov
sub
idiv
pop
gs
sub
pushf
lock
dec
scas
xchg
loopne
fisttp
ins
lods
test
add
mov
inc
mov
and
sub
xlat
jbe
sub
add
in
js
mov
fadd
push
cmp
jmp
(bad)
hlt
cwde
jp
mov
aas
lahf
iret
pop
dec
mov
pop
xchg
mov
leave
hlt
lods
js
ret
jp
outs
mov
jbe
shl
cld
inc
vcvttps2dq
mov
imul
jns
daa
lea
xchg
jecxz
and
or
movs
scas
hlt
inc
lods
jecxz
pop
aad
fnsave
jmp
jae
xchg
cdq
add
aaa
shr
inc
inc
int
sti
or
test
pop
movs
rol
or
add
shl
popa
sub
and
pusha
call
fdivr
shl
std
adc
repnz
push
inc
repnz
inc
test
mov
or
jae
add
add
pop
out
movs
das
xor
xor
rcl
xor
repz
sub
mov
fwait
adc
dec
mov
push
leave
or
adc
lds
adc
inc
or
sub
xchg
fwait
cdq
out
mov
mov
ds
pop
mov
test
fidivr
pop
(bad)
mov
mov
mov
mov
int
sub
inc
add
push
(bad)
mov
stos
loopne
xchg
add
pop
pop
icebp
xor
std
sub
outs
sbb
push
imul
sub
or
in
fisub
and
pop
sub
repz
jge
inc
and
mov
pusha
jle
(bad)
jbe
or
(bad)
cli
les
sbb
outs
pop
in
test
jae
jl
inc
es
add
pop
rcl
mov
push
sub
out
fs
imul
sti
ins
push
cmps
in
dec
stc
mov
outs
dec
movs
inc
popf
pop
out
dec
or
in
xchg
cmc
mov
or
fwait
jecxz
int
daa
into
fs
pop
fild
adc
cwde
cmp
sub
inc
imul
lock
dec
inc
int
dec
lea
mov
cmp
xor
dec
cmp
xchg
into
pop
cmp
jle
pop
mov
jne
loop
stos
jmp
movs
mov
out
test
shl
pop
xchg
sbb
clc
add
xchg
push
add
dec
pop
add
cmp
xchg
mov
push
bnd
sbb
jecxz
int3
pop
jg
jb
leave
ss
jno
movs
add
cmc
iret
gs
int
jb
dec
mov
xchg
mov
sbb
not
mov
ret
pop
xor
ret
int3
pop
or
push
fdivr
cmp
pop
xchg
in
adc
pop
push
jmp
add
adc
add
mov
daa
push
mov
xchg
gs
nop
mov
das
lods
repz
sub
mov
popa
inc
xor
adc
mov
hlt
add
inc
xchg
sub
mov
add
push
mov
xor
sub
adc
fstp
mov
mov
and
and
int
ja
and
call
ret
cmps
jmp
sbb
int3
inc
ds
scas
add
jns
dec
sbb
pop
pop
pusha
cmp
mov
mov
mov
sbb
jbe
push
(bad)
cld
cs
inc
hlt
xor
popf
or
sub
fist
(bad)
jmp
dec
and
jl
out
mov
test
mov
iret
add
push
sbb
mov
jle
out
daa
xor
xor
ret
jns
push
addr16
jo
dec
jmp
add
push
imul
jmp
fucomp
add
mov
pop
fdivr
call
mov
nop
je
xchg
pop
or
cmp
and
sub
in
fwait
mov
sbb
fidiv
in
pop
push
xchg
pop
sbb
into
or
shl
retf
sbb
cmp
fyl2xp1
dec
jns
mov
jl
sbb
adc
retf
push
dec
or
loopne
sbb
cli
ret
retf
fdivr
mul
xor
loope
iret
out
push
retf
or
scas
mov
sar
iret
fnstcw
push
dec
pop
cs
push
mov
push
xor
push
push
(bad)
cmps
das
aad
push
imul
rcr
sub
fwait
sahf
mov
dec
fwait
or
mov
push
arpl
mov
pop
jno
les
dec
sbb
inc
pop
and
in
movs
jo
ja
ffreep
std
mov
inc
into
sbb
je
(bad)
pop
call
(bad)
mov
fisub
arpl
pusha
push
ffreep
cmps
sub
cmp
cmp
rcl
jbe
jno
sbb
cmp
or
mov
retf
xchg
mov
add
in
repz
mov
rol
xor
gs
scas
xor
pop
pop
pop
idiv
dec
sbb
aaa
and
sbb
mov
leave
and
(bad)
pop
sub
out
dec
adc
push
inc
popf
je
lods
pop
xchg
add
je
cmp
jge
dec
dec
aaa
fild
test
jno
and
std
rcr
or
je
std
xchg
fs
fist
int3
jb
sbb
je
dec
push
dec
retf
xor
in
lods
push
mov
pusha
mov
lock
mov
mov
gs
leave
out
or
pop
jl
js
mov
mov
out
push
fst
jo
add
(bad)
push
mov
add
std
int3
ret
mov
ins
(bad)
mov
sub
imul
jnp
bnd
cmp
dec
adc
je
scas
pop
ins
dec
mov
nop
mov
cmps
sub
loope
mov
leave
ins
inc
jns
ins
(bad)
dec
or
mov
ja
in
ret
lock
sbb
lods
dec
mov
push
and
sub
mov
mov
xchg
in
sar
jnp
add
or
imul
xchg
(bad)
fdiv
dec
test
inc
xchg
ror
repnz
lods
pop
inc
xor
call
movs
inc
cmp
mov
push
xor
sbb
push
cmps
loopne
repz
sahf
cmc
or
push
movs
js
sahf
xchg
ins
test
push
mov
ja
mov
jae
push
sub
ss
sub
sbb
stos
xchg
add
xchg
xchg
popa
cmps
xlat
(bad)
and
imul
jl
retf
fnstsw
jne
mov
mov
in
cmp
sbb
out
sub
cmps
and
pop
mov
jbe
add
daa
lahf
call
and
cmp
sti
xchg
xchg
cmc
dec
fiadd
repz
push
mov
sub
sub
cli
jge
sub
and
xchg
fld
fdiv
outs
dec
or
outs
sahf
stos
ss
xor
mov
aaa
sti
push
es
push
jo
mov
mov
ins
lods
jne
cdq
popf
mov
(bad)
es
mov
cmp
pop
or
das
loopne
xor
shr
in
call
cmp
jg
lds
mov
cdq
dec
loope
imul
adc
mov
jbe
out
sub
stos
lock
mov
mov
ror
in
inc
inc
stos
imul
jmp
ret
fwait
push
jmp
mov
mov
sar
fsubr
aas
or
ja
pop
mov
fst
inc
lods
test
pop
scas
dec
xchg
daa
out
lea
sub
mov
jge
mov
jno
aaa
push
fld
and
adc
mov
mov
in
not
push
popa
fwait
in
push
xchg
mov
pop
or
push
or
mov
rcl
shl
push
jno
jne
adc
js
enter
mov
leave
cs
pop
bound
pop
jmp
lahf
fsubr
cwde
sbb
in
scas
mov
enter
fld
pop
fnstcw
imul
jmp
jle
pop
add
jns
cmc
sub
jb
pop
jno
sub
jns
or
and
cli
ret
jle
test
pop
cmc
jecxz
sti
add
xchg
add
add
add
push
retf
mov
jp
pop
or
cmp
add
call
and
or
das
es
fidivr
enter
rcl
div
inc
ret
out
xchg
popf
add
xchg
jbe
xchg
mov
repnz
sbb
mov
inc
pop
adc
shr
push
mov
retf
out
push
ins
outs
cmp
pop
loop
mov
cwde
push
jb
mov
jle
std
push
mov
imul
das
add
add
add
test
mov
daa
jo
add
pop
jae
aam
inc
stc
inc
mov
or
cmp
mov
fisubr
ja
dec
mov
mov
mov
out
in
adc
pusha
jp
mov
(bad)
in
mov
jmp
addr16
mov
xchg
dec
mov
popa
pop
(bad)
push
and
cmp
clc
call
mov
sub
sub
adc
out
mov
xchg
out
adc
mov
fisub
(bad)
pop
mov
pop
into
inc
xchg
js
bound
stc
sub
pusha
cmps
aam
push
xchg
and
adc
xchg
add
int3
push
jns
mov
jmp
mov
ins
ror
(bad)
repnz
mov
pusha
jecxz
inc
stos
aad
test
cmp
mov
inc
mov
das
push
bound
adc
mov
shl
movs
cwde
mov
lods
or
cdq
xchg
out
es
xchg
mov
and
cmc
mov
scas
int
pop
or
(bad)
mov
in
jne
push
daa
nop
int3
push
stos
lods
sbb
sub
ret
bound
fidiv
mov
ret
mov
jp
cdq
dec
add
pop
clc
fsub
or
jg
pop
jg
push
rcr
ret
mov
or
lahf
mov
dec
out
adc
dec
in
(bad)
shl
cld
mov
faddp
aaa
cmps
leave
sbb
inc
in
sbb
cmc
pop
loopne
xchg
ffree
cmc
ins
pop
cmp
pop
jbe
stc
jle
push
data16
clc
cmc
push
push
clc
dec
xor
jne
adc
shl
pop
iret
xchg
movs
sbb
std
add
pop
mov
clc
xor
imul
loop
and
repz
and
or
imul
xchg
mov
ss
addr16
sub
jb
jo
jmp
jg
add
iret
lods
loop
push
call
iret
neg
fistp
cmps
fcomp
popf
sub
pop
sbb
adc
in
les
icebp
test
vpshlw
add
jge
inc
mov
dec
adc
sbb
out
repz
dec
xchg
add
addr16
pushf
(bad)
fmul
or
mov
push
xor
push
in
sub
xchg
jp
bound
mov
sub
daa
sbb
fiadd
xor
jmp
adc
loope
cmps
jmp
nop
jle
lods
and
and
bound
stc
and
or
push
bound
mov
es
(bad)
mov
sub
jae
add
jnp
inc
daa
jno
dec
pop
and
mov
add
jns
mov
sub
sbb
dec
shr
cmp
ror
sbb
inc
adc
jbe
mov
aam
jb
jmp
jo
adc
jl
aam
lea
push
mov
inc
xor
nop
out
jp
adc
cmp
shl
sahf
fwait
pop
lea
jmp
mov
movs
fisttp
add
dec
cmp
mov
ins
popf
js
mov
add
mov
js
xor
sti
aaa
int3
add
mov
add
mov
add
cmp
add
adc
mov
cmps
aam
xchg
pushf
lahf
dec
or
mov
push
iret
mov
nop
pop
mov
push
xchg
aas
push
ds
jg
jecxz
mov
aam
jecxz
pop
push
clc
mov
xchg
cld
dec
in
adc
mov
mov
nop
jmp
xor
int
test
je
dec
lahf
and
in
or
jge
mov
pop
cmc
loope
outs
fst
das
aam
jmp
add
mov
push
imul
xlat
into
aam
lods
xor
mov
fdiv
jmp
call
cld
pop
add
add
add
neg
ds
jmp
xor
dec
cmp
jecxz
inc
fst
loopne
pop
mov
jl
mov
imul
jmp
xchg
adc
xchg
or
add
fs
cwde
rcr
(bad)
adc
or
adc
push
(bad)
int3
xor
jae
aad
cli
dec
mov
call
mov
add
dec
fdiv
in
call
sub
retf
dec
mov
(bad)
xbegin
mov
sbb
or
outs
cmps
push
daa
mov
and
push
bound
nop
cmps
sbb
mov
int3
ins
jecxz
mov
xor
outs
inc
test
neg
lea
jl
aaa
test
int3
shr
mov
mov
dec
aad
mov
sbb
div
mov
cmp
mov
push
xor
xor
cmp
icebp
or
adc
into
sub
inc
mov
mov
inc
push
sub
cs
(bad)
gs
leave
push
les
mov
dec
(bad)
std
(bad)
jb
push
popf
fnstcw
out
mov
sub
(bad)
icebp
stc
mov
push
dec
mov
cmp
(bad)
stos
push
xor
xchg
and
retf
rcr
popf
jae
add
and
out
das
leave
cmp
mov
std
int
sbb
cmp
out
mov
add
pop
add
add
cli
ja
call
mov
mov
movs
cmp
hlt
xor
inc
push
imul
adc
cs
and
outs
jns
clc
mov
in
sbb
(bad)
bound
cmp
mov
pop
(bad)
or
(bad)
mov
sahf
mov
and
pop
xchg
jl
add
sbb
inc
push
add
add
add
mov
add
aaa
mov
push
or
jge
push
and
repz
idiv
and
jne
mov
addr16
jg
fdiv
sub
xlat
push
jns
or
add
sbb
sbb
add
add
outs
fsubr
cli
jmp
mov
(bad)
dec
fstp
mov
sbb
mov
xchg
adc
inc
jg
enter
pushw
push
daa
jbe
loopne
xchg
std
repnz
aas
mov
cwde
stos
pop
adc
repnz
mul
xchg
retf
or
jno
stos
mov
push
popa
mov
jle
call
inc
xor
or
mov
inc
or
gs
sbb
or
scas
sub
mov
imul
or
int
jmp
(bad)
addr16
jmp
adc
(bad)
loope
pushf
mov
mov
mov
push
mov
outs
push
or
dec
jle
shl
jae
push
jb
mov
dec
jo
(bad)
in
jo
push
or
iret
aam
lock
adc
test
frstor
mov
dec
or
pop
and
xchg
imul
push
stos
pop
push
call
jne
jmp
imul
xchg
leave
daa
sbb
jmp
int
inc
mov
mov
sar
mov
js
aaa
and
fidivr
fwait
rcr
call
push
mov
fcmovb
pusha
(bad)
cmp
sub
push
test
rcl
es
mov
shl
xchg
retf
ret
sbb
mov
xlat
push
das
pushw
loope
sub
std
mov
paddd
test
pop
cmps
ins
scas
mov
adc
push
jb
mov
int
dec
mov
jbe
test
rol
or
dec
data16
cmps
or
xor
divps
mov
xchg
mov
and
jnp
push
push
iret
sbb
xor
dec
ror
xchg
inc
aam
cli
sti
dec
lock
fwait
inc
jl
call
push
cmc
mov
stos
pushf
inc
push
jno
and
xor
hlt
inc
push
dec
sahf
push
out
add
in
adc
imul
adc
test
pusha
cli
js
sbb
js
stos
jge
jmp
xchg
dec
pop
or
and
(bad)
mov
push
jp
pop
xchg
xlat
jmp
mov
icebp
ja
fmul
add
nop
nop
xchg
aas
xchg
pusha
inc
push
xor
and
scas
cli
xchg
push
lahf
inc
ins
sub
rol
push
fwait
cmps
add
cmp
(bad)
(bad)
adc
inc
es
mov
or
push
neg
fild
cld
aas
dec
popa
mov
jmp
sbb
cmp
jg
cdq
xchg
xchg
iret
scas
xor
icebp
pop
retf
jmp
pop
pusha
leave
cmp
mov
jns
xor
fldenv
loopne
pop
dec
cmp
jbe
ja
xor
sbb
ds
sahf
cmp
jbe
lods
or
jl
add
aam
cmps
test
and
sbb
stos
pop
or
mov
mov
ins
into
jp
popf
mov
repz
inc
shl
mov
add
xchg
lock
push
call
mov
retf
hlt
clc
(bad)
fcmovnb
inc
jmp
mov
ja
out
cmp
aaa
dec
aas
cmps
outs
fnstenv
adc
mov
jne
outs
cmp
fimul
cmp
ja
scas
xchg
pop
stc
scas
mov
adc
retf
cmps
mov
rcr
xchg
xchg
(bad)
clc
and
dec
dec
popf
or
fucomp
pop
mov
call
push
mov
addr16
(bad)
bound
dec
pop
ja
sub
mov
jne
pop
gs
mov
jle
mov
or
ins
dec
xchg
dec
aas
in
repz
lds
ss
ror
stos
jge
mov
xchg
xor
cld
aam
lods
jb
mov
fadd
cmp
jae
lods
js
mov
aam
rcl
in
xor
test
mov
add
add
jecxz
shr
jmp
or
sahf
or
mov
xor
jge
jecxz
pop
(bad)
pop
rcl
dec
pop
push
jecxz
pop
mov
ror
xchg
xor
ss
cmp
xchg
aaa
icebp
movs
aas
xor
outs
xor
rol
pop
shl
pop
sbb
inc
repnz
repnz
mov
sub
pop
xchg
jmp
xor
pop
sbb
mov
jnp
xchg
jl
frstor
fwait
in
jg
inc
lods
fdiv
push
rol
adc
pushf
test
lea
mov
sahf
scas
push
in
fcos
mov
and
pushf
out
add
dec
lahf
stos
stc
scas
or
dec
xchg
adc
sbb
xor
mov
inc
retf
(bad)
jmp
push
lods
fs
or
or
and
lahf
push
retf
hlt
pop
add
leave
dec
fisttp
fsubr
lods
scas
gs
inc
xchg
push
loop
add
add
add
pop
add
push
push
mov
add
sbb
add
nop
add
add
or
(bad)
cmp
test
jp
not
pop
sbb
add
aad
aaa
fs
out
sub
xor
mov
lock
jnp
xchg
mov
cdq
xor
and
lds
cld
daa
sbb
jg
std
push
and
sbb
add
arpl
inc
(bad)
fst
gs
jbe
and
clc
cs
loop
mov
sbb
mov
lods
lods
inc
cli
data16
jae
fwait
adc
aam
xor
stos
rol
dec
cmc
int
or
inc
xchg
pop
test
mov
stc
outs
dec
movs
dec
sub
mov
jb
push
jge
cwde
sub
mov
paddd
test
xchg
pop
daa
push
loope
gs
xchg
add
aas
mov
jns
(bad)
cdq
int3
lahf
aaa
cwde
inc
inc
stos
adc
push
pop
sub
mov
and
or
ss
movsx
in
jecxz
cmc
jno
(bad)
(bad)
xchg
jg
push
int3
icebp
ins
mov
arpl
push
leave
or
out
and
ficomp
xchg
cwde
jo
imul
ficomp
aad
cmc
adc
lahf
out
popf
add
icebp
push
cmp
xchg
push
retf
jb
inc
cld
pushf
xor
adc
call
sbb
fisubr
not
or
(bad)
xchg
(bad)
scas
or
repz
pop
daa
pop
movs
call
pop
push
push
into
mov
add
out
aam
stc
pop
mov
cmp
push
popf
cwde
les
fild
bound
ins
repz
outs
push
adc
rcl
rcl
pop
outs
or
mov
into
push
dec
sbb
icebp
adc
xor
stc
int
mov
xchg
mov
imul
(bad)
xchg
add
lds
(bad)
test
out
push
mov
lds
repnz
aaa
pop
add
popf
pop
add
jecxz
scas
push
clc
pop
fidiv
out
aam
dec
sub
ret
and
adc
ret
outs
rcr
std
(bad)
pop
sbb
and
out
(bad)
out
mov
retf
cmps
test
neg
push
cmp
sub
pusha
adc
mov
mov
and
dec
pop
pusha
add
mov
push
push
pushf
je
mov
cmp
inc
pop
add
scas
cld
mov
pop
scas
push
cmp
pop
inc
dec
(bad)
das
(bad)
mov
jae
push
shr
mov
(bad)
aaa
call
or
movs
mov
iret
mov
jmp
xchg
add
jo
jns
imul
in
addr16
leave
dec
out
adc
push
ret
(bad)
out
pop
adc
pop
jle
mov
jbe
cs
daa
aad
mov
sub
mov
dec
jecxz
jb
in
sar
aam
mov
daa
scas
add
lods
and
dec
test
push
xchg
cwde
push
pop
in
xor
loopne
iret
ins
(bad)
(bad)
dec
out
test
gs
div
jge
retf
inc
(bad)
retf
mov
ror
aad
arpl
pop
push
push
adc
and
add
sub
dec
fadd
jo
sub
imul
lock
push
sbb
cmps
aaa
jns
adc
push
movs
cmc
dec
ja
mov
aas
and
(bad)
sahf
imul
and
push
and
(bad)
pop
(bad)
scas
or
retf
out
je
xchg
mov
mov
rol
das
das
out
popf
pop
xor
xchg
push
mov
in
xchg
shl
pop
xchg
aas
or
retf
loop
adc
(bad)
out
mov
shl
sub
repz
int
(bad)
jb
mov
sbb
inc
xor
jo
pop
aad
out
mov
mov
int3
pop
and
adc
in
jg
pushf
mov
or
cmp
mov
aam
ds
or
sbb
mov
leave
mov
or
dec
push
pop
cmps
popa
pop
or
jp
xchg
ss
mov
mov
retf
sbb
in
dec
sbb
pop
in
pop
and
inc
or
fist
xchg
xor
cmp
cmp
imul
pop
pop
sbb
cmp
inc
xchg
retf
push
sbb
out
inc
inc
aam
fwait
sub
xor
hlt
sbb
mov
xor
aaa
(bad)
cmp
out
add
cmp
dec
icebp
ds
pop
cmp
pop
mov
mov
pop
xor
dec
fucomi
adc
shl
retf
fld
mov
retf
retf
pop
dec
jno
xchg
and
inc
fldenv
stc
loop
imul
fiadd
icebp
call
xchg
pop
mov
xchg
jle
add
add
jmp
cld
shl
push
pusha
pop
leave
mov
mov
push
cmps
sbb
mov
cs
lods
mov
imul
ss
sub
sub
pop
retf
cwde
pushf
daa
or
pushf
xchg
mov
adc
jmp
pop
xor
push
xchg
push
scas
xchg
clc
iret
stos
dec
xchg
inc
xchg
mov
cmps
mov
fsubr
and
std
aaa
cmp
pushf
lock
cmps
jl
mov
ror
retf
data16
jmp
(bad)
xlat
clc
or
mov
or
pop
sub
pop
dec
imul
push
jg
in
aam
add
lds
mov
scas
push
push
mov
sbb
push
adc
dec
out
xchg
adc
out
dec
xor
xchg
sbb
mov
push
xlat
or
cwde
or
sbb
test
arpl
rcr
sbb
sub
jne
test
movs
xor
jge
dec
inc
jmp
inc
xchg
jo
dec
cs
cmp
sbb
div
jnp
daa
into
mov
push
ret
sti
add
ficomp
push
ja
popf
inc
cmp
gs
and
fnsave
mov
retf
push
jmp
fcomp
pop
jb
paddsw
dec
(bad)
pop
and
ja
in
ret
and
dec
mov
pop
gs
jl
and
(bad)
call
inc
cmp
mov
cmc
stc
add
bound
mov
sub
sub
or
mov
aad
mov
push
(bad)
xor
cmp
jmp
fwait
xor
jne
mov
loop
dec
fcom
jnp
push
and
test
sbb
lock
jbe
fcomp
clc
(bad)
aas
and
fldenv
jmp
xor
mov
ss
aaa
push
mov
or
cmp
mov
add
xchg
or
adc
movs
lock
xchg
aaa
jb
ins
push
pop
sub
jge
(bad)
fsub
sbb
sub
add
retf
inc
mov
cmps
xlat
stos
push
adc
xor
rcl
pop
add
dec
dec
jb
repnz
sbb
or
clc
add
xor
or
sub
mov
stc
push
dec
cmps
sbb
adc
xchg
inc
mov
adc
jne
pop
mov
lods
cmp
sbb
mov
fidivr
pop
push
fisubr
cmps
push
lods
popf
div
dec
or
in
mov
das
dec
push
iret
cmp
inc
or
shl
imul
fs
pop
cs
and
pop
mov
pop
jae
mov
and
fst
xlat
or
inc
jl
sub
xchg
push
sbb
cmp
out
(bad)
js
jns
adc
jecxz
in
cdq
add
pop
jge
mov
xor
lahf
pop
add
aad
xchg
or
in
sar
pushf
mov
retf
inc
mov
rol
sbb
lods
adc
cmc
imul
sbb
js
mov
inc
pop
clc
xor
cmp
rcr
mov
dec
les
xchg
jecxz
jae
(bad)
push
jecxz
mov
xor
movs
adc
adc
dec
fsubr
mov
mov
push
test
arpl
stc
push
rol
or
ds
xchg
aaa
dec
jae
pop
lods
ficom
test
xchg
xchg
popf
lock
push
in
data16
mov
sbb
mov
shr
icebp
sbb
xchg
dec
std
lock
movs
test
pcmpgtw
adc
push
ins
lock
inc
dec
das
cmp
pop
jmp
in
xor
dec
mov
js
jmp
stc
jmp
push
pop
out
pusha
cmps
push
adc
daa
push
mov
and
add
fiadd
add
pop
push
pop
rcl
ins
add
push
pop
jmp
jmp
daa
adc
jno
add
jnp
cmps
dec
mov
call
jmp
mov
jg
push
lods
xchg
outs
(bad)
mov
test
jecxz
push
imul
sub
mov
inc
cmp
mov
call
mov
add
outs
adc
pop
pop
test
sti
mov
mov
fiadd
not
add
test
std
sub
stos
(bad)
outs
retf
xchg
cmps
sub
and
inc
mov
cmp
ds
adc
lods
movs
adc
xchg
retf
out
push
push
and
in
xor
retf
retf
lea
and
cmc
fstp
and
leave
push
pushf
mov
sub
inc
std
(bad)
rcr
div
jmp
stos
sbb
push
or
stos
aas
xchg
mov
call
outs
pop
cmps
(bad)
pop
xor
or
call
inc
mov
jno
sbb
cmc
ins
shl
or
in
jle
add
icebp
pop
add
lock
push
loopne
fwait
add
sbb
retf
sar
lea
pop
xor
add
inc
jge
lahf
cmp
mov
pop
dec
outs
and
mov
movs
std
jne
lahf
add
push
out
cmp
rol
xchg
loopne
push
pop
mov
push
dec
mov
ret
nop
push
loopne
dec
das
mov
sbb
repnz
repz
jbe
movs
arpl
mov
test
and
add
jns
mov
mov
stos
cmp
mov
inc
lock
xchg
aad
fild
shl
xchg
out
retf
in
dec
mov
sahf
les
ror
sub
je
aas
je
arpl
lock
push
pop
push
xchg
fidivr
mov
sub
inc
les
mov
mov
adc
jbe
jl
xor
test
adc
push
(bad)
mov
mov
loope
sbb
push
aam
mov
cmps
fstp
mov
cld
lds
in
fild
sahf
inc
bound
ret
sub
shl
mov
pop
inc
lds
sbb
popa
inc
ror
pop
aad
mov
mov
lahf
jmp
fnstcw
sub
sbb
call
test
lock
mov
or
push
or
cs
gs
adc
std
enter
and
sbb
mov
aaa
pop
push
call
aam
sar
sbb
out
aam
xchg
mov
std
gs
(bad)
test
or
dec
cmp
mov
inc
fxch
mov
cmp
test
test
mov
dec
dec
inc
retf
pop
mov
push
pop
push
jecxz
dec
fcomp
dec
xor
xchg
mov
cdq
fmulp
ss
xor
sub
adc
stc
or
dec
popf
fimul
mov
lods
scas
int3
sahf
jmp
iret
inc
inc
xchg
push
inc
test
sub
or
push
pop
xor
push
jnp
inc
dec
add
jmp
test
mov
push
popf
pop
jle
push
push
sbb
repnz
dec
or
ins
pop
mov
add
call
cmp
clc
sub
adc
std
test
xchg
stc
repnz
mov
jne
retf
push
xchg
out
cmps
pop
xlat
pop
xchg
mov
xchg
clc
jo
fcomp
add
dec
ror
sub
dec
ret
pop
cmp
test
push
fs
jle
imul
cmp
cld
mov
fwait
sti
out
push
jnp
xchg
cmp
stc
ins
xor
mov
sub
push
movs
nop
test
pop
ret
and
mov
rcr
adc
mov
and
adc
fidiv
push
(bad)
popa
aad
inc
rcr
mov
movs
cmp
pusha
xor
xor
xchg
test
mov
cmp
inc
xchg
inc
cwde
push
or
sbb
add
retf
mov
out
fwait
movs
mov
mov
cwde
xchg
adc
clc
into
push
dec
dec
(bad)
jmp
ins
lahf
cmps
push
jno
nop
xchg
int
push
pop
sbb
pop
sub
lahf
mov
scas
jp
adc
imul
add
fs
cmp
push
rcr
push
stc
je
shl
sbb
ja
retf
and
out
into
stos
ss
(bad)
mov
jns
shl
cmp
cmp
into
or
test
repnz
test
hlt
inc
iret
cwde
pop
aas
cwde
mov
cmp
inc
pop
xchg
cmp
scas
xchg
or
jg
or
out
xor
and
into
repz
das
(bad)
popa
or
iret
in
aas
sub
jmp
or
retf
imul
and
xchg
ins
mov
or
mov
scas
sub
xchg
pop
sbb
mov
adc
sti
adc
iret
ret
ror
push
jne
push
loope
loop
ficomp
int3
xor
dec
sbb
mov
mov
xchg
sbb
cli
push
pop
fisubr
jge
lahf
push
inc
mov
xlat
dec
xor
mov
not
add
cmp
mov
clc
mov
aas
xchg
(bad)
push
mov
lahf
pop
sahf
sub
lods
fadd
imul
xor
ret
xchg
cmp
jmp
and
aas
pop
sub
adc
loopne
aaa
shl
aad
cmp
fmul
ins
aam
push
adc
or
xchg
sbb
xor
inc
adc
add
cmp
or
vmread
mov
fwait
push
sub
gs
inc
dec
adc
jo
mov
cmp
fld
ds
repz
inc
fistp
aam
js
lahf
in
fmul
mov
xchg
sbb
test
fcom
ss
xor
das
in
outs
scas
cmc
scas
ds
sub
jnp
sub
imul
push
mov
dec
in
mov
xchg
shl
fdivr
adc
and
or
xchg
mov
popf
push
rcl
and
sub
dec
mov
add
adc
pop
leave
sub
mov
xor
(bad)
test
cmc
push
arpl
fmul
adc
mov
mov
fisub
test
imul
adc
outs
repnz
cmp
cmps
(bad)
fist
inc
mov
mov
lahf
lods
cmp
xor
fwait
arpl
movs
bound
in
outs
push
push
aaa
test
hlt
(bad)
push
enter
pop
lods
gs
inc
jecxz
cmp
sbb
push
mov
pop
cmp
popa
jmp
dec
cld
push
cmp
jnp
test
ffree
mov
call
inc
add
mov
mov
leave
out
or
enter
mov
pop
ja
pop
aam
call
or
sti
gs
sbb
loope
rcr
in
cwde
jo
or
ds
sub
shl
(bad)
cwde
mov
mov
add
mov
inc
int3
cmp
fidiv
adc
movs
xor
in
xlat
or
xchg
jbe
pop
(bad)
mov
inc
aaa
xor
dec
outs
mov
push
popa
cmp
mov
icebp
mov
mov
fst
xor
ja
cmp
stos
(bad)
out
imul
cmp
pop
xor
std
scas
movs
xchg
test
mov
icebp
xor
jne
inc
(bad)
cmps
cs
pop
xchg
(bad)
push
jnp
leave
and
add
shl
popa
sub
sbb
cmp
pop
or
xlat
ins
into
lods
and
jg
ins
fist
push
leave
pop
pushf
pusha
mov
and
enter
mov
add
jmp
add
push
add
push
in
fild
retf
push
sub
xchg
xchg
add
push
retf
psubsb
(bad)
dec
idiv
push
mov
int
sub
sbb
in
xchg
popf
jmp
ss
fsub
add
xchg
fisubr
outs
and
repnz
data16
test
pop
jge
jno
cmp
stos
xchg
xchg
mov
cwde
mov
inc
xor
shr
std
push
dec
(bad)
fs
sbb
xchg
jmp
ffreep
xor
pop
cwde
adc
cmc
enter
pop
jbe
mov
mov
dec
aaa
cmp
aam
pop
pop
jb
push
xchg
test
bound
mov
cmp
int
sub
scas
push
adc
and
stc
pushf
xor
scas
(bad)
icebp
iret
mov
inc
lods
mov
sbb
inc
dec
or
repz
jo
jns
jne
mov
pop
stos
rcl
mov
mov
out
je
cmovge
pop
jo
mov
mov
test
shl
xchg
jp
mov
pop
or
dec
std
pop
adc
pop
stos
lahf
add
push
mov
pop
leave
test
mov
inc
pop
sbb
addr16
test
jg
in
sbb
std
fnsave
jnp
(bad)
scas
add
ins
xor
inc
pop
inc
xchg
jbe
cmp
pop
dec
into
mov
shl
jno
cmp
into
in
daa
pop
mov
mov
gs
test
mov
mov
mov
loopne
sbb
lock
ja
jle
inc
pop
adc
xor
sub
out
jb
int
test
fs
rol
shr
inc
xor
or
inc
and
xchg
retf
(bad)
call
pop
adc
das
sub
rcl
mov
popa
jbe
les
mov
mov
ds
repnz
jbe
cli
leave
cmp
outs
shl
jmp
pop
cmps
or
mov
fstp
xchg
scas
dec
xor
xor
or
retf
icebp
cld
adc
push
cli
adc
scas
mov
sub
sti
retf
fnstsw
adc
push
retf
or
popa
enter
lods
adc
call
(bad)
cli
jns
cli
nop
clc
mov
sti
fdiv
xchg
xchg
push
mov
fidiv
mov
iret
add
add
inc
and
push
pop
add
mov
mov
add
sub
xchg
fdivr
mov
or
inc
jecxz
xchg
mov
or
mov
xor
sti
mov
mov
adc
xchg
xor
adc
xor
inc
bound
xchg
mov
arpl
dec
imul
dec
jnp
push
stos
pop
pop
mov
or
cmp
add
sbb
ror
retf
jp
(bad)
shl
ffree
mov
mov
push
pop
pushf
hlt
out
sbb
out
mov
jecxz
and
fs
pop
push
(bad)
call
sahf
xchg
mov
repz
mul
mov
fimul
add
dec
jmp
mov
push
retf
cmps
push
pop
loopne
sbb
xor
rcl
jecxz
mov
mov
aam
call
loopne
cmp
dec
stos
lahf
outs
imul
cld
push
push
int
or
pusha
push
dec
adc
scas
push
pushf
and
mov
xchg
repnz
cmc
adc
(bad)
cli
inc
in
mov
test
iret
(bad)
push
je
js
pop
mov
pop
stos
mov
xor
cdq
inc
adc
das
mov
inc
mov
lahf
gs
push
push
pop
daa
lods
mov
cmps
ins
fdivr
pop
cmp
fnstsw
jg
arpl
in
inc
mov
ror
sbb
inc
pop
ret
or
iret
xchg
and
int3
shl
mov
stos
sub
xor
add
push
cs
push
shl
(bad)
dec
xchg
ret
mov
sbb
dec
inc
fnstsw
xor
mov
mov
mov
push
add
sahf
pop
in
ret
xor
cmp
fcomp
vmread
jae
push
ret
sti
push
leave
call
into
jo
xor
jno
shl
stos
fwait
in
xlat
mov
mov
jae
xchg
xor
mov
jge
pusha
sbb
and
mov
adc
ret
pop
pop
add
add
push
add
xor
add
ror
xor
retf
mov
(bad)
ja
push
sbb
cli
(bad)
mov
aam
cdq
push
test
stos
out
imul
test
out
hlt
xchg
jns
out
add
or
mov
and
cmc
mov
and
out
push
int
(bad)
jae
push
arpl
push
aad
mov
scas
ret
das
mov
push
pop
add
cmp
cmp
mov
clc
arpl
fsubr
fistp
mov
mov
push
shl
aam
les
jae
jnp
ins
into
xor
push
lahf
fbstp
lds
loopne
cmp
xchg
mov
rol
xchg
out
fwait
xchg
mov
sbb
mov
inc
iret
sbb
repz
test
inc
js
dec
add
pop
das
stc
(bad)
call
dec
adc
popf
add
add
mov
push
add
fistp
mov
mov
lods
xor
push
popa
jge
or
xchg
mov
adc
(bad)
sub
jne
and
(bad)
mov
ss
daa
loope
repz
mov
sub
xor
xor
push
pop
xor
mov
es
ins
pop
lea
fld
xchg
push
call
pop
addr16
xor
lock
lds
rcr
xchg
or
das
cdq
mov
stos
in
sbb
cmps
ret
in
inc
and
and
adc
pop
sbb
test
xchg
cli
mov
push
nop
imul
int3
leave
jae
lods
fbld
imul
sub
sub
fcom
jnp
imul
mov
arpl
inc
minps
adc
imul
or
int3
adc
pop
add
out
and
outs
xor
movs
bound
in
scas
icebp
push
sub
push
pop
add
mul
sub
xor
pushf
pop
stos
sub
movs
movs
popa
jp
and
add
inc
lock
add
jmp
xchg
cmps
jp
cmps
retf
aam
xlat
xchg
pop
fsubr
and
call
test
fdiv
(bad)
xor
sbb
sbb
dec
pop
push
push
pop
sub
in
or
dec
adc
pop
cld
lahf
inc
and
mov
inc
or
push
adc
cmp
inc
outs
imul
sbb
mov
imul
inc
jnp
xchg
enter
das
aam
mov
data16
retf
and
mov
mov
je
mov
je
jp
scas
mov
jbe
or
mov
add
mov
add
mov
cli
loop
in
sahf
loopne
test
add
mov
ss
xor
xchg
test
inc
adc
int
inc
ins
out
movs
mov
imul
lea
sbb
gs
push
pop
push
arpl
or
out
call
pop
ret
js
loopne
sar
(bad)
fdivr
adc
(bad)
ret
xchg
aam
jp
repz
sbb
mov
(bad)
mov
fwait
sbb
jne
scas
push
sahf
mov
fbld
lods
mov
cmp
jmp
fsubr
icebp
or
hlt
jnp
push
push
pusha
in
or
dec
out
jb
ds
inc
(bad)
out
ror
cmp
bt
popa
add
repz
outs
adc
movs
sub
xlat
sahf
mov
mov
(bad)
std
cdq
out
jbe
mov
rcl
dec
sub
enter
clc
inc
mov
in
pop
cwde
add
sar
dec
test
sub
add
shr
inc
dec
aam
sti
push
and
xlat
adc
add
mov
icebp
sbb
sub
jle
les
sub
push
or
fldcw
xchg
and
cwde
xchg
xchg
sbb
pop
imul
jnp
xchg
fcom
mov
es
jb
cli
cs
dec
adc
and
ror
pop
in
rcr
or
mov
push
outs
ret
call
mov
sub
mov
mov
(bad)
repnz
push
cmp
add
push
sub
mov
std
sub
push
sbb
call
(bad)
hlt
lods
and
cwde
jg
div
xchg
ficomp
out
(bad)
mov
adc
or
cmp
dec
pop
cdq
cwde
stos
and
shr
ja
mov
int
cli
fwait
or
in
xchg
mov
ret
loop
inc
jae
shr
les
mov
xchg
jb
movs
jb
out
call
sahf
out
ins
popa
loope
inc
jmp
jp
sub
int3
mov
inc
test
fsubr
mov
call
mov
es
dec
pop
dec
mov
xor
(bad)
xchg
add
mov
into
or
xchg
cmp
inc
(bad)
jecxz
push
adc
inc
call
leave
jbe
jecxz
jb
or
dec
sbb
fcmovne
cmp
retf
clc
fdivr
adc
lsl
mov
mov
adc
fs
mul
and
sahf
inc
ins
out
(bad)
jmp
pop
or
mov
outs
iret
xor
mov
push
add
dec
push
loop
movs
pop
gs
push
test
push
mov
call
cmp
inc
pusha
jge
xchg
outs
scas
lock
std
adc
push
push
outs
out
add
add
add
add
loope
jae
cmps
dec
xchg
movs
jns
sub
je
mov
outs
push
mov
out
pop
test
dec
adc
mov
shl
jecxz
outs
push
pop
test
push
dec
and
ins
int3
mov
dec
push
jge
inc
aaa
pop
or
int3
push
(bad)
pop
pop
push
outs
popa
jbe
pop
cld
cli
ja
pop
sbb
nop
xor
inc
mov
clc
jne
xor
xor
mov
or
mov
jg
cld
popf
jmp
(bad)
xor
jle
imul
stos
pop
rcl
(bad)
sub
loope
imul
sbb
cmp
vcmppd
push
jp
gs
xchg
push
push
push
xor
cwde
or
xchg
or
pop
or
add
xchg
mov
xchg
out
mov
repz
cmp
and
adc
test
xchg
adc
cmc
cli
mov
lahf
xor
dec
jnp
inc
je
ja
mov
dec
fs
ret
test
dec
or
imul
push
es
push
shl
jl
inc
cld
outs
xchg
and
adc
jno
pop
adc
jbe
out
call
push
inc
pop
into
sub
cmp
pop
and
push
push
inc
loop
pop
pusha
pop
es
jge
push
mov
inc
in
scas
in
mov
sbb
sbb
pslld
jae
fmul
fadd
inc
int
ins
dec
arpl
add
xor
inc
dec
aaa
cmps
lods
mov
dec
lahf
xchg
int
mov
outs
or
xor
inc
mul
sub
push
sbb
retf
mov
jnp
xor
cmps
inc
dec
push
data16
(bad)
sbb
retf
lea
mov
or
sbb
mov
test
(bad)
mov
push
cmps
je
(bad)
fbld
and
inc
int3
xchg
mov
aas
scas
gs
movs
cdq
add
lock
movs
pusha
pushf
enter
and
cmc
inc
jecxz
xchg
int3
sub
hlt
push
push
jp
and
sub
(bad)
cs
mov
ins
hlt
fsqrt
fmul
popf
retf
stc
push
jae
push
fwait
jg
cmp
mov
xchg
fild
dec
push
dec
xor
add
cli
(bad)
clc
push
jno
ret
add
test
add
add
jmp
add
lods
into
jmp
lods
inc
xor
call
push
mov
jp
test
out
add
jmp
pop
mov
in
push
gs
(bad)
pop
shr
and
pop
cmps
dec
test
loope
repz
sbb
add
sbb
mov
sbb
test
or
xor
jecxz
sub
sbb
outs
dec
dec
cld
mov
data16
jbe
cmps
sub
ja
xchg
stc
pop
jae
mov
sub
jmp
mov
adc
retf
dec
rol
inc
cmc
out
shl
ins
ds
push
ja
adc
pop
pop
ja
pop
adc
push
iret
inc
out
and
out
data16
lods
sti
mov
dec
lock
mov
mov
pop
scas
dec
push
int3
xor
iret
mov
stc
adc
and
ins
inc
or
jp
dec
gs
push
mov
clc
add
jno
cmps
add
pop
pop
sti
cmp
scas
shr
mov
mov
pushf
jle
xor
adc
test
xchg
fwait
int3
pop
loopne
test
cli
ins
inc
and
mov
fdiv
push
retf
(bad)
scas
xchg
shr
jnp
push
jns
imul
mov
and
lods
mov
mov
xor
mov
int
popf
xor
cs
push
(bad)
ficom
pop
lahf
and
(bad)
xor
jmp
nop
lock
cli
mov
xchg
push
jge
(bad)
mov
or
dec
outs
int3
(bad)
push
xchg
test
fwait
ins
xchg
aas
inc
leave
pop
xor
and
cwde
pop
imul
mov
sbb
fwait
jle
scas
push
fst
cmc
mov
xchg
rcl
dec
mov
pushf
pop
push
mov
js
(bad)
in
inc
aad
cmc
idiv
cmp
cmp
push
push
adc
in
cmp
loope
dec
inc
imul
call
inc
imul
xchg
mov
ds
movs
jmp
pop
cld
dec
std
ds
ret
pop
mov
js
cdq
lds
cmp
xor
mov
push
inc
out
pop
jns
cmp
popf
fs
push
mov
jo
js
jmp
dec
cmp
hlt
iret
and
pop
lods
je
movs
fisub
out
lds
xchg
je
or
dec
icebp
jns
pop
jae
pop
popa
and
cwde
mov
xchg
push
sbb
mov
in
xchg
int
test
clc
push
out
mov
xor
and
addr16
xor
out
cmp
xchg
enter
mov
ja
jp
out
xor
pusha
cmps
lahf
sbb
push
xchg
or
jl
mov
mov
jnp
adc
icebp
scas
sub
dec
mov
icebp
std
mov
mov
int3
mov
scas
fldenv
jle
cmc
(bad)
scas
mov
ret
retf
jmp
sbb
ins
push
cmp
outs
pop
dec
and
push
or
ror
or
sti
call
mov
and
adc
test
push
add
pop
add
inc
lods
pop
ds
ins
ret
outs
outs
cmp
enter
push
mov
and
fwait
mov
or
outs
mov
xlat
(bad)
lahf
mov
lahf
movs
mov
addr16
ins
adc
test
pusha
or
xchg
loop
adc
ja
outs
hlt
lea
in
or
push
int3
jmp
ret
ror
mov
loope
add
rol
ret
popf
and
sbb
aas
pop
scas
sub
mov
mov
fcmovnbe
ss
xchg
xchg
adc
(bad)
test
in
imul
inc
hlt
retf
lds
addr16
push
xor
(bad)
pushf
dec
fidiv
retf
gs
aad
movs
mov
dec
sbb
inc
imul
fs
push
jmp
mov
sub
sbb
(bad)
sbb
sti
dec
xor
push
(bad)
mov
xchg
mov
pushf
jmp
jb
lahf
and
and
mov
ficomp
xchg
mov
cmps
add
xor
inc
loope
sahf
int
sbb
dec
cli
data16
push
jae
jp
and
or
jo
not
inc
lds
mov
jo
or
ror
dec
icebp
imul
ins
(bad)
jge
test
int3
lock
add
outs
or
fidivr
into
inc
leave
mov
cmp
and
(bad)
xor
or
push
lea
xor
jnp
jp
test
add
(bad)
sbb
jp
xchg
dec
jle
mov
stos
lahf
push
imul
cs
jmp
ins
stos
clc
dec
sbb
push
popf
or
or
imul
push
div
stos
ret
sub
call
cmps
cmp
xchg
xchg
mov
sti
cs
or
je
repz
int
ins
retf
loop
int
sub
repnz
das
pop
mov
fld
(bad)
mov
push
int3
mov
popf
(bad)
xchg
jle
test
xchg
mov
not
xor
jp
push
adc
fimul
push
dec
sbb
xchg
sub
cmp
gs
rcr
mov
stos
or
cmp
cmp
imul
inc
movs
xor
jnp
popa
sbb
(bad)
mov
cld
lods
mov
inc
xchg
jg
sbb
mov
shl
jo
inc
(bad)
push
out
pop
mov
stc
mov
xchg
std
cdq
inc
bound
pop
inc
inc
sub
rcl
cmp
(bad)
in
cmc
dec
(bad)
add
mov
lods
stc
sbb
add
cmp
fild
shl
xchg
je
adc
mov
push
fild
push
retf
(bad)
dec
imul
xchg
sbb
dec
jae
mov
outs
fidiv
pop
inc
stc
lock
repz
ja
or
inc
aas
sub
jb
mov
jbe
repz
out
inc
jo
cmp
movs
sub
data16
inc
inc
cmove
push
sub
mov
test
adc
xchg
push
push
xor
(bad)
pop
into
fcmovnb
bound
xchg
push
cdq
add
jge
fcmovb
xchg
out
(bad)
mov
cmps
pop
test
mov
mov
movs
adc
popa
imul
std
inc
jge
fmul
push
aam
fcmovb
inc
call
cmps
push
pusha
outs
xchg
sahf
retf
jp
gs
shl
jmp
sub
les
mov
and
outs
push
aad
mov
jp
sub
xlat
aad
stos
hlt
sbb
cli
mov
(bad)
sub
(bad)
and
inc
ds
push
mov
push
frstor
xor
push
jns
pop
mov
lea
popf
scas
enter
ds
das
push
sub
pop
and
push
inc
sbb
push
js
fs
gs
int3
pushf
pop
cwde
movs
jmp
mov
je
push
adc
aaa
repnz
stc
pop
mov
jl
sbb
fwait
mov
add
inc
test
add
clc
shl
ror
nop
(bad)
mov
cdq
cli
inc
and
data16
xchg
call
jle
int
adc
mov
popa
inc
dec
jp
sbb
rcl
xor
call
dec
bound
jg
jae
sub
sub
mov
mov
xchg
inc
arpl
sbb
cwde
xchg
mov
cmp
dec
pop
into
stos
cmp
mov
mov
or
jne
and
fucomip
mov
inc
ret
and
aam
inc
(bad)
push
jl
scas
adc
xchg
dec
jecxz
sub
cli
scas
push
mov
inc
dec
add
lahf
mov
xchg
pop
fcmovb
pop
and
push
add
cld
mov
jns
stc
rcl
out
call
movs
pop
lods
imul
xchg
imul
sahf
mov
fbstp
and
fs
cmps
sti
iret
das
mov
fdiv
or
add
std
(bad)
call
test
lea
stos
addr16
xchg
dec
inc
xchg
loopne
mov
mov
jge
mov
pop
jecxz
iret
mov
mov
jp
into
mov
sbb
xlat
fistp
inc
xchg
sahf
repz
int3
dec
add
push
adc
in
inc
jo
cmp
pusha
pop
push
in
fst
pushf
push
ds
mov
call
jmp
or
imul
adc
jnp
lds
imul
sub
dec
imul
sub
dec
push
pop
inc
mov
popa
xchg
aas
sub
ret
repnz
inc
jmp
xor
mov
mov
mov
(bad)
sbb
cmp
pop
dec
(bad)
retf
arpl
xchg
outs
mov
or
sub
push
dec
rol
pop
mov
mov
call
in
daa
daa
pop
jecxz
lods
sbb
cs
pusha
push
mov
mov
lds
cld
je
stos
imul
mov
ret
xor
or
arpl
mov
arpl
xchg
inc
sbb
repz
mov
xor
ds
popa
push
sbb
xchg
inc
loop
sar
mov
shr
fdivr
push
inc
sbb
dec
test
loopne
dec
mov
add
fiadd
add
jns
add
xchg
sbb
icebp
out
(bad)
outs
push
inc
dec
dec
sub
test
inc
push
sti
cwde
movs
pop
push
js
bound
mov
outs
in
enter
xlat
movs
pop
in
(bad)
(bad)
xchg
in
mov
cmp
push
cdq
pop
pop
or
pop
sbb
neg
into
cmps
adc
adc
cmp
aam
js
inc
sbb
dec
xchg
jmp
xchg
lahf
cmps
adc
movhps
and
sbb
push
pusha
sbb
pop
inc
(bad)
add
adc
sbb
sbb
outs
fistp
inc
xchg
jae
xchg
cmps
adc
pop
push
sar
mov
ins
jle
xchg
cs
loope
pushf
int
fstp
and
jl
xchg
ds
clc
lds
xchg
jo
adc
push
mov
mov
dec
mov
out
pusha
add
nop
and
adc
pop
das
push
push
arpl
ins
leave
push
imul
fild
inc
sahf
mov
(bad)
push
test
mov
xchg
or
rcr
das
js
mov
jmp
xchg
out
pop
pop
jge
sub
pop
ret
adc
cmp
retf
mov
imul
jmp
and
sbb
cmp
mov
(bad)
lea
adc
out
mov
jl
retf
xor
add
inc
retf
or
jnp
jae
imul
leave
in
cli
add
fs
stos
and
lds
pop
rcl
xchg
jecxz
pop
ja
mov
mov
dec
stos
fstp
fcmovnu
clc
loope
repnz
adc
cmp
dec
or
push
xor
dec
mov
xor
pop
ficomp
mov
in
and
lea
push
es
test
sar
xchg
es
fist
nop
aaa
bound
push
enter
test
int3
cmp
or
pop
dec
stc
je
add
scas
push
inc
int
pop
push
jmp
mov
lods
scas
xor
mov
jo
lods
pop
int3
(bad)
loope
out
push
repnz
les
cli
pop
dec
daa
inc
inc
dec
dec
adc
test
icebp
rol
cmp
jecxz
stos
jecxz
es
mov
daa
imul
stc
fiadd
mov
cmp
int
mov
push
retf
lds
dec
in
int
inc
jo
and
push
pop
inc
or
fimul
daa
mov
hlt
dec
imul
push
gs
or
sbb
sub
out
(bad)
and
imul
and
xor
test
sub
mov
popf
pop
xchg
ret
inc
push
cli
inc
nop
inc
pusha
dec
fcomp
adc
cdq
inc
ror
frstor
stos
and
jns
add
imul
xchg
jo
xor
ds
popf
pop
jg
push
pop
imul
inc
popf
ins
push
int
sahf
icebp
or
out
(bad)
ror
popf
in
stos
xor
fwait
mov
cmp
rcl
sbb
es
movs
lahf
add
mov
sub
add
(bad)
or
jecxz
cli
lock
clc
fisttp
xchg
sub
cli
pop
push
test
lods
rol
outs
adc
add
shl
cmp
cmp
mov
test
mov
cwde
and
push
rol
repz
jb
stos
jo
stos
shl
or
and
xchg
cli
mov
mov
loop
mul
xchg
iret
in
dec
daa
inc
fist
les
mov
cwde
imul
push
dec
push
in
mov
cmp
lds
sbb
push
jmp
jmp
pusha
mov
cmp
stos
cli
adc
mov
push
adc
pop
sub
inc
repnz
das
jle
sub
xlat
fld
dec
xlat
pop
xchg
sar
setg
adc
or
mov
cli
(bad)
cmp
mov
xchg
mov
imul
mov
jns
sbb
inc
imul
cmp
push
push
cmp
jmp
mov
(bad)
dec
aaa
ficomp
and
sub
sti
aaa
imul
shl
mov
add
out
sub
pusha
mov
adc
jmp
daa
jmp
jbe
cwde
inc
pusha
pop
call
inc
in
mov
mov
(bad)
rol
mov
(bad)
xor
out
dec
mov
adc
sbb
(bad)
test
mov
aas
inc
xor
adc
outs
sub
frndint
stc
popf
es
xlat
ins
cmp
and
xor
les
std
or
clc
dec
cmps
push
or
fsubr
add
add
es
jge
push
mov
std
mov
rol
mov
and
adc
out
mov
movs
mov
int
cmp
std
rol
inc
ss
cmp
stos
bound
add
dec
adc
mov
(bad)
ds
adc
dec
sbb
cmp
xor
bsr
aas
shl
add
dec
lahf
arpl
jno
and
cmp
fdivp
or
or
ja
sti
out
adc
inc
enter
outs
xor
lea
popa
dec
lock
es
into
pop
sub
jecxz
fstp
test
cmp
xchg
rcr
mov
mov
out
cld
xor
jb
lock
popa
sbb
pop
and
lods
add
add
push
cmp
test
jns
pop
push
push
js
in
inc
fimul
retf
add
xor
(bad)
sbb
jmp
inc
xchg
sbb
and
mov
imul
sbb
pushf
mov
stos
xchg
out
mov
mov
retf
fcomip
aam
push
xor
int3
mov
cmp
pop
adc
(bad)
adc
pop
push
push
mov
les
add
xor
loopne
test
pop
jae
popa
sbb
push
cs
xor
cs
sub
mov
push
push
push
aam
shl
mov
inc
mov
std
fiadd
jmp
out
xchg
inc
push
sbb
fldenv
aad
push
inc
(bad)
mov
pop
outs
fadd
add
or
add
xchg
dec
sar
mov
rol
cmp
imul
hlt
inc
push
sbb
sub
pop
sti
es
jo
mov
push
lahf
ins
xor
in
leave
mov
pop
stos
mov
push
arpl
mov
mov
(bad)
xchg
dec
sub
sbb
ins
iret
out
popa
(bad)
fptan
test
leave
pop
adc
mov
push
aaa
iret
xchg
imul
ret
mov
jecxz
sub
in
fwait
xchg
(bad)
mov
pop
retf
mov
lods
mov
sbb
and
jle
sbb
add
mov
cmc
daa
rcr
mov
retf
jg
or
fdiv
imul
sbb
aam
in
mov
bswap
pushf
shl
into
or
mov
dec
or
pop
daa
push
scas
scas
mov
jecxz
movs
into
sub
repnz
cmp
sub
mov
popf
clc
jl
inc
call
scas
dec
dec
shr
hlt
inc
and
push
imul
dec
jmp
nop
push
stc
and
push
sub
xor
xchg
cli
imul
sub
retf
lods
leave
not
dec
xchg
jnp
push
add
fs
fild
icebp
test
mov
out
test
mov
stos
mov
jns
xor
xchg
sbb
mov
aas
movs
outs
stc
xor
call
sub
retf
sbb
imul
adc
rol
mov
cli
outs
nop
jecxz
adc
cmc
lods
mov
call
sub
sub
in
cld
mov
adc
cs
mov
stos
enter
rcr
cdq
mov
rcr
push
enter
xchg
clc
sbb
les
sbb
test
test
fs
xor
aaa
push
jbe
xchg
shr
inc
xor
or
stos
(bad)
test
dec
jne
sub
leave
and
rcr
adc
pop
push
ret
mov
stos
punpckhdq
lods
sbb
in
test
lds
fidivr
adc
fstp
sub
mov
sti
lods
retf
add
mov
xor
int
rcl
push
add
mov
jg
mov
fcomp
cli
jmp
adc
xchg
dec
cmp
xor
fdivr
xchg
js
stos
adc
into
push
rcr
adc
sbb
lock
jg
jmp
inc
mov
cmp
inc
jbe
sbb
call
jmp
rol
in
jg
mov
or
sar
shl
inc
idiv
outs
xor
addr16
jge
jae
and
cmps
test
cmp
or
in
and
shl
cmp
arpl
xchg
sub
sbb
dec
(bad)
loop
pushf
inc
popf
sub
mov
ss
(bad)
xchg
das
adc
std
mov
lahf
adc
jmp
push
mov
fistp
sub
ins
xchg
xchg
pop
jg
fcomp
inc
ins
or
icebp
fbld
hlt
mov
jmp
sar
push
gs
cld
out
movs
mov
inc
mov
pop
push
jo
adc
pop
jmp
cmp
jb
mov
xchg
mov
mov
add
movs
sub
fisttp
push
push
mov
sahf
orps
sub
fsubr
push
sbb
adc
lods
pop
mov
sub
dec
(bad)
fdivr
inc
fadd
dec
rcl
dec
cld
in
sbb
jmp
pop
and
imul
sub
mov
cmps
hlt
not
aad
scas
xchg
or
push
imul
outs
push
jno
mov
(bad)
jge
mov
mov
sub
adc
push
mov
xchg
push
jle
push
cdq
mov
dec
jne
xor
das
push
inc
popa
je
sbb
cmc
lods
and
xor
das
push
in
arpl
or
loopne
push
add
push
xchg
xchg
mov
or
xor
or
push
sbb
fld
retf
dec
clc
or
cmps
cmp
adc
add
mov
stc
cld
mov
ffreep
push
cmps
mov
add
push
repnz
add
mov
lea
imul
add
jo
mov
xchg
xchg
push
push
adc
push
inc
inc
lods
xor
loopne
pusha
cwde
xchg
stos
jmp
pop
(bad)
daa
retf
imul
inc
retf
or
test
cmp
rcl
mov
rcr
shr
mov
mov
jge
jns
leave
dec
adc
ss
pop
push
sbb
sbb
and
sub
cmp
imul
icebp
ja
enter
aam
mov
outs
or
ja
dec
jle
dec
lods
cmp
idiv
jecxz
push
dec
or
lods
or
out
scas
add
adc
lds
push
int
test
mov
xor
or
bnd
add
push
js
add
fwait
hlt
add
push
hlt
fsub
and
movs
retf
mov
les
and
iret
xchg
adc
test
mov
(bad)
call
xor
push
jno
js
movs
and
and
sbb
call
ror
mov
test
adc
out
shr
mov
ja
adc
pop
mov
and
dec
jb
fimul
dec
aam
add
out
in
push
mov
gs
mov
rcr
cmp
adc
jb
movmskps
dec
les
int
std
and
xchg
xor
test
push
(bad)
int3
movnti
lahf
ficom
mov
ins
adc
and
pushf
icebp
mov
xchg
stos
call
xchg
adc
pop
test
cmps
adc
fnsave
ss
dec
dec
dec
or
jg
scas
shl
cli
(bad)
mov
sbb
(bad)
jg
and
dec
scas
add
rol
sbb
mov
mov
js
push
sub
iret
stos
je
sbb
leave
(bad)
repz
inc
mov
enter
pop
sub
popf
xchg
jp
fs
xor
inc
mov
(bad)
scas
sti
mov
(bad)
pusha
outs
mov
push
adc
mov
inc
ror
mov
xor
cs
into
add
xor
fidiv
stos
mov
cdq
xchg
xor
push
sti
jmp
out
sub
retf
sahf
mov
mov
(bad)
jae
ret
pop
jno
dec
dec
push
fadd
int
dec
inc
daa
idiv
xor
ins
sahf
xor
pop
fsub
inc
jo
cmp
or
jmp
mov
repz
stc
(bad)
out
sbb
movs
lds
jge
fild
inc
dec
mov
mov
push
adc
fcomp
sbb
xor
add
add
push
add
jge
add
lds
lods
cmp
lea
mov
cmps
movs
test
jmp
sahf
jle
iret
pop
(bad)
stc
sbb
leave
push
sub
or
cmp
mov
jge
rcr
adc
and
shl
hlt
push
xor
nop
push
test
or
adc
stos
sub
or
jns
movs
mov
movs
pop
data16
fsubr
adc
jmp
popa
push
and
push
or
add
and
xor
call
xchg
push
jp
std
dec
inc
and
movs
and
(bad)
pop
fcomip
(bad)
xchg
sbb
add
xchg
lahf
popa
xor
imul
les
movs
cmp
lea
pop
xchg
cmp
pop
xor
push
test
or
imul
(bad)
jmp
jmp
adc
in
and
out
xor
mov
inc
xchg
mov
(bad)
sti
sar
neg
cmp
(bad)
lahf
cli
dec
js
fcmovbe
dec
xchg
xor
fstp
sub
loop
out
sbb
shl
xchg
clc
adc
dec
retf
out
jecxz
and
push
mov
sbb
sub
dec
rol
xlat
aad
sbb
and
xchg
popa
inc
or
dec
cmps
test
fistp
dec
call
pop
arpl
inc
das
mov
aas
or
xlat
jmp
pop
mov
and
aad
in
xlat
daa
shr
les
jo
jmp
cmp
cmp
xor
pop
or
xor
jb
jg
jmp
pop
repz
adc
loope
test
mov
ud0
add
jp
cwde
movs
sbb
movs
std
jnp
xor
mov
xor
mov
ins
das
push
and
or
aaa
fcmove
out
and
push
lods
adc
push
mov
aaa
jbe
test
(bad)
std
lock
or
sub
ret
inc
fs
ficomp
mov
mov
movs
leave
xor
stos
mov
rcl
mov
cmps
cmp
push
retf
idiv
or
rcl
cmps
adc
scas
jp
mov
(bad)
loope
mov
iret
stos
xor
imul
fwait
adc
cs
xor
jno
xchg
enter
sub
push
cmp
aaa
mov
inc
stos
hlt
popf
(bad)
push
and
loop
mov
leave
retf
sbb
ss
pop
ss
mov
mov
out
ror
and
mov
jbe
or
jb
rcl
push
outs
mov
and
popa
cmp
cmp
mov
pop
js
ss
xor
xor
and
jl
cmc
int3
std
(bad)
push
dec
(bad)
xchg
movs
loopne
movs
movs
cmp
fwait
lods
mov
or
adc
jge
repz
xchg
fidivr
cmp
out
add
pushf
iret
or
fcomip
shr
pop
xor
inc
movs
sub
jmp
hlt
ja
inc
sar
xchg
dec
int
pop
sbb
(bad)
int
icebp
arpl
mov
push
fild
test
jne
test
mov
xor
lods
ins
jmp
xor
inc
lea
iret
int
in
arpl
inc
ins
iret
adc
jle
nop
ins
sahf
idiv
adc
retf
add
leave
pop
mov
jle
pop
add
adc
jo
shr
ins
fldenv
add
or
idiv
pop
leave
div
push
and
xchg
ds
pusha
repz
jbe
inc
pop
cmp
or
hlt
xchg
pop
push
(bad)
and
(bad)
(bad)
repz
gs
sub
std
aas
xchg
outs
rcr
inc
js
sub
adc
mov
shl
xchg
dec
stos
sub
xchg
rol
daa
icebp
mov
dec
jno
enter
retf
(bad)
xor
push
jae
out
push
outs
or
out
cmc
lock
mov
xchg
sti
or
stos
xchg
mov
fwait
push
jp
movs
inc
cmp
aad
sbb
or
pop
jmp
adc
mov
sub
push
jl
scas
rol
(bad)
xchg
push
dec
lea
push
fst
das
xchg
(bad)
fmul
sti
scas
sub
cld
mov
xchg
inc
sbb
mov
in
pop
pop
sbb
push
jecxz
jmp
mov
lods
mov
add
mov
jmp
hlt
bound
mov
push
inc
pop
or
lods
and
jo
fstp
mov
out
push
movs
add
imul
and
inc
sbb
scas
push
data16
stos
sbb
nop
les
add
idiv
sbb
mov
(bad)
rcl
and
or
jp
aas
mov
aad
cli
mov
lds
movs
lea
mov
nop
add
ins
nop
sub
push
movs
add
jecxz
stos
push
jns
sub
icebp
xlat
arpl
jmp
mov
std
mov
loope
adc
fist
sbb
adc
fsub
repz
push
mov
out
or
(bad)
dec
(bad)
bound
mov
loope
sti
gs
pop
mov
mov
shl
and
mov
jp
xor
rol
add
int3
push
push
retf
jno
jne
adc
or
cmps
pop
add
(bad)
xchg
aas
cmps
and
adc
jmp
sbb
out
jp
test
push
(bad)
add
mov
xchg
mov
popa
and
dec
dec
add
inc
push
aad
in
xchg
pop
jae
repz
test
and
pushf
sar
mov
fsubp
and
pop
(bad)
aad
xor
sbb
inc
test
sub
pop
jge
cs
push
rcr
test
pusha
out
ins
ins
fdiv
ret
sub
xchg
aad
lock
(bad)
adc
lahf
call
jge
mov
add
add
add
adc
ja
ja
jae
cmps
pop
pop
inc
push
pop
fs
iret
out
movs
pop
das
fmul
and
and
push
dec
in
std
jnp
rol
xchg
in
fiadd
stos
leave
mov
leave
and
and
call
jo
shr
leave
fistp
data16
imul
push
add
pop
or
in
and
rcl
dec
and
jecxz
mov
mov
dec
aaa
cmp
dec
jb
lods
movs
add
add
add
fs
mov
cmc
mov
add
cmps
aas
das
push
cmp
repnz
push
out
add
out
add
pop
add
xor
stc
stc
xor
(bad)
mov
dec
aam
xor
lahf
push
cmc
sar
in
push
jge
sub
(bad)
popa
xchg
xor
xchg
ror
sub
(bad)
sub
xor
pop
adc
add
lock
fst
out
sar
mov
fistp
or
(bad)
clc
cmc
iret
jo
cmp
ds
daa
sub
adc
and
retf
push
dec
push
arpl
add
mov
fidiv
loop
cmp
in
xchg
call
or
inc
pop
shl
or
ret
sbb
ds
jno
fwait
push
and
or
movs
mov
adc
or
cmps
add
scas
add
out
test
xchg
aas
ins
push
fwait
movs
adc
(bad)
push
jecxz
sbb
or
retf
adc
dec
sbb
pop
rcr
ret
sbb
sub
and
je
out
in
mov
cmps
mov
mov
inc
(bad)
xchg
hlt
in
pop
mov
(bad)
inc
mov
movs
imul
data16
add
fisubr
loop
sbb
cmp
jg
xchg
mov
call
sbb
pop
sub
hlt
mul
mov
cs
scas
gs
icebp
loop
mov
mov
mov
jae
fwait
inc
jmp
xchg
mov
cmp
dec
icebp
inc
jl
movs
cs
xor
cmps
sbb
cmps
xchg
and
fmul
push
xchg
mov
mov
cmp
cwde
retf
div
push
ins
imul
or
xchg
add
add
add
add
ret
std
jg
cdq
daa
cdq
and
mov
mov
outs
mov
inc
stc
cmp
(bad)
rcl
push
inc
adc
xchg
jge
jmp
xchg
cmp
xchg
mov
xor
push
push
int
xchg
mov
jns
ins
movs
call
sbb
and
ret
fnstsw
cdq
and
xchg
movzx
dec
xchg
iret
sub
test
pop
loopne
lods
push
or
add
jecxz
jecxz
xchg
dec
jl
inc
push
jge
ret
dec
dec
aas
repnz
and
movs
(bad)
xchg
(bad)
pop
adc
inc
sbb
arpl
imul
dec
ret
inc
test
xlat
pop
das
test
push
int3
cmps
hlt
stos
inc
sbb
adc
(bad)
icebp
leave
(bad)
mov
js
mov
add
and
popf
and
(bad)
out
call
cmp
sbb
setae
lock
adc
mov
cld
sub
nop
pop
jns
or
mov
push
xor
jmp
das
in
(bad)
(bad)
outs
inc
xchg
mov
sub
cmp
(bad)
cmp
mov
pusha
fwait
xor
mov
mov
mov
push
jmp
out
or
jb
shr
mov
xor
nop
loop
pop
add
enter
jle
pop
or
and
xchg
mov
in
jle
sbb
rcr
ret
cld
and
addr16
(bad)
fld
sbb
ret
pop
cmp
ret
nop
add
pusha
cs
dec
add
mov
nop
xor
ss
xlat
adc
sub
in
std
xor
sub
xor
inc
push
(bad)
in
aaa
inc
add
push
or
xor
data16
fnstcw
bound
push
das
lds
xchg
mov
xchg
sahf
retf
lods
jle
adc
sar
popa
sbb
inc
movs
sahf
fwait
call
xchg
sti
pop
popa
les
ss
xchg
test
inc
add
add
add
add
movs
loop
(bad)
(bad)
pop
loope
int3
fisubr
call
adc
std
stos
push
lea
jg
cmp
inc
rcl
inc
add
es
inc
sbb
dec
cmp
sar
mov
sti
aad
sub
retf
adc
addr16
std
dec
and
lods
xchg
sub
cmp
stc
and
jp
lock
sbb
push
jecxz
(bad)
pop
cmc
lods
sub
imul
push
push
rcr
bound
fimul
jmp
fwait
cmp
test
mov
push
repz
into
inc
cmova
(bad)
int3
ss
(bad)
jns
pushf
sti
std
lods
sub
mov
lock
aas
das
cwde
sub
stc
mov
xor
push
cmp
pop
sbb
shl
cmp
outs
es
sbb
sub
push
fldcw
dec
sbb
mov
loop
xlat
xor
push
jmp
lea
xor
in
push
and
or
movs
or
gs
addr16
xchg
js
xlat
rcr
stc
and
mov
fmul
push
popf
outs
shr
mov
lods
(bad)
dec
mov
cmp
inc
test
imul
int3
aaa
pushf
or
inc
stc
js
imul
sbb
inc
add
add
sbb
mov
fidivr
or
adc
stos
mov
stc
popa
jns
shr
cmps
out
out
sub
mov
push
(bad)
shr
jp
daa
retf
inc
aam
in
sbb
xchg
hlt
add
push
mov
mov
mov
stos
jg
push
add
out
out
scas
call
pop
or
into
jb
cmp
push
fwait
adc
jnp
je
inc
loop
jbe
lods
movs
(bad)
jae
cdq
mov
pop
jle
or
or
mov
int3
mov
push
mov
inc
dec
push
aad
lock
and
out
mov
ror
xchg
shr
inc
xchg
fst
inc
fs
or
out
jne
fprem
call
adc
stos
pop
scas
xchg
(bad)
(bad)
rcr
je
mov
xchg
fstp
inc
out
test
clc
adc
and
add
jmp
xchg
fisub
das
das
ret
adc
(bad)
xchg
xor
lahf
stos
xlat
in
xchg
push
ins
cli
ficom
hlt
dec
dec
sub
mov
jp
mul
inc
pop
popa
repz
int3
test
out
dec
or
loope
pop
popf
add
loope
xlat
and
ss
dec
mov
das
sti
pushf
or
pop
inc
mov
mov
mov
dec
xchg
fisttp
cmp
pop
pop
ja
loop
cmp
addr16
inc
xchg
jne
pop
jo
or
(bad)
loopne
cdq
ins
xchg
xchg
dec
lds
mov
idiv
mov
icebp
test
and
aad
int
sar
mov
gs
sub
fstp
mov
add
repz
add
inc
pop
mov
test
pop
inc
pop
test
jne
out
jnp
push
outs
scas
aaa
aam
add
adc
adc
xchg
inc
pop
out
xchg
int
aam
xchg
inc
retf
xchg
fiadd
leavew
xchg
das
ss
in
test
cmp
stos
jmp
dec
out
ret
call
fdivr
jg
fbld
pop
div
arpl
jbe
mov
mov
dec
xlat
rol
in
mov
adc
xchg
sar
pop
icebp
es
and
add
mov
lods
jmp
aaa
xor
fsub
aam
and
(bad)
out
mov
test
push
js
xor
in
test
int
xchg
mov
leave
mov
leave
lock
pop
call
xor
sub
in
sbb
sbb
and
xrelease
dec
(bad)
sbb
jb
ins
push
xor
add
jp
cmps
popf
jb
in
or
icebp
je
inc
cmps
mov
out
ss
xor
fcom
mov
push
fidivr
sbb
pop
jnp
or
add
scas
cmp
dec
mov
test
imul
aas
js
int3
dec
cli
(bad)
lds
mov
xor
test
lock
dec
movs
add
jne
inc
scas
xor
xor
mov
imul
dec
cs
je
dec
xor
fld
xchg
not
pop
ret
jns
out
popf
test
jb
jmp
fwait
data16
xor
stos
inc
jne
(bad)
sahf
mov
push
mov
cmps
out
sub
inc
pop
add
scas
mov
push
ret
push
mov
pop
xor
jns
mov
xchg
xlat
push
cmp
out
fwait
idiv
mov
loope
aas
pop
fistp
cmp
cmp
or
dec
ss
fistp
ja
pop
sub
jmp
mov
call
xor
dec
push
xlat
mov
jo
test
imul
mov
fcmovb
(bad)
sub
mov
jns
xor
inc
shl
adc
les
push
push
push
fldenv
out
xchg
cli
rol
pushf
stos
dec
mov
pop
mov
dec
fcom
dec
ficomp
call
xchg
jbe
dec
dec
xor
loopne
jmp
in
xor
icebp
add
sub
out
jmp
aas
sub
dec
add
neg
cli
mov
pop
mov
xchg
and
aaa
test
fcom
fwait
ss
xor
xor
jl
in
outs
cli
dec
cdq
push
pop
xor
popf
xor
adc
mov
jbe
fwait
shl
xor
out
ss
push
int3
inc
stos
cmp
push
mov
call
in
cmps
push
js
frstor
cmp
pop
mov
dec
popa
repnz
les
ret
or
popf
mov
int3
inc
les
xchg
aad
movs
add
ss
dec
xchg
int
lods
jbe
jp
push
daa
dec
outs
cmp
mov
xlat
cmps
cli
bound
inc
ret
sub
scas
jmp
ins
sbb
mov
int3
sub
inc
add
push
lds
daa
mov
pop
cmp
icebp
lds
cs
arpl
fild
fdiv
sbb
cmp
jo
test
jg
jmp
cmp
dec
mov
and
(bad)
rol
sub
iret
das
mov
and
lahf
xchg
ror
lods
fcom
sub
inc
pop
out
out
(bad)
(bad)
jge
inc
fdiv
ins
lds
lds
fxch
stc
adc
sbb
ror
dec
stos
sub
cmp
in
mov
pop
imul
xchg
fisttp
and
pop
dec
outs
retf
test
lods
sub
les
out
aaa
iret
add
inc
pop
cli
mov
cdq
test
lea
in
lea
xor
fiadd
int3
(bad)
push
pop
mov
fidivr
sbb
adc
push
jg
xor
mov
stos
adc
jle
in
lods
lods
or
fild
in
test
inc
push
mov
sbb
xor
push
sbb
mov
xlat
fild
and
push
test
or
lods
jge
not
push
push
cmp
push
push
aaa
shr
mov
sub
daa
repz
mov
iret
out
or
dec
mov
data16
xchg
pop
pop
mov
inc
fcmovbe
aaa
xchg
xor
inc
into
fldln2
fisubr
aaa
fcmove
jl
loop
mov
in
adc
or
sub
or
mov
cwde
mov
adc
es
lahf
jb
out
int3
sub
mov
lea
mov
and
adc
icebp
cmps
loopne
dec
inc
pop
inc
push
loope
jo
push
pop
jae
enter
lods
(bad)
xchg
gs
movaps
hlt
xchg
push
pop
jne
adc
and
and
jo
retf
xor
mov
outs
out
in
ret
(bad)
jge
mov
(bad)
imul
inc
shl
push
ja
or
in
shl
lods
mov
pop
or
mov
mov
or
push
jns
dec
push
cmp
fdivr
jbe
das
std
mov
outs
out
mov
in
movs
movs
(bad)
add
add
xor
add
add
add
add
pushf
xor
test
jle
in
(bad)
xchg
lock
mov
mov
mov
rcr
fiadd
mov
sbb
xor
push
int
dec
adc
ror
and
cmps
popf
into
pop
out
int3
cli
movs
mov
jl
(bad)
out
sub
hlt
push
aam
in
dec
push
adc
hlt
nop
enter
icebp
adc
mov
and
outs
or
dec
mov
cmp
dec
and
mov
jbe
stc
push
push
jo
xor
adc
jp
(bad)
push
push
fstp
xchg
jbe
mov
retf
mov
inc
fs
arpl
mov
cmps
fcomp
xor
xor
leave
sub
sub
and
jnp
mov
rol
jnp
xchg
pop
mov
jno
inc
ins
inc
mov
add
js
pop
jle
es
sbb
pop
mov
ins
sub
out
sar
clc
lock
scas
mov
sub
cmp
dec
lea
clc
pop
aaa
cwde
push
xchg
sub
push
cs
mov
inc
out
test
pop
mov
in
add
sbb
mov
inc
or
(bad)
ja
sbb
ret
imul
cmp
push
fs
sbb
sub
pop
outs
shl
popa
jno
add
sub
data16
dec
inc
ror
retf
sbb
int3
gs
or
lods
ret
dec
push
rcl
lock
fsubr
scas
xor
jnp
jmp
cmp
jmp
or
loope
and
test
pop
cmp
push
jp
sbb
mov
jp
dec
add
jnp
leave
in
cmps
test
pop
cmp
and
popf
inc
add
pop
mov
or
mov
adc
mov
paddd
(bad)
cmp
sbb
clc
bt
fdivrp
(bad)
je
adc
sub
mov
push
and
call
ins
add
movs
push
mov
jle
sbb
in
mov
data16
js
adc
dec
jmp
xlat
dec
xor
inc
add
fstp
outs
or
sbb
ins
and
cwde
(bad)
shl
inc
std
push
popf
jmp
pop
add
xor
add
add
fucomp
sbb
(bad)
loope
rol
call
test
sbb
out
icebp
dec
cmc
retf
xchg
dec
cmps
add
icebp
add
inc
pushf
push
push
fcomp
lahf
push
pushf
and
push
dec
push
push
inc
pop
adc
mov
xchg
inc
test
clc
pop
ja
push
jns
shr
push
mov
xor
out
adc
mov
dec
test
push
inc
sub
(bad)
push
movs
repz
(bad)
stos
jns
sub
pop
mov
and
fwait
cdq
mov
mov
xchg
pop
lock
iret
popf
sub
(bad)
pushf
js
out
or
push
(bad)
mov
cmps
pop
(bad)
pop
jne
rcl
jb
shl
inc
pop
push
push
xor
fs
push
mov
jl
in
push
movs
xor
pop
jecxz
mov
mov
(bad)
lea
or
pop
mov
mov
lahf
scas
cmp
ret
movs
jecxz
(bad)
out
loope
inc
xchg
or
mov
push
iret
sbb
dec
adc
fld
int
call
adc
inc
imul
dec
mov
lea
retf
fild
or
push
xor
pop
sar
mov
push
adc
fist
cmp
pop
sbb
add
mov
mov
lds
aam
out
push
xchg
iret
jbe
mov
lahf
pop
adc
adc
out
rol
aas
sub
and
bound
add
xor
mov
icebp
xchg
push
lds
xor
pop
fwait
pop
popf
inc
inc
push
sub
mov
cmp
call
jb
mov
pop
clc
mov
add
jmp
fsubr
or
cmp
shl
add
leave
dec
mov
popf
xor
xor
mov
jnp
pop
lods
mov
div
mov
push
mov
sar
cmp
rcl
sub
jle
cmc
push
gs
cli
int
cdq
cmp
fst
stos
inc
or
cmp
and
ror
outs
mov
and
popf
out
inc
mov
movs
out
pop
ja
and
sub
jge
pop
pop
cmp
out
rcl
adc
loopne
pop
xor
pop
cwde
pop
mov
xchg
sbb
movs
jns
stc
xchg
mov
gs
test
test
inc
ds
cld
das
adc
or
xlat
frstor
sbb
(bad)
cmp
cmp
imul
lock
mov
add
lahf
or
mov
add
pop
leave
mov
and
dec
test
sar
jecxz
and
mov
in
mov
sete
loope
test
das
hlt
movs
loope
clc
out
imul
lds
ficom
jge
rcr
push
mov
sub
out
in
sub
cmps
dec
sbb
je
mov
sub
sbb
jns
cmps
mov
int
mov
enter
xchg
push
xor
dec
xor
push
inc
jecxz
daa
or
xchg
dec
cmps
xchg
cmp
and
ins
in
sub
jo
push
xor
int
iret
sbb
mov
or
in
xor
inc
in
loopne
gs
inc
inc
mov
dec
xor
cli
popf
pusha
jns
add
jge
pop
xchg
sub
inc
sbb
dec
mov
aas
retf
int
pop
(bad)
mov
es
or
cmps
fld
in
pushw
adc
push
pop
clc
sub
xchg
(bad)
push
push
aaa
mov
(bad)
and
pop
pop
aad
add
push
sub
out
ret
test
outs
pushf
je
fadd
mov
jp
test
in
mov
jbe
sbb
shl
leave
mov
mov
dec
mov
xchg
ret
mov
(bad)
ja
dec
dec
mov
push
in
adc
push
jecxz
repnz
lods
jns
ss
les
sti
in
pop
out
outs
xor
pop
pop
inc
mov
ror
mov
mov
loope
adc
push
sbb
mov
fild
mov
push
out
sbb
dec
ss
ror
xor
adc
xor
pop
adc
jg
mov
cmp
mov
icebp
ds
xchg
sbb
jno
pop
dec
fld
mov
cs
imul
jmp
jmp
ror
fiadd
mov
or
xchg
imul
mov
fsub
lea
xchg
mov
cmps
and
pop
and
out
ja
jl
lods
inc
cli
push
ret
movs
cdq
punpckhdq
pop
cmp
push
mov
(bad)
mov
mov
xor
jae
fdivr
adc
shr
ja
ins
sub
test
(bad)
call
popa
popa
adc
dec
retf
ss
std
cmc
xchg
push
sbb
test
add
mov
and
xor
fistp
test
cdq
mov
fdiv
mov
or
iret
out
sahf
sbb
loopne
fsubr
hlt
bound
loope
jg
sub
ds
push
push
es
fst
mov
xlat
cld
test
pop
(bad)
sbb
pop
ror
in
imul
xchg
mov
mov
sbb
add
sub
push
cmps
mov
xchg
scas
nop
mov
dec
mov
or
sub
inc
lea
push
fs
jae
xlat
push
shr
out
(bad)
jno
call
xchg
je
mov
test
(bad)
outs
fs
jle
pop
adc
xchg
jb
pop
add
jg
dec
das
mov
adc
clc
pop
jp
fsub
ja
lock
push
xchg
xchg
pop
dec
adc
cwde
call
inc
fsub
into
xchg
inc
in
mov
add
int3
add
add
cwde
call
or
idiv
mov
lea
mov
and
adc
hlt
adc
ret
xlat
adc
inc
out
xor
mov
or
cmc
fucomip
mov
sbb
add
mov
push
adc
push
aas
inc
aam
addr16
fstp
out
sub
in
ins
lahf
pop
aaa
cmp
icebp
clc
xchg
out
leave
xor
cli
mov
bound
mov
or
mov
pop
push
les
ins
cs
pop
in
add
sbb
frstor
jge
sub
or
daa
aaa
imul
mov
xor
sub
xor
outs
int3
jmp
pop
cdq
aas
xchg
(bad)
gs
jno
push
loop
push
ds
imul
sub
lds
pop
xchg
push
jb
retf
mov
pop
jecxz
in
add
sti
call
mov
sub
ret
shr
call
cmp
pop
retf
aas
inc
rcl
outs
sbb
enter
add
cld
jnp
movs
ficomp
(bad)
mov
mov
mov
xor
pop
or
jle
retf
push
stc
loopne
out
cdq
add
add
cld
inc
enter
fisttp
jg
and
nop
cmp
cmps
inc
pop
xchg
mov
ficomp
fs
mov
fld
out
out
repz
inc
mov
out
xor
(bad)
int3
xchg
(bad)
jnp
sub
add
mov
pop
fdivrp
rcr
cmp
and
pop
in
(bad)
jnp
aam
fsub
mov
fidivr
mov
jmp
out
mov
loopne
fimul
cs
nop
and
mov
jecxz
sbb
ret
mov
cmp
push
and
mov
sub
sti
xchg
sbb
je
pop
pop
jns
xor
xchg
mov
xor
jb
std
push
aaa
icebp
inc
push
add
xor
lods
mov
sbb
stc
out
es
shr
sbb
in
mov
jmp
push
aas
gs
imul
int3
pop
mov
cmps
add
mov
sub
mov
inc
retf
add
fsub
sbb
xchg
inc
in
int
push
sar
in
(bad)
jbe
push
icebp
mov
fcom
clc
test
out
cmp
pop
test
pop
stos
lock
push
sub
inc
sbb
xor
jge
test
ja
out
data16
mov
data16
enter
out
aaa
sub
repnz
clc
sbb
gs
out
es
sub
cmc
adc
aaa
scas
imul
sbb
pop
pushf
ins
mov
mov
push
xchg
aad
in
push
test
xchg
pop
adc
ja
loopne
mov
pop
dec
sbb
push
inc
lods
mov
pop
jns
out
xchg
in
jns
pop
lahf
mov
or
cli
jae
mov
daa
sbb
in
repnz
ss
or
push
mov
push
nop
(bad)
jno
sti
out
movs
ror
add
sbb
mov
mov
mov
imul
outs
push
loopne
sub
ror
bound
icebp
(bad)
retf
aad
inc
shr
fistp
jnp
or
outs
add
xor
imul
gs
inc
cmp
fisubr
xchg
and
xchg
mov
sbb
test
mov
dec
push
pop
sbb
sub
add
add
add
cmps
jg
popf
(bad)
xor
outs
sbb
cmp
lods
dec
popa
(bad)
les
shl
dec
popf
es
xchg
ret
push
sti
mov
dec
sbb
sub
ds
fs
mov
mov
push
dec
sub
pop
ss
push
mov
movs
xor
ror
adc
sub
pusha
pusha
lock
add
dec
out
aaa
ins
inc
push
xchg
push
push
xchg
icebp
pop
imul
jmp
loopne
js
out
pop
mov
mov
pop
sbb
pop
test
lds
inc
lock
push
and
pop
ret
fldenv
sub
clc
test
mov
fwait
scas
add
inc
xlat
sub
out
jg
cmp
int3
rcl
xor
mov
and
pop
sub
fst
mov
inc
or
les
hlt
pop
call
xchg
pop
jmp
(bad)
daa
ret
ret
ins
add
sbb
xchg
push
adc
adc
call
cld
mov
inc
outs
(bad)
xor
ror
aaa
dec
(bad)
mov
into
jle
pop
jecxz
and
in
push
stos
adc
mov
popa
inc
js
inc
movs
jbe
cmp
pop
aas
and
out
adc
cmps
std
mov
and
add
mov
mov
jge
sbb
mov
jae
or
enter
(bad)
push
jo
xchg
fild
(bad)
test
gs
movs
cmps
or
lds
jo
and
xchg
push
add
fs
mov
xchg
std
into
aad
js
and
aaa
cmc
sbb
mov
cmps
ret
sub
daa
adc
aas
dec
inc
pop
inc
test
retf
cdq
jb
std
icebp
in
pop
mov
ja
mov
push
xchg
dec
(bad)
in
pop
inc
out
inc
xlat
sub
dec
push
fsubr
adc
cmc
sub
add
add
pop
add
or
shl
fsub
int
cmp
xchg
dec
cmc
lods
push
dec
shr
test
fsub
xor
mov
sbb
inc
out
mov
xchg
ins
xchg
sbb
repz
sbb
jp
ss
aam
cmp
(bad)
jmp
aaa
mov
xor
sbb
cmp
mov
mov
mov
dec
pop
mov
fnstcw
stos
adc
push
xor
mov
add
fisttp
outs
cmps
or
xchg
fs
jo
mov
test
hlt
lea
xchg
iret
int3
pop
pop
out
fst
xor
or
dec
in
lods
dec
mov
xchg
add
js
jmp
xor
push
repz
fcom
push
out
enter
scas
fdiv
js
les
dec
shl
push
sub
scas
xchg
aam
lods
sbb
into
outs
push
xor
jbe
pop
pushf
add
xor
pop
xchg
movs
pushf
out
pusha
call
mov
ins
nop
ror
lahf
(bad)
mov
inc
retf
adc
or
imul
push
push
fcom
xor
jae
imul
mov
fcomi
dec
sar
rcl
jbe
mov
and
rcl
pop
add
mov
int3
inc
lahf
aas
cmp
lahf
inc
mov
movs
xchg
out
jbe
jle
cmp
lods
adc
in
jmp
popa
push
mov
sbb
sub
ret
or
mov
add
fisttp
add
pop
inc
pop
sub
cmp
dec
mov
int
clc
in
icebp
sahf
loope
movs
call
sbb
inc
inc
int3
frstpm(287
xchg
adc
xchg
out
push
lea
pop
dec
cmp
dec
mov
jle
mov
out
pop
mov
mov
sub
fwait
cmps
inc
jnp
enter
jnp
dec
mov
inc
mov
enter
pop
iret
in
xor
aad
pop
adc
xor
cmp
aaa
cld
mov
in
cmp
lahf
mov
lock
or
ja
sahf
pop
fild
jl
xor
cs
fild
mov
lods
mov
dec
ret
cmps
sub
daa
addr16
sbb
pop
scas
or
iret
xchg
pop
dec
ds
hlt
push
sub
inc
arpl
mov
dec
mov
push
mov
sub
xor
jge
push
jae
and
or
cs
cmp
sbb
push
and
xchg
sti
mov
jo
cmc
mov
xor
jno
loop
fcmovbe
pop
imul
dec
stos
pop
xor
or
iret
jg
aas
mov
pop
cmp
mov
push
inc
int
(bad)
cli
out
jmp
xchg
inc
dec
mov
push
and
push
(bad)
mov
clc
xor
mov
pop
rcr
cld
mov
xor
pop
pop
fidivr
outs
mov
push
inc
loope
in
jne
sub
(bad)
push
and
dec
fst
push
das
mov
xor
call
cdq
icebp
sahf
out
add
ret
scas
and
enter
sbb
ss
dec
pop
imul
ja
test
adc
stos
outs
mov
retf
out
jmp
popa
mov
xchg
pusha
pop
inc
add
imul
inc
xchg
xchg
push
dec
int
jns
mov
mov
sub
mov
mov
sub
mul
dec
call
in
cwde
js
clc
cmp
pop
test
xchg
pop
ret
lds
xchg
mov
jg
out
rol
dec
(bad)
mov
dec
arpl
adc
inc
sar
jb
dec
sti
stos
pop
or
sahf
jecxz
gs
mov
adc
ds
pop
push
lahf
dec
sar
inc
and
fmul
(bad)
xlat
sub
cmc
das
sbb
shl
in
int
adc
jno
push
push
lahf
test
mov
add
cmp
out
outs
rcl
sbb
mov
dec
push
(bad)
and
sub
jo
lahf
ds
cmp
retf
pop
ret
gs
loope
jnp
sub
mov
data16
or
movs
movs
sbb
adc
pop
test
jmp
frstor
arpl
dec
cmp
push
aam
stos
cld
and
out
addr16
or
push
fmul
jne
or
sub
and
ds
in
hlt
out
cmps
inc
pop
mov
xor
push
daa
xchg
inc
stos
xchg
icebp
jp
pop
and
loopne
das
and
push
jmp
mov
mov
out
xchg
inc
daa
cli
mov
push
nop
sbb
sahf
xchg
push
push
aam
xor
neg
js
xor
jmp
or
adc
jo
xchg
std
dec
mov
pop
xchg
retf
dec
mov
outs
shl
pop
cwde
test
rol
and
or
leave
pop
push
hlt
cmp
scas
mov
dec
pop
add
cmp
lods
mov
sbb
popa
and
pop
push
push
inc
jns
and
je
mov
sbb
jl
push
or
std
repnz
lock
mov
xchg
loop
sbb
inc
sbb
push
repnz
ror
(bad)
std
fcom
cmp
and
mov
ror
and
in
mov
ds
push
lods
xor
(bad)
and
xchg
fisubr
pop
xchg
sbb
add
or
dec
fwait
es
mov
jo
xor
test
dec
(bad)
inc
aas
mov
cmps
fst
mov
ficom
dec
sub
outs
mov
sub
fild
out
or
repnz
pop
mov
test
out
fidivr
movs
out
and
cmp
repz
loop
loopne
repz
ins
mov
mov
pop
fnstcw
and
jno
scas
jae
xchg
jae
stc
or
retf
jne
das
aaa
pop
mov
and
loope
mov
jl
vmaxsd
ret
hlt
aaa
add
cmp
fnstsw
rcr
sub
push
pushf
cmp
movs
and
fidiv
fwait
gs
out
aam
inc
and
in
mov
out
inc
inc
and
cmp
mov
mov
popf
jmp
mov
cmp
dec
inc
push
add
add
add
add
add
adc
std
(bad)
bound
adc
adc
and
fiadd
loope
lds
lea
and
xchg
jp
and
popf
fiadd
sar
xor
cld
sti
(bad)
lods
adc
xchg
fstp
inc
and
ins
jno
xchg
enter
push
cmp
xor
arpl
mov
sub
add
stos
sbb
xchg
adc
arpl
jbe
adc
leave
mov
into
push
aam
fstp
lahf
pop
(bad)
mov
xchg
push
shl
iret
iret
in
push
icebp
stos
ja
xchg
jne
mov
push
rol
imul
xchg
cdq
or
pop
(bad)
mov
retf
arpl
popf
ret
jae
lock
push
cmps
mov
pop
jl
and
mov
loope
rcl
jg
lock
pop
pop
mov
push
daa
dec
and
add
call
mov
dec
sbb
inc
movs
sbb
ins
mov
test
out
xor
addr16
cmp
call
in
out
xchg
push
in
xor
aaa
repz
push
(bad)
ffree
fsubr
xor
adc
sbb
aas
xor
fild
test
jge
jnp
mov
iret
stos
mov
call
or
je
push
clc
xchg
(bad)
xor
shl
scas
sbb
push
stos
mul
call
pmulhw
push
lds
iret
and
jbe
scas
fld
stos
mov
dec
pop
out
gs
scas
lods
iret
popf
push
jecxz
mov
mov
cdq
std
or
or
xor
aad
stos
cli
test
call
pushf
test
stos
pop
(bad)
cmp
dec
in
aaa
lods
add
cmps
mov
ja
mov
jae
push
ja
mov
test
out
sub
outs
cs
cwde
fild
dec
call
fidivr
cmp
mov
sti
in
ins
test
ins
xlat
rcr
pop
inc
ret
sbb
xor
inc
ffree
clc
xchg
pop
pop
add
scas
sub
data16
dec
mov
or
cdq
mov
lods
sub
cwde
lahf
loope
add
and
inc
aad
test
mov
out
imul
jo
cmp
mov
xchg
dec
or
leave
dec
repnz
push
push
or
dec
mov
jnp
ds
mov
sti
or
pop
sub
push
fisub
mov
sbb
daa
repnz
fiadd
sub
pusha
movshdup
loopne
test
mov
outs
and
into
int3
popf
sub
pop
jp
mov
(bad)
pop
je
lock
inc
stos
cmps
dec
leave
jbe
xchg
mov
ror
in
pop
push
and
bound
stc
mov
clc
adc
in
test
dec
or
xor
aad
dec
inc
int
fcmovu
outs
dec
push
push
je
adc
ds
mov
pop
in
cmp
bound
std
cmp
cmp
or
pop
jae
inc
or
sub
jg
pop
dec
dec
lods
shl
daa
mov
and
and
fmul
(bad)
loop
into
sbb
test
inc
dec
mov
cli
sahf
ds
xchg
adc
or
mov
fmul
mov
mov
enter
outs
pop
icebp
imul
mov
movs
pop
(bad)
and
inc
add
lahf
es
push
cmp
jo
lds
or
and
cmp
call
jnp
ins
daa
xor
jge
bnd
addr16
aas
xor
sti
xchg
out
jne
or
out
dec
add
cmp
mov
xchg
stc
lods
cld
mov
shl
nop
mov
pop
adc
in
push
mov
imul
jge
js
jle
add
push
mov
mov
mov
dec
sbb
test
mov
cmp
xchg
sub
(bad)
mov
or
mov
ja
and
mov
fimul
pop
jae
in
and
jmp
pop
(bad)
lock
call
sub
in
push
cmc
(bad)
jbe
pop
dec
pop
sub
jp
inc
xchg
adc
repz
sbb
call
add
scas
mov
add
fs
call
cmp
aam
pop
adc
push
mov
(bad)
fist
fwait
jo
push
jnp
sbb
jnp
hlt
or
sbb
adc
xor
pusha
rcl
cmp
aad
dec
push
mov
dec
xchg
pusha
add
rol
add
nop
or
add
inc
loop
jnp
inc
mov
jecxz
jle
mov
jmp
call
mov
dec
mov
mov
or
pop
int3
cli
inc
xchg
mov
add
test
outs
jne
(bad)
jmp
int
pusha
stos
dec
pop
jnp
loop
sbb
push
pop
push
mov
inc
jbe
fidivr
push
sbb
and
(bad)
aad
jae
add
movs
jb
mov
jbe
ffreep
nop
mov
cli
(bad)
push
mov
loopne
lods
add
lock
pop
mov
(bad)
fld
imul
fmul
jb
xchg
mov
das
call
push
cmp
xor
add
shr
and
or
sbb
fstp
js
int3
or
push
outs
and
cwde
mov
add
(bad)
jmp
jecxz
sti
push
sahf
retf
mov
mov
add
into
addr16
leave
push
outs
xor
or
pop
xchg
loopne
(bad)
xchg
addr16
dec
dec
push
add
and
adc
cmp
inc
das
pop
cmc
pop
gs
push
inc
dec
push
push
mov
scas
xor
ficom
sub
ret
inc
call
popf
ret
stc
jecxz
mov
mov
mov
fwait
xchg
add
push
sti
jnp
stos
ret
call
xchg
lods
je
je
dec
mov
push
hlt
cs
test
pop
pop
mov
clc
jl
ja
sub
dec
jne
leave
pop
int3
fimul
and
dec
loop
jg
sahf
mov
pop
inc
mov
sbb
cld
icebp
sub
mov
stos
mov
ret
push
jge
xchg
xor
stc
inc
rol
mov
xchg
ret
fidivr
xchg
je
pop
dec
pop
fst
and
fisttp
xor
inc
cmp
js
sbb
and
sub
cmp
loop
sub
xchg
mov
sub
dec
inc
mov
pop
into
xchg
mov
cmps
jle
mov
fsub
sar
mov
jmp
pop
inc
xchg
add
cs
cs
icebp
iret
cmps
repz
fild
fld
and
mov
lock
mov
inc
sub
mov
mov
sub
rcl
lock
sub
mov
pop
fisttp
push
inc
pop
push
mov
xor
push
aad
ret
pop
push
loopne
push
(bad)
ret
hlt
push
into
movs
xor
pop
dec
fwait
js
sub
mov
call
repz
pop
adc
ja
push
mov
add
mov
mov
add
cmp
adc
je
mov
lods
shl
call
cli
rcr
mov
jbe
shl
or
call
xor
ins
loop
int
scas
push
mov
aam
mov
mov
mov
outs
ret
ja
mov
call
push
sti
push
fs
add
ins
movs
mov
enter
dec
add
xor
jns
push
shl
mov
jno
stc
push
adc
je
mov
outs
out
imul
or
popf
cmp
mov
mov
sbb
push
mov
mov
and
jge
mov
mov
or
or
sbb
mov
pop
xor
xchg
pushf
jp
xchg
sbb
(bad)
sbb
or
iret
cmp
xchg
cdq
dec
jae
mov
fwait
inc
push
mov
into
ror
add
mov
dec
cmp
sbb
(bad)
into
or
in
imul
aaa
cs
xchg
pop
stos
push
jp
cmp
sub
jmp
mov
cmp
mov
nop
inc
sbb
ins
xchg
neg
lea
jmp
shr
push
ja
shl
mov
addr16
ret
aad
pushf
mov
pop
sub
dec
sub
mov
cmp
xchg
cmps
loopne
sub
in
js
movs
xchg
jnp
pop
sub
sub
test
add
dec
push
add
xor
push
test
(bad)
std
out
int
imul
cmc
sbb
cmp
inc
xor
inc
adc
fsubr
popf
dec
movs
xchg
sbb
inc
fdiv
jns
sbb
pop
ss
jmp
dec
adc
mov
mov
jns
aad
sbb
dec
ror
push
mov
sar
add
and
or
cmp
aad
scas
es
movs
nop
adc
int3
aad
or
ficomp
push
lahf
bound
aad
xor
aas
dec
cmp
jle
sub
in
rcl
outs
movs
and
pop
lds
jp
adc
mov
syscall
fwait
and
mov
or
icebp
gs
fld
add
mov
mov
xor
popf
xchg
fwait
jne
jle
retf
(bad)
sub
xchg
imul
sbb
call
scas
repz
xor
aam
out
cld
push
inc
dec
outs
je
mov
dec
jecxz
sahf
jg
pop
pop
ret
ins
mov
xor
push
dec
push
xlat
fadd
aaa
mov
or
or
jbe
loope
mov
in
pop
fisttp
jle
icebp
addr16
cli
imul
ret
adc
cmp
bound
mov
stc
call
xor
outs
xor
push
mov
mov
outs
mov
movs
pop
in
cmps
pop
ds
mov
dec
ss
pop
repnz
arpl
out
call
fs
imul
cmp
ficomp
scas
jecxz
and
xor
xchg
pop
mov
movs
push
xchg
dec
adc
or
jg
shl
sbb
iret
mov
sbb
mov
pop
inc
mov
adc
mov
fimul
xchg
mov
adc
dec
xchg
add
adc
jle
xchg
(bad)
out
aad
enter
cmp
inc
dec
adc
sbb
mov
fstp
lock
out
mov
sub
sub
and
pop
pusha
sub
xor
mov
push
mov
(bad)
cmp
push
pusha
out
frstor
xchg
in
dec
clc
push
int3
rcl
and
mov
ja
cmps
div
lahf
jg
out
add
pop
imul
xchg
popf
pop
leave
loope
jp
or
inc
fwait
mov
in
movs
call
lahf
jp
daa
sub
xchg
std
add
inc
adc
ds
inc
imul
xchg
mov
retf
push
inc
scas
ror
xor
and
mov
in
cmp
jo
stos
mov
cmp
mov
mov
sbb
sbb
fcom
and
push
and
repnz
push
shl
cld
jne
sub
mov
data16
sti
ror
dec
(bad)
push
mov
pop
jnp
sbb
add
xor
xchg
mov
iret
and
adc
mov
inc
pusha
inc
test
jns
and
pushf
test
add
add
add
add
test
inc
xor
and
in
fadd
sbb
fcmovb
retf
mov
cmc
imul
jl
cmp
fstp
mov
in
xchg
fldenv
xchg
jnp
sbb
out
call
mov
ret
mov
xor
jl
outs
adc
mov
push
fwait
cmp
fisttp
jecxz
push
movs
popf
pop
data16
clc
cdq
out
mov
aaa
pop
or
movs
imul
in
jb
outs
bound
mov
lods
jecxz
shr
xchg
call
mov
push
aaa
cmp
cli
dec
or
pop
add
sahf
data16
mov
inc
lds
iret
cmp
adc
mov
mov
ret
adc
pop
fnstcw
cli
push
and
push
nop
and
jge
ret
push
mov
outs
mov
ins
ret
test
imul
lods
sti
fadd
fld
mov
sub
adc
xor
sbb
add
dec
leave
lea
ins
jle
xlat
mov
and
mov
inc
mov
popf
iret
fisttp
dec
aam
imul
xchg
ret
sbb
xchg
mov
scas
cmp
or
les
pop
inc
adc
cmp
shl
mov
push
mov
mov
cmp
repz
mov
dec
sti
jge
push
ret
outs
dec
jbe
cmps
in
inc
std
dec
ins
dec
mov
outs
in
fmulp
data16
mov
fidiv
out
cs
xor
xchg
data16
mov
add
xor
inc
dec
xchg
(bad)
lods
mov
jp
mov
pop
call
gs
pop
mov
daa
(bad)
adc
inc
inc
jbe
xor
outs
pop
daa
and
ss
push
mov
por
popa
push
icebp
or
inc
(bad)
leave
push
shr
stos
jno
lods
jmp
aaa
popa
add
int
mov
rol
push
fisttp
mov
jmp
jmp
test
adc
adc
push
mov
test
rcl
ins
cmp
dec
fbstp
imul
inc
mov
jne
shl
das
lahf
adc
sbb
jb
sub
jbe
ficom
pop
iret
and
push
cmp
adc
fucomi
fs
mov
cmp
fld
mov
imul
ss
push
inc
push
ret
lea
or
jge
lock
push
inc
fld
push
(bad)
ret
xchg
jmp
xchg
push
loope
jne
imul
inc
pushf
xchg
inc
dec
pusha
jge
in
adc
mov
and
mov
cli
cmp
pop
nop
and
sbb
inc
cdq
or
pop
mul
out
fdiv
mov
xchg
mov
jmp
mov
arpl
push
xor
cmps
cwde
mov
arpl
mov
es
aam
mov
push
push
pop
icebp
cmps
and
add
mov
imul
sbb
std
push
lods
adc
call
in
push
sbb
dec
xchg
retf
bound
add
xchg
mov
andps
rcr
repnz
sbb
aas
cmp
repnz
jl
pop
dec
fidiv
test
push
js
inc
cmp
ins
push
icebp
or
dec
push
sbb
daa
fist
fdivrp
or
je
mov
(bad)
and
or
sti
jae
loopne
adc
pop
pop
call
mov
mov
pop
cld
ret
leave
aad
fcomp
sbb
dec
xlat
ja
mov
mov
ds
mov
mov
aas
cmp
dec
arpl
mov
xchg
outs
(bad)
dec
call
in
jp
test
in
adc
js
sub
aad
dec
ror
pop
ds
cli
vpperm
adc
hlt
daa
stc
or
add
in
pop
mov
scas
mov
test
jmp
inc
pop
loopne
fisttp
sub
and
inc
mov
mov
push
inc
scas
pop
js
mov
jmp
idiv
lds
xor
fcomp
fwait
mov
mov
test
sub
popa
jg
pop
jb
adc
repz
push
fsubr
ja
outs
xlat
enter
repnz
xlat
jmp
es
fisttp
push
cmps
loopne
test
clc
push
add
ret
add
xchg
(bad)
cld
or
fwait
dec
(bad)
mov
add
jl
bound
cdq
add
push
(bad)
lods
std
nop
inc
sti
ds
shr
pop
loop
mov
mov
sub
scas
mov
jl
es
ins
out
rcr
jge
pop
enter
xor
adc
test
out
adc
sar
add
iret
mov
sbb
je
xchg
and
mov
add
test
test
hlt
mov
or
sti
adc
adc
or
xchg
or
(bad)
shl
sbb
ja
aas
mov
add
xchg
lahf
and
mov
lods
dec
test
mov
(bad)
mov
mov
jo
push
dec
out
repz
retf
or
add
in
sub
mov
add
mov
sub
push
js
mov
(bad)
cld
inc
(bad)
jmp
fs
mov
mov
pop
jbe
jae
not
mov
sbb
or
fadd
push
cmps
cdq
mov
add
mov
ret
neg
mov
mov
sbb
loop
cmp
sbb
and
xchg
call
ficomp
lahf
sbb
mov
sbb
not
dec
popa
popa
push
mov
push
es
enter
rol
idiv
dec
loope
lahf
push
in
push
movs
pop
sub
shl
shr
xor
sbb
icebp
stos
push
xchg
ret
fsubr
dec
pop
inc
call
hlt
pop
mov
std
loopne
hlt
(bad)
mov
adc
dec
jnp
add
mov
call
jno
push
in
push
or
fs
out
movs
fcomp
scas
push
mov
dec
repnz
adc
stc
and
sbb
clc
or
cwde
mov
xor
std
xor
cdq
loope
mov
(bad)
and
movs
sub
and
push
dec
adc
pop
push
jne
rcl
push
lods
add
add
xchg
jno
push
xchg
sahf
gs
fisubr
pop
cmps
push
leave
div
dec
fs
mov
sbb
cmp
push
hlt
mov
cmp
mov
addr16
into
cli
call
mov
xchg
sub
adc
call
push
push
jae
adc
adc
(bad)
jecxz
outs
cdq
pushf
mov
xchg
fcmovu
adc
adc
inc
out
test
pop
out
cmps
dec
add
mov
pop
enter
xor
or
push
jb
outs
jmp
mov
ss
test
sub
cmp
jg
std
jnp
mov
movs
jmp
addr16
push
ret
push
test
mov
xor
in
into
out
push
and
test
mov
es
mov
int3
jb
cwde
and
push
in
dec
scas
push
gs
mov
mov
gs
xchg
jno
shr
jbe
adc
mov
or
mov
dec
pushf
mov
lock
xlat
inc
scas
test
pop
(bad)
shl
mov
push
mov
push
mov
ficom
imul
pop
loopne
test
sbb
(bad)
out
rol
nop
out
cmps
out
add
test
aad
cmp
inc
mov
sbb
jge
cmps
sahf
loopne
dec
adc
cmps
cmps
lahf
lea
cmp
mov
lahf
(bad)
call
mov
push
push
add
sub
outs
jmp
fnstenv
pop
dec
in
jmp
cdq
cmps
mov
aam
loop
rol
or
xor
push
and
fldenv
pushf
rep
cli
je
aam
loopne
mov
cs
jmp
addr16
pop
cmp
test
shl
cmp
xchg
in
xchg
ja
push
dec
cmp
(bad)
dec
lods
xchg
lds
int
sbb
push
iret
pusha
push
cmp
add
pop
jmp
mov
les
or
sub
idiv
test
retf
das
xor
mov
sub
jl
dec
jns
into
sub
jg
in
test
iret
or
sub
or
xchg
pop
push
faddp
sar
inc
push
mov
popa
cli
xchg
add
js
es
imul
mov
mov
push
pusha
scas
call
mov
adc
cld
push
cld
in
add
popf
adc
gs
jb
pop
aad
lods
arpl
add
jp
(bad)
sbb
aaa
fimul
xchg
call
sbb
iret
aam
ja
jo
loop
scas
outs
stc
pusha
or
popf
jne
pop
shl
xchg
pop
hlt
std
adc
xor
fs
adc
dec
or
adc
jne
mov
scas
jge
pop
mov
int
pusha
loope
cmps
das
mov
pusha
lds
fcmovnu
out
out
push
pop
jmp
or
repnz
sbb
cmp
(bad)
cld
mov
jne
retf
mov
cmp
jmp
mov
dec
xabort
mov
or
cmp
xor
rdmsr
push
cmps
repnz
push
jecxz
pop
push
jg
or
(bad)
out
and
push
or
adc
push
aas
aam
jne
mov
jge
add
pop
(bad)
jmp
xor
es
jge
inc
push
mov
stos
and
cdq
inc
rcr
pop
arpl
pushf
fxtract
xchg
popf
push
jno
pop
cdq
bound
add
stos
mov
ror
icebp
xchg
jge
(bad)
xor
int3
push
lahf
ins
mov
icebp
out
mov
fisubr
movs
aas
sub
mov
mov
out
and
movs
xchg
out
jmp
iret
loop
aas
test
jo
hlt
xor
lods
inc
out
scas
clc
shl
mov
and
arpl
dec
pushf
jno
movs
mov
add
and
xor
xor
retf
adc
les
xchg
sub
fiadd
popf
fidivr
in
cmc
cmps
data16
fst
inc
adc
xchg
xchg
sub
xlat
or
int
retf
ja
(bad)
das
inc
mov
arpl
stos
sub
mov
mov
add
pop
add
outs
pop
add
add
xor
push
jno
cwde
mov
inc
sbb
pop
movs
sbb
in
hlt
call
cmp
mov
inc
stos
sub
(bad)
movs
aaa
mov
test
push
ret
mov
mov
fcmovnu
stos
inc
mov
or
mov
inc
mov
xor
ds
stc
scas
mov
pop
cs
sbb
push
scas
in
ja
inc
(bad)
out
pop
lds
ss
fdiv
jge
dec
scas
ins
inc
xor
adc
cmps
xchg
jmp
xor
jle
ror
fdivr
ins
push
std
jo
dec
out
inc
adc
mov
mov
mov
mov
add
mov
mov
out
fidiv
shl
sbb
lods
adc
mov
or
push
sti
xor
inc
aam
mov
add
jno
mov
dec
adc
imul
jp
mov
mov
sbb
jg
es
scas
mov
aam
sub
icebp
xchg
cdq
pop
cmp
add
cmps
xchg
ror
fdiv
mov
mov
sbb
inc
jge
inc
lods
stos
push
mov
lods
xor
call
add
xor
or
cmp
and
pusha
add
in
and
xor
jmp
cmc
loope
and
(bad)
pop
sub
jno
mov
sub
fsub
jb
dec
jbe
add
inc
push
add
imul
in
pop
pop
arpl
mov
inc
scas
push
bound
fcomp
outs
pop
inc
mov
and
(bad)
push
inc
cs
pushf
push
dec
jno
cmp
mov
mov
push
call
aaa
dec
fsub
xor
ds
ret
les
stos
add
and
shl
fcomp
and
and
dec
cmp
(bad)
dec
loope
add
pop
lods
add
int
mov
stos
sbb
mov
ins
xor
lock
and
mov
rcr
jge
push
jmp
inc
sub
xchg
aad
push
jecxz
xor
gs
stos
sub
in
fmul
pop
mov
and
add
(bad)
mov
jp
sbb
(bad)
fdiv
fdivr
in
addr16
retf
mov
hlt
xchg
dec
into
sahf
sbb
(bad)
rol
push
jge
sbb
mov
jmp
xlat
add
fstp
arpl
lods
or
lods
jg
xor
xor
repnz
mov
fistp
rol
(bad)
fisubr
sub
jge
push
mov
add
mov
(bad)
int
out
shr
aaa
push
enter
rcl
fs
cmp
inc
sbb
test
sub
retf
and
std
or
xchg
jmp
or
fwait
add
retf
jmp
(bad)
mov
clc
xor
lods
jmp
adc
push
push
sub
push
bound
mov
int3
xchg
lods
frstor
jecxz
aad
out
and
hlt
ins
push
jp
lods
mov
stos
cli
hlt
retf
cmp
dec
hlt
or
ins
sahf
(bad)
pop
dec
mov
mov
es
sbb
mov
cmp
push
mov
dec
test
loope
cmps
out
push
push
aad
ss
push
mov
dec
pop
add
ja
call
adc
aas
adc
jo
loop
xor
xchg
xchg
mov
hlt
xchg
fstp
sub
pusha
scas
gs
call
jb
cmps
inc
mov
adc
shl
mov
xchg
sub
inc
or
xor
addr16
mov
inc
dec
push
into
sbb
adc
inc
jae
push
or
enter
pop
jb
adc
adc
mov
ds
mov
test
out
test
out
jp
inc
xchg
pop
or
mov
mov
xchg
fmul
mov
retf
sbb
pop
cld
mov
mov
sub
inc
outs
pop
stos
aad
jle
mov
aas
jl
shl
movs
dec
(bad)
pusha
cmp
mov
jnp
push
jbe
(bad)
mov
rcl
inc
js
(bad)
cmps
aam
push
cmp
adc
adc
cmp
jecxz
cs
pop
sub
in
enter
lahf
addr16
jne
aas
cmp
inc
sbb
lfs
in
fdivr
cld
aas
jle
jno
push
jle
out
xchg
(bad)
cli
sub
adc
movs
push
mov
pop
sub
sti
pop
js
in
jecxz
je
scas
clc
lock
jmp
stos
xor
ficom
lods
pop
pop
mov
dec
shl
or
mov
jns
fdiv
movs
sub
xor
push
xor
fs
mov
xor
cmc
xor
lds
fisub
mov
nop
fimul
xor
rcl
arpl
cwde
add
es
outs
push
packuswb
jnp
rcl
sbb
jmp
or
mov
hlt
mul
push
hlt
pushf
dec
jne
jns
sahf
mov
jno
cmp
add
in
push
pop
jmp
cmp
push
mov
repz
bound
(bad)
test
movs
cwde
rcr
xchg
push
pop
dec
push
xor
dec
test
mov
das
jns
push
xchg
sbb
je
hlt
sub
xor
fs
push
pop
cs
adc
sbb
dec
dec
loopne
repnz
push
(bad)
cmp
out
cmp
sbb
ins
adc
xor
jns
stc
pop
call
xor
sub
jp
in
ins
lods
outs
rol
repz
sbb
sub
sbb
scas
adc
jns
dec
dec
and
fucomi
cwde
mov
retf
mov
fdivr
push
mov
pushf
push
enter
pop
pop
jae
sar
add
jmp
cmp
xor
jae
(bad)
aam
jmp
push
xchg
cmps
mov
outs
stos
hlt
cs
sbb
adc
ja
and
cmps
shr
je
inc
push
sub
sbb
dec
or
or
xor
(bad)
adc
jno
cmps
test
ja
mov
mov
or
clc
retf
xor
jp
add
pop
(bad)
std
ficom
out
gs
push
add
call
cmp
mov
fst
retf
cwde
aad
mov
fisttp
imul
inc
add
add
add
add
fwait
push
inc
gs
dec
js
pop
dec
xor
xor
dec
cdq
iretw
adc
xchg
fs
jne
pop
jne
xchg
dec
push
loopne
gs
or
adc
ja
cdq
or
push
retf
out
mov
jle
mov
sub
ffree
test
ret
push
xchg
mov
dec
mov
or
mov
js
dec
pop
sub
les
push
mov
or
scas
and
jb
mov
pushf
data16
add
fisubr
scas
or
fcom
stc
mov
push
int
sahf
xor
xor
jge
xor
enter
popf
cmp
scas
test
or
repnz
fs
jmp
push
add
jne
push
add
push
ficom
stos
and
pop
retf
sahf
shl
nop
inc
bound
push
movs
mov
inc
sbb
mov
and
push
add
loop
popa
ins
dec
mov
sti
or
adc
xchg
jnp
mov
stos
into
into
mov
jae
cmp
mov
dec
adc
out
int
inc
fdiv
xchg
adc
mov
fld
movs
and
call
fsubr
xchg
mov
push
test
push
pusha
enter
sbb
mov
pop
jmp
(bad)
adc
popa
cmp
fbld
stc
sub
movs
or
fadd
sub
add
mov
shl
mov
shr
xchg
mov
sub
adc
pop
into
sub
pop
bound
pop
jns
adc
dec
fild
in
sbb
or
gs
mov
mov
jbe
mov
addr16
mov
cmp
lds
sbb
push
push
sub
fbstp
sub
arpl
fcomp
xchg
mov
repz
cmp
movs
sti
sub
imul
jecxz
sbb
scas
jno
sub
gs
movs
add
add
or
ror
sti
out
cmp
js
cwde
in
test
daa
push
push
jp
pop
jmp
lods
idiv
adc
(bad)
leave
xlat
aad
push
inc
std
aaa
mov
or
stc
call
jo
dec
xchg
in
jg
lock
imul
mov
leave
loope
push
or
sub
fwait
push
xor
in
pop
and
and
ins
sub
pop
mov
aas
dec
out
(bad)
mov
add
add
mov
outs
push
imul
bound
sub
dec
js
inc
cmps
aad
std
jae
call
js
pop
inc
pop
aaa
adc
call
adc
dec
sbb
mov
mov
and
cmp
inc
push
cmps
(bad)
cmp
dec
cmps
lock
push
cmp
jge
xor
xchg
mov
mov
add
(bad)
mov
(bad)
loopne
arpl
pop
ins
adc
test
pop
cmp
imul
inc
leave
jno
cdq
push
int
lods
xchg
dec
aam
imul
jmp
cmc
in
pushf
stos
into
jge
inc
in
mov
adc
jecxz
iret
cmp
pop
sub
(bad)
dec
sbb
pusha
xchg
nop
or
mov
sub
add
mov
sbb
repnz
fdivr
int3
mov
fwait
popf
loope
push
push
movs
(bad)
mov
pop
aam
add
add
push
stos
cwde
or
in
adc
mov
imul
test
sbb
aas
in
dec
rcl
xchg
mov
push
movaps
jbe
mov
cwde
sub
sbb
mov
sbb
jge
pop
call
mov
adc
pop
(bad)
mov
and
jg
xchg
xor
pop
retf
fsubr
adc
outs
movs
mov
fldcw
or
xor
xchg
push
addr16
jo
and
loop
xor
add
imul
stos
mov
or
xor
(bad)
call
nop
mov
adc
call
push
add
retf
jns
fimul
enter
pop
xchg
jmp
iret
sub
jle
mov
sbb
jbe
xchg
cmp
sub
pop
xor
stc
std
fcom
jae
out
fstp
fldenv
mov
jmp
retf
inc
mov
dec
out
stos
sbb
outs
sub
repnz
adc
pusha
inc
jp
in
xor
mov
adc
mov
sbb
and
scas
sti
popa
mov
into
dec
push
cmps
pushf
mov
inc
xlat
jmp
ja
aas
push
rol
enter
and
aam
dec
popf
cmp
xchg
sub
imul
test
xchg
mov
pop
pop
push
data16
adc
out
in
movs
mov
popf
jmp
dec
inc
adc
ficom
icebp
jecxz
out
mov
or
dec
pop
push
call
and
lahf
fisttp
jnp
pop
xchg
ins
fld
push
(bad)
mov
sub
cmp
not
pop
xor
xor
stos
mov
repz
xchg
or
xchg
dec
sub
mov
lahf
inc
sub
neg
pop
in
or
popa
movs
pusha
push
mov
xor
movs
out
popf
movs
stos
pop
adc
aas
ins
fld
arpl
and
(bad)
push
or
mov
aam
fwait
retf
fst
jl
icebp
retf
pop
add
add
jp
jl
xchg
mov
gs
xchg
aam
cwde
enter
mov
jo
lods
push
and
rcl
mov
jnp
ror
and
or
in
dec
loopne
mov
test
mov
xor
xchg
mov
fst
mov
xchg
lea
jns
add
retf
pop
adc
xchg
loop
push
push
inc
gs
cmc
jge
test
pop
mov
mov
inc
sahf
in
inc
inc
add
pop
shl
mov
pop
push
sti
leave
lahf
loop
(bad)
in
movs
(bad)
push
pop
add
stc
hlt
jo
cwde
mov
dec
aas
fimul
loopne
mov
xor
mov
je
sub
or
mov
xchg
lahf
xor
icebp
xchg
(bad)
mov
mov
loopne
pop
lahf
add
jmp
dec
mov
pop
test
rcr
push
psubq
add
(bad)
iret
xor
call
cmp
xor
pop
sbb
or
shl
and
mov
jne
jmp
dec
mov
and
pusha
mov
stos
cli
test
(bad)
shr
push
aam
and
ffreep
rcr
push
cmc
mov
popf
dec
inc
or
pushf
outs
loope
jmp
inc
std
add
add
daa
loope
test
sub
pop
loop
imul
lea
jmp
xchg
ss
sahf
iret
stc
or
ret
(bad)
or
xchg
add
add
push
add
mov
ja
mov
xchg
ficom
mov
imul
cli
inc
out
fnsave
sub
(bad)
pop
ins
out
push
push
ins
mov
jg
or
retf
into
mov
enter
lods
add
pop
sub
push
sbb
jnp
xlat
inc
ror
outs
ret
int
popf
or
shl
pop
sbb
cmps
(bad)
jl
mov
push
icebp
jno
mov
pop
jp
(bad)
push
and
ins
push
xchg
cmp
jbe
xor
repnz
rcl
test
imul
test
fstp
or
jno
dec
int
outs
data16
data16
dec
dec
inc
mov
mov
mov
push
shl
sub
mov
adc
cmp
push
mov
loop
mov
lahf
add
sub
sub
or
pop
scas
jge
jne
adc
pop
das
das
ja
add
aas
pop
(bad)
and
xchg
xchg
adc
stos
adc
pop
or
clc
or
cwde
sti
cwde
stos
test
mov
or
addr16
test
shl
lahf
sbb
std
push
cmc
into
xor
dec
into
cmp
and
lea
sub
adc
xchg
mov
adc
lock
jbe
stc
jae
jl
cmps
xor
push
clc
sti
cmp
sti
arpl
in
out
in
pop
cdq
lods
xchg
das
xor
sub
shl
outs
es
dec
mov
arpl
mov
push
in
ret
mov
sub
and
adc
push
sub
or
sub
push
test
pop
es
pop
xchg
in
jb
leave
sbb
or
scas
lods
pop
cmps
dec
movs
cmp
jne
jne
or
pop
mov
hlt
xor
outs
mov
test
jmp
movs
mov
mov
ds
pusha
out
sti
nop
xchg
jge
imul
(bad)
enter
mov
jns
aad
mov
fistp
dec
fwait
ja
cmp
out
sub
or
inc
and
mov
test
inc
dec
add
jbe
mov
and
cmps
cld
popa
ja
mov
mov
jae
cmp
sub
fwait
test
imul
scas
loopne
dec
mov
jecxz
in
inc
mov
cmps
fild
sub
xchg
pop
cmp
mov
mov
and
ja
jmp
adc
and
aaa
xchg
int
loope
fst
jae
mov
fisubr
fld
inc
jmp
fiadd
fisubr
xor
and
xor
(bad)
retf
sahf
pop
lods
out
sub
add
movs
add
sub
jb
outs
lea
adc
push
xchg
test
not
mov
add
stos
(bad)
xor
jge
xlat
mov
sbb
fs
xchg
test
push
jmp
sub
push
daa
adc
loopne
movq
xchg
and
jmp
fs
fsubr
sti
jb
stc
sbb
push
mov
xor
or
mov
sbb
add
imul
sub
fwait
hlt
sub
dec
push
pop
push
push
xrelease
xchg
call
add
mov
les
daa
leave
jne
xor
or
cwde
lods
(bad)
mov
cmps
cld
inc
jne
xchg
dec
mov
stos
xchg
adc
adc
(bad)
test
mov
neg
jbe
jno
dec
dec
and
mov
sbb
pop
jl
jecxz
loope
idiv
cs
rol
cmps
add
and
xchg
dec
xchg
mov
cld
and
adc
xchg
and
push
inc
aam
mov
les
adc
ret
or
test
and
inc
mov
addr16
pop
bswap
mov
adc
test
movs
adc
mov
jle
push
(bad)
cmp
out
hlt
daa
mov
pop
add
imul
shl
loope
lods
or
dec
mov
push
xchg
fcomp
(bad)
fst
mov
push
ja
test
loop
xor
mov
xlat
jne
dec
inc
cmp
mov
push
std
in
mov
jl
mov
push
sbb
imul
mov
mov
sub
mov
add
cmc
addr16
ins
js
inc
xor
fistp
ds
popa
xchg
imul
pop
sbb
popf
rcr
push
jno
xchg
hlt
mov
dec
cmp
fucomi
cmp
add
add
cmps
rcr
shr
js
pop
ins
jbe
in
dec
aad
shl
sti
int
clc
jecxz
sti
inc
not
add
mov
outs
and
(bad)
sbb
mov
or
mov
cmp
call
mov
xchg
test
add
sahf
mov
into
stc
sbb
and
dec
pop
adc
jns
xlat
lock
mul
fistp
sahf
push
movs
cmps
lods
pop
push
sub
dec
pushf
xchg
mov
in
scas
mov
add
or
add
pusha
jne
fstp
jmp
outs
pop
push
push
dec
adc
mov
jl
jmp
jae
mov
dec
xchg
call
mov
add
test
inc
arpl
das
mov
fimul
fwait
mov
mov
rol
call
pushf
xor
mul
cld
push
xchg
mov
rcr
adc
call
fidiv
in
or
dec
pop
retf
mov
xlat
aad
add
dec
stc
or
add
push
push
push
dec
nop
lahf
scas
mov
inc
rcr
jg
adc
stos
pop
repz
mov
cmp
les
jecxz
mov
adc
add
aam
jp
aam
loopne
scas
movs
div
rcr
idiv
push
jl
dec
mov
arpl
mov
jmp
div
cmp
dec
adc
int
dec
dec
jmp
nop
mov
aas
xchg
sbb
mov
in
lds
add
cmp
cmp
pop
xchg
popf
push
retf
loope
ins
add
mov
das
mov
lods
fdivr
mov
arpl
fisttp
sub
mov
xlat
shl
pop
stc
sub
sti
fwait
cmp
mov
and
mov
ins
jno
jns
mov
stos
push
adc
js
pop
sub
or
vunpckhps
mov
icebp
push
cs
shl
ret
clc
(bad)
adc
lea
push
imul
inc
mov
ror
pop
(bad)
iret
std
adc
pop
js
mov
pop
mov
mov
add
(bad)
rcr
pushf
not
cmps
pop
push
retf
repz
dec
xlat
pop
nop
stos
sub
ins
mov
std
shl
fdivr
push
cmps
add
lods
cmp
dec
call
inc
mov
or
stos
jbe
mov
adc
mov
push
movs
(bad)
js
or
dec
test
cmp
in
cld
out
dec
cmp
fistp
ds
xchg
loopne
jg
xchg
jle
cmps
shl
(bad)
adc
push
pop
dec
in
xor
lods
push
ja
ret
popf
adc
retf
lock
mov
sar
arpl
sub
std
popa
cmp
inc
inc
gs
fwait
das
aaa
fwait
mov
repz
icebp
jnp
nop
pop
outs
fcomi
push
repz
je
push
rcl
enter
push
mov
aas
adc
cmp
mov
jmp
mov
sahf
push
adc
(bad)
bound
xchg
(bad)
sub
add
push
sbb
sbb
mov
dec
stc
xor
loopne
mov
xchg
xlat
xchg
and
dec
.byte
lahf
.byte
